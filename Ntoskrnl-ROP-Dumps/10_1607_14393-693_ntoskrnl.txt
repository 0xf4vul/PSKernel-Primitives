Gadgets information
============================================================
0x000002000014802a : adc ah, al ; add byte ptr [rax], al ; ret
0x00000200006eee1c : adc ah, byte ptr [rax] ; cmp bh, bh ; adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x00000200006eef00 : adc ah, byte ptr [rax] ; ret 0xff
0x00000200006eee20 : adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x00000200006321a1 : adc ah, byte ptr [rbx] ; add r10, rcx ; jmp r10
0x0000020000680064 : adc ah, byte ptr [rcx + rax] ; ret
0x000002000019c29a : adc ah, byte ptr [rcx - 0x49f0000c] ; ret
0x00000200005ac29a : adc ah, byte ptr [rdi] ; cld ; dec dword ptr [rbx - 0x36c1735] ; ret 0x4cff
0x0000020000147f2a : adc ah, cl ; add byte ptr [rax], al ; ret
0x000002000042ec6a : adc ah, dh ; ret
0x0000020000084356 : adc ah, dh ; sub dword ptr [rax], eax ; mov dword ptr [r9], eax ; ret
0x00000200004da682 : adc al, 0 ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001621ff : adc al, 0 ; add byte ptr [rax - 0x17], al ; ret
0x000002000060ed24 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000001a1b0 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000be148 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x0000020000519afa : adc al, 0 ; add byte ptr [rax], al ; call 0x20000148177
0x000002000051d8f5 : adc al, 0 ; add byte ptr [rax], al ; call 0x20000148377
0x000002000017d1b3 : adc al, 0 ; add byte ptr [rax], al ; ret
0x000002000040211a : adc al, 0 ; add byte ptr [rbp - 0x4077f040], al ; ret 0x18
0x000002000002675f : adc al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000024151 : adc al, 0 ; add rsp, 0x28 ; ret
0x0000020000608ece : adc al, 0 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004841e8 : adc al, 0 ; add rsp, 0x38 ; pop rsi ; pop rbx ; ret
0x00000200005fcf43 : adc al, 0 ; call 0x2000022ba9d
0x000002000001e159 : adc al, 0 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000024af9 : adc al, 0 ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000018056 : adc al, 0 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001a11c : adc al, 0 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000479840 : adc al, 0 ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000017baa : adc al, 0 ; mov eax, r8d ; add rsp, 0x28 ; ret
0x000002000001bc3f : adc al, 0 ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x00000200000239cf : adc al, 0 ; mov r8, r14 ; mov rcx, rbx ; call rax
0x000002000047bac3 : adc al, 0 ; mov rcx, qword ptr [rsp + 0x48] ; call 0x200000e7da9
0x0000020000436833 : adc al, 0 ; mov rcx, rbx ; call 0x20000061bf8
0x0000020000484dc4 : adc al, 0 ; mov rcx, rsi ; call 0x2000005107b
0x0000020000484dc3 : adc al, 0 ; mov rcx, rsi ; call 0x2000005107c
0x0000020000484dc2 : adc al, 0 ; mov rcx, rsi ; call 0x2000005107d
0x0000020000009926 : adc al, 0 ; ret
0x0000020000026fd6 : adc al, 0 ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000600abb : adc al, 0 ; xor eax, eax ; ret
0x0000020000078478 : adc al, 0x10 ; xor eax, dword ptr [rax] ; call rax
0x0000020000412c44 : adc al, 0x18 ; add bh, bh ; ret 0xe2eb
0x00000200006e17b8 : adc al, 0x1b ; call 0x2000024da44
0x00000200004477a0 : adc al, 0x1b ; idiv bh ; call rax
0x0000020000674e8c : adc al, 0x23 ; ret 0x8948
0x0000020000157146 : adc al, 0x25 ; add byte ptr [rcx], 0 ; add al, ch ; ret
0x00000200004bec15 : adc al, 0x2b ; ret 0x341
0x0000020000157bbd : adc al, 0x2b ; ret 0xccc3
0x00000200006f7788 : adc al, 0x32 ; ret 0xebff
0x000002000022a5b4 : adc al, 0x33 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000405153 : adc al, 0x3b ; ret 0x7372
0x00000200001d28c1 : adc al, 0x41 ; cmp eax, 4 ; je 0x200001d28d4 ; xor eax, eax ; ret
0x000002000012ab82 : adc al, 0x41 ; mov eax, dword ptr [rcx + 0x18] ; mov dword ptr [rdx + rcx + 0x1c], eax ; ret
0x0000020000136064 : adc al, 0x41 ; mov eax, eax ; add rsp, 0x28 ; ret
0x0000020000026634 : adc al, 0x44 ; cmp eax, ecx ; jb 0x2000002661b ; ret
0x0000020000026633 : adc al, 0x44 ; cmp eax, ecx ; jb 0x2000002661c ; ret
0x0000020000454deb : adc al, 0x48 ; add ecx, 0x60 ; call 0x2000007f5c4
0x0000020000033d3d : adc al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000069953 : adc al, 0x48 ; add esp, 0x28 ; ret
0x00000200003d3fa9 : adc al, 0x48 ; mov dword ptr [rcx + 0x70], eax ; mov dword ptr [rcx + 0x78], eax ; ret
0x00000200004fbf7e : adc al, 0x48 ; mov ecx, dword ptr [rbp - 0x30] ; call 0x200001208c8
0x00000200005e5f97 : adc al, 0x48 ; mov ecx, esi ; call 0x2000020cc8f
0x0000020000213e90 : adc al, 0x49 ; add eax, 0x14 ; jmp 0x20000213ec6
0x000002000021c76c : adc al, 0x49 ; and esp, 0xfffffffe ; jmp 0x2000021c780
0x00000200001c99d1 : adc al, 0x49 ; mov eax, ecx ; add rsp, 0x28 ; ret
0x00000200000343da : adc al, 0x4c ; mov dword ptr [rax + 8], eax ; ret
0x0000020000494648 : adc al, 0x50 ; add dx, cx ; movzx eax, dx ; ret
0x0000020000522528 : adc al, 0x50 ; ret
0x00000200003fa751 : adc al, 0x56 ; add dx, r8w ; movzx r8d, dx ; jmp 0x200003fa706
0x00000200006f4a6a : adc al, 0x5f ; ret 0xa2ff
0x00000200000f70ab : adc al, 0x63 ; str word ptr [rax + 3] ; int 0xff
0x00000200001b4266 : adc al, 0x72 ; xor al, 0xf7 ; ret 0x820
0x000002000005ced9 : adc al, 0x74 ; adc dword ptr [rdi], ecx ; mov bh, 0x48 ; add al, byte ptr [rcx - 1] ; ret
0x000002000050426f : adc al, 0x75 ; or bh, bh ; ret
0x0000020000615ae8 : adc al, 0x75 ; ret
0x0000020000036ef9 : adc al, 0x7c ; in al, -1 ; ret
0x0000020000075ea6 : adc al, 0x7f ; xor al, 0x2b ; ret
0x00000200001c8902 : adc al, 0x81 ; call rcx
0x000002000023727d : adc al, 0x81 ; jmp qword ptr [rbx]
0x00000200003f6555 : adc al, 0x83 ; ret 0xe9c9
0x00000200006d39d5 : adc al, 0x85 ; sal byte ptr [rbp + 0x70], 0x8b ; push rdx ; sbb al, 0x8b ; ret 0x25
0x000002000070ff93 : adc al, 0x88 ; ret
0x00000200006783a2 : adc al, 0x89 ; and al, 0x20 ; call 0x200002045bf
0x00000200006783a1 : adc al, 0x89 ; and al, 0x20 ; call 0x200002045c0
0x0000020000231780 : adc al, 0x89 ; mov dword ptr [r8], edx ; ret
0x000002000043b6da : adc al, 0x8a ; add dword ptr [rax - 1], ecx ; ret 0x8841
0x0000020000157bba : adc al, 0x8b ; push rdx ; adc al, 0x2b ; ret 0xccc3
0x000002000046b05d : adc al, 0x8b ; ret
0x0000020000551737 : adc al, 0x8b ; ret 0x348
0x0000020000485554 : adc al, 0x8b ; ror dword ptr [rax - 0x75], -0x7c ; ret 0x9540
0x000002000043744c : adc al, 0x9c ; lock inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x000002000021a376 : adc al, 0xa8 ; add dword ptr [rbp + 3], esi ; xor eax, eax ; ret
0x000002000052c128 : adc al, 0xb4 ; ret 0x8bff
0x000002000052c028 : adc al, 0xb5 ; ret 0x8bff
0x00000200004628a3 : adc al, 0xb9 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000008e15d
0x0000020000488a57 : adc al, 0xbe ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000167301 : adc al, 0xc0 ; mov r8d, edx ; xor edx, edx ; call r10
0x0000020000130d9d : adc al, 0xc1 ; jbe 0x20000130d98 ; add eax, -1 ; jne 0x20000130da0 ; ret
0x00000200000087f3 : adc al, 0xc1 ; test rdx, rdx ; jne 0x20000008806 ; xor eax, eax ; ret
0x0000020000022277 : adc al, 0xc2 ; call r10
0x000002000016d826 : adc al, 0xc2 ; jmp 0x2000016d839
0x000002000056971a : adc al, 0xc3 ; mov eax, 2 ; ret
0x00000200000fceca : adc al, 0xc3 ; shl rax, 0xa ; ret
0x0000020000222007 : adc al, 0xc8 ; add rsp, 0x28 ; ret
0x000002000021b1b4 : adc al, 0xc9 ; cmovne r8d, eax ; mov eax, r8d ; ret
0x000002000057be08 : adc al, 0xcd ; sbb al, 0 ; call 0x200000e8066
0x00000200007bb13c : adc al, 0xda ; ret
0x000002000049bbaf : adc al, 0xdb ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005abc98 : adc al, 0xe3 ; jmp 0x200411db3a3
0x000002000041e6b4 : adc al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000020000524db1 : adc al, 0xe8 ; mov dword ptr [rdi], esp ; ret
0x000002000040b23d : adc al, 0xe8 ; pop rcx ; ret
0x000002000019bf18 : adc al, 0xe9 ; out 0x34, al ; dec dword ptr [rax - 0x75] ; ret
0x0000020000428913 : adc al, 0xeb ; mov edi, esi ; shl dword ptr [rbx], cl ; ret
0x00000200006cd398 : adc al, 0xeb ; or dh, dh ; ret
0x0000020000181177 : adc al, 0xed ; dec dword ptr [rcx - 0x7f] ; jmp rax
0x000002000042d856 : adc al, 0xf ; mov dh, 0x41 ; add qword ptr [r10 + 0x18], r8 ; ret
0x00000200007295d0 : adc al, 0xf ; scasd eax, dword ptr [rdi] ; ret 0xc82b
0x00000200004b02da : adc al, 0xf ; test bl, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x00000200005dea28 : adc al, 0xf0 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000055821 : adc al, 0xf6 ; ret
0x000002000021a8fb : adc al, 0xf6 ; ret 0x7408
0x000002000049a06d : adc al, 0xf6 ; ret 0xf01
0x00000200006095c1 : adc al, 0xf7 ; ret
0x000002000045196e : adc al, 0xff ; ret
0x000002000055630a : adc al, 0xff ; ret 0x8349
0x00000200000f96b4 : adc al, 0xff ; ret 0x8b41
0x000002000000fabc : adc al, 2 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000045ea1e : adc al, 3 ; ret
0x00000200005d3fc8 : adc al, 6 ; ret 0x90ff
0x00000200000035d6 : adc al, 9 ; and edx, 8 ; je 0x200000035cd ; mov al, 1 ; ret
0x0000020000149c2a : adc al, ah ; add byte ptr [rax], al ; ret
0x000002000014a02a : adc al, al ; add byte ptr [rax], al ; ret
0x0000020000705140 : adc al, al ; dec dword ptr [rbp + rcx*4 + 0x15] ; ret 0xbf36
0x000002000014992a : adc al, bh ; add byte ptr [rax], al ; ret
0x0000020000149d2a : adc al, bl ; add byte ptr [rax], al ; ret
0x000002000043bbf7 : adc al, bl ; add rax, rdx ; jmp 0x2000043bbea
0x00000200004385d9 : adc al, bpl ; outsb dx, byte ptr [rsi] ; ret 0x33ff
0x0000020000691b5d : adc al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x4466
0x000002000049ad2a : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000002000000296a : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000489a4f : adc al, byte ptr [rax] ; add byte ptr [rbx - 0x7abe992d], cl ; ret 0x850f
0x000002000078986d : adc al, byte ptr [rax] ; add byte ptr [rbx], dh ; leave ; call 0x200000c5b2f
0x0000020000621585 : adc al, byte ptr [rax] ; add rax, qword ptr [rip - 0x3002a6] ; ret
0x0000020000051991 : adc al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003ecb7 : adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000002000000c261 : adc al, byte ptr [rax] ; add rsp, 0x308 ; ret
0x0000020000010599 : adc al, byte ptr [rax] ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000001a683 : adc al, byte ptr [rax] ; add rsp, 0x58 ; ret
0x0000020000013dbc : adc al, byte ptr [rax] ; add rsp, 0x88 ; ret
0x00000200004b2369 : adc al, byte ptr [rax] ; call 0x200004b23f8
0x00000200001d2098 : adc al, byte ptr [rax] ; je 0x200001d20ab ; mov eax, 0xc0000354 ; ret
0x000002000001513e : adc al, byte ptr [rax] ; jmp 0x20000014ff7
0x000002000002607e : adc al, byte ptr [rax] ; jmp 0x20000026048
0x000002000003eca3 : adc al, byte ptr [rax] ; lea eax, dword ptr [rcx + 1] ; ret
0x000002000003e2b7 : adc al, byte ptr [rax] ; mov al, r8b ; ret
0x00000200000572f6 : adc al, byte ptr [rax] ; mov eax, 0xc0000225 ; ret
0x0000020000056f0d : adc al, byte ptr [rax] ; mov eax, 1 ; ret
0x00000200001da92a : adc al, byte ptr [rax] ; mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x0000020000053992 : adc al, byte ptr [rax] ; mov rax, rcx ; ret
0x000002000003deea : adc al, byte ptr [rax] ; ret
0x0000020000622645 : adc al, byte ptr [rax] ; test rax, rax ; je 0x20000622657 ; jmp qword ptr [rax]
0x0000020000043fc8 : adc al, byte ptr [rax] ; xor al, al ; ret
0x000002000004321c : adc al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200005f4e7a : adc al, byte ptr [rbp + 0x24840fc0] ; ret 0xfff5
0x00000200000fa05e : adc al, byte ptr [rbx] ; add byte ptr [rax], al ; jne 0x200000fa06f ; xor eax, eax ; ret
0x00000200003c90d4 : adc al, byte ptr [rcx + 0x3b] ; ret
0x00000200005b6ad1 : adc al, byte ptr [rcx + 0x3b] ; ret 0x820f
0x000002000006ca56 : adc al, byte ptr [rcx + 0xf] ; mov bh, 0x42 ; add al, byte ptr [rcx - 1] ; ret
0x00000200005db9a2 : adc al, byte ptr [rcx + 0xf] ; mov bh, 0x45 ; add byte ptr [rcx + 3], al ; ret
0x00000200000723f7 : adc al, byte ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000002000014c8b5 : adc al, byte ptr [rcx - 0x7d] ; ret
0x0000020000443c6f : adc al, byte ptr [rcx - 1] ; ret 0x8349
0x000002000013fc92 : adc al, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000019b0e4 : adc al, byte ptr [rcx] ; dec dword ptr [rbp + rcx*4 + 5] ; ret 0xb
0x0000020000076437 : adc al, byte ptr [rdi + rcx - 0x49] ; ret
0x00000200007bbb02 : adc al, byte ptr [rip - 0x74bb004c] ; ret
0x00000200005cac49 : adc al, ch ; adc esp, edx ; mov cl, 0xff ; call 0x200000e6eb8
0x0000020000149b2a : adc al, ch ; add byte ptr [rax], al ; ret
0x0000020000592e85 : adc al, ch ; loope 0x20000592e8a ; ret
0x00000200004c74a4 : adc al, ch ; mov dh, 0xb ; ret 0xe8ff
0x00000200004385da : adc al, ch ; outsb dx, byte ptr [rsi] ; ret 0x33ff
0x000002000044c9eb : adc al, ch ; pop qword ptr [rsi] ; ret
0x00000200005fadc1 : adc al, ch ; push rcx ; ret 0xffe6
0x00000200003eaead : adc al, ch ; ret
0x0000020000202180 : adc al, ch ; ret 0x1ffc
0x0000020000639050 : adc al, ch ; ret 0xe2df
0x000002000040b2f7 : adc al, ch ; ret 0xffd4
0x00000200004bea72 : adc al, ch ; sbb ah, bh ; ret 0x84ff
0x00000200004f5921 : adc al, ch ; sbb eax, 0x8148ffc0 ; ret
0x000002000062f907 : adc al, ch ; scasd eax, dword ptr [rdi] ; ret
0x00000200001f2f8a : adc al, ch ; shl bl, 1 ; in eax, dx ; dec dword ptr [rax - 0x7f] ; ret
0x000002000062f921 : adc al, ch ; xchg eax, ebp ; ret
0x0000020000149f2a : adc al, cl ; add byte ptr [rax], al ; ret
0x0000020000149a2a : adc al, dh ; add byte ptr [rax], al ; ret
0x0000020000149e2a : adc al, dl ; add byte ptr [rax], al ; ret
0x000002000040b2f6 : adc al, r13b ; ret 0xffd4
0x000002000003d4c5 : adc bh, bh ; add rsp, 0x20 ; pop rbx ; ret
0x000002000079fe47 : adc bh, bh ; je 0x200007c57b6 ; ret
0x000002000001675b : adc bh, bh ; ret
0x000002000003e0ab : adc bh, bh ; ret 0x44c6
0x00000200000c831c : adc bh, bh ; ret 0x8b4c
0x00000200005a8647 : adc bh, bh ; ret 0xca8b
0x0000020000185af4 : adc bh, bh ; ret 0xd03b
0x000002000060eaef : adc bh, bh ; ret 0xff48
0x00000200001b6e71 : adc bh, bh ; ret 0xff49
0x00000200000c3dbd : adc bh, bh ; ret 0xffb8
0x00000200005ed52d : adc bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; adc byte ptr [rcx + 0x3b], al ; ret 0xe772
0x00000200007015c6 : adc bh, bl ; ret
0x0000020000781f44 : adc bh, byte ptr [rbx] ; ret
0x00000200006f7962 : adc bh, byte ptr [rcx] ; ret
0x000002000062b329 : adc bh, byte ptr [rdx + 0x706d644c] ; call 0x2000024d009
0x00000200007118be : adc bh, byte ptr [rdx - 0x3fccffff] ; ret
0x0000020000044da2 : adc bh, ch ; ret
0x00000200004cec89 : adc bh, dh ; ret 0x3fc
0x0000020000183006 : adc bh, dh ; ret 0xffc9
0x000002000014842a : adc bl, ah ; add byte ptr [rax], al ; ret
0x000002000014882a : adc bl, al ; add byte ptr [rax], al ; ret
0x00000200001b33fd : adc bl, al ; and qword ptr [r8], 0 ; ret
0x00000200004fe398 : adc bl, al ; lea rax, qword ptr [rip - 0x1df101] ; ret
0x00000200003db7ea : adc bl, al ; mov al, 8 ; ret
0x0000020000442879 : adc bl, al ; xor eax, eax ; ret
0x000002000014812a : adc bl, bh ; add byte ptr [rax], al ; ret
0x000002000014852a : adc bl, bl ; add byte ptr [rax], al ; ret
0x00000200004a737c : adc bl, bl ; ret
0x00000200007a701e : adc bl, bpl ; add eax, 0xff098b48 ; ret
0x000002000052606a : adc bl, byte ptr [rax] ; ret
0x00000200003df7b7 : adc bl, byte ptr [rdx] ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000000c981
0x000002000014832a : adc bl, ch ; add byte ptr [rax], al ; ret
0x00000200006aaf6a : adc bl, ch ; add ch, bl ; add al, 0x8b ; ret
0x00000200007a701f : adc bl, ch ; add eax, 0xff098b48 ; ret
0x00000200007990be : adc bl, ch ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200005128ed : adc bl, ch ; fld qword ptr [rbx] ; ret 0xdfeb
0x000002000000ba95 : adc bl, ch ; int1 ; ret
0x000002000060e538 : adc bl, ch ; ret
0x000002000021c852 : adc bl, ch ; sub byte ptr [rax - 0x73], cl ; mov bh, bh ; ret
0x000002000014872a : adc bl, cl ; add byte ptr [rax], al ; ret
0x000002000014822a : adc bl, dh ; add byte ptr [rax], al ; ret
0x000002000014862a : adc bl, dl ; add byte ptr [rax], al ; ret
0x00000200001037b3 : adc bl, dl ; loop 0x200001037be ; ret 0x8389
0x00000200001b2fd7 : adc bpl, al ; ret 0xf880
0x00000200000a13c6 : adc byte ptr [r11 + 0xb4803e0], al ; ret 0x8949
0x00000200000724a3 : adc byte ptr [r11 + 0xb4903e0], al ; ret 0x8949
0x00000200006210bc : adc byte ptr [r11], al ; ret
0x0000020000628ea6 : adc byte ptr [r11], bpl ; ret 0x348
0x00000200000dc682 : adc byte ptr [r11], bpl ; ret 0x8948
0x00000200004d23c4 : adc byte ptr [r11], r14b ; shr al, cl ; ret
0x000002000049b71c : adc byte ptr [r11], r15b ; ret
0x0000020000075f4c : adc byte ptr [r11], r8b ; ret
0x0000020000075e96 : adc byte ptr [r11], r8b ; ret 0xf633
0x00000200001d28ed : adc byte ptr [r11], sil ; rol byte ptr [rcx + 0x38], cl ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc28b
0x00000200000df1ad : adc byte ptr [r13 + 0x3b], cl ; ret 0x840f
0x0000020000161ec6 : adc byte ptr [r13 + 5], sil ; lea rax, qword ptr [r9 - 8] ; ret
0x000002000061b262 : adc byte ptr [r13 - 0x11], sil ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000bc30 : adc byte ptr [r13 - 0x73], cl ; adc byte ptr [r8 - 0x7d], cl ; ret 0x4918
0x00000200003ed412 : adc byte ptr [r13 - 9], sil ; mov eax, 1 ; ret
0x0000020000231a25 : adc byte ptr [r14 + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000200005443f0 : adc byte ptr [r14 + rax + 0x48], sil ; add esp, 0x40 ; pop rbx ; ret
0x00000200005b528b : adc byte ptr [r14], al ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x8941
0x00000200006f6e93 : adc byte ptr [r15 + rcx - 0x49], r8b ; ret
0x000002000003176a : adc byte ptr [r15], cl ; adc dword ptr [rdx + 0x10], ecx ; ret
0x00000200000e6a84 : adc byte ptr [r8 + 0x23], cl ; ret 0x3148
0x000002000003d6e5 : adc byte ptr [r8 + 0x23], cl ; ret 0x3b48
0x0000020000453d4e : adc byte ptr [r8 + 0x2b], cl ; ret
0x000002000014555e : adc byte ptr [r8 + 0x33], cl ; ret 0x3348
0x00000200000c7afd : adc byte ptr [r8 + 0x3b], cl ; ret 0x1e77
0x0000020000435291 : adc byte ptr [r8 + 0x3b], cl ; ret 0x9577
0x00000200000366b7 : adc byte ptr [r8 + 0x3b], cl ; ret 0x9d74
0x00000200000366ae : adc byte ptr [r8 + 0x3b], cl ; ret 0xe75
0x000002000014e99c : adc byte ptr [r8 + 0xf], cl ; ret
0x0000020000210546 : adc byte ptr [r8 + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x00000200001b18a9 : adc byte ptr [r8 + 1], cl ; adc dword ptr [rcx - 1], eax ; ret 0x8d48
0x000002000061b2a2 : adc byte ptr [r8 + 3], cl ; ret 0x3345
0x000002000070b64c : adc byte ptr [r8 + rcx*4 + 0x7c], r8b ; and al, 0x20 ; call r12
0x00000200000b7836 : adc byte ptr [r8 - 0x18000000], r8b ; sysenter
0x000002000021c09c : adc byte ptr [r8 - 0x3f], cl ; cli ; adc cl, byte ptr [rax - 0x75] ; ret 0xc148
0x000002000003e0a6 : adc byte ptr [r8 - 0x73], r9b ; adc r15b, dil ; ret 0x44c6
0x000002000000a83b : adc byte ptr [r8 - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x0000020000113a8b : adc byte ptr [r8 - 0x75], cl ; or edi, edi ; ret
0x000002000007362c : adc byte ptr [r8 - 0x75], cl ; ret
0x00000200000db10f : adc byte ptr [r8 - 0x75], cl ; ret 0x3345
0x000002000049e52c : adc byte ptr [r8 - 0x75], cl ; ret 0xffba
0x00000200001d60be : adc byte ptr [r8 - 0x75], cl ; sub byte ptr [r8 + 3], cl ; ret 0x349
0x000002000023a185 : adc byte ptr [r8 - 0x75], cl ; xor byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x000002000021d2da : adc byte ptr [r8 - 0x75], r9b ; ret 0x2349
0x0000020000453d58 : adc byte ptr [r8 - 0x75], r9b ; xor byte ptr [r8 + 0x2b], cl ; ret
0x0000020000228f08 : adc byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4818
0x000002000016f877 : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0x2000016f879 ; ret
0x00000200004b3109 : adc byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000020000010cef : adc byte ptr [r8 - 0x7d], cl ; call 0x1ffc3f08201
0x000002000006b0a6 : adc byte ptr [r8 - 0x7d], cl ; ret
0x000002000000bc34 : adc byte ptr [r8 - 0x7d], cl ; ret 0x4918
0x0000020000218adf : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000200005a9595 : adc byte ptr [r8 - 0x7d], r9b ; ret 0xe820
0x000002000060b5d8 : adc byte ptr [r8 - 1], r9b ; ret 0x3966
0x00000200000e1ca4 : adc byte ptr [r8 - 1], r9b ; ret 0xe083
0x00000200000209ce : adc byte ptr [r9 + 0x2b], al ; ret 0x2b41
0x00000200002317a5 : adc byte ptr [r9 + rcx*4 + 4], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200007b2e36 : adc byte ptr [r9 - 0x39], cl ; ret
0x00000200001c2910 : adc byte ptr [r9 - 0x75], al ; ret 0x8949
0x0000020000516a3b : adc byte ptr [r9 - 0x75], cl ; iretd ; call 0x2000013c288
0x0000020000548d6e : adc byte ptr [r9 - 0x75], cl ; or byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x000002000077f957 : adc byte ptr [r9 - 0x75], cl ; ret
0x00000200000e438b : adc byte ptr [r9 - 0x7d], r9b ; ret 0x4810
0x00000200003d3a6c : adc byte ptr [r9 - 1], al ; ret
0x0000020000018c18 : adc byte ptr [r9 - 1], cl ; ret 0x894c
0x000002000001e0fa : adc byte ptr [rax + 0x18], al ; xor eax, eax ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000200000e6a85 : adc byte ptr [rax + 0x23], cl ; ret 0x3148
0x000002000003d6e6 : adc byte ptr [rax + 0x23], cl ; ret 0x3b48
0x00000200000ac4d3 : adc byte ptr [rax + 0x2b], cl ; call 0x20048cdc429
0x000002000001be1f : adc byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x0000020000453d4f : adc byte ptr [rax + 0x2b], cl ; ret
0x000002000024db5b : adc byte ptr [rax + 0x33], cl ; ret
0x000002000014555f : adc byte ptr [rax + 0x33], cl ; ret 0x3348
0x00000200004e7ca6 : adc byte ptr [rax + 0x39], cl ; or byte ptr [rsi + rcx - 1], dh ; ret 0x8348
0x0000020000106403 : adc byte ptr [rax + 0x3b], cl ; enter -0x79f1, 0x48 ; ret 6
0x0000020000080ca7 : adc byte ptr [rax + 0x3b], cl ; ret
0x00000200000c7afe : adc byte ptr [rax + 0x3b], cl ; ret 0x1e77
0x00000200000856d8 : adc byte ptr [rax + 0x3b], cl ; ret 0x460f
0x0000020000168882 : adc byte ptr [rax + 0x3b], cl ; ret 0x850f
0x0000020000435292 : adc byte ptr [rax + 0x3b], cl ; ret 0x9577
0x00000200000366b8 : adc byte ptr [rax + 0x3b], cl ; ret 0x9d74
0x000002000021502a : adc byte ptr [rax + 0x3b], cl ; ret 0xb75
0x00000200000366af : adc byte ptr [rax + 0x3b], cl ; ret 0xe75
0x00000200005230ff : adc byte ptr [rax + 0x3b], cl ; ret 0xf072
0x0000020000021706 : adc byte ptr [rax + 0x5c8b4801], dh ; and al, 8 ; ret
0x00000200006c5688 : adc byte ptr [rax + 0x63], cl ; ret 0x8348
0x000002000046ddec : adc byte ptr [rax + 0x7e], dl ; je 0x2000046ddf6 ; ret
0x000002000071196b : adc byte ptr [rax + 0xb], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0xc148
0x000002000014e99d : adc byte ptr [rax + 0xf], cl ; ret
0x0000020000210547 : adc byte ptr [rax + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x000002000004ea52 : adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000200000450b7 : adc byte ptr [rax + 1], bh ; ret
0x00000200001b18aa : adc byte ptr [rax + 1], cl ; adc dword ptr [rcx - 1], eax ; ret 0x8d48
0x0000020000152b4f : adc byte ptr [rax + 2], bh ; nop ; nop ; add rsp, 0x10 ; ret
0x00000200004bbe53 : adc byte ptr [rax + 3], cl ; ret
0x000002000061b2a3 : adc byte ptr [rax + 3], cl ; ret 0x3345
0x00000200002490da : adc byte ptr [rax + 3], cl ; ret 0xc183
0x00000200001f0139 : adc byte ptr [rax + 3], cl ; ror byte ptr [rax - 0x75], 4 ; ret 0x8549
0x000002000001bd0f : adc byte ptr [rax + 3], cl ; ror byte ptr [rcx - 0x77], 2 ; mov eax, ecx ; ret
0x00000200001bc308 : adc byte ptr [rax + rax - 0x74b80000], 4 ; ret 0x888b
0x00000200001bc31f : adc byte ptr [rax + rax - 0x74b80000], 4 ; ret 0x8b48
0x000002000043c975 : adc byte ptr [rax + rcx*4 + 0x6b], al ; adc byte ptr [rax - 0x7d], cl ; ret
0x000002000070b64d : adc byte ptr [rax + rcx*4 + 0x7c], al ; and al, 0x20 ; call r12
0x000002000009529c : adc byte ptr [rax + rdx + 0x10], al ; movups xmmword ptr [rcx + rdx + 0x10], xmm0 ; ret
0x00000200004012e4 : adc byte ptr [rax + rsi - 1], dh ; ret 0x3b41
0x000002000061c256 : adc byte ptr [rax - 0x173074b8], al ; nop ; ret 0xffb2
0x00000200000b7837 : adc byte ptr [rax - 0x18000000], al ; sysenter
0x000002000079fc49 : adc byte ptr [rax - 0x39], cl ; ret 0xfe00
0x0000020000014adf : adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000021c09d : adc byte ptr [rax - 0x3f], cl ; cli ; adc cl, byte ptr [rax - 0x75] ; ret 0xc148
0x000002000046834b : adc byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200001d2786 : adc byte ptr [rax - 0x3fffffff], bh ; ret
0x00000200007d5fbb : adc byte ptr [rax - 0x4a], ch ; inc dword ptr [rax] ; ret
0x00000200000366ab : adc byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0xe75
0x000002000003e0a7 : adc byte ptr [rax - 0x73], cl ; adc r15b, dil ; ret 0x44c6
0x000002000024860e : adc byte ptr [rax - 0x73], cl ; or byte ptr [rbp + 0x2b], cl ; ret
0x00000200004e4e54 : adc byte ptr [rax - 0x74b58af8], ch ; push rbx ; adc dh, dh ; ret 0x7404
0x0000020000686562 : adc byte ptr [rax - 0x74fff881], al ; ret
0x000002000043528e : adc byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0x9577
0x0000020000041cea : adc byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004045cf : adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x8074
0x00000200001264f2 : adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 1] ; add dword ptr [rax - 0x7d], ecx ; ret 0xeb18
0x00000200001bf6cd : adc byte ptr [rax - 0x75], cl ; add eax, 0x13a17b ; call rax
0x00000200001beca9 : adc byte ptr [rax - 0x75], cl ; add eax, 0x13ab9f ; call rax
0x000002000000a83c : adc byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000051acd2 : adc byte ptr [rax - 0x75], cl ; enter 0x65e8, -0x38 ; ret
0x0000020000233415 : adc byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x7d] ; ret 0x4160
0x000002000070f559 : adc byte ptr [rax - 0x75], cl ; iretd ; call rax
0x00000200003fba0c : adc byte ptr [rax - 0x75], cl ; or eax, 0xfff44724 ; call rax
0x0000020000113a8c : adc byte ptr [rax - 0x75], cl ; or edi, edi ; ret
0x00000200000a123e : adc byte ptr [rax - 0x75], cl ; pop rsp ; and al, 0x20 ; pop rdi ; ret
0x0000020000224e10 : adc byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200004a9c55 : adc byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x70 ; mov rcx, rbp ; call rdi
0x000002000004941f : adc byte ptr [rax - 0x75], cl ; push rsp ; ret 0x4118
0x000002000000bcf3 : adc byte ptr [rax - 0x75], cl ; ret
0x000002000006e7f7 : adc byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200000db110 : adc byte ptr [rax - 0x75], cl ; ret 0x3345
0x00000200000daa22 : adc byte ptr [rax - 0x75], cl ; ret 0x3b48
0x000002000001defa : adc byte ptr [rax - 0x75], cl ; ret 0x49f0
0x000002000066fe71 : adc byte ptr [rax - 0x75], cl ; ret 0x8548
0x0000020000437373 : adc byte ptr [rax - 0x75], cl ; ret 0x8941
0x000002000045537d : adc byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000118908 : adc byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000451f83 : adc byte ptr [rax - 0x75], cl ; ret 0xba41
0x000002000006a202 : adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004e10a8 : adc byte ptr [rax - 0x75], cl ; ret 0xc2f6
0x00000200007a0809 : adc byte ptr [rax - 0x75], cl ; ret 0xccc3
0x00000200001b1579 : adc byte ptr [rax - 0x75], cl ; ret 0xf48
0x000002000001de82 : adc byte ptr [rax - 0x75], cl ; ret 0xf49
0x0000020000014d07 : adc byte ptr [rax - 0x75], cl ; ret 0xff48
0x000002000049e52d : adc byte ptr [rax - 0x75], cl ; ret 0xffba
0x000002000070f445 : adc byte ptr [rax - 0x75], cl ; retf ; call rax
0x0000020000557a0f : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [r11], dil ; ret
0x00000200001d60bf : adc byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 3], cl ; ret 0x349
0x0000020000453d59 : adc byte ptr [rax - 0x75], cl ; xor byte ptr [r8 + 0x2b], cl ; ret
0x000002000023a186 : adc byte ptr [rax - 0x75], cl ; xor byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x00000200005f3d24 : adc byte ptr [rax - 0x75], cl ; xor r8b, r13b ; ret 0xb55a
0x0000020000678ac4 : adc byte ptr [rax - 0x77], cl ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x0000020000186b5e : adc byte ptr [rax - 0x77], cl ; adc r9b, bpl ; ret
0x00000200001f01d3 : adc byte ptr [rax - 0x77], cl ; add dword ptr [rax + 1], edi ; ret
0x0000020000680b52 : adc byte ptr [rax - 0x77], cl ; je 0x20000680b82 ; push rax ; inc edx ; jmp 0x20000680b40
0x0000020000100dca : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x3c75
0x000002000020dd9c : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x775
0x000002000006474e : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200000eeaeb : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0xa75
0x0000020000228f09 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4818
0x00000200004a31ba : adc byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x75], cl ; ret
0x00000200003e5886 : adc byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 - 0x75], r9b ; ret
0x000002000000ba88 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000000ba95 ; ret
0x000002000000ba87 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000000ba96 ; ret
0x000002000016f878 : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000016f878 ; ret
0x00000200004b310a : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x000002000007afb9 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 1], cl ; ret
0x00000200003ffcf8 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x8b ; retf ; call rax
0x0000020000210526 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x000002000043c80a : adc byte ptr [rax - 0x7cb7efbd], cl ; ret
0x00000200004994d8 : adc byte ptr [rax - 0x7d], cl ; call 0x1ffc384dd07
0x0000020000010cf0 : adc byte ptr [rax - 0x7d], cl ; call 0x1ffc3f08200
0x00000200000365b4 : adc byte ptr [rax - 0x7d], cl ; call 0x1ffc3f2dac4
0x00000200004385b5 : adc byte ptr [rax - 0x7d], cl ; call 0x1ffc432fac5
0x000002000012978a : adc byte ptr [rax - 0x7d], cl ; jmp 0x1ffc3ff0c9a
0x00000200001a6fbc : adc byte ptr [rax - 0x7d], cl ; jmp qword ptr [rcx]
0x00000200001a42d4 : adc byte ptr [rax - 0x7d], cl ; jmp qword ptr [rdx]
0x0000020000437930 : adc byte ptr [rax - 0x7d], cl ; rcr dword ptr [rax], -0x18 ; pop rsi ; ret
0x000002000006b03c : adc byte ptr [rax - 0x7d], cl ; ret
0x000002000020e22f : adc byte ptr [rax - 0x7d], cl ; ret 0x310
0x0000020000448fd7 : adc byte ptr [rax - 0x7d], cl ; ret 0x4128
0x000002000010e35a : adc byte ptr [rax - 0x7d], cl ; ret 0x4408
0x000002000040e358 : adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000021ecee : adc byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000054201e : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x000002000000bc35 : adc byte ptr [rax - 0x7d], cl ; ret 0x4918
0x00000200005499ae : adc byte ptr [rax - 0x7d], cl ; ret 0x4930
0x0000020000425ba4 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000020000117218 : adc byte ptr [rax - 0x7d], cl ; ret 0xe804
0x00000200005a9596 : adc byte ptr [rax - 0x7d], cl ; ret 0xe820
0x00000200005bb29f : adc byte ptr [rax - 0x7d], cl ; ret 0xe920
0x0000020000214533 : adc byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000200005f096d : adc byte ptr [rax - 0x7d], cl ; ret 0xff14
0x00000200001d929b : adc byte ptr [rax - 0x7d], r9b ; ret
0x000002000010e359 : adc byte ptr [rax - 0x7d], r9b ; ret 0x4408
0x0000020000008aa6 : adc byte ptr [rax - 0x7f], cl ; ret
0x00000200000a6ca5 : adc byte ptr [rax - 0x7f], cl ; ret 0x1a0
0x0000020000789e50 : adc byte ptr [rax - 0x7f], cl ; ret 0xe10
0x00000200005ab0e1 : adc byte ptr [rax - 1], cl ; ret
0x000002000060b5d9 : adc byte ptr [rax - 1], cl ; ret 0x3966
0x00000200001fd411 : adc byte ptr [rax - 1], cl ; ret 0x789
0x000002000061ba85 : adc byte ptr [rax - 1], cl ; ret 0x8348
0x00000200000e1ca5 : adc byte ptr [rax - 1], cl ; ret 0xe083
0x00000200001f584a : adc byte ptr [rax - 1], cl ; ret 0xf748
0x000002000013ceaf : adc byte ptr [rax - 1], cl ; ret 0xff49
0x0000020000465cec : adc byte ptr [rax - 9], cl ; ret
0x0000020000461274 : adc byte ptr [rax], 0x14 ; add byte ptr [rax], al ; ret
0x00000200004c2c1a : adc byte ptr [rax], 0x2b ; ret 0xe0c1
0x00000200004e511d : adc byte ptr [rax], 0x48 ; add esp, 0x28 ; ret
0x0000020000464a0f : adc byte ptr [rax], 0x48 ; mov dword ptr [rdx], eax ; mov rax, r8 ; ret
0x000002000013955b : adc byte ptr [rax], al ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000033fd7 : adc byte ptr [rax], al ; add al, al ; add rsp, 0x28 ; ret
0x000002000055de3f : adc byte ptr [rax], al ; add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005bcfef : adc byte ptr [rax], al ; add al, al ; jmp 0x20000459285
0x00000200001c4245 : adc byte ptr [rax], al ; add bh, bh ; ret
0x00000200000acdbf : adc byte ptr [rax], al ; add bl, ch ; ret
0x00000200000dd0b3 : adc byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret
0x00000200000dc312 : adc byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x000002000041722a : adc byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xea75
0x000002000004cdb5 : adc byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000078ded9 : adc byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x7d], eax ; ret 0x48f8
0x00000200001bc5cb : adc byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000139224 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000200001c3467 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000014ea54 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x0000020000568240 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000200001b6470 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000241ec : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000000e6fc : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000012478c : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200003f5814 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004c3ffc : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200007b81d0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000705610 : adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200001518a6
0x000002000016188e : adc byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000020000007035 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200006abc82 : adc byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret
0x00000200004977a0 : adc byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret 0xe472
0x00000200005029d6 : adc byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x00000200001677bf : adc byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x00000200007087ab : adc byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x2173
0x000002000010b892 : adc byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x830f
0x00000200005657b8 : adc byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x589
0x00000200005cd80d : adc byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0xa9
0x00000200000261b2 : adc byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret
0x00000200006ca93a : adc byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ror byte ptr [rdi], 0x86 ; ret
0x00000200001c2432 : adc byte ptr [rax], al ; add byte ptr [rcx - 0x2d], cl ; jrcxz 0x200001c243f ; ret 0x894b
0x0000020000026925 : adc byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ror dword ptr [rax - 0x73], 0x3c ; ret
0x0000020000437111 : adc byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; add al, byte ptr [rbp + 0x3b] ; ret
0x0000020000077265 : adc byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200004b62c5 : adc byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x00000200004b62d0 : adc byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x000002000043216c : adc byte ptr [rax], al ; add byte ptr [rdi + 0x64], dh ; add rsp, 0x38 ; ret
0x000002000010a4e2 : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x35e9
0x000002000021c46d : adc byte ptr [rax], al ; add dh, bh ; ret
0x00000200007157aa : adc byte ptr [rax], al ; add dh, dh ; ret 0x7508
0x000002000000fa6c : adc byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000234bf6 : adc byte ptr [rax], al ; add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x0000020000428aa3 : adc byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000085c1e : adc byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000477c30 : adc byte ptr [rax], al ; add rsp, 0x38 ; pop rsi ; pop rbx ; ret
0x00000200003e1fde : adc byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000023681d : adc byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x000002000002c791 : adc byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x000002000003878a : adc byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x000002000002feea : adc byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000002000002c57e : adc byte ptr [rax], al ; add rsp, 0xe8 ; ret
0x0000020000151490 : adc byte ptr [rax], al ; add rsp, 8 ; ret
0x0000020000463d81 : adc byte ptr [rax], al ; call 0x200000938ed
0x0000020000200bb0 : adc byte ptr [rax], al ; je 0x20000200bc5 ; mov rcx, r15 ; call 0x2000007ce19
0x00000200006f4644 : adc byte ptr [rax], al ; je 0x200006f4657 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000008f08c : adc byte ptr [rax], al ; jne 0x2000008f0bb ; xor al, al ; ret
0x00000200000987eb : adc byte ptr [rax], al ; jne 0x200000987f4 ; ret
0x000002000009881e : adc byte ptr [rax], al ; jne 0x2000009884f ; cmp eax, 2 ; jl 0x20000098831 ; ret
0x00000200000d517b : adc byte ptr [rax], al ; jne 0x200000d5184 ; ret
0x00000200004d55b7 : adc byte ptr [rax], al ; lea rax, qword ptr [r8 + rdx*4] ; ret
0x00000200004dbda3 : adc byte ptr [rax], al ; lea rcx, qword ptr [rdi - 0x10] ; call 0x200000e8068
0x0000020000081cb8 : adc byte ptr [rax], al ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000008e02c : adc byte ptr [rax], al ; mov al, r9b ; add rsp, 0x28 ; ret
0x00000200000853b8 : adc byte ptr [rax], al ; mov byte ptr [rip + 0x29cc82], dl ; ret
0x000002000007f176 : adc byte ptr [rax], al ; mov eax, r9d ; ret
0x000002000020d83f : adc byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000463dba : adc byte ptr [rax], al ; mov rcx, rsi ; call 0x200000939a4
0x00000200006409c8 : adc byte ptr [rax], al ; movsd qword ptr [rax], xmm0 ; xor eax, eax ; ret
0x00000200000832b8 : adc byte ptr [rax], al ; ret
0x00000200005483d1 : adc byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001cee4a : adc byte ptr [rax], bh ; adc byte ptr [rdi + r8 - 1], r14b ; ret 0x3b41
0x00000200001cee49 : adc byte ptr [rax], dil ; adc byte ptr [rdi + r8 - 1], r14b ; ret 0x3b41
0x000002000009529e : adc byte ptr [rax], dl ; movups xmmword ptr [rcx + rdx + 0x10], xmm0 ; ret
0x000002000009529d : adc byte ptr [rax], r10b ; movups xmmword ptr [rcx + rdx + 0x10], xmm0 ; ret
0x00000200000fc65f : adc byte ptr [rbp + 0x28], dh ; add rsp, 0x28 ; ret
0x00000200000fc65e : adc byte ptr [rbp + 0x28], sil ; add rsp, 0x28 ; ret
0x00000200004678a2 : adc byte ptr [rbp + 0x2b], al ; ret
0x00000200006bb762 : adc byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x73], 0x35 ; ret
0x00000200000e314b : adc byte ptr [rbp + 0x3b], cl ; ret
0x00000200000e5498 : adc byte ptr [rbp + 0x3b], cl ; ret 0x5073
0x00000200000df1ae : adc byte ptr [rbp + 0x3b], cl ; ret 0x840f
0x0000020000248ad9 : adc byte ptr [rbp + 0x3b], cl ; ret 0xa072
0x000002000024bf97 : adc byte ptr [rbp + 0x3b], cl ; ret 0xad72
0x00000200004bb494 : adc byte ptr [rbp + 1], dh ; ret
0x000002000066afe9 : adc byte ptr [rbp + 3], dh ; mov al, 1 ; ret
0x00000200000fc277 : adc byte ptr [rbp + 3], dh ; xor al, al ; ret
0x000002000000ef44 : adc byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x000002000001b6e3 : adc byte ptr [rbp + 4], dh ; mov al, r8b ; ret
0x000002000003fb81 : adc byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000020000161ec7 : adc byte ptr [rbp + 5], dh ; lea rax, qword ptr [r9 - 8] ; ret
0x0000020000026cd3 : adc byte ptr [rbp + 5], dh ; mov qword ptr [rdx + 8], r8 ; ret
0x0000020000026cd2 : adc byte ptr [rbp + 5], sil ; mov qword ptr [rdx + 8], r8 ; ret
0x00000200000d3a98 : adc byte ptr [rbp + rax + 0x48], dh ; add esp, 8 ; ret
0x000002000055e87f : adc byte ptr [rbp + rcx - 1], dh ; ret 0x8349
0x00000200003e5f2d : adc byte ptr [rbp + rcx*4 + 5], cl ; stosd dword ptr [rdi], eax ; ret 0x18
0x000002000061b263 : adc byte ptr [rbp - 0x11], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000002000061b230 : adc byte ptr [rbp - 0x11], dh ; mov al, r8b ; ret
0x000002000061b22f : adc byte ptr [rbp - 0x11], sil ; mov al, r8b ; ret
0x000002000061b6cb : adc byte ptr [rbp - 0x12], dh ; ret
0x000002000061b6ca : adc byte ptr [rbp - 0x12], sil ; ret
0x00000200000f7aaf : adc byte ptr [rbp - 0x1d], dh ; add rsp, 0x28 ; ret
0x0000020000510a25 : adc byte ptr [rbp - 0x69], al ; movdqu xmmword ptr [rbp - 0x11], xmm0 ; call r12
0x000002000000bc31 : adc byte ptr [rbp - 0x73], cl ; adc byte ptr [r8 - 0x7d], cl ; ret 0x4918
0x00000200000355fd : adc byte ptr [rbp - 0x75], al ; ret 0x6348
0x0000020000247275 : adc byte ptr [rbp - 0x75], al ; ret 0x8b48
0x000002000021d1bd : adc byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx + 0x3b] ; ret
0x00000200000adddc : adc byte ptr [rbp - 0x75], cl ; adc byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200003d0df6 : adc byte ptr [rbp - 0x75], cl ; jae 0x200003d0e1c ; mov rsp, r11 ; pop rbp ; ret
0x00000200005641b9 : adc byte ptr [rbp - 0x75], cl ; jae 0x200005641df ; mov rsp, r11 ; pop rbp ; ret
0x0000020000014e2f : adc byte ptr [rbp - 0x75], cl ; ret
0x00000200007a1e54 : adc byte ptr [rbp - 0x75], cl ; ret 0x8948
0x0000020000249533 : adc byte ptr [rbp - 0x75], cl ; ret 0xbb01
0x00000200001999d1 : adc byte ptr [rbp - 0x75], cl ; ret 0xc149
0x0000020000066fe4 : adc byte ptr [rbp - 0x75], cl ; xchg eax, esp ; ret
0x00000200000420f6 : adc byte ptr [rbp - 0x7b], al ; leave ; setne al ; ret
0x0000020000237327 : adc byte ptr [rbp - 0x7b], al ; sal byte ptr [rcx + rax*8 + 0x41], cl ; mov eax, edx ; jmp 0x2000023733c
0x00000200005880d3 : adc byte ptr [rbp - 0x7cb7a3be], cl ; ret
0x000002000040123b : adc byte ptr [rbp - 1], dh ; ret 0xd33b
0x00000200003ed413 : adc byte ptr [rbp - 9], dh ; mov eax, 1 ; ret
0x00000200001d38b9 : adc byte ptr [rbp], al ; add rsp, 0x48 ; ret
0x00000200007109c5 : adc byte ptr [rbx + 0x14394dc1], cl ; ret
0x00000200002120a1 : adc byte ptr [rbx + 0x23cf23c8], cl ; ret
0x000002000053ebd9 : adc byte ptr [rbx + 0x39], cl ; ret
0x0000020000524af4 : adc byte ptr [rbx + 0x4b891c4f], cl ; and byte ptr [rax - 0x75], cl ; ret
0x00000200001184b4 : adc byte ptr [rbx + 0x598d45c2], cl ; add dword ptr [rbp - 0x75], eax ; ret
0x00000200000263d8 : adc byte ptr [rbx + 0x5c8b48c3], cl ; and al, 8 ; ret
0x00000200003fa7c9 : adc byte ptr [rbx + 0x7c8b48c1], cl ; and al, 0x18 ; ret
0x000002000007253b : adc byte ptr [rbx + 0xb4803e0], al ; ret 0x8949
0x00000200000724a4 : adc byte ptr [rbx + 0xb4903e0], al ; ret 0x8949
0x0000020000217251 : adc byte ptr [rbx + 6], dh ; mov eax, 0xc0000023 ; ret
0x00000200006ca553 : adc byte ptr [rbx + 8], dh ; mov rax, qword ptr [r9 + 0x18] ; add rax, rdx ; ret
0x00000200001eb8f4 : adc byte ptr [rbx + rcx*4 + 0x4c], cl ; ret
0x00000200001fecf9 : adc byte ptr [rbx + rcx*4 - 0x39], cl ; add rcx, 0x18 ; call rax
0x00000200000f41aa : adc byte ptr [rbx + rcx], bl ; add rsp, 0x38 ; ret
0x000002000002d070 : adc byte ptr [rbx + rdi - 0x3f], al ; jae 0x2000002d083 ; mov rax, r9 ; ret
0x000002000046beab : adc byte ptr [rbx - 0x1f3efe20], al ; adc cl, byte ptr [rbx] ; ret
0x0000020000784e5f : adc byte ptr [rbx - 0x2cb7073d], al ; ret 0x8349
0x0000020000463cf0 : adc byte ptr [rbx - 0x3174b62d], cl ; call 0x200000939a5
0x0000020000059e13 : adc byte ptr [rbx - 0x37], dh ; bts esi, 0x1c ; jmp 0x20000059de7
0x000002000009add3 : adc byte ptr [rbx - 0x41f0bb3f], cl ; ret
0x000002000060ceff : adc byte ptr [rbx - 0x74b388bb], cl ; ret
0x0000020000121121 : adc byte ptr [rbx - 0x7cb7fbbd], cl ; ret
0x00000200000450db : adc byte ptr [rbx], 0 ; mov eax, 0x10 ; ret
0x0000020000212085 : adc byte ptr [rbx], ah ; ret
0x0000020000045ba4 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000502c06 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000060f888 : adc byte ptr [rbx], al ; cmp esi, r14d ; jb 0x2000060f859 ; jmp 0x2000060f89c
0x00000200001281fe : adc byte ptr [rbx], al ; or al, 0x8b ; ret
0x000002000012815c : adc byte ptr [rbx], al ; or byte ptr [rcx - 0x75], al ; ret
0x0000020000075f4d : adc byte ptr [rbx], al ; ret
0x00000200004ef678 : adc byte ptr [rbx], al ; ret 0x3b41
0x0000020000075e97 : adc byte ptr [rbx], al ; ret 0xf633
0x0000020000151021 : adc byte ptr [rbx], al ; rol ecx, -0x18 ; adc byte ptr [rcx - 0xa], al ; ret
0x00000200001286e2 : adc byte ptr [rbx], al ; sub al, 0x8b ; ret
0x0000020000128640 : adc byte ptr [rbx], al ; sub byte ptr [rcx - 0x75], al ; ret
0x000002000049b71d : adc byte ptr [rbx], bh ; ret
0x00000200007afd32 : adc byte ptr [rbx], bh ; ret 0x2b72
0x000002000010a330 : adc byte ptr [rbx], bh ; ret 0x4c73
0x00000200000572ef : adc byte ptr [rbx], bh ; ret 0x820f
0x00000200005b279d : adc byte ptr [rbx], bh ; ret 0xee72
0x00000200007a1c2b : adc byte ptr [rbx], bl ; add byte ptr [rax + 0x33], cl ; ret 0x3348
0x0000020000519dcb : adc byte ptr [rbx], bpl ; ret
0x0000020000519dcc : adc byte ptr [rbx], ch ; ret
0x0000020000628ea7 : adc byte ptr [rbx], ch ; ret 0x348
0x00000200000dc683 : adc byte ptr [rbx], ch ; ret 0x8948
0x00000200004c2c1b : adc byte ptr [rbx], ch ; ret 0xe0c1
0x00000200005f8795 : adc byte ptr [rbx], cl ; fsubr st(1) ; ret
0x000002000016e8c9 : adc byte ptr [rbx], cl ; ret 0x34e9
0x00000200006d1afa : adc byte ptr [rbx], cl ; ret 0xe9c1
0x000002000047ca1b : adc byte ptr [rbx], dh ; ret 0x8941
0x00000200001d28ee : adc byte ptr [rbx], dh ; rol byte ptr [rcx + 0x38], cl ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc28b
0x000002000002559c : adc byte ptr [rbx], dh ; ror byte ptr [rax - 0x77], 0xa ; ret
0x0000020000472809 : adc byte ptr [rbx], dh ; shr al, cl ; jg 0x200004727cd ; ret 0xf0ff
0x00000200004d23c5 : adc byte ptr [rbx], dh ; shr al, cl ; ret
0x000002000054882a : adc byte ptr [rbx], dh ; shr byte ptr [rbx], cl ; or al, 0xf7 ; jno 0x20000548844 ; ret
0x00000200000572ee : adc byte ptr [rbx], dil ; ret 0x820f
0x000002000011bfec : adc byte ptr [rbx], dl ; add bl, ch ; ret
0x0000020000472808 : adc byte ptr [rbx], r14b ; shr al, cl ; jg 0x200004727ce ; ret 0xf0ff
0x000002000002559b : adc byte ptr [rbx], sil ; ror byte ptr [rax - 0x77], 0xa ; ret
0x0000020000031769 : adc byte ptr [rcx + 0x10], cl ; movups xmmword ptr [rdx + 0x10], xmm1 ; ret
0x00000200000ca70b : adc byte ptr [rcx + 0x15ff0000], 0x5a ; ret 0x18
0x000002000044f171 : adc byte ptr [rcx + 0x18], al ; movdqu xmmword ptr [r8], xmm0 ; mov eax, edx ; ret
0x00000200006a0fdb : adc byte ptr [rcx + 0x23], al ; ret
0x000002000008a076 : adc byte ptr [rcx + 0x23], cl ; ret 0x894c
0x00000200000209cf : adc byte ptr [rcx + 0x2b], al ; ret 0x2b41
0x00000200000b2165 : adc byte ptr [rcx + 0x33], cl ; add byte ptr [rax + 0x23], cl ; ret 0x8945
0x00000200006c5fde : adc byte ptr [rcx + 0x39], al ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x00000200002303cd : adc byte ptr [rcx + 0x39], al ; or al, 0x74 ; adc byte ptr [rcx - 1], al ; ret 0x3b45
0x00000200006c5fbd : adc byte ptr [rcx + 0x39], al ; or byte ptr [rdi], cl ; xchg eax, esi ; ret
0x00000200006c5f9c : adc byte ptr [rcx + 0x39], al ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200000c0646 : adc byte ptr [rcx + 0x3b], al ; ret
0x00000200005ed533 : adc byte ptr [rcx + 0x3b], al ; ret 0xe772
0x00000200000d2925 : adc byte ptr [rcx + 0x3b], cl ; ret
0x00000200003e2069 : adc byte ptr [rcx + 0x3b], cl ; ret 0x7377
0x00000200007013e0 : adc byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x00000200006bd774 : adc byte ptr [rcx + 0x3b], cl ; sal byte ptr [rdx + 0x37], 0xff ; ret 0xfa83
0x00000200003fa127 : adc byte ptr [rcx + 0x5bc03303], cl ; ret
0x000002000021c2a1 : adc byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200004235a7 : adc byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000470911 : adc byte ptr [rcx + 0x7c8b480f], cl ; and al, 0x18 ; ret
0x00000200000572ea : adc byte ptr [rcx + 0xf], al ; mov bh, 0x40 ; adc byte ptr [rbx], bh ; ret 0x820f
0x000002000047a49c : adc byte ptr [rcx + 0xf], al ; mov bh, 0x46 ; add bh, bh ; ret
0x0000020000039e47 : adc byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0xff41
0x00000200000752c6 : adc byte ptr [rcx + 0xfffe1], al ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000553d0b : adc byte ptr [rcx + 3], cl ; ret
0x0000020000554421 : adc byte ptr [rcx + 3], cl ; ret 0x3b49
0x0000020000554420 : adc byte ptr [rcx + 3], r9b ; ret 0x3b49
0x00000200001bcece : adc byte ptr [rcx + r8 - 5], sil ; ret
0x00000200001bcecf : adc byte ptr [rcx + rax - 5], dh ; ret
0x000002000020b978 : adc byte ptr [rcx + rax], ah ; ret
0x0000020000631a5c : adc byte ptr [rcx + rcx*2 - 1], dh ; ret 0x8349
0x0000020000703890 : adc byte ptr [rcx + rcx*4 + 0x1a], cl ; ret
0x000002000065b9ce : adc byte ptr [rcx + rcx*4 + 0x52], cl ; sbb byte ptr [rax - 0x7d], cl ; ret 0xeb20
0x0000020000666b7f : adc byte ptr [rcx + rcx*4 + 0x5b], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000200002317a6 : adc byte ptr [rcx + rcx*4 + 4], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200005a5dc8 : adc byte ptr [rcx - 0x166ffffb], dh ; ret
0x00000200006c609b : adc byte ptr [rcx - 0x22], bh ; mov eax, 1 ; ret
0x00000200006c6027 : adc byte ptr [rcx - 0x23], bh ; ret
0x00000200007b2e37 : adc byte ptr [rcx - 0x39], cl ; ret
0x000002000069f355 : adc byte ptr [rcx - 0x3e], ch ; int 0xd
0x000002000001cedc : adc byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x000002000045193d : adc byte ptr [rcx - 0x3fccefbf], cl ; ret
0x0000020000013f8f : adc byte ptr [rcx - 0x48], al ; ret 0
0x00000200001e9a5e : adc byte ptr [rcx - 0x73], al ; inc dword ptr [rcx - 0x7c] ; ret 0x1775
0x0000020000519dc8 : adc byte ptr [rcx - 0x75], al ; adc byte ptr [rbx], bpl ; ret
0x00000200001b1717 : adc byte ptr [rcx - 0x75], al ; ret
0x00000200001e310a : adc byte ptr [rcx - 0x75], al ; ret 0x3b48
0x000002000009fcfc : adc byte ptr [rcx - 0x75], al ; ret 0x41f0
0x000002000058eb3a : adc byte ptr [rcx - 0x75], al ; ret 0x450f
0x00000200001288ca : adc byte ptr [rcx - 0x75], al ; ret 0x4589
0x00000200001c2911 : adc byte ptr [rcx - 0x75], al ; ret 0x8949
0x00000200001f75f0 : adc byte ptr [rcx - 0x75], cl ; add dword ptr [rax + 0x2b], ecx ; ret 0x8348
0x000002000056744f : adc byte ptr [rcx - 0x75], cl ; imul ebx, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rsi ; ret
0x0000020000516a3c : adc byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000013c287
0x00000200000090ad : adc byte ptr [rcx - 0x75], cl ; jae 0x200000090d3 ; mov rsp, r11 ; pop rdi ; ret
0x000002000001a31a : adc byte ptr [rcx - 0x75], cl ; jae 0x2000001a340 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000042bd5 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000042c03 ; mov rsp, r11 ; pop rdi ; ret
0x000002000004def4 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000004df1a ; mov rsp, r11 ; pop rdi ; ret
0x000002000005c415 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000005c43b ; mov rsp, r11 ; pop rdi ; ret
0x0000020000074e7b : adc byte ptr [rcx - 0x75], cl ; jae 0x20000074ea1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001034e4 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000010350a ; mov rsp, r11 ; pop rdi ; ret
0x0000020000111d4c : adc byte ptr [rcx - 0x75], cl ; jae 0x20000111d72 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000131daa : adc byte ptr [rcx - 0x75], cl ; jae 0x20000131dd0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001bc051 : adc byte ptr [rcx - 0x75], cl ; jae 0x200001bc077 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001bde82 : adc byte ptr [rcx - 0x75], cl ; jae 0x200001bdea8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001bee01 : adc byte ptr [rcx - 0x75], cl ; jae 0x200001bee27 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c29ab : adc byte ptr [rcx - 0x75], cl ; jae 0x200001c29d1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c2aa8 : adc byte ptr [rcx - 0x75], cl ; jae 0x200001c2ad6 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c3f6e : adc byte ptr [rcx - 0x75], cl ; jae 0x200001c3f94 ; mov rsp, r11 ; pop rdi ; ret
0x00000200002151d2 : adc byte ptr [rcx - 0x75], cl ; jae 0x200002151f8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200002152f3 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000215319 ; mov rsp, r11 ; pop rdi ; ret
0x000002000021539b : adc byte ptr [rcx - 0x75], cl ; jae 0x200002153c1 ; mov rsp, r11 ; pop rdi ; ret
0x000002000022be46 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000022be6c ; mov rsp, r11 ; pop rdi ; ret
0x00000200003d83fc : adc byte ptr [rcx - 0x75], cl ; jae 0x200003d8422 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003e043d : adc byte ptr [rcx - 0x75], cl ; jae 0x200003e046b ; mov rsp, r11 ; pop rdi ; ret
0x00000200003eaae9 : adc byte ptr [rcx - 0x75], cl ; jae 0x200003eab17 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003f4db4 : adc byte ptr [rcx - 0x75], cl ; jae 0x200003f4dda ; mov rsp, r11 ; pop rdi ; ret
0x0000020000414ce2 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000414d10 ; mov rsp, r11 ; pop rdi ; ret
0x000002000042d7f3 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000042d819 ; mov rsp, r11 ; pop rdi ; ret
0x000002000043c6be : adc byte ptr [rcx - 0x75], cl ; jae 0x2000043c6ec ; mov rsp, r11 ; pop rdi ; ret
0x000002000044cc1c : adc byte ptr [rcx - 0x75], cl ; jae 0x2000044cc42 ; mov rsp, r11 ; pop rdi ; ret
0x000002000045c018 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000045c03e ; mov rsp, r11 ; pop rdi ; ret
0x000002000045d739 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000045d75f ; mov rsp, r11 ; pop rdi ; ret
0x00000200004609fd : adc byte ptr [rcx - 0x75], cl ; jae 0x20000460a23 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004695fc : adc byte ptr [rcx - 0x75], cl ; jae 0x20000469622 ; mov rsp, r11 ; pop rdi ; ret
0x000002000046d896 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000046d8bc ; mov rsp, r11 ; pop rdi ; ret
0x0000020000474b99 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000474bbf ; mov rsp, r11 ; pop rdi ; ret
0x0000020000491814 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000049183a ; mov rsp, r11 ; pop rdi ; ret
0x00000200004b25d6 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004b25fc ; mov rsp, r11 ; pop rdi ; ret
0x00000200005064a0 : adc byte ptr [rcx - 0x75], cl ; jae 0x200005064c6 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000509fb1 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000509fe7 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000519b2e : adc byte ptr [rcx - 0x75], cl ; jae 0x20000519b54 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005300ec : adc byte ptr [rcx - 0x75], cl ; jae 0x20000530112 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000534677 : adc byte ptr [rcx - 0x75], cl ; jae 0x200005346ad ; mov rsp, r11 ; pop rdi ; ret
0x0000020000535fad : adc byte ptr [rcx - 0x75], cl ; jae 0x20000535fd3 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005365ba : adc byte ptr [rcx - 0x75], cl ; jae 0x200005365e8 ; mov rsp, r11 ; pop rdi ; ret
0x000002000053f7ec : adc byte ptr [rcx - 0x75], cl ; jae 0x2000053f812 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000547996 : adc byte ptr [rcx - 0x75], cl ; jae 0x200005479bc ; mov rsp, r11 ; pop rdi ; ret
0x0000020000565bd2 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000565bf8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005fecb4 : adc byte ptr [rcx - 0x75], cl ; jae 0x200005fecda ; mov rsp, r11 ; pop rdi ; ret
0x000002000061175f : adc byte ptr [rcx - 0x75], cl ; jae 0x20000611795 ; mov rsp, r11 ; pop rdi ; ret
0x000002000061ef38 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000061ef6e ; mov rsp, r11 ; pop rdi ; ret
0x00000200006242a2 : adc byte ptr [rcx - 0x75], cl ; jae 0x200006242c8 ; mov rsp, r11 ; pop rdi ; ret
0x000002000063d103 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000063d129 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000645351 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000645377 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000695914 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000069593a ; mov rsp, r11 ; pop rdi ; ret
0x00000200006b6af2 : adc byte ptr [rcx - 0x75], cl ; jae 0x200006b6b18 ; mov rsp, r11 ; pop rdi ; ret
0x00000200007995e7 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000079960d ; mov rsp, r11 ; pop rbp ; ret
0x000002000079dd3d : adc byte ptr [rcx - 0x75], cl ; jae 0x2000079dd6b ; mov rsp, r11 ; pop rdi ; ret
0x00000200000036ab : adc byte ptr [rcx - 0x75], cl ; jnp 0x200000036d9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000000be51 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000000be7f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000056827 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000005684d ; mov rsp, r11 ; pop rbp ; ret
0x000002000011a8a4 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000011a8d2 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011c94d : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000011c97b ; mov rsp, r11 ; pop rbp ; ret
0x000002000011e4da : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000011e500 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011ed0d : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000011ed33 ; mov rsp, r11 ; pop rbp ; ret
0x000002000012053d : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000120563 ; mov rsp, r11 ; pop rbp ; ret
0x000002000013976c : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000139792 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c1b68 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001c1b8e ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c1d08 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001c1d2e ; mov rsp, r11 ; pop rbp ; ret
0x00000200001cf63c : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001cf662 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d05e3 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001d0611 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d079b : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001d07c9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d0a77 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001d0aa5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d97c2 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001d97e8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001f2274 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001f229a ; mov rsp, r11 ; pop rbp ; ret
0x00000200001f23b0 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001f23d6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001fd304 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001fd32a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000204d70 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000204da6 ; mov rsp, r11 ; pop rbp ; ret
0x000002000020572a : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000205758 ; mov rsp, r11 ; pop rbp ; ret
0x000002000020849e : adc byte ptr [rcx - 0x75], cl ; jnp 0x200002084cc ; mov rsp, r11 ; pop rbp ; ret
0x0000020000208572 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200002085a0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200002094b8 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200002094ee ; mov rsp, r11 ; pop rbp ; ret
0x000002000020cab4 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000020cada ; mov rsp, r11 ; pop rbp ; ret
0x00000200002240fd : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000224123 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003cdceb : adc byte ptr [rcx - 0x75], cl ; jnp 0x200003cdd11 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003e2d76 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200003e2dac ; mov rsp, r11 ; pop rbp ; ret
0x000002000040c01e : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000040c04c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000431049 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000431077 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000452c6b : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000452c91 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000506e49 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000506e6f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000518886 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200005188bc ; mov rsp, r11 ; pop rbp ; ret
0x000002000052216b : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000522191 ; mov rsp, r11 ; pop rbp ; ret
0x000002000052a92f : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000052a955 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000531e75 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000531ea3 ; mov rsp, r11 ; pop rbp ; ret
0x000002000054a55b : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000054a581 ; mov rsp, r11 ; pop rbp ; ret
0x000002000054a699 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000054a6bf ; mov rsp, r11 ; pop rbp ; ret
0x0000020000555e7f : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000555ea5 ; mov rsp, r11 ; pop rbp ; ret
0x000002000055d4bb : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000055d4e1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005623f9 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000056242f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000563125 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000056314b ; mov rsp, r11 ; pop rbp ; ret
0x0000020000564b03 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000564b29 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000567350 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000056737e ; mov rsp, r11 ; pop rbp ; ret
0x000002000061fb00 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000061fb26 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064d3c4 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000064d3ea ; mov rsp, r11 ; pop rbp ; ret
0x000002000064d527 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000064d54d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000675060 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000675086 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006753aa : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006753d0 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000676fde : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000677004 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006770c6 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006770ec ; mov rsp, r11 ; pop rbp ; ret
0x0000020000679c35 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000679c5b ; mov rsp, r11 ; pop rbp ; ret
0x000002000067dcc4 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000067dcea ; mov rsp, r11 ; pop rbp ; ret
0x000002000067de74 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000067de9a ; mov rsp, r11 ; pop rbp ; ret
0x000002000067e2d8 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000067e2fe ; mov rsp, r11 ; pop rbp ; ret
0x000002000067ecee : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000067ed14 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067ef46 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000067ef6c ; mov rsp, r11 ; pop rbp ; ret
0x000002000067f3be : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000067f3e4 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067f82e : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000067f854 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067f93e : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000067f964 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000692175 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000069219b ; mov rsp, r11 ; pop rbp ; ret
0x0000020000699acb : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000699af1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006d7472 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006d7498 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006d7ec8 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006d7eee ; mov rsp, r11 ; pop rbp ; ret
0x000002000079acf1 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000079ad17 ; mov rsp, r11 ; pop rbp ; ret
0x000002000079e161 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000079e187 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007a2a0f : adc byte ptr [rcx - 0x75], cl ; jnp 0x200007a2a35 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007a886a : adc byte ptr [rcx - 0x75], cl ; jnp 0x200007a8890 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007b9dde : adc byte ptr [rcx - 0x75], cl ; jnp 0x200007b9e04 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000232811 : adc byte ptr [rcx - 0x75], cl ; jrcxz 0x2000023287a ; ret
0x0000020000548d6f : adc byte ptr [rcx - 0x75], cl ; or byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x00000200000188ff : adc byte ptr [rcx - 0x75], cl ; ret
0x00000200000152b3 : adc byte ptr [rcx - 0x75], cl ; ret 0x3b48
0x0000020000417790 : adc byte ptr [rcx - 0x75], cl ; ret 0x4cf0
0x00000200000992e6 : adc byte ptr [rcx - 0x75], cl ; ret 0x8348
0x00000200006855c5 : adc byte ptr [rcx - 0x75], cl ; ret 0x854d
0x00000200000b8a61 : adc byte ptr [rcx - 0x75], cl ; ret 0x8948
0x000002000001526b : adc byte ptr [rcx - 0x75], cl ; ret 0xbd48
0x00000200000adddf : adc byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200000400e4 : adc byte ptr [rcx - 0x75], cl ; ret 0xf49
0x00000200002491c5 : adc byte ptr [rcx - 0x75], cl ; ret 0xf748
0x0000020000710db8 : adc byte ptr [rcx - 0x77], cl ; add byte ptr [rax + 1], bh ; ret
0x000002000002fb33 : adc byte ptr [rcx - 0x77], cl ; or bl, al ; xor eax, eax ; ret
0x000002000016dc9d : adc byte ptr [rcx - 0x77], cl ; or byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x00000200001717cf : adc byte ptr [rcx - 0x77], cl ; push rcx ; ret
0x000002000021eceb : adc byte ptr [rcx - 0x7cb7efa7], cl ; ret 0x4830
0x000002000042523a : adc byte ptr [rcx - 0x7d], al ; ret
0x000002000066923b : adc byte ptr [rcx - 0x7d], cl ; add bl, byte ptr [rax] ; ret
0x000002000065ba00 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000002000004921f : adc byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x00000200000e438c : adc byte ptr [rcx - 0x7d], cl ; ret 0x4810
0x000002000041867a : adc byte ptr [rcx - 0x7d], cl ; ret 0x4909
0x000002000078e9f6 : adc byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret
0x000002000004a390 : adc byte ptr [rcx - 0x7f], cl ; ret 0x1a0
0x00000200000698b4 : adc byte ptr [rcx - 0xa], al ; ret
0x00000200003d3a6d : adc byte ptr [rcx - 1], al ; ret
0x0000020000145e6f : adc byte ptr [rcx - 1], al ; ret 0x3b44
0x00000200002303d3 : adc byte ptr [rcx - 1], al ; ret 0x3b45
0x00000200003e4bea : adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003e454e : adc byte ptr [rcx - 1], al ; ret 0xf41
0x0000020000049313 : adc byte ptr [rcx - 1], cl ; ret 0x8948
0x0000020000018c19 : adc byte ptr [rcx - 1], cl ; ret 0x894c
0x000002000066c546 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200001487b6
0x00000200005ce999 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0xe ; call rax
0x000002000003f61f : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001c3953 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000433da8 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000204786 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000536124 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000059ff43 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000200000a1221 : adc byte ptr [rcx], al ; mov rbx, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x0000020000712467 : adc byte ptr [rcx], al ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x000002000008565c : adc byte ptr [rcx], al ; ret
0x00000200001bcaf0 : adc byte ptr [rcx], bh ; or byte ptr [rbp + rcx - 1], sil ; ret 0x8348
0x000002000010eb2d : adc byte ptr [rcx], bl ; add byte ptr [rax], al ; sete al ; ret
0x00000200005262dd : adc byte ptr [rcx], cl ; add byte ptr [rbx + rcx*4 + 0x4b], al ; xor al, 0x8b ; ret 0x6b48
0x00000200001cee4c : adc byte ptr [rdi + r8 - 1], r14b ; ret 0x3b41
0x00000200006acf6f : adc byte ptr [rdi + r9 - 0x49], r8b ; ret 0x8b48
0x00000200003dc3b3 : adc byte ptr [rdi + rax - 0x75], dh ; retf ; call 0x200006686ab
0x00000200001cee4d : adc byte ptr [rdi + rax - 1], dh ; ret 0x3b41
0x000002000001ebe9 : adc byte ptr [rdi + rcx + 0x20], al ; ret 0xf41
0x00000200000900bb : adc byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200006f6e94 : adc byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200006acf70 : adc byte ptr [rdi + rcx - 0x49], al ; ret 0x8b48
0x00000200004a7f08 : adc byte ptr [rdi + rdx - 0xa], dh ; ret
0x000002000044f204 : adc byte ptr [rdi - 1], dh ; ret
0x000002000061c588 : adc byte ptr [rdi], cl ; adc dword ptr [rax + rcx + 0x10], eax ; ret
0x000002000009529f : adc byte ptr [rdi], cl ; adc dword ptr [rcx + rdx + 0x10], eax ; ret
0x000002000003176b : adc byte ptr [rdi], cl ; adc dword ptr [rdx + 0x10], ecx ; ret
0x00000200003db7b6 : adc byte ptr [rdi], cl ; and ah, al ; add rsp, 0x28 ; ret
0x0000020000480e11 : adc byte ptr [rdi], cl ; mov bh, 0x46 ; add bh, bh ; ret
0x00000200004b61ee : adc byte ptr [rdi], cl ; mov edx, 0x420f1de1 ; ret 0xba0f
0x00000200003fb592 : adc byte ptr [rdi], cl ; test bh, bh ; add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x00000200003d3920 : adc byte ptr [rdi], cl ; test byte ptr [rdi - 0x9ffffbd], bh ; ret 0xf08
0x000002000052d77a : adc byte ptr [rdi], cl ; test byte ptr [rdi], bh ; enter 8, -0x7d ; jmp qword ptr [rax]
0x00000200003fb5b6 : adc byte ptr [rdi], cl ; test byte ptr [rdx - 0x1000000], bl ; ret
0x00000200004ce708 : adc byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000055ef44 : adc byte ptr [rdi], cl ; test ch, bh ; mov bl, 9 ; add byte ptr [rcx - 1], al ; ret 0x8349
0x0000020000054628 : adc byte ptr [rdi], cl ; test dh, dh ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000010d5b4 : adc byte ptr [rdi], cl ; test dword ptr [rbx - 0xa000000], ebx ; ret
0x00000200004e579e : adc byte ptr [rdi], cl ; test dword ptr [rdi], eax ; mov ah, 0xf ; add dh, dh ; ret
0x0000020000402069 : adc byte ptr [rdi], cl ; test dword ptr [rdx], ebx ; ret
0x0000020000412c40 : adc byte ptr [rdi], cl ; test dword ptr [rsp + rdx], eax ; sbb byte ptr [rax], al ; inc edx ; jmp 0x20000412c35
0x00000200006c5fe1 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x00000200005e2361 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000043459f : adc byte ptr [rdx + 0x10], dh ; ret
0x000002000020fbfa : adc byte ptr [rdx + 0x3410026], dh ; ret 0x3eb
0x000002000013add8 : adc byte ptr [rdx + 0x39], al ; ret
0x000002000061c585 : adc byte ptr [rdx + rcx + 0x10], al ; movups xmmword ptr [rax + rcx + 0x10], xmm0 ; ret
0x00000200004e2026 : adc byte ptr [rdx + rsi*4 - 0x17], dh ; ret 0xfd0
0x0000020000653c18 : adc byte ptr [rdx - 0x27], dh ; xor eax, eax ; ret
0x00000200004590fc : adc byte ptr [rdx - 0x3f], al ; dec dword ptr [rax - 0x75] ; ret
0x00000200005421d4 : adc byte ptr [rdx - 0x75], cl ; ret
0x000002000066b02f : adc byte ptr [rdx - 0xf], dh ; xor al, al ; ret
0x0000020000221b9f : adc byte ptr [rdx], al ; add byte ptr [rax], al ; inc edx ; jmp 0x20000221b74
0x00000200005c67d5 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; mov cl, 0xd ; call rax
0x00000200006da6d9 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000069028d : adc byte ptr [rdx], al ; movdqu xmmword ptr [rax + 8], xmm0 ; ret
0x0000020000712afc : adc byte ptr [rdx], bl ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003df96c : adc byte ptr [rdx], bl ; add dh, dh ; ret 0xf30
0x000002000061c5ec : adc byte ptr [rdx], cl ; ret
0x0000020000044d14 : adc byte ptr [rip + 0x10000], ch ; add byte ptr [rax], al ; ret
0x00000200004acdd2 : adc byte ptr [rip + 0x3b480000], dl ; ret 0x930f
0x000002000013c663 : adc byte ptr [rip + 0x7fff], ah ; ret
0x00000200007c8e51 : adc byte ptr [rsi + 0x3b], ah ; ret 0x1a7f
0x0000020000231d89 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4166
0x0000020000231a26 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000200001fe66f : adc byte ptr [rsi + 4], dh ; mov qword ptr [rcx + 0x10], rdx ; ret
0x0000020000653c25 : adc byte ptr [rsi + 6], dh ; mov eax, 0xc000000d ; ret
0x00000200005443f1 : adc byte ptr [rsi + rax + 0x48], dh ; add esp, 0x40 ; pop rbx ; ret
0x000002000043163c : adc byte ptr [rsi - 0x3d], ch ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005b0ded : adc byte ptr [rsi - 0x3ffffff3], bh ; call 0x2000007d088
0x00000200005b0dec : adc byte ptr [rsi - 0x3ffffff3], r15b ; call 0x2000007d089
0x00000200001fd0a0 : adc byte ptr [rsi - 0x74b7ff68], 0x15 ; pop rbp ; ret
0x0000020000139c00 : adc byte ptr [rsi - 0x76b7ff68], 2 ; ret
0x00000200007b495d : adc byte ptr [rsi - 0x77], ah ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000200007b495c : adc byte ptr [rsi - 0x77], spl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000002000068d669 : adc byte ptr [rsi - 0x7d], ah ; ret
0x0000020000625bc7 : adc byte ptr [rsi - 1], ah ; ret
0x0000020000050923 : adc byte ptr [rsi - 1], ah ; ret 0x4166
0x000002000013ac7c : adc byte ptr [rsi - 9], ah ; sar edi, -1 ; jne 0x2000013ac8d ; ret
0x00000200007d0250 : adc byte ptr [rsi], ah ; ret
0x00000200005b528c : adc byte ptr [rsi], al ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x8941
0x0000020000517166 : adc byte ptr [rsi], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001463d4 : adc byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000002000013f1d3 : adc byte ptr [rsp + 0x40], al ; add rsp, 0x50 ; pop rbx ; ret
0x000002000013c80b : adc byte ptr [rsp + 0x70], al ; add rsp, 0x58 ; ret
0x00000200000343d8 : adc byte ptr [rsp + rdx + 0x4c], dh ; mov dword ptr [rax + 8], eax ; ret
0x00000200004eed17 : adc ch, al ; ret
0x00000200001b2fd8 : adc ch, al ; ret 0xf880
0x0000020000057ca4 : adc ch, bl ; mov ch, 0x41 ; mov eax, edx ; jmp 0x20000057c8b
0x00000200000430ea : adc ch, bl ; ret 0xcccc
0x00000200005698ef : adc ch, byte ptr [rbx] ; ret 0xccc3
0x0000020000052b7c : adc ch, byte ptr [rip - 0x3ed4b800] ; ret
0x000002000018572b : adc ch, ch ; call qword ptr [rax - 0x1213d817]
0x00000200001bc33c : adc ch, dl ; adc eax, dword ptr [rax] ; call rax
0x000002000014942a : adc cl, ah ; add byte ptr [rax], al ; ret
0x000002000014982a : adc cl, al ; add byte ptr [rax], al ; ret
0x000002000014912a : adc cl, bh ; add byte ptr [rax], al ; ret
0x000002000014952a : adc cl, bl ; add byte ptr [rax], al ; ret
0x000002000022a2db : adc cl, byte ptr [rax + 0x2b] ; ret 0x8d49
0x00000200006be69c : adc cl, byte ptr [rax + 0x3b] ; ret 0x2672
0x00000200006be01a : adc cl, byte ptr [rax + 0x3b] ; ret 0x3272
0x000002000022e899 : adc cl, byte ptr [rax + 0x3b] ; ret 0x3372
0x000002000022ee61 : adc cl, byte ptr [rax + 0x3b] ; ret 0x3472
0x000002000022f3b6 : adc cl, byte ptr [rax + 0x3b] ; ret 0x3572
0x00000200003fa62a : adc cl, byte ptr [rax + 0x63] ; ret 0x8b48
0x0000020000462970 : adc cl, byte ptr [rax + 0x63] ; ret 0x8d48
0x000002000020de8e : adc cl, byte ptr [rax + 3] ; ret 0x3b48
0x00000200004089a2 : adc cl, byte ptr [rax + rax*8 - 1] ; add rsp, 0x38 ; ret
0x000002000046f981 : adc cl, byte ptr [rax - 0x73] ; push rbx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000003723 : adc cl, byte ptr [rax - 0x75] ; iretd ; call rsi
0x00000200000c173d : adc cl, byte ptr [rax - 0x75] ; ret
0x00000200001c446d : adc cl, byte ptr [rax - 0x75] ; ret 0x2548
0x0000020000164c09 : adc cl, byte ptr [rax - 0x75] ; ret 0x2b48
0x000002000051ab83 : adc cl, byte ptr [rax - 0x75] ; ret 0x2b49
0x0000020000040a70 : adc cl, byte ptr [rax - 0x75] ; ret 0x4b8d
0x0000020000011f38 : adc cl, byte ptr [rax - 0x75] ; ret 0x8b48
0x0000020000005268 : adc cl, byte ptr [rax - 0x75] ; ret 0xc148
0x000002000052ba64 : adc cl, byte ptr [rax - 0x75] ; shr dword ptr [rdx], 1 ; add ecx, dword ptr [rax - 1] ; ret
0x00000200001d8d86 : adc cl, byte ptr [rax - 0x7d] ; ret
0x000002000023a288 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4504
0x00000200004d16a5 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000020000080edf : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000002000003e140 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x0000020000171345 : adc cl, byte ptr [rax - 0x7d] ; ret 0xb918
0x0000020000008379 : adc cl, byte ptr [rax - 0x7d] ; ror dword ptr [rax], -1 ; ret 0x3b41
0x0000020000450689 : adc cl, byte ptr [rax - 1] ; ret 0x4466
0x000002000013ca40 : adc cl, byte ptr [rax - 1] ; ret 0xe484
0x000002000055c14f : adc cl, byte ptr [rax - 1] ; ret 0xe6eb
0x00000200006eee18 : adc cl, byte ptr [rax] ; and eax, 0x3820125c ; call qword ptr [rdx]
0x00000200006eeea4 : adc cl, byte ptr [rax] ; and eax, 0xbc20125c ; call qword ptr [rdx]
0x00000200006eee04 : adc cl, byte ptr [rax] ; and eax, 0xe20125c ; call qword ptr [rdx]
0x000002000063854a : adc cl, byte ptr [rax] ; ret
0x00000200000cbf0a : adc cl, byte ptr [rbp - 0x73] ; push rdx ; or byte ptr [rax - 0x75], cl ; ret 0xd148
0x000002000051d5c2 : adc cl, byte ptr [rbx + 0x10083] ; add byte ptr [rax + 0x3b], cl ; ret 0x470f
0x000002000003a79b : adc cl, byte ptr [rbx + rdi - 0x40] ; jne 0x2000003a782 ; mov eax, r9d ; ret
0x00000200007d4f17 : adc cl, byte ptr [rbx - 0x4dc46dfb] ; dec dword ptr [rax + 3] ; ret
0x000002000049bd8e : adc cl, byte ptr [rbx - 0x76b3f7be] ; ret 0xff10
0x000002000046beb1 : adc cl, byte ptr [rbx] ; ret
0x000002000066fe81 : adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0x15], 1 ; ret
0x00000200004fd51c : adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0xe], 1 ; ret
0x0000020000118e22 : adc cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000020000049206 : adc cl, byte ptr [rcx - 0x75] ; or byte ptr [r11], sil ; ror byte ptr [rcx - 0x75], cl ; ret
0x00000200002267fa : adc cl, byte ptr [rcx - 0x75] ; ret
0x000002000005c547 : adc cl, byte ptr [rcx - 0x75] ; ret 0x3b49
0x00000200004600f7 : adc cl, byte ptr [rcx - 0x75] ; ret 0x3b4d
0x000002000013e5b3 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4508
0x00000200005abdff : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4902
0x000002000024b34f : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x000002000013b37e : adc cl, byte ptr [rcx - 0x7d] ; ret 0x8502
0x000002000044a100 : adc cl, byte ptr [rcx - 0x7d] ; ret 0xeb02
0x000002000002f844 : adc cl, byte ptr [rcx - 1] ; ret 0x103
0x000002000013b2d4 : adc cl, byte ptr [rcx - 1] ; ret 0xc085
0x0000020000145ada : adc cl, byte ptr [rcx - 1] ; ret 0xf41
0x00000200003d7340 : adc cl, byte ptr [rdi] ; and ah, cl ; ret
0x000002000043bbf1 : adc cl, byte ptr [rdi] ; mov edx, 0x127219e1 ; ret
0x00000200001cfbb6 : adc cl, byte ptr [rdi] ; mov edx, 0x834813ef ; ret
0x00000200005b4565 : adc cl, byte ptr [rdi] ; ret 0x4389
0x00000200000e06f2 : adc cl, byte ptr [rdi] ; test dword ptr [rax], edx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret
0x000002000005a0ee : adc cl, byte ptr [rdi] ; test dword ptr [rcx], edi ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x000002000007a237 : adc cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x90e8
0x000002000014932a : adc cl, ch ; add byte ptr [rax], al ; ret
0x000002000019c23a : adc cl, ch ; or bh, byte ptr [rdx] ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000186b62 : adc cl, ch ; ret
0x00000200005cfb63 : adc cl, ch ; ret 0xffec
0x000002000014972a : adc cl, cl ; add byte ptr [rax], al ; ret
0x000002000014922a : adc cl, dh ; add byte ptr [rax], al ; ret
0x0000020000195db9 : adc cl, dh ; dec dword ptr [rax - 0x3f] ; call 0x1ffc33ca6d8
0x0000020000195df0 : adc cl, dh ; push rsi ; ret 0x7401
0x000002000014962a : adc cl, dl ; add byte ptr [rax], al ; ret
0x0000020000454e19 : adc cl, dl ; call 0x1ffc3472ea9
0x00000200005ae3c7 : adc cl, dl ; call 0x1ffc35cc457
0x00000200005ae3c6 : adc cl, dl ; call 0x1ffc35cc458
0x00000200003ec9ae : adc cl, r13b ; ret
0x00000200001b6bb8 : adc dh, bl ; dec dword ptr [rax - 0x75] ; ret
0x000002000007c663 : adc dh, byte ptr [rbx] ; fisttp dword ptr [rbx + rcx*4 + 0x59] ; and byte ptr [rcx - 0x7f], cl ; ret 0
0x000002000046be96 : adc dh, byte ptr [rbx] ; ret
0x0000020000004213 : adc dh, byte ptr [rdx] ; add byte ptr [rdi + rcx + 0x45], al ; ret
0x000002000013ccc5 : adc dh, byte ptr [rdx] ; ror byte ptr [rax - 0x74b6eefc], 0xc3 ; ret
0x00000200006f5cb5 : adc dh, byte ptr [rsi - 0x3ae2c701] ; ret 0xfff
0x000002000004741c : adc dh, dh ; ret
0x000002000054bb69 : adc dh, dh ; ret 0x7401
0x00000200004e4e5b : adc dh, dh ; ret 0x7404
0x000002000000ff3c : adc dh, dh ; ret 0x7501
0x00000200004c296d : adc dh, dh ; ret 0x753f
0x000002000005c6c5 : adc dh, dh ; ret 0xf01
0x0000020000136584 : adc dil, dil ; ret
0x0000020000148c2a : adc dl, ah ; add byte ptr [rax], al ; ret
0x000002000014902a : adc dl, al ; add byte ptr [rax], al ; ret
0x000002000014892a : adc dl, bh ; add byte ptr [rax], al ; ret
0x0000020000148d2a : adc dl, bl ; add byte ptr [rax], al ; ret
0x0000020000195d40 : adc dl, byte ptr [rcx] ; int1 ; push rsi ; ret 0x7401
0x0000020000717d5a : adc dl, byte ptr [rdi + 1] ; add byte ptr [rax - 0x39], cl ; ret 0x6980
0x0000020000148b2a : adc dl, ch ; add byte ptr [rax], al ; ret
0x0000020000148f2a : adc dl, cl ; add byte ptr [rax], al ; ret
0x0000020000148a2a : adc dl, dh ; add byte ptr [rax], al ; ret
0x00000200006f51a8 : adc dl, dh ; movups xmmword ptr [rcx + 0x20], xmm0 ; ret
0x0000020000148e2a : adc dl, dl ; add byte ptr [rax], al ; ret
0x000002000004ba78 : adc dword ptr [rax + 0x20], eax ; add rsp, 0x30 ; pop rbp ; ret
0x00000200007cbe4f : adc dword ptr [rax + 0x3ae990ff], ebp ; ret 0xfffe
0x000002000005e3ef : adc dword ptr [rax + 0x3b], ecx ; ret
0x00000200004c2fe3 : adc dword ptr [rax + 0x3b], ecx ; ret 0x820f
0x0000020000145bda : adc dword ptr [rax + 0x3b], ecx ; ret 0xc74
0x00000200007a8e7c : adc dword ptr [rax + 0x49003abd], -0x75 ; xchg eax, esp ; ret
0x0000020000151a23 : adc dword ptr [rax + 0xf], ecx ; ret
0x000002000013ccb2 : adc dword ptr [rax + rax*8 - 0xb7eb8c], eax ; ret 0xff49
0x000002000013c9af : adc dword ptr [rax + rax*8 - 0xb7f58c], eax ; ret 0xc2f6
0x000002000061c58a : adc dword ptr [rax + rcx + 0x10], eax ; ret
0x00000200001a7e36 : adc dword ptr [rax + rcx*4 - 0x4d], eax ; ret 0
0x000002000070b749 : adc dword ptr [rax + rcx], eax ; ret
0x00000200007cbe34 : adc dword ptr [rax - 0x16387401], ebp ; push rsi ; ret 0xfffe
0x0000020000403417 : adc dword ptr [rax - 0x3fcd3cff], esi ; ret
0x000002000005a30e : adc dword ptr [rax - 0x6a], 0x3490005 ; leave ; jmp rcx
0x000002000000ae53 : adc dword ptr [rax - 0x73], ecx ; dec dword ptr [r8 + 3] ; ret 0x3b48
0x000002000001a3e2 : adc dword ptr [rax - 0x73], ecx ; or byte ptr [r8 - 0x75], cl ; ret 0xd148
0x00000200001222cc : adc dword ptr [rax - 0x75], ecx ; adc esi, esi ; ret 0x7501
0x00000200001d660d : adc dword ptr [rax - 0x75], ecx ; or byte ptr [r8 + 0x3b], cl ; ret 0xec75
0x00000200000bd340 : adc dword ptr [rax - 0x75], ecx ; ret
0x0000020000242321 : adc dword ptr [rax - 0x75], ecx ; ret 0x3944
0x000002000078f050 : adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x0000020000177283 : adc dword ptr [rax - 0x75], ecx ; ret 0xd148
0x0000020000670380 : adc dword ptr [rax - 0x77], ecx ; add edi, edi ; ret 0x8348
0x000002000008eedf : adc dword ptr [rax - 0x7d], ecx ; clc ; add dh, byte ptr [rbx + 1] ; ret
0x000002000013d1e4 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4402
0x0000020000678ac7 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x000002000013c9c5 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000002000012af90 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4818
0x0000020000237c0a : adc dword ptr [rax - 0x7d], ecx ; ret 0xe808
0x000002000053c825 : adc dword ptr [rax - 0x7f], ecx ; ret 0x98
0x00000200001f9a3f : adc dword ptr [rax - 1], ecx ; ret
0x00000200006f37a0 : adc dword ptr [rax - 1], ecx ; ret 0x8341
0x00000200001aa62f : adc dword ptr [rax - 1], ecx ; ret 0x8948
0x000002000013cd8f : adc dword ptr [rax - 1], ecx ; ret 0xff49
0x000002000013b642 : adc dword ptr [rax - 1], ecx ; ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x2000013b642 ; ret
0x000002000013cf18 : adc dword ptr [rax - 1], ecx ; shr ebx, -0xd ; mov rax, r11 ; ret
0x00000200004b845b : adc dword ptr [rax - 9], ecx ; ret
0x00000200005d115a : adc dword ptr [rax], 0x48005d02 ; add edx, ecx ; jmp rdx
0x000002000061ad0e : adc dword ptr [rax], eax ; add bh, bh ; ret
0x000002000009fd3d : adc dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x000002000077eeec : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001d6910 : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000423b0b : adc dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000078b1a2 : adc dword ptr [rax], eax ; add byte ptr [rbp + 0x33], al ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000020000624b21 : adc dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200000e6daa : adc dword ptr [rax], eax ; add cl, ch ; ret 0xfff7
0x00000200000452e9 : adc dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000042e3e : adc dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000079340 : adc dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x000002000003fe03 : adc dword ptr [rax], eax ; add rsp, 0x40 ; pop rbx ; ret
0x000002000001c0e7 : adc dword ptr [rax], eax ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000026f7a : adc dword ptr [rax], eax ; add rsp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001dc3a9 : adc dword ptr [rax], eax ; call qword ptr [rax]
0x000002000022002a : adc dword ptr [rax], eax ; cmp rax, rdx ; jl 0x20000220025 ; xor eax, eax ; ret
0x0000020000070c33 : adc dword ptr [rax], eax ; mov eax, 1 ; ret
0x000002000006f427 : adc dword ptr [rax], eax ; mov rax, qword ptr [rcx + 8] ; ret
0x0000020000073e48 : adc dword ptr [rax], eax ; mov rax, r8 ; ret
0x00000200001dc35b : adc dword ptr [rax], eax ; mov rbx, rcx ; call qword ptr [rax]
0x00000200004bd66b : adc dword ptr [rax], eax ; mov rcx, qword ptr [r15 + 8] ; call 0x200000e7da9
0x00000200001dc4af : adc dword ptr [rax], eax ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200004bb44a : adc dword ptr [rax], eax ; mov rcx, r14 ; call 0x200000e7258
0x00000200004bd931 : adc dword ptr [rax], eax ; mov rcx, r14 ; call 0x200000e8068
0x00000200004bd2a0 : adc dword ptr [rax], eax ; mov rcx, rbx ; call 0x200000e7da8
0x00000200004bd33c : adc dword ptr [rax], eax ; mov rcx, rdi ; call 0x200000e7258
0x00000200001dc269 : adc dword ptr [rax], eax ; mov rsi, rdx ; mov rbx, rcx ; call qword ptr [rax]
0x00000200001d691c : adc dword ptr [rax], eax ; ret
0x0000020000070cfb : adc dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000076cde : adc dword ptr [rax], eax ; xor eax, eax ; ret
0x0000020000442fbb : adc dword ptr [rax], ecx ; or al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x000002000011bfeb : adc dword ptr [rax], edx ; adc eax, dword ptr [rax] ; jmp 0x2000011bfb9
0x0000020000202047 : adc dword ptr [rax], edx ; add byte ptr [rcx], cl ; add rsp, 0x38 ; ret
0x0000020000224e0f : adc dword ptr [rax], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000952a3 : adc dword ptr [rax], edx ; ret
0x0000020000224e0e : adc dword ptr [rax], r10d ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000952a2 : adc dword ptr [rax], r10d ; ret
0x00000200001213d7 : adc dword ptr [rbp + 0x2b], eax ; ret 0x8941
0x000002000002e496 : adc dword ptr [rbp + 0x33], eax ; rol byte ptr [rbp - 0x75], cl ; ret 0x3b48
0x000002000020f962 : adc dword ptr [rbp + 0x33], eax ; ror byte ptr [rbp - 0x7b], 0xc0 ; jne 0x2000020f931 ; ret
0x00000200006afddc : adc dword ptr [rbp + 0x3b], eax ; ret 0x673
0x00000200006b079c : adc dword ptr [rbp + 0x3b], eax ; ret 0xc01b
0x0000020000071b77 : adc dword ptr [rbp + 0x3b], ecx ; ret 0x820f
0x000002000007ced9 : adc dword ptr [rbp + 1], esi ; ret
0x0000020000077096 : adc dword ptr [rbp + 3], esi ; mov al, 1 ; ret
0x00000200001f01c9 : adc dword ptr [rbp + 3], esi ; xor eax, eax ; ret
0x0000020000010182 : adc dword ptr [rbp + 4], esi ; ret
0x0000020000056c4c : adc dword ptr [rbp + 5], esi ; add rsp, 0x28 ; ret
0x0000020000136ace : adc dword ptr [rbp + 6], esi ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ed052 : adc dword ptr [rbp + 6], esi ; mov al, 1 ; ret
0x000002000001f54f : adc dword ptr [rbp + 7], esi ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000041e52d : adc dword ptr [rbp + 7], esi ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000494cc9 : adc dword ptr [rbp - 0x16], esi ; mov al, 1 ; add rsp, 0x38 ; ret
0x000002000055d35f : adc dword ptr [rbp - 0x3f7af02e], eax ; ret
0x00000200000cd5f3 : adc dword ptr [rbp - 0x73], ecx ; or byte ptr [r8 - 0x75], cl ; ret 0xd148
0x00000200000de598 : adc dword ptr [rbp - 0x75], eax ; ret
0x0000020000047272 : adc dword ptr [rbp - 0x75], ecx ; ret 0x450f
0x000002000049bd7d : adc dword ptr [rbp - 0x75], ecx ; ret 0xc1f6
0x000002000046a190 : adc dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp + 3], cl ; xor eax, eax ; ret
0x000002000000e461 : adc dword ptr [rbp - 0xb], esi ; ret
0x00000200006b4ceb : adc dword ptr [rbx + 0x450f0c47], ecx ; ret 0x4789
0x000002000051383b : adc dword ptr [rbx + 0x48282444], ecx ; add esp, 0x48 ; ret
0x0000020000560099 : adc dword ptr [rbx + 0x4c8b48c2], ecx ; ret
0x0000020000682773 : adc dword ptr [rbx + 0xc], ebx ; add byte ptr [rax + 0x2d0], bh ; ret
0x00000200006a029b : adc dword ptr [rbx + 8], esi ; add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x200006a029d
0x000002000077f69c : adc dword ptr [rbx + rcx*4 + 0x2d], ecx ; cmp al, 0x9c ; ret 0x4cff
0x00000200003cd5bf : adc dword ptr [rbx + rcx*4 + 0x42], ecx ; or byte ptr [rax - 0x75], cl ; ret 0x854d
0x0000020000075184 : adc dword ptr [rbx + rdi - 0x3e], ecx ; jne 0x20000075181 ; sub rax, r8 ; ret
0x00000200005cf7fb : adc dword ptr [rbx - 0x173eebba], ecx ; or byte ptr [rcx + 0x23], al ; ret 0x7fa8
0x0000020000699faa : adc dword ptr [rbx - 0x3b7cb701], ebp ; push rax ; pop rbp ; ret
0x000002000010b29b : adc dword ptr [rbx - 0x7cb7fffa], ecx ; ret 0xe908
0x00000200006a20d4 : adc dword ptr [rbx], ebp ; ret 0x875
0x0000020000780290 : adc dword ptr [rbx], edi ; ret
0x00000200005d4bc3 : adc dword ptr [rbx], edi ; ret 0x2f72
0x000002000055df87 : adc dword ptr [rbx], edi ; ret 0x377
0x000002000023a82d : adc dword ptr [rbx], edi ; ret 0x5f72
0x00000200004f6abb : adc dword ptr [rbx], edx ; sar bh, 0x48 ; add esp, 0x38 ; ret
0x00000200003e5397 : adc dword ptr [rbx], esi ; ret 0x2341
0x00000200001c5cc4 : adc dword ptr [rbx], esi ; ror byte ptr [rax - 0x73], 0xd ; ret 0x159a
0x00000200003d0ad0 : adc dword ptr [rbx], esi ; shr al, cl ; mov esp, 0x8bffc73a ; ret
0x000002000000632a : adc dword ptr [rcx + 0x10], ecx ; add rsp, 0x28 ; ret
0x00000200006f51a6 : adc dword ptr [rcx + 0x10], ecx ; movsd qword ptr [rcx + 0x20], xmm0 ; ret
0x00000200006f51ab : adc dword ptr [rcx + 0x20], eax ; ret
0x00000200000656ca : adc dword ptr [rcx + 0x3b], eax ; ret
0x0000020000553fdf : adc dword ptr [rcx + 0x3b], eax ; ret 0x820f
0x000002000007b65f : adc dword ptr [rcx + 0x3b], ecx ; ret
0x000002000020bc18 : adc dword ptr [rcx + 0x3b], ecx ; ret 0x577
0x0000020000210123 : adc dword ptr [rcx + 0x40], eax ; ret
0x0000020000028883 : adc dword ptr [rcx + 0x48000000], -0x75 ; ret
0x0000020000044d5b : adc dword ptr [rcx + 0x70], ecx ; ret
0x000002000049dc87 : adc dword ptr [rcx + 0xf], ecx ; mov edx, 0xf4c0ee9 ; scasd eax, dword ptr [rdi] ; ret 0xc88b
0x00000200005cb76e : adc dword ptr [rcx + 3], ecx ; ret
0x0000020000080cdf : adc dword ptr [rcx + 3], ecx ; ret 0x894c
0x00000200000952a1 : adc dword ptr [rcx + rdx + 0x10], eax ; ret
0x000002000015bdb8 : adc dword ptr [rcx - 0x75], eax ; ret
0x000002000015bb8b : adc dword ptr [rcx - 0x75], eax ; ret 0xf49
0x000002000006f27e : adc dword ptr [rcx - 0x75], ecx ; and byte ptr [rcx - 0x75], cl ; ret
0x000002000006f30c : adc dword ptr [rcx - 0x75], ecx ; cmp byte ptr [rcx - 0x75], cl ; ret
0x00000200000b5b71 : adc dword ptr [rcx - 0x75], ecx ; ret
0x00000200001f75d0 : adc dword ptr [rcx - 0x75], ecx ; ret 0x3b48
0x000002000006ca45 : adc dword ptr [rcx - 0x75], ecx ; ret 0x45c3
0x00000200006ae990 : adc dword ptr [rcx - 0x75], ecx ; ret 0x48f0
0x00000200001eb071 : adc dword ptr [rcx - 0x75], ecx ; ret 0xc148
0x000002000006f268 : adc dword ptr [rcx - 0x75], ecx ; sbb byte ptr [rcx - 0x75], cl ; ret
0x000002000006f2e1 : adc dword ptr [rcx - 0x75], ecx ; sub byte ptr [rcx - 0x75], cl ; ret
0x0000020000446815 : adc dword ptr [rcx - 0x7d], eax ; ret 0x4507
0x0000020000680fca : adc dword ptr [rcx - 0x7d], ecx ; ret 0x4d20
0x00000200001c7215 : adc dword ptr [rcx - 1], eax ; ret 0x8349
0x00000200001b18ad : adc dword ptr [rcx - 1], eax ; ret 0x8d48
0x00000200001276bc : adc dword ptr [rdi + 0x10], ecx ; add rsp, 0x20 ; pop rdi ; ret
0x000002000040d096 : adc dword ptr [rdi + 0x44000000], -0x75 ; ret
0x00000200007023c3 : adc dword ptr [rdi + 0x5f60000], esp ; ret 0xc3e1
0x000002000013ac2f : adc dword ptr [rdi + rax + 0x2b800], eax ; add al, al ; ret
0x000002000013cf58 : adc dword ptr [rdi + rcx + 0x44], ecx ; ror dword ptr [rcx - 0x75], -0x40 ; ret
0x000002000005cedb : adc dword ptr [rdi], ecx ; mov bh, 0x48 ; add al, byte ptr [rcx - 1] ; ret
0x000002000013cdd6 : adc dword ptr [rdi], ecx ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff49
0x000002000013ce35 : adc dword ptr [rdi], ecx ; test byte ptr [rax + rax - 0xb80000], al ; ret 0xff49
0x000002000004af2f : adc dword ptr [rdi], esi ; add byte ptr [rbx], ch ; ret 0xe083
0x000002000003176d : adc dword ptr [rdx + 0x10], ecx ; ret
0x00000200004ea03e : adc dword ptr [rdx + 0x20], eax ; add rsp, 0x28 ; ret
0x00000200000920d9 : adc dword ptr [rdx + 0x4c0], ecx ; ret
0x00000200007028b2 : adc dword ptr [rdx + 3], esi ; mov al, 1 ; ret
0x0000020000702886 : adc dword ptr [rdx + 6], esi ; shr eax, 0xf ; and al, 1 ; ret
0x00000200001059bd : adc dword ptr [rdx + rbx + 0x18d8], ecx ; ret
0x000002000059e09e : adc dword ptr [rdx - 0x77], eax ; cmp al, 1 ; inc edx ; jmp 0x2000059e08b
0x000002000055e2a2 : adc dword ptr [rdx], eax ; mov dword ptr [rdx + 8], eax ; mov al, r9b ; ret
0x000002000001e100 : adc dword ptr [rdx], eax ; ret
0x00000200006d712b : adc dword ptr [rdx], ecx ; ret 0x48ff
0x00000200005af7cb : adc dword ptr [rsi - 0x166f004c], edi ; ret 0xea51
0x0000020000623ec5 : adc dword ptr [rsi - 0x20], -1 ; add rsp, 0x68 ; ret
0x000002000043baec : adc dword ptr [rsi*2 - 0x3d00be38], ecx ; jmp 0x2000043bac8
0x000002000043baeb : adc dword ptr [rsi*2 - 0x3d00be38], r9d ; jmp 0x2000043bac9
0x00000200004e1544 : adc dword ptr [rsi], ecx ; add rcx, r8 ; jmp rcx
0x00000200001dc35a : adc dword ptr fs:[rax], eax ; mov rbx, rcx ; call qword ptr [rax]
0x00000200001dc268 : adc dword ptr gs:[rax], eax ; mov rsi, rdx ; mov rbx, rcx ; call qword ptr [rax]
0x0000020000151034 : adc eax, 0 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000559022 : adc eax, 0x13299 ; jmp 0x20000558ff2
0x00000200001bbe91 : adc eax, 0x13d9ba ; add rsp, 0x28 ; ret
0x0000020000600ab8 : adc eax, 0x147773 ; xor eax, eax ; ret
0x000002000019e91a : adc eax, 0x158e01 ; call rax
0x000002000018d310 : adc eax, 0x194d31 ; ret
0x000002000000c316 : adc eax, 0x19e1ba0f ; jb 0x2000000c338 ; ret
0x00000200005128de : adc eax, 0x19e1ba0f ; jb 0x20000512900 ; ret
0x00000200001b3050 : adc eax, 0x1a2b33 ; ret
0x0000020000152a26 : adc eax, 0x1a6e25 ; add rsp, 8 ; ret
0x0000020000157b29 : adc eax, 0x1abf7a ; ret
0x0000020000007c3e : adc eax, 0x1b800 ; add al, al ; ret
0x00000200006f49e8 : adc eax, 0x1d890000 ; jg 0x200006f49fb ; ret
0x000002000012d6a1 : adc eax, 0x1dfb5a ; ret
0x00000200004535f2 : adc eax, 0x20408b00 ; add rsp, 0x38 ; ret
0x0000020000035c77 : adc eax, 0x220cf4 ; add rsp, 0x28 ; ret
0x00000200000f7363 : adc eax, 0x23416600 ; leave ; jmp qword ptr [r10 + rax*8]
0x000002000068ba00 : adc eax, 0x24448948 ; and byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000012320 : adc eax, 0x245c0349 ; and byte ptr [rax - 0x75], cl ; ret
0x000002000000c7d5 : adc eax, 0x24ab1e ; jmp 0x2000000c774
0x00000200000853c2 : adc eax, 0x29cc7d ; ret
0x00000200000853bb : adc eax, 0x29cc82 ; ret
0x00000200000853ab : adc eax, 0x29cc95 ; ret
0x00000200000853a4 : adc eax, 0x29cc9a ; ret
0x000002000003573b : adc eax, 0x2ed028 ; ret
0x0000020000035733 : adc eax, 0x2ed038 ; ret
0x00000200001c5cc1 : adc eax, 0x33117500 ; ror byte ptr [rax - 0x73], 0xd ; ret 0x159a
0x000002000018189d : adc eax, 0x348ffed ; ret 0x2bb
0x00000200000e8359 : adc eax, 0x3750000 ; mov al, 1 ; ret
0x00000200001fc2a7 : adc eax, 0x3a410000 ; ret
0x00000200000f5b27 : adc eax, 0x3b002001 ; ret
0x00000200004acdd3 : adc eax, 0x3b480000 ; ret 0x930f
0x0000020000439a8b : adc eax, 0x3bffebdf ; ret 0x840f
0x00000200005f6469 : adc eax, 0x3ce800 ; ret 0x48ff
0x0000020000727925 : adc eax, 0x3d8bffbd ; ret 0xbd16
0x000002000071b5bf : adc eax, 0x3da5c ; add rsp, 0x38 ; ret
0x000002000046c143 : adc eax, 0x421ee800 ; ret 0x48ff
0x000002000000f925 : adc eax, 0x438b4c00 ; or byte ptr [rbp + 0x3b], cl ; ret 0x850f
0x000002000020f305 : adc eax, 0x44ffffff ; mov dword ptr [rdi], ebx ; mov eax, r10d ; jmp 0x2000020f339
0x0000020000713711 : adc eax, 0x45f1a ; add rsp, 0x28 ; ret
0x0000020000713701 : adc eax, 0x45f42 ; add rsp, 0x28 ; ret
0x0000020000045edb : adc eax, 0x48000000 ; add esp, 0x28 ; ret
0x0000020000484457 : adc eax, 0x48000001 ; add esp, 0x38 ; ret
0x0000020000454e65 : adc eax, 0x480015ab ; add esp, 0x20 ; pop rbx ; ret
0x000002000047410b : adc eax, 0x4801b000 ; add esp, 0x38 ; ret
0x000002000044ef7e : adc eax, 0x48c03300 ; add esp, 0x28 ; ret
0x000002000014f002 : adc eax, 0x48fa0000 ; add esp, 8 ; ret
0x000002000070dd5a : adc eax, 0x4c4c1 ; add rsp, 0x58 ; ret
0x000002000070dd91 : adc eax, 0x4c4da ; add rsp, 0x28 ; ret
0x000002000070dc61 : adc eax, 0x4c532 ; add rsp, 0x38 ; ret
0x000002000070d710 : adc eax, 0x4c61b ; add rsp, 0x68 ; ret
0x000002000070d692 : adc eax, 0x4c6a1 ; add rsp, 0x58 ; ret
0x000002000070d639 : adc eax, 0x4c6d2 ; add rsp, 0x68 ; ret
0x000002000070d55b : adc eax, 0x4c730 ; add rsp, 0x38 ; ret
0x000002000070d3cd : adc eax, 0x4c73e ; add rsp, 0x28 ; ret
0x000002000046b4d7 : adc eax, 0x4eb6e800 ; ret 0xfff
0x00000200007068dd : adc eax, 0x52906 ; add rsp, 0x48 ; ret
0x000002000070658d : adc eax, 0x52c56 ; add rsp, 0x48 ; ret
0x00000200000f82f5 : adc eax, 0x58bcc00 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; sub al, byte ptr [rax] ; ret
0x000002000000991f : adc eax, 0x58d4800 ; adc al, 0 ; ret
0x00000200006ff38a : adc eax, 0x59e51 ; add rsp, 0x58 ; ret
0x0000020000151344 : adc eax, 0x71 ; jmp rdx
0x00000200001b6e6c : adc eax, 0x74c33b49 ; adc bh, bh ; ret 0xff49
0x0000020000117213 : adc eax, 0x74d28548 ; adc byte ptr [rax - 0x7d], cl ; ret 0xe804
0x00000200007e0fc1 : adc eax, 0x7e ; add byte ptr [rax], al ; ret 0x7e15
0x000002000045d0b0 : adc eax, 0x83480016 ; ret 0xf02
0x00000200004ac2eb : adc eax, 0x850f0000 ; ret 0x125e
0x0000020000587ad1 : adc eax, 0x85d88b00 ; ror byte ptr [rdi], 0x88 ; ret 0xffe6
0x0000020000009a21 : adc eax, 0x894100 ; xor eax, eax ; ret
0x00000200006c0d5f : adc eax, 0x8b000001 ; ret 0xe083
0x00000200004a08e3 : adc eax, 0x8b000006 ; ret
0x00000200005cc37b : adc eax, 0x8b000592 ; ret
0x0000020000058e77 : adc eax, 0x8b00353f ; add al, 0x81 ; ret
0x00000200000296ff : adc eax, 0x8b0037fb ; ret 0x8b48
0x000002000017767f : adc eax, 0x8b173b44 ; ret
0x000002000012f4d5 : adc eax, 0x8b378966 ; ret
0x0000020000133cee : adc eax, 0x8b44001f ; ret
0x0000020000607815 : adc eax, 0x8b44ffe0 ; ret
0x000002000016411a : adc eax, 0x8b49ffeb ; ret 0x3b48
0x00000200005a54bb : adc eax, 0x8b4c0000 ; ret
0x0000020000125c53 : adc eax, 0x8b4c0005 ; ret
0x00000200004714e2 : adc eax, 0x8bd23300 ; ret 0x8841
0x0000020000453a67 : adc eax, 0x8bffc296 ; ret
0x0000020000476787 : adc eax, 0x8bffc716 ; ret
0x0000020000405887 : adc eax, 0x8bffce25 ; ret
0x00000200005133e7 : adc eax, 0x8bffd39c ; ret
0x00000200001c5fe7 : adc eax, 0x8bffefda ; ret
0x00000200005da2fb : adc eax, 0x8bfff13b ; ret
0x00000200001cc471 : adc eax, 0x940f0100 ; ret 0x5188
0x0000020000591c87 : adc eax, 0xc0000 ; add byte ptr [rax], al ; call 0x2000040deb9
0x00000200000099cf : adc eax, 0xc033c300 ; ret
0x000002000045680a : adc eax, 0xc033ffc9 ; add rsp, 0x28 ; ret
0x0000020000010c28 : adc eax, 0xc2834900 ; or byte ptr [rcx - 9], cl ; ret 0xfff
0x000002000000ff55 : adc eax, 0xc301b000 ; xor al, al ; ret
0x00000200000f0abb : adc eax, 0xc4834800 ; push rax ; pop rsi ; ret
0x00000200001c11e7 : adc eax, 0xce0c100 ; mov dword ptr [r8 + 0x28], eax ; ret
0x000002000044d8fb : adc eax, 0xce8b4900 ; call 0x20000078b98
0x000002000021fc4a : adc eax, 0xdf8fd ; mov eax, r8d ; ret
0x00000200001fc4bc : adc eax, 0xe0058900 ; ret 0x12
0x00000200007c1da0 : adc eax, 0xe8cb8b48 ; ret
0x00000200005ef925 : adc eax, 0xe8ce8b48 ; ret 0xb086
0x00000200004db4b9 : adc eax, 0xe9ffffe7 ; ret
0x000002000024b3f2 : adc eax, 0xeb000000 ; or byte ptr [rbx], cl ; ret 0x8789
0x000002000024db56 : adc eax, 0xeb834800 ; adc byte ptr [rax + 0x33], cl ; ret
0x00000200003e5c2b : adc eax, 0xebffe301 ; shr al, cl ; push 9 ; ret 0xebff
0x00000200000c47b3 : adc eax, 0xf6000003 ; ret
0x000002000069d895 : adc eax, 0xff48028b ; ret
0x000002000054b87b : adc eax, 0xffaf2c44 ; call 0x20000057adb
0x00000200007ab4aa : adc eax, 0xffb560f1 ; ret
0x00000200007bcaf8 : adc eax, 0xffb6083b ; ret
0x000002000068d49a : adc eax, 0xffc7ff41 ; ret 0x9489
0x0000020000653c67 : adc eax, 0xffced4b8 ; xor eax, eax ; ret
0x0000020000629c80 : adc eax, 0xffd7f633 ; call r10
0x000002000062938c : adc eax, 0xffd7ff27 ; call r10
0x0000020000626b60 : adc eax, 0xffd82753 ; call r10
0x000002000049c875 : adc eax, 0xffdba8a6 ; call 0x200000c7478
0x000002000049c8c6 : adc eax, 0xffdbcb85 ; call 0x200000c7478
0x00000200003dce22 : adc eax, 0xffe79a61 ; add rsp, 0x38 ; ret
0x0000020000512c94 : adc eax, 0xffe9661f ; call r10
0x0000020000445889 : adc eax, 0xffed7b32 ; mov rax, rdx ; ret
0x00000200003db054 : adc eax, 0xfff180a7 ; add rsp, 0x28 ; ret
0x00000200003fa1a1 : adc eax, 0xfff2379a ; mov rax, rdx ; ret
0x000002000046e6db : adc eax, 0xfff3abd8 ; call r10
0x000002000043dac9 : adc eax, 0xfff6b7ea ; call r10
0x000002000042ec89 : adc eax, 0xfff7a62a ; call r10
0x000002000050299f : adc eax, 0xffffeff5 ; ret
0x0000020000692f61 : adc eax, dword ptr [rax] ; add bl, ch ; xor esi, esi ; ret
0x00000200004cac89 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200004009ad : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x00000200003e529f : adc eax, dword ptr [rax] ; add byte ptr [rax], bh ; pop rbp ; ret 0x850f
0x000002000024e015 : adc eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000692f7a : adc eax, dword ptr [rax] ; add dh, dh ; ret
0x000002000047f71a : adc eax, dword ptr [rax] ; add dh, dh ; ret 0x7401
0x0000020000032b7e : adc eax, dword ptr [rax] ; add rax, r8 ; add rsp, 0x38 ; ret
0x0000020000039ead : adc eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000394e : adc eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000037823 : adc eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000007ea9 : adc eax, dword ptr [rax] ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000007f54 : adc eax, dword ptr [rax] ; add rsp, 0x648 ; ret
0x00000200001c94fb : adc eax, dword ptr [rax] ; call 0x200000e5724
0x00000200001bcdae : adc eax, dword ptr [rax] ; call r9
0x00000200001bbdde : adc eax, dword ptr [rax] ; call rax
0x0000020000029b8e : adc eax, dword ptr [rax] ; call rdi
0x00000200001bcaa8 : adc eax, dword ptr [rax] ; je 0x200001bcab5 ; mov eax, ecx ; ret
0x000002000011bfed : adc eax, dword ptr [rax] ; jmp 0x2000011bfb7
0x00000200005b9fb9 : adc eax, dword ptr [rax] ; jmp 0x2000052d77e
0x00000200001bf520 : adc eax, dword ptr [rax] ; lea ecx, dword ptr [rax + 0x7b] ; call r9
0x00000200001c0ba3 : adc eax, dword ptr [rax] ; lea rcx, qword ptr [rbp - 0x50] ; call 0x200001bce60
0x0000020000432837 : adc eax, dword ptr [rax] ; lea rcx, qword ptr [rbp - 0x78] ; call 0x2000005f909
0x0000020000492362 : adc eax, dword ptr [rax] ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200001d2e5c : adc eax, dword ptr [rax] ; mov dword ptr [rcx], eax ; ret
0x00000200000450dc : adc eax, dword ptr [rax] ; mov eax, 0x10 ; ret
0x0000020000048e1e : adc eax, dword ptr [rax] ; mov eax, 1 ; ret
0x000002000002eb44 : adc eax, dword ptr [rax] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004968be : adc eax, dword ptr [rax] ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000494872 : adc eax, dword ptr [rax] ; mov eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000393d3 : adc eax, dword ptr [rax] ; mov eax, r10d ; jmp 0x200000393b7
0x000002000003c3c3 : adc eax, dword ptr [rax] ; mov eax, r8d ; ret
0x000002000049030c : adc eax, dword ptr [rax] ; mov rcx, rbp ; call rax
0x000002000003088f : adc eax, dword ptr [rax] ; mov rcx, rdi ; call rbx
0x000002000002e676 : adc eax, dword ptr [rax] ; ret
0x00000200001e4b25 : adc eax, dword ptr [rax] ; ret 0
0x00000200000309b9 : adc eax, dword ptr [rax] ; xor eax, eax ; ret
0x000002000007f5b2 : adc eax, dword ptr [rbp - 0x77] ; push rcx ; add al, 0x41 ; mov dword ptr [rcx], eax ; ret
0x00000200003f3770 : adc eax, dword ptr [rbp - 0x7b] ; sal byte ptr [rsi + rcx + 0x4c], 0x8b ; ret
0x000002000024515d : adc eax, dword ptr [rbx - 0x7cb7073f] ; ret
0x0000020000249bf7 : adc eax, dword ptr [rbx - 0x7cb70740] ; ret
0x0000020000446789 : adc eax, dword ptr [rcx + rcx*4 + 1] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000b14ac : adc eax, dword ptr [rcx - 0x73] ; dec dword ptr [rcx - 1] ; ret
0x000002000020f037 : adc eax, dword ptr [rcx - 0x73] ; inc dword ptr [rbp + 0x39] ; ret 0x7304
0x000002000044a121 : adc eax, dword ptr [rcx - 0x75] ; ret
0x00000200001e3164 : adc eax, dword ptr [rcx - 0x75] ; ret 0x8349
0x00000200004ef28d : adc eax, dword ptr [rcx - 0x75] ; ret 0x8d48
0x000002000018b373 : adc eax, dword ptr [rcx - 0x75] ; ret 0xe2d3
0x00000200005ca39d : adc eax, dword ptr [rcx - 0x75] ; ret 0xe8c1
0x0000020000247e92 : adc eax, dword ptr [rcx - 0x7f] ; ret 0xff38
0x000002000079ff4b : adc eax, dword ptr [rcx - 0xa] ; ret 0x7401
0x0000020000696c94 : adc eax, dword ptr [rcx - 0xa] ; ret 0x7510
0x0000020000115e1b : adc eax, dword ptr [rsi] ; add byte ptr [rax + 1], bh ; ret
0x00000200004ed052 : adc eax, eax ; dec dword ptr [rbx - 0x74cfdba4] ; ret
0x0000020000191db8 : adc eax, ebp ; ret 0xf0e6
0x0000020000430a75 : adc eax, ebx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000157bd9 : adc eax, esi ; or dword ptr [rsp], 0 ; ret
0x0000020000080cd9 : adc ebp, dword ptr [rbx - 0x76b7fff0] ; adc dword ptr [rcx + 3], ecx ; ret 0x894c
0x0000020000036c73 : adc ebp, dword ptr [rbx] ; ret 0xc0ff
0x0000020000107c4c : adc ebp, dword ptr [rbx] ; ret 0xc703
0x000002000067993b : adc ebp, dword ptr [rdi + rdi*8 + 0x68c48348] ; ret
0x00000200006798c8 : adc ebp, dword ptr [rdi + rdi*8 + 0x78c48348] ; ret
0x00000200001182c9 : adc ebp, ebx ; mov dl, 0xf6 ; ret 0x7410
0x00000200007c394d : adc ebp, edi ; ret
0x0000020000701778 : adc ebp, esi ; ret
0x0000020000463c6b : adc ebx, 0x15 ; add byte ptr [rax - 0x75], cl ; ret 0xb948
0x00000200005b03c5 : adc ebx, 6 ; add bl, ch ; ret 0x3b9
0x000002000071a171 : adc ebx, dword ptr [rax + rsi*4 - 1] ; add rsp, 0x28 ; ret
0x000002000014e54c : adc ebx, dword ptr [rbx + 0x5f] ; pop rsi ; ret
0x0000020000048483 : adc ebx, dword ptr [rcx + 0x13] ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001d2921 : adc ebx, eax ; mov byte ptr [rcx], dl ; ret
0x00000200001d291a : adc ebx, eax ; mov dword ptr [rcx], edx ; ret
0x00000200001d20e6 : adc ebx, eax ; mov eax, 0xc000000d ; ret
0x00000200001d291d : adc ebx, eax ; mov word ptr [rcx], dx ; ret
0x000002000042a839 : adc ebx, esp ; ret
0x000002000017e663 : adc ecx, dword ptr [rax - 0x73] ; dec dword ptr [r9 + 3] ; ret 0x2349
0x000002000009a132 : adc ecx, dword ptr [rax - 0x73] ; dec qword ptr [rax - 0x75] ; ret 0x48f0
0x000002000005c544 : adc ecx, dword ptr [rax - 0x75] ; adc cl, byte ptr [rcx - 0x75] ; ret 0x3b49
0x000002000065e68a : adc ecx, dword ptr [rax - 0x75] ; or byte ptr [r8 + 0x2b], cl ; ret 0x3b48
0x0000020000129275 : adc ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x00000200000e7dce : adc ecx, dword ptr [rax - 0x75] ; ret
0x0000020000187a70 : adc ecx, dword ptr [rax - 0x75] ; ret 0xf48
0x00000200005e0c62 : adc ecx, dword ptr [rax - 0x75] ; retf ; call 0x2000005ce76
0x0000020000683528 : adc ecx, dword ptr [rax - 0x75] ; retf ; call qword ptr [rax]
0x000002000013c43c : adc ecx, dword ptr [rax - 0x75] ; salc ; mov rcx, rbx ; call r14
0x00000200000c8059 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000144b11 : adc ecx, dword ptr [rax - 1] ; ret
0x00000200006753e5 : adc ecx, dword ptr [rbp + rcx*4 + 0xd] ; ret
0x0000020000448bb1 : adc ecx, dword ptr [rbp - 0x75] ; ret 0x8b41
0x00000200001752e4 : adc ecx, dword ptr [rbp - 0x77] ; or byte ptr [r9 - 0x7d], cl ; ret
0x000002000070e65e : adc ecx, dword ptr [rbx - 0x4085c4eb] ; push rsi ; ret 0x7410
0x00000200007295cd : adc ecx, dword ptr [rbx - 0x50f0ebb5] ; ret 0xc82b
0x000002000062bb55 : adc ecx, dword ptr [rcx + 3] ; ret
0x0000020000121f7e : adc ecx, dword ptr [rcx - 0x75] ; ret 0x8b48
0x00000200001213d4 : adc ecx, dword ptr [rcx - 0x77] ; adc dword ptr [rbp + 0x2b], eax ; ret 0x8941
0x000002000004413a : adc ecx, dword ptr [rcx - 0x7d] ; call 0x20048e2b64c
0x000002000022e4cf : adc ecx, dword ptr [rcx - 0x7d] ; call 0x2004a0059e1
0x000002000022e6c9 : adc ecx, dword ptr [rcx - 0x7d] ; call 0x2004a005bdb
0x000002000024c6b1 : adc ecx, dword ptr [rcx - 0x7d] ; call 0x2004a023bc3
0x000002000018b42f : adc ecx, dword ptr [rcx - 0x7d] ; ret
0x000002000014022c : adc ecx, dword ptr [rcx - 1] ; ret
0x0000020000195d41 : adc ecx, esi ; push rsi ; ret 0x7401
0x00000200006652e9 : adc edi, dword ptr [rbp - 0x42] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000171b13 : adc edi, dword ptr [rbx] ; ret
0x00000200003e7219 : adc edi, dword ptr [rcx - 0x7af0000d] ; wait ; ret 0x19
0x00000200004d50e9 : adc edi, dword ptr [rdi - 0x74b7004e] ; ret
0x0000020000718819 : adc edi, dword ptr [rdi] ; xchg eax, ebp ; dec dword ptr [rax + 0x3b] ; ret 0x1675
0x000002000046edce : adc edi, dword ptr [rdx] ; ret 0x5577
0x0000020000566dc9 : adc edi, dword ptr [rsi - 0x3b7cb701] ; pop rax ; ret
0x00000200007e1311 : adc edi, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7e13
0x000002000021fc41 : adc edi, ecx ; or eax, 0xc38b4100 ; ret
0x00000200004ec884 : adc edi, edi ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c48d6 : adc edi, edi ; ret
0x00000200000e85d6 : adc edi, edi ; ret 0x5388
0x000002000006041b : adc edi, edi ; ret 0x5688
0x00000200000e5e49 : adc edi, edi ; ret 0x5788
0x00000200006af951 : adc edi, edi ; ret 0x6348
0x0000020000007028 : adc edi, edi ; ret 0x8349
0x00000200000e1906 : adc edi, edi ; ret 0x8944
0x000002000013565b : adc edi, edi ; ret 0x8b41
0x0000020000657090 : adc edi, edi ; ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xf172
0x0000020000428a39 : adc edi, edx ; ret
0x000002000020bd5c : adc edi, esp ; dec dword ptr [rax - 0x75] ; retf ; call 0x200000e8068
0x000002000049ec48 : adc edx, dword ptr [r11] ; add dh, dh ; ret
0x0000020000193236 : adc edx, dword ptr [rbp - 0x74b70010] ; ret 0x2b48
0x000002000049ec49 : adc edx, dword ptr [rbx] ; add dh, dh ; ret
0x0000020000462745 : adc edx, dword ptr [rdx] ; ret
0x0000020000177946 : adc edx, edi ; call qword ptr [rax - 0x60b3d17]
0x0000020000075227 : adc esi, dword ptr [rbp + 0x12] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021c778 : adc esi, dword ptr [rdx - 8] ; jmp 0x2000021c790
0x000002000012d921 : adc esi, dword ptr [rsi + 6] ; lea eax, dword ptr [rcx - 0x13] ; mov dword ptr [r8], eax ; ret
0x000002000061a429 : adc esi, dword ptr [rsi] ; ret
0x00000200004639e9 : adc esi, edi ; ret 0
0x000002000018b2b0 : adc esi, edi ; rol byte ptr [rcx + 0x23], 1 ; add ebx, edx ; loop 0x2000018b2cd ; ret 0x8941
0x00000200001e3bb3 : adc esi, esi ; ret
0x00000200000ac7da : adc esi, esi ; ret 0x7401
0x0000020000183046 : adc esi, esi ; ret 0x7402
0x00000200001222cf : adc esi, esi ; ret 0x7501
0x0000020000013bf2 : adc esi, esi ; ret 0xf01
0x00000200004ac441 : adc esi, esi ; ret 0xf08
0x00000200004b9b8e : adc esi, esi ; ret 0xf1c
0x000002000065f7ec : adc esi, esi ; ret 0xf3f
0x00000200004a6309 : adc esi, esp ; ret
0x000002000023333a : adc esp, dword ptr [rax] ; or byte ptr [rax - 0x73], 0x4f ; and bh, bh ; ret
0x0000020000632304 : adc esp, dword ptr [rbx] ; add rdx, r8 ; jmp rdx
0x000002000043aee9 : adc esp, dword ptr [rbx] ; ret
0x00000200000820a8 : adc esp, dword ptr [rcx + rax] ; ret
0x000002000068c716 : adc esp, dword ptr [rsi + 0x3b] ; ret 0xe74
0x0000020000232294 : adc esp, dword ptr [rsi + 0xf] ; out dx, eax ; ret
0x00000200002325c8 : adc esp, dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x8349
0x00000200006da6b4 : adc esp, dword ptr [rsi + 0xfc085ff] ; xchg eax, esp ; ret
0x0000020000471986 : adc esp, dword ptr [rsi - 0x7d] ; ret 0x6602
0x00000200003e00ef : adc esp, ebp ; ret 0x84ff
0x00000200003d28e9 : adc esp, edi ; ret 0x8bff
0x00000200005cac4b : adc esp, edx ; mov cl, 0xff ; call 0x200000e6eb6
0x0000020000074fb7 : adc qword ptr [rax], rax ; mov eax, 1 ; ret
0x000002000004af2e : adc qword ptr [rdi], r14 ; add byte ptr [rbx], ch ; ret 0xe083
0x00000200006f51a7 : adc r10b, sil ; movups xmmword ptr [rcx + 0x20], xmm0 ; ret
0x00000200007990bd : adc r11b, bpl ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000000ba94 : adc r11b, bpl ; int1 ; ret
0x000002000021c851 : adc r11b, bpl ; sub byte ptr [rax - 0x73], cl ; mov bh, bh ; ret
0x0000020000233339 : adc r12d, dword ptr [rax] ; or byte ptr [rax - 0x73], 0x4f ; and bh, bh ; ret
0x000002000004741b : adc r14b, r14b ; ret
0x000002000006fe5c : adc r14b, sil ; ret
0x000002000003d4c4 : adc r15b, dil ; add rsp, 0x20 ; pop rbx ; ret
0x000002000020c048 : adc r15b, dil ; ret
0x000002000003e0aa : adc r15b, dil ; ret 0x44c6
0x0000020000185af3 : adc r15b, dil ; ret 0xd03b
0x000002000044c9ea : adc r8b, bpl ; pop qword ptr [rsi] ; ret
0x00000200005fadc0 : adc r8b, bpl ; push rcx ; ret 0xffe6
0x00000200005cac48 : adc r8b, r13b ; adc esp, edx ; mov cl, 0xff ; call 0x200000e6eb9
0x00000200004c74a3 : adc r8b, r13b ; mov dh, 0xb ; ret 0xe8ff
0x000002000063904f : adc r8b, r13b ; ret 0xe2df
0x00000200004bea71 : adc r8b, r13b ; sbb ah, bh ; ret 0x84ff
0x0000020000118af7 : adc r8d, dword ptr [r8] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000186b61 : adc r9b, bpl ; ret
0x0000020000454e18 : adc r9b, dl ; call 0x1ffc3472eaa
0x00000200000375c1 : adc rax, qword ptr [r8] ; ret
0x0000020000037822 : adc rax, qword ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000037172 : adc rax, qword ptr [rax] ; ret
0x0000020000037821 : adc rax, qword ptr es:[rax] ; add rsp, 0x38 ; ret
0x00000200001f5829 : adc sil, sil ; ret
0x0000020000117b8c : add ah, bh ; ret
0x00000200006844cb : add ah, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200004b33a9 : add ah, byte ptr [rcx + rax] ; mov byte ptr [r8], al ; xor eax, eax ; ret
0x0000020000042a58 : add ah, byte ptr [rcx + rax] ; ret
0x00000200007926d4 : add ah, byte ptr [rdi + rax*4 + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x00000200006b236d : add ah, byte ptr [rdx] ; ret
0x00000200006d1d02 : add ah, byte ptr [rsi + 0x3b] ; ret
0x0000020000458928 : add ah, byte ptr [rsi + 0x41] ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200000c8e78 : add ah, byte ptr [rsi + 0x41] ; mov dword ptr [rdx + 2], eax ; ret
0x00000200007124a4 : add ah, byte ptr [rsi + 0x44] ; mov dword ptr [rdx + 2], eax ; ret
0x000002000013b35e : add ah, byte ptr [rsi - 0x77] ; or dh, bh ; fmul dword ptr [rbp - 0x75] ; ret 0xd233
0x000002000013d18a : add ah, byte ptr [rsi - 0x7b] ; sal byte ptr [rbp - 0x11], 0x48 ; mov eax, ecx ; ret
0x000002000044e1c3 : add ah, byte ptr [rsi - 0x7b] ; sal byte ptr [rbp - 0x16], 0x8b ; ret
0x0000020000420e02 : add ah, byte ptr [rsi - 0x7d] ; jmp qword ptr [rax]
0x000002000067070c : add ah, byte ptr [rsi - 9] ; fadd dword ptr [rcx - 0x75] ; ret 0xc91a
0x000002000014ba03 : add ah, byte ptr [rsi - 9] ; ret 0x100
0x0000020000032b3a : add ah, cl ; lea rax, qword ptr [rcx + 0x450] ; ret
0x000002000045654a : add ah, cl ; lock inc dword ptr [rcx + 0x760] ; ret
0x00000200000f82f6 : add ah, cl ; mov eax, dword ptr [rip + 0x2afda6] ; ret
0x00000200007bd2de : add ah, cl ; mov qword ptr [rip - 0x49c3ff], rcx ; ret
0x000002000070deaa : add ah, cl ; mov rax, qword ptr [rsp + 0x30] ; jmp rax
0x000002000020e598 : add ah, cl ; mov rax, rcx ; add rsp, 0x28 ; ret
0x000002000015119f : add ah, cl ; ret
0x00000200005695da : add ah, cl ; xchg qword ptr [rip + 0x1debcd], rcx ; ret
0x00000200005332b4 : add al, 0 ; add al, al ; ret
0x00000200005d0687 : add al, 0 ; add al, ch ; int1 ; jno 0x200005d064d ; jmp qword ptr [rcx]
0x00000200006921ff : add al, 0 ; add al, ch ; jns 0x20000692262 ; lodsb al, byte ptr [rsi] ; jmp qword ptr [rcx]
0x000002000007a4a5 : add al, 0 ; add al, ch ; ret
0x0000020000107976 : add al, 0 ; add al, ch ; ret 0x498
0x0000020000694e8b : add al, 0 ; add bh, bh ; ret
0x00000200000b6367 : add al, 0 ; add bh, bh ; ret 0x8b48
0x000002000020b93b : add al, 0 ; add bl, al ; xor eax, eax ; ret
0x00000200006a4205 : add al, 0 ; add bl, dh ; movq qword ptr [rcx], mm0 ; ret
0x00000200006542ab : add al, 0 ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x0000020000226523 : add al, 0 ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000077d873 : add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000043b124 : add al, 0 ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000009da3c : add al, 0 ; add byte ptr [rax + 0x3b], cl ; ret 0xe874
0x00000200004b8aee : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200000808d4 : add al, 0 ; add byte ptr [rax + 3], cl ; ret 0xccc3
0x0000020000157b64 : add al, 0 ; add byte ptr [rax + 5], cl ; loopne 0x20000157b77 ; add byte ptr [rax], al ; ret
0x0000020000213058 : add al, 0 ; add byte ptr [rax + rax*8 - 0x74b39a8c], al ; ret
0x0000020000213068 : add al, 0 ; add byte ptr [rax + rax*8 - 0x74b3aa8c], al ; ret
0x00000200004d324d : add al, 0 ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200000ab717 : add al, 0 ; add byte ptr [rax - 0x3f], cl ; jmp 0x200000ab733
0x000002000065f7e7 : add al, 0 ; add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0xf3f
0x0000020000594269 : add al, 0 ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200000ab605 : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000ca9e7 : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x3b4c
0x00000200000b44b8 : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x5189
0x000002000049116d : add al, 0 ; add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; test dl, ch ; ret 0x13
0x00000200000da7e1 : add al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 5
0x000002000023ce6e : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006a96d1 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4807
0x00000200000c17e8 : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000681879 : add al, 0 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000137381 : add al, 0 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000021759b : add al, 0 ; add byte ptr [rax], al ; and eax, 1 ; ret
0x0000020000631e02 : add al, 0 ; add byte ptr [rax], al ; call 0x200004fe0a2
0x00000200006802a4 : add al, 0 ; add byte ptr [rax], al ; je 0x200006802b6 ; and eax, 0x1f ; ret
0x00000200001ce70e : add al, 0 ; add byte ptr [rax], al ; mov rax, rdx ; ret
0x000002000001e4ed : add al, 0 ; add byte ptr [rax], al ; mov word ptr [r10 + 0x10], r9w ; ret
0x0000020000041c26 : add al, 0 ; add byte ptr [rax], al ; ret
0x0000020000680054 : add al, 0 ; add byte ptr [rax], al ; setne al ; ret
0x0000020000022b98 : add al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000002be98 : add al, 0 ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x000002000059b9fc : add al, 0 ; add byte ptr [rbp - 0x75], al ; ret 0xd0ff
0x00000200006834fc : add al, 0 ; add byte ptr [rbp - 0x7b], cl ; leave ; jne 0x200006834e5 ; ret
0x000002000066c336 : add al, 0 ; add byte ptr [rbx], bh ; ret
0x00000200000b2a64 : add al, 0 ; add byte ptr [rbx], dh ; ret 0x8489
0x000002000060daf4 : add al, 0 ; add byte ptr [rbx], dh ; shr al, cl ; add dh, ch ; ret
0x000002000068d157 : add al, 0 ; add byte ptr [rcx + 0x3b], cl ; ret 0xb76
0x0000020000691c6a : add al, 0 ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000690828 : add al, 0 ; add byte ptr [rcx + 3], al ; ret 0x4589
0x00000200006f5d36 : add al, 0 ; add byte ptr [rcx - 0x73], al ; call 0x2004531608e
0x0000020000107eee : add al, 0 ; add byte ptr [rcx - 0x75], al ; ret 0x2348
0x000002000013131f : add al, 0 ; add byte ptr [rcx - 0x7c], al ; ret
0x000002000022fbee : add al, 0 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000002000041a87d : add al, 0 ; add byte ptr [rcx - 1], al ; ret
0x0000020000144093 : add al, 0 ; add byte ptr [rcx - 1], al ; ret 0x4de9
0x00000200002255eb : add al, 0 ; add byte ptr [rcx], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007d16a1 : add al, 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200000c55e9 : add al, 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000066f03 : add al, 0 ; add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0x0000020000065fc2 : add al, 0 ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200005d1c44 : add al, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x31e8
0x00000200005eb95e : add al, 0 ; add byte ptr [rsi + 0x3b], ah ; ret 0x2174
0x00000200001aca7c : add al, 0 ; add byte ptr [rsi - 0x7b], ah ; ret
0x00000200004b683f : add al, 0 ; add byte ptr [rsi - 0x7b], ah ; ret 0x850f
0x000002000009c4d9 : add al, 0 ; add dh, dh ; ret
0x00000200000a4b4a : add al, 0 ; add dh, dh ; ret 0x740f
0x0000020000075503 : add al, 0 ; add dh, dh ; ret 0xf0f
0x0000020000041c1e : add al, 0 ; add rcx, rdx ; jmp rcx
0x000002000070d3d0 : add al, 0 ; add rsp, 0x28 ; ret
0x0000020000043ed7 : add al, 0 ; add rsp, 0x38 ; ret
0x00000200000f8e9b : add al, 0 ; add rsp, 0x40 ; pop rbx ; ret
0x000002000070d695 : add al, 0 ; add rsp, 0x58 ; ret
0x000002000070d63c : add al, 0 ; add rsp, 0x68 ; ret
0x00000200006a2467 : add al, 0 ; call 0x200006a1eb1
0x0000020000710a77 : add al, 0 ; call 0x20000710da5
0x00000200000fd65d : add al, 0 ; je 0x200000fd66a ; mov al, 1 ; ret
0x00000200006100ec : add al, 0 ; je 0x200006100f9 ; xor eax, eax ; ret
0x000002000062af4b : add al, 0 ; je 0x2000062af5e ; mov eax, 0xc0000120 ; ret
0x00000200006994df : add al, 0 ; je 0x200006994ec ; mov al, 1 ; ret
0x000002000070285c : add al, 0 ; jl 0x20000702869 ; mov al, 1 ; ret
0x000002000002814c : add al, 0 ; mov al, r8b ; ret
0x000002000003ff03 : add al, 0 ; mov dword ptr [rax], r9d ; add rsp, 0x28 ; ret
0x00000200005352c4 : add al, 0 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000043c1fb : add al, 0 ; or dword ptr [rax], eax ; je 0x2000043c20c ; xor al, al ; ret
0x0000020000044097 : add al, 0 ; or dword ptr [rcx - 0x75], ecx ; ret 0x8b49
0x000002000004397a : add al, 0 ; ret
0x0000020000641564 : add al, 0 ; ror byte ptr [rdi], 0x85 ; ret
0x0000020000039054 : add al, 0 ; sal byte ptr [rbp + rdi - 0x50], 1 ; ret
0x000002000008c1ab : add al, 0 ; sal byte ptr [rbx + rax - 0x50], 1 ; ret
0x000002000063768e : add al, 0 ; shr cl, 0x42 ; sbb dword ptr [rax], eax ; add dh, dh ; ret 0x7440
0x000002000070c065 : add al, 0 ; test rax, rax ; je 0x2000070c077 ; jmp rax
0x000002000001be1e : add al, 0x10 ; sub rcx, rax ; mov rax, rcx ; ret
0x00000200004c95b3 : add al, 0x11 ; add dh, dh ; ret
0x000002000055df86 : add al, 0x11 ; cmp eax, edx ; ja 0x2000055df97 ; mov eax, ecx ; ret
0x000002000059e09d : add al, 0x11 ; mov dword ptr [rcx + r8], edi ; inc edx ; jmp 0x2000059e08c
0x000002000013ccc9 : add al, 0x11 ; mov rax, r11 ; ret
0x0000020000151a37 : add al, 0x11 ; movnti qword ptr [rcx], rax ; sfence ; ret
0x00000200001eb11c : add al, 0x11 ; ret
0x000002000049fc4a : add al, 0x13 ; add byte ptr [rax - 0x75], cl ; or byte ptr [rcx + 0x23], cl ; ret
0x0000020000566dc8 : add al, 0x13 ; mov esi, 0xc48348ff ; pop rax ; ret
0x0000020000703b80 : add al, 0x13 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000052c68 : add al, 0x14 ; add byte ptr [rax], al ; ret
0x0000020000412c43 : add al, 0x14 ; sbb byte ptr [rax], al ; inc edx ; jmp 0x20000412c32
0x000002000000a368 : add al, 0x15 ; add bl, al ; xor eax, eax ; ret
0x000002000071a1ac : add al, 0x19 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b8654 : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000200001529c9 : add al, 0x24 ; add rsp, 8 ; ret
0x00000200003e7235 : add al, 0x24 ; and dword ptr [rcx + rax], edi ; je 0x200003e726e ; jmp 0x200005834db
0x00000200000480c6 : add al, 0x24 ; cmove ebp, dword ptr [rdx] ; ret 0xc041
0x000002000049eb2d : add al, 0x24 ; mov eax, edx ; add rsp, 0x18 ; ret
0x0000020000157af2 : add al, 0x24 ; ret
0x0000020000097a03 : add al, 0x24 ; shr eax, 9 ; and eax, 1 ; pop rcx ; ret
0x0000020000123216 : add al, 0x25 ; add al, 0x5e ; add byte ptr [rax], al ; ret
0x000002000000802b : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax + 0x33], al ; ret 0xd233
0x00000200001b9bea : add al, 0x25 ; add byte ptr cs:[rax], al ; ret
0x000002000001be2f : add al, 0x25 ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000200001b9bf6 : add al, 0x25 ; pop rsi ; add byte ptr [rax], al ; ret
0x0000020000177678 : add al, 0x2b ; ret
0x00000200000962b8 : add al, 0x2b ; ret 0xd08b
0x00000200004a75b4 : add al, 0x32 ; fdiv st(6) ; ret
0x00000200004836fd : add al, 0x32 ; ret
0x000002000065b53f : add al, 0x33 ; fucomi st(3) ; or al, 0x8b ; sbb cl, byte ptr [rax - 1] ; ret
0x000002000070c279 : add al, 0x33 ; imul bl ; or cl, byte ptr [rbx] ; ret 0x1be
0x0000020000519e93 : add al, 0x33 ; leave ; call rax
0x00000200001300e5 : add al, 0x33 ; leave ; call rdx
0x00000200001b5bf1 : add al, 0x33 ; ret
0x000002000047ca16 : add al, 0x33 ; ret 0xe083
0x0000020000654032 : add al, 0x33 ; shr bl, 0 ; add rsp, 0x18 ; ret
0x000002000070d320 : add al, 0x36 ; ret
0x0000020000190c05 : add al, 0x37 ; lock dec dword ptr [rax - 1] ; ret 0x2be9
0x000002000043bae9 : add al, 0x39 ; adc dword ptr [rsi*2 - 0x3d00be38], r9d ; jmp 0x2000043bacb
0x0000020000216933 : add al, 0x39 ; add al, 0x74 ; sbb eax, dword ptr [rcx - 1] ; ret 0x8348
0x00000200001f7785 : add al, 0x3a ; ret
0x0000020000231714 : add al, 0x3a ; ret 0x9475
0x00000200001b007b : add al, 0x3b ; ret
0x0000020000610e17 : add al, 0x3b ; ret 0xf172
0x000002000023bbac : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023bbc7
0x000002000023ef08 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023ef22
0x0000020000244d11 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244d2b
0x0000020000244f8c : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244fa6
0x0000020000248ff9 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000249013
0x000002000024923b : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000249255
0x000002000024bcf5 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000024bd0f
0x000002000077f9c7 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077f9e0
0x000002000077fc00 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077fc19
0x00000200007818bf : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x200007818d8
0x0000020000783735 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078374e
0x000002000078cc43 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078cc5c
0x000002000078d1e4 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078d1fd
0x000002000001b6e5 : add al, 0x41 ; mov al, al ; ret
0x0000020000426c10 : add al, 0x41 ; mov al, cl ; ret
0x00000200000862bb : add al, 0x41 ; mov al, dl ; ret
0x00000200000881d7 : add al, 0x41 ; mov dword ptr [rax + 8], eax ; jmp 0x200000881a6
0x00000200000881d6 : add al, 0x41 ; mov dword ptr [rax + 8], eax ; jmp 0x200000881a7
0x00000200001d3f1f : add al, 0x41 ; mov dword ptr [rax], eax ; ret
0x00000200006d134b : add al, 0x41 ; mov dword ptr [rax], edx ; ret
0x000002000007f5b6 : add al, 0x41 ; mov dword ptr [rcx], eax ; ret
0x00000200000863cb : add al, 0x41 ; mov eax, eax ; ret
0x0000020000453817 : add al, 0x41 ; mov eax, edx ; ret
0x000002000021c2fa : add al, 0x42 ; mov eax, 1 ; ret
0x00000200007b7c72 : add al, 0x44 ; cmp eax, ecx ; jae 0x200007b7c85 ; or eax, 0xffffffff ; ret
0x000002000048be92 : add al, 0x44 ; cmp eax, ecx ; jb 0x2000048be35 ; ret
0x000002000048be91 : add al, 0x44 ; cmp eax, ecx ; jb 0x2000048be36 ; ret
0x00000200001d24de : add al, 0x44 ; cmp eax, edx ; jb 0x200001d24db ; mov al, 1 ; ret
0x0000020000798f8f : add al, 0x44 ; mov al, bh ; add rdx, rbp ; call 0x20000475299
0x0000020000220388 : add al, 0x44 ; mov cr0, rcx ; ret
0x000002000052e870 : add al, 0x44 ; mov eax, edi ; call 0x200001518a7
0x00000200004d0765 : add al, 0x45 ; cmp edi, ecx ; jb 0x200004d07cd ; inc edx ; jmp 0x200004d0719
0x0000020000225202 : add al, 0x48 ; add eax, 0x10 ; add rsp, 0x28 ; ret
0x000002000006cf9e : add al, 0x48 ; add eax, dword ptr [rcx + 0x98] ; ret
0x0000020000494b6f : add al, 0x48 ; add eax, dword ptr [rcx + 0xa0] ; ret
0x0000020000044cb9 : add al, 0x48 ; add eax, dword ptr [rip + 0x3649b7] ; ret
0x0000020000083df9 : add al, 0x48 ; add eax, ecx ; ret
0x00000200000dda5f : add al, 0x48 ; add eax, edx ; ret
0x00000200001cdcf7 : add al, 0x48 ; add ecx, -0x10 ; mov rax, rcx ; ret
0x000002000051783f : add al, 0x48 ; add esp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000664657 : add al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000087b80 : add al, 0x48 ; add esp, 0x20 ; pop rdi ; ret
0x00000200001bc1bb : add al, 0x48 ; add esp, 0x28 ; ret
0x0000020000729453 : add al, 0x48 ; add esp, 0x38 ; ret
0x000002000067b351 : add al, 0x48 ; and dword ptr [rax], 0 ; add rsp, 0x38 ; ret
0x000002000002ad8d : add al, 0x48 ; and dword ptr [rcx], eax ; ret
0x000002000013bfdf : add al, 0x48 ; and eax, 0x157 ; ret
0x000002000013c03f : add al, 0x48 ; and eax, 0x80 ; ret
0x000002000013c01f : add al, 0x48 ; and eax, 1 ; ret
0x000002000013bfbf : add al, 0x48 ; and eax, 2 ; ret
0x000002000013bf9f : add al, 0x48 ; and eax, 4 ; ret
0x000002000013bfff : add al, 0x48 ; and eax, 8 ; ret
0x0000020000213ad8 : add al, 0x48 ; cmp edx, eax ; jb 0x20000213ad9 ; mov al, 1 ; ret
0x00000200000bb77c : add al, 0x48 ; dec dword ptr [rcx + 0x60] ; add rsp, 8 ; ret
0x00000200003e4930 : add al, 0x48 ; imul eax, r10d ; ret
0x00000200003e446f : add al, 0x48 ; imul eax, r9d ; ret
0x000002000022c0e7 : add al, 0x48 ; lea eax, dword ptr [rcx + 0x59] ; add rsp, 0x28 ; ret
0x0000020000215bfc : add al, 0x48 ; lea edx, dword ptr [rax + 0x18] ; mov rax, rdx ; ret
0x00000200001fe671 : add al, 0x48 ; mov dword ptr [rcx + 0x10], edx ; ret
0x0000020000108867 : add al, 0x48 ; mov dword ptr [rcx + 0x20], edx ; ret
0x0000020000703baa : add al, 0x48 ; mov dword ptr [rcx + 8], eax ; ret
0x00000200001fc1cd : add al, 0x48 ; mov dword ptr [rcx], eax ; ret
0x000002000068f805 : add al, 0x48 ; mov dword ptr [rdx], eax ; ret
0x0000020000040ec3 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov rax, r8 ; ret
0x0000020000664830 : add al, 0x48 ; mov eax, dword ptr [rdx] ; ret
0x00000200001bc9d9 : add al, 0x48 ; mov eax, dword ptr [rip + 0x13ce6f] ; call rax
0x000002000007a65e : add al, 0x48 ; mov eax, ecx ; ret
0x0000020000055e74 : add al, 0x48 ; mov eax, edx ; ret
0x00000200001886c9 : add al, 0x48 ; mov ecx, esi ; call 0x200000148e6
0x000002000013dde2 : add al, 0x48 ; movzx ecx, dx ; and eax, ecx ; ret
0x0000020000207ecd : add al, 0x48 ; or eax, 0xffffffff ; ret
0x000002000007a348 : add al, 0x48 ; ret
0x0000020000052b62 : add al, 0x48 ; sub eax, ecx ; ret
0x00000200000ddbd6 : add al, 0x48 ; sub eax, edx ; ret
0x000002000005322c : add al, 0x48 ; sub edx, 1 ; jne 0x2000005322e ; ret
0x000002000005322b : add al, 0x48 ; sub edx, 1 ; jne 0x2000005322f ; ret
0x00000200000036cf : add al, 0x49 ; mov dword ptr [rax], eax ; ret
0x00000200001b8ec3 : add al, 0x49 ; mov dword ptr [rax], ecx ; ret
0x00000200006e8445 : add al, 0x49 ; mov eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000273be : add al, 0x49 ; mov eax, eax ; ret
0x000002000002d075 : add al, 0x49 ; mov eax, ecx ; ret
0x0000020000456929 : add al, 0x49 ; shl rax, 3 ; ret
0x0000020000112e4c : add al, 0x49 ; sub edx, 1 ; jne 0x20000112e28 ; ret
0x0000020000112e4b : add al, 0x49 ; sub edx, 1 ; jne 0x20000112e29 ; ret
0x00000200001143a6 : add al, 0x4b ; add rsp, 0x40 ; pop rbx ; ret
0x00000200001d6168 : add al, 0x4b ; idiv bh ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000213abc : add al, 0x4c ; cmp eax, eax ; jb 0x20000213ab9 ; mov al, 1 ; ret
0x0000020000218f6d : add al, 0x4c ; mov dword ptr [rdx + 0x38], eax ; xor eax, eax ; ret
0x00000200000343d1 : add al, 0x4d ; mov dword ptr [rcx], eax ; ret
0x0000020000210bdd : add al, 0x4f ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000048e1c : add al, 0x58 ; adc eax, dword ptr [rax] ; mov eax, 1 ; ret
0x00000200001a35c9 : add al, 0x5c ; dec dword ptr [rcx - 0x75] ; ret 0x3b48
0x0000020000123218 : add al, 0x5e ; add byte ptr [rax], al ; ret
0x00000200004aeb81 : add al, 0x66 ; mov dword ptr [rcx + 6], eax ; xor eax, eax ; ret
0x00000200003ed9f1 : add al, 0x66 ; mov dword ptr [rcx], edx ; mov word ptr [rax], dx ; ret
0x000002000020d883 : add al, 0x6b ; ret 0x2b32
0x000002000020d6de : add al, 0x6b ; ret 0x4432
0x0000020000173d36 : add al, 0x71 ; stc ; dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000200004b213c : add al, 0x72 ; in eax, dx ; mov eax, 1 ; ret
0x0000020000147abf : add al, 0x72 ; loop 0x20000147a83 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001fd512 : add al, 0x72 ; ret
0x00000200007060a9 : add al, 0x73 ; jbe 0x2000070603c ; ret 0x3949
0x0000020000604c7c : add al, 0x73 ; xor cl, byte ptr [rax - 0x75] ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200006cf72f : add al, 0x74 ; add eax, dword ptr [rcx - 0x75] ; ret
0x0000020000521700 : add al, 0x74 ; or byte ptr [rsi + 3], dh ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x000002000042fb14 : add al, 0x74 ; out -0x15, eax ; ret 0xcccc
0x0000020000693838 : add al, 0x74 ; sbb eax, 0x420d3844 ; ret 0xffc6
0x0000020000216936 : add al, 0x74 ; sbb eax, dword ptr [rcx - 1] ; ret 0x8348
0x0000020000018acc : add al, 0x74 ; sbb ecx, dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0xf175
0x000002000045126e : add al, 0x75 ; add eax, 0x58c48348 ; ret
0x000002000013b850 : add al, 0x75 ; and al, 0xf6 ; ret
0x00000200004e10a2 : add al, 0x75 ; and byte ptr [rcx + rcx*8 - 0x74b7ef8c], al ; ret 0xc2f6
0x0000020000210187 : add al, 0x75 ; jge 0x2000021011d ; je 0x200002101a0 ; ret 0x1a8
0x00000200000a310a : add al, 0x75 ; or dword ptr [rbx - 0x7af0fe07], eax ; ret
0x00000200001a85ad : add al, 0x75 ; or dword ptr [rdi], ecx ; mov dh, 0x87 ; ret
0x00000200001d2915 : add al, 0x75 ; or eax, 0xc3118948 ; mov dword ptr [rcx], edx ; ret
0x000002000013d9e2 : add al, 0x75 ; sbb al, 0xf6 ; ret
0x00000200004aa939 : add al, 0x75 ; sbb al, byte ptr [rcx - 0x75] ; add byte ptr [rcx - 0x7b], al ; ret 0x4c75
0x00000200006715bb : add al, 0x75 ; sub byte ptr [rax + 0xc], bh ; ret
0x0000020000142c21 : add al, 0x76 ; add eax, 0x7520f983 ; cmp esi, esi ; ret
0x0000020000539835 : add al, 0x76 ; sub al, 0x8b ; ret 0xff48
0x000002000020bf17 : add al, 0x77 ; movsd dword ptr [rdi], dword ptr [rsi] ; cmp r8d, r9d ; sete al ; ret
0x000002000059648c : add al, 0x7d ; or al, byte ptr [rcx - 0x3f] ; ret
0x0000020000719681 : add al, 0x7e ; mov eax, 1 ; ret
0x0000020000008803 : add al, 0x80 ; lea rax, qword ptr [rdx + rax*8] ; ret
0x00000200004b5668 : add al, 0x80 ; xor r8, qword ptr [rsi + r14*8] ; ret
0x000002000046dd8c : add al, 0x81 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000425674 : add al, 0x81 ; bt eax, edx ; jb 0x20000425652 ; xor eax, eax ; ret
0x0000020000057aba : add al, 0x81 ; mov dword ptr [r10], eax ; xor eax, eax ; ret
0x00000200000356b8 : add al, 0x81 ; ret
0x00000200004f0f9f : add al, 0x81 ; ret 0xd7
0x00000200000c56c8 : add al, 0x81 ; test eax, eax ; je 0x200000c56d8 ; ret
0x00000200003e49c3 : add al, 0x82 ; sub eax, ecx ; ret
0x00000200003e47e0 : add al, 0x82 ; sub eax, r8d ; ret
0x000002000066b02c : add al, 0x83 ; cli ; adc byte ptr [rdx - 0xf], dh ; xor al, al ; ret
0x000002000013a611 : add al, 0x83 ; loopne 0x2000013a61a ; ret
0x00000200004961e7 : add al, 0x83 ; loopne 0x200004961f4 ; add rsp, 0x28 ; ret
0x000002000007f3cc : add al, 0x83 ; ret
0x000002000013302c : add al, 0x83 ; ret 0x2307
0x000002000052b0fa : add al, 0x83 ; ret 0x4128
0x000002000048211a : add al, 0x83 ; ret 0x44f8
0x00000200005f3bc9 : add al, 0x83 ; ret 0x4804
0x00000200000398e5 : add al, 0x83 ; ret 0xebe0
0x000002000040a0e5 : add al, 0x83 ; sar edi, 0x75 ; ret
0x00000200000216d3 : add al, 0x83 ; stc ; inc dword ptr [rcx - 0x75] ; ret
0x000002000046cc26 : add al, 0x83 ; stc ; jb 0x2000046cc05 ; mov rax, r8 ; ret
0x000002000013cb30 : add al, 0x84 ; div byte ptr [rbp - 0x75] ; xor eax, eax ; ret
0x000002000013b14c : add al, 0x84 ; div byte ptr [rbp - 0x78] ; xor rax, rax ; ret
0x000002000067c345 : add al, 0x84 ; ret
0x0000020000518abe : add al, 0x84 ; ror byte ptr [rdi], 0x89 ; ret 2
0x0000020000081931 : add al, 0x85 ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000070c275 : add al, 0x85 ; ret 0x474
0x00000200005cb71e : add al, 0x85 ; sal byte ptr [rdx + rbx + 0x49], 3 ; ret
0x00000200001a28c7 : add al, 0x85 ; sar byte ptr [rcx + 0x25], 0xf6 ; ret
0x00000200004b478d : add al, 0x88 ; add dword ptr [r8 - 0x7d], ecx ; ret
0x000002000070ff29 : add al, 0x88 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200006dc4ed : add al, 0x88 ; mov eax, edi ; sub eax, edx ; jmp 0x200006dc4ff
0x00000200003e4809 : add al, 0x88 ; ret
0x000002000008f3d2 : add al, 0x88 ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4d60
0x0000020000137b8e : add al, 0x89 ; add eax, 0x1f0f7f ; xor eax, eax ; ret
0x000002000014745f : add al, 0x89 ; add ebx, eax ; mov dword ptr [rcx], eax ; mov dword ptr [rcx + 3], eax ; ret
0x00000200005028f9 : add al, 0x89 ; je 0x20000502927 ; and al, 0xff ; ret 0xc2eb
0x00000200000837e4 : add al, 0x89 ; lea ecx, dword ptr [r9 + 1] ; mov dword ptr [rdx], ecx ; ret
0x00000200005d90ff : add al, 0x89 ; pop rsp ; and al, 0x40 ; jmp 0x200004c5407
0x00000200000bc510 : add al, 0x8b ; or bl, al ; or eax, 0xffffffff ; ret
0x0000020000037856 : add al, 0x8b ; ret
0x00000200005cd96d : add al, 0x8b ; ret 0x1ba
0x0000020000605978 : add al, 0x8b ; ret 0x2b44
0x00000200000ddd01 : add al, 0x8b ; ret 0x349
0x000002000048046a : add al, 0x8b ; ret 0x3b48
0x000002000017768b : add al, 0x8b ; ret 0x72b
0x00000200006abdec : add al, 0x8b ; ret 0x8944
0x000002000044a055 : add al, 0x8b ; ret 0x8b41
0x00000200000216c0 : add al, 0x8b ; ret 0x8d4c
0x0000020000521707 : add al, 0x8b ; ret 0xb8c3
0x0000020000008682 : add al, 0x8b ; ret 0xc148
0x0000020000694ebd : add al, 0x8b ; ret 0xe083
0x0000020000211966 : add al, 0x8b ; ret 0xe8c1
0x00000200004ae2a8 : add al, 0x8c ; ret
0x00000200003f91dc : add al, 0x8d ; add al, 0xc3 ; xor eax, eax ; ret
0x00000200006c175b : add al, 0x8d ; in eax, dx ; call 0x2000024da46
0x00000200004b2079 : add al, 0x8d ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200004d55ae : add al, 0x90 ; ret
0x00000200003e4a3f : add al, 0x90 ; xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x0000020000706323 : add al, 0x91 ; add rax, r9 ; ret
0x000002000015193c : add al, 0x95 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200006a6816 : add al, 0x96 ; inc edx ; jmp 0x200006a680c
0x00000200006a6813 : add al, 0x97 ; mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x200006a680f
0x00000200006a02a0 : add al, 0xa ; inc edx ; jmp 0x200006a0298
0x0000020000519a37 : add al, 0xa ; ret
0x000002000060ebe8 : add al, 0xa5 ; inc dword ptr [rbx - 0x7cb700f6] ; ret
0x000002000051da68 : add al, 0xa6 ; ret 0x85ff
0x00000200007d26f0 : add al, 0xa8 ; add dh, byte ptr [rbp - 0x13] ; xor eax, eax ; ret
0x00000200000fb20d : add al, 0xb ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006ae5cd : add al, 0xb ; fdivr st(7) ; ret
0x0000020000119902 : add al, 0xb ; ret
0x00000200004465ba : add al, 0xb ; ret 0x894c
0x000002000018b35f : add al, 0xb ; ret 0x8b41
0x00000200007a39d0 : add al, 0xb8 ; dec dword ptr [rbx + 0x2c8d48c2] ; ret
0x000002000024ecdb : add al, 0xb9 ; ret 0
0x00000200000041a8 : add al, 0xbb ; or dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000066dc61 : add al, 0xbd ; sldt word ptr [rax] ; add byte ptr [rbx], ah ; ret 0x4489
0x00000200000e7b13 : add al, 0xc ; add byte ptr [rax + rcx*4 - 0x4d], al ; ret 0
0x00000200005696d6 : add al, 0xc0 ; mov eax, dword ptr [rax + r9 + 0x18] ; sub eax, edx ; ret
0x0000020000011f6e : add al, 0xc1 ; add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x00000200000a4309 : add al, 0xc1 ; call 0x2000fcc7e1b
0x0000020000139f49 : add al, 0xc1 ; movzx eax, byte ptr [rax + 0xac] ; ret
0x0000020000043d4b : add al, 0xc1 ; ret
0x000002000000ef41 : add al, 0xc1 ; test dword ptr [rax], edx ; jne 0x2000000ef52 ; xor eax, eax ; ret
0x000002000023bbaf : add al, 0xc2 ; jmp 0x2000023bbc4
0x000002000023ef0b : add al, 0xc2 ; jmp 0x2000023ef1f
0x0000020000244d14 : add al, 0xc2 ; jmp 0x20000244d28
0x0000020000244f8f : add al, 0xc2 ; jmp 0x20000244fa3
0x0000020000248ffc : add al, 0xc2 ; jmp 0x20000249010
0x000002000024923e : add al, 0xc2 ; jmp 0x20000249252
0x000002000024bcf8 : add al, 0xc2 ; jmp 0x2000024bd0c
0x000002000045741a : add al, 0xc2 ; jmp 0x200004573c3
0x000002000077f9ca : add al, 0xc2 ; jmp 0x2000077f9dd
0x000002000077fc03 : add al, 0xc2 ; jmp 0x2000077fc16
0x00000200007818c2 : add al, 0xc2 ; jmp 0x200007818d5
0x0000020000783738 : add al, 0xc2 ; jmp 0x2000078374b
0x000002000078cc46 : add al, 0xc2 ; jmp 0x2000078cc59
0x000002000078d1e7 : add al, 0xc2 ; jmp 0x2000078d1fa
0x0000020000008807 : add al, 0xc2 ; ret
0x00000200003db7f0 : add al, 0xc3 ; mov al, 2 ; ret
0x00000200004b30db : add al, 0xc3 ; mov eax, 0xc0000023 ; ret
0x0000020000007ed3 : add al, 0xc3 ; mov eax, 1 ; ret
0x00000200004445c9 : add al, 0xc3 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000052861 : add al, 0xc3 ; xor eax, eax ; ret
0x00000200000072ee : add al, 0xc5 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000055d044 : add al, 0xc8 ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x00000200000c3f5e : add al, 0xc8 ; mov al, r10b ; add rsp, 0x28 ; ret
0x00000200006bb616 : add al, 0xc8 ; mov ecx, 1 ; call rax
0x00000200003ddabb : add al, 0xc8 ; mov ecx, edi ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x000002000009d9ed : add al, 0xc8 ; ret
0x00000200006ae769 : add al, 0xc9 ; add rsp, 0x28 ; ret
0x0000020000718e82 : add al, 0xc9 ; dec dword ptr [rax - 1] ; ret
0x000002000049b9dd : add al, 0xc9 ; inc edx ; jmp 0x2000049b9d5
0x000002000022d55c : add al, 0xcc ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001ca038 : add al, 0xcd ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000200000fca0f : add al, 0xd0 ; inc edx ; jmp 0x200000fca04
0x00000200000479ae : add al, 0xd0 ; ret
0x000002000020b9b1 : add al, 0xd1 ; je 0x2000020b9c4 ; mov eax, 0xc000000d ; ret
0x00000200000fca0b : add al, 0xd6 ; mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x200000fca08
0x00000200000c5b47 : add al, 0xd9 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000558155 : add al, 0xdd ; inc dword ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000053990 : add al, 0xe2 ; adc al, byte ptr [rax] ; mov rax, rcx ; ret
0x00000200004934b0 : add al, 0xe5 ; call 0x1ffc3ca7dbc
0x00000200004d0df6 : add al, 0xe8 ; movsb byte ptr [rdi], byte ptr [rsi] ; sahf ; ret 0x41ff
0x00000200007b4bec : add al, 0xe8 ; pop rdx ; ret
0x00000200007d0fe4 : add al, 0xe8 ; push 0x7b ; ret 0x8bff
0x00000200000c34c7 : add al, 0xe8 ; ret
0x000002000003a278 : add al, 0xe8 ; ret 0x11d2
0x00000200006710a0 : add al, 0xe8 ; ret 0xb90f
0x00000200001b13ec : add al, 0xe9 ; jge 0x200001b1437 ; clc ; push rsi ; ret
0x00000200001b13eb : add al, 0xe9 ; jge 0x200001b1438 ; clc ; push rsi ; ret
0x000002000017264f : add al, 0xe9 ; mov byte ptr [rip - 0x7cb70007], bh ; ret 0xe908
0x00000200005c9cd7 : add al, 0xe9 ; mov ebx, 0xe9ffebaa ; ret
0x00000200005a79ac : add al, 0xe9 ; pop rsp ; jns 0x200005a79a2 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000019d2d9 : add al, 0xe9 ; ret
0x00000200005bc509 : add al, 0xe9 ; ret 0xf790
0x000002000017767d : add al, 0xeb ; adc eax, 0x8b173b44 ; ret
0x00000200001a28c5 : add al, 0xeb ; add al, 0x85 ; sar byte ptr [rcx + 0x25], 0xf6 ; ret
0x00000200004df019 : add al, 0xeb ; mov ecx, dword ptr [rcx - 0x75] ; ret
0x0000020000213fe1 : add al, 0xeb ; ret
0x00000200005cc0ec : add al, 0xec ; push rsi ; ret 0xf10
0x000002000016dfc8 : add al, 0xed ; push rax ; xadd qword ptr [r9 + 0x40], r8 ; ret
0x0000020000494605 : add al, 0xf ; mov bh, 0xc1 ; ret
0x000002000064d92b : add al, 0xf ; mov edx, 0xce830df3 ; add al, 0xf7 ; ret
0x000002000020ef7d : add al, 0xf ; or dword ptr [rax + 0xf000000], 0xffffffb6 ; ret 0xed33
0x0000020000225167 : add al, 0xf ; ret 0x44ff
0x00000200004c9947 : add al, 0xf ; test al, ah ; idiv edi ; push rsi ; ret
0x00000200000b4c88 : add al, 0xf ; test byte ptr [rsp + rax - 0x49f10000], cl ; ret
0x00000200005cd6f5 : add al, 0xf ; test dword ptr [rbp - 0x7e0013b9], edi ; ret 0x1000
0x00000200005c45a3 : add al, 0xf ; test dword ptr [rbx - 0x7c001507], eax ; call qword ptr [rax]
0x0000020000491242 : add al, 0xf ; test dword ptr [rbx], edx ; ret 0x13
0x00000200004abbba : add al, 0xf ; test dword ptr [rip - 0x9fffffe], eax ; ret 0xf02
0x000002000016d550 : add al, 0xf ; test dword ptr [rsi - 0x12], ebp ; in al, dx ; push rsi ; ret 0x7402
0x000002000010d5bd : add al, 0xf ; test eax, esi ; je 0x2000010d5d1 ; add dh, dh ; ret
0x00000200001a956f : add al, 0xf ; test edi, eax ; jge 0x200001a9572 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000176740 : add al, 0xf ; xchg byte ptr [rip - 0x74000630], cl ; ret
0x0000020000176098 : add al, 0xf ; xchg byte ptr [rip - 0x74000641], al ; ret
0x00000200004b24db : add al, 0xf ; xchg dh, bl ; sbb dword ptr [rdx], edx ; add byte ptr [rax - 1], cl ; ret
0x00000200004c8e4a : add al, 0xf ; xchg eax, ebp ; ret 0xba0f
0x00000200001d023c : add al, 0xf ; xchg eax, esp ; ret 0xdfeb
0x000002000011cd28 : add al, 0xf ; xor edx, edx ; xor ecx, ecx ; call rax
0x00000200007189b4 : add al, 0xf0 ; inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x00000200001fed93 : add al, 0xf0 ; inc dword ptr [rcx + 8] ; ret
0x000002000019573a : add al, 0xf1 ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000195828 : add al, 0xf1 ; dec dword ptr [rcx - 0x75] ; ret 0x48f0
0x0000020000105b9c : add al, 0xf6 ; ret
0x000002000065911d : add al, 0xf6 ; ret 0x7403
0x0000020000661b46 : add al, 0xf6 ; ret 0x7404
0x000002000041f306 : add al, 0xf6 ; ret 0x7502
0x000002000018ed3f : add al, 0xf6 ; ret 0x7508
0x00000200005e3558 : add al, 0xf6 ; ret 0xf01
0x00000200004beadd : add al, 0xf7 ; ret
0x0000020000411dce : add al, 0xf7 ; ret 0xfff8
0x000002000009b6da : add al, 0xf7 ; ret 0xfffd
0x000002000023d718 : add al, 0xf7 ; shl byte ptr [rbx], 1 ; ret
0x00000200001c62cb : add al, 0xf7 ; shl dword ptr [rbx], cl ; ret
0x000002000012e631 : add al, 0xf9 ; dec dword ptr [rax - 0x75] ; ret
0x000002000008650b : add al, 0xfd ; lock dec dword ptr [rcx + 0x8c] ; ret
0x00000200000c3a32 : add al, 0xff ; je 0x200000c3a43 ; add rsp, 0x28 ; ret
0x00000200000c3a31 : add al, 0xff ; je 0x200000c3a44 ; add rsp, 0x28 ; ret
0x000002000010a983 : add al, 0xff ; ret
0x0000020000622f37 : add al, 0xff ; ret 0x15eb
0x00000200005600a3 : add al, 0xff ; ret 0x533b
0x00000200000fea23 : add al, 0xff ; ret 0x5489
0x00000200006ce195 : add al, 0xff ; ret 0x854d
0x000002000010206a : add al, 0xff ; ret 0xc148
0x0000020000038145 : add al, 0xff ; retf ; jmp 0x20000038131
0x00000200002026d9 : add al, 1 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005696a3 : add al, 1 ; and rax, 0xfffffffffffffffe ; add rax, r8 ; ret
0x00000200001c8b5a : add al, 1 ; cmp r8d, r9d ; jae 0x200001c8b6d ; mov al, 1 ; ret
0x000002000059e27f : add al, 1 ; inc edx ; jmp 0x2000059e25f
0x00000200005a0320 : add al, 1 ; ret
0x00000200001338dc : add al, 2 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b91ad : add al, 2 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000cf656 : add al, 2 ; ret
0x000002000045693a : add al, 3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; ret
0x0000020000042a52 : add al, 3 ; add byte ptr [rax], al ; shr al, 2 ; and al, 1 ; ret
0x00000200005ebb82 : add al, 3 ; ret
0x000002000021f09b : add al, 3 ; ret 0x2075
0x00000200006ce1e7 : add al, 3 ; ret 0x4589
0x000002000021f0a9 : add al, 3 ; ret 0x675
0x000002000068a64b : add al, 3 ; ret 0x8948
0x00000200001777d1 : add al, 3 ; ret 0x8b45
0x00000200004483bc : add al, 6 ; ret
0x00000200004725f8 : add al, 7 ; add byte ptr [rax], al ; ret
0x0000020000120f42 : add al, 8 ; ret
0x000002000079f74a : add al, ah ; dec dword ptr [rax + 0x23] ; ret 0xb949
0x00000200000ac77f : add al, al ; add rsp, 0x10 ; pop rdi ; ret
0x00000200001c075e : add al, al ; add rsp, 0x1c8 ; ret
0x000002000002cfbc : add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000087881 : add al, al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000088d4 : add al, al ; add rsp, 0x28 ; ret
0x00000200001ce0da : add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000012968c : add al, al ; add rsp, 0x38 ; ret
0x00000200001c702f : add al, al ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000078b7a : add al, al ; add rsp, 0x48 ; ret
0x00000200006ca7a6 : add al, al ; add rsp, 0x50 ; pop rbx ; ret
0x000002000065c95a : add al, al ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000407aa2 : add al, al ; add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000065ab5c : add al, al ; add rsp, 0xa8 ; ret
0x000002000022d96c : add al, al ; and dword ptr [r9], 0 ; ret
0x000002000000bfc5 : add al, al ; call 0x1ffc22300d5
0x0000020000403288 : add al, al ; call 0x1ffc262739a
0x0000020000042a55 : add al, al ; call 0x1ffc3054e64
0x000002000008b14f : add al, al ; call 0x1ffc309d562
0x000002000053327d : add al, al ; call 0x1ffc354568d
0x00000200003e116b : add al, al ; call 0x20000009b85
0x00000200005b0df1 : add al, al ; call 0x2000007d084
0x00000200004582fa : add al, al ; call 0x2000007d085
0x00000200004d1843 : add al, al ; call 0x200000ff4b5
0x00000200006247f5 : add al, al ; call 0x2000024da45
0x000002000065853c : add al, al ; cmove eax, ecx ; add rsp, 0x28 ; ret
0x00000200006e43c7 : add al, al ; cmove eax, ecx ; add rsp, 0x38 ; ret
0x0000020000173a72 : add al, al ; cmove eax, ecx ; ret
0x000002000054d472 : add al, al ; cmove eax, edx ; mov edx, eax ; mov eax, edx ; ret
0x0000020000568e11 : add al, al ; cmovne eax, ecx ; add rsp, 0x28 ; ret
0x0000020000027bf9 : add al, al ; cmp eax, ecx ; ja 0x20000027c06 ; ret
0x00000200000099fc : add al, al ; je 0x20000009a15 ; mov eax, ecx ; ret
0x0000020000039055 : add al, al ; je 0x2000003909c ; mov al, 1 ; ret
0x000002000008c1ac : add al, al ; je 0x2000008c1b9 ; mov al, 1 ; ret
0x000002000055824b : add al, al ; je 0x2000055825e ; add rsp, 0x70 ; pop rbx ; ret
0x000002000005f9f1 : add al, al ; jmp 0x2000005f9bb
0x00000200000712f0 : add al, al ; jmp 0x200000712ba
0x000002000016becf : add al, al ; jmp 0x2000016be98
0x000002000020b5e3 : add al, al ; jmp 0x2000020b79f
0x00000200002210d5 : add al, al ; jmp 0x20000221199
0x00000200003d7a59 : add al, al ; jmp 0x200003d2518
0x000002000058578f : add al, al ; jmp 0x200003ed0bb
0x0000020000587ae9 : add al, al ; jmp 0x200003f3d45
0x000002000059488c : add al, al ; jmp 0x20000413a97
0x0000020000594522 : add al, al ; jmp 0x20000413a98
0x00000200005a0aa5 : add al, al ; jmp 0x20000427ffb
0x00000200005a5e51 : add al, al ; jmp 0x200004395dc
0x00000200005a5ddf : add al, al ; jmp 0x20000439631
0x0000020000441370 : add al, al ; jmp 0x20000441339
0x000002000044a576 : add al, al ; jmp 0x2000044a540
0x00000200004588d2 : add al, al ; jmp 0x2000045889b
0x00000200005bcff1 : add al, al ; jmp 0x20000459283
0x000002000046f0a9 : add al, al ; jmp 0x2000046f073
0x0000020000481c32 : add al, al ; jmp 0x20000481bfc
0x00000200004828c5 : add al, al ; jmp 0x20000482d17
0x00000200005cfb6c : add al, al ; jmp 0x2000049bdb6
0x00000200004b175f : add al, al ; jmp 0x200004b1729
0x00000200004b18f9 : add al, al ; jmp 0x200004b18c2
0x00000200005d58b6 : add al, al ; jmp 0x200004b842e
0x00000200005d8cc5 : add al, al ; jmp 0x200004c4f94
0x0000020000500b52 : add al, al ; jmp 0x20000500b1b
0x0000020000504651 : add al, al ; jmp 0x2000050461b
0x0000020000506300 : add al, al ; jmp 0x200005062c9
0x00000200005ebd7d : add al, al ; jmp 0x20000507fd3
0x00000200005ebde7 : add al, al ; jmp 0x200005080c2
0x0000020000509ddc : add al, al ; jmp 0x20000509da5
0x000002000050d54e : add al, al ; jmp 0x2000050d517
0x00000200005b1c4f : add al, al ; jmp 0x200005150f4
0x0000020000520d08 : add al, al ; jmp 0x20000520cd1
0x00000200005b4b5b : add al, al ; jmp 0x20000520e5c
0x00000200005eef0d : add al, al ; jmp 0x2000053e762
0x00000200005f4e86 : add al, al ; jmp 0x200005510c9
0x00000200005fcc19 : add al, al ; jmp 0x200005669b5
0x00000200005c8d44 : add al, al ; jmp 0x200005c8d6b
0x00000200005d2690 : add al, al ; jmp 0x200005d265a
0x000002000062ec33 : add al, al ; jmp 0x2000062ebfc
0x00000200006335cb : add al, al ; jmp 0x200006336bb
0x0000020000646f09 : add al, al ; jmp 0x20000646f67
0x000002000066f631 : add al, al ; jmp 0x2000066f8aa
0x00000200006a06d9 : add al, al ; jmp 0x200006a06f4
0x00000200006dce04 : add al, al ; jmp 0x200006dcefe
0x00000200007ac238 : add al, al ; jmp 0x200007ac202
0x00000200007cbe21 : add al, al ; jmp 0x200007b8098
0x000002000054bcd6 : add al, al ; lea rax, qword ptr [rax + rcx*8] ; ret
0x00000200006d1353 : add al, al ; mov dword ptr [r8], r9d ; ret
0x00000200001bc261 : add al, al ; mov dword ptr [rcx], r8d ; ret
0x0000020000670555 : add al, al ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000569494 : add al, al ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000062ed21 : add al, al ; mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x000002000063d1cd : add al, al ; mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x00000200006e86f9 : add al, al ; mov eax, edx ; jmp 0x200006e8707
0x0000020000533165 : add al, al ; mov eax, r10d ; add rsp, 0x28 ; ret
0x00000200006d6ab8 : add al, al ; mov eax, r10d ; ret
0x00000200001d27b6 : add al, al ; mov eax, r8d ; ret
0x00000200001cb037 : add al, al ; mov eax, r9d ; add rsp, 0x28 ; ret
0x000002000021cb4c : add al, al ; mov eax, r9d ; ret
0x000002000067aad3 : add al, al ; mov qword ptr [rcx], r10 ; mov eax, r9d ; ret
0x00000200006dbcb9 : add al, al ; mov rbx, qword ptr [rsp + 8] ; mov eax, r10d ; ret
0x0000020000470838 : add al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000330e2 : add al, al ; neg rcx ; sbb ecx, ecx ; and eax, ecx ; ret
0x0000020000002903 : add al, al ; ret
0x00000200001dbd7b : add al, al ; shr rdx, 0x20 ; wrmsr ; ret
0x00000200001bde1a : add al, al ; test r9, r9 ; je 0x200001bde2c ; call r9
0x0000020000157aa8 : add al, al ; xor eax, eax ; ret
0x00000200007d89f7 : add al, bh ; ret
0x00000200007b39b6 : add al, bl ; dec dword ptr [rax - 0x75] ; ret
0x00000200004636c9 : add al, bl ; inc dword ptr [rbp - 0x74968740] ; ret
0x00000200000cf657 : add al, bl ; inc rdx ; jmp 0x200000cf658
0x000002000068f808 : add al, bl ; jmp r8
0x00000200001d68ff : add al, bl ; mov byte ptr [r8], 1 ; mov qword ptr [rdx], r9 ; ret
0x0000020000115502 : add al, bl ; mov dword ptr [r10], 0 ; ret
0x00000200007e0c6f : add al, bl ; or eax, 0x7e ; add byte ptr [rax], al ; ret 0x7e0d
0x00000200007d147c : add al, bl ; ret 0x3dff
0x00000200003db7f3 : add al, bl ; xor al, al ; ret
0x00000200003ff2ef : add al, bl ; xor eax, eax ; ret
0x00000200007bb139 : add al, bpl ; adc al, 0xda ; ret
0x00000200001315de : add al, bpl ; wait ; ret 0x3c
0x0000020000129fd8 : add al, byte ptr [r13 + 0x499575c9] ; mov eax, eax ; ret
0x00000200004c3cb4 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000b407a : add al, byte ptr [r8] ; add byte ptr [rbp + 0x23], cl ; ret
0x000002000006a2b2 : add al, byte ptr [r8] ; add byte ptr [rcx - 0x75], cl ; ret 0x2349
0x000002000048bf7d : add al, byte ptr [r9 - 1] ; ret
0x00000200000942c3 : add al, byte ptr [r9 - 1] ; ret 0x3b44
0x000002000024e9eb : add al, byte ptr [r9] ; add bpl, cl ; ret 0xfffe
0x0000020000529d05 : add al, byte ptr [r9] ; jne 0x20000529d14 ; xor eax, eax ; ret
0x000002000020188f : add al, byte ptr [rax] ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001399fe : add al, byte ptr [rax] ; add al, al ; add rsp, 0x28 ; ret
0x00000200003f604b : add al, byte ptr [rax] ; add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000f41c2 : add al, byte ptr [rax] ; add al, al ; ret
0x00000200004bd963 : add al, byte ptr [rax] ; add al, ch ; cmc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xbaff
0x0000020000518487 : add al, byte ptr [rax] ; add al, ch ; int1 ; ret
0x000002000046b48d : add al, byte ptr [rax] ; add al, ch ; jmp 0x2000046b45b
0x000002000062a987 : add al, byte ptr [rax] ; add al, ch ; mov cl, 0x30 ; ret 0x48ff
0x0000020000004c75 : add al, byte ptr [rax] ; add al, ch ; ret
0x000002000070e9da : add al, byte ptr [rax] ; add al, ch ; ret 0x11
0x00000200004cc3f6 : add al, byte ptr [rax] ; add al, ch ; ret 0xc1d5
0x000002000024c5a0 : add al, byte ptr [rax] ; add bh, bh ; loopne 0x2000024c5f7 ; add esp, 0x48 ; ret
0x0000020000095d27 : add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200000dec5c : add al, byte ptr [rax] ; add bh, bh ; ret 0x8d48
0x0000020000221ba0 : add al, byte ptr [rax] ; add bh, bh ; ret 0xc8eb
0x0000020000448969 : add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x00000200004e0dcf : add al, byte ptr [rax] ; add bh, dh ; ret
0x000002000042d35f : add al, byte ptr [rax] ; add bh, dh ; ret 0xffff
0x000002000017bf8b : add al, byte ptr [rax] ; add bl, ch ; add ecx, dword ptr [rbp - 0x75] ; ret
0x000002000007e197 : add al, byte ptr [rax] ; add bl, ch ; ret
0x0000020000063058 : add al, byte ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x00000200006c9e52 : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x00000200000aa61a : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200000bf02b : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x9977
0x00000200005efb4e : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0xa74
0x00000200004a653d : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0xdb74
0x000002000022849c : add al, byte ptr [rax] ; add byte ptr [rax + 0x6b], cl ; ret 0x3364
0x00000200007ae258 : add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200003d0321 : add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000065bca9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x17000009], al ; ret
0x0000020000478d3d : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x3b] ; ret
0x00000200004f7c22 : add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; loopne 0x200004f7c1a ; ret 0x64
0x000002000052a44b : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; enter 0x2ae8, -0x2c ; ret 0xfff
0x0000020000544b10 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x000002000019ad15 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; inc dword ptr [r9 - 0x48] ; ret 0
0x00000200000d9a46 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rsi ; sbb byte ptr [rax - 0x75], cl ; ret 0xb849
0x0000020000089f7b : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001f3c0a : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x00000200005d44f8 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000005d2b1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200000e5527 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200000cf1c0 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000466032 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; retf ; call 0x2000008eedd
0x00000200003d0107 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; ret
0x000002000062ae8b : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; salc ; call 0x2000024da49
0x00000200004b07b3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x78], al ; mov ah, 0x24 ; ret 0
0x00000200000eaf6b : add al, byte ptr [rax] ; add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x000002000007a3d4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000007a3e5 ; ret
0x00000200004e9c6e : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret
0x000002000068c597 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7c], al ; push qword ptr [rdx + rax - 1] ; ret
0x0000020000002c03 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003cd966 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4102
0x0000020000542151 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4103
0x0000020000453890 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4130
0x0000020000798c61 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4c02
0x000002000071767e : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x0000020000594262 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000544dec : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x1e8
0x0000020000544d9c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x1f8
0x000002000041de07 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x240
0x00000200000adf5a : add al, byte ptr [rax] ; add byte ptr [rax - 0x9f68ac0], ch ; ret
0x00000200000adf67 : add al, byte ptr [rax] ; add byte ptr [rax - 0x9f68afe], ch ; ret
0x000002000067a37e : add al, byte ptr [rax] ; add byte ptr [rax], ah ; ret
0x000002000017d338 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x0000020000176eaa : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x00000200001d82b4 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003fcc04 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000b6d02 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000022be00 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x200001480d6
0x00000200003f7e08 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r12
0x000002000045cb7d : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r14
0x00000200005f458d : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r15
0x000002000021f134 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000200003f6679 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdi
0x00000200006dbdae : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rsi
0x000002000004dd24 : add al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x2000004dd15 ; mov al, 1 ; ret
0x0000020000135901 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp 0x2000013594b
0x00000200006da351 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 1] ; call rdi
0x00000200006dab73 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 2] ; call rdi
0x00000200006d95f6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 0xb] ; call rsi
0x00000200006d9f95 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 1] ; call rdi
0x00000200006d8e29 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 2] ; call rdi
0x00000200005bea16 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 6] ; call rsi
0x00000200006dac95 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 7] ; call rdi
0x000002000045a7d6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 8] ; call rsi
0x00000200006dba08 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 9] ; call r14
0x00000200006d9077 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 9] ; call rdi
0x000002000004341d : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov cr8, rcx ; ret
0x00000200003fdd4f : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x0000020000007edc : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000225cf3 : add al, byte ptr [rax] ; add byte ptr [rax], bh ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8a41
0x0000020000225cc0 : add al, byte ptr [rax] ; add byte ptr [rax], bh ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xb60f
0x00000200000b407b : add al, byte ptr [rax] ; add byte ptr [rbp + 0x23], cl ; ret
0x00000200003e099e : add al, byte ptr [rax] ; add byte ptr [rbp + 0x2b], al ; ror dword ptr [rcx + 0x63], cl ; ret 0x8d48
0x00000200006df051 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x33], al ; dec dword ptr [rbp + rcx*4 + 0x35] ; ret 0xd2
0x00000200004b415e : add al, byte ptr [rax] ; add byte ptr [rbp + 0x33], al ; fild dword ptr [rbp - 0x75] ; ret
0x00000200000656c5 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x3b411104], cl ; ret
0x000002000008e937 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x3b], cl ; ret 0xc072
0x00000200006c975f : add al, byte ptr [rax] ; add byte ptr [rbp + 3], cl ; ret 0x8d49
0x0000020000625a93 : add al, byte ptr [rax] ; add byte ptr [rbp + 7], dh ; call 0x2000024da48
0x000002000020f9ec : add al, byte ptr [rax] ; add byte ptr [rbp - 0x74bb008e], cl ; ret 0xf003
0x000002000001ff76 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x74bb00bd], cl ; ret 0x4404
0x000002000041f612 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x74e58b2e], al ; ret 0xc2ff
0x000002000006e667 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; cmp sil, r14b ; ret
0x00000200000d4432 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x00000200005c7d91 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], cl ; ret 0x4a8d
0x00000200001f1c8e : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], cl ; ret 0xdab9
0x00000200000784d5 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x76], al ; ret 0x8b49
0x000002000009abe0 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x1c8948c6], cl ; ret 0x8548
0x00000200000db10a : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x41], cl ; adc byte ptr [rax - 0x75], cl ; ret 0x3345
0x00000200000b0bfa : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x52], cl ; adc byte ptr [rcx - 0x7f], cl ; ret 0x1a0
0x0000020000144484 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x55], al ; sar dword ptr [rax], cl ; pop rbp ; ret
0x00000200004cf928 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 - 0x3d], cl ; mov rcx, r13 ; call rax
0x0000020000062b9b : add al, byte ptr [rax] ; add byte ptr [rbx - 0x49f00037], al ; ret 0xf44
0x000002000051e6dc : add al, byte ptr [rax] ; add byte ptr [rbx - 0x9d7c4ac], cl ; ret 0xf20
0x00000200003c7ea6 : add al, byte ptr [rax] ; add byte ptr [rbx], al ; ret
0x000002000045999a : add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret
0x0000020000087b9c : add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0x377
0x00000200000b806b : add al, byte ptr [rax] ; add byte ptr [rbx], dh ; jmp qword ptr [rcx]
0x00000200000b810c : add al, byte ptr [rax] ; add byte ptr [rcx + 0x23], cl ; ror byte ptr [rcx - 0x75], 1 ; ret 0x8d4c
0x00000200000befe7 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x00000200006c96e3 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x3b], cl ; ret 0xf4c
0x00000200001394a0 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200002214b5 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003a9ba : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004e329b : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200000e1f53 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x55], al ; or byte ptr [rbp - 0x75], cl ; ret
0x00000200004e1077 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*8 - 0x74b7ac8c], al ; ret 0xc2f6
0x0000020000213d47 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x00000200004d1cc1 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; push rbp ; cmp byte ptr [rax - 0x7d], cl ; ret
0x00000200004c381f : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; push rdi ; cmp dh, dh ; ret 0xf20
0x000002000007c224 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000ca9ce : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000214dcd : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0x148
0x000002000006a2b3 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0x2349
0x00000200004ad02a : add al, byte ptr [rax] ; add byte ptr [rcx - 0x76], al ; fucomp st(0) ; pop rbx ; leave ; ret
0x00000200004a5c14 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7b], al ; ret 0x850f
0x00000200000eadf8 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200000f6c6c : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000020000553fe6 : add al, byte ptr [rax] ; add byte ptr [rcx - 1], al ; ret
0x00000200000b2358 : add al, byte ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0x8b48
0x0000020000070269 : add al, byte ptr [rax] ; add byte ptr [rcx - 9], al ; ret
0x000002000009885c : add al, byte ptr [rax] ; add byte ptr [rcx], al ; je 0x2000009886d ; xor al, al ; ret
0x000002000009885b : add al, byte ptr [rax] ; add byte ptr [rcx], al ; je 0x2000009886e ; xor al, al ; ret
0x000002000040f272 : add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000009c852 : add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200004334f9 : add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200004a651b : add al, byte ptr [rax] ; add byte ptr [rdi + 1], dh ; ret
0x00000200000ebd98 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x42], al ; stosd dword ptr [rdi], eax ; ret
0x0000020000407221 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200000e83c1 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8348
0x00000200000f6c58 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; sbb ecx, dword ptr [rax - 1] ; ret
0x00000200005da204 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x5d], cl ; ret 0x820f
0x00000200000eb0c1 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 0x40 ; sbb bh, byte ptr [rbx] ; ret 0x830f
0x00000200000942be : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x43 ; add al, byte ptr [rcx - 1] ; ret 0x3b44
0x00000200000e6fab : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x0000020000067ada : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x85 ; ret
0x00000200005df931 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x88 ; ret 6
0x0000020000062abc : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x000002000006852c : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x000002000010629c : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; test dl, cl ; ret 6
0x00000200005f355e : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; xchg dword ptr [rsi], edx ; popfq ; cmc ; call rcx
0x0000020000091cb5 : add al, byte ptr [rax] ; add byte ptr [rdx + rcx*4 - 0x7d], al ; ret
0x000002000013963d : add al, byte ptr [rax] ; add byte ptr [rdx], cl ; setbe al ; ret
0x000002000001fc1b : add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x4874
0x000002000005653c : add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x5375
0x00000200004666f8 : add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x00000200001aca5d : add al, byte ptr [rax] ; add byte ptr [rsi - 0x7b], ah ; ret
0x00000200000d1798 : add al, byte ptr [rax] ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x00000200000972bf : add al, byte ptr [rax] ; add cl, ch ; ret 0xfffe
0x00000200001e3bac : add al, byte ptr [rax] ; add dh, al ; and al, 0x40 ; adc esi, esi ; ret
0x00000200000545c1 : add al, byte ptr [rax] ; add dh, dh ; ret
0x0000020000679e43 : add al, byte ptr [rax] ; add dh, dh ; ret 0x7504
0x00000200004c0f12 : add al, byte ptr [rax] ; add dh, dh ; ret 0xc601
0x00000200000d15f2 : add al, byte ptr [rax] ; add dh, dh ; ret 0xf01
0x00000200004abbbe : add al, byte ptr [rax] ; add dh, dh ; ret 0xf02
0x000002000024da9e : add al, byte ptr [rax] ; add dh, dh ; ret 0xf08
0x000002000002f16d : add al, byte ptr [rax] ; add rcx, rdx ; jmp rcx
0x000002000003f190 : add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000002000002df8d : add al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x000002000004311d : add al, byte ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000119fd3 : add al, byte ptr [rax] ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000070598b : add al, byte ptr [rax] ; add rsp, 0x58 ; ret
0x0000020000116267 : add al, byte ptr [rax] ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000034186 : add al, byte ptr [rax] ; add rsp, 0x68 ; ret
0x0000020000114254 : add al, byte ptr [rax] ; add rsp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000044163c : add al, byte ptr [rax] ; add rsp, 0x88 ; ret
0x000002000070aa41 : add al, byte ptr [rax] ; and dword ptr [rip + 0x22666], 0 ; ret
0x00000200007cd11d : add al, byte ptr [rax] ; call 0x200003f7bc1
0x0000020000039ec4 : add al, byte ptr [rax] ; jmp 0x20000039e8e
0x0000020000451327 : add al, byte ptr [rax] ; lea rcx, qword ptr [rax - 0x10] ; jmp 0x200004512f8
0x0000020000793625 : add al, byte ptr [rax] ; lea rcx, qword ptr [rsp + 0x68] ; call 0x2000005f909
0x000002000003179c : add al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000794320 : add al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x58 ; ret
0x000002000022ceb9 : add al, byte ptr [rax] ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007063d0 : add al, byte ptr [rax] ; mov qword ptr [rax], r9 ; mov al, 1 ; ret
0x000002000070641c : add al, byte ptr [rax] ; mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x000002000051f0c7 : add al, byte ptr [rax] ; mov rcx, r14 ; call 0x200001480d8
0x00000200007d0e43 : add al, byte ptr [rax] ; mov rdx, rdi ; call 0x200003f7bc4
0x0000020000026ff4 : add al, byte ptr [rax] ; or edx, eax ; mov dword ptr [rcx + 0x10], edx ; xor eax, eax ; ret
0x00000200006ff48e : add al, byte ptr [rax] ; ret
0x00000200006d65d9 : add al, byte ptr [rax] ; rol bl, 0x4d ; mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x000002000062c4f2 : add al, byte ptr [rax] ; rol bl, 0xb8 ; cmp byte ptr [rax], al ; add al, al ; ret
0x000002000062c415 : add al, byte ptr [rax] ; rol bl, 0xb8 ; jg 0x2000062c425 ; add al, al ; ret
0x0000020000009a05 : add al, byte ptr [rax] ; rol bl, 0xb8 ; xor eax, dword ptr [rax] ; add al, al ; ret
0x00000200006d6ab7 : add al, byte ptr [rax] ; rol byte ptr [rcx - 0x75], 0xc2 ; ret
0x0000020000470837 : add al, byte ptr [rax] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000065c959 : add al, byte ptr [rax] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000065c9c6 ; ret
0x000002000067aad2 : add al, byte ptr [rax] ; ror byte ptr [rcx + rcx*4 + 0x11], 0x41 ; mov eax, ecx ; ret
0x00000200001729cd : add al, byte ptr [rax] ; ror byte ptr [rdi], 0x85 ; ret
0x00000200000864b4 : add al, byte ptr [rbp + 0x23] ; ret
0x00000200006a9c1d : add al, byte ptr [rbp + 0x33] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000437116 : add al, byte ptr [rbp + 0x3b] ; ret
0x0000020000129fd9 : add al, byte ptr [rbp + 0x499575c9] ; mov eax, eax ; ret
0x00000200000db707 : add al, byte ptr [rbp + 0xb0775c3] ; ret
0x00000200003e9155 : add al, byte ptr [rbp + 3] ; ret 0x3b45
0x000002000001b243 : add al, byte ptr [rbp - 0x73] ; add word ptr [rcx + 0x3b], cx ; ret 0x6474
0x00000200004b3072 : add al, byte ptr [rbp - 0x7c] ; leave ; jne 0x200004b308f ; xor eax, eax ; ret
0x00000200004b3071 : add al, byte ptr [rbp - 0x7c] ; leave ; jne 0x200004b3090 ; xor eax, eax ; ret
0x0000020000535766 : add al, byte ptr [rbx + 0x334d03e2] ; ret
0x00000200007c275d : add al, byte ptr [rbx + 0x440f0ff9] ; ret 0x8348
0x00000200000fd617 : add al, byte ptr [rbx + rdi - 0x40] ; jne 0x200000fd62a ; or eax, 0xffffffff ; ret
0x00000200004ca5c4 : add al, byte ptr [rbx - 0x1f7cfc40] ; cld ; add eax, edx ; ret
0x0000020000779f87 : add al, byte ptr [rbx - 0x76b7073d] ; add dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x0000020000150f4f : add al, byte ptr [rbx - 0x7cb6ff30] ; ret 0xff02
0x00000200005e3df3 : add al, byte ptr [rbx] ; fsubr st(1) ; or eax, 0x83fff0e4 ; ret
0x000002000000c302 : add al, byte ptr [rbx] ; ret 0xba0f
0x00000200004b62c1 : add al, byte ptr [rcx + 0x1000c2] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x000002000000bf99 : add al, byte ptr [rcx + 0x22] ; ret 0x288
0x0000020000214438 : add al, byte ptr [rcx + 0x33] ; ret 0x6374
0x000002000021440e : add al, byte ptr [rcx + 0x33] ; ret 0x840f
0x00000200003d33da : add al, byte ptr [rcx + 0x3b] ; ret
0x000002000047b6ef : add al, byte ptr [rcx + 0x3b] ; ret 0x3f77
0x000002000047f3e6 : add al, byte ptr [rcx + 0x3b] ; ret 0xb77
0x00000200005c104c : add al, byte ptr [rcx + 0xb] ; ret
0x000002000068dc4d : add al, byte ptr [rcx + 0xf] ; mov bh, 0xc9 ; movzx eax, word ptr [rax + rcx*2] ; ret
0x0000020000225cf7 : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8a41
0x0000020000225cc4 : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xb60f
0x0000020000146208 : add al, byte ptr [rcx + 2] ; ret
0x0000020000556303 : add al, byte ptr [rcx + 3] ; ret
0x00000200000a79e5 : add al, byte ptr [rcx + rcx*4 + 0x5a] ; or byte ptr [rdi - 0x77], cl ; pop rsp ; ret 0x4908
0x0000020000450472 : add al, byte ptr [rcx - 0x48] ; push rax ; jo 0x200004504a0 ; and al, ch ; ret 0xdfd5
0x000002000002cb6e : add al, byte ptr [rcx - 0x75] ; and al, 0x41 ; mov dword ptr [rax], eax ; ret
0x00000200004bead0 : add al, byte ptr [rcx - 0x75] ; ret
0x0000020000455d22 : add al, byte ptr [rcx - 0x75] ; ret 0x41c3
0x000002000007da60 : add al, byte ptr [rcx - 0x75] ; ret 0x8348
0x00000200002378fc : add al, byte ptr [rcx - 0x75] ; ret 0xe8c1
0x0000020000535784 : add al, byte ptr [rcx - 0x76] ; shl byte ptr [rbx + rax], 0x3a ; ret 0x2975
0x00000200006971df : add al, byte ptr [rcx - 0x77] ; or dword ptr [rcx - 0x75], eax ; ret
0x00000200004aa0a6 : add al, byte ptr [rcx - 0x7b] ; ret
0x0000020000032fb3 : add al, byte ptr [rcx - 0x7c] ; ret 0x3d75
0x00000200007a4ec4 : add al, byte ptr [rcx - 0x7c] ; ret 0x840f
0x000002000006e142 : add al, byte ptr [rcx - 0x7c] ; ret 0xbd41
0x0000020000211772 : add al, byte ptr [rcx - 0x7d] ; call 0x1ff8c109084
0x00000200006cf1bc : add al, byte ptr [rcx - 0x7d] ; clc ; or dh, byte ptr [rdx - 0x12] ; ret
0x00000200006b3e12 : add al, byte ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x000002000002f6be : add al, byte ptr [rcx - 0x7d] ; ret
0x0000020000494f84 : add al, byte ptr [rcx - 0x7d] ; ret 0x4403
0x000002000001cd6a : add al, byte ptr [rcx - 0xa] ; ret 0x7404
0x00000200000fbbc2 : add al, byte ptr [rcx - 0xa] ; ret 0xf01
0x000002000005cedf : add al, byte ptr [rcx - 1] ; ret
0x00000200000e03ba : add al, byte ptr [rcx - 1] ; ret 0x348
0x00000200000942c4 : add al, byte ptr [rcx - 1] ; ret 0x3b44
0x000002000024e9ec : add al, byte ptr [rcx] ; add bpl, cl ; ret 0xfffe
0x000002000062c47c : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x000002000001e0e8 : add al, byte ptr [rcx] ; jne 0x2000001e0fb ; mov eax, 0xc0000225 ; ret
0x0000020000529d06 : add al, byte ptr [rcx] ; jne 0x20000529d13 ; xor eax, eax ; ret
0x00000200003c7e62 : add al, byte ptr [rdi + rcx + 0x22] ; ret
0x00000200000f5287 : add al, byte ptr [rdi + rcx + 0x22] ; ret 0x4c65
0x00000200001f9de5 : add al, byte ptr [rdi + rcx + 0x22] ; ret 0x4c88
0x000002000050faa1 : add al, byte ptr [rdi + rcx + 0x44] ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200004685e2 : add al, byte ptr [rdi + rcx - 0x49] ; ret
0x00000200004d84ff : add al, byte ptr [rdi + rcx - 0x4a] ; xor cl, byte ptr [rax - 1] ; ret 0x8948
0x00000200001005ab : add al, byte ptr [rdi] ; add byte ptr [rcx - 0x80], al ; call qword ptr [rcx]
0x0000020000100564 : add al, byte ptr [rdi] ; add dh, dh ; ret
0x00000200006a029f : add al, byte ptr [rdx + rcx] ; inc edx ; jmp 0x200006a0299
0x000002000013f6e7 : add al, byte ptr [rdx] ; add rsp, 0x38 ; ret
0x000002000010ef45 : add al, byte ptr [rdx] ; jne 0x200001752fa ; ret
0x000002000006782d : add al, byte ptr [rsi*2 - 0x4849f0aa] ; ret
0x000002000003e393 : add al, byte ptr [rsi] ; mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x000002000070a9fa : add al, byte ptr es:[rax] ; ret
0x00000200000c4840 : add al, byte ptr fs:[rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000522526 : add al, ch ; adc al, 0x50 ; ret
0x00000200007bb13a : add al, ch ; adc al, 0xda ; ret
0x0000020000476785 : add al, ch ; adc eax, 0x8bffc716 ; ret
0x00000200004b236a : add al, ch ; add byte ptr [rax], 0 ; add dh, dh ; ret
0x000002000069cdcd : add al, ch ; add dword ptr [rcx], esp ; lahf ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004c4919 : add al, ch ; add ebx, ecx ; ret 0xe9ff
0x00000200004bb568 : add al, ch ; and ah, ah ; ret 0x84ff
0x0000020000448418 : add al, ch ; and bh, al ; ret 0xc6ff
0x00000200004c4e32 : add al, ch ; call 0x200344c1102
0x0000020000017935 : add al, ch ; call qword ptr [r11]
0x000002000046b2cf : add al, ch ; call rax
0x00000200004e3f02 : add al, ch ; clc ; ret
0x00000200004484a8 : add al, ch ; clc ; ret 0xe9ff
0x000002000052206e : add al, ch ; cld ; pop rsi ; ret 0x3dff
0x00000200003e3ad5 : add al, ch ; cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004bd965 : add al, ch ; cmc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xbaff
0x00000200005f646a : add al, ch ; cmp al, 0 ; ret 0x48ff
0x00000200004c5cbe : add al, ch ; cmp al, 0xa6 ; ret 0xbaff
0x0000020000446a7e : add al, ch ; cmp al, 0xb3 ; sar edi, -0x75 ; ret
0x00000200006b5b13 : add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xff9a
0x00000200001ad33e : add al, ch ; cwde ; ret
0x000002000057bdc2 : add al, ch ; cwde ; ret 0xffb6
0x00000200007cd11e : add al, ch ; cwde ; stosb byte ptr [rdi], al ; ret 0x8bff
0x0000020000488beb : add al, ch ; fild qword ptr [rbx] ; ret
0x000002000015f3e6 : add al, ch ; hlt ; ret 0xfffe
0x00000200000fa816 : add al, ch ; in al, -0x6f ; cld ; dec dword ptr [rax - 0x75] ; ret
0x0000020000178ca6 : add al, ch ; in al, 0x1d ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200006c8042 : add al, ch ; in al, dx ; call 0x1ffc3f88050
0x000002000043975e : add al, ch ; in al, dx ; in al, dx ; ret 0x8bff
0x00000200004cbf15 : add al, ch ; in eax, 0x43 ; ret 0x4cff
0x00000200005a3fc9 : add al, ch ; in eax, dx ; inc dword ptr [rsi] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004871c8 : add al, ch ; in eax, dx ; ret
0x0000020000521ffd : add al, ch ; in eax, dx ; ret 0x85ff
0x0000020000498a0d : add al, ch ; int 0xc2
0x00000200001c4fdd : add al, ch ; int 0xc3
0x00000200005d0689 : add al, ch ; int1 ; jno 0x200005d064b ; jmp qword ptr [rcx]
0x0000020000518489 : add al, ch ; int1 ; ret
0x0000020000456d03 : add al, ch ; ja 0x20000456d6e ; ret 0xebff
0x0000020000439647 : add al, ch ; jae 0x200004395d6 ; ret 0x8bff
0x00000200005ac4bf : add al, ch ; jae 0x200005ac4c1 ; ret 0x44ff
0x00000200001148f8 : add al, ch ; jb 0x200001148cb ; cli ; dec dword ptr [rax - 0x7f] ; ret
0x00000200004a39a8 : add al, ch ; jb 0x200004a3978 ; ret
0x000002000051d8f8 : add al, ch ; jb 0x2000051d8aa ; ret 0x8bff
0x000002000015553b : add al, ch ; jg 0x20000155558 ; add byte ptr [rax], al ; nop ; ret
0x0000020000155a3b : add al, ch ; jg 0x20000155a53 ; add byte ptr [rax], al ; nop ; ret
0x0000020000507135 : add al, ch ; jge 0x2000050719f ; ret
0x000002000070f07d : add al, ch ; jge 0x2000070f0d2 ; wait ; dec dword ptr [rax - 0x75] ; ret
0x00000200000f747e : add al, ch ; jl 0x200000f744f ; cld ; dec dword ptr [rax - 0x75] ; ret
0x0000020000487396 : add al, ch ; jl 0x200004873a0 ; and al, byte ptr [rax] ; mov rax, rdx ; jmp 0x20000487340
0x000002000051d0fe : add al, ch ; jl 0x2000051d0ad ; ret
0x00000200005c83d1 : add al, ch ; jle 0x200005c838e ; push qword ptr [rdx] ; ret
0x000002000046b48f : add al, ch ; jmp 0x2000046b459
0x00000200005fcf44 : add al, ch ; jmp 0x200005fcf0f
0x000002000071df27 : add al, ch ; jmp 0x2000071df26
0x000002000046c159 : add al, ch ; jmp 0x200494683a6
0x00000200000fa785 : add al, ch ; jne 0x200000fa723 ; cld ; dec dword ptr [rax - 0x75] ; ret
0x0000020000449509 : add al, ch ; jns 0x200004494b3 ; ret 0x48ff
0x0000020000692201 : add al, ch ; jns 0x20000692260 ; lodsb al, byte ptr [rsi] ; jmp qword ptr [rcx]
0x00000200007d0dd4 : add al, ch ; jp 0x200007d0e59 ; ret 0x8bff
0x000002000051ed6a : add al, ch ; loopne 0x2000051ed09 ; ret 0x8bff
0x0000020000522136 : add al, ch ; mov ah, 0x63 ; ret 0x8bff
0x00000200005aa133 : add al, ch ; mov bh, 0x7f ; ret 0xebff
0x00000200004cca72 : add al, ch ; mov byte ptr [rax], bh ; ret 0x48ff
0x00000200003d4834 : add al, ch ; mov ch, dh ; ret 0x85ff
0x000002000062a989 : add al, ch ; mov cl, 0x30 ; ret 0x48ff
0x0000020000434109 : add al, ch ; mov cl, 0xdc ; ret 0x48ff
0x000002000046b4d8 : add al, ch ; mov dh, 0x4e ; ret 0xfff
0x0000020000422c04 : add al, ch ; mov dh, 0xf1 ; ret
0x00000200003ede10 : add al, ch ; mov ds, word ptr [rbx] ; add byte ptr [rax], al ; jmp 0x200003edde1
0x00000200000fb3cd : add al, ch ; mov ebp, 0x8afff79d ; ret
0x00000200006030fd : add al, ch ; mov ebp, 0x8bffa5ec ; ret
0x00000200004770df : add al, ch ; mov ebx, 0x8bffc70c ; ret
0x0000020000478e3f : add al, ch ; mov ebx, 0x8bffdd41 ; ret
0x000002000011cfcb : add al, ch ; mov edi, 0x8bfff581 ; ret
0x000002000069d918 : add al, ch ; mov edx, 0x3bff9da4 ; ret
0x000002000015482e : add al, ch ; mov word ptr [rdi], ds ; add byte ptr [rax], al ; nop ; ret
0x000002000051c07a : add al, ch ; nop ; hlt ; ret 0x48ff
0x0000020000099540 : add al, ch ; or dh, byte ptr [rax - 0x74ec7500] ; ret 0xba0f
0x00000200006ca3a1 : add al, ch ; or eax, 0x8bffd94c ; ret
0x0000020000478bed : add al, ch ; or eax, 0x8bffdd44 ; ret
0x00000200001546ad : add al, ch ; or eax, 0x90000021 ; ret
0x00000200004055cf : add al, ch ; or ebp, ecx ; ret
0x0000020000461845 : add al, ch ; or ecx, ecx ; ret 0xfff
0x0000020000461be3 : add al, ch ; out -0x43, eax ; ret
0x0000020000524e64 : add al, ch ; out 0x36, al ; ret 0x8bff
0x000002000011f8a4 : add al, ch ; out 0x58, al ; cmc ; dec dword ptr [rax - 0x75] ; ret
0x0000020000437bd4 : add al, ch ; out 0xa1, al ; ret 0xf7ff
0x00000200004b8d54 : add al, ch ; out 0xc5, al ; ret 0x8bff
0x00000200003dbd20 : add al, ch ; out dx, al ; and byte ptr [rcx], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006a34cb : add al, ch ; out dx, eax ; call 0x1ffc3f63475
0x00000200004e1f6b : add al, ch ; outsd dx, dword ptr [rsi] ; cld ; ret
0x0000020000437e4b : add al, ch ; outsd dx, dword ptr [rsi] ; lahf ; ret 0x41ff
0x00000200000f5aab : add al, ch ; outsd dx, dword ptr [rsi] ; mov dl, 0xfa ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200004c10eb : add al, ch ; outsd dx, dword ptr [rsi] ; outsd dx, dword ptr [rsi] ; ret 0x48ff
0x0000020000518651 : add al, ch ; pop rbp ; ret 0xfff3
0x0000020000498d3d : add al, ch ; pop rcx ; ret
0x00000200006f4f61 : add al, ch ; pop rcx ; ret 0xffa5
0x00000200005ea33b : add al, ch ; pop rdi ; fisubr dword ptr [rdi - 0x47166f01] ; ret 0xfff1
0x00000200007cd15c : add al, ch ; pop rdx ; stosb byte ptr [rdi], al ; ret 0x8bff
0x00000200007bc248 : add al, ch ; popfq ; ret 0x66ff
0x000002000053e752 : add al, ch ; push -0x74004dca ; ret
0x00000200001cce90 : add al, ch ; push 0x6b ; out dx, eax ; dec dword ptr [rax - 0x75] ; ret
0x000002000079c291 : add al, ch ; push rcx ; ret
0x00000200004dbe09 : add al, ch ; push rcx ; ret 0xffc0
0x000002000003c059 : add al, ch ; push rcx ; ret 6
0x00000200001d6773 : add al, ch ; push rdi ; fsubrp st(4) ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x0000020000541403 : add al, ch ; push rdi ; ret
0x0000020000004c77 : add al, ch ; ret
0x00000200000be898 : add al, ch ; ret 0
0x000002000070e9dc : add al, ch ; ret 0x11
0x000002000011fb38 : add al, ch ; ret 0x12d4
0x0000020000432f74 : add al, ch ; ret 0x1367
0x000002000079108c : add al, ch ; ret 0x25e
0x0000020000091568 : add al, ch ; ret 0x2fa
0x000002000003e7c8 : add al, ch ; ret 0x369
0x0000020000107978 : add al, ch ; ret 0x498
0x0000020000089c48 : add al, ch ; ret 0x543
0x0000020000706950 : add al, ch ; ret 0x69
0x000002000018decc : add al, ch ; ret 0x710
0x000002000018d4cc : add al, ch ; ret 0x71a
0x000002000006d7e8 : add al, ch ; ret 0x78b
0x00000200001cc838 : add al, ch ; ret 0x807
0x0000020000064f88 : add al, ch ; ret 0x879
0x0000020000795ac0 : add al, ch ; ret 0x8af6
0x000002000070c948 : add al, ch ; ret 0x9683
0x000002000070c938 : add al, ch ; ret 0x98b0
0x00000200006b2ef8 : add al, ch ; ret 0x9aee
0x00000200006a57f8 : add al, ch ; ret 0x9bc5
0x00000200006f4468 : add al, ch ; ret 0x9d21
0x00000200006781f8 : add al, ch ; ret 0x9e9b
0x0000020000726100 : add al, ch ; ret 0x9f04
0x00000200005cf1f8 : add al, ch ; ret 0xa92b
0x000002000062e528 : add al, ch ; ret 0xb1d1
0x00000200004d9d38 : add al, ch ; ret 0xb8fc
0x00000200006148ec : add al, ch ; ret 0xbd0e
0x000002000045e1c0 : add al, ch ; ret 0xbe6f
0x0000020000476ef8 : add al, ch ; ret 0xbeae
0x00000200004cc3f8 : add al, ch ; ret 0xc1d5
0x00000200003e6820 : add al, ch ; ret 0xc1fa
0x00000200004a5d98 : add al, ch ; ret 0xc422
0x00000200003e10f8 : add al, ch ; ret 0xc80c
0x00000200004fa078 : add al, ch ; ret 0xd539
0x00000200003d8e2c : add al, ch ; ret 0xd5b9
0x000002000079c284 : add al, ch ; ret 0xdbb0
0x0000020000209048 : add al, ch ; ret 0xe6bc
0x00000200002080c8 : add al, ch ; ret 0xe6d0
0x0000020000172a14 : add al, ch ; ret 0xe915
0x0000020000208558 : add al, ch ; ret 0xeb5b
0x0000020000166738 : add al, ch ; ret 0xebb0
0x00000200001ef2a8 : add al, ch ; ret 0xed1d
0x000002000016c208 : add al, ch ; ret 0xf039
0x00000200005d724c : add al, ch ; ret 0xf16b
0x00000200003e3168 : add al, ch ; ret 0xf1d
0x00000200005b6e8c : add al, ch ; ret 0xf483
0x00000200000c6cf8 : add al, ch ; ret 0xf909
0x00000200000c4ea8 : add al, ch ; ret 0xf992
0x00000200005594b8 : add al, ch ; ret 0xfa43
0x000002000019ca28 : add al, ch ; ret 0xfaec
0x00000200004e7758 : add al, ch ; ret 0xfda6
0x00000200000ad1f8 : add al, ch ; ret 0xff3b
0x0000020000672ae0 : add al, ch ; ret 0xff99
0x0000020000607d5b : add al, ch ; ret 0xffb0
0x0000020000545ac7 : add al, ch ; ret 0xffb1
0x000002000057be0b : add al, ch ; ret 0xffb6
0x00000200004b2808 : add al, ch ; ret 0xffc9
0x00000200006c796c : add al, ch ; ret 0xffef
0x00000200006ca23b : add al, ch ; ret 0xffff
0x000002000006c108 : add al, ch ; ret 5
0x00000200007141ad : add al, ch ; sar edx, -2 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000154bb7 : add al, ch ; sbb dword ptr [rax + rax], 0 ; nop ; ret
0x000002000044e59d : add al, ch ; sbb eax, 0x8bffc138 ; ret
0x00000200005c834b : add al, ch ; scasd eax, dword ptr [rdi] ; ffree st(4) ; push qword ptr [rdx] ; ret
0x000002000042d8cb : add al, ch ; scasd eax, dword ptr [rdi] ; stc ; ret
0x000002000046bf58 : add al, ch ; shl bh, cl ; ret 0x48ff
0x00000200001545e9 : add al, ch ; shl dword ptr [rcx], 1 ; add byte ptr [rax], al ; nop ; ret
0x00000200004baae9 : add al, ch ; shr esi, 1 ; ret 0xebff
0x0000020000155b6d : add al, ch ; sldt word ptr [r8] ; nop ; ret
0x00000200005ac5cc : add al, ch ; stc ; ret 0x48ff
0x00000200005078cd : add al, ch ; std ; pop rax ; ret
0x000002000066f443 : add al, ch ; sti ; mov eax, 0x8b4dccff ; ret 0x8348
0x00000200004f61ca : add al, ch ; sub al, 0xe2 ; ret 0x48ff
0x00000200003e559a : add al, ch ; sub byte ptr [rdx], al ; ret 0x48ff
0x0000020000155f10 : add al, ch ; sub cl, byte ptr [rcx] ; add byte ptr [rax], al ; nop ; ret
0x00000200006a9dfd : add al, ch ; sub eax, 0x8aff9bfb ; ret
0x000002000047626d : add al, ch ; sub eax, 0x8bffc71b ; ret
0x00000200000b783b : add al, ch ; sysenter
0x00000200007d0e0e : add al, ch ; test al, 0x6d ; ret 0x8bff
0x00000200001315df : add al, ch ; wait ; ret 0x3c
0x00000200004e4065 : add al, ch ; xchg eax, ebp ; ret 0xffc0
0x00000200005ac69f : add al, ch ; xchg eax, ebx ; clc ; ret 0x48ff
0x0000020000631e05 : add al, ch ; xchg eax, ecx ; ret 0xffec
0x00000200005d61f7 : add al, ch ; xchg eax, edi ; pop rsp ; ret
0x0000020000073a38 : add al, ch ; xchg eax, edx ; or edi, ebx ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x0000020000703e88 : add al, ch ; xchg eax, edx ; ret
0x00000200004ad2c6 : add al, ch ; xchg eax, esp ; lodsd eax, dword ptr [rsi] ; ret
0x00000200006145f9 : add al, ch ; xchg eax, r12d ; ret
0x0000020000707158 : add al, ch ; xor ah, al ; xchg eax, esi ; dec dword ptr [rax - 0x75] ; ret
0x000002000070f0c6 : add al, ch ; xor al, 0x49 ; wait ; dec dword ptr [rax - 0x75] ; ret
0x00000200005ac190 : add al, ch ; xor al, byte ptr [rax] ; ret
0x00000200000960e3 : add al, cl ; call 0x1ffc28da1f3
0x00000200007d88e7 : add al, cl ; ret 0x407d
0x000002000041aff8 : add al, cl ; ret 0x4106
0x00000200004198ff : add al, cl ; ret 0x4108
0x00000200000b43c9 : add al, dh ; add byte ptr [rax + 0x33], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x00000200000b4632 : add al, dh ; add byte ptr [rbx - 0x75], cl ; ret 0x4808
0x00000200000b1de5 : add al, dh ; add byte ptr [rcx - 0x75], al ; fimul dword ptr [rcx - 0x7d] ; ret 0x4d0a
0x00000200001997fa : add al, dh ; dec dword ptr [rax + 0x23] ; ret
0x0000020000055c83 : add al, dh ; dec dword ptr [rax + 0xc] ; ret
0x00000200003d01cf : add al, dh ; inc dword ptr [r8] ; ret
0x0000020000114ae4 : add al, dh ; inc dword ptr [rax + 0x200] ; ret
0x00000200007d890f : add al, dh ; ret 0x407d
0x00000200006ff478 : add al, dh ; xadd qword ptr [rcx], rax ; ret
0x0000020000150b84 : add al, dl ; mov word ptr [rdx + 0x2cc0], ax ; ret
0x00000200007d89d7 : add al, dl ; ret
0x00000200006ebfb7 : add al, dl ; ret 0x406e
0x000002000000bfc4 : add al, r8b ; call 0x1ffc22300d6
0x0000020000403287 : add al, r8b ; call 0x1ffc262739b
0x000002000005f92d : add ax, 2 ; mov word ptr [rcx + 2], ax ; ret
0x000002000001bb7a : add ax, r8w ; mov word ptr [rdx + 0x14], ax ; ret
0x000002000061d3fa : add bh, ah ; ret 0x8bff
0x0000020000209041 : add bh, al ; inc dword ptr [r9] ; add byte ptr [rax], al ; add al, ch ; ret 0xe6bc
0x00000200001c8c72 : add bh, al ; ret
0x0000020000222005 : add bh, bh ; adc al, 0xc8 ; add rsp, 0x28 ; ret
0x000002000021174f : add bh, bh ; add byte ptr [rax], al ; setbe al ; ret
0x00000200005d1227 : add bh, bh ; add dword ptr [rbp], ebx ; ret
0x00000200007118bb : add bh, bh ; add eax, 0x1ba12 ; xor eax, eax ; ret
0x00000200001e16fa : add bh, bh ; dec dword ptr [rax + 0xb] ; ret
0x0000020000671a63 : add bh, bh ; dec dword ptr [rax + 3] ; ret
0x00000200000b3e47 : add bh, bh ; dec dword ptr [rax - 0x75] ; ret
0x000002000017da5c : add bh, bh ; dec dword ptr [rax - 0x75] ; ret 0x2348
0x00000200001f35de : add bh, bh ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000013d30 : add bh, bh ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000b3f81 : add bh, bh ; dec dword ptr [rcx - 0x75] ; ret 0xb48
0x00000200004cefad : add bh, bh ; dec dword ptr [rdi] ; test ch, dl ; ret 0x10
0x0000020000120038 : add bh, bh ; enter 0x33c3, -0x40 ; ret
0x00000200003f55df : add bh, bh ; jmp qword ptr [rbx]
0x0000020000151348 : add bh, bh ; loop 0x200001513a9 ; ret
0x000002000024c5a2 : add bh, bh ; loopne 0x2000024c5f5 ; add esp, 0x48 ; ret
0x00000200007d647d : add bh, bh ; or edx, 0xffffffff ; call qword ptr [rax]
0x00000200001fda66 : add bh, bh ; push rax ; sub byte ptr [rbp - 0x74f58740], al ; ret
0x00000200000042ad : add bh, bh ; ret
0x00000200001254b9 : add bh, bh ; ret 0x1589
0x000002000066dd85 : add bh, bh ; ret 0x163b
0x00000200002129fd : add bh, bh ; ret 0x3345
0x00000200000e0972 : add bh, bh ; ret 0x348
0x000002000006a883 : add bh, bh ; ret 0x349
0x000002000048c29d : add bh, bh ; ret 0x34c
0x000002000068a16a : add bh, bh ; ret 0x34d
0x000002000049e1e2 : add bh, bh ; ret 0x3b41
0x00000200005366e3 : add bh, bh ; ret 0x3b44
0x00000200006c66b8 : add bh, bh ; ret 0x3b45
0x0000020000235b51 : add bh, bh ; ret 0x4d8b
0x0000020000192277 : add bh, bh ; ret 0x5189
0x000002000044d68b : add bh, bh ; ret 0x5489
0x000002000060cdc6 : add bh, bh ; ret 0x5589
0x00000200001329cc : add bh, bh ; ret 0x8341
0x000002000010f2c2 : add bh, bh ; ret 0x8348
0x00000200006e36da : add bh, bh ; ret 0x8349
0x000002000012dd25 : add bh, bh ; ret 0x83e8
0x0000020000201ab2 : add bh, bh ; ret 0x8948
0x000002000012b6d2 : add bh, bh ; ret 0x894a
0x00000200006952fa : add bh, bh ; ret 0x8b44
0x0000020000551754 : add bh, bh ; ret 0x8b45
0x00000200000a7bfe : add bh, bh ; ret 0x8b48
0x000002000001482d : add bh, bh ; ret 0x8b49
0x00000200000d3b1a : add bh, bh ; ret 0x8b4c
0x00000200000b4545 : add bh, bh ; ret 0x8b4d
0x00000200000dec5e : add bh, bh ; ret 0x8d48
0x000002000016b19b : add bh, bh ; ret 0x9489
0x00000200000a844a : add bh, bh ; ret 0xb70f
0x000002000068d479 : add bh, bh ; ret 0xb7e8
0x000002000058f98d : add bh, bh ; ret 0xb841
0x00000200005cd617 : add bh, bh ; ret 0xb941
0x000002000068cd71 : add bh, bh ; ret 0xbfe8
0x0000020000221ba2 : add bh, bh ; ret 0xc8eb
0x0000020000518df1 : add bh, bh ; ret 0xca2b
0x000002000021c22b : add bh, bh ; ret 0xd73b
0x00000200004475d7 : add bh, bh ; ret 0xdbeb
0x0000020000503161 : add bh, bh ; ret 0xe2eb
0x0000020000419e74 : add bh, bh ; ret 0xfa83
0x000002000042b390 : add bh, bh ; ret 0xff41
0x0000020000088330 : add bh, bh ; ret 0xff49
0x0000020000117b85 : add bh, bh ; rol bl, 0xd ; add byte ptr [rax], al ; add ah, bh ; ret
0x0000020000138595 : add bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xe872
0x00000200001ceb3d : add bh, bh ; ror byte ptr [rcx - 0x76b3f7bf], 1 ; ret
0x000002000023c5ee : add bh, bh ; xchg eax, esi ; push -0x16ffffff ; ret
0x00000200001b3bbb : add bh, byte ptr [rax + 1] ; ret
0x00000200000b68ae : add bh, byte ptr [rax] ; sete al ; ret
0x000002000006ca41 : add bh, byte ptr [rbx] ; ret 0x1175
0x000002000006ca52 : add bh, byte ptr [rbx] ; ret 0x1274
0x0000020000644878 : add bh, byte ptr [rbx] ; ret 0x1b76
0x0000020000518def : add bh, byte ptr [rdx + rax - 1] ; ret 0xca2b
0x00000200001f750b : add bh, byte ptr [rdx] ; ret
0x0000020000222712 : add bh, ch ; mov rcx, rbx ; call 0x200000be967
0x0000020000139d13 : add bh, ch ; ret
0x00000200002350a3 : add bh, dh ; rcl cl, 0xe9 ; jne 0x200002350ab ; ret
0x00000200000bc6be : add bh, dh ; ret
0x0000020000415a74 : add bh, dh ; ret 0
0x000002000050927a : add bh, dh ; ret 0x402
0x000002000005a0b8 : add bh, dh ; ret 0x4ffe
0x00000200004fd9c2 : add bh, dh ; ret 0x6000
0x000002000005a1d4 : add bh, dh ; ret 0x7000
0x000002000005a186 : add bh, dh ; ret 0xdffe
0x00000200000783cc : add bh, dh ; ret 0xf00
0x00000200001ca02b : add bh, dh ; ret 0xf48
0x0000020000559556 : add bh, dh ; ret 0xfce8
0x00000200000d506a : add bh, dh ; ret 0xfff
0x0000020000452830 : add bh, dh ; ret 0xfff0
0x0000020000594bbf : add bh, dh ; ret 0xfff8
0x00000200005946f1 : add bh, dh ; ret 0xfffc
0x00000200000b99b3 : add bh, dh ; ret 0xfffe
0x000002000013c838 : add bh, dh ; ret 0xffff
0x00000200003e229f : add bh, dh ; shl byte ptr [rbx], 1 ; ret 0xd2f7
0x0000020000588b65 : add bh, dl ; call qword ptr [rbx]
0x000002000062c48b : add bl, 0xb8 ; js 0x2000062c498 ; add al, al ; ret
0x00000200000b894a : add bl, al ; cmp al, 2 ; sbb eax, eax ; and eax, 2 ; ret
0x0000020000220c61 : add bl, al ; cmp rax, qword ptr [rdx + 0x40] ; sbb eax, eax ; ret
0x00000200001ead94 : add bl, al ; dec dword ptr [rax + 0x1f08] ; ret
0x0000020000210458 : add bl, al ; inc dword ptr [rcx + 0x250] ; ret
0x00000200001d2e3e : add bl, al ; inc dword ptr [rip + 0x139dda] ; ret
0x0000020000119a78 : add bl, al ; lea rax, qword ptr [rcx + 0x3600] ; ret
0x00000200001d80b1 : add bl, al ; lea rax, qword ptr [rcx + 0x790] ; ret
0x000002000000a345 : add bl, al ; lea rax, qword ptr [rip + 0x1503d2] ; ret
0x000002000000a33d : add bl, al ; lea rax, qword ptr [rip + 0x1503fa] ; ret
0x000002000000a34d : add bl, al ; lea rax, qword ptr [rip + 0x15040a] ; ret
0x000002000000a355 : add bl, al ; lea rax, qword ptr [rip + 0x150422] ; ret
0x0000020000009995 : add bl, al ; lea rax, qword ptr [rip + 0x150c92] ; ret
0x00000200000098f1 : add bl, al ; lea rax, qword ptr [rip + 0x150cd6] ; ret
0x000002000000990e : add bl, al ; lea rax, qword ptr [rip + 0x150d39] ; ret
0x0000020000009906 : add bl, al ; lea rax, qword ptr [rip + 0x150d51] ; ret
0x0000020000009956 : add bl, al ; lea rax, qword ptr [rip + 0x150d81] ; ret
0x000002000000996b : add bl, al ; lea rax, qword ptr [rip + 0x150d8c] ; ret
0x0000020000009973 : add bl, al ; lea rax, qword ptr [rip + 0x150da4] ; ret
0x00000200000099aa : add bl, al ; lea rax, qword ptr [rip + 0x150ded] ; ret
0x00000200000bf6c7 : add bl, al ; lea rax, qword ptr [rip + 0x240b78] ; ret
0x00000200000a0dd3 : add bl, al ; lea rax, qword ptr [rip + 0x2833e4] ; ret
0x0000020000070bb6 : add bl, al ; lea rax, qword ptr [rip + 0x2b36a1] ; ret
0x0000020000044dc6 : add bl, al ; lea rax, qword ptr [rip + 0x2defc9] ; ret
0x0000020000517d2c : add bl, al ; lea rax, qword ptr [rip + 0x589bb] ; ret
0x0000020000517d24 : add bl, al ; lea rax, qword ptr [rip + 0x58a23] ; ret
0x0000020000044dce : add bl, al ; lock inc dword ptr [rcx + 0x10] ; ret
0x00000200000853bf : add bl, al ; mov byte ptr [rip + 0x29cc7d], dl ; ret
0x00000200000853a8 : add bl, al ; mov byte ptr [rip + 0x29cc95], dl ; ret
0x000002000052fcab : add bl, al ; mov byte ptr [rip - 0x233c33], 1 ; ret
0x0000020000456972 : add bl, al ; mov dword ptr [rip - 0x13317e], ecx ; ret
0x00000200007d4f5a : add bl, al ; mov eax, 0x1000 ; ret
0x00000200004aa10f : add bl, al ; mov eax, 0x100000 ; ret
0x000002000000838a : add bl, al ; mov eax, 0x7d0 ; ret
0x00000200004aa109 : add bl, al ; mov eax, 0x80000 ; ret
0x00000200004f9be2 : add bl, al ; mov eax, 0xc0000001 ; ret
0x000002000070ff2e : add bl, al ; mov eax, 0xc0000002 ; ret
0x00000200000036d2 : add bl, al ; mov eax, 0xc000000d ; ret
0x00000200001c0f3c : add bl, al ; mov eax, 0xc000009a ; ret
0x000002000062c47f : add bl, al ; mov eax, 0xc0000100 ; ret
0x00000200001d3f22 : add bl, al ; mov eax, 0xc0000225 ; ret
0x0000020000008dc6 : add bl, al ; mov eax, 1 ; ret
0x0000020000007ed9 : add bl, al ; mov eax, 2 ; ret
0x0000020000007edf : add bl, al ; mov eax, 3 ; ret
0x00000200006c7420 : add bl, al ; mov eax, 5 ; ret
0x000002000000c619 : add bl, al ; mov eax, dword ptr [rip + 0x39bcdf] ; ret
0x0000020000007038 : add bl, al ; mov eax, edx ; ret
0x00000200005128ac : add bl, al ; mov qword ptr [rip - 0x1edadd], rax ; ret
0x0000020000032c56 : add bl, al ; mov rax, qword ptr [rcx + 0x3f8] ; ret
0x000002000045358e : add bl, al ; mov rax, qword ptr [rcx + 0x460] ; ret
0x00000200001d80cf : add bl, al ; mov rax, qword ptr [rcx + 0x790] ; ret
0x000002000005ccfa : add bl, al ; mov rax, qword ptr [rip + 0x2a33a5] ; ret
0x000002000005ccf2 : add bl, al ; mov rax, qword ptr [rip + 0x2a33c5] ; ret
0x0000020000157bae : add bl, al ; movsxd rax, ecx ; mov qword ptr [rdx], rax ; ret
0x00000200001d36c5 : add bl, al ; movzx eax, byte ptr [rcx + 0x7d] ; ret
0x000002000042d702 : add bl, al ; not ecx ; test ecx, edx ; sete al ; ret
0x0000020000009caf : add bl, al ; or eax, 0xffffffff ; ret
0x0000020000560dea : add bl, al ; sbb eax, eax ; and eax, 2 ; dec eax ; ret
0x0000020000032b61 : add bl, al ; sbb eax, eax ; ret
0x0000020000035737 : add bl, al ; sub qword ptr [rip + 0x2ed028], rdx ; ret
0x000002000041f62d : add bl, al ; test eax, eax ; jne 0x2000041f621 ; xor eax, eax ; ret
0x0000020000044d66 : add bl, al ; wbinvd ; ret
0x0000020000044d8e : add bl, al ; xchg dword ptr [rcx + 0x54], edx ; mov eax, edx ; ret
0x00000200005695e2 : add bl, al ; xchg qword ptr [rip - 0x2294fb], rcx ; ret
0x0000020000497597 : add bl, al ; xor al, al ; ret
0x0000020000009558 : add bl, al ; xor eax, eax ; ret
0x000002000003f643 : add bl, bh ; add rsp, 0x28 ; ret
0x000002000003e2d0 : add bl, bh ; ret
0x0000020000209f4d : add bl, bh ; xor eax, eax ; ret
0x000002000014bd6f : add bl, bl ; loop 0x2000014bd14 ; fnstcw word ptr [rcx] ; ret
0x000002000011a72a : add bl, bl ; sub byte ptr [rax], al ; ret
0x000002000066923e : add bl, byte ptr [rax] ; ret
0x00000200005d115c : add bl, byte ptr [rbp] ; add rdx, rcx ; jmp rdx
0x000002000014021c : add bl, byte ptr [rcx + rcx*2 - 1] ; ret 0x8b48
0x0000020000600d81 : add bl, byte ptr [rcx] ; push rax ; add bh, bh ; ret 0xb841
0x00000200005cd614 : add bl, byte ptr [rcx] ; push rax ; add bh, bh ; ret 0xb941
0x00000200001a42d2 : add bl, ch ; adc byte ptr [rax - 0x7d], cl ; jmp qword ptr [rdx]
0x0000020000219d99 : add bl, ch ; add al, 0x8b ; ret
0x00000200006ae5cb : add bl, ch ; add al, 0xb ; fdivr st(7) ; ret
0x00000200006bb9f8 : add bl, ch ; add eax, 0x8bf38a40 ; ret
0x0000020000594350 : add bl, ch ; add eax, 0xe7e6b7e9 ; push rdi ; ret
0x00000200005c9779 : add bl, ch ; add eax, 0xebb024e9 ; push rsi ; ret
0x0000020000413ab2 : add bl, ch ; add eax, 0xffef55e9 ; push rdi ; ret
0x000002000070fb9a : add bl, ch ; add eax, dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x40c3
0x00000200006e0345 : add bl, ch ; add eax, dword ptr [rcx - 0x75] ; ret 0x4489
0x000002000061876d : add bl, ch ; add ecx, dword ptr [rax - 1] ; ret
0x000002000017bf8d : add bl, ch ; add ecx, dword ptr [rbp - 0x75] ; ret
0x00000200006e02f6 : add bl, ch ; add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x0000020000615f2f : add bl, ch ; cmp dword ptr [rax - 0x7d], ecx ; ret 0x4c20
0x0000020000427b34 : add bl, ch ; fidivr dword ptr [rax - 0x3ffffff3] ; ret
0x00000200003f9fbb : add bl, ch ; fisttp dword ptr [rax - 0x7d] ; ret 0x4808
0x00000200001d793d : add bl, ch ; fisttp word ptr [rax - 0x7d] ; ret
0x0000020000458935 : add bl, ch ; fnstsw dword ptr [rax - 0x3fffffdd] ; ret
0x00000200005242d9 : add bl, ch ; idiv dword ptr [rax - 0x3ffffff3] ; ret
0x000002000045c025 : add bl, ch ; in eax, -0x75 ; ret
0x00000200004fd586 : add bl, ch ; int1 ; xor eax, eax ; ret
0x000002000013c8c2 : add bl, ch ; mov cl, 0xf7 ; ret 0xffff
0x000002000022fd6f : add bl, ch ; mov word ptr [rax - 0x75], cs ; ret 0xc148
0x00000200006834e9 : add bl, ch ; or al, 0x8b ; ret 0xd0f7
0x00000200001da175 : add bl, ch ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x000002000024b3f5 : add bl, ch ; or byte ptr [rbx], cl ; ret 0x8789
0x000002000019601b : add bl, ch ; or ecx, dword ptr [rcx + 0x23] ; ret
0x000002000001f7d6 : add bl, ch ; ret
0x00000200004b3dfb : add bl, ch ; ret 0x19b8
0x0000020000071585 : add bl, ch ; ret 0x3b41
0x00000200003ede15 : add bl, ch ; ret 0x3b9
0x0000020000499e57 : add bl, ch ; ret 0x4865
0x00000200007a2f50 : add bl, ch ; ret 0x48cc
0x000002000003db3e : add bl, ch ; ret 0x8348
0x00000200000038f2 : add bl, ch ; ret 0x8a80
0x000002000005e07e : add bl, ch ; ret 0x8b48
0x0000020000052d7b : add bl, ch ; ret 0x9066
0x00000200003fea01 : add bl, ch ; ret 0xc033
0x000002000005266e : add bl, ch ; ret 0xc1f6
0x000002000003d636 : add bl, ch ; ret 0xcccc
0x0000020000027504 : add bl, ch ; ret 0xdb8
0x0000020000504e40 : add bl, ch ; ret 0xefbb
0x00000200006cdea1 : add bl, ch ; salc ; xor al, al ; ret
0x000002000050464b : add bl, ch ; sar dword ptr [rax - 0x3fffff66], -0x15 ; ret
0x000002000077aca1 : add bl, ch ; sbb dword ptr [rbp - 0x74e18b2e], eax ; ret 0x8b48
0x00000200003dd47f : add bl, ch ; sub al, 0x8b ; ret
0x00000200001b357f : add bl, ch ; sub ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x0000020000055db2 : add bl, ch ; xchg byte ptr [rbx], dh ; leave ; call r14
0x000002000077fbe0 : add bl, ch ; xor cl, byte ptr [rbx - 0x74b6dbb5] ; ret
0x000002000077f9a6 : add bl, ch ; xor ecx, dword ptr [rbx - 0x74b6dbb5] ; ret
0x0000020000692f63 : add bl, ch ; xor esi, esi ; ret
0x0000020000525b72 : add bl, dh ; movq qword ptr [rbp + 0x37], mm0 ; call 0x200001480d9
0x00000200005201ff : add bl, dh ; movq qword ptr [rbp - 0x10], mm0 ; call 0x2000014a259
0x000002000051da2d : add bl, dh ; movq qword ptr [rbp - 0x11], mm0 ; call 0x200001484f9
0x0000020000525083 : add bl, dh ; movq qword ptr [rbp - 0x31], mm0 ; call 0x200001480d9
0x0000020000525ec3 : add bl, dh ; movq qword ptr [rbp - 9], mm0 ; call 0x20000148239
0x000002000061c4fc : add bl, dh ; movq qword ptr [rcx + 0x20], mm0 ; ret
0x0000020000052b9a : add bl, dh ; movq qword ptr [rcx], mm0 ; ret
0x0000020000455d1e : add bl, dh ; movq qword ptr [rdx], mm0 ; mov eax, r10d ; ret
0x00000200000ec963 : add bl, dh ; nop ; add rsp, 0x28 ; ret
0x00000200000f210d : add bl, dl ; loop 0x200000f210b ; ret 0xf15
0x00000200001cb0c0 : add bl, dl ; loop 0x200001cb0be ; ret 0x7432
0x00000200004202d8 : add bpl, bl ; ret
0x0000020000024965 : add bpl, byte ptr [r8 + 0xf637504] ; mov dh, 0x83 ; ret
0x00000200005804af : add bpl, cl ; ret 0xf32b
0x000002000024e9ef : add bpl, cl ; ret 0xfffe
0x00000200004b3132 : add bpl, r11b ; mov eax, 0xc0000058 ; ret
0x0000020000620e18 : add bpl, r8b ; and esp, ecx ; ret 0x48ff
0x0000020000148b85 : add byte ptr [eax], al ; add cl, ch ; mov dl, 0xd4 ; add byte ptr [rax], al ; ret
0x0000020000143298 : add byte ptr [r11], r15b ; ret
0x000002000024679b : add byte ptr [r11], r15b ; ret 0x840f
0x000002000066a6a7 : add byte ptr [r13 + 3], r8b ; ret 0x8944
0x000002000004256d : add byte ptr [r13 + 3], r9b ; ret
0x00000200000d24a6 : add byte ptr [r13 - 0x73], r9b ; pop rsi ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000040696 : add byte ptr [r13 - 0x74f88625], r8b ; ret
0x000002000042acec : add byte ptr [r15 + r9 + 0x44], al ; jrcxz 0x2000042ace3 ; ret
0x000002000015deea : add byte ptr [r8 + 0x30c48348], r10b ; pop rbp ; ret
0x000002000001d9d3 : add byte ptr [r8 + 0x3b], r9b ; ret
0x00000200005ddd06 : add byte ptr [r8 - 0x75], r9b ; or al, bpl ; ret
0x0000020000034db5 : add byte ptr [r8], al ; add byte ptr [rax + 3], cl ; ret 0x349
0x000002000003d0fb : add byte ptr [r8], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000024f79e : add byte ptr [r8], al ; add byte ptr [rbx], ch ; ret 0x8b48
0x00000200001486c5 : add byte ptr [r8], al ; add cl, ch ; jb 0x200001486ae ; add byte ptr [rax], al ; ret
0x00000200001487c5 : add byte ptr [r8], al ; add cl, ch ; jb 0x200001487ad ; add byte ptr [rax], al ; ret
0x0000020000148805 : add byte ptr [r8], al ; add cl, ch ; xor bl, al ; add byte ptr [rax], al ; ret
0x0000020000148705 : add byte ptr [r8], al ; add cl, ch ; xor bl, cl ; add byte ptr [rax], al ; ret
0x00000200003d3d25 : add byte ptr [r8], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003d3c58 : add byte ptr [r8], al ; mov al, 1 ; ret
0x0000020000064d9c : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4865
0x0000020000148885 : add byte ptr [r8], r8b ; add cl, ch ; mov dl, 0xd7 ; add byte ptr [rax], al ; ret
0x0000020000148785 : add byte ptr [r8], r8b ; add cl, ch ; mov dl, 0xd8 ; add byte ptr [rax], al ; ret
0x0000020000148845 : add byte ptr [r8], r8b ; add cl, ch ; xlatb ; add byte ptr [rax], al ; ret
0x00000200007a42df : add byte ptr [r8], r8b ; mov rcx, rsi ; call 0x200003d2699
0x000002000041b605 : add byte ptr [r9 + 3], cl ; int 0xff
0x00000200005db9a6 : add byte ptr [r9 + 3], r8b ; ret
0x00000200004ffa32 : add byte ptr [r9 + 3], r9b ; ret 0xe0ff
0x00000200000b2360 : add byte ptr [r9 - 0x75], r8b ; fimul dword ptr [rcx - 0x7d] ; ret 0x4d0a
0x0000020000493d1c : add byte ptr [r9 - 0x75], r8b ; fstp st(1), st(0) ; call 0x2004258ff6a
0x00000200000450dd : add byte ptr [rax + 0x10], bh ; ret
0x00000200001d20d0 : add byte ptr [rax + 0x14748205], cl ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000009d983 : add byte ptr [rax + 0x1474c0f9], al ; xor eax, eax ; ret
0x00000200004bab40 : add byte ptr [rax + 0x1740000], al ; ret
0x000002000062c48a : add byte ptr [rax + 0x178b8c3], al ; add al, al ; ret
0x00000200001123ef : add byte ptr [rax + 0x20c48348], al ; pop rbx ; ret
0x00000200001477c2 : add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x0000020000432b49 : add byte ptr [rax + 0x234985eb], al ; ret 0x3b48
0x000002000002e3a0 : add byte ptr [rax + 0x23], cl ; ret
0x0000020000111bd7 : add byte ptr [rax + 0x23], cl ; ret 0x1c7
0x00000200001d84c5 : add byte ptr [rax + 0x23], cl ; ret 0x234c
0x0000020000032f85 : add byte ptr [rax + 0x23], cl ; ret 0x3348
0x0000020000032db9 : add byte ptr [rax + 0x23], cl ; ret 0x344
0x000002000006305a : add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x00000200002390b7 : add byte ptr [rax + 0x23], cl ; ret 0x548
0x0000020000198b06 : add byte ptr [rax + 0x23], cl ; ret 0x8348
0x00000200000b2168 : add byte ptr [rax + 0x23], cl ; ret 0x8945
0x000002000004ca65 : add byte ptr [rax + 0x23], cl ; ret 0x8b44
0x00000200001e8f8d : add byte ptr [rax + 0x23], cl ; ret 0x8b49
0x00000200000799e3 : add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x00000200006b947b : add byte ptr [rax + 0x23], cl ; ret 0x8d49
0x00000200000b6e84 : add byte ptr [rax + 0x23], cl ; ret 0x8d4a
0x000002000046da0f : add byte ptr [rax + 0x23], cl ; ret 0xb948
0x000002000016d6df : add byte ptr [rax + 0x23], cl ; ret 0xf44
0x00000200000d8ed2 : add byte ptr [rax + 0x23], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x3349
0x00000200000b2ef5 : add byte ptr [rax + 0x23], cl ; sal dh, 1 ; ret 0xf01
0x0000020000716137 : add byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x000002000070ae73 : add byte ptr [rax + 0x2b], cl ; fimul word ptr [rax - 0x7d] ; ret
0x0000020000014d39 : add byte ptr [rax + 0x2b], cl ; fmul dword ptr [rax - 0x75] ; ret
0x000002000009d0ff : add byte ptr [rax + 0x2b], cl ; ret
0x00000200005acfe3 : add byte ptr [rax + 0x2b], cl ; ret 0x34c
0x00000200004c2deb : add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000048682 : add byte ptr [rax + 0x2b], cl ; ret 0x4466
0x00000200001c8209 : add byte ptr [rax + 0x2b], cl ; ret 0x8b44
0x000002000013aa57 : add byte ptr [rax + 0x2b], cl ; ret 0xc148
0x00000200001e4099 : add byte ptr [rax + 0x2b], cl ; rol dword ptr [rbp - 0x75], 1 ; ret 0x3b48
0x00000200000defe1 : add byte ptr [rax + 0x2b], cl ; ror dword ptr [rcx - 0x75], 1 ; ret 0xf748
0x0000020000682776 : add byte ptr [rax + 0x2d0], bh ; ret
0x00000200004da67e : add byte ptr [rax + 0x2d], cl ; clc ; adc al, 0 ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000015cf74 : add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x00000200000b2059 : add byte ptr [rax + 0x31], cl ; add dword ptr [rbp + 0x3b], ecx ; ret
0x00000200004bfe38 : add byte ptr [rax + 0x32], al ; push rsi ; ret 0xf02
0x000002000000802f : add byte ptr [rax + 0x33], al ; ret 0xd233
0x00000200000d408a : add byte ptr [rax + 0x33], cl ; add cl, byte ptr [rcx + 0x23] ; ret
0x00000200000b43cb : add byte ptr [rax + 0x33], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x00000200000b1d43 : add byte ptr [rax + 0x33], cl ; add dword ptr [rcx + 0x23], ecx ; ret
0x000002000006ff2f : add byte ptr [rax + 0x33], cl ; ret
0x000002000004b947 : add byte ptr [rax + 0x33], cl ; ret 0x2348
0x0000020000044032 : add byte ptr [rax + 0x33], cl ; ret 0x3348
0x00000200000f1262 : add byte ptr [rax + 0x33], cl ; ret 0x8948
0x000002000079f2ef : add byte ptr [rax + 0x33], cl ; ret 0xb948
0x00000200000b2390 : add byte ptr [rax + 0x33], cl ; ret 0xba48
0x000002000023e66b : add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000077b683 : add byte ptr [rax + 0x33], cl ; ror byte ptr [rax - 0x77], 1 ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000daa90 : add byte ptr [rax + 0x33], cl ; sbb byte ptr [r9 + 0x23], cl ; ret 0x3148
0x000002000004a23e : add byte ptr [rax + 0x33fffff6], al ; fisttp dword ptr [rax + 0xb] ; ret 0x8b49
0x000002000052de2d : add byte ptr [rax + 0x38850f40], ch ; ret
0x00000200006a7af9 : add byte ptr [rax + 0x39], cl ; outsd dx, dword ptr [rsi] ; sbb byte ptr [rbp + rcx - 0x75], dh ; ret 0x44f0
0x000002000001f9d3 : add byte ptr [rax + 0x39], cl ; xor byte ptr [r13 - 0x12], sil ; mov al, 1 ; ret
0x00000200005f428f : add byte ptr [rax + 0x3b], cl ; enter -0x298d, -0x17 ; ret
0x000002000069e42f : add byte ptr [rax + 0x3b], cl ; enter -0x3fe5, -0x7d ; loopne 0x2000069e487 ; ret
0x0000020000052b5d : add byte ptr [rax + 0x3b], cl ; enter 0x477, 0x48 ; sub eax, ecx ; ret
0x000002000055e967 : add byte ptr [rax + 0x3b], cl ; fimul dword ptr [rax + 0xf] ; ret 0x8a
0x000002000001d9d4 : add byte ptr [rax + 0x3b], cl ; ret
0x0000020000678008 : add byte ptr [rax + 0x3b], cl ; ret 0x1076
0x000002000042f3ee : add byte ptr [rax + 0x3b], cl ; ret 0x1077
0x00000200000b92a4 : add byte ptr [rax + 0x3b], cl ; ret 0x1273
0x00000200004e4551 : add byte ptr [rax + 0x3b], cl ; ret 0x1472
0x000002000070aa7e : add byte ptr [rax + 0x3b], cl ; ret 0x1474
0x000002000067b296 : add byte ptr [rax + 0x3b], cl ; ret 0x1e73
0x00000200000c7aeb : add byte ptr [rax + 0x3b], cl ; ret 0x1f77
0x0000020000477b31 : add byte ptr [rax + 0x3b], cl ; ret 0x2377
0x000002000003b8a0 : add byte ptr [rax + 0x3b], cl ; ret 0x2877
0x00000200003e7e98 : add byte ptr [rax + 0x3b], cl ; ret 0x2a73
0x00000200000fb6a7 : add byte ptr [rax + 0x3b], cl ; ret 0x2d77
0x0000020000214f53 : add byte ptr [rax + 0x3b], cl ; ret 0x3474
0x0000020000468712 : add byte ptr [rax + 0x3b], cl ; ret 0x3d74
0x000002000051d5c8 : add byte ptr [rax + 0x3b], cl ; ret 0x470f
0x0000020000478a6e : add byte ptr [rax + 0x3b], cl ; ret 0x4f73
0x000002000019ea5a : add byte ptr [rax + 0x3b], cl ; ret 0x577
0x0000020000431431 : add byte ptr [rax + 0x3b], cl ; ret 0x6777
0x000002000044ac1e : add byte ptr [rax + 0x3b], cl ; ret 0x677e
0x000002000000b973 : add byte ptr [rax + 0x3b], cl ; ret 0x6f75
0x0000020000655d01 : add byte ptr [rax + 0x3b], cl ; ret 0x772
0x000002000004ea43 : add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x0000020000052646 : add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x0000020000030f0c : add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x0000020000046d45 : add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200000b1f23 : add byte ptr [rax + 0x3b], cl ; ret 0x860f
0x0000020000052632 : add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x00000200004acdd5 : add byte ptr [rax + 0x3b], cl ; ret 0x930f
0x00000200003d90b3 : add byte ptr [rax + 0x3b], cl ; ret 0x977
0x00000200000bf02d : add byte ptr [rax + 0x3b], cl ; ret 0x9977
0x00000200005efb50 : add byte ptr [rax + 0x3b], cl ; ret 0xa74
0x0000020000461888 : add byte ptr [rax + 0x3b], cl ; ret 0xb376
0x000002000005131b : add byte ptr [rax + 0x3b], cl ; ret 0xb76
0x000002000061e196 : add byte ptr [rax + 0x3b], cl ; ret 0xb775
0x000002000065fb70 : add byte ptr [rax + 0x3b], cl ; ret 0xb841
0x00000200000292e6 : add byte ptr [rax + 0x3b], cl ; ret 0xbc74
0x00000200000402e8 : add byte ptr [rax + 0x3b], cl ; ret 0xc77
0x00000200004a653f : add byte ptr [rax + 0x3b], cl ; ret 0xdb74
0x000002000009da3e : add byte ptr [rax + 0x3b], cl ; ret 0xe874
0x000002000007f4c9 : add byte ptr [rax + 0x3b], cl ; ret 0xe875
0x000002000041722c : add byte ptr [rax + 0x3b], cl ; ret 0xea75
0x000002000022002b : add byte ptr [rax + 0x3b], cl ; ret 0xeb7c
0x00000200001bb752 : add byte ptr [rax + 0x3b], cl ; ret 0xec75
0x000002000070aa92 : add byte ptr [rax + 0x3b], cl ; ret 0xef75
0x0000020000018ad1 : add byte ptr [rax + 0x3b], cl ; ret 0xf175
0x00000200001bb770 : add byte ptr [rax + 0x3b], cl ; ret 0xf275
0x000002000020b1e6 : add byte ptr [rax + 0x3b], cl ; ret 0xf41
0x00000200001b5f7a : add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x0000020000186a09 : add byte ptr [rax + 0x3b], cl ; ror dword ptr [rax + 0xf], 0x43 ; ret 0xba48
0x000002000051cc0e : add byte ptr [rax + 0x3b], cl ; ror dword ptr [rdi], -0x7b ; ret 0x971
0x0000020000094f6f : add byte ptr [rax + 0x3b], cl ; ror dword ptr [rdi], -0x7d ; ret
0x0000020000090e6a : add byte ptr [rax + 0x3b], cl ; sal byte ptr [rdi + 0x27], 1 ; ret
0x00000200000ddbd1 : add byte ptr [rax + 0x3b], cl ; sal byte ptr [rdi + 4], 1 ; sub rax, rdx ; ret
0x0000020000185017 : add byte ptr [rax + 0x3fffff7], al ; ret 0x8189
0x000002000015b706 : add byte ptr [rax + 0x40c48348], dl ; pop rbp ; ret
0x00000200001b237a : add byte ptr [rax + 0x41202444], cl ; call rax
0x00000200002288ab : add byte ptr [rax + 0x4288e0c9], 1 ; mov byte ptr [rdx], cl ; ret
0x0000020000237bd5 : add byte ptr [rax + 0x448a420f], cl ; ret
0x0000020000426c0b : add byte ptr [rax + 0x47d61f9], al ; mov al, r9b ; ret
0x0000020000055e70 : add byte ptr [rax + 0x48047508], ch ; mov eax, edx ; ret
0x0000020000717886 : add byte ptr [rax + 0x48], al ; add esp, 0x28 ; ret
0x00000200000eec05 : add byte ptr [rax + 0x48], al ; add esp, 0x40 ; pop rbx ; ret
0x000002000009d95a : add byte ptr [rax + 0x48fffff6], al ; add eax, ecx ; ret
0x0000020000445709 : add byte ptr [rax + 0x48fffff7], al ; add esp, 0x28 ; ret
0x0000020000120e99 : add byte ptr [rax + 0x48fffff7], al ; and eax, ecx ; ret
0x000002000009036d : add byte ptr [rax + 0x48fffff7], al ; mov eax, dword ptr [rax] ; ret
0x0000020000232f44 : add byte ptr [rax + 0x49000000], 0x83 ; ret
0x0000020000200352 : add byte ptr [rax + 0x4d000000], 3 ; ret 0x8348
0x000002000057cfa0 : add byte ptr [rax + 0x50c48348], dl ; pop rbp ; ret
0x000002000003716c : add byte ptr [rax + 0x51850f08], ch ; adc rax, qword ptr [rax] ; ret
0x000002000000bea2 : add byte ptr [rax + 0x63], cl ; ret
0x00000200000c99ff : add byte ptr [rax + 0x63], cl ; ret 0x34d
0x00000200004e1880 : add byte ptr [rax + 0x63], cl ; ret 0x8b41
0x0000020000462d0b : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200005240a5 : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0xe802
0x000002000024d180 : add byte ptr [rax + 0x69], cl ; ret
0x0000020000018000 : add byte ptr [rax + 0x6b], cl ; ret 0x3364
0x0000020000488a66 : add byte ptr [rax + 0x72fffffa], al ; ret
0x000002000008fad3 : add byte ptr [rax + 0x75ff0640], al ; or al, 0xf6 ; ret
0x00000200007a1c5d : add byte ptr [rax + 0xb], cl ; ret
0x0000020000567e61 : add byte ptr [rax + 0xb], cl ; ret 0x1bf
0x00000200003d7975 : add byte ptr [rax + 0xb], cl ; ret 0x2348
0x00000200001c84aa : add byte ptr [rax + 0xb], cl ; ret 0x589
0x00000200000cb8c9 : add byte ptr [rax + 0xb], cl ; ret 0x8348
0x00000200003d1e14 : add byte ptr [rax + 0xb], cl ; ret 0x8548
0x00000200000b213d : add byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200003d0323 : add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000002ea68 : add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200000cc68f : add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x00000200003ca31e : add byte ptr [rax + 0xb], cl ; ret 0x8d48
0x000002000024734f : add byte ptr [rax + 0xb], cl ; ret 0x8d4c
0x00000200000b2945 : add byte ptr [rax + 0xb], cl ; ret 0xb48
0x0000020000213a83 : add byte ptr [rax + 0xb], cl ; ret 0xc933
0x0000020000415d7d : add byte ptr [rax + 0xb], cl ; ret 0xd233
0x00000200000b80fb : add byte ptr [rax + 0xb], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0xc148
0x0000020000013605 : add byte ptr [rax + 0xd], cl ; ret 0
0x00000200004329e1 : add byte ptr [rax + 0xeae9], al ; add byte ptr [rcx - 0x39], cl ; ret 0xf000
0x000002000043e3b3 : add byte ptr [rax + 0xf018b02], ch ; ret 0x189
0x000002000019ee27 : add byte ptr [rax + 0xf410842], cl ; mov dh, 0x86 ; ret
0x000002000064d802 : add byte ptr [rax + 0xf542444], cl ; xchg eax, ebp ; ret
0x00000200000ec73a : add byte ptr [rax + 0xf], al ; mov esi, 0xb33a40f6 ; ret
0x00000200005d90f5 : add byte ptr [rax + 0xf], al ; test byte ptr [rbx], al ; ret
0x00000200005d90e1 : add byte ptr [rax + 0xf], al ; test byte ptr [rdi], dl ; ret
0x000002000013ea6b : add byte ptr [rax + 0xf], cl ; fmul dword ptr [r8 - 0x75] ; ret
0x00000200000162dd : add byte ptr [rax + 0xf], cl ; mov edx, 0x820f0ae1 ; ret
0x000002000006b672 : add byte ptr [rax + 0xf], cl ; mov edx, 0x8b4809f3 ; ret
0x000002000004efd1 : add byte ptr [rax + 0xf], cl ; mov edx, 0xf392867 ; xchg eax, edx ; ret 0xf48
0x000002000014e98f : add byte ptr [rax + 0xf], cl ; ret
0x0000020000691846 : add byte ptr [rax + 0xf], cl ; ret 0x45c7
0x000002000003670a : add byte ptr [rax + 0xf], cl ; ret 0x8966
0x00000200001c0e65 : add byte ptr [rax + 0xf], cl ; stosd dword ptr [rdi], eax ; ret 0xd148
0x0000020000094ba4 : add byte ptr [rax + 0xfca60e9], dl ; add bh, bh ; ret
0x0000020000194527 : add byte ptr [rax + 0xffffffa], al ; mov dh, 4 ; ret 0xf024
0x00000200000b5561 : add byte ptr [rax + 0xffffffa], al ; xchg eax, edx ; ret 0xf48
0x0000020000009caa : add byte ptr [rax + 1], bh ; ret
0x0000020000621586 : add byte ptr [rax + 3], cl ; add eax, 0xffcffd5a ; ret
0x00000200000bb6c6 : add byte ptr [rax + 3], cl ; clc ; jmp 0x200000bb693
0x00000200000f70ae : add byte ptr [rax + 3], cl ; int 0xff
0x0000020000028ffa : add byte ptr [rax + 3], cl ; iretd ; mov rdi, qword ptr [rsp + 0x10] ; jmp rcx
0x000002000002622b : add byte ptr [rax + 3], cl ; ret
0x0000020000466743 : add byte ptr [rax + 3], cl ; ret 0x100f
0x000002000051d0a0 : add byte ptr [rax + 3], cl ; ret 0x2349
0x0000020000034db8 : add byte ptr [rax + 3], cl ; ret 0x349
0x00000200000144d1 : add byte ptr [rax + 3], cl ; ret 0x3b48
0x0000020000242207 : add byte ptr [rax + 3], cl ; ret 0x3b49
0x000002000006fcc5 : add byte ptr [rax + 3], cl ; ret 0x3b4c
0x00000200004e6f4b : add byte ptr [rax + 3], cl ; ret 0x3d48
0x00000200004794ee : add byte ptr [rax + 3], cl ; ret 0x8142
0x000002000024c494 : add byte ptr [rax + 3], cl ; ret 0x8348
0x00000200000791f3 : add byte ptr [rax + 3], cl ; ret 0x8948
0x00000200000d9847 : add byte ptr [rax + 3], cl ; ret 0x8b48
0x0000020000667cfb : add byte ptr [rax + 3], cl ; ret 0x8d48
0x0000020000249ce5 : add byte ptr [rax + 3], cl ; ret 0xc183
0x00000200000808d6 : add byte ptr [rax + 3], cl ; ret 0xccc3
0x000002000048a9aa : add byte ptr [rax + 3], cl ; ret 0xdb33
0x000002000077bb09 : add byte ptr [rax + 3], cl ; ret 0xdf8b
0x00000200000f2604 : add byte ptr [rax + 3], cl ; ret 0xe0ff
0x0000020000083450 : add byte ptr [rax + 3], cl ; retf ; jmp rcx
0x000002000062b1e2 : add byte ptr [rax + 3], cl ; ror dword ptr [rbp + rcx*4 + 4], 1 ; ret 0x8545
0x00000200007a74e0 : add byte ptr [rax + 3], cl ; sti ; mov r13d, ebx ; jmp 0x200007a74be
0x0000020000402a40 : add byte ptr [rax + 3], cl ; xlatb ; jmp rdx
0x00000200003de220 : add byte ptr [rax + 5], cl ; adc byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000020000119a72 : add byte ptr [rax + 5], cl ; add byte ptr [rsi], dh ; add byte ptr [rax], al ; ret
0x0000020000157b66 : add byte ptr [rax + 5], cl ; loopne 0x20000157b75 ; add byte ptr [rax], al ; ret
0x000002000021ef70 : add byte ptr [rax + r8*8 - 0x74bbed8c], r8b ; ret 0x8b49
0x000002000021ef35 : add byte ptr [rax + r8*8 - 0x74bbee8c], r8b ; ret 0x8b49
0x00000200006f848b : add byte ptr [rax + rax + 0x30000], bl ; add byte ptr [rax], al ; ret 0
0x000002000021190f : add byte ptr [rax + rax - 0x3fcc3d00], ch ; ret
0x000002000013b1a5 : add byte ptr [rax + rax*8 - 0x3fcc338b], al ; ret
0x000002000008c17d : add byte ptr [rax + rax*8 - 0x743c6bf1], al ; ret
0x000002000021305a : add byte ptr [rax + rax*8 - 0x74b39a8c], al ; ret
0x000002000021306a : add byte ptr [rax + rax*8 - 0x74b3aa8c], al ; ret
0x000002000021307a : add byte ptr [rax + rax*8 - 0x74b3ba8c], al ; ret
0x000002000001f16d : add byte ptr [rax + rax*8 - 0x74b6978c], al ; ret 0xb948
0x000002000049a697 : add byte ptr [rax + rax*8 - 0x74bad98b], al ; ret 0xd233
0x000002000021ef71 : add byte ptr [rax + rax*8 - 0x74bbed8c], al ; ret 0x8b49
0x000002000021ef36 : add byte ptr [rax + rax*8 - 0x74bbee8c], al ; ret 0x8b49
0x0000020000199b6d : add byte ptr [rax + rax*8 - 0x74bef78c], al ; fucompp ; ret
0x0000020000059498 : add byte ptr [rax + rax*8 - 0x8bed58b], al ; ret 0
0x000002000040ec03 : add byte ptr [rax + rax*8 - 0x99af8c], al ; ret
0x00000200001dffbf : add byte ptr [rax + rax], 0 ; ret
0x000002000007a4a4 : add byte ptr [rax + rax], al ; add al, ch ; ret
0x00000200000808d3 : add byte ptr [rax + rax], al ; add byte ptr [rax + 3], cl ; ret 0xccc3
0x00000200006a96d0 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4807
0x00000200000c17e7 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000085d3e : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret
0x00000200000b2a63 : add byte ptr [rax + rax], al ; add byte ptr [rbx], dh ; ret 0x8489
0x00000200005eb95d : add byte ptr [rax + rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x2174
0x00000200001aca7b : add byte ptr [rax + rax], al ; add byte ptr [rsi - 0x7b], ah ; ret
0x00000200004b683e : add byte ptr [rax + rax], al ; add byte ptr [rsi - 0x7b], ah ; ret 0x850f
0x00000200006994de : add byte ptr [rax + rax], al ; je 0x200006994ed ; mov al, 1 ; ret
0x00000200004aa107 : add byte ptr [rax + rax], al ; ret
0x0000020000591c89 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; call 0x2000040deb7
0x00000200004664c5 : add byte ptr [rax + rax], cl ; add byte ptr [rbp - 0x8858a27], al ; ret
0x00000200000e7f88 : add byte ptr [rax + rax], cl ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000608ecd : add byte ptr [rax + rax], dl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200007b4beb : add byte ptr [rax + rbp*8], al ; pop rdx ; ret
0x00000200000ce021 : add byte ptr [rax + rbx*4 - 0x17], dh ; ret
0x000002000016021c : add byte ptr [rax + rcx + 0x48], dh ; mov ecx, ebx ; call 0x2000021c494
0x0000020000200bb1 : add byte ptr [rax + rcx + 0x49], dh ; mov ecx, edi ; call 0x2000007ce18
0x0000020000125e9d : add byte ptr [rax + rcx*4 + 0x43], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000200001a05ae : add byte ptr [rax + rcx*4 + 5], al ; ret 0x1538
0x00000200000e5c66 : add byte ptr [rax + rcx*4 - 0x45], al ; ret
0x00000200000e9c3e : add byte ptr [rax + rcx*4 - 0x49], al ; ret
0x00000200000e7b15 : add byte ptr [rax + rcx*4 - 0x4d], al ; ret 0
0x00000200000ef02a : add byte ptr [rax + rcx*4 - 0x55], al ; ret 0
0x00000200000edbed : add byte ptr [rax + rcx*4 - 0x5d], al ; ret 0
0x000002000001fa0b : add byte ptr [rax + rdx - 0x75], dh ; add dword ptr [rbx], esp ; ret 0xc22b
0x000002000060eaed : add byte ptr [rax + rdx - 1], dh ; ret 0xff48
0x00000200005d99d4 : add byte ptr [rax - 0x110a6317], dl ; push rsi ; ret
0x000002000017f90c : add byte ptr [rax - 0x131ea817], dl ; dec dword ptr [rax - 0x75] ; ret
0x000002000016134c : add byte ptr [rax - 0x157bbe17], dl ; inc dword ptr [rcx - 0x75] ; ret 0x8548
0x00000200005aba17 : add byte ptr [rax - 0x16215d17], dl ; jmp qword ptr [rcx]
0x00000200004e2024 : add byte ptr [rax - 0x164d8bf0], ch ; ret 0xfd0
0x000002000065bcab : add byte ptr [rax - 0x17000009], al ; ret
0x00000200000bc88b : add byte ptr [rax - 0x173474b8], al ; ret
0x00000200005dea5b : add byte ptr [rax - 0x17], al ; jl 0x200005dea7d ; lock dec dword ptr [rax - 0x75] ; ret
0x0000020000162201 : add byte ptr [rax - 0x17], al ; ret
0x0000020000490f9e : add byte ptr [rax - 0x18317], al ; push rsi ; ret
0x0000020000223fa3 : add byte ptr [rax - 0x18], al ; sub ah, bl ; dec dword ptr [rax - 0x75] ; ret
0x00000200000417af : add byte ptr [rax - 0x2d], cl ; loopne 0x20000041804 ; mov dword ptr [rax], eax ; ret
0x00000200003d37a4 : add byte ptr [rax - 0x2d], cl ; loopne 0x200003d37f9 ; add esp, 0x28 ; ret
0x00000200001d1e31 : add byte ptr [rax - 0x2d], cl ; ret 0x3348
0x0000020000414fba : add byte ptr [rax - 0x2f7af0ff], ch ; call qword ptr [rdi]
0x000002000014c5bd : add byte ptr [rax - 0x31], cl ; ret
0x000002000011bc48 : add byte ptr [rax - 0x39], cl ; ret
0x0000020000114649 : add byte ptr [rax - 0x39], cl ; ret 0x3e00
0x00000200001c5bac : add byte ptr [rax - 0x39], cl ; ret 0x6980
0x0000020000794321 : add byte ptr [rax - 0x3b7cb7ff], dh ; pop rax ; ret
0x00000200001137a1 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc2147fb4
0x000002000008ffef : add byte ptr [rax - 0x3f], cl ; call 0x1ffc22c490a
0x000002000009b198 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc22cfab0
0x00000200000febc4 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc23334df
0x0000020000194513 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc23c8d2e
0x00000200000aa712 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc32df02d
0x00000200000d97c1 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc330e0dc
0x00000200003ca6fb : add byte ptr [rax - 0x3f], cl ; call 0x1ffc33fef13
0x0000020000070364 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc3424b8f
0x00000200007a4ecd : add byte ptr [rax - 0x3f], cl ; call 0x1ffc39d97e8
0x000002000003d73f : add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200004d5151 : add byte ptr [rax - 0x3f], cl ; call qword ptr [rcx]
0x00000200000ab719 : add byte ptr [rax - 0x3f], cl ; jmp 0x200000ab731
0x00000200000cca5a : add byte ptr [rax - 0x3f], cl ; jmp 0x200000cca79
0x000002000056372f : add byte ptr [rax - 0x3f], cl ; jmp 0x2000056375a
0x0000020000443011 : add byte ptr [rax - 0x3f], cl ; loop 0x20000443020 ; call 0x2000006c738
0x00000200000fd10e : add byte ptr [rax - 0x3f], cl ; loopne 0x200000fd124 ; ret
0x00000200004b8457 : add byte ptr [rax - 0x3f], cl ; out dx, al ; adc dword ptr [rax - 9], ecx ; ret
0x00000200000442ea : add byte ptr [rax - 0x3fccfc8c], al ; ret
0x000002000000ff56 : add byte ptr [rax - 0x3fcd3cff], dh ; ret
0x00000200000572f7 : add byte ptr [rax - 0x3ffffddb], bh ; ret
0x000002000062c38a : add byte ptr [rax - 0x3ffffdfa], bh ; ret
0x0000020000548b44 : add byte ptr [rax - 0x3ffffe77], bh ; ret
0x000002000053f0bd : add byte ptr [rax - 0x3fffff0f], bh ; ret
0x000002000043ee90 : add byte ptr [rax - 0x3fffff19], bh ; ret
0x0000020000093b1c : add byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200001aaf6c : add byte ptr [rax - 0x3fffff6b], bh ; ret
0x00000200001e4b2a : add byte ptr [rax - 0x3fffff85], bh ; ret
0x000002000062c3fa : add byte ptr [rax - 0x3fffffce], bh ; ret
0x00000200005062fc : add byte ptr [rax - 0x3fffffdd], bh ; jmp 0x200005062cd
0x00000200001ca7e5 : add byte ptr [rax - 0x3fffffde], bh ; ret
0x000002000000c343 : add byte ptr [rax - 0x3ffffff3], bh ; ret
0x00000200000f41c0 : add byte ptr [rax - 0x3ffffffe], bh ; ret
0x0000020000007c3f : add byte ptr [rax - 0x3fffffff], bh ; ret
0x00000200004ff799 : add byte ptr [rax - 0x47], cl ; ret
0x0000020000149ce2 : add byte ptr [rax - 0x48], dl ; add byte ptr [rax], al ; add cl, ch ; push rdx ; ret
0x0000020000149da2 : add byte ptr [rax - 0x48], dl ; clc ; add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; ret 0
0x0000020000149de2 : add byte ptr [rax - 0x48], dl ; cli ; add byte ptr [rax], al ; add cl, ch ; push rdx ; ret 0
0x0000020000149d42 : add byte ptr [rax - 0x48], dl ; cmc ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x0000020000149c42 : add byte ptr [rax - 0x48], dl ; in eax, dx ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000020000149ca2 : add byte ptr [rax - 0x48], dl ; lock add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; ret
0x0000020000149702 : add byte ptr [rax - 0x48], dl ; ret
0x00000200001496e2 : add byte ptr [rax - 0x48], dl ; ret 0
0x0000020000149d82 : add byte ptr [rax - 0x48], dl ; test dword ptr [rax], 0xb2e90000 ; ret 0
0x0000020000233c4b : add byte ptr [rax - 0x48f0ca15], al ; ret
0x00000200001d99bd : add byte ptr [rax - 0x49f02dbb], cl ; ret 0xf41
0x0000020000173de7 : add byte ptr [rax - 0x68da217], dl ; dec dword ptr [rcx + 3] ; ret 0xc148
0x0000020000173d5a : add byte ptr [rax - 0x6911d17], dl ; dec dword ptr [rcx + 3] ; ret 0xc148
0x000002000017381c : add byte ptr [rax - 0x69e6217], dl ; dec dword ptr [rcx + 3] ; ret 0xc148
0x0000020000172ea5 : add byte ptr [rax - 0x6b15817], dl ; inc dword ptr [rcx - 0x75] ; ret
0x000002000003561f : add byte ptr [rax - 0x72000009], al ; outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000002000055901f : add byte ptr [rax - 0x73], cl ; adc eax, 0x13299 ; jmp 0x20000558ff5
0x000002000019e917 : add byte ptr [rax - 0x73], cl ; adc eax, 0x158e01 ; call rax
0x00000200004d55ab : add byte ptr [rax - 0x73], cl ; add al, 0x90 ; ret
0x0000020000157a0d : add byte ptr [rax - 0x73], cl ; add al, 0xc1 ; ret
0x0000020000478d3f : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x3b] ; ret
0x00000200006c4c89 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x3b], ecx ; ret 0x820f
0x0000020000009920 : add byte ptr [rax - 0x73], cl ; add eax, 0x14f248 ; ret
0x0000020000009931 : add byte ptr [rax - 0x73], cl ; add eax, 0x150d57 ; ret
0x00000200000099bc : add byte ptr [rax - 0x73], cl ; add eax, 0x150e5c ; ret
0x0000020000015c7d : add byte ptr [rax - 0x73], cl ; add eax, 0x30f7fb ; ret
0x0000020000697c52 : add byte ptr [rax - 0x73], cl ; add eax, 0xffc60a76 ; ret
0x0000020000697c60 : add byte ptr [rax - 0x73], cl ; add eax, 0xffc60ac0 ; ret
0x0000020000697c44 : add byte ptr [rax - 0x73], cl ; add eax, 0xffc60ac4 ; ret
0x0000020000697c7c : add byte ptr [rax - 0x73], cl ; add eax, 0xffc60ad4 ; ret
0x0000020000697c6e : add byte ptr [rax - 0x73], cl ; add eax, 0xffc60b0a ; ret
0x0000020000697c8a : add byte ptr [rax - 0x73], cl ; add eax, 0xffc60b26 ; ret
0x00000200004f0b15 : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [r9 + 0x3b] ; ret
0x00000200002149f5 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [r8 + 3] ; ret
0x000002000002a0e9 : add byte ptr [rax - 0x73], cl ; and al, 0x20 ; call 0x200000e63b8
0x00000200003db5e1 : add byte ptr [rax - 0x73], cl ; and al, 0x34 ; call 0x20000157888
0x0000020000432848 : add byte ptr [rax - 0x73], cl ; and al, 0x48 ; call 0x2000005f909
0x0000020000793626 : add byte ptr [rax - 0x73], cl ; and al, 0x68 ; call 0x2000005f908
0x00000200005156e6 : add byte ptr [rax - 0x73], cl ; and al, 0x70 ; call 0x2000013fb99
0x000002000014bd4f : add byte ptr [rax - 0x73], cl ; and al, 8 ; ret
0x000002000063bc07 : add byte ptr [rax - 0x73], cl ; and byte ptr [r9 - 0x75], al ; ret
0x00000200000b1732 : add byte ptr [rax - 0x73], cl ; dec dword ptr [r9 + 0x3b] ; ret
0x00000200000a4b5f : add byte ptr [rax - 0x73], cl ; dec qword ptr [rax - 0x75] ; ret 0x48f0
0x000002000007574f : add byte ptr [rax - 0x73], cl ; dec qword ptr [rax - 0x75] ; ret 0x49f0
0x0000020000615c50 : add byte ptr [rax - 0x73], cl ; fucompi st(0) ; ret 0xb2b0
0x00000200004f7c24 : add byte ptr [rax - 0x73], cl ; loopne 0x200004f7c18 ; ret 0x64
0x000002000051ee0c : add byte ptr [rax - 0x73], cl ; loopne 0x2000051ee02 ; jp 0x2000051ee29 ; ret 0x4cff
0x000002000052ca6f : add byte ptr [rax - 0x73], cl ; loopne 0x2000052ca08 ; clc ; call r15
0x00000200001c0ba4 : add byte ptr [rax - 0x73], cl ; mov r8b, 0xe8 ; stosb byte ptr [rdi], al ; ret 0xffff
0x00000200001fbe91 : add byte ptr [rax - 0x73], cl ; nop ; call qword ptr [rcx]
0x00000200005cbfa0 : add byte ptr [rax - 0x73], cl ; or byte ptr [r11], bpl ; ret 0x8b44
0x0000020000717c61 : add byte ptr [rax - 0x73], cl ; or byte ptr [r15], r9b ; xchg eax, esp ; ret
0x000002000070c7cd : add byte ptr [rax - 0x73], cl ; or byte ptr [rdi], r9b ; xchg eax, esp ; ret
0x000002000014e4be : add byte ptr [rax - 0x73], cl ; or eax, 0x7ed5 ; jmp rcx
0x00000200000e3d45 : add byte ptr [rax - 0x73], cl ; outsd dx, dword ptr [rsi] ; add dword ptr [rax - 0x7f], ecx ; jmp qword ptr [rax]
0x00000200000e68b4 : add byte ptr [rax - 0x73], cl ; pop rdi ; add dword ptr [rax - 0x7f], ecx ; jmp qword ptr [rax]
0x00000200000bf76f : add byte ptr [rax - 0x73], cl ; push rbx ; dec dword ptr [rax - 0x75] ; ret
0x000002000077c310 : add byte ptr [rax - 0x73], cl ; push rsi ; or byte ptr [rbp - 0x75], al ; ret
0x00000200001c4bec : add byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x28 ; mov cl, bl ; call rax
0x00000200006a8a17 : add byte ptr [rax - 0x73], cl ; ret
0x00000200000df6d7 : add byte ptr [rax - 0x73], cl ; sbb al, 0xf7 ; rol byte ptr [rbp - 0x75], cl ; ret 0x18b
0x000002000009bcb2 : add byte ptr [rax - 0x73], cl ; sub r8b, r13b ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000200006e8c30 : add byte ptr [rax - 0x73], cl ; xchg eax, ebp ; hlt ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200001acac2 : add byte ptr [rax - 0x73], cl ; xchg eax, edi ; loopne 0x200001acad1 ; add byte ptr [rax], al ; call rax
0x00000200001de60c : add byte ptr [rax - 0x7400000a], al ; dec byte ptr [rax - 0x75] ; ret 0xf41
0x00000200005a6984 : add byte ptr [rax - 0x7421bbf1], al ; ret
0x0000020000527b77 : add byte ptr [rax - 0x7427bbf1], al ; ret
0x00000200000b42f1 : add byte ptr [rax - 0x74b30000], al ; ret 0x8b4d
0x0000020000006e7f : add byte ptr [rax - 0x74b30001], al ; ret
0x00000200000b3c3a : add byte ptr [rax - 0x74b40000], al ; ret 0xbb48
0x00000200000d3fb7 : add byte ptr [rax - 0x74b80000], al ; ret
0x0000020000120f3c : add byte ptr [rax - 0x75000009], al ; add al, 8 ; ret
0x00000200000ed75c : add byte ptr [rax - 0x75], al ; ret
0x000002000016d823 : add byte ptr [rax - 0x75], cl ; adc al, 0xc2 ; jmp 0x2000016d83c
0x00000200000dc67f : add byte ptr [rax - 0x75], cl ; adc byte ptr [r11], bpl ; ret 0x8948
0x0000020000461271 : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax], 0x14 ; add byte ptr [rax], al ; ret
0x0000020000228572 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax - 0x7d] ; ret
0x000002000003e13d : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x00000200004ce586 : add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0x7401
0x0000020000013bef : add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0xf01
0x000002000065f7e9 : add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0xf3f
0x000002000044c9e7 : add byte ptr [rax - 0x75], cl ; adc r8b, bpl ; pop qword ptr [rsi] ; ret
0x0000020000052c65 : add byte ptr [rax - 0x75], cl ; add al, 0x14 ; add byte ptr [rax], al ; ret
0x0000020000043d48 : add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x000002000009d9ea : add byte ptr [rax - 0x75], cl ; add al, 0xc8 ; ret
0x00000200001b5f77 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x0000020000052881 : add byte ptr [rax - 0x75], cl ; add byte ptr [rax], 0x15 ; add byte ptr [rax], al ; ret
0x000002000016f3a1 : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rdx - 0x77] ; ret
0x0000020000008881 : add byte ptr [rax - 0x75], cl ; add dword ptr [rax + 0x3b], ecx ; ret 0x5174
0x000002000078dedb : add byte ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x7d], eax ; ret 0x48f8
0x00000200001c0591 : add byte ptr [rax - 0x75], cl ; add eax, 0x1392b7 ; call rax
0x00000200001be4ef : add byte ptr [rax - 0x75], cl ; add eax, 0x13b359 ; call rax
0x00000200001bc00c : add byte ptr [rax - 0x75], cl ; add eax, 0x13d83c ; call rax
0x000002000017168f : add byte ptr [rax - 0x75], cl ; add eax, 0x1881b9 ; call rax
0x0000020000147d8b : add byte ptr [rax - 0x75], cl ; add eax, 0x260525 ; call rax
0x0000020000584537 : add byte ptr [rax - 0x75], cl ; add eax, 0xffd6eda1 ; call rax
0x000002000059426b : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000047bac4 : add byte ptr [rax - 0x75], cl ; and al, 0x48 ; call 0x200000e7da8
0x00000200004c732d : add byte ptr [rax - 0x75], cl ; and al, 0x48 ; call 0x200000e7da9
0x00000200003dfac5 : add byte ptr [rax - 0x75], cl ; and al, 0x50 ; call 0x2000000c355
0x00000200000c1ec4 : add byte ptr [rax - 0x75], cl ; and byte ptr [r8 + 0x2b], r9b ; ret
0x00000200000e8122 : add byte ptr [rax - 0x75], cl ; and byte ptr [r9 + 0x23], cl ; ret
0x00000200000e44c3 : add byte ptr [rax - 0x75], cl ; and byte ptr [r9 + 0xf], r9b ; scasd eax, dword ptr [rdi] ; ret 0x8348
0x00000200007102ea : add byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x7d], cl ; ret 0x118
0x0000020000041e2c : add byte ptr [rax - 0x75], cl ; and byte ptr [rax], 2 ; add byte ptr [rax], al ; ret
0x0000020000195121 : add byte ptr [rax - 0x75], cl ; call 0x1fff0f11417
0x0000020000072d74 : add byte ptr [rax - 0x75], cl ; call 0x2000fc968cb
0x0000020000072ee8 : add byte ptr [rax - 0x75], cl ; call 0x2000fc96a3f
0x0000020000028b18 : add byte ptr [rax - 0x75], cl ; cmp byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x00000200005a240b : add byte ptr [rax - 0x75], cl ; cmp dh, dh ; ret
0x0000020000009de8 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rdi] ; mov dh, 0x47 ; sbb byte ptr [rdx], bh ; ret 0x3674
0x0000020000526a8c : add byte ptr [rax - 0x75], cl ; enter -0x1418, 0xd ; ret
0x000002000052a44d : add byte ptr [rax - 0x75], cl ; enter 0x2ae8, -0x2c ; ret 0xfff
0x000002000051a346 : add byte ptr [rax - 0x75], cl ; enter 0x31e8, -0x2b ; ret
0x000002000044da3a : add byte ptr [rax - 0x75], cl ; enter 0x51e8, 0x1b ; ret 0x8bff
0x000002000051c015 : add byte ptr [rax - 0x75], cl ; enter 0x72e8, 0x3b ; ret 0x48ff
0x00000200004aa45d : add byte ptr [rax - 0x75], cl ; fdecstp ; ret 0x7520
0x00000200000365f0 : add byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], 1 ; ret
0x000002000055eab5 : add byte ptr [rax - 0x75], cl ; fld1 ; ret 0xbf8d
0x000002000055c403 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000063a8c : add byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0xfff9
0x0000020000544355 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x000002000019ad17 : add byte ptr [rax - 0x75], cl ; inc dword ptr [r9 - 0x48] ; ret 0
0x00000200003d9137 : add byte ptr [rax - 0x75], cl ; int 0xe8
0x000002000049030d : add byte ptr [rax - 0x75], cl ; int 0xff
0x00000200001fb616 : add byte ptr [rax - 0x75], cl ; int1 ; jmp 0x200001fb682
0x00000200006dd30b : add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000009586
0x00000200003df7b9 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000000c97f
0x0000020000439073 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000061bf7
0x0000020000452d0e : add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000075e57
0x00000200004bd33d : add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000e7257
0x00000200004c0bb4 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000e7da7
0x00000200004d4d57 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000fc297
0x0000020000527f5c : add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000148157
0x00000200006c3333 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x200003ff5b2
0x00000200007052be : add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000071159a
0x0000020000238d8e : add byte ptr [rax - 0x75], cl ; iretd ; call rax
0x0000020000030890 : add byte ptr [rax - 0x75], cl ; iretd ; call rbx
0x000002000070931f : add byte ptr [rax - 0x75], cl ; iretd ; call rsi
0x000002000070812e : add byte ptr [rax - 0x75], cl ; iretd ; mov rsi, rax ; call rbx
0x000002000000e905 : add byte ptr [rax - 0x75], cl ; je 0x2000000e936 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000166b7 : add byte ptr [rax - 0x75], cl ; je 0x200000166e8 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000053bd6 : add byte ptr [rax - 0x75], cl ; je 0x20000053c07 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000103fae : add byte ptr [rax - 0x75], cl ; je 0x20000103fdf ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000137b0a : add byte ptr [rax - 0x75], cl ; je 0x20000137b3b ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001d34a1 : add byte ptr [rax - 0x75], cl ; je 0x200001d34d2 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000424ad8 : add byte ptr [rax - 0x75], cl ; je 0x20000424b09 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000479497 : add byte ptr [rax - 0x75], cl ; je 0x200004794c8 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004c1447 : add byte ptr [rax - 0x75], cl ; je 0x200004c1478 ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200004f2a98 : add byte ptr [rax - 0x75], cl ; je 0x200004f2ac9 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000052a46c : add byte ptr [rax - 0x75], cl ; je 0x2000052a49d ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000554a98 : add byte ptr [rax - 0x75], cl ; je 0x20000554ac9 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000010c949 : add byte ptr [rax - 0x75], cl ; jl 0x2000010c97a ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000079c27d : add byte ptr [rax - 0x75], cl ; mov eax, eax ; or dword ptr [rax], eax ; add al, ch ; ret 0xdbb0
0x0000020000080220 : add byte ptr [rax - 0x75], cl ; mov esp, dword ptr [rax] ; add al, 0 ; add al, ch ; ret
0x00000200001dc26a : add byte ptr [rax - 0x75], cl ; mov rbx, rcx ; call qword ptr [rax]
0x000002000001bed9 : add byte ptr [rax - 0x75], cl ; or al, 1 ; add byte ptr [rax], al ; ret
0x00000200005ddd07 : add byte ptr [rax - 0x75], cl ; or al, bpl ; ret
0x00000200004e72ca : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x2b], r9b ; ret
0x000002000015122f : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + rsi*8], spl ; ret
0x000002000007d5eb : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x000002000006bed7 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret
0x000002000001cc74 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x75], r9b ; ret
0x00000200000d074c : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200000f078d : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200006cb7ed : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 1], cl ; ret
0x0000020000069e35 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax], 0x14 ; add byte ptr [rax], al ; ret
0x000002000007f048 : add byte ptr [rax - 0x75], cl ; or byte ptr [rbp - 0x75], al ; ret 0xc149
0x000002000049fc4c : add byte ptr [rax - 0x75], cl ; or byte ptr [rcx + 0x23], cl ; ret
0x0000020000519700 : add byte ptr [rax - 0x75], cl ; or dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x694c
0x00000200002285ce : add byte ptr [rax - 0x75], cl ; or dword ptr [rax - 0x7d], ecx ; ret
0x000002000019dcd6 : add byte ptr [rax - 0x75], cl ; or eax, 0x16568a ; call rax
0x000002000007f5c2 : add byte ptr [rax - 0x75], cl ; or r14b, sil ; ret 0xf1f
0x00000200004ba920 : add byte ptr [rax - 0x75], cl ; or r8b, r13b ; jbe 0x200004ba904 ; ret 0x41ff
0x00000200004bfadf : add byte ptr [rax - 0x75], cl ; pop rax ; sub dh, dh ; ret
0x0000020000432008 : add byte ptr [rax - 0x75], cl ; pop rbp ; loopne 0x2000043200a ; ret
0x00000200000b4044 : add byte ptr [rax - 0x75], cl ; pop rdi ; adc byte ptr [rax - 0x7f], cl ; ret
0x00000200000b5f3a : add byte ptr [rax - 0x75], cl ; pop rsi ; adc byte ptr [rax - 0x7f], cl ; ret
0x00000200001b3a5d : add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov eax, r8d ; ret
0x0000020000057819 : add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200000a7c2b : add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rax - 0x75], cl ; ret 0x43c7
0x000002000066483b : add byte ptr [rax - 0x75], cl ; push rax ; ret
0x00000200005dbee0 : add byte ptr [rax - 0x75], cl ; push rbp ; xor byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200000b05c9 : add byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200001646bd : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000011fc24 : add byte ptr [rax - 0x75], cl ; push rcx ; or bl, ch ; cmc ; xor eax, eax ; ret
0x00000200000164c7 : add byte ptr [rax - 0x75], cl ; push rcx ; sub byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200000a6ca1 : add byte ptr [rax - 0x75], cl ; push rdi ; adc byte ptr [rax - 0x7f], cl ; ret 0x1a0
0x0000020000080ed2 : add byte ptr [rax - 0x75], cl ; push rdi ; or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000200000d97d1 : add byte ptr [rax - 0x75], cl ; push rdi ; sbb byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004ecbd9 : add byte ptr [rax - 0x75], cl ; push rdx ; sbb dh, dh ; ret 0x4801
0x00000200004cecc8 : add byte ptr [rax - 0x75], cl ; push rsi ; adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200000a7420 : add byte ptr [rax - 0x75], cl ; push rsi ; adc byte ptr [rax - 0x7f], cl ; ret 0x1a0
0x00000200000d9a48 : add byte ptr [rax - 0x75], cl ; push rsi ; sbb byte ptr [rax - 0x75], cl ; ret 0xb849
0x00000200000b5316 : add byte ptr [rax - 0x75], cl ; push rsi ; sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000002765 : add byte ptr [rax - 0x75], cl ; ret
0x00000200000e1d75 : add byte ptr [rax - 0x75], cl ; ret 0x17e9
0x000002000024e92b : add byte ptr [rax - 0x75], cl ; ret 0x1ce9
0x00000200000647f9 : add byte ptr [rax - 0x75], cl ; ret 0x2348
0x0000020000451f41 : add byte ptr [rax - 0x75], cl ; ret 0x2349
0x000002000004b91b : add byte ptr [rax - 0x75], cl ; ret 0x234c
0x00000200001e8c08 : add byte ptr [rax - 0x75], cl ; ret 0x25
0x00000200000aa0c7 : add byte ptr [rax - 0x75], cl ; ret 0x2548
0x00000200004d6095 : add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000009fd3f : add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x0000020000102ee0 : add byte ptr [rax - 0x75], cl ; ret 0x2b4c
0x0000020000244629 : add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x000002000078345d : add byte ptr [rax - 0x75], cl ; ret 0x3345
0x000002000006c8c7 : add byte ptr [rax - 0x75], cl ; ret 0x3348
0x00000200000b2e4f : add byte ptr [rax - 0x75], cl ; ret 0x348
0x00000200000db2ab : add byte ptr [rax - 0x75], cl ; ret 0x34c
0x00000200000577f9 : add byte ptr [rax - 0x75], cl ; ret 0x3844
0x0000020000014085 : add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x000002000005d032 : add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x00000200000a2737 : add byte ptr [rax - 0x75], cl ; ret 0x3b4c
0x000002000048736e : add byte ptr [rax - 0x75], cl ; ret 0x3be9
0x0000020000600d41 : add byte ptr [rax - 0x75], cl ; ret 0x4466
0x00000200001d5567 : add byte ptr [rax - 0x75], cl ; ret 0x48c3
0x000002000016f0ab : add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200005071ed : add byte ptr [rax - 0x75], cl ; ret 0x4bf
0x000002000048857c : add byte ptr [rax - 0x75], cl ; ret 0x4cf0
0x0000020000417530 : add byte ptr [rax - 0x75], cl ; ret 0x4df0
0x00000200000b44ba : add byte ptr [rax - 0x75], cl ; ret 0x5189
0x0000020000783857 : add byte ptr [rax - 0x75], cl ; ret 0x5c89
0x000002000004b0a5 : add byte ptr [rax - 0x75], cl ; ret 0x8341
0x000002000001f77a : add byte ptr [rax - 0x75], cl ; ret 0x8348
0x000002000003dee2 : add byte ptr [rax - 0x75], cl ; ret 0x850f
0x00000200000e5529 : add byte ptr [rax - 0x75], cl ; ret 0x8548
0x000002000004811f : add byte ptr [rax - 0x75], cl ; ret 0x8948
0x000002000001c4cb : add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000011f70 : add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x000002000004e347 : add byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x00000200002392ae : add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x00000200007c7363 : add byte ptr [rax - 0x75], cl ; ret 0x8d44
0x00000200006f3828 : add byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200000131df : add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x000002000048739b : add byte ptr [rax - 0x75], cl ; ret 0x97eb
0x00000200004cdfc9 : add byte ptr [rax - 0x75], cl ; ret 0xa8eb
0x0000020000111fba : add byte ptr [rax - 0x75], cl ; ret 0xb849
0x0000020000463588 : add byte ptr [rax - 0x75], cl ; ret 0xb948
0x00000200000164e4 : add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000478709 : add byte ptr [rax - 0x75], cl ; ret 0xc2eb
0x0000020000094605 : add byte ptr [rax - 0x75], cl ; ret 0xc2f6
0x000002000012e443 : add byte ptr [rax - 0x75], cl ; ret 0xc748
0x0000020000488648 : add byte ptr [rax - 0x75], cl ; ret 0xc933
0x00000200004cdfd7 : add byte ptr [rax - 0x75], cl ; ret 0xcaeb
0x00000200001ce712 : add byte ptr [rax - 0x75], cl ; ret 0xccc3
0x000002000002cc7d : add byte ptr [rax - 0x75], cl ; ret 0xd148
0x000002000003e55e : add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200004c89aa : add byte ptr [rax - 0x75], cl ; ret 0xe9eb
0x0000020000070391 : add byte ptr [rax - 0x75], cl ; ret 0xf48
0x0000020000070379 : add byte ptr [rax - 0x75], cl ; ret 0xf49
0x0000020000780e77 : add byte ptr [rax - 0x75], cl ; ret 0xff33
0x0000020000239bc2 : add byte ptr [rax - 0x75], cl ; retf ; call 0x20000045ebe
0x000002000042de3d : add byte ptr [rax - 0x75], cl ; retf ; call 0x20000056a8f
0x0000020000436834 : add byte ptr [rax - 0x75], cl ; retf ; call 0x20000061bf7
0x0000020000466034 : add byte ptr [rax - 0x75], cl ; retf ; call 0x2000008eedb
0x0000020000194cac : add byte ptr [rax - 0x75], cl ; retf ; call 0x200000b0f56
0x00000200004bd2a1 : add byte ptr [rax - 0x75], cl ; retf ; call 0x200000e7da7
0x00000200005df452 : add byte ptr [rax - 0x75], cl ; retf ; call 0x2000020bb6f
0x00000200005a69c1 : add byte ptr [rax - 0x75], cl ; retf ; call 0x20000422c3e
0x00000200004e6db2 : add byte ptr [rax - 0x75], cl ; retf ; call 0x200004e3002
0x0000020000553007 : add byte ptr [rax - 0x75], cl ; retf ; call rax
0x000002000043ff87 : add byte ptr [rax - 0x75], cl ; retf ; call rsi
0x00000200006826f3 : add byte ptr [rax - 0x75], cl ; retf ; mov edi, eax ; call 0x200000be968
0x000002000050a2e3 : add byte ptr [rax - 0x75], cl ; retf ; mov edi, eax ; call 0x200004265d0
0x0000020000109a56 : add byte ptr [rax - 0x75], cl ; rol byte ptr [rcx - 0x7c], 1 ; ret 0x840f
0x000002000010acd8 : add byte ptr [rax - 0x75], cl ; rol byte ptr [rcx - 0x7c], 1 ; ret 0x850f
0x0000020000072ac1 : add byte ptr [rax - 0x75], cl ; ror byte ptr [rax + 0x3b], 1 ; ret
0x0000020000410cad : add byte ptr [rax - 0x75], cl ; ror byte ptr [rbp - 0x77], 1 ; or cl, byte ptr [rax - 0x75] ; ret 0x8348
0x00000200000b5679 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000011e8e8 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], 1 ; iretd ; call rbx
0x00000200003d0109 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200005b5236 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 1], cl ; ret 0x3966
0x000002000070e26f : add byte ptr [rax - 0x75], cl ; sal dword ptr [rbp + 3], 1 ; xor eax, eax ; ret
0x000002000062ae8d : add byte ptr [rax - 0x75], cl ; salc ; call 0x2000024da47
0x00000200005019ec : add byte ptr [rax - 0x75], cl ; salc ; mov rcx, r15 ; call rax
0x0000020000179aa4 : add byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call rbx
0x00000200001ebae0 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x75], cl ; shr eax, cl ; ret
0x000002000004cf06 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x75], r9b ; sbb dh, dh ; ret
0x000002000040a7a0 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x00000200000daa83 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r9 + 0x23], cl ; ret 0x2d48
0x00000200000daa51 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r9 + 0x23], cl ; ret 0x3d48
0x00000200000b36b8 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax + 0x23], r9b ; ret 0x8348
0x00000200000b4c4c : add byte ptr [rax - 0x75], cl ; sbb esi, esi ; ret
0x000002000023312c : add byte ptr [rax - 0x75], cl ; sbb r12b, al ; jrcxz 0x2000023316a ; ret 0xc531
0x000002000007a4a0 : add byte ptr [rax - 0x75], cl ; scasb al, byte ptr [rdi] ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x000002000060f2f8 : add byte ptr [rax - 0x75], cl ; shr cl, 1 ; ret 1
0x00000200005e4b5d : add byte ptr [rax - 0x75], cl ; sub bl, bpl ; add ecx, dword ptr [rax - 0x75] ; ret
0x0000020000052c3d : add byte ptr [rax - 0x75], cl ; sub byte ptr [rax], 0x18 ; add byte ptr [rax], al ; ret
0x0000020000512361 : add byte ptr [rax - 0x75], cl ; sub r8b, 5 ; pop rbp ; ret
0x000002000050241e : add byte ptr [rax - 0x75], cl ; test al, 0xb8 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000002000077ee88 : add byte ptr [rax - 0x75], cl ; test dword ptr [rax - 0x7cffffef], esi ; ret
0x0000020000189eb6 : add byte ptr [rax - 0x75], cl ; xchg eax, ebx ; push -0x9ffffff ; ret 0x7501
0x0000020000189b1e : add byte ptr [rax - 0x75], cl ; xchg eax, esi ; push -0x9ffffff ; ret 0x7501
0x00000200007d0e44 : add byte ptr [rax - 0x75], cl ; xlatb ; call 0x200003f7bc3
0x00000200001a794d : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r10 ; call 0x20000063bc9
0x00000200005f4934 : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r14 ; call rax
0x00000200005f498c : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r15 ; call rax
0x0000020000538eb4 : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, rbx ; call qword ptr [rax]
0x00000200000f2031 : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, rsi ; call 0x2000004e331
0x00000200005f49c7 : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, rsi ; call r10
0x00000200004ae6a4 : add byte ptr [rax - 0x75], cl ; xor al, r13b ; jb 0x200004ae724 ; ret
0x0000020000044648 : add byte ptr [rax - 0x75], cl ; xor byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x00000200004afc98 : add byte ptr [rax - 0x75], cl ; xor r8b, r13b ; jle 0x200004afd02 ; ret
0x000002000061da12 : add byte ptr [rax - 0x76], al ; int 0x44
0x0000020000713a4b : add byte ptr [rax - 0x76], al ; iretd ; mov rbx, rax ; call rsi
0x00000200001d3a47 : add byte ptr [rax - 0x77], cl ; adc dword ptr [rax - 0x75], ecx ; ret 0xd148
0x000002000012af8d : add byte ptr [rax - 0x77], cl ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4818
0x0000020000080cdc : add byte ptr [rax - 0x77], cl ; adc dword ptr [rcx + 3], ecx ; ret 0x894c
0x0000020000157b26 : add byte ptr [rax - 0x77], cl ; adc eax, 0x1abf7a ; ret
0x00000200007990ba : add byte ptr [rax - 0x77], cl ; adc r11b, bpl ; add ecx, dword ptr [rax - 0x75] ; ret
0x0000020000006d86 : add byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x75] ; ret 0x8348
0x000002000060fec7 : add byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret
0x000002000001f351 : add byte ptr [rax - 0x77], cl ; add dword ptr [rbx - 0x3fcc3c3e], ecx ; ret
0x000002000045695a : add byte ptr [rax - 0x77], cl ; add eax, 0x2f18c6 ; ret
0x00000200007990fc : add byte ptr [rax - 0x77], cl ; add ebp, ebx ; ret 0x8b48
0x0000020000424080 : add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000041715c : add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; jmp rdx
0x00000200005222ed : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x20000147f79
0x00000200004caa48 : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x00000200003f75a0 : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r11
0x00000200001a0334 : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call rbx
0x0000020000009d72 : add byte ptr [rax - 0x77], cl ; cmp r11b, bpl ; ret 0xc032
0x00000200003e717a : add byte ptr [rax - 0x77], cl ; jnp 0x1ff8b7e95d8 ; ret
0x00000200004c9394 : add byte ptr [rax - 0x77], cl ; loopne 0x200004c9396 ; ret
0x00000200000bc4a8 : add byte ptr [rax - 0x77], cl ; mov byte ptr [rax + 6], bh ; add byte ptr [rax], al ; ret
0x0000020000008f6c : add byte ptr [rax - 0x77], cl ; mov byte ptr [rax + 7], cl ; add byte ptr [rax], al ; ret
0x0000020000008f87 : add byte ptr [rax - 0x77], cl ; mov cl, byte ptr [rax + 7] ; add byte ptr [rax], al ; ret
0x0000020000695abe : add byte ptr [rax - 0x77], cl ; mov r8d, 0xd6158d48 ; ret 0xffed
0x0000020000027fcf : add byte ptr [rax - 0x77], cl ; or bh, bh ; ret 0x894c
0x00000200000e66aa : add byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x75], r9b ; ret 0x49f0
0x00000200000da05f : add byte ptr [rax - 0x77], cl ; or ecx, dword ptr [rax - 0x7d] ; ret
0x00000200005cfb5f : add byte ptr [rax - 0x77], cl ; pop rax ; adc cl, ch ; ret 0xffec
0x000002000011c820 : add byte ptr [rax - 0x77], cl ; pop rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000020000554ab9 : add byte ptr [rax - 0x77], cl ; push rax ; push rax ; ret
0x00000200000dc5d9 : add byte ptr [rax - 0x77], cl ; push rbp ; mov edi, 0x8b44fa8b ; ret 0x8b48
0x0000020000029295 : add byte ptr [rax - 0x77], cl ; push rcx ; or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200003e1ded : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; loopne 0x200003e1dfd ; add byte ptr [rax], al ; ret
0x00000200004b07b5 : add byte ptr [rax - 0x78], al ; mov ah, 0x24 ; ret 0
0x00000200000ead15 : add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x000002000000ff00 : add byte ptr [rax - 0x79], cl ; or eax, 0x2f6a78 ; ret
0x000002000000bfaa : add byte ptr [rax - 0x7a9a0000], al ; ret 0x1f74
0x000002000040326d : add byte ptr [rax - 0x7a9a0000], al ; ret 0x2874
0x000002000048a595 : add byte ptr [rax - 0x7a9a0000], al ; ret 0x840f
0x0000020000216322 : add byte ptr [rax - 0x7a9a0000], al ; ret 0xd74
0x00000200001e16ea : add byte ptr [rax - 0x7ab80000], al ; ret
0x00000200000b417e : add byte ptr [rax - 0x7ab80000], al ; ret 0x8b48
0x00000200004cc299 : add byte ptr [rax - 0x7ae8fb73], al ; ret 0x840f
0x0000020000659ec7 : add byte ptr [rax - 0x7ae9fb73], al ; ret 0x575
0x00000200005a9110 : add byte ptr [rax - 0x7aecfb73], al ; ret 0xc75
0x000002000078207c : add byte ptr [rax - 0x7aeefb73], al ; ret 0xc75
0x00000200004a6d10 : add byte ptr [rax - 0x7b], al ; ret 0x1475
0x0000020000006a81 : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbx + rbx - 0xa] ; ret
0x00000200004780a0 : add byte ptr [rax - 0x7b], cl ; div byte ptr [rcx + rcx + 0xf] ; mov dh, 0x85 ; ret 6
0x000002000049116f : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rdi] ; test dl, ch ; ret 0x13
0x0000020000128ab2 : add byte ptr [rax - 0x7b], cl ; leave ; je 0x20000128ac0 ; call rcx
0x00000200001c45be : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001c45cc ; call rcx
0x00000200001c464a : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001c465a ; jmp rcx
0x00000200001c46ba : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001c46c8 ; call rcx
0x000002000046ae00 : add byte ptr [rax - 0x7b], cl ; leave ; je 0x2000046ae2d ; call 0x2000009a739
0x00000200005ebdb0 : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200005ebdc3 ; call 0x20000148078
0x000002000001dff8 : add byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000001e00b ; mov eax, dword ptr [rax + 0x24] ; ret
0x000002000007a3d6 : add byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000007a3e3 ; ret
0x00000200000ecde7 : add byte ptr [rax - 0x7b], cl ; leave ; jne 0x200000ecde2 ; xor al, al ; ret
0x00000200007a8f1c : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rsi - 0x75] ; ret
0x00000200001e16ed : add byte ptr [rax - 0x7b], cl ; ret
0x0000020000661d1d : add byte ptr [rax - 0x7b], cl ; ret 0x3074
0x000002000004efa0 : add byte ptr [rax - 0x7b], cl ; ret 0x4274
0x00000200000b4181 : add byte ptr [rax - 0x7b], cl ; ret 0x8b48
0x00000200004e9c70 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000200004bb94a : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3b48
0x00000200000da7e3 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret 5
0x0000020000139226 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000200004c32e8 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x1153
0x0000020000030e82 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret
0x00000200004208c4 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rdi + 0x48], 3 ; ret 0x3b48
0x000002000043c001 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x25], 0x8b ; ret 0x8948
0x000002000048ef70 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x60], 0x8b ; ret 0x3b44
0x000002000002df4a : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 1], cl ; ret
0x000002000070906a : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x41], 0x8a ; leave ; call rax
0x000002000070f6f3 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x8b ; iretd ; call rax
0x000002000022b884 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rcx + 0x48], 0x3b ; ret 0xf48
0x000002000042304e : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rcx + 0x49], 3 ; ret 0x3b48
0x00000200001c466e : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rax + 0x48], cl ; jmp rdx
0x00000200000ffb9f : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rax - 0x76], 0xc1 ; ret
0x00000200001300e0 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rax + 0x33], cl ; leave ; call rdx
0x0000020000580a00 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0xe5ee
0x000002000055d51c : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 9
0x0000020000042646 : add byte ptr [rax - 0x7bf00c06], al ; ret 0
0x0000020000011e22 : add byte ptr [rax - 0x7bf10000], al ; ret 0x151a
0x0000020000471cec : add byte ptr [rax - 0x7c], al ; dec dword ptr [rax + 0xf] ; ret
0x00000200001c50e2 : add byte ptr [rax - 0x7c], al ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000200001c62c2 : add byte ptr [rax - 0x7c], al ; div byte ptr [rsp + rax + 0xb] ; ret
0x000002000068c599 : add byte ptr [rax - 0x7c], al ; push qword ptr [rdx + rax - 1] ; ret
0x000002000004a448 : add byte ptr [rax - 0x7cb63c01], al ; ret
0x00000200004e9f2e : add byte ptr [rax - 0x7cb7b38c], al ; ret 0x4428
0x00000200001e4b11 : add byte ptr [rax - 0x7cb7f38c], ah ; shr dword ptr [rax], -0x7d ; ret 0x75ff
0x00000200007260fa : add byte ptr [rax - 0x7d], cl ; and al, 0x20 ; add al, ch ; ret 0x9f04
0x0000020000461467 : add byte ptr [rax - 0x7d], cl ; and al, 0x20 ; add byte ptr [rax - 0x7f], cl ; ret 0x4170
0x000002000044144c : add byte ptr [rax - 0x7d], cl ; and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000131f80 : add byte ptr [rax - 0x7d], cl ; and al, 0x48 ; dec dword ptr [rax - 0x39] ; ret 0xba00
0x00000200004ba014 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000020000519e8d : add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rsi + 4], esi ; xor ecx, ecx ; call rax
0x0000020000541780 : add byte ptr [rax - 0x7d], cl ; jmp 0x1ffc4098c90
0x000002000042433c : add byte ptr [rax - 0x7d], cl ; jmp 0x1fffc04c69a
0x0000020000214a05 : add byte ptr [rax - 0x7d], cl ; jmp 0x20000214a20
0x0000020000214caf : add byte ptr [rax - 0x7d], cl ; jmp 0x20000214cca
0x000002000042dd09 : add byte ptr [rax - 0x7d], cl ; out 0xfc, al ; call 0x200000564a8
0x0000020000002b9c : add byte ptr [rax - 0x7d], cl ; ret
0x00000200001e81f6 : add byte ptr [rax - 0x7d], cl ; ret 0x2b05
0x0000020000624f30 : add byte ptr [rax - 0x7d], cl ; ret 0x3b08
0x00000200003cd968 : add byte ptr [rax - 0x7d], cl ; ret 0x4102
0x0000020000542153 : add byte ptr [rax - 0x7d], cl ; ret 0x4103
0x00000200007c8ef4 : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000020000652d89 : add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x0000020000676eca : add byte ptr [rax - 0x7d], cl ; ret 0x410c
0x0000020000529531 : add byte ptr [rax - 0x7d], cl ; ret 0x4120
0x000002000067759d : add byte ptr [rax - 0x7d], cl ; ret 0x4125
0x0000020000453892 : add byte ptr [rax - 0x7d], cl ; ret 0x4130
0x000002000065cfc2 : add byte ptr [rax - 0x7d], cl ; ret 0x4131
0x000002000024651b : add byte ptr [rax - 0x7d], cl ; ret 0x4408
0x0000020000476e1e : add byte ptr [rax - 0x7d], cl ; ret 0x4410
0x00000200002466b5 : add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x00000200004826fd : add byte ptr [rax - 0x7d], cl ; ret 0x4520
0x00000200001045cb : add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000003a284 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200006a96d3 : add byte ptr [rax - 0x7d], cl ; ret 0x4807
0x0000020000023dfa : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200007ce657 : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000003a0ff : add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x00000200004dbf71 : add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000003a12a : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000003a147 : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x000002000003a164 : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x00000200001acc67 : add byte ptr [rax - 0x7d], cl ; ret 0x4848
0x000002000008f691 : add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x000002000003a184 : add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x000002000003a1a4 : add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x000002000011943c : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000200006b4c0c : add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000200000d03ef : add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x00000200000709ed : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000002000011ba29 : add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x00000200003eb588 : add byte ptr [rax - 0x7d], cl ; ret 0x4938
0x0000020000798c63 : add byte ptr [rax - 0x7d], cl ; ret 0x4c02
0x000002000012d62c : add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000002000003c5a5 : add byte ptr [rax - 0x7d], cl ; ret 0x4c10
0x000002000003eef9 : add byte ptr [rax - 0x7d], cl ; ret 0x4c30
0x000002000016594d : add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x0000020000242edf : add byte ptr [rax - 0x7d], cl ; ret 0x4cf8
0x00000200007b02bb : add byte ptr [rax - 0x7d], cl ; ret 0x4d08
0x00000200005ec882 : add byte ptr [rax - 0x7d], cl ; ret 0x6604
0x00000200001d3eb6 : add byte ptr [rax - 0x7d], cl ; ret 0x6608
0x0000020000717680 : add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x00000200000f90e6 : add byte ptr [rax - 0x7d], cl ; ret 0xe828
0x00000200004884fd : add byte ptr [rax - 0x7d], cl ; ret 0xe84c
0x00000200003ff53a : add byte ptr [rax - 0x7d], cl ; ret 0xe850
0x00000200000d3858 : add byte ptr [rax - 0x7d], cl ; ret 0xe906
0x000002000010b29e : add byte ptr [rax - 0x7d], cl ; ret 0xe908
0x000002000010b16c : add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000200003eda66 : add byte ptr [rax - 0x7d], cl ; ret 0xeb28
0x000002000045d0b2 : add byte ptr [rax - 0x7d], cl ; ret 0xf02
0x00000200000039ff : add byte ptr [rax - 0x7d], cl ; ret 0xf08
0x00000200000c682f : add byte ptr [rax - 0x7d], cl ; ret 0xf30
0x0000020000476ead : add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x000002000024069c : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x3b ; ret
0x000002000078aaba : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x3b ; ret 0xf472
0x000002000024654d : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x3b ; ret
0x0000020000781263 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x3b ; ret 0xf472
0x00000200004a6727 : add byte ptr [rax - 0x7d], cl ; sar dword ptr [rax], -0x18 ; out dx, eax ; out dx, eax ; ret
0x0000020000408d38 : add byte ptr [rax - 0x7d], cl ; shl byte ptr [rax], 0x48 ; add esp, 0x28 ; ret
0x0000020000486e60 : add byte ptr [rax - 0x7f], cl ; rcr dword ptr [rax + 3], 0 ; add al, ch ; ret
0x0000020000007e1e : add byte ptr [rax - 0x7f], cl ; ret
0x000002000014ea56 : add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x000002000001a29f : add byte ptr [rax - 0x7f], cl ; ret 0x110
0x0000020000544dee : add byte ptr [rax - 0x7f], cl ; ret 0x1e8
0x0000020000544d9e : add byte ptr [rax - 0x7f], cl ; ret 0x1f8
0x000002000041de09 : add byte ptr [rax - 0x7f], cl ; ret 0x240
0x000002000003b27c : add byte ptr [rax - 0x7f], cl ; ret 0x2e00
0x00000200001d3023 : add byte ptr [rax - 0x7f], cl ; ret 0x3600
0x000002000046146d : add byte ptr [rax - 0x7f], cl ; ret 0x4170
0x0000020000050b72 : add byte ptr [rax - 0x7f], cl ; ret 0x500
0x00000200001455da : add byte ptr [rax - 0x7f], cl ; ret 0x7e7
0x00000200004cc4ff : add byte ptr [rax - 0x7f], cl ; ret 0xb0
0x00000200000316fc : add byte ptr [rax - 0x7f], cl ; ret 0xcc
0x00000200004babfb : add byte ptr [rax - 0x7f], cl ; ret 0xfb30
0x00000200000ba621 : add byte ptr [rax - 0x7f], cl ; ret 0xfff
0x00000200004b3df4 : add byte ptr [rax - 0x7f], cl ; rol dword ptr [rax + 0xb], 0 ; add bl, ch ; ret 0x19b8
0x0000020000547ad6 : add byte ptr [rax - 0x7fffffe6], bh ; ret
0x00000200004bbe50 : add byte ptr [rax - 0x80], al ; adc byte ptr [rax + 3], cl ; ret
0x00000200000b73fc : add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x000002000071ad87 : add byte ptr [rax - 0x8b7f7bd], cl ; ret 0xfffc
0x00000200000b8467 : add byte ptr [rax - 0x9000006], al ; ret
0x00000200000b89e2 : add byte ptr [rax - 0x9000006], al ; ret 0x7502
0x00000200000b3c0a : add byte ptr [rax - 0x9000006], al ; ret 0xf04
0x000002000007e456 : add byte ptr [rax - 0x9000009], al ; ret
0x00000200000d4c0d : add byte ptr [rax - 0x900000a], al ; ret
0x00000200000320c3 : add byte ptr [rax - 0x908dc9a], al ; ret
0x00000200000f1d81 : add byte ptr [rax - 0x90ff4b4], al ; ret
0x000002000008a903 : add byte ptr [rax - 0x9dfddb1], al ; ret
0x00000200000adf5c : add byte ptr [rax - 0x9f68ac0], ch ; ret
0x00000200000adf69 : add byte ptr [rax - 0x9f68afe], ch ; ret
0x00000200001a9c39 : add byte ptr [rax - 0xb6a9817], dl ; push rsi ; ret 0x7408
0x00000200006d6911 : add byte ptr [rax - 0xbefc15], al ; ret
0x00000200001a7836 : add byte ptr [rax - 0xc191817], dl ; dec dword ptr [rbp - 0x75] ; ret 0x8b48
0x0000020000197c86 : add byte ptr [rax - 0xea12817], dl ; dec dword ptr [rcx - 0x75] ; ret 0x3b4c
0x0000020000195dec : add byte ptr [rax - 0xeef4417], dl ; push rsi ; ret 0x7401
0x00000200005139c1 : add byte ptr [rax - 0xf000009], al ; inc dword ptr [rax] ; ret
0x00000200001934e1 : add byte ptr [rax - 0xf602017], dl ; dec dword ptr [rax - 0x75] ; ret 0x3b48
0x000002000000eec5 : add byte ptr [rax - 1], cl ; ret
0x00000200006d401a : add byte ptr [rax - 1], cl ; ret 0x4566
0x00000200005a5864 : add byte ptr [rax - 1], cl ; ret 0x4d8b
0x00000200000d6726 : add byte ptr [rax - 1], cl ; ret 0x70e9
0x0000020000036eee : add byte ptr [rax - 1], cl ; ret 0x8d4d
0x00000200005f8bcf : add byte ptr [rax - 1], cl ; ret 0xba0f
0x000002000065aa0a : add byte ptr [rax - 1], cl ; ret 0xc148
0x000002000048893e : add byte ptr [rax - 1], cl ; ret 0xd5eb
0x0000020000213cdf : add byte ptr [rax - 1], cl ; ret 0xe281
0x000002000013cd1b : add byte ptr [rax - 1], cl ; ret 0xff49
0x000002000079fd6a : add byte ptr [rax - 5], al ; idiv bh ; dec dword ptr [rax + 3] ; ret 0x3b49
0x00000200000a26e9 : add byte ptr [rax - 5], al ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x3b4c
0x00000200001ea057 : add byte ptr [rax - 5], al ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8548
0x00000200007a7e6e : add byte ptr [rax - 5], al ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8b48
0x000002000079e974 : add byte ptr [rax - 5], al ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8b4c
0x00000200001fb0d2 : add byte ptr [rax - 5], al ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0xf44
0x000002000012bba3 : add byte ptr [rax - 5], al ; idiv bh ; dec dword ptr [rax - 9] ; ret
0x000002000079e7ea : add byte ptr [rax - 5], al ; idiv bh ; dec dword ptr [rcx - 0x75] ; ret 0x8b4c
0x0000020000013567 : add byte ptr [rax - 5], al ; idiv bh ; jmp qword ptr [rcx]
0x00000200004a1a46 : add byte ptr [rax - 9], cl ; fmul dword ptr [rax - 0x75] ; ret
0x000002000002469f : add byte ptr [rax - 9], cl ; ret
0x0000020000072a09 : add byte ptr [rax - 9], cl ; ret 0xfff
0x00000200000a6ab7 : add byte ptr [rax - 9], cl ; ror byte ptr [rax + 0x23], 1 ; ret 0x2348
0x000002000000f975 : add byte ptr [rax - 9], cl ; ror byte ptr [rax - 0x7b], 1 ; ret 0x850f
0x00000200000a2cb9 : add byte ptr [rax - 9], cl ; ror byte ptr [rcx + 0x23], 1 ; ret 0x2348
0x000002000003d6a6 : add byte ptr [rax - 9], cl ; sal al, 1 ; and qword ptr [r9 + 8], rax ; ret
0x000002000043975b : add byte ptr [rax], 0 ; add al, ch ; in al, dx ; in al, dx ; ret 0x8bff
0x0000020000404720 : add byte ptr [rax], 0 ; add al, ch ; ret
0x00000200000b7838 : add byte ptr [rax], 0 ; add al, ch ; sysenter
0x00000200001f9328 : add byte ptr [rax], 0 ; add bh, bh ; ret
0x00000200006c0d3e : add byte ptr [rax], 0 ; add bh, bh ; ret 0xfa83
0x00000200003de16f : add byte ptr [rax], 0 ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000004c4cd : add byte ptr [rax], 0 ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200000b1f20 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x3b], cl ; ret 0x860f
0x0000020000237bd2 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x448a420f], cl ; ret
0x000002000002ea65 : add byte ptr [rax], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200000cc68c : add byte ptr [rax], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x000002000014e9ba : add byte ptr [rax], 0 ; add byte ptr [rax + 0xf], cl ; ret
0x0000020000466740 : add byte ptr [rax], 0 ; add byte ptr [rax + 3], cl ; ret 0x100f
0x0000020000015413 : add byte ptr [rax], 0 ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000024e4b8 : add byte ptr [rax], 0 ; add byte ptr [rax + 3], cl ; ret 0x3b4c
0x0000020000070740 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000b360a : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x3b4c
0x00000200001052ea : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000af202 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x0000020000417316 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000d032a : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200007a93be : add byte ptr [rax], 0 ; add byte ptr [rbp + 0x2b], cl ; ret 0xde75
0x0000020000200353 : add byte ptr [rax], 0 ; add byte ptr [rbp + 3], cl ; ret 0x8348
0x00000200005e2a54 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x2f1783b6], cl ; ret 0xffa2
0x0000020000115a34 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x75], cl ; ret 0x20e8
0x0000020000115b80 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x75], cl ; ret 0x8348
0x000002000043e0e9 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x0000020000525a1d : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x2648e8d8], cl ; ret 0x85ff
0x000002000000ee9c : add byte ptr [rax], 0 ; add byte ptr [rbx + rcx*4 + 0x45], cl ; add al, ch ; ret
0x0000020000669c63 : add byte ptr [rax], 0 ; add byte ptr [rbx - 0xb3dbac], cl ; ret 0xcae9
0x000002000007f579 : add byte ptr [rax], 0 ; add byte ptr [rbx], al ; ret 0x3344
0x00000200005ed610 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x2b], al ; ret
0x000002000004a558 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x00000200000e8b03 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; ret
0x000002000060751c : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200004e2799 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200000720e3 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rbx ; ret
0x0000020000014160 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; ret
0x00000200000c14d0 : add byte ptr [rax], 0 ; add byte ptr [rcx + 3], cl ; ret 0xba49
0x00000200004826b5 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x75], al ; push rdi ; xor al, 0xf7 ; ret 1
0x000002000018a148 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x9fe9
0x0000020000036405 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000232f45 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000200000483d1 : add byte ptr [rax], 0 ; add byte ptr [rcx - 9], al ; ret
0x000002000054bcab : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x0000020000138842 : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000021fdfb : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x0000020000458282 : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x00000200005d913c : add byte ptr [rax], 0 ; add cl, ch ; wait ; ret
0x000002000008f7b2 : add byte ptr [rax], 0 ; add dh, dh ; ret
0x000002000066a551 : add byte ptr [rax], 0 ; add dh, dh ; ret 0x7410
0x000002000047877a : add byte ptr [rax], 0 ; add dh, dh ; ret 0x7510
0x00000200004ac559 : add byte ptr [rax], 0 ; cmp edx, eax ; cmovb edx, eax ; mov eax, edx ; ret
0x000002000071573f : add byte ptr [rax], 0 ; inc dword ptr [rdx + 0x8060] ; ret
0x00000200004bab41 : add byte ptr [rax], 0 ; je 0x200004bab4c ; ret
0x0000020000715745 : add byte ptr [rax], 0 ; ret
0x0000020000052884 : add byte ptr [rax], 0x15 ; add byte ptr [rax], al ; ret
0x0000020000114ae7 : add byte ptr [rax], 2 ; add byte ptr [rax], al ; ret
0x00000200001e4097 : add byte ptr [rax], ah ; add byte ptr [rax + 0x2b], cl ; rol dword ptr [rbp - 0x75], 1 ; ret 0x3b48
0x0000020000052630 : add byte ptr [rax], ah ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x000002000053742f : add byte ptr [rax], ah ; add byte ptr [rax - 0x75], cl ; ret
0x000002000004ef9e : add byte ptr [rax], ah ; add byte ptr [rax - 0x7b], cl ; ret 0x4274
0x00000200001bc5c3 : add byte ptr [rax], ah ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001bceb9 : add byte ptr [rax], ah ; add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x0000020000070cec : add byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200007d4f57 : add byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x00000200001ea711 : add byte ptr [rax], ah ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200004e5ec8 : add byte ptr [rax], ah ; add sil, sil ; ret
0x000002000007465a : add byte ptr [rax], ah ; jne 0x20000074663 ; ret
0x000002000067a380 : add byte ptr [rax], ah ; ret
0x0000020000608ecc : add byte ptr [rax], al ; adc al, 0 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000709c21 : add byte ptr [rax], al ; adc al, ch ; ret
0x000002000061c254 : add byte ptr [rax], al ; adc byte ptr [rax - 0x173074b8], al ; nop ; ret 0xffb2
0x000002000002bcb7 : add byte ptr [rax], al ; adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000789e4e : add byte ptr [rax], al ; adc byte ptr [rax - 0x7f], cl ; ret 0xe10
0x000002000004cdb3 : add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200000987e9 : add byte ptr [rax], al ; adc byte ptr [rax], al ; jne 0x200000987f6 ; ret
0x00000200000d5179 : add byte ptr [rax], al ; adc byte ptr [rax], al ; jne 0x200000d5186 ; ret
0x00000200003d0763 : add byte ptr [rax], al ; adc byte ptr [rax], al ; ret
0x00000200000ad492 : add byte ptr [rax], al ; adc byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200005b4563 : add byte ptr [rax], al ; adc cl, byte ptr [rdi] ; ret 0x4389
0x0000020000117b8a : add byte ptr [rax], al ; add ah, bh ; ret
0x000002000015119d : add byte ptr [rax], al ; add ah, cl ; ret
0x00000200004aa106 : add byte ptr [rax], al ; add al, 0 ; ret
0x00000200005cd96b : add byte ptr [rax], al ; add al, 0x8b ; ret 0x1ba
0x00000200007b4bea : add byte ptr [rax], al ; add al, 0xe8 ; pop rdx ; ret
0x0000020000027bf7 : add byte ptr [rax], al ; add al, al ; cmp eax, ecx ; ja 0x20000027c08 ; ret
0x000002000054bcd4 : add byte ptr [rax], al ; add al, al ; lea rax, qword ptr [rax + rcx*8] ; ret
0x00000200007d89f5 : add byte ptr [rax], al ; add al, bh ; ret
0x000002000006e140 : add byte ptr [rax], al ; add al, byte ptr [rcx - 0x7c] ; ret 0xbd41
0x0000020000476783 : add byte ptr [rax], al ; add al, ch ; adc eax, 0x8bffc716 ; ret
0x00000200004c4917 : add byte ptr [rax], al ; add al, ch ; add ebx, ecx ; ret 0xe9ff
0x0000020000448416 : add byte ptr [rax], al ; add al, ch ; and bh, al ; ret 0xc6ff
0x00000200004c4e30 : add byte ptr [rax], al ; add al, ch ; call 0x200344c1104
0x0000020000017933 : add byte ptr [rax], al ; add al, ch ; call qword ptr [r11]
0x00000200004484a6 : add byte ptr [rax], al ; add al, ch ; clc ; ret 0xe9ff
0x000002000052206c : add byte ptr [rax], al ; add al, ch ; cld ; pop rsi ; ret 0x3dff
0x00000200004c5cbc : add byte ptr [rax], al ; add al, ch ; cmp al, 0xa6 ; ret 0xbaff
0x000002000015f3e4 : add byte ptr [rax], al ; add al, ch ; hlt ; ret 0xfffe
0x00000200006c8040 : add byte ptr [rax], al ; add al, ch ; in al, dx ; call 0x1ffc3f88052
0x000002000043975c : add byte ptr [rax], al ; add al, ch ; in al, dx ; in al, dx ; ret 0x8bff
0x0000020000521ffb : add byte ptr [rax], al ; add al, ch ; in eax, dx ; ret 0x85ff
0x000002000054166b : add byte ptr [rax], al ; add al, ch ; int 0xc3
0x00000200005bb9a7 : add byte ptr [rax], al ; add al, ch ; int1 ; ret
0x00000200005ac4bd : add byte ptr [rax], al ; add al, ch ; jae 0x200005ac4c3 ; ret 0x44ff
0x000002000051d8f6 : add byte ptr [rax], al ; add al, ch ; jb 0x2000051d8ac ; ret 0x8bff
0x0000020000155539 : add byte ptr [rax], al ; add al, ch ; jg 0x2000015555a ; add byte ptr [rax], al ; nop ; ret
0x0000020000155a39 : add byte ptr [rax], al ; add al, ch ; jg 0x20000155a55 ; add byte ptr [rax], al ; nop ; ret
0x000002000051ed68 : add byte ptr [rax], al ; add al, ch ; loopne 0x2000051ed0b ; ret 0x8bff
0x0000020000522134 : add byte ptr [rax], al ; add al, ch ; mov ah, 0x63 ; ret 0x8bff
0x00000200003ede0e : add byte ptr [rax], al ; add al, ch ; mov ds, word ptr [rbx] ; add byte ptr [rax], al ; jmp 0x200003edde3
0x00000200004770dd : add byte ptr [rax], al ; add al, ch ; mov ebx, 0x8bffc70c ; ret
0x0000020000478e3d : add byte ptr [rax], al ; add al, ch ; mov ebx, 0x8bffdd41 ; ret
0x000002000069d916 : add byte ptr [rax], al ; add al, ch ; mov edx, 0x3bff9da4 ; ret
0x000002000015482c : add byte ptr [rax], al ; add al, ch ; mov word ptr [rdi], ds ; add byte ptr [rax], al ; nop ; ret
0x000002000051c078 : add byte ptr [rax], al ; add al, ch ; nop ; hlt ; ret 0x48ff
0x00000200006ca39f : add byte ptr [rax], al ; add al, ch ; or eax, 0x8bffd94c ; ret
0x0000020000478beb : add byte ptr [rax], al ; add al, ch ; or eax, 0x8bffdd44 ; ret
0x00000200001546ab : add byte ptr [rax], al ; add al, ch ; or eax, 0x90000021 ; ret
0x00000200004055cd : add byte ptr [rax], al ; add al, ch ; or ebp, ecx ; ret
0x0000020000461843 : add byte ptr [rax], al ; add al, ch ; or ecx, ecx ; ret 0xfff
0x0000020000461be1 : add byte ptr [rax], al ; add al, ch ; out -0x43, eax ; ret
0x0000020000524e62 : add byte ptr [rax], al ; add al, ch ; out 0x36, al ; ret 0x8bff
0x00000200004b8d52 : add byte ptr [rax], al ; add al, ch ; out 0xc5, al ; ret 0x8bff
0x000002000051864f : add byte ptr [rax], al ; add al, ch ; pop rbp ; ret 0xfff3
0x0000020000498d3b : add byte ptr [rax], al ; add al, ch ; pop rcx ; ret
0x00000200006f4f5f : add byte ptr [rax], al ; add al, ch ; pop rcx ; ret 0xffa5
0x00000200007bc246 : add byte ptr [rax], al ; add al, ch ; popfq ; ret 0x66ff
0x0000020000052d85 : add byte ptr [rax], al ; add al, ch ; ret
0x000002000079108a : add byte ptr [rax], al ; add al, ch ; ret 0x25e
0x0000020000089c46 : add byte ptr [rax], al ; add al, ch ; ret 0x543
0x000002000070694e : add byte ptr [rax], al ; add al, ch ; ret 0x69
0x000002000006d7e6 : add byte ptr [rax], al ; add al, ch ; ret 0x78b
0x0000020000064f86 : add byte ptr [rax], al ; add al, ch ; ret 0x879
0x000002000062e526 : add byte ptr [rax], al ; add al, ch ; ret 0xb1d1
0x00000200006148ea : add byte ptr [rax], al ; add al, ch ; ret 0xbd0e
0x00000200003e681e : add byte ptr [rax], al ; add al, ch ; ret 0xc1fa
0x00000200004fa076 : add byte ptr [rax], al ; add al, ch ; ret 0xd539
0x0000020000209046 : add byte ptr [rax], al ; add al, ch ; ret 0xe6bc
0x0000020000208556 : add byte ptr [rax], al ; add al, ch ; ret 0xeb5b
0x00000200003e3166 : add byte ptr [rax], al ; add al, ch ; ret 0xf1d
0x000002000019ca26 : add byte ptr [rax], al ; add al, ch ; ret 0xfaec
0x0000020000672ade : add byte ptr [rax], al ; add al, ch ; ret 0xff99
0x0000020000607d59 : add byte ptr [rax], al ; add al, ch ; ret 0xffb0
0x00000200004b2806 : add byte ptr [rax], al ; add al, ch ; ret 0xffc9
0x00000200006c796a : add byte ptr [rax], al ; add al, ch ; ret 0xffef
0x00000200006ca239 : add byte ptr [rax], al ; add al, ch ; ret 0xffff
0x000002000006c106 : add byte ptr [rax], al ; add al, ch ; ret 5
0x0000020000154bb5 : add byte ptr [rax], al ; add al, ch ; sbb dword ptr [rax + rax], 0 ; nop ; ret
0x000002000042d8c9 : add byte ptr [rax], al ; add al, ch ; scasd eax, dword ptr [rdi] ; stc ; ret
0x000002000046bf56 : add byte ptr [rax], al ; add al, ch ; shl bh, cl ; ret 0x48ff
0x00000200001545e7 : add byte ptr [rax], al ; add al, ch ; shl dword ptr [rcx], 1 ; add byte ptr [rax], al ; nop ; ret
0x0000020000155b6b : add byte ptr [rax], al ; add al, ch ; sldt word ptr [r8] ; nop ; ret
0x00000200005ac5ca : add byte ptr [rax], al ; add al, ch ; stc ; ret 0x48ff
0x0000020000155f0e : add byte ptr [rax], al ; add al, ch ; sub cl, byte ptr [rcx] ; add byte ptr [rax], al ; nop ; ret
0x000002000047626b : add byte ptr [rax], al ; add al, ch ; sub eax, 0x8bffc71b ; ret
0x00000200000b7839 : add byte ptr [rax], al ; add al, ch ; sysenter
0x00000200005ac69d : add byte ptr [rax], al ; add al, ch ; xchg eax, ebx ; clc ; ret 0x48ff
0x0000020000631e03 : add byte ptr [rax], al ; add al, ch ; xchg eax, ecx ; ret 0xffec
0x00000200006145f7 : add byte ptr [rax], al ; add al, ch ; xchg eax, r12d ; ret
0x00000200007d88e5 : add byte ptr [rax], al ; add al, cl ; ret 0x407d
0x00000200000b4630 : add byte ptr [rax], al ; add al, dh ; add byte ptr [rbx - 0x75], cl ; ret 0x4808
0x00000200001997f8 : add byte ptr [rax], al ; add al, dh ; dec dword ptr [rax + 0x23] ; ret
0x00000200003d01cd : add byte ptr [rax], al ; add al, dh ; inc dword ptr [r8] ; ret
0x00000200007d890d : add byte ptr [rax], al ; add al, dh ; ret 0x407d
0x00000200006ff476 : add byte ptr [rax], al ; add al, dh ; xadd qword ptr [rcx], rax ; ret
0x00000200007d89d5 : add byte ptr [rax], al ; add al, dl ; ret
0x00000200006ebfb5 : add byte ptr [rax], al ; add al, dl ; ret 0x406e
0x00000200001e16f8 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0xb] ; ret
0x00000200000b3e45 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax - 0x75] ; ret
0x000002000017da5a : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax - 0x75] ; ret 0x2348
0x0000020000013d2e : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000b3f7f : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx - 0x75] ; ret 0xb48
0x0000020000151346 : add byte ptr [rax], al ; add bh, bh ; loop 0x200001513ab ; ret
0x00000200007d647b : add byte ptr [rax], al ; add bh, bh ; or edx, 0xffffffff ; call qword ptr [rax]
0x0000020000004a38 : add byte ptr [rax], al ; add bh, bh ; ret
0x000002000066dd83 : add byte ptr [rax], al ; add bh, bh ; ret 0x163b
0x000002000006a881 : add byte ptr [rax], al ; add bh, bh ; ret 0x349
0x0000020000192275 : add byte ptr [rax], al ; add bh, bh ; ret 0x5189
0x000002000010f2c0 : add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x0000020000201ab0 : add byte ptr [rax], al ; add bh, bh ; ret 0x8948
0x000002000016b199 : add byte ptr [rax], al ; add bh, bh ; ret 0x9489
0x00000200000a8448 : add byte ptr [rax], al ; add bh, bh ; ret 0xb70f
0x000002000068d477 : add byte ptr [rax], al ; add bh, bh ; ret 0xb7e8
0x000002000058f98b : add byte ptr [rax], al ; add bh, bh ; ret 0xb841
0x000002000068cd6f : add byte ptr [rax], al ; add bh, bh ; ret 0xbfe8
0x00000200004475d5 : add byte ptr [rax], al ; add bh, bh ; ret 0xdbeb
0x00000200006bed2e : add byte ptr [rax], al ; add bh, bh ; ret 0xfa83
0x0000020000413b54 : add byte ptr [rax], al ; add bh, dh ; ret
0x0000020000509278 : add byte ptr [rax], al ; add bh, dh ; ret 0x402
0x000002000005a1d2 : add byte ptr [rax], al ; add bh, dh ; ret 0x7000
0x00000200005946ef : add byte ptr [rax], al ; add bh, dh ; ret 0xfffc
0x00000200000b99b1 : add byte ptr [rax], al ; add bh, dh ; ret 0xfffe
0x000002000013c836 : add byte ptr [rax], al ; add bh, dh ; ret 0xffff
0x000002000062c489 : add byte ptr [rax], al ; add bl, 0xb8 ; js 0x2000062c49a ; add al, al ; ret
0x00000200004f9be0 : add byte ptr [rax], al ; add bl, al ; mov eax, 0xc0000001 ; ret
0x000002000070ff2c : add byte ptr [rax], al ; add bl, al ; mov eax, 0xc0000002 ; ret
0x0000020000008dc4 : add byte ptr [rax], al ; add bl, al ; mov eax, 1 ; ret
0x0000020000007ed7 : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000020000007edd : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x00000200006c741e : add byte ptr [rax], al ; add bl, al ; mov eax, 5 ; ret
0x0000020000007036 : add byte ptr [rax], al ; add bl, al ; mov eax, edx ; ret
0x0000020000009cad : add byte ptr [rax], al ; add bl, al ; or eax, 0xffffffff ; ret
0x0000020000032b5f : add byte ptr [rax], al ; add bl, al ; sbb eax, eax ; ret
0x0000020000044d8c : add byte ptr [rax], al ; add bl, al ; xchg dword ptr [rcx + 0x54], edx ; mov eax, edx ; ret
0x0000020000009556 : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x000002000003e2ce : add byte ptr [rax], al ; add bl, bh ; ret
0x000002000014bd6d : add byte ptr [rax], al ; add bl, bl ; loop 0x2000014bd16 ; fnstcw word ptr [rcx] ; ret
0x00000200001a42d0 : add byte ptr [rax], al ; add bl, ch ; adc byte ptr [rax - 0x7d], cl ; jmp qword ptr [rdx]
0x0000020000219d97 : add byte ptr [rax], al ; add bl, ch ; add al, 0x8b ; ret
0x00000200006bb9f6 : add byte ptr [rax], al ; add bl, ch ; add eax, 0x8bf38a40 ; ret
0x00000200006e0343 : add byte ptr [rax], al ; add bl, ch ; add eax, dword ptr [rcx - 0x75] ; ret 0x4489
0x00000200006e02f4 : add byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x00000200003f9fb9 : add byte ptr [rax], al ; add bl, ch ; fisttp dword ptr [rax - 0x7d] ; ret 0x4808
0x00000200001d793b : add byte ptr [rax], al ; add bl, ch ; fisttp word ptr [rax - 0x7d] ; ret
0x000002000013c8c0 : add byte ptr [rax], al ; add bl, ch ; mov cl, 0xf7 ; ret 0xffff
0x000002000022fd6d : add byte ptr [rax], al ; add bl, ch ; mov word ptr [rax - 0x75], cs ; ret 0xc148
0x000002000024b3f3 : add byte ptr [rax], al ; add bl, ch ; or byte ptr [rbx], cl ; ret 0x8789
0x0000020000196019 : add byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rcx + 0x23] ; ret
0x000002000007e73d : add byte ptr [rax], al ; add bl, ch ; ret
0x000002000005e07c : add byte ptr [rax], al ; add bl, ch ; ret 0x8b48
0x0000020000052d79 : add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x00000200003fe9ff : add byte ptr [rax], al ; add bl, ch ; ret 0xc033
0x000002000003d634 : add byte ptr [rax], al ; add bl, ch ; ret 0xcccc
0x0000020000027502 : add byte ptr [rax], al ; add bl, ch ; ret 0xdb8
0x00000200003dd47d : add byte ptr [rax], al ; add bl, ch ; sub al, 0x8b ; ret
0x000002000061c4fa : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rcx + 0x20], mm0 ; ret
0x00000200000f210b : add byte ptr [rax], al ; add bl, dl ; loop 0x200000f210d ; ret 0xf15
0x00000200001cb0be : add byte ptr [rax], al ; add bl, dl ; loop 0x200001cb0c0 ; ret 0x7432
0x00000200004bab3e : add byte ptr [rax], al ; add byte ptr [rax + 0x1740000], al ; ret
0x0000020000111bd5 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x1c7
0x00000200001d84c3 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x234c
0x0000020000032f83 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x3348
0x0000020000032db7 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x344
0x000002000004ca63 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8b44
0x00000200001e8f8b : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8b49
0x00000200000799e1 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x000002000046da0d : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0xb948
0x00000200000d8ed0 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x3349
0x000002000070ae71 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; fimul word ptr [rax - 0x7d] ; ret
0x0000020000014d37 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; fmul dword ptr [rax - 0x75] ; ret
0x000002000009d0fd : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200005acfe1 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x34c
0x00000200004c2de9 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000048680 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x4466
0x00000200001c8207 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x8b44
0x00000200000defdf : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ror dword ptr [rcx - 0x75], 1 ; ret 0xf748
0x00000200000b2057 : add byte ptr [rax], al ; add byte ptr [rax + 0x31], cl ; add dword ptr [rbp + 0x3b], ecx ; ret
0x00000200004bfe36 : add byte ptr [rax], al ; add byte ptr [rax + 0x32], al ; push rsi ; ret 0xf02
0x000002000000802d : add byte ptr [rax], al ; add byte ptr [rax + 0x33], al ; ret 0xd233
0x000002000008e41f : add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret
0x000002000004b945 : add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret 0x2348
0x00000200000b238e : add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret 0xba48
0x00000200005f428d : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; enter -0x298d, -0x17 ; ret
0x00000200000c4e96 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000067b294 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x1e73
0x00000200003e7e96 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x2a73
0x0000020000214f51 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x3474
0x0000020000468710 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x3d74
0x0000020000655cff : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x772
0x000002000004ea41 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x000002000065aac5 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x000002000004c4ce : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200000b1f21 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x860f
0x00000200006e104a : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x000002000065e985 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x977
0x0000020000461886 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xb376
0x000002000065fb6e : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xb841
0x000002000020b1e4 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xf41
0x00000200004b0857 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x00000200001b2378 : add byte ptr [rax], al ; add byte ptr [rax + 0x41202444], cl ; call rax
0x0000020000237bd3 : add byte ptr [rax], al ; add byte ptr [rax + 0x448a420f], cl ; ret
0x0000020000717884 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], al ; add esp, 0x28 ; ret
0x0000020000473016 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000200005240a3 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0xe802
0x0000020000488a64 : add byte ptr [rax], al ; add byte ptr [rax + 0x72fffffa], al ; ret
0x00000200007a1c5b : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret
0x00000200003d1e12 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8548
0x000002000002ea66 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200000cc68d : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x00000200003ca31c : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8d48
0x0000020000415d7b : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0xd233
0x00000200000b80f9 : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0xc148
0x000002000064d800 : add byte ptr [rax], al ; add byte ptr [rax + 0xf542444], cl ; xchg eax, ebp ; ret
0x00000200005d90f3 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], al ; test byte ptr [rbx], al ; ret
0x00000200005d90df : add byte ptr [rax], al ; add byte ptr [rax + 0xf], al ; test byte ptr [rdi], dl ; ret
0x000002000014e98d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x0000020000691844 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x45c7
0x00000200000b555f : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffa], al ; xchg eax, edx ; ret 0xf48
0x0000020000048078 : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000200001da04c : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000466741 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x100f
0x0000020000034db6 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x349
0x00000200000144cf : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200000a5722 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b4c
0x0000020000434fcc : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8948
0x00000200000d9845 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8b48
0x0000020000667cf9 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8d48
0x000002000077bb07 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0xdf8b
0x000002000062b1e0 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ror dword ptr [rbp + rcx*4 + 4], 1 ; ret 0x8545
0x000002000008c17b : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x743c6bf1], al ; ret
0x000002000049a695 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x74bad98b], al ; ret 0xd233
0x0000020000059496 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x8bed58b], al ; ret 0
0x00000200007b4be9 : add byte ptr [rax], al ; add byte ptr [rax + rbp*8], al ; pop rdx ; ret
0x0000020000125e9b : add byte ptr [rax], al ; add byte ptr [rax + rcx*4 + 0x43], al ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000200000eb10f : add byte ptr [rax], al ; add byte ptr [rax + rcx*4 - 0x45], al ; ret
0x00000200000ef028 : add byte ptr [rax], al ; add byte ptr [rax + rcx*4 - 0x55], al ; ret 0
0x00000200000bc889 : add byte ptr [rax], al ; add byte ptr [rax - 0x173474b8], al ; ret
0x00000200000417ad : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loopne 0x20000041806 ; mov dword ptr [rax], eax ; ret
0x000002000014c5bb : add byte ptr [rax], al ; add byte ptr [rax - 0x31], cl ; ret
0x00000200001a6067 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000200005f5424 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x6980
0x000002000008ffed : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc22c490c
0x00000200000febc2 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc23334e1
0x0000020000194511 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc23c8d30
0x00000200003ca6f9 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc33fef15
0x00000200000ad0d2 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200004d514f : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rcx]
0x000002000053f0bb : add byte ptr [rax], al ; add byte ptr [rax - 0x3fffff0f], bh ; ret
0x000002000043ee8e : add byte ptr [rax], al ; add byte ptr [rax - 0x3fffff19], bh ; ret
0x00000200001e4b28 : add byte ptr [rax], al ; add byte ptr [rax - 0x3fffff85], bh ; ret
0x000002000062c3f8 : add byte ptr [rax], al ; add byte ptr [rax - 0x3fffffce], bh ; ret
0x000002000000c341 : add byte ptr [rax], al ; add byte ptr [rax - 0x3ffffff3], bh ; ret
0x00000200000f41be : add byte ptr [rax], al ; add byte ptr [rax - 0x3ffffffe], bh ; ret
0x00000200001116b1 : add byte ptr [rax], al ; add byte ptr [rax - 0x3fffffff], bh ; ret
0x0000020000214c9d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [r8 + 3] ; ret
0x000002000014bd4d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; and al, 8 ; ret
0x00000200000a4b5d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; dec qword ptr [rax - 0x75] ; ret 0x48f0
0x0000020000615c4e : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; fucompi st(0) ; ret 0xb2b0
0x00000200005cbf9e : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or byte ptr [r11], bpl ; ret 0x8b44
0x000002000070c7cb : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or byte ptr [rdi], r9b ; xchg eax, esp ; ret
0x00000200000bf76d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; push rbx ; dec dword ptr [rax - 0x75] ; ret
0x00000200000b42ef : add byte ptr [rax], al ; add byte ptr [rax - 0x74b30000], al ; ret 0x8b4d
0x0000020000006e7d : add byte ptr [rax], al ; add byte ptr [rax - 0x74b30001], al ; ret
0x00000200000b3c38 : add byte ptr [rax], al ; add byte ptr [rax - 0x74b40000], al ; ret 0xbb48
0x00000200000d3fb5 : add byte ptr [rax], al ; add byte ptr [rax - 0x74b80000], al ; ret
0x00000200000dc67d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r11], bpl ; ret 0x8948
0x000002000022863b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax - 0x7d] ; ret
0x00000200001b5f75 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x0000020000072d72 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x2000fc968cd
0x0000020000072ee6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; call 0x2000fc96a41
0x00000200005a2409 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp dh, dh ; ret
0x000002000055c401 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret
0x00000200003d9135 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; int 0xe8
0x00000200006dd309 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000009588
0x0000020000452d0c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000075e59
0x00000200004c0bb2 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000e7da9
0x00000200004d4d55 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000fc299
0x0000020000527f5a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000148159
0x00000200007052bc : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000071159c
0x00000200004e72c8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x2b], r9b ; ret
0x000002000015122d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + rsi*8], spl ; ret
0x000002000007d6be : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200000f078b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200006cb7eb : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 1], cl ; ret
0x000002000007f046 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rbp - 0x75], al ; ret 0xc149
0x000002000007f5c0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or r14b, sil ; ret 0xf1f
0x0000020000057817 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200000a7c29 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or byte ptr [rax - 0x75], cl ; ret 0x43c7
0x00000200005dbede : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; xor byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200001646bb : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200000164c5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rcx ; sub byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200004cecc6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rsi ; adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000002763 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000e1d73 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x17e9
0x000002000024e929 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x1ce9
0x00000200000647f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2348
0x000002000004b919 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x234c
0x00000200001e8c06 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x25
0x00000200004d6093 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000018918d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x0000020000102ede : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b4c
0x00000200000b2e4d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x348
0x00000200000db2a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x34c
0x00000200000577f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x3844
0x000002000005d030 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x00000200000af075 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x3b4c
0x0000020000600d3f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x4466
0x0000020000668cab : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x4cf0
0x00000200000b576b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x00000200000b318b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000af203 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x00000200002392ac : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x00000200007c7361 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8d44
0x00000200000247a7 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000059d6f1 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc933
0x00000200001ce710 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xccc3
0x000002000019fea6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd148
0x000002000012434c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x0000020000070377 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xf49
0x0000020000239bc0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call 0x20000045ec0
0x000002000042de3b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call 0x20000056a91
0x00000200005a69bf : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call 0x20000422c40
0x00000200004e6db0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200004e3004
0x0000020000553005 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call rax
0x0000020000109a54 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; rol byte ptr [rcx - 0x7c], 1 ; ret 0x840f
0x000002000010acd6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; rol byte ptr [rcx - 0x7c], 1 ; ret 0x850f
0x00000200005b5234 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 1], cl ; ret 0x3966
0x000002000040a79e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x00000200005f4932 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r14 ; call rax
0x00000200005f498a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r15 ; call rax
0x000002000012af8b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4818
0x00000200007990fa : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add ebp, ebx ; ret 0x8b48
0x00000200004caa46 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x00000200003f759e : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r11
0x00000200001a0332 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call rbx
0x00000200000da05d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; or ecx, dword ptr [rax - 0x7d] ; ret
0x00000200005cfb5d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; pop rax ; adc cl, ch ; ret 0xffec
0x00000200001e16e8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab80000], al ; ret
0x00000200000b417c : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab80000], al ; ret 0x8b48
0x00000200004cc297 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ae8fb73], al ; ret 0x840f
0x0000020000659ec5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ae9fb73], al ; ret 0x575
0x00000200005a910e : add byte ptr [rax], al ; add byte ptr [rax - 0x7aecfb73], al ; ret 0xc75
0x000002000078207a : add byte ptr [rax], al ; add byte ptr [rax - 0x7aeefb73], al ; ret 0xc75
0x00000200004a6d0e : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], al ; ret 0x1475
0x0000020000128ab0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x20000128ac2 ; call rcx
0x00000200001c45bc : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001c45ce ; call rcx
0x00000200001c4648 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001c465c ; jmp rcx
0x00000200001c46b8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001c46ca ; call rcx
0x00000200007a8f1a : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rsi - 0x75] ; ret
0x00000200004c32e6 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0x1153
0x000002000043bfff : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x25], 0x8b ; ret 0x8948
0x000002000048ef6e : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x60], 0x8b ; ret 0x3b44
0x000002000042bf01 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 1], cl ; ret
0x00000200001c466c : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rax + 0x48], cl ; jmp rdx
0x00000200005809fe : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0xe5ee
0x000002000055d51a : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 9
0x000002000004a446 : add byte ptr [rax], al ; add byte ptr [rax - 0x7cb63c01], al ; ret
0x00000200004e9f2c : add byte ptr [rax], al ; add byte ptr [rax - 0x7cb7b38c], al ; ret 0x4428
0x0000020000214cad : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; jmp 0x20000214ccc
0x000002000001d83f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001e81f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x2b05
0x00000200006d7bf0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4102
0x00000200007c8ef2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000020000652da8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x0000020000676ec8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x410c
0x000002000052952f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4120
0x000002000067759b : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4125
0x000002000065cfc0 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4131
0x0000020000246519 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4408
0x0000020000476e1c : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4410
0x00000200002466b3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x00000200001045c9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000003a282 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000020000418c4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000003a0fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x000002000003a128 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000003a145 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x000002000003a162 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000002000003a182 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x000002000003a1a2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x000002000011943a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000200006b4c0a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x000002000017d33a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x000002000066be58 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x000002000012d62a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000200004b839a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x0000020000242edd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4cf8
0x00000200007b02b9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4d08
0x00000200001d3eb4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6608
0x00000200003ff538 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe850
0x00000200000c682d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf30
0x0000020000476eab : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x000002000009bdfb : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000001a29d : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x110
0x000002000003b27a : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x2e00
0x0000020000050b70 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x500
0x00000200004cc4fd : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xb0
0x00000200000316fa : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xcc
0x000002000024af30 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xfff
0x00000200000b8465 : add byte ptr [rax], al ; add byte ptr [rax - 0x9000006], al ; ret
0x00000200000b89e0 : add byte ptr [rax], al ; add byte ptr [rax - 0x9000006], al ; ret 0x7502
0x00000200000b3c08 : add byte ptr [rax], al ; add byte ptr [rax - 0x9000006], al ; ret 0xf04
0x00000200000d4c0b : add byte ptr [rax], al ; add byte ptr [rax - 0x900000a], al ; ret
0x00000200000f1d7f : add byte ptr [rax], al ; add byte ptr [rax - 0x90ff4b4], al ; ret
0x0000020000014844 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x00000200006d4018 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x4566
0x00000200005a5862 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x4d8b
0x000002000048893c : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xd5eb
0x000002000013cd19 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff49
0x0000020000013565 : add byte ptr [rax], al ; add byte ptr [rax - 5], al ; idiv bh ; jmp qword ptr [rcx]
0x000002000002469d : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x00000200004e78ab : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret 0xfff
0x000002000002ea63 : add byte ptr [rax], al ; add byte ptr [rax], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200000cc68a : add byte ptr [rax], al ; add byte ptr [rax], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x0000020000015411 : add byte ptr [rax], al ; add byte ptr [rax], 0 ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000024e4b6 : add byte ptr [rax], al ; add byte ptr [rax], 0 ; add byte ptr [rax + 3], cl ; ret 0x3b4c
0x00000200000c14ce : add byte ptr [rax], al ; add byte ptr [rax], 0 ; add byte ptr [rcx + 3], cl ; ret 0xba49
0x00000200004bab3f : add byte ptr [rax], al ; add byte ptr [rax], 0 ; je 0x200004bab4e ; ret
0x000002000004ef9c : add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rax - 0x7b], cl ; ret 0x4274
0x0000020000070cea : add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000004cdb1 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200000987e7 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; jne 0x200000987f8 ; ret
0x00000200000d5177 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; jne 0x200000d5188 ; ret
0x000002000015119b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, cl ; ret
0x00000200007d89f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret
0x000002000006e13e : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rcx - 0x7c] ; ret 0xbd41
0x00000200001997f6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; dec dword ptr [rax + 0x23] ; ret
0x00000200006ebfb3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x406e
0x00000200001e16f6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0xb] ; ret
0x00000200000b3e43 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax - 0x75] ; ret
0x000002000017da58 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax - 0x75] ; ret 0x2348
0x0000020000013d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000b3f7d : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx - 0x75] ; ret 0xb48
0x00000200000c10eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000014e98b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000200000148f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200000dd09b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000b2e4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x348
0x0000020000151b8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000004ef9a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rax - 0x7b], cl ; ret 0x4274
0x00000200007d89f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, bh ; ret
0x000002000006e13c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rcx - 0x7c] ; ret 0xbd41
0x00000200007d89f0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret
0x00000200007d88d8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x407d
0x00000200006f8468 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000200000b5b51 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7b] ; ret 0x2675
0x00000200000a655c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8948
0x00000200007d89f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret
0x00000200007d88da : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x407d
0x00000200006eb1d2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200006f846a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000200000a0607 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000024c5bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; sar bh, 0xc0 ; ret
0x00000200000528db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xff41
0x00000200000e6d6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0xff41
0x0000020000064d9d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4865
0x000002000065aa04 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], bl ; add byte ptr [rax - 1], cl ; ret 0xc148
0x00000200000b2137 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; add byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200000b5b53 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7b] ; ret 0x2675
0x0000020000012c6c : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x00000200000a655e : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8948
0x00000200006aa617 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; or byte ptr [rdi], 0x85 ; ret
0x000002000045693c : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; ret
0x000002000016b304 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rcx, r13 ; call 0x20000157549
0x0000020000454dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000007455c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000a0d33 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000057f4cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001fd0f7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000011e9a1 : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsi
0x00000200007d89f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; clc ; ret
0x00000200000b8464 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dl, 0xff ; push rsi ; ret
0x00000200000b89df : add byte ptr [rax], al ; add byte ptr [rax], al ; cmp dl, 0xff ; push rsi ; ret 0x7502
0x00000200007d88dc : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x407d
0x000002000014bd6c : add byte ptr [rax], al ; add byte ptr [rax], al ; fnclex ; wait ; fnstcw word ptr [rcx] ; ret
0x0000020000129905 : add byte ptr [rax], al ; add byte ptr [rax], al ; inc dword ptr [rbx] ; add byte ptr [rdx], dh ; ret 0x724
0x0000020000147b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000002000014bd4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rsp + 8] ; ret
0x00000200000b462f : add byte ptr [rax], al ; add byte ptr [rax], al ; lock add byte ptr [rbx - 0x75], cl ; ret 0x4808
0x00000200001997f7 : add byte ptr [rax], al ; add byte ptr [rax], al ; lock dec dword ptr [rax + 0x23] ; ret
0x00000200003d01cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lock inc dword ptr [r8] ; ret
0x0000020000152bb1 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000020000150c6c : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000200000f1d7e : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rbx + rcx - 0x10], 0xf6 ; ret
0x000002000015193e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000115507 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200006f846c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000200007e0c74 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7e0d
0x00000200007e1314 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7e13
0x00000200007e0fc4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7e15
0x0000020000056ec4 : add byte ptr [rax], al ; add byte ptr [rax], al ; seta al ; ret
0x00000200000b68b0 : add byte ptr [rax], al ; add byte ptr [rax], al ; sete al ; ret
0x000002000003fc57 : add byte ptr [rax], al ; add byte ptr [rax], al ; setne al ; ret
0x00000200000b2138 : add byte ptr [rax], al ; add byte ptr [rax], al ; str word ptr [rax + 0xb] ; ret 0x8948
0x00000200000a7990 : add byte ptr [rax], al ; add byte ptr [rax], al ; str word ptr [rbx - 0x75] ; push rsp ; ret 0xc708
0x000002000046da8a : add byte ptr [rax], al ; add byte ptr [rax], al ; xor byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000d4c0a : add byte ptr [rax], al ; add byte ptr [rax], al ; xor dh, 0xff ; push rsi ; ret
0x000002000024c5bc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; inc eax ; ret
0x00000200005697fe : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000015d88a : add byte ptr [rax], al ; add byte ptr [rax], bl ; add rsp, 0x40 ; pop rbp ; ret
0x00000200007d886d : add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x407d
0x000002000061014d : add byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x000002000046da09 : add byte ptr [rax], al ; add byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0xb948
0x00000200007d8935 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret
0x00000200000a0609 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000987e8 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rbp + 1], dh ; ret
0x0000020000089dd3 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x2fe8
0x0000020000421938 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10880fff], al ; ret 0x17
0x00000200000c3d0f : add byte ptr [rax], al ; add byte ptr [rbp + 0x1d], dh ; ret
0x00000200007a3197 : add byte ptr [rax], al ; add byte ptr [rbp + 0x23], cl ; ret
0x000002000068abc4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], al ; ret
0x0000020000152aa9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], cl ; ret 0x8b4d
0x00000200007a93bf : add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], cl ; ret 0xde75
0x0000020000665e76 : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; dec dword ptr [rbp + 0x3b] ; ret
0x00000200004b828f : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; rol byte ptr [rcx - 0x76], cl ; ret
0x0000020000246744 : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], cl ; ret 0x2c6
0x000002000079dae8 : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x77], 5 ; ret
0x00000200001022c1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call r9
0x00000200001d26ed : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret
0x00000200001ea664 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret 0x5175
0x00000200000b43ab : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], cl ; ret
0x00000200007d29dc : add byte ptr [rax], al ; add byte ptr [rbp + 0x49e85a4a], cl ; ret
0x000002000002cace : add byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x000002000065222b : add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; in eax, -0x75 ; ret 0x8941
0x0000020000200354 : add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; ret 0x8348
0x0000020000605b6a : add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; ret 0xd285
0x0000020000455aac : add byte ptr [rax], al ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x000002000062680a : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; call 0x2000024da48
0x0000020000154ec3 : add byte ptr [rax], al ; add byte ptr [rbp + rax - 0x18], dh ; ret
0x00000200004d5128 : add byte ptr [rax], al ; add byte ptr [rbp + rbx - 0x75], dh ; ret 0xd0f7
0x0000020000171a97 : add byte ptr [rax], al ; add byte ptr [rbp + rbx - 0x75], dh ; ret 0xe8c1
0x000002000010786b : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x1c], al ; or eax, dword ptr [rcx - 0x75] ; ret
0x00000200003d2871 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; test esp, edi ; ret 0x44ff
0x00000200003db292 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; pop rbp ; ret 0x8bff
0x00000200006f4d08 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret
0x00000200005c5fc0 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x41], al ; dec dword ptr [rax - 0x7d] ; ret 0x4810
0x00000200001e9022 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x42], al ; add ebp, eax ; ret 0xeb46
0x00000200004004cb : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x40 ; call r10
0x00000200000807cf : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4a], al ; ret 0x8d48
0x00000200000dbe29 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0xc], cl ; ret 0xba49
0x00000200007c5cb7 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0xd], cl ; call rax
0x0000020000189181 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 4], cl ; ret 0x8b48
0x0000020000678ab0 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; call rdx
0x00000200005e2a55 : add byte ptr [rax], al ; add byte ptr [rbp - 0x2f1783b6], cl ; ret 0xffa2
0x00000200004aa6ca : add byte ptr [rax], al ; add byte ptr [rbp - 0x33], dh ; jmp 0x200004aa699
0x00000200003f3b47 : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; clc ; call rsi
0x000002000045ddd3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; cli ; call rsi
0x00000200006d95a3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; cmc ; call rsi
0x00000200006dac4a : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; stc ; call rdi
0x0000020000150f8f : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], cl ; or al, 0x91 ; jmp r9
0x000002000068ca3e : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], cl ; pop rcx ; dec byte ptr [rax + 0x63] ; ret 0x8d4e
0x000002000001ff46 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74bb00bd], cl ; ret 0x4404
0x00000200004121b3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74bbfbb0], cl ; ret 0x8b48
0x00000200003e4066 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74d28b2e], al ; ret 0xffb9
0x00000200006058b7 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74d98b25], al ; ret
0x00000200000ff986 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; fdivr st(7) ; ret 0x8d4c
0x00000200000dc7ce : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000019579e : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x71e9
0x000002000068a97b : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8949
0x00000200000b02aa : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b44
0x00000200004d33a2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8d48
0x0000020000195773 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x9ce9
0x00000200004b2955 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0xc141
0x00000200005b52b8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0xd38b
0x000002000013e126 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rcx - 0x7d] ; ret 0xe908
0x000002000004a38a : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; push rcx ; adc byte ptr [rcx - 0x7f], cl ; ret 0x1a0
0x0000020000116647 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000115a35 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x20e8
0x000002000016c19a : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x44ba
0x00000200003cfa66 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x44c7
0x00000200001f1a9b : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x5ba
0x0000020000115b81 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8348
0x000002000013b031 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x0000020000034c54 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x894c
0x00000200005d889d : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b41
0x00000200001025fe : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b44
0x000002000004ee4d : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000418b15 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200000a1166 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b4c
0x00000200004656fd : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x98e8
0x000002000016e749 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x9ce8
0x00000200000ecea9 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xd38b
0x00000200001fc29a : add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret
0x00000200006e79aa : add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret 0xf48
0x0000020000660405 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; div byte ptr [rsp + rdi - 0xa] ; ret
0x00000200000cbbd2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; ret 0xa674
0x00000200000c8ad1 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbx + rsi - 0x75], cl ; ret 0x8b41
0x0000020000221b1e : add byte ptr [rax], al ; add byte ptr [rbp - 0x7c], al ; push qword ptr [rbp - 0xa] ; ret 0x7403
0x000002000041214a : add byte ptr [rax], al ; add byte ptr [rbp - 0x9e18b37], al ; ret 0xf03
0x00000200007a1813 : add byte ptr [rax], al ; add byte ptr [rbp - 0xc08740], al ; ret
0x0000020000541e73 : add byte ptr [rax], al ; add byte ptr [rbp - 0xd08b40], al ; ret
0x000002000051ce58 : add byte ptr [rax], al ; add byte ptr [rbp - 0xed8b40], al ; ret
0x0000020000438a93 : add byte ptr [rax], al ; add byte ptr [rbp - 0xf68740], al ; ret
0x0000020000112ee8 : add byte ptr [rax], al ; add byte ptr [rbp - 0xfd8740], al ; ret
0x0000020000130d87 : add byte ptr [rax], al ; add byte ptr [rbx + 0x17501e8], al ; ret
0x0000020000525a1e : add byte ptr [rax], al ; add byte ptr [rbx + 0x2648e8d8], cl ; ret 0x85ff
0x0000020000011524 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2bd123d3], cl ; ret 0x3b48
0x00000200001b5b5a : add byte ptr [rax], al ; add byte ptr [rbx + 0x3368245c], cl ; ret
0x000002000070a86a : add byte ptr [rax], al ; add byte ptr [rbx + 0x3482843], cl ; ret 0x348
0x0000020000225162 : add byte ptr [rax], al ; add byte ptr [rbx + 0x430f04f8], al ; ret 0x44ff
0x0000020000197d41 : add byte ptr [rax], al ; add byte ptr [rbx + 0x440f18f8], al ; ret 0xbee9
0x0000020000068090 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000020000507101 : add byte ptr [rax], al ; add byte ptr [rbx + 0x60a5e8d5], cl ; ret
0x00000200006802a5 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 0x7d], dh ; loopne 0x200006802d4 ; ret
0x0000020000156304 : add byte ptr [rax], al ; add byte ptr [rbx + rbp - 0x28], cl ; jmp r11
0x00000200000f6455 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x41], cl ; or dh, dh ; ret 0xf1f
0x000002000000ee9d : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x45], cl ; add al, ch ; ret
0x000002000024ecd5 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x47], al ; add al, 0xb9 ; ret 0
0x00000200000b8a5b : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x55], cl ; adc byte ptr [rcx - 0x75], cl ; ret 0x8948
0x00000200004d0c76 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x65], al ; or bh, bh ; ret
0x000002000040e6dc : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x77], al ; or byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x00000200006cbfca : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x7d], cl ; out -0xa, eax ; ret
0x00000200004ed91b : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 5], cl ; ret
0x0000020000606526 : add byte ptr [rax], al ; add byte ptr [rbx - 0x50b3], al ; ret
0x000002000013fcd0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x749fdbac], cl ; ret 0xd8f7
0x00000200000b1c90 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b3f7b9], cl ; ret 0xc149
0x000002000077f953 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b6efb5], cl ; ret
0x00000200000eeaa0 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b7dbb3], cl ; ret
0x00000200004499fc : add byte ptr [rax], al ; add byte ptr [rbx - 0x74bb031a], al ; ret
0x00000200004dbe72 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7a2f083f], cl ; ret 0x870f
0x0000020000473a14 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0f005], al ; ret
0x00000200006b448f : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fec7], al ; ret 0
0x0000020000143e12 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0b906], al ; ret 0
0x0000020000491765 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe17], al ; ret 0
0x00000200003d1457 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7ef39], al ; ret
0x00000200001dade6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7f3ad], cl ; ret 0x4810
0x0000020000625758 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7d211723], cl ; ret 0x48ff
0x0000020000534535 : add byte ptr [rax], al ; add byte ptr [rbx - 0x8b7dbac], cl ; ret 0xffe0
0x0000020000661968 : add byte ptr [rax], al ; add byte ptr [rbx - 0x987dba4], cl ; ret
0x00000200004e3ed9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x9b7dba4], cl ; ret
0x0000020000669c64 : add byte ptr [rax], al ; add byte ptr [rbx - 0xb3dbac], cl ; ret 0xcae9
0x0000020000787a66 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret
0x00000200005eb937 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x3b41
0x000002000066dc64 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x4489
0x000002000043f086 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8941
0x0000020000674ea6 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0xc748
0x00000200001332f7 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0xc803
0x000002000046da32 : add byte ptr [rax], al ; add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000103fbd : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x000002000007f57a : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x3344
0x0000020000706d96 : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x8445
0x0000020000135d3e : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x8a45
0x00000200004dbedd : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x9489
0x000002000051ebc2 : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xb841
0x000002000003e098 : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xc23b
0x0000020000095eaf : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x0000020000642e48 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1375
0x000002000047c676 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1a72
0x000002000022a58f : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1b72
0x000002000005904f : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x2074
0x0000020000643b57 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x3c75
0x0000020000160980 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x470f
0x00000200000ee0dc : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x767d
0x00000200003e33d2 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x830f
0x000002000004c6fd : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x840f
0x0000020000706081 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x850f
0x0000020000135f67 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x870f
0x0000020000477e9f : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x8f0f
0x0000020000481e2c : add byte ptr [rax], al ; add byte ptr [rbx], bh ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x8844
0x000002000007586a : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ror byte ptr [rdi], 1 ; ret 0xd08b
0x00000200001044ec : add byte ptr [rax], al ; add byte ptr [rbx], bl ; jmp qword ptr [rbx]
0x000002000001a32c : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x000002000020f1dd : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x2b44
0x0000020000429173 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x4489
0x0000020000504596 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x448b
0x00000200001d3d93 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x8966
0x000002000024f79f : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x8b48
0x000002000065c6d8 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x9848
0x000002000021397f : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xc803
0x0000020000631783 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xf803
0x000002000002f21d : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xf883
0x000002000008e8a5 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xff48
0x0000020000012ba0 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; rol byte ptr [rcx - 0x75], 1 ; ret
0x00000200005d3df5 : add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret
0x0000020000711f93 : add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 0x8b48
0x00000200005d6ae7 : add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 0xc883
0x0000020000446863 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; fucomi st(3) ; ret 0x3345
0x0000020000706ec0 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; imul byte ptr [rbx] ; ret 0x4779
0x00000200004fdca7 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; imul cl ; ret 0xfffd
0x000002000023c12d : add byte ptr [rax], al ; add byte ptr [rbx], dh ; inc dword ptr [rcx - 0x75] ; ret 0x8d4c
0x00000200006f74c9 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; leave ; call 0x200006f37b3
0x00000200004e3b2c : add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret
0x00000200004880c0 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x7d89
0x000002000066a0b9 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x8948
0x000002000044cf45 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0xd069
0x0000020000404b90 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x000002000022d9e9 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x77], 9 ; ret
0x000002000052cdf7 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000020000694391 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200001438f2 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; sal dh, cl ; ret
0x000002000024c5bd : add byte ptr [rax], al ; add byte ptr [rbx], dh ; sar bh, 0xc0 ; ret
0x00000200007bc298 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; shr al, cl ; loop 0x200007bc244 ; ret 0x66ff
0x00000200007b52c5 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; shr al, cl ; mov ch, 0xc ; ret
0x00000200007bc26e : add byte ptr [rax], al ; add byte ptr [rbx], dh ; shr al, cl ; or al, 0x9d ; ret 0x66ff
0x00000200006f4419 : add byte ptr [rax], al ; add byte ptr [rcx + 0x15ff1c43], cl ; ret
0x000002000017d3b5 : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; fiadd word ptr [rbp - 0x75] ; ret 0x8b49
0x00000200001e748a : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret
0x000002000009eb85 : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret 0x3345
0x00000200000a78ac : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret 0x7989
0x00000200004b4763 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2a], al ; ret 0x388
0x000002000015bdd0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret
0x0000020000213161 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret 0x344
0x000002000043f43b : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret 0x348d
0x000002000015bba3 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret 0xf41
0x00000200001a6232 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; rol byte ptr [rcx - 0x75], cl ; ret
0x0000020000546fea : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret
0x000002000049b927 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x00000200001f393e : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ror byte ptr [rcx - 0x73], 4 ; ret
0x0000020000422f7d : add byte ptr [rax], al ; add byte ptr [rcx + 0x33], cl ; add dword ptr [rax - 1], ecx ; ret 0xc148
0x00000200001e252f : add byte ptr [rax], al ; add byte ptr [rcx + 0x33], cl ; ret 0x8948
0x00000200002272a1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret
0x00000200007a4cb3 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret 0x850f
0x0000020000643422 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; enter 0x1674, -0x75 ; ret
0x000002000016a0d9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret
0x000002000005da00 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x830f
0x00000200004f0aaa : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x850f
0x000002000001726d : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200003fa6b7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x2873
0x00000200000b84f2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x4975
0x000002000004a406 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x7673
0x000002000004a559 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x000002000066022e : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xce75
0x0000020000092bd0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0xf49
0x000002000064f744 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000047ea1a : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004e5f6d : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x00000200000be21d : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbx ; ret
0x00000200000492a1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rbp ; pop rbx ; ret
0x0000020000098d78 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rbx ; pop rbp ; ret
0x00000200000a6161 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rbx ; ret
0x0000020000480f5e : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000e8b04 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; ret
0x00000200004c0daa : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rsi ; ret
0x00000200000be776 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x00000200004245ac : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rbp ; pop rbx ; ret
0x00000200000cc274 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rbp ; pop rbx ; ret
0x00000200004c781c : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000055ea96 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200000c5632 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000013f3b9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000468090 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000054bb4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x000002000060905b : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x00000200000690de : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004d1c40 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbx ; ret
0x000002000000f6af : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rcx ; ret
0x00000200000720e4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rbx ; ret
0x00000200004c85fd : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200004c39f2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rbp ; ret
0x00000200004e4819 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; ret
0x0000020000003025 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rbx ; ret
0x00000200006251a2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000014161 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; ret
0x000002000006c4f1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; add dword ptr [rcx + 0x3b], ecx ; ret 0x840f
0x00000200003cbe13 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x000002000048c296 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov bh, 0x46 ; add bh, bh ; ret 0x34c
0x00000200004def67 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0xba0f
0x0000020000051da9 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0xc803
0x0000020000066246 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret
0x00000200005b2bad : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff41
0x00000200004c58f3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret 0x8948
0x000002000003f4a6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x000002000062318c : add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x345
0x00000200005b528e : add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x8941
0x00000200000e28e5 : add byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret 0x3b48
0x00000200000c14d1 : add byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret 0xba49
0x00000200000a0a45 : add byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ror byte ptr [rax + 0x3b], 1 ; ret 0x376
0x00000200004b549e : add byte ptr [rax], al ; add byte ptr [rcx + rcx + 0x3c], cl ; ret 0x8b44
0x00000200000bba64 : add byte ptr [rax], al ; add byte ptr [rcx + rdi + 0x49], cl ; and byte ptr [rdi], cl ; ret 0x8841
0x0000020000553cea : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x00000200004329e5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xf000
0x0000020000247e8c : add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], al ; in eax, dx ; adc eax, dword ptr [rcx - 0x7f] ; ret 0xff38
0x000002000001480e : add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], cl ; call 0x1ffc224952a
0x00000200003d5b6b : add byte ptr [rax], al ; add byte ptr [rcx - 0x4a], al ; add ecx, ebp ; ret
0x000002000070b24c : add byte ptr [rax], al ; add byte ptr [rcx - 0x50], al ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9ee8
0x00000200002105dc : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; add dword ptr [rcx + 0x3b], eax ; ret 0x870f
0x000002000007d4d7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; call r11
0x0000020000027b6b : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; inc dword ptr [r9 + 0x23] ; ret 0xc82b
0x000002000063a1ee : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; outsb dx, byte ptr [rsi] ; ret 0xb841
0x000002000066b5a7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rcx - 0x75] ; ret 0xf748
0x00000200004cb589 : add byte ptr [rax], al ; add byte ptr [rcx - 0x74a3dbac], cl ; ret 0xa1eb
0x0000020000095f94 : add byte ptr [rax], al ; add byte ptr [rcx - 0x74a7dbac], cl ; ret 0x34c
0x00000200007189e4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x74b3c7b8], cl ; ret
0x00000200007a65ce : add byte ptr [rax], al ; add byte ptr [rcx - 0x74bbc7ba], cl ; ret
0x00000200002491bf : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; adc byte ptr [rcx - 0x75], cl ; ret 0xf748
0x0000020000244fee : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x3b], al ; ret
0x000002000023ef71 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x3b], al ; ret 0x974
0x00000200000f5f49 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; enter -0x1f2d, 0x3b ; ret 0xef72
0x00000200006256be : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; fucompi st(0) ; ja 0x20000625653 ; ret 0x48ff
0x000002000046221c : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; iretd ; call 0x2000008e15d
0x000002000044a04f : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; push rcx ; add al, 0x8b ; ret 0x8b41
0x00000200004826b6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; push rdi ; xor al, 0xf7 ; ret 1
0x00000200000c8ab2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200003db477 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x2b41
0x00000200001c7224 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x348
0x000002000042469a : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x3948
0x000002000070fb63 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x587
0x000002000067938f : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x694c
0x0000020000689148 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8545
0x0000020000078fbb : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200000be1f3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8b4c
0x000002000044743a : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x950f
0x00000200001ace49 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xbde9
0x0000020000096024 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xc22b
0x000002000024edad : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xc2b9
0x00000200000887fb : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xd285
0x0000020000401d3f : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x00000200000c02c4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xf48
0x00000200000528dd : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xff41
0x000002000010a2b6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ror byte ptr [rax - 0x7d], cl ; ret 0x4d02
0x000002000055550d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ror dword ptr [rbp - 0x75], -0x7c ; ret
0x00000200007a8e60 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ror dword ptr [rcx + 0xf], -0x5d ; ret 0x830f
0x000002000024bc6d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; sbb byte ptr [rbx], al ; ret
0x0000020000085e10 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; xlatb ; call rax
0x00000200006048e3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; call 0x2004922d339
0x000002000078895e : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; cmp cl, byte ptr [rax - 0x75] ; ret
0x000002000068d0bb : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax + 0x63] ; ret 0x3345
0x000002000067014a : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0x8548
0x00000200006da771 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; iretd ; call r14
0x00000200003f2b11 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; iretd ; call rdi
0x000002000050d0b2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; pop rdi ; and byte ptr [rax - 0x7f], cl ; ret
0x0000020000072a3a : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000024067b : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x144
0x0000020000091e4f : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x2348
0x00000200007788de : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x00000200000ecef7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x5803
0x000002000000a72c : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8b44
0x0000020000002a5f : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x000002000018a149 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x9fe9
0x000002000018a159 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xa0e9
0x000002000018a169 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xa1e9
0x000002000018a179 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xa2e9
0x0000020000017abe : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000176baf : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x000002000004e1b0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sbb byte ptr [rax + 0x33], r9b ; ret 0xa948
0x00000200007d13a5 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; xlatb ; call 0x200003f7bc5
0x00000200002316aa : add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret
0x000002000042e9ac : add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret 0x4488
0x00000200004b9090 : add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; salc ; call 0x200000e4e99
0x00000200004b9346 : add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; salc ; call 0x200000e5349
0x000002000043eff4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; cmp dh, dh ; ret
0x0000020000652253 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; jl 0x20000652287 ; sbb al, 0x8b ; ret
0x000002000022c5a7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; xor al, al ; ret
0x00000200007ad41f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7832ac], cl ; ret 0x8948
0x0000020000069e76 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; enter 0x450f, -0x3e ; ret
0x00000200003d2631 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; ret 0xb74
0x00000200003e1a2d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7c9fdb84], cl ; call qword ptr [rax]
0x000002000011ca9e : add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret 0x1375
0x00000200006b8a53 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret 0x850f
0x00000200005f0968 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7cb7efbe], cl ; ret 0xff14
0x0000020000036406 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200004b02de : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x00000200006892a3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x49f0
0x0000020000232f46 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000002000013e20d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4008
0x0000020000778900 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x00000200006961e6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00000200004b2dfb : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x41fe
0x0000020000553dca : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4428
0x0000020000176eac : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x0000020000103009 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x6607
0x00000200001a52b3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ror byte ptr [rsp + rcx*2], 3 ; ret
0x0000020000072aad : add byte ptr [rax], al ; add byte ptr [rcx - 0x7f], cl ; ret 0x1000
0x000002000023df42 : add byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; ret 0x4101
0x00000200000403cc : add byte ptr [rax], al ; add byte ptr [rcx - 0x8cfdb8c], cl ; ret
0x00000200001e01f4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x9dfdbb4], cl ; ret 0x7420
0x00000200001fc223 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x000002000012d607 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7402
0x00000200005924c5 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7404
0x0000020000150f43 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7406
0x0000020000150f5c : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7506
0x000002000021fc9e : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000200001a4b05 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000020000491dbf : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf11
0x00000200004c67da : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf20
0x000002000044c290 : add byte ptr [rax], al ; add byte ptr [rcx - 0xcf60bc], cl ; ret
0x0000020000137cc1 : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x000002000023822a : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x3b44
0x00000200001f3671 : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8348
0x0000020000146e66 : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200000e6d6d : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0xff41
0x00000200000483d2 : add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000200000591aa : add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret 0
0x000002000065aac1 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x000002000065fb6a : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xb841
0x0000020000499619 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000085643 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000200000f3fd6 : add byte ptr [rax], al ; add byte ptr [rcx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000078f04c : add byte ptr [rax], al ; add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x00000200001dccca : add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x00000200000eaee8 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bl ; ret
0x00000200000d7edc : add byte ptr [rax], al ; add byte ptr [rdi + 0x5d], bl ; pop rbx ; ret
0x00000200000cac13 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5d], bl ; ret
0x00000200000f9851 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000001ce28 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200004e285e : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x000002000010cca3 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200004aa7b6 : add byte ptr [rax], al ; add byte ptr [rdi + 1], dh ; ret
0x00000200003d8a22 : add byte ptr [rax], al ; add byte ptr [rdi + rbp - 0x18], dh ; insb byte ptr [rdi], dx ; ret
0x0000020000008ab4 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000ad064 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x2b8
0x00000200001fc54d : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x2b9
0x0000020000046273 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200001ce602 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x188
0x00000200000f2495 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4488
0x0000020000064d9f : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4865
0x000002000003d3ec : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4980
0x000002000005e99f : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4c65
0x0000020000025fed : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x5f6
0x00000200000c1088 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x8841
0x00000200001d40b5 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x8b48
0x00000200001d298c : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0xa483
0x00000200000d7dcc : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0xe88
0x000002000078ef3e : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ror byte ptr [rdi], 0x20 ; ret
0x00000200003cb8f4 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b4c
0x000002000021cf8d : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x0000020000055a36 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x49], al ; ret 0xd233
0x000002000070dab3 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x000002000071937f : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x37ba
0x00000200000f6e62 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; sbb ecx, dword ptr [rax - 1] ; ret
0x0000020000157936 : add byte ptr [rax], al ; add byte ptr [rdi - 0x73], cl ; sbb al, 0x8b ; jmp r11
0x0000020000711b36 : add byte ptr [rax], al ; add byte ptr [rdi - 0x7cb7f7bd], al ; ret
0x000002000065aa06 : add byte ptr [rax], al ; add byte ptr [rdi], bl ; add byte ptr [rax - 1], cl ; ret 0xc148
0x00000200000b2139 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200000a7991 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add byte ptr [rbx - 0x75], cl ; push rsp ; ret 0xc708
0x000002000024c46d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add dword ptr [rcx], eax ; sidt ptr [rdx] ; ret
0x00000200006945f6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x43 ; add bh, bh ; ret 0x8b4c
0x00000200000e0094 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x46 ; add ch, byte ptr [rbx] ; ret
0x000002000017afa4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x47 ; add ch, byte ptr [rbx] ; ret
0x00000200006cfdc6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0xb ; call 0x2000013c068
0x00000200000e30cb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; and esi, esi ; ret 0xf08
0x0000020000474e59 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x86 ; ret 6
0x000002000057e974 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x8d ; ret
0x000002000057e932 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x8d ; ret 0
0x00000200006f3c41 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret
0x00000200000e8b28 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x1ba
0x000002000043b6bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x349
0x00000200001acdf9 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4488
0x00000200001acca2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4489
0x0000020000018eb1 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4589
0x000002000003d5f3 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x789
0x00000200004b95a2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8441
0x00000200003db7e2 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xb0c3
0x0000020000593a42 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xb60f
0x00000200004df59e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xba0f
0x00000200004dc008 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xbc80
0x00000200001e9faf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc83a
0x0000020000164aa6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; rol byte ptr [rbp - 0x75], 1 ; ret
0x00000200004224f4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test dword ptr [rbx], edi ; ret
0x00000200004cf0cc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg dword ptr [rdx], esi ; ret 0x10
0x000002000016f63c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000020000135260 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5338
0x00000200001c566c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x0000020000065ab0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x00000200001aeafe : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000458283 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x0000020000230ada : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x6349
0x0000020000230631 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b41
0x00000200004bf9fa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf66
0x000002000003b26b : add byte ptr [rax], al ; add byte ptr [rdx + 0x1242240], cl ; ret
0x00000200004384d1 : add byte ptr [rax], al ; add byte ptr [rdx + 0xa417c47], cl ; ret 0xa40
0x00000200001fc922 : add byte ptr [rax], al ; add byte ptr [rdx + 0xf], al ; mov bh, 0x4c ; ret 0x4a08
0x0000020000510a90 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*4 + 0x45], al ; ret
0x00000200001903ac : add byte ptr [rax], al ; add byte ptr [rdx + rcx*4 + 0x51], al ; add dword ptr [rcx - 0x76], eax ; ret 0xf824
0x000002000061dda2 : add byte ptr [rax], al ; add byte ptr [rdx + rcx*4 - 0x79], al ; ret 6
0x00000200000eb102 : add byte ptr [rax], al ; add byte ptr [rdx + rdi - 0x45], al ; ret
0x000002000018963f : add byte ptr [rax], al ; add byte ptr [rdx - 0x75], cl ; or byte ptr [rax], r14b ; ret
0x000002000059e27a : add byte ptr [rax], al ; add byte ptr [rdx - 0x77], al ; add al, 1 ; inc edx ; jmp 0x2000059e264
0x00000200003d1e0e : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8548
0x00000200004fb0fc : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rdi], cl ; test esp, edi ; ret 0xe
0x00000200004ac565 : add byte ptr [rax], al ; add byte ptr [rdx], al ; ret
0x00000200001d3bf2 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret
0x00000200007222db : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x3a76
0x00000200000c60ef : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x420f
0x0000020000037d0c : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x574
0x0000020000241c1e : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x860f
0x0000020000217b17 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x973
0x000002000021f8e0 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0xa73
0x00000200003db18b : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0xc75
0x000002000007da9f : add byte ptr [rax], al ; add byte ptr [rdx], bh ; retf -0x3e75 ; cmovg eax, edx ; jmp 0x2000007dab7
0x000002000002fcdf : add byte ptr [rax], al ; add byte ptr [rdx], ch ; ret 0x8488
0x0000020000211744 : add byte ptr [rax], al ; add byte ptr [rdx], cl ; je 0x20000211755 ; xor al, al ; ret
0x000002000055573b : add byte ptr [rax], al ; add byte ptr [rsi + 0x23], ah ; ret 0xb66
0x00000200003e9f4d : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret
0x00000200002001f0 : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x3272
0x00000200005c7db3 : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x672
0x000002000069334a : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x775
0x0000020000046a23 : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000554eb4 : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x000002000068d22f : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x877
0x000002000001e4ee : add byte ptr [rax], al ; add byte ptr [rsi + 0x45], ah ; mov dword ptr [rdx + 0x10], ecx ; ret
0x000002000006cb84 : add byte ptr [rax], al ; add byte ptr [rsi + 0x5d], bl ; pop rbx ; ret
0x00000200000f2fb2 : add byte ptr [rax], al ; add byte ptr [rsi + 0x5d], bl ; ret
0x00000200000ba3a4 : add byte ptr [rax], al ; add byte ptr [rsi + 0xb], ah ; ret 0x8966
0x00000200004ddda1 : add byte ptr [rax], al ; add byte ptr [rsi + 3], ah ; ret 0xb70f
0x00000200001509fb : add byte ptr [rax], al ; add byte ptr [rsi - 0x73277320], cl ; ret 0xc223
0x00000200006ceeb4 : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000008b3b2 : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; or cl, byte ptr [r8 - 0x75] ; ret
0x00000200000fce61 : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; push rcx ; ret
0x0000020000555aeb : add byte ptr [rax], al ; add byte ptr [rsi - 0x7d], ah ; enter 0x6630, 0xb ; ret 0x4166
0x00000200007d0ad9 : add byte ptr [rax], al ; add byte ptr [rsi - 0x7d], ah ; ret
0x00000200000cd0ff : add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret
0x000002000014baf9 : add byte ptr [rax], al ; add byte ptr [rsi - 9], ah ; ret 0x300
0x00000200001c88f6 : add byte ptr [rax], al ; add byte ptr [rsp + rbx - 0x7f], dh ; call rsi
0x00000200004b1da9 : add byte ptr [rax], al ; add byte ptr [rsp + rbx*2 - 0x75], dh ; ret
0x00000200001c88fe : add byte ptr [rax], al ; add byte ptr [rsp + rdx - 0x7f], dh ; call rcx
0x00000200000038f9 : add byte ptr [rax], al ; add ch, bl ; mov ecx, 0xc033cccc ; ret
0x000002000016fa17 : add byte ptr [rax], al ; add ch, cl ; sub dword ptr [rax + 0x3b], ecx ; ret
0x00000200005cac2d : add byte ptr [rax], al ; add ch, cl ; sub dword ptr [rax - 0x75], ecx ; ret 0x4cf0
0x00000200005d686a : add byte ptr [rax], al ; add ch, cl ; sub dword ptr [rax - 0x7d], ecx ; ret
0x00000200000820a3 : add byte ptr [rax], al ; add cl, al ; call 0x1ffc30944c7
0x00000200004961fb : add byte ptr [rax], al ; add cl, al ; call 0x1ffc34a8620
0x000002000068dc5d : add byte ptr [rax], al ; add cl, al ; clc ; add eax, dword ptr [rbx] ; ret 0x3b41
0x00000200000b3cbe : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7b] ; enter 0x2674, -0xa ; ret 0xf08
0x00000200000b5b55 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7b] ; ret 0x2675
0x00000200007c776b : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00000200000a6b3f : add byte ptr [rax], al ; add cl, byte ptr [rcx + 9] ; sub cl, bpl ; ret 0xfffa
0x0000020000148026 : add byte ptr [rax], al ; add cl, ch ; adc ah, al ; add byte ptr [rax], al ; ret
0x0000020000147f26 : add byte ptr [rax], al ; add cl, ch ; adc ah, cl ; add byte ptr [rax], al ; ret
0x0000020000149c26 : add byte ptr [rax], al ; add cl, ch ; adc al, ah ; add byte ptr [rax], al ; ret
0x0000020000149926 : add byte ptr [rax], al ; add cl, ch ; adc al, bh ; add byte ptr [rax], al ; ret
0x0000020000149d26 : add byte ptr [rax], al ; add cl, ch ; adc al, bl ; add byte ptr [rax], al ; ret
0x0000020000149b26 : add byte ptr [rax], al ; add cl, ch ; adc al, ch ; add byte ptr [rax], al ; ret
0x0000020000149a26 : add byte ptr [rax], al ; add cl, ch ; adc al, dh ; add byte ptr [rax], al ; ret
0x0000020000149e26 : add byte ptr [rax], al ; add cl, ch ; adc al, dl ; add byte ptr [rax], al ; ret
0x0000020000148426 : add byte ptr [rax], al ; add cl, ch ; adc bl, ah ; add byte ptr [rax], al ; ret
0x0000020000148826 : add byte ptr [rax], al ; add cl, ch ; adc bl, al ; add byte ptr [rax], al ; ret
0x0000020000148126 : add byte ptr [rax], al ; add cl, ch ; adc bl, bh ; add byte ptr [rax], al ; ret
0x0000020000148526 : add byte ptr [rax], al ; add cl, ch ; adc bl, bl ; add byte ptr [rax], al ; ret
0x0000020000148326 : add byte ptr [rax], al ; add cl, ch ; adc bl, ch ; add byte ptr [rax], al ; ret
0x0000020000148726 : add byte ptr [rax], al ; add cl, ch ; adc bl, cl ; add byte ptr [rax], al ; ret
0x0000020000148226 : add byte ptr [rax], al ; add cl, ch ; adc bl, dh ; add byte ptr [rax], al ; ret
0x0000020000148626 : add byte ptr [rax], al ; add cl, ch ; adc bl, dl ; add byte ptr [rax], al ; ret
0x0000020000149426 : add byte ptr [rax], al ; add cl, ch ; adc cl, ah ; add byte ptr [rax], al ; ret
0x0000020000149826 : add byte ptr [rax], al ; add cl, ch ; adc cl, al ; add byte ptr [rax], al ; ret
0x0000020000149126 : add byte ptr [rax], al ; add cl, ch ; adc cl, bh ; add byte ptr [rax], al ; ret
0x0000020000149526 : add byte ptr [rax], al ; add cl, ch ; adc cl, bl ; add byte ptr [rax], al ; ret
0x0000020000149326 : add byte ptr [rax], al ; add cl, ch ; adc cl, ch ; add byte ptr [rax], al ; ret
0x0000020000149726 : add byte ptr [rax], al ; add cl, ch ; adc cl, cl ; add byte ptr [rax], al ; ret
0x0000020000149226 : add byte ptr [rax], al ; add cl, ch ; adc cl, dh ; add byte ptr [rax], al ; ret
0x0000020000149626 : add byte ptr [rax], al ; add cl, ch ; adc cl, dl ; add byte ptr [rax], al ; ret
0x0000020000148c26 : add byte ptr [rax], al ; add cl, ch ; adc dl, ah ; add byte ptr [rax], al ; ret
0x0000020000149026 : add byte ptr [rax], al ; add cl, ch ; adc dl, al ; add byte ptr [rax], al ; ret
0x0000020000148926 : add byte ptr [rax], al ; add cl, ch ; adc dl, bh ; add byte ptr [rax], al ; ret
0x0000020000148d26 : add byte ptr [rax], al ; add cl, ch ; adc dl, bl ; add byte ptr [rax], al ; ret
0x0000020000195d3c : add byte ptr [rax], al ; add cl, ch ; adc dl, byte ptr [rcx] ; int1 ; push rsi ; ret 0x7401
0x0000020000148b26 : add byte ptr [rax], al ; add cl, ch ; adc dl, ch ; add byte ptr [rax], al ; ret
0x0000020000148f26 : add byte ptr [rax], al ; add cl, ch ; adc dl, cl ; add byte ptr [rax], al ; ret
0x0000020000148a26 : add byte ptr [rax], al ; add cl, ch ; adc dl, dh ; add byte ptr [rax], al ; ret
0x0000020000148e26 : add byte ptr [rax], al ; add cl, ch ; adc dl, dl ; add byte ptr [rax], al ; ret
0x000002000061ff17 : add byte ptr [rax], al ; add cl, ch ; and ebx, ebx ; ret 0xccff
0x000002000047f7b2 : add byte ptr [rax], al ; add cl, ch ; call qword ptr [rdx]
0x00000200004a4d89 : add byte ptr [rax], al ; add cl, ch ; hlt ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000020000147ec6 : add byte ptr [rax], al ; add cl, ch ; jb 0x20000147eb5 ; add byte ptr [rax], al ; ret
0x0000020000147fc6 : add byte ptr [rax], al ; add cl, ch ; jb 0x20000147fb4 ; add byte ptr [rax], al ; ret
0x00000200001480c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001480b3 ; add byte ptr [rax], al ; ret
0x00000200001481c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001481b2 ; add byte ptr [rax], al ; ret
0x00000200001482c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001482b1 ; add byte ptr [rax], al ; ret
0x00000200001483c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001483b0 ; add byte ptr [rax], al ; ret
0x00000200001484c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001484af ; add byte ptr [rax], al ; ret
0x00000200001485c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001485ae ; add byte ptr [rax], al ; ret
0x00000200001486c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001486ad ; add byte ptr [rax], al ; ret
0x00000200001487c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001487ac ; add byte ptr [rax], al ; ret
0x00000200001488c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001488ab ; add byte ptr [rax], al ; ret
0x00000200001489c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001489aa ; add byte ptr [rax], al ; ret
0x0000020000148ac6 : add byte ptr [rax], al ; add cl, ch ; jb 0x20000148aa9 ; add byte ptr [rax], al ; ret
0x0000020000148bc6 : add byte ptr [rax], al ; add cl, ch ; jb 0x20000148ba8 ; add byte ptr [rax], al ; ret
0x0000020000148cc6 : add byte ptr [rax], al ; add cl, ch ; jb 0x20000148ca7 ; add byte ptr [rax], al ; ret
0x0000020000148dc6 : add byte ptr [rax], al ; add cl, ch ; jb 0x20000148da6 ; add byte ptr [rax], al ; ret
0x0000020000148ec6 : add byte ptr [rax], al ; add cl, ch ; jb 0x20000148ea5 ; add byte ptr [rax], al ; ret
0x0000020000148fc6 : add byte ptr [rax], al ; add cl, ch ; jb 0x20000148fa4 ; add byte ptr [rax], al ; ret
0x00000200001490c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001490a3 ; add byte ptr [rax], al ; ret
0x00000200001491c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001491a2 ; add byte ptr [rax], al ; ret
0x00000200001492c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001492a1 ; add byte ptr [rax], al ; ret
0x00000200001493c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x200001493a0 ; add byte ptr [rax], al ; ret
0x00000200001494c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x2000014949f ; add byte ptr [rax], al ; ret
0x00000200001495c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x2000014959e ; add byte ptr [rax], al ; ret
0x00000200001496c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x2000014969d ; add byte ptr [rax], al ; ret
0x00000200001497c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x2000014979c ; add byte ptr [rax], al ; ret
0x00000200001498c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x2000014989b ; add byte ptr [rax], al ; ret
0x00000200001499c6 : add byte ptr [rax], al ; add cl, ch ; jb 0x2000014999a ; add byte ptr [rax], al ; ret
0x0000020000149ac6 : add byte ptr [rax], al ; add cl, ch ; jb 0x20000149a99 ; add byte ptr [rax], al ; ret
0x0000020000149bc6 : add byte ptr [rax], al ; add cl, ch ; jb 0x20000149b98 ; add byte ptr [rax], al ; ret
0x0000020000149cc6 : add byte ptr [rax], al ; add cl, ch ; jb 0x20000149c97 ; add byte ptr [rax], al ; ret
0x0000020000149dc6 : add byte ptr [rax], al ; add cl, ch ; jb 0x20000149d96 ; add byte ptr [rax], al ; ret
0x0000020000149646 : add byte ptr [rax], al ; add cl, ch ; leave ; add byte ptr [rax], al ; ret
0x0000020000149946 : add byte ptr [rax], al ; add cl, ch ; mov byte ptr [rax], 0 ; ret
0x0000020000149e86 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xc1 ; add byte ptr [rax], al ; ret
0x0000020000149d86 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xc2 ; add byte ptr [rax], al ; ret
0x0000020000149c86 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xc3 ; add byte ptr [rax], al ; ret
0x0000020000149b86 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xc4 ; add byte ptr [rax], al ; ret
0x0000020000149a86 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xc5 ; add byte ptr [rax], al ; ret
0x0000020000149986 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xc6 ; add byte ptr [rax], al ; ret
0x0000020000149886 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xc7 ; add byte ptr [rax], al ; ret
0x0000020000149786 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xc8 ; add byte ptr [rax], al ; ret
0x0000020000149686 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xc9 ; add byte ptr [rax], al ; ret
0x0000020000149586 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xca ; add byte ptr [rax], al ; ret
0x0000020000149486 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xcb ; add byte ptr [rax], al ; ret
0x0000020000149386 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xcc ; add byte ptr [rax], al ; ret
0x0000020000149286 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xcd ; add byte ptr [rax], al ; ret
0x0000020000149186 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xce ; add byte ptr [rax], al ; ret
0x0000020000149086 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xcf ; add byte ptr [rax], al ; ret
0x0000020000148f86 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xd0 ; add byte ptr [rax], al ; ret
0x0000020000148e86 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xd1 ; add byte ptr [rax], al ; ret
0x0000020000148d86 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xd2 ; add byte ptr [rax], al ; ret
0x0000020000148c86 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xd3 ; add byte ptr [rax], al ; ret
0x0000020000148b86 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xd4 ; add byte ptr [rax], al ; ret
0x0000020000148a86 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xd5 ; add byte ptr [rax], al ; ret
0x0000020000148986 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xd6 ; add byte ptr [rax], al ; ret
0x0000020000148886 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xd7 ; add byte ptr [rax], al ; ret
0x0000020000148786 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xd8 ; add byte ptr [rax], al ; ret
0x0000020000148686 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xd9 ; add byte ptr [rax], al ; ret
0x0000020000148586 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xda ; add byte ptr [rax], al ; ret
0x0000020000148486 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xdb ; add byte ptr [rax], al ; ret
0x0000020000148386 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xdc ; add byte ptr [rax], al ; ret
0x0000020000148286 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xdd ; add byte ptr [rax], al ; ret
0x0000020000148186 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xde ; add byte ptr [rax], al ; ret
0x0000020000148086 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xdf ; add byte ptr [rax], al ; ret
0x0000020000147f86 : add byte ptr [rax], al ; add cl, ch ; mov dl, 0xe0 ; add byte ptr [rax], al ; ret
0x000002000005d9d1 : add byte ptr [rax], al ; add cl, ch ; mov eax, 0x8b000000 ; ret
0x00000200000aed69 : add byte ptr [rax], al ; add cl, ch ; mov ebp, 0xf6fffff2 ; ret 0xf04
0x00000200005d8d0b : add byte ptr [rax], al ; add cl, ch ; out dx, al ; ret 0xffee
0x000002000046c7fb : add byte ptr [rax], al ; add cl, ch ; pop rbp ; idiv bh ; push rsi ; ret
0x00000200001496e6 : add byte ptr [rax], al ; add cl, ch ; push rdx ; leave ; add byte ptr [rax], al ; ret
0x00000200001499e6 : add byte ptr [rax], al ; add cl, ch ; push rdx ; mov byte ptr [rax], 0 ; ret
0x0000020000149ce6 : add byte ptr [rax], al ; add cl, ch ; push rdx ; ret
0x0000020000149de6 : add byte ptr [rax], al ; add cl, ch ; push rdx ; ret 0
0x00000200001489e6 : add byte ptr [rax], al ; add cl, ch ; push rdx ; salc ; add byte ptr [rax], al ; ret
0x00000200001488e6 : add byte ptr [rax], al ; add cl, ch ; push rdx ; xlatb ; add byte ptr [rax], al ; ret
0x0000020000148b66 : add byte ptr [rax], al ; add cl, ch ; rcl ah, cl ; add byte ptr [rax], al ; ret
0x0000020000148f66 : add byte ptr [rax], al ; add cl, ch ; rcl al, cl ; add byte ptr [rax], al ; ret
0x0000020000148866 : add byte ptr [rax], al ; add cl, ch ; rcl bh, cl ; add byte ptr [rax], al ; ret
0x0000020000148c66 : add byte ptr [rax], al ; add cl, ch ; rcl bl, cl ; add byte ptr [rax], al ; ret
0x0000020000148a66 : add byte ptr [rax], al ; add cl, ch ; rcl ch, cl ; add byte ptr [rax], al ; ret
0x0000020000148e66 : add byte ptr [rax], al ; add cl, ch ; rcl cl, cl ; add byte ptr [rax], al ; ret
0x0000020000148966 : add byte ptr [rax], al ; add cl, ch ; rcl dh, cl ; add byte ptr [rax], al ; ret
0x0000020000148d66 : add byte ptr [rax], al ; add cl, ch ; rcl dl, cl ; add byte ptr [rax], al ; ret
0x0000020000148366 : add byte ptr [rax], al ; add cl, ch ; rcr ah, cl ; add byte ptr [rax], al ; ret
0x0000020000148766 : add byte ptr [rax], al ; add cl, ch ; rcr al, cl ; add byte ptr [rax], al ; ret
0x0000020000148066 : add byte ptr [rax], al ; add cl, ch ; rcr bh, cl ; add byte ptr [rax], al ; ret
0x0000020000148466 : add byte ptr [rax], al ; add cl, ch ; rcr bl, cl ; add byte ptr [rax], al ; ret
0x0000020000148266 : add byte ptr [rax], al ; add cl, ch ; rcr ch, cl ; add byte ptr [rax], al ; ret
0x0000020000148666 : add byte ptr [rax], al ; add cl, ch ; rcr cl, cl ; add byte ptr [rax], al ; ret
0x0000020000148166 : add byte ptr [rax], al ; add cl, ch ; rcr dh, cl ; add byte ptr [rax], al ; ret
0x0000020000148566 : add byte ptr [rax], al ; add cl, ch ; rcr dl, cl ; add byte ptr [rax], al ; ret
0x0000020000028a02 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000020000149d46 : add byte ptr [rax], al ; add cl, ch ; ret 0
0x00000200005a8cc2 : add byte ptr [rax], al ; add cl, ch ; ret 0xe97e
0x00000200005c98c7 : add byte ptr [rax], al ; add cl, ch ; ret 0xebb3
0x0000020000012c6e : add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x000002000007bf82 : add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000020000149b66 : add byte ptr [rax], al ; add cl, ch ; rol ah, cl ; add byte ptr [rax], al ; ret
0x0000020000149866 : add byte ptr [rax], al ; add cl, ch ; rol bh, cl ; add byte ptr [rax], al ; ret
0x0000020000149c66 : add byte ptr [rax], al ; add cl, ch ; rol bl, cl ; add byte ptr [rax], al ; ret
0x0000020000149a66 : add byte ptr [rax], al ; add cl, ch ; rol ch, cl ; add byte ptr [rax], al ; ret
0x0000020000149e66 : add byte ptr [rax], al ; add cl, ch ; rol cl, cl ; add byte ptr [rax], al ; ret
0x0000020000149966 : add byte ptr [rax], al ; add cl, ch ; rol dh, cl ; add byte ptr [rax], al ; ret
0x0000020000149d66 : add byte ptr [rax], al ; add cl, ch ; rol dl, cl ; add byte ptr [rax], al ; ret
0x0000020000149e46 : add byte ptr [rax], al ; add cl, ch ; rol dword ptr [rax], 0 ; ret
0x0000020000149366 : add byte ptr [rax], al ; add cl, ch ; ror ah, cl ; add byte ptr [rax], al ; ret
0x0000020000149766 : add byte ptr [rax], al ; add cl, ch ; ror al, cl ; add byte ptr [rax], al ; ret
0x0000020000149066 : add byte ptr [rax], al ; add cl, ch ; ror bh, cl ; add byte ptr [rax], al ; ret
0x0000020000149466 : add byte ptr [rax], al ; add cl, ch ; ror bl, cl ; add byte ptr [rax], al ; ret
0x0000020000149266 : add byte ptr [rax], al ; add cl, ch ; ror ch, cl ; add byte ptr [rax], al ; ret
0x0000020000149666 : add byte ptr [rax], al ; add cl, ch ; ror cl, cl ; add byte ptr [rax], al ; ret
0x0000020000149166 : add byte ptr [rax], al ; add cl, ch ; ror dh, cl ; add byte ptr [rax], al ; ret
0x0000020000149566 : add byte ptr [rax], al ; add cl, ch ; ror dl, cl ; add byte ptr [rax], al ; ret
0x00000200005ec215 : add byte ptr [rax], al ; add cl, ch ; ror edi, -0xf ; push rsi ; ret 0x7420
0x0000020000148946 : add byte ptr [rax], al ; add cl, ch ; salc ; add byte ptr [rax], al ; ret
0x000002000015e773 : add byte ptr [rax], al ; add cl, ch ; sbb byte ptr [rsi - 0x12], al ; push rsi ; ret 0x7403
0x00000200005d914e : add byte ptr [rax], al ; add cl, ch ; scasd eax, dword ptr [rdi] ; ret
0x0000020000147f66 : add byte ptr [rax], al ; add cl, ch ; shl al, cl ; add byte ptr [rax], al ; ret
0x00000200005d8cfe : add byte ptr [rax], al ; add cl, ch ; sti ; ret 0xffee
0x00000200005d913d : add byte ptr [rax], al ; add cl, ch ; wait ; ret
0x00000200001496a6 : add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; leave ; add byte ptr [rax], al ; ret
0x00000200001499a6 : add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; mov byte ptr [rax], 0 ; ret
0x0000020000149ca6 : add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; ret
0x0000020000149da6 : add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; ret 0
0x00000200001489a6 : add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; salc ; add byte ptr [rax], al ; ret
0x00000200001488a6 : add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; xlatb ; add byte ptr [rax], al ; ret
0x0000020000148846 : add byte ptr [rax], al ; add cl, ch ; xlatb ; add byte ptr [rax], al ; ret
0x0000020000148006 : add byte ptr [rax], al ; add cl, ch ; xor ah, al ; add byte ptr [rax], al ; ret
0x0000020000147f06 : add byte ptr [rax], al ; add cl, ch ; xor ah, cl ; add byte ptr [rax], al ; ret
0x0000020000149c06 : add byte ptr [rax], al ; add cl, ch ; xor al, ah ; add byte ptr [rax], al ; ret
0x0000020000149906 : add byte ptr [rax], al ; add cl, ch ; xor al, bh ; add byte ptr [rax], al ; ret
0x0000020000149d06 : add byte ptr [rax], al ; add cl, ch ; xor al, bl ; add byte ptr [rax], al ; ret
0x0000020000149b06 : add byte ptr [rax], al ; add cl, ch ; xor al, ch ; add byte ptr [rax], al ; ret
0x0000020000149a06 : add byte ptr [rax], al ; add cl, ch ; xor al, dh ; add byte ptr [rax], al ; ret
0x0000020000149e06 : add byte ptr [rax], al ; add cl, ch ; xor al, dl ; add byte ptr [rax], al ; ret
0x0000020000148406 : add byte ptr [rax], al ; add cl, ch ; xor bl, ah ; add byte ptr [rax], al ; ret
0x0000020000148806 : add byte ptr [rax], al ; add cl, ch ; xor bl, al ; add byte ptr [rax], al ; ret
0x0000020000148106 : add byte ptr [rax], al ; add cl, ch ; xor bl, bh ; add byte ptr [rax], al ; ret
0x0000020000148506 : add byte ptr [rax], al ; add cl, ch ; xor bl, bl ; add byte ptr [rax], al ; ret
0x0000020000148306 : add byte ptr [rax], al ; add cl, ch ; xor bl, ch ; add byte ptr [rax], al ; ret
0x0000020000148706 : add byte ptr [rax], al ; add cl, ch ; xor bl, cl ; add byte ptr [rax], al ; ret
0x0000020000148206 : add byte ptr [rax], al ; add cl, ch ; xor bl, dh ; add byte ptr [rax], al ; ret
0x0000020000148606 : add byte ptr [rax], al ; add cl, ch ; xor bl, dl ; add byte ptr [rax], al ; ret
0x0000020000149406 : add byte ptr [rax], al ; add cl, ch ; xor cl, ah ; add byte ptr [rax], al ; ret
0x0000020000149806 : add byte ptr [rax], al ; add cl, ch ; xor cl, al ; add byte ptr [rax], al ; ret
0x0000020000149106 : add byte ptr [rax], al ; add cl, ch ; xor cl, bh ; add byte ptr [rax], al ; ret
0x0000020000149506 : add byte ptr [rax], al ; add cl, ch ; xor cl, bl ; add byte ptr [rax], al ; ret
0x0000020000149306 : add byte ptr [rax], al ; add cl, ch ; xor cl, ch ; add byte ptr [rax], al ; ret
0x0000020000149706 : add byte ptr [rax], al ; add cl, ch ; xor cl, cl ; add byte ptr [rax], al ; ret
0x0000020000149206 : add byte ptr [rax], al ; add cl, ch ; xor cl, dh ; add byte ptr [rax], al ; ret
0x0000020000149606 : add byte ptr [rax], al ; add cl, ch ; xor cl, dl ; add byte ptr [rax], al ; ret
0x0000020000148c06 : add byte ptr [rax], al ; add cl, ch ; xor dl, ah ; add byte ptr [rax], al ; ret
0x0000020000149006 : add byte ptr [rax], al ; add cl, ch ; xor dl, al ; add byte ptr [rax], al ; ret
0x0000020000148906 : add byte ptr [rax], al ; add cl, ch ; xor dl, bh ; add byte ptr [rax], al ; ret
0x0000020000148d06 : add byte ptr [rax], al ; add cl, ch ; xor dl, bl ; add byte ptr [rax], al ; ret
0x0000020000148b06 : add byte ptr [rax], al ; add cl, ch ; xor dl, ch ; add byte ptr [rax], al ; ret
0x0000020000148f06 : add byte ptr [rax], al ; add cl, ch ; xor dl, cl ; add byte ptr [rax], al ; ret
0x0000020000148a06 : add byte ptr [rax], al ; add cl, ch ; xor dl, dh ; add byte ptr [rax], al ; ret
0x0000020000148e06 : add byte ptr [rax], al ; add cl, ch ; xor dl, dl ; add byte ptr [rax], al ; ret
0x00000200004fe9a0 : add byte ptr [rax], al ; add dh, bh ; ret
0x0000020000021962 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000554b71 : add byte ptr [rax], al ; add dh, dh ; ret 0x413f
0x00000200001a26f5 : add byte ptr [rax], al ; add dh, dh ; ret 0x4402
0x00000200001bc4c3 : add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0x00000200001d3fc1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x0000020000478790 : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000002000066a552 : add byte ptr [rax], al ; add dh, dh ; ret 0x7410
0x0000020000018659 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000020000113fd3 : add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0x000002000047877b : add byte ptr [rax], al ; add dh, dh ; ret 0x7510
0x0000020000097fe4 : add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x000002000009c4d0 : add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x000002000043d1b7 : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x000002000005605b : add byte ptr [rax], al ; add dh, dh ; ret 0xf07
0x000002000005665f : add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x00000200005bde96 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x000002000011fe0b : add byte ptr [rax], al ; add dh, dh ; ret 0xf3f
0x000002000009ce9e : add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000a6560 : add byte ptr [rax], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8948
0x0000020000114cc1 : add byte ptr [rax], al ; add dword ptr [rax - 0x75], ecx ; ret
0x000002000023c7af : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000044d16 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001772f6 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200005c16ef : add byte ptr [rax], al ; add dword ptr [rax], eax ; jmp 0x200005c1762
0x00000200000268e0 : add byte ptr [rax], al ; add dword ptr [rax], eax ; mov dword ptr [rcx], eax ; mov al, 1 ; ret
0x00000200004642fc : add byte ptr [rax], al ; add dword ptr [rax], eax ; mov eax, r8d ; ret
0x00000200006aa619 : add byte ptr [rax], al ; add dword ptr [rax], eax ; or byte ptr [rdi], 0x85 ; ret
0x000002000045693e : add byte ptr [rax], al ; add dword ptr [rax], eax ; ret
0x00000200001e57ab : add byte ptr [rax], al ; add dword ptr [rbp + 2], esi ; mov al, 1 ; ret
0x000002000007c635 : add byte ptr [rax], al ; add dword ptr [rbp + 5], esi ; add rsp, 0x38 ; ret
0x00000200001a3000 : add byte ptr [rax], al ; add dword ptr [rbx - 0xa], esi ; ret
0x000002000046228f : add byte ptr [rax], al ; add dword ptr [rbx], eax ; ret
0x0000020000569878 : add byte ptr [rax], al ; add dword ptr [rcx + 0xac], eax ; ret
0x00000200000ed032 : add byte ptr [rax], al ; add dword ptr [rcx + rax - 0x3d], esi ; mov al, 1 ; ret
0x00000200006b761a : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf41
0x000002000065344d : add byte ptr [rax], al ; add eax, 0xfc0920f ; mov dh, 0xc0 ; ret
0x00000200006f8476 : add byte ptr [rax], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0
0x0000020000066dd9 : add byte ptr [rax], al ; add ebx, ebp ; ret 0xcccc
0x00000200003e0de0 : add byte ptr [rax], al ; add edi, edi ; ret
0x0000020000152adf : add byte ptr [rax], al ; add r9, r8 ; jmp r9
0x0000020000157b65 : add byte ptr [rax], al ; add rax, 0x3e0 ; ret
0x00000200003de21f : add byte ptr [rax], al ; add rax, 0x610 ; ret
0x00000200007d179c : add byte ptr [rax], al ; add rax, 0x8b8 ; ret
0x0000020000018c55 : add byte ptr [rax], al ; add rax, 0xbc0 ; ret
0x0000020000489455 : add byte ptr [rax], al ; add rax, 0xd40 ; ret
0x00000200003c9a80 : add byte ptr [rax], al ; add rax, rcx ; add rsp, 0x38 ; ret
0x000002000010abba : add byte ptr [rax], al ; add rax, rcx ; ret
0x00000200000808d5 : add byte ptr [rax], al ; add rax, rdx ; ret
0x000002000024c493 : add byte ptr [rax], al ; add rax, rdx ; sub rsp, 0x28 ; call rax
0x00000200001f9b88 : add byte ptr [rax], al ; add rcx, 8 ; call 0x20000035dd4
0x000002000016b306 : add byte ptr [rax], al ; add rcx, r13 ; call 0x20000157547
0x0000020000213fdc : add byte ptr [rax], al ; add rdi, 4 ; jmp 0x20000213fae
0x00000200000bb6c5 : add byte ptr [rax], al ; add rdi, rax ; jmp 0x200000bb694
0x00000200007a74df : add byte ptr [rax], al ; add rdi, rbx ; mov r13d, ebx ; jmp 0x200007a74bf
0x000002000007e974 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x0000020000114a47 : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000020000137c3b : add byte ptr [rax], al ; add rsp, 0x178 ; ret
0x0000020000568242 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x0000020000157534 : add byte ptr [rax], al ; add rsp, 0x1a8 ; ret
0x00000200001bfcca : add byte ptr [rax], al ; add rsp, 0x1c8 ; ret
0x000002000003ef28 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000147381 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000002000001613e : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e372b : add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000004fd1 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000057ee8a : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x0000020000007c94 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000015ba82 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000214d2 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000057bb40 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x00000200000d382e : add byte ptr [rax], al ; add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x000002000000e6fe : add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000015b5dc : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000002000000c8f8 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x000002000004392e : add byte ptr [rax], al ; add rsp, 0x40 ; pop rdi ; ret
0x000002000002101c : add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000002000015d9cd : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000002000000296c : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x00000200003d9056 : add byte ptr [rax], al ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000554c : add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200000707cb : add byte ptr [rax], al ; add rsp, 0x60 ; pop r12 ; ret
0x000002000057b378 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000516d71 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000235844 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000d4f56 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rdi ; ret
0x0000020000147e7b : add byte ptr [rax], al ; add rsp, 0x68 ; pop rdi ; pop rsi ; ret
0x0000020000086114 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000002000005143e : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x00000200000d50f5 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000010a0d : add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000085510 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; ret
0x00000200007cf8a9 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rsi ; ret
0x0000020000016a62 : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x00000200000de9ae : add byte ptr [rax], al ; add rsp, 0x88 ; ret
0x00000200003cc239 : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x00000200000df533 : add byte ptr [rax], al ; add rsp, 0xc8 ; ret
0x0000020000125ce2 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000002000049e534 : add byte ptr [rax], al ; add word ptr [rcx + 0xa], dx ; ret
0x00000200001d3ff0 : add byte ptr [rax], al ; add word ptr [rip + 0x1513ff], ax ; ret
0x000002000003c760 : add byte ptr [rax], al ; and al, 1 ; ret
0x000002000001ea67 : add byte ptr [rax], al ; and dword ptr [rdi + 0x38], 0xfffffffb ; jmp 0x2000001ea39
0x000002000003affa : add byte ptr [rax], al ; and eax, 0x10001 ; ret
0x000002000021759e : add byte ptr [rax], al ; and eax, 1 ; ret
0x000002000003303c : add byte ptr [rax], al ; and eax, r8d ; shr eax, 0xe ; ret
0x000002000042dd08 : add byte ptr [rax], al ; and rsi, 0xfffffffffffffffc ; call 0x200000564a9
0x000002000021c2ce : add byte ptr [rax], al ; and word ptr [rdx + rax*2], cx ; ret
0x00000200001b2ca9 : add byte ptr [rax], al ; bts dword ptr [rax + 0x40], 9 ; ret
0x000002000021bc2f : add byte ptr [rax], al ; bts dword ptr [rax], ebx ; pop rbx ; ret
0x000002000010b5b3 : add byte ptr [rax], al ; bts dword ptr [rax], edx ; ret
0x000002000046b4c6 : add byte ptr [rax], al ; bts ebx, 9 ; call 0x200000903a5
0x00000200003e35cc : add byte ptr [rax], al ; call 0x200000036c9
0x00000200003e5599 : add byte ptr [rax], al ; call 0x200000057cd
0x00000200003e75a4 : add byte ptr [rax], al ; call 0x200000087ed
0x00000200003e775a : add byte ptr [rax], al ; call 0x20000008db5
0x00000200003e7a06 : add byte ptr [rax], al ; call 0x2000000eb51
0x0000020000672adf : add byte ptr [rax], al ; call 0x2000000ed34
0x00000200001b95bb : add byte ptr [rax], al ; call 0x2000000ed38
0x0000020000475b45 : add byte ptr [rax], al ; call 0x20000061dc4
0x0000020000433f94 : add byte ptr [rax], al ; call 0x20000061dc5
0x000002000043975d : add byte ptr [rax], al ; call 0x20000068455
0x0000020000441a18 : add byte ptr [rax], al ; call 0x2000006c735
0x0000020000449561 : add byte ptr [rax], al ; call 0x2000006d205
0x0000020000021071 : add byte ptr [rax], al ; call 0x2000006d284
0x00000200004563ac : add byte ptr [rax], al ; call 0x20000077085
0x0000020000448417 : add byte ptr [rax], al ; call 0x20000077c45
0x00000200004484a7 : add byte ptr [rax], al ; call 0x20000077da5
0x000002000044e7ad : add byte ptr [rax], al ; call 0x20000078b95
0x00000200004511dd : add byte ptr [rax], al ; call 0x2000007b875
0x00000200004527ea : add byte ptr [rax], al ; call 0x2000007d085
0x0000020000461844 : add byte ptr [rax], al ; call 0x2000008e159
0x000002000046c158 : add byte ptr [rax], al ; call 0x2000009044d
0x00000200004c500c : add byte ptr [rax], al ; call 0x20000099cf8
0x000002000046bf57 : add byte ptr [rax], al ; call 0x2000009a735
0x0000020000006a2f : add byte ptr [rax], al ; call 0x200000a0dc8
0x00000200004c0e42 : add byte ptr [rax], al ; call 0x200000bd0d4
0x000002000043268e : add byte ptr [rax], al ; call 0x200000be964
0x000002000049a3bf : add byte ptr [rax], al ; call 0x200000be965
0x00000200000f776f : add byte ptr [rax], al ; call 0x200000c3a04
0x00000200000c23d6 : add byte ptr [rax], al ; call 0x200000c3a08
0x000002000049c8f9 : add byte ptr [rax], al ; call 0x200000c5b15
0x00000200004b8d53 : add byte ptr [rax], al ; call 0x200000e5345
0x00000200004dbe08 : add byte ptr [rax], al ; call 0x200000e8064
0x00000200004bd964 : add byte ptr [rax], al ; call 0x200000e8065
0x00000200004baac6 : add byte ptr [rax], al ; call 0x200000e9995
0x000002000061d77a : add byte ptr [rax], al ; call 0x200000e99c4
0x00000200004baae8 : add byte ptr [rax], al ; call 0x200000e99c5
0x000002000050d192 : add byte ptr [rax], al ; call 0x200000e99c8
0x000002000014f19e : add byte ptr [rax], al ; call 0x200000eb3e4
0x00000200004e4064 : add byte ptr [rax], al ; call 0x200000f0304
0x00000200004c329b : add byte ptr [rax], al ; call 0x200000f0305
0x00000200000342e8 : add byte ptr [rax], al ; call 0x200000f05b4
0x00000200004c4918 : add byte ptr [rax], al ; call 0x200000f1425
0x00000200004d11a4 : add byte ptr [rax], al ; call 0x200000f7a75
0x0000020000203bb3 : add byte ptr [rax], al ; call 0x20000112e5d
0x0000020000607d5a : add byte ptr [rax], al ; call 0x20000113fb0
0x00000200004e8fac : add byte ptr [rax], al ; call 0x20000114ac5
0x0000020000724a4b : add byte ptr [rax], al ; call 0x20000140d20
0x000002000052206d : add byte ptr [rax], al ; call 0x20000147f75
0x0000020000519d74 : add byte ptr [rax], al ; call 0x20000148075
0x000002000022be02 : add byte ptr [rax], al ; call 0x200001480d4
0x0000020000519afc : add byte ptr [rax], al ; call 0x20000148175
0x000002000051d8f7 : add byte ptr [rax], al ; call 0x20000148375
0x0000020000521ffc : add byte ptr [rax], al ; call 0x200001484f5
0x000002000051ed69 : add byte ptr [rax], al ; call 0x20000148555
0x000002000066c548 : add byte ptr [rax], al ; call 0x200001487b4
0x000002000051c079 : add byte ptr [rax], al ; call 0x2000014b515
0x000002000015f3e5 : add byte ptr [rax], al ; call 0x2000014b6e4
0x00000200004b2807 : add byte ptr [rax], al ; call 0x2000014ea54
0x00000200006f4f60 : add byte ptr [rax], al ; call 0x200001511c4
0x0000020000705612 : add byte ptr [rax], al ; call 0x200001518a4
0x000002000040b665 : add byte ptr [rax], al ; call 0x20000157884
0x0000020000528220 : add byte ptr [rax], al ; call 0x20000157885
0x00000200005d0688 : add byte ptr [rax], al ; call 0x20000157886
0x00000200005aa132 : add byte ptr [rax], al ; call 0x200001d20f5
0x00000200005acd17 : add byte ptr [rax], al ; call 0x200001d36d1
0x00000200005ac4be : add byte ptr [rax], al ; call 0x200001dbf3d
0x00000200005ac4d4 : add byte ptr [rax], al ; call 0x200001dc1a5
0x0000020000709ffa : add byte ptr [rax], al ; call 0x2000021fc75
0x00000200006257d8 : add byte ptr [rax], al ; call 0x2000024da45
0x00000200003d2a5e : add byte ptr [rax], al ; call 0x200003d0700
0x00000200007bc247 : add byte ptr [rax], al ; call 0x200003e5f89
0x00000200007d10f5 : add byte ptr [rax], al ; call 0x200003f8b59
0x0000020000601a9d : add byte ptr [rax], al ; call 0x20000407fec
0x000002000053cbd9 : add byte ptr [rax], al ; call 0x20000408e70
0x0000020000591c8c : add byte ptr [rax], al ; call 0x2000040deb4
0x0000020000518650 : add byte ptr [rax], al ; call 0x200004548b8
0x00000200004c803a : add byte ptr [rax], al ; call 0x20000484314
0x0000020000498a0c : add byte ptr [rax], al ; call 0x20000494ce4
0x000002000000ce0c : add byte ptr [rax], al ; call 0x200004990c0
0x0000020000598cb9 : add byte ptr [rax], al ; call 0x200004d4f34
0x00000200004f1647 : add byte ptr [rax], al ; call 0x200004fd884
0x0000020000631e04 : add byte ptr [rax], al ; call 0x200004fe0a0
0x0000020000457108 : add byte ptr [rax], al ; call 0x2000054334c
0x00000200007b6a9f : add byte ptr [rax], al ; call 0x20000562cdc
0x00000200006ca23a : add byte ptr [rax], al ; call 0x200006c64ac
0x00000200006ca6a4 : add byte ptr [rax], al ; call 0x200006c6938
0x0000020000799c9c : add byte ptr [rax], al ; call 0x20000795f10
0x00000200003ce3d9 : add byte ptr [rax], al ; call qword ptr [r15]
0x00000200000c2e75 : add byte ptr [rax], al ; call qword ptr [rax]
0x00000200000ca70e : add byte ptr [rax], al ; call qword ptr [rip + 0x18c25a]
0x000002000023c5ed : add byte ptr [rax], al ; call qword ptr [rsi + 0x168]
0x000002000015638e : add byte ptr [rax], al ; call r10
0x00000200001d6dc0 : add byte ptr [rax], al ; call r12
0x000002000045cb7f : add byte ptr [rax], al ; call r14
0x00000200005f458f : add byte ptr [rax], al ; call r15
0x00000200004d6a95 : add byte ptr [rax], al ; call r8
0x00000200001bc710 : add byte ptr [rax], al ; call r9
0x000002000011449b : add byte ptr [rax], al ; call rax
0x000002000070606d : add byte ptr [rax], al ; call rcx
0x0000020000120c22 : add byte ptr [rax], al ; call rdi
0x0000020000555ddc : add byte ptr [rax], al ; call rdx
0x000002000011e9a3 : add byte ptr [rax], al ; call rsi
0x00000200007d89f6 : add byte ptr [rax], al ; clc ; ret
0x0000020000117b8b : add byte ptr [rax], al ; cld ; ret
0x000002000014f003 : add byte ptr [rax], al ; cli ; add rsp, 8 ; ret
0x0000020000541b6f : add byte ptr [rax], al ; cmove eax, ecx ; ret
0x0000020000032c33 : add byte ptr [rax], al ; cmove eax, r8d ; ret
0x0000020000719434 : add byte ptr [rax], al ; cmove edx, r9d ; mov dword ptr [r8], edx ; ret
0x000002000013d203 : add byte ptr [rax], al ; cmovg eax, ecx ; ret
0x000002000010327f : add byte ptr [rax], al ; cmovne eax, ecx ; ret
0x00000200003db7e3 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000200007d5486 : add byte ptr [rax], al ; cmovne rax, r8 ; mov qword ptr [rdx], rax ; ret
0x0000020000091db3 : add byte ptr [rax], al ; cmp al, 2 ; je 0x20000091dc0 ; ret
0x0000020000091db3 : add byte ptr [rax], al ; cmp al, 2 ; je 0x20000091dc3 ; ret
0x00000200000c60f0 : add byte ptr [rax], al ; cmp al, dl ; cmovb edx, eax ; mov al, dl ; ret
0x000002000009d982 : add byte ptr [rax], al ; cmp cl, 0xc0 ; je 0x2000009d9a6 ; xor eax, eax ; ret
0x000002000007daa0 : add byte ptr [rax], al ; cmp cl, dl ; mov eax, ecx ; cmovg eax, edx ; jmp 0x2000007dab6
0x0000020000211828 : add byte ptr [rax], al ; cmp cx, ax ; jae 0x2000021183b ; xor al, al ; ret
0x0000020000028ead : add byte ptr [rax], al ; cmp dl, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200000e4648 : add byte ptr [rax], al ; cmp dl, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x8b4c
0x00000200000d307f : add byte ptr [rax], al ; cmp dl, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000105157 : add byte ptr [rax], al ; cmp dl, 0xff ; dec dword ptr [rbx + rcx*4 + 0x3c] ; ret 0x8d48
0x0000020000017189 : add byte ptr [rax], al ; cmp dl, 0xff ; dec dword ptr [rcx - 0x75] ; ret
0x000002000065e5c3 : add byte ptr [rax], al ; cmp dl, 0xff ; dec dword ptr [rcx - 0x7d] ; ret 0x4c28
0x0000020000194526 : add byte ptr [rax], al ; cmp dl, 0xff ; dec dword ptr [rdi] ; mov dh, 4 ; ret 0xf024
0x00000200000b5560 : add byte ptr [rax], al ; cmp dl, 0xff ; dec dword ptr [rdi] ; xchg eax, edx ; ret 0xf48
0x00000200000b8466 : add byte ptr [rax], al ; cmp dl, 0xff ; push rsi ; ret
0x00000200000b89e1 : add byte ptr [rax], al ; cmp dl, 0xff ; push rsi ; ret 0x7502
0x00000200000b3c09 : add byte ptr [rax], al ; cmp dl, 0xff ; push rsi ; ret 0xf04
0x000002000062155a : add byte ptr [rax], al ; cmp dword ptr [rdx], ecx ; cmove eax, r8d ; ret
0x000002000040aa49 : add byte ptr [rax], al ; cmp eax, 1 ; je 0x2000040aa58 ; ret
0x0000020000087b9d : add byte ptr [rax], al ; cmp eax, edx ; ja 0x20000087bae ; mov al, 1 ; ret
0x000002000044f366 : add byte ptr [rax], al ; cmp eax, r8d ; jne 0x2000044f35b ; xor eax, eax ; ret
0x00000200004ac577 : add byte ptr [rax], al ; cmp ecx, 4 ; jne 0x200004ac58a ; xor eax, eax ; ret
0x00000200004ac55a : add byte ptr [rax], al ; cmp edx, eax ; cmovb edx, eax ; mov eax, edx ; ret
0x0000020000072953 : add byte ptr [rax], al ; cmp qword ptr [rax], rax ; je 0x20000072954 ; mov al, 1 ; ret
0x0000020000604880 : add byte ptr [rax], al ; cmp r10d, ecx ; jae 0x20000604893 ; mov al, 1 ; ret
0x00000200006b1e1b : add byte ptr [rax], al ; cmp r8d, r9d ; jb 0x200006b1dea ; jmp 0x200006b1e2d
0x000002000014e924 : add byte ptr [rax], al ; cmp rcx, rdx ; jb 0x2000014e8e7 ; ret
0x0000020000144a47 : add byte ptr [rax], al ; cmp rcx, rdx ; sete al ; ret
0x00000200000ddbd0 : add byte ptr [rax], al ; cmp rdx, rax ; ja 0x200000ddbe4 ; sub rax, rdx ; ret
0x00000200007d88de : add byte ptr [rax], al ; cwde ; ret 0x407d
0x000002000004bc8d : add byte ptr [rax], al ; dec dword ptr [rax - 0x75] ; ret 0x2349
0x00000200000e67c6 : add byte ptr [rax], al ; dec dword ptr [rcx - 0x75] ; ret
0x00000200001e4ae7 : add byte ptr [rax], al ; dec qword ptr [rdx + 0xd0] ; ret
0x000002000001be47 : add byte ptr [rax], al ; dec word ptr [rax + 0x1e4] ; ret
0x000002000001d4f7 : add byte ptr [rax], al ; dec word ptr [rax + 0x1e6] ; ret
0x000002000014bd6e : add byte ptr [rax], al ; fnclex ; wait ; fnstcw word ptr [rcx] ; ret
0x000002000014c376 : add byte ptr [rax], al ; fxsave ptr [rcx] ; add rsp, 0x28 ; ret
0x0000020000129907 : add byte ptr [rax], al ; inc dword ptr [rbx] ; add byte ptr [rdx], dh ; ret 0x724
0x0000020000210465 : add byte ptr [rax], al ; inc dword ptr [rcx + 0x24c] ; ret
0x0000020000715740 : add byte ptr [rax], al ; inc dword ptr [rdx + 0x8060] ; ret
0x00000200000990ed : add byte ptr [rax], al ; inc eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000221ba1 : add byte ptr [rax], al ; inc edx ; jmp 0x20000221b72
0x00000200004475d6 : add byte ptr [rax], al ; inc edx ; jmp 0x200004475ba
0x0000020000027995 : add byte ptr [rax], al ; inc r10d ; jmp 0x200000279c8
0x000002000048893d : add byte ptr [rax], al ; inc rdx ; jmp 0x2000048891d
0x00000200005d686b : add byte ptr [rax], al ; int 0x29
0x000002000043216d : add byte ptr [rax], al ; ja 0x200004321dd ; add rsp, 0x38 ; ret
0x00000200004a651c : add byte ptr [rax], al ; ja 0x200004a6525 ; ret
0x00000200004aa7b7 : add byte ptr [rax], al ; ja 0x200004aa7c0 ; ret
0x00000200005e0c5f : add byte ptr [rax], al ; ja 0x200005e0c7f ; mov rcx, rbx ; call 0x2000005ce79
0x000002000012537a : add byte ptr [rax], al ; jb 0x2000012534a ; add rsp, 0x38 ; ret
0x0000020000719418 : add byte ptr [rax], al ; jb 0x20000719425 ; xor eax, eax ; ret
0x00000200007ab53c : add byte ptr [rax], al ; jb 0x200007ab52f ; add rsp, 0x30 ; pop rbx ; ret
0x00000200007b1f7b : add byte ptr [rax], al ; jb 0x200007b1f30 ; ret
0x000002000065dc4e : add byte ptr [rax], al ; jbe 0x2000065dc3e ; xor eax, eax ; ret
0x000002000002be99 : add byte ptr [rax], al ; je 0x2000002beaa ; add rsp, 0x28 ; ret
0x000002000003ace0 : add byte ptr [rax], al ; je 0x2000003acf3 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000003feb8 : add byte ptr [rax], al ; je 0x2000003fecb ; mov eax, 1 ; ret
0x000002000004dd26 : add byte ptr [rax], al ; je 0x2000004dd13 ; mov al, 1 ; ret
0x000002000006ba2c : add byte ptr [rax], al ; je 0x2000006ba0f ; mov al, 1 ; ret
0x0000020000071704 : add byte ptr [rax], al ; je 0x200000716fb ; mov eax, 2 ; ret
0x000002000009883c : add byte ptr [rax], al ; je 0x20000098830 ; mov eax, 2 ; ret
0x00000200000f95ce : add byte ptr [rax], al ; je 0x200000f95db ; mov al, 1 ; ret
0x00000200001cf6ce : add byte ptr [rax], al ; je 0x200001cf6e0 ; mov eax, 1 ; ret
0x00000200001f664a : add byte ptr [rax], al ; je 0x200001f666e ; mov rcx, r15 ; call 0x20000042939
0x000002000021e6a0 : add byte ptr [rax], al ; je 0x2000021e6b3 ; mov eax, 0x30 ; ret
0x0000020000433b75 : add byte ptr [rax], al ; je 0x20000433b82 ; mov al, 1 ; ret
0x00000200004629a0 : add byte ptr [rax], al ; je 0x20000462977 ; xor eax, eax ; ret
0x00000200004bab42 : add byte ptr [rax], al ; je 0x200004bab4b ; ret
0x00000200005029d7 : add byte ptr [rax], al ; je 0x200005029e8 ; add rsp, 0x28 ; ret
0x0000020000497590 : add byte ptr [rax], al ; je 0x200005ced1e ; ret
0x00000200006802a6 : add byte ptr [rax], al ; je 0x200006802b4 ; and eax, 0x1f ; ret
0x00000200006f40e3 : add byte ptr [rax], al ; je 0x200006f40f2 ; xor al, al ; ret
0x0000020000711f29 : add byte ptr [rax], al ; je 0x20000711f3c ; mov eax, 1 ; ret
0x00000200007d4f4e : add byte ptr [rax], al ; je 0x200007d4f63 ; or eax, 0xffffffff ; ret
0x00000200000fa052 : add byte ptr [rax], al ; jg 0x200000fa077 ; mov eax, 1 ; ret
0x000002000062f405 : add byte ptr [rax], al ; jg 0x2000062f412 ; mov al, 1 ; ret
0x00000200000fa00b : add byte ptr [rax], al ; jl 0x200000fa01e ; mov eax, 1 ; ret
0x0000020000002e62 : add byte ptr [rax], al ; jmp 0x20000002b04
0x0000020000002ed0 : add byte ptr [rax], al ; jmp 0x20000002b1b
0x0000020000002f39 : add byte ptr [rax], al ; jmp 0x20000002b2e
0x0000020000162472 : add byte ptr [rax], al ; jmp 0x2000000e6de
0x000002000001c3b1 : add byte ptr [rax], al ; jmp 0x2000001c2a2
0x000002000001f7d5 : add byte ptr [rax], al ; jmp 0x2000001f79f
0x0000020000027503 : add byte ptr [rax], al ; jmp 0x200000274cc
0x000002000005a0b2 : add byte ptr [rax], al ; jmp 0x2000005a1dd
0x000002000005e07d : add byte ptr [rax], al ; jmp 0x2000005e046
0x00000200001852b1 : add byte ptr [rax], al ; jmp 0x200000614d0
0x0000020000075142 : add byte ptr [rax], al ; jmp 0x200000750cc
0x0000020000189c21 : add byte ptr [rax], al ; jmp 0x20000075ec0
0x00000200000783c6 : add byte ptr [rax], al ; jmp 0x2000007895b
0x000002000007d26b : add byte ptr [rax], al ; jmp 0x2000007d192
0x000002000007e198 : add byte ptr [rax], al ; jmp 0x2000007e162
0x000002000007e73e : add byte ptr [rax], al ; jmp 0x2000007e708
0x0000020000092c4a : add byte ptr [rax], al ; jmp 0x20000092a25
0x0000020000190f02 : add byte ptr [rax], al ; jmp 0x2000009402a
0x00000200000973fc : add byte ptr [rax], al ; jmp 0x20000095d32
0x00000200000999d1 : add byte ptr [rax], al ; jmp 0x20000099900
0x0000020000195eff : add byte ptr [rax], al ; jmp 0x200000a7878
0x00000200000a88e0 : add byte ptr [rax], al ; jmp 0x200000a873c
0x00000200000acdc0 : add byte ptr [rax], al ; jmp 0x200000acd8a
0x00000200000ea199 : add byte ptr [rax], al ; jmp 0x200000e9e9d
0x00000200000eafab : add byte ptr [rax], al ; jmp 0x200000eabc1
0x000002000017633e : add byte ptr [rax], al ; jmp 0x2000011262d
0x0000020000135903 : add byte ptr [rax], al ; jmp 0x20000135949
0x000002000013c8c1 : add byte ptr [rax], al ; jmp 0x2000013c87b
0x0000020000142c9b : add byte ptr [rax], al ; jmp 0x20000142be1
0x0000020000149d47 : add byte ptr [rax], al ; jmp 0x20000156044
0x00000200001af61d : add byte ptr [rax], al ; jmp 0x200001af5e7
0x00000200001c4b3a : add byte ptr [rax], al ; jmp 0x200001c4b7e
0x00000200001d793c : add byte ptr [rax], al ; jmp 0x200001d7925
0x00000200001de703 : add byte ptr [rax], al ; jmp 0x200001de836
0x00000200001e3c97 : add byte ptr [rax], al ; jmp 0x200001e3e78
0x00000200001fc21f : add byte ptr [rax], al ; jmp 0x200001fc2bd
0x00000200003dfa57 : add byte ptr [rax], al ; jmp 0x200003dfa1d
0x00000200003ede14 : add byte ptr [rax], al ; jmp 0x200003edddd
0x0000020000462aeb : add byte ptr [rax], al ; jmp 0x20000462ab5
0x00000200005c1771 : add byte ptr [rax], al ; jmp 0x200004664cc
0x000002000046c7fc : add byte ptr [rax], al ; jmp 0x2000046be68
0x00000200005c31be : add byte ptr [rax], al ; jmp 0x2000046f479
0x000002000047fe06 : add byte ptr [rax], al ; jmp 0x2000047fd76
0x0000020000499e56 : add byte ptr [rax], al ; jmp 0x20000499e1f
0x00000200004b3dfa : add byte ptr [rax], al ; jmp 0x200004b3dc3
0x00000200005d8cff : add byte ptr [rax], al ; jmp 0x200004c5005
0x00000200004c961c : add byte ptr [rax], al ; jmp 0x200004c9463
0x00000200004e4085 : add byte ptr [rax], al ; jmp 0x200004e3af0
0x00000200005e31c6 : add byte ptr [rax], al ; jmp 0x200004f07d2
0x00000200005fbe5d : add byte ptr [rax], al ; jmp 0x20000564573
0x0000020000593644 : add byte ptr [rax], al ; jmp 0x20000593652
0x00000200005a7aa7 : add byte ptr [rax], al ; jmp 0x200005a8242
0x00000200005b3daf : add byte ptr [rax], al ; jmp 0x200005b3dcd
0x00000200005d4b5d : add byte ptr [rax], al ; jmp 0x200005d4b74
0x000002000068534a : add byte ptr [rax], al ; jmp 0x20000685314
0x0000020000692f62 : add byte ptr [rax], al ; jmp 0x20000692f9c
0x00000200006cfce5 : add byte ptr [rax], al ; jmp 0x200006cfcf3
0x00000200006f3df5 : add byte ptr [rax], al ; jmp 0x200006f3d1a
0x000002000070c932 : add byte ptr [rax], al ; jmp 0x2000070cace
0x0000020000155dc0 : add byte ptr [rax], al ; jmp r11
0x000002000024c4b3 : add byte ptr [rax], al ; jmp r8
0x0000020000147b9e : add byte ptr [rax], al ; jmp rax
0x000002000014e4c4 : add byte ptr [rax], al ; jmp rcx
0x0000020000151347 : add byte ptr [rax], al ; jmp rdx
0x000002000000bd59 : add byte ptr [rax], al ; jne 0x2000000bd62 ; ret
0x000002000001b7a5 : add byte ptr [rax], al ; jne 0x2000001b7b8 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000024189 : add byte ptr [rax], al ; jne 0x2000002419a ; add rsp, 0x28 ; ret
0x0000020000025765 : add byte ptr [rax], al ; jne 0x20000025772 ; xor al, al ; ret
0x000002000002cacf : add byte ptr [rax], al ; jne 0x2000002cad8 ; ret
0x0000020000056b1e : add byte ptr [rax], al ; jne 0x20000056b3a ; mov qword ptr [r9], rax ; mov eax, r10d ; ret
0x000002000009dc10 : add byte ptr [rax], al ; jne 0x2000009dc34 ; ret
0x00000200000c3d10 : add byte ptr [rax], al ; jne 0x200000c3d35 ; ret
0x00000200000e835a : add byte ptr [rax], al ; jne 0x200000e8367 ; mov al, 1 ; ret
0x00000200000ed070 : add byte ptr [rax], al ; jne 0x200000ed083 ; mov eax, 1 ; ret
0x00000200000f75b5 : add byte ptr [rax], al ; jne 0x200000f75be ; ret
0x00000200000fa060 : add byte ptr [rax], al ; jne 0x200000fa06d ; xor eax, eax ; ret
0x00000200000fcec3 : add byte ptr [rax], al ; jne 0x200000fced4 ; shl rax, 0x14 ; ret
0x0000020000156388 : add byte ptr [rax], al ; jne 0x20000156734 ; call r10
0x00000200001cb9f2 : add byte ptr [rax], al ; jne 0x200001cb9ff ; xor al, al ; ret
0x00000200001dbd25 : add byte ptr [rax], al ; jne 0x200001dbd37 ; mov eax, 1 ; ret
0x00000200001e1989 : add byte ptr [rax], al ; jne 0x200001e19b7 ; mov eax, 1 ; ret
0x00000200004475d0 : add byte ptr [rax], al ; jne 0x200004476bf ; inc edx ; jmp 0x200004475c0
0x0000020000455aad : add byte ptr [rax], al ; jne 0x20000455aba ; xor eax, eax ; ret
0x000002000048d938 : add byte ptr [rax], al ; jne 0x2000048d94b ; add rsp, 0x70 ; pop rbx ; ret
0x00000200004aa098 : add byte ptr [rax], al ; jne 0x200004aa0e3 ; ret
0x00000200004aa6cb : add byte ptr [rax], al ; jne 0x200004aa6a1 ; jmp 0x200004aa698
0x00000200004e4564 : add byte ptr [rax], al ; jne 0x200004e4551 ; xor eax, eax ; ret
0x000002000046f94b : add byte ptr [rax], al ; jne 0x200005c31fe ; ret
0x0000020000625a94 : add byte ptr [rax], al ; jne 0x20000625aa6 ; call 0x2000024da47
0x000002000062680b : add byte ptr [rax], al ; jne 0x2000062681d ; call 0x2000024da47
0x0000020000645361 : add byte ptr [rax], al ; jne 0x20000645374 ; mov eax, 0xc00000bb ; ret
0x00000200006636e3 : add byte ptr [rax], al ; jne 0x200006636de ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c4ee7 : add byte ptr [rax], al ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x00000200005e2a56 : add byte ptr [rax], al ; lea ecx, dword ptr [rdx + 0x7c] ; call 0x2000000ed37
0x00000200005924b7 : add byte ptr [rax], al ; lea ecx, dword ptr [rdx - 8] ; mov eax, dword ptr [rax + rcx*4] ; ret
0x0000020000157937 : add byte ptr [rax], al ; lea r11, qword ptr [r11 + r9*4] ; jmp r11
0x00000200004004cc : add byte ptr [rax], al ; lea r8, qword ptr [rsp + 0x40] ; call r10
0x00000200006da307 : add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 1] ; call rdi
0x00000200006dab29 : add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 2] ; call rdi
0x000002000045d7bb : add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 3] ; call rdi
0x00000200006d95a4 : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 0xb] ; call rsi
0x00000200006d9f4b : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 1] ; call rdi
0x00000200006d8ddf : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 2] ; call rdi
0x000002000045ddd4 : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 6] ; call rsi
0x00000200006dac4b : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 7] ; call rdi
0x00000200003f3b48 : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 8] ; call rsi
0x00000200006db9b2 : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 9] ; call r14
0x00000200006d9025 : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 9] ; call rdi
0x0000020000150f90 : add byte ptr [rax], al ; lea r9, qword ptr [r9 + rdx*4] ; jmp r9
0x00000200004d55aa : add byte ptr [rax], al ; lea rax, qword ptr [rax + rdx*4] ; ret
0x0000020000009930 : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x150d57] ; ret
0x0000020000015c7c : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x30f7fb] ; ret
0x0000020000697c89 : add byte ptr [rax], al ; lea rax, qword ptr [rip - 0x39f4da] ; ret
0x0000020000697c6d : add byte ptr [rax], al ; lea rax, qword ptr [rip - 0x39f4f6] ; ret
0x0000020000697c7b : add byte ptr [rax], al ; lea rax, qword ptr [rip - 0x39f52c] ; ret
0x0000020000697c43 : add byte ptr [rax], al ; lea rax, qword ptr [rip - 0x39f53c] ; ret
0x0000020000697c5f : add byte ptr [rax], al ; lea rax, qword ptr [rip - 0x39f540] ; ret
0x0000020000697c51 : add byte ptr [rax], al ; lea rax, qword ptr [rip - 0x39f58a] ; ret
0x000002000014bd4e : add byte ptr [rax], al ; lea rax, qword ptr [rsp + 8] ; ret
0x000002000051ee0b : add byte ptr [rax], al ; lea rcx, qword ptr [rbp - 0x20] ; call 0x2000013fb99
0x00000200004b0419 : add byte ptr [rax], al ; lea rcx, qword ptr [rbp - 0x28] ; call 0x200000fc6b0
0x000002000051862d : add byte ptr [rax], al ; lea rcx, qword ptr [rbp - 0x28] ; call 0x200004548bc
0x00000200004c66a6 : add byte ptr [rax], al ; lea rcx, qword ptr [rbx + 0x18] ; call 0x200000e8069
0x00000200004dbde4 : add byte ptr [rax], al ; lea rcx, qword ptr [rbx - 0x10] ; call 0x200000e8068
0x000002000014e4bd : add byte ptr [rax], al ; lea rcx, qword ptr [rip + 0x7ed5] ; jmp rcx
0x00000200004c6ed5 : add byte ptr [rax], al ; lea rcx, qword ptr [rsi + 0x10] ; call 0x200000e8069
0x00000200004c109b : add byte ptr [rax], al ; lea rcx, qword ptr [rsi + 0x28] ; call 0x200000e8069
0x000002000002a0e8 : add byte ptr [rax], al ; lea rcx, qword ptr [rsp + 0x20] ; call 0x200000e63b9
0x00000200003db5e0 : add byte ptr [rax], al ; lea rcx, qword ptr [rsp + 0x34] ; call 0x20000157889
0x000002000051d8b7 : add byte ptr [rax], al ; lea rdx, qword ptr [rbp - 0x10] ; call 0x20000148379
0x000002000051d9d3 : add byte ptr [rax], al ; lea rdx, qword ptr [rbp - 0x41] ; call 0x200001480b9
0x000002000051da56 : add byte ptr [rax], al ; lea rdx, qword ptr [rbp - 0x41] ; call 0x200001487b9
0x00000200001acac1 : add byte ptr [rax], al ; lea rdx, qword ptr [rdi + 0x1e0] ; call rax
0x00000200001c4beb : add byte ptr [rax], al ; lea rdx, qword ptr [rsp + 0x28] ; mov cl, bl ; call rax
0x00000200000b43c8 : add byte ptr [rax], al ; lock add byte ptr [rax + 0x33], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x00000200000b4631 : add byte ptr [rax], al ; lock add byte ptr [rbx - 0x75], cl ; ret 0x4808
0x00000200000b1de4 : add byte ptr [rax], al ; lock add byte ptr [rcx - 0x75], al ; fimul dword ptr [rcx - 0x7d] ; ret 0x4d0a
0x00000200001997f9 : add byte ptr [rax], al ; lock dec dword ptr [rax + 0x23] ; ret
0x00000200003d01ce : add byte ptr [rax], al ; lock inc dword ptr [r8] ; ret
0x0000020000114ae3 : add byte ptr [rax], al ; lock inc dword ptr [rax + 0x200] ; ret
0x00000200006ff477 : add byte ptr [rax], al ; lock xadd qword ptr [rcx], rax ; ret
0x00000200002126c0 : add byte ptr [rax], al ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003d3c59 : add byte ptr [rax], al ; mov al, 1 ; ret
0x000002000003b26c : add byte ptr [rax], al ; mov al, byte ptr [rax + 0x22] ; and al, 1 ; ret
0x00000200000417bf : add byte ptr [rax], al ; mov al, byte ptr [rax + 0x232] ; ret
0x00000200002118e7 : add byte ptr [rax], al ; mov al, cl ; add rsp, 0x28 ; ret
0x00000200001bdd85 : add byte ptr [rax], al ; mov al, cl ; ret
0x0000020000680f33 : add byte ptr [rax], al ; mov al, dl ; add rsp, 0x28 ; ret
0x00000200001fc49a : add byte ptr [rax], al ; mov al, dl ; ret
0x00000200002316ab : add byte ptr [rax], al ; mov al, r11b ; ret
0x00000200001c23a5 : add byte ptr [rax], al ; mov al, r8b ; ret
0x00000200001d01ba : add byte ptr [rax], al ; mov al, r9b ; add rsp, 0x28 ; ret
0x000002000005f015 : add byte ptr [rax], al ; mov byte ptr [r9 + 0x6cc], al ; ret
0x000002000013397e : add byte ptr [rax], al ; mov byte ptr [r9 + 5], r11b ; ret
0x000002000008f3ef : add byte ptr [rax], al ; mov byte ptr [rcx + 0x318], 0x3f ; ret
0x0000020000442078 : add byte ptr [rax], al ; mov byte ptr [rsp + 0x20], al ; call 0x2000006cfb9
0x00000200001b2379 : add byte ptr [rax], al ; mov byte ptr [rsp + 0x20], al ; call r8
0x00000200005c6b93 : add byte ptr [rax], al ; mov cl, 0x10 ; call rax
0x00000200005c5e13 : add byte ptr [rax], al ; mov cl, 0x11 ; call rax
0x00000200005c5c63 : add byte ptr [rax], al ; mov cl, 0x12 ; call rax
0x00000200005a9e5a : add byte ptr [rax], al ; mov cl, 0x13 ; call r10
0x00000200005a9e05 : add byte ptr [rax], al ; mov cl, 0x13 ; call rax
0x00000200005dfb35 : add byte ptr [rax], al ; mov cl, 0x14 ; call rax
0x00000200005d10f9 : add byte ptr [rax], al ; mov cl, 0xa ; call r10
0x00000200005ca9e4 : add byte ptr [rax], al ; mov cl, 0xb ; call r10
0x00000200005ca92b : add byte ptr [rax], al ; mov cl, 0xb ; call rax
0x00000200005c67d7 : add byte ptr [rax], al ; mov cl, 0xd ; call rax
0x00000200005ce99b : add byte ptr [rax], al ; mov cl, 0xe ; call rax
0x000002000058f0cd : add byte ptr [rax], al ; mov cl, 0xf ; call rax
0x0000020000713a4a : add byte ptr [rax], al ; mov cl, dil ; mov rbx, rax ; call rsi
0x000002000004341f : add byte ptr [rax], al ; mov cr8, rcx ; ret
0x000002000048e8b9 : add byte ptr [rax], al ; mov dl, 1 ; mov rcx, rbx ; call r15
0x00000200004b9091 : add byte ptr [rax], al ; mov dl, r14b ; call 0x200000e4e98
0x00000200004b9347 : add byte ptr [rax], al ; mov dl, r14b ; call 0x200000e5348
0x0000020000117c60 : add byte ptr [rax], al ; mov dword ptr [r8 + 0xc], ecx ; ret
0x00000200000f73bc : add byte ptr [rax], al ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x0000020000706aac : add byte ptr [rax], al ; mov dword ptr [rax + 4], edx ; add rsp, 0x28 ; ret
0x0000020000026354 : add byte ptr [rax], al ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001bf866 : add byte ptr [rax], al ; mov dword ptr [rbx], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000711020 : add byte ptr [rax], al ; mov dword ptr [rcx + 0x100], eax ; ret
0x0000020000569716 : add byte ptr [rax], al ; mov dword ptr [rcx + 0x14], eax ; ret
0x000002000061c4ba : add byte ptr [rax], al ; mov dword ptr [rcx + 0x18], eax ; ret
0x00000200005ead83 : add byte ptr [rax], al ; mov dword ptr [rcx + 0xa0], r8d ; ret
0x00000200004c5774 : add byte ptr [rax], al ; mov dword ptr [rcx + 0xc], r8d ; jmp 0x200004c57c7
0x000002000059e27b : add byte ptr [rax], al ; mov dword ptr [rcx + r8], eax ; inc edx ; jmp 0x2000059e263
0x00000200006a4221 : add byte ptr [rax], al ; mov dword ptr [rcx], eax ; ret
0x0000020000212d7f : add byte ptr [rax], al ; mov dword ptr [rdx + 0x194], eax ; ret
0x0000020000026468 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000070a9f5 : add byte ptr [rax], al ; mov dword ptr [rip + 0x226b3], ecx ; ret
0x000002000021f1ed : add byte ptr [rax], al ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, rdi ; call rax
0x00000200004cb58a : add byte ptr [rax], al ; mov dword ptr [rsp + 0x5c], edx ; mov eax, edx ; jmp 0x200004cb53c
0x00000200001116b2 : add byte ptr [rax], al ; mov eax, 0xc0000001 ; ret
0x00000200000f41bf : add byte ptr [rax], al ; mov eax, 0xc0000002 ; ret
0x000002000000c342 : add byte ptr [rax], al ; mov eax, 0xc000000d ; ret
0x00000200001ca7e4 : add byte ptr [rax], al ; mov eax, 0xc0000022 ; ret
0x000002000062c3f9 : add byte ptr [rax], al ; mov eax, 0xc0000032 ; ret
0x00000200001e4b29 : add byte ptr [rax], al ; mov eax, 0xc000007b ; ret
0x000002000013ae7e : add byte ptr [rax], al ; mov eax, 0xc00000bb ; ret
0x000002000043ee8f : add byte ptr [rax], al ; mov eax, 0xc00000e7 ; ret
0x000002000053f0bc : add byte ptr [rax], al ; mov eax, 0xc00000f1 ; ret
0x000002000062c389 : add byte ptr [rax], al ; mov eax, 0xc0000206 ; ret
0x0000020000048079 : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000002000016e4e1 : add byte ptr [rax], al ; mov eax, dword ptr [rax + 0x3e0] ; ret
0x00000200001eaaa2 : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; and rax, rdx ; ret
0x0000020000152bdb : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; add rsp, 0x28 ; ret
0x0000020000004169 : add byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004f55fe : add byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000013c700 : add byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000075fef : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003b282 : add byte ptr [rax], al ; mov eax, ecx ; lea rax, qword ptr [rdx + rax*8] ; ret
0x0000020000137dca : add byte ptr [rax], al ; mov eax, ecx ; ret
0x00000200003da617 : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d9543 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d1338 : add byte ptr [rax], al ; mov eax, edx ; jmp 0x200001d12f6
0x00000200001d1486 : add byte ptr [rax], al ; mov eax, edx ; jmp 0x200001d14a5
0x00000200001f75dc : add byte ptr [rax], al ; mov eax, edx ; jmp 0x200001f75ea
0x00000200001d9e71 : add byte ptr [rax], al ; mov eax, edx ; ret
0x00000200000a064e : add byte ptr [rax], al ; mov eax, r8d ; ret
0x0000020000712650 : add byte ptr [rax], al ; mov eax, r9d ; add rsp, 0x28 ; ret
0x0000020000703be1 : add byte ptr [rax], al ; mov eax, r9d ; ret
0x0000020000525a1f : add byte ptr [rax], al ; mov ebx, eax ; call 0x20000148077
0x0000020000625759 : add byte ptr [rax], al ; mov ebx, ebp ; call 0x2000024da47
0x00000200006256bf : add byte ptr [rax], al ; mov ebx, r15d ; call 0x2000024da48
0x0000020000672ada : add byte ptr [rax], al ; mov ecx, 0x92 ; call 0x2000000ed39
0x00000200006f4f5b : add byte ptr [rax], al ; mov ecx, 7 ; call 0x200001511c9
0x0000020000705f9b : add byte ptr [rax], al ; mov ecx, dword ptr [rip - 0x40e4c7] ; call rax
0x00000200000d1a6c : add byte ptr [rax], al ; mov ecx, ebx ; call 0x2000004dd36
0x000002000046221d : add byte ptr [rax], al ; mov ecx, r15d ; call 0x2000008e15c
0x00000200007a8cff : add byte ptr [rax], al ; mov ecx, r15d ; call 0x200003d252c
0x00000200000f76a4 : add byte ptr [rax], al ; mov edi, edx ; call 0x200000c3996
0x0000020000565d2e : add byte ptr [rax], al ; mov edx, 0x100 ; call r14
0x00000200003db7de : add byte ptr [rax], al ; mov edx, 1 ; cmovne eax, edx ; ret
0x000002000024c4ae : add byte ptr [rax], al ; mov edx, 1 ; jmp r8
0x0000020000085930 : add byte ptr [rax], al ; mov edx, ebp ; call rax
0x00000200001cd4da : add byte ptr [rax], al ; mov edx, esi ; mov rcx, rdi ; call 0x20000139781
0x0000020000085e11 : add byte ptr [rax], al ; mov edx, r15d ; call rax
0x000002000016e6d7 : add byte ptr [rax], al ; mov qword ptr [r10], r11 ; ret
0x000002000011aa5a : add byte ptr [rax], al ; mov qword ptr [r11 - 0x18], rax ; call r10
0x0000020000683015 : add byte ptr [rax], al ; mov qword ptr [r8], rax ; ret
0x00000200005698e2 : add byte ptr [rax], al ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x00000200003fa634 : add byte ptr [rax], al ; mov qword ptr [r8], rcx ; mov eax, r9d ; ret
0x00000200000533ac : add byte ptr [rax], al ; mov qword ptr [r8], rdx ; ret
0x000002000022c5a8 : add byte ptr [rax], al ; mov qword ptr [r9 + 0x48], rcx ; xor al, al ; ret
0x0000020000440775 : add byte ptr [rax], al ; mov qword ptr [r9], rcx ; ret
0x000002000049bcb8 : add byte ptr [rax], al ; mov qword ptr [rax + 0x10], r9 ; ret
0x00000200005cfb5e : add byte ptr [rax], al ; mov qword ptr [rax + 0x10], rbx ; jmp 0x2000049bdb8
0x0000020000554ab8 : add byte ptr [rax], al ; mov qword ptr [rax + 0x50], rdx ; ret
0x00000200000bc4a7 : add byte ptr [rax], al ; mov qword ptr [rax + 0x678], rcx ; ret
0x0000020000008f6b : add byte ptr [rax], al ; mov qword ptr [rax + 0x748], rcx ; ret
0x000002000000bff7 : add byte ptr [rax], al ; mov qword ptr [rax + 0x7c0], rcx ; ret
0x00000200000f8a59 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; mov eax, r8d ; ret
0x0000020000525aa6 : add byte ptr [rax], al ; mov qword ptr [rbp + 0x27], r14 ; call 0x200001480d9
0x00000200005217fa : add byte ptr [rax], al ; mov qword ptr [rbp - 0x20], rax ; call 0x2000024da48
0x0000020000525d7b : add byte ptr [rax], al ; mov qword ptr [rbp - 0x28], r14 ; call 0x20000148179
0x00000200007990fb : add byte ptr [rax], al ; mov qword ptr [rbx], rax ; jmp 0x200007990ca
0x000002000061c47c : add byte ptr [rax], al ; mov qword ptr [rcx + 0x18], rax ; ret
0x00000200003e1dec : add byte ptr [rax], al ; mov qword ptr [rcx + 0x2e0], rdx ; ret
0x00000200004487a4 : add byte ptr [rax], al ; mov qword ptr [rcx + 0x410], rax ; ret
0x0000020000541478 : add byte ptr [rax], al ; mov qword ptr [rcx + 0x410], rcx ; ret
0x0000020000604d2c : add byte ptr [rax], al ; mov qword ptr [rcx + 0x98], rax ; ret
0x00000200001d9567 : add byte ptr [rax], al ; mov qword ptr [rcx + 0xb0], rax ; ret
0x000002000068ad04 : add byte ptr [rax], al ; mov qword ptr [rcx + 8], rcx ; ret
0x000002000001f350 : add byte ptr [rax], al ; mov qword ptr [rcx], rax ; mov eax, edx ; ret
0x000002000002e82e : add byte ptr [rax], al ; mov qword ptr [rcx], rax ; ret
0x0000020000212f9a : add byte ptr [rax], al ; mov qword ptr [rdx + 0x378], rax ; ret
0x0000020000008f86 : add byte ptr [rax], al ; mov qword ptr [rdx + 0x748], rcx ; ret
0x000002000000c01e : add byte ptr [rax], al ; mov qword ptr [rdx + 0x7c0], rcx ; ret
0x00000200003fa321 : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; ret
0x00000200004caa47 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200003f759f : add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rax ; call r11
0x00000200001a0333 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x000002000005e077 : add byte ptr [rax], al ; mov r14d, 1 ; jmp 0x2000005e04c
0x000002000022bea6 : add byte ptr [rax], al ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x00000200004cf929 : add byte ptr [rax], al ; mov r8, rbx ; mov rcx, r13 ; call rax
0x000002000059b9fd : add byte ptr [rax], al ; mov r8d, r10d ; call rax
0x000002000001bed8 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x1c8] ; ret
0x0000020000041e2b : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x220] ; ret
0x0000020000627a5b : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x28] ; ret
0x000002000020b8f3 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x000002000020b8e3 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; ret
0x000002000001e22e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x3a8] ; ret
0x00000200001dffba : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x480] ; ret
0x0000020000044647 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x630] ; ret
0x0000020000028b17 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x638] ; ret
0x000002000001e117 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x678] ; ret
0x0000020000447cba : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x688] ; ret
0x00000200000f7497 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x748] ; ret
0x000002000001be67 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0xb8] ; ret
0x0000020000189640 : add byte ptr [rax], al ; mov rax, qword ptr [rax + r9 + 0x30] ; ret
0x00000200001d68f7 : add byte ptr [rax], al ; mov rax, qword ptr [rcx + 0x28] ; mov qword ptr [rdx], rax ; ret
0x000002000015122e : add byte ptr [rax], al ; mov rax, qword ptr [rcx + 8] ; and al, 0xf0 ; ret
0x00000200001c0590 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x1392b7] ; call rax
0x00000200001be4ee : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x13b359] ; call rax
0x00000200001bc00b : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x13d83c] ; call rax
0x000002000017168e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x1881b9] ; call rax
0x0000020000147d8a : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x260525] ; call rax
0x0000020000584536 : add byte ptr [rax], al ; mov rax, qword ptr [rip - 0x29125f] ; call rax
0x0000020000715a33 : add byte ptr [rax], al ; mov rax, r9 ; add rsp, 0x28 ; ret
0x0000020000715a90 : add byte ptr [rax], al ; mov rax, rcx ; add rsp, 0x28 ; ret
0x0000020000244628 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000244635
0x00000200002449d5 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200002449e2
0x00000200002461a8 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200002461b5
0x000002000024a54f : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000024a55c
0x000002000077f4b4 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000077f4c1
0x000002000078584d : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000078585a
0x0000020000785d8e : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000785d9b
0x0000020000785efb : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000785f08
0x0000020000786068 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000786075
0x00000200007861f5 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000786202
0x0000020000786392 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000078639f
0x000002000078652a : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000786537
0x00000200007866d9 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200007866e6
0x0000020000786876 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000786883
0x0000020000786a32 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000786a3f
0x0000020000786bdc : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000786be9
0x0000020000786d4c : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000786d59
0x00000200007894c8 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200007894d5
0x000002000078963a : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000789647
0x000002000078a063 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000078a070
0x000002000078a26e : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000078a27b
0x000002000078a44a : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000078a457
0x000002000078a63e : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000078a64b
0x000002000078a89e : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000078a8ab
0x000002000078ac7a : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000078ac87
0x000002000078adec : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000078adf9
0x00000200001ce711 : add byte ptr [rax], al ; mov rax, rdx ; ret
0x0000020000057818 : add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200007131db : add byte ptr [rax], al ; mov rbx, rax ; call rdi
0x00000200004cf8f3 : add byte ptr [rax], al ; mov rcx, qword ptr [r13 + 0x3e0] ; call rax
0x00000200004d4add : add byte ptr [rax], al ; mov rcx, qword ptr [rax] ; call 0x200000fc298
0x0000020000525321 : add byte ptr [rax], al ; mov rcx, qword ptr [rbp + 0x38] ; call 0x20000148079
0x000002000067a412 : add byte ptr [rax], al ; mov rcx, qword ptr [rbx + 0x18] ; mov edx, esi ; call rdi
0x000002000044784a : add byte ptr [rax], al ; mov rcx, qword ptr [rcx] ; call 0x2000006d8b8
0x0000020000428f83 : add byte ptr [rax], al ; mov rcx, qword ptr [rdi + 8] ; call rax
0x0000020000415ba6 : add byte ptr [rax], al ; mov rcx, r12 ; call 0x20000061dc7
0x00000200000e0cbf : add byte ptr [rax], al ; mov rcx, r12 ; call 0x2000006cf4b
0x00000200004bb2d8 : add byte ptr [rax], al ; mov rcx, r12 ; call 0x200000e9998
0x00000200004f5f00 : add byte ptr [rax], al ; mov rcx, r12 ; call 0x200001244e4
0x00000200005a2e9f : add byte ptr [rax], al ; mov rcx, r12 ; call 0x200001ce9e4
0x00000200007ae1bf : add byte ptr [rax], al ; mov rcx, r12 ; call 0x200003d3798
0x00000200004c60ee : add byte ptr [rax], al ; mov rcx, r13 ; call 0x200000e8068
0x00000200004d4297 : add byte ptr [rax], al ; mov rcx, r13 ; call 0x200000fc298
0x00000200003feff4 : add byte ptr [rax], al ; mov rcx, r13 ; call r12
0x000002000054e8f5 : add byte ptr [rax], al ; mov rcx, r13 ; call r15
0x00000200004c6ace : add byte ptr [rax], al ; mov rcx, r14 ; call 0x200000e8068
0x00000200004c5870 : add byte ptr [rax], al ; mov rcx, r14 ; call 0x200000eef38
0x00000200006c1d54 : add byte ptr [rax], al ; mov rcx, r14 ; call rax
0x00000200006d8b1b : add byte ptr [rax], al ; mov rcx, r14 ; call rdi
0x00000200006da772 : add byte ptr [rax], al ; mov rcx, r15 ; call r14
0x00000200003f2b12 : add byte ptr [rax], al ; mov rcx, r15 ; call rdi
0x00000200003e3609 : add byte ptr [rax], al ; mov rcx, r9 ; call 0x200000036cc
0x000002000044da39 : add byte ptr [rax], al ; mov rcx, rax ; call 0x2000006f59c
0x000002000052a44c : add byte ptr [rax], al ; mov rcx, rax ; call 0x20000157888
0x0000020000239bc1 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x20000045ebf
0x000002000042de3c : add byte ptr [rax], al ; mov rcx, rbx ; call 0x20000056a90
0x0000020000466033 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x2000008eedc
0x0000020000194cab : add byte ptr [rax], al ; mov rcx, rbx ; call 0x200000b0f57
0x00000200005df451 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x2000020bb70
0x00000200005a69c0 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x20000422c3f
0x00000200004e6db1 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x200004e3003
0x0000020000553006 : add byte ptr [rax], al ; mov rcx, rbx ; call rax
0x00000200006826f2 : add byte ptr [rax], al ; mov rcx, rbx ; mov edi, eax ; call 0x200000be969
0x000002000050a2e2 : add byte ptr [rax], al ; mov rcx, rbx ; mov edi, eax ; call 0x200004265d1
0x00000200006dd30a : add byte ptr [rax], al ; mov rcx, rdi ; call 0x20000009587
0x0000020000452d0d : add byte ptr [rax], al ; mov rcx, rdi ; call 0x20000075e58
0x00000200004c0bb3 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x200000e7da8
0x00000200004d4d56 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x200000fc298
0x0000020000527f5b : add byte ptr [rax], al ; mov rcx, rdi ; call 0x20000148158
0x00000200006c3332 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x200003ff5b3
0x00000200007052bd : add byte ptr [rax], al ; mov rcx, rdi ; call 0x2000071159b
0x000002000070931e : add byte ptr [rax], al ; mov rcx, rdi ; call rsi
0x000002000070812d : add byte ptr [rax], al ; mov rcx, rdi ; mov rsi, rax ; call rbx
0x000002000046339e : add byte ptr [rax], al ; mov rcx, rsi ; call 0x2000003f5cf
0x00000200004eeeb1 : add byte ptr [rax], al ; mov rcx, rsi ; call 0x2000011bf3c
0x0000020000555760 : add byte ptr [rax], al ; mov rcx, rsi ; call 0x200001319e7
0x0000020000528600 : add byte ptr [rax], al ; mov rcx, rsi ; call 0x20000157888
0x00000200006c31a9 : add byte ptr [rax], al ; mov rcx, rsi ; call 0x20000157889
0x00000200007a42e0 : add byte ptr [rax], al ; mov rcx, rsi ; call 0x200003d2698
0x000002000070537f : add byte ptr [rax], al ; mov rcx, rsi ; call 0x2000071159b
0x00000200003f04f8 : add byte ptr [rax], al ; mov rcx, rsi ; call r10
0x00000200003f65fc : add byte ptr [rax], al ; mov rcx, rsi ; call rdi
0x00000200001e6056 : add byte ptr [rax], al ; mov rdx, r10 ; mov rcx, rax ; call qword ptr [rax]
0x00000200007d13a6 : add byte ptr [rax], al ; mov rdx, r15 ; call 0x200003f7bc4
0x0000020000052682 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x20000052628
0x000002000062a83c : add byte ptr [rax], al ; mov rdx, rbp ; call 0x2000024da48
0x00000200005f4933 : add byte ptr [rax], al ; mov rdx, rdi ; mov rcx, r14 ; call rax
0x00000200005f498b : add byte ptr [rax], al ; mov rdx, rdi ; mov rcx, r15 ; call rax
0x00000200005f49c6 : add byte ptr [rax], al ; mov rdx, rdi ; mov rcx, rsi ; call r10
0x000002000062ae8c : add byte ptr [rax], al ; mov rdx, rsi ; call 0x2000024da48
0x000002000069c084 : add byte ptr [rax], al ; mov sil, al ; call 0x20000148377
0x000002000001e4ef : add byte ptr [rax], al ; mov word ptr [r10 + 0x10], r9w ; ret
0x00000200000fce62 : add byte ptr [rax], al ; mov word ptr [rcx + 0x36], dx ; ret
0x00000200006f40c3 : add byte ptr [rax], al ; mov word ptr [rcx + 0xd6], ax ; ret
0x0000020000217266 : add byte ptr [rax], al ; mov word ptr [rcx], ax ; xor eax, eax ; ret
0x000002000061c4fb : add byte ptr [rax], al ; movdqu xmmword ptr [rcx + 0x20], xmm0 ; ret
0x00000200006a4206 : add byte ptr [rax], al ; movdqu xmmword ptr [rcx], xmm0 ; ret
0x00000200000920d6 : add byte ptr [rax], al ; movups xmmword ptr [rdx + 0x4c0], xmm1 ; ret
0x0000020000074ec7 : add byte ptr [rax], al ; movzx eax, byte ptr [rax + 0x232] ; ret
0x000002000068d9bc : add byte ptr [rax], al ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200000265be : add byte ptr [rax], al ; movzx eax, word ptr [rcx + 0x92] ; ret
0x00000200006cfdc7 : add byte ptr [rax], al ; movzx ecx, word ptr [rbx] ; call 0x2000013c067
0x00000200006542ac : add byte ptr [rax], al ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000150c6e : add byte ptr [rax], al ; nop ; ret
0x0000020000591c88 : add byte ptr [rax], al ; or al, 0 ; add byte ptr [rax], al ; call 0x2000040deb8
0x000002000009499c : add byte ptr [rax], al ; or bh, bh ; ret
0x000002000070c88b : add byte ptr [rax], al ; or byte ptr [rax + 3], 1 ; xor eax, eax ; ret
0x00000200000bab7c : add byte ptr [rax], al ; or byte ptr [rax - 0x75], 0x41 ; or byte ptr [rax + 0xb], cl ; ret 0x8949
0x0000020000021a37 : add byte ptr [rax], al ; or byte ptr [rax - 0x75], 0x43 ; or byte ptr [rax + 0xb], cl ; ret 0x3b48
0x000002000079ef97 : add byte ptr [rax], al ; or byte ptr [rax - 0x75], 0x47 ; or byte ptr [rax + 0xb], cl ; ret 0x894c
0x00000200000bd5e6 : add byte ptr [rax], al ; or byte ptr [rax - 0x75], 0x59 ; or byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200001913f7 : add byte ptr [rax], al ; or byte ptr [rax - 0x7d], cl ; ret 0xe902
0x0000020000191392 : add byte ptr [rax], al ; or byte ptr [rax - 1], cl ; ret 0x8b41
0x00000200001f4af8 : add byte ptr [rax], al ; or byte ptr [rax], al ; je 0x200001f4b05 ; ret
0x000002000005266b : add byte ptr [rax], al ; or byte ptr [rax], al ; jmp 0x20000052638
0x000002000061014e : add byte ptr [rax], al ; or byte ptr [rax], al ; jne 0x2000061015f ; xor eax, eax ; ret
0x00000200004aa10c : add byte ptr [rax], al ; or byte ptr [rax], al ; ret
0x000002000015002f : add byte ptr [rax], al ; or byte ptr [rbp + rax - 0x18], dh ; xchg eax, edi ; ret
0x00000200006d924f : add byte ptr [rax], al ; or byte ptr [rbx + 0x10048dc8], 0x85 ; ret 0x1175
0x00000200006d8d20 : add byte ptr [rax], al ; or byte ptr [rbx + 0x10048dc8], 0x85 ; ret 0x975
0x00000200000f1d80 : add byte ptr [rax], al ; or byte ptr [rbx + rcx - 0x10], 0xf6 ; ret
0x000002000004a08f : add byte ptr [rax], al ; or byte ptr [rdi], 0 ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000006fcc0 : add byte ptr [rax], al ; or byte ptr [rdi], 0 ; add byte ptr [rax + 3], cl ; ret 0x3b4c
0x00000200004cf7e4 : add byte ptr [rax], al ; or byte ptr [rdi], 0x45 ; ret 0x4589
0x00000200000d3596 : add byte ptr [rax], al ; or byte ptr [rdi], 0x85 ; ret
0x0000020000719ae9 : add byte ptr [rax], al ; or byte ptr [rdi], 0x95 ; ret 0xc141
0x00000200001ca027 : add byte ptr [rax], al ; or byte ptr [rdx + rax - 2], dh ; ret 0xf48
0x00000200005a40dd : add byte ptr [rax], al ; or cl, ch ; mov ch, 0x34 ; jmp 0x1ffc21cccf0
0x00000200005a40d0 : add byte ptr [rax], al ; or cl, ch ; ret 0xe934
0x00000200006c98b5 : add byte ptr [rax], al ; or dword ptr [rcx + 0x78], edx ; ret
0x000002000055b0db : add byte ptr [rax], al ; or dword ptr [rcx + 0x98], 1 ; ret
0x000002000051f308 : add byte ptr [rax], al ; or rcx, 0xffffffffffffffff ; call 0x20000148499
0x000002000003302a : add byte ptr [rax], al ; or word ptr [rcx + 0xa], r8w ; mov eax, edx ; ret
0x0000020000222711 : add byte ptr [rax], al ; out dx, eax ; mov rcx, rbx ; call 0x200000be968
0x0000020000139d12 : add byte ptr [rax], al ; out dx, eax ; ret
0x00000200000a9587 : add byte ptr [rax], al ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000064f745 : add byte ptr [rax], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000047ea1b : add byte ptr [rax], al ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004e5f6e : add byte ptr [rax], al ; pop r12 ; ret
0x00000200000be21e : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rbx ; ret
0x000002000047a7f4 : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000048b968 : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000492a2 : add byte ptr [rax], al ; pop r13 ; pop rbp ; pop rbx ; ret
0x000002000005fbda : add byte ptr [rax], al ; pop r13 ; pop rbx ; pop rbp ; ret
0x00000200000a6162 : add byte ptr [rax], al ; pop r13 ; pop rbx ; ret
0x0000020000480f5f : add byte ptr [rax], al ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000e8b05 : add byte ptr [rax], al ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200004c913a : add byte ptr [rax], al ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004c0dab : add byte ptr [rax], al ; pop r13 ; pop rsi ; ret
0x00000200004bfeab : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003dfd8b : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000be777 : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200000ae22d : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000065039 : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000048c701 : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rsi ; ret
0x00000200000bfa11 : add byte ptr [rax], al ; pop r14 ; pop r12 ; ret
0x00000200000727ec : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop r12 ; pop rbx ; ret
0x00000200004245ad : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rbp ; pop rbx ; ret
0x0000020000657d34 : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000cfa27 : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000cbf7c : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200006e6a4d : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cc275 : add byte ptr [rax], al ; pop r14 ; pop rbp ; pop rbx ; ret
0x00000200000cd17b : add byte ptr [rax], al ; pop r14 ; pop rbp ; ret
0x00000200004c781d : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000003f621 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000c5633 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000128db9 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003a9bb : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000054bb5 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000d1835 : add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x00000200000690df : add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004d1c41 : add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbx ; ret
0x000002000000f6b0 : add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rcx ; ret
0x0000020000024795 : add byte ptr [rax], al ; pop r14 ; ret
0x00000200000720e5 : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rbx ; ret
0x000002000045a3ac : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000048fde9 : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004c85fe : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000047a015 : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000f1319 : add byte ptr [rax], al ; pop r15 ; pop r12 ; ret
0x00000200004c39f3 : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rbp ; ret
0x00000200000e2ca6 : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000a29ec : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004e5867 : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rsi ; pop rbp ; ret
0x00000200000b7779 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop r13 ; pop rsi ; ret
0x00000200004be419 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200006d3579 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000000847b : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003eafee : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000533d9a : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200004e481a : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rsi ; ret
0x0000020000003026 : add byte ptr [rax], al ; pop r15 ; pop rbx ; ret
0x00000200000acac5 : add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000020fdab : add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200006251a3 : add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000014162 : add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000041b4e7 : add byte ptr [rax], al ; pop r15 ; pop rsi ; pop rbp ; ret
0x00000200000cc871 : add byte ptr [rax], al ; pop rbp ; pop rcx ; ret
0x000002000001b6d3 : add byte ptr [rax], al ; pop rbp ; ret
0x0000020000068091 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000002000003661f : add byte ptr [rax], al ; pop rbx ; ret
0x00000200000d7edd : add byte ptr [rax], al ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000cac14 : add byte ptr [rax], al ; pop rdi ; pop rbp ; ret
0x00000200001dcccb : add byte ptr [rax], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000eaee9 : add byte ptr [rax], al ; pop rdi ; pop rbx ; ret
0x00000200000f9852 : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000000832e : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009c853 : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000010cca4 : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000014a48 : add byte ptr [rax], al ; pop rdi ; ret
0x000002000006cb85 : add byte ptr [rax], al ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000f2fb3 : add byte ptr [rax], al ; pop rsi ; pop rbp ; ret
0x00000200000bfc89 : add byte ptr [rax], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000025db1 : add byte ptr [rax], al ; pop rsi ; ret
0x00000200004300c3 : add byte ptr [rax], al ; push rax ; je 0x200004300c6 ; or dword ptr [rdx], eax ; ret
0x000002000014bb7f : add byte ptr [rax], al ; rdmsr ; and eax, 0xfffffffc ; wrmsr ; ret
0x0000020000007037 : add byte ptr [rax], al ; ret
0x00000200006f846e : add byte ptr [rax], al ; ret 0
0x00000200007d8896 : add byte ptr [rax], al ; ret 0x407d
0x00000200007e0c76 : add byte ptr [rax], al ; ret 0x7e0d
0x00000200007e1316 : add byte ptr [rax], al ; ret 0x7e13
0x00000200007e0fc6 : add byte ptr [rax], al ; ret 0x7e15
0x00000200005f64a8 : add byte ptr [rax], al ; ret 0x90ff
0x00000200007b5d38 : add byte ptr [rax], al ; ret 1
0x00000200005d4f66 : add byte ptr [rax], al ; rol bh, 5 ; fcmovbe st(0), st(4) ; call qword ptr [rax]
0x000002000068f81e : add byte ptr [rax], al ; rol bl, 0x48 ; jmp rax
0x000002000012a442 : add byte ptr [rax], al ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200005332b5 : add byte ptr [rax], al ; rol bl, 0xb8 ; add eax, dword ptr [rax] ; add al, al ; ret
0x000002000062c4e6 : add byte ptr [rax], al ; rol bl, 0xb8 ; and al, byte ptr [rax] ; add al, al ; ret
0x0000020000445770 : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x20000445780 ; add al, al ; ret
0x00000200004b307d : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x200004b308d ; add al, al ; ret
0x00000200004b3138 : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x200004b3148 ; add al, al ; ret
0x00000200004b3190 : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x200004b31a0 ; add al, al ; ret
0x000002000062c409 : add byte ptr [rax], al ; rol bl, 0xb8 ; test dword ptr [rcx], eax ; add al, al ; ret
0x0000020000009a0b : add byte ptr [rax], al ; rol bl, 0xb8 ; xor al, 0 ; add al, al ; ret
0x00000200001579e3 : add byte ptr [rax], al ; rol bl, 0xcc ; mov eax, ecx ; ret
0x00000200006d1352 : add byte ptr [rax], al ; rol byte ptr [rbp - 0x77], 8 ; ret
0x00000200001d27b5 : add byte ptr [rax], al ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x000002000021cb4b : add byte ptr [rax], al ; rol byte ptr [rcx - 0x75], 0xc1 ; ret
0x00000200004eb62d : add byte ptr [rax], al ; ror byte ptr [rax + 0x4c582444], 0x8b ; ret 0x8949
0x000002000000a512 : add byte ptr [rax], al ; ror byte ptr [rax - 0x73], 0x42 ; dec dword ptr [rcx + 0x3b] ; ret 0xf45
0x00000200006db578 : add byte ptr [rax], al ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200001c702e : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x00000200006ca7a5 : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x0000020000078b79 : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000200006180e6 : add byte ptr [rax], al ; ror byte ptr [rbp + rcx*4 + 0x5c], 0x24 ; jo 0x20000618083 ; ret
0x00000200006c95a4 : add byte ptr [rax], al ; ror byte ptr [rbp + rcx*4 + 0xd], 0x32 ; ret
0x00000200006f663d : add byte ptr [rax], al ; ror byte ptr [rbp + rcx*4 + 0xd], 0x59 ; ret 0x4cff
0x00000200001bde19 : add byte ptr [rax], al ; ror byte ptr [rbp - 0x7b], 0xc9 ; je 0x200001bde2d ; call r9
0x000002000001ba3e : add byte ptr [rax], al ; ror byte ptr [rcx + 0x4444247c], 0x8b ; ret
0x000002000064f8e3 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x44 ; ret
0x000002000065d20f : add byte ptr [rax], al ; ror byte ptr [rdi], 0x44 ; ret 0x189
0x000002000054d471 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x44 ; ret 0xd08b
0x00000200003f7e22 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x45 ; ret
0x000002000048a6bd : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; call qword ptr [rax]
0x00000200006716cf : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200003edb45 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret 0x197e
0x00000200004fc45a : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret 0xeb6
0x00000200003f9540 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x00000200000f1e37 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x85 ; ret
0x00000200005881cc : add byte ptr [rax], al ; ror byte ptr [rdi], 0x85 ; ret 0xe6d7
0x00000200001a28aa : add byte ptr [rax], al ; sal byte ptr [rbp + 0x19], 0xf6 ; ret
0x00000200006d9e3b : add byte ptr [rax], al ; sal byte ptr [rbp + 8], 0xff ; ret
0x0000020000157aa7 : add byte ptr [rax], al ; sal byte ptr [rbx], 0xc0 ; ret
0x00000200003deabd : add byte ptr [rax], al ; sal byte ptr [rcx + 0x49], 0x8b ; ret
0x00000200000099fb : add byte ptr [rax], al ; sal byte ptr [rdi + rcx - 0x75], 0xc1 ; ret
0x0000020000027bf8 : add byte ptr [rax], al ; sar byte ptr [rbx], 0xc1 ; ja 0x20000027c07 ; ret
0x00000200005d2659 : add byte ptr [rax], al ; sar byte ptr [rdx - 0x3ffffef6], 0xf6 ; ret
0x0000020000056ec6 : add byte ptr [rax], al ; seta al ; ret
0x00000200001e1a3b : add byte ptr [rax], al ; setb al ; add rsp, 0x28 ; ret
0x000002000041429b : add byte ptr [rax], al ; setb al ; movzx eax, al ; ret
0x000002000013bf82 : add byte ptr [rax], al ; setb al ; ret
0x0000020000211751 : add byte ptr [rax], al ; setbe al ; ret
0x000002000045386a : add byte ptr [rax], al ; sete al ; add rsp, 0x28 ; ret
0x00000200000903a1 : add byte ptr [rax], al ; sete al ; ret
0x0000020000030fe2 : add byte ptr [rax], al ; setne al ; ret
0x000002000024c37e : add byte ptr [rax], al ; sgdt ptr [rax] ; add byte ptr [rax + 3], cl ; ret
0x000002000024c46e : add byte ptr [rax], al ; sgdt ptr [rcx] ; sidt ptr [rdx] ; ret
0x00000200006ad07f : add byte ptr [rax], al ; shl byte ptr [rsi + 0x45], 0x3b ; ret 0xf44
0x00000200002117d8 : add byte ptr [rax], al ; shl eax, 0xa ; add eax, ecx ; ret
0x00000200003d37a3 : add byte ptr [rax], al ; shl rax, cl ; add rsp, 0x28 ; ret
0x00000200000417ae : add byte ptr [rax], al ; shl rax, cl ; mov qword ptr [r8], rax ; ret
0x0000020000443010 : add byte ptr [rax], al ; shl rdx, 2 ; call 0x2000006c739
0x00000200006247f4 : add byte ptr [rax], al ; shr al, 0x44 ; xchg eax, edx ; ret 0x48ff
0x00000200004582f9 : add byte ptr [rax], al ; shr al, 0x7f ; ret 0x8bff
0x00000200005b0df0 : add byte ptr [rax], al ; shr al, 0x88 ; ret 0xffac
0x0000020000042a54 : add byte ptr [rax], al ; shr al, 2 ; and al, 1 ; ret
0x000002000053327c : add byte ptr [rax], al ; shr al, 3 ; and al, 1 ; ret
0x000002000008b14e : add byte ptr [rax], al ; shr al, 6 ; and al, 1 ; ret
0x00000200006996ff : add byte ptr [rax], al ; shr bl, 0 ; add rsp, 0x38 ; ret
0x0000020000683524 : add byte ptr [rax], al ; shr bl, 0x13 ; mov rcx, rbx ; call qword ptr [rax]
0x00000200003fd30f : add byte ptr [rax], al ; shr bl, 0xc ; inc r10d ; jmp 0x200003fd304
0x0000020000039091 : add byte ptr [rax], al ; shr bl, 0xc1 ; xor al, al ; ret
0x00000200004b0fdb : add byte ptr [rax], al ; shr bl, 0xc7 ; lea rax, qword ptr [rcx + 2] ; ret
0x0000020000128ea9 : add byte ptr [rax], al ; shr bl, 0xe9 ; mov qword ptr [r8], r10 ; ret
0x000002000058578e : add byte ptr [rax], al ; shr cl, 0x1d ; jns 0x20000585784 ; push rsi ; ret
0x00000200005d8c63 : add byte ptr [rax], al ; shr cl, 0x25 ; ret
0x00000200005890b5 : add byte ptr [rax], al ; shr cl, 0x29 ; jmp rsi
0x000002000015e664 : add byte ptr [rax], al ; shr cl, 0x29 ; out dx, al ; push rsi ; ret 0x7503
0x00000200005caaee : add byte ptr [rax], al ; shr cl, 0x30 ; ret
0x00000200005cfb75 : add byte ptr [rax], al ; shr cl, 0x35 ; ret 0xffec
0x00000200005f4e85 : add byte ptr [rax], al ; shr cl, 0x38 ; ret 0xfff5
0x00000200005cfb6b : add byte ptr [rax], al ; shr cl, 0x3f ; ret 0xffec
0x0000020000587af9 : add byte ptr [rax], al ; shr cl, 0x40 ; ret 0xffe6
0x00000200004828c4 : add byte ptr [rax], al ; shr cl, 0x43 ; add al, 0 ; add dh, dh ; ret
0x00000200005a5dde : add byte ptr [rax], al ; shr cl, 0x43 ; cmp cl, ch ; push rsi ; ret
0x00000200005a0aa4 : add byte ptr [rax], al ; shr cl, 0x49 ; jne 0x200005a0a9a ; call rcx
0x00000200005ebd7c : add byte ptr [rax], al ; shr cl, 0x4b ; ret 0xfff1
0x00000200001b2534 : add byte ptr [rax], al ; shr cl, 0x50 ; outsd dx, dword ptr [rsi] ; clc ; push rsi ; ret 0x7403
0x0000020000587ae8 : add byte ptr [rax], al ; shr cl, 0x51 ; ret 0xffe6
0x00000200007cbe20 : add byte ptr [rax], al ; shr cl, 0x6c ; ret 0xfffe
0x00000200005bcff0 : add byte ptr [rax], al ; shr cl, 0x87 ; ret 0xffe9
0x00000200005d8bf4 : add byte ptr [rax], al ; shr cl, 0x94 ; ret
0x000002000059171a : add byte ptr [rax], al ; shr cl, 0x95 ; ret
0x00000200005d3df0 : add byte ptr [rax], al ; shr cl, 0x99 ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret
0x00000200007cbf92 : add byte ptr [rax], al ; shr cl, 0xa9 ; ret
0x00000200005d8be2 : add byte ptr [rax], al ; shr cl, 0xab ; ret
0x000002000020b5e2 : add byte ptr [rax], al ; shr cl, 0xad ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000587b30 : add byte ptr [rax], al ; shr cl, 0xb5 ; ret
0x00000200005d8bc5 : add byte ptr [rax], al ; shr cl, 0xc3 ; ret
0x00000200005d8cc4 : add byte ptr [rax], al ; shr cl, 0xc4 ; ret 0xffee
0x0000020000591710 : add byte ptr [rax], al ; shr cl, 0xc7 ; ret
0x00000200005ebde6 : add byte ptr [rax], al ; shr cl, 0xd0 ; ret 0xfff1
0x0000020000097539 : add byte ptr [rax], al ; shr cl, 0xd5 ; call 0x1ffc300754b
0x00000200005b4b64 : add byte ptr [rax], al ; shr cl, 0xec ; ret 0xfff6
0x00000200005b4b5a : add byte ptr [rax], al ; shr cl, 0xf6 ; ret 0xfff6
0x000002000020b974 : add byte ptr [rax], al ; shr eax, 0x10 ; and al, 1 ; ret
0x0000020000632310 : add byte ptr [rax], al ; shr eax, 0x11 ; and eax, 1 ; ret
0x0000020000680060 : add byte ptr [rax], al ; shr eax, 0x12 ; and al, 1 ; ret
0x00000200000820a4 : add byte ptr [rax], al ; shr eax, 0x13 ; and al, 1 ; ret
0x00000200004961fc : add byte ptr [rax], al ; shr eax, 0x14 ; and al, 1 ; ret
0x000002000002c418 : add byte ptr [rax], al ; shr eax, 0xf ; and al, 1 ; ret
0x00000200000fc285 : add byte ptr [rax], al ; shr eax, 3 ; and eax, 1 ; ret
0x000002000013a60d : add byte ptr [rax], al ; shr eax, 4 ; and eax, 1 ; ret
0x0000020000150ebc : add byte ptr [rax], al ; shr rdx, 0x20 ; wrmsr ; pop rdi ; ret
0x00000200000e3b6a : add byte ptr [rax], al ; sti ; add rsp, 0x28 ; ret
0x000002000079fd69 : add byte ptr [rax], al ; sti ; idiv bh ; dec dword ptr [rax + 3] ; ret 0x3b49
0x00000200000a26e8 : add byte ptr [rax], al ; sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x3b4c
0x00000200001ea056 : add byte ptr [rax], al ; sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8548
0x00000200007a7e6d : add byte ptr [rax], al ; sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8b48
0x000002000079e973 : add byte ptr [rax], al ; sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8b4c
0x00000200001fb0d1 : add byte ptr [rax], al ; sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0xf44
0x000002000012bba2 : add byte ptr [rax], al ; sti ; idiv bh ; dec dword ptr [rax - 9] ; ret
0x000002000079e7e9 : add byte ptr [rax], al ; sti ; idiv bh ; dec dword ptr [rcx - 0x75] ; ret 0x8b4c
0x0000020000013566 : add byte ptr [rax], al ; sti ; idiv bh ; jmp qword ptr [rcx]
0x000002000003e2cf : add byte ptr [rax], al ; sti ; ret
0x0000020000209f4c : add byte ptr [rax], al ; sti ; xor eax, eax ; ret
0x00000200000d4087 : add byte ptr [rax], al ; str word ptr [rax + 0x33] ; add cl, byte ptr [rcx + 0x23] ; ret
0x00000200000b1d40 : add byte ptr [rax], al ; str word ptr [rax + 0x33] ; add dword ptr [rcx + 0x23], ecx ; ret
0x00000200000b213a : add byte ptr [rax], al ; str word ptr [rax + 0xb] ; ret 0x8948
0x00000200000a7992 : add byte ptr [rax], al ; str word ptr [rbx - 0x75] ; push rsp ; ret 0xc708
0x0000020000176114 : add byte ptr [rax], al ; sub cl, 0x5e ; ret 0xfff9
0x0000020000130d88 : add byte ptr [rax], al ; sub eax, 1 ; jne 0x20000130d97 ; ret
0x00000200002284ab : add byte ptr [rax], al ; sub edx, eax ; mov dword ptr [rcx], edx ; ret
0x0000020000156305 : add byte ptr [rax], al ; sub r11, rax ; jmp r11
0x00000200007a93c0 : add byte ptr [rax], al ; sub r8, r10 ; jne 0x200007a93ac ; ret
0x00000200001529fe : add byte ptr [rax], al ; sub r9, r8 ; jmp r9
0x00000200000330ff : add byte ptr [rax], al ; sub rax, -0x80 ; ret
0x000002000054177f : add byte ptr [rax], al ; sub rcx, 1 ; jne 0x20000541744 ; ret
0x0000020000716136 : add byte ptr [rax], al ; sub rcx, rax ; mov rax, rcx ; ret
0x00000200000fc274 : add byte ptr [rax], al ; test al, 0x10 ; jne 0x200000fc285 ; xor al, al ; ret
0x00000200003e6fdc : add byte ptr [rax], al ; test al, 4 ; jne 0x200003e6fed ; xor eax, eax ; ret
0x0000020000055e6f : add byte ptr [rax], al ; test al, 8 ; jne 0x20000055e81 ; mov rax, rdx ; ret
0x0000020000055e6f : add byte ptr [rax], al ; test al, 8 ; jne 0x20000055e82 ; mov rax, rdx ; ret
0x000002000007c771 : add byte ptr [rax], al ; test cl, 3 ; cmove rax, rcx ; ret
0x00000200001ed2b4 : add byte ptr [rax], al ; test cl, r10b ; jne 0x200001ed2c9 ; mov eax, r10d ; jmp 0x200001ed2f0
0x00000200005baff5 : add byte ptr [rax], al ; test dl, 3 ; je 0x200005bb00a ; call 0x200006b7221
0x000002000001d549 : add byte ptr [rax], al ; test eax, eax ; jne 0x2000001d55a ; xor eax, eax ; ret
0x00000200000ea7f7 : add byte ptr [rax], al ; test eax, eax ; jne 0x200000ea82b ; movzx eax, dl ; ret
0x00000200000ea7f7 : add byte ptr [rax], al ; test eax, eax ; jne 0x200000ea82c ; movzx eax, dl ; ret
0x0000020000139db5 : add byte ptr [rax], al ; test r8, r8 ; je 0x20000139dc7 ; jmp r8
0x00000200006834fd : add byte ptr [rax], al ; test r9, r9 ; jne 0x200006834e4 ; ret
0x0000020000112ae7 : add byte ptr [rax], al ; test rax, r8 ; je 0x20000112af6 ; ret
0x00000200000ffb9e : add byte ptr [rax], al ; test rax, rax ; je 0x200000ffbb1 ; mov al, cl ; ret
0x0000020000647ab0 : add byte ptr [rax], al ; test rax, rax ; je 0x20000647ac0 ; call rax
0x000002000001c3e5 : add byte ptr [rax], al ; test rax, rax ; jne 0x2000001c3f8 ; xor eax, eax ; ret
0x0000020000025555 : add byte ptr [rax], al ; test rax, rax ; jne 0x20000025564 ; ret
0x0000020000028b35 : add byte ptr [rax], al ; test rax, rax ; jne 0x20000028b44 ; ret
0x0000020000069e77 : add byte ptr [rax], al ; test rcx, r8 ; cmovne eax, edx ; ret
0x0000020000128ab1 : add byte ptr [rax], al ; test rcx, rcx ; je 0x20000128ac1 ; call rcx
0x00000200001c45bd : add byte ptr [rax], al ; test rcx, rcx ; je 0x200001c45cd ; call rcx
0x00000200001c4649 : add byte ptr [rax], al ; test rcx, rcx ; je 0x200001c465b ; jmp rcx
0x00000200001c46b9 : add byte ptr [rax], al ; test rcx, rcx ; je 0x200001c46c9 ; call rcx
0x00000200005ebdaf : add byte ptr [rax], al ; test rcx, rcx ; je 0x200005ebdc4 ; call 0x20000148079
0x000002000007a3d5 : add byte ptr [rax], al ; test rcx, rcx ; jne 0x2000007a3e4 ; ret
0x00000200000ecde6 : add byte ptr [rax], al ; test rcx, rcx ; jne 0x200000ecde3 ; xor al, al ; ret
0x00000200001300df : add byte ptr [rax], al ; test rdx, rdx ; je 0x200001300f3 ; xor ecx, ecx ; call rdx
0x00000200001c466d : add byte ptr [rax], al ; test rdx, rdx ; je 0x200001c467f ; jmp rdx
0x000002000002df49 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x2000002df58 ; ret
0x000002000042bf02 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x2000042bf11 ; ret
0x00000200001cbfc1 : add byte ptr [rax], al ; xchg dword ptr [rip + 0x17510b], eax ; ret
0x000002000011c541 : add byte ptr [rax], al ; xchg dword ptr [rip + 0x1ea297], ecx ; ret
0x0000020000041e83 : add byte ptr [rax], al ; xchg qword ptr [rcx], rax ; ret
0x00000200000cc9b2 : add byte ptr [rax], al ; xor bh, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200006c7a2b : add byte ptr [rax], al ; xor bh, 0xff ; dec dword ptr [rax - 1] ; ret
0x0000020000010090 : add byte ptr [rax], al ; xor bh, 0xff ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000185016 : add byte ptr [rax], al ; xor bh, 0xff ; inc dword ptr [rbx] ; ret 0x8189
0x000002000000f9cf : add byte ptr [rax], al ; xor bh, 0xff ; inc dword ptr [rcx - 0x7c] ; ret
0x00000200001d2179 : add byte ptr [rax], al ; xor bh, 0xff ; jmp qword ptr [rcx]
0x00000200005139c0 : add byte ptr [rax], al ; xor bh, 0xff ; push rax ; inc dword ptr [rax] ; ret
0x000002000007e455 : add byte ptr [rax], al ; xor bh, 0xff ; push rsi ; ret
0x000002000046da8c : add byte ptr [rax], al ; xor byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000a0d61 : add byte ptr [rax], al ; xor byte ptr [rbp + 0x1a], 0x8b ; ret
0x00000200000442e9 : add byte ptr [rax], al ; xor byte ptr [rbx + rax + 0x33], 0xc0 ; ret
0x00000200004e9f2d : add byte ptr [rax], al ; xor byte ptr [rsp + rcx*2 + 0x48], 0x83 ; ret 0x4428
0x00000200001f3cf3 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax + 0x3b] ; ret 0x820f
0x00000200000c12b6 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax + 3] ; ret 0xc148
0x00000200000afd27 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x000002000004e8d7 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x348
0x00000200000f10d5 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x349
0x0000020000070c47 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x3b48
0x0000020000102e8e : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x6483
0x0000020000024641 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x8b44
0x0000020000011a11 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x8b4c
0x000002000008f8ab : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x8d4c
0x000002000009f802 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0xb849
0x0000020000038e83 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x000002000079ffca : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000200007acde0 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rbx + rcx*4 + 0x35] ; ret
0x00000200000a5bb2 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000049d0a : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rcx - 0x75] ; ret 0x3b48
0x0000020000101691 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rcx - 0x75] ; ret 0xb60f
0x00000200000d91e7 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rcx - 0x75] ; ret 0xb949
0x00000200001f758c : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200000a93f9 : add byte ptr [rax], al ; xor dh, 0xff ; inc dword ptr [rcx - 0x7f] ; jmp qword ptr [rax]
0x00000200000d4c0c : add byte ptr [rax], al ; xor dh, 0xff ; push rsi ; ret
0x0000020000427d59 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003daf94 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001a028 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001dc623 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000052cdf8 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x48 ; ret
0x000002000024c5be : add byte ptr [rax], al ; xor eax, eax ; inc eax ; ret
0x0000020000157ac4 : add byte ptr [rax], al ; xor eax, eax ; mov byte ptr [rcx + 0x58], 1 ; ret
0x000002000022d9ea : add byte ptr [rax], al ; xor eax, eax ; mov dword ptr [r9], ecx ; ret
0x0000020000022b9a : add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000002a529 : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x2000002a53c ; ret
0x0000020000446864 : add byte ptr [rax], al ; xor ebx, ebx ; jmp 0x20000446831
0x000002000078986e : add byte ptr [rax], al ; xor ecx, ecx ; call 0x200000c5b2e
0x00000200006f74ca : add byte ptr [rax], al ; xor ecx, ecx ; call 0x200006f37b2
0x0000020000242f21 : add byte ptr [rax], al ; xor ecx, ecx ; call r10
0x000002000023b617 : add byte ptr [rax], al ; xor ecx, ecx ; call r9
0x00000200004746f7 : add byte ptr [rax], al ; xor edx, edx ; call 0x2000009e097
0x00000200004c480b : add byte ptr [rax], al ; xor edx, edx ; call 0x200000eef37
0x0000020000628f3f : add byte ptr [rax], al ; xor edx, edx ; call 0x2000024d007
0x00000200007bc26f : add byte ptr [rax], al ; xor edx, edx ; call 0x200003e5f8b
0x00000200005f44c6 : add byte ptr [rax], al ; xor edx, edx ; mov rcx, r13 ; call r15
0x000002000043a962 : add byte ptr [rax], al ; xor edx, edx ; mov rcx, rbx ; call 0x20000056b89
0x00000200001022c2 : add byte ptr [rax], al ; xor r8d, r8d ; xor edx, edx ; call r9
0x00000200001aea63 : add byte ptr [rax], al ; xor rcx, rsp ; call 0x2000013ac77
0x000002000050bc1d : add byte ptr [rax], al ; xor rcx, rsp ; call 0x2000013ac78
0x0000020000225cf5 : add byte ptr [rax], bh ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8a41
0x0000020000225cc2 : add byte ptr [rax], bh ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xb60f
0x00000200006f6830 : add byte ptr [rax], bh ; add byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0x48ff
0x00000200006eee11 : add byte ptr [rax], bh ; call qword ptr [rdx]
0x00000200003e52a1 : add byte ptr [rax], bh ; pop rbp ; ret 0x850f
0x000002000015d88c : add byte ptr [rax], bl ; add rsp, 0x40 ; pop rbp ; ret
0x00000200007d886f : add byte ptr [rax], bl ; ret 0x407d
0x00000200004aa10d : add byte ptr [rax], cl ; add bl, al ; mov eax, 0x100000 ; ret
0x000002000005266c : add byte ptr [rax], cl ; add bl, ch ; ret 0xc1f6
0x0000020000788808 : add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x000002000061014f : add byte ptr [rax], cl ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x00000200005ae5aa : add byte ptr [rax], cl ; add byte ptr [rbx + 0xfca3bc1], cl ; ret 0x26e9
0x0000020000013354 : add byte ptr [rax], cl ; add byte ptr [rcx + 0xf], cl ; ret
0x00000200001f4af9 : add byte ptr [rax], cl ; add byte ptr [rcx + rax - 0x3d], dh ; xor eax, eax ; ret
0x00000200001b6cb6 : add byte ptr [rax], cl ; add rsp, 0x28 ; ret
0x0000020000011fe2 : add byte ptr [rax], cl ; jbe 0x200001639ca ; ret
0x000002000046da0b : add byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0xb948
0x0000020000451fa8 : add byte ptr [rax], dh ; add byte ptr [rcx + 0x23], cl ; ret 0xbb41
0x0000020000078282 : add byte ptr [rax], dh ; add dh, dh ; ret 0xf91
0x00000200007d8937 : add byte ptr [rax], dh ; ret
0x00000200005b6e8a : add byte ptr [rax], dl ; add al, ch ; ret 0xf483
0x000002000020d83e : add byte ptr [rax], dl ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200000a060b : add byte ptr [rax], dl ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200003da24b : add byte ptr [rax], dl ; add byte ptr [rax], al ; call rax
0x00000200000acdbe : add byte ptr [rax], dl ; add byte ptr [rax], al ; jmp 0x200000acd8c
0x0000020000091d90 : add byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x00000200003c6dae : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200000987ea : add byte ptr [rax], dl ; add byte ptr [rbp + 1], dh ; ret
0x000002000043fd31 : add byte ptr [rax], dl ; add byte ptr [rbx + 0xfca3bc1], cl ; ret 0x8389
0x000002000070ded7 : add byte ptr [rax], dl ; add byte ptr [rbx], bh ; ret 0x676
0x0000020000451fb1 : add byte ptr [rax], dl ; add byte ptr [rcx + 0x2b], cl ; ret
0x0000020000089dd5 : add byte ptr [rax], dl ; add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x2fe8
0x0000020000093ad0 : add byte ptr [rax], dl ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe181
0x00000200006bb040 : add byte ptr [rax], dl ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005d7902 : add byte ptr [rax], dl ; fmul dword ptr [rbx] ; ret 0x8941
0x0000020000685344 : add byte ptr [rax], dl ; jae 0x20000685500 ; jmp 0x2000068531a
0x000002000061c255 : add byte ptr [rax], dl ; or byte ptr [rax - 0x75], 0xcf ; call 0x200001484f8
0x0000020000139d0a : add byte ptr [rax], dl ; ret
0x00000200005b4562 : add byte ptr [rax], r8b ; adc cl, byte ptr [rdi] ; ret 0x4389
0x00000200006a0f42 : add byte ptr [rax], r8b ; add bh, bh ; ret
0x0000020000148825 : add byte ptr [rax], r8b ; add cl, ch ; adc bl, al ; add byte ptr [rax], al ; ret
0x0000020000148725 : add byte ptr [rax], r8b ; add cl, ch ; adc bl, cl ; add byte ptr [rax], al ; ret
0x0000020000148865 : add byte ptr [rax], r8b ; add cl, ch ; rcl bh, cl ; add byte ptr [rax], al ; ret
0x0000020000148765 : add byte ptr [rax], r8b ; add cl, ch ; rcr al, cl ; add byte ptr [rax], al ; ret
0x000002000042193a : add byte ptr [rbp + 0x10880fff], al ; ret 0x17
0x0000020000515deb : add byte ptr [rbp + 0x16840fc9], al ; ret 9
0x00000200001345a6 : add byte ptr [rbp + 0x1a880fc0], al ; ret 7
0x000002000009dc11 : add byte ptr [rbp + 0x1c], dh ; ret
0x00000200000c3d11 : add byte ptr [rbp + 0x1d], dh ; ret
0x00000200001e198a : add byte ptr [rbp + 0x21], dh ; mov eax, 1 ; ret
0x00000200000bfe2f : add byte ptr [rbp + 0x23840fc0], al ; ret
0x00000200000b407d : add byte ptr [rbp + 0x23], cl ; ret
0x00000200000b5c91 : add byte ptr [rbp + 0x23], cl ; ret 0x8b48
0x000002000009881f : add byte ptr [rbp + 0x24], dh ; cmp eax, 2 ; jl 0x20000098830 ; ret
0x000002000008f08d : add byte ptr [rbp + 0x25], dh ; xor al, al ; ret
0x00000200000094e2 : add byte ptr [rbp + 0x28], dh ; xor al, al ; add rsp, 0x28 ; ret
0x000002000068abc6 : add byte ptr [rbp + 0x2b], al ; ret
0x00000200003e09a0 : add byte ptr [rbp + 0x2b], al ; ror dword ptr [rcx + 0x63], cl ; ret 0x8d48
0x0000020000152aab : add byte ptr [rbp + 0x2b], cl ; ret 0x8b4d
0x00000200007a93c1 : add byte ptr [rbp + 0x2b], cl ; ret 0xde75
0x000002000048c794 : add byte ptr [rbp + 0x32], al ; in al, 0xf ; mov dh, 0x57 ; add esi, esi ; ret 0xf08
0x0000020000665e78 : add byte ptr [rbp + 0x33], al ; dec dword ptr [rbp + 0x3b] ; ret
0x00000200006df053 : add byte ptr [rbp + 0x33], al ; dec dword ptr [rbp + rcx*4 + 0x35] ; ret 0xd2
0x00000200000243bc : add byte ptr [rbp + 0x33], al ; fcomi st(6) ; ret 0x751e
0x00000200004b4160 : add byte ptr [rbp + 0x33], al ; fild dword ptr [rbp - 0x75] ; ret
0x0000020000235e0b : add byte ptr [rbp + 0x33], al ; fild dword ptr [rcx + rcx*4 + 0x1d] ; ret 0x11fe
0x000002000078b1a4 : add byte ptr [rbp + 0x33], al ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000020000413b8d : add byte ptr [rbp + 0x33], al ; in al, -0xa ; ret
0x0000020000118160 : add byte ptr [rbp + 0x33], al ; rol byte ptr [rbp - 0x75], cl ; ret 0xf45
0x00000200004b8291 : add byte ptr [rbp + 0x33], al ; rol byte ptr [rcx - 0x76], cl ; ret
0x00000200006b4901 : add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x73], 0x15 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffbc
0x0000020000246746 : add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], cl ; ret 0x2c6
0x000002000079daea : add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x77], 5 ; ret
0x0000020000234175 : add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200001022c3 : add byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call r9
0x0000020000070144 : add byte ptr [rbp + 0x33], al ; sal dh, cl ; ret 0xf1e
0x00000200006a3497 : add byte ptr [rbp + 0x33], al ; shr al, 0x30 ; ret
0x00000200004b6140 : add byte ptr [rbp + 0x341ff46], cl ; ret
0x00000200005bab34 : add byte ptr [rbp + 0x3b0874c0], al ; ret
0x00000200005bab0f : add byte ptr [rbp + 0x3b0874c0], al ; ret 0x850f
0x00000200000656c7 : add byte ptr [rbp + 0x3b411104], cl ; ret
0x0000020000118b87 : add byte ptr [rbp + 0x3b44f050], cl ; ret 0x870f
0x00000200001d26ef : add byte ptr [rbp + 0x3b], al ; ret
0x000002000015e172 : add byte ptr [rbp + 0x3b], al ; ret 0x177c
0x0000020000081ddf : add byte ptr [rbp + 0x3b], al ; ret 0x4d74
0x00000200001ea667 : add byte ptr [rbp + 0x3b], al ; ret 0x5175
0x00000200001219ca : add byte ptr [rbp + 0x3b], al ; ret 0x6a73
0x0000020000515dd6 : add byte ptr [rbp + 0x3b], al ; ret 0x850f
0x00000200004977a2 : add byte ptr [rbp + 0x3b], al ; ret 0xe472
0x00000200000318e9 : add byte ptr [rbp + 0x3b], cl ; ret
0x000002000020e83a : add byte ptr [rbp + 0x3b], cl ; ret 0x1775
0x000002000016450e : add byte ptr [rbp + 0x3b], cl ; ret 0x1c75
0x000002000002ded0 : add byte ptr [rbp + 0x3b], cl ; ret 0x2b75
0x0000020000411838 : add byte ptr [rbp + 0x3b], cl ; ret 0x4575
0x0000020000213df2 : add byte ptr [rbp + 0x3b], cl ; ret 0x860f
0x000002000008e939 : add byte ptr [rbp + 0x3b], cl ; ret 0xc072
0x000002000011efca : add byte ptr [rbp + 0x3b], cl ; ret 0xd875
0x000002000020b879 : add byte ptr [rbp + 0x3b], cl ; ret 0xde75
0x00000200007a97b0 : add byte ptr [rbp + 0x3b], cl ; ret 0xed75
0x0000020000028976 : add byte ptr [rbp + 0x40880ff6], al ; call qword ptr [rbx]
0x00000200004aa099 : add byte ptr [rbp + 0x43], dh ; ret
0x000002000001ff95 : add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x00000200004aa7ab : add byte ptr [rbp + 0x470f0250], cl ; ret 0xb983
0x00000200000296e8 : add byte ptr [rbp + 0x480578c0], al ; add esp, 0x28 ; ret
0x00000200000821fe : add byte ptr [rbp + 0x480579c0], al ; add esp, 0x58 ; ret
0x0000020000020238 : add byte ptr [rbp + 0x48bfe43], cl ; ret 0x73e9
0x000002000001fea8 : add byte ptr [rbp + 0x48bff43], cl ; ret 0x2b44
0x0000020000228470 : add byte ptr [rbp + 0x48f0f042], cl ; cmpxchg dword ptr [rcx], edx ; ret
0x00000200007d29de : add byte ptr [rbp + 0x49e85a4a], cl ; ret
0x00000200006d36df : add byte ptr [rbp + 0x50], dh ; xor al, al ; ret
0x00000200000cc872 : add byte ptr [rbp + 0x59], bl ; ret
0x00000200001b6e8b : add byte ptr [rbp + 0x63], cl ; ret 0x8d49
0x00000200004c738b : add byte ptr [rbp + 0x6f], dh ; mov rcx, r13 ; call 0x200000e8069
0x0000020000515c7a : add byte ptr [rbp + 0x75880fc0], al ; ret
0x00000200000bf636 : add byte ptr [rbp + 0xa], dh ; xor al, al ; ret
0x0000020000122d4d : add byte ptr [rbp + 0xb0875c2], al ; ret 0x3345
0x000002000042825b : add byte ptr [rbp + 0xd], dh ; mov qword ptr [rcx + 0x70], rdx ; xor eax, eax ; ret
0x00000200000ea7f8 : add byte ptr [rbp + 0xf2675c0], al ; mov dh, 0xc2 ; ret
0x0000020000231d44 : add byte ptr [rbp + 0xf], al ; cmp bl, cl ; ret 0xf66
0x00000200000e5c55 : add byte ptr [rbp + 0xf], al ; mov esi, 0xbb3a44ff ; ret
0x0000020000056b1f : add byte ptr [rbp + 0xf], dh ; mov qword ptr [r9], rax ; mov eax, r10d ; ret
0x000002000000bd5a : add byte ptr [rbp + 1], dh ; ret
0x00000200004f67ea : add byte ptr [rbp + 1], r14b ; ret
0x0000020000507087 : add byte ptr [rbp + 2], al ; ret
0x0000020000043355 : add byte ptr [rbp + 2], dh ; xor eax, eax ; ret
0x000002000024097a : add byte ptr [rbp + 3], al ; fimul word ptr [rax + 3] ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4408
0x0000020000618ce1 : add byte ptr [rbp + 3], al ; fimul word ptr [rcx + 0x63] ; ret
0x000002000066a6a8 : add byte ptr [rbp + 3], al ; ret 0x8944
0x000002000065222d : add byte ptr [rbp + 3], cl ; in eax, -0x75 ; ret 0x8941
0x000002000004256e : add byte ptr [rbp + 3], cl ; ret
0x00000200001ea702 : add byte ptr [rbp + 3], cl ; ret 0x341
0x000002000016f515 : add byte ptr [rbp + 3], cl ; ret 0x3b48
0x0000020000191643 : add byte ptr [rbp + 3], cl ; ret 0x3b4c
0x0000020000200356 : add byte ptr [rbp + 3], cl ; ret 0x8348
0x00000200006c9761 : add byte ptr [rbp + 3], cl ; ret 0x8d49
0x0000020000605b6c : add byte ptr [rbp + 3], cl ; ret 0xd285
0x000002000005c4ff : add byte ptr [rbp + 3], cl ; ret 0xff41
0x00000200000e835b : add byte ptr [rbp + 3], dh ; mov al, 1 ; ret
0x0000020000025766 : add byte ptr [rbp + 3], dh ; xor al, al ; ret
0x0000020000027438 : add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x00000200007d26ee : add byte ptr [rbp + 4], dh ; test al, 2 ; jne 0x200007d26eb ; xor eax, eax ; ret
0x000002000001beaa : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x000002000000e37e : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x00000200001dbd26 : add byte ptr [rbp + 5], dh ; mov eax, 1 ; ret
0x00000200000fcec4 : add byte ptr [rbp + 5], dh ; shl rax, 0x14 ; ret
0x000002000000e37d : add byte ptr [rbp + 5], sil ; add rsp, 0x38 ; ret
0x000002000000bf1d : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001b7a6 : add byte ptr [rbp + 6], dh ; add rsp, 0x30 ; pop rbx ; ret
0x000002000048d939 : add byte ptr [rbp + 6], dh ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000645362 : add byte ptr [rbp + 6], dh ; mov eax, 0xc00000bb ; ret
0x000002000009a3a3 : add byte ptr [rbp + 6], dh ; mov eax, 1 ; ret
0x00000200000c5b1b : add byte ptr [rbp + 6], dh ; mov eax, dword ptr [rip + 0x2e36e0] ; ret
0x000002000000c611 : add byte ptr [rbp + 6], dh ; mov eax, dword ptr [rip + 0x39bcde] ; ret
0x000002000001df42 : add byte ptr [rbp + 6], dh ; sub rax, qword ptr [rcx] ; mov qword ptr [r10], rax ; ret
0x00000200003fcc9e : add byte ptr [rbp + 6], r14b ; add rsp, 0x20 ; pop rbx ; ret
0x000002000009a3a2 : add byte ptr [rbp + 6], sil ; mov eax, 1 ; ret
0x0000020000625a95 : add byte ptr [rbp + 7], dh ; call 0x2000024da46
0x00000200004f67e5 : add byte ptr [rbp + 7], dh ; cmp byte ptr [rcx + 0x4c], 0 ; jne 0x200004f67f8 ; ret
0x000002000001d4a7 : add byte ptr [rbp + 7], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200007069b2 : add byte ptr [rbp + 7], dh ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000442873 : add byte ptr [rbp + rax + 0x48], dh ; add eax, 0x10 ; ret
0x000002000002be9a : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x000002000000ff73 : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x0000020000124012 : add byte ptr [rbp + rax + 0x48], dh ; mov eax, dword ptr [rax + 0x48] ; ret
0x0000020000154ec5 : add byte ptr [rbp + rax - 0x18], dh ; ret
0x000002000012cd77 : add byte ptr [rbp + rax - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200004d512a : add byte ptr [rbp + rbx - 0x75], dh ; ret 0xd0f7
0x0000020000171a99 : add byte ptr [rbp + rbx - 0x75], dh ; ret 0xe8c1
0x000002000010786d : add byte ptr [rbp + rcx*4 + 0x1c], al ; or eax, dword ptr [rcx - 0x75] ; ret
0x00000200006c5659 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; ja 0x200006c5649 ; ret 0x66ff
0x00000200003d2873 : add byte ptr [rbp + rcx*4 + 0x1d], cl ; test esp, edi ; ret 0x44ff
0x00000200003dff6b : add byte ptr [rbp + rcx*4 + 0x25], cl ; lea edx, dword ptr [rax] ; ret 0x48ff
0x0000020000657229 : add byte ptr [rbp + rcx*4 + 0x3d], cl ; jmp rcx
0x00000200003db294 : add byte ptr [rbp + rcx*4 + 0x3d], cl ; pop rbp ; ret 0x8bff
0x00000200006f4d0a : add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret
0x000002000011f176 : add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret 0x200a
0x00000200005c5fc2 : add byte ptr [rbp + rcx*4 + 0x41], al ; dec dword ptr [rax - 0x7d] ; ret 0x4810
0x00000200001e9024 : add byte ptr [rbp + rcx*4 + 0x42], al ; add ebp, eax ; ret 0xeb46
0x00000200004004cd : add byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x40 ; call r10
0x000002000001085e : add byte ptr [rbp + rcx*4 + 0x49], al ; dec dword ptr [rax - 0x75] ; ret
0x00000200000807d1 : add byte ptr [rbp + rcx*4 + 0x4a], al ; ret 0x8d48
0x00000200006ae98c : add byte ptr [rbp + rcx*4 + 0x55], al ; adc dword ptr [rcx - 0x75], ecx ; ret 0x48f0
0x00000200004df015 : add byte ptr [rbp + rcx*4 + 0x79], al ; add al, 0xeb ; mov ecx, dword ptr [rcx - 0x75] ; ret
0x00000200000dbe2b : add byte ptr [rbp + rcx*4 + 0xc], cl ; ret 0xba49
0x00000200007c5cb9 : add byte ptr [rbp + rcx*4 + 0xd], cl ; call rax
0x000002000066d74d : add byte ptr [rbp + rcx*4 + 0xd], cl ; ret
0x00000200006f6832 : add byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0x48ff
0x00000200000c124b : add byte ptr [rbp + rcx*4 + 4], cl ; ret
0x0000020000189183 : add byte ptr [rbp + rcx*4 + 4], cl ; ret 0x8b48
0x0000020000678ab2 : add byte ptr [rbp + rcx*4 + 5], cl ; call rdx
0x000002000068fb16 : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0xac8d
0x0000020000631fee : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0xc26d
0x000002000019d818 : add byte ptr [rbp + rdx - 0x75], dh ; ret
0x00000200000288be : add byte ptr [rbp - 0x1277f00a], al ; call qword ptr [rbx]
0x00000200006636e4 : add byte ptr [rbp - 0x12], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007063f2 : add byte ptr [rbp - 0x16], dh ; xor al, al ; ret
0x00000200007063a6 : add byte ptr [rbp - 0x17], dh ; xor al, al ; ret
0x000002000013b5db : add byte ptr [rbp - 0x1a], dh ; mov rax, rcx ; ret
0x00000200003e6ffb : add byte ptr [rbp - 0x1c], dh ; mov eax, 1 ; ret
0x00000200004e4565 : add byte ptr [rbp - 0x1d], dh ; xor eax, eax ; ret
0x000002000013bd33 : add byte ptr [rbp - 0x21], dh ; mov rax, rcx ; ret
0x0000020000018c36 : add byte ptr [rbp - 0x24], dh ; mov qword ptr [rcx + 0x18], rax ; ret
0x0000020000121c25 : add byte ptr [rbp - 0x26], dh ; xor al, al ; ret
0x000002000013d247 : add byte ptr [rbp - 0x2e], dh ; sub rax, rcx ; sar rax, 1 ; ret
0x0000020000228bb8 : add byte ptr [rbp - 0x2e], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200005e2a57 : add byte ptr [rbp - 0x2f1783b6], cl ; ret 0xffa2
0x00000200004aa6cc : add byte ptr [rbp - 0x33], dh ; jmp 0x200004aa697
0x00000200004f130c : add byte ptr [rbp - 0x3f60f040], al ; ret
0x00000200001cb9fe : add byte ptr [rbp - 0x3f6af040], al ; ret
0x000002000040211c : add byte ptr [rbp - 0x4077f040], al ; ret 0x18
0x000002000002d352 : add byte ptr [rbp - 0x577f040], al ; ret
0x00000200007bb6ab : add byte ptr [rbp - 0x73], al ; add rsi, qword ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; ret
0x00000200003f3b49 : add byte ptr [rbp - 0x73], al ; clc ; call rsi
0x000002000045ddd5 : add byte ptr [rbp - 0x73], al ; cli ; call rsi
0x00000200006d95a5 : add byte ptr [rbp - 0x73], al ; cmc ; call rsi
0x00000200000e6c32 : add byte ptr [rbp - 0x73], al ; push rax ; add dword ptr [rcx - 0x75], eax ; ret 0x348
0x00000200006dac4c : add byte ptr [rbp - 0x73], al ; stc ; call rdi
0x0000020000441854 : add byte ptr [rbp - 0x73], cl ; and byte ptr [r8 - 0x75], cl ; ret 0x8b49
0x000002000000eb93 : add byte ptr [rbp - 0x73], cl ; mov r8b, 0x8b ; ret 0xd8f7
0x0000020000150f91 : add byte ptr [rbp - 0x73], cl ; or al, 0x91 ; jmp r9
0x000002000068ca40 : add byte ptr [rbp - 0x73], cl ; pop rcx ; dec byte ptr [rax + 0x63] ; ret 0x8d4e
0x00000200000d24a7 : add byte ptr [rbp - 0x73], cl ; pop rsi ; dec dword ptr [rcx - 0x75] ; ret
0x00000200000243ff : add byte ptr [rbp - 0x74b68b01], al ; ret
0x00000200005a94b1 : add byte ptr [rbp - 0x74b7feb6], cl ; ret 0x950f
0x000002000020f9ee : add byte ptr [rbp - 0x74bb008e], cl ; ret 0xf003
0x000002000001ff48 : add byte ptr [rbp - 0x74bb00bd], cl ; ret 0x4404
0x000002000043cf34 : add byte ptr [rbp - 0x74bb02aa], cl ; ret 0x8b48
0x00000200004121b5 : add byte ptr [rbp - 0x74bbfbb0], cl ; ret 0x8b48
0x0000020000078a84 : add byte ptr [rbp - 0x74cd8b40], al ; ret
0x000002000045e9c5 : add byte ptr [rbp - 0x74cf8a40], al ; ret
0x00000200003c737c : add byte ptr [rbp - 0x74d28b2e], al ; ret 0xffb9
0x00000200007d5b85 : add byte ptr [rbp - 0x74d88725], al ; ret
0x00000200006058b9 : add byte ptr [rbp - 0x74d98b25], al ; ret
0x00000200005170c3 : add byte ptr [rbp - 0x74dc8725], al ; ret
0x00000200003e3a63 : add byte ptr [rbp - 0x74dd8b2e], al ; ret 0xc148
0x00000200003e1009 : add byte ptr [rbp - 0x74e58640], al ; ret
0x000002000041f614 : add byte ptr [rbp - 0x74e58b2e], al ; ret 0xc2ff
0x0000020000040697 : add byte ptr [rbp - 0x74f88625], al ; ret
0x00000200001260af : add byte ptr [rbp - 0x75], al ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4504
0x000002000006e669 : add byte ptr [rbp - 0x75], al ; cmp sil, r14b ; ret
0x00000200000ff988 : add byte ptr [rbp - 0x75], al ; fdivr st(7) ; ret 0x8d4c
0x00000200000d4434 : add byte ptr [rbp - 0x75], al ; ret
0x00000200001957a0 : add byte ptr [rbp - 0x75], al ; ret 0x71e9
0x000002000068a97d : add byte ptr [rbp - 0x75], al ; ret 0x8949
0x00000200000b02ac : add byte ptr [rbp - 0x75], al ; ret 0x8b44
0x0000020000484971 : add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200000dfdc9 : add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x00000200004d33a4 : add byte ptr [rbp - 0x75], al ; ret 0x8d48
0x0000020000195775 : add byte ptr [rbp - 0x75], al ; ret 0x9ce9
0x000002000048a361 : add byte ptr [rbp - 0x75], al ; ret 0xb44
0x00000200004b2957 : add byte ptr [rbp - 0x75], al ; ret 0xc141
0x000002000078b5f2 : add byte ptr [rbp - 0x75], al ; ret 0xc91b
0x000002000059b9fe : add byte ptr [rbp - 0x75], al ; ret 0xd0ff
0x000002000004c98c : add byte ptr [rbp - 0x75], al ; ret 0xd233
0x00000200005b52ba : add byte ptr [rbp - 0x75], al ; ret 0xd38b
0x000002000041260b : add byte ptr [rbp - 0x75], al ; ret 0xdb85
0x0000020000522e05 : add byte ptr [rbp - 0x75], al ; ret 0xe823
0x00000200007a97ad : add byte ptr [rbp - 0x75], cl ; add byte ptr [rbp + 0x3b], cl ; ret 0xed75
0x0000020000034206 : add byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rbp + 0x3b] ; ret 0x7274
0x000002000013e128 : add byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rcx - 0x7d] ; ret 0xe908
0x0000020000121f71 : add byte ptr [rbp - 0x75], cl ; add dword ptr [rbp + 0x23], ecx ; ret
0x000002000024551c : add byte ptr [rbp - 0x75], cl ; fimul dword ptr [rcx - 0x75] ; or ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200000ada6d : add byte ptr [rbp - 0x75], cl ; push rbp ; adc byte ptr [rcx - 0x7f], cl ; ret 0x1a0
0x000002000004a38c : add byte ptr [rbp - 0x75], cl ; push rcx ; adc byte ptr [rcx - 0x7f], cl ; ret 0x1a0
0x000002000000c8d6 : add byte ptr [rbp - 0x75], cl ; ret
0x000002000001880e : add byte ptr [rbp - 0x75], cl ; ret 0x1472
0x0000020000115a37 : add byte ptr [rbp - 0x75], cl ; ret 0x20e8
0x000002000000a755 : add byte ptr [rbp - 0x75], cl ; ret 0x2b4c
0x000002000016c19c : add byte ptr [rbp - 0x75], cl ; ret 0x44ba
0x00000200000b8b0e : add byte ptr [rbp - 0x75], cl ; ret 0x44c7
0x00000200005c7d93 : add byte ptr [rbp - 0x75], cl ; ret 0x4a8d
0x00000200001f1a9d : add byte ptr [rbp - 0x75], cl ; ret 0x5ba
0x0000020000115b83 : add byte ptr [rbp - 0x75], cl ; ret 0x8348
0x0000020000661818 : add byte ptr [rbp - 0x75], cl ; ret 0x87e8
0x000002000013b033 : add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x0000020000034c56 : add byte ptr [rbp - 0x75], cl ; ret 0x894c
0x00000200005d889f : add byte ptr [rbp - 0x75], cl ; ret 0x8b41
0x0000020000102600 : add byte ptr [rbp - 0x75], cl ; ret 0x8b44
0x000002000077fee0 : add byte ptr [rbp - 0x75], cl ; ret 0x8b45
0x000002000004ee4f : add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200001e5adf : add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200000a1168 : add byte ptr [rbp - 0x75], cl ; ret 0x8b4c
0x00000200000b42f4 : add byte ptr [rbp - 0x75], cl ; ret 0x8b4d
0x00000200004656ff : add byte ptr [rbp - 0x75], cl ; ret 0x98e8
0x000002000016e74b : add byte ptr [rbp - 0x75], cl ; ret 0x9ce8
0x00000200000ccabb : add byte ptr [rbp - 0x75], cl ; ret 0xb70f
0x00000200000eceab : add byte ptr [rbp - 0x75], cl ; ret 0xd38b
0x00000200001f19a6 : add byte ptr [rbp - 0x75], cl ; ret 0xdab9
0x000002000067aac1 : add byte ptr [rbp - 0x75], cl ; ror dword ptr [rax + 0x3b], 1 ; ret 0xec75
0x0000020000144df7 : add byte ptr [rbp - 0x75], cl ; ror dword ptr [rcx - 0x75], 1 ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x0000020000243724 : add byte ptr [rbp - 0x75], cl ; ror dword ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x0000020000435416 : add byte ptr [rbp - 0x75d28740], al ; ret
0x000002000043609f : add byte ptr [rbp - 0x75e68740], al ; ret
0x0000020000116080 : add byte ptr [rbp - 0x75f78640], al ; ret
0x000002000068d310 : add byte ptr [rbp - 0x7699d2be], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200001fc29c : add byte ptr [rbp - 0x76], al ; ret
0x00000200004254f2 : add byte ptr [rbp - 0x76], al ; ret 0x69e8
0x00000200000784d7 : add byte ptr [rbp - 0x76], al ; ret 0x8b49
0x00000200006e79ac : add byte ptr [rbp - 0x76], al ; ret 0xf48
0x0000020000482c59 : add byte ptr [rbp - 0x77], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; pushfq ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000559562 : add byte ptr [rbp - 0x77], cl ; sub bh, dh ; ret 0xf00
0x00000200000685c6 : add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 1
0x000002000007d197 : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x9f ; ret
0x0000020000660407 : add byte ptr [rbp - 0x7b], cl ; div byte ptr [rsp + rdi - 0xa] ; ret
0x00000200006834fe : add byte ptr [rbp - 0x7b], cl ; leave ; jne 0x200006834e3 ; ret
0x00000200000df9ea : add byte ptr [rbp - 0x7b], cl ; ret
0x000002000009eb6f : add byte ptr [rbp - 0x7b], cl ; ret 0x850f
0x00000200000cbbd4 : add byte ptr [rbp - 0x7b], cl ; ret 0xa674
0x00000200000cbbef : add byte ptr [rbp - 0x7b], cl ; ret 0xeb75
0x0000020000551ef9 : add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000102241 : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + rax + 0x33], 0xd2 ; call r8
0x00000200000daf4f : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbx + rbp - 0x75], cl ; ret
0x00000200000c8ad3 : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbx + rsi - 0x75], cl ; ret 0x8b41
0x0000020000440753 : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rsi + rcx + 0x48], 0x63 ; ret 0x8b4c
0x00000200004746af : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 0
0x000002000007d87f : add byte ptr [rbp - 0x7c], al ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000020000544b2c : add byte ptr [rbp - 0x7c], al ; in al, 0xf ; test byte ptr [rdi], dh ; ret
0x0000020000221b20 : add byte ptr [rbp - 0x7c], al ; push qword ptr [rbp - 0xa] ; ret 0x7403
0x0000020000489905 : add byte ptr [rbp - 0x7c], al ; ror byte ptr [rax - 0x75], cl ; ret
0x0000020000079748 : add byte ptr [rbp - 0x7cb7efa2], cl ; ret
0x00000200004664c8 : add byte ptr [rbp - 0x8858a27], al ; ret
0x000002000041214c : add byte ptr [rbp - 0x9e18b37], al ; ret 0xf03
0x0000020000413b6f : add byte ptr [rbp - 0x9f68b40], al ; ret
0x000002000013b690 : add byte ptr [rbp - 0xa], dh ; ret
0x00000200007a1815 : add byte ptr [rbp - 0xc08740], al ; ret
0x0000020000541e75 : add byte ptr [rbp - 0xd08b40], al ; ret
0x000002000004df6f : add byte ptr [rbp - 0xdc8b40], al ; ret
0x000002000051ce5a : add byte ptr [rbp - 0xed8b40], al ; ret
0x00000200004b4a6e : add byte ptr [rbp - 0xf38740], al ; ret
0x0000020000438a95 : add byte ptr [rbp - 0xf68740], al ; ret
0x0000020000112eea : add byte ptr [rbp - 0xfd8740], al ; ret
0x00000200006213c7 : add byte ptr [rbx + 0x104789d0], cl ; call 0x2000024da49
0x0000020000005334 : add byte ptr [rbx + 0x1088b], cl ; add byte ptr [rcx - 0x75], al ; ret 0xe0d3
0x000002000040aa4a : add byte ptr [rbx + 0x17401f8], al ; ret
0x0000020000130d89 : add byte ptr [rbx + 0x17501e8], al ; ret
0x00000200004fd9bc : add byte ptr [rbx + 0x18c93], cl ; add bh, dh ; ret 0x6000
0x000002000009abe2 : add byte ptr [rbx + 0x1c8948c6], cl ; ret 0x8548
0x00000200001c8933 : add byte ptr [rbx + 0x1df6ee05], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x0000020000133eb8 : add byte ptr [rbx + 0x1edf3d2d], cl ; add bh, bh ; ret
0x000002000070aa42 : add byte ptr [rbx + 0x2266625], al ; add byte ptr [rax], al ; ret
0x0000020000057f00 : add byte ptr [rbx + 0x2368244c], cl ; ror dword ptr [rbx], cl ; ret 0xc741
0x000002000054d6de : add byte ptr [rbx + 0x23d8f7c2], cl ; ret 0xc23b
0x00000200000ce674 : add byte ptr [rbx + 0x23e61105], cl ; add byte ptr [rax + 3], cl ; ret
0x00000200001082b4 : add byte ptr [rbx + 0x23e8d1c3], cl ; ret 0x4589
0x0000020000525a20 : add byte ptr [rbx + 0x2648e8d8], cl ; ret 0x85ff
0x000002000012d4c3 : add byte ptr [rbx + 0x27bd3e05], cl ; add byte ptr [rcx - 0x7c], al ; ret 0x850f
0x000002000011bc2f : add byte ptr [rbx + 0x28d5f615], cl ; add dh, dh ; ret 0xf02
0x0000020000011526 : add byte ptr [rbx + 0x2bd123d3], cl ; ret 0x3b48
0x000002000005745b : add byte ptr [rbx + 0x2dc081], cl ; add byte ptr [rbx], cl ; ret 0x675
0x00000200000acce9 : add byte ptr [rbx + 0x2dec90], cl ; add dh, dh ; ret 0xf01
0x0000020000070135 : add byte ptr [rbx + 0x2dec91], cl ; add dh, dh ; ret 0xf01
0x000002000008f68b : add byte ptr [rbx + 0x31899605], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x00000200001b5b5c : add byte ptr [rbx + 0x3368245c], cl ; ret
0x00000200000db6a3 : add byte ptr [rbx + 0x3481c40], cl ; ret 0x3b4c
0x000002000070a86c : add byte ptr [rbx + 0x3482843], cl ; ret 0x348
0x00000200005509dc : add byte ptr [rbx + 0x34c0843], cl ; ror dword ptr [rax + 3], 1 ; ret
0x0000020000025c5c : add byte ptr [rbx + 0x34c7843], cl ; ret 0x10a8
0x000002000004af2b : add byte ptr [rbx + 0x37114e05], cl ; add byte ptr [rbx], ch ; ret 0xe083
0x00000200004ac578 : add byte ptr [rbx + 0x37504f9], al ; xor eax, eax ; ret
0x00000200004029d7 : add byte ptr [rbx + 0x3b302444], cl ; ror byte ptr [rdi], 1 ; ret 0x854d
0x00000200003fb7cb : add byte ptr [rbx + 0x3b411441], cl ; ret 0x820f
0x00000200006f33a3 : add byte ptr [rbx + 0x3b582444], cl ; ret
0x0000020000654e4a : add byte ptr [rbx + 0x3bc123c5], cl ; ror dword ptr [rdi], -0x7b ; ret 1
0x00000200000590ec : add byte ptr [rbx + 0x3bc323c6], cl ; ret
0x0000020000483d44 : add byte ptr [rbx + 0x42343c2], cl ; xor byte ptr [rbx], bh ; ret 0x840f
0x000002000013131b : add byte ptr [rbx + 0x43083], cl ; add byte ptr [rcx - 0x7c], al ; ret
0x0000020000225164 : add byte ptr [rbx + 0x430f04f8], al ; ret 0x44ff
0x0000020000130b12 : add byte ptr [rbx + 0x438b7c53], cl ; js 0x20000130b4d ; ret 0x8944
0x0000020000197d43 : add byte ptr [rbx + 0x440f18f8], al ; ret 0xbee9
0x00000200002364e9 : add byte ptr [rbx + 0x440f48cf], cl ; ret 0x8d48
0x00000200000d6869 : add byte ptr [rbx + 0x4589ffc8], al ; sub byte ptr [rax - 0x75], cl ; ret
0x000002000001c2f1 : add byte ptr [rbx + 0x4689ffc8], al ; sub byte ptr [rax - 0x75], cl ; ret
0x0000020000044e23 : add byte ptr [rbx + 0x48302444], cl ; add esp, 0x28 ; ret
0x000002000040776b : add byte ptr [rbx + 0x48482444], cl ; add esp, 0x38 ; ret
0x000002000003bc48 : add byte ptr [rbx + 0x48582444], cl ; add esp, 0x38 ; ret
0x00000200000e37d3 : add byte ptr [rbx + 0x48b49c2], cl ; ret
0x0000020000121480 : add byte ptr [rbx + 0x48c28bd0], cl ; add esp, 0x28 ; ret
0x000002000003b283 : add byte ptr [rbx + 0x48d48c1], cl ; ret 0xccc3
0x0000020000514966 : add byte ptr [rbx + 0x498d48c2], cl ; or byte ptr [rax + 0x3b], cl ; ret
0x0000020000669747 : add byte ptr [rbx + 0x4c8b48c2], cl ; ret
0x00000200004aa72a : add byte ptr [rbx + 0x51893], cl ; add dh, dh ; ret 0xf01
0x0000020000231464 : add byte ptr [rbx + 0x538b0843], cl ; sbb byte ptr [rbx], bh ; ret 0x3073
0x0000020000220070 : add byte ptr [rbx + 0x538fa505], cl ; add bh, bh ; ret
0x0000020000068092 : add byte ptr [rbx + 0x5d], bl ; ret
0x0000020000507103 : add byte ptr [rbx + 0x60a5e8d5], cl ; ret
0x00000200003d288a : add byte ptr [rbx + 0x65483], cl ; add byte ptr [rcx + 0x23], al ; ret 0x453b
0x0000020000136b0b : add byte ptr [rbx + 0x68093], cl ; add dh, dh ; ret 0xf02
0x000002000052680f : add byte ptr [rbx + 0x6bc9ff0b], cl ; rcr dword ptr [rax - 0x7d], 1 ; ret 0x3960
0x00000200001a22b3 : add byte ptr [rbx + 0x6c490], cl ; add dh, dh ; ret 0x750c
0x000002000024511d : add byte ptr [rbx + 0x6d093], cl ; add dh, dh ; ret 0xf04
0x000002000023f0ab : add byte ptr [rbx + 0x6d096], cl ; add dh, dh ; ret 0xf04
0x00000200002493ed : add byte ptr [rbx + 0x6d097], cl ; add dh, dh ; ret 0xf04
0x0000020000131618 : add byte ptr [rbx + 0x79c085f8], cl ; cwde ; call 0x200004fd889
0x000002000022a84c : add byte ptr [rbx + 0x82c82], cl ; add byte ptr [rcx - 0x7c], al ; ret
0x000002000005904b : add byte ptr [rbx + 0x9081], cl ; add byte ptr [rbx], bh ; ret 0x2074
0x000002000055b0dc : add byte ptr [rbx + 0x9889], al ; add byte ptr [rcx], al ; ret
0x00000200000887f7 : add byte ptr [rbx + 0xa893], cl ; add byte ptr [rcx - 0x75], al ; ret 0xd285
0x0000020000706c77 : add byte ptr [rbx + 0xac89], cl ; add bh, bh ; ret
0x000002000010a469 : add byte ptr [rbx + 0xb4807e0], al ; ret
0x00000200007af703 : add byte ptr [rbx + 0xd8d48d6], cl ; ret
0x00000200000ddc6c : add byte ptr [rbx + 0xd8d48f8], cl ; ret 0x18dd
0x000002000021fcaa : add byte ptr [rbx + 0xdf59305], cl ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x00000200005e9379 : add byte ptr [rbx + 0xe8b0456], cl ; call 0x2000020a941
0x0000020000637a6e : add byte ptr [rbx + 0xf6c2444], cl ; ret
0x00000200005bd03c : add byte ptr [rbx + 0xfc085d8], cl ; mov byte ptr [rdi], ch ; ret 0xffe9
0x00000200004a051e : add byte ptr [rbx + 0xfc085d8], cl ; mov dh, ch ; call qword ptr [rdx]
0x00000200004e42f4 : add byte ptr [rbx + 0xfc085e8], cl ; mov byte ptr [rax], bh ; ret
0x00000200005ae5ac : add byte ptr [rbx + 0xfca3bc1], cl ; ret 0x26e9
0x000002000043fd33 : add byte ptr [rbx + 0xfca3bc1], cl ; ret 0x8389
0x0000020000052529 : add byte ptr [rbx + 7], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006321a3 : add byte ptr [rbx + rax - 0x2f], cl ; jmp r10
0x0000020000222c51 : add byte ptr [rbx + rax - 0x3f], cl ; jmp r8
0x000002000070285d : add byte ptr [rbx + rax - 0x50], bh ; add ebx, eax ; xor al, al ; ret
0x00000200000f95cf : add byte ptr [rbx + rax - 0x50], dh ; add ebx, eax ; xor al, al ; ret
0x00000200006802a7 : add byte ptr [rbx + rax - 0x7d], dh ; loopne 0x200006802d2 ; ret
0x00000200000216d2 : add byte ptr [rbx + rax*4], al ; stc ; inc dword ptr [rcx - 0x75] ; ret
0x00000200000216d1 : add byte ptr [rbx + rax*4], r8b ; stc ; inc dword ptr [rcx - 0x75] ; ret
0x0000020000156306 : add byte ptr [rbx + rbp - 0x28], cl ; jmp r11
0x00000200000c8055 : add byte ptr [rbx + rcx - 0x77], dh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000002000024f753 : add byte ptr [rbx + rcx*4 + 0x14], cl ; add dword ptr [rax + 0x63], ecx ; ret 0x6948
0x00000200006f742f : add byte ptr [rbx + rcx*4 + 0x15], al ; lodsd eax, dword ptr [rsi] ; ret 0x48ff
0x00000200001bd065 : add byte ptr [rbx + rcx*4 + 0x2d], al ; outsd dx, dword ptr [rsi] ; ret
0x00000200000db10c : add byte ptr [rbx + rcx*4 + 0x41], cl ; adc byte ptr [rax - 0x75], cl ; ret 0x3345
0x00000200000f6457 : add byte ptr [rbx + rcx*4 + 0x41], cl ; or dh, dh ; ret 0xf1f
0x000002000000f926 : add byte ptr [rbx + rcx*4 + 0x43], cl ; or byte ptr [rbp + 0x3b], cl ; ret 0x850f
0x000002000006d26a : add byte ptr [rbx + rcx*4 + 0x44], cl ; and al, 0x38 ; call rax
0x000002000000ee9f : add byte ptr [rbx + rcx*4 + 0x45], cl ; add al, ch ; ret
0x000002000004cf2a : add byte ptr [rbx + rcx*4 + 0x45], cl ; sbb byte ptr [rax - 0x75], cl ; ret
0x000002000024ecd7 : add byte ptr [rbx + rcx*4 + 0x47], al ; add al, 0xb9 ; ret 0
0x00000200005262df : add byte ptr [rbx + rcx*4 + 0x4b], al ; xor al, 0x8b ; ret 0x6b48
0x00000200000b0bfc : add byte ptr [rbx + rcx*4 + 0x52], cl ; adc byte ptr [rcx - 0x7f], cl ; ret 0x1a0
0x000002000064af3e : add byte ptr [rbx + rcx*4 + 0x55], al ; ret
0x0000020000144486 : add byte ptr [rbx + rcx*4 + 0x55], al ; sar dword ptr [rax], cl ; pop rbp ; ret
0x00000200000b8a5d : add byte ptr [rbx + rcx*4 + 0x55], cl ; adc byte ptr [rcx - 0x75], cl ; ret 0x8948
0x000002000014435b : add byte ptr [rbx + rcx*4 + 0x55], cl ; out 0x38, eax ; pop rbp ; ret
0x00000200000a7668 : add byte ptr [rbx + rcx*4 + 0x56], cl ; adc byte ptr [rcx - 0x7f], cl ; ret 0x1a0
0x00000200001f1082 : add byte ptr [rbx + rcx*4 + 0x56], cl ; sub byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200000c6c02 : add byte ptr [rbx + rcx*4 + 0x5d], al ; sub byte ptr [rcx - 1], al ; ret
0x0000020000194a11 : add byte ptr [rbx + rcx*4 + 0x5d], cl ; or byte ptr [rbx], dh ; imul cl ; ret
0x00000200001b8244 : add byte ptr [rbx + rcx*4 + 0x61], cl ; sbb byte ptr [rcx - 0x75], al ; ret 0x8b41
0x00000200004d0c78 : add byte ptr [rbx + rcx*4 + 0x65], al ; or bh, bh ; ret
0x0000020000046549 : add byte ptr [rbx + rcx*4 + 0x73], cl ; or byte ptr [rax - 0x75], cl ; ret
0x000002000040e6de : add byte ptr [rbx + rcx*4 + 0x77], al ; or byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x00000200006cbfcc : add byte ptr [rbx + rcx*4 + 0x7d], cl ; out -0xa, eax ; ret
0x00000200006b7d11 : add byte ptr [rbx + rcx*4 + 0xd], al ; out -4, eax ; ret
0x00000200001c1ad0 : add byte ptr [rbx + rcx*4 + 0xd], cl ; js 0x200001c1b5c ; adc eax, dword ptr [rax] ; call r9
0x00000200001c088a : add byte ptr [rbx + rcx*4 + 0xd], cl ; mov esi, 0x4100138f ; call rcx
0x00000200001bebf2 : add byte ptr [rbx + rcx*4 + 0xd], cl ; push rsi ; lodsb al, byte ptr [rsi] ; adc eax, dword ptr [rax] ; call r9
0x00000200001c04f2 : add byte ptr [rbx + rcx*4 + 0xd], cl ; push rsi ; xchg eax, ebx ; adc eax, dword ptr [rax] ; call r9
0x000002000052d46d : add byte ptr [rbx + rcx*4 + 0xd], cl ; ret
0x00000200004e1765 : add byte ptr [rbx + rcx*4 + 5], cl ; ret
0x000002000024d6b6 : add byte ptr [rbx + rcx*4 + 5], cl ; ret 0xace
0x00000200002267c2 : add byte ptr [rbx + rcx*4 - 0x37], cl ; jne 0x200002267b1 ; xor eax, eax ; ret
0x00000200004cf92a : add byte ptr [rbx + rcx*4 - 0x3d], cl ; mov rcx, r13 ; call rax
0x00000200001c2475 : add byte ptr [rbx + rcx*4 - 0x3f], al ; jne 0x200001c2488 ; mov eax, r8d ; ret
0x000002000024f198 : add byte ptr [rbx + rcx*4 - 0x6c], cl ; ret 0x95c0
0x0000020000089c6d : add byte ptr [rbx + rcx*4 - 0x74], cl ; ret 0xaa38
0x00000200005cd96c : add byte ptr [rbx + rcx*4], al ; ret 0x1ba
0x000002000042514a : add byte ptr [rbx + rdi + 0x48], dh ; add esp, 0x28 ; ret
0x0000020000604881 : add byte ptr [rbx + rdi - 0x2f], al ; jae 0x20000604892 ; mov al, 1 ; ret
0x000002000048263a : add byte ptr [rbx + rdx*2 - 0xa], dh ; ret
0x000002000001ea68 : add byte ptr [rbx - 0x1404c799], al ; ret
0x00000200004052a9 : add byte ptr [rbx - 0x14a7dbac], cl ; jrcxz 0x200004052b8 ; ret 0xb6eb
0x000002000018bd7c : add byte ptr [rbx - 0x166f0004], bh ; ret
0x000002000003d187 : add byte ptr [rbx - 0x16ffbf9f], al ; ret
0x00000200001762a1 : add byte ptr [rbx - 0x17162f83], cl ; ret 0xfff9
0x0000020000620e42 : add byte ptr [rbx - 0x1f74bb30], cl ; call 0x2000024da49
0x00000200004344cc : add byte ptr [rbx - 0x27fc0f20], al ; jmp 0x2000043449a
0x0000020000401efa : add byte ptr [rbx - 0x287af0ff], dh ; ret
0x00000200004c5950 : add byte ptr [rbx - 0x3074b728], cl ; call 0x200000e7da9
0x00000200001cd4db : add byte ptr [rbx - 0x3074b72a], cl ; call 0x20000139780
0x00000200007081d0 : add byte ptr [rbx - 0x3074b72b], cl ; mov rsi, rax ; call rbx
0x0000020000018bc4 : add byte ptr [rbx - 0x33], dh ; mov eax, 1 ; ret
0x00000200000b85f4 : add byte ptr [rbx - 0x3b7cb73a], cl ; js 0x200000b8664 ; pop rsi ; ret
0x00000200007bc6bf : add byte ptr [rbx - 0x3b7cb73d], cl ; jo 0x200007bc72a ; ret
0x00000200001eaaa3 : add byte ptr [rbx - 0x3ddcb7ff], cl ; ret
0x000002000022d1d6 : add byte ptr [rbx - 0x3ef00f3e], cl ; sbb byte ptr [r11], al ; ret 0xc23b
0x00000200000c56c6 : add byte ptr [rbx - 0x3f7a7efc], cl ; je 0x200000c56da ; ret
0x00000200006247f1 : add byte ptr [rbx - 0x3fffff66], bh ; call 0x2000024da49
0x00000200007a88a9 : add byte ptr [rbx - 0x400887fb], cl ; dec dword ptr [rax - 0x7d] ; ret 0x4850
0x00000200000c85fc : add byte ptr [rbx - 0x41f0ba18], cl ; xchg eax, esi ; ret
0x0000020000062b9d : add byte ptr [rbx - 0x49f00037], al ; ret 0xf44
0x00000200007d5329 : add byte ptr [rbx - 0x4dc4a0f3], al ; call qword ptr [rax]
0x0000020000606528 : add byte ptr [rbx - 0x50b3], al ; ret
0x00000200005352c1 : add byte ptr [rbx - 0x73], al ; add al, 0 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200000545e0 : add byte ptr [rbx - 0x742d082a], cl ; ret
0x00000200000e1634 : add byte ptr [rbx - 0x7487dbb4], cl ; ret 0xba0f
0x000002000010897a : add byte ptr [rbx - 0x7497dba4], cl ; ret
0x000002000013fcd2 : add byte ptr [rbx - 0x749fdbac], cl ; ret 0xd8f7
0x000002000024b3ff : add byte ptr [rbx - 0x74b380bb], cl ; ret
0x0000020000425aaa : add byte ptr [rbx - 0x74b383aa], cl ; ret
0x000002000078e38f : add byte ptr [rbx - 0x74b3afb3], cl ; ret
0x000002000022c2f4 : add byte ptr [rbx - 0x74b3ebad], cl ; ret
0x00000200000b1c92 : add byte ptr [rbx - 0x74b3f7b9], cl ; ret 0xc149
0x00000200003e5501 : add byte ptr [rbx - 0x74b3fb8b], cl ; insd dword ptr [rdi], dx ; adc cl, ch ; ret
0x000002000077f955 : add byte ptr [rbx - 0x74b6efb5], cl ; ret
0x00000200000eeaa2 : add byte ptr [rbx - 0x74b7dbb3], cl ; ret
0x0000020000013bfb : add byte ptr [rbx - 0x74b7df8b], cl ; ret 0xf48
0x00000200004499fe : add byte ptr [rbx - 0x74bb031a], al ; ret
0x0000020000098d26 : add byte ptr [rbx - 0x74bb50bb], cl ; ret
0x000002000024796f : add byte ptr [rbx - 0x74bb97bb], cl ; ret
0x0000020000055496 : add byte ptr [rbx - 0x74bbe7a3], cl ; adc bh, bh ; ret
0x00000200004ef224 : add byte ptr [rbx - 0x74beafb2], cl ; ret
0x00000200000a7995 : add byte ptr [rbx - 0x75], cl ; push rsp ; ret 0xc708
0x00000200000b4634 : add byte ptr [rbx - 0x75], cl ; ret 0x4808
0x00000200003d1eed : add byte ptr [rbx - 0x79f0c505], al ; ret
0x000002000064d77d : add byte ptr [rbx - 0x79f0fe08], al ; ret 0
0x00000200004dbe74 : add byte ptr [rbx - 0x7a2f083f], cl ; ret 0x870f
0x0000020000489a51 : add byte ptr [rbx - 0x7abe992d], cl ; ret 0x850f
0x0000020000473a16 : add byte ptr [rbx - 0x7af0f005], al ; ret
0x0000020000462b15 : add byte ptr [rbx - 0x7af0fb05], al ; ret 8
0x0000020000094b21 : add byte ptr [rbx - 0x7af0fe18], al ; ret 2
0x00000200006b4491 : add byte ptr [rbx - 0x7af0fec7], al ; ret 0
0x000002000049a49d : add byte ptr [rbx - 0x7bbe93b9], cl ; ret
0x00000200000a2911 : add byte ptr [rbx - 0x7bf00006], al ; ret
0x0000020000143e14 : add byte ptr [rbx - 0x7bf0b906], al ; ret 0
0x0000020000445ea2 : add byte ptr [rbx - 0x7bf0e211], al ; ret 0x1644
0x0000020000643084 : add byte ptr [rbx - 0x7bf0fb08], al ; ret 5
0x00000200006cfbc2 : add byte ptr [rbx - 0x7bf0fe17], al ; ret
0x0000020000491767 : add byte ptr [rbx - 0x7bf0fe17], al ; ret 0
0x000002000068960a : add byte ptr [rbx - 0x7bf0fe18], al ; ret
0x00000200001dadc3 : add byte ptr [rbx - 0x7cb7dba7], cl ; ret
0x00000200003d1459 : add byte ptr [rbx - 0x7cb7ef39], al ; ret
0x00000200001dade8 : add byte ptr [rbx - 0x7cb7f3ad], cl ; ret 0x4810
0x0000020000544717 : add byte ptr [rbx - 0x7cb7f7bd], cl ; ret
0x00000200000404bd : add byte ptr [rbx - 0x7ccbdbac], cl ; ret 0x65fe
0x000002000062575a : add byte ptr [rbx - 0x7d211723], cl ; ret 0x48ff
0x000002000040fdb7 : add byte ptr [rbx - 0x7efb743e], cl ; ret
0x00000200003c814e : add byte ptr [rbx - 0x88ff8e3], cl ; push rsi ; ret
0x00000200004c4a7a : add byte ptr [rbx - 0x8a3dbac], cl ; ret 0x600
0x0000020000534537 : add byte ptr [rbx - 0x8b7dbac], cl ; ret 0xffe0
0x0000020000616c80 : add byte ptr [rbx - 0x8fdbac], cl ; ret 0x5489
0x000002000066196a : add byte ptr [rbx - 0x987dba4], cl ; ret
0x00000200004c8e18 : add byte ptr [rbx - 0x99fdba4], cl ; ret
0x00000200004e3edb : add byte ptr [rbx - 0x9b7dba4], cl ; ret
0x000002000051e6de : add byte ptr [rbx - 0x9d7c4ac], cl ; ret 0xf20
0x0000020000669c66 : add byte ptr [rbx - 0xb3dbac], cl ; ret 0xcae9
0x0000020000128b02 : add byte ptr [rbx - 0xb7ffda], al ; ret
0x00000200003cc911 : add byte ptr [rbx - 0xca4f7eb], cl ; dec dword ptr [rax + 0x63] ; ret 0x8348
0x000002000012caf6 : add byte ptr [rbx - 0xd3dbb4], cl ; ror dword ptr [rdi], -0x49 ; ret
0x00000200005d1223 : add byte ptr [rbx - 0xffa2ff], al ; add dword ptr [rbp], ebx ; ret
0x00000200005a5ec9 : add byte ptr [rbx], ah ; fimul word ptr [rbx - 0x2658f1fb] ; jmp qword ptr [rbx]
0x000002000022fcb5 : add byte ptr [rbx], ah ; ret
0x0000020000436eb3 : add byte ptr [rbx], ah ; ret 0x2d
0x00000200005eb939 : add byte ptr [rbx], ah ; ret 0x3b41
0x000002000066dc66 : add byte ptr [rbx], ah ; ret 0x4489
0x0000020000087f5a : add byte ptr [rbx], ah ; ret 0x4789
0x000002000043f088 : add byte ptr [rbx], ah ; ret 0x8941
0x000002000023ba15 : add byte ptr [rbx], ah ; ret 0xc23b
0x0000020000674ea8 : add byte ptr [rbx], ah ; ret 0xc748
0x00000200001332f9 : add byte ptr [rbx], ah ; ret 0xc803
0x00000200005abc8a : add byte ptr [rbx], ah ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x8102
0x000002000046da34 : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000451f8f : add byte ptr [rbx], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x00000200005028f6 : add byte ptr [rbx], al ; jo 0x20000502907 ; mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x200005028cd
0x00000200004634d3 : add byte ptr [rbx], al ; lcall ptr [rbx] ; jmp qword ptr [rcx]
0x000002000000e0d8 : add byte ptr [rbx], al ; ret
0x000002000007f57c : add byte ptr [rbx], al ; ret 0x3344
0x00000200005fa1fd : add byte ptr [rbx], al ; ret 0x6583
0x0000020000075e7e : add byte ptr [rbx], al ; ret 0x813b
0x0000020000706d98 : add byte ptr [rbx], al ; ret 0x8445
0x000002000018615b : add byte ptr [rbx], al ; ret 0x8941
0x00000200004ebc3f : add byte ptr [rbx], al ; ret 0x8948
0x0000020000135d40 : add byte ptr [rbx], al ; ret 0x8a45
0x00000200004e8d5e : add byte ptr [rbx], al ; ret 0x8b48
0x00000200004dbedf : add byte ptr [rbx], al ; ret 0x9489
0x00000200002117bf : add byte ptr [rbx], al ; ret 0xb841
0x000002000003e09a : add byte ptr [rbx], al ; ret 0xc23b
0x000002000068d775 : add byte ptr [rbx], al ; ret 0xf799
0x00000200006058ff : add byte ptr [rbx], al ; rol byte ptr [rbp - 0x7cfc8b40], 1 ; ret 0xb9f4
0x000002000042915e : add byte ptr [rbx], al ; ror byte ptr [rcx - 0x74b3dbac], 1 ; ret 0x349
0x0000020000075ea3 : add byte ptr [rbx], bh ; adc al, 0x7f ; xor al, 0x2b ; ret
0x0000020000007ae8 : add byte ptr [rbx], bh ; ret
0x00000200001f75ec : add byte ptr [rbx], bh ; ret 0x1075
0x0000020000642e4a : add byte ptr [rbx], bh ; ret 0x1375
0x000002000047c678 : add byte ptr [rbx], bh ; ret 0x1a72
0x000002000022a591 : add byte ptr [rbx], bh ; ret 0x1b72
0x0000020000059051 : add byte ptr [rbx], bh ; ret 0x2074
0x00000200007087ad : add byte ptr [rbx], bh ; ret 0x2173
0x000002000002fd01 : add byte ptr [rbx], bh ; ret 0x3373
0x0000020000087b9e : add byte ptr [rbx], bh ; ret 0x377
0x0000020000643b59 : add byte ptr [rbx], bh ; ret 0x3c75
0x00000200000532dc : add byte ptr [rbx], bh ; ret 0x470f
0x0000020000653be3 : add byte ptr [rbx], bh ; ret 0x676
0x0000020000688a97 : add byte ptr [rbx], bh ; ret 0x7675
0x00000200000ee0de : add byte ptr [rbx], bh ; ret 0x767d
0x00000200001b9862 : add byte ptr [rbx], bh ; ret 0x820f
0x000002000010b894 : add byte ptr [rbx], bh ; ret 0x830f
0x000002000004c6ff : add byte ptr [rbx], bh ; ret 0x840f
0x0000020000706083 : add byte ptr [rbx], bh ; ret 0x850f
0x000002000068cdcb : add byte ptr [rbx], bh ; ret 0x860f
0x0000020000135f69 : add byte ptr [rbx], bh ; ret 0x870f
0x0000020000004d3b : add byte ptr [rbx], bh ; ret 0x874
0x0000020000427417 : add byte ptr [rbx], bh ; ret 0x8b44
0x00000200004f7c56 : add byte ptr [rbx], bh ; ret 0x8e0f
0x0000020000477ea1 : add byte ptr [rbx], bh ; ret 0x8f0f
0x0000020000704402 : add byte ptr [rbx], bh ; ret 0xa73
0x0000020000218f1b : add byte ptr [rbx], bh ; ret 0xc77
0x000002000003733e : add byte ptr [rbx], bh ; ret 0xc7f
0x00000200004ad9b3 : add byte ptr [rbx], bh ; ret 0xdd74
0x00000200004abd62 : add byte ptr [rbx], bh ; ret 0xe375
0x0000020000413653 : add byte ptr [rbx], bh ; ret 0xe675
0x000002000044f2ed : add byte ptr [rbx], bh ; ret 0xe775
0x00000200005ada55 : add byte ptr [rbx], bh ; ret 0xe875
0x00000200004a6c0d : add byte ptr [rbx], bh ; ret 0xea75
0x0000020000235774 : add byte ptr [rbx], bh ; ret 0xf72
0x00000200001b4dcd : add byte ptr [rbx], bh ; ret 0xf73
0x00000200003d01b9 : add byte ptr [rbx], bh ; ret 0xf774
0x00000200001fc65f : add byte ptr [rbx], bh ; rol byte ptr [rax - 0x49], 1 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000020000481e2e : add byte ptr [rbx], bh ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x8844
0x000002000007586c : add byte ptr [rbx], bh ; ror byte ptr [rdi], 1 ; ret 0xd08b
0x0000020000404dd0 : add byte ptr [rbx], bh ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x00000200001044ee : add byte ptr [rbx], bl ; jmp qword ptr [rbx]
0x000002000001a32e : add byte ptr [rbx], ch ; ret
0x000002000020f1df : add byte ptr [rbx], ch ; ret 0x2b44
0x0000020000429175 : add byte ptr [rbx], ch ; ret 0x4489
0x0000020000504598 : add byte ptr [rbx], ch ; ret 0x448b
0x00000200001d3d95 : add byte ptr [rbx], ch ; ret 0x8966
0x000002000024f7a1 : add byte ptr [rbx], ch ; ret 0x8b48
0x000002000065c6da : add byte ptr [rbx], ch ; ret 0x9848
0x0000020000213981 : add byte ptr [rbx], ch ; ret 0xc803
0x00000200001b986a : add byte ptr [rbx], ch ; ret 0xc83b
0x000002000004af31 : add byte ptr [rbx], ch ; ret 0xe083
0x0000020000631785 : add byte ptr [rbx], ch ; ret 0xf803
0x00000200005913f4 : add byte ptr [rbx], ch ; ret 0xf823
0x000002000002f21f : add byte ptr [rbx], ch ; ret 0xf883
0x000002000008e8a7 : add byte ptr [rbx], ch ; ret 0xff48
0x0000020000012ba2 : add byte ptr [rbx], ch ; rol byte ptr [rcx - 0x75], 1 ; ret
0x00000200000fba4d : add byte ptr [rbx], cl ; add bh, bh ; ret
0x00000200000eaddf : add byte ptr [rbx], cl ; enter -0x72b5, 4 ; or byte ptr [rcx + 0x3b], cl ; ret 0x448b
0x00000200005d3df7 : add byte ptr [rbx], cl ; ret
0x0000020000057461 : add byte ptr [rbx], cl ; ret 0x675
0x0000020000711f95 : add byte ptr [rbx], cl ; ret 0x8b48
0x00000200005d6ae9 : add byte ptr [rbx], cl ; ret 0xc883
0x0000020000026ff5 : add byte ptr [rbx], cl ; ror byte ptr [rcx - 0x3fccefaf], 1 ; ret
0x000002000020fa4a : add byte ptr [rbx], cl ; sal dh, 1 ; ret 0x753f
0x00000200000e1ca2 : add byte ptr [rbx], dh ; adc byte ptr [r8 - 1], r9b ; ret 0xe083
0x00000200001de285 : add byte ptr [rbx], dh ; dec dword ptr [rax - 9] ; ret
0x00000200004e5bd6 : add byte ptr [rbx], dh ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200000b8160 : add byte ptr [rbx], dh ; fisttp dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000200000b8e47 : add byte ptr [rbx], dh ; fisttp dword ptr [rcx - 0x75] ; push rdi ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000446865 : add byte ptr [rbx], dh ; fucomi st(3) ; ret 0x3345
0x00000200004124fb : add byte ptr [rbx], dh ; fucomi st(3) ; ret 0xf41
0x0000020000706ec2 : add byte ptr [rbx], dh ; imul byte ptr [rbx] ; ret 0x4779
0x00000200004fdca9 : add byte ptr [rbx], dh ; imul cl ; ret 0xfffd
0x000002000023c12f : add byte ptr [rbx], dh ; inc dword ptr [rcx - 0x75] ; ret 0x8d4c
0x00000200000b806d : add byte ptr [rbx], dh ; jmp qword ptr [rcx]
0x000002000078986f : add byte ptr [rbx], dh ; leave ; call 0x200000c5b2d
0x00000200006f74cb : add byte ptr [rbx], dh ; leave ; call 0x200006f37b1
0x0000020000242f22 : add byte ptr [rbx], dh ; leave ; call r10
0x000002000023b618 : add byte ptr [rbx], dh ; leave ; call r9
0x000002000014626a : add byte ptr [rbx], dh ; leave ; mov qword ptr [rsp + 0x70], rax ; call r11
0x00000200004bacac : add byte ptr [rbx], dh ; push rsi ; ret 0x750f
0x000002000012244c : add byte ptr [rbx], dh ; ret
0x00000200001add1f : add byte ptr [rbx], dh ; ret 0x589
0x00000200004880c2 : add byte ptr [rbx], dh ; ret 0x7d89
0x00000200000b2a66 : add byte ptr [rbx], dh ; ret 0x8489
0x000002000024b1d5 : add byte ptr [rbx], dh ; ret 0x8948
0x00000200004cc12f : add byte ptr [rbx], dh ; ret 0x8b48
0x0000020000087d73 : add byte ptr [rbx], dh ; ret 0x948a
0x00000200005cd80f : add byte ptr [rbx], dh ; ret 0xa9
0x000002000044cf47 : add byte ptr [rbx], dh ; ret 0xd069
0x00000200004836f8 : add byte ptr [rbx], dh ; rol al, 0xe0 ; add al, 0x32 ; ret
0x00000200001bbf91 : add byte ptr [rbx], dh ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200000309ba : add byte ptr [rbx], dh ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000008d73d : add byte ptr [rbx], dh ; rol byte ptr [rax + rax*8 - 0x74b7f68b], cl ; ret 0x8348
0x0000020000530f09 : add byte ptr [rbx], dh ; rol byte ptr [rbp + 0x33], cl ; shr al, 0x44 ; ret
0x0000020000494a39 : add byte ptr [rbx], dh ; rol byte ptr [rbx + rcx*4 - 0x20], 0x83 ; ret
0x0000020000484e21 : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf1f7
0x000002000044d805 : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x0000020000404b92 : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x000002000022d9eb : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x77], 9 ; ret
0x000002000019cf43 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x73], 0x15 ; ret
0x0000020000402a27 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x5c ; and al, 0x28 ; pop rdi ; ret
0x000002000055ec5a : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200006b3b3b : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x000002000043a963 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000056b88
0x00000200004a1765 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x200000ca369
0x00000200004cbebe : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x200000eef39
0x000002000002a52a : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x2000002a53b ; ret
0x00000200004adc38 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x2b], 0x8b ; ret 0x8b48
0x00000200000cf5e6 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rdi + 0x5b], bl ; ret
0x00000200004c3ef1 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200004c3f43 ; pop rbp ; ret
0x0000020000070cfc : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x000002000052cdf9 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000020000694393 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000020000203a26 : add byte ptr [rbx], dh ; ror byte ptr [rbp - 0x7b], 0xc0 ; je 0x20000203a3a ; call r8
0x00000200001438f4 : add byte ptr [rbx], dh ; sal dh, cl ; ret
0x000002000024c5bf : add byte ptr [rbx], dh ; sar bh, 0xc0 ; ret
0x000002000060daf6 : add byte ptr [rbx], dh ; shr al, cl ; add dh, ch ; ret
0x00000200007bc29a : add byte ptr [rbx], dh ; shr al, cl ; loop 0x200007bc242 ; ret 0x66ff
0x00000200007b52c7 : add byte ptr [rbx], dh ; shr al, cl ; mov ch, 0xc ; ret
0x00000200004746f8 : add byte ptr [rbx], dh ; shr al, cl ; nop ; cdq ; ret 0xf0ff
0x00000200007bc270 : add byte ptr [rbx], dh ; shr al, cl ; or al, 0x9d ; ret 0x66ff
0x00000200004c480c : add byte ptr [rbx], dh ; shr al, cl ; sbb al, 0xa7 ; ret 0xbbff
0x000002000060152e : add byte ptr [rbx], dh ; shr bl, 0 ; add rsp, 0x18 ; ret
0x000002000017ea7f : add byte ptr [rbx], dh ; shr cl, 0x15 ; ret 0xffec
0x0000020000050573 : add byte ptr [rbx], dl ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000235e15 : add byte ptr [rcx + 0x11fec005], cl ; add bh, bh ; ret
0x00000200006f441b : add byte ptr [rcx + 0x15ff1c43], cl ; ret
0x0000020000439e48 : add byte ptr [rcx + 0x23502444], cl ; ret
0x0000020000165f86 : add byte ptr [rcx + 0x23], al ; ret 0x3b41
0x00000200003d2890 : add byte ptr [rcx + 0x23], al ; ret 0x453b
0x000002000017d3b7 : add byte ptr [rcx + 0x23], cl ; fiadd word ptr [rbp - 0x75] ; ret 0x8b49
0x00000200000261b4 : add byte ptr [rcx + 0x23], cl ; ret
0x000002000009eb87 : add byte ptr [rcx + 0x23], cl ; ret 0x3345
0x00000200000a78ae : add byte ptr [rcx + 0x23], cl ; ret 0x7989
0x0000020000451faa : add byte ptr [rcx + 0x23], cl ; ret 0xbb41
0x00000200000b810e : add byte ptr [rcx + 0x23], cl ; ror byte ptr [rcx - 0x75], 1 ; ret 0x8d4c
0x00000200004b4765 : add byte ptr [rcx + 0x2a], al ; ret 0x388
0x000002000015bdd2 : add byte ptr [rcx + 0x2b], al ; ret
0x0000020000213163 : add byte ptr [rcx + 0x2b], al ; ret 0x344
0x000002000043f43d : add byte ptr [rcx + 0x2b], al ; ret 0x348d
0x000002000015bba5 : add byte ptr [rcx + 0x2b], al ; ret 0xf41
0x00000200001a6234 : add byte ptr [rcx + 0x2b], al ; rol byte ptr [rcx - 0x75], cl ; ret
0x000002000010c980 : add byte ptr [rcx + 0x2b], al ; rol dword ptr [rcx + 3], 1 ; salc ; add r8d, edx ; jmp 0x2000010c96f
0x0000020000451fb3 : add byte ptr [rcx + 0x2b], cl ; ret
0x000002000049b929 : add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x00000200001f3940 : add byte ptr [rcx + 0x2b], cl ; ror byte ptr [rcx - 0x73], 4 ; ret
0x000002000061d68a : add byte ptr [rcx + 0x2de84c43], cl ; ret
0x0000020000047418 : add byte ptr [rcx + 0x31], cl ; adc r14b, r14b ; ret
0x000002000006fe59 : add byte ptr [rcx + 0x31], cl ; adc r14b, sil ; ret
0x00000200001f3725 : add byte ptr [rcx + 0x32], al ; ret
0x0000020000218f3e : add byte ptr [rcx + 0x33], al ; leave ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x0000020000213d4c : add byte ptr [rcx + 0x33], al ; ret
0x0000020000422f7f : add byte ptr [rcx + 0x33], cl ; add dword ptr [rax - 1], ecx ; ret 0xc148
0x00000200000269df : add byte ptr [rcx + 0x33], cl ; ret
0x00000200000d2dd7 : add byte ptr [rcx + 0x33], cl ; ret 0x8948
0x00000200000ade3a : add byte ptr [rcx + 0x33], cl ; ret 0x8949
0x00000200001fc2a9 : add byte ptr [rcx + 0x3a], al ; ret
0x00000200001d888e : add byte ptr [rcx + 0x3a], al ; ret 0x57d
0x00000200007a4cb5 : add byte ptr [rcx + 0x3a], al ; ret 0x850f
0x0000020000142df7 : add byte ptr [rcx + 0x3a], al ; ret 0x9375
0x00000200006b78fd : add byte ptr [rcx + 0x3b442444], cl ; ret
0x000002000024a28b : add byte ptr [rcx + 0x3b], 0x54 ; ret
0x0000020000643424 : add byte ptr [rcx + 0x3b], al ; enter 0x1674, -0x75 ; ret
0x000002000052dfd1 : add byte ptr [rcx + 0x3b], al ; fimul dword ptr [rdi] ; test dword ptr [rsi], ebp ; ret 8
0x00000200007060a5 : add byte ptr [rcx + 0x3b], al ; push rax ; add al, 0x73 ; jbe 0x20000706040 ; ret 0x3949
0x000002000016a0db : add byte ptr [rcx + 0x3b], al ; ret
0x000002000005da02 : add byte ptr [rcx + 0x3b], al ; ret 0x830f
0x00000200005449ff : add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x00000200004f0aac : add byte ptr [rcx + 0x3b], al ; ret 0x850f
0x000002000023ef76 : add byte ptr [rcx + 0x3b], al ; ret 0x974
0x00000200007784b6 : add byte ptr [rcx + 0x3b], al ; sal dword ptr [rdx + 0xe], 0x3b ; ret 0x1773
0x000002000000b30e : add byte ptr [rcx + 0x3b], cl ; ret
0x00000200003fa6b9 : add byte ptr [rcx + 0x3b], cl ; ret 0x2873
0x00000200000b84f4 : add byte ptr [rcx + 0x3b], cl ; ret 0x4975
0x00000200000401b1 : add byte ptr [rcx + 0x3b], cl ; ret 0x577
0x000002000004a408 : add byte ptr [rcx + 0x3b], cl ; ret 0x7673
0x00000200000d8a42 : add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x00000200000ce75e : add byte ptr [rcx + 0x3b], cl ; ret 0x830f
0x000002000004a55b : add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x0000020000411560 : add byte ptr [rcx + 0x3b], cl ; ret 0x870f
0x000002000001b2a4 : add byte ptr [rcx + 0x3b], cl ; ret 0xa375
0x0000020000451f60 : add byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x000002000068d159 : add byte ptr [rcx + 0x3b], cl ; ret 0xb76
0x0000020000660230 : add byte ptr [rcx + 0x3b], cl ; ret 0xce75
0x00000200004708b4 : add byte ptr [rcx + 0x3b], cl ; ret 0xe275
0x000002000001b2b0 : add byte ptr [rcx + 0x3b], cl ; ret 0xf41
0x000002000020bbce : add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x00000200006c96e5 : add byte ptr [rcx + 0x3b], cl ; ret 0xf4c
0x0000020000092bd2 : add byte ptr [rcx + 0x3b], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0xf49
0x00000200006ca93c : add byte ptr [rcx + 0x3b], cl ; ror byte ptr [rdi], 0x86 ; ret
0x000002000021f1ee : add byte ptr [rcx + 0x4820244c], cl ; mov ecx, edi ; call rax
0x00000200000a9588 : add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000064f746 : add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000047ea1c : add byte ptr [rcx + 0x5c], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004e5f6f : add byte ptr [rcx + 0x5c], al ; ret
0x00000200000be21f : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbx ; ret
0x000002000047a7f5 : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000048b969 : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000492a3 : add byte ptr [rcx + 0x5d], al ; pop rbp ; pop rbx ; ret
0x000002000005fbdb : add byte ptr [rcx + 0x5d], al ; pop rbx ; pop rbp ; ret
0x00000200000a6163 : add byte ptr [rcx + 0x5d], al ; pop rbx ; ret
0x0000020000480f60 : add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000e8b06 : add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; ret
0x00000200004c913b : add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004c0dac : add byte ptr [rcx + 0x5d], al ; pop rsi ; ret
0x00000200002478a3 : add byte ptr [rcx + 0x5e09e], cl ; add byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x00000200004bfeac : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003dfd8c : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000be778 : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x00000200000ae22e : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000006503a : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000048c702 : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rsi ; ret
0x00000200000bfa12 : add byte ptr [rcx + 0x5e], al ; pop r12 ; ret
0x00000200000727ed : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rbx ; ret
0x000002000020d13e : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000003bc20 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000018b7c : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200004245ae : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rbp ; pop rbx ; ret
0x0000020000657d35 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000008c6de : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cfa28 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000cbf7d : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200006e6a4e : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cc276 : add byte ptr [rcx + 0x5e], al ; pop rbp ; pop rbx ; ret
0x00000200000cd17c : add byte ptr [rcx + 0x5e], al ; pop rbp ; ret
0x00000200004c781e : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000003f622 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200000c5634 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000128dba : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003a9bc : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000054bb6 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200000d1836 : add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x00000200000690e0 : add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004d1c42 : add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbx ; ret
0x000002000000f6b1 : add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rcx ; ret
0x0000020000024796 : add byte ptr [rcx + 0x5e], al ; ret
0x00000200000720e6 : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rbx ; ret
0x000002000045a3ad : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000124ce1 : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000048fdea : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004c85ff : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000047a016 : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000f131a : add byte ptr [rcx + 0x5f], al ; pop r12 ; ret
0x00000200000c9862 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000071a05 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000dabe0 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000563be : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200004c39f4 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rbp ; ret
0x00000200000e2ca7 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000d0350 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000a29ed : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004e5868 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rsi ; pop rbp ; ret
0x00000200004be949 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000022830 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006acec2 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200003ccbdf : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000029f08 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000b777a : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rsi ; ret
0x00000200004be41a : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x00000200006d357a : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000b2dc6 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000000847c : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000b8f9a : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003eafef : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000533d9b : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x00000200004e481b : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; ret
0x0000020000003027 : add byte ptr [rcx + 0x5f], al ; pop rbx ; ret
0x00000200000acac6 : add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000020fdac : add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200006251a4 : add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000014163 : add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; ret
0x000002000041b4e8 : add byte ptr [rcx + 0x5f], al ; pop rsi ; pop rbp ; ret
0x00000200004a750b : add byte ptr [rcx + 0x6148d], cl ; add dh, dh ; ret 0x7420
0x000002000006c4f3 : add byte ptr [rcx + 0x63], cl ; add dword ptr [rcx + 0x3b], ecx ; ret 0x840f
0x00000200003cbe15 : add byte ptr [rcx + 0x63], cl ; ret
0x0000020000137dc6 : add byte ptr [rcx + 0x64], bh ; mov eax, ecx ; ret
0x0000020000036fe8 : add byte ptr [rcx + 0x64e481], cl ; add bh, bh ; ret
0x00000200007a6da1 : add byte ptr [rcx + 0x6b89306b], cl ; sub al, ch ; ret
0x000002000014b953 : add byte ptr [rcx + 0x72], al ; stmxcsr dword ptr [rcx + 0x74] ; ret
0x0000020000672adb : add byte ptr [rcx + 0x92], bh ; call 0x2000000ed38
0x000002000005378f : add byte ptr [rcx + 0xb], al ; ret 0x8942
0x000002000050b1d2 : add byte ptr [rcx + 0xd087], cl ; add cl, ch ; ret
0x000002000019ee1c : add byte ptr [rcx + 0xf410442], cl ; mov dh, 0x87 ; ret
0x00000200001fc903 : add byte ptr [rcx + 0xf42cf45], cl ; mov bh, 0x44 ; ret 0x8308
0x00000200003ce3d3 : add byte ptr [rcx + 0xf824b4], cl ; add byte ptr [rax], al ; call qword ptr [r15]
0x000002000048c24c : add byte ptr [rcx + 0xf], al ; mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret
0x000002000048c298 : add byte ptr [rcx + 0xf], al ; mov bh, 0x46 ; add bh, bh ; ret 0x34c
0x00000200006952f5 : add byte ptr [rcx + 0xf], al ; mov bh, 0x46 ; add bh, bh ; ret 0x8b44
0x00000200004930af : add byte ptr [rcx + 0xf], al ; mov bh, 0x55 ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x84c6
0x0000020000098b8d : add byte ptr [rcx + 0xf], al ; mov bh, 0x56 ; and byte ptr [rax - 0x75], cl ; ret
0x00000200005a031a : add byte ptr [rcx + 0xf], al ; mov bh, 0xc9 ; mov al, byte ptr [rcx + rax] ; ret
0x00000200000ed94a : add byte ptr [rcx + 0xf], al ; mov dh, 0x8e ; ret
0x000002000011ef5c : add byte ptr [rcx + 0xf], al ; mov dh, 0xc0 ; mov cr8, rax ; ret
0x000002000003b79d : add byte ptr [rcx + 0xf], al ; mov dh, 0xc1 ; mov cr8, rax ; ret
0x00000200000ead04 : add byte ptr [rcx + 0xf], al ; mov esi, 0xab3a40e8 ; ret
0x0000020000062bea : add byte ptr [rcx + 0xf], al ; mov esi, 0xb33a40f0 ; ret
0x00000200001a5dd7 : add byte ptr [rcx + 0xf], al ; ret
0x0000020000789083 : add byte ptr [rcx + 0xf], al ; ret 0x4489
0x00000200004def69 : add byte ptr [rcx + 0xf], al ; ret 0xba0f
0x0000020000051dab : add byte ptr [rcx + 0xf], al ; ret 0xc803
0x00000200002027e5 : add byte ptr [rcx + 0xf], al ; rol byte ptr [rdx + rcx*4 - 0x40], 0x8b ; ret 0x189
0x0000020000066248 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret
0x0000020000089dd7 : add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret 0x2fe8
0x00000200005b2baf : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff41
0x0000020000013356 : add byte ptr [rcx + 0xf], cl ; ret
0x00000200004c58f5 : add byte ptr [rcx + 0xf], cl ; ret 0x8948
0x00000200007d5487 : add byte ptr [rcx + 0xf], cl ; ror byte ptr [r8 - 0x77], 2 ; ret
0x000002000003f4a8 : add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000200000e35fd : add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8348
0x0000020000461840 : add byte ptr [rcx + 1], bh ; call 0x2000008e15d
0x00000200006f3af5 : add byte ptr [rcx + 3], al ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000fd62a : add byte ptr [rcx + 3], al ; enter -0x48f1, 4 ; ret
0x000002000018dac0 : add byte ptr [rcx + 3], al ; ret
0x000002000062318e : add byte ptr [rcx + 3], al ; ret 0x345
0x000002000020fbfd : add byte ptr [rcx + 3], al ; ret 0x3eb
0x000002000069082a : add byte ptr [rcx + 3], al ; ret 0x4589
0x00000200007a4f6a : add byte ptr [rcx + 3], al ; ret 0x8489
0x00000200005b5290 : add byte ptr [rcx + 3], al ; ret 0x8941
0x0000020000025648 : add byte ptr [rcx + 3], al ; ret 0xb70f
0x000002000000e935 : add byte ptr [rcx + 3], cl ; enter -0x76b8, 0xa ; ret
0x000002000041b606 : add byte ptr [rcx + 3], cl ; int 0xff
0x000002000001c0fc : add byte ptr [rcx + 3], cl ; iretd ; jmp rcx
0x000002000005a312 : add byte ptr [rcx + 3], cl ; leave ; jmp rcx
0x000002000001d730 : add byte ptr [rcx + 3], cl ; ret
0x00000200000e28e7 : add byte ptr [rcx + 3], cl ; ret 0x3b48
0x000002000048a9d9 : add byte ptr [rcx + 3], cl ; ret 0x8948
0x00000200000c14d3 : add byte ptr [rcx + 3], cl ; ret 0xba49
0x0000020000244ba2 : add byte ptr [rcx + 3], cl ; ret 0xc183
0x00000200004ffa33 : add byte ptr [rcx + 3], cl ; ret 0xe0ff
0x00000200000a0a47 : add byte ptr [rcx + 3], cl ; ror byte ptr [rax + 0x3b], 1 ; ret 0x376
0x0000020000117afc : add byte ptr [rcx + 3], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0x9948
0x0000020000176b0b : add byte ptr [rcx + 3], cl ; xor byte ptr [rax + 0x3b], cl ; ret
0x00000200006f4f5c : add byte ptr [rcx + 7], bh ; call 0x200001511c8
0x000002000006d052 : add byte ptr [rcx + rax - 0x3d], dh ; xor eax, eax ; ret
0x000002000003c761 : add byte ptr [rcx + rax], ah ; ret
0x00000200005a79ab : add byte ptr [rcx + rbp*8], al ; pop rsp ; jns 0x200005a79a3 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005bc508 : add byte ptr [rcx + rbp*8], al ; ret 0xf790
0x000002000060f9c3 : add byte ptr [rcx + rcx + 0x33], dh ; shr al, cl ; xor edx, esi ; ret
0x00000200004b54a0 : add byte ptr [rcx + rcx + 0x3c], cl ; ret 0x8b44
0x000002000020a834 : add byte ptr [rcx + rcx + 0xc], cl ; ret 0x2b4c
0x000002000066fcd2 : add byte ptr [rcx + rcx*4 + 0x1c], cl ; ret
0x00000200003e09c3 : add byte ptr [rcx + rcx*4 + 0x42], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4918
0x00000200000e1f55 : add byte ptr [rcx + rcx*4 + 0x55], al ; or byte ptr [rbp - 0x75], cl ; ret
0x00000200003f36b5 : add byte ptr [rcx + rcx*4 + 0x64], cl ; and al, 0x20 ; mov rcx, r14 ; call qword ptr [rsi]
0x00000200000c13c6 : add byte ptr [rcx + rcx*4 + 0x65], cl ; sbb byte ptr [rcx + 0x38], al ; mov ah, 0x24 ; ret
0x00000200004a20e5 : add byte ptr [rcx + rcx*4 + 0x73], al ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000069ce62 : add byte ptr [rcx + rcx*4 + 0x7d], al ; ror byte ptr [rax - 0x73], 0x15 ; ret 0xed53
0x0000020000448785 : add byte ptr [rcx + rcx*4 + 1], al ; xor eax, eax ; ret
0x000002000070641d : add byte ptr [rcx + rcx*4 + 1], cl ; mov al, 1 ; ret
0x000002000003ff04 : add byte ptr [rcx + rcx*4 + 8], al ; add rsp, 0x28 ; ret
0x00000200007063d1 : add byte ptr [rcx + rcx*4 + 8], cl ; mov al, 1 ; ret
0x00000200001782d2 : add byte ptr [rcx + rcx*4 - 0x5c], cl ; ret
0x0000020000097fdf : add byte ptr [rcx + rcx*4 - 0x77], al ; mov esp, 0xf6000000 ; ret 0xf01
0x000002000052c78c : add byte ptr [rcx + rcx*8 + 0xf08508d], al ; ret 0xc88b
0x00000200004e1079 : add byte ptr [rcx + rcx*8 - 0x74b7ac8c], al ; ret 0xc2f6
0x00000200000bba66 : add byte ptr [rcx + rdi + 0x49], cl ; and byte ptr [rdi], cl ; ret 0x8841
0x0000020000244700 : add byte ptr [rcx + rdi*2 - 0x48], dh ; mov rax, rdx ; jmp 0x20000244711
0x0000020000244aab : add byte ptr [rcx + rdi*2 - 0x48], dh ; mov rax, rdx ; jmp 0x20000244abc
0x00000200006b4ce9 : add byte ptr [rcx + rdx + 0xf0c478b], al ; ret 0x4789
0x00000200001c2434 : add byte ptr [rcx - 0x2d], cl ; jrcxz 0x200001c243d ; ret 0x894b
0x000002000068d76f : add byte ptr [rcx - 0x39], ch ; std ; xor byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xf799
0x0000020000553cec : add byte ptr [rcx - 0x39], cl ; ret
0x0000020000418787 : add byte ptr [rcx - 0x39], cl ; ret 0
0x00000200004329e7 : add byte ptr [rcx - 0x39], cl ; ret 0xf000
0x0000020000015c96 : add byte ptr [rcx - 0x39], cl ; ret 0xfe00
0x00000200000268e3 : add byte ptr [rcx - 0x3cfe4fff], cl ; xor al, al ; ret
0x0000020000247e8e : add byte ptr [rcx - 0x3f], al ; in eax, dx ; adc eax, dword ptr [rcx - 0x7f] ; ret 0xff38
0x0000020000014810 : add byte ptr [rcx - 0x3f], cl ; call 0x1ffc2249528
0x000002000040a291 : add byte ptr [rcx - 0x3f], cl ; call 0x1ffc273eea9
0x000002000040a9a3 : add byte ptr [rcx - 0x3f], cl ; call 0x1ffc273f5bb
0x000002000040a9d9 : add byte ptr [rcx - 0x3f], cl ; call 0x1ffc273f5f1
0x0000020000479d35 : add byte ptr [rcx - 0x3f], cl ; call 0x1ffc27ae94d
0x00000200004c22cd : add byte ptr [rcx - 0x3f], cl ; call 0x200000ea3e7
0x00000200000b878a : add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200007c9dd3 : add byte ptr [rcx - 0x421d71eb], cl ; dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000002000005e078 : add byte ptr [rcx - 0x42], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x2000005e04b
0x00000200005d89b0 : add byte ptr [rcx - 0x42], al ; sub eax, 0xf6c00001 ; ret
0x00000200007157a6 : add byte ptr [rcx - 0x43], al ; add eax, 0xf6000010 ; ret 0x7508
0x00000200001ea661 : add byte ptr [rcx - 0x45], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret 0x5175
0x00000200005f2626 : add byte ptr [rcx - 0x46], al ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000600c03 : add byte ptr [rcx - 0x47], al ; and eax, 0xff000009 ; ret 0xb841
0x000002000065179b : add byte ptr [rcx - 0x48], 0x50 ; jo 0x200006517ca ; and al, ch ; cdq ; ret 0xffbf
0x000002000040f776 : add byte ptr [rcx - 0x48], al ; insd dword ptr [rdi], dx ; jbe 0x2000040f785 ; ret 0x1b9
0x0000020000451778 : add byte ptr [rcx - 0x48], al ; push rax ; outsb dx, byte ptr [rsi] ; jo 0x200004517e1 ; call 0x2000024da49
0x00000200003dda42 : add byte ptr [rcx - 0x48], al ; push rdi ; push -0xd179e9b ; jmp rsi
0x0000020000721f72 : add byte ptr [rcx - 0x48], al ; push rsi ; push rsp ; insd dword ptr [rdi], dx ; jo 0x20000721f6a ; ret 0xb2ba
0x0000020000176339 : add byte ptr [rcx - 0x48], al ; sub byte ptr [rcx], al ; add byte ptr [rax], al ; jmp 0x20000112632
0x00000200003d5b6d : add byte ptr [rcx - 0x4a], al ; add ecx, ebp ; ret
0x00000200005e29c7 : add byte ptr [rcx - 0x4a], al ; add ecx, ebp ; ret 0xfff0
0x00000200007ab4bf : add byte ptr [rcx - 0x4b], ah ; inc dword ptr [rdx] ; ret
0x000002000070b24e : add byte ptr [rcx - 0x50], al ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9ee8
0x000002000049b719 : add byte ptr [rcx - 0x73], al ; adc byte ptr [r11], r15b ; ret
0x00000200002105de : add byte ptr [rcx - 0x73], al ; add dword ptr [rcx + 0x3b], eax ; ret 0x870f
0x00000200006f5d38 : add byte ptr [rcx - 0x73], al ; call 0x2004531608c
0x000002000007d4d9 : add byte ptr [rcx - 0x73], al ; call r11
0x0000020000715ef0 : add byte ptr [rcx - 0x73], al ; dec dword ptr [rbp - 0x75] ; pushfq ; ret 0x8068
0x0000020000448cc3 : add byte ptr [rcx - 0x73], al ; frstor dword ptr [rsi - 0x7b] ; ret
0x000002000054f472 : add byte ptr [rcx - 0x73], al ; inc byte ptr [rcx + 0x3b] ; ret 0x2377
0x0000020000027b6d : add byte ptr [rcx - 0x73], al ; inc dword ptr [r9 + 0x23] ; ret 0xc82b
0x00000200004877ea : add byte ptr [rcx - 0x73], al ; inc dword ptr [r9 + 0x3b] ; ret 0x860f
0x000002000006ad80 : add byte ptr [rcx - 0x73], al ; jmp qword ptr [rbx]
0x00000200000c7fa7 : add byte ptr [rcx - 0x73], al ; or byte ptr [r9 + 3], al ; ret 0xc203
0x000002000063a1f0 : add byte ptr [rcx - 0x73], al ; outsb dx, byte ptr [rsi] ; ret 0xb841
0x0000020000541412 : add byte ptr [rcx - 0x73], al ; push rax ; add eax, ebp ; ret
0x00000200004d55b8 : add byte ptr [rcx - 0x73], cl ; add al, 0x90 ; ret
0x000002000066b5a9 : add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rcx - 0x75] ; ret 0xf748
0x0000020000478980 : add byte ptr [rcx - 0x73], cl ; add dword ptr [r8 + 0x3b], ecx ; ret 0x4773
0x00000200004a6303 : add byte ptr [rcx - 0x73], cl ; cmp al, r13b ; adc esi, esp ; ret
0x00000200004a7e6e : add byte ptr [rcx - 0x73], cl ; cmp r8b, r13b ; test al, 0xd8 ; ret
0x00000200004a88ff : add byte ptr [rcx - 0x73], cl ; cmp r8b, r13b ; xchg ebp, eax ; ret
0x00000200000c4ea1 : add byte ptr [rcx - 0x73], cl ; mov ds, word ptr [rax] ; add dword ptr [rax], eax ; add al, ch ; ret 0xf992
0x0000020000073f84 : add byte ptr [rcx - 0x73], cl ; shr al, 1 ; ret 2
0x00000200004cb58b : add byte ptr [rcx - 0x74a3dbac], cl ; ret 0xa1eb
0x0000020000095f96 : add byte ptr [rcx - 0x74a7dbac], cl ; ret 0x34c
0x00000200007189e6 : add byte ptr [rcx - 0x74b3c7b8], cl ; ret
0x0000020000092eea : add byte ptr [rcx - 0x74b3f7bb], cl ; ret
0x00000200001d865c : add byte ptr [rcx - 0x74b62bbb], cl ; pushfq ; ret
0x00000200001d8757 : add byte ptr [rcx - 0x74b723bb], cl ; pushfq ; ret
0x00000200002473a3 : add byte ptr [rcx - 0x74b793bb], cl ; add dword ptr [rcx - 0x7d], eax ; ret
0x00000200007a65d0 : add byte ptr [rcx - 0x74bbc7ba], cl ; ret
0x00000200007d4b22 : add byte ptr [rcx - 0x74bbd7b9], cl ; ret
0x0000020000093a06 : add byte ptr [rcx - 0x74befbbd], cl ; ret 0xc123
0x0000020000648f7b : add byte ptr [rcx - 0x74cbdbbc], cl ; ret 0x2b41
0x00000200004bec11 : add byte ptr [rcx - 0x75], al ; adc al, 0x2b ; ret 0x341
0x00000200002491c1 : add byte ptr [rcx - 0x75], al ; adc byte ptr [rcx - 0x75], cl ; ret 0xf748
0x0000020000109d69 : add byte ptr [rcx - 0x75], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf08
0x0000020000213d49 : add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x0000020000244ff0 : add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x3b], al ; ret
0x000002000023ef73 : add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x3b], al ; ret 0x974
0x00000200001e65fb : add byte ptr [rcx - 0x75], al ; and byte ptr [rax + 0xf], r9b ; scasd eax, dword ptr [rdi] ; ret
0x00000200000f5f4b : add byte ptr [rcx - 0x75], al ; enter -0x1f2d, 0x3b ; ret 0xef72
0x00000200000b1de7 : add byte ptr [rcx - 0x75], al ; fimul dword ptr [rcx - 0x7d] ; ret 0x4d0a
0x0000020000493d1d : add byte ptr [rcx - 0x75], al ; fstp st(1), st(0) ; call 0x2004258ff69
0x00000200006256c0 : add byte ptr [rcx - 0x75], al ; fucompi st(0) ; ja 0x20000625651 ; ret 0x48ff
0x00000200001f0f4b : add byte ptr [rcx - 0x75], al ; inc dword ptr [rbp - 0x749a8b13] ; ret
0x000002000046221e : add byte ptr [rcx - 0x75], al ; iretd ; call 0x2000008e15b
0x00000200007a8d00 : add byte ptr [rcx - 0x75], al ; iretd ; call 0x200003d252b
0x0000020000236630 : add byte ptr [rcx - 0x75], al ; jmp qword ptr [rax]
0x000002000046b7a7 : add byte ptr [rcx - 0x75], al ; mov cl, 0xe0 ; rdpmc ; ret
0x0000020000439894 : add byte ptr [rcx - 0x75], al ; pop rbx ; or bh, dh ; ret
0x00000200001037af : add byte ptr [rcx - 0x75], al ; push rax ; adc bl, dl ; loop 0x200001037c2 ; ret 0x8389
0x00000200004a85ac : add byte ptr [rcx - 0x75], al ; push rax ; sub dh, dh ; ret 0x7540
0x00000200004d1cc3 : add byte ptr [rcx - 0x75], al ; push rbp ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000002000044a051 : add byte ptr [rcx - 0x75], al ; push rcx ; add al, 0x8b ; ret 0x8b41
0x00000200000e595d : add byte ptr [rcx - 0x75], al ; push rcx ; or byte ptr [rbx], bh ; ret 0x830f
0x00000200004c3821 : add byte ptr [rcx - 0x75], al ; push rdi ; cmp dh, dh ; ret 0xf20
0x00000200004826b8 : add byte ptr [rcx - 0x75], al ; push rdi ; xor al, 0xf7 ; ret 1
0x0000020000133028 : add byte ptr [rcx - 0x75], al ; push rdx ; add al, 0x83 ; ret 0x2307
0x0000020000020647 : add byte ptr [rcx - 0x75], al ; ret
0x0000020000582808 : add byte ptr [rcx - 0x75], al ; ret 0x100f
0x00000200005566b0 : add byte ptr [rcx - 0x75], al ; ret 0x1b2
0x00000200002472f5 : add byte ptr [rcx - 0x75], al ; ret 0x1b9
0x000002000050dd1d : add byte ptr [rcx - 0x75], al ; ret 0x1f88
0x0000020000107ef0 : add byte ptr [rcx - 0x75], al ; ret 0x2348
0x00000200003db479 : add byte ptr [rcx - 0x75], al ; ret 0x2b41
0x000002000077fb1a : add byte ptr [rcx - 0x75], al ; ret 0x2be
0x00000200001c7226 : add byte ptr [rcx - 0x75], al ; ret 0x348
0x000002000024d767 : add byte ptr [rcx - 0x75], al ; ret 0x349
0x000002000042469c : add byte ptr [rcx - 0x75], al ; ret 0x3948
0x0000020000418d9c : add byte ptr [rcx - 0x75], al ; ret 0x3b4d
0x00000200005825f7 : add byte ptr [rcx - 0x75], al ; ret 0x4489
0x000002000017f278 : add byte ptr [rcx - 0x75], al ; ret 0x523
0x000002000070fb65 : add byte ptr [rcx - 0x75], al ; ret 0x587
0x0000020000679391 : add byte ptr [rcx - 0x75], al ; ret 0x694c
0x00000200001000ba : add byte ptr [rcx - 0x75], al ; ret 0x8348
0x0000020000544797 : add byte ptr [rcx - 0x75], al ; ret 0x840f
0x000002000068914a : add byte ptr [rcx - 0x75], al ; ret 0x8545
0x0000020000703b66 : add byte ptr [rcx - 0x75], al ; ret 0x8946
0x000002000003043a : add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000012e72a : add byte ptr [rcx - 0x75], al ; ret 0x8b49
0x00000200000be1f5 : add byte ptr [rcx - 0x75], al ; ret 0x8b4c
0x000002000044743c : add byte ptr [rcx - 0x75], al ; ret 0x950f
0x0000020000424d62 : add byte ptr [rcx - 0x75], al ; ret 0xb41
0x000002000024914a : add byte ptr [rcx - 0x75], al ; ret 0xba49
0x00000200007817d4 : add byte ptr [rcx - 0x75], al ; ret 0xbd41
0x00000200001ace4b : add byte ptr [rcx - 0x75], al ; ret 0xbde9
0x0000020000248f08 : add byte ptr [rcx - 0x75], al ; ret 0xbe48
0x000002000077f8dc : add byte ptr [rcx - 0x75], al ; ret 0xbf41
0x0000020000018f90 : add byte ptr [rcx - 0x75], al ; ret 0xc12b
0x0000020000096026 : add byte ptr [rcx - 0x75], al ; ret 0xc22b
0x000002000024edaf : add byte ptr [rcx - 0x75], al ; ret 0xc2b9
0x00000200000887fd : add byte ptr [rcx - 0x75], al ; ret 0xd285
0x00000200000393d4 : add byte ptr [rcx - 0x75], al ; ret 0xd9eb
0x000002000004e28a : add byte ptr [rcx - 0x75], al ; ret 0xe083
0x000002000000533a : add byte ptr [rcx - 0x75], al ; ret 0xe0d3
0x0000020000401d41 : add byte ptr [rcx - 0x75], al ; ret 0xe883
0x00000200003d1afa : add byte ptr [rcx - 0x75], al ; ret 0xe8c1
0x00000200005ed921 : add byte ptr [rcx - 0x75], al ; ret 0xeb8b
0x00000200001ad8cf : add byte ptr [rcx - 0x75], al ; ret 0xf41
0x00000200005a064c : add byte ptr [rcx - 0x75], al ; ret 0xf42
0x00000200000c02c6 : add byte ptr [rcx - 0x75], al ; ret 0xf48
0x00000200000528df : add byte ptr [rcx - 0x75], al ; ret 0xff41
0x000002000010a2b8 : add byte ptr [rcx - 0x75], al ; ror byte ptr [rax - 0x7d], cl ; ret 0x4d02
0x000002000008119b : add byte ptr [rcx - 0x75], al ; ror byte ptr [rcx + 0xf], 0xab ; ret 0x894c
0x0000020000715efc : add byte ptr [rcx - 0x75], al ; ror byte ptr [rcx - 0x75], 0x8c ; ret 0x8068
0x0000020000026927 : add byte ptr [rcx - 0x75], al ; ror dword ptr [rax - 0x73], 0x3c ; ret
0x0000020000595539 : add byte ptr [rcx - 0x75], al ; ror dword ptr [rax - 0x75], -0x74 ; ret 0x2ba0
0x000002000055550f : add byte ptr [rcx - 0x75], al ; ror dword ptr [rbp - 0x75], -0x7c ; ret
0x00000200007a8e62 : add byte ptr [rcx - 0x75], al ; ror dword ptr [rcx + 0xf], -0x5d ; ret 0x830f
0x000002000024bc6f : add byte ptr [rcx - 0x75], al ; sbb byte ptr [rbx], al ; ret
0x0000020000085e12 : add byte ptr [rcx - 0x75], al ; xlatb ; call rax
0x000002000003d6e2 : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x23], cl ; ret 0x3b48
0x000002000006e7f4 : add byte ptr [rcx - 0x75], cl ; adc byte ptr [rax - 0x75], cl ; ret 0x2349
0x000002000000b970 : add byte ptr [rcx - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret 0x6f75
0x0000020000412539 : add byte ptr [rcx - 0x75], cl ; add dword ptr [rax + 0x3b], ecx ; ret
0x00000200006048e5 : add byte ptr [rcx - 0x75], cl ; call 0x2004922d337
0x0000020000788960 : add byte ptr [rcx - 0x75], cl ; cmp cl, byte ptr [rax - 0x75] ; ret
0x000002000068d0bd : add byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax + 0x63] ; ret 0x3345
0x000002000067014c : add byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0x8548
0x00000200004aea49 : add byte ptr [rcx - 0x75], cl ; int 0xe8
0x0000020000441f67 : add byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000006d287
0x00000200005a2bbf : add byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000061eea2
0x00000200006da773 : add byte ptr [rcx - 0x75], cl ; iretd ; call r14
0x00000200003f2b13 : add byte ptr [rcx - 0x75], cl ; iretd ; call rdi
0x00000200003e360a : add byte ptr [rcx - 0x75], cl ; leave ; call 0x200000036cb
0x0000020000172a0d : add byte ptr [rcx - 0x75], cl ; mov fs, word ptr [rax] ; add eax, dword ptr [rax] ; add al, ch ; ret 0xe915
0x00000200000f66e8 : add byte ptr [rcx - 0x75], cl ; nop ; push -0x9ffffff ; ret 0xf01
0x000002000013dfbd : add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x3308
0x000002000023cc34 : add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x000002000000abcb : add byte ptr [rcx - 0x75], cl ; or r8b, r13b ; ret
0x00000200000b3b9d : add byte ptr [rcx - 0x75], cl ; pop rax ; adc byte ptr [rax - 0x7f], cl ; ret
0x00000200004d32f5 : add byte ptr [rcx - 0x75], cl ; pop rax ; and dh, dh ; ret
0x000002000009e488 : add byte ptr [rcx - 0x75], cl ; pop rbp ; add dh, dh ; ret
0x00000200000b8e34 : add byte ptr [rcx - 0x75], cl ; pop rdi ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000050d0b4 : add byte ptr [rcx - 0x75], cl ; pop rdi ; and byte ptr [rax - 0x7f], cl ; ret
0x00000200000b1660 : add byte ptr [rcx - 0x75], cl ; push rbx ; adc byte ptr [rax - 0x7f], cl ; ret 0x1a0
0x00000200000b3ece : add byte ptr [rcx - 0x75], cl ; push rdi ; adc byte ptr [rax - 0x7f], cl ; ret 0x1a0
0x0000020000003377 : add byte ptr [rcx - 0x75], cl ; ret
0x000002000024067d : add byte ptr [rcx - 0x75], cl ; ret 0x144
0x0000020000214dcf : add byte ptr [rcx - 0x75], cl ; ret 0x148
0x0000020000091e51 : add byte ptr [rcx - 0x75], cl ; ret 0x2348
0x000002000006a2b5 : add byte ptr [rcx - 0x75], cl ; ret 0x2349
0x00000200000ce665 : add byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x00000200004209c6 : add byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x00000200000c06c1 : add byte ptr [rcx - 0x75], cl ; ret 0x348
0x000002000004761a : add byte ptr [rcx - 0x75], cl ; ret 0x3b48
0x00000200007788e0 : add byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x000002000009f484 : add byte ptr [rcx - 0x75], cl ; ret 0x48f0
0x00000200004c60e0 : add byte ptr [rcx - 0x75], cl ; ret 0x49f0
0x000002000048df81 : add byte ptr [rcx - 0x75], cl ; ret 0x4ae9
0x00000200000ecef9 : add byte ptr [rcx - 0x75], cl ; ret 0x5803
0x0000020000014760 : add byte ptr [rcx - 0x75], cl ; ret 0x8548
0x00000200000b2065 : add byte ptr [rcx - 0x75], cl ; ret 0x8944
0x0000020000244122 : add byte ptr [rcx - 0x75], cl ; ret 0x894c
0x000002000000a72e : add byte ptr [rcx - 0x75], cl ; ret 0x8b44
0x00000200000c097f : add byte ptr [rcx - 0x75], cl ; ret 0x8b48
0x0000020000002a61 : add byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x000002000018a14b : add byte ptr [rcx - 0x75], cl ; ret 0x9fe9
0x000002000018a15b : add byte ptr [rcx - 0x75], cl ; ret 0xa0e9
0x000002000018a16b : add byte ptr [rcx - 0x75], cl ; ret 0xa1e9
0x000002000018a17b : add byte ptr [rcx - 0x75], cl ; ret 0xa2e9
0x0000020000017ac0 : add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000176bb1 : add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x000002000048df30 : add byte ptr [rcx - 0x75], cl ; ret 0xdde9
0x0000020000443aa2 : add byte ptr [rcx - 0x75], cl ; retf ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200004ddb3c : add byte ptr [rcx - 0x75], cl ; rol byte ptr [rcx - 0xa], cl ; ret 0xf03
0x000002000050178c : add byte ptr [rcx - 0x75], cl ; salc ; mov rcx, r13 ; call rax
0x00000200004e1fbf : add byte ptr [rcx - 0x75], cl ; salc ; mov rcx, r15 ; call 0x2000008e2a5
0x00000200000a5f98 : add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7b], r9b ; ret
0x000002000004e1b2 : add byte ptr [rcx - 0x75], cl ; sbb byte ptr [rax + 0x33], r9b ; ret 0xa948
0x00000200000d71c5 : add byte ptr [rcx - 0x75], cl ; sbb esi, esi ; ret
0x00000200007a8e80 : add byte ptr [rcx - 0x75], cl ; xchg eax, esp ; ret
0x00000200007d13a7 : add byte ptr [rcx - 0x75], cl ; xlatb ; call 0x200003f7bc3
0x00000200005467d3 : add byte ptr [rcx - 0x75], cl ; xlatb ; lea rcx, qword ptr [rbp - 9] ; call r12
0x00000200004ad02c : add byte ptr [rcx - 0x76], al ; fucomp st(0) ; pop rbx ; leave ; ret
0x000002000051325b : add byte ptr [rcx - 0x76], al ; mul byte ptr [rsi - 0x7d] ; ret 0xb902
0x00000200002316ac : add byte ptr [rcx - 0x76], al ; ret
0x000002000042e9ae : add byte ptr [rcx - 0x76], al ; ret 0x4488
0x00000200004b9092 : add byte ptr [rcx - 0x76], al ; salc ; call 0x200000e4e97
0x00000200004b9348 : add byte ptr [rcx - 0x76], al ; salc ; call 0x200000e5347
0x000002000043eff6 : add byte ptr [rcx - 0x77], al ; cmp dh, dh ; ret
0x0000020000652255 : add byte ptr [rcx - 0x77], al ; jl 0x20000652285 ; sbb al, 0x8b ; ret
0x00000200004ae026 : add byte ptr [rcx - 0x77], al ; or al, 0x8b ; ret
0x000002000015bdb5 : add byte ptr [rcx - 0x77], cl ; adc dword ptr [rcx - 0x75], eax ; ret
0x000002000015bb88 : add byte ptr [rcx - 0x77], cl ; adc dword ptr [rcx - 0x75], eax ; ret 0xf49
0x0000020000437113 : add byte ptr [rcx - 0x77], cl ; add al, byte ptr [rbp + 0x3b] ; ret
0x000002000022c5bf : add byte ptr [rcx - 0x77], cl ; mov al, 1 ; ret
0x0000020000530cfa : add byte ptr [rcx - 0x77], cl ; mov r8d, 0xfe418d45 ; call qword ptr [rbx]
0x000002000022c5a9 : add byte ptr [rcx - 0x77], cl ; xor al, al ; ret
0x00000200007ad421 : add byte ptr [rcx - 0x7832ac], cl ; ret 0x8948
0x0000020000404dcd : add byte ptr [rcx - 0x78], al ; add byte ptr [rbx], bh ; ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x00000200004c933c : add byte ptr [rcx - 0x7aba6fbb], cl ; test byte ptr [rdi], 0x85 ; ret 0x1106
0x00000200004dca0b : add byte ptr [rcx - 0x7acfdbbc], cl ; ror byte ptr [rdi], 0x88 ; ret 2
0x00000200005bbb39 : add byte ptr [rcx - 0x7b], al ; ret
0x00000200004aa93e : add byte ptr [rcx - 0x7b], al ; ret 0x4c75
0x00000200004a5f03 : add byte ptr [rcx - 0x7b], al ; ret 0x840f
0x00000200004a5c16 : add byte ptr [rcx - 0x7b], al ; ret 0x850f
0x0000020000069e78 : add byte ptr [rcx - 0x7b], cl ; enter 0x450f, -0x3e ; ret
0x0000020000549eff : add byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x00000200003d2633 : add byte ptr [rcx - 0x7b], cl ; ret 0xb74
0x00000200003e1a2f : add byte ptr [rcx - 0x7c9fdb84], cl ; call qword ptr [rax]
0x00000200000107e1 : add byte ptr [rcx - 0x7c], al ; ret
0x000002000011caa0 : add byte ptr [rcx - 0x7c], al ; ret 0x1375
0x000002000008108e : add byte ptr [rcx - 0x7c], al ; ret 0x574
0x000002000017e3b5 : add byte ptr [rcx - 0x7c], al ; ret 0x840f
0x000002000012d4c9 : add byte ptr [rcx - 0x7c], al ; ret 0x850f
0x00000200001ed2b5 : add byte ptr [rcx - 0x7c], al ; retf 0x575 ; mov eax, r10d ; jmp 0x200001ed2ef
0x00000200005bfafc : add byte ptr [rcx - 0x7c], al ; sal byte ptr [rcx + rdx + 0x44], 0x8b ; ret
0x00000200007b4989 : add byte ptr [rcx - 0x7cb7e7bd], cl ; ret
0x00000200005f096a : add byte ptr [rcx - 0x7cb7efbe], cl ; ret 0xff14
0x000002000007be1a : add byte ptr [rcx - 0x7d], al ; add byte ptr ds:[rdi], cl ; xchg eax, esp ; ret 0x8d49
0x00000200003fa344 : add byte ptr [rcx - 0x7d], al ; and byte ptr [rax], al ; ret
0x0000020000036408 : add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200006cf72b : add byte ptr [rcx - 0x7d], al ; inc dword ptr [rsp + rsi*2] ; add eax, dword ptr [rcx - 0x75] ; ret
0x00000200004b02e0 : add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x00000200004d47de : add byte ptr [rcx - 0x7d], al ; ret
0x000002000049bc47 : add byte ptr [rcx - 0x7d], al ; ret 0x4560
0x00000200006892a5 : add byte ptr [rcx - 0x7d], al ; ret 0x49f0
0x00000200000b6fba : add byte ptr [rcx - 0x7d], cl ; int 0xff
0x0000020000482635 : add byte ptr [rcx - 0x7d], cl ; jg 0x2000048267b ; add byte ptr [rbx + rdx*2 - 0xa], dh ; ret
0x00000200000e4592 : add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rdx]
0x00000200000523a2 : add byte ptr [rcx - 0x7d], cl ; ret
0x000002000013e20f : add byte ptr [rcx - 0x7d], cl ; ret 0x4008
0x000002000020315d : add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x0000020000778902 : add byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x00000200006961e8 : add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x00000200004b2dfd : add byte ptr [rcx - 0x7d], cl ; ret 0x41fe
0x0000020000553dcc : add byte ptr [rcx - 0x7d], cl ; ret 0x4428
0x0000020000176eae : add byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x00000200004b62c7 : add byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x0000020000010c29 : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000020000208910 : add byte ptr [rcx - 0x7d], cl ; ret 0x4a10
0x00000200000da0ff : add byte ptr [rcx - 0x7d], cl ; ret 0x4d08
0x000002000010300b : add byte ptr [rcx - 0x7d], cl ; ret 0x6607
0x0000020000460103 : add byte ptr [rcx - 0x7d], cl ; ret 0xebfe
0x0000020000150f52 : add byte ptr [rcx - 0x7d], cl ; ret 0xff02
0x00000200002361fe : add byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax + 0x4c], 0x3b ; ret 0xe07c
0x00000200001a52b5 : add byte ptr [rcx - 0x7d], cl ; ror byte ptr [rsp + rcx*2], 3 ; ret
0x000002000051d162 : add byte ptr [rcx - 0x7f], cl ; ret 0
0x0000020000072aaf : add byte ptr [rcx - 0x7f], cl ; ret 0x1000
0x0000020000066fec : add byte ptr [rcx - 0x7f], cl ; ret 0x3600
0x0000020000224dbb : add byte ptr [rcx - 0x7f], cl ; ret 0xa00
0x00000200000d368d : add byte ptr [rcx - 0x80], al ; call qword ptr [rcx]
0x000002000023df44 : add byte ptr [rcx - 0x80], al ; ret 0x4101
0x00000200000403ce : add byte ptr [rcx - 0x8cfdb8c], cl ; ret
0x0000020000064160 : add byte ptr [rcx - 0x9abdba4], cl ; ret
0x00000200001e01f6 : add byte ptr [rcx - 0x9dfdbb4], cl ; ret 0x7420
0x00000200000a8776 : add byte ptr [rcx - 0xa], al ; ret
0x00000200005bb7ce : add byte ptr [rcx - 0xa], al ; ret 0x4504
0x00000200004392e2 : add byte ptr [rcx - 0xa], al ; ret 0x7401
0x000002000012d609 : add byte ptr [rcx - 0xa], al ; ret 0x7402
0x00000200005924c7 : add byte ptr [rcx - 0xa], al ; ret 0x7404
0x0000020000150f45 : add byte ptr [rcx - 0xa], al ; ret 0x7406
0x0000020000150f5e : add byte ptr [rcx - 0xa], al ; ret 0x7506
0x000002000021fca0 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000200000b3f4c : add byte ptr [rcx - 0xa], al ; ret 0xf04
0x000002000021fcb0 : add byte ptr [rcx - 0xa], al ; ret 0xf08
0x00000200000a590d : add byte ptr [rcx - 0xa], al ; ret 0xf0b
0x0000020000491dc1 : add byte ptr [rcx - 0xa], al ; ret 0xf11
0x00000200004c67dc : add byte ptr [rcx - 0xa], al ; ret 0xf20
0x000002000044c292 : add byte ptr [rcx - 0xcf60bc], cl ; ret
0x0000020000147441 : add byte ptr [rcx - 1], al ; and al, 0xd0 ; mov qword ptr [rcx], rax ; ret
0x000002000007bf7d : add byte ptr [rcx - 1], al ; nop ; clc ; add byte ptr [rax], al ; add cl, ch ; ret 1
0x00000200000cd18e : add byte ptr [rcx - 1], al ; ret
0x0000020000027996 : add byte ptr [rcx - 1], al ; ret 0x28eb
0x000002000023822c : add byte ptr [rcx - 1], al ; ret 0x3b44
0x000002000041cc30 : add byte ptr [rcx - 1], al ; ret 0x3b45
0x0000020000144095 : add byte ptr [rcx - 1], al ; ret 0x4de9
0x00000200001f3673 : add byte ptr [rcx - 1], al ; ret 0x8348
0x0000020000146e68 : add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200000b1cf2 : add byte ptr [rcx - 1], al ; ret 0x8b48
0x0000020000143267 : add byte ptr [rcx - 1], al ; ret 0x95e9
0x00000200000e6d6f : add byte ptr [rcx - 1], al ; ret 0xff41
0x00000200005f6fc4 : add byte ptr [rcx - 1], cl ; ret 0x6b45
0x00000200000483d4 : add byte ptr [rcx - 9], al ; ret
0x00000200000591ac : add byte ptr [rcx - 9], al ; ret 0
0x00000200000ea092 : add byte ptr [rcx - 9], al ; ret 0x7ffe
0x000002000044d563 : add byte ptr [rcx - 9], al ; ret 0xfff
0x000002000072238f : add byte ptr [rcx - 9], cl ; ret
0x00000200004e3eff : add byte ptr [rcx], 0 ; add al, ch ; clc ; ret
0x0000020000157148 : add byte ptr [rcx], 0 ; add al, ch ; ret
0x00000200004e4062 : add byte ptr [rcx], 0 ; add al, ch ; xchg eax, ebp ; ret 0xffc0
0x00000200001f6b72 : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200004826fa : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4520
0x00000200004746f5 : add byte ptr [rcx], 0 ; add byte ptr [rbx], dh ; shr al, cl ; nop ; cdq ; ret 0xf0ff
0x000002000020315a : add byte ptr [rcx], 0 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x000002000020890d : add byte ptr [rcx], 0 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4a10
0x0000020000515be5 : add byte ptr [rcx], 0 ; add byte ptr [rdi + rcx + 0x4f], cl ; ret
0x000002000062c482 : add byte ptr [rcx], al ; add al, al ; ret
0x00000200000daa8e : add byte ptr [rcx], al ; add byte ptr [rax + 0x33], cl ; sbb byte ptr [r9 + 0x23], cl ; ret 0x3148
0x0000020000213d81 : add byte ptr [rcx], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000065aac3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x000002000065fb6c : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xb841
0x000002000049961b : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000020b4b6 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000c3d0d : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x1d], dh ; ret
0x0000020000146e64 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x000002000019ff18 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000055ead7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c3299 : add byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200000f0307
0x0000020000565d31 : add byte ptr [rcx], al ; add byte ptr [rax], al ; call r14
0x0000020000719416 : add byte ptr [rcx], al ; add byte ptr [rax], al ; jb 0x20000719427 ; xor eax, eax ; ret
0x00000200007b1f79 : add byte ptr [rcx], al ; add byte ptr [rax], al ; jb 0x200007b1f32 ; ret
0x00000200005a9e58 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x13 ; call r10
0x00000200005a9e03 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x13 ; call rax
0x0000020000711374 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000200005698e0 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x0000020000429c5f : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov rcx, qword ptr [rdi + 8] ; call rax
0x000002000005fbd8 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop r13 ; pop rbx ; pop rbp ; ret
0x000002000048c6ff : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rsi ; ret
0x0000020000420c16 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200001e807d : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200000c731e : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000002000000832c : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000669e8d : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000020000156591 : add byte ptr [rcx], al ; add byte ptr [rax], al ; sti ; ret
0x0000020000027436 : add byte ptr [rcx], al ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x0000020000463e1e : add byte ptr [rcx], al ; add byte ptr [rbx], ah ; ret 0xc23b
0x0000020000704400 : add byte ptr [rcx], al ; add byte ptr [rbx], bh ; ret 0xa73
0x0000020000214891 : add byte ptr [rcx], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x0000020000093a04 : add byte ptr [rcx], al ; add byte ptr [rcx - 0x74befbbd], cl ; ret 0xc123
0x0000020000445f85 : add byte ptr [rcx], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x0000020000166a44 : add byte ptr [rcx], al ; add cl, ch ; ret
0x000002000020a92f : add byte ptr [rcx], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000007b00c : add byte ptr [rcx], al ; add rsp, 0x38 ; ret
0x0000020000071b2e : add byte ptr [rcx], al ; call rsi
0x000002000009885e : add byte ptr [rcx], al ; je 0x2000009886b ; xor al, al ; ret
0x00000200000ed033 : add byte ptr [rcx], al ; je 0x200000ed03c ; ret
0x000002000044ab93 : add byte ptr [rcx], al ; je 0x2000044aba4 ; add rsp, 0x28 ; ret
0x00000200005258e0 : add byte ptr [rcx], al ; jmp 0x200005257c4
0x000002000007c636 : add byte ptr [rcx], al ; jne 0x2000007c647 ; add rsp, 0x38 ; ret
0x00000200001e57ac : add byte ptr [rcx], al ; jne 0x200001e57b8 ; mov al, 1 ; ret
0x00000200001d6903 : add byte ptr [rcx], al ; mov qword ptr [rdx], r9 ; ret
0x000002000002e51a : add byte ptr [rcx], al ; mov r8, r10 ; jmp 0x2000002e4e7
0x0000020000085645 : add byte ptr [rcx], al ; ret
0x00000200004fed55 : add byte ptr [rcx], al ; sete al ; ret
0x0000020000633f88 : add byte ptr [rcx], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000088a9 : add byte ptr [rcx], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000235780 : add byte ptr [rcx], bh ; add dword ptr [rdx + 3], esi ; xor al, al ; ret
0x00000200000f3fd8 : add byte ptr [rcx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000202049 : add byte ptr [rcx], cl ; add rsp, 0x38 ; ret
0x000002000078f04e : add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x0000020000624b20 : add byte ptr [rcx], dl ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000023ba13 : add byte ptr [rcx], dl ; add byte ptr [rbx], ah ; ret 0xc23b
0x00000200005e0c60 : add byte ptr [rdi + 0x13], dh ; mov rcx, rbx ; call 0x2000005ce78
0x00000200000fa053 : add byte ptr [rdi + 0x18], bh ; mov eax, 1 ; ret
0x000002000001f923 : add byte ptr [rdi + 0x18], dh ; add rsp, 0x28 ; ret
0x00000200001dcccc : add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x00000200000eaeea : add byte ptr [rdi + 0x5b], bl ; ret
0x00000200000d7ede : add byte ptr [rdi + 0x5d], bl ; pop rbx ; ret
0x00000200000cac15 : add byte ptr [rdi + 0x5d], bl ; ret
0x00000200000f9853 : add byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000000832f : add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000009c854 : add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x000002000010cca5 : add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x000002000043216e : add byte ptr [rdi + 0x64], dh ; add rsp, 0x38 ; ret
0x00000200004a651d : add byte ptr [rdi + 1], dh ; ret
0x000002000062f406 : add byte ptr [rdi + 3], bh ; mov al, 1 ; ret
0x00000200007912b4 : add byte ptr [rdi + 4], dl ; add byte ptr [rax + 3], cl ; ret
0x000002000003b1ba : add byte ptr [rdi + 7], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000052841 : add byte ptr [rdi + rax], ah ; cmp al, 2 ; je 0x20000052854 ; xor eax, eax ; ret
0x00000200003d8a24 : add byte ptr [rdi + rbp - 0x18], dh ; insb byte ptr [rdi], dx ; ret
0x0000020000008ab6 : add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000ad066 : add byte ptr [rdi + rcx + 0x20], al ; ret 0x2b8
0x00000200001fc54f : add byte ptr [rdi + rcx + 0x20], al ; ret 0x2b9
0x00000200000bad60 : add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x0000020000010d4f : add byte ptr [rdi + rcx + 0x20], al ; ret 0xf44
0x000002000024e24f : add byte ptr [rdi + rcx + 0x20], al ; rol byte ptr [rbp + 0xf], 0x22 ; ret 0x5f6
0x000002000002913a : add byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200001ce604 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x188
0x00000200000f2497 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4488
0x0000020000064da1 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4865
0x000002000003d3ee : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4980
0x000002000005e9a1 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4c65
0x0000020000025fef : add byte ptr [rdi + rcx + 0x22], al ; ret 0x5f6
0x00000200003d2a45 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x85e8
0x00000200000c108a : add byte ptr [rdi + rcx + 0x22], al ; ret 0x8841
0x00000200001d40b7 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x8b48
0x00000200001d298e : add byte ptr [rdi + rcx + 0x22], al ; ret 0xa483
0x00000200000d7dce : add byte ptr [rdi + rcx + 0x22], al ; ret 0xe88
0x000002000078ef40 : add byte ptr [rdi + rcx + 0x22], al ; ror byte ptr [rdi], 0x20 ; ret
0x000002000042aced : add byte ptr [rdi + rcx + 0x44], al ; jrcxz 0x2000042ace2 ; ret
0x0000020000004215 : add byte ptr [rdi + rcx + 0x45], al ; ret
0x00000200003cb8f6 : add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b4c
0x0000020000515be8 : add byte ptr [rdi + rcx + 0x4f], cl ; ret
0x00000200000ebd9a : add byte ptr [rdi + rcx - 0x42], al ; stosd dword ptr [rdi], eax ; ret
0x00000200005f1fb3 : add byte ptr [rdi + rcx - 0x43], al ; rol byte ptr [rcx - 0x7d], 1 ; ret 0x41f2
0x000002000002dafd : add byte ptr [rdi + rcx - 0x44], al ; ret
0x00000200004cb722 : add byte ptr [rdi + rcx - 0x44], al ; ret 0x8341
0x00000200000d55cc : add byte ptr [rdi + rcx - 0x44], al ; ret 0x8944
0x000002000002dafc : add byte ptr [rdi + rcx - 0x44], r8b ; ret
0x00000200000fbbbd : add byte ptr [rdi + rcx - 0x49], al ; push rbx ; add al, byte ptr [rcx - 0xa] ; ret 0xf01
0x000002000021cf8f : add byte ptr [rdi + rcx - 0x49], al ; ret
0x00000200004a86e4 : add byte ptr [rdi + rcx - 0x49], al ; ret 0x34c
0x00000200004930b4 : add byte ptr [rdi + rcx - 0x49], al ; ret 0x84c6
0x00000200004932f2 : add byte ptr [rdi + rcx - 0x49], al ; ret 0xb941
0x0000020000055a38 : add byte ptr [rdi + rcx - 0x49], al ; ret 0xd233
0x000002000009ebe9 : add byte ptr [rdi + rcx - 0x4a], al ; pop rcx ; and eax, dword ptr [rcx - 0x75] ; ret
0x00000200000ab921 : add byte ptr [rdi + rcx - 0x4a], al ; push rbp ; and eax, dword ptr [rcx - 0x75] ; ret 0xe8c1
0x00000200000d9216 : add byte ptr [rdi + rcx - 0x4a], al ; push rdi ; and eax, dword ptr [rcx - 0x75] ; ret 0xe8c1
0x0000020000062784 : add byte ptr [rdi + rcx - 0x4a], al ; ret
0x0000020000719381 : add byte ptr [rdi + rcx - 0x4a], al ; ret 0x37ba
0x00000200000e83c3 : add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8348
0x00000200000f6c5a : add byte ptr [rdi + rcx - 0x4a], al ; sbb ecx, dword ptr [rax - 1] ; ret
0x000002000050a8fa : add byte ptr [rdi + rcx - 0x51], cl ; ret 0x8b41
0x00000200000a6d42 : add byte ptr [rdi + rcx - 0x51], cl ; ret 0x8b4b
0x00000200005da206 : add byte ptr [rdi + rcx - 0x5d], cl ; ret 0x820f
0x00000200001f664b : add byte ptr [rdi + rdx + 0x49], dh ; mov ecx, edi ; call 0x20000042938
0x000002000009883d : add byte ptr [rdi - 0x48], dh ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000157938 : add byte ptr [rdi - 0x73], cl ; sbb al, 0x8b ; jmp r11
0x0000020000711b38 : add byte ptr [rdi - 0x7cb7f7bd], al ; ret
0x000002000009dc0e : add byte ptr [rdi], al ; add byte ptr [rax], al ; jne 0x2000009dc36 ; ret
0x000002000016feac : add byte ptr [rdi], al ; jmp 0x20000044552
0x000002000008f3f6 : add byte ptr [rdi], bh ; ret
0x00000200007bc741 : add byte ptr [rdi], bl ; add al, ch ; ret
0x000002000065aa08 : add byte ptr [rdi], bl ; add byte ptr [rax - 1], cl ; ret 0xc148
0x0000020000044d59 : add byte ptr [rdi], cl ; adc dword ptr [rcx + 0x70], ecx ; ret
0x00000200000920d7 : add byte ptr [rdi], cl ; adc dword ptr [rdx + 0x4c0], ecx ; ret
0x000002000046b2cd : add byte ptr [rdi], cl ; add al, ch ; call rax
0x000002000052133e : add byte ptr [rdi], cl ; add al, ch ; ret 0
0x00000200000d4088 : add byte ptr [rdi], cl ; add byte ptr [rax + 0x33], cl ; add cl, byte ptr [rcx + 0x23] ; ret
0x00000200000b1d41 : add byte ptr [rdi], cl ; add byte ptr [rax + 0x33], cl ; add dword ptr [rcx + 0x23], ecx ; ret
0x00000200000b213b : add byte ptr [rdi], cl ; add byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200000a7993 : add byte ptr [rdi], cl ; add byte ptr [rbx - 0x75], cl ; push rsp ; ret 0xc708
0x000002000024c37f : add byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret
0x000002000003f3c8 : add byte ptr [rdi], cl ; add dword ptr [rbx], -0xd ; adc al, byte ptr [rax] ; ret
0x000002000024c46f : add byte ptr [rdi], cl ; add dword ptr [rcx], eax ; sidt ptr [rdx] ; ret
0x00000200001254b3 : add byte ptr [rdi], cl ; and dword ptr [rdx + 0x7b], 5 ; add bh, bh ; ret 0x1589
0x00000200001c4d71 : add byte ptr [rdi], cl ; cdq ; ret
0x00000200000eb0c3 : add byte ptr [rdi], cl ; mov bh, 0x40 ; sbb bh, byte ptr [rbx] ; ret 0x830f
0x000002000048bf7a : add byte ptr [rdi], cl ; mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret
0x00000200000e03b6 : add byte ptr [rdi], cl ; mov bh, 0x42 ; add al, byte ptr [rcx - 1] ; ret 0x348
0x00000200006945f8 : add byte ptr [rdi], cl ; mov bh, 0x43 ; add bh, bh ; ret 0x8b4c
0x00000200006908dd : add byte ptr [rdi], cl ; mov bh, 0x45 ; mov byte ptr [rcx + 3], al ; ret 0x8944
0x00000200000e0096 : add byte ptr [rdi], cl ; mov bh, 0x46 ; add ch, byte ptr [rbx] ; ret
0x000002000017afa6 : add byte ptr [rdi], cl ; mov bh, 0x47 ; add ch, byte ptr [rbx] ; ret
0x0000020000479050 : add byte ptr [rdi], cl ; mov bh, 0x48 ; add bh, bh ; ret 0x348
0x00000200004b6700 : add byte ptr [rdi], cl ; mov bh, 0x4d ; mov al, 0xe8 ; ret 0xbce0
0x0000020000617886 : add byte ptr [rdi], cl ; mov bh, 0x51 ; or dh, dh ; ret 0xf01
0x00000200006b7cda : add byte ptr [rdi], cl ; mov bh, 0x55 ; loopne 0x200006b7ce9 ; ret 0xc13b
0x0000020000617ef9 : add byte ptr [rdi], cl ; mov bh, 0x56 ; adc al, 0xf6 ; ret 0xf01
0x00000200006cfdc8 : add byte ptr [rdi], cl ; mov bh, 0xb ; call 0x2000013c066
0x00000200007a91d6 : add byte ptr [rdi], cl ; mov bh, 0xcf ; lea r8, qword ptr [rsp + 0x3c] ; call rax
0x00000200000de680 : add byte ptr [rdi], cl ; mov bh, 0xd1 ; mov rax, qword ptr [rax + rdx*8] ; ret
0x000002000013c01c : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 1 ; ret
0x000002000013bfbc : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 2 ; ret
0x000002000013bf9c : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 4 ; ret
0x000002000013bffc : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 8 ; ret
0x000002000068d9bd : add byte ptr [rdi], cl ; mov bh, 4 ; ret
0x0000020000134136 : add byte ptr [rdi], cl ; mov bh, 5 ; ret 0x273e
0x00000200000942c0 : add byte ptr [rdi], cl ; mov dh, 0x43 ; add al, byte ptr [rcx - 1] ; ret 0x3b44
0x00000200000e30cd : add byte ptr [rdi], cl ; mov dh, 0x53 ; and esi, esi ; ret 0xf08
0x00000200000def5d : add byte ptr [rdi], cl ; mov dh, 0x53 ; and esi, esi ; ret 0xf10
0x0000020000074ec8 : add byte ptr [rdi], cl ; mov dh, 0x80 ; xor al, byte ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000200000e6fad : add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x0000020000067adc : add byte ptr [rdi], cl ; mov dh, 0x85 ; ret
0x0000020000066f05 : add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0x0000020000474e5b : add byte ptr [rdi], cl ; mov dh, 0x86 ; ret 6
0x00000200005df933 : add byte ptr [rdi], cl ; mov dh, 0x88 ; ret 6
0x0000020000062abe : add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x0000020000065fc4 : add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x000002000057e976 : add byte ptr [rdi], cl ; mov dh, 0x8d ; ret
0x000002000057e934 : add byte ptr [rdi], cl ; mov dh, 0x8d ; ret 0
0x0000020000067621 : add byte ptr [rdi], cl ; mov dh, 0x91 ; ret
0x00000200000e5ce2 : add byte ptr [rdi], cl ; mov dh, 0xb3 ; ret
0x00000200000c39e8 : add byte ptr [rdi], cl ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ba919 : add byte ptr [rdi], cl ; mov dh, 0xd2 ; cmovne edx, ecx ; mov al, dl ; ret
0x00000200007028ae : add byte ptr [rdi], cl ; mov edx, 0x37211e0 ; mov al, 1 ; ret
0x000002000009823b : add byte ptr [rdi], cl ; mov edx, 0x820f08e0 ; ret
0x00000200004ecee5 : add byte ptr [rdi], cl ; mov edx, 0x820f09e1 ; ret 0xf54
0x0000020000799a9f : add byte ptr [rdi], cl ; mov edx, 0x8b073071 ; ret
0x00000200000633c7 : add byte ptr [rdi], cl ; mov edx, 0x8b4d1ff0 ; lodsb al, byte ptr [rsi] ; ret
0x000002000046b4c7 : add byte ptr [rdi], cl ; mov edx, 0xcbe809eb ; ret 0x84ff
0x00000200003eec98 : add byte ptr [rdi], cl ; mov edx, 0xf09f4725 ; call qword ptr [rsi]
0x00000200000ee0d7 : add byte ptr [rdi], cl ; mov esi, 0xc381 ; add byte ptr [rbx], bh ; ret 0x767d
0x00000200003cfe03 : add byte ptr [rdi], cl ; mov esp, cs ; jae 0x200003cfe12 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006f3c43 : add byte ptr [rdi], cl ; popfq ; ret
0x00000200006378b4 : add byte ptr [rdi], cl ; ret
0x00000200000e8b2a : add byte ptr [rdi], cl ; ret 0x1ba
0x000002000043b6bf : add byte ptr [rdi], cl ; ret 0x349
0x000002000010a4e4 : add byte ptr [rdi], cl ; ret 0x35e9
0x00000200001acdfb : add byte ptr [rdi], cl ; ret 0x4488
0x00000200001acca4 : add byte ptr [rdi], cl ; ret 0x4489
0x0000020000018eb3 : add byte ptr [rdi], cl ; ret 0x4589
0x00000200001bbc19 : add byte ptr [rdi], cl ; ret 0x521
0x000002000003d5f5 : add byte ptr [rdi], cl ; ret 0x789
0x00000200004b95a4 : add byte ptr [rdi], cl ; ret 0x8441
0x00000200003db7e4 : add byte ptr [rdi], cl ; ret 0xb0c3
0x0000020000593a44 : add byte ptr [rdi], cl ; ret 0xb60f
0x00000200004df5a0 : add byte ptr [rdi], cl ; ret 0xba0f
0x00000200004dc00a : add byte ptr [rdi], cl ; ret 0xbc80
0x00000200001e9fb1 : add byte ptr [rdi], cl ; ret 0xc83a
0x000002000059f97c : add byte ptr [rdi], cl ; ret 0xc933
0x0000020000164aa8 : add byte ptr [rdi], cl ; rol byte ptr [rbp - 0x75], 1 ; ret
0x000002000043b870 : add byte ptr [rdi], cl ; ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x2000043b86b ; ret
0x000002000010ed9d : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x12b
0x0000020000180f5b : add byte ptr [rdi], cl ; test byte ptr [rax - 0x160012ec], bl ; call qword ptr [rdx]
0x0000020000592527 : add byte ptr [rdi], cl ; test byte ptr [rax - 0x27], ah ; out -1, eax ; mov al, 1 ; ret
0x0000020000459ed4 : add byte ptr [rdi], cl ; test byte ptr [rbx + 0x3b001635], bl ; ret 0x840f
0x0000020000076cd9 : add byte ptr [rdi], cl ; test byte ptr [rcx + rsi - 0x3fccffef], ah ; ret
0x0000020000498a07 : add byte ptr [rdi], cl ; test byte ptr [rcx - 0x17fffffd], cl ; int 0xc2
0x00000200005dea24 : add byte ptr [rdi], cl ; test byte ptr [rdi], ch ; adc al, 0xf0 ; dec dword ptr [rax - 0x75] ; ret
0x000002000005665b : add byte ptr [rdi], cl ; test byte ptr [rdx - 0xa000000], cl ; ret 0xf08
0x00000200000f6c68 : add byte ptr [rdi], cl ; test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x000002000001dc8d : add byte ptr [rdi], cl ; test byte ptr [rip - 0x74ffeb83], ah ; ret
0x0000020000497591 : add byte ptr [rdi], cl ; test byte ptr [rsi + 0x77], bh ; adc eax, dword ptr [rax] ; ret
0x00000200007bc6b9 : add byte ptr [rdi], cl ; test byte ptr [rsi - 0x74fffeea], dl ; ret
0x00000200000e458c : add byte ptr [rdi], cl ; test byte ptr [rsi], ch ; sub al, 0xc ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rdx]
0x0000020000549179 : add byte ptr [rdi], cl ; test dl, al ; mov ecx, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000d7248 : add byte ptr [rdi], cl ; test dl, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000010629e : add byte ptr [rdi], cl ; test dl, cl ; ret 6
0x000002000043d19c : add byte ptr [rdi], cl ; test dword ptr [rax - 0xa000000], esi ; ret 0xf01
0x0000020000156389 : add byte ptr [rdi], cl ; test dword ptr [rbx + 0x41000003], ebx ; call rdx
0x0000020000189c3e : add byte ptr [rdi], cl ; test dword ptr [rbx + rax*8 - 0x5d160012], ebp ; ret
0x000002000066fc45 : add byte ptr [rdi], cl ; test dword ptr [rbx - 0xffffff], edi ; ret 0x3b41
0x00000200004224f6 : add byte ptr [rdi], cl ; test dword ptr [rbx], edi ; ret
0x000002000041f36e : add byte ptr [rdi], cl ; test dword ptr [rbx], esp ; loope 0x2000041f394 ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x000002000015f93b : add byte ptr [rdi], cl ; test dword ptr [rcx + rdi - 0x48f00016], esp ; ret 0xb9
0x00000200004c4f9e : add byte ptr [rdi], cl ; test dword ptr [rdi - 0x9ffeec1], esi ; ret
0x00000200000a954a : add byte ptr [rdi], cl ; test dword ptr [rdx - 0x74fff127], edi ; ret
0x00000200004607dc : add byte ptr [rdi], cl ; test dword ptr [rip - 0x74ffffff], ebp ; ret
0x0000020000502a12 : add byte ptr [rdi], cl ; test dword ptr [rip - 0x75fff191], eax ; ret
0x00000200000c47b0 : add byte ptr [rdi], cl ; test dword ptr [rip - 0x9fffffd], edx ; ret
0x00000200000b0944 : add byte ptr [rdi], cl ; test dword ptr [rsi], eax ; idiv bh ; push rsi ; ret
0x000002000056958a : add byte ptr [rdi], cl ; test eax, ebp ; or qword ptr [rax], rax ; ret
0x0000020000004ca5 : add byte ptr [rdi], cl ; test ebp, ebp ; mov ch, 0x15 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000025642 : add byte ptr [rdi], cl ; test ebx, ecx ; and eax, 0x3410014 ; ret 0xb70f
0x00000200004475d1 : add byte ptr [rdi], cl ; test ebx, esi ; add byte ptr [rax], al ; add bh, bh ; ret 0xdbeb
0x0000020000401f5a : add byte ptr [rdi], cl ; test ecx, ecx ; ret
0x0000020000023df4 : add byte ptr [rdi], cl ; test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000042cd4b : add byte ptr [rdi], cl ; test edi, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000cd0fb : add byte ptr [rdi], cl ; test edi, edx ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret
0x0000020000076d97 : add byte ptr [rdi], cl ; test edi, esi ; xor byte ptr [rcx], dl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000a7bd2 : add byte ptr [rdi], cl ; test esi, edi ; jrcxz 0x200000a7bef ; add byte ptr [rcx + 0x23], cl ; ret
0x00000200004fb100 : add byte ptr [rdi], cl ; test esp, edi ; ret 0xe
0x00000200004abef5 : add byte ptr [rdi], cl ; xchg byte ptr [rcx + 0x12], dl ; add bh, bh ; ret
0x00000200004cf0ce : add byte ptr [rdi], cl ; xchg dword ptr [rdx], esi ; ret 0x10
0x00000200005f3560 : add byte ptr [rdi], cl ; xchg dword ptr [rsi], edx ; popfq ; cmc ; call rcx
0x00000200000d1794 : add byte ptr [rdi], cl ; xchg eax, eax ; add al, byte ptr [rax] ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x000002000012c8c1 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000020000401f13 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3d80
0x0000020000135262 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5338
0x00000200001c2409 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x00000200001c566e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x00000200001a0541 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc280
0x0000020000093ad2 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe181
0x000002000006bd4a : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf41
0x00000200005dbd1f : add byte ptr [rdi], cl ; xchg eax, ebp ; rol al, 0xe0 ; add esi, dword ptr [rdx] ; ret
0x000002000020beb5 : add byte ptr [rdi], cl ; xchg eax, ebp ; rol bl, 0xf6 ; ret 0x7407
0x000002000020dee6 : add byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x00000200000f89ba : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xc28a
0x0000020000065ab2 : add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x00000200001aeb00 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000458285 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x00000200005d1c46 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x31e8
0x0000020000230adc : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x6349
0x00000200001eaf8c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8444
0x0000020000033b9c : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8944
0x0000020000230633 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b41
0x000002000007be1e : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8d49
0x000002000021f6f2 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x0000020000523a00 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc28b
0x00000200001d2b29 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc985
0x00000200004bf9fc : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf66
0x000002000014bb80 : add byte ptr [rdi], cl ; xor al, byte ptr [rbx + 0x300ffce0] ; ret
0x0000020000150e9b : add byte ptr [rdi], cl ; xor cl, byte ptr [rax - 0x3f] ; loop 0x20000150ecb ; or rax, rdx ; pop rdi ; ret
0x000002000045362b : add byte ptr [rdi], cl ; xor dword ptr [rsp + rdi*4], 0x15 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000565d2f : add byte ptr [rdx + 0x100], bh ; call r14
0x0000020000074fb6 : add byte ptr [rdx + 0x11], cl ; add byte ptr [rax + 1], bh ; ret
0x000002000003b26d : add byte ptr [rdx + 0x1242240], cl ; ret
0x0000020000015ccf : add byte ptr [rdx + 0x12], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006f4a65 : add byte ptr [rdx + 0x141d88c3], cl ; pop rdi ; ret 0xa2ff
0x000002000022cfc3 : add byte ptr [rdx + 0x1d8b48d0], cl ; ret
0x000002000066978a : add byte ptr [rdx + 0x24548801], dh ; cmp byte ptr [rcx - 0x75], al ; ret
0x0000020000227924 : add byte ptr [rdx + 0x2a0f24c2], cl ; ret
0x00000200001dbaf7 : add byte ptr [rdx + 0x3ab9b203], cl ; ret 0x3a75
0x000002000008d621 : add byte ptr [rdx + 0x48322444], cl ; add esp, 0x28 ; ret
0x000002000049909d : add byte ptr [rdx + 0x4885004], cl ; or bh, bh ; ret 0xb70f
0x0000020000526280 : add byte ptr [rdx + 0x538a3043], cl ; cmp byte ptr [rdx], bh ; ret 0x820f
0x0000020000044d7b : add byte ptr [rdx + 0x5882c41], cl ; ret
0x000002000042efdc : add byte ptr [rdx + 0x63706c41], bh ; call 0x2000005c2c9
0x000002000062b0eb : add byte ptr [rdx + 0x706d644c], bh ; call 0x2000024d009
0x00000200004384d3 : add byte ptr [rdx + 0xa417c47], cl ; ret 0xa40
0x00000200001d3bee : add byte ptr [rdx + 0xac9e], cl ; add byte ptr [rdx], bh ; ret
0x00000200004524bd : add byte ptr [rdx + 0xd8d4801], dh ; cdq ; ret
0x00000200001c6913 : add byte ptr [rdx + 0xd8d4801], dh ; ret
0x00000200006d295b : add byte ptr [rdx + 0xd8d4801], dh ; wait ; ret 0xe8ff
0x00000200001fc924 : add byte ptr [rdx + 0xf], al ; mov bh, 0x4c ; ret 0x4a08
0x00000200003db7df : add byte ptr [rdx + 1], bh ; cmovne eax, edx ; ret
0x000002000024c4af : add byte ptr [rdx + 1], bh ; jmp r8
0x0000020000719419 : add byte ptr [rdx + 3], dh ; xor eax, eax ; ret
0x00000200000213c2 : add byte ptr [rdx + 5], dh ; add rsp, 0x28 ; ret
0x00000200000f089f : add byte ptr [rdx + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f089e : add byte ptr [rdx + 6], sil ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000f393 : add byte ptr [rdx + 8], dh ; mov al, 1 ; ret
0x0000020000091db4 : add byte ptr [rdx + rax], bh ; je 0x20000091dbf ; ret
0x0000020000091db4 : add byte ptr [rdx + rax], bh ; je 0x20000091dc2 ; ret
0x0000020000071705 : add byte ptr [rdx + rbp*8 - 0x48], dh ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000051675 : add byte ptr [rdx + rcx - 0x76], dh ; and r14d, dword ptr [r10] ; ret
0x0000020000510a92 : add byte ptr [rdx + rcx*4 + 0x45], al ; ret
0x00000200001903ae : add byte ptr [rdx + rcx*4 + 0x51], al ; add dword ptr [rcx - 0x76], eax ; ret 0xf824
0x000002000061dda4 : add byte ptr [rdx + rcx*4 - 0x79], al ; ret 6
0x00000200004690a5 : add byte ptr [rdx + rcx*4 - 0x7a], al ; ret 6
0x0000020000091cb7 : add byte ptr [rdx + rcx*4 - 0x7d], al ; ret
0x00000200007ce850 : add byte ptr [rdx + rcx*4 - 0x7f], al ; ret 6
0x00000200001c6050 : add byte ptr [rdx + rdi - 0x3e], al ; jne 0x200001c60b4 ; mov r8b, dl ; jmp 0x200001c60aa
0x00000200000eb104 : add byte ptr [rdx + rdi - 0x45], al ; ret
0x00000200000d8bfc : add byte ptr [rdx + rsi*8 - 0x6374b301], al ; ret 0x7340
0x0000020000675ca0 : add byte ptr [rdx - 0x13], al ; dec dword ptr [rbx - 0x98fdba4] ; ret
0x00000200005c2f00 : add byte ptr [rdx - 0x16aedbbc], cl ; ret
0x000002000000bfc2 : add byte ptr [rdx - 0x173ffdbf], cl ; add eax, dword ptr [rcx + 0x22] ; ret 0x8841
0x00000200007ab53d : add byte ptr [rdx - 0x1a], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000d2b3b : add byte ptr [rdx - 0x1e], dh ; ret
0x00000200005414ec : add byte ptr [rdx - 0x21e909f3], cl ; call rbx
0x00000200005215e8 : add byte ptr [rdx - 0x2dcc23c4], bh ; call 0x20000147f19
0x000002000048e8ba : add byte ptr [rdx - 0x3474b7ff], dh ; call r15
0x000002000012537b : add byte ptr [rdx - 0x3c], dh ; add rsp, 0x38 ; ret
0x00000200006a9f95 : add byte ptr [rdx - 0x48f0bb35], cl ; ret
0x00000200007b1f7c : add byte ptr [rdx - 0x53], dh ; ret
0x00000200006acf9d : add byte ptr [rdx - 0x74c17601], bh ; ret
0x000002000043e3b1 : add byte ptr [rdx - 0x74fd5800], cl ; add dword ptr [rdi], ecx ; ret 0x189
0x0000020000189641 : add byte ptr [rdx - 0x75], cl ; or byte ptr [rax], r14b ; ret
0x00000200006d8ae7 : add byte ptr [rdx - 0x76bb80bb], cl ; ret
0x000002000059e27c : add byte ptr [rdx - 0x77], al ; add al, 1 ; inc edx ; jmp 0x2000059e262
0x0000020000237bac : add byte ptr [rdx - 0x77], al ; ret
0x00000200005a7ec3 : add byte ptr [rdx - 0x9afdba4], cl ; ret
0x00000200000e90a8 : add byte ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003c7ea5 : add byte ptr [rdx], 0 ; add byte ptr [rbx], al ; ret
0x000002000013b87c : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000206b5d : add byte ptr [rdx], ah ; ret 0x6583
0x00000200007cd11c : add byte ptr [rdx], al ; add al, ch ; cwde ; stosb byte ptr [rdi], al ; ret 0x8bff
0x00000200007cd15a : add byte ptr [rdx], al ; add al, ch ; pop rdx ; stosb byte ptr [rdi], al ; ret 0x8bff
0x0000020000520c71 : add byte ptr [rdx], al ; add al, ch ; ret
0x00000200007d0e0c : add byte ptr [rdx], al ; add al, ch ; test al, 0x6d ; ret 0x8bff
0x000002000053f639 : add byte ptr [rdx], al ; add bh, al ; ret
0x0000020000213fb8 : add byte ptr [rdx], al ; add byte ptr [rax + 3], cl ; ret
0x00000200004b8455 : add byte ptr [rdx], al ; add byte ptr [rax - 0x3f], cl ; out dx, al ; adc dword ptr [rax - 9], ecx ; ret
0x00000200007d0e42 : add byte ptr [rdx], al ; add byte ptr [rax - 0x75], cl ; xlatb ; call 0x200003f7bc5
0x00000200003d1e10 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8548
0x000002000062a8db : add byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x2000024da47
0x0000020000625a92 : add byte ptr [rdx], al ; add byte ptr [rax], al ; jne 0x20000625aa8 ; call 0x2000024da49
0x000002000068ad02 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr [rcx + 8], rcx ; ret
0x0000020000114ae8 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000020000112ae5 : add byte ptr [rdx], al ; add byte ptr [rax], al ; test rax, r8 ; je 0x20000112af8 ; ret
0x00000200001aea61 : add byte ptr [rdx], al ; add byte ptr [rax], al ; xor rcx, rsp ; call 0x2000013ac79
0x000002000046d8ef : add byte ptr [rdx], al ; add byte ptr [rbx], ah ; ret 0xc23b
0x00000200004451ca : add byte ptr [rdx], al ; add byte ptr [rcx + 0x3b], al ; ret
0x000002000051d160 : add byte ptr [rdx], al ; add byte ptr [rcx - 0x7f], cl ; ret 0
0x00000200004fb0fe : add byte ptr [rdx], al ; add byte ptr [rdi], cl ; test esp, edi ; ret 0xe
0x00000200003e2c69 : add byte ptr [rdx], al ; add byte ptr [rsi], al ; je 0x200003e2c51 ; call 0x2000011ef70
0x00000200000c68bc : add byte ptr [rdx], al ; mov al, 1 ; ret
0x00000200002117fc : add byte ptr [rdx], al ; ret
0x00000200001c5049 : add byte ptr [rdx], al ; setne al ; ret
0x0000020000026aad : add byte ptr [rdx], bh ; ret
0x00000200007222dd : add byte ptr [rdx], bh ; ret 0x3a76
0x00000200000c60f1 : add byte ptr [rdx], bh ; ret 0x420f
0x0000020000037d0e : add byte ptr [rdx], bh ; ret 0x574
0x0000020000241c20 : add byte ptr [rdx], bh ; ret 0x860f
0x0000020000217b19 : add byte ptr [rdx], bh ; ret 0x973
0x000002000021f8e2 : add byte ptr [rdx], bh ; ret 0xa73
0x00000200003db18d : add byte ptr [rdx], bh ; ret 0xc75
0x000002000007daa1 : add byte ptr [rdx], bh ; retf -0x3e75 ; cmovg eax, edx ; jmp 0x2000007dab5
0x0000020000220384 : add byte ptr [rdx], bh ; sal dword ptr [rbx + 4], 0x44 ; mov cr0, rcx ; ret
0x000002000002fce1 : add byte ptr [rdx], ch ; ret 0x8488
0x0000020000079034 : add byte ptr [rdx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000211746 : add byte ptr [rdx], cl ; je 0x20000211753 ; xor al, al ; ret
0x000002000007d2f8 : add byte ptr [rdx], cl ; ret
0x00000200000680b4 : add byte ptr [rdx], cl ; ret 0x894c
0x000002000013963f : add byte ptr [rdx], cl ; setbe al ; ret
0x00000200004cd5bb : add byte ptr [rdx], dh ; lodsb al, byte ptr [rsi] ; add dl, r9b ; ret
0x0000020000485b17 : add byte ptr [rdx], dh ; ret
0x000002000012990b : add byte ptr [rdx], dh ; ret 0x724
0x00000200004d9de9 : add byte ptr [rdx], dh ; rol dh, 0x44 ; and al, 0x58 ; add esi, esi ; ret
0x00000200000c1a61 : add byte ptr [rdx], dh ; xchg eax, ebx ; mov eax, 0xf6000000 ; ret 0xf07
0x0000020000056057 : add byte ptr [rdx], dh ; xchg eax, edi ; mov eax, 0xf6000000 ; ret 0xf07
0x0000020000026aac : add byte ptr [rdx], dil ; ret
0x00000200003e8e65 : add byte ptr [rdx], dl ; add al, ch ; ret
0x00000200006f356d : add byte ptr [rdx], dl ; add bh, al ; ret
0x000002000045677b : add byte ptr [rdx], dl ; xor eax, eax ; ret
0x00000200004cd5ba : add byte ptr [rdx], r14b ; lodsb al, byte ptr [rsi] ; add dl, r9b ; ret
0x000002000003affb : add byte ptr [rip + 0x10001], ah ; ret
0x00000200001399c3 : add byte ptr [rip + 0x234c0000], al ; ret 0xd08a
0x000002000007dbee : add byte ptr [rip + 0x38400000], 0xb3 ; ret
0x00000200006f47c8 : add byte ptr [rip + 0x39480000], 0x35 ; ret 0x75ff
0x000002000065344e : add byte ptr [rip + 0xfc0920f], al ; mov dh, 0xc0 ; ret
0x0000020000015a3c : add byte ptr [rip - 0x74b40000], al ; ret 0xd233
0x000002000021c2cf : add byte ptr [rsi + 0x21], ah ; or al, 0x42 ; ret
0x00000200000bb71a : add byte ptr [rsi + 0x23], ah ; ret
0x00000200004b4510 : add byte ptr [rsi + 0x23], ah ; ret 0x366
0x0000020000450c8e : add byte ptr [rsi + 0x23], ah ; ret 0x8966
0x000002000055573d : add byte ptr [rsi + 0x23], ah ; ret 0xb66
0x0000020000046a1e : add byte ptr [rsi + 0x23], ah ; ret 0xba
0x00000200005abdb3 : add byte ptr [rsi + 0x23], ah ; ror byte ptr [rcx - 0x7d], 1 ; ret 0xb802
0x00000200005efddd : add byte ptr [rsi + 0x2b], ah ; ret 0x4fe9
0x000002000047a42e : add byte ptr [rsi + 0x2b], ah ; ret 0xffba
0x00000200006f3df2 : add byte ptr [rsi + 0x31], al ; add byte ptr [rax], al ; jmp 0x200006f3d1d
0x00000200000bb753 : add byte ptr [rsi + 0x3b], ah ; ret
0x0000020000664803 : add byte ptr [rsi + 0x3b], ah ; ret 0x1d77
0x00000200005eb960 : add byte ptr [rsi + 0x3b], ah ; ret 0x2174
0x00000200002001f2 : add byte ptr [rsi + 0x3b], ah ; ret 0x3272
0x000002000066481d : add byte ptr [rsi + 0x3b], ah ; ret 0x377
0x0000020000056534 : add byte ptr [rsi + 0x3b], ah ; ret 0x3f74
0x000002000001fc1d : add byte ptr [rsi + 0x3b], ah ; ret 0x4874
0x000002000005653e : add byte ptr [rsi + 0x3b], ah ; ret 0x5375
0x00000200004fd168 : add byte ptr [rsi + 0x3b], ah ; ret 0x5477
0x00000200005eb97c : add byte ptr [rsi + 0x3b], ah ; ret 0x574
0x00000200005c7db5 : add byte ptr [rsi + 0x3b], ah ; ret 0x672
0x000002000003f403 : add byte ptr [rsi + 0x3b], ah ; ret 0x772
0x000002000069334c : add byte ptr [rsi + 0x3b], ah ; ret 0x775
0x00000200006d2616 : add byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x0000020000046a26 : add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200002420bf : add byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x000002000001fc4c : add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x000002000068d231 : add byte ptr [rsi + 0x3b], ah ; ret 0x877
0x0000020000464821 : add byte ptr [rsi + 0x3b], ah ; ret 0x8b48
0x00000200004a7f00 : add byte ptr [rsi + 0x3b], ah ; ret 0xa877
0x00000200006abc9b : add byte ptr [rsi + 0x3b], ah ; ret 0xcb75
0x00000200000d1a48 : add byte ptr [rsi + 0x3b], ah ; ret 0xd75
0x000002000042de5a : add byte ptr [rsi + 0x3b], ah ; ror dword ptr [rdi], -0x7b ; ret
0x000002000068c711 : add byte ptr [rsi + 0x3b], ah ; sal dword ptr [rbx + rdx + 0x66], 0x3b ; ret 0xe74
0x0000020000140893 : add byte ptr [rsi + 0x3b], ah ; sal dword ptr [rsp + rdx + 0x49], -1 ; ret
0x00000200000f7364 : add byte ptr [rsi + 0x41], ah ; and ecx, ecx ; jmp qword ptr [r10 + rax*8]
0x0000020000713d95 : add byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0xa], ecx ; mov rax, r8 ; ret
0x00000200001cb0f5 : add byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 2], ecx ; mov al, 1 ; ret
0x00000200000f84db : add byte ptr [rsi + 0x41], ah ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000003302b : add byte ptr [rsi + 0x44], ah ; or dword ptr [rcx + 0xa], eax ; mov eax, edx ; ret
0x000002000001e4f0 : add byte ptr [rsi + 0x45], ah ; mov dword ptr [rdx + 0x10], ecx ; ret
0x00000200000bfc8a : add byte ptr [rsi + 0x5b], bl ; pop rbp ; ret
0x000002000006cb86 : add byte ptr [rsi + 0x5d], bl ; pop rbx ; ret
0x00000200000f2fb4 : add byte ptr [rsi + 0x5d], bl ; ret
0x00000200000ba3a7 : add byte ptr [rsi + 0xb], ah ; ret 0x8966
0x00000200001d3ff1 : add byte ptr [rsi + 1], ah ; add eax, 0x1513ff ; ret
0x000002000055cd29 : add byte ptr [rsi + 3], ah ; ret 0x8966
0x00000200004ddda3 : add byte ptr [rsi + 3], ah ; ret 0xb70f
0x00000200001c31ec : add byte ptr [rsi + 6], dh ; mov eax, 0xc000000d ; ret
0x0000020000711f63 : add byte ptr [rsi + 7], dh ; mov dword ptr [rip + 0x1b14c], eax ; ret
0x000002000001d5c2 : add byte ptr [rsi + 9], ah ; or cl, byte ptr [r8 - 0x75] ; ret
0x000002000003ace1 : add byte ptr [rsi + rax + 0x48], dh ; add esp, 0x50 ; pop rbx ; ret
0x0000020000038cc4 : add byte ptr [rsi + rax + 0x48], dh ; and dword ptr [rdx + 0x18], 0 ; ret
0x000002000007c5f4 : add byte ptr [rsi + rax + 0x48], dh ; mov eax, ecx ; ret
0x00000200006f4645 : add byte ptr [rsi + rax + 0x48], dh ; mov ebx, dword ptr [rsp + 8] ; ret
0x00000200000fa00c : add byte ptr [rsi + rax - 0x48], bh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000003feb9 : add byte ptr [rsi + rax - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000653c38 : add byte ptr [rsi + rax - 0x48], dh ; add eax, dword ptr [rbx] ; add al, al ; ret
0x000002000062af4c : add byte ptr [rsi + rax - 0x48], dh ; and byte ptr [rcx], al ; add al, al ; ret
0x000002000021e6a1 : add byte ptr [rsi + rax - 0x48], dh ; xor byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000002a539 : add byte ptr [rsi + rsi*8 + 0x48], dh ; mov eax, dword ptr [rdx + 0x40] ; ret
0x000002000065dc4f : add byte ptr [rsi - 0x1a], dh ; xor eax, eax ; ret
0x00000200004b472e : add byte ptr [rsi - 0x39], ah ; add esi, eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006f6df0 : add byte ptr [rsi - 0x3b7cb701], dh ; pop rbx ; ret
0x00000200001509fd : add byte ptr [rsi - 0x73277320], cl ; ret 0xc223
0x0000020000198e93 : add byte ptr [rsi - 0x74ba000f], dl ; ret
0x0000020000125b9d : add byte ptr [rsi - 0x77], ah ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000200006ceeb6 : add byte ptr [rsi - 0x77], ah ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000008b3b4 : add byte ptr [rsi - 0x77], ah ; or cl, byte ptr [r8 - 0x75] ; ret
0x00000200000fce63 : add byte ptr [rsi - 0x77], ah ; push rcx ; ret
0x00000200001aca5f : add byte ptr [rsi - 0x7b], ah ; ret
0x000002000000bfad : add byte ptr [rsi - 0x7b], ah ; ret 0x1f74
0x0000020000403270 : add byte ptr [rsi - 0x7b], ah ; ret 0x2874
0x00000200001ae5cb : add byte ptr [rsi - 0x7b], ah ; ret 0x840f
0x00000200004b6841 : add byte ptr [rsi - 0x7b], ah ; ret 0x850f
0x000002000047a436 : add byte ptr [rsi - 0x7b], ah ; ret 0xc78b
0x0000020000216325 : add byte ptr [rsi - 0x7b], ah ; ret 0xd74
0x00000200004b4d47 : add byte ptr [rsi - 0x7b], ah ; ret 0xdb74
0x00000200004c610f : add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x84 ; ret
0x00000200000d694f : add byte ptr [rsi - 0x7b], ah ; test byte ptr [rdi], 0x84 ; ret
0x0000020000555aed : add byte ptr [rsi - 0x7d], ah ; enter 0x6630, 0xb ; ret 0x4166
0x00000200007d0adb : add byte ptr [rsi - 0x7d], ah ; ret
0x0000020000452829 : add byte ptr [rsi - 1], ah ; mov ah, ah ; add dword ptr [rax], eax ; add bh, dh ; ret 0xfff0
0x0000020000420635 : add byte ptr [rsi - 1], ah ; mov fs, esp ; add dword ptr [rax], eax ; add bh, dh ; ret
0x0000020000415a6d : add byte ptr [rsi - 1], ah ; mov fs, esp ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x0000020000041f3c : add byte ptr [rsi - 1], ah ; ret
0x00000200000cd04a : add byte ptr [rsi - 1], ah ; ret 0x3b66
0x00000200000d179a : add byte ptr [rsi - 1], ah ; ret 0x4166
0x000002000014bafb : add byte ptr [rsi - 9], ah ; ret 0x300
0x000002000010f25c : add byte ptr [rsi], 0 ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000136b0e : add byte ptr [rsi], 0 ; add dh, dh ; ret 0xf02
0x0000020000637b0b : add byte ptr [rsi], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200003e2c6b : add byte ptr [rsi], al ; je 0x200003e2c4f ; call 0x2000011ef6e
0x000002000006d771 : add byte ptr [rsi], al ; mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x0000020000119a75 : add byte ptr [rsi], dh ; add byte ptr [rax], al ; ret
0x00000200001c0e4f : add byte ptr [rsp + rax + 0x48], dh ; mov eax, ecx ; ret
0x0000020000622f35 : add byte ptr [rsp + rax - 1], dh ; ret 0x15eb
0x00000200000e7614 : add byte ptr [rsp + rax*4 - 0x45], al ; ret 0
0x000002000009844d : add byte ptr [rsp + rax*4 - 0x55], al ; ret 0
0x00000200004ac43d : add byte ptr [rsp + rax*4 - 0x75], dh ; adc esi, esi ; ret 0xf08
0x000002000050a055 : add byte ptr [rsp + rbx - 0x75], dh ; ret
0x00000200001c88f8 : add byte ptr [rsp + rbx - 0x7f], dh ; call rsi
0x00000200004b1dab : add byte ptr [rsp + rbx*2 - 0x75], dh ; ret
0x000002000011eff9 : add byte ptr [rsp + rcx*8 - 1], dh ; ret
0x00000200001c8900 : add byte ptr [rsp + rdx - 0x7f], dh ; call rcx
0x000002000001c3f5 : add byte ptr [rsp + rsi*8 + 0x48], dh ; mov eax, dword ptr [rax + 8] ; ret
0x000002000001f779 : add byte ptr cs:[rax - 0x75], cl ; ret 0x8348
0x0000020000148465 : add byte ptr cs:[rax], al ; add cl, ch ; rcr bl, cl ; add byte ptr [rax], al ; ret
0x00000200003e9458 : add byte ptr cs:[rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004023ae : add byte ptr cs:[rax], al ; add rsp, 0x48 ; ret
0x0000020000147e7a : add byte ptr cs:[rax], al ; add rsp, 0x68 ; pop rdi ; pop rsi ; ret
0x00000200000d50f4 : add byte ptr cs:[rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x000002000003b281 : add byte ptr cs:[rax], al ; mov eax, ecx ; lea rax, qword ptr [rdx + rax*8] ; ret
0x000002000002de8d : add byte ptr cs:[rax], al ; ret
0x000002000000ff72 : add byte ptr cs:[rbp + rax + 0x48], dh ; add esp, 0x38 ; ret
0x000002000001085d : add byte ptr cs:[rbp + rcx*4 + 0x49], al ; dec dword ptr [rax - 0x75] ; ret
0x00000200000c56c5 : add byte ptr cs:[rbx - 0x3f7a7efc], cl ; je 0x200000c56db ; ret
0x000002000000e934 : add byte ptr cs:[rcx + 3], cl ; enter -0x76b8, 0xa ; ret
0x000002000001f922 : add byte ptr cs:[rdi + 0x18], dh ; add rsp, 0x28 ; ret
0x000002000003f3c7 : add byte ptr cs:[rdi], cl ; add dword ptr [rbx], -0xd ; adc al, byte ptr [rax] ; ret
0x00000200004f323a : add byte ptr ds:[rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200003e9f4c : add byte ptr ds:[rax], al ; add byte ptr [rsi + 0x3b], ah ; ret
0x0000020000148665 : add byte ptr ds:[rax], al ; add cl, ch ; rcr cl, cl ; add byte ptr [rax], al ; ret
0x000002000007be1d : add byte ptr ds:[rdi], cl ; xchg eax, esp ; ret 0x8d49
0x000002000079f2ee : add byte ptr es:[rax + 0x33], cl ; ret 0xb948
0x00000200000bfb30 : add byte ptr es:[rax - 0x75], cl ; ret
0x0000020000128b04 : add byte ptr es:[rax - 1], cl ; ret
0x0000020000014d36 : add byte ptr es:[rax], al ; add byte ptr [rax + 0x2b], cl ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000148365 : add byte ptr es:[rax], al ; add cl, ch ; rcr ah, cl ; add byte ptr [rax], al ; ret
0x000002000070812c : add byte ptr es:[rax], al ; mov rcx, rdi ; mov rsi, rax ; call rbx
0x0000020000089c6c : add byte ptr es:[rbx + rcx*4 - 0x74], cl ; ret 0xaa38
0x000002000044d804 : add byte ptr es:[rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x000002000020fbfc : add byte ptr es:[rcx + 3], al ; ret 0x3eb
0x00000200000ba01f : add byte ptr es:[rdi + rcx + 0x20], al ; ret
0x0000020000135f66 : add byte ptr fs:[rax], al ; add byte ptr [rbx], bh ; ret 0x870f
0x0000020000148b25 : add byte ptr fs:[rax], al ; add cl, ch ; adc dl, ch ; add byte ptr [rax], al ; ret
0x000002000015d20b : add byte ptr gs:[rax + 0x30c48348], dl ; pop rbp ; ret
0x0000020000043d46 : add byte ptr ss:[eax - 0x75], cl ; add al, 0xc1 ; ret
0x0000020000043d47 : add byte ptr ss:[rax - 0x75], cl ; add al, 0xc1 ; ret
0x000002000003c5a4 : add byte ptr ss:[rax - 0x7d], cl ; ret 0x4c10
0x000002000070dab2 : add byte ptr ss:[rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x0000020000148565 : add byte ptr ss:[rax], al ; add cl, ch ; rcr dl, cl ; add byte ptr [rax], al ; ret
0x0000020000119a76 : add byte ptr ss:[rax], al ; ret
0x00000200004e2b9d : add ch, 0xff ; add rsp, 0x18 ; ret
0x000002000018bd7a : add ch, al ; add byte ptr [rbx - 0x166f0004], bh ; ret
0x0000020000620e19 : add ch, al ; and esp, ecx ; ret 0x48ff
0x0000020000527f0f : add ch, al ; cmp eax, dword ptr [rdx] ; ret 0x3dff
0x00000200001e41f2 : add ch, al ; mov dl, al ; jmp 0x200001e41fa
0x00000200006c3eab : add ch, al ; ret
0x00000200001a2340 : add ch, al ; ret 0xffea
0x00000200006aaf6c : add ch, bl ; add al, 0x8b ; ret
0x000002000040359a : add ch, bl ; add eax, dword ptr [rcx - 0x75] ; ret 0x8d4c
0x0000020000530d3b : add ch, bl ; call 0x20033160efa
0x000002000008e096 : add ch, bl ; clc ; mov eax, 0xc000000d ; ret
0x0000020000471130 : add ch, bl ; in eax, dx ; bts dword ptr [rdx], 0x18 ; ret
0x00000200004b3133 : add ch, bl ; mov eax, 0xc0000058 ; ret
0x00000200000038fb : add ch, bl ; mov ecx, 0xc033cccc ; ret
0x00000200004202d9 : add ch, bl ; ret
0x00000200001a85ab : add ch, byte ptr [rax + 0xf097504] ; mov dh, 0x87 ; ret
0x0000020000024966 : add ch, byte ptr [rax + 0xf637504] ; mov dh, 0x83 ; ret
0x00000200006692fd : add ch, byte ptr [rax] ; ret
0x00000200000e009a : add ch, byte ptr [rbx] ; ret
0x000002000062a4fa : add ch, byte ptr [rbx] ; ret 0x8bff
0x000002000007a052 : add ch, byte ptr [rbx] ; ret 0x975
0x0000020000793dbb : add ch, byte ptr [rdx] ; ret
0x000002000013b2b9 : add ch, byte ptr [rip - 0x74b22709] ; ret 0xd233
0x000002000022e2ab : add ch, byte ptr [rsi] ; call r10
0x0000020000140263 : add ch, byte ptr [rsi] ; inc r10 ; jmp 0x20000140281
0x0000020000190c03 : add ch, cl ; add al, 0x37 ; lock dec dword ptr [rax - 1] ; ret 0x2be9
0x00000200005d75dd : add ch, cl ; cmp al, 0x76 ; out dx, al ; dec dword ptr [rbp + 0x3b] ; ret
0x000002000019119b : add ch, cl ; insb byte ptr [rdi], dx ; cmp esi, eax ; dec dword ptr [rax - 1] ; ret 0x93e9
0x0000020000189933 : add ch, cl ; ret 0xeeaf
0x00000200005804b0 : add ch, cl ; ret 0xf32b
0x000002000011833e : add ch, cl ; ret 0xfffe
0x000002000016fa19 : add ch, cl ; sub dword ptr [rax + 0x3b], ecx ; ret
0x000002000016ef9f : add ch, cl ; sub dword ptr [rax + 7], edi ; ret
0x00000200005cac2f : add ch, cl ; sub dword ptr [rax - 0x75], ecx ; ret 0x4cf0
0x00000200005d686c : add ch, cl ; sub dword ptr [rax - 0x7d], ecx ; ret
0x00000200006cf1e7 : add cl, 8 ; ret
0x00000200000927ba : add cl, al ; call 0x1ffc28d68ca
0x000002000002c419 : add cl, al ; call 0x1ffc303e835
0x00000200000820a5 : add cl, al ; call 0x1ffc30944c5
0x00000200001bbea1 : add cl, al ; call 0x1ffc31ce2c2
0x000002000020b975 : add cl, al ; call 0x1ffc321dd92
0x00000200004961fd : add cl, al ; call 0x1ffc34a861e
0x0000020000680061 : add cl, al ; call 0x1ffc3692480
0x000002000004258e : add cl, al ; call 0x2000fc6a99d
0x000002000013c660 : add cl, al ; clc ; adc byte ptr [rip + 0x7fff], ah ; ret
0x000002000068dc5f : add cl, al ; clc ; add eax, dword ptr [rbx] ; ret 0x3b41
0x00000200000841b5 : add cl, al ; loop 0x200000841c7 ; or eax, edx ; jmp 0x200000841b0
0x00000200001c11e8 : add cl, al ; loopne 0x200001c1200 ; mov dword ptr [r8 + 0x28], eax ; ret
0x00000200001c1503 : add cl, al ; loopne 0x200001c151b ; mov dword ptr [r8 + 0x28], eax ; ret
0x00000200001d4654 : add cl, al ; loopne 0x200001d4667 ; add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200001d46a0 : add cl, al ; loopne 0x200001d46b3 ; add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200002117d9 : add cl, al ; loopne 0x200002117ed ; add eax, ecx ; ret
0x000002000041b03c : add cl, al ; ret 0x4105
0x000002000003d18a : add cl, bpl ; ret
0x00000200004783d8 : add cl, byte ptr [r13 + rcx*4 + 0x1c] ; or byte ptr [rbp + 0x3b], cl ; ret
0x000002000012a3d9 : add cl, byte ptr [r15] ; mov bh, 0x51 ; add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x000002000046ef90 : add cl, byte ptr [r8 + 0x3b] ; ret 0x5277
0x00000200005cbf94 : add cl, byte ptr [r8 + 3] ; ret
0x0000020000622eb1 : add cl, byte ptr [r8 - 0x75] ; ret
0x00000200000f6a99 : add cl, byte ptr [r8 - 0x7d] ; ret
0x00000200003f88aa : add cl, byte ptr [r9 - 0x7d] ; ret
0x00000200000c4661 : add cl, byte ptr [rax + 0x23] ; ret
0x000002000019e15f : add cl, byte ptr [rax + 0x23] ; ret 0x348
0x000002000041ed1c : add cl, byte ptr [rax + 0x2b] ; ret
0x000002000022e161 : add cl, byte ptr [rax + 0x33] ; ret
0x0000020000478d43 : add cl, byte ptr [rax + 0x3b] ; ret
0x00000200001819f3 : add cl, byte ptr [rax + 0x3b] ; ret 0x1973
0x000002000067aab0 : add cl, byte ptr [rax + 0x3b] ; ret 0x1974
0x00000200000c094d : add cl, byte ptr [rax + 0x3b] ; ret 0x1b73
0x0000020000038ca2 : add cl, byte ptr [rax + 0x3b] ; ret 0x1f74
0x0000020000431573 : add cl, byte ptr [rax + 0x3b] ; ret 0x2174
0x00000200006cb408 : add cl, byte ptr [rax + 0x3b] ; ret 0x2572
0x00000200006c0ea1 : add cl, byte ptr [rax + 0x3b] ; ret 0x2b72
0x00000200006c0e35 : add cl, byte ptr [rax + 0x3b] ; ret 0x3172
0x00000200006c12fc : add cl, byte ptr [rax + 0x3b] ; ret 0x3272
0x00000200003cbed8 : add cl, byte ptr [rax + 0x3b] ; ret 0x3374
0x00000200006bd9c8 : add cl, byte ptr [rax + 0x3b] ; ret 0x3472
0x0000020000544dc4 : add cl, byte ptr [rax + 0x3b] ; ret 0x3974
0x000002000046ef91 : add cl, byte ptr [rax + 0x3b] ; ret 0x5277
0x00000200006f65ca : add cl, byte ptr [rax + 0x3b] ; ret 0x6975
0x00000200007ad04d : add cl, byte ptr [rax + 0x3b] ; ret 0x7676
0x00000200004045d2 : add cl, byte ptr [rax + 0x3b] ; ret 0x8074
0x00000200006c07dd : add cl, byte ptr [rax + 0x3b] ; ret 0x820f
0x000002000000b97b : add cl, byte ptr [rax + 0x3b] ; ret 0x850f
0x0000020000687a95 : add cl, byte ptr [rax + 0x3b] ; ret 0xa76
0x00000200001e3f41 : add cl, byte ptr [rax + 0x3b] ; ret 0xe476
0x000002000013d337 : add cl, byte ptr [rax + 0x3b] ; ret 0xee72
0x00000200006b2865 : add cl, byte ptr [rax + 0x3b] ; ret 0xf172
0x00000200001318a4 : add cl, byte ptr [rax + 0x3b] ; ret 0xf48
0x0000020000018ac2 : add cl, byte ptr [rax + 0x3b] ; ret 0xf74
0x0000020000211798 : add cl, byte ptr [rax + 0x3b] ; sal dword ptr [rbx - 0xf], 0x48 ; mov eax, edx ; ret
0x0000020000046dd6 : add cl, byte ptr [rax + 0x3b] ; sal dword ptr [rdx - 0x23], 1 ; ret
0x00000200005d1c40 : add cl, byte ptr [rax + 0x45f81] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x31e8
0x00000200006e8a1e : add cl, byte ptr [rax + 0x63] ; push rbp ; ret
0x00000200006cdc00 : add cl, byte ptr [rax + 0x63] ; ret 0x8348
0x00000200007c29ae : add cl, byte ptr [rax + 0x6b] ; ret 0x480d
0x0000020000442d5c : add cl, byte ptr [rax + 0x6b] ; ret 0x4825
0x0000020000778bcf : add cl, byte ptr [rax + 0x6b] ; ret 0x4c0d
0x0000020000778b64 : add cl, byte ptr [rax + 0x6b] ; ret 0x8b0d
0x000002000077dbe3 : add cl, byte ptr [rax + 0xb] ; ret 0x8b48
0x00000200001c0e78 : add cl, byte ptr [rax + 0xf] ; stosd dword ptr [rdi], eax ; ret 0xd148
0x00000200001264f5 : add cl, byte ptr [rax + 1] ; add dword ptr [rax - 0x7d], ecx ; ret 0xeb18
0x000002000041e41a : add cl, byte ptr [rax + 3] ; fisttp word ptr [rax - 0x75] ; ret
0x00000200005cbf95 : add cl, byte ptr [rax + 3] ; ret
0x00000200001d98b6 : add cl, byte ptr [rax + rdx] ; ret
0x0000020000494b5a : add cl, byte ptr [rax - 0x3f] ; loopne 0x20000494b6b ; add rax, rcx ; ret
0x000002000008e08d : add cl, byte ptr [rax - 0x3fccfdb6] ; ret
0x0000020000080e7d : add cl, byte ptr [rax - 0x73] ; add al, 0x81 ; ret
0x000002000000a8de : add cl, byte ptr [rax - 0x73] ; pop rax ; sub byte ptr [rax - 0x75], cl ; ret
0x000002000020f7a9 : add cl, byte ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x0000020000534728 : add cl, byte ptr [rax - 0x75] ; ret
0x0000020000006d89 : add cl, byte ptr [rax - 0x75] ; ret 0x8348
0x00000200000eb52b : add cl, byte ptr [rax - 0x75] ; ret 0x8b48
0x000002000049e529 : add cl, byte ptr [rax - 0x77] ; adc byte ptr [r8 - 0x75], cl ; ret 0xffba
0x00000200005695f1 : add cl, byte ptr [rax - 0x77] ; add dword ptr [rcx + rcx*4 + 2], ecx ; ret
0x00000200005475f2 : add cl, byte ptr [rax - 0x77] ; or byte ptr [r9 - 0x75], al ; ret
0x00000200000b3cc0 : add cl, byte ptr [rax - 0x7b] ; enter 0x2674, -0xa ; ret 0xf08
0x0000020000020a22 : add cl, byte ptr [rax - 0x7b] ; leave ; jne 0x20000020a09 ; mov eax, r8d ; ret
0x00000200000b5b57 : add cl, byte ptr [rax - 0x7b] ; ret 0x2675
0x0000020000100991 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x42], 0xeb ; ret
0x000002000011974d : add cl, byte ptr [rax - 0x7cb7fdb6] ; ret 0x4903
0x0000020000160c21 : add cl, byte ptr [rax - 0x7cb7fdbe] ; ret 0x4904
0x0000020000109e41 : add cl, byte ptr [rax - 0x7d] ; or al, dil ; ret
0x00000200000f6a9a : add cl, byte ptr [rax - 0x7d] ; ret
0x000002000054ff6b : add cl, byte ptr [rax - 0x7d] ; ret 0x4120
0x0000020000046dd2 : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000002000002d514 : add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x000002000006f6a7 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200001265b2 : add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200001264d5 : add cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x000002000013d2c4 : add cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x0000020000119750 : add cl, byte ptr [rax - 0x7d] ; ret 0x4903
0x0000020000160c24 : add cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x00000200007c776d : add cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00000200006adbbb : add cl, byte ptr [rax - 0x7d] ; ret 0x490c
0x0000020000549729 : add cl, byte ptr [rax - 0x7d] ; ret 0x4930
0x000002000011959a : add cl, byte ptr [rax - 0x7d] ; ret 0x4d03
0x000002000013bd2b : add cl, byte ptr [rax - 0x7d] ; ret 0x6602
0x0000020000553edb : add cl, byte ptr [rax - 0x7d] ; ret 0x8928
0x000002000023a2a0 : add cl, byte ptr [rax - 0x7d] ; ret 0x8b02
0x0000020000119584 : add cl, byte ptr [rax - 0x7d] ; ret 0xeb02
0x000002000006b384 : add cl, byte ptr [rax - 0x7d] ; ret 0xf10
0x000002000022d6af : add cl, byte ptr [rax - 0x7f] ; ret
0x00000200006f379d : add cl, byte ptr [rax - 0xb7eefc] ; ret 0x8341
0x000002000015bf51 : add cl, byte ptr [rax - 0xd7eab4] ; ret 0x5589
0x000002000069d897 : add cl, byte ptr [rax - 1] ; ret
0x000002000024c196 : add cl, byte ptr [rax - 1] ; ret 0x188
0x000002000013b5d5 : add cl, byte ptr [rax - 1] ; ret 0x3a80
0x00000200001d5aae : add cl, byte ptr [rax - 1] ; ret 0x4166
0x000002000022e1ba : add cl, byte ptr [rax - 1] ; ret 0x8348
0x00000200000440b4 : add cl, byte ptr [rax - 1] ; ret 0x8349
0x0000020000643b83 : add cl, byte ptr [rax - 1] ; ret 0xc084
0x000002000014729e : add cl, byte ptr [rax - 1] ; ret 0xc83a
0x00000200006d0ab6 : add cl, byte ptr [rax - 1] ; ret 0xc88a
0x00000200006d1825 : add cl, byte ptr [rbp + 0x12e8dd4a] ; ret 0xffb7
0x000002000041f449 : add cl, byte ptr [rbp + 0x23660f41] ; ret 0x8d49
0x0000020000512f12 : add cl, byte ptr [rbp + 0x3b662455] ; ret 0x6e72
0x000002000013bcaa : add cl, byte ptr [rbp + 0x3b] ; enter -0x1c8e, 0x49 ; mov eax, edx ; ret
0x0000020000213188 : add cl, byte ptr [rbp + 0x3b] ; enter 0xf49, 0x47 ; ret 0x8548
0x000002000068853d : add cl, byte ptr [rbp + 0x3b] ; ret
0x00000200007a9796 : add cl, byte ptr [rbp + 0x3b] ; ret 0x1a74
0x000002000012a3de : add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x0000020000034209 : add cl, byte ptr [rbp + 0x3b] ; ret 0x7274
0x00000200000a3705 : add cl, byte ptr [rbp + 0x3b] ; ret 0xd572
0x000002000062d3fb : add cl, byte ptr [rbp + 0x3b] ; ret 0xdb73
0x000002000013b3a6 : add cl, byte ptr [rbp + 0x3b] ; ret 0xe372
0x00000200007d2b24 : add cl, byte ptr [rbp + 0x3e85c4d] ; ret 0xff83
0x000002000014593a : add cl, byte ptr [rbp + 0x48d4004] ; ret 0x2ba
0x0000020000248ff7 : add cl, byte ptr [rbp + 0x48d4004] ; ret 0xfeb
0x00000200006d16e8 : add cl, byte ptr [rbp + 0x4fe8934a] ; ret
0x00000200007d29b2 : add cl, byte ptr [rbp + 0x75e85c48] ; ret
0x00000200002406d4 : add cl, byte ptr [rbp + 3] ; ror dword ptr [rax + 0x33], cl ; ror byte ptr [rax - 0x2d], 1 ; ret 0x8341
0x00000200004783d9 : add cl, byte ptr [rbp + rcx*4 + 0x1c] ; or byte ptr [rbp + 0x3b], cl ; ret
0x00000200000e3147 : add cl, byte ptr [rbp - 0x75] ; adc byte ptr [rbp + 0x3b], cl ; ret
0x00000200001e99fc : add cl, byte ptr [rbp - 0x75] ; fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x00000200001f1dd7 : add cl, byte ptr [rbp - 0x75] ; ret 0x10e8
0x0000020000595d85 : add cl, byte ptr [rbp - 0x75] ; ret 0xc18b
0x00000200006d1740 : add cl, byte ptr [rbp - 0x8170eb6] ; ret 0xffb7
0x00000200001b5b9e : add cl, byte ptr [rbx + 0x33c003c7] ; ret
0x00000200006ac7e5 : add cl, byte ptr [rbx + 0x48c28bd0] ; add esp, 0x18 ; ret
0x00000200003f40a3 : add cl, byte ptr [rbx + 0x4d8d45c1] ; add dword ptr [rbx], esp ; ret 0xc23b
0x0000020000102999 : add cl, byte ptr [rbx - 0x153eb736] ; add ecx, dword ptr [rax - 1] ; ret 0xe183
0x00000200006adbb9 : add cl, byte ptr [rbx] ; add cl, byte ptr [rax - 0x7d] ; ret 0x490c
0x000002000067c193 : add cl, byte ptr [rbx] ; ret
0x00000200000d408d : add cl, byte ptr [rcx + 0x23] ; ret
0x000002000001a3fc : add cl, byte ptr [rcx + 0x23] ; ret 0x348
0x000002000049e895 : add cl, byte ptr [rcx + 0x3b] ; ret
0x0000020000078acd : add cl, byte ptr [rcx + 0x3b] ; ret 0x1574
0x0000020000544e46 : add cl, byte ptr [rcx + 0x3b] ; ret 0xd374
0x00000200003f8eb1 : add cl, byte ptr [rcx + 0x3b] ; ret 0xe972
0x00000200003fa7af : add cl, byte ptr [rcx + 0x3b] ; ret 0xeb72
0x00000200003f8ef3 : add cl, byte ptr [rcx + 0x3b] ; ret 0xed72
0x00000200006b452d : add cl, byte ptr [rcx + 0x3b] ; ret 0xf272
0x0000020000635d23 : add cl, byte ptr [rcx + 0xe493] ; add dh, dh ; ret 0x7501
0x00000200000a6f8b : add cl, byte ptr [rcx + 0xf] ; enter -0x72b3, 0x1c ; ret
0x0000020000118de7 : add cl, byte ptr [rcx + 0xf] ; mov edi, 0xf490642 ; scasd eax, dword ptr [rdi] ; ret
0x0000020000118dd6 : add cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000200000a6b41 : add cl, byte ptr [rcx + 9] ; sub cl, bpl ; ret 0xfffa
0x000002000006974c : add cl, byte ptr [rcx + rcx*4 + 0x4a] ; or byte ptr [rax - 0x75], cl ; ret 0xc748
0x00000200001e17a6 : add cl, byte ptr [rcx + rcx*4 + 1] ; ret
0x0000020000236cdc : add cl, byte ptr [rcx - 0x48f0bafe] ; ret
0x00000200001fc7cf : add cl, byte ptr [rcx - 0x75] ; or byte ptr [rax + 0x49], r10b ; mov dword ptr [rcx], eax ; ret
0x0000020000126425 : add cl, byte ptr [rcx - 0x75] ; ret
0x000002000066b5ad : add cl, byte ptr [rcx - 0x75] ; ret 0xf748
0x00000200001b9180 : add cl, byte ptr [rcx - 0x75] ; ror byte ptr [rax - 0x75], cl ; add eax, dword ptr [rbp + 0x2b] ; ret 0x8348
0x0000020000408bc2 : add cl, byte ptr [rcx - 0x77] ; push rax ; or byte ptr [rbx], dh ; shr al, cl ; ret 0x70d
0x000002000016ecd0 : add cl, byte ptr [rcx - 0x7d] ; and byte ptr [rax], al ; ret
0x00000200002378ec : add cl, byte ptr [rcx - 0x7d] ; ret
0x000002000013e04f : add cl, byte ptr [rcx - 0x7d] ; ret 0x3308
0x000002000024b945 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4102
0x0000020000690183 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4404
0x00000200001260b2 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4504
0x000002000010f9b7 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x000002000010fa2d : add cl, byte ptr [rcx - 0x7d] ; ret 0x4804
0x000002000058e596 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4902
0x0000020000475363 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4d02
0x000002000044a044 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4d04
0x0000020000140879 : add cl, byte ptr [rcx - 0x7d] ; ret 0x6602
0x000002000013e0ab : add cl, byte ptr [rcx - 0x7d] ; ret 0x6608
0x000002000068e3dd : add cl, byte ptr [rcx - 0x7d] ; ret 0x8b02
0x0000020000420ef2 : add cl, byte ptr [rcx - 0x7d] ; ret 0xe902
0x000002000013e12b : add cl, byte ptr [rcx - 0x7d] ; ret 0xe908
0x00000200001408fe : add cl, byte ptr [rcx - 0x7d] ; ret 0xeb02
0x0000020000166057 : add cl, byte ptr [rcx - 0x7d] ; rol byte ptr [rax + rcx*2], 0xff ; ret 0x8348
0x0000020000166102 : add cl, byte ptr [rcx - 0x7d] ; rol byte ptr [rcx + rcx*2], 0xff ; ret 0x8348
0x00000200004c52e5 : add cl, byte ptr [rcx - 0x9bfdba4] ; ret
0x0000020000009298 : add cl, byte ptr [rcx - 1] ; ret
0x000002000012666f : add cl, byte ptr [rcx - 1] ; ret 0x4566
0x00000200001401fc : add cl, byte ptr [rcx - 1] ; ret 0x8041
0x0000020000008f38 : add cl, byte ptr [rcx - 1] ; ret 0x8348
0x0000020000126202 : add cl, byte ptr [rcx - 1] ; ret 0x8841
0x000002000014113a : add cl, byte ptr [rcx - 1] ; ret 0x8b41
0x0000020000126101 : add cl, byte ptr [rcx - 1] ; ret 0xf41
0x0000020000140239 : add cl, byte ptr [rcx - 1] ; ret 0xff48
0x000002000049e8a5 : add cl, byte ptr [rdi - 0x73] ; or al, 0x53 ; mov rax, r9 ; ret
0x000002000052b0f6 : add cl, byte ptr [rdi] ; mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x000002000012a3da : add cl, byte ptr [rdi] ; mov bh, 0x51 ; add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x00000200006cfd86 : add cl, byte ptr [rdi] ; mov bh, 0xb ; call 0x2000013c066
0x00000200001447d4 : add cl, byte ptr [rdi] ; mov bh, 0xc1 ; add rsp, 0x38 ; ret
0x00000200001084f4 : add cl, byte ptr [rdi] ; mov word ptr [rdi - 0x75ffffff], gs ; ret
0x00000200004aa7ae : add cl, byte ptr [rdi] ; ret 0xb983
0x0000020000561882 : add cl, byte ptr [rdi] ; test al, bl ; cdq ; or dword ptr [rax], eax ; ret
0x000002000014baf5 : add cl, byte ptr [rdi] ; test byte ptr [rax + rax - 0x89a0000], cl ; ret 0x300
0x00000200001191b8 : add cl, byte ptr [rdi] ; test byte ptr [rbx - 0x9ffffff], ch ; ret
0x0000020000132a3b : add cl, byte ptr [rdi] ; test dword ptr [rbx - 0x74fff829], esi ; ret 0x4466
0x00000200005924d5 : add cl, byte ptr [rdi] ; test dword ptr [rcx + rbx*8 - 0x9be0019], ebx ; ret 0x7402
0x0000020000047f06 : add cl, byte ptr [rdi] ; test dword ptr [rdi - 0x9ffeca3], esp ; ret
0x00000200000d4d44 : add cl, byte ptr [rdi] ; test dword ptr [rdi - 0xa000000], eax ; ret
0x000002000052dfba : add cl, byte ptr [rdi] ; test dword ptr [rdi], edx ; ret 8
0x0000020000049927 : add cl, byte ptr [rdi] ; test dword ptr [rsi + rdi*8 - 1], ecx ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000135103 : add cl, byte ptr [rdi] ; test dword ptr [rsi - 0x9fff846], ecx ; ret
0x00000200000037e0 : add cl, byte ptr [rdi] ; test ebp, ebx ; ret 0x15
0x000002000007a4b6 : add cl, byte ptr [rdi] ; test ecx, ebp ; call qword ptr [rax]
0x000002000009c4d5 : add cl, byte ptr [rdi] ; test edi, ebp ; add al, 0 ; add dh, dh ; ret
0x000002000043767d : add cl, byte ptr [rdi] ; xchg dword ptr [rbp - 0x8fffffb], eax ; ret
0x000002000001dce6 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xc3f6
0x000002000011def3 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xe9
0x00000200001a2763 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xf640
0x00000200000770c1 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x4a8
0x000002000016f3a4 : add cl, byte ptr [rdx - 0x77] ; ret
0x00000200000bad5e : add cl, byte ptr [rsi] ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x0000020000148028 : add cl, ch ; adc ah, al ; add byte ptr [rax], al ; ret
0x0000020000147f28 : add cl, ch ; adc ah, cl ; add byte ptr [rax], al ; ret
0x00000200005abc96 : add cl, ch ; adc al, 0xe3 ; jmp 0x200411db3a5
0x0000020000149c28 : add cl, ch ; adc al, ah ; add byte ptr [rax], al ; ret
0x000002000014a028 : add cl, ch ; adc al, al ; add byte ptr [rax], al ; ret
0x0000020000149928 : add cl, ch ; adc al, bh ; add byte ptr [rax], al ; ret
0x0000020000149d28 : add cl, ch ; adc al, bl ; add byte ptr [rax], al ; ret
0x0000020000149b28 : add cl, ch ; adc al, ch ; add byte ptr [rax], al ; ret
0x0000020000149f28 : add cl, ch ; adc al, cl ; add byte ptr [rax], al ; ret
0x0000020000149a28 : add cl, ch ; adc al, dh ; add byte ptr [rax], al ; ret
0x0000020000149e28 : add cl, ch ; adc al, dl ; add byte ptr [rax], al ; ret
0x0000020000148428 : add cl, ch ; adc bl, ah ; add byte ptr [rax], al ; ret
0x0000020000148828 : add cl, ch ; adc bl, al ; add byte ptr [rax], al ; ret
0x0000020000148128 : add cl, ch ; adc bl, bh ; add byte ptr [rax], al ; ret
0x0000020000148528 : add cl, ch ; adc bl, bl ; add byte ptr [rax], al ; ret
0x0000020000148328 : add cl, ch ; adc bl, ch ; add byte ptr [rax], al ; ret
0x0000020000148728 : add cl, ch ; adc bl, cl ; add byte ptr [rax], al ; ret
0x0000020000148228 : add cl, ch ; adc bl, dh ; add byte ptr [rax], al ; ret
0x0000020000148628 : add cl, ch ; adc bl, dl ; add byte ptr [rax], al ; ret
0x0000020000149428 : add cl, ch ; adc cl, ah ; add byte ptr [rax], al ; ret
0x0000020000149828 : add cl, ch ; adc cl, al ; add byte ptr [rax], al ; ret
0x0000020000149128 : add cl, ch ; adc cl, bh ; add byte ptr [rax], al ; ret
0x0000020000149528 : add cl, ch ; adc cl, bl ; add byte ptr [rax], al ; ret
0x0000020000149328 : add cl, ch ; adc cl, ch ; add byte ptr [rax], al ; ret
0x0000020000149728 : add cl, ch ; adc cl, cl ; add byte ptr [rax], al ; ret
0x0000020000149228 : add cl, ch ; adc cl, dh ; add byte ptr [rax], al ; ret
0x0000020000149628 : add cl, ch ; adc cl, dl ; add byte ptr [rax], al ; ret
0x0000020000148c28 : add cl, ch ; adc dl, ah ; add byte ptr [rax], al ; ret
0x0000020000149028 : add cl, ch ; adc dl, al ; add byte ptr [rax], al ; ret
0x0000020000148928 : add cl, ch ; adc dl, bh ; add byte ptr [rax], al ; ret
0x0000020000148d28 : add cl, ch ; adc dl, bl ; add byte ptr [rax], al ; ret
0x0000020000195d3e : add cl, ch ; adc dl, byte ptr [rcx] ; int1 ; push rsi ; ret 0x7401
0x0000020000148b28 : add cl, ch ; adc dl, ch ; add byte ptr [rax], al ; ret
0x0000020000148f28 : add cl, ch ; adc dl, cl ; add byte ptr [rax], al ; ret
0x0000020000148a28 : add cl, ch ; adc dl, dh ; add byte ptr [rax], al ; ret
0x0000020000148e28 : add cl, ch ; adc dl, dl ; add byte ptr [rax], al ; ret
0x0000020000198e91 : add cl, ch ; add byte ptr [rsi - 0x74ba000f], dl ; ret
0x000002000069390b : add cl, ch ; add dword ptr [rax], 0 ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000061ff19 : add cl, ch ; and ebx, ebx ; ret 0xccff
0x000002000047f7b4 : add cl, ch ; call qword ptr [rdx]
0x0000020000197926 : add cl, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; push rsp ; int1 ; inc dword ptr [rbp - 0x75] ; ret
0x00000200001a6f88 : add cl, ch ; fcmovne st(0), st(5) ; dec dword ptr [rax - 0x7d] ; jmp qword ptr [rax]
0x0000020000129498 : add cl, ch ; ficom dword ptr [rbx - 0x3fccffc0] ; ret
0x00000200001717e2 : add cl, ch ; frstor dword ptr [rax] ; stc ; dec dword ptr [rax - 0x75] ; ret
0x000002000019b8aa : add cl, ch ; fstp dword ptr [rcx] ; dec dword ptr [rax - 0x75] ; ret
0x00000200005de187 : add cl, ch ; fucomp st(7) ; inc dword ptr [rcx - 0x7d] ; ret 0xc7f0
0x00000200004a4d8b : add cl, ch ; hlt ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000020000195f00 : add cl, ch ; imul ebx, dword ptr [rcx], 0x8148fff1 ; ret 0
0x000002000004f0a2 : add cl, ch ; imul edi, edi, 0xf641ffff ; ret 0xf10
0x0000020000176d6b : add cl, ch ; in al, -7 ; inc dword ptr [rcx - 0x75] ; ret 0x20ba
0x0000020000147ec8 : add cl, ch ; jb 0x20000147eb3 ; add byte ptr [rax], al ; ret
0x0000020000147fc8 : add cl, ch ; jb 0x20000147fb2 ; add byte ptr [rax], al ; ret
0x00000200001480c8 : add cl, ch ; jb 0x200001480b1 ; add byte ptr [rax], al ; ret
0x00000200001481c8 : add cl, ch ; jb 0x200001481b0 ; add byte ptr [rax], al ; ret
0x00000200001482c8 : add cl, ch ; jb 0x200001482af ; add byte ptr [rax], al ; ret
0x00000200001483c8 : add cl, ch ; jb 0x200001483ae ; add byte ptr [rax], al ; ret
0x00000200001484c8 : add cl, ch ; jb 0x200001484ad ; add byte ptr [rax], al ; ret
0x00000200001485c8 : add cl, ch ; jb 0x200001485ac ; add byte ptr [rax], al ; ret
0x00000200001486c8 : add cl, ch ; jb 0x200001486ab ; add byte ptr [rax], al ; ret
0x00000200001487c8 : add cl, ch ; jb 0x200001487aa ; add byte ptr [rax], al ; ret
0x00000200001488c8 : add cl, ch ; jb 0x200001488a9 ; add byte ptr [rax], al ; ret
0x00000200001489c8 : add cl, ch ; jb 0x200001489a8 ; add byte ptr [rax], al ; ret
0x0000020000148ac8 : add cl, ch ; jb 0x20000148aa7 ; add byte ptr [rax], al ; ret
0x0000020000148bc8 : add cl, ch ; jb 0x20000148ba6 ; add byte ptr [rax], al ; ret
0x0000020000148cc8 : add cl, ch ; jb 0x20000148ca5 ; add byte ptr [rax], al ; ret
0x0000020000148dc8 : add cl, ch ; jb 0x20000148da4 ; add byte ptr [rax], al ; ret
0x0000020000148ec8 : add cl, ch ; jb 0x20000148ea3 ; add byte ptr [rax], al ; ret
0x0000020000148fc8 : add cl, ch ; jb 0x20000148fa2 ; add byte ptr [rax], al ; ret
0x00000200001490c8 : add cl, ch ; jb 0x200001490a1 ; add byte ptr [rax], al ; ret
0x00000200001491c8 : add cl, ch ; jb 0x200001491a0 ; add byte ptr [rax], al ; ret
0x00000200001492c8 : add cl, ch ; jb 0x2000014929f ; add byte ptr [rax], al ; ret
0x00000200001493c8 : add cl, ch ; jb 0x2000014939e ; add byte ptr [rax], al ; ret
0x00000200001494c8 : add cl, ch ; jb 0x2000014949d ; add byte ptr [rax], al ; ret
0x00000200001495c8 : add cl, ch ; jb 0x2000014959c ; add byte ptr [rax], al ; ret
0x00000200001496c8 : add cl, ch ; jb 0x2000014969b ; add byte ptr [rax], al ; ret
0x00000200001497c8 : add cl, ch ; jb 0x2000014979a ; add byte ptr [rax], al ; ret
0x00000200001498c8 : add cl, ch ; jb 0x20000149899 ; add byte ptr [rax], al ; ret
0x00000200001499c8 : add cl, ch ; jb 0x20000149998 ; add byte ptr [rax], al ; ret
0x0000020000149ac8 : add cl, ch ; jb 0x20000149a97 ; add byte ptr [rax], al ; ret
0x0000020000149bc8 : add cl, ch ; jb 0x20000149b96 ; add byte ptr [rax], al ; ret
0x0000020000149cc8 : add cl, ch ; jb 0x20000149c95 ; add byte ptr [rax], al ; ret
0x0000020000149dc8 : add cl, ch ; jb 0x20000149d94 ; add byte ptr [rax], al ; ret
0x0000020000149ec8 : add cl, ch ; jb 0x20000149e93 ; add byte ptr [rax], al ; ret
0x0000020000149fc8 : add cl, ch ; jb 0x20000149f92 ; add byte ptr [rax], al ; ret
0x000002000014a0c8 : add cl, ch ; jb 0x2000014a091 ; add byte ptr [rax], al ; ret
0x000002000014a1c8 : add cl, ch ; jb 0x2000014a190 ; add byte ptr [rax], al ; ret
0x000002000014a2c8 : add cl, ch ; jb 0x2000014a28f ; add byte ptr [rax], al ; ret
0x000002000014a3c8 : add cl, ch ; jb 0x2000014a38e ; add byte ptr [rax], al ; ret
0x000002000014a4c8 : add cl, ch ; jb 0x2000014a48d ; add byte ptr [rax], al ; ret
0x000002000014a5c8 : add cl, ch ; jb 0x2000014a58c ; add byte ptr [rax], al ; ret
0x000002000014a6c8 : add cl, ch ; jb 0x2000014a68b ; add byte ptr [rax], al ; ret
0x000002000014a7c8 : add cl, ch ; jb 0x2000014a78a ; add byte ptr [rax], al ; ret
0x000002000014a8c8 : add cl, ch ; jb 0x2000014a889 ; add byte ptr [rax], al ; ret
0x000002000014a9c8 : add cl, ch ; jb 0x2000014a988 ; add byte ptr [rax], al ; ret
0x000002000014aac8 : add cl, ch ; jb 0x2000014aa87 ; add byte ptr [rax], al ; ret
0x000002000014abc8 : add cl, ch ; jb 0x2000014ab86 ; add byte ptr [rax], al ; ret
0x000002000014acc8 : add cl, ch ; jb 0x2000014ac85 ; add byte ptr [rax], al ; ret
0x000002000014adc8 : add cl, ch ; jb 0x2000014ad84 ; add byte ptr [rax], al ; ret
0x000002000014aec8 : add cl, ch ; jb 0x2000014ae83 ; add byte ptr [rax], al ; ret
0x000002000014afc8 : add cl, ch ; jb 0x2000014af82 ; add byte ptr [rax], al ; ret
0x000002000014b0c8 : add cl, ch ; jb 0x2000014b081 ; add byte ptr [rax], al ; ret
0x000002000014b1c8 : add cl, ch ; jb 0x2000014b180 ; add byte ptr [rax], al ; ret
0x000002000014b2c8 : add cl, ch ; jb 0x2000014b27f ; add byte ptr [rax], al ; ret
0x000002000014b3c8 : add cl, ch ; jb 0x2000014b37e ; add byte ptr [rax], al ; ret
0x000002000014b4c8 : add cl, ch ; jb 0x2000014b47d ; add byte ptr [rax], al ; ret
0x000002000014b5c8 : add cl, ch ; jb 0x2000014b57c ; add byte ptr [rax], al ; ret
0x000002000014b6c8 : add cl, ch ; jb 0x2000014b67b ; add byte ptr [rax], al ; ret
0x000002000019887d : add cl, ch ; jg 0x2000019887b ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000195737 : add cl, ch ; jno 0x20000195747 ; int1 ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000195825 : add cl, ch ; jo 0x20000195835 ; int1 ; dec dword ptr [rcx - 0x75] ; ret 0x48f0
0x0000020000196324 : add cl, ch ; jo 0x2000019634e ; int1 ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000149648 : add cl, ch ; leave ; add byte ptr [rax], al ; ret
0x000002000014b348 : add cl, ch ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000014b248 : add cl, ch ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000019a541 : add cl, ch ; loop 0x2000019a524 ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000188791 : add cl, ch ; mov bh, byte ptr [rdx - 0x12] ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000149948 : add cl, ch ; mov byte ptr [rax], 0 ; ret
0x000002000014b688 : add cl, ch ; mov dl, 0xa9 ; add byte ptr [rax], al ; ret
0x000002000014b588 : add cl, ch ; mov dl, 0xaa ; add byte ptr [rax], al ; ret
0x000002000014b488 : add cl, ch ; mov dl, 0xab ; add byte ptr [rax], al ; ret
0x000002000014b388 : add cl, ch ; mov dl, 0xac ; add byte ptr [rax], al ; ret
0x000002000014b288 : add cl, ch ; mov dl, 0xad ; add byte ptr [rax], al ; ret
0x000002000014b188 : add cl, ch ; mov dl, 0xae ; add byte ptr [rax], al ; ret
0x000002000014b088 : add cl, ch ; mov dl, 0xaf ; add byte ptr [rax], al ; ret
0x000002000014af88 : add cl, ch ; mov dl, 0xb0 ; add byte ptr [rax], al ; ret
0x000002000014ae88 : add cl, ch ; mov dl, 0xb1 ; add byte ptr [rax], al ; ret
0x000002000014ad88 : add cl, ch ; mov dl, 0xb2 ; add byte ptr [rax], al ; ret
0x000002000014ac88 : add cl, ch ; mov dl, 0xb3 ; add byte ptr [rax], al ; ret
0x000002000014ab88 : add cl, ch ; mov dl, 0xb4 ; add byte ptr [rax], al ; ret
0x000002000014aa88 : add cl, ch ; mov dl, 0xb5 ; add byte ptr [rax], al ; ret
0x000002000014a988 : add cl, ch ; mov dl, 0xb6 ; add byte ptr [rax], al ; ret
0x000002000014a888 : add cl, ch ; mov dl, 0xb7 ; add byte ptr [rax], al ; ret
0x000002000014a788 : add cl, ch ; mov dl, 0xb8 ; add byte ptr [rax], al ; ret
0x000002000014a688 : add cl, ch ; mov dl, 0xb9 ; add byte ptr [rax], al ; ret
0x000002000014a588 : add cl, ch ; mov dl, 0xba ; add byte ptr [rax], al ; ret
0x000002000014a488 : add cl, ch ; mov dl, 0xbb ; add byte ptr [rax], al ; ret
0x000002000014a388 : add cl, ch ; mov dl, 0xbc ; add byte ptr [rax], al ; ret
0x000002000014a288 : add cl, ch ; mov dl, 0xbd ; add byte ptr [rax], al ; ret
0x000002000014a188 : add cl, ch ; mov dl, 0xbe ; add byte ptr [rax], al ; ret
0x000002000014a088 : add cl, ch ; mov dl, 0xbf ; add byte ptr [rax], al ; ret
0x0000020000149f88 : add cl, ch ; mov dl, 0xc0 ; add byte ptr [rax], al ; ret
0x0000020000149e88 : add cl, ch ; mov dl, 0xc1 ; add byte ptr [rax], al ; ret
0x0000020000149d88 : add cl, ch ; mov dl, 0xc2 ; add byte ptr [rax], al ; ret
0x0000020000149c88 : add cl, ch ; mov dl, 0xc3 ; add byte ptr [rax], al ; ret
0x0000020000149b88 : add cl, ch ; mov dl, 0xc4 ; add byte ptr [rax], al ; ret
0x0000020000149a88 : add cl, ch ; mov dl, 0xc5 ; add byte ptr [rax], al ; ret
0x0000020000149988 : add cl, ch ; mov dl, 0xc6 ; add byte ptr [rax], al ; ret
0x0000020000149888 : add cl, ch ; mov dl, 0xc7 ; add byte ptr [rax], al ; ret
0x0000020000149788 : add cl, ch ; mov dl, 0xc8 ; add byte ptr [rax], al ; ret
0x0000020000149688 : add cl, ch ; mov dl, 0xc9 ; add byte ptr [rax], al ; ret
0x0000020000149588 : add cl, ch ; mov dl, 0xca ; add byte ptr [rax], al ; ret
0x0000020000149488 : add cl, ch ; mov dl, 0xcb ; add byte ptr [rax], al ; ret
0x0000020000149388 : add cl, ch ; mov dl, 0xcc ; add byte ptr [rax], al ; ret
0x0000020000149288 : add cl, ch ; mov dl, 0xcd ; add byte ptr [rax], al ; ret
0x0000020000149188 : add cl, ch ; mov dl, 0xce ; add byte ptr [rax], al ; ret
0x0000020000149088 : add cl, ch ; mov dl, 0xcf ; add byte ptr [rax], al ; ret
0x0000020000148f88 : add cl, ch ; mov dl, 0xd0 ; add byte ptr [rax], al ; ret
0x0000020000148e88 : add cl, ch ; mov dl, 0xd1 ; add byte ptr [rax], al ; ret
0x0000020000148d88 : add cl, ch ; mov dl, 0xd2 ; add byte ptr [rax], al ; ret
0x0000020000148c88 : add cl, ch ; mov dl, 0xd3 ; add byte ptr [rax], al ; ret
0x0000020000148b88 : add cl, ch ; mov dl, 0xd4 ; add byte ptr [rax], al ; ret
0x0000020000148a88 : add cl, ch ; mov dl, 0xd5 ; add byte ptr [rax], al ; ret
0x0000020000148988 : add cl, ch ; mov dl, 0xd6 ; add byte ptr [rax], al ; ret
0x0000020000148888 : add cl, ch ; mov dl, 0xd7 ; add byte ptr [rax], al ; ret
0x0000020000148788 : add cl, ch ; mov dl, 0xd8 ; add byte ptr [rax], al ; ret
0x0000020000148688 : add cl, ch ; mov dl, 0xd9 ; add byte ptr [rax], al ; ret
0x0000020000148588 : add cl, ch ; mov dl, 0xda ; add byte ptr [rax], al ; ret
0x0000020000148488 : add cl, ch ; mov dl, 0xdb ; add byte ptr [rax], al ; ret
0x0000020000148388 : add cl, ch ; mov dl, 0xdc ; add byte ptr [rax], al ; ret
0x0000020000148288 : add cl, ch ; mov dl, 0xdd ; add byte ptr [rax], al ; ret
0x0000020000148188 : add cl, ch ; mov dl, 0xde ; add byte ptr [rax], al ; ret
0x0000020000148088 : add cl, ch ; mov dl, 0xdf ; add byte ptr [rax], al ; ret
0x0000020000147f88 : add cl, ch ; mov dl, 0xe0 ; add byte ptr [rax], al ; ret
0x000002000005d9d3 : add cl, ch ; mov eax, 0x8b000000 ; ret
0x00000200000aed6b : add cl, ch ; mov ebp, 0xf6fffff2 ; ret 0xf04
0x00000200000965e0 : add cl, ch ; mov ebx, 0x80fffff8 ; jp 0x200000965f3 ; ret
0x000002000020fa45 : add cl, ch ; mov ebx, 0xb000001 ; sal dh, 1 ; ret 0x753f
0x00000200001a972c : add cl, ch ; mov spl, r14b ; inc dword ptr [rbp - 0x75] ; ret
0x00000200005d8d0d : add cl, ch ; out dx, al ; ret 0xffee
0x000002000046c7fd : add cl, ch ; pop rbp ; idiv bh ; push rsi ; ret
0x00000200001496e8 : add cl, ch ; push rdx ; leave ; add byte ptr [rax], al ; ret
0x000002000014b3e8 : add cl, ch ; push rdx ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000014b2e8 : add cl, ch ; push rdx ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000200001499e8 : add cl, ch ; push rdx ; mov byte ptr [rax], 0 ; ret
0x0000020000149ce8 : add cl, ch ; push rdx ; ret
0x0000020000149de8 : add cl, ch ; push rdx ; ret 0
0x0000020000149fe8 : add cl, ch ; push rdx ; rol byte ptr [rax], 0 ; ret
0x0000020000149ee8 : add cl, ch ; push rdx ; rol dword ptr [rax], 0 ; ret
0x00000200001489e8 : add cl, ch ; push rdx ; salc ; add byte ptr [rax], al ; ret
0x000002000014b1e8 : add cl, ch ; push rdx ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b0e8 : add cl, ch ; push rdx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b5e8 : add cl, ch ; push rdx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000002000014b4e8 : add cl, ch ; push rdx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x00000200001488e8 : add cl, ch ; push rdx ; xlatb ; add byte ptr [rax], al ; ret
0x000002000047f717 : add cl, ch ; pushfq ; adc eax, dword ptr [rax] ; add dh, dh ; ret 0x7401
0x0000020000199b9b : add cl, ch ; pushfq ; mov ah, 0xf1 ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000148b68 : add cl, ch ; rcl ah, cl ; add byte ptr [rax], al ; ret
0x0000020000148f68 : add cl, ch ; rcl al, cl ; add byte ptr [rax], al ; ret
0x0000020000148868 : add cl, ch ; rcl bh, cl ; add byte ptr [rax], al ; ret
0x0000020000148c68 : add cl, ch ; rcl bl, cl ; add byte ptr [rax], al ; ret
0x0000020000148a68 : add cl, ch ; rcl ch, cl ; add byte ptr [rax], al ; ret
0x0000020000148e68 : add cl, ch ; rcl cl, cl ; add byte ptr [rax], al ; ret
0x0000020000148968 : add cl, ch ; rcl dh, cl ; add byte ptr [rax], al ; ret
0x0000020000148d68 : add cl, ch ; rcl dl, cl ; add byte ptr [rax], al ; ret
0x0000020000148368 : add cl, ch ; rcr ah, cl ; add byte ptr [rax], al ; ret
0x0000020000148768 : add cl, ch ; rcr al, cl ; add byte ptr [rax], al ; ret
0x0000020000148068 : add cl, ch ; rcr bh, cl ; add byte ptr [rax], al ; ret
0x0000020000148468 : add cl, ch ; rcr bl, cl ; add byte ptr [rax], al ; ret
0x000002000019669a : add cl, ch ; rcr byte ptr [rdi], cl ; int1 ; dec dword ptr [rax - 0x39] ; ret
0x0000020000148268 : add cl, ch ; rcr ch, cl ; add byte ptr [rax], al ; ret
0x0000020000148668 : add cl, ch ; rcr cl, cl ; add byte ptr [rax], al ; ret
0x0000020000148168 : add cl, ch ; rcr dh, cl ; add byte ptr [rax], al ; ret
0x0000020000148568 : add cl, ch ; rcr dl, cl ; add byte ptr [rax], al ; ret
0x000002000014b148 : add cl, ch ; repne scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b048 : add cl, ch ; repne scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b548 : add cl, ch ; repne stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000002000014b448 : add cl, ch ; repne stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x0000020000028a04 : add cl, ch ; ret
0x00000200000fe8be : add cl, ch ; ret 0
0x00000200005a8cc4 : add cl, ch ; ret 0xe97e
0x00000200001601b2 : add cl, ch ; ret 0xea47
0x00000200005c98c9 : add cl, ch ; ret 0xebb3
0x000002000015e79b : add cl, ch ; ret 0xee45
0x00000200005139f0 : add cl, ch ; ret 0xf34d
0x00000200000e6dac : add cl, ch ; ret 0xfff7
0x000002000055c939 : add cl, ch ; ret 0xfffd
0x0000020000012c70 : add cl, ch ; ret 0xfffe
0x000002000007bf84 : add cl, ch ; ret 1
0x0000020000149b68 : add cl, ch ; rol ah, cl ; add byte ptr [rax], al ; ret
0x0000020000149f68 : add cl, ch ; rol al, cl ; add byte ptr [rax], al ; ret
0x0000020000149868 : add cl, ch ; rol bh, cl ; add byte ptr [rax], al ; ret
0x0000020000149c68 : add cl, ch ; rol bl, cl ; add byte ptr [rax], al ; ret
0x0000020000149f48 : add cl, ch ; rol byte ptr [rax], 0 ; ret
0x0000020000149a68 : add cl, ch ; rol ch, cl ; add byte ptr [rax], al ; ret
0x0000020000149e68 : add cl, ch ; rol cl, cl ; add byte ptr [rax], al ; ret
0x0000020000149968 : add cl, ch ; rol dh, cl ; add byte ptr [rax], al ; ret
0x0000020000149d68 : add cl, ch ; rol dl, cl ; add byte ptr [rax], al ; ret
0x0000020000149e48 : add cl, ch ; rol dword ptr [rax], 0 ; ret
0x0000020000149368 : add cl, ch ; ror ah, cl ; add byte ptr [rax], al ; ret
0x0000020000149768 : add cl, ch ; ror al, cl ; add byte ptr [rax], al ; ret
0x0000020000149068 : add cl, ch ; ror bh, cl ; add byte ptr [rax], al ; ret
0x0000020000149468 : add cl, ch ; ror bl, cl ; add byte ptr [rax], al ; ret
0x0000020000149268 : add cl, ch ; ror ch, cl ; add byte ptr [rax], al ; ret
0x0000020000149668 : add cl, ch ; ror cl, cl ; add byte ptr [rax], al ; ret
0x0000020000149168 : add cl, ch ; ror dh, cl ; add byte ptr [rax], al ; ret
0x0000020000149568 : add cl, ch ; ror dl, cl ; add byte ptr [rax], al ; ret
0x00000200005ec217 : add cl, ch ; ror edi, -0xf ; push rsi ; ret 0x7420
0x0000020000148948 : add cl, ch ; salc ; add byte ptr [rax], al ; ret
0x000002000015e775 : add cl, ch ; sbb byte ptr [rsi - 0x12], al ; push rsi ; ret 0x7403
0x00000200001979c7 : add cl, ch ; sbb dword ptr [rdi - 0xf], edx ; dec dword ptr [rax - 0x75] ; ret
0x00000200005d9150 : add cl, ch ; scasd eax, dword ptr [rdi] ; ret
0x0000020000147f68 : add cl, ch ; shl al, cl ; add byte ptr [rax], al ; ret
0x00000200001969e3 : add cl, ch ; stc ; and eax, 0x8b48fff1 ; ret 0xc148
0x00000200005d8d00 : add cl, ch ; sti ; ret 0xffee
0x00000200005d913f : add cl, ch ; wait ; ret
0x000002000018189a : add cl, ch ; xchg eax, ebx ; adc eax, 0x348ffed ; ret 0x2bb
0x00000200001fc297 : add cl, ch ; xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret
0x00000200001496a8 : add cl, ch ; xchg eax, edx ; leave ; add byte ptr [rax], al ; ret
0x000002000014b3a8 : add cl, ch ; xchg eax, edx ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000014b2a8 : add cl, ch ; xchg eax, edx ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000200001499a8 : add cl, ch ; xchg eax, edx ; mov byte ptr [rax], 0 ; ret
0x0000020000149ca8 : add cl, ch ; xchg eax, edx ; ret
0x0000020000149da8 : add cl, ch ; xchg eax, edx ; ret 0
0x0000020000149fa8 : add cl, ch ; xchg eax, edx ; rol byte ptr [rax], 0 ; ret
0x0000020000149ea8 : add cl, ch ; xchg eax, edx ; rol dword ptr [rax], 0 ; ret
0x00000200001489a8 : add cl, ch ; xchg eax, edx ; salc ; add byte ptr [rax], al ; ret
0x000002000014b1a8 : add cl, ch ; xchg eax, edx ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b0a8 : add cl, ch ; xchg eax, edx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b5a8 : add cl, ch ; xchg eax, edx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000002000014b4a8 : add cl, ch ; xchg eax, edx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x00000200001488a8 : add cl, ch ; xchg eax, edx ; xlatb ; add byte ptr [rax], al ; ret
0x0000020000189c22 : add cl, ch ; xchg eax, esp ; ret 0xffee
0x0000020000148848 : add cl, ch ; xlatb ; add byte ptr [rax], al ; ret
0x0000020000148008 : add cl, ch ; xor ah, al ; add byte ptr [rax], al ; ret
0x0000020000147f08 : add cl, ch ; xor ah, cl ; add byte ptr [rax], al ; ret
0x0000020000149c08 : add cl, ch ; xor al, ah ; add byte ptr [rax], al ; ret
0x000002000014a008 : add cl, ch ; xor al, al ; add byte ptr [rax], al ; ret
0x0000020000149908 : add cl, ch ; xor al, bh ; add byte ptr [rax], al ; ret
0x0000020000149d08 : add cl, ch ; xor al, bl ; add byte ptr [rax], al ; ret
0x0000020000149b08 : add cl, ch ; xor al, ch ; add byte ptr [rax], al ; ret
0x0000020000149f08 : add cl, ch ; xor al, cl ; add byte ptr [rax], al ; ret
0x0000020000149a08 : add cl, ch ; xor al, dh ; add byte ptr [rax], al ; ret
0x0000020000149e08 : add cl, ch ; xor al, dl ; add byte ptr [rax], al ; ret
0x0000020000148408 : add cl, ch ; xor bl, ah ; add byte ptr [rax], al ; ret
0x0000020000148808 : add cl, ch ; xor bl, al ; add byte ptr [rax], al ; ret
0x0000020000148108 : add cl, ch ; xor bl, bh ; add byte ptr [rax], al ; ret
0x0000020000148508 : add cl, ch ; xor bl, bl ; add byte ptr [rax], al ; ret
0x0000020000148308 : add cl, ch ; xor bl, ch ; add byte ptr [rax], al ; ret
0x0000020000148708 : add cl, ch ; xor bl, cl ; add byte ptr [rax], al ; ret
0x0000020000148208 : add cl, ch ; xor bl, dh ; add byte ptr [rax], al ; ret
0x0000020000148608 : add cl, ch ; xor bl, dl ; add byte ptr [rax], al ; ret
0x0000020000149408 : add cl, ch ; xor cl, ah ; add byte ptr [rax], al ; ret
0x0000020000149808 : add cl, ch ; xor cl, al ; add byte ptr [rax], al ; ret
0x0000020000149108 : add cl, ch ; xor cl, bh ; add byte ptr [rax], al ; ret
0x0000020000149508 : add cl, ch ; xor cl, bl ; add byte ptr [rax], al ; ret
0x0000020000149308 : add cl, ch ; xor cl, ch ; add byte ptr [rax], al ; ret
0x0000020000149708 : add cl, ch ; xor cl, cl ; add byte ptr [rax], al ; ret
0x0000020000149208 : add cl, ch ; xor cl, dh ; add byte ptr [rax], al ; ret
0x0000020000149608 : add cl, ch ; xor cl, dl ; add byte ptr [rax], al ; ret
0x0000020000148c08 : add cl, ch ; xor dl, ah ; add byte ptr [rax], al ; ret
0x0000020000149008 : add cl, ch ; xor dl, al ; add byte ptr [rax], al ; ret
0x0000020000148908 : add cl, ch ; xor dl, bh ; add byte ptr [rax], al ; ret
0x0000020000148d08 : add cl, ch ; xor dl, bl ; add byte ptr [rax], al ; ret
0x0000020000148b08 : add cl, ch ; xor dl, ch ; add byte ptr [rax], al ; ret
0x0000020000148f08 : add cl, ch ; xor dl, cl ; add byte ptr [rax], al ; ret
0x0000020000148a08 : add cl, ch ; xor dl, dh ; add byte ptr [rax], al ; ret
0x0000020000148e08 : add cl, ch ; xor dl, dl ; add byte ptr [rax], al ; ret
0x0000020000672245 : add cl, cl ; dec dword ptr [rcx - 0x7cb797b5] ; ret
0x0000020000688316 : add cx, r9w ; movzx eax, cx ; ret
0x00000200007268a0 : add dh, al ; add eax, 0xffbfe8a8 ; add byte ptr [rbx], ah ; ret 0xc23b
0x00000200001e3bae : add dh, al ; and al, 0x40 ; adc esi, esi ; ret
0x0000020000144059 : add dh, al ; ret
0x000002000008f3f0 : add dh, al ; sbb dword ptr [rax], 0x3f000003 ; ret
0x00000200000f0576 : add dh, al ; sub al, byte ptr [rax] ; ret
0x000002000007bb29 : add dh, al ; xor byte ptr [r9], al ; ret
0x000002000021c46f : add dh, bh ; ret
0x00000200000953b7 : add dh, bh ; ret 0x5788
0x000002000069028e : add dh, bl ; movq qword ptr [rax + 8], mm0 ; ret
0x000002000007ce80 : add dh, byte ptr [rax - 0x15] ; ret
0x000002000009dc58 : add dh, byte ptr [rbp + 0x14] ; or eax, 0x18 ; ret
0x000002000008a9c4 : add dh, byte ptr [rbp + 0xa] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000853a0 : add dh, byte ptr [rbp + 0xe] ; mov byte ptr [rip + 0x29cc9a], dl ; ret
0x000002000009a73d : add dh, byte ptr [rbp + 1] ; ret
0x000002000005f375 : add dh, byte ptr [rbp + 3] ; xor al, al ; ret
0x000002000040325e : add dh, byte ptr [rbp + 3] ; xor eax, eax ; ret
0x00000200001bc1ef : add dh, byte ptr [rbp + 6] ; mov eax, 0xc0000001 ; ret
0x00000200001bc20b : add dh, byte ptr [rbp + 6] ; mov eax, 0xc0000022 ; ret
0x0000020000716d6a : add dh, byte ptr [rbp + 6] ; mov eax, 1 ; ret
0x0000020000074293 : add dh, byte ptr [rbp + 6] ; mov rax, qword ptr [r8 + rcx + 0x2f] ; ret
0x00000200000b8987 : add dh, byte ptr [rbp + rax + 0x48] ; bts dword ptr [rcx], 0xc ; ret
0x0000020000043962 : add dh, byte ptr [rbp + rax + 0x48] ; mov eax, dword ptr [rcx + 0x28] ; ret
0x00000200007d26f2 : add dh, byte ptr [rbp - 0x13] ; xor eax, eax ; ret
0x000002000002d984 : add dh, byte ptr [rbp - 0x1f] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003e158 : add dh, byte ptr [rbp - 0x29] ; mov eax, r8d ; ret
0x00000200006cddde : add dh, byte ptr [rbp - 0x38] ; ret
0x000002000008eee3 : add dh, byte ptr [rbx + 1] ; ret
0x000002000023a081 : add dh, byte ptr [rbx + 3] ; xor eax, eax ; ret
0x0000020000098fa6 : add dh, byte ptr [rbx + 4] ; mov qword ptr [r8], rax ; ret
0x00000200000878d8 : add dh, byte ptr [rbx + rax - 0x75] ; ret 0x41c3
0x000002000014b9fe : add dh, byte ptr [rbx + rax - 0x7d] ; enter 0x6602, -9 ; ret 0x100
0x00000200004c16fa : add dh, byte ptr [rbx + rcx*2 + 0x49] ; mov ecx, esi ; call 0x200000e8069
0x00000200000bb8c8 : add dh, byte ptr [rbx + rdx*2 + 0xf] ; mov dh, 0x43 ; and esi, dword ptr [rdx] ; ret 0x724
0x00000200001eb117 : add dh, byte ptr [rbx] ; leave ; lea rax, qword ptr [rcx + rdx] ; ret
0x000002000070a83d : add dh, byte ptr [rbx] ; leave ; mov rax, rcx ; ret
0x00000200001b5bc8 : add dh, byte ptr [rbx] ; ret
0x00000200005c0952 : add dh, byte ptr [rbx] ; ret 0x8941
0x0000020000127de8 : add dh, byte ptr [rbx] ; rol byte ptr [rcx - 0x75], 1 ; ret
0x000002000022a6b9 : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000017daca : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret 0x8b49
0x00000200006bd326 : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000020000435773 : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x0000020000646bd4 : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c28
0x000002000001f65b : add dh, byte ptr [rdi + rax*8 - 0x17] ; ret
0x00000200001d021e : add dh, byte ptr [rdx + 0x48c28a01] ; add esp, 0x28 ; ret
0x000002000013271b : add dh, byte ptr [rdx + 3] ; mov al, 1 ; ret
0x0000020000627a46 : add dh, byte ptr [rdx + 6] ; mov eax, 0xc0000189 ; ret
0x00000200003e9a66 : add dh, byte ptr [rdx + rax - 0x75] ; ret 0x8545
0x00000200004e7cb4 : add dh, byte ptr [rdx - 0x10] ; xor eax, eax ; ret
0x0000020000120b2e : add dh, byte ptr [rdx - 0x13] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000010e97e : add dh, byte ptr [rdx - 0x15] ; ret
0x00000200004048ba : add dh, byte ptr [rdx - 0x25] ; mov al, dl ; ret
0x0000020000049227 : add dh, byte ptr [rdx - 0x29] ; or eax, 0xffffffff ; ret
0x00000200000987f2 : add dh, byte ptr [rdx - 6] ; mov eax, 2 ; ret
0x00000200004a75b0 : add dh, byte ptr [rdx] ; ret
0x00000200006b4612 : add dh, byte ptr [rsi + rax - 0x48] ; add al, byte ptr [rax] ; add al, al ; ret
0x00000200000f0cea : add dh, byte ptr [rsi + rax - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000060dafa : add dh, ch ; ret
0x000002000051958a : add dh, ch ; ret 0x4cff
0x00000200001b3039 : add dh, dh ; fcomp dword ptr [rbx] ; sal bh, 0xd8 ; inc eax ; ret
0x00000200000037f4 : add dh, dh ; ret
0x000002000047bf03 : add dh, dh ; ret 0x4002
0x0000020000554b73 : add dh, dh ; ret 0x413f
0x00000200001a26f7 : add dh, dh ; ret 0x4402
0x0000020000150f25 : add dh, dh ; ret 0x7401
0x00000200001d3fc3 : add dh, dh ; ret 0x7402
0x00000200005baff6 : add dh, dh ; ret 0x7403
0x0000020000478792 : add dh, dh ; ret 0x7404
0x00000200000a4b4c : add dh, dh ; ret 0x740f
0x000002000066a554 : add dh, dh ; ret 0x7410
0x00000200004a7511 : add dh, dh ; ret 0x7420
0x0000020000637695 : add dh, dh ; ret 0x7440
0x000002000000c360 : add dh, dh ; ret 0x7501
0x000002000002824a : add dh, dh ; ret 0x7502
0x000002000004285d : add dh, dh ; ret 0x7503
0x00000200000f8bb3 : add dh, dh ; ret 0x7504
0x00000200007157ac : add dh, dh ; ret 0x7508
0x00000200001a22b9 : add dh, dh ; ret 0x750c
0x00000200003f3510 : add dh, dh ; ret 0x7510
0x00000200004c0f14 : add dh, dh ; ret 0xc601
0x00000200000055ce : add dh, dh ; ret 0xf01
0x0000020000011598 : add dh, dh ; ret 0xf02
0x00000200003e2e8c : add dh, dh ; ret 0xf03
0x00000200000a70c4 : add dh, dh ; ret 0xf04
0x000002000005605d : add dh, dh ; ret 0xf07
0x0000020000056661 : add dh, dh ; ret 0xf08
0x0000020000075505 : add dh, dh ; ret 0xf0f
0x00000200000df9d0 : add dh, dh ; ret 0xf10
0x00000200000b02d6 : add dh, dh ; ret 0xf1e
0x00000200005bde98 : add dh, dh ; ret 0xf20
0x00000200003df96e : add dh, dh ; ret 0xf30
0x000002000011fe0d : add dh, dh ; ret 0xf3f
0x00000200000def6a : add dh, dh ; ret 0xf40
0x0000020000078285 : add dh, dh ; ret 0xf91
0x000002000007c772 : add dh, dh ; rol dword ptr [rbx], 0x48 ; cmove eax, ecx ; ret
0x000002000001dce3 : add dh, dh ; rol dword ptr [rdx], 0xf ; xchg eax, ebp ; ret 0xc3f6
0x000002000043c1f3 : add dh, dh ; shl byte ptr [rcx + rax], 1 ; ret
0x000002000009cea0 : add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200004e448f : add dh, dh ; shl dword ptr [rax], 0xf ; test dword ptr [rax], ebp ; ret 0xf
0x00000200005ed4ae : add dh, dl ; push rsi ; ret 0x7401
0x0000020000479053 : add dil, dil ; ret 0x348
0x00000200000fc997 : add dil, dil ; ret 0x349
0x00000200005bfaae : add dil, r15b ; ret
0x00000200006945fb : add dil, r15b ; ret 0x8b4c
0x00000200006ade0c : add dl, al ; jmp 0x200006ade10
0x000002000014f004 : add dl, bh ; add rsp, 8 ; ret
0x000002000071c1b3 : add dl, byte ptr [rcx + 0x48c033ff] ; add esp, 0x28 ; ret
0x00000200001c5047 : add dl, byte ptr [rsi] ; add byte ptr [rdx], al ; setne al ; ret
0x000002000072c2df : add dl, cl ; jmp 0x1ffc37b4c2d
0x00000200004cd5bf : add dl, cl ; ret
0x00000200006409c9 : add dl, dh ; movups xmmword ptr [rax], xmm0 ; xor eax, eax ; ret
0x00000200007e130f : add dl, dl ; adc edi, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7e13
0x00000200000d23b6 : add dl, dl ; loopne 0x200000d234c ; xor r14b, r14b ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000019292a : add dl, dl ; loopne 0x200001928c0 ; push r14 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200004cd5be : add dl, r9b ; ret
0x000002000002de89 : add dword ptr [0x2e70], ecx ; ret
0x000002000002106c : add dword ptr [0x5e38], eax ; call 0x2000006d289
0x000002000052206a : add dword ptr [eax], eax ; add byte ptr [rax], al ; call 0x20000147f78
0x0000020000522069 : add dword ptr [eax], eax ; add byte ptr [rax], al ; call 0x20000147f79
0x000002000014ab85 : add dword ptr [eax], eax ; add cl, ch ; mov dl, 0xb4 ; add byte ptr [rax], al ; ret
0x000002000022a5b1 : add dword ptr [r10 + 0x14], edx ; xor eax, eax ; ret
0x0000020000793dad : add dword ptr [r10], r13d ; ret
0x000002000069901e : add dword ptr [r11], ebp ; ret 0x8b44
0x00000200007a849e : add dword ptr [r11], edi ; ret
0x000002000010a184 : add dword ptr [r11], edi ; ret 0xdf75
0x000002000010a10b : add dword ptr [r11], edi ; ret 0xe775
0x0000020000503379 : add dword ptr [r11], r13d ; ret
0x00000200000c0161 : add dword ptr [r11], r15d ; ret
0x00000200001ee395 : add dword ptr [r13 + 0x3b], r9d ; ret 0xf4d
0x000002000008192e : add dword ptr [r13 + 0x88504], ecx ; add byte ptr [rax], al ; ret
0x000002000009e2fb : add dword ptr [r13 + 3], esi ; xor eax, eax ; ret
0x0000020000478983 : add dword ptr [r8 + 0x3b], ecx ; ret 0x4773
0x0000020000140284 : add dword ptr [r8 + 0x3b], ecx ; ret 0xa76
0x000002000024aea1 : add dword ptr [r8 + 0xb], r9d ; ret 0x8b48
0x00000200006c9bf9 : add dword ptr [r8 + 3], ecx ; ret 0x3b4c
0x00000200000231b2 : add dword ptr [r8 + 3], r9d ; ror byte ptr [rax - 0x77], 0xc ; ret
0x000002000021456b : add dword ptr [r8 + r9 + 0x48], r14d ; inc edi ; inc rdx ; jmp 0x200002145ad
0x0000020000555f19 : add dword ptr [r8 - 0x75], ecx ; ret 0x8d48
0x0000020000125ea0 : add dword ptr [r8 - 0x7d], ecx ; ret
0x0000020000047b28 : add dword ptr [r8], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000014a6c5 : add dword ptr [r8], eax ; add cl, ch ; jb 0x2000014a68e ; add byte ptr [rax], al ; ret
0x00000200000bf634 : add dword ptr [r8], eax ; jne 0x200000bf64a ; xor al, al ; ret
0x000002000042c0cc : add dword ptr [r8], r8d ; add byte ptr [rax - 0x75], cl ; ret
0x000002000014a785 : add dword ptr [r8], r8d ; add cl, ch ; mov dl, 0xb8 ; add byte ptr [rax], al ; ret
0x000002000010a339 : add dword ptr [r9 + 0x3b], eax ; ret 0xdf75
0x000002000010a2a9 : add dword ptr [r9 + 0x3b], eax ; ret 0xe775
0x00000200004f0969 : add dword ptr [r9 + 0x3b], ecx ; ret
0x000002000016dea8 : add dword ptr [r9 + 0x6e], r8d ; ret
0x00000200000269d3 : add dword ptr [r9 + 3], ecx ; ret
0x00000200003eb584 : add dword ptr [r9 - 0x77], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4938
0x00000200003fd303 : add dword ptr [r9 - 0x77], eax ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200004250a2 : add dword ptr [rax + 0x10], ecx ; add rsp, 0x28 ; ret
0x00000200000c46ab : add dword ptr [rax + 0x23], ecx ; ret
0x00000200001ebfed : add dword ptr [rax + 0x23], ecx ; ret 0x11b2
0x00000200000b43ce : add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x00000200001a30f5 : add dword ptr [rax + 0x23], ecx ; ret 0x3b48
0x00000200001ee2e0 : add dword ptr [rax + 0x23], ecx ; ret 0x8944
0x00000200001197be : add dword ptr [rax + 0x23], ecx ; ret 0xc149
0x00000200001eaaa5 : add dword ptr [rax + 0x23], ecx ; ret 0xccc3
0x00000200005835e2 : add dword ptr [rax + 0x2b], ecx ; ret 0x3b48
0x00000200001f75f3 : add dword ptr [rax + 0x2b], ecx ; ret 0x8348
0x00000200003e4c58 : add dword ptr [rax + 0x2b], ecx ; ret 0xd148
0x000002000053aec5 : add dword ptr [rax + 0x2b], ecx ; ror dword ptr [rax - 0x75], 1 ; sbb cl, byte ptr [rax - 0x7d] ; ret
0x00000200001401d3 : add dword ptr [rax + 0x2c64101], ecx ; cmp cl, byte ptr [rcx - 1] ; ret 0x854d
0x0000020000247035 : add dword ptr [rax + 0x33], ecx ; ret 0x8948
0x000002000078ed54 : add dword ptr [rax + 0x33], ecx ; ret 0xd233
0x00000200000c2a40 : add dword ptr [rax + 0x3b], ecx ; ret
0x00000200000b565e : add dword ptr [rax + 0x3b], ecx ; ret 0x1674
0x0000020000478984 : add dword ptr [rax + 0x3b], ecx ; ret 0x4773
0x0000020000008884 : add dword ptr [rax + 0x3b], ecx ; ret 0x5174
0x00000200006c4c8d : add dword ptr [rax + 0x3b], ecx ; ret 0x820f
0x000002000009921f : add dword ptr [rax + 0x3b], ecx ; ret 0x850f
0x0000020000140285 : add dword ptr [rax + 0x3b], ecx ; ret 0xa76
0x00000200001b2144 : add dword ptr [rax + 0x3b], ecx ; ret 0xb74
0x00000200007113f0 : add dword ptr [rax + 0x3b], ecx ; ret 0xf176
0x000002000011cf6e : add dword ptr [rax + 0x3b], ecx ; sal dword ptr [rdx + rcx + 0x48], 0x3b ; ret 0x1c74
0x000002000022e2a7 : add dword ptr [rax + 0x41], ecx ; mov byte ptr [rdx], 0x2e ; call r10
0x00000200000b1f1f : add dword ptr [rax + 0x48000000], 0x3b ; ret 0x860f
0x00000200005f2f47 : add dword ptr [rax + 0x63], ecx ; ret
0x000002000024f757 : add dword ptr [rax + 0x63], ecx ; ret 0x6948
0x00000200000a6562 : add dword ptr [rax + 0xb], ecx ; ret 0x8948
0x0000020000013a8d : add dword ptr [rax + 0xb], ecx ; ret 0x8949
0x000002000024aea2 : add dword ptr [rax + 0xb], ecx ; ret 0x8b48
0x00000200007c23db : add dword ptr [rax + 0xc], 0xb ; add rsp, 0x20 ; pop rbp ; ret
0x00000200007c2561 : add dword ptr [rax + 0xc], 0xc ; add rsp, 0x20 ; pop rbp ; ret
0x00000200007c26be : add dword ptr [rax + 0xc], 0xe ; add rsp, 0x20 ; pop rbp ; ret
0x00000200007c277c : add dword ptr [rax + 0xc], 0xf ; add rsp, 0x20 ; pop rbp ; ret
0x000002000019fe51 : add dword ptr [rax + 0xf], eax ; mov dh, 0xd5 ; call rax
0x000002000014e993 : add dword ptr [rax + 0xf], ecx ; ret
0x00000200004dec23 : add dword ptr [rax + 0xf], ecx ; ret 0x8548
0x00000200000d3b16 : add dword ptr [rax + 1], 0 ; add bh, bh ; ret 0x8b4c
0x0000020000550aa6 : add dword ptr [rax + 1], 0 ; add byte ptr [rbx], bh ; ret
0x00000200001f01d6 : add dword ptr [rax + 1], edi ; ret
0x0000020000063056 : add dword ptr [rax + 2], 0 ; add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x00000200006c9bfa : add dword ptr [rax + 3], ecx ; ret 0x3b4c
0x00000200003e4765 : add dword ptr [rax + 3], ecx ; rol dword ptr [rbx + 0x34803e3], cl ; ret 0x8b48
0x000002000061bf16 : add dword ptr [rax + 3], ecx ; ror byte ptr [rax + 0x3b], 0xc1 ; jb 0x2000061bf10 ; ret
0x00000200000231b3 : add dword ptr [rax + 3], ecx ; ror byte ptr [rax - 0x77], 0xc ; ret
0x00000200003c9bcf : add dword ptr [rax + 3], ecx ; ror dword ptr [rax - 0x75], 1 ; ret 0x2b48
0x00000200006c070c : add dword ptr [rax + rax*8 - 0x74b7288b], eax ; ret 0x8b4c
0x00000200006c1c11 : add dword ptr [rax + rax*8 - 0x74b72b8b], eax ; ret 0x8b4c
0x00000200006bed78 : add dword ptr [rax + rax*8 - 0x74b72e8b], eax ; ret 0x8b4c
0x000002000059d2dc : add dword ptr [rax + rbp - 0x7d], esi ; sal eax, -0x7d ; ret
0x000002000053eb5c : add dword ptr [rax + rbp*8 - 0xa], esi ; ret
0x00000200002410e1 : add dword ptr [rax + rbx*2 - 0x7d], esi ; stc ; add dword ptr [rdi + rax*2 - 0xa], esi ; ret
0x000002000021456c : add dword ptr [rax + rcx + 0x48], esi ; inc edi ; inc rdx ; jmp 0x200002145ac
0x000002000055c1d2 : add dword ptr [rax + rcx*4 + 0x42], eax ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4d04
0x0000020000568399 : add dword ptr [rax - 0x24367edb], eax ; jmp rax
0x0000020000628729 : add dword ptr [rax - 0x3fccfcbf], ecx ; ret
0x00000200000268e5 : add dword ptr [rax - 0x3fcd3cff], esi ; ret
0x00000200001579e0 : add dword ptr [rax - 0x3fffff45], edi ; ret
0x0000020000514a70 : add dword ptr [rax - 0x73], ecx ; ret
0x00000200000df6e2 : add dword ptr [rax - 0x73], ecx ; xor byte ptr [r11], cl ; ret 0x4123
0x000002000066986b : add dword ptr [rax - 0x74bbd3bf], ecx ; ret 0x2b44
0x0000020000114753 : add dword ptr [rax - 0x75], ecx ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000044792 : add dword ptr [rax - 0x75], ecx ; add eax, 0x364cf6 ; call rax
0x0000020000044735 : add dword ptr [rax - 0x75], ecx ; add eax, 0x364d53 ; call rax
0x00000200000379cf : add dword ptr [rax - 0x75], ecx ; add eax, 0x371ab9 ; call rax
0x0000020000037954 : add dword ptr [rax - 0x75], ecx ; add eax, 0x371b34 ; call rax
0x000002000058450b : add dword ptr [rax - 0x75], ecx ; add eax, 0xffd6ede5 ; call rax
0x00000200004e63f6 : add dword ptr [rax - 0x75], ecx ; add ecx, dword ptr [rax + 0x3b] ; ret
0x0000020000118eec : add dword ptr [rax - 0x75], ecx ; and al, 0x30 ; mov qword ptr [rax], r10 ; ret
0x000002000042ed79 : add dword ptr [rax - 0x75], ecx ; enter -0x2118, -0x17 ; ret
0x00000200000a1222 : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 0x20 ; pop rdi ; ret
0x00000200001b81ed : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov al, r10b ; ret
0x0000020000216956 : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov al, r8b ; ret
0x0000020000129e77 : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r11d ; ret
0x0000020000021708 : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; ret
0x000002000001c35a : add dword ptr [rax - 0x75], ecx ; ret
0x00000200001b3345 : add dword ptr [rax - 0x75], ecx ; ret 0x2b49
0x000002000005736e : add dword ptr [rax - 0x75], ecx ; ret 0x4808
0x000002000000ff45 : add dword ptr [rax - 0x75], ecx ; ret 0x49f0
0x00000200003cd54f : add dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x00000200000b41aa : add dword ptr [rax - 0x75], ecx ; ret 0x8b49
0x0000020000555f1a : add dword ptr [rax - 0x75], ecx ; ret 0x8d48
0x00000200005a94b4 : add dword ptr [rax - 0x75], ecx ; ret 0x950f
0x000002000023f057 : add dword ptr [rax - 0x75], ecx ; ret 0xc148
0x0000020000455dd0 : add dword ptr [rax - 0x75], ecx ; ret 0xf748
0x000002000048e8bc : add dword ptr [rax - 0x75], ecx ; retf ; call r15
0x00000200003f8eb8 : add dword ptr [rax - 0x75], ecx ; sbb al, 0x24 ; add rsp, 8 ; ret
0x0000020000487e74 : add dword ptr [rax - 0x75], ecx ; xor r8b, bpl ; ret 0xc5d4
0x000002000007b0e9 : add dword ptr [rax - 0x77], ecx ; add eax, 0x2a6d77 ; ret
0x000002000067976e : add dword ptr [rax - 0x77], ecx ; and byte ptr [r14 - 1], spl ; ret 0xb70f
0x000002000001196f : add dword ptr [rax - 0x77], ecx ; cmovns r8, qword ptr [r11] ; ret 0x894c
0x0000020000441ea7 : add dword ptr [rax - 0x77], ecx ; insb byte ptr [rdi], dx ; and al, 0x20 ; mov rcx, rsi ; call rdi
0x000002000066a16e : add dword ptr [rax - 0x77], ecx ; jl 0x2000066a19e ; sub byte ptr [rbx], dh ; ret 0x6c89
0x00000200001c5cac : add dword ptr [rax - 0x77], ecx ; or eax, 0x159ba4 ; ret
0x000002000002ad84 : add dword ptr [rax - 0x77], ecx ; or r14b, sil ; ret 0x7401
0x00000200004880bb : add dword ptr [rax - 0x77], ecx ; popfq ; nop ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x7d89
0x0000020000056ed5 : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 1], cl ; ret
0x0000020000701425 : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + rcx + 0x49], 0x3b ; ret 0x874
0x000002000004826e : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + rdx + 0x48], 0x3b ; ret
0x00000200001f75e6 : add dword ptr [rax - 0x7d], ecx ; and al, 0x20 ; add byte ptr [rbx], bh ; ret 0x1075
0x000002000007c765 : add dword ptr [rax - 0x7d], ecx ; loopne 0x2000007c76b ; ret
0x00000200005696a4 : add dword ptr [rax - 0x7d], ecx ; loopne 0x200005696af ; add rax, r8 ; ret
0x0000020000125ea1 : add dword ptr [rax - 0x7d], ecx ; ret
0x000002000045046e : add dword ptr [rax - 0x7d], ecx ; ret 0x4102
0x00000200004fc35e : add dword ptr [rax - 0x7d], ecx ; ret 0x4118
0x000002000024c181 : add dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x00000200001264f8 : add dword ptr [rax - 0x7d], ecx ; ret 0xeb18
0x00000200001e2119 : add dword ptr [rax - 0x7d], ecx ; ror dword ptr [rax], -0x75 ; ret 0x3b49
0x00000200000e3d49 : add dword ptr [rax - 0x7f], ecx ; jmp qword ptr [rax]
0x00000200001405c1 : add dword ptr [rax - 1], ecx ; ret
0x0000020000420332 : add dword ptr [rax - 1], ecx ; ret 0x8348
0x000002000043b6dc : add dword ptr [rax - 1], ecx ; ret 0x8841
0x0000020000422f82 : add dword ptr [rax - 1], ecx ; ret 0xc148
0x0000020000010166 : add dword ptr [rax - 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret
0x0000020000151a54 : add dword ptr [rax - 1], ecx ; ror dword ptr [rcx - 1], -0x38 ; jne 0x20000151a59 ; ret
0x000002000016e36c : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 0x3b], 1 ; ret
0x0000020000219e08 : add dword ptr [rax - 9], ecx ; ror byte ptr [rcx + 0x3b], 1 ; ret 0xec74
0x00000200006d64fa : add dword ptr [rax], 0 ; add bh, bh ; ret
0x00000200000a8447 : add dword ptr [rax], 0 ; add bh, bh ; ret 0xb70f
0x0000020000057816 : add dword ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x0000020000147bd7 : add dword ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200007189e3 : add dword ptr [rax], 0 ; add byte ptr [rcx - 0x74b3c7b8], cl ; ret
0x000002000010f9a4 : add dword ptr [rax], 0 ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000003f054 : add dword ptr [rax], 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x8b44
0x0000020000148f05 : add dword ptr [rax], 0 ; add cl, ch ; xor dl, cl ; add byte ptr [rax], al ; ret
0x00000200006b6e41 : add dword ptr [rax], 0 ; add dh, dh ; ret
0x00000200003da24a : add dword ptr [rax], 0x10 ; add byte ptr [rax], al ; call rax
0x00000200001c8206 : add dword ptr [rax], 0x2b480000 ; ret 0x8b44
0x000002000021c2ae : add dword ptr [rax], 0x8b000004 ; ret 0x8b48
0x000002000066af1e : add dword ptr [rax], 0x8b440000 ; ret
0x00000200000577f6 : add dword ptr [rax], 0x8b480000 ; ret 0x3844
0x00000200003fbd7a : add dword ptr [rax], 0xb70f0000 ; ret 0x2b49
0x000002000005266a : add dword ptr [rax], 0xeb000800 ; ret 0xc1f6
0x00000200002117fb : add dword ptr [rax], 2 ; ret
0x00000200006994dd : add dword ptr [rax], eax ; add al, 0 ; je 0x200006994ee ; mov al, 1 ; ret
0x00000200001bc298 : add dword ptr [rax], eax ; add al, al ; add rsp, 0x28 ; ret
0x00000200006f6b69 : add dword ptr [rax], eax ; add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000012968a : add dword ptr [rax], eax ; add al, al ; add rsp, 0x38 ; ret
0x00000200003e1169 : add dword ptr [rax], eax ; add al, al ; call 0x20000009b87
0x00000200004582f8 : add dword ptr [rax], eax ; add al, al ; call 0x2000007d087
0x000002000046f0a7 : add dword ptr [rax], eax ; add al, al ; jmp 0x2000046f075
0x0000020000509dda : add dword ptr [rax], eax ; add al, al ; jmp 0x20000509da7
0x00000200006e86f7 : add dword ptr [rax], eax ; add al, al ; mov eax, edx ; jmp 0x200006e8709
0x0000020000007c41 : add dword ptr [rax], eax ; add al, al ; ret
0x00000200004e3f00 : add dword ptr [rax], eax ; add al, ch ; clc ; ret
0x0000020000446a7c : add dword ptr [rax], eax ; add al, ch ; cmp al, 0xb3 ; sar edi, -0x75 ; ret
0x00000200006b5b11 : add dword ptr [rax], eax ; add al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xff9a
0x0000020000456d01 : add dword ptr [rax], eax ; add al, ch ; ja 0x20000456d70 ; ret 0xebff
0x0000020000439645 : add dword ptr [rax], eax ; add al, ch ; jae 0x200004395d8 ; ret 0x8bff
0x000002000051d0fc : add dword ptr [rax], eax ; add al, ch ; jl 0x2000051d0af ; ret
0x00000200005c83cf : add dword ptr [rax], eax ; add al, ch ; jle 0x200005c8390 ; push qword ptr [rdx] ; ret
0x00000200005aa131 : add dword ptr [rax], eax ; add al, ch ; mov bh, 0x7f ; ret 0xebff
0x0000020000434107 : add dword ptr [rax], eax ; add al, ch ; mov cl, 0xdc ; ret 0x48ff
0x0000020000422c02 : add dword ptr [rax], eax ; add al, ch ; mov dh, 0xf1 ; ret
0x00000200006030fb : add dword ptr [rax], eax ; add al, ch ; mov ebp, 0x8bffa5ec ; ret
0x0000020000437bd2 : add dword ptr [rax], eax ; add al, ch ; out 0xa1, al ; ret 0xf7ff
0x00000200006a34c9 : add dword ptr [rax], eax ; add al, ch ; out dx, eax ; call 0x1ffc3f63477
0x00000200004e1f69 : add dword ptr [rax], eax ; add al, ch ; outsd dx, dword ptr [rsi] ; cld ; ret
0x0000020000437e49 : add dword ptr [rax], eax ; add al, ch ; outsd dx, dword ptr [rsi] ; lahf ; ret 0x41ff
0x000002000053e750 : add dword ptr [rax], eax ; add al, ch ; push -0x74004dca ; ret
0x00000200004dbe07 : add dword ptr [rax], eax ; add al, ch ; push rcx ; ret 0xffc0
0x000002000002fbc5 : add dword ptr [rax], eax ; add al, ch ; ret
0x0000020000432f72 : add dword ptr [rax], eax ; add al, ch ; ret 0x1367
0x0000020000795abe : add dword ptr [rax], eax ; add al, ch ; ret 0x8af6
0x000002000070c936 : add dword ptr [rax], eax ; add al, ch ; ret 0x98b0
0x00000200006b2ef6 : add dword ptr [rax], eax ; add al, ch ; ret 0x9aee
0x00000200006a57f6 : add dword ptr [rax], eax ; add al, ch ; ret 0x9bc5
0x00000200006781f6 : add dword ptr [rax], eax ; add al, ch ; ret 0x9e9b
0x00000200005cf1f6 : add dword ptr [rax], eax ; add al, ch ; ret 0xa92b
0x000002000045e1be : add dword ptr [rax], eax ; add al, ch ; ret 0xbe6f
0x0000020000476ef6 : add dword ptr [rax], eax ; add al, ch ; ret 0xbeae
0x00000200003e10f6 : add dword ptr [rax], eax ; add al, ch ; ret 0xc80c
0x00000200003d8e2a : add dword ptr [rax], eax ; add al, ch ; ret 0xd5b9
0x00000200005d724a : add dword ptr [rax], eax ; add al, ch ; ret 0xf16b
0x00000200000c4ea6 : add dword ptr [rax], eax ; add al, ch ; ret 0xf992
0x0000020000545ac5 : add dword ptr [rax], eax ; add al, ch ; ret 0xffb1
0x000002000044e59b : add dword ptr [rax], eax ; add al, ch ; sbb eax, 0x8bffc138 ; ret
0x00000200005c8349 : add dword ptr [rax], eax ; add al, ch ; scasd eax, dword ptr [rdi] ; ffree st(4) ; push qword ptr [rdx] ; ret
0x00000200004e4063 : add dword ptr [rax], eax ; add al, ch ; xchg eax, ebp ; ret 0xffc0
0x00000200005d61f5 : add dword ptr [rax], eax ; add al, ch ; xchg eax, edi ; pop rsp ; ret
0x00000200005ac18e : add dword ptr [rax], eax ; add al, ch ; xor al, byte ptr [rax] ; ret
0x000002000077859d : add dword ptr [rax], eax ; add bh, al ; ret
0x000002000005e8ee : add dword ptr [rax], eax ; add bh, bh ; ret
0x00000200002129fb : add dword ptr [rax], eax ; add bh, bh ; ret 0x3345
0x000002000049e1e0 : add dword ptr [rax], eax ; add bh, bh ; ret 0x3b41
0x000002000044d689 : add dword ptr [rax], eax ; add bh, bh ; ret 0x5489
0x0000020000554356 : add dword ptr [rax], eax ; add bh, bh ; ret 0x8348
0x00000200006e36d8 : add dword ptr [rax], eax ; add bh, bh ; ret 0x8349
0x000002000012dd23 : add dword ptr [rax], eax ; add bh, bh ; ret 0x83e8
0x000002000012b6d0 : add dword ptr [rax], eax ; add bh, bh ; ret 0x894a
0x00000200000d3b18 : add dword ptr [rax], eax ; add bh, bh ; ret 0x8b4c
0x00000200006bd7eb : add dword ptr [rax], eax ; add bh, bh ; ret 0xfa83
0x000002000042063a : add dword ptr [rax], eax ; add bh, dh ; ret
0x0000020000415a72 : add dword ptr [rax], eax ; add bh, dh ; ret 0
0x000002000005a0b6 : add dword ptr [rax], eax ; add bh, dh ; ret 0x4ffe
0x00000200004fd9c0 : add dword ptr [rax], eax ; add bh, dh ; ret 0x6000
0x000002000045282e : add dword ptr [rax], eax ; add bh, dh ; ret 0xfff0
0x0000020000594bbd : add dword ptr [rax], eax ; add bh, dh ; ret 0xfff8
0x00000200004ed19f : add dword ptr [rax], eax ; add bh, dh ; ret 0xfffe
0x000002000062c47d : add dword ptr [rax], eax ; add bl, al ; mov eax, 0xc0000100 ; ret
0x000002000014e703 : add dword ptr [rax], eax ; add bl, bh ; ret
0x0000020000615f2d : add dword ptr [rax], eax ; add bl, ch ; cmp dword ptr [rax - 0x7d], ecx ; ret 0x4c20
0x00000200001da173 : add dword ptr [rax], eax ; add bl, ch ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200001af61c : add dword ptr [rax], eax ; add bl, ch ; ret
0x00000200001b357d : add dword ptr [rax], eax ; add bl, ch ; sub ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x0000020000432b47 : add dword ptr [rax], eax ; add byte ptr [rax + 0x234985eb], al ; ret 0x3b48
0x00000200000b2ef3 : add dword ptr [rax], eax ; add byte ptr [rax + 0x23], cl ; sal dh, 1 ; ret 0xf01
0x00000200000f1260 : add dword ptr [rax], eax ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x000002000052de2b : add dword ptr [rax], eax ; add byte ptr [rax + 0x38850f40], ch ; ret
0x000002000003a491 : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000051d5c6 : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x470f
0x0000020000214f25 : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200004b0809 : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x00000200003d5617 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000200000b2943 : add dword ptr [rax], eax ; add byte ptr [rax + 0xb], cl ; ret 0xb48
0x0000020000711375 : add dword ptr [rax], eax ; add byte ptr [rax + 1], bh ; ret
0x000002000024c381 : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret
0x0000020000242205 : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x3b49
0x00000200004794ec : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x8142
0x000002000020807a : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x8948
0x00000200003de21e : add dword ptr [rax], eax ; add byte ptr [rax + 5], cl ; adc byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000020000213078 : add dword ptr [rax], eax ; add byte ptr [rax + rax*8 - 0x74b3ba8c], al ; ret
0x00000200001a05ac : add dword ptr [rax], eax ; add byte ptr [rax + rcx*4 + 5], al ; ret 0x1538
0x00000200000e9c3c : add dword ptr [rax], eax ; add byte ptr [rax + rcx*4 - 0x49], al ; ret
0x00000200004bfc34 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000002000011379f : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc2147fb6
0x00000200007a4ecb : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc39d97ea
0x000002000003d73d : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000062c388 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3ffffdfa], bh ; ret
0x00000200004ff797 : add dword ptr [rax], eax ; add byte ptr [rax - 0x47], cl ; ret
0x00000200006c4c87 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x3b], ecx ; ret 0x820f
0x00000200000e3d43 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; outsd dx, dword ptr [rsi] ; add dword ptr [rax - 0x7f], ecx ; jmp qword ptr [rax]
0x0000020000228570 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax - 0x7d] ; ret
0x000002000000887f : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; add dword ptr [rax + 0x3b], ecx ; ret 0x5174
0x00000200000e8120 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and byte ptr [r9 + 0x23], cl ; ret
0x0000020000526a8a : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; enter -0x1418, 0xd ; ret
0x000002000051a344 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; enter 0x31e8, -0x2b ; ret
0x000002000044da38 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; enter 0x51e8, 0x1b ; ret 0x8bff
0x000002000055eab3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; fld1 ; ret 0xbf8d
0x000002000007d5e9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200005196fe : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x694c
0x00000200002285cc : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or dword ptr [rax - 0x7d], ecx ; ret
0x00000200004bfadd : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; pop rax ; sub dh, dh ; ret
0x0000020000432006 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; pop rbp ; loopne 0x2000043200c ; ret
0x00000200000301bc : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001f6b73 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x000002000041752e : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x4df0
0x0000020000535336 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8548
0x000002000004d41b : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x000002000001c4c9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000131dd : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x0000020000111fb8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xb849
0x00000200001030ee : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000003e55c : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200005df450 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; retf ; call 0x2000020bb71
0x000002000060f2f6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; shr cl, 1 ; ret 1
0x000002000060fec5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000020000554ab7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; push rax ; push rax ; ret
0x0000020000471cea : add dword ptr [rax], eax ; add byte ptr [rax - 0x7c], al ; dec dword ptr [rax + 0xf] ; ret
0x0000020000050064 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000652d87 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200004826fb : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4520
0x00000200004d416f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000020000023df8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000041aef0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000200001bbc91 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004babf9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0xfb30
0x0000020000211480 : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0x0000020000036eec : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8d4d
0x00000200001f248f : add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; ret
0x0000020000072a07 : add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; ret 0xfff
0x000002000007e972 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x000002000003ef26 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000002000001613c : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000012f50 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001107f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000015ba80 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000214d0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000012d9a7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000015db63 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000200003fb7ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x0000020000238b13 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004b17b1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000057b376 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x00000200003e7a04 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000000eb53
0x0000020000461842 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000008e15b
0x00000200004b8d51 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x200000e5347
0x000002000052206b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20000147f77
0x000002000051c077 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000014b517
0x00000200006257d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000024da47
0x0000020000457106 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000054334e
0x00000200007b6a9d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20000562cde
0x00000200006ca6a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x200006c693a
0x00000200005389ef : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r8
0x00000200006bb619 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000020000032c31 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmove eax, r8d ; ret
0x000002000013d201 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmovg eax, ecx ; ret
0x00000200003db7e1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x00000200000f95cc : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x200000f95dd ; mov al, 1 ; ret
0x000002000005e07b : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x2000005e048
0x00000200005c31bc : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x2000046f47b
0x000002000047fe04 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x2000047fd78
0x00000200005b3dad : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x200005b3dcf
0x000002000024c4b1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp r8
0x00000200000c3d0e : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200000c3d37 ; ret
0x0000020000626809 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x2000062681f ; call 0x2000024da49
0x00000200006da305 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 1] ; call rdi
0x00000200006dab27 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 2] ; call rdi
0x000002000045d7b9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 3] ; call rdi
0x00000200006d95a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 0xb] ; call rsi
0x00000200006d9f49 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 1] ; call rdi
0x00000200006d8ddd : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 2] ; call rdi
0x000002000045ddd2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 6] ; call rsi
0x00000200006dac49 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 7] ; call rdi
0x00000200003f3b46 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 8] ; call rsi
0x00000200006db9b0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 9] ; call r14
0x00000200006d9023 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 9] ; call rdi
0x00000200006ff475 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lock xadd qword ptr [rcx], rax ; ret
0x0000020000521b3a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov al, 1 ; ret
0x00000200001bdd83 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov al, cl ; ret
0x00000200001fc498 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov al, dl ; ret
0x00000200001c23a3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov al, r8b ; ret
0x00000200004cb588 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rsp + 0x5c], edx ; mov eax, edx ; jmp 0x200004cb53e
0x00000200007b0b61 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000020000207b9f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ecx ; ret
0x00000200001f75da : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; jmp 0x200001f75ec
0x00000200001d9e6f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; ret
0x00000200000a064c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x0000020000703bdf : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r9d ; ret
0x0000020000625757 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov ebx, ebp ; call 0x2000024da49
0x000002000022bea4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x000002000041258c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003feff2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r13 ; call r12
0x000002000054e8f3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r13 ; call r15
0x00000200006d8b19 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r14 ; call rdi
0x00000200006da770 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r15 ; call r14
0x00000200003f2b10 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r15 ; call rdi
0x0000020000239bbf : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, rbx ; call 0x20000045ec1
0x00000200004e6daf : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, rbx ; call 0x200004e3005
0x000002000055575e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, rsi ; call 0x200001319e9
0x00000200003f04f6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, rsi ; call r10
0x00000200003f65fa : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, rsi ; call rdi
0x0000020000217264 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov word ptr [rcx], ax ; xor eax, eax ; ret
0x00000200007d8984 : add dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x000002000015002d : add dword ptr [rax], eax ; add byte ptr [rax], al ; or byte ptr [rbp + rax - 0x18], dh ; xchg eax, edi ; ret
0x0000020000007ed6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200007d8894 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x407d
0x0000020000069e75 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rcx, r8 ; cmovne eax, edx ; ret
0x000002000042bf00 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rdx, rdx ; jne 0x2000042bf13 ; ret
0x0000020000041e81 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xchg qword ptr [rcx], rax ; ret
0x00000200004568e6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000011815e : add dword ptr [rax], eax ; add byte ptr [rbp + 0x33], al ; rol byte ptr [rbp - 0x75], cl ; ret 0xf45
0x00000200006a3495 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x33], al ; shr al, 0x30 ; ret
0x000002000001ff93 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x000002000001fea6 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x48bff43], cl ; ret 0x2b44
0x00000200000cc870 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x59], bl ; ret
0x00000200001ea700 : add dword ptr [rax], eax ; add byte ptr [rbp + 3], cl ; ret 0x341
0x00000200000fcec2 : add dword ptr [rax], eax ; add byte ptr [rbp + 5], dh ; shl rax, 0x14 ; ret
0x0000020000657227 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; jmp rcx
0x000002000011f174 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret 0x200a
0x00000200000288bc : add dword ptr [rax], eax ; add byte ptr [rbp - 0x1277f00a], al ; call qword ptr [rbx]
0x00000200000e6c30 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x73], al ; push rax ; add dword ptr [rcx - 0x75], eax ; ret 0x348
0x00000200003c737a : add dword ptr [rax], eax ; add byte ptr [rbp - 0x74d28b2e], al ; ret 0xffb9
0x00000200000e06f6 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret
0x00000200000dfdc7 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret 0x8b49
0x000002000078b5f0 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret 0xc91b
0x00000200005ab75a : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x000002000059ecbc : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200001e5add : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200000685c4 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 1
0x000002000007d195 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x9f ; ret
0x00000200004746ad : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 0
0x00000200001082b2 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x23e8d1c3], cl ; ret 0x4589
0x00000200000db6a1 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x3481c40], cl ; ret 0x3b4c
0x00000200000590ea : add dword ptr [rax], eax ; add byte ptr [rbx + 0x3bc323c6], cl ; ret
0x0000020000637a6c : add dword ptr [rax], eax ; add byte ptr [rbx + 0xf6c2444], cl ; ret
0x00000200006f742d : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x15], al ; lodsd eax, dword ptr [rsi] ; ret 0x48ff
0x000002000064af3c : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x55], al ; ret
0x00000200001b8242 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x61], cl ; sbb byte ptr [rcx - 0x75], al ; ret 0x8b41
0x00000200006b7d0f : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0xd], al ; out -4, eax ; ret
0x00000200000c85fa : add dword ptr [rax], eax ; add byte ptr [rbx - 0x41f0ba18], cl ; xchg eax, esi ; ret
0x0000020000013bf9 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x74b7df8b], cl ; ret 0xf48
0x0000020000462b13 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fb05], al ; ret 8
0x000002000049a49b : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bbe93b9], cl ; ret
0x00000200006cfbc0 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe17], al ; ret
0x0000020000544715 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7cb7f7bd], cl ; ret
0x00000200004c8e16 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x99fdba4], cl ; ret
0x000002000046216c : add dword ptr [rax], eax ; add byte ptr [rbx], al ; ret
0x0000020000075e7c : add dword ptr [rax], eax ; add byte ptr [rbx], al ; ret 0x813b
0x0000020000186159 : add dword ptr [rax], eax ; add byte ptr [rbx], al ; ret 0x8941
0x00000200004ebc3d : add dword ptr [rax], eax ; add byte ptr [rbx], al ; ret 0x8948
0x00000200004e8d5c : add dword ptr [rax], eax ; add byte ptr [rbx], al ; ret 0x8b48
0x0000020000550aa8 : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret
0x0000020000688a95 : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x7675
0x00000200004ad9b1 : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0xdd74
0x000002000013e2d7 : add dword ptr [rax], eax ; add byte ptr [rbx], ch ; ret
0x00000200001b9868 : add dword ptr [rax], eax ; add byte ptr [rbx], ch ; ret 0xc83b
0x000002000020fa48 : add dword ptr [rax], eax ; add byte ptr [rbx], cl ; sal dh, 1 ; ret 0x753f
0x00000200001de283 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; dec dword ptr [rax - 9] ; ret
0x0000020000242f20 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; leave ; call r10
0x000002000023b616 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; leave ; call r9
0x00000200006b3b39 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x00000200004746f6 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; shr al, cl ; nop ; cdq ; ret 0xf0ff
0x00000200004c480a : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; shr al, cl ; sbb al, 0xa7 ; ret 0xbbff
0x00000200001f3723 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x32], al ; ret
0x00000200000ade38 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x33], cl ; ret 0x8949
0x00000200005449fd : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x0000020000782f54 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200004d0d8f : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x000002000068b861 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x0000020000680897 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x00000200000a9586 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000005fbd9 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5d], al ; pop rbx ; pop rbp ; ret
0x00000200004c9139 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004bfeaa : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000048c700 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rsi ; ret
0x00000200000bfa10 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop r12 ; ret
0x00000200000cd17a : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rbp ; ret
0x000002000003f620 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x0000020000558aba : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000128db8 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200001c3954 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200000d1834 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x0000020000024794 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; ret
0x00000200000f1318 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r12 ; ret
0x00000200004e5866 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rsi ; pop rbp ; ret
0x00000200004be418 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x0000020000533d99 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x00000200000acac4 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000005378d : add dword ptr [rax], eax ; add byte ptr [rcx + 0xb], al ; ret 0x8942
0x00000200006952f3 : add dword ptr [rax], eax ; add byte ptr [rcx + 0xf], al ; mov bh, 0x46 ; add bh, bh ; ret 0x8b44
0x00000200000ed948 : add dword ptr [rax], eax ; add byte ptr [rcx + 0xf], al ; mov dh, 0x8e ; ret
0x00000200007a4f68 : add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ret 0x8489
0x000002000001d72e : add dword ptr [rax], eax ; add byte ptr [rcx + 3], cl ; ret
0x000002000003c75f : add dword ptr [rax], eax ; add byte ptr [rcx + rax], ah ; ret
0x00000200001782d0 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x5c], cl ; ret
0x0000020000015c94 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x39], cl ; ret 0xfe00
0x00000200001b19c3 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x000002000049b717 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], al ; adc byte ptr [r11], r15b ; ret
0x00000200004877e8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], al ; inc dword ptr [r9 + 0x3b] ; ret 0x860f
0x00000200007d4b20 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x74bbd7b9], cl ; ret
0x0000020000213d8a : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x0000020000020645 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000582806 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x100f
0x00000200005566ae : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x1b2
0x000002000077fb18 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x2be
0x00000200005825f5 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x4489
0x0000020000544795 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x840f
0x000002000012e728 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x8b49
0x0000020000249148 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xba49
0x00000200007817d2 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xbd41
0x0000020000248f06 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xbe48
0x000002000077f8da : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xbf41
0x0000020000005338 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xe0d3
0x00000200005ed91f : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xeb8b
0x0000020000595537 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ror dword ptr [rax - 0x75], -0x74 ; ret 0x2ba0
0x00000200004aea47 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; int 0xe8
0x00000200003e3608 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; leave ; call 0x200000036cd
0x000002000000abc9 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; or r8b, r13b ; ret
0x000002000009e486 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rbp ; add dh, dh ; ret
0x0000020000048f02 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000c06bf : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret 0x348
0x000002000048df7f : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret 0x4ae9
0x00000200004ddb3a : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; rol byte ptr [rcx - 0xa], cl ; ret 0xf03
0x000002000055c8bd : add dword ptr [rax], eax ; add byte ptr [rcx - 0x76], al ; ret
0x00000200005849b0 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000243623 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000002000020315b : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x000002000020890e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4a10
0x00000200000a8774 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x00000200005bb7cc : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0x4504
0x00000200000b3f4a : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x000002000049e2db : add dword ptr [rax], eax ; add byte ptr [rcx - 1], al ; ret
0x000002000044d561 : add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret 0xfff
0x000002000072238d : add dword ptr [rax], eax ; add byte ptr [rcx - 9], cl ; ret
0x00000200000ed031 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; je 0x200000ed03e ; ret
0x0000020000203ed2 : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x000002000000832d : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000024ad40 : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200001f11e1 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000bf1b8 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x0000020000515be6 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x4f], cl ; ret
0x000002000071b68b : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000200006908db : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x45 ; mov byte ptr [rcx + 3], al ; ret 0x8944
0x0000020000617884 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x51 ; or dh, dh ; ret 0xf01
0x00000200006b7cd8 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x55 ; loopne 0x200006b7ceb ; ret 0xc13b
0x0000020000617ef7 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x56 ; adc al, 0xf6 ; ret 0xf01
0x00000200006378b2 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret
0x00000200001dbaf5 : add dword ptr [rax], eax ; add byte ptr [rdx + 0x3ab9b203], cl ; ret 0x3a75
0x00000200004524bb : add dword ptr [rax], eax ; add byte ptr [rdx + 0xd8d4801], dh ; cdq ; ret
0x00000200001c6911 : add dword ptr [rax], eax ; add byte ptr [rdx + 0xd8d4801], dh ; ret
0x0000020000719417 : add dword ptr [rax], eax ; add byte ptr [rdx + 3], dh ; xor eax, eax ; ret
0x000002000061bfbc : add dword ptr [rax], eax ; add byte ptr [rdx + rcx*4 - 0x7a], al ; ret 6
0x000002000048e8b8 : add dword ptr [rax], eax ; add byte ptr [rdx - 0x3474b7ff], dh ; call r15
0x00000200007b1f7a : add dword ptr [rax], eax ; add byte ptr [rdx - 0x53], dh ; ret
0x0000020000426ac6 : add dword ptr [rax], eax ; add byte ptr [rdx], bh ; ret
0x0000020000485b15 : add dword ptr [rax], eax ; add byte ptr [rdx], dh ; ret
0x00000200005efddb : add dword ptr [rax], eax ; add byte ptr [rsi + 0x2b], ah ; ret 0x4fe9
0x0000020000056532 : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ret 0x3f74
0x00000200004fd166 : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ret 0x5477
0x00000200004666ea : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200004fdf9b : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x000002000046481f : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ret 0x8b48
0x000002000042de58 : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ror dword ptr [rdi], -0x7b ; ret
0x00000200000bfc88 : add dword ptr [rax], eax ; add byte ptr [rsi + 0x5b], bl ; pop rbp ; ret
0x00000200004c610d : add dword ptr [rax], eax ; add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x84 ; ret
0x00000200000d1968 : add dword ptr [rax], eax ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x0000020000637b09 : add dword ptr [rax], eax ; add byte ptr [rsi], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000014a026 : add dword ptr [rax], eax ; add cl, ch ; adc al, al ; add byte ptr [rax], al ; ret
0x0000020000149f26 : add dword ptr [rax], eax ; add cl, ch ; adc al, cl ; add byte ptr [rax], al ; ret
0x0000020000149ec6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x20000149e95 ; add byte ptr [rax], al ; ret
0x0000020000149fc6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x20000149f94 ; add byte ptr [rax], al ; ret
0x000002000014a0c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014a093 ; add byte ptr [rax], al ; ret
0x000002000014a1c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014a192 ; add byte ptr [rax], al ; ret
0x000002000014a2c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014a291 ; add byte ptr [rax], al ; ret
0x000002000014a3c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014a390 ; add byte ptr [rax], al ; ret
0x000002000014a4c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014a48f ; add byte ptr [rax], al ; ret
0x000002000014a5c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014a58e ; add byte ptr [rax], al ; ret
0x000002000014a6c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014a68d ; add byte ptr [rax], al ; ret
0x000002000014a7c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014a78c ; add byte ptr [rax], al ; ret
0x000002000014a8c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014a88b ; add byte ptr [rax], al ; ret
0x000002000014a9c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014a98a ; add byte ptr [rax], al ; ret
0x000002000014aac6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014aa89 ; add byte ptr [rax], al ; ret
0x000002000014abc6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014ab88 ; add byte ptr [rax], al ; ret
0x000002000014acc6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014ac87 ; add byte ptr [rax], al ; ret
0x000002000014adc6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014ad86 ; add byte ptr [rax], al ; ret
0x000002000014aec6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014ae85 ; add byte ptr [rax], al ; ret
0x000002000014afc6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014af84 ; add byte ptr [rax], al ; ret
0x000002000014b0c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014b083 ; add byte ptr [rax], al ; ret
0x000002000014b1c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014b182 ; add byte ptr [rax], al ; ret
0x000002000014b2c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014b281 ; add byte ptr [rax], al ; ret
0x000002000014b3c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014b380 ; add byte ptr [rax], al ; ret
0x000002000014b4c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014b47f ; add byte ptr [rax], al ; ret
0x000002000014b5c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014b57e ; add byte ptr [rax], al ; ret
0x000002000014b6c6 : add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014b67d ; add byte ptr [rax], al ; ret
0x000002000014b346 : add dword ptr [rax], eax ; add cl, ch ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000014b246 : add dword ptr [rax], eax ; add cl, ch ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000014b686 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xa9 ; add byte ptr [rax], al ; ret
0x000002000014b586 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xaa ; add byte ptr [rax], al ; ret
0x000002000014b486 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xab ; add byte ptr [rax], al ; ret
0x000002000014b386 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xac ; add byte ptr [rax], al ; ret
0x000002000014b286 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xad ; add byte ptr [rax], al ; ret
0x000002000014b186 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xae ; add byte ptr [rax], al ; ret
0x000002000014b086 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xaf ; add byte ptr [rax], al ; ret
0x000002000014af86 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xb0 ; add byte ptr [rax], al ; ret
0x000002000014ae86 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xb1 ; add byte ptr [rax], al ; ret
0x000002000014ad86 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xb2 ; add byte ptr [rax], al ; ret
0x000002000014ac86 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xb3 ; add byte ptr [rax], al ; ret
0x000002000014ab86 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xb4 ; add byte ptr [rax], al ; ret
0x000002000014aa86 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xb5 ; add byte ptr [rax], al ; ret
0x000002000014a986 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xb6 ; add byte ptr [rax], al ; ret
0x000002000014a886 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xb7 ; add byte ptr [rax], al ; ret
0x000002000014a786 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xb8 ; add byte ptr [rax], al ; ret
0x000002000014a686 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xb9 ; add byte ptr [rax], al ; ret
0x000002000014a586 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xba ; add byte ptr [rax], al ; ret
0x000002000014a486 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xbb ; add byte ptr [rax], al ; ret
0x000002000014a386 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xbc ; add byte ptr [rax], al ; ret
0x000002000014a286 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xbd ; add byte ptr [rax], al ; ret
0x000002000014a186 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xbe ; add byte ptr [rax], al ; ret
0x000002000014a086 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xbf ; add byte ptr [rax], al ; ret
0x0000020000149f86 : add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xc0 ; add byte ptr [rax], al ; ret
0x000002000014b3e6 : add dword ptr [rax], eax ; add cl, ch ; push rdx ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000014b2e6 : add dword ptr [rax], eax ; add cl, ch ; push rdx ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000020000149fe6 : add dword ptr [rax], eax ; add cl, ch ; push rdx ; rol byte ptr [rax], 0 ; ret
0x0000020000149ee6 : add dword ptr [rax], eax ; add cl, ch ; push rdx ; rol dword ptr [rax], 0 ; ret
0x000002000014b1e6 : add dword ptr [rax], eax ; add cl, ch ; push rdx ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b0e6 : add dword ptr [rax], eax ; add cl, ch ; push rdx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b5e6 : add dword ptr [rax], eax ; add cl, ch ; push rdx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000002000014b4e6 : add dword ptr [rax], eax ; add cl, ch ; push rdx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x000002000014b146 : add dword ptr [rax], eax ; add cl, ch ; repne scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b046 : add dword ptr [rax], eax ; add cl, ch ; repne scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b546 : add dword ptr [rax], eax ; add cl, ch ; repne stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000002000014b446 : add dword ptr [rax], eax ; add cl, ch ; repne stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x0000020000124375 : add dword ptr [rax], eax ; add cl, ch ; ret
0x00000200000fe8bc : add dword ptr [rax], eax ; add cl, ch ; ret 0
0x00000200005139ee : add dword ptr [rax], eax ; add cl, ch ; ret 0xf34d
0x00000200003e8956 : add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x0000020000149f66 : add dword ptr [rax], eax ; add cl, ch ; rol al, cl ; add byte ptr [rax], al ; ret
0x0000020000149f46 : add dword ptr [rax], eax ; add cl, ch ; rol byte ptr [rax], 0 ; ret
0x000002000014b3a6 : add dword ptr [rax], eax ; add cl, ch ; xchg eax, edx ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000014b2a6 : add dword ptr [rax], eax ; add cl, ch ; xchg eax, edx ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000020000149fa6 : add dword ptr [rax], eax ; add cl, ch ; xchg eax, edx ; rol byte ptr [rax], 0 ; ret
0x0000020000149ea6 : add dword ptr [rax], eax ; add cl, ch ; xchg eax, edx ; rol dword ptr [rax], 0 ; ret
0x000002000014b1a6 : add dword ptr [rax], eax ; add cl, ch ; xchg eax, edx ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b0a6 : add dword ptr [rax], eax ; add cl, ch ; xchg eax, edx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b5a6 : add dword ptr [rax], eax ; add cl, ch ; xchg eax, edx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000002000014b4a6 : add dword ptr [rax], eax ; add cl, ch ; xchg eax, edx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x0000020000189c20 : add dword ptr [rax], eax ; add cl, ch ; xchg eax, esp ; ret 0xffee
0x000002000014a006 : add dword ptr [rax], eax ; add cl, ch ; xor al, al ; add byte ptr [rax], al ; ret
0x0000020000149f06 : add dword ptr [rax], eax ; add cl, ch ; xor al, cl ; add byte ptr [rax], al ; ret
0x0000020000144057 : add dword ptr [rax], eax ; add dh, al ; ret
0x0000020000526b18 : add dword ptr [rax], eax ; add dh, bh ; ret
0x00000200000953b5 : add dword ptr [rax], eax ; add dh, bh ; ret 0x5788
0x00000200000153d3 : add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000047bf01 : add dword ptr [rax], eax ; add dh, dh ; ret 0x4002
0x0000020000150f23 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7401
0x00000200006ac45d : add dword ptr [rax], eax ; add dh, dh ; ret 0x7403
0x0000020000189b23 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x00000200000f8bb1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000200000f66ed : add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x00000200004abbb5 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000200004e448d : add dword ptr [rax], eax ; add dh, dh ; shl dword ptr [rax], 0xf ; test dword ptr [rax], ebp ; ret 0xf
0x0000020000027435 : add dword ptr [rax], eax ; add dword ptr [rax], eax ; jne 0x20000027446 ; xor eax, eax ; ret
0x000002000003affd : add dword ptr [rax], eax ; add dword ptr [rax], eax ; ret
0x000002000001c0fb : add dword ptr [rax], eax ; add rcx, r15 ; jmp rcx
0x00000200001201bf : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005c2a5 : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000004d46 : add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200007ada87 : add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000457a83 : add dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x00000200000535dc : add dword ptr [rax], eax ; add rsp, 0x40 ; pop rbx ; ret
0x000002000012073a : add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x000002000046d54b : add dword ptr [rax], eax ; add rsp, 0x58 ; ret
0x000002000011b553 : add dword ptr [rax], eax ; add rsp, 0x60 ; pop rbx ; ret
0x000002000012757b : add dword ptr [rax], eax ; add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000129408 : add dword ptr [rax], eax ; add rsp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000013fb4b : add dword ptr [rax], eax ; and eax, 0x3f ; add rsp, 0x28 ; ret
0x0000020000559025 : add dword ptr [rax], eax ; jmp 0x20000558fef
0x00000200005c16f1 : add dword ptr [rax], eax ; jmp 0x200005c1760
0x0000020000027437 : add dword ptr [rax], eax ; jne 0x20000027444 ; xor eax, eax ; ret
0x00000200000bf635 : add dword ptr [rax], eax ; jne 0x200000bf649 ; xor al, al ; ret
0x000002000022dd81 : add dword ptr [rax], eax ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200007bbcb3 : add dword ptr [rax], eax ; mov al, 1 ; add rsp, 0x38 ; ret
0x00000200007a9620 : add dword ptr [rax], eax ; mov al, bl ; add rsp, 0x60 ; pop rbx ; ret
0x00000200000268e2 : add dword ptr [rax], eax ; mov dword ptr [rcx], eax ; mov al, 1 ; ret
0x0000020000717fd2 : add dword ptr [rax], eax ; mov dword ptr [rip + 0x1516a], eax ; ret
0x0000020000711f71 : add dword ptr [rax], eax ; mov eax, dword ptr [rip + 0x1b13f] ; ret
0x00000200007bb77c : add dword ptr [rax], eax ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200007bc6be : add dword ptr [rax], eax ; mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x000002000012adca : add dword ptr [rax], eax ; mov eax, r8d ; ret
0x00000200001d5566 : add dword ptr [rax], eax ; mov rax, rdx ; ret
0x00000200000d26f2 : add dword ptr [rax], eax ; mov rcx, qword ptr [rbp + 0x28] ; call 0x200000be968
0x00000200004ba815 : add dword ptr [rax], eax ; mov rcx, qword ptr [rbp + 8] ; call 0x200000e7da9
0x0000020000103260 : add dword ptr [rax], eax ; mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200007a8c86 : add dword ptr [rax], eax ; mov rcx, r14 ; call 0x200003d2698
0x000002000010c948 : add dword ptr [rax], eax ; mov rdi, qword ptr [rsp + 0x28] ; pop r14 ; ret
0x00000200006aa61b : add dword ptr [rax], eax ; or byte ptr [rdi], 0x85 ; ret
0x000002000003afff : add dword ptr [rax], eax ; ret
0x000002000062c48f : add dword ptr [rax], eax ; rol bl, 0xb8 ; jb 0x2000062c4a1 ; add al, al ; ret
0x000002000067931f : add dword ptr [rax], eax ; ror byte ptr [rdi], 0x44 ; ret
0x00000200007816fa : add dword ptr [rax], eax ; ror byte ptr [rdi], 0x85 ; lodsd eax, dword ptr [rsi] ; ret 0xffff
0x000002000040c404 : add dword ptr [rax], eax ; sbb eax, eax ; add rsp, 0x28 ; ret
0x00000200005d8cde : add dword ptr [rax], eax ; shr cl, 0x1b ; ret
0x00000200007164b8 : add dword ptr [rax], eax ; test al, 2 ; je 0x200007164c9 ; xor eax, eax ; ret
0x000002000005b2f4 : add dword ptr [rax], eax ; test eax, eax ; jns 0x2000005b2c1 ; jmp 0x2000005b2dc
0x000002000003e431 : add dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000140d12 : add dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000220cbc : add dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200007118c0 : add dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200000808ad : add dword ptr [rax], ecx ; add rsp, 0x28 ; ret
0x00000200006c3330 : add dword ptr [rax], esp ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200003ff5b5
0x00000200000f5b28 : add dword ptr [rax], esp ; add byte ptr [rbx], bh ; ret
0x000002000049e2da : add dword ptr [rax], r8d ; add byte ptr [rcx - 1], al ; ret
0x00000200000808ac : add dword ptr [rax], r9d ; add rsp, 0x28 ; ret
0x0000020000069951 : add dword ptr [rbp + 0x14], esi ; add rsp, 0x28 ; ret
0x0000020000053353 : add dword ptr [rbp + 0x15], esi ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000210450 : add dword ptr [rbp + 0x1a], esi ; inc dword ptr [rcx + 0x254] ; ret
0x000002000015d2db : add dword ptr [rbp + 0x20], 0xb ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000121f74 : add dword ptr [rbp + 0x23], ecx ; ret
0x000002000006353b : add dword ptr [rbp + 0x23], ecx ; ret 0x894c
0x000002000015c5c8 : add dword ptr [rbp + 0x24], 0xa ; add rsp, 0x20 ; pop rbp ; ret
0x000002000070f3b5 : add dword ptr [rbp + 0x29], esi ; bts dword ptr [r8 + 0x20], 0x18 ; ret
0x000002000008629e : add dword ptr [rbp + 0x32], eax ; ror byte ptr [rax + 0x3b], cl ; ret 0x1073
0x0000020000703bb2 : add dword ptr [rbp + 0x33], eax ; leave ; test rax, rax ; jne 0x20000703bc5 ; ret
0x000002000015abf9 : add dword ptr [rbp + 0x34], 0xc ; add rsp, 0x30 ; pop rbp ; ret
0x000002000055e87b : add dword ptr [rbp + 0x39], eax ; push rax ; adc byte ptr [rbp + rcx - 1], dh ; ret 0x8349
0x00000200000f97dc : add dword ptr [rbp + 0x3b7874c0], eax ; ret
0x00000200000b205c : add dword ptr [rbp + 0x3b], ecx ; ret
0x00000200001ee396 : add dword ptr [rbp + 0x3b], ecx ; ret 0xf4d
0x000002000002f85b : add dword ptr [rbp + 0x3b], ecx ; sal byte ptr [rdx - 0x21], 1 ; ret
0x00000200003ee0ff : add dword ptr [rbp + 0x41], esi ; mov qword ptr [r9], r10 ; ret
0x00000200004b3dc8 : add dword ptr [rbp + 0x48c033ff], edi ; add esp, 0x28 ; ret
0x0000020000045086 : add dword ptr [rbp + 0x5b], esi ; mov eax, 2 ; ret
0x0000020000513957 : add dword ptr [rbp + 0x63], eax ; jo 0x200005139ad ; ret
0x000002000008192f : add dword ptr [rbp + 0x88504], ecx ; add byte ptr [rax], al ; ret
0x000002000007c7a7 : add dword ptr [rbp + 0xd], esi ; ret
0x0000020000581d72 : add dword ptr [rbp + 0xfcf8bc9], eax ; xchg eax, ebp ; ret 0x61e8
0x000002000006f048 : add dword ptr [rbp + 1], esi ; ret
0x00000200001e57ad : add dword ptr [rbp + 2], esi ; mov al, 1 ; ret
0x00000200000283be : add dword ptr [rbp + 2], esi ; xor eax, eax ; ret
0x0000020000137b6d : add dword ptr [rbp + 3], ecx ; ret
0x00000200001cb0de : add dword ptr [rbp + 3], esi ; xor al, al ; ret
0x000002000004e31c : add dword ptr [rbp + 3], esi ; xor eax, eax ; ret
0x00000200003f91be : add dword ptr [rbp + 4], esi ; lea eax, dword ptr [rcx + 1] ; ret
0x00000200003f91c7 : add dword ptr [rbp + 4], esi ; lea eax, dword ptr [rcx + 2] ; ret
0x00000200003f91da : add dword ptr [rbp + 4], esi ; lea eax, dword ptr [rcx + 4] ; ret
0x000002000005285f : add dword ptr [rbp + 4], esi ; ret
0x00000200000bf701 : add dword ptr [rbp + 5], esi ; add rsp, 0x28 ; ret
0x000002000007c637 : add dword ptr [rbp + 5], esi ; add rsp, 0x38 ; ret
0x0000020000453966 : add dword ptr [rbp + 5], esi ; and rax, 0xfffffffffffffffe ; ret
0x00000200001d0170 : add dword ptr [rbp + 5], esi ; mov eax, 1 ; ret
0x0000020000231583 : add dword ptr [rbp + 5], esi ; movzx eax, word ptr [rcx + 0x28] ; ret
0x00000200003dfb96 : add dword ptr [rbp + 5], esi ; test rcx, rcx ; jne 0x200003dfba7 ; ret
0x00000200003fd32c : add dword ptr [rbp + 6], esi ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x000002000001e0e9 : add dword ptr [rbp + 6], esi ; mov eax, 0xc0000225 ; ret
0x000002000068688b : add dword ptr [rbp + 6], esi ; mov eax, 1 ; ret
0x00000200000f6496 : add dword ptr [rbp + 6], esi ; mov rdi, qword ptr [rsp + 8] ; ret
0x0000020000478f85 : add dword ptr [rbp + 7], esi ; cmp byte ptr [rcx + 1], 0xf ; ja 0x20000478f98 ; ret
0x00000200000b6925 : add dword ptr [rbp + rax + 0x48], esi ; add esp, 0x28 ; ret
0x00000200004a91f6 : add dword ptr [rbp + rax + 0x48], esi ; lea eax, dword ptr [rcx + 0x20] ; ret
0x00000200004a91de : add dword ptr [rbp + rax + 0x48], esi ; lea eax, dword ptr [rcx + 0x24] ; ret
0x0000020000447d46 : add dword ptr [rbp + rax + 0x48], esi ; lea eax, dword ptr [rcx + 0x4c] ; ret
0x000002000070d0bc : add dword ptr [rbp + rax + 0xf], esi ; mov edx, 0xf6143868 ; ret
0x0000020000610c61 : add dword ptr [rbp + rax - 0xa], esi ; ret
0x00000200006cb67a : add dword ptr [rbp + rax - 1], esi ; ret
0x0000020000150f28 : add dword ptr [rbp + rcx - 0x76], esi ; and cl, byte ptr [rcx - 1] ; ret 0xc9ff
0x0000020000139ce7 : add dword ptr [rbp + rcx - 0x76], esi ; ret
0x00000200000492ed : add dword ptr [rbp + rcx*4 + 0x3c], ecx ; ret
0x000002000001f7c1 : add dword ptr [rbp + rdx + 0x49], esi ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x0000020000039873 : add dword ptr [rbp + rdx*2 - 0x75], esi ; ret 0xca8b
0x00000200000ac7dd : add dword ptr [rbp + rdx*2 - 0xa], esi ; ret 0x7420
0x000002000011a725 : add dword ptr [rbp - 0x10], esi ; mov eax, dword ptr [rip + 0x28db02] ; ret
0x0000020000052c1a : add dword ptr [rbp - 0x10], esi ; ret
0x0000020000010cf4 : add dword ptr [rbp - 0x11], esi ; ret
0x000002000016560d : add dword ptr [rbp - 0x11], esi ; sub r9, 1 ; jne 0x20000165603 ; ret
0x00000200007b7a69 : add dword ptr [rbp - 0x12], esi ; shl edx, 0x18 ; or eax, edx ; ret
0x0000020000119899 : add dword ptr [rbp - 0x13], esi ; mov rax, rdx ; ret
0x000002000008801e : add dword ptr [rbp - 0x14], esi ; ret
0x0000020000481b53 : add dword ptr [rbp - 0x15], esi ; ret
0x00000200007b50d3 : add dword ptr [rbp - 0x16], esi ; mov al, 1 ; add rsp, 0x38 ; ret
0x0000020000051969 : add dword ptr [rbp - 0x16], esi ; ret
0x00000200007b8587 : add dword ptr [rbp - 0x18], esi ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006ae26a : add dword ptr [rbp - 0x19], esi ; add rsp, 0x28 ; ret
0x0000020000028192 : add dword ptr [rbp - 0x19], esi ; ret
0x0000020000034e67 : add dword ptr [rbp - 0x1a], esi ; ret
0x0000020000133770 : add dword ptr [rbp - 0x1b], esi ; mov al, dl ; ret
0x00000200006bbbc8 : add dword ptr [rbp - 0x1c], esi ; mov eax, r8d ; ret
0x0000020000165613 : add dword ptr [rbp - 0x1c], esi ; ret
0x00000200001b1334 : add dword ptr [rbp - 0x1e], esi ; jmp 0x2000013534a
0x00000200001c24a4 : add dword ptr [rbp - 0x1e], esi ; mov eax, ecx ; ret
0x0000020000686879 : add dword ptr [rbp - 0x1e], esi ; ret
0x00000200006f454f : add dword ptr [rbp - 0x20], esi ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001370f8 : add dword ptr [rbp - 0x21], esi ; ret
0x000002000060ebf9 : add dword ptr [rbp - 0x22], esi ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001398ba : add dword ptr [rbp - 0x22], esi ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000100101 : add dword ptr [rbp - 0x27], esi ; not r9d ; mov eax, r9d ; ret
0x00000200003e2dc3 : add dword ptr [rbp - 0x29], esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000478cd : add dword ptr [rbp - 0x29], esi ; ret
0x000002000002b510 : add dword ptr [rbp - 0x2a], esi ; ret
0x0000020000190905 : add dword ptr [rbp - 0x2d], esi ; add rsp, 0x28 ; ret
0x00000200001d76f9 : add dword ptr [rbp - 0x2e], esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000066b2bb : add dword ptr [rbp - 0x2f], esi ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001170fb : add dword ptr [rbp - 0x31], esi ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x000002000023038b : add dword ptr [rbp - 0x32], esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000112e50 : add dword ptr [rbp - 0x32], esi ; ret
0x0000020000459e63 : add dword ptr [rbp - 0x37], esi ; ret
0x000002000071182b : add dword ptr [rbp - 0x3dbaf037], eax ; ret
0x0000020000541784 : add dword ptr [rbp - 0x4b], esi ; ret
0x00000200001fe42e : add dword ptr [rbp - 0x50], esi ; mov eax, r8d ; ret
0x00000200003eb590 : add dword ptr [rbp - 0x56], esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000055d2b1 : add dword ptr [rbp - 0x577bf037], eax ; ret
0x0000020000523a69 : add dword ptr [rbp - 0x5a], esi ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000646c6b : add dword ptr [rbp - 0x5f], esi ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x0000020000135e49 : add dword ptr [rbp - 0x63], esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001c47e0 : add dword ptr [rbp - 0x6a], esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001c2460 : add dword ptr [rbp - 0x6d], esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000401163 : add dword ptr [rbp - 0x73], eax ; cld ; call rsi
0x00000200001d1e45 : add dword ptr [rbp - 0x73], ecx ; or byte ptr [rcx - 0x7d], al ; ret 0x75ff
0x00000200001433b2 : add dword ptr [rbp - 0x75], eax ; mov r8d, edx ; jmp 0x200001433de
0x0000020000017156 : add dword ptr [rbp - 0x75], eax ; pop rsi ; xor byte ptr [rcx - 0x75], al ; ret
0x000002000007246c : add dword ptr [rbp - 0x75], eax ; ret
0x000002000009acb4 : add dword ptr [rbp - 0x75], eax ; ror dword ptr [rcx + rdi + 0x34], 1 ; ret 0x8d4c
0x00000200000df1aa : add dword ptr [rbp - 0x75], ecx ; adc byte ptr [r13 + 0x3b], cl ; ret 0x840f
0x0000020000410bce : add dword ptr [rbp - 0x75], ecx ; ret
0x000002000002e51b : add dword ptr [rbp - 0x75], ecx ; ret 0xc2eb
0x00000200000862b6 : add dword ptr [rbp - 0x7b], ecx ; sal byte ptr [rbp + 4], 0x41 ; mov al, dl ; ret
0x000002000043e7e7 : add dword ptr [rbp - 0x7c], eax ; div byte ptr [rdi + rbx - 0x75] ; ret
0x00000200003f3798 : add dword ptr [rbp - 0x8a78640], eax ; fdivr dword ptr [rbx] ; ret
0x0000020000053230 : add dword ptr [rbp - 0xc], esi ; ret
0x0000020000088902 : add dword ptr [rbp - 0xd], esi ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f07dd : add dword ptr [rbp - 0xd], esi ; mov rax, r10 ; ret
0x000002000055603e : add dword ptr [rbp - 0xe], esi ; add rsp, 0x30 ; pop rbx ; ret
0x000002000015772b : add dword ptr [rbp - 0xe], esi ; mov rax, r11 ; ret
0x0000020000710db1 : add dword ptr [rbp - 0xe], esi ; ret
0x000002000070ac9c : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000020000052868 : add dword ptr [rbp - 8], esi ; mov eax, ecx ; ret
0x00000200005d1229 : add dword ptr [rbp], ebx ; ret
0x00000200006859e4 : add dword ptr [rbx + 0x1e], esi ; btr dword ptr [rcx], ebx ; jmp 0x20000685a13
0x00000200001197cf : add dword ptr [rbx + 0x23480841], ecx ; ret 0xb49
0x00000200003e274d : add dword ptr [rbx + 0x23d0f7c1], ecx ; ret 0xd2f7
0x000002000005ccc2 : add dword ptr [rbx + 0x37d51f8], eax ; xor eax, eax ; ret
0x00000200000dda42 : add dword ptr [rbx + 0x418b3850], ecx ; and al, 0xf6 ; ret 0x7420
0x000002000021ab83 : add dword ptr [rbx + 0xb4807e0], eax ; ret
0x0000020000407963 : add dword ptr [rbx + 0xf000000], -0x49 ; ret
0x000002000006a2b1 : add dword ptr [rbx + 2], 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x2349
0x00000200000b4541 : add dword ptr [rbx + 3], 0 ; add bh, bh ; ret 0x8b4d
0x0000020000076031 : add dword ptr [rbx + 3], esi ; xor eax, eax ; ret
0x0000020000231771 : add dword ptr [rbx + 6], esi ; mov eax, 0xc00001a2 ; ret
0x00000200000955c5 : add dword ptr [rbx + 7], esi ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000181187 : add dword ptr [rbx + rax*2 - 0xa], esi ; ret
0x000002000042bf19 : add dword ptr [rbx - 0x158bbf07], eax ; xor al, al ; ret
0x000002000066b7c5 : add dword ptr [rbx - 0x2c37c3eb], ecx ; push rsi ; ret 0x7573
0x000002000001f354 : add dword ptr [rbx - 0x3fcc3c3e], ecx ; ret
0x0000020000201753 : add dword ptr [rbx - 0x74a7dba4], ecx ; ret
0x00000200000c0297 : add dword ptr [rbx - 0x74b7e01f], eax ; ret
0x00000200000b4682 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4b08
0x00000200001a3002 : add dword ptr [rbx - 0xa], esi ; ret
0x000002000003f3ca : add dword ptr [rbx], -0xd ; adc al, byte ptr [rax] ; ret
0x0000020000433b73 : add dword ptr [rbx], eax ; add byte ptr [rax], al ; je 0x20000433b84 ; mov al, 1 ; ret
0x000002000012a3e5 : add dword ptr [rbx], eax ; mov dword ptr [rcx + 0xc], r8d ; xor eax, eax ; ret
0x0000020000462291 : add dword ptr [rbx], eax ; ret
0x00000200003c9f4e : add dword ptr [rbx], eax ; ret 0x3b41
0x0000020000692dc9 : add dword ptr [rbx], eax ; ret 0x8948
0x0000020000407bed : add dword ptr [rbx], ebp ; ret
0x00000200005eee22 : add dword ptr [rbx], ebp ; ret 0x775
0x00000200007a8156 : add dword ptr [rbx], ebp ; ret 0x840f
0x00000200006734d5 : add dword ptr [rbx], ebp ; ret 0x875
0x000002000069901f : add dword ptr [rbx], ebp ; ret 0x8b44
0x000002000007f0a5 : add dword ptr [rbx], ecx ; ret 0x8941
0x00000200001eab46 : add dword ptr [rbx], ecx ; ret 0xccc3
0x0000020000683b04 : add dword ptr [rbx], ecx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000007a85 : add dword ptr [rbx], edi ; ret
0x000002000010a185 : add dword ptr [rbx], edi ; ret 0xdf75
0x000002000010a10c : add dword ptr [rbx], edi ; ret 0xe775
0x00000200000b594d : add dword ptr [rbx], esi ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004bb526 : add dword ptr [rbx], esi ; fnstenv dword ptr [rbx] ; ret
0x000002000002678d : add dword ptr [rbx], esi ; rol byte ptr [rcx - 0x75], cl ; ret
0x000002000042eb32 : add dword ptr [rbx], esi ; ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], 0x8a ; ret 0x8ac3
0x00000200001dab8f : add dword ptr [rbx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rbx ; ret
0x000002000042ec5b : add dword ptr [rbx], esi ; test byte ptr [rax - 0x75], 0xcf ; call 0x2000005c1b9
0x00000200001a5dee : add dword ptr [rbx], esp ; ret
0x000002000001fa0f : add dword ptr [rbx], esp ; ret 0xc22b
0x00000200003f40a9 : add dword ptr [rbx], esp ; ret 0xc23b
0x00000200001cc832 : add dword ptr [rcx + 0x155a8f05], ecx ; add al, ch ; ret 0x807
0x000002000003e1fc : add dword ptr [rcx + 0x158], eax ; ret
0x00000200007b06c7 : add dword ptr [rcx + 0x18], eax ; add rsp, 0x28 ; ret
0x00000200007b05a3 : add dword ptr [rcx + 0x18], eax ; add rsp, 0x38 ; ret
0x000002000021a392 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x00000200007c5da6 : add dword ptr [rcx + 0x23], eax ; ret
0x0000020000112fd0 : add dword ptr [rcx + 0x23], ecx ; fmul dword ptr [rax - 0x75] ; ret 0x8d49
0x00000200000b1d46 : add dword ptr [rcx + 0x23], ecx ; ret
0x000002000010881e : add dword ptr [rcx + 0x33], ecx ; ret 0x8948
0x00000200005f99c4 : add dword ptr [rcx + 0x3b], eax ; ret 0x850f
0x00000200002105e2 : add dword ptr [rcx + 0x3b], eax ; ret 0x870f
0x000002000010a33a : add dword ptr [rcx + 0x3b], eax ; ret 0xdf75
0x000002000010a2aa : add dword ptr [rcx + 0x3b], eax ; ret 0xe775
0x00000200000b0dc9 : add dword ptr [rcx + 0x3b], ecx ; ret
0x000002000001b247 : add dword ptr [rcx + 0x3b], ecx ; ret 0x6474
0x000002000006c4f6 : add dword ptr [rcx + 0x3b], ecx ; ret 0x840f
0x0000020000032d60 : add dword ptr [rcx + 0x3b], ecx ; ror byte ptr [rdi], 0x94 ; ret 0x2b49
0x000002000015f5e3 : add dword ptr [rcx + 0x40], ebx ; ret
0x000002000015f5e2 : add dword ptr [rcx + 0x40], r11d ; ret
0x00000200005549cc : add dword ptr [rcx + 0x58], -1 ; je 0x200005549d9 ; ret
0x00000200003cd1ee : add dword ptr [rcx + 0x5c], -1 ; je 0x200003cd200 ; mov al, r10b ; ret
0x00000200003cd1ee : add dword ptr [rcx + 0x5c], -1 ; je 0x200003cd201 ; mov al, r10b ; ret
0x000002000024f787 : add dword ptr [rcx + 0x63], ecx ; ret
0x000002000016dea9 : add dword ptr [rcx + 0x6e], eax ; ret
0x0000020000050f5f : add dword ptr [rcx + 0x78], eax ; ret
0x000002000049e537 : add dword ptr [rcx + 0xa], edx ; ret
0x000002000056987a : add dword ptr [rcx + 0xac], eax ; ret
0x000002000045c8e2 : add dword ptr [rcx + 0xf], eax ; mov bh, 0x14 ; or byte ptr [rbx], bh ; ret 0x2c75
0x0000020000696e1e : add dword ptr [rcx + 0xf], eax ; mov bh, 0x14 ; or dword ptr [rbx], edi ; ret 0x1e74
0x00000200000f7dd9 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret
0x0000020000209e0e : add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x8341
0x00000200005f99ef : add dword ptr [rcx + 3], eax ; ret 0x3b41
0x00000200006925c3 : add dword ptr [rcx + 3], eax ; ret 0x4589
0x00000200006925fd : add dword ptr [rcx + 3], eax ; ret 0x8948
0x00000200000269d4 : add dword ptr [rcx + 3], ecx ; ret
0x000002000024aa15 : add dword ptr [rcx + 3], ecx ; ret 0x3b4c
0x0000020000080c57 : add dword ptr [rcx + 3], ecx ; ret 0x8948
0x00000200006a0a71 : add dword ptr [rcx + 3], ecx ; ret 0x894d
0x00000200001a6668 : add dword ptr [rcx + 8], eax ; jmp 0x200000e2916
0x000002000044f00c : add dword ptr [rcx + 8], edx ; inc dword ptr [rcx + 0xc] ; ret
0x00000200000e93e7 : add dword ptr [rcx + rax + 0x48060000], -0x7f ; ret
0x000002000016799a : add dword ptr [rcx + rax + 0x48070000], -0x7f ; ret
0x00000200000ed034 : add dword ptr [rcx + rax - 0x3d], esi ; mov al, 1 ; ret
0x000002000004fccc : add dword ptr [rcx + rax*8 + 0x28], eax ; cmp edx, 7 ; je 0x2000004fcdf ; ret
0x00000200003e7239 : add dword ptr [rcx + rbp - 0x17], esi ; xchg eax, ecx ; ret 0x19
0x000002000054d467 : add dword ptr [rcx + rbx - 0x75], esi ; ret 0xc1f6
0x0000020000088a92 : add dword ptr [rcx + rbx*8 - 0x15], esi ; out dx, eax ; xor eax, eax ; ret
0x00000200001d9c37 : add dword ptr [rcx + rcx*4 + 0x4d], eax ; ret
0x00000200006f6e90 : add dword ptr [rcx + rcx*4 + 0x4d], ecx ; adc byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000019f6ba : add dword ptr [rcx + rcx*4 + 0x7c], ecx ; and al, 0x20 ; call rax
0x00000200001d6904 : add dword ptr [rcx + rcx*4 + 0xa], ecx ; ret
0x00000200005695f4 : add dword ptr [rcx + rcx*4 + 2], ecx ; ret
0x00000200004d11e7 : add dword ptr [rcx + rsi + 0xf], esi ; mov dh, 0x5d ; add esi, esi ; ret
0x0000020000211776 : add dword ptr [rcx - 0x11], edi ; mov eax, edx ; ret
0x00000200001d4636 : add dword ptr [rcx - 0x13], edi ; or eax, 0xffffffff ; ret
0x00000200004472c4 : add dword ptr [rcx - 0x17fa14ff], ecx ; jmp qword ptr [rsi]
0x000002000061bf4b : add dword ptr [rcx - 0x19], edi ; ret
0x000002000008573f : add dword ptr [rcx - 0x3a], eax ; adc byte ptr [rax], al ; ret
0x0000020000085658 : add dword ptr [rcx - 0x3a], eax ; adc byte ptr [rcx], al ; ret
0x00000200001cc486 : add dword ptr [rcx - 0x3fccf7bf], ecx ; ret
0x00000200007c867b : add dword ptr [rcx - 0x4a64b5c3], ecx ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000e86dd : add dword ptr [rcx - 0x72b7fbb9], ecx ; sbb r14b, r14b ; ret
0x000002000018b2df : add dword ptr [rcx - 0x73], ecx ; loopne 0x2000018b2f6 ; ret 0x348
0x0000020000718921 : add dword ptr [rcx - 0x74b7c7b9], ecx ; ret
0x00000200006a0fd7 : add dword ptr [rcx - 0x75], eax ; adc byte ptr [rcx + 0x23], al ; ret
0x00000200000121ff : add dword ptr [rcx - 0x75], eax ; ret
0x00000200000e6c36 : add dword ptr [rcx - 0x75], eax ; ret 0x348
0x0000020000565ee9 : add dword ptr [rcx - 0x75], eax ; ret 0x41c3
0x0000020000056b24 : add dword ptr [rcx - 0x75], eax ; ret 0xb0c3
0x000002000059d209 : add dword ptr [rcx - 0x75], eax ; ret 0xd8f7
0x00000200004672e0 : add dword ptr [rcx - 0x75], ecx ; iretd ; call 0x200004035d6
0x0000020000483342 : add dword ptr [rcx - 0x75], ecx ; iretd ; call r12
0x000002000048303f : add dword ptr [rcx - 0x75], ecx ; iretd ; call rsi
0x00000200000b426e : add dword ptr [rcx - 0x75], ecx ; ret
0x00000200004a2bb3 : add dword ptr [rcx - 0x75], ecx ; ret 0x3b4c
0x00000200000e4ccd : add dword ptr [rcx - 0x75], ecx ; ret 0x8b4c
0x000002000003f4cb : add dword ptr [rcx - 0x75], ecx ; ror byte ptr [rcx + 0xf], 0xaf ; ret
0x00000200000df135 : add dword ptr [rcx - 0x75], ecx ; sub byte ptr [r9 + 0x23], r9b ; ret
0x00000200004af7d0 : add dword ptr [rcx - 0x75], ecx ; xor r8b, r13b ; mov dh, 0x56 ; ret
0x00000200001903b2 : add dword ptr [rcx - 0x76], eax ; ret 0xf824
0x00000200003eb585 : add dword ptr [rcx - 0x77], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4938
0x00000200003fd304 : add dword ptr [rcx - 0x77], eax ; add byte ptr [rcx + 0x3b], al ; ret
0x0000020000140236 : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 1] ; ret 0xff48
0x0000020000491f64 : add dword ptr [rcx - 0x79], ecx ; sbb byte ptr [rcx - 0x7f], al ; ret 0x1000
0x0000020000491f63 : add dword ptr [rcx - 0x79], r9d ; sbb byte ptr [rcx - 0x7f], al ; ret 0x1000
0x00000200003fdbd9 : add dword ptr [rcx - 0x7af0808b], ecx ; ret
0x0000020000432159 : add dword ptr [rcx - 0x7c], eax ; ret 0x1774
0x00000200001f3d97 : add dword ptr [rcx - 0x7c], eax ; ret 0xe75
0x00000200006692f7 : add dword ptr [rcx - 0x7cb6e7af], ecx ; add ch, byte ptr [rax] ; ret
0x0000020000669238 : add dword ptr [rcx - 0x7cb6efaf], ecx ; add bl, byte ptr [rax] ; ret
0x00000200002146b2 : add dword ptr [rcx - 0x7cb7fcbd], ecx ; ret
0x0000020000145e9a : add dword ptr [rcx - 0x7d], eax ; ret
0x0000020000212344 : add dword ptr [rcx - 0x7d], eax ; ret 0x4402
0x0000020000055bba : add dword ptr [rcx - 0x7d], eax ; ret 0x4410
0x000002000078dede : add dword ptr [rcx - 0x7d], eax ; ret 0x48f8
0x000002000078e137 : add dword ptr [rcx - 0x7d], eax ; ret 0x49f8
0x0000020000126227 : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x0000020000703b37 : add dword ptr [rcx - 0x7f], -0x3e ; ret
0x000002000023b57a : add dword ptr [rcx - 0x7f], ecx ; ret 0xf1
0x00000200000b3f25 : add dword ptr [rcx - 0xa], eax ; ret 0xf08
0x00000200001e20d1 : add dword ptr [rcx - 1], ecx ; ret
0x000002000069dad9 : add dword ptr [rcx - 1], ecx ; ret 0x209
0x000002000069dbc5 : add dword ptr [rcx - 1], ecx ; ret 0x3141
0x0000020000401eb8 : add dword ptr [rcx], -1 ; je 0x20000401ec3 ; ret
0x00000200005d1224 : add dword ptr [rcx], 0x5d ; add bh, bh ; add dword ptr [rbp], ebx ; ret
0x000002000043d905 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000664824 : add dword ptr [rcx], eax ; mov eax, 1 ; ret
0x00000200005355a3 : add dword ptr [rcx], eax ; mov edi, 0x75c084ff ; or al, 0xff ; ret
0x000002000024c471 : add dword ptr [rcx], eax ; sidt ptr [rdx] ; ret
0x000002000061bf46 : add dword ptr [rcx], eax ; sub rdx, 1 ; jns 0x2000061bf3d ; ret
0x0000020000230278 : add dword ptr [rcx], ebx ; ret
0x000002000004e089 : add dword ptr [rcx], edi ; ret
0x00000200004c9942 : add dword ptr [rcx], edx ; add dh, dh ; ret
0x000002000069cdcf : add dword ptr [rcx], esp ; lahf ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000230277 : add dword ptr [rcx], r11d ; ret
0x0000020000664823 : add dword ptr [rcx], r8d ; mov eax, 1 ; ret
0x00000200001af619 : add dword ptr [rdi + 0x1e6], eax ; jmp 0x200001af5eb
0x0000020000711c17 : add dword ptr [rdi + 0x2d], esi ; call 0x2000020dec1
0x00000200005355a4 : add dword ptr [rdi + 0x75c084ff], edi ; or al, 0xff ; ret
0x0000020000568889 : add dword ptr [rdi + 7], esi ; mov dword ptr [rip - 0x265b2a], ecx ; ret
0x000002000011a715 : add dword ptr [rdi + rax - 0x75], esi ; add eax, 0x28d966 ; ret
0x00000200001271cf : add dword ptr [rdi + rax - 1], esi ; ret
0x00000200002410e6 : add dword ptr [rdi + rax*2 - 0xa], esi ; ret
0x00000200004816ca : add dword ptr [rdi + rbp*2 - 0x75], esi ; ret
0x0000020000688034 : add dword ptr [rdi + rcx + 0x45], eax ; ret
0x00000200000626e1 : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0x8b41
0x00000200005b27d4 : add dword ptr [rdi + rcx - 1], esi ; ret
0x00000200000450c5 : add dword ptr [rdi - 0x15], esi ; xor eax, eax ; ret
0x000002000022cfff : add dword ptr [rdi - 0x50], edi ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013a509 : add dword ptr [rdi], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000006328 : add dword ptr [rdi], ecx ; adc dword ptr [rcx + 0x10], ecx ; add rsp, 0x28 ; ret
0x0000020000210121 : add dword ptr [rdi], ecx ; adc dword ptr [rcx + 0x40], eax ; ret
0x000002000024c472 : add dword ptr [rdi], ecx ; add dword ptr [rdx], ecx ; ret
0x0000020000478f8a : add dword ptr [rdi], ecx ; ja 0x20000478f93 ; ret
0x00000200004a05af : add dword ptr [rdi], ecx ; lea ecx, dword ptr [rsi + rdi*8 + 0x55e9ffff] ; call qword ptr [rdx]
0x000002000013d2d1 : add dword ptr [rdi], ecx ; mov bh, 0xa ; sub eax, ecx ; ret
0x00000200006265c1 : add dword ptr [rdi], ecx ; mov bh, 0xd0 ; jne 0x200006265d7 ; call 0x2000024da49
0x00000200005dd689 : add dword ptr [rdi], ecx ; mov dword ptr [rax], esi ; ret
0x00000200000f21c5 : add dword ptr [rdi], ecx ; mov edx, 0x3721ee0 ; xor eax, eax ; ret
0x00000200003eec32 : add dword ptr [rdi], ecx ; mov edx, 0xf09fad25 ; call qword ptr [rsi]
0x000002000043e3b7 : add dword ptr [rdi], ecx ; ret 0x189
0x000002000003830f : add dword ptr [rdi], ecx ; ret 0x7d80
0x0000020000151a3c : add dword ptr [rdi], ecx ; scasb al, byte ptr [rdi] ; clc ; ret
0x00000200001e8c02 : add dword ptr [rdi], ecx ; test bh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x25
0x0000020000024699 : add dword ptr [rdi], ecx ; test bh, dl ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x000002000053b049 : add dword ptr [rdi], ecx ; test bl, ah ; cld ; or al, byte ptr [rax] ; ret
0x00000200000729f3 : add dword ptr [rdi], ecx ; test byte ptr [rbx], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200004c993e : add dword ptr [rdi], ecx ; test byte ptr [rdi - 0x9ffeeff], ch ; ret
0x000002000013dff7 : add dword ptr [rdi], ecx ; test byte ptr [rdx - 0x74fffffa], bh ; ret
0x00000200007b4a85 : add dword ptr [rdi], ecx ; test byte ptr [rdx - 0xfffe92], bl ; ret
0x0000020000050439 : add dword ptr [rdi], ecx ; test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000011da2 : add dword ptr [rdi], ecx ; test byte ptr [rip - 0xffeae5], al ; ret
0x000002000019a52c : add dword ptr [rdi], ecx ; test dh, dh ; xlatb ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200005df7e1 : add dword ptr [rdi], ecx ; test dword ptr [rax + rax - 0x74b80000], ebp ; ret
0x000002000011866e : add dword ptr [rdi], ecx ; test dword ptr [rax - 0x75000000], ecx ; ret 0x6b48
0x00000200004ad1ad : add dword ptr [rdi], ecx ; test dword ptr [rax - 0x9ffedab], ebx ; ret
0x00000200000b4209 : add dword ptr [rdi], ecx ; test dword ptr [rbp + rdi*8 - 1], edx ; dec dword ptr [rcx - 0x75] ; ret 0xba48
0x000002000043d1a5 : add dword ptr [rdi], ecx ; test dword ptr [rbp - 0xa000000], ebx ; ret 0xf02
0x00000200000ba6d8 : add dword ptr [rdi], ecx ; test dword ptr [rbx + rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200007a93e2 : add dword ptr [rdi], ecx ; test dword ptr [rbx - 0x74fffe1a], ebx ; ret
0x0000020000187764 : add dword ptr [rdi], ecx ; test dword ptr [rcx + 0x6f], esp ; out dx, al ; dec dword ptr [rcx - 0x75] ; ret
0x00000200007b6b51 : add dword ptr [rdi], ecx ; test dword ptr [rcx - 0x74fffeaf], ecx ; ret
0x000002000042fe62 : add dword ptr [rdi], ecx ; test dword ptr [rdi - 0x9ffffff], ebp ; ret
0x00000200004f05a5 : add dword ptr [rdi], ecx ; test dword ptr [rdx + 0x2a], esp ; str word ptr [rbp + 0x3b] ; ret
0x00000200000dc4e3 : add dword ptr [rdi], ecx ; test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000002000009eb69 : add dword ptr [rdi], ecx ; test dword ptr [rsi], esi ; push rbx ; str word ptr [rbp - 0x7b] ; ret 0x850f
0x00000200000d8ac5 : add dword ptr [rdi], ecx ; test dword ptr [rsi], esp ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x000002000009e48f : add dword ptr [rdi], ecx ; test eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000153cf : add dword ptr [rdi], ecx ; test ebp, edx ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000515a87 : add dword ptr [rdi], ecx ; test ebp, esp ; ret
0x00000200001060a3 : add dword ptr [rdi], ecx ; test ebx, ebp ; ret 6
0x000002000009fd65 : add dword ptr [rdi], ecx ; test ebx, ebx ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x0000020000065d50 : add dword ptr [rdi], ecx ; test ecx, esp ; call qword ptr [rcx]
0x000002000058ecf1 : add dword ptr [rdi], ecx ; test edi, ebp ; jno 0x2000058ece7 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000414fbc : add dword ptr [rdi], ecx ; test edx, eax ; call qword ptr [rdi]
0x0000020000414fae : add dword ptr [rdi], ecx ; test edx, ecx ; call qword ptr [rdi]
0x0000020000401efc : add dword ptr [rdi], ecx ; test edx, edi ; ret
0x00000200000e36e4 : add dword ptr [rdi], ecx ; test esi, ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000d7234 : add dword ptr [rdi], ecx ; test esp, ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000d184e : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x00000200001a272d : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xf640
0x000002000000c64f : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000200005aed80 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x1389
0x00000200001cc473 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5188
0x000002000070b251 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x9ee8
0x00000200005aff29 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xca32
0x00000200005aff3b : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd202
0x00000200006b761c : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf41
0x000002000057f3df : add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x000002000022a5b2 : add dword ptr [rdx + 0x14], edx ; xor eax, eax ; ret
0x00000200007b0a2e : add dword ptr [rdx + 0x18], eax ; add rsp, 0x28 ; ret
0x000002000042d85b : add dword ptr [rdx + 0x18], eax ; ret
0x00000200005136e3 : add dword ptr [rdx + 0x22c18a03], esi ; ret 0xc23a
0x00000200001d3fbd : add dword ptr [rdx + 0xad90], ecx ; add dh, dh ; ret 0x7402
0x00000200006a20cf : add dword ptr [rdx + 0xf], eax ; mov bh, 0x14 ; adc dword ptr [rbx], ebp ; ret 0x875
0x00000200006734d0 : add dword ptr [rdx + 0xf], eax ; mov bh, 0x14 ; add dword ptr [rbx], ebp ; ret 0x875
0x00000200005eee1d : add dword ptr [rdx + 0xf], eax ; mov dh, 0x14 ; add dword ptr [rbx], ebp ; ret 0x775
0x0000020000235782 : add dword ptr [rdx + 3], esi ; xor al, al ; ret
0x0000020000109e43 : add dword ptr [rdx + 8], -8 ; ret
0x00000200005fed92 : add dword ptr [rdx + rcx - 0x45], esi ; or eax, 0xe9c00000 ; ret 1
0x000002000051ab8c : add dword ptr [rdx + rcx*8 + 0x10], eax ; mov qword ptr [r10 + 8], rdx ; ret
0x0000020000091d85 : add dword ptr [rdx + rdi - 0x3f], eax ; jne 0x20000091d92 ; ret
0x0000020000081784 : add dword ptr [rdx + rdx*8 - 0x49f0eb8c], eax ; ret 0x2b41
0x0000020000058f53 : add dword ptr [rdx - 0x3274b630], ecx ; call 0x20000075198
0x0000020000138a28 : add dword ptr [rdx - 0x3b7cb73d], ecx ; push rax ; pop rbx ; ret
0x0000020000050d37 : add dword ptr [rdx - 0x3fcd3c3f], ecx ; ret
0x0000020000237be2 : add dword ptr [rdx - 0x75], ecx ; push rsp ; ret
0x00000200000e6faa : add dword ptr [rdx], 0 ; add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x000002000066923d : add dword ptr [rdx], 0x18 ; ret
0x00000200006692fc : add dword ptr [rdx], 0x28 ; ret
0x00000200000656c4 : add dword ptr [rdx], 0x48d0000 ; adc dword ptr [rcx + 0x3b], eax ; ret
0x000002000013f6e6 : add dword ptr [rdx], 2 ; add rsp, 0x38 ; ret
0x0000020000041f3a : add dword ptr [rdx], eax ; add byte ptr [rsi - 1], ah ; ret
0x0000020000044b21 : add dword ptr [rdx], eax ; ret
0x0000020000793dae : add dword ptr [rdx], ebp ; ret
0x0000020000214dd4 : add dword ptr [rdx], ecx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000024c474 : add dword ptr [rdx], ecx ; ret
0x0000020000417c4c : add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x000002000016ced1 : add dword ptr [rdx], edi ; ret
0x000002000011e7cb : add dword ptr [rdx], edi ; sub r8, 1 ; jne 0x2000011e7cf ; ret
0x0000020000065b25 : add dword ptr [rdx], edx ; add dh, dh ; ret
0x00000200005c8354 : add dword ptr [rdx], esi ; fdiv st(6) ; ret
0x000002000049a3b8 : add dword ptr [rdx], esi ; ret 0x8188
0x00000200001d3ff3 : add dword ptr [rip + 0x1513ff], eax ; ret
0x00000200000c68b7 : add dword ptr [rip + 0x23add6], 2 ; mov al, 1 ; ret
0x000002000051c013 : add dword ptr [rip - 0x3774b800], eax ; call 0x2000013fb99
0x00000200006edc23 : add dword ptr [rsi + 0x31], edx ; or eax, 0x30dbde31 ; ret 0xc556
0x0000020000132717 : add dword ptr [rsi + 0x39], esp ; add sil, byte ptr [r10 + 3] ; mov al, 1 ; ret
0x00000200006d25be : add dword ptr [rsi + 0x3b], esp ; ret 0x3f74
0x000002000001fc0f : add dword ptr [rsi + 0x3b], esp ; ret 0x840f
0x00000200000b20f0 : add dword ptr [rsi + 0x41000005], -1 ; ret 0x8b48
0x000002000007bb1d : add dword ptr [rsi + 1], edi ; ret
0x0000020000519e91 : add dword ptr [rsi + 4], esi ; xor ecx, ecx ; call rax
0x000002000008de26 : add dword ptr [rsi + 6], edi ; add rsp, 0x20 ; pop rbx ; ret
0x000002000009bf5c : add dword ptr [rsi + rax + 0x48], esi ; add esp, 0x20 ; pop rbx ; ret
0x00000200004aa102 : add dword ptr [rsi + rax - 0x48], esi ; add byte ptr [rax], al ; add al, 0 ; ret
0x00000200001e209c : add dword ptr [rsi + rax - 0x75], esi ; ret 0x149
0x00000200001e06ad : add dword ptr [rsi + rax - 0x75], esi ; ret 0xe8d1
0x00000200004207da : add dword ptr [rsi + rax - 1], esi ; ret
0x000002000015446a : add dword ptr [rsi + rcx - 0x18], esi ; ret 0x831
0x000002000012d8a9 : add dword ptr [rsi + rcx - 0x73], esi ; or r14b, sil ; ret 0x8d02
0x00000200000c1aa7 : add dword ptr [rsi + rcx*2 - 0xa], esi ; ret
0x00000200000e096c : add dword ptr [rsi + rdx + 0xf], esi ; mov bh, 0x47 ; add bh, bh ; ret 0x348
0x00000200004662c3 : add dword ptr [rsi + rdx*2 + 0x33], esi ; shr al, cl ; xchg eax, ebx ; ret
0x0000020000609cfe : add dword ptr [rsi - 0x77], esp ; pop rbp ; ror byte ptr [rax - 0x77], 0x45 ; ret 0x4589
0x000002000005f92c : add dword ptr [rsi - 0x7d], esp ; rol byte ptr [rdx], 0x66 ; mov dword ptr [rcx + 2], eax ; ret
0x000002000050a7fe : add dword ptr [rsi - 1], esp ; ret 0x8d48
0x000002000015d8d6 : add dword ptr [rsi], 0 ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x000002000002ad8b : add dword ptr [rsp + rax + 0x48], esi ; and dword ptr [rcx], eax ; ret
0x00000200001c0d1d : add dword ptr [rsp + rbx - 1], esi ; ret
0x0000020000532460 : add dword ptr cs:[rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000249147 : add dword ptr cs:[rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xba49
0x000002000003e55b : add dword ptr ds:[rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200000288bb : add dword ptr ds:[rax], eax ; add byte ptr [rbp - 0x1277f00a], al ; call qword ptr [rbx]
0x0000020000610c60 : add dword ptr ds:[rbp + rax - 0xa], esi ; ret
0x000002000051ddb5 : add dword ptr es:[rax], eax ; add rsp, 0x38 ; ret
0x00000200001de282 : add dword ptr fs:[rax], eax ; add byte ptr [rbx], dh ; dec dword ptr [rax - 9] ; ret
0x000002000049464a : add dx, cx ; movzx eax, dx ; ret
0x00000200003fa753 : add dx, r8w ; movzx r8d, dx ; jmp 0x200003fa704
0x00000200004a33e5 : add eax, -0x10 ; ret
0x0000020000044422 : add eax, -0x20 ; ret
0x00000200002425cd : add eax, -1 ; je 0x200002425e6 ; jmp 0x200002425c2
0x0000020000130da1 : add eax, -1 ; jne 0x20000130d9c ; ret
0x00000200001459f3 : add eax, -1 ; jne 0x200001459e9 ; mov rax, rdx ; jmp 0x20000145a06
0x00000200001469f6 : add eax, -1 ; jne 0x200001469ec ; mov rax, rdx ; jmp 0x20000146a09
0x0000020000146ce8 : add eax, -1 ; jne 0x20000146cde ; mov rax, rdx ; jmp 0x20000146cfb
0x00000200001471c5 : add eax, -1 ; jne 0x200001471bb ; mov rax, rdx ; jmp 0x200001471d8
0x000002000023bfc6 : add eax, -1 ; jne 0x2000023bfbc ; mov rax, rdx ; jmp 0x2000023bfd9
0x000002000023c66a : add eax, -1 ; jne 0x2000023c660 ; mov rax, rdx ; jmp 0x2000023c67d
0x000002000023c83f : add eax, -1 ; jne 0x2000023c835 ; mov rax, rdx ; jmp 0x2000023c852
0x000002000023d0fd : add eax, -1 ; jne 0x2000023d0f3 ; mov rax, rdx ; jmp 0x2000023d110
0x000002000023d203 : add eax, -1 ; jne 0x2000023d1f9 ; mov rax, rdx ; jmp 0x2000023d216
0x000002000023da69 : add eax, -1 ; jne 0x2000023da5f ; mov rax, rdx ; jmp 0x2000023da7c
0x000002000023deaa : add eax, -1 ; jne 0x2000023dea0 ; mov rax, rdx ; jmp 0x2000023debd
0x000002000023e169 : add eax, -1 ; jne 0x2000023e15f ; mov rax, rdx ; jmp 0x2000023e17c
0x000002000023e297 : add eax, -1 ; jne 0x2000023e28e ; mov rax, rdx ; jmp 0x2000023e2aa
0x000002000023fa65 : add eax, -1 ; jne 0x2000023fa5d ; xor esi, esi ; mov rax, rdx ; jmp 0x2000023fa7c
0x00000200002409ef : add eax, -1 ; jne 0x200002409e8 ; mov rax, rdx ; jmp 0x20000240a02
0x00000200002424b6 : add eax, -1 ; jne 0x200002424ac ; mov rax, rdx ; jmp 0x200002424c9
0x0000020000242a1f : add eax, -1 ; jne 0x20000242a15 ; mov rax, rdx ; jmp 0x20000242a32
0x0000020000242b27 : add eax, -1 ; jne 0x20000242b1d ; mov rax, rdx ; jmp 0x20000242b3a
0x0000020000243d84 : add eax, -1 ; jne 0x20000243d7a ; mov rax, rdx ; jmp 0x20000243d97
0x0000020000243fba : add eax, -1 ; jne 0x20000243fb0 ; mov rax, rdx ; jmp 0x20000243fcd
0x00000200002452bc : add eax, -1 ; jne 0x200002452b2 ; mov rax, rdx ; jmp 0x200002452cf
0x0000020000247776 : add eax, -1 ; jne 0x2000024776c ; mov rax, rdx ; jmp 0x20000247789
0x000002000024aa9f : add eax, -1 ; jne 0x2000024aa98 ; mov rax, rdx ; jmp 0x2000024aab2
0x00000200006f37a5 : add eax, -1 ; jne 0x200006f37a1 ; ret
0x000002000077f2f6 : add eax, -1 ; jne 0x2000077f2eb ; mov rax, rdx ; jmp 0x2000077f309
0x0000020000783a4c : add eax, -1 ; jne 0x20000783a42 ; mov rax, rdx ; jmp 0x20000783a5f
0x0000020000785359 : add eax, -1 ; jne 0x2000078534f ; mov rax, rdx ; jmp 0x2000078536c
0x0000020000786f41 : add eax, -1 ; jne 0x20000786f37 ; mov rax, rdx ; jmp 0x20000786f54
0x0000020000787157 : add eax, -1 ; jne 0x2000078714d ; mov rax, rdx ; jmp 0x2000078716a
0x00000200007878fb : add eax, -1 ; jne 0x200007878f1 ; mov rax, rdx ; jmp 0x2000078790e
0x0000020000788655 : add eax, -1 ; jne 0x2000078864b ; mov rax, rdx ; jmp 0x20000788668
0x0000020000788a1e : add eax, -1 ; jne 0x20000788a15 ; mov rax, rdx ; jmp 0x20000788a31
0x0000020000789296 : add eax, -1 ; jne 0x2000078928c ; mov rax, rdx ; jmp 0x200007892a9
0x0000020000789830 : add eax, -1 ; jne 0x20000789829 ; mov rax, rdx ; jmp 0x20000789843
0x0000020000498721 : add eax, -4 ; add rsp, 0x28 ; ret
0x000002000071aa01 : add eax, -8 ; ret
0x00000200001d7939 : add eax, 0 ; add byte ptr [rax], al ; jmp 0x200001d7928
0x000002000060fb87 : add eax, 0x10 ; add rax, rcx ; ret
0x0000020000225204 : add eax, 0x10 ; add rsp, 0x28 ; ret
0x0000020000213e9c : add eax, 0x10 ; jmp 0x20000213ec4
0x0000020000442877 : add eax, 0x10 ; ret
0x00000200000acdbd : add eax, 0x1000 ; jmp 0x200000acd8d
0x00000200004e511a : add eax, 0x108040d8 ; add rsp, 0x28 ; ret
0x000002000060fb85 : add eax, 0x10c08348 ; add rax, rcx ; ret
0x0000020000442875 : add eax, 0x10c08348 ; ret
0x00000200001dc54f : add eax, 0x116234 ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200001dc4ac : add eax, 0x1162d7 ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200001dc412 : add eax, 0x116371 ; call qword ptr [rax]
0x00000200001dc3a6 : add eax, 0x1163dd ; call qword ptr [rax]
0x00000200001dc358 : add eax, 0x11642b ; mov rbx, rcx ; call qword ptr [rax]
0x00000200001d6919 : add eax, 0x11f28e ; ret
0x00000200001d690d : add eax, 0x11f296 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000023637d : add eax, 0x11f95e ; ret
0x00000200001daefa : add eax, 0x12b861 ; ret
0x00000200001c0594 : add eax, 0x1392b7 ; call rax
0x00000200001c0269 : add eax, 0x1395e2 ; call rax
0x000002000007602d : add eax, 0x139c003 ; jae 0x20000076040 ; xor eax, eax ; ret
0x00000200001bfc10 : add eax, 0x139c3b ; call rax
0x00000200001d2e41 : add eax, 0x139dda ; ret
0x00000200001d2e59 : add eax, 0x139e2e ; mov dword ptr [rcx], eax ; ret
0x00000200001d2e49 : add eax, 0x139e36 ; ret
0x00000200001bf6d0 : add eax, 0x13a17b ; call rax
0x00000200001bf359 : add eax, 0x13a4f2 ; call rax
0x00000200001bedc8 : add eax, 0x13aa83 ; call rax
0x00000200001bed2a : add eax, 0x13ab21 ; call rax
0x00000200001becac : add eax, 0x13ab9f ; call rax
0x00000200001beb65 : add eax, 0x13ace6 ; call rax
0x00000200001be9de : add eax, 0x13ae6d ; call rax
0x00000200001be7b6 : add eax, 0x13b095 ; call rax
0x00000200001bcaa5 : add eax, 0x13b0ce ; je 0x200001bcab8 ; mov eax, ecx ; ret
0x00000200001be5a8 : add eax, 0x13b2a3 ; call rax
0x00000200001be4f2 : add eax, 0x13b359 ; call rax
0x00000200001be3f1 : add eax, 0x13b45a ; call rax
0x00000200001bd985 : add eax, 0x13bec6 ; call rax
0x00000200001bc9dc : add eax, 0x13ce6f ; call rax
0x00000200001bc33b : add eax, 0x13d510 ; call rax
0x00000200001bc00f : add eax, 0x13d83c ; call rax
0x00000200001bbddb : add eax, 0x13da70 ; call rax
0x00000200001e4b22 : add eax, 0x13de95 ; ret 0
0x0000020000213e92 : add eax, 0x14 ; jmp 0x20000213ec4
0x00000200000edcaa : add eax, 0x1408d41 ; ret
0x000002000069e3d7 : add eax, 0x14408d41 ; ret
0x000002000007a341 : add eax, 0x148448a ; ret
0x00000200000fcec6 : add eax, 0x14e0c148 ; ret
0x000002000000a30f : add eax, 0x14e92c ; ret
0x0000020000009923 : add eax, 0x14f248 ; ret
0x000002000000a349 : add eax, 0x1503d2 ; ret
0x000002000000a341 : add eax, 0x1503fa ; ret
0x000002000000a351 : add eax, 0x15040a ; ret
0x000002000000a359 : add eax, 0x150422 ; ret
0x000002000000a366 : add eax, 0x150455 ; ret
0x000002000000a339 : add eax, 0x150462 ; ret
0x0000020000009999 : add eax, 0x150c92 ; ret
0x00000200000098f5 : add eax, 0x150cd6 ; ret
0x00000200000099cc : add eax, 0x150cdf ; ret
0x0000020000009902 : add eax, 0x150d09 ; ret
0x00000200000098d6 : add eax, 0x150d15 ; ret
0x0000020000009912 : add eax, 0x150d39 ; ret
0x000002000000990a : add eax, 0x150d51 ; ret
0x0000020000009934 : add eax, 0x150d57 ; ret
0x000002000000995a : add eax, 0x150d81 ; ret
0x000002000000996f : add eax, 0x150d8c ; ret
0x00000200000098ed : add eax, 0x150d8e ; ret
0x0000020000009977 : add eax, 0x150da4 ; ret
0x00000200000099a6 : add eax, 0x150dd5 ; ret
0x0000020000009984 : add eax, 0x150dd7 ; ret
0x0000020000009952 : add eax, 0x150de9 ; ret
0x00000200000099ae : add eax, 0x150ded ; ret
0x0000020000009991 : add eax, 0x150e2a ; ret
0x00000200000099bf : add eax, 0x150e5c ; ret
0x0000020000009967 : add eax, 0x150ed4 ; ret
0x00000200001d3ff4 : add eax, 0x1513ff ; ret
0x0000020000717fd5 : add eax, 0x1516a ; ret
0x0000020000717e28 : add eax, 0x15313 ; add rsp, 0x58 ; ret
0x000002000055e955 : add eax, 0x1588bde8 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001c2f15 : add eax, 0x15e026 ; ret
0x000002000048f402 : add eax, 0x173e9 ; add byte ptr [rax + 0x63], cl ; ret
0x00000200001cbfc4 : add eax, 0x17510b ; ret
0x00000200005cd914 : add eax, 0x17a907 ; ret
0x0000020000564b2d : add eax, 0x18 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000213e88 : add eax, 0x18 ; jmp 0x20000213ec4
0x00000200002288c9 : add eax, 0x18097e ; mov dword ptr [r8], eax ; ret
0x00000200000bd642 : add eax, 0x18418b48 ; ret
0x0000020000171692 : add eax, 0x1881b9 ; call rax
0x000002000016d81f : add eax, 0x18cd54 ; mov rdx, qword ptr [rdx + rax*8] ; jmp 0x2000016d840
0x00000200001bc467 : add eax, 0x1975d8 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000004528f : add eax, 0x19894466 ; ret
0x0000020000070bb2 : add eax, 0x1a0 ; ret
0x000002000047410a : add eax, 0x1b00015 ; add rsp, 0x38 ; ret
0x0000020000711f74 : add eax, 0x1b13f ; ret
0x0000020000711f67 : add eax, 0x1b14c ; ret
0x000002000013f0c6 : add eax, 0x1b1f35 ; ret
0x0000020000029116 : add eax, 0x1b8 ; add bl, al ; xor eax, eax ; ret
0x00000200003ff535 : add eax, 0x1b9 ; add byte ptr [rax - 0x7d], cl ; ret 0xe850
0x000002000013fa7d : add eax, 0x1b914a ; and dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000013fa72 : add eax, 0x1b9155 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000013ac05 : add eax, 0x1b922e ; xor eax, eax ; ret
0x000002000013abee : add eax, 0x1b924d ; xor eax, eax ; ret
0x00000200007118bd : add eax, 0x1ba12 ; xor eax, eax ; ret
0x000002000013965d : add eax, 0x1ba79a ; add rsp, 0x28 ; ret
0x000002000009c4cd : add eax, 0x1bb ; add dh, dh ; ret 0xf02
0x000002000013aac3 : add eax, 0x1bb170 ; add rsp, 0x28 ; ret
0x0000020000025d42 : add eax, 0x1be ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000077843f : add eax, 0x1be ; add byte ptr [rbx], ch ; ret
0x0000020000213e7e : add eax, 0x1c ; jmp 0x20000213ec4
0x00000200005ce323 : add eax, 0x1c ; movzx ecx, al ; call r10
0x000002000013a1a8 : add eax, 0x1c729b ; add rsp, 0x78 ; ret
0x000002000069a9bd : add eax, 0x1c855e8 ; add byte ptr [rax - 0x75], cl ; ret 0xb948
0x0000020000157a59 : add eax, 0x1c9316 ; ret
0x000002000069a536 : add eax, 0x1ccdce8 ; add byte ptr [rax - 0x75], cl ; ret 0xb849
0x0000020000157a3d : add eax, 0x1cd8d7 ; ret
0x0000020000157a35 : add eax, 0x1cd8e2 ; ret
0x00000200001d849a : add eax, 0x1cfbb9 ; add rsp, 0x28 ; ret
0x00000200001d3f08 : add eax, 0x1d4107 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200001d36c1 : add eax, 0x1d49ae ; ret
0x00000200001d3ab6 : add eax, 0x1d5add ; ret
0x00000200001d21d4 : add eax, 0x1d7087 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200006996be : add eax, 0x1db54e8 ; add byte ptr [rax - 0x75], cl ; ret 0xb849
0x000002000013ac5a : add eax, 0x1de8a9 ; ret
0x00000200001c9ac1 : add eax, 0x1df9ca ; call rax
0x000002000011617d : add eax, 0x1dfab6 ; ret
0x0000020000138db8 : add eax, 0x1ea414 ; xor eax, eax ; ret
0x00000200001bc1f9 : add eax, 0x1ed0a2 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200001bc3bf : add eax, 0x1ed14c ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200001bbc1e : add eax, 0x1ed609 ; ret
0x00000200001bad1c : add eax, 0x1ee76f ; call rax
0x00000200001baca3 : add eax, 0x1ee7e8 ; call rax
0x00000200001bab5c : add eax, 0x1ee92f ; call r8
0x00000200004ae4e8 : add eax, 0x1eee9 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000137b90 : add eax, 0x1f0f7f ; xor eax, eax ; ret
0x0000020000131ed4 : add eax, 0x1f34a7 ; je 0x20000131ef7 ; call rcx
0x0000020000130126 : add eax, 0x1f51f1 ; ret
0x00000200004beb29 : add eax, 0x1f86e9e8 ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000408d3a : add eax, 0x20 ; add rsp, 0x28 ; ret
0x00000200004f58e2 : add eax, 0x20 ; ret
0x00000200004a91f8 : add eax, 0x20418d48 ; ret
0x0000020000120c1b : add eax, 0x2042e0 ; or dword ptr [rax], eax ; add byte ptr [rax], al ; call rdi
0x00000200000cf653 : add eax, 0x2048d4a ; ret
0x000002000053d5ca : add eax, 0x20b261 ; ret
0x00000200004a86df : add eax, 0x20eb33e8 ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x34c
0x00000200001020e5 : add eax, 0x21f3b6 ; xor eax, eax ; ret
0x0000020000182a3b : add eax, 0x226a50 ; call rax
0x00000200000fd10a : add eax, 0x226c91 ; shl rax, 0xc ; ret
0x000002000017b5b2 : add eax, 0x22ded9 ; call rax
0x0000020000517440 : add eax, 0x23185f ; mov word ptr [rdx], ax ; ret
0x00000200001399c4 : add eax, 0x234c0000 ; ret 0xd08a
0x00000200000c94c3 : add eax, 0x2381cc ; call r8
0x00000200000c66f3 : add eax, 0x23af9c ; call r8
0x0000020000091db2 : add eax, 0x23c0000 ; je 0x20000091dc1 ; ret
0x00000200000cefd7 : add eax, 0x23dca8 ; call 0x2000003b25f
0x00000200000bf6c3 : add eax, 0x240b78 ; ret
0x0000020000038256 : add eax, 0x24418b00 ; ret
0x00000200004a91e0 : add eax, 0x24418d48 ; ret
0x00000200000de68b : add eax, 0x246df0 ; ret
0x00000200001579fb : add eax, 0x25182c ; ret
0x00000200000c45a8 : add eax, 0x25d7ab ; add rsp, 0x28 ; ret
0x0000020000147d8e : add eax, 0x260525 ; call rax
0x00000200000bdb97 : add eax, 0x264c0c ; ret
0x0000020000157b5a : add eax, 0x265d79 ; ret
0x00000200000b94d8 : add eax, 0x269ae7 ; setne al ; ret
0x0000020000705988 : add eax, 0x27937 ; add rsp, 0x58 ; ret
0x000002000012d291 : add eax, 0x27bf6e ; add rsp, 0x28 ; ret
0x00000200001289ef : add eax, 0x280a4c ; sete al ; ret
0x00000200000a0dd7 : add eax, 0x2833e4 ; ret
0x0000020000043964 : add eax, 0x28418b48 ; ret
0x0000020000231585 : add eax, 0x2841b70f ; ret
0x0000020000031087 : add eax, 0x2841fff0 ; ret
0x000002000009d9e6 : add eax, 0x2857cd ; mov rax, qword ptr [rax + rcx*8] ; ret
0x0000020000123bc4 : add eax, 0x2858c7 ; call rax
0x0000020000123abd : add eax, 0x2859ce ; call rax
0x00000200000a0e50 : add eax, 0x285b2b ; ret
0x00000200001237a9 : add eax, 0x285ce2 ; call rax
0x0000020000123657 : add eax, 0x285e34 ; call rax
0x00000200001235b0 : add eax, 0x285edb ; call rax
0x000002000009d9f2 : add eax, 0x287a89 ; ret
0x00000200001dc153 : add eax, 0x28aebfe8 ; add bh, bh ; ret
0x000002000001beac : add eax, 0x28c48348 ; ret
0x000002000011a719 : add eax, 0x28d966 ; ret
0x000002000011a729 : add eax, 0x28db02 ; ret
0x0000020000084355 : add eax, 0x29e612 ; mov dword ptr [r9], eax ; ret
0x000002000005ccfe : add eax, 0x2a33a5 ; ret
0x000002000005ccee : add eax, 0x2a33c5 ; ret
0x000002000005ccdc : add eax, 0x2a340f ; ret
0x000002000007b0ec : add eax, 0x2a6d77 ; ret
0x00000200000fce2c : add eax, 0x2ac423 ; ret
0x00000200000f82f9 : add eax, 0x2afda6 ; ret
0x00000200000f7f6d : add eax, 0x2b01a2 ; ret
0x00000200000f5c6e : add eax, 0x2b238d ; dec eax ; ret
0x00000200000f5572 : add eax, 0x2b2a95 ; ret
0x0000020000070bba : add eax, 0x2b36a1 ; ret
0x000002000004442d : add eax, 0x2b79e6 ; mov qword ptr [rdx], rax ; ret
0x00000200005b2baa : add eax, 0x2b9 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret 0xff41
0x0000020000044d86 : add eax, 0x2bacbd ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000042ee56 : add eax, 0x2bbbcd ; ret
0x00000200005f1660 : add eax, 0x2bffc883 ; ret 0x8b4c
0x000002000004530d : add eax, 0x2c0f32 ; add rsp, 0x28 ; ret
0x0000020000044db9 : add eax, 0x2c1bae ; ret
0x0000020000052b96 : add eax, 0x2cff0d ; movdqu xmmword ptr [rcx], xmm0 ; ret
0x0000020000052b7a : add eax, 0x2d1229 ; sub rax, rcx ; ret
0x0000020000052872 : add eax, 0x2d15e1 ; ret
0x000002000005284d : add eax, 0x2d19ee ; ret
0x0000020000044d99 : add eax, 0x2dc182 ; ret
0x00000200006ff48b : add eax, 0x2dcac ; ret
0x0000020000044dca : add eax, 0x2defc9 ; ret
0x0000020000044d62 : add eax, 0x2e0691 ; ret
0x0000020000041e44 : add eax, 0x2e0b67 ; mov qword ptr [rdx], rax ; ret
0x00000200000c663b : add eax, 0x2e2bc4 ; ret
0x00000200000c5b1f : add eax, 0x2e36e0 ; ret
0x000002000001f940 : add eax, 0x2e702b ; add rsp, 0x28 ; ret
0x000002000003991d : add eax, 0x2ede8 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000000f091 : add eax, 0x2f095a ; ret
0x000002000045695d : add eax, 0x2f18c6 ; ret
0x00000200004561bd : add eax, 0x2f1e7d ; ret
0x000002000002e516 : add eax, 0x2f3d4c ; add dword ptr [rbp - 0x75], ecx ; ret 0xc2eb
0x000002000000bf83 : add eax, 0x2f5649 ; setne al ; ret
0x0000020000015c80 : add eax, 0x30f7fb ; ret
0x0000020000097ee0 : add eax, 0x3103eb ; ret
0x0000020000097ed4 : add eax, 0x3103ef ; ret
0x0000020000090396 : add eax, 0x317c75 ; ret
0x000002000007892b : add eax, 0x330b60 ; call rax
0x000002000007885c : add eax, 0x330c2f ; call rax
0x0000020000078825 : add eax, 0x330c66 ; call rax
0x000002000007868d : add eax, 0x330dfe ; call rax
0x000002000007863f : add eax, 0x330e4c ; call rax
0x0000020000078477 : add eax, 0x331014 ; call rax
0x0000020000077827 : add eax, 0x331c64 ; call r8
0x00000200000776f6 : add eax, 0x331d95 ; call rax
0x000002000007762b : add eax, 0x331e60 ; call rax
0x00000200002483ed : add eax, 0x33480000 ; ret 0xd233
0x0000020000107576 : add eax, 0x33f63345 ; div dh ; ret
0x000002000007a619 : add eax, 0x342ee2 ; add rsp, 0x28 ; ret
0x0000020000065d4b : add eax, 0x343535 ; add dword ptr [rdi], ecx ; test ecx, esp ; call qword ptr [rcx]
0x0000020000418da6 : add eax, 0x3480000 ; ret 0x3b49
0x000002000024c492 : add eax, 0x3480000 ; ret 0x8348
0x000002000023edf0 : add eax, 0x34d0000 ; ret
0x000002000005a940 : add eax, 0x34eb4b ; call rax
0x0000020000059a00 : add eax, 0x34fa8b ; call rax
0x0000020000059952 : add eax, 0x34fb39 ; call rax
0x00000200000598a1 : add eax, 0x34fbea ; call rax
0x00000200000597f2 : add eax, 0x34fc99 ; call rax
0x00000200000596fa : add eax, 0x34fd91 ; call rax
0x00000200000596ac : add eax, 0x34fddf ; call rax
0x0000020000119a74 : add eax, 0x3600 ; ret
0x0000020000044d6d : add eax, 0x3634fa ; ret
0x0000020000044cbc : add eax, 0x3649b7 ; ret
0x0000020000044795 : add eax, 0x364cf6 ; call rax
0x0000020000044738 : add eax, 0x364d53 ; call rax
0x00000200000379d2 : add eax, 0x371ab9 ; call rax
0x0000020000037957 : add eax, 0x371b34 ; call rax
0x000002000067fce4 : add eax, 0x3752ee8 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004a472e : add eax, 0x378 ; add rsp, 0x28 ; ret
0x000002000002f07d : add eax, 0x37a40e ; call rax
0x000002000002ef02 : add eax, 0x37a589 ; call rax
0x0000020000029ca8 : add eax, 0x37f7e3 ; call rax
0x000002000070d0be : add eax, 0x3868ba0f ; adc al, 0xf6 ; ret
0x000002000000e380 : add eax, 0x38c48348 ; ret
0x000002000000c615 : add eax, 0x39bcde ; ret
0x000002000000c61c : add eax, 0x39bcdf ; ret
0x000002000001e20d : add eax, 0x39f2ee ; add rsp, 0x28 ; ret
0x00000200000036e1 : add eax, 0x3a5b26 ; ret
0x0000020000706080 : add eax, 0x3b000000 ; ret 0x850f
0x000002000001b2a2 : add eax, 0x3b490000 ; ret 0xa375
0x0000020000246543 : add eax, 0x3b4d0000 ; ret
0x00000200000bb751 : add eax, 0x3b660000 ; ret
0x0000020000157b68 : add eax, 0x3e0 ; ret
0x000002000014eacb : add eax, 0x40 ; jne 0x2000014eaa8 ; sfence ; ret
0x00000200000808d2 : add eax, 0x400 ; add rax, rdx ; ret
0x000002000053258b : add eax, 0x41800000 ; pop rsi ; ret
0x00000200001bcf72 : add eax, 0x420fc53b ; call 0x1ffc3addd10
0x00000200004aa097 : add eax, 0x43750000 ; ret
0x00000200000c8402 : add eax, 0x438d0000 ; jmp qword ptr [rbx]
0x0000020000236200 : add eax, 0x48 ; cmp r8, rdx ; jl 0x200002361f0 ; ret
0x0000020000118be4 : add eax, 0x48 ; ret
0x00000200001d16cd : add eax, 0x48000000 ; add esp, 0x20 ; pop rdi ; ret
0x000002000007cf27 : add eax, 0x48000000 ; add esp, 0x28 ; ret
0x00000200003e507f : add eax, 0x48000000 ; add esp, 0x38 ; ret
0x0000020000044e53 : add eax, 0x48000000 ; add esp, 0x48 ; ret
0x0000020000133b67 : add eax, 0x48000071 ; add esp, 0x20 ; pop rbx ; ret
0x000002000012da67 : add eax, 0x480000d2 ; add esp, 0x70 ; pop rbp ; ret
0x0000020000037f53 : add eax, 0x4801b000 ; add esp, 0x38 ; ret
0x0000020000032bf5 : add eax, 0x4801e083 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001253e4 : add eax, 0x480b8800 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000084757 : add eax, 0x48408b48 ; ret
0x00000200006101d0 : add eax, 0x48410348 ; ret
0x000002000049eb29 : add eax, 0x489d08b ; and al, 0x8b ; ret 0x8348
0x00000200001209cf : add eax, 0x48c03300 ; add esp, 0x28 ; ret
0x0000020000037cc9 : add eax, 0x48c38a00 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001d45f9 : add eax, 0x48c38a00 ; add esp, 0x30 ; pop rbx ; ret
0x0000020000530dcf : add eax, 0x48ffbc9d ; add esp, 0x70 ; pop rbx ; ret
0x00000200001d481f : add eax, 0x48ffea89 ; add esp, 0x38 ; ret
0x0000020000222167 : add eax, 0x48fff18b ; add esp, 0x60 ; pop rbp ; ret
0x00000200001cec67 : add eax, 0x48fff6c0 ; add esp, 0x58 ; ret
0x0000020000447d48 : add eax, 0x4c418d48 ; ret
0x000002000060fb78 : add eax, 0x50410348 ; ret
0x00000200001d0020 : add eax, 0x51fa5f ; ret
0x0000020000591481 : add eax, 0x5308ffd9 ; cmp byte ptr [rax - 0x7f], cl ; ret
0x0000020000662ebc : add eax, 0x54356e8 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200007053c8 : add eax, 0x55053 ; ret
0x000002000060ece8 : add eax, 0x58 ; add rax, rcx ; ret
0x0000020000517d0e : add eax, 0x589ad ; ret
0x0000020000517d30 : add eax, 0x589bb ; ret
0x0000020000517d20 : add eax, 0x589fb ; ret
0x0000020000517d28 : add eax, 0x58a23 ; ret
0x0000020000082202 : add eax, 0x58c48348 ; ret
0x0000020000792a24 : add eax, 0x58d48d0 ; ret
0x0000020000659b43 : add eax, 0x5d6cfe8 ; add byte ptr [rax - 0x75], cl ; ret 0xb948
0x000002000061f977 : add eax, 0x5e410000 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000020fdaa : add eax, 0x5f410000 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000011c81f : add eax, 0x5f894800 ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000020000157b91 : add eax, 0x6014aa ; ret
0x00000200003de222 : add eax, 0x610 ; ret
0x00000200000977c4 : add eax, 0x61fa4ee8 ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000078c994 : add eax, 0x6b03eac1 ; ret 0x2b1a
0x0000020000426d15 : add eax, 0x6bc0b70f ; enter 0xf25, -0x49 ; ret
0x0000020000504e3c : add eax, 0x6c7ff ; jmp 0x20000504e0b
0x0000020000030435 : add eax, 0x709a5e8 ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x0000020000031d47 : add eax, 0x717164 ; xor qword ptr [rdx], rax ; ret
0x0000020000015c6a : add eax, 0x732629 ; ret
0x000002000017e1f4 : add eax, 0x7408c3f6 ; sal esi, 1 ; ret
0x00000200000d3400 : add eax, 0x74de8549 ; and al, 0xf6 ; ret
0x0000020000054620 : add eax, 0x7503ff83 ; adc dh, dh ; ret
0x0000020000142c23 : add eax, 0x7520f983 ; cmp esi, esi ; ret
0x000002000004768c : add eax, 0x7540c1f6 ; and esi, esi ; ret 0x7502
0x000002000009349b : add eax, 0x75c00000 ; ret
0x00000200001a28a9 : add eax, 0x75c00000 ; sbb esi, esi ; ret
0x00000200000863c6 : add eax, 0x75c08545 ; add al, 0x41 ; mov eax, eax ; ret
0x000002000068a395 : add eax, 0x75c23b66 ; sub byte ptr [rsi + 0x3b], ah ; ret 0x575
0x0000020000122d4c : add eax, 0x75c28500 ; or byte ptr [rbx], cl ; ret 0x3345
0x0000020000050f5d : add eax, 0x7841014c ; ret
0x00000200000ed17b : add eax, 0x81480000 ; ret
0x0000020000246174 : add eax, 0x83188948 ; ret 0x48f8
0x00000200000bd824 : add eax, 0x83480000 ; ret
0x0000020000713fb9 : add eax, 0x83480673 ; ret
0x0000020000118863 : add eax, 0x83482e74 ; ret
0x0000020000788a46 : add eax, 0x83490000 ; ret 0x4808
0x00000200000985e0 : add eax, 0x83be0f00 ; ret
0x0000020000464a3b : add eax, 0x840b70f ; ret
0x000002000053b047 : add eax, 0x840f013c ; fdiv st(4), st(0) ; or al, byte ptr [rax] ; ret
0x0000020000026cd5 : add eax, 0x842894c ; ret
0x00000200000fd0ec : add eax, 0x85000af2 ; ret 0xad74
0x00000200004dba74 : add eax, 0x85410000 ; ret 0x850f
0x00000200006c42ec : add eax, 0x8545db33 ; test byte ptr [rdi], 0x95 ; ret
0x0000020000006a7f : add eax, 0x85480000 ; div byte ptr [rbx + rbx - 0xa] ; ret
0x00000200007caba1 : add eax, 0x8548ff97 ; ror byte ptr [rdi], 0x94 ; ret 0x49e9
0x000002000014c8b0 : add eax, 0x8941d033 ; adc al, byte ptr [rcx - 0x7d] ; ret
0x0000020000125f8c : add eax, 0x89446600 ; add cl, byte ptr [r8 - 0x7d] ; ret
0x000002000022ceb7 : add eax, 0x8a00029b ; ret
0x0000020000502a15 : add eax, 0x8a000e6f ; ret
0x0000020000120e62 : add eax, 0x8a01b300 ; ret
0x000002000020c1a4 : add eax, 0x8a440000 ; ret
0x00000200001fc254 : add eax, 0x8a455b75 ; ret
0x00000200001b9bbf : add eax, 0x8b001ef9 ; ret
0x0000020000687026 : add eax, 0x8b01b641 ; ret
0x0000020000099544 : add eax, 0x8b138b00 ; ret 0xba0f
0x0000020000050b1c : add eax, 0x8b1fe283 ; ret 0x8b4c
0x00000200001f6ded : add eax, 0x8b1fe283 ; ret 0xe083
0x00000200004bfa8d : add eax, 0x8b404631 ; ret
0x00000200002472f3 : add eax, 0x8b410000 ; ret 0x1b9
0x0000020000418d9a : add eax, 0x8b410000 ; ret 0x3b4d
0x00000200001650e2 : add eax, 0x8b440000 ; ret
0x00000200004aba6a : add eax, 0x8b440000 ; ret 0xb44
0x00000200007bbb03 : add eax, 0x8b44ffb4 ; ret
0x00000200000b05c7 : add eax, 0x8b480000 ; push rbx ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000145fcd : add eax, 0x8b480000 ; ret
0x0000020000244627 : add eax, 0x8b480000 ; ret 0x2eb
0x00000200000a2735 : add eax, 0x8b480000 ; ret 0x3b4c
0x0000020000783855 : add eax, 0x8b480000 ; ret 0x5c89
0x00000200002402a3 : add eax, 0x8b480000 ; ret 0x8948
0x0000020000242271 : add eax, 0x8b480000 ; ret 0x8b48
0x0000020000241a71 : add eax, 0x8b480000 ; ret 0x8b4c
0x000002000077fd3a : add eax, 0x8b480000 ; ret 0xc148
0x00000200000daa4f : add eax, 0x8b480000 ; sbb byte ptr [r9 + 0x23], cl ; ret 0x3d48
0x00000200000d24bc : add eax, 0x8b490000 ; ret
0x0000020000244120 : add eax, 0x8b490000 ; ret 0x894c
0x000002000024953a : add eax, 0x8b490000 ; ret 0x8b44
0x00000200002478a7 : add eax, 0x8b490000 ; ret 0x8b49
0x000002000064042e : add eax, 0x8b4c0000 ; ret
0x0000020000015a3d : add eax, 0x8b4c0000 ; ret 0xd233
0x000002000024216a : add eax, 0x8b4d0000 ; ret
0x000002000077fede : add eax, 0x8b4d0000 ; ret 0x8b45
0x00000200007d179f : add eax, 0x8b8 ; ret
0x0000020000075fd2 : add eax, 0x8bc93300 ; sar byte ptr [rbx], 1 ; ret
0x0000020000065a60 : add eax, 0x8bec8b4d ; ret 0x9c89
0x00000200006bb9fa : add eax, 0x8bf38a40 ; ret
0x0000020000669097 : add eax, 0x8bffa7ed ; ret
0x00000200005a54a7 : add eax, 0x8bffc0f7 ; ret
0x00000200005c6713 : add eax, 0x8bffece4 ; ret
0x000002000017609b : add eax, 0x8bfff9bf ; ret
0x00000200006101dd : add eax, 0x8c08348 ; add rax, rcx ; ret
0x00000200000d3a9a : add eax, 0x8c48348 ; ret
0x0000020000541410 : add eax, 0x8d410000 ; push rax ; add eax, ebp ; ret
0x00000200000e68b2 : add eax, 0x8d480000 ; pop rdi ; add dword ptr [rax - 0x7f], ecx ; jmp qword ptr [rax]
0x000002000047897e : add eax, 0x8d490000 ; add dword ptr [r8 + 0x3b], ecx ; ret 0x4773
0x00000200006ae34c : add eax, 0x8ec6e8 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000070b2e0 : add eax, 0x9361e2e8 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000053d7a5 : add eax, 0x940fd284 ; ret 0x349
0x00000200006b68a8 : add eax, 0x96ae8 ; add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x000002000047f715 : add eax, 0x9ce90000 ; adc eax, dword ptr [rax] ; add dh, dh ; ret 0x7401
0x00000200000eeb0e : add eax, 0xa23d8d0f ; or eax, dword ptr [rax] ; ret
0x00000200006a543d : add eax, 0xa52e91e8 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000021190e : add eax, 0xac00 ; ret
0x00000200005cc0e7 : add eax, 0xaee9ffec ; add al, 0xec ; push rsi ; ret 0xf10
0x000002000005745d : add eax, 0xb00002d ; ret 0x675
0x000002000069e3cd : add eax, 0xb418d41 ; ret
0x0000020000567e5f : add eax, 0xb480000 ; ret 0x1bf
0x000002000078c018 : add eax, 0xb480000 ; ret 0x8d48
0x000002000024734d : add eax, 0xb480000 ; ret 0x8d4c
0x00000200006925f8 : add eax, 0xb70f0000 ; add dword ptr [rcx + 3], eax ; ret 0x8948
0x00000200006b3f5f : add eax, 0xb70fc477 ; ret 0xe883
0x00000200001dbb86 : add eax, 0xb94775b8 ; jmp rax
0x0000020000195deb : add eax, 0xbbe99000 ; adc cl, dh ; push rsi ; ret 0x7401
0x0000020000018c58 : add eax, 0xbc0 ; ret
0x00000200001b1526 : add eax, 0xbd7e383 ; fdivrp st(6) ; ret
0x0000020000213ea6 : add eax, 0xc ; jmp 0x20000213ec4
0x00000200000377e6 : add eax, 0xc0000017 ; ret
0x00000200001715f9 : add eax, 0xc01bdaf7 ; add eax, 3 ; ret
0x00000200001dc622 : add eax, 0xc0330000 ; add rsp, 0x38 ; ret
0x000002000005acfe : add eax, 0xc0330000 ; ret
0x000002000003d408 : add eax, 0xc0330013 ; ret
0x00000200000733fb : add eax, 0xc0330476 ; jmp 0x200000733cb
0x00000200000ea7f6 : add eax, 0xc0850000 ; jne 0x200000ea82c ; movzx eax, dl ; ret
0x0000020000238d8a : add eax, 0xc0ac1 ; mov rcx, rdi ; call rax
0x0000020000238c31 : add eax, 0xc0c1a ; call rax
0x00000200004f6903 : add eax, 0xc18ac932 ; ret
0x0000020000214d85 : add eax, 0xc18b0000 ; ret
0x000002000005c4fe : add eax, 0xc2034d00 ; jmp r8
0x00000200005220a3 : add eax, 0xc25fc7e8 ; dec dword ptr [rax - 0x75] ; ret
0x000002000023676c : add eax, 0xc2627 ; jmp 0x200002367a1
0x000002000011e629 : add eax, 0xc4814800 ; enter 1, 0 ; ret
0x00000200006ff38d : add eax, 0xc4834800 ; pop rax ; ret
0x0000020000015ac5 : add eax, 0xc4834800 ; pop rbx ; ret
0x0000020000706590 : add eax, 0xc4834800 ; ret
0x00000200001209b3 : add eax, 0xc4834800 ; xor byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200001b3087 : add eax, 0xc601c ; mov qword ptr [rcx], rax ; ret
0x000002000051c014 : add eax, 0xc88b4800 ; call 0x2000013fb98
0x000002000005a311 : add eax, 0xc9034900 ; jmp rcx
0x000002000022df8e : add eax, 0xcb8bd ; call rax
0x000002000012d473 : add eax, 0xce8b0008 ; call rax
0x000002000011e8e7 : add eax, 0xd18b4800 ; mov rcx, rdi ; call rbx
0x0000020000489458 : add eax, 0xd40 ; ret
0x0000020000039934 : add eax, 0xdae8 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000473013 : add eax, 0xdce9 ; add byte ptr [rax + 0x63], cl ; ret
0x000002000021fc40 : add eax, 0xdf913 ; mov eax, r11d ; ret
0x00000200005c094d : add eax, 0xe083c233 ; add dh, byte ptr [rbx] ; ret 0x8941
0x00000200006b3ebb : add eax, 0xe3c1cd77 ; add al, 0x83 ; ret
0x0000020000594352 : add eax, 0xe7e6b7e9 ; push rdi ; ret
0x0000020000593837 : add eax, 0xe7f1d2e9 ; dec dword ptr [rbp - 0x75] ; ret 0xf41
0x000002000045e1bd : add eax, 0xe8000001 ; ret 0xbe6f
0x0000020000518f84 : add eax, 0xe8d68b41 ; ret
0x0000020000149f45 : add eax, 0xe9000001 ; rol byte ptr [rax], 0 ; ret
0x000002000068f0a4 : add eax, 0xe9800000 ; ret 0
0x0000020000587b03 : add eax, 0xe990ffbc ; ret 0xffe6
0x00000200000aa19a : add eax, 0xe9c00000 ; ret
0x00000200007065a8 : add eax, 0xe9cccc00 ; ret
0x000002000004f57e : add eax, 0xe9ffffff ; ret
0x000002000000382a : add eax, 0xeb0000 ; add rsp, 0x28 ; ret
0x00000200006cde9e : add eax, 0xeb0002c6 ; salc ; xor al, al ; ret
0x0000020000604892 : add eax, 0xeb0100c6 ; out dx, eax ; xor al, al ; ret
0x0000020000125756 : add eax, 0xeb01b000 ; ret
0x0000020000428910 : add eax, 0xeb144789 ; mov edi, esi ; shl dword ptr [rbx], cl ; ret
0x00000200005c977b : add eax, 0xebb024e9 ; push rsi ; ret
0x00000200005d59b2 : add eax, 0xebba0f48 ; or byte ptr [rcx - 0xa], al ; ret
0x00000200005b0fc5 : add eax, 0xebc12b48 ; add ecx, dword ptr [rax + 0x2b] ; ret 0x148
0x000002000019608a : add eax, 0xebc50b48 ; add ecx, dword ptr [rcx + 0x23] ; ret
0x0000020000195ecd : add eax, 0xebc70b48 ; add ecx, dword ptr [rcx + 0x23] ; ret
0x000002000004680f : add eax, 0xebd08b48 ; call 0x1ffe9c6f266
0x00000200000ac95a : add eax, 0xebd08b48 ; ret 0x1b0
0x000002000013da19 : add eax, 0xebffcf83 ; or al, 0x8a ; ret
0x000002000051bd62 : add eax, 0xee6150e8 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005daf6f : add eax, 0xef099ae9 ; push rdi ; ret
0x00000200001884fb : add eax, 0xefba0f48 ; or dword ptr [rax - 0x75], ecx ; ret
0x00000200004a33e3 : add eax, 0xf0c08348 ; ret
0x0000020000116ae6 : add eax, 0xf1f508d ; ret 0xb8c3
0x00000200007aff0c : add eax, 0xf410a76 ; mov bh, 0xc0 ; ret
0x00000200004abbbd : add eax, 0xf6000002 ; ret 0xf02
0x00000200007157a9 : add eax, 0xf6000010 ; ret 0x7508
0x0000020000483a95 : add eax, 0xf6001448 ; ret
0x0000020000195a68 : add eax, 0xf6068948 ; ret
0x00000200000abc69 : add eax, 0xf61fe383 ; ret
0x00000200000a590b : add eax, 0xf6410000 ; ret 0xf0b
0x000002000018f898 : add eax, 0xf6ccfff0 ; ret 0xf04
0x00000200001abd46 : add eax, 0xf7b994e8 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000161ec9 : add eax, 0xf8418d49 ; ret
0x000002000065344f : add eax, 0xfc0920f ; mov dh, 0xc0 ; ret
0x00000200005baffb : add eax, 0xfc217e8 ; add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x00000200000b9cfa : add eax, 0xfe3f80e8 ; push rsi ; ret
0x0000020000453968 : add eax, 0xfee08348 ; ret
0x0000020000011da5 : add eax, 0xff00151b ; ret
0x0000020000142aad : add eax, 0xff088341 ; ret
0x00000200007a7021 : add eax, 0xff098b48 ; ret
0x00000200000b20f2 : add eax, 0xff410000 ; ret 0x8b48
0x00000200000b1512 : add eax, 0xff496077 ; ret
0x00000200007b6c9e : add eax, 0xff8dc17d ; ret
0x00000200007b6cae : add eax, 0xff8dd0dd ; ret
0x00000200007b6cc6 : add eax, 0xff8dda25 ; ret
0x00000200007b6ca6 : add eax, 0xff93e185 ; ret
0x00000200007b6cbe : add eax, 0xff983fcd ; ret
0x00000200007b6cb6 : add eax, 0xff99ae25 ; ret
0x00000200007b6c96 : add eax, 0xff99fba5 ; ret
0x00000200007bcd62 : add eax, 0xffb3d799 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200007b4df9 : add eax, 0xffb4c320 ; xor dh, byte ptr [rdx] ; ret
0x00000200007ab5f9 : add eax, 0xffb57b02 ; add rsp, 0x28 ; ret
0x00000200007c5c32 : add eax, 0xffb5ce31 ; jmp 0x200007c5c46
0x00000200007bcdcf : add eax, 0xffb6860c ; add rsp, 0x68 ; ret
0x00000200007bb344 : add eax, 0xffb69f6f ; add rsp, 0x28 ; ret
0x00000200007b85c6 : add eax, 0xffb6a6a5 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000079de88 : add eax, 0xffb8756c ; add eax, ebp ; mov cl, 0x41 ; ret
0x000002000072b2a6 : add eax, 0xffbcdd45 ; mov dword ptr [rcx], eax ; mov al, 1 ; ret
0x0000020000726002 : add eax, 0xffbd2e19 ; ret
0x00000200007161b4 : add eax, 0xffbe9057 ; add rsp, 0x28 ; ret
0x00000200007268a2 : add eax, 0xffbfe8a8 ; add byte ptr [rbx], ah ; ret 0xc23b
0x000002000072655f : add eax, 0xffbfeb34 ; ret
0x00000200006ff457 : add eax, 0xffc000bc ; add rsp, 0x38 ; ret
0x00000200006fee45 : add eax, 0xffc008c6 ; ret
0x00000200007014e9 : add eax, 0xffc04bb2 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200006b8e23 : add eax, 0xffc39550 ; call rax
0x0000020000697c55 : add eax, 0xffc60a76 ; ret
0x0000020000697c63 : add eax, 0xffc60ac0 ; ret
0x0000020000697c47 : add eax, 0xffc60ac4 ; ret
0x0000020000697c7f : add eax, 0xffc60ad4 ; ret
0x0000020000697c71 : add eax, 0xffc60b0a ; ret
0x0000020000697c8d : add eax, 0xffc60b26 ; ret
0x0000020000672bb2 : add eax, 0xffc8f469 ; add rsp, 0x28 ; ret
0x000002000068b405 : add eax, 0xffc96dd6 ; ret
0x000002000066db5b : add eax, 0xffcb7320 ; add rsp, 0x28 ; ret
0x00000200006768b4 : add eax, 0xffcc9917 ; cmp eax, edx ; jmp 0x200006768f1
0x000002000070f6e0 : add eax, 0xffcf8b48 ; sar bh, 1 ; ret
0x0000020000621589 : add eax, 0xffcffd5a ; ret
0x00000200005ea557 : add eax, 0xffd0d4b8 ; cmp al, 0 ; add byte ptr [rax], al ; ret
0x000002000058453a : add eax, 0xffd6eda1 ; call rax
0x0000020000584526 : add eax, 0xffd6edbd ; call rax
0x000002000058450e : add eax, 0xffd6ede5 ; call rax
0x00000200005a61e8 : add eax, 0xffd7335b ; ret
0x0000020000569345 : add eax, 0xffd92fb6 ; add rsp, 0x28 ; ret
0x00000200005698bd : add eax, 0xffdb8aaa ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000053ae18 : add eax, 0xffdc5533 ; je 0x2000053ae19 ; xor eax, eax ; ret
0x0000020000530d95 : add eax, 0xffdd162e ; add eax, dword ptr [rax] ; add byte ptr [rax], dl ; ret
0x0000020000525c26 : add eax, 0xffdd6375 ; and eax, 1 ; ret
0x0000020000539222 : add eax, 0xffde8779 ; add rsp, 0x28 ; ret
0x0000020000518db1 : add eax, 0xffde9616 ; or byte ptr [r10], dl ; ret
0x0000020000517aff : add eax, 0xffde971c ; add rsp, 0x28 ; ret
0x000002000051df1f : add eax, 0xffe03808 ; add rsp, 0x38 ; ret
0x00000200004fcfe2 : add eax, 0xffe056e1 ; setne al ; ret
0x00000200005128b0 : add eax, 0xffe12523 ; ret
0x0000020000512834 : add eax, 0xffe1259f ; call 0x200000feaa3
0x00000200004fe39c : add eax, 0xffe20eff ; ret
0x00000200004f58db : add eax, 0xffe299c0 ; ret
0x0000020000569939 : add eax, 0xffe3fb2a ; mov dword ptr [rcx + 0x1c], eax ; ret
0x000002000049abeb : add eax, 0xffe89fc8 ; lea rcx, qword ptr [rbp - 0x69] ; call qword ptr [rax]
0x000002000045655c : add eax, 0xffe9f64f ; inc eax ; ret
0x0000020000409a65 : add eax, 0xffeea38e ; ret
0x0000020000413ab4 : add eax, 0xffef55e9 ; push rdi ; ret
0x00000200003dfb48 : add eax, 0xfff2049b ; call rax
0x00000200003ee18f : add eax, 0xfff2f22c ; mov rax, r8 ; ret
0x000002000046ec16 : add eax, 0xfff3a69d ; call rax
0x00000200003c6821 : add eax, 0xfff3b852 ; add rsp, 0x28 ; ret
0x00000200003d0be1 : add eax, 0xfff54814 ; ret
0x000002000044d950 : add eax, 0xfff5b963 ; call rax
0x000002000044779f : add eax, 0xfff61b14 ; call rax
0x000002000043a924 : add eax, 0xfff6e8d7 ; cmovne eax, r8d ; ret
0x0000020000431b8c : add eax, 0xfff77727 ; call rax
0x00000200006b791a : add eax, 0xfff8f8e8 ; dec dword ptr [rax - 0x75] ; ret 0x3b49
0x00000200006f754e : add eax, 0xfffe04e8 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000161373 : add eax, 0xffff78c8 ; ret
0x0000020000161384 : add eax, 0xffff9467 ; ret
0x00000200005352a3 : add eax, 2 ; add rsp, 0x28 ; ret
0x0000020000213ee3 : add eax, 2 ; jmp 0x20000213f0b
0x0000020000248ff5 : add eax, 2 ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000249017
0x0000020000249237 : add eax, 2 ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000249259
0x0000020000080e7b : add eax, 2 ; lea rax, qword ptr [rcx + rax*4] ; ret
0x00000200002119d4 : add eax, 2 ; mov qword ptr [rcx + 0x28], rax ; mov al, 1 ; ret
0x000002000005f92e : add eax, 2 ; mov word ptr [rcx + 2], ax ; ret
0x000002000000969a : add eax, 2 ; mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x00000200003ff2ed : add eax, 2 ; ret
0x00000200004ca5c5 : add eax, 3 ; and eax, 0xfffffffc ; add eax, edx ; ret
0x00000200001715fe : add eax, 3 ; ret
0x00000200006c746c : add eax, 7 ; ret
0x00000200006715df : add eax, 8 ; add rax, 2 ; ret
0x00000200006101df : add eax, 8 ; add rax, rcx ; ret
0x00000200001f7283 : add eax, 8 ; cmp eax, edx ; jb 0x200001f7284 ; xor eax, eax ; ret
0x00000200000d1bcb : add eax, 8 ; cmp rax, r10 ; jb 0x200000d1ba2 ; ret
0x0000020000213eb0 : add eax, 8 ; jmp 0x20000213ec4
0x000002000000c331 : add eax, 8 ; ret
0x0000020000051963 : add eax, 8 ; sub r9, 1 ; jne 0x2000005195f ; ret
0x00000200001370f2 : add eax, 8 ; sub rdx, 1 ; jne 0x200001370e3 ; ret
0x0000020000043960 : add eax, dword ptr [r10] ; je 0x20000043973 ; mov rax, qword ptr [rcx + 0x28] ; ret
0x000002000046a19b : add eax, dword ptr [r11 + 0x3b41fce0] ; ret 0x1b75
0x00000200001dbd6f : add eax, dword ptr [r8 + rax*8 - 0x74b7f187] ; ret 0x2b9
0x00000200000b4542 : add eax, dword ptr [r8] ; add bh, bh ; ret 0x8b4d
0x00000200005a7ec0 : add eax, dword ptr [r8] ; add byte ptr [rdx - 0x9afdba4], cl ; ret
0x0000020000064787 : add eax, dword ptr [r9 + 0x32] ; ret 0x8844
0x00000200007b2102 : add eax, dword ptr [rax + 0x440f03f9] ; ret 0x8348
0x00000200001dbd70 : add eax, dword ptr [rax + rax*8 - 0x74b7f187] ; ret 0x2b9
0x00000200007cfdd1 : add eax, dword ptr [rax - 0x76] ; fild word ptr [rdi + rcx - 0x4a] ; ret
0x000002000013b2ce : add eax, dword ptr [rax - 0x77becf3e] ; adc cl, byte ptr [rcx - 1] ; ret 0xc085
0x0000020000042a53 : add eax, dword ptr [rax] ; add al, al ; call 0x1ffc3054e66
0x00000200005332ba : add eax, dword ptr [rax] ; add al, al ; ret
0x00000200004cbf13 : add eax, dword ptr [rax] ; add al, ch ; in eax, 0x43 ; ret 0x4cff
0x00000200004871c6 : add eax, dword ptr [rax] ; add al, ch ; in eax, dx ; ret
0x0000020000498a0b : add eax, dword ptr [rax] ; add al, ch ; int 0xc2
0x000002000046c157 : add eax, dword ptr [rax] ; add al, ch ; jmp 0x200494683a8
0x00000200004cca70 : add eax, dword ptr [rax] ; add al, ch ; mov byte ptr [rax], bh ; ret 0x48ff
0x0000020000486e65 : add eax, dword ptr [rax] ; add al, ch ; ret
0x00000200000be896 : add eax, dword ptr [rax] ; add al, ch ; ret 0
0x00000200004d9d36 : add eax, dword ptr [rax] ; add al, ch ; ret 0xb8fc
0x00000200004a5d96 : add eax, dword ptr [rax] ; add al, ch ; ret 0xc422
0x0000020000172a12 : add eax, dword ptr [rax] ; add al, ch ; ret 0xe915
0x00000200000ad1f6 : add eax, dword ptr [rax] ; add al, ch ; ret 0xff3b
0x00000200006a9dfb : add eax, dword ptr [rax] ; add al, ch ; sub eax, 0x8aff9bfb ; ret
0x00000200000b0737 : add eax, dword ptr [rax] ; add bh, bh ; ret
0x00000200000b4543 : add eax, dword ptr [rax] ; add bh, bh ; ret 0x8b4d
0x000002000021c229 : add eax, dword ptr [rax] ; add bh, bh ; ret 0xd73b
0x000002000005a184 : add eax, dword ptr [rax] ; add bh, dh ; ret 0xdffe
0x0000020000008388 : add eax, dword ptr [rax] ; add bl, al ; mov eax, 0x7d0 ; ret
0x000002000049d994 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x00000200000b6e82 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8d4a
0x0000020000716135 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x000002000006ff2d : add eax, dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret
0x000002000077b61d : add eax, dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200006ccac7 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000185015 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x3fffff7], al ; ret 0x8189
0x00000200001c68d5 : add eax, dword ptr [rax] ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200004e2022 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x164d8bf0], ch ; ret 0xfd0
0x000002000003561d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x72000009], al ; outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000200004d55a9 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; add al, 0x90 ; ret
0x00000200002149f3 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [r8 + 3] ; ret
0x00000200004aa45b : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; fdecstp ; ret 0x7520
0x000002000006bed5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret
0x00000200000d074a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200000a6c9f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rdi ; adc byte ptr [rax - 0x7f], cl ; ret 0x1a0
0x00000200000b5314 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rsi ; sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000ba6dc : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000451f3f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200000aa0c5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x00000200005071eb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x4bf
0x00000200000504e5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000daa81 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r9 + 0x23], cl ; ret 0x2d48
0x00000200000e66a8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x75], r9b ; ret 0x49f0
0x000002000042433a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp 0x1fffc04c69c
0x0000020000214a03 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp 0x20000214a22
0x0000020000002b9a : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001acc65 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4848
0x000002000012a6ba : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x000002000007e454 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x9000009], al ; ret
0x00000200001eafd5 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004bab3d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], 0 ; je 0x200004bab50 ; ret
0x00000200000987e6 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rbp + 1], dh ; ret
0x0000020000226e0e : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000521ffa : add eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x200001484f7
0x00000200006b7aaa : add eax, dword ptr [rax] ; add byte ptr [rax], al ; call rax
0x000002000010327d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, ecx ; ret
0x00000200005d6869 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; int 0x29
0x00000200004aa7b5 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ja 0x200004aa7c2 ; ret
0x00000200004aa6c9 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jne 0x200004aa6a3 ; jmp 0x200004aa69a
0x000002000013397c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov byte ptr [r9 + 5], r11b ; ret
0x0000020000007ee2 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200006f8478 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0
0x0000020000530d9a : add eax, dword ptr [rax] ; add byte ptr [rax], dl ; ret
0x00000200000b5c8f : add eax, dword ptr [rax] ; add byte ptr [rbp + 0x23], cl ; ret 0x8b48
0x00000200004aa7a9 : add eax, dword ptr [rax] ; add byte ptr [rbp + 0x470f0250], cl ; ret 0xb983
0x0000020000515c78 : add eax, dword ptr [rax] ; add byte ptr [rbp + 0x75880fc0], al ; ret
0x00000200000fa05f : add eax, dword ptr [rax] ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x00000200006c5657 : add eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; ja 0x200006c564b ; ret 0x66ff
0x00000200000c1249 : add eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; ret
0x000002000045e9c3 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x74cf8a40], al ; ret
0x00000200000cd910 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8b44
0x0000020000425e16 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200001f19a4 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], cl ; ret 0xdab9
0x00000200000ddc6a : add eax, dword ptr [rax] ; add byte ptr [rbx + 0xd8d48f8], cl ; ret 0x18dd
0x0000020000144359 : add eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x55], cl ; out 0x38, eax ; pop rbp ; ret
0x00000200001f1080 : add eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x56], cl ; sub byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000022c2f2 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x74b3ebad], cl ; ret
0x00000200004ef222 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x74beafb2], cl ; ret
0x000002000064d77b : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x79f0fe08], al ; ret 0
0x000002000022fcb3 : add eax, dword ptr [rax] ; add byte ptr [rbx], ah ; ret
0x00000200005abc88 : add eax, dword ptr [rax] ; add byte ptr [rbx], ah ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x8102
0x000002000022660e : add eax, dword ptr [rax] ; add byte ptr [rbx], al ; ret
0x00000200004fd702 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret
0x00000200000532da : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0x470f
0x00000200004f7c54 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0x8e0f
0x0000020000218f19 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xc77
0x0000020000413651 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe675
0x000002000044f2eb : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe775
0x00000200005ada53 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe875
0x00000200004a6c0b : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xea75
0x0000020000047416 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x31], cl ; adc r14b, r14b ; ret
0x000002000006fe57 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x31], cl ; adc r14b, sil ; ret
0x00000200000269dd : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x33], cl ; ret
0x00000200000d2dd5 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x33], cl ; ret 0x8948
0x00000200000ae22c : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200003e7113 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000502c07 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x00000200000e35fb : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8348
0x00000200000d8ac9 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x000002000054f470 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], al ; inc byte ptr [rcx + 0x3b] ; ret 0x2377
0x00000200004a85aa : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; push rax ; sub dh, dh ; ret 0x7540
0x000002000024df21 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret
0x000002000013dfbb : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x3308
0x00000200000b22c9 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0x8944
0x00000200004a5f01 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7b], al ; ret 0x840f
0x000002000022fcc0 : add eax, dword ptr [rax] ; add byte ptr [rcx - 1], al ; ret
0x0000020000143265 : add eax, dword ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0x95e9
0x000002000019ff16 : add eax, dword ptr [rax] ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000062f404 : add eax, dword ptr [rax] ; add byte ptr [rdi + 3], bh ; mov al, 1 ; ret
0x00000200000db563 : add eax, dword ptr [rax] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000d55ca : add eax, dword ptr [rax] ; add byte ptr [rdi + rcx - 0x44], al ; ret 0x8944
0x000002000008f3f4 : add eax, dword ptr [rax] ; add byte ptr [rdi], bh ; ret
0x000002000048bf78 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret
0x00000200000e9e8a : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0x0000020000062d91 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x00000200000662f0 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200003eec96 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov edx, 0xf09f4725 ; call qword ptr [rsi]
0x000002000010ed9b : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x12b
0x00000200001c2407 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x854d
0x00000200001eaf8a : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8444
0x00000200005239fe : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc28b
0x00000200005414ea : add eax, dword ptr [rax] ; add byte ptr [rdx - 0x21e909f3], cl ; call rbx
0x00000200005a7ec1 : add eax, dword ptr [rax] ; add byte ptr [rdx - 0x9afdba4], cl ; ret
0x0000020000079032 : add eax, dword ptr [rax] ; add byte ptr [rdx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000bb718 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x23], ah ; ret
0x00000200005abdb1 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x23], ah ; ror byte ptr [rcx - 0x7d], 1 ; ret 0xb802
0x00000200000b6d4a : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000055876 : add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200003e26fc : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf01
0x0000020000079d95 : add eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002e84f : add eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000039676 : add eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000103154 : add eax, dword ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000116145 : add eax, dword ptr [rax] ; add rsp, 0x48 ; ret
0x0000020000440ffe : add eax, dword ptr [rax] ; add rsp, 0x58 ; ret
0x000002000002c865 : add eax, dword ptr [rax] ; add rsp, 0x68 ; ret
0x00000200000377bb : add eax, dword ptr [rax] ; mov al, 1 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000083ef9 : add eax, dword ptr [rax] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000841b4 : add eax, dword ptr [rax] ; shl edx, 9 ; or eax, edx ; jmp 0x200000841b1
0x00000200005b03c1 : add eax, dword ptr [rax] ; shr al, 0x83 ; rol dword ptr [rsi], cl ; add bl, ch ; ret 0x3b9
0x000002000011835f : add eax, dword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004124fa : add eax, dword ptr [rax] ; xor ebx, ebx ; jmp 0x200004124c7
0x00000200001dea22 : add eax, dword ptr [rbp + 0x2b] ; ret 0x3b4c
0x00000200001b9186 : add eax, dword ptr [rbp + 0x2b] ; ret 0x8348
0x00000200005f918d : add eax, dword ptr [rbp + 0x2b] ; ret 0xe8b8
0x000002000066d4dd : add eax, dword ptr [rbp + 0x32] ; leave ; mov al, r9b ; ret
0x00000200001c8b6f : add eax, dword ptr [rbp + 0x33] ; leave ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x000002000013ddc4 : add eax, dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x000002000070fb9c : add eax, dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x40c3
0x00000200002403e6 : add eax, dword ptr [rbp + 0x33] ; ror byte ptr [rbp + 0x3b], cl ; ret
0x0000020000204e8b : add eax, dword ptr [rbp + 3] ; ret 0xca8b
0x000002000077ac93 : add eax, dword ptr [rbp - 0x74f38b25] ; ret 0x8948
0x000002000077bbdc : add eax, dword ptr [rbp - 0x74f38b25] ; ret 0x894c
0x000002000009bab2 : add eax, dword ptr [rbp - 0x75] ; ret 0x3b4c
0x0000020000778699 : add eax, dword ptr [rbp - 0x75] ; ret 0xca6b
0x00000200001c82f6 : add eax, dword ptr [rbp - 0x75] ; rol dword ptr [rcx - 0x75], cl ; ret 0x8b48
0x00000200006b0799 : add eax, dword ptr [rbp - 0x77] ; adc dword ptr [rbp + 0x3b], eax ; ret 0xc01b
0x0000020000565ee6 : add eax, dword ptr [rbp - 0x77] ; add dword ptr [rcx - 0x75], eax ; ret 0x41c3
0x000002000046a19c : add eax, dword ptr [rbx + 0x3b41fce0] ; ret 0x1b75
0x0000020000417c48 : add eax, dword ptr [rbx + 0xa01fce1] ; xor eax, eax ; ret
0x00000200005a03d8 : add eax, dword ptr [rbx + 0xf48e0c0] ; lodsb al, byte ptr [rsi] ; ret
0x00000200006807c4 : add eax, dword ptr [rbx + rcx*4 - 0x30] ; mov eax, r10d ; jmp 0x200006807d8
0x000002000009b6d4 : add eax, dword ptr [rbx - 0x157ce01e] ; add al, 0xf7 ; ret 0xfffd
0x00000200004ca5c7 : add eax, dword ptr [rbx - 0x3dfc0320] ; ret
0x000002000043e3d9 : add eax, dword ptr [rbx - 0x3fccfbf7] ; ret
0x00000200000424e3 : add eax, dword ptr [rbx - 0x74b7f020] ; ret
0x000002000023db91 : add eax, dword ptr [rbx - 0x76b7073e] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000200005e36af : add eax, dword ptr [rbx - 0x79f0fe08] ; ret 0xf0e6
0x00000200004ead9e : add eax, dword ptr [rbx - 0x7bf0fe18] ; ret
0x000002000068ccce : add eax, dword ptr [rbx - 0x7cb70037] ; ret 0x4802
0x000002000014ba00 : add eax, dword ptr [rbx - 0x899fd38] ; ret 0x100
0x0000020000653c3c : add eax, dword ptr [rbx] ; add al, al ; ret
0x00000200006d4016 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x4566
0x000002000022770f : add eax, dword ptr [rbx] ; ret
0x000002000068dc62 : add eax, dword ptr [rbx] ; ret 0x3b41
0x000002000060ecfa : add eax, dword ptr [rcx + 0x138] ; ret
0x000002000000bfc8 : add eax, dword ptr [rcx + 0x22] ; ret 0x8841
0x000002000009931f : add eax, dword ptr [rcx + 0x32] ; ret 0x4788
0x0000020000064788 : add eax, dword ptr [rcx + 0x32] ; ret 0x8844
0x0000020000412478 : add eax, dword ptr [rcx + 0x33] ; ret 0xe083
0x000002000021c25d : add eax, dword ptr [rcx + 0x3a] ; ret
0x000002000001f69a : add eax, dword ptr [rcx + 0x3b] ; rol byte ptr [rdi + rcx + 0x42], 1 ; ret 0x548
0x000002000018576d : add eax, dword ptr [rcx + 0x3b] ; rol byte ptr [rdi + rcx + 0x42], 1 ; ret 0x8b41
0x00000200001b28c6 : add eax, dword ptr [rcx + 0x3b] ; rol byte ptr [rdi + rcx + 0x42], 1 ; ret 0x8d4a
0x00000200006101d2 : add eax, dword ptr [rcx + 0x48] ; ret
0x000002000060fb7a : add eax, dword ptr [rcx + 0x50] ; ret
0x000002000006cfa0 : add eax, dword ptr [rcx + 0x98] ; ret
0x0000020000494b71 : add eax, dword ptr [rcx + 0xa0] ; ret
0x000002000013e2c1 : add eax, dword ptr [rcx + 3] ; ret
0x000002000013ec85 : add eax, dword ptr [rcx + 3] ; ret 0x388
0x00000200004def73 : add eax, dword ptr [rcx + 3] ; ret 0xba0f
0x0000020000204e85 : add eax, dword ptr [rcx + 3] ; ror byte ptr [rax - 0x75], cl ; add eax, dword ptr [rbp + 3] ; ret 0xca8b
0x000002000068ac20 : add eax, dword ptr [rcx + 3] ; ror dword ptr [rcx + 3], cl ; ret
0x00000200006048ad : add eax, dword ptr [rcx + 8] ; ret
0x0000020000230276 : add eax, dword ptr [rcx + rax + 0x19] ; ret
0x0000020000664822 : add eax, dword ptr [rcx + rax + 1] ; mov eax, 1 ; ret
0x000002000049b9dc : add eax, dword ptr [rcx + rcx*8] ; inc edx ; jmp 0x2000049b9d6
0x000002000008218b : add eax, dword ptr [rcx - 0x75] ; fld qword ptr [rbp - 0x74ca8725] ; ret
0x00000200006cf731 : add eax, dword ptr [rcx - 0x75] ; ret
0x00000200006e0347 : add eax, dword ptr [rcx - 0x75] ; ret 0x4489
0x000002000040359c : add eax, dword ptr [rcx - 0x75] ; ret 0x8d4c
0x0000020000129f86 : add eax, dword ptr [rcx - 0x75] ; ror dword ptr [rbp + 3], 4 ; ret 0x8d41
0x000002000053d5ff : add eax, dword ptr [rcx - 0x77] ; add byte ptr [rax - 0x3fcd3cff], dh ; ret
0x000002000055ec2c : add eax, dword ptr [rcx - 0x77] ; sbb byte ptr [rcx - 1], al ; ret 0x8349
0x00000200000927bd : add eax, dword ptr [rcx - 0x7c] ; ret 0x840f
0x0000020000164ab6 : add eax, dword ptr [rcx - 0xa] ; ret
0x000002000007efe2 : add eax, dword ptr [rcx - 0xa] ; ret 0xf07
0x00000200006d6914 : add eax, dword ptr [rcx - 1] ; ret
0x00000200000536e9 : add eax, dword ptr [rcx - 1] ; ret 0x8d42
0x000002000067bfb4 : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000219d00 : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200004b31b8 : add eax, dword ptr [rcx] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007d12f6 : add eax, dword ptr [rcx] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000070c88f : add eax, dword ptr [rcx] ; xor eax, eax ; ret
0x0000020000726df9 : add eax, dword ptr [rdi + rcx - 0x51] ; fld qword ptr [rcx - 0x75] ; ret
0x000002000004141b : add eax, dword ptr [rdx + 0x268] ; ret
0x0000020000088a6b : add eax, dword ptr [rdx + 0x68] ; ret
0x0000020000043961 : add eax, dword ptr [rdx] ; je 0x20000043972 ; mov rax, qword ptr [rcx + 0x28] ; ret
0x0000020000044cbb : add eax, dword ptr [rip + 0x3649b7] ; ret
0x0000020000621588 : add eax, dword ptr [rip - 0x3002a6] ; ret
0x000002000064042d : add eax, dword ptr [rip - 0x74b40000] ; ret
0x00000200000d8ac8 : add eax, dword ptr es:[rax] ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200000aa0c4 : add eax, dword ptr ss:[rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x0000020000032b81 : add eax, eax ; add rsp, 0x38 ; ret
0x0000020000239d4a : add eax, eax ; and qword ptr [rcx + rax*8], 0 ; mov al, 1 ; ret
0x000002000007602e : add eax, eax ; cmp dword ptr [rcx], eax ; jae 0x2000007603f ; xor eax, eax ; ret
0x000002000061bf18 : add eax, eax ; cmp rax, rcx ; jb 0x2000061bf0e ; ret
0x00000200000ddfdc : add eax, eax ; cmp rdi, qword ptr [r8 + rax*8] ; jb 0x200000ddfad ; jmp 0x200000ddfda
0x00000200000f234d : add eax, eax ; jmp rax
0x000002000001bd11 : add eax, eax ; mov qword ptr [r10], rax ; mov eax, ecx ; ret
0x000002000060a16a : add eax, eax ; mov qword ptr [rdx + 0x48], rax ; ret
0x00000200006b72f9 : add eax, eax ; mov qword ptr [rsp + 0x50], r8 ; inc edx ; jmp 0x200006b72d8
0x0000020000044d37 : add eax, eax ; mov rax, qword ptr [rcx + rax*8] ; ret
0x000002000001bb7c : add eax, eax ; mov word ptr [rdx + 0x14], ax ; ret
0x0000020000496e3b : add eax, eax ; movdqu xmmword ptr [rcx + rax*8], xmm0 ; ret
0x000002000007428d : add eax, eax ; ret
0x00000200004a9cfe : add eax, ebp ; cmp al, 0xb6 ; ret
0x00000200007cbcee : add eax, ebp ; cmp byte ptr [rbx], al ; ret
0x00000200004a6296 : add eax, ebp ; hlt ; jmp 0x200004a6262
0x0000020000463824 : add eax, ebp ; imul al ; ret 0x89ff
0x00000200005e9ea6 : add eax, ebp ; je 0x200005e9e89 ; ret 0x8bff
0x00000200004a94bc : add eax, ebp ; jle 0x200004a9482 ; ret
0x00000200004a99c0 : add eax, ebp ; jp 0x200004a9981 ; ret
0x000002000023bba9 : add eax, ebp ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023bbca
0x00000200007818bc : add eax, ebp ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x200007818db
0x0000020000783732 : add eax, ebp ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000783751
0x000002000078cc40 : add eax, ebp ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078cc5f
0x0000020000459b69 : add eax, ebp ; leave ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x00000200000b5091 : add eax, ebp ; leave ; ret 1
0x00000200004ab9a8 : add eax, ebp ; loop 0x200004ab944 ; ret
0x000002000079de8d : add eax, ebp ; mov cl, 0x41 ; ret
0x00000200007131d7 : add eax, ebp ; or ecx, dword ptr [rdi] ; add byte ptr [rax], al ; mov rbx, rax ; call rdi
0x00000200001c0200 : add eax, ebp ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x0000020000514a27 : add eax, ebp ; pop rdi ; ret
0x00000200001c011e : add eax, ebp ; push rax ; ret
0x0000020000179eff : add eax, ebp ; ret
0x00000200006904ec : add eax, ebp ; ret 0x3d
0x0000020000054098 : add eax, ebp ; ret 0x7d2
0x00000200006cdbac : add eax, ebp ; ret 0xa6df
0x000002000078fca4 : add eax, ebp ; ret 0xd1ee
0x00000200001b2314 : add eax, ebp ; ret 0xf373
0x000002000018e0ab : add eax, ebp ; sets bh ; dec dword ptr [rbp - 0x75] ; ret 0xd1e9
0x00000200004a9592 : add eax, ebp ; test al, 0xbd ; ret
0x00000200004aa806 : add eax, ebp ; xor al, 0xab ; ret
0x0000020000102f29 : add eax, ebp ; xor esp, esp ; cld ; dec dword ptr [rax - 0x7d] ; ret
0x000002000000c1b0 : add eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000122ce0 : add eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000024bcf2 : add eax, ebx ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000024bd12
0x0000020000147467 : add eax, ebx ; mov qword ptr [rcx], rax ; mov byte ptr [rcx + 8], al ; ret
0x00000200003c9a83 : add eax, ecx ; add rsp, 0x38 ; ret
0x00000200005c094a : add eax, ecx ; call 0x1ff841e3c5b
0x0000020000687ff3 : add eax, ecx ; cmp rdx, rax ; setae al ; ret
0x00000200005e2033 : add eax, ecx ; jmp 0x200004ec83b
0x0000020000222c53 : add eax, ecx ; jmp r8
0x00000200004c5598 : add eax, ecx ; jmp rax
0x0000020000407aca : add eax, ecx ; mov dword ptr [r8], edx ; ret
0x0000020000211aab : add eax, ecx ; mov qword ptr [rdx], r9 ; mov eax, r8d ; ret
0x00000200000ddbb5 : add eax, ecx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200006c5393 : add eax, ecx ; out dx, eax ; sbb al, 0x83 ; call qword ptr [rax]
0x0000020000038cf1 : add eax, ecx ; ret
0x0000020000459e5e : add eax, ecx ; sub r10, 1 ; jne 0x20000459e37 ; ret
0x0000020000052c15 : add eax, ecx ; sub r8, 1 ; jne 0x20000052c15 ; ret
0x000002000021072f : add eax, edi ; add rsp, 0x50 ; pop rdi ; ret
0x000002000013ae19 : add eax, edi ; call r8
0x000002000023ef05 : add eax, edi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023ef25
0x0000020000244f89 : add eax, edi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244fa9
0x000002000077f9c4 : add eax, edi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077f9e3
0x000002000078d1e1 : add eax, edi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078d200
0x000002000013cbf5 : add eax, edi ; ret
0x00000200000bea47 : add eax, edx ; cmp rcx, rax ; jb 0x200000bea5a ; xor eax, eax ; ret
0x000002000000c323 : add eax, edx ; jmp 0x2000000c2fe
0x0000020000020a3f : add eax, edx ; jmp 0x20000020a1c
0x000002000007b69d : add eax, edx ; jmp 0x2000007b666
0x000002000010c988 : add eax, edx ; jmp 0x2000010c967
0x000002000020fbff : add eax, edx ; jmp 0x2000020fc07
0x00000200004345f2 : add eax, edx ; jmp 0x200004345d9
0x00000200004345f7 : add eax, edx ; jmp 0x200004345df
0x000002000043bbfa : add eax, edx ; jmp 0x2000043bbe7
0x00000200005128f0 : add eax, edx ; jmp 0x200005128d4
0x00000200005493b5 : add eax, edx ; jmp 0x2000054934c
0x0000020000550bb4 : add eax, edx ; jmp 0x20000550bc7
0x00000200005cb83d : add eax, edx ; jmp 0x200005cb846
0x0000020000693827 : add eax, edx ; jmp 0x20000693830
0x000002000005c501 : add eax, edx ; jmp r8
0x00000200000f2606 : add eax, edx ; jmp rax
0x00000200005699a9 : add eax, edx ; mov al, byte ptr [r8 + rax] ; ret
0x00000200001d4658 : add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200000808d8 : add eax, edx ; ret
0x00000200003ca63e : add eax, edx ; sub rcx, rdx ; mov qword ptr [r11], rcx ; ret
0x000002000024c496 : add eax, edx ; sub rsp, 0x28 ; call rax
0x0000020000055c6c : add eax, esi ; cmpxchg qword ptr [r9], rcx ; jne 0x20000055c7d ; ret
0x000002000007ced4 : add eax, esi ; cmpxchg qword ptr [rcx], rdx ; jne 0x2000007cee5 ; ret
0x000002000007ced3 : add eax, esi ; cmpxchg qword ptr [rcx], rdx ; jne 0x2000007cee6 ; ret
0x00000200001be669 : add eax, esi ; idiv edi ; add rsp, 0x60 ; pop rbx ; ret
0x000002000077fbfd : add eax, esi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077fc1c
0x0000020000244d0e : add eax, esp ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244d2e
0x000002000020fbfe : add eax, r10d ; jmp 0x2000020fc08
0x0000020000147466 : add eax, r11d ; mov qword ptr [rcx], rax ; mov byte ptr [rcx + 8], al ; ret
0x0000020000244d0d : add eax, r12d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244d2f
0x000002000023bba8 : add eax, r13d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023bbcb
0x00000200007818bb : add eax, r13d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x200007818dc
0x0000020000783731 : add eax, r13d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000783752
0x000002000078cc3f : add eax, r13d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078cc60
0x000002000077f9c3 : add eax, r15d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077f9e4
0x000002000078d1e0 : add eax, r15d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078d201
0x000002000013cbf4 : add eax, r15d ; ret
0x000002000001bb7b : add eax, r8d ; mov word ptr [rdx + 0x14], ax ; ret
0x00000200005c0949 : add eax, r9d ; call 0x1ff841e3c5c
0x00000200002118aa : add eax, r9d ; ret
0x000002000077b53f : add ebp, dword ptr [rbx - 0x3e] ; sbb ch, byte ptr [rbx] ; fadd dword ptr [rcx - 0x75] ; ret 0xe7f7
0x000002000019a640 : add ebp, dword ptr [rbx] ; ret
0x00000200000651c7 : add ebp, dword ptr [rdi] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200003e00ed : add ebp, eax ; adc esp, ebp ; ret 0x84ff
0x00000200000b553c : add ebp, eax ; call 0x200000dd948
0x00000200001cd3af : add ebp, eax ; ret
0x00000200001e9028 : add ebp, eax ; ret 0xeb46
0x00000200001cd5d8 : add ebp, eax ; xchg eax, esi ; ret 0xfff6
0x000002000005efab : add ebp, ebx ; ret 0x8b48
0x0000020000002c0d : add ebp, ebx ; sbb byte ptr [rax - 1], cl ; ret
0x000002000006a762 : add ebp, ecx ; ret
0x000002000006a963 : add ebp, ecx ; ret 0xfff6
0x00000200007ad5c4 : add ebp, ecx ; ret 0xfffe
0x000002000017638c : add ebp, ecx ; stosd dword ptr [rdi], eax ; ret
0x000002000013cbd7 : add ebp, edi ; ret
0x000002000013cbd6 : add ebp, r15d ; ret
0x0000020000781594 : add ebx, -1 ; jne 0x2000078158f ; mov rax, rdx ; jmp 0x200007815a7
0x000002000078261a : add ebx, -1 ; jne 0x20000782612 ; mov rax, rdx ; jmp 0x2000078262d
0x00000200007831e0 : add ebx, -1 ; jne 0x200007831db ; mov rax, rdx ; jmp 0x200007831fc
0x0000020000783e46 : add ebx, -1 ; jne 0x20000783e3d ; mov rax, rdx ; jmp 0x20000783e59
0x00000200007845c9 : add ebx, -1 ; jne 0x200007845c0 ; mov rax, rdx ; jmp 0x200007845dc
0x0000020000784e80 : add ebx, -1 ; jne 0x20000784e7a ; mov rax, rdx ; jmp 0x20000784e93
0x0000020000785109 : add ebx, -1 ; jne 0x20000785103 ; mov rax, rdx ; jmp 0x2000078511c
0x0000020000789e0c : add ebx, -1 ; jne 0x20000789e03 ; mov rax, rdx ; jmp 0x20000789e1f
0x000002000078c3d9 : add ebx, -1 ; jne 0x2000078c3d1 ; mov rax, rdx ; jmp 0x2000078c3ec
0x000002000004fd8d : add ebx, 0x18 ; mov rdx, rbx ; call 0x2000009bfa8
0x00000200000ee0da : add ebx, 0x3b000000 ; ret 0x767d
0x0000020000190f09 : add ebx, 2 ; jmp 0x2000009402b
0x00000200006cfd84 : add ebx, 2 ; movzx ecx, word ptr [rbx] ; call 0x2000013c068
0x00000200006cef02 : add ebx, 4 ; jmp 0x200006ceee8
0x00000200001ad4a5 : add ebx, 8 ; jmp 0x200001ad4e5
0x0000020000088018 : add ebx, 8 ; sub r10, 1 ; jne 0x20000088016 ; ret
0x0000020000136539 : add ebx, dword ptr [rbx] ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000019511f : add ebx, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; call 0x1fff0f11419
0x00000200007286d2 : add ebx, dword ptr [rdi + 0x48c033ff] ; add esp, 0x28 ; ret
0x00000200006a4224 : add ebx, eax ; and dword ptr [rcx], 0 ; ret
0x00000200005392d7 : add ebx, eax ; and dword ptr [rip - 0x217a80], 0 ; ret
0x00000200004bb496 : add ebx, eax ; bts dword ptr [rdx], 7 ; ret
0x0000020000559689 : add ebx, eax ; call 0x20000081934
0x000002000020e764 : add ebx, eax ; cmp r11, qword ptr [rcx] ; jb 0x2000020e777 ; xor eax, eax ; ret
0x000002000020e800 : add ebx, eax ; cmp r11, qword ptr [rcx] ; jb 0x2000020e813 ; xor al, al ; ret
0x000002000006f04a : add ebx, eax ; jmp 0x200001bb28c
0x00000200004344d0 : add ebx, eax ; jmp 0x20000434496
0x00000200005e3df4 : add ebx, eax ; jmp 0x200004f2210
0x000002000012d704 : add ebx, eax ; jmp rax
0x0000020000798e20 : add ebx, eax ; jmp rcx
0x00000200000ed036 : add ebx, eax ; mov al, 1 ; ret
0x000002000007a345 : add ebx, eax ; mov al, byte ptr [rax + rcx*2] ; ret
0x000002000007468b : add ebx, eax ; mov byte ptr [r8], 0 ; ret
0x000002000014745b : add ebx, eax ; mov byte ptr [rcx + 4], al ; mov dword ptr [rcx], eax ; ret
0x0000020000147448 : add ebx, eax ; mov byte ptr [rcx], al ; ret
0x0000020000033d91 : add ebx, eax ; mov dword ptr [rcx + 0x80], edx ; ret
0x0000020000147455 : add ebx, eax ; mov dword ptr [rcx + 2], eax ; mov dword ptr [rcx], eax ; ret
0x0000020000147461 : add ebx, eax ; mov dword ptr [rcx], eax ; mov dword ptr [rcx + 3], eax ; ret
0x00000200006ff49e : add ebx, eax ; mov eax, 0xc0000001 ; ret
0x00000200002175a2 : add ebx, eax ; mov eax, 2 ; ret
0x00000200000035de : add ebx, eax ; mov eax, dword ptr [rcx + 0x2c] ; ret
0x000002000067b42b : add ebx, eax ; mov qword ptr [r8], rcx ; xor al, al ; ret
0x0000020000041a83 : add ebx, eax ; mov rax, qword ptr [rax + 0x18] ; ret
0x000002000002555b : add ebx, eax ; mov rax, qword ptr [rax] ; ret
0x00000200004aa7ba : add ebx, eax ; or eax, 1 ; ret
0x00000200004aa1fa : add ebx, eax ; or eax, r8d ; ret
0x0000020000020b59 : add ebx, eax ; pause ; xor al, al ; ret
0x000002000004337d : add ebx, eax ; ret
0x000002000007709a : add ebx, eax ; test al, 1 ; je 0x20000077096 ; xor al, al ; ret
0x00000200000e835f : add ebx, eax ; test eax, eax ; jne 0x200000e8359 ; xor al, al ; ret
0x00000200000d517e : add ebx, eax ; test eax, eax ; js 0x200000d5187 ; xor eax, eax ; ret
0x00000200003e94ad : add ebx, eax ; test r8d, r8d ; je 0x200003e9498 ; xor al, al ; ret
0x000002000000ff58 : add ebx, eax ; xor al, al ; ret
0x000002000006d054 : add ebx, eax ; xor eax, eax ; ret
0x0000020000207ecb : add ebx, ebp ; add al, 0x48 ; or eax, 0xffffffff ; ret
0x000002000017dac8 : add ebx, ebp ; add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret 0x8b49
0x00000200006807c2 : add ebx, ebp ; add eax, dword ptr [rbx + rcx*4 - 0x30] ; mov eax, r10d ; jmp 0x200006807da
0x0000020000604895 : add ebx, ebp ; out dx, eax ; xor al, al ; ret
0x0000020000125759 : add ebx, ebp ; ret
0x000002000042036b : add ebx, ebp ; ret 0x8349
0x0000020000066ddb : add ebx, ebp ; ret 0xcccc
0x00000200004e97d1 : add ebx, ebp ; xchg byte ptr [rax - 0x75], cl ; ret
0x0000020000102a10 : add ebx, ebx ; jmp 0x200001029da
0x00000200005afe49 : add ebx, ecx ; dec dword ptr [rax - 0x39] ; ret 0x3c80
0x00000200004c491b : add ebx, ecx ; ret 0xe9ff
0x000002000013cbe3 : add ebx, edi ; ret
0x000002000018b2b5 : add ebx, edx ; loop 0x2000018b2c8 ; ret 0x8941
0x0000020000712468 : add ebx, esi ; movq qword ptr [rdx], mm0 ; ret
0x000002000013cbe2 : add ebx, r15d ; ret
0x00000200001cdcf9 : add ecx, -0x10 ; mov rax, rcx ; ret
0x000002000023dfc0 : add ecx, -1 ; jne 0x2000023dfb6 ; mov rax, rdx ; jmp 0x2000023e036
0x000002000023f269 : add ecx, -1 ; jne 0x2000023f25f ; mov rax, rdx ; jmp 0x2000023f27c
0x000002000024658d : add ecx, -1 ; jne 0x20000246586 ; mov rax, rdx ; jmp 0x200002465a0
0x000002000024685f : add ecx, -1 ; jne 0x20000246858 ; mov rax, rdx ; jmp 0x20000246897
0x0000020000246ed0 : add ecx, -1 ; jne 0x20000246ec6 ; mov rax, rdx ; jmp 0x20000246ee3
0x000002000024a901 : add ecx, -1 ; jne 0x2000024a8fa ; mov rax, rdx ; jmp 0x2000024a914
0x000002000024abe8 : add ecx, -1 ; jne 0x2000024abe1 ; mov rax, rdx ; jmp 0x2000024abfb
0x000002000024bd95 : add ecx, -1 ; jne 0x2000024bd8c ; mov rax, rdx ; jmp 0x2000024bda8
0x000002000040a0e6 : add ecx, -1 ; jne 0x2000040a0e2 ; ret
0x000002000077969d : add ecx, -1 ; jne 0x20000779693 ; mov rax, rdx ; jmp 0x2000077970b
0x0000020000779a3d : add ecx, -1 ; jne 0x20000779a33 ; mov rax, rdx ; jmp 0x20000779a50
0x000002000077f1d4 : add ecx, -1 ; jne 0x2000077f1cb ; mov rax, rdx ; jmp 0x2000077f1e7
0x0000020000785b3c : add ecx, -1 ; jne 0x20000785b35 ; mov rax, rdx ; jmp 0x20000785b4f
0x00000200000365b2 : add ecx, 0x10 ; sub rax, 1 ; jne 0x200000365b3 ; ret
0x00000200004385b3 : add ecx, 0x10 ; sub rax, 1 ; jne 0x200004385b4 ; ret
0x00000200001fecfe : add ecx, 0x18 ; call rax
0x000002000008d736 : add ecx, 0x20 ; call 0x200000e9995
0x00000200004148c5 : add ecx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x200004148d6 ; ret
0x000002000049c455 : add ecx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x2000049c466 ; ret
0x00000200004563a8 : add ecx, 0x2e0 ; call 0x20000077089
0x0000020000151a74 : add ecx, 0x40 ; sub rdx, 0x40 ; ja 0x20000151a79 ; ret
0x000002000008e018 : add ecx, 0x50 ; call 0x200000ca2f5
0x0000020000454ded : add ecx, 0x60 ; call 0x2000007f5c2
0x00000200004b3df6 : add ecx, 0xb40 ; jmp 0x200004b3dc7
0x000002000013d335 : add ecx, 2 ; cmp rax, rdx ; jb 0x2000013d333 ; ret
0x0000020000563b5f : add ecx, 2 ; mov qword ptr [rdx + 0x28], rcx ; ret
0x0000020000401af3 : add ecx, 2 ; sub rdx, 1 ; jne 0x20000401af5 ; ret
0x000002000013bbe1 : add ecx, 2 ; test r8, r8 ; jne 0x2000013bbdc ; ret
0x000002000052e86e : add ecx, 4 ; mov r8d, edi ; call 0x200001518a9
0x00000200001f9b8b : add ecx, 8 ; call 0x20000035dd1
0x00000200006bbbe2 : add ecx, 8 ; cmp r9d, edx ; jb 0x200006bbbe1 ; ret
0x0000020000190e10 : add ecx, 8 ; mov ecx, r8d ; inc rdx ; jmp 0x20000190dd1
0x0000020000034e61 : add ecx, 8 ; sub r10, 1 ; jne 0x20000034e59 ; ret
0x000002000002818c : add ecx, 8 ; sub rdx, 1 ; jne 0x20000028185 ; ret
0x0000020000002e54 : add ecx, dword ptr [r13 - 0x75] ; ret 0x348
0x00000200001a60a9 : add ecx, dword ptr [r8 - 0x75] ; ret
0x00000200002146b4 : add ecx, dword ptr [r8 - 0x7d] ; ret
0x00000200004f0b18 : add ecx, dword ptr [r9 + 0x3b] ; ret
0x000002000006a3cd : add ecx, dword ptr [rax + 0x23] ; ret 0x3148
0x0000020000186b32 : add ecx, dword ptr [rax + 0x23] ; ret 0x3348
0x0000020000162efb : add ecx, dword ptr [rax + 0x23] ; ret 0x8d49
0x000002000004b4a9 : add ecx, dword ptr [rax + 0x23] ; ret 0xb48
0x00000200007c552b : add ecx, dword ptr [rax + 0x23] ; ret 0xc148
0x00000200000c0ac2 : add ecx, dword ptr [rax + 0x2b] ; fmul dword ptr [rcx - 0x75] ; ret
0x00000200005b0fca : add ecx, dword ptr [rax + 0x2b] ; ret 0x148
0x00000200000e30ba : add ecx, dword ptr [rax + 0x33] ; ret 0x2349
0x0000020000242d72 : add ecx, dword ptr [rax + 0x33] ; ror byte ptr [rax - 0x75], 1 ; ret
0x000002000000a37b : add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200001ea24f : add ecx, dword ptr [rax + 0x3b] ; ret 0x840f
0x00000200006756d6 : add ecx, dword ptr [rax + 0x3b] ; ret 0x870f
0x000002000053f327 : add ecx, dword ptr [rax + 0x3b] ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret
0x000002000060eff2 : add ecx, dword ptr [rax + 0x63] ; enter 0xf41, -0x49 ; ret 0x8d48
0x00000200001a61a5 : add ecx, dword ptr [rax + 0x63] ; ret
0x0000020000696773 : add ecx, dword ptr [rax + 0x6b] ; ret
0x000002000049d9c9 : add ecx, dword ptr [rax + 0xb] ; ret 0x8948
0x000002000007253e : add ecx, dword ptr [rax + 0xb] ; ret 0x8949
0x00000200002149f9 : add ecx, dword ptr [rax + 3] ; ret
0x00000200003e476b : add ecx, dword ptr [rax + 3] ; ret 0x8b48
0x00000200006c24d4 : add ecx, dword ptr [rax + 3] ; ret 0xe083
0x00000200003e4b2e : add ecx, dword ptr [rax - 0x2f] ; call 0x20049004e84
0x000002000019a63c : add ecx, dword ptr [rax - 0x3f] ; stc ; add ebp, dword ptr [rbx] ; ret
0x0000020000557a0c : add ecx, dword ptr [rax - 0x75] ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [r11], dil ; ret
0x0000020000145e97 : add ecx, dword ptr [rax - 0x75] ; add dword ptr [rcx - 0x7d], eax ; ret
0x000002000078e134 : add ecx, dword ptr [rax - 0x75] ; add dword ptr [rcx - 0x7d], eax ; ret 0x49f8
0x00000200004742bc : add ecx, dword ptr [rax - 0x75] ; int 0x80
0x00000200005f49ab : add ecx, dword ptr [rax - 0x75] ; int 0xff
0x000002000010e6c0 : add ecx, dword ptr [rax - 0x75] ; je 0x2000010e6f1 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000011288c : add ecx, dword ptr [rax - 0x75] ; je 0x200001128bd ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000a1191 : add ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 0x20 ; pop rdi ; ret
0x00000200005a48d1 : add ecx, dword ptr [rax - 0x75] ; push rbx ; or byte ptr [rax - 0x75], cl ; ret 0xe283
0x000002000003c1fb : add ecx, dword ptr [rax - 0x75] ; ret
0x00000200006cb71b : add ecx, dword ptr [rax - 0x75] ; ret 0x8548
0x0000020000448fe7 : add ecx, dword ptr [rax - 0x75] ; ret 0x8b48
0x00000200000293f6 : add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200001f9109 : add ecx, dword ptr [rax - 0x75] ; ret 0xff48
0x00000200000df0fe : add ecx, dword ptr [rax - 0x75] ; sbb byte ptr [r8 + 0x33], cl ; ret 0x2349
0x0000020000400dbb : add ecx, dword ptr [rax - 0x75] ; sbb byte ptr [rax - 0x75], cl ; ret
0x000002000004b7f2 : add ecx, dword ptr [rax - 0x75] ; sub byte ptr [r8 + 0x23], cl ; ret 0xc148
0x00000200003f0fcf : add ecx, dword ptr [rax - 0x77] ; or r11b, bpl ; ret
0x000002000041715f : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; jmp rdx
0x000002000008b774 : add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200007a4f9d : add ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x000002000002f4bd : add ecx, dword ptr [rax - 0x7d] ; ret 0x480b
0x000002000024c562 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x000002000055c1d6 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4d04
0x00000200000d16c3 : add ecx, dword ptr [rax - 0x7d] ; ret 0xe808
0x000002000021458c : add ecx, dword ptr [rax - 0x7d] ; ret 0xeb03
0x00000200007a1663 : add ecx, dword ptr [rax - 0x7f] ; ret
0x00000200000d3039 : add ecx, dword ptr [rax - 0x7f] ; ret 0x500
0x0000020000667b44 : add ecx, dword ptr [rax - 0x7f] ; ret 0xfff
0x000002000062264b : add ecx, dword ptr [rax - 1] ; and byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200001c464f : add ecx, dword ptr [rax - 1] ; loope 0x200001c4615 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000070c06b : add ecx, dword ptr [rax - 1] ; loopne 0x2000070c0be ; jmp rax
0x0000020000002fbb : add ecx, dword ptr [rax - 1] ; ret
0x0000020000147bcb : add ecx, dword ptr [rax - 1] ; ret 0x334d
0x00000200000d2c62 : add ecx, dword ptr [rax - 1] ; ret 0x3b48
0x000002000007f50d : add ecx, dword ptr [rax - 1] ; ret 0x6b48
0x00000200000126a4 : add ecx, dword ptr [rax - 1] ; ret 0xc148
0x000002000010299f : add ecx, dword ptr [rax - 1] ; ret 0xe183
0x00000200001c8711 : add ecx, dword ptr [rax - 9] ; ror byte ptr [rax + 0xb], 1 ; ret 0xfeb
0x0000020000535769 : add ecx, dword ptr [rbp + 0x33] ; ret
0x00000200004e4fab : add ecx, dword ptr [rbp + 0xb] ; ret 0x2b4c
0x000002000007257e : add ecx, dword ptr [rbp + 0xb] ; ret 0x894c
0x00000200000121fb : add ecx, dword ptr [rbp + rcx*4 + 0x14] ; add dword ptr [rcx - 0x75], eax ; ret
0x0000020000521704 : add ecx, dword ptr [rbp - 0x3d74fbbe] ; ret
0x000002000017bf8f : add ecx, dword ptr [rbp - 0x75] ; ret
0x0000020000002e55 : add ecx, dword ptr [rbp - 0x75] ; ret 0x348
0x000002000017e0c2 : add ecx, dword ptr [rbp - 0x75] ; ror byte ptr [rbp + 0x3b], 1 ; ret
0x00000200001fc46c : add ecx, dword ptr [rbx - 0x3d74efae] ; ret
0x0000020000195ed2 : add ecx, dword ptr [rcx + 0x23] ; ret
0x0000020000784e5c : add ecx, dword ptr [rcx + 0x33] ; adc byte ptr [rbx - 0x2cb7073d], al ; ret 0x8349
0x00000200004f0b19 : add ecx, dword ptr [rcx + 0x3b] ; ret
0x0000020000230039 : add ecx, dword ptr [rcx + 0x3b] ; sal byte ptr [rdi + 0x2c], 3 ; ret
0x00000200000a150e : add ecx, dword ptr [rcx + 0xb] ; ret 0x8948
0x00000200000724a7 : add ecx, dword ptr [rcx + 0xb] ; ret 0x8949
0x0000020000784fb7 : add ecx, dword ptr [rcx + 3] ; fmul qword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0x8341
0x00000200000f6ebc : add ecx, dword ptr [rcx + 3] ; ret
0x00000200004ec0b5 : add ecx, dword ptr [rcx + 3] ; ret 0x4489
0x00000200004783cf : add ecx, dword ptr [rcx + rcx*4 + 2] ; mov al, 1 ; ret
0x00000200000c8720 : add ecx, dword ptr [rcx - 0x74dfdbbc] ; ret 0xc133
0x0000020000014487 : add ecx, dword ptr [rcx - 0x75] ; ret
0x000002000024c0eb : add ecx, dword ptr [rcx - 0x75] ; ret 0x3348
0x00000200006e02f8 : add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x000002000004bdc6 : add ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200000532b5 : add ecx, dword ptr [rcx - 0x75] ; ret 0xf748
0x0000020000552761 : add ecx, dword ptr [rcx - 0x75] ; ror dword ptr [rax - 0x75], cl ; ret 0xccc3
0x00000200000fb31d : add ecx, dword ptr [rcx - 0x75] ; salc ; call qword ptr [rdi]
0x00000200002267f7 : add ecx, dword ptr [rcx - 0x77] ; adc cl, byte ptr [rcx - 0x75] ; ret
0x000002000043e1d4 : add ecx, dword ptr [rcx - 0x77] ; sbb byte ptr [rcx - 0x75], cl ; ret 0x8941
0x000002000017725d : add ecx, dword ptr [rcx - 0x7d] ; mov byte ptr [rcx + rcx*2], 0x83 ; ret 0xe904
0x000002000020ea6b : add ecx, dword ptr [rcx - 0x7d] ; ret
0x0000020000002c09 : add ecx, dword ptr [rcx - 0x7d] ; rol byte ptr [rbx], 0xeb ; sbb byte ptr [rax - 1], cl ; ret
0x0000020000116198 : add ecx, dword ptr [rcx - 1] ; loopne 0x2000011615e ; add al, byte ptr [rax] ; add al, al ; ret
0x0000020000139dbb : add ecx, dword ptr [rcx - 1] ; loopne 0x20000139d81 ; add al, byte ptr [rax] ; add al, al ; ret
0x000002000014104d : add ecx, dword ptr [rcx - 1] ; ret
0x00000200001e5af9 : add ecx, dword ptr [rcx - 1] ; ret 0x8348
0x00000200000c0f82 : add ecx, dword ptr [rcx - 1] ; ret 0xc149
0x0000020000041d72 : add ecx, dword ptr [rcx] ; xor byte ptr [rdx + rcx - 0x75], 0xc2 ; ret
0x000002000006b380 : add ecx, dword ptr [rdi] ; mov bh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0xf10
0x00000200007b2105 : add ecx, dword ptr [rdi] ; ret 0x8348
0x0000020000437f66 : add ecx, dword ptr [rdi] ; ret 0x8789
0x0000020000105fcc : add ecx, dword ptr [rdi] ; test bl, bl ; ret 6
0x000002000046daea : add ecx, dword ptr [rdi] ; test byte ptr [rax + rdx*2 + 0x15], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000564ebb : add ecx, dword ptr [rdi] ; test byte ptr [rdi + rsi*2 + 9], cl ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000002bff : add ecx, dword ptr [rdi] ; test byte ptr [rdx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000079eb20 : add ecx, dword ptr [rdi] ; test byte ptr [rsi - 0x7cfffd96], cl ; call qword ptr [rsi]
0x0000020000106130 : add ecx, dword ptr [rdi] ; test dl, bl ; ret 6
0x00000200006c7cfb : add ecx, dword ptr [rdi] ; test dword ptr [rbp - 0x7d000000], eax ; call qword ptr [rdi]
0x000002000005a23c : add ecx, dword ptr [rdi] ; test dword ptr [rdx - 0xa000000], edi ; ret 0xf08
0x000002000000f219 : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x82e8
0x000002000062ecd5 : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf741
0x00000200005357a3 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x2a8
0x00000200007b7042 : add ecx, dword ptr [rdx + 0x55e8ffb4] ; ret 0xffda
0x00000200007179b7 : add ecx, dword ptr [rip - 0x4182cd] ; call 0x20000703bf0
0x00000200000bf2fc : add ecx, eax ; call 0x20000016c49
0x000002000012e35a : add ecx, eax ; call 0x200000d9d79
0x000002000043aaf7 : add ecx, eax ; cmp r8d, r9d ; jb 0x2000043aae6 ; mov eax, edx ; ret
0x000002000043aaf7 : add ecx, eax ; cmp r8d, r9d ; jb 0x2000043aae7 ; mov eax, edx ; ret
0x0000020000152ae2 : add ecx, eax ; jmp r9
0x000002000016efef : add ecx, eax ; jmp rcx
0x000002000000e937 : add ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x00000200000fd62c : add ecx, eax ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200004bb759 : add ecx, eax ; ret 0x84ff
0x000002000053b869 : add ecx, eax ; sar bh, 0x8a ; ret
0x000002000070a079 : add ecx, eax ; sub ecx, r10d ; mov dword ptr [r8], ecx ; ret
0x00000200001a233a : add ecx, eax ; xor r8d, r8d ; mov dl, 2 ; call 0x2000004e591
0x000002000016b309 : add ecx, ebp ; call 0x20000157544
0x00000200000f70b0 : add ecx, ebp ; jmp rcx
0x00000200006f5dd1 : add ecx, ebp ; push rdi ; jmp 0x1ffcafb5de1
0x00000200001762be : add ecx, ebp ; ret
0x00000200001ad22a : add ecx, ebp ; ret 0xf7df
0x000002000048aa15 : add ecx, ebp ; ret 0xffee
0x00000200005e29ca : add ecx, ebp ; ret 0xfff0
0x00000200006d52b6 : add ecx, ebx ; call 0x20000157549
0x0000020000083452 : add ecx, ebx ; jmp rcx
0x000002000005a314 : add ecx, ecx ; jmp rcx
0x000002000078591b : add ecx, ecx ; jne 0x2000078590d ; mov rax, rdx ; jmp 0x2000078592c
0x0000020000706320 : add ecx, ecx ; mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x000002000079d82a : add ecx, ecx ; mov rax, qword ptr [r13 + rcx*8 + 0x18] ; xor ecx, ecx ; call rax
0x0000020000496e52 : add ecx, ecx ; movdqu xmmword ptr [rax + rcx*8], xmm0 ; ret
0x0000020000688318 : add ecx, ecx ; movzx eax, cx ; ret
0x000002000001c0fe : add ecx, edi ; jmp rcx
0x0000020000028ffc : add ecx, edi ; mov rdi, qword ptr [rsp + 0x10] ; jmp rcx
0x000002000013cbef : add ecx, edi ; ret
0x00000200001b860a : add ecx, edx ; call 0x1ffc31d669a
0x0000020000710dad : add ecx, edx ; cmp qword ptr [rcx], rax ; jne 0x20000710dad ; ret
0x000002000002f170 : add ecx, edx ; jmp rcx
0x00000200003d0a94 : add ecx, edx ; mov dword ptr [r8], ecx ; add eax, ecx ; ret
0x000002000048c33f : add ecx, esi ; jmp rcx
0x000002000013cbee : add ecx, r15d ; ret
0x00000200000fd62b : add ecx, r8d ; movzx eax, word ptr [rax + rcx*2] ; ret
0x0000020000688317 : add ecx, r9d ; movzx eax, cx ; ret
0x000002000077ff3e : add edi, -1 ; jne 0x2000077ff35 ; mov rax, rdx ; jmp 0x2000077ff51
0x0000020000780981 : add edi, -1 ; jne 0x20000780978 ; mov rax, rdx ; jmp 0x20000780994
0x0000020000781bf0 : add edi, -1 ; jne 0x20000781be7 ; mov rax, rdx ; jmp 0x20000781c03
0x000002000078762e : add edi, -1 ; jne 0x20000787625 ; mov rax, rdx ; jmp 0x20000787641
0x0000020000789ba6 : add edi, -1 ; jne 0x20000789b9d ; mov rax, rdx ; jmp 0x20000789bb9
0x000002000078bb1d : add edi, -1 ; jne 0x2000078bb15 ; mov rax, rdx ; jmp 0x2000078bb30
0x00000200004e5ee1 : add edi, 0x30 ; jmp 0x200004e5f00
0x0000020000213fdf : add edi, 4 ; jmp 0x20000213fab
0x00000200003ffba5 : add edi, dword ptr [r11] ; ret
0x000002000000371f : add edi, dword ptr [rbx + rax] ; jne 0x2000000373e ; mov rcx, rdi ; call rsi
0x0000020000045f5f : add edi, dword ptr [rbx] ; ret
0x0000020000642999 : add edi, dword ptr [rbx] ; ret 0x4c73
0x000002000015df6d : add edi, dword ptr [rcx] ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x000002000015df2b : add edi, dword ptr [rcx] ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x00000200003d6fe2 : add edi, dword ptr [rdx - 1] ; dec dword ptr [rax + 0x3b] ; ret
0x00000200006e789b : add edi, dword ptr [rdx] ; ret 0x1b75
0x0000020000535789 : add edi, dword ptr [rdx] ; ret 0x2975
0x00000200000bb6c8 : add edi, eax ; jmp 0x200000bb691
0x0000020000456871 : add edi, eax ; or byte ptr [r8 + rax], al ; add byte ptr [rax], al ; ret
0x000002000066a0b4 : add edi, eax ; rol byte ptr [r9], 1 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x8948
0x00000200007a74e2 : add edi, ebx ; mov r13d, ebx ; jmp 0x200007a74bc
0x000002000014c3be : add edi, ecx ; mov rax, rbx ; pop rbx ; ret
0x000002000014c39e : add edi, ecx ; pop rbx ; ret
0x0000020000401eb9 : add edi, edi ; je 0x20000401ec2 ; ret
0x00000200004634d0 : add edi, edi ; pop rbx ; add byte ptr [rbx], al ; lcall ptr [rbx] ; jmp qword ptr [rcx]
0x00000200000034d2 : add edi, edi ; ret
0x00000200001b016f : add edi, edi ; ret 0x344
0x0000020000670383 : add edi, edi ; ret 0x8348
0x00000200001e1e1a : add edi, edi ; ret 0xb848
0x000002000059e280 : add edi, edi ; ret 0xd7eb
0x000002000004e2c5 : add edi, edi ; ret 0xdaeb
0x000002000059e0a2 : add edi, edi ; ret 0xdeeb
0x0000020000793f27 : add edi, edi ; ret 0xff48
0x00000200003db55a : add edi, edx ; dec esp ; add rsp, 0x40 ; pop rbx ; ret
0x000002000070b4b4 : add edi, esi ; mov edx, r15d ; call rdi
0x00000200004665cc : add edi, esi ; ret
0x00000200000e1690 : add edi, esi ; ror dword ptr [rbx], 1 ; ret 0xc823
0x000002000013cbca : add edi, r15d ; ret
0x00000200001d1e4b : add edx, -1 ; jne 0x200001d1e21 ; ret
0x00000200001e4b19 : add edx, -1 ; jne 0x200001e4b0e ; xor eax, eax ; ret
0x0000020000245a41 : add edx, -1 ; jne 0x20000245a38 ; mov rax, rdx ; jmp 0x20000245a54
0x0000020000245c81 : add edx, -1 ; jne 0x20000245c77 ; mov rax, rdx ; jmp 0x20000245c94
0x00000200007c6026 : add edx, -8 ; add rdx, r14 ; call 0x200007d2270
0x0000020000066dd6 : add edx, 0 ; add byte ptr [rax], al ; add ebx, ebp ; ret 0xcccc
0x0000020000430dd9 : add edx, 0x12 ; call 0x2000005f906
0x0000020000201a05 : add edx, 0x13 ; call r9
0x0000020000447f8a : add edx, 0x20 ; cmp r9d, r11d ; jb 0x20000447f7e ; ret
0x0000020000024e90 : add edx, 0x58 ; call 0x200000a1155
0x00000200006adbbd : add edx, 0xc ; sub r8, 1 ; jne 0x200006adbbe ; ret
0x00000200006cf1ba : add edx, 2 ; cmp r8d, 0xa ; jb 0x200006cf1ba ; ret
0x0000020000046dd4 : add edx, 2 ; cmp rdx, rcx ; jb 0x20000046dc1 ; ret
0x00000200003ccdd8 : add edx, 8 ; cmp rdx, r8 ; jbe 0x200003ccdd8 ; ret
0x0000020000135675 : add edx, dword ptr [rax + 0x44] ; cmp edx, dword ptr [r8 + 0x40] ; jb 0x20000135662 ; ret
0x00000200004e8fa8 : add edx, dword ptr [rbx + 0xe0] ; call 0x20000114ac9
0x00000200004afdd9 : add edx, dword ptr [rbx - 0x3fcd0004] ; ret
0x000002000071c0c5 : add edx, dword ptr [rcx + 0x48c033ff] ; add esp, 0x28 ; ret
0x000002000012abdf : add edx, dword ptr [rdi + 8] ; mov bl, 1 ; call 0x20000056ed3
0x00000200001c4fa2 : add edx, dword ptr [rsi] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200004b2802 : add edx, dword ptr [rsp + 0xc8] ; call 0x2000014ea59
0x00000200000a0a49 : add edx, eax ; cmp rax, rdx ; jbe 0x200000a0a5c ; xor eax, eax ; ret
0x000002000001493d : add edx, eax ; cmp rcx, rdx ; jae 0x20000014950 ; xor eax, eax ; ret
0x0000020000062d11 : add edx, eax ; jmp 0x20000062a9a
0x000002000020ee15 : add edx, eax ; jmp 0x2000020eddf
0x000002000018b40f : add edx, eax ; jmp rdx
0x000002000011904b : add edx, eax ; mov eax, r10d ; add rsp, 0x28 ; ret
0x00000200003fa755 : add edx, eax ; movzx r8d, dx ; jmp 0x200003fa702
0x0000020000798f94 : add edx, ebp ; call 0x20000475294
0x00000200004037ff : add edx, ebx ; jmp rdx
0x000002000002ce2f : add edx, ebx ; jne 0x2000002ce31 ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x0000020000190eab : add edx, ecx ; jmp 0x2000009414f
0x0000020000191451 : add edx, ecx ; jmp 0x20000094bca
0x000002000009736f : add edx, ecx ; jmp 0x20000095f9f
0x00000200006321a5 : add edx, ecx ; jmp r10
0x00000200005d1160 : add edx, ecx ; jmp rdx
0x000002000049464b : add edx, ecx ; movzx eax, dx ; ret
0x0000020000402a42 : add edx, edi ; jmp rdx
0x000002000013cbe9 : add edx, edi ; ret
0x00000200001eab42 : add edx, edx ; and eax, 1 ; or eax, edx ; ret
0x00000200000b6e76 : add edx, edx ; cmp rcx, rdx ; je 0x200000b6e89 ; xor eax, eax ; ret
0x000002000006a06a : add edx, edx ; jmp rdx
0x000002000010c985 : add edx, esi ; add r8d, edx ; jmp 0x2000010c96a
0x00000200007c602a : add edx, esi ; call 0x200007d226c
0x000002000019b0e5 : add edx, esi ; dec dword ptr [rbp + rcx*4 + 5] ; ret 0xb
0x000002000010c984 : add edx, r14d ; add r8d, edx ; jmp 0x2000010c96b
0x000002000013cbe8 : add edx, r15d ; ret
0x00000200003fa754 : add edx, r8d ; movzx r8d, dx ; jmp 0x200003fa703
0x0000020000680b50 : add esi, 0x10 ; mov qword ptr [rsp + 0x50], rsi ; inc edx ; jmp 0x20000680b42
0x00000200005028f7 : add esi, dword ptr [rax + 4] ; mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x200005028cc
0x000002000020ff2b : add esi, dword ptr [rax - 0x3b7cb7ff] ; pop rbx ; ret
0x000002000008390e : add esi, dword ptr [rax - 0x3fcd3cff] ; ret
0x0000020000020b57 : add esi, dword ptr [rax - 0x6f0c3cff] ; xor al, al ; ret
0x0000020000003721 : add esi, dword ptr [rbp + 0x12] ; mov rcx, rdi ; call rsi
0x0000020000055d77 : add esi, dword ptr [rbp + 0x3b] ; mov rcx, rsi ; call r14
0x000002000005b1f4 : add esi, dword ptr [rbp + 2] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000403412 : add esi, dword ptr [rbp + 6] ; mov dword ptr [r9], edx ; mov al, 1 ; ret
0x000002000062994d : add esi, dword ptr [rbp + rax - 0x18] ; ret
0x00000200000b9fab : add esi, dword ptr [rbp + rax - 0xa] ; ret
0x000002000001aa82 : add esi, dword ptr [rbp + rcx + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x00000200007196b7 : add esi, dword ptr [rbp - 0x36] ; xor eax, eax ; ret
0x000002000062971a : add esi, dword ptr [rbx] ; jmp qword ptr [rcx]
0x00000200000dbfe2 : add esi, dword ptr [rbx] ; ret
0x00000200004a85da : add esi, dword ptr [rbx] ; ret 0xe083
0x000002000000ef46 : add esi, dword ptr [rbx] ; rol bl, 0x41 ; mov eax, ecx ; ret
0x0000020000529d09 : add esi, dword ptr [rbx] ; rol bl, 0x48 ; mov eax, ecx ; ret
0x000002000004e31e : add esi, dword ptr [rbx] ; rol bl, 0x48 ; shr eax, 0x20 ; ret
0x000002000002681e : add esi, dword ptr [rbx] ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000043c46c : add esi, dword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x00000200007bb6af : add esi, dword ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; ret
0x00000200000450b5 : add esi, dword ptr [rdi + 0x10] ; mov eax, 1 ; ret
0x00000200003ea4bd : add esi, dword ptr [rdi + rax*4 - 0x7d] ; jmp 0x1ffc2c3b3d1
0x00000200000de037 : add esi, dword ptr [rdx - 0x10] ; or eax, 0xffffffff ; ret
0x00000200005dbd25 : add esi, dword ptr [rdx] ; ret
0x0000020000128b3c : add esi, dword ptr [rdx] ; rol bl, 0x48 ; jmp rcx
0x000002000009724d : add esi, dword ptr [rsi + rax - 0x18] ; ret
0x000002000060c0d0 : add esi, dword ptr [rsp - 0xa] ; ret 0x7402
0x0000020000055d76 : add esi, dword ptr ds:[rbp + 0x3b] ; mov rcx, rsi ; call r14
0x00000200004b4731 : add esi, eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000580d0a : add esi, ebp ; xor edx, edx ; mov rcx, rsi ; call 0x2000024d009
0x000002000003f3cb : add esi, ebx ; adc al, byte ptr [rax] ; ret
0x000002000060f889 : add esi, ebx ; cmp esi, r14d ; jb 0x2000060f858 ; jmp 0x2000060f89b
0x00000200003e0af7 : add esi, edi ; jmp 0x200003e08e1
0x000002000013cbd1 : add esi, edi ; ret
0x000002000001915b : add esi, esi ; ret
0x0000020000093ea8 : add esi, esi ; ret 0x740f
0x000002000007d0d8 : add esi, esi ; ret 0x7502
0x000002000055e07f : add esi, esi ; ret 0xf01
0x00000200001181d5 : add esi, esi ; ret 0xf02
0x000002000048c79b : add esi, esi ; ret 0xf08
0x0000020000095c0d : add esi, esi ; ret 0xf0f
0x000002000041f252 : add esi, esi ; ret 0xf10
0x00000200001929f7 : add esi, esi ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000013c367 : add esi, esp ; mov rdx, rsi ; call r14
0x000002000013cbd0 : add esi, r15d ; ret
0x00000200001196ff : add esp, 0x10 ; pop rbp ; ret
0x000002000007e977 : add esp, 0x10 ; pop rbx ; ret
0x000002000003b9c5 : add esp, 0x10 ; pop rdi ; ret
0x0000020000152b55 : add esp, 0x10 ; ret
0x00000200001e807b : add esp, 0x100 ; pop rbp ; ret
0x00000200000c731c : add esp, 0x100 ; pop rbx ; ret
0x000002000000832a : add esp, 0x100 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000114a4a : add esp, 0x108 ; ret
0x0000020000433da6 : add esp, 0x110 ; pop rbp ; ret
0x0000020000204784 : add esp, 0x110 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000536122 : add esp, 0x110 ; pop rdi ; ret
0x0000020000534901 : add esp, 0x120 ; pop rbp ; ret
0x0000020000521f78 : add esp, 0x120 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000024791 : add esp, 0x130 ; pop r14 ; ret
0x00000200001b8b8b : add esp, 0x130 ; pop rbp ; ret
0x0000020000119281 : add esp, 0x130 ; pop rbx ; ret
0x00000200003e17b4 : add esp, 0x130 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000047152a : add esp, 0x130 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cc86d : add esp, 0x138 ; pop rbp ; pop rcx ; ret
0x0000020000147e1e : add esp, 0x138 ; ret
0x000002000014e700 : add esp, 0x138 ; sti ; ret
0x0000020000679ddb : add esp, 0x140 ; pop rbp ; ret
0x000002000003661b : add esp, 0x140 ; pop rbx ; ret
0x00000200007d3cc2 : add esp, 0x140 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200006f5109 : add esp, 0x140 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006c8063 : add esp, 0x140 ; pop rdi ; ret
0x00000200000cd177 : add esp, 0x148 ; pop r14 ; pop rbp ; ret
0x000002000061ed40 : add esp, 0x148 ; ret
0x000002000012424f : add esp, 0x150 ; pop rbx ; ret
0x0000020000203ecf : add esp, 0x150 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000055c04e : add esp, 0x150 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000049a04d : add esp, 0x158 ; pop r14 ; pop rbp ; ret
0x0000020000045464 : add esp, 0x160 ; pop rbp ; ret
0x000002000055a9d4 : add esp, 0x170 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000003e52b : add esp, 0x170 ; pop rdi ; ret
0x0000020000652ea0 : add esp, 0x170 ; pop rsi ; ret
0x0000020000137c3e : add esp, 0x178 ; ret
0x00000200000698c3 : add esp, 0x18 ; ret
0x000002000052d906 : add esp, 0x180 ; pop rbx ; ret
0x00000200003d5189 : add esp, 0x190 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000210502 : add esp, 0x190 ; pop rdi ; ret
0x0000020000678d5a : add esp, 0x198 ; ret
0x0000020000043405 : add esp, 0x1a0 ; pop rbx ; ret
0x0000020000681b9f : add esp, 0x1a0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000bfc85 : add esp, 0x1a0 ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000157537 : add esp, 0x1a8 ; ret
0x00000200000578eb : add esp, 0x1b0 ; pop rbp ; ret
0x0000020000042fb7 : add esp, 0x1b0 ; pop rbx ; ret
0x00000200004a69ad : add esp, 0x1c0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006843c6 : add esp, 0x1c0 ; pop rdi ; ret
0x000002000011e62c : add esp, 0x1c8 ; ret
0x000002000003701c : add esp, 0x1f0 ; pop rdi ; ret
0x00000200000bc3f2 : add esp, 0x20 ; pop r12 ; pop rbp ; pop rbx ; ret
0x000002000009a405 : add esp, 0x20 ; pop r12 ; pop rdi ; pop rbx ; ret
0x000002000044a13a : add esp, 0x20 ; pop r12 ; ret
0x000002000009d750 : add esp, 0x20 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000070b404 : add esp, 0x20 ; pop r14 ; jmp rax
0x00000200000feea7 : add esp, 0x20 ; pop r14 ; pop r12 ; pop rdi ; ret
0x0000020000017e1f : add esp, 0x20 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200007251bc : add esp, 0x20 ; pop r14 ; pop r13 ; pop rdi ; ret
0x000002000006fba4 : add esp, 0x20 ; pop r14 ; pop rbp ; pop rbx ; ret
0x00000200004ce9af : add esp, 0x20 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000001bf44 : add esp, 0x20 ; pop r14 ; pop rdi ; pop rcx ; ret
0x000002000022e755 : add esp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000016725 : add esp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000058552 : add esp, 0x20 ; pop r14 ; pop rsi ; pop rbx ; ret
0x0000020000004c47 : add esp, 0x20 ; pop r14 ; ret
0x0000020000564245 : add esp, 0x20 ; pop r15 ; pop r12 ; pop rdi ; ret
0x000002000055c16b : add esp, 0x20 ; pop r15 ; pop r13 ; pop rdi ; ret
0x000002000000a0dc : add esp, 0x20 ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000002383b : add esp, 0x20 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200003edccc : add esp, 0x20 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000012192e : add esp, 0x20 ; pop r15 ; pop r14 ; pop rcx ; ret
0x000002000000423f : add esp, 0x20 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200006bd90e : add esp, 0x20 ; pop r15 ; pop r14 ; pop rsi ; ret
0x00000200004790cc : add esp, 0x20 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000001ccca : add esp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000071eb8 : add esp, 0x20 ; pop r15 ; pop rsi ; pop rbx ; ret
0x0000020000009c53 : add esp, 0x20 ; pop r15 ; ret
0x0000020000026e33 : add esp, 0x20 ; pop rbp ; ret
0x0000020000075235 : add esp, 0x20 ; pop rbx ; jmp rax
0x0000020000002557 : add esp, 0x20 ; pop rbx ; ret
0x0000020000034ad4 : add esp, 0x20 ; pop rcx ; ret
0x0000020000457ffc : add esp, 0x20 ; pop rdi ; jmp 0x2000007d087
0x0000020000629186 : add esp, 0x20 ; pop rdi ; jmp 0x2000024d007
0x0000020000101e51 : add esp, 0x20 ; pop rdi ; jmp rax
0x00000200000e372e : add esp, 0x20 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000001a82a : add esp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000128f36 : add esp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000002871 : add esp, 0x20 ; pop rdi ; ret
0x000002000001eb74 : add esp, 0x20 ; pop rsi ; ret
0x00000200003c6291 : add esp, 0x208 ; ret
0x00000200006da6d7 : add esp, 0x210 ; pop rdi ; ret
0x00000200006a912a : add esp, 0x220 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000079f41e : add esp, 0x230 ; pop rdi ; ret
0x00000200003cd9bb : add esp, 0x240 ; pop rdi ; ret
0x000002000069f5d8 : add esp, 0x250 ; pop rbp ; ret
0x000002000069ab4d : add esp, 0x250 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000069af14 : add esp, 0x260 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000053dc39 : add esp, 0x260 ; pop rdi ; ret
0x0000020000603560 : add esp, 0x270 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000062d8d3 : add esp, 0x270 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004230e4 : add esp, 0x270 ; pop rdi ; ret
0x00000200007b5949 : add esp, 0x28 ; jmp 0x200000c678b
0x00000200005ef570 : add esp, 0x28 ; jmp 0x200006ab82d
0x00000200006e0cee : add esp, 0x28 ; jmp qword ptr [r10]
0x00000200003ca67a : add esp, 0x28 ; jmp qword ptr [rip - 0x173d2c]
0x00000200005d0099 : add esp, 0x28 ; jmp r8
0x000002000009a476 : add esp, 0x28 ; pop r12 ; pop rbx ; ret
0x0000020000075de7 : add esp, 0x28 ; pop r15 ; pop r14 ; pop rdi ; pop rbx ; ret
0x000002000001fb1d : add esp, 0x28 ; pop r15 ; pop r14 ; ret
0x000002000015bc93 : add esp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000020d6a7 : add esp, 0x28 ; pop rdi ; pop rbx ; ret
0x000002000003cc49 : add esp, 0x28 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000047b72a : add esp, 0x28 ; pop rdi ; pop rsi ; ret
0x00000200000ec292 : add esp, 0x28 ; pop rsi ; pop rbx ; ret
0x0000020000003830 : add esp, 0x28 ; ret
0x00000200007b8e4b : add esp, 0x290 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000040f26f : add esp, 0x2a0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004f340d : add esp, 0x2a0 ; pop rdi ; ret
0x00000200004334f6 : add esp, 0x2d0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000061e6d0 : add esp, 0x2e0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000003066c : add esp, 0x30 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200007d2d89 : add esp, 0x30 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200004707d8 : add esp, 0x30 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000441b4 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000ac417 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200003c8587 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rcx ; ret
0x0000020000015e54 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000046265f : add esp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000089a9 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000009becf : add esp, 0x30 ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000000e5af : add esp, 0x30 ; pop r14 ; ret
0x000002000011372b : add esp, 0x30 ; pop r15 ; pop r12 ; pop rdi ; ret
0x000002000000c079 : add esp, 0x30 ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000010e1f5 : add esp, 0x30 ; pop r15 ; pop r14 ; pop r13 ; ret
0x000002000007b7f4 : add esp, 0x30 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000000965e : add esp, 0x30 ; pop r15 ; pop r14 ; pop rdi ; ret
0x000002000006f011 : add esp, 0x30 ; pop r15 ; pop rdi ; pop rbp ; ret
0x0000020000013000 : add esp, 0x30 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000041f707 : add esp, 0x30 ; pop r15 ; pop rsi ; pop rbx ; ret
0x0000020000090440 : add esp, 0x30 ; pop r15 ; ret
0x0000020000043da7 : add esp, 0x30 ; pop rbp ; ret
0x000002000071b855 : add esp, 0x30 ; pop rbx ; jmp r10
0x000002000071b85d : add esp, 0x30 ; pop rbx ; jmp r8
0x0000020000003d0b : add esp, 0x30 ; pop rbx ; ret
0x00000200000d0ca9 : add esp, 0x30 ; pop rcx ; ret
0x0000020000707d96 : add esp, 0x30 ; pop rdi ; jmp rax
0x000002000015dec1 : add esp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000025240 : add esp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000050b37 : add esp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000003117 : add esp, 0x30 ; pop rdi ; ret
0x000002000001c364 : add esp, 0x30 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000135762 : add esp, 0x30 ; pop rsi ; ret
0x000002000000c264 : add esp, 0x308 ; ret
0x000002000071b94e : add esp, 0x38 ; jmp r8
0x000002000071b766 : add esp, 0x38 ; jmp r9
0x000002000071b76d : add esp, 0x38 ; jmp rax
0x00000200000f6cde : add esp, 0x38 ; pop r12 ; pop rbx ; ret
0x00000200003d454e : add esp, 0x38 ; pop r13 ; pop rbp ; ret
0x0000020000116fb7 : add esp, 0x38 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000001a97c : add esp, 0x38 ; pop r14 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000429f9a : add esp, 0x38 ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000008f5fb : add esp, 0x38 ; pop r15 ; pop r14 ; pop rsi ; pop rbx ; ret
0x000002000049a8eb : add esp, 0x38 ; pop r15 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009c064 : add esp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000056eb4 : add esp, 0x38 ; pop rdi ; pop rbp ; ret
0x00000200000cf5ea : add esp, 0x38 ; pop rdi ; pop rbx ; ret
0x00000200000a04f3 : add esp, 0x38 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000051bc8e : add esp, 0x38 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000073d9d : add esp, 0x38 ; pop rsi ; pop rbx ; ret
0x0000020000005bfe : add esp, 0x38 ; ret
0x00000200006ad741 : add esp, 0x390 ; pop rdi ; ret
0x00000200006a4b4c : add esp, 0x3a0 ; pop rbp ; ret
0x00000200006a2960 : add esp, 0x3b0 ; pop rdi ; ret
0x000002000009a605 : add esp, 0x40 ; pop r12 ; ret
0x00000200004994a0 : add esp, 0x40 ; pop r13 ; ret
0x0000020000459d68 : add esp, 0x40 ; pop r14 ; pop r12 ; pop rbp ; ret
0x00000200000062bb : add esp, 0x40 ; pop r14 ; pop r12 ; pop rdi ; ret
0x0000020000628f5f : add esp, 0x40 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200003e3dd9 : add esp, 0x40 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200003fec53 : add esp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000ebaac : add esp, 0x40 ; pop r14 ; pop rdi ; pop rbx ; ret
0x000002000015b6e3 : add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000031ba3 : add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000001062e : add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000b0ce0 : add esp, 0x40 ; pop r14 ; pop rsi ; pop rbp ; ret
0x00000200000222b6 : add esp, 0x40 ; pop r14 ; ret
0x0000020000516275 : add esp, 0x40 ; pop r15 ; pop r12 ; pop rdi ; ret
0x0000020000009423 : add esp, 0x40 ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000002c1aa : add esp, 0x40 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200000a08de : add esp, 0x40 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000009ef3e : add esp, 0x40 ; pop r15 ; pop r14 ; pop rbx ; ret
0x0000020000022902 : add esp, 0x40 ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000477e92 : add esp, 0x40 ; pop r15 ; pop r14 ; pop rsi ; ret
0x00000200006e67ab : add esp, 0x40 ; pop r15 ; pop rbx ; pop rbp ; ret
0x000002000079780b : add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004b7e6a : add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000003db13 : add esp, 0x40 ; pop r15 ; ret
0x00000200000261f8 : add esp, 0x40 ; pop rbp ; ret
0x00000200006273f5 : add esp, 0x40 ; pop rbx ; jmp 0x2000024d007
0x000002000000c8fb : add esp, 0x40 ; pop rbx ; ret
0x000002000015b79e : add esp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000001bca9 : add esp, 0x40 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000001c0ea : add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000001b93c : add esp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000074f4 : add esp, 0x40 ; pop rdi ; ret
0x000002000067c8d8 : add esp, 0x40 ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000025472 : add esp, 0x40 ; pop rsi ; ret
0x00000200007d169e : add esp, 0x460 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000c447e : add esp, 0x48 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000491455 : add esp, 0x48 ; pop r14 ; pop r13 ; ret
0x00000200000625b1 : add esp, 0x48 ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200004cf585 : add esp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003e0f48 : add esp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000b9462 : add esp, 0x48 ; pop r15 ; pop rbp ; ret
0x000002000057ce11 : add esp, 0x48 ; pop rbp ; pop rbx ; ret
0x000002000013a8a0 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x000002000015b814 : add esp, 0x48 ; pop rdi ; pop rbp ; ret
0x00000200000de894 : add esp, 0x48 ; pop rdi ; pop rbx ; ret
0x0000020000065ca3 : add esp, 0x48 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000001da8f : add esp, 0x48 ; pop rdi ; pop rsi ; ret
0x00000200001290b0 : add esp, 0x48 ; pop rsi ; pop rbx ; ret
0x000002000000c92c : add esp, 0x48 ; ret
0x00000200000ca1f4 : add esp, 0x4a0 ; pop rbp ; ret
0x000002000013b3ed : add esp, 0x4d8 ; ret
0x000002000015676a : add esp, 0x50 ; call r10
0x000002000071d219 : add esp, 0x50 ; pop r14 ; jmp qword ptr [rip + 0x3c23b]
0x0000020000230c6d : add esp, 0x50 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200000bb916 : add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003e101e : add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000052532f : add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000055d6c : add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004cf52f : add esp, 0x50 ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000000d684 : add esp, 0x50 ; pop r14 ; ret
0x0000020000402048 : add esp, 0x50 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200004688bd : add esp, 0x50 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000066ee72 : add esp, 0x50 ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000021c55 : add esp, 0x50 ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000041f7c4 : add esp, 0x50 ; pop r15 ; ret
0x0000020000036298 : add esp, 0x50 ; pop rbp ; ret
0x000002000000296f : add esp, 0x50 ; pop rbx ; ret
0x000002000051d978 : add esp, 0x50 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200002025f5 : add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000001059c : add esp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000c787 : add esp, 0x50 ; pop rdi ; ret
0x00000200004c14da : add esp, 0x50 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000f0abe : add esp, 0x50 ; pop rsi ; ret
0x000002000020e523 : add esp, 0x518 ; ret
0x00000200000dd670 : add esp, 0x58 ; pop r13 ; pop r12 ; ret
0x000002000057f301 : add esp, 0x58 ; pop r13 ; pop rbp ; ret
0x000002000007a992 : add esp, 0x58 ; pop r15 ; pop r13 ; ret
0x00000200000c84e3 : add esp, 0x58 ; pop r15 ; pop r14 ; pop rbp ; pop rbx ; ret
0x00000200006bd32a : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000020000115a41 : add esp, 0x58 ; pop rdi ; pop rbx ; ret
0x00000200002227df : add esp, 0x58 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000054ed9c : add esp, 0x58 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000554f : add esp, 0x58 ; ret
0x00000200000707ce : add esp, 0x60 ; pop r12 ; ret
0x00000200004b638f : add esp, 0x60 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000008fdd2 : add esp, 0x60 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200000ceb96 : add esp, 0x60 ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200001cb631 : add esp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004f22cf : add esp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000009780c : add esp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000066943b : add esp, 0x60 ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000005f62c : add esp, 0x60 ; pop r15 ; pop r12 ; pop rbx ; ret
0x00000200006b5b61 : add esp, 0x60 ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200004a5d1c : add esp, 0x60 ; pop r15 ; pop r14 ; pop r12 ; ret
0x00000200000db279 : add esp, 0x60 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200000b2918 : add esp, 0x60 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200006348fd : add esp, 0x60 ; pop r15 ; pop rdi ; pop rbx ; ret
0x0000020000069c4e : add esp, 0x60 ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000102aa2 : add esp, 0x60 ; pop r15 ; pop rsi ; pop rbp ; ret
0x00000200000267ba : add esp, 0x60 ; pop rbp ; ret
0x000002000003878d : add esp, 0x60 ; pop rbx ; ret
0x000002000013b571 : add esp, 0x60 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000235847 : add esp, 0x60 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000012757e : add esp, 0x60 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002da01 : add esp, 0x60 ; pop rdi ; ret
0x0000020000534d7e : add esp, 0x630 ; pop rdi ; ret
0x0000020000007f57 : add esp, 0x648 ; ret
0x00000200004c2632 : add esp, 0x68 ; pop r12 ; pop rbp ; ret
0x0000020000496c0f : add esp, 0x68 ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000a31c4 : add esp, 0x68 ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000013b9be : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x000002000013b49f : add esp, 0x68 ; pop rdi ; pop rbx ; ret
0x000002000060a62d : add esp, 0x68 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000147e7e : add esp, 0x68 ; pop rdi ; pop rsi ; ret
0x00000200000c01ee : add esp, 0x68 ; pop rsi ; pop rbx ; ret
0x000002000001f309 : add esp, 0x68 ; ret
0x0000020000447e3d : add esp, 0x70 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000514cf : add esp, 0x70 ; pop r13 ; ret
0x00000200000e83f1 : add esp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000c68f0 : add esp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000229384 : add esp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000609127 : add esp, 0x70 ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000051a4fb : add esp, 0x70 ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200006ac5fe : add esp, 0x70 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000003f8e0 : add esp, 0x70 ; pop rbp ; ret
0x00000200000d50f8 : add esp, 0x70 ; pop rbx ; ret
0x0000020000026f7d : add esp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000010a10 : add esp, 0x70 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000407a40 : add esp, 0x70 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000085513 : add esp, 0x70 ; pop rdi ; ret
0x000002000006e3dc : add esp, 0x70 ; pop rsi ; ret
0x00000200004d51cf : add esp, 0x78 ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000c6c38 : add esp, 0x78 ; pop r13 ; pop rbp ; ret
0x00000200004743dd : add esp, 0x78 ; pop r15 ; pop r14 ; pop rdi ; pop rbx ; ret
0x000002000004829a : add esp, 0x78 ; pop rdi ; pop rbx ; ret
0x00000200000150c0 : add esp, 0x78 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000e31e5 : add esp, 0x78 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b85f8 : add esp, 0x78 ; pop rdi ; pop rsi ; ret
0x0000020000016a65 : add esp, 0x78 ; ret
0x000002000012083b : add esp, 0x80 ; pop rbp ; ret
0x0000020000045059 : add esp, 0x80 ; pop rbx ; ret
0x000002000054bca9 : add esp, 0x80 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000138840 : add esp, 0x80 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000021fdf9 : add esp, 0x80 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000014d56 : add esp, 0x80 ; pop rdi ; ret
0x000002000069f05a : add esp, 0x840 ; pop rbp ; ret
0x00000200001dcae7 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000020000013dbf : add esp, 0x88 ; ret
0x00000200004e5f6a : add esp, 0x90 ; pop r12 ; ret
0x000002000008af90 : add esp, 0x90 ; pop rbp ; ret
0x00000200003f3a69 : add esp, 0x90 ; pop rbx ; ret
0x00000200001dccc7 : add esp, 0x90 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001b76dc : add esp, 0x90 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000070fb53 : add esp, 0x90 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000cee2f : add esp, 0x90 ; pop rdi ; ret
0x000002000006cb81 : add esp, 0x90 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000003022 : add esp, 0x98 ; pop r15 ; pop rbx ; ret
0x00000200001dca22 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000200000f2faf : add esp, 0x98 ; pop rsi ; pop rbp ; ret
0x00000200001321c5 : add esp, 0x98 ; ret
0x000002000003f9cf : add esp, 0xa0 ; pop rbp ; ret
0x000002000012dc4b : add esp, 0xa0 ; pop rbx ; ret
0x00000200003e1c73 : add esp, 0xa0 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001e6257 : add esp, 0xa0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001c454b : add esp, 0xa0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000c9541 : add esp, 0xa0 ; pop rdi ; ret
0x00000200000a615e : add esp, 0xa8 ; pop r13 ; pop rbx ; ret
0x00000200001dd3fd : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000200000cac10 : add esp, 0xa8 ; pop rdi ; pop rbp ; ret
0x00000200000eaee5 : add esp, 0xa8 ; pop rdi ; pop rbx ; ret
0x000002000004dc8a : add esp, 0xa8 ; ret
0x00000200004badb2 : add esp, 0xa90 ; pop rdi ; ret
0x0000020000041bf8 : add esp, 0xb0 ; pop rbp ; ret
0x0000020000231e75 : add esp, 0xb0 ; pop rbx ; ret
0x00000200002045ac : add esp, 0xb0 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000a85b8 : add esp, 0xb0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001275e6 : add esp, 0xb0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000e47aa : add esp, 0xb0 ; pop rdi ; ret
0x0000020000567cd8 : add esp, 0xb0 ; pop rsi ; ret
0x00000200004c0da7 : add esp, 0xb8 ; pop r13 ; pop rsi ; ret
0x000002000006808d : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000002000069fa84 : add esp, 0xb8 ; pop rdi ; pop rbx ; ret
0x000002000011ddc6 : add esp, 0xb8 ; ret
0x00000200000d6723 : add esp, 0xc ; add byte ptr [rax - 1], cl ; ret 0x70e9
0x00000200000f0874 : add esp, 0xc0 ; pop rbp ; ret
0x00000200001c0374 : add esp, 0xc0 ; pop rbx ; ret
0x000002000043cbb0 : add esp, 0xc0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000057dad : add esp, 0xc0 ; pop rdi ; ret
0x0000020000025dad : add esp, 0xc0 ; pop rsi ; ret
0x00000200000df536 : add esp, 0xc8 ; ret
0x00000200001bfd19 : add esp, 0xce8 ; ret
0x00000200000312fe : add esp, 0xd0 ; pop rbp ; ret
0x000002000014b904 : add esp, 0xd0 ; pop rbx ; ret
0x00000200003cc711 : add esp, 0xd0 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001f5d57 : add esp, 0xd0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000021ff22 : add esp, 0xd0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200006363aa : add esp, 0xd0 ; pop rdi ; ret
0x0000020000125ce5 : add esp, 0xd8 ; ret
0x000002000001b6cf : add esp, 0xe0 ; pop rbp ; ret
0x00000200001d46f2 : add esp, 0xe0 ; pop rbx ; ret
0x000002000021cd1c : add esp, 0xe0 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200006f6673 : add esp, 0xe0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000633042 : add esp, 0xe0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001e1c74 : add esp, 0xe0 ; pop rdi ; ret
0x0000020000403dff : add esp, 0xe0 ; pop rsi ; ret
0x000002000002c581 : add esp, 0xe8 ; ret
0x0000020000114356 : add esp, 0xf0 ; pop rbp ; ret
0x000002000023934f : add esp, 0xf0 ; pop rbx ; ret
0x00000200000d7ed9 : add esp, 0xf0 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000001ce25 : add esp, 0xf0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000010cca0 : add esp, 0xf0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000014a44 : add esp, 0xf0 ; pop rdi ; ret
0x00000200007bc094 : add esp, 0xf8 ; ret
0x000002000024c590 : add esp, 8 ; jmp r8
0x000002000001a42e : add esp, 8 ; ret
0x00000200005a7c31 : add esp, dword ptr [rbx] ; ret 0x3c8d
0x00000200004b1a59 : add esp, dword ptr [rbx] ; ret 0xd803
0x000002000043cac6 : add esp, dword ptr [rcx + rax] ; ret
0x000002000016c06f : add esp, dword ptr [rdx] ; ret
0x00000200005ec061 : add esp, dword ptr [rsi + 0x3b] ; ret 0x4c74
0x00000200007c782f : add esp, dword ptr [rsi + 3] ; ret 0x8348
0x0000020000701834 : add esp, dword ptr [rsi - 0x77] ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000101734 : add esp, ecx ; mov rcx, r12 ; call 0x200000dd947
0x000002000051686f : add esp, edi ; mov rdx, r12 ; call 0x2000013bb7c
0x000002000013cbdd : add esp, edi ; ret
0x000002000013cbdc : add esp, r15d ; ret
0x000002000002de88 : add qword ptr [0x2e70], rcx ; ret
0x000002000042d85a : add qword ptr [r10 + 0x18], r8 ; ret
0x000002000051ab8b : add qword ptr [r10 + rcx*8 + 0x10], rax ; mov qword ptr [r10 + 8], rdx ; ret
0x000002000066923c : add qword ptr [r10], 0x18 ; ret
0x00000200006692fb : add qword ptr [r10], 0x28 ; ret
0x00000200003f40a8 : add qword ptr [r11], r12 ; ret 0xc23b
0x0000020000407bec : add qword ptr [r11], rbp ; ret
0x00000200004250a1 : add qword ptr [r8 + 0x10], r9 ; add rsp, 0x28 ; ret
0x000002000078b538 : add qword ptr [r8 + 0x33], r9 ; ret 0x8948
0x0000020000247034 : add qword ptr [r8 + 0x33], rcx ; ret 0x8948
0x000002000078ed53 : add qword ptr [r8 + 0x33], rcx ; ret 0xd233
0x0000020000514a6f : add qword ptr [r8 - 0x73], r9 ; ret
0x000002000007e462 : add qword ptr [r8 - 0x75], rcx ; ret
0x000002000045046d : add qword ptr [r8 - 0x7d], r9 ; ret 0x4102
0x00000200002117fa : add qword ptr [r8], 2 ; ret
0x0000020000050063 : add qword ptr [r8], r8 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001f248e : add qword ptr [r8], r8 ; add byte ptr [rax - 9], cl ; ret
0x000002000014a885 : add qword ptr [r8], r8 ; add cl, ch ; mov dl, 0xb7 ; add byte ptr [rax], al ; ret
0x00000200000db6a0 : add qword ptr [r8], rax ; add byte ptr [rbx + 0x3481c40], cl ; ret 0x3b4c
0x000002000014a7c5 : add qword ptr [r8], rax ; add cl, ch ; jb 0x2000014a78d ; add byte ptr [rax], al ; ret
0x000002000055c1d1 : add qword ptr [rax + r9*4 + 0x42], rax ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4d04
0x000002000000ff44 : add qword ptr [rax - 0x75], rcx ; ret 0x49f0
0x00000200005a94b3 : add qword ptr [rax - 0x75], rcx ; ret 0x950f
0x0000020000087cd7 : add qword ptr [rax], r8 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000005378c : add qword ptr [rax], r8 ; add byte ptr [rcx + 0xb], al ; ret 0x8942
0x000002000012e727 : add qword ptr [rax], r8 ; add byte ptr [rcx - 0x75], al ; ret 0x8b49
0x00000200000131dc : add qword ptr [rax], rax ; add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x000002000059ecbb : add qword ptr [rax], rax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200000bfa0f : add qword ptr [rax], rax ; add byte ptr [rcx + 0x5e], al ; pop r12 ; ret
0x00000200000cd179 : add qword ptr [rax], rax ; add byte ptr [rcx + 0x5e], al ; pop rbp ; ret
0x000002000055d2b0 : add qword ptr [rbp - 0x577bf037], rax ; ret
0x000002000003e1fb : add qword ptr [rcx + 0x158], rax ; ret
0x00000200007b06c6 : add qword ptr [rcx + 0x18], rax ; add rsp, 0x28 ; ret
0x00000200007b05a2 : add qword ptr [rcx + 0x18], rax ; add rsp, 0x38 ; ret
0x0000020000032d5f : add qword ptr [rcx + 0x3b], r9 ; ror byte ptr [rdi], 0x94 ; ret 0x2b49
0x0000020000050f5e : add qword ptr [rcx + 0x78], r8 ; ret
0x00000200001a6667 : add qword ptr [rcx + 8], rax ; jmp 0x200000e2917
0x0000020000212343 : add qword ptr [rcx - 0x7d], rax ; ret 0x4402
0x00000200007b0a2d : add qword ptr [rdx + 0x18], rax ; add rsp, 0x28 ; ret
0x00000200005136e2 : add qword ptr [rdx + 0x22c18a03], r14 ; ret 0xc23a
0x0000020000109e42 : add qword ptr [rdx + 8], -8 ; ret
0x000002000013f6e5 : add qword ptr [rdx], 2 ; add rsp, 0x38 ; ret
0x0000020000044b20 : add qword ptr [rdx], r8 ; ret
0x0000020000214dd3 : add qword ptr [rdx], rcx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000002de87 : add qword ptr gs:[0x2e70], rcx ; ret
0x00000200006321a4 : add r10, rcx ; jmp r10
0x00000200001d1e4a : add r10d, -1 ; jne 0x200001d1e22 ; ret
0x0000020000245a40 : add r10d, -1 ; jne 0x20000245a39 ; mov rax, rdx ; jmp 0x20000245a55
0x0000020000245c80 : add r10d, -1 ; jne 0x20000245c78 ; mov rax, rdx ; jmp 0x20000245c95
0x00000200005afe48 : add r11d, ecx ; dec dword ptr [rax - 0x39] ; ret 0x3c80
0x0000020000101733 : add r12, rcx ; mov rcx, r12 ; call 0x200000dd948
0x000002000051686e : add r12, rdi ; mov rdx, r12 ; call 0x2000013bb7d
0x00000200006d1d01 : add r12b, byte ptr [rsi + 0x3b] ; ret
0x000002000067070b : add r12b, byte ptr [rsi - 9] ; fadd dword ptr [rcx - 0x75] ; ret 0xc91a
0x00000200003e00ec : add r13, r8 ; adc esp, ebp ; ret 0x84ff
0x0000020000793dba : add r13b, byte ptr [r10] ; ret
0x000002000017afa9 : add r13b, byte ptr [r11] ; ret
0x000002000007a051 : add r13b, byte ptr [r11] ; ret 0x975
0x00000200001a85aa : add r13b, byte ptr [r8 + 0xf097504] ; mov dh, 0x87 ; ret
0x00000200000e0099 : add r13b, byte ptr [rbx] ; ret
0x000002000018bd79 : add r13b, r8b ; add byte ptr [rbx - 0x166f0004], bh ; ret
0x00000200000564fe : add r14, r14 ; ret
0x00000200001929f6 : add r14, r14 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200003e9a65 : add r14b, byte ptr [rdx + r8 - 0x75] ; ret 0x8545
0x000002000004ed38 : add r14b, sil ; ret
0x00000200004e5ee0 : add r15, 0x30 ; jmp 0x200004e5f01
0x000002000047a4a0 : add r15b, dil ; ret
0x00000200000e0ff4 : add r15b, dil ; ret 0x348
0x000002000048c29c : add r15b, dil ; ret 0x34c
0x00000200006952f9 : add r15b, dil ; ret 0x8b44
0x000002000049c1c1 : add r15b, r15b ; ret
0x00000200000e0971 : add r15b, r15b ; ret 0x348
0x0000020000235b50 : add r15b, r15b ; ret 0x4d8b
0x000002000070b4b3 : add r15d, r14d ; mov edx, r15d ; call rdi
0x0000020000213e9b : add r8, 0x10 ; jmp 0x20000213ec5
0x0000020000213e91 : add r8, 0x14 ; jmp 0x20000213ec5
0x0000020000213e87 : add r8, 0x18 ; jmp 0x20000213ec5
0x0000020000213e7d : add r8, 0x1c ; jmp 0x20000213ec5
0x00000200002361ff : add r8, 0x48 ; cmp r8, rdx ; jl 0x200002361f1 ; ret
0x0000020000213ea5 : add r8, 0xc ; jmp 0x20000213ec5
0x0000020000213ee2 : add r8, 2 ; jmp 0x20000213f0c
0x0000020000213eaf : add r8, 8 ; jmp 0x20000213ec5
0x0000020000055875 : add r8, qword ptr [r8] ; add dh, dh ; ret
0x000002000007b69c : add r8, r10 ; jmp 0x2000007b667
0x000002000005c500 : add r8, r10 ; jmp r8
0x000002000013ae18 : add r8, r15 ; call r8
0x00000200006b72f8 : add r8, rax ; mov qword ptr [rsp + 0x50], r8 ; inc edx ; jmp 0x200006b72d9
0x0000020000222c52 : add r8, rcx ; jmp r8
0x0000020000459e5d : add r8, rcx ; sub r10, 1 ; jne 0x20000459e38 ; ret
0x00000200005699a8 : add r8, rdx ; mov al, byte ptr [r8 + rax] ; ret
0x000002000006782c : add r8b, byte ptr [r14*2 - 0x4849f0aa] ; ret
0x00000200000d15f1 : add r8b, byte ptr [r8] ; add dh, dh ; ret 0xf01
0x00000200000480e6 : add r8b, byte ptr [r8] ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000002c02 : add r8b, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000caa18 : add r8b, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200004a5c13 : add r8b, byte ptr [rax] ; add byte ptr [rcx - 0x7b], al ; ret 0x850f
0x00000200006a029e : add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x200006a029a
0x000002000000eea2 : add r8b, r13b ; ret
0x00000200001459f2 : add r8d, -1 ; jne 0x200001459ea ; mov rax, rdx ; jmp 0x20000145a07
0x00000200001469f5 : add r8d, -1 ; jne 0x200001469ed ; mov rax, rdx ; jmp 0x20000146a0a
0x0000020000146ce7 : add r8d, -1 ; jne 0x20000146cdf ; mov rax, rdx ; jmp 0x20000146cfc
0x00000200001471c4 : add r8d, -1 ; jne 0x200001471bc ; mov rax, rdx ; jmp 0x200001471d9
0x000002000023bfc5 : add r8d, -1 ; jne 0x2000023bfbd ; mov rax, rdx ; jmp 0x2000023bfda
0x000002000023c669 : add r8d, -1 ; jne 0x2000023c661 ; mov rax, rdx ; jmp 0x2000023c67e
0x000002000023c83e : add r8d, -1 ; jne 0x2000023c836 ; mov rax, rdx ; jmp 0x2000023c853
0x000002000023d0fc : add r8d, -1 ; jne 0x2000023d0f4 ; mov rax, rdx ; jmp 0x2000023d111
0x000002000023d202 : add r8d, -1 ; jne 0x2000023d1fa ; mov rax, rdx ; jmp 0x2000023d217
0x000002000023da68 : add r8d, -1 ; jne 0x2000023da60 ; mov rax, rdx ; jmp 0x2000023da7d
0x000002000023dea9 : add r8d, -1 ; jne 0x2000023dea1 ; mov rax, rdx ; jmp 0x2000023debe
0x000002000023e168 : add r8d, -1 ; jne 0x2000023e160 ; mov rax, rdx ; jmp 0x2000023e17d
0x000002000023e296 : add r8d, -1 ; jne 0x2000023e28f ; mov rax, rdx ; jmp 0x2000023e2ab
0x00000200002409ee : add r8d, -1 ; jne 0x200002409e9 ; mov rax, rdx ; jmp 0x20000240a03
0x00000200002424b5 : add r8d, -1 ; jne 0x200002424ad ; mov rax, rdx ; jmp 0x200002424ca
0x0000020000242a1e : add r8d, -1 ; jne 0x20000242a16 ; mov rax, rdx ; jmp 0x20000242a33
0x0000020000242b26 : add r8d, -1 ; jne 0x20000242b1e ; mov rax, rdx ; jmp 0x20000242b3b
0x0000020000243d83 : add r8d, -1 ; jne 0x20000243d7b ; mov rax, rdx ; jmp 0x20000243d98
0x0000020000243fb9 : add r8d, -1 ; jne 0x20000243fb1 ; mov rax, rdx ; jmp 0x20000243fce
0x00000200002452bb : add r8d, -1 ; jne 0x200002452b3 ; mov rax, rdx ; jmp 0x200002452d0
0x0000020000247775 : add r8d, -1 ; jne 0x2000024776d ; mov rax, rdx ; jmp 0x2000024778a
0x000002000024aa9e : add r8d, -1 ; jne 0x2000024aa99 ; mov rax, rdx ; jmp 0x2000024aab3
0x00000200006f37a4 : add r8d, -1 ; jne 0x200006f37a2 ; ret
0x000002000077f2f5 : add r8d, -1 ; jne 0x2000077f2ec ; mov rax, rdx ; jmp 0x2000077f30a
0x0000020000783a4b : add r8d, -1 ; jne 0x20000783a43 ; mov rax, rdx ; jmp 0x20000783a60
0x0000020000785358 : add r8d, -1 ; jne 0x20000785350 ; mov rax, rdx ; jmp 0x2000078536d
0x0000020000786f40 : add r8d, -1 ; jne 0x20000786f38 ; mov rax, rdx ; jmp 0x20000786f55
0x0000020000787156 : add r8d, -1 ; jne 0x2000078714e ; mov rax, rdx ; jmp 0x2000078716b
0x00000200007878fa : add r8d, -1 ; jne 0x200007878f2 ; mov rax, rdx ; jmp 0x2000078790f
0x0000020000788654 : add r8d, -1 ; jne 0x2000078864c ; mov rax, rdx ; jmp 0x20000788669
0x0000020000788a1d : add r8d, -1 ; jne 0x20000788a16 ; mov rax, rdx ; jmp 0x20000788a32
0x0000020000789295 : add r8d, -1 ; jne 0x2000078928d ; mov rax, rdx ; jmp 0x200007892aa
0x000002000078982f : add r8d, -1 ; jne 0x2000078982a ; mov rax, rdx ; jmp 0x20000789844
0x00000200006c5656 : add r8d, dword ptr [r8] ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; ja 0x200006c564c ; ret 0x66ff
0x00000200000ba6db : add r8d, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000424e2 : add r8d, dword ptr [rbx - 0x74b7f020] ; ret
0x00000200000b5090 : add r8d, ebp ; leave ; ret 1
0x0000020000054097 : add r8d, ebp ; ret 0x7d2
0x0000020000102f28 : add r8d, ebp ; xor esp, esp ; cld ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000211aaa : add r8d, ecx ; mov qword ptr [rdx], r9 ; mov eax, r8d ; ret
0x0000020000020a3e : add r8d, edx ; jmp 0x20000020a1d
0x000002000010c987 : add r8d, edx ; jmp 0x2000010c968
0x00000200006cdbab : add r8d, r13d ; ret 0xa6df
0x0000020000190e0f : add r9, 8 ; mov ecx, r8d ; inc rdx ; jmp 0x20000190dd2
0x0000020000152ae1 : add r9, r8 ; jmp r9
0x00000200003f40a2 : add r9b, byte ptr [r11 + 0x4d8d45c1] ; add dword ptr [rbx], esp ; ret 0xc23b
0x0000020000236cdb : add r9b, byte ptr [r9 - 0x48f0bafe] ; ret
0x000002000041ed1b : add r9b, byte ptr [rax + 0x2b] ; ret
0x000002000011974c : add r9b, byte ptr [rax - 0x7cb7fdb6] ; ret 0x4903
0x0000020000512f11 : add r9b, byte ptr [rbp + 0x3b662455] ; ret 0x6e72
0x000002000023dfbf : add r9d, -1 ; jne 0x2000023dfb7 ; mov rax, rdx ; jmp 0x2000023e037
0x000002000023f268 : add r9d, -1 ; jne 0x2000023f260 ; mov rax, rdx ; jmp 0x2000023f27d
0x000002000024658c : add r9d, -1 ; jne 0x20000246587 ; mov rax, rdx ; jmp 0x200002465a1
0x000002000024685e : add r9d, -1 ; jne 0x20000246859 ; mov rax, rdx ; jmp 0x20000246898
0x0000020000246ecf : add r9d, -1 ; jne 0x20000246ec7 ; mov rax, rdx ; jmp 0x20000246ee4
0x000002000024a900 : add r9d, -1 ; jne 0x2000024a8fb ; mov rax, rdx ; jmp 0x2000024a915
0x000002000024abe7 : add r9d, -1 ; jne 0x2000024abe2 ; mov rax, rdx ; jmp 0x2000024abfc
0x000002000024bd94 : add r9d, -1 ; jne 0x2000024bd8d ; mov rax, rdx ; jmp 0x2000024bda9
0x000002000077969c : add r9d, -1 ; jne 0x20000779694 ; mov rax, rdx ; jmp 0x2000077970c
0x0000020000779a3c : add r9d, -1 ; jne 0x20000779a34 ; mov rax, rdx ; jmp 0x20000779a51
0x000002000077f1d3 : add r9d, -1 ; jne 0x2000077f1cc ; mov rax, rdx ; jmp 0x2000077f1e8
0x0000020000785b3b : add r9d, -1 ; jne 0x20000785b36 ; mov rax, rdx ; jmp 0x20000785b50
0x00000200002149f8 : add r9d, dword ptr [r8 + 3] ; ret
0x00000200000f6ebb : add r9d, dword ptr [r9 + 3] ; ret
0x000002000017725c : add r9d, dword ptr [rcx - 0x7d] ; mov byte ptr [rcx + rcx*2], 0x83 ; ret 0xe904
0x000002000078591a : add r9d, ecx ; jne 0x2000078590e ; mov rax, rdx ; jmp 0x2000078592d
0x00000200004a33e4 : add rax, -0x10 ; ret
0x0000020000044421 : add rax, -0x20 ; ret
0x0000020000498720 : add rax, -4 ; add rsp, 0x28 ; ret
0x000002000071aa00 : add rax, -8 ; ret
0x000002000060fb86 : add rax, 0x10 ; add rax, rcx ; ret
0x0000020000225203 : add rax, 0x10 ; add rsp, 0x28 ; ret
0x0000020000442876 : add rax, 0x10 ; ret
0x00000200000acdbc : add rax, 0x1000 ; jmp 0x200000acd8e
0x0000020000564b2c : add rax, 0x18 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000070bb1 : add rax, 0x1a0 ; ret
0x0000020000408d39 : add rax, 0x20 ; add rsp, 0x28 ; ret
0x00000200004f58e1 : add rax, 0x20 ; ret
0x0000020000119a73 : add rax, 0x3600 ; ret
0x0000020000157b67 : add rax, 0x3e0 ; ret
0x000002000014eaca : add rax, 0x40 ; jne 0x2000014eaa9 ; sfence ; ret
0x00000200000808d1 : add rax, 0x400 ; add rax, rdx ; ret
0x000002000060ece7 : add rax, 0x58 ; add rax, rcx ; ret
0x0000020000792a23 : add rax, 0x58d48d0 ; ret
0x00000200003de221 : add rax, 0x610 ; ret
0x00000200007d179e : add rax, 0x8b8 ; ret
0x0000020000018c57 : add rax, 0xbc0 ; ret
0x0000020000489457 : add rax, 0xd40 ; ret
0x00000200005352a2 : add rax, 2 ; add rsp, 0x28 ; ret
0x0000020000080e7a : add rax, 2 ; lea rax, qword ptr [rcx + rax*4] ; ret
0x00000200006715e2 : add rax, 2 ; ret
0x00000200006101de : add rax, 8 ; add rax, rcx ; ret
0x00000200000d1bca : add rax, 8 ; cmp rax, r10 ; jb 0x200000d1ba3 ; ret
0x0000020000434607 : add rax, 8 ; ret
0x000002000060ecf9 : add rax, qword ptr [rcx + 0x138] ; ret
0x00000200006101d1 : add rax, qword ptr [rcx + 0x48] ; ret
0x000002000060fb79 : add rax, qword ptr [rcx + 0x50] ; ret
0x000002000006cf9f : add rax, qword ptr [rcx + 0x98] ; ret
0x0000020000494b70 : add rax, qword ptr [rcx + 0xa0] ; ret
0x00000200006048ac : add rax, qword ptr [rcx + 8] ; ret
0x000002000049b9db : add rax, qword ptr [rcx + r9*8] ; inc edx ; jmp 0x2000049b9d7
0x000002000070c88e : add rax, qword ptr [rcx] ; xor eax, eax ; ret
0x0000020000044cba : add rax, qword ptr [rip + 0x3649b7] ; ret
0x0000020000621587 : add rax, qword ptr [rip - 0x3002a6] ; ret
0x00000200004ffa34 : add rax, r10 ; jmp rax
0x0000020000032b80 : add rax, r8 ; add rsp, 0x38 ; ret
0x00000200000f234c : add rax, r8 ; jmp rax
0x000002000060a169 : add rax, r8 ; mov qword ptr [rdx + 0x48], rax ; ret
0x000002000007428c : add rax, r8 ; ret
0x0000020000407ac9 : add rax, r9 ; mov dword ptr [r8], edx ; ret
0x00000200000ddbb4 : add rax, r9 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000706325 : add rax, r9 ; ret
0x000002000061bf17 : add rax, rax ; cmp rax, rcx ; jb 0x2000061bf0f ; ret
0x00000200000ddfdb : add rax, rax ; cmp rdi, qword ptr [r8 + rax*8] ; jb 0x200000ddfae ; jmp 0x200000ddfdb
0x000002000001bd10 : add rax, rax ; mov qword ptr [r10], rax ; mov eax, ecx ; ret
0x0000020000044d36 : add rax, rax ; mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000496e3a : add rax, rax ; movdqu xmmword ptr [rcx + rax*8], xmm0 ; ret
0x00000200001f4ba1 : add rax, rax ; ret
0x00000200007cbced : add rax, rbp ; cmp byte ptr [rbx], al ; ret
0x000002000000c1af : add rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000122cdf : add rax, rbx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200003c9a82 : add rax, rcx ; add rsp, 0x38 ; ret
0x0000020000687ff2 : add rax, rcx ; cmp rdx, rax ; setae al ; ret
0x00000200004c5597 : add rax, rcx ; jmp rax
0x0000020000038cf0 : add rax, rcx ; ret
0x0000020000052c14 : add rax, rcx ; sub r8, 1 ; jne 0x20000052c16 ; ret
0x000002000021072e : add rax, rdi ; add rsp, 0x50 ; pop rdi ; ret
0x00000200004345f1 : add rax, rdx ; jmp 0x200004345da
0x00000200004345f6 : add rax, rdx ; jmp 0x200004345e0
0x000002000043bbf9 : add rax, rdx ; jmp 0x2000043bbe8
0x00000200005493b4 : add rax, rdx ; jmp 0x2000054934d
0x0000020000550bb3 : add rax, rdx ; jmp 0x20000550bc8
0x00000200005cb83c : add rax, rdx ; jmp 0x200005cb847
0x0000020000693826 : add rax, rdx ; jmp 0x20000693831
0x00000200000f2605 : add rax, rdx ; jmp rax
0x00000200000808d7 : add rax, rdx ; ret
0x00000200003ca63d : add rax, rdx ; sub rcx, rdx ; mov qword ptr [r11], rcx ; ret
0x000002000024c495 : add rax, rdx ; sub rsp, 0x28 ; call rax
0x0000020000055c6b : add rax, rsi ; cmpxchg qword ptr [r9], rcx ; jne 0x20000055c7e ; ret
0x00000200000b553b : add rbp, rax ; call 0x200000dd949
0x000002000004fd8c : add rbx, 0x18 ; mov rdx, rbx ; call 0x2000009bfa9
0x00000200006cfd83 : add rbx, 2 ; movzx ecx, word ptr [rbx] ; call 0x2000013c069
0x00000200006cef01 : add rbx, 4 ; jmp 0x200006ceee9
0x00000200001ad4a4 : add rbx, 8 ; jmp 0x200001ad4e6
0x000002000007a344 : add rbx, rax ; mov al, byte ptr [rax + rcx*2] ; ret
0x00000200001cdcf8 : add rcx, -0x10 ; mov rax, rcx ; ret
0x00000200001fecfd : add rcx, 0x18 ; call rax
0x000002000008d735 : add rcx, 0x20 ; call 0x200000e9996
0x00000200004148c4 : add rcx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x200004148d7 ; ret
0x000002000049c454 : add rcx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x2000049c467 ; ret
0x000002000008e017 : add rcx, 0x50 ; call 0x200000ca2f6
0x0000020000454dec : add rcx, 0x60 ; call 0x2000007f5c3
0x00000200004b3df5 : add rcx, 0xb40 ; jmp 0x200004b3dc8
0x000002000013d334 : add rcx, 2 ; cmp rax, rdx ; jb 0x2000013d334 ; ret
0x0000020000563b5e : add rcx, 2 ; mov qword ptr [rdx + 0x28], rcx ; ret
0x000002000013bbe0 : add rcx, 2 ; test r8, r8 ; jne 0x2000013bbdd ; ret
0x00000200001f9b8a : add rcx, 8 ; call 0x20000035dd2
0x00000200006bbbe1 : add rcx, 8 ; cmp r9d, edx ; jb 0x200006bbbe2 ; ret
0x00000200007179b6 : add rcx, qword ptr [rip - 0x4182cd] ; call 0x20000703bf1
0x00000200006e523f : add rcx, r10 ; jmp rcx
0x000002000016b308 : add rcx, r13 ; call 0x20000157545
0x000002000041b607 : add rcx, r13 ; jmp rcx
0x000002000048c33e : add rcx, r14 ; jmp rcx
0x000002000001c0fd : add rcx, r15 ; jmp rcx
0x000002000016efee : add rcx, r8 ; jmp rcx
0x000002000000e936 : add rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000002000005a313 : add rcx, r9 ; jmp rcx
0x000002000070631f : add rcx, r9 ; mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x000002000043aaf6 : add rcx, rax ; cmp r8d, r9d ; jb 0x2000043aae7 ; mov eax, edx ; ret
0x00000200000f70af : add rcx, rbp ; jmp rcx
0x0000020000083451 : add rcx, rbx ; jmp rcx
0x0000020000496e51 : add rcx, rcx ; movdqu xmmword ptr [rax + rcx*8], xmm0 ; ret
0x0000020000028ffb : add rcx, rdi ; mov rdi, qword ptr [rsp + 0x10] ; jmp rcx
0x0000020000710dac : add rcx, rdx ; cmp qword ptr [rcx], rax ; jne 0x20000710dae ; ret
0x000002000002f16f : add rcx, rdx ; jmp rcx
0x0000020000213fde : add rdi, 4 ; jmp 0x20000213fac
0x00000200000bb6c7 : add rdi, rax ; jmp 0x200000bb692
0x00000200007a74e1 : add rdi, rbx ; mov r13d, ebx ; jmp 0x200007a74bd
0x00000200007c6025 : add rdx, -8 ; add rdx, r14 ; call 0x200007d2271
0x0000020000430dd8 : add rdx, 0x12 ; call 0x2000005f907
0x0000020000447f89 : add rdx, 0x20 ; cmp r9d, r11d ; jb 0x20000447f7f ; ret
0x0000020000024e8f : add rdx, 0x58 ; call 0x200000a1156
0x0000020000046dd3 : add rdx, 2 ; cmp rdx, rcx ; jb 0x20000046dc2 ; ret
0x00000200003ccdd7 : add rdx, 8 ; cmp rdx, r8 ; jbe 0x200003ccdd9 ; ret
0x000002000012abde : add rdx, qword ptr [rdi + 8] ; mov bl, 1 ; call 0x20000056ed4
0x000002000006a069 : add rdx, r10 ; jmp rdx
0x00000200007c6029 : add rdx, r14 ; call 0x200007d226d
0x000002000018b40e : add rdx, r8 ; jmp rdx
0x000002000020ee14 : add rdx, rax ; jmp 0x2000020ede0
0x0000020000798f93 : add rdx, rbp ; call 0x20000475295
0x00000200004037fe : add rdx, rbx ; jmp rdx
0x00000200005d115f : add rdx, rcx ; jmp rdx
0x0000020000402a41 : add rdx, rdi ; jmp rdx
0x00000200007bb6ae : add rsi, qword ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; ret
0x000002000013c366 : add rsi, r12 ; mov rdx, rsi ; call r14
0x00000200001196fe : add rsp, 0x10 ; pop rbp ; ret
0x000002000007e976 : add rsp, 0x10 ; pop rbx ; ret
0x000002000003b9c4 : add rsp, 0x10 ; pop rdi ; ret
0x0000020000152b54 : add rsp, 0x10 ; ret
0x00000200001e807a : add rsp, 0x100 ; pop rbp ; ret
0x00000200000c731b : add rsp, 0x100 ; pop rbx ; ret
0x0000020000114a49 : add rsp, 0x108 ; ret
0x0000020000433da5 : add rsp, 0x110 ; pop rbp ; ret
0x0000020000536121 : add rsp, 0x110 ; pop rdi ; ret
0x0000020000534900 : add rsp, 0x120 ; pop rbp ; ret
0x0000020000024790 : add rsp, 0x130 ; pop r14 ; ret
0x00000200001b8b8a : add rsp, 0x130 ; pop rbp ; ret
0x0000020000119280 : add rsp, 0x130 ; pop rbx ; ret
0x00000200000cc86c : add rsp, 0x138 ; pop rbp ; pop rcx ; ret
0x0000020000147e1d : add rsp, 0x138 ; ret
0x000002000014e6ff : add rsp, 0x138 ; sti ; ret
0x0000020000679dda : add rsp, 0x140 ; pop rbp ; ret
0x000002000003661a : add rsp, 0x140 ; pop rbx ; ret
0x00000200006c8062 : add rsp, 0x140 ; pop rdi ; ret
0x000002000061ed3f : add rsp, 0x148 ; ret
0x000002000012424e : add rsp, 0x150 ; pop rbx ; ret
0x0000020000045463 : add rsp, 0x160 ; pop rbp ; ret
0x000002000003e52a : add rsp, 0x170 ; pop rdi ; ret
0x0000020000652e9f : add rsp, 0x170 ; pop rsi ; ret
0x0000020000137c3d : add rsp, 0x178 ; ret
0x00000200000698c2 : add rsp, 0x18 ; ret
0x000002000052d905 : add rsp, 0x180 ; pop rbx ; ret
0x0000020000210501 : add rsp, 0x190 ; pop rdi ; ret
0x0000020000678d59 : add rsp, 0x198 ; ret
0x0000020000043404 : add rsp, 0x1a0 ; pop rbx ; ret
0x0000020000157536 : add rsp, 0x1a8 ; ret
0x00000200000578ea : add rsp, 0x1b0 ; pop rbp ; ret
0x0000020000042fb6 : add rsp, 0x1b0 ; pop rbx ; ret
0x00000200006843c5 : add rsp, 0x1c0 ; pop rdi ; ret
0x000002000011e62b : add rsp, 0x1c8 ; ret
0x000002000003701b : add rsp, 0x1f0 ; pop rdi ; ret
0x00000200000bc3f1 : add rsp, 0x20 ; pop r12 ; pop rbp ; pop rbx ; ret
0x000002000009a404 : add rsp, 0x20 ; pop r12 ; pop rdi ; pop rbx ; ret
0x000002000044a139 : add rsp, 0x20 ; pop r12 ; ret
0x000002000070b403 : add rsp, 0x20 ; pop r14 ; jmp rax
0x00000200000feea6 : add rsp, 0x20 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200007251bb : add rsp, 0x20 ; pop r14 ; pop r13 ; pop rdi ; ret
0x000002000006fba3 : add rsp, 0x20 ; pop r14 ; pop rbp ; pop rbx ; ret
0x00000200004ce9ae : add rsp, 0x20 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000001bf43 : add rsp, 0x20 ; pop r14 ; pop rdi ; pop rcx ; ret
0x0000020000016724 : add rsp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000058551 : add rsp, 0x20 ; pop r14 ; pop rsi ; pop rbx ; ret
0x0000020000004c46 : add rsp, 0x20 ; pop r14 ; ret
0x0000020000564244 : add rsp, 0x20 ; pop r15 ; pop r12 ; pop rdi ; ret
0x000002000055c16a : add rsp, 0x20 ; pop r15 ; pop r13 ; pop rdi ; ret
0x00000200003edccb : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000012192d : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rcx ; ret
0x000002000000423e : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200006bd90d : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rsi ; ret
0x00000200004790cb : add rsp, 0x20 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000001ccc9 : add rsp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000071eb7 : add rsp, 0x20 ; pop r15 ; pop rsi ; pop rbx ; ret
0x0000020000009c52 : add rsp, 0x20 ; pop r15 ; ret
0x0000020000026e32 : add rsp, 0x20 ; pop rbp ; ret
0x0000020000075234 : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000020000002556 : add rsp, 0x20 ; pop rbx ; ret
0x0000020000034ad3 : add rsp, 0x20 ; pop rcx ; ret
0x0000020000457ffb : add rsp, 0x20 ; pop rdi ; jmp 0x2000007d088
0x0000020000629185 : add rsp, 0x20 ; pop rdi ; jmp 0x2000024d008
0x0000020000629184 : add rsp, 0x20 ; pop rdi ; jmp 0x2000024d009
0x0000020000101e50 : add rsp, 0x20 ; pop rdi ; jmp rax
0x00000200000e372d : add rsp, 0x20 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000001a829 : add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000128f35 : add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000002870 : add rsp, 0x20 ; pop rdi ; ret
0x000002000001eb73 : add rsp, 0x20 ; pop rsi ; ret
0x00000200003c6290 : add rsp, 0x208 ; ret
0x00000200006da6d6 : add rsp, 0x210 ; pop rdi ; ret
0x000002000079f41d : add rsp, 0x230 ; pop rdi ; ret
0x00000200003cd9ba : add rsp, 0x240 ; pop rdi ; ret
0x000002000069f5d7 : add rsp, 0x250 ; pop rbp ; ret
0x000002000053dc38 : add rsp, 0x260 ; pop rdi ; ret
0x00000200004230e3 : add rsp, 0x270 ; pop rdi ; ret
0x00000200007b5948 : add rsp, 0x28 ; jmp 0x200000c678c
0x00000200005ef56f : add rsp, 0x28 ; jmp 0x200006ab82e
0x00000200006e0ced : add rsp, 0x28 ; jmp qword ptr [r10]
0x00000200003ca679 : add rsp, 0x28 ; jmp qword ptr [rip - 0x173d2c]
0x00000200005d0098 : add rsp, 0x28 ; jmp r8
0x000002000009a475 : add rsp, 0x28 ; pop r12 ; pop rbx ; ret
0x000002000001fb1c : add rsp, 0x28 ; pop r15 ; pop r14 ; ret
0x000002000015bc92 : add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000020d6a6 : add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x000002000003cc48 : add rsp, 0x28 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000047b729 : add rsp, 0x28 ; pop rdi ; pop rsi ; ret
0x00000200000ec291 : add rsp, 0x28 ; pop rsi ; pop rbx ; ret
0x000002000000382f : add rsp, 0x28 ; ret
0x00000200004f340c : add rsp, 0x2a0 ; pop rdi ; ret
0x000002000003066b : add rsp, 0x30 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200004707d7 : add rsp, 0x30 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000441b3 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000ac416 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200003c8586 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rcx ; ret
0x00000200000089a8 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000009bece : add rsp, 0x30 ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000000e5ae : add rsp, 0x30 ; pop r14 ; ret
0x000002000011372a : add rsp, 0x30 ; pop r15 ; pop r12 ; pop rdi ; ret
0x000002000007b7f3 : add rsp, 0x30 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000000965d : add rsp, 0x30 ; pop r15 ; pop r14 ; pop rdi ; ret
0x000002000006f010 : add rsp, 0x30 ; pop r15 ; pop rdi ; pop rbp ; ret
0x0000020000012fff : add rsp, 0x30 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000041f706 : add rsp, 0x30 ; pop r15 ; pop rsi ; pop rbx ; ret
0x000002000009043f : add rsp, 0x30 ; pop r15 ; ret
0x0000020000043da6 : add rsp, 0x30 ; pop rbp ; ret
0x000002000071b854 : add rsp, 0x30 ; pop rbx ; jmp r10
0x000002000071b85c : add rsp, 0x30 ; pop rbx ; jmp r8
0x0000020000003d0a : add rsp, 0x30 ; pop rbx ; ret
0x00000200000d0ca8 : add rsp, 0x30 ; pop rcx ; ret
0x0000020000707d95 : add rsp, 0x30 ; pop rdi ; jmp rax
0x000002000015dec0 : add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000002523f : add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000050b36 : add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000003116 : add rsp, 0x30 ; pop rdi ; ret
0x000002000001c363 : add rsp, 0x30 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000135761 : add rsp, 0x30 ; pop rsi ; ret
0x000002000000c263 : add rsp, 0x308 ; ret
0x000002000071b94d : add rsp, 0x38 ; jmp r8
0x000002000071b765 : add rsp, 0x38 ; jmp r9
0x000002000071b76c : add rsp, 0x38 ; jmp rax
0x00000200000f6cdd : add rsp, 0x38 ; pop r12 ; pop rbx ; ret
0x00000200003d454d : add rsp, 0x38 ; pop r13 ; pop rbp ; ret
0x0000020000116fb6 : add rsp, 0x38 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000001a97b : add rsp, 0x38 ; pop r14 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000049a8ea : add rsp, 0x38 ; pop r15 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009c063 : add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000056eb3 : add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x00000200000cf5e9 : add rsp, 0x38 ; pop rdi ; pop rbx ; ret
0x00000200000a04f2 : add rsp, 0x38 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000051bc8d : add rsp, 0x38 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000073d9c : add rsp, 0x38 ; pop rsi ; pop rbx ; ret
0x0000020000005bfd : add rsp, 0x38 ; ret
0x00000200006ad740 : add rsp, 0x390 ; pop rdi ; ret
0x00000200006a4b4b : add rsp, 0x3a0 ; pop rbp ; ret
0x00000200006a295f : add rsp, 0x3b0 ; pop rdi ; ret
0x000002000009a604 : add rsp, 0x40 ; pop r12 ; ret
0x000002000049949f : add rsp, 0x40 ; pop r13 ; ret
0x0000020000459d67 : add rsp, 0x40 ; pop r14 ; pop r12 ; pop rbp ; ret
0x00000200000062ba : add rsp, 0x40 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200003e3dd8 : add rsp, 0x40 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200003fec52 : add rsp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000ebaab : add rsp, 0x40 ; pop r14 ; pop rdi ; pop rbx ; ret
0x000002000001062d : add rsp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000b0cdf : add rsp, 0x40 ; pop r14 ; pop rsi ; pop rbp ; ret
0x00000200000222b5 : add rsp, 0x40 ; pop r14 ; ret
0x0000020000516274 : add rsp, 0x40 ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200000a08dd : add rsp, 0x40 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000009ef3d : add rsp, 0x40 ; pop r15 ; pop r14 ; pop rbx ; ret
0x0000020000022901 : add rsp, 0x40 ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000477e91 : add rsp, 0x40 ; pop r15 ; pop r14 ; pop rsi ; ret
0x00000200006e67aa : add rsp, 0x40 ; pop r15 ; pop rbx ; pop rbp ; ret
0x00000200004b7e69 : add rsp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000003db12 : add rsp, 0x40 ; pop r15 ; ret
0x00000200000261f7 : add rsp, 0x40 ; pop rbp ; ret
0x00000200006273f4 : add rsp, 0x40 ; pop rbx ; jmp 0x2000024d008
0x000002000000c8fa : add rsp, 0x40 ; pop rbx ; ret
0x000002000015b79d : add rsp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000001bca8 : add rsp, 0x40 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000001c0e9 : add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000001b93b : add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000074f3 : add rsp, 0x40 ; pop rdi ; ret
0x000002000067c8d7 : add rsp, 0x40 ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000025471 : add rsp, 0x40 ; pop rsi ; ret
0x0000020000491454 : add rsp, 0x48 ; pop r14 ; pop r13 ; ret
0x00000200000625b0 : add rsp, 0x48 ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200004cf584 : add rsp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003e0f47 : add rsp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000b9461 : add rsp, 0x48 ; pop r15 ; pop rbp ; ret
0x000002000057ce10 : add rsp, 0x48 ; pop rbp ; pop rbx ; ret
0x000002000013a89f : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x000002000015b813 : add rsp, 0x48 ; pop rdi ; pop rbp ; ret
0x00000200000de893 : add rsp, 0x48 ; pop rdi ; pop rbx ; ret
0x0000020000065ca2 : add rsp, 0x48 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000001da8e : add rsp, 0x48 ; pop rdi ; pop rsi ; ret
0x00000200001290af : add rsp, 0x48 ; pop rsi ; pop rbx ; ret
0x000002000000c92b : add rsp, 0x48 ; ret
0x00000200000ca1f3 : add rsp, 0x4a0 ; pop rbp ; ret
0x000002000013b3ec : add rsp, 0x4d8 ; ret
0x0000020000156769 : add rsp, 0x50 ; call r10
0x00000200000bb915 : add rsp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000055d6b : add rsp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004cf52e : add rsp, 0x50 ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000000d683 : add rsp, 0x50 ; pop r14 ; ret
0x0000020000402047 : add rsp, 0x50 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200004688bc : add rsp, 0x50 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000041f7c3 : add rsp, 0x50 ; pop r15 ; ret
0x0000020000036297 : add rsp, 0x50 ; pop rbp ; ret
0x000002000000296e : add rsp, 0x50 ; pop rbx ; ret
0x000002000051d977 : add rsp, 0x50 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200002025f4 : add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000001059b : add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000c786 : add rsp, 0x50 ; pop rdi ; ret
0x00000200004c14d9 : add rsp, 0x50 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000f0abd : add rsp, 0x50 ; pop rsi ; ret
0x000002000020e522 : add rsp, 0x518 ; ret
0x00000200000dd66f : add rsp, 0x58 ; pop r13 ; pop r12 ; ret
0x000002000057f300 : add rsp, 0x58 ; pop r13 ; pop rbp ; ret
0x000002000007a991 : add rsp, 0x58 ; pop r15 ; pop r13 ; ret
0x00000200006bd329 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000020000115a40 : add rsp, 0x58 ; pop rdi ; pop rbx ; ret
0x00000200002227de : add rsp, 0x58 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000054ed9b : add rsp, 0x58 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000554e : add rsp, 0x58 ; ret
0x00000200000707cd : add rsp, 0x60 ; pop r12 ; ret
0x00000200004b638e : add rsp, 0x60 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000ceb95 : add rsp, 0x60 ; pop r14 ; pop rdi ; pop rbx ; ret
0x000002000009780b : add rsp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000066943a : add rsp, 0x60 ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000005f62b : add rsp, 0x60 ; pop r15 ; pop r12 ; pop rbx ; ret
0x00000200006b5b60 : add rsp, 0x60 ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200000db278 : add rsp, 0x60 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200000b2917 : add rsp, 0x60 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200006348fc : add rsp, 0x60 ; pop r15 ; pop rdi ; pop rbx ; ret
0x0000020000102aa1 : add rsp, 0x60 ; pop r15 ; pop rsi ; pop rbp ; ret
0x00000200000267b9 : add rsp, 0x60 ; pop rbp ; ret
0x000002000003878c : add rsp, 0x60 ; pop rbx ; ret
0x000002000013b570 : add rsp, 0x60 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000235846 : add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000012757d : add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002da00 : add rsp, 0x60 ; pop rdi ; ret
0x0000020000534d7d : add rsp, 0x630 ; pop rdi ; ret
0x0000020000007f56 : add rsp, 0x648 ; ret
0x00000200004c2631 : add rsp, 0x68 ; pop r12 ; pop rbp ; ret
0x0000020000496c0e : add rsp, 0x68 ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000a31c3 : add rsp, 0x68 ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000013b9bd : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000002000013b49e : add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x000002000060a62c : add rsp, 0x68 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000147e7d : add rsp, 0x68 ; pop rdi ; pop rsi ; ret
0x00000200000c01ed : add rsp, 0x68 ; pop rsi ; pop rbx ; ret
0x000002000001f308 : add rsp, 0x68 ; ret
0x00000200000514ce : add rsp, 0x70 ; pop r13 ; ret
0x0000020000229383 : add rsp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000609126 : add rsp, 0x70 ; pop r14 ; pop rsi ; pop rbp ; ret
0x00000200006ac5fd : add rsp, 0x70 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000003f8df : add rsp, 0x70 ; pop rbp ; ret
0x00000200000d50f7 : add rsp, 0x70 ; pop rbx ; ret
0x0000020000026f7c : add rsp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000010a0f : add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000407a3f : add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000085512 : add rsp, 0x70 ; pop rdi ; ret
0x000002000006e3db : add rsp, 0x70 ; pop rsi ; ret
0x00000200000c6c37 : add rsp, 0x78 ; pop r13 ; pop rbp ; ret
0x0000020000048299 : add rsp, 0x78 ; pop rdi ; pop rbx ; ret
0x00000200000150bf : add rsp, 0x78 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000e31e4 : add rsp, 0x78 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b85f7 : add rsp, 0x78 ; pop rdi ; pop rsi ; ret
0x0000020000016a64 : add rsp, 0x78 ; ret
0x000002000012083a : add rsp, 0x80 ; pop rbp ; ret
0x0000020000045058 : add rsp, 0x80 ; pop rbx ; ret
0x0000020000014d55 : add rsp, 0x80 ; pop rdi ; ret
0x000002000069f059 : add rsp, 0x840 ; pop rbp ; ret
0x00000200001dcae6 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000020000013dbe : add rsp, 0x88 ; ret
0x00000200004e5f69 : add rsp, 0x90 ; pop r12 ; ret
0x000002000008af8f : add rsp, 0x90 ; pop rbp ; ret
0x00000200003f3a68 : add rsp, 0x90 ; pop rbx ; ret
0x00000200000cee2e : add rsp, 0x90 ; pop rdi ; ret
0x00000200001dca21 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000200000f2fae : add rsp, 0x98 ; pop rsi ; pop rbp ; ret
0x00000200001321c4 : add rsp, 0x98 ; ret
0x000002000003f9ce : add rsp, 0xa0 ; pop rbp ; ret
0x000002000012dc4a : add rsp, 0xa0 ; pop rbx ; ret
0x00000200000c9540 : add rsp, 0xa0 ; pop rdi ; ret
0x00000200001dd3fc : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x00000200000cac0f : add rsp, 0xa8 ; pop rdi ; pop rbp ; ret
0x00000200000eaee4 : add rsp, 0xa8 ; pop rdi ; pop rbx ; ret
0x000002000004dc89 : add rsp, 0xa8 ; ret
0x00000200004badb1 : add rsp, 0xa90 ; pop rdi ; ret
0x0000020000041bf7 : add rsp, 0xb0 ; pop rbp ; ret
0x0000020000231e74 : add rsp, 0xb0 ; pop rbx ; ret
0x00000200000e47a9 : add rsp, 0xb0 ; pop rdi ; ret
0x0000020000567cd7 : add rsp, 0xb0 ; pop rsi ; ret
0x000002000006808c : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000002000069fa83 : add rsp, 0xb8 ; pop rdi ; pop rbx ; ret
0x000002000011ddc5 : add rsp, 0xb8 ; ret
0x00000200000f0873 : add rsp, 0xc0 ; pop rbp ; ret
0x00000200001c0373 : add rsp, 0xc0 ; pop rbx ; ret
0x0000020000057dac : add rsp, 0xc0 ; pop rdi ; ret
0x0000020000025dac : add rsp, 0xc0 ; pop rsi ; ret
0x00000200000df535 : add rsp, 0xc8 ; ret
0x00000200001bfd18 : add rsp, 0xce8 ; ret
0x00000200000312fd : add rsp, 0xd0 ; pop rbp ; ret
0x000002000014b903 : add rsp, 0xd0 ; pop rbx ; ret
0x00000200006363a9 : add rsp, 0xd0 ; pop rdi ; ret
0x0000020000125ce4 : add rsp, 0xd8 ; ret
0x000002000001b6ce : add rsp, 0xe0 ; pop rbp ; ret
0x00000200001d46f1 : add rsp, 0xe0 ; pop rbx ; ret
0x00000200001e1c73 : add rsp, 0xe0 ; pop rdi ; ret
0x0000020000403dfe : add rsp, 0xe0 ; pop rsi ; ret
0x000002000002c580 : add rsp, 0xe8 ; ret
0x0000020000114355 : add rsp, 0xf0 ; pop rbp ; ret
0x000002000023934e : add rsp, 0xf0 ; pop rbx ; ret
0x0000020000014a43 : add rsp, 0xf0 ; pop rdi ; ret
0x00000200007bc093 : add rsp, 0xf8 ; ret
0x000002000024c58f : add rsp, 8 ; jmp r8
0x000002000001a42d : add rsp, 8 ; ret
0x000002000013271a : add sil, byte ptr [r10 + 3] ; mov al, 1 ; ret
0x00000200004e5eca : add sil, sil ; ret
0x00000200004b33a8 : add spl, byte ptr [r9 + rax] ; mov byte ptr [r8], al ; xor eax, eax ; ret
0x00000200000c8e77 : add spl, byte ptr [rsi + 0x41] ; mov dword ptr [rdx + 2], eax ; ret
0x000002000016dea7 : add word ptr [r9 + 0x6e], r8w ; ret
0x00000200001159ef : add word ptr [rax], ax ; add dh, dh ; ret
0x000002000001b246 : add word ptr [rcx + 0x3b], cx ; ret 0x6474
0x000002000049e536 : add word ptr [rcx + 0xa], dx ; ret
0x000002000061bf45 : add word ptr [rcx], ax ; sub rdx, 1 ; jns 0x2000061bf3e ; ret
0x00000200001af618 : add word ptr [rdi + 0x1e6], ax ; jmp 0x200001af5ec
0x00000200001d3ff2 : add word ptr [rip + 0x1513ff], ax ; ret
0x00000200004bb56a : and ah, ah ; ret 0x84ff
0x00000200003db7b8 : and ah, al ; add rsp, 0x28 ; ret
0x00000200003cfe49 : and ah, al ; mov cr4, rcx ; add rsp, 0x28 ; ret
0x000002000003fc02 : and ah, al ; mov cr4, rcx ; ret
0x0000020000232da7 : and ah, al ; ret 0x187d
0x000002000003b270 : and ah, byte ptr [rcx + rax] ; ret
0x00000200005f35b8 : and ah, byte ptr [rsi + 0x23] ; ret 0xc166
0x00000200007cc7ba : and ah, byte ptr [rsi + 0x3b] ; ret 0x4172
0x00000200007d2f86 : and ah, byte ptr [rsi + 0x3b] ; ret 0x820f
0x00000200007d2dd7 : and ah, byte ptr [rsi + 0x3b] ; ret 0x9772
0x00000200004609b1 : and ah, ch ; dec dword ptr [rax + 3] ; ret
0x00000200003cfe4c : and ah, cl ; add rsp, 0x28 ; ret
0x000002000003fc05 : and ah, cl ; ret
0x0000020000520d06 : and al, 0 ; add al, al ; jmp 0x20000520cd3
0x00000200005b4b63 : and al, 0 ; add al, al ; jmp 0x20000520e5e
0x00000200000eec03 : and al, 0 ; add byte ptr [rax + 0x48], al ; add esp, 0x40 ; pop rbx ; ret
0x00000200000ed75a : and al, 0 ; add byte ptr [rax - 0x75], al ; ret
0x00000200000f75b4 : and al, 0 ; add byte ptr [rbp + 1], dh ; ret
0x0000020000156590 : and al, 0 ; add dword ptr [rax], eax ; add bl, bh ; ret
0x0000020000669aa6 : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000004d419 : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x00000200001bbc8f : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004ddb21 : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200003e8954 : and al, 0 ; add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x00000200005df7da : and al, 0 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000009578 : and al, 0 ; add rsp, 0x28 ; ret
0x0000020000652eaf : and al, 0 ; cmp rcx, qword ptr [rcx] ; sete al ; ret
0x00000200000038f1 : and al, 0 ; jmp 0x200000038ba
0x000002000000c7d8 : and al, 0 ; jmp 0x2000000c771
0x0000020000561d04 : and al, 0 ; mov byte ptr [rip - 0x23974d], 1 ; ret
0x00000200000de67f : and al, 0 ; movzx edx, cx ; mov rax, qword ptr [rax + rdx*8] ; ret
0x00000200000bf6c6 : and al, 0 ; ret
0x00000200006b8f7f : and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000486463 : and al, 0x10 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200005825f3 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x4489
0x000002000044d55f : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret 0xfff
0x0000020000485b13 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rdx], dh ; ret
0x0000020000029001 : and al, 0x10 ; jmp rcx
0x0000020000053a39 : and al, 0x10 ; mov byte ptr [r8 + 4], r9b ; ret
0x0000020000231416 : and al, 0x10 ; mov dword ptr [r9], r11d ; ret
0x00000200003fa126 : and al, 0x10 ; mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x0000020000470910 : and al, 0x10 ; mov dword ptr [rdi], ecx ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000263d7 : and al, 0x10 ; mov eax, ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003fa7c8 : and al, 0x10 ; mov eax, ecx ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x000002000001a428 : and al, 0x10 ; mov eax, r8d ; add rsp, 8 ; ret
0x000002000070388f : and al, 0x10 ; mov qword ptr [rdx], r11 ; ret
0x000002000000b2fd : and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000bb0d6 : and al, 0x10 ; mov rdi, qword ptr [rsp + 0x20] ; ret
0x0000020000021848 : and al, 0x10 ; pop rdi ; ret
0x0000020000008f61 : and al, 0x10 ; ret
0x00000200003e48b7 : and al, 0x10 ; ror r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003e4ae7 : and al, 0x10 ; shr r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200001a05aa : and al, 0x14 ; add dword ptr [rax], eax ; add byte ptr [rax + rcx*4 + 5], al ; ret 0x1538
0x000002000007b68d : and al, 0x18 ; cmova rdx, rax ; mov eax, edx ; ret
0x0000020000420eaf : and al, 0x18 ; mov r14, qword ptr [rsp + 0x20] ; ret
0x00000200000f83b7 : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x20] ; ret
0x00000200001348bd : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x28] ; pop r14 ; ret
0x000002000007f3a0 : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x000002000012d66b : and al, 0x18 ; mov word ptr [rip + 0x1f7d84], cx ; ret
0x000002000000b302 : and al, 0x18 ; ret
0x00000200004279da : and al, 0x18 ; sbb eax, eax ; and eax, 0x80000005 ; ret
0x0000020000519af8 : and al, 0x20 ; adc al, 0 ; add byte ptr [rax], al ; call 0x20000148179
0x000002000051d8f3 : and al, 0x20 ; adc al, 0 ; add byte ptr [rax], al ; call 0x20000148379
0x00000200003f7e06 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r12
0x000002000045cb7b : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r14
0x00000200005f458b : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r15
0x00000200003f6677 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdi
0x00000200006dbdac : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rsi
0x00000200004a39a6 : and al, 0x20 ; add al, ch ; jb 0x200004a397a ; ret
0x00000200004a39a5 : and al, 0x20 ; add al, ch ; jb 0x200004a397b ; ret
0x0000020000449507 : and al, 0x20 ; add al, ch ; jns 0x200004494b5 ; ret 0x48ff
0x0000020000449506 : and al, 0x20 ; add al, ch ; jns 0x200004494b6 ; ret 0x48ff
0x000002000046faf1 : and al, 0x20 ; add al, ch ; ret
0x00000200007260fe : and al, 0x20 ; add al, ch ; ret 0x9f04
0x0000020000166736 : and al, 0x20 ; add al, ch ; ret 0xebb0
0x00000200004e7756 : and al, 0x20 ; add al, ch ; ret 0xfda6
0x0000020000703e86 : and al, 0x20 ; add al, ch ; xchg eax, edx ; ret
0x0000020000600d7f : and al, 0x20 ; add bl, byte ptr [rcx] ; push rax ; add bh, bh ; ret 0xb841
0x00000200005cd612 : and al, 0x20 ; add bl, byte ptr [rcx] ; push rax ; add bh, bh ; ret 0xb941
0x000002000067b2fb : and al, 0x20 ; add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x000002000046146b : and al, 0x20 ; add byte ptr [rax - 0x7f], cl ; ret 0x4170
0x0000020000631fec : and al, 0x20 ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0xc26d
0x0000020000441450 : and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200002150da : and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200001f75ea : and al, 0x20 ; add byte ptr [rbx], bh ; ret 0x1075
0x0000020000003375 : and al, 0x20 ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200007ce84e : and al, 0x20 ; add byte ptr [rdx + rcx*4 - 0x7f], al ; ret 6
0x00000200006d8b17 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r14 ; call rdi
0x00000200003f2b0e : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r15 ; call rdi
0x00000200003f65f8 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, rsi ; call rdi
0x0000020000521ff8 : and al, 0x20 ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x200001484f9
0x00000200006904ea : and al, 0x20 ; add eax, ebp ; ret 0x3d
0x000002000003b9c2 : and al, 0x20 ; add rsp, 0x10 ; pop rdi ; ret
0x00000200001d93a5 : and al, 0x20 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000f6cdb : and al, 0x20 ; add rsp, 0x38 ; pop r12 ; pop rbx ; ret
0x00000200000ec784 : and al, 0x20 ; add rsp, 0x38 ; pop rdi ; pop rbx ; ret
0x000002000020e6ee : and al, 0x20 ; add rsp, 0x38 ; ret
0x00000200000f044d : and al, 0x20 ; add rsp, 0x40 ; pop r14 ; ret
0x00000200000b945f : and al, 0x20 ; add rsp, 0x48 ; pop r15 ; pop rbp ; ret
0x00000200000de891 : and al, 0x20 ; add rsp, 0x48 ; pop rdi ; pop rbx ; ret
0x0000020000689345 : and al, 0x20 ; and eax, 0x80000005 ; ret
0x00000200004f09c7 : and al, 0x20 ; call 0x2000003cbf0
0x00000200004f09c6 : and al, 0x20 ; call 0x2000003cbf1
0x000002000065c7d9 : and al, 0x20 ; call 0x20000065409
0x000002000043c5fc : and al, 0x20 ; call 0x20000069b05
0x000002000043c5fb : and al, 0x20 ; call 0x20000069b06
0x000002000044207c : and al, 0x20 ; call 0x2000006cfb5
0x000002000044207b : and al, 0x20 ; call 0x2000006cfb6
0x00000200000f19f4 : and al, 0x20 ; call 0x200000be968
0x00000200000f19f3 : and al, 0x20 ; call 0x200000be969
0x0000020000111553 : and al, 0x20 ; call 0x200000c1079
0x000002000002a0ed : and al, 0x20 ; call 0x200000e63b4
0x000002000002a0ec : and al, 0x20 ; call 0x200000e63b5
0x0000020000684023 : and al, 0x20 ; call 0x200000f0304
0x0000020000684022 : and al, 0x20 ; call 0x200000f0305
0x00000200005221ee : and al, 0x20 ; call 0x20000147f75
0x00000200005221ed : and al, 0x20 ; call 0x20000147f76
0x000002000051c218 : and al, 0x20 ; call 0x20000148175
0x000002000051c217 : and al, 0x20 ; call 0x20000148176
0x0000020000527c48 : and al, 0x20 ; call 0x200001484d5
0x0000020000527c47 : and al, 0x20 ; call 0x200001484d6
0x000002000051f29f : and al, 0x20 ; call 0x200001486b5
0x000002000051f29e : and al, 0x20 ; call 0x200001486b6
0x0000020000582379 : and al, 0x20 ; call 0x2000014b4d6
0x0000020000582378 : and al, 0x20 ; call 0x2000014b4d7
0x000002000052d944 : and al, 0x20 ; call 0x20000157885
0x000002000052d943 : and al, 0x20 ; call 0x20000157886
0x00000200005a9b2a : and al, 0x20 ; call 0x200001d1a01
0x00000200005a9b29 : and al, 0x20 ; call 0x200001d1a02
0x0000020000678244 : and al, 0x20 ; call 0x200002044bc
0x00000200006783a5 : and al, 0x20 ; call 0x200002045bc
0x00000200006783a4 : and al, 0x20 ; call 0x200002045bd
0x0000020000522860 : and al, 0x20 ; call 0x200003e5f8d
0x00000200007d09b6 : and al, 0x20 ; call 0x200003f7cf1
0x00000200007d09b5 : and al, 0x20 ; call 0x200003f7cf2
0x00000200003fcdf6 : and al, 0x20 ; call 0x200003fcf59
0x00000200007d08e1 : and al, 0x20 ; call 0x200003fec85
0x00000200007d08e0 : and al, 0x20 ; call 0x200003fec86
0x000002000069f6a7 : and al, 0x20 ; call 0x2000044b98c
0x000002000069f6a6 : and al, 0x20 ; call 0x2000044b98d
0x00000200005b0cc0 : and al, 0x20 ; call 0x2000045ced8
0x00000200005b0cbf : and al, 0x20 ; call 0x2000045ced9
0x00000200005badad : and al, 0x20 ; call 0x2000046701c
0x00000200005badac : and al, 0x20 ; call 0x2000046701d
0x00000200003ef961 : and al, 0x20 ; call 0x2000050bc40
0x00000200003ef960 : and al, 0x20 ; call 0x2000050bc41
0x00000200003d0660 : and al, 0x20 ; call 0x2000051c8f0
0x0000020000638db6 : and al, 0x20 ; call 0x20000644fe0
0x0000020000638db5 : and al, 0x20 ; call 0x20000644fe1
0x00000200005a2446 : and al, 0x20 ; call 0x20000692eb0
0x00000200007140bf : and al, 0x20 ; call 0x20000714519
0x000002000068fc47 : and al, 0x20 ; call qword ptr [r10]
0x000002000062c1c1 : and al, 0x20 ; call qword ptr [rax]
0x00000200000313de : and al, 0x20 ; call qword ptr [rbx]
0x00000200006319ec : and al, 0x20 ; call qword ptr [rip - 0x3db19c]
0x0000020000631a1d : and al, 0x20 ; call qword ptr [rip - 0x3db1cd]
0x00000200003f3591 : and al, 0x20 ; call qword ptr [rsi]
0x000002000000c16c : and al, 0x20 ; call r10
0x00000200003f75a4 : and al, 0x20 ; call r11
0x00000200003f5481 : and al, 0x20 ; call r12
0x00000200006da7dd : and al, 0x20 ; call r14
0x0000020000430496 : and al, 0x20 ; call r15
0x00000200001b237d : and al, 0x20 ; call r8
0x00000200001be157 : and al, 0x20 ; call r9
0x000002000019f6be : and al, 0x20 ; call rax
0x00000200001a0338 : and al, 0x20 ; call rbx
0x00000200005303f3 : and al, 0x20 ; call rdi
0x000002000048f612 : and al, 0x20 ; cmp ebx, 4 ; je 0x2000048f626 ; call r12
0x000002000048f611 : and al, 0x20 ; cmp ebx, 4 ; je 0x2000048f627 ; call r12
0x0000020000457aed : and al, 0x20 ; enter 0, 0 ; call r10
0x00000200005852d6 : and al, 0x20 ; jmp 0x200003ec384
0x00000200007bc243 : and al, 0x20 ; js 0x200007bc250 ; add byte ptr [rax], al ; call 0x200003e5f8d
0x00000200005ab889 : and al, 0x20 ; lea ecx, dword ptr [r9 - 1] ; call 0x20000507af4
0x0000020000683698 : and al, 0x20 ; lea ecx, dword ptr [rbx + 0x18] ; call 0x200004cf957
0x00000200001df400 : and al, 0x20 ; lea ecx, dword ptr [rdx + 0x75] ; call 0x2000014b6f7
0x00000200001df3ff : and al, 0x20 ; lea ecx, dword ptr [rdx + 0x75] ; call 0x2000014b6f8
0x00000200006dd0eb : and al, 0x20 ; lea r8d, dword ptr [r9 + 1] ; call rdi
0x00000200006d82b7 : and al, 0x20 ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x00000200006d874b : and al, 0x20 ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x000002000045d826 : and al, 0x20 ; lea r8d, dword ptr [r9 + 3] ; call rdi
0x00000200003f54d3 : and al, 0x20 ; lea r8d, dword ptr [r9 - 1] ; call r12
0x00000200004581af : and al, 0x20 ; lea r8d, dword ptr [r9 - 1] ; call rdi
0x0000020000400f81 : and al, 0x20 ; lea r8d, dword ptr [r9 - 3] ; call rsi
0x00000200005db654 : and al, 0x20 ; lea r8d, dword ptr [rdx + 0x20] ; call 0x20000157888
0x00000200007cbedd : and al, 0x20 ; lea r8d, dword ptr [rdx + 1] ; call 0x200001480f8
0x00000200006e294f : and al, 0x20 ; lea r9, qword ptr [rsp + 0x50] ; call 0x200003feb9d
0x0000020000090cdc : and al, 0x20 ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x00000200001162a8 : and al, 0x20 ; lea rdx, qword ptr [rsp + 0x28] ; xor ecx, ecx ; call rax
0x00000200007d4fc2 : and al, 0x20 ; mov al, dl ; add rsp, 0x38 ; ret
0x00000200002283e5 : and al, 0x20 ; mov al, r9b ; add rsp, 0x38 ; ret
0x0000020000478acf : and al, 0x20 ; mov dword ptr [rsp + 0x2c], ecx ; jmp 0x20000478aa0
0x0000020000478ace : and al, 0x20 ; mov dword ptr [rsp + 0x2c], ecx ; jmp 0x20000478aa1
0x000002000072a7fa : and al, 0x20 ; mov dword ptr [rsp + 0x2c], r15d ; call rax
0x00000200007d140e : and al, 0x20 ; mov dword ptr [rsp + 0x34], esi ; call 0x200003fec89
0x00000200003f7377 : and al, 0x20 ; mov dword ptr [rsp + 0x54], r11d ; call r10
0x000002000043a02c : and al, 0x20 ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000046acb5 : and al, 0x20 ; mov eax, r9d ; add rsp, 0x38 ; ret
0x000002000052a601 : and al, 0x20 ; mov ecx, edi ; call rsi
0x00000200006840c1 : and al, 0x20 ; mov edi, eax ; call 0x200000f0306
0x00000200006840c0 : and al, 0x20 ; mov edi, eax ; call 0x200000f0307
0x0000020000724a46 : and al, 0x20 ; mov edx, 0x50 ; call 0x20000140d25
0x000002000023b600 : and al, 0x20 ; mov edx, esi ; call r11
0x000002000052a520 : and al, 0x20 ; mov edx, esi ; mov rcx, r14 ; call r9
0x00000200003fa5f3 : and al, 0x20 ; mov qword ptr [rbp - 0x40], rsi ; call r10
0x00000200001feed2 : and al, 0x20 ; mov qword ptr [rsp + 0x28], r8 ; call rdx
0x000002000058e00c : and al, 0x20 ; mov qword ptr [rsp + 0x30], rbx ; call r11
0x00000200006dc283 : and al, 0x20 ; mov qword ptr [rsp + 0x40], rsi ; call r10
0x00000200007076b2 : and al, 0x20 ; mov r15, rax ; mov r8d, esi ; call rbx
0x000002000050d82f : and al, 0x20 ; mov r8b, r11b ; call r12
0x0000020000606887 : and al, 0x20 ; mov r8d, ebx ; call rax
0x00000200005ad2b2 : and al, 0x20 ; mov r8d, ebx ; mov cl, 0x15 ; call r10
0x00000200005ad339 : and al, 0x20 ; mov r8d, ebx ; mov cl, 0x15 ; call rax
0x000002000058f8d4 : and al, 0x20 ; mov r8d, ebx ; mov cl, 0xc ; call rax
0x000002000070f8b1 : and al, 0x20 ; mov r9, rbx ; call rax
0x00000200006dd265 : and al, 0x20 ; mov r9d, 2 ; call rax
0x00000200006dd292 : and al, 0x20 ; mov r9d, 3 ; call rax
0x00000200004c6df2 : and al, 0x20 ; mov r9d, r8d ; mov r8, r12 ; call r10
0x00000200001be9da : and al, 0x20 ; mov rax, qword ptr [rip + 0x13ae6d] ; call rax
0x00000200001be3ed : and al, 0x20 ; mov rax, qword ptr [rip + 0x13b45a] ; call rax
0x00000200003f386b : and al, 0x20 ; mov rcx, r11 ; call r10
0x00000200003f9380 : and al, 0x20 ; mov rcx, r11 ; call rax
0x00000200000a95ab : and al, 0x20 ; mov rcx, r12 ; call 0x200000a58b7
0x00000200003f7d8d : and al, 0x20 ; mov rcx, r13 ; call r12
0x00000200003f7c62 : and al, 0x20 ; mov rcx, r13 ; call r14
0x000002000054e609 : and al, 0x20 ; mov rcx, r13 ; call r15
0x0000020000707501 : and al, 0x20 ; mov rcx, r13 ; call rax
0x00000200003f36b9 : and al, 0x20 ; mov rcx, r14 ; call qword ptr [rsi]
0x0000020000708fab : and al, 0x20 ; mov rcx, r14 ; call rax
0x000002000052a63c : and al, 0x20 ; mov rcx, r15 ; call 0x20000157548
0x000002000045cae4 : and al, 0x20 ; mov rcx, r15 ; call r14
0x00000200006d825e : and al, 0x20 ; mov rcx, r15 ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x00000200006d86f2 : and al, 0x20 ; mov rcx, r15 ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x0000020000460b43 : and al, 0x20 ; mov rcx, rbx ; call rax
0x00000200005255be : and al, 0x20 ; mov rcx, rdi ; call 0x20000148a98
0x00000200005255bd : and al, 0x20 ; mov rcx, rdi ; call 0x20000148a99
0x000002000021f1f1 : and al, 0x20 ; mov rcx, rdi ; call rax
0x000002000040f100 : and al, 0x20 ; mov rcx, rdi ; mov dl, 1 ; call 0x2000040b3d5
0x00000200007080c6 : and al, 0x20 ; mov rcx, rsi ; call r12
0x0000020000441eab : and al, 0x20 ; mov rcx, rsi ; call rdi
0x000002000001f09e : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x28] ; pop r14 ; ret
0x0000020000550bac : and al, 0x20 ; mov rdx, qword ptr [rsp + 0x28] ; add rax, rdx ; jmp 0x20000550bcf
0x00000200006beec6 : and al, 0x20 ; mov rdx, r10 ; mov rcx, r15 ; call r11
0x00000200006dbd46 : and al, 0x20 ; mov rdx, r12 ; mov rcx, r14 ; call rsi
0x0000020000458142 : and al, 0x20 ; mov rdx, r12 ; mov rcx, r15 ; call rdi
0x000002000022bf66 : and al, 0x20 ; mov rdx, rsi ; call r10
0x000002000070fa29 : and al, 0x20 ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x00000200005330df : and al, 0x20 ; mov rsi, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x000002000013c8bd : and al, 0x20 ; or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x2000013c87f
0x000002000010fa26 : and al, 0x20 ; pop r14 ; ret
0x000002000007f3a5 : and al, 0x20 ; pop rdi ; ret
0x00000200000bb0db : and al, 0x20 ; ret
0x00000200001b749d : and al, 0x20 ; ret 0x11
0x00000200007cd157 : and al, 0x20 ; sbb dword ptr [rax], eax ; add al, byte ptr [rax] ; call 0x200003f7bc5
0x000002000047f7af : and al, 0x20 ; xchg eax, esi ; add byte ptr [rax], al ; add cl, ch ; call qword ptr [rdx]
0x0000020000209fe5 : and al, 0x20 ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200000c09fb : and al, 0x20 ; xor eax, eax ; mov qword ptr [r9], rdx ; pop rdi ; ret
0x00000200007d08a9 : and al, 0x20 ; xor ecx, ecx ; call 0x200003f7bc3
0x00000200007d08a8 : and al, 0x20 ; xor ecx, ecx ; call 0x200003f7bc4
0x00000200005878d5 : and al, 0x20 ; xor ecx, ecx ; call qword ptr [rsi]
0x000002000047810a : and al, 0x20 ; xor edx, edx ; call 0x2000009e097
0x0000020000478109 : and al, 0x20 ; xor edx, edx ; call 0x2000009e098
0x0000020000519642 : and al, 0x20 ; xor r8d, r8d ; call 0x20000148a98
0x0000020000519641 : and al, 0x20 ; xor r8d, r8d ; call 0x20000148a99
0x0000020000594f6f : and al, 0x20 ; xor r8d, r8d ; mov cl, 0x1b ; call rax
0x0000020000600b1a : and al, 0x20 ; xor r8d, r8d ; mov cl, bpl ; call rsi
0x00000200003e7236 : and al, 0x21 ; cmp al, 1 ; je 0x200003e726d ; jmp 0x200005834da
0x0000020000624528 : and al, 0x21 ; jmp 0x2000062453b
0x0000020000624527 : and al, 0x21 ; jmp 0x2000062453c
0x00000200005028fc : and al, 0x24 ; inc edx ; jmp 0x200005028c7
0x0000020000706007 : and al, 0x24 ; jmp 0x20000705fd1
0x0000020000451912 : and al, 0x24 ; mov eax, r8d ; add rsp, 0x48 ; ret
0x00000200005ebdf8 : and al, 0x26 ; test eax, 0x5ce990ff ; ret 0xfff1
0x00000200001b90e8 : and al, 0x28 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000066d74b : and al, 0x28 ; add byte ptr [rbp + rcx*4 + 0xd], cl ; ret
0x00000200001fef31 : and al, 0x28 ; add byte ptr [rbp - 0x75], al ; ret
0x000002000059f97a : and al, 0x28 ; add byte ptr [rdi], cl ; ret 0xc933
0x0000020000550bb1 : and al, 0x28 ; add rax, rdx ; jmp 0x20000550bca
0x00000200002011f1 : and al, 0x28 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000047920a : and al, 0x28 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000d3704 : and al, 0x28 ; add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x000002000051383e : and al, 0x28 ; add rsp, 0x48 ; ret
0x0000020000532588 : and al, 0x28 ; and eax, 0x80000005 ; pop r14 ; ret
0x00000200006e1982 : and al, 0x28 ; and qword ptr [rsp + 0x20], 0 ; call r10
0x000002000051f9e4 : and al, 0x28 ; call 0x200001480d5
0x000002000051f9e3 : and al, 0x28 ; call 0x200001480d6
0x00000200005328f9 : and al, 0x28 ; call 0x20000157885
0x00000200005328f8 : and al, 0x28 ; call 0x20000157886
0x00000200001bd01a : and al, 0x28 ; call r8
0x00000200001feed7 : and al, 0x28 ; call rdx
0x00000200006691a5 : and al, 0x28 ; jae 0x200006691b8 ; mov eax, 0xc0000004 ; ret
0x0000020000669261 : and al, 0x28 ; jae 0x20000669274 ; mov eax, 0xc0000004 ; ret
0x00000200005343d4 : and al, 0x28 ; jmp 0x200005343fc
0x000002000021fb3b : and al, 0x28 ; jmp rax
0x0000020000705e83 : and al, 0x28 ; lea rcx, qword ptr [rsp + 0x20] ; call r8
0x00000200006939f7 : and al, 0x28 ; mov byte ptr [rax], 0 ; ret
0x00000200006939d9 : and al, 0x28 ; mov byte ptr [rax], 1 ; ret
0x000002000067823f : and al, 0x28 ; mov byte ptr [rsp + 0x20], dil ; call 0x200002044c1
0x00000200005b0cbb : and al, 0x28 ; mov byte ptr [rsp + 0x20], r12b ; call 0x2000045cedd
0x000002000019f6b7 : and al, 0x28 ; mov cl, 1 ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x00000200001c4bf0 : and al, 0x28 ; mov cl, bl ; call rax
0x00000200006afdf7 : and al, 0x28 ; mov dword ptr [rdx], ecx ; ret
0x00000200004f09c3 : and al, 0x28 ; mov dword ptr [rsp + 0x20], eax ; call 0x2000003cbf4
0x00000200007074fd : and al, 0x28 ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, r13 ; call rax
0x0000020000708fa7 : and al, 0x28 ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, r14 ; call rax
0x000002000041bd20 : and al, 0x28 ; mov dword ptr [rsp + 0x20], r10d ; call r11
0x00000200006be833 : and al, 0x28 ; mov dword ptr [rsp + 0x20], r12d ; call r10
0x00000200004d4019 : and al, 0x28 ; mov dword ptr [rsp + 0x20], r14d ; call rbx
0x00000200001170ae : and al, 0x28 ; mov eax, dword ptr [rsp + 0x28] ; pop rdi ; pop rsi ; ret
0x000002000078f203 : and al, 0x28 ; mov ecx, dword ptr [rax] ; mov dword ptr [r8], ecx ; ret
0x00000200004ca061 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r13 ; call r10
0x00000200006bf499 : and al, 0x28 ; mov qword ptr [rsp + 0x20], r14 ; call r10
0x00000200004882a9 : and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005a2593 : and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r15
0x00000200003fe0cc : and al, 0x28 ; mov rcx, rbp ; call 0x2000000a3db
0x000002000001f0a3 : and al, 0x28 ; pop r14 ; ret
0x00000200000269aa : and al, 0x28 ; pop rbp ; ret
0x00000200001170b2 : and al, 0x28 ; pop rdi ; pop rsi ; ret
0x00000200000c8abb : and al, 0x28 ; pop rdi ; ret
0x0000020000453811 : and al, 0x28 ; test rax, rax ; jne 0x20000453825 ; mov eax, r10d ; ret
0x00000200001162ad : and al, 0x28 ; xor ecx, ecx ; call rax
0x000002000061a6d8 : and al, 0x29 ; ret
0x000002000072a7ff : and al, 0x2c ; call rax
0x0000020000478ad3 : and al, 0x2c ; jmp 0x20000478a9c
0x0000020000478ad2 : and al, 0x2c ; jmp 0x20000478a9d
0x00000200002012e5 : and al, 0x2c ; mov dword ptr [rbx], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003e37d6 : and al, 0x30 ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000068fb14 : and al, 0x30 ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0xac8d
0x000002000006974a : and al, 0x30 ; add cl, byte ptr [rcx + rcx*4 + 0x4a] ; or byte ptr [rax - 0x75], cl ; ret 0xc748
0x000002000021565d : and al, 0x30 ; add rsp, 0x10 ; pop rdi ; ret
0x0000020000074f3b : and al, 0x30 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000040e34 : and al, 0x30 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200000243e3 : and al, 0x30 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000034ad1 : and al, 0x30 ; add rsp, 0x20 ; pop rcx ; ret
0x0000020000101e4e : and al, 0x30 ; add rsp, 0x20 ; pop rdi ; jmp rax
0x000002000000409a : and al, 0x30 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000257a6 : and al, 0x30 ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000044e26 : and al, 0x30 ; add rsp, 0x28 ; ret
0x0000020000073d9a : and al, 0x30 ; add rsp, 0x38 ; pop rsi ; pop rbx ; ret
0x00000200000706a2 : and al, 0x30 ; add rsp, 0x38 ; ret
0x00000200000b8ae7 : and al, 0x30 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200001d3911 : and al, 0x30 ; add rsp, 0x48 ; ret
0x000002000043e9d0 : and al, 0x30 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000046428e : and al, 0x30 ; call 0x20000093961
0x000002000051964f : and al, 0x30 ; call 0x20000148075
0x000002000051964e : and al, 0x30 ; call 0x20000148076
0x000002000051f091 : and al, 0x30 ; call 0x20000149e15
0x000002000051f090 : and al, 0x30 ; call 0x20000149e16
0x00000200005db5d4 : and al, 0x30 ; call 0x20000157884
0x0000020000211fa5 : and al, 0x30 ; call 0x20000211a6d
0x00000200007bcb36 : and al, 0x30 ; call 0x200003e9a05
0x00000200007bcb35 : and al, 0x30 ; call 0x200003e9a06
0x000002000051a926 : and al, 0x30 ; call 0x20000526bf0
0x000002000051a925 : and al, 0x30 ; call 0x20000526bf1
0x00000200007bb057 : and al, 0x30 ; call 0x200005672b8
0x00000200007bb056 : and al, 0x30 ; call 0x200005672b9
0x000002000012c6ee : and al, 0x30 ; call qword ptr [rbx]
0x000002000058e011 : and al, 0x30 ; call r11
0x000002000016db01 : and al, 0x30 ; call r8
0x00000200001ade3f : and al, 0x30 ; call rax
0x00000200006886cc : and al, 0x30 ; inc eax ; add rsp, 0x28 ; ret
0x00000200000d73be : and al, 0x30 ; jmp 0x200000d71b9
0x000002000020774d : and al, 0x30 ; jmp 0x20000207717
0x00000200003efd4d : and al, 0x30 ; jmp 0x200003efd6e
0x00000200003fae1d : and al, 0x30 ; jmp 0x200003fae41
0x00000200005f4e8f : and al, 0x30 ; jmp 0x200005510c9
0x000002000070deaf : and al, 0x30 ; jmp rax
0x000002000052dbb7 : and al, 0x30 ; jne 0x2000052dbca ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005db5cf : and al, 0x30 ; lea r15, qword ptr [rsp + 0x30] ; call 0x20000157889
0x00000200007d13cf : and al, 0x30 ; lea rcx, qword ptr [rsp + 0x50] ; call r12
0x0000020000436675 : and al, 0x30 ; mov al, 1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004ce89c : and al, 0x30 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200001172ba : and al, 0x30 ; mov dword ptr [rdi], eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000006d895 : and al, 0x30 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f8b59 : and al, 0x30 ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000160f6b : and al, 0x30 ; mov ecx, 0xa ; call rax
0x0000020000160f48 : and al, 0x30 ; mov ecx, 0xd ; call rax
0x0000020000118ef0 : and al, 0x30 ; mov qword ptr [rax], r10 ; ret
0x00000200001d8507 : and al, 0x30 ; mov qword ptr [rcx], r10 ; ret
0x0000020000638db1 : and al, 0x30 ; mov qword ptr [rsp + 0x20], r12 ; call 0x20000644fe5
0x000002000016dafc : and al, 0x30 ; mov qword ptr [rsp + 0x30], rax ; call r8
0x00000200001cb56b : and al, 0x30 ; mov qword ptr [rsp + 0x38], rdx ; call r9
0x000002000043d3ec : and al, 0x30 ; mov r12d, r14d ; call 0x2000005f908
0x00000200003e7dc5 : and al, 0x30 ; mov r13, rdx ; call 0x20000008824
0x00000200003e7dc4 : and al, 0x30 ; mov r13, rdx ; call 0x20000008825
0x00000200006a3622 : and al, 0x30 ; mov r15b, r13b ; call 0x2000005f907
0x00000200006a3621 : and al, 0x30 ; mov r15b, r13b ; call 0x2000005f908
0x0000020000451a03 : and al, 0x30 ; mov rax, qword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000215b0f : and al, 0x30 ; mov rax, rdx ; add rsp, 0x48 ; ret
0x000002000022c61f : and al, 0x30 ; mov rcx, qword ptr [r8 + 0x30] ; call r9
0x00000200006bdd1f : and al, 0x30 ; mov rcx, rax ; call r10
0x00000200003d0dc3 : and al, 0x30 ; mov rcx, rbx ; call 0x2000024d007
0x000002000008f4fe : and al, 0x30 ; mov rcx, rdi ; call rsi
0x000002000013ad28 : and al, 0x30 ; mov rdx, r12 ; call rax
0x00000200000fcf9c : and al, 0x30 ; pop r14 ; pop r12 ; ret
0x0000020000409323 : and al, 0x30 ; pop r14 ; pop rsi ; ret
0x000002000003768b : and al, 0x30 ; pop r15 ; pop r14 ; ret
0x000002000052ddd0 : and al, 0x30 ; pop rbx ; jmp r10
0x000002000002cb27 : and al, 0x30 ; test eax, eax ; jne 0x2000002cb44 ; ret
0x000002000002cb26 : and al, 0x30 ; test eax, eax ; jne 0x2000002cb45 ; ret
0x00000200001cac7f : and al, 0x30 ; xor al, al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c516c : and al, 0x30 ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000071116b : and al, 0x30 ; xor edi, edi ; xor ebx, ebx ; call 0x2000003d418
0x000002000071116a : and al, 0x30 ; xor edi, edi ; xor ebx, ebx ; call 0x2000003d419
0x000002000042a5ec : and al, 0x30 ; xor edx, edx ; call 0x20000058017
0x000002000042a5eb : and al, 0x30 ; xor edx, edx ; call 0x20000058018
0x000002000043b66a : and al, 0x30 ; xor edx, edx ; mov rcx, rax ; call 0x20000157889
0x00000200006a2c78 : and al, 0x30 ; xor edx, edx ; mov rcx, rdi ; call 0x200000eef39
0x0000020000510019 : and al, 0x30 ; xor rcx, rsp ; call 0x2000013ac78
0x0000020000510018 : and al, 0x30 ; xor rcx, rsp ; call 0x2000013ac79
0x000002000008d624 : and al, 0x32 ; add rsp, 0x28 ; ret
0x000002000016b0b9 : and al, 0x33 ; rol byte ptr [rbp - 0x77], 0x7d ; add cl, ch ; ret
0x000002000062c92d : and al, 0x33 ; ror byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000024d009
0x00000200003db5e5 : and al, 0x34 ; call 0x20000157884
0x00000200003db5e4 : and al, 0x34 ; call 0x20000157885
0x00000200007d1412 : and al, 0x34 ; call 0x200003fec85
0x000002000002c11d : and al, 0x34 ; jmp 0x2000002c17b
0x000002000002c11c : and al, 0x34 ; jmp 0x2000002c17c
0x00000200003f6089 : and al, 0x34 ; mov byte ptr [rbx], cl ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004850d8 : and al, 0x34 ; mov edx, r10d ; mov rcx, rsi ; call rax
0x000002000053049e : and al, 0x38 ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x0000020000652a59 : and al, 0x38 ; add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x00000200005aed7e : and al, 0x38 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x1389
0x00000200001a6665 : and al, 0x38 ; add qword ptr [rcx + 8], rax ; jmp 0x200000e2919
0x00000200001a6664 : and al, 0x38 ; add qword ptr [rcx + 8], rax ; jmp 0x200000e291a
0x000002000023791f : and al, 0x38 ; add rsp, 0x10 ; pop rdi ; ret
0x0000020000004c44 : and al, 0x38 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000045f275 : and al, 0x38 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000005c20f : and al, 0x38 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021f2a7 : and al, 0x38 ; add rsp, 0x20 ; pop rdi ; jmp rax
0x000002000000286e : and al, 0x38 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002a88b : and al, 0x38 ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000056aa9 : and al, 0x38 ; add rsp, 0x28 ; ret
0x00000200000a0042 : and al, 0x38 ; add rsp, 0x40 ; pop rbx ; ret
0x000002000001da8c : and al, 0x38 ; add rsp, 0x48 ; pop rdi ; pop rsi ; ret
0x00000200000eb78b : and al, 0x38 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004c3e1e : and al, 0x38 ; add rsp, 0x70 ; pop r13 ; ret
0x000002000061f119 : and al, 0x38 ; call 0x2000024da45
0x000002000061f118 : and al, 0x38 ; call 0x2000024da46
0x000002000064c5d8 : and al, 0x38 ; call 0x200003f8854
0x00000200005b36b7 : and al, 0x38 ; call 0x200005213c5
0x00000200001cb570 : and al, 0x38 ; call r9
0x000002000006d26e : and al, 0x38 ; call rax
0x00000200006ca769 : and al, 0x38 ; jmp 0x200006ca732
0x000002000021fb43 : and al, 0x38 ; jmp rax
0x00000200005303ee : and al, 0x38 ; lea rcx, qword ptr [rsp + 0x20] ; call rdi
0x0000020000010d1f : and al, 0x38 ; lock inc dword ptr [rcx] ; add rsp, 0x28 ; ret
0x00000200006db47e : and al, 0x38 ; mov byte ptr [rdx], cl ; add rsp, 0x48 ; ret
0x00000200001bdd59 : and al, 0x38 ; mov dword ptr [rbx], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d2776 : and al, 0x38 ; mov dword ptr [rcx], r11d ; mov eax, r10d ; ret
0x000002000069027c : and al, 0x38 ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005f80c2 : and al, 0x38 ; mov r8d, ebx ; mov rdx, r14 ; call rax
0x00000200006ff39c : and al, 0x38 ; mov rax, qword ptr [rsp + 0x48] ; jmp rax
0x0000020000519492 : and al, 0x38 ; mov rcx, rdi ; call 0x20000148a98
0x0000020000108f0b : and al, 0x38 ; mov word ptr [rsp + 0x3c], r14w ; call r9
0x0000020000007a67 : and al, 0x38 ; pop r15 ; pop r14 ; pop r12 ; ret
0x00000200000302e0 : and al, 0x38 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200003e4a45 : and al, 0x38 ; ret
0x00000200003e4803 : and al, 0x38 ; sub eax, edx ; xor eax, dword ptr [r8 + rcx*4] ; ret
0x000002000040f353 : and al, 0x38 ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000512851 : and al, 0x38 ; xor rcx, rsp ; call 0x2000013ac78
0x0000020000512850 : and al, 0x38 ; xor rcx, rsp ; call 0x2000013ac79
0x00000200001bd406 : and al, 0x3b ; ret
0x0000020000108f11 : and al, 0x3c ; call r9
0x00000200007a91dd : and al, 0x3c ; call rax
0x000002000003e55a : and al, 0x3e ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200001e3bb1 : and al, 0x40 ; adc esi, esi ; ret
0x00000200001f3c08 : and al, 0x40 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x00000200007bb138 : and al, 0x40 ; add al, ch ; adc al, 0xda ; ret
0x000002000079f86f : and al, 0x40 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000000e37c : and al, 0x40 ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x00000200001843a5 : and al, 0x40 ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4865
0x0000020000006186 : and al, 0x40 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004525a2 : and al, 0x40 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000026e30 : and al, 0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200003fbfb2 : and al, 0x40 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003d999b : and al, 0x40 ; add rsp, 0x20 ; pop rcx ; ret
0x0000020000503b8b : and al, 0x40 ; add rsp, 0x20 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000001a827 : and al, 0x40 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000003d7c : and al, 0x40 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001eb71 : and al, 0x40 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000ec28f : and al, 0x40 ; add rsp, 0x28 ; pop rsi ; pop rbx ; ret
0x0000020000026e57 : and al, 0x40 ; add rsp, 0x28 ; ret
0x0000020000023bc4 : and al, 0x40 ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000f6444 : and al, 0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000200006824f1 : and al, 0x40 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000d0ca6 : and al, 0x40 ; add rsp, 0x30 ; pop rcx ; ret
0x000002000000c144 : and al, 0x40 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013575f : and al, 0x40 ; add rsp, 0x30 ; pop rsi ; ret
0x00000200001c9a05 : and al, 0x40 ; add rsp, 0x38 ; ret
0x0000020000156767 : and al, 0x40 ; add rsp, 0x50 ; call r10
0x000002000013f1d5 : and al, 0x40 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200000c01eb : and al, 0x40 ; add rsp, 0x68 ; pop rsi ; pop rbx ; ret
0x00000200000514cc : and al, 0x40 ; add rsp, 0x70 ; pop r13 ; ret
0x00000200003e11d1 : and al, 0x40 ; call 0x20000009855
0x00000200003e11d0 : and al, 0x40 ; call 0x20000009856
0x00000200004cca2b : and al, 0x40 ; call 0x200000eef35
0x00000200004cca2a : and al, 0x40 ; call 0x200000eef36
0x00000200001c0216 : and al, 0x40 ; call 0x200001bc478
0x00000200001c0215 : and al, 0x40 ; call 0x200001bc479
0x00000200005df8aa : and al, 0x40 ; call 0x2000020bd39
0x00000200005df8a9 : and al, 0x40 ; call 0x2000020bd3a
0x0000020000623f3a : and al, 0x40 ; call 0x2000024d005
0x0000020000623f39 : and al, 0x40 ; call 0x2000024d006
0x00000200004004d1 : and al, 0x40 ; call r10
0x0000020000201585 : and al, 0x40 ; call rax
0x0000020000650039 : and al, 0x40 ; cmp rbx, rax ; jne 0x20000650008 ; jmp 0x200006500b1
0x0000020000650038 : and al, 0x40 ; cmp rbx, rax ; jne 0x20000650009 ; jmp 0x200006500b2
0x00000200007ca074 : and al, 0x40 ; dec dword ptr [rbp + rcx*4 + 0x35] ; ret 0xbf23
0x00000200005493af : and al, 0x40 ; dec rax ; add rax, rdx ; jmp 0x20000549352
0x000002000001773e : and al, 0x40 ; jmp 0x200000174e7
0x00000200005d9102 : and al, 0x40 ; jmp 0x200004c5404
0x00000200007d1679 : and al, 0x40 ; jmp 0x200007d1643
0x000002000021fbeb : and al, 0x40 ; jmp rax
0x00000200001bd015 : and al, 0x40 ; lea rdx, qword ptr [rsp + 0x28] ; call r8
0x000002000008f057 : and al, 0x40 ; mov bl, al ; call rsi
0x0000020000440310 : and al, 0x40 ; mov byte ptr [rax], r11b ; xor eax, eax ; ret
0x00000200004259dd : and al, 0x40 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003ef940 : and al, 0x40 ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042a8b4 : and al, 0x40 ; mov qword ptr [rbx], rax ; jmp 0x2000042a8e8
0x000002000042a8b3 : and al, 0x40 ; mov qword ptr [rbx], rax ; jmp 0x2000042a8e9
0x000002000008f438 : and al, 0x40 ; mov qword ptr [rcx + 0x38], rax ; mov byte ptr [rcx + 0x52], dl ; ret
0x000002000052ddcb : and al, 0x40 ; mov qword ptr [rsp + 0x30], r11 ; pop rbx ; jmp r10
0x000002000021fb2c : and al, 0x40 ; mov rax, qword ptr [rsp + 0x50] ; jmp rax
0x00000200001be152 : and al, 0x40 ; mov rcx, qword ptr [rsp + 0x20] ; call r9
0x00000200001be03f : and al, 0x40 ; mov rcx, qword ptr [rsp + 0x20] ; call rax
0x00000200005df868 : and al, 0x40 ; mov rcx, rbx ; call 0x2000020bce4
0x00000200002331b6 : and al, 0x40 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001f5c7e : and al, 0x40 ; pop r15 ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000007ed6f : and al, 0x40 ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000be3e3 : and al, 0x40 ; xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000514dda : and al, 0x40 ; xor rcx, rsp ; call 0x2000013ac78
0x0000020000514dd9 : and al, 0x40 ; xor rcx, rsp ; call 0x2000013ac79
0x000002000019fe4e : and al, 0x41 ; mov al, 1 ; movzx edx, bpl ; call rax
0x00000200001d5697 : and al, 0x41 ; mov al, cl ; add rsp, 0x28 ; ret
0x000002000002cb72 : and al, 0x41 ; mov dword ptr [rax], eax ; ret
0x0000020000451913 : and al, 0x41 ; mov eax, eax ; add rsp, 0x48 ; ret
0x00000200000770ce : and al, 0x42 ; cmp al, 2 ; je 0x200000770e9 ; mov al, 1 ; ret
0x000002000042aceb : and al, 0x43 ; add byte ptr [rdi + rcx + 0x44], al ; jrcxz 0x2000042ace4 ; ret
0x000002000045126c : and al, 0x44 ; add al, 0x75 ; add eax, 0x58c48348 ; ret
0x00000200007b32e2 : and al, 0x44 ; cmp al, cl ; jae 0x200007b32f5 ; or eax, 0xffffffff ; ret
0x00000200003d7ceb : and al, 0x44 ; jmp 0x200003d392d
0x00000200003d7cea : and al, 0x44 ; jmp 0x200003d392e
0x0000020000551b96 : and al, 0x44 ; mov dword ptr [rdi + 0x24], eax ; jmp 0x20000551b66
0x0000020000551b95 : and al, 0x44 ; mov dword ptr [rdi + 0x24], eax ; jmp 0x20000551b67
0x0000020000692f5e : and al, 0x44 ; sub edx, dword ptr [rbx] ; add byte ptr [rax], al ; jmp 0x20000692fa0
0x00000200001a0308 : and al, 0x45 ; xor eax, eax ; xor edx, edx ; call rax
0x00000200006a1323 : and al, 0x48 ; add byte ptr [rax - 0x75], cl ; ret 0x8348
0x000002000013b02e : and al, 0x48 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x000002000059ecba : and al, 0x48 ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200001196fd : and al, 0x48 ; add esp, 0x10 ; pop rbp ; ret
0x00000200001b8655 : and al, 0x48 ; add esp, 0x18 ; ret
0x00000200001529ca : and al, 0x48 ; add esp, 8 ; ret
0x000002000044a137 : and al, 0x48 ; add rsp, 0x20 ; pop r12 ; ret
0x000002000070b401 : and al, 0x48 ; add rsp, 0x20 ; pop r14 ; jmp rax
0x0000020000009830 : and al, 0x48 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000009c50 : and al, 0x48 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200004311eb : and al, 0x48 ; add rsp, 0x20 ; pop rbp ; ret
0x000002000071c2d7 : and al, 0x48 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b41d8 : and al, 0x48 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000016037 : and al, 0x48 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000006f4ba : and al, 0x48 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200004c5dd5 : and al, 0x48 ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000047b727 : and al, 0x48 ; add rsp, 0x28 ; pop rdi ; pop rsi ; ret
0x000002000054ca78 : and al, 0x48 ; add rsp, 0x28 ; ret
0x000002000043d148 : and al, 0x48 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000009043d : and al, 0x48 ; add rsp, 0x30 ; pop r15 ; ret
0x00000200003cd8aa : and al, 0x48 ; add rsp, 0x30 ; pop rbp ; ret
0x000002000001dd55 : and al, 0x48 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000003114 : and al, 0x48 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000052ccb5 : and al, 0x48 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000009ecc0 : and al, 0x48 ; add rsp, 0x38 ; ret
0x0000020000407a3d : and al, 0x48 ; add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000006e3d9 : and al, 0x48 ; add rsp, 0x70 ; pop rsi ; ret
0x00000200003e7987 : and al, 0x48 ; call 0x20000007c4d
0x00000200003e7986 : and al, 0x48 ; call 0x20000007c4e
0x00000200004327b4 : and al, 0x48 ; call 0x2000005f905
0x00000200004327b3 : and al, 0x48 ; call 0x2000005f906
0x00000200004334dc : and al, 0x48 ; call 0x200000620f5
0x00000200004334db : and al, 0x48 ; call 0x200000620f6
0x000002000047bac8 : and al, 0x48 ; call 0x200000e7da4
0x000002000047bac7 : and al, 0x48 ; call 0x200000e7da5
0x00000200004c6fe6 : and al, 0x48 ; call 0x200000e7da6
0x00000200004b88c4 : and al, 0x48 ; call 0x200000e7e75
0x00000200004b88c3 : and al, 0x48 ; call 0x200000e7e76
0x00000200005fe591 : and al, 0x48 ; call 0x2000049a814
0x00000200005fe590 : and al, 0x48 ; call 0x2000049a815
0x000002000004ed33 : and al, 0x48 ; call 0x200004e73bc
0x000002000004ed32 : and al, 0x48 ; call 0x200004e73bd
0x00000200001bcff2 : and al, 0x48 ; call r9
0x00000200000cc2c7 : and al, 0x48 ; call rax
0x0000020000131f84 : and al, 0x48 ; dec dword ptr [rax - 0x39] ; ret 0xba00
0x00000200006ff3a1 : and al, 0x48 ; jmp rax
0x000002000066e8b5 : and al, 0x48 ; lea ecx, dword ptr [rdi + 0x28] ; call 0x2000051ab5b
0x000002000012c6e9 : and al, 0x48 ; lea r8, qword ptr [rsp + 0x30] ; call qword ptr [rbx]
0x000002000052a5fc : and al, 0x48 ; lea rdx, qword ptr [rsp + 0x20] ; mov ecx, edi ; call rsi
0x00000200003f0077 : and al, 0x48 ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x000002000042e589 : and al, 0x48 ; mov dl, 1 ; call 0x200000564a7
0x000002000042e588 : and al, 0x48 ; mov dl, 1 ; call 0x200000564a8
0x000002000044ba3b : and al, 0x48 ; mov dword ptr [rbx], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003fd5e2 : and al, 0x48 ; mov dword ptr [rsp + 0x68], r11d ; call r10
0x000002000067b8f1 : and al, 0x48 ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f776a : and al, 0x48 ; mov ecx, 9 ; call 0x200000c3a09
0x000002000056017e : and al, 0x48 ; mov r8, rbp ; mov rdx, rsi ; call rax
0x000002000014c619 : and al, 0x48 ; mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x00000200004ece87 : and al, 0x48 ; mov rcx, r15 ; call 0x200006590df
0x00000200004385fb : and al, 0x48 ; mov rdx, rax ; call 0x2000005f308
0x00000200004385fa : and al, 0x48 ; mov rdx, rax ; call 0x2000005f309
0x0000020000438619 : and al, 0x48 ; mov rdx, rsi ; call 0x2000005f0a8
0x0000020000438618 : and al, 0x48 ; mov rdx, rsi ; call 0x2000005f0a9
0x00000200005131af : and al, 0x48 ; xor rcx, rsp ; call 0x2000013ac78
0x00000200005131ae : and al, 0x48 ; xor rcx, rsp ; call 0x2000013ac79
0x000002000002dafb : and al, 0x4c ; add byte ptr [rdi + rcx - 0x44], al ; ret
0x0000020000436ae8 : and al, 0x4c ; add rsp, 0x50 ; pop rbx ; ret
0x00000200000d4430 : and al, 0x50 ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000011e99f : and al, 0x50 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsi
0x00000200000c5e7c : and al, 0x50 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000e5ac : and al, 0x50 ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003cf6f3 : and al, 0x50 ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000043da4 : and al, 0x50 ; add rsp, 0x30 ; pop rbp ; ret
0x000002000024c721 : and al, 0x50 ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000707d93 : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; jmp rax
0x000002000002523d : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000a6db : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000001c361 : and al, 0x50 ; add rsp, 0x30 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000502335 : and al, 0x50 ; add rsp, 0x30 ; pop rsi ; ret
0x00000200006d7514 : and al, 0x50 ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000435420 : and al, 0x50 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000074f1 : and al, 0x50 ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000138986 : and al, 0x50 ; add rsp, 0x40 ; pop rsi ; ret
0x000002000024ea75 : and al, 0x50 ; add rsp, 0x70 ; pop rdi ; ret
0x00000200003dfac9 : and al, 0x50 ; call 0x2000000c351
0x00000200003dfac8 : and al, 0x50 ; call 0x2000000c352
0x00000200006a3647 : and al, 0x50 ; call 0x2000005f904
0x00000200006a3646 : and al, 0x50 ; call 0x2000005f905
0x000002000043b022 : and al, 0x50 ; call 0x20000068455
0x000002000043b021 : and al, 0x50 ; call 0x20000068456
0x000002000051f600 : and al, 0x50 ; call 0x20000148075
0x000002000051f5ff : and al, 0x50 ; call 0x20000148076
0x000002000052244c : and al, 0x50 ; call 0x20000148635
0x000002000052244b : and al, 0x50 ; call 0x20000148636
0x00000200006e2954 : and al, 0x50 ; call 0x200003feb98
0x00000200006e2953 : and al, 0x50 ; call 0x200003feb99
0x00000200007d13d4 : and al, 0x50 ; call r12
0x000002000014c61e : and al, 0x50 ; call rdx
0x0000020000680b56 : and al, 0x50 ; inc edx ; jmp 0x20000680b3c
0x00000200006b72fe : and al, 0x50 ; inc edx ; jmp 0x200006b72d3
0x00000200006b72fd : and al, 0x50 ; inc edx ; jmp 0x200006b72d4
0x0000020000193ac0 : and al, 0x50 ; jmp 0x2000009e4ec
0x000002000043a4d8 : and al, 0x50 ; jmp 0x2000043a4a1
0x000002000021fb31 : and al, 0x50 ; jmp rax
0x000002000062c590 : and al, 0x50 ; mov dword ptr [rbx], ecx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000121dcf : and al, 0x50 ; mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013d7fc : and al, 0x50 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001c0515 : and al, 0x50 ; mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001fd05b : and al, 0x50 ; mov rcx, qword ptr [r10 + 0x1d8] ; call rax
0x000002000068f6ef : and al, 0x50 ; mov rcx, qword ptr [rsp + 0x48] ; call rax
0x0000020000431b6e : and al, 0x50 ; mov rcx, rbx ; call 0x2000005c1b8
0x00000200004473d8 : and al, 0x50 ; mov rcx, rbx ; call 0x2000006d288
0x000002000048cf9f : and al, 0x50 ; mov rcx, rdi ; call rsi
0x00000200001cb16d : and al, 0x50 ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000515c8f : and al, 0x50 ; xor rcx, rsp ; call 0x2000013ac78
0x0000020000515c8e : and al, 0x50 ; xor rcx, rsp ; call 0x2000013ac79
0x00000200001e364a : and al, 0x54 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003f737c : and al, 0x54 ; call r10
0x00000200006dbec5 : and al, 0x54 ; mov r8d, edi ; mov rdx, rbp ; call rax
0x0000020000602f20 : and al, 0x58 ; add dword ptr [rax - 0x75], ecx ; ret
0x00000200005ab758 : and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x0000020000124373 : and al, 0x58 ; add dword ptr [rax], eax ; add cl, ch ; ret
0x00000200004d9d34 : and al, 0x58 ; add eax, dword ptr [rax] ; add al, ch ; ret 0xb8fc
0x00000200004d9dee : and al, 0x58 ; add esi, esi ; ret
0x000002000021c0e7 : and al, 0x58 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000001620f : and al, 0x58 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000011bfc8 : and al, 0x58 ; add rsp, 0x30 ; pop r15 ; ret
0x000002000020ac18 : and al, 0x58 ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000218b6c : and al, 0x58 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000b38c : and al, 0x58 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004ce73a : and al, 0x58 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000009c061 : and al, 0x58 ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000056eb1 : and al, 0x58 ; add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x000002000003bc4b : and al, 0x58 ; add rsp, 0x38 ; ret
0x0000020000113ab2 : and al, 0x58 ; add rsp, 0x40 ; pop r14 ; ret
0x00000200000c4003 : and al, 0x58 ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000008411 : and al, 0x58 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000062d800 : and al, 0x58 ; add rsp, 0x40 ; pop rsi ; ret
0x00000200000ebff9 : and al, 0x58 ; add rsp, 0x78 ; pop rdi ; pop rbx ; ret
0x00000200004c0ecb : and al, 0x58 ; call 0x200000f0305
0x00000200004c0eca : and al, 0x58 ; call 0x200000f0306
0x0000020000234f00 : and al, 0x58 ; call 0x200000f920d
0x0000020000629cab : and al, 0x58 ; call 0x2000024d005
0x0000020000629caa : and al, 0x58 ; call 0x2000024d006
0x00000200004b79d1 : and al, 0x58 ; call 0x200004b75d6
0x0000020000071684 : and al, 0x58 ; call rax
0x0000020000201756 : and al, 0x58 ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000048e070 : and al, 0x58 ; mov rcx, rbx ; call r15
0x0000020000662c4f : and al, 0x58 ; mov rcx, rdi ; call 0x200000eef37
0x00000200007b9e97 : and al, 0x58 ; xor eax, eax ; add rsp, 0x30 ; pop rsi ; ret
0x00000200004c0eb2 : and al, 0x58 ; xor edx, edx ; call 0x200000eef37
0x00000200004c0eb1 : and al, 0x58 ; xor edx, edx ; call 0x200000eef38
0x000002000050b950 : and al, 0x58 ; xor rcx, rsp ; call 0x2000013ac78
0x000002000050b94f : and al, 0x58 ; xor rcx, rsp ; call 0x2000013ac79
0x00000200004cb58e : and al, 0x5c ; mov eax, edx ; jmp 0x200004cb538
0x000002000046b48b : and al, 0x60 ; add al, byte ptr [rax] ; add al, ch ; jmp 0x2000046b45d
0x0000020000663b95 : and al, 0x60 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004bfc32 : and al, 0x60 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x000002000043a26b : and al, 0x60 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000222b3 : and al, 0x60 ; add rsp, 0x40 ; pop r14 ; ret
0x000002000003db10 : and al, 0x60 ; add rsp, 0x40 ; pop r15 ; ret
0x00000200000261f5 : and al, 0x60 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200001072f4 : and al, 0x60 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000a2d9 : and al, 0x60 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000c918d : and al, 0x60 ; add rsp, 0x40 ; pop rsi ; ret
0x0000020000407565 : and al, 0x60 ; add rsp, 0x48 ; ret
0x000002000011481b : and al, 0x60 ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000728c61 : and al, 0x60 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000000c784 : and al, 0x60 ; add rsp, 0x50 ; pop rdi ; ret
0x000002000001f306 : and al, 0x60 ; add rsp, 0x68 ; ret
0x00000200006a3668 : and al, 0x60 ; call 0x2000005f904
0x00000200006a3667 : and al, 0x60 ; call 0x2000005f905
0x00000200004c6fc0 : and al, 0x60 ; call 0x200000e7215
0x00000200004c6fbf : and al, 0x60 ; call 0x200000e7216
0x00000200005fe59b : and al, 0x60 ; call 0x2000049a814
0x00000200005fe59a : and al, 0x60 ; call 0x2000049a815
0x00000200000eebad : and al, 0x60 ; call qword ptr [rbx]
0x00000200006359e6 : and al, 0x60 ; call qword ptr [rip - 0x3deab6]
0x00000200000b664c : and al, 0x60 ; jmp 0x200000b5e65
0x0000020000199f83 : and al, 0x60 ; jmp 0x200000b61c0
0x0000020000143991 : and al, 0x60 ; jmp 0x20000143860
0x0000020000143990 : and al, 0x60 ; jmp 0x20000143861
0x00000200004dfadb : and al, 0x60 ; jmp 0x200004dfaa4
0x00000200004dfada : and al, 0x60 ; jmp 0x200004dfaa5
0x000002000012aa3e : and al, 0x60 ; mov dword ptr [rax], edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001c473b : and al, 0x60 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000693fcf : and al, 0x60 ; mov qword ptr [rcx], rax ; add rsp, 0x28 ; ret
0x00000200006c694c : and al, 0x60 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000020000431ae1 : and al, 0x60 ; mov rcx, rbx ; call rsi
0x000002000020e650 : and al, 0x60 ; mov rcx, rdi ; call 0x2000014a8f7
0x00000200001a9eb0 : and al, 0x60 ; or byte ptr [rax - 0x75], cl ; ret
0x00000200005bafd0 : and al, 0x60 ; test al, 1 ; je 0x200005bafe3 ; call 0x200006b7220
0x00000200005bafcf : and al, 0x60 ; test al, 1 ; je 0x200005bafe4 ; call 0x200006b7221
0x00000200004494c3 : and al, 0x60 ; xor r8d, r8d ; call 0x2000006d768
0x00000200004494c2 : and al, 0x60 ; xor r8d, r8d ; call 0x2000006d769
0x000002000005a180 : and al, 0x64 ; jmp 0x2000005a54a
0x000002000005a17f : and al, 0x64 ; jmp 0x2000005a54b
0x0000020000584b4a : and al, 0x68 ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200000c8053 : and al, 0x68 ; add byte ptr [rbx + rcx - 0x77], dh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000d41bb : and al, 0x68 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000050b34 : and al, 0x68 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000049949d : and al, 0x68 ; add rsp, 0x40 ; pop r13 ; ret
0x0000020000043a31 : and al, 0x68 ; add rsp, 0x40 ; pop r14 ; ret
0x000002000008f4c8 : and al, 0x68 ; add rsp, 0x40 ; pop r15 ; ret
0x00000200000c72d5 : and al, 0x68 ; add rsp, 0x40 ; pop rbp ; ret
0x000002000043b83a : and al, 0x68 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000007c9a0 : and al, 0x68 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000002546f : and al, 0x68 ; add rsp, 0x40 ; pop rsi ; ret
0x0000020000517504 : and al, 0x68 ; add rsp, 0x48 ; ret
0x0000020000710174 : and al, 0x68 ; add rsp, 0x50 ; pop r14 ; ret
0x000002000008ab7b : and al, 0x68 ; add rsp, 0x50 ; pop rbp ; ret
0x00000200000827c5 : and al, 0x68 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200003e1125 : and al, 0x68 ; add rsp, 0x50 ; pop rsi ; ret
0x00000200004728a1 : and al, 0x68 ; add rsp, 0x70 ; pop rsi ; ret
0x000002000079362a : and al, 0x68 ; call 0x2000005f904
0x0000020000793629 : and al, 0x68 ; call 0x2000005f905
0x000002000046b288 : and al, 0x68 ; call 0x2000009a735
0x000002000046b287 : and al, 0x68 ; call 0x2000009a736
0x00000200004bb3d8 : and al, 0x68 ; call 0x200000e7da5
0x00000200004bb3d7 : and al, 0x68 ; call 0x200000e7da6
0x00000200004c589f : and al, 0x68 ; call 0x200000e7e75
0x00000200004c589e : and al, 0x68 ; call 0x200000e7e76
0x000002000061d09f : and al, 0x68 ; call 0x2000024d005
0x000002000061d09e : and al, 0x68 ; call 0x2000024d006
0x00000200003fd5e7 : and al, 0x68 ; call r10
0x000002000006fa44 : and al, 0x68 ; call rax
0x0000020000610e6f : and al, 0x68 ; jmp 0x20000610e9d
0x000002000016188b : and al, 0x68 ; mov ecx, 0x10 ; call rax
0x00000200003e5a4f : and al, 0x68 ; mov rbp, rcx ; call 0x200000087f0
0x00000200003e5a4e : and al, 0x68 ; mov rbp, rcx ; call 0x200000087f1
0x00000200001bbd00 : and al, 0x68 ; mov rdx, qword ptr [rsp + 0x48] ; call rax
0x000002000049ea4c : and al, 0x68 ; xor rcx, rsp ; call 0x2000013ac77
0x000002000049ea4b : and al, 0x68 ; xor rcx, rsp ; call 0x2000013ac78
0x000002000051498e : and al, 0x68 ; xor rcx, rsp ; call 0x2000013ac79
0x00000200001bfa5d : and al, 0x6c ; mov rcx, qword ptr [rsp + 0x68] ; call rax
0x000002000005d2af : and al, 0x70 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200004e1f67 : and al, 0x70 ; add dword ptr [rax], eax ; add al, ch ; outsd dx, dword ptr [rsi] ; cld ; ret
0x0000020000582804 : and al, 0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x100f
0x00000200001319d3 : and al, 0x70 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000040276 : and al, 0x70 ; add rsp, 0x50 ; pop r14 ; ret
0x0000020000036295 : and al, 0x70 ; add rsp, 0x50 ; pop rbp ; ret
0x00000200002025f2 : and al, 0x70 ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000054eb9 : and al, 0x70 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200004c14d7 : and al, 0x70 ; add rsp, 0x50 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200001c5dfc : and al, 0x70 ; add rsp, 0x50 ; pop rsi ; ret
0x000002000013c80d : and al, 0x70 ; add rsp, 0x58 ; ret
0x000002000013ba66 : and al, 0x70 ; add rsp, 0x60 ; pop rbp ; ret
0x000002000002d9fe : and al, 0x70 ; add rsp, 0x60 ; pop rdi ; ret
0x000002000044cb8c : and al, 0x70 ; call 0x2000006d765
0x000002000044cb8b : and al, 0x70 ; call 0x2000006d766
0x00000200004bb54a : and al, 0x70 ; call 0x200000e7215
0x00000200005156ea : and al, 0x70 ; call 0x2000013fb95
0x00000200005156e9 : and al, 0x70 ; call 0x2000013fb96
0x000002000051c295 : and al, 0x70 ; call 0x20000148075
0x000002000051c294 : and al, 0x70 ; call 0x20000148076
0x0000020000146270 : and al, 0x70 ; call r11
0x0000020000218a7e : and al, 0x70 ; call r9
0x00000200000eeba8 : and al, 0x70 ; lea r8, qword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x000002000052771b : and al, 0x70 ; mov ebx, eax ; call 0x20000148077
0x000002000052771a : and al, 0x70 ; mov ebx, eax ; call 0x20000148078
0x00000200001373c5 : and al, 0x70 ; mov qword ptr [r11 - 0x28], rax ; call r10
0x0000020000433840 : and al, 0x70 ; mov qword ptr [rdx], rcx ; add rsp, 0x68 ; ret
0x000002000068fc42 : and al, 0x70 ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [r10]
0x00000200003fc303 : and al, 0x70 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200002495b5 : and al, 0x70 ; mov rax, rdx ; jmp 0x200002495c2
0x00000200007a8c9b : and al, 0x70 ; mov rcx, r14 ; call 0x200003d241c
0x000002000000ca8b : and al, 0x70 ; mov rcx, rax ; call 0x20000408d37
0x00000200004a9c59 : and al, 0x70 ; mov rcx, rbp ; call rdi
0x0000020000598cb6 : and al, 0x70 ; sldt word ptr [rax] ; call 0x200004d4f37
0x0000020000218acb : and al, 0x70 ; xor ecx, ecx ; call r9
0x000002000010d31d : and al, 0x70 ; xor edi, edi ; jmp 0x2000010d205
0x000002000010d31c : and al, 0x70 ; xor edi, edi ; jmp 0x2000010d206
0x0000020000104679 : and al, 0x70 ; xor r12d, r12d ; jmp 0x20000104534
0x000002000070e98a : and al, 0x70 ; xor rcx, rsp ; call 0x2000013ac77
0x00000200005104a5 : and al, 0x70 ; xor rcx, rsp ; call 0x2000013ac78
0x00000200005104a4 : and al, 0x70 ; xor rcx, rsp ; call 0x2000013ac79
0x00000200005a2bbd : and al, 0x78 ; add byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000061eea4
0x00000200005a2bbc : and al, 0x78 ; add byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000061eea5
0x00000200005ca667 : and al, 0x78 ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000200004babf7 : and al, 0x78 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0xfb30
0x00000200001f9d0d : and al, 0x78 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000e4ccb : and al, 0x78 ; add dword ptr [rcx - 0x75], ecx ; ret 0x8b4c
0x000002000071ca54 : and al, 0x78 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000d681 : and al, 0x78 ; add rsp, 0x50 ; pop r14 ; ret
0x000002000041f7c1 : and al, 0x78 ; add rsp, 0x50 ; pop r15 ; ret
0x00000200000dea0c : and al, 0x78 ; add rsp, 0x50 ; pop rbp ; ret
0x00000200004a49c5 : and al, 0x78 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200003df7d2 : and al, 0x78 ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000008cdf6 : and al, 0x78 ; add rsp, 0x50 ; pop rdi ; ret
0x000002000011398d : and al, 0x78 ; add rsp, 0x60 ; pop rbp ; ret
0x000002000046fb05 : and al, 0x78 ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000141f61 : and al, 0x78 ; add rsp, 0x60 ; pop rdi ; ret
0x00000200004cf4fb : and al, 0x78 ; call 0x200000bf628
0x000002000004df64 : and al, 0x78 ; call rax
0x00000200004c93a8 : and al, 0x78 ; jmp 0x200004c8f7f
0x00000200004b337b : and al, 0x78 ; mov dword ptr [rdx], ecx ; add rsp, 0x58 ; ret
0x0000020000527887 : and al, 0x78 ; mov ebx, eax ; call 0x20000148077
0x0000020000527886 : and al, 0x78 ; mov ebx, eax ; call 0x20000148078
0x000002000046eab8 : and al, 0x78 ; mov rcx, rdi ; call r12
0x00000200003eea2e : and al, 0x78 ; xor rcx, rsp ; call 0x2000013ac77
0x00000200003eea2d : and al, 0x78 ; xor rcx, rsp ; call 0x2000013ac78
0x0000020000514024 : and al, 0x78 ; xor rcx, rsp ; call 0x2000013ac79
0x00000200001a5f68 : and al, 0x7c ; jmp 0x200000e13a6
0x000002000043975a : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; in al, dx ; in al, dx ; ret 0x8bff
0x00000200005e9733 : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200001f9327 : and al, 0x80 ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200003de16e : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000007073f : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000b3609 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x3b4c
0x00000200001052e9 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000417315 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004012c2 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000115a33 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x20e8
0x0000020000115b7f : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8348
0x000002000043e0e8 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200005ed60f : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret
0x000002000004a557 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x000002000018a147 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x9fe9
0x00000200000483d0 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x0000020000458281 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x00000200005d913b : and al, 0x80 ; add byte ptr [rax], al ; add cl, ch ; wait ; ret
0x000002000008f7b1 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000066a550 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7410
0x0000020000478779 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7510
0x00000200004e3efe : and al, 0x80 ; add dword ptr [rax], eax ; add al, ch ; clc ; ret
0x00000200004e3faa : and al, 0x80 ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000200004e4061 : and al, 0x80 ; add dword ptr [rax], eax ; add al, ch ; xchg eax, ebp ; ret 0xffc0
0x00000200004826f9 : and al, 0x80 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4520
0x0000020000034c52 : and al, 0x82 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x894c
0x000002000023e068 : and al, 0x83 ; ret 0x48f8
0x0000020000002761 : and al, 0x84 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000006c104 : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; ret 5
0x00000200004a4c90 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000699200 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000418b13 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000047c674 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1a72
0x0000020000477e9d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x8f0f
0x00000200005d6ae5 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 0xc883
0x00000200004b549c : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx + 0x3c], cl ; ret 0x8b44
0x000002000018a157 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xa0e9
0x000002000042e9aa : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret 0x4488
0x0000020000553dc8 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4428
0x00000200001d298a : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0xa483
0x0000020000230ad8 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x6349
0x00000200005d8d09 : and al, 0x88 ; add byte ptr [rax], al ; add cl, ch ; out dx, al ; ret 0xffee
0x00000200004e8d8d : and al, 0x88 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000047878e : and al, 0x88 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000020000018657 : and al, 0x88 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200001529c7 : and al, 0x8b ; add al, 0x24 ; add rsp, 8 ; ret
0x00000200001e5126 : and al, 0x8b ; add al, 0xb ; ret
0x000002000060cdc0 : and al, 0x8b ; cmp dword ptr [rax + 5], 0 ; add bh, bh ; ret 0x5589
0x00000200000033df : and al, 0x8b ; ret
0x00000200005f2012 : and al, 0x8b ; ret 0x341
0x00000200006c6607 : and al, 0x8b ; ret 0x3844
0x000002000049eb2e : and al, 0x8b ; ret 0x8348
0x000002000059e260 : and al, 0x8b ; ret 0x8d48
0x00000200006aebcb : and al, 0x8b ; ret 0x8d4c
0x0000020000516119 : and al, 0x8b ; ret 0xe8c1
0x000002000049e284 : and al, 0x8d ; push rax ; jmp qword ptr [rbx]
0x00000200004c4915 : and al, 0x90 ; add byte ptr [rax], al ; add al, ch ; add ebx, ecx ; ret 0xe9ff
0x00000200004c4e2e : and al, 0x90 ; add byte ptr [rax], al ; add al, ch ; call 0x200344c1106
0x0000020000498d39 : and al, 0x90 ; add byte ptr [rax], al ; add al, ch ; pop rcx ; ret
0x0000020000052d83 : and al, 0x90 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000020000105507 : and al, 0x90 ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200006e02f2 : and al, 0x90 ; add byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x000002000009d0fb : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000018918b : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200000dc7cc : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000017703e : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200000b84f0 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x4975
0x00000200000b86f0 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x000002000066022c : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xce75
0x00000200000e0fb3 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x000002000018a167 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xa1e9
0x000002000016fdbf : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200005d914c : and al, 0x90 ; add byte ptr [rax], al ; add cl, ch ; scasd eax, dword ptr [rdi] ; ret
0x00000200005d9112 : and al, 0x90 ; add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; ret
0x0000020000065ae7 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000413b52 : and al, 0x94 ; add byte ptr [rax], al ; add bh, dh ; ret
0x00000200005946ed : and al, 0x94 ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffc
0x0000020000095d25 : and al, 0x98 ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200000972bd : and al, 0x98 ; add al, byte ptr [rax] ; add cl, ch ; ret 0xfffe
0x00000200000e7183 : and al, 0x98 ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200003e3164 : and al, 0x98 ; add byte ptr [rax], al ; add al, ch ; ret 0xf1d
0x00000200006ca237 : and al, 0x98 ; add byte ptr [rax], al ; add al, ch ; ret 0xffff
0x00000200003e8058 : and al, 0x98 ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200003e7e94 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x2a73
0x00000200004e3bc8 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x00000200001a6065 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000200004ff66f : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000418c4b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200006b4c08 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000200003c64b7 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x00000200000b43a9 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], cl ; ret
0x000002000018a177 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xa2e9
0x00000200001aeafc : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200005e20f1 : and al, 0x98 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000066a503 : and al, 0x98 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0x000002000009ce9c : and al, 0x98 ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200004cbf11 : and al, 0x98 ; add eax, dword ptr [rax] ; add al, ch ; in eax, 0x43 ; ret 0x4cff
0x00000200004cca6e : and al, 0x98 ; add eax, dword ptr [rax] ; add al, ch ; mov byte ptr [rax], bh ; ret 0x48ff
0x00000200002395a4 : and al, 0x9a ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000663f11 : and al, 0x9c ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffe
0x000002000015c5ca : and al, 0xa ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000032f81 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x3348
0x000002000008e41d : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret
0x00000200004b2a6a : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000079ee1e : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x348
0x00000200000b3189 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000004d223 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000018917f : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 4], cl ; ret 0x8b48
0x00000200003f57da : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b44
0x00000200001025fc : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b44
0x00000200004c31cd : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x000002000046554f : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200004656fb : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x98e8
0x00000200006e79a8 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret 0xf48
0x0000020000429171 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x4489
0x00000200000be1f1 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8b4c
0x0000020000511861 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000534377 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200006e7947 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000028a00 : and al, 0xa0 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200005d8cfc : and al, 0xa0 ; add byte ptr [rax], al ; add cl, ch ; sti ; ret 0xffee
0x00000200000be730 : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200004224f2 : and al, 0xa6 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; test dword ptr [rbx], edi ; ret
0x000002000016ba79 : and al, 0xa7 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x000002000010f2be : and al, 0xa8 ; add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x000002000003a0fb : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x000002000003a126 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000003a143 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x000002000003a160 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000002000003a180 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x000002000003a1a0 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x000002000064500d : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000068a979 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8949
0x000002000004ee4b : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000482a7b : and al, 0xa8 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200004b255a : and al, 0xa8 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000002000072bb6f : and al, 0xb0 ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200003fdff8 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200004c4b7e : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000219bb7 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x0000020000096022 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xc22b
0x0000020000184891 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret
0x0000020000432f70 : and al, 0xb0 ; add dword ptr [rax], eax ; add al, ch ; ret 0x1367
0x00000200005c977d : and al, 0xb0 ; jmp 0x200005c9785
0x000002000012434a : and al, 0xb2 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x000002000068cd6d : and al, 0xb8 ; add byte ptr [rax], al ; add bh, bh ; ret 0xbfe8
0x0000020000196017 : and al, 0xb8 ; add byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rcx + 0x23] ; ret
0x00000200004b8398 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x000002000016f63a : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000002000007e666 : and al, 0xb8 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000005d9fe : and al, 0xbc ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x830f
0x000002000072695b : and al, 0xbd ; dec dword ptr [rax - 0x77] ; pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x000002000072698f : and al, 0xbd ; inc dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000157b7b : and al, 0xc ; mov rax, qword ptr [rsp + 8] ; ret
0x000002000046bf54 : and al, 0xc0 ; add byte ptr [rax], al ; add al, ch ; shl bh, cl ; ret 0x48ff
0x000002000054481d : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004cc4fb : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xb0
0x00000200001f58ce : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x00000200000a78aa : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret 0x7989
0x000002000049ad84 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000002000056997b : and al, 0xc0 ; mov byte ptr [r8], cl ; mov byte ptr [r9], al ; ret
0x00000200000f736b : and al, 0xc2 ; mov eax, 0xc000025f ; ret
0x000002000041b603 : and al, 0xc3 ; add byte ptr [r9 + 3], cl ; int 0xff
0x00000200004a91e4 : and al, 0xc3 ; lea rax, qword ptr [rcx + 0x38] ; ret
0x0000020000176bad : and al, 0xc5 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x00000200003d5d30 : and al, 0xc7 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000089c44 : and al, 0xc8 ; add byte ptr [rax], al ; add al, ch ; ret 0x543
0x00000200004b2804 : and al, 0xc8 ; add byte ptr [rax], al ; add al, ch ; ret 0xffc9
0x00000200000ad0d0 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200000c0793 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004d5196 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000424698 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x3948
0x0000020000594bbb : and al, 0xcc ; add dword ptr [rax], eax ; add bh, dh ; ret 0xfff8
0x0000020000495057 : and al, 0xcc ; dec dword ptr [rax - 0x75] ; ret
0x0000020000017931 : and al, 0xd0 ; add byte ptr [rax], al ; add al, ch ; call qword ptr [r11]
0x0000020000537714 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200004d514d : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rcx]
0x0000020000095ead : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x000002000069438f : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200004b2df9 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x41fe
0x000002000068b762 : and al, 0xd0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000020000147444 : and al, 0xd0 ; mov qword ptr [rcx], rax ; ret
0x0000020000790c4c : and al, 0xd2 ; dec dword ptr [rbx + rcx*4 + 0xd] ; ret 0xfb7e
0x00000200000028fe : and al, 0xd3 ; mov eax, 0xc000025f ; ret
0x00000200005c0d96 : and al, 0xd4 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x0000020000064f84 : and al, 0xd8 ; add byte ptr [rax], al ; add al, ch ; ret 0x879
0x000002000068d475 : and al, 0xd8 ; add byte ptr [rax], al ; add bh, bh ; ret 0xb7e8
0x000002000053772c : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x000002000017e118 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000070375 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xf49
0x0000020000002a5d : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x00000200000591a8 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret 0
0x00000200005849ae : and al, 0xd8 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000002000004ea3f : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x0000020000537744 : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200002393c2 : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x00000200002392aa : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x0000020000247d05 : and al, 0xe0 ; add eax, 0x8b4d0000 ; ret
0x000002000062ead8 : and al, 0xe5 ; sar edi, -0x75 ; ret
0x00000200004c5cba : and al, 0xe8 ; add byte ptr [rax], al ; add al, ch ; cmp al, 0xa6 ; ret 0xbaff
0x00000200000b99af : and al, 0xe8 ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffe
0x0000020000655cfd : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x772
0x0000020000537772 : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000125e28 : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8b48
0x00000200005d889b : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b41
0x000002000023062f : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b41
0x00000200005c3014 : and al, 0xe9 ; ret
0x000002000049eb27 : and al, 0xeb ; add eax, 0x489d08b ; and al, 0x8b ; ret 0x8348
0x0000020000164653 : and al, 0xeb ; dec dword ptr [rcx - 0x7d] ; ret 0x4c08
0x0000020000551b9a : and al, 0xeb ; ret
0x000002000052b6e8 : and al, 0xeb ; ret 0x48cc
0x0000020000461feb : and al, 0xec ; dec dword ptr [rax - 0x3f] ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200004500db : and al, 0xee ; add bh, bh ; ret
0x0000020000117cf6 : and al, 0xf ; mov bh, 0x47 ; sbb bh, bh ; ret 0xd03b
0x000002000007c715 : and al, 0xf ; test dword ptr [rsi], ebp ; in eax, 0x10 ; add byte ptr [rcx - 0x75], al ; ret
0x000002000004867e : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x4466
0x00000200004d6091 : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200000ff984 : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; fdivr st(7) ; ret 0x8d4c
0x00000200007a4cb1 : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret 0x850f
0x000002000052b482 : and al, 0xf0 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200001512e0 : and al, 0xf0 ; pop rbx ; ret
0x0000020000151234 : and al, 0xf0 ; ret
0x00000200001a275d : and al, 0xf3 ; inc dword ptr [rcx - 0xa] ; rol byte ptr [rdx], 0xf ; xchg eax, ebp ; ret 0xf640
0x00000200000aab0c : and al, 0xf6 ; ret
0x00000200007a12b7 : and al, 0xf6 ; ret 0x4510
0x000002000060c0d2 : and al, 0xf6 ; ret 0x7402
0x00000200000dda48 : and al, 0xf6 ; ret 0x7420
0x00000200003e681c : and al, 0xf8 ; add byte ptr [rax], al ; add al, ch ; ret 0xc1fa
0x00000200004b2746 : and al, 0xf8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001f93bf : and al, 0xf9 ; or al, 1 ; mov byte ptr [rdx + 0x22], al ; ret
0x00000200000a1649 : and al, 0xfb ; mov byte ptr [rcx + 0x1b], al ; ret
0x00000200005ac3af : and al, 0xfc ; inc dword ptr [rbp - 0x75] ; ret 0x8d48
0x00000200001b49e8 : and al, 0xff ; ret 0x894c
0x00000200005028fd : and al, 0xff ; ret 0xc2eb
0x00000200001d87c9 : and al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004003a4 : and al, 1 ; jmp 0x200004001bb
0x00000200006d370a : and al, 1 ; mov al, r8b ; ret
0x00000200004b33aa : and al, 1 ; mov byte ptr [r8], al ; xor eax, eax ; ret
0x000002000002c41d : and al, 1 ; ret
0x00000200001696d7 : and al, 1 ; xor byte ptr [rcx + 0x22], al ; ret
0x000002000002c7ba : and al, 1 ; xor byte ptr [rdx + 0x22], al ; ret
0x000002000016e4e4 : and al, 3 ; add byte ptr [rax], al ; ret
0x00000200004d0df5 : and al, 4 ; call 0x200000faca5
0x00000200004d0df4 : and al, 4 ; call 0x200000faca6
0x000002000012e630 : and al, 4 ; stc ; dec dword ptr [rax - 0x75] ; ret
0x0000020000052842 : and al, 7 ; cmp al, 2 ; je 0x20000052853 ; xor eax, eax ; ret
0x00000200000b8942 : and al, 7 ; jne 0x200000b8955 ; mov eax, 1 ; ret
0x000002000008344e : and al, 8 ; add byte ptr [rax + 3], cl ; retf ; jmp rcx
0x00000200007a4f66 : and al, 8 ; add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ret 0x8489
0x000002000007e896 : and al, 8 ; cmp eax, r8d ; jb 0x2000007e887 ; ret
0x000002000007e895 : and al, 8 ; cmp eax, r8d ; jb 0x2000007e888 ; ret
0x00000200003e44e2 : and al, 8 ; imul eax, ecx ; xor eax, r10d ; ret
0x00000200006e4d9a : and al, 8 ; jae 0x200006e4da9 ; or eax, 0xffffffff ; ret
0x00000200006e4d99 : and al, 8 ; jae 0x200006e4daa ; or eax, 0xffffffff ; ret
0x000002000013fb72 : and al, 8 ; ldmxcsr dword ptr [rsp + 8] ; ret
0x000002000008825c : and al, 8 ; mov al, dl ; ret
0x00000200001b81f1 : and al, 8 ; mov al, r10b ; ret
0x000002000021695a : and al, 8 ; mov al, r8b ; ret
0x00000200007a30c0 : and al, 8 ; mov eax, 1 ; ret
0x000002000040147c : and al, 8 ; mov eax, ecx ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200003ff811 : and al, 8 ; mov eax, edx ; ret
0x0000020000121626 : and al, 8 ; mov eax, r10d ; ret
0x0000020000005c57 : and al, 8 ; mov eax, r11d ; ret
0x00000200001b3a61 : and al, 8 ; mov eax, r8d ; ret
0x000002000000a55e : and al, 8 ; mov eax, r9d ; ret
0x00000200001b7419 : and al, 8 ; mov qword ptr [r8], r11 ; ret
0x0000020000039118 : and al, 8 ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000797372 : and al, 8 ; mov rax, r10 ; ret
0x000002000012a492 : and al, 8 ; mov rax, r11 ; ret
0x000002000052a04b : and al, 8 ; mov rax, r8 ; ret
0x000002000013d31a : and al, 8 ; mov rax, r9 ; ret
0x00000200000092c5 : and al, 8 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000000bcfa : and al, 8 ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000398c3 : and al, 8 ; mov rsi, qword ptr [rsp + 0x10] ; ret
0x000002000023635f : and al, 8 ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x00000200006863aa : and al, 8 ; movzx eax, r9w ; ret
0x00000200000c469f : and al, 8 ; or rax, rdx ; mov qword ptr [r9 + 8], rax ; ret
0x000002000001e0bb : and al, 8 ; ret
0x00000200003e4580 : and al, 8 ; ror r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003e4b80 : and al, 8 ; ror r9d, cl ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200006e4da7 : and al, 8 ; seta cl ; mov eax, ecx ; ret
0x000002000050a2f7 : and al, 8 ; test r8d, r8d ; js 0x2000050a30a ; xor eax, eax ; ret
0x00000200007a8a70 : and al, 9 ; sar bh, 0x85 ; ror byte ptr [rdi], 0x85 ; ret
0x000002000001570c : and al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000090ac5 : and al, al ; add rsp, 0x28 ; ret
0x000002000003f168 : and al, al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001d3050 : and al, al ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000711c14 : and al, al ; cmp al, 1 ; ja 0x20000711c4f ; call 0x2000020dec4
0x000002000023a07e : and al, al ; cmp al, 2 ; jae 0x2000023a08f ; xor eax, eax ; ret
0x0000020000176294 : and al, al ; jmp 0x20000112584
0x00000200001d409a : and al, al ; mov eax, r11d ; add rsp, 0x28 ; ret
0x00000200000dd9a2 : and al, al ; movzx ecx, cl ; mov cr8, rcx ; ret
0x000002000003b7a4 : and al, al ; ret
0x00000200001f1f46 : and al, al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000004b329 : and al, al ; xor eax, eax ; jmp 0x2000004b2f7
0x000002000002913d : and al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006eedb1 : and al, bl ; jmp qword ptr [rcx]
0x000002000003fc09 : and al, bl ; mov cr3, rax ; ret
0x00000200002000c8 : and al, bpl ; push rcx ; ret
0x000002000069abb6 : and al, bpl ; ret
0x00000200001e3897 : and al, byte ptr [rax - 0x80] ; call qword ptr [rcx]
0x0000020000684cfa : and al, byte ptr [rax] ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000062763d : and al, byte ptr [rax] ; add al, al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000056799d : and al, byte ptr [rax] ; add al, al ; add rsp, 0x28 ; ret
0x0000020000594520 : and al, byte ptr [rax] ; add al, al ; jmp 0x20000413a9a
0x00000200004b18f7 : and al, byte ptr [rax] ; add al, al ; jmp 0x200004b18c4
0x000002000001fa19 : and al, byte ptr [rax] ; add al, al ; ret
0x0000020000726ae6 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013fa77 : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200000fd629 : and al, byte ptr [rax] ; add ecx, r8d ; movzx eax, word ptr [rax + rcx*2] ; ret
0x0000020000222c50 : and al, byte ptr [rax] ; add r8, rcx ; jmp r8
0x000002000003c38e : and al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000035c7a : and al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200003fa343 : and al, byte ptr [rax] ; and dword ptr [r8], 0 ; ret
0x000002000017b5b5 : and al, byte ptr [rax] ; call rax
0x0000020000547ad5 : and al, byte ptr [rax] ; mov eax, 0x8000001a ; ret
0x000002000020fee9 : and al, byte ptr [rax] ; mov eax, 0xc0000001 ; ret
0x00000200003d7fbf : and al, byte ptr [rax] ; mov eax, 0xc00000bb ; ret
0x000002000048739a : and al, byte ptr [rax] ; mov rax, rdx ; jmp 0x2000048733c
0x00000200000f8b03 : and al, byte ptr [rax] ; mov rbx, rdx ; call 0x20000074d17
0x0000020000044d58 : and al, byte ptr [rax] ; movups xmmword ptr [rcx + 0x70], xmm1 ; ret
0x00000200000f89b9 : and al, byte ptr [rax] ; seta dl ; mov al, dl ; ret
0x00000200000fd10d : and al, byte ptr [rax] ; shl rax, 0xc ; ret
0x0000020000102218 : and al, byte ptr [rax] ; test rdx, rdx ; je 0x20000102228 ; call rdx
0x000002000021e853 : and al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000041100e : and al, byte ptr [rax] ; xor eax, eax ; ret
0x000002000008da45 : and al, byte ptr [rbp - 0x75] ; push rax ; xor byte ptr [rcx - 0x75], al ; ret 0xc025
0x00000200001a59cf : and al, byte ptr [rbp - 0x75] ; ret
0x00000200006647eb : and al, byte ptr [rbx + 0x3740af8] ; xor eax, eax ; ret
0x0000020000245011 : and al, byte ptr [rbx + 0x3b41dfc0] ; ret
0x0000020000244d92 : and al, byte ptr [rbx + 0x3b41dfc0] ; ret 0x677
0x00000200006ce1e3 : and al, byte ptr [rcx - 0x75] ; add al, 3 ; ret 0x4589
0x00000200004e4e0f : and al, byte ptr [rcx - 0x75] ; ret 0x8b48
0x00000200000977be : and al, byte ptr [rcx - 0xa] ; ret
0x0000020000401463 : and al, byte ptr [rcx - 1] ; ret 0x8349
0x00000200007bac09 : and al, byte ptr [rcx] ; add byte ptr [rbx], bh ; ret 0x870f
0x00000200006230d2 : and al, byte ptr [rdi + rcx - 0x49] ; ret 0x8d48
0x00000200007140c0 : and al, ch ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200007d147a : and al, ch ; add al, bl ; ret 0x3dff
0x000002000003d0f9 : and al, ch ; add byte ptr [r8], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001eb4cb : and al, ch ; call qword ptr [rcx]
0x00000200006517a1 : and al, ch ; cdq ; ret 0xffbf
0x000002000069c1b5 : and al, ch ; cmc ; ret
0x00000200007cd240 : and al, ch ; cmp bl, byte ptr [rdx] ; ret
0x0000020000694faf : and al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; add bh, bh ; ret
0x00000200005fadbb : and al, ch ; dec dword ptr [rax - 0x73] ; adc r8b, bpl ; push rcx ; ret 0xffe6
0x00000200006a24d7 : and al, ch ; dec dword ptr [rax - 0x7d] ; ret
0x000002000068b6f2 : and al, ch ; hlt ; ret
0x0000020000509347 : and al, ch ; in al, dx ; ret
0x0000020000710f22 : and al, ch ; insb byte ptr [rdi], dx ; ret
0x0000020000678245 : and al, ch ; insd dword ptr [rdi], dx ; ret 0xffb8
0x000002000070e749 : and al, ch ; jmp 0x2000070e6e7
0x00000200005221ef : and al, ch ; jnp 0x20000522254 ; ret 0x8bff
0x00000200003fb9d9 : and al, ch ; jns 0x200003fb9bb ; sar bh, 0x8b ; ret
0x00000200005222f2 : and al, ch ; js 0x20000522356 ; ret 0x85ff
0x00000200001e6ae8 : and al, ch ; loop 0x200001e6b4f ; call 0x1ffc3a9b3f8
0x00000200005091a8 : and al, ch ; loop 0x2000050919d ; ret
0x000002000055d9f3 : and al, ch ; mov bh, 0x93 ; inc dword ptr [rdi + rcx - 0x49] ; ret
0x000002000079bd19 : and al, ch ; mov cl, 0x57 ; ret
0x00000200003fc8dc : and al, ch ; mov ds, edx ; sar bh, 0x8a ; ret
0x0000020000509b7f : and al, ch ; or esp, esp ; ret
0x00000200005a2447 : and al, ch ; pop rbx ; or cl, byte ptr [rdi] ; add dh, dh ; ret
0x00000200003fcdf7 : and al, ch ; push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200002000c9 : and al, ch ; push rcx ; ret
0x000002000008d738 : and al, ch ; push rdx ; ret 5
0x000002000015f34e : and al, ch ; pushfq ; ret
0x00000200003cd45a : and al, ch ; rcl cl, 1 ; ret
0x00000200000ac387 : and al, ch ; ret
0x000002000011db9c : and al, ch ; ret 0
0x00000200005b5444 : and al, ch ; ret 0x11e9
0x000002000003efc4 : and al, ch ; ret 0x4358
0x00000200007d02c0 : and al, ch ; ret 0x8a34
0x00000200007a5b68 : and al, ch ; ret 0x9a26
0x0000020000717078 : and al, ch ; ret 0xa404
0x0000020000673d58 : and al, ch ; ret 0xa4a3
0x000002000048ac58 : and al, ch ; ret 0xc555
0x0000020000638314 : and al, ch ; ret 0xcc
0x00000200006d8828 : and al, ch ; ret 0xd186
0x0000020000450478 : and al, ch ; ret 0xdfd5
0x00000200006d6a48 : and al, ch ; ret 0xe486
0x00000200001cec58 : and al, ch ; ret 0xeef4
0x000002000067c960 : and al, ch ; ret 0xffde
0x00000200005badae : and al, ch ; ret 0xffea
0x0000020000402142 : and al, ch ; ror byte ptr [rsi + 6], 1 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000684024 : and al, ch ; salc ; ret 0xffa6
0x00000200005a2485 : and al, ch ; sbb eax, 0xf6000f0a ; ret
0x0000020000515bb9 : and al, ch ; shl dword ptr [rbx], 1 ; ret
0x000002000079bccd : and al, ch ; std ; push rdi ; ret
0x00000200007ba84b : and al, ch ; sti ; ret
0x0000020000508f7f : and al, ch ; stosd dword ptr [rdi], eax ; stc ; ret
0x00000200006e6d03 : and al, ch ; xchg dword ptr [rsi - 0x5a], edx ; push rsi ; ret
0x000002000079bcf3 : and al, ch ; xlatb ; push rdi ; ret
0x00000200005e6b17 : and al, ch ; xlatb ; ret
0x0000020000589be4 : and al, ch ; xor sp, di ; dec dword ptr [rax - 0x7d] ; ret
0x000002000000914f : and al, cl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007a3c2a : and al, cl ; call 0x200753c773c
0x00000200006eee5f : and al, cl ; call qword ptr [rdx]
0x0000020000209efd : and al, cl ; mov al, dl ; ret
0x000002000011c4e9 : and al, cl ; mov byte ptr [rbx], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000043423 : and al, cl ; ret
0x00000200001d8e19 : and al, dl ; jmp 0x200001d8e32
0x000002000000bfca : and al, dl ; mov byte ptr [r9], al ; xor eax, eax ; ret
0x000002000040325b : and al, dl ; mov byte ptr [rdx], al ; jne 0x2000040326c ; xor eax, eax ; ret
0x000002000003d3f1 : and al, dl ; or byte ptr [rcx + 9], 1 ; mov byte ptr [rcx + 8], al ; ret
0x000002000000bfc9 : and al, r10b ; mov byte ptr [r9], al ; xor eax, eax ; ret
0x000002000040325a : and al, r10b ; mov byte ptr [rdx], al ; jne 0x2000040326d ; xor eax, eax ; ret
0x00000200007a3c29 : and al, r9b ; call 0x200753c773d
0x000002000044841a : and bh, al ; ret 0xc6ff
0x00000200000e9abb : and bh, bh ; ret
0x00000200001b137e : and bh, bh ; ret 0x3b41
0x00000200003e90b4 : and bh, bh ; ret 0x513b
0x00000200001b1304 : and bh, bh ; ret 0x533b
0x000002000066fbf1 : and bh, bh ; ret 0x553b
0x00000200006e3e29 : and bh, bh ; ret 0x8349
0x00000200007c52c2 : and bh, bh ; ret 0x8948
0x00000200001f115b : and bh, bh ; ret 0x9489
0x000002000060fdf0 : and bh, bh ; sete al ; ret
0x0000020000563733 : and bh, dh ; ret
0x000002000041100b : and bl, al ; and dword ptr [rdx], 0 ; xor eax, eax ; ret
0x00000200004a91fc : and bl, al ; lea rax, qword ptr [rcx + 0x2c] ; ret
0x00000200007b4dfa : and bl, al ; mov ah, 0xff ; xor dh, byte ptr [rdx] ; ret
0x00000200001b1567 : and bl, al ; or ebp, 0x28 ; jmp 0x200001b159b
0x000002000003fc0c : and bl, al ; ret
0x000002000044822c : and bl, al ; xor eax, eax ; ret
0x000002000063e32c : and bl, bl ; ret 0x48ff
0x0000020000131b97 : and bl, byte ptr [rdi] ; add byte ptr [rax - 9], cl ; ret 0xfff
0x000002000000bfd5 : and bl, ch ; call 0x2000001189c
0x000002000044576b : and bl, ch ; enter 0x58b8, 0 ; add al, al ; ret
0x000002000002e639 : and bl, ch ; rol byte ptr [rcx - 0x75], 1 ; ret 0xe8d1
0x00000200001060ec : and bl, ch ; ror byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000020000478ac0 : and bl, ch ; xor ecx, dword ptr [rax - 0x75] ; ret 0xaceb
0x00000200004b7806 : and bpl, byte ptr [rbx] ; ret
0x000002000021198e : and byte ptr [r10 + 3], sil ; xor al, al ; ret
0x00000200003d5562 : and byte ptr [r11], bpl ; ret 0xf83b
0x00000200003e58db : and byte ptr [r11], r12b ; ret 0xe0c1
0x0000020000503fb0 : and byte ptr [r11], r15b ; ret
0x000002000015d2dc : and byte ptr [r11], r9b ; add rsp, 0x20 ; pop rbp ; ret
0x000002000015bc8f : and byte ptr [r11], r9b ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200001ecef4 : and byte ptr [r13 + 0x3b], al ; ret 0x675
0x00000200001f1933 : and byte ptr [r13 + 0xb], al ; ret
0x00000200005b51cc : and byte ptr [r13 - 0x75], r8b ; ret 0x8948
0x00000200001ab460 : and byte ptr [r13 - 0x75], r9b ; ret
0x00000200003e58d0 : and byte ptr [r14 + 0x23], r12b ; ret 0x3166
0x0000020000679771 : and byte ptr [r14 - 1], spl ; ret 0xb70f
0x00000200000bba69 : and byte ptr [r15], cl ; ret 0x8841
0x00000200006264eb : and byte ptr [r15], cl ; xchg eax, ebp ; ret 0x3d80
0x00000200003e58d7 : and byte ptr [r15], r9b ; mov bh, 0x47 ; and byte ptr [rbx], ah ; ret 0xe0c1
0x00000200000c1ec7 : and byte ptr [r8 + 0x2b], r9b ; ret
0x000002000014e9a6 : and byte ptr [r8 + 0xf], cl ; ret
0x0000020000016d49 : and byte ptr [r8 - 0x75], cl ; push rbx ; sbb byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000524af9 : and byte ptr [r8 - 0x75], cl ; ret
0x0000020000441857 : and byte ptr [r8 - 0x75], cl ; ret 0x8b49
0x00000200001dbeef : and byte ptr [r8 - 0x75], cl ; xlatb ; mov rcx, rbp ; call rax
0x00000200000c1534 : and byte ptr [r8 - 0x75], r9b ; ret
0x00000200007adf90 : and byte ptr [r8 - 0x77], cl ; or byte ptr [r8 - 0x7d], cl ; ret
0x0000020000565b00 : and byte ptr [r8 - 0x77], cl ; or r15b, dil ; ret 0x8948
0x000002000004ae7c : and byte ptr [r8 - 0x77], cl ; sbb r15b, sil ; ret 0x200
0x00000200000eeefe : and byte ptr [r8 - 0x7d], cl ; clc ; add dword ptr [rbp + 1], esi ; ret
0x000002000008e015 : and byte ptr [r8 - 0x7d], cl ; rcl dword ptr [rax - 0x18], -0x30 ; ret 3
0x00000200006b034e : and byte ptr [r8 - 0x7d], cl ; ret
0x000002000000f71e : and byte ptr [r8], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e8125 : and byte ptr [r9 + 0x23], cl ; ret
0x00000200000e44c6 : and byte ptr [r9 + 0xf], r9b ; scasd eax, dword ptr [rdi] ; ret 0x8348
0x00000200007b46e1 : and byte ptr [r9 + 3], cl ; ret 0x3b48
0x00000200001dea1d : and byte ptr [r9 - 0x3f], cl ; cli ; add eax, dword ptr [rbp + 0x2b] ; ret 0x3b4c
0x0000020000522492 : and byte ptr [r9 - 0x73], al ; pop r10 ; call 0x20000148559
0x000002000063bc0a : and byte ptr [r9 - 0x75], al ; ret
0x0000020000432b9e : and byte ptr [r9 - 0x75], al ; ror byte ptr [rdi], 0x45 ; ret 0x394c
0x00000200004154e5 : and byte ptr [r9 - 0x75], cl ; ret
0x00000200004d9e50 : and byte ptr [r9 - 0x75], r9b ; ret 0x8948
0x00000200004c4693 : and byte ptr [r9 - 0x75], r9b ; ret 0xc148
0x000002000069d12e : and byte ptr [r9 - 0xa], r8b ; ret 0x7401
0x000002000016efe9 : and byte ptr [rax + 0x16], 0 ; add rcx, r8 ; jmp rcx
0x000002000007210c : and byte ptr [rax + 0x23], cl ; ret
0x0000020000164630 : and byte ptr [rax + 0x23], cl ; ret 0x3b48
0x00000200000c1ec8 : and byte ptr [rax + 0x2b], cl ; ret
0x00000200001faa72 : and byte ptr [rax + 0x33], cl ; ret
0x00000200004148c7 : and byte ptr [rax + 0x39], cl ; or dword ptr [rbp + 1], esi ; ret
0x00000200004994dc : and byte ptr [rax + 0x3b], cl ; ret
0x0000020000012cb7 : and byte ptr [rax + 0x3b], cl ; ret 0x2674
0x00000200000527d4 : and byte ptr [rax + 0x3b], cl ; ret 0x460f
0x00000200000728d5 : and byte ptr [rax + 0x3b], cl ; ret 0x6275
0x00000200000a98fd : and byte ptr [rax + 0x3b], cl ; ret 0x850f
0x0000020000050d2b : and byte ptr [rax + 0x3b], cl ; ret 0xa74
0x000002000068c877 : and byte ptr [rax + 0x63], cl ; ret 0x8d48
0x0000020000614dca : and byte ptr [rax + 0x63], cl ; ret 0xff41
0x00000200001c32f3 : and byte ptr [rax + 0x69], cl ; ret 0x201
0x00000200003d7949 : and byte ptr [rax + 0xb], cl ; ret 0x10a8
0x00000200007b3aba : and byte ptr [rax + 0xb], cl ; ret 0x188
0x0000020000229dd8 : and byte ptr [rax + 0xb], cl ; ret 0x1c7
0x000002000078a0ff : and byte ptr [rax + 0xb], cl ; ret 0x2348
0x00000200001c09fd : and byte ptr [rax + 0xb], cl ; ret 0x2a8
0x0000020000115c99 : and byte ptr [rax + 0xb], cl ; ret 0x2b48
0x000002000012fd1e : and byte ptr [rax + 0xb], cl ; ret 0x2b49
0x00000200004ba690 : and byte ptr [rax + 0xb], cl ; ret 0x3344
0x00000200003c9e27 : and byte ptr [rax + 0xb], cl ; ret 0x3840
0x00000200005ba12b : and byte ptr [rax + 0xb], cl ; ret 0x3843
0x000002000001df38 : and byte ptr [rax + 0xb], cl ; ret 0x3945
0x00000200001561a7 : and byte ptr [rax + 0xb], cl ; ret 0x3948
0x000002000015385a : and byte ptr [rax + 0xb], cl ; ret 0x3949
0x00000200004c535f : and byte ptr [rax + 0xb], cl ; ret 0x3b48
0x00000200003ca7e6 : and byte ptr [rax + 0xb], cl ; ret 0x3d83
0x00000200003ce0db : and byte ptr [rax + 0xb], cl ; ret 0x43f7
0x0000020000224c6a : and byte ptr [rax + 0xb], cl ; ret 0x45c6
0x00000200001dbd52 : and byte ptr [rax + 0xb], cl ; ret 0x48c3
0x0000020000711975 : and byte ptr [rax + 0xb], cl ; ret 0x48f3
0x00000200000656a6 : and byte ptr [rax + 0xb], cl ; ret 0x558b
0x00000200001c8494 : and byte ptr [rax + 0xb], cl ; ret 0x589
0x00000200007a1c21 : and byte ptr [rax + 0xb], cl ; ret 0x6348
0x00000200001d339e : and byte ptr [rax + 0xb], cl ; ret 0x8025
0x0000020000229df8 : and byte ptr [rax + 0xb], cl ; ret 0x81f0
0x0000020000221fd9 : and byte ptr [rax + 0xb], cl ; ret 0x8348
0x00000200007a3f86 : and byte ptr [rax + 0xb], cl ; ret 0x83f0
0x00000200007ae0d5 : and byte ptr [rax + 0xb], cl ; ret 0x8440
0x00000200003c9a06 : and byte ptr [rax + 0xb], cl ; ret 0x8844
0x0000020000145687 : and byte ptr [rax + 0xb], cl ; ret 0x8944
0x0000020000058598 : and byte ptr [rax + 0xb], cl ; ret 0x8948
0x000002000006525e : and byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200000651d8 : and byte ptr [rax + 0xb], cl ; ret 0x894a
0x00000200002488da : and byte ptr [rax + 0xb], cl ; ret 0x894c
0x000002000001debb : and byte ptr [rax + 0xb], cl ; ret 0x894d
0x00000200004cc125 : and byte ptr [rax + 0xb], cl ; ret 0x8b41
0x0000020000058601 : and byte ptr [rax + 0xb], cl ; ret 0x8b48
0x0000020000064113 : and byte ptr [rax + 0xb], cl ; ret 0x8b49
0x000002000023c146 : and byte ptr [rax + 0xb], cl ; ret 0x8b4b
0x000002000000f6ed : and byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x00000200003c7c7a : and byte ptr [rax + 0xb], cl ; ret 0x8d48
0x00000200003c9e8f : and byte ptr [rax + 0xb], cl ; ret 0x8d49
0x000002000014c88d : and byte ptr [rax + 0xb], cl ; ret 0x918b
0x000002000012df24 : and byte ptr [rax + 0xb], cl ; ret 0x9f0
0x00000200003d7770 : and byte ptr [rax + 0xb], cl ; ret 0xb48
0x0000020000034d91 : and byte ptr [rax + 0xb], cl ; ret 0xc148
0x0000020000150ea1 : and byte ptr [rax + 0xb], cl ; ret 0xc35f
0x00000200003d1e2c : and byte ptr [rax + 0xb], cl ; ret 0xc88a
0x00000200001d76db : and byte ptr [rax + 0xb], cl ; ret 0xc88b
0x00000200000d0c5c : and byte ptr [rax + 0xb], cl ; ret 0xc903
0x0000020000065a01 : and byte ptr [rax + 0xb], cl ; ret 0xccc3
0x00000200002247ab : and byte ptr [rax + 0xb], cl ; ret 0xd18b
0x00000200001a0f6b : and byte ptr [rax + 0xb], cl ; ret 0xd233
0x00000200007ca23e : and byte ptr [rax + 0xb], cl ; ret 0xf41
0x00000200001715c9 : and byte ptr [rax + 0xb], cl ; ret 0xf48
0x00000200000eab73 : and byte ptr [rax + 0xb], cl ; ret 0xffba
0x00000200000bdf10 : and byte ptr [rax + 0xb], cl ; ror dword ptr [rbx + rdi - 0x3e], 1 ; ja 0x200000bdf23 ; ret
0x000002000014e9a7 : and byte ptr [rax + 0xf], cl ; ret
0x00000200001e65ff : and byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000200001f6cb4 : and byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x348
0x00000200001e65fe : and byte ptr [rax + 0xf], r9b ; scasd eax, dword ptr [rdi] ; ret
0x000002000013fb5b : and byte ptr [rax + 0xffff], bh ; ret
0x0000020000175835 : and byte ptr [rax + 3], cl ; fsubr st(3) ; and ecx, dword ptr [rax - 0x75] ; ret
0x0000020000245bfa : and byte ptr [rax + 3], cl ; ret
0x0000020000402a3d : and byte ptr [rax + rax*2], bl ; add byte ptr [rax + 3], cl ; xlatb ; jmp rdx
0x0000020000080224 : and byte ptr [rax + rax], al ; add al, ch ; ret
0x0000020000680053 : and byte ptr [rax + rax], al ; add byte ptr [rax], al ; setne al ; ret
0x00000200006834fb : and byte ptr [rax + rax], al ; add byte ptr [rbp - 0x7b], cl ; leave ; jne 0x200006834e6 ; ret
0x0000020000039053 : and byte ptr [rax + rax], al ; sal byte ptr [rbp + rdi - 0x50], 1 ; ret
0x0000020000519af9 : and byte ptr [rax + rax], dl ; add byte ptr [rax], al ; call 0x20000148178
0x000002000051d8f4 : and byte ptr [rax + rax], dl ; add byte ptr [rax], al ; call 0x20000148378
0x00000200007a0ba1 : and byte ptr [rax - 0x137e7601], bh ; pop rbx ; add byte ptr [rax], al ; ret
0x000002000007a4b4 : and byte ptr [rax - 0x327af0fe], ch ; call qword ptr [rax]
0x000002000051df59 : and byte ptr [rax - 0x39], cl ; ret 0x1700
0x00000200006f305c : and byte ptr [rax - 0x39], cl ; ret 0x2e00
0x0000020000519cc7 : and byte ptr [rax - 0x39], cl ; ret 0x5d00
0x0000020000718183 : and byte ptr [rax - 0x39], cl ; ret 0x6980
0x00000200003d0b27 : and byte ptr [rax - 0x39], cl ; ret 0xba00
0x00000200001a3a45 : and byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000014e2b : and byte ptr [rax - 0x3f], cl ; stc ; adc byte ptr [rbp - 0x75], cl ; ret
0x00000200004e4fa7 : and byte ptr [rax - 0x3f], cl ; stc ; add ecx, dword ptr [rbp + 0xb] ; ret 0x2b4c
0x000002000062264e : and byte ptr [rax - 0x3fffff45], bh ; ret
0x0000020000419b88 : and byte ptr [rax - 0x73], cl ; and byte ptr [rsi + 0xf], spl ; out dx, eax ; ret 0xf66
0x0000020000090cdd : and byte ptr [rax - 0x73], cl ; push rbp ; loopne 0x20000090d2a ; call rbx
0x00000200001162a9 : and byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x28 ; xor ecx, ecx ; call rax
0x00000200001beb62 : and byte ptr [rax - 0x75], cl ; add eax, 0x13ace6 ; call rax
0x00000200001be9db : and byte ptr [rax - 0x75], cl ; add eax, 0x13ae6d ; call rax
0x00000200001be3ee : and byte ptr [rax - 0x75], cl ; add eax, 0x13b45a ; call rax
0x000002000000ca15 : and byte ptr [rax - 0x75], cl ; cli ; mov rbx, rcx ; call 0x20000408c6d
0x00000200007954d3 : and byte ptr [rax - 0x75], cl ; cmp dword ptr [rax - 0x75], ecx ; ret 0x8b4d
0x0000020000026349 : and byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x7d] ; ret 0xe804
0x0000020000658375 : and byte ptr [rax - 0x75], cl ; fld1 ; ret 0xded2
0x00000200005255bf : and byte ptr [rax - 0x75], cl ; iretd ; call 0x20000148a97
0x000002000021f1f2 : and byte ptr [rax - 0x75], cl ; iretd ; call rax
0x000002000040f101 : and byte ptr [rax - 0x75], cl ; iretd ; mov dl, 1 ; call 0x2000040b3d4
0x000002000001f09f : and byte ptr [rax - 0x75], cl ; jl 0x2000001f0d0 ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000003712c : and byte ptr [rax - 0x75], cl ; jl 0x2000003715d ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000003ba9a : and byte ptr [rax - 0x75], cl ; jl 0x2000003bacb ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200000851a9 : and byte ptr [rax - 0x75], cl ; jl 0x200000851da ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200000f7117 : and byte ptr [rax - 0x75], cl ; jl 0x200000f7148 ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000404de6 : and byte ptr [rax - 0x75], cl ; jl 0x20000404e17 ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000509ea8 : and byte ptr [rax - 0x75], cl ; jl 0x20000509ed8 ; cmp cl, ch ; ret
0x0000020000564c86 : and byte ptr [rax - 0x75], cl ; jl 0x20000564cb7 ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000622eea : and byte ptr [rax - 0x75], cl ; jl 0x20000622f1b ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000067944a : and byte ptr [rax - 0x75], cl ; jl 0x2000067947b ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000202a5b : and byte ptr [rax - 0x75], cl ; jmp 0x1ff8368ecf3
0x00000200004e5bc9 : and byte ptr [rax - 0x75], cl ; pop rcx ; sub dh, dh ; ret
0x0000020000016d4a : and byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000550bad : and byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x28 ; add rax, rdx ; jmp 0x20000550bce
0x0000020000012325 : and byte ptr [rax - 0x75], cl ; ret
0x00000200001b178f : and byte ptr [rax - 0x75], cl ; ret 0x15eb
0x00000200004343ee : and byte ptr [rax - 0x75], cl ; ret 0x3345
0x0000020000196f39 : and byte ptr [rax - 0x75], cl ; ret 0x8348
0x0000020000106251 : and byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000441858 : and byte ptr [rax - 0x75], cl ; ret 0x8b49
0x0000020000085d69 : and byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x000002000066929f : and byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000617481 : and byte ptr [rax - 0x75], cl ; ret 0xdb33
0x0000020000013bfe : and byte ptr [rax - 0x75], cl ; ret 0xf48
0x00000200002390af : and byte ptr [rax - 0x75], cl ; ret 0xffba
0x0000020000460b44 : and byte ptr [rax - 0x75], cl ; retf ; call rax
0x00000200001d40d1 : and byte ptr [rax - 0x75], cl ; rol dword ptr [rdi + rcx + 0x20], 1 ; ret
0x000002000022bf67 : and byte ptr [rax - 0x75], cl ; salc ; call r10
0x000002000070fa2a : and byte ptr [rax - 0x75], cl ; salc ; mov rcx, rbp ; call rax
0x000002000047a263 : and byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r12 ; call 0x20000426525
0x00000200001dbef0 : and byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, rbp ; call rax
0x00000200006b034b : and byte ptr [rax - 0x77], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x00000200006dc284 : and byte ptr [rax - 0x77], cl ; je 0x200006dc2b4 ; call r10
0x00000200003fa5f4 : and byte ptr [rax - 0x77], cl ; jne 0x200003fa5bf ; call r10
0x000002000045cdaa : and byte ptr [rax - 0x77], cl ; jne 0x2000045cd75 ; call r10
0x00000200006dc1af : and byte ptr [rax - 0x77], cl ; jne 0x200006dc17a ; call r10
0x00000200007adf91 : and byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x7d], cl ; ret
0x0000020000565b01 : and byte ptr [rax - 0x77], cl ; or r15b, dil ; ret 0x8948
0x000002000058e00d : and byte ptr [rax - 0x77], cl ; pop rsp ; and al, 0x30 ; call r11
0x000002000062c7d3 : and byte ptr [rax - 0x77], cl ; pop rsp ; and al, 0x68 ; call 0x2000024d009
0x000002000004ae7d : and byte ptr [rax - 0x77], cl ; sbb r15b, sil ; ret 0x200
0x0000020000522153 : and byte ptr [rax - 0x7b], cl ; leave ; je 0x20000522167 ; call 0x20000148079
0x0000020000626adc : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 7], 0xe8 ; pop rcx ; outsd dx, dword ptr [rsi] ; ret 0xebff
0x0000020000629bef : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 7], 0xe8 ; ret 0xebff
0x000002000068424c : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x8b ; iretd ; call rax
0x00000200004500d8 : and byte ptr [rax - 0x7d], cl ; and al, 0xee ; add bh, bh ; ret
0x00000200000eeeff : and byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rbp + 1], esi ; ret
0x000002000008e016 : and byte ptr [rax - 0x7d], cl ; rcl dword ptr [rax - 0x18], -0x30 ; ret 3
0x000002000020217c : and byte ptr [rax - 0x7d], cl ; rcl dword ptr [rax], -0x18 ; ret 0x1ffc
0x0000020000045de8 : and byte ptr [rax - 0x7d], cl ; ret
0x00000200007102ee : and byte ptr [rax - 0x7d], cl ; ret 0x118
0x0000020000427a4b : and byte ptr [rax - 0x7d], cl ; ret 0x4210
0x00000200005b1b04 : and byte ptr [rax - 0x7d], cl ; ret 0x4408
0x0000020000542127 : and byte ptr [rax - 0x7d], cl ; ret 0x4410
0x00000200001319a9 : and byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200004e4962 : and byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000200005470dc : and byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000200005adc02 : and byte ptr [rax - 0x7d], cl ; ret 0x4920
0x00000200006d52d2 : and byte ptr [rax - 0x7d], cl ; ret 0x4c0b
0x000002000013ba99 : and byte ptr [rax - 0x7d], cl ; ret 0x6602
0x000002000053bf0f : and byte ptr [rax - 0x7d], cl ; ret 0x8028
0x0000020000608302 : and byte ptr [rax - 0x7d], cl ; ret 0x8b18
0x00000200001a42c4 : and byte ptr [rax - 0x7f], cl ; jmp qword ptr [rax]
0x000002000050d0b8 : and byte ptr [rax - 0x7f], cl ; ret
0x0000020000649497 : and byte ptr [rax - 0x7f], cl ; ret 0x2988
0x000002000009c592 : and byte ptr [rax - 0x9f7ddb2], al ; ret 0x7508
0x000002000009c591 : and byte ptr [rax - 0x9f7ddb2], r8b ; ret 0x7508
0x00000200004f1eaa : and byte ptr [rax - 1], cl ; ret
0x0000020000231e3c : and byte ptr [rax - 1], cl ; ret 0x3b48
0x00000200002381b0 : and byte ptr [rax - 1], cl ; ret 0x488b
0x0000020000146595 : and byte ptr [rax - 1], cl ; ret 0x4c89
0x000002000008dc42 : and byte ptr [rax - 1], cl ; ret 0x8348
0x000002000013cd80 : and byte ptr [rax - 1], cl ; ret 0xff49
0x000002000065c243 : and byte ptr [rax - 9], cl ; ret 0xfff
0x0000020000041e2f : and byte ptr [rax], 2 ; add byte ptr [rax], al ; ret
0x00000200006517a0 : and byte ptr [rax], ah ; call 0x2000024da44
0x00000200006eee0d : and byte ptr [rax], ah ; call qword ptr [rdx]
0x00000200006288a3 : and byte ptr [rax], ah ; lea ecx, dword ptr [rdx - 8] ; call 0x2000024da48
0x00000200007d4f58 : and byte ptr [rax], al ; add bl, al ; mov eax, 0x1000 ; ret
0x00000200000bb6c4 : and byte ptr [rax], al ; add byte ptr [rax + 3], cl ; clc ; jmp 0x200000bb695
0x00000200001c3403 : and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006ebfb1 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dl ; ret 0x406e
0x000002000051aa16 : and byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x000002000014f19c : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200000eb3e6
0x000002000003b26a : and byte ptr [rax], al ; add byte ptr [rax], al ; mov al, byte ptr [rax + 0x22] ; and al, 1 ; ret
0x0000020000446862 : and byte ptr [rax], al ; add byte ptr [rax], al ; xor ebx, ebx ; jmp 0x20000446833
0x00000200001b9860 : and byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x820f
0x000002000008108c : and byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret 0x574
0x00000200001014ef : and byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001bbc17 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x521
0x00000200004b4d45 : and byte ptr [rax], al ; add byte ptr [rsi - 0x7b], ah ; ret 0xdb74
0x000002000000f71f : and byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003e116 : and byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000067b354 : and byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000517497 : and byte ptr [rax], al ; call 0x2000007378c
0x0000020000449508 : and byte ptr [rax], al ; call 0x2000007378d
0x00000200001148f7 : and byte ptr [rax], al ; call 0x200000c1079
0x00000200006e1988 : and byte ptr [rax], al ; call r10
0x0000020000430154 : and byte ptr [rax], al ; call r11
0x000002000007c5f3 : and byte ptr [rax], al ; je 0x2000007c604 ; mov rax, rcx ; ret
0x00000200006f40f4 : and byte ptr [rax], al ; je 0x200006f40ee ; mov al, 1 ; ret
0x000002000003db3d : and byte ptr [rax], al ; jmp 0x2000003db06
0x00000200005c20d7 : and byte ptr [rax], al ; jmp 0x2000046a290
0x00000200004f0e98 : and byte ptr [rax], al ; jmp 0x200004f0e61
0x00000200001014d2 : and byte ptr [rax], al ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000120c1e : and byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; call rdi
0x000002000016ecd3 : and byte ptr [rax], al ; ret
0x00000200007bc244 : and byte ptr [rax], bh ; add byte ptr [rax], al ; call 0x200003e5f8c
0x00000200006eee1d : and byte ptr [rax], bh ; call qword ptr [rdx]
0x000002000070f3bc : and byte ptr [rax], bl ; ret
0x000002000013c8be : and byte ptr [rax], cl ; add byte ptr [rax], al ; add bl, ch ; mov cl, 0xf7 ; ret 0xffff
0x00000200005afab7 : and byte ptr [rax], cl ; push rsi ; sbb al, byte ptr [rcx - 0x73] ; call r11
0x00000200000d3a97 : and byte ptr [rax], dl ; je 0x200000d3aa8 ; add rsp, 8 ; ret
0x00000200000d3f54 : and byte ptr [rax], dl ; je 0x200000d3f65 ; add rsp, 8 ; ret
0x00000200005afab6 : and byte ptr [rax], r9b ; push rsi ; sbb al, byte ptr [rcx - 0x73] ; call r11
0x00000200001d4419 : and byte ptr [rbp + 0x2b], al ; ret
0x00000200001d45ef : and byte ptr [rbp + 0x2b], al ; ret 0x8b48
0x0000020000600b1b : and byte ptr [rbp + 0x33], al ; rol byte ptr [rax - 0x76], 0xcd ; call rsi
0x00000200006a45c2 : and byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x73], 0x15 ; ret
0x0000020000501e29 : and byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], 0xcb ; call 0x200000be129
0x0000020000519643 : and byte ptr [rbp + 0x33], al ; shr al, 0x44 ; hlt ; ret 0x48ff
0x0000020000778b07 : and byte ptr [rbp + 0x33], cl ; ror dword ptr [rax + 0xb], 1 ; ret 0x5c89
0x00000200001ecef5 : and byte ptr [rbp + 0x3b], al ; ret 0x675
0x000002000068e97a : and byte ptr [rbp + 0x63], cl ; ret 0x8b49
0x000002000068e979 : and byte ptr [rbp + 0x63], r9b ; ret 0x8b49
0x000002000077dd87 : and byte ptr [rbp + 0xb48015e], cl ; ret 0x8b48
0x00000200003cc376 : and byte ptr [rbp + 0xb48057b], cl ; ret 0x8d44
0x00000200001f1934 : and byte ptr [rbp + 0xb], al ; ret
0x000002000007465b : and byte ptr [rbp + 1], dh ; ret
0x00000200000f16e8 : and byte ptr [rbp + 2], dh ; xor eax, eax ; ret
0x000002000024afbb : and byte ptr [rbp + 3], al ; fimul dword ptr [rax + 0xb] ; ret 0x8b48
0x000002000077dad6 : and byte ptr [rbp + 3], al ; ret
0x000002000024b295 : and byte ptr [rbp + 3], al ; ror dword ptr [rax + 0xb], 1 ; ret 0x8b48
0x00000200003d0447 : and byte ptr [rbp + 3], cl ; ror byte ptr [rax + 0xb], cl ; ret 0x3b4e
0x0000020000099397 : and byte ptr [rbp + 7], dh ; shr eax, 0x1e ; and eax, 1 ; ret
0x000002000010d401 : and byte ptr [rbp + 9], dh ; mov rax, rcx ; ret
0x000002000010d400 : and byte ptr [rbp + 9], sil ; mov rax, rcx ; ret
0x0000020000142aab : and byte ptr [rbp + rax + 0x41], dh ; or dword ptr [rax], 0xffffffff ; ret
0x00000200000bd640 : and byte ptr [rbp + rax + 0x48], dh ; mov eax, dword ptr [rcx + 0x18] ; ret
0x00000200006e2950 : and byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x50 ; call 0x200003feb9c
0x00000200006c88b6 : and byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0xeb00
0x00000200001df401 : and byte ptr [rbp - 0x19178ab6], cl ; ret 0xfff6
0x0000020000683699 : and byte ptr [rbp - 0x5117e7b5], cl ; ret 0xffe4
0x00000200006288a4 : and byte ptr [rbp - 0x6c1707b6], cl ; push rcx ; ret 0x48ff
0x000002000024ae9e : and byte ptr [rbp - 0x73], al ; add dword ptr [r8 + 0xb], r9d ; ret 0x8b48
0x0000020000400f82 : and byte ptr [rbp - 0x73], al ; std ; call rsi
0x00000200004c6df3 : and byte ptr [rbp - 0x75], al ; enter -0x74b3, -0x3c ; call r10
0x00000200001f9df6 : and byte ptr [rbp - 0x75], al ; ret
0x00000200000ba7b3 : and byte ptr [rbp - 0x75], al ; ret 0x8348
0x00000200005b51cd : and byte ptr [rbp - 0x75], al ; ret 0x8948
0x0000020000096726 : and byte ptr [rbp - 0x75], al ; ret 0x8b49
0x000002000079ef02 : and byte ptr [rbp - 0x75], al ; ret 0xca83
0x0000020000563075 : and byte ptr [rbp - 0x75], cl ; add byte ptr [rbp + 0x3b], cl ; ret
0x00000200007a9793 : and byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rbp + 0x3b] ; ret 0x1a74
0x000002000000fedd : and byte ptr [rbp - 0x75], cl ; jae 0x2000000ff13 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000031a85 : and byte ptr [rbp - 0x75], cl ; jae 0x20000031abb ; mov rsp, r11 ; pop rbp ; ret
0x0000020000034362 : and byte ptr [rbp - 0x75], cl ; jae 0x20000034398 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000bbb5e : and byte ptr [rbp - 0x75], cl ; jae 0x200000bbb94 ; mov rsp, r11 ; pop rbp ; ret
0x000002000014217c : and byte ptr [rbp - 0x75], cl ; jae 0x200001421b2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001f4cce : and byte ptr [rbp - 0x75], cl ; jae 0x200001f4d04 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001fb69b : and byte ptr [rbp - 0x75], cl ; jae 0x200001fb6d1 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000204fa9 : and byte ptr [rbp - 0x75], cl ; jae 0x20000204fdf ; mov rsp, r11 ; pop rbp ; ret
0x0000020000219215 : and byte ptr [rbp - 0x75], cl ; jae 0x2000021924b ; mov rsp, r11 ; pop rbp ; ret
0x000002000021e45f : and byte ptr [rbp - 0x75], cl ; jae 0x2000021e495 ; mov rsp, r11 ; pop rbp ; ret
0x000002000022502f : and byte ptr [rbp - 0x75], cl ; jae 0x20000225065 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003e72f3 : and byte ptr [rbp - 0x75], cl ; jae 0x200003e7329 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003ed4aa : and byte ptr [rbp - 0x75], cl ; jae 0x200003ed4e0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003f24ee : and byte ptr [rbp - 0x75], cl ; jae 0x200003f2524 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003f66a1 : and byte ptr [rbp - 0x75], cl ; jae 0x200003f66d7 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003fa60f : and byte ptr [rbp - 0x75], cl ; jae 0x200003fa645 ; mov rsp, r11 ; pop rbp ; ret
0x000002000044ae16 : and byte ptr [rbp - 0x75], cl ; jae 0x2000044ae4c ; mov rsp, r11 ; pop rbp ; ret
0x000002000045cdc5 : and byte ptr [rbp - 0x75], cl ; jae 0x2000045cdfb ; mov rsp, r11 ; pop rbp ; ret
0x0000020000474ca6 : and byte ptr [rbp - 0x75], cl ; jae 0x20000474cdc ; mov rsp, r11 ; pop rbp ; ret
0x00000200005192cc : and byte ptr [rbp - 0x75], cl ; jae 0x20000519302 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000525ae2 : and byte ptr [rbp - 0x75], cl ; jae 0x20000525b18 ; mov rsp, r11 ; pop rbp ; ret
0x000002000053dabe : and byte ptr [rbp - 0x75], cl ; jae 0x2000053daf4 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000543ce4 : and byte ptr [rbp - 0x75], cl ; jae 0x20000543d1a ; mov rsp, r11 ; pop rbp ; ret
0x00000200005501f0 : and byte ptr [rbp - 0x75], cl ; jae 0x20000550226 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000560bb0 : and byte ptr [rbp - 0x75], cl ; jae 0x20000560be6 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000569413 : and byte ptr [rbp - 0x75], cl ; jae 0x20000569449 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000618301 : and byte ptr [rbp - 0x75], cl ; jae 0x20000618337 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064ca45 : and byte ptr [rbp - 0x75], cl ; jae 0x2000064ca7b ; mov rsp, r11 ; pop rbp ; ret
0x000002000064e086 : and byte ptr [rbp - 0x75], cl ; jae 0x2000064e0bc ; mov rsp, r11 ; pop rbp ; ret
0x000002000065c6a8 : and byte ptr [rbp - 0x75], cl ; jae 0x2000065c6de ; mov rsp, r11 ; pop rbp ; ret
0x0000020000663a8e : and byte ptr [rbp - 0x75], cl ; jae 0x20000663ac4 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000674369 : and byte ptr [rbp - 0x75], cl ; jae 0x2000067439f ; mov rsp, r11 ; pop rbp ; ret
0x000002000067da99 : and byte ptr [rbp - 0x75], cl ; jae 0x2000067dacf ; mov rsp, r11 ; pop rbp ; ret
0x000002000067dbde : and byte ptr [rbp - 0x75], cl ; jae 0x2000067dc14 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067e424 : and byte ptr [rbp - 0x75], cl ; jae 0x2000067e45a ; mov rsp, r11 ; pop rbp ; ret
0x000002000067fb9a : and byte ptr [rbp - 0x75], cl ; jae 0x2000067fbd0 ; mov rsp, r11 ; pop rbp ; ret
0x000002000068c129 : and byte ptr [rbp - 0x75], cl ; jae 0x2000068c15f ; mov rsp, r11 ; pop rbp ; ret
0x000002000068e4d3 : and byte ptr [rbp - 0x75], cl ; jae 0x2000068e509 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006dc1ca : and byte ptr [rbp - 0x75], cl ; jae 0x200006dc200 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006e0ecc : and byte ptr [rbp - 0x75], cl ; jae 0x200006e0f02 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007960a0 : and byte ptr [rbp - 0x75], cl ; jae 0x200007960d6 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000799863 : and byte ptr [rbp - 0x75], cl ; jae 0x20000799899 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007ac78b : and byte ptr [rbp - 0x75], cl ; jae 0x200007ac7c1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007b7a2c : and byte ptr [rbp - 0x75], cl ; jae 0x200007b7a62 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007b8866 : and byte ptr [rbp - 0x75], cl ; jae 0x200007b889c ; mov rsp, r11 ; pop rbp ; ret
0x00000200007ba707 : and byte ptr [rbp - 0x75], cl ; jae 0x200007ba73d ; mov rsp, r11 ; pop rbp ; ret
0x00000200007ba8d8 : and byte ptr [rbp - 0x75], cl ; jae 0x200007ba90e ; mov rsp, r11 ; pop rbp ; ret
0x00000200007cf3d6 : and byte ptr [rbp - 0x75], cl ; jae 0x200007cf40c ; mov rsp, r11 ; pop rbp ; ret
0x00000200007d0809 : and byte ptr [rbp - 0x75], cl ; jae 0x200007d083f ; mov rsp, r11 ; pop rbp ; ret
0x00000200007d0f7e : and byte ptr [rbp - 0x75], cl ; jae 0x200007d0fb4 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000522c32 : and byte ptr [rbp - 0x75], cl ; jnp 0x20000522c68 ; mov rsp, r11 ; pop rbp ; ret
0x000002000054b404 : and byte ptr [rbp - 0x75], cl ; jnp 0x2000054b43a ; mov rsp, r11 ; pop rbp ; ret
0x000002000064c895 : and byte ptr [rbp - 0x75], cl ; jnp 0x2000064c8cb ; mov rsp, r11 ; pop rbp ; ret
0x000002000004561c : and byte ptr [rbp - 0x75], cl ; ret
0x000002000018884a : and byte ptr [rbp - 0x75], cl ; ret 0x11ba
0x0000020000658439 : and byte ptr [rbp - 0x75], cl ; ret 0x1ee8
0x0000020000422a78 : and byte ptr [rbp - 0x75], cl ; ret 0x8b41
0x000002000068ba05 : and byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000183e0f : and byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000068e9fb : and byte ptr [rbp - 0x75], r9b ; ret 0x8b48
0x00000200001c289c : and byte ptr [rbp - 0x76], al ; ret
0x00000200004711ad : and byte ptr [rbp - 0x76], al ; ret 0x8b48
0x00000200005654b3 : and byte ptr [rbp - 0x76], al ; ret 0x94e8
0x000002000010c64a : and byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x9f ; ret 0x3345
0x00000200001fd3f3 : and byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x49], 0x8b ; ret
0x0000020000545729 : and byte ptr [rbp - 0x7ef68725], al ; jmp qword ptr [rax]
0x00000200004b1f76 : and byte ptr [rbp - 0x9da8b40], al ; ret
0x0000020000075237 : and byte ptr [rbx + 0x48], bl ; jmp rax
0x000002000015046c : and byte ptr [rbx + 0x48faffec], bh ; add esp, 0x28 ; ret
0x000002000048f613 : and byte ptr [rbx + 0x57404fb], al ; call r12
0x000002000023e76f : and byte ptr [rbx + 0xb48f8c3], al ; ret 0x8b48
0x000002000077b6e7 : and byte ptr [rbx + 0xb48f8c6], al ; ret 0x8b48
0x000002000077b666 : and byte ptr [rbx + 0xb48f8c7], al ; ret 0x8b48
0x0000020000108865 : and byte ptr [rbx + 4], dh ; mov qword ptr [rcx + 0x20], rdx ; ret
0x000002000070f3d8 : and byte ptr [rbx + rax*8], bl ; bts dword ptr [r8 + 0x20], 0x1a ; ret
0x00000200001d0fc9 : and byte ptr [rbx + rcx*4 + 0x15], cl ; push rdi ; ret 0x14
0x00000200000ab114 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sbb al, ch ; ret 0xfcab
0x000002000003a8e6 : and byte ptr [rbx + rcx*4 + 0x48], cl ; or byte ptr [rcx - 0x75], cl ; ret 0xf749
0x0000020000433866 : and byte ptr [rbx + rcx*4 + 0x49], al ; xor byte ptr [rbp - 0x76], al ; ret 0xc141
0x000002000070f8b2 : and byte ptr [rbx + rcx*4 - 0x35], cl ; call rax
0x0000020000606888 : and byte ptr [rbx + rcx*4 - 0x3d], al ; call rax
0x00000200005ad2b3 : and byte ptr [rbx + rcx*4 - 0x3d], al ; mov cl, 0x15 ; call r10
0x00000200005ad33a : and byte ptr [rbx + rcx*4 - 0x3d], al ; mov cl, 0x15 ; call rax
0x000002000058f8d5 : and byte ptr [rbx + rcx*4 - 0x3d], al ; mov cl, 0xc ; call rax
0x00000200007076b3 : and byte ptr [rbx + rcx*4 - 8], cl ; mov r8d, esi ; call rbx
0x000002000020504c : and byte ptr [rbx + rsi*8 - 1], bl ; add rsp, 0x60 ; pop rbx ; ret
0x00000200001473ee : and byte ptr [rbx - 0x11], dh ; and edx, 0xf ; jne 0x200001473ff ; ret
0x00000200005d7074 : and byte ptr [rbx - 0x12], ah ; dec dword ptr [rax - 0x75] ; iretd ; call rax
0x000002000061c5e9 : and byte ptr [rbx - 0x17], bl ; adc byte ptr [rdx], cl ; ret
0x000002000061e3c0 : and byte ptr [rbx - 0x17], bl ; cmp esp, ebp ; ret 0xccff
0x0000020000650c53 : and byte ptr [rbx - 0x17], bl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000020000129436 : and byte ptr [rbx - 0x17], bl ; ret
0x000002000008e137 : and byte ptr [rbx - 0x17], bl ; ret 0x1bee
0x000002000052a521 : and byte ptr [rbx - 0x3174b62a], cl ; call r9
0x000002000043a02d : and byte ptr [rbx - 0x3b7cb73d], cl ; pop rbx ; ret
0x00000200003e5c20 : and byte ptr [rbx - 0x3d], bl ; call 0x200000065a6
0x00000200001579bd : and byte ptr [rbx - 0x3d], bl ; or qword ptr [rcx + 8], 4 ; ret
0x00000200005698b1 : and byte ptr [rbx - 0x3d], bl ; xor eax, eax ; xchg dword ptr [rcx + 0x20], eax ; ret
0x00000200003ea5a1 : and byte ptr [rbx - 0x72f0fa08], al ; ret
0x00000200000c05d4 : and byte ptr [rbx - 0x742074c7], cl ; ret 0xc148
0x00000200003ee7d1 : and byte ptr [rbx - 0x74b3cfa6], cl ; ret 0xdb85
0x00000200001e6ff0 : and byte ptr [rbx - 0x74b7d78f], cl ; ret 0x8b4c
0x00000200006aebc7 : and byte ptr [rbx - 0x74dbdbac], cl ; ret 0x8d4c
0x000002000043e445 : and byte ptr [rbx - 0x7bf00008], al ; ret
0x00000200003e58dc : and byte ptr [rbx], ah ; ret 0xe0c1
0x0000020000521ff9 : and byte ptr [rbx], al ; add byte ptr [rax], al ; add al, ch ; in eax, dx ; ret 0x85ff
0x0000020000522132 : and byte ptr [rbx], al ; add byte ptr [rax], al ; add al, ch ; mov ah, 0x63 ; ret 0x8bff
0x000002000068c168 : and byte ptr [rbx], al ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000440773 : and byte ptr [rbx], al ; add byte ptr [rax], al ; mov qword ptr [r9], rcx ; ret
0x0000020000044454 : and byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000020000185014 : and byte ptr [rbx], al ; add byte ptr [rax], al ; xor bh, 0xff ; inc dword ptr [rbx] ; ret 0x8189
0x000002000041e5fe : and byte ptr [rbx], bh ; ret
0x00000200001d3d8d : and byte ptr [rbx], bh ; ret 0x820f
0x00000200004bec62 : and byte ptr [rbx], bh ; sar dword ptr [rsp + rdx + 0x4d], 0x3b ; ret
0x000002000070f3ca : and byte ptr [rbx], bl ; ret
0x00000200004b4d35 : and byte ptr [rbx], bl ; rol byte ptr [rbx + 0x33c302c0], 0xc0 ; ret
0x00000200002107ad : and byte ptr [rbx], ch ; fdivr st(7) ; ret
0x00000200003d5563 : and byte ptr [rbx], ch ; ret 0xf83b
0x000002000015d2dd : and byte ptr [rbx], cl ; add rsp, 0x20 ; pop rbp ; ret
0x000002000015bc90 : and byte ptr [rbx], cl ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000005971e : and byte ptr [rbx], cl ; ret
0x00000200001cf724 : and byte ptr [rbx], dh ; fisttp dword ptr [rbp + rcx*4 + 0x35] ; ret 0x51
0x00000200004f354d : and byte ptr [rbx], dh ; fucomi st(0) ; stosd dword ptr [rdi], eax ; ret
0x00000200007d08aa : and byte ptr [rbx], dh ; leave ; call 0x200003f7bc2
0x00000200005878d6 : and byte ptr [rbx], dh ; leave ; call qword ptr [rsi]
0x00000200005353d1 : and byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; enter -0x5b18, 0x24 ; ret 0x44ff
0x0000020000521efb : and byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; int1 ; call 0x20000147f79
0x00000200005caad8 : and byte ptr [rbx], dh ; ror byte ptr [rax - 0x77], cl ; push rax ; and cl, ch ; push rdx ; ret 0xffeb
0x0000020000615a35 : and byte ptr [rbx], dh ; ror byte ptr [rcx - 0x75], cl ; int 0xe8
0x00000200000c09fc : and byte ptr [rbx], dh ; ror byte ptr [rcx - 0x77], 0x11 ; pop rdi ; ret
0x000002000047810b : and byte ptr [rbx], dh ; shr al, cl ; jge 0x20000478176 ; ret 0x4cff
0x0000020000569281 : and byte ptr [rbx], dh ; shr al, cl ; ret
0x00000200000e8126 : and byte ptr [rcx + 0x23], cl ; ret
0x00000200000c0658 : and byte ptr [rcx + 0x3b], al ; ret
0x000002000007f3b6 : and byte ptr [rcx + 0x3b], cl ; ret 0x830f
0x000002000007f3cf : and byte ptr [rcx + 0x3b], cl ; ret 0xeb72
0x000002000015e670 : and byte ptr [rcx + 0x3b], cl ; ror dword ptr [rax - 0x75], cl ; ret 0xf49
0x00000200006c1758 : and byte ptr [rcx + 0x4a8d0453], cl ; in eax, dx ; call 0x2000024da49
0x00000200000bc3f4 : and byte ptr [rcx + 0x5c], al ; pop rbp ; pop rbx ; ret
0x000002000009a407 : and byte ptr [rcx + 0x5c], al ; pop rdi ; pop rbx ; ret
0x000002000044a13c : and byte ptr [rcx + 0x5c], al ; ret
0x000002000009a91a : and byte ptr [rcx + 0x5d], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009d752 : and byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000070b406 : and byte ptr [rcx + 0x5e], al ; jmp rax
0x00000200001da273 : and byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000feea9 : and byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x0000020000035068 : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000017e21 : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; ret
0x00000200007251be : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; ret
0x000002000006fba6 : and byte ptr [rcx + 0x5e], al ; pop rbp ; pop rbx ; ret
0x00000200004ce9b1 : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x000002000001bf46 : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rcx ; ret
0x000002000022e757 : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000016727 : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x0000020000058554 : and byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbx ; ret
0x0000020000004c49 : and byte ptr [rcx + 0x5e], al ; ret
0x00000200000a3d3d : and byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000564247 : and byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; ret
0x00000200004cb409 : and byte ptr [rcx + 0x5f], al ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000558c9a : and byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000089613 : and byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000055c16d : and byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; ret
0x000002000001457e : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001bc5e3 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x000002000000527d : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200005025bc : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x000002000000a0de : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200004281f7 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rbx ; ret
0x000002000000473a : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000002383d : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; ret
0x000002000002c2c1 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x0000020000121930 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rcx ; ret
0x0000020000025c40 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000004241 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x00000200006bd910 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; ret
0x00000200004790ce : and byte ptr [rcx + 0x5f], al ; pop rdi ; pop rbp ; ret
0x000002000001cccc : and byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; ret
0x0000020000071eba : and byte ptr [rcx + 0x5f], al ; pop rsi ; pop rbx ; ret
0x0000020000009c55 : and byte ptr [rcx + 0x5f], al ; ret
0x0000020000199774 : and byte ptr [rcx + 0xb4dfff1], dh ; ret
0x00000200007a4e7c : and byte ptr [rcx + 0xb], cl ; ret 0x8949
0x0000020000420d08 : and byte ptr [rcx + 0xf], al ; dec byte ptr [r8 - 1] ; ret 0x8d48
0x0000020000442d57 : and byte ptr [rcx + 0xf], al ; mov dh, 0x48 ; add cl, byte ptr [rax + 0x6b] ; ret 0x4825
0x0000020000425599 : and byte ptr [rcx + 0xf], al ; mov dh, 0x88 ; ret 6
0x00000200000e44c7 : and byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8348
0x0000020000236635 : and byte ptr [rcx + 3], al ; call qword ptr [rax]
0x000002000077e06e : and byte ptr [rcx + 3], al ; dec dword ptr [rax + 0xb] ; ret 0x8b48
0x000002000013cf95 : and byte ptr [rcx + 3], cl ; ret
0x00000200007b46e2 : and byte ptr [rcx + 3], cl ; ret 0x3b48
0x0000020000088855 : and byte ptr [rcx + 3], cl ; ror dword ptr [rbp - 0x75], cl ; ret 0x8b44
0x00000200001feed3 : and byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x28 ; call rdx
0x00000200003f7378 : and byte ptr [rcx + rcx*4 + 0x5c], al ; and al, 0x54 ; call r10
0x000002000072a7fb : and byte ptr [rcx + rcx*4 + 0x7c], al ; and al, 0x2c ; call rax
0x00000200004e10a4 : and byte ptr [rcx + rcx*8 - 0x74b7ef8c], al ; ret 0xc2f6
0x0000020000478ad0 : and byte ptr [rcx - 0x14d3dbb4], cl ; ret 0x3ce8
0x00000200003e8e63 : and byte ptr [rcx - 0x17ffee00], cl ; ret
0x0000020000778954 : and byte ptr [rcx - 0x39], cl ; ret 0x7400
0x00000200001dea1e : and byte ptr [rcx - 0x3f], cl ; cli ; add eax, dword ptr [rbp + 0x2b] ; ret 0x3b4c
0x00000200006dd266 : and byte ptr [rcx - 0x47], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000200006dd293 : and byte ptr [rcx - 0x47], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000200006c2f89 : and byte ptr [rcx - 0x48], al ; call qword ptr [rbx]
0x00000200006925bd : and byte ptr [rcx - 0x48f023bb], cl ; add dword ptr [rcx + 3], eax ; ret 0x4589
0x000002000049e280 : and byte ptr [rcx - 0x72dbdbbc], cl ; push rax ; jmp qword ptr [rbx]
0x000002000007e861 : and byte ptr [rcx - 0x73], al ; dec qword ptr [rax + 0xb] ; ret 0x44c7
0x0000020000522493 : and byte ptr [rcx - 0x73], al ; pop r10 ; call 0x20000148558
0x000002000077e6f6 : and byte ptr [rcx - 0x73], al ; pop rdi ; add dword ptr [rax + 0xb], ecx ; ret 0x8b48
0x000002000078bc73 : and byte ptr [rcx - 0x73], al ; pop rsi ; add dword ptr [rax + 0xb], ecx ; ret 0x8b48
0x00000200007c8740 : and byte ptr [rcx - 0x73], al ; push rax ; or ebp, eax ; ret 0xc654
0x00000200001bf6a8 : and byte ptr [rcx - 0x73], al ; push rcx ; loope 0x200001bf69c ; ret 0xffcd
0x000002000077dbdf : and byte ptr [rcx - 0x73], cl ; pop rax ; add cl, byte ptr [rax + 0xb] ; ret 0x8b48
0x000002000013e5b0 : and byte ptr [rcx - 0x75], al ; adc cl, byte ptr [rcx - 0x7d] ; ret 0x4508
0x000002000046d88a : and byte ptr [rcx - 0x75], al ; ret
0x0000020000083b96 : and byte ptr [rcx - 0x75], al ; ret 0x348
0x0000020000083bf3 : and byte ptr [rcx - 0x75], al ; ret 0x394c
0x0000020000235748 : and byte ptr [rcx - 0x75], al ; ret 0x4566
0x000002000018d07f : and byte ptr [rcx - 0x75], al ; ret 0x8d48
0x0000020000543a27 : and byte ptr [rcx - 0x75], al ; ret 0xc148
0x0000020000128313 : and byte ptr [rcx - 0x75], al ; ret 0xc8c1
0x0000020000432b9f : and byte ptr [rcx - 0x75], al ; ror byte ptr [rdi], 0x45 ; ret 0x394c
0x00000200000fb776 : and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc984
0x0000020000628559 : and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc985
0x0000020000707502 : and byte ptr [rcx - 0x75], cl ; int 0xff
0x000002000052a63d : and byte ptr [rcx - 0x75], cl ; iretd ; call 0x20000157547
0x000002000045cae5 : and byte ptr [rcx - 0x75], cl ; iretd ; call r14
0x00000200006d825f : and byte ptr [rcx - 0x75], cl ; iretd ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x00000200006d86f3 : and byte ptr [rcx - 0x75], cl ; iretd ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x0000020000007bff : and byte ptr [rcx - 0x75], cl ; jae 0x20000007c35 ; mov rsp, r11 ; pop rdi ; ret
0x000002000001f4fb : and byte ptr [rcx - 0x75], cl ; jae 0x2000001f531 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000242c4 : and byte ptr [rcx - 0x75], cl ; jae 0x200000242fa ; mov rsp, r11 ; pop rdi ; ret
0x000002000002b4b8 : and byte ptr [rcx - 0x75], cl ; jae 0x2000002b4ee ; mov rsp, r11 ; pop rdi ; ret
0x0000020000030ea6 : and byte ptr [rcx - 0x75], cl ; jae 0x20000030edc ; mov rsp, r11 ; pop rdi ; ret
0x000002000003aa90 : and byte ptr [rcx - 0x75], cl ; jae 0x2000003aac6 ; mov rsp, r11 ; pop rdi ; ret
0x000002000003f702 : and byte ptr [rcx - 0x75], cl ; jae 0x2000003f738 ; mov rsp, r11 ; pop rdi ; ret
0x000002000008953a : and byte ptr [rcx - 0x75], cl ; jae 0x20000089570 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f8da7 : and byte ptr [rcx - 0x75], cl ; jae 0x200000f8ddd ; mov rsp, r11 ; pop rdi ; ret
0x0000020000113f99 : and byte ptr [rcx - 0x75], cl ; jae 0x20000113fcf ; mov rsp, r11 ; pop rdi ; ret
0x000002000011bc82 : and byte ptr [rcx - 0x75], cl ; jae 0x2000011bcb8 ; mov rsp, r11 ; pop rdi ; ret
0x000002000013513b : and byte ptr [rcx - 0x75], cl ; jae 0x20000135171 ; mov rsp, r11 ; pop rdi ; ret
0x000002000014483d : and byte ptr [rcx - 0x75], cl ; jae 0x20000144873 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001dc304 : and byte ptr [rcx - 0x75], cl ; jae 0x200001dc33a ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e025a : and byte ptr [rcx - 0x75], cl ; jae 0x200001e0290 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e053c : and byte ptr [rcx - 0x75], cl ; jae 0x200001e0572 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e1874 : and byte ptr [rcx - 0x75], cl ; jae 0x200001e18aa ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fe7c8 : and byte ptr [rcx - 0x75], cl ; jae 0x200001fe7fe ; mov rsp, r11 ; pop rdi ; ret
0x0000020000209dd1 : and byte ptr [rcx - 0x75], cl ; jae 0x20000209e07 ; mov rsp, r11 ; pop rdi ; ret
0x00000200002374d6 : and byte ptr [rcx - 0x75], cl ; jae 0x2000023750c ; mov rsp, r11 ; pop rdi ; ret
0x00000200002379c5 : and byte ptr [rcx - 0x75], cl ; jae 0x200002379fb ; mov rsp, r11 ; pop rdi ; ret
0x0000020000238f7e : and byte ptr [rcx - 0x75], cl ; jae 0x20000238fb4 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003f7515 : and byte ptr [rcx - 0x75], cl ; jae 0x200003f754b ; mov rsp, r11 ; pop rdi ; ret
0x00000200004495d4 : and byte ptr [rcx - 0x75], cl ; jae 0x2000044960a ; mov rsp, r11 ; pop rdi ; ret
0x00000200004539ea : and byte ptr [rcx - 0x75], cl ; jae 0x20000453a20 ; mov rsp, r11 ; pop rdi ; ret
0x000002000045c3e9 : and byte ptr [rcx - 0x75], cl ; jae 0x2000045c41f ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e6378 : and byte ptr [rcx - 0x75], cl ; jae 0x200004e63ae ; mov rsp, r11 ; pop rdi ; ret
0x00000200004eff37 : and byte ptr [rcx - 0x75], cl ; jae 0x200004eff6d ; mov rsp, r11 ; pop rdi ; ret
0x0000020000501f51 : and byte ptr [rcx - 0x75], cl ; jae 0x20000501f87 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000515c26 : and byte ptr [rcx - 0x75], cl ; jae 0x20000515c5c ; mov rsp, r11 ; pop rdi ; ret
0x000002000053afb2 : and byte ptr [rcx - 0x75], cl ; jae 0x2000053afe8 ; mov rsp, r11 ; pop rdi ; ret
0x000002000053ba7b : and byte ptr [rcx - 0x75], cl ; jae 0x2000053bab1 ; mov rsp, r11 ; pop rdi ; ret
0x000002000053bb3a : and byte ptr [rcx - 0x75], cl ; jae 0x2000053bb70 ; mov rsp, r11 ; pop rdi ; ret
0x000002000054e467 : and byte ptr [rcx - 0x75], cl ; jae 0x2000054e49d ; mov rsp, r11 ; pop rdi ; ret
0x000002000055319b : and byte ptr [rcx - 0x75], cl ; jae 0x200005531d1 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000564712 : and byte ptr [rcx - 0x75], cl ; jae 0x20000564748 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000607e98 : and byte ptr [rcx - 0x75], cl ; jae 0x20000607ece ; mov rsp, r11 ; pop rdi ; ret
0x000002000060e76e : and byte ptr [rcx - 0x75], cl ; jae 0x2000060e7a4 ; mov rsp, r11 ; pop rdi ; ret
0x000002000060edce : and byte ptr [rcx - 0x75], cl ; jae 0x2000060ee04 ; mov rsp, r11 ; pop rdi ; ret
0x000002000060fd1a : and byte ptr [rcx - 0x75], cl ; jae 0x2000060fd50 ; mov rsp, r11 ; pop rdi ; ret
0x000002000065d4ed : and byte ptr [rcx - 0x75], cl ; jae 0x2000065d523 ; mov rsp, r11 ; pop rdi ; ret
0x000002000065fb05 : and byte ptr [rcx - 0x75], cl ; jae 0x2000065fb3b ; mov rsp, r11 ; pop rdi ; ret
0x000002000066626f : and byte ptr [rcx - 0x75], cl ; jae 0x200006662a5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000066ce89 : and byte ptr [rcx - 0x75], cl ; jae 0x2000066cebf ; mov rsp, r11 ; pop rdi ; ret
0x0000020000677cf4 : and byte ptr [rcx - 0x75], cl ; jae 0x20000677d2a ; mov rsp, r11 ; pop rdi ; ret
0x00000200006a2ed0 : and byte ptr [rcx - 0x75], cl ; jae 0x200006a2f06 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006ae51d : and byte ptr [rcx - 0x75], cl ; jae 0x200006ae553 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006c73bc : and byte ptr [rcx - 0x75], cl ; jae 0x200006c73f2 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000704d3b : and byte ptr [rcx - 0x75], cl ; jae 0x20000704d71 ; mov rsp, r11 ; pop rdi ; ret
0x000002000070e99f : and byte ptr [rcx - 0x75], cl ; jae 0x2000070e9d5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000071056f : and byte ptr [rcx - 0x75], cl ; jae 0x200007105a5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000071063f : and byte ptr [rcx - 0x75], cl ; jae 0x20000710675 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000712974 : and byte ptr [rcx - 0x75], cl ; jae 0x200007129aa ; mov rsp, r11 ; pop rdi ; ret
0x0000020000795709 : and byte ptr [rcx - 0x75], cl ; jae 0x2000079573f ; mov rsp, r11 ; pop rdi ; ret
0x00000200007b834f : and byte ptr [rcx - 0x75], cl ; jae 0x200007b8385 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000040a2b : and byte ptr [rcx - 0x75], cl ; jnp 0x20000040a61 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000040d12 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000040d48 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000086068 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000008609e ; mov rsp, r11 ; pop rbp ; ret
0x00000200000fd75c : and byte ptr [rcx - 0x75], cl ; jnp 0x200000fd792 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000112e0a : and byte ptr [rcx - 0x75], cl ; jnp 0x20000112e40 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011b689 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000011b6bf ; mov rsp, r11 ; pop rbp ; ret
0x0000020000120c49 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000120c7f ; mov rsp, r11 ; pop rbp ; ret
0x000002000012dd95 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000012ddcb ; mov rsp, r11 ; pop rbp ; ret
0x0000020000135893 : and byte ptr [rcx - 0x75], cl ; jnp 0x200001358c9 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000137443 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000137479 ; mov rsp, r11 ; pop rbp ; ret
0x000002000013a9b6 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000013a9ec ; mov rsp, r11 ; pop rbp ; ret
0x00000200001bf56a : and byte ptr [rcx - 0x75], cl ; jnp 0x200001bf5a0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001cf1ef : and byte ptr [rcx - 0x75], cl ; jnp 0x200001cf225 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d592a : and byte ptr [rcx - 0x75], cl ; jnp 0x200001d5960 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d9a48 : and byte ptr [rcx - 0x75], cl ; jnp 0x200001d9a7e ; mov rsp, r11 ; pop rbp ; ret
0x00000200002051f2 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000205228 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000205e57 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000205e8d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000206a95 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000206acb ; mov rsp, r11 ; pop rbp ; ret
0x0000020000206c41 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000206c77 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000208371 : and byte ptr [rcx - 0x75], cl ; jnp 0x200002083a7 ; mov rsp, r11 ; pop rbp ; ret
0x000002000020926f : and byte ptr [rcx - 0x75], cl ; jnp 0x200002092a5 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000216f01 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000216f37 ; mov rsp, r11 ; pop rbp ; ret
0x000002000021911a : and byte ptr [rcx - 0x75], cl ; jnp 0x20000219150 ; mov rsp, r11 ; pop rbp ; ret
0x000002000022f9de : and byte ptr [rcx - 0x75], cl ; jnp 0x2000022fa14 ; mov rsp, r11 ; pop rbp ; ret
0x00000200002376b3 : and byte ptr [rcx - 0x75], cl ; jnp 0x200002376e9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003d9679 : and byte ptr [rcx - 0x75], cl ; jnp 0x200003d96af ; mov rsp, r11 ; pop rbp ; ret
0x00000200003dc953 : and byte ptr [rcx - 0x75], cl ; jnp 0x200003dc989 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003e786d : and byte ptr [rcx - 0x75], cl ; jnp 0x200003e78a3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003ecb8c : and byte ptr [rcx - 0x75], cl ; jnp 0x200003ecbc2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003f63ff : and byte ptr [rcx - 0x75], cl ; jnp 0x200003f6435 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000438c0c : and byte ptr [rcx - 0x75], cl ; jnp 0x20000438c42 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000447f18 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000447f4e ; mov rsp, r11 ; pop rbp ; ret
0x000002000045492b : and byte ptr [rcx - 0x75], cl ; jnp 0x20000454961 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000467bc6 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000467bfc ; mov rsp, r11 ; pop rbp ; ret
0x000002000049d1c8 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000049d1fe ; mov rsp, r11 ; pop rbp ; ret
0x00000200004aa386 : and byte ptr [rcx - 0x75], cl ; jnp 0x200004aa3bc ; mov rsp, r11 ; pop rbp ; ret
0x0000020000514f95 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000514fcb ; mov rsp, r11 ; pop rbp ; ret
0x000002000051645e : and byte ptr [rcx - 0x75], cl ; jnp 0x20000516494 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005263e2 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000526418 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000531f33 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000531f69 ; mov rsp, r11 ; pop rbp ; ret
0x000002000053b955 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000053b98b ; mov rsp, r11 ; pop rbp ; ret
0x0000020000556f84 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000556fba ; mov rsp, r11 ; pop rbp ; ret
0x000002000055bc4b : and byte ptr [rcx - 0x75], cl ; jnp 0x2000055bc81 ; mov rsp, r11 ; pop rbp ; ret
0x000002000055cc49 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000055cc7f ; mov rsp, r11 ; pop rbp ; ret
0x000002000056571c : and byte ptr [rcx - 0x75], cl ; jnp 0x20000565752 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005f1cf7 : and byte ptr [rcx - 0x75], cl ; jnp 0x200005f1d2d ; mov rsp, r11 ; pop rbp ; ret
0x000002000060873f : and byte ptr [rcx - 0x75], cl ; jnp 0x20000608775 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006208d7 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000062090d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000622bb2 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000622be8 ; mov rsp, r11 ; pop rbp ; ret
0x000002000062d772 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000062d7a8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006357ff : and byte ptr [rcx - 0x75], cl ; jnp 0x20000635835 ; mov rsp, r11 ; pop rbp ; ret
0x000002000063f163 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000063f199 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000649a6e : and byte ptr [rcx - 0x75], cl ; jnp 0x20000649aa4 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064fcbb : and byte ptr [rcx - 0x75], cl ; jnp 0x2000064fcf1 ; mov rsp, r11 ; pop rbp ; ret
0x000002000065cbe9 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000065cc1f ; mov rsp, r11 ; pop rbp ; ret
0x00000200006717d4 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000067180a ; mov rsp, r11 ; pop rbp ; ret
0x00000200006832f8 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000068332e ; mov rsp, r11 ; pop rbp ; ret
0x000002000069137d : and byte ptr [rcx - 0x75], cl ; jnp 0x200006913b3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000695b18 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000695b4e ; mov rsp, r11 ; pop rbp ; ret
0x000002000069ac41 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000069ac77 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006a499f : and byte ptr [rcx - 0x75], cl ; jnp 0x200006a49d5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006a8ced : and byte ptr [rcx - 0x75], cl ; jnp 0x200006a8d23 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006d4a69 : and byte ptr [rcx - 0x75], cl ; jnp 0x200006d4a9f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000701f7c : and byte ptr [rcx - 0x75], cl ; jnp 0x20000701fb2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007b2cb8 : and byte ptr [rcx - 0x75], cl ; jnp 0x200007b2cee ; mov rsp, r11 ; pop rbp ; ret
0x00000200000036af : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000003716 ; ret
0x0000020000003cbf : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000003d28 ; ret
0x000002000000be55 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000bebc ; ret
0x000002000000e40b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000e474 ; ret
0x000002000002b02a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000002b093 ; ret
0x000002000003dc0b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000003dc74 ; ret
0x0000020000042bd9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000042c42 ; ret
0x0000020000045a84 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000045aed ; ret
0x00000200000517d0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000051837 ; ret
0x0000020000085b4f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000085bb8 ; ret
0x00000200000f36ce : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f3737 ; ret
0x00000200000f3c31 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f3c9a ; ret
0x00000200000f8f86 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f8fef ; ret
0x00000200000f907d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f90e6 ; ret
0x00000200000fb0d3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000fb13a ; ret
0x0000020000101606 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010166d ; ret
0x0000020000115fe8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011604f ; ret
0x000002000011a8a8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011a90f ; ret
0x000002000011ad4a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011adb1 ; ret
0x000002000011c951 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011c9b8 ; ret
0x000002000011dedb : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011df44 ; ret
0x000002000011e2e8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011e34f ; ret
0x00000200001267cf : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000126838 ; ret
0x0000020000130e1c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000130e68 ; pop rsi ; ret
0x000002000013528e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001352f7 ; ret
0x00000200001b730a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b7371 ; ret
0x00000200001bfc4d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bfcb6 ; ret
0x00000200001c1fc8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c202f ; ret
0x00000200001c2aac : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c2b15 ; ret
0x00000200001c31d3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c323c ; ret
0x00000200001c384e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c38b7 ; ret
0x00000200001c4292 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c42fb ; ret
0x00000200001cd793 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001cd7fc ; ret
0x00000200001d05e7 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d064e ; ret
0x00000200001d079f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d0806 ; ret
0x00000200001d0a7b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d0ae2 ; ret
0x00000200001d74c3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d752a ; ret
0x00000200001e68f1 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e6958 ; ret
0x00000200001eceb9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ecf20 ; ret
0x00000200001fd91d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fd986 ; ret
0x00000200001fdb73 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fdbdc ; ret
0x0000020000205669 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200002056d0 ; ret
0x000002000020572e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000205795 ; ret
0x00000200002084a2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000208509 ; ret
0x0000020000208576 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200002085dd ; ret
0x0000020000208790 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200002087f7 ; ret
0x0000020000208968 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200002089d1 ; ret
0x0000020000208e44 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000208eab ; ret
0x000002000020b381 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020b3e8 ; ret
0x000002000020e683 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020e6ec ; ret
0x0000020000212320 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000212389 ; ret
0x000002000021ed46 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000021edad ; ret
0x0000020000222f91 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000222ff8 ; ret
0x000002000022463a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200002246a1 ; ret
0x000002000022bc56 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022bcbd ; ret
0x00000200003d0f1b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003d0f82 ; ret
0x00000200003d38e2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003d3949 ; ret
0x00000200003e0441 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e04aa ; ret
0x00000200003e99c2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e9a0e ; pop rsi ; ret
0x00000200003eaaed : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003eab56 ; ret
0x00000200003ecb11 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ecb78 ; ret
0x00000200003ed3fd : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ed464 ; ret
0x00000200003f4f1a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f4f83 ; ret
0x00000200003f51c4 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f522d ; ret
0x00000200003f73aa : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f7413 ; ret
0x00000200003fd5ff : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fd668 ; ret
0x0000020000400808 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000400871 ; ret
0x0000020000403d78 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000403de1 ; ret
0x0000020000407fd5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000408021 ; pop rsi ; ret
0x000002000040c022 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040c089 ; ret
0x000002000040e44b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040e4b2 ; ret
0x0000020000414ce6 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000414d4f ; ret
0x000002000042b453 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042b4ba ; ret
0x000002000042dcb2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042dd1b ; ret
0x000002000043104d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004310b4 ; ret
0x000002000043ac46 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043acaf ; ret
0x000002000043c6c2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043c72b ; ret
0x0000020000453581 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004535ea ; ret
0x00000200004566de : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000456745 ; ret
0x0000020000457e8d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000457ed9 ; pop rsi ; ret
0x00000200004591a8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000459211 ; ret
0x000002000045cc97 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045cd00 ; ret
0x000002000045eed6 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045ef3d ; ret
0x0000020000465881 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004658cd ; pop rsi ; ret
0x000002000046d247 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046d293 ; pop rsi ; ret
0x00000200004a237c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a23c8 ; pop rsi ; ret
0x00000200004aff27 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004aff8e ; ret
0x00000200004b8a49 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b8a95 ; pop rsi ; ret
0x00000200004bcf8e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004bcfda ; pop rdi ; ret
0x00000200004c1132 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c119b ; ret
0x00000200004c1146 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c11af ; ret
0x00000200004d03ff : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d0466 ; ret
0x00000200004e64f4 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e655d ; ret
0x00000200004e6666 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e66b2 ; pop rsi ; ret
0x00000200004ea1ab : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ea214 ; ret
0x00000200004f16ab : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f1714 ; ret
0x00000200004fa463 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fa4cc ; ret
0x00000200004fa84c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fa8b5 ; ret
0x000002000050137b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005013c7 ; pop rsi ; ret
0x00000200005160d8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000516141 ; ret
0x00000200005170e5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051714c ; ret
0x000002000051aaf9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051ab62 ; ret
0x000002000051b065 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051b0cc ; ret
0x000002000051b5ff : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051b666 ; ret
0x000002000051b6f3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051b75a ; ret
0x000002000051c0ae : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051c117 ; ret
0x000002000051dedf : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051df48 ; ret
0x000002000051e305 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051e36e ; ret
0x0000020000527b8d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000527bf4 ; ret
0x0000020000528cdc : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000528d45 ; ret
0x000002000052ad50 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052adb7 ; ret
0x000002000052d284 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052d2eb ; ret
0x000002000052f4a9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052f512 ; ret
0x0000020000530035 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053009c ; ret
0x0000020000531e79 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000531ee0 ; ret
0x0000020000531fc1 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000532028 ; ret
0x0000020000535058 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005350c1 ; ret
0x000002000053630c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000536375 ; ret
0x00000200005365be : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000536627 ; ret
0x0000020000536f1d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000536f86 ; ret
0x0000020000538c99 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000538d00 ; ret
0x000002000054ec08 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054ec71 ; ret
0x0000020000551173 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005511dc ; ret
0x000002000055fbb4 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055fc00 ; pop rdi ; ret
0x0000020000562185 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005621ec ; ret
0x00000200005655d8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000565641 ; ret
0x00000200005658e5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000056594e ; ret
0x0000020000566b28 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000566b91 ; ret
0x0000020000567354 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005673bb ; ret
0x0000020000601307 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060136e ; ret
0x0000020000605317 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000605380 ; ret
0x00000200006187b5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061881c ; ret
0x000002000061d905 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061d951 ; pop rsi ; ret
0x00000200006201fd : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000620266 ; ret
0x0000020000620ab5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000620b1e ; ret
0x000002000062556e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006255d5 ; ret
0x000002000062a6c6 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062a72f ; ret
0x000002000062b628 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062b691 ; ret
0x000002000062cdd6 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062ce3f ; ret
0x000002000062dfe9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062e050 ; ret
0x0000020000631d1a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000631d83 ; ret
0x000002000063d4f4 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063d55b ; ret
0x000002000063e689 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063e6f0 ; ret
0x000002000063f088 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063f0ef ; ret
0x000002000064a939 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064a985 ; pop rsi ; ret
0x000002000064aa1f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064aa6b ; pop rsi ; ret
0x000002000064aea0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064aeec ; pop rsi ; ret
0x000002000064fe00 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064fe67 ; ret
0x000002000064ff08 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064ff6f ; ret
0x00000200006594f3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065953f ; pop rsi ; ret
0x000002000065d9be : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065da27 ; ret
0x000002000066cd8e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066cdf7 ; ret
0x000002000066f566 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066f5cf ; ret
0x000002000067594f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006759b6 ; ret
0x000002000067783d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006778a4 ; ret
0x000002000067d96f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067d9d6 ; ret
0x000002000067e05b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067e0c2 ; ret
0x000002000068094f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068099b ; pop rsi ; ret
0x00000200006820b1 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006820fd ; pop rsi ; ret
0x0000020000691f8e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000691ff5 ; ret
0x0000020000695a2a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000695a91 ; ret
0x000002000069b7e0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069b847 ; ret
0x00000200006a3f62 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006a3fc9 ; ret
0x00000200006a7529 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006a7590 ; ret
0x00000200006ac926 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ac98d ; ret
0x00000200006af3d9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006af425 ; pop rsi ; ret
0x00000200006b5512 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006b555e ; pop rsi ; ret
0x00000200006bb709 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006bb770 ; ret
0x00000200006bc1d2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006bc23b ; ret
0x00000200006c3696 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c36fd ; ret
0x00000200006d598d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006d59f4 ; ret
0x00000200006dc2a0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006dc309 ; ret
0x00000200006dd1a9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006dd212 ; ret
0x00000200006dd240 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006dd2a9 ; ret
0x00000200006df4b7 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006df520 ; ret
0x00000200006e6e6f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006e6ed6 ; ret
0x00000200006e757f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006e75e8 ; ret
0x000002000079429e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000794305 ; ret
0x000002000079b7ca : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000079b831 ; ret
0x000002000079dd41 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000079ddaa ; ret
0x00000200007a1393 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200007a13fa ; ret
0x00000200007a1853 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200007a18ba ; ret
0x00000200007a531c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200007a5383 ; ret
0x00000200007acff1 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200007ad05a ; ret
0x00000200007b0039 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b00a0 ; ret
0x00000200007b6b79 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b6be0 ; ret
0x00000200007b8c7c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b8ce3 ; ret
0x00000200007b9c08 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b9c6f ; ret
0x00000200007ba187 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200007ba1ee ; ret
0x00000200007cf1cf : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200007cf236 ; ret
0x000002000020aba8 : and byte ptr [rcx - 0x75], cl ; or al, ch ; ret
0x0000020000024cac : and byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000006f282 : and byte ptr [rcx - 0x75], cl ; ret
0x00000200004d9e51 : and byte ptr [rcx - 0x75], cl ; ret 0x8948
0x00000200004c4694 : and byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200003f386c : and byte ptr [rcx - 0x75], cl ; retf ; call r10
0x00000200003f9381 : and byte ptr [rcx - 0x75], cl ; retf ; call rax
0x00000200006beec7 : and byte ptr [rcx - 0x75], cl ; ror byte ptr [rcx - 0x75], cl ; iretd ; call r11
0x000002000003937c : and byte ptr [rcx - 0x75], cl ; sbb byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], cl ; ret
0x00000200004c4690 : and byte ptr [rcx - 0x78], al ; and byte ptr [r9 - 0x75], r9b ; ret 0xc148
0x00000200007892b2 : and byte ptr [rcx - 0x7cb6eba9], cl ; ret
0x0000020000788a3a : and byte ptr [rcx - 0x7cb6ebad], cl ; ret
0x0000020000055909 : and byte ptr [rcx - 0x7d], al ; ret 0x4410
0x000002000023e6c2 : and byte ptr [rcx - 0x7d], al ; ret 0x48f8
0x00000200001cb0da : and byte ptr [rcx - 0x7d], al ; stc ; add dword ptr [rbp + 3], esi ; xor al, al ; ret
0x00000200001a9d05 : and byte ptr [rcx - 0x7d], cl ; rcl byte ptr [rax], 0xb9 ; ret 0
0x00000200005c474e : and byte ptr [rcx - 0x7d], cl ; ret
0x0000020000427761 : and byte ptr [rcx - 0x7d], cl ; ret 0x4210
0x000002000013bba7 : and byte ptr [rcx - 0x7d], cl ; ret 0x4902
0x000002000007c669 : and byte ptr [rcx - 0x7f], cl ; ret 0
0x000002000069d12f : and byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000200001341a7 : and byte ptr [rcx - 1], al ; ret 0x894d
0x00000200000ac32d : and byte ptr [rcx - 1], cl ; ret
0x000002000062af50 : and byte ptr [rcx], al ; add al, al ; ret
0x00000200003f3b45 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; clc ; call rsi
0x000002000045ddd1 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; cli ; call rsi
0x00000200006d95a1 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; cmc ; call rsi
0x00000200006dac48 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; stc ; call rdi
0x00000200006da76f : and byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; iretd ; call r14
0x00000200003f2b0f : and byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; iretd ; call rdi
0x0000020000534903 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000521f7a : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000071c096 : and byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000018cd16 : and byte ptr [rcx], al ; inc dword ptr [rcx + 0x3c] ; ret
0x000002000021c776 : and byte ptr [rcx], bh ; adc esi, dword ptr [rdx - 8] ; jmp 0x2000021c792
0x00000200005f162f : and byte ptr [rcx], bh ; and byte ptr [rdi + r9 + 0x4c], cl ; ret 0x8348
0x00000200007cd158 : and byte ptr [rcx], bl ; add byte ptr [rdx], al ; add al, ch ; pop rdx ; stosb byte ptr [rdi], al ; ret 0x8bff
0x000002000070f3c3 : and byte ptr [rcx], bl ; ret
0x0000020000055db0 : and byte ptr [rcx], cl ; add bl, ch ; xchg byte ptr [rbx], dh ; leave ; call r14
0x00000200005f162e : and byte ptr [rcx], dil ; and byte ptr [rdi + r9 + 0x4c], cl ; ret 0x8348
0x00000200003dbd23 : and byte ptr [rcx], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000101e53 : and byte ptr [rdi + 0x48], bl ; jmp rax
0x00000200000e3730 : and byte ptr [rdi + 0x5d], bl ; pop rbx ; ret
0x000002000001a82c : and byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000128f38 : and byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200005f1631 : and byte ptr [rdi + r9 + 0x4c], cl ; ret 0x8348
0x0000020000009135 : and byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000279bf : and byte ptr [rdi + rcx + 0x45], al ; rol byte ptr [rcx - 0x75], 1 ; ret 0x8d48
0x00000200005f1632 : and byte ptr [rdi + rcx + 0x4c], cl ; ret 0x8348
0x00000200003cbc38 : and byte ptr [rdi + rcx - 0x51], cl ; ret 0xaf0f
0x000002000049f8ce : and byte ptr [rdi + rcx - 0x51], cl ; ret 0xc149
0x0000020000629188 : and byte ptr [rdi - 0x17], bl ; jno 0x200006291d0 ; ret 0xb9ff
0x0000020000457ffe : and byte ptr [rdi - 0x17], bl ; jnp 0x20000458058 ; ret 0xbaff
0x00000200004e33d3 : and byte ptr [rdi - 0x17], bl ; ret 0xc064
0x00000200001e7897 : and byte ptr [rdi - 0x17], bl ; ret 0xeba9
0x000002000010e6d1 : and byte ptr [rdi - 0x3d], bl ; jmp 0x2000010e69d
0x0000020000442474 : and byte ptr [rdi - 0x3d], bl ; lea rcx, qword ptr [rax - 0x10] ; jmp 0x20000442448
0x000002000012c711 : and byte ptr [rdi - 0x3d], bl ; mov rdx, r8 ; call qword ptr [rbx]
0x00000200000191a7 : and byte ptr [rdi - 0x3d], bl ; or al, dl ; jmp 0x2000001917e
0x0000020000074655 : and byte ptr [rdi - 0x3d], bl ; test byte ptr [r8], 0x20 ; jne 0x20000074668 ; ret
0x000002000001a617 : and byte ptr [rdi - 0x3d], bl ; test sil, sil ; jne 0x2000001a5e8 ; jmp 0x2000001a605
0x00000200004ae0f4 : and byte ptr [rdi - 0x74b7ffd7], bl ; ret
0x00000200007b8323 : and byte ptr [rdi], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200007cd11a : and byte ptr [rdi], bl ; add byte ptr [rdx], al ; add al, ch ; cwde ; stosb byte ptr [rdi], al ; ret 0x8bff
0x00000200007d0e0a : and byte ptr [rdi], bl ; add byte ptr [rdx], al ; add al, ch ; test al, 0x6d ; ret 0x8bff
0x000002000001b2ae : and byte ptr [rdi], ch ; add byte ptr [rcx + 0x3b], cl ; ret 0xf41
0x00000200004f130a : and byte ptr [rdi], cl ; add byte ptr [rbp - 0x3f60f040], al ; ret
0x00000200003e58d8 : and byte ptr [rdi], cl ; mov bh, 0x47 ; and byte ptr [rbx], ah ; ret 0xe0c1
0x000002000043459b : and byte ptr [rdi], cl ; mov edx, 0x107210e2 ; ret
0x00000200000bba6a : and byte ptr [rdi], cl ; ret 0x8841
0x00000200004e4492 : and byte ptr [rdi], cl ; test dword ptr [rax], ebp ; ret 0xf
0x0000020000491052 : and byte ptr [rdi], cl ; test dword ptr [rax], ecx ; ret
0x00000200004825ba : and byte ptr [rdi], cl ; test dword ptr [rcx - 0x9fffffe], esi ; ret
0x0000020000526322 : and byte ptr [rdi], cl ; test dword ptr [rip - 0x74fff6f0], ebx ; ret 0x6b48
0x00000200005cab40 : and byte ptr [rdi], cl ; test dword ptr [rsi], eax ; ret
0x00000200004c941b : and byte ptr [rdi], cl ; test ebx, esi ; add al, 0 ; add dh, dh ; ret
0x0000020000215c7f : and byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200006259da : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3d80
0x0000020000663531 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe8c1
0x00000200004c0aa2 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b44
0x00000200003d1a21 : and byte ptr [rdi], cl ; xor byte ptr [rcx - 0x76], al ; ret 0xf41
0x00000200003d00b4 : and byte ptr [rdi], cl ; xor byte ptr [rcx - 1], al ; ret
0x00000200005cab3f : and byte ptr [rdi], r9b ; test dword ptr [rsi], eax ; ret
0x0000020000051a78 : and byte ptr [rdx + 0x21], cl ; ret 0x4818
0x0000020000724a47 : and byte ptr [rdx + 0x50], bh ; call 0x20000140d24
0x000002000021198f : and byte ptr [rdx + 3], dh ; xor al, al ; ret
0x00000200005c7d8f : and byte ptr [rdx + rax], bh ; add byte ptr [rbp - 0x75], cl ; ret 0x4a8d
0x0000020000052595 : and byte ptr [rdx + rbx - 0xa], dh ; ret
0x00000200003e5edf : and byte ptr [rdx + rcx*4 - 0x7f], al ; ret 6
0x00000200005692cc : and byte ptr [rdx + rdi*8 - 1], dh ; add rsp, 0x28 ; ret
0x0000020000016759 : and byte ptr [rdx + rdx - 1], dh ; ret
0x0000020000213aa1 : and byte ptr [rdx - 0x18], dh ; mov rax, r8 ; ret
0x00000200000edea9 : and byte ptr [rdx - 0x74b38fbf], cl ; ret 0x8b48
0x000002000013adca : and byte ptr [rdx - 0x75], al ; ret
0x00000200001a94cc : and byte ptr [rdx - 0xc], bh ; dec dword ptr [rax - 0x75] ; shr eax, cl ; cwde ; ret 0xffe7
0x00000200000ac77d : and byte ptr [rdx], al ; add al, al ; add rsp, 0x10 ; pop rdi ; ret
0x000002000067ad6b : and byte ptr [rdx], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000045a7d5 : and byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; clc ; call rsi
0x00000200005bea15 : and byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; cli ; call rsi
0x00000200006d95f5 : and byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; cmc ; call rsi
0x00000200006dac94 : and byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; stc ; call rdi
0x00000200006a912c : and byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000009540 : and byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000020000225461 : and byte ptr [rdx], bh ; ret 0x675
0x000002000070f3df : and byte ptr [rdx], bl ; ret
0x0000020000225460 : and byte ptr [rdx], dil ; ret 0x675
0x0000020000057573 : and byte ptr [rip + 0x3d8d4800], dh ; ret
0x0000020000689346 : and byte ptr [rip - 0x7ffffffb], ah ; ret
0x00000200003e58d1 : and byte ptr [rsi + 0x23], ah ; ret 0x3166
0x00000200007d0b31 : and byte ptr [rsi + 0x2b], ah ; ret
0x000002000016dea6 : and byte ptr [rsi + 0x45], ah ; add dword ptr [rcx + 0x6e], eax ; ret
0x00000200000f35bc : and byte ptr [rsi + 0xb], 0 ; ret
0x000002000007d387 : and byte ptr [rsi + 0xf], ah ; jae 0x2000007d36c ; or byte ptr [rax - 0x75], cl ; ret
0x000002000007d3ec : and byte ptr [rsi + 0xf], ah ; jae 0x2000007d3d1 ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000419b8c : and byte ptr [rsi + 0xf], ah ; out dx, eax ; ret 0xf66
0x0000020000419b8b : and byte ptr [rsi + 0xf], spl ; out dx, eax ; ret 0xf66
0x000002000047f7b0 : and byte ptr [rsi - 0x17000000], dl ; call qword ptr [rdx]
0x00000200006f75b7 : and byte ptr [rsi - 0x2f], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005fde72 : and byte ptr [rsi - 0x74b3000a], dh ; ret 0x8b48
0x000002000013bb55 : and byte ptr [rsi - 0x77], ah ; or ecx, dword ptr [rax - 0x7d] ; ret
0x000002000047832f : and byte ptr [rsi - 0x7d], ah ; ret 0x6604
0x0000020000679772 : and byte ptr [rsi - 1], ah ; ret 0xb70f
0x000002000050a7bd : and byte ptr [rsi], cl ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200006eee09 : and byte ptr [rsi], cl ; call qword ptr [rdx]
0x00000200005abca7 : and byte ptr [rsp + rbx - 0xa], dh ; ret 0x7410
0x000002000002c2c0 : and byte ptr gs:[rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x000002000017ea7c : and ch, 0xc ; add byte ptr [rbx], dh ; shr cl, 0x15 ; ret 0xffec
0x00000200007177cb : and ch, bl ; or al, 0x8b ; ret
0x000002000050315e : and ch, byte ptr [rax + 0xe] ; add bh, bh ; ret 0xe2eb
0x000002000050844a : and ch, byte ptr [rax] ; ret
0x00000200004b7807 : and ch, byte ptr [rbx] ; ret
0x00000200007d639b : and ch, cl ; ret 0xfff5
0x00000200000bfdaa : and ch, dh ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xdc3
0x000002000003d4f0 : and cl, 0xf0 ; cmp cl, 0x30 ; sete al ; ret
0x0000020000050d35 : and cl, 1 ; mov al, cl ; ret
0x000002000003a65c : and cl, 7 ; cmp cl, 1 ; sete al ; ret
0x00000200001717e5 : and cl, bh ; dec dword ptr [rax - 0x75] ; ret
0x00000200000c7afa : and cl, byte ptr [rax - 0x73] ; adc byte ptr [r8 + 0x3b], cl ; ret 0x1e77
0x0000020000451e78 : and cl, byte ptr [rax - 0x75] ; ret
0x00000200007b9170 : and cl, byte ptr [rax - 0x75] ; ret 0x8d48
0x0000020000798049 : and cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x000002000071dd6b : and cl, byte ptr [rax - 9] ; ret
0x000002000062c7da : and cl, byte ptr [rax] ; ret 0x8bff
0x0000020000543a23 : and cl, byte ptr [rbp - 0x75] ; and byte ptr [rcx - 0x75], al ; ret 0xc148
0x0000020000798f66 : and cl, byte ptr [rbx + 0x3480843] ; ret
0x000002000003a7c7 : and cl, byte ptr [rbx + 0xa891] ; add dh, dh ; ret 0x7501
0x00000200000a5292 : and cl, byte ptr [rcx - 0x75] ; ret
0x000002000004cebb : and cl, byte ptr [rcx - 0x75] ; sbb byte ptr [r8 + 0x23], r9b ; ret 0xb49
0x0000020000425ba0 : and cl, byte ptr [rcx - 0x77] ; push rsi ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000002000013e5f4 : and cl, byte ptr [rcx - 0x7d] ; ret 0x4508
0x0000020000150f2c : and cl, byte ptr [rcx - 1] ; ret 0xc9ff
0x0000020000413b8a : and cl, byte ptr [rip + 0x33450018] ; in al, -0xa ; ret
0x00000200005852d7 : and cl, ch ; lahf ; jo 0x200005852c9 ; push rsi ; ret
0x00000200005caade : and cl, ch ; push rdx ; ret 0xffeb
0x000002000006c079 : and cl, ch ; ret
0x000002000061f11c : and cl, ch ; ret 0x33ff
0x0000020000194b49 : and cl, ch ; ret 0xf0d1
0x000002000005d02d : and cl, ch ; xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x0000020000196432 : and cl, dh ; push rsi ; ret
0x000002000016df08 : and cx, dx ; mov word ptr [r9 + 0x68], cx ; ret
0x00000200000f7365 : and cx, r9w ; jmp qword ptr [r10 + rax*8]
0x00000200005df43a : and dh, al ; dec dword ptr [rax - 0x75] ; retf ; call 0x2000020bcc1
0x00000200004b67eb : and dh, bh ; ret
0x00000200000f7909 : and dh, bh ; ret 0xc933
0x00000200005c909c : and dh, bl ; ret
0x00000200004c33e0 : and dh, byte ptr [rbx] ; ret 0x8d4c
0x000002000052cb5d : and dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], 0x74 ; ret
0x0000020000039ea5 : and dh, dh ; ret
0x00000200001a1e1e : and dh, dh ; ret 0x7402
0x00000200006996b9 : and dh, dh ; ret 0x7403
0x00000200001e01fa : and dh, dh ; ret 0x7420
0x00000200000478d9 : and dh, dh ; ret 0x7502
0x000002000047636b : and dh, dh ; ret 0x7504
0x00000200001b1a43 : and dh, dh ; ret 0x7508
0x00000200001ca081 : and dh, dh ; ret 0x750f
0x00000200000a53b8 : and dh, dh ; ret 0x7510
0x00000200000de543 : and dh, dh ; ret 0xf01
0x0000020000195d4c : and dh, dh ; ret 0xf02
0x000002000047befa : and dh, dh ; ret 0xf04
0x0000020000042ed1 : and dh, dh ; ret 0xf0f
0x00000200001ff104 : and dh, dh ; rol dword ptr [rcx], 0x75 ; or dword ptr [rax + rdi + 0x25], eax ; ret
0x000002000022945c : and dh, dl ; dec esp ; mov eax, 0x10 ; ret
0x00000200001b137d : and dil, dil ; ret 0x3b41
0x00000200001b1303 : and dil, dil ; ret 0x533b
0x00000200004dbf6f : and dl, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200000b7ab8 : and dl, byte ptr [rax] ; ret
0x0000020000125d02 : and dl, byte ptr [rbx] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000012293a : and dl, byte ptr [rdi - 4] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000010c27 : and dl, byte ptr [rip - 0x3d7cb700] ; or byte ptr [rcx - 9], cl ; ret 0xfff
0x00000200004fdb4a : and dl, cl ; ret
0x000002000020f7a7 : and dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000115500 : and dword ptr [r10], eax ; ret
0x00000200001db2da : and dword ptr [r11], r10d ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000119a67 : and dword ptr [r13 + 1], esi ; ret
0x000002000021dd33 : and dword ptr [r8 + 0x28], 0 ; ret
0x00000200003fa345 : and dword ptr [r8], 0 ; ret
0x00000200006aae83 : and dword ptr [r8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005b16a0 : and dword ptr [r8], eax ; ret
0x000002000016df3c : and dword ptr [r9 + 0x68], edx ; mov qword ptr [r9 + 0x70], rax ; ret
0x000002000022d96e : and dword ptr [r9], 0 ; ret
0x000002000070e2ad : and dword ptr [rax + 0x10], 0 ; ret
0x00000200000de479 : and dword ptr [rax + 0x18], 0 ; mov byte ptr [rax + 0x44], 1 ; ret
0x000002000021dd34 : and dword ptr [rax + 0x28], 0 ; ret
0x00000200001e3f55 : and dword ptr [rax + 0x3b], ecx ; ret 0xd077
0x00000200005340c4 : and dword ptr [rax + 0x48000005], 0xffffff81 ; ret
0x000002000003e2ca : and dword ptr [rax + 0x586c], 0 ; sti ; ret
0x00000200007c2355 : and dword ptr [rax + 0xc], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001e198c : and dword ptr [rax + 1], edi ; ret
0x00000200004e6f47 : and dword ptr [rax + 6], 0x3480000 ; ret 0x3d48
0x00000200004e454d : and dword ptr [rax + 6], 0x3b480000 ; ret 0x1472
0x00000200004e4561 : and dword ptr [rax + 6], 0xe3750000 ; xor eax, eax ; ret
0x000002000017e3b1 : and dword ptr [rax + 8], 0x84410000 ; ret 0x840f
0x000002000017eaab : and dword ptr [rax - 0x166f000d], ebp ; ret
0x00000200000e63d7 : and dword ptr [rax - 0x75], ecx ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000014047 : and dword ptr [rax - 0x75], ecx ; ret 0x3b48
0x00000200001df47d : and dword ptr [rax - 0x75], ecx ; ret 0x8b4c
0x000002000067b353 : and dword ptr [rax], 0 ; add rsp, 0x38 ; ret
0x00000200004f0e97 : and dword ptr [rax], 0 ; jmp 0x200004f0e62
0x000002000016ecd2 : and dword ptr [rax], 0 ; ret
0x0000020000209f49 : and dword ptr [rax], 0xfb00002d ; xor eax, eax ; ret
0x000002000005b241 : and dword ptr [rax], eax ; add al, al ; add rsp, 0x28 ; ret
0x00000200002009a5 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000013fa82 : and dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200006aae84 : and dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000245e4 : and dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200000f3e62 : and dword ptr [rax], eax ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x00000200007b5175 : and dword ptr [rax], eax ; and qword ptr [rcx + 0x10], 0 ; ret
0x000002000056966d : and dword ptr [rax], eax ; and qword ptr [rcx + 8], 0 ; ret
0x000002000069cdcc : and dword ptr [rax], eax ; call 0x2000008eedd
0x00000200006ff223 : and dword ptr [rax], eax ; mov eax, 0xc00000bb ; ret
0x0000020000044ce2 : and dword ptr [rax], eax ; mov qword ptr [rcx + 8], rcx ; ret
0x00000200001fb615 : and dword ptr [rax], eax ; mov rsi, rcx ; jmp 0x200001fb683
0x000002000002ea02 : and dword ptr [rax], eax ; ret
0x00000200001020e8 : and dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000012405c : and dword ptr [rax], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d2785 : and dword ptr [rax], edx ; mov eax, 0xc0000001 ; ret
0x00000200001d2784 : and dword ptr [rax], r10d ; mov eax, 0xc0000001 ; ret
0x00000200004ba7bc : and dword ptr [rbp + 0x58], 0 ; call 0x20000056a8e
0x0000020000119a68 : and dword ptr [rbp + 1], esi ; ret
0x0000020000712bcb : and dword ptr [rbp + 4], 0x8b4ccc00 ; ret 0x8b48
0x00000200007ca643 : and dword ptr [rbp + rcx*4 + 5], ecx ; ret
0x00000200007d0dd1 : and dword ptr [rbp - 0x10], 0 ; call 0x200003f8b5b
0x00000200007b0623 : and dword ptr [rbp - 0x10], 0 ; call qword ptr [rdi]
0x000002000000fa6a : and dword ptr [rbx + 0x10], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000023681b : and dword ptr [rbx + 0x10], 0 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004e8fe9 : and dword ptr [rbx + 0x18], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000711c08 : and dword ptr [rbx + 0x18], 0 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000042956 : and dword ptr [rbx + 0x18], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011b4af : and dword ptr [rbx + 0x28], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002bf81 : and dword ptr [rbx + 0x30], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000456639 : and dword ptr [rbx + 0x37f52f8], eax ; mov al, 1 ; ret
0x00000200000a2733 : and dword ptr [rbx + 0x48000005], 0xffffff8b ; ret 0x3b4c
0x0000020000662a04 : and dword ptr [rbx + 0x50], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ac107 : and dword ptr [rbx + 0x58], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000695d51 : and dword ptr [rbx + 0x78], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000695dd0 : and dword ptr [rbx + 0x7c], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003b82e : and dword ptr [rbx + 0xc], 0 ; mov eax, edx ; jmp 0x2000003b821
0x0000020000455637 : and dword ptr [rbx + 8], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e7bd4 : and dword ptr [rbx + rcx*4 + 0x47], eax ; sbb al, 0x8b ; ret 0xc148
0x000002000040c465 : and dword ptr [rbx - 0x10], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001db7cb : and dword ptr [rbx - 0x15], edx ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200000f7dd7 : and dword ptr [rbx - 0x6af0beff], esi ; ret
0x000002000003d375 : and dword ptr [rbx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000683751 : and dword ptr [rbx], 0 ; add rsp, 0x60 ; pop rbx ; ret
0x000002000067c1a1 : and dword ptr [rbx], ecx ; ret
0x0000020000518cec : and dword ptr [rbx], ecx ; ret 0x4389
0x00000200001db2db : and dword ptr [rbx], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200007d6fdb : and dword ptr [rbx], esi ; ret
0x000002000021c46a : and dword ptr [rcx + 0x1028], 0xfffffffe ; ret
0x00000200007b5178 : and dword ptr [rcx + 0x10], 0 ; ret
0x0000020000044da0 : and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x00000200001bba83 : and dword ptr [rcx + 0x18], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000433fdd : and dword ptr [rcx + 0x1d2], 0 ; ret
0x000002000040f666 : and dword ptr [rcx + 0x20], 0 ; ret
0x00000200000802a7 : and dword ptr [rcx + 0x20], 0xff ; ret
0x000002000040f686 : and dword ptr [rcx + 0x30], 0 ; ret
0x0000020000452a19 : and dword ptr [rcx + 0x3b0], eax ; ret
0x00000200001ad909 : and dword ptr [rcx + 0x3b], eax ; or byte ptr [rdx - 0x22], dh ; ret
0x00000200001bbaa3 : and dword ptr [rcx + 0x60], 0 ; ret
0x000002000004441d : and dword ptr [rcx + 0x68], 0 ; add rax, -0x20 ; ret
0x000002000016df3d : and dword ptr [rcx + 0x68], edx ; mov qword ptr [r9 + 0x70], rax ; ret
0x0000020000139d0e : and dword ptr [rcx + 0x6c0], 0xffffffef ; ret
0x0000020000044dad : and dword ptr [rcx + 0x70], 0 ; mov qword ptr [rcx + 0x68], rax ; ret
0x00000200001c9800 : and dword ptr [rcx + 0x70], 0 ; ret
0x0000020000678cbe : and dword ptr [rcx + 0xb08], 0 ; ret
0x00000200001ba055 : and dword ptr [rcx + 0xc], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c26b7 : and dword ptr [rcx + 0xc], 0 ; and dword ptr [rcx + 8], 0 ; ret
0x000002000002f83f : and dword ptr [rcx + 0xf], eax ; mov dh, 4 ; adc cl, byte ptr [rcx - 1] ; ret 0x103
0x0000020000247525 : and dword ptr [rcx + 3], eax ; ror byte ptr [rax + 0x63], 1 ; ret 0x8d48
0x000002000002814a : and dword ptr [rcx + 4], 0 ; mov al, r8b ; ret
0x0000020000043978 : and dword ptr [rcx + 4], 0 ; ret
0x0000020000424009 : and dword ptr [rcx + 8], 0 ; ret
0x000002000003d6ac : and dword ptr [rcx + 8], eax ; ret
0x00000200001d4708 : and dword ptr [rcx + rax*8 + 8], eax ; ret
0x0000020000239d4d : and dword ptr [rcx + rax*8], 0 ; mov al, 1 ; ret
0x00000200003e7237 : and dword ptr [rcx + rax], edi ; je 0x200003e726c ; jmp 0x200005834d9
0x00000200005a79f3 : and dword ptr [rcx - 0x17], edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006215ac : and dword ptr [rcx - 0x18], 0xfffffff7 ; ret
0x00000200006bac6a : and dword ptr [rcx - 0x3c32d0c3], eax ; call qword ptr [rax]
0x00000200003deac1 : and dword ptr [rcx - 0x75], ecx ; ret
0x00000200005a09f2 : and dword ptr [rcx - 0x78], eax ; or cl, byte ptr [rcx - 1] ; ret 0xc883
0x00000200001241f2 : and dword ptr [rcx - 1], 0xffffffff ; dec dword ptr [rax - 0x75] ; ret 0xd348
0x00000200000245e3 : and dword ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x00000200007b5174 : and dword ptr [rcx], 0 ; and qword ptr [rcx + 0x10], 0 ; ret
0x000002000056966c : and dword ptr [rcx], 0 ; and qword ptr [rcx + 8], 0 ; ret
0x00000200006ff222 : and dword ptr [rcx], 0 ; mov eax, 0xc00000bb ; ret
0x0000020000044ce1 : and dword ptr [rcx], 0 ; mov qword ptr [rcx + 8], rcx ; ret
0x000002000002ea01 : and dword ptr [rcx], 0 ; ret
0x000002000041f1f7 : and dword ptr [rcx], 0xfffffff ; ret
0x00000200006eb1d0 : and dword ptr [rcx], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000002ad8f : and dword ptr [rcx], eax ; ret
0x00000200001fc1c3 : and dword ptr [rcx], edx ; ret
0x00000200007ae397 : and dword ptr [rdi + 0x18e8ffcb], edx ; push rsp ; ret 0x48ff
0x000002000001ea69 : and dword ptr [rdi + 0x38], 0xfffffffb ; jmp 0x2000001ea37
0x00000200000ca9cc : and dword ptr [rdi + 0x49000002], 0xffffff8b ; ret
0x0000020000038cc8 : and dword ptr [rdx + 0x18], 0 ; ret
0x000002000045685a : and dword ptr [rdx + 0x78], 0 ; or dword ptr [rax + 8], 0x20 ; ret
0x00000200001254b5 : and dword ptr [rdx + 0x7b], 5 ; add bh, bh ; ret 0x1589
0x000002000061c4a0 : and dword ptr [rdx + 0x88], 0 ; ret
0x000002000061c4e8 : and dword ptr [rdx + 0x90], 0 ; ret
0x000002000054e18e : and dword ptr [rdx + 8], ecx ; ret
0x000002000021c2d1 : and dword ptr [rdx + rax*2], ecx ; ret
0x000002000000279d : and dword ptr [rdx - 1], 0xffffffff ; dec dword ptr [rax - 0x75] ; ret 0xd348
0x000002000003c38d : and dword ptr [rdx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003fa342 : and dword ptr [rdx], 0 ; and dword ptr [r8], 0 ; ret
0x0000020000547ad4 : and dword ptr [rdx], 0 ; mov eax, 0x8000001a ; ret
0x000002000020fee8 : and dword ptr [rdx], 0 ; mov eax, 0xc0000001 ; ret
0x00000200003d7fbe : and dword ptr [rdx], 0 ; mov eax, 0xc00000bb ; ret
0x000002000041100d : and dword ptr [rdx], 0 ; xor eax, eax ; ret
0x00000200006d52b9 : and dword ptr [rdx], 0xffffffa8 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000020f7a8 : and dword ptr [rdx], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000115501 : and dword ptr [rdx], eax ; ret
0x00000200001bbc1d : and dword ptr [rip + 0x1ed609], eax ; ret
0x000002000070aa43 : and dword ptr [rip + 0x22666], 0 ; ret
0x000002000045697c : and dword ptr [rip - 0x134613], 0 ; ret
0x00000200005128a6 : and dword ptr [rip - 0x1edad5], 0 ; ret
0x00000200005392d9 : and dword ptr [rip - 0x217a80], 0 ; ret
0x00000200005fe057 : and dword ptr [rip - 0x2d977e], 0 ; ret
0x00000200007d5fb9 : and dword ptr [rip - 0x4997f0], 0 ; ret
0x000002000045d0af : and dword ptr [rip - 0x7cb7ffea], edx ; ret 0xf02
0x0000020000172fe8 : and dword ptr [rsi - 7], ecx ; inc dword ptr [rcx - 0x75] ; ret
0x00000200007ba231 : and dword ptr [rsi], 0 ; jmp 0x200007ba1fc
0x00000200000b851d : and dword ptr [rsi], ecx ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000517494 : and dword ptr [rsp + 0x20], 0 ; call 0x2000007378f
0x0000020000449505 : and dword ptr [rsp + 0x20], 0 ; call 0x20000073790
0x00000200006e1985 : and dword ptr [rsp + 0x20], 0 ; call r10
0x0000020000430151 : and dword ptr [rsp + 0x20], 0 ; call r11
0x000002000013fb84 : and dword ptr [rsp + 8], ecx ; ldmxcsr dword ptr [rsp + 8] ; ret
0x000002000003affc : and eax, 0x10001 ; ret
0x000002000043d904 : and eax, 0x101 ; add rsp, 0x28 ; ret
0x00000200001d64cb : and eax, 0x128 ; ret
0x000002000013bfe1 : and eax, 0x157 ; ret
0x00000200000c47af : and eax, 0x15850f00 ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200003e7757 : and eax, 0x188 ; call 0x20000008db8
0x0000020000475b42 : and eax, 0x188 ; call 0x20000061dc7
0x0000020000433f91 : and eax, 0x188 ; call 0x20000061dc8
0x000002000043268b : and eax, 0x188 ; call 0x200000be967
0x00000200005acd14 : and eax, 0x188 ; call 0x200001d36d4
0x0000020000627a58 : and eax, 0x188 ; mov rax, qword ptr [rax + 0x28] ; ret
0x000002000020b8f0 : and eax, 0x188 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000002000020b8e0 : and eax, 0x188 ; mov rax, qword ptr [rax + 0x38] ; ret
0x000002000001be30 : and eax, 0x188 ; ret
0x0000020000548b43 : and eax, 0x189b800 ; add al, al ; ret
0x000002000041df82 : and eax, 0x1f ; ret
0x000002000014f19b : and eax, 0x20 ; call 0x200000eb3e7
0x00000200001eab2c : and eax, 0x20 ; inc eax ; add rsp, 0x28 ; ret
0x00000200001014ec : and eax, 0x20158e ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000075c24 : and eax, 0x2aefbe ; dec byte ptr [rax - 0x75] ; ret
0x00000200000100be : and eax, 0x2b4c0031 ; ret 0x894c
0x00000200001b9beb : and eax, 0x2e44 ; ret
0x000002000043432b : and eax, 0x2e48 ; ret
0x000002000044ef27 : and eax, 0x2e4c ; ret
0x000002000002de8b : and eax, 0x2e70 ; ret
0x00000200006ff497 : and eax, 0x2f6c ; and eax, 1 ; ret
0x00000200004e5bd3 : and eax, 0x33000fb0 ; fisttp dword ptr [rax - 0x75] ; ret
0x0000020000025646 : and eax, 0x3410014 ; ret 0xb70f
0x00000200006eee1a : and eax, 0x3820125c ; call qword ptr [rdx]
0x000002000013fb4d : and eax, 0x3f ; add rsp, 0x28 ; ret
0x00000200006d6ab6 : and eax, 0x41c00002 ; mov eax, edx ; ret
0x000002000069e435 : and eax, 0x46 ; ret
0x00000200000bb357 : and eax, 0x4800095f ; add esp, 0x20 ; pop rbx ; ret
0x00000200004e9edb : and eax, 0x48000f79 ; add esp, 0x20 ; pop rbx ; ret
0x000002000002675d : and eax, 0x4800141a ; add esp, 0x20 ; pop rbx ; ret
0x0000020000152a27 : and eax, 0x48001a6e ; add esp, 8 ; ret
0x00000200006048a8 : and eax, 0x48498b48 ; add eax, dword ptr [rcx + 8] ; ret
0x00000200001123ed : and eax, 0x48800000 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000124290 : and eax, 0x48c00002 ; add esp, 0x20 ; pop rbx ; ret
0x000002000045374d : and eax, 0x48c00002 ; add esp, 0x20 ; pop rdi ; ret
0x00000200000c5dcc : and eax, 0x48c00002 ; add esp, 0x28 ; ret
0x0000020000470836 : and eax, 0x48c00002 ; mov ebx, dword ptr [rsp + 8] ; ret
0x000002000070dbc3 : and eax, 0x48ffa0ce ; jmp rax
0x00000200006769ab : and eax, 0x48ffed49 ; add esp, 0x28 ; ret
0x00000200000921f3 : and eax, 0x48fffffd ; add esp, 0x28 ; ret
0x000002000016ecf7 : and eax, 0x4d890018 ; ret
0x0000020000123217 : and eax, 0x5e04 ; ret
0x000002000002106e : and eax, 0x5e38 ; call 0x2000006d287
0x00000200001b9bf7 : and eax, 0x5e40 ; ret
0x0000020000512836 : and eax, 0x5ee8ffe1 ; ret 0xffbe
0x0000020000157bad : and eax, 0x6348c300 ; ror dword ptr [rax - 0x77], 2 ; ret
0x00000200003f26f3 : and eax, 0x74c00002 ; and al, 0x8b ; ret
0x00000200003f43ff : and eax, 0x74c00002 ; jbe 0x200003f4398 ; ret
0x000002000013c664 : and eax, 0x7fff ; ret
0x000002000013c041 : and eax, 0x80 ; ret
0x000002000053258a : and eax, 0x80000005 ; pop r14 ; ret
0x00000200004279de : and eax, 0x80000005 ; ret
0x00000200006e6c78 : and eax, 0x840fffcc ; ret
0x00000200000f607f : and eax, 0x85000004 ; ror byte ptr [rdi], 0x88 ; ret
0x00000200007a961e : and eax, 0x8a0001e5 ; ret
0x000002000045e3ff : and eax, 0x8b000000 ; ret
0x0000020000549467 : and eax, 0x8b000009 ; ret
0x000002000001dc90 : and eax, 0x8b00147d ; ret
0x00000200005d0d37 : and eax, 0x8b41ffed ; salc ; call 0x2000024d008
0x00000200005d0d36 : and eax, 0x8b41ffed ; salc ; call 0x2000024d009
0x000002000071adb6 : and eax, 0x8b480001 ; ret
0x000002000005c2ef : and eax, 0x8b480010 ; ret
0x0000020000045351 : and eax, 0x8b480011 ; ret
0x0000020000495006 : and eax, 0x8b48ffcc ; ret
0x00000200001969e6 : and eax, 0x8b48fff1 ; ret 0xc148
0x0000020000465b21 : and eax, 0x8b49ffc8 ; iretd ; call 0x20000061dc8
0x000002000004cf28 : and eax, 0x8b4c0013 ; sbb byte ptr [r8 - 0x75], r9b ; ret
0x000002000010a2ed : and eax, 0x8bc00002 ; ret
0x000002000079a4bb : and eax, 0x8bff95e0 ; ret
0x0000020000693ed7 : and eax, 0x8bffbb91 ; ret
0x00000200004c1fd7 : and eax, 0x8bfff5eb ; ret
0x0000020000176163 : and eax, 0x90fffa63 ; jmp 0x20000112377
0x0000020000464d93 : and eax, 0xb60fcc00 ; ret 0x8489
0x00000200004f0b5b : and eax, 0xb70f000f ; ret 0x3966
0x00000200004f0b3a : and eax, 0xb70f000f ; ret 0xc0ff
0x00000200006eeea6 : and eax, 0xbc20125c ; call qword ptr [rdx]
0x0000020000027bf6 : and eax, 0xc0000000 ; cmp eax, ecx ; ja 0x20000027c09 ; ret
0x000002000054bcd3 : and eax, 0xc0000000 ; lea rax, qword ptr [rax + rcx*8] ; ret
0x00000200001beacf : and eax, 0xc0000001 ; add rsp, 0x28 ; ret
0x000002000005b316 : and eax, 0xc0000001 ; ret
0x00000200005332b3 : and eax, 0xc0000004 ; ret
0x0000020000091f0e : and eax, 0xc000000d ; add rsp, 0x28 ; ret
0x000002000062b4a1 : and eax, 0xc000000d ; add rsp, 0x48 ; ret
0x00000200000fc97f : and eax, 0xc000000d ; ret
0x00000200000fbc64 : and eax, 0xc000000e ; add rsp, 0x28 ; ret
0x000002000005b240 : and eax, 0xc0000021 ; add rsp, 0x28 ; ret
0x000002000001fa18 : and eax, 0xc0000022 ; ret
0x00000200001bc25e : and eax, 0xc0000023 ; mov dword ptr [rcx], r8d ; ret
0x00000200003f0f42 : and eax, 0xc0000033 ; add rsp, 0x28 ; ret
0x0000020000452f40 : and eax, 0xc0000034 ; ret
0x000002000062af61 : and eax, 0xc000004b ; ret
0x000002000044a573 : and eax, 0xc0000061 ; jmp 0x2000044a543
0x0000020000666424 : and eax, 0xc0000099 ; add rsp, 0x28 ; ret
0x0000020000078b77 : and eax, 0xc00000a4 ; add rsp, 0x48 ; ret
0x00000200004c7ecc : and eax, 0xc00000a5 ; ret
0x000002000043e260 : and eax, 0xc00000bb ; ret
0x00000200006aeff5 : and eax, 0xc0000272 ; add rsp, 0x38 ; ret
0x000002000040c403 : and eax, 0xc0190001 ; add rsp, 0x28 ; ret
0x0000020000461f61 : and eax, 0xc148ffec ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200007b6cc7 : and eax, 0xc3ff8dda ; xor eax, eax ; ret
0x00000200006eee06 : and eax, 0xe20125c ; call qword ptr [rdx]
0x00000200004aa184 : and eax, 0xe8cb8b48 ; rcr esi, cl ; ret
0x0000020000176113 : and eax, 0xe9800000 ; pop rsi ; ret 0xfff9
0x000002000065664c : and eax, 0xe9c00002 ; ret 0
0x00000200007ac236 : and eax, 0xebc00002 ; ret
0x0000020000500b50 : and eax, 0xebc00002 ; ret 0x8d48
0x0000020000160427 : and eax, 0xfd00348 ; mov dh, 0x45 ; ret
0x0000020000600c06 : and eax, 0xff000009 ; ret 0xb841
0x0000020000135658 : and eax, 0xff118945 ; ret 0x8b41
0x000002000072aebd : and eax, 0xffbce065 ; add cl, ch ; ret
0x000002000079a872 : and eax, 0xfffae420 ; add al, ch ; ret
0x0000020000053a49 : and eax, 0xfffff ; ret
0x0000020000218ba3 : and eax, 0xfffff000 ; ret
0x00000200004344cd : and eax, 0xfffffff0 ; add ebx, eax ; jmp 0x20000434499
0x00000200001b3820 : and eax, 0xfffffff0 ; ret
0x0000020000118bde : and eax, 0xfffffff8 ; shr eax, 3 ; add eax, 0x48 ; ret
0x0000020000118e7b : and eax, 0xfffffff8 ; shr eax, 3 ; ret
0x000002000000954a : and eax, 0xfffffff9 ; ret
0x00000200006c7469 : and eax, 0xfffffffa ; add eax, 7 ; ret
0x00000200004ca5c8 : and eax, 0xfffffffc ; add eax, edx ; ret
0x00000200000343cd : and eax, 0xfffffffc ; jne 0x200000343de ; mov qword ptr [r9], r8 ; ret
0x000002000014ba1c : and eax, 0xfffffffc ; or eax, r8d ; wrmsr ; ret
0x000002000007c767 : and eax, 0xfffffffc ; ret
0x000002000014bb83 : and eax, 0xfffffffc ; wrmsr ; ret
0x00000200005696a6 : and eax, 0xfffffffe ; add rax, r8 ; ret
0x00000200005fabb1 : and eax, 0xfffffffe ; inc eax ; ret
0x000002000045396a : and eax, 0xfffffffe ; ret
0x0000020000041418 : and eax, 1 ; add eax, dword ptr [rdx + 0x268] ; ret
0x0000020000032bf6 : and eax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000dbae0 : and eax, 1 ; add rsp, 0x28 ; ret
0x0000020000628727 : and eax, 1 ; mov byte ptr [rcx + 3], al ; xor eax, eax ; ret
0x00000200003e47dc : and eax, 1 ; mov eax, dword ptr [rdx + rax*4] ; sub eax, r8d ; ret
0x00000200001eab44 : and eax, 1 ; or eax, edx ; ret
0x0000020000097a08 : and eax, 1 ; pop rcx ; ret
0x000002000002b12b : and eax, 1 ; ret
0x000002000004e0a8 : and eax, 2 ; add rsp, 0x28 ; ret
0x0000020000120036 : and eax, 2 ; dec eax ; ret
0x0000020000130122 : and eax, 2 ; mov dword ptr [rip + 0x1f51f1], eax ; ret
0x00000200000b8950 : and eax, 2 ; ret
0x000002000061015b : and eax, 3 ; ret
0x0000020000007ed1 : and eax, 4 ; ret
0x000002000011dc5c : and eax, 7 ; mov eax, r8d ; ret
0x00000200000bb972 : and eax, 7 ; ret
0x000002000013c001 : and eax, 8 ; ret
0x000002000022d96a : and eax, dword ptr [rax] ; add al, al ; and dword ptr [r9], 0 ; ret
0x000002000044136e : and eax, dword ptr [rax] ; add al, al ; jmp 0x2000044133b
0x00000200005062fe : and eax, dword ptr [rax] ; add al, al ; jmp 0x200005062cb
0x00000200001bc25f : and eax, dword ptr [rax] ; add al, al ; mov dword ptr [rcx], r8d ; ret
0x00000200006db577 : and eax, dword ptr [rax] ; add al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000217255 : and eax, dword ptr [rax] ; add al, al ; ret
0x0000020000619155 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200000c3d0c : and eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200000c3d39 ; ret
0x000002000003d376 : and eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000683752 : and eax, dword ptr [rax] ; add rsp, 0x60 ; pop rbx ; ret
0x00000200000cefda : and eax, dword ptr [rax] ; call 0x2000003b25c
0x00000200000c66f6 : and eax, dword ptr [rax] ; call r8
0x0000020000478708 : and eax, dword ptr [rax] ; mov rax, rdx ; jmp 0x200004786d5
0x0000020000517443 : and eax, dword ptr [rax] ; mov word ptr [rdx], ax ; ret
0x000002000020f0e2 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000070b4b2 : and eax, dword ptr [rbp + 3] ; inc byte ptr [rcx - 0x75] ; xlatb ; call rdi
0x00000200006b0c12 : and eax, dword ptr [rbp - 0x74d58b2e] ; ret 0xc148
0x00000200006aeeed : and eax, dword ptr [rbp - 0x74d68b2e] ; ret 0xc148
0x00000200003f978c : and eax, dword ptr [rbp - 0x74db8a40] ; ret
0x000002000005954a : and eax, dword ptr [rbp - 0x75] ; ret 0x8b48
0x000002000023ef90 : and eax, dword ptr [rbx + 0x3b41dfc0] ; ret 0x677
0x0000020000245b29 : and eax, dword ptr [rbx - 0x7cb7073f] ; ret
0x0000020000610e72 : and eax, dword ptr [rcx + rcx*4 + 0x64] ; ret
0x000002000009ebee : and eax, dword ptr [rcx - 0x75] ; ret
0x00000200000ab926 : and eax, dword ptr [rcx - 0x75] ; ret 0xe8c1
0x00000200007bab1a : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000071acb1 : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000071ad85 : and eax, dword ptr [rcx] ; add byte ptr [rax - 0x8b7f7bd], cl ; ret 0xfffc
0x0000020000026e55 : and eax, dword ptr [rsp + 0x40] ; add rsp, 0x28 ; ret
0x0000020000407563 : and eax, dword ptr [rsp + 0x60] ; add rsp, 0x48 ; ret
0x0000020000230d2b : and eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000200005ef744 : and eax, eax ; or eax, 5 ; ret
0x0000020000057cd8 : and eax, eax ; ret
0x000002000003303f : and eax, eax ; shr eax, 0xe ; ret
0x000002000002621d : and eax, eax ; xor qword ptr [rdx + 8], rax ; jmp 0x200000261ef
0x000002000059d6d2 : and eax, ebp ; dec dword ptr [rax - 0x75] ; ret 0xc933
0x0000020000729860 : and eax, ebp ; ret 0
0x0000020000696dca : and eax, ecx ; add rsp, 0x38 ; ret
0x000002000007db8b : and eax, ecx ; bsr edx, eax ; inc dl ; jmp 0x2000007db65
0x000002000006e1b8 : and eax, ecx ; call 0x1ffc22a22ca
0x000002000002deeb : and eax, ecx ; cmp eax, r9d ; sete al ; ret
0x000002000020e88b : and eax, ecx ; cmp rax, r9 ; sete al ; ret
0x00000200000330e9 : and eax, ecx ; ret
0x00000200000f02c7 : and eax, ecx ; test r8, r8 ; jne 0x200000f02e0 ; ret
0x000002000004b94c : and eax, ecx ; xor qword ptr [r9 + 0x18], rax ; ret
0x0000020000164574 : and eax, edx ; cmp rax, rdx ; jmp 0x200001645f8
0x00000200001197d4 : and eax, edx ; or rax, r8 ; mov qword ptr [rcx + 8], rax ; ret
0x000002000003b24f : and eax, edx ; or rax, r8 ; mov qword ptr [rcx], rax ; ret
0x00000200001eaaa7 : and eax, edx ; ret
0x0000020000502608 : and eax, esi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xe72
0x00000200001e786a : and eax, esi ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000fce2d : and eax, esp ; sub al, byte ptr [rax] ; ret
0x00000200005ef743 : and eax, r8d ; or eax, 5 ; ret
0x000002000003303e : and eax, r8d ; shr eax, 0xe ; ret
0x000002000006e1b7 : and eax, r9d ; call 0x1ffc22a22cb
0x000002000002deea : and eax, r9d ; cmp eax, r9d ; sete al ; ret
0x0000020000595d7f : and ebp, eax ; dec dword ptr [rdi] ; mov bh, 0x4a ; add cl, byte ptr [rbp - 0x75] ; ret 0xc18b
0x000002000016227f : and ebp, eax ; ret
0x00000200006c5898 : and ebp, ecx ; ret 0
0x00000200001d23d6 : and ebp, esp ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200004582f6 : and ebx, 0xc0000001 ; call 0x2000007d089
0x000002000052c124 : and ebx, 0xfffffff8 ; call 0x20000157546
0x00000200004c021f : and ebx, 0xfffffffc ; mov rcx, rbx ; call 0x200000e7219
0x00000200003ec199 : and ebx, dword ptr [rdi + rax*8 - 1] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000061ff1b : and ebx, ebx ; ret 0xccff
0x0000020000417c49 : and ecx, 0xfffffffc ; add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x0000020000112f7d : and ecx, 0xfffffffd ; mov rax, rcx ; ret
0x00000200005695fd : and ecx, 0xfffffffe ; mov rax, rcx ; ret
0x0000020000091d83 : and ecx, 1 ; cmp r8b, cl ; jne 0x20000091d94 ; ret
0x000002000070f122 : and ecx, 1 ; mov eax, ecx ; ret
0x00000200000a432d : and ecx, dword ptr [rax + 0x23] ; ret 0x8348
0x00000200001bc550 : and ecx, dword ptr [rax - 0x73] ; dec dword ptr [r8 + 0x33] ; ret
0x000002000012e4a4 : and ecx, dword ptr [rax - 0x75] ; ret
0x00000200003cd78c : and ecx, dword ptr [rax - 0x75] ; ret 0x8b48
0x000002000021464d : and ecx, dword ptr [rax - 0x7d] ; call 0x1ffc3a48e63
0x000002000004aa1d : and ecx, dword ptr [rax - 0x7d] ; ret
0x000002000001244b : and ecx, dword ptr [rbp + 0x3b] ; ret
0x00000200006c5664 : and ecx, dword ptr [rbp - 0x75] ; ret
0x0000020000034db3 : and ecx, dword ptr [rsi] ; add byte ptr [r8], al ; add byte ptr [rax + 3], cl ; ret 0x349
0x0000020000716d4d : and ecx, eax ; cmp edx, ecx ; je 0x20000716d5d ; xor eax, eax ; ret
0x0000020000452247 : and ecx, eax ; cmp rcx, r8 ; cmovne eax, edx ; ret
0x00000200001e1e55 : and ecx, eax ; mov eax, edx ; mov word ptr [r8 + 0xa], cx ; ret
0x00000200001fc799 : and ecx, eax ; mov rax, rcx ; ret
0x0000020000445734 : and ecx, eax ; mov word ptr [r10 + 2], cx ; xor eax, eax ; ret
0x0000020000097e7f : and ecx, eax ; xor qword ptr [rcx + 0x18], r9 ; ret
0x000002000067109d : and ecx, ecx ; inc dword ptr [rax + rbp*8] ; ret 0xb90f
0x00000200000f7367 : and ecx, ecx ; jmp qword ptr [r10 + rax*8]
0x000002000016df09 : and ecx, edx ; mov word ptr [r9 + 0x68], cx ; ret
0x00000200001967c3 : and ecx, esi ; inc dword ptr [rbx - 0x74bb021d] ; ret
0x00000200004e187d : and ecx, esp ; str word ptr [rax + 0x63] ; ret 0x8b41
0x00000200000f7366 : and ecx, r9d ; jmp qword ptr [r10 + rax*8]
0x00000200004bc0c6 : and edi, 0xfffffff8 ; mov rcx, rdi ; call 0x200000e7219
0x0000020000664607 : and edi, dword ptr [rdi + 0x48c033ff] ; add esp, 0x28 ; ret
0x00000200001718d4 : and edi, ecx ; push rsi ; ret 0xf07
0x000002000004df73 : and edi, edi ; ret
0x00000200001b85fe : and edi, esi ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003e75a0 : and edx, 0x3ff ; call 0x200000087f1
0x00000200001473f1 : and edx, 0xf ; jne 0x200001473fc ; ret
0x0000020000201a02 : and edx, 3 ; add edx, 0x13 ; call r9
0x00000200000035d8 : and edx, 8 ; je 0x200000035cb ; mov al, 1 ; ret
0x0000020000077b73 : and edx, dword ptr [rcx] ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200003d3a8a : and edx, eax ; mov qword ptr [r8 + 8], r10 ; ret
0x00000200005c0aaf : and edx, ebp ; push rsi ; ret
0x00000200005f6090 : and edx, ebx ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x000002000003dea7 : and edx, ecx ; mov eax, r10d ; ret
0x00000200000ba4b2 : and edx, ecx ; xor rdx, r8 ; mov qword ptr [rcx + 0x18], rdx ; ret
0x000002000062281e : and edx, edi ; shl edx, 0xc ; or r8d, edx ; jmp 0x20000622847
0x000002000062281d : and edx, r15d ; shl edx, 0xc ; or r8d, edx ; jmp 0x20000622848
0x000002000042dd0b : and esi, 0xfffffffc ; call 0x200000564a6
0x0000020000050f07 : and esi, dword ptr [r10] ; ret 0x724
0x0000020000524519 : and esi, dword ptr [rax] ; ret
0x0000020000463e0e : and esi, dword ptr [rdi + rbp - 0x75] ; ret
0x0000020000137a49 : and esi, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000005167a : and esi, dword ptr [rdx] ; ret
0x0000020000050f08 : and esi, dword ptr [rdx] ; ret 0x724
0x00000200007c8659 : and esi, edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000200007220b5 : and esi, edi ; dec dword ptr [rbx - 0x4226e5eb] ; jmp qword ptr [rbx]
0x000002000009533c : and esi, edi ; ret 0x8b49
0x00000200000d10e1 : and esi, edx ; call 0x200000dd948
0x00000200001a3004 : and esi, esi ; ret
0x0000020000047691 : and esi, esi ; ret 0x7502
0x00000200000bd73a : and esi, esi ; ret 0x7504
0x00000200000e30d1 : and esi, esi ; ret 0xf08
0x00000200000def61 : and esi, esi ; ret 0xf10
0x0000020000036fea : and esp, 0xff000064 ; ret
0x000002000021c76e : and esp, 0xfffffffe ; jmp 0x2000021c77e
0x00000200006f74d8 : and esp, dword ptr [rax] ; ret 0xff
0x00000200004a4e4f : and esp, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000022a5e9 : and esp, dword ptr [rdi - 0x74bb001c] ; ret
0x0000020000620e1b : and esp, ecx ; ret 0x48ff
0x000002000016ecd1 : and qword ptr [r8], 0 ; ret
0x000002000003d6ab : and qword ptr [r9 + 8], rax ; ret
0x00000200005695b4 : and qword ptr [r9], 0 ; ret
0x000002000070e2ac : and qword ptr [rax + 0x10], 0 ; ret
0x00000200000de478 : and qword ptr [rax + 0x18], 0 ; mov byte ptr [rax + 0x44], 1 ; ret
0x000002000067b352 : and qword ptr [rax], 0 ; add rsp, 0x38 ; ret
0x00000200004f0e96 : and qword ptr [rax], 0 ; jmp 0x200004f0e63
0x000002000012405b : and qword ptr [rax], rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ba7bb : and qword ptr [rbp + 0x58], 0 ; call 0x20000056a8f
0x00000200004ba7ba : and qword ptr [rbp + 0x58], 0 ; call 0x20000056a90
0x00000200004ba7b9 : and qword ptr [rbp + 0x58], 0 ; call 0x20000056a91
0x00000200007d0dd0 : and qword ptr [rbp - 0x10], 0 ; call 0x200003f8b5c
0x0000020000042955 : and qword ptr [rbx + 0x18], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003d374 : and qword ptr [rbx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000683750 : and qword ptr [rbx], 0 ; add rsp, 0x60 ; pop rbx ; ret
0x00000200007b5177 : and qword ptr [rcx + 0x10], 0 ; ret
0x000002000040f665 : and qword ptr [rcx + 0x20], 0 ; ret
0x00000200000802a6 : and qword ptr [rcx + 0x20], 0xff ; ret
0x000002000040f685 : and qword ptr [rcx + 0x30], 0 ; ret
0x00000200001bbaa2 : and qword ptr [rcx + 0x60], 0 ; ret
0x000002000004441c : and qword ptr [rcx + 0x68], 0 ; add rax, -0x20 ; ret
0x0000020000044dac : and qword ptr [rcx + 0x70], 0 ; mov qword ptr [rcx + 0x68], rax ; ret
0x00000200001c97ff : and qword ptr [rcx + 0x70], 0 ; ret
0x0000020000678cbd : and qword ptr [rcx + 0xb08], 0 ; ret
0x0000020000424008 : and qword ptr [rcx + 8], 0 ; ret
0x00000200001d4707 : and qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000239d4c : and qword ptr [rcx + rax*8], 0 ; mov al, 1 ; ret
0x00000200000245e2 : and qword ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x0000020000703c5e : and qword ptr [rcx], 0 ; and qword ptr [rcx + 8], 0 ; ret
0x0000020000044ce0 : and qword ptr [rcx], 0 ; mov qword ptr [rcx + 8], rcx ; ret
0x000002000002ea00 : and qword ptr [rcx], 0 ; ret
0x000002000002ad8e : and qword ptr [rcx], rax ; ret
0x00000200001fc1c2 : and qword ptr [rcx], rdx ; ret
0x0000020000038cc7 : and qword ptr [rdx + 0x18], 0 ; ret
0x0000020000456859 : and qword ptr [rdx + 0x78], 0 ; or dword ptr [rax + 8], 0x20 ; ret
0x000002000061c49f : and qword ptr [rdx + 0x88], 0 ; ret
0x000002000061c4e7 : and qword ptr [rdx + 0x90], 0 ; ret
0x000002000003c38c : and qword ptr [rdx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003fa341 : and qword ptr [rdx], 0 ; and dword ptr [r8], 0 ; ret
0x0000020000547ad3 : and qword ptr [rdx], 0 ; mov eax, 0x8000001a ; ret
0x000002000020fee7 : and qword ptr [rdx], 0 ; mov eax, 0xc0000001 ; ret
0x00000200003d7fbd : and qword ptr [rdx], 0 ; mov eax, 0xc00000bb ; ret
0x00000200005128a5 : and qword ptr [rip - 0x1edad5], 0 ; ret
0x00000200005fe056 : and qword ptr [rip - 0x2d977e], 0 ; ret
0x00000200007d5fb8 : and qword ptr [rip - 0x4997f0], 0 ; ret
0x00000200007ba230 : and qword ptr [rsi], 0 ; jmp 0x200007ba1fd
0x0000020000517493 : and qword ptr [rsp + 0x20], 0 ; call 0x20000073790
0x0000020000449504 : and qword ptr [rsp + 0x20], 0 ; call 0x20000073791
0x00000200006e1984 : and qword ptr [rsp + 0x20], 0 ; call r10
0x0000020000430150 : and qword ptr [rsp + 0x20], 0 ; call r11
0x00000200003d3a89 : and r10, rax ; mov qword ptr [r8 + 8], r10 ; ret
0x000002000003dea6 : and r10d, ecx ; mov eax, r10d ; ret
0x00000200004a91fb : and r11b, al ; lea rax, qword ptr [rcx + 0x2c] ; ret
0x000002000000bfd4 : and r11b, bpl ; call 0x2000001189d
0x000002000021c76d : and r12, 0xfffffffffffffffe ; jmp 0x2000021c77f
0x00000200005f35b7 : and r12b, byte ptr [r14 + 0x23] ; ret 0xc166
0x00000200000d10e0 : and r14, rdx ; call 0x200000dd949
0x00000200004c33df : and r14b, byte ptr [r11] ; ret 0x8d4c
0x0000020000051679 : and r14d, dword ptr [r10] ; ret
0x000002000019734d : and r14d, dword ptr [rdx] ; ret 0x724
0x000002000023333f : and r15b, r15b ; ret
0x00000200000f02c6 : and r8, rcx ; test r8, r8 ; jne 0x200000f02e1 ; ret
0x000002000003b24e : and r8, rdx ; or rax, r8 ; mov qword ptr [rcx], rax ; ret
0x00000200006d3709 : and r8b, 1 ; mov al, r8b ; ret
0x00000200003cd459 : and r8b, bpl ; rcl cl, 1 ; ret
0x000002000003efc3 : and r8b, bpl ; ret 0x4358
0x000002000045ba56 : and r8b, r13b ; ret
0x000002000011dc5b : and r8d, 7 ; mov eax, r8d ; ret
0x0000020000097e7e : and r9, rax ; xor qword ptr [rcx + 0x18], r9 ; ret
0x000002000004ceba : and r9b, byte ptr [r9 - 0x75] ; sbb byte ptr [r8 + 0x23], r9b ; ret 0xb49
0x000002000013bfe0 : and rax, 0x157 ; ret
0x000002000013c040 : and rax, 0x80 ; ret
0x0000020000218ba2 : and rax, 0xfffff000 ; ret
0x00000200001b381f : and rax, 0xfffffffffffffff0 ; ret
0x0000020000009549 : and rax, 0xfffffffffffffff9 ; ret
0x00000200000343cc : and rax, 0xfffffffffffffffc ; jne 0x200000343df ; mov qword ptr [r9], r8 ; ret
0x000002000007c766 : and rax, 0xfffffffffffffffc ; ret
0x00000200005696a5 : and rax, 0xfffffffffffffffe ; add rax, r8 ; ret
0x0000020000453969 : and rax, 0xfffffffffffffffe ; ret
0x000002000013c020 : and rax, 1 ; ret
0x000002000013bfc0 : and rax, 2 ; ret
0x000002000013bfa0 : and rax, 4 ; ret
0x000002000013c000 : and rax, 8 ; ret
0x0000020000026e54 : and rax, qword ptr [rsp + 0x40] ; add rsp, 0x28 ; ret
0x0000020000407562 : and rax, qword ptr [rsp + 0x60] ; add rsp, 0x48 ; ret
0x0000020000230d2a : and rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x0000020000057cd7 : and rax, r8 ; ret
0x000002000002621c : and rax, r8 ; xor qword ptr [rdx + 8], rax ; jmp 0x200000261f0
0x000002000020e88a : and rax, r9 ; cmp rax, r9 ; sete al ; ret
0x0000020000099d7f : and rax, rcx ; ret
0x000002000004b94b : and rax, rcx ; xor qword ptr [r9 + 0x18], rax ; ret
0x0000020000164573 : and rax, rdx ; cmp rax, rdx ; jmp 0x200001645f9
0x00000200001eaaa6 : and rax, rdx ; ret
0x0000020000112f7c : and rcx, 0xfffffffffffffffd ; mov rax, rcx ; ret
0x00000200005695fc : and rcx, 0xfffffffffffffffe ; mov rax, rcx ; ret
0x0000020000452246 : and rcx, r8 ; cmp rcx, r8 ; cmovne eax, edx ; ret
0x00000200001fc798 : and rcx, rax ; mov rax, rcx ; ret
0x000002000042dd0a : and rsi, 0xfffffffffffffffc ; call 0x200000564a7
0x00000200007220b4 : and rsi, r15 ; dec dword ptr [rbx - 0x4226e5eb] ; jmp qword ptr [rbx]
0x000002000003b26f : and spl, byte ptr [rcx + rax] ; ret
0x000002000016df3b : and word ptr [r9 + 0x68], dx ; mov qword ptr [r9 + 0x70], rax ; ret
0x0000020000433fdc : and word ptr [rcx + 0x1d2], 0 ; ret
0x000002000054e18d : and word ptr [rdx + 8], cx ; ret
0x000002000021c2d0 : and word ptr [rdx + rax*2], cx ; ret
0x000002000002508e : bsr eax, eax ; sub eax, r10d ; jmp 0x20000025046
0x000002000049a778 : bsr ecx, ecx ; cmp r8d, ecx ; seta al ; ret
0x000002000020ecc1 : bsr ecx, ecx ; jne 0x2000020ecd2 ; mov eax, r10d ; jmp 0x2000020ecd9
0x000002000007db8d : bsr edx, eax ; inc dl ; jmp 0x2000007db63
0x000002000020ecc0 : bsr rcx, r9 ; jne 0x2000020ecd3 ; mov eax, r10d ; jmp 0x2000020ecda
0x000002000017a16f : bswap eax ; xor rax, r9 ; mov rcx, rax ; call rdx
0x000002000017a16e : bswap rax ; xor rax, r9 ; mov rcx, rax ; call rdx
0x0000020000031ff4 : bt dword ptr [rax], ecx ; setb al ; ret
0x000002000007f63b : bt dword ptr [rax], edx ; setae al ; ret
0x000002000002defa : bt dword ptr [rax], edx ; setb al ; ret
0x00000200007028af : bt eax, 0x11 ; jb 0x200007028c0 ; mov al, 1 ; ret
0x00000200001b9c15 : bt eax, 0x1c ; jae 0x200001b9c26 ; mov al, 1 ; ret
0x00000200000f21c6 : bt eax, 0x1e ; jb 0x200000f21d7 ; xor eax, eax ; ret
0x000002000012dc62 : bt eax, ecx ; setb al ; ret
0x00000200000c5df2 : bt eax, edx ; jb 0x200000c5e08 ; mov al, cl ; ret
0x0000020000425676 : bt eax, edx ; jb 0x20000425650 ; xor eax, eax ; ret
0x000002000000c317 : bt ecx, 0x19 ; jb 0x2000000c337 ; ret
0x00000200004345ea : bt ecx, 0x19 ; jb 0x2000043460d ; ret
0x000002000043bbf2 : bt ecx, 0x19 ; jb 0x2000043bc10 ; ret
0x00000200005128df : bt ecx, 0x19 ; jb 0x200005128ff ; ret
0x000002000008390a : bt ecx, eax ; jae 0x20000083919 ; mov al, 1 ; ret
0x00000200007a0323 : bt ecx, eax ; jae 0x200007a0332 ; xor eax, eax ; ret
0x000002000043459c : bt edx, 0x10 ; jb 0x200004345b8 ; ret
0x0000020000031ff3 : bt qword ptr [rax], rcx ; setb al ; ret
0x000002000020e77a : bt qword ptr [rax], rdx ; setae al ; ret
0x000002000020e816 : bt qword ptr [rax], rdx ; setb al ; ret
0x0000020000083909 : bt rcx, rax ; jae 0x2000008391a ; mov al, 1 ; ret
0x00000200007a0322 : bt rcx, rax ; jae 0x200007a0333 ; xor eax, eax ; ret
0x0000020000100442 : btc eax, eax ; mov dword ptr [rcx + 0x5898], eax ; ret
0x00000200000eeaf9 : btc eax, eax ; mov dword ptr [rcx + 8], eax ; ret
0x00000200000eeaf8 : btc eax, r8d ; mov dword ptr [rcx + 8], eax ; ret
0x0000020000058fbb : btr dword ptr [rax + 0x78], 5 ; mov al, dl ; ret
0x000002000010b5c5 : btr dword ptr [rax], edx ; inc dword ptr [rcx + 0x420] ; ret
0x000002000003715c : btr dword ptr [rax], edx ; ret
0x00000200001a9c4b : btr dword ptr [rcx + 8], 0x19 ; ret
0x0000020000100e0d : btr dword ptr [rcx], eax ; ret
0x00000200006859e7 : btr dword ptr [rcx], ebx ; jmp 0x20000685a10
0x00000200000fd688 : btr dword ptr [rdx], 0x14 ; mov byte ptr [rdx + 0x7c], al ; ret
0x00000200000283d9 : btr eax, 0xc ; ret
0x00000200000d9e75 : btr eax, 7 ; bts rax, 8 ; ret
0x00000200000d2af1 : btr eax, edx ; mov qword ptr [rcx + r8*8 + 8], rax ; ret
0x00000200000fd603 : btr eax, edx ; mov qword ptr [rcx], rax ; ret
0x00000200003d733d : btr ecx, 0x12 ; mov cr4, rcx ; ret
0x000002000020e898 : btr qword ptr [rax], rdx ; ret
0x0000020000100e0c : btr qword ptr [rcx], rax ; ret
0x00000200000283d8 : btr rax, 0xc ; ret
0x00000200000d2af0 : btr rax, rdx ; mov qword ptr [rcx + r8*8 + 8], rax ; ret
0x00000200000fd602 : btr rax, rdx ; mov qword ptr [rcx], rax ; ret
0x00000200003d733c : btr rcx, 0x12 ; mov cr4, rcx ; ret
0x000002000070f3b8 : bts dword ptr [r8 + 0x20], 0x18 ; ret
0x000002000070f3bf : bts dword ptr [r8 + 0x20], 0x19 ; ret
0x000002000070f3db : bts dword ptr [r8 + 0x20], 0x1a ; ret
0x000002000070f3c6 : bts dword ptr [r8 + 0x20], 0x1b ; ret
0x000002000070f3d4 : bts dword ptr [r8 + 0x20], 0x1c ; ret
0x000002000070f3cd : bts dword ptr [r8 + 0x20], 0x1d ; ret
0x000002000070f3b9 : bts dword ptr [rax + 0x20], 0x18 ; ret
0x000002000070f3c0 : bts dword ptr [rax + 0x20], 0x19 ; ret
0x000002000070f3dc : bts dword ptr [rax + 0x20], 0x1a ; ret
0x000002000070f3c7 : bts dword ptr [rax + 0x20], 0x1b ; ret
0x000002000070f3d5 : bts dword ptr [rax + 0x20], 0x1c ; ret
0x000002000070f3ce : bts dword ptr [rax + 0x20], 0x1d ; ret
0x00000200001b2cab : bts dword ptr [rax + 0x40], 9 ; ret
0x000002000021bc31 : bts dword ptr [rax], ebx ; pop rbx ; ret
0x00000200004aca59 : bts dword ptr [rax], ecx ; inc rdx ; jmp 0x200004aca34
0x00000200000366e0 : bts dword ptr [rax], edx ; ret
0x00000200004aca58 : bts dword ptr [rax], r9d ; inc rdx ; jmp 0x200004aca35
0x00000200001a9c45 : bts dword ptr [rcx + 8], 0x19 ; ret
0x000002000000f390 : bts dword ptr [rcx], 0 ; jb 0x2000000f3a6 ; mov al, 1 ; ret
0x00000200000b898b : bts dword ptr [rcx], 0xc ; ret
0x0000020000057b05 : bts dword ptr [rcx], 9 ; ret
0x0000020000471133 : bts dword ptr [rdx], 0x18 ; ret
0x00000200004bb498 : bts dword ptr [rdx], 7 ; ret
0x0000020000444aa3 : bts dword ptr [rdx], 8 ; mov eax, r9d ; ret
0x0000020000432bb9 : bts eax, 0x1c ; ret
0x00000200004345b2 : bts eax, 0xc ; ret
0x00000200000d9e7a : bts eax, 8 ; ret
0x00000200001d4617 : bts eax, edx ; mov qword ptr [rcx], rax ; ret
0x00000200004b8568 : bts ebx, 0xa ; jmp 0x200004b8536
0x000002000046b4c8 : bts ebx, 9 ; call 0x200000903a3
0x00000200000c60bd : bts ecx, eax ; mov qword ptr [r8 + rdx*8 + 8], rcx ; ret
0x0000020000059e16 : bts esi, 0x1c ; jmp 0x20000059de4
0x000002000020fc28 : bts qword ptr [rax], rdx ; ret
0x000002000000f38f : bts qword ptr [rcx], 0 ; jb 0x2000000f3a7 ; mov al, 1 ; ret
0x00000200000b898a : bts qword ptr [rcx], 0xc ; ret
0x00000200000d9e79 : bts rax, 8 ; ret
0x00000200001d4616 : bts rax, rdx ; mov qword ptr [rcx], rax ; ret
0x00000200004b8567 : bts rbx, 0xa ; jmp 0x200004b8537
0x00000200000c60bc : bts rcx, rax ; mov qword ptr [r8 + rdx*8 + 8], rcx ; ret
0x000002000068cdb0 : call 0x1ff80ae5afd
0x000002000003d184 : call 0x1ff8303d9d0
0x00000200003fa238 : call 0x1ff834f647a
0x000002000062f064 : call 0x1ff83aaf220
0x00000200007d288a : call 0x1ff83c6288f
0x00000200001170fa : call 0x1ff83e0e608
0x00000200001d4635 : call 0x1ff840abf42
0x00000200004e95e7 : call 0x1ff8411213b
0x00000200005c094c : call 0x1ff841e3c59
0x00000200005e5f9c : call 0x1ff855e220f
0x0000020000448d83 : call 0x1ff858c951a
0x000002000005c54f : call 0x1ff894f8e8f
0x0000020000083eec : call 0x1ff89ca49fc
0x0000020000225870 : call 0x1ff8b6f1b02
0x00000200001d61b3 : call 0x1ff8bdfecff
0x0000020000211775 : call 0x1ff8c109081
0x00000200006f6453 : call 0x1ff8c48efa6
0x0000020000525b84 : call 0x1ff8c521daf
0x0000020000672c93 : call 0x1ff8db02c66
0x0000020000663536 : call 0x1ff8e283844
0x00000200005d8d30 : call 0x1ff905d9583
0x000002000058f0cb : call 0x1ffb158f0d6
0x000002000058f1fc : call 0x1ffb158f207
0x0000020000143be6 : call 0x1ffb7237cf8
0x00000200004990e8 : call 0x1ffb758d2b6
0x00000200000856cc : call 0x1ffbaca5a1c
0x0000020000517389 : call 0x1ffc0a000da
0x00000200004ef735 : call 0x1ffc0d43f45
0x0000020000028892 : call 0x1ffc13dd0bf
0x00000200003e2dd3 : call 0x1ffc186f065
0x0000020000127df2 : call 0x1ffc1d5093b
0x000002000002c3e7 : call 0x1ffc2060bf4
0x0000020000048fc5 : call 0x1ffc207d80d
0x0000020000084e16 : call 0x1ffc20b965e
0x000002000010536e : call 0x1ffc2139bb6
0x0000020000112005 : call 0x1ffc2146912
0x00000200001137a4 : call 0x1ffc2147fb1
0x0000020000186f73 : call 0x1ffc21bbbbb
0x0000020000186fb3 : call 0x1ffc21bbbfb
0x000002000018701a : call 0x1ffc21bbc62
0x0000020000187068 : call 0x1ffc21bbcb0
0x000002000018e8ad : call 0x1ffc21c34f5
0x0000020000194283 : call 0x1ffc21c8ecb
0x0000020000194708 : call 0x1ffc21c9350
0x0000020000195031 : call 0x1ffc21c9c79
0x00000200001956b6 : call 0x1ffc21ca2fe
0x000002000019746a : call 0x1ffc21cc0b2
0x0000020000199d27 : call 0x1ffc21ce96f
0x0000020000199d70 : call 0x1ffc21ce9b8
0x00000200001a1869 : call 0x1ffc21d64b1
0x00000200001a18c1 : call 0x1ffc21d6509
0x00000200001a248e : call 0x1ffc21d70d6
0x00000200001a3538 : call 0x1ffc21d8180
0x00000200001a3583 : call 0x1ffc21d81cb
0x00000200001a4f99 : call 0x1ffc21d9be1
0x00000200001a6511 : call 0x1ffc21db159
0x00000200001a6596 : call 0x1ffc21db1de
0x00000200001a67dc : call 0x1ffc21db424
0x00000200001a684f : call 0x1ffc21db497
0x00000200001a79ff : call 0x1ffc21dc647
0x00000200001ea8a3 : call 0x1ffc221f4eb
0x00000200001ea911 : call 0x1ffc221f559
0x00000200001ebc53 : call 0x1ffc222049b
0x000002000000bfc7 : call 0x1ffc22300d3
0x000002000020a787 : call 0x1ffc223ef94
0x000002000001434e : call 0x1ffc2248f63
0x0000020000014813 : call 0x1ffc2249525
0x000002000001849d : call 0x1ffc224ccb2
0x000002000001a3fb : call 0x1ffc224ed06
0x0000020000036d73 : call 0x1ffc226b688
0x0000020000050445 : call 0x1ffc2284c5a
0x00000200000542c5 : call 0x1ffc2288ed7
0x00000200000563cf : call 0x1ffc228abe4
0x000002000006e1ba : call 0x1ffc22a22c8
0x000002000008a8e7 : call 0x1ffc22bf0fc
0x000002000008fd5a : call 0x1ffc22c456f
0x000002000008fff2 : call 0x1ffc22c4907
0x0000020000090111 : call 0x1ffc22c4a26
0x00000200000901e2 : call 0x1ffc22c4af7
0x000002000009b19b : call 0x1ffc22cfaad
0x00000200000d0db7 : call 0x1ffc23055cc
0x00000200000d176f : call 0x1ffc230607a
0x00000200000d193f : call 0x1ffc230624a
0x00000200000febc7 : call 0x1ffc23334dc
0x000002000011918d : call 0x1ffc234daa2
0x000002000012bcce : call 0x1ffc23605e3
0x0000020000194516 : call 0x1ffc23c8d2b
0x000002000019e15e : call 0x1ffc23d2969
0x000002000003b9cf : call 0x1ffc23f02ec
0x000002000004e99c : call 0x1ffc24031b1
0x00000200001e2e97 : call 0x1ffc24176a9
0x00000200001f48ff : call 0x1ffc2429114
0x00000200000856d7 : call 0x1ffc2439ef0
0x000002000020a23f : call 0x1ffc243ea4a
0x0000020000412570 : call 0x1ffc2446e85
0x00000200000a98fc : call 0x1ffc245e125
0x00000200000e4ac5 : call 0x1ffc24992ee
0x00000200000e4b13 : call 0x1ffc249933c
0x00000200001318a3 : call 0x1ffc24e60ae
0x00000200004c54ee : call 0x1ffc24fa203
0x00000200001f390f : call 0x1ffc25a8124
0x000002000040328a : call 0x1ffc2627398
0x000002000061449b : call 0x1ffc2648ca8
0x000002000040a294 : call 0x1ffc273eea6
0x000002000040a9a6 : call 0x1ffc273f5b8
0x000002000040a9dc : call 0x1ffc273f5ee
0x000002000051a872 : call 0x1ffc274f07d
0x000002000052693a : call 0x1ffc275b145
0x0000020000479d38 : call 0x1ffc27ae94a
0x000002000066a5cc : call 0x1ffc289e6db
0x000002000000792a : call 0x1ffc28bbd38
0x00000200000087ec : call 0x1ffc28bcbfa
0x000002000001f7a9 : call 0x1ffc28cf7c5
0x000002000001f7a8 : call 0x1ffc28cf7c6
0x00000200000927bc : call 0x1ffc28d68c8
0x00000200000960e5 : call 0x1ffc28da1f1
0x000002000006db11 : call 0x1ffc2922326
0x00000200000b20b3 : call 0x1ffc2966cc5
0x00000200000b2319 : call 0x1ffc2966f2b
0x000002000055b4ed : call 0x1ffc299c437
0x00000200007a0a0e : call 0x1ffc29d5323
0x00000200007a8d84 : call 0x1ffc29dd58f
0x0000020000213b0f : call 0x1ffc2a4831c
0x00000200001b243a : call 0x1ffc2a66c6f
0x00000200003ceb83 : call 0x1ffc2c82f98
0x000002000049e57e : call 0x1ffc2d52a86
0x000002000049e57d : call 0x1ffc2d52a87
0x000002000009753e : call 0x1ffc3007546
0x0000020000008387 : call 0x1ffc3008393
0x000002000002c583 : call 0x1ffc302c58c
0x000002000002c41b : call 0x1ffc303e833
0x0000020000030968 : call 0x1ffc3042d7b
0x000002000002ddc7 : call 0x1ffc304be53
0x000002000004061c : call 0x1ffc3052a3d
0x0000020000042a57 : call 0x1ffc3054e62
0x000002000007bb1c : call 0x1ffc3093926
0x00000200000820a7 : call 0x1ffc30944c3
0x000002000008b151 : call 0x1ffc309d560
0x00000200000fd117 : call 0x1ffc30fd122
0x0000020000444052 : call 0x1ffc3134943
0x0000020000444051 : call 0x1ffc3134944
0x0000020000130d8b : call 0x1ffc3148295
0x00000200005a2cc0 : call 0x1ffc3193cc8
0x00000200001bfd1b : call 0x1ffc31bfd30
0x00000200001bfd4a : call 0x1ffc31bfd5f
0x00000200001bfdde : call 0x1ffc31bfdf3
0x00000200001bfe7e : call 0x1ffc31bfe93
0x00000200001bbea3 : call 0x1ffc31ce2c0
0x00000200001b860c : call 0x1ffc31d6698
0x000002000021310d : call 0x1ffc3207a1a
0x000002000020b977 : call 0x1ffc321dd90
0x000002000004707c : call 0x1ffc327bd8e
0x00000200000864b3 : call 0x1ffc32ba9be
0x00000200000aa715 : call 0x1ffc32df02a
0x0000020000048786 : call 0x1ffc32fcf9b
0x00000200000d97c4 : call 0x1ffc330e0d9
0x0000020000111413 : call 0x1ffc3345d28
0x00000200001756e7 : call 0x1ffc33a9efc
0x0000020000188233 : call 0x1ffc33bcb48
0x0000020000195dbe : call 0x1ffc33ca6d3
0x00000200001d61a5 : call 0x1ffc33d70f2
0x00000200001d61a4 : call 0x1ffc33d70f3
0x00000200003ca6fe : call 0x1ffc33fef10
0x00000200001ed9c6 : call 0x1ffc34221db
0x0000020000070367 : call 0x1ffc3424b8c
0x0000020000212069 : call 0x1ffc3446476
0x0000020000434570 : call 0x1ffc344697d
0x0000020000447f5f : call 0x1ffc3447f68
0x000002000043cac5 : call 0x1ffc344eed1
0x0000020000454e1b : call 0x1ffc3472ea7
0x00000200000c0763 : call 0x1ffc3474f75
0x00000200001e2a9d : call 0x1ffc34973b2
0x00000200004961ff : call 0x1ffc34a861c
0x0000020000559554 : call 0x1ffc34c9566
0x00000200001faa71 : call 0x1ffc352f29a
0x000002000053327f : call 0x1ffc354568b
0x00000200005ae3c9 : call 0x1ffc35cc455
0x00000200006215a4 : call 0x1ffc36339b0
0x0000020000680063 : call 0x1ffc369247e
0x00000200006ff234 : call 0x1ffc36ff25f
0x000002000070288a : call 0x1ffc3714ca2
0x00000200004994db : call 0x1ffc384dd04
0x000002000049e894 : call 0x1ffc385319f
0x000002000006cb48 : call 0x1ffc391d53c
0x0000020000231f42 : call 0x1ffc3922eb1
0x0000020000232105 : call 0x1ffc3923074
0x00000200000ffe44 : call 0x1ffc3934655
0x00000200007a4ed0 : call 0x1ffc39d97e5
0x00000200007a4fbb : call 0x1ffc39d98d0
0x000002000014131d : call 0x1ffc3a01323
0x0000020000214650 : call 0x1ffc3a48e60
0x00000200001895c8 : call 0x1ffc3a495c6
0x00000200001e6aec : call 0x1ffc3a9b3f4
0x00000200001e6e11 : call 0x1ffc3a9b719
0x00000200001ff45a : call 0x1ffc3ab4081
0x000002000070a617 : call 0x1ffc3abea2c
0x00000200001bcf77 : call 0x1ffc3addd0b
0x00000200001bcf76 : call 0x1ffc3addd0c
0x00000200000ead08 : call 0x1ffc3b9e751
0x0000020000057cd6 : call 0x1ffc3c5a028
0x00000200004934b2 : call 0x1ffc3ca7dba
0x000002000046e300 : call 0x1ffc3d22c08
0x00000200004eada0 : call 0x1ffc3d2bcaa
0x00000200004816d6 : call 0x1ffc3d35afe
0x0000020000220973 : call 0x1ffc3d8197b
0x000002000065a7bd : call 0x1ffc3df684b
0x0000020000213aa3 : call 0x1ffc3e1c5f5
0x0000020000595648 : call 0x1ffc3e4a350
0x000002000059da11 : call 0x1ffc3e52719
0x000002000059da10 : call 0x1ffc3e5271a
0x000002000059da11 : call 0x1ffc3e5271b
0x000002000059da10 : call 0x1ffc3e5271c
0x00000200005a171d : call 0x1ffc3e56425
0x00000200005e463c : call 0x1ffc3ea4635
0x00000200005fe7fc : call 0x1ffc3ebe7c9
0x000002000068960c : call 0x1ffc3eca516
0x00000200006a24d8 : call 0x1ffc3ed6de0
0x0000020000626d17 : call 0x1ffc3ee6d1f
0x0000020000010cf3 : call 0x1ffc3f081fd
0x0000020000658647 : call 0x1ffc3f185f8
0x00000200000365b7 : call 0x1ffc3f2dac1
0x0000020000052c19 : call 0x1ffc3f5a123
0x00000200006a34ce : call 0x1ffc3f63472
0x00000200000037f2 : call 0x1ffc3f63800
0x00000200006c8045 : call 0x1ffc3f8804d
0x00000200006c8125 : call 0x1ffc3f8812d
0x000002000049fcd7 : call 0x1ffc4000cdf
0x000002000049fcd6 : call 0x1ffc4000ce0
0x00000200001a652a : call 0x1ffc403f632
0x000002000011e7cf : call 0x1ffc4065cd9
0x0000020000151025 : call 0x1ffc40b513e
0x00000200001fdbc5 : call 0x1ffc40c50cf
0x00000200001e3af4 : call 0x1ffc41d486f
0x000002000068db0f : call 0x1ffc41fea59
0x000002000040fda4 : call 0x1ffc42cfd73
0x00000200004385b8 : call 0x1ffc432fac2
0x00000200004b6503 : call 0x1ffc442651d
0x000002000049f01f : call 0x1ffc4493927
0x000002000057fed8 : call 0x1ffc4578fe0
0x00000200006adbc2 : call 0x1ffc45a50cc
0x00000200007c5350 : call 0x1ffc47c35cb
0x00000200000b65ea : call 0x1ffc80eae34
0x00000200001a22fc : call 0x1ffc83d8930
0x00000200005a0b5c : call 0x1ffcde55467
0x0000020000144932 : call 0x1ffd017917d
0x00000200003de0fc : call 0x1ffd0412947
0x0000020000778090 : call 0x1ffd1778097
0x0000020000615ae2 : call 0x1ffd29462da
0x00000200006594d6 : call 0x1ffd34e948c
0x000002000049ff2c : call 0x1ffd6d54838
0x000002000049ff2b : call 0x1ffd6d54839
0x000002000049f9b7 : call 0x1ffd70ce2be
0x000002000049f9b6 : call 0x1ffd70ce2bf
0x00000200000aba78 : call 0x1ffe08dfb89
0x00000200000398e4 : call 0x1ffe0c61bf0
0x00000200004b77ec : call 0x1ffe1cede04
0x0000020000626613 : call 0x1ffe64b3851
0x0000020000626612 : call 0x1ffe64b3852
0x00000200004774bc : call 0x1ffe84774c7
0x00000200004c588e : call 0x1ffe84c589a
0x00000200004c5af1 : call 0x1ffe84c5afd
0x00000200004c5c18 : call 0x1ffe84c5c24
0x000002000003851d : call 0x1ffe8c54727
0x00000200004d3c53 : call 0x1ffe90efe5d
0x00000200004637b7 : call 0x1ffe90fc304
0x0000020000642412 : call 0x1ffe925e61c
0x000002000062f8e9 : call 0x1ffe932843d
0x0000020000719114 : call 0x1ffe9715382
0x0000020000046814 : call 0x1ffe9c6f261
0x00000200001b1333 : call 0x1ffe9fd8841
0x0000020000674ebb : call 0x1ffea2910e5
0x000002000040fe5a : call 0x1ffeb023f7c
0x000002000078591e : call 0x1ffec3ae46e
0x000002000059d3a7 : call 0x1ffed1a57b1
0x000002000004d80e : call 0x1fff0082058
0x0000020000195124 : call 0x1fff0f11414
0x000002000060d279 : call 0x1fff4ec1883
0x0000020000095f50 : call 0x1fffbd7e16d
0x00000200001baca4 : call 0x1ffff1bcb94
0x00000200004cfaf0 : call 0x1ffff4cfafb
0x00000200004cfb5b : call 0x1ffff4cfb66
0x00000200005db849 : call 0x1ffff5db854
0x00000200003dc22d : call 0x20000002263
0x00000200003e15c6 : call 0x200000035e3
0x00000200003e1891 : call 0x200000035e7
0x00000200003d480d : call 0x200000036c7
0x00000200003c73f8 : call 0x200000036e2
0x000002000010cb82 : call 0x20000004852
0x000002000056950b : call 0x20000005722
0x0000020000552bab : call 0x20000005727
0x00000200003e559b : call 0x200000057cb
0x00000200003e5720 : call 0x200000065a3
0x000002000069ccd8 : call 0x200000065a7
0x00000200000069f4 : call 0x200000070e6
0x00000200003e654c : call 0x200000071ef
0x00000200003e75bd : call 0x20000007b17
0x00000200003e61a5 : call 0x20000007c13
0x00000200003e78b9 : call 0x20000007c33
0x00000200003e7989 : call 0x20000007c4b
0x00000200003e7988 : call 0x20000007c4c
0x00000200003e5a54 : call 0x200000087eb
0x00000200003dc0c7 : call 0x2000000881f
0x00000200003e775c : call 0x20000008db3
0x00000200006dd30f : call 0x20000009582
0x00000200003debfd : call 0x200000095d3
0x00000200003debfc : call 0x200000095d4
0x00000200006dd3a1 : call 0x20000009672
0x00000200003e11d3 : call 0x20000009853
0x00000200003e11d2 : call 0x20000009854
0x00000200003e116d : call 0x20000009b83
0x000002000058da75 : call 0x20000009d16
0x00000200003e165c : call 0x2000000a287
0x00000200003fe0d1 : call 0x2000000a3d6
0x00000200003e0f69 : call 0x2000000c02b
0x00000200003dfacb : call 0x2000000c34f
0x0000020000678c14 : call 0x2000000c7fe
0x000002000052ce01 : call 0x2000000c7ff
0x00000200003df7bd : call 0x2000000c97b
0x00000200003df19c : call 0x2000000ca0f
0x00000200003e7a31 : call 0x2000000e713
0x00000200003df190 : call 0x2000000e81f
0x00000200003e7a08 : call 0x2000000eb4f
0x00000200003e00ee : call 0x2000000ed07
0x00000200005535cc : call 0x2000000ed0d
0x00000200005e2a5b : call 0x2000000ed32
0x00000200001b95bd : call 0x2000000ed36
0x00000200006f3930 : call 0x2000000f3ac
0x00000200001627b2 : call 0x2000000f4d4
0x00000200006f3fe5 : call 0x2000001026e
0x000002000000bfd7 : call 0x2000001189a
0x00000200001886cd : call 0x200000148e2
0x00000200000bf2fe : call 0x20000016c47
0x000002000044df64 : call 0x2000001a24e
0x000002000067f3f3 : call 0x2000001b6da
0x00000200005b01f1 : call 0x2000001b877
0x0000020000051ecb : call 0x2000001cc07
0x0000020000661a08 : call 0x2000001dcd2
0x000002000001e492 : call 0x2000001e4bb
0x00000200000e5288 : call 0x2000002149e
0x00000200001d6a30 : call 0x200000245d7
0x00000200001a85d7 : call 0x200000248c2
0x00000200001a8be3 : call 0x20000024e3a
0x0000020000627fe8 : call 0x20000025666
0x00000200001a94d3 : call 0x20000025772
0x00000200004338f2 : call 0x2000002fb3e
0x00000200005d89d2 : call 0x200000309fe
0x0000020000196967 : call 0x20000032c06
0x00000200004ad6f6 : call 0x200000332b2
0x00000200001f9b8e : call 0x20000035dce
0x00000200000ebc79 : call 0x20000037eba
0x00000200001d8b10 : call 0x20000037ec0
0x0000020000039935 : call 0x20000039a1b
0x000002000003991e : call 0x20000039c17
0x00000200000cefdc : call 0x2000003b25a
0x00000200004f09c9 : call 0x2000003cbee
0x0000020000711171 : call 0x2000003d412
0x00000200004633a3 : call 0x2000003f5ca
0x00000200000411ae : call 0x20000041326
0x000002000070b2e1 : call 0x200000414cf
0x00000200001f6651 : call 0x20000042932
0x00000200006663b1 : call 0x20000043aef
0x0000020000795ac1 : call 0x20000045190
0x0000020000239bc6 : call 0x20000045eba
0x0000020000101824 : call 0x20000046497
0x000002000010f661 : call 0x2000004b8fa
0x00000200000d1a70 : call 0x2000004dd32
0x00000200000449b2 : call 0x2000004df08
0x00000200000f2038 : call 0x2000004e32a
0x00000200001a2341 : call 0x2000004e58a
0x000002000042b82b : call 0x2000004fce3
0x0000020000484dc9 : call 0x20000051076
0x00000200006262b9 : call 0x20000052562
0x0000020000461bbd : call 0x20000053437
0x000002000042dd0e : call 0x200000564a3
0x000002000043a855 : call 0x20000056a8a
0x000002000042de41 : call 0x20000056a8b
0x000002000043a969 : call 0x20000056b82
0x000002000020dd02 : call 0x20000056c38
0x000002000012abe4 : call 0x20000056ece
0x00000200007c7efa : call 0x20000056ed4
0x000002000054b880 : call 0x20000057ad6
0x000002000042a476 : call 0x20000058013
0x000002000042ec61 : call 0x2000005c1b3
0x000002000042efe2 : call 0x2000005c2c3
0x00000200005e0c66 : call 0x2000005ce72
0x0000020000601f07 : call 0x2000005e172
0x00000200004f740f : call 0x2000005e177
0x000002000040e472 : call 0x2000005e178
0x000002000043861e : call 0x2000005f0a3
0x0000020000438600 : call 0x2000005f303
0x0000020000436f76 : call 0x2000005f383
0x00000200004385db : call 0x2000005f423
0x00000200006a3627 : call 0x2000005f902
0x0000020000430ddc : call 0x2000005f903
0x0000020000115eff : call 0x2000005f904
0x00000200007b8190 : call 0x2000005f906
0x0000020000650cca : call 0x2000005f907
0x00000200001396a2 : call 0x2000005f908
0x000002000053cef0 : call 0x2000005f909
0x000002000048376a : call 0x2000005fa02
0x00000200004305c0 : call 0x2000005fa83
0x0000020000436838 : call 0x20000061bf3
0x0000020000415bab : call 0x20000061dc2
0x0000020000433f96 : call 0x20000061dc3
0x00000200007c5eeb : call 0x200000620f2
0x00000200004334de : call 0x200000620f3
0x00000200004334dd : call 0x200000620f4
0x00000200000037f0 : call 0x200000620f6
0x00000200001a7954 : call 0x20000063bc2
0x000002000006467a : call 0x20000064fd6
0x000002000065c7db : call 0x20000065407
0x00000200003cc22e : call 0x20000068452
0x000002000043975f : call 0x20000068453
0x000002000043163b : call 0x20000068457
0x00000200006a053d : call 0x20000068458
0x000002000043c5fe : call 0x20000069b03
0x0000020000488a55 : call 0x20000069e97
0x00000200001f5f30 : call 0x20000069f36
0x000002000043fee8 : call 0x2000006c733
0x00000200000e0cc4 : call 0x2000006cf46
0x000002000044207e : call 0x2000006cfb3
0x0000020000449563 : call 0x2000006d203
0x0000020000021073 : call 0x2000006d282
0x000002000043daaa : call 0x2000006d283
0x00000200004494c8 : call 0x2000006d763
0x0000020000541167 : call 0x2000006d767
0x000002000044784f : call 0x2000006d8b3
0x000002000044787c : call 0x2000006f597
0x000002000003818a : call 0x2000006fbd6
0x00000200000a49aa : call 0x20000070bc2
0x00000200000a49a9 : call 0x20000070bc3
0x00000200000a49a8 : call 0x20000070bc4
0x0000020000444053 : call 0x20000070f63
0x0000020000517499 : call 0x2000007378a
0x000002000044950a : call 0x2000007378b
0x00000200000f8b08 : call 0x20000074d12
0x00000200007125b1 : call 0x20000074d18
0x0000020000549032 : call 0x2000007516c
0x0000020000074ffe : call 0x2000007516d
0x0000020000058f59 : call 0x20000075192
0x00000200001c59b6 : call 0x20000075197
0x00000200007244b8 : call 0x20000075199
0x0000020000452d12 : call 0x20000075e53
0x00000200004487d1 : call 0x20000076cf3
0x00000200004563ae : call 0x20000077083
0x00000200005bb783 : call 0x200000779f2
0x0000020000448419 : call 0x20000077c43
0x00000200004484a9 : call 0x20000077da3
0x00000200003cc8c4 : call 0x20000078b92
0x000002000044d900 : call 0x20000078b93
0x00000200004a0109 : call 0x20000079fa0
0x0000020000454b05 : call 0x2000007a34f
0x0000020000452261 : call 0x2000007a3ff
0x000002000045012b : call 0x2000007a463
0x0000020000450115 : call 0x2000007a507
0x0000020000450114 : call 0x2000007a508
0x000002000044fcd4 : call 0x2000007a5e3
0x00000200004511df : call 0x2000007b873
0x0000020000452a60 : call 0x2000007c7ef
0x0000020000400bb1 : call 0x2000007cdf2
0x0000020000450dee : call 0x2000007cdf3
0x0000020000200bb7 : call 0x2000007ce12
0x00000200004886c0 : call 0x2000007ce16
0x00000200000a0cfc : call 0x2000007cf0a
0x00000200005b0df3 : call 0x2000007d082
0x000002000044fa07 : call 0x2000007d083
0x000002000061c3c4 : call 0x2000007d086
0x000002000044fdf0 : call 0x2000007e423
0x00000200001b2357 : call 0x2000007e632
0x0000020000454df0 : call 0x2000007f5bf
0x00000200005ea05e : call 0x2000007f5c0
0x00000200007b41f2 : call 0x20000080442
0x00000200007b6f6d : call 0x20000080447
0x0000020000536f96 : call 0x20000080e7c
0x000002000055968b : call 0x20000081932
0x00000200004a5a48 : call 0x20000081c7e
0x00000200004b4446 : call 0x200000841c7
0x000002000013a10b : call 0x200000863b2
0x0000020000660955 : call 0x2000008e0b6
0x000002000045faff : call 0x2000008e157
0x00000200004e1ffb : call 0x2000008e25a
0x00000200004e1fc6 : call 0x2000008e29e
0x0000020000466038 : call 0x2000008eed7
0x000002000069cdce : call 0x2000008eedb
0x000002000046d448 : call 0x2000008f0f7
0x000002000046c145 : call 0x2000009036b
0x000002000046b4d9 : call 0x20000090397
0x000002000046b4cc : call 0x2000009039f
0x000002000046c15a : call 0x2000009044b
0x0000020000594fb3 : call 0x20000091212
0x00000200004661fe : call 0x20000091213
0x0000020000463825 : call 0x20000092123
0x00000200001a6a6e : call 0x20000092c8a
0x0000020000156b9f : call 0x20000092e22
0x0000020000463cb3 : call 0x200000938eb
0x0000020000464290 : call 0x2000009395f
0x0000020000463cf6 : call 0x2000009399f
0x0000020000463f29 : call 0x20000093ab3
0x00000200004c500e : call 0x20000099cf6
0x000002000046ae06 : call 0x2000009a733
0x000002000004fd93 : call 0x2000009bfa2
0x00000200000b9cfb : call 0x2000009dc86
0x00000200004c59f2 : call 0x2000009dd46
0x0000020000121e88 : call 0x2000009e092
0x000002000046e16e : call 0x2000009e093
0x00000200001e41f3 : call 0x200000a0482
0x0000020000006a31 : call 0x200000a0dc6
0x0000020000024e93 : call 0x200000a1152
0x000002000047178f : call 0x200000a1153
0x00000200001e3ca9 : call 0x200000a2267
0x00000200000a95b0 : call 0x200000a58b2
0x000002000003c05a : call 0x200000a82b2
0x0000020000194cb0 : call 0x200000b0f52
0x00000200000b4ded : call 0x200000b52c6
0x000002000049bb71 : call 0x200000bbbe7
0x000002000079da82 : call 0x200000bbd1c
0x00000200004c0e44 : call 0x200000bd0d2
0x00000200000a1cbd : call 0x200000bded2
0x0000020000501e30 : call 0x200000be122
0x00000200000d26f8 : call 0x200000be962
0x000002000049a3c1 : call 0x200000be963
0x00000200000f19f6 : call 0x200000be966
0x00000200000910bf : call 0x200000be968
0x00000200004cf4fd : call 0x200000bf626
0x00000200005db855 : call 0x200000bf6e7
0x0000020000111555 : call 0x200000c1077
0x00000200000f76a8 : call 0x200000c3992
0x0000020000101f28 : call 0x200000c3999
0x00000200000f7771 : call 0x200000c3a02
0x00000200000c23d8 : call 0x200000c3a06
0x0000020000011f9e : call 0x200000c461b
0x000002000049c8fb : call 0x200000c5b13
0x0000020000789872 : call 0x200000c5b2a
0x000002000049c87a : call 0x200000c7473
0x000002000008e01b : call 0x200000ca2f2
0x00000200004a176b : call 0x200000ca363
0x00000200000ca79d : call 0x200000cc046
0x00000200000b5092 : call 0x200000d1362
0x0000020000102f2a : call 0x200000d1367
0x00000200000477c6 : call 0x200000d3a72
0x00000200004b43c4 : call 0x200000d6423
0x0000020000013601 : call 0x200000d9d77
0x00000200004b498d : call 0x200000d9f73
0x00000200004b9710 : call 0x200000da2b3
0x00000200004b6941 : call 0x200000db9b3
0x0000020000048ced : call 0x200000dd687
0x0000020000101739 : call 0x200000dd942
0x00000200000b553e : call 0x200000dd946
0x00000200000d10e2 : call 0x200000dd947
0x00000200000e1e32 : call 0x200000de052
0x00000200004b22c1 : call 0x200000e0293
0x00000200000e59e3 : call 0x200000e3b66
0x00000200004b9096 : call 0x200000e4e93
0x00000200004b8d55 : call 0x200000e5343
0x00000200001c94fd : call 0x200000e5722
0x00000200004bd81c : call 0x200000e5723
0x00000200003c683f : call 0x200000e5726
0x00000200004ae2a2 : call 0x200000e5728
0x000002000002a0ef : call 0x200000e63b2
0x00000200005cac4f : call 0x200000e6eb2
0x00000200004bb54c : call 0x200000e7213
0x0000020000613f88 : call 0x200000e7217
0x00000200005caff6 : call 0x200000e7252
0x00000200004bb3d0 : call 0x200000e7253
0x000002000047baca : call 0x200000e7da2
0x000002000047bac9 : call 0x200000e7da3
0x00000200004c6fe8 : call 0x200000e7da4
0x00000200006849b4 : call 0x200000e7da6
0x00000200003dbf53 : call 0x200000e7da7
0x00000200004cbbf4 : call 0x200000e7e72
0x00000200004b88c6 : call 0x200000e7e73
0x00000200004b88c5 : call 0x200000e7e74
0x00000200004bb758 : call 0x200000e7f63
0x000002000020bd62 : call 0x200000e8062
0x00000200004bd936 : call 0x200000e8063
0x00000200005e9ee3 : call 0x200000e8066
0x00000200004cab93 : call 0x200000e8067
0x00000200004bd12e : call 0x200000e9663
0x00000200000fd449 : call 0x200000e972e
0x000002000008d739 : call 0x200000e9992
0x00000200004baac8 : call 0x200000e9993
0x000002000061d77c : call 0x200000e99c2
0x00000200004baaea : call 0x200000e99c3
0x000002000050d194 : call 0x200000e99c6
0x0000020000043a6e : call 0x200000e99c7
0x00000200001dd825 : call 0x200000e9a52
0x00000200001e7868 : call 0x200000e9a57
0x00000200004c22d0 : call 0x200000ea3e4
0x000002000014f1a0 : call 0x200000eb3e2
0x000002000006919e : call 0x200000ec398
0x00000200005f1ccc : call 0x200000ed706
0x0000020000002487 : call 0x200000ee692
0x00000200004bea73 : call 0x200000ee693
0x00000200000fbeb9 : call 0x200000ee8f9
0x00000200001d2d13 : call 0x200000eef32
0x00000200004c0eb6 : call 0x200000eef33
0x00000200004cca2c : call 0x200000eef34
0x00000200004c7c67 : call 0x200000f02a7
0x00000200004e4066 : call 0x200000f0302
0x00000200004c0ecd : call 0x200000f0303
0x00000200000342ea : call 0x200000f05b2
0x000002000018fbd0 : call 0x200000f0884
0x0000020000025c14 : call 0x200000f0f44
0x0000020000165295 : call 0x200000f0f45
0x00000200004c489d : call 0x200000f1397
0x00000200004c4b8c : call 0x200000f13ab
0x00000200004c491a : call 0x200000f1423
0x000002000052e0b2 : call 0x200000f544c
0x00000200004f5922 : call 0x200000f7693
0x00000200004d11a6 : call 0x200000f7a73
0x00000200007058ec : call 0x200000f7ff6
0x00000200006a543e : call 0x200000f82db
0x0000020000234f02 : call 0x200000f920b
0x00000200001ce4d0 : call 0x200000fa74e
0x00000200004d0df7 : call 0x200000faca3
0x0000020000403b10 : call 0x200000fb32e
0x0000020000672550 : call 0x200000fb32f
0x000002000050028b : call 0x200000fb330
0x00000200004d429c : call 0x200000fc293
0x00000200003ffc3f : call 0x200000fc296
0x00000200004b041f : call 0x200000fc6aa
0x0000020000511450 : call 0x200000fd672
0x0000020000512839 : call 0x200000fea9e
0x00000200004d1845 : call 0x200000ff4b3
0x0000020000514b97 : call 0x200001009a2
0x00000200001112e5 : call 0x20000111363
0x0000020000176152 : call 0x2000011239e
0x0000020000203bb5 : call 0x20000112e5b
0x00000200004eeee4 : call 0x20000113d57
0x0000020000607d5c : call 0x20000113fae
0x00000200004e8fae : call 0x20000114ac3
0x00000200003cfb39 : call 0x20000115997
0x0000020000117fc5 : call 0x20000117f1e
0x00000200004eeeb6 : call 0x2000011bf37
0x00000200003e2c6f : call 0x2000011ef6a
0x00000200004fdd64 : call 0x2000011f4e3
0x00000200004fdeef : call 0x2000011f84b
0x00000200004fbf83 : call 0x200001208c3
0x00000200004f61cb : call 0x200001243ff
0x00000200004f5f05 : call 0x200001244df
0x0000020000555765 : call 0x200001319e2
0x00000200001cd47d : call 0x2000013977a
0x0000020000145310 : call 0x2000013977e
0x00000200001c7e0c : call 0x200001397cb
0x00000200001cd5d9 : call 0x20000139876
0x00000200001cd657 : call 0x20000139877
0x000002000079c3ea : call 0x2000013a6dc
0x00000200001aea68 : call 0x2000013ac72
0x000002000050b13c : call 0x2000013ac73
0x00000200001cf7dc : call 0x2000013ba72
0x0000020000513ea6 : call 0x2000013ba73
0x00000200001cf93d : call 0x2000013bb76
0x0000020000513e45 : call 0x2000013bb77
0x0000020000513e5b : call 0x2000013bd3f
0x00000200006cfd7a : call 0x2000013c062
0x0000020000516af3 : call 0x2000013c1b3
0x0000020000516a40 : call 0x2000013c283
0x000002000051249e : call 0x2000013d1b3
0x00000200005156ec : call 0x2000013fb93
0x0000020000724a4d : call 0x20000140d1e
0x000002000051ebf8 : call 0x2000014122b
0x000002000051ebea : call 0x200001412c7
0x00000200005215ee : call 0x20000147f13
0x000002000052bc5a : call 0x20000147f52
0x0000020000521f01 : call 0x20000147f73
0x000002000052bc8f : call 0x20000147f92
0x000002000051f14f : call 0x20000148033
0x000002000022bd7b : call 0x20000148072
0x0000020000519651 : call 0x20000148073
0x00000200005252c0 : call 0x20000148074
0x00000200005252bf : call 0x20000148075
0x00000200006e3551 : call 0x20000148076
0x000002000054a66a : call 0x20000148077
0x000002000013774a : call 0x20000148078
0x000002000051d9d9 : call 0x200001480b3
0x000002000022be04 : call 0x200001480d2
0x000002000051b677 : call 0x200001480d3
0x00000200007cbee3 : call 0x200001480f2
0x0000020000527f10 : call 0x20000148153
0x0000020000519afe : call 0x20000148173
0x0000020000525ec9 : call 0x20000148233
0x00000200005215ab : call 0x20000148293
0x000002000069c089 : call 0x20000148372
0x000002000051d8bd : call 0x20000148373
0x000002000051f239 : call 0x20000148473
0x000002000051f30e : call 0x20000148493
0x0000020000527c4a : call 0x200001484d3
0x000002000061c25b : call 0x200001484f2
0x000002000051da33 : call 0x200001484f3
0x000002000051ed2b : call 0x20000148553
0x000002000052244e : call 0x20000148633
0x000002000051f2a1 : call 0x200001486b3
0x000002000066c54a : call 0x200001487b2
0x000002000051da5c : call 0x200001487b3
0x000002000069c6a1 : call 0x20000148932
0x0000020000519497 : call 0x20000148a93
0x0000020000459831 : call 0x20000148a98
0x00000200001ae6e8 : call 0x20000148a99
0x0000020000525642 : call 0x200001497f3
0x000002000051bd7f : call 0x20000149833
0x000002000051ad47 : call 0x20000149a33
0x000002000051f093 : call 0x20000149e13
0x000002000052013d : call 0x2000014a253
0x0000020000520168 : call 0x2000014a7f3
0x000002000020e655 : call 0x2000014a8f2
0x000002000058237b : call 0x2000014b4d4
0x000002000051c0b4 : call 0x2000014b4f3
0x000002000051c07b : call 0x2000014b513
0x000002000015f3e7 : call 0x2000014b6e2
0x00000200001df405 : call 0x2000014b6f2
0x00000200003d8d57 : call 0x2000014ba37
0x00000200003d8d56 : call 0x2000014ba38
0x00000200003d8d55 : call 0x2000014ba39
0x00000200006e6d04 : call 0x2000014c396
0x00000200004b2809 : call 0x2000014ea52
0x00000200006f4f62 : call 0x200001511c2
0x000002000011c234 : call 0x20000151287
0x0000020000705614 : call 0x200001518a2
0x000002000052d21d : call 0x200001518a3
0x000002000016b30b : call 0x20000157542
0x00000200005298ac : call 0x20000157543
0x000002000052c9aa : call 0x20000157544
0x00000200007d410d : call 0x20000157546
0x00000200005564f1 : call 0x20000157547
0x00000200001d885b : call 0x20000157548
0x000002000018b5a5 : call 0x20000157882
0x0000020000528222 : call 0x20000157883
0x000002000052f6db : call 0x20000157884
0x000002000052f6da : call 0x20000157885
0x0000020000137345 : call 0x20000157886
0x0000020000136bab : call 0x20000157887
0x0000020000137343 : call 0x20000157888
0x000002000065258a : call 0x20000157889
0x000002000060fbb7 : call 0x2000015799f
0x000002000058fb50 : call 0x200001b500b
0x000002000058f23f : call 0x200001b5deb
0x000002000059096a : call 0x200001b639b
0x0000020000590599 : call 0x200001b784f
0x0000020000616e08 : call 0x200001b861a
0x00000200001c0201 : call 0x200001bc476
0x00000200001c0217 : call 0x200001bc477
0x00000200001c0ba9 : call 0x200001bce5a
0x00000200001be6ad : call 0x200001be5e7
0x00000200001c53a8 : call 0x200001c51d6
0x00000200005a2f18 : call 0x200001c596b
0x00000200005a384b : call 0x200001c980b
0x00000200005a7099 : call 0x200001cb88b
0x000002000059f601 : call 0x200001cce53
0x00000200005a2ea4 : call 0x200001ce9df
0x00000200005a2eac : call 0x200001ceabb
0x00000200005a9b2c : call 0x200001d19ff
0x00000200005aa134 : call 0x200001d20f3
0x00000200005aa13b : call 0x200001d21c7
0x00000200005aa21d : call 0x200001d24ef
0x00000200001a73aa : call 0x200001d3636
0x00000200005acd19 : call 0x200001d36cf
0x00000200005b1602 : call 0x200001daeeb
0x00000200005ac2a0 : call 0x200001dbf3b
0x00000200005ac4d6 : call 0x200001dc1a3
0x00000200005bfe45 : call 0x200001e4af7
0x0000020000710de8 : call 0x200001e4b8b
0x00000200006636d8 : call 0x200001ef962
0x00000200001f4081 : call 0x200001f02c2
0x00000200005d3f8d : call 0x200001f4367
0x0000020000176c76 : call 0x200001fc7e3
0x00000200002009a3 : call 0x20000202b5b
0x0000020000678246 : call 0x200002044ba
0x00000200006783a7 : call 0x200002045ba
0x00000200005e937f : call 0x2000020a93b
0x00000200005df456 : call 0x2000020bb6b
0x00000200005df440 : call 0x2000020bcbb
0x00000200005df86d : call 0x2000020bcdf
0x00000200005df8ac : call 0x2000020bd37
0x00000200005df8ab : call 0x2000020bd38
0x00000200005e5f9b : call 0x2000020cc8b
0x0000020000711c1a : call 0x2000020debe
0x0000020000211fa7 : call 0x20000211a6b
0x000002000068eaa5 : call 0x20000211c36
0x00000200005f646b : call 0x200002164af
0x00000200005e9ea7 : call 0x20000217a23
0x00000200005f69ef : call 0x20000217cab
0x000002000017bb6f : call 0x20000217d9a
0x0000020000160222 : call 0x2000021c48e
0x00000200005f6ec5 : call 0x2000021e373
0x0000020000712a88 : call 0x2000021ed76
0x0000020000709f8d : call 0x2000021fc73
0x0000020000709f8c : call 0x2000021fc74
0x0000020000709f8b : call 0x2000021fc75
0x00000200002254c5 : call 0x20000225212
0x0000020000606919 : call 0x20000229927
0x00000200005fcf45 : call 0x2000022ba9b
0x000002000023ffd9 : call 0x2000024c292
0x00000200000e0cfd : call 0x2000024d002
0x000002000061d0a1 : call 0x2000024d003
0x000002000061f38d : call 0x2000024d004
0x0000020000202583 : call 0x2000024d006
0x0000020000004bed : call 0x2000024d007
0x00000200000f182d : call 0x2000024da42
0x000002000061f11b : call 0x2000024da43
0x0000020000620af2 : call 0x2000024da44
0x00000200007ae351 : call 0x2000024da48
0x000002000047db99 : call 0x2000030db95
0x00000200003cf5e0 : call 0x200003cf180
0x00000200007ae16b : call 0x200003d02e3
0x00000200003d2a60 : call 0x200003d06fe
0x00000200007ac149 : call 0x200003d079b
0x00000200007a8b14 : call 0x200003d0a6b
0x00000200007a8f4a : call 0x200003d2087
0x00000200007a8a8d : call 0x200003d2417
0x00000200007a8d04 : call 0x200003d2527
0x00000200007a8cf4 : call 0x200003d25b7
0x00000200007a42e5 : call 0x200003d2693
0x00000200007a944a : call 0x200003d2fa3
0x00000200007adb4d : call 0x200003d362f
0x00000200007ae1c4 : call 0x200003d3793
0x00000200007ae39b : call 0x200003d37bb
0x00000200007bbc59 : call 0x200003e1c83
0x00000200007b3aa6 : call 0x200003e2e17
0x00000200007bc249 : call 0x200003e5f87
0x0000020000522862 : call 0x200003e5f8b
0x00000200003e73c0 : call 0x200003e73e7
0x00000200007bcb38 : call 0x200003e9a03
0x00000200004f4702 : call 0x200003f09ee
0x00000200007cd11f : call 0x200003f7bbf
0x00000200007d09b8 : call 0x200003f7cef
0x000002000064c5da : call 0x200003f8852
0x00000200007cd1d2 : call 0x200003f8b57
0x00000200006dcfaf : call 0x200003f91be
0x00000200003fc06f : call 0x200003fa19c
0x00000200003fcdf8 : call 0x200003fcf57
0x00000200003fd494 : call 0x200003fd4cb
0x0000020000400427 : call 0x200003fea0e
0x00000200006e2956 : call 0x200003feb96
0x00000200007d08e3 : call 0x200003fec83
0x00000200006c3337 : call 0x200003ff5ae
0x00000200006e00db : call 0x20000401356
0x000002000051bd63 : call 0x20000401ebf
0x00000200007d47d3 : call 0x20000402867
0x0000020000625b52 : call 0x2000040286c
0x0000020000625b51 : call 0x2000040286d
0x00000200004672e4 : call 0x200004035d2
0x0000020000601a9f : call 0x20000407fea
0x000002000000ca1c : call 0x20000408c66
0x000002000000ca90 : call 0x20000408d32
0x000002000053cbdb : call 0x20000408e6e
0x00000200003de822 : call 0x2000040aa42
0x000002000040f107 : call 0x2000040b3ce
0x0000020000591c8e : call 0x2000040deb2
0x00000200005a69c5 : call 0x20000422c3a
0x000002000047a1dd : call 0x20000426416
0x000002000047a26a : call 0x2000042651e
0x000002000050a2e9 : call 0x200004265ca
0x00000200005247e3 : call 0x20000430a06
0x000002000003ece2 : call 0x2000044af46
0x000002000069f6a9 : call 0x2000044b98a
0x0000020000518633 : call 0x200004548b6
0x00000200005b0cc2 : call 0x2000045ced6
0x00000200005badaf : call 0x2000046701a
0x000002000046763c : call 0x2000046701e
0x00000200004592c3 : call 0x2000046701f
0x00000200003ed38b : call 0x20000469682
0x00000200005846e7 : call 0x2000047098e
0x0000020000454f51 : call 0x200004740e8
0x0000020000798f96 : call 0x20000475292
0x00000200005dd2b6 : call 0x20000479552
0x00000200001b58f2 : call 0x20000481b12
0x00000200004c803c : call 0x20000484312
0x0000020000408a1c : call 0x20000494b23
0x000002000007635c : call 0x20000494b56
0x0000020000498a0e : call 0x20000494ce2
0x0000020000407fb1 : call 0x20000494d67
0x000002000040b351 : call 0x200004975d2
0x000002000000ce0e : call 0x200004990be
0x00000200001ae5ac : call 0x2000049a812
0x00000200005fe592 : call 0x2000049a813
0x000002000055ae28 : call 0x2000049e523
0x0000020000558836 : call 0x200004a4a7a
0x00000200004b236b : call 0x200004b23f6
0x0000020000790b7a : call 0x200004b3098
0x000002000060713e : call 0x200004b3386
0x00000200004b79d3 : call 0x200004b75d4
0x0000020000668676 : call 0x200004bc052
0x00000200006ae954 : call 0x200004bc053
0x00000200005d89c2 : call 0x200004c083a
0x000002000049bb79 : call 0x200004c75e7
0x000002000042d7be : call 0x200004c99d2
0x00000200004e5834 : call 0x200004cb456
0x000002000068369d : call 0x200004cf952
0x0000020000598cbb : call 0x200004d4f32
0x00000200004e6db6 : call 0x200004e2ffe
0x00000200004eaae1 : call 0x200004e6d6e
0x000002000004ed35 : call 0x200004e73ba
0x000002000004ed34 : call 0x200004e73bb
0x000002000042b758 : call 0x200004e7a56
0x00000200001eef67 : call 0x200004ede1b
0x00000200004f1de8 : call 0x200004f961b
0x000002000050016d : call 0x200004fd3b9
0x00000200004f162b : call 0x200004fd852
0x00000200001315e0 : call 0x200004fd882
0x0000020000631e06 : call 0x200004fe09e
0x00000200005a3027 : call 0x200004ff2ca
0x00000200005ab88f : call 0x20000507aee
0x00000200003ef963 : call 0x2000050bc3e
0x0000020000513f89 : call 0x20000513fab
0x00000200003cbd6c : call 0x20000517f76
0x000002000066e8ba : call 0x2000051ab56
0x0000020000500184 : call 0x2000051b54d
0x00000200003d0662 : call 0x2000051c8ee
0x00000200006d4702 : call 0x2000052093e
0x00000200005b36b9 : call 0x200005213c3
0x00000200006a24d5 : call 0x20000524543
0x000002000051a928 : call 0x20000526bee
0x000002000052f8b1 : call 0x20000540c44
0x000002000045710a : call 0x2000054334a
0x000002000054369b : call 0x200005436e3
0x0000020000543aa3 : call 0x2000054525b
0x0000020000459b90 : call 0x20000545dca
0x00000200007ab317 : call 0x2000054b986
0x00000200005f2aca : call 0x2000054ba13
0x00000200007b6aa1 : call 0x20000562cda
0x00000200007b6e93 : call 0x20000563132
0x00000200007b7046 : call 0x200005632a2
0x00000200007bb059 : call 0x200005672b6
0x0000020000610184 : call 0x2000056964b
0x00000200006006e0 : call 0x2000060890b
0x000002000060ed33 : call 0x2000060ebbf
0x000002000060ed22 : call 0x20000610167
0x00000200006145b4 : call 0x200006149e2
0x00000200005b02fe : call 0x2000061c5f2
0x000002000061c3d1 : call 0x2000061c5f6
0x00000200005a2bc3 : call 0x2000061ee9e
0x0000020000640da9 : call 0x2000063d02e
0x0000020000638db8 : call 0x20000644fde
0x00000200004ece8c : call 0x200006590da
0x00000200005de15b : call 0x2000065a396
0x00000200005de288 : call 0x2000065a542
0x00000200005c1951 : call 0x2000065cc8e
0x00000200005e0b36 : call 0x20000664df6
0x00000200003dc3b8 : call 0x200006686a6
0x00000200005dcb87 : call 0x20000668dea
0x000002000067c16d : call 0x2000067f01e
0x00000200005a2448 : call 0x20000692eae
0x00000200006a2469 : call 0x200006a1eaf
0x00000200003faf8e : call 0x200006b721a
0x00000200006ca23c : call 0x200006c64aa
0x00000200006ca6a6 : call 0x200006c6936
0x00000200006b916f : call 0x200006c7e75
0x0000020000696eac : call 0x200006d313e
0x00000200006f74ce : call 0x200006f37ae
0x00000200006f754f : call 0x200006f735f
0x0000020000701dcf : call 0x200007026cd
0x00000200007179bd : call 0x20000703bea
0x0000020000708b75 : call 0x20000706abf
0x0000020000701e96 : call 0x2000070c0e9
0x00000200007023c2 : call 0x2000070cadf
0x0000020000701cf9 : call 0x2000070cae1
0x00000200007031d4 : call 0x2000070d31e
0x0000020000702ca1 : call 0x2000070d31f
0x0000020000710c91 : call 0x20000710cf7
0x0000020000710793 : call 0x20000710d6b
0x0000020000710a79 : call 0x20000710da3
0x00000200007052c2 : call 0x20000711596
0x00000200007140c1 : call 0x20000714517
0x00000200007043d5 : call 0x20000717896
0x0000020000726f7a : call 0x20000728bfc
0x0000020000799c9e : call 0x20000795f0e
0x00000200007a0f11 : call 0x200007a13a4
0x000002000079c28d : call 0x200007abbd4
0x00000200007c602c : call 0x200007d226a
0x00000200004b478c : call 0x200018ecf9c
0x00000200005e36ae : call 0x2000256b9bd
0x00000200000bf997 : call 0x200039541ad
0x00000200000c6f7b : call 0x200039bbd11
0x00000200004e79c7 : call 0x20003d7c1dd
0x00000200005e1194 : call 0x20003e759aa
0x000002000065911c : call 0x20004288728
0x0000020000696ef8 : call 0x200042bade8
0x0000020000696eab : call 0x200042bfa9b
0x000002000002debd : call 0x20004902acf
0x000002000007f601 : call 0x20004954213
0x0000020000171ea2 : call 0x20004a46ab4
0x00000200003ea5a0 : call 0x200063728cc
0x00000200000ad148 : call 0x200072f93da
0x0000020000137b22 : call 0x20007d671f6
0x00000200006d5617 : call 0x2000cbce36a
0x000002000043a926 : call 0x2000f85a928
0x0000020000019097 : call 0x2000fc3cbe0
0x0000020000019096 : call 0x2000fc3cbe1
0x0000020000042590 : call 0x2000fc6a99b
0x0000020000072d77 : call 0x2000fc968c8
0x0000020000072eeb : call 0x2000fc96a3c
0x00000200000a430b : call 0x2000fcc7e19
0x00000200000d4675 : call 0x2000fcf8183
0x00000200000d4c43 : call 0x2000fcf8751
0x00000200004dce3a : call 0x2001010098a
0x00000200004dce39 : call 0x2001010098b
0x00000200004e05ca : call 0x2001010411a
0x00000200004e05c9 : call 0x2001010411b
0x00000200004e0e56 : call 0x200101049a6
0x00000200004e0e55 : call 0x200101049a7
0x0000020000432bb5 : call 0x200103716e0
0x0000020000778134 : call 0x20011778137
0x0000020000778260 : call 0x20011778263
0x00000200003fab5e : call 0x20013b26da0
0x00000200001e5e5d : call 0x200141d9f71
0x000002000041e6b0 : call 0x200148907d4
0x000002000007f60c : call 0x2001495421e
0x0000020000781277 : call 0x20017ab5a85
0x000002000078142e : call 0x20017ab5c3c
0x0000020000781570 : call 0x20017ab5d7e
0x0000020000782ece : call 0x20017ab76dc
0x000002000078307e : call 0x20017ab788c
0x00000200007831bc : call 0x20017ab79ca
0x00000200004b672f : call 0x200190dea47
0x0000020000164c2e : call 0x2001ff6cf41
0x0000020000164c9f : call 0x2001ff6cfb0
0x00000200006bbcd3 : call 0x2002d7945e6
0x0000020000530d3d : call 0x20033160ef8
0x000002000049a783 : call 0x200332c9296
0x00000200004549d7 : call 0x200334549e5
0x0000020000138b22 : call 0x20033d58e76
0x00000200004c4e34 : call 0x200344c1100
0x00000200005fb978 : call 0x200345fafff
0x00000200000bd98c : call 0x200384f62b3
0x00000200005f4753 : call 0x2003c5f3d08
0x00000200000c9994 : call 0x20041ce9ce8
0x00000200000c99e0 : call 0x20041ce9d34
0x000002000014e9db : call 0x20041d7f930
0x000002000014e9da : call 0x20041d7f931
0x0000020000211882 : call 0x20041e31bce
0x000002000042723c : call 0x2004204fd85
0x0000020000548edd : call 0x20042177a1c
0x0000020000493d22 : call 0x2004258ff64
0x00000200001d006d : call 0x20043398dc1
0x00000200005e3e92 : call 0x200437acbe6
0x00000200007d5ce2 : call 0x20044e41f74
0x00000200006f5d3c : call 0x20045316088
0x00000200006f5d3b : call 0x20045316089
0x00000200001082b8 : call 0x200459a44e2
0x000002000005ccd6 : call 0x200480e41f1
0x0000020000135abb : call 0x20048135ac8
0x000002000019feae : call 0x200481bc1ab
0x000002000077ba7d : call 0x2004877ba98
0x000002000002c3b7 : call 0x20048c4e707
0x000002000002b711 : call 0x20048c54261
0x00000200000ac4d6 : call 0x20048cdc426
0x000002000010252a : call 0x20048d2287a
0x000002000015ad2f : call 0x20048d7b87f
0x000002000015b3ed : call 0x20048d7bf3d
0x000002000015c41a : call 0x20048d7cf6a
0x000002000015c9d4 : call 0x20048d7d524
0x000002000015ce52 : call 0x20048d7d9a2
0x000002000004413d : call 0x20048e2b649
0x000002000021c911 : call 0x20048e43e1a
0x00000200003e452d : call 0x2004900487d
0x00000200003e45cd : call 0x2004900491d
0x00000200003e4740 : call 0x20049004a90
0x00000200003e4840 : call 0x20049004b90
0x00000200003e4a78 : call 0x20049004dc8
0x00000200003e4b31 : call 0x20049004e81
0x00000200003e4bc9 : call 0x20049004f19
0x00000200003e4cfd : call 0x2004900504d
0x00000200003e4e99 : call 0x200490051e9
0x00000200003e4f28 : call 0x20049005278
0x00000200003e4fdf : call 0x2004900532f
0x0000020000466d87 : call 0x2004909568e
0x00000200004b4c7f : call 0x200490d4fcf
0x00000200004ef72f : call 0x2004910fa7f
0x000002000051a859 : call 0x2004913cba9
0x0000020000540e51 : call 0x200491699a5
0x0000020000540e50 : call 0x200491699a6
0x000002000055d3b3 : call 0x20049185f07
0x000002000055d3b2 : call 0x20049185f08
0x0000020000595252 : call 0x200491bde59
0x0000020000601515 : call 0x20049221865
0x00000200006048e8 : call 0x2004922d334
0x000002000061446b : call 0x200492367bb
0x000002000062409f : call 0x2004924cbf3
0x000002000062409e : call 0x2004924cbf4
0x0000020000673f3c : call 0x2004929428c
0x000002000068a64a : call 0x200492aa956
0x00000200006c2518 : call 0x200492e2868
0x00000200006c25bd : call 0x200492e290d
0x00000200006c2659 : call 0x200492e29a9
0x00000200006c26f5 : call 0x200492e2a45
0x00000200007158f9 : call 0x20049335c49
0x00000200007159d4 : call 0x20049335d24
0x0000020000716129 : call 0x20049336479
0x0000020000716a4b : call 0x20049336d9b
0x0000020000716ba4 : call 0x20049336ef4
0x0000020000716c39 : call 0x20049336f89
0x0000020000716cd2 : call 0x20049337022
0x0000020000778415 : call 0x20049398765
0x0000020000778415 : call 0x2004939876a
0x00000200007787b6 : call 0x20049398b06
0x000002000077cb1b : call 0x2004939ce6b
0x000002000077cbdf : call 0x2004939cf2f
0x000002000077d05c : call 0x2004939d3ac
0x0000020000783f4b : call 0x200493a429b
0x000002000078d00e : call 0x200493ad35e
0x000002000078ec75 : call 0x200493aefc5
0x00000200007a8eb1 : call 0x200493cb201
0x00000200007a6855 : call 0x200493cf3a9
0x00000200007a6854 : call 0x200493cf3aa
0x00000200007c2933 : call 0x200493e2c83
0x00000200003e79fc : call 0x200493e3c10
0x0000020000013331 : call 0x20049c33685
0x000002000022e4d2 : call 0x2004a0059de
0x000002000022e6cc : call 0x2004a005bd8
0x000002000024c6b4 : call 0x2004a023bc0
0x000002000050f1fb : call 0x2004a12f54f
0x00000200000ba972 : call 0x2004cce34c3
0x0000020000113773 : call 0x2004cd35ac3
0x0000020000117834 : call 0x2004dd3db84
0x00000200006c1c1e : call 0x20064a76091
0x000002000053b3ad : call 0x2006715b6d4
0x000002000040fd21 : call 0x2006a033032
0x0000020000479d20 : call 0x2006a09d031
0x0000020000492d99 : call 0x2006a0b60aa
0x000002000062668e : call 0x2006b4b38cc
0x000002000062668d : call 0x2006b4b38cd
0x0000020000076fa5 : call 0x20073dda9f2
0x00000200001e82ac : call 0x2007416be00
0x000002000019444b : call 0x200741aec65
0x000002000012f84f : call 0x20074d37da4
0x000002000008a26f : call 0x200750a4a89
0x00000200004bb5c4 : call 0x2007511f119
0x00000200006024d2 : call 0x2007520a9dd
0x00000200007a3c2c : call 0x200753c773a
0x00000200007cfd3d : call 0x20075402851
0x000002000004aef9 : call 0x20075c6ea07
0x00000200001e3780 : call 0x20075debd8c
0x00000200004cfb2a : call 0x200760d807f
0x000002000068fc49 : call qword ptr [r10]
0x0000020000017937 : call qword ptr [r11]
0x00000200001e5c0e : call qword ptr [r15]
0x000002000007bf7e : call qword ptr [r8 + 0xf8]
0x000002000010cda9 : call qword ptr [r8]
0x00000200003d8a0c : call qword ptr [r9]
0x000002000007bf7f : call qword ptr [rax + 0xf8]
0x00000200005d8ca2 : call qword ptr [rax - 0x113d1817]
0x00000200005d8d5b : call qword ptr [rax - 0x113d1d17]
0x00000200005d8cd5 : call qword ptr [rax - 0x113d4b17]
0x00000200005d90b3 : call qword ptr [rax - 0x113d7917]
0x00000200005d8d70 : call qword ptr [rax - 0x113de617]
0x00000200001895b6 : call qword ptr [rax - 0x11573d17]
0x000002000018572d : call qword ptr [rax - 0x1213d817]
0x00000200005d0951 : call qword ptr [rax - 0x12f93d17]
0x000002000016dadd : call qword ptr [rax - 0x12fe3d17]
0x00000200005cf44a : call qword ptr [rax - 0x13653d17]
0x00000200005cd655 : call qword ptr [rax - 0x13b90b17]
0x00000200007cbf88 : call qword ptr [rax - 0x13d2917]
0x00000200007cbe51 : call qword ptr [rax - 0x13dc517]
0x00000200005c8dd0 : call qword ptr [rax - 0x144f3d17]
0x00000200005c317b : call qword ptr [rax - 0x153d0c17]
0x00000200005c2087 : call qword ptr [rax - 0x15833d17]
0x00000200005af7ce : call qword ptr [rax - 0x15ae3d17]
0x00000200005ac95b : call qword ptr [rax - 0x1605a717]
0x00000200005a187a : call qword ptr [rax - 0x173d0e17]
0x0000020000595f81 : call qword ptr [rax - 0x17df3d17]
0x0000020000594fa6 : call qword ptr [rax - 0x18006f17]
0x00000200005915f8 : call qword ptr [rax - 0x18420717]
0x00000200005892e0 : call qword ptr [rax - 0x18f63d17]
0x00000200005890ac : call qword ptr [rax - 0x1900cc17]
0x0000020000587b05 : call qword ptr [rax - 0x193dbd17]
0x00000200006f54e7 : call qword ptr [rax - 0x213d17]
0x00000200007c5efd : call qword ptr [rax - 0x2323d17]
0x000002000072a443 : call qword ptr [rax - 0x3d4217]
0x000002000072a435 : call qword ptr [rax - 0x3d8117]
0x000002000017b677 : call qword ptr [rax - 0x5793d17]
0x0000020000177948 : call qword ptr [rax - 0x60b3d17]
0x000002000017624f : call qword ptr [rax - 0x63d1a17]
0x0000020000176166 : call qword ptr [rax - 0x63dfc17]
0x00000200000e06ae : call qword ptr [rax - 0x763d49f1]
0x00000200006c820e : call qword ptr [rax - 0x7cb73c75]
0x00000200005fccf7 : call qword ptr [rax - 0x9603d17]
0x00000200005f8e6e : call qword ptr [rax - 0x9c73d17]
0x00000200001a4596 : call qword ptr [rax - 0xc5b3d17]
0x00000200001a2998 : call qword ptr [rax - 0xcdd5117]
0x000002000019eca8 : call qword ptr [rax - 0xd703d17]
0x00000200005ea340 : call qword ptr [rax - 0xe3d4717]
0x00000200005ebdfb : call qword ptr [rax - 0xe3da317]
0x00000200005e7efb : call qword ptr [rax - 0xeb53d17]
0x00000200005e53ef : call qword ptr [rax - 0xf163d17]
0x0000020000006fc6 : call qword ptr [rax]
0x00000200007bbf4b : call qword ptr [rbx + rax*8]
0x00000200001d3ff5 : call qword ptr [rbx]
0x0000020000065d54 : call qword ptr [rcx]
0x0000020000546e01 : call qword ptr [rdi + 0x100]
0x000002000041e59d : call qword ptr [rdi - 0x3c740034]
0x00000200000fb321 : call qword ptr [rdi]
0x0000020000050791 : call qword ptr [rdx]
0x00000200000ca710 : call qword ptr [rip + 0x18c25a]
0x0000020000713173 : call qword ptr [rip - 0x3d28f9]
0x00000200006319ee : call qword ptr [rip - 0x3db19c]
0x0000020000631a1f : call qword ptr [rip - 0x3db1cd]
0x00000200006359a9 : call qword ptr [rip - 0x3dea9f]
0x00000200006359e8 : call qword ptr [rip - 0x3deab6]
0x0000020000635c98 : call qword ptr [rip - 0x3ded6e]
0x00000200007aa65c : call qword ptr [rip - 0x553d0a]
0x00000200006c7e06 : call qword ptr [rip - 0x7ccf82]
0x00000200005aa127 : call qword ptr [rip - 0x7cef8c]
0x000002000023c5ef : call qword ptr [rsi + 0x168]
0x00000200000fed8c : call qword ptr [rsi]
0x000002000000c16e : call r10
0x000002000007d4dc : call r11
0x00000200001d6dc2 : call r12
0x0000020000006c47 : call r14
0x0000020000020d10 : call r15
0x000002000006f19c : call r8
0x00000200000038ce : call r9
0x00000200000626dc : call rax
0x0000020000030894 : call rbx
0x00000200000038cf : call rcx
0x0000020000020d11 : call rdi
0x000002000000c16f : call rdx
0x0000020000006c48 : call rsi
0x00000200001d6dc3 : call rsp
0x000002000001bc3e : cdq ; adc al, 0 ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x00000200000c17e6 : cdq ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200005d3df4 : cdq ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret
0x00000200001491c5 : cdq ; add byte ptr [rax], al ; add cl, ch ; jb 0x200001491a3 ; add byte ptr [rax], al ; ret
0x000002000014b1c5 : cdq ; add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014b183 ; add byte ptr [rax], al ; ret
0x0000020000515c77 : cdq ; add eax, dword ptr [rax] ; add byte ptr [rbp + 0x75880fc0], al ; ret
0x00000200000f89b8 : cdq ; and al, byte ptr [rax] ; seta dl ; mov al, dl ; ret
0x0000020000196431 : cdq ; and cl, dh ; push rsi ; ret
0x000002000041502f : cdq ; call qword ptr [rdi]
0x000002000040d4bb : cdq ; clc ; or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000597f3 : cdq ; cld ; xor al, 0 ; call rax
0x00000200007aa6c8 : cdq ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x000002000002e39c : cdq ; fsub dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret
0x0000020000115f01 : cdq ; hlt ; jmp qword ptr [rcx]
0x00000200002118a7 : cdq ; idiv ecx ; add eax, r9d ; ret
0x0000020000117b72 : cdq ; idiv rcx ; ret
0x00000200007c3ac7 : cdq ; in eax, dx ; ret
0x0000020000792614 : cdq ; inc dword ptr [rbp - 0x75ec8740] ; ret
0x00000200007a7805 : cdq ; inc dword ptr [rbp - 0xf68b40] ; ret
0x00000200004a6e7b : cdq ; jmp 0x1ffc2df7e85
0x0000020000668e80 : cdq ; jmp qword ptr [rbx]
0x00000200004f58dd : cdq ; loop 0x200004f58e2 ; ret
0x00000200005b9643 : cdq ; mov ah, dl ; dec dword ptr [rax - 0x39] ; ret 0xf80
0x0000020000561886 : cdq ; or dword ptr [rax], eax ; ret
0x000002000020a195 : cdq ; pop rsi ; add byte ptr [rax], al ; pop r14 ; ret
0x00000200007b2b28 : cdq ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000002000024734b : cdq ; push rax ; add eax, 0xb480000 ; ret 0x8d4c
0x00000200006bbc63 : cdq ; push rbx ; xchg eax, esp ; inc dword ptr [rbp + 0x33] ; fild dword ptr [rbp - 0x75] ; ret
0x0000020000170cc7 : cdq ; ret
0x0000020000437506 : cdq ; ret 0x2be8
0x00000200007a8a8f : cdq ; ret 0x85ff
0x000002000062cf38 : cdq ; ret 0xccff
0x00000200004746fd : cdq ; ret 0xf0ff
0x00000200006517a3 : cdq ; ret 0xffbf
0x00000200007978ea : cdq ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x00000200003e3bb8 : cdq ; sar bh, 0xc8 ; ret
0x000002000057cf9e : cdq ; sbb byte ptr [rax], al ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x00000200004aa095 : cdq ; sbb byte ptr [rip + 0x43750000], al ; ret
0x00000200007bcd63 : cdq ; xlatb ; mov bl, 0xff ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000559023 : cdq ; xor al, byte ptr [rcx] ; add bl, ch ; ret
0x000002000011ed40 : cdqe ; or rax, r9 ; or rax, rcx ; ret
0x00000200006137b3 : cdqe ; ret
0x00000200004da681 : clc ; adc al, 0 ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000003ecb6 : clc ; adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000002000003eca2 : clc ; adc al, byte ptr [rax] ; lea eax, dword ptr [rcx + 1] ; ret
0x0000020000168881 : clc ; adc byte ptr [rax + 0x3b], cl ; ret 0x850f
0x000002000001de81 : clc ; adc byte ptr [rax - 0x75], cl ; ret 0xf49
0x0000020000186b5d : clc ; adc byte ptr [rax - 0x77], cl ; adc r9b, bpl ; ret
0x00000200000188fe : clc ; adc byte ptr [rcx - 0x75], cl ; ret
0x000002000013c662 : clc ; adc byte ptr [rip + 0x7fff], ah ; ret
0x000002000009da3b : clc ; add al, 0 ; add byte ptr [rax + 0x3b], cl ; ret 0xe874
0x000002000059648b : clc ; add al, 0x7d ; or al, byte ptr [rcx - 0x3f] ; ret
0x0000020000719680 : clc ; add al, 0x7e ; mov eax, 1 ; ret
0x0000020000225166 : clc ; add al, 0xf ; ret 0x44ff
0x000002000048a198 : clc ; add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200007a2f4f : clc ; add bl, ch ; ret 0x48cc
0x00000200004ffa31 : clc ; add byte ptr [r9 + 3], r9b ; ret 0xe0ff
0x00000200003e681d : clc ; add byte ptr [rax], al ; add al, ch ; ret 0xc1fa
0x000002000006cd12 : clc ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200004a7ea2 : clc ; add byte ptr [rax], al ; add bh, dh ; ret
0x000002000067b293 : clc ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x1e73
0x00000200004b2747 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001e8c05 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x25
0x00000200004e9f2b : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7cb7b38c], al ; ret 0x4428
0x00000200006cfe32 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000527dcf : clc ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200006945f5 : clc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x43 ; add bh, bh ; ret 0x8b4c
0x000002000007bf81 : clc ; add byte ptr [rax], al ; add cl, ch ; ret 1
0x0000020000149da5 : clc ; add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; ret 0
0x000002000052dfb9 : clc ; add cl, byte ptr [rdi] ; test dword ptr [rdi], edx ; ret 8
0x000002000002d983 : clc ; add dh, byte ptr [rbp - 0x1f] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008eee2 : clc ; add dh, byte ptr [rbx + 1] ; ret
0x00000200000bb8c7 : clc ; add dh, byte ptr [rbx + rdx*2 + 0xf] ; mov dh, 0x43 ; and esi, dword ptr [rdx] ; ret 0x724
0x0000020000049226 : clc ; add dh, byte ptr [rdx - 0x29] ; or eax, 0xffffffff ; ret
0x00000200000987f1 : clc ; add dh, byte ptr [rdx - 6] ; mov eax, 2 ; ret
0x00000200007b6a9c : clc ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20000562cdf
0x00000200007b6a9b : clc ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20000562ce0
0x000002000048ce7c : clc ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000eef02 : clc ; add dword ptr [rbp + 1], esi ; ret
0x00000200006ae269 : clc ; add dword ptr [rbp - 0x19], esi ; add rsp, 0x28 ; ret
0x0000020000523a68 : clc ; add dword ptr [rbp - 0x5a], esi ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001271ce : clc ; add dword ptr [rdi + rax - 1], esi ; ret
0x00000200007a93e1 : clc ; add dword ptr [rdi], ecx ; test dword ptr [rbx - 0x74fffe1a], ebx ; ret
0x0000020000519e90 : clc ; add dword ptr [rsi + 4], esi ; xor ecx, ecx ; call rax
0x00000200003ef9b9 : clc ; add dword ptr [rsi + rax + 0x48], esi ; add esp, 0x20 ; pop rbx ; ret
0x0000020000713fb8 : clc ; add eax, 0x83480673 ; ret
0x00000200000eeb0d : clc ; add eax, 0xa23d8d0f ; or eax, dword ptr [rax] ; ret
0x00000200006b3f5e : clc ; add eax, 0xb70fc477 ; ret 0xe883
0x00000200000733fa : clc ; add eax, 0xc0330476 ; jmp 0x200000733cc
0x00000200006b3eba : clc ; add eax, 0xe3c1cd77 ; add al, 0x83 ; ret
0x00000200007aff0b : clc ; add eax, 0xf410a76 ; mov bh, 0xc0 ; ret
0x00000200000b1511 : clc ; add eax, 0xff496077 ; ret
0x0000020000248ff4 : clc ; add eax, 2 ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000249018
0x0000020000249236 : clc ; add eax, 2 ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000024925a
0x00000200004a5d95 : clc ; add eax, dword ptr [rax] ; add al, ch ; ret 0xc422
0x000002000068dc61 : clc ; add eax, dword ptr [rbx] ; ret 0x3b41
0x000002000024bcf1 : clc ; add eax, ebx ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000024bd13
0x000002000023ef04 : clc ; add eax, edi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023ef26
0x0000020000244f88 : clc ; add eax, edi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244faa
0x000002000077fbfc : clc ; add eax, esi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077fc1d
0x0000020000244d0c : clc ; add eax, r12d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244d30
0x000002000023bba7 : clc ; add eax, r13d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023bbcc
0x00000200007818ba : clc ; add eax, r13d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x200007818dd
0x0000020000783730 : clc ; add eax, r13d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000783753
0x000002000078cc3e : clc ; add eax, r13d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078cc61
0x000002000077f9c2 : clc ; add eax, r15d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077f9e5
0x000002000078d1df : clc ; add eax, r15d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078d202
0x000002000005a23b : clc ; add ecx, dword ptr [rdi] ; test dword ptr [rdx - 0xa000000], edi ; ret 0xf08
0x00000200007196b6 : clc ; add esi, dword ptr [rbp - 0x36] ; xor eax, eax ; ret
0x00000200007c6028 : clc ; add rdx, r14 ; call 0x200007d226e
0x0000020000147e1c : clc ; add rsp, 0x138 ; ret
0x000002000014e6fe : clc ; add rsp, 0x138 ; sti ; ret
0x00000200006826f8 : clc ; call 0x200000be963
0x0000020000048cec : clc ; call 0x200000dd688
0x0000020000048ceb : clc ; call 0x200000dd689
0x00000200006840c4 : clc ; call 0x200000f0303
0x000002000043f8d6 : clc ; call 0x2000013bb77
0x000002000051da66 : clc ; call 0x20000148074
0x000002000052c126 : clc ; call 0x20000157544
0x000002000062cea1 : clc ; call 0x2000024d004
0x00000200006288a7 : clc ; call 0x2000024da44
0x00000200006288a6 : clc ; call 0x2000024da45
0x000002000050a2e8 : clc ; call 0x200004265cb
0x00000200005c1fc1 : clc ; call qword ptr [rax]
0x000002000052ca75 : clc ; call r15
0x00000200003f3b4d : clc ; call rsi
0x00000200005f0c32 : clc ; cmc ; push qword ptr [rbx] ; shr al, cl ; ret
0x000002000042032c : clc ; cmp eax, 0xb70f3174 ; add dword ptr [rax - 1], ecx ; ret 0x8348
0x00000200004ff6b8 : clc ; cmp eax, 0xb9481477 ; ret
0x00000200000e95ce : clc ; cmp edx, eax ; jl 0x200000e95dd ; mov al, 1 ; ret
0x000002000011be98 : clc ; dec dword ptr [rax - 0x75] ; ret
0x00000200001b304c : clc ; dec dword ptr [rax - 0x77] ; adc eax, 0x1a2b33 ; ret
0x00000200001b2ef0 : clc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xf87c
0x00000200001d7532 : clc ; dec dword ptr [rbx + 0x1d1cca05] ; add byte ptr [rbx], bh ; ret
0x00000200001d0349 : clc ; dec dword ptr [rcx + 0xf] ; ret
0x00000200001cf4b1 : clc ; dec dword ptr [rcx - 0x74b65c83] ; ret 0xf49
0x00000200001d0812 : clc ; dec dword ptr [rcx - 0x75] ; ret 0x7c89
0x00000200001d0500 : clc ; dec dword ptr [rcx - 0x75] ; ret 0x7d89
0x000002000013d268 : clc ; dec rax ; ret
0x000002000014e9e5 : clc ; dec rdx ; jne 0x2000014e999 ; sfence ; ret
0x0000020000698cd7 : clc ; enter 0xff, 0x48 ; add esp, 0x40 ; pop rbx ; ret
0x00000200007bce87 : clc ; inc dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000cb2ff : clc ; inc dword ptr [rbx - 0x7bf0fe08] ; ret 0xfffc
0x00000200001af511 : clc ; inc dword ptr [rcx - 0x75] ; ret
0x00000200001b0924 : clc ; inc dword ptr [rcx - 0x76] ; or cl, byte ptr [rcx - 1] ; ret 0x8b41
0x0000020000135d21 : clc ; ja 0x20000135d33 ; ret
0x00000200006ab07c : clc ; jb 0x200006ab08f ; mov eax, 0xc0000023 ; ret
0x00000200001a9572 : clc ; jge 0x200001a956f ; dec dword ptr [rax - 0x75] ; ret
0x00000200000545be : clc ; jmp 0x200000547cb
0x00000200000bb6c9 : clc ; jmp 0x200000bb690
0x00000200000f09f2 : clc ; jmp 0x200000f09ce
0x000002000015ff3b : clc ; jmp 0x2000015ff47
0x0000020000160069 : clc ; jmp 0x20000160075
0x0000020000160187 : clc ; jmp 0x20000160193
0x0000020000172818 : clc ; jmp 0x20000172824
0x00000200001728e8 : clc ; jmp 0x200001728f4
0x0000020000173b51 : clc ; jmp 0x20000173b5d
0x0000020000173c4c : clc ; jmp 0x20000173c58
0x0000020000174468 : clc ; jmp 0x20000174474
0x0000020000174628 : clc ; jmp 0x20000174634
0x0000020000217ff2 : clc ; jmp 0x20000217ffe
0x0000020000218106 : clc ; jmp 0x20000218112
0x0000020000218222 : clc ; jmp 0x2000021822e
0x000002000021c77a : clc ; jmp 0x2000021c78e
0x00000200004b808e : clc ; jmp 0x200004b7fc1
0x00000200004c52d3 : clc ; jmp 0x200004c529a
0x00000200007a30fb : clc ; jmp qword ptr [rax]
0x00000200001b133a : clc ; jmp qword ptr [rcx]
0x00000200007a30d7 : clc ; jmp rax
0x0000020000152ea9 : clc ; jmp rsi
0x000002000014e974 : clc ; jne 0x2000014e953 ; ret
0x000002000014e973 : clc ; jne 0x2000014e954 ; ret
0x00000200004300bc : clc ; jne 0x200004300c3 ; ret
0x000002000012e440 : clc ; lcall ptr [rdi] ; add byte ptr [rax - 0x75], cl ; ret 0xc748
0x000002000043dbff : clc ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x0000020000090dda : clc ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x00000200005189f1 : clc ; loopne 0x200005189fb ; test rax, rax ; je 0x20000518a03 ; call rax
0x000002000008e098 : clc ; mov eax, 0xc000000d ; ret
0x0000020000455ab8 : clc ; mov eax, 0xc0000718 ; ret
0x00000200000a0166 : clc ; mov eax, 1 ; ret
0x00000200005924bb : clc ; mov eax, dword ptr [rax + rcx*4] ; ret
0x000002000005286a : clc ; mov eax, ecx ; ret
0x000002000000836c : clc ; mov edx, eax ; test r8d, r8d ; jne 0x2000000837d ; ret
0x000002000003ecdb : clc ; mov r12b, dl ; mov r14, rcx ; call 0x2000044af4d
0x00000200007076b6 : clc ; mov r8d, esi ; call rbx
0x00000200000f1410 : clc ; mov rax, r9 ; ret
0x0000020000102e04 : clc ; mov rcx, qword ptr [rcx + 8] ; mov rsi, rdx ; call qword ptr [rbx]
0x0000020000090c19 : clc ; mov rcx, r10 ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x00000200004bc0c8 : clc ; mov rcx, rdi ; call 0x200000e7217
0x000002000070e389 : clc ; mov rdx, r15 ; mov rcx, qword ptr [rsi + 8] ; call rax
0x00000200004e33e9 : clc ; mov rdx, rdi ; call qword ptr [rax]
0x0000020000450111 : clc ; mov rsi, rdx ; call 0x2000007a50b
0x000002000040d4bc : clc ; or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200005913f1 : clc ; or al, byte ptr [rax] ; add byte ptr [rbx], ch ; ret 0xf823
0x000002000078783c : clc ; or byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000d325c : clc ; or byte ptr [rbx + rdx + 0x41], dh ; mov eax, eax ; ret
0x00000200000f05ca : clc ; or byte ptr [rsi + rax + 0x48], dh ; add esp, 0x20 ; pop rbx ; ret
0x00000200006cf1bf : clc ; or dh, byte ptr [rdx - 0x12] ; ret
0x00000200007026b4 : clc ; or eax, 0x83480673 ; ret
0x000002000021fc4c : clc ; or eax, 0xc08b4100 ; ret
0x00000200001c0f2e : clc ; pop rcx ; je 0x200001c0f41 ; or eax, 0xc0350000 ; ret
0x00000200004f40b0 : clc ; pop rsp ; jne 0x200004f40ae ; xor al, al ; ret
0x0000020000072462 : clc ; push 0x11 ; add byte ptr [rcx - 0x75], al ; ret
0x00000200005ef364 : clc ; push qword ptr [rax + rcx - 0x7d] ; ret
0x000002000020a19e : clc ; push qword ptr [rbp + 3] ; xor eax, eax ; ret
0x0000020000074683 : clc ; push qword ptr [rbx + rcx + 0x4d] ; test eax, eax ; jne 0x20000074696 ; ret
0x00000200000bf809 : clc ; push qword ptr [rcx + rax - 0x3d] ; xor eax, eax ; ret
0x000002000069d7f3 : clc ; push qword ptr [rdi + rcx + 0x3b] ; ret 0xb75
0x0000020000226ba6 : clc ; push rax ; jmp 0x20000226b70
0x000002000005ccc4 : clc ; push rcx ; jge 0x2000005ccd1 ; xor eax, eax ; ret
0x000002000045663b : clc ; push rdx ; jg 0x20000456648 ; mov al, 1 ; ret
0x00000200001b13f0 : clc ; push rsi ; ret
0x00000200001b253a : clc ; push rsi ; ret 0x7403
0x0000020000109e46 : clc ; ret
0x00000200006f5f85 : clc ; ret 0x40ff
0x00000200005ac6a2 : clc ; ret 0x48ff
0x00000200005fcea2 : clc ; ret 0x90ff
0x000002000044841b : clc ; ret 0xc6ff
0x00000200004484ab : clc ; ret 0xe9ff
0x00000200006f4b64 : clc ; ret 0xffff
0x0000020000197d45 : clc ; sbb byte ptr [rdi], cl ; ret 0xbee9
0x00000200004e97e1 : clc ; sbb byte ptr [rdi], cl ; test dword ptr [rbp - 0xa000000], ebx ; ret
0x00000200006ce76d : clc ; sbb byte ptr [rdx - 0x14], dh ; or eax, 0xffffffff ; ret
0x0000020000118be0 : clc ; shr eax, 3 ; add eax, 0x48 ; ret
0x0000020000118e7d : clc ; shr eax, 3 ; ret
0x00000200005cd969 : clc ; sldt word ptr [rax] ; add al, 0x8b ; ret 0x1ba
0x000002000020b906 : clc ; std ; cmova eax, ecx ; ret
0x00000200000c9d85 : clc ; sub eax, 0xc2b4b00 ; ret 0x3b48
0x000002000013161a : clc ; test eax, eax ; jns 0x200001315be ; call 0x200004fd887
0x0000020000137e14 : clc ; xchg eax, ebx ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200006ac458 : clc ; xor byte ptr [rdi], cl ; test dword ptr [rax - 0x9ffffff], edx ; ret 0x7403
0x00000200001e4b7b : clc ; xor dh, byte ptr [rdx - 0x31] ; xor eax, eax ; ret
0x000002000062cc46 : clc ; xor edx, edx ; mov rcx, rbp ; call 0x2000024d009
0x0000020000624382 : clc ; xor edx, edx ; mov rcx, rbx ; call 0x2000024d009
0x0000020000513701 : clc ; xor rcx, rsp ; call 0x2000013ac77
0x0000020000513700 : clc ; xor rcx, rsp ; call 0x2000013ac78
0x00000200006881b0 : cld ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200007052bb : cld ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000071159d
0x0000020000149e25 : cld ; add byte ptr [rax], al ; add cl, ch ; adc al, dl ; add byte ptr [rax], al ; ret
0x0000020000047f05 : cld ; add cl, byte ptr [rdi] ; test dword ptr [rdi - 0x9ffeca3], esp ; ret
0x0000020000417c4b : cld ; add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200001a28a8 : cld ; add eax, 0x75c00000 ; sbb esi, esi ; ret
0x00000200004ca5ca : cld ; add eax, edx ; ret
0x0000020000498723 : cld ; add rsp, 0x28 ; ret
0x000002000042dd0d : cld ; call 0x200000564a4
0x0000020000532934 : cld ; call 0x20000157884
0x0000020000401167 : cld ; call rsi
0x0000020000115f00 : cld ; cdq ; hlt ; jmp qword ptr [rcx]
0x00000200004d6def : cld ; dec dword ptr [rax + 0x3b] ; ret 0xd74
0x00000200000f7482 : cld ; dec dword ptr [rax - 0x75] ; ret
0x0000020000051ece : cld ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000101f2b : cld ; dec dword ptr [rbx + rcx*4 + 5] ; jmp qword ptr [rcx]
0x00000200005ac29c : cld ; dec dword ptr [rbx - 0x36c1735] ; ret 0x4cff
0x000002000055cd26 : cld ; inc dword ptr [rax] ; add byte ptr [rsi + 3], ah ; ret 0x8966
0x00000200005ac3b0 : cld ; inc dword ptr [rbp - 0x75] ; ret 0x8d48
0x000002000019b01b : cld ; int1 ; push rsi ; ret 0xf07
0x00000200003d9a08 : cld ; jbe 0x200003d9a07 ; dec dword ptr [rcx + 0x33] ; ret 0xf48
0x00000200006f5fa5 : cld ; jmp 0x2001df85fb2
0x00000200000343cf : cld ; jne 0x200000343dc ; mov qword ptr [r9], r8 ; ret
0x00000200004124f8 : cld ; mov bh, 3 ; add byte ptr [rbx], dh ; fucomi st(3) ; ret 0xf41
0x00000200001dd821 : cld ; mov esi, r12d ; call 0x200000e9a56
0x00000200001927b3 : cld ; mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 0x10] ; ret
0x000002000009a744 : cld ; mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax] ; ret
0x000002000066917d : cld ; mov rax, rcx ; add rsp, 0x28 ; ret
0x00000200004c0221 : cld ; mov rcx, rbx ; call 0x200000e7217
0x0000020000044095 : cld ; or al, byte ptr [rax + rax] ; or dword ptr [rcx - 0x75], ecx ; ret 0x8b49
0x000002000053b04d : cld ; or al, byte ptr [rax] ; ret
0x00000200000e8381 : cld ; or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000014ba1e : cld ; or eax, r8d ; wrmsr ; ret
0x000002000044f026 : cld ; out 0x15, eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000522070 : cld ; pop rsi ; ret 0x3dff
0x000002000011fa2d : cld ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000011fa9a ; ret
0x00000200000f19f9 : cld ; push rsi ; ret
0x000002000007c769 : cld ; ret
0x000002000051af18 : cld ; ret 0x19
0x00000200006f87fc : cld ; ret 0x4c1f
0x00000200005ac2a2 : cld ; ret 0x4cff
0x00000200004bea75 : cld ; ret 0x84ff
0x0000020000463cb5 : cld ; ret 0x85ff
0x000002000061d3fb : cld ; ret 0x8bff
0x00000200005ac2c9 : cld ; ret 0x90ff
0x00000200004b80b2 : cld ; ret 0xe9ff
0x000002000052bc90 : cld ; ret 0xffc1
0x000002000063d382 : cld ; sar bh, 0x8b ; ret
0x0000020000601f04 : cld ; sar edi, 1 ; call 0x2000005e175
0x00000200000ea08f : cld ; sub eax, 0xf7410000 ; ret 0x7ffe
0x000002000014bb85 : cld ; wrmsr ; ret
0x00000200000597f4 : cld ; xor al, 0 ; call rax
0x0000020000036ef8 : cli ; adc al, 0x7c ; in al, -1 ; ret
0x00000200001f2f89 : cli ; adc al, ch ; shl bl, 1 ; in eax, dx ; dec dword ptr [rax - 0x7f] ; ret
0x00000200007bab3f : cli ; adc byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200007a0808 : cli ; adc byte ptr [rax - 0x75], cl ; ret 0xccc3
0x00000200001e293b : cli ; adc byte ptr [rbp - 0x75], cl ; ret
0x00000200007a1e53 : cli ; adc byte ptr [rbp - 0x75], cl ; ret 0x8948
0x0000020000217250 : cli ; adc byte ptr [rbx + 6], dh ; mov eax, 0xc0000023 ; ret
0x0000020000402068 : cli ; adc byte ptr [rdi], cl ; test dword ptr [rdx], ebx ; ret
0x000002000066b02e : cli ; adc byte ptr [rdx - 0xf], dh ; xor al, al ; ret
0x0000020000653c24 : cli ; adc byte ptr [rsi + 6], dh ; mov eax, 0xc000000d ; ret
0x0000020000005267 : cli ; adc cl, byte ptr [rax - 0x75] ; ret 0xc148
0x00000200006a029a : cli ; adc dword ptr [rbx + 8], esi ; add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x200006a029e
0x000002000043c1fa : cli ; add al, 0 ; or dword ptr [rax], eax ; je 0x2000043c20d ; xor al, al ; ret
0x00000200006715ba : cli ; add al, 0x75 ; sub byte ptr [rax + 0xc], bh ; ret
0x0000020000211965 : cli ; add al, 0x8b ; ret 0xe8c1
0x0000020000002c7f : cli ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000518dee : cli ; add bh, byte ptr [rdx + rax - 1] ; ret 0xca2b
0x000002000002469c : cli ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x00000200000cd0fe : cli ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret
0x0000020000149de5 : cli ; add byte ptr [rax], al ; add cl, ch ; push rdx ; ret 0
0x0000020000719415 : cli ; add byte ptr [rcx], al ; add byte ptr [rax], al ; jb 0x20000719428 ; xor eax, eax ; ret
0x00000200005302db : cli ; add cl, byte ptr [rax + 0x3b] ; ret
0x00000200000a6f8a : cli ; add cl, byte ptr [rcx + 0xf] ; enter -0x72b3, 0x1c ; ret
0x0000020000561881 : cli ; add cl, byte ptr [rdi] ; test al, bl ; cdq ; or dword ptr [rax], eax ; ret
0x000002000043767c : cli ; add cl, byte ptr [rdi] ; xchg dword ptr [rbp - 0x8fffffb], eax ; ret
0x00000200004e7cb3 : cli ; add dh, byte ptr [rdx - 0x10] ; xor eax, eax ; ret
0x00000200003dfb95 : cli ; add dword ptr [rbp + 5], esi ; test rcx, rcx ; jne 0x200003dfba8 ; ret
0x00000200004a91f5 : cli ; add dword ptr [rbp + rax + 0x48], esi ; lea eax, dword ptr [rcx + 0x20] ; ret
0x00000200004a91dd : cli ; add dword ptr [rbp + rax + 0x48], esi ; lea eax, dword ptr [rcx + 0x24] ; ret
0x0000020000447d45 : cli ; add dword ptr [rbp + rax + 0x48], esi ; lea eax, dword ptr [rcx + 0x4c] ; ret
0x0000020000209e0d : cli ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x8341
0x00000200006c746b : cli ; add eax, 7 ; ret
0x00000200001dea21 : cli ; add eax, dword ptr [rbp + 0x2b] ; ret 0x3b4c
0x00000200001ea24e : cli ; add ecx, dword ptr [rax + 0x3b] ; ret 0x840f
0x00000200000293f5 : cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200001f9108 : cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xff48
0x00000200000d2c61 : cli ; add ecx, dword ptr [rax - 1] ; ret 0x3b48
0x00000200000126a3 : cli ; add ecx, dword ptr [rax - 1] ; ret 0xc148
0x00000200000c467c : cli ; add ecx, dword ptr [rcx - 0x75] ; ret
0x000002000004bdc5 : cli ; add ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000043e1d3 : cli ; add ecx, dword ptr [rcx - 0x77] ; sbb byte ptr [rcx - 0x75], cl ; ret 0x8941
0x00000200000c0f81 : cli ; add ecx, dword ptr [rcx - 1] ; ret 0xc149
0x000002000001aa81 : cli ; add esi, dword ptr [rbp + rcx + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x00000200007c1de5 : cli ; add rsp, 0x20 ; pop rbp ; ret
0x000002000014cb43 : cli ; add rsp, 0x28 ; ret
0x000002000014f005 : cli ; add rsp, 8 ; ret
0x000002000003e2c9 : cli ; and dword ptr [rax + 0x586c], 0 ; sti ; ret
0x00000200000f76a7 : cli ; call 0x200000c3993
0x0000020000521798 : cli ; call 0x2000024da43
0x0000020000177947 : cli ; call qword ptr [rax - 0x60b3d17]
0x0000020000176165 : cli ; call qword ptr [rax - 0x63dfc17]
0x000002000045ddd9 : cli ; call rsi
0x00000200004e5e02 : cli ; cmp byte ptr [rdi], cl ; test dword ptr [rdi - 0x9ffffff], ebx ; ret
0x0000020000177f70 : cli ; dec dword ptr [rax + 0x3b] ; ret 0xf49
0x000002000012e35f : cli ; dec dword ptr [rax + 0xd] ; ret 0
0x00000200001b2fd3 : cli ; dec dword ptr [rax - 0x73] ; adc bpl, al ; ret 0xf880
0x000002000017a88c : cli ; dec dword ptr [rax - 0x73] ; or eax, 0x87343 ; call rax
0x00000200000c5e6c : cli ; dec dword ptr [rax - 0x75] ; ret
0x000002000017b2dc : cli ; dec dword ptr [rax - 0x75] ; ret 0x48f0
0x000002000022a0fa : cli ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rax + 0x48], 0x3b ; ret
0x0000020000111558 : cli ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000114ed9 : cli ; dec dword ptr [rbx + 0x20dd3b05] ; add bh, bh ; ret
0x000002000017614b : cli ; dec dword ptr [rbx - 0x2a74a7b2] ; call 0x200001123a5
0x00000200001ade62 : cli ; idiv edi ; call rdx
0x00000200004530fd : cli ; inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x4589
0x0000020000179a0a : cli ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200000f5aaf : cli ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200001a29c7 : cli ; jg 0x200001a2a44 ; or al, byte ptr [rcx - 1] ; ret 0x834a
0x00000200005ac95f : cli ; jmp 0x2004a1dc968
0x000002000017c985 : cli ; jmp qword ptr [rbx]
0x000002000042d002 : cli ; jmp rcx
0x0000020000475344 : cli ; jp 0x2000047535f ; xchg dword ptr [rax - 0x7cffeb0b], esp ; ret 0xebe0
0x000002000070a2d0 : cli ; mov dword ptr [r8], r9d ; ret
0x00000200000987f4 : cli ; mov eax, 2 ; ret
0x00000200000411ab : cli ; mov ebx, ecx ; call 0x20000041329
0x000002000000ca18 : cli ; mov rbx, rcx ; call 0x20000408c6a
0x00000200004f5688 : cli ; mov rbx, rcx ; mov rdx, qword ptr [rdx + 8] ; call qword ptr [rdi]
0x00000200001c5370 : cli ; or al, 0x8b ; ret 0xe8c1
0x00000200001c3c5a : cli ; or byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000556315 : cli ; or dword ptr [rdx - 0x19], esi ; mov eax, 0xc0000001 ; ret
0x00000200003c7416 : cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000c937c : cli ; pop rbp ; or eax, 0x8a01b300 ; ret
0x0000020000535272 : cli ; pop rcx ; sar bh, 0x48 ; add esp, 0x78 ; ret
0x0000020000627b42 : cli ; pop rsi ; ret 0x48ff
0x00000200000a0e30 : cli ; push qword ptr [rax + rbx - 0x75] ; ret 0x41f0
0x000002000009ed82 : cli ; push qword ptr [rcx + rbx - 0x75] ; ret 0x41f0
0x000002000043a8fd : cli ; push rax ; je 0x2000043a90c ; ret
0x00000200006ee10e : cli ; push rsi ; outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x000002000002d357 : cli ; ret
0x00000200005ac4c2 : cli ; ret 0x44ff
0x00000200006c807d : cli ; ret 0x48ff
0x0000020000726abf : cli ; sahf ; dec dword ptr [rax - 0x75] ; ret
0x0000020000449d95 : cli ; sar edi, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200005f6ff2 : cli ; sbb al, 0x8b ; ret 0xe8c1
0x000002000040fdb4 : cli ; sbb byte ptr es:[rax], al ; mov eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000014492b : cli ; sbb dword ptr [rax - 0x75], ecx ; ret 0xc148
0x000002000070f7a1 : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000070f7be
0x000002000070f86e : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000070f88b
0x000002000070f922 : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000070f93f
0x000002000070f9c5 : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000070f9e2
0x0000020000059a02 : cli ; xor al, 0 ; call rax
0x00000200003e3ad7 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006cb290 : cmc ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000020000149d45 : cmc ; add byte ptr [rax], al ; add cl, ch ; ret 0
0x00000200004a7f96 : cmc ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200006f6def : cmc ; add byte ptr [rsi - 0x3b7cb701], dh ; pop rbx ; ret
0x00000200000b22c8 : cmc ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0x8944
0x000002000013c365 : cmc ; add rsi, r12 ; mov rdx, rsi ; call r14
0x00000200005f3565 : cmc ; call rcx
0x00000200006d95a9 : cmc ; call rsi
0x00000200004bd967 : cmc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xbaff
0x00000200005f066f : cmc ; dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x000002000011e6c1 : cmc ; dec dword ptr [rax - 0x75] ; ret
0x00000200000bfdab : cmc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xdc3
0x0000020000610187 : cmc ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000bf301 : cmc ; dec dword ptr [rax - 0x7f] ; ret
0x00000200001e0bf9 : cmc ; dec dword ptr [rax - 1] ; ret
0x0000020000130805 : cmc ; dec dword ptr [rbx + 0x26c86] ; add bh, bh ; ret
0x0000020000451fc4 : cmc ; dec dword ptr [rcx + 0x23] ; ret 0x3d48
0x00000200001891e6 : cmc ; dec dword ptr [rcx + 0x3b] ; ret 0x840f
0x0000020000192683 : cmc ; dec dword ptr [rcx - 0x75] ; iretd ; call 0x200000be967
0x0000020000198d23 : cmc ; dec dword ptr [rcx - 0x75] ; sbb byte ptr [r8 - 0x7b], r9b ; ret
0x0000020000197d94 : cmc ; dec dword ptr [rcx - 0x75] ; sbb byte ptr [rax - 0x7b], r9b ; ret
0x00000200005f1abf : cmc ; dec dword ptr [rcx - 0x7d] ; ret
0x00000200001cb763 : cmc ; idiv bh ; add rsp, 0x68 ; ret
0x00000200001cb6f8 : cmc ; idiv bh ; add rsp, 0x70 ; pop rbp ; ret
0x00000200000f7b08 : cmc ; idiv edi ; add rsp, 0x28 ; ret
0x00000200003cffb5 : cmc ; inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000060bd4f : cmc ; inc dword ptr [rbx] ; ret
0x00000200005f08a6 : cmc ; inc dword ptr [rcx - 0x75] ; ret 0xfb8b
0x00000200003cea27 : cmc ; inc dword ptr [rcx - 0x80] ; call qword ptr [rcx]
0x0000020000206dc0 : cmc ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200001095f5 : cmc ; jmp 0x200001095bd
0x0000020000791229 : cmc ; jnp 0x2000079122d ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000538b7f : cmc ; lock inc dword ptr [rax + 0x10] ; ret
0x000002000006d267 : cmc ; loopne 0x2000006d27d ; add byte ptr [rbx + rcx*4 + 0x44], cl ; and al, 0x38 ; call rax
0x000002000002ce32 : cmc ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x000002000011ea06 : cmc ; mov rcx, r8 ; jmp rdx
0x00000200007b6517 : cmc ; nop ; dec dword ptr [rax - 0x77] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000021fcae : cmc ; or eax, 0xc2f64100 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x00000200005669ee : cmc ; out -1, eax ; add rsp, 0x48 ; ret
0x00000200005d99d8 : cmc ; out dx, al ; push rsi ; ret
0x00000200005f0d2c : cmc ; push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000024d009
0x00000200005f0c34 : cmc ; push qword ptr [rbx] ; shr al, cl ; ret
0x0000020000457c87 : cmc ; push rbx ; ret 0x48ff
0x000002000000e463 : cmc ; ret
0x000002000015d34f : cmc ; ret 0x24
0x0000020000519499 : cmc ; ret 0x45ff
0x0000020000519557 : cmc ; ret 0x48ff
0x000002000051958b : cmc ; ret 0x4cff
0x00000200004b88c8 : cmc ; ret 0x85ff
0x0000020000798f97 : cmc ; ret 0xffcd
0x0000020000678cd0 : cmc ; retf 0x48ff ; test eax, eax ; je 0x20000678ce2 ; call rax
0x00000200003e2e0a : cmc ; sbb dword ptr [rax], eax ; mov al, r8b ; ret
0x000002000063fa07 : cmc ; scasd eax, dword ptr [rdi] ; ret
0x0000020000059d0b : cmc ; test rcx, rcx ; sete al ; ret
0x00000200005e874b : cmc ; xor eax, 0xe990ffe7 ; ret
0x000002000011fc2a : cmc ; xor eax, eax ; ret
0x0000020000580d0b : cmc ; xor edx, edx ; mov rcx, rsi ; call 0x2000024d008
0x00000200001c0f6f : cmova eax, ecx ; ret
0x00000200000092fc : cmova eax, edx ; ret
0x00000200001ba43d : cmova ecx, edx ; mov rax, r9 ; ret
0x000002000007b690 : cmova edx, eax ; mov eax, edx ; ret
0x00000200001ba43c : cmova r9, r10 ; mov rax, r9 ; ret
0x000002000007b68f : cmova rdx, rax ; mov eax, edx ; ret
0x000002000051aea8 : cmovae eax, esi ; mov al, byte ptr [rax] ; jmp 0x2000051aec7
0x000002000020b1eb : cmovae ecx, eax ; mov r8b, cl ; mov al, r8b ; ret
0x0000020000103fc9 : cmovb eax, ecx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003ee13b : cmovb eax, edx ; mov dword ptr [r9 + 4], eax ; ret
0x00000200000c60f4 : cmovb edx, eax ; mov al, dl ; ret
0x00000200004ac55e : cmovb edx, eax ; mov eax, edx ; ret
0x00000200000400fb : cmovb edx, ebx ; mov qword ptr [rcx + 0x20], r10 ; ret
0x000002000043a4d2 : cmovb edx, ebx ; mov qword ptr [rsp + 0x50], rdx ; jmp 0x2000043a4a7
0x00000200006226e4 : cmovb edx, ecx ; mov al, dl ; ret
0x00000200004acc9a : cmovb esi, edi ; jmp 0x200004acc66
0x00000200000400fa : cmovb r10, r11 ; mov qword ptr [rcx + 0x20], r10 ; ret
0x00000200004acc99 : cmovb r14, rdi ; jmp 0x200004acc67
0x00000200000f89e9 : cmovbe eax, ecx ; ret
0x0000020000135d71 : cmovbe ecx, ebx ; mov al, r9b ; ret
0x0000020000135d70 : cmovbe r9d, r11d ; mov al, r9b ; ret
0x0000020000650581 : cmove eax, dword ptr [rdx + rbx*8 - 0x7bbbed8c] ; ret 0xd75
0x0000020000097ed2 : cmove eax, dword ptr [rip + 0x3103ef] ; ret
0x0000020000034a93 : cmove eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000050faa3 : cmove eax, eax ; mov eax, r8d ; ret
0x0000020000032c36 : cmove eax, eax ; ret
0x000002000065853e : cmove eax, ecx ; add rsp, 0x28 ; ret
0x00000200006e43c9 : cmove eax, ecx ; add rsp, 0x38 ; ret
0x00000200005215fd : cmove eax, ecx ; add rsp, 0x50 ; pop rbx ; ret
0x00000200003e00e8 : cmove eax, ecx ; lea ecx, dword ptr [rdi + 3] ; call 0x2000000ed0d
0x0000020000076052 : cmove eax, ecx ; mov dword ptr [rdx], eax ; lea eax, dword ptr [rcx - 0x3f] ; ret
0x000002000013cf5a : cmove eax, ecx ; mov rax, r8 ; ret
0x000002000007c777 : cmove eax, ecx ; ret
0x0000020000438edc : cmove eax, ecx ; test eax, eax ; cmove eax, r8d ; ret
0x000002000043b871 : cmove eax, ecx ; test r8, r8 ; jne 0x2000043b86a ; ret
0x00000200007c2761 : cmove eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x00000200007b2106 : cmove eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001bbc1a : cmove eax, edx ; and dword ptr [rip + 0x1ed609], eax ; ret
0x000002000054d474 : cmove eax, edx ; mov edx, eax ; mov eax, edx ; ret
0x0000020000116aea : cmove eax, edx ; ret
0x0000020000032c35 : cmove eax, r8d ; ret
0x00000200000480c8 : cmove ebp, dword ptr [rdx] ; ret 0xc041
0x000002000013a105 : cmove ebx, eax ; mov rdx, rbx ; call 0x200000863b8
0x00000200001d8e16 : cmove ecx, dword ptr [rdi] ; and al, dl ; jmp 0x200001d8e35
0x00000200002012a5 : cmove ecx, edx ; mov al, cl ; add rsp, 0x48 ; ret
0x0000020000087faf : cmove edx, eax ; mov eax, r10d ; jmp 0x20000087fc1
0x00000200003cd2c5 : cmove edx, ebx ; mov al, r10b ; ret
0x0000020000719437 : cmove edx, ecx ; mov dword ptr [r8], edx ; ret
0x0000020000009bab : cmove edx, ecx ; mov rax, rdx ; ret
0x000002000013c0ff : cmove edx, ecx ; movsxd rax, edx ; jmp 0x2000013c11c
0x0000020000719436 : cmove edx, r9d ; mov dword ptr [r8], edx ; ret
0x000002000013c0fe : cmove edx, r9d ; movsxd rax, edx ; jmp 0x2000013c11d
0x00000200001974db : cmove esi, ecx ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000087fae : cmove r10d, eax ; mov eax, r10d ; jmp 0x20000087fc2
0x00000200003cd2c4 : cmove r10d, r11d ; mov al, r10b ; ret
0x000002000013cf59 : cmove r8, rcx ; mov rax, r8 ; ret
0x000002000050faa2 : cmove r8d, eax ; mov eax, r8d ; ret
0x0000020000034a92 : cmove rax, r8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000007c776 : cmove rax, rcx ; ret
0x000002000013a104 : cmove rbx, rax ; mov rdx, rbx ; call 0x200000863b9
0x0000020000009baa : cmove rdx, rcx ; mov rax, rdx ; ret
0x000002000068dc74 : cmovg eax, eax ; ret
0x0000020000546c5a : cmovg eax, ecx ; add rsp, 0x28 ; ret
0x000002000013d205 : cmovg eax, ecx ; ret
0x000002000007daa6 : cmovg eax, edx ; jmp 0x2000007dab0
0x000002000007db83 : cmovg eax, edx ; mov dl, al ; mov al, dl ; ret
0x000002000068dc73 : cmovg eax, r8d ; ret
0x000002000007c7da : cmovg ecx, eax ; cmp cl, byte ptr [rdx] ; jle 0x2000007c7b3 ; mov byte ptr [rdx], cl ; ret
0x000002000056704d : cmovge eax, dword ptr [rbx] ; ret 0x8b49
0x000002000006ab95 : cmovge ecx, dword ptr [rbx - 0x74b7f7b8] ; ret 0x2b48
0x00000200003e19dc : cmovge esi, edx ; inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000049fdde : cmovl eax, dword ptr [rbx] ; ret 0x8d41
0x000002000052ad41 : cmovl ecx, dword ptr [rbp - 0x749fdba4] ; ret
0x0000020000631a12 : cmovl ecx, dword ptr [rbp - 0x74b3a7b3] ; ret
0x000002000043d05d : cmovl ecx, dword ptr [rbx - 0x2d74b63e] ; jmp r11
0x000002000021b1b7 : cmovne eax, eax ; mov eax, r8d ; ret
0x00000200007d5489 : cmovne eax, eax ; mov qword ptr [rdx], rax ; ret
0x000002000043a92a : cmovne eax, eax ; ret
0x0000020000568e13 : cmovne eax, ecx ; add rsp, 0x28 ; ret
0x00000200001b3f1b : cmovne eax, ecx ; mov dword ptr [r8 + 0x5c], eax ; ret
0x000002000012d8b5 : cmovne eax, ecx ; mov ecx, eax ; mov eax, ecx ; ret
0x000002000006f28a : cmovne eax, ecx ; mov qword ptr [r9], rax ; ret
0x00000200001cba30 : cmovne eax, ecx ; mov r8b, al ; mov al, r8b ; ret
0x000002000002c804 : cmovne eax, ecx ; ret
0x0000020000220bc2 : cmovne eax, edx ; jmp 0x20000220c05
0x0000020000069e7c : cmovne eax, edx ; ret
0x000002000043a929 : cmovne eax, r8d ; ret
0x0000020000436fa6 : cmovne ecx, dword ptr [rbx + 0x452b44c5] ; ret
0x0000020000721e71 : cmovne ecx, eax ; mov eax, ecx ; ret
0x000002000022ef49 : cmovne ecx, ebx ; call rax
0x0000020000083c51 : cmovne edx, eax ; mov eax, edx ; ret
0x00000200001ba91d : cmovne edx, ecx ; mov al, dl ; ret
0x000002000011caae : cmovne edx, edx ; mov eax, edx ; ret
0x000002000011caad : cmovne edx, r10d ; mov eax, edx ; ret
0x0000020000083c50 : cmovne edx, r8d ; mov eax, edx ; ret
0x000002000021b1b6 : cmovne r8d, eax ; mov eax, r8d ; ret
0x0000020000436fa5 : cmovne r9, qword ptr [r11 + 0x452b44c5] ; ret
0x00000200007d5488 : cmovne rax, r8 ; mov qword ptr [rdx], rax ; ret
0x000002000022fab7 : cmovne rax, r9 ; ret
0x000002000006f289 : cmovne rax, rcx ; mov qword ptr [r9], rax ; ret
0x0000020000684129 : cmovne rax, rcx ; ret
0x0000020000220bc1 : cmovne rax, rdx ; jmp 0x20000220c06
0x000002000022ef48 : cmovne rcx, r11 ; call rax
0x00000200001bf2a2 : cmovno eax, dword ptr [rbx - 0x79f0f308] ; ret
0x00000200000ea7d4 : cmovno eax, dword ptr [rdx] ; ret 0xc202
0x00000200006db5cc : cmovno edi, edi ; ret
0x00000200000482d6 : cmovno edi, edi ; ret 0x8349
0x00000200005db6fa : cmovno esi, esi ; ret 0x7401
0x0000020000011973 : cmovns eax, dword ptr [rbx] ; ret 0x894c
0x000002000051b5da : cmovns ebx, edx ; call 0x20000148076
0x0000020000717932 : cmovns ecx, dword ptr [rbx - 0x3774b72a] ; call r15
0x0000020000056b21 : cmovns ecx, dword ptr [rcx - 0x3d74beff] ; ret
0x00000200001f3652 : cmovns edi, dword ptr [rbx] ; ret
0x00000200004120a4 : cmovns edi, dword ptr [rbx] ; ror byte ptr [rdi], 0x87 ; ret
0x0000020000140211 : cmovns edi, edi ; ret
0x000002000021322e : cmovns edi, edi ; ret 0x8941
0x00000200000060e4 : cmovns edi, edi ; ret 0x8949
0x0000020000011972 : cmovns r8, qword ptr [r11] ; ret 0x894c
0x00000200003fa6dd : cmovs eax, dword ptr [rbx + 0x3b4902c0] ; ret 0xe972
0x0000020000088012 : cmovs eax, dword ptr [rbx - 0x7cb6fb3e] ; ret
0x0000020000631b8d : cmovs eax, dword ptr [rbx] ; ret 0x3d48
0x00000200006e022f : cmovs eax, ecx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000213b0c : cmovs eax, ecx ; call 0x1ffc2a4831f
0x000002000021310a : cmovs eax, ecx ; call 0x1ffc3207a1d
0x00000200002136c9 : cmovs eax, ecx ; jmp 0x1ffc2a47edc
0x00000200001d2bc7 : cmovs ebp, dword ptr [rbx] ; ror dword ptr [rax - 1], 1 ; ret 0xd9e8
0x0000020000721da3 : cmovs ecx, dword ptr [rbp + 0x3b480b04] ; ret
0x00000200003c9111 : cmovs ecx, dword ptr [rbp - 0x74bbd1ec] ; ret
0x0000020000583aba : cmovs ecx, dword ptr [rbx - 0x1787dbac] ; ret
0x00000200000c74ca : cmovs ecx, dword ptr [rbx - 0x74b797ae] ; ret 0x2349
0x00000200006cf02d : cmovs ecx, dword ptr [rbx - 0x74c7db8c] ; ret
0x000002000051bb59 : cmovs ecx, dword ptr [rbx - 0x74c7db94] ; ret
0x00000200000dc760 : cmovs ecx, dword ptr [rcx + 0xf302454] ; ret 0x9848
0x00000200004eb850 : cmovs ecx, dword ptr [rcx - 0x74b7f7bf] ; ret
0x00000200001f3a71 : cmovs edi, dword ptr [rbx] ; ret
0x00000200006b78b0 : cmovs edi, dword ptr [rbx] ; ret 0x577
0x00000200005dc4ce : cmovs edi, dword ptr [rbx] ; ret 0xa77
0x0000020000214668 : cmovs edi, edi ; ret
0x00000200000dcafd : cmovs edi, edi ; ret 0x3b49
0x000002000019af0c : cmovs esp, dword ptr [rbx] ; ret 0xb49
0x00000200001137b2 : cmovs esp, dword ptr [rbx] ; ret 0xba48
0x00000200000b493b : cmp ah, 0xff ; push rsi ; ret 0xf04
0x00000200005657a8 : cmp ah, ah ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc933
0x0000020000009577 : cmp ah, byte ptr [rax + rax] ; add rsp, 0x28 ; ret
0x00000200004dc99d : cmp ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000200001848b8 : cmp ah, byte ptr [rsi - 1] ; ret
0x000002000021dd10 : cmp al, 0 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200005ea55c : cmp al, 0 ; add byte ptr [rax], al ; ret
0x00000200003c8552 : cmp al, 0 ; add rcx, rdx ; jmp rcx
0x00000200005f646c : cmp al, 0 ; ret 0x48ff
0x0000020000136acd : cmp al, 0x11 ; jne 0x20000136ae0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000031084 : cmp al, 0x15 ; je 0x20000031095 ; lock inc dword ptr [rcx + 0x28] ; ret
0x000002000012c8bf : cmp al, 0x1d ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200000c3d0b : cmp al, 0x23 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x1d], dh ; ret
0x000002000070b4b1 : cmp al, 0x23 ; add r15d, r14d ; mov edx, r15d ; call rdi
0x00000200001196fc : cmp al, 0x24 ; add rsp, 0x10 ; pop rbp ; ret
0x0000020000465b20 : cmp al, 0x25 ; enter 0x49ff, -0x75 ; iretd ; call 0x20000061dc9
0x00000200000f5b4a : cmp al, 0x2b ; ret
0x0000020000637f10 : cmp al, 0x3f ; ret
0x0000020000108f12 : cmp al, 0x41 ; call rcx
0x000002000007ce42 : cmp al, 0x48 ; add esp, 0x28 ; ret
0x0000020000513e56 : cmp al, 0x5f ; mov rcx, rdi ; call 0x2000013bd44
0x00000200006d2ac0 : cmp al, 0x66 ; ret 0xe8ff
0x000002000040a580 : cmp al, 0x76 ; int1 ; dec dword ptr [rcx + 0x3b542444] ; ret
0x00000200005d75df : cmp al, 0x76 ; out dx, al ; dec dword ptr [rbp + 0x3b] ; ret
0x00000200006255c0 : cmp al, 0x7a ; ret 0x48ff
0x0000020000002552 : cmp al, 0x89 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004537f3 : cmp al, 0x8b ; ret 0x8d48
0x000002000015bb34 : cmp al, 0x8b ; ret 0x8d4c
0x00000200004ab950 : cmp al, 0x95 ; ret
0x000002000077f6a0 : cmp al, 0x9c ; ret 0x4cff
0x00000200004c5cc0 : cmp al, 0xa6 ; ret 0xbaff
0x00000200007b6f48 : cmp al, 0xaf ; mov ah, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006bc7c4 : cmp al, 0xb3 ; ret
0x0000020000446a80 : cmp al, 0xb3 ; sar edi, -0x75 ; ret
0x00000200004a9d00 : cmp al, 0xb6 ; ret
0x000002000051a030 : cmp al, 0xc ; ret 0x4cff
0x00000200000ddfe0 : cmp al, 0xc0 ; jb 0x200000ddfa9 ; jmp 0x200000ddfd6
0x0000020000523bcc : cmp al, 0xc3 ; dec dword ptr [rax - 0x75] ; ret
0x00000200004a4406 : cmp al, 0xc4 ; dec dword ptr [rax - 0x75] ; ret
0x00000200001ccc88 : cmp al, 0xd5 ; in al, -1 ; add rsp, 0x28 ; ret
0x00000200001bc010 : cmp al, 0xd8 ; adc eax, dword ptr [rax] ; call rax
0x00000200005215ea : cmp al, 0xdc ; xor edx, edx ; call 0x20000147f17
0x0000020000544dfe : cmp al, 0xf ; ja 0x20000544dc9 ; xor al, al ; ret
0x00000200005ec952 : cmp al, 0xf ; test byte ptr [rax - 0x18], dh ; int1 ; push rsi ; ret 0xf0c
0x0000020000198d22 : cmp al, 0xf5 ; dec dword ptr [rcx - 0x75] ; sbb byte ptr [r8 - 0x7b], r9b ; ret
0x00000200001bbf6e : cmp al, 0xf6 ; dec dword ptr [rcx - 0x75] ; ret
0x000002000066040c : cmp al, 0xf6 ; ret
0x000002000052b1d8 : cmp al, 1 ; add byte ptr [rax], al ; call 0x20000157887
0x000002000059e0a1 : cmp al, 1 ; inc edx ; jmp 0x2000059e088
0x0000020000711c16 : cmp al, 1 ; ja 0x20000711c4d ; call 0x2000020dec2
0x000002000009bf5b : cmp al, 1 ; je 0x2000009bf6e ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003e7238 : cmp al, 1 ; je 0x200003e726b ; jmp 0x200005834d8
0x000002000053b048 : cmp al, 1 ; je 0x200005ead34 ; ret
0x000002000023a080 : cmp al, 2 ; jae 0x2000023a08d ; xor eax, eax ; ret
0x000002000004da15 : cmp al, 2 ; je 0x2000004da22 ; mov eax, ecx ; ret
0x0000020000052844 : cmp al, 2 ; je 0x20000052851 ; xor eax, eax ; ret
0x00000200000770d0 : cmp al, 2 ; je 0x200000770e7 ; mov al, 1 ; ret
0x00000200000770cf : cmp al, 2 ; je 0x200000770e8 ; mov al, 1 ; ret
0x0000020000091db5 : cmp al, 2 ; je 0x20000091dbe ; ret
0x0000020000091db5 : cmp al, 2 ; je 0x20000091dc1 ; ret
0x00000200000b894c : cmp al, 2 ; sbb eax, eax ; and eax, 2 ; ret
0x0000020000003720 : cmp al, 3 ; jne 0x2000000373d ; mov rcx, rdi ; call rsi
0x0000020000455aaa : cmp al, 5 ; add byte ptr [rax], al ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x00000200000081be : cmp al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007a8f48 : cmp al, byte ptr [rax] ; call 0x200003d2089
0x000002000016021b : cmp al, byte ptr [rax] ; je 0x20000160230 ; mov rcx, rbx ; call 0x2000021c495
0x000002000013b5da : cmp al, byte ptr [rax] ; jne 0x2000013b5cb ; mov rax, rcx ; ret
0x000002000013bd32 : cmp al, byte ptr [rax] ; jne 0x2000013bd1c ; mov rax, rcx ; ret
0x0000020000408da7 : cmp al, byte ptr [rax] ; jne 0x20000408db4 ; xor eax, eax ; ret
0x00000200000036e4 : cmp al, byte ptr [rax] ; ret
0x00000200000d325a : cmp al, byte ptr [rbx + 0x137408f8] ; mov eax, r8d ; ret
0x0000020000687e61 : cmp al, byte ptr [rcx - 0x75] ; ret
0x000002000019c298 : cmp al, ch ; adc ah, byte ptr [rcx - 0x49f0000c] ; ret
0x00000200004a6307 : cmp al, ch ; adc esi, esp ; ret
0x000002000053b867 : cmp al, ch ; add ecx, eax ; sar bh, 0x8a ; ret
0x000002000061f11a : cmp al, ch ; and cl, ch ; ret 0x33ff
0x0000020000693ed5 : cmp al, ch ; and eax, 0x8bffbb91 ; ret
0x00000200004ab94e : cmp al, ch ; cmp al, 0x95 ; ret
0x00000200002009a2 : cmp al, ch ; lodsb al, byte ptr [rsi] ; and dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004bbd4d : cmp al, ch ; lodsd eax, dword ptr [rsi] ; ret
0x00000200005368b9 : cmp al, ch ; mov cl, 0x17 ; sar edi, -0x75 ; ret
0x00000200004a8990 : cmp al, ch ; mov cl, ch ; ret
0x00000200004305bf : cmp al, ch ; mov ebx, 0x8bffc2f4 ; ret
0x0000020000499e52 : cmp al, ch ; or al, 0xc ; add byte ptr [rax], al ; jmp 0x20000499e23
0x00000200007d0756 : cmp al, ch ; or byte ptr [rcx], ah ; ret
0x00000200004a672b : cmp al, ch ; out dx, eax ; out dx, eax ; ret
0x000002000041b2df : cmp al, ch ; pop rbx ; ret 0xffd3
0x0000020000508d0c : cmp al, ch ; pop rsi ; ret
0x0000020000027250 : cmp al, ch ; ret 0
0x000002000041b290 : cmp al, ch ; stosb byte ptr [rdi], al ; ret 0xffd3
0x00000200004a7e72 : cmp al, ch ; test al, 0xd8 ; ret
0x00000200004a8903 : cmp al, ch ; xchg ebp, eax ; ret
0x0000020000220385 : cmp al, cl ; jae 0x20000220395 ; mov cr8, rcx ; ret
0x000002000068e1a4 : cmp al, cl ; jae 0x2000068e171 ; ret
0x00000200007b32e4 : cmp al, cl ; jae 0x200007b32f3 ; or eax, 0xffffffff ; ret
0x0000020000091d87 : cmp al, cl ; jne 0x20000091d90 ; ret
0x00000200007b32ef : cmp al, cl ; seta al ; ret
0x0000020000010d20 : cmp al, dh ; inc dword ptr [rcx] ; add rsp, 0x28 ; ret
0x00000200000c60f2 : cmp al, dl ; cmovb edx, eax ; mov al, dl ; ret
0x0000020000037d0f : cmp al, dl ; je 0x20000037d20 ; add rsp, 0x28 ; ret
0x000002000013ca67 : cmp al, dl ; jne 0x2000013ca76 ; mov rax, rcx ; ret
0x000002000013ca66 : cmp al, dl ; jne 0x2000013ca77 ; mov rax, rcx ; ret
0x00000200001c6052 : cmp al, dl ; jne 0x200001c60b2 ; mov r8b, dl ; jmp 0x200001c60a8
0x00000200004a6306 : cmp al, r13b ; adc esi, esp ; ret
0x00000200002009a1 : cmp al, r13b ; lodsb al, byte ptr [rsi] ; and dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000499e51 : cmp al, r13b ; or al, 0xc ; add byte ptr [rax], al ; jmp 0x20000499e24
0x000002000068e1a3 : cmp al, r9b ; jae 0x2000068e172 ; ret
0x00000200004f40ae : cmp ax, 0x5c ; jne 0x200004f40b0 ; xor al, al ; ret
0x000002000013d1c3 : cmp ax, dx ; jne 0x2000013d1d4 ; mov rax, rcx ; ret
0x00000200000d2b38 : cmp ax, word ptr [r8] ; jb 0x200000d2b26 ; ret
0x00000200006eee1e : cmp bh, bh ; adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x0000020000068dfc : cmp bh, bh ; ret
0x000002000005d0b9 : cmp bh, bh ; ret 0x5489
0x000002000069937b : cmp bh, bh ; ret 0x8349
0x0000020000186ad7 : cmp bh, byte ptr [rcx] ; out dx, al ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200007c9d17 : cmp bh, dh ; dec dword ptr [rcx - 0x75] ; retf ; call rbx
0x00000200004e2fff : cmp bh, dh ; fimul dword ptr [rax + 0x63] ; ret 0x8b48
0x000002000003aaa7 : cmp bh, dh ; ret 0xfffc
0x00000200001e36d7 : cmp bh, dh ; ret 0xfffe
0x00000200004a91e9 : cmp bl, al ; lea rax, qword ptr [rcx + 0x40] ; ret
0x00000200004535fa : cmp bl, al ; test ecx, edx ; setne al ; ret
0x00000200000c66b0 : cmp bl, al ; xor eax, eax ; ret
0x000002000001ea6b : cmp bl, bh ; jmp 0x2000001ea35
0x000002000001ea6a : cmp bl, bh ; jmp 0x2000001ea36
0x00000200003f0f26 : cmp bl, byte ptr [rbx] ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000002000016e6d5 : cmp bl, byte ptr [rbx] ; add byte ptr [rax], al ; mov qword ptr [r10], r11 ; ret
0x00000200007a8543 : cmp bl, byte ptr [rcx + 0x74c085ff] ; or byte ptr [rax - 1], cl ; ret
0x00000200007cd242 : cmp bl, byte ptr [rdx] ; ret
0x0000020000403598 : cmp bl, ch ; add ch, bl ; add eax, dword ptr [rcx - 0x75] ; ret 0x8d4c
0x0000020000131b20 : cmp bl, ch ; fiadd dword ptr [rbx - 0x75bb0032] ; ret
0x00000200006ca76a : cmp bl, ch ; ret 0x8945
0x0000020000009d76 : cmp bl, ch ; ret 0xc032
0x0000020000231bf8 : cmp bl, cl ; ret 0x380f
0x0000020000231ab8 : cmp bl, cl ; ret 0xf66
0x0000020000520137 : cmp bl, dh ; movq qword ptr [rbp - 0x10], mm0 ; call 0x2000014a259
0x00000200004bd7a5 : cmp byte ptr [r10 + 0x7b92e801], sil ; ret 0x4dff
0x0000020000664853 : cmp byte ptr [r10 + 3], sil ; xor eax, eax ; ret
0x00000200004a67ce : cmp byte ptr [r10 - 0x149617ff], sil ; ret
0x00000200004a99bd : cmp byte ptr [r10 - 0x468517ff], sil ; ret
0x00000200005a7c24 : cmp byte ptr [r10 - 4], 0x3b ; ret 0x5277
0x00000200001d60da : cmp byte ptr [r10], al ; call r8
0x000002000052fb30 : cmp byte ptr [r13 + 5], sil ; add rsp, 0x38 ; ret
0x00000200004fa2d0 : cmp byte ptr [r14 + rax + 0x48], sil ; add esp, 0x20 ; pop rbx ; ret
0x0000020000211f71 : cmp byte ptr [r14 - 0x77], spl ; ret
0x000002000015ae09 : cmp byte ptr [r15 + rcx - 0x51], r8b ; ret 0x40b9
0x0000020000087ceb : cmp byte ptr [r8 + 0x3b], r9b ; ret 0x187c
0x00000200000c9945 : cmp byte ptr [r8 + 0x63], cl ; ret
0x0000020000718923 : cmp byte ptr [r8 - 0x75], r9b ; ret
0x000002000022c25b : cmp byte ptr [r8 - 0x77], r9b ; and al, 0x20 ; call r10
0x00000200000bd98f : cmp byte ptr [r8 - 0x7d], cl ; ret
0x00000200005a9204 : cmp byte ptr [r8 - 0x7d], r9b ; ret 0x8b20
0x00000200007cf7a0 : cmp byte ptr [r8 - 0x7d], r9b ; stc ; push qword ptr [rbp + rax - 0x18] ; ret
0x00000200005137a9 : cmp byte ptr [r9 + rcx*4 + 0x51], cl ; ret
0x00000200001d28f1 : cmp byte ptr [r9], cl ; sete dl ; mov eax, edx ; ret
0x000002000005f8a4 : cmp byte ptr [rax + 0x12], dl ; add byte ptr [rsi - 1], ah ; ret
0x000002000006d04f : cmp byte ptr [rax + 0x18], 0 ; je 0x2000006d05c ; ret
0x000002000013c16c : cmp byte ptr [rax + 0x2b], cl ; ret
0x00000200003e4fd6 : cmp byte ptr [rax + 0x2b], cl ; ret 0x8b45
0x00000200003e4527 : cmp byte ptr [rax + 0x2b], cl ; ret 0xd148
0x0000020000087cec : cmp byte ptr [rax + 0x3b], cl ; ret 0x187c
0x0000020000039304 : cmp byte ptr [rax + 0x3b], cl ; ret 0x207d
0x0000020000453964 : cmp byte ptr [rax + 0x48057501], ch ; and eax, 0xfffffffe ; ret
0x00000200000c9946 : cmp byte ptr [rax + 0x63], cl ; ret
0x000002000005f078 : cmp byte ptr [rax + 3], cl ; ret
0x00000200004208c9 : cmp byte ptr [rax + 3], cl ; ret 0x3b48
0x0000020000226522 : cmp byte ptr [rax + rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x0000020000504376 : cmp byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006db47f : cmp byte ptr [rax - 0x3b7cb7f6], cl ; ret
0x00000200000d0db4 : cmp byte ptr [rax - 0x3f], cl ; call 0x1ffc23055cf
0x00000200004d36b3 : cmp byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000004378a : cmp byte ptr [rax - 0x73], cl ; add al, 0x80 ; lea rax, qword ptr [rdx + rax*8] ; ret
0x00000200007b6c93 : cmp byte ptr [rax - 0x73], cl ; add eax, 0xff99fba5 ; ret
0x00000200005303ef : cmp byte ptr [rax - 0x73], cl ; and al, 0x20 ; call rdi
0x00000200004508ce : cmp byte ptr [rax - 0x73], cl ; ret
0x00000200007a6739 : cmp byte ptr [rax - 0x74b3c0c1], al ; ret
0x0000020000431570 : cmp byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x2174
0x00000200001dc3a3 : cmp byte ptr [rax - 0x75], cl ; add eax, 0x1163dd ; call qword ptr [rax]
0x00000200006ff39d : cmp byte ptr [rax - 0x75], cl ; and al, 0x48 ; jmp rax
0x000002000015c2fb : cmp byte ptr [rax - 0x75], cl ; call rax
0x0000020000519493 : cmp byte ptr [rax - 0x75], cl ; iretd ; call 0x20000148a97
0x000002000000e90a : cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000679137 : cmp byte ptr [rax - 0x75], cl ; ret 0x4466
0x00000200007792c7 : cmp byte ptr [rax - 0x75], cl ; ret 0x8b45
0x00000200005064ff : cmp byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000451b13 : cmp byte ptr [rax - 0x76000000], 0x80 ; ret 6
0x000002000022c25c : cmp byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x00000200004c6fbc : cmp byte ptr [rax - 0x77], cl ; and al, 0x60 ; call 0x200000e7219
0x0000020000128b37 : cmp byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000128b48 ; xor al, al ; ret
0x0000020000128b36 : cmp byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000128b49 ; xor al, al ; ret
0x00000200007060ee : cmp byte ptr [rax - 0x7b], cl ; push qword ptr [rdx + rdx - 0x75] ; ret 0x8b49
0x00000200005e22e5 : cmp byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000002000070f554 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rdx + 0x48], 0x8b ; iretd ; call rax
0x00000200000f6941 : cmp byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x000002000067b2f7 : cmp byte ptr [rax - 0x7d], cl ; and al, 0x20 ; add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x00000200007a2f4b : cmp byte ptr [rax - 0x7d], cl ; movsxd rdi, eax ; add bl, ch ; ret 0x48cc
0x0000020000002b29 : cmp byte ptr [rax - 0x7d], cl ; ret
0x0000020000615e6d : cmp byte ptr [rax - 0x7d], cl ; ret 0x4120
0x000002000003a2b3 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200005a9205 : cmp byte ptr [rax - 0x7d], cl ; ret 0x8b20
0x00000200001ab04b : cmp byte ptr [rax - 0x7d], cl ; ret 0xb940
0x00000200007c7ef5 : cmp byte ptr [rax - 0x7d], cl ; ret 0xe804
0x00000200007cf7a1 : cmp byte ptr [rax - 0x7d], cl ; stc ; push qword ptr [rbp + rax - 0x18] ; ret
0x0000020000434870 : cmp byte ptr [rax - 0x7f], cl ; ret
0x000002000021fb44 : cmp byte ptr [rax - 1], cl ; loopne 0x2000021fb97 ; jmp rax
0x0000020000211043 : cmp byte ptr [rax - 1], cl ; ret
0x00000200000b2e64 : cmp byte ptr [rax - 1], cl ; ret 0x8148
0x00000200006062ed : cmp byte ptr [rax - 9], cl ; fadd dword ptr [rbx + rcx*4 + 0x45] ; ret
0x00000200001f2ee4 : cmp byte ptr [rax - 9], cl ; ret 0xffff
0x0000020000028b1b : cmp byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x000002000062c4f7 : cmp byte ptr [rax], al ; add al, al ; ret
0x00000200007bc2c1 : cmp byte ptr [rax], al ; add byte ptr [rax], al ; xor edx, edx ; call 0x200003e5f8d
0x000002000053049f : cmp byte ptr [rax], al ; je 0x200005304b0 ; add rsp, 0x28 ; ret
0x0000020000403224 : cmp byte ptr [rax], al ; jne 0x20000403237 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007063f1 : cmp byte ptr [rax], al ; jne 0x200007063e5 ; xor al, al ; ret
0x0000020000038254 : cmp byte ptr [rax], ch ; add eax, 0x24418b00 ; ret
0x0000020000536844 : cmp byte ptr [rax], dl ; ret 0x48ff
0x00000200000b628c : cmp byte ptr [rbp + 0x33], al ; dec dword ptr [rax - 1] ; ret
0x000002000066c02c : cmp byte ptr [rbp + 0x3b], cl ; ret 0xd27c
0x000002000009c066 : cmp byte ptr [rbp + 0x5b], bl ; ret
0x000002000052fb31 : cmp byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x0000020000606914 : cmp byte ptr [rbp - 0x31], ch ; jne 0x20000606937 ; call 0x2000022992c
0x0000020000606913 : cmp byte ptr [rbp - 0x31], r13b ; jne 0x20000606938 ; call 0x2000022992d
0x00000200007794ef : cmp byte ptr [rbp - 0x75], al ; fiadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000002000004a6d2 : cmp byte ptr [rbp - 0x75], cl ; ret
0x000002000009cf5b : cmp byte ptr [rbp - 0x75], cl ; ret 0x23c
0x00000200004ecc08 : cmp byte ptr [rbp - 0x76], al ; ret 0x53e8
0x00000200004a0e55 : cmp byte ptr [rbp - 0x9cf8b2e], al ; ret
0x0000020000674eb7 : cmp byte ptr [rbx + 0x23e8d1c1], cl ; ret 0xe9c1
0x00000200005525f4 : cmp byte ptr [rbx + r9 + 0x41], cl ; sbb byte ptr [rdx], bh ; ret 0x470f
0x00000200005525f5 : cmp byte ptr [rbx + rcx + 0x41], cl ; sbb byte ptr [rdx], bh ; ret 0x470f
0x00000200005f80c3 : cmp byte ptr [rbx + rcx*4 - 0x3d], al ; mov rdx, r14 ; call rax
0x00000200006b3285 : cmp byte ptr [rbx - 0x7cb3dbac], cl ; ret 0x306
0x00000200007cbcf0 : cmp byte ptr [rbx], al ; ret
0x00000200005b4899 : cmp byte ptr [rbx], al ; ret 0x4489
0x00000200003e4804 : cmp byte ptr [rbx], ch ; ret 0x3341
0x00000200003f6421 : cmp byte ptr [rbx], dh ; dec dword ptr [rcx - 0x7d] ; ret
0x00000200005389e3 : cmp byte ptr [rbx], dh ; leave ; call rax
0x0000020000067d84 : cmp byte ptr [rbx], dh ; rol byte ptr [rax - 0x62f0efc6], 0xc0 ; ret
0x000002000008830d : cmp byte ptr [rbx], dh ; rol byte ptr [rbp + 0x33], cl ; ror byte ptr [rdi - 0x75], 0xc ; ret 0x854d
0x00000200001d2783 : cmp byte ptr [rcx + 0x10], al ; mov eax, 0xc0000001 ; ret
0x0000020000033d8c : cmp byte ptr [rcx + 0x1757451], cl ; ret
0x00000200000ed02e : cmp byte ptr [rcx + 0x186], 1 ; je 0x200000ed041 ; ret
0x0000020000119a66 : cmp byte ptr [rcx + 0x21], al ; jne 0x20000119a71 ; ret
0x00000200004ee287 : cmp byte ptr [rcx + 0x232], al ; setne al ; ret
0x000002000020eea5 : cmp byte ptr [rcx + 0x3b], cl ; ret
0x00000200004f67e8 : cmp byte ptr [rcx + 0x4c], 0 ; jne 0x200004f67f5 ; ret
0x000002000042d827 : cmp byte ptr [rcx + 0x4c], cl ; jne 0x2000042d832 ; ret
0x000002000042d826 : cmp byte ptr [rcx + 0x4c], r9b ; jne 0x2000042d833 ; ret
0x00000200004f6818 : cmp byte ptr [rcx + 0x4f], 0 ; je 0x200004f67f7 ; dec dword ptr [rdx + 0x18] ; ret
0x00000200000f6ce0 : cmp byte ptr [rcx + 0x5c], al ; pop rbx ; ret
0x00000200003d4550 : cmp byte ptr [rcx + 0x5d], al ; pop rbp ; ret
0x0000020000116fb9 : cmp byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000001a97e : cmp byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000ed1d3 : cmp byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000007a68 : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200000302e1 : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; ret
0x00000200006c6cd7 : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000429f9c : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000008f5fd : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; pop rbx ; ret
0x000002000049a8ed : cmp byte ptr [rcx + 0x5f], al ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000072899a : cmp byte ptr [rcx + 0x7a891442], cl ; sbb byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200004bbd1b : cmp byte ptr [rcx + 0xe0c83], cl ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000478f88 : cmp byte ptr [rcx + 1], 0xf ; ja 0x20000478f95 ; ret
0x00000200005389ed : cmp byte ptr [rcx + 1], bh ; call r8
0x00000200006b7a86 : cmp byte ptr [rcx + 2], bh ; call rax
0x00000200006b7aa8 : cmp byte ptr [rcx + 3], bh ; call rax
0x00000200000bf632 : cmp byte ptr [rcx + rax*2 + 1], 0 ; jne 0x200000bf64c ; xor al, al ; ret
0x00000200001d2777 : cmp byte ptr [rcx + rcx*4 + 0x19], al ; mov eax, r10d ; ret
0x0000020000437c7e : cmp byte ptr [rcx + rcx*4 + 0x3d], cl ; ret 0x3111
0x00000200003e0066 : cmp byte ptr [rcx + rcx*4 + 0x41], cl ; mov byte ptr [rcx + 0x48], 0 ; ret
0x00000200005137aa : cmp byte ptr [rcx + rcx*4 + 0x51], cl ; ret
0x0000020000222fec : cmp byte ptr [rcx + rsi*8 - 1], 0x48 ; add esp, 0x58 ; ret
0x0000020000644874 : cmp byte ptr [rcx - 0x73], al ; push rsi ; add bh, byte ptr [rbx] ; ret 0x1b76
0x000002000054b0d0 : cmp byte ptr [rcx - 0x74b30042], al ; ret
0x000002000049e05a : cmp byte ptr [rcx - 0x75], al ; or byte ptr [rax - 0x75], cl ; ret 0xe183
0x00000200003c6708 : cmp byte ptr [rcx - 0x75], al ; ret
0x00000200006a3e51 : cmp byte ptr [rcx - 0x75], al ; ret 0x344
0x0000020000445fec : cmp byte ptr [rcx - 0x75], al ; ror dword ptr [rax - 0x7d], -0x3c ; pop rbx ; ret
0x00000200000024bf : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000250e ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000000f372 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000f3c1 ; pop rdi ; pop r14 ; pop rcx ; ret
0x000002000002b654 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000002b6a3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000002dbb1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000002dc00 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000003085e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000308ad ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000034e1c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000034e6b ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000038ff4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000039043 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000039da8 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000039df7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000408da : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000040929 ; pop rsi ; pop r13 ; pop rdi ; ret
0x0000020000040c65 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000040cb3 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000041543 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000041592 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000051357 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000513a6 ; pop rsi ; pop r13 ; pop rdi ; ret
0x000002000007ea81 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000007ead0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000008773d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000008778c ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000009035d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000903ac ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000bcda5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000bcdf4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000fabc3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000fac11 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000100c1d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000100c6c ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000101ceb : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000101d3a ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000113ea6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000113ef5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011a166 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011a1b5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011e588 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011e5d7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000120de5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000120e34 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001244d0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012451f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001245b0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001245ff ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000012d6e3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012d732 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000013096b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001309b9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000132fb6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000133005 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000013a0c7 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013a115 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001786f0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000017873f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001ad15e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ad1ad ; pop rsi ; pop r13 ; pop rdi ; ret
0x00000200001aea80 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001aeacf ; pop rsi ; pop r13 ; pop rdi ; ret
0x00000200001b4d18 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b4d67 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001b5344 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b5392 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001cc43b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001cc48a ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ced90 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ceddf ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001cfdde : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001cfe2d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001d5c4d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d5c9c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001d8b9e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d8bec ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001eb45b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001eb4aa ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001fd53f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fd58e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001fe18f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fe1de ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200002207db : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022082a ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000224c22 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000224c70 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000022b614 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022b662 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000022bda1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022bdef ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000022db46 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022db94 ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000231339 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000231388 ; pop rsi ; pop r13 ; pop rbp ; ret
0x0000020000231959 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200002319a8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000237e13 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000237e61 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200003c76c6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003c7715 ; pop rdi ; pop r14 ; pop rcx ; ret
0x00000200003dee0c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003dee5b ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003e12ed : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e133c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003e27d7 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e2825 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200003e5d7e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e5dcd ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003f2f9f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f2fee ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003f9da4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f9df3 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003fbca9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fbcf8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003fdc78 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fdcc7 ; pop rdi ; pop r13 ; pop rbp ; ret
0x0000020000401e0f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000401e5d ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000041f485 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041f4d4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000420958 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004209a7 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000043413c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043418a ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000436bdd : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000436c2c ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000043b5ee : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043b63c ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000044490f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044495e ; pop rsi ; pop r13 ; pop rbp ; ret
0x000002000044d38e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044d3dd ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004554d0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045551f ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000045eb57 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045eba6 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000466dcf : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000466e1d ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000046fc3c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046fc8a ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000471dfa : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000471e49 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004737be : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047380d ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000049bf20 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049bf6f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000049d0c7 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049d115 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200004aa8ad : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004aa8fc ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004b21bf : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b220d ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200004e6a75 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e6ac4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004f0dac : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f0dfb ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004f1484 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f14d3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004f8ec7 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f8f16 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004fcc94 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fcce3 ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200004fcfb9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fd008 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004fee7e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004feecc ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004fef94 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fefe3 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000501ce6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000501d35 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000508d32 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000508d80 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000513545 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000513594 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000514c1e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000514c6d ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000051fc73 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051fcc2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000052071b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052076a ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000529804 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000529853 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000053b512 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053b561 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000053e773 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053e7c1 ; pop rsp ; pop rdi ; pop rsi ; ret
0x0000020000540c30 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000540c7f ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000547406 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000547454 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000054a36d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054a3bb ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000054c3dd : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054c42b ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000054d76d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054d7bc ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000551e75 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000551ec4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000055d7c1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055d80f ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000055fecb : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055ff1a ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000609fe9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060a038 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000060ac76 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060acc5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000060fc91 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060fce0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000616a9c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000616aeb ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000061db3c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061db8a ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006205fc : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062064a ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000062739e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006273ec ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000062fb33 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062fb81 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000062ff61 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062ffb0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000063202a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000632079 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000634d1a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000634d68 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000634f65 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000634fb3 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000063d850 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063d89f ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000064434a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000644399 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000645163 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006451b1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000645f83 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000645fd2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064b5f3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064b642 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064bc15 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064bc64 ; pop rdi ; pop r13 ; pop rbp ; ret
0x000002000064de9d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064deeb ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000064e738 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064e787 ; pop rdi ; pop r13 ; pop rbp ; ret
0x000002000064ea74 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064eac3 ; pop rdi ; pop r13 ; pop rbp ; ret
0x0000020000650128 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000650177 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000065d072 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065d0c0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000066a117 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066a166 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000672ab6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000672b05 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000067cfef : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067d03d ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006811d6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000681225 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000068fed4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068ff23 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000690c99 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000690ce8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000690e58 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000690ea7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000691206 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000691255 ; pop rsi ; pop r13 ; pop rbp ; ret
0x0000020000691757 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006917a6 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000069a994 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069a9e3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006a7dc9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006a7e17 ; pop rdi ; pop rdi ; pop rsi ; ret
0x00000200006af5c9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006af618 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006b95bd : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006b960c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006bce49 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006bce97 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006bd28f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006bd2dd ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006d705c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006d70aa ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006dbe24 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006dbe73 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006e0694 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006e06e3 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006e64dc : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006e652a ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006e9760 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006e97af ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006f6307 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f6356 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006f6d66 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f6db4 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006f7713 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f7761 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006f7840 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f788f ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000727bba : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000727c09 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000791e32 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000791e81 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000794558 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007945a7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007956a3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007956f2 ; pop rdi ; pop r13 ; pop rbp ; ret
0x0000020000795f02 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000795f50 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000079b2a2 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000079b2f0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000079ba42 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000079ba91 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000079c6eb : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000079c73a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007abf05 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007abf54 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007b62cb : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b631a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007b72dc : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b732a ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200007bd0de : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007bd12d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007d0942 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007d0991 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200007d0d7d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007d0dcb ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007d12cc : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007d131b ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007d23d4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007d2423 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200007d4a53 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007d4aa1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007d4dcc : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007d4e1b ; pop rsi ; pop r13 ; pop rbp ; ret
0x00000200007d5897 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007d58e5 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000006f310 : cmp byte ptr [rcx - 0x75], cl ; ret
0x00000200000475eb : cmp byte ptr [rcx - 0x75], cl ; ret 0x3b48
0x00000200000b4236 : cmp byte ptr [rcx - 0x75], cl ; ret 0x8548
0x00000200006610b0 : cmp byte ptr [rcx - 0x75], cl ; ret 0x8d4b
0x00000200004fe370 : cmp byte ptr [rcx - 0x76], al ; ret
0x00000200003d33e7 : cmp byte ptr [rcx - 0x7d], cl ; ror byte ptr [rcx + rax*2], 0xff ; ret 0x3b44
0x000002000024931e : cmp byte ptr [rcx - 0x9cbdba4], cl ; ret 0x7402
0x00000200004c0a9e : cmp byte ptr [rcx - 0xa], al ; shl byte ptr [rax], 0xf ; xchg eax, esp ; ret 0x8b44
0x00000200000fd3ad : cmp byte ptr [rcx - 1], al ; ret
0x000002000071b768 : cmp byte ptr [rcx - 1], cl ; loope 0x2000071b7be ; add esp, 0x38 ; jmp rax
0x000002000071b8ab : cmp byte ptr [rcx - 1], cl ; loope 0x2000071b901 ; add esp, 0x38 ; jmp rax
0x000002000071b900 : cmp byte ptr [rcx - 1], cl ; loope 0x2000071b956 ; add esp, 0x38 ; jmp rax
0x000002000071b950 : cmp byte ptr [rcx - 1], cl ; loopne 0x2000071b9a6 ; add esp, 0x38 ; jmp rax
0x000002000013b68e : cmp byte ptr [rcx], 0 ; jne 0x2000013b68e ; ret
0x000002000004392c : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001b2ca7 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; bts dword ptr [rax + 0x40], 9 ; ret
0x00000200005c5c61 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x12 ; call rax
0x0000020000554ab6 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x50], rdx ; ret
0x00000200000cc86f : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; pop rcx ; ret
0x0000020000147e20 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000002000014e702 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; sti ; ret
0x000002000018cf8e : cmp byte ptr [rcx], al ; inc dword ptr [rcx] ; ret
0x00000200003e7d0e : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x00000200001d28f2 : cmp byte ptr [rcx], cl ; sete dl ; mov eax, edx ; ret
0x00000200007bccda : cmp byte ptr [rcx], dl ; add dword ptr [rax], eax ; add rsp, 0x58 ; ret
0x000002000013cf57 : cmp byte ptr [rcx], dl ; cmove r8, rcx ; mov rax, r8 ; ret
0x00000200000cf5ec : cmp byte ptr [rdi + 0x5b], bl ; ret
0x0000020000056eb6 : cmp byte ptr [rdi + 0x5d], bl ; ret
0x00000200000a04f5 : cmp byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000051bc90 : cmp byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200000db300 : cmp byte ptr [rdi + rcx + 0x22], al ; ret 0x4df0
0x000002000008fc9a : cmp byte ptr [rdi + rcx + 0x22], al ; ret 0x8d49
0x0000020000222ffb : cmp byte ptr [rdi + rcx - 0x49], al ; ret 0xab8
0x000002000015ae0a : cmp byte ptr [rdi + rcx - 0x51], al ; ret 0x40b9
0x00000200006773a1 : cmp byte ptr [rdi + rdi*8 + 0x50c48348], ch ; pop rbx ; ret
0x00000200000bd2c6 : cmp byte ptr [rdi - 0x74b3ffd2], bh ; ret 0xc149
0x00000200000b9cfc : cmp byte ptr [rdi], 0xfe ; push rsi ; ret
0x0000020000453957 : cmp byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000200000f7994 : cmp byte ptr [rdi], cl ; mov bh, 0xc7 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000404ed0 : cmp byte ptr [rdi], cl ; ret
0x00000200004e5e03 : cmp byte ptr [rdi], cl ; test dword ptr [rdi - 0x9ffffff], ebx ; ret
0x00000200006f387e : cmp byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000105e77 : cmp byte ptr [rdi], cl ; xchg esi, ebp ; ret
0x000002000079f2ec : cmp byte ptr [rdx + 0x33480026], ch ; ret 0xb948
0x0000020000091db0 : cmp byte ptr [rdx + 0x3c000005], 2 ; je 0x20000091dc3 ; ret
0x000002000011e7f6 : cmp byte ptr [rdx + 0x598b0005], dh ; sub al, 0xf7 ; ret
0x00000200004bd7a6 : cmp byte ptr [rdx + 0x7b92e801], dh ; ret 0x4dff
0x00000200004b8d4f : cmp byte ptr [rdx + 1], bh ; call 0x200000e5349
0x0000020000664854 : cmp byte ptr [rdx + 3], dh ; xor eax, eax ; ret
0x00000200006100ea : cmp byte ptr [rdx + 4], 0 ; je 0x200006100fb ; xor eax, eax ; ret
0x00000200007c57a5 : cmp byte ptr [rdx + rcx*8 + 0xe], bl ; setne al ; ret
0x00000200007c57a4 : cmp byte ptr [rdx + rcx*8 + 0xe], r11b ; setne al ; ret
0x00000200004a6294 : cmp byte ptr [rdx - 0x140b17ff], dh ; ret
0x00000200004a6293 : cmp byte ptr [rdx - 0x140b17ff], r14b ; ret
0x00000200004a67cf : cmp byte ptr [rdx - 0x149617ff], dh ; ret
0x00000200004a65c9 : cmp byte ptr [rdx - 0x174017ff], dh ; ret
0x00000200004a6cba : cmp byte ptr [rdx - 0x1e3116ff], dh ; ret
0x00000200004a94ba : cmp byte ptr [rdx - 0x418117ff], dh ; ret
0x00000200004a9590 : cmp byte ptr [rdx - 0x425717ff], dh ; ret
0x00000200004a99be : cmp byte ptr [rdx - 0x468517ff], dh ; ret
0x00000200004a971d : cmp byte ptr [rdx - 0x489417ff], dh ; ret
0x00000200007048c3 : cmp byte ptr [rdx - 0x48], 0xe ; je 0x200007048d4 ; xor eax, eax ; ret
0x00000200004a9cfc : cmp byte ptr [rdx - 0x49c317ff], dh ; ret
0x0000020000718804 : cmp byte ptr [rdx - 0x4d], dl ; dec dword ptr [rax + 0x3b] ; ret 0x975
0x00000200004a9c49 : cmp byte ptr [rdx - 0x4dc017ff], dh ; ret
0x00000200004aa804 : cmp byte ptr [rdx - 0x54cb17ff], dh ; ret
0x00000200004aa9e7 : cmp byte ptr [rdx - 0x5b5e17ff], dh ; ret
0x00000200004ab9a6 : cmp byte ptr [rdx - 0x6b1d17ff], dh ; ret
0x00000200004ab9a5 : cmp byte ptr [rdx - 0x6b1d17ff], sil ; ret
0x0000020000237bb6 : cmp byte ptr [rdx - 0x77], cl ; ret
0x00000200004acbf9 : cmp byte ptr [rdx - 0x7d7017ff], dh ; ret
0x000002000068c553 : cmp byte ptr [rdx - 0xcfdbb4], cl ; ret
0x00000200005a7c25 : cmp byte ptr [rdx - 4], 0x3b ; ret 0x5277
0x000002000013b5d9 : cmp byte ptr [rdx], 0 ; jne 0x2000013b5cc ; mov rax, rcx ; ret
0x0000020000067d87 : cmp byte ptr [rdx], 0x10 ; setge al ; ret
0x00000200001d60db : cmp byte ptr [rdx], al ; call r8
0x0000020000526286 : cmp byte ptr [rdx], bh ; ret 0x820f
0x000002000013b162 : cmp byte ptr [rdx], bl ; jne 0x2000013b171 ; mov rax, rcx ; ret
0x0000020000551752 : cmp byte ptr [rdx], cl ; add bh, bh ; ret 0x8b45
0x000002000013b161 : cmp byte ptr [rdx], r11b ; jne 0x2000013b172 ; mov rax, rcx ; ret
0x0000020000131ed3 : cmp byte ptr [rip + 0x1f34a7], al ; je 0x20000131ef8 ; call rcx
0x00000200000f75b0 : cmp byte ptr [rip + 0x249039], 0 ; jne 0x200000f75c3 ; ret
0x000002000000bf82 : cmp byte ptr [rip + 0x2f5649], al ; setne al ; ret
0x000002000007a756 : cmp byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200000f5d2a : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax], eax ; ret
0x0000020000108f0c : cmp byte ptr [rsi + 0x44], ah ; mov dword ptr [rsp + 0x3c], esi ; call r9
0x0000020000073d9f : cmp byte ptr [rsi + 0x5b], bl ; ret
0x00000200004fa2d1 : cmp byte ptr [rsi + rax + 0x48], dh ; add esp, 0x20 ; pop rbx ; ret
0x00000200004cc1f2 : cmp byte ptr [rsi + rax*8 + 0x4c], 0 ; add rcx, r8 ; jmp rcx
0x000002000070d0c2 : cmp byte ptr [rsi + rsi*8], dl ; ret
0x0000020000211f72 : cmp byte ptr [rsi - 0x77], ah ; ret
0x000002000065dc22 : cmp byte ptr [rsi], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000020000028b1c : cmp byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000020000128b8e : cmp byte ptr [rsi], dh ; or byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000018b170 : cmp ch, bh ; dec dword ptr [rdx] ; ret 0x4588
0x000002000043e8b3 : cmp ch, dh ; inc dword ptr [rcx] ; xor eax, eax ; ret
0x000002000003d4f3 : cmp cl, 0x30 ; sete al ; ret
0x00000200000770dc : cmp cl, 0x42 ; je 0x200000770d5 ; xor al, al ; ret
0x00000200000770db : cmp cl, 0x42 ; je 0x200000770d6 ; xor al, al ; ret
0x00000200006cf1e2 : cmp cl, 0x51 ; jbe 0x200006cf1f5 ; add cl, 8 ; ret
0x0000020000426c0c : cmp cl, 0x61 ; jge 0x20000426c1d ; mov al, r9b ; ret
0x000002000009d984 : cmp cl, 0xc0 ; je 0x2000009d9a4 ; xor eax, eax ; ret
0x000002000003a65f : cmp cl, 1 ; sete al ; ret
0x0000020000098fa4 : cmp cl, 2 ; jae 0x20000098fb5 ; mov qword ptr [r8], rax ; ret
0x0000020000620104 : cmp cl, bl ; ret 0x48ff
0x00000200004c833d : cmp cl, byte ptr [rax + 0x3b] ; ret 0xf48
0x000002000012d5b8 : cmp cl, byte ptr [rax + 0xac] ; sete al ; ret
0x000002000079f251 : cmp cl, byte ptr [rax + 0xb] ; ret 0x8948
0x000002000023a13f : cmp cl, byte ptr [rax + 3] ; ret 0x8948
0x00000200000f6af5 : cmp cl, byte ptr [rax - 0x3800b7f9] ; jmp 0x200000f6ac7
0x0000020000788963 : cmp cl, byte ptr [rax - 0x75] ; ret
0x0000020000213e82 : cmp cl, byte ptr [rax - 0x7d] ; ret
0x00000200006e8965 : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000200004231ac : cmp cl, byte ptr [rcx + 3] ; ret
0x000002000068a174 : cmp cl, byte ptr [rcx - 0x75] ; add bh, bh ; ret 0x8b48
0x000002000011e7cc : cmp cl, byte ptr [rcx - 0x7d] ; call 0x1ffc4065cdc
0x0000020000052437 : cmp cl, byte ptr [rcx - 0x7d] ; ret 0x4804
0x0000020000420dfe : cmp cl, byte ptr [rcx - 0x7d] ; ret 0x6602
0x00000200000e4585 : cmp cl, byte ptr [rcx - 0x7f] ; jmp qword ptr [rax]
0x00000200001401d9 : cmp cl, byte ptr [rcx - 1] ; ret 0x854d
0x0000020000004d39 : cmp cl, byte ptr [rcx] ; add byte ptr [rbx], bh ; ret 0x874
0x0000020000231d2d : cmp cl, byte ptr [rdi] ; ret 0xf04
0x000002000021148b : cmp cl, byte ptr [rdi] ; test dword ptr [rdi], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0x00000200001b015d : cmp cl, byte ptr [rdi] ; test dword ptr [rsi - 0x740007d8], esp ; ret 0x778d
0x0000020000118e4f : cmp cl, byte ptr [rdx + 0xf] ; mov edi, 0xf498104 ; scasd eax, dword ptr [rdi] ; ret
0x000002000007c7dd : cmp cl, byte ptr [rdx] ; jle 0x2000007c7b0 ; mov byte ptr [rdx], cl ; ret
0x00000200000e1eab : cmp cl, byte ptr [rip - 0x74b7ffdc] ; ret
0x000002000017d880 : cmp cl, ch ; jb 0x2000017d829 ; in al, dx ; dec dword ptr [rax - 0x75] ; ret 0x3b48
0x00000200004a6c9e : cmp cl, ch ; jl 0x200004a6c90 ; ret
0x00000200005a5de3 : cmp cl, ch ; push rsi ; ret
0x00000200001fee93 : cmp cl, ch ; ret
0x000002000007db81 : cmp cl, dl ; cmovg eax, edx ; mov dl, al ; mov al, dl ; ret
0x000002000007daa2 : cmp cl, dl ; mov eax, ecx ; cmovg eax, edx ; jmp 0x2000007dab4
0x00000200006882cc : cmp cx, 0x41 ; jae 0x200006882df ; movzx eax, cx ; ret
0x0000020000494600 : cmp cx, 0x61 ; jae 0x20000494613 ; movzx eax, cx ; ret
0x000002000021182a : cmp cx, ax ; jae 0x20000211839 ; xor al, al ; ret
0x000002000060ed34 : cmp dh, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000191541 : cmp dh, al ; push rsi ; ret 0x7503
0x0000020000544b25 : cmp dh, byte ptr [rbp - 0x4e] ; jmp 0x200005f0e17
0x000002000013f509 : cmp dh, byte ptr [rbx + 6] ; movzx eax, cx ; sub eax, edx ; ret
0x00000200007acfbe : cmp dh, byte ptr [rsi + rsi - 0x75] ; or byte ptr [rax - 0x7d], cl ; ret 0x480c
0x00000200005f94b5 : cmp dh, dh ; dec dword ptr [rax - 0x7d] ; ret 0x4804
0x00000200005f8f3a : cmp dh, dh ; inc dword ptr [rcx - 0x7c] ; ret
0x00000200000473cf : cmp dh, dh ; ret
0x000002000004554a : cmp dh, dh ; ret 0x7408
0x00000200000bd63d : cmp dh, dh ; ret 0x7420
0x0000020000038218 : cmp dh, dh ; ret 0x7520
0x000002000003d95e : cmp dh, dh ; ret 0xf01
0x0000020000098a61 : cmp dh, dh ; ret 0xf10
0x00000200004c3825 : cmp dh, dh ; ret 0xf20
0x00000200004bedfd : cmp dh, dh ; ret 0xf3f
0x000002000019c23d : cmp dh, dl ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000070f7a0 : cmp dl, 0x1b ; ja 0x2000070f7b3 ; movzx eax, r10b ; jmp 0x2000070f7bf
0x000002000070f86d : cmp dl, 0x1b ; ja 0x2000070f880 ; movzx eax, r10b ; jmp 0x2000070f88c
0x000002000070f921 : cmp dl, 0x1b ; ja 0x2000070f934 ; movzx eax, r10b ; jmp 0x2000070f940
0x000002000070f9c4 : cmp dl, 0x1b ; ja 0x2000070f9d7 ; movzx eax, r10b ; jmp 0x2000070f9e3
0x00000200003cf390 : cmp dl, 0xff ; dec dword ptr [rax + 3] ; ror byte ptr [rax - 0x39], 1 ; ret
0x0000020000032fad : cmp dl, 0xff ; dec dword ptr [rax - 0x75] ; add al, byte ptr [rcx - 0x7c] ; ret 0x3d75
0x0000020000028eaf : cmp dl, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200000e464a : cmp dl, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x8b4c
0x00000200000d3081 : cmp dl, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000105159 : cmp dl, 0xff ; dec dword ptr [rbx + rcx*4 + 0x3c] ; ret 0x8d48
0x000002000001718b : cmp dl, 0xff ; dec dword ptr [rcx - 0x75] ; ret
0x000002000065e5c5 : cmp dl, 0xff ; dec dword ptr [rcx - 0x7d] ; ret 0x4c28
0x0000020000194528 : cmp dl, 0xff ; dec dword ptr [rdi] ; mov dh, 4 ; ret 0xf024
0x00000200000b5562 : cmp dl, 0xff ; dec dword ptr [rdi] ; xchg eax, edx ; ret 0xf48
0x00000200000b8468 : cmp dl, 0xff ; push rsi ; ret
0x00000200000b89e3 : cmp dl, 0xff ; push rsi ; ret 0x7502
0x00000200000b3c0b : cmp dl, 0xff ; push rsi ; ret 0xf04
0x0000020000719fec : cmp dl, al ; jne 0x20000719ff8 ; xor eax, eax ; ret
0x0000020000067d88 : cmp dl, byte ptr [rax] ; setge al ; ret
0x00000200001a6742 : cmp dl, byte ptr [rdi - 0x166f000f] ; ret
0x00000200003d25c4 : cmp dl, ch ; ret 0x4cff
0x000002000055e3d7 : cmp dword ptr [r10], r11d ; jne 0x2000055e2c8 ; ret
0x000002000003b041 : cmp dword ptr [r8], r10d ; jne 0x2000003b050 ; xor eax, eax ; ret
0x000002000002df1b : cmp dword ptr [r8], r9d ; je 0x2000002df19 ; xor al, al ; ret
0x000002000051c14a : cmp dword ptr [r9], r11d ; ja 0x2000051c107 ; ret
0x000002000008f08a : cmp dword ptr [rax + 0x10], 0 ; jne 0x2000008f0bd ; xor al, al ; ret
0x0000020000026cd1 : cmp dword ptr [rax + 0x10], ecx ; jne 0x20000026ce4 ; mov qword ptr [rdx + 8], r8 ; ret
0x00000200000fc65d : cmp dword ptr [rax + 0x10], ecx ; jne 0x200000fc693 ; add rsp, 0x28 ; ret
0x0000020000050fad : cmp dword ptr [rax + 0x18], -1 ; je 0x20000050fa9 ; mov rax, r8 ; ret
0x0000020000538b7b : cmp dword ptr [rax + 0x1a], edx ; jne 0x20000538b7e ; lock inc dword ptr [rax + 0x10] ; ret
0x00000200001b985e : cmp dword ptr [rax + 0x20], 0 ; add byte ptr [rbx], bh ; ret 0x820f
0x000002000010d3ff : cmp dword ptr [rax + 0x20], eax ; jne 0x2000010d415 ; mov rax, rcx ; ret
0x000002000079bdf2 : cmp dword ptr [rax + 0x35894cff], edi ; test byte ptr [rbx], al ; ret 0x48ff
0x0000020000119824 : cmp dword ptr [rax + 0x48000005], -0x7f ; ret
0x0000020000565080 : cmp dword ptr [rax + 0x80], eax ; setne al ; ret
0x0000020000189c3a : cmp dword ptr [rax + 0xf000001], -0x7b ; lodsb al, byte ptr [rsi] ; ret
0x000002000060cdc2 : cmp dword ptr [rax + 5], 0 ; add bh, bh ; ret 0x5589
0x0000020000454e0d : cmp dword ptr [rax + 8], 0 ; je 0x20000454e1e ; xor eax, eax ; ret
0x00000200000b9ef5 : cmp dword ptr [rax + 8], edx ; jne 0x200000b9f00 ; ret
0x000002000060ed23 : cmp dword ptr [rax + rax], edx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200007954d6 : cmp dword ptr [rax - 0x75], ecx ; ret 0x8b4d
0x000002000065e87a : cmp dword ptr [rax - 0x7d], ecx ; ret
0x000002000058522e : cmp dword ptr [rax - 0x7d], ecx ; ret 0x4802
0x0000020000615f31 : cmp dword ptr [rax - 0x7d], ecx ; ret 0x4c20
0x0000020000210e90 : cmp dword ptr [rax - 1], ecx ; ret
0x00000200007063f0 : cmp dword ptr [rax], 0 ; jne 0x200007063e6 ; xor al, al ; ret
0x0000020000554ab5 : cmp dword ptr [rax], 0x48000001 ; mov dword ptr [rax + 0x50], edx ; ret
0x00000200001ca07a : cmp dword ptr [rax], 0x8b000001 ; push rax ; and dh, dh ; ret 0x750f
0x000002000001e210 : cmp dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000038cc3 : cmp dword ptr [rax], eax ; je 0x20000038cd6 ; and qword ptr [rdx + 0x18], 0 ; ret
0x0000020000072956 : cmp dword ptr [rax], eax ; je 0x20000072951 ; mov al, 1 ; ret
0x00000200000fd654 : cmp dword ptr [rax], eax ; je 0x200000fd661 ; xor al, al ; ret
0x000002000001bea9 : cmp dword ptr [rax], eax ; jne 0x2000001beba ; add rsp, 0x28 ; ret
0x0000020000043354 : cmp dword ptr [rax], eax ; jne 0x20000043360 ; xor eax, eax ; ret
0x00000200000e7271 : cmp dword ptr [rax], eax ; jne 0x200000e7282 ; add rsp, 0x28 ; ret
0x0000020000121c24 : cmp dword ptr [rax], eax ; jne 0x20000121c08 ; xor al, al ; ret
0x000002000013b68f : cmp dword ptr [rax], eax ; jne 0x2000013b68d ; ret
0x00000200003e6ffa : cmp dword ptr [rax], eax ; jne 0x200003e6feb ; mov eax, 1 ; ret
0x00000200007063a5 : cmp dword ptr [rax], eax ; jne 0x20000706398 ; xor al, al ; ret
0x00000200002267c1 : cmp dword ptr [rax], eax ; mov r9, rcx ; jne 0x200002267b2 ; xor eax, eax ; ret
0x000002000015d7ad : cmp dword ptr [rax], eax ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000015df2c : cmp dword ptr [rax], eax ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x000002000015d8ac : cmp dword ptr [rax], eax ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x000002000000c618 : cmp dword ptr [rax], eax ; ret
0x000002000002ae5b : cmp dword ptr [rax], eax ; sete al ; ret
0x000002000020beb4 : cmp dword ptr [rax], eax ; setne al ; ret
0x000002000002df1c : cmp dword ptr [rax], ecx ; je 0x2000002df18 ; xor al, al ; ret
0x00000200007d20c2 : cmp dword ptr [rax], ecx ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x0000020000083c4e : cmp dword ptr [rax], edx ; cmovne edx, r8d ; mov eax, edx ; ret
0x00000200000343d7 : cmp dword ptr [rax], edx ; je 0x200000343f7 ; mov qword ptr [rax + 8], r8 ; ret
0x000002000003b042 : cmp dword ptr [rax], edx ; jne 0x2000003b04f ; xor eax, eax ; ret
0x000002000042871c : cmp dword ptr [rbp + 0x33], eax ; call rcx
0x000002000050fa39 : cmp dword ptr [rbp + 0x6c8b48ff], 0x24 ; js 0x2000050f9d6 ; ret
0x00000200004c43c6 : cmp dword ptr [rbx + 0x11], ecx ; add dh, dh ; ret
0x000002000013c0fc : cmp dword ptr [rbx + rax*2], ebp ; cmove edx, ecx ; movsxd rax, edx ; jmp 0x2000013c11f
0x00000200004423bb : cmp dword ptr [rbx - 0x3fcc0006], esi ; ret
0x00000200001bc079 : cmp dword ptr [rbx], -0xa ; dec dword ptr [rax - 0x75] ; ret 0x4bf0
0x00000200004a9b74 : cmp dword ptr [rbx], ebx ; jne 0x200004a9b87 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021c777 : cmp dword ptr [rbx], edx ; jb 0x2000021c77b ; jmp 0x2000021c791
0x000002000053eb73 : cmp dword ptr [rbx], esi ; ror byte ptr [rax - 0x75], 0x4c ; ret
0x00000200000f139e : cmp dword ptr [rcx + 0x108040e0], eax ; setne al ; ret
0x0000020000210545 : cmp dword ptr [rcx + 0x10], eax ; cmove rdx, rcx ; mov rax, rdx ; ret
0x0000020000161ec5 : cmp dword ptr [rcx + 0x10], eax ; jne 0x20000161ed8 ; lea rax, qword ptr [r9 - 8] ; ret
0x00000200003e9092 : cmp dword ptr [rcx + 0x14], edx ; ja 0x200003e909d ; ret
0x000002000010eb2b : cmp dword ptr [rcx + 0x1910], eax ; sete al ; ret
0x000002000060fdee : cmp dword ptr [rcx + 0x20], -1 ; sete al ; ret
0x000002000007c5f1 : cmp dword ptr [rcx + 0x20], 0 ; je 0x2000007c606 ; mov rax, rcx ; ret
0x00000200006f40f2 : cmp dword ptr [rcx + 0x20], 0 ; je 0x200006f40f0 ; mov al, 1 ; ret
0x0000020000018c10 : cmp dword ptr [rcx + 0x20], eax ; je 0x20000018c1b ; ret
0x00000200004b4d33 : cmp dword ptr [rcx + 0x20], eax ; sbb eax, eax ; add eax, 2 ; ret
0x0000020000108863 : cmp dword ptr [rcx + 0x20], edx ; jae 0x20000108875 ; mov qword ptr [rcx + 0x20], rdx ; ret
0x0000020000009b82 : cmp dword ptr [rcx + 0x2c], eax ; sete al ; ret
0x000002000001f9d5 : cmp dword ptr [rcx + 0x30], eax ; jne 0x2000001f9cf ; mov al, 1 ; ret
0x0000020000432bad : cmp dword ptr [rcx + 0x30], eax ; jne 0x20000432bbe ; ret
0x00000200001ba29d : cmp dword ptr [rcx + 0x30], eax ; setne al ; ret
0x00000200004aa7b2 : cmp dword ptr [rcx + 0x358], 0 ; ja 0x200004aa7c5 ; ret
0x0000020000408da5 : cmp dword ptr [rcx + 0x3a], 0 ; jne 0x20000408db6 ; xor eax, eax ; ret
0x0000020000041e17 : cmp dword ptr [rcx + 0x4e8], eax ; setne al ; ret
0x0000020000030fde : cmp dword ptr [rcx + 0x6fc], eax ; setne al ; ret
0x00000200001d0239 : cmp dword ptr [rcx + 0xc], 4 ; sete dl ; jmp 0x200001d0227
0x0000020000132719 : cmp dword ptr [rcx + 2], eax ; jb 0x20000132728 ; mov al, 1 ; ret
0x00000200000fd65b : cmp dword ptr [rcx + 4], 0 ; je 0x200000fd66c ; mov al, 1 ; ret
0x000002000070285a : cmp dword ptr [rcx + 4], 0 ; jl 0x2000070286b ; mov al, 1 ; ret
0x000002000051bd7a : cmp dword ptr [rcx + 4], esi ; je 0x2000051bd8c ; call 0x20000149838
0x00000200000f432e : cmp dword ptr [rcx + 8], -1 ; jl 0x200000f433f ; mov al, 1 ; ret
0x0000020000009ba7 : cmp dword ptr [rcx + 8], eax ; cmove rdx, rcx ; mov rax, rdx ; ret
0x000002000000c379 : cmp dword ptr [rcx + 8], eax ; je 0x2000000c384 ; ret
0x0000020000035000 : cmp dword ptr [rcx + 8], eax ; je 0x2000016ae61 ; ret
0x00000200003ed408 : cmp dword ptr [rcx + 8], eax ; je 0x200003ed417 ; xor eax, eax ; ret
0x0000020000481adc : cmp dword ptr [rcx + 8], eax ; je 0x20000481aeb ; xor al, al ; ret
0x00000200006cddd9 : cmp dword ptr [rcx + rax*2], 0x20 ; mov dword ptr [rdx], eax ; jne 0x200006cddb1 ; ret
0x000002000043baea : cmp dword ptr [rcx + rdx + 0xc], eax ; jne 0x2000043bac0 ; inc r10d ; jmp 0x2000043baca
0x0000020000021670 : cmp dword ptr [rcx + rdx*8 + 8], 0 ; je 0x20000021683 ; xor eax, eax ; ret
0x00000200001ee444 : cmp dword ptr [rcx - 0x39], ecx ; ret
0x00000200004e1ff4 : cmp dword ptr [rcx - 0x75], ecx ; salc ; mov rcx, r15 ; call 0x2000008e261
0x00000200001401e7 : cmp dword ptr [rcx - 1], ecx ; ret
0x0000020000121c23 : cmp dword ptr [rcx], 0 ; jne 0x20000121c09 ; xor al, al ; ret
0x00000200007063a4 : cmp dword ptr [rcx], 0 ; jne 0x20000706399 ; xor al, al ; ret
0x00000200004968c8 : cmp dword ptr [rcx], 0 ; sete al ; ret
0x000002000020beb3 : cmp dword ptr [rcx], 0 ; setne al ; ret
0x0000020000076030 : cmp dword ptr [rcx], eax ; jae 0x2000007603d ; xor eax, eax ; ret
0x0000020000235781 : cmp dword ptr [rcx], eax ; jb 0x2000023578e ; xor al, al ; ret
0x00000200001ba98b : cmp dword ptr [rcx], eax ; jne 0x200001ba998 ; xor eax, eax ; ret
0x00000200001d016f : cmp dword ptr [rcx], eax ; jne 0x200001d0181 ; mov eax, 1 ; ret
0x000002000068688a : cmp dword ptr [rcx], eax ; jne 0x2000068689d ; mov eax, 1 ; ret
0x0000020000710db0 : cmp dword ptr [rcx], eax ; jne 0x20000710daa ; ret
0x000002000000bb2b : cmp dword ptr [rcx], eax ; sete al ; ret
0x00000200005ff483 : cmp dword ptr [rcx], ebp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rbx - 0x74cfdba4] ; ret
0x000002000051c14b : cmp dword ptr [rcx], ebx ; ja 0x2000051c106 ; ret
0x000002000000b721 : cmp dword ptr [rcx], ecx ; jne 0x2000000b737 ; mov rax, rcx ; ret
0x00000200000e4e68 : cmp dword ptr [rcx], ecx ; jne 0x200000e4e79 ; add rsp, 0x28 ; ret
0x00000200004148c9 : cmp dword ptr [rcx], ecx ; jne 0x200004148d2 ; ret
0x000002000049c459 : cmp dword ptr [rcx], ecx ; jne 0x2000049c462 ; ret
0x00000200005098b5 : cmp dword ptr [rcx], ecx ; jne 0x200005098c2 ; xor eax, eax ; ret
0x000002000013d361 : cmp dword ptr [rcx], edx ; cmove r8, rcx ; mov rax, r8 ; ret
0x0000020000452d13 : cmp dword ptr [rcx], esi ; ret 0x8bff
0x0000020000412607 : cmp dword ptr [rdi + 0x4500180e], -0x75 ; ret 0xdb85
0x00000200007baa3f : cmp dword ptr [rdi - 0x6a], ecx ; inc dword ptr [rbp - 0xf68740] ; ret
0x00000200004fdeeb : cmp dword ptr [rdi], ebp ; jne 0x200004fdebe ; call 0x2000011f84f
0x000002000004efd7 : cmp dword ptr [rdi], ecx ; xchg eax, edx ; ret 0xf48
0x000002000003ad4b : cmp dword ptr [rdx + 0x18], ecx ; seta al ; ret
0x000002000003ad4a : cmp dword ptr [rdx + 0x18], r9d ; seta al ; ret
0x000002000003ad38 : cmp dword ptr [rdx + 0x1c], eax ; jbe 0x2000003ad47 ; xor al, al ; ret
0x000002000003ad37 : cmp dword ptr [rdx + 0x1c], r8d ; jbe 0x2000003ad48 ; xor al, al ; ret
0x00000200000cd18b : cmp dword ptr [rdx + 0x25], ebx ; add byte ptr [rcx - 1], al ; ret
0x0000020000072a05 : cmp dword ptr [rdx + 1], 0 ; add byte ptr [rax - 9], cl ; ret 0xfff
0x000002000013bd31 : cmp dword ptr [rdx], 0 ; jne 0x2000013bd1d ; mov rax, rcx ; ret
0x000002000050faa0 : cmp dword ptr [rdx], eax ; cmove r8d, eax ; mov eax, r8d ; ret
0x000002000003e157 : cmp dword ptr [rdx], eax ; jne 0x2000003e139 ; mov eax, r8d ; ret
0x000002000008a9c3 : cmp dword ptr [rdx], eax ; jne 0x2000008a9da ; add rsp, 0x20 ; pop rbx ; ret
0x000002000017f276 : cmp dword ptr [rdx], ebx ; add byte ptr [rcx - 0x75], al ; ret 0x523
0x000002000013d3c3 : cmp dword ptr [rdx], ebx ; jne 0x2000013d3d2 ; mov rax, rcx ; ret
0x000002000055e3d8 : cmp dword ptr [rdx], ebx ; jne 0x2000055e2c7 ; ret
0x000002000062155c : cmp dword ptr [rdx], ecx ; cmove eax, r8d ; ret
0x0000020000544b24 : cmp dword ptr [rdx], edi ; jne 0x20000544ae0 ; jmp 0x200005f0e18
0x000002000013d3c2 : cmp dword ptr [rdx], r11d ; jne 0x2000013d3d3 ; mov rax, rcx ; ret
0x0000020000544b23 : cmp dword ptr [rdx], r15d ; jne 0x20000544ae1 ; jmp 0x200005f0e19
0x000002000013f69e : cmp dword ptr [rip + 0x1b941c], ecx ; sete al ; ret
0x00000200001c0f69 : cmp dword ptr [rip + 0x1e709d], ecx ; cmova eax, ecx ; ret
0x00000200000b94d7 : cmp dword ptr [rip + 0x269ae7], eax ; setne al ; ret
0x00000200001289ee : cmp dword ptr [rip + 0x280a4c], eax ; sete al ; ret
0x000002000000bd54 : cmp dword ptr [rip + 0x2f37f9], 0 ; jne 0x2000000bd67 ; ret
0x00000200004fcfe1 : cmp dword ptr [rip - 0x1fa91f], eax ; setne al ; ret
0x0000020000672c53 : cmp dword ptr [rip - 0x37ee25], ecx ; cmova eax, ecx ; ret
0x00000200006f35c9 : cmp dword ptr [rsi + 0x253844ff], esi ; mov al, 0x73 ; ret 0xfff
0x00000200003d2033 : cmp dword ptr [rsi + rdx*8 - 0x3b7cb701], ecx ; pop rbx ; ret
0x0000020000055d75 : cmp dword ptr [rsi], 3 ; jne 0x20000055dbe ; mov rcx, rsi ; call r14
0x00000200006e4d98 : cmp dword ptr [rsp + 8], eax ; jae 0x200006e4dab ; or eax, 0xffffffff ; ret
0x00000200006e4da5 : cmp dword ptr [rsp + 8], eax ; seta cl ; mov eax, ecx ; ret
0x0000020000151964 : cmp eax, 0 ; jne 0x20000151a59 ; ret
0x00000200007b1f78 : cmp eax, 0x100 ; jb 0x200007b1f33 ; ret
0x00000200001cc46e : cmp eax, 0x155e94 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x5188
0x00000200006ce76c : cmp eax, 0x18 ; jb 0x200006ce765 ; or eax, 0xffffffff ; ret
0x00000200005fb074 : cmp eax, 0x18e8fff7 ; sar rdi, -0x75 ; ret
0x00000200000f75b1 : cmp eax, 0x249039 ; add byte ptr [rbp + 1], dh ; ret
0x00000200007048b0 : cmp eax, 0x250 ; setb al ; ret
0x000002000011bc43 : cmp eax, 0x28c3ba ; add byte ptr [rax - 0x39], cl ; ret
0x00000200006f6901 : cmp eax, 0x2bb8058b ; ret 0x3dff
0x000002000003dedd : cmp eax, 0x2c1b0d ; add byte ptr [rax - 0x75], cl ; ret 0x850f
0x000002000000bd55 : cmp eax, 0x2f37f9 ; add byte ptr [rbp + 1], dh ; ret
0x000002000023baf5 : cmp eax, 0x30b8 ; add cl, ch ; ret
0x000002000062f402 : cmp eax, 0x30d ; jg 0x2000062f415 ; mov al, 1 ; ret
0x00000200001e4b7a : cmp eax, 0x32 ; jb 0x200001e4b55 ; xor eax, eax ; ret
0x0000020000673a55 : cmp eax, 0x3b48ffbe ; ret 0x1875
0x000002000066b01f : cmp eax, 0x3bffc990 ; or byte ptr [rbp + rax*8 - 1], dh ; ret 0x8348
0x0000020000135d20 : cmp eax, 0x3e ; ja 0x20000135d34 ; ret
0x00000200006f40e1 : cmp eax, 0x4000001f ; je 0x200006f40f4 ; xor al, al ; ret
0x0000020000075ea1 : cmp eax, 0x453b0011 ; adc al, 0x7f ; xor al, 0x2b ; ret
0x000002000003672f : cmp eax, 0x48000b17 ; add esp, 0x28 ; ret
0x000002000057c155 : cmp eax, 0x4890fff5 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000438f2f : cmp eax, 0x48ffd01d ; add esp, 0x50 ; pop rbx ; ret
0x0000020000671c2b : cmp eax, 0x48ffea6e ; add esp, 0x68 ; ret
0x00000200001c4e7f : cmp eax, 0x48fff24b ; add esp, 0x28 ; ret
0x00000200003cc30f : cmp eax, 0x48fff35d ; add esp, 0x20 ; pop rbx ; ret
0x0000020000440cef : cmp eax, 0x48fff68c ; mov eax, dword ptr [rcx + rax*8] ; ret
0x000002000002e518 : cmp eax, 0x4d01002f ; mov eax, edx ; jmp 0x2000002e4e9
0x0000020000226ba5 : cmp eax, 0x50 ; jmp 0x20000226b71
0x000002000005ccc3 : cmp eax, 0x51 ; jge 0x2000005ccd2 ; xor eax, eax ; ret
0x000002000045663a : cmp eax, 0x52 ; jg 0x20000456649 ; mov al, 1 ; ret
0x00000200004f40af : cmp eax, 0x5c ; jne 0x200004f40af ; xor al, al ; ret
0x0000020000044cfe : cmp eax, 0x5d ; ret
0x0000020000074d78 : cmp eax, 0x74c98545 ; xor esi, esi ; ret
0x0000020000710dea : cmp eax, 0x8348ffad ; ret
0x0000020000172652 : cmp eax, 0x8348fff9 ; ret 0xe908
0x0000020000648850 : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x4ba
0x0000020000647ca5 : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x558d
0x0000020000647eb7 : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x568d
0x000002000064839f : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x5ba
0x00000200006479bb : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x6ba
0x0000020000647691 : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x7ba
0x00000200003d9dca : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8189
0x0000020000648c5e : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8ba
0x00000200006478e6 : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x9ba
0x00000200001d0f50 : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0xaba
0x00000200001c30fe : cmp eax, 0x8948ffe6 ; adc byte ptr [r8 - 0x75], cl ; ret
0x000002000045334b : cmp eax, 0x8b0015ba ; ret
0x00000200005835dd : cmp eax, 0x8b48ffe6 ; add dword ptr [rax + 0x2b], ecx ; ret 0x3b48
0x000002000065bddf : cmp eax, 0x8bffb6b5 ; ret
0x000002000050263f : cmp eax, 0x8bffb7aa ; ret
0x0000020000558287 : cmp eax, 0x8bffbdb9 ; ret
0x00000200003fb11f : cmp eax, 0x8bffc0e4 ; ret
0x00000200005c2dbf : cmp eax, 0x8bffc8a2 ; ret
0x000002000046f1bf : cmp eax, 0x8bffddde ; ret
0x00000200006d67cf : cmp eax, 0x8bffe489 ; ret
0x00000200006cf1be : cmp eax, 0xa ; jb 0x200006cf1b6 ; ret
0x00000200006647ec : cmp eax, 0xa ; je 0x200006647fb ; xor eax, eax ; ret
0x0000020000211743 : cmp eax, 0xa000000 ; je 0x20000211756 ; xor al, al ; ret
0x00000200001762b9 : cmp eax, 0xb1fff9c3 ; add ecx, ebp ; ret
0x000002000042032d : cmp eax, 0xb70f3174 ; add dword ptr [rax - 1], ecx ; ret 0x8348
0x00000200004ff6b9 : cmp eax, 0xb9481477 ; ret
0x000002000022a0c8 : cmp eax, 0xd977a ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000cdff1 : cmp eax, 0xf49c18b ; scasd eax, dword ptr [rdi] ; ret 0x8c89
0x000002000040b78d : cmp eax, 0xf6000001 ; ret
0x000002000009a677 : cmp eax, 0xf6000f80 ; ret
0x00000200004698de : cmp eax, 0xf6c38b48 ; ret
0x0000020000207bf2 : cmp eax, 0xf99cc ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000020b905 : cmp eax, 0xfd ; cmova eax, ecx ; ret
0x00000200000bf808 : cmp eax, 0xff ; je 0x200000bf813 ; ret
0x00000200000facc8 : cmp eax, 0xff ; je 0x200000facd3 ; ret
0x000002000020a19d : cmp eax, 0xff ; jne 0x2000020a1ac ; xor eax, eax ; ret
0x0000020000133ebb : cmp eax, 0xff001edf ; ret
0x000002000007ed3a : cmp eax, 0xffcab60f ; ret
0x00000200005aff36 : cmp eax, 0xffda5c68 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd202
0x00000200005aff24 : cmp eax, 0xffda5c76 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xca32
0x0000020000451760 : cmp eax, 0xffecd783 ; call 0x2000007d088
0x0000020000401f55 : cmp eax, 0xfff00f19 ; add byte ptr [rdi], cl ; test ecx, ecx ; ret
0x0000020000401f0e : cmp eax, 0xfff2320c ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3d80
0x0000020000519e8f : cmp eax, 1 ; jbe 0x20000519e9f ; xor ecx, ecx ; call rax
0x00000200000b68ca : cmp eax, 1 ; je 0x200000b6877 ; xor eax, eax ; ret
0x0000020000113a0b : cmp eax, 1 ; je 0x2000017680b ; ret
0x000002000040aa4b : cmp eax, 1 ; je 0x2000040aa56 ; ret
0x000002000050e1e4 : cmp eax, 1 ; je 0x2000050e1ef ; ret
0x000002000002e66f : cmp eax, 1 ; jle 0x20000169a43 ; ret
0x00000200000eef01 : cmp eax, 1 ; jne 0x200000eef0c ; ret
0x00000200003cfba1 : cmp eax, 1 ; jne 0x200003cfbac ; ret
0x00000200006ae268 : cmp eax, 1 ; jne 0x200006ae25d ; add rsp, 0x28 ; ret
0x000002000008eee1 : cmp eax, 2 ; jae 0x2000008eeec ; ret
0x0000020000049225 : cmp eax, 2 ; jb 0x20000049209 ; or eax, 0xffffffff ; ret
0x00000200000716ed : cmp eax, 2 ; jl 0x200000716f8 ; ret
0x0000020000098822 : cmp eax, 2 ; jl 0x2000009882d ; ret
0x00000200007196b5 : cmp eax, 3 ; jne 0x2000071968b ; xor eax, eax ; ret
0x00000200001d28c3 : cmp eax, 4 ; je 0x200001d28d2 ; xor eax, eax ; ret
0x00000200000733f9 : cmp eax, 5 ; jbe 0x2000007340a ; xor eax, eax ; jmp 0x200000733cd
0x00000200007aff0a : cmp eax, 5 ; jbe 0x200007aff22 ; movzx eax, r8w ; ret
0x00000200000eeb0c : cmp eax, 5 ; jge 0x200001a8d5b ; ret
0x00000200001ceb11 : cmp eax, 6 ; setbe cl ; mov eax, ecx ; ret
0x00000200000d325b : cmp eax, 8 ; je 0x200000d327b ; mov eax, r8d ; ret
0x00000200000d2b39 : cmp eax, dword ptr [r8] ; jb 0x200000d2b25 ; ret
0x00000200000d2b3a : cmp eax, dword ptr [rax] ; jb 0x200000d2b24 ; ret
0x00000200004d1f5a : cmp eax, dword ptr [rax] ; jne 0x200004d1f6d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ba0d7 : cmp eax, dword ptr [rbp + rcx*4 + 0x43] ; inc dword ptr [rsi - 0x75] ; ret 0x4504
0x0000020000428635 : cmp eax, dword ptr [rbp - 0x75] ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4102
0x0000020000428847 : cmp eax, dword ptr [rbx + rbp - 0x3f] ; movzx eax, r8w ; ret
0x0000020000490a2b : cmp eax, dword ptr [rbx + rcx*4 + 0x53] ; or byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000094816 : cmp eax, dword ptr [rbx - 0x49f0f81a] ; push rbx ; add esi, esi ; ret 0x740f
0x00000200000ca323 : cmp eax, dword ptr [rcx + 0x18] ; jne 0x200000ca319 ; mov al, 1 ; ret
0x000002000021198d : cmp eax, dword ptr [rcx + 0x20] ; jb 0x2000021199c ; xor al, al ; ret
0x0000020000664852 : cmp eax, dword ptr [rcx + 0x38] ; jb 0x20000664861 ; xor eax, eax ; ret
0x0000020000703ba6 : cmp eax, dword ptr [rcx + 8] ; jbe 0x20000703bb8 ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000179927 : cmp eax, dword ptr [rcx - 0x75] ; ret
0x000002000013fc69 : cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000220c64 : cmp eax, dword ptr [rdx + 0x40] ; sbb eax, eax ; ret
0x0000020000527f11 : cmp eax, dword ptr [rdx] ; ret 0x3dff
0x000002000068dc71 : cmp eax, eax ; cmovg eax, r8d ; ret
0x00000200004783cc : cmp eax, eax ; ja 0x200004783dc ; mov qword ptr [rdx], r8 ; mov al, 1 ; ret
0x00000200004a6546 : cmp eax, eax ; ja 0x200004a6538 ; ret
0x0000020000703c19 : cmp eax, eax ; ja 0x20000703c2c ; mov eax, 1 ; ret
0x00000200000035c9 : cmp eax, eax ; jae 0x200000035bb ; xor al, al ; ret
0x00000200001bccc8 : cmp eax, eax ; jae 0x200001bccd7 ; or eax, 0xffffffff ; ret
0x00000200001cf685 : cmp eax, eax ; jae 0x200001cf694 ; or eax, 0xffffffff ; ret
0x000002000002167f : cmp eax, eax ; jb 0x20000021675 ; mov eax, 1 ; ret
0x000002000007e899 : cmp eax, eax ; jb 0x2000007e884 ; ret
0x000002000010b58f : cmp eax, eax ; jb 0x2000010b5a2 ; cmp r9d, eax ; jb 0x2000010b5c2 ; ret
0x00000200001bcace : cmp eax, eax ; jb 0x200001bcac9 ; or eax, 0xffffffff ; ret
0x0000020000213abe : cmp eax, eax ; jb 0x20000213ab7 ; mov al, 1 ; ret
0x000002000051061e : cmp eax, eax ; jb 0x20000510618 ; xor al, al ; ret
0x000002000069e3e8 : cmp eax, eax ; jbe 0x2000069e3fb ; mov eax, 0x1e ; ret
0x00000200006c7412 : cmp eax, eax ; je 0x200006c7425 ; mov eax, 3 ; ret
0x00000200006c7434 : cmp eax, eax ; je 0x200006c7447 ; mov eax, 4 ; ret
0x0000020000027c0a : cmp eax, eax ; jne 0x20000027bd7 ; ret
0x000002000003a79d : cmp eax, eax ; jne 0x2000003a780 ; mov eax, r9d ; ret
0x000002000006d2f2 : cmp eax, eax ; jne 0x2000006d301 ; mov rax, r8 ; ret
0x00000200000fd619 : cmp eax, eax ; jne 0x200000fd628 ; or eax, 0xffffffff ; ret
0x00000200001fd660 : cmp eax, eax ; jne 0x200001fd654 ; shr eax, 0x18 ; ret
0x000002000044f369 : cmp eax, eax ; jne 0x2000044f358 ; xor eax, eax ; ret
0x000002000069b29c : cmp eax, eax ; jne 0x2000069b27a ; xor eax, eax ; ret
0x000002000071a9f9 : cmp eax, eax ; jne 0x2000071a9f5 ; xor eax, eax ; ret
0x000002000052b501 : cmp eax, eax ; ret 0x89ff
0x0000020000099d7a : cmp eax, eax ; sbb rax, rax ; and rax, rcx ; ret
0x00000200000c0648 : cmp eax, ebx ; ja 0x200000c0683 ; add rsp, 8 ; ret
0x00000200005302de : cmp eax, ebx ; jbe 0x200005302f1 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006a9478 : cmp eax, ebx ; jl 0x200006a9449 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000a37d : cmp eax, ebx ; jne 0x2000000a390 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006c6021 : cmp eax, ebx ; jne 0x200006c6034 ; sub ecx, 0x10 ; jns 0x200006c6010 ; ret
0x00000200006c605d : cmp eax, ebx ; jne 0x200006c6070 ; sub ecx, 0x10 ; jns 0x200006c604c ; ret
0x000002000006ba03 : cmp eax, ebx ; xor eax, dword ptr [rax] ; je 0x2000006ba14 ; xor al, al ; ret
0x0000020000546c58 : cmp eax, ecx ; cmovg eax, ecx ; add rsp, 0x28 ; ret
0x0000020000027bfb : cmp eax, ecx ; ja 0x20000027c04 ; ret
0x0000020000136536 : cmp eax, ecx ; ja 0x20000136543 ; sbb eax, eax ; ret
0x000002000069e418 : cmp eax, ecx ; ja 0x2000069e42b ; mov eax, 0x3c ; ret
0x000002000002d072 : cmp eax, ecx ; jae 0x2000002d081 ; mov rax, r9 ; ret
0x00000200000792fc : cmp eax, ecx ; jae 0x2000007930d ; add rsp, 0x28 ; ret
0x00000200001460fb : cmp eax, ecx ; jae 0x2000014610a ; or eax, 0xffffffff ; ret
0x00000200001c8b5d : cmp eax, ecx ; jae 0x200001c8b6a ; mov al, 1 ; ret
0x00000200001e36c3 : cmp eax, ecx ; jae 0x200001e36d2 ; or eax, 0xffffffff ; ret
0x000002000021179a : cmp eax, ecx ; jae 0x20000211795 ; mov rax, rdx ; ret
0x000002000021179a : cmp eax, ecx ; jae 0x20000211796 ; mov rax, rdx ; ret
0x000002000021c47a : cmp eax, ecx ; jae 0x2000021c489 ; or eax, 0xffffffff ; ret
0x0000020000666eaf : cmp eax, ecx ; jae 0x20000666ebe ; or eax, 0xffffffff ; ret
0x00000200007b7c74 : cmp eax, ecx ; jae 0x200007b7c83 ; or eax, 0xffffffff ; ret
0x00000200007d177d : cmp eax, ecx ; jae 0x200007d178c ; or eax, 0xffffffff ; ret
0x00000200000265fc : cmp eax, ecx ; jb 0x200000265e9 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000026636 : cmp eax, ecx ; jb 0x20000026619 ; ret
0x000002000021c335 : cmp eax, ecx ; jb 0x2000021c332 ; xor eax, eax ; ret
0x0000020000427b1b : cmp eax, ecx ; jb 0x20000427b03 ; xor eax, eax ; ret
0x000002000042f3f5 : cmp eax, ecx ; jb 0x2000042f40c ; add rsp, 0x28 ; ret
0x000002000043aafa : cmp eax, ecx ; jb 0x2000043aae3 ; mov eax, edx ; ret
0x000002000043aafa : cmp eax, ecx ; jb 0x2000043aae4 ; mov eax, edx ; ret
0x000002000048be94 : cmp eax, ecx ; jb 0x2000048be33 ; ret
0x000002000061bf1b : cmp eax, ecx ; jb 0x2000061bf0b ; ret
0x00000200006b1e1e : cmp eax, ecx ; jb 0x200006b1de7 ; jmp 0x200006b1e2a
0x000002000002be41 : cmp eax, ecx ; jbe 0x2000002be52 ; add rsp, 0x38 ; ret
0x0000020000050fa5 : cmp eax, ecx ; jbe 0x20000050f99 ; xor eax, eax ; ret
0x0000020000207bae : cmp eax, ecx ; jbe 0x20000207bbd ; or eax, 0xffffffff ; ret
0x0000020000100436 : cmp eax, ecx ; je 0x2000010043f ; ret
0x000002000022c7ea : cmp eax, ecx ; jl 0x2000022c7de ; xor eax, eax ; ret
0x00000200000273bb : cmp eax, ecx ; jne 0x200000273ca ; mov rax, r8 ; ret
0x000002000004e303 : cmp eax, ecx ; jne 0x2000004e310 ; xor eax, eax ; ret
0x000002000021f26d : cmp eax, ecx ; jne 0x2000021f25c ; ret
0x00000200004e045b : cmp eax, ecx ; jne 0x200004e0468 ; xor eax, eax ; ret
0x00000200005fc70f : cmp eax, ecx ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x000002000013c26f : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000020000079f54 : cmp eax, ecx ; seta al ; ret
0x0000020000207bb9 : cmp eax, ecx ; setb al ; ret
0x000002000002deee : cmp eax, ecx ; sete al ; ret
0x000002000021c485 : cmp eax, ecx ; setne al ; ret
0x00000200003ee139 : cmp eax, edx ; cmovb eax, edx ; mov dword ptr [r9 + 4], eax ; ret
0x0000020000087b9f : cmp eax, edx ; ja 0x20000087bac ; mov al, 1 ; ret
0x00000200000bdf15 : cmp eax, edx ; ja 0x200000bdf1e ; ret
0x00000200005242cc : cmp eax, edx ; ja 0x200005242e5 ; mov qword ptr [r10], r9 ; xor eax, eax ; ret
0x000002000055df88 : cmp eax, edx ; ja 0x2000055df95 ; mov eax, ecx ; ret
0x00000200006afdde : cmp eax, edx ; jae 0x200006afdf1 ; mov eax, 0xc0000023 ; ret
0x000002000008e93b : cmp eax, edx ; jb 0x2000008e908 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000b92b8 : cmp eax, edx ; jb 0x200000b92b8 ; add rsp, 0x28 ; ret
0x00000200000d1bcf : cmp eax, edx ; jb 0x200000d1b9e ; ret
0x000002000013b2f5 : cmp eax, edx ; jb 0x2000013b2e6 ; ret
0x000002000013b3a8 : cmp eax, edx ; jb 0x2000013b398 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000013cf37 : cmp eax, edx ; jb 0x2000013cf2f ; ret
0x000002000013d339 : cmp eax, edx ; jb 0x2000013d32f ; ret
0x00000200001d24e0 : cmp eax, edx ; jb 0x200001d24d9 ; mov al, 1 ; ret
0x00000200001f7286 : cmp eax, edx ; jb 0x200001f7281 ; xor eax, eax ; ret
0x000002000060e66b : cmp eax, edx ; jb 0x2000060e641 ; movzx eax, r8w ; ret
0x00000200006c67a1 : cmp eax, edx ; jb 0x200006c6777 ; xor eax, eax ; ret
0x00000200007a78a2 : cmp eax, edx ; jb 0x200007a789a ; ret
0x00000200000a0a4c : cmp eax, edx ; jbe 0x200000a0a59 ; xor eax, eax ; ret
0x00000200001e7c1f : cmp eax, edx ; jbe 0x200001e7c7d ; mov r8, r10 ; jmp 0x200001e7c7d
0x0000020000653be4 : cmp eax, edx ; jbe 0x20000653bf7 ; mov eax, 0xc0000023 ; ret
0x0000020000033d3a : cmp eax, edx ; je 0x20000033d5b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f02b0 : cmp eax, edx ; je 0x200001f02c3 ; mov eax, 1 ; ret
0x00000200001f4b9d : cmp eax, edx ; je 0x200001f4bab ; add rax, rax ; ret
0x00000200003d01ba : cmp eax, edx ; je 0x200003d01b9 ; ret
0x00000200004a6541 : cmp eax, edx ; je 0x200004a6529 ; cmp r8, rax ; ja 0x200004a653d ; ret
0x00000200001d4681 : cmp eax, edx ; jl 0x200001d4675 ; or eax, 0xffffffff ; ret
0x000002000022002d : cmp eax, edx ; jl 0x20000220022 ; xor eax, eax ; ret
0x0000020000236204 : cmp eax, edx ; jl 0x200002361ec ; ret
0x0000020000164577 : cmp eax, edx ; jmp 0x200001645f5
0x00000200006768b9 : cmp eax, edx ; jmp 0x200006768ec
0x00000200006bbf91 : cmp eax, edx ; jmp 0x200006bbfc9
0x00000200006bbf91 : cmp eax, edx ; jmp 0x200006bbfd1
0x000002000003d6eb : cmp eax, edx ; jne 0x2000003d6b8 ; lock or qword ptr [r9 + 8], rdx ; ret
0x000002000006ca42 : cmp eax, edx ; jne 0x2000006ca5d ; mov rax, r10 ; ret
0x000002000006ca42 : cmp eax, edx ; jne 0x2000006ca5e ; mov rax, r10 ; ret
0x0000020000075186 : cmp eax, edx ; jne 0x2000007517f ; sub rax, r8 ; ret
0x000002000013d1c4 : cmp eax, edx ; jne 0x2000013d1d3 ; mov rax, rcx ; ret
0x000002000079636b : cmp eax, esi ; mov eax, 0x200f44ff ; ret 0x2b8
0x00000200000c0647 : cmp eax, r11d ; ja 0x200000c0684 ; add rsp, 8 ; ret
0x000002000068dc70 : cmp eax, r8d ; cmovg eax, r8d ; ret
0x00000200001bccc7 : cmp eax, r8d ; jae 0x200001bccd8 ; or eax, 0xffffffff ; ret
0x00000200001cf684 : cmp eax, r8d ; jae 0x200001cf695 ; or eax, 0xffffffff ; ret
0x000002000007e898 : cmp eax, r8d ; jb 0x2000007e885 ; ret
0x00000200001bcacd : cmp eax, r8d ; jb 0x200001bcaca ; or eax, 0xffffffff ; ret
0x000002000051061d : cmp eax, r8d ; jb 0x20000510619 ; xor al, al ; ret
0x00000200001fd65f : cmp eax, r8d ; jne 0x200001fd655 ; shr eax, 0x18 ; ret
0x000002000044f368 : cmp eax, r8d ; jne 0x2000044f359 ; xor eax, eax ; ret
0x000002000002deed : cmp eax, r9d ; sete al ; ret
0x00000200006ee12c : cmp ebp, dword ptr [rsi] ; ret 0x39
0x00000200005c660c : cmp ebp, ecx ; ret
0x0000020000668678 : cmp ebp, esp ; push rsi ; ret
0x000002000048f614 : cmp ebx, 4 ; je 0x2000048f624 ; call r12
0x00000200005ba6f9 : cmp ebx, dword ptr [rax] ; ret 0x4cff
0x000002000020e767 : cmp ebx, dword ptr [rcx] ; jb 0x2000020e774 ; xor eax, eax ; ret
0x000002000020e803 : cmp ebx, dword ptr [rcx] ; jb 0x2000020e810 ; xor al, al ; ret
0x00000200003cf1f0 : cmp ebx, eax ; jb 0x200003cf1c7 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000f43aa : cmp ebx, eax ; je 0x200000f4373 ; jmp 0x200000f4358
0x000002000065003c : cmp ebx, eax ; jne 0x20000650005 ; jmp 0x200006500ae
0x0000020000558fa7 : cmp ebx, eax ; sete r9b ; mov eax, r9d ; ret
0x00000200005d094f : cmp ebx, ebp ; call qword ptr [rax - 0x12f93d17]
0x00000200001fd581 : cmp ebx, ecx ; ja 0x200001fd563 ; mov dword ptr [r10 + 4], r9d ; ret
0x000002000021235d : cmp ebx, ecx ; jb 0x2000021234a ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000053471f : cmp ebx, ecx ; jne 0x2000053471c ; jmp 0x20000534731
0x00000200001bcd1f : cmp ebx, ecx ; seta al ; ret
0x0000020000059953 : cmp ebx, edi ; xor al, 0 ; call rax
0x00000200006a9c14 : cmp ebx, edx ; jne 0x200006a9c11 ; jmp 0x200006a9c26
0x0000020000618bb3 : cmp ebx, edx ; ret
0x000002000004510f : cmp ecx, 0x14 ; ja 0x20000045121 ; xor al, al ; ret
0x00000200001f8aa4 : cmp ecx, 0x18 ; jne 0x200001f8ab3 ; xor eax, eax ; ret
0x00000200001f8abd : cmp ecx, 0x1e ; setb al ; ret
0x0000020000213a9f : cmp ecx, 0x20 ; jb 0x20000213a94 ; mov rax, r8 ; ret
0x000002000013f507 : cmp ecx, 0x3a ; jae 0x2000013f51b ; movzx eax, cx ; sub eax, edx ; ret
0x000002000046cc27 : cmp ecx, 0x40 ; jb 0x2000046cc04 ; mov rax, r8 ; ret
0x00000200007b4ff8 : cmp ecx, 0x40 ; jb 0x200007b4fe3 ; ret
0x000002000042bf1a : cmp ecx, 0x40 ; je 0x2000042bf10 ; xor al, al ; ret
0x00000200006882cd : cmp ecx, 0x41 ; jae 0x200006882de ; movzx eax, cx ; ret
0x0000020000494601 : cmp ecx, 0x61 ; jae 0x20000494612 ; movzx eax, cx ; ret
0x00000200000092f6 : cmp ecx, 0x7ffffffe ; cmova eax, edx ; ret
0x000002000013bf7e : cmp ecx, 0x80 ; setb al ; ret
0x0000020000041d6f : cmp ecx, 0x8009035d ; je 0x20000041d8a ; mov eax, edx ; ret
0x000002000013963b : cmp ecx, 0xa000002 ; setbe al ; ret
0x0000020000544e1a : cmp ecx, 0xf ; jne 0x20000544e2b ; mov rax, r8 ; ret
0x00000200000f3726 : cmp ecx, 0xfd ; ja 0x200000f3717 ; mov al, 1 ; ret
0x000002000051f2d3 : cmp ecx, 0xff ; je 0x2000051f2e5 ; call 0x20000148078
0x000002000069e3c9 : cmp ecx, 0xff ; jne 0x2000069e3dc ; lea eax, dword ptr [r9 + 0xb] ; ret
0x00000200000450c3 : cmp ecx, 1 ; ja 0x200000450ba ; xor eax, eax ; ret
0x000002000004dd08 : cmp ecx, 1 ; je 0x2000004dd17 ; xor al, al ; ret
0x00000200000b892e : cmp ecx, 1 ; je 0x200000b893d ; xor eax, eax ; ret
0x000002000043e269 : cmp ecx, 1 ; je 0x2000043e274 ; ret
0x00000200004a2f15 : cmp ecx, 1 ; je 0x200004a2f2d ; ret
0x0000020000052866 : cmp ecx, 1 ; jne 0x2000005286a ; mov eax, ecx ; ret
0x00000200001cb0dc : cmp ecx, 1 ; jne 0x200001cb0eb ; xor al, al ; ret
0x00000200003f91d8 : cmp ecx, 1 ; jne 0x200003f91e9 ; lea eax, dword ptr [rcx + 4] ; ret
0x000002000020e6a4 : cmp ecx, 1 ; setle al ; ret
0x00000200004048b8 : cmp ecx, 2 ; jb 0x2000040489e ; mov al, dl ; ret
0x00000200004048b8 : cmp ecx, 2 ; jb 0x2000040489f ; mov al, dl ; ret
0x00000200000de035 : cmp ecx, 3 ; jb 0x200000de032 ; or eax, 0xffffffff ; ret
0x00000200001d2913 : cmp ecx, 4 ; jne 0x200001d292d ; mov qword ptr [rcx], rdx ; ret
0x00000200004ac579 : cmp ecx, 4 ; jne 0x200004ac588 ; xor eax, eax ; ret
0x0000020000116ae4 : cmp ecx, 5 ; lea edx, dword ptr [rax + 0x1f] ; cmove eax, edx ; ret
0x00000200006bbe77 : cmp ecx, 7 ; jb 0x200006bbe69 ; add rsp, 0x28 ; ret
0x00000200001ad90a : cmp ecx, dword ptr [r8] ; jb 0x200001ad8f2 ; ret
0x00000200000c12ae : cmp ecx, dword ptr [rax + 0x2b] ; ret
0x0000020000544dc1 : cmp ecx, dword ptr [rax - 0x75] ; add cl, byte ptr [rax + 0x3b] ; ret 0x3974
0x00000200001be7b3 : cmp ecx, dword ptr [rax - 0x75] ; add eax, 0x13b095 ; call rax
0x00000200007a54db : cmp ecx, dword ptr [rax - 0x75] ; ret
0x000002000023f1cd : cmp ecx, dword ptr [rax - 0x77] ; or byte ptr [r9 - 0x7d], al ; jmp qword ptr [rax]
0x00000200007ae05f : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000236be4 : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4502
0x00000200005b5a45 : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4518
0x00000200001ad90b : cmp ecx, dword ptr [rax] ; jb 0x200001ad8f1 ; ret
0x00000200007bcaf9 : cmp ecx, dword ptr [rax] ; mov dh, 0xff ; ret
0x0000020000214d15 : cmp ecx, dword ptr [rcx + 0x3b] ; ret 0x1c77
0x0000020000214b67 : cmp ecx, dword ptr [rcx + 0x3b] ; ret 0x870f
0x0000020000025aae : cmp ecx, dword ptr [rcx + 0x63] ; ret
0x0000020000652eb2 : cmp ecx, dword ptr [rcx] ; sete al ; ret
0x0000020000009deb : cmp ecx, dword ptr [rdi] ; mov dh, 0x47 ; sbb byte ptr [rdx], bh ; ret 0x3674
0x000002000043f35d : cmp ecx, dword ptr [rdi] ; test eax, eax ; xchg byte ptr [rsi], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000706310 : cmp ecx, dword ptr [rdx + 0x14] ; jb 0x2000070631f ; xor eax, eax ; ret
0x000002000070630f : cmp ecx, dword ptr [rdx + 0x14] ; jb 0x20000706320 ; xor eax, eax ; ret
0x0000020000225ff3 : cmp ecx, dword ptr [rdx + rax*4 + 8] ; jne 0x20000225fe6 ; mov al, 1 ; ret
0x00000200004a6c8b : cmp ecx, dword ptr [rdx] ; jne 0x200004a6c94 ; ret
0x00000200004a6ca7 : cmp ecx, dword ptr [rdx] ; jne 0x200004a6cb0 ; ret
0x000002000008e0a1 : cmp ecx, dword ptr [rip + 0x31b171] ; sete al ; ret
0x000002000002ae57 : cmp ecx, dword ptr [rip + 0x3922c3] ; sete al ; ret
0x00000200000f89e7 : cmp ecx, eax ; cmovbe eax, ecx ; ret
0x000002000045224a : cmp ecx, eax ; cmovne eax, edx ; ret
0x000002000004e77c : cmp ecx, eax ; ja 0x2000004e78f ; mov eax, 1 ; ret
0x0000020000052b5f : cmp ecx, eax ; ja 0x20000052b6e ; sub rax, rcx ; ret
0x00000200001b699b : cmp ecx, eax ; ja 0x200001b69ae ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x000002000020fe52 : cmp ecx, eax ; ja 0x2000020fe65 ; mov qword ptr [rdx], rcx ; xor eax, eax ; ret
0x00000200003ff2e7 : cmp ecx, eax ; ja 0x200003ff2fa ; sbb eax, eax ; add eax, 2 ; ret
0x0000020000018b90 : cmp ecx, eax ; jae 0x20000018b9d ; xor eax, eax ; ret
0x00000200000bc4e0 : cmp ecx, eax ; jae 0x200000bc4ef ; or eax, 0xffffffff ; ret
0x00000200001e3936 : cmp ecx, eax ; jae 0x200001e3913 ; xor eax, eax ; ret
0x000002000020c015 : cmp ecx, eax ; jae 0x2000020c024 ; or eax, 0xffffffff ; ret
0x000002000021182b : cmp ecx, eax ; jae 0x20000211838 ; xor al, al ; ret
0x00000200007a02dc : cmp ecx, eax ; jae 0x200007a02ef ; mov eax, 1 ; ret
0x0000020000041703 : cmp ecx, eax ; jb 0x20000041714 ; add rsp, 0x38 ; ret
0x00000200000bea4a : cmp ecx, eax ; jb 0x200000bea57 ; xor eax, eax ; ret
0x00000200000cf650 : cmp ecx, eax ; jb 0x200000cf661 ; lea rax, qword ptr [rdx + r8] ; ret
0x000002000010b594 : cmp ecx, eax ; jb 0x2000010b5bd ; ret
0x000002000013b67b : cmp ecx, eax ; jb 0x2000013b66f ; mov rax, r10 ; ret
0x000002000013bcac : cmp ecx, eax ; jb 0x2000013bc99 ; mov rax, r10 ; ret
0x000002000013bcac : cmp ecx, eax ; jb 0x2000013bc9a ; mov rax, r10 ; ret
0x000002000041df7e : cmp ecx, eax ; jb 0x2000041df79 ; and eax, 0x1f ; ret
0x000002000021dd2f : cmp ecx, eax ; jbe 0x2000021dd42 ; and dword ptr [r8 + 0x28], 0 ; ret
0x0000020000625447 : cmp ecx, eax ; jbe 0x20000625454 ; xor eax, eax ; ret
0x00000200004e9ff7 : cmp ecx, eax ; je 0x200004e9ffc ; mov eax, 0xc000000d ; ret
0x000002000062c4e0 : cmp ecx, eax ; je 0x2000062c4f3 ; mov eax, 0xc0000001 ; ret
0x00000200006f3748 : cmp ecx, eax ; je 0x200006f3759 ; add rsp, 0x28 ; ret
0x0000020000210951 : cmp ecx, eax ; jle 0x20000210969 ; mov r9d, r11d ; mov r8d, edx ; jmp 0x20000210969
0x00000200000847dc : cmp ecx, eax ; jne 0x200000847ef ; mov eax, 1 ; ret
0x000002000019193a : cmp ecx, eax ; jne 0x20000191928 ; ret
0x00000200001d364c : cmp ecx, eax ; jne 0x200001d365f ; mov eax, 1 ; ret
0x0000020000211971 : cmp ecx, eax ; jne 0x20000211984 ; mov eax, 1 ; ret
0x000002000042ea95 : cmp ecx, eax ; jne 0x2000042eaa8 ; mov eax, edx ; jmp 0x2000042ea5b
0x000002000062c477 : cmp ecx, eax ; jne 0x2000062c4ed ; mov eax, 0x102 ; ret
0x0000020000658d10 : cmp ecx, eax ; jne 0x20000658d05 ; xor eax, eax ; ret
0x000002000077bae9 : cmp ecx, eax ; ret 0x48ff
0x000002000069e431 : cmp ecx, eax ; sbb eax, eax ; and eax, 0x46 ; ret
0x00000200005332af : cmp ecx, eax ; sbb eax, eax ; and eax, 0xc0000004 ; ret
0x000002000020c020 : cmp ecx, eax ; seta al ; ret
0x00000200003eaea8 : cmp ecx, ebx ; jb 0x200003eaebb ; jmp 0x200003eaec6
0x0000020000447f8e : cmp ecx, ebx ; jb 0x20000447f7a ; ret
0x000002000000b637 : cmp ecx, ebx ; jne 0x2000000b690 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000049fe2d : cmp ecx, ebx ; jne 0x2000049fe40 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000069d80b : cmp ecx, ecx ; jb 0x2000069d7f9 ; xor ecx, ecx ; mov rax, rcx ; ret
0x00000200006d65d3 : cmp ecx, ecx ; jne 0x200006d65ca ; mov eax, 0xc0000225 ; ret
0x000002000022fab2 : cmp ecx, ecx ; mov qword ptr [r10], rcx ; cmovne rax, r9 ; ret
0x0000020000135d6e : cmp ecx, edx ; cmovbe r9d, r11d ; mov al, r9b ; ret
0x0000020000684127 : cmp ecx, edx ; cmovne rax, rcx ; ret
0x00000200000b6e92 : cmp ecx, edx ; ja 0x200000b6e86 ; mov eax, 1 ; ret
0x000002000067b426 : cmp ecx, edx ; ja 0x2000067b433 ; mov al, 1 ; ret
0x000002000069e409 : cmp ecx, edx ; ja 0x2000069e41c ; mov eax, 0x32 ; ret
0x0000020000014940 : cmp ecx, edx ; jae 0x2000001494d ; xor eax, eax ; ret
0x00000200002184e1 : cmp ecx, edx ; jae 0x200002184a9 ; xor eax, eax ; ret
0x000002000014e927 : cmp ecx, edx ; jb 0x2000014e8e4 ; ret
0x00000200001e9a2d : cmp ecx, edx ; jb 0x200001e9a2b ; add rsp, 0x38 ; ret
0x000002000021f559 : cmp ecx, edx ; jb 0x2000021f549 ; xor eax, eax ; ret
0x00000200003fb24a : cmp ecx, edx ; jb 0x200003fb25c ; jmp 0x200003fb274
0x0000020000422fbf : cmp ecx, edx ; jb 0x20000422fb4 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000696e4b : cmp ecx, edx ; jb 0x20000696e22 ; mov al, 1 ; ret
0x00000200006bbbe6 : cmp ecx, edx ; jb 0x200006bbbdd ; ret
0x000002000070a2c5 : cmp ecx, edx ; jb 0x2000070a2be ; xor eax, eax ; ret
0x00000200007d5455 : cmp ecx, edx ; jb 0x200007d543a ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000149a6 : cmp ecx, edx ; jbe 0x2000001494d ; mov eax, 1 ; ret
0x0000020000087ba9 : cmp ecx, edx ; jbe 0x20000087ba9 ; xor eax, eax ; ret
0x00000200000b6e79 : cmp ecx, edx ; je 0x200000b6e86 ; xor eax, eax ; ret
0x00000200001fd864 : cmp ecx, edx ; je 0x200001fd84f ; shr eax, 0x18 ; ret
0x0000020000455ab5 : cmp ecx, edx ; je 0x20000455aba ; mov eax, 0xc0000718 ; ret
0x000002000024c44e : cmp ecx, edx ; jge 0x2000024c431 ; xor eax, eax ; ret
0x000002000024c456 : cmp ecx, edx ; jl 0x2000024c45b ; mov eax, 1 ; ret
0x0000020000448859 : cmp ecx, edx ; jl 0x2000044886b ; setle al ; inc eax ; ret
0x000002000002574e : cmp ecx, edx ; jne 0x2000002574b ; sub rax, rcx ; ret
0x000002000004b10a : cmp ecx, edx ; jne 0x2000004b11d ; xor eax, eax ; ret
0x00000200001de51e : cmp ecx, edx ; jne 0x200001de51b ; mov qword ptr [r8], rax ; ret
0x000002000042f62d : cmp ecx, edx ; jne 0x2000042f63f ; ret
0x000002000047a545 : cmp ecx, edx ; jne 0x2000047a539 ; add rsp, 0x28 ; ret
0x00000200004923c4 : cmp ecx, edx ; jne 0x200004923d1 ; mov al, 1 ; ret
0x00000200005fabad : cmp ecx, edx ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x000002000023a0c0 : cmp ecx, edx ; setb r8b ; mov eax, r8d ; ret
0x000002000009052e : cmp ecx, edx ; sete al ; ret
0x00000200001fd863 : cmp ecx, r10d ; je 0x200001fd850 ; shr eax, 0x18 ; ret
0x000002000014036d : cmp edi, 0xff ; jne 0x20000140338 ; jmp 0x20000140355
0x00000200000ddfdf : cmp edi, dword ptr [rax + rax*8] ; jb 0x200000ddfaa ; jmp 0x200000ddfd7
0x000002000070e661 : cmp edi, dword ptr [rdx - 0x41] ; push rsi ; ret 0x7410
0x000002000043f876 : cmp edi, dword ptr [rsi + 4] ; jmp 0x2000043f842
0x0000020000588b5e : cmp edi, dword ptr [rsp + rbx + 0xf] ; mov edx, 0xd7007f25 ; call qword ptr [rbx]
0x00000200003de81b : cmp edi, ebx ; jne 0x200003de7eb ; mov rcx, rbx ; call 0x2000040aa49
0x00000200004d0767 : cmp edi, ecx ; jb 0x200004d07cb ; inc edx ; jmp 0x200004d0717
0x000002000066b02d : cmp edx, 0x10 ; jb 0x2000066b02a ; xor al, al ; ret
0x000002000043a8fc : cmp edx, 0x45474150 ; je 0x2000043a90d ; ret
0x00000200000092e3 : cmp edx, 0x7fffffff ; ja 0x20000009308 ; ret
0x0000020000447d44 : cmp edx, 1 ; je 0x20000447d57 ; lea rax, qword ptr [rcx + 0x4c] ; ret
0x00000200004a91dc : cmp edx, 1 ; je 0x200004a91ef ; lea rax, qword ptr [rcx + 0x24] ; ret
0x00000200004a91f4 : cmp edx, 1 ; je 0x200004a9207 ; lea rax, qword ptr [rcx + 0x20] ; ret
0x000002000070f0fe : cmp edx, 1 ; je 0x2000070f10d ; xor eax, eax ; ret
0x0000020000705a4e : cmp edx, 1 ; setl al ; ret
0x00000200004e7cb2 : cmp edx, 2 ; jb 0x200004e7cae ; xor eax, eax ; ret
0x000002000013ab30 : cmp edx, 2 ; je 0x2000013ab3b ; ret
0x00000200005149b0 : cmp edx, 2 ; je 0x200005149bb ; ret
0x00000200005695c4 : cmp edx, 2 ; je 0x200005695cf ; ret
0x0000020000561880 : cmp edx, 2 ; je 0x200005fb255 ; ret
0x00000200000c5dfa : cmp edx, 2 ; sete al ; ret
0x000002000052fc94 : cmp edx, 3 ; je 0x2000052fc9f ; ret
0x000002000004fcd0 : cmp edx, 7 ; je 0x2000004fcdb ; ret
0x0000020000135678 : cmp edx, dword ptr [r8 + 0x40] ; jb 0x2000013565f ; ret
0x0000020000135677 : cmp edx, dword ptr [r8 + 0x40] ; jb 0x20000135660 ; ret
0x0000020000653c16 : cmp edx, dword ptr [r8] ; jb 0x20000653bfb ; xor eax, eax ; ret
0x0000020000135679 : cmp edx, dword ptr [rax + 0x40] ; jb 0x2000013565e ; ret
0x00000200000239ce : cmp edx, dword ptr [rax + rax] ; mov r8, r14 ; mov rcx, rbx ; call rax
0x0000020000165ec3 : cmp edx, dword ptr [rax - 0x74b30015] ; ret 0x8948
0x000002000071cb71 : cmp edx, dword ptr [rax - 1] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000653c17 : cmp edx, dword ptr [rax] ; jb 0x20000653bfa ; xor eax, eax ; ret
0x00000200001fe66d : cmp edx, dword ptr [rcx + 0x10] ; jbe 0x200001fe67f ; mov qword ptr [rcx + 0x10], rdx ; ret
0x00000200004a6518 : cmp edx, dword ptr [rcx + 0x258] ; ja 0x200004a6529 ; ret
0x000002000011099b : cmp edx, dword ptr [rcx + 0x434] ; sete al ; ret
0x00000200004ac55c : cmp edx, eax ; cmovb edx, eax ; mov eax, edx ; ret
0x0000020000097ed0 : cmp edx, eax ; cmove eax, dword ptr [rip + 0x3103ef] ; ret
0x0000020000087fac : cmp edx, eax ; cmove r10d, eax ; mov eax, r10d ; jmp 0x20000087fc4
0x0000020000050f6e : cmp edx, eax ; ja 0x20000050f62 ; ret
0x0000020000090e6c : cmp edx, eax ; ja 0x20000090e9b ; ret
0x00000200000ddbd3 : cmp edx, eax ; ja 0x200000ddbe1 ; sub rax, rdx ; ret
0x00000200000ddbd3 : cmp edx, eax ; ja 0x200000ddbe2 ; sub rax, rdx ; ret
0x0000020000213156 : cmp edx, eax ; ja 0x20000213165 ; sub r8d, r10d ; jmp 0x20000213170
0x0000020000050f5a : cmp edx, eax ; jae 0x20000050f6b ; add qword ptr [rcx + 0x78], r8 ; ret
0x0000020000188a11 : cmp edx, eax ; jae 0x20000188a24 ; mov eax, 0x21 ; ret
0x0000020000230ca4 : cmp edx, eax ; jae 0x20000230cd2 ; xor eax, eax ; ret
0x000002000079fe1e : cmp edx, eax ; jae 0x2000079fe31 ; or qword ptr [rcx + 0x18], 0xffffffffffffffff ; ret
0x0000020000008381 : cmp edx, eax ; jb 0x20000008379 ; ret
0x000002000002b133 : cmp edx, eax ; jb 0x2000002b12a ; xor eax, eax ; ret
0x000002000002f85d : cmp edx, eax ; jb 0x2000002f844 ; ret
0x00000200001bcafd : cmp edx, eax ; jb 0x200001bcaf7 ; xor eax, eax ; ret
0x00000200001bcb25 : cmp edx, eax ; jb 0x200001bcb1f ; xor eax, eax ; ret
0x000002000021323a : cmp edx, eax ; jb 0x20000213238 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000213ada : cmp edx, eax ; jb 0x20000213ad7 ; mov al, 1 ; ret
0x000002000043190b : cmp edx, eax ; jb 0x200004318fa ; mov dword ptr [rcx + 0x7c], r8d ; ret
0x00000200003ccddc : cmp edx, eax ; jbe 0x200003ccdd4 ; ret
0x00000200003cfeff : cmp edx, eax ; jbe 0x200003cfef6 ; add rsp, 0x28 ; ret
0x000002000049b9d3 : cmp edx, eax ; jbe 0x2000049b9dc ; ret
0x0000020000091e0e : cmp edx, eax ; je 0x20000091e6a ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x0000020000697169 : cmp edx, eax ; je 0x2000069717c ; mov eax, 0xc0000034 ; ret
0x00000200000e95cf : cmp edx, eax ; jl 0x200000e95dc ; mov al, 1 ; ret
0x0000020000230cc8 : cmp edx, eax ; jne 0x20000230cb1 ; mov eax, 1 ; ret
0x00000200004fd51e : cmp edx, eax ; jne 0x200004fd518 ; ret
0x000002000066fe83 : cmp edx, eax ; jne 0x2000066fe76 ; ret
0x00000200006bbfc6 : cmp edx, eax ; jne 0x200006bbfd8 ; xor eax, eax ; ret
0x000002000004b932 : cmp edx, eax ; mov r8, rax ; jne 0x2000004b95a ; ret
0x00000200005332e8 : cmp edx, eax ; sbb eax, eax ; and eax, 0xc0000004 ; ret
0x00000200000edc95 : cmp edx, eax ; seta r9b ; mov eax, r9d ; ret
0x0000020000687ff6 : cmp edx, eax ; setae al ; ret
0x00000200004522fb : cmp edx, ebp ; ljmp ptr [rax - 0x4b7af0f8] ; ret 0x15
0x00000200000482df : cmp edx, ebx ; jb 0x200000482bc ; xor eax, eax ; ret
0x000002000021311a : cmp edx, ebx ; jb 0x200002130ff ; ret
0x00000200000888e8 : cmp edx, ecx ; ja 0x200000888f1 ; ret
0x0000020000110f8e : cmp edx, ecx ; jae 0x20000110f9d ; or eax, 0xffffffff ; ret
0x0000020000604883 : cmp edx, ecx ; jae 0x20000604890 ; mov al, 1 ; ret
0x0000020000007030 : cmp edx, ecx ; jb 0x20000007026 ; mov eax, 0x10 ; ret
0x0000020000043971 : cmp edx, ecx ; jb 0x20000043965 ; xor eax, eax ; ret
0x0000020000046dd8 : cmp edx, ecx ; jb 0x20000046dbd ; ret
0x000002000043b6eb : cmp edx, ecx ; jb 0x2000043b6e2 ; mov byte ptr [r8], r10b ; ret
0x00000200004aa1f7 : cmp edx, ecx ; jb 0x200004aa200 ; ret
0x00000200007d24ee : cmp edx, ecx ; jb 0x200007d24d8 ; add rsp, 0x28 ; ret
0x0000020000032b59 : cmp edx, ecx ; jbe 0x20000032b6c ; mov eax, 1 ; ret
0x00000200000cf6b5 : cmp edx, ecx ; jbe 0x200000cf6c6 ; add rsp, 0x38 ; ret
0x0000020000137b72 : cmp edx, ecx ; jbe 0x20000137b6b ; mov dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x0000020000233a9f : cmp edx, ecx ; jbe 0x20000233ab2 ; mov eax, 1 ; ret
0x000002000011c54f : cmp edx, ecx ; je 0x2000011c545 ; mov eax, 0xc00000bb ; ret
0x0000020000716d4f : cmp edx, ecx ; je 0x20000716d5b ; xor eax, eax ; ret
0x00000200005098d7 : cmp edx, ecx ; jne 0x200005098cf ; lea eax, dword ptr [r8 + 0x48] ; ret
0x0000020000110f99 : cmp edx, ecx ; seta al ; ret
0x000002000002d081 : cmp edx, edx ; jb 0x2000002d06a ; xor eax, eax ; ret
0x0000020000201abd : cmp edx, edx ; jb 0x20000201aad ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000213b1d : cmp edx, edx ; jb 0x20000213af9 ; mov al, 1 ; ret
0x00000200006d1348 : cmp edx, edx ; jb 0x200006d1357 ; mov dword ptr [r8], edx ; ret
0x0000020000033fa8 : cmp edx, edx ; jne 0x20000033fbb ; add rsp, 0x30 ; pop rbx ; ret
0x000002000002d080 : cmp edx, r10d ; jb 0x2000002d06b ; xor eax, eax ; ret
0x00000200006d1347 : cmp edx, r10d ; jb 0x200006d1358 ; mov dword ptr [r8], edx ; ret
0x0000020000008380 : cmp edx, r8d ; jb 0x2000000837a ; ret
0x00000200001bcafc : cmp edx, r8d ; jb 0x200001bcaf8 ; xor eax, eax ; ret
0x00000200001bcb24 : cmp edx, r8d ; jb 0x200001bcb20 ; xor eax, eax ; ret
0x000002000043190a : cmp edx, r8d ; jb 0x200004318fb ; mov dword ptr [rcx + 0x7c], r8d ; ret
0x000002000049b9d2 : cmp edx, r8d ; jbe 0x2000049b9dd ; ret
0x0000020000043970 : cmp edx, r9d ; jb 0x20000043966 ; xor eax, eax ; ret
0x000002000004396f : cmp edx, r9d ; jb 0x20000043967 ; xor eax, eax ; ret
0x0000020000191195 : cmp esi, eax ; dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000002000019118d : cmp esi, eax ; dec dword ptr [rax - 1] ; ret 0x75e9
0x000002000019119e : cmp esi, eax ; dec dword ptr [rax - 1] ; ret 0x93e9
0x0000020000186ad8 : cmp esi, ebp ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000050c203 : cmp esi, edi ; fdivp st(7) ; xor edx, edx ; call 0x20000068458
0x00000200001bc07a : cmp esi, esi ; dec dword ptr [rax - 0x75] ; ret 0x4bf0
0x000002000060f88c : cmp esi, esi ; jb 0x2000060f855 ; jmp 0x2000060f898
0x000002000004d86d : cmp esi, esi ; ret
0x00000200003d7d6f : cmp esi, esi ; ret 0x7401
0x000002000060f88b : cmp esi, r14d ; jb 0x2000060f856 ; jmp 0x2000060f899
0x000002000060f88a : cmp esi, r14d ; jb 0x2000060f857 ; jmp 0x2000060f89a
0x0000020000166553 : cmp esp, 0x3000006 ; ret
0x00000200001d0f66 : cmp esp, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8189
0x00000200006479d1 : cmp esp, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x9ce9
0x00000200001d1483 : cmp esp, 0x8b000029 ; ret 0x16eb
0x00000200001d1335 : cmp esp, 0x8b000029 ; ret 0xb5eb
0x000002000066d5a4 : cmp esp, dword ptr [rsi + 3] ; ret
0x000002000061e3c3 : cmp esp, ebp ; ret 0xccff
0x000002000008f089 : cmp qword ptr [rax + 0x10], 0 ; jne 0x2000008f0be ; xor al, al ; ret
0x000002000010d3fe : cmp qword ptr [rax + 0x20], r8 ; jne 0x2000010d416 ; mov rax, rcx ; ret
0x0000020000454e0c : cmp qword ptr [rax + 8], 0 ; je 0x20000454e1f ; xor eax, eax ; ret
0x00000200007063ef : cmp qword ptr [rax], 0 ; jne 0x200007063e7 ; xor al, al ; ret
0x0000020000072955 : cmp qword ptr [rax], rax ; je 0x20000072952 ; mov al, 1 ; ret
0x00000200000fd653 : cmp qword ptr [rax], rax ; je 0x200000fd662 ; xor al, al ; ret
0x000002000001bea8 : cmp qword ptr [rax], rax ; jne 0x2000001bebb ; add rsp, 0x28 ; ret
0x0000020000043353 : cmp qword ptr [rax], rax ; jne 0x20000043361 ; xor eax, eax ; ret
0x00000200000e7270 : cmp qword ptr [rax], rax ; jne 0x200000e7283 ; add rsp, 0x28 ; ret
0x0000020000083c4d : cmp qword ptr [rax], rdx ; cmovne edx, r8d ; mov eax, edx ; ret
0x00000200000343d6 : cmp qword ptr [rax], rdx ; je 0x200000343f8 ; mov qword ptr [rax + 8], r8 ; ret
0x00000200006f40f1 : cmp qword ptr [rcx + 0x20], 0 ; je 0x200006f40f1 ; mov al, 1 ; ret
0x0000020000018c0f : cmp qword ptr [rcx + 0x20], r8 ; je 0x20000018c1c ; ret
0x00000200004b4d32 : cmp qword ptr [rcx + 0x20], rax ; sbb eax, eax ; add eax, 2 ; ret
0x0000020000432bac : cmp qword ptr [rcx + 0x30], r8 ; jne 0x20000432bbf ; ret
0x000002000001f9d4 : cmp qword ptr [rcx + 0x30], rax ; jne 0x2000001f9d0 ; mov al, 1 ; ret
0x00000200001ba29c : cmp qword ptr [rcx + 0x30], rax ; setne al ; ret
0x00000200000f432d : cmp qword ptr [rcx + 8], -1 ; jl 0x200000f4340 ; mov al, 1 ; ret
0x0000020000481adb : cmp qword ptr [rcx + 8], r8 ; je 0x20000481aec ; xor al, al ; ret
0x000002000000c378 : cmp qword ptr [rcx + 8], rax ; je 0x2000000c385 ; ret
0x00000200003ed407 : cmp qword ptr [rcx + 8], rax ; je 0x200003ed418 ; xor eax, eax ; ret
0x0000020000121c22 : cmp qword ptr [rcx], 0 ; jne 0x20000121c0a ; xor al, al ; ret
0x00000200007063a3 : cmp qword ptr [rcx], 0 ; jne 0x2000070639a ; xor al, al ; ret
0x000002000020beb2 : cmp qword ptr [rcx], 0 ; setne al ; ret
0x00000200001ba98a : cmp qword ptr [rcx], r8 ; jne 0x200001ba999 ; xor eax, eax ; ret
0x0000020000710daf : cmp qword ptr [rcx], rax ; jne 0x20000710dab ; ret
0x000002000000bb2a : cmp qword ptr [rcx], rax ; sete al ; ret
0x000002000000b720 : cmp qword ptr [rcx], rcx ; jne 0x2000000b738 ; mov rax, rcx ; ret
0x00000200000e4e67 : cmp qword ptr [rcx], rcx ; jne 0x200000e4e7a ; add rsp, 0x28 ; ret
0x00000200004148c8 : cmp qword ptr [rcx], rcx ; jne 0x200004148d3 ; ret
0x000002000049c458 : cmp qword ptr [rcx], rcx ; jne 0x2000049c463 ; ret
0x00000200005098b4 : cmp qword ptr [rcx], rcx ; jne 0x200005098c3 ; xor eax, eax ; ret
0x000002000003e156 : cmp qword ptr [rdx], rax ; jne 0x2000003e13a ; mov eax, r8d ; ret
0x0000020000213119 : cmp r10, r11 ; jb 0x20000213100 ; ret
0x000002000002f85c : cmp r10, r8 ; jb 0x2000002f845 ; ret
0x000002000070f79f : cmp r10b, 0x1b ; ja 0x2000070f7b4 ; movzx eax, r10b ; jmp 0x2000070f7c0
0x000002000070f86c : cmp r10b, 0x1b ; ja 0x2000070f881 ; movzx eax, r10b ; jmp 0x2000070f88d
0x000002000070f920 : cmp r10b, 0x1b ; ja 0x2000070f935 ; movzx eax, r10b ; jmp 0x2000070f941
0x000002000070f9c3 : cmp r10b, 0x1b ; ja 0x2000070f9d8 ; movzx eax, r10b ; jmp 0x2000070f9e4
0x0000020000604882 : cmp r10d, ecx ; jae 0x20000604891 ; mov al, 1 ; ret
0x00000200000482de : cmp r10d, r11d ; jb 0x200000482bd ; xor eax, eax ; ret
0x0000020000213155 : cmp r10d, r8d ; ja 0x20000213166 ; sub r8d, r10d ; jmp 0x20000213171
0x000002000020e766 : cmp r11, qword ptr [rcx] ; jb 0x2000020e775 ; xor eax, eax ; ret
0x000002000020e802 : cmp r11, qword ptr [rcx] ; jb 0x2000020e811 ; xor al, al ; ret
0x00000200004a91e8 : cmp r11b, al ; lea rax, qword ptr [rcx + 0x40] ; ret
0x0000020000009d75 : cmp r11b, bpl ; ret 0xc032
0x00000200001fd580 : cmp r11d, r9d ; ja 0x200001fd564 ; mov dword ptr [r10 + 4], r9d ; ret
0x00000200001bcd1e : cmp r11d, r9d ; seta al ; ret
0x000002000043f875 : cmp r15d, dword ptr [rsi + 4] ; jmp 0x2000043f843
0x00000200004d0766 : cmp r15d, r9d ; jb 0x200004d07cc ; inc edx ; jmp 0x200004d0718
0x000002000021198c : cmp r8, qword ptr [rcx + 0x20] ; jb 0x2000021199d ; xor al, al ; ret
0x0000020000664851 : cmp r8, qword ptr [rcx + 0x38] ; jb 0x20000664862 ; xor eax, eax ; ret
0x000002000013b2f4 : cmp r8, r10 ; jb 0x2000013b2e7 ; ret
0x00000200001e7c1e : cmp r8, r10 ; jbe 0x200001e7c7e ; mov r8, r10 ; jmp 0x200001e7c7e
0x0000020000050fa4 : cmp r8, r9 ; jbe 0x20000050f9a ; xor eax, eax ; ret
0x00000200004a6545 : cmp r8, rax ; ja 0x200004a6539 ; ret
0x0000020000213abd : cmp r8, rax ; jb 0x20000213ab8 ; mov al, 1 ; ret
0x000002000003a79c : cmp r8, rax ; jne 0x2000003a781 ; mov eax, r9d ; ret
0x0000020000099d79 : cmp r8, rax ; sbb rax, rax ; and rax, rcx ; ret
0x00000200001460fa : cmp r8, rcx ; jae 0x2000014610b ; or eax, 0xffffffff ; ret
0x00000200001e36c2 : cmp r8, rcx ; jae 0x200001e36d3 ; or eax, 0xffffffff ; ret
0x0000020000666eae : cmp r8, rcx ; jae 0x20000666ebf ; or eax, 0xffffffff ; ret
0x00000200007d177c : cmp r8, rcx ; jae 0x200007d178d ; or eax, 0xffffffff ; ret
0x000002000021f26c : cmp r8, rcx ; jne 0x2000021f25d ; ret
0x0000020000079f53 : cmp r8, rcx ; seta al ; ret
0x00000200000bdf14 : cmp r8, rdx ; ja 0x200000bdf1f ; ret
0x0000020000236203 : cmp r8, rdx ; jl 0x200002361ed ; ret
0x0000020000236202 : cmp r8, rdx ; jl 0x200002361ee ; ret
0x0000020000075185 : cmp r8, rdx ; jne 0x20000075180 ; sub rax, r8 ; ret
0x0000020000544dfd : cmp r8b, 0xf ; ja 0x20000544dca ; xor al, al ; ret
0x00000200007b32e3 : cmp r8b, cl ; jae 0x200007b32f4 ; or eax, 0xffffffff ; ret
0x0000020000091d86 : cmp r8b, cl ; jne 0x20000091d91 ; ret
0x00000200007b32ee : cmp r8b, cl ; seta al ; ret
0x00000200001c6051 : cmp r8b, dl ; jne 0x200001c60b3 ; mov r8b, dl ; jmp 0x200001c60a9
0x00000200004a898f : cmp r8b, r13b ; mov cl, ch ; ret
0x00000200004305be : cmp r8b, r13b ; mov ebx, 0x8bffc2f4 ; ret
0x000002000041b2de : cmp r8b, r13b ; pop rbx ; ret 0xffd3
0x000002000041b28f : cmp r8b, r13b ; stosb byte ptr [rdi], al ; ret 0xffd3
0x00000200004a7e71 : cmp r8b, r13b ; test al, 0xd8 ; ret
0x00000200004a8902 : cmp r8b, r13b ; xchg ebp, eax ; ret
0x00000200001e4b79 : cmp r8d, 0x32 ; jb 0x200001e4b56 ; xor eax, eax ; ret
0x00000200006cf1bd : cmp r8d, 0xa ; jb 0x200006cf1b7 ; ret
0x000002000020a19c : cmp r8d, 0xff ; jne 0x2000020a1ad ; xor eax, eax ; ret
0x00000200003cfba0 : cmp r8d, 1 ; jne 0x200003cfbad ; ret
0x0000020000049224 : cmp r8d, 2 ; jb 0x2000004920a ; or eax, 0xffffffff ; ret
0x00000200001d28c2 : cmp r8d, 4 ; je 0x200001d28d3 ; xor eax, eax ; ret
0x0000020000027c09 : cmp r8d, eax ; jne 0x20000027bd8 ; ret
0x00000200000fd618 : cmp r8d, eax ; jne 0x200000fd629 ; or eax, 0xffffffff ; ret
0x000002000002d071 : cmp r8d, ecx ; jae 0x2000002d082 ; mov rax, r9 ; ret
0x000002000021c479 : cmp r8d, ecx ; jae 0x2000021c48a ; or eax, 0xffffffff ; ret
0x00000200007b7c73 : cmp r8d, ecx ; jae 0x200007b7c84 ; or eax, 0xffffffff ; ret
0x0000020000026635 : cmp r8d, ecx ; jb 0x2000002661a ; ret
0x0000020000427b1a : cmp r8d, ecx ; jb 0x20000427b04 ; xor eax, eax ; ret
0x000002000048be93 : cmp r8d, ecx ; jb 0x2000048be34 ; ret
0x0000020000207bad : cmp r8d, ecx ; jbe 0x20000207bbe ; or eax, 0xffffffff ; ret
0x000002000049a77b : cmp r8d, ecx ; seta al ; ret
0x0000020000207bb8 : cmp r8d, ecx ; setb al ; ret
0x000002000021c484 : cmp r8d, ecx ; setne al ; ret
0x00000200001d24df : cmp r8d, edx ; jb 0x200001d24da ; mov al, 1 ; ret
0x00000200007a78a1 : cmp r8d, edx ; jb 0x200007a789b ; ret
0x00000200006bbf90 : cmp r8d, edx ; jmp 0x200006bbfca
0x000002000060e66a : cmp r8d, r10d ; jb 0x2000060e642 ; movzx eax, r8w ; ret
0x00000200001c8b5c : cmp r8d, r9d ; jae 0x200001c8b6b ; mov al, 1 ; ret
0x000002000043aaf9 : cmp r8d, r9d ; jb 0x2000043aae4 ; mov eax, edx ; ret
0x000002000043aaf9 : cmp r8d, r9d ; jb 0x2000043aae5 ; mov eax, edx ; ret
0x00000200006b1e1d : cmp r8d, r9d ; jb 0x200006b1de8 ; jmp 0x200006b1e2b
0x000002000022c7e9 : cmp r8d, r9d ; jl 0x2000022c7df ; xor eax, eax ; ret
0x00000200006c606a : cmp r8d, r9d ; seta al ; ret
0x00000200006c602e : cmp r8d, r9d ; setb al ; ret
0x000002000020bf1a : cmp r8d, r9d ; sete al ; ret
0x00000200006c6069 : cmp r8w, r9w ; seta al ; ret
0x00000200006c602d : cmp r8w, r9w ; setb al ; ret
0x000002000043e268 : cmp r9, 1 ; je 0x2000043e275 ; ret
0x00000200002184e0 : cmp r9, r10 ; jae 0x200002184aa ; xor eax, eax ; ret
0x000002000013b67a : cmp r9, r8 ; jb 0x2000013b670 ; mov rax, r10 ; ret
0x000002000013bcab : cmp r9, r8 ; jb 0x2000013bc9a ; mov rax, r10 ; ret
0x000002000013bcab : cmp r9, r8 ; jb 0x2000013bc9b ; mov rax, r10 ; ret
0x00000200005a5de2 : cmp r9b, bpl ; push rsi ; ret
0x00000200001cb0db : cmp r9d, 1 ; jne 0x200001cb0ec ; xor al, al ; ret
0x00000200004048b7 : cmp r9d, 2 ; jb 0x2000040489f ; mov al, dl ; ret
0x00000200004048b7 : cmp r9d, 2 ; jb 0x200004048a0 ; mov al, dl ; ret
0x00000200001d2912 : cmp r9d, 4 ; jne 0x200001d292e ; mov qword ptr [rcx], rdx ; ret
0x0000020000225ff2 : cmp r9d, dword ptr [rdx + rax*4 + 8] ; jne 0x20000225fe7 ; mov al, 1 ; ret
0x000002000010b593 : cmp r9d, eax ; jb 0x2000010b5be ; ret
0x00000200006f3747 : cmp r9d, eax ; je 0x200006f375a ; add rsp, 0x28 ; ret
0x00000200006bbbe5 : cmp r9d, edx ; jb 0x200006bbbde ; ret
0x00000200004923c3 : cmp r9d, edx ; jne 0x200004923d2 ; mov al, 1 ; ret
0x000002000070a2c4 : cmp r9d, r10d ; jb 0x2000070a2bf ; xor eax, eax ; ret
0x000002000024c44d : cmp r9d, r10d ; jge 0x2000024c432 ; xor eax, eax ; ret
0x0000020000447f8d : cmp r9d, r11d ; jb 0x20000447f7b ; ret
0x00000200007b1f77 : cmp rax, 0x100 ; jb 0x200007b1f34 ; ret
0x00000200006ce76b : cmp rax, 0x18 ; jb 0x200006ce766 ; or eax, 0xffffffff ; ret
0x000002000002e517 : cmp rax, 0x4d01002f ; mov eax, edx ; jmp 0x2000002e4ea
0x0000020000519e8e : cmp rax, 1 ; jbe 0x20000519ea0 ; xor ecx, ecx ; call rax
0x00000200000b68c9 : cmp rax, 1 ; je 0x200000b6878 ; xor eax, eax ; ret
0x00000200000eef00 : cmp rax, 1 ; jne 0x200000eef0d ; ret
0x000002000008eee0 : cmp rax, 2 ; jae 0x2000008eeed ; ret
0x0000020000179926 : cmp rax, qword ptr [r9 - 0x75] ; ret
0x00000200000ca322 : cmp rax, qword ptr [rcx + 0x18] ; jne 0x200000ca31a ; mov al, 1 ; ret
0x0000020000220c63 : cmp rax, qword ptr [rdx + 0x40] ; sbb eax, eax ; ret
0x00000200000d1bce : cmp rax, r10 ; jb 0x200000d1b9f ; ret
0x00000200000035c8 : cmp rax, r8 ; jae 0x200000035bc ; xor al, al ; ret
0x000002000006d2f1 : cmp rax, r8 ; jne 0x2000006d302 ; mov rax, r8 ; ret
0x000002000069b29b : cmp rax, r8 ; jne 0x2000069b27b ; xor eax, eax ; ret
0x000002000071a9f8 : cmp rax, r8 ; jne 0x2000071a9f6 ; xor eax, eax ; ret
0x0000020000100435 : cmp rax, r9 ; je 0x20000100440 ; ret
0x000002000020e88d : cmp rax, r9 ; sete al ; ret
0x0000020000211799 : cmp rax, rcx ; jae 0x20000211796 ; mov rax, rdx ; ret
0x0000020000211799 : cmp rax, rcx ; jae 0x20000211797 ; mov rax, rdx ; ret
0x000002000021c334 : cmp rax, rcx ; jb 0x2000021c333 ; xor eax, eax ; ret
0x000002000042f3f4 : cmp rax, rcx ; jb 0x2000042f40d ; add rsp, 0x28 ; ret
0x000002000061bf1a : cmp rax, rcx ; jb 0x2000061bf0c ; ret
0x000002000002be40 : cmp rax, rcx ; jbe 0x2000002be53 ; add rsp, 0x38 ; ret
0x00000200000273ba : cmp rax, rcx ; jne 0x200000273cb ; mov rax, r8 ; ret
0x000002000004e302 : cmp rax, rcx ; jne 0x2000004e311 ; xor eax, eax ; ret
0x00000200004e045a : cmp rax, rcx ; jne 0x200004e0469 ; xor eax, eax ; ret
0x000002000013c26e : cmp rax, rcx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000200000b92b7 : cmp rax, rdx ; jb 0x200000b92b9 ; add rsp, 0x28 ; ret
0x000002000013cf36 : cmp rax, rdx ; jb 0x2000013cf30 ; ret
0x000002000013d338 : cmp rax, rdx ; jb 0x2000013d330 ; ret
0x00000200006c67a0 : cmp rax, rdx ; jb 0x200006c6778 ; xor eax, eax ; ret
0x00000200000a0a4b : cmp rax, rdx ; jbe 0x200000a0a5a ; xor eax, eax ; ret
0x00000200001f4b9c : cmp rax, rdx ; je 0x200001f4bac ; add rax, rax ; ret
0x000002000022002c : cmp rax, rdx ; jl 0x20000220023 ; xor eax, eax ; ret
0x0000020000164576 : cmp rax, rdx ; jmp 0x200001645f6
0x00000200000f43a9 : cmp rbx, rax ; je 0x200000f4374 ; jmp 0x200000f4359
0x000002000065003b : cmp rbx, rax ; jne 0x20000650006 ; jmp 0x200006500af
0x000002000065003a : cmp rbx, rax ; jne 0x20000650007 ; jmp 0x200006500b0
0x000002000053471e : cmp rbx, rcx ; jne 0x2000053471d ; jmp 0x20000534732
0x00000200006a9c13 : cmp rbx, rdx ; jne 0x200006a9c12 ; jmp 0x200006a9c27
0x00000200007b4ff7 : cmp rcx, 0x40 ; jb 0x200007b4fe4 ; ret
0x00000200000092f5 : cmp rcx, 0x7ffffffe ; cmova eax, edx ; ret
0x00000200000f3725 : cmp rcx, 0xfd ; ja 0x200000f3718 ; mov al, 1 ; ret
0x000002000051f2d2 : cmp rcx, 0xff ; je 0x2000051f2e6 ; call 0x20000148079
0x00000200000b892d : cmp rcx, 1 ; je 0x200000b893e ; xor eax, eax ; ret
0x0000020000652eb1 : cmp rcx, qword ptr [rcx] ; sete al ; ret
0x00000200004a6c8a : cmp rcx, qword ptr [rdx] ; jne 0x200004a6c95 ; ret
0x00000200004a6ca6 : cmp rcx, qword ptr [rdx] ; jne 0x200004a6cb1 ; ret
0x0000020000696e4a : cmp rcx, r10 ; jb 0x20000696e23 ; mov al, 1 ; ret
0x0000020000452249 : cmp rcx, r8 ; cmovne eax, edx ; ret
0x000002000020c014 : cmp rcx, r8 ; jae 0x2000020c025 ; or eax, 0xffffffff ; ret
0x000002000041df7d : cmp rcx, r8 ; jb 0x2000041df7a ; and eax, 0x1f ; ret
0x000002000020c01f : cmp rcx, r8 ; seta al ; ret
0x00000200000f89e6 : cmp rcx, rax ; cmovbe eax, ecx ; ret
0x0000020000052b5e : cmp rcx, rax ; ja 0x20000052b6f ; sub rax, rcx ; ret
0x0000020000018b8f : cmp rcx, rax ; jae 0x20000018b9e ; xor eax, eax ; ret
0x00000200000bc4df : cmp rcx, rax ; jae 0x200000bc4f0 ; or eax, 0xffffffff ; ret
0x00000200001e3935 : cmp rcx, rax ; jae 0x200001e3914 ; xor eax, eax ; ret
0x0000020000041702 : cmp rcx, rax ; jb 0x20000041715 ; add rsp, 0x38 ; ret
0x00000200000bea49 : cmp rcx, rax ; jb 0x200000bea58 ; xor eax, eax ; ret
0x00000200000cf64f : cmp rcx, rax ; jb 0x200000cf662 ; lea rax, qword ptr [rdx + r8] ; ret
0x0000020000625446 : cmp rcx, rax ; jbe 0x20000625455 ; xor eax, eax ; ret
0x0000020000191939 : cmp rcx, rax ; jne 0x20000191929 ; ret
0x000002000042ea94 : cmp rcx, rax ; jne 0x2000042eaa9 ; mov eax, edx ; jmp 0x2000042ea5c
0x0000020000658d0f : cmp rcx, rax ; jne 0x20000658d06 ; xor eax, eax ; ret
0x000002000069e430 : cmp rcx, rax ; sbb eax, eax ; and eax, 0x46 ; ret
0x00000200003eaea7 : cmp rcx, rbx ; jb 0x200003eaebc ; jmp 0x200003eaec7
0x0000020000684126 : cmp rcx, rdx ; cmovne rax, rcx ; ret
0x000002000067b425 : cmp rcx, rdx ; ja 0x2000067b434 ; mov al, 1 ; ret
0x000002000001493f : cmp rcx, rdx ; jae 0x2000001494e ; xor eax, eax ; ret
0x000002000014e926 : cmp rcx, rdx ; jb 0x2000014e8e5 ; ret
0x00000200001e9a2c : cmp rcx, rdx ; jb 0x200001e9a2c ; add rsp, 0x38 ; ret
0x00000200003fb249 : cmp rcx, rdx ; jb 0x200003fb25d ; jmp 0x200003fb275
0x00000200000b6e78 : cmp rcx, rdx ; je 0x200000b6e87 ; xor eax, eax ; ret
0x000002000002574d : cmp rcx, rdx ; jne 0x2000002574c ; sub rax, rcx ; ret
0x00000200001de51d : cmp rcx, rdx ; jne 0x200001de51c ; mov qword ptr [r8], rax ; ret
0x000002000042f62c : cmp rcx, rdx ; jne 0x2000042f640 ; ret
0x000002000047a544 : cmp rcx, rdx ; jne 0x2000047a53a ; add rsp, 0x28 ; ret
0x000002000009052d : cmp rcx, rdx ; sete al ; ret
0x000002000014036c : cmp rdi, 0xff ; jne 0x20000140339 ; jmp 0x20000140356
0x00000200000ddfde : cmp rdi, qword ptr [r8 + rax*8] ; jb 0x200000ddfab ; jmp 0x200000ddfd8
0x00000200000092e2 : cmp rdx, 0x7fffffff ; ja 0x20000009309 ; ret
0x00000200004a6517 : cmp rdx, qword ptr [rcx + 0x258] ; ja 0x200004a652a ; ret
0x0000020000213b1c : cmp rdx, r10 ; jb 0x20000213afa ; mov al, 1 ; ret
0x0000020000087fab : cmp rdx, r8 ; cmove r10d, eax ; mov eax, r10d ; jmp 0x20000087fc5
0x0000020000230ca3 : cmp rdx, r8 ; jae 0x20000230cd3 ; xor eax, eax ; ret
0x00000200003ccddb : cmp rdx, r8 ; jbe 0x200003ccdd5 ; ret
0x00000200003cfefe : cmp rdx, r8 ; jbe 0x200003cfef7 ; add rsp, 0x28 ; ret
0x00000200004fd51d : cmp rdx, r8 ; jne 0x200004fd519 ; ret
0x000002000066fe82 : cmp rdx, r8 ; jne 0x2000066fe77 ; ret
0x000002000043b6ea : cmp rdx, r9 ; jb 0x2000043b6e3 ; mov byte ptr [r8], r10b ; ret
0x00000200000cf6b4 : cmp rdx, r9 ; jbe 0x200000cf6c7 ; add rsp, 0x38 ; ret
0x0000020000050f6d : cmp rdx, rax ; ja 0x20000050f63 ; ret
0x0000020000090e6b : cmp rdx, rax ; ja 0x20000090e9c ; ret
0x00000200000ddbd2 : cmp rdx, rax ; ja 0x200000ddbe2 ; sub rax, rdx ; ret
0x00000200000ddbd2 : cmp rdx, rax ; ja 0x200000ddbe3 ; sub rax, rdx ; ret
0x0000020000050f59 : cmp rdx, rax ; jae 0x20000050f6c ; add qword ptr [rcx + 0x78], r8 ; ret
0x000002000002b132 : cmp rdx, rax ; jb 0x2000002b12b ; xor eax, eax ; ret
0x0000020000213ad9 : cmp rdx, rax ; jb 0x20000213ad8 ; mov al, 1 ; ret
0x000002000004b931 : cmp rdx, rax ; mov r8, rax ; jne 0x2000004b95b ; ret
0x0000020000687ff5 : cmp rdx, rax ; setae al ; ret
0x0000020000110f8d : cmp rdx, rcx ; jae 0x20000110f9e ; or eax, 0xffffffff ; ret
0x0000020000046dd7 : cmp rdx, rcx ; jb 0x20000046dbe ; ret
0x00000200004aa1f6 : cmp rdx, rcx ; jb 0x200004aa201 ; ret
0x00000200005098d6 : cmp rdx, rcx ; jne 0x200005098d0 ; lea eax, dword ptr [r8 + 0x48] ; ret
0x0000020000110f98 : cmp rdx, rcx ; seta al ; ret
0x000002000006e66c : cmp sil, r14b ; ret
0x000002000003b040 : cmp word ptr [r8], r10w ; jne 0x2000003b051 ; xor eax, eax ; ret
0x000002000013c0fb : cmp word ptr [rbx + rax*2], bp ; cmove edx, ecx ; movsxd rax, edx ; jmp 0x2000013c120
0x0000020000408da4 : cmp word ptr [rcx + 0x3a], 0 ; jne 0x20000408db7 ; xor eax, eax ; ret
0x0000020000132718 : cmp word ptr [rcx + 2], ax ; jb 0x20000132729 ; mov al, 1 ; ret
0x00000200006cddd8 : cmp word ptr [rcx + rax*2], 0x20 ; mov dword ptr [rdx], eax ; jne 0x200006cddb2 ; ret
0x000002000013bd30 : cmp word ptr [rdx], 0 ; jne 0x2000013bd1e ; mov rax, rcx ; ret
0x000002000013d3c1 : cmp word ptr [rdx], r11w ; jne 0x2000013d3d4 ; mov rax, rcx ; ret
0x00000200000a8884 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000605b69 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; ret 0xd285
0x000002000049b926 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x00000200004224f3 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; test dword ptr [rbx], edi ; ret
0x0000020000149365 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add cl, ch ; ror ah, cl ; add byte ptr [rax], al ; ret
0x0000020000523a6b : cmpsb byte ptr [rsi], byte ptr [rdi] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006f54e6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; call qword ptr [rax - 0x213d17]
0x00000200005f8e6d : cmpsb byte ptr [rsi], byte ptr [rdi] ; call qword ptr [rax - 0x9c73d17]
0x00000200005e7efa : cmpsb byte ptr [rsi], byte ptr [rdi] ; call qword ptr [rax - 0xeb53d17]
0x00000200003cf5e6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; ret
0x00000200005e7ef9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call qword ptr [rax - 0xeb53d17]
0x00000200005e53ed : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call qword ptr [rax - 0xf163d17]
0x0000020000593be1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0x8598
0x00000200006829cf : cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000684ee6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200005ff485 : cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rbx - 0x74cfdba4] ; ret
0x000002000042ec8b : cmpsb byte ptr [rsi], byte ptr [rdi] ; idiv edi ; call r10
0x000002000017dd42 : cmpsb byte ptr [rsi], byte ptr [rdi] ; in al, dx ; inc dword ptr [rcx - 0xa] ; ret
0x000002000059cd01 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jmp rdi
0x00000200007b85c8 : cmpsb byte ptr [rsi], byte ptr [rdi] ; mov dh, 0xff ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000024da85 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000020000212997 : cmpsb byte ptr [rsi], byte ptr [rdi] ; out 0xff, al ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000684e7e : cmpsb byte ptr [rsi], byte ptr [rdi] ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x000002000061c3c7 : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rsi ; ret
0x0000020000197928 : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rsp ; int1 ; inc dword ptr [rbp - 0x75] ; ret
0x000002000041e6b6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000200004511e1 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x48ff
0x0000020000431b75 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x4cff
0x000002000051da69 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x85ff
0x000002000051d9db : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x8bff
0x00000200004bd968 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xbaff
0x0000020000484dca : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffbc
0x00000200007acf52 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffbf
0x0000020000106180 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 6
0x00000200003fff29 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sar bh, 0x8b ; ret
0x0000020000175623 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; dec dword ptr [rax + 0x2b] ; ret 0x8948
0x00000200000f82fa : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; sub al, byte ptr [rax] ; ret
0x0000020000460306 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xchg eax, esp ; sar bh, 0x8b ; ret
0x00000200005e7ef8 : cmpsb byte ptr fs:[rsi], byte ptr [rdi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call qword ptr [rax - 0xeb53d17]
0x00000200004bc086 : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004bc06a : cmpsd dword ptr [rsi], dword ptr [rdi] ; adc dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200000ca9cd : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000016ba7a : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x0000020000149385 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add cl, ch ; mov dl, 0xcc ; add byte ptr [rax], al ; ret
0x000002000014b385 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xac ; add byte ptr [rax], al ; ret
0x0000020000694fb1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; add bh, bh ; ret
0x000002000013dfba : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x3308
0x00000200000841b3 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; shl edx, 9 ; or eax, edx ; jmp 0x200000841b2
0x000002000067109c : cmpsd dword ptr [rsi], dword ptr [rdi] ; and ecx, ecx ; inc dword ptr [rax + rbp*8] ; ret 0xb90f
0x000002000058fb4f : cmpsd dword ptr [rsi], dword ptr [rdi] ; call 0x200001b500c
0x00000200005915f7 : cmpsd dword ptr [rsi], dword ptr [rdi] ; call qword ptr [rax - 0x18420717]
0x00000200005e53ee : cmpsd dword ptr [rsi], dword ptr [rdi] ; call qword ptr [rax - 0xf163d17]
0x00000200006d6c22 : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax + 0x3b] ; ret
0x00000200007d1674 : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x75] ; pop rsp ; and al, 0x40 ; jmp 0x200007d1648
0x00000200006b71e1 : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000480e57 : cmpsd dword ptr [rsi], dword ptr [rdi] ; imul edx, dword ptr [rax + rax], -0x75 ; pop rsp ; ret 0x4804
0x00000200001758be : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov al, 0xf9 ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000558830 : cmpsd dword ptr [rsi], dword ptr [rdi] ; movdqu xmmword ptr [rbp - 0x31], xmm0 ; call 0x200004a4a80
0x00000200000aff44 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, byte ptr [rax] ; add dh, dh ; ret 0xf04
0x00000200006b8b95 : cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, eax ; ret
0x00000200000de493 : cmpsd dword ptr [rsi], dword ptr [rdi] ; pop rdi ; or al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007d4551 : cmpsd dword ptr [rsi], dword ptr [rdi] ; push qword ptr [rbx] ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200005c8311 : cmpsd dword ptr [rsi], dword ptr [rdi] ; push qword ptr [rdx] ; ret
0x0000020000482c5c : cmpsd dword ptr [rsi], dword ptr [rdi] ; pushfq ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000010619c : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000200003c8e95 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0
0x0000020000239a6a : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x11
0x000002000062329a : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x41ff
0x00000200005104ac : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x48ff
0x00000200004bd673 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x49ff
0x000002000052cda2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x66ff
0x0000020000454df2 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x83ff
0x00000200004c4811 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xbbff
0x00000200004bd61f : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xe9ff
0x00000200004bd62c : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xebff
0x00000200006b5b15 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xff9a
0x0000020000106238 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 6
0x00000200006328c8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar edi, -0x75 ; ret
0x000002000013965f : cmpsd dword ptr [rsi], dword ptr [rdi] ; sbb eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000172ea8 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; inc dword ptr [rcx - 0x75] ; ret
0x00000200003db055 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor cl, 0xff ; add rsp, 0x28 ; ret
0x00000200003ed652 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor edx, edx ; call qword ptr [rdi]
0x000002000058fb4e : cmpsq qword ptr [rsi], qword ptr [rdi] ; call 0x200001b500d
0x000002000055882f : cmpsq qword ptr [rsi], qword ptr [rdi] ; movdqu xmmword ptr [rbp - 0x31], xmm0 ; call 0x200004a4a81
0x00000200003ed651 : cmpsq qword ptr [rsi], qword ptr [rdi] ; xor edx, edx ; call qword ptr [rdi]
0x0000020000681920 : cmpxchg byte ptr [rcx], al ; ret
0x0000020000044450 : cmpxchg dword ptr [r9 + 0x320], ecx ; ret
0x000002000007706f : cmpxchg dword ptr [rax], ecx ; jne 0x20000077081 ; mov al, 1 ; ret
0x000002000007e044 : cmpxchg dword ptr [rax], ecx ; jne 0x2000007e02c ; mov dl, 1 ; mov al, dl ; ret
0x00000200000f7aad : cmpxchg dword ptr [rax], edx ; jne 0x200000f7a9e ; add rsp, 0x28 ; ret
0x000002000016246d : cmpxchg dword ptr [rbx + 0x190], ecx ; jmp 0x2000000e6e3
0x0000020000445791 : cmpxchg dword ptr [rcx + 0x1c8], ecx ; ret
0x0000020000027c05 : cmpxchg dword ptr [rcx + 0x30], edx ; cmp r8d, eax ; jne 0x20000027bdc ; ret
0x0000020000044451 : cmpxchg dword ptr [rcx + 0x320], ecx ; ret
0x00000200001bc082 : cmpxchg dword ptr [rcx + rax*8], ecx ; ret
0x00000200000478cb : cmpxchg dword ptr [rcx], eax ; jne 0x200000478ac ; ret
0x000002000006994f : cmpxchg dword ptr [rcx], eax ; jne 0x20000069971 ; add rsp, 0x28 ; ret
0x00000200000bf6ff : cmpxchg dword ptr [rcx], eax ; jne 0x200000bf712 ; add rsp, 0x28 ; ret
0x0000020000046cd2 : cmpxchg dword ptr [rcx], ecx ; jne 0x20000046cd1 ; add rsp, 0x28 ; ret
0x0000020000055c6f : cmpxchg dword ptr [rcx], ecx ; jne 0x20000055c7a ; ret
0x000002000007e8f1 : cmpxchg dword ptr [rcx], ecx ; jne 0x2000007e904 ; add rsp, 0x28 ; ret
0x000002000008eedd : cmpxchg dword ptr [rcx], edx ; cmp rax, 2 ; jae 0x2000008eef0 ; ret
0x000002000000e45f : cmpxchg dword ptr [rcx], edx ; jne 0x2000000e45e ; ret
0x0000020000010180 : cmpxchg dword ptr [rcx], edx ; jne 0x2000001018e ; ret
0x0000020000056c4a : cmpxchg dword ptr [rcx], edx ; jne 0x20000056c5d ; add rsp, 0x28 ; ret
0x0000020000077094 : cmpxchg dword ptr [rcx], edx ; jne 0x200000770a3 ; mov al, 1 ; ret
0x000002000007ced7 : cmpxchg dword ptr [rcx], edx ; jne 0x2000007cee2 ; ret
0x00000200000e99d4 : cmpxchg dword ptr [rcx], edx ; jne 0x200000e99e7 ; add rsp, 0x28 ; ret
0x00000200000ed050 : cmpxchg dword ptr [rcx], edx ; jne 0x200000ed062 ; mov al, 1 ; ret
0x00000200001f01c7 : cmpxchg dword ptr [rcx], edx ; jne 0x200001f01d6 ; xor eax, eax ; ret
0x000002000042b03b : cmpxchg dword ptr [rcx], edx ; jne 0x2000042b046 ; ret
0x0000020000228476 : cmpxchg dword ptr [rcx], edx ; ret
0x000002000061b22d : cmpxchg dword ptr [rdx + 0x10], ecx ; jne 0x2000061b22b ; mov al, r8b ; ret
0x000002000061b6c8 : cmpxchg dword ptr [rdx + 0x10], ecx ; jne 0x2000061b6c2 ; ret
0x000002000001f980 : cmpxchg dword ptr [rdx], ecx ; jne 0x2000001f977 ; add rsp, 0x28 ; ret
0x0000020000229c59 : cmpxchg dword ptr [rdx], ecx ; sete cl ; movzx eax, cl ; ret
0x000002000007706e : cmpxchg qword ptr [r8], rcx ; jne 0x20000077082 ; mov al, 1 ; ret
0x00000200001bc081 : cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x0000020000055c6e : cmpxchg qword ptr [r9], rcx ; jne 0x20000055c7b ; ret
0x0000020000445790 : cmpxchg qword ptr [rcx + 0x1c8], r9 ; ret
0x00000200000478ca : cmpxchg qword ptr [rcx], r8 ; jne 0x200000478ad ; ret
0x000002000000e45e : cmpxchg qword ptr [rcx], rdx ; jne 0x2000000e45f ; ret
0x000002000001017f : cmpxchg qword ptr [rcx], rdx ; jne 0x2000001018f ; ret
0x0000020000077093 : cmpxchg qword ptr [rcx], rdx ; jne 0x200000770a4 ; mov al, 1 ; ret
0x000002000007ced6 : cmpxchg qword ptr [rcx], rdx ; jne 0x2000007cee3 ; ret
0x00000200000ed04f : cmpxchg qword ptr [rcx], rdx ; jne 0x200000ed063 ; mov al, 1 ; ret
0x00000200001f01c6 : cmpxchg qword ptr [rcx], rdx ; jne 0x200001f01d7 ; xor eax, eax ; ret
0x000002000042b03a : cmpxchg qword ptr [rcx], rdx ; jne 0x2000042b047 ; ret
0x0000020000228475 : cmpxchg qword ptr [rcx], rdx ; ret
0x000002000061b6c7 : cmpxchg qword ptr [rdx + 0x10], rcx ; jne 0x2000061b6c3 ; ret
0x0000020000151318 : cmpxchg16b xmmword ptr [r11] ; jne 0x20000151309 ; mov rax, r10 ; pop rbx ; ret
0x0000020000151319 : cmpxchg8b qword ptr [rbx] ; jne 0x20000151308 ; mov rax, r10 ; pop rbx ; ret
0x0000020000151319 : cmpxchg8b qword ptr [rbx] ; jne 0x2000015130a ; mov rax, r10 ; pop rbx ; ret
0x0000020000151262 : cmpxchg8b qword ptr [rdx] ; jne 0x20000151250 ; mov rax, r8 ; pop rbx ; ret
0x00000200001512a7 : cmpxchg8b qword ptr [rdx] ; jne 0x2000015129d ; mov rax, r8 ; pop rbx ; ret
0x0000020000117b71 : cqo ; idiv rcx ; ret
0x0000020000147b8b : cvtpi2ps xmm0, mm1 ; ret
0x0000020000147b86 : cvtps2pi mm1, xmm0 ; cvtsi2sd xmm0, rcx ; ret
0x0000020000147b89 : cvtsi2sd xmm0, rcx ; ret
0x000002000004530f : cvttps2pi mm0, qword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000078986c : cwde ; adc al, byte ptr [rax] ; add byte ptr [rbx], dh ; leave ; call 0x200000c5b30
0x000002000077ab56 : cwde ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000009fd3c : cwde ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x0000020000065fc1 : cwde ; add al, 0 ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x0000020000095d26 : cwde ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200000972be : cwde ; add al, byte ptr [rax] ; add cl, ch ; ret 0xfffe
0x0000020000678007 : cwde ; add byte ptr [rax + 0x3b], cl ; ret 0x1076
0x000002000044ac11 : cwde ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x00000200001f5265 : cwde ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001bc5c2 : cwde ; add byte ptr [rax], ah ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000448415 : cwde ; add byte ptr [rax], al ; add al, ch ; and bh, al ; ret 0xc6ff
0x00000200004484a5 : cwde ; add byte ptr [rax], al ; add al, ch ; clc ; ret 0xe9ff
0x00000200005bb9a6 : cwde ; add byte ptr [rax], al ; add al, ch ; int1 ; ret
0x00000200000e7184 : cwde ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200003e3165 : cwde ; add byte ptr [rax], al ; add al, ch ; ret 0xf1d
0x00000200006ca238 : cwde ; add byte ptr [rax], al ; add al, ch ; ret 0xffff
0x000002000009401e : cwde ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000006cfa2 : cwde ; add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000200000b2056 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x31], cl ; add dword ptr [rbp + 0x3b], ecx ; ret
0x00000200003e7e95 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x2a73
0x00000200004e3bc9 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x00000200001a6066 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000200005a2408 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp dh, dh ; ret
0x00000200004ff670 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001c45bb : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001c45cf ; call rcx
0x0000020000476e1b : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4410
0x0000020000418c4c : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200006b4c09 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000020000476eaa : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x00000200003c64b8 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x00000200000b43aa : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], cl ; ret
0x000002000002cacd : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x00000200001dca24 : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000200004dbedc : cwde ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x9489
0x0000020000003024 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rbx ; ret
0x00000200007788dd : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x000002000018a178 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xa2e9
0x00000200005f0967 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7cb7efbe], cl ; ret 0xff14
0x00000200006961e5 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x000002000055b0df : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000200003e53ec : cwde ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x00000200001aeafd : cwde ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200000f2fb1 : cwde ; add byte ptr [rax], al ; add byte ptr [rsi + 0x5d], bl ; ret
0x00000200005e20f2 : cwde ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000066a504 : cwde ; add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0x000002000009ce9d : cwde ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x0000020000176b0a : cwde ; add byte ptr [rcx + 3], cl ; xor byte ptr [rax + 0x3b], cl ; ret
0x000002000003a490 : cwde ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004ff796 : cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 0x47], cl ; ret
0x000002000023f2aa : cwde ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000024ad3f : cwde ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x000002000014b1a5 : cwde ; add dword ptr [rax], eax ; add cl, ch ; xchg eax, edx ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000077df9d : cwde ; add eax, 0x33480000 ; ret 0xd233
0x00000200004cbf12 : cwde ; add eax, dword ptr [rax] ; add al, ch ; in eax, 0x43 ; ret 0x4cff
0x00000200004cca6f : cwde ; add eax, dword ptr [rax] ; add al, ch ; mov byte ptr [rax], bh ; ret 0x48ff
0x0000020000122cde : cwde ; add rax, rbx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000021072d : cwde ; add rax, rdi ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001573ed : cwde ; add rsp, 0x68 ; ret
0x000002000071ad84 : cwde ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x8b7f7bd], cl ; ret 0xfffc
0x000002000069c6a0 : cwde ; call 0x20000148933
0x000002000069c69f : cwde ; call 0x20000148934
0x000002000013161e : cwde ; call 0x200004fd883
0x0000020000413d70 : cwde ; call qword ptr [rdi]
0x00000200007d16ed : cwde ; dec dword ptr [rax - 0x75] ; ret
0x0000020000224e58 : cwde ; fcomp dword ptr [rdi] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000021eb69 : cwde ; in al, -1 ; add rsp, 0x38 ; ret
0x00000200007b627a : cwde ; inc dword ptr [rbx] ; ret
0x00000200007d47ce : cwde ; lea rcx, qword ptr [rbp - 0x78] ; call 0x2000040286c
0x0000020000039c6e : cwde ; lock add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006013f5 : cwde ; mov bl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x000002000060138e : cwde ; mov bl, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x00000200006359a5 : cwde ; mov edx, dword ptr [rax + 0x10] ; call qword ptr [rip - 0x3dea9f]
0x00000200007853db : cwde ; or al, 0 ; add byte ptr [rcx + 0xf], al ; ret
0x000002000011ed41 : cwde ; or rax, r9 ; or rax, rcx ; ret
0x000002000018e0ae : cwde ; out dx, eax ; dec dword ptr [rbp - 0x75] ; ret 0xd1e9
0x0000020000100447 : cwde ; pop rax ; add byte ptr [rax], al ; ret
0x0000020000617d64 : cwde ; push rdx ; ret
0x00000200007ccde9 : cwde ; push rsi ; ret
0x0000020000024ed8 : cwde ; ret
0x00000200007d88e0 : cwde ; ret 0x407d
0x00000200007a8cf6 : cwde ; ret 0x41ff
0x000002000046494a : cwde ; ret 0x89ff
0x000002000051ed2d : cwde ; ret 0x8bff
0x00000200004747d4 : cwde ; ret 0xf0ff
0x000002000057bdc4 : cwde ; ret 0xffb6
0x00000200006767b4 : cwde ; ret 0xffc8
0x000002000043f8d8 : cwde ; ret 0xffcf
0x00000200007b6e94 : cwde ; ret 0xffda
0x00000200001a94d4 : cwde ; ret 0xffe7
0x0000020000196968 : cwde ; ret 0xffe9
0x0000020000405dd4 : cwde ; ret 0xffee
0x00000200000a6ab4 : cwde ; sbb byte ptr [rax], dh ; add byte ptr [rax - 9], cl ; ror byte ptr [rax + 0x23], 1 ; ret 0x2348
0x00000200007cd120 : cwde ; stosb byte ptr [rdi], al ; ret 0x8bff
0x00000200001d1ad4 : cwde ; xchg eax, ecx ; idiv bh ; add rsp, 0x70 ; pop rbx ; ret
0x000002000069ccda : cwde ; xchg eax, esi ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000460913 : cwde ; xor edx, edx ; call 0x2000024d009
0x00000200005bd140 : dec al ; dec dword ptr [rax - 0x75] ; xor r9b, r13b ; pop rcx ; ret 0xffe9
0x0000020000420d0b : dec byte ptr [r8 - 1] ; ret 0x8d48
0x00000200000b98d7 : dec byte ptr [rax + 0x21] ; sub byte ptr [r8 - 0x80], al ; call qword ptr [rcx]
0x000002000068ca44 : dec byte ptr [rax + 0x63] ; ret 0x8d4e
0x000002000043fa1d : dec byte ptr [rax + 0xf] ; ret
0x00000200005a864f : dec byte ptr [rax + 3] ; ret
0x00000200002441cc : dec byte ptr [rax - 0x2d] ; ret 0x8341
0x00000200001f3183 : dec byte ptr [rax - 0x3f] ; call qword ptr [rax]
0x000002000005022d : dec byte ptr [rax - 0x75] ; ret
0x00000200007a343d : dec byte ptr [rax - 0x75] ; ret 0x8b44
0x00000200001de612 : dec byte ptr [rax - 0x75] ; ret 0xf41
0x00000200004acc95 : dec byte ptr [rax - 0x75] ; retf ; cmovb r14, rdi ; jmp 0x200004acc6b
0x00000200005695ff : dec byte ptr [rax - 0x75] ; rol ebx, 0x48 ; lea eax, dword ptr [rcx + 8] ; ret
0x0000020000230271 : dec byte ptr [rax - 0x7b] ; leave ; je 0x20000230283 ; add dword ptr [rcx], r11d ; ret
0x000002000078e165 : dec byte ptr [rax - 0x7d] ; ret
0x0000020000024e8e : dec byte ptr [rax - 0x7d] ; ret 0xe858
0x0000020000420d0c : dec byte ptr [rax - 1] ; ret 0x8d48
0x000002000077e051 : dec byte ptr [rbp + 3] ; ret 0x894c
0x000002000077db46 : dec byte ptr [rbp + 3] ; ret 0xbe48
0x00000200001db9e5 : dec byte ptr [rbp] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000068cae0 : dec byte ptr [rcx + 0x3b] ; ret 0x8f0f
0x00000200003fae1a : dec byte ptr [rcx - 0x14cfdb84] ; sbb ch, al ; ret
0x000002000018c4fe : dec byte ptr [rcx - 0x74bef68c] ; ret
0x000002000070375d : dec byte ptr [rcx - 0x75] ; ret 0x894d
0x00000200005594b2 : dec byte ptr [rdi] ; test dword ptr [rcx], ebp ; out 9, eax ; add al, ch ; ret 0xfa43
0x0000020000482812 : dec byte ptr [rdi] ; xchg eax, esp ; ror dword ptr [rdi], -0x4a ; ret
0x000002000018c62f : dec byte ptr [rdx - 0x74bef68c] ; ret
0x000002000021c2c4 : dec cl ; mov byte ptr [rax + r8], cl ; ret
0x000002000044404d : dec dword ptr [ecx - 0x77] ; call 0x1ffc3134948
0x0000020000004152 : dec dword ptr [r15] ; ret
0x00000200001bc553 : dec dword ptr [r8 + 0x33] ; ret
0x0000020000412556 : dec dword ptr [r8 + 0x3b] ; ret
0x000002000000ae56 : dec dword ptr [r8 + 3] ; ret 0x3b48
0x0000020000661778 : dec dword ptr [r8 - 0x7b] ; ret 0xdb75
0x00000200005c5fc5 : dec dword ptr [r8 - 0x7d] ; ret 0x4810
0x00000200006d7e0c : dec dword ptr [r8 - 1] ; ret 0x8948
0x0000020000043ee9 : dec dword ptr [r8] ; ret
0x00000200000b1735 : dec dword ptr [r9 + 0x3b] ; ret
0x000002000017e666 : dec dword ptr [r9 + 3] ; ret 0x2349
0x00000200000169cc : dec dword ptr [r9 + 3] ; ret 0x349
0x000002000001be4a : dec dword ptr [rax + 0x1e4] ; ret
0x000002000001d4fa : dec dword ptr [rax + 0x1e6] ; ret
0x00000200001ead96 : dec dword ptr [rax + 0x1f08] ; ret
0x00000200001997fc : dec dword ptr [rax + 0x23] ; ret
0x00000200000d4f2d : dec dword ptr [rax + 0x23] ; ret 0x8348
0x000002000018e5dc : dec dword ptr [rax + 0x23] ; ret 0xb48
0x000002000079f74c : dec dword ptr [rax + 0x23] ; ret 0xb949
0x00000200005f98e7 : dec dword ptr [rax + 0x2b] ; or byte ptr [rbp + r9*4 + 5], cl ; leave ; ret 0xffd5
0x0000020000726157 : dec dword ptr [rax + 0x2b] ; ret
0x000002000046c576 : dec dword ptr [rax + 0x2b] ; ret 0x149
0x0000020000011964 : dec dword ptr [rax + 0x2b] ; ret 0x8948
0x00000200000b292f : dec dword ptr [rax + 0x2b] ; ret 0x8b41
0x00000200005a94f7 : dec dword ptr [rax + 0x2b] ; ret 0xc148
0x00000200005d8405 : dec dword ptr [rax + 0x2b] ; ret 0xe281
0x00000200001bc554 : dec dword ptr [rax + 0x33] ; ret
0x0000020000030355 : dec dword ptr [rax + 0x33] ; ret 0x8549
0x00000200001a0c4e : dec dword ptr [rax + 0x33] ; ret 0xb70f
0x00000200005cab3c : dec dword ptr [rax + 0x39] ; and byte ptr [rdi], r9b ; test dword ptr [rsi], eax ; ret
0x00000200000f89e5 : dec dword ptr [rax + 0x3b] ; enter 0x460f, -0x3f ; ret
0x000002000002c0fe : dec dword ptr [rax + 0x3b] ; ret
0x000002000071881c : dec dword ptr [rax + 0x3b] ; ret 0x1675
0x0000020000673a57 : dec dword ptr [rax + 0x3b] ; ret 0x1875
0x0000020000658751 : dec dword ptr [rax + 0x3b] ; ret 0x2274
0x00000200003f8f89 : dec dword ptr [rax + 0x3b] ; ret 0x6377
0x0000020000448194 : dec dword ptr [rax + 0x3b] ; ret 0x6877
0x000002000003038a : dec dword ptr [rax + 0x3b] ; ret 0x820f
0x00000200005b7917 : dec dword ptr [rax + 0x3b] ; ret 0x830f
0x0000020000166a10 : dec dword ptr [rax + 0x3b] ; ret 0x840f
0x00000200000feb78 : dec dword ptr [rax + 0x3b] ; ret 0x850f
0x000002000018d2af : dec dword ptr [rax + 0x3b] ; ret 0x860f
0x00000200001f3d0b : dec dword ptr [rax + 0x3b] ; ret 0x870f
0x0000020000718807 : dec dword ptr [rax + 0x3b] ; ret 0x975
0x00000200004fd579 : dec dword ptr [rax + 0x3b] ; ret 0xa74
0x000002000011004d : dec dword ptr [rax + 0x3b] ; ret 0xa75
0x000002000019bcbd : dec dword ptr [rax + 0x3b] ; ret 0xc74
0x00000200003f9019 : dec dword ptr [rax + 0x3b] ; ret 0xd377
0x00000200004d6df0 : dec dword ptr [rax + 0x3b] ; ret 0xd74
0x0000020000177f71 : dec dword ptr [rax + 0x3b] ; ret 0xf49
0x0000020000050f6c : dec dword ptr [rax + 0x3b] ; sal byte ptr [rdi - 0x14], 1 ; ret
0x0000020000178e0c : dec dword ptr [rax + 0x3b] ; sal dword ptr [rcx + rcx + 0x49], 0x3b ; ret
0x00000200007c4ded : dec dword ptr [rax + 0x63] ; enter 0x58b, 0x35 ; ret
0x000002000016f0eb : dec dword ptr [rax + 0x63] ; ret
0x000002000068c560 : dec dword ptr [rax + 0x63] ; ret 0x4566
0x00000200003cc917 : dec dword ptr [rax + 0x63] ; ret 0x8348
0x00000200003cc940 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x0000020000028fe8 : dec dword ptr [rax + 0x63] ; ret 0xb60f
0x000002000009d190 : dec dword ptr [rax + 0xb] ; ret
0x00000200000b4805 : dec dword ptr [rax + 0xb] ; ret 0x25e9
0x00000200000b480d : dec dword ptr [rax + 0xb] ; ret 0x30e9
0x000002000007e865 : dec dword ptr [rax + 0xb] ; ret 0x44c7
0x000002000019aa64 : dec dword ptr [rax + 0xb] ; ret 0x8948
0x000002000006ff7b : dec dword ptr [rax + 0xb] ; ret 0x8949
0x00000200003c9191 : dec dword ptr [rax + 0xb] ; ret 0x894c
0x000002000077e071 : dec dword ptr [rax + 0xb] ; ret 0x8b48
0x0000020000567e8f : dec dword ptr [rax + 0xb] ; ret 0xc148
0x000002000021b5a5 : dec dword ptr [rax + 0xb] ; ret 0xd233
0x0000020000055c85 : dec dword ptr [rax + 0xc] ; ret
0x000002000012e360 : dec dword ptr [rax + 0xd] ; ret 0
0x0000020000471cef : dec dword ptr [rax + 0xf] ; ret
0x000002000051818b : dec dword ptr [rax + 0xf] ; ret 0x8b48
0x00000200006e4e7f : dec dword ptr [rax + 0xf] ; ret 0x8b49
0x00000200005d1bef : dec dword ptr [rax + 1] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000b8cd6 : dec dword ptr [rax + 3] ; ret
0x000002000018189f : dec dword ptr [rax + 3] ; ret 0x2bb
0x000002000000ae57 : dec dword ptr [rax + 3] ; ret 0x3b48
0x00000200004f12aa : dec dword ptr [rax + 3] ; ret 0x3b49
0x0000020000095f56 : dec dword ptr [rax + 3] ; ret 0x3b4c
0x00000200005d3205 : dec dword ptr [rax + 3] ; ret 0x8941
0x0000020000427acd : dec dword ptr [rax + 3] ; ret 0x8948
0x000002000070b0aa : dec dword ptr [rax + 3] ; ret 0x8b4c
0x00000200000c12bb : dec dword ptr [rax + 3] ; ret 0xc148
0x00000200007a3d84 : dec dword ptr [rax + 3] ; rol bh, 4 ; ret 1
0x00000200003cf393 : dec dword ptr [rax + 3] ; ror byte ptr [rax - 0x39], 1 ; ret
0x00000200006a734f : dec dword ptr [rax - 0x17dfdbbc] ; ret
0x00000200000a88e6 : dec dword ptr [rax - 0x39] ; ret
0x000002000051c5a9 : dec dword ptr [rax - 0x39] ; ret 0x1700
0x00000200005afe4b : dec dword ptr [rax - 0x39] ; ret 0x3c80
0x000002000040f635 : dec dword ptr [rax - 0x39] ; ret 0x5d00
0x0000020000131f86 : dec dword ptr [rax - 0x39] ; ret 0xba00
0x0000020000075154 : dec dword ptr [rax - 0x39] ; ret 0xd300
0x00000200005b9646 : dec dword ptr [rax - 0x39] ; ret 0xf80
0x000002000045f708 : dec dword ptr [rax - 0x39] ; test cl, al ; loopne 0x2000045f76c ; xor byte ptr [rax], al ; ret 0x700
0x00000200000563cc : dec dword ptr [rax - 0x3f] ; call 0x1ffc228abe7
0x00000200000856d4 : dec dword ptr [rax - 0x3f] ; call 0x1ffc2439ef3
0x0000020000195dbb : dec dword ptr [rax - 0x3f] ; call 0x1ffc33ca6d6
0x0000020000164a4b : dec dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x00000200001fb567 : dec dword ptr [rax - 0x3f] ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000597945 : dec dword ptr [rax - 0x3f] ; cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200001b2fd4 : dec dword ptr [rax - 0x73] ; adc bpl, al ; ret 0xf880
0x00000200005fadbd : dec dword ptr [rax - 0x73] ; adc r8b, bpl ; push rcx ; ret 0xffe6
0x00000200004c74a0 : dec dword ptr [rax - 0x73] ; adc r8b, r13b ; mov dh, 0xb ; ret 0xe8ff
0x000002000063904c : dec dword ptr [rax - 0x73] ; adc r8b, r13b ; ret 0xe2df
0x00000200001a3add : dec dword ptr [rax - 0x73] ; add dword ptr [rcx + 0x3b], ecx ; ret
0x000002000053d5c7 : dec dword ptr [rax - 0x73] ; add eax, 0x20b261 ; ret
0x0000020000161370 : dec dword ptr [rax - 0x73] ; add eax, 0xffff78c8 ; ret
0x0000020000161381 : dec dword ptr [rax - 0x73] ; add eax, 0xffff9467 ; ret
0x00000200000cc2c3 : dec dword ptr [rax - 0x73] ; and al, 0x48 ; call rax
0x00000200001a0c4a : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x33] ; ret 0xb70f
0x0000020000488170 : dec dword ptr [rax - 0x73] ; dec qword ptr [rax - 0x75] ; ret 0x48f0
0x0000020000582179 : dec dword ptr [rax - 0x73] ; fmul dword ptr [r8 + 0x2b] ; ret
0x00000200003e78b4 : dec dword ptr [rax - 0x73] ; mov r15b, 0xe8 ; jb 0x200003e78c7 ; ret 0x85ff
0x00000200001aa707 : dec dword ptr [rax - 0x73] ; or dil, dil ; ret
0x000002000019f179 : dec dword ptr [rax - 0x73] ; or eax, 0x62a57 ; call rax
0x000002000017a88d : dec dword ptr [rax - 0x73] ; or eax, 0x87343 ; call rax
0x00000200004c649c : dec dword ptr [rax - 0x73] ; push rsi ; add dword ptr [rax - 0x75], ecx ; ret 0xc148
0x00000200003d065c : dec dword ptr [rax - 0x73] ; push rsp ; and al, 0x20 ; call 0x2000051c8f4
0x000002000019e110 : dec dword ptr [rax - 0x73] ; ret
0x0000020000060883 : dec dword ptr [rax - 0x73] ; shr r8, cl ; ret
0x00000200005b15fd : dec dword ptr [rax - 0x73] ; shr r8b, 0xe1 ; cwde ; ret 0x8bff
0x0000020000138c09 : dec dword ptr [rax - 0x73] ; sub byte ptr [r8 - 0x7d], r9b ; ret
0x00000200005fadc6 : dec dword ptr [rax - 0x73] ; sub r8b, bpl ; ret 0xffe6
0x000002000049abef : dec dword ptr [rax - 0x73] ; xchg rax, r15 ; call qword ptr [rax]
0x0000020000453d4b : dec dword ptr [rax - 0x75] ; adc byte ptr [r8 + 0x2b], cl ; ret
0x00000200001f5847 : dec dword ptr [rax - 0x75] ; adc byte ptr [rax - 1], cl ; ret 0xf748
0x000002000022a2d8 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 0x2b] ; ret 0x8d49
0x000002000051ab80 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x75] ; ret 0x2b49
0x0000020000183366 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rcx - 0x75] ; ret 0x3b49
0x0000020000440cf2 : dec dword ptr [rax - 0x75] ; add al, 0xc1 ; ret
0x00000200004725f5 : dec dword ptr [rax - 0x75] ; add al, 7 ; add byte ptr [rax], al ; ret
0x0000020000032fb0 : dec dword ptr [rax - 0x75] ; add al, byte ptr [rcx - 0x7c] ; ret 0x3d75
0x0000020000582dde : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000191c3a : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x000002000000f972 : dec dword ptr [rax - 0x75] ; add byte ptr [rax - 9], cl ; ror byte ptr [rax - 0x7b], 1 ; ret 0x850f
0x00000200005835df : dec dword ptr [rax - 0x75] ; add dword ptr [rax + 0x2b], ecx ; ret 0x3b48
0x0000020000432156 : dec dword ptr [rax - 0x75] ; add dword ptr [rcx - 0x7c], eax ; ret 0x1774
0x00000200001de208 : dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000008b771 : dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000051964b : dec dword ptr [rax - 0x75] ; and al, 0x30 ; call 0x20000148079
0x00000200004c6fe3 : dec dword ptr [rax - 0x75] ; and al, 0x48 ; call 0x200000e7da9
0x00000200005fe58d : dec dword ptr [rax - 0x75] ; and al, 0x48 ; call 0x2000049a818
0x00000200005fe597 : dec dword ptr [rax - 0x75] ; and al, 0x60 ; call 0x2000049a818
0x00000200004bb3d4 : dec dword ptr [rax - 0x75] ; and al, 0x68 ; call 0x200000e7da9
0x0000020000503fad : dec dword ptr [rax - 0x75] ; and byte ptr [r11], r15b ; ret
0x000002000068e9f8 : dec dword ptr [rax - 0x75] ; and byte ptr [rbp - 0x75], r9b ; ret 0x8b48
0x00000200005252bc : dec dword ptr [rax - 0x75] ; call 0x20000148078
0x000002000051ad43 : dec dword ptr [rax - 0x75] ; enter -0x1b18, -0x14 ; ret 0x40ff
0x00000200003cfeaa : dec dword ptr [rax - 0x75] ; enter -0x5217, 0x6c ; ret
0x000002000047801c : dec dword ptr [rax - 0x75] ; enter -0x6415, -0x75 ; ret
0x00000200004bd619 : dec dword ptr [rax - 0x75] ; enter 0x7ee8, -0x59 ; ret 0xe9ff
0x00000200005b59d4 : dec dword ptr [rax - 0x75] ; fdiv dword ptr [rbx] ; ror byte ptr [rax - 1], cl ; ret
0x000002000051eafb : dec dword ptr [rax - 0x75] ; fdiv st(6) ; ret 0x7404
0x00000200001245cc : dec dword ptr [rax - 0x75] ; fincstp ; ret 0xfffc
0x00000200006b1900 : dec dword ptr [rax - 0x75] ; fisttp qword ptr [rax - 1] ; ret
0x00000200007cccbc : dec dword ptr [rax - 0x75] ; fisttp word ptr [rax - 1] ; ret
0x00000200003d96e0 : dec dword ptr [rax - 0x75] ; fmul dword ptr [rax + 0x2b] ; fimul word ptr [rax - 1] ; ret
0x00000200004fa889 : dec dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000503816 : dec dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xe62
0x00000200005f0670 : dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x000002000049faf3 : dec dword ptr [rax - 0x75] ; fnstsw dword ptr [rbx] ; ret 0x3674
0x0000020000424192 : dec dword ptr [rax - 0x75] ; int 0xe8
0x000002000043daa6 : dec dword ptr [rax - 0x75] ; iretd ; call 0x2000006d287
0x000002000049eeb0 : dec dword ptr [rax - 0x75] ; iretd ; call 0x200000c7477
0x00000200004b80ac : dec dword ptr [rax - 0x75] ; iretd ; call 0x200000e7da7
0x00000200004c70f5 : dec dword ptr [rax - 0x75] ; iretd ; call 0x200000e8067
0x00000200004bd12a : dec dword ptr [rax - 0x75] ; iretd ; call 0x200000e9667
0x00000200005b02fa : dec dword ptr [rax - 0x75] ; iretd ; call 0x2000061c5f6
0x00000200005de157 : dec dword ptr [rax - 0x75] ; iretd ; call 0x2000065a39a
0x00000200005de284 : dec dword ptr [rax - 0x75] ; iretd ; call 0x2000065a546
0x00000200005d7077 : dec dword ptr [rax - 0x75] ; iretd ; call rax
0x00000200000ecfe6 : dec dword ptr [rax - 0x75] ; je 0x200000ed017 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001b488f : dec dword ptr [rax - 0x75] ; je 0x200001b48c0 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001f2658 : dec dword ptr [rax - 0x75] ; je 0x200001f2689 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000221071 : dec dword ptr [rax - 0x75] ; je 0x200002210a2 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000221070 : dec dword ptr [rax - 0x75] ; je 0x200002210a3 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003ce125 : dec dword ptr [rax - 0x75] ; je 0x200003ce156 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003ce124 : dec dword ptr [rax - 0x75] ; je 0x200003ce157 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000400a9f : dec dword ptr [rax - 0x75] ; je 0x20000400acf ; js 0x20000400a38 ; ret
0x000002000044dfae : dec dword ptr [rax - 0x75] ; je 0x2000044dfdf ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004565f2 : dec dword ptr [rax - 0x75] ; je 0x20000456623 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000045dd13 : dec dword ptr [rax - 0x75] ; je 0x2000045dd43 ; jo 0x2000045dcac ; ret
0x000002000051c2ad : dec dword ptr [rax - 0x75] ; je 0x2000051c2dd ; js 0x2000051c246 ; ret
0x00000200005437ab : dec dword ptr [rax - 0x75] ; je 0x200005437db ; jo 0x20000543744 ; ret
0x000002000065d5b8 : dec dword ptr [rax - 0x75] ; je 0x2000065d5e9 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200006f3879 : dec dword ptr [rax - 0x75] ; je 0x200006f38aa ; cmp byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000438c9d : dec dword ptr [rax - 0x75] ; jl 0x20000438ccd ; js 0x20000438c36 ; ret
0x000002000048441b : dec dword ptr [rax - 0x75] ; jl 0x2000048444c ; xor byte ptr [rax - 0x75], cl ; ret
0x0000020000566fef : dec dword ptr [rax - 0x75] ; jl 0x2000056701f ; js 0x20000566f88 ; ret
0x00000200005d382b : dec dword ptr [rax - 0x75] ; jns 0x200005d384f ; jmp 0x200004afabd
0x000002000046003f : dec dword ptr [rax - 0x75] ; jo 0x20000460035 ; out -0x5a, eax ; ret
0x000002000019b72c : dec dword ptr [rax - 0x75] ; mov edi, dword ptr [rax - 0x18000000] ; ret
0x0000020000462624 : dec dword ptr [rax - 0x75] ; or byte ptr [r8 - 0x75], cl ; ret
0x000002000049452a : dec dword ptr [rax - 0x75] ; or byte ptr [r9 + 0x23], cl ; ret
0x00000200000d0766 : dec dword ptr [rax - 0x75] ; or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200006017a8 : dec dword ptr [rax - 0x75] ; or eax, 0xffd23af8 ; call rax
0x0000020000059c94 : dec dword ptr [rax - 0x75] ; or eax, ebp ; ret
0x000002000069ccd3 : dec dword ptr [rax - 0x75] ; or r8b, bpl ; ret
0x00000200005956e5 : dec dword ptr [rax - 0x75] ; pop rax ; sbb cl, ch ; ret
0x00000200007d1675 : dec dword ptr [rax - 0x75] ; pop rsp ; and al, 0x40 ; jmp 0x200007d1647
0x00000200004c2969 : dec dword ptr [rax - 0x75] ; push rax ; adc dh, dh ; ret 0x753f
0x000002000048aa27 : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000200004cfeda : dec dword ptr [rax - 0x75] ; push rdi ; or byte ptr [rax - 0x75], cl ; ret
0x00000200001964be : dec dword ptr [rax - 0x75] ; push rsi ; sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000004f6e : dec dword ptr [rax - 0x75] ; ret
0x000002000017da5e : dec dword ptr [rax - 0x75] ; ret 0x2348
0x000002000004bc8f : dec dword ptr [rax - 0x75] ; ret 0x2349
0x00000200000ec1d5 : dec dword ptr [rax - 0x75] ; ret 0x29e9
0x0000020000193239 : dec dword ptr [rax - 0x75] ; ret 0x2b48
0x000002000019441a : dec dword ptr [rax - 0x75] ; ret 0x2b49
0x000002000004e8dc : dec dword ptr [rax - 0x75] ; ret 0x348
0x00000200000f10da : dec dword ptr [rax - 0x75] ; ret 0x349
0x0000020000014c8e : dec dword ptr [rax - 0x75] ; ret 0x3b48
0x00000200006b791f : dec dword ptr [rax - 0x75] ; ret 0x3b49
0x0000020000015470 : dec dword ptr [rax - 0x75] ; ret 0x3b4c
0x000002000006ca02 : dec dword ptr [rax - 0x75] ; ret 0x48f0
0x0000020000075753 : dec dword ptr [rax - 0x75] ; ret 0x49f0
0x00000200001bc07c : dec dword ptr [rax - 0x75] ; ret 0x4bf0
0x0000020000102e93 : dec dword ptr [rax - 0x75] ; ret 0x6483
0x000002000017fad1 : dec dword ptr [rax - 0x75] ; ret 0x64e9
0x00000200000a5e0e : dec dword ptr [rax - 0x75] ; ret 0x8348
0x00000200003fa1a5 : dec dword ptr [rax - 0x75] ; ret 0x83c3
0x00000200001a3e74 : dec dword ptr [rax - 0x75] ; ret 0x84e9
0x0000020000167433 : dec dword ptr [rax - 0x75] ; ret 0x8548
0x0000020000472698 : dec dword ptr [rax - 0x75] ; ret 0x8944
0x0000020000024646 : dec dword ptr [rax - 0x75] ; ret 0x8b44
0x00000200007a7e73 : dec dword ptr [rax - 0x75] ; ret 0x8b48
0x0000020000011a16 : dec dword ptr [rax - 0x75] ; ret 0x8b4c
0x000002000008f8b0 : dec dword ptr [rax - 0x75] ; ret 0x8d4c
0x00000200003d731f : dec dword ptr [rax - 0x75] ; ret 0xa0b9
0x000002000009f807 : dec dword ptr [rax - 0x75] ; ret 0xb849
0x0000020000038e88 : dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200000a79a1 : dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000094495 : dec dword ptr [rax - 0x75] ; ret 0xc2f6
0x000002000059d6d4 : dec dword ptr [rax - 0x75] ; ret 0xc933
0x000002000055e007 : dec dword ptr [rax - 0x75] ; ret 0xc985
0x00000200000027a1 : dec dword ptr [rax - 0x75] ; ret 0xd348
0x000002000043ed38 : dec dword ptr [rax - 0x75] ; ret 0xeae9
0x00000200001fb0d7 : dec dword ptr [rax - 0x75] ; ret 0xf44
0x00000200001887c1 : dec dword ptr [rax - 0x75] ; ret 0xf48
0x00000200006d3a5e : dec dword ptr [rax - 0x75] ; ret 0xff48
0x00000200004bd016 : dec dword ptr [rax - 0x75] ; retf ; call 0x200000e7257
0x000002000020bd5e : dec dword ptr [rax - 0x75] ; retf ; call 0x200000e8066
0x00000200005a2f14 : dec dword ptr [rax - 0x75] ; retf ; call 0x200001c596f
0x00000200005aae0a : dec dword ptr [rax - 0x75] ; retf ; call 0x200001cb88f
0x00000200005df43c : dec dword ptr [rax - 0x75] ; retf ; call 0x2000020bcbf
0x00000200001d933d : dec dword ptr [rax - 0x75] ; retf ; call rdi
0x00000200000ce163 : dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 0x75], 1 ; add dword ptr [rax + 0x3b], ecx ; ret
0x00000200006c7225 : dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x3966
0x000002000051eba5 : dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200004b4989 : dec dword ptr [rax - 0x75] ; salc ; call 0x200000d9f77
0x000002000062a7a8 : dec dword ptr [rax - 0x75] ; salc ; call 0x2000024da47
0x00000200007d17b6 : dec dword ptr [rax - 0x75] ; sbb al, 0 ; add byte ptr [rax], al ; ret
0x0000020000499417 : dec dword ptr [rax - 0x75] ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x00000200003c73f4 : dec dword ptr [rax - 0x75] ; sbb ebp, eax ; jrcxz 0x200003c73c3 ; ret
0x00000200003c73f4 : dec dword ptr [rax - 0x75] ; sbb ebp, eax ; jrcxz 0x200003c73c4 ; ret
0x00000200001a94cf : dec dword ptr [rax - 0x75] ; shr eax, cl ; cwde ; ret 0xffe7
0x00000200005f5185 : dec dword ptr [rax - 0x75] ; shr eax, cl ; ret 0xa9f
0x0000020000094679 : dec dword ptr [rax - 0x75] ; shr ebx, -0x5e ; mov rax, rdx ; jmp 0x2000009466a
0x00000200000a6551 : dec dword ptr [rax - 0x75] ; sub byte ptr [r8 + 0x23], cl ; ret 0xba48
0x0000020000593be2 : dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0x8598
0x0000020000653669 : dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0xb440
0x000002000062ad01 : dec dword ptr [rax - 0x75] ; xlatb ; call 0x2000024da47
0x0000020000594fac : dec dword ptr [rax - 0x75] ; xlatb ; mov rcx, rbx ; call 0x20000091219
0x00000200006b0de5 : dec dword ptr [rax - 0x75] ; xor byte ptr [r8 - 0x7d], cl ; ret
0x00000200005bd142 : dec dword ptr [rax - 0x75] ; xor r9b, r13b ; pop rcx ; ret 0xffe9
0x00000200001c3100 : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 - 0x75], cl ; ret
0x0000020000432295 : dec dword ptr [rax - 0x77] ; adc dword ptr [rax - 0x75], ecx ; ret
0x00000200001b304d : dec dword ptr [rax - 0x77] ; adc eax, 0x1a2b33 ; ret
0x00000200007ab4a7 : dec dword ptr [rax - 0x77] ; adc eax, 0xffb560f1 ; ret
0x000002000078b5e0 : dec dword ptr [rax - 0x77] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000004e2c2 : dec dword ptr [rax - 0x77] ; add edi, edi ; ret 0xdaeb
0x00000200007d08dd : dec dword ptr [rax - 0x77] ; and al, 0x20 ; call 0x200003fec89
0x000002000069f6a3 : dec dword ptr [rax - 0x77] ; and al, 0x20 ; call 0x2000044b990
0x0000020000087ce8 : dec dword ptr [rax - 0x77] ; cmp byte ptr [r8 + 0x3b], r9b ; ret 0x187c
0x00000200005c6609 : dec dword ptr [rax - 0x77] ; cmp ebp, ecx ; ret
0x00000200000888b9 : dec dword ptr [rax - 0x77] ; jl 0x200000888ea ; sub byte ptr [rbp - 0x75], cl ; ret 0x8948
0x000002000015c535 : dec dword ptr [rax - 0x77] ; jmp 0x2000015c502
0x000002000015c534 : dec dword ptr [rax - 0x77] ; jmp 0x2000015c503
0x00000200004511c9 : dec dword ptr [rax - 0x77] ; jo 0x200004511de ; call 0x2000007d088
0x0000020000796393 : dec dword ptr [rax - 0x77] ; or byte ptr [r15], 0xb6 ; ret 0xf44
0x00000200000e69b9 : dec dword ptr [rax - 0x77] ; or byte ptr [r8 - 0x75], r9b ; ret 0x49f0
0x000002000049d433 : dec dword ptr [rax - 0x77] ; or byte ptr [r8 - 0x7d], cl ; ret
0x000002000045f38b : dec dword ptr [rax - 0x77] ; or byte ptr [r8 - 1], r9b ; ret
0x00000200007bbabf : dec dword ptr [rax - 0x77] ; or eax, 0xffb45c89 ; ret
0x00000200007bc4ca : dec dword ptr [rax - 0x77] ; or eax, 0xffb46bae ; ret
0x00000200007baf6e : dec dword ptr [rax - 0x77] ; or eax, 0xffb4838a ; ret
0x000002000069ecbc : dec dword ptr [rax - 0x77] ; pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x00000200004d7c35 : dec dword ptr [rax - 0x77] ; pop rdi ; sub cl, ch ; ret
0x00000200007d1475 : dec dword ptr [rax - 0x77] ; pop rsp ; and al, 0x20 ; call 0x200003fec89
0x00000200006d18af : dec dword ptr [rax - 0x77] ; ret 0x8b49
0x0000020000216eaa : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000002000054856c : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x000002000066118e : dec dword ptr [rax - 0x79] ; adc dh, dh ; ret 0x7401
0x000002000007a577 : dec dword ptr [rax - 0x7b] ; dec dword ptr [rdi] ; test dword ptr [rcx], ebx ; call qword ptr [rax]
0x0000020000521b31 : dec dword ptr [rax - 0x7b] ; leave ; je 0x20000521b47 ; ret
0x0000020000108635 : dec dword ptr [rax - 0x7b] ; push qword ptr [rcx + rcx - 0xa] ; ret 0xf10
0x000002000017de09 : dec dword ptr [rax - 0x7b] ; ret
0x0000020000661779 : dec dword ptr [rax - 0x7b] ; ret 0xdb75
0x00000200007acb0b : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000200005b21f5 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200000bfdac : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xdc3
0x000002000050260a : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xe72
0x00000200001b2ef1 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xf87c
0x000002000005b7c4 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x000002000079caa2 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 4
0x00000200000f47a5 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x000002000058701f : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; stosd dword ptr [rdi], eax ; test al, 0xe6 ; jmp qword ptr [rcx]
0x00000200001f5d35 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x00000200007caba3 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x49e9
0x0000020000699554 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x0000020000701623 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbx + 0x4c], 0x8b ; ret
0x00000200003e11d7 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x1a], 0x8b ; ret
0x00000200006e34ba : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x51], 0x81 ; call qword ptr [rdx]
0x000002000020e315 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x6c], 0xff ; ret
0x000002000070df0b : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rcx + 0x4c], 0x8b ; ret
0x000002000022dc5a : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x2b ; ret
0x00000200005197ee : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rax + 0x40], 0x8a ; iretd ; call rax
0x000002000022a0fb : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rax + 0x48], 0x3b ; ret
0x000002000078808b : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rax*2 + 0x45], 0x8b ; ret 0x394c
0x000002000051c346 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rdx + 0x44], 0x8b ; ret
0x000002000052e182 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdi*4 + 0x44], 0x8b ; ret
0x00000200004ea7ae : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdx*4 + 0x48], 0x8b ; ret
0x00000200001ab981 : dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x84 ; ret 0xf4fb
0x00000200006598f3 : dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x85 ; ret
0x000002000017e8a4 : dec dword ptr [rax - 0x7d] ; call qword ptr [rax]
0x00000200001a6f8d : dec dword ptr [rax - 0x7d] ; jmp qword ptr [rax]
0x0000020000002cc0 : dec dword ptr [rax - 0x7d] ; ret
0x0000020000667dce : dec dword ptr [rax - 0x7d] ; ret 0x4102
0x00000200000db7e0 : dec dword ptr [rax - 0x7d] ; ret 0x4104
0x00000200005b6dbe : dec dword ptr [rax - 0x7d] ; ret 0x4428
0x00000200003d6afe : dec dword ptr [rax - 0x7d] ; ret 0x4510
0x000002000068ccd1 : dec dword ptr [rax - 0x7d] ; ret 0x4802
0x000002000065b577 : dec dword ptr [rax - 0x7d] ; ret 0x4803
0x00000200005ca0d8 : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x00000200005c5fc6 : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x00000200005af2a3 : dec dword ptr [rax - 0x7d] ; ret 0x4838
0x00000200007a88af : dec dword ptr [rax - 0x7d] ; ret 0x4850
0x0000020000590204 : dec dword ptr [rax - 0x7d] ; ret 0x4858
0x00000200004d4762 : dec dword ptr [rax - 0x7d] ; ret 0x4902
0x00000200000d05ef : dec dword ptr [rax - 0x7d] ; ret 0x4908
0x00000200000a1e5c : dec dword ptr [rax - 0x7d] ; ret 0x8308
0x000002000018cf15 : dec dword ptr [rax - 0x7d] ; ret 0x830c
0x000002000049b123 : dec dword ptr [rax - 0x7d] ; ret 0x8902
0x00000200007acbfb : dec dword ptr [rax - 0x7d] ; ret 0xe80c
0x0000020000627625 : dec dword ptr [rax - 0x7d] ; ret 0xe84c
0x0000020000190bff : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000020000109b9c : dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000200003e0854 : dec dword ptr [rax - 0x7d] ; ret 0xe910
0x000002000079805f : dec dword ptr [rax - 0x7d] ; ret 0xf04
0x00000200000c09df : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx + rcx*2], 0x83 ; ret 0x4920
0x0000020000483a26 : dec dword ptr [rax - 0x7d] ; ror byte ptr [rsp + rax*2 + 0xf], 0xb6 ; ret
0x0000020000006c2e : dec dword ptr [rax - 0x7f] ; ret
0x0000020000195f05 : dec dword ptr [rax - 0x7f] ; ret 0
0x0000020000417214 : dec dword ptr [rax - 0x7f] ; ret 0x1000
0x000002000006c223 : dec dword ptr [rax - 0x7f] ; ret 0x1140
0x00000200001da3e7 : dec dword ptr [rax - 0x7f] ; ret 0x2000
0x00000200004c043e : dec dword ptr [rax - 0x7f] ; ret 0x4000
0x00000200000a472d : dec dword ptr [rax - 0x7f] ; ret 0xb40
0x00000200005c20dd : dec dword ptr [rax - 0x7f] ; ret 0xb8
0x000002000007d271 : dec dword ptr [rax - 0x7f] ; ret 0xff28
0x00000200007b054a : dec dword ptr [rax - 0x7f] ; ret 0xfff
0x00000200000b628f : dec dword ptr [rax - 1] ; ret
0x00000200005ea503 : dec dword ptr [rax - 1] ; ret 0x1c38
0x0000020000190c08 : dec dword ptr [rax - 1] ; ret 0x2be9
0x000002000013c10a : dec dword ptr [rax - 1] ; ret 0x3840
0x0000020000141211 : dec dword ptr [rax - 1] ; ret 0x3966
0x0000020000140dbb : dec dword ptr [rax - 1] ; ret 0x3c80
0x00000200003e11a8 : dec dword ptr [rax - 1] ; ret 0x4466
0x0000020000096f68 : dec dword ptr [rax - 1] ; ret 0x4eb
0x000002000019118f : dec dword ptr [rax - 1] ; ret 0x75e9
0x00000200007a7117 : dec dword ptr [rax - 1] ; ret 0x8041
0x00000200005fc4f4 : dec dword ptr [rax - 1] ; ret 0x8349
0x0000020000096f7b : dec dword ptr [rax - 1] ; ret 0x8948
0x00000200001911a0 : dec dword ptr [rax - 1] ; ret 0x93e9
0x00000200003eb35c : dec dword ptr [rax - 1] ; ret 0xb5eb
0x0000020000190bf7 : dec dword ptr [rax - 1] ; ret 0xde9
0x000002000049fded : dec dword ptr [rax - 1] ; ret 0xeceb
0x00000200007035dd : dec dword ptr [rax - 9] ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200000b0337 : dec dword ptr [rax - 9] ; ret
0x0000020000017744 : dec dword ptr [rax - 9] ; ret 0xfff
0x00000200001629a6 : dec dword ptr [rax - 9] ; ret 0xfffc
0x0000020000541956 : dec dword ptr [rax - 9] ; ror byte ptr [rax + 0x23], 1 ; rol byte ptr [rcx - 0x7d], 1 ; ret 0x75ff
0x0000020000546c38 : dec dword ptr [rax - 9] ; ror dword ptr [rax + 0x23], 1 ; ror dword ptr [rax + 0x2b], 1 ; ret 0xd233
0x00000200007b9354 : dec dword ptr [rax] ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000591483 : dec dword ptr [rax] ; push rbx ; cmp byte ptr [rax - 0x7f], cl ; ret
0x0000020000043eea : dec dword ptr [rax] ; ret
0x00000200004b825d : dec dword ptr [rbp + 0x21] ; outsb dx, byte ptr [rsi] ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200007c5da3 : dec dword ptr [rbp + 0x23410142] ; ret
0x00000200006f478b : dec dword ptr [rbp + 0x3589015e] ; fild dword ptr [rdi] ; ret
0x0000020000018f0b : dec dword ptr [rbp + 0x3b] ; ret
0x0000020000020262 : dec dword ptr [rbp + 0x48bfe43] ; ret 0x44e9
0x0000020000020243 : dec dword ptr [rbp + 0x48bfe43] ; ret 0xc5e9
0x00000200007d2b21 : dec dword ptr [rbp + 0x4d8d0255] ; pop rsp ; call 0x2000000ed39
0x0000020000199777 : dec dword ptr [rbp + 0xb] ; ret
0x000002000053d98d : dec dword ptr [rbp + 3] ; ret
0x00000200005b3b95 : dec dword ptr [rbp + rcx*4 + 0x15] ; ret
0x0000020000705142 : dec dword ptr [rbp + rcx*4 + 0x15] ; ret 0xbf36
0x00000200006f7784 : dec dword ptr [rbp + rcx*4 + 0x2d] ; adc al, 0x32 ; ret 0xebff
0x00000200006f7761 : dec dword ptr [rbp + rcx*4 + 0x35] ; mov bh, 0x57 ; ret 0x40ff
0x0000020000437c2d : dec dword ptr [rbp + rcx*4 + 0x35] ; ret
0x00000200007ca076 : dec dword ptr [rbp + rcx*4 + 0x35] ; ret 0xbf23
0x00000200006df056 : dec dword ptr [rbp + rcx*4 + 0x35] ; ret 0xd2
0x000002000069387f : dec dword ptr [rbp + rcx*4 + 0x59] ; ror byte ptr [rcx - 0x75], 1 ; ret
0x00000200006f512f : dec dword ptr [rbp + rcx*4 + 0xd] ; jmp 0x200456f1381
0x00000200006f708b : dec dword ptr [rbp + rcx*4 + 0xd] ; ret 0x33ff
0x00000200005b3b8e : dec dword ptr [rbp + rcx*4 + 0xd] ; ret 0xd70b
0x00000200007ca732 : dec dword ptr [rbp + rcx*4 + 5] ; pop rsi ; ret 0
0x000002000019b0e7 : dec dword ptr [rbp + rcx*4 + 5] ; ret 0xb
0x00000200007d2a4f : dec dword ptr [rbp - 0x2717a5b6] ; ret 0xff83
0x0000020000711828 : dec dword ptr [rbp - 0x367afeb0] ; cmovne eax, edx ; ret
0x00000200007d2a6e : dec dword ptr [rbp - 0x4617a5b6] ; ret 0xff83
0x00000200007d2a87 : dec dword ptr [rbp - 0x5f17a5b6] ; ret 0xff83
0x00000200007d292f : dec dword ptr [rbp - 0x717a5b6] ; ret
0x0000020000213a80 : dec dword ptr [rbp - 0x75] ; add byte ptr [rax + 0xb], cl ; ret 0xc933
0x0000020000169a2c : dec dword ptr [rbp - 0x75] ; or byte ptr [rbx], al ; ret
0x0000020000715ef4 : dec dword ptr [rbp - 0x75] ; pushfq ; ret 0x8068
0x0000020000063a42 : dec dword ptr [rbp - 0x75] ; ret
0x0000020000110197 : dec dword ptr [rbp - 0x75] ; ret 0x7d89
0x00000200001a783c : dec dword ptr [rbp - 0x75] ; ret 0x8b48
0x00000200003d5880 : dec dword ptr [rbp - 0x75] ; ret 0x8b49
0x000002000018e0b0 : dec dword ptr [rbp - 0x75] ; ret 0xd1e9
0x000002000059383c : dec dword ptr [rbp - 0x75] ; ret 0xf41
0x0000020000182fff : dec dword ptr [rbp - 0x75] ; sbb byte ptr [rcx - 0x75], r8b ; adc bh, dh ; ret 0xffc9
0x00000200005a1ec2 : dec dword ptr [rbp - 0x75] ; sbb r9b, r13b ; ret
0x0000020000134613 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; test dword ptr [rsi], esi ; ret 7
0x0000020000609e36 : dec dword ptr [rbp - 0x7b] ; div byte ptr [rcx + rbx - 0x73] ; xchg ebp, ebp ; jmp rsi
0x00000200004f2d4c : dec dword ptr [rbp - 0x7b] ; leave ; jne 0x200004f2d5e ; mov eax, r10d ; ret
0x00000200004f2d4c : dec dword ptr [rbp - 0x7b] ; leave ; jne 0x200004f2d5f ; mov eax, r10d ; ret
0x0000020000193ea5 : dec dword ptr [rbp - 0x7b] ; ret 0x850f
0x0000020000460bc6 : dec dword ptr [rbp - 0x7b] ; sal byte ptr [rbx + rax + 0x49], cl ; jmp rdx
0x00000200004da424 : dec dword ptr [rbp - 0x7cb707af] ; ret 0x4806
0x000002000070b744 : dec dword ptr [rbx + 0x110ff2c2] ; add al, 8 ; ret
0x00000200001f5b8a : dec dword ptr [rbx + 0x12d43305] ; add byte ptr [rbx], al ; ret
0x00000200001f23f2 : dec dword ptr [rbx + 0x1334c715] ; add bh, bh ; ret 0x8d48
0x00000200005ba76d : dec dword ptr [rbx + 0x17c3e8cd] ; ret 0x48ff
0x00000200005ba6f5 : dec dword ptr [rbx + 0x183be8cd] ; ret 0x4cff
0x000002000017f272 : dec dword ptr [rbx + 0x1a399f1d] ; add byte ptr [rcx - 0x75], al ; ret 0x523
0x00000200001d7533 : dec dword ptr [rbx + 0x1d1cca05] ; add byte ptr [rbx], bh ; ret
0x0000020000114eda : dec dword ptr [rbx + 0x20dd3b05] ; add bh, bh ; ret
0x0000020000130806 : dec dword ptr [rbx + 0x26c86] ; add bh, bh ; ret
0x00000200000b1f2c : dec dword ptr [rbx + 0x2b483c75] ; ret 0xf48
0x00000200007a39d2 : dec dword ptr [rbx + 0x2c8d48c2] ; ret
0x00000200000368f0 : dec dword ptr [rbx + 0x2c8d4cc5] ; ret
0x000002000010ed97 : dec dword ptr [rbx + 0x33085] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x12b
0x00000200001a0305 : dec dword ptr [rbx + 0x3345244e] ; sal byte ptr [rbx], 0xd2 ; call rax
0x00000200005b4895 : dec dword ptr [rbx + 0x3382444] ; ret 0x4489
0x00000200004a5efd : dec dword ptr [rbx + 0x36c87] ; add byte ptr [rcx - 0x7b], al ; ret 0x840f
0x000002000001e43a : dec dword ptr [rbx + 0x38adc305] ; add bh, bh ; ret
0x00000200006f54bb : dec dword ptr [rbx + 0x3b582444] ; ret
0x00000200006d0732 : dec dword ptr [rbx + 0x3bc12bc7] ; ret 0x820f
0x000002000052f7ce : dec dword ptr [rbx + 0x48302444] ; add esp, 0x28 ; ret
0x000002000054ca75 : dec dword ptr [rbx + 0x48482444] ; add esp, 0x28 ; ret
0x00000200001d3aaa : dec dword ptr [rbx + 0x48c18bc8] ; add esp, 0x28 ; ret
0x000002000079a7c3 : dec dword ptr [rbx + 0x48c28bd0] ; add esp, 0x38 ; ret
0x00000200006bac82 : dec dword ptr [rbx + 0x5890447] ; sbb ch, cl ; ret
0x000002000024c48e : dec dword ptr [rbx + 0x5a082] ; add byte ptr [rax + 3], cl ; ret 0x8348
0x00000200006f5440 : dec dword ptr [rbx + 0x5fff0d8] ; jp 0x200006f54b5 ; ret 0xe9ff
0x000002000023fb3b : dec dword ptr [rbx + 0x6d093] ; add dh, dh ; ret 0xf04
0x0000020000249e6f : dec dword ptr [rbx + 0x6d097] ; add dh, dh ; ret 0xf04
0x00000200007d3833 : dec dword ptr [rbx + 0x78c085c8] ; adc edi, edi ; ret 0x6348
0x000002000051629f : dec dword ptr [rbx + 0x78c085d8] ; ret 0x8b4c
0x000002000068fa16 : dec dword ptr [rbx + 0x78c085d8] ; ret 0xa2e8
0x00000200007058ac : dec dword ptr [rbx + 0x78c085e8] ; sbb bh, bh ; ret
0x00000200005ab0db : dec dword ptr [rbx + 0x78c085f0] ; adc byte ptr [rax - 1], cl ; ret
0x00000200006510f4 : dec dword ptr [rbx + 0x78c085f8] ; adc bh, bh ; ret
0x00000200006af94b : dec dword ptr [rbx + 0x78c085f8] ; adc edi, edi ; ret 0x6348
0x00000200006af32a : dec dword ptr [rbx + 0x78c085f8] ; or edi, edi ; ret 0x6348
0x000002000045fd2c : dec dword ptr [rbx + 0x79c085d8] ; ret 0x38e9
0x000002000065a7bb : dec dword ptr [rbx + 0x79c085e8] ; ret
0x00000200004315ff : dec dword ptr [rbx + 0x7f9e8d8] ; ret
0x0000020000509274 : dec dword ptr [rbx + 0x8896] ; add bh, dh ; ret 0x402
0x000002000068696d : dec dword ptr [rbx + 0x9e8c100] ; and eax, 1 ; ret
0x0000020000635d09 : dec dword ptr [rbx + 0xe493] ; add dh, dh ; ret 0x7502
0x0000020000515ad2 : dec dword ptr [rbx + 0xfc085d8] ; mov ebp, ecx ; ret
0x0000020000515bbe : dec dword ptr [rbx + 0xfc085e8] ; mov bl, dl ; ret
0x0000020000664655 : dec dword ptr [rbx + 4] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000101732 : dec dword ptr [rbx + rax - 0x1f] ; mov rcx, r12 ; call 0x200000dd949
0x00000200007acde5 : dec dword ptr [rbx + rcx*4 + 0x35] ; ret
0x000002000010515c : dec dword ptr [rbx + rcx*4 + 0x3c] ; ret 0x8d48
0x00000200000d099a : dec dword ptr [rbx + rcx*4 + 0x42] ; or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200000d09b7 : dec dword ptr [rbx + rcx*4 + 0x42] ; or byte ptr [rax - 0x7d], cl ; ret 0x4908
0x000002000024223d : dec dword ptr [rbx + rcx*4 + 0x45] ; sub cl, ch ; ret 0xfffd
0x00000200004d8756 : dec dword ptr [rbx + rcx*4 + 0x7d] ; js 0x200004d86ed ; ret
0x0000020000790b7e : dec dword ptr [rbx + rcx*4 + 0xd] ; ret 0xb978
0x0000020000790c4e : dec dword ptr [rbx + rcx*4 + 0xd] ; ret 0xfb7e
0x0000020000101f2c : dec dword ptr [rbx + rcx*4 + 5] ; jmp qword ptr [rcx]
0x00000200001fd771 : dec dword ptr [rbx + rcx*4 + 5] ; mov edi, 0xff001aba ; ret
0x000002000024e340 : dec dword ptr [rbx + rcx*4 + 5] ; push rax ; ret 0xa
0x0000020000625b56 : dec dword ptr [rbx + rcx*4 + 5] ; ret 0x1224
0x00000200007d2afd : dec dword ptr [rbx + rcx*4 - 0x35] ; lea ecx, dword ptr [rdx + 0x5a] ; call 0x2000000ed39
0x00000200005e2add : dec dword ptr [rbx + rcx*4 - 0x35] ; lea ecx, dword ptr [rdx + 0x7e] ; call 0x2000000ed39
0x00000200000d8bff : dec dword ptr [rbx + rcx*4 - 0x64] ; ret 0x7340
0x00000200004f8cce : dec dword ptr [rbx - 0x165c8b08] ; ret 0xed9
0x0000020000586dbf : dec dword ptr [rbx - 0x169fdbbc] ; ret
0x00000200007b6b9f : dec dword ptr [rbx - 0x17047435] ; ret
0x000002000017614c : dec dword ptr [rbx - 0x2a74a7b2] ; call 0x200001123a4
0x00000200005ba259 : dec dword ptr [rbx - 0x2b898ffb] ; inc dword ptr [rcx + 0x3b] ; ret
0x000002000062136d : dec dword ptr [rbx - 0x3074b72a] ; call 0x2000024d009
0x00000200007bbc53 : dec dword ptr [rbx - 0x3074b72a] ; call 0x200003e1c89
0x00000200005a3021 : dec dword ptr [rbx - 0x3474b72a] ; call 0x200004ff2d0
0x00000200005ac29d : dec dword ptr [rbx - 0x36c1735] ; ret 0x4cff
0x0000020000563196 : dec dword ptr [rbx - 0x3b7cb73d] ; jo 0x20000563201 ; ret
0x0000020000703e9a : dec dword ptr [rbx - 0x3b7cb73d] ; jo 0x20000703f05 ; ret
0x0000020000551578 : dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; pop rbp ; ret
0x00000200001c0155 : dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x0000020000454619 : dec dword ptr [rbx - 0x3b7cb73d] ; push rax ; pop rbx ; ret
0x00000200000fa176 : dec dword ptr [rbx - 0x3b7cb800] ; ret
0x00000200007220b7 : dec dword ptr [rbx - 0x4226e5eb] ; jmp qword ptr [rbx]
0x0000020000428a4f : dec dword ptr [rbx - 0x6c561728] ; ret
0x00000200007220cd : dec dword ptr [rbx - 0x7405f407] ; ret
0x0000020000439ef4 : dec dword ptr [rbx - 0x74afdbac] ; ret 0xc323
0x00000200001726cc : dec dword ptr [rbx - 0x74b3efb0] ; ret
0x00000200007d2ab8 : dec dword ptr [rbx - 0x74b3fbbf] ; ret 0x589
0x00000200001966ab : dec dword ptr [rbx - 0x74bad7ab] ; ret
0x00000200001f45fc : dec dword ptr [rbx - 0x74bba3a9] ; ret 0xc141
0x0000020000585cba : dec dword ptr [rbx - 0x74bbafab] ; ret
0x00000200004a5018 : dec dword ptr [rbx - 0x74bbdba4] ; ret
0x00000200000ecbbd : dec dword ptr [rbx - 0x74be8bbd] ; shr byte ptr [rbx], cl ; ret 0xd8f7
0x00000200004ed054 : dec dword ptr [rbx - 0x74cfdba4] ; ret
0x0000020000653d11 : dec dword ptr [rbx - 0x76bd6ffc] ; ret
0x000002000018992d : dec dword ptr [rbx - 0x779fdbbc] ; add ch, cl ; ret 0xeeaf
0x0000020000462992 : dec dword ptr [rbx - 0x7a1f7e7c] ; je 0x200004629a2 ; ret
0x000002000046297a : dec dword ptr [rbx - 0x7a5f7e7c] ; je 0x2000046298a ; ret
0x00000200000d1e14 : dec dword ptr [rbx - 0x7b74b63e] ; ret 0xb440
0x0000020000784862 : dec dword ptr [rbx - 0x7cb74fab] ; ret
0x0000020000675ca3 : dec dword ptr [rbx - 0x98fdba4] ; ret
0x0000020000194e14 : dec dword ptr [rbx - 0x9bebfc0] ; ret 0xf04
0x0000020000539854 : dec dword ptr [rbx - 0xbbdbac] ; ret 0x5489
0x00000200006a8ebb : dec dword ptr [rbx - 0xcbdbbc] ; ret
0x00000200006a8d77 : dec dword ptr [rbx - 0xcfdbbc] ; ret
0x000002000052d2ff : dec dword ptr [rbx] ; ret
0x00000200001eb145 : dec dword ptr [rcx + 0x1190] ; ret
0x00000200001eb163 : dec dword ptr [rcx + 0x1194] ; ret
0x00000200005acff9 : dec dword ptr [rcx + 0x12058b01] ; ret
0x0000020000124765 : dec dword ptr [rcx + 0x1e4] ; ret
0x00000200000b1750 : dec dword ptr [rcx + 0x23] ; ret
0x0000020000451fc5 : dec dword ptr [rcx + 0x23] ; ret 0x3d48
0x00000200004329ee : dec dword ptr [rcx + 0x23] ; ret 0x8148
0x000002000051d246 : dec dword ptr [rcx + 0x2b] ; ret 0x44c7
0x00000200000390d0 : dec dword ptr [rcx + 0x2b] ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200003d9a0b : dec dword ptr [rcx + 0x33] ; ret 0xf48
0x00000200004ac5c5 : dec dword ptr [rcx + 0x35c] ; xor eax, eax ; ret
0x000002000040a583 : dec dword ptr [rcx + 0x3b542444] ; ret
0x00000200000b1736 : dec dword ptr [rcx + 0x3b] ; ret
0x00000200003fa792 : dec dword ptr [rcx + 0x3b] ; ret 0x830f
0x00000200001891e7 : dec dword ptr [rcx + 0x3b] ; ret 0x840f
0x0000020000189c27 : dec dword ptr [rcx + 0x3b] ; ret 0x850f
0x000002000000a518 : dec dword ptr [rcx + 0x3b] ; ret 0xf45
0x00000200005ad001 : dec dword ptr [rcx + 0x42058b02] ; ret 0xffdf
0x000002000010b5af : dec dword ptr [rcx + 0x420] ; bts dword ptr [rax], edx ; ret
0x000002000011f01f : dec dword ptr [rcx + 0x48c03302] ; add esp, 0x28 ; ret
0x000002000060e118 : dec dword ptr [rcx + 0x5589bb55] ; ret
0x0000020000627a97 : dec dword ptr [rcx + 0x58b1042] ; ret
0x00000200000bb77e : dec dword ptr [rcx + 0x60] ; add rsp, 8 ; ret
0x00000200003cd1db : dec dword ptr [rcx + 0x64] ; ret
0x0000020000041e79 : dec dword ptr [rcx + 0x6fc] ; ret
0x00000200003d0bc9 : dec dword ptr [rcx + 0x80bb] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000008650e : dec dword ptr [rcx + 0x8c] ; ret
0x00000200001d034a : dec dword ptr [rcx + 0xf] ; ret
0x000002000043f7c1 : dec dword ptr [rcx + 3] ; fisttp word ptr [rax - 0x75] ; ret
0x000002000017e667 : dec dword ptr [rcx + 3] ; ret 0x2349
0x00000200000169cd : dec dword ptr [rcx + 3] ; ret 0x349
0x00000200000a21f4 : dec dword ptr [rcx + 3] ; ret 0x3b48
0x000002000043f0de : dec dword ptr [rcx + 3] ; ret 0x59e9
0x00000200005cb904 : dec dword ptr [rcx + 3] ; ret 0x8948
0x0000020000173822 : dec dword ptr [rcx + 3] ; ret 0xc148
0x000002000079722e : dec dword ptr [rcx + 3] ; ror byte ptr [rbx - 0x49f0ba3b], 1 ; ret 0x3b44
0x00000200001fed81 : dec dword ptr [rcx + 8] ; ret
0x0000020000727ae2 : dec dword ptr [rcx + rcx*4 + 0x2d] ; outsb dx, byte ptr [rsi] ; ret 0xffbc
0x00000200003d6fb3 : dec dword ptr [rcx + rcx*4 + 0x2d] ; pop rbp ; ret 0xfff4
0x0000020000415c4d : dec dword ptr [rcx + rcx*4 + 0x2d] ; ret
0x00000200006a062e : dec dword ptr [rcx + rcx*4 + 0x35] ; push rdx ; ret
0x000002000079bdf4 : dec dword ptr [rcx + rcx*4 + 0x35] ; test byte ptr [rbx], al ; ret 0x48ff
0x00000200004232bd : dec dword ptr [rcx + rcx*4 + 0x3d] ; ret
0x0000020000727ae9 : dec dword ptr [rcx + rcx*4 + 0x3d] ; xchg eax, edi ; ret 0xffbc
0x000002000042ccd9 : dec dword ptr [rcx + rcx*4 + 0x6d] ; xor byte ptr [rax - 0x75], cl ; ret
0x00000200007b4cc7 : dec dword ptr [rcx + rcx*4 + 0x73] ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200004397f6 : dec dword ptr [rcx - 0x117434c3] ; push rsi ; ret
0x000002000072b2aa : dec dword ptr [rcx - 0x3cfe4fff] ; xor al, al ; ret
0x000002000070429a : dec dword ptr [rcx - 0x4048d8c3] ; jmp qword ptr [rbx]
0x00000200003ec9ab : dec dword ptr [rcx - 0x73] ; adc cl, r13b ; ret
0x00000200001195ac : dec dword ptr [rcx - 0x73] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200004cc3f1 : dec dword ptr [rcx - 0x73] ; mov fs, eax ; add al, byte ptr [rax] ; add al, ch ; ret 0xc1d5
0x00000200003d5e34 : dec dword ptr [rcx - 0x73] ; test dword ptr [rax], eax ; ret
0x000002000020758f : dec dword ptr [rcx - 0x74b3f7ba] ; ret
0x00000200001cf4b2 : dec dword ptr [rcx - 0x74b65c83] ; ret 0xf49
0x00000200000d562d : dec dword ptr [rcx - 0x74b7d7b9] ; ret
0x000002000001c2f4 : dec dword ptr [rcx - 0x74b7d7ba] ; ret
0x00000200000d686c : dec dword ptr [rcx - 0x74b7d7bb] ; ret
0x0000020000671272 : dec dword ptr [rcx - 0x74b7ef85] ; ret
0x00000200004eeee0 : dec dword ptr [rcx - 0x75] ; enter 0x6be8, 0x4e ; ret 0xe9ff
0x000002000052a72a : dec dword ptr [rcx - 0x75] ; fimul word ptr [rax - 1] ; ret
0x00000200006cbd18 : dec dword ptr [rcx - 0x75] ; fmul qword ptr [rax - 1] ; ret
0x00000200007c5ac8 : dec dword ptr [rcx - 0x75] ; imul ecx ; ret 0xfffd
0x00000200004c746d : dec dword ptr [rcx - 0x75] ; int 0xe8
0x0000020000465b23 : dec dword ptr [rcx - 0x75] ; iretd ; call 0x20000061dc6
0x0000020000441db3 : dec dword ptr [rcx - 0x75] ; iretd ; call 0x2000006d287
0x0000020000192684 : dec dword ptr [rcx - 0x75] ; iretd ; call 0x200000be966
0x00000200006ced60 : dec dword ptr [rcx - 0x75] ; or byte ptr [rax + 3], cl ; ret
0x000002000001d9b1 : dec dword ptr [rcx - 0x75] ; pop rbp ; add dh, dh ; ret
0x0000020000797a67 : dec dword ptr [rcx - 0x75] ; push rdi ; xor byte ptr [rax - 0x7d], cl ; ret 0x4c18
0x0000020000010095 : dec dword ptr [rcx - 0x75] ; ret
0x00000200000e668e : dec dword ptr [rcx - 0x75] ; ret 0x2349
0x0000020000015453 : dec dword ptr [rcx - 0x75] ; ret 0x3b48
0x0000020000197c8c : dec dword ptr [rcx - 0x75] ; ret 0x3b4c
0x000002000019582a : dec dword ptr [rcx - 0x75] ; ret 0x48f0
0x00000200000dc894 : dec dword ptr [rcx - 0x75] ; ret 0x52e9
0x00000200001d0813 : dec dword ptr [rcx - 0x75] ; ret 0x7c89
0x00000200001d0501 : dec dword ptr [rcx - 0x75] ; ret 0x7d89
0x00000200000aa4ed : dec dword ptr [rcx - 0x75] ; ret 0x8348
0x000002000079e7ef : dec dword ptr [rcx - 0x75] ; ret 0x8b4c
0x00000200000b3f83 : dec dword ptr [rcx - 0x75] ; ret 0xb48
0x0000020000101696 : dec dword ptr [rcx - 0x75] ; ret 0xb60f
0x000002000006b3bf : dec dword ptr [rcx - 0x75] ; ret 0xb948
0x00000200000d91ec : dec dword ptr [rcx - 0x75] ; ret 0xb949
0x00000200000b420f : dec dword ptr [rcx - 0x75] ; ret 0xba48
0x000002000017d4b8 : dec dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000042e6fe : dec dword ptr [rcx - 0x75] ; ret 0xcce9
0x00000200007c9d19 : dec dword ptr [rcx - 0x75] ; retf ; call rbx
0x00000200006add03 : dec dword ptr [rcx - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x3966
0x0000020000036c00 : dec dword ptr [rcx - 0x75] ; sbb byte ptr [r8 + 0x33], r9b ; ret
0x0000020000198d24 : dec dword ptr [rcx - 0x75] ; sbb byte ptr [r8 - 0x7b], r9b ; ret
0x0000020000197d95 : dec dword ptr [rcx - 0x75] ; sbb byte ptr [rax - 0x7b], r9b ; ret
0x000002000018880b : dec dword ptr [rcx - 0x75] ; sbb byte ptr [rbp - 0x75], cl ; ret 0x4ba
0x00000200000d722e : dec dword ptr [rcx - 0x75] ; sbb esi, esi ; ret
0x000002000013e316 : dec dword ptr [rcx - 0x75] ; xor cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x000002000003b20a : dec dword ptr [rcx - 0x75fe4cf9] ; ret
0x00000200001c290d : dec dword ptr [rcx - 0x77] ; adc byte ptr [r9 - 0x75], al ; ret 0x8949
0x000002000044404e : dec dword ptr [rcx - 0x77] ; call 0x1ffc3134947
0x0000020000672247 : dec dword ptr [rcx - 0x7cb797b5] ; ret
0x00000200001d9299 : dec dword ptr [rcx - 0x7cb7efba] ; ret
0x00000200000ac7ce : dec dword ptr [rcx - 0x7d] ; ret
0x000002000020f8ef : dec dword ptr [rcx - 0x7d] ; ret 0x4804
0x0000020000630baa : dec dword ptr [rcx - 0x7d] ; ret 0x4840
0x0000020000548d1f : dec dword ptr [rcx - 0x7d] ; ret 0x4908
0x0000020000164655 : dec dword ptr [rcx - 0x7d] ; ret 0x4c08
0x000002000065e5c8 : dec dword ptr [rcx - 0x7d] ; ret 0x4c28
0x00000200005541e8 : dec dword ptr [rcx - 0x7d] ; ret 0x4ce8
0x00000200000cb531 : dec dword ptr [rcx - 0x7d] ; ret 0xe908
0x0000020000181179 : dec dword ptr [rcx - 0x7f] ; jmp rax
0x00000200000649a2 : dec dword ptr [rcx - 0x7f] ; ret
0x0000020000136b19 : dec dword ptr [rcx - 0x9cbdbbc] ; ret 0x7401
0x00000200000b14b0 : dec dword ptr [rcx - 1] ; ret
0x000002000004acbf : dec dword ptr [rcx - 1] ; ret 0x1bf
0x000002000017d221 : dec dword ptr [rcx - 1] ; ret 0x9ae9
0x000002000006fbe9 : dec dword ptr [rcx] ; add rsp, 0x28 ; ret
0x000002000004292d : dec dword ptr [rcx] ; ret
0x00000200005b9141 : dec dword ptr [rdi + rcx + 0x48] ; ret
0x0000020000661d1b : dec dword ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ret 0x3074
0x0000020000111bd3 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x1c7
0x0000020000032db5 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x344
0x000002000004ca61 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8b44
0x00000200001e8f89 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8b49
0x00000200000799df : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x000002000004b943 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret 0x2348
0x0000020000023ee7 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000004b917 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x234c
0x00000200000bf18c : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200003cfc38 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001e7488 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret
0x000002000003f4a4 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000200001a3b6e : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000017abc : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200000d3d1f : dec dword ptr [rdi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000004bc8b : dec dword ptr [rdi] ; add byte ptr [rax], al ; dec dword ptr [rax - 0x75] ; ret 0x2349
0x00000200000e67c4 : dec dword ptr [rdi] ; add byte ptr [rax], al ; dec dword ptr [rcx - 0x75] ; ret
0x00000200006d36dd : dec dword ptr [rdi] ; add byte ptr [rbp + 0x50], dh ; xor al, al ; ret
0x00000200006d2611 : dec dword ptr [rdi] ; mov bh, 0x44 ; std ; add byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x0000020000595d81 : dec dword ptr [rdi] ; mov bh, 0x4a ; add cl, byte ptr [rbp - 0x75] ; ret 0xc18b
0x000002000059e0d8 : dec dword ptr [rdi] ; mov bh, 0x56 ; add dh, dh ; ret 0xf10
0x00000200001ead09 : dec dword ptr [rdi] ; mov bh, 5 ; out dx, eax ; rcr byte ptr [rbx], cl ; add bh, bh ; ret
0x0000020000795ac5 : dec dword ptr [rdi] ; mov bh, 5 ; ret
0x000002000042193c : dec dword ptr [rdi] ; mov byte ptr [rax], dl ; ret 0x17
0x00000200004ad19b : dec dword ptr [rdi] ; mov byte ptr [rbp - 0x9ffedac], dh ; ret
0x00000200005fc5d9 : dec dword ptr [rdi] ; mov ch, bh ; mov dh, dh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000002e51 : dec dword ptr [rdi] ; mov dh, 0x43 ; add ecx, dword ptr [rbp - 0x75] ; ret 0x348
0x00000200005dbce1 : dec dword ptr [rdi] ; mov dh, 0x5d ; add esi, esi ; ret
0x00000200005ada8b : dec dword ptr [rdi] ; mov dh, 0x87 ; ret 6
0x0000020000062eb4 : dec dword ptr [rdi] ; mov dh, 0x93 ; ret
0x00000200001b6c5d : dec dword ptr [rdi] ; mov dh, 0xc0 ; add rsp, 0x28 ; ret
0x00000200001fad80 : dec dword ptr [rdi] ; mov dh, 0xc0 ; mov cr8, rax ; ret
0x0000020000220c47 : dec dword ptr [rdi] ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002c800 : dec dword ptr [rdi] ; mov dh, 0xca ; cmovne eax, ecx ; ret
0x00000200007c7efe : dec dword ptr [rdi] ; mov dh, 0xd ; ret 0xb5a2
0x000002000019452b : dec dword ptr [rdi] ; mov dh, 4 ; ret 0xf024
0x000002000024dcb0 : dec dword ptr [rdi] ; mov edx, 0x820f0ae2 ; ret 0x13
0x00000200000abd53 : dec dword ptr [rdi] ; mov edx, 0x830f0ee0 ; ret
0x000002000054cebe : dec dword ptr [rdi] ; mov edx, 0x8b480a2b ; ret
0x00000200007d61b8 : dec dword ptr [rdi] ; mov edx, 0xb22ccf2d ; call qword ptr [rcx]
0x0000020000004153 : dec dword ptr [rdi] ; ret
0x00000200003cb25a : dec dword ptr [rdi] ; ret 0x4d89
0x00000200000638fb : dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; enter -0x74b8, 5 ; ret 0x2bf2
0x00000200007c9dd9 : dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000200003d03df : dec dword ptr [rdi] ; test bl, cl ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000020000018da3 : dec dword ptr [rdi] ; test byte ptr [rax], bl ; ret 0x14
0x000002000079fe48 : dec dword ptr [rdi] ; test byte ptr [rdi + 0x59], bl ; add al, byte ptr [rax] ; ret
0x00000200004775cc : dec dword ptr [rdi] ; test byte ptr [rdi + rdx*8 - 0x74bbffec], ch ; ret 0xc149
0x00000200005deed5 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x74000fe0], ah ; ret 0xe8c1
0x000002000018c5de : dec dword ptr [rdi] ; test byte ptr [rsi], bl ; out dx, eax ; inc dword ptr [rcx - 0x75] ; ret
0x000002000008511e : dec dword ptr [rdi] ; test ch, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000042b07c : dec dword ptr [rdi] ; test ch, cl ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x000002000017627f : dec dword ptr [rdi] ; test ch, dh ; ret 0xfff9
0x00000200004cefaf : dec dword ptr [rdi] ; test ch, dl ; ret 0x10
0x00000200005223d8 : dec dword ptr [rdi] ; test dword ptr [rax - 0x74fff6ca], ebp ; ret
0x00000200000d9323 : dec dword ptr [rdi] ; test dword ptr [rax - 0x9fff35d], esp ; ret
0x000002000049f28e : dec dword ptr [rdi] ; test dword ptr [rbp - 0x74ffecf3], edi ; ret
0x0000020000566eca : dec dword ptr [rdi] ; test dword ptr [rbx - 0x74fff6a2], edx ; ret
0x0000020000105c5a : dec dword ptr [rdi] ; test dword ptr [rbx - 0x9fff93b], esp ; ret
0x000002000005dc63 : dec dword ptr [rdi] ; test dword ptr [rcx - 0x74ffed9c], ebp ; ret
0x000002000007a57a : dec dword ptr [rdi] ; test dword ptr [rcx], ebx ; call qword ptr [rax]
0x0000020000483a92 : dec dword ptr [rdi] ; test dword ptr [rip - 0x9ffebb8], eax ; ret
0x000002000005dc92 : dec dword ptr [rdi] ; test dword ptr [rsi - 0x74ffed9c], eax ; ret
0x00000200004fc8fa : dec dword ptr [rdi] ; test dword ptr [rsi - 0x7d000000], edx ; ret
0x0000020000134616 : dec dword ptr [rdi] ; test dword ptr [rsi], esi ; ret 7
0x0000020000093c03 : dec dword ptr [rdi] ; test eax, edx ; int 0xf
0x00000200001de31a : dec dword ptr [rdi] ; test ebp, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000016464f : dec dword ptr [rdi] ; test ebp, esp ; and al, 0xeb ; dec dword ptr [rcx - 0x7d] ; ret 0x4c08
0x0000020000011592 : dec dword ptr [rdi] ; test ebx, ecx ; sbb al, 0x15 ; add dh, dh ; ret 0xf02
0x0000020000401f46 : dec dword ptr [rdi] ; test ecx, eax ; ret
0x000002000007d882 : dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000200004a6e7d : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x86e8
0x00000200005657aa : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc933
0x00000200000b5565 : dec dword ptr [rdi] ; xchg eax, edx ; ret 0xf48
0x00000200001c50e5 : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000002000024f730 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x3345
0x00000200007125ca : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xb60f
0x00000200005baf2d : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc933
0x00000200000c0979 : dec dword ptr [rdi] ; xchg edx, ecx ; mov ecx, 0x8b49000d ; ret 0x8b48
0x00000200004aa8f7 : dec dword ptr [rdx + 0x10] ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000200004f681e : dec dword ptr [rdx + 0x18] ; ret
0x00000200004ae0f1 : dec dword ptr [rdx + 0x299f2005] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000727aa9 : dec dword ptr [rdx + 0x588c845] ; sahf ; ret 0xffbc
0x0000020000727ab2 : dec dword ptr [rdx + 0x588ca45] ; xchg eax, esi ; ret 0xffbc
0x000002000046dde9 : dec dword ptr [rdx + 0x7e501084] ; je 0x2000046ddf9 ; ret
0x000002000046dde8 : dec dword ptr [rdx + 0x7e501084] ; je 0x2000046ddfa ; ret
0x00000200001e4aea : dec dword ptr [rdx + 0xd0] ; ret
0x0000020000711cd4 : dec dword ptr [rdx + 0xd8948d0] ; ret 0xbed7
0x0000020000215c87 : dec dword ptr [rdx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200001cce45 : dec dword ptr [rdx - 0x3b7cb73d] ; push rax ; pop rbx ; ret
0x000002000018b172 : dec dword ptr [rdx] ; ret 0x4588
0x000002000007297e : dec dword ptr [rsi - 0x75] ; pop rsp ; ret 0x4808
0x00000200004fe39d : dec dword ptr [rsi] ; loop 0x200004fe3a4 ; ret
0x000002000019bea4 : dec dword ptr cs:[rax - 0x75] ; ret
0x00000200005493b2 : dec eax ; add rax, rdx ; jmp 0x2000054934f
0x000002000013f0f2 : dec eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000135d1e : dec eax ; cmp eax, 0x3e ; ja 0x20000135d36 ; ret
0x00000200000716eb : dec eax ; cmp eax, 2 ; jl 0x200000716fa ; ret
0x000002000013c1eb : dec eax ; jne 0x2000013c1e7 ; xor rax, rax ; ret
0x0000020000151a59 : dec eax ; jne 0x20000151a54 ; ret
0x00000200001578c6 : dec eax ; jne 0x200001578c4 ; ret
0x0000020000157974 : dec eax ; jne 0x20000157972 ; ret
0x000002000020f909 : dec eax ; lock or dword ptr [r10], eax ; ret
0x0000020000157728 : dec eax ; mov byte ptr [rcx], al ; jne 0x20000157729 ; mov rax, r11 ; ret
0x0000020000028bab : dec eax ; mov qword ptr [rdx], rax ; mov al, 1 ; pop rsi ; ret
0x00000200005b169b : dec eax ; not eax ; lock and dword ptr [r8], eax ; ret
0x00000200000f5c73 : dec eax ; ret
0x000002000000a618 : dec eax ; test eax, 0xffffff ; je 0x2000000a62b ; ret
0x00000200001c88f4 : dec ebp ; add byte ptr [rax], al ; add byte ptr [rsp + rbx - 0x7f], dh ; call rsi
0x0000020000038146 : dec ebx ; jmp 0x20000038130
0x000002000014e9e7 : dec edx ; jne 0x2000014e997 ; sfence ; ret
0x0000020000039e4d : dec edx ; mov dword ptr [r8 + 4], r10d ; ret
0x0000020000032cbc : dec edx ; mov dword ptr [rax + 4], edx ; ret
0x00000200001d91fe : dec esp ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ba88f : dec esp ; add rsp, 0x28 ; ret
0x000002000068f915 : dec esp ; add rsp, 0x38 ; ret
0x000002000020125f : dec esp ; add rsp, 0x40 ; pop rbx ; ret
0x000002000053f896 : dec esp ; and qword ptr [rcx], 0 ; ret
0x00000200005695c2 : dec esp ; cmp edx, 2 ; je 0x200005695d1 ; ret
0x000002000022945e : dec esp ; mov eax, 0x10 ; ret
0x00000200005699ba : dec esp ; mov eax, 0x1c ; ret
0x00000200005c20c0 : dec esp ; mov eax, 0x80000014 ; ret
0x00000200005ebd78 : dec esp ; mov eax, 0xc000000d ; jmp 0x20000507fd8
0x00000200005af240 : dec esp ; mov eax, 0xc000000d ; ret
0x00000200005ec820 : dec esp ; mov eax, 0xc00002c5 ; ret
0x0000020000157b8e : dec esp ; mov eax, dword ptr [rip + 0x6014aa] ; ret
0x00000200005ebde2 : dec esp ; mov ebx, 0xc000000d ; jmp 0x200005080c7
0x00000200005bcfec : dec esp ; mov ebx, 0xc0000010 ; jmp 0x20000459288
0x00000200005b4b56 : dec esp ; mov ebx, 0xc000009a ; jmp 0x20000520e61
0x0000020000187c24 : dec esp ; mov qword ptr [r8], r11 ; mov qword ptr [r9], r11 ; ret
0x00000200005a3846 : dec esp ; mov rcx, rdi ; call 0x200001c9810
0x00000200001c149d : dec esp ; xor al, al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000219c41 : dec esp ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200004a6c86 : dec esp ; xor eax, eax ; cmp rcx, qword ptr [rdx] ; jne 0x200004a6c99 ; ret
0x00000200001618ca : dec esp ; xor edx, edx ; mov eax, r8d ; div ecx ; ret
0x00000200006f7783 : dec qword ptr [r13 + rcx*4 + 0x2d] ; adc al, 0x32 ; ret 0xebff
0x0000020000011963 : dec qword ptr [r8 + 0x2b] ; ret 0x8948
0x000002000051ab7f : dec qword ptr [r8 - 0x75] ; adc cl, byte ptr [rax - 0x75] ; ret 0x2b49
0x0000020000010861 : dec qword ptr [r8 - 0x75] ; ret
0x000002000007e864 : dec qword ptr [rax + 0xb] ; ret 0x44c7
0x0000020000131f85 : dec qword ptr [rax - 0x39] ; ret 0xba00
0x000002000009a135 : dec qword ptr [rax - 0x75] ; ret 0x48f0
0x0000020000075752 : dec qword ptr [rax - 0x75] ; ret 0x49f0
0x00000200000bb77d : dec qword ptr [rcx + 0x60] ; add rsp, 8 ; ret
0x00000200001e4ae9 : dec qword ptr [rdx + 0xd0] ; ret
0x0000020000039e4c : dec r10d ; mov dword ptr [r8 + 4], r10d ; ret
0x000002000013c1ea : dec r8 ; jne 0x2000013c1e8 ; xor rax, rax ; ret
0x0000020000151a58 : dec r8 ; jne 0x20000151a55 ; ret
0x00000200001578c5 : dec r8 ; jne 0x200001578c5 ; ret
0x0000020000157973 : dec r8 ; jne 0x20000157973 ; ret
0x00000200005493b1 : dec rax ; add rax, rdx ; jmp 0x20000549350
0x00000200005493b0 : dec rax ; add rax, rdx ; jmp 0x20000549351
0x000002000013f0f1 : dec rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013d269 : dec rax ; ret
0x000002000014e9e6 : dec rdx ; jne 0x2000014e998 ; sfence ; ret
0x000002000001be49 : dec word ptr [rax + 0x1e4] ; ret
0x000002000001d4f9 : dec word ptr [rax + 0x1e6] ; ret
0x0000020000124764 : dec word ptr [rcx + 0x1e4] ; ret
0x00000200005bea29 : div bl ; jmp 0x20075232638
0x0000020000446947 : div byte ptr [rax + rcx + 0x48] ; mov ecx, esi ; call r14
0x000002000024c192 : div byte ptr [rax + rcx*2 - 0x76] ; add cl, byte ptr [rax - 1] ; ret 0x188
0x000002000066a7b5 : div byte ptr [rbp + rbp - 0xa] ; ret
0x000002000001a61c : div byte ptr [rbp - 0x3e] ; jmp 0x2000001a600
0x000002000013cbc5 : div byte ptr [rbp - 0x47] ; lea rax, qword ptr [rcx + rax - 1] ; ret
0x000002000013cb32 : div byte ptr [rbp - 0x75] ; xor eax, eax ; ret
0x000002000013b14e : div byte ptr [rbp - 0x78] ; xor rax, rax ; ret
0x0000020000006a84 : div byte ptr [rbx + rbx - 0xa] ; ret
0x00000200006ae345 : div byte ptr [rbx + rdx*2 - 0xa] ; ret
0x0000020000107579 : div byte ptr [rbx] ; div dh ; ret
0x000002000062567d : div byte ptr [rbx] ; jmp qword ptr [rcx]
0x0000020000479a0b : div byte ptr [rbx] ; shr al, cl ; jge 0x20000479a5d ; ret 0x48ff
0x0000020000609e39 : div byte ptr [rcx + rbx - 0x73] ; xchg ebp, ebp ; jmp rsi
0x00000200004780a3 : div byte ptr [rcx + rcx + 0xf] ; mov dh, 0x85 ; ret 6
0x000002000043e7ea : div byte ptr [rdi + rbx - 0x75] ; ret
0x00000200006608d2 : div byte ptr [rdi + rbx*2 - 0xa] ; ret
0x000002000006f195 : div byte ptr [rdi + rdx*2 + 0x48] ; lea edx, dword ptr [rsi + 0x10] ; call r8
0x00000200004376ad : div byte ptr [rdx + rcx*2 - 0x75] ; ret
0x00000200001ce4ca : div byte ptr [rdx + rsi + 0x48] ; mov ecx, esi ; call 0x200000fa754
0x000002000060f88d : div byte ptr [rdx - 0x3e] ; jmp 0x2000060f897
0x0000020000121a81 : div byte ptr [rdx - 0x75] ; ret
0x000002000014e09b : div byte ptr [rsi + rax + 0x48] ; mov ecx, dword ptr [rsi + 0x50] ; jmp rcx
0x00000200005838ad : div byte ptr [rsi + rax - 1] ; ret 0xeed1
0x0000020000142c69 : div byte ptr [rsi + rsi - 0xa] ; ret
0x00000200001c62c5 : div byte ptr [rsp + rax + 0xb] ; ret
0x000002000066040a : div byte ptr [rsp + rdi - 0xa] ; ret
0x000002000010757b : div dh ; ret
0x0000020000548830 : div dword ptr [rcx + 8] ; ret
0x0000020000465ce1 : div dword ptr [rdi - 0x7cb7ffeb] ; ret
0x0000020000203fe5 : div eax ; ret
0x000002000050a921 : div ecx ; add rsp, 0x28 ; ret
0x000002000051977e : div ecx ; mov dword ptr [r8 + 0xc], eax ; ret
0x000002000016d9ce : div ecx ; mov rax, rdx ; ret
0x00000200001618d1 : div ecx ; ret
0x00000200000c5a8c : div edx ; mov r9, rax ; mov rax, r9 ; ret
0x00000200000320c7 : div esi ; ret
0x00000200000c5a8b : div r10 ; mov r9, rax ; mov rax, r9 ; ret
0x0000020000203fe4 : div r8 ; ret
0x000002000050a920 : div rcx ; add rsp, 0x28 ; ret
0x000002000051977d : div rcx ; mov dword ptr [r8 + 0xc], eax ; ret
0x000002000016d9cd : div rcx ; mov rax, rdx ; ret
0x0000020000478f8b : emms ; add ebx, eax ; xor al, al ; ret
0x000002000014c3bd : encls ; mov rax, rbx ; pop rbx ; ret
0x000002000014c39d : encls ; pop rbx ; ret
0x000002000052657c : enter -0x118, 0x12 ; ret
0x000002000052e18f : enter -0x1418, -0x6a ; ret 0x48ff
0x0000020000526a8f : enter -0x1418, 0xd ; ret
0x0000020000442be2 : enter -0x14e0, -0x16 ; mov eax, 0xc000000d ; ret
0x00000200004345ae : enter -0x14f0, -0x16 ; bts eax, 0xc ; ret
0x000002000009dc6b : enter -0x14f8, -0x23 ; or eax, 0xffffffff ; ret
0x0000020000177f6b : enter -0x1601, -0x17 ; sbb edi, edx ; dec dword ptr [rax + 0x3b] ; ret 0xf49
0x0000020000020a37 : enter -0x1615, 0xf ; mov bh, 0x52 ; sbb byte ptr [rbx + rax - 0x3e], al ; jmp 0x20000020a24
0x000002000013b67c : enter -0x168e, 0x49 ; mov eax, edx ; ret
0x000002000049abec : enter -0x1761, -1 ; lea rcx, qword ptr [rbp - 0x69] ; call qword ptr [rax]
0x000002000067307d : enter -0x1b, 0x48 ; add esp, 0x50 ; pop rbx ; ret
0x00000200006730e1 : enter -0x1b, 0x48 ; add esp, 0x58 ; ret
0x000002000051ad46 : enter -0x1b18, -0x14 ; ret 0x40ff
0x00000200001e7867 : enter -0x1c18, 0x21 ; lock dec dword ptr [rax - 0x7d] ; ret
0x000002000013bcad : enter -0x1c8e, 0x49 ; mov eax, edx ; ret
0x00000200004a83aa : enter -0x1f18, -0x36 ; ret
0x00000200001154fa : enter -0x1f2d, -9 ; sal al, 1 ; and dword ptr [r10], eax ; ret
0x00000200000f5f4e : enter -0x1f2d, 0x3b ; ret 0xef72
0x000002000042ed7c : enter -0x2118, -0x17 ; ret
0x000002000051c25c : enter -0x2118, -0x4e ; ret
0x0000020000154064 : enter -0x2918, 0x27 ; add byte ptr [rax], al ; nop ; ret
0x00000200005f4292 : enter -0x298d, -0x17 ; ret
0x000002000051ebe9 : enter -0x2a18, 0x26 ; ret 0x4cff
0x00000200005269a7 : enter -0x2c18, 0xe ; ret
0x0000020000127d70 : enter -0x2c75, -0x75 ; ret
0x000002000066b7c9 : enter -0x2d, -0xa ; ret 0x7573
0x00000200005b169c : enter -0x2f09, -0x10 ; and dword ptr [r8], eax ; ret
0x00000200003ddabc : enter -0x3075, 0x4c ; mov eax, dword ptr [rbx + 0x38] ; call rax
0x00000200002120a3 : enter -0x30dd, 0x23 ; ret
0x0000020000568532 : enter -0x367c, 0xf ; test dword ptr [rbx], ebp ; push rbx ; or dword ptr [rax], eax ; ret
0x000002000013b9b3 : enter -0x36cd, -0x18 ; xor eax, 0x8b000024 ; ret
0x0000020000028baa : enter -0x3701, 0x48 ; mov dword ptr [rdx], eax ; mov al, 1 ; pop rsi ; ret
0x00000200005374b5 : enter -0x3a18, 3 ; ret 0x48ff
0x00000200007d4f53 : enter -0x3c01, -0x48 ; add byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x0000020000560de3 : enter -0x3c01, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200006ce772 : enter -0x3c01, -0x75 ; ret 0x4cc3
0x000002000004922b : enter -0x3c01, 0x41 ; mov eax, eax ; ret
0x00000200001e1e56 : enter -0x3d75, 0x66 ; mov dword ptr [r8 + 0xa], ecx ; ret
0x00000200004bb61f : enter -0x3e, 0x49 ; mov ecx, esp ; call 0x200000e7da9
0x000002000007ecb1 : enter -0x3e75, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001d3aac : enter -0x3e75, 0x48 ; add esp, 0x28 ; ret
0x000002000001ce8b : enter -0x3eb8, -0x15 ; or dword ptr [rax - 0x39], ecx ; ret 0xf000
0x000002000023e734 : enter -0x3eb8, -0x16 ; or byte ptr [rcx - 0x7d], al ; ret 0x75ff
0x0000020000011f34 : enter -0x3eb8, -0x17 ; adc cl, byte ptr [rax - 0x75] ; ret 0x8b48
0x00000200000bfb70 : enter -0x3eb8, -0x1f ; sbb dword ptr [rax - 0x75], ecx ; ret
0x00000200003c7413 : enter -0x3eb8, -6 ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000daa1e : enter -0x3eb8, -7 ; adc byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200000da6bb : enter -0x3eb8, -7 ; adc byte ptr [rcx - 0x75], cl ; ret 0x3b48
0x00000200007d3835 : enter -0x3f7b, 0x78 ; adc edi, edi ; ret 0x6348
0x0000020000448fe3 : enter -0x3fcd, -0x15 ; add ecx, dword ptr [rax - 0x75] ; ret 0x8b48
0x000002000069e432 : enter -0x3fe5, -0x7d ; loopne 0x2000069e484 ; ret
0x00000200005332b0 : enter -0x3fe5, 0x25 ; add al, 0 ; add al, al ; ret
0x000002000053b86a : enter -0x40, -0x76 ; ret
0x0000020000516fcc : enter -0x4118, 0x36 ; ret
0x00000200004273a3 : enter -0x41f1, 4 ; adc dword ptr [rcx + 0x3b], eax ; ret
0x000002000050d196 : enter -0x43, -0x17 ; ret
0x00000200005102ae : enter -0x4318, 0x7d ; ret
0x00000200005495c2 : enter -0x4718, -0x1e ; sar bh, 0x8b ; ret
0x00000200005d51fc : enter -0x48f1, 0x45 ; ret 0x8966
0x00000200000fd62d : enter -0x48f1, 4 ; ret
0x00000200007c3d07 : enter -0x49, -0x75 ; push rcx ; xor al, 0xf6 ; ret 0x7401
0x00000200007c3d19 : enter -0x49, -0xa ; ret 0xf02
0x000002000016041f : enter -0x49f1, 0x45 ; ret 0x6b48
0x000002000063b792 : enter -0x50, -0x75 ; ret
0x00000200003cfead : enter -0x5217, 0x6c ; ret
0x000002000052ac8e : enter -0x5318, -0x38 ; ret 0x8bff
0x000002000000a619 : enter -0x57, -1 ; inc dword ptr [rax] ; je 0x2000000a62a ; ret
0x00000200007d07e6 : enter -0x59, -0x75 ; ret
0x00000200005353d6 : enter -0x5b18, 0x24 ; ret 0x44ff
0x000002000047801f : enter -0x6415, -0x75 ; ret
0x0000020000524ae1 : enter -0x6618, 0x2d ; ret
0x000002000020c021 : enter -0x68f1, -0x40 ; ret
0x0000020000699d39 : enter -0x6a, -0x75 ; ret
0x00000200000c5da5 : enter -0x6af1, -0x40 ; ret
0x00000200000847ff : enter -0x6bf1, -0x40 ; ret
0x000002000042daa8 : enter -0x6d18, -1 ; ret
0x0000020000530aa8 : enter -0x6d18, 0x6a ; ret 0x33ff
0x00000200004366dc : enter -0x6d18, 0x6b ; ret
0x000002000012dc64 : enter -0x6df1, -0x40 ; ret
0x00000200005c317a : enter -0x6f01, -0x17 ; ret 0xffea
0x000002000061996c : enter -0x7118, 0x36 ; ret
0x0000020000520e42 : enter -0x718, 0x66 ; ret
0x000002000060d06d : enter -0x7218, -1 ; ret
0x00000200000ae264 : enter -0x72b3, 0x14 ; ret 0x8b49
0x00000200000a6f8f : enter -0x72b3, 0x1c ; ret
0x0000020000115297 : enter -0x72b4, 0x34 ; ret
0x00000200000eade1 : enter -0x72b5, 4 ; or byte ptr [rcx + 0x3b], cl ; ret 0x448b
0x00000200001153be : enter -0x72b7, 0x2c ; ret
0x000002000016e351 : enter -0x72b7, 0x2c ; ret 0x8b48
0x000002000017de05 : enter -0x72b8, 0x46 ; dec dword ptr [rax - 0x7b] ; ret
0x00000200007d024a : enter -0x72b8, 0x4d ; test al, 0xe8 ; adc byte ptr [rsi], ah ; ret
0x000002000055d045 : enter -0x72b8, 0x4f ; pop rcx ; call rax
0x000002000046428a : enter -0x72b8, 0x54 ; and al, 0x30 ; call 0x20000093965
0x00000200001bcfee : enter -0x72b8, 0x54 ; and al, 0x48 ; call r9
0x0000020000134905 : enter -0x72b8, 0xd ; ret
0x000002000015ef08 : enter -0x72b8, 4 ; or byte ptr [rax - 0x73], 0x1c ; ret 0x3c7
0x000002000018b2a3 : enter -0x72bf, 0x42 ; call rbx
0x000002000010784f : enter -0x72bf, 0x4f ; inc dword ptr [rcx - 0xa] ; ret 0xf04
0x000002000043adcf : enter -0x7418, 0x29 ; ret
0x00000200004c6df6 : enter -0x74b3, -0x3c ; call r10
0x0000020000715f50 : enter -0x74b5, -0x74 ; ret 0x8068
0x000002000014c399 : enter -0x74b7, -0x2f ; encls ; pop rbx ; ret
0x00000200000c5a90 : enter -0x74b7, -0x3f ; ret
0x00000200001d869b : enter -0x74b7, -0x7c ; ret
0x00000200003e61a1 : enter -0x74b8, -0x10 ; call 0x20000007c17
0x0000020000479919 : enter -0x74b8, -0x33 ; call 0x2000009e097
0x00000200000dbbf2 : enter -0x74b8, -0x3d ; jmp 0x200000dbbc0
0x000002000020f97f : enter -0x74b8, -0x3f ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000680e91 : enter -0x74b8, -0x3f ; add rsp, 0x28 ; ret
0x0000020000210438 : enter -0x74b8, -0x3f ; add rsp, 0x40 ; pop rbx ; ret
0x000002000001be22 : enter -0x74b8, -0x3f ; ret
0x000002000024f783 : enter -0x74b8, 0x14 ; add dword ptr [rcx + 0x63], ecx ; ret
0x00000200007109e0 : enter -0x74b8, 0x5c ; and al, 8 ; mov rax, r9 ; ret
0x0000020000151a34 : enter -0x74b8, 4 ; adc dword ptr [rax + 0xf], ecx ; ret
0x000002000044779c : enter -0x74b8, 5 ; adc al, 0x1b ; idiv bh ; call rax
0x000002000017b5af : enter -0x74b8, 5 ; fstpnce st(6), st(0) ; and al, byte ptr [rax] ; call rax
0x000002000043aa7b : enter -0x74b8, 5 ; int 0x80
0x000002000066e20d : enter -0x74b8, 5 ; int 0xff
0x000002000066dc84 : enter -0x74b8, 5 ; jl 0x2000066dcbd ; int 0xff
0x00000200000638fe : enter -0x74b8, 5 ; ret 0x2bf2
0x000002000040118d : enter -0x74bc, -0x40 ; call rsi
0x00000200003e883a : enter -0x74bc, 0x44 ; enter 0x4c08, 3 ; ret 0x3b49
0x00000200001ba0f7 : enter -0x74be, 4 ; ret 0x488d
0x00000200006dcfa8 : enter -0x74bf, -0x10 ; mov rbp, rdx ; call 0x200003f91c5
0x0000020000447e6b : enter -0x74bf, -0x3f ; add rsp, 0x28 ; ret
0x0000020000005bf9 : enter -0x74bf, -0x3f ; add rsp, 0x38 ; ret
0x000002000046a435 : enter -0x74bf, -0x3f ; add rsp, 0x48 ; ret
0x000002000013bbc5 : enter -0x74bf, -0x3f ; ret
0x000002000020b1ed : enter -0x75bc, -0x3f ; mov al, r8b ; ret
0x00000200000c3f5f : enter -0x75bf, -0x3e ; add rsp, 0x28 ; ret
0x00000200002014dd : enter -0x75bf, -0x3f ; add rsp, 0x48 ; ret
0x00000200000d686b : enter -0x7601, 0x45 ; sub byte ptr [rax - 0x75], cl ; ret
0x000002000001c2f3 : enter -0x7601, 0x46 ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200004d9e4d : enter -0x769a, 0x4d ; and byte ptr [rcx - 0x75], cl ; ret 0x8948
0x0000020000675752 : enter -0x76b6, 0xc ; ret
0x00000200007037ac : enter -0x76b7, 0x43 ; adc dh, dh ; ret
0x000002000055d3af : enter -0x76b7, 0x43 ; call 0x20049185f0b
0x000002000062409b : enter -0x76b7, 0x43 ; call 0x2004924cbf7
0x000002000052b6e4 : enter -0x76b7, 4 ; and al, 0xeb ; ret 0x48cc
0x00000200000b3de2 : enter -0x76b8, 0x1c ; add esi, esi ; ret
0x000002000000e938 : enter -0x76b8, 0xa ; ret
0x0000020000028bac : enter -0x76b8, 2 ; mov al, 1 ; pop rsi ; ret
0x0000020000128454 : enter -0x76bc, 0x6d ; mov al, 0x8b ; ret
0x0000020000718920 : enter -0x76ff, 0x47 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000135d1f : enter -0x77d, 0x3e ; ja 0x20000135d35 ; ret
0x00000200000716ec : enter -0x77d, 2 ; jl 0x200000716f9 ; ret
0x00000200003df18f : enter -0x7818, -0xa ; ret 0x48ff
0x0000020000782f50 : enter -0x78f1, -0x3f ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200007c53b1 : enter -0x78f1, 0x5f ; xchg eax, esp ; std ; dec dword ptr [rcx - 0x75] ; ret
0x00000200007c5414 : enter -0x78f1, 0x72 ; xchg eax, ebp ; std ; dec dword ptr [rcx - 0x75] ; ret
0x000002000022fbea : enter -0x78f1, 0x7a ; add al, 0 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000106406 : enter -0x79f1, 0x48 ; ret 6
0x00000200006a7cc2 : enter -0x7ab8, -0x37 ; jne 0x200006a7cb4 ; mov rax, rcx ; ret
0x000002000055d2c0 : enter -0x7af1, -0x6e ; ret
0x00000200000f794c : enter -0x7af1, 0x63 ; xor dword ptr [rbx], ecx ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003d3c54 : enter -0x7bf1, -0x1c ; add byte ptr [r8], al ; mov al, 1 ; ret
0x00000200000a6527 : enter -0x7bf1, -0x5b ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x0000020000019010 : enter -0x7bf1, 0x72 ; mov edi, 0x8b410014 ; ret 0xc12b
0x0000020000425236 : enter -0x7cb7, -0x40 ; adc byte ptr [rcx - 0x7d], al ; ret
0x0000020000480466 : enter -0x7cb8, -0x3f ; add al, 0x8b ; ret 0x3b48
0x0000020000008f34 : enter -0x7cb8, -0x3f ; add cl, byte ptr [rcx - 1] ; ret 0x8348
0x00000200000e5494 : enter -0x7cb8, -0x40 ; adc byte ptr [rbp + 0x3b], cl ; ret 0x5073
0x0000020000099a31 : enter -0x7cb8, -0x40 ; or byte ptr [rax + 0x3b], cl ; ret 0x1674
0x00000200002150d6 : enter -0x7cb8, 0x64 ; and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000001cd66 : enter -0x7cbf, -0x1f ; add al, byte ptr [rcx - 0xa] ; ret 0x7404
0x0000020000137cbd : enter -0x7cf1, -0x64 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200004522d8 : enter -0x7df1, -0x37 ; ret 0x15
0x0000020000784839 : enter -0x7df1, -0x39 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x870f
0x00000200006c0994 : enter -0x7df1, -0x47 ; add dword ptr [rax], eax ; add bh, bh ; ret 0xfa83
0x000002000024a2ae : enter -0x7df1, -0x54 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x870f
0x00000200006c06c4 : enter -0x7df1, -0x70 ; add byte ptr [rax], al ; add bh, bh ; ret 0xfa83
0x00000200006bed2a : enter -0x7df1, -0x77 ; add byte ptr [rax], al ; add bh, bh ; ret 0xfa83
0x00000200006c0d3b : enter -0x7df1, -0x80 ; add byte ptr [rax], al ; add bh, bh ; ret 0xfa83
0x00000200006bd7e7 : enter -0x7df1, 0x10 ; add dword ptr [rax], eax ; add bh, bh ; ret 0xfa83
0x0000020000554352 : enter -0x7df1, 0x1b ; add dword ptr [rax], eax ; add bh, bh ; ret 0x8348
0x0000020000515de5 : enter -0x7df1, 0x1e ; ret 9
0x00000200006bdce7 : enter -0x7df1, 0x28 ; add dword ptr [rax], eax ; add bh, bh ; ret 0xfa83
0x00000200004489f5 : enter -0x7df1, 0x50 ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x00000200000ccab5 : enter -0x7df1, 0xe ; xor al, 0xd ; add byte ptr [rbp - 0x75], cl ; ret 0xb70f
0x0000020000127c65 : enter -0x7ef5, -0x3f ; ret
0x0000020000161374 : enter -0x88, -1 ; ret
0x00000200005b5318 : enter -0xa, -0x75 ; rol byte ptr [rbp - 0x75], 1 ; ret 0x1b9
0x0000020000190e15 : enter -0xb8, -0x3e ; jmp 0x20000190dcc
0x000002000043baef : enter -0xbf, -0x3e ; jmp 0x2000043bac5
0x00000200004a7897 : enter -0xc18, -0x2b ; ret
0x000002000013c1ec : enter -0xe8b, 0x48 ; xor eax, eax ; ret
0x000002000053f340 : enter -0xe8e, -0x75 ; ret
0x000002000041df7f : enter -0xf8e, -0x7d ; loopne 0x2000041dfaa ; ret
0x0000020000673817 : enter -1, 0x75 ; sbb al, ch ; ret
0x000002000067258d : enter -1, 5 ; ret
0x000002000070b742 : enter -2, -0x75 ; ret 0xff2
0x0000020000094f87 : enter -3, -1 ; jmp 0x200001911c8
0x00000200000d10e5 : enter 0, -0xa ; ret
0x00000200004b2805 : enter 0, 0 ; call 0x2000014ea56
0x0000020000457aef : enter 0, 0 ; call r10
0x000002000048893b : enter 0, 0 ; inc rdx ; jmp 0x2000048891f
0x00000200004e285d : enter 0, 0 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000df538 : enter 0, 0 ; ret
0x00000200000820a2 : enter 0, 0 ; shr eax, 0x13 ; and al, 1 ; ret
0x000002000005580f : enter 0x12, -0xa ; ret
0x0000020000462743 : enter 0x13e8, 0x12 ; ret
0x000002000044787b : enter 0x13e8, 0x7d ; ret 0x49ff
0x0000020000439492 : enter 0x16, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000643427 : enter 0x1674, -0x75 ; ret
0x0000020000157729 : enter 0x188, 0x75 ; mov rax, r11 ; ret
0x00000200000c06bd : enter 0x1a0, 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x348
0x00000200006bb617 : enter 0x1b9, 0 ; add byte ptr [rax], al ; call rax
0x00000200005e5df9 : enter 0x1de8, 0x6f ; ret 0x90ff
0x0000020000146813 : enter 0x2175, -0x7d ; ret 0x83f8
0x0000020000521819 : enter 0x21e8, 0x5d ; ret
0x0000020000146ab7 : enter 0x2275, -0x7d ; ret 0x83f8
0x0000020000144e0b : enter 0x2375, -0x7d ; ret 0x83f8
0x00000200007801b6 : enter 0x2575, -0x7d ; ret
0x00000200000b3cc3 : enter 0x2674, -0xa ; ret 0xf08
0x0000020000783cc7 : enter 0x2675, -0x7d ; ret
0x000002000052a450 : enter 0x2ae8, -0x2c ; ret 0xfff
0x000002000070a07a : enter 0x2b41, -0x36 ; mov dword ptr [r8], ecx ; ret
0x00000200003e4624 : enter 0x2b45, -0x38 ; mov eax, r9d ; ret
0x000002000014ea36 : enter 0x2b48, -0x30 ; jne 0x2000014ea39 ; sfence ; ret
0x000002000014ea06 : enter 0x2b49, -0x30 ; jne 0x2000014ea09 ; sfence ; ret
0x00000200000ddfa3 : enter 0x2d73, -0x75 ; ret 0x348
0x0000020000524d78 : enter 0x2e8, 0x2b ; ret
0x00000200001eb115 : enter 0x2eb, 0x33 ; leave ; lea rax, qword ptr [rcx + rdx] ; ret
0x000002000052604b : enter 0x2fe8, 0x18 ; ret
0x000002000045012a : enter 0x30e8, -0x5d ; ret 0x8bff
0x000002000051a349 : enter 0x31e8, -0x2b ; ret
0x00000200003e47bb : enter 0x3345, -0x38 ; mov eax, r9d ; ret
0x00000200001a233b : enter 0x3345, -0x40 ; mov dl, 2 ; call 0x2000004e590
0x000002000010f65a : enter 0x3345, -0x40 ; mov rdx, r9 ; call 0x2000004b901
0x000002000017a170 : enter 0x3349, -0x3f ; mov rcx, rax ; call rdx
0x000002000012003a : enter 0x33c3, -0x40 ; ret
0x00000200005493b3 : enter 0x348, -0x3e ; jmp 0x2000054934e
0x000002000043aaf8 : enter 0x3b45, -0x3f ; jb 0x2000043aae5 ; mov eax, edx ; ret
0x000002000043aaf8 : enter 0x3b45, -0x3f ; jb 0x2000043aae6 ; mov eax, edx ; ret
0x0000020000452248 : enter 0x3b49, -0x38 ; cmovne eax, edx ; ret
0x000002000013b679 : enter 0x3b4d, -0x38 ; jb 0x2000013b671 ; mov rax, r10 ; ret
0x000002000052b4ff : enter 0x3be8, -0x40 ; ret 0x89ff
0x00000200000bf2fd : enter 0x3de8, 0x79 ; cmc ; dec dword ptr [rax - 0x7f] ; ret
0x000002000012a6b8 : enter 0x3e0, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x0000020000116040 : enter 0x40b5, 0 ; add rsp, 0x38 ; ret
0x0000020000129f85 : enter 0x4103, -0x75 ; ror dword ptr [rbp + 3], 4 ; ret 0x8d41
0x000002000003859c : enter 0x4119, -0x75 ; ret 0xeac1
0x00000200005804ab : enter 0x4166, -0x77 ; add bpl, cl ; ret 0xf32b
0x0000020000118c25 : enter 0x4166, 0x3b ; ret
0x0000020000157588 : enter 0x4188, -1 ; jne 0x20000157589 ; mov rax, r11 ; ret
0x0000020000128080 : enter 0x448b, 0x24 ; jo 0x2000012808f ; ret 0xc803
0x0000020000674e87 : enter 0x44ff, -0x73 ; adc al, 0x23 ; ret 0x8948
0x000002000067973d : enter 0x44ff, -0x76 ; ret
0x0000020000672793 : enter 0x44ff, 0xf ; ret 0x8944
0x0000020000069e7b : enter 0x450f, -0x3e ; ret
0x00000200000f0edd : enter 0x45ff, -0x7b ; test byte ptr [rdi], 0x4f ; ret 0x8388
0x00000200000f89e8 : enter 0x460f, -0x3f ; ret
0x0000020000218f6b : enter 0x473, 0x4c ; mov dword ptr [rdx + 0x38], eax ; xor eax, eax ; ret
0x0000020000052b60 : enter 0x477, 0x48 ; sub eax, ecx ; ret
0x00000200000b565d : enter 0x4801, 0x3b ; ret 0x1674
0x0000020000242d71 : enter 0x4803, 0x33 ; ror byte ptr [rax - 0x75], 1 ; ret
0x000002000010e355 : enter 0x4808, -0x75 ; adc byte ptr [rax - 0x7d], r9b ; ret 0x4408
0x000002000006a95f : enter 0x480b, -0x77 ; add ebp, ecx ; ret 0xfff6
0x000002000006a75e : enter 0x480c, -0x77 ; add ebp, ecx ; ret
0x00000200001b6de5 : enter 0x4828, -0x75 ; pop rsp ; and al, 8 ; ret
0x000002000009d9ee : enter 0x48c3, -0x73 ; add eax, 0x287a89 ; ret
0x00000200000f080c : enter 0x48f0, 0xf ; mov cl, 0x3d ; ret 0x21cb
0x0000020000147b88 : enter 0x48f2, 0xf ; sub al, cl ; ret
0x00000200001fb566 : enter 0x48ff, -0x3f ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200005b59d3 : enter 0x48ff, -0x75 ; fdiv dword ptr [rbx] ; ror byte ptr [rax - 1], cl ; ret
0x000002000051eba4 : enter 0x48ff, -0x75 ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200005f5184 : enter 0x48ff, -0x75 ; shr eax, cl ; ret 0xa9f
0x00000200005bd141 : enter 0x48ff, -0x75 ; xor r9b, r13b ; pop rcx ; ret 0xffe9
0x000002000069ecbb : enter 0x48ff, -0x77 ; pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x0000020000673a80 : enter 0x48ff, 0x3b ; ret 0x840f
0x00000200000b0dc8 : enter 0x4901, 0x3b ; ret
0x000002000010f8ea : enter 0x491d, -0x7d ; ret 0x4820
0x0000020000465b22 : enter 0x49ff, -0x75 ; iretd ; call 0x20000061dc7
0x00000200001f3626 : enter 0x49ff, -0x75 ; ret
0x00000200006add02 : enter 0x49ff, -0x75 ; ror byte ptr [rax - 1], 1 ; ret 0x3966
0x000002000021e3ef : enter 0x4c03, -0x75 ; ret
0x00000200003e883e : enter 0x4c08, 3 ; ret 0x3b49
0x0000020000459fb9 : enter 0x4cff, -0x75 ; ret
0x000002000005b27b : enter 0x4d08, -0x7b ; sal byte ptr [rbp + 4], 0x48 ; mov eax, edx ; ret
0x00000200004e1888 : enter 0x4e11, 0 ; add rcx, r8 ; jmp rcx
0x00000200004a8d3c : enter 0x4ee8, -0x3f ; ret
0x00000200005254ec : enter 0x4ee8, 0x20 ; ret
0x00000200001b772c : enter 0x50ff, 0x10 ; add rsp, 0x28 ; ret
0x000002000044da3d : enter 0x51e8, 0x1b ; ret 0x8bff
0x00000200007d16e9 : enter 0x51e8, 0x5e ; cwde ; dec dword ptr [rax - 0x75] ; ret
0x00000200004fdeee : enter 0x54e8, 0x19 ; ret 0x48ff
0x0000020000041704 : enter 0x572, 0x48 ; add esp, 0x38 ; ret
0x00000200000cf651 : enter 0x572, 0x4a ; lea eax, dword ptr [rdx + rax] ; ret
0x00000200006f3749 : enter 0x574, 0x48 ; add esp, 0x28 ; ret
0x00000200004aa1f3 : enter 0x574, 0x48 ; cmp edx, ecx ; jb 0x200004aa204 ; ret
0x000002000014682f : enter 0x575, -0x7d ; ret 0xebff
0x0000020000727aac : enter 0x588, -0x62 ; ret 0xffbc
0x000002000066d552 : enter 0x58a, 0x1b ; xchg dh, cl ; jmp qword ptr [rdx]
0x00000200007c4df0 : enter 0x58b, 0x35 ; ret
0x000002000044576d : enter 0x58b8, 0 ; add al, al ; ret
0x000002000051fe1c : enter 0x5ee8, 0x7a ; ret
0x000002000001155e : enter 0x5f, 0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003f656b : enter 0x5fff, 0x5e ; pop rbx ; ret
0x0000020000518f16 : enter 0x64e8, -0x17 ; ret
0x000002000051acd5 : enter 0x65e8, -0x38 ; ret
0x000002000014ba02 : enter 0x6602, -9 ; ret 0x100
0x00000200001329c6 : enter 0x6608, -0x77 ; push rbp ; add bh, bh ; ret 0x8341
0x000002000015102f : enter 0x6608, 3 ; ret
0x0000020000555af0 : enter 0x6630, 0xb ; ret 0x4166
0x00000200007a02dd : enter 0x673, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000062c4e1 : enter 0x674, -0x48 ; add dword ptr [rax], eax ; add al, al ; ret
0x000002000002ccaf : enter 0x674, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000005285a : enter 0x674, -0x7d ; jmp 0x1ffc3099d6c
0x00000200000847dd : enter 0x675, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000021dd30 : enter 0x676, 0x41 ; and dword ptr [rax + 0x28], 0 ; ret
0x000002000004e77d : enter 0x677, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001b699c : enter 0x677, 0x45 ; mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x000002000020fe53 : enter 0x677, 0x48 ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x0000020000101823 : enter 0x67e8, 0x4c ; hlt ; dec dword ptr [rax - 0x7d] ; ret
0x000002000062c478 : enter 0x6975, -0x48 ; add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x000002000023d74a : enter 0x6a74, -0x75 ; ret 0xe083
0x00000200003fcd4f : enter 0x6b48, -0x40 ; cmp byte ptr [rax + 3], cl ; ret
0x00000200004eeee3 : enter 0x6be8, 0x4e ; ret 0xe9ff
0x000002000079eefe : enter 0x6c89, 0x24 ; and byte ptr [rbp - 0x75], al ; ret 0xca83
0x0000020000529b0e : enter 0x6ce8, -0x23 ; ret 0x44ff
0x00000200007ae16a : enter 0x70e8, 0x21 ; ret 0x44ff
0x000002000043adfe : enter 0x70e8, 0x24 ; ret
0x000002000051c018 : enter 0x72e8, 0x3b ; ret 0x48ff
0x0000020000522508 : enter 0x72e8, 0x53 ; ret
0x000002000013ccbc : enter 0x774, -0xa ; ret 0x7507
0x00000200000c6637 : enter 0x775, -0x75 ; add eax, 0x2e2bc4 ; ret
0x0000020000146ad2 : enter 0x775, -0x7d ; ret 0x75ff
0x000002000002ceb3 : enter 0x788b, 0x40 ; jmp 0x2000002ce81
0x000002000051700d : enter 0x7de8, 0x36 ; ret
0x00000200004bd61c : enter 0x7ee8, -0x59 ; ret 0xe9ff
0x000002000043afbb : enter 0x7fe8, 0x2a ; ret
0x00000200006ac1ad : enter 0x875, -0x7f ; jmp qword ptr [rbx]
0x0000020000565d8e : enter 0x96b, 0 ; add rsp, 0x28 ; ret
0x000002000007c7dc : enter 0xa3a, 0x7e ; leave ; mov byte ptr [rdx], cl ; ret
0x00000200007cdbf0 : enter 0xa75, -0x75 ; ret 0x8341
0x000002000042ea96 : enter 0xa75, -0x75 ; ret 0xb9eb
0x0000020000210952 : enter 0xb7e, 0x45 ; mov ecx, ebx ; mov r8d, edx ; jmp 0x20000210968
0x00000200000d62f4 : enter 0xc, 0x48 ; add esp, 0x28 ; ret
0x00000200000fce28 : enter 0xc75, -0x75 ; add eax, 0x2ac423 ; ret
0x000002000043af9e : enter 0xce8, 0x29 ; ret
0x0000020000466537 : enter 0xd75, -0x75 ; ret
0x000002000061a6ed : enter 0xde8, 0x29 ; ret
0x0000020000236d64 : enter 0xdeb, -0xa ; ret 0x7440
0x000002000050315a : enter 0xf08, -0x7b ; and ch, byte ptr [rax + 0xe] ; add bh, bh ; ret 0xe2eb
0x000002000043459a : enter 0xf20, -0x46 ; loop 0x200004345b8 ; jb 0x200004345ba ; ret
0x0000020000426d1a : enter 0xf25, -0x49 ; ret
0x0000020000420e68 : enter 0xf41, -0x49 ; add cl, byte ptr [rcx - 0x7d] ; ret 0x6602
0x0000020000420eee : enter 0xf41, -0x49 ; add cl, byte ptr [rcx - 0x7d] ; ret 0xe902
0x0000020000420dfa : enter 0xf41, -0x49 ; cmp cl, byte ptr [rcx - 0x7d] ; ret 0x6602
0x000002000068dbdb : enter 0xf41, -0x49 ; leave ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200002121fa : enter 0xf41, -0x49 ; ret 0x4166
0x0000020000215510 : enter 0xf41, -0x49 ; ret 0x6b48
0x000002000060eff5 : enter 0xf41, -0x49 ; ret 0x8d48
0x0000020000247b6a : enter 0xf41, -0x51 ; sal edi, cl ; ror dword ptr [rcx - 0x7d], 1 ; ret 0x4508
0x000002000013d89d : enter 0xf41, 0x44 ; fisttp qword ptr [rax + 0x63] ; ret
0x00000200005a87a2 : enter 0xf41, 0x45 ; ret
0x00000200007ccd09 : enter 0xf44, -0x49 ; ret
0x0000020000410948 : enter 0xf44, 0x47 ; ret 0x8b49
0x000002000014e9c7 : enter 0xf48, -0x3d ; ror byte ptr [r8 + 0xf], 1 ; ret
0x00000200007283d2 : enter 0xf48, 0x4f ; ror dword ptr [rax + 1], 0xd ; ret 0xbfcd
0x000002000021318b : enter 0xf49, 0x47 ; ret 0x8548
0x000002000023204f : enter 0xf66, 0x6a ; fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000020000232776 : enter 0xf66, 0x6f ; ret
0x0000020000069f94 : enter 0xf66, 0x6f ; ret 0xbe49
0x000002000012e35b : enter 0xfe8, -0x46 ; cli ; dec dword ptr [rax + 0xd] ; ret 0
0x0000020000698cd8 : enter 0xff, 0x48 ; add esp, 0x40 ; pop rbx ; ret
0x000002000067974f : enter 0xfff, -0x49 ; ret 0x6b48
0x000002000001f587 : enter 1, 0 ; add rsp, 0x28 ; ret
0x000002000001bedd : enter 1, 0 ; ret
0x00000200004cc603 : enter 3, 0 ; call 0x200000f0307
0x000002000049a3bd : enter 6, 0 ; call 0x200000be967
0x000002000008b14c : enter 6, 0 ; shr al, 6 ; and al, 1 ; ret
0x000002000052d77e : enter 8, -0x7d ; jmp qword ptr [rax]
0x0000020000600d6e : fadd dword ptr [r9 + rcx*4 + 0x45] ; in al, -0x75 ; ret 0x8d48
0x00000200006a4204 : fadd dword ptr [rax + rax] ; add bl, dh ; movq qword ptr [rcx], mm0 ; ret
0x0000020000537217 : fadd dword ptr [rax] ; add byte ptr [rax], al ; call 0x20000157887
0x00000200000c2e73 : fadd dword ptr [rax] ; add byte ptr [rax], al ; call qword ptr [rax]
0x000002000046339c : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rcx, rsi ; call 0x2000003f5d1
0x000002000046808f : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000793003 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200006e174c : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000125ce7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200004b4a6c : fadd dword ptr [rax] ; add byte ptr [rbp - 0xf38740], al ; ret
0x00000200005bd03e : fadd dword ptr [rbp + 0x2f880fc0] ; ret 0xffe9
0x000002000004c1cf : fadd dword ptr [rbp + 0x33] ; rol byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200006c662b : fadd dword ptr [rbp + 0x3b] ; sal dword ptr [rbp + rcx + 0x41], -1 ; ret
0x00000200005bd011 : fadd dword ptr [rbp + 0x5c880fc0] ; ret 0xffe9
0x0000020000587ad4 : fadd dword ptr [rbp + 0x64880fc0] ; ret 0xffe6
0x00000200002000c5 : fadd dword ptr [rbp + rcx*4 + 0x42] ; and al, ch ; push rcx ; ret
0x00000200004a0520 : fadd dword ptr [rbp - 0x1177f040] ; call qword ptr [rdx]
0x0000020000515ad4 : fadd dword ptr [rbp - 0x3276f040] ; ret
0x000002000055c385 : fadd dword ptr [rbp - 0x74598a40] ; ret
0x0000020000510673 : fadd dword ptr [rbp - 0x74b28740] ; ret
0x0000020000558ffa : fadd dword ptr [rbp - 0x74d58640] ; ret
0x000002000005c741 : fadd dword ptr [rbp - 0x74ec8640] ; ret
0x000002000052f9ce : fadd dword ptr [rbp - 0x74f78640] ; ret
0x000002000068f168 : fadd dword ptr [rbp - 0x74fd8740] ; ret
0x0000020000107a79 : fadd dword ptr [rbp - 0x75] ; ret
0x000002000010c0d3 : fadd dword ptr [rbp - 0x75] ; ret 0x840f
0x000002000008646c : fadd dword ptr [rbp - 0x7b] ; sal byte ptr [rbp + 8], 0x8b ; ret
0x00000200006062f0 : fadd dword ptr [rbx + rcx*4 + 0x45] ; ret
0x0000020000529c48 : fadd dword ptr [rbx + rcx*4 - 0x3d] ; call 0x20000157547
0x000002000022c228 : fadd dword ptr [rbx - 0x74b3fb20] ; ret
0x0000020000037c8b : fadd dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000020000726154 : fadd dword ptr [rbx] ; lahf ; dec dword ptr [rax + 0x2b] ; ret
0x00000200001797ce : fadd dword ptr [rbx] ; ret 0x4589
0x0000020000534edb : fadd dword ptr [rbx] ; ret 0xc285
0x00000200005e82b7 : fadd dword ptr [rbx] ; ret 0xf89
0x0000020000471194 : fadd dword ptr [rcx + 0x3b] ; ret 0x870f
0x000002000009a59d : fadd dword ptr [rcx + 0x6b4c000f] ; ret 0x4864
0x00000200005e4286 : fadd dword ptr [rcx + 0xf] ; ret
0x0000020000558fa8 : fadd dword ptr [rcx + 0xf] ; xchg eax, esp ; rol dword ptr [rcx - 0x75], -0x3f ; ret
0x0000020000600d6f : fadd dword ptr [rcx + rcx*4 + 0x45] ; in al, -0x75 ; ret 0x8d48
0x0000020000084e53 : fadd dword ptr [rcx - 0x48] ; ret 0
0x0000020000212340 : fadd dword ptr [rcx - 0x73] ; add qword ptr [rcx - 0x7d], rax ; ret 0x4402
0x00000200000e40d4 : fadd dword ptr [rcx - 0x75] ; ret
0x00000200001e99ff : fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x000002000067070f : fadd dword ptr [rcx - 0x75] ; ret 0xc91a
0x000002000077b544 : fadd dword ptr [rcx - 0x75] ; ret 0xe7f7
0x000002000046f9ca : fadd dword ptr [rcx - 0x7c] ; sal byte ptr [rbp - 0x4e], 0xeb ; ret 0xcccc
0x0000020000787474 : fadd dword ptr [rcx - 0x7d] ; ret
0x00000200005c7de8 : fadd dword ptr [rcx - 0x7d] ; ret 0xeb08
0x0000020000117442 : fadd dword ptr [rcx - 1] ; ret
0x000002000066e78e : fadd dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000043259 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001fd060 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; call rax
0x00000200000a9585 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000021d08a : fadd dword ptr [rdi + rcx + 0x42] ; ret
0x00000200001323d2 : fadd dword ptr [rdi + rcx - 0x49] ; mov byte ptr [rcx + 0xf], 0xb7 ; ret
0x00000200001852af : fadd dword ptr [rdi] ; add byte ptr [rax], al ; jmp 0x200000614d2
0x0000020000220dff : fadd dword ptr [rdi] ; add rsp, 0x28 ; ret
0x00000200004bd962 : fadd dword ptr [rdx] ; add byte ptr [rax], al ; call 0x200000e8067
0x0000020000173347 : fadd dword ptr [rip - 0x74b80000] ; ret
0x00000200005abc94 : fadd qword ptr [rax] ; add cl, ch ; adc al, 0xe3 ; jmp 0x200411db3a7
0x00000200003f6569 : fadd qword ptr [rbx + 0x5e5fffc8] ; pop rbx ; ret
0x00000200006874e4 : fadd qword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x0000020000411a49 : fadd qword ptr [rcx + 0xb] ; fiadd word ptr [rcx - 0x48] ; ret 0
0x00000200007b03ef : fadd qword ptr [rcx - 0x75] ; ret 0x8949
0x0000020000116f1f : fadd qword ptr [rcx - 1] ; rol dword ptr [rbx + rdi - 0x32], 0x72 ; ret 0x8b41
0x000002000063270c : fadd st(4), st(0) ; mov ecx, 0xc48348ff ; pop rbx ; ret
0x0000020000173922 : fbld dword ptr [rsi - 7] ; dec dword ptr [rax + 0x63] ; ret
0x000002000018b5a1 : fbstp dword ptr [r11] ; shr al, cl ; salc ; ret 0xfffc
0x0000020000225f7e : fbstp dword ptr [rbp + rbp - 0x76] ; add ecx, dword ptr [rax - 1] ; ret
0x00000200003e83b0 : fbstp dword ptr [rbp - 0x74bbffe7] ; ret
0x000002000024f195 : fbstp dword ptr [rbx - 0x74b3fff6] ; xchg eax, esp ; ret 0x95c0
0x00000200003fd31d : fbstp dword ptr [rbx] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000018b5a2 : fbstp dword ptr [rbx] ; shr al, cl ; salc ; ret 0xfffc
0x00000200001d6087 : fbstp dword ptr [rdx + rsi*2 - 0xa] ; ret
0x00000200004a7edc : fbstp dword ptr [rsi + rdx - 0xa] ; ret
0x000002000070dd92 : fcmovb st(0), st(4) ; add al, 0 ; add rsp, 0x28 ; ret
0x00000200005d4f6c : fcmovbe st(0), st(4) ; call qword ptr [rax]
0x00000200005d4f49 : fcmovbe st(0), st(4) ; jmp qword ptr [rdi]
0x000002000065874f : fcmove st(0), st(2) ; dec dword ptr [rax + 0x3b] ; ret 0x2274
0x0000020000658784 : fcmove st(0), st(2) ; dec dword ptr [rax + 0x3b] ; ret 0x840f
0x00000200005d4e03 : fcmovnbe st(0), st(4) ; jmp qword ptr [rsi]
0x00000200001a6f8a : fcmovne st(0), st(5) ; dec dword ptr [rax - 0x7d] ; jmp qword ptr [rax]
0x00000200004e1762 : fcmovnu st(0), st(0) ; str word ptr [rbx + rcx*4 + 5] ; ret
0x00000200005e9f41 : fcmovnu st(0), st(2) ; ret 0x8bff
0x00000200005139b3 : fcmovu st(0), st(4) ; or dword ptr [rax], eax ; ret
0x00000200003e26fa : fcom dword ptr [rax - 0x9fffffd] ; ret 0xf01
0x0000020000220029 : fcom dword ptr [rcx] ; add byte ptr [rax + 0x3b], cl ; ret 0xeb7c
0x00000200000411b9 : fcom qword ptr [rdx] ; add dh, dh ; ret
0x0000020000125c52 : fcom qword ptr [rip - 0x74b3fffb] ; ret
0x00000200001b421d : fcom qword ptr [rsi] ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200005d4cd0 : fcom st(0), st(4) ; jmp qword ptr [rcx]
0x00000200005d4ce4 : fcom st(0), st(4) ; jmp qword ptr [rdx]
0x00000200005d50e4 : fcom st(4) ; call qword ptr [rbx]
0x00000200005d5143 : fcom st(4) ; call qword ptr [rsi]
0x00000200005d517f : fcom st(4) ; jmp qword ptr [rbx]
0x00000200000243bf : fcomi st(6) ; ret 0x751e
0x0000020000157a37 : fcomp dword ptr [rax + rax] ; ret
0x00000200001059c0 : fcomp dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000000f13b : fcomp dword ptr [rbx] ; jmp qword ptr [rbx]
0x000002000003dea3 : fcomp dword ptr [rbx] ; leave ; and r10d, ecx ; mov eax, r10d ; ret
0x00000200006c7466 : fcomp dword ptr [rbx] ; rol byte ptr [rbx - 0x3f7c0520], 7 ; ret
0x00000200001b303b : fcomp dword ptr [rbx] ; sal bh, 0xd8 ; inc eax ; ret
0x00000200004d00a9 : fcomp dword ptr [rdi] ; add byte ptr [rax - 0x7d], cl ; ret 0x4408
0x0000020000224e59 : fcomp dword ptr [rdi] ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000224db8 : fcomp dword ptr [rdi] ; add byte ptr [rcx - 0x7f], cl ; ret 0xa00
0x00000200001966a8 : fcomp qword ptr [rdi] ; int1 ; dec dword ptr [rbx - 0x74bad7ab] ; ret
0x000002000024c623 : fcomp st(0), st(0) ; ror dword ptr [rcx - 0x75], 1 ; ret 0x8b4d
0x00000200005d4b64 : fcomp st(0), st(4) ; call qword ptr [rcx]
0x000002000063a568 : fcompi st(7) ; ret
0x00000200004ae1b2 : fcos ; add rsp, 0x28 ; ret
0x0000020000505c67 : fcos ; ret
0x0000020000004192 : fdecstp ; ret 0x7502
0x00000200004aa460 : fdecstp ; ret 0x7520
0x00000200004b6d5a : fdiv dword ptr [r10 - 0x3174b7ff] ; call rax
0x0000020000557f1c : fdiv dword ptr [r11] ; ror byte ptr [rax - 0x77], 0x45 ; ret 0x8948
0x0000020000120e30 : fdiv dword ptr [rax - 0x49f00012] ; ret
0x000002000065003d : fdiv dword ptr [rbp - 0x3e] ; jmp 0x200006500ad
0x0000020000557f1d : fdiv dword ptr [rbx] ; ror byte ptr [rax - 0x77], 0x45 ; ret 0x8948
0x00000200005b59d7 : fdiv dword ptr [rbx] ; ror byte ptr [rax - 1], cl ; ret
0x00000200001e53ba : fdiv dword ptr [rdx - 0x2e] ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200004b6d5b : fdiv dword ptr [rdx - 0x3174b7ff] ; call rax
0x00000200003cf1f1 : fdiv dword ptr [rdx - 0x36] ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000f5b48 : fdiv dword ptr [rsp + rdi + 0x2b] ; ret
0x000002000061a860 : fdiv qword ptr [rcx] ; ret
0x00000200004d7c33 : fdiv st(4) ; dec dword ptr [rax - 0x77] ; pop rdi ; sub cl, ch ; ret
0x000002000053b04c : fdiv st(4), st(0) ; or al, byte ptr [rax] ; ret
0x0000020000105b90 : fdiv st(6) ; ret
0x000002000051eafe : fdiv st(6) ; ret 0x7404
0x0000020000119093 : fdiv st(6) ; ret 0xf10
0x00000200007ad9b0 : fdiv st(7) ; ret
0x00000200005572d8 : fdiv st(7), st(0) ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000681108 : fdiv st(7), st(0) ; add rsp, 0x28 ; ret
0x00000200005f6ec3 : fdiv st(7), st(0) ; call 0x2000021e375
0x000002000053ae1b : fdiv st(7), st(0) ; je 0x2000053ae16 ; xor eax, eax ; ret
0x000002000053ae0c : fdiv st(7), st(0) ; jne 0x2000053ae1f ; mov eax, 1 ; ret
0x0000020000563ebe : fdiv st(7), st(0) ; jne 0x20000563ecf ; add rsp, 0x58 ; ret
0x0000020000563ebd : fdiv st(7), st(0) ; jne 0x20000563ed0 ; add rsp, 0x58 ; ret
0x000002000053755b : fdiv st(7), st(0) ; lea r8d, dword ptr [rdx + 0x78] ; call 0x20000157889
0x000002000060d21e : fdivp st(5) ; ret
0x000002000045efcb : fdivp st(7) ; add rsp, 0x28 ; ret
0x000002000022985c : fdivp st(7) ; add rsp, 0x38 ; ret
0x0000020000708e78 : fdivp st(7) ; dec dword ptr [rax - 0x75] ; ret
0x00000200005392c1 : fdivp st(7) ; ja 0x200005ea55e ; ret
0x0000020000517e5e : fdivp st(7) ; jne 0x200005f2aea ; ret
0x0000020000517ad9 : fdivp st(7) ; mov dword ptr [rdi], eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005377fb : fdivp st(7) ; mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000518db4 : fdivp st(7) ; or byte ptr [r10], dl ; ret
0x0000020000111de0 : fdivp st(7) ; ret
0x000002000051cc50 : fdivp st(7) ; test al, 3 ; sete al ; ret
0x0000020000646072 : fdivp st(7) ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000050c205 : fdivp st(7) ; xor edx, edx ; call 0x20000068456
0x00000200005d0d74 : fdivr dword ptr [r10 + 0x20666e57] ; call 0x2000024d009
0x00000200003f379e : fdivr dword ptr [rbx] ; ret
0x0000020000203e61 : fdivr dword ptr [rbx] ; ret 0x470f
0x0000020000400010 : fdivr dword ptr [rbx] ; ret 0x830f
0x0000020000181128 : fdivr dword ptr [rbx] ; ret 0x850f
0x000002000024dc34 : fdivr dword ptr [rbx] ; ret 0xd775
0x00000200005d0d75 : fdivr dword ptr [rdx + 0x20666e57] ; call 0x2000024d008
0x00000200000ed91a : fdivr dword ptr [rdx] ; sahf ; ret
0x0000020000619124 : fdivr dword ptr [rsi] ; ret
0x0000020000230ccb : fdivr qword ptr [rax + 1] ; ret
0x000002000060fbb8 : fdivr qword ptr [rbp - 0x4c] ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000646f10 : fdivr qword ptr [rcx] ; ret
0x0000020000463dc0 : fdivr st(3) ; ret 0x85ff
0x00000200005b36bb : fdivr st(6), st(0) ; dec dword ptr [rax - 0x7d] ; ret
0x000002000065f23b : fdivr st(6), st(0) ; ret 0x7404
0x00000200006974f7 : fdivr st(7) ; add rsp, 0x48 ; ret
0x0000020000694124 : fdivr st(7) ; add rsp, 0x98 ; ret
0x0000020000626b63 : fdivr st(7) ; call r10
0x0000020000201790 : fdivr st(7) ; dec esp ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000703e99 : fdivr st(7) ; mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x000002000013b123 : fdivr st(7) ; ret
0x00000200006f70b5 : fdivr st(7) ; ret 0x8348
0x00000200000ff98b : fdivr st(7) ; ret 0x8d4c
0x00000200007abbc1 : fdivr st(7) ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000019a6cc : fdivrp st(1) ; push rsi ; ret 0xf42
0x00000200001b152b : fdivrp st(6) ; ret
0x000002000050c220 : femms ; add bh, bh ; ret
0x00000200005c834e : ffree st(4) ; push qword ptr [rdx] ; ret
0x0000020000619a2f : ffree st(4) ; ret
0x00000200003e1b2a : ffree st(7) ; jmp qword ptr [rcx]
0x0000020000231b93 : fiadd dword ptr [rbp + 0xf] ; cmp bl, cl ; ret 0xf66
0x0000020000404d91 : fiadd dword ptr [rbp + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000200004d367c : fiadd dword ptr [rbp - 0x74258a2e] ; ret
0x00000200006c65f5 : fiadd dword ptr [rbp - 0x75] ; ret 0x8b41
0x0000020000131b22 : fiadd dword ptr [rbx - 0x75bb0032] ; ret
0x000002000008da02 : fiadd dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200007792be : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000020000650572 : fiadd dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8444
0x0000020000137b29 : fiadd dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xf641
0x00000200006d6ab3 : fiadd dword ptr [rcx - 0x46] ; and eax, 0x41c00002 ; mov eax, edx ; ret
0x000002000055ff5b : fiadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x00000200004254db : fiadd dword ptr [rcx - 0x76] ; nop ; ret 6
0x0000020000039dd8 : fiadd dword ptr [rcx - 0x76] ; ret 0xc985
0x00000200001c164e : fiadd dword ptr [rdi + rcx + 0x42] ; ret
0x00000200000f09a4 : fiadd dword ptr [rdx + rdi - 0x7e] ; ret
0x000002000045f1a2 : fiadd dword ptr [rsi - 0x74b70031] ; ret
0x00000200004c941e : fiadd word ptr [rax + rax] ; add dh, dh ; ret
0x00000200004475d4 : fiadd word ptr [rax] ; add byte ptr [rax], al ; inc edx ; jmp 0x200004475bc
0x000002000017d3ba : fiadd word ptr [rbp - 0x75] ; ret 0x8b49
0x00000200000c0655 : fiadd word ptr [rbx + 0x3b4120c0] ; ret
0x00000200004a900b : fiadd word ptr [rbx + rcx*4 + 0x6d] ; or dh, dh ; ret
0x00000200000303ec : fiadd word ptr [rcx + 0xf] ; pushfq ; ret 0x8341
0x0000020000411a4c : fiadd word ptr [rcx - 0x48] ; ret 0
0x0000020000638b06 : fiadd word ptr [rcx] ; ret
0x000002000012949a : ficom dword ptr [rbx - 0x3fccffc0] ; ret
0x00000200007bd189 : ficom dword ptr [rdi - 0x3b7cb701] ; ret
0x000002000079ccda : ficom word ptr [rdx - 0x48] ; call qword ptr [rbx]
0x00000200000df9cd : ficomp dword ptr [rdx + 0xc] ; add dh, dh ; ret 0xf10
0x0000020000114bab : ficomp dword ptr [rsi] ; add byte ptr [rcx], al ; add rsp, 0x38 ; ret
0x000002000057fed6 : ficomp word ptr [rdi] ; call 0x1ffc4578fe2
0x0000020000022878 : fidiv dword ptr [rax - 0x75] ; push rcx ; jl 0x20000022811 ; ret 0xb60f
0x00000200006a9c15 : fidiv dword ptr [rbp - 0xf] ; jmp 0x200006a9c25
0x000002000014025e : fidiv dword ptr [rbx + 0x2a] ; mov byte ptr [r10], 0x2e ; inc r10 ; jmp 0x20000140286
0x00000200001b6745 : fidiv dword ptr [rbx] ; ret 0xf633
0x00000200001278df : fidiv dword ptr [rbx] ; rol byte ptr [rcx - 0x75], 1 ; ret 0xc8c1
0x00000200001e96fc : fidiv dword ptr [rbx] ; ror byte ptr [rax - 0x3f], cl ; sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000055b2c3 : fidiv dword ptr [rbx] ; shr al, cl ; xor eax, 0x8affcf1d ; ret
0x000002000049a3ae : fidiv dword ptr [rdx] ; ret 0xebc0
0x000002000002414f : fidiv word ptr [rsi] ; adc al, 0 ; add rsp, 0x28 ; ret
0x00000200006f5e66 : fidiv word ptr [rsi] ; ret 0x88ff
0x00000200000d3403 : fidiv word ptr [rsp - 0xa] ; ret
0x0000020000427b36 : fidivr dword ptr [rax - 0x3ffffff3] ; ret
0x000002000068f912 : fidivr dword ptr [rbp + 0x48ccffab] ; add esp, 0x38 ; ret
0x00000200000e964f : fidivr word ptr [rax + 1] ; ret
0x00000200006f5e61 : fidivr word ptr [rdi - 0x21e27701] ; ret 0x88ff
0x0000020000401f43 : fild dword ptr [rax - 0x7c] ; dec dword ptr [rdi] ; test ecx, eax ; ret
0x000002000024f73f : fild dword ptr [rbp - 0x6bf0be01] ; ret
0x0000020000082cfb : fild dword ptr [rbp - 0x75] ; ret
0x0000020000445a20 : fild dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], 0x45 ; ret 0x8941
0x00000200006c42ee : fild dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x95 ; ret
0x000002000046f73b : fild dword ptr [rbx + 0x7500fa7f] ; sub bh, bh ; ret
0x00000200001cf939 : fild dword ptr [rbx + rcx*4 - 0x3b] ; call 0x2000013bb7a
0x0000020000235e0e : fild dword ptr [rcx + rcx*4 + 0x1d] ; ret 0x11fe
0x000002000017bdc6 : fild dword ptr [rcx - 0x75] ; ret
0x0000020000099845 : fild dword ptr [rcx - 1] ; ret
0x00000200006996c1 : fild dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret 0xb849
0x000002000042a554 : fild dword ptr [rdi + rcx + 0x20] ; ret 0xf45
0x00000200006f4791 : fild dword ptr [rdi] ; ret
0x0000020000488bed : fild qword ptr [rbx] ; ret
0x0000020000101bb2 : fild word ptr [r9 + rcx*4 + 0x6d] ; fucomi st(0) ; ret
0x000002000046861e : fild word ptr [rbp - 0x74db8725] ; ret
0x00000200005128f3 : fild word ptr [rbx - 0x1914e740] ; add eax, 8 ; ret
0x000002000000c32b : fild word ptr [rbx - 0x1914f740] ; add eax, 8 ; ret
0x0000020000245014 : fild word ptr [rcx + 0x3b] ; ret
0x000002000023ef93 : fild word ptr [rcx + 0x3b] ; ret 0x677
0x0000020000101bb3 : fild word ptr [rcx + rcx*4 + 0x6d] ; fucomi st(0) ; ret
0x00000200007786fb : fild word ptr [rcx - 0x3f] ; ret 0xeb07
0x000002000069d874 : fild word ptr [rcx - 0x75] ; ret 0x8d48
0x0000020000143be3 : fild word ptr [rcx - 0x7d] ; call 0x1ffb7237cfb
0x000002000046ab41 : fild word ptr [rcx - 0xa] ; ret 0x7501
0x00000200007cfdd4 : fild word ptr [rdi + rcx - 0x4a] ; ret
0x00000200001a00fb : fimul dword ptr [rax + 0x3b] ; ret 0xf48
0x00000200004e3001 : fimul dword ptr [rax + 0x63] ; ret 0x8b48
0x000002000024afbe : fimul dword ptr [rax + 0xb] ; ret 0x8b48
0x000002000045c85a : fimul dword ptr [rax + 0xf] ; ret 0x7c80
0x000002000044d6e9 : fimul dword ptr [rax + 0xf] ; ret 0x8a
0x00000200004e6590 : fimul dword ptr [rax + 0xf] ; ret 0xff2
0x0000020000249d96 : fimul dword ptr [rax - 0x2d] ; ret 0x8341
0x00000200000b20b0 : fimul dword ptr [rax - 0x3f] ; call 0x1ffc2966cc8
0x00000200000b2316 : fimul dword ptr [rax - 0x3f] ; call 0x1ffc2966f2e
0x000002000003c1f7 : fimul dword ptr [rax - 0x3f] ; sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200001c37fb : fimul dword ptr [rax - 0x73] ; push rdx ; or byte ptr [rbp + 0x2b], cl ; ret 0xd975
0x00000200003d14eb : fimul dword ptr [rax - 0x75] ; jmp 0x1ffc37f41e2
0x00000200007cef12 : fimul dword ptr [rax - 0x75] ; ret 0x8d48
0x000002000011d2f1 : fimul dword ptr [rax - 0x75] ; ret 0xe683
0x00000200000365f3 : fimul dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], 1 ; ret
0x0000020000448720 : fimul dword ptr [rax - 0x75] ; stc ; call 0x2000006d287
0x0000020000465cf5 : fimul dword ptr [rax - 0x7d] ; ret
0x0000020000233418 : fimul dword ptr [rax - 0x7d] ; ret 0x4160
0x00000200000d3b2b : fimul dword ptr [rax - 0x7d] ; ret 0x480a
0x000002000002634c : fimul dword ptr [rax - 0x7d] ; ret 0xe804
0x00000200004b4c12 : fimul dword ptr [rax - 0x7f] ; ret
0x00000200006e0fd7 : fimul dword ptr [rax - 1] ; ret
0x000002000006b0cc : fimul dword ptr [rax - 9] ; ret 0xfff
0x00000200001def02 : fimul dword ptr [rbp + 0x348ffef] ; ret
0x000002000020b849 : fimul dword ptr [rbp + 0x3b] ; ret 0x3c74
0x00000200007b6cc8 : fimul dword ptr [rbp - 0x3fcc3c01] ; ret
0x00000200001fa6bd : fimul dword ptr [rbx - 0x43eb729] ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200000ead13 : fimul dword ptr [rbx] ; add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x0000020000126421 : fimul dword ptr [rcx - 0x3f] ; sti ; add cl, byte ptr [rcx - 0x75] ; ret
0x0000020000014483 : fimul dword ptr [rcx - 0x3f] ; sti ; add ecx, dword ptr [rcx - 0x75] ; ret
0x000002000024551f : fimul dword ptr [rcx - 0x75] ; or ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200001463d0 : fimul dword ptr [rcx - 0x77] ; nop ; adc byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000002000069d881 : fimul dword ptr [rcx - 0x7d] ; ret
0x00000200000b1dea : fimul dword ptr [rcx - 0x7d] ; ret 0x4d0a
0x00000200001f1157 : fimul dword ptr [rcx - 0xdfdbac] ; ret 0x9489
0x000002000052dfd4 : fimul dword ptr [rdi] ; test dword ptr [rsi], ebp ; ret 8
0x0000020000018051 : fimul dword ptr [rdi] ; test esi, eax ; int 0x14
0x00000200000d1610 : fimul dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000200000a8e38 : fimul dword ptr [rsi] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000013be65 : fimul word ptr [r8 - 0x75] ; ret
0x000002000024097d : fimul word ptr [rax + 3] ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4408
0x000002000024748f : fimul word ptr [rax - 0x2d] ; ret 0x8341
0x00000200000d75c9 : fimul word ptr [rax - 0x3f] ; sti ; add ecx, dword ptr [rax - 1] ; ret
0x000002000013be66 : fimul word ptr [rax - 0x75] ; ret
0x0000020000094683 : fimul word ptr [rax - 0x75] ; ret 0xe9eb
0x0000020000044140 : fimul word ptr [rax - 0x7d] ; ret
0x000002000023321c : fimul word ptr [rax - 1] ; ret
0x000002000053d830 : fimul word ptr [rax - 1] ; ret 0xd148
0x00000200000cb1e9 : fimul word ptr [rax - 9] ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x000002000023e744 : fimul word ptr [rbp + 3] ; ret
0x00000200005a5ecb : fimul word ptr [rbx - 0x2658f1fb] ; jmp qword ptr [rbx]
0x0000020000618ce4 : fimul word ptr [rcx + 0x63] ; ret
0x00000200000d3b14 : fimul word ptr [rdi] ; add dword ptr [rax + 1], 0 ; add bh, bh ; ret 0x8b4c
0x00000200003ee0b7 : fimul word ptr [rdi] ; test dword ptr [rax - 0x74ffe686], esi ; ret
0x000002000049ec68 : fimul word ptr [rdi] ; test dword ptr [rax - 0xa000000], eax ; ret
0x000002000046ba6c : fimul word ptr [rdi] ; test dword ptr [rcx], esp ; or al, byte ptr [rax] ; add dh, dh ; ret
0x00000200000e801e : fincstp ; ret 0xfffc
0x0000020000653a27 : fincstp ; ret 0xfffe
0x0000020000633e8d : fist word ptr [rdx] ; ret 0x48ff
0x0000020000192681 : fistp dword ptr [rcx - 0xb] ; dec dword ptr [rcx - 0x75] ; iretd ; call 0x200000be969
0x000002000023bb5b : fistp qword ptr [r11] ; ret
0x00000200005b2fc6 : fistp qword ptr [r11] ; ret 0x4466
0x00000200005b3188 : fistp qword ptr [r11] ; ret 0x470f
0x000002000023bb5c : fistp qword ptr [rbx] ; ret
0x00000200005b2fc7 : fistp qword ptr [rbx] ; ret 0x4466
0x00000200005b3189 : fistp qword ptr [rbx] ; ret 0x470f
0x0000020000466a7c : fistp qword ptr [rsi + 0x48c033ff] ; add esp, 0x28 ; ret
0x00000200003fb7c9 : fistp word ptr [rax] ; add byte ptr [rbx + 0x3b411441], cl ; ret 0x820f
0x000002000059f5fb : fistp word ptr [rcx] ; mov rcx, r14 ; call 0x200001cce59
0x00000200001934e4 : fistp word ptr [rdi - 0x74b70010] ; ret 0x3b48
0x00000200003cc93d : fistp word ptr [rdx - 0xd] ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x0000020000133ebc : fistp word ptr [rsi] ; add bh, bh ; ret
0x00000200004e1432 : fisttp dword ptr [rax + 0x63] ; ret
0x000002000004a244 : fisttp dword ptr [rax + 0xb] ; ret 0x8b49
0x0000020000167439 : fisttp dword ptr [rax + 0xf] ; ret
0x00000200006c9465 : fisttp dword ptr [rax + 0xf] ; ret 0x5c89
0x000002000078b59d : fisttp dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000002000000bcee : fisttp dword ptr [rax - 0x75] ; je 0x2000000bd1f ; adc byte ptr [rax - 0x75], cl ; ret
0x0000020000218d28 : fisttp dword ptr [rax - 0x75] ; je 0x20000218d59 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000049a681 : fisttp dword ptr [rax - 0x75] ; or byte ptr [r13 - 0x75], al ; ret 0x8948
0x00000200004e5bd8 : fisttp dword ptr [rax - 0x75] ; ret
0x000002000023fd10 : fisttp dword ptr [rax - 0x75] ; ret 0x2eb
0x000002000070613c : fisttp dword ptr [rax - 0x75dedba4] ; ret
0x0000020000706022 : fisttp dword ptr [rax - 0x75dfdba4] ; ret
0x00000200005064fa : fisttp dword ptr [rax - 0x77] ; jl 0x2000050652b ; cmp byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000214470 : fisttp dword ptr [rax - 0x7d] ; ret
0x00000200006369dd : fisttp dword ptr [rax - 0x7d] ; ret 0x4402
0x00000200003f9fbd : fisttp dword ptr [rax - 0x7d] ; ret 0x4808
0x0000020000713999 : fisttp dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200001cf726 : fisttp dword ptr [rbp + rcx*4 + 0x35] ; ret 0x51
0x0000020000619781 : fisttp dword ptr [rbp + rcx*4 + 0x3d] ; xchg edi, eax ; ret
0x0000020000073e1a : fisttp dword ptr [rbp + rcx*4 + 0x4a] ; or byte ptr [rbp - 0x75], al ; ret
0x0000020000517c86 : fisttp dword ptr [rbp - 0x74bbb7a6] ; ret
0x000002000023efb0 : fisttp dword ptr [rbp - 0x75] ; ret
0x0000020000045256 : fisttp dword ptr [rbp - 0x75] ; rol dword ptr [rcx - 0x75], 1 ; ret
0x00000200000b8162 : fisttp dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x000002000007c665 : fisttp dword ptr [rbx + rcx*4 + 0x59] ; and byte ptr [rcx - 0x7f], cl ; ret 0
0x00000200004a6544 : fisttp dword ptr [rbx + rdi - 0x40] ; ja 0x200004a653a ; ret
0x000002000022e979 : fisttp dword ptr [rcx + 0xf] ; ret
0x00000200000af3c0 : fisttp dword ptr [rcx - 0x3f] ; jmp 0x200000af3d9
0x000002000063417f : fisttp dword ptr [rcx - 0x75] ; jmp 0x2004925ccd5
0x00000200000b8e49 : fisttp dword ptr [rcx - 0x75] ; push rdi ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200006be199 : fisttp dword ptr [rcx - 0x75] ; ret
0x00000200000bcb6a : fisttp dword ptr [rcx - 0x75] ; ret 0x4cf0
0x00000200001f3623 : fisttp dword ptr [rcx - 0x7d] ; enter 0x49ff, -0x75 ; ret
0x00000200007cdb12 : fisttp dword ptr [rcx - 0x7d] ; ret 0x4408
0x00000200004bebde : fisttp dword ptr [rdi] ; mov bh, cl ; mov dword ptr [rcx], edx ; add byte ptr [rbp + 0x3b], cl ; ret
0x000002000052618c : fisttp dword ptr [rdi] ; mov byte ptr [rax - 0x74fff6f0], dh ; ret
0x0000020000490196 : fisttp dword ptr [rdi] ; mov byte ptr [rbp - 0x74ffec33], al ; ret
0x000002000053a162 : fisttp dword ptr [rdi] ; mov byte ptr [rbx - 0x74fff4f8], bh ; ret
0x000002000016f0e5 : fisttp dword ptr [rdi] ; mov byte ptr [rcx + 0x2f], bh ; in eax, dx ; dec dword ptr [rax + 0x63] ; ret
0x0000020000082c2b : fisttp dword ptr [rdi] ; mov byte ptr [rip - 0x74ffef62], ch ; ret
0x00000200001298e1 : fisttp dword ptr [rdi] ; mov dh, bh ; sub al, 8 ; add dh, dh ; ret
0x00000200006bd3cf : fisttp dword ptr [rdi] ; mov dl, ah ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x0000020000173d98 : fisttp dword ptr [rdi] ; mov dword ptr [rax - 0x68d], eax ; ret
0x00000200001738e7 : fisttp dword ptr [rdi] ; mov dword ptr [rbp - 0x69a], ebp ; ret
0x000002000000be45 : fisttp dword ptr [rdi] ; ret
0x00000200000f1184 : fisttp dword ptr [rdi] ; test ah, bl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000019fd2a : fisttp dword ptr [rdi] ; test bl, bh ; ret 0xfff2
0x00000200000aef9b : fisttp dword ptr [rdi] ; test byte ptr [rax], ah ; or dword ptr [rax], eax ; add dh, dh ; ret
0x00000200007b05f7 : fisttp dword ptr [rdi] ; test byte ptr [rbx - 0x74fffe5c], ch ; ret
0x00000200000a5e53 : fisttp dword ptr [rdi] ; test byte ptr [rdx + rdi*8 - 0x74b70001], dh ; ret 0x8348
0x000002000002195e : fisttp dword ptr [rdi] ; test byte ptr [rsi - 0xa000000], dl ; ret
0x000002000024da9a : fisttp dword ptr [rdi] ; test byte ptr [rsi], al ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf08
0x0000020000115113 : fisttp dword ptr [rdi] ; test cl, bh ; sbb al, 6 ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000004f330 : fisttp dword ptr [rdi] ; test dh, dh ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000c4e92 : fisttp dword ptr [rdi] ; test dl, ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000491172 : fisttp dword ptr [rdi] ; test dl, ch ; ret 0x13
0x00000200006d64f7 : fisttp dword ptr [rdi] ; test dword ptr [rbx - 0x1000000], eax ; ret
0x00000200001e0467 : fisttp dword ptr [rdi] ; test dword ptr [rdi - 0xa000000], ecx ; ret 0x7401
0x00000200000a5907 : fisttp dword ptr [rdi] ; test dword ptr [rsi], ebx ; add eax, 0xf6410000 ; ret 0xf0b
0x00000200004e42a3 : fisttp dword ptr [rdi] ; test eax, ecx ; ret 0xf
0x00000200004a85d4 : fisttp dword ptr [rdi] ; xchg eax, ebp ; rol cl, 0xe0 ; add esi, dword ptr [rbx] ; ret 0xe083
0x00000200004154db : fisttp qword ptr [r9 - 0x75] ; ret
0x000002000013d8a1 : fisttp qword ptr [rax + 0x63] ; ret
0x0000020000444600 : fisttp qword ptr [rax - 0x7d] ; ret
0x00000200006b1903 : fisttp qword ptr [rax - 1] ; ret
0x00000200004154dc : fisttp qword ptr [rcx - 0x75] ; ret
0x000002000022e4d5 : fisttp qword ptr [rcx - 0x7d] ; ret
0x00000200000fd0ae : fisttp qword ptr [rcx - 0x7d] ; ret 0xbd04
0x000002000055b530 : fisttp qword ptr [rcx - 1] ; ret 0x894c
0x000002000051738f : fisttp qword ptr [rdi] ; ret
0x000002000041f300 : fisttp qword ptr [rdx + 0x4e8b0156] ; add al, 0xf6 ; ret 0x7502
0x0000020000030e7f : fisttp qword ptr [rdx + 8] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret
0x00000200006cfd75 : fisttp word ptr [r15] ; mov bh, 0xb ; call 0x2000013c067
0x0000020000037490 : fisttp word ptr [r8 - 0x3f] ; out dx, al ; or al, 0x8b ; ret
0x0000020000208fad : fisttp word ptr [r8 - 0x77] ; out -0x75, eax ; ret 0x6948
0x00000200002396d2 : fisttp word ptr [r8 - 9] ; ret
0x00000200001cf591 : fisttp word ptr [r9 - 0x75] ; ret 0x7d89
0x0000020000411c02 : fisttp word ptr [r9 - 0x7d] ; ret 0x4808
0x00000200001104bb : fisttp word ptr [rax + 0x3b] ; ret 0x850f
0x00000200002396cf : fisttp word ptr [rax + 0xf] ; fisttp word ptr [r8 - 9] ; ret
0x000002000077abd8 : fisttp word ptr [rax + 3] ; ret 0x8948
0x000002000024794f : fisttp word ptr [rax - 0x2d] ; ret 0x8341
0x0000020000037491 : fisttp word ptr [rax - 0x3f] ; out dx, al ; or al, 0x8b ; ret
0x00000200007ccd06 : fisttp word ptr [rax - 0x75] ; enter 0xf44, -0x49 ; ret
0x000002000012f1a9 : fisttp word ptr [rax - 0x75] ; je 0x2000012f1da ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000004d08c : fisttp word ptr [rax - 0x75] ; ret
0x000002000013baf4 : fisttp word ptr [rax - 0x75] ; ret 0x8348
0x000002000045f469 : fisttp word ptr [rax - 0x77] ; or byte ptr [rax - 1], r9b ; ret
0x0000020000208fae : fisttp word ptr [rax - 0x77] ; out -0x75, eax ; ret 0x6948
0x0000020000006f48 : fisttp word ptr [rax - 0x7d] ; ret
0x0000020000233549 : fisttp word ptr [rax - 1] ; ret
0x00000200000a51a7 : fisttp word ptr [rax - 9] ; ret
0x00000200003da247 : fisttp word ptr [rbp + rcx*4 - 0x7d] ; add byte ptr [rax], dl ; add byte ptr [rax], al ; call rax
0x0000020000110069 : fisttp word ptr [rbp - 0x75] ; ret
0x0000020000077b0c : fisttp word ptr [rbx + 0x23413042] ; ret
0x00000200001278aa : fisttp word ptr [rbx + 0x3449045] ; ret 0xcf05
0x0000020000080876 : fisttp word ptr [rcx + rcx*4 + 0x1c] ; ret
0x000002000004ff4a : fisttp word ptr [rcx - 0x75] ; ret
0x000002000006fc91 : fisttp word ptr [rcx - 0x75] ; ret 0x348
0x00000200001cf592 : fisttp word ptr [rcx - 0x75] ; ret 0x7d89
0x0000020000411c03 : fisttp word ptr [rcx - 0x7d] ; ret 0x4808
0x00000200001450c6 : fisttp word ptr [rcx - 0x7d] ; ret 0x4c0c
0x00000200000d055e : fisttp word ptr [rcx - 9] ; ror byte ptr [rcx - 0x75], cl ; ret 0x8b41
0x00000200006cfd76 : fisttp word ptr [rdi] ; mov bh, 0xb ; call 0x2000013c066
0x00000200006317ad : fisttp word ptr [rdi] ; ret 0x8b48
0x000002000019642e : fisttp word ptr [rdi] ; test dword ptr [rcx - 0x9000ee0], ebx ; ret
0x0000020000449173 : fisttp word ptr [rdi] ; test ebp, edi ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000318e3 : fisttp word ptr [rdi] ; xchg esi, esp ; mov dword ptr [rbx], edx ; add byte ptr [rbp + 0x3b], cl ; ret
0x00000200000099cd : fisttp word ptr [rdx - 0x3fcc3d00] ; ret
0x00000200000a85a9 : fisttp word ptr [rsi] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000007bb27 : fisttp word ptr [rsi] ; add dh, al ; xor byte ptr [r9], al ; ret
0x00000200006c5362 : fisub dword ptr [rdi] ; ret
0x000002000053b5eb : fisub word ptr [rsi + 0x2b] ; fsub dword ptr [rsi - 0x7d] ; ret
0x0000020000701cfa : fisubr dword ptr [rbp + 0x5f60000] ; mov ebp, eax ; ret
0x00000200005ea33e : fisubr dword ptr [rdi - 0x47166f01] ; ret 0xfff1
0x0000020000457c82 : fisubr dword ptr [rsp + rbp*8 - 1] ; call 0x2000007d087
0x0000020000580d51 : fld dword ptr [rax + 0x38] ; jl 0x20000580d83 ; xor byte ptr [rbx + rax - 0x7d], dh ; ret
0x00000200000ca9e6 : fld dword ptr [rax + rax] ; add byte ptr [rax - 0x75], cl ; ret 0x3b4c
0x000002000077f8d3 : fld dword ptr [rbp + 0x3b] ; ret 0x840f
0x00000200003eb5d9 : fld dword ptr [rbp + rcx*4 + 0x42] ; xor al, ch ; popfq ; ret 0xffd6
0x0000020000081dd2 : fld dword ptr [rbp - 0x75] ; ret 0x3b45
0x000002000012f287 : fld dword ptr [rbp - 0x78] ; sbb byte ptr [rcx - 0x76], al ; ret
0x000002000007f3b3 : fld dword ptr [rbx + 0x3b4920c3] ; ret 0x830f
0x0000020000679b61 : fld dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x3d83
0x00000200003f90d3 : fld dword ptr [rcx - 0x7d] ; stc ; or dword ptr [rcx - 0x75], esi ; ret 0x8b48
0x0000020000180934 : fld dword ptr [rcx - 0xa] ; ret
0x0000020000687e57 : fld dword ptr [rcx - 1] ; ret
0x00000200001b9003 : fld dword ptr [rcx] ; add bh, bh ; ret
0x0000020000702b33 : fld dword ptr [rdx] ; ret 0x48ff
0x00000200004592c5 : fld qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001e5af4 : fld qword ptr [rbp + 0x33] ; shr bl, cl ; add ecx, dword ptr [rcx - 1] ; ret 0x8348
0x000002000008218e : fld qword ptr [rbp - 0x74ca8725] ; ret
0x00000200005128ef : fld qword ptr [rbx] ; ret 0xdfeb
0x0000020000726dfd : fld qword ptr [rcx - 0x75] ; ret
0x00000200006723da : fld qword ptr [rcx - 0x7d] ; ret 0x75ff
0x00000200000c04bc : fld qword ptr [rcx] ; xor al, 0xff ; ret
0x00000200004c9f1f : fld qword ptr [rsi] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000cb2fd : fld xword ptr [rbx - 8] ; inc dword ptr [rbx - 0x7bf0fe08] ; ret 0xfffc
0x0000020000226021 : fld xword ptr [rdi + 2] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000425c92 : fld1 ; cwde ; ret
0x00000200000411ad : fld1 ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000726abc : fld1 ; jbe 0x20000726ac2 ; sahf ; dec dword ptr [rax - 0x75] ; ret
0x0000020000623aee : fld1 ; lahf ; ret 0x48ff
0x000002000061fc59 : fld1 ; loope 0x2000061fc3e ; ret 0x48ff
0x000002000061fc58 : fld1 ; loope 0x2000061fc3f ; ret 0x48ff
0x00000200003d7fd3 : fld1 ; mov bh, 0x70 ; ret
0x00000200007281ab : fld1 ; ret
0x0000020000721d30 : fld1 ; ret 0
0x000002000000ca1b : fld1 ; ret 0x3f
0x000002000055eab8 : fld1 ; ret 0xbf8d
0x0000020000658378 : fld1 ; ret 0xded2
0x0000020000010d4a : fld1 ; ror dword ptr [rax], cl ; add byte ptr [rdi + rcx + 0x20], al ; ret 0xf44
0x0000020000619a67 : fld1 ; sar dword ptr [rdi], cl ; ret
0x00000200001a8888 : fldcw word ptr [rbx] ; hlt ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000014bd80 : fldcw word ptr [rcx] ; ret
0x0000020000025645 : fldenv dword ptr [rip + 0x3410014] ; ret 0xb70f
0x00000200002154a5 : fldenv dword ptr [rsi + 0x33] ; ret 0x1274
0x0000020000173920 : fldl2t ; fbld dword ptr [rsi - 7] ; dec dword ptr [rax + 0x63] ; ret
0x0000020000587af1 : fldl2t ; ret 0xffe6
0x00000200005b8a0e : fldl2t ; sahf ; sbb dh, bh ; push qword ptr [rbx] ; sal dh, cl ; ret
0x0000020000088a94 : fldpi ; out dx, eax ; xor eax, eax ; ret
0x00000200001d8698 : fmul dword ptr [r11 - 0x7b74b638] ; ret
0x000002000058217c : fmul dword ptr [r8 + 0x2b] ; ret
0x000002000014e9d0 : fmul dword ptr [r8 + 0xf] ; ret
0x0000020000030f08 : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x000002000013e074 : fmul dword ptr [r8 - 0x75] ; ret
0x00000200006f46cd : fmul dword ptr [r8 - 0x7d] ; ret 0x4440
0x00000200003efd49 : fmul dword ptr [r9 - 0x14cfdba4] ; sbb al, ch ; ret 0x2c74
0x00000200001d09df : fmul dword ptr [r9 - 0x75] ; ret 0x7d89
0x000002000013c190 : fmul dword ptr [rax + 0x1b] ; ror byte ptr [rax + 0x23], 0xc1 ; ret
0x00000200003d96e3 : fmul dword ptr [rax + 0x2b] ; fimul word ptr [rax - 1] ; ret
0x000002000058217d : fmul dword ptr [rax + 0x2b] ; ret
0x00000200001456ae : fmul dword ptr [rax + 0x33] ; ret 0xd233
0x000002000068d0c0 : fmul dword ptr [rax + 0x63] ; ret 0x3345
0x0000020000678bd1 : fmul dword ptr [rax + 0x69] ; ret 0x570
0x000002000014e9d1 : fmul dword ptr [rax + 0xf] ; ret
0x000002000003b9cc : fmul dword ptr [rax - 0x3f] ; call 0x1ffc23f02ef
0x00000200000ad903 : fmul dword ptr [rax - 0x3f] ; sti ; adc byte ptr [rax - 0x75], cl ; ret
0x00000200001c0212 : fmul dword ptr [rax - 0x73] ; and al, 0x40 ; call 0x200001bc47c
0x00000200003d96c7 : fmul dword ptr [rax - 0x73] ; dec dword ptr [rax + 3] ; ret
0x000002000044acdd : fmul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000030f09 : fmul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x0000020000450dea : fmul dword ptr [rax - 0x75] ; iretd ; call 0x2000007cdf7
0x00000200004c5952 : fmul dword ptr [rax - 0x75] ; iretd ; call 0x200000e7da7
0x000002000070775f : fmul dword ptr [rax - 0x75] ; je 0x20000707790 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000070775e : fmul dword ptr [rax - 0x75] ; je 0x20000707791 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000527d93 : fmul dword ptr [rax - 0x75] ; lahf ; call 0x20000148078
0x0000020000527d92 : fmul dword ptr [rax - 0x75] ; lahf ; call 0x20000148079
0x0000020000014d3c : fmul dword ptr [rax - 0x75] ; ret
0x00000200003fac7c : fmul dword ptr [rax - 0x75] ; ret 0x1b48
0x00000200000dbb45 : fmul dword ptr [rax - 0x75] ; ret 0x348
0x000002000067014f : fmul dword ptr [rax - 0x75] ; ret 0x8548
0x00000200003e9400 : fmul dword ptr [rax - 0x75] ; ret 0x8b45
0x0000020000112fd3 : fmul dword ptr [rax - 0x75] ; ret 0x8d49
0x00000200001e989a : fmul dword ptr [rax - 0x75] ; ret 0xb948
0x00000200000e675b : fmul dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000fb779 : fmul dword ptr [rax - 0x75] ; ret 0xc984
0x000002000062855c : fmul dword ptr [rax - 0x75] ; ret 0xc985
0x00000200000e4388 : fmul dword ptr [rax - 0x77] ; adc byte ptr [r9 - 0x7d], r9b ; ret 0x4810
0x00000200004fa88c : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000200002444f8 : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000020000503819 : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xe62
0x0000020000063a8f : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret 0xfff9
0x000002000066137e : fmul dword ptr [rax - 0x7d] ; ret
0x000002000024bf34 : fmul dword ptr [rax - 0x7d] ; ret 0x4110
0x0000020000037481 : fmul dword ptr [rax - 0x7d] ; ret 0x4418
0x00000200006f46ce : fmul dword ptr [rax - 0x7d] ; ret 0x4440
0x000002000069018a : fmul dword ptr [rax - 0x7d] ; ret 0x4902
0x00000200004cefe3 : fmul dword ptr [rax - 0x7d] ; ret 0xf02
0x00000200000cf0e2 : fmul dword ptr [rax - 0x7f] ; ret
0x00000200000ad867 : fmul dword ptr [rax - 9] ; ret
0x000002000053565f : fmul dword ptr [rax] ; movq rax, xmm0 ; call rax
0x00000200006839fe : fmul dword ptr [rbp + rcx*4 + 0xd] ; ret 3
0x000002000020b876 : fmul dword ptr [rbp - 0x75] ; add byte ptr [rbp + 0x3b], cl ; ret 0xde75
0x000002000013b2bc : fmul dword ptr [rbp - 0x75] ; ret 0xd233
0x000002000020e765 : fmul dword ptr [rbx + rdi + 0x19] ; jb 0x2000020e776 ; xor eax, eax ; ret
0x000002000020e801 : fmul dword ptr [rbx + rdi + 0x19] ; jb 0x2000020e812 ; xor al, al ; ret
0x0000020000023945 : fmul dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200002239f1 : fmul dword ptr [rbx - 0x43f0bb16] ; ret
0x00000200001d8699 : fmul dword ptr [rbx - 0x7b74b638] ; ret
0x000002000040cdd4 : fmul dword ptr [rbx - 0xf] ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000084e51 : fmul dword ptr [rbx] ; fadd dword ptr [rcx - 0x48] ; ret 0
0x00000200005d7904 : fmul dword ptr [rbx] ; ret 0x8941
0x00000200001eea41 : fmul dword ptr [rcx + 0x2b] ; fmul qword ptr [rax - 0x7f] ; ret
0x0000020000544358 : fmul dword ptr [rcx + 0x3b] ; ret
0x00000200001b9167 : fmul dword ptr [rcx + 0x3b] ; ret 0x1172
0x00000200003efd4a : fmul dword ptr [rcx - 0x14cfdba4] ; sbb al, ch ; ret 0x2c74
0x000002000056377f : fmul dword ptr [rcx - 0x1a663de3] ; push rsi ; ret
0x000002000002d2e5 : fmul dword ptr [rcx - 0x7497dbbc] ; ret
0x00000200004193db : fmul dword ptr [rcx - 0x74bfdbbc] ; ret
0x00000200004263bb : fmul dword ptr [rcx - 0x74cfdbbc] ; ret
0x000002000049e2f6 : fmul dword ptr [rcx - 0x74d7dbb4] ; ret 0xf983
0x0000020000418735 : fmul dword ptr [rcx - 0x74dfdbbc] ; ret
0x000002000008a072 : fmul dword ptr [rcx - 0x75] ; push rdi ; adc byte ptr [rcx + 0x23], cl ; ret 0x894c
0x000002000001cea6 : fmul dword ptr [rcx - 0x75] ; ret
0x00000200001d09e0 : fmul dword ptr [rcx - 0x75] ; ret 0x7d89
0x00000200004b8325 : fmul dword ptr [rcx - 0x75] ; ret 0x8944
0x0000020000047a76 : fmul dword ptr [rcx - 0x75] ; ret 0x8b44
0x0000020000188646 : fmul dword ptr [rcx - 0x75] ; ret 0xba48
0x00000200000d6f38 : fmul dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000020157e : fmul dword ptr [rcx - 0x77] ; pop rbx ; loopne 0x20000201516 ; pop rsp ; and al, 0x40 ; call rax
0x00000200000aeaa2 : fmul dword ptr [rcx - 0x7d] ; ret
0x000002000046bfa1 : fmul dword ptr [rcx - 0x98bdba4] ; ret
0x00000200004e3baf : fmul dword ptr [rcx - 0x9b7dba4] ; ret
0x000002000006498f : fmul dword ptr [rcx - 1] ; ret
0x00000200001a1a64 : fmul dword ptr [rdi - 0x49f0fff8] ; ret
0x00000200004e1763 : fmul dword ptr [rdi] ; add byte ptr [rbx + rcx*4 + 5], cl ; ret
0x000002000003fc0a : fmul dword ptr [rdi] ; and bl, al ; ret
0x0000020000489b32 : fmul dword ptr [rdi] ; mov edx, 0x820f09e6 ; ret
0x00000200001f5650 : fmul dword ptr [rdi] ; xchg ecx, edi ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200000be410 : fmul dword ptr [rip + 0x4801b000] ; add esp, 0x28 ; ret
0x00000200007e0c70 : fmul dword ptr [rip + 0x7e] ; add byte ptr [rax], al ; ret 0x7e0d
0x00000200001d8759 : fmul qword ptr [r8 - 0x75] ; pushfq ; ret
0x0000020000784fba : fmul qword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0x8341
0x000002000078bb19 : fmul qword ptr [rax - 0x2d] ; ret 0xc783
0x000002000005cceb : fmul qword ptr [rax - 0x75] ; add eax, 0x2a33c5 ; ret
0x0000020000525604 : fmul qword ptr [rax - 0x75] ; iretd ; call 0x20000148077
0x00000200001d875a : fmul qword ptr [rax - 0x75] ; pushfq ; ret
0x00000200001eea44 : fmul qword ptr [rax - 0x7f] ; ret
0x00000200006cbd1b : fmul qword ptr [rax - 1] ; ret
0x0000020000110006 : fmul qword ptr [rbx + 0x458944c3] ; mov ecx, dword ptr [rbp - 0x75] ; ret
0x00000200007d6fd5 : fmul qword ptr [rcx] ; imul esi, dword ptr [rcx - 0x7d], -0x2e ; and dword ptr [rbx], esi ; ret
0x00000200001f248b : fmul qword ptr [rdi] ; or dword ptr [rbp + 1], 0 ; add byte ptr [rax - 9], cl ; ret
0x00000200000a8c44 : fmul qword ptr [rsi] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000673a7f : fmulp st(0) ; dec dword ptr [rax + 0x3b] ; ret 0x840f
0x000002000014bd70 : fnclex ; wait ; fnstcw word ptr [rcx] ; ret
0x000002000014bd60 : fninit ; ret
0x00000200000bb39a : fnstcw word ptr [rbx] ; ret 0x1775
0x000002000041eb70 : fnstcw word ptr [rbx] ; ret 0xea72
0x000002000014bd73 : fnstcw word ptr [rcx] ; ret
0x0000020000534720 : fnstenv dword ptr [rbp - 0xf] ; jmp 0x20000534730
0x00000200004bb528 : fnstenv dword ptr [rbx] ; ret
0x00000200001fd582 : fnstenv dword ptr [rdi - 0x2a] ; mov dword ptr [r10 + 4], r9d ; ret
0x000002000021235e : fnstenv dword ptr [rdx - 0x20] ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000072b2a7 : fnstsw dword ptr [r15 + rdi*8 + 0x1b00189] ; ret
0x0000020000458937 : fnstsw dword ptr [rax - 0x3fffffdd] ; ret
0x000002000049faf6 : fnstsw dword ptr [rbx] ; ret 0x3674
0x000002000072b2a8 : fnstsw dword ptr [rdi + rdi*8 + 0x1b00189] ; ret
0x0000020000114ede : frstor dword ptr [rax] ; add bh, bh ; ret
0x00000200001717e4 : frstor dword ptr [rax] ; stc ; dec dword ptr [rax - 0x75] ; ret
0x00000200006e6c77 : frstor dword ptr [rip - 0x7bf00034] ; ret
0x0000020000448cc7 : frstor dword ptr [rsi - 0x7b] ; ret
0x00000200001d6a32 : fsetpm ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000418785 : fst dword ptr [rdi] ; add byte ptr [rcx - 0x39], cl ; ret 0
0x00000200001d1c8a : fst qword ptr [rbx] ; add rsp, 0x28 ; ret
0x00000200003d3a64 : fstp dword ptr [rbx + rdi] ; ret 0x420f
0x00000200000330e6 : fstp dword ptr [rbx] ; leave ; and eax, ecx ; ret
0x000002000019b8ac : fstp dword ptr [rcx] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000653667 : fstp dword ptr [rdx - 0x6b74b701] ; ret 0xb440
0x0000020000493d20 : fstp st(1), st(0) ; call 0x2004258ff66
0x000002000002e84d : fstp st(6), st(0) ; add eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000715734 : fstp xword ptr [rax + 1] ; add byte ptr [rax], dl ; ret
0x00000200004b4d4c : fstp xword ptr [rax + 3] ; ret
0x00000200006cd396 : fstp xword ptr [rcx + 0x14] ; jmp 0x200006cd3ab
0x00000200006cd422 : fstp xword ptr [rcx + 0x31] ; jmp 0x200006cd437
0x00000200006378ae : fstp xword ptr [rcx] ; popfq ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret
0x000002000072b2dd : fstp xword ptr [rdi + rdi*8 - 0x7bfea973] ; ret 0x475
0x00000200003d0b33 : fstpnce st(3), st(0) ; ret
0x000002000017b5b3 : fstpnce st(6), st(0) ; and al, byte ptr [rax] ; call rax
0x000002000002e39d : fsub dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret
0x000002000012c94e : fsub dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xd148
0x000002000050a8f8 : fsub dword ptr [rbx] ; add byte ptr [rdi + rcx - 0x51], cl ; ret 0x8b41
0x000002000054d6ca : fsub dword ptr [rbx] ; ret 0xc23b
0x00000200006d1951 : fsub dword ptr [rsi + 0x2b] ; pop rbp ; shl byte ptr [rsi - 0x7d], 1 ; ret
0x0000020000232053 : fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000002000021c566 : fsub dword ptr [rsi - 0x7d] ; ret
0x0000020000038623 : fsub dword ptr [rsi - 1] ; ret
0x00000200004f0b39 : fsub qword ptr [rip - 0x48f0fff1] ; ret 0xc0ff
0x00000200004f40ad : fsub qword ptr [rsi - 0x7d] ; clc ; pop rsp ; jne 0x200004f40b1 ; xor al, al ; ret
0x00000200005b0c63 : fsub st(0), st(0) ; xchg eax, edi ; ret
0x00000200006cd37e : fsub st(3), st(0) ; and dh, dh ; ret
0x00000200005aba1b : fsubp st(1) ; jmp qword ptr [rcx]
0x000002000041ccb6 : fsubp st(1) ; ret
0x0000020000137b20 : fsubp st(3) ; call 0x20007d671f8
0x00000200002232e3 : fsubp st(3) ; or dword ptr [rcx + 0x3b], eax ; ret 0x976
0x00000200000037de : fsubr dword ptr [rax - 0x147af0fe] ; ret 0x15
0x00000200003d16bf : fsubr dword ptr [rip + 0x58b0000] ; ret
0x0000020000176161 : fsubr st(0) ; and eax, 0x90fffa63 ; jmp 0x20000112379
0x00000200003fb11d : fsubr st(0) ; cmp eax, 0x8bffc0e4 ; ret
0x000002000061ef1c : fsubr st(0) ; fsubrp st(0) ; ret 0x48ff
0x000002000052fbdd : fsubr st(0) ; int 0x72
0x000002000070efac : fsubr st(0) ; loop 0x2000070ef9a ; xchg eax, edx ; dec dword ptr [rax - 0x75] ; ret
0x000002000052788a : fsubr st(0) ; loopne 0x20000527899 ; ret 0x4cff
0x00000200004b3406 : fsubr st(0) ; mov ah, 0x65 ; ret
0x000002000011497a : fsubr st(0) ; mov eax, 0x8b00001b ; ret
0x00000200006318a2 : fsubr st(0) ; push -0x74001ad6 ; ret
0x0000020000518521 : fsubr st(0) ; ret
0x0000020000525a22 : fsubr st(0) ; ret 0x85ff
0x0000020000549058 : fsubr st(0) ; ret 0xe974
0x00000200004fd1af : fsubr st(0) ; stosd dword ptr [rdi], eax ; ret
0x0000020000428a51 : fsubr st(0) ; test eax, 0x8bffc393 ; ret
0x000002000021fffd : fsubr st(0) ; xchg eax, ecx ; shl cl, cl ; dec dword ptr [rax - 0x75] ; ret
0x0000020000043b44 : fsubr st(0) ; xchg eax, esi ; ret
0x00000200004663b9 : fsubr st(0) ; xor dword ptr [rcx], edi ; ret
0x000002000053e3fd : fsubr st(0) ; xor eax, 0x8bffaf30 ; ret
0x00000200001758bc : fsubr st(1) ; cmpsd dword ptr [rsi], dword ptr [rdi] ; mov al, 0xf9 ; dec dword ptr [rcx - 0x75] ; ret
0x00000200005e3df5 : fsubr st(1) ; or eax, 0x83fff0e4 ; ret
0x00000200005f8797 : fsubr st(1) ; ret
0x000002000017612a : fsubr st(1) ; ret 0xfff9
0x00000200001a0c72 : fsubr st(1) ; sbb esi, edx ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000175838 : fsubr st(3) ; and ecx, dword ptr [rax - 0x75] ; ret
0x0000020000440cc5 : fsubr st(3) ; in eax, 0x48 ; mov eax, dword ptr [rdx] ; mov qword ptr [rcx], rax ; ret
0x00000200003d0566 : fsubr st(3) ; sar bl, 0xeb ; ret 0x8b4c
0x000002000061ef1e : fsubrp st(0) ; ret 0x48ff
0x00000200001d6776 : fsubrp st(4) ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x000002000002c78f : fucom st(4) ; adc byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000101bb7 : fucomi st(0) ; ret
0x00000200004f354f : fucomi st(0) ; stosd dword ptr [rdi], eax ; ret
0x00000200005fde70 : fucomi st(1) ; and byte ptr [rsi - 0x74b3000a], dh ; ret 0x8b48
0x000002000017d264 : fucomi st(1) ; loopne 0x2000017d1f6 ; in al, dx ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000177375 : fucomi st(1) ; ret
0x000002000045964b : fucomi st(3) ; mov ch, 0x8b ; ret
0x000002000065b541 : fucomi st(3) ; or al, 0x8b ; sbb cl, byte ptr [rax - 1] ; ret
0x0000020000102a11 : fucomi st(3) ; ret
0x0000020000446867 : fucomi st(3) ; ret 0x3345
0x00000200000f8db2 : fucomi st(3) ; ret 0xeb8
0x00000200004124fd : fucomi st(3) ; ret 0xf41
0x000002000011952e : fucomi st(3) ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4903
0x00000200005de155 : fucomi st(7) ; dec dword ptr [rax - 0x75] ; iretd ; call 0x2000065a39c
0x00000200004ad02f : fucomp st(0) ; pop rbx ; leave ; ret
0x00000200005efe07 : fucomp st(1) ; ret 0xf52b
0x00000200007c8656 : fucomp st(1) ; scasb al, byte ptr [rdi] ; and esi, edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005de18a : fucomp st(7) ; inc dword ptr [rcx - 0x7d] ; ret 0xc7f0
0x000002000061ad0b : fucompi st(0) ; imul edx, dword ptr [rcx], 0 ; add bh, bh ; ret
0x00000200006256c3 : fucompi st(0) ; ja 0x2000062564e ; ret 0x48ff
0x0000020000615c54 : fucompi st(0) ; ret 0xb2b0
0x0000020000564c95 : fucompi st(3) ; lahf ; movzx eax, dx ; jmp 0x20000564c7d
0x00000200000fc9a5 : fucompi st(3) ; leave ; mov eax, 0xc000000d ; ret
0x000002000043ee57 : fucompi st(3) ; ret 0x8bb
0x00000200006a332c : fucompi st(3) ; sbb bh, bh ; ret
0x0000020000173d34 : fucompp ; add al, 0x71 ; stc ; dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000200001984d9 : fucompp ; je 0x200001984d6 ; push rsi ; ret 0x741e
0x0000020000198ed7 : fucompp ; mov dh, 0x8f ; int1 ; push rsi ; ret 0x741e
0x0000020000198856 : fucompp ; outsb dx, byte ptr [rsi] ; jg 0x20000198853 ; push rsi ; ret 0x741e
0x0000020000199b74 : fucompp ; ret
0x000002000077cc4d : fxch st(0), st(0) ; ret 0x49ff
0x00000200006245a7 : fxch st(0), st(2) ; sar edi, 1 ; add rsp, 0x28 ; ret
0x00000200005d31f7 : fxch st(2) ; dec dword ptr [rax - 0x75] ; ret 0x48f0
0x0000020000658865 : fxch st(2) ; dec dword ptr [rcx + 0x3b] ; ret 0x840f
0x000002000014c378 : fxsave ptr [rcx] ; add rsp, 0x28 ; ret
0x000002000044d8fa : hlt ; adc eax, 0xce8b4900 ; call 0x20000078b99
0x00000200006e8c34 : hlt ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000022fcd2 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000119439 : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000020000149d25 : hlt ; add byte ptr [rax], al ; add cl, ch ; adc al, bl ; add byte ptr [rax], al ; ret
0x00000200004a4d8d : hlt ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200007d4b1f : hlt ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x74bbd7b9], cl ; ret
0x00000200000b92bb : hlt ; add rsp, 0x28 ; ret
0x000002000003db3c : hlt ; and byte ptr [rax], al ; jmp 0x2000003db07
0x00000200001dd824 : hlt ; call 0x200000e9a53
0x00000200001895b5 : hlt ; call qword ptr [rax - 0x11573d17]
0x00000200001a8294 : hlt ; call rax
0x0000020000519498 : hlt ; cmc ; ret 0x45ff
0x00000200001aa706 : hlt ; dec dword ptr [rax - 0x73] ; or dil, dil ; ret
0x000002000011d039 : hlt ; dec dword ptr [rax - 0x75] ; ret
0x00000200001a94ce : hlt ; dec dword ptr [rax - 0x75] ; shr eax, cl ; cwde ; ret 0xffe7
0x00000200004d7c34 : hlt ; dec dword ptr [rax - 0x77] ; pop rdi ; sub cl, ch ; ret
0x0000020000216ea9 : hlt ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000002000020e314 : hlt ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x6c], 0xff ; ret
0x0000020000101827 : hlt ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005ea502 : hlt ; dec dword ptr [rax - 1] ; ret 0x1c38
0x00000200001a23bf : hlt ; dec dword ptr [rcx - 0x75] ; sbb byte ptr [rax - 0x7b], r9b ; ret
0x000002000018031f : hlt ; in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x00000200001a9730 : hlt ; inc dword ptr [rbp - 0x75] ; ret
0x00000200001a96ef : hlt ; inc dword ptr [rbp - 0x75] ; ret 0xb60f
0x0000020000112479 : hlt ; inc dword ptr [rcx + 0x3b] ; ret
0x00000200001a8aa6 : hlt ; inc dword ptr [rcx + 0xf] ; mov dh, 0x85 ; ret
0x00000200005eaaef : hlt ; inc dword ptr [rcx + 3] ; int 0x80
0x00000200005ea90c : hlt ; inc dword ptr [rcx - 0x7c] ; ret
0x00000200001a888a : hlt ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000053d7c8 : hlt ; jg 0x2000053d7d0 ; inc dword ptr [rcx + 0x3b] ; ret
0x00000200004a6298 : hlt ; jmp 0x200004a6260
0x0000020000115f02 : hlt ; jmp qword ptr [rcx]
0x00000200006ae766 : hlt ; lea rax, qword ptr [rcx + r9*8] ; add rsp, 0x28 ; ret
0x00000200007b70e7 : hlt ; loope 0x200007b70a9 ; inc dword ptr [rcx] ; add rsp, 0x38 ; ret
0x000002000051beb2 : hlt ; mov bl, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x000002000052fca4 : hlt ; mov byte ptr [rip - 0x233c2b], 0 ; ret
0x000002000000c389 : hlt ; mov eax, 0xc000000d ; ret
0x0000020000532931 : hlt ; mov edi, r12d ; call 0x20000157887
0x000002000001c3f7 : hlt ; mov rax, qword ptr [rax + 8] ; ret
0x0000020000009bcb : hlt ; mov rax, rcx ; ret
0x000002000077843a : hlt ; mov rax, rdx ; jmp 0x20000778448
0x000002000000a607 : hlt ; mov rax, rdx ; ret
0x000002000013c368 : hlt ; mov rdx, rsi ; call r14
0x000002000044559d : hlt ; or dword ptr [rax], eax ; add rsp, 0x68 ; ret
0x00000200004b4987 : hlt ; out 0xff, al ; mov rdx, rsi ; call 0x200000d9f79
0x00000200001a9c3e : hlt ; push rsi ; ret 0x7408
0x00000200001a9709 : hlt ; push rsi ; ret 0x741e
0x0000020000053232 : hlt ; ret
0x000002000046b28c : hlt ; ret 0x48ff
0x0000020000528468 : hlt ; ret 0x4cff
0x00000200004305c2 : hlt ; ret 0x8bff
0x00000200004fb113 : hlt ; ret 0xe
0x00000200004c0ecf : hlt ; ret 0xe9ff
0x000002000051c0b6 : hlt ; ret 0xebff
0x00000200003e2c70 : hlt ; ret 0xffd3
0x00000200005d8d4c : hlt ; ret 0xffee
0x000002000015f3e8 : hlt ; ret 0xfffe
0x00000200003e5fae : hlt ; sar edi, 0x48 ; add esp, 0x48 ; ret
0x00000200007b6bf8 : hlt ; sbb dword ptr [rdi - 0xb18801], edi ; ret
0x000002000013a5fc : hlt ; sbb eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000014ea0b : hlt ; sfence ; ret
0x0000020000026228 : hlt ; shr byte ptr [rdi], cl ; add byte ptr [rax + 3], cl ; ret
0x0000020000071678 : hlt ; xchg eax, ebp ; or al, 0 ; add rsp, 0x58 ; ret
0x00000200004f40b3 : hlt ; xor al, al ; ret
0x000002000043b6fc : idiv bh ; add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x00000200003d9b72 : idiv bh ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000168af1 : idiv bh ; add rsp, 0x38 ; ret
0x00000200000fdb4b : idiv bh ; add rsp, 0x40 ; pop rbx ; ret
0x00000200001d382c : idiv bh ; add rsp, 0x48 ; ret
0x00000200001d616a : idiv bh ; add rsp, 0x50 ; pop rbp ; ret
0x00000200001cc782 : idiv bh ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001cbd97 : idiv bh ; add rsp, 0x58 ; ret
0x00000200001cb764 : idiv bh ; add rsp, 0x68 ; ret
0x00000200001cb6f9 : idiv bh ; add rsp, 0x70 ; pop rbp ; ret
0x00000200001d1ad6 : idiv bh ; add rsp, 0x70 ; pop rbx ; ret
0x00000200001d18e4 : idiv bh ; add rsp, 0x78 ; ret
0x00000200001d2c61 : idiv bh ; add rsp, 0xa8 ; ret
0x000002000043dacc : idiv bh ; call r10
0x00000200004477a2 : idiv bh ; call rax
0x000002000043a927 : idiv bh ; cmovne eax, r8d ; ret
0x00000200001f3cf6 : idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x820f
0x00000200001f3d09 : idiv bh ; dec dword ptr [rax + 0x3b] ; ret 0x870f
0x0000020000050f6a : idiv bh ; dec dword ptr [rax + 0x3b] ; sal byte ptr [rdi - 0x14], 1 ; ret
0x000002000079fd6d : idiv bh ; dec dword ptr [rax + 3] ; ret 0x3b49
0x00000200000c12b9 : idiv bh ; dec dword ptr [rax + 3] ; ret 0xc148
0x0000020000432154 : idiv bh ; dec dword ptr [rax - 0x75] ; add dword ptr [rcx - 0x7c], eax ; ret 0x1774
0x00000200000afd2a : idiv bh ; dec dword ptr [rax - 0x75] ; ret
0x000002000004e8da : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x348
0x00000200000f10d8 : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x349
0x000002000004e753 : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x3b48
0x00000200000a26ec : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x3b4c
0x0000020000102e91 : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x6483
0x00000200001ea05a : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8548
0x0000020000024644 : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8b44
0x00000200007a7e71 : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8b48
0x0000020000011a14 : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8b4c
0x000002000008f8ae : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8d4c
0x000002000009f805 : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0xb849
0x0000020000038e86 : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200001fb0d5 : idiv bh ; dec dword ptr [rax - 0x75] ; ret 0xf44
0x000002000079ffcd : idiv bh ; dec dword ptr [rax - 0x7d] ; ret
0x000002000012bba6 : idiv bh ; dec dword ptr [rax - 9] ; ret
0x00000200007acde3 : idiv bh ; dec dword ptr [rbx + rcx*4 + 0x35] ; ret
0x00000200000390ce : idiv bh ; dec dword ptr [rcx + 0x2b] ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200000a5bb5 : idiv bh ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000049d0d : idiv bh ; dec dword ptr [rcx - 0x75] ; ret 0x3b48
0x000002000079e7ed : idiv bh ; dec dword ptr [rcx - 0x75] ; ret 0x8b4c
0x0000020000101694 : idiv bh ; dec dword ptr [rcx - 0x75] ; ret 0xb60f
0x00000200000d91ea : idiv bh ; dec dword ptr [rcx - 0x75] ; ret 0xb949
0x00000200001f758f : idiv bh ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200006e910d : idiv bh ; inc dword ptr [rbp - 0xfd8740] ; ret
0x00000200000a93fc : idiv bh ; inc dword ptr [rcx - 0x7f] ; jmp qword ptr [rax]
0x00000200005fc706 : idiv bh ; jae 0x200005fc715 ; or eax, 0xffffffff ; ret
0x00000200004f80a0 : idiv bh ; jmp 0x200004f806a
0x000002000001356a : idiv bh ; jmp qword ptr [rcx]
0x00000200005b15fc : idiv bh ; lea rcx, qword ptr [rbp - 0x40] ; call 0x200001daef1
0x00000200005b327b : idiv bh ; mov dword ptr [r8 + 0xc], r11d ; ret
0x00000200005b4b60 : idiv bh ; mov ebx, 0xc0000024 ; jmp 0x20000520e61
0x0000020000440cf1 : idiv bh ; mov rax, qword ptr [rcx + rax*8] ; ret
0x000002000015b987 : idiv bh ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x000002000015dd07 : idiv bh ; nop ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x000002000015dc41 : idiv bh ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x000002000004a240 : idiv bh ; push qword ptr [rbx] ; fisttp dword ptr [rax + 0xb] ; ret 0x8b49
0x00000200000b0948 : idiv bh ; push rsi ; ret
0x000002000045879c : idiv bh ; ret
0x0000020000203154 : idiv bh ; ret 0x8149
0x00000200005fb97a : idiv bh ; xor eax, eax ; ret
0x00000200004719a8 : idiv byte ptr [rax - 0x7b74b701] ; ret 0x8930
0x000002000049fa37 : idiv byte ptr [rbx] ; ret 0xb841
0x0000020000729859 : idiv byte ptr [rdi + rdi*8 + 0x74c98548] ; and eax, ebp ; ret 0
0x00000200006ce1eb : idiv dword ptr [r11] ; ret 0x820f
0x00000200003ed415 : idiv dword ptr [rax + 1] ; ret
0x00000200005242db : idiv dword ptr [rax - 0x3ffffff3] ; ret
0x0000020000462265 : idiv dword ptr [rbx] ; ret
0x00000200006ce1ec : idiv dword ptr [rbx] ; ret 0x820f
0x00000200002118a8 : idiv ecx ; add eax, r9d ; ret
0x0000020000117b74 : idiv ecx ; ret
0x00000200000f3add : idiv edi ; add rsp, 0x28 ; ret
0x00000200000fefec : idiv edi ; add rsp, 0x48 ; ret
0x00000200001bf5fb : idiv edi ; add rsp, 0x60 ; pop rbp ; ret
0x00000200001bd9ae : idiv edi ; add rsp, 0x60 ; pop rbx ; ret
0x00000200001bb358 : idiv edi ; add rsp, 0x68 ; ret
0x00000200001c1c1b : idiv edi ; add rsp, 0x78 ; ret
0x00000200001be71e : idiv edi ; add rsp, 0xa8 ; ret
0x00000200001bf999 : idiv edi ; add rsp, 0xb8 ; ret
0x000002000042ec8c : idiv edi ; call r10
0x0000020000431b8f : idiv edi ; call rax
0x00000200001ade63 : idiv edi ; call rdx
0x000002000048816e : idiv edi ; dec dword ptr [rax - 0x73] ; dec qword ptr [rax - 0x75] ; ret 0x48f0
0x000002000022a2d6 : idiv edi ; dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 0x2b] ; ret 0x8d49
0x0000020000582ddc : idiv edi ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000191c38 : idiv edi ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x00000200000cc9b5 : idiv edi ; dec dword ptr [rax - 0x75] ; ret
0x00000200000b20a8 : idiv edi ; dec dword ptr [rax - 0x75] ; ret 0x8b4c
0x00000200000969c8 : idiv edi ; dec dword ptr [rax - 0x75] ; ret 0xc2f6
0x00000200003c73f2 : idiv edi ; dec dword ptr [rax - 0x75] ; sbb ebp, eax ; jrcxz 0x200003c73c5 ; ret
0x00000200003c73f2 : idiv edi ; dec dword ptr [rax - 0x75] ; sbb ebp, eax ; jrcxz 0x200003c73c6 ; ret
0x00000200006c7a2e : idiv edi ; dec dword ptr [rax - 1] ; ret
0x000002000024e33e : idiv edi ; dec dword ptr [rbx + rcx*4 + 5] ; push rax ; ret 0xa
0x00000200000fa174 : idiv edi ; dec dword ptr [rbx - 0x3b7cb800] ; ret
0x000002000001d9af : idiv edi ; dec dword ptr [rcx - 0x75] ; pop rbp ; add dh, dh ; ret
0x0000020000010093 : idiv edi ; dec dword ptr [rcx - 0x75] ; ret
0x000002000003b208 : idiv edi ; dec dword ptr [rcx - 0x75fe4cf9] ; ret
0x0000020000185019 : idiv edi ; inc dword ptr [rbx] ; ret 0x8189
0x000002000000f9d2 : idiv edi ; inc dword ptr [rcx - 0x7c] ; ret
0x00000200000f2767 : idiv edi ; jmp 0x200000f252c
0x00000200005bb291 : idiv edi ; jmp 0x20000532493
0x00000200001d217c : idiv edi ; jmp qword ptr [rcx]
0x00000200000fb3d1 : idiv edi ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005066f4 : idiv edi ; mov al, bl ; add rsp, 0x40 ; pop rbx ; ret
0x00000200001cce44 : idiv edi ; mov al, bl ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001ae911 : idiv edi ; mov eax, 1 ; ret
0x00000200000f9fea : idiv edi ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000050d384 : idiv edi ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200007d5043 : idiv edi ; mov edx, 0xffc6c6c6 ; call qword ptr [rax]
0x00000200005139c3 : idiv edi ; push rax ; inc dword ptr [rax] ; ret
0x000002000007e458 : idiv edi ; push rsi ; ret
0x0000020000616cff : idiv edi ; ret
0x00000200000878e3 : idiv edi ; ret 0x8348
0x00000200005baf90 : idiv edi ; test cl, 3 ; je 0x200005bafa5 ; call 0x200006b7221
0x00000200001d6169 : idiv r15b ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000117b73 : idiv rcx ; ret
0x000002000016d86f : imul ah ; inc dword ptr [rbp - 0x75] ; ret 0x8b48
0x0000020000463826 : imul al ; ret 0x89ff
0x000002000070c27b : imul bl ; or cl, byte ptr [rbx] ; ret 0x1be
0x00000200004a63f4 : imul bl ; ret 0x48cc
0x0000020000706ec4 : imul byte ptr [rbx] ; ret 0x4779
0x00000200004fce0f : imul byte ptr [rbx] ; ret 0x53b
0x00000200007ae353 : imul byte ptr [rcx + 0x58948ff] ; ret
0x00000200006187a0 : imul byte ptr [rdi + rdi*8 + 0x245c8d4c] ; jo 0x2000061873d ; ret
0x00000200001974d9 : imul cl ; cmove esi, ecx ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000194a17 : imul cl ; ret
0x00000200004fdcab : imul cl ; ret 0xfffd
0x000002000059cd17 : imul cl ; xchg eax, edx ; jmp rdi
0x00000200006f87f5 : imul dword ptr [rdx - 0x78f17dba] ; xor al, 0xfc ; ret 0x4c1f
0x000002000062d608 : imul eax ; ret 0xb1aa
0x0000020000148c05 : imul eax, dword ptr [rax], 0 ; add cl, ch ; xor dl, ah ; add byte ptr [rax], al ; ret
0x0000020000037198 : imul eax, dword ptr [rax], 0x48 ; add esp, 0x38 ; ret
0x00000200006ccac6 : imul eax, dword ptr [rbx], 0 ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000249839 : imul eax, dword ptr [rcx + 0xf], -0x4a ; adc ecx, dword ptr [rcx - 1] ; ret
0x00000200007164b7 : imul eax, dword ptr [rcx], 0 ; test al, 2 ; je 0x200007164ca ; xor eax, eax ; ret
0x00000200003d0379 : imul eax, dword ptr [rdx], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003d027c : imul eax, dword ptr [rdx], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200003d0258 : imul eax, dword ptr [rdx], 0x8b480000 ; ret 0xc148
0x00000200003d0355 : imul eax, dword ptr [rdx], 0xb480000 ; ret 0x8949
0x00000200006a6603 : imul eax, dword ptr [rsi - 0x57], 0xc48348ff ; jo 0x200006a6672 ; ret
0x0000020000628af5 : imul eax, dword ptr [rsi], 0x8bf08b49 ; ret 0x8b4c
0x000002000021190b : imul eax, eax, 0x1c ; add eax, 0xac00 ; ret
0x00000200003e4a24 : imul eax, ecx ; add eax, r9d ; ret
0x0000020000203fe1 : imul eax, ecx ; div r8 ; ret
0x00000200003e4472 : imul eax, ecx ; ret
0x000002000002c3fa : imul eax, ecx ; shr rax, 0x38 ; ret
0x00000200003e499b : imul eax, ecx ; sub eax, r8d ; ret
0x00000200003e44e4 : imul eax, ecx ; xor eax, r10d ; ret
0x0000020000139bfe : imul eax, ecx, 0x989680 ; mov qword ptr [rdx], rax ; ret
0x00000200003e4933 : imul eax, edx ; ret
0x00000200003e4932 : imul eax, r10d ; ret
0x00000200003e4471 : imul eax, r9d ; ret
0x00000200003e499a : imul eax, r9d ; sub eax, r8d ; ret
0x00000200007a6da6 : imul ebp, dword ptr [rax], -0x18 ; ret
0x00000200001bcdfc : imul ebp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006740ad : imul ebp, dword ptr [rdi + rdi*8 + 0x50c48348], 0x5b ; ret
0x000002000013470f : imul ebp, dword ptr [rdx + 0x48], -0x75 ; ret
0x00000200004acc9c : imul ebx ; ret
0x000002000019aa5e : imul ebx, dword ptr [rax], -0x17 ; in eax, dx ; int1 ; dec dword ptr [rax + 0xb] ; ret 0x8948
0x0000020000147c56 : imul ebx, dword ptr [rax], 0x10618b48 ; jmp rdx
0x0000020000567452 : imul ebx, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rsi ; ret
0x0000020000195f02 : imul ebx, dword ptr [rcx], 0x8148fff1 ; ret 0
0x00000200005695e8 : imul ebx, ebp, -1 ; ret
0x0000020000456414 : imul ebx, edi, -1 ; add rsp, 0x28 ; ret
0x00000200007c5acb : imul ecx ; ret 0xfffd
0x0000020000087196 : imul ecx, dword ptr [rax - 0x75], 0xd ; ret 0x29ac
0x0000020000053c61 : imul ecx, dword ptr [rax], 0x2d ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001bf355 : imul ecx, dword ptr [rax], 0x48 ; mov eax, dword ptr [rip + 0x13a4f2] ; call rax
0x00000200007d2045 : imul ecx, dword ptr [rax], 0xa ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005d0bea : imul ecx, dword ptr [rbp - 0x73], 0x8b486875 ; ret
0x0000020000213f7a : imul ecx, dword ptr [rcx - 0x75], 0xb60f41d9 ; ret
0x0000020000565d8f : imul ecx, dword ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x00000200004812ab : imul ecx, dword ptr [rdi], -0x49 ; ret
0x00000200004d8e6d : imul ecx, dword ptr [rdx + 0x10], 0xbf0f4800 ; ret 0x8b4d
0x00000200000fd1a6 : imul ecx, edx, 0xd ; sub r8, rcx ; mov eax, r8d ; ret
0x000002000001a383 : imul edi, dword ptr [rax + 0xb], 0xc4834800 ; pop rax ; ret
0x00000200004554e3 : imul edi, dword ptr [rax + 1], 0xfc0920f ; mov dh, 0xc0 ; ret
0x00000200000ff3cc : imul edi, dword ptr [rax], -0x75 ; ret
0x000002000053e772 : imul edi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000040c64 : imul edi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006a7dc8 : imul edi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200007d1763 : imul edi, dword ptr [rbx], 0xb60fff8b ; ret
0x000002000079bdf1 : imul edi, dword ptr [rcx], -0x48 ; dec dword ptr [rcx + rcx*4 + 0x35] ; test byte ptr [rbx], al ; ret 0x48ff
0x0000020000165858 : imul edi, ebp, 0xfc085ff ; xchg eax, esp ; ret
0x000002000004f0a4 : imul edi, edi, 0xf641ffff ; ret 0xf10
0x00000200001c0265 : imul edx, dword ptr [rax + 0x48], -0x75 ; add eax, 0x1395e2 ; call rax
0x0000020000480e58 : imul edx, dword ptr [rax + rax], -0x75 ; pop rsp ; ret 0x4804
0x000002000043c809 : imul edx, dword ptr [rax], -0x78 ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000200005dbcde : imul edx, dword ptr [rbp - 0x11], 0x5db60fff ; add esi, esi ; ret
0x000002000061ad0d : imul edx, dword ptr [rcx], 0 ; add bh, bh ; ret
0x00000200007a6da3 : imul esi, dword ptr [rax], -0x77 ; imul ebp, dword ptr [rax], -0x18 ; ret
0x000002000000ec56 : imul esi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000003a920 : imul esi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200006a3b01 : imul esi, dword ptr [rcx - 0x57], -1 ; add rsp, 0x78 ; ret
0x00000200007d6fd7 : imul esi, dword ptr [rcx - 0x7d], -0x2e ; and dword ptr [rbx], esi ; ret
0x00000200005e12f4 : imul esi, eax, 0xe9c033ff ; ret 0xf068
0x00000200003cb9eb : imul esi, ebx, 0x3d8840ff ; ret
0x00000200003f51c3 : imul esp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x0000020000492979 : imul esp, dword ptr [rbx + rbp], 0x48 ; add esp, 0x38 ; ret
0x000002000062d607 : imul r8d ; ret 0xb1aa
0x0000020000203fe0 : imul rax, rcx ; div r8 ; ret
0x000002000002c3f9 : imul rax, rcx ; shr rax, 0x38 ; ret
0x00000200003c6a38 : in al, -0x14 ; ret
0x000002000051ad48 : in al, -0x14 ; ret 0x40ff
0x0000020000551fa2 : in al, -0x15 ; adc al, 0x8b ; ret 0x348
0x000002000020758d : in al, -0x15 ; dec dword ptr [rcx - 0x74b3f7ba] ; ret
0x0000020000709059 : in al, -0x18 ; xor ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; inc dword ptr [rcx + 0x3b] ; ret
0x000002000041dbd8 : in al, -0x1a ; ret
0x0000020000671d42 : in al, -0x34 ; dec dword ptr [rax - 0x39] ; ret 0x3c80
0x00000200003e6ffd : in al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200003fff28 : in al, -0x5a ; sar bh, 0x8b ; ret
0x000002000021eb68 : in al, -0x68 ; in al, -1 ; add rsp, 0x38 ; ret
0x00000200000fa818 : in al, -0x6f ; cld ; dec dword ptr [rax - 0x75] ; ret
0x000002000065b574 : in al, -0x73 ; push rax ; dec dword ptr [rax - 0x7d] ; ret 0x4803
0x00000200005a8605 : in al, -0x75 ; ret
0x0000020000600d73 : in al, -0x75 ; ret 0x8d48
0x00000200001e00da : in al, -0x75 ; xor byte ptr [r15], cl ; xchg eax, ebp ; ret 0xc233
0x00000200001e1a5c : in al, -0x76 ; in al, -1 ; add rsp, 0x48 ; ret
0x000002000021cf0f : in al, -0xa ; ret
0x0000020000226dca : in al, -1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ccc8a : in al, -1 ; add rsp, 0x28 ; ret
0x000002000021eb6a : in al, -1 ; add rsp, 0x38 ; ret
0x000002000022b318 : in al, -1 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200001e1a5e : in al, -1 ; add rsp, 0x48 ; ret
0x00000200002160f6 : in al, -1 ; add rsp, 0x68 ; ret
0x00000200001d4465 : in al, -1 ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ce918 : in al, -1 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001b6c5c : in al, -1 ; movzx eax, al ; add rsp, 0x28 ; ret
0x0000020000036efb : in al, -1 ; ret
0x000002000021c76f : in al, -2 ; jmp 0x2000021c77d
0x0000020000102f2c : in al, -4 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000176d6e : in al, -7 ; inc dword ptr [rcx - 0x75] ; ret 0x20ba
0x00000200001ad4b4 : in al, -9 ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000049c8f7 : in al, 0 ; add byte ptr [rax], al ; call 0x200000c5b17
0x0000020000178ca8 : in al, 0x1d ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000038788 : in al, 0x24 ; adc byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x00000200000f8aec : in al, 0x26 ; or eax, dword ptr [rax] ; ret
0x00000200000a0dd8 : in al, 0x33 ; sub byte ptr [rax], al ; ret
0x00000200003d3c57 : in al, 0x41 ; add byte ptr [rax], al ; mov al, 1 ; ret
0x00000200006bbbca : in al, 0x41 ; mov eax, eax ; ret
0x00000200001fd214 : in al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200006bbe7b : in al, 0x48 ; add esp, 0x28 ; ret
0x0000020000590965 : in al, 0x48 ; mov ecx, dword ptr [rbp - 0x71] ; call 0x200001b63a0
0x0000020000199f7f : in al, 0x48 ; mov edi, dword ptr [rsp + 0x60] ; jmp 0x200000b61c4
0x00000200006d2898 : in al, 0x68 ; ret 0x4cff
0x0000020000456298 : in al, 0x6d ; ret 0x85ff
0x00000200005deb42 : in al, 0x74 ; sub byte ptr [rax - 0x75], cl ; ret
0x000002000068aff9 : in al, 0x75 ; add ecx, dword ptr [rax - 0x75] ; ret
0x0000020000059548 : in al, 0x75 ; and eax, dword ptr [rbp - 0x75] ; ret 0x8b48
0x000002000046c207 : in al, 0x75 ; or esi, esi ; ret
0x00000200007cfd5f : in al, 0x75 ; ret 0x94e9
0x0000020000059a55 : in al, 0x75 ; xor al, byte ptr [rbp - 0x75] ; ret 0x8b48
0x000002000062ce38 : in al, 0xb ; add cl, ch ; ret
0x00000200000a7ac3 : in al, 0xe ; add byte ptr [rcx + 0x23], cl ; ret
0x000002000048c797 : in al, 0xf ; mov dh, 0x57 ; add esi, esi ; ret 0xf08
0x00000200003f1163 : in al, 0xf ; test al, bh ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000544b2f : in al, 0xf ; test byte ptr [rdi], dh ; ret
0x000002000046be90 : in al, 0xf ; xchg eax, ebp ; rol cl, 0xe0 ; adc dh, byte ptr [rbx] ; ret
0x0000020000515861 : in al, 1 ; add byte ptr [rax], al ; call rdi
0x000002000001be4c : in al, 1 ; add byte ptr [rax], al ; ret
0x0000020000119b4f : in al, 5 ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x0000020000652da7 : in al, dx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x0000020000149c25 : in al, dx ; add byte ptr [rax], al ; add cl, ch ; adc al, ah ; add byte ptr [rax], al ; ret
0x00000200004250a0 : in al, dx ; add qword ptr [r8 + 0x10], r9 ; add rsp, 0x28 ; ret
0x00000200003c8496 : in al, dx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003c84e2 : in al, dx ; add rsp, 0x80 ; pop rbx ; ret
0x00000200004609b0 : in al, dx ; and ah, ch ; dec dword ptr [rax + 3] ; ret
0x0000020000164652 : in al, dx ; and al, 0xeb ; dec dword ptr [rcx - 0x7d] ; ret 0x4c08
0x000002000068c876 : in al, dx ; and byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200007954d2 : in al, dx ; and byte ptr [rax - 0x75], cl ; cmp dword ptr [rax - 0x75], ecx ; ret 0x8b4d
0x0000020000026348 : in al, dx ; and byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x7d] ; ret 0xe804
0x0000020000658374 : in al, dx ; and byte ptr [rax - 0x75], cl ; fld1 ; ret 0xded2
0x0000020000202a5a : in al, dx ; and byte ptr [rax - 0x75], cl ; jmp 0x1ff8368ecf4
0x00000200004e5bc8 : in al, dx ; and byte ptr [rax - 0x75], cl ; pop rcx ; sub dh, dh ; ret
0x00000200004343ed : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x3345
0x0000020000106250 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000052e9c2 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x8b49
0x0000020000085d68 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x0000020000617480 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0xdb33
0x00000200001d40d0 : in al, dx ; and byte ptr [rax - 0x75], cl ; rol dword ptr [rdi + rcx + 0x20], 1 ; ret
0x00000200004e4961 : in al, dx ; and byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000065c242 : in al, dx ; and byte ptr [rax - 9], cl ; ret 0xfff
0x00000200001d0fc8 : in al, dx ; and byte ptr [rbx + rcx*4 + 0x15], cl ; push rdi ; ret 0x14
0x00000200003ee7d0 : in al, dx ; and byte ptr [rbx - 0x74b3cfa6], cl ; ret 0xdb85
0x00000200001e6fef : in al, dx ; and byte ptr [rbx - 0x74b7d78f], cl ; ret 0x8b4c
0x00000200001cf723 : in al, dx ; and byte ptr [rbx], dh ; fisttp dword ptr [rbp + rcx*4 + 0x35] ; ret 0x51
0x0000020000569280 : in al, dx ; and byte ptr [rbx], dh ; shr al, cl ; ret
0x0000020000425598 : in al, dx ; and byte ptr [rcx + 0xf], al ; mov dh, 0x88 ; ret 6
0x00000200000fb775 : in al, dx ; and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc984
0x0000020000628558 : in al, dx ; and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc985
0x0000020000024cab : in al, dx ; and byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000009134 : in al, dx ; and byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000edea8 : in al, dx ; and byte ptr [rdx - 0x74b38fbf], cl ; ret 0x8b48
0x00000200000f7908 : in al, dx ; and dh, bh ; ret 0xc933
0x00000200000de542 : in al, dx ; and dh, dh ; ret 0xf01
0x00000200006c8044 : in al, dx ; call 0x1ffc3f8804e
0x00000200004e2ffe : in al, dx ; cmp bh, dh ; fimul dword ptr [rax + 0x63] ; ret 0x8b48
0x000002000003aaa6 : in al, dx ; cmp bh, dh ; ret 0xfffc
0x00000200001e36d6 : in al, dx ; cmp bh, dh ; ret 0xfffe
0x0000020000222ffa : in al, dx ; cmp byte ptr [rdi + rcx - 0x49], al ; ret 0xab8
0x00000200006b71e0 : in al, dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x00000200004609b2 : in al, dx ; dec dword ptr [rax + 3] ; ret
0x0000020000461f62 : in al, dx ; dec dword ptr [rax - 0x3f] ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000016a983 : in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x000002000017d884 : in al, dx ; dec dword ptr [rax - 0x75] ; ret 0x3b48
0x000002000017fad0 : in al, dx ; dec dword ptr [rax - 0x75] ; ret 0x64e9
0x000002000017e8a3 : in al, dx ; dec dword ptr [rax - 0x7d] ; call qword ptr [rax]
0x00000200001a7c7f : in al, dx ; dec dword ptr [rax - 0x7d] ; jmp qword ptr [rax]
0x000002000017d268 : in al, dx ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000169a2b : in al, dx ; dec dword ptr [rbp - 0x75] ; or byte ptr [rbx], al ; ret
0x00000200004315fe : in al, dx ; dec dword ptr [rbx + 0x7f9e8d8] ; ret
0x000002000017e79a : in al, dx ; dec dword ptr [rcx - 0x75] ; ret
0x000002000017d4b7 : in al, dx ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000017d220 : in al, dx ; dec dword ptr [rcx - 1] ; ret 0x9ae9
0x0000020000439760 : in al, dx ; in al, dx ; ret 0x8bff
0x0000020000456980 : in al, dx ; inc dword ptr [rax] ; ret
0x00000200001f5485 : in al, dx ; inc dword ptr [rbp - 0x74ba8a40] ; ret 0x43eb
0x00000200005cf7e6 : in al, dx ; inc dword ptr [rbp - 0x75] ; ret 0x1ba
0x000002000016d870 : in al, dx ; inc dword ptr [rbp - 0x75] ; ret 0x8b48
0x0000020000234f05 : in al, dx ; inc dword ptr [rcx - 0x7f] ; call qword ptr [rcx]
0x000002000017dd43 : in al, dx ; inc dword ptr [rcx - 0xa] ; ret
0x000002000016d54b : in al, dx ; inc dword ptr [rcx - 0xa] ; ret 0xf04
0x000002000017f9e8 : in al, dx ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200005d90b0 : in al, dx ; jns 0x200005d9065 ; call qword ptr [rax - 0x113d7917]
0x00000200001bdf9a : in al, dx ; jo 0x200001bdf2b ; ret 0x8b44
0x00000200003d7fd0 : in al, dx ; jo 0x200003d7f65 ; fld1 ; mov bh, 0x70 ; ret
0x00000200005098da : in al, dx ; lea eax, dword ptr [r8 + 0x48] ; ret
0x000002000048c37c : in al, dx ; mov bl, 0x48 ; add byte ptr [rcx + 3], cl ; int 0xff
0x000002000043b6ee : in al, dx ; mov byte ptr [r8], r10b ; ret
0x0000020000137b75 : in al, dx ; mov dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x00000200004b33b7 : in al, dx ; mov eax, 0xc0000058 ; ret
0x00000200006761e0 : in al, dx ; mov esi, 0x8b49ffc8 ; ret
0x000002000078261e : in al, dx ; mov rax, rdx ; jmp 0x20000782629
0x000002000078bb21 : in al, dx ; mov rax, rdx ; jmp 0x2000078bb2c
0x000002000078c3dd : in al, dx ; mov rax, rdx ; jmp 0x2000078c3e8
0x00000200006ce770 : in al, dx ; or eax, 0xffffffff ; ret
0x00000200000e9765 : in al, dx ; or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000020dde4 : in al, dx ; pavgb mm7, mm7 ; add rsp, 0x38 ; ret
0x00000200007a0ba6 : in al, dx ; pop rbx ; add byte ptr [rax], al ; ret
0x00000200003eba5e : in al, dx ; push -0x7400ccbb ; ret 0x348
0x000002000051cf7e : in al, dx ; push 0x7d358b44 ; ret 0xffe8
0x00000200004ecbd6 : in al, dx ; push rbp ; str word ptr [rax - 0x75] ; push rdx ; sbb dh, dh ; ret 0x4801
0x0000020000457414 : in al, dx ; push rbx ; movq qword ptr [rdx + r8*8], mm0 ; jmp 0x200004573c9
0x000002000016d555 : in al, dx ; push rsi ; ret 0x7402
0x000002000017e6a6 : in al, dx ; push rsi ; ret 0xf10
0x0000020000050f71 : in al, dx ; ret
0x000002000051ad49 : in al, dx ; ret 0x40ff
0x00000200003e00f0 : in al, dx ; ret 0x84ff
0x00000200004334e0 : in al, dx ; ret 0x8bff
0x000002000061e3c4 : in al, dx ; ret 0xccff
0x0000020000724598 : in al, dx ; ret 0xffc1
0x00000200005b4b68 : in al, dx ; ret 0xfff6
0x000002000040bfab : in al, dx ; sar bh, cl ; add rsp, 0x60 ; pop rbx ; ret
0x00000200007bb052 : in al, dx ; sub byte ptr [rax - 0x73], cl ; and al, 0x30 ; call 0x200005672bd
0x000002000022df8a : in al, dx ; sub byte ptr [rax - 0x75], cl ; add eax, 0xcb8bd ; call rax
0x00000200004ee062 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8349
0x0000020000054ec6 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8445
0x000002000045efb6 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8548
0x0000020000428852 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000007e8ae : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x0000020000009562 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0xc984
0x000002000062265a : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0xd233
0x000002000042dbcc : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0xf44
0x0000020000120846 : in al, dx ; sub byte ptr [rax - 0x7d], cl ; ret 0x4828
0x0000020000666406 : in al, dx ; sub byte ptr [rax - 0x7f], cl ; ret 0x7fff
0x00000200000436e5 : in al, dx ; test edx, edx ; jne 0x2000016f899 ; ret
0x0000020000136d72 : in al, dx ; xchg byte ptr [rdx], bh ; add dh, dh ; ret 0xf02
0x00000200000e8364 : in al, dx ; xor al, al ; ret
0x0000020000015872 : in al, dx ; xor byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000060fea5 : in al, dx ; xor byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000200003e93fc : in al, dx ; xor byte ptr [rbp - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0x8b45
0x00000200001245c9 : in al, dx ; xor byte ptr [rbx], dh ; dec dword ptr [rax - 0x75] ; fincstp ; ret 0xfffc
0x000002000071b618 : in al, dx ; xor byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000050d0f : in al, dx ; xor eax, eax ; ret
0x00000200001e3874 : in ax, dx ; inc dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x0000020000509267 : in eax, -0x14 ; ret
0x0000020000551735 : in eax, -0x15 ; adc al, 0x8b ; ret 0x348
0x00000200001e3cab : in eax, -0x15 ; dec dword ptr [rax - 9] ; ret
0x00000200005c6607 : in eax, -0x16 ; dec dword ptr [rax - 0x77] ; cmp ebp, ecx ; ret
0x00000200005d9501 : in eax, -0x17 ; ret 0xeed0
0x00000200004934b1 : in eax, -0x18 ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000462657 : in eax, -0x4a ; ret
0x0000020000225ff8 : in eax, -0x50 ; add ebx, eax ; xor al, al ; ret
0x00000200000034cc : in eax, -0x75 ; ret
0x0000020000652230 : in eax, -0x75 ; ret 0x8941
0x00000200004495b6 : in eax, -0x75 ; ret 0x8b48
0x0000020000133772 : in eax, -0x76 ; ret 0xccc3
0x000002000051f9e7 : in eax, -0x7a ; ret 0x8bff
0x0000020000449163 : in eax, -0xa ; ret
0x00000200003fbce7 : in eax, -1 ; add rsp, 0x28 ; ret
0x00000200005fe0cd : in eax, -1 ; add rsp, 0x48 ; ret
0x000002000067307e : in eax, -1 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001ba867 : in eax, -1 ; add rsp, 0x58 ; ret
0x00000200001c290b : in eax, -1 ; dec dword ptr [rcx - 0x77] ; adc byte ptr [r9 - 0x75], al ; ret 0x8949
0x0000020000215c86 : in eax, -1 ; mov al, bl ; add rsp, 0x40 ; pop rbx ; ret
0x00000200002203db : in eax, -1 ; mov byte ptr [rbx], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006318a6 : in eax, -1 ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005a3020 : in eax, -1 ; mov edx, esi ; mov rcx, rbx ; call 0x200004ff2d1
0x00000200002039ec : in eax, -1 ; xor al, al ; add rsp, 0x28 ; ret
0x00000200001ad48d : in eax, -9 ; dec dword ptr [rax - 9] ; ret
0x00000200006e291e : in eax, 0 ; add al, al ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000587ae7 : in eax, 0 ; add al, al ; jmp 0x200003f3d47
0x00000200005f4e84 : in eax, 0 ; add al, al ; jmp 0x200005510cb
0x000002000007c719 : in eax, 0x10 ; add byte ptr [rcx - 0x75], al ; ret
0x00000200001dadc1 : in eax, 0x1c ; add byte ptr [rbx - 0x7cb7dba7], cl ; ret
0x00000200007bc86b : in eax, 0x2a ; fdivr st(7) ; add rsp, 0x48 ; ret
0x000002000023cef8 : in eax, 0x33 ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200006f5f61 : in eax, 0x35 ; ret 0x80ff
0x000002000022a5b0 : in eax, 0x41 ; add dword ptr [rdx + 0x14], edx ; xor eax, eax ; ret
0x00000200004cbf17 : in eax, 0x43 ; ret 0x4cff
0x00000200004e6d92 : in eax, 0x48 ; inc eax ; add rsp, 0x38 ; ret
0x0000020000440cc7 : in eax, 0x48 ; mov eax, dword ptr [rdx] ; mov qword ptr [rcx], rax ; ret
0x000002000059ef30 : in eax, 0x59 ; add byte ptr [rcx + 3], cl ; iretd ; jmp rcx
0x000002000013d2a2 : in eax, 0x66 ; mov dword ptr [rcx], r10d ; mov rax, r9 ; ret
0x0000020000626617 : in eax, 0x69 ; ret 0xe9ff
0x000002000017ea7d : in eax, 0xc ; add byte ptr [rbx], dh ; shr cl, 0x15 ; ret 0xffec
0x0000020000788697 : in eax, 0xe ; ret 0x48ff
0x000002000013d2ce : in eax, 0xf ; mov bh, 1 ; movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x0000020000247e91 : in eax, dx ; adc eax, dword ptr [rcx - 0x7f] ; ret 0xff38
0x000002000003991f : in eax, dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000149c45 : in eax, dx ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000020000462b12 : in eax, dx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fb05], al ; ret 8
0x000002000007efe1 : in eax, dx ; add eax, dword ptr [rcx - 0xa] ; ret 0xf07
0x0000020000726df8 : in eax, dx ; add eax, dword ptr [rdi + rcx - 0x51] ; fld qword ptr [rcx - 0x75] ; ret
0x00000200000ed01c : in eax, dx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ca62a : in eax, dx ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200005f608f : in eax, dx ; and edx, ebx ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000020000471132 : in eax, dx ; bts dword ptr [rdx], 0x18 ; ret
0x000002000044fcd3 : in eax, dx ; call 0x2000007a5e4
0x00000200006c175e : in eax, dx ; call 0x2000024da43
0x00000200006c175d : in eax, dx ; call 0x2000024da44
0x000002000018572c : in eax, dx ; call qword ptr [rax - 0x1213d817]
0x000002000019eca7 : in eax, dx ; call qword ptr [rax - 0xd703d17]
0x00000200000288c3 : in eax, dx ; call qword ptr [rbx]
0x0000020000611d07 : in eax, dx ; call rax
0x000002000019bcbc : in eax, dx ; dec dword ptr [rax + 0x3b] ; ret 0xc74
0x000002000016f0ea : in eax, dx ; dec dword ptr [rax + 0x63] ; ret
0x000002000018189e : in eax, dx ; dec dword ptr [rax + 3] ; ret 0x2bb
0x0000020000427acc : in eax, dx ; dec dword ptr [rax + 3] ; ret 0x8948
0x0000020000183365 : in eax, dx ; dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rcx - 0x75] ; ret 0x3b49
0x00000200005d382a : in eax, dx ; dec dword ptr [rax - 0x75] ; jns 0x200005d3850 ; jmp 0x200004afabe
0x00000200005d0f76 : in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x000002000044588c : in eax, dx ; dec dword ptr [rax - 0x75] ; ret 0x83c3
0x00000200004511c8 : in eax, dx ; dec dword ptr [rax - 0x77] ; jo 0x200004511df ; call 0x2000007d089
0x00000200004cdcde : in eax, dx ; dec dword ptr [rax - 0x7d] ; ret
0x000002000016feb1 : in eax, dx ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000428a4e : in eax, dx ; dec dword ptr [rbx - 0x6c561728] ; ret
0x0000020000675ca2 : in eax, dx ; dec dword ptr [rbx - 0x98fdba4] ; ret
0x00000200004232bc : in eax, dx ; dec dword ptr [rcx + rcx*4 + 0x3d] ; ret
0x0000020000181178 : in eax, dx ; dec dword ptr [rcx - 0x7f] ; jmp rax
0x00000200001fad7f : in eax, dx ; dec dword ptr [rdi] ; mov dh, 0xc0 ; mov cr8, rax ; ret
0x00000200001cbf2d : in eax, dx ; idiv bh ; add rsp, 0x68 ; ret
0x00000200001e3875 : in eax, dx ; inc dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x00000200001848b2 : in eax, dx ; inc dword ptr [rcx + 0xf] ; mov bh, 0x5d ; cmp ah, byte ptr [rsi - 1] ; ret
0x00000200005d0d38 : in eax, dx ; inc dword ptr [rcx - 0x75] ; salc ; call 0x2000024d007
0x00000200005a3fcb : in eax, dx ; inc dword ptr [rsi] ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000019aa62 : in eax, dx ; int1 ; dec dword ptr [rax + 0xb] ; ret 0x8948
0x0000020000549efc : in eax, dx ; jg 0x20000549f0f ; add byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x00000200000709ea : in eax, dx ; jle 0x20000070a04 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000020000609e3e : in eax, dx ; jmp rsi
0x00000200000269a4 : in eax, dx ; jne 0x200000269f0 ; mov rbx, qword ptr [rsp + 0x28] ; pop rbp ; ret
0x00000200000a49a3 : in eax, dx ; jne 0x200000a49df ; lea rcx, qword ptr [rdi + 0x48] ; call 0x20000070bc9
0x00000200004520ff : in eax, dx ; lodsb al, byte ptr [rsi] ; ret 0xebff
0x0000020000004ca8 : in eax, dx ; mov ch, 0x15 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000012d926 : in eax, dx ; mov dword ptr [r8], eax ; ret
0x0000020000653c65 : in eax, dx ; mov dword ptr [rip - 0x312b48], edx ; xor eax, eax ; ret
0x00000200004b213e : in eax, dx ; mov eax, 1 ; ret
0x0000020000050fb2 : in eax, dx ; mov rax, r8 ; ret
0x000002000023d917 : in eax, dx ; mov rax, rdx ; jmp 0x2000023d922
0x00000200002409f3 : in eax, dx ; mov rax, rdx ; jmp 0x200002409fe
0x0000020000246591 : in eax, dx ; mov rax, rdx ; jmp 0x2000024659c
0x0000020000246863 : in eax, dx ; mov rax, rdx ; jmp 0x20000246893
0x000002000024a905 : in eax, dx ; mov rax, rdx ; jmp 0x2000024a910
0x000002000024aaa3 : in eax, dx ; mov rax, rdx ; jmp 0x2000024aaae
0x000002000024abec : in eax, dx ; mov rax, rdx ; jmp 0x2000024abf7
0x0000020000785b40 : in eax, dx ; mov rax, rdx ; jmp 0x20000785b4b
0x0000020000789834 : in eax, dx ; mov rax, rdx ; jmp 0x2000078983f
0x000002000011989b : in eax, dx ; mov rax, rdx ; ret
0x00000200001a3e6e : in eax, dx ; or cl, ch ; int1 ; mov ebx, esi ; dec dword ptr [rax - 0x75] ; ret 0x84e9
0x000002000002b70d : in eax, dx ; or dword ptr [rcx + 0x23], ecx ; call 0x20048c54265
0x000002000006cd94 : in eax, dx ; or eax, 0x1c8b4d04 ; ret
0x00000200001d4638 : in eax, dx ; or eax, 0xffffffff ; ret
0x000002000005a1ed : in eax, dx ; push qword ptr [rsp + rsi*2 - 0xa] ; ret 0xf08
0x000002000016dfc9 : in eax, dx ; push rax ; xadd qword ptr [r9 + 0x40], r8 ; ret
0x00000200006bbfbc : in eax, dx ; pushfq ; leave ; inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xd03b
0x000002000018e979 : in eax, dx ; ret
0x0000020000521fff : in eax, dx ; ret 0x85ff
0x000002000046f2ba : in eax, dx ; ret 0xf0ff
0x0000020000239bc7 : in eax, dx ; ret 0xffe0
0x00000200005b02ff : in eax, dx ; ret 6
0x00000200001d2b70 : in eax, dx ; sbb ax, 0x8a00 ; ret 0xccc3
0x00000200006f6adf : in eax, dx ; sub edx, eax ; dec dword ptr [rax - 1] ; ret
0x0000020000714b0f : in eax, dx ; test byte ptr [rcx], al ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000008396e : in eax, dx ; xchg eax, ebp ; adc byte ptr [rax], al ; ret
0x00000200000770e0 : in eax, dx ; xor al, al ; ret
0x000002000002b136 : in eax, dx ; xor eax, eax ; ret
0x00000200002350a4 : inc al ; shr ecx, 1 ; jne 0x200002350aa ; ret
0x0000020000036712 : inc ax ; mov word ptr [rcx + 2], ax ; ret
0x0000020000128bbf : inc ax ; mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x000002000013cbd2 : inc bl ; lea rax, qword ptr [rcx + rax - 3] ; ret
0x000002000045396c : inc bl ; xor eax, eax ; ret
0x000002000040278c : inc byte ptr [r13 + 3] ; ret 0xf41
0x000002000040278d : inc byte ptr [rbp + 3] ; ret 0xf41
0x0000020000035502 : inc byte ptr [rbp - 0x76] ; ret 0x8b44
0x000002000054f476 : inc byte ptr [rcx + 0x3b] ; ret 0x2377
0x000002000065f237 : inc byte ptr [rcx + 0xf] ; fdivr st(6), st(0) ; ret 0x7404
0x0000020000211f3c : inc byte ptr [rcx - 0x48] ; jmp qword ptr [rbx]
0x00000200000f7ac4 : inc byte ptr [rcx - 0x75] ; ret
0x000002000007f080 : inc byte ptr [rcx - 0x75] ; ret 0x2b49
0x000002000070b4b5 : inc byte ptr [rcx - 0x75] ; xlatb ; call rdi
0x00000200005c45a2 : inc byte ptr [rdi + rcx] ; test dword ptr [rbx - 0x7c001507], eax ; call qword ptr [rax]
0x000002000014449b : inc byte ptr [rsi + 0xf] ; ret
0x000002000007db90 : inc dl ; jmp 0x2000007db60
0x00000200001b9be9 : inc dword ptr [0x2e44] ; ret
0x0000020000434329 : inc dword ptr [0x2e48] ; ret
0x000002000044ef25 : inc dword ptr [0x2e4c] ; ret
0x0000020000123215 : inc dword ptr [0x5e04] ; ret
0x00000200001b9bf5 : inc dword ptr [0x5e40] ; ret
0x00000200003cc8cc : inc dword ptr [eax] ; add rsp, 0x40 ; pop rbx ; ret
0x000002000001ff4a : inc dword ptr [r11 + r9*4 + 0x44] ; ret 0x4404
0x000002000001ffe8 : inc dword ptr [r11 + r9*4 + 0x4c] ; ret 0x4404
0x0000020000515d27 : inc dword ptr [r13 + 0x4d850fc1] ; ret
0x0000020000515df5 : inc dword ptr [r13 + 0xb850fc1] ; ret 9
0x00000200006ae5d3 : inc dword ptr [r13 - 0x740a8a3d] ; ret
0x00000200001ba0da : inc dword ptr [r14 - 0x75] ; ret 0x4504
0x00000200003e6d01 : inc dword ptr [r8 + 0x10] ; xor eax, eax ; ret
0x0000020000142ab3 : inc dword ptr [r8] ; ret
0x0000020000027b70 : inc dword ptr [r9 + 0x23] ; ret 0xc82b
0x00000200004877ed : inc dword ptr [r9 + 0x3b] ; ret 0x860f
0x000002000019ad1a : inc dword ptr [r9 - 0x48] ; ret 0
0x0000020000209043 : inc dword ptr [r9] ; add byte ptr [rax], al ; add al, ch ; ret 0xe6bc
0x0000020000538b81 : inc dword ptr [rax + 0x10] ; ret
0x00000200003e6d02 : inc dword ptr [rax + 0x10] ; xor eax, eax ; ret
0x00000200007189b6 : inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x00000200001ead8f : inc dword ptr [rax + 0x1f08] ; ret
0x0000020000114ae6 : inc dword ptr [rax + 0x200] ; ret
0x00000200000ca70a : inc dword ptr [rax + 0x6194] ; call qword ptr [rip + 0x18c25a]
0x0000020000228c41 : inc dword ptr [rax + 0x72000002] ; ret 0xff33
0x00000200001ce70d : inc dword ptr [rax + 0xc0] ; mov rax, rdx ; ret
0x00000200004526eb : inc dword ptr [rax + 8] ; mov eax, edx ; add rsp, 0x28 ; ret
0x000002000064c5a0 : inc dword ptr [rax + rax*8 + 0x4d8d5474] ; or ch, al ; ret
0x000002000060c301 : inc dword ptr [rax + rax*8 - 0x7421bbf1] ; ret
0x00000200004914fc : inc dword ptr [rax + rax*8 - 0x74b7f68c] ; ret
0x00000200005eb35c : inc dword ptr [rax + rax*8 - 0x74bbf28b] ; ret
0x00000200006970d0 : inc dword ptr [rax + rax*8 - 0x7cb6e48b] ; ret
0x00000200006cfc0d : inc dword ptr [rax + rax*8 - 0x7cb7e88c] ; ret
0x00000200001398ab : inc dword ptr [rax + rax*8 - 0x7eb6eb8c] ; ret 0x1000
0x00000200001d60a2 : inc dword ptr [rax + rax*8 - 0xb6aa8c] ; ret
0x00000200001c8325 : inc dword ptr [rax + rax*8 - 0xbef78c] ; ret 0x3b45
0x000002000067109f : inc dword ptr [rax + rbp*8] ; ret 0xb90f
0x00000200006f35cb : inc dword ptr [rax + rdi + 0x25] ; mov al, 0x73 ; ret 0xfff
0x0000020000671099 : inc dword ptr [rax - 0x36de58f3] ; inc dword ptr [rax + rbp*8] ; ret 0xb90f
0x0000020000114750 : inc dword ptr [rax - 0x4a] ; add dword ptr [rax - 0x75], ecx ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000f09ef : inc dword ptr [rax - 0x76] ; clc ; jmp 0x200000f09d1
0x00000200004190bf : inc dword ptr [rax - 0x7c] ; test byte ptr [rdi], 0x84 ; ret 1
0x00000200001e3876 : inc dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x00000200001e1709 : inc dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret
0x0000020000411335 : inc dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3348
0x0000020000198b04 : inc dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8348
0x000002000079ea08 : inc dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret
0x0000020000186a07 : inc dword ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ror dword ptr [rax + 0xf], 0x43 ; ret 0xba48
0x0000020000036708 : inc dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x8966
0x000002000010f638 : inc dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000717883 : inc dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000802aa : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200000e37d1 : inc dword ptr [rax] ; add byte ptr [rbx + 0x48b49c2], cl ; ret
0x0000020000416397 : inc dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0x870f
0x00000200003e09c1 : inc dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x42], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4918
0x00000200000b8788 : inc dword ptr [rax] ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x0000020000448cc1 : inc dword ptr [rax] ; add byte ptr [rcx - 0x73], al ; frstor dword ptr [rsi - 0x7b] ; ret
0x00000200001c16d1 : inc dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0x2348
0x00000200000462dd : inc dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000052d9cc : inc dword ptr [rax] ; add byte ptr [rcx - 0x7b], al ; ret 0x850f
0x00000200005f1fb1 : inc dword ptr [rax] ; add byte ptr [rdi + rcx - 0x43], al ; rol byte ptr [rcx - 0x7d], 1 ; ret 0x41f2
0x00000200006a9f93 : inc dword ptr [rax] ; add byte ptr [rdx - 0x48f0bb35], cl ; ret
0x0000020000450c8c : inc dword ptr [rax] ; add byte ptr [rsi + 0x23], ah ; ret 0x8966
0x000002000001fc4a : inc dword ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x000002000055cd27 : inc dword ptr [rax] ; add byte ptr [rsi + 3], ah ; ret 0x8966
0x00000200007c1d80 : inc dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000726991 : inc dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007c1db9 : inc dword ptr [rax] ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200003cffb6 : inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000558157 : inc dword ptr [rax] ; add rsp, 0x38 ; ret
0x00000200003cc8ce : inc dword ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x000002000000a61d : inc dword ptr [rax] ; je 0x2000000a626 ; ret
0x0000020000425149 : inc dword ptr [rax] ; je 0x20000425190 ; add rsp, 0x28 ; ret
0x0000020000653c37 : inc dword ptr [rax] ; je 0x20000653c4a ; mov eax, 0xc0000303 ; ret
0x000002000043b116 : inc dword ptr [rax] ; jne 0x2000043b129 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043b6fd : inc dword ptr [rax] ; jne 0x2000043b70e ; add rsp, 0x28 ; ret
0x0000020000564722 : inc dword ptr [rax] ; jne 0x200005fbee2 ; ret
0x0000020000569589 : inc dword ptr [rax] ; jne 0x200005fe05e ; ret
0x0000020000722036 : inc dword ptr [rax] ; jne 0x20000722049 ; mov eax, 0xc00000bb ; ret
0x00000200007b1d72 : inc dword ptr [rax] ; mov al, 1 ; add rsp, 0x78 ; ret
0x0000020000568d84 : inc dword ptr [rax] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000070e26e : inc dword ptr [rax] ; mov rdx, rcx ; jne 0x2000070e281 ; xor eax, eax ; ret
0x0000020000142ab4 : inc dword ptr [rax] ; ret
0x00000200007297af : inc dword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200007adc23 : inc dword ptr [rbp + 0x15880fc0] ; ret 1
0x00000200005bd11e : inc dword ptr [rbp + 0x1f840fc0] ; ret 0xffe9
0x00000200001a6142 : inc dword ptr [rbp + 0x32] ; dec dword ptr [rax - 0x39] ; ret
0x00000200006bbc66 : inc dword ptr [rbp + 0x33] ; fild dword ptr [rbp - 0x75] ; ret
0x000002000023efad : inc dword ptr [rbp + 0x33] ; fisttp dword ptr [rbp - 0x75] ; ret
0x000002000021cf0c : inc dword ptr [rbp + 0x33] ; in al, -0xa ; ret
0x0000020000586ac6 : inc dword ptr [rbp + 0x33] ; inc dword ptr [rcx - 1] ; ret 0x8348
0x00000200005bc5a0 : inc dword ptr [rbp + 0x33] ; inc dword ptr [rcx - 1] ; ret 0x8349
0x00000200002492e8 : inc dword ptr [rbp + 0x33] ; rol byte ptr [rbp - 0x75], cl ; ret 0x894c
0x00000200004530fe : inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x4589
0x0000020000535a45 : inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x8348
0x000002000048a3c9 : inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x8948
0x000002000019278a : inc dword ptr [rbp + 0x33] ; ror byte ptr [rax - 0x73], 0xd ; ret
0x00000200004d9f93 : inc dword ptr [rbp + 0x33] ; ror byte ptr [rax - 0x73], 0xd ; ret 0xe479
0x00000200006bcfdb : inc dword ptr [rbp + 0x33] ; ror byte ptr [rax - 0x73], 5 ; jp 0x200006bcfb5 ; ret
0x0000020000643ccb : inc dword ptr [rbp + 0x33] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200007c5ee5 : inc dword ptr [rbp + 0x33] ; sal byte ptr [rbx], 0xd2 ; call 0x200000620f8
0x00000200006f795e : inc dword ptr [rbp + 0x391275c0] ; ret
0x000002000020eed9 : inc dword ptr [rbp + 0x39] ; ret 0x7304
0x0000020000533080 : inc dword ptr [rbp + 0x3b] ; ret
0x0000020000497285 : inc dword ptr [rbp + 0x3b] ; ret 0x840f
0x00000200000baa12 : inc dword ptr [rbp + 0x450f45c0] ; ret 0x8944
0x00000200006e0cd9 : inc dword ptr [rbp + 0x480575c0] ; add esp, 0x28 ; ret
0x00000200006c9463 : inc dword ptr [rbp + 0x480f48db] ; ret 0x5c89
0x0000020000515d28 : inc dword ptr [rbp + 0x4d850fc1] ; ret
0x0000020000515d9d : inc dword ptr [rbp + 0x64880fc0] ; ret 9
0x00000200005b6336 : inc dword ptr [rbp + 0x69850fc0] ; ret
0x00000200005bcff7 : inc dword ptr [rbp + 0x76880fc0] ; ret 0xffe9
0x0000020000018cbf : inc dword ptr [rbp + 0x78840fc9] ; ret 0x14
0x000002000043f72f : inc dword ptr [rbp + 0x7d8d41c0] ; ret 0x440f
0x0000020000515df6 : inc dword ptr [rbp + 0xb850fc1] ; ret 9
0x00000200005a9a45 : inc dword ptr [rbp + 3] ; ret
0x00000200005448ef : inc dword ptr [rbp + 3] ; ret 0x8944
0x00000200001674fb : inc dword ptr [rbp + 3] ; shr cl, 0x12 ; ret
0x000002000053755c : inc dword ptr [rbp + rcx*4 + 0x42] ; js 0x20000537552 ; sbb al, byte ptr [rbx] ; ret 0x4dff
0x0000020000674e88 : inc dword ptr [rbp + rcx*4 + 0x4f] ; adc al, 0x23 ; ret 0x8948
0x0000020000413d10 : inc dword ptr [rbp - 0x147bf040] ; call qword ptr [rdi]
0x0000020000410fab : inc dword ptr [rbp - 0x167a8a40] ; ret
0x0000020000632b34 : inc dword ptr [rbp - 0x17af8740] ; ret 0xdc9d
0x00000200003fecbf : inc dword ptr [rbp - 0x3d7bf040] ; jmp 0x200003fece4
0x00000200004f28f2 : inc dword ptr [rbp - 0x66f0be40] ; ret
0x0000020000054094 : inc dword ptr [rbp - 0x73] ; add r8d, ebp ; ret 0x7d2
0x00000200006ae5d4 : inc dword ptr [rbp - 0x740a8a3d] ; ret
0x00000200004636cb : inc dword ptr [rbp - 0x74968740] ; ret
0x00000200001f0f4e : inc dword ptr [rbp - 0x749a8b13] ; ret
0x00000200001f5486 : inc dword ptr [rbp - 0x74ba8a40] ; ret 0x43eb
0x00000200004315a7 : inc dword ptr [rbp - 0x74d98a25] ; ret
0x00000200004fe05d : inc dword ptr [rbp - 0x74dd8725] ; ret
0x000002000077aff3 : inc dword ptr [rbp - 0x74dd8b2e] ; ret 0x8b48
0x00000200006267da : inc dword ptr [rbp - 0x74eb8b25] ; ret
0x000002000019e119 : inc dword ptr [rbp - 0x74ee8a40] ; ret
0x00000200004f7a8b : inc dword ptr [rbp - 0x74f28725] ; ret
0x000002000045e105 : inc dword ptr [rbp - 0x74f28b40] ; ret
0x00000200006f3fe9 : inc dword ptr [rbp - 0x74f38740] ; ret
0x00000200005af911 : inc dword ptr [rbp - 0x74f88625] ; ret
0x0000020000400551 : inc dword ptr [rbp - 0x74fb8b13] ; ret
0x0000020000119f7b : inc dword ptr [rbp - 0x75] ; ret
0x00000200005cf7e7 : inc dword ptr [rbp - 0x75] ; ret 0x1ba
0x00000200004a5ea0 : inc dword ptr [rbp - 0x75] ; ret 0x33e9
0x00000200007880de : inc dword ptr [rbp - 0x75] ; ret 0x3b76
0x000002000048a955 : inc dword ptr [rbp - 0x75] ; ret 0x8944
0x00000200000bb000 : inc dword ptr [rbp - 0x75] ; ret 0x8b41
0x000002000016d871 : inc dword ptr [rbp - 0x75] ; ret 0x8b48
0x00000200006c1261 : inc dword ptr [rbp - 0x75] ; ret 0x8b49
0x00000200001ea5d6 : inc dword ptr [rbp - 0x75] ; ret 0x8b4c
0x00000200005ac3b1 : inc dword ptr [rbp - 0x75] ; ret 0x8d48
0x00000200001a96f0 : inc dword ptr [rbp - 0x75] ; ret 0xb60f
0x0000020000792615 : inc dword ptr [rbp - 0x75ec8740] ; ret
0x00000200001d6e70 : inc dword ptr [rbp - 0x76] ; ret 0x8b48
0x00000200001d885f : inc dword ptr [rbp - 0x76] ; xchg eax, edi ; ret
0x00000200005deb3f : inc dword ptr [rbp - 0x7b] ; in al, 0x74 ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200006bbfbf : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xd03b
0x0000020000017075 : inc dword ptr [rbp - 0x7b] ; sal byte ptr [rax + rbp + 0x44], 3 ; ret
0x00000200000f0ede : inc dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x4f ; ret 0x8388
0x000002000064c0e9 : inc dword ptr [rbp - 0x8e88740] ; ret
0x00000200004e142c : inc dword ptr [rbp - 0x8e98125] ; fisttp dword ptr [rax + 0x63] ; ret
0x00000200001df374 : inc dword ptr [rbp - 0x9c08b40] ; ret
0x000002000059471e : inc dword ptr [rbp - 0x9e68a37] ; ret 0x7502
0x00000200006444e5 : inc dword ptr [rbp - 0xbc8b40] ; ret
0x00000200006c61ed : inc dword ptr [rbp - 0xce8a40] ; ret
0x00000200007b7a04 : inc dword ptr [rbp - 0xd28740] ; ret
0x00000200006577ed : inc dword ptr [rbp - 0xde8b40] ; ret
0x00000200005ae0a5 : inc dword ptr [rbp - 0xef8740] ; ret
0x00000200001ca3aa : inc dword ptr [rbp - 0xf48b40] ; ret
0x00000200007baa42 : inc dword ptr [rbp - 0xf68740] ; ret
0x0000020000651240 : inc dword ptr [rbp - 0xf68b40] ; ret
0x00000200007b0d03 : inc dword ptr [rbp - 0xf88740] ; ret
0x00000200005838ab : inc dword ptr [rbp - 0xf98b0a] ; ret 0xeed1
0x00000200006e910f : inc dword ptr [rbp - 0xfd8740] ; ret
0x000002000005c0fd : inc dword ptr [rbx + 0x18] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000548241 : inc dword ptr [rbx + 0x18] ; xor r8d, r8d ; jmp 0x20000548213
0x00000200005ba268 : inc dword ptr [rbx + 0x3b41fcc0] ; ret
0x00000200005bba5e : inc dword ptr [rbx + 0x3b44fec3] ; ret
0x00000200000733f8 : inc dword ptr [rbx + 0x47605f8] ; xor eax, eax ; jmp 0x200000733ce
0x000002000071891e : inc dword ptr [rbx + 0x478901c8] ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004e4e92 : inc dword ptr [rbx + 0xc8a07e0] ; or dh, dh ; ret 0x7401
0x00000200007cc207 : inc dword ptr [rbx + 0xd8904c9] ; ret 0xffb5
0x0000020000785919 : inc dword ptr [rbx + rax - 0x37] ; jne 0x2000078590f ; mov rax, rdx ; jmp 0x2000078592e
0x000002000001ff4b : inc dword ptr [rbx + rcx*4 + 0x44] ; ret 0x4404
0x000002000001ffe9 : inc dword ptr [rbx + rcx*4 + 0x4c] ; ret 0x4404
0x00000200006bc088 : inc dword ptr [rbx + rcx*4 + 0xd] ; je 0x200006bc04e ; ret
0x00000200003cc1b1 : inc dword ptr [rbx + rcx*4 - 0x40] ; mov eax, r8d ; ret
0x0000020000642b03 : inc dword ptr [rbx + rcx*4 - 9] ; jmp 0x20000642ad1
0x00000200005373c4 : inc dword ptr [rbx - 0x234c43f3] ; jmp qword ptr [rax]
0x0000020000530880 : inc dword ptr [rbx - 0x238e9fc3] ; call qword ptr [rdi]
0x00000200007c50e6 : inc dword ptr [rbx - 0x4cb639f3] ; jmp qword ptr [rax]
0x00000200004b4aef : inc dword ptr [rbx - 0x74ba0037] ; ret
0x00000200005612b7 : inc dword ptr [rbx - 0x74bae01f] ; ret 0xd349
0x00000200001967c5 : inc dword ptr [rbx - 0x74bb021d] ; ret
0x000002000050815c : inc dword ptr [rbx - 0x74ffc799] ; ret
0x00000200006f7598 : inc dword ptr [rbx - 0x75] ; push rsp ; shl dword ptr [rax], -0x75 ; ret 0x524
0x00000200006a67c1 : inc dword ptr [rbx - 0x78f0fc08] ; ret
0x00000200000f0edb : inc dword ptr [rbx - 0x7aba0038] ; test byte ptr [rdi], 0x4f ; ret 0x8388
0x000002000056187f : inc dword ptr [rbx - 0x7bf0fd06] ; ret
0x000002000043744f : inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x00000200000cb300 : inc dword ptr [rbx - 0x7bf0fe08] ; ret 0xfffc
0x000002000060ebea : inc dword ptr [rbx - 0x7cb700f6] ; ret
0x00000200005ec160 : inc dword ptr [rbx - 0x7cb70740] ; ret
0x0000020000055916 : inc dword ptr [rbx - 0x7cbebf35] ; ret 0x4410
0x0000020000055906 : inc dword ptr [rbx - 0x7cbedf35] ; ret 0x4410
0x0000020000055bb7 : inc dword ptr [rbx - 0x7cbefe35] ; ret 0x4410
0x0000020000514b34 : inc dword ptr [rbx - 0x7cff1c9b] ; ret
0x00000200003e75a2 : inc dword ptr [rbx] ; add byte ptr [rax], al ; call 0x200000087ef
0x00000200004d55a8 : inc dword ptr [rbx] ; add byte ptr [rax], al ; lea rax, qword ptr [rax + rdx*4] ; ret
0x0000020000129909 : inc dword ptr [rbx] ; add byte ptr [rdx], dh ; ret 0x724
0x0000020000141fac : inc dword ptr [rbx] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000102a0f : inc dword ptr [rbx] ; fucomi st(3) ; ret
0x00000200007c6137 : inc dword ptr [rbx] ; jmp 0x200007c6148
0x00000200005af631 : inc dword ptr [rbx] ; or byte ptr [rbx + 0x44d80bd9], 0x8b ; ret
0x000002000060bd50 : inc dword ptr [rbx] ; ret
0x000002000018501b : inc dword ptr [rbx] ; ret 0x8189
0x00000200001db004 : inc dword ptr [rbx] ; ret 0x9489
0x0000020000044dd1 : inc dword ptr [rcx + 0x10] ; ret
0x0000020000027b71 : inc dword ptr [rcx + 0x23] ; ret 0xc82b
0x00000200003edb41 : inc dword ptr [rcx + 0x23fb] ; ror byte ptr [rdi], 0x84 ; ret 0x197e
0x000002000009e25d : inc dword ptr [rcx + 0x24] ; ret
0x0000020000210467 : inc dword ptr [rcx + 0x24c] ; ret
0x000002000021045a : inc dword ptr [rcx + 0x250] ; ret
0x0000020000210453 : inc dword ptr [rcx + 0x254] ; ret
0x0000020000031089 : inc dword ptr [rcx + 0x28] ; ret
0x0000020000455d91 : inc dword ptr [rcx + 0x364] ; xor eax, eax ; ret
0x00000200006ce75c : inc dword ptr [rcx + 0x38] ; or byte ptr [rbx + rdx - 1], dh ; ret 0x8349
0x000002000011247a : inc dword ptr [rcx + 0x3b] ; ret
0x000002000068d352 : inc dword ptr [rcx + 0x3b] ; ret 0x77c
0x00000200004877ee : inc dword ptr [rcx + 0x3b] ; ret 0x860f
0x000002000018cd18 : inc dword ptr [rcx + 0x3c] ; ret
0x000002000010b5c8 : inc dword ptr [rcx + 0x420] ; ret
0x000002000062f628 : inc dword ptr [rcx + 0x58] ; ret
0x000002000045654d : inc dword ptr [rcx + 0x760] ; ret
0x00000200004f9bdd : inc dword ptr [rcx + 0x80] ; ret
0x000002000044f00f : inc dword ptr [rcx + 0xc] ; ret
0x00000200001848b3 : inc dword ptr [rcx + 0xf] ; mov bh, 0x5d ; cmp ah, byte ptr [rsi - 1] ; ret
0x00000200000555ac : inc dword ptr [rcx + 0xf] ; mov dh, 0x4c ; ret
0x00000200001a8aa7 : inc dword ptr [rcx + 0xf] ; mov dh, 0x85 ; ret
0x0000020000062d61 : inc dword ptr [rcx + 0xf] ; mov dh, 0x86 ; ret
0x00000200005a9b0f : inc dword ptr [rcx + 0xf] ; mov edx, 0xb60f10e6 ; ret
0x00000200001977e4 : inc dword ptr [rcx + 0xf] ; mov edx, 0xf1a3867 ; xchg eax, edx ; ret 0xf640
0x000002000079e19e : inc dword ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b45
0x000002000024f741 : inc dword ptr [rcx + 0xf] ; xchg eax, esp ; ret
0x0000020000014827 : inc dword ptr [rcx + 0xfffe2] ; add bh, bh ; ret 0x8b49
0x00000200005ebb42 : inc dword ptr [rcx + 2] ; ret
0x00000200005eaaf0 : inc dword ptr [rcx + 3] ; int 0x80
0x00000200000ac872 : inc dword ptr [rcx + 3] ; ret
0x00000200001fed91 : inc dword ptr [rcx + 4] ; lock inc dword ptr [rcx + 8] ; ret
0x00000200001fed89 : inc dword ptr [rcx + 4] ; ret
0x00000200001fed95 : inc dword ptr [rcx + 8] ; ret
0x000002000003109f : inc dword ptr [rcx + r8*4 + 0x218] ; ret
0x000002000015f5e1 : inc dword ptr [rcx + rax + 0x59] ; ret
0x00000200000310a0 : inc dword ptr [rcx + rax*4 + 0x218] ; ret
0x000002000020f308 : inc dword ptr [rcx + rcx*4 + 0x1f] ; mov eax, r10d ; jmp 0x2000020f336
0x00000200006e8744 : inc dword ptr [rcx + rcx*4 + 0x45] ; ret
0x000002000047f236 : inc dword ptr [rcx + rcx*4 + 0x65] ; ret
0x00000200000b36e6 : inc dword ptr [rcx + rcx*8 - 0x49f0f08b] ; ret 0xe083
0x00000200004205c3 : inc dword ptr [rcx + rcx*8 - 0x74b7b18b] ; ret
0x0000020000012c69 : inc dword ptr [rcx - 0x39] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffe
0x0000020000053789 : inc dword ptr [rcx - 0x46] ; add qword ptr [rax], r8 ; add byte ptr [rcx + 0xb], al ; ret 0x8942
0x000002000070560d : inc dword ptr [rcx - 0x48] ; adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200001518a9
0x00000200003eacb2 : inc dword ptr [rcx - 0x48] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000019ad1b : inc dword ptr [rcx - 0x48] ; ret 0
0x00000200006c9f14 : inc dword ptr [rcx - 0x48] ; ret 0xc
0x00000200006c8602 : inc dword ptr [rcx - 0x48] ; ret 0xf
0x00000200001a995e : inc dword ptr [rcx - 0x4a] ; add ecx, ebp ; ret
0x00000200004672dd : inc dword ptr [rcx - 0x50] ; add dword ptr [rcx - 0x75], ecx ; iretd ; call 0x200004035d9
0x00000200007cbcea : inc dword ptr [rcx - 0x73] ; add rax, rbp ; cmp byte ptr [rbx], al ; ret
0x000002000051f14a : inc dword ptr [rcx - 0x73] ; push rcx ; std ; call 0x20000148038
0x00000200000962b4 : inc dword ptr [rcx - 0x75] ; add al, 0x2b ; ret 0xd08b
0x00000200005c1049 : inc dword ptr [rcx - 0x75] ; add al, byte ptr [rcx + 0xb] ; ret
0x00000200002365ed : inc dword ptr [rcx - 0x75] ; call qword ptr [rax]
0x00000200000d6330 : inc dword ptr [rcx - 0x75] ; fmul dword ptr [rax - 0x7f] ; ret
0x00000200003e7dd6 : inc dword ptr [rcx - 0x75] ; or byte ptr [r11], r14b ; call rbx
0x000002000000cb17 : inc dword ptr [rcx - 0x75] ; ret
0x00000200001ac639 : inc dword ptr [rcx - 0x75] ; ret 0x15e9
0x0000020000176d70 : inc dword ptr [rcx - 0x75] ; ret 0x20ba
0x00000200005f8af5 : inc dword ptr [rcx - 0x75] ; ret 0x3b45
0x000002000008e82d : inc dword ptr [rcx - 0x75] ; ret 0x7ce9
0x0000020000115879 : inc dword ptr [rcx - 0x75] ; ret 0x82eb
0x00000200000128b1 : inc dword ptr [rcx - 0x75] ; ret 0x83e9
0x00000200004279e9 : inc dword ptr [rcx - 0x75] ; ret 0x8545
0x0000020000161352 : inc dword ptr [rcx - 0x75] ; ret 0x8548
0x00000200000ea10c : inc dword ptr [rcx - 0x75] ; ret 0x862b
0x000002000009d558 : inc dword ptr [rcx - 0x75] ; ret 0x8686
0x000002000023c131 : inc dword ptr [rcx - 0x75] ; ret 0x8d4c
0x00000200006a5036 : inc dword ptr [rcx - 0x75] ; ret 0xc148
0x0000020000137d68 : inc dword ptr [rcx - 0x75] ; ret 0xc933
0x00000200001182d8 : inc dword ptr [rcx - 0x75] ; ret 0xf42
0x00000200000c0597 : inc dword ptr [rcx - 0x75] ; ret 0xf48
0x00000200005f08a7 : inc dword ptr [rcx - 0x75] ; ret 0xfb8b
0x00000200005f99e8 : inc dword ptr [rcx - 0x75] ; ret 0xff0
0x000002000055273e : inc dword ptr [rcx - 0x75] ; ror byte ptr [rbp - 0x75], 0x1c ; ret
0x000002000052a01b : inc dword ptr [rcx - 0x75] ; ror dword ptr [rax - 0x75], 0x14 ; ret 0x2b48
0x0000020000051ce5 : inc dword ptr [rcx - 0x75] ; ror dword ptr [rdi], 1 ; xchg eax, ebp ; ret 0xfa2b
0x00000200005d0d39 : inc dword ptr [rcx - 0x75] ; salc ; call 0x2000024d006
0x0000020000134874 : inc dword ptr [rcx - 0x76] ; or cl, byte ptr [rcx - 1] ; ret 0x8b41
0x000002000042ddc2 : inc dword ptr [rcx - 0x76] ; xlatb ; call 0x200000564a7
0x000002000044d72c : inc dword ptr [rcx - 0x7b] ; ret 0x850f
0x000002000000f9d4 : inc dword ptr [rcx - 0x7c] ; ret
0x00000200001e9a62 : inc dword ptr [rcx - 0x7c] ; ret 0x1775
0x00000200004ea1fa : inc dword ptr [rcx - 0x7c] ; ror byte ptr [rax + 0xf], 0x45 ; ret 0x3b48
0x000002000005bd3d : inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200001a29c4 : inc dword ptr [rcx - 0x7d] ; cli ; jg 0x200001a2a47 ; or al, byte ptr [rcx - 1] ; ret 0x834a
0x0000020000584907 : inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x0000020000099b72 : inc dword ptr [rcx - 0x7d] ; ret
0x00000200005de18c : inc dword ptr [rcx - 0x7d] ; ret 0xc7f0
0x00000200000190ab : inc dword ptr [rcx - 0x7d] ; ret 0xfc0
0x0000020000234f06 : inc dword ptr [rcx - 0x7f] ; call qword ptr [rcx]
0x00000200000a93fe : inc dword ptr [rcx - 0x7f] ; jmp qword ptr [rax]
0x00000200004b2c2c : inc dword ptr [rcx - 0x7f] ; jmp qword ptr [rbx]
0x00000200000d38bd : inc dword ptr [rcx - 0x80] ; call qword ptr [rcx]
0x00000200001108f5 : inc dword ptr [rcx - 0x80] ; int 0x80
0x00000200000999d7 : inc dword ptr [rcx - 0xa] ; ret
0x00000200005924db : inc dword ptr [rcx - 0xa] ; ret 0x7402
0x00000200004ddc9e : inc dword ptr [rcx - 0xa] ; ret 0x7403
0x00000200000e903e : inc dword ptr [rcx - 0xa] ; ret 0xf01
0x00000200000e9175 : inc dword ptr [rcx - 0xa] ; ret 0xf02
0x0000020000107853 : inc dword ptr [rcx - 0xa] ; ret 0xf04
0x000002000004f0a7 : inc dword ptr [rcx - 0xa] ; ret 0xf10
0x00000200000c0e23 : inc dword ptr [rcx - 0xa] ; ret 0xf3f
0x00000200004f08de : inc dword ptr [rcx - 0xa] ; ret 0xffe
0x00000200001a275f : inc dword ptr [rcx - 0xa] ; rol byte ptr [rdx], 0xf ; xchg eax, ebp ; ret 0xf640
0x00000200004c3e48 : inc dword ptr [rcx - 1] ; ret
0x000002000018cf22 : inc dword ptr [rcx - 1] ; ret 0x8348
0x00000200005bc5a3 : inc dword ptr [rcx - 1] ; ret 0x8349
0x00000200000594e0 : inc dword ptr [rcx - 9] ; ret 0
0x00000200005bbafd : inc dword ptr [rcx - 9] ; rol dword ptr [rcx - 0xa], cl ; ret
0x0000020000209044 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add al, ch ; ret 0xe6bc
0x0000020000461884 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xb376
0x00000200007c25a8 : inc dword ptr [rcx] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005692b0 : inc dword ptr [rcx] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000552c1f : inc dword ptr [rcx] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000010d22 : inc dword ptr [rcx] ; add rsp, 0x28 ; ret
0x00000200007b70ea : inc dword ptr [rcx] ; add rsp, 0x38 ; ret
0x0000020000669237 : inc dword ptr [rcx] ; mov dword ptr [rcx + 0x10], edx ; add qword ptr [r10], 0x18 ; ret
0x00000200006692f6 : inc dword ptr [rcx] ; mov dword ptr [rcx + 0x18], edx ; add qword ptr [r10], 0x28 ; ret
0x0000020000551302 : inc dword ptr [rcx] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000018cf90 : inc dword ptr [rcx] ; ret
0x000002000043e8b5 : inc dword ptr [rcx] ; xor eax, eax ; ret
0x0000020000179a0b : inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200005c88c1 : inc dword ptr [rdi + rcx + 0x20] ; ret 0x1b8
0x000002000079636e : inc dword ptr [rdi + rcx + 0x20] ; ret 0x2b8
0x0000020000076f65 : inc dword ptr [rdi + rcx + 0x20] ; ret 0xf44
0x0000020000073a3d : inc dword ptr [rdi + rcx + 0x22] ; ret
0x0000020000672794 : inc dword ptr [rdi + rcx + 0x44] ; ret 0x8944
0x0000020000223a2c : inc dword ptr [rdi + rcx - 0x44] ; ret
0x00000200004198c3 : inc dword ptr [rdi + rcx - 0x49] ; ret
0x0000020000615d79 : inc dword ptr [rdi + rcx - 0x49] ; ret 0xb70f
0x00000200004831fa : inc dword ptr [rdi + rcx - 0x4a] ; ret
0x0000020000715742 : inc dword ptr [rdx + 0x8060] ; ret
0x000002000012a7c0 : inc dword ptr [rdx + rax*8] ; ret
0x00000200000e5c59 : inc dword ptr [rdx + rdi - 0x45] ; ret
0x0000020000627a45 : inc dword ptr [rdx] ; jb 0x20000627a58 ; mov eax, 0xc0000189 ; ret
0x00000200006b4611 : inc dword ptr [rdx] ; je 0x200006b4624 ; mov eax, 0xc0000002 ; ret
0x00000200006b4631 : inc dword ptr [rdx] ; je 0x200006b4644 ; mov eax, 0xc0000002 ; ret
0x00000200006b563d : inc dword ptr [rdx] ; je 0x200006b5650 ; mov eax, 0xc0000002 ; ret
0x00000200006b5659 : inc dword ptr [rdx] ; je 0x200006b566c ; mov eax, 0xc0000002 ; ret
0x00000200007ab4c2 : inc dword ptr [rdx] ; ret
0x000002000067695c : inc dword ptr [rdx] ; sete al ; ret
0x00000200001d2e40 : inc dword ptr [rip + 0x139dda] ; ret
0x00000200007118bc : inc dword ptr [rip + 0x1ba12] ; xor eax, eax ; ret
0x000002000021fc3f : inc dword ptr [rip + 0xdf913] ; mov eax, r11d ; ret
0x00000200001ba0db : inc dword ptr [rsi - 0x75] ; ret 0x4504
0x00000200005a3fcc : inc dword ptr [rsi] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200007b578f : inc dword ptr [rsi] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200007ab5e9 : inc dword ptr [rsi] ; call 0x20000157884
0x00000200007b7db9 : inc dword ptr [rsi] ; mov dword ptr [rip - 0x498b65], ecx ; ret
0x00000200006cf72e : inc dword ptr [rsp + rsi*2] ; add eax, dword ptr [rcx - 0x75] ; ret
0x00000200001b9be8 : inc dword ptr gs:[0x2e44] ; ret
0x0000020000434328 : inc dword ptr gs:[0x2e48] ; ret
0x000002000044ef24 : inc dword ptr gs:[0x2e4c] ; ret
0x0000020000123214 : inc dword ptr gs:[0x5e04] ; ret
0x00000200001b9bf4 : inc dword ptr gs:[0x5e40] ; ret
0x00000200000990ef : inc eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003c628e : inc eax ; add rsp, 0x208 ; ret
0x00000200001eab2f : inc eax ; add rsp, 0x28 ; ret
0x00000200004e6d94 : inc eax ; add rsp, 0x38 ; ret
0x000002000013b2f2 : inc eax ; cmp r8, r10 ; jb 0x2000013b2e9 ; ret
0x0000020000427b18 : inc eax ; cmp r8d, ecx ; jb 0x20000427b06 ; xor eax, eax ; ret
0x00000200007a789f : inc eax ; cmp r8d, edx ; jb 0x200007a789d ; ret
0x000002000022c7e7 : inc eax ; cmp r8d, r9d ; jl 0x2000022c7e1 ; xor eax, eax ; ret
0x00000200006c679e : inc eax ; cmp rax, rdx ; jb 0x200006c677a ; xor eax, eax ; ret
0x00000200007293c3 : inc eax ; mov dword ptr [rcx + 0x34], eax ; add rsp, 0x28 ; ret
0x00000200001ceb3e : inc eax ; mov dword ptr [rcx + 8], eax ; mov qword ptr [rcx], r8 ; ret
0x00000200000c94c0 : inc eax ; mov dword ptr [rip + 0x2381cc], eax ; call r8
0x00000200000c66f0 : inc eax ; mov dword ptr [rip + 0x23af9c], eax ; call r8
0x0000020000010168 : inc eax ; mov qword ptr [rcx], rax ; ret
0x0000020000036713 : inc eax ; mov word ptr [rcx + 2], ax ; ret
0x0000020000128bc0 : inc eax ; mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x0000020000117b86 : inc eax ; ret
0x00000200004f58df : inc ebx ; add rax, 0x20 ; ret
0x0000020000142ab1 : inc ebx ; inc dword ptr [r8] ; ret
0x00000200001d60a8 : inc ebx ; inc r10d ; jmp 0x200001d6099
0x00000200001bccce : inc ebx ; jbe 0x200001bcce1 ; mov eax, 1 ; ret
0x000002000013cbcc : inc ebx ; lea rax, qword ptr [rcx + rax - 2] ; ret
0x00000200007b6cb2 : inc ebx ; lea rax, qword ptr [rip - 0x6651db] ; ret
0x00000200007b6cba : inc ebx ; lea rax, qword ptr [rip - 0x67c033] ; ret
0x00000200007b6ca2 : inc ebx ; lea rax, qword ptr [rip - 0x6c1e7b] ; ret
0x00000200007b6cc2 : inc ebx ; lea rax, qword ptr [rip - 0x7225db] ; ret
0x00000200007b6caa : inc ebx ; lea rax, qword ptr [rip - 0x722f23] ; ret
0x00000200007b6c9a : inc ebx ; lea rax, qword ptr [rip - 0x723e83] ; ret
0x0000020000157ba6 : inc ebx ; lock or dword ptr [rip + 0x251711], ecx ; ret
0x0000020000706002 : inc ebx ; mov dword ptr [rsp + 0x24], r11d ; jmp 0x20000705fd6
0x0000020000207749 : inc ebx ; mov dword ptr [rsp + 0x30], ebx ; jmp 0x2000020771b
0x00000200007d4f54 : inc ebx ; mov eax, 0x2000 ; ret
0x0000020000568891 : inc ebx ; mov eax, 0xc000000d ; ret
0x0000020000560de4 : inc ebx ; mov eax, 1 ; ret
0x00000200001bcad4 : inc ebx ; mov eax, dword ptr [rcx + 4] ; ret
0x0000020000201f50 : inc ebx ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000de03c : inc ebx ; mov eax, ecx ; ret
0x00000200006ce773 : inc ebx ; mov eax, edx ; ret
0x000002000004922c : inc ebx ; mov eax, r8d ; ret
0x0000020000726006 : inc ebx ; mov qword ptr [rip - 0x42d02f], rcx ; ret
0x0000020000028225 : inc ebx ; xor eax, eax ; ret
0x000002000013b68c : inc ecx ; cmp byte ptr [rcx], 0 ; jne 0x2000013b690 ; ret
0x000002000021f557 : inc ecx ; cmp ecx, edx ; jb 0x2000021f54b ; xor eax, eax ; ret
0x000002000070a2c2 : inc ecx ; cmp r9d, r10d ; jb 0x2000070a2c1 ; xor eax, eax ; ret
0x000002000013cf34 : inc ecx ; cmp rax, rdx ; jb 0x2000013cf32 ; ret
0x00000200007b4ff5 : inc ecx ; cmp rcx, 0x40 ; jb 0x200007b4fe6 ; ret
0x0000020000151a56 : inc ecx ; dec r8 ; jne 0x20000151a57 ; ret
0x000002000003e3ff : inc ecx ; mov eax, ecx ; ret
0x000002000013b644 : inc ecx ; test r8, r8 ; jne 0x2000013b640 ; ret
0x00000200006d4014 : inc edi ; add eax, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x4566
0x0000020000214570 : inc edi ; inc rdx ; jmp 0x200002145a8
0x000002000005481e : inc edi ; jmp 0x20000054668
0x00000200000f6af9 : inc edi ; jmp 0x200000f6ac3
0x0000020000480d9c : inc edi ; ret
0x00000200003d0a92 : inc edx ; add ecx, edx ; mov dword ptr [r8], ecx ; add eax, ecx ; ret
0x00000200006f37a2 : inc edx ; add r8d, -1 ; jne 0x200006f37a4 ; ret
0x000002000002d07e : inc edx ; cmp edx, r10d ; jb 0x2000002d06d ; xor eax, eax ; ret
0x000002000000837e : inc edx ; cmp edx, r8d ; jb 0x2000000837c ; ret
0x0000020000027998 : inc edx ; jmp 0x200000279c5
0x000002000004e2c6 : inc edx ; jmp 0x2000004e2a5
0x0000020000096f6a : inc edx ; jmp 0x20000096f73
0x00000200000cf65a : inc edx ; jmp 0x200000cf655
0x00000200000fca11 : inc edx ; jmp 0x200000fca02
0x0000020000140266 : inc edx ; jmp 0x2000014027e
0x0000020000190e17 : inc edx ; jmp 0x20000190dca
0x00000200001d60ab : inc edx ; jmp 0x200001d6096
0x0000020000214573 : inc edx ; jmp 0x200002145a5
0x0000020000221ba3 : inc edx ; jmp 0x20000221b70
0x00000200003eb35e : inc edx ; jmp 0x200003eb318
0x00000200003fd315 : inc edx ; jmp 0x200003fd2fe
0x00000200004052b0 : inc edx ; jmp 0x2000040526b
0x0000020000412c47 : inc edx ; jmp 0x20000412c2e
0x000002000043baf1 : inc edx ; jmp 0x2000043bac3
0x00000200004475d8 : inc edx ; jmp 0x200004475b8
0x0000020000488940 : inc edx ; jmp 0x2000048891a
0x000002000049b9df : inc edx ; jmp 0x2000049b9d3
0x000002000049fdef : inc edx ; jmp 0x2000049fde0
0x00000200004aca5d : inc edx ; jmp 0x200004aca30
0x00000200004d076b : inc edx ; jmp 0x200004d0713
0x00000200005028fe : inc edx ; jmp 0x200005028c5
0x0000020000503162 : inc edx ; jmp 0x20000503149
0x0000020000503162 : inc edx ; jmp 0x2000050314f
0x0000020000546cc4 : inc edx ; jmp 0x20000546ca8
0x000002000055c151 : inc edx ; jmp 0x2000055c13c
0x000002000059e0a3 : inc edx ; jmp 0x2000059e086
0x000002000059e281 : inc edx ; jmp 0x2000059e25d
0x0000020000622f38 : inc edx ; jmp 0x20000622f52
0x000002000065e149 : inc edx ; jmp 0x2000065e17b
0x0000020000680b58 : inc edx ; jmp 0x20000680b3a
0x00000200006a02a2 : inc edx ; jmp 0x200006a0296
0x00000200006a6818 : inc edx ; jmp 0x200006a680a
0x00000200006b7300 : inc edx ; jmp 0x200006b72d1
0x00000200007a6364 : inc edx ; jmp 0x200007a633c
0x00000200006ca764 : inc edx ; mov qword ptr [rsp + 0x38], rdx ; jmp 0x200006ca737
0x0000020000518df2 : inc edx ; sub ecx, edx ; mov eax, ecx ; ret
0x000002000048aa11 : inc esi ; popfq ; add ecx, ebp ; ret 0xffee
0x00000200006cfe3b : inc esp ; movzx ecx, word ptr [rbx] ; call 0x2000013c067
0x0000020000615d78 : inc qword ptr [r15 + rcx - 0x49] ; ret 0xb70f
0x0000020000114db8 : inc qword ptr [r9 - 0xa] ; ret
0x0000020000107852 : inc qword ptr [r9 - 0xa] ; ret 0xf04
0x00000200001e63af : inc qword ptr [rcx - 0xa] ; ret
0x000002000012a7bf : inc qword ptr [rdx + rax*8] ; ret
0x0000020000140265 : inc r10 ; jmp 0x2000014027f
0x0000020000140264 : inc r10 ; jmp 0x20000140280
0x0000020000027997 : inc r10d ; jmp 0x200000279c6
0x00000200001d60aa : inc r10d ; jmp 0x200001d6097
0x00000200003fd314 : inc r10d ; jmp 0x200003fd2ff
0x000002000043baf0 : inc r10d ; jmp 0x2000043bac4
0x00000200001d60a7 : inc r11 ; inc r10d ; jmp 0x200001d609a
0x0000020000706001 : inc r11d ; mov dword ptr [rsp + 0x24], r11d ; jmp 0x20000705fd7
0x00000200006cfe3a : inc r12d ; movzx ecx, word ptr [rbx] ; call 0x2000013c068
0x000002000005481d : inc r15d ; jmp 0x20000054669
0x000002000013b2f1 : inc r8 ; cmp r8, r10 ; jb 0x2000013b2ea ; ret
0x00000200007a789e : inc r8d ; cmp r8d, edx ; jb 0x200007a789e ; ret
0x00000200004e6d93 : inc rax ; add rsp, 0x38 ; ret
0x0000020000010167 : inc rax ; mov qword ptr [rcx], rax ; ret
0x000002000013b68b : inc rcx ; cmp byte ptr [rcx], 0 ; jne 0x2000013b691 ; ret
0x000002000013cf33 : inc rcx ; cmp rax, rdx ; jb 0x2000013cf33 ; ret
0x00000200007b4ff4 : inc rcx ; cmp rcx, 0x40 ; jb 0x200007b4fe7 ; ret
0x0000020000151a55 : inc rcx ; dec r8 ; jne 0x20000151a58 ; ret
0x000002000013b643 : inc rcx ; test r8, r8 ; jne 0x2000013b641 ; ret
0x000002000021456f : inc rdi ; inc rdx ; jmp 0x200002145a9
0x00000200000f6af8 : inc rdi ; jmp 0x200000f6ac4
0x00000200006f37a1 : inc rdx ; add r8d, -1 ; jne 0x200006f37a5 ; ret
0x0000020000096f69 : inc rdx ; jmp 0x20000096f74
0x00000200000cf659 : inc rdx ; jmp 0x200000cf656
0x0000020000190e16 : inc rdx ; jmp 0x20000190dcb
0x0000020000214572 : inc rdx ; jmp 0x200002145a6
0x00000200003eb35d : inc rdx ; jmp 0x200003eb319
0x000002000048893f : inc rdx ; jmp 0x2000048891b
0x000002000049fdee : inc rdx ; jmp 0x2000049fde1
0x00000200004aca5c : inc rdx ; jmp 0x200004aca31
0x0000020000546cc3 : inc rdx ; jmp 0x20000546ca9
0x000002000055c150 : inc rdx ; jmp 0x2000055c13d
0x000002000065e148 : inc rdx ; jmp 0x2000065e17c
0x00000200006ca763 : inc rdx ; mov qword ptr [rsp + 0x38], rdx ; jmp 0x200006ca738
0x0000020000130809 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200003d038b : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003d028e : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200007063cf : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; mov qword ptr [rax], r9 ; mov al, 1 ; ret
0x000002000070641b : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x0000020000148c25 : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; add cl, ch ; adc dl, ah ; add byte ptr [rax], al ; ret
0x0000020000015ac4 : insb byte ptr [rdi], dx ; add eax, 0xc4834800 ; pop rbx ; ret
0x00000200004a5f00 : insb byte ptr [rdi], dx ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7b], al ; ret 0x840f
0x00000200004f697c : insb byte ptr [rdi], dx ; and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000bb0d5 : insb byte ptr [rdi], dx ; and al, 0x10 ; mov rdi, qword ptr [rsp + 0x20] ; ret
0x00000200004ca065 : insb byte ptr [rdi], dx ; and al, 0x20 ; call r10
0x000002000070f8d6 : insb byte ptr [rdi], dx ; and al, 0x20 ; call rax
0x00000200006d8546 : insb byte ptr [rdi], dx ; and al, 0x20 ; call rdi
0x0000020000441eaa : insb byte ptr [rdi], dx ; and al, 0x20 ; mov rcx, rsi ; call rdi
0x00000200005330de : insb byte ptr [rdi], dx ; and al, 0x20 ; mov rsi, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x00000200004f09c2 : insb byte ptr [rdi], dx ; and al, 0x28 ; mov dword ptr [rsp + 0x20], eax ; call 0x2000003cbf5
0x00000200004ca060 : insb byte ptr [rdi], dx ; and al, 0x28 ; mov qword ptr [rsp + 0x20], r13 ; call r10
0x00000200005a2592 : insb byte ptr [rdi], dx ; and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r15
0x00000200000c8aba : insb byte ptr [rdi], dx ; and al, 0x28 ; pop rdi ; ret
0x00000200000d73bd : insb byte ptr [rdi], dx ; and al, 0x30 ; jmp 0x200000d71ba
0x0000020000655bd8 : insb byte ptr [rdi], dx ; and al, 0x38 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000050dba : insb byte ptr [rdi], dx ; and al, 0x38 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002a88a : insb byte ptr [rdi], dx ; and al, 0x38 ; add rsp, 0x20 ; pop rsi ; ret
0x000002000040ccdb : insb byte ptr [rdi], dx ; and al, 0x40 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001eb70 : insb byte ptr [rdi], dx ; and al, 0x40 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000ec28e : insb byte ptr [rdi], dx ; and al, 0x40 ; add rsp, 0x28 ; pop rsi ; pop rbx ; ret
0x000002000009fe32 : insb byte ptr [rdi], dx ; and al, 0x40 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000007ed6e : insb byte ptr [rdi], dx ; and al, 0x40 ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000494c36 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006d3be0 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004cf9b6 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x20 ; pop rsi ; ret
0x000002000003f5b5 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000052ccb4 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000051c4df : insb byte ptr [rdi], dx ; and al, 0x50 ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004afc28 : insb byte ptr [rdi], dx ; and al, 0x50 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067c7ea : insb byte ptr [rdi], dx ; and al, 0x58 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004ce739 : insb byte ptr [rdi], dx ; and al, 0x58 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000012e8ee : insb byte ptr [rdi], dx ; and al, 0x58 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000002546e : insb byte ptr [rdi], dx ; and al, 0x68 ; add rsp, 0x40 ; pop rsi ; ret
0x00000200000fb2a3 : insb byte ptr [rdi], dx ; and al, 0x68 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200003e1124 : insb byte ptr [rdi], dx ; and al, 0x68 ; add rsp, 0x50 ; pop rsi ; ret
0x00000200001c5dfb : insb byte ptr [rdi], dx ; and al, 0x70 ; add rsp, 0x50 ; pop rsi ; ret
0x00000200004bb549 : insb byte ptr [rdi], dx ; and al, 0x70 ; call 0x200000e7216
0x00000200004c93a7 : insb byte ptr [rdi], dx ; and al, 0x78 ; jmp 0x200004c8f80
0x00000200000fd10c : insb byte ptr [rdi], dx ; and al, byte ptr [rax] ; shl rax, 0xc ; ret
0x0000020000620d29 : insb byte ptr [rdi], dx ; call 0x2000024d003
0x0000020000620f9b : insb byte ptr [rdi], dx ; call 0x2000024d004
0x00000200005ac2c8 : insb byte ptr [rdi], dx ; cld ; ret 0x90ff
0x00000200001cf683 : insb byte ptr [rdi], dx ; cmp eax, r8d ; jae 0x200001cf696 ; or eax, 0xffffffff ; ret
0x000002000019119d : insb byte ptr [rdi], dx ; cmp esi, eax ; dec dword ptr [rax - 1] ; ret 0x93e9
0x00000200006730e0 : insb byte ptr [rdi], dx ; enter -0x1b, 0x48 ; add esp, 0x58 ; ret
0x0000020000197ca7 : insb byte ptr [rdi], dx ; int1 ; dec dword ptr [rcx - 0x75] ; ret 0x3b4c
0x00000200007ab68c : insb byte ptr [rdi], dx ; jnp 0x200007ab647 ; call qword ptr [rbx]
0x000002000042efdf : insb byte ptr [rdi], dx ; jo 0x2000042f04b ; call 0x2000005c2c6
0x000002000042efde : insb byte ptr [rdi], dx ; jo 0x2000042f04c ; call 0x2000005c2c7
0x0000020000620e16 : insb byte ptr [rdi], dx ; lea ecx, dword ptr [rbx + 2] ; call 0x2000024da47
0x0000020000645056 : insb byte ptr [rdi], dx ; loope 0x20000645060 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005512ff : insb byte ptr [rdi], dx ; mov eax, 0x8b01ffda ; ret
0x000002000017d4b5 : insb byte ptr [rdi], dx ; mov ebp, esp ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x0000020000443fae : insb byte ptr [rdi], dx ; mov edi, 0x4801b0ff ; add esp, 0x28 ; ret
0x0000020000055d07 : insb byte ptr [rdi], dx ; mov r8, rbx ; mov rcx, rsi ; call r14
0x00000200001bfa5e : insb byte ptr [rdi], dx ; mov rcx, qword ptr [rsp + 0x68] ; call rax
0x0000020000620d33 : insb byte ptr [rdi], dx ; mov rcx, rdi ; call 0x2000024d006
0x0000020000620fa5 : insb byte ptr [rdi], dx ; mov rcx, rsi ; call 0x2000024d007
0x00000200007108c6 : insb byte ptr [rdi], dx ; movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x000002000066e9e3 : insb byte ptr [rdi], dx ; movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax - 0x75] ; retf ; call rdi
0x00000200001763c9 : insb byte ptr [rdi], dx ; or eax, 0xf0e99000 ; ret
0x00000200001763b9 : insb byte ptr [rdi], dx ; or eax, 0xf7e99000 ; ret
0x00000200006598f0 : insb byte ptr [rdi], dx ; out -0x58, eax ; dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x85 ; ret
0x000002000003e2cc : insb byte ptr [rdi], dx ; pop rax ; add byte ptr [rax], al ; add bl, bh ; ret
0x0000020000521ad0 : insb byte ptr [rdi], dx ; pop rdx ; ret
0x00000200000b9110 : insb byte ptr [rdi], dx ; ret
0x00000200001bd5e0 : insb byte ptr [rdi], dx ; ret 0x13
0x00000200000cfd90 : insb byte ptr [rdi], dx ; ret 0x2e
0x00000200003e7a33 : insb byte ptr [rdi], dx ; ret 0x33ff
0x0000020000231ee8 : insb byte ptr [rdi], dx ; ret 0x4166
0x00000200001da741 : insb byte ptr [rdi], dx ; ret 0x4878
0x0000020000438602 : insb byte ptr [rdi], dx ; ret 0x48ff
0x000002000051402c : insb byte ptr [rdi], dx ; ret 0x4cff
0x00000200005e5f9d : insb byte ptr [rdi], dx ; ret 0x84ff
0x000002000016a103 : insb byte ptr [rdi], dx ; ret 0xeb20
0x0000020000232791 : insb byte ptr [rdi], dx ; ret 0xf66
0x00000200006dd310 : insb byte ptr [rdi], dx ; ret 0xff92
0x00000200007cbe24 : insb byte ptr [rdi], dx ; ret 0xfffe
0x00000200005a31d6 : insb byte ptr [rdi], dx ; sbb cl, ch ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200004438b0 : insb byte ptr [rdi], dx ; stosd dword ptr [rdi], eax ; ret
0x00000200006a8200 : insb byte ptr [rdi], dx ; sub ch, byte ptr [rcx - 0x3b7cb701] ; pop rax ; ret
0x000002000052cc00 : insb byte ptr [rdi], dx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003e5507 : insd dword ptr [rdi], dx ; adc cl, ch ; ret
0x00000200003d039d : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003d02a0 : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000203e68 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x000002000001f777 : insd dword ptr [rdi], dx ; add byte ptr cs:[rax - 0x75], cl ; ret 0x8348
0x000002000042ca9b : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000411af : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200000de68d : insd dword ptr [rdi], dx ; and al, 0 ; ret
0x0000020000044d57 : insd dword ptr [rdi], dx ; and al, byte ptr [rax] ; movups xmmword ptr [rcx + 0x70], xmm1 ; ret
0x0000020000627b40 : insd dword ptr [rdi], dx ; call 0x2000024da44
0x0000020000627b3f : insd dword ptr [rdi], dx ; call 0x2000024da45
0x000002000067973c : insd dword ptr [rdi], dx ; enter 0x44ff, -0x76 ; ret
0x000002000067974e : insd dword ptr [rdi], dx ; enter 0xfff, -0x49 ; ret 0x6b48
0x0000020000101bb6 : insd dword ptr [rdi], dx ; fucomi st(0) ; ret
0x0000020000606915 : insd dword ptr [rdi], dx ; iretd ; jne 0x20000606936 ; call 0x2000022992b
0x000002000040f77a : insd dword ptr [rdi], dx ; jbe 0x2000040f781 ; ret 0x1b9
0x000002000040f779 : insd dword ptr [rdi], dx ; jbe 0x2000040f782 ; ret 0x1b9
0x00000200005e941f : insd dword ptr [rdi], dx ; je 0x200005e9419 ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200005d89c3 : insd dword ptr [rdi], dx ; jle 0x200005d89b9 ; push rsi ; ret
0x0000020000620263 : insd dword ptr [rdi], dx ; jo 0x200006202b6 ; mov ecx, edi ; call 0x2000024d008
0x0000020000620262 : insd dword ptr [rdi], dx ; jo 0x200006202b7 ; mov ecx, edi ; call 0x2000024d009
0x000002000062a0b3 : insd dword ptr [rdi], dx ; jo 0x2000062a0a3 ; xchg byte ptr [rcx], bh ; ret 0x48ff
0x000002000062a0b2 : insd dword ptr [rdi], dx ; jo 0x2000062a0a4 ; xchg byte ptr [rcx], bh ; ret 0x48ff
0x000002000062a0b1 : insd dword ptr [rdi], dx ; jo 0x2000062a0a5 ; xchg byte ptr [rcx], bh ; ret 0x48ff
0x000002000062a4f4 : insd dword ptr [rdi], dx ; jo 0x2000062a547 ; mov ecx, ebx ; call 0x2000024d008
0x000002000062a4f3 : insd dword ptr [rdi], dx ; jo 0x2000062a548 ; mov ecx, ebx ; call 0x2000024d009
0x000002000062a69b : insd dword ptr [rdi], dx ; jo 0x2000062a6ee ; mov ecx, edi ; call 0x2000024d008
0x000002000062a69a : insd dword ptr [rdi], dx ; jo 0x2000062a6ef ; mov ecx, edi ; call 0x2000024d009
0x000002000062b0ef : insd dword ptr [rdi], dx ; jo 0x2000062b0df ; or bl, byte ptr [rdi] ; ret 0x48ff
0x000002000062b0ee : insd dword ptr [rdi], dx ; jo 0x2000062b0e0 ; or bl, byte ptr [rdi] ; ret 0x48ff
0x000002000062b0ed : insd dword ptr [rdi], dx ; jo 0x2000062b0e1 ; or bl, byte ptr [rdi] ; ret 0x48ff
0x000002000062b387 : insd dword ptr [rdi], dx ; jo 0x2000062b377 ; jb 0x2000062b3ad ; ret 0x48ff
0x000002000062b386 : insd dword ptr [rdi], dx ; jo 0x2000062b378 ; jb 0x2000062b3ae ; ret 0x48ff
0x000002000062b385 : insd dword ptr [rdi], dx ; jo 0x2000062b379 ; jb 0x2000062b3af ; ret 0x48ff
0x0000020000721f77 : insd dword ptr [rdi], dx ; jo 0x20000721f65 ; ret 0xb2ba
0x0000020000128457 : insd dword ptr [rdi], dx ; mov al, 0x8b ; ret
0x00000200007aa59d : insd dword ptr [rdi], dx ; mov al, 0xe8 ; or al, 0x7a ; ret
0x000002000069f39c : insd dword ptr [rdi], dx ; mov byte ptr [rcx + 0x41], 0x69 ; ret 0xdcd
0x00000200007aa599 : insd dword ptr [rdi], dx ; mov byte ptr [rcx + rcx*4 + 0x6d], cl ; mov al, 0xe8 ; or al, 0x7a ; ret
0x00000200004c589b : insd dword ptr [rdi], dx ; mov rcx, qword ptr [rsp + 0x68] ; call 0x200000e7e79
0x00000200004c47f7 : insd dword ptr [rdi], dx ; mov rcx, r13 ; call 0x200000e7e77
0x00000200004c5afe : insd dword ptr [rdi], dx ; mov rcx, r14 ; call 0x200000e7e77
0x000002000023d708 : insd dword ptr [rdi], dx ; or byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000535855 : insd dword ptr [rdi], dx ; or byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004a900e : insd dword ptr [rdi], dx ; or dh, dh ; ret
0x00000200000c7fa5 : insd dword ptr [rdi], dx ; or eax, 0x418d4100 ; or byte ptr [rcx + 3], al ; ret 0xc203
0x00000200004e20ff : insd dword ptr [rdi], dx ; pop rbp ; sar bh, 0x8b ; ret
0x00000200004c47f5 : insd dword ptr [rdi], dx ; push rsi ; insd dword ptr [rdi], dx ; mov rcx, r13 ; call 0x200000e7e79
0x00000200004c5afc : insd dword ptr [rdi], dx ; push rsi ; insd dword ptr [rdi], dx ; mov rcx, r14 ; call 0x200000e7e79
0x00000200004c0bbf : insd dword ptr [rdi], dx ; push rsi ; ja 0x200004c0c15 ; mov ecx, esi ; call 0x200000e7e79
0x00000200007cbfff : insd dword ptr [rdi], dx ; rcl byte ptr [rdi - 0x163c7401], 0x39 ; ret
0x00000200000ad014 : insd dword ptr [rdi], dx ; ret 0x2f
0x00000200006d0d5f : insd dword ptr [rdi], dx ; ret 0x48ff
0x0000020000456299 : insd dword ptr [rdi], dx ; ret 0x85ff
0x00000200007d0e11 : insd dword ptr [rdi], dx ; ret 0x8bff
0x0000020000631fbf : insd dword ptr [rdi], dx ; ret 0xe8ff
0x000002000068202b : insd dword ptr [rdi], dx ; ret 0xffa0
0x0000020000678247 : insd dword ptr [rdi], dx ; ret 0xffb8
0x00000200006f3bb8 : insd dword ptr [rdi], dx ; ret 0xfff
0x000002000078173f : insd dword ptr [rdi], dx ; ret 0xffff
0x000002000055d53e : insd dword ptr [rdi], dx ; ret 9
0x00000200005cafef : insd dword ptr [rdi], dx ; sal byte ptr [rcx - 0x3374b601], 1 ; call 0x200000e7259
0x00000200001be9df : insd dword ptr [rdi], dx ; scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; call rax
0x00000200002327f1 : insd dword ptr [rdi], dx ; shl dword ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret
0x000002000007b0ee : insd dword ptr [rdi], dx ; sub al, byte ptr [rax] ; ret
0x0000020000623d8f : insd dword ptr [rdi], dx ; xchg eax, edx ; ret 0x48ff
0x000002000042ccdc : insd dword ptr [rdi], dx ; xor byte ptr [rax - 0x75], cl ; ret
0x000002000049019a : int 0x13
0x0000020000018055 : int 0x14
0x00000200005d686d : int 0x29
0x00000200004629a3 : int 0x33
0x000002000061da15 : int 0x44
0x00000200006c31af : int 0x46
0x000002000004fd8b : int 0x48
0x000002000052cf7f : int 0x5b
0x000002000052fbdf : int 0x72
0x00000200000702d1 : int 0x80
0x00000200005db113 : int 0xb0
0x00000200001780a0 : int 0xb9
0x00000200006f6a22 : int 0xc0
0x0000020000498a0f : int 0xc2
0x000002000019a60f : int 0xc3
0x00000200001c4ac7 : int 0xc5
0x00000200005202f6 : int 0xd2
0x00000200005ef32f : int 0xdc
0x000002000015eecd : int 0xde
0x000002000003b4ca : int 0xe8
0x00000200005695df : int 0xeb
0x000002000022fcbc : int 0xf
0x00000200000a5e3d : int 0xfa
0x0000020000097547 : int 0xfc
0x00000200004c15b6 : int 0xfe
0x00000200000b6fbd : int 0xff
0x0000020000407fb3 : int 8
0x00000200003d733f : int1 ; adc cl, byte ptr [rdi] ; and ah, cl ; ret
0x00000200000e1905 : int1 ; adc edi, edi ; ret 0x8944
0x00000200002325c7 : int1 ; adc esp, dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x8349
0x00000200000e36e7 : int1 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000149cc5 : int1 ; add byte ptr [rax], al ; add cl, ch ; jb 0x20000149c98 ; add byte ptr [rax], al ; ret
0x000002000015bf50 : int1 ; add cl, byte ptr [rax - 0xd7eab4] ; ret 0x5589
0x000002000009921e : int1 ; add dword ptr [rax + 0x3b], ecx ; ret 0x850f
0x0000020000213d89 : int1 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x0000020000075fd1 : int1 ; add eax, 0x8bc93300 ; sar byte ptr [rbx], 1 ; ret
0x000002000011835e : int1 ; add eax, dword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000070fbd2 : int1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000046cd6 : int1 ; add rsp, 0x28 ; ret
0x0000020000441e5f : int1 ; call 0x2000006d284
0x00000200001d2d12 : int1 ; call 0x200000eef33
0x0000020000521f00 : int1 ; call 0x20000147f74
0x00000200006d1743 : int1 ; call 0x2000024da43
0x000002000061f5eb : int1 ; call 0x2000024da44
0x000002000003ece1 : int1 ; call 0x2000044af47
0x000002000016dadc : int1 ; call qword ptr [rax - 0x12fe3d17]
0x00000200001a4595 : int1 ; call qword ptr [rax - 0xc5b3d17]
0x00000200001a2997 : int1 ; call qword ptr [rax - 0xcdd5117]
0x00000200003dda65 : int1 ; call qword ptr [rax]
0x000002000019aa63 : int1 ; dec dword ptr [rax + 0xb] ; ret 0x8948
0x000002000019669e : int1 ; dec dword ptr [rax - 0x39] ; ret
0x000002000040f634 : int1 ; dec dword ptr [rax - 0x39] ; ret 0x5d00
0x0000020000195dba : int1 ; dec dword ptr [rax - 0x3f] ; call 0x1ffc33ca6d7
0x00000200001964bd : int1 ; dec dword ptr [rax - 0x75] ; push rsi ; sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000178caa : int1 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000196d84 : int1 ; dec dword ptr [rax - 0x75] ; ret 0x8348
0x00000200001969e7 : int1 ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000198bc5 : int1 ; dec dword ptr [rax - 0x7b] ; ret
0x00000200001ab980 : int1 ; dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x84 ; ret 0xf4fb
0x0000020000550740 : int1 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000040cdd6 : int1 ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000195f04 : int1 ; dec dword ptr [rax - 0x7f] ; ret 0
0x0000020000196cee : int1 ; dec dword ptr [rax - 9] ; ret
0x0000020000199776 : int1 ; dec dword ptr [rbp + 0xb] ; ret
0x00000200001966aa : int1 ; dec dword ptr [rbx - 0x74bad7ab] ; ret
0x00000200000d1e12 : int1 ; dec dword ptr [rbx - 0x7b74b63e] ; ret 0xb440
0x000002000040a582 : int1 ; dec dword ptr [rcx + 0x3b542444] ; ret
0x000002000019573b : int1 ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000197c8b : int1 ; dec dword ptr [rcx - 0x75] ; ret 0x3b4c
0x0000020000195829 : int1 ; dec dword ptr [rcx - 0x75] ; ret 0x48f0
0x00000200005ec81f : int1 ; dec esp ; mov eax, 0xc00002c5 ; ret
0x000002000077cccb : int1 ; hlt ; ret
0x00000200005b3279 : int1 ; idiv bh ; mov dword ptr [r8 + 0xc], r11d ; ret
0x0000020000196328 : int1 ; inc dword ptr [rbp - 0x75] ; ret
0x00000200001d6e6f : int1 ; inc dword ptr [rbp - 0x76] ; ret 0x8b48
0x00000200001967c4 : int1 ; inc dword ptr [rbx - 0x74bb021d] ; ret
0x00000200005ec15f : int1 ; inc dword ptr [rbx - 0x7cb70740] ; ret
0x00000200005ebb41 : int1 ; inc dword ptr [rcx + 2] ; ret
0x0000020000196759 : int1 ; inc dword ptr [rcx - 0x75] ; ret
0x00000200005e9525 : int1 ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200001fb619 : int1 ; jmp 0x200001fb67f
0x000002000047f76e : int1 ; jmp 0x2000047f509
0x0000020000534722 : int1 ; jmp 0x2000053472e
0x00000200006a9c17 : int1 ; jmp 0x200006a9c23
0x00000200005d068b : int1 ; jno 0x200005d0649 ; jmp qword ptr [rcx]
0x00000200004843ab : int1 ; mov al, 1 ; add rsp, 0x38 ; ret
0x0000020000072959 : int1 ; mov al, 1 ; ret
0x000002000051977f : int1 ; mov dword ptr [r8 + 0xc], eax ; ret
0x00000200004a2fbc : int1 ; mov eax, 0xc000000d ; ret
0x00000200001bc1b8 : int1 ; mov eax, dword ptr [rax + 4] ; add rsp, 0x28 ; ret
0x0000020000097ede : int1 ; mov eax, dword ptr [rip + 0x3103eb] ; ret
0x000002000053f342 : int1 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001a3e71 : int1 ; mov ebx, esi ; dec dword ptr [rax - 0x75] ; ret 0x84e9
0x00000200001cd654 : int1 ; mov r14d, ebx ; call 0x2000013987a
0x00000200001512dc : int1 ; mov rax, rdx ; and al, 0xf0 ; pop rbx ; ret
0x000002000011d073 : int1 ; mov rax, rdx ; ret
0x000002000021323d : int1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004338ee : int1 ; mov rcx, rdi ; call 0x2000002fb42
0x0000020000144b1e : int1 ; mov rdx, rdi ; mov rcx, r11 ; call r8
0x000002000015d506 : int1 ; or byte ptr [rax - 0xcfeab4], cl ; ret 0x5589
0x000002000015d746 : int1 ; or dword ptr [rax - 0xcfeab4], ecx ; ret 0x5589
0x0000020000701d97 : int1 ; pop rbp ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000061730b : int1 ; pop rsp ; ret
0x0000020000625c13 : int1 ; push qword ptr [rdx + 0xd8d4801] ; ret 0xcdff
0x0000020000196433 : int1 ; push rsi ; ret
0x0000020000195d42 : int1 ; push rsi ; ret 0x7401
0x0000020000196301 : int1 ; push rsi ; ret 0x741e
0x00000200005ec21b : int1 ; push rsi ; ret 0x7420
0x000002000019b01c : int1 ; push rsi ; ret 0xf07
0x00000200005ec957 : int1 ; push rsi ; ret 0xf0c
0x000002000019a6cd : int1 ; push rsi ; ret 0xf42
0x000002000000ba97 : int1 ; ret
0x00000200001c4aeb : int1 ; ret 0x15
0x00000200006c897d : int1 ; ret 0x48ff
0x000002000071174b : int1 ; ret 0xffb3
0x000002000052bc5b : int1 ; ret 0xffc1
0x00000200005a187d : int1 ; ret 0xffe8
0x00000200004c8bf8 : int1 ; sar edi, -0x75 ; ret
0x00000200006afaa9 : int1 ; sbb byte ptr [rax - 0x75], cl ; ret
0x000002000049c87b : int1 ; stosd dword ptr [rdi], eax ; ret 0x84ff
0x0000020000708b0e : int1 ; test rax, rax ; je 0x20000708b92 ; mov r8d, edi ; call rax
0x000002000068192f : int1 ; test rcx, rcx ; jne 0x2000068192c ; xor al, al ; ret
0x0000020000183363 : int1 ; xchg eax, ecx ; in eax, dx ; dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rcx - 0x75] ; ret 0x3b49
0x000002000066b031 : int1 ; xor al, al ; ret
0x00000200001f7289 : int1 ; xor eax, eax ; ret
0x000002000013c1ee : int1 ; xor rax, rax ; ret
0x000002000004e088 : invlpg byte ptr [rcx] ; ret
0x000002000011e7ca : invlpg byte ptr [rdx] ; sub r8, 1 ; jne 0x2000011e7d0 ; ret
0x0000020000412c3f : iretd ; adc byte ptr [rdi], cl ; test dword ptr [rsp + rdx], eax ; sbb byte ptr [rax], al ; inc edx ; jmp 0x20000412c36
0x00000200006dd30e : iretd ; call 0x20000009583
0x00000200003df7bc : iretd ; call 0x2000000c97c
0x00000200004338f1 : iretd ; call 0x2000002fb3f
0x00000200005d89d1 : iretd ; call 0x200000309ff
0x00000200001f6650 : iretd ; call 0x20000042933
0x000002000042ec60 : iretd ; call 0x2000005c1b4
0x0000020000439076 : iretd ; call 0x20000061bf4
0x0000020000465b26 : iretd ; call 0x20000061dc3
0x000002000043daa9 : iretd ; call 0x2000006d284
0x0000020000452d11 : iretd ; call 0x20000075e54
0x0000020000450ded : iretd ; call 0x2000007cdf4
0x0000020000200bb6 : iretd ; call 0x2000007ce13
0x000002000044fdef : iretd ; call 0x2000007e424
0x00000200005f7d24 : iretd ; call 0x20000081933
0x0000020000660954 : iretd ; call 0x2000008e0b7
0x0000020000462221 : iretd ; call 0x2000008e158
0x00000200004e1ffa : iretd ; call 0x2000008e25b
0x00000200004e1fc5 : iretd ; call 0x2000008e29f
0x00000200004661fd : iretd ; call 0x20000091214
0x00000200004c5507 : iretd ; call 0x2000009dc87
0x00000200004c59f1 : iretd ; call 0x2000009dd47
0x00000200004a1db5 : iretd ; call 0x2000009e093
0x0000020000192687 : iretd ; call 0x200000be963
0x000002000049eeb3 : iretd ; call 0x200000c7474
0x00000200004b970f : iretd ; call 0x200000da2b4
0x00000200004ae2a1 : iretd ; call 0x200000e5729
0x00000200004bc0cb : iretd ; call 0x200000e7214
0x00000200004bd340 : iretd ; call 0x200000e7254
0x00000200004b80af : iretd ; call 0x200000e7da4
0x00000200006849b3 : iretd ; call 0x200000e7da7
0x00000200004bb77d : iretd ; call 0x200000e7e74
0x00000200004c70f8 : iretd ; call 0x200000e8064
0x000002000069dce2 : iretd ; call 0x200000e8067
0x00000200004bd12d : iretd ; call 0x200000e9664
0x000002000006919d : iretd ; call 0x200000ec399
0x0000020000662c53 : iretd ; call 0x200000eef33
0x00000200004c7c66 : iretd ; call 0x200000f02a8
0x00000200004d4d5a : iretd ; call 0x200000fc294
0x00000200001cd47c : iretd ; call 0x2000013977b
0x00000200001c7e0b : iretd ; call 0x200001397cc
0x0000020000513e44 : iretd ; call 0x2000013bb78
0x0000020000513e5a : iretd ; call 0x2000013bd40
0x0000020000516af2 : iretd ; call 0x2000013c1b4
0x0000020000516a3f : iretd ; call 0x2000013c284
0x000002000051ebf7 : iretd ; call 0x2000014122c
0x0000020000525607 : iretd ; call 0x20000148074
0x0000020000525088 : iretd ; call 0x200001480d4
0x0000020000525087 : iretd ; call 0x200001480d5
0x0000020000527f5f : iretd ; call 0x20000148154
0x000002000061c25a : iretd ; call 0x200001484f3
0x0000020000519496 : iretd ; call 0x20000148a94
0x0000020000525641 : iretd ; call 0x200001497f4
0x000002000020e654 : iretd ; call 0x2000014a8f3
0x000002000052a640 : iretd ; call 0x20000157544
0x0000020000528465 : iretd ; call 0x20000157884
0x00000200005a384a : iretd ; call 0x200001c980c
0x00000200005a7098 : iretd ; call 0x200001cb88c
0x00000200005f69ee : iretd ; call 0x20000217cac
0x00000200002254c4 : iretd ; call 0x20000225213
0x00000200000e0cfc : iretd ; call 0x2000024d003
0x000002000061f39f : iretd ; call 0x2000024d004
0x00000200007ae350 : iretd ; call 0x2000024da49
0x00000200007a8d03 : iretd ; call 0x200003d2528
0x00000200007bbc58 : iretd ; call 0x200003e1c84
0x0000020000400426 : iretd ; call 0x200003fea0f
0x00000200006c3336 : iretd ; call 0x200003ff5af
0x00000200004672e3 : iretd ; call 0x200004035d3
0x0000020000558835 : iretd ; call 0x200004a4a7b
0x0000020000558834 : iretd ; call 0x200004a4a7c
0x00000200005d89c1 : iretd ; call 0x200004c083b
0x000002000054369a : iretd ; call 0x200005436e4
0x00000200005b02fd : iretd ; call 0x2000061c5f3
0x000002000061c3d0 : iretd ; call 0x2000061c5f7
0x00000200005a2bc2 : iretd ; call 0x2000061ee9f
0x00000200004ece8b : iretd ; call 0x200006590db
0x00000200005de15a : iretd ; call 0x2000065a397
0x00000200005de287 : iretd ; call 0x2000065a543
0x00000200005dcb86 : iretd ; call 0x20000668deb
0x000002000067c16c : iretd ; call 0x2000067f01f
0x00000200007031d3 : iretd ; call 0x2000070d31f
0x00000200007052c1 : iretd ; call 0x20000711597
0x000002000079c28c : iretd ; call 0x200007abbd5
0x00000200001e6382 : iretd ; call qword ptr [rbx]
0x0000020000546e00 : iretd ; call qword ptr [rdi + 0x100]
0x0000020000448753 : iretd ; call r10
0x00000200006beecd : iretd ; call r11
0x00000200003e61c9 : iretd ; call r12
0x0000020000009b10 : iretd ; call r14
0x0000020000539658 : iretd ; call r15
0x00000200000434d8 : iretd ; call rax
0x0000020000030893 : iretd ; call rbx
0x00000200003f2b16 : iretd ; call rdi
0x0000020000003726 : iretd ; call rsi
0x000002000001c0ff : iretd ; jmp rcx
0x0000020000606916 : iretd ; jne 0x20000606935 ; call 0x2000022992a
0x00000200001a6a69 : iretd ; lea edx, dword ptr [r9 + 0xa] ; call 0x20000092c8f
0x00000200007a91d9 : iretd ; lea r8, qword ptr [rsp + 0x3c] ; call rax
0x00000200006d8262 : iretd ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x00000200006d86f6 : iretd ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x00000200001e5c09 : iretd ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r15]
0x00000200005347c8 : iretd ; lea r8d, dword ptr [rdx + 0x5e] ; call 0x20000157888
0x000002000058df63 : iretd ; lea r8d, dword ptr [rdx + 3] ; call rsi
0x000002000058df2e : iretd ; lea r8d, dword ptr [rdx + 5] ; call rsi
0x000002000016d940 : iretd ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x000002000040f104 : iretd ; mov dl, 1 ; call 0x2000040b3d1
0x0000020000587623 : iretd ; mov dword ptr [rsp + 0x20], 2 ; call rdi
0x00000200006da7da : iretd ; mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200006d8543 : iretd ; mov dword ptr [rsp + 0x20], r13d ; call rdi
0x000002000011e99c : iretd ; mov dword ptr [rsp + 0x50], 0 ; call rsi
0x0000020000661a05 : iretd ; mov ebx, eax ; call 0x2000001dcd5
0x000002000061ef1a : iretd ; mov ebx, eax ; call 0x2000024d006
0x00000200001dd81e : iretd ; mov edi, r12d ; mov esi, r12d ; call 0x200000e9a59
0x00000200007d09b2 : iretd ; mov qword ptr [rsp + 0x20], rax ; call 0x200003f7cf5
0x000002000000c168 : iretd ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000062c1bd : iretd ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rax]
0x0000020000401160 : iretd ; mov r14b, 1 ; lea r8d, dword ptr [r9 - 4] ; call rsi
0x00000200003ddabe : iretd ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x000002000070f4ec : iretd ; mov r8, rsi ; mov edx, ebp ; mov rcx, rbx ; call rax
0x0000020000529c89 : iretd ; mov r8d, ebx ; call 0x20000157547
0x0000020000551157 : iretd ; mov r8d, ebx ; mov rdx, rbp ; call rax
0x000002000040118a : iretd ; mov r9d, eax ; mov r8d, eax ; call rsi
0x0000020000123bc1 : iretd ; mov rax, qword ptr [rip + 0x2858c7] ; call rax
0x0000020000123aba : iretd ; mov rax, qword ptr [rip + 0x2859ce] ; call rax
0x00000200001237a6 : iretd ; mov rax, qword ptr [rip + 0x285ce2] ; call rax
0x0000020000123654 : iretd ; mov rax, qword ptr [rip + 0x285e34] ; call rax
0x00000200001235ad : iretd ; mov rax, qword ptr [rip + 0x285edb] ; call rax
0x000002000002eeff : iretd ; mov rax, qword ptr [rip + 0x37a589] ; call rax
0x0000020000648c44 : iretd ; mov rax, qword ptr [rsi + 0x38] ; call rax
0x000002000071316f : iretd ; mov rbx, rax ; call qword ptr [rip - 0x3d28f9]
0x0000020000713a4e : iretd ; mov rbx, rax ; call rsi
0x0000020000525577 : iretd ; mov rcx, rdi ; call 0x20000148a97
0x0000020000028ffd : iretd ; mov rdi, qword ptr [rsp + 0x10] ; jmp rcx
0x0000020000218a7a : iretd ; mov rdx, qword ptr [rsp + 0x70] ; call r9
0x000002000021d23c : iretd ; mov rdx, rbx ; call rsi
0x0000020000708131 : iretd ; mov rsi, rax ; call rbx
0x00000200007d61bc : iretd ; sub al, 0xb2 ; call qword ptr [rcx]
0x0000020000650aa3 : iretd ; xor ebx, ebx ; call 0x2000024d007
0x0000020000115efc : iretd ; xor edi, edi ; call 0x2000005f907
0x0000020000121e85 : iretd ; xor edx, edx ; call 0x2000009e095
0x000002000046f2b5 : iretd ; xor edx, edx ; call 0x2000009e096
0x0000020000115efb : iretq ; xor edi, edi ; call 0x2000005f908
0x0000020000006cbf : ja 0x20000006cf7 ; mov r8, rdx ; mov rcx, rbp ; call r14
0x00000200000092e9 : ja 0x20000009302 ; ret
0x000002000000c376 : ja 0x2000000c392 ; cmp qword ptr [rcx + 8], rax ; je 0x2000000c387 ; ret
0x000002000001f924 : ja 0x2000001f944 ; add rsp, 0x28 ; ret
0x0000020000027bfd : ja 0x20000027c02 ; ret
0x0000020000037c05 : ja 0x20000037c36 ; or dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x000002000003b1bb : ja 0x2000003b1cc ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000450a0 : ja 0x200000450af ; mov eax, 4 ; ret
0x00000200000450c6 : ja 0x200000450b7 ; xor eax, eax ; ret
0x00000200000450b6 : ja 0x200000450cf ; mov eax, 1 ; ret
0x00000200000450ab : ja 0x200000450cf ; mov eax, 8 ; ret
0x0000020000045112 : ja 0x2000004511e ; xor al, al ; ret
0x000002000004e77e : ja 0x2000004e78d ; mov eax, 1 ; ret
0x0000020000050f70 : ja 0x20000050f60 ; ret
0x0000020000052b61 : ja 0x20000052b6c ; sub rax, rcx ; ret
0x000002000007b0ed : ja 0x2000007b160 ; sub al, byte ptr [rax] ; ret
0x0000020000087ba1 : ja 0x20000087baa ; mov al, 1 ; ret
0x00000200000888ea : ja 0x200000888ef ; ret
0x0000020000090e8d : ja 0x20000090e79 ; mov qword ptr [rcx + 0x168], r8 ; ret
0x0000020000090e9e : ja 0x20000090e79 ; mov qword ptr [rcx + 0x168], rax ; ret
0x0000020000090e6e : ja 0x20000090e99 ; ret
0x00000200000b6e94 : ja 0x200000b6e84 ; mov eax, 1 ; ret
0x00000200000bdf17 : ja 0x200000bdf1c ; ret
0x00000200000c064a : ja 0x200000c0681 ; add rsp, 8 ; ret
0x00000200000c6ce2 : ja 0x200000c6cf5 ; mov al, 1 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000c6cf6 : ja 0x200000c6d09 ; add al, ch ; ret 0xf909
0x00000200000ddbd5 : ja 0x200000ddbdf ; sub rax, rdx ; ret
0x00000200000ddbd5 : ja 0x200000ddbe0 ; sub rax, rdx ; ret
0x00000200000f3729 : ja 0x200000f3714 ; mov al, 1 ; ret
0x00000200000fb3cb : ja 0x200000fb3f6 ; add al, ch ; mov ebp, 0x8afff79d ; ret
0x0000020000135d23 : ja 0x20000135d31 ; ret
0x0000020000135d22 : ja 0x20000135d32 ; ret
0x0000020000136538 : ja 0x20000136541 ; sbb eax, eax ; ret
0x000002000013c456 : ja 0x2000013c46e ; mov rdx, rsi ; mov rcx, rbx ; call r14
0x0000020000144d71 : ja 0x20000144d78 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000151a7b : ja 0x20000151a72 ; ret
0x0000020000151a7a : ja 0x20000151a73 ; ret
0x00000200001b699d : ja 0x200001b69ac ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x00000200001be67d : ja 0x200001be60a ; or dword ptr [rax], eax ; sti ; add rsp, 0x28 ; ret
0x00000200001fd583 : ja 0x200001fd561 ; mov dword ptr [r10 + 4], r9d ; ret
0x000002000020bf18 : ja 0x2000020bec7 ; cmp r8d, r9d ; sete al ; ret
0x000002000020fe54 : ja 0x2000020fe63 ; mov qword ptr [rdx], rcx ; xor eax, eax ; ret
0x0000020000213158 : ja 0x20000213163 ; sub r8d, r10d ; jmp 0x2000021316e
0x000002000023f41c : ja 0x2000023f423 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000240430 : ja 0x20000240437 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000243676 : ja 0x2000024367d ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000245470 : ja 0x20000245477 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200002462e4 : ja 0x200002462eb ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000024a670 : ja 0x2000024a677 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200003c6466 : ja 0x200003c649f ; mov rdx, r12 ; mov rcx, rbx ; call r8
0x00000200003e1b24 : ja 0x200003e1b2e ; xor edi, edi ; call 0x2000005f908
0x00000200003e1b23 : ja 0x200003e1b2f ; xor edi, edi ; call 0x2000005f909
0x00000200003e9095 : ja 0x200003e909a ; ret
0x00000200003ff2e9 : ja 0x200003ff2f8 ; sbb eax, eax ; add eax, 2 ; ret
0x000002000043216f : ja 0x200004321db ; add rsp, 0x38 ; ret
0x0000020000451325 : ja 0x20000451344 ; add al, byte ptr [rax] ; lea rcx, qword ptr [rax - 0x10] ; jmp 0x200004512fa
0x0000020000456d05 : ja 0x20000456d6c ; ret 0xebff
0x00000200004783ce : ja 0x200004783da ; mov qword ptr [rdx], r8 ; mov al, 1 ; ret
0x0000020000478f8c : ja 0x20000478f91 ; ret
0x000002000049460e : ja 0x2000049461f ; movzx eax, cx ; sub eax, 0x20 ; ret
0x0000020000497595 : ja 0x200004975b0 ; add bl, al ; xor al, al ; ret
0x000002000049fcd5 : ja 0x2000049fd2b ; call 0x1ffc4000ce1
0x00000200004a2fa8 : ja 0x200004a2fc5 ; test edx, edx ; jne 0x200004a2fb9 ; xor eax, eax ; ret
0x00000200004a651e : ja 0x200004a6523 ; ret
0x00000200004a6548 : ja 0x200004a6536 ; ret
0x00000200004aa7b9 : ja 0x200004aa7be ; ret
0x00000200004b2076 : ja 0x200004b2089 ; lea eax, dword ptr [rcx*4 + 8] ; ret
0x00000200004c0bc1 : ja 0x200004c0c13 ; mov ecx, esi ; call 0x200000e7e77
0x00000200004e9f63 : ja 0x200004e9f76 ; mov eax, r10d ; add rsp, 0x28 ; ret
0x00000200004e9fec : ja 0x200004ea004 ; mov word ptr [r8 + 2], r9w ; xor eax, eax ; ret
0x00000200004fdd65 : ja 0x200004fdd80 ; ret 0x45ff
0x0000020000513df5 : ja 0x20000513e67 ; ret 0x48ff
0x000002000051c14d : ja 0x2000051c104 ; ret
0x00000200005242ce : ja 0x200005242e3 ; mov qword ptr [r10], r9 ; xor eax, eax ; ret
0x0000020000544e01 : ja 0x20000544dc6 ; xor al, al ; ret
0x000002000055c14b : ja 0x2000055c0d6 ; mov byte ptr [rdx], r10b ; inc rdx ; jmp 0x2000055c142
0x000002000055df8a : ja 0x2000055df93 ; mov eax, ecx ; ret
0x0000020000564ebf : ja 0x20000564ecf ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000564ebe : ja 0x20000564ed0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000056888a : ja 0x2000056889b ; mov dword ptr [rip - 0x265b2a], ecx ; ret
0x00000200005d0bdc : ja 0x200005d0b6b ; ret
0x00000200005e0c61 : ja 0x200005e0c7d ; mov rcx, rbx ; call 0x2000005ce77
0x00000200004e9fb8 : ja 0x200005e1820 ; xor eax, eax ; ret
0x00000200005e9134 : ja 0x200005e912c ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200005392c3 : ja 0x200005ea55c ; ret
0x0000020000610175 : ja 0x20000610130 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000612964 : ja 0x20000612953 ; xchg eax, esi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000020000619985 : ja 0x200006199bf ; ret
0x000002000061f485 : ja 0x2000061f464 ; ret 0x33ff
0x000002000061f885 : ja 0x2000061f860 ; ret 0x48ff
0x00000200006256c5 : ja 0x2000062564c ; ret 0x48ff
0x0000020000626b85 : ja 0x20000626bed ; ret 0x33ff
0x000002000063e625 : ja 0x2000063e5ee ; ret
0x000002000064c5d3 : ja 0x2000064c5c1 ; lea rdx, qword ptr [rsp + 0x38] ; call 0x200003f8859
0x000002000064ce9c : ja 0x2000064ce29 ; ret 0x45ff
0x0000020000678e5f : ja 0x20000678e2b ; call qword ptr [rax]
0x000002000067b428 : ja 0x2000067b431 ; mov al, 1 ; ret
0x00000200006882db : ja 0x200006882ee ; movzx eax, r9w ; add eax, 0x20 ; ret
0x000002000069e40b : ja 0x2000069e41a ; mov eax, 0x32 ; ret
0x000002000069e41a : ja 0x2000069e429 ; mov eax, 0x3c ; ret
0x00000200006ba2c5 : ja 0x200006ba2a1 ; ret
0x00000200006bf45b : ja 0x200006bf3e7 ; fisttp dword ptr [rcx - 0x75] ; ret
0x00000200006bf45a : ja 0x200006bf3e8 ; fisttp dword ptr [rcx - 0x75] ; ret
0x00000200006c565d : ja 0x200006c5645 ; ret 0x66ff
0x00000200006cde73 : ja 0x200006cde86 ; sub cl, 0x30 ; mov byte ptr [rdx], cl ; mov al, 1 ; ret
0x00000200006cdeaf : ja 0x200006cdec2 ; sub cl, 0x30 ; mov byte ptr [rdx], cl ; mov al, 1 ; ret
0x00000200006edc22 : ja 0x200006edc2e ; push rsi ; xor dword ptr [rip + 0x30dbde31], ecx ; ret 0xc556
0x00000200006f78a5 : ja 0x200006f78ff ; ret 0x48ff
0x0000020000703c1b : ja 0x20000703c2a ; mov eax, 1 ; ret
0x000002000070a04d : ja 0x2000070a05e ; sub r9d, r10d ; mov dword ptr [r8], r9d ; ret
0x000002000070f7a3 : ja 0x2000070f7b0 ; movzx eax, r10b ; jmp 0x2000070f7bc
0x000002000070f870 : ja 0x2000070f87d ; movzx eax, r10b ; jmp 0x2000070f889
0x000002000070f924 : ja 0x2000070f931 ; movzx eax, r10b ; jmp 0x2000070f93d
0x000002000070f9c7 : ja 0x2000070f9d4 ; movzx eax, r10b ; jmp 0x2000070f9e0
0x00000200007108c5 : ja 0x20000710939 ; movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000711c18 : ja 0x20000711c4b ; call 0x2000020dec0
0x0000020000716ec5 : ja 0x20000716ed3 ; movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000779343 : ja 0x2000077934a ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200007800f6 : ja 0x200007800fd ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000780ffb : ja 0x20000781002 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000781daa : ja 0x20000781db1 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000782c56 : ja 0x20000782c5d ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000783c06 : ja 0x20000783c0d ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000784bd8 : ja 0x20000784bdf ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200007b2f8b : jae 0x1ff8bbf2f98 ; ret 0x8b41
0x00000200000035cb : jae 0x200000035b9 ; xor al, al ; ret
0x0000020000003cbe : jae 0x20000003ce6 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000007c02 : jae 0x20000007c32 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000090b0 : jae 0x200000090d0 ; mov rsp, r11 ; pop rdi ; ret
0x000002000000e40a : jae 0x2000000e432 ; mov rsp, r11 ; pop rdi ; ret
0x000002000000fee0 : jae 0x2000000ff10 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000014942 : jae 0x2000001494b ; xor eax, eax ; ret
0x0000020000015c6d : jae 0x20000015c71 ; ret
0x0000020000015c6c : jae 0x20000015c72 ; ret
0x0000020000018bc5 : jae 0x20000018b9b ; mov eax, 1 ; ret
0x0000020000018b92 : jae 0x20000018b9b ; xor eax, eax ; ret
0x000002000001a31d : jae 0x2000001a33d ; mov rsp, r11 ; pop rdi ; ret
0x000002000001f4fe : jae 0x2000001f52e ; mov rsp, r11 ; pop rdi ; ret
0x00000200000242c7 : jae 0x200000242f7 ; mov rsp, r11 ; pop rdi ; ret
0x000002000002b029 : jae 0x2000002b051 ; mov rsp, r11 ; pop rdi ; ret
0x000002000002b4bb : jae 0x2000002b4eb ; mov rsp, r11 ; pop rdi ; ret
0x000002000002d074 : jae 0x2000002d07f ; mov rax, r9 ; ret
0x000002000003002a : jae 0x2000003005d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000030989 : jae 0x2000003099c ; xor eax, eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000030ea9 : jae 0x20000030ed9 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000031a88 : jae 0x20000031ab8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000328ad : jae 0x200000328e8 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000034365 : jae 0x20000034395 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000038369 : jae 0x200000383a4 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000003aa93 : jae 0x2000003aac3 ; mov rsp, r11 ; pop rdi ; ret
0x000002000003dc0a : jae 0x2000003dc32 ; mov rsp, r11 ; pop rdi ; ret
0x000002000003e371 : jae 0x2000003e3ac ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000003f705 : jae 0x2000003f735 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000042bd8 : jae 0x20000042c00 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000450c1 : jae 0x20000045092 ; cmp ecx, 1 ; ja 0x200000450bc ; xor eax, eax ; ret
0x0000020000045a83 : jae 0x20000045aab ; mov rsp, r11 ; pop rdi ; ret
0x000002000004def7 : jae 0x2000004df17 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000050f5c : jae 0x20000050f69 ; add qword ptr [rcx + 0x78], r8 ; ret
0x000002000005252a : jae 0x2000005253b ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000566de : jae 0x2000005670e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000059e14 : jae 0x20000059de6 ; bts esi, 0x1c ; jmp 0x20000059de6
0x000002000005c418 : jae 0x2000005c438 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000074e7e : jae 0x20000074e9e ; mov rsp, r11 ; pop rdi ; ret
0x0000020000076032 : jae 0x2000007603b ; xor eax, eax ; ret
0x00000200000792fe : jae 0x2000007930b ; add rsp, 0x28 ; ret
0x00000200000794b0 : jae 0x200000794eb ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000079f51 : jae 0x20000079f61 ; cmp r8, rcx ; seta al ; ret
0x000002000007d38a : jae 0x2000007d369 ; or byte ptr [rax - 0x75], cl ; ret
0x000002000007d3ef : jae 0x2000007d3ce ; or byte ptr [rax - 0x75], cl ; ret
0x000002000007dfa8 : jae 0x2000007df33 ; jmp 0x2000018b06e
0x000002000007e92f : jae 0x2000007e90e ; or byte ptr [rax - 0x75], cl ; ret
0x000002000008390d : jae 0x20000083916 ; mov al, 1 ; ret
0x0000020000085b4e : jae 0x20000085b76 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000874a2 : jae 0x200000874d8 ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008953d : jae 0x2000008956d ; mov rsp, r11 ; pop rdi ; ret
0x000002000008eee4 : jae 0x2000008eee9 ; ret
0x00000200000955c6 : jae 0x200000955d7 ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000098fa7 : jae 0x20000098fb2 ; mov qword ptr [r8], rax ; ret
0x0000020000099daf : jae 0x20000099dc0 ; mov qword ptr [r10], r8 ; mov rax, rcx ; ret
0x00000200000b7ab3 : jae 0x200000b7ac2 ; or byte ptr [r8 + 0x22], 0x10 ; ret
0x00000200000bbb61 : jae 0x200000bbb91 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000bc4e2 : jae 0x200000bc4ed ; or eax, 0xffffffff ; ret
0x00000200000bf475 : jae 0x200000bf486 ; mov eax, edx ; add rsp, 0x38 ; ret
0x00000200000f36cd : jae 0x200000f36f5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f3c30 : jae 0x200000f3c58 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f5556 : jae 0x200000f5591 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000f8daa : jae 0x200000f8dda ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f8f85 : jae 0x200000f8fad ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f907c : jae 0x200000f90a4 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000fabc2 : jae 0x200000fac05 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000fc533 : jae 0x200000fc566 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001034e7 : jae 0x20000103507 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000108866 : jae 0x20000108872 ; mov qword ptr [rcx + 0x20], rdx ; ret
0x0000020000110f90 : jae 0x20000110f9b ; or eax, 0xffffffff ; ret
0x0000020000111d4f : jae 0x20000111d6f ; mov rsp, r11 ; pop rdi ; ret
0x0000020000113f9c : jae 0x20000113fcc ; mov rsp, r11 ; pop rdi ; ret
0x0000020000115fe7 : jae 0x2000011600f ; mov rsp, r11 ; pop rbp ; ret
0x000002000011ae6d : jae 0x2000011aea8 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000011bc85 : jae 0x2000011bcb5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000011deda : jae 0x2000011df02 ; mov rsp, r11 ; pop rdi ; ret
0x000002000012105d : jae 0x20000121090 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001267ce : jae 0x200001267f6 ; mov rsp, r11 ; pop rdi ; ret
0x000002000012d278 : jae 0x2000012d2a8 ; mov rsp, r11 ; pop rdi ; ret
0x000002000013049d : jae 0x200001304d0 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000013096a : jae 0x200001309ad ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000131dad : jae 0x20000131dcd ; mov rsp, r11 ; pop rdi ; ret
0x000002000013513e : jae 0x2000013516e ; mov rsp, r11 ; pop rdi ; ret
0x000002000013528d : jae 0x200001352b5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001364f5 : jae 0x200001364ed ; mov rsp, r11 ; pop rbp ; ret
0x000002000013a0c6 : jae 0x2000013a109 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000013abd7 : jae 0x2000013ac12 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000013c43b : jae 0x2000013c459 ; mov rdx, rsi ; mov rcx, rbx ; call r14
0x000002000013f50a : jae 0x2000013f518 ; movzx eax, cx ; sub eax, edx ; ret
0x000002000013f50a : jae 0x2000013f519 ; movzx eax, cx ; sub eax, edx ; ret
0x000002000014025f : jae 0x20000140293 ; mov byte ptr [r10], 0x2e ; inc r10 ; jmp 0x20000140285
0x000002000014217f : jae 0x200001421af ; mov rsp, r11 ; pop rbp ; ret
0x0000020000144840 : jae 0x20000144870 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001460fd : jae 0x20000146108 ; or eax, 0xffffffff ; ret
0x00000200001473ef : jae 0x200001473e7 ; and edx, 0xf ; jne 0x200001473fe ; ret
0x000002000003f3c9 : jae 0x2000016e6d8 ; ret
0x000002000005398e : jae 0x20000181ba1 ; mov rax, rcx ; ret
0x0000020000188a13 : jae 0x20000188a22 ; mov eax, 0x21 ; ret
0x00000200001a9707 : jae 0x200001a9696 ; hlt ; push rsi ; ret 0x741e
0x00000200001b5343 : jae 0x200001b5386 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001b9c19 : jae 0x200001b9c22 ; mov al, 1 ; ret
0x00000200001bc054 : jae 0x200001bc074 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001bc9d8 : jae 0x200001bc9e7 ; mov rax, qword ptr [rip + 0x13ce6f] ; call rax
0x00000200001bccca : jae 0x200001bccd5 ; or eax, 0xffffffff ; ret
0x00000200001bde85 : jae 0x200001bdea5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001bee04 : jae 0x200001bee24 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001bf134 : jae 0x200001bf164 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001bf5f9 : jae 0x200001bf5ba ; idiv edi ; add rsp, 0x60 ; pop rbp ; ret
0x00000200001bfc4c : jae 0x200001bfc74 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c2672 : jae 0x200001c26a5 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001c278b : jae 0x200001c27c6 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001c29ae : jae 0x200001c29ce ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c2aab : jae 0x200001c2ad3 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c31d2 : jae 0x200001c31fa ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c384d : jae 0x200001c3875 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c3f71 : jae 0x200001c3f91 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c4291 : jae 0x200001c42b9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c8b5f : jae 0x200001c8b68 ; mov al, 1 ; ret
0x00000200001ca9a7 : jae 0x200001ca9da ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001cd792 : jae 0x200001cd7ba ; mov rsp, r11 ; pop rdi ; ret
0x00000200001cf687 : jae 0x200001cf692 ; or eax, 0xffffffff ; ret
0x00000200001d8b9d : jae 0x200001d8be0 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001dc307 : jae 0x200001dc337 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e025d : jae 0x200001e028d ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e053f : jae 0x200001e056f ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e1877 : jae 0x200001e18a7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e36c5 : jae 0x200001e36d0 ; or eax, 0xffffffff ; ret
0x00000200001e3938 : jae 0x200001e3911 ; xor eax, eax ; ret
0x00000200001ec286 : jae 0x200001ec2c1 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001f4cd1 : jae 0x200001f4d01 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001fb69e : jae 0x200001fb6ce ; mov rsp, r11 ; pop rbp ; ret
0x00000200001fd91c : jae 0x200001fd944 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fdb72 : jae 0x200001fdb9a ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fe7cb : jae 0x200001fe7fb ; mov rsp, r11 ; pop rdi ; ret
0x0000020000204fac : jae 0x20000204fdc ; mov rsp, r11 ; pop rbp ; ret
0x000002000020549c : jae 0x200002054cf ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000205591 : jae 0x200002055cc ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000206812 : jae 0x2000020684d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000208967 : jae 0x2000020898f ; mov rsp, r11 ; pop rdi ; ret
0x0000020000209122 : jae 0x2000020915d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200002093d9 : jae 0x2000020940c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000209dd4 : jae 0x20000209e04 ; mov rsp, r11 ; pop rdi ; ret
0x000002000020c017 : jae 0x2000020c022 ; or eax, 0xffffffff ; ret
0x000002000020c8b9 : jae 0x2000020c8f4 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000020e682 : jae 0x2000020e6aa ; mov rsp, r11 ; pop rdi ; ret
0x000002000021179c : jae 0x20000211793 ; mov rax, rdx ; ret
0x000002000021179c : jae 0x20000211794 ; mov rax, rdx ; ret
0x00000200002117f5 : jae 0x200002117ee ; mov word ptr [rdx], cx ; add qword ptr [r8], 2 ; ret
0x000002000021182d : jae 0x20000211836 ; xor al, al ; ret
0x000002000021231f : jae 0x20000212347 ; mov rsp, r11 ; pop rdi ; ret
0x00000200002151d5 : jae 0x200002151f5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200002152f6 : jae 0x20000215316 ; mov rsp, r11 ; pop rdi ; ret
0x000002000021539e : jae 0x200002153be ; mov rsp, r11 ; pop rdi ; ret
0x0000020000217252 : jae 0x20000217261 ; mov eax, 0xc0000023 ; ret
0x00000200002184e3 : jae 0x200002184a7 ; xor eax, eax ; ret
0x0000020000218f6c : jae 0x20000218f7a ; mov qword ptr [rdx + 0x38], r8 ; xor eax, eax ; ret
0x0000020000219218 : jae 0x20000219248 ; mov rsp, r11 ; pop rbp ; ret
0x000002000021c47c : jae 0x2000021c487 ; or eax, 0xffffffff ; ret
0x000002000021e462 : jae 0x2000021e492 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000220372 : jae 0x20000220384 ; movzx eax, cl ; mov cr8, rax ; ret
0x0000020000220387 : jae 0x20000220393 ; mov cr8, rcx ; ret
0x0000020000224c21 : jae 0x20000224c64 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000225032 : jae 0x20000225062 ; mov rsp, r11 ; pop rbp ; ret
0x00000200002251d7 : jae 0x20000225212 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000022ba5a : jae 0x2000022ba52 ; mov rsp, r11 ; pop rdi ; ret
0x000002000022bda0 : jae 0x2000022bde3 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000022be49 : jae 0x2000022be69 ; mov rsp, r11 ; pop rdi ; ret
0x000002000022db45 : jae 0x2000022db88 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x0000020000230ca6 : jae 0x20000230cd0 ; xor eax, eax ; ret
0x0000020000231772 : jae 0x20000231781 ; mov eax, 0xc00001a2 ; ret
0x00000200002374d9 : jae 0x20000237509 ; mov rsp, r11 ; pop rdi ; ret
0x00000200002379c8 : jae 0x200002379f8 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000238f81 : jae 0x20000238fb1 ; mov rsp, r11 ; pop rdi ; ret
0x000002000023a082 : jae 0x2000023a08b ; xor eax, eax ; ret
0x00000200003caf18 : jae 0x200003caf49 ; mov rsp, r11 ; pop r15 ; ret
0x00000200003ce0ab : jae 0x200003ce0e6 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200003cee03 : jae 0x200003cee3e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003cfe07 : jae 0x200003cfe0e ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003d0df9 : jae 0x200003d0e19 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003d83ff : jae 0x200003d841f ; mov rsp, r11 ; pop rdi ; ret
0x00000200003d8b03 : jae 0x200003d8b3e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003e0440 : jae 0x200003e0468 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003e27d6 : jae 0x200003e2819 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200003e72f6 : jae 0x200003e7326 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003eaaec : jae 0x200003eab14 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003ec4e0 : jae 0x200003ec51b ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003ed4ad : jae 0x200003ed4dd ; mov rsp, r11 ; pop rbp ; ret
0x00000200003f2508 : jae 0x200003f2519 ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200003f24f1 : jae 0x200003f2521 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003f4db7 : jae 0x200003f4dd7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003f4f19 : jae 0x200003f4f41 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003f66a4 : jae 0x200003f66d4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003f73a9 : jae 0x200003f73d1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003f7518 : jae 0x200003f7548 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003fa612 : jae 0x200003fa642 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003fd5fe : jae 0x200003fd626 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000400807 : jae 0x2000040082f ; mov rsp, r11 ; pop rdi ; ret
0x0000020000403d77 : jae 0x20000403d9f ; mov rsp, r11 ; pop rdi ; ret
0x000002000040e30b : jae 0x2000040e346 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000414ce5 : jae 0x20000414d0d ; mov rsp, r11 ; pop rdi ; ret
0x00000200004215ce : jae 0x200004215ff ; mov rsp, r11 ; pop r15 ; ret
0x000002000042b452 : jae 0x2000042b47a ; mov rsp, r11 ; pop rbp ; ret
0x000002000042d7f6 : jae 0x2000042d816 ; mov rsp, r11 ; pop rdi ; ret
0x000002000042dcb1 : jae 0x2000042dcd9 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000436852 : jae 0x20000436883 ; mov rsp, r11 ; pop r15 ; ret
0x0000020000439649 : jae 0x200004395d4 ; ret 0x8bff
0x000002000043ac45 : jae 0x2000043ac6d ; mov rsp, r11 ; pop rdi ; ret
0x000002000043b5ed : jae 0x2000043b630 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000043c6c1 : jae 0x2000043c6e9 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000441f65 : jae 0x20000441f86 ; add byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000006d289
0x0000020000444aa1 : jae 0x20000444ab0 ; bts dword ptr [rdx], 8 ; mov eax, r9d ; ret
0x00000200004495d7 : jae 0x20000449607 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000449d5c : jae 0x20000449d97 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000044ae19 : jae 0x2000044ae49 ; mov rsp, r11 ; pop rbp ; ret
0x000002000044cc1f : jae 0x2000044cc3f ; mov rsp, r11 ; pop rdi ; ret
0x000002000045141a : jae 0x20000451455 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000045307d : jae 0x200004530b8 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000453580 : jae 0x200004535a8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004539ed : jae 0x20000453a1d ; mov rsp, r11 ; pop rdi ; ret
0x0000020000455360 : jae 0x2000045539b ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004591a7 : jae 0x200004591cf ; mov rsp, r11 ; pop rdi ; ret
0x000002000045c01b : jae 0x2000045c03b ; mov rsp, r11 ; pop rdi ; ret
0x000002000045c3ec : jae 0x2000045c41c ; mov rsp, r11 ; pop rdi ; ret
0x000002000045cc96 : jae 0x2000045ccbe ; mov rsp, r11 ; pop rdi ; ret
0x000002000045cdc8 : jae 0x2000045cdf8 ; mov rsp, r11 ; pop rbp ; ret
0x000002000045d73c : jae 0x2000045d75c ; mov rsp, r11 ; pop rdi ; ret
0x0000020000460a00 : jae 0x20000460a20 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000466dce : jae 0x20000466e11 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004695ff : jae 0x2000046961f ; mov rsp, r11 ; pop rdi ; ret
0x000002000046d899 : jae 0x2000046d8b9 ; mov rsp, r11 ; pop rdi ; ret
0x000002000046ff4d : jae 0x2000046ff88 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000474b9c : jae 0x20000474bbc ; mov rsp, r11 ; pop rdi ; ret
0x0000020000474ca9 : jae 0x20000474cd9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000048cb7c : jae 0x2000048cbad ; mov rsp, r11 ; pop r15 ; ret
0x0000020000491817 : jae 0x20000491837 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000494604 : jae 0x2000049460f ; movzx eax, cx ; ret
0x000002000049d0c6 : jae 0x2000049d109 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200004a1d2f : jae 0x200004a1d60 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004afa9c : jae 0x200004afa60 ; add byte ptr [rax - 0x7a9a0000], al ; ret 0x840f
0x00000200004b21be : jae 0x200004b2201 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200004b25d9 : jae 0x200004b25f9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004bb138 : jae 0x200004bb183 ; jb 0x200004bb12a ; xor ch, cl ; ret 0xe9ff
0x00000200004bb368 : jae 0x200004bb3b6 ; jb 0x200004bb3bd ; mov ecx, ebx ; call 0x200000e7e79
0x00000200004bb45b : jae 0x200004bb4a9 ; jb 0x200004bb4b0 ; mov ecx, ebx ; call 0x200000e7e79
0x00000200004bb617 : jae 0x200004bb667 ; outsb dx, byte ptr [rsi] ; mov rcx, rbp ; call 0x200000e7e79
0x00000200004bb6e2 : jae 0x200004bb72f ; outsb dx, byte ptr [rsi] ; call 0x200000e7e76
0x00000200004bb752 : jae 0x200004bb7a2 ; outsb dx, byte ptr [rsi] ; mov rcx, r14 ; call 0x200000e7f69
0x00000200004bb778 : jae 0x200004bb7c8 ; outsb dx, byte ptr [rsi] ; mov rcx, rdi ; call 0x200000e7e79
0x00000200004bcf8d : jae 0x200004bcfb6 ; mov rsp, r11 ; pop r15 ; ret
0x00000200004c82c4 : jae 0x200004c82f7 ; setne al ; mov rsp, r11 ; pop rdi ; ret
0x00000200004c8868 : jae 0x200004c8899 ; mov rsp, r11 ; pop r15 ; ret
0x00000200004cbbee : jae 0x200004cbc49 ; jns 0x200004cbc43 ; mov ecx, esi ; call 0x200000e7e78
0x00000200004e20fb : jae 0x200004e2157 ; jns 0x200004e20f0 ; insd dword ptr [rdi], dx ; pop rbp ; sar bh, 0x8b ; ret
0x00000200004e637b : jae 0x200004e63ab ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e64f3 : jae 0x200004e651b ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ea1aa : jae 0x200004ea1d2 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004eff3a : jae 0x200004eff6a ; mov rsp, r11 ; pop rdi ; ret
0x00000200004f16aa : jae 0x200004f16d2 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004fa019 : jae 0x200004fa054 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004fa12c : jae 0x200004fa167 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004fa462 : jae 0x200004fa48a ; mov rsp, r11 ; pop rdi ; ret
0x00000200004fa84b : jae 0x200004fa873 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004fee7d : jae 0x200004feec0 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000501f54 : jae 0x20000501f84 ; mov rsp, r11 ; pop rdi ; ret
0x000002000050602d : jae 0x20000506040 ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005064a3 : jae 0x200005064c3 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000508d31 : jae 0x20000508d74 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000509fb4 : jae 0x20000509fe4 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000515c29 : jae 0x20000515c59 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005160d7 : jae 0x200005160ff ; mov rsp, r11 ; pop rdi ; ret
0x00000200005192cf : jae 0x200005192ff ; mov rsp, r11 ; pop rbp ; ret
0x0000020000519b31 : jae 0x20000519b51 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051aaf8 : jae 0x2000051ab20 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051c0ad : jae 0x2000051c0d5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051ce32 : jae 0x2000051ce6d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000051dac3 : jae 0x2000051dafe ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000051dede : jae 0x2000051df06 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051e304 : jae 0x2000051e32c ; mov rsp, r11 ; pop rdi ; ret
0x000002000051f2f6 : jae 0x2000051f329 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000052023e : jae 0x20000520271 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000525ae5 : jae 0x20000525b15 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000528cdb : jae 0x20000528d03 ; mov rsp, r11 ; pop rdi ; ret
0x000002000052aa63 : jae 0x2000052aa96 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000052d283 : jae 0x2000052d2ab ; mov rsp, r11 ; pop rbp ; ret
0x000002000052f2bc : jae 0x2000052f2f7 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000052f4a8 : jae 0x2000052f4d0 ; mov rsp, r11 ; pop rdi ; ret
0x000002000052f825 : jae 0x2000052f860 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005300ef : jae 0x2000053010f ; mov rsp, r11 ; pop rdi ; ret
0x000002000053467a : jae 0x200005346aa ; mov rsp, r11 ; pop rdi ; ret
0x0000020000535057 : jae 0x2000053507f ; mov rsp, r11 ; pop rdi ; ret
0x000002000053565e : jae 0x20000535640 ; or byte ptr [rsi + 0x48], ah ; movd eax, mm0 ; call rax
0x0000020000535fb0 : jae 0x20000535fd0 ; mov rsp, r11 ; pop rdi ; ret
0x000002000053630b : jae 0x20000536333 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005365bd : jae 0x200005365e5 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000536f1c : jae 0x20000536f44 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000538c98 : jae 0x20000538cc0 ; mov rsp, r11 ; pop rbp ; ret
0x000002000053afb5 : jae 0x2000053afe5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000053b88c : jae 0x2000053b8c7 ; mov rsp, r11 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000053ba7e : jae 0x2000053baae ; mov rsp, r11 ; pop rdi ; ret
0x000002000053bb3d : jae 0x2000053bb6d ; mov rsp, r11 ; pop rdi ; ret
0x000002000053dac1 : jae 0x2000053daf1 ; mov rsp, r11 ; pop rbp ; ret
0x000002000053f7ef : jae 0x2000053f80f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000543ce7 : jae 0x20000543d17 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000547405 : jae 0x20000547448 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000547999 : jae 0x200005479b9 ; mov rsp, r11 ; pop rdi ; ret
0x000002000054c3dc : jae 0x2000054c41f ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000054e46a : jae 0x2000054e49a ; mov rsp, r11 ; pop rdi ; ret
0x000002000054ec07 : jae 0x2000054ec2f ; mov rsp, r11 ; pop rdi ; ret
0x00000200005501f3 : jae 0x20000550223 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000551172 : jae 0x2000055119a ; mov rsp, r11 ; pop rdi ; ret
0x000002000055319e : jae 0x200005531ce ; mov rsp, r11 ; pop rdi ; ret
0x000002000055a534 : jae 0x2000055a56f ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000560bb3 : jae 0x20000560be3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000561c23 : jae 0x20000561c56 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005641bc : jae 0x200005641dc ; mov rsp, r11 ; pop rbp ; ret
0x0000020000564715 : jae 0x20000564745 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005653f9 : jae 0x2000056540c ; add byte ptr [rax + 1], bh ; ret
0x00000200005655d7 : jae 0x200005655ff ; mov rsp, r11 ; pop rdi ; ret
0x00000200005658e4 : jae 0x2000056590c ; mov rsp, r11 ; pop rdi ; ret
0x0000020000565bd5 : jae 0x20000565bf5 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000566b27 : jae 0x20000566b4f ; mov rsp, r11 ; pop rdi ; ret
0x00000200005681bd : jae 0x200005681f0 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000569416 : jae 0x20000569446 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000585cb8 : jae 0x20000585c8e ; dec dword ptr [rbx - 0x74bbafab] ; ret
0x0000020000585cb7 : jae 0x20000585c8f ; dec dword ptr [rbx - 0x74bbafab] ; ret
0x0000020000594fa4 : jae 0x20000594f58 ; call qword ptr [rax - 0x18006f17]
0x00000200005ac4c1 : jae 0x200005ac4bf ; ret 0x44ff
0x0000020000456843 : jae 0x200005b06a0 ; mov al, 1 ; ret
0x00000200005df441 : jae 0x200005df40d ; ret 0xebff
0x00000200005e9524 : jae 0x200005e951c ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200005e9524 : jae 0x200005e9520 ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x0000020000560ddc : jae 0x200005fabb5 ; or eax, 0xffffffff ; ret
0x00000200005fc708 : jae 0x200005fc713 ; or eax, 0xffffffff ; ret
0x00000200005fecb7 : jae 0x200005fecd7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005fef93 : jae 0x200005fefc4 ; mov rsp, r11 ; pop r15 ; ret
0x0000020000600ab9 : jae 0x20000600b38 ; adc al, 0 ; xor eax, eax ; ret
0x0000020000604885 : jae 0x2000060488e ; mov al, 1 ; ret
0x0000020000605316 : jae 0x2000060533e ; mov rsp, r11 ; pop rdi ; ret
0x0000020000607e9b : jae 0x20000607ecb ; mov rsp, r11 ; pop rdi ; ret
0x0000020000609db8 : jae 0x20000609deb ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000060b285 : jae 0x2000060b298 ; jrcxz 0x2000060b291 ; add rsp, 0x40 ; pop rbp ; ret
0x000002000060e771 : jae 0x2000060e7a1 ; mov rsp, r11 ; pop rdi ; ret
0x000002000060edd1 : jae 0x2000060ee01 ; mov rsp, r11 ; pop rdi ; ret
0x000002000060fd1d : jae 0x2000060fd4d ; mov rsp, r11 ; pop rdi ; ret
0x0000020000611762 : jae 0x20000611792 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006171c7 : jae 0x20000617202 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006180f6 : jae 0x20000618129 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x0000020000618304 : jae 0x20000618334 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000618589 : jae 0x200006185d7 ; ret
0x00000200006187b4 : jae 0x200006187dc ; mov rsp, r11 ; pop rbp ; ret
0x0000020000619089 : jae 0x200006190cc ; ret
0x000002000061ef3b : jae 0x2000061ef6b ; mov rsp, r11 ; pop rdi ; ret
0x00000200006201fc : jae 0x20000620224 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006205fb : jae 0x2000062063e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000620ab4 : jae 0x20000620adc ; mov rsp, r11 ; pop rdi ; ret
0x0000020000622da1 : jae 0x20000622dd2 ; mov rsp, r11 ; pop r15 ; ret
0x00000200006242a5 : jae 0x200006242c5 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000624389 : jae 0x20000624319 ; ret 0x48ff
0x00000200006286f6 : jae 0x20000628705 ; mov eax, 0xc000000d ; ret
0x000002000062a6c5 : jae 0x2000062a6ed ; mov rsp, r11 ; pop rdi ; ret
0x000002000062b627 : jae 0x2000062b64f ; mov rsp, r11 ; pop rdi ; ret
0x000002000062cdd5 : jae 0x2000062cdfd ; mov rsp, r11 ; pop rdi ; ret
0x000002000062d5a0 : jae 0x2000062d5db ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000631d19 : jae 0x20000631d41 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000634d19 : jae 0x20000634d5c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000639410 : jae 0x2000063944b ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000063d106 : jae 0x2000063d126 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000645162 : jae 0x200006451a5 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000645354 : jae 0x20000645374 ; mov rsp, r11 ; pop rdi ; ret
0x000002000064ae9f : jae 0x2000064aec8 ; mov rsp, r11 ; pop r14 ; ret
0x000002000064c711 : jae 0x2000064c744 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000064ca48 : jae 0x2000064ca78 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064e089 : jae 0x2000064e0b9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000065c6ab : jae 0x2000065c6db ; mov rsp, r11 ; pop rbp ; ret
0x000002000065d071 : jae 0x2000065d0b4 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000065d4f0 : jae 0x2000065d520 ; mov rsp, r11 ; pop rdi ; ret
0x000002000065d9bd : jae 0x2000065d9e5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000065fb08 : jae 0x2000065fb38 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000663a91 : jae 0x20000663ac1 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000666272 : jae 0x200006662a2 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000666eb1 : jae 0x20000666ebc ; or eax, 0xffffffff ; ret
0x000002000066919b : jae 0x200006691aa ; mov eax, 0xc0000095 ; ret
0x00000200006691a7 : jae 0x200006691b6 ; mov eax, 0xc0000004 ; ret
0x0000020000669257 : jae 0x20000669266 ; mov eax, 0xc0000095 ; ret
0x0000020000669263 : jae 0x20000669272 ; mov eax, 0xc0000004 ; ret
0x000002000066cd8d : jae 0x2000066cdb5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000066ce8c : jae 0x2000066cebc ; mov rsp, r11 ; pop rdi ; ret
0x000002000066f22b : jae 0x2000066f23a ; mov eax, 1 ; ret
0x000002000066f565 : jae 0x2000066f58d ; mov rsp, r11 ; pop rdi ; ret
0x000002000067436c : jae 0x2000067439c ; mov rsp, r11 ; pop rbp ; ret
0x000002000067594e : jae 0x20000675976 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000677cf7 : jae 0x20000677d27 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000679afe : jae 0x20000679b39 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000067da9c : jae 0x2000067dacc ; mov rsp, r11 ; pop rbp ; ret
0x000002000067dbe1 : jae 0x2000067dc11 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067e427 : jae 0x2000067e457 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067fb9d : jae 0x2000067fbcd ; mov rsp, r11 ; pop rbp ; ret
0x0000020000685346 : jae 0x200006854fe ; jmp 0x20000685318
0x00000200006859e5 : jae 0x20000685a0d ; btr dword ptr [rcx], ebx ; jmp 0x20000685a12
0x00000200006882d0 : jae 0x200006882db ; movzx eax, cx ; ret
0x00000200006882cf : jae 0x200006882dc ; movzx eax, cx ; ret
0x000002000068c12c : jae 0x2000068c15c ; mov rsp, r11 ; pop rbp ; ret
0x000002000068e1a6 : jae 0x2000068e16f ; ret
0x000002000068e4d6 : jae 0x2000068e506 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000690b08 : jae 0x20000690b43 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000695917 : jae 0x20000695937 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000697c17 : jae 0x20000697c4a ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000069eee8 : jae 0x2000069ef23 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006a029c : jae 0x200006a02ad ; add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x200006a029c
0x00000200006a2ed3 : jae 0x200006a2f03 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006a5034 : jae 0x200006a5000 ; inc dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200006a6810 : jae 0x200006a6825 ; mov eax, dword ptr [rdi + rdx*4] ; mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x200006a6812
0x00000200006a7528 : jae 0x200006a7550 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006a7675 : jae 0x200006a76b0 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006a8f4a : jae 0x200006a8f85 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006ae520 : jae 0x200006ae550 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006afde0 : jae 0x200006afdef ; mov eax, 0xc0000023 ; ret
0x00000200006b00f2 : jae 0x200006b0125 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006b21e0 : jae 0x200006b2213 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006b286e : jae 0x200006b287f ; sub rax, rcx ; sar rax, 1 ; ret
0x00000200006b6af5 : jae 0x200006b6b15 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006bc1d1 : jae 0x200006bc1f9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006bce48 : jae 0x200006bce8b ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006bd28e : jae 0x200006bd2d1 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200006c73bf : jae 0x200006c73ef ; mov rsp, r11 ; pop rdi ; ret
0x00000200006c83cd : jae 0x200006c8408 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200006ca554 : jae 0x200006ca566 ; mov rax, qword ptr [r9 + 0x18] ; add rax, rdx ; ret
0x00000200006ca554 : jae 0x200006ca567 ; mov rax, qword ptr [r9 + 0x18] ; add rax, rdx ; ret
0x00000200006ca500 : jae 0x200006ca567 ; mov rax, qword ptr [rdx + 0x18] ; add rax, rcx ; ret
0x00000200006d41e0 : jae 0x200006d4213 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006d705b : jae 0x200006d709e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006d738b : jae 0x200006d73be ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006dc1cd : jae 0x200006dc1fd ; mov rsp, r11 ; pop rbp ; ret
0x00000200006dc29f : jae 0x200006dc2c7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006dd1a8 : jae 0x200006dd1d0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006dd23f : jae 0x200006dd267 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006df4b6 : jae 0x200006df4de ; mov rsp, r11 ; pop rdi ; ret
0x00000200006e0ecf : jae 0x200006e0eff ; mov rsp, r11 ; pop rbp ; ret
0x00000200006e4d9c : jae 0x200006e4da7 ; or eax, 0xffffffff ; ret
0x00000200006e64db : jae 0x200006e651e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006e757e : jae 0x200006e75a6 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006e7854 : jae 0x200006e7857 ; ret 0xb70f
0x00000200006eab96 : jae 0x200006eabbc ; xchg eax, esi ; push 0x71 ; or cl, byte ptr [rbx] ; mov ch, 0x49 ; ret
0x00000200006f6d65 : jae 0x200006f6da8 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006f7712 : jae 0x200006f7755 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200007039fd : jae 0x200007039ba ; mov cl, 0xff ; add rsp, 0x28 ; ret
0x0000020000704873 : jae 0x20000704882 ; mov eax, 1 ; ret
0x0000020000704d3e : jae 0x20000704d6e ; mov rsp, r11 ; pop rdi ; ret
0x0000020000705d80 : jae 0x20000705d8f ; mov eax, 1 ; ret
0x000002000070e9a2 : jae 0x2000070e9d2 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000710572 : jae 0x200007105a2 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000710642 : jae 0x20000710672 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000712977 : jae 0x200007129a7 ; mov rsp, r11 ; pop rdi ; ret
0x000002000072a770 : jae 0x2000072a760 ; mov esp, 0x70e900ff ; ret
0x0000020000778436 : jae 0x20000778447 ; mov esi, r12d ; mov rax, rdx ; jmp 0x2000077844c
0x000002000079161c : jae 0x20000791657 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000079429d : jae 0x200007942c5 ; mov rsp, r11 ; pop rbp ; ret
0x000002000079570c : jae 0x2000079573c ; mov rsp, r11 ; pop rdi ; ret
0x0000020000795f01 : jae 0x20000795f44 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200007960a3 : jae 0x200007960d3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007995ea : jae 0x2000079960a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000799866 : jae 0x20000799896 ; mov rsp, r11 ; pop rbp ; ret
0x000002000079b2a1 : jae 0x2000079b2e4 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000079dd40 : jae 0x2000079dd68 ; mov rsp, r11 ; pop rdi ; ret
0x000002000079fe20 : jae 0x2000079fe2f ; or qword ptr [rcx + 0x18], 0xffffffffffffffff ; ret
0x00000200007a02de : jae 0x200007a02ed ; mov eax, 1 ; ret
0x00000200007a0326 : jae 0x200007a032f ; xor eax, eax ; ret
0x00000200007a0f54 : jae 0x200007a0f85 ; mov rsp, r11 ; pop r14 ; ret
0x00000200007ac78e : jae 0x200007ac7be ; mov rsp, r11 ; pop rbp ; ret
0x00000200007acff0 : jae 0x200007ad018 ; mov rsp, r11 ; pop rdi ; ret
0x00000200007ad804 : jae 0x200007ad83f ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200007b32e6 : jae 0x200007b32f1 ; or eax, 0xffffffff ; ret
0x00000200007b72db : jae 0x200007b731e ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200007b7a2f : jae 0x200007b7a5f ; mov rsp, r11 ; pop rbp ; ret
0x00000200007b7c76 : jae 0x200007b7c81 ; or eax, 0xffffffff ; ret
0x00000200007b8352 : jae 0x200007b8382 ; mov rsp, r11 ; pop rdi ; ret
0x00000200007b8869 : jae 0x200007b8899 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007b8c7b : jae 0x200007b8ca3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007ba70a : jae 0x200007ba73a ; mov rsp, r11 ; pop rbp ; ret
0x00000200007ba8db : jae 0x200007ba90b ; mov rsp, r11 ; pop rbp ; ret
0x00000200007bcf65 : jae 0x200007bcfa0 ; mov rsp, r11 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200007bd14b : jae 0x200007bd186 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200007cf3d9 : jae 0x200007cf409 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007d080c : jae 0x200007d083c ; mov rsp, r11 ; pop rbp ; ret
0x00000200007d0d7c : jae 0x200007d0dbf ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200007d0f81 : jae 0x200007d0fb1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007d177f : jae 0x200007d178a ; or eax, 0xffffffff ; ret
0x00000200007d26cc : jae 0x200007d26ff ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200007d485b : jae 0x200007d4896 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200007d4a52 : jae 0x200007d4a95 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200007d5896 : jae 0x200007d58d9 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000005809 : jb 0x2000000581d ; test rdx, rdx ; je 0x20000005822 ; mov rax, rdx ; ret
0x0000020000007032 : jb 0x20000007024 ; mov eax, 0x10 ; ret
0x0000020000008383 : jb 0x20000008377 ; ret
0x000002000000c31b : jb 0x2000000c333 ; ret
0x000002000000c315 : jb 0x2000000c334 ; bt ecx, 0x19 ; jb 0x2000000c339 ; ret
0x000002000000f394 : jb 0x2000000f3a2 ; mov al, 1 ; ret
0x0000020000015cd0 : jb 0x20000015cec ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000213c3 : jb 0x200000213d0 ; add rsp, 0x28 ; ret
0x0000020000021681 : jb 0x20000021673 ; mov eax, 1 ; ret
0x0000020000025764 : jb 0x2000002576d ; add byte ptr [rbp + 3], dh ; xor al, al ; ret
0x00000200000265fe : jb 0x200000265e7 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000026638 : jb 0x20000026617 ; ret
0x0000020000028219 : jb 0x2000002822c ; jbe 0x20000028230 ; mov eax, 1 ; ret
0x000002000002b135 : jb 0x2000002b128 ; xor eax, eax ; ret
0x000002000002c881 : jb 0x2000002c890 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002d083 : jb 0x2000002d068 ; xor eax, eax ; ret
0x000002000002f85f : jb 0x2000002f842 ; ret
0x0000020000041705 : jb 0x20000041712 ; add rsp, 0x38 ; ret
0x0000020000043973 : jb 0x20000043963 ; xor eax, eax ; ret
0x000002000004510d : jb 0x20000045120 ; cmp ecx, 0x14 ; ja 0x20000045123 ; xor al, al ; ret
0x0000020000046dda : jb 0x20000046dbb ; ret
0x00000200000482e1 : jb 0x200000482ba ; xor eax, eax ; ret
0x0000020000049228 : jb 0x20000049206 ; or eax, 0xffffffff ; ret
0x0000020000051069 : jb 0x20000051079 ; shr rcx, 0xd ; and eax, ecx ; ret
0x0000020000055c7f : jb 0x20000055c72 ; mov rax, qword ptr [r8] ; lock dec dword ptr [rax + 0xc] ; ret
0x000002000005c4da : jb 0x2000005c561 ; xor ecx, ecx ; mov qword ptr [r9], rax ; mov eax, ecx ; ret
0x000002000007e89b : jb 0x2000007e882 ; ret
0x00000200000874cd : jb 0x200000874e0 ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008dffa : jb 0x2000008dfd1 ; or al, byte ptr [rax] ; add rsp, 0x60 ; pop rbx ; ret
0x000002000008e93d : jb 0x2000008e906 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000091d8e : jb 0x20000091e0e ; add byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x00000200000987f3 : jb 0x200000987f6 ; mov eax, 2 ; ret
0x00000200000b92ba : jb 0x200000b92b6 ; add rsp, 0x28 ; ret
0x00000200000bea4c : jb 0x200000bea55 ; xor eax, eax ; ret
0x00000200000c5df5 : jb 0x200000c5e05 ; mov al, cl ; ret
0x00000200000cf652 : jb 0x200000cf65f ; lea rax, qword ptr [rdx + r8] ; ret
0x00000200000d1bd1 : jb 0x200000d1b9c ; ret
0x00000200000d2b3c : jb 0x200000d2b22 ; ret
0x00000200000d4e39 : jb 0x200000d4e64 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200000dd958 : jb 0x200000dd967 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ddfe2 : jb 0x200000ddfa7 ; jmp 0x200000ddfd4
0x00000200000de038 : jb 0x200000de02f ; or eax, 0xffffffff ; ret
0x00000200000f08a0 : jb 0x200000f08af ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f21ca : jb 0x200000f21d3 ; xor eax, eax ; ret
0x000002000010b591 : jb 0x2000010b5a0 ; cmp r9d, eax ; jb 0x2000010b5c0 ; ret
0x000002000010b596 : jb 0x2000010b5bb ; ret
0x0000020000110f6b : jb 0x20000110f9b ; jbe 0x20000110f7e ; mov eax, 1 ; ret
0x00000200001148fa : jb 0x200001148c9 ; cli ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000118e6b : jb 0x20000118e3b ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000120b2f : jb 0x20000120b25 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001245d9 : jb 0x200001245e4 ; add dh, dh ; ret 0x7502
0x000002000012537c : jb 0x20000125348 ; add rsp, 0x38 ; ret
0x000002000013271c : jb 0x20000132725 ; mov al, 1 ; ret
0x000002000013567c : jb 0x2000013565b ; ret
0x000002000013567b : jb 0x2000013565c ; ret
0x000002000013b2f7 : jb 0x2000013b2e4 ; ret
0x000002000013b3aa : jb 0x2000013b396 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000013b67d : jb 0x2000013b66d ; mov rax, r10 ; ret
0x000002000013bcae : jb 0x2000013bc97 ; mov rax, r10 ; ret
0x000002000013bcae : jb 0x2000013bc98 ; mov rax, r10 ; ret
0x000002000013cf39 : jb 0x2000013cf2d ; ret
0x000002000013d33b : jb 0x2000013d32d ; ret
0x000002000013f683 : jb 0x2000013f515 ; or eax, 0xffffffff ; ret
0x0000020000144d7f : jb 0x20000144d86 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000147ac0 : jb 0x20000147aab ; mov eax, 1 ; ret
0x0000020000147eca : jb 0x20000147eb1 ; add byte ptr [rax], al ; ret
0x0000020000147fca : jb 0x20000147fb0 ; add byte ptr [rax], al ; ret
0x00000200001480ca : jb 0x200001480af ; add byte ptr [rax], al ; ret
0x00000200001481ca : jb 0x200001481ae ; add byte ptr [rax], al ; ret
0x00000200001482ca : jb 0x200001482ad ; add byte ptr [rax], al ; ret
0x00000200001483ca : jb 0x200001483ac ; add byte ptr [rax], al ; ret
0x00000200001484ca : jb 0x200001484ab ; add byte ptr [rax], al ; ret
0x00000200001485ca : jb 0x200001485aa ; add byte ptr [rax], al ; ret
0x00000200001486ca : jb 0x200001486a9 ; add byte ptr [rax], al ; ret
0x00000200001487ca : jb 0x200001487a8 ; add byte ptr [rax], al ; ret
0x00000200001488ca : jb 0x200001488a7 ; add byte ptr [rax], al ; ret
0x00000200001489ca : jb 0x200001489a6 ; add byte ptr [rax], al ; ret
0x0000020000148aca : jb 0x20000148aa5 ; add byte ptr [rax], al ; ret
0x0000020000148bca : jb 0x20000148ba4 ; add byte ptr [rax], al ; ret
0x0000020000148cca : jb 0x20000148ca3 ; add byte ptr [rax], al ; ret
0x0000020000148dca : jb 0x20000148da2 ; add byte ptr [rax], al ; ret
0x0000020000148eca : jb 0x20000148ea1 ; add byte ptr [rax], al ; ret
0x0000020000148fca : jb 0x20000148fa0 ; add byte ptr [rax], al ; ret
0x00000200001490ca : jb 0x2000014909f ; add byte ptr [rax], al ; ret
0x00000200001491ca : jb 0x2000014919e ; add byte ptr [rax], al ; ret
0x00000200001492ca : jb 0x2000014929d ; add byte ptr [rax], al ; ret
0x00000200001493ca : jb 0x2000014939c ; add byte ptr [rax], al ; ret
0x00000200001494ca : jb 0x2000014949b ; add byte ptr [rax], al ; ret
0x00000200001495ca : jb 0x2000014959a ; add byte ptr [rax], al ; ret
0x00000200001496ca : jb 0x20000149699 ; add byte ptr [rax], al ; ret
0x00000200001497ca : jb 0x20000149798 ; add byte ptr [rax], al ; ret
0x00000200001498ca : jb 0x20000149897 ; add byte ptr [rax], al ; ret
0x00000200001499ca : jb 0x20000149996 ; add byte ptr [rax], al ; ret
0x0000020000149aca : jb 0x20000149a95 ; add byte ptr [rax], al ; ret
0x0000020000149bca : jb 0x20000149b94 ; add byte ptr [rax], al ; ret
0x0000020000149cca : jb 0x20000149c93 ; add byte ptr [rax], al ; ret
0x0000020000149dca : jb 0x20000149d92 ; add byte ptr [rax], al ; ret
0x0000020000149eca : jb 0x20000149e91 ; add byte ptr [rax], al ; ret
0x0000020000149fca : jb 0x20000149f90 ; add byte ptr [rax], al ; ret
0x000002000014a0ca : jb 0x2000014a08f ; add byte ptr [rax], al ; ret
0x000002000014a1ca : jb 0x2000014a18e ; add byte ptr [rax], al ; ret
0x000002000014a2ca : jb 0x2000014a28d ; add byte ptr [rax], al ; ret
0x000002000014a3ca : jb 0x2000014a38c ; add byte ptr [rax], al ; ret
0x000002000014a4ca : jb 0x2000014a48b ; add byte ptr [rax], al ; ret
0x000002000014a5ca : jb 0x2000014a58a ; add byte ptr [rax], al ; ret
0x000002000014a6ca : jb 0x2000014a689 ; add byte ptr [rax], al ; ret
0x000002000014a7ca : jb 0x2000014a788 ; add byte ptr [rax], al ; ret
0x000002000014a8ca : jb 0x2000014a887 ; add byte ptr [rax], al ; ret
0x000002000014a9ca : jb 0x2000014a986 ; add byte ptr [rax], al ; ret
0x000002000014aaca : jb 0x2000014aa85 ; add byte ptr [rax], al ; ret
0x000002000014abca : jb 0x2000014ab84 ; add byte ptr [rax], al ; ret
0x000002000014acca : jb 0x2000014ac83 ; add byte ptr [rax], al ; ret
0x000002000014adca : jb 0x2000014ad82 ; add byte ptr [rax], al ; ret
0x000002000014aeca : jb 0x2000014ae81 ; add byte ptr [rax], al ; ret
0x000002000014afca : jb 0x2000014af80 ; add byte ptr [rax], al ; ret
0x000002000014b0ca : jb 0x2000014b07f ; add byte ptr [rax], al ; ret
0x000002000014b1ca : jb 0x2000014b17e ; add byte ptr [rax], al ; ret
0x000002000014b2ca : jb 0x2000014b27d ; add byte ptr [rax], al ; ret
0x000002000014b3ca : jb 0x2000014b37c ; add byte ptr [rax], al ; ret
0x000002000014b4ca : jb 0x2000014b47b ; add byte ptr [rax], al ; ret
0x000002000014b5ca : jb 0x2000014b57a ; add byte ptr [rax], al ; ret
0x000002000014b6ca : jb 0x2000014b679 ; add byte ptr [rax], al ; ret
0x000002000014e929 : jb 0x2000014e8e2 ; ret
0x000002000003c3bf : jb 0x2000016d517 ; mov eax, r8d ; ret
0x0000020000173deb : jb 0x20000173deb ; dec dword ptr [rcx + 3] ; ret 0xc148
0x000002000017d882 : jb 0x2000017d827 ; in al, dx ; dec dword ptr [rax - 0x75] ; ret 0x3b48
0x0000020000199f7e : jb 0x20000199f6d ; mov rdi, qword ptr [rsp + 0x60] ; jmp 0x200000b61c5
0x00000200001a3adb : jb 0x200001a3ad9 ; dec dword ptr [rax - 0x73] ; add dword ptr [rcx + 0x3b], ecx ; ret
0x00000200001a5ebf : jb 0x200001a5ec2 ; ret 0x8944
0x00000200001a9fb5 : jb 0x200001a9f9d ; mov esi, 0x33487e35 ; ret 0xf48
0x00000200001ad90d : jb 0x200001ad8ef ; ret
0x00000200001bcad0 : jb 0x200001bcac7 ; or eax, 0xffffffff ; ret
0x00000200001bcaff : jb 0x200001bcaf5 ; xor eax, eax ; ret
0x00000200001bcb27 : jb 0x200001bcb1d ; xor eax, eax ; ret
0x00000200001ca7e2 : jb 0x200001ca7f3 ; add byte ptr [rax], al ; mov eax, 0xc0000022 ; ret
0x00000200001d24e2 : jb 0x200001d24d7 ; mov al, 1 ; ret
0x00000200001d6089 : jb 0x200001d6083 ; ret
0x00000200001e1722 : jb 0x200001e16ea ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001e4b7d : jb 0x200001e4b52 ; xor eax, eax ; ret
0x00000200001e53bb : jb 0x200001e5397 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200001e9a2f : jb 0x200001e9a29 ; add rsp, 0x38 ; ret
0x00000200001f7288 : jb 0x200001f727f ; xor eax, eax ; ret
0x00000200001f75d7 : jb 0x200001f75ea ; mov edx, 1 ; mov eax, edx ; jmp 0x200001f75ef
0x00000200001f84ea : jb 0x200001f850c ; dec dword ptr [rcx + 0x3b] ; ret
0x00000200001fd213 : jb 0x200001fd200 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200002017d8 : jb 0x200002017fb ; mov rcx, rsi ; lea edx, dword ptr [rbx + 3] ; call r9
0x0000020000201abf : jb 0x20000201aab ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000201fd5 : jb 0x20000201ff6 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000020e769 : jb 0x2000020e772 ; xor eax, eax ; ret
0x000002000020e805 : jb 0x2000020e80e ; xor al, al ; ret
0x000002000020ff85 : jb 0x2000020ff58 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000211990 : jb 0x20000211999 ; xor al, al ; ret
0x000002000021235f : jb 0x20000212348 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000021311c : jb 0x200002130fd ; ret
0x000002000021323c : jb 0x20000213236 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000213aa2 : jb 0x20000213a91 ; mov rax, r8 ; ret
0x0000020000213ac0 : jb 0x20000213ab5 ; mov al, 1 ; ret
0x0000020000213adc : jb 0x20000213ad5 ; mov al, 1 ; ret
0x0000020000213b1f : jb 0x20000213af7 ; mov al, 1 ; ret
0x0000020000213e72 : jb 0x20000213e1f ; jmp 0x20000213f08
0x0000020000216f81 : jb 0x20000216fb9 ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x0000020000216f97 : jb 0x20000216fcf ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x000002000021c337 : jb 0x2000021c330 ; xor eax, eax ; ret
0x000002000021c779 : jb 0x2000021c779 ; jmp 0x2000021c78f
0x000002000021f55b : jb 0x2000021f547 ; xor eax, eax ; ret
0x00000200002303da : jb 0x200002303af ; xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200002325c6 : jb 0x200002325bf ; adc esp, dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x8349
0x0000020000235783 : jb 0x2000023578c ; xor al, al ; ret
0x000002000023f42a : jb 0x2000023f431 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000024043e : jb 0x20000240445 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000243684 : jb 0x2000024368b ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000024547e : jb 0x20000245485 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200002462f2 : jb 0x200002462f9 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000024a67e : jb 0x2000024a685 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200003cf1f2 : jb 0x200003cf1c5 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003e78ba : jb 0x200003e78c1 ; ret 0x85ff
0x00000200003eaeaa : jb 0x200003eaeb9 ; jmp 0x200003eaec4
0x00000200003fb24c : jb 0x200003fb25a ; jmp 0x200003fb272
0x00000200004048bb : jb 0x2000040489b ; mov al, dl ; ret
0x00000200004048bb : jb 0x2000040489c ; mov al, dl ; ret
0x000002000041df80 : jb 0x2000041df77 ; and eax, 0x1f ; ret
0x000002000041f1f5 : jb 0x2000041f206 ; and dword ptr [rcx], 0xfffffff ; ret
0x0000020000422fc1 : jb 0x20000422fb2 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000425679 : jb 0x2000042564d ; xor eax, eax ; ret
0x0000020000427b1d : jb 0x20000427b01 ; xor eax, eax ; ret
0x000002000042f3f7 : jb 0x2000042f40a ; add rsp, 0x28 ; ret
0x000002000043190d : jb 0x200004318f8 ; mov dword ptr [rcx + 0x7c], r8d ; ret
0x0000020000434557 : jb 0x2000043453d ; jmp 0x2000043444f
0x00000200004345a0 : jb 0x200004345b4 ; ret
0x00000200004345e8 : jb 0x20000434609 ; bt ecx, 0x19 ; jb 0x2000043460f ; ret
0x00000200004345ee : jb 0x20000434609 ; ret
0x000002000043aafc : jb 0x2000043aae1 ; mov eax, edx ; ret
0x000002000043aafc : jb 0x2000043aae2 ; mov eax, edx ; ret
0x000002000043b6ed : jb 0x2000043b6e0 ; mov byte ptr [r8], r10b ; ret
0x000002000043bbf0 : jb 0x2000043bc0c ; bt ecx, 0x19 ; jb 0x2000043bc12 ; ret
0x000002000043bbf6 : jb 0x2000043bc0c ; ret
0x0000020000447f90 : jb 0x20000447f78 ; ret
0x000002000046cc2a : jb 0x2000046cc01 ; mov rax, r8 ; ret
0x000002000046cc29 : jb 0x2000046cc02 ; mov rax, r8 ; ret
0x000002000047f76d : jb 0x2000047f768 ; jmp 0x2000047f50a
0x000002000048be96 : jb 0x2000048be31 ; ret
0x00000200004990e1 : jb 0x200004990d6 ; mov rax, r8 ; shr rax, 1 ; ret
0x00000200004a39aa : jb 0x200004a3976 ; ret
0x00000200004a3bd0 : jb 0x200004a3c23 ; add esp, 0x48 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004aa1f9 : jb 0x200004aa1fe ; ret
0x00000200004ae6aa : jb 0x200004ae71e ; ret
0x00000200004b213d : jb 0x200004b2133 ; mov eax, 1 ; ret
0x00000200004bb13a : jb 0x200004bb128 ; xor ch, cl ; ret 0xe9ff
0x00000200004bb139 : jb 0x200004bb129 ; xor ch, cl ; ret 0xe9ff
0x00000200004bb36a : jb 0x200004bb3bb ; mov ecx, ebx ; call 0x200000e7e77
0x00000200004bb369 : jb 0x200004bb3bc ; mov ecx, ebx ; call 0x200000e7e78
0x00000200004bb45d : jb 0x200004bb4ae ; mov ecx, ebx ; call 0x200000e7e77
0x00000200004bb45c : jb 0x200004bb4af ; mov ecx, ebx ; call 0x200000e7e78
0x00000200004d0769 : jb 0x200004d07c9 ; inc edx ; jmp 0x200004d0715
0x00000200004e1dfa : jb 0x200004e1e61 ; sar bh, 0x8b ; ret
0x00000200004e7cb5 : jb 0x200004e7cab ; xor eax, eax ; ret
0x00000200005ebb48 : jb 0x20000507055 ; mov al, 2 ; ret
0x0000020000510620 : jb 0x20000510616 ; xor al, al ; ret
0x00000200005128e3 : jb 0x200005128fb ; ret
0x00000200005128dd : jb 0x200005128fc ; bt ecx, 0x19 ; jb 0x20000512901 ; ret
0x0000020000519c8a : jb 0x20000519cc8 ; sar edi, cl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051c01a : jb 0x2000051c059 ; ret 0x48ff
0x000002000051d8fa : jb 0x2000051d8a8 ; ret 0x8bff
0x000002000052250a : jb 0x20000522561 ; ret
0x000002000053f341 : jb 0x2000053f33d ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000556317 : jb 0x20000556307 ; mov eax, 0xc0000001 ; ret
0x0000020000585dd3 : jb 0x20000585da9 ; dec dword ptr [rbx - 0x74bbafab] ; ret
0x0000020000441f4b : jb 0x200005a9325 ; call 0x2000006d289
0x0000020000451926 : jb 0x200005ae3cc ; xor al, al ; ret
0x000002000046c13f : jb 0x200005c28f1 ; call 0x20000090371
0x00000200005f1b37 : jb 0x200005f1b23 ; ret
0x000002000060e66d : jb 0x2000060e63f ; movzx eax, r8w ; ret
0x000002000060f88e : jb 0x2000060f853 ; jmp 0x2000060f896
0x0000020000617d9e : jb 0x20000617d8c ; pop rsp ; push rdx ; ret
0x0000020000619122 : jb 0x20000619110 ; fdivr dword ptr [rsi] ; ret
0x0000020000619b8a : jb 0x20000619bc2 ; ret
0x000002000061bf1d : jb 0x2000061bf09 ; ret
0x0000020000620bbe : jb 0x20000620bae ; xor al, al ; add rsp, 0x28 ; ret
0x000002000062117e : jb 0x200006211cf ; mov ecx, edi ; call 0x2000024d007
0x0000020000622f56 : jb 0x20000622f23 ; xor al, al ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x0000020000627a47 : jb 0x20000627a56 ; mov eax, 0xc0000189 ; ret
0x0000020000628f9e : jb 0x20000628f8c ; pushfq ; ret 0x48ff
0x000002000062b38a : jb 0x2000062b3aa ; ret 0x48ff
0x000002000062c494 : jb 0x2000062c49c ; add al, al ; ret
0x000002000064709a : jb 0x200006470d6 ; ret
0x0000020000653c19 : jb 0x20000653bf8 ; xor eax, eax ; ret
0x000002000065e5fe : jb 0x2000065e5e2 ; mov rax, r9 ; add rsp, 0x28 ; ret
0x0000020000664855 : jb 0x2000066485e ; xor eax, eax ; ret
0x000002000066b030 : jb 0x2000066b027 ; xor al, al ; ret
0x0000020000696e4d : jb 0x20000696e20 ; mov al, 1 ; ret
0x000002000069d80d : jb 0x2000069d7f7 ; xor ecx, ecx ; mov rax, rcx ; ret
0x00000200006a50ef : jb 0x200006a50bb ; inc dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200006a8270 : jb 0x200006a81ff ; ret
0x00000200006ab07e : jb 0x200006ab08d ; mov eax, 0xc0000023 ; ret
0x00000200006ab07d : jb 0x200006ab08e ; mov eax, 0xc0000023 ; ret
0x00000200006aeff6 : jb 0x200006af002 ; add al, al ; add rsp, 0x38 ; ret
0x00000200006b1bb0 : jb 0x200006b1b42 ; ror byte ptr [rax - 0x7d], 1 ; ret 0x8902
0x00000200006b1e20 : jb 0x200006b1de5 ; jmp 0x200006b1e28
0x00000200006b81c6 : jb 0x200006b81da ; ret
0x00000200006bbbe8 : jb 0x200006bbbdb ; ret
0x00000200006bbe7a : jb 0x200006bbe66 ; add rsp, 0x28 ; ret
0x00000200006bbe8a : jb 0x200006bbe99 ; mov eax, 0xc000000d ; ret
0x00000200006c67a3 : jb 0x200006c6775 ; xor eax, eax ; ret
0x00000200006ce76f : jb 0x200006ce762 ; or eax, 0xffffffff ; ret
0x00000200006cf1c1 : jb 0x200006cf1b3 ; ret
0x00000200006d134a : jb 0x200006d1355 ; mov dword ptr [r8], edx ; ret
0x00000200006f6f8f : jb 0x200006f6f80 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000702887 : jb 0x20000702896 ; shr eax, 0xf ; and al, 1 ; ret
0x00000200007028b3 : jb 0x200007028bc ; mov al, 1 ; ret
0x0000020000706313 : jb 0x2000070631c ; xor eax, eax ; ret
0x000002000070a2c7 : jb 0x2000070a2bc ; xor eax, eax ; ret
0x000002000070fbd1 : jb 0x2000070fbcb ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000715730 : jb 0x20000715743 ; or dword ptr [rip + 0x178db], 0x10 ; ret
0x000002000071941a : jb 0x20000719423 ; xor eax, eax ; ret
0x0000020000779351 : jb 0x20000779358 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000780104 : jb 0x2000078010b ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000781009 : jb 0x20000781010 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000781db8 : jb 0x20000781dbf ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000782c64 : jb 0x20000782c6b ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000783c14 : jb 0x20000783c1b ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000784be6 : jb 0x20000784bed ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200007a30b3 : jb 0x200007a309e ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200007a78a4 : jb 0x200007a7898 ; ret
0x00000200007ab53e : jb 0x200007ab52d ; add rsp, 0x30 ; pop rbx ; ret
0x00000200007b0d0d : jb 0x200007b0d04 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007b1f7d : jb 0x200007b1f2e ; ret
0x00000200007b4ffb : jb 0x200007b4fe0 ; ret
0x00000200007b4ffa : jb 0x200007b4fe1 ; ret
0x00000200007c5417 : jb 0x200007c53b4 ; std ; dec dword ptr [rcx - 0x75] ; ret
0x00000200007c9e1a : jb 0x200007c9dd8 ; dec dword ptr [rcx + 0x33] ; ret 0xf48
0x00000200007cccba : jb 0x200007ccc77 ; dec dword ptr [rax - 0x75] ; fisttp word ptr [rax - 1] ; ret
0x00000200007cccb9 : jb 0x200007ccc78 ; dec dword ptr [rax - 0x75] ; fisttp word ptr [rax - 1] ; ret
0x00000200007ccdba : jb 0x200007ccd73 ; push rsi ; ret
0x00000200007d24f0 : jb 0x200007d24d6 ; add rsp, 0x28 ; ret
0x00000200007d5457 : jb 0x200007d5438 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000149a8 : jbe 0x2000001494b ; mov eax, 1 ; ret
0x000002000002821b : jbe 0x2000002822e ; mov eax, 1 ; ret
0x000002000002be43 : jbe 0x2000002be50 ; add rsp, 0x38 ; ret
0x0000020000032b5b : jbe 0x20000032b6a ; mov eax, 1 ; ret
0x000002000003ad3b : jbe 0x2000003ad44 ; xor al, al ; ret
0x0000020000050fa7 : jbe 0x20000050f97 ; xor eax, eax ; ret
0x00000200000733fc : jbe 0x20000073407 ; xor eax, eax ; jmp 0x200000733ca
0x0000020000087bab : jbe 0x20000087ba7 ; xor eax, eax ; ret
0x00000200000a0a4e : jbe 0x200000a0a57 ; xor eax, eax ; ret
0x00000200000c5aa8 : jbe 0x200000c5aac ; or dword ptr [rax], eax ; mov qword ptr [r8], rcx ; ret
0x00000200000cf6b7 : jbe 0x200000cf6c4 ; add rsp, 0x38 ; ret
0x00000200000e96ba : jbe 0x200000e96bd ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x0000020000110f6d : jbe 0x20000110f7c ; mov eax, 1 ; ret
0x0000020000176215 : jbe 0x20000112422 ; jmp 0x20000112469
0x000002000012d922 : jbe 0x2000012d932 ; lea eax, dword ptr [rcx - 0x13] ; mov dword ptr [r8], eax ; ret
0x0000020000130d9f : jbe 0x20000130d96 ; add eax, -1 ; jne 0x20000130d9e ; ret
0x0000020000137b74 : jbe 0x20000137b69 ; mov dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x000002000013c46b : jbe 0x2000013c483 ; mov rdx, rsi ; mov rcx, rdi ; call r14
0x000002000013c4c6 : jbe 0x2000013c4e9 ; mov rdx, rsi ; mov rcx, rdi ; call r14
0x000002000013c4e6 : jbe 0x2000013c4fe ; mov rdx, rsi ; mov rcx, rdi ; call r14
0x000002000013fef6 : jbe 0x2000013ff01 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000011fe4 : jbe 0x200001639c8 ; ret
0x00000200001bccd0 : jbe 0x200001bccdf ; mov eax, 1 ; ret
0x00000200001c31ed : jbe 0x200001c31fc ; mov eax, 0xc000000d ; ret
0x00000200001e7c21 : jbe 0x200001e7c7b ; mov r8, r10 ; jmp 0x200001e7c7b
0x00000200001fe670 : jbe 0x200001fe67c ; mov qword ptr [rcx + 0x10], rdx ; ret
0x0000020000207bb0 : jbe 0x20000207bbb ; or eax, 0xffffffff ; ret
0x000002000021dd31 : jbe 0x2000021dd40 ; and dword ptr [r8 + 0x28], 0 ; ret
0x0000020000220432 : jbe 0x2000022043e ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000220c5b : jbe 0x20000220c6a ; mov eax, 1 ; ret
0x0000020000220c5a : jbe 0x20000220c6b ; mov eax, 1 ; ret
0x0000020000220c59 : jbe 0x20000220c6c ; mov eax, 1 ; ret
0x0000020000227326 : jbe 0x200002272d3 ; dec dword ptr [rax + 0x3b] ; ret
0x000002000022a5af : jbe 0x2000022a59e ; add dword ptr [r10 + 0x14], edx ; xor eax, eax ; ret
0x0000020000231730 : jbe 0x200002316b5 ; xor al, al ; ret
0x0000020000233aa1 : jbe 0x20000233ab0 ; mov eax, 1 ; ret
0x00000200003ccdde : jbe 0x200003ccdd2 ; ret
0x00000200003cff01 : jbe 0x200003cfef4 ; add rsp, 0x28 ; ret
0x00000200003d9a09 : jbe 0x200003d9a06 ; dec dword ptr [rcx + 0x33] ; ret 0xf48
0x00000200003f4404 : jbe 0x200003f4393 ; ret
0x000002000040a581 : jbe 0x2000040a57c ; dec dword ptr [rcx + 0x3b542444] ; ret
0x000002000040f77c : jbe 0x2000040f77f ; ret 0x1b9
0x000002000040f77b : jbe 0x2000040f780 ; ret 0x1b9
0x00000200004290dc : jbe 0x200004290df ; ret 0x5489
0x000002000045fd2a : jbe 0x2000045fcf9 ; dec dword ptr [rbx + 0x79c085d8] ; ret 0x38e9
0x000002000045fd29 : jbe 0x2000045fcfa ; dec dword ptr [rbx + 0x79c085d8] ; ret 0x38e9
0x000002000046227f : jbe 0x200004622c9 ; mov ecx, edi ; call 0x2000008e15b
0x000002000049b9d5 : jbe 0x2000049b9da ; ret
0x000002000049e4cf : jbe 0x2000049e4e2 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ba926 : jbe 0x200004ba8fe ; ret 0x41ff
0x00000200004bb626 : jbe 0x200004bb5f1 ; ret 0xbdff
0x00000200004ccef6 : jbe 0x200004cceac ; sar edi, -0x75 ; ret
0x00000200004d55b6 : jbe 0x200004d55cf ; add byte ptr [rcx - 0x73], cl ; add al, 0x90 ; ret
0x00000200004f809e : jbe 0x200004f8094 ; idiv bh ; jmp 0x200004f806c
0x0000020000519e92 : jbe 0x20000519e9c ; xor ecx, ecx ; call rax
0x000002000051dd06 : jbe 0x2000051dca5 ; ret
0x0000020000521703 : jbe 0x2000052170e ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x0000020000521703 : jbe 0x2000052170f ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x0000020000528606 : jbe 0x200005285fc ; ret 0xc7ff
0x00000200005302e0 : jbe 0x200005302ef ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000564ffc : jbe 0x2000056500b ; add bh, bh ; ret
0x00000200005695c0 : jbe 0x20000569586 ; dec esp ; cmp edx, 2 ; je 0x200005695d3 ; ret
0x00000200005a0b5b : jbe 0x200005a0b4d ; dec dword ptr [rax - 0x75] ; int 0xe8
0x00000200005ba25d : jbe 0x200005ba238 ; inc dword ptr [rcx + 0x3b] ; ret
0x00000200005bba5c : jbe 0x200005bba5d ; inc dword ptr [rbx + 0x3b44fec3] ; ret
0x00000200005bbafb : jbe 0x200005bbafc ; inc dword ptr [rcx - 9] ; rol dword ptr [rcx - 0xa], cl ; ret
0x00000200005bbb07 : jbe 0x200005bbb08 ; inc dword ptr [rcx - 9] ; rol dword ptr [rcx - 0xa], cl ; ret
0x00000200005d75e0 : jbe 0x200005d75d5 ; dec dword ptr [rbp + 0x3b] ; ret
0x0000020000616e71 : jbe 0x20000616e84 ; test edx, edx ; sete cl ; mov eax, ecx ; ret
0x0000020000625449 : jbe 0x20000625452 ; xor eax, eax ; ret
0x000002000064db0d : jbe 0x2000064db20 ; lea eax, dword ptr [r9 - 2] ; sub ax, dx ; jmp 0x2000064db35
0x0000020000653be6 : jbe 0x20000653bf5 ; mov eax, 0xc0000023 ; ret
0x0000020000653c26 : jbe 0x20000653c35 ; mov eax, 0xc000000d ; ret
0x000002000065dc50 : jbe 0x2000065dc3c ; xor eax, eax ; ret
0x000002000069e3ea : jbe 0x2000069e3f9 ; mov eax, 0x1e ; ret
0x00000200006cf1e5 : jbe 0x200006cf1f2 ; add cl, 8 ; ret
0x00000200006f75b8 : jbe 0x200006f7592 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000703ba9 : jbe 0x20000703bb5 ; mov qword ptr [rcx + 8], rax ; ret
0x00000200007060ab : jbe 0x2000070603a ; ret 0x3949
0x0000020000711f64 : jbe 0x20000711f75 ; mov dword ptr [rip + 0x1b14c], eax ; ret
0x0000020000726abe : jbe 0x20000726ac0 ; sahf ; dec dword ptr [rax - 0x75] ; ret
0x000002000079ee14 : jbe 0x2000079ee28 ; xchg eax, ebp ; ret
0x00000200007a7c67 : jbe 0x200007a7c96 ; ret
0x00000200007aff0d : jbe 0x200007aff1f ; movzx eax, r8w ; ret
0x0000020000003113 : je 0x20000003141 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000035db : je 0x200000035c8 ; mov al, 1 ; ret
0x00000200000036ce : je 0x200000036d9 ; mov qword ptr [r8], rax ; ret
0x0000020000003d7b : je 0x20000003da9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000042c9 : je 0x200000042f7 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000000580e : je 0x2000000581d ; mov rax, rdx ; ret
0x000002000000580e : je 0x2000000581e ; mov rax, rdx ; ret
0x00000200000058c1 : je 0x200000058ef ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000006e00 : je 0x20000006e2e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000072cb : je 0x200000072f9 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000007acf : je 0x20000007afd ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000008410 : je 0x2000000843e ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000008dbe : je 0x20000008dd1 ; movsx eax, byte ptr [rcx + 0xc3] ; ret
0x0000020000009504 : je 0x200000094ed ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000161267 : je 0x200000095c9 ; mov qword ptr [r8], r10 ; ret
0x00000200000099fe : je 0x20000009a13 ; mov eax, ecx ; ret
0x0000020000009c4f : je 0x20000009c7e ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000009d0b : je 0x20000009d39 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000161429 : je 0x2000000a4f1 ; mov qword ptr [r8], r10 ; ret
0x000002000000a61f : je 0x2000000a624 ; ret
0x000002000000a6da : je 0x2000000a708 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000000b38b : je 0x2000000b3b9 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000000bb70 : je 0x2000000bb9e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000000bcf1 : je 0x2000000bd1c ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000000bedd : je 0x2000000bf0b ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000000c2d8 : je 0x2000000c306 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000000c37c : je 0x2000000c381 ; ret
0x000002000000c388 : je 0x2000000c385 ; mov eax, 0xc000000d ; ret
0x000002000000e02a : je 0x2000000e059 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000000e4ee : je 0x2000000e51c ; add rsp, 0x30 ; pop rdi ; ret
0x000002000000e5ab : je 0x2000000e5da ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000000e908 : je 0x2000000e933 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000000ed5c : je 0x2000000ed66 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000000f46a : je 0x2000000f498 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000000ff74 : je 0x2000000ff81 ; add rsp, 0x38 ; ret
0x0000020000010262 : je 0x20000010290 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000001166f : je 0x2000001169d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000011755 : je 0x20000011783 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000117fc : je 0x2000001182a ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000011922 : je 0x20000011950 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000011fc4 : je 0x20000011ff3 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000012cda : je 0x20000012d08 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000012fca : je 0x20000012ff8 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000014e77 : je 0x20000014ea5 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000016036 : je 0x20000016064 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000166ba : je 0x200000166e5 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000001691c : je 0x2000001694b ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000018c13 : je 0x20000018c18 ; ret
0x00000200000191a1 : je 0x200000191cf ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000019fa8 : je 0x20000019fb6 ; mov rcx, qword ptr [r14 + 8] ; call rax
0x000002000001a0a9 : je 0x2000001a0d7 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000001a611 : je 0x2000001a63f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001aa83 : je 0x2000001aa99 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001c225 : je 0x2000001c253 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001c3f6 : je 0x2000001c3f2 ; mov rax, qword ptr [rax + 8] ; ret
0x000002000001efc7 : je 0x2000001eff5 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000001f7c2 : je 0x2000001f7e0 ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x000002000001fd5e : je 0x2000001fd8c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000020867 : je 0x20000020896 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000002133e : je 0x2000002136c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000021675 : je 0x2000002167e ; xor eax, eax ; ret
0x0000020000021ba2 : je 0x20000021bb1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000023701 : je 0x2000002372f ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000024eac : je 0x20000024eda ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002515d : je 0x200000250ec ; ret 0x412b
0x000002000002604c : je 0x2000002607a ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000026302 : je 0x20000026330 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000027168 : je 0x20000027196 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000029115 : je 0x20000029123 ; mov eax, 1 ; ret
0x000002000002920c : je 0x2000002923a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002926a : je 0x20000029298 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000029ba7 : je 0x20000029bd5 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000002a2fc : je 0x2000002a32a ; add rsp, 0x30 ; pop rdi ; ret
0x000002000002a53a : je 0x2000002a538 ; mov rax, qword ptr [rdx + 0x40] ; ret
0x000002000002abd9 : je 0x2000002ab57 ; xor eax, eax ; jmp 0x2000002abaf
0x000002000002ad8c : je 0x2000002ad97 ; and qword ptr [rcx], rax ; ret
0x000002000002afae : je 0x2000002afdc ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000002be9b : je 0x2000002bea8 ; add rsp, 0x28 ; ret
0x000002000002bfff : je 0x2000002c02d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002c4f4 : je 0x2000002c522 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002ccb0 : je 0x2000002ccbf ; mov eax, 1 ; ret
0x000002000002cd5f : je 0x2000002cd8d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000002dc0e : je 0x2000002dc3c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002df1e : je 0x2000002df16 ; xor al, al ; ret
0x000002000002df19 : je 0x2000002df2c ; cmp dword ptr [r8], r9d ; je 0x2000002df1b ; xor al, al ; ret
0x000002000002ed2f : je 0x2000002ed5d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000002fc94 : je 0x2000002fcc2 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002ff87 : je 0x2000002ffb5 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000305e8 : je 0x20000030616 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000030765 : je 0x20000030793 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000030966 : je 0x2000003092f ; call 0x1ffc3042d7d
0x0000020000030965 : je 0x20000030930 ; call 0x1ffc3042d7e
0x0000020000030dbd : je 0x20000030deb ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000031086 : je 0x20000031093 ; lock inc dword ptr [rcx + 0x28] ; ret
0x000002000003121b : je 0x20000031229 ; mov eax, 1 ; ret
0x00000200000314c8 : je 0x200000314f6 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000031ae2 : je 0x20000031af1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003229e : je 0x200000322cc ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000032b93 : je 0x20000032b9e ; mov al, r8b ; ret
0x0000020000033d3c : je 0x20000033d59 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000343d9 : je 0x200000343f5 ; mov qword ptr [rax + 8], r8 ; ret
0x000002000003447c : je 0x200000344aa ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000344e8 : je 0x20000034516 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003572f : je 0x20000035742 ; sub qword ptr [rip + 0x2ed038], rdx ; ret
0x0000020000035f1b : je 0x20000035f28 ; add rsp, 0x28 ; ret
0x0000020000035f9b : je 0x20000035fc9 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000036220 : je 0x2000003624e ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000036e4c : je 0x20000036e5b ; mov eax, 1 ; ret
0x00000200000371ec : je 0x2000003721a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000037d11 : je 0x20000037d1e ; add rsp, 0x28 ; ret
0x0000020000038cc5 : je 0x20000038cd4 ; and qword ptr [rdx + 0x18], 0 ; ret
0x0000020000039057 : je 0x2000003909a ; mov al, 1 ; ret
0x00000200000397a1 : je 0x200000397cf ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003991c : je 0x2000003992c ; call 0x20000039c19
0x0000020000039933 : je 0x20000039943 ; call 0x20000039a1d
0x000002000003a6fa : je 0x2000003a728 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003ace2 : je 0x2000003acf1 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000003afe8 : je 0x2000003b016 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003b176 : je 0x2000003b187 ; xor al, al ; add rsp, 0x28 ; ret
0x000002000003b33b : je 0x2000003b36a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003b383 : je 0x2000003b3b1 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003ccda : je 0x2000003cd09 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003cef1 : je 0x2000003cf1f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003cf86 : je 0x2000003cfb4 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003d09d : je 0x2000003d0cb ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000003d27d : je 0x2000003d2ab ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003d494 : je 0x2000003d4c2 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003dfb4 : je 0x2000003dfe2 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003e067 : je 0x2000003e095 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003e0fb : je 0x2000003e129 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003ef9a : je 0x2000003efc8 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003f014 : je 0x2000003f042 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003fa28 : je 0x2000003fa56 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003fb69 : je 0x2000003fb97 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003feba : je 0x2000003fec9 ; mov eax, 1 ; ret
0x00000200000403d0 : je 0x200000403fa ; xor bh, dh ; ret
0x0000020000040ab9 : je 0x20000040ae7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000004124f : je 0x2000004127d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000041b1f : je 0x20000041b4d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000041d3a : je 0x20000041d69 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000041d75 : je 0x20000041d84 ; mov eax, edx ; ret
0x0000020000041d75 : je 0x20000041d85 ; mov eax, edx ; ret
0x00000200000434d1 : je 0x200000434e3 ; mov rdx, rbx ; mov rcx, r15 ; call rax
0x000002000004374b : je 0x20000043779 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004377b : je 0x2000004378e ; lea rax, qword ptr [rdx + 0x880] ; ret
0x000002000004387f : je 0x200000438ad ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000043963 : je 0x20000043970 ; mov rax, qword ptr [rcx + 0x28] ; ret
0x0000020000043d2d : je 0x20000043d5b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000043da3 : je 0x20000043dd1 ; push rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000044204 : je 0x20000044232 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000442ec : je 0x200000442f5 ; xor eax, eax ; ret
0x00000200000442d5 : je 0x20000044304 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000044348 : je 0x20000044376 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004440d : je 0x2000004443b ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004528e : je 0x2000004529b ; mov word ptr [rcx], r11w ; ret
0x00000200000476ae : je 0x200000476b7 ; xor eax, eax ; ret
0x00000200000476a9 : je 0x200000476b9 ; test rcx, rax ; je 0x200000476bc ; xor eax, eax ; ret
0x000002000004aa38 : je 0x2000004aa66 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004b080 : je 0x2000004b0ae ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004b0e2 : je 0x2000004b0fa ; add rsp, 0x20 ; pop rbx ; ret
0x000002000004da17 : je 0x2000004da20 ; mov eax, ecx ; ret
0x000002000004da13 : je 0x2000004da29 ; cmp al, 2 ; je 0x2000004da24 ; mov eax, ecx ; ret
0x000002000004dc32 : je 0x2000004dc60 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004dd28 : je 0x2000004dd11 ; mov al, 1 ; ret
0x000002000004dd0b : je 0x2000004dd14 ; xor al, al ; ret
0x000002000004ddf0 : je 0x2000004de1e ; add rsp, 0x30 ; pop rdi ; ret
0x000002000004df5f : je 0x2000004df6f ; mov rcx, qword ptr [rsp + 0x78] ; call rax
0x000002000004df8e : je 0x2000004df9e ; mov rcx, qword ptr [rsp + 0x78] ; call rax
0x000002000004dfa3 : je 0x2000004dfd1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000004fcd3 : je 0x2000004fcd8 ; ret
0x0000020000050e57 : je 0x20000050e85 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000050fb1 : je 0x20000050fa5 ; mov rax, r8 ; ret
0x00000200000516ae : je 0x200000516dc ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000051a76 : je 0x20000051a40 ; and byte ptr [rdx + 0x21], cl ; ret 0x4818
0x0000020000051e8e : je 0x20000051ebc ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000052846 : je 0x2000005284f ; xor eax, eax ; ret
0x000002000005285b : je 0x2000005286a ; sub ecx, 1 ; jne 0x2000005286d ; ret
0x0000020000053bd9 : je 0x20000053c04 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000053c8a : je 0x20000053cb8 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000054eb8 : je 0x20000054ee6 ; jo 0x20000054f0c ; add esp, 0x50 ; pop rdi ; ret
0x0000020000055d06 : je 0x20000055d7d ; mov r8, rbx ; mov rcx, rsi ; call r14
0x0000020000056d8e : je 0x20000056dbc ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000057be1 : je 0x20000057c0f ; add rsp, 0x30 ; pop rdi ; ret
0x000002000005a1f0 : je 0x2000005a1ea ; ret 0xf08
0x000002000005ca45 : je 0x2000005ca73 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005efa6 : je 0x2000005ef6f ; or cl, al ; out dx, al ; add ebp, ebx ; ret 0x8b48
0x000002000005f076 : je 0x2000005f0a1 ; cmp byte ptr [rax + 3], cl ; ret
0x0000020000061dd7 : je 0x20000061de4 ; add rsp, 0x28 ; ret
0x0000020000069eec : je 0x20000069f1a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000006ba2e : je 0x2000006ba0d ; mov al, 1 ; ret
0x000002000006ba07 : je 0x2000006ba10 ; xor al, al ; ret
0x000002000006c077 : je 0x2000006c0a4 ; and cl, ch ; ret
0x000002000006d053 : je 0x2000006d058 ; ret
0x000002000006d103 : je 0x2000006d132 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000006d3a4 : je 0x2000006d3d2 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000006e3d8 : je 0x2000006e406 ; add rsp, 0x70 ; pop rsi ; ret
0x000002000006eec5 : je 0x2000006eed4 ; mov eax, 1 ; ret
0x000002000006f196 : je 0x2000006f1f6 ; lea rdx, qword ptr [rsi + 0x10] ; call r8
0x000002000006f25b : je 0x2000006f295 ; mov qword ptr [r9], rax ; ret
0x000002000006f32e : je 0x2000006f299 ; mov qword ptr [r9], rax ; ret
0x000002000006f40c : je 0x2000006f411 ; ret
0x000002000006f3f2 : je 0x2000006f420 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000070d88 : je 0x20000070db6 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000071345 : je 0x20000071373 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011a9f6 : je 0x20000071693 ; jmp rax
0x0000020000071706 : je 0x200000716f9 ; mov eax, 2 ; ret
0x00000200000716e9 : je 0x20000071711 ; dec eax ; cmp eax, 2 ; jl 0x200000716fc ; ret
0x000002000007244d : je 0x20000072478 ; sbb byte ptr [rcx + 0x3b], al ; ret
0x00000200000728b5 : je 0x200000728e3 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000072958 : je 0x2000007294f ; mov al, 1 ; ret
0x0000020000072b00 : je 0x20000072b2e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000007392f : je 0x2000007395d ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000073a04 : je 0x20000073a32 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000074685 : je 0x20000074699 ; test r8, r8 ; jne 0x20000074694 ; ret
0x0000020000076f12 : je 0x20000076f40 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000007709e : je 0x20000077092 ; xor al, al ; ret
0x00000200000770df : je 0x200000770d2 ; xor al, al ; ret
0x00000200000770de : je 0x200000770d3 ; xor al, al ; ret
0x00000200000770d2 : je 0x200000770e5 ; mov al, 1 ; ret
0x0000020000077bd3 : je 0x20000077c01 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000077d48 : je 0x20000077d76 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000078ae3 : je 0x20000078af0 ; mov qword ptr [r8], rcx ; mov al, r9b ; ret
0x0000020000078b08 : je 0x20000078b17 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000078bd8 : je 0x20000078c06 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000792a7 : je 0x200000792d5 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000007a0a5 : je 0x2000007a0d3 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000007b535 : je 0x2000007b563 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000007b5ae : je 0x2000007b5dc ; add rsp, 0x30 ; pop rdi ; ret
0x000002000007c5f5 : je 0x2000007c602 ; mov rax, rcx ; ret
0x000002000007c761 : je 0x2000007c774 ; mov rax, qword ptr [rcx] ; and rax, 0xfffffffffffffffc ; ret
0x000002000007c99f : je 0x2000007c9cd ; push 0x40c48348 ; pop rdi ; ret
0x000002000007ce81 : je 0x2000007ce26 ; jmp 0x2000007ce4b
0x000002000007dce5 : je 0x2000007dd13 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000007de15 : je 0x2000007de43 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000007de55 : je 0x2000007de83 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000007e173 : je 0x2000007e1a1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000007e219 : je 0x2000007e247 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000007e36b : je 0x2000007e399 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000007f1d8 : je 0x2000007f206 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000804fd : je 0x2000008052b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000805a8 : je 0x200000805d6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000080e62 : je 0x20000080e90 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000081dab : je 0x20000081dd9 ; jo 0x20000081dff ; add esp, 0x50 ; pop rdi ; ret
0x000002000008263e : je 0x2000008266c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000827c4 : je 0x200000827f2 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000082e7e : je 0x20000082eac ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008360f : je 0x2000008363d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000839c9 : je 0x200000839f7 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000083d2b : je 0x20000083d59 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000008430a : je 0x20000084338 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000084756 : je 0x20000084763 ; mov rax, qword ptr [rax + 0x48] ; ret
0x00000200000847c2 : je 0x200000847f0 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000084e27 : je 0x20000084e55 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000008540a : je 0x20000085438 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000878d9 : je 0x200000878e1 ; mov eax, edx ; ret
0x00000200000878d9 : je 0x200000878e2 ; mov eax, edx ; ret
0x0000020000087943 : je 0x20000087971 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000879fe : je 0x20000087a2c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000880ac : je 0x200000880da ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000088a69 : je 0x20000088a73 ; add eax, dword ptr [rdx + 0x68] ; ret
0x000002000008a836 : je 0x2000008a864 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008a92b : je 0x2000008a959 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008aa80 : je 0x2000008aaae ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008ab2b : je 0x2000008ab59 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008abe1 : je 0x2000008ac0f ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000008ac5b : je 0x2000008ac89 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008b118 : je 0x2000008b146 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008b83a : je 0x2000008b868 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008c1ae : je 0x2000008c1b7 ; mov al, 1 ; ret
0x000002000008cdf5 : je 0x2000008ce23 ; js 0x2000008ce49 ; add esp, 0x50 ; pop rdi ; ret
0x000002000008dbd4 : je 0x2000008dc02 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008dc69 : je 0x2000008dc97 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008e227 : je 0x2000008e255 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008e88d : je 0x2000008e8bb ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008f4c7 : je 0x2000008f4f6 ; push 0x40c48348 ; pop r15 ; ret
0x000002000008f4fd : je 0x2000008f529 ; xor byte ptr [rax - 0x75], cl ; iretd ; call rsi
0x000002000009043c : je 0x2000009046b ; add rsp, 0x30 ; pop r15 ; ret
0x000002000009077f : je 0x200000907ae ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000918e9 : je 0x20000091917 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000091db7 : je 0x20000091dbc ; ret
0x0000020000091db7 : je 0x20000091dbf ; ret
0x0000020000091e10 : je 0x20000091e68 ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x0000020000092cf1 : je 0x20000092d1f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000093987 : je 0x20000093991 ; mov dword ptr [r8], eax ; ret
0x0000020000093b02 : je 0x20000093b0e ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x0000020000097edd : je 0x20000097ed8 ; mov eax, dword ptr [rip + 0x3103eb] ; ret
0x000002000009883e : je 0x2000009882e ; mov eax, 2 ; ret
0x0000020000098860 : je 0x20000098869 ; xor al, al ; ret
0x00000200000988d7 : je 0x20000098905 ; push 0x50c48348 ; pop rdi ; ret
0x000002000009979d : je 0x200000997cb ; add rsp, 0x20 ; pop rdi ; ret
0x000002000009bf5d : je 0x2000009bf6c ; add rsp, 0x20 ; pop rbx ; ret
0x000002000009c060 : je 0x2000009c08f ; pop rax ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x000002000009c56d : je 0x2000009c567 ; ret 0x7504
0x000002000009d987 : je 0x2000009d9a1 ; xor eax, eax ; ret
0x000002000009dc55 : je 0x2000009dc78 ; test al, 2 ; jne 0x2000009dc78 ; or eax, 0x18 ; ret
0x000002000009dd09 : je 0x2000009dd37 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000009de09 : je 0x2000009de37 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000009e07a : je 0x2000009e0a8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000a0165 : je 0x200000a0166 ; mov eax, 1 ; ret
0x00000200000a0cda : je 0x200000a0d08 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000a0dcb : je 0x200000a0dde ; lea rax, qword ptr [rcx + 0xc0] ; ret
0x00000200000b5780 : je 0x200000b57ae ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b68cd : je 0x200000b6874 ; xor eax, eax ; ret
0x00000200000b6926 : je 0x200000b6933 ; add rsp, 0x28 ; ret
0x00000200000b6e7b : je 0x200000b6e84 ; xor eax, eax ; ret
0x00000200000b73a3 : je 0x200000b73d1 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000b7aa7 : je 0x200000b7aac ; ret
0x00000200000b8931 : je 0x200000b893a ; xor eax, eax ; ret
0x00000200000b8988 : je 0x200000b8996 ; bts qword ptr [rcx], 0xc ; ret
0x00000200000b9cf9 : je 0x200000b9d08 ; call 0x2000009dc88
0x00000200000b9ef3 : je 0x200000b9f01 ; cmp dword ptr [rax + 8], edx ; jne 0x200000b9f02 ; ret
0x00000200000bb214 : je 0x200000bb242 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bb5dc : je 0x200000bb60a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bb62f : je 0x200000bb65d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bb6ae : je 0x200000bb6dc ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bbc5f : je 0x200000bbc8d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bc50f : je 0x200000bc51a ; mov eax, dword ptr [rax + 8] ; ret
0x00000200000bd12d : je 0x200000bd15b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000bd641 : je 0x200000bd64e ; mov rax, qword ptr [rcx + 0x18] ; ret
0x00000200000bd9d8 : je 0x200000bda06 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000bde30 : je 0x200000bde5e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bde80 : je 0x200000bdeae ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bdf6a : je 0x200000bdf67 ; mov qword ptr [r9 + 0x628], rax ; ret
0x00000200000be977 : je 0x200000be984 ; add rsp, 0x28 ; ret
0x00000200000bea1b : je 0x200000bea2a ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000bf3a1 : je 0x200000bf3cb ; sub cl, ch ; ret 0xfffd
0x00000200000bf63e : je 0x200000bf636 ; mov al, 1 ; ret
0x00000200000bf6bf : je 0x200000bf6d2 ; lea rax, qword ptr [rip + 0x240b78] ; ret
0x00000200000bf80b : je 0x200000bf810 ; ret
0x00000200000c09fa : je 0x200000c0a29 ; and byte ptr [rbx], dh ; ror byte ptr [rcx - 0x77], 0x11 ; pop rdi ; ret
0x00000200000c3a34 : je 0x200000c3a41 ; add rsp, 0x28 ; ret
0x00000200000c3acf : je 0x200000c3afd ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c460a : je 0x200000c4638 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c500c : je 0x200000c501f ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000c54bd : je 0x200000c54cc ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c56cc : je 0x200000c56d4 ; ret
0x00000200000c6e5e : je 0x200000c6e8c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c8b34 : je 0x200000c8b5f ; sbb byte ptr [rcx - 0x75], al ; ret
0x00000200000c9663 : je 0x200000c9691 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000019fd2b : je 0x200000cc018 ; jmp 0x200000cbfa0
0x00000200000d325e : je 0x200000d3278 ; mov eax, r8d ; ret
0x00000200000d3a99 : je 0x200000d3aa6 ; add rsp, 8 ; ret
0x00000200000d3f56 : je 0x200000d3f63 ; add rsp, 8 ; ret
0x00000200000de1eb : je 0x200000de219 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000de5e5 : je 0x200000de613 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000de77b : je 0x200000de7a9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000dea0b : je 0x200000dea39 ; js 0x200000dea5f ; add esp, 0x50 ; pop rbp ; ret
0x00000200000e5283 : je 0x200000e5294 ; mov rcx, r14 ; call 0x200000214a3
0x00000200000e6ed0 : je 0x200000e6edd ; add rsp, 0x28 ; ret
0x00000200000e7dd9 : je 0x200000e7e07 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e7ea9 : je 0x200000e7ed7 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e81f8 : je 0x200000e8226 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e8e1c : je 0x200000e8e4a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e9b5f : je 0x200000e9b8d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000eb471 : je 0x200000eb49f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ebff8 : je 0x200000ec027 ; pop rax ; add rsp, 0x78 ; pop rdi ; pop rbx ; ret
0x00000200000ec8b0 : je 0x200000ec8de ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000ecfe9 : je 0x200000ed014 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000ed07c : je 0x200000ed02d ; or byte ptr [rbp - 0xd], dh ; xor eax, eax ; ret
0x00000200000ed07b : je 0x200000ed02e ; or byte ptr [rbp - 0xd], dh ; xor eax, eax ; ret
0x00000200000ed035 : je 0x200000ed03a ; ret
0x00000200000eee99 : je 0x200000eeec7 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000eeef3 : je 0x200000eef21 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f05cc : je 0x200000f05db ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f07d4 : je 0x200000f0802 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f09dc : je 0x200000f0a0a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f0ceb : je 0x200000f0cfa ; mov eax, 1 ; ret
0x00000200000f140f : je 0x200000f140e ; mov rax, r9 ; ret
0x00000200000f2c12 : je 0x200000f2c40 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000f370e : je 0x200000f3717 ; xor al, al ; ret
0x00000200000f370e : je 0x200000f371a ; xor al, al ; ret
0x00000200000f418e : je 0x200000f41bc ; push 0x40c48348 ; pop rdi ; ret
0x00000200000f43ac : je 0x200000f4371 ; jmp 0x200000f4356
0x00000200000f4777 : je 0x200000f47a5 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f48a1 : je 0x200000f48cf ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000f5240 : je 0x200000f526e ; push 0x50c48348 ; pop rdi ; ret
0x00000200000f69df : je 0x200000f6a0d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001aa82e : je 0x200000f6cbb ; jmp 0x200000f6b3e
0x00000200000f7435 : je 0x200000f7463 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000f7597 : je 0x200000f75c5 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f7682 : je 0x200000f76b0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f7785 : je 0x200000f77b3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f7c0a : je 0x200000f7c38 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f7f58 : je 0x200000f7f86 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f8098 : je 0x200000f80c6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f9301 : je 0x200000f9309 ; call rcx
0x00000200000f95d0 : je 0x200000f95d9 ; mov al, 1 ; ret
0x00000200000f9db6 : je 0x200000f9de4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000fa33b : je 0x200000fa369 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000fa411 : je 0x200000fa43f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000faccb : je 0x200000facd0 ; ret
0x00000200000fad47 : je 0x200000fad75 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000fbb2c : je 0x200000fbb5a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000fca36 : je 0x200000fca64 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000fd656 : je 0x200000fd65f ; xor al, al ; ret
0x00000200000fd65f : je 0x200000fd668 ; mov al, 1 ; ret
0x00000200000fdd5d : je 0x200000fdd8b ; push 0x50c48348 ; pop rdi ; ret
0x00000200000fe30b : je 0x200000fe33a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000ff080 : je 0x200000ff0ae ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ff17e : je 0x200000ff1ac ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ff2c4 : je 0x200000ff2f2 ; js 0x200000ff318 ; add esp, 0x50 ; pop rbp ; ret
0x00000200000ffba3 : je 0x200000ffbac ; mov al, cl ; ret
0x0000020000100438 : je 0x2000010043d ; ret
0x0000020000100902 : je 0x20000100930 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000101266 : je 0x20000101270 ; mov dword ptr [r8], r9d ; ret
0x000002000010221d : je 0x20000102223 ; call rdx
0x0000020000102245 : je 0x20000102251 ; xor edx, edx ; call r8
0x0000020000102296 : je 0x200001022a2 ; mov dword ptr [r8], ecx ; mov eax, edx ; ret
0x000002000010308b : je 0x200001030b9 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000103486 : je 0x200001034b4 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000103b4a : je 0x20000103b78 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000103fb1 : je 0x20000103fdc ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001041d3 : je 0x20000104201 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001043a9 : je 0x200001043d7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000105a28 : je 0x20000105a56 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001060de : je 0x20000106030 ; jmp 0x200001723ad
0x0000020000106231 : je 0x20000106194 ; jmp 0x200001724eb
0x000002000010641d : je 0x20000106354 ; jmp 0x20000172666
0x0000020000108f10 : je 0x20000108f3a ; cmp al, 0x41 ; call rcx
0x000002000010a30c : je 0x2000010a33a ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000010b6ac : je 0x2000010b6db ; add rsp, 0x20 ; pop r15 ; ret
0x000002000010d5af : je 0x2000010d5bb ; add dh, dh ; ret
0x000002000010d5c1 : je 0x2000010d5cd ; add dh, dh ; ret
0x000002000010d98e : je 0x2000010d9bc ; push 0x50c48348 ; pop rdi ; ret
0x000002000010e6c3 : je 0x2000010e6ee ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000010e97f : je 0x2000010e966 ; jmp 0x2000010e949
0x000002000010e972 : je 0x2000010e9a0 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010fa25 : je 0x2000010fa50 ; and byte ptr [rcx + 0x5e], al ; ret
0x000002000010fbd8 : je 0x2000010fc07 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000112274 : je 0x200001122a2 ; push 0x40c48348 ; pop rdi ; ret
0x000002000011288f : je 0x200001128ba ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000112aec : je 0x20000112af1 ; ret
0x0000020000112c97 : je 0x20000112cc5 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011386f : je 0x2000011389d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001139f4 : je 0x20000113a22 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000113ab1 : je 0x20000113ae0 ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000114494 : je 0x200001144c2 ; mov rcx, qword ptr [rbx + 0xa8] ; call rax
0x00000200001160e0 : je 0x200001160f1 ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000116179 : je 0x2000011618b ; xchg qword ptr [rip + 0x1dfab6], rax ; ret
0x0000020000116197 : je 0x2000011619f ; jmp r8
0x0000020000117b84 : je 0x20000117b8c ; inc eax ; ret
0x0000020000117b9c : je 0x20000117ba4 ; inc eax ; ret
0x0000020000117d12 : je 0x20000117d40 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000117f0a : je 0x20000117f38 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000119a64 : je 0x20000119a73 ; cmp byte ptr [rcx + 0x21], al ; jne 0x20000119a73 ; ret
0x000002000011a716 : je 0x2000011a727 ; mov eax, dword ptr [rip + 0x28d966] ; ret
0x000002000011c551 : je 0x2000011c543 ; mov eax, 0xc00000bb ; ret
0x000002000011d28b : je 0x2000011d2b9 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011d65b : je 0x2000011d689 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011e8b2 : je 0x2000011e8e0 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011e8fd : je 0x2000011e92b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011ec87 : je 0x2000011ecb5 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011f0f1 : je 0x2000011f11f ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011f2d6 : je 0x2000011f304 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011f800 : je 0x2000011f82e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011f835 : je 0x2000011f846 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011feff : je 0x2000011ff2d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011ff8f : je 0x2000011ffbd ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000120008 : je 0x20000120036 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000120032 : je 0x20000120045 ; sbb eax, eax ; and eax, 2 ; dec eax ; ret
0x000002000012062a : je 0x20000120658 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000120f10 : je 0x20000120f3e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001215b0 : je 0x200001215de ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000121a49 : je 0x20000121a77 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000121abf : je 0x20000121aed ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000121bb9 : je 0x20000121be7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000122460 : je 0x2000012248e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001225e1 : je 0x2000012260f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000012294d : je 0x2000012297b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000122d2c : je 0x20000122d5a ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000122e23 : je 0x20000122e51 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000123e48 : je 0x20000123e76 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000123ec8 : je 0x20000123ef6 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000124013 : je 0x20000124020 ; mov rax, qword ptr [rax + 0x48] ; ret
0x00000200001243f1 : je 0x2000012441f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000012462a : je 0x20000124658 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012572b : je 0x20000125759 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001269b6 : je 0x200001269e4 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000128ab6 : je 0x20000128abc ; call rcx
0x0000020000129359 : je 0x20000129387 ; js 0x200001293ad ; add esp, 0x50 ; pop rdi ; ret
0x0000020000129666 : je 0x20000129694 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012a14f : je 0x2000012a17d ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012ab00 : je 0x2000012ab2e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000012adc7 : je 0x2000012add8 ; mov byte ptr [rcx], 0 ; mov eax, r8d ; ret
0x000002000012cd18 : je 0x2000012cd25 ; add rsp, 0x28 ; ret
0x000002000012cd78 : je 0x2000012cd86 ; mov eax, 1 ; ret
0x000002000012d7b2 : je 0x2000012d7e0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ade5f : je 0x2000012d948 ; call rdx
0x000002000012dec5 : je 0x2000012def3 ; push 0x40c48348 ; pop rdi ; ret
0x000002000012f1ac : je 0x2000012f1d7 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001ae5a6 : je 0x2000012f42c ; call 0x2000049a818
0x000002000012f4e2 : je 0x2000012f510 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012fc0b : je 0x2000012fc39 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001300e4 : je 0x200001300ee ; xor ecx, ecx ; call rdx
0x0000020000130fa8 : je 0x20000130fd7 ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x00000200001315f8 : je 0x20000131626 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000131dbf : je 0x20000131dd0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000131ed9 : je 0x20000131ef2 ; call rcx
0x00000200001363c0 : je 0x200001363ee ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001379a5 : je 0x200001379d3 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000137b0d : je 0x20000137b38 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000013902d : je 0x2000013905b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001b263f : je 0x20000139a03 ; call rax
0x0000020000139a88 : je 0x20000139ab6 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000139dba : je 0x20000139dc2 ; jmp r8
0x0000020000139ef5 : je 0x20000139f23 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000139ffb : je 0x2000013a029 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013a6c9 : je 0x2000013a6f7 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013a7b8 : je 0x2000013a7e6 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013ab33 : je 0x2000013ab38 ; ret
0x000002000013b14b : je 0x2000013b15a ; test dh, dh ; jne 0x2000013b0e2 ; xor rax, rax ; ret
0x000002000013b5a8 : je 0x2000013b583 ; sub r8d, ecx ; mov eax, r8d ; ret
0x000002000013b61f : je 0x2000013b5f4 ; sub r9d, ecx ; mov eax, r9d ; ret
0x000002000013bb6b : je 0x2000013bb99 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013c123 : je 0x2000013c151 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013cb2f : je 0x2000013cb3d ; test dh, dh ; jne 0x2000013cac8 ; xor eax, eax ; ret
0x000002000013d1f4 : je 0x2000013d1e8 ; test eax, eax ; jns 0x2000013d207 ; or eax, 0xffffffff ; ret
0x000002000013e768 : je 0x2000013e796 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013fa2d : je 0x2000013fa5b ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013fb1b : je 0x2000013fb49 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013fd9e : je 0x2000013fdcc ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013fea9 : je 0x2000013fed7 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000140066 : je 0x20000140094 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000140189 : je 0x200001401b7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000014044d : je 0x2000014047b ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000140c58 : je 0x20000140c86 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000141e8a : je 0x20000141eb8 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000141f60 : je 0x20000141f8e ; js 0x20000141fb4 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000141ffc : je 0x2000014202a ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000142aac : je 0x20000142ab9 ; or dword ptr [r8], 0xffffffff ; ret
0x0000020000144081 : je 0x2000014404c ; ret
0x0000020000147675 : je 0x200001476a3 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001476f1 : je 0x200001476a8 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000014e09c : je 0x2000014e0aa ; mov rcx, qword ptr [rsi + 0x50] ; jmp rcx
0x000002000015b748 : je 0x2000015b757 ; mov rcx, qword ptr [rcx + 8] ; call rax
0x000002000016021d : je 0x2000016022e ; mov rcx, rbx ; call 0x2000021c493
0x0000020000160a91 : je 0x20000160a9d ; mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x00000200001621f3 : je 0x20000162221 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000035003 : je 0x2000016ae5e ; ret
0x000002000016bf65 : je 0x2000016bf71 ; mov qword ptr [rcx], rax ; mov al, 1 ; ret
0x0000020000171020 : je 0x2000017102f ; mov eax, 0xc00000bb ; ret
0x0000020000171044 : je 0x20000171053 ; mov eax, 0xc00000bb ; ret
0x0000020000113a0e : je 0x20000176808 ; ret
0x0000020000176c64 : je 0x20000176c6a ; call rax
0x0000020000115e44 : je 0x200001772e6 ; call rax
0x000002000017abee : je 0x2000017abfd ; mov eax, 0xc00000f1 ; ret
0x0000020000186710 : je 0x20000186716 ; call rax
0x0000020000073e44 : je 0x20000189525 ; mov rax, r8 ; ret
0x0000020000076cda : je 0x20000189e8c ; xor eax, eax ; ret
0x00000200001984dc : je 0x200001984d3 ; push rsi ; ret 0x741e
0x00000200001984db : je 0x200001984d4 ; push rsi ; ret 0x741e
0x0000020000198503 : je 0x200001984fb ; inc dword ptr [rbp - 0x75] ; ret
0x000002000019a6cb : je 0x2000019a6b0 ; int1 ; push rsi ; ret 0xf42
0x00000200000c67e3 : je 0x2000019dcee ; mov al, 1 ; ret
0x00000200001a73a5 : je 0x200001a73c5 ; mov rcx, r9 ; call 0x200001d363b
0x00000200001a9c43 : je 0x200001a9c52 ; bts dword ptr [rcx + 8], 0x19 ; ret
0x000002000012d470 : je 0x200001ad9bc ; mov ecx, esi ; call rax
0x00000200001ade3a : je 0x200001ade4f ; lea rcx, qword ptr [rsp + 0x30] ; call rax
0x0000020000121648 : je 0x200001ae910 ; xor eax, eax ; ret
0x00000200001b1cfc : je 0x200001b1d00 ; ret
0x00000200001b314f : je 0x200001b317d ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001b33bf : je 0x200001b33ee ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001b3999 : je 0x200001b39c7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001b3ad8 : je 0x200001b3b06 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001b4047 : je 0x200001b4075 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001b411f : je 0x200001b4129 ; mov eax, dword ptr [rcx + 0x70] ; ret
0x00000200001b45ac : je 0x200001b45da ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001b4892 : je 0x200001b48bd ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001b9776 : je 0x200001b9782 ; mov qword ptr [r9], r10 ; xor al, al ; ret
0x00000200001b9781 : je 0x200001b978d ; mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x00000200001b9e3a : je 0x200001b9e68 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001b9f92 : je 0x200001b9fc0 ; push 0x50c48348 ; pop rdi ; ret
0x00000200001ba018 : je 0x200001ba046 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ba23a : je 0x200001ba268 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ba284 : je 0x200001ba28e ; mov dl, 1 ; mov al, dl ; ret
0x00000200001ba29a : je 0x200001ba2ac ; cmp qword ptr [rcx + 0x30], rax ; setne al ; ret
0x00000200001ba3d1 : je 0x200001ba3ff ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001bb27c : je 0x200001bb2aa ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001bb7f1 : je 0x200001bb81f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001bbf4f : je 0x200001bbf7d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001bc1b7 : je 0x200001bc1b3 ; mov eax, dword ptr [rax + 4] ; add rsp, 0x28 ; ret
0x00000200001bcaaa : je 0x200001bcab3 ; mov eax, ecx ; ret
0x00000200001bce32 : je 0x200001bce3a ; call rax
0x00000200001bced0 : je 0x200001bced6 ; sti ; ret
0x00000200001bd93a : je 0x200001bd968 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001bdd80 : je 0x200001bdd90 ; mov ecx, 1 ; mov al, cl ; ret
0x00000200001bde1f : je 0x200001bde27 ; call r9
0x00000200001bfa8a : je 0x200001bfab8 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001bfb30 : je 0x200001bfb5e ; jo 0x200001bfb84 ; add esp, 0x50 ; pop rdi ; ret
0x00000200001c05e6 : je 0x200001c0614 ; js 0x200001c063a ; add esp, 0x60 ; pop rdi ; ret
0x00000200001c0e50 : je 0x200001c0e5b ; mov rax, rcx ; ret
0x00000200001c0f10 : je 0x200001c0f3e ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c0f30 : je 0x200001c0f3f ; or eax, 0xc0350000 ; ret
0x00000200001c1860 : je 0x200001c188e ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c2e41 : je 0x200001c2e6f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c36a6 : je 0x200001c36d5 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200001c459f : je 0x200001c45a5 ; call rcx
0x00000200001c45c2 : je 0x200001c45c8 ; call rcx
0x00000200001c45e3 : je 0x200001c45e9 ; call rax
0x00000200001c45ff : je 0x200001c4607 ; jmp rcx
0x00000200001c461f : je 0x200001c4625 ; call rax
0x00000200001c464e : je 0x200001c4656 ; jmp rcx
0x00000200001c4672 : je 0x200001c467a ; jmp rdx
0x00000200001c469a : je 0x200001c46a0 ; call rax
0x00000200001c46be : je 0x200001c46c4 ; call rcx
0x00000200001c46db : je 0x200001c46e3 ; jmp rcx
0x00000200001c46fb : je 0x200001c4701 ; call rax
0x00000200001c4717 : je 0x200001c471f ; jmp rdx
0x00000200001c4cd6 : je 0x200001c4d04 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c6223 : je 0x200001c6252 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c6389 : je 0x200001c63b7 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001c7b03 : je 0x200001c7b31 ; js 0x200001c7b57 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001c8626 : je 0x200001c8654 ; js 0x200001c867a ; add esp, 0x60 ; pop rdi ; ret
0x00000200001c8f96 : je 0x200001c8fc4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c98f0 : je 0x200001c991f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c99a7 : je 0x200001c99d5 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c9fae : je 0x200001c9fc0 ; mov qword ptr [rax + 0x680], rdx ; ret
0x00000200001ca4df : je 0x200001ca50d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ca79c : je 0x200001ca7ca ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001cb2bc : je 0x200001cb2ea ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ccc57 : je 0x200001ccc86 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001cd234 : je 0x200001cd263 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001cd31e : je 0x200001cd34c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001cd522 : je 0x200001cd537 ; mov edx, eax ; mov rcx, rsi ; call 0x20000139781
0x00000200001cd948 : je 0x200001cd977 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001cdaa6 : je 0x200001cdad4 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001cdcf6 : je 0x200001cdd05 ; add rcx, -0x10 ; mov rax, rcx ; ret
0x00000200001cdea5 : je 0x200001cded3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ce4cb : je 0x200001ce506 ; mov rcx, rsi ; call 0x200000fa753
0x00000200001ce5f2 : je 0x200001ce620 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001ce794 : je 0x200001ce7c2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ceaad : je 0x200001ceadb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001cf6d0 : je 0x200001cf6de ; mov eax, 1 ; ret
0x00000200001d159f : je 0x200001d15f3 ; mov rcx, qword ptr [rcx + 0x2990] ; call rax
0x00000200001d1de7 : je 0x200001d1e15 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d1fd0 : je 0x200001d1ffe ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d209a : je 0x200001d20a9 ; mov eax, 0xc0000354 ; ret
0x00000200001d20d4 : je 0x200001d20ef ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200001d20e2 : je 0x200001d20f2 ; mov dword ptr [rcx], r10d ; ret
0x00000200001d28c6 : je 0x200001d28cf ; xor eax, eax ; ret
0x00000200001d31eb : je 0x200001d3219 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d34a4 : je 0x200001d34cf ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001d35c2 : je 0x200001d35e1 ; mov rax, qword ptr [rax + 8] ; call rax
0x00000200001d3eff : je 0x200001d3f0e ; mov eax, 0xc0000225 ; ret
0x00000200001d60a5 : je 0x200001d6103 ; inc r11 ; inc r10d ; jmp 0x200001d609c
0x00000200001d6103 : je 0x200001d6131 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d6abf : je 0x200001d6aed ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d714d : je 0x200001d717b ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001d731d : je 0x200001d734b ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001d7691 : je 0x200001d76bf ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d7fe0 : je 0x200001d800e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d80a9 : je 0x200001d80bc ; lea rax, qword ptr [rcx + 0x788] ; ret
0x00000200001d80c7 : je 0x200001d80da ; mov rax, qword ptr [rcx + 0x788] ; ret
0x00000200001d833c : je 0x200001d836a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d840e : je 0x200001d843c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001d95ea : je 0x200001d9618 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001d98b5 : je 0x200001d98bd ; or al, 0x10 ; ret
0x00000200001dbe7c : je 0x200001dbeaa ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001dbeb3 : je 0x200001dbec7 ; mov r8, qword ptr [r8 + 0x10] ; mov rcx, qword ptr [rbx] ; call rax
0x00000200001dc3dd : je 0x200001dc40b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001dc451 : je 0x200001dc47f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001dc4e7 : je 0x200001dc515 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001dc6db : je 0x200001dc709 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001dc834 : je 0x200001dc862 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001de9de : je 0x200001dea0c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e0a1e : je 0x200001e0a4c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001e319d : je 0x200001e31cb ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001e41ef : je 0x200001e41fe ; mov dl, 2 ; call 0x200000a0486
0x00000200001e5788 : je 0x200001e57b6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e5b32 : je 0x200001e5b60 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001eac41 : je 0x200001eac6f ; js 0x200001eac95 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001ead6a : je 0x200001ead98 ; js 0x200001eadbe ; add esp, 0x60 ; pop rdi ; ret
0x00000200001ead8d : je 0x200001ead9e ; inc dword ptr [rax + 0x1f08] ; ret
0x00000200001eae12 : je 0x200001eae40 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001eaefc : je 0x200001eaf2a ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001eb532 : je 0x200001eb560 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001ec6a6 : je 0x200001ec6d4 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001ed115 : je 0x200001ed143 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001eee9a : je 0x200001eeec8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ef3dd : je 0x200001ef40b ; js 0x200001ef431 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001ef4ac : je 0x200001ef4da ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f02b2 : je 0x200001f02c1 ; mov eax, 1 ; ret
0x00000200001f265b : je 0x200001f2686 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001f2d7a : je 0x200001f2da8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f4afc : je 0x200001f4b01 ; ret
0x00000200001f4b9f : je 0x200001f4ba9 ; add rax, rax ; ret
0x00000200001f664c : je 0x200001f666c ; mov rcx, r15 ; call 0x20000042937
0x00000200001f6bc3 : je 0x200001f6bf1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f7059 : je 0x200001f7087 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f7340 : je 0x200001f736e ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001f8a98 : je 0x200001f8ac6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001faf79 : je 0x200001fafa7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fba5c : je 0x200001fba8a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fbf18 : je 0x200001fbf46 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fc1c0 : je 0x200001fc1d6 ; and qword ptr [rcx], rdx ; ret
0x00000200001fc1c9 : je 0x200001fc1d9 ; mov eax, dword ptr [rdx + 4] ; mov qword ptr [rcx], rax ; ret
0x00000200001fc441 : je 0x200001fc46f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fc69c : je 0x200001fc6a5 ; dec eax ; ret
0x00000200001fc681 : je 0x200001fc6b0 ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x00000200001fd866 : je 0x200001fd84d ; shr eax, 0x18 ; ret
0x00000200001fd99c : je 0x200001fd9ca ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fec49 : je 0x200001fec78 ; jo 0x200001fec9e ; add esp, 0x50 ; pop r14 ; ret
0x00000200001ff5e2 : je 0x200001ff610 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fff58 : je 0x200001fff86 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200002006cb : je 0x200002006da ; mov eax, 0xc00000bb ; ret
0x0000020000200bb2 : je 0x20000200bc3 ; mov rcx, r15 ; call 0x2000007ce17
0x000002000020194c : je 0x2000020197a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020197b : je 0x200002019b0 ; mov r8, rdx ; lea edx, dword ptr [rbx + 0x1e] ; call r9
0x0000020000201e74 : je 0x20000201ea2 ; js 0x20000201ec8 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000201ef0 : je 0x20000201f1e ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000202143 : je 0x20000202171 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000202414 : je 0x20000202442 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000202954 : je 0x20000202982 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000202bce : je 0x20000202b9f ; adc byte ptr [rdi + rax - 1], dh ; ret 0x3b41
0x0000020000203a2c : je 0x20000203a34 ; call r8
0x0000020000206eb4 : je 0x20000206ec4 ; mov al, byte ptr [rdx + 0xc6] ; ret
0x0000020000207b9c : je 0x20000207bac ; mov ecx, 1 ; mov eax, ecx ; ret
0x00000200002080e2 : je 0x20000208111 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000020acad : je 0x2000020acdc ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000020b11a : je 0x2000020b148 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000020b82c : je 0x2000020b85a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020b9b3 : je 0x2000020b9c2 ; mov eax, 0xc000000d ; ret
0x000002000020bb5e : je 0x2000020bb8c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020bebd : je 0x2000020bec6 ; xor al, al ; ret
0x000002000020c275 : je 0x2000020c2a4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020cdce : je 0x2000020cdfc ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020db12 : je 0x2000020db40 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000020dd60 : je 0x2000020dd8e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020e1fe : je 0x2000020e22c ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000020e2ce : je 0x2000020e2fc ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020e37e : je 0x2000020e3ac ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020e692 : je 0x2000020e69b ; xor al, al ; ret
0x000002000020e6a2 : je 0x2000020e6a5 ; cmp ecx, 1 ; setle al ; ret
0x000002000021018c : je 0x2000021019b ; ret 0x1a8
0x000002000021018b : je 0x2000021019c ; ret 0x1a8
0x0000020000211748 : je 0x20000211751 ; xor al, al ; ret
0x0000020000211bfd : je 0x20000211c2b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000211f2d : je 0x20000211f5b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000212260 : je 0x2000021228e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200002123b4 : je 0x200002123e2 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000021267b : je 0x200002126a9 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000021456d : je 0x2000021457e ; inc rdi ; inc rdx ; jmp 0x200002145ab
0x000002000021636a : je 0x20000216398 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000217198 : je 0x200002171c6 ; js 0x200002171ec ; add esp, 0x60 ; pop rdi ; ret
0x000002000021723c : je 0x2000021726b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000217337 : je 0x20000217366 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000217ed5 : je 0x20000217f03 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000218369 : je 0x20000218397 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000218481 : je 0x200002184b0 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000218cd2 : je 0x20000218d00 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000218d2b : je 0x20000218d56 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000218da2 : je 0x20000218dd0 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000218e3a : je 0x20000218e68 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000218ef3 : je 0x20000218f22 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000219301 : je 0x2000021932f ; add rsp, 0x30 ; pop rdi ; ret
0x00000200002193b9 : je 0x200002193e7 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000021a728 : je 0x2000021a756 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000021c2c2 : je 0x2000021c2d3 ; dec cl ; mov byte ptr [rax + r8], cl ; ret
0x000002000021c91c : je 0x2000021c94a ; add rsp, 0x30 ; pop rdi ; ret
0x000002000021caec : je 0x2000021cb1a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000021d465 : je 0x2000021d493 ; push 0x50c48348 ; pop rdi ; ret
0x000002000021dceb : je 0x2000021dd19 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000021e54f : je 0x2000021e57e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000021e6a2 : je 0x2000021e6b1 ; mov eax, 0x30 ; ret
0x000002000021ef15 : je 0x2000021ef43 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000021f131 : je 0x2000021f157 ; mov ecx, 2 ; call rax
0x000002000021f440 : je 0x2000021f46e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000021f899 : je 0x2000021f8c7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000022063e : je 0x2000022066c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200002206a1 : je 0x200002206cf ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000220d73 : je 0x20000220d88 ; xor edx, edx ; mov rcx, rbp ; call 0x2000024d009
0x0000020000221074 : je 0x2000022109f ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000022119c : je 0x200002211ca ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000222c4e : je 0x20000222c75 ; and al, byte ptr [rax] ; add r8, rcx ; jmp r8
0x0000020000222e6f : je 0x20000222e9d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000022352c : je 0x2000022355a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000022389d : je 0x200002238cb ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000226792 : je 0x200002267c0 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000226fe3 : je 0x20000227011 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000228aca : je 0x20000228af8 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000228cf5 : je 0x20000228d23 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000022968a : je 0x200002296b8 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000229720 : je 0x2000022974e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000022aa25 : je 0x2000022aa53 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000022b425 : je 0x2000022b453 ; push 0x40c48348 ; pop rdi ; ret
0x000002000022bf88 : je 0x2000022bfb6 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000022c01e : je 0x2000022c04c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000022c0c1 : je 0x2000022c0ef ; add rsp, 0x20 ; pop rdi ; ret
0x000002000022c7a9 : je 0x2000022c7b8 ; xor eax, eax ; xchg dword ptr [rcx + 0x1c], eax ; ret
0x000002000022d848 : je 0x2000022d876 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000022dcbc : je 0x2000022dcea ; add rsp, 0x30 ; pop rdi ; ret
0x000002000022f49d : je 0x2000022f4ad ; mov rcx, r14 ; call rax
0x0000020000230275 : je 0x2000023027f ; add dword ptr [rcx], r11d ; ret
0x0000020000230341 : je 0x20000230370 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200002309de : je 0x20000230a0c ; push rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000231573 : je 0x20000231582 ; mov eax, 0xc00000bb ; ret
0x0000020000233235 : je 0x20000233263 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000023505f : je 0x2000023508d ; js 0x200002350b3 ; add esp, 0x50 ; pop rdi ; ret
0x000002000023732b : je 0x200002372f2 ; mov eax, r10d ; jmp 0x20000237338
0x0000020000237856 : je 0x20000237885 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000237f28 : je 0x20000237f56 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000239b1e : je 0x20000239b4c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200002425d0 : je 0x200002425e3 ; jmp 0x200002425bf
0x00000200003c736d : je 0x200003c7398 ; js 0x200003c735e ; ret
0x00000200003c7af3 : je 0x200003c7b21 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003c8be9 : je 0x200003c8c17 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003c90fa : je 0x200003c9128 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003c98c4 : je 0x200003c98ca ; call rcx
0x00000200003ca66b : je 0x200003ca678 ; add rsp, 0x28 ; ret
0x00000200003cc0c3 : je 0x200003cc0f1 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003cc972 : je 0x200003cc9a0 ; js 0x200003cc9c6 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003cd1f2 : je 0x200003cd1fc ; mov al, r10b ; ret
0x00000200003cd1f2 : je 0x200003cd1fd ; mov al, r10b ; ret
0x00000200003cd8a9 : je 0x200003cd8d7 ; add rsp, 0x30 ; pop rbp ; ret
0x00000200003ce128 : je 0x200003ce153 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003cf4de : je 0x200003cf50c ; js 0x200003cf532 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003cfa47 : je 0x200003cfa75 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003cfc52 : je 0x200003cfc80 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003d01bc : je 0x200003d01b7 ; ret
0x00000200003d251b : je 0x200003d2549 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003d322f : je 0x200003d325d ; jo 0x200003d3283 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003d3cac : je 0x200003d3cda ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003d02d8 : je 0x200003d7260 ; ret
0x00000200003d03e0 : je 0x200003d72c5 ; ret
0x00000200003d3c55 : je 0x200003d7e47 ; mov al, 1 ; ret
0x00000200003d82cb : je 0x200003d82fa ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003d931d : je 0x200003d934b ; jo 0x200003d9371 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003da1a6 : je 0x200003da1d4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003db173 : je 0x200003db1a1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003dc3b4 : je 0x200003dc3c3 ; mov ecx, ebx ; call 0x200006686aa
0x00000200003dc6f3 : je 0x200003dc6f9 ; call rcx
0x00000200003dc6fe : je 0x200003dc72c ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003ddae4 : je 0x200003ddb12 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003de835 : je 0x200003de863 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003df309 : je 0x200003df337 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003e0149 : je 0x200003e0177 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003e1e90 : je 0x200003e1ebe ; push 0x50c48348 ; pop rdi ; ret
0x00000200003e1f38 : je 0x200003e1f66 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003e1fa7 : je 0x200003e1fd5 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003e2c6d : je 0x200003e2c4d ; call 0x2000011ef6c
0x00000200003e5595 : je 0x200003e5559 ; mov al, 0x19 ; add byte ptr [rax], al ; call 0x200000057d1
0x00000200003e5edd : je 0x200003e5f09 ; and byte ptr [rdx + rcx*4 - 0x7f], al ; ret 6
0x00000200003e61c2 : je 0x200003e622b ; mov rdx, r13 ; mov rcx, rdi ; call r12
0x00000200003e63ca : je 0x200003e63f8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003e654a : je 0x200003e6556 ; call 0x200000071f1
0x00000200003e6601 : je 0x200003e662f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003e723a : je 0x200003e7269 ; jmp 0x200005834d6
0x00000200003e77a3 : je 0x200003e77d1 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003e94b2 : je 0x200003e9493 ; xor al, al ; ret
0x00000200003e94a8 : je 0x200003e94b2 ; mov dword ptr [rcx], edx ; mov al, 1 ; ret
0x00000200003ea368 : je 0x200003ea379 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200003ebe00 : je 0x200003ebe2e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003ec6f7 : je 0x200003ec725 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003ed40b : je 0x200003ed414 ; xor eax, eax ; ret
0x00000200003eda3a : je 0x200003eda68 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003ee518 : je 0x200003ee546 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003ef9bb : je 0x200003ef9ca ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003efade : je 0x200003efb0c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003f0120 : je 0x200003f014e ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003f040f : je 0x200003f043d ; jo 0x200003f0463 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003f20e1 : je 0x200003f210f ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003f2a18 : je 0x200003f2a46 ; js 0x200003f2a6c ; add esp, 0x50 ; pop rdi ; ret
0x00000200003f2e4c : je 0x200003f2e7a ; jo 0x200003f2ea0 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003f3887 : je 0x200003f38b5 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200003f396e : je 0x200003f399c ; jo 0x200003f39c2 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003f3a02 : je 0x200003f3a30 ; push 0x50c48348 ; pop rdi ; ret
0x00000200003f4aee : je 0x200003f4b1c ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003f4e42 : je 0x200003f4e70 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003f5102 : je 0x200003f5130 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003f52ac : je 0x200003f52da ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003f6fc4 : je 0x200003f6ff2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003f8e26 : je 0x200003f8e51 ; mov qword ptr [r8], rax ; mov eax, r9d ; ret
0x00000200003f9e7a : je 0x200003f9ea8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003fa067 : je 0x200003fa095 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003fa941 : je 0x200003fa96f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003fb9d7 : je 0x200003fba06 ; and al, ch ; jns 0x200003fb9bd ; sar bh, 0x8b ; ret
0x00000200003fc58a : je 0x200003fc5b8 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003fcae1 : je 0x200003fcb0f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003fd5e1 : je 0x200003fd610 ; mov dword ptr [rsp + 0x68], r11d ; call r10
0x00000200003fd7be : je 0x200003fd7ec ; push 0x50c48348 ; pop rdi ; ret
0x00000200003ff60f : je 0x200003ff63e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003ff80c : je 0x200003ff81e ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x00000200003ff80c : je 0x200003ff81f ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x00000200003ffcc8 : je 0x200003ffcf6 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003ffcfc : je 0x200003ffd08 ; mov rcx, rbx ; call rax
0x0000020000400aa2 : je 0x20000400acc ; js 0x20000400a35 ; ret
0x0000020000401433 : je 0x20000401461 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000401507 : je 0x20000401535 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004016e6 : je 0x20000401714 ; js 0x2000040173a ; add esp, 0x50 ; pop rdi ; ret
0x0000020000401ebb : je 0x20000401ec0 ; ret
0x0000020000401ea8 : je 0x20000401ed6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000402227 : je 0x20000402255 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000040245f : je 0x2000040248d ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004029b5 : je 0x200004029e3 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000040491f : je 0x20000404958 ; mov eax, r10d ; ret
0x000002000040491f : je 0x20000404959 ; mov eax, r10d ; ret
0x0000020000405ae3 : je 0x20000405b11 ; js 0x20000405b37 ; add esp, 0x60 ; pop rdi ; ret
0x00000200004083dd : je 0x2000040840c ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000408d11 : je 0x20000408d3f ; js 0x20000408d65 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004099a1 : je 0x200004099cf ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000409a31 : je 0x20000409a40 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000040aa4e : je 0x2000040aa53 ; ret
0x000002000040abda : je 0x2000040ac08 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000040de77 : je 0x2000040dea5 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000040fd90 : je 0x2000040fdbe ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000592528 : je 0x2000040fe96 ; mov al, 1 ; ret
0x0000020000410025 : je 0x20000410053 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000411003 : je 0x20000411019 ; mov rax, qword ptr [rcx] ; mov rax, qword ptr [rax + 0x20] ; ret
0x0000020000415a16 : je 0x20000415a45 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000415fb1 : je 0x20000415fdf ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000416066 : je 0x20000416094 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004160f5 : je 0x20000416123 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004163d1 : je 0x200004163ff ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004170ce : je 0x200004170fd ; push 0x40c48348 ; pop r15 ; ret
0x0000020000418743 : je 0x20000418771 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000041d576 : je 0x2000041d5a0 ; xor bh, bh ; ret
0x000002000041f7c0 : je 0x2000041f7ef ; js 0x2000041f815 ; add esp, 0x50 ; pop r15 ; ret
0x0000020000420357 : je 0x2000042037d ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000042082b : je 0x20000420859 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000420bc2 : je 0x20000420bed ; sub byte ptr [rax - 0x7f], cl ; ret
0x0000020000422e52 : je 0x20000422e80 ; jo 0x20000422ea6 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000423a30 : je 0x20000423a5e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042490c : je 0x2000042493a ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000424adb : je 0x20000424b06 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000042514b : je 0x2000042518e ; add rsp, 0x28 ; ret
0x0000020000425202 : je 0x20000425230 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004252c1 : je 0x200004252ef ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042557d : je 0x20000425590 ; mov al, r9b ; add rsp, 0x28 ; ret
0x0000020000426411 : je 0x200004263f7 ; ret
0x0000020000426450 : je 0x2000042647e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004288ab : je 0x200004288d9 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000428fa8 : je 0x20000428fc0 ; mov rdx, rcx ; mov rcx, qword ptr [rdi + 8] ; call rax
0x0000020000429541 : je 0x20000429570 ; push 0x40c48348 ; pop r15 ; ret
0x0000020000429e46 : je 0x20000429e74 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042adb2 : je 0x2000042ade1 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000042be62 : je 0x2000042be7b ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000042bf1d : je 0x2000042bf0d ; xor al, al ; ret
0x000002000042bf1c : je 0x2000042bf0e ; xor al, al ; ret
0x000002000042bfeb : je 0x2000042c019 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042d48e : je 0x2000042d4bd ; push 0x40c48348 ; pop r15 ; ret
0x000002000042ee20 : je 0x2000042ee4e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042ef2d : je 0x2000042ef5b ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000042f552 : je 0x2000042f580 ; push 0x40c48348 ; pop rdi ; ret
0x000002000042f6ca : je 0x2000042f6f9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004300c6 : je 0x200004300c3 ; or dword ptr [rdx], eax ; ret
0x0000020000430a82 : je 0x20000430ab0 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000043130b : je 0x20000431339 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000431521 : je 0x20000431550 ; js 0x20000431576 ; add esp, 0x50 ; pop r15 ; ret
0x00000200004315ba : je 0x200004315e8 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000431711 : je 0x2000043173f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000431b6d : je 0x20000431b9c ; push rax ; mov rcx, rbx ; call 0x2000005c1b9
0x0000020000432319 : je 0x20000432347 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000433b77 : je 0x20000433b80 ; mov al, 1 ; ret
0x0000020000433dfd : je 0x20000433e2b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004340cd : je 0x200004340f8 ; and al, ch ; ret
0x000002000043431d : je 0x2000043434c ; js 0x20000434372 ; add esp, 0x50 ; pop r15 ; ret
0x000002000043651a : je 0x20000436548 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000438631 : je 0x2000043865f ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000438e63 : je 0x20000438e92 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000439078 : je 0x20000439007 ; ret 0x33ff
0x0000020000439212 : je 0x20000439223 ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000043927a : je 0x20000439287 ; add rsp, 0x28 ; ret
0x000002000043943b : je 0x20000439469 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043a902 : je 0x2000043a907 ; ret
0x000002000043a901 : je 0x2000043a908 ; ret
0x000002000043a900 : je 0x2000043a909 ; ret
0x000002000043a8ff : je 0x2000043a90a ; ret
0x000002000043a8e0 : je 0x2000043a90e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043a9e4 : je 0x2000043aa12 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043b207 : je 0x2000043b232 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000043b9af : je 0x2000043b9dd ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043be9a : je 0x2000043bec8 ; js 0x2000043beee ; add esp, 0x50 ; pop rdi ; ret
0x000002000043c1ff : je 0x2000043c208 ; xor al, al ; ret
0x000002000043d05c : je 0x2000043d076 ; mov r8, rdx ; mov rdx, r10 ; jmp r11
0x000002000043d147 : je 0x2000043d176 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000043d302 : je 0x2000043d330 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000043e26c : je 0x2000043e271 ; ret
0x000002000043e3d8 : je 0x2000043e3e4 ; or dword ptr [rcx], 4 ; xor eax, eax ; ret
0x000002000043ea60 : je 0x2000043ea8e ; add rsp, 0x30 ; pop rdi ; ret
0x000002000043fb87 : je 0x2000043fbb6 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043fe07 : je 0x2000043fe11 ; mov qword ptr [r9], rax ; ret
0x000002000044176f : je 0x2000044179d ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000044179d : je 0x200004417cb ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000441949 : je 0x20000441977 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000441b77 : je 0x20000441ba1 ; js 0x20000441b0a ; ret
0x000002000044267a : je 0x200004426a8 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000442874 : je 0x20000442881 ; add rax, 0x10 ; ret
0x0000020000442c9d : je 0x20000442ccb ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004433ca : je 0x200004433f8 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000443ac1 : je 0x20000443aef ; push 0x50c48348 ; pop rdi ; ret
0x0000020000444ca0 : je 0x20000444cce ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000445531 : je 0x2000044555f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000445782 : je 0x20000445795 ; xchg qword ptr [rcx + 0x1c8], rdx ; ret
0x000002000044593b : je 0x20000445969 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000445a73 : je 0x20000445aa1 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000445aff : je 0x20000445b2d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000446948 : je 0x20000446958 ; mov rcx, rsi ; call r14
0x0000020000446a92 : je 0x20000446ac0 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000446ce7 : je 0x20000446d15 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000447a27 : je 0x20000447a55 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000447d47 : je 0x20000447d54 ; lea rax, qword ptr [rcx + 0x4c] ; ret
0x00000200004487f3 : je 0x20000448821 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000448ec0 : je 0x20000448eee ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000449041 : je 0x20000449070 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004498cf : je 0x200004498fd ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000044ab95 : je 0x2000044aba2 ; add rsp, 0x28 ; ret
0x000002000044afff : je 0x2000044b02d ; add rsp, 0x30 ; pop rdi ; ret
0x000002000044b549 : je 0x2000044b578 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000044b971 : je 0x2000044b980 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000044b9e4 : je 0x2000044ba12 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000044c7ff : je 0x2000044c82e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000044dfb1 : je 0x2000044dfdc ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000044f308 : je 0x2000044f336 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000044fa08 : je 0x2000044f9e2 ; ret 0x40ff
0x00000200004503e6 : je 0x20000450414 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000450e53 : je 0x20000450e81 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004519c9 : je 0x200004519f7 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000451fc3 : je 0x20000451fbf ; dec dword ptr [rcx + 0x23] ; ret 0x3d48
0x00000200004529b9 : je 0x200004529e7 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000452f1f : je 0x20000452f4d ; push 0x40c48348 ; pop rdi ; ret
0x00000200004532c5 : je 0x200004532f3 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000453b39 : je 0x20000453b67 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004549b9 : je 0x200004549c8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000454dea : je 0x20000454e09 ; add rcx, 0x60 ; call 0x2000007f5c5
0x0000020000454e11 : je 0x20000454e1a ; xor eax, eax ; ret
0x00000200004557ba : je 0x200004557e8 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000455ab7 : je 0x20000455ab8 ; mov eax, 0xc0000718 ; ret
0x00000200004562c0 : je 0x200004562ee ; pop rax ; add rsp, 0x30 ; pop rbp ; ret
0x00000200004565f5 : je 0x20000456620 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000045681e : je 0x20000456826 ; jmp rax
0x00000200004573e2 : je 0x20000457411 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000457b0a : je 0x20000457b38 ; push 0x50c48348 ; pop rdi ; ret
0x00000200004582a1 : je 0x200004582cf ; jo 0x200004582f5 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004583ce : je 0x200004583fc ; js 0x20000458422 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000458c1c : je 0x20000458c2d ; mov rcx, qword ptr [rbp - 9] ; call rax
0x00000200005bd107 : je 0x20000459480 ; jmp 0x20000459346
0x00000200005bd12e : je 0x20000459480 ; jmp 0x2000045934e
0x00000200004596db : je 0x20000459709 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000459ff8 : je 0x2000045a026 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000045a4a1 : je 0x2000045a4cf ; push 0x50c48348 ; pop rdi ; ret
0x000002000045cae3 : je 0x2000045cb10 ; and byte ptr [rcx - 0x75], cl ; iretd ; call r14
0x000002000045d914 : je 0x2000045d942 ; jo 0x2000045d968 ; add esp, 0x50 ; pop rdi ; ret
0x000002000045dd16 : je 0x2000045dd40 ; jo 0x2000045dca9 ; ret
0x000002000045e4d6 : je 0x2000045e504 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000045e756 : je 0x2000045e784 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000045f32b : je 0x2000045f359 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000045fc65 : je 0x2000045fc93 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000460bca : je 0x20000460bd2 ; jmp r10
0x00000200004623c8 : je 0x200004623f6 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004629a2 : je 0x20000462975 ; xor eax, eax ; ret
0x0000020000462980 : je 0x20000462984 ; ret
0x0000020000462998 : je 0x2000046299c ; ret
0x0000020000464a3a : je 0x20000464a47 ; movzx eax, word ptr [rax + 8] ; ret
0x0000020000466a48 : je 0x20000466a77 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004685fc : je 0x20000468629 ; push -0x48f0e115 ; ret
0x0000020000469c64 : je 0x20000469c78 ; lea rdx, qword ptr [r13 - 0x30] ; mov rcx, r13 ; call rax
0x000002000046add8 : je 0x2000046ade0 ; call r8
0x000002000046ae04 : je 0x2000046ae29 ; call 0x2000009a735
0x000002000046ae5f : je 0x2000046ae8d ; add rsp, 0x30 ; pop rdi ; ret
0x000002000046bfa5 : je 0x2000046bf9f ; ret
0x000002000046d362 : je 0x2000046d390 ; jo 0x2000046d3b6 ; add esp, 0x60 ; pop rdi ; ret
0x000002000046ddef : je 0x2000046ddf3 ; ret
0x000002000046fcf7 : je 0x2000046fd26 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000472666 : je 0x20000472694 ; jo 0x200004726ba ; add esp, 0x50 ; pop rdi ; ret
0x00000200004728a0 : je 0x200004728ce ; push 0x70c48348 ; pop rsi ; ret
0x000002000047529e : je 0x200004752af ; xor al, al ; add rsp, 8 ; ret
0x00000200004afdd7 : je 0x200004790e8 ; xor al, al ; ret
0x000002000047949a : je 0x200004794c5 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000481adf : je 0x20000481ae8 ; xor al, al ; ret
0x0000020000488cfc : je 0x20000488d2a ; js 0x20000488d50 ; add esp, 0x50 ; pop rdi ; ret
0x000002000048f617 : je 0x2000048f621 ; call r12
0x000002000049103a : je 0x20000490db5 ; jmp 0x200005cd324
0x0000020000492228 : je 0x20000492256 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004922ae : je 0x200004922dd ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000492e0f : je 0x20000492e3d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000493415 : je 0x20000493443 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000494d37 : je 0x20000494d65 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000495502 : je 0x20000495530 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000049563f : je 0x2000049566d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000049569a : je 0x200004956c8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004958ee : je 0x2000049591c ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004959fb : je 0x20000495a29 ; push 0x40c48348 ; pop rdi ; ret
0x00000200004978c5 : je 0x200004978f3 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000498a08 : je 0x20000498d9f ; call 0x20000494ce8
0x0000020000499203 : je 0x20000499231 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000049a7f3 : je 0x2000049a822 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000049ca93 : je 0x2000049cac1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000049d24d : je 0x2000049d27b ; push 0x40c48348 ; pop rdi ; ret
0x000002000049e907 : je 0x2000049e935 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000049f31f : je 0x2000049f34d ; mov dword ptr [rdx], r8d ; mov eax, ecx ; ret
0x000002000049fae2 : je 0x2000049fb10 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004a2f18 : je 0x200004a2f2a ; ret
0x00000200004a2f13 : je 0x200004a2f41 ; cmp ecx, 1 ; je 0x200004a2f2f ; ret
0x00000200004a33e2 : je 0x200004a33ef ; add rax, -0x10 ; ret
0x00000200004a384a : je 0x200004a3878 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004a51a2 : je 0x200004a51d0 ; push 0x50c48348 ; pop rdi ; ret
0x00000200004a6543 : je 0x200004a6527 ; cmp r8, rax ; ja 0x200004a653b ; ret
0x00000200004a91df : je 0x200004a91ec ; lea rax, qword ptr [rcx + 0x24] ; ret
0x00000200004a91f7 : je 0x200004a9204 ; lea rax, qword ptr [rcx + 0x20] ; ret
0x00000200004aa103 : je 0x200004aa112 ; mov eax, 0x40000 ; ret
0x00000200004aa1a1 : je 0x200004aa1cf ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004aa1f4 : je 0x200004aa202 ; cmp rdx, rcx ; jb 0x200004aa203 ; ret
0x00000200004aa4ff : je 0x200004aa52d ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004aba26 : je 0x200004aba54 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004abe51 : je 0x200004abe7f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004acf5f : je 0x200004acf8d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004adc01 : je 0x200004adc2f ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004b149e : je 0x200004b14cc ; push 0x50c48348 ; pop rdi ; ret
0x00000200004b4d4b : je 0x200004b4d2f ; mov eax, 3 ; ret
0x00000200004b84f2 : je 0x200004b8520 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004b8698 : je 0x200004b86c6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004b8760 : je 0x200004b878e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004bab44 : je 0x200004bab49 ; ret
0x00000200004bcfe3 : je 0x200004bd011 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004bd071 : je 0x200004bd07e ; call rax
0x00000200004bd057 : je 0x200004bd085 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005d7072 : je 0x200004bd3a1 ; mov rcx, rdi ; call rax
0x00000200004bd816 : je 0x200004bd82a ; lea rcx, qword ptr [rbx + 0x38] ; call 0x200000e5729
0x00000200004bdcf5 : je 0x200004bdd09 ; lea rcx, qword ptr [rbx + 0x38] ; call 0x200000e5729
0x00000200004bdea6 : je 0x200004bded4 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004be760 : je 0x200004be78e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004c1087 : je 0x200004c10b2 ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200004c144a : je 0x200004c1475 ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200004c16fb : je 0x200004c1750 ; mov rcx, r14 ; call 0x200000e8068
0x00000200004c330f : je 0x200004c333a ; and byte ptr [rbp - 0x75], cl ; ret
0x00000200004c52cf : je 0x200004c52f0 ; mov rdi, rax ; jmp 0x200004c529e
0x00000200004c5dd4 : je 0x200004c5e03 ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200004c6eaa : je 0x200004c6ec1 ; mov rcx, rdi ; call 0x200000e7218
0x00000200004c7148 : je 0x200004c7159 ; call 0x200000e7da5
0x00000200004c754e : je 0x200004c755a ; call 0x200000e7da5
0x00000200004cd929 : je 0x200004cd957 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004cecfc : je 0x200004ced2a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004cf752 : je 0x200004cf780 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004d6df4 : je 0x200004d6e0b ; mov r8, rbx ; mov rdx, r14 ; call rax
0x00000200004d7162 : je 0x200004d7179 ; mov r8, r12 ; mov rdx, rsi ; call rax
0x00000200004de0f2 : je 0x200004de106 ; mov rcx, qword ptr [rsp + 0x40] ; call rax
0x00000200004df9c4 : je 0x200004df9d8 ; mov rcx, qword ptr [rsp + 0x38] ; call rax
0x00000200004e144e : je 0x200004e147c ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004e2aec : je 0x200004e2af6 ; call rax
0x00000200004e3384 : je 0x200004e3392 ; lea rdx, qword ptr [rcx - 0x30] ; call rax
0x00000200004e33e4 : je 0x200004e339c ; mov rcx, qword ptr [rdi - 8] ; mov rdx, rdi ; call qword ptr [rax]
0x00000200004e354f : je 0x200004e357d ; jo 0x200004e35a3 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004e5c17 : je 0x200004e5c45 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004e6e44 : je 0x200004e6e50 ; mov rcx, rsi ; call rdx
0x00000200004e70de : je 0x200004e710c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004e715e : je 0x200004e718c ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004e9ff9 : je 0x200004e9ffa ; mov eax, 0xc000000d ; ret
0x00000200004edba5 : je 0x200004edbd4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ee9f8 : je 0x200004eea26 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f0116 : je 0x200004f0144 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f0f3d : je 0x200004f0f6b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f2970 : je 0x200004f299e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f2a9b : je 0x200004f2ac6 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004f2b40 : je 0x200004f2b6e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f349e : je 0x200004f34cc ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f350f : je 0x200004f351e ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004f35c1 : je 0x200004f35ef ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f363b : je 0x200004f3669 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f38ab : je 0x200004f38d9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f3922 : je 0x200004f3950 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f3a3f : je 0x200004f3a6d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f51d5 : je 0x200004f5203 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f573c : je 0x200004f576a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f625f : je 0x200004f628d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f651a : je 0x200004f6548 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f681c : je 0x200004f67f3 ; dec dword ptr [rdx + 0x18] ; ret
0x00000200004f689a : je 0x200004f68c8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f6d18 : je 0x200004f6d46 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f9b45 : je 0x200004f9b73 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004fa2d2 : je 0x200004fa2e1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004faa5e : je 0x200004faa8c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004fb1a8 : je 0x200004fb1d6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004fc98d : je 0x200004fc9bc ; js 0x200004fc9e2 ; add esp, 0x50 ; pop r15 ; ret
0x00000200004fca3e : je 0x200004fca57 ; mov ecx, dword ptr [rcx + 8] ; call rax
0x00000200004fe393 : je 0x200004fe3a0 ; add rax, 0x10 ; ret
0x00000200004fe376 : je 0x200004fe3a4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004ff0f4 : je 0x200004ff122 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005000ab : je 0x200004ffc16 ; call rax
0x000002000050012f : je 0x200004fff59 ; mov ecx, eax ; call r9
0x000002000050264c : je 0x2000050267a ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005028fb : je 0x20000502925 ; and al, 0xff ; ret 0xc2eb
0x00000200005029d9 : je 0x200005029e6 ; add rsp, 0x28 ; ret
0x0000020000503706 : je 0x20000503734 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000503deb : je 0x20000503e19 ; js 0x20000503e3f ; add esp, 0x60 ; pop rdi ; ret
0x0000020000503fc4 : je 0x20000503ff2 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000504191 : je 0x200005041a2 ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000504190 : je 0x200005041a3 ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000504624 : je 0x20000504652 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000504a7f : je 0x20000504aad ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000506527 : je 0x20000506555 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005065cb : je 0x200005065f9 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000506c36 : je 0x20000506c64 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000507b65 : je 0x20000507b93 ; push 0x50c48348 ; pop rdi ; ret
0x000002000050816a : je 0x20000508198 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000050908e : je 0x200005090bd ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000050b68c : je 0x2000050b6ba ; add rsp, 0x30 ; pop rdi ; ret
0x000002000050c248 : je 0x2000050c276 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000050e1e7 : je 0x2000050e1ec ; ret
0x000002000050e78d : je 0x2000050e7bc ; jo 0x2000050e7e2 ; add esp, 0x50 ; pop r14 ; ret
0x000002000050ed94 : je 0x2000050edc2 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000050f882 : je 0x2000050f8b0 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000050fce6 : je 0x2000050fd14 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000513f5b : je 0x20000513f89 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005143ca : je 0x200005143dd ; xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200005149b3 : je 0x200005149b8 ; ret
0x00000200005155db : je 0x20000515609 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000515ff8 : je 0x20000516048 ; ret 0x48ff
0x00000200005172c0 : je 0x2000051724f ; ret
0x00000200005172da : je 0x20000517308 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005175cb : je 0x200005175f9 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051762f : je 0x2000051765d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000517934 : je 0x20000517962 ; push 0x50c48348 ; pop rdi ; ret
0x000002000051870a : je 0x20000518710 ; call rax
0x00000200005187b6 : je 0x200005187e4 ; jo 0x2000051880a ; add esp, 0x50 ; pop rdi ; ret
0x00000200005189f7 : je 0x200005189fd ; call rax
0x00000200005197f2 : je 0x20000519800 ; mov cl, dil ; call rax
0x000002000051a0d6 : je 0x2000051a104 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000051a60b : je 0x2000051a63a ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000051af51 : je 0x2000051af80 ; push 0x40c48348 ; pop r15 ; ret
0x000002000051b0f1 : je 0x2000051b11f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000051bb68 : je 0x2000051bb96 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051bd61 : je 0x2000051bd71 ; call 0x20000401ec1
0x000002000051bd7d : je 0x2000051bd89 ; call 0x20000149835
0x000002000051be72 : je 0x2000051bea0 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051bfb1 : je 0x2000051bfdf ; add rsp, 0x30 ; pop rdi ; ret
0x000002000051c2b0 : je 0x2000051c2da ; js 0x2000051c243 ; ret
0x000002000051dc35 : je 0x2000051dc3b ; call rax
0x000002000051dd18 : je 0x2000051dd46 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000051f0ea : je 0x2000051f0f6 ; call 0x20000148075
0x000002000051f2d6 : je 0x2000051f2e2 ; call 0x20000148075
0x000002000051f46a : je 0x2000051f47e ; mov rcx, qword ptr [rbp + 0x58] ; call 0x20000148079
0x000002000051fb0c : je 0x2000051fb3a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000520307 : je 0x20000520335 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005215a7 : je 0x200005215b7 ; xor edx, edx ; call 0x20000148297
0x0000020000521701 : je 0x20000521713 ; jbe 0x20000521710 ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x0000020000521701 : je 0x20000521714 ; jbe 0x20000521711 ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x0000020000521b35 : je 0x20000521b43 ; ret
0x0000020000521e53 : je 0x20000521e5f ; call 0x20000148075
0x00000200005220a2 : je 0x200005220ae ; call 0x20000148075
0x0000020000522157 : je 0x20000522163 ; call 0x20000148075
0x0000020000522305 : je 0x20000522311 ; call 0x20000148075
0x000002000052262b : je 0x20000522659 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000052438e : je 0x200005243bc ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005248ea : je 0x200005248c2 ; mov rdx, qword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x00000200005257c7 : je 0x200005257d9 ; mov rcx, r15 ; call 0x20000148078
0x0000020000526830 : je 0x2000052685e ; push 0x40c48348 ; pop rdi ; ret
0x0000020000527398 : je 0x200005273c6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000527f7b : je 0x20000527fa9 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005298c6 : je 0x200005298f5 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000052a156 : je 0x2000052a184 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000052a46f : je 0x2000052a49a ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000052ab0c : je 0x2000052ab3a ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000052b7a8 : je 0x2000052b7d6 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000052bc58 : je 0x2000052bc93 ; call 0x20000147f54
0x000002000052c910 : je 0x2000052c93f ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x000002000052cb87 : je 0x2000052cbb5 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000052cc34 : je 0x2000052cc03 ; call rax
0x000002000052cd56 : je 0x2000052cd84 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000052d42a : je 0x2000052d458 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000052daf1 : je 0x2000052db20 ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000052dc10 : je 0x2000052dbbd ; call rax
0x000002000052dec6 : je 0x2000052def4 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000052dfeb : je 0x2000052e019 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000052e818 : je 0x2000052e846 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000052ea18 : je 0x2000052ea46 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000052fc97 : je 0x2000052fc9c ; ret
0x00000200005304a1 : je 0x200005304ae ; add rsp, 0x28 ; ret
0x0000020000530991 : je 0x20000530997 ; call rax
0x00000200005309c1 : je 0x200005309f9 ; mov cl, byte ptr [rip - 0x22f071] ; call rax
0x0000020000530d1b : je 0x20000530d49 ; js 0x20000530d6f ; add esp, 0x60 ; pop rdi ; ret
0x0000020000532157 : je 0x20000532185 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000532e69 : je 0x20000532e97 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000535364 : je 0x20000535392 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005356ee : je 0x2000053571c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000535df1 : je 0x20000535e1f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000537883 : je 0x200005378b1 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000537d68 : je 0x20000537d96 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000538113 : je 0x20000538119 ; call rax
0x00000200005383db : je 0x20000538409 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005eaba8 : je 0x2000053ab64 ; mov rcx, rsi ; call rdx
0x000002000053add6 : je 0x2000053ae04 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000053ae1d : je 0x2000053ae14 ; xor eax, eax ; ret
0x000002000053aeec : je 0x2000053af1a ; js 0x2000053af40 ; add esp, 0x60 ; pop rdi ; ret
0x000002000053d5fe : je 0x2000053d60a ; mov dword ptr [r8], eax ; mov al, 1 ; ret
0x000002000053e3c1 : je 0x2000053e3ef ; add rsp, 0x20 ; pop rdi ; ret
0x000002000053e567 : je 0x2000053e595 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000053e88a : je 0x2000053e8b8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000053eb50 : je 0x2000053eb7e ; push 0x50c48348 ; pop rdi ; ret
0x000002000053fe3d : je 0x2000053fe6b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000540003 : je 0x20000540031 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005406eb : je 0x20000540719 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000054081e : je 0x2000054084d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000540ed9 : je 0x20000540f07 ; js 0x20000540f2d ; add esp, 0x60 ; pop rdi ; ret
0x0000020000541d6e : je 0x20000541d9d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000542f7e : je 0x20000542fac ; add rsp, 0x20 ; pop rdi ; ret
0x000002000054332a : je 0x20000543358 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005437ae : je 0x200005437d8 ; jo 0x20000543741 ; ret
0x0000020000543806 : je 0x20000543834 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000543a57 : je 0x20000543a85 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000543abe : je 0x20000543aec ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005443f2 : je 0x20000544401 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000544db7 : je 0x20000544dc0 ; mov al, 1 ; ret
0x000002000054517e : je 0x200005451ac ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000545248 : je 0x20000545276 ; jo 0x2000054529c ; add esp, 0x50 ; pop rdi ; ret
0x0000020000545ad6 : je 0x20000545b04 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000546922 : je 0x20000546950 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000054699a : je 0x200005469c8 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000054758a : je 0x200005475b8 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005476c6 : je 0x200005476f4 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000547fac : je 0x20000547fdb ; add rsp, 0x20 ; pop r15 ; ret
0x00000200005480ef : je 0x2000054811d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005481bd : je 0x200005481eb ; add rsp, 0x20 ; pop rdi ; ret
0x000002000054a296 : je 0x2000054a2c4 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000054b111 : je 0x2000054b140 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000054b59d : je 0x2000054b5cb ; push 0x40c48348 ; pop rdi ; ret
0x000002000054bb5b : je 0x2000054bb89 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000054d42d : je 0x2000054d45b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000054fcee : je 0x2000054fd1c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005528e7 : je 0x20000552916 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000553002 : je 0x200005530cf ; mov rcx, rbx ; call rax
0x00000200005549d0 : je 0x200005549d5 ; ret
0x0000020000554a9b : je 0x20000554ac6 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000555cfc : je 0x20000555d2a ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000557c5c : je 0x20000557c8a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000055824d : je 0x2000055825c ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000558ea0 : je 0x20000558ece ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000558f37 : je 0x20000558f65 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000559338 : je 0x20000559366 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000559e5d : je 0x20000559e8b ; add rsp, 0x20 ; pop rdi ; ret
0x000002000055a26a : je 0x2000055a298 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000055c298 : je 0x2000055c2c6 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000055c305 : je 0x2000055c333 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000055c398 : je 0x2000055c3c6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000055c857 : je 0x2000055c882 ; sub byte ptr [rbp - 0x76], al ; ret
0x000002000055c961 : je 0x2000055c98f ; sub byte ptr [rcx - 0x78], al ; or dword ptr [rbp - 0x76], eax ; ret
0x000002000055ca3b : je 0x2000055ca69 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000055d6d1 : je 0x2000055d6ff ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000055e5c4 : je 0x2000055e5f2 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000055e6a9 : je 0x2000055e6d7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005602a3 : je 0x200005602d1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000561031 : je 0x2000056105f ; push 0x40c48348 ; pop rdi ; ret
0x0000020000561224 : je 0x20000561252 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005621da : je 0x20000562208 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000056238f : je 0x200005623bd ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000562f80 : je 0x20000562fae ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005fb976 : je 0x2000056366c ; xor eax, eax ; ret
0x000002000056386e : je 0x2000056389c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000564306 : je 0x20000564334 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005650e5 : je 0x20000565113 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005651b6 : je 0x200005651e5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005652a2 : je 0x200005652b5 ; add byte ptr [rax + 1], bh ; ret
0x00000200005652a1 : je 0x200005652b6 ; add byte ptr [rax + 1], bh ; ret
0x00000200005657ef : je 0x2000056581d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000565ee5 : je 0x20000565ef1 ; mov dword ptr [r9], r8d ; mov eax, r10d ; ret
0x0000020000565ee5 : je 0x20000565ef2 ; mov dword ptr [r9], r8d ; mov eax, r10d ; ret
0x0000020000566d15 : je 0x20000566d43 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000567256 : je 0x20000567284 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005676b4 : je 0x200005676e2 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000567b13 : je 0x20000567b41 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005685d0 : je 0x200005685fe ; jo 0x20000568624 ; add esp, 0x50 ; pop rdi ; ret
0x000002000056891f : je 0x2000056894d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000568d05 : je 0x20000568d33 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000568fb3 : je 0x20000568fe1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000056938c : je 0x200005693ba ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000569536 : je 0x2000056953b ; ret
0x00000200005695c7 : je 0x200005695cc ; ret
0x00000200005819e1 : je 0x200005819b0 ; jmp 0x200005819ab
0x00000200005a2445 : je 0x200005a2474 ; and al, ch ; pop rbx ; or cl, byte ptr [rdi] ; add dh, dh ; ret
0x00000200005a2483 : je 0x200005a24b2 ; and al, ch ; sbb eax, 0xf6000f0a ; ret
0x00000200005a748f : je 0x200005a741e ; ret 0x8d48
0x000002000045661e : je 0x200005b0498 ; xor eax, eax ; ret
0x000002000051c5d3 : je 0x200005b3bf6 ; xor al, al ; ret
0x00000200005ba53b : je 0x200005ba549 ; mov rcx, qword ptr [rbp + 0x30] ; call rdx
0x00000200005bada8 : je 0x200005badbd ; lea rcx, qword ptr [rsp + 0x20] ; call 0x20000467021
0x00000200005baf95 : je 0x200005bafa0 ; call 0x200006b721c
0x00000200005bafd4 : je 0x200005bafdf ; call 0x200006b721c
0x00000200005baffa : je 0x200005bb005 ; call 0x200006b721c
0x00000200005cced0 : je 0x200005ccede ; mov rcx, r12 ; call rax
0x0000020000490308 : je 0x200005ccf75 ; mov rcx, rbp ; call rax
0x0000020000497592 : je 0x200005ced1c ; ret
0x00000200005e5f96 : je 0x200005e5fb4 ; mov rcx, rsi ; call 0x2000020cc90
0x00000200005e9420 : je 0x200005e9418 ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200005e9ea8 : je 0x200005e9e87 ; ret 0x8bff
0x000002000053b04a : je 0x200005ead32 ; ret
0x00000200005ebdb4 : je 0x200005ebdbf ; call 0x20000148074
0x00000200005f80c1 : je 0x200005f80f0 ; cmp byte ptr [rbx + rcx*4 - 0x3d], al ; mov rdx, r14 ; call rax
0x0000020000561883 : je 0x200005fb252 ; ret
0x00000200005fe997 : je 0x200005fe9c5 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000600147 : je 0x2000060014f ; mov dword ptr [rdx], eax ; ret
0x000002000060012f : je 0x2000060015d ; push 0x40c48348 ; pop rdi ; ret
0x0000020000604323 : je 0x20000604351 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000604728 : je 0x20000604756 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000604862 : je 0x20000604890 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000605183 : je 0x200006051b1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006066d2 : je 0x20000606700 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000606e64 : je 0x20000606e92 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006078e9 : je 0x20000607917 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000607b1d : je 0x20000607b4c ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000608374 : je 0x200006083a2 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000609bad : je 0x20000609bdb ; push 0x50c48348 ; pop rdi ; ret
0x000002000060bd2f : je 0x2000060bd59 ; js 0x2000060bd36 ; ret
0x000002000060d50e : je 0x2000060d53c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000060e6e7 : je 0x2000060e715 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000060ffdd : je 0x2000061000b ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006100ee : je 0x200006100f7 ; xor eax, eax ; ret
0x0000020000611d88 : je 0x20000611d3e ; ret
0x00000200006130e5 : je 0x20000613113 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006131ad : je 0x200006131dc ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000613df9 : je 0x20000613e27 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000614670 : je 0x2000061469e ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000616ee1 : je 0x20000616f0f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006183fe : je 0x2000061842c ; pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x000002000061b696 : je 0x2000061b6c4 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000061bb5f : je 0x2000061bb8d ; push 0x50c48348 ; pop rdi ; ret
0x000002000061bcb7 : je 0x2000061bce5 ; push 0x50c48348 ; pop rdi ; ret
0x000002000061c848 : je 0x2000061c876 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000061dfa7 : je 0x2000061dfd5 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000621365 : je 0x20000621375 ; mov edx, esi ; call 0x2000024d007
0x0000020000621d57 : je 0x20000621d85 ; js 0x20000621dab ; add esp, 0x60 ; pop rdi ; ret
0x000002000062264a : je 0x20000622652 ; jmp qword ptr [rax]
0x0000020000622ab9 : je 0x20000622ae7 ; jo 0x20000622b0d ; add esp, 0x50 ; pop rdi ; ret
0x0000020000622f34 : je 0x20000622f3b ; je 0x20000622f41 ; inc edx ; jmp 0x20000622f56
0x0000020000622f36 : je 0x20000622f3f ; inc edx ; jmp 0x20000622f54
0x0000020000623827 : je 0x20000623855 ; js 0x2000062387b ; add esp, 0x50 ; pop rdi ; ret
0x0000020000623aea : je 0x20000623b5c ; lea ecx, dword ptr [rdx - 0x27] ; call 0x2000024da48
0x0000020000623ca8 : je 0x20000623d17 ; call 0x2000024d005
0x0000020000623d74 : je 0x20000623de3 ; call 0x2000024da45
0x0000020000623f5d : je 0x20000623f8b ; add rsp, 0x20 ; pop rdi ; ret
0x000002000062456f : je 0x2000062459d ; js 0x200006245c3 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006245be : je 0x200006245cd ; mov eax, 0xc0000001 ; ret
0x0000020000624716 : je 0x20000624744 ; push 0x40c48348 ; pop rdi ; ret
0x00000200006247d2 : je 0x20000624800 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000625434 : je 0x20000625462 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006255bb : je 0x200006255cb ; xor edx, edx ; call 0x2000024d007
0x0000020000625a22 : je 0x20000625a32 ; xor edx, edx ; call 0x2000024d007
0x0000020000626529 : je 0x20000626539 ; xor edx, edx ; call 0x2000024d007
0x00000200006265c8 : je 0x20000626640 ; ret 0xebff
0x0000020000627b5c : je 0x20000627b6c ; xor edx, edx ; call 0x2000024d007
0x000002000062854a : je 0x20000628578 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000628c78 : je 0x20000628c88 ; xor edx, edx ; call 0x2000024d007
0x000002000062960a : je 0x20000629638 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006296e5 : je 0x20000629713 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000629a34 : je 0x20000629a44 ; xor edx, edx ; call 0x2000024d007
0x0000020000629bba : je 0x20000629c3b ; xor edx, edx ; call 0x2000024d007
0x0000020000629da1 : je 0x20000629db1 ; xor edx, edx ; call 0x2000024d007
0x0000020000629e69 : je 0x20000629e79 ; xor edx, edx ; call 0x2000024d007
0x000002000062ae51 : je 0x2000062ae80 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000062af4d : je 0x2000062af5c ; mov eax, 0xc0000120 ; ret
0x000002000062c277 : je 0x2000062c2a6 ; jo 0x2000062c2cc ; add esp, 0x50 ; pop r14 ; ret
0x000002000062c4e2 : je 0x2000062c4f1 ; mov eax, 0xc0000001 ; ret
0x000002000062e129 : je 0x2000062e157 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000062e41a : je 0x2000062e448 ; jo 0x2000062e46e ; add esp, 0x50 ; pop rdi ; ret
0x000002000062e919 : je 0x2000062e92d ; mov rdx, qword ptr [rbx + 8] ; mov ecx, eax ; call r8
0x000002000062f368 : je 0x2000062f396 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000063121e : je 0x2000063124c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006328d9 : je 0x20000632907 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000632dbf : je 0x20000632ded ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000635c96 : je 0x20000635ca4 ; call qword ptr [rip - 0x3ded6e]
0x000002000063a2dc : je 0x2000063a30b ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000063d91e : je 0x2000063d94c ; js 0x2000063d972 ; add esp, 0x60 ; pop rdi ; ret
0x000002000063f858 : je 0x2000063f813 ; ret
0x00000200006404f0 : je 0x20000640571 ; ret 0x89ff
0x0000020000644425 : je 0x20000644453 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000646a3f : je 0x20000646a6d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000646ebd : je 0x20000646eeb ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000646f6a : je 0x20000646f98 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000647ab5 : je 0x20000647abb ; call rax
0x0000020000647c50 : je 0x20000647c7e ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000648806 : je 0x2000064887f ; mov rcx, qword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x0000020000648b2b : je 0x20000648b59 ; js 0x20000648b7f ; add esp, 0x50 ; pop rdi ; ret
0x00000200006493fb : je 0x2000064942a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000064eb16 : je 0x2000064eb44 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000064f243 : je 0x2000064f271 ; jo 0x2000064f297 ; add esp, 0x50 ; pop rdi ; ret
0x000002000064f83e : je 0x2000064f86c ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000064f996 : je 0x2000064f9c4 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000651e0b : je 0x20000651e39 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006539fb : je 0x20000653a29 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000653c39 : je 0x20000653c48 ; mov eax, 0xc0000303 ; ret
0x0000020000653d67 : je 0x20000653d95 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000655053 : je 0x20000655081 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000655466 : je 0x20000655494 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006586e8 : je 0x20000658716 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000658e1c : je 0x20000658e4a ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000659648 : je 0x20000659676 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000065beca : je 0x2000065bef8 ; jo 0x2000065bf1e ; add esp, 0x50 ; pop rdi ; ret
0x000002000065d1e7 : je 0x2000065d215 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000065d5bb : je 0x2000065d5e6 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000065d6be : je 0x2000065d6ec ; add rsp, 0x20 ; pop rdi ; ret
0x000002000065e82b : je 0x2000065e859 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000065e8b7 : je 0x2000065e8e6 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065ee5a : je 0x2000065ee88 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000662763 : je 0x20000662791 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000664751 : je 0x2000066477f ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006647ef : je 0x200006647f8 ; xor eax, eax ; ret
0x00000200006647d4 : je 0x20000664802 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006647ea : je 0x20000664817 ; cmp eax, 0xa ; je 0x200006647fd ; xor eax, eax ; ret
0x000002000066482f : je 0x2000066483a ; mov rax, qword ptr [rdx] ; ret
0x00000200006665b0 : je 0x200006665de ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066670a : je 0x20000666738 ; js 0x2000066675e ; add esp, 0x50 ; pop rdi ; ret
0x0000020000667eaa : je 0x20000667ed8 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000667f67 : je 0x20000667f95 ; js 0x20000667fbb ; add esp, 0x60 ; pop rdi ; ret
0x000002000066a05f : je 0x2000066a08d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000066a807 : je 0x2000066a835 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066bc1f : je 0x2000066bc4d ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066db2d : je 0x2000066db5b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066e8b4 : je 0x2000066e8e2 ; lea rcx, qword ptr [rdi + 0x28] ; call 0x2000051ab5c
0x000002000066ea84 : je 0x2000066eab2 ; push 0x50c48348 ; pop rdi ; ret
0x000002000066ec1e : je 0x2000066ec4c ; jo 0x2000066ec72 ; add esp, 0x50 ; pop rdi ; ret
0x000002000066ef2e : je 0x2000066ef5d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000067078e : je 0x200006707bc ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000670b0f : je 0x20000670b3d ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000670d65 : je 0x20000670d7a ; mov edx, ebx ; mov rcx, rdi ; call 0x2000024d009
0x0000020000671599 : je 0x200006715c7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006715cb : je 0x200006715de ; mov rax, qword ptr [rcx] ; add rax, 8 ; ret
0x00000200006718d8 : je 0x20000671906 ; push 0x40c48348 ; pop rdi ; ret
0x00000200006719d2 : je 0x20000671a00 ; push 0x40c48348 ; pop rdi ; ret
0x0000020000672497 : je 0x200006724c5 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000672515 : je 0x20000672543 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006739fb : je 0x20000673a29 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000674d56 : je 0x20000674d84 ; js 0x20000674daa ; add esp, 0x60 ; pop rdi ; ret
0x0000020000675fd2 : je 0x20000675fd8 ; call rax
0x0000020000676f18 : je 0x20000676f46 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006778e8 : je 0x20000677916 ; js 0x2000067793c ; add esp, 0x60 ; pop rdi ; ret
0x0000020000677c16 : je 0x20000677c44 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006782c4 : je 0x200006782f2 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000678cd6 : je 0x20000678cdc ; call rax
0x0000020000678f6c : je 0x20000678f9a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006797b3 : je 0x200006797e1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000067a05a : je 0x2000067a088 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000067a16c : je 0x2000067a19b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000067a44d : je 0x2000067a47b ; push 0x50c48348 ; pop rdi ; ret
0x000002000067a4c9 : je 0x2000067a4f7 ; push 0x50c48348 ; pop rdi ; ret
0x000002000067ab95 : je 0x2000067abc3 ; push 0x40c48348 ; pop rdi ; ret
0x000002000067ae81 : je 0x2000067aeb0 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000067afdc : je 0x2000067b00a ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067b2eb : je 0x2000067b319 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067b423 : je 0x2000067b439 ; cmp rcx, rdx ; ja 0x2000067b436 ; mov al, 1 ; ret
0x000002000067b414 : je 0x2000067b442 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067be9e : je 0x2000067becc ; add rsp, 0x20 ; pop rdi ; ret
0x000002000067cd2e : je 0x2000067cd5c ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067cddd : je 0x2000067ce0b ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067d291 : je 0x2000067d2bf ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006802a8 : je 0x200006802b2 ; and eax, 0x1f ; ret
0x0000020000680b55 : je 0x20000680b7f ; push rax ; inc edx ; jmp 0x20000680b3d
0x0000020000681275 : je 0x200006812a3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006816b4 : je 0x200006816e2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006818ba : je 0x200006818c0 ; call rdx
0x000002000068192e : je 0x2000068192a ; test rcx, rcx ; jne 0x2000068192d ; xor al, al ; ret
0x0000020000681f25 : je 0x20000681f53 ; js 0x20000681f79 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000682764 : je 0x20000682792 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000682ad1 : je 0x20000682aff ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000683db8 : je 0x20000683dc8 ; mov rdx, qword ptr [r8 + 0x10] ; call r9
0x0000020000683dd5 : je 0x20000683de5 ; mov rdx, qword ptr [rdx + 0x10] ; call r8
0x0000020000684186 : je 0x2000068419c ; mov rcx, rbp ; call rax
0x0000020000684250 : je 0x2000068425c ; mov rcx, rdi ; call rax
0x00000200006843d4 : je 0x200006843e3 ; mov eax, 0xc0000004 ; ret
0x00000200006843ec : je 0x200006843fb ; mov eax, 0xc000000d ; ret
0x00000200006843eb : je 0x200006843fc ; mov eax, 0xc000000d ; ret
0x00000200006843ea : je 0x200006843fd ; mov eax, 0xc000000d ; ret
0x0000020000684402 : je 0x20000684411 ; mov eax, 0xc0000189 ; ret
0x0000020000684de2 : je 0x20000684e10 ; push 0x50c48348 ; pop rdi ; ret
0x000002000068510b : je 0x20000685139 ; jo 0x2000068515f ; add esp, 0x50 ; pop rdi ; ret
0x0000020000685f89 : je 0x20000685fb7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006862ab : je 0x200006862d9 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000687e2f : je 0x20000687e49 ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006882be : je 0x200006882ec ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000688cf0 : je 0x20000688d1e ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000068956f : je 0x2000068959d ; and byte ptr [rip - 0x7ffffffb], ah ; ret
0x000002000068e329 : je 0x2000068e357 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000068ee1a : je 0x2000068ee48 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000068fa44 : je 0x2000068fa72 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000068ff58 : je 0x2000068ff86 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006936ce : je 0x200006936fc ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006937fd : je 0x2000069382b ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000693824 : je 0x2000069385c ; add rax, rdx ; jmp 0x20000693833
0x000002000069384f : je 0x20000693860 ; test cl, cl ; jne 0x20000693860 ; mov al, 1 ; ret
0x0000020000693ca2 : je 0x20000693ccc ; sub bh, bh ; ret
0x00000200006942a8 : je 0x200006942d6 ; push 0x50c48348 ; pop rdi ; ret
0x00000200006954b8 : je 0x200006954e7 ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000695f20 : je 0x20000695f4e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006964bf : je 0x200006964ed ; add rsp, 0x20 ; pop rdi ; ret
0x000002000069716b : je 0x2000069717a ; mov eax, 0xc0000034 ; ret
0x00000200006982ce : je 0x200006982fc ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000698467 : je 0x20000698495 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000699489 : je 0x200006994bd ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006994e1 : je 0x200006994ea ; mov al, 1 ; ret
0x00000200006994f8 : je 0x20000699517 ; xor al, al ; add rsp, 0x28 ; ret
0x000002000069b94a : je 0x2000069b978 ; jo 0x2000069b99e ; add esp, 0x50 ; pop rdi ; ret
0x000002000069c0d5 : je 0x2000069c103 ; push 0x40c48348 ; pop rdi ; ret
0x000002000069d93a : je 0x2000069d969 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000069f48a : je 0x2000069f4b8 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006a0307 : je 0x200006a0335 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006a0a0b : je 0x200006a0a39 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006a543c : je 0x200006a544c ; call 0x200000f82dd
0x00000200006a68a4 : je 0x200006a68d3 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200006a694a : je 0x200006a6978 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006a779c : je 0x200006a77ca ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006a7cde : je 0x200006a7cd0 ; xchg dword ptr [rcx + 0x2c], r8d ; xor eax, eax ; ret
0x00000200006a7f6c : je 0x200006a7f9a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006aa8ba : je 0x200006aa8e8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006ac7bf : je 0x200006ac7ed ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006ad02c : je 0x200006ad091 ; lea rdx, qword ptr [rsp + 0x58] ; call rax
0x00000200006ad0c1 : je 0x200006ad0ef ; push 0x40c48348 ; pop rdi ; ret
0x00000200006ad428 : je 0x200006ad456 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006ae1f9 : je 0x200006ae208 ; mov eax, 0xc000000d ; ret
0x00000200006ae818 : je 0x200006ae846 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006aebc5 : je 0x200006aebf3 ; and byte ptr [rbx - 0x74dbdbac], cl ; ret 0x8d4c
0x00000200006afdf3 : je 0x200006afe03 ; mov ecx, dword ptr [rsp + 0x28] ; mov dword ptr [rdx], ecx ; ret
0x00000200006b0939 : je 0x200006b0967 ; push 0x50c48348 ; pop rdi ; ret
0x00000200006b0db7 : je 0x200006b0dc4 ; mov dword ptr [r8], eax ; mov eax, r9d ; ret
0x00000200006b1105 : je 0x200006b1133 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b20c9 : je 0x200006b20f7 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006b3778 : je 0x200006b37a6 ; js 0x200006b37cc ; add esp, 0x50 ; pop rdi ; ret
0x00000200006b3ee9 : je 0x200006b3f18 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200006b4447 : je 0x200006b4475 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006b4613 : je 0x200006b4622 ; mov eax, 0xc0000002 ; ret
0x00000200006b4633 : je 0x200006b4642 ; mov eax, 0xc0000002 ; ret
0x00000200006b563f : je 0x200006b564e ; mov eax, 0xc0000002 ; ret
0x00000200006b562e : je 0x200006b565c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b565b : je 0x200006b566a ; mov eax, 0xc0000002 ; ret
0x00000200006b5868 : je 0x200006b5896 ; js 0x200006b58bc ; add esp, 0x60 ; pop rdi ; ret
0x00000200006b5dcd : je 0x200006b5dfb ; js 0x200006b5e21 ; add esp, 0x60 ; pop rdi ; ret
0x00000200006b5ede : je 0x200006b5f0c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006b65c6 : je 0x200006b65f4 ; push 0x50c48348 ; pop rdi ; ret
0x00000200006b82f7 : je 0x200006b8325 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b8b30 : je 0x200006b8b5f ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200006bb641 : je 0x200006bb66f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006bb94c : je 0x200006bb97a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006bc08c : je 0x200006bc04a ; ret
0x00000200006bcbbb : je 0x200006bcbe9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006bd129 : je 0x200006bd157 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006bd814 : je 0x200006bd826 ; mov rcx, rax ; call r8
0x00000200006bda17 : je 0x200006bda21 ; call rax
0x00000200006be1b7 : je 0x200006be1e6 ; sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x00000200006c1710 : je 0x200006c1722 ; mov rcx, rax ; call r8
0x00000200006c1978 : je 0x200006c198a ; mov rcx, rax ; call r8
0x00000200006c1d50 : je 0x200006c1e16 ; mov rcx, r14 ; call rax
0x00000200006c2f87 : je 0x200006c2fb2 ; and byte ptr [rcx - 0x48], al ; call qword ptr [rbx]
0x00000200006c32d0 : je 0x200006c32fe ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c4b09 : je 0x200006c4b37 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c5340 : je 0x200006c536e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c6a35 : je 0x200006c6a63 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006c6b14 : je 0x200006c6b42 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006c7414 : je 0x200006c7423 ; mov eax, 3 ; ret
0x00000200006c7436 : je 0x200006c7445 ; mov eax, 4 ; ret
0x00000200006c744c : je 0x200006c745b ; mov eax, 1 ; ret
0x00000200006c901c : je 0x200006c904b ; js 0x200006c9071 ; add esp, 0x50 ; pop r15 ; ret
0x00000200006c9882 : je 0x200006c98b0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c9c89 : je 0x200006c9cb7 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006c9da4 : je 0x200006c9dd2 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006c9f7d : je 0x200006c9fab ; push 0x40c48348 ; pop rdi ; ret
0x00000200006ca4e6 : je 0x200006ca514 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006ca6cd : je 0x200006ca6fb ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006ca8a8 : je 0x200006ca8d6 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006caa70 : je 0x200006caa9f ; push 0x40c48348 ; pop r15 ; ret
0x00000200006cae2c : je 0x200006cae5a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006cb43f : je 0x200006cb46d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006cc57c : je 0x200006cc5aa ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006cd50d : je 0x200006cd53b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006cda18 : je 0x200006cda46 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006cdf56 : je 0x200006cdf84 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006cdfc8 : je 0x200006cdff6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006cf041 : je 0x200006cf070 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200006d22ee : je 0x200006d231c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006d272b : je 0x200006d2759 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006d2e3c : je 0x200006d2e6a ; jo 0x200006d2e90 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006d3d56 : je 0x200006d3d85 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200006d497d : je 0x200006d49ac ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006d8664 : je 0x200006d8692 ; jo 0x200006d86b8 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006d886c : je 0x200006d889a ; jo 0x200006d88c0 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006dbe04 : je 0x200006dbe0f ; call 0x20000148074
0x00000200006dc287 : je 0x200006dc2b1 ; call r10
0x00000200006dc9c1 : je 0x200006dc9ef ; push 0x50c48348 ; pop rdi ; ret
0x00000200006dd05f : je 0x200006dd08d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006dda37 : je 0x200006dda65 ; jo 0x200006dda8b ; add esp, 0x50 ; pop rdi ; ret
0x00000200006e0f5c : je 0x200006e0f8a ; push 0x50c48348 ; pop rdi ; ret
0x00000200006e3b9a : je 0x200006e3bc8 ; jo 0x200006e3bee ; add esp, 0x50 ; pop rdi ; ret
0x00000200006e3cb2 : je 0x200006e3ce0 ; jo 0x200006e3d06 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006e5c0f : je 0x200006e5c3d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006e7026 : je 0x200006e7055 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200006e7f97 : je 0x200006e7fc5 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006e8540 : je 0x200006e856f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006e91e5 : je 0x200006e9213 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006f374a : je 0x200006f3757 ; add rsp, 0x28 ; ret
0x00000200006f387c : je 0x200006f38a7 ; cmp byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200006f3f6a : je 0x200006f3f98 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006f40f6 : je 0x200006f40ec ; mov al, 1 ; ret
0x00000200006f40e6 : je 0x200006f40ef ; xor al, al ; ret
0x00000200006f40e5 : je 0x200006f40f0 ; xor al, al ; ret
0x00000200006f4646 : je 0x200006f4655 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200006f5038 : je 0x200006f5066 ; push 0x40c48348 ; pop rdi ; ret
0x00000200006f6af7 : je 0x200006f6b25 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006f701c : je 0x200006f704a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006fedd1 : je 0x200006fedff ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006ff0af : je 0x200006ff0dd ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006ff33a : je 0x200006ff368 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000701884 : je 0x200007018b2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000702260 : je 0x2000070228e ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000702d9c : je 0x20000702dca ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000703237 : je 0x20000703265 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000703328 : je 0x20000703356 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000070338a : je 0x200007033b8 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007033f4 : je 0x20000703422 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000070388e : je 0x200007038ba ; adc byte ptr [rcx + rcx*4 + 0x1a], cl ; ret
0x0000020000703af7 : je 0x20000703b25 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007041f8 : je 0x20000704226 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007048c7 : je 0x200007048d0 ; xor eax, eax ; ret
0x0000020000705237 : je 0x20000705265 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007052d5 : je 0x20000705303 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000070539c : je 0x200007053ca ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000070592b : je 0x20000705959 ; push 0x40c48348 ; pop rdi ; ret
0x0000020000706386 : je 0x20000706392 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000706478 : je 0x200007064a6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007068af : je 0x200007068dd ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000706c4d : je 0x20000706c7b ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000706cdc : je 0x20000706d0a ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000706d6a : je 0x20000706d98 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000706df9 : je 0x20000706e27 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000706e94 : je 0x20000706ec2 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000707007 : je 0x20000707035 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000070707c : je 0x200007070aa ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000707762 : je 0x2000070778d ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000707d92 : je 0x20000707dc1 ; push rax ; add rsp, 0x30 ; pop rdi ; jmp rax
0x0000020000707e4f : je 0x20000707e7e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000070861a : je 0x20000708649 ; push rax ; add rsp, 0x30 ; pop rdi ; jmp rax
0x0000020000708b12 : je 0x20000708b8e ; mov r8d, edi ; call rax
0x000002000070906e : je 0x2000070907a ; mov cl, r9b ; call rax
0x000002000070a29d : je 0x2000070a2cb ; add rsp, 0x30 ; pop rdi ; ret
0x000002000070a2cf : je 0x2000070a2d0 ; mov dword ptr [r8], r9d ; ret
0x000002000070a5cc : je 0x2000070a5fa ; add rsp, 0x20 ; pop rdi ; ret
0x000002000070a6f1 : je 0x2000070a71f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000070a7bd : je 0x2000070a7eb ; add rsp, 0x30 ; pop rdi ; ret
0x000002000070a83c : je 0x2000070a847 ; xor ecx, ecx ; mov rax, rcx ; ret
0x000002000070a9dd : je 0x2000070aa0b ; add rsp, 0x30 ; pop rdi ; ret
0x000002000070abd1 : je 0x2000070abff ; add rsp, 0x30 ; pop rdi ; ret
0x000002000070b2df : je 0x2000070b2ef ; call 0x200000414d1
0x000002000070c06a : je 0x2000070c072 ; jmp rax
0x000002000070c6b5 : je 0x2000070c6e3 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000070cecc : je 0x2000070cefa ; add rsp, 0x20 ; pop rdi ; ret
0x000002000070ee80 : je 0x2000070eeae ; add rsp, 0x30 ; pop rdi ; ret
0x000002000070f101 : je 0x2000070f10a ; xor eax, eax ; ret
0x000002000070f0fc : je 0x2000070f114 ; cmp edx, 1 ; je 0x2000070f10f ; xor eax, eax ; ret
0x000002000070f389 : je 0x2000070f3b7 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000070f444 : je 0x2000070f45b ; mov rcx, rbx ; call rax
0x000002000070f4ac : je 0x2000070f4b5 ; call rax
0x000002000070f509 : je 0x2000070f537 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000070f558 : je 0x2000070f56f ; mov rcx, rdi ; call rax
0x000002000070f574 : je 0x2000070f586 ; mov rdx, rbx ; mov rcx, rdi ; call rax
0x000002000070f5cf : je 0x2000070f5df ; mov rcx, rbx ; call rax
0x000002000070f5e4 : je 0x2000070f5f6 ; mov edx, edi ; mov rcx, rbx ; call rax
0x000002000070f6df : je 0x2000070f6eb ; mov rcx, rdi ; call rax
0x000002000070f6f7 : je 0x2000070f703 ; mov rcx, rdi ; call rax
0x000002000070f750 : je 0x2000070f75c ; mov rcx, rdi ; call rax
0x000002000070f761 : je 0x2000070f773 ; mov rdx, rbx ; mov rcx, rdi ; call rax
0x0000020000710335 : je 0x20000710363 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007104a1 : je 0x200007104cf ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000710724 : je 0x20000710753 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000711138 : je 0x20000711166 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000711207 : je 0x20000711235 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000711407 : je 0x20000711435 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000071180f : je 0x2000071183d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000711f2b : je 0x20000711f3a ; mov eax, 1 ; ret
0x0000020000712038 : je 0x20000712066 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000712106 : je 0x20000712134 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007121b3 : je 0x200007121e1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000071225f : je 0x2000071228d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000712450 : je 0x2000071247e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000071259a : je 0x200007125c8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007140dc : je 0x2000071410a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000071418a : je 0x200007141b8 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007143f2 : je 0x20000714420 ; push 0x40c48348 ; pop rdi ; ret
0x00000200007164bc : je 0x200007164c5 ; xor eax, eax ; ret
0x00000200007167bb : je 0x200007167e9 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000716d51 : je 0x20000716d59 ; xor eax, eax ; ret
0x0000020000717b82 : je 0x20000717bb0 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000071871f : je 0x2000071874d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000718e9e : je 0x20000718ecc ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200007192fb : je 0x20000719329 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200007193a3 : je 0x200007193d1 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000719fea : je 0x20000719ffa ; cmp dl, al ; jne 0x20000719ffa ; xor eax, eax ; ret
0x000002000071ab44 : je 0x2000071ab72 ; js 0x2000071ab98 ; add esp, 0x60 ; pop rdi ; ret
0x000002000071aeb3 : je 0x2000071aee1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000071b063 : je 0x2000071b091 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000071b852 : je 0x2000071b864 ; add rsp, 0x30 ; pop rbx ; jmp r10
0x000002000071bc40 : je 0x2000071bc6e ; push 0x50c48348 ; pop rdi ; ret
0x000002000071bf76 : je 0x2000071bfa4 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000071d306 : je 0x2000071d334 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000071d3f9 : je 0x2000071d427 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000071ddb7 : je 0x2000071dde5 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000721ded : je 0x20000721e1b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000722135 : je 0x20000722164 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200007263b7 : je 0x200007263e6 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000726c0a : je 0x20000726c38 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000726d40 : je 0x20000726d6e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007284e6 : je 0x20000728514 ; push rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000072868c : je 0x200007286bb ; add rsp, 0x20 ; pop r14 ; ret
0x00000200007289ab : je 0x200007289d9 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000072a7f9 : je 0x2000072a827 ; and byte ptr [rcx + rcx*4 + 0x7c], al ; and al, 0x2c ; call rax
0x000002000072b12c : je 0x2000072b15a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000072bc3f : je 0x2000072bc6d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000072c2c5 : je 0x2000072c2d6 ; mov eax, dword ptr [rcx + 0x44] ; mov dword ptr [r8], eax ; ret
0x0000020000792de3 : je 0x20000792e11 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000793fc7 : je 0x20000793ff5 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000794c76 : je 0x20000794ca4 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000795388 : je 0x200007953fd ; mov dh, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x000002000079736d : je 0x20000797381 ; mov rbx, qword ptr [rsp + 8] ; mov rax, r10 ; ret
0x00000200007990d0 : je 0x200007990fe ; add rsp, 0x20 ; pop rdi ; ret
0x000002000079e6a0 : je 0x2000079e6ce ; push 0x50c48348 ; pop rdi ; ret
0x000002000079f2d0 : je 0x2000079f2fe ; jo 0x2000079f324 ; add esp, 0x50 ; pop rdi ; ret
0x000002000079ffe9 : je 0x200007a0017 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007a14b3 : je 0x200007a14e1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007a25e1 : je 0x200007a260f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007a2dbe : je 0x200007a2dec ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200007a3a61 : je 0x200007a3a8f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007a5a95 : je 0x200007a5ac3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007a5b66 : je 0x200007a5b90 ; and al, ch ; ret 0x9a26
0x00000200007a60bb : je 0x200007a60e9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007a61a3 : je 0x200007a61d1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007a7731 : je 0x200007a775f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007a7902 : je 0x200007a7930 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007a7a01 : je 0x200007a7a2f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007ac20b : je 0x200007ac239 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007acd4f : je 0x200007acd49 ; ret 0xf08
0x00000200007ad9ab : je 0x200007ad9d8 ; sub byte ptr [rax - 0x75], cl ; fdiv st(7) ; ret
0x00000200007ad9e9 : je 0x200007ada17 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007ae166 : je 0x200007ae178 ; mov rcx, rax ; call 0x200003d02e8
0x00000200007ae7f0 : je 0x200007ae81e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007aea04 : je 0x200007aea32 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007b0135 : je 0x200007b0163 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007b0da7 : je 0x200007b0dd5 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007b0fba : je 0x200007b0fe8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007b15eb : je 0x200007b1619 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007b1b94 : je 0x200007b1bc2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007b1c3b : je 0x200007b1c69 ; js 0x200007b1c8f ; add esp, 0x60 ; pop rdi ; ret
0x00000200007b2b27 : je 0x200007b2acb ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000200007b2fe4 : je 0x200007b3012 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007b49de : je 0x200007b4a0c ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007b5363 : je 0x200007b5391 ; jo 0x200007b53b7 ; add esp, 0x50 ; pop rdi ; ret
0x00000200007b6279 : je 0x200007b6217 ; inc dword ptr [rbx] ; ret
0x00000200007b6486 : je 0x200007b64b5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200007b6c43 : je 0x200007b6c71 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007bbebf : je 0x200007bbeed ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000079fe49 : je 0x200007c57b4 ; ret
0x00000200007ceffa : je 0x200007cf028 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007cfa19 : je 0x200007cfa47 ; push 0x40c48348 ; pop rdi ; ret
0x00000200007d0b68 : je 0x200007d0b96 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007d26e0 : je 0x200007d26ef ; mov eax, 1 ; ret
0x00000200007d455f : je 0x200007d458d ; js 0x200007d45b3 ; add esp, 0x60 ; pop rdi ; ret
0x00000200007d4f50 : je 0x200007d4f61 ; or eax, 0xffffffff ; ret
0x00000200007d558d : je 0x200007d55bb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000092fb : jg 0x2000000930f ; ret 0xb8c3
0x0000020000026421 : jg 0x20000026434 ; test eax, eax ; js 0x20000026433 ; mov dword ptr [r10], ecx ; ret
0x000002000003b89e : jg 0x2000003b8a5 ; add byte ptr [rax + 0x3b], cl ; ret 0x2877
0x00000200000401af : jg 0x200000401b6 ; add byte ptr [rcx + 0x3b], cl ; ret 0x577
0x00000200000402e6 : jg 0x200000402ed ; add byte ptr [rax + 0x3b], cl ; ret 0xc77
0x0000020000042788 : jg 0x2000004278f ; add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200000427d0 : jg 0x200000427d7 ; add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x0000020000052b9d : jg 0x20000052ba2 ; ret
0x000002000005a1eb : jg 0x2000005a1f2 ; in eax, dx ; push qword ptr [rsp + rsi*2 - 0xa] ; ret 0xf08
0x00000200000855ed : jg 0x2000008564e ; or eax, dword ptr [rax] ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000092a95 : jg 0x20000092a9c ; add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x0000020000092bf4 : jg 0x20000092bfb ; add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x0000020000092c33 : jg 0x20000092c3a ; add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x0000020000094f6d : jg 0x20000094f77 ; add byte ptr [rax + 0x3b], cl ; ror dword ptr [rdi], -0x7d ; ret
0x00000200000a398b : jg 0x200000a391a ; ret
0x00000200000b7d5f : jg 0x200000b7d64 ; dec dword ptr [rax - 0x75] ; ret
0x00000200000b7d5e : jg 0x200000b7d65 ; dec dword ptr [rax - 0x75] ; ret
0x00000200000c759f : jg 0x200000c75a6 ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x00000200000c771b : jg 0x200000c7722 ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x00000200000c7a0c : jg 0x200000c7a13 ; add byte ptr [rax + 0x3b], cl ; ret 0xc77
0x00000200000c7ae9 : jg 0x200000c7af0 ; add byte ptr [rax + 0x3b], cl ; ret 0x1f77
0x00000200000dc4ce : jg 0x200000dc4c8 ; ret
0x00000200000f518f : jg 0x200000f5196 ; add byte ptr [rax + 0x3b], cl ; ret 0xc77
0x00000200000fa054 : jg 0x200000fa075 ; mov eax, 1 ; ret
0x00000200000fb6a5 : jg 0x200000fb6ac ; add byte ptr [rax + 0x3b], cl ; ret 0x2d77
0x0000020000109e40 : jg 0x20000109e4b ; add qword ptr [rdx + 8], -8 ; ret
0x00000200001175c1 : jg 0x200001175db ; test dword ptr [rdx], edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000139bb0 : jg 0x20000139bc4 ; ret 0xccc3
0x000002000013b271 : jg 0x2000013b2c3 ; sub eax, ecx ; shr rax, 0x3f ; ret
0x000002000013b84d : jg 0x2000013b847 ; ret
0x000002000013d9df : jg 0x2000013d9d9 ; ret
0x000002000015553d : jg 0x20000155556 ; add byte ptr [rax], al ; nop ; ret
0x0000020000155a3d : jg 0x20000155a51 ; add byte ptr [rax], al ; nop ; ret
0x000002000015e78d : jg 0x2000015e794 ; add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x000002000016f513 : jg 0x2000016f51a ; add byte ptr [rbp + 3], cl ; ret 0x3b48
0x0000020000190354 : jg 0x2000019035b ; add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x00000200001903ee : jg 0x200001903f5 ; add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x0000020000190574 : jg 0x2000019057b ; add byte ptr [rbp + 3], cl ; ret
0x0000020000190fb6 : jg 0x20000190fbd ; add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x0000020000191550 : jg 0x20000191557 ; add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x0000020000191641 : jg 0x20000191648 ; add byte ptr [rbp + 3], cl ; ret 0x3b4c
0x0000020000198859 : jg 0x20000198850 ; push rsi ; ret 0x741e
0x0000020000198880 : jg 0x20000198878 ; inc dword ptr [rbp - 0x75] ; ret
0x000002000019887f : jg 0x20000198879 ; inc dword ptr [rbp - 0x75] ; ret
0x000002000019ea58 : jg 0x2000019ea5f ; add byte ptr [rax + 0x3b], cl ; ret 0x577
0x00000200001a29c8 : jg 0x200001a2a43 ; or al, byte ptr [rcx - 1] ; ret 0x834a
0x00000200001b254e : jg 0x200001b2555 ; add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200001d312d : jg 0x200001d3146 ; add byte ptr [rax], al ; ret
0x00000200001d6e6d : jg 0x200001d6eef ; int1 ; inc dword ptr [rbp - 0x76] ; ret 0x8b48
0x00000200001dbadf : jg 0x200001dbae6 ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x00000200001e0f40 : jg 0x200001e0fbe ; sbb al, 0x8b ; add al, 0xb ; ret
0x00000200001e5124 : jg 0x200001e51a2 ; and al, 0x8b ; add al, 0xb ; ret
0x00000200001fcd99 : jg 0x200001fcd2e ; mov r11b, 0x89 ; add dword ptr [rax - 0x75], ecx ; ret
0x00000200001fcd98 : jg 0x200001fcd2f ; mov r11b, 0x89 ; add dword ptr [rax - 0x75], ecx ; ret
0x000002000020bbcc : jg 0x2000020bbd3 ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x00000200002184c7 : jg 0x200002184d0 ; mov eax, 1 ; ret
0x000002000022d000 : jg 0x2000022cfb9 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000023280f : jg 0x20000232880 ; adc byte ptr [rcx - 0x75], cl ; jrcxz 0x2000023287c ; ret
0x0000020000232da5 : jg 0x20000232e03 ; and ah, al ; ret 0x187d
0x0000020000239e82 : jg 0x20000239e88 ; add dh, dh ; ret
0x000002000023d743 : jg 0x2000023d6d2 ; ret 0xe083
0x000002000023d748 : jg 0x2000023d78b ; enter 0x6a74, -0x75 ; ret 0xe083
0x00000200003d90b1 : jg 0x200003d90b8 ; add byte ptr [rax + 0x3b], cl ; ret 0x977
0x0000020000408e65 : jg 0x20000408ee0 ; sbb byte ptr [rax], al ; mov al, 1 ; ret
0x0000020000412537 : jg 0x20000412541 ; add byte ptr [rcx - 0x75], cl ; add dword ptr [rax + 0x3b], ecx ; ret
0x00000200004205a0 : jg 0x200004205a7 ; add byte ptr [rax + 0x3b], cl ; ret 0x577
0x00000200004289cd : jg 0x200004289cb ; ret
0x000002000042f3ec : jg 0x2000042f3f3 ; add byte ptr [rax + 0x3b], cl ; ret 0x1077
0x000002000043142f : jg 0x20000431436 ; add byte ptr [rax + 0x3b], cl ; ret 0x6777
0x000002000043afbd : jg 0x2000043afeb ; ret
0x000002000043f952 : jg 0x2000043f92a ; dec dword ptr [rax - 0x75] ; ret
0x000002000044f177 : jg 0x2000044f17c ; mov eax, edx ; ret
0x000002000044f177 : jg 0x2000044f17d ; mov eax, edx ; ret
0x000002000045188b : jg 0x20000451892 ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x0000020000455d21 : jg 0x20000455d29 ; mov eax, r10d ; ret
0x0000020000455d21 : jg 0x20000455d2a ; mov eax, r10d ; ret
0x000002000045663d : jg 0x20000456646 ; mov al, 1 ; ret
0x0000020000457419 : jg 0x20000457421 ; ret 0xa4eb
0x00000200004582fd : jg 0x2000045834e ; ret 0x8bff
0x00000200004609ec : jg 0x200004609b1 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000462aea : jg 0x20000462af0 ; add bl, ch ; ret
0x00000200004639e2 : jg 0x20000463978 ; mov esp, 0x8b000001 ; adc esi, edi ; ret 0
0x0000020000464017 : jg 0x2000046401e ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x000002000046f30d : jg 0x2000046f2fe ; ret 0xf0ff
0x000002000047280d : jg 0x200004727c9 ; ret 0xf0ff
0x0000020000477b2f : jg 0x20000477b36 ; add byte ptr [rax + 0x3b], cl ; ret 0x2377
0x0000020000478a6c : jg 0x20000478a73 ; add byte ptr [rax + 0x3b], cl ; ret 0x4f73
0x0000020000482638 : jg 0x20000482678 ; add byte ptr [rbx + rdx*2 - 0xa], dh ; ret
0x00000200004a8e9d : jg 0x200004a8e69 ; ret
0x00000200004afcef : jg 0x200004afcf6 ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x00000200004ba012 : jg 0x200004ba019 ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000200004beed1 : jg 0x200004beed7 ; add cl, ch ; ret 0xfffe
0x00000200004e3e10 : jg 0x200004e3e17 ; add byte ptr [rax + 0x3b], cl ; ret 0x577
0x00000200004e9f48 : jg 0x200004e9f4f ; add byte ptr [rax + 3], cl ; ret 0x3b49
0x00000200004ec7e5 : jg 0x200004ec7ec ; add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x000002000050178a : jg 0x200005017a3 ; add byte ptr [rcx - 0x75], cl ; salc ; mov rcx, r13 ; call rax
0x0000020000510a2a : jg 0x20000510a75 ; out dx, eax ; call r12
0x000002000051da30 : jg 0x2000051da7d ; out dx, eax ; call 0x200001484f6
0x000002000051f0ed : jg 0x2000051f080 ; ret 0x81ff
0x000002000052244a : jg 0x20000522497 ; and al, 0x50 ; call 0x20000148637
0x0000020000525086 : jg 0x200005250d3 ; iretd ; call 0x200001480d6
0x0000020000531f05 : jg 0x20000531f50 ; mov al, ch ; ret
0x000002000053d7c9 : jg 0x2000053d7cf ; inc dword ptr [rcx + 0x3b] ; ret
0x000002000053e64d : jg 0x2000053e5f1 ; sar bh, 0x48 ; add esp, 0x58 ; ret
0x000002000053f5df : jg 0x2000053f5ab ; push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call r15
0x0000020000549efd : jg 0x20000549f0e ; add byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x0000020000558833 : jg 0x2000055887f ; iretd ; call 0x200004a4a7d
0x000002000055e965 : jg 0x2000055e970 ; add byte ptr [rax + 0x3b], cl ; fimul dword ptr [rax + 0xf] ; ret 0x8a
0x0000020000563ba1 : jg 0x20000563bb0 ; add dh, dh ; ret
0x0000020000588b64 : jg 0x20000588b69 ; xlatb ; call qword ptr [rbx]
0x00000200005aba15 : jg 0x200005aba2e ; add byte ptr [rax - 0x16215d17], dl ; jmp qword ptr [rcx]
0x00000200005ac98f : jg 0x200005ac996 ; add byte ptr [rax + 0x3b], cl ; ret 0x577
0x00000200005baff4 : jg 0x200005baffa ; add dh, dh ; ret 0x7403
0x00000200005e2c3f : jg 0x200005e2c46 ; add byte ptr [rax + 0x3b], cl ; ret 0x577
0x000002000060bb66 : jg 0x2000060bbb1 ; mov al, 0xe8 ; ret 0xb3c6
0x000002000060bd4d : jg 0x2000060bd3a ; cmc ; inc dword ptr [rbx] ; ret
0x0000020000628c7d : jg 0x20000628cc4 ; ret 0x4cff
0x000002000062c41a : jg 0x2000062c420 ; add al, al ; ret
0x000002000062d606 : jg 0x2000062d651 ; imul eax ; ret 0xb1aa
0x000002000062f407 : jg 0x2000062f410 ; mov al, 1 ; ret
0x0000020000645b85 : jg 0x20000645bde ; ret
0x0000020000659130 : jg 0x20000659137 ; add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x000002000066176b : jg 0x20000661772 ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000683ebe : jg 0x20000683ed1 ; sub rax, r8 ; mov qword ptr [rcx + 0x50], rax ; ret
0x000002000069c69e : jg 0x2000069c6ea ; cwde ; call 0x20000148935
0x00000200006a420a : jg 0x200006a420f ; ret
0x00000200006ae35c : jg 0x200006ae367 ; add byte ptr [rax + 0x3b], cl ; fimul dword ptr [rax + 0xf] ; ret 0x8a
0x00000200006b68a1 : jg 0x200006b68a7 ; add dh, dh ; ret 0x7403
0x00000200006b78fb : jg 0x200006b7905 ; add byte ptr [rcx + 0x3b442444], cl ; ret
0x00000200006d68bc : jg 0x200006d68c6 ; add rsp, 0x28 ; ret
0x00000200006e8742 : jg 0x200006e877d ; inc dword ptr [rcx + rcx*4 + 0x45] ; ret
0x00000200006e8741 : jg 0x200006e877e ; inc dword ptr [rcx + rcx*4 + 0x45] ; ret
0x00000200006f49ed : jg 0x200006f49f6 ; ret
0x000002000071246b : jg 0x20000712471 ; ret
0x0000020000712e8d : jg 0x20000712eae ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200007a5b61 : jg 0x200007a5bb1 ; mov eax, 0x2474894c ; and al, ch ; ret 0x9a26
0x00000200007b052b : jg 0x200007b0500 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007d3ac0 : jg 0x200007d3b10 ; xor byte ptr [rbx + 0x3480843], cl ; ret
0x00000200000047e0 : jge 0x20000004849 ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x0000020000004900 : jge 0x20000004969 ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x0000020000004990 : jge 0x200000049f9 ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x000002000001dce1 : jge 0x2000001dcff ; add dh, dh ; rol dword ptr [rdx], 0xf ; xchg eax, ebp ; ret 0xc3f6
0x000002000005ccc6 : jge 0x2000005cccf ; xor eax, eax ; ret
0x0000020000070c32 : jge 0x20000070c4d ; add byte ptr [rax + 1], bh ; ret
0x0000020000078a82 : jge 0x20000078acb ; add byte ptr [rbp - 0x74cd8b40], al ; ret
0x00000200000853c3 : jge 0x20000085395 ; sub dword ptr [rax], eax ; ret
0x00000200001762a3 : jge 0x20000176279 ; jmp 0x20000112596
0x000002000019118c : jge 0x200001911cf ; lock dec dword ptr [rax - 1] ; ret 0x75e9
0x000002000019271e : jge 0x20000192714 ; push rsi ; ret
0x00000200000eeb0f : jge 0x200001a8d58 ; ret
0x00000200001a9573 : jge 0x200001a956e ; dec dword ptr [rax - 0x75] ; ret
0x00000200001b13ee : jge 0x200001b1435 ; clc ; push rsi ; ret
0x00000200001cf4af : jge 0x200001cf450 ; clc ; dec dword ptr [rcx - 0x74b65c83] ; ret 0xf49
0x00000200001d9e6c : jge 0x200001d9e7c ; mov edx, 1 ; mov eax, edx ; ret
0x0000020000210189 : jge 0x2000021011b ; je 0x2000021019e ; ret 0x1a8
0x0000020000232a47 : jge 0x20000232a4b ; ret
0x000002000024c450 : jge 0x2000024c42f ; xor eax, eax ; ret
0x00000200003fc06d : jge 0x200003fbffc ; call 0x200003fa19e
0x00000200003fdbd7 : jge 0x200003fdbe8 ; add dword ptr [rcx - 0x7af0808b], ecx ; ret
0x0000020000410bfe : jge 0x20000410c18 ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000426c0f : jge 0x20000426c1a ; mov al, r9b ; ret
0x000002000042dbff : jge 0x2000042dba6 ; sar bh, cl ; nop ; add rsp, 0x28 ; ret
0x000002000042fb12 : jge 0x2000042fb0a ; add al, 0x74 ; out -0x15, eax ; ret 0xcccc
0x00000200004364a4 : jge 0x20000436522 ; jmp 0x2000043646e
0x000002000043861f : jge 0x2000043868d ; ret 0x48ff
0x00000200005b06ce : jge 0x20000456851 ; xor al, al ; ret
0x000002000046b284 : jge 0x2000046b2d7 ; mov ecx, dword ptr [rsp + 0x68] ; call 0x2000009a739
0x000002000047810f : jge 0x20000478172 ; ret 0x4cff
0x0000020000479a0f : jge 0x20000479a59 ; ret 0x48ff
0x00000200004d0764 : jge 0x200004d0772 ; cmp r15d, r9d ; jb 0x200004d07ce ; inc edx ; jmp 0x200004d071a
0x00000200005019ea : jge 0x20000501a03 ; add byte ptr [rax - 0x75], cl ; salc ; mov rcx, r15 ; call rax
0x0000020000507137 : jge 0x2000050719d ; ret
0x000002000051700f : jge 0x20000517049 ; ret
0x00000200005171ef : jge 0x2000051722d ; ret 0x48ff
0x000002000051f30f : jge 0x2000051f2a4 ; ret 0x8bff
0x00000200005284ff : jge 0x200005284f6 ; ret 0x48ff
0x00000200005c830f : jge 0x200005c8316 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; push qword ptr [rdx] ; ret
0x000002000060fbb9 : jge 0x2000060fb74 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006189bf : jge 0x20000618a13 ; ret
0x00000200006652ea : jge 0x200006652af ; dec dword ptr [rax - 0x75] ; ret
0x00000200006c85bf : jge 0x200006c85b8 ; ret 0x48ff
0x00000200006ee10c : jge 0x200006ee0d7 ; cli ; push rsi ; outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x00000200006ee38c : jge 0x200006ee357 ; cli ; push rsi ; outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x00000200006f3227 : jge 0x200006f3278 ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x0000020000701b0e : jge 0x20000701afc ; ret
0x000002000070f07f : jge 0x2000070f0d0 ; wait ; dec dword ptr [rax - 0x75] ; ret
0x000002000072a46f : jge 0x2000072a429 ; ret 0xe8ff
0x00000200007cd1d3 : jge 0x200007cd190 ; ret 0x8bff
0x00000200007d8892 : jge 0x200007d88db ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x407d
0x00000200007d8982 : jge 0x200007d89cb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; nop ; ret
0x0000020000006185 : jl 0x200000061b4 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000007837 : jl 0x20000007866 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000007a66 : jl 0x20000007a95 ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x000002000000982f : jl 0x2000000985e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000009e20 : jl 0x20000009e4f ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000009fb6 : jl 0x20000009fe5 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000009fc9 : jl 0x20000009ff8 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000000ac88 : jl 0x2000000acb7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000000baf6 : jl 0x2000000bb25 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000000d680 : jl 0x2000000d6af ; js 0x2000000d6d5 ; add esp, 0x50 ; pop r14 ; ret
0x000002000001391a : jl 0x20000013949 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000160f2 : jl 0x20000016121 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000001620e : jl 0x2000001623d ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000017ce3 : jl 0x20000017d12 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000001a703 : jl 0x2000001a732 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000001dd54 : jl 0x2000001dd82 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000001e462 : jl 0x2000001e491 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000001f0a2 : jl 0x2000001f0cd ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000001fce2 : jl 0x2000001fd11 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000021478 : jl 0x200000214a7 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000021671 : jl 0x2000002164c ; or byte ptr [rax], al ; je 0x20000021682 ; xor eax, eax ; ret
0x000002000002287d : jl 0x2000002280c ; ret 0xb60f
0x0000020000023684 : jl 0x200000236b3 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000024372 : jl 0x200000243a1 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000258bd : jl 0x200000258ec ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000025af9 : jl 0x20000025b28 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000025b7b : jl 0x20000025baa ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000026a81 : jl 0x20000026ab0 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000026e22 : jl 0x20000026e4d ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000002978a : jl 0x200000297b9 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000002cc6a : jl 0x2000002cc99 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000002ce8d : jl 0x2000002cebc ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003094f : jl 0x2000003097e ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000030ef3 : jl 0x20000030f22 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000318d7 : jl 0x20000031906 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000003384a : jl 0x20000033879 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000036294 : jl 0x200000362c2 ; jo 0x200000362e8 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000036673 : jl 0x200000366a2 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003712f : jl 0x2000003715a ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000037264 : jl 0x20000037293 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000003768a : jl 0x200000376b7 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200000393c4 : jl 0x200000393f3 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000039a09 : jl 0x20000039a38 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000003a636 : jl 0x2000003a665 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003a872 : jl 0x2000003a8a1 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003aee7 : jl 0x2000003af16 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003b93a : jl 0x2000003b969 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000003ba9d : jl 0x2000003bac8 ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000003d627 : jl 0x2000003d656 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003e9b1 : jl 0x2000003e9e0 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000003f297 : jl 0x2000003f2c6 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000040275 : jl 0x200000402a4 ; jo 0x200000402ca ; add esp, 0x50 ; pop r14 ; ret
0x0000020000043a30 : jl 0x20000043a5f ; push 0x40c48348 ; pop r14 ; ret
0x0000020000045c65 : jl 0x20000045c94 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000004841c : jl 0x20000048447 ; sub byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x000002000004a2ed : jl 0x2000004a31a ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x000002000004b00a : jl 0x2000004b039 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000004d781 : jl 0x2000004d7b0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000514cb : jl 0x200000514fa ; add rsp, 0x70 ; pop r13 ; ret
0x0000020000051bac : jl 0x20000051bdb ; push 0x40c48348 ; pop r14 ; ret
0x000002000005428d : jl 0x200000542bb ; jo 0x200000542e1 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000059dc9 : jl 0x20000059df8 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000005af0b : jl 0x2000005af3a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000005b04e : jl 0x2000005b07d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000005c4db : jl 0x2000005c518 ; leave ; mov qword ptr [r9], rax ; mov eax, ecx ; ret
0x000002000005cb7b : jl 0x2000005cbaa ; push 0x40c48348 ; pop r14 ; ret
0x000002000007155d : jl 0x2000007158c ; add rsp, 0x20 ; pop r15 ; ret
0x00000200000716f0 : jl 0x200000716f5 ; ret
0x0000020000073877 : jl 0x200000738a6 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000076c93 : jl 0x20000076cc2 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000007a4fa : jl 0x2000007a529 ; push 0x40c48348 ; pop r14 ; ret
0x000002000007b949 : jl 0x2000007b978 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000007cfd2 : jl 0x2000007d001 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000007ef40 : jl 0x2000007ef6f ; push 0x40c48348 ; pop r14 ; ret
0x000002000008307d : jl 0x200000830ac ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000084200 : jl 0x2000008422f ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000851ac : jl 0x200000851d7 ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000008862c : jl 0x2000008865b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000887c6 : jl 0x200000887f5 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000888bc : jl 0x200000888e7 ; sub byte ptr [rbp - 0x75], cl ; ret 0x8948
0x0000020000088b1b : jl 0x20000088b4a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000008ab7a : jl 0x2000008aba8 ; push 0x50c48348 ; pop rbp ; ret
0x000002000008cd34 : jl 0x2000008cd63 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000008dd7b : jl 0x2000008ddaa ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000092265 : jl 0x20000092294 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000937be : jl 0x200000937ed ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000098825 : jl 0x2000009882a ; ret
0x0000020000098945 : jl 0x20000098974 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000009962a : jl 0x20000099655 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000009d6b1 : jl 0x2000009d6e0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000b9247 : jl 0x200000b9276 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000bb2b6 : jl 0x200000bb2e5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000bb9f9 : jl 0x200000bba28 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000beab0 : jl 0x200000beadf ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000bf633 : jl 0x200000bf67e ; add dword ptr [rax], eax ; jne 0x200000bf64b ; xor al, al ; ret
0x00000200000c01ea : jl 0x200000c0219 ; add rsp, 0x68 ; pop rsi ; pop rbx ; ret
0x00000200000c05d2 : jl 0x200000c0600 ; and byte ptr [rbx - 0x742074c7], cl ; ret 0xc148
0x00000200000c4002 : jl 0x200000c4030 ; pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000c72d4 : jl 0x200000c7302 ; push 0x40c48348 ; pop rbp ; ret
0x00000200000cf823 : jl 0x200000cf84e ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000d14cf : jl 0x200000d14fe ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000dcf04 : jl 0x200000dcf33 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000dd73e : jl 0x200000dd76d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000ddf54 : jl 0x200000ddf82 ; pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000e3540 : jl 0x200000e356f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000e95d1 : jl 0x200000e95da ; mov al, 1 ; ret
0x00000200000f0959 : jl 0x200000f0988 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f31c0 : jl 0x200000f31ef ; push 0x40c48348 ; pop r14 ; ret
0x00000200000f4332 : jl 0x200000f433b ; mov al, 1 ; ret
0x00000200000f4454 : jl 0x200000f4483 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f6818 : jl 0x200000f6847 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f711a : jl 0x200000f7145 ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200000f7480 : jl 0x200000f744d ; cld ; dec dword ptr [rax - 0x75] ; ret
0x00000200000f8beb : jl 0x200000f8c1a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000f9285 : jl 0x200000f92b4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f9ce1 : jl 0x200000f9d0e ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200000f9f61 : jl 0x200000f9f90 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000fa00d : jl 0x200000fa01c ; mov eax, 1 ; ret
0x00000200000fa740 : jl 0x200000fa76f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000fb302 : jl 0x200000fb331 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000fb746 : jl 0x200000fb775 ; jo 0x200000fb79b ; add esp, 0x50 ; pop r14 ; ret
0x00000200000fbd3c : jl 0x200000fbd6b ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000fbe3a : jl 0x200000fbe69 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000fc794 : jl 0x200000fc7c3 ; push 0x40c48348 ; pop r14 ; ret
0x00000200000fcf9b : jl 0x200000fcfc8 ; xor byte ptr [rcx + 0x5e], al ; pop r12 ; ret
0x00000200000fd075 : jl 0x200000fd0a2 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200000fea92 : jl 0x200000feac1 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000100b1e : jl 0x20000100b4d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000100efd : jl 0x20000100f2c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001020d5 : jl 0x20000102104 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000103a51 : jl 0x20000103a80 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000104873 : jl 0x200001048a2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001076bc : jl 0x200001076eb ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001095e9 : jl 0x20000109618 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000109c96 : jl 0x20000109cc5 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000010af4c : jl 0x2000010af7b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000010c94c : jl 0x2000010c977 ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000010d052 : jl 0x2000010d081 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000010d8a5 : jl 0x2000010d8d4 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000010f82a : jl 0x2000010f859 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011398c : jl 0x200001139ba ; js 0x200001139e0 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000113b81 : jl 0x20000113bb0 ; js 0x20000113bd6 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000115336 : jl 0x20000115363 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200001154af : jl 0x200001154de ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001163e3 : jl 0x20000116412 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000117c08 : jl 0x20000117c37 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011aa97 : jl 0x2000011aac6 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000011ac15 : jl 0x2000011ac44 ; push 0x40c48348 ; pop r14 ; ret
0x000002000011bfc7 : jl 0x2000011bff6 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000011c170 : jl 0x2000011c19f ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011c206 : jl 0x2000011c235 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011cbf8 : jl 0x2000011cc27 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011f54a : jl 0x2000011f579 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011fcef : jl 0x2000011fd1e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000122319 : jl 0x20000122348 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001232ad : jl 0x200001232dc ; add rsp, 0x20 ; pop r15 ; ret
0x000002000012474b : jl 0x2000012477a ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000129847 : jl 0x20000129876 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000129afe : jl 0x20000129b2c ; pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x000002000012ac30 : jl 0x2000012ac5f ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000012d414 : jl 0x2000012d443 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012db7e : jl 0x2000012dbac ; js 0x2000012dbd2 ; add esp, 0x50 ; pop rbp ; ret
0x000002000012e12d : jl 0x2000012e15c ; push 0x40c48348 ; pop r15 ; ret
0x000002000012e421 : jl 0x2000012e450 ; push 0x40c48348 ; pop r14 ; ret
0x000002000012ee77 : jl 0x2000012eea6 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000130b15 : jl 0x20000130aa7 ; js 0x20000130b4a ; ret 0x8944
0x0000020000131859 : jl 0x20000131888 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000131a87 : jl 0x20000131ab6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001348c1 : jl 0x200001348ec ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000135207 : jl 0x20000135234 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x0000020000135ed4 : jl 0x20000135f03 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000137d57 : jl 0x20000137d85 ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000138d7f : jl 0x20000138dae ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000139863 : jl 0x20000139892 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000013afbc : jl 0x2000013afea ; js 0x2000013b010 ; add esp, 0x60 ; pop rbp ; ret
0x000002000013e7ef : jl 0x2000013e81e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000013f0ba : jl 0x2000013f0e9 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000142068 : jl 0x20000142097 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000147b5f : jl 0x20000147b8e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000178c37 : jl 0x20000178c63 ; and byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001934f0 : jl 0x20000193495 ; lock dec dword ptr [rcx - 0x75] ; ret
0x00000200001b3cad : jl 0x200001b3cdc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001b4641 : jl 0x200001b4670 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001b8028 : jl 0x200001b8057 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001b9ce3 : jl 0x200001b9d12 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001b9dcb : jl 0x200001b9dfa ; push 0x40c48348 ; pop r14 ; ret
0x00000200001b9eba : jl 0x200001b9ee9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001bba5f : jl 0x200001bba8e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001bef7a : jl 0x200001befa9 ; push 0x40c48348 ; pop r14 ; ret
0x00000200001bf7bd : jl 0x200001bf7eb ; js 0x200001bf811 ; add esp, 0x60 ; pop rbp ; ret
0x00000200001c1194 : jl 0x200001c11c3 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001c32f1 : jl 0x200001c331c ; and byte ptr [rax + 0x69], cl ; ret 0x201
0x00000200001c5a50 : jl 0x200001c5a7f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c6e18 : jl 0x200001c6e47 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200001c7314 : jl 0x200001c7343 ; push 0x40c48348 ; pop r14 ; ret
0x00000200001c87f7 : jl 0x200001c87fa ; ret 0x8348
0x00000200001c87f6 : jl 0x200001c87fb ; ret 0x8348
0x00000200001c973c : jl 0x200001c976b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001ca3d1 : jl 0x200001ca400 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001cd6d3 : jl 0x200001cd702 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001cf091 : jl 0x200001cf0c0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001cf76f : jl 0x200001cf79e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001cf997 : jl 0x200001cf9c6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001cfbf3 : jl 0x200001cfc22 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d12ff : jl 0x200001d132e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d19f0 : jl 0x200001d198c ; idiv bh ; add rsp, 0x68 ; ret
0x00000200001d2085 : jl 0x200001d20b4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d4683 : jl 0x200001d4673 ; or eax, 0xffffffff ; ret
0x00000200001d6655 : jl 0x200001d6684 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d77bf : jl 0x200001d77ee ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d7e08 : jl 0x200001d7e37 ; push 0x40c48348 ; pop r14 ; ret
0x00000200001d8082 : jl 0x200001d80b1 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d9448 : jl 0x200001d9477 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d94ed : jl 0x200001d951c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001de5b7 : jl 0x200001de5e6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001df8ff : jl 0x200001df92e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001e1dae : jl 0x200001e1ddd ; js 0x200001e1e03 ; add esp, 0x50 ; pop r14 ; ret
0x00000200001e2208 : jl 0x200001e2237 ; push 0x40c48348 ; pop r14 ; ret
0x00000200001e2697 : jl 0x200001e26c6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001e301a : jl 0x200001e3049 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001e70a6 : jl 0x200001e70d5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001e9218 : jl 0x200001e9247 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001e9322 : jl 0x200001e9351 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001e9d74 : jl 0x200001e9da3 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001ee2de : jl 0x200001ee309 ; add dword ptr [rax + 0x23], ecx ; ret 0x8944
0x00000200001efef5 : jl 0x200001eff24 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001f0531 : jl 0x200001f0560 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001f195f : jl 0x200001f198e ; push 0x40c48348 ; pop r14 ; ret
0x00000200001f1e5b : jl 0x200001f1e8a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001f2a6d : jl 0x200001f2a9c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001f3587 : jl 0x200001f35b6 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001fa8db : jl 0x200001fa90a ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200001face6 : jl 0x200001fad15 ; js 0x200001fad3b ; add esp, 0x50 ; pop r14 ; ret
0x00000200001faed6 : jl 0x200001faf05 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001fdaa5 : jl 0x200001fdad4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001feafb : jl 0x200001feb2a ; add rsp, 0x20 ; pop r15 ; ret
0x000002000020166b : jl 0x2000020169a ; push 0x40c48348 ; pop r14 ; ret
0x0000020000201828 : jl 0x20000201857 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000201a64 : jl 0x20000201a93 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000202b4a : jl 0x20000202b79 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020aa7b : jl 0x2000020aaaa ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020ac17 : jl 0x2000020ac45 ; pop rax ; add rsp, 0x30 ; pop rbp ; ret
0x000002000020cba8 : jl 0x2000020cbd7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020deaf : jl 0x2000020dede ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020e94a : jl 0x2000020e979 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020ead8 : jl 0x2000020eb07 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020fc17 : jl 0x2000020fc46 ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x000002000021295b : jl 0x2000021298a ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000215d37 : jl 0x20000215d66 ; js 0x20000215d8c ; add esp, 0x50 ; pop r14 ; ret
0x0000020000215e47 : jl 0x20000215e76 ; js 0x20000215e9c ; add esp, 0x50 ; pop r14 ; ret
0x00000200002161aa : jl 0x200002161d9 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000021641b : jl 0x2000021644a ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000216ab9 : jl 0x20000216ae8 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000217e51 : jl 0x20000217e80 ; push 0x40c48348 ; pop r14 ; ret
0x000002000021ba52 : jl 0x2000021ba81 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000021c445 : jl 0x2000021c474 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000021c59a : jl 0x2000021c5c9 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000021d26a : jl 0x2000021d299 ; js 0x2000021d2bf ; add esp, 0x50 ; pop r14 ; ret
0x000002000022002f : jl 0x20000220020 ; xor eax, eax ; ret
0x0000020000220b39 : jl 0x20000220b68 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000220c25 : jl 0x20000220c54 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000223a44 : jl 0x20000223a73 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000226f85 : jl 0x20000226fb4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000022a61e : jl 0x2000022a64d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000022b056 : jl 0x2000022b085 ; push 0x40c48348 ; pop r14 ; ret
0x000002000022c7ec : jl 0x2000022c7dc ; xor eax, eax ; ret
0x000002000023055a : jl 0x20000230589 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000230d9a : jl 0x20000230dc9 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000231004 : jl 0x20000231033 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200002331b5 : jl 0x200002331e2 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000235397 : jl 0x200002353c6 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000235746 : jl 0x20000235771 ; and byte ptr [rcx - 0x75], al ; ret 0x4566
0x0000020000236206 : jl 0x200002361ea ; ret
0x0000020000239cec : jl 0x20000239d1b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000024c458 : jl 0x2000024c459 ; mov eax, 1 ; ret
0x000002000024c720 : jl 0x2000024c74e ; push rax ; add rsp, 0x30 ; pop rcx ; ret
0x000002000024ea74 : jl 0x2000024eaa2 ; push rax ; add rsp, 0x70 ; pop rdi ; ret
0x00000200003c9fae : jl 0x200003c9fdd ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003cbca5 : jl 0x200003cbcd4 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003cf6f2 : jl 0x200003cf721 ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200003cf937 : jl 0x200003cf966 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003cfb58 : jl 0x200003cfb87 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200003cfda4 : jl 0x200003cfdd3 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003d02da : jl 0x200003d034f ; add byte ptr [rax], al ; ret
0x00000200003d08c5 : jl 0x200003d08ef ; and al, ch ; ret
0x00000200003d1475 : jl 0x200003d14a4 ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200003d1923 : jl 0x200003d1952 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003d3416 : jl 0x200003d3445 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003d3784 : jl 0x200003d37b3 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003d91a2 : jl 0x200003d91d1 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003d999a : jl 0x200003d99c8 ; add rsp, 0x20 ; pop rcx ; ret
0x00000200003d9b70 : jl 0x200003d9bf0 ; idiv bh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003dc0ac : jl 0x200003dc0db ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003df8ec : jl 0x200003df91b ; js 0x200003df941 ; add esp, 0x50 ; pop r14 ; ret
0x00000200003dfacc : jl 0x200003dfa98 ; ret 0x8bff
0x00000200003e0d25 : jl 0x200003e0d54 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003e0e09 : jl 0x200003e0e38 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003e454c : jl 0x200003e4577 ; adc byte ptr [rcx - 1], al ; ret 0xf41
0x00000200003e45ec : jl 0x200003e4617 ; adc byte ptr [rcx - 1], al ; ret 0xf41
0x00000200003e4be8 : jl 0x200003e4c13 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003e4d1c : jl 0x200003e4d47 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003e4eb8 : jl 0x200003e4ee3 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003e8ff4 : jl 0x200003e9023 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003e96ed : jl 0x200003e971c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003ebf4d : jl 0x200003ebf7c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003f098e : jl 0x200003f09bd ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003f3469 : jl 0x200003f3498 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003fa125 : jl 0x200003fa153 ; adc byte ptr [rcx + 0x5bc03303], cl ; ret
0x00000200003fae1c : jl 0x200003fae49 ; xor bl, ch ; sbb ch, al ; ret
0x00000200003fb28d : jl 0x200003fb2bc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003fb7a7 : jl 0x200003fb7d6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004006ec : jl 0x2000040071b ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000040157c : jl 0x200004015ab ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000401a5e : jl 0x20000401a8d ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200004031a3 : jl 0x200004031d2 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000404de9 : jl 0x20000404e14 ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000408bdf : jl 0x20000408c0e ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000409322 : jl 0x2000040934e ; xor byte ptr [rcx + 0x5e], al ; pop rsi ; ret
0x000002000040cf78 : jl 0x2000040cfa7 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000040d100 : jl 0x2000040d12f ; push 0x40c48348 ; pop r14 ; ret
0x000002000040f5c4 : jl 0x2000040f5f2 ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000410aae : jl 0x20000410add ; push 0x40c48348 ; pop r14 ; ret
0x000002000041278d : jl 0x200004127bc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004143b7 : jl 0x200004143e6 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000041630e : jl 0x2000041633d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000418650 : jl 0x2000041867f ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000420eae : jl 0x20000420edc ; sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x0000020000422dba : jl 0x20000422de9 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000423af3 : jl 0x20000423b22 ; jo 0x20000423b48 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004241af : jl 0x200004241de ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004261aa : jl 0x200004261d9 ; js 0x200004261ff ; add esp, 0x50 ; pop r14 ; ret
0x0000020000426ae0 : jl 0x20000426b0f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004273cd : jl 0x200004273fc ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x000002000042acea : jl 0x2000042ad19 ; add byte ptr [r15 + r9 + 0x44], al ; jrcxz 0x2000042ace5 ; ret
0x000002000042b62f : jl 0x2000042b65e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000042eb1c : jl 0x2000042eb4b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000042fae9 : jl 0x2000042fb17 ; jo 0x2000042fb3d ; add esp, 0x50 ; pop rbp ; ret
0x00000200004311ea : jl 0x20000431218 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200004343c7 : jl 0x200004343f6 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000434cfa : jl 0x20000434d29 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004356ae : jl 0x200004356dd ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004375ce : jl 0x200004375fd ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000438aaf : jl 0x20000438ade ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000438ca0 : jl 0x20000438cca ; js 0x20000438c33 ; ret
0x000002000043ad6c : jl 0x2000043ad9b ; jo 0x2000043adc1 ; add esp, 0x50 ; pop r14 ; ret
0x000002000043c34d : jl 0x2000043c37c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004482d3 : jl 0x20000448302 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000448538 : jl 0x20000448567 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000044885b : jl 0x20000448869 ; setle al ; inc eax ; ret
0x0000020000449b92 : jl 0x20000449bc1 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000044a136 : jl 0x2000044a165 ; add rsp, 0x20 ; pop r12 ; ret
0x000002000044a235 : jl 0x2000044a264 ; push 0x40c48348 ; pop r14 ; ret
0x000002000044ac57 : jl 0x2000044ac86 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000044c2af : jl 0x2000044c2de ; add rsp, 0x20 ; pop r14 ; ret
0x000002000044e738 : jl 0x2000044e767 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000044edb5 : jl 0x2000044ede4 ; jo 0x2000044ee0a ; add esp, 0x50 ; pop r14 ; ret
0x0000020000450069 : jl 0x20000450098 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004500f3 : jl 0x20000450122 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004525a1 : jl 0x200004525d0 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000454dc6 : jl 0x20000454df4 ; jo 0x20000454e1a ; add esp, 0x50 ; pop rbp ; ret
0x00000200004556c5 : jl 0x200004556f3 ; js 0x20000455719 ; add esp, 0x60 ; pop rbp ; ret
0x000002000045584c : jl 0x2000045587a ; jo 0x200004558a0 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000456a01 : jl 0x20000456a14 ; xor eax, eax ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000457413 : jl 0x20000457409 ; push rbx ; movq qword ptr [rdx + r8*8], mm0 ; jmp 0x200004573ca
0x0000020000457412 : jl 0x2000045740a ; push rbx ; movq qword ptr [rdx + r8*8], mm0 ; jmp 0x200004573cb
0x00000200004574c5 : jl 0x200004574f4 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000457be8 : jl 0x20000457c17 ; js 0x20000457c3d ; add esp, 0x50 ; pop r14 ; ret
0x000002000045e920 : jl 0x2000045e94f ; push 0x40c48348 ; pop r14 ; ret
0x000002000045f3eb : jl 0x2000045f41a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000045f8ab : jl 0x2000045f881 ; dec dword ptr [rax - 0x75] ; ret
0x000002000045fac4 : jl 0x2000045faa6 ; ret
0x00000200004602bf : jl 0x200004602ee ; push -0x173074b8 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000020000460c3c : jl 0x20000460c6b ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000461307 : jl 0x20000461336 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000463a15 : jl 0x20000463a44 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000465fde : jl 0x2000046600d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000046aa75 : jl 0x2000046aaa4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000046ab2f : jl 0x2000046ab5e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000046d616 : jl 0x2000046d645 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000046e3ba : jl 0x2000046e3e9 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000046edbd : jl 0x2000046edec ; add rsp, 0x20 ; pop r14 ; ret
0x000002000046f860 : jl 0x2000046f88f ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004748d7 : jl 0x20000474906 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000474afa : jl 0x20000474b29 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000479969 : jl 0x20000479998 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000479afc : jl 0x20000479b2a ; add rsp, 0x20 ; pop rbx ; ret
0x000002000047a453 : jl 0x2000047a482 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004816d1 : jl 0x20000481700 ; xor byte ptr [rax - 0x3f], cl ; call 0x1ffc3d35b03
0x000002000048441e : jl 0x20000484449 ; xor byte ptr [rax - 0x75], cl ; ret
0x0000020000487398 : jl 0x2000048739e ; and al, byte ptr [rax] ; mov rax, rdx ; jmp 0x2000048733e
0x0000020000491f86 : jl 0x20000491fb5 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000496ecc : jl 0x20000496efb ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000499195 : jl 0x200004991c4 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000049949c : jl 0x200004994cb ; push 0x40c48348 ; pop r13 ; ret
0x00000200004996d6 : jl 0x20000499705 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000049bdbe : jl 0x2000049bded ; add rsp, 0x20 ; pop r14 ; ret
0x000002000049c957 : jl 0x2000049c986 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000049f45f : jl 0x2000049f48e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004a0315 : jl 0x200004a030f ; ljmp ptr [rax - 0x637af0e0] ; call qword ptr [rdx]
0x00000200004a1bb3 : jl 0x200004a1be2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004a4625 : jl 0x200004a4639 ; xchg eax, ebp ; ret 0x8445
0x00000200004a5483 : jl 0x200004a54b2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004a5a34 : jl 0x200004a5a63 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004a6ca0 : jl 0x200004a6c8e ; ret
0x00000200004abf18 : jl 0x200004abf47 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004ac1d7 : jl 0x200004ac206 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ac3d5 : jl 0x200004ac404 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ada28 : jl 0x200004ada57 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004adc4a : jl 0x200004adc14 ; or dh, al ; ret
0x00000200004ae2c2 : jl 0x200004ae2f1 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004afdb2 : jl 0x200004afde1 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004b201b : jl 0x200004b204a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004b4a90 : jl 0x200004b4abf ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004b4ff5 : jl 0x200004b5024 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004b53ab : jl 0x200004b53a5 ; ret
0x00000200004b79d0 : jl 0x200004b79fd ; pop rax ; call 0x200004b75d7
0x00000200004b85c6 : jl 0x200004b85f5 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004c3b9f : jl 0x200004c3bce ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004c5c78 : jl 0x200004c5c14 ; ret
0x00000200004ca808 : jl 0x200004ca837 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004d0644 : jl 0x200004d05cf ; ror byte ptr [rdi], 0x85 ; ret
0x00000200004d549e : jl 0x200004d54c9 ; xor byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200004dc99b : jl 0x200004dc9c7 ; cmp ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000200004e35ab : jl 0x200004e35da ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004e5023 : jl 0x200004e5052 ; push 0x40c48348 ; pop r14 ; ret
0x00000200004e7223 : jl 0x200004e7252 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ee7ec : jl 0x200004ee81b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004efa01 : jl 0x200004efa30 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004f15f4 : jl 0x200004f1623 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f2fc2 : jl 0x200004f2ff1 ; push 0x40c48348 ; pop r14 ; ret
0x00000200004f3270 : jl 0x200004f329f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f3af4 : jl 0x200004f3b22 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200004f3bbd : jl 0x200004f3bec ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f4689 : jl 0x200004f46b8 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f5a32 : jl 0x200004f5a61 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f67a1 : jl 0x200004f67d0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f6f35 : jl 0x200004f6f64 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004fcb5b : jl 0x200004fcb8a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004fd325 : jl 0x200004fd354 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004fd631 : jl 0x200004fd65f ; js 0x200004fd685 ; add esp, 0x50 ; pop rbp ; ret
0x00000200004fdeca : jl 0x200004fdef9 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000502957 : jl 0x20000502981 ; sub bh, bh ; ret
0x0000020000504207 : jl 0x20000504236 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005061d2 : jl 0x20000506201 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000050637b : jl 0x200005063aa ; push 0x40c48348 ; pop r14 ; ret
0x00000200005064fd : jl 0x20000506528 ; cmp byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200005071c8 : jl 0x200005071f7 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005080d1 : jl 0x20000508100 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000508f7d : jl 0x20000508fa9 ; and al, ch ; stosd dword ptr [rdi], eax ; stc ; ret
0x0000020000509a49 : jl 0x20000509a78 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000509eab : jl 0x20000509ed5 ; cmp cl, ch ; ret
0x000002000050d2db : jl 0x2000050d30a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000050d525 : jl 0x2000050d554 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000050e61a : jl 0x2000050e649 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005164df : jl 0x2000051650d ; pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000517f67 : jl 0x20000517f96 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000518df0 : jl 0x20000518dfc ; inc edx ; sub ecx, edx ; mov eax, ecx ; ret
0x000002000051a276 : jl 0x2000051a2a4 ; js 0x2000051a2ca ; add esp, 0x50 ; pop rbp ; ret
0x000002000051c743 : jl 0x2000051c772 ; jo 0x2000051c798 ; add esp, 0x50 ; pop r14 ; ret
0x000002000051c973 : jl 0x2000051c9a2 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000051cee7 : jl 0x2000051cf16 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000051d100 : jl 0x2000051d0ab ; ret
0x000002000051e616 : jl 0x2000051e645 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005207a3 : jl 0x200005207d2 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000520923 : jl 0x20000520952 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000520cfb : jl 0x20000520d2a ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x00000200005253aa : jl 0x200005253d9 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000525f30 : jl 0x20000525f29 ; mov byte ptr [rdx + 8], 0 ; mov rax, rdx ; ret
0x0000020000526d7a : jl 0x20000526da9 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000527113 : jl 0x20000527142 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000528137 : jl 0x20000528166 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000052eeb6 : jl 0x2000052eee5 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000531411 : jl 0x20000531440 ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000053554b : jl 0x2000053557a ; push 0x40c48348 ; pop r14 ; ret
0x000002000053c443 : jl 0x2000053c471 ; push 0x50c48348 ; pop rbp ; ret
0x000002000053e4e6 : jl 0x2000053e515 ; push 0x40c48348 ; pop r14 ; ret
0x000002000053e5de : jl 0x2000053e60d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000053f1a0 : jl 0x2000053f1cf ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005408e7 : jl 0x20000540916 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005426b8 : jl 0x200005426e7 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005433cc : jl 0x200005433fb ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000544f07 : jl 0x20000544f35 ; jo 0x20000544f5b ; add esp, 0x50 ; pop rbp ; ret
0x000002000054749e : jl 0x200005474cd ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000547a35 : jl 0x20000547a64 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000547c40 : jl 0x20000547c6f ; add rsp, 0x20 ; pop r14 ; ret
0x000002000054958c : jl 0x200005495b6 ; xor al, 0x81 ; ret
0x000002000054a0c8 : jl 0x2000054a0f7 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000054abaf : jl 0x2000054abde ; add rsp, 0x20 ; pop r14 ; ret
0x000002000054b7fb : jl 0x2000054b82a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000054e164 : jl 0x2000054e193 ; push 0x40c48348 ; pop r14 ; ret
0x000002000054e3ad : jl 0x2000054e3dc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005563d5 : jl 0x20000556404 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000556497 : jl 0x200005564c6 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000055900d : jl 0x2000055903c ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000559db2 : jl 0x20000559de1 ; push 0x40c48348 ; pop r14 ; ret
0x000002000055ab28 : jl 0x2000055ab57 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000055b7bf : jl 0x2000055b7ee ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000055b80f : jl 0x2000055b83e ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000055b85f : jl 0x2000055b88e ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000055b8af : jl 0x2000055b8de ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000055bdbb : jl 0x2000055bdea ; push 0x40c48348 ; pop r14 ; ret
0x000002000055daa7 : jl 0x2000055dad6 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000055ef93 : jl 0x2000055efc2 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000561331 : jl 0x20000561360 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000564bf8 : jl 0x20000564c27 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000564c89 : jl 0x20000564cb4 ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000565d5c : jl 0x20000565d8b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000565e52 : jl 0x20000565e81 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000566ff2 : jl 0x2000056701c ; js 0x20000566f85 ; ret
0x00000200005671c7 : jl 0x200005671f6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005696fa : jl 0x20000569720 ; add byte ptr [rax], al ; ret
0x0000020000569714 : jl 0x2000056973d ; add byte ptr [rax], al ; mov dword ptr [rcx + 0x14], eax ; ret
0x0000020000580d54 : jl 0x20000580d80 ; xor byte ptr [rbx + rax - 0x7d], dh ; ret
0x00000200005878d4 : jl 0x200005878ff ; and byte ptr [rbx], dh ; leave ; call qword ptr [rsi]
0x00000200005ad338 : jl 0x200005ad366 ; and byte ptr [rbx + rcx*4 - 0x3d], al ; mov cl, 0x15 ; call rax
0x00000200005b5560 : jl 0x200005b558a ; cmp cl, ch ; ret
0x00000200005db5d3 : jl 0x200005db5fe ; xor al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffb7
0x00000200005dd661 : jl 0x200005dd5ec ; ror byte ptr [rdi], 0x85 ; ret
0x00000200005dea5e : jl 0x200005dea7a ; lock dec dword ptr [rax - 0x75] ; ret
0x00000200005ed4ad : jl 0x200005ed4b6 ; push rsi ; ret 0x7401
0x00000200005fa7d4 : jl 0x200005fa7fe ; jo 0x200005fa75f ; ret 0x8b04
0x00000200006007d6 : jl 0x20000600804 ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000600b19 : jl 0x20000600b48 ; and byte ptr [rbp + 0x33], al ; rol byte ptr [rax - 0x76], 0xcd ; call rsi
0x0000020000602f1f : jl 0x20000602f4b ; pop rax ; add dword ptr [rax - 0x75], ecx ; ret
0x0000020000604b65 : jl 0x20000604b90 ; adc byte ptr [rax - 0x75], cl ; ret
0x0000020000604c4f : jl 0x20000604c7e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000605f96 : jl 0x20000605fc5 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000607858 : jl 0x20000607887 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000608a08 : jl 0x20000608a37 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000060c99d : jl 0x2000060c9cc ; push 0x40c48348 ; pop r14 ; ret
0x000002000060ebab : jl 0x2000060ebda ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000610e6e : jl 0x20000610e9c ; push -0x76bbdc15 ; ret
0x0000020000611876 : jl 0x200006118a5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006136c0 : jl 0x20000613667 ; ret
0x000002000061bd7c : jl 0x2000061bdab ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000061f45c : jl 0x2000061f48b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000061f814 : jl 0x2000061f843 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000620c69 : jl 0x20000620c98 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000622994 : jl 0x200006229c3 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000622eed : jl 0x20000622f18 ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200006252a2 : jl 0x200006252d1 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006266a0 : jl 0x200006266ce ; js 0x200006266f4 ; add esp, 0x50 ; pop rbp ; ret
0x00000200006276ed : jl 0x2000062771c ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000627841 : jl 0x20000627870 ; js 0x20000627896 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000627ba4 : jl 0x20000627bd3 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006290a2 : jl 0x200006290d1 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000062920f : jl 0x2000062923d ; pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x000002000062b2e7 : jl 0x2000062b316 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000062daaf : jl 0x2000062dadd ; push 0x40c48348 ; pop rbp ; ret
0x000002000062eba4 : jl 0x2000062ebd3 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000062f1e9 : jl 0x2000062f218 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000063013f : jl 0x2000063016e ; js 0x20000630194 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000630321 : jl 0x20000630350 ; js 0x20000630376 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000630569 : jl 0x20000630598 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000630a4a : jl 0x20000630a79 ; js 0x20000630a9f ; add esp, 0x50 ; pop r14 ; ret
0x00000200006327df : jl 0x2000063280e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000063d01b : jl 0x2000063d04a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006466db : jl 0x2000064670a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006468ab : jl 0x200006468da ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000646e2a : jl 0x20000646e59 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006497fd : jl 0x2000064982c ; add rsp, 0x20 ; pop r14 ; ret
0x000002000064c54c : jl 0x2000064c57b ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000064dda0 : jl 0x2000064ddcf ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000652258 : jl 0x20000652282 ; sbb al, 0x8b ; ret
0x0000020000653acf : jl 0x20000653afe ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006556e3 : jl 0x20000655712 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000657ee7 : jl 0x20000657f16 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006581cd : jl 0x200006581fc ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000658299 : jl 0x200006582c8 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000658365 : jl 0x20000658394 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065851b : jl 0x2000065854a ; jo 0x20000658570 ; add esp, 0x50 ; pop r14 ; ret
0x000002000065a01c : jl 0x2000065a04b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065c223 : jl 0x2000065c252 ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x000002000065ca1a : jl 0x2000065ca49 ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x000002000065e5a3 : jl 0x2000065e5d2 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065ef36 : jl 0x2000065ef65 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000662c4e : jl 0x20000662c7c ; pop rax ; mov rcx, rdi ; call 0x200000eef38
0x00000200006636bf : jl 0x200006636ee ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006659d8 : jl 0x20000665a07 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000666834 : jl 0x20000666863 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066a171 : jl 0x2000066a19b ; sub byte ptr [rbx], dh ; ret 0x6c89
0x000002000066a985 : jl 0x2000066a9b4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066dc88 : jl 0x2000066dcb9 ; int 0xff
0x000002000066e850 : jl 0x2000066e87f ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066e8f6 : jl 0x2000066e925 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000673744 : jl 0x20000673773 ; js 0x20000673799 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000678243 : jl 0x2000067826e ; and al, ch ; insd dword ptr [rdi], dx ; ret 0xffb8
0x000002000067944d : jl 0x20000679478 ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000067a352 : jl 0x2000067a381 ; js 0x2000067a3a7 ; add esp, 0x50 ; pop r14 ; ret
0x000002000067c3b8 : jl 0x2000067c3e7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000067c73d : jl 0x2000067c76c ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006835e5 : jl 0x20000683614 ; js 0x2000068363a ; add esp, 0x50 ; pop r14 ; ret
0x0000020000684fec : jl 0x2000068501b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000068596c : jl 0x2000068599b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000685a42 : jl 0x20000685a71 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000685bee : jl 0x20000685c1d ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000685ce9 : jl 0x20000685d18 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000687f7e : jl 0x20000687fad ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000689344 : jl 0x20000689372 ; and byte ptr [rip - 0x7ffffffb], ah ; ret
0x000002000068a8cb : jl 0x2000068a8fa ; add rsp, 0x20 ; pop r14 ; ret
0x000002000068b1b6 : jl 0x2000068b1e0 ; sub bh, bh ; ret
0x000002000068d866 : jl 0x2000068d893 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x000002000068fad9 : jl 0x2000068fb08 ; push 0x40c48348 ; pop r14 ; ret
0x000002000068fbd3 : jl 0x2000068fc02 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000068fc6d : jl 0x2000068fc9c ; push 0x40c48348 ; pop r14 ; ret
0x00000200006901a5 : jl 0x200006901d2 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x0000020000693ea1 : jl 0x20000693ecb ; sub bh, bh ; ret
0x0000020000694bd9 : jl 0x20000694c07 ; sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x0000020000695bb8 : jl 0x20000695be7 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000695dd2 : jl 0x20000695ddb ; add rsp, 0x20 ; pop rbx ; ret
0x000002000069a2c4 : jl 0x2000069a2f3 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000069e7f1 : jl 0x2000069e820 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000069eb78 : jl 0x2000069eba7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000069ec5e : jl 0x2000069ec8d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000069ef78 : jl 0x2000069efa7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000069f84e : jl 0x2000069f87d ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006a166d : jl 0x200006a169c ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006a4dae : jl 0x200006a4ddd ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006a947a : jl 0x200006a9447 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006a9a04 : jl 0x200006a9a33 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006aa44a : jl 0x200006aa479 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006aaf7f : jl 0x200006aafae ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006ae1db : jl 0x200006ae20a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006ae723 : jl 0x200006ae752 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006bae0f : jl 0x200006bae3e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006bbe38 : jl 0x200006bbe67 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006bc31d : jl 0x200006bc34c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006bda10 : jl 0x200006bd9c4 ; or byte ptr [rax], al ; test rax, rax ; je 0x200006bda28 ; call rax
0x00000200006bf498 : jl 0x200006bf4c7 ; sub byte ptr [rcx + rcx*4 + 0x74], cl ; and al, 0x20 ; call r10
0x00000200006c25dc : jl 0x200006c2607 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200006c2678 : jl 0x200006c26a3 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200006c2714 : jl 0x200006c273f ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200006c569c : jl 0x200006c5669 ; or byte ptr [rcx + 0x63487f7d], cl ; ret 0x8348
0x00000200006c649c : jl 0x200006c64cb ; js 0x200006c64f1 ; add esp, 0x50 ; pop r14 ; ret
0x00000200006c65c0 : jl 0x200006c65ef ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006c6fca : jl 0x200006c6ff9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006c858a : jl 0x200006c85b9 ; push 0x40c48348 ; pop r14 ; ret
0x00000200006c894c : jl 0x200006c897b ; push 0x40c48348 ; pop r14 ; ret
0x00000200006ce75a : jl 0x200006ce71d ; inc dword ptr [rcx + 0x38] ; or byte ptr [rbx + rdx - 1], dh ; ret 0x8349
0x00000200006cf152 : jl 0x200006cf181 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006d1250 : jl 0x200006d127d ; push -0x7df005c5 ; ret 0xfffb
0x00000200006d30dd : jl 0x200006d310c ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006d38b6 : jl 0x200006d38e5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006d3ef9 : jl 0x200006d3f28 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006d6c20 : jl 0x200006d6bd4 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax + 0x3b] ; ret
0x00000200006dd10e : jl 0x200006dd13d ; js 0x200006dd163 ; add esp, 0x50 ; pop r14 ; ret
0x00000200006e0372 : jl 0x200006e03a1 ; js 0x200006e03c7 ; add esp, 0x50 ; pop r14 ; ret
0x00000200006e07d0 : jl 0x200006e07ff ; push 0x40c48348 ; pop r14 ; ret
0x00000200006e11a3 : jl 0x200006e11d2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006e1a53 : jl 0x200006e1a82 ; push 0x40c48348 ; pop r14 ; ret
0x00000200006e6ef6 : jl 0x200006e6f25 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006e6f79 : jl 0x200006e6fa8 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006f44e1 : jl 0x200006f4510 ; push 0x40c48348 ; pop r14 ; ret
0x00000200006f46ef : jl 0x200006f471e ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006f7180 : jl 0x200006f71a7 ; ret 0xe9ff
0x00000200006ff1cc : jl 0x200006ff1fb ; add rsp, 0x20 ; pop r14 ; ret
0x000002000070285e : jl 0x20000702867 ; mov al, 1 ; ret
0x0000020000704c30 : jl 0x20000704c5f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200007057dc : jl 0x2000070580b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000706035 : jl 0x20000706064 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000070614f : jl 0x2000070617e ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000706bb4 : jl 0x20000706be3 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000708238 : jl 0x20000708267 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000708b9f : jl 0x20000708bce ; add rsp, 0x20 ; pop r14 ; ret
0x000002000070963d : jl 0x2000070966c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200007097f0 : jl 0x2000070981f ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000709ce5 : jl 0x20000709d14 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000070a1aa : jl 0x2000070a1d9 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000070a694 : jl 0x2000070a6c3 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000070ae00 : jl 0x2000070ae2f ; add rsp, 0x20 ; pop r14 ; ret
0x000002000070b717 : jl 0x2000070b746 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000070c5ef : jl 0x2000070c61e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000070e150 : jl 0x2000070e17f ; push 0x40c48348 ; pop r14 ; ret
0x000002000070ebff : jl 0x2000070ec2e ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000070f246 : jl 0x2000070f275 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000070f8ec : jl 0x2000070f91b ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000070f992 : jl 0x2000070f9c1 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000070fa28 : jl 0x2000070fa57 ; and byte ptr [rax - 0x75], cl ; salc ; mov rcx, rbp ; call rax
0x0000020000710173 : jl 0x200007101a2 ; push 0x50c48348 ; pop r14 ; ret
0x00000200007108e4 : jl 0x20000710913 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000071098f : jl 0x200007109be ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000710a95 : jl 0x20000710ac4 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000712359 : jl 0x20000712388 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000071395a : jl 0x20000713989 ; js 0x200007139af ; add esp, 0x50 ; pop r14 ; ret
0x0000020000714d41 : jl 0x20000714d70 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000714de7 : jl 0x20000714e16 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000716017 : jl 0x20000716046 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000071609d : jl 0x200007160cc ; add rsp, 0x20 ; pop r14 ; ret
0x000002000071893d : jl 0x2000071896c ; add rsp, 0x20 ; pop r14 ; ret
0x000002000071913a : jl 0x20000719169 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000719f0b : jl 0x20000719f3a ; add rsp, 0x20 ; pop r15 ; ret
0x000002000071afb8 : jl 0x2000071afe7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000071b136 : jl 0x2000071b165 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000071b595 : jl 0x2000071b5c4 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000071bcf6 : jl 0x2000071bd25 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000071c62b : jl 0x2000071c65a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000071d829 : jl 0x2000071d858 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000724712 : jl 0x20000724741 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000072874d : jl 0x2000072877c ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000729a78 : jl 0x20000729aa7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000072b927 : jl 0x2000072b956 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200007924c2 : jl 0x200007924f1 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000797319 : jl 0x20000797348 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000079d983 : jl 0x2000079d9b1 ; add rsp, 0x30 ; pop rbp ; ret
0x00000200007a16f7 : jl 0x200007a1726 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200007a1e1c : jl 0x200007a1e46 ; js 0x200007a1daf ; ret 0x9489
0x00000200007a87fc : jl 0x200007a882b ; add rsp, 0x20 ; pop r15 ; ret
0x00000200007ac5cf : jl 0x200007ac5fd ; push 0x50c48348 ; pop rbp ; ret
0x00000200007ad0e3 : jl 0x200007ad110 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200007ad93f : jl 0x200007ad96e ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200007adc3a : jl 0x200007adc69 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200007b0691 : jl 0x200007b06bf ; js 0x200007b06e5 ; add esp, 0x50 ; pop rbp ; ret
0x00000200007b1eaa : jl 0x200007b1ed9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200007b3170 : jl 0x200007b319f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200007b4d94 : jl 0x200007b4dc3 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200007b4ed5 : jl 0x200007b4f04 ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200007b5c5b : jl 0x200007b5c8a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200007b6278 : jl 0x200007b62f3 ; cwde ; inc dword ptr [rbx] ; ret
0x00000200007b94f2 : jl 0x200007b9521 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200007ba2f7 : jl 0x200007ba326 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200007ba849 : jl 0x200007ba875 ; and al, ch ; sti ; ret
0x00000200007cf65f : jl 0x200007cf68e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200007d0a59 : jl 0x200007d0a87 ; js 0x200007d0aad ; add esp, 0x60 ; pop rbp ; ret
0x00000200007d13ce : jl 0x200007d13fd ; xor byte ptr [rax - 0x73], cl ; and al, 0x50 ; call r12
0x00000200007d2975 : jl 0x200007d29a4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200007d2c26 : jl 0x200007d2c55 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200007d4eeb : jl 0x200007d4f1a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000709eb : jle 0x20000070a03 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000002000007bb1e : jle 0x2000007bb23 ; ret
0x000002000007c7df : jle 0x2000007c7ae ; mov byte ptr [rdx], cl ; ret
0x000002000008de27 : jle 0x2000008de36 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d4aca : jle 0x200000d4ad6 ; add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7b], r9b ; ret
0x00000200000e723f : jle 0x200000e724d ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000107580 : jle 0x2000010757a ; ret
0x0000020000135dae : jle 0x20000135d7e ; not eax ; inc eax ; ret
0x0000020000136d84 : jle 0x20000136dfe ; add bh, bh ; ret
0x000002000002e672 : jle 0x20000169a40 ; ret
0x000002000018d2ad : jle 0x2000018d2a3 ; dec dword ptr [rax + 0x3b] ; ret 0x860f
0x0000020000192788 : jle 0x20000192783 ; inc dword ptr [rbp + 0x33] ; ror byte ptr [rax - 0x73], 0xd ; ret
0x0000020000196d82 : jle 0x20000196db9 ; int1 ; dec dword ptr [rax - 0x75] ; ret 0x8348
0x00000200001b1a48 : jle 0x200001b1a34 ; ret 0xe9c8
0x00000200001eb142 : jle 0x200001eb155 ; lock dec dword ptr [rcx + 0x1190] ; ret
0x00000200001eb160 : jle 0x200001eb173 ; lock dec dword ptr [rcx + 0x1194] ; ret
0x0000020000210953 : jle 0x20000210967 ; mov r9d, r11d ; mov r8d, edx ; jmp 0x20000210967
0x00000200002288ca : jle 0x200002288dc ; sbb byte ptr [rax], al ; mov dword ptr [r8], eax ; ret
0x0000020000232c7a : jle 0x20000232cf0 ; push rax ; loopne 0x20000232c48 ; ret 0x187d
0x0000020000232c79 : jle 0x20000232cf1 ; push rax ; loopne 0x20000232c49 ; ret 0x187d
0x0000020000232da4 : jle 0x20000232e2a ; pop rax ; and ah, al ; ret 0x187d
0x0000020000232da3 : jle 0x20000232e2b ; pop rax ; and ah, al ; ret 0x187d
0x0000020000238c2d : jle 0x20000238c40 ; mov rax, qword ptr [rip + 0xc0c1a] ; call rax
0x00000200003cab32 : jle 0x200003cab30 ; push qword ptr [rax + rcx - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000200003eda64 : jle 0x200003eda84 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb28
0x0000020000439ef2 : jle 0x20000439ebe ; dec dword ptr [rbx - 0x74afdbac] ; ret 0xc323
0x000002000043f877 : jle 0x2000043f880 ; jmp 0x2000043f841
0x00000200004445a6 : jle 0x200004445a4 ; inc dword ptr [rcx + 3] ; ret
0x0000020000456638 : jle 0x20000456664 ; cmp eax, 0x52 ; jg 0x2000045664b ; mov al, 1 ; ret
0x0000020000463e0c : jle 0x20000463e4c ; and esi, dword ptr [rdi + rbp - 0x75] ; ret
0x0000020000497594 : jle 0x20000497611 ; adc eax, dword ptr [rax] ; ret
0x00000200004a94be : jle 0x200004a9480 ; ret
0x00000200004afc9e : jle 0x200004afcfc ; ret
0x00000200004bd61e : jle 0x200004bd5c9 ; ret 0xe9ff
0x00000200004e3014 : jle 0x200004e3021 ; add rsp, 0x38 ; ret
0x00000200004ee9e6 : jle 0x200004ee9a3 ; dec dword ptr [rax - 0x75] ; ret
0x000002000052d21e : jle 0x2000052d268 ; ret 0x48ff
0x0000020000535664 : jle 0x20000535628 ; call rax
0x000002000059da0f : jle 0x2000059da4d ; call 0x1ffc3e5271b
0x000002000059da0f : jle 0x2000059da4f ; call 0x1ffc3e5271d
0x0000020000447b33 : jle 0x200005aaf72 ; ret
0x00000200005c83d4 : jle 0x200005c838b ; push qword ptr [rdx] ; ret
0x00000200005c83d3 : jle 0x200005c838c ; push qword ptr [rdx] ; ret
0x00000200005c9cd6 : jle 0x200005c9ce4 ; jmp 0x200004847a0
0x00000200005d405e : jle 0x200005d4067 ; ret 0x90ff
0x00000200005d89c4 : jle 0x200005d89b8 ; push rsi ; ret
0x00000200005e2ae3 : jle 0x200005e2ad0 ; ret 0xffa2
0x00000200005e2ae2 : jle 0x200005e2ad1 ; ret 0xffa2
0x000002000060d07e : jle 0x2000060d081 ; ret
0x000002000061938e : jle 0x2000061935d ; ret
0x0000020000644fd2 : jle 0x20000645056 ; loope 0x20000644fdd ; add rsp, 0x48 ; ret
0x0000020000668e7e : jle 0x20000668e04 ; cdq ; jmp qword ptr [rbx]
0x00000200006c36be : jle 0x200006c3706 ; ret
0x0000020000716dff : jle 0x20000716e11 ; mov dword ptr [rax + 0x8168], r8d ; ret
0x00000200007196b3 : jle 0x2000071968d ; cmp eax, 3 ; jne 0x2000071968d ; xor eax, eax ; ret
0x0000020000719682 : jle 0x200007196c1 ; mov eax, 1 ; ret
0x00000200007e0c72 : jle 0x200007e0c7a ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7e0d
0x00000200007e0fc2 : jle 0x200007e0fca ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7e15
0x00000200007e1312 : jle 0x200007e131a ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7e13
0x0000020000202a5e : jmp 0x1ff8368ecf0
0x00000200003eb51e : jmp 0x1ff8386b52a
0x00000200004d16af : jmp 0x1ff8395d6ef
0x00000200007261b5 : jmp 0x1ff83bb6156
0x00000200005abc01 : jmp 0x1ff841d4808
0x0000020000532ed1 : jmp 0x1ff8760bc27
0x0000020000005342 : jmp 0x1ff89c27e8b
0x000002000013376f : jmp 0x1ff8af8ac7b
0x00000200000cfcc3 : jmp 0x1ff8b0cfcce
0x000002000070ac71 : jmp 0x1ff8bb9be67
0x00000200007a8c85 : jmp 0x1ff8bc38c94
0x00000200001c24a3 : jmp 0x1ff8bfe99af
0x00000200006262b8 : jmp 0x1ffa32505a8
0x00000200000a9ace : jmp 0x1ffb11a8afa
0x0000020000493bc6 : jmp 0x1ffba0b6734
0x000002000005325d : jmp 0x1ffc1707a6d
0x00000200006754a4 : jmp 0x1ffc183bba9
0x00000200006754cf : jmp 0x1ffc183bbd4
0x0000020000675590 : jmp 0x1ffc1b3bc95
0x00000200006755bb : jmp 0x1ffc1b3bcc0
0x00000200005a40e3 : jmp 0x1ffc21cccea
0x00000200000df0f4 : jmp 0x1ffc2313a09
0x00000200005bd132 : jmp 0x1ffc269bb3a
0x000002000000326a : jmp 0x1ffc28373d9
0x00000200005a94f6 : jmp 0x1ffc285ddfe
0x00000200005bd10b : jmp 0x1ffc288bb13
0x0000020000011f37 : jmp 0x1ffc28c6752
0x00000200000532b4 : jmp 0x1ffc2907bc0
0x00000200002136cc : jmp 0x1ffc2a47ed9
0x00000200003ea4c1 : jmp 0x1ffc2c3b3cd
0x00000200004c219b : jmp 0x1ffc2d76aa8
0x00000200002121cb : jmp 0x1ffc2d83115
0x00000200004a6e7c : jmp 0x1ffc2df7e84
0x0000020000009953 : jmp 0x1ffc300ae69
0x000002000005285e : jmp 0x1ffc3099d68
0x0000020000128ead : jmp 0x1ffc3231803
0x00000200001fd663 : jmp 0x1ffc338bf2d
0x00000200001de274 : jmp 0x1ffc3426fc9
0x00000200005a9a44 : jmp 0x1ffc35de04c
0x000002000072c2e1 : jmp 0x1ffc37b4c2b
0x00000200003d14ee : jmp 0x1ffc37f41df
0x0000020000097400 : jmp 0x1ffc38d7408
0x00000200000db705 : jmp 0x1ffc392b999
0x00000200001412b8 : jmp 0x1ffc3a012be
0x00000200001412b7 : jmp 0x1ffc3a012bf
0x00000200002378eb : jmp 0x1ffc3a6c1f6
0x00000200001f511b : jmp 0x1ffc3aa9a23
0x00000200000d6853 : jmp 0x1ffc3b2ec6b
0x000002000005106d : jmp 0x1ffc3c63383
0x00000200003fa6e6 : jmp 0x1ffc3cb861a
0x000002000046e658 : jmp 0x1ffc3d2e63e
0x000002000013b67e : jmp 0x1ffc3d641d0
0x0000020000220c46 : jmp 0x1ffc3d81c4e
0x000002000050f40d : jmp 0x1ffc3dcf3ce
0x00000200005a79b0 : jmp 0x1ffc3ddc2b8
0x00000200005a79f5 : jmp 0x1ffc3ddc2fd
0x00000200005a7a19 : jmp 0x1ffc3ddc321
0x00000200005a7ab5 : jmp 0x1ffc3ddc3bd
0x00000200005a9458 : jmp 0x1ffc3e5e160
0x00000200005bc7a3 : jmp 0x1ffc3e710ab
0x0000020000051968 : jmp 0x1ffc3ef8e72
0x00000200006cfbc4 : jmp 0x1ffc3f10ace
0x000002000065850a : jmp 0x1ffc3f184bb
0x0000020000165612 : jmp 0x1ffc3facb1c
0x000002000012978d : jmp 0x1ffc3ff0c97
0x0000020000192719 : jmp 0x1ffc402b821
0x000002000045655f : jmp 0x1ffc4066567
0x000002000021648d : jmp 0x1ffc407d997
0x0000020000541783 : jmp 0x1ffc4098c8d
0x000002000010bd7e : jmp 0x1ffc41008fb
0x00000200001d4684 : jmp 0x1ffc41d0f10
0x00000200004aa15a : jmp 0x1ffc43a1664
0x0000020000536e51 : jmp 0x1ffc447e35b
0x00000200006c6026 : jmp 0x1ffc449d93f
0x00000200006c6062 : jmp 0x1ffc449d97b
0x0000020000686878 : jmp 0x1ffc44add82
0x00000200005588af : jmp 0x1ffc45488c1
0x00000200006f5dd4 : jmp 0x1ffcafb5dde
0x000002000021e6bf : jmp 0x1ffcd2673d9
0x000002000069f354 : jmp 0x1ffce2c5c6c
0x00000200005f9003 : jmp 0x1ffd0227816
0x0000020000512c97 : jmp 0x1ffd3506e9e
0x0000020000677e1a : jmp 0x1ffd88b6726
0x00000200000a8c40 : jmp 0x1ffdcb9135d
0x000002000011615d : jmp 0x1ffe1923360
0x000002000077f2fa : jmp 0x1ffec3a7e4a
0x00000200004c9795 : jmp 0x1fff59780ac
0x000002000011709b : jmp 0x1fffad341aa
0x000002000042433f : jmp 0x1fffc04c697
0x00000200001bab5e : jmp 0x1ffff5cab85
0x0000020000052590 : jmp 0x1ffff8825ab
0x00000200000525eb : jmp 0x1ffffc81d3b
0x00000200005a31d8 : jmp 0x1ffffdd73e0
0x0000020000002e64 : jmp 0x20000002b02
0x0000020000002ed2 : jmp 0x20000002b19
0x0000020000002f3b : jmp 0x20000002b2c
0x0000020000002f48 : jmp 0x20000002c92
0x0000020000002c7e : jmp 0x20000002f84
0x00000200000037e3 : jmp 0x200000037a8
0x00000200000038f3 : jmp 0x200000038b8
0x000002000000c7da : jmp 0x2000000c76f
0x0000020000162474 : jmp 0x2000000e6dc
0x00000200001629a2 : jmp 0x2000000f983
0x0000020000015140 : jmp 0x20000014ff5
0x0000020000017740 : jmp 0x200000174e5
0x000002000001773f : jmp 0x200000174e6
0x000002000001a9fe : jmp 0x2000001a933
0x000002000001a9dd : jmp 0x2000001a96b
0x000002000001b614 : jmp 0x2000001b5ab
0x000002000001c3b3 : jmp 0x2000001c2a0
0x000002000001ce8e : jmp 0x2000001ce9d
0x0000020000165acf : jmp 0x2000001e1ae
0x000002000001ea6d : jmp 0x2000001ea33
0x000002000001f7d7 : jmp 0x2000001f79d
0x0000020000026080 : jmp 0x20000026046
0x0000020000026223 : jmp 0x200000261e9
0x0000020000027505 : jmp 0x200000274ca
0x00000200000291ba : jmp 0x20000029180
0x000002000002abe1 : jmp 0x2000002aba7
0x000002000002c11f : jmp 0x2000002c179
0x000002000002ceb7 : jmp 0x2000002ce7d
0x000002000002ceb6 : jmp 0x2000002ce7e
0x000002000002e4f7 : jmp 0x2000002e4bc
0x0000020000033d67 : jmp 0x20000033d42
0x0000020000035847 : jmp 0x2000003580d
0x0000020000037142 : jmp 0x20000037108
0x0000020000038125 : jmp 0x2000003812c
0x0000020000038148 : jmp 0x2000003812e
0x0000020000039ec6 : jmp 0x20000039e8c
0x000002000003db3f : jmp 0x2000003db04
0x0000020000042c4f : jmp 0x20000042c15
0x000002000016feae : jmp 0x20000044550
0x00000200000450c7 : jmp 0x200000450ff
0x000002000017d265 : jmp 0x20000045951
0x000002000017dd40 : jmp 0x200000483ef
0x000002000017ea82 : jmp 0x2000004ac9e
0x000002000017ebdc : jmp 0x2000004aedc
0x000002000004b32d : jmp 0x2000004b2f3
0x000002000004cffe : jmp 0x2000004bfdb
0x000002000017ef61 : jmp 0x2000004c084
0x000002000004cfec : jmp 0x2000004cbb0
0x000002000004fdd1 : jmp 0x2000004fde3
0x0000020000181175 : jmp 0x2000005259a
0x0000020000052687 : jmp 0x20000052623
0x000002000005266f : jmp 0x20000052634
0x0000020000054820 : jmp 0x20000054666
0x00000200000545bf : jmp 0x200000547ca
0x00000200000555a8 : jmp 0x2000005524b
0x00000200000594dc : jmp 0x20000059155
0x0000020000059e1a : jmp 0x20000059de0
0x000002000005a64b : jmp 0x20000059f53
0x000002000005a0b4 : jmp 0x2000005a1db
0x000002000005a1d0 : jmp 0x2000005a284
0x000002000005a182 : jmp 0x2000005a548
0x000002000005a181 : jmp 0x2000005a549
0x00000200001832c9 : jmp 0x2000005c1f6
0x000002000005e07f : jmp 0x2000005e044
0x000002000005efac : jmp 0x2000005ef71
0x000002000005f9f3 : jmp 0x2000005f9b9
0x00000200001852b3 : jmp 0x200000614ce
0x00000200000626d8 : jmp 0x2000006259d
0x0000020000062d13 : jmp 0x20000062a98
0x0000020000062d5d : jmp 0x20000062acf
0x0000020000062eb0 : jmp 0x20000062b68
0x0000020000063304 : jmp 0x20000062beb
0x000002000018667a : jmp 0x200000693dc
0x00000200001887ef : jmp 0x2000007033b
0x00000200000712f2 : jmp 0x200000712b8
0x0000020000071586 : jmp 0x2000007154b
0x0000020000073400 : jmp 0x200000733c6
0x0000020000075150 : jmp 0x20000075042
0x0000020000075144 : jmp 0x200000750ca
0x000002000001e2e9 : jmp 0x20000075196
0x0000020000189c23 : jmp 0x20000075ebe
0x00000200000783c8 : jmp 0x20000078959
0x0000020000078a81 : jmp 0x20000078b09
0x000002000007c87d : jmp 0x2000007c843
0x000002000007ce83 : jmp 0x2000007ce49
0x0000020000458000 : jmp 0x2000007d083
0x000002000007d26d : jmp 0x2000007d190
0x000002000007e19a : jmp 0x2000007e160
0x000002000007e3a9 : jmp 0x2000007e324
0x000002000007e740 : jmp 0x2000007e706
0x00000200000818ad : jmp 0x200000814ff
0x00000200000881dc : jmp 0x200000881a1
0x000002000018e94d : jmp 0x2000008ab75
0x0000020000092c4c : jmp 0x20000092a23
0x0000020000190f04 : jmp 0x20000094028
0x000002000009412c : jmp 0x20000094131
0x0000020000190ead : jmp 0x2000009414d
0x00000200001914a3 : jmp 0x200000949a5
0x0000020000191453 : jmp 0x20000094bc8
0x00000200001914b3 : jmp 0x20000095014
0x00000200000973fe : jmp 0x20000095d30
0x0000020000097371 : jmp 0x20000095f9d
0x0000020000097418 : jmp 0x200000969c1
0x0000020000191d72 : jmp 0x2000009893a
0x00000200000999d3 : jmp 0x200000998fe
0x0000020000099d56 : jmp 0x20000099d1b
0x000002000019271c : jmp 0x2000009a4ea
0x0000020000193646 : jmp 0x2000009d661
0x0000020000193ac2 : jmp 0x2000009e4ea
0x000002000019497d : jmp 0x200000a0fa1
0x0000020000194b56 : jmp 0x200000a18e0
0x00000200000a36b3 : jmp 0x200000a3678
0x0000020000195f01 : jmp 0x200000a7876
0x0000020000196484 : jmp 0x200000a84b9
0x00000200000a8826 : jmp 0x200000a8640
0x000002000019669b : jmp 0x200000a8679
0x00000200000a88e2 : jmp 0x200000a873a
0x00000200000ab71c : jmp 0x200000ab72e
0x00000200000accf5 : jmp 0x200000accaa
0x00000200000acdc2 : jmp 0x200000acd88
0x00000200000ad409 : jmp 0x200000acf5a
0x00000200000af3c3 : jmp 0x200000af3d6
0x0000020000198cb2 : jmp 0x200000b1a82
0x00000200000b664e : jmp 0x200000b5e63
0x0000020000199f85 : jmp 0x200000b61be
0x00000200000b913e : jmp 0x200000b8e53
0x00000200000bb6ca : jmp 0x200000bb68f
0x000002000019ca82 : jmp 0x200000c1b05
0x00000200007b594c : jmp 0x200000c6788
0x000002000019fd31 : jmp 0x200000cbf9a
0x00000200000cca5d : jmp 0x200000cca76
0x00000200000ccd29 : jmp 0x200000cca80
0x00000200000d1e11 : jmp 0x200000d1e09
0x00000200000d4094 : jmp 0x200000d4040
0x00000200001a299a : jmp 0x200000d4c53
0x00000200000d73c0 : jmp 0x200000d71b7
0x00000200000dbbf6 : jmp 0x200000dbbbc
0x00000200000dc518 : jmp 0x200000dc450
0x00000200001a549a : jmp 0x200000dfa17
0x00000200001a5f6a : jmp 0x200000e13a4
0x00000200001a666b : jmp 0x200000e2913
0x00000200001a7779 : jmp 0x200000e6157
0x00000200001a8291 : jmp 0x200000e905a
0x00000200000ea19b : jmp 0x200000e9e9b
0x00000200000ea6ce : jmp 0x200000ea59c
0x00000200000eafad : jmp 0x200000eabbf
0x00000200001a8aa3 : jmp 0x200000ecaf1
0x00000200001a8c07 : jmp 0x200000edec4
0x00000200000ee8da : jmp 0x200000ee80b
0x00000200000ee8d9 : jmp 0x200000ee80c
0x00000200000f09f3 : jmp 0x200000f09cd
0x00000200000f2769 : jmp 0x200000f252a
0x00000200000f3f29 : jmp 0x200000f3eee
0x00000200000f5cc9 : jmp 0x200000f5c8f
0x00000200000f6afb : jmp 0x200000f6ac1
0x00000200001aa834 : jmp 0x200000f6b38
0x00000200000f8db3 : jmp 0x200000f8d78
0x0000020000100997 : jmp 0x2000010095d
0x0000020000102a12 : jmp 0x200001029d8
0x000002000010467e : jmp 0x2000010452f
0x000002000010608e : jmp 0x20000106053
0x00000200001095f6 : jmp 0x200001095bc
0x000002000010d321 : jmp 0x2000010d201
0x000002000010e6d4 : jmp 0x2000010e69a
0x000002000010e981 : jmp 0x2000010e947
0x000002000017612b : jmp 0x20000112372
0x0000020000176117 : jmp 0x2000011237c
0x000002000017621b : jmp 0x20000112463
0x0000020000176251 : jmp 0x2000011253d
0x0000020000176296 : jmp 0x20000112582
0x00000200001762a5 : jmp 0x20000112594
0x0000020000176340 : jmp 0x2000011262b
0x0000020000117bd8 : jmp 0x20000117be0
0x000002000011bb92 : jmp 0x2000011ba97
0x000002000011bfef : jmp 0x2000011bfb5
0x000002000012575a : jmp 0x20000125720
0x00000200001273c5 : jmp 0x200001271ae
0x000002000011c552 : jmp 0x20000128115
0x000002000012f296 : jmp 0x2000012f25c
0x000002000013032e : jmp 0x200001302f3
0x00000200001b1337 : jmp 0x20000135347
0x00000200001b13ed : jmp 0x20000135475
0x0000020000135905 : jmp 0x20000135947
0x00000200001b280f : jmp 0x2000013a1ed
0x000002000013bbe8 : jmp 0x2000013bbae
0x000002000013c8c3 : jmp 0x2000013c879
0x0000020000141099 : jmp 0x2000014109c
0x0000020000141098 : jmp 0x2000014109d
0x0000020000142c9d : jmp 0x20000142bdf
0x0000020000143993 : jmp 0x2000014385e
0x0000020000144c26 : jmp 0x20000144c78
0x0000020000151081 : jmp 0x20000151102
0x0000020000149d49 : jmp 0x20000156042
0x0000020000701636 : jmp 0x20000157889
0x000002000015c539 : jmp 0x2000015c4fe
0x000002000015c538 : jmp 0x2000015c4ff
0x000002000015ff3c : jmp 0x2000015ff46
0x000002000016006a : jmp 0x20000160074
0x0000020000160188 : jmp 0x20000160192
0x0000020000165ad2 : jmp 0x20000165ad7
0x000002000016bed1 : jmp 0x2000016be96
0x00000200001060e4 : jmp 0x200001723a7
0x0000020000106237 : jmp 0x200001724e5
0x0000020000106423 : jmp 0x20000172660
0x0000020000172819 : jmp 0x20000172823
0x00000200001728e9 : jmp 0x200001728f3
0x0000020000173b52 : jmp 0x20000173b5c
0x0000020000173c4d : jmp 0x20000173c57
0x0000020000174469 : jmp 0x20000174473
0x0000020000174629 : jmp 0x20000174633
0x00000200001796d4 : jmp 0x200001796e5
0x0000020000051c37 : jmp 0x20000180f1e
0x000002000005580d : jmp 0x200001820c3
0x000002000018837e : jmp 0x20000188477
0x000002000007dfaa : jmp 0x2000018b06c
0x000002000020221a : jmp 0x2000018e518
0x0000020000094f8b : jmp 0x200001911c4
0x000002000009a676 : jmp 0x200001926be
0x00000200000a2bd3 : jmp 0x20000194ea8
0x00000200000c1851 : jmp 0x2000019c743
0x00000200000c4cbe : jmp 0x2000019d676
0x00000200000e5cde : jmp 0x200001a780a
0x00000200000e78a5 : jmp 0x200001a7f1b
0x00000200000e7b11 : jmp 0x200001a7fad
0x00000200000edbe9 : jmp 0x200001a8bbd
0x00000200001ad4a8 : jmp 0x200001ad4e2
0x00000200001af61f : jmp 0x200001af5e5
0x00000200001b156c : jmp 0x200001b1596
0x00000200001b8869 : jmp 0x200001b882f
0x000002000006f04c : jmp 0x200001bb28a
0x00000200001c4b3c : jmp 0x200001c4b7c
0x00000200001c7baf : jmp 0x200001c7bcc
0x00000200001c8718 : jmp 0x200001c872d
0x000002000004815a : jmp 0x200001d43a6
0x00000200001d793e : jmp 0x200001d7923
0x00000200001d8afc : jmp 0x200001d8b2e
0x00000200001de705 : jmp 0x200001de834
0x00000200001e3cac : jmp 0x200001e3cb1
0x00000200001e3c99 : jmp 0x200001e3e76
0x00000200001fa876 : jmp 0x200001fa8f2
0x00000200001fb61a : jmp 0x200001fb67e
0x00000200001fc221 : jmp 0x200001fc2bb
0x000002000020774f : jmp 0x20000207715
0x000002000020b5e5 : jmp 0x2000020b79d
0x000002000020ee17 : jmp 0x2000020eddd
0x000002000021187c : jmp 0x20000211827
0x0000020000213e81 : jmp 0x20000213ec1
0x0000020000213e74 : jmp 0x20000213f06
0x0000020000213ee6 : jmp 0x20000213f08
0x0000020000213fe2 : jmp 0x20000213fa8
0x000002000021405a : jmp 0x2000021404c
0x0000020000214a08 : jmp 0x20000214a1d
0x0000020000214cb2 : jmp 0x20000214cc7
0x0000020000217ff3 : jmp 0x20000217ffd
0x0000020000218107 : jmp 0x20000218111
0x0000020000218223 : jmp 0x2000021822d
0x000002000021c6f5 : jmp 0x2000021c6ff
0x000002000021c771 : jmp 0x2000021c77b
0x000002000021c77b : jmp 0x2000021c78d
0x000002000021c853 : jmp 0x2000021c884
0x0000020000220030 : jmp 0x20000220068
0x00000200002210d7 : jmp 0x20000221197
0x0000020000221e33 : jmp 0x20000221e45
0x0000020000226ba8 : jmp 0x20000226b6e
0x0000020000229008 : jmp 0x20000229041
0x000002000023543b : jmp 0x200002353cd
0x0000020000236771 : jmp 0x2000023679c
0x00000200002425d2 : jmp 0x200002425bd
0x00000200006273f9 : jmp 0x2000024d003
0x00000200003d4b5f : jmp 0x200003c7bf7
0x00000200003cabdd : jmp 0x200003caa71
0x00000200003d056a : jmp 0x200003d052f
0x00000200003d7a5b : jmp 0x200003d2516
0x00000200003d7ced : jmp 0x200003d392b
0x00000200003d7cec : jmp 0x200003d392c
0x00000200003dfa59 : jmp 0x200003dfa1b
0x00000200003e0af9 : jmp 0x200003e08df
0x00000200003eaeac : jmp 0x200003eaec2
0x00000200005852d8 : jmp 0x200003ec382
0x0000020000585791 : jmp 0x200003ed0b9
0x00000200003ede16 : jmp 0x200003edddb
0x00000200003efd4f : jmp 0x200003efd6c
0x00000200003f0fd4 : jmp 0x200003f0f9a
0x0000020000587ae1 : jmp 0x200003f3cf2
0x0000020000587aeb : jmp 0x200003f3d43
0x0000020000587b07 : jmp 0x200003f3d50
0x00000200003f8b4f : jmp 0x200003f8b15
0x00000200003fa7b4 : jmp 0x200003fa7e5
0x00000200003fae1f : jmp 0x200003fae3f
0x00000200003fb24e : jmp 0x200003fb270
0x00000200004003a6 : jmp 0x200004001b9
0x000002000040fda7 : jmp 0x2000040fd6d
0x00000200004124fe : jmp 0x200004124c3
0x0000020000413ab5 : jmp 0x20000412a15
0x000002000059488e : jmp 0x20000413a95
0x0000020000594524 : jmp 0x20000413a96
0x0000020000413d15 : jmp 0x20000413d17
0x0000020000416f6a : jmp 0x20000416eaf
0x0000020000416fa7 : jmp 0x20000416efd
0x0000020000418139 : jmp 0x2000041811e
0x000002000059adea : jmp 0x2000041cc90
0x00000200004202da : jmp 0x200004202a0
0x000002000042036c : jmp 0x20000420331
0x00000200005a0aa7 : jmp 0x20000427ff9
0x000002000042a8b9 : jmp 0x2000042a8e3
0x00000200005a10b3 : jmp 0x2000042b73d
0x00000200005a187c : jmp 0x2000042db74
0x0000020000430dde : jmp 0x20000430da3
0x00000200004329e3 : jmp 0x20000432ad9
0x0000020000434559 : jmp 0x2000043444d
0x00000200004344d2 : jmp 0x20000434494
0x00000200004364a6 : jmp 0x2000043646c
0x0000020000437c29 : jmp 0x20000437912
0x00000200005a5e53 : jmp 0x200004395da
0x00000200004397d6 : jmp 0x2000043962f
0x000002000043a4da : jmp 0x2000043a49f
0x000002000043ee58 : jmp 0x2000043ee1d
0x00000200005a79ad : jmp 0x2000043f315
0x00000200005a79f2 : jmp 0x2000043f31f
0x00000200005a79f1 : jmp 0x2000043f320
0x00000200005a7a16 : jmp 0x2000043f340
0x00000200005a7a15 : jmp 0x2000043f341
0x00000200005a7ab2 : jmp 0x2000043f376
0x000002000043f879 : jmp 0x2000043f83f
0x0000020000441372 : jmp 0x20000441337
0x0000020000441954 : jmp 0x2000044191a
0x000002000044247b : jmp 0x20000442441
0x00000200004440ed : jmp 0x200004440b3
0x0000020000444c28 : jmp 0x20000444c7f
0x0000020000446868 : jmp 0x2000044682d
0x0000020000446957 : jmp 0x2000044695b
0x00000200004469a2 : jmp 0x200004469af
0x00000200004472c7 : jmp 0x200004472d2
0x00000200005ab177 : jmp 0x20000447e3e
0x00000200005aba19 : jmp 0x200004498c4
0x000002000044a578 : jmp 0x2000044a53e
0x000002000045132d : jmp 0x200004512f2
0x0000020000451337 : jmp 0x200004512fd
0x00000200004588d4 : jmp 0x20000458899
0x00000200005bcff3 : jmp 0x20000459281
0x00000200005bd10d : jmp 0x20000459340
0x00000200005bd134 : jmp 0x20000459348
0x00000200005bd147 : jmp 0x200004593a7
0x0000020000462aed : jmp 0x20000462ab3
0x00000200005c0aad : jmp 0x20000462c67
0x00000200005c1334 : jmp 0x200004653db
0x00000200005c1773 : jmp 0x200004664ca
0x00000200004664e1 : jmp 0x200004664f2
0x0000020000468822 : jmp 0x200004688b3
0x00000200005c20d9 : jmp 0x2000046a28e
0x000002000046b491 : jmp 0x2000046b457
0x000002000046c7fe : jmp 0x2000046be66
0x000002000046ccab : jmp 0x2000046ccb5
0x000002000046f0ab : jmp 0x2000046f071
0x00000200005c317d : jmp 0x2000046f477
0x000002000046f575 : jmp 0x2000046f53a
0x0000020000478ad5 : jmp 0x20000478a9a
0x000002000047a54e : jmp 0x2000047a54c
0x000002000047f76f : jmp 0x2000047f508
0x000002000047f706 : jmp 0x2000047f9a7
0x000002000047fe08 : jmp 0x2000047fd74
0x0000020000481b55 : jmp 0x20000481b1b
0x0000020000481c34 : jmp 0x20000481bfa
0x00000200004828c7 : jmp 0x20000482d15
0x00000200005c9cd8 : jmp 0x2000048479e
0x00000200005c977c : jmp 0x200004847ab
0x00000200005caadf : jmp 0x20000486d38
0x0000020000487d5f : jmp 0x20000487a85
0x0000020000490fa0 : jmp 0x20000490e27
0x00000200005cd657 : jmp 0x20000491d56
0x00000200004922ba : jmp 0x20000492280
0x0000020000492f00 : jmp 0x20000492ec6
0x00000200004953c8 : jmp 0x200004952d6
0x00000200004953c7 : jmp 0x200004952d7
0x00000200004953d8 : jmp 0x2000049533b
0x00000200004953d7 : jmp 0x2000049533c
0x00000200004953c3 : jmp 0x2000049535f
0x0000020000497ed5 : jmp 0x20000497e9a
0x0000020000499e58 : jmp 0x20000499e1d
0x00000200005cfb64 : jmp 0x2000049bdb2
0x00000200005cfb6e : jmp 0x2000049bdb4
0x00000200004a6299 : jmp 0x200004a625f
0x00000200004a67d4 : jmp 0x200004a679a
0x00000200004a6e61 : jmp 0x200004a6de1
0x00000200004aa6cf : jmp 0x200004aa694
0x00000200004acc9d : jmp 0x200004acc63
0x00000200005d3830 : jmp 0x200004afab8
0x00000200004b1761 : jmp 0x200004b1727
0x00000200004b18fb : jmp 0x200004b18c0
0x00000200004b2c28 : jmp 0x200004b2a2c
0x00000200004b3dfc : jmp 0x200004b3dc1
0x00000200004b808f : jmp 0x200004b7fc0
0x00000200005d58b8 : jmp 0x200004b842c
0x00000200004b856c : jmp 0x200004b8532
0x00000200004c1fd8 : jmp 0x200004c1fd3
0x00000200004c4d20 : jmp 0x200004c4741
0x00000200005d8ca4 : jmp 0x200004c4f92
0x00000200005d8d01 : jmp 0x200004c5003
0x00000200005d8d4b : jmp 0x200004c5046
0x00000200004c52d4 : jmp 0x200004c5299
0x00000200005d90b5 : jmp 0x200004c5342
0x00000200005d9104 : jmp 0x200004c5402
0x00000200005d9103 : jmp 0x200004c5403
0x00000200004c577a : jmp 0x200004c57c1
0x00000200004c93aa : jmp 0x200004c8f7d
0x00000200004c961e : jmp 0x200004c9461
0x00000200004cb123 : jmp 0x200004cb128
0x00000200005daf70 : jmp 0x200004cb915
0x00000200004cec45 : jmp 0x200004cec0b
0x00000200004d34c9 : jmp 0x200004d32be
0x00000200005dc799 : jmp 0x200004d4082
0x00000200005dd622 : jmp 0x200004d9908
0x00000200005dd635 : jmp 0x200004d9916
0x00000200004dfadd : jmp 0x200004dfaa2
0x00000200004e4087 : jmp 0x200004e3aee
0x00000200004e5fa4 : jmp 0x200004e5dbd
0x00000200004e5ee4 : jmp 0x200004e5efd
0x00000200004e7ce1 : jmp 0x200004e7ce5
0x00000200005e2035 : jmp 0x200004ec839
0x00000200004ee25f : jmp 0x200004ee224
0x00000200005e29cb : jmp 0x200004eec36
0x00000200005e31c8 : jmp 0x200004f07d0
0x00000200004f0e9a : jmp 0x200004f0e5f
0x00000200005e3df6 : jmp 0x200004f220e
0x00000200004f80a2 : jmp 0x200004f8068
0x0000020000500b54 : jmp 0x20000500b19
0x00000200005015fd : jmp 0x200005015c2
0x0000020000501e31 : jmp 0x20000501df6
0x0000020000503164 : jmp 0x2000050314d
0x00000200005032e6 : jmp 0x200005032ac
0x0000020000504653 : jmp 0x20000504619
0x0000020000504e41 : jmp 0x20000504e06
0x0000020000506302 : jmp 0x200005062c7
0x00000200005ea342 : jmp 0x20000506601
0x0000020000506a88 : jmp 0x20000506a19
0x00000200005ebd7f : jmp 0x20000507fd1
0x00000200005ebdfd : jmp 0x20000508060
0x00000200005ebde9 : jmp 0x200005080c0
0x0000020000509dde : jmp 0x20000509da3
0x00000200005ec866 : jmp 0x2000050a571
0x000002000050c36d : jmp 0x2000050c302
0x000002000050c36c : jmp 0x2000050c303
0x000002000050d40d : jmp 0x2000050d3d2
0x000002000050d550 : jmp 0x2000050d515
0x00000200005105c4 : jmp 0x2000051058a
0x00000200005144cc : jmp 0x20000514460
0x00000200005b1c51 : jmp 0x200005150f2
0x000002000051aead : jmp 0x2000051aec2
0x000002000051cf09 : jmp 0x2000051cecf
0x000002000051debf : jmp 0x2000051de3d
0x0000020000520d0a : jmp 0x20000520ccf
0x00000200005b4b5d : jmp 0x20000520e5a
0x0000020000524cee : jmp 0x20000524cb4
0x00000200005258e2 : jmp 0x200005257c2
0x000002000052ce74 : jmp 0x2000052ce3a
0x00000200005b9fbb : jmp 0x2000052d77c
0x00000200005bb293 : jmp 0x20000532491
0x00000200005343d6 : jmp 0x200005343fa
0x0000020000534723 : jmp 0x2000053472d
0x0000020000535060 : jmp 0x20000535026
0x00000200005389ff : jmp 0x200005389c5
0x00000200005eb741 : jmp 0x2000053cac4
0x00000200005eef0f : jmp 0x2000053e760
0x0000020000548247 : jmp 0x2000054820d
0x00000200005f1abc : jmp 0x20000548c88
0x0000020000548edf : jmp 0x20000548ea4
0x0000020000549463 : jmp 0x20000549453
0x00000200005f4e88 : jmp 0x200005510c7
0x0000020000551b9b : jmp 0x20000551b61
0x00000200005f51a3 : jmp 0x20000551e0f
0x0000020000559027 : jmp 0x20000558fed
0x0000020000559987 : jmp 0x2000055994d
0x0000020000559986 : jmp 0x2000055994e
0x0000020000559985 : jmp 0x2000055994f
0x0000020000563732 : jmp 0x20000563757
0x00000200005fbe5f : jmp 0x20000564571
0x00000200005fcc1b : jmp 0x200005669b3
0x00000200005819e3 : jmp 0x200005819a9
0x00000200003e723c : jmp 0x200005834d4
0x0000020000593646 : jmp 0x20000593650
0x000002000059cc24 : jmp 0x2000059cc31
0x000002000059cc23 : jmp 0x2000059cc32
0x00000200005a7aa9 : jmp 0x200005a8240
0x00000200005b03c9 : jmp 0x200005b038e
0x00000200005b3db1 : jmp 0x200005b3dcb
0x00000200005bd7a3 : jmp 0x200005bd674
0x00000200005c16f3 : jmp 0x200005c175e
0x00000200005c520e : jmp 0x200005c5212
0x00000200005c520d : jmp 0x200005c5213
0x00000200005c8d46 : jmp 0x200005c8d69
0x00000200005c977f : jmp 0x200005c9783
0x00000200005c9cdb : jmp 0x200005c9cdf
0x0000020000491040 : jmp 0x200005cd31e
0x00000200005d2692 : jmp 0x200005d2658
0x00000200005d29c9 : jmp 0x200005d298f
0x00000200005d4b5f : jmp 0x200005d4b72
0x00000200005d59b6 : jmp 0x200005d59c4
0x00000200004c95b1 : jmp 0x200005d9a71
0x00000200004e4387 : jmp 0x200005e064e
0x00000200005e436e : jmp 0x200005e4364
0x00000200005e436d : jmp 0x200005e4365
0x0000020000544b28 : jmp 0x200005f0e14
0x0000020000544b70 : jmp 0x200005f0e3a
0x00000200005f877f : jmp 0x200005f8791
0x00000200005fcf47 : jmp 0x200005fcf0c
0x00000200005fcf46 : jmp 0x200005fcf0d
0x000002000060e539 : jmp 0x2000060e4ff
0x0000020000610e71 : jmp 0x20000610e9b
0x000002000061f683 : jmp 0x2000061f6e2
0x000002000062452a : jmp 0x20000624539
0x000002000062c671 : jmp 0x2000062c637
0x000002000062ec35 : jmp 0x2000062ebfa
0x000002000062ec87 : jmp 0x2000062ec7e
0x00000200006335cd : jmp 0x200006336b9
0x0000020000642b07 : jmp 0x20000642acd
0x0000020000643dd5 : jmp 0x20000643d9b
0x0000020000646f0b : jmp 0x20000646f65
0x0000020000647095 : jmp 0x200006470a5
0x000002000064bf43 : jmp 0x2000064bf08
0x0000020000658819 : jmp 0x200006587df
0x00000200006588f7 : jmp 0x200006588bd
0x0000020000658d13 : jmp 0x20000658d4b
0x000002000065b0c1 : jmp 0x2000065b236
0x00000200006617d8 : jmp 0x2000066179d
0x00000200006648ec : jmp 0x200006648f9
0x000002000066f633 : jmp 0x2000066f8a8
0x000002000066fe86 : jmp 0x2000066fe4c
0x0000020000671cd5 : jmp 0x20000671d8b
0x00000200006753e4 : jmp 0x200006753fe
0x00000200006762f6 : jmp 0x20000676302
0x000002000068534c : jmp 0x20000685312
0x00000200006859ea : jmp 0x20000685a0d
0x0000020000692f64 : jmp 0x20000692f9a
0x00000200006a0621 : jmp 0x200006a05e6
0x00000200006a06db : jmp 0x200006a06f2
0x00000200006a0e79 : jmp 0x200006a0e6e
0x00000200006a9c18 : jmp 0x200006a9c22
0x00000200005ef573 : jmp 0x200006ab82a
0x00000200006bbede : jmp 0x200006bbf07
0x00000200006bbed6 : jmp 0x200006bbf09
0x00000200006bbf93 : jmp 0x200006bbfcf
0x00000200006c336b : jmp 0x200006c336f
0x00000200006c5be5 : jmp 0x200006c5c39
0x00000200006ca76b : jmp 0x200006ca730
0x00000200006cd37f : jmp 0x200006cd3a6
0x00000200006cd39d : jmp 0x200006cd3a7
0x00000200006cd399 : jmp 0x200006cd3a8
0x00000200006cd40b : jmp 0x200006cd432
0x00000200006cd429 : jmp 0x200006cd433
0x00000200006cd425 : jmp 0x200006cd434
0x00000200006cef05 : jmp 0x200006ceee5
0x00000200006cfbeb : jmp 0x200006cfbfd
0x00000200006cfce7 : jmp 0x200006cfcf1
0x00000200006cffa0 : jmp 0x200006cffb2
0x00000200006d4fcd : jmp 0x200006d4f93
0x00000200006dcb24 : jmp 0x200006dcaea
0x00000200006dce06 : jmp 0x200006dcefc
0x00000200006e5145 : jmp 0x200006e51a1
0x00000200006f3df7 : jmp 0x200006f3d18
0x00000200006f7991 : jmp 0x200006f799e
0x0000020000706009 : jmp 0x20000705fcf
0x000002000070c934 : jmp 0x2000070cacc
0x000002000070e74c : jmp 0x2000070e6e4
0x000002000070e74b : jmp 0x2000070e6e5
0x0000020000711fd9 : jmp 0x20000711ff6
0x000002000071a4ef : jmp 0x2000071a4fe
0x000002000071df29 : jmp 0x2000071df24
0x0000020000723f75 : jmp 0x20000723f95
0x000002000072a437 : jmp 0x200007266bc
0x000002000072a445 : jmp 0x20000726709
0x000002000077859b : jmp 0x2000077871c
0x0000020000798fd5 : jmp 0x20000798fbb
0x0000020000799100 : jmp 0x200007990c5
0x00000200007c56b5 : jmp 0x2000079f62f
0x00000200007a1662 : jmp 0x200007a166b
0x00000200007c5acc : jmp 0x200007a1d09
0x00000200007a74e7 : jmp 0x200007a74b7
0x00000200007c8657 : jmp 0x200007aa811
0x00000200007ac23a : jmp 0x200007ac200
0x00000200007ca76d : jmp 0x200007af4cd
0x00000200007cb891 : jmp 0x200007b46c6
0x00000200007b6693 : jmp 0x200007b6679
0x00000200007cbe53 : jmp 0x200007b8094
0x00000200007cbe23 : jmp 0x200007b8096
0x00000200007cbf8a : jmp 0x200007b8267
0x00000200007ba234 : jmp 0x200007ba1f9
0x00000200007ba8e9 : jmp 0x200007ba89d
0x00000200007c5c37 : jmp 0x200007c5c41
0x00000200007c6139 : jmp 0x200007c6146
0x00000200007d167b : jmp 0x200007d1641
0x00000200007d167a : jmp 0x200007d1642
0x000002000071e170 : jmp 0x20000aea45f
0x000002000072972a : jmp 0x200017256f1
0x0000020000144c63 : jmp 0x20002479871
0x0000020000606be2 : jmp 0x2000322ef50
0x00000200005a61af : jmp 0x20003d5e2bb
0x00000200005a61ae : jmp 0x20003d5e2bc
0x0000020000602b52 : jmp 0x20008b3975e
0x0000020000602b51 : jmp 0x20008b3975f
0x00000200006041af : jmp 0x20009c72abb
0x00000200001a777b : jmp 0x2000f5f777a
0x000002000067366c : jmp 0x2000f68f969
0x000002000011d637 : jmp 0x2000fd3d98c
0x00000200005a8b21 : jmp 0x2000fe5d42d
0x00000200004522d5 : jmp 0x200100d5dec
0x0000020000784e5b : jmp 0x20010ab9769
0x00000200007850e4 : jmp 0x20010ab99f2
0x0000020000411170 : jmp 0x2001c1a0885
0x00000200006f5fa6 : jmp 0x2001df85fb1
0x00000200005d4ccf : jmp 0x200225d21b3
0x00000200000fcac4 : jmp 0x20024845618
0x00000200005abc23 : jmp 0x200261d482a
0x00000200006cded1 : jmp 0x200334cca33
0x00000200001049c9 : jmp 0x20033b934e4
0x0000020000104a1a : jmp 0x20033d83535
0x000002000019e083 : jmp 0x20033dc6bcf
0x00000200005abc9a : jmp 0x200411db3a1
0x0000020000533157 : jmp 0x20041a3a663
0x0000020000211849 : jmp 0x20041e3a395
0x00000200004977d0 : jmp 0x20042853a02
0x00000200006f5133 : jmp 0x200456f137d
0x00000200001de31d : jmp 0x200481de328
0x00000200000510e7 : jmp 0x20048c79c0f
0x0000020000415c73 : jmp 0x20048d9d180
0x00000200001c8331 : jmp 0x20048df0e7a
0x0000020000404b9f : jmp 0x2004902d6a9
0x0000020000634182 : jmp 0x2004925ccd2
0x000002000046c15b : jmp 0x200494683a4
0x00000200006d2753 : jmp 0x200496ce9ad
0x000002000019b354 : jmp 0x20049dc3ea8
0x00000200005ac960 : jmp 0x2004a1dc967
0x00000200006e5143 : jmp 0x2004cc43d4e
0x00000200000b9b64 : jmp 0x2004cce26b4
0x000002000001cd57 : jmp 0x2004dc457a0
0x00000200001ece9b : jmp 0x2005d5817a7
0x00000200001774bc : jmp 0x2006da2b9c8
0x00000200004e5caf : jmp 0x20074501fac
0x000002000054d464 : jmp 0x20074569666
0x00000200004a4573 : jmp 0x200750c80c4
0x00000200005bea2b : jmp 0x20075232636
0x00000200005bea2a : jmp 0x20075232637
0x000002000059f574 : jmp 0x20075237988
0x00000200006c60c0 : jmp 0x200752ce6cc
0x00000200006c60bf : jmp 0x200752ce6cd
0x000002000068952d : jmp 0x20075321941
0x00000200000b36d2 : jmp 0x20075d358e2
0x00000200007cfe42 : jmp 0x200767cf7d1
0x00000200000f7369 : jmp qword ptr [r10 + rax*8]
0x00000200006e0cf1 : jmp qword ptr [r10]
0x000002000002fc6e : jmp qword ptr [r11]
0x000002000063260b : jmp qword ptr [r8]
0x0000020000101f37 : jmp qword ptr [r9]
0x0000020000007905 : jmp qword ptr [rax]
0x000002000000f13d : jmp qword ptr [rbx]
0x000002000001356c : jmp qword ptr [rcx]
0x0000020000093ab8 : jmp qword ptr [rdi]
0x00000200000f736a : jmp qword ptr [rdx + rax*8]
0x000002000003ba3c : jmp qword ptr [rdx]
0x000002000071d21f : jmp qword ptr [rip + 0x3c23b]
0x00000200001fbe8c : jmp qword ptr [rip + 0xfff]
0x00000200003ca67e : jmp qword ptr [rip - 0x173d2c]
0x00000200007ba536 : jmp qword ptr [rsi + 0x39]
0x0000020000433fdb : jmp qword ptr [rsi - 0x7d]
0x000002000012a6d4 : jmp qword ptr [rsi]
0x0000020000460bcc : jmp r10
0x0000020000155dc2 : jmp r11
0x000002000005c503 : jmp r8
0x0000020000150f96 : jmp r9
0x000002000005c504 : jmp rax
0x0000020000155dc3 : jmp rbx
0x000002000001c100 : jmp rcx
0x0000020000039b5d : jmp rdi
0x000002000006a06c : jmp rdx
0x000002000000e0d5 : jmp rsi
0x0000020000003722 : jne 0x2000000373b ; mov rcx, rdi ; call rsi
0x0000020000004bc6 : jne 0x20000004bbd ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000008372 : jne 0x20000008377 ; ret
0x00000200000087c7 : jne 0x200000087d8 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000087f8 : jne 0x20000008801 ; xor eax, eax ; ret
0x00000200000094e3 : jne 0x20000009515 ; xor al, al ; add rsp, 0x28 ; ret
0x000002000000953b : jne 0x20000009557 ; mov rax, qword ptr [rdx + 0x220] ; ret
0x0000020000009550 : jne 0x20000009563 ; mov rax, qword ptr [rdx + 0xb8] ; ret
0x00000200000098d2 : jne 0x20000009904 ; lea rax, qword ptr [rip + 0x150d15] ; ret
0x00000200000098fe : jne 0x20000009921 ; lea rax, qword ptr [rip + 0x150d09] ; ret
0x00000200000098e9 : jne 0x20000009932 ; lea rax, qword ptr [rip + 0x150d8e] ; ret
0x000002000000994e : jne 0x20000009986 ; lea rax, qword ptr [rip + 0x150de9] ; ret
0x0000020000009963 : jne 0x20000009993 ; lea rax, qword ptr [rip + 0x150ed4] ; ret
0x0000020000009980 : jne 0x200000099a8 ; lea rax, qword ptr [rip + 0x150dd7] ; ret
0x000002000000998d : jne 0x200000099bd ; lea rax, qword ptr [rip + 0x150e2a] ; ret
0x00000200000099c8 : jne 0x200000099db ; lea rax, qword ptr [rip + 0x150cdf] ; ret
0x00000200000099a2 : jne 0x200000099db ; lea rax, qword ptr [rip + 0x150dd5] ; ret
0x0000020000009a58 : jne 0x20000009a69 ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000009bca : jne 0x20000009bc5 ; mov rax, rcx ; ret
0x000002000000a200 : jne 0x2000000a213 ; mov qword ptr [rdx + 8], rcx ; mov qword ptr [rcx], rdx ; ret
0x000002000000a30b : jne 0x2000000a31e ; lea rax, qword ptr [rip + 0x14e92c] ; ret
0x000002000000a335 : jne 0x2000000a368 ; lea rax, qword ptr [rip + 0x150462] ; ret
0x000002000000a362 : jne 0x2000000a375 ; lea rax, qword ptr [rip + 0x150455] ; ret
0x000002000000a37f : jne 0x2000000a38e ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000b639 : jne 0x2000000b68e ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000b723 : jne 0x2000000b735 ; mov rax, rcx ; ret
0x000002000000ba8c : jne 0x2000000ba91 ; ret
0x000002000000bd5b : jne 0x2000000bd60 ; ret
0x000002000000bf1e : jne 0x2000000bf2d ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000c612 : jne 0x2000000c622 ; mov eax, dword ptr [rip + 0x39bcde] ; ret
0x000002000000d776 : jne 0x2000000d75c ; ret
0x000002000000d765 : jne 0x2000000d778 ; mov rax, qword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x000002000000e37f : jne 0x2000000e38c ; add rsp, 0x38 ; ret
0x000002000000e462 : jne 0x2000000e45b ; ret
0x000002000000ef45 : jne 0x2000000ef4e ; xor eax, eax ; ret
0x0000020000010183 : jne 0x2000001018b ; ret
0x000002000001017c : jne 0x2000001018f ; lock cmpxchg qword ptr [rcx], rdx ; jne 0x20000010192 ; ret
0x0000020000010cf5 : jne 0x20000010ce8 ; ret
0x0000020000018c37 : jne 0x20000018c1b ; mov qword ptr [rcx + 0x18], rax ; ret
0x000002000001a61d : jne 0x2000001a5e2 ; jmp 0x2000001a5ff
0x000002000001b666 : jne 0x2000001b679 ; mov al, r9b ; add rsp, 0x28 ; ret
0x000002000001b6e4 : jne 0x2000001b6ef ; mov al, r8b ; ret
0x000002000001b7a7 : jne 0x2000001b7b6 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000001beab : jne 0x2000001beb8 ; add rsp, 0x28 ; ret
0x000002000001c3ea : jne 0x2000001c3f3 ; xor eax, eax ; ret
0x000002000001d4a8 : jne 0x2000001d4b9 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000001d54d : jne 0x2000001d556 ; xor eax, eax ; ret
0x000002000001de97 : jne 0x2000001decf ; add rsp, 0x48 ; ret
0x000002000001df43 : jne 0x2000001df53 ; sub rax, qword ptr [rcx] ; mov qword ptr [r10], rax ; ret
0x000002000001dffc : jne 0x2000001e007 ; mov eax, dword ptr [rax + 0x24] ; ret
0x000002000001e0ea : jne 0x2000001e0f9 ; mov eax, 0xc0000225 ; ret
0x000002000001ebab : jne 0x2000001ebc9 ; add rsp, 0x38 ; ret
0x000002000001f37f : jne 0x2000001f3b8 ; add rsp, 0x28 ; ret
0x000002000001f550 : jne 0x2000001f561 ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000001f983 : jne 0x2000001f974 ; add rsp, 0x28 ; ret
0x000002000001f9d8 : jne 0x2000001f9cc ; mov al, 1 ; ret
0x000002000001f9e3 : jne 0x2000001f9e8 ; ret
0x0000020000020a26 : jne 0x20000020a05 ; mov eax, r8d ; ret
0x0000020000020b56 : jne 0x20000020b5f ; mov al, 1 ; ret
0x0000020000023c84 : jne 0x20000023c97 ; mov rax, rcx ; add rsp, 0x38 ; ret
0x000002000002418b : jne 0x20000024198 ; add rsp, 0x28 ; ret
0x000002000002555a : jne 0x2000002555f ; ret
0x000002000002558a : jne 0x20000025599 ; mov eax, 0xc0000225 ; ret
0x0000020000025589 : jne 0x2000002559a ; mov eax, 0xc0000225 ; ret
0x00000200000255ae : jne 0x200000255c1 ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000025750 : jne 0x20000025749 ; sub rax, rcx ; ret
0x0000020000025767 : jne 0x20000025770 ; xor al, al ; ret
0x00000200000267b7 : jne 0x200000267c6 ; add rsp, 0x60 ; pop rbp ; ret
0x000002000002681d : jne 0x20000026826 ; xor eax, eax ; ret
0x00000200000269a5 : jne 0x200000269ef ; mov rbx, qword ptr [rsp + 0x28] ; pop rbp ; ret
0x0000020000026cd4 : jne 0x20000026ce1 ; mov qword ptr [rdx + 8], r8 ; ret
0x00000200000273bd : jne 0x200000273c8 ; mov rax, r8 ; ret
0x0000020000027439 : jne 0x20000027442 ; xor eax, eax ; ret
0x0000020000027c0c : jne 0x20000027bd5 ; ret
0x0000020000028148 : jne 0x2000002815b ; and dword ptr [rcx + 4], 0 ; mov al, r8b ; ret
0x0000020000028193 : jne 0x2000002817e ; ret
0x00000200000283bf : jne 0x200000283c7 ; xor eax, eax ; ret
0x00000200000283d6 : jne 0x200000283ca ; btr rax, 0xc ; ret
0x0000020000028b3a : jne 0x20000028b3f ; ret
0x00000200000296a8 : jne 0x200000296d0 ; add rsp, 0x40 ; pop rbx ; ret
0x000002000002a530 : jne 0x2000002a535 ; ret
0x000002000002ad16 : jne 0x2000002ad23 ; add rsp, 0x28 ; ret
0x000002000002ade1 : jne 0x2000002ae3a ; mov rax, qword ptr [rbx + 8] ; mov r8, r14 ; call rax
0x000002000002b511 : jne 0x2000002b4eb ; ret
0x000002000002cad1 : jne 0x2000002cad6 ; ret
0x000002000002cb2b : jne 0x2000002cb40 ; ret
0x000002000002ce16 : jne 0x2000002ce0a ; mov eax, 0xc0000109 ; ret
0x000002000002ce31 : jne 0x2000002ce2f ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x000002000002d985 : jne 0x2000002d96f ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002df4e : jne 0x2000002df53 ; ret
0x000002000002e5f8 : jne 0x2000002e60b ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000033d90 : jne 0x20000033d95 ; ret
0x0000020000033faa : jne 0x20000033fb9 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000343d0 : jne 0x200000343db ; mov qword ptr [r9], r8 ; ret
0x0000020000034e68 : jne 0x20000034e52 ; ret
0x00000200000365b9 : jne 0x200000365ac ; ret
0x0000020000038b6a : jne 0x20000038b65 ; mov rax, rcx ; ret
0x0000020000039322 : jne 0x20000039357 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003a79f : jne 0x2000003a77e ; mov eax, r9d ; ret
0x000002000003ad48 : jne 0x2000003ad5b ; cmp dword ptr [rdx + 0x18], r9d ; seta al ; ret
0x000002000003b044 : jne 0x2000003b04d ; xor eax, eax ; ret
0x000002000003cf11 : jne 0x2000003cf20 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003d41b : jne 0x2000003d427 ; or byte ptr [rcx + 9], 4 ; ret
0x000002000003d652 : jne 0x2000003d665 ; mov qword ptr [rdx + 0x20], r9 ; mov al, r8b ; ret
0x000002000003d6ed : jne 0x2000003d6b6 ; lock or qword ptr [r9 + 8], rdx ; ret
0x000002000003e159 : jne 0x2000003e137 ; mov eax, r8d ; ret
0x000002000003fb82 : jne 0x2000003fb8f ; add rsp, 0x38 ; ret
0x0000020000041a82 : jne 0x20000041a87 ; ret
0x0000020000041e11 : jne 0x20000041e1a ; mov al, 1 ; ret
0x0000020000043356 : jne 0x2000004335e ; xor eax, eax ; ret
0x0000020000043351 : jne 0x20000043361 ; cmp qword ptr [rax], rax ; jne 0x20000043363 ; xor eax, eax ; ret
0x0000020000045087 : jne 0x200000450eb ; mov eax, 2 ; ret
0x0000020000046cd5 : jne 0x20000046cce ; add rsp, 0x28 ; ret
0x0000020000046cfc : jne 0x20000046d0f ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000478ce : jne 0x200000478a9 ; ret
0x000002000004814c : jne 0x2000004815b ; mov eax, 1 ; ret
0x000002000004aefd : jne 0x2000004af0e ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000004b10c : jne 0x2000004b11b ; xor eax, eax ; ret
0x000002000004b937 : jne 0x2000004b955 ; ret
0x000002000004e305 : jne 0x2000004e30e ; xor eax, eax ; ret
0x000002000004e31d : jne 0x2000004e326 ; xor eax, eax ; ret
0x0000020000050d0e : jne 0x20000050d00 ; xor eax, eax ; ret
0x000002000005196a : jne 0x20000051958 ; ret
0x0000020000052829 : jne 0x2000005283c ; mov rax, rdx ; add rsp, 0x28 ; ret
0x0000020000052869 : jne 0x20000052867 ; mov eax, ecx ; ret
0x0000020000052860 : jne 0x20000052868 ; ret
0x0000020000052c1b : jne 0x20000052c0f ; ret
0x0000020000053231 : jne 0x20000053229 ; ret
0x0000020000053354 : jne 0x20000053373 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000053403 : jne 0x20000053416 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x0000020000054ece : jne 0x20000054edb ; add rsp, 0x28 ; ret
0x0000020000055c72 : jne 0x20000055c77 ; ret
0x0000020000055d78 : jne 0x20000055dbb ; mov rcx, rsi ; call r14
0x0000020000055e4b : jne 0x20000055e5e ; mov rax, qword ptr [rcx + 0x688] ; ret
0x0000020000055e73 : jne 0x20000055e7d ; mov rax, rdx ; ret
0x0000020000055e73 : jne 0x20000055e7e ; mov rax, rdx ; ret
0x000002000005647f : jne 0x20000056492 ; mov rax, qword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000056b20 : jne 0x20000056b38 ; mov qword ptr [r9], rax ; mov eax, r10d ; ret
0x0000020000056b20 : jne 0x20000056b39 ; mov qword ptr [r9], rax ; mov eax, r10d ; ret
0x0000020000056c4d : jne 0x20000056c5a ; add rsp, 0x28 ; ret
0x0000020000056ed9 : jne 0x20000056ede ; ret
0x0000020000182852 : jne 0x20000056f17 ; xor eax, eax ; ret
0x00000200001828ac : jne 0x20000056f30 ; mov al, 1 ; ret
0x0000020000057464 : jne 0x20000057473 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000058fb8 : jne 0x20000058fcc ; lock btr dword ptr [rax + 0x78], 5 ; mov al, dl ; ret
0x0000020000059cff : jne 0x20000059d0c ; add rsp, 0x28 ; ret
0x000002000005b1f5 : jne 0x2000005b201 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000005b280 : jne 0x2000005b28a ; mov rax, rdx ; ret
0x000002000005b280 : jne 0x2000005b28b ; mov rax, rdx ; ret
0x000002000005b28e : jne 0x2000005b297 ; xor eax, eax ; ret
0x000002000005c34e : jne 0x2000005c342 ; ret
0x000002000005c54e : jne 0x2000005c541 ; xor ecx, ecx ; mov qword ptr [r9], rax ; mov eax, ecx ; ret
0x000002000005caba : jne 0x2000005cad7 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005ccea : jne 0x2000005ccd1 ; mov rax, qword ptr [rip + 0x2a33c5] ; ret
0x000002000005ccd8 : jne 0x2000005cceb ; mov rax, qword ptr [rip + 0x2a340f] ; ret
0x000002000005eead : jne 0x2000005eec0 ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000005f376 : jne 0x2000005f37f ; xor al, al ; ret
0x0000020000067d76 : jne 0x20000067d7f ; xor al, al ; ret
0x0000020000069774 : jne 0x20000069792 ; add rsp, 0x28 ; ret
0x000002000006982f : jne 0x20000069844 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200000698be : jne 0x200000698cf ; mov al, 1 ; add rsp, 0x18 ; ret
0x0000020000069952 : jne 0x2000006996e ; add rsp, 0x28 ; ret
0x000002000006ca23 : jne 0x2000006ca2c ; xor eax, eax ; ret
0x000002000006ca44 : jne 0x2000006ca5b ; mov rax, r10 ; ret
0x000002000006ca44 : jne 0x2000006ca5c ; mov rax, r10 ; ret
0x000002000006d2b4 : jne 0x2000006d2ac ; ret
0x000002000006d2f4 : jne 0x2000006d2ff ; mov rax, r8 ; ret
0x000002000006f049 : jne 0x2000006f04e ; ret
0x000002000006f57e : jne 0x2000006f58f ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000071cd7 : jne 0x20000071ce8 ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000072949 : jne 0x20000072952 ; xor al, al ; ret
0x0000020000072948 : jne 0x20000072953 ; xor al, al ; ret
0x0000020000074294 : jne 0x200000742a3 ; mov rax, qword ptr [r8 + rcx + 0x2f] ; ret
0x000002000007465c : jne 0x20000074661 ; ret
0x000002000007468a : jne 0x2000007468f ; ret
0x0000020000074695 : jne 0x200000746a8 ; mov rax, -2 ; ret
0x0000020000074f9b : jne 0x20000074fac ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001899c2 : jne 0x20000074fc2 ; xor eax, eax ; ret
0x0000020000075188 : jne 0x2000007517d ; sub rax, r8 ; ret
0x0000020000075228 : jne 0x20000075243 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000077072 : jne 0x2000007707e ; mov al, 1 ; ret
0x0000020000077097 : jne 0x200000770a0 ; mov al, 1 ; ret
0x0000020000078ccc : jne 0x20000078cd5 ; xor eax, eax ; ret
0x000002000007a340 : jne 0x2000007a34d ; mov al, byte ptr [rax + rcx*2 + 1] ; ret
0x000002000007a3da : jne 0x2000007a3df ; ret
0x000002000007a5bf : jne 0x2000007a5d0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000007a65d : jne 0x2000007a668 ; mov rax, rcx ; ret
0x000002000007afbd : jne 0x2000007afc2 ; ret
0x000002000007c638 : jne 0x2000007c645 ; add rsp, 0x38 ; ret
0x000002000007c7a8 : jne 0x2000007c7b9 ; ret
0x000002000007c7a1 : jne 0x2000007c7ed ; test byte ptr [r8 + 0x19], 1 ; jne 0x2000007c7c0 ; ret
0x000002000007ce41 : jne 0x2000007ce85 ; add rsp, 0x28 ; ret
0x000002000007ceda : jne 0x2000007cedf ; ret
0x000002000007d993 : jne 0x2000007d9a6 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000007e047 : jne 0x2000007e029 ; mov dl, 1 ; mov al, dl ; ret
0x000002000007e8f4 : jne 0x2000007e901 ; add rsp, 0x28 ; ret
0x00000200000808aa : jne 0x200000808bd ; add dword ptr [rax], r9d ; add rsp, 0x28 ; ret
0x00000200000847de : jne 0x200000847ed ; mov eax, 1 ; ret
0x00000200000853a1 : jne 0x200000853b9 ; mov byte ptr [rip + 0x29cc9a], dl ; ret
0x00000200000862ba : jne 0x200000862c4 ; mov al, r10b ; ret
0x00000200000862ba : jne 0x200000862c5 ; mov al, r10b ; ret
0x00000200000863ca : jne 0x200000863d5 ; mov eax, r8d ; ret
0x0000020000086470 : jne 0x20000086483 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008801f : jne 0x2000008800f ; ret
0x0000020000088903 : jne 0x200000888ff ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008a9c5 : jne 0x2000008a9d8 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008f08e : jne 0x2000008f0b9 ; xor al, al ; ret
0x0000020000090397 : jne 0x20000090419 ; xor dword ptr [rax], eax ; ret
0x000002000009053b : jne 0x20000090540 ; ret
0x00000200000905fb : jne 0x2000009061f ; lea rax, qword ptr [rcx + 0x7b8] ; ret
0x0000020000091d89 : jne 0x20000091d8e ; ret
0x0000020000092210 : jne 0x20000092223 ; lea rax, qword ptr [rdx - 0x190] ; ret
0x0000020000094f85 : jne 0x20000094d5b ; jmp 0x200001911ca
0x00000200000987ed : jne 0x200000987f2 ; ret
0x0000020000098820 : jne 0x2000009884d ; cmp eax, 2 ; jl 0x2000009882f ; ret
0x0000020000099398 : jne 0x200000993a9 ; shr eax, 0x1e ; and eax, 1 ; ret
0x000002000009a3a4 : jne 0x2000009a3b3 ; mov eax, 1 ; ret
0x000002000009a73e : jne 0x2000009a743 ; ret
0x000002000009d995 : jne 0x2000009d990 ; mov eax, 1 ; ret
0x000002000009dc12 : jne 0x2000009dc32 ; ret
0x000002000009dc59 : jne 0x2000009dc74 ; or eax, 0x18 ; ret
0x000002000009e2fd : jne 0x2000009e306 ; xor eax, eax ; ret
0x00000200000a0158 : jne 0x200000a016b ; test rax, rcx ; jne 0x200000a0170 ; xor eax, eax ; ret
0x00000200000a015d : jne 0x200000a016b ; xor eax, eax ; ret
0x00000200000a161d : jne 0x200000a1622 ; ret
0x00000200000a1617 : jne 0x200000a1657 ; test byte ptr [rcx + 0x1b], 4 ; jne 0x200000a1628 ; ret
0x00000200000a36ad : jne 0x200000a337b ; jmp 0x200000a367e
0x00000200000a49a4 : jne 0x200000a49de ; lea rcx, qword ptr [rdi + 0x48] ; call 0x20000070bc8
0x00000200000b6ec3 : jne 0x200000b6ed4 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000b8944 : jne 0x200000b8953 ; mov eax, 1 ; ret
0x00000200000b9ef8 : jne 0x200000b9efd ; ret
0x00000200000bb96d : jne 0x200000bb97e ; movzx eax, al ; and eax, 7 ; ret
0x00000200000bcfc5 : jne 0x200000bcfdc ; add rsp, 0x28 ; ret
0x00000200000bcfc4 : jne 0x200000bcfdd ; add rsp, 0x28 ; ret
0x00000200000bcfc3 : jne 0x200000bcfde ; add rsp, 0x28 ; ret
0x00000200000bd64f : jne 0x200000bd654 ; ret
0x00000200000bd66e : jne 0x200000bd65e ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000bd72d : jne 0x200000bd738 ; mov rax, r9 ; ret
0x00000200000bda23 : jne 0x200000bda3f ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000bdf5c : jne 0x200000bdf34 ; xor eax, eax ; ret
0x00000200000be448 : jne 0x200000be459 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000be4ae : jne 0x200000be4c8 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000bf637 : jne 0x200000bf647 ; xor al, al ; ret
0x00000200000bf702 : jne 0x200000bf70f ; add rsp, 0x28 ; ret
0x00000200000c1055 : jne 0x200000c1062 ; add rsp, 0x28 ; ret
0x00000200000c10a5 : jne 0x200000c10b2 ; add rsp, 0x28 ; ret
0x00000200000c3d12 : jne 0x200000c3d33 ; ret
0x00000200000c5b1c : jne 0x200000c5b2c ; mov eax, dword ptr [rip + 0x2e36e0] ; ret
0x00000200000c6638 : jne 0x200000c6649 ; mov eax, dword ptr [rip + 0x2e2bc4] ; ret
0x00000200000c67a2 : jne 0x200000c67b1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c724e : jne 0x200000c7261 ; mov al, 1 ; add rsp, 0x40 ; pop rbx ; ret
0x000002000011c965 : jne 0x200000c7478 ; xor al, al ; ret
0x00000200000c74aa : jne 0x200000c74bb ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000ca326 : jne 0x200000ca316 ; mov al, 1 ; ret
0x00000200000ca310 : jne 0x200000ca31f ; xor al, al ; ret
0x00000200000cf570 : jne 0x200000cf579 ; xor al, al ; ret
0x00000200000d517d : jne 0x200000d5182 ; ret
0x00000200000dbbf1 : jne 0x200000dbbc1 ; mov rax, rbx ; jmp 0x200000dbbc1
0x00000200000e223c : jne 0x200000e224f ; xor eax, eax ; add rsp, 0x70 ; pop rbx ; ret
0x00000200000e4e6a : jne 0x200000e4e77 ; add rsp, 0x28 ; ret
0x00000200000e7273 : jne 0x200000e7280 ; add rsp, 0x28 ; ret
0x00000200000e8363 : jne 0x200000e8355 ; xor al, al ; ret
0x00000200000e835c : jne 0x200000e8365 ; mov al, 1 ; ret
0x00000200000e99a7 : jne 0x200000e99b8 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200000e99d7 : jne 0x200000e99e4 ; add rsp, 0x28 ; ret
0x00000200000ea7fb : jne 0x200000ea827 ; movzx eax, dl ; ret
0x00000200000ea7fb : jne 0x200000ea828 ; movzx eax, dl ; ret
0x00000200000ecdeb : jne 0x200000ecdde ; xor al, al ; ret
0x00000200000ed053 : jne 0x200000ed05f ; mov al, 1 ; ret
0x00000200000ed07f : jne 0x200000ed078 ; xor eax, eax ; ret
0x00000200000ed072 : jne 0x200000ed081 ; mov eax, 1 ; ret
0x00000200000ed5ae : jne 0x200000ed5bd ; sti ; add rsp, 0x28 ; ret
0x00000200000edca1 : jne 0x200000edcaa ; xor eax, eax ; ret
0x00000200000edca9 : jne 0x200000edcb6 ; lea eax, dword ptr [r8 + 1] ; ret
0x00000200000eef04 : jne 0x200000eef09 ; ret
0x00000200000f02cc : jne 0x200000f02db ; ret
0x00000200000f16e9 : jne 0x200000f16f1 ; xor eax, eax ; ret
0x00000200000f5cc2 : jne 0x200000f5ccd ; ret
0x00000200000f6497 : jne 0x200000f64a6 ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200000f74ea : jne 0x200000f74f3 ; mov eax, ecx ; ret
0x00000200000f75b7 : jne 0x200000f75bc ; ret
0x00000200000f7ab0 : jne 0x200000f7a9b ; add rsp, 0x28 ; ret
0x00000200000fa062 : jne 0x200000fa06b ; xor eax, eax ; ret
0x00000200000fa787 : jne 0x200000fa721 ; cld ; dec dword ptr [rax - 0x75] ; ret
0x00000200000fa841 : jne 0x200000fa84b ; mov rax, rdx ; ret
0x00000200000fa841 : jne 0x200000fa84c ; mov rax, rdx ; ret
0x00000200000fb31c : jne 0x200000fb326 ; mov rdx, r14 ; call qword ptr [rdi]
0x00000200000fb5f3 : jne 0x200000fb5ee ; mov rax, rcx ; ret
0x00000200000fc278 : jne 0x200000fc281 ; xor al, al ; ret
0x00000200000fc660 : jne 0x200000fc690 ; add rsp, 0x28 ; ret
0x00000200000fcd2a : jne 0x200000fcd1d ; add rsp, 0x28 ; ret
0x00000200000fce29 : jne 0x200000fce3f ; mov eax, dword ptr [rip + 0x2ac423] ; ret
0x00000200000fcec5 : jne 0x200000fced2 ; shl rax, 0x14 ; ret
0x00000200000fd5c9 : jne 0x200000fd5de ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200000fd61b : jne 0x200000fd626 ; or eax, 0xffffffff ; ret
0x0000020000100102 : jne 0x200001000e5 ; not r9d ; mov eax, r9d ; ret
0x0000020000100995 : jne 0x20000100958 ; jmp 0x2000010095f
0x0000020000101dfe : jne 0x20000101e11 ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000106ab3 : jne 0x20000106b14 ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x000002000010c74f : jne 0x2000010c7b0 ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x000002000010d402 : jne 0x2000010d412 ; mov rax, rcx ; ret
0x0000020000112e51 : jne 0x20000112e23 ; ret
0x0000020000113baf : jne 0x20000113bbe ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000114a71 : jne 0x20000114a83 ; mov al, byte ptr [r8 + 0xf0] ; ret
0x00000200001170fc : jne 0x200001170d3 ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x000002000011989a : jne 0x2000011988d ; mov rax, rdx ; ret
0x000002000011989a : jne 0x2000011988e ; mov rax, rdx ; ret
0x0000020000119a69 : jne 0x20000119a6e ; ret
0x000002000011a726 : jne 0x2000011a720 ; mov eax, dword ptr [rip + 0x28db02] ; ret
0x000002000011bba6 : jne 0x2000011bbab ; ret
0x000002000011caa9 : jne 0x2000011caba ; test ecx, ecx ; cmovne edx, r10d ; mov eax, edx ; ret
0x000002000011dd47 : jne 0x2000011dd52 ; mov rax, rcx ; ret
0x000002000011e7d1 : jne 0x2000011e7c9 ; ret
0x0000020000121c26 : jne 0x20000121c06 ; xor al, al ; ret
0x0000020000121c1d : jne 0x20000121c2c ; mov al, 1 ; ret
0x0000020000122e56 : jne 0x20000122e69 ; xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000128b3b : jne 0x20000128b44 ; xor al, al ; ret
0x000002000012978f : jne 0x2000012977f ; ret
0x0000020000129fdc : jne 0x20000129f78 ; mov rax, r8 ; ret
0x000002000012d69d : jne 0x2000012d691 ; mov qword ptr [rip + 0x1dfb5a], rdx ; ret
0x000002000012d703 : jne 0x2000012d708 ; ret
0x0000020000130d8d : jne 0x20000130d92 ; ret
0x0000020000130da4 : jne 0x20000130d99 ; ret
0x0000020000133771 : jne 0x2000013375c ; mov al, dl ; ret
0x00000200001349da : jne 0x200001349e9 ; mov rdi, qword ptr [rsp + 8] ; ret
0x0000020000135e4a : jne 0x20000135df0 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000136acf : jne 0x20000136ade ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000136f77 : jne 0x20000136f86 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001370f9 : jne 0x200001370dc ; ret
0x00000200001398bb : jne 0x200001398a3 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200001398a9 : jne 0x200001398a7 ; inc dword ptr [rax + rax*8 - 0x7eb6eb8c] ; ret 0x1000
0x000002000013ac82 : jne 0x2000013ac87 ; ret
0x000002000013aec8 : jne 0x2000013aeb9 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x000002000013b14f : jne 0x2000013b0de ; xor rax, rax ; ret
0x000002000013b164 : jne 0x2000013b16f ; mov rax, rcx ; ret
0x000002000013b1a8 : jne 0x2000013b17a ; xor eax, eax ; ret
0x000002000013b1b7 : jne 0x2000013b1c0 ; xor eax, eax ; ret
0x000002000013b1eb : jne 0x2000013b1f4 ; xor eax, eax ; ret
0x000002000013b5dc : jne 0x2000013b5c9 ; mov rax, rcx ; ret
0x000002000013b649 : jne 0x2000013b63b ; ret
0x000002000013b691 : jne 0x2000013b68b ; ret
0x000002000013baf3 : jne 0x2000013badd ; mov rax, rdx ; add rsp, 0x38 ; ret
0x000002000013bbe7 : jne 0x2000013bbd6 ; ret
0x000002000013bd34 : jne 0x2000013bd1a ; mov rax, rcx ; ret
0x000002000013bd5f : jne 0x2000013bd68 ; xor eax, eax ; ret
0x000002000013c1ed : jne 0x2000013c1e5 ; xor rax, rax ; ret
0x000002000013c3a6 : jne 0x2000013c399 ; mov rdx, r15 ; mov rcx, r12 ; call r14
0x000002000013c3e6 : jne 0x2000013c3d9 ; mov rdx, r15 ; mov rcx, rsi ; call r14
0x000002000013ca65 : jne 0x2000013ca63 ; cmp al, dl ; jne 0x2000013ca78 ; mov rax, rcx ; ret
0x000002000013ca69 : jne 0x2000013ca74 ; mov rax, rcx ; ret
0x000002000013cb33 : jne 0x2000013cac4 ; xor eax, eax ; ret
0x000002000013cbc6 : jne 0x2000013cb88 ; lea rax, qword ptr [rcx + rax - 1] ; ret
0x000002000013ceb6 : jne 0x2000013ce01 ; mov rax, r11 ; ret
0x000002000013d18e : jne 0x2000013d184 ; mov rax, rcx ; ret
0x000002000013d1a9 : jne 0x2000013d19f ; mov rax, rcx ; ret
0x000002000013d1c6 : jne 0x2000013d1d1 ; mov rax, rcx ; ret
0x000002000013d248 : jne 0x2000013d224 ; sub rax, rcx ; sar rax, 1 ; ret
0x000002000013d2a1 : jne 0x2000013d291 ; mov word ptr [rcx], r10w ; mov rax, r9 ; ret
0x000002000013d2af : jne 0x2000013d2cd ; xor eax, eax ; ret
0x000002000013d3ac : jne 0x2000013d388 ; sub rax, rcx ; sar rax, 1 ; ret
0x000002000013d3c5 : jne 0x2000013d3d0 ; mov rax, rcx ; ret
0x000002000013d415 : jne 0x2000013d3dd ; xor eax, eax ; ret
0x000002000013db08 : jne 0x2000013dae3 ; xor eax, eax ; ret
0x0000020000140370 : jne 0x20000140335 ; jmp 0x20000140352
0x000002000014036a : jne 0x20000140337 ; cmp rdi, 0xff ; jne 0x2000014033b ; jmp 0x20000140358
0x0000020000144b1d : jne 0x20000144b19 ; mov rdx, rdi ; mov rcx, r11 ; call r8
0x00000200001459f6 : jne 0x200001459e6 ; mov rax, rdx ; jmp 0x20000145a03
0x00000200001469f9 : jne 0x200001469e9 ; mov rax, rdx ; jmp 0x20000146a06
0x0000020000146ceb : jne 0x20000146cdb ; mov rax, rdx ; jmp 0x20000146cf8
0x00000200001471c8 : jne 0x200001471b8 ; mov rax, rdx ; jmp 0x200001471d5
0x00000200001473f4 : jne 0x200001473f9 ; ret
0x00000200001474eb : jne 0x200001474bb ; sub r9d, eax ; mov eax, r9d ; ret
0x000002000014e975 : jne 0x2000014e952 ; ret
0x000002000014e9e9 : jne 0x2000014e995 ; sfence ; ret
0x000002000014ea0a : jne 0x2000014ea05 ; sfence ; ret
0x000002000014ea3a : jne 0x2000014ea35 ; sfence ; ret
0x000002000014eace : jne 0x2000014eaa5 ; sfence ; ret
0x000002000014eacd : jne 0x2000014eaa6 ; sfence ; ret
0x0000020000151265 : jne 0x2000015124d ; mov rax, r8 ; pop rbx ; ret
0x00000200001512aa : jne 0x2000015129a ; mov rax, r8 ; pop rbx ; ret
0x00000200001512db : jne 0x200001512d6 ; mov rax, rdx ; and al, 0xf0 ; pop rbx ; ret
0x000002000015131c : jne 0x20000151305 ; mov rax, r10 ; pop rbx ; ret
0x000002000015131c : jne 0x20000151307 ; mov rax, r10 ; pop rbx ; ret
0x0000020000151a5b : jne 0x20000151a52 ; ret
0x0000020000151967 : jne 0x20000151a56 ; ret
0x000002000015638a : jne 0x20000156732 ; call r10
0x000002000015758c : jne 0x20000157585 ; mov rax, r11 ; ret
0x000002000015772c : jne 0x20000157725 ; mov rax, r11 ; ret
0x00000200001578c8 : jne 0x200001578c2 ; ret
0x0000020000157976 : jne 0x20000157970 ; ret
0x0000020000002504 : jne 0x2000015f5a8 ; ret
0x0000020000003d8d : jne 0x2000015fc00 ; ret
0x000002000000b9e1 : jne 0x200001616a6 ; ret
0x000002000000c7f1 : jne 0x200001618d2 ; ret
0x0000020000161ec8 : jne 0x20000161ed5 ; lea rax, qword ptr [r9 - 8] ; ret
0x000002000000ff51 : jne 0x20000162b58 ; mov al, 1 ; ret
0x000002000001b869 : jne 0x200001655f0 ; ret
0x0000020000165614 : jne 0x200001655fc ; ret
0x000002000016560e : jne 0x20000165607 ; sub r9, 1 ; jne 0x20000165602 ; ret
0x00000200000c5aa6 : jne 0x2000016562b ; mov qword ptr [r8], rcx ; ret
0x0000020000029b8a : jne 0x20000168e91 ; call rdi
0x000002000003088b : jne 0x20000169fa9 ; mov rcx, rdi ; call rbx
0x00000200000309b5 : jne 0x2000016a05a ; xor eax, eax ; ret
0x00000200000317cf : jne 0x2000016a2c8 ; ret
0x000002000003716f : jne 0x2000016bbcc ; ret
0x00000200000375be : jne 0x2000016bf68 ; ret
0x000002000003c8ea : jne 0x2000016d700 ; ret
0x000002000003d405 : jne 0x2000016d9cc ; xor eax, eax ; ret
0x000002000003dee6 : jne 0x2000016dc0a ; ret
0x000002000003e2b3 : jne 0x2000016dc7b ; mov al, r8b ; ret
0x000002000003e45c : jne 0x2000016de66 ; ret
0x000002000003ec9f : jne 0x2000016e4e5 ; lea eax, dword ptr [rcx + 1] ; ret
0x000002000016f87c : jne 0x2000016f874 ; ret
0x000002000016f89a : jne 0x2000016f892 ; ret
0x00000200000436e8 : jne 0x2000016f896 ; ret
0x0000020000043fc4 : jne 0x2000016fe54 ; xor al, al ; ret
0x000002000010121a : jne 0x20000170d54 ; xor eax, eax ; ret
0x00000200001043f3 : jne 0x20000171a73 ; mov rax, rcx ; ret
0x000002000010ef47 : jne 0x200001752f8 ; ret
0x0000020000112e69 : jne 0x20000176548 ; ret
0x0000020000114b57 : jne 0x20000176c22 ; ret
0x000002000011cac7 : jne 0x20000179032 ; xor al, al ; ret
0x000002000017b2db : jne 0x2000017b2dc ; dec dword ptr [rax - 0x75] ; ret 0x48f0
0x0000020000125752 : jne 0x2000017d091 ; mov al, 1 ; jmp 0x20000125728
0x0000020000046c89 : jne 0x2000017d770 ; xor eax, eax ; ret
0x000002000004bca5 : jne 0x2000017edde ; ret
0x0000020000056f22 : jne 0x20000182864 ; xor al, al ; ret
0x000002000007f172 : jne 0x2000018b38d ; mov eax, r9d ; ret
0x00000200000832b4 : jne 0x2000018cced ; ret
0x000002000008396c : jne 0x2000018cf65 ; ret
0x000002000018e94b : jne 0x2000018e8f4 ; jmp 0x2000008ab77
0x0000020000190906 : jne 0x200001908e1 ; add rsp, 0x28 ; ret
0x0000020000191194 : jne 0x200001911d7 ; lock dec dword ptr [rax - 0x7d] ; ret 0xe902
0x000002000019193c : jne 0x20000191926 ; ret
0x00000200000a0e1f : jne 0x20000194936 ; ret
0x0000020000196962 : jne 0x20000196977 ; mov rcx, r9 ; call 0x20000032c0b
0x00000200000c5498 : jne 0x2000019d8d8 ; ret
0x00000200000ddf1a : jne 0x200001a4272 ; xor eax, eax ; ret
0x00000200000f35ba : jne 0x200001a9c46 ; ret
0x00000200000f8aea : jne 0x200001ab1da ; ret
0x000002000012d191 : jne 0x200001ad8b4 ; ret
0x00000200001b1335 : jne 0x200001b131f ; jmp 0x20000135349
0x000002000013a743 : jne 0x200001b2a42 ; mov al, 1 ; ret
0x000002000013a9d3 : jne 0x200001b2caa ; ret
0x000002000013ac1b : jne 0x200001b303a ; xor eax, eax ; ret
0x00000200001b388d : jne 0x200001b389b ; or al, 4 ; mov byte ptr [rcx + 4], al ; ret
0x00000200001b3c24 : jne 0x200001b3c38 ; mov rdx, rbx ; mov rcx, rdi ; call rsi
0x00000200001b48c3 : jne 0x200001b48b1 ; ret
0x00000200001b8ec2 : jne 0x200001b8ecd ; mov qword ptr [r8], rcx ; ret
0x00000200001ba430 : jne 0x200001ba40e ; xor eax, eax ; ret
0x00000200001ba98d : jne 0x200001ba996 ; xor eax, eax ; ret
0x00000200001bbf62 : jne 0x200001bbf71 ; mov eax, 0xc00000bb ; ret
0x00000200001bc1f0 : jne 0x200001bc1ff ; mov eax, 0xc0000001 ; ret
0x00000200001bc20c : jne 0x200001bc21b ; mov eax, 0xc0000022 ; ret
0x00000200001bc219 : jne 0x200001bc228 ; mov eax, 0xc000000d ; ret
0x00000200001bc3a4 : jne 0x200001bc3b3 ; mov eax, 0xc0000022 ; ret
0x00000200001bc44c : jne 0x200001bc45b ; mov eax, 0xc0000022 ; ret
0x00000200001bd676 : jne 0x200001bd668 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c2461 : jne 0x200001c23fd ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001c2479 : jne 0x200001c2484 ; mov eax, r8d ; ret
0x00000200001c24a5 : jne 0x200001c248d ; mov eax, ecx ; ret
0x00000200001c2f11 : jne 0x200001c2f23 ; lea rax, qword ptr [rip + 0x15e026] ; ret
0x00000200001c47e1 : jne 0x200001c4780 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001c6054 : jne 0x200001c60b0 ; mov r8b, dl ; jmp 0x200001c60a6
0x00000200001c63af : jne 0x200001c63a8 ; add rsp, 0x28 ; ret
0x00000200001cb0df : jne 0x200001cb0e8 ; xor al, al ; ret
0x00000200001cb6f7 : jne 0x200001cb6f7 ; idiv bh ; add rsp, 0x70 ; pop rbp ; ret
0x00000200001cb9f4 : jne 0x200001cb9fd ; xor al, al ; ret
0x00000200001cc44b : jne 0x200001cc45a ; mov eax, 0xc000000d ; ret
0x00000200001ce9d3 : jne 0x200001ce99c ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001ceafa : jne 0x200001ceacc ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d001c : jne 0x200001d002e ; lea rax, qword ptr [rip + 0x51fa5f] ; ret
0x00000200001d0171 : jne 0x200001d017f ; mov eax, 1 ; ret
0x00000200001d0186 : jne 0x200001d0195 ; mov eax, 1 ; ret
0x00000200001d1e4e : jne 0x200001d1e1e ; ret
0x00000200001d2916 : jne 0x200001d292a ; mov qword ptr [rcx], rdx ; ret
0x00000200001d3021 : jne 0x200001d3045 ; add byte ptr [rax - 0x7f], cl ; ret 0x3600
0x00000200001d364e : jne 0x200001d365d ; mov eax, 1 ; ret
0x00000200001d36be : jne 0x200001d36d3 ; mov eax, dword ptr [rip + 0x1d49ae] ; ret
0x00000200001d3f1e : jne 0x200001d3f29 ; mov dword ptr [r8], eax ; ret
0x00000200001d5563 : jne 0x200001d555a ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x00000200001d5563 : jne 0x200001d555b ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x00000200001d60d7 : jne 0x200001d60fb ; mov byte ptr [rbx + 0x38], 2 ; call r8
0x00000200001d76fa : jne 0x200001d76d5 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001d8afa : jne 0x200001d8ad4 ; jmp 0x200001d8b30
0x00000200001d8e12 : jne 0x200001d8e25 ; lea edx, dword ptr [rax + 0xf] ; mov cr8, rdx ; jmp 0x200001d8e39
0x00000200001dbd27 : jne 0x200001dbd35 ; mov eax, 1 ; ret
0x00000200001de520 : jne 0x200001de519 ; mov qword ptr [r8], rax ; ret
0x00000200001e198b : jne 0x200001e19b5 ; mov eax, 1 ; ret
0x00000200001e390b : jne 0x200001e391a ; mov eax, 1 ; ret
0x00000200001e4b1c : jne 0x200001e4b0b ; xor eax, eax ; ret
0x00000200001e57ae : jne 0x200001e57b6 ; mov al, 1 ; ret
0x00000200001e782b : jne 0x200001e7822 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ed2e3 : jne 0x200001ed2c3 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001ed2b9 : jne 0x200001ed2c4 ; mov eax, r10d ; jmp 0x200001ed2eb
0x00000200001edcd6 : jne 0x200001edca1 ; mov rax, r8 ; ret
0x00000200001f01ca : jne 0x200001f01d3 ; xor eax, eax ; ret
0x00000200001f07de : jne 0x200001f07d7 ; mov rax, r10 ; ret
0x00000200001f07de : jne 0x200001f07d8 ; mov rax, r10 ; ret
0x00000200001f27f6 : jne 0x200001f27fe ; xor eax, eax ; ret
0x00000200001f5489 : jne 0x200001f54d3 ; mov eax, edx ; jmp 0x200001f54d5
0x00000200001f726c : jne 0x200001f727b ; mov eax, 1 ; ret
0x00000200001f8aa7 : jne 0x200001f8ab0 ; xor eax, eax ; ret
0x00000200001f8c06 : jne 0x200001f8bf0 ; mov rax, r9 ; ret
0x00000200001f9b99 : jne 0x200001f9b89 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001fc13f : jne 0x200001fc151 ; mov byte ptr [rax + 0xf0], 1 ; ret
0x00000200001fc495 : jne 0x200001fc4a5 ; mov edx, 1 ; mov al, dl ; ret
0x00000200001fd351 : jne 0x200001fd32c ; xor r9d, r9d ; mov eax, r9d ; ret
0x00000200001fd662 : jne 0x200001fd652 ; shr eax, 0x18 ; ret
0x00000200001fdbc7 : jne 0x200001fdbb7 ; ret
0x00000200001fe42f : jne 0x200001fe3e6 ; mov eax, r8d ; ret
0x0000020000203fd2 : jne 0x20000203fdb ; xor eax, eax ; ret
0x000002000020a1a0 : jne 0x2000020a1a9 ; xor eax, eax ; ret
0x000002000020b935 : jne 0x2000020b948 ; mov rax, qword ptr [r8 + 0x430] ; ret
0x000002000020beb0 : jne 0x2000020bec3 ; cmp qword ptr [rcx], 0 ; setne al ; ret
0x000002000020dbdf : jne 0x2000020dbee ; mov eax, 0xc000000d ; ret
0x000002000020ecc4 : jne 0x2000020eccf ; mov eax, r10d ; jmp 0x2000020ecd6
0x000002000020f88a : jne 0x2000020f89d ; mov dword ptr [r10], 0xffffffff ; ret
0x000002000020f969 : jne 0x2000020f92a ; ret
0x0000020000210451 : jne 0x20000210475 ; inc dword ptr [rcx + 0x254] ; ret
0x000002000021052a : jne 0x20000210525 ; mov rax, rcx ; ret
0x0000020000210569 : jne 0x20000210561 ; ret
0x0000020000211973 : jne 0x20000211982 ; mov eax, 1 ; ret
0x000002000021645a : jne 0x2000021643d ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021648f : jne 0x20000216479 ; ret
0x000002000021a379 : jne 0x2000021a382 ; xor eax, eax ; ret
0x000002000021c468 : jne 0x2000021c47a ; and dword ptr [rcx + 0x1028], 0xfffffffe ; ret
0x000002000021f26f : jne 0x2000021f25a ; ret
0x0000020000220bbc : jne 0x20000220b9d ; test rdx, rdx ; cmovne rax, rdx ; jmp 0x20000220c0b
0x0000020000225ff7 : jne 0x20000225fe2 ; mov al, 1 ; ret
0x00000200002267c6 : jne 0x200002267ad ; xor eax, eax ; ret
0x00000200002267f6 : jne 0x20000226803 ; mov qword ptr [r10], rdx ; mov rax, r11 ; ret
0x000002000022886c : jne 0x20000228877 ; mov byte ptr [rdx + 2], cl ; ret
0x0000020000228bb9 : jne 0x20000228b95 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000023038c : jne 0x20000230363 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000230cca : jne 0x20000230caf ; mov eax, 1 ; ret
0x0000020000230ca1 : jne 0x20000230cb1 ; cmp rdx, r8 ; jae 0x20000230cd5 ; xor eax, eax ; ret
0x0000020000231584 : jne 0x20000231591 ; movzx eax, word ptr [rcx + 0x28] ; ret
0x00000200002316a7 : jne 0x2000023173f ; mov al, r11b ; ret
0x00000200002350a8 : jne 0x200002350a6 ; ret
0x000002000023bfc9 : jne 0x2000023bfb9 ; mov rax, rdx ; jmp 0x2000023bfd6
0x000002000023c66d : jne 0x2000023c65d ; mov rax, rdx ; jmp 0x2000023c67a
0x000002000023c842 : jne 0x2000023c832 ; mov rax, rdx ; jmp 0x2000023c84f
0x000002000023d100 : jne 0x2000023d0f0 ; mov rax, rdx ; jmp 0x2000023d10d
0x000002000023d206 : jne 0x2000023d1f6 ; mov rax, rdx ; jmp 0x2000023d213
0x000002000023d913 : jne 0x2000023d906 ; xor r13d, r13d ; mov rax, rdx ; jmp 0x2000023d926
0x000002000023da6c : jne 0x2000023da5c ; mov rax, rdx ; jmp 0x2000023da79
0x000002000023dead : jne 0x2000023de9d ; mov rax, rdx ; jmp 0x2000023deba
0x000002000023dfc3 : jne 0x2000023dfb3 ; mov rax, rdx ; jmp 0x2000023e033
0x000002000023e16c : jne 0x2000023e15c ; mov rax, rdx ; jmp 0x2000023e179
0x000002000023e29a : jne 0x2000023e28b ; mov rax, rdx ; jmp 0x2000023e2a7
0x000002000023f26c : jne 0x2000023f25c ; mov rax, rdx ; jmp 0x2000023f279
0x000002000023fa68 : jne 0x2000023fa5a ; xor esi, esi ; mov rax, rdx ; jmp 0x2000023fa79
0x000002000023fd0c : jne 0x2000023fcff ; xor r11d, r11d ; mov rax, rdx ; jmp 0x2000023fd1f
0x00000200002409f2 : jne 0x200002409e5 ; mov rax, rdx ; jmp 0x200002409ff
0x00000200002424b9 : jne 0x200002424a9 ; mov rax, rdx ; jmp 0x200002424c6
0x0000020000242a22 : jne 0x20000242a12 ; mov rax, rdx ; jmp 0x20000242a2f
0x0000020000242b2a : jne 0x20000242b1a ; mov rax, rdx ; jmp 0x20000242b37
0x0000020000243d87 : jne 0x20000243d77 ; mov rax, rdx ; jmp 0x20000243d94
0x0000020000243fbd : jne 0x20000243fad ; mov rax, rdx ; jmp 0x20000243fca
0x00000200002452bf : jne 0x200002452af ; mov rax, rdx ; jmp 0x200002452cc
0x00000200002456c3 : jne 0x200002456b7 ; xor r11d, r11d ; mov rax, rdx ; jmp 0x200002456d6
0x0000020000245a44 : jne 0x20000245a35 ; mov rax, rdx ; jmp 0x20000245a51
0x0000020000245c84 : jne 0x20000245c74 ; mov rax, rdx ; jmp 0x20000245c91
0x0000020000246590 : jne 0x20000246583 ; mov rax, rdx ; jmp 0x2000024659d
0x0000020000246862 : jne 0x20000246855 ; mov rax, rdx ; jmp 0x20000246894
0x0000020000246ed3 : jne 0x20000246ec3 ; mov rax, rdx ; jmp 0x20000246ee0
0x0000020000247779 : jne 0x20000247769 ; mov rax, rdx ; jmp 0x20000247786
0x00000200002495b0 : jne 0x200002495a5 ; mov rbx, qword ptr [rsp + 0x70] ; mov rax, rdx ; jmp 0x200002495c7
0x000002000024a904 : jne 0x2000024a8f7 ; mov rax, rdx ; jmp 0x2000024a911
0x000002000024aaa2 : jne 0x2000024aa95 ; mov rax, rdx ; jmp 0x2000024aaaf
0x000002000024abeb : jne 0x2000024abde ; mov rax, rdx ; jmp 0x2000024abf8
0x000002000024bd98 : jne 0x2000024bd89 ; mov rax, rdx ; jmp 0x2000024bda5
0x00000200003c6ae6 : jne 0x200003c6af5 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003cfba4 : jne 0x200003cfba9 ; ret
0x00000200003d4807 : jne 0x200003d47b2 ; mov byte ptr [rbp - 0x58], r14b ; call 0x200000036cd
0x00000200003d480b : jne 0x200003d47ba ; call 0x200000036c9
0x00000200003d6afc : jne 0x200003d6b02 ; dec dword ptr [rax - 0x7d] ; ret 0x4510
0x00000200003d9a29 : jne 0x200003d9a09 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003db778 : jne 0x200003db77a ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003de81d : jne 0x200003de7e9 ; mov rcx, rbx ; call 0x2000040aa47
0x00000200003dfb9c : jne 0x200003dfba1 ; ret
0x00000200003dfb97 : jne 0x200003dfba5 ; test rcx, rcx ; jne 0x200003dfba6 ; ret
0x00000200003e2dc4 : jne 0x200003e2da4 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003e5c1b : jne 0x200003e5c46 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003e6ffc : jne 0x200003e6fe9 ; mov eax, 1 ; ret
0x00000200003e6fe0 : jne 0x200003e6fe9 ; xor eax, eax ; ret
0x00000200003eb591 : jne 0x200003eb544 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003ed414 : jne 0x200003ed414 ; mov eax, 1 ; ret
0x00000200003ee100 : jne 0x200003ee148 ; mov qword ptr [r9], r10 ; ret
0x00000200003f41eb : jne 0x200003f41fc ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200003f6544 : jne 0x200003f6565 ; mov eax, edi ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200003f91bf : jne 0x200003f91ca ; lea eax, dword ptr [rcx + 1] ; ret
0x00000200003f91c8 : jne 0x200003f91d3 ; lea eax, dword ptr [rcx + 2] ; ret
0x00000200003f91db : jne 0x200003f91e6 ; lea eax, dword ptr [rcx + 4] ; ret
0x00000200003fa5f7 : jne 0x200003fa5bc ; call r10
0x00000200003fcca0 : jne 0x200003fccaf ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003fd32d : jne 0x200003fd33b ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x00000200003fd32d : jne 0x200003fd33c ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x0000020000401afa : jne 0x20000401aee ; ret
0x0000020000403226 : jne 0x20000403235 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000040325f : jne 0x20000403268 ; xor eax, eax ; ret
0x0000020000403413 : jne 0x20000403422 ; mov dword ptr [r9], edx ; mov al, 1 ; ret
0x00000200004037ea : jne 0x2000040370a ; xor eax, eax ; pop rbx ; ret
0x000002000040478c : jne 0x2000040479f ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000405223 : jne 0x20000405228 ; ret
0x0000020000407faf : jne 0x20000407fe5 ; call 0x20000494d69
0x0000020000408da9 : jne 0x20000408db2 ; xor eax, eax ; ret
0x000002000040a0e9 : jne 0x2000040a0df ; ret
0x000002000040fde3 : jne 0x2000040fe0c ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004148cb : jne 0x200004148d0 ; ret
0x000002000041e52e : jne 0x2000041e53f ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000041f384 : jne 0x2000041f395 ; xor al, al ; add rsp, 0x28 ; ret
0x000002000041f631 : jne 0x2000041f61d ; xor eax, eax ; ret
0x000002000041f627 : jne 0x2000041f636 ; mov eax, 1 ; ret
0x00000200004202d3 : jne 0x200004202e4 ; mov word ptr [rdx + 2], r9w ; jmp 0x200004202a7
0x0000020000420367 : jne 0x20000420336 ; mov r10b, 1 ; jmp 0x20000420336
0x00000200004234a8 : jne 0x200004234ba ; mov qword ptr [rax], 0 ; ret
0x0000020000423f6f : jne 0x20000423f7e ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000425647 : jne 0x20000425656 ; mov eax, 1 ; ret
0x00000200004263f3 : jne 0x20000426403 ; mov eax, dword ptr [rcx + 0x58] ; ret
0x000002000042825c : jne 0x20000428273 ; mov qword ptr [rcx + 0x70], rdx ; xor eax, eax ; ret
0x000002000042a2ff : jne 0x2000042a312 ; lea r8, qword ptr [rax - 0x20] ; mov rax, r8 ; ret
0x000002000042b03e : jne 0x2000042b043 ; ret
0x000002000042b3a0 : jne 0x2000042b38f ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000042bf07 : jne 0x2000042bf0c ; ret
0x000002000042d82a : jne 0x2000042d82f ; ret
0x000002000042d829 : jne 0x2000042d830 ; ret
0x000002000042d828 : jne 0x2000042d831 ; ret
0x000002000042d824 : jne 0x2000042d835 ; cmp byte ptr [rcx + 0x4c], r9b ; jne 0x2000042d835 ; ret
0x000002000042d823 : jne 0x2000042d836 ; cmp byte ptr [rcx + 0x4c], r9b ; jne 0x2000042d836 ; ret
0x000002000042ea97 : jne 0x2000042eaa6 ; mov eax, edx ; jmp 0x2000042ea59
0x000002000042eb38 : jne 0x2000042eb40 ; mov al, dl ; ret
0x000002000042eb38 : jne 0x2000042eb41 ; mov al, dl ; ret
0x000002000042f62f : jne 0x2000042f63d ; ret
0x00000200004300bd : jne 0x200004300c2 ; ret
0x00000200004300b8 : jne 0x200004300d6 ; test cl, 0xf8 ; jne 0x200004300c7 ; ret
0x0000020000432baa : jne 0x20000432bbb ; cmp qword ptr [rcx + 0x30], r8 ; jne 0x20000432bc1 ; ret
0x0000020000432bb0 : jne 0x20000432bbb ; ret
0x00000200004385ba : jne 0x200004385ad ; ret
0x000002000043b118 : jne 0x2000043b127 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043b6ff : jne 0x2000043b70c ; add rsp, 0x28 ; ret
0x000002000043b72d : jne 0x2000043b73e ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000043b877 : jne 0x2000043b864 ; ret
0x000002000043baee : jne 0x2000043babc ; inc r10d ; jmp 0x2000043bac6
0x000002000043caae : jne 0x2000043cab7 ; mov al, 1 ; ret
0x000002000043e8ca : jne 0x2000043e8d9 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000442bd2 : jne 0x20000442bf9 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x0000020000442bd1 : jne 0x20000442bfa ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x00000200005aa217 : jne 0x20000445f08 ; call 0x200001d24f5
0x00000200004475d2 : jne 0x200004476bd ; inc edx ; jmp 0x200004475be
0x000002000044b59a : jne 0x2000044b5ab ; mov r8, rdx ; mov rax, r8 ; ret
0x000002000044dcec : jne 0x2000044dc9f ; mov rax, r8 ; add rsp, 0x28 ; ret
0x000002000044f36b : jne 0x2000044f356 ; xor eax, eax ; ret
0x000002000045126f : jne 0x2000045127c ; add rsp, 0x58 ; ret
0x0000020000452a5c : jne 0x20000452a6c ; xor edx, edx ; call 0x2000007c7f3
0x0000020000453816 : jne 0x20000453820 ; mov eax, r10d ; ret
0x0000020000453816 : jne 0x20000453821 ; mov eax, r10d ; ret
0x0000020000453924 : jne 0x20000453933 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000453967 : jne 0x20000453974 ; and rax, 0xfffffffffffffffe ; ret
0x00000200004545bf : jne 0x200004545b5 ; ret
0x0000020000455aaf : jne 0x20000455ab8 ; xor eax, eax ; ret
0x0000020000455c94 : jne 0x20000455ca7 ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004568aa : jne 0x200004568bd ; mov al, r8b ; add rsp, 0x28 ; ret
0x0000020000459e64 : jne 0x20000459e31 ; ret
0x000002000045cdad : jne 0x2000045cd72 ; call r10
0x000002000045e53f : jne 0x2000045e544 ; ret
0x000002000045f343 : jne 0x2000045f350 ; add rsp, 0x28 ; ret
0x000002000046227e : jne 0x200004622fe ; mov ecx, r15d ; call 0x2000008e15c
0x00000200004625e3 : jne 0x200004625a3 ; ret
0x0000020000467028 : jne 0x20000467037 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000046a194 : jne 0x2000046a19d ; xor eax, eax ; ret
0x000002000046dcd3 : jne 0x2000046dce2 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000470858 : jne 0x2000047086b ; mov eax, ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000047112c : jne 0x20000471135 ; ret
0x0000020000471e23 : jne 0x20000471e32 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000478f86 : jne 0x20000478f97 ; cmp byte ptr [rcx + 1], 0xf ; ja 0x20000478f97 ; ret
0x000002000047a547 : jne 0x2000047a537 ; add rsp, 0x28 ; ret
0x000002000047b00e : jne 0x2000047b01f ; xor al, al ; add rsp, 0x28 ; ret
0x000002000047b06b : jne 0x2000047b046 ; add rsp, 0x28 ; ret
0x0000020000481afd : jne 0x20000481ae5 ; mov al, 1 ; ret
0x0000020000481b54 : jne 0x20000481b43 ; ret
0x0000020000481c1e : jne 0x20000481c3f ; mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x000002000048d93a : jne 0x2000048d949 ; add rsp, 0x70 ; pop rbx ; ret
0x00000200004923c6 : jne 0x200004923cf ; mov al, 1 ; ret
0x00000200004923c1 : jne 0x200004923d4 ; cmp r9d, edx ; jne 0x200004923d4 ; mov al, 1 ; ret
0x0000020000494c73 : jne 0x20000494c78 ; ret
0x0000020000494cca : jne 0x20000494cbe ; mov al, 1 ; add rsp, 0x38 ; ret
0x0000020000495559 : jne 0x2000049556a ; xor al, al ; add rsp, 0x28 ; ret
0x00000200004955a9 : jne 0x20000495588 ; add rsp, 0x28 ; ret
0x000002000049c42f : jne 0x2000049c434 ; ret
0x000002000049c45b : jne 0x2000049c460 ; ret
0x000002000049fe2f : jne 0x2000049fe3e ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004a2fbb : jne 0x200004a2fb5 ; mov eax, 0xc000000d ; ret
0x00000200004a2fac : jne 0x200004a2fb5 ; xor eax, eax ; ret
0x00000200004a6226 : jne 0x200004a6239 ; mov qword ptr [rcx], rdx ; mov qword ptr [rdx + 8], rcx ; ret
0x00000200004a6c8d : jne 0x200004a6c92 ; ret
0x00000200004a6ca9 : jne 0x200004a6cae ; ret
0x00000200004a9b76 : jne 0x200004a9b85 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004aa061 : jne 0x200004aa073 ; lea rax, qword ptr [rcx + 0x510] ; ret
0x00000200004aa09a : jne 0x200004aa0e1 ; ret
0x00000200004aa15c : jne 0x200004aa14f ; ret
0x00000200004aa6cd : jne 0x200004aa69f ; jmp 0x200004aa696
0x00000200004ac57c : jne 0x200004ac585 ; xor eax, eax ; ret
0x00000200004ac9ae : jne 0x200004ac9b9 ; mov al, r9b ; ret
0x00000200004ad993 : jne 0x200004ad9a4 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004b3076 : jne 0x200004b308b ; xor eax, eax ; ret
0x00000200004b3126 : jne 0x200004b312f ; xor eax, eax ; ret
0x00000200004b317e : jne 0x200004b3187 ; xor eax, eax ; ret
0x00000200004bb495 : jne 0x200004bb49a ; ret
0x00000200004bb490 : jne 0x200004bb4a9 ; test cl, 0x10 ; jne 0x200004bb49f ; ret
0x00000200004beae4 : jne 0x200004beb25 ; xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004c0eb7 : jne 0x200004c0e9b ; ret 0x41ff
0x00000200004c495a : jne 0x200004c4333 ; call 0x200000f139d
0x00000200004c6253 : jne 0x200004c5f63 ; call 0x200000f139d
0x00000200004c738c : jne 0x200004c7405 ; mov rcx, r13 ; call 0x200000e8068
0x00000200004ca629 : jne 0x200004ca621 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004d16ae : jne 0x200004d16a2 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004d1f5c : jne 0x200004d1f6b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004d1fb1 : jne 0x200004d1fc0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e045d : jne 0x200004e0466 ; xor eax, eax ; ret
0x00000200004e4566 : jne 0x200004e454f ; xor eax, eax ; ret
0x00000200004e6d91 : jne 0x200004e6d81 ; inc rax ; add rsp, 0x38 ; ret
0x00000200004e8f80 : jne 0x200004e8f8f ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004f2d50 : jne 0x200004f2d5a ; mov eax, r10d ; ret
0x00000200004f2d50 : jne 0x200004f2d5b ; mov eax, r10d ; ret
0x00000200004f40b2 : jne 0x200004f40ac ; xor al, al ; ret
0x00000200004f4469 : jne 0x200004f4476 ; add rsp, 0x28 ; ret
0x00000200004f58d7 : jne 0x200004f58ea ; lea rax, qword ptr [rip - 0x1d6640] ; ret
0x00000200004f67ec : jne 0x200004f67f1 ; ret
0x00000200004f67e6 : jne 0x200004f67f7 ; cmp byte ptr [rcx + 0x4c], 0 ; jne 0x200004f67f7 ; ret
0x00000200004f6902 : jne 0x200004f690f ; xor cl, cl ; mov al, cl ; ret
0x00000200004fb0c3 : jne 0x200004fb0c8 ; ret
0x00000200004fd520 : jne 0x200004fd516 ; ret
0x00000200004fd534 : jne 0x200004fd541 ; add rsp, 0x28 ; ret
0x00000200004fdeed : jne 0x200004fdebc ; call 0x2000011f84d
0x00000200004fdee9 : jne 0x200004fdef8 ; cmp dword ptr [rdi], ebp ; jne 0x200004fdec0 ; call 0x2000011f851
0x0000020000502bf7 : jne 0x20000502b7b ; ret
0x00000200005098b7 : jne 0x200005098c0 ; xor eax, eax ; ret
0x00000200005098d9 : jne 0x200005098cd ; lea eax, dword ptr [r8 + 0x48] ; ret
0x000002000050ee2c : jne 0x2000050ee3b ; mov eax, 1 ; ret
0x0000020000517d0a : jne 0x20000517d1d ; lea rax, qword ptr [rip + 0x589ad] ; ret
0x0000020000517d1c : jne 0x20000517d2f ; lea rax, qword ptr [rip + 0x589fb] ; ret
0x000002000051a921 : jne 0x2000051a91b ; lea rcx, qword ptr [rsp + 0x30] ; call 0x20000526bf5
0x000002000051ab10 : jne 0x2000051ab1f ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000523a6a : jne 0x20000523a19 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000525aaa : jne 0x20000525ad8 ; call 0x200001480d5
0x0000020000525d7f : jne 0x20000525d5e ; call 0x20000148175
0x0000020000529d08 : jne 0x20000529d11 ; xor eax, eax ; ret
0x000002000052dbb9 : jne 0x2000052dbc8 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000052ddbd : jne 0x2000052ddc4 ; pop rbx ; ret
0x000002000052fb32 : jne 0x2000052fb3f ; add rsp, 0x38 ; ret
0x000002000052fca3 : jne 0x2000052fca2 ; mov byte ptr [rip - 0x233c2b], 0 ; ret
0x0000020000530a1b : jne 0x20000530a2c ; mov eax, dword ptr [rax + 0x1f98] ; ret
0x0000020000534721 : jne 0x2000053471a ; jmp 0x2000053472f
0x0000020000536e53 : jne 0x20000536e4b ; ret
0x0000020000538b7e : jne 0x20000538b7b ; lock inc dword ptr [rax + 0x10] ; ret
0x00000200005392d6 : jne 0x200005392db ; ret
0x000002000053ab87 : jne 0x2000053ab9a ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000053ae0e : jne 0x2000053ae1d ; mov eax, 1 ; ret
0x0000020000541785 : jne 0x2000054173e ; ret
0x0000020000544b26 : jne 0x20000544ade ; jmp 0x200005f0e16
0x0000020000544e1d : jne 0x20000544e28 ; mov rax, r8 ; ret
0x0000020000549f03 : jne 0x20000549faa ; ret
0x0000020000551475 : jne 0x20000551488 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005525e6 : jne 0x200005525eb ; ret
0x000002000055603f : jne 0x2000055603a ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000557bfb : jne 0x20000557c11 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000055e3da : jne 0x2000055e2c5 ; ret
0x000002000055eb1e : jne 0x2000055eaf8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000563ec0 : jne 0x20000563ecd ; add rsp, 0x58 ; ret
0x0000020000568fce : jne 0x20000568fe6 ; mov eax, ecx ; add rsp, 0x28 ; ret
0x0000020000581024 : jne 0x20000581046 ; mov rdx, r12 ; mov rcx, rsi ; call r8
0x00000200003e75b7 : jne 0x20000583637 ; call 0x20000007b1d
0x00000200003f10ba : jne 0x20000586ee7 ; mov eax, r9d ; ret
0x0000020000408e63 : jne 0x200005901f0 ; mov al, 1 ; ret
0x000002000040fe88 : jne 0x20000592520 ; xor al, al ; ret
0x0000020000412c41 : jne 0x20000594052 ; inc edx ; jmp 0x20000412c34
0x000002000059500c : jne 0x20000595024 ; mov edx, r14d ; mov rcx, rbx ; call rax
0x00000200005a0aa9 : jne 0x200005a0a95 ; call rcx
0x00000200005a0aa8 : jne 0x200005a0a96 ; call rcx
0x00000200005aa12e : jne 0x200005aa2fc ; call 0x200001d20f9
0x00000200005aae0f : jne 0x200005aae1d ; ret 0x45ff
0x0000020000452300 : jne 0x200005ae5c0 ; ret
0x0000020000454b1e : jne 0x200005af88e ; xor eax, eax ; ret
0x00000200005139b1 : jne 0x200005b1697 ; ret
0x00000200005bd7a1 : jne 0x200005bd733 ; jmp 0x200005bd676
0x00000200005c1d6f : jne 0x200005c1d60 ; dec dword ptr [rax - 0x75] ; ret
0x000002000046b4d3 : jne 0x200005c2379 ; call 0x2000009039d
0x000002000046f94d : jne 0x200005c31fc ; ret
0x0000020000492391 : jne 0x200005cd8b2 ; ret
0x0000020000494c62 : jne 0x200005ce43a ; ret
0x00000200004b22f2 : jne 0x200005d3e9e ; ret
0x00000200005d75b1 : jne 0x200005d75a6 ; dec dword ptr [rbp + 0x3b] ; ret
0x00000200005015f5 : jne 0x200005e9737 ; mov eax, edi ; jmp 0x200005015ca
0x000002000050315c : jne 0x200005e998b ; inc edx ; jmp 0x2000050314f
0x0000020000508b34 : jne 0x200005ec03e ; xor eax, eax ; ret
0x0000020000545ca8 : jne 0x200005f11d1 ; xor al, al ; ret
0x000002000054b742 : jne 0x200005f2a2c ; ret
0x0000020000517e60 : jne 0x200005f2ae8 ; ret
0x0000020000564724 : jne 0x200005fbee0 ; ret
0x0000020000568535 : jne 0x200005fd86c ; ret
0x000002000056958b : jne 0x200005fe05c ; ret
0x0000020000606917 : jne 0x20000606934 ; call 0x20000229929
0x00000200006084af : jne 0x2000060844c ; sar edi, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000060c2ff : jne 0x2000060c2e9 ; inc dword ptr [rax + rax*8 - 0x7421bbf1] ; ret
0x000002000060ebfa : jne 0x2000060ebe1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000610152 : jne 0x2000061015b ; xor eax, eax ; ret
0x0000020000615787 : jne 0x20000615803 ; ret
0x0000020000617387 : jne 0x200006173e7 ; ret
0x00000200006196c7 : jne 0x2000061970e ; ret
0x000002000061b231 : jne 0x2000061b227 ; mov al, r8b ; ret
0x000002000061b264 : jne 0x2000061b25c ; add rsp, 0x20 ; pop rbx ; ret
0x000002000061b6cc : jne 0x2000061b6be ; ret
0x0000020000620d77 : jne 0x20000620d86 ; mov eax, 0xc000000d ; ret
0x0000020000621549 : jne 0x20000621554 ; lea eax, dword ptr [rdx + 1] ; ret
0x0000020000624e87 : jne 0x20000624ee5 ; ret
0x0000020000625a96 : jne 0x20000625aa4 ; call 0x2000024da45
0x000002000062629e : jne 0x200006262ac ; call 0x2000024da45
0x00000200006265c5 : jne 0x200006265d3 ; call 0x2000024da45
0x000002000062680d : jne 0x2000062681b ; call 0x2000024da45
0x0000020000626ae0 : jne 0x20000626aee ; call 0x2000024da45
0x0000020000629bf3 : jne 0x20000629c01 ; call 0x2000024da45
0x000002000062b402 : jne 0x2000062b40b ; xor eax, eax ; ret
0x000002000062c479 : jne 0x2000062c4eb ; mov eax, 0x102 ; ret
0x000002000062c66f : jne 0x2000062c678 ; jmp 0x2000062c639
0x000002000062ec2e : jne 0x2000062ec42 ; mov ebx, 0xc000009a ; jmp 0x2000062ec01
0x000002000062f063 : jne 0x2000062f055 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000634042 : jne 0x2000063403b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006444e3 : jne 0x2000064449c ; inc dword ptr [rbp - 0xbc8b40] ; ret
0x0000020000645363 : jne 0x20000645372 ; mov eax, 0xc00000bb ; ret
0x0000020000646c6c : jne 0x20000646c17 ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000065003e : jne 0x20000650003 ; jmp 0x200006500ac
0x0000020000658d12 : jne 0x20000658d03 ; xor eax, eax ; ret
0x000002000065e146 : jne 0x2000065e100 ; inc rdx ; jmp 0x2000065e17e
0x00000200006636e5 : jne 0x200006636dc ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000668dd1 : jne 0x20000668da4 ; add rsp, 0x38 ; ret
0x000002000066afea : jne 0x2000066aff3 ; mov al, 1 ; ret
0x000002000066b2bc : jne 0x2000066b296 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000066fe85 : jne 0x2000066fe74 ; ret
0x0000020000670b47 : jne 0x20000670b56 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006715bc : jne 0x200006715ed ; mov eax, 0xc ; ret
0x000002000067fce7 : jne 0x2000067fcf1 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000067fce6 : jne 0x2000067fcf2 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000681933 : jne 0x20000681928 ; xor al, al ; ret
0x000002000068191f : jne 0x20000681934 ; mov al, 1 ; ret
0x0000020000683502 : jne 0x200006834df ; ret
0x000002000068687a : jne 0x20000686860 ; ret
0x000002000068688c : jne 0x2000068689b ; mov eax, 1 ; ret
0x0000020000687f8b : jne 0x20000687f94 ; xor al, al ; ret
0x000002000068ac2a : jne 0x2000068ac24 ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x000002000068ac2a : jne 0x2000068ac25 ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x000002000068bf20 : jne 0x2000068bf29 ; xor al, al ; ret
0x000002000068f804 : jne 0x2000068f80f ; mov qword ptr [rdx], rax ; ret
0x000002000068f81a : jne 0x2000068f829 ; mov eax, 0xc00000bb ; ret
0x000002000068f83e : jne 0x2000068f84d ; mov eax, 0xc00000bb ; ret
0x0000020000693710 : jne 0x2000069371e ; mov eax, 1 ; ret
0x0000020000693853 : jne 0x2000069385c ; mov al, 1 ; ret
0x000002000069b29e : jne 0x2000069b278 ; xor eax, eax ; ret
0x000002000069e3b5 : jne 0x2000069e3c4 ; mov eax, 0xc0000088 ; ret
0x000002000069e3cc : jne 0x2000069e3d9 ; lea eax, dword ptr [r9 + 0xb] ; ret
0x000002000069e3d6 : jne 0x2000069e3e3 ; lea eax, dword ptr [r8 + 0x14] ; ret
0x00000200006a1e8f : jne 0x200006a1e6f ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006a7cc6 : jne 0x200006a7cb0 ; mov rax, rcx ; ret
0x00000200006a9c16 : jne 0x200006a9c0f ; jmp 0x200006a9c24
0x00000200006adbc4 : jne 0x200006adbb7 ; ret
0x00000200006ae26b : jne 0x200006ae25a ; add rsp, 0x28 ; ret
0x00000200006bbbc9 : jne 0x200006bbbb4 ; mov eax, r8d ; ret
0x00000200006bbfc8 : jne 0x200006bbfd6 ; xor eax, eax ; ret
0x00000200006c6023 : jne 0x200006c6032 ; sub ecx, 0x10 ; jns 0x200006c600e ; ret
0x00000200006c605f : jne 0x200006c606e ; sub ecx, 0x10 ; jns 0x200006c604a ; ret
0x00000200006c6746 : jne 0x200006c6755 ; mov eax, 0xc000000d ; ret
0x00000200006c67de : jne 0x200006c67c1 ; not r9d ; mov eax, r9d ; ret
0x00000200006c6f4b : jne 0x200006c6f54 ; xor eax, eax ; ret
0x00000200006cd393 : jne 0x200006cd385 ; test bl, bl ; jns 0x200006cd3b6 ; jmp 0x200006cd3ae
0x00000200006cd41f : jne 0x200006cd411 ; test bl, bl ; jns 0x200006cd45f ; jmp 0x200006cd43a
0x00000200006cdddf : jne 0x200006cddab ; ret
0x00000200006d36a3 : jne 0x200006d36b0 ; mov r8b, 1 ; mov al, r8b ; ret
0x00000200006d3730 : jne 0x200006d36e6 ; mov al, 1 ; ret
0x00000200006d36e0 : jne 0x200006d3736 ; xor al, al ; ret
0x00000200006d3707 : jne 0x200006d373b ; and r8b, 1 ; mov al, r8b ; ret
0x00000200006d65d5 : jne 0x200006d65c8 ; mov eax, 0xc0000225 ; ret
0x00000200006dc1b2 : jne 0x200006dc177 ; call r10
0x00000200006e0cdc : jne 0x200006e0ce9 ; add rsp, 0x28 ; ret
0x00000200006e5c97 : jne 0x200006e5c47 ; xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200006f37a8 : jne 0x200006f379e ; ret
0x00000200006f4550 : jne 0x200006f4539 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006f6d27 : jne 0x200006f6d67 ; ret 0xc7ff
0x00000200006ff232 : jne 0x20000701526 ; ret
0x0000020000703bb9 : jne 0x20000703bbe ; ret
0x0000020000703c41 : jne 0x20000703c53 ; sub r9, r8 ; mov qword ptr [rcx + 8], r9 ; ret
0x0000020000705f54 : jne 0x20000705f2e ; ret
0x00000200007063a7 : jne 0x20000706396 ; xor al, al ; ret
0x00000200007063f3 : jne 0x200007063e3 ; xor al, al ; ret
0x00000200007069b3 : jne 0x200007069c4 ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000708b13 : jne 0x20000708b5d ; mov eax, edi ; call rax
0x0000020000709cf6 : jne 0x20000709cff ; xor eax, eax ; ret
0x000002000070ac9d : jne 0x2000070ac94 ; xor eax, eax ; ret
0x000002000070e273 : jne 0x2000070e27c ; xor eax, eax ; ret
0x000002000070e6e9 : jne 0x2000070e6fb ; mov rax, qword ptr [rdx + 0x18] ; mov qword ptr [rcx], rax ; ret
0x000002000070efe6 : jne 0x2000070efd3 ; ret
0x000002000070f3b6 : jne 0x2000070f3e9 ; bts dword ptr [r8 + 0x20], 0x18 ; ret
0x000002000070fed1 : jne 0x2000070fee0 ; mov eax, 0xc000042a ; ret
0x000002000070ff55 : jne 0x2000070ff64 ; mov eax, 0xc000042a ; ret
0x0000020000710db2 : jne 0x20000710da8 ; ret
0x0000020000711554 : jne 0x20000711550 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000711a62 : jne 0x20000711a53 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000712464 : jne 0x20000712477 ; movups xmm0, xmmword ptr [rcx] ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x0000020000716d2e : jne 0x20000716d28 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000716d6b : jne 0x20000716d7a ; mov eax, 1 ; ret
0x0000020000717ce9 : jne 0x20000717ce5 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200007189b3 : jne 0x200007189c2 ; lock inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x00000200007196b8 : jne 0x20000719688 ; xor eax, eax ; ret
0x0000020000719fee : jne 0x20000719ff6 ; xor eax, eax ; ret
0x000002000071a9fb : jne 0x2000071a9f3 ; xor eax, eax ; ret
0x000002000071c147 : jne 0x2000071c0ef ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000722038 : jne 0x20000722047 ; mov eax, 0xc00000bb ; ret
0x0000020000724f69 : jne 0x20000724f58 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007796a0 : jne 0x20000779690 ; mov rax, rdx ; jmp 0x20000779708
0x0000020000779a40 : jne 0x20000779a30 ; mov rax, rdx ; jmp 0x20000779a4d
0x000002000077f1d7 : jne 0x2000077f1c8 ; mov rax, rdx ; jmp 0x2000077f1e4
0x000002000077f2f9 : jne 0x2000077f2e8 ; mov rax, rdx ; jmp 0x2000077f306
0x000002000077ff41 : jne 0x2000077ff32 ; mov rax, rdx ; jmp 0x2000077ff4e
0x0000020000780984 : jne 0x20000780975 ; mov rax, rdx ; jmp 0x20000780991
0x0000020000781597 : jne 0x2000078158c ; mov rax, rdx ; jmp 0x200007815a4
0x0000020000781bf3 : jne 0x20000781be4 ; mov rax, rdx ; jmp 0x20000781c00
0x000002000078261d : jne 0x2000078260f ; mov rax, rdx ; jmp 0x2000078262a
0x00000200007831e3 : jne 0x200007831d8 ; mov rax, rdx ; jmp 0x200007831f9
0x0000020000783a4f : jne 0x20000783a3f ; mov rax, rdx ; jmp 0x20000783a5c
0x0000020000783e49 : jne 0x20000783e3a ; mov rax, rdx ; jmp 0x20000783e56
0x00000200007845cc : jne 0x200007845bd ; mov rax, rdx ; jmp 0x200007845d9
0x0000020000784e83 : jne 0x20000784e77 ; mov rax, rdx ; jmp 0x20000784e90
0x000002000078510c : jne 0x20000785100 ; mov rax, rdx ; jmp 0x20000785119
0x000002000078535c : jne 0x2000078534c ; mov rax, rdx ; jmp 0x20000785369
0x000002000078591d : jne 0x2000078590b ; mov rax, rdx ; jmp 0x2000078592a
0x0000020000785b3f : jne 0x20000785b32 ; mov rax, rdx ; jmp 0x20000785b4c
0x0000020000786f44 : jne 0x20000786f34 ; mov rax, rdx ; jmp 0x20000786f51
0x000002000078715a : jne 0x2000078714a ; mov rax, rdx ; jmp 0x20000787167
0x0000020000787631 : jne 0x20000787622 ; mov rax, rdx ; jmp 0x2000078763e
0x00000200007878fe : jne 0x200007878ee ; mov rax, rdx ; jmp 0x2000078790b
0x0000020000788658 : jne 0x20000788648 ; mov rax, rdx ; jmp 0x20000788665
0x0000020000788a21 : jne 0x20000788a12 ; mov rax, rdx ; jmp 0x20000788a2e
0x0000020000789299 : jne 0x20000789289 ; mov rax, rdx ; jmp 0x200007892a6
0x0000020000789833 : jne 0x20000789826 ; mov rax, rdx ; jmp 0x20000789840
0x0000020000789ba9 : jne 0x20000789b9a ; mov rax, rdx ; jmp 0x20000789bb6
0x0000020000789e0f : jne 0x20000789e00 ; mov rax, rdx ; jmp 0x20000789e1c
0x000002000078bb20 : jne 0x2000078bb12 ; mov rax, rdx ; jmp 0x2000078bb2d
0x000002000078c3dc : jne 0x2000078c3ce ; mov rax, rdx ; jmp 0x2000078c3e9
0x0000020000798e1f : jne 0x20000798e24 ; ret
0x00000200007c581e : jne 0x200007a07cf ; xor eax, eax ; ret
0x00000200007a93c5 : jne 0x200007a93a7 ; ret
0x00000200007ab4bb : jne 0x200007ab4b8 ; or dword ptr [rip - 0x4a9f00], 2 ; ret
0x00000200007b50d4 : jne 0x200007b50c8 ; mov al, 1 ; add rsp, 0x38 ; ret
0x00000200007b6c92 : jne 0x200007b6cd5 ; lea rax, qword ptr [rip - 0x66045b] ; ret
0x00000200007b7a6a : jne 0x200007b7a60 ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200007b7a6a : jne 0x200007b7a61 ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200007b8588 : jne 0x200007b8579 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007baa7f : jne 0x200007baa6b ; ret
0x00000200007bb106 : jne 0x200007bb119 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200007bb18a : jne 0x200007bb19d ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000079fdf3 : jne 0x200007c5780 ; ret
0x00000200007cd1d0 : jne 0x200007cd1ae ; call 0x200003f8b59
0x00000200007cef4a : jne 0x200007cef26 ; sub r11, rax ; mov rax, r11 ; ret
0x00000200007d26f3 : jne 0x200007d26e6 ; xor eax, eax ; ret
0x00000200007d26ef : jne 0x200007d26fd ; test al, 2 ; jne 0x200007d26ea ; xor eax, eax ; ret
0x0000020000031d4a : jno 0x20000031d51 ; xor qword ptr [rdx], rax ; ret
0x000002000008e0a3 : jno 0x2000008e05d ; xor dword ptr [rax], eax ; sete al ; ret
0x00000200000c7ad6 : jno 0x200000c7ae9 ; add dh, dh ; ret
0x00000200001219c8 : jno 0x20000121a31 ; add byte ptr [rbp + 0x3b], al ; ret 0x6a73
0x0000020000133c7a : jno 0x20000133c7d ; ret 0xbf
0x0000020000151345 : jno 0x2000015134b ; add byte ptr [rax], al ; jmp rdx
0x0000020000173d37 : jno 0x20000173d37 ; dec dword ptr [rax - 0x7d] ; ret 0xe908
0x0000020000195739 : jno 0x20000195745 ; int1 ; dec dword ptr [rcx - 0x75] ; ret
0x00000200001967c2 : jno 0x200001967ee ; int1 ; inc dword ptr [rbx - 0x74bb021d] ; ret
0x00000200001c0e4d : jno 0x200001c0e75 ; add byte ptr [rsp + rax + 0x48], dh ; mov eax, ecx ; ret
0x00000200001dc413 : jno 0x200001dc47c ; adc dword ptr [rax], eax ; call qword ptr [rax]
0x00000200003cb258 : jno 0x200003cb252 ; dec dword ptr [rdi] ; ret 0x4d89
0x00000200003e75b9 : jno 0x200003e7582 ; sbb dword ptr [rax], eax ; call 0x20000007b1b
0x000002000045facf : jno 0x2000045fab1 ; ret
0x0000020000481c30 : jno 0x20000481c39 ; add al, al ; jmp 0x20000481bfe
0x00000200004bd62b : jno 0x200004bd5d6 ; ret 0xebff
0x00000200004ffafb : jno 0x200004ffab0 ; ret
0x000002000051bd7b : jno 0x2000051bd88 ; je 0x2000051bd8b ; call 0x20000149837
0x000002000051cc15 : jno 0x2000051cc25 ; add byte ptr [rbp + 0x3b], al ; ret 0x850f
0x0000020000530884 : jno 0x20000530864 ; call qword ptr [rdi]
0x0000020000548831 : jno 0x2000054883d ; ret
0x0000020000585e7c : jno 0x20000585e52 ; dec dword ptr [rbx - 0x74bbafab] ; ret
0x000002000058ecf5 : jno 0x2000058ece3 ; dec dword ptr [rax - 0x75] ; ret
0x00000200005bb295 : jno 0x200005bb293 ; inc dword ptr [rcx - 0x7d] ; ret
0x00000200005bb294 : jno 0x200005bb294 ; inc dword ptr [rcx - 0x7d] ; ret
0x00000200005d068c : jno 0x200005d0648 ; jmp qword ptr [rcx]
0x00000200005f1abe : jno 0x200005f1aba ; dec dword ptr [rcx - 0x7d] ; ret
0x000002000062918b : jno 0x200006291cd ; ret 0xb9ff
0x00000200006383ab : jno 0x200006383e9 ; ret
0x000002000065d60b : jno 0x2000065d657 ; mov eax, 0xc48348ff ; pop rax ; ret
0x00000200006bbecb : jno 0x200006bbe99 ; ret
0x0000020000705ffe : jno 0x20000706007 ; add byte ptr [rcx - 1], al ; ret
0x000002000077abb3 : jno 0x2000077ab8e ; ret 0x48ff
0x00000200007c38ef : jno 0x200007c38e2 ; ret
0x00000200003e717d : jnp 0x1ff8b7e95d5 ; ret
0x00000200000036ae : jnp 0x200000036d6 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000003812 : jnp 0x20000003843 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000006f68 : jnp 0x20000006f99 ; mov rsp, r11 ; pop r14 ; ret
0x000002000000be54 : jnp 0x2000000be7c ; mov rsp, r11 ; pop rbp ; ret
0x000002000001b86b : jnp 0x2000001b80e ; adc al, 0 ; ret
0x0000020000040a2e : jnp 0x20000040a5e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000040d15 : jnp 0x20000040d45 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000517cf : jnp 0x200000517f7 ; mov rsp, r11 ; pop rbp ; ret
0x000002000005682a : jnp 0x2000005684a ; mov rsp, r11 ; pop rbp ; ret
0x000002000008606b : jnp 0x2000008609b ; mov rsp, r11 ; pop rbp ; ret
0x000002000009347d : jnp 0x200000934ae ; mov rsp, r11 ; pop r14 ; ret
0x00000200000ad407 : jnp 0x200000ad419 ; jmp 0x200000acf5c
0x00000200000dc905 : jnp 0x200000dc976 ; add dword ptr [rax - 0x75], ecx ; ret
0x00000200000fb0d2 : jnp 0x200000fb0fa ; mov rsp, r11 ; pop rbp ; ret
0x00000200000fd75f : jnp 0x200000fd78f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000101605 : jnp 0x2000010162d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000112e0d : jnp 0x20000112e3d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000118861 : jnp 0x20000118872 ; add eax, 0x83482e74 ; ret
0x000002000011a8a7 : jnp 0x2000011a8cf ; mov rsp, r11 ; pop rbp ; ret
0x000002000011ad49 : jnp 0x2000011ad71 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011b68c : jnp 0x2000011b6bc ; mov rsp, r11 ; pop rbp ; ret
0x000002000011c950 : jnp 0x2000011c978 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011cd25 : jnp 0x2000011cd78 ; lea eax, dword ptr [rdi + rcx] ; xor edx, edx ; xor ecx, ecx ; call rax
0x000002000011e2e7 : jnp 0x2000011e30f ; mov rsp, r11 ; pop rbp ; ret
0x000002000011e4dd : jnp 0x2000011e4fd ; mov rsp, r11 ; pop rbp ; ret
0x000002000011ed10 : jnp 0x2000011ed30 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000120540 : jnp 0x20000120560 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000120c4c : jnp 0x20000120c7c ; mov rsp, r11 ; pop rbp ; ret
0x00000200001254b7 : jnp 0x200001254c2 ; add bh, bh ; ret 0x1589
0x000002000012dd98 : jnp 0x2000012ddc8 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000130e1b : jnp 0x20000130e44 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000135896 : jnp 0x200001358c6 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000137446 : jnp 0x20000137476 ; mov rsp, r11 ; pop rbp ; ret
0x000002000013976f : jnp 0x2000013978f ; mov rsp, r11 ; pop rbp ; ret
0x000002000013a9b9 : jnp 0x2000013a9e9 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000143292 : jnp 0x20000143311 ; sub al, byte ptr [rcx + 0xf] ; mov dh, 0x45 ; add byte ptr [rbx], bh ; ret
0x0000020000107eea : jnp 0x2000014b391 ; add byte ptr [rcx - 0x75], al ; ret 0x2348
0x00000200001887bf : jnp 0x200001887b4 ; dec dword ptr [rax - 0x75] ; ret 0xf48
0x00000200001887f1 : jnp 0x200001887e6 ; dec dword ptr [rcx - 0x7f] ; ret
0x00000200001887f0 : jnp 0x200001887e7 ; dec dword ptr [rcx - 0x7f] ; ret
0x0000020000188809 : jnp 0x20000188802 ; dec dword ptr [rcx - 0x75] ; sbb byte ptr [rbp - 0x75], cl ; ret 0x4ba
0x00000200001b7309 : jnp 0x200001b7331 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001bf524 : jnp 0x200001bf569 ; call rcx
0x00000200001bf523 : jnp 0x200001bf56a ; call rcx
0x00000200001bf56d : jnp 0x200001bf59d ; mov rsp, r11 ; pop rbp ; ret
0x00000200001bf6d1 : jnp 0x200001bf678 ; adc eax, dword ptr [rax] ; call rax
0x00000200001c1b6b : jnp 0x200001c1b8b ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c1d0b : jnp 0x200001c1d2b ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c1fc7 : jnp 0x200001c1fef ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c4055 : jnp 0x200001c4086 ; mov rsp, r11 ; pop r14 ; ret
0x00000200001cc8c1 : jnp 0x200001cc8f1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001ce8b8 : jnp 0x200001ce8e9 ; mov rsp, r11 ; pop r15 ; ret
0x00000200001cf1f2 : jnp 0x200001cf222 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001cf63f : jnp 0x200001cf65f ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d05e6 : jnp 0x200001d060e ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d079e : jnp 0x200001d07c6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d0a7a : jnp 0x200001d0aa2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d592d : jnp 0x200001d595d ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d74c2 : jnp 0x200001d74ea ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d97c5 : jnp 0x200001d97e5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d9a4b : jnp 0x200001d9a7b ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e4b2c : jnp 0x200001e4b32 ; add al, al ; ret
0x00000200001e68f0 : jnp 0x200001e6918 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001eceb8 : jnp 0x200001ecee0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001f2277 : jnp 0x200001f2297 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001f23b3 : jnp 0x200001f23d3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001fbb70 : jnp 0x200001fbba1 ; mov rsp, r11 ; pop r14 ; ret
0x00000200001fd307 : jnp 0x200001fd327 ; mov rsp, r11 ; pop rbp ; ret
0x00000200002048d2 : jnp 0x20000204903 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000204d73 : jnp 0x20000204da3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200002051f5 : jnp 0x20000205225 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000205668 : jnp 0x20000205690 ; mov rsp, r11 ; pop rbp ; ret
0x000002000020572d : jnp 0x20000205755 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000205e5a : jnp 0x20000205e8a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000206a98 : jnp 0x20000206ac8 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000206c44 : jnp 0x20000206c74 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000208374 : jnp 0x200002083a4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200002084a1 : jnp 0x200002084c9 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000208575 : jnp 0x2000020859d ; mov rsp, r11 ; pop rbp ; ret
0x000002000020878f : jnp 0x200002087b7 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000208e43 : jnp 0x20000208e6b ; mov rsp, r11 ; pop rbp ; ret
0x0000020000209272 : jnp 0x200002092a2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200002094bb : jnp 0x200002094eb ; mov rsp, r11 ; pop rbp ; ret
0x000002000020b380 : jnp 0x2000020b3a8 ; mov rsp, r11 ; pop rbp ; ret
0x000002000020c9db : jnp 0x2000020ca0c ; mov rsp, r11 ; pop r14 ; ret
0x000002000020cab7 : jnp 0x2000020cad7 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000216f04 : jnp 0x20000216f34 ; mov rsp, r11 ; pop rbp ; ret
0x000002000021911d : jnp 0x2000021914d ; mov rsp, r11 ; pop rbp ; ret
0x000002000021ed45 : jnp 0x2000021ed6d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000222f90 : jnp 0x20000222fb8 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000224100 : jnp 0x20000224120 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000224639 : jnp 0x20000224661 ; mov rsp, r11 ; pop rbp ; ret
0x000002000022bc55 : jnp 0x2000022bc7d ; mov rsp, r11 ; pop rbp ; ret
0x000002000022e576 : jnp 0x2000022e5a7 ; mov rsp, r11 ; pop r14 ; ret
0x000002000022f9e1 : jnp 0x2000022fa11 ; mov rsp, r11 ; pop rbp ; ret
0x00000200002373a9 : jnp 0x200002373b8 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200002376b6 : jnp 0x200002376e6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003cdcee : jnp 0x200003cdd0e ; mov rsp, r11 ; pop rbp ; ret
0x00000200003d0f1a : jnp 0x200003d0f42 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003d38e1 : jnp 0x200003d3909 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003d967c : jnp 0x200003d96ac ; mov rsp, r11 ; pop rbp ; ret
0x00000200003dc956 : jnp 0x200003dc986 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003e2d79 : jnp 0x200003e2da9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003e5721 : jnp 0x200003e5733 ; ret 0xebff
0x00000200003e7870 : jnp 0x200003e78a0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003e99c1 : jnp 0x200003e99ea ; mov rsp, r11 ; pop r14 ; ret
0x00000200003ecb10 : jnp 0x200003ecb38 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003ecb8f : jnp 0x200003ecbbf ; mov rsp, r11 ; pop rbp ; ret
0x00000200003ed3fc : jnp 0x200003ed424 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003f6402 : jnp 0x200003f6432 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000407fd4 : jnp 0x20000407ffd ; mov rsp, r11 ; pop r14 ; ret
0x000002000040c021 : jnp 0x2000040c049 ; mov rsp, r11 ; pop rbp ; ret
0x000002000040e44a : jnp 0x2000040e472 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000411dcb : jnp 0x20000411d5d ; push rcx ; add al, 0xf7 ; ret 0xfff8
0x000002000042d94a : jnp 0x2000042d97b ; mov rsp, r11 ; pop r14 ; ret
0x000002000043104c : jnp 0x20000431074 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000438c0f : jnp 0x20000438c3f ; mov rsp, r11 ; pop rbp ; ret
0x000002000043d562 : jnp 0x2000043d4f0 ; ret
0x0000020000440328 : jnp 0x2000044032e ; add al, al ; ret
0x000002000044588b : jnp 0x2000044587f ; dec dword ptr [rax - 0x75] ; ret 0x83c3
0x0000020000447f1b : jnp 0x20000447f4b ; mov rsp, r11 ; pop rbp ; ret
0x00000200004496e7 : jnp 0x20000449718 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000452c6e : jnp 0x20000452c8e ; mov rsp, r11 ; pop rbp ; ret
0x000002000045492e : jnp 0x2000045495e ; mov rsp, r11 ; pop rbp ; ret
0x00000200004566dd : jnp 0x20000456705 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000457e8c : jnp 0x20000457eb5 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000458001 : jnp 0x20000458055 ; ret 0xbaff
0x000002000045906f : jnp 0x200004590a0 ; mov rsp, r11 ; pop r14 ; ret
0x000002000045eed5 : jnp 0x2000045eefd ; mov rsp, r11 ; pop rbp ; ret
0x000002000046549f : jnp 0x200004654d0 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000465880 : jnp 0x200004658a9 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000466c34 : jnp 0x20000466c65 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000467bc9 : jnp 0x20000467bf9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000046d246 : jnp 0x2000046d26f ; mov rsp, r11 ; pop r14 ; ret
0x000002000047b120 : jnp 0x2000047b151 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000491942 : jnp 0x20000491973 ; mov rsp, r11 ; pop r14 ; ret
0x000002000049d1cb : jnp 0x2000049d1fb ; mov rsp, r11 ; pop rbp ; ret
0x00000200004a237b : jnp 0x200004a23a4 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004aa389 : jnp 0x200004aa3b9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004aff26 : jnp 0x200004aff4e ; mov rsp, r11 ; pop rbp ; ret
0x00000200004b8a48 : jnp 0x200004b8a71 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004bb3d1 : jnp 0x200004bb393 ; ret 0x48ff
0x00000200004c1f0d : jnp 0x200004c1e9c ; ret 0x2341
0x00000200004d03fe : jnp 0x200004d0426 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e6665 : jnp 0x200004e668e ; mov rsp, r11 ; pop r14 ; ret
0x00000200004fce01 : jnp 0x200004fce32 ; mov rsp, r11 ; pop r15 ; ret
0x000002000050137a : jnp 0x200005013a3 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000502d2b : jnp 0x20000502d5c ; mov rsp, r11 ; pop r14 ; ret
0x0000020000506e4c : jnp 0x20000506e6c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000509bce : jnp 0x20000509bff ; mov rsp, r11 ; pop r15 ; ret
0x0000020000514f98 : jnp 0x20000514fc8 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000516461 : jnp 0x20000516491 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005170e4 : jnp 0x2000051710c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000517897 : jnp 0x200005178a3 ; add byte ptr [rax - 0x75], cl ; ret 0xf49
0x0000020000518889 : jnp 0x200005188b9 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000518a2a : jnp 0x20000518a5b ; mov rsp, r11 ; pop r14 ; ret
0x00000200005198fa : jnp 0x2000051992b ; mov rsp, r11 ; pop r14 ; ret
0x000002000051a94d : jnp 0x2000051a97e ; mov rsp, r11 ; pop r14 ; ret
0x000002000051b064 : jnp 0x2000051b08c ; mov rsp, r11 ; pop rbp ; ret
0x000002000051b5fe : jnp 0x2000051b626 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051b6f2 : jnp 0x2000051b71a ; mov rsp, r11 ; pop rbp ; ret
0x000002000052216e : jnp 0x2000052218e ; mov rsp, r11 ; pop rbp ; ret
0x00000200005221f1 : jnp 0x20000522252 ; ret 0x8bff
0x0000020000522c35 : jnp 0x20000522c65 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005263e5 : jnp 0x20000526415 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000526dd1 : jnp 0x20000526df1 ; mov ah, 0xff ; add rsp, 0x38 ; ret
0x0000020000527b8c : jnp 0x20000527bb4 ; mov rsp, r11 ; pop rbp ; ret
0x000002000052a932 : jnp 0x2000052a952 ; mov rsp, r11 ; pop rbp ; ret
0x000002000052ad4f : jnp 0x2000052ad77 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004dba70 : jnp 0x2000052d302 ; add byte ptr [rcx - 0x7b], al ; ret 0x850f
0x0000020000530034 : jnp 0x2000053005c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000531e78 : jnp 0x20000531ea0 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000531f36 : jnp 0x20000531f66 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000531fc0 : jnp 0x20000531fe8 ; mov rsp, r11 ; pop rbp ; ret
0x000002000053b958 : jnp 0x2000053b988 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000544957 : jnp 0x20000544960 ; test byte ptr [rcx + 0xf], al ; ret 0x8489
0x000002000054a55e : jnp 0x2000054a57e ; mov rsp, r11 ; pop rbp ; ret
0x000002000054a69c : jnp 0x2000054a6bc ; mov rsp, r11 ; pop rbp ; ret
0x000002000054b407 : jnp 0x2000054b437 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005510dd : jnp 0x2000055110e ; mov rsp, r11 ; pop r14 ; ret
0x0000020000555e82 : jnp 0x20000555ea2 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000556f87 : jnp 0x20000556fb7 ; mov rsp, r11 ; pop rbp ; ret
0x000002000055bc4e : jnp 0x2000055bc7e ; mov rsp, r11 ; pop rbp ; ret
0x000002000055be74 : jnp 0x2000055bea5 ; mov rsp, r11 ; pop r14 ; ret
0x000002000055cc4c : jnp 0x2000055cc7c ; mov rsp, r11 ; pop rbp ; ret
0x000002000055d4be : jnp 0x2000055d4de ; mov rsp, r11 ; pop rbp ; ret
0x0000020000562184 : jnp 0x200005621ac ; mov rsp, r11 ; pop rbp ; ret
0x00000200005623fc : jnp 0x2000056242c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000563128 : jnp 0x20000563148 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000564b06 : jnp 0x20000564b26 ; mov rsp, r11 ; pop rbp ; ret
0x000002000056571f : jnp 0x2000056574f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000567353 : jnp 0x2000056737b ; mov rsp, r11 ; pop rbp ; ret
0x00000200005b0959 : jnp 0x200005b09c3 ; ret
0x00000200005c20be : jnp 0x200005c20b3 ; dec esp ; mov eax, 0x80000014 ; ret
0x00000200005f1cfa : jnp 0x200005f1d2a ; mov rsp, r11 ; pop rbp ; ret
0x00000200005f6ec1 : jnp 0x200005f6f25 ; fdiv st(7), st(0) ; call 0x2000021e377
0x0000020000601306 : jnp 0x2000060132e ; mov rsp, r11 ; pop rbp ; ret
0x000002000060467b : jnp 0x200006046ac ; mov rsp, r11 ; pop r14 ; ret
0x0000020000608742 : jnp 0x20000608772 ; mov rsp, r11 ; pop rbp ; ret
0x000002000061d904 : jnp 0x2000061d92d ; mov rsp, r11 ; pop r14 ; ret
0x000002000061fb03 : jnp 0x2000061fb23 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006208da : jnp 0x2000062090a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000622bb5 : jnp 0x20000622be5 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000624e79 : jnp 0x20000624ed7 ; ret
0x000002000062556d : jnp 0x20000625595 ; mov rsp, r11 ; pop rbp ; ret
0x000002000062c1e9 : jnp 0x2000062c21a ; mov rsp, r11 ; pop r14 ; ret
0x000002000062c313 : jnp 0x2000062c344 ; mov rsp, r11 ; pop r14 ; ret
0x000002000062d775 : jnp 0x2000062d7a5 ; mov rsp, r11 ; pop rbp ; ret
0x000002000062dd19 : jnp 0x2000062dd4a ; mov rsp, r11 ; pop r15 ; ret
0x000002000062dfe8 : jnp 0x2000062e010 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006312fd : jnp 0x2000063132d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000633315 : jnp 0x20000633306 ; or al, byte ptr [rax] ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000635802 : jnp 0x20000635832 ; mov rsp, r11 ; pop rbp ; ret
0x000002000063afba : jnp 0x2000063afea ; mov rsp, r11 ; pop rbp ; ret
0x000002000063d381 : jnp 0x2000063d384 ; sar bh, 0x8b ; ret
0x000002000063d4f3 : jnp 0x2000063d51b ; mov rsp, r11 ; pop rbp ; ret
0x000002000063e688 : jnp 0x2000063e6b0 ; mov rsp, r11 ; pop rbp ; ret
0x000002000063f087 : jnp 0x2000063f0af ; mov rsp, r11 ; pop rbp ; ret
0x000002000063f166 : jnp 0x2000063f196 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000641afe : jnp 0x20000641b2e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000649a71 : jnp 0x20000649aa1 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064a938 : jnp 0x2000064a961 ; mov rsp, r11 ; pop r14 ; ret
0x000002000064aa1e : jnp 0x2000064aa47 ; mov rsp, r11 ; pop r14 ; ret
0x000002000064c898 : jnp 0x2000064c8c8 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064d3c7 : jnp 0x2000064d3e7 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064d52a : jnp 0x2000064d54a ; mov rsp, r11 ; pop rbp ; ret
0x000002000064fcbe : jnp 0x2000064fcee ; mov rsp, r11 ; pop rbp ; ret
0x000002000064fdff : jnp 0x2000064fe27 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064ff07 : jnp 0x2000064ff2f ; mov rsp, r11 ; pop rbp ; ret
0x00000200006594f2 : jnp 0x2000065951b ; mov rsp, r11 ; pop r14 ; ret
0x000002000065cbec : jnp 0x2000065cc1c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000660036 : jnp 0x20000660030 ; ret
0x00000200006642f6 : jnp 0x20000664327 ; mov rsp, r11 ; pop r14 ; ret
0x000002000066bd5e : jnp 0x2000066bd8f ; mov rsp, r11 ; pop r14 ; ret
0x00000200006717d7 : jnp 0x20000671807 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000675063 : jnp 0x20000675083 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006753ad : jnp 0x200006753cd ; mov rsp, r11 ; pop rbp ; ret
0x0000020000676fe1 : jnp 0x20000677001 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006770c9 : jnp 0x200006770e9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067783c : jnp 0x20000677864 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000679c38 : jnp 0x20000679c58 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067d50d : jnp 0x2000067d53d ; mov rsp, r11 ; pop rbp ; ret
0x000002000067d65c : jnp 0x2000067d68c ; mov rsp, r11 ; pop rbp ; ret
0x000002000067d96e : jnp 0x2000067d996 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067dcc7 : jnp 0x2000067dce7 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067de77 : jnp 0x2000067de97 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067e05a : jnp 0x2000067e082 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067e2db : jnp 0x2000067e2fb ; mov rsp, r11 ; pop rbp ; ret
0x000002000067ecf1 : jnp 0x2000067ed11 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067ef49 : jnp 0x2000067ef69 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067f3c1 : jnp 0x2000067f3e1 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067f831 : jnp 0x2000067f851 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067f941 : jnp 0x2000067f961 ; mov rsp, r11 ; pop rbp ; ret
0x000002000068094e : jnp 0x20000680977 ; mov rsp, r11 ; pop r14 ; ret
0x00000200006820b0 : jnp 0x200006820d9 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000682481 : jnp 0x200006824b2 ; mov rsp, r11 ; pop r15 ; ret
0x00000200006832fb : jnp 0x2000068332b ; mov rsp, r11 ; pop rbp ; ret
0x000002000068fdb1 : jnp 0x2000068fde2 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000691380 : jnp 0x200006913b0 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000691f8d : jnp 0x20000691fb5 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000692178 : jnp 0x20000692198 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000695a29 : jnp 0x20000695a51 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000695b1b : jnp 0x20000695b4b ; mov rsp, r11 ; pop rbp ; ret
0x0000020000699ace : jnp 0x20000699aee ; mov rsp, r11 ; pop rbp ; ret
0x000002000069ac44 : jnp 0x2000069ac74 ; mov rsp, r11 ; pop rbp ; ret
0x000002000069b7df : jnp 0x2000069b807 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006a3f61 : jnp 0x200006a3f89 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006a49a2 : jnp 0x200006a49d2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006a8cf0 : jnp 0x200006a8d20 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006ac925 : jnp 0x200006ac94d ; mov rsp, r11 ; pop rbp ; ret
0x00000200006af3d8 : jnp 0x200006af401 ; mov rsp, r11 ; pop r14 ; ret
0x00000200006b1ffd : jnp 0x200006b202d ; mov rsp, r11 ; pop rbp ; ret
0x00000200006b5511 : jnp 0x200006b553a ; mov rsp, r11 ; pop r14 ; ret
0x00000200006bb708 : jnp 0x200006bb730 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006bca69 : jnp 0x200006bca9a ; mov rsp, r11 ; pop r14 ; ret
0x00000200006c3695 : jnp 0x200006c36bd ; mov rsp, r11 ; pop rbp ; ret
0x00000200006cd6c2 : jnp 0x200006cd6f3 ; mov rsp, r11 ; pop r14 ; ret
0x00000200006d4a6c : jnp 0x200006d4a9c ; mov rsp, r11 ; pop rbp ; ret
0x00000200006d598c : jnp 0x200006d59b4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006d7475 : jnp 0x200006d7495 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006d7ecb : jnp 0x200006d7eeb ; mov rsp, r11 ; pop rbp ; ret
0x00000200006dbf25 : jnp 0x200006dbf56 ; mov rsp, r11 ; pop r14 ; ret
0x00000200006dc024 : jnp 0x200006dc055 ; mov rsp, r11 ; pop r14 ; ret
0x00000200006dc108 : jnp 0x200006dc139 ; mov rsp, r11 ; pop r14 ; ret
0x00000200006dd1f1 : jnp 0x200006dd1e1 ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x00000200006e666f : jnp 0x200006e66a0 ; mov rsp, r11 ; pop r15 ; ret
0x00000200006e6b74 : jnp 0x200006e6ba5 ; mov rsp, r11 ; pop r14 ; ret
0x00000200006e6e6e : jnp 0x200006e6e96 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000701f7f : jnp 0x20000701faf ; mov rsp, r11 ; pop rbp ; ret
0x0000020000715253 : jnp 0x20000715284 ; mov rsp, r11 ; pop r14 ; ret
0x000002000079122a : jnp 0x2000079122c ; dec dword ptr [rax - 0x7f] ; ret
0x000002000079acf4 : jnp 0x2000079ad14 ; mov rsp, r11 ; pop rbp ; ret
0x000002000079e164 : jnp 0x2000079e184 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007a1392 : jnp 0x200007a13ba ; mov rsp, r11 ; pop rbp ; ret
0x00000200007a1852 : jnp 0x200007a187a ; mov rsp, r11 ; pop rbp ; ret
0x00000200007a2a12 : jnp 0x200007a2a32 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007a531b : jnp 0x200007a5343 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007a886d : jnp 0x200007a888d ; mov rsp, r11 ; pop rbp ; ret
0x00000200007ab68d : jnp 0x200007ab646 ; call qword ptr [rbx]
0x00000200007b0038 : jnp 0x200007b0060 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007b2471 : jnp 0x200007b24a2 ; mov rsp, r11 ; pop r14 ; ret
0x00000200007b2cbb : jnp 0x200007b2ceb ; mov rsp, r11 ; pop rbp ; ret
0x00000200007b9c07 : jnp 0x200007b9c2f ; mov rsp, r11 ; pop rbp ; ret
0x00000200007b9de1 : jnp 0x200007b9e01 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007ba186 : jnp 0x200007ba1ae ; mov rsp, r11 ; pop rbp ; ret
0x00000200007bd247 : jnp 0x200007bd278 ; mov rsp, r11 ; pop r12 ; ret
0x00000200007cf1ce : jnp 0x200007cf1f6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000237a7 : jnp 0x2002b433ff9 ; ret
0x000002000001fa09 : jns 0x2000001fa1b ; add byte ptr [rax + rdx - 0x75], dh ; add dword ptr [rbx], esp ; ret 0xc22b
0x0000020000042713 : jns 0x20000042718 ; ret
0x0000020000045947 : jns 0x20000045961 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000050f79 : jns 0x20000050f8b ; or rax, 0x20 ; mov qword ptr [rcx], rax ; ret
0x000002000005b2f8 : jns 0x2000005b2bd ; jmp 0x2000005b2d8
0x00000200000723b9 : jns 0x200000723ce ; pop rdi ; ret
0x000002000007c5f2 : jns 0x2000007c61c ; add byte ptr [rsi + rax + 0x48], dh ; mov eax, ecx ; ret
0x0000020000082201 : jns 0x2000008220e ; add rsp, 0x58 ; ret
0x0000020000092b18 : jns 0x20000092b1d ; ret
0x00000200000bf300 : jns 0x200000bf2fc ; dec dword ptr [rax - 0x7f] ; ret
0x00000200000d50f3 : jns 0x200000d512c ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x00000200000f6af4 : jns 0x200000f6b38 ; mov byte ptr [rdi], al ; inc rdi ; jmp 0x200000f6ac8
0x00000200000f7e16 : jns 0x200000f7e10 ; ret 0xf01
0x00000200000f89b7 : jns 0x200000f895b ; and al, byte ptr [rax] ; seta dl ; mov al, dl ; ret
0x0000020000116083 : jns 0x20000116096 ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x000002000013161d : jns 0x200001315bb ; call 0x200004fd884
0x000002000013d1f8 : jns 0x2000013d203 ; or eax, 0xffffffff ; ret
0x000002000014c277 : jns 0x2000014c2b2 ; add rsp, 0x138 ; ret
0x000002000014edc6 : jns 0x2000014ee01 ; add rsp, 0x138 ; ret
0x000002000015055c : jns 0x20000150597 ; add rsp, 0x138 ; ret
0x0000020000150778 : jns 0x200001507b3 ; add rsp, 0x138 ; ret
0x0000020000153e58 : jns 0x20000153e93 ; add rsp, 0x138 ; ret
0x0000020000155651 : jns 0x2000015568c ; add rsp, 0x138 ; ret
0x0000020000156303 : jns 0x2000015630d ; add byte ptr [rax], al ; sub r11, rax ; jmp r11
0x000002000016f0e8 : jns 0x2000016f11f ; in eax, dx ; dec dword ptr [rax + 0x63] ; ret
0x00000200001aa704 : jns 0x200001aa6ce ; hlt ; dec dword ptr [rax - 0x73] ; or dil, dil ; ret
0x00000200001bd5dc : jns 0x200001bd633 ; mov ecx, dword ptr [rip + 0x13c26c] ; call r9
0x00000200001c97fd : jns 0x200001c980b ; and qword ptr [rcx + 0x70], 0 ; ret
0x00000200001d023a : jns 0x200001d024d ; add al, 0xf ; xchg eax, esp ; ret 0xdfeb
0x00000200001d20c6 : jns 0x200001d20d5 ; mov eax, 0xc0000022 ; ret
0x00000200001d4637 : jns 0x200001d462b ; or eax, 0xffffffff ; ret
0x00000200001f5483 : jns 0x200001f54c2 ; in al, dx ; inc dword ptr [rbp - 0x74ba8a40] ; ret 0x43eb
0x0000020000211777 : jns 0x2000021176b ; mov eax, edx ; ret
0x0000020000211777 : jns 0x2000021176c ; mov eax, edx ; ret
0x0000020000231581 : jns 0x20000231598 ; add dword ptr [rbp + 5], esi ; movzx eax, word ptr [rcx + 0x28] ; ret
0x0000020000244702 : jns 0x200002446c0 ; mov rax, rdx ; jmp 0x2000024470f
0x0000020000244aad : jns 0x20000244a6b ; mov rax, rdx ; jmp 0x20000244aba
0x00000200003fb9db : jns 0x200003fb9b9 ; sar bh, 0x8b ; ret
0x0000020000408da6 : jns 0x20000408de9 ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x000002000042a550 : jns 0x2000042a558 ; push qword ptr [rdx] ; fild dword ptr [rdi + rcx + 0x20] ; ret 0xf45
0x0000020000445775 : jns 0x2000044577b ; add al, al ; ret
0x0000020000445803 : jns 0x2000044587f ; ret
0x0000020000447d32 : jns 0x20000447d3f ; add rsp, 0x28 ; ret
0x000002000044950b : jns 0x200004494b1 ; ret 0x48ff
0x00000200004530fb : jns 0x20000453099 ; cli ; inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x4589
0x0000020000453393 : jns 0x200004533a2 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000478f89 : jns 0x20000478f94 ; emms ; add ebx, eax ; xor al, al ; ret
0x00000200004ae2a3 : jns 0x200004ae31b ; ret
0x00000200004ae2a3 : jns 0x200004ae320 ; ret
0x00000200004b3082 : jns 0x200004b3088 ; add al, al ; ret
0x00000200004b313d : jns 0x200004b3143 ; add al, al ; ret
0x00000200004b3195 : jns 0x200004b319b ; add al, al ; ret
0x00000200004b88c0 : jns 0x200004b8913 ; mov ecx, dword ptr [rsp + 0x48] ; call 0x200000e7e79
0x00000200004cbbf0 : jns 0x200004cbc41 ; mov ecx, esi ; call 0x200000e7e76
0x00000200004e20fd : jns 0x200004e20ee ; insd dword ptr [rdi], dx ; pop rbp ; sar bh, 0x8b ; ret
0x00000200004e4381 : jns 0x200004e4307 ; jmp 0x200005e0654
0x00000200004eeeb7 : jns 0x200004eee8b ; ret 0x8bff
0x00000200004f67e9 : jns 0x200004f683c ; add byte ptr [rbp + 1], dh ; ret
0x000002000051b6cb : jns 0x2000051b702 ; mov rcx, qword ptr [rbp - 0x19] ; call 0x20000148079
0x000002000052f9d1 : jns 0x2000052f9e4 ; mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000539223 : jns 0x200005391b4 ; fdivp st(7) ; add rsp, 0x28 ; ret
0x0000020000544b6a : jns 0x20000544a8a ; jmp 0x200005f0e40
0x0000020000585793 : jns 0x2000058577f ; push rsi ; ret
0x00000200005a79af : jns 0x200005a799f ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005a79f4 : jns 0x200005a79e4 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005a7a18 : jns 0x200005a7a08 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005d382e : jns 0x200005d384c ; jmp 0x200004afaba
0x00000200005d90b1 : jns 0x200005d9064 ; call qword ptr [rax - 0x113d7917]
0x000002000061bf4c : jns 0x2000061bf37 ; ret
0x0000020000621183 : jns 0x20000621145 ; ret 0xf0ff
0x000002000062131d : jns 0x20000621320 ; ret 0x3b41
0x0000020000623a72 : jns 0x20000623a36 ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000020000627a95 : jns 0x20000627a6e ; dec dword ptr [rcx + 0x58b1042] ; ret
0x0000020000692203 : jns 0x2000069225e ; lodsb al, byte ptr [rsi] ; jmp qword ptr [rcx]
0x00000200006c5b2c : jns 0x200006c5bac ; test byte ptr [rbp - 0x27fcfda1], 0x8b ; ret
0x00000200006c6028 : jns 0x200006c6009 ; ret
0x00000200006c6064 : jns 0x200006c6045 ; ret
0x00000200006c609c : jns 0x200006c6083 ; mov eax, 1 ; ret
0x00000200006cd397 : jns 0x200006cd3b2 ; jmp 0x200006cd3aa
0x00000200006cd423 : jns 0x200006cd45b ; jmp 0x200006cd436
0x00000200006d2dc3 : jns 0x200006d2e14 ; ret 0x48ff
0x00000200006e34b8 : jns 0x200006e347c ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x51], 0x81 ; call qword ptr [rdx]
0x000002000071569f : jns 0x200007156a7 ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000079fe46 : jns 0x2000079fe61 ; dec dword ptr [rdi] ; test byte ptr [rdi + 0x59], bl ; add al, byte ptr [rax] ; ret
0x00000200007b973b : jns 0x200007b96d6 ; mov dh, 0xff ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000006586 : jo 0x200000065d2 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000069f2 : jo 0x20000006a14 ; call 0x200000070e8
0x000002000000ca8c : jo 0x2000000cadc ; mov ecx, eax ; call 0x20000408d36
0x000002000001062c : jo 0x2000001067f ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000010a12 : jo 0x20000010a77 ; pop rsi ; pop rbp ; ret
0x000002000001f89e : jo 0x2000001f8f1 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000001f921 : jo 0x2000001f95a ; add byte ptr [rdi + 0x18], dh ; add rsp, 0x28 ; ret
0x0000020000024e8d : jo 0x20000024e95 ; add rdx, 0x58 ; call 0x200000a1158
0x0000020000026f7f : jo 0x20000026fe4 ; pop rbx ; pop rbp ; ret
0x000002000002d9ff : jo 0x2000002da4f ; add esp, 0x60 ; pop rdi ; ret
0x000002000002de8c : jo 0x2000002dec0 ; add byte ptr [rax], al ; ret
0x000002000002e4f6 : jo 0x2000002e4e5 ; ret 0x8b44
0x0000020000036296 : jo 0x200000362e6 ; add esp, 0x50 ; pop rbp ; ret
0x000002000003c75e : jo 0x2000003c767 ; add byte ptr [rax], al ; and al, 1 ; ret
0x000002000003e52d : jo 0x2000003e535 ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000003f8e2 : jo 0x2000003f943 ; ret
0x0000020000040048 : jo 0x200000400ad ; pop rsi ; pop rbp ; ret
0x0000020000040277 : jo 0x200000402c8 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000044daf : jo 0x20000044db7 ; mov qword ptr [rcx + 0x68], rax ; ret
0x0000020000046547 : jo 0x20000046565 ; add byte ptr [rbx + rcx*4 + 0x73], cl ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000047a94 : jo 0x20000047a27 ; mov byte ptr [rcx + 0xf], 0x45 ; ret
0x0000020000051443 : jo 0x200000514a4 ; ret
0x00000200000514d1 : jo 0x20000051517 ; pop rbp ; ret
0x000002000005428f : jo 0x200000542df ; add esp, 0x50 ; pop rbp ; ret
0x0000020000054eba : jo 0x20000054f0a ; add esp, 0x50 ; pop rdi ; ret
0x000002000006d24f : jo 0x2000006d29e ; add esp, 0x38 ; ret
0x000002000006e3de : jo 0x2000006e440 ; ret
0x0000020000078283 : jo 0x20000078289 ; add dh, dh ; ret 0xf91
0x000002000007a833 : jo 0x2000007a82f ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000007b00a : jo 0x2000007b03e ; add byte ptr [rcx], al ; add rsp, 0x38 ; ret
0x0000020000081dad : jo 0x20000081dfd ; add esp, 0x50 ; pop rdi ; ret
0x0000020000085515 : jo 0x20000085578 ; ret
0x000002000008c1aa : jo 0x2000008c1b8 ; add al, al ; je 0x2000008c1bb ; mov al, 1 ; ret
0x000002000008f079 : jo 0x2000008f0de ; pop rsi ; pop rbp ; ret
0x000002000009bcb0 : jo 0x2000009bcca ; add byte ptr [rax - 0x73], cl ; sub r8b, r13b ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000002000009d120 : jo 0x2000009d0af ; ret 0xc148
0x00000200000a9894 : jo 0x200000a9881 ; ret
0x00000200000bfdbc : jo 0x200000bfdf5 ; add byte ptr es:[rax - 0x75], cl ; ret
0x00000200000c68f2 : jo 0x200000c693c ; pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000d50fa : jo 0x200000d5159 ; ret
0x00000200000d5143 : jo 0x200000d51a2 ; ret
0x00000200000de117 : jo 0x200000de16a ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000e2243 : jo 0x200000e22a2 ; ret
0x00000200000e83f3 : jo 0x200000e843d ; pop rsi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000e8635 : jo 0x200000e867f ; pop rsi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000e8668 : jo 0x200000e86b2 ; pop rsi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000eeba9 : jo 0x200000eebfd ; lea eax, dword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x00000200000fb748 : jo 0x200000fb799 ; add esp, 0x50 ; pop r14 ; ret
0x000002000010144b : jo 0x2000010149b ; add esp, 0x60 ; pop rdi ; ret
0x000002000010467a : jo 0x200001046c9 ; xor esp, esp ; jmp 0x20000104533
0x0000020000108a01 : jo 0x20000108990 ; ret
0x000002000010c8bd : jo 0x2000010c8d1 ; xchg eax, edi ; ret
0x000002000010cfb4 : jo 0x2000010d007 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000010d16d : jo 0x2000010d1bd ; add esp, 0x60 ; pop rdi ; ret
0x0000020000114259 : jo 0x200001142be ; pop rbx ; pop rbp ; ret
0x0000020000114a10 : jo 0x20000114a60 ; add esp, 0x50 ; pop rdi ; ret
0x000002000011afdf : jo 0x2000011b042 ; ret
0x000002000011f137 : jo 0x2000011f19f ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011fa34 : jo 0x2000011fa93 ; ret
0x000002000012067c : jo 0x200001206cc ; add esp, 0x60 ; pop rdi ; ret
0x0000020000123b34 : jo 0x20000123b73 ; ret 0xe76
0x0000020000128084 : jo 0x2000012808b ; ret 0xc803
0x000002000012940d : jo 0x20000129472 ; pop rbx ; pop rbp ; ret
0x000002000012d6ff : jo 0x2000012d74f ; test eax, eax ; jne 0x2000012d70c ; ret
0x000002000012d6fe : jo 0x2000012d750 ; test eax, eax ; jne 0x2000012d70d ; ret
0x000002000012da6e : jo 0x2000012dacf ; ret
0x00000200001319d4 : jo 0x20000131a26 ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000136973 : jo 0x20000136984 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001373c6 : jo 0x20000137417 ; mov dword ptr [rbx - 0x28], eax ; call r10
0x000002000013aac4 : jo 0x2000013aa7f ; sbb eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000013b07f : jo 0x2000013b0cf ; add esp, 0x60 ; pop rdi ; ret
0x000002000013ba67 : jo 0x2000013bab7 ; add esp, 0x60 ; pop rbp ; ret
0x000002000013be60 : jo 0x2000013bdf0 ; ror byte ptr [rcx + 0xf], 0x45 ; fimul word ptr [rax - 0x75] ; ret
0x000002000013bf6c : jo 0x2000013befc ; ror byte ptr [rcx + 0xf], 0x45 ; fimul word ptr [rax - 0x75] ; ret
0x000002000013c80e : jo 0x2000013c85d ; add esp, 0x58 ; ret
0x000002000013c8ea : jo 0x2000013c939 ; add esp, 0x58 ; ret
0x0000020000146271 : jo 0x200001462b6 ; call rbx
0x000002000014b951 : jo 0x2000014b96b ; add byte ptr [rcx + 0x72], al ; stmxcsr dword ptr [rcx + 0x74] ; ret
0x0000020000195827 : jo 0x20000195833 ; int1 ; dec dword ptr [rcx - 0x75] ; ret 0x48f0
0x0000020000196326 : jo 0x2000019634c ; int1 ; inc dword ptr [rbp - 0x75] ; ret
0x00000200001b6420 : jo 0x200001b6483 ; ret
0x00000200001ba342 : jo 0x200001ba2d0 ; ret
0x00000200001bbddc : jo 0x200001bbdbc ; adc eax, dword ptr [rax] ; call rax
0x00000200001bc874 : jo 0x200001bc8c4 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001bd7dc : jo 0x200001bd7a3 ; adc eax, dword ptr [rax] ; call r9
0x00000200001bdf9b : jo 0x200001bdf2a ; ret 0x8b44
0x00000200001bedc4 : jo 0x200001beddc ; mov rax, qword ptr [rip + 0x13aa83] ; call rax
0x00000200001bfb32 : jo 0x200001bfb82 ; add esp, 0x50 ; pop rdi ; ret
0x00000200001c00fc : jo 0x200001c014f ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200001c5dfd : jo 0x200001c5e4d ; add esp, 0x50 ; pop rsi ; ret
0x00000200001c8c70 : jo 0x200001c8c8c ; add bh, al ; ret
0x00000200001c9802 : jo 0x200001c9806 ; ret
0x00000200001cb6fe : jo 0x200001cb75f ; ret
0x00000200001cda04 : jo 0x200001cda65 ; ret
0x00000200001d1175 : jo 0x200001d11d8 ; ret
0x00000200001d1adb : jo 0x200001d1b3a ; ret
0x00000200001dcd84 : jo 0x200001dcde5 ; ret
0x00000200001dd314 : jo 0x200001dd375 ; ret
0x00000200001f0fb5 : jo 0x200001f0fd6 ; add bh, bh ; ret
0x00000200001f0fb4 : jo 0x200001f0fd7 ; add bh, bh ; ret
0x00000200001f2447 : jo 0x200001f24a8 ; ret
0x00000200001f4b80 : jo 0x200001f4bd0 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001f9de2 : jo 0x200001f9d78 ; push rax ; add al, byte ptr [rdi + rcx + 0x22] ; ret 0x4c88
0x00000200001fd898 : jo 0x200001fd884 ; ret 0xe5a1
0x00000200001fec4b : jo 0x200001fec9c ; add esp, 0x50 ; pop r14 ; ret
0x00000200001ff340 : jo 0x200001ff38b ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200002025f3 : jo 0x20000202645 ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000204a35 : jo 0x20000204a9a ; pop rsi ; pop rbp ; ret
0x00000200002052b3 : jo 0x20000205314 ; ret
0x0000020000205376 : jo 0x200002053db ; pop rsi ; pop rbp ; ret
0x0000020000205866 : jo 0x200002058c7 ; ret
0x0000020000205fc7 : jo 0x2000020602c ; pop rbx ; pop rbp ; ret
0x00000200002060cf : jo 0x20000206130 ; ret
0x0000020000215253 : jo 0x200002152b2 ; ret
0x0000020000215749 : jo 0x200002157aa ; ret
0x0000020000215915 : jo 0x20000215976 ; ret
0x0000020000216e72 : jo 0x20000216ed5 ; ret
0x0000020000218a7f : jo 0x20000218ac4 ; call rcx
0x0000020000218acc : jo 0x20000218b05 ; leave ; call r9
0x0000020000218b46 : jo 0x20000218b8b ; call rcx
0x000002000021bb64 : jo 0x2000021bbae ; pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000229386 : jo 0x200002293ce ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000022d1bc : jo 0x2000022d21d ; ret
0x0000020000231327 : jo 0x200002312b6 ; ret 0x8b49
0x00000200002368ad : jo 0x20000236834 ; ret
0x000002000023756a : jo 0x200002375cd ; ret
0x000002000023a218 : jo 0x2000023a1e8 ; and dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200002495b6 : jo 0x20000249603 ; mov eax, edx ; jmp 0x200002495c1
0x000002000024ea7a : jo 0x2000024eadd ; ret
0x000002000024eb1c : jo 0x2000024eb7f ; ret
0x00000200003c8152 : jo 0x200003c814f ; push rsi ; ret
0x00000200003d0183 : jo 0x200003d0189 ; add bh, bh ; ret 0x8348
0x00000200003d23f0 : jo 0x200003d23d1 ; ret
0x00000200003d3231 : jo 0x200003d3281 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003d7fd1 : jo 0x200003d7f64 ; fld1 ; mov bh, 0x70 ; ret
0x00000200003d81bb : jo 0x200003d821e ; ret
0x00000200003d931f : jo 0x200003d936f ; add esp, 0x50 ; pop rdi ; ret
0x00000200003dc1dc : jo 0x200003dc1d5 ; dec dword ptr [rax + 0x3b] ; ret
0x00000200003e21a4 : jo 0x200003e21f4 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003e76d0 : jo 0x200003e7720 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003e9f4a : jo 0x200003e9f0f ; add byte ptr ds:[rax], al ; add byte ptr [rsi + 0x3b], ah ; ret
0x00000200003eadcb : jo 0x200003eae2a ; ret
0x00000200003f0411 : jo 0x200003f0461 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003f24e0 : jo 0x200003f246f ; ret
0x00000200003f2e4e : jo 0x200003f2e9e ; add esp, 0x50 ; pop rdi ; ret
0x00000200003f3970 : jo 0x200003f39c0 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003f937c : jo 0x200003f93cf ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, r11 ; call rax
0x00000200003fa491 : jo 0x200003fa420 ; ret
0x00000200003fb2d2 : jo 0x200003fb331 ; ret
0x00000200003fc304 : jo 0x200003fc355 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000401cd0 : jo 0x20000401d31 ; ret
0x00000200004020fd : jo 0x2000040214d ; add esp, 0x60 ; pop rdi ; ret
0x0000020000402684 : jo 0x200004026e7 ; ret
0x0000020000407843 : jo 0x20000407896 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000407a42 : jo 0x20000407aa7 ; pop rsi ; pop rbx ; ret
0x0000020000407aa7 : jo 0x20000407b0c ; pop rsi ; pop rbx ; ret
0x0000020000408d07 : jo 0x20000408c95 ; ret
0x0000020000411dd6 : jo 0x20000411d65 ; ret 0xb841
0x0000020000412839 : jo 0x20000412889 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000416e5e : jo 0x20000416ea9 ; pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000042135a : jo 0x200004213aa ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000421359 : jo 0x200004213ab ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000422e54 : jo 0x20000422ea4 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004230e6 : jo 0x200004230ef ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000423af5 : jo 0x20000423b46 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000428f81 : jo 0x20000428f8c ; add byte ptr [rax], al ; mov rcx, qword ptr [rdi + 8] ; call rax
0x000002000042d175 : jo 0x2000042d1d8 ; ret
0x000002000042efe0 : jo 0x2000042f04a ; call 0x2000005c2c5
0x000002000042faeb : jo 0x2000042fb3b ; add esp, 0x50 ; pop rbp ; ret
0x0000020000433783 : jo 0x200004337b2 ; ret
0x0000020000433841 : jo 0x20000433893 ; mov dword ptr [rdx], ecx ; add rsp, 0x68 ; ret
0x00000200004365a7 : jo 0x200004365f7 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000436a7c : jo 0x20000436ac8 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000437639 : jo 0x2000043769a ; ret
0x0000020000438ca9 : jo 0x20000438cf9 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000439377 : jo 0x200004393ca ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000043ad6e : jo 0x2000043adbf ; add esp, 0x50 ; pop r14 ; ret
0x000002000043ae00 : jo 0x2000043ae28 ; ret
0x000002000043bf50 : jo 0x2000043bfb5 ; pop rsi ; pop rbx ; ret
0x000002000043c434 : jo 0x2000043c484 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000440ffc : jo 0x20000441009 ; add eax, dword ptr [rax] ; add rsp, 0x58 ; ret
0x00000200004416ae : jo 0x2000044170f ; ret
0x0000020000446b89 : jo 0x20000446bee ; pop rsi ; pop rbp ; ret
0x0000020000447e3f : jo 0x20000447e89 ; pop rsp ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000448d9d : jo 0x20000448de8 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000044a548 : jo 0x2000044a5ab ; ret
0x000002000044edb7 : jo 0x2000044ee08 ; add esp, 0x50 ; pop r14 ; ret
0x000002000044f9a3 : jo 0x2000044fa06 ; ret
0x0000020000450476 : jo 0x2000045049c ; and al, ch ; ret 0xdfd5
0x00000200004511cc : jo 0x200004511db ; call 0x2000007d085
0x000002000045177d : jo 0x200004517dc ; call 0x2000024da44
0x0000020000453431 : jo 0x20000453494 ; ret
0x0000020000454cc6 : jo 0x20000454d29 ; ret
0x0000020000454dc8 : jo 0x20000454e18 ; add esp, 0x50 ; pop rbp ; ret
0x000002000045584e : jo 0x2000045589e ; add esp, 0x50 ; pop rbp ; ret
0x0000020000456a08 : jo 0x20000456a67 ; ret
0x00000200004582a3 : jo 0x200004582f3 ; add esp, 0x50 ; pop rdi ; ret
0x000002000045a882 : jo 0x2000045a8e1 ; ret
0x000002000045d390 : jo 0x2000045d31f ; ret
0x000002000045d916 : jo 0x2000045d966 ; add esp, 0x50 ; pop rdi ; ret
0x000002000045dd18 : jo 0x2000045dca7 ; ret
0x0000020000460043 : jo 0x20000460031 ; out -0x5a, eax ; ret
0x0000020000460042 : jo 0x20000460032 ; out -0x5a, eax ; ret
0x00000200004662e8 : jo 0x2000046636b ; ret
0x000002000046d364 : jo 0x2000046d3b4 ; add esp, 0x60 ; pop rdi ; ret
0x00000200004710e9 : jo 0x20000471131 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000472668 : jo 0x200004726b8 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004728a6 : jo 0x20000472908 ; ret
0x0000020000478183 : jo 0x20000478198 ; mov dh, 0x80 ; ret 6
0x0000020000481c25 : jo 0x20000481c84 ; ret
0x000002000048d93f : jo 0x2000048d99e ; ret
0x000002000048f028 : jo 0x2000048f014 ; ret 0xbd30
0x00000200004912eb : jo 0x2000049127d ; fimul word ptr [rax - 1] ; ret
0x00000200004994d6 : jo 0x200004994f9 ; adc byte ptr [rax - 0x7d], cl ; call 0x1ffc384dd09
0x000002000049a06a : jo 0x20000499ffc ; push rdi ; adc al, 0xf6 ; ret 0xf01
0x000002000049ea61 : jo 0x2000049eaad ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004a006c : jo 0x200004a00bf ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004a39ca : jo 0x200004a3a2d ; ret
0x00000200004a9c5a : jo 0x200004a9ca8 ; mov ecx, ebp ; call rdi
0x00000200004a9cc0 : jo 0x200004a9d13 ; lea ecx, dword ptr [rdi - 0x470] ; call r15
0x00000200004abb01 : jo 0x200004abb64 ; ret
0x00000200004ac5b0 : jo 0x200004ac600 ; add esp, 0x20 ; pop rbx ; ret
0x00000200004ac5af : jo 0x200004ac601 ; add esp, 0x20 ; pop rbx ; ret
0x00000200004b25d0 : jo 0x200004b255f ; ret
0x00000200004b3922 : jo 0x200004b3987 ; pop rsi ; pop rbp ; ret
0x00000200004b7e68 : jo 0x200004b7ebb ; add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200004bab21 : jo 0x200004bab71 ; add esp, 0x20 ; pop rbx ; ret
0x00000200004bab20 : jo 0x200004bab72 ; add esp, 0x20 ; pop rbx ; ret
0x00000200004c10e8 : jo 0x200004c10f8 ; add byte ptr [rax], al ; call 0x200000e8067
0x00000200004c14a9 : jo 0x200004c14b9 ; add byte ptr [rax], al ; call 0x200000e8067
0x00000200004c14d8 : jo 0x200004c152a ; add esp, 0x50 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004c3e23 : jo 0x200004c3e69 ; pop rbp ; ret
0x00000200004c3ef7 : jo 0x200004c3f3d ; pop rbp ; ret
0x00000200004c4809 : jo 0x200004c4815 ; add byte ptr [rax], al ; xor edx, edx ; call 0x200000eef39
0x00000200004c4829 : jo 0x200004c4833 ; add byte ptr [rax], al ; call 0x200000f0307
0x00000200004c47fc : jo 0x200004c4836 ; ret 0xe9ff
0x00000200004c4ec8 : jo 0x200004c4eb6 ; push rdi ; ret
0x00000200004ca092 : jo 0x200004ca0de ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004cf567 : jo 0x200004cf4f0 ; ret 0x2e75
0x00000200004e329a : jo 0x200004e32a6 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004e3551 : jo 0x200004e35a1 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004ecc5e : jo 0x200004eccc1 ; ret
0x00000200004ed9ad : jo 0x200004eda10 ; ret
0x00000200004eea48 : jo 0x200004eeac2 ; movsxd rsi, esi ; ret 0xf04
0x00000200004f050f : jo 0x200004f0509 ; ret 0xf03
0x00000200004f2f2a : jo 0x200004f2f7c ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004f75dc : jo 0x200004f7641 ; pop rsi ; pop rbp ; ret
0x00000200004f8925 : jo 0x200004f8970 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000500d88 : jo 0x20000500de7 ; ret
0x00000200005028f8 : jo 0x20000502905 ; mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x200005028cb
0x00000200005029ba : jo 0x20000502a0d ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000050660a : jo 0x2000050666d ; ret
0x00000200005098b3 : jo 0x20000509905 ; cmp dword ptr [rcx], ecx ; jne 0x200005098c4 ; xor eax, eax ; ret
0x00000200005099be : jo 0x20000509a1d ; ret
0x000002000050be0c : jo 0x2000050bd9b ; ret
0x000002000050e78f : jo 0x2000050e7e0 ; add esp, 0x50 ; pop r14 ; ret
0x000002000050eff0 : jo 0x2000050effb ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200005104a6 : jo 0x200005104f7 ; xor ecx, esp ; call 0x2000013ac77
0x0000020000513939 : jo 0x2000051399e ; pop rsi ; pop rbp ; ret
0x000002000051395a : jo 0x200005139aa ; ret
0x00000200005149a4 : jo 0x20000514a09 ; pop rsi ; pop rbp ; ret
0x00000200005156eb : jo 0x200005156d9 ; lahf ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48ff
0x00000200005179f2 : jo 0x20000517a53 ; ret
0x0000020000517aaa : jo 0x20000517b0b ; ret
0x00000200005187b8 : jo 0x20000518808 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000519d96 : jo 0x20000519df5 ; ret
0x000002000051a4fd : jo 0x2000051a547 ; pop rdi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000051c0a0 : jo 0x2000051c02f ; ret
0x000002000051c745 : jo 0x2000051c796 ; add esp, 0x50 ; pop r14 ; ret
0x000002000051cc7a : jo 0x2000051ccf6 ; or dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051e523 : jo 0x2000051e56e ; pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005205f2 : jo 0x20000520581 ; ret
0x00000200005218cc : jo 0x2000052192c ; ret
0x00000200005259eb : jo 0x20000525a4e ; ret
0x000002000052b972 : jo 0x2000052b9d7 ; pop rsi ; pop rbp ; ret
0x000002000052fc8c : jo 0x2000052fcf1 ; pop rsi ; pop rbp ; ret
0x00000200005300e6 : jo 0x20000530075 ; ret 0x8b49
0x0000020000530414 : jo 0x2000053041c ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000530dd6 : jo 0x20000530e35 ; ret
0x0000020000538c5c : jo 0x20000538cac ; add esp, 0x60 ; pop rbp ; ret
0x00000200005437b0 : jo 0x2000054373f ; ret
0x0000020000544f09 : jo 0x20000544f59 ; add esp, 0x50 ; pop rbp ; ret
0x000002000054524a : jo 0x2000054529a ; add esp, 0x50 ; pop rdi ; ret
0x000002000054a8f8 : jo 0x2000054a94b ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000054ce81 : jo 0x2000054ced4 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000550d62 : jo 0x20000550dc5 ; mov rcx, rbx ; call 0x2000024d007
0x00000200005524c5 : jo 0x20000552515 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000552bac : jo 0x20000552bdf ; stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000553253 : jo 0x200005532a6 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000558252 : jo 0x200005582b1 ; ret
0x0000020000559f05 : jo 0x20000559f50 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000055a9d6 : jo 0x2000055a9e0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000055bc41 : jo 0x2000055bbd0 ; ret
0x000002000055be63 : jo 0x2000055bdf2 ; ret
0x000002000055e6bc : jo 0x2000055e6b6 ; ret 0x4801
0x000002000055ebf5 : jo 0x2000055ec48 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000562b9c : jo 0x20000562bff ; ret
0x000002000056319c : jo 0x200005631fb ; ret
0x00000200005654cf : jo 0x2000056552e ; ret
0x000002000056577e : jo 0x200005657ce ; add esp, 0x60 ; pop rdi ; ret
0x0000020000566a7b : jo 0x20000566ade ; ret
0x0000020000566ffb : jo 0x2000056704b ; add esp, 0x60 ; pop rbp ; ret
0x00000200005684a0 : jo 0x20000568503 ; ret
0x00000200005685d2 : jo 0x20000568622 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000568c84 : jo 0x20000568cd4 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000569569 : jo 0x200005695bc ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000057ca8f : jo 0x2000057caf0 ; ret
0x00000200005852da : jo 0x200005852c6 ; push rsi ; ret
0x0000020000598cb7 : jo 0x20000598cce ; add byte ptr [rax], al ; call 0x200004d4f36
0x000002000059daa2 : jo 0x2000059da93 ; push -0x74001198 ; ret
0x00000200005c6b91 : jo 0x200005c6b9b ; add byte ptr [rax], al ; mov cl, 0x10 ; call rax
0x00000200005c6c20 : jo 0x200005c6c2a ; add byte ptr [rax], al ; mov cl, 0x10 ; call rax
0x00000200005c6fc8 : jo 0x200005c6fd2 ; add byte ptr [rax], al ; mov cl, 0x10 ; call rax
0x00000200005d0f93 : jo 0x200005d0f4b ; dec dword ptr [rax - 0x75] ; ret
0x00000200005ec955 : jo 0x200005ec944 ; int1 ; push rsi ; ret 0xf0c
0x00000200005f67ab : jo 0x200005f6797 ; ret
0x00000200005fa7d6 : jo 0x200005fa75d ; ret 0x8b04
0x0000020000600db5 : jo 0x20000600e16 ; ret
0x0000020000600fe0 : jo 0x20000601041 ; ret
0x0000020000601eed : jo 0x20000601f4e ; ret
0x0000020000603562 : jo 0x2000060356d ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000605cfa : jo 0x20000605c89 ; ret
0x00000200006081e4 : jo 0x20000608237 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000609129 : jo 0x20000609171 ; pop rsi ; pop rsi ; pop rbp ; ret
0x000002000060b6b7 : jo 0x2000060b71c ; pop rsi ; pop rbp ; ret
0x000002000060e805 : jo 0x2000060e80f ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000060ece6 : jo 0x2000060ed38 ; add eax, 0x58 ; add rax, rcx ; ret
0x000002000060ecf8 : jo 0x2000060ed4a ; add eax, dword ptr [rcx + 0x138] ; ret
0x0000020000610289 : jo 0x200006102e8 ; ret
0x0000020000616c84 : jo 0x20000616c87 ; ret 0x5489
0x00000200006179fe : jo 0x2000061798d ; ret
0x00000200006180ed : jo 0x2000061807c ; ret
0x00000200006187a7 : jo 0x20000618736 ; ret
0x0000020000618e37 : jo 0x20000618e9c ; pop rsi ; pop rbp ; ret
0x000002000061f39c : jo 0x2000061f3ed ; mov ecx, edi ; call 0x2000024d007
0x000002000061f39b : jo 0x2000061f3ee ; mov ecx, edi ; call 0x2000024d008
0x000002000061f5e8 : jo 0x2000061f63a ; mov esi, ecx ; call 0x2000024da47
0x000002000061f5e7 : jo 0x2000061f63b ; mov esi, ecx ; call 0x2000024da48
0x000002000061f670 : jo 0x2000061f6c1 ; mov ecx, edi ; call 0x2000024d007
0x000002000061f66f : jo 0x2000061f6c2 ; mov ecx, edi ; call 0x2000024d008
0x000002000061f6cf : jo 0x2000061f720 ; mov ecx, edi ; call 0x2000024d007
0x000002000061f6ce : jo 0x2000061f721 ; mov ecx, edi ; call 0x2000024d008
0x000002000061f883 : jo 0x2000061f871 ; ja 0x2000061f862 ; ret 0x48ff
0x000002000061f882 : jo 0x2000061f872 ; ja 0x2000061f863 ; ret 0x48ff
0x0000020000620091 : jo 0x200006200e4 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000620264 : jo 0x200006202b5 ; mov ecx, edi ; call 0x2000024d007
0x000002000062109d : jo 0x20000621116 ; call 0x2000024d005
0x000002000062109c : jo 0x20000621117 ; call 0x2000024d006
0x000002000062109b : jo 0x20000621118 ; call 0x2000024d007
0x0000020000621173 : jo 0x200006211ec ; call 0x2000024d005
0x0000020000621172 : jo 0x200006211ed ; call 0x2000024d006
0x0000020000621171 : jo 0x200006211ee ; call 0x2000024d007
0x000002000062117d : jo 0x200006211f9 ; mov rcx, rdi ; call 0x2000024d008
0x000002000062117c : jo 0x200006211fa ; mov rcx, rdi ; call 0x2000024d009
0x0000020000622abb : jo 0x20000622b0b ; add esp, 0x50 ; pop rdi ; ret
0x00000200006274ec : jo 0x20000627551 ; pop rsi ; pop rbp ; ret
0x0000020000628283 : jo 0x200006282d3 ; add esp, 0x60 ; pop rdi ; ret
0x000002000062a0b4 : jo 0x2000062a0a2 ; xchg byte ptr [rcx], bh ; ret 0x48ff
0x000002000062a4f5 : jo 0x2000062a546 ; mov ecx, ebx ; call 0x2000024d007
0x000002000062a69c : jo 0x2000062a6ed ; mov ecx, edi ; call 0x2000024d007
0x000002000062b0f0 : jo 0x2000062b0de ; or bl, byte ptr [rdi] ; ret 0x48ff
0x000002000062b388 : jo 0x2000062b376 ; jb 0x2000062b3ac ; ret 0x48ff
0x000002000062c279 : jo 0x2000062c2ca ; add esp, 0x50 ; pop r14 ; ret
0x000002000062d8d5 : jo 0x2000062d8e0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000062e41c : jo 0x2000062e46c ; add esp, 0x50 ; pop rdi ; ret
0x00000200006309a3 : jo 0x20000630a06 ; ret
0x0000020000634ffe : jo 0x2000063505f ; ret
0x000002000063d0fd : jo 0x2000063d08c ; ret
0x000002000063d1d4 : jo 0x2000063d233 ; ret
0x000002000063f07a : jo 0x2000063f009 ; ret
0x000002000064163e : jo 0x200006415cd ; ret
0x000002000064534b : jo 0x200006452da ; ret
0x000002000064629c : jo 0x20000646301 ; pop rsi ; pop rbp ; ret
0x0000020000646dbc : jo 0x20000646dfb ; ret
0x0000020000648b21 : jo 0x20000648aaf ; ret
0x000002000064a92b : jo 0x2000064a8ba ; ret
0x000002000064ae92 : jo 0x2000064ae21 ; ret
0x000002000064f245 : jo 0x2000064f295 ; add esp, 0x50 ; pop rdi ; ret
0x000002000065179f : jo 0x200006517c6 ; and al, ch ; cdq ; ret 0xffbf
0x0000020000652ea2 : jo 0x20000652eaa ; add byte ptr [rax], al ; pop rsi ; ret
0x0000020000656295 : jo 0x200006562e7 ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000065851d : jo 0x2000065856e ; add esp, 0x50 ; pop r14 ; ret
0x000002000065becc : jo 0x2000065bf1c ; add esp, 0x50 ; pop rdi ; ret
0x000002000065c95f : jo 0x2000065c9c0 ; ret
0x0000020000665af3 : jo 0x20000665b43 ; add esp, 0x60 ; pop rdi ; ret
0x000002000066c0c9 : jo 0x2000066c058 ; ret
0x000002000066c0c8 : jo 0x2000066c059 ; ret
0x000002000066e9e0 : jo 0x2000066e9d3 ; insb byte ptr [rdi], dx ; movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax - 0x75] ; retf ; call rdi
0x000002000066ec20 : jo 0x2000066ec70 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000671a90 : jo 0x20000671af3 ; ret
0x0000020000673cd7 : jo 0x20000673d3c ; pop rsi ; pop rbp ; ret
0x0000020000673e30 : jo 0x20000673e93 ; ret
0x0000020000673ee7 : jo 0x20000673f4a ; ret
0x0000020000674710 : jo 0x20000674771 ; ret
0x0000020000674e1d : jo 0x20000674e7c ; ret
0x0000020000675124 : jo 0x20000675187 ; ret
0x00000200006751db : jo 0x2000067523e ; ret
0x0000020000675ca7 : jo 0x20000675ca1 ; ret
0x0000020000675f6a : jo 0x20000675fbd ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000676aa6 : jo 0x20000676b09 ; ret
0x00000200006779cf : jo 0x20000677a1f ; add esp, 0x60 ; pop rdi ; ret
0x000002000067ff6a : jo 0x2000067ffcb ; ret
0x00000200006833ff : jo 0x2000068344f ; add esp, 0x60 ; pop rdi ; ret
0x000002000068510d : jo 0x2000068515d ; add esp, 0x50 ; pop rdi ; ret
0x000002000068882e : jo 0x2000068887e ; add esp, 0x60 ; pop rdi ; ret
0x000002000068fc43 : jo 0x2000068fc94 ; mov dword ptr [rsp + 0x20], eax ; call qword ptr [r10]
0x000002000068fda0 : jo 0x2000068fd2f ; ret
0x00000200006975fd : jo 0x20000697650 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000069a1c7 : jo 0x2000069a217 ; add esp, 0x60 ; pop rbp ; ret
0x000002000069b055 : jo 0x2000069afe4 ; ret
0x000002000069b94c : jo 0x2000069b99c ; add esp, 0x50 ; pop rdi ; ret
0x000002000069cb61 : jo 0x2000069cbb4 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000069d24d : jo 0x2000069d298 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000069f0e9 : jo 0x2000069f14a ; ret
0x000002000069f25a : jo 0x2000069f2bb ; ret
0x00000200006a2d02 : jo 0x200006a2d65 ; ret
0x00000200006a3a72 : jo 0x200006a3ad1 ; ret
0x00000200006a660a : jo 0x200006a666b ; ret
0x00000200006a6a4a : jo 0x200006a6a9a ; add esp, 0x50 ; pop rdi ; ret
0x00000200006a83ad : jo 0x200006a83fd ; add esp, 0x60 ; pop rdi ; ret
0x00000200006ab393 : jo 0x200006ab322 ; ret
0x00000200006ac600 : jo 0x200006ac648 ; pop rdi ; pop rdi ; pop rsi ; ret
0x00000200006acfa8 : jo 0x200006acffb ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006af075 : jo 0x200006af0d4 ; ret
0x00000200006b6341 : jo 0x200006b6332 ; mov ecx, 0x8bffb96c ; ret
0x00000200006bb38d : jo 0x200006bb3d8 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006c3063 : jo 0x200006c30ae ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006c634f : jo 0x200006c62de ; ret
0x00000200006c83c4 : jo 0x200006c8353 ; ret
0x00000200006c998e : jo 0x200006c99dd ; mov dword ptr [rcx + 0x60], eax ; mov qword ptr [rcx + 0x68], rdx ; ret
0x00000200006cd308 : jo 0x200006cd35b ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006d2e3e : jo 0x200006d2e8e ; add esp, 0x50 ; pop rdi ; ret
0x00000200006d39d9 : jo 0x200006d396b ; push rdx ; sbb al, 0x8b ; ret 0x25
0x00000200006d8666 : jo 0x200006d86b6 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006d886e : jo 0x200006d88be ; add esp, 0x50 ; pop rdi ; ret
0x00000200006da290 : jo 0x200006da2dc ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006da623 : jo 0x200006da66f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006db4f9 : jo 0x200006db55c ; ret
0x00000200006dbc4b : jo 0x200006dbbda ; ret
0x00000200006dd9b7 : jo 0x200006dda0a ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006dda39 : jo 0x200006dda89 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006ddfb3 : jo 0x200006de006 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006e0969 : jo 0x200006e09bc ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006e3b9c : jo 0x200006e3bec ; add esp, 0x50 ; pop rdi ; ret
0x00000200006e3cb4 : jo 0x200006e3d04 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006e3e47 : jo 0x200006e3eac ; pop rsi ; pop rbp ; ret
0x00000200006e5fc0 : jo 0x200006e5f4f ; ret
0x00000200006e870d : jo 0x200006e8760 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006f3144 : jo 0x200006f31a5 ; ret
0x00000200006f6b5f : jo 0x200006f6aee ; add dword ptr [rbx], ebp ; ret
0x00000200006f6bb7 : jo 0x200006f6b46 ; add dword ptr [rbx], ebp ; ret
0x0000020000701a41 : jo 0x20000701aa0 ; ret
0x0000020000703dd9 : jo 0x20000703e3a ; ret
0x0000020000703ea0 : jo 0x20000703eff ; ret
0x0000020000706103 : jo 0x2000070610c ; add byte ptr [rcx - 1], al ; ret
0x000002000070e047 : jo 0x2000070e08f ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000070e98b : jo 0x2000070e9db ; xor ecx, esp ; call 0x2000013ac76
0x0000020000711b5b : jo 0x20000711bbe ; ret
0x0000020000712c9c : jo 0x20000712cbf ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000071abe9 : jo 0x2000071ac4c ; ret
0x0000020000721f78 : jo 0x20000721f64 ; ret 0xb2ba
0x0000020000726090 : jo 0x200007260e3 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000729719 : jo 0x2000072976c ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200007916b1 : jo 0x20000791716 ; pop rsi ; pop rbp ; ret
0x0000020000792f1f : jo 0x20000792f80 ; ret
0x0000020000793a3b : jo 0x200007939c2 ; ret
0x00000200007999e1 : jo 0x20000799a44 ; ret
0x000002000079cb34 : jo 0x2000079cb37 ; ret 0x8b41
0x000002000079f2d2 : jo 0x2000079f322 ; add esp, 0x50 ; pop rdi ; ret
0x00000200007a56c9 : jo 0x200007a5658 ; ret
0x00000200007a8c9c : jo 0x200007a8cee ; mov ecx, esi ; call 0x200003d241b
0x00000200007ac560 : jo 0x200007ac5c1 ; ret
0x00000200007ae16c : jo 0x200007ae191 ; ret 0x44ff
0x00000200007b19b7 : jo 0x200007b1a18 ; ret
0x00000200007b5365 : jo 0x200007b53b5 ; add esp, 0x50 ; pop rdi ; ret
0x00000200007b5441 : jo 0x200007b54a2 ; ret
0x00000200007b5513 : jo 0x200007b5576 ; ret
0x00000200007b74b7 : jo 0x200007b751a ; ret
0x00000200007ba474 : jo 0x200007ba4c4 ; add esp, 0x60 ; pop rdi ; ret
0x00000200007bbfd1 : jo 0x200007bc021 ; add esp, 0x60 ; pop rdi ; ret
0x00000200007bc6c5 : jo 0x200007bc724 ; ret
0x00000200007c5efb : jo 0x200007c5e8d ; call qword ptr [rax - 0x2323d17]
0x00000200007cf8ae : jo 0x200007cf910 ; ret
0x00000200007d0142 : jo 0x200007d01a3 ; ret
0x00000200007d0d54 : jo 0x200007d0daa ; mov rcx, rbx ; call 0x2000024d008
0x00000200007d0f70 : jo 0x200007d0eff ; ret
0x00000200007d2261 : jo 0x200007d22b1 ; add esp, 0x60 ; pop rdi ; ret
0x00000200007d588d : jo 0x200007d581c ; ret 0x8b49
0x000002000003818c : jp 0x20000038195 ; add dh, dh ; ret
0x000002000003818b : jp 0x20000038196 ; add dh, dh ; ret
0x000002000004ed36 : jp 0x2000004ecc3 ; add r14b, sil ; ret
0x0000020000094541 : jp 0x20000094546 ; ret
0x0000020000094f82 : jp 0x20000094f87 ; ret
0x00000200000965e7 : jp 0x200000965ec ; ret
0x00000200000b139e : jp 0x200000b13b5 ; add byte ptr [rbp + 0x33], al ; sal dh, cl ; ret 0xf1e
0x00000200000b143b : jp 0x200000b1452 ; add byte ptr [rbp + 0x33], al ; sal dh, cl ; ret 0xf1e
0x000002000013bd52 : jp 0x2000013bd75 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000013fc1e : jp 0x2000013fc28 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000013fece : jp 0x2000013fed8 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000157b2a : jp 0x20000157aef ; sbb al, byte ptr [rax] ; ret
0x000002000015c532 : jp 0x2000015c557 ; dec dword ptr [rax - 0x77] ; jmp 0x2000015c505
0x000002000015e170 : jp 0x2000015e196 ; add byte ptr [rbp + 0x3b], al ; ret 0x177c
0x000002000018876d : jp 0x20000188761 ; push rsi ; ret 0x741e
0x0000020000188794 : jp 0x20000188789 ; inc dword ptr [rbp - 0x75] ; ret
0x00000200001a94cd : jp 0x200001a94cb ; dec dword ptr [rax - 0x75] ; shr eax, cl ; cwde ; ret 0xffe7
0x00000200001d0348 : jp 0x200001d0348 ; dec dword ptr [rcx + 0xf] ; ret
0x00000200001d6e6e : jp 0x200001d6e66 ; inc dword ptr [rbp - 0x76] ; ret 0x8b48
0x000002000022a0c9 : jp 0x2000022a069 ; or eax, 0x8b480000 ; ret
0x00000200003d6fe3 : jp 0x200003d6fe9 ; dec dword ptr [rax + 0x3b] ; ret
0x00000200004664cc : jp 0x200004664c7 ; ret
0x0000020000475345 : jp 0x2000047535e ; xchg dword ptr [rax - 0x7cffeb0b], esp ; ret 0xebe0
0x00000200004a99c2 : jp 0x200004a997f ; ret
0x00000200004de844 : jp 0x200004de7d3 ; ret
0x00000200005091f2 : jp 0x20000509210 ; ret
0x000002000051ee12 : jp 0x2000051ee23 ; ret 0x4cff
0x000002000057ee0e : jp 0x2000057ee31 ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x000002000060df82 : jp 0x2000060df76 ; ret
0x000002000060df82 : jp 0x2000060df79 ; ret
0x0000020000664b0f : jp 0x20000664b09 ; ret
0x00000200006a41f2 : jp 0x200006a4266 ; test eax, 0xc48348ff ; pop rax ; ret
0x00000200006bcfe2 : jp 0x200006bcfae ; ret
0x00000200006f5446 : jp 0x200006f54af ; ret 0xe9ff
0x000002000070e662 : jp 0x2000070e627 ; push rsi ; ret 0x7410
0x0000020000784860 : jp 0x20000784816 ; dec dword ptr [rbx - 0x7cb74fab] ; ret
0x00000200007ab5e7 : jp 0x200007ab5a4 ; inc dword ptr [rsi] ; call 0x20000157886
0x00000200007cf4e6 : jp 0x200007cf51d ; ret
0x00000200007d0dd6 : jp 0x200007d0e57 ; ret 0x8bff
0x00000200000024c2 : jrcxz 0x2000000250b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000028bf : jrcxz 0x20000002908 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000036b2 : jrcxz 0x20000003713 ; ret
0x0000020000003816 : jrcxz 0x2000000385c ; pop rsi ; ret
0x0000020000003a76 : jrcxz 0x20000003ac2 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000003cc2 : jrcxz 0x20000003d25 ; ret
0x00000200000043ae : jrcxz 0x200000043f8 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000005b1f : jrcxz 0x20000005b68 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000066f8 : jrcxz 0x20000006744 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000006f6c : jrcxz 0x20000006fb2 ; pop rsi ; ret
0x0000020000007c06 : jrcxz 0x20000007c69 ; ret
0x00000200000090b4 : jrcxz 0x20000009117 ; ret
0x000002000000aee6 : jrcxz 0x2000000af30 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000000be58 : jrcxz 0x2000000beb9 ; ret
0x000002000000dd54 : jrcxz 0x2000000dda0 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000000e40e : jrcxz 0x2000000e471 ; ret
0x000002000000ec5a : jrcxz 0x2000000eca2 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000000f086 : jrcxz 0x2000000f0d0 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000000f375 : jrcxz 0x2000000f3be ; pop rdi ; pop r14 ; pop rcx ; ret
0x000002000000fee4 : jrcxz 0x2000000ff45 ; ret
0x00000200000131fa : jrcxz 0x20000013244 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000017b40 : jrcxz 0x20000017b8a ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000001a321 : jrcxz 0x2000001a384 ; ret
0x000002000001afee : jrcxz 0x2000001b03a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000001f502 : jrcxz 0x2000001f565 ; ret
0x0000020000021844 : jrcxz 0x20000021895 ; mov ebx, dword ptr [rsp + 0x10] ; pop rdi ; ret
0x00000200000242cb : jrcxz 0x2000002432e ; ret
0x0000020000027cb9 : jrcxz 0x20000027d02 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000002b02d : jrcxz 0x2000002b090 ; ret
0x000002000002b4bf : jrcxz 0x2000002b522 ; ret
0x000002000002b657 : jrcxz 0x2000002b6a0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000002d225 : jrcxz 0x2000002d26f ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000002d711 : jrcxz 0x2000002d759 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000002dbb4 : jrcxz 0x2000002dbfd ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000003002e : jrcxz 0x20000030076 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000030537 : jrcxz 0x20000030583 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000030861 : jrcxz 0x200000308aa ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000030ead : jrcxz 0x20000030f10 ; ret
0x0000020000031a8c : jrcxz 0x20000031aed ; ret
0x00000200000328b1 : jrcxz 0x200000328f9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000034369 : jrcxz 0x200000343ca ; ret
0x0000020000034829 : jrcxz 0x20000034873 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000034e1f : jrcxz 0x20000034e68 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000037a85 : jrcxz 0x20000037acf ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000003836d : jrcxz 0x200000383b5 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000384df : jrcxz 0x20000038529 ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000038ff7 : jrcxz 0x20000039040 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000392da : jrcxz 0x20000039324 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000039dab : jrcxz 0x20000039df4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000003a924 : jrcxz 0x2000003a96c ; pop rdi ; pop rdi ; pop rsi ; ret
0x000002000003aa97 : jrcxz 0x2000003aafa ; ret
0x000002000003b46b : jrcxz 0x2000003b4b7 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000003c84c : jrcxz 0x2000003c895 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000003dc0e : jrcxz 0x2000003dc71 ; ret
0x000002000003dd48 : jrcxz 0x2000003dd94 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000003e375 : jrcxz 0x2000003e3bd ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000003f709 : jrcxz 0x2000003f76c ; ret
0x00000200000408dd : jrcxz 0x20000040926 ; pop rsi ; pop r13 ; pop rdi ; ret
0x0000020000040a32 : jrcxz 0x20000040a93 ; ret
0x0000020000040c68 : jrcxz 0x20000040cb0 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000040d19 : jrcxz 0x20000040d7a ; ret
0x0000020000041546 : jrcxz 0x2000004158f ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000041e77 : jrcxz 0x20000041e71 ; dec dword ptr [rcx + 0x6fc] ; ret
0x0000020000042bdc : jrcxz 0x20000042c3f ; ret
0x0000020000045a87 : jrcxz 0x20000045aea ; ret
0x000002000004db48 : jrcxz 0x2000004db90 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000004defb : jrcxz 0x2000004df5e ; ret
0x00000200000503c5 : jrcxz 0x20000050411 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000005135a : jrcxz 0x200000513a3 ; pop rsi ; pop r13 ; pop rdi ; ret
0x00000200000517d3 : jrcxz 0x20000051834 ; ret
0x00000200000566e2 : jrcxz 0x20000056743 ; ret
0x000002000005682e : jrcxz 0x2000005688f ; ret
0x000002000005c41c : jrcxz 0x2000005c47f ; ret
0x0000020000074061 : jrcxz 0x200000740ab ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000074e82 : jrcxz 0x20000074ee5 ; ret
0x00000200000794b4 : jrcxz 0x200000794fc ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000079ce2 : jrcxz 0x20000079d2e ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000007d4c2 : jrcxz 0x2000007d50e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000007ea84 : jrcxz 0x2000007eacd ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000007f278 : jrcxz 0x2000007f207 ; ret
0x0000020000085b52 : jrcxz 0x20000085bb5 ; ret
0x000002000008606f : jrcxz 0x200000860d0 ; ret
0x0000020000087740 : jrcxz 0x20000087789 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000089541 : jrcxz 0x200000895a4 ; ret
0x000002000008d4f7 : jrcxz 0x2000008d53f ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000090360 : jrcxz 0x200000903a9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000093481 : jrcxz 0x200000934c7 ; pop rsi ; ret
0x00000200000a7bd6 : jrcxz 0x200000a7beb ; add byte ptr [rcx + 0x23], cl ; ret
0x00000200000a7bfc : jrcxz 0x200000a7c10 ; add bh, bh ; ret 0x8b48
0x00000200000bbb65 : jrcxz 0x200000bbbc6 ; ret
0x00000200000bcda8 : jrcxz 0x200000bcdf1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000c411a : jrcxz 0x200000c4166 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000c74c8 : jrcxz 0x200000c74be ; cmovs ecx, dword ptr [rbx - 0x74b797ae] ; ret 0x2349
0x00000200000d6605 : jrcxz 0x200000d6651 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000d7a6c : jrcxz 0x200000d7ab8 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000dc963 : jrcxz 0x200000dc9ad ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200000e5095 : jrcxz 0x200000e50e1 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000f36d1 : jrcxz 0x200000f3734 ; ret
0x00000200000f37fc : jrcxz 0x200000f3846 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200000f3c34 : jrcxz 0x200000f3c97 ; ret
0x00000200000f555a : jrcxz 0x200000f55a2 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000f7ab1 : jrcxz 0x200000f7b00 ; add esp, 0x28 ; ret
0x00000200000f8dae : jrcxz 0x200000f8e11 ; ret
0x00000200000f8e3d : jrcxz 0x200000f8e85 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200000f8f89 : jrcxz 0x200000f8fec ; ret
0x00000200000f9080 : jrcxz 0x200000f90e3 ; ret
0x00000200000fabc6 : jrcxz 0x200000fac0e ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000fb0d6 : jrcxz 0x200000fb137 ; ret
0x00000200000fc537 : jrcxz 0x200000fc57f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000fc93e : jrcxz 0x200000fc98a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000fccf4 : jrcxz 0x200000fcd40 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000fd763 : jrcxz 0x200000fd7c4 ; ret
0x00000200000fdefe : jrcxz 0x200000fdf48 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200000fe3a0 : jrcxz 0x200000fe3ec ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000100c20 : jrcxz 0x20000100c69 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000101609 : jrcxz 0x2000010166a ; ret
0x0000020000101cee : jrcxz 0x20000101d37 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001034eb : jrcxz 0x2000010354e ; ret
0x0000020000108eb0 : jrcxz 0x20000108ef9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000010932b : jrcxz 0x20000109375 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000010d544 : jrcxz 0x2000010d58d ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000010eafc : jrcxz 0x2000010eb45 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000010ec35 : jrcxz 0x2000010ec81 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000010ed66 : jrcxz 0x2000010edb2 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000110c05 : jrcxz 0x20000110c4e ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000111d53 : jrcxz 0x20000111db6 ; ret
0x00000200001129b8 : jrcxz 0x20000112a01 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000112e11 : jrcxz 0x20000112e72 ; ret
0x0000020000113ea9 : jrcxz 0x20000113ef2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000113fa0 : jrcxz 0x20000114003 ; ret
0x0000020000115feb : jrcxz 0x2000011604c ; ret
0x00000200001199d7 : jrcxz 0x20000119a23 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000011a169 : jrcxz 0x2000011a1b2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011a8ab : jrcxz 0x2000011a90c ; ret
0x000002000011ad4d : jrcxz 0x2000011adae ; ret
0x000002000011ae71 : jrcxz 0x2000011aeb9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011b690 : jrcxz 0x2000011b6f1 ; ret
0x000002000011bc89 : jrcxz 0x2000011bcec ; ret
0x000002000011c47e : jrcxz 0x2000011c4c6 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000011c954 : jrcxz 0x2000011c9b5 ; ret
0x000002000011dede : jrcxz 0x2000011df41 ; ret
0x000002000011e2eb : jrcxz 0x2000011e34c ; ret
0x000002000011e4e1 : jrcxz 0x2000011e542 ; ret
0x000002000011e58b : jrcxz 0x2000011e5d4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011ed14 : jrcxz 0x2000011ed75 ; ret
0x0000020000120544 : jrcxz 0x200001205a5 ; ret
0x0000020000120c50 : jrcxz 0x20000120cb1 ; ret
0x0000020000120de8 : jrcxz 0x20000120e31 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000121061 : jrcxz 0x200001210a9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001217d4 : jrcxz 0x2000012181d ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000121d28 : jrcxz 0x20000121d74 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000012307e : jrcxz 0x200001230c6 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001244d3 : jrcxz 0x2000012451c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001245b3 : jrcxz 0x200001245fc ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001267d2 : jrcxz 0x20000126835 ; ret
0x000002000012c6b8 : jrcxz 0x2000012c703 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000012d27c : jrcxz 0x2000012d2df ; ret
0x000002000012d6e6 : jrcxz 0x2000012d72f ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000012dd9c : jrcxz 0x2000012ddfd ; ret
0x000002000012e09c : jrcxz 0x2000012e0e6 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000012f447 : jrcxz 0x2000012f493 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000012fcf3 : jrcxz 0x2000012fd3c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001304a1 : jrcxz 0x200001304e9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001308eb : jrcxz 0x20000130937 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000013096e : jrcxz 0x200001309b6 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000130e1f : jrcxz 0x20000130e65 ; pop rsi ; ret
0x0000020000131db1 : jrcxz 0x20000131e14 ; ret
0x0000020000132fb9 : jrcxz 0x20000133002 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000135142 : jrcxz 0x200001351a5 ; ret
0x0000020000135291 : jrcxz 0x200001352f4 ; ret
0x000002000013589a : jrcxz 0x200001358fb ; ret
0x00000200001364f9 : jrcxz 0x2000013655a ; ret
0x0000020000136cf6 : jrcxz 0x20000136d42 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000137317 : jrcxz 0x20000137360 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000013744a : jrcxz 0x200001374ab ; ret
0x00000200001382f0 : jrcxz 0x2000013833c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000139773 : jrcxz 0x200001397d4 ; ret
0x000002000013a0ca : jrcxz 0x2000013a112 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000013a9bd : jrcxz 0x2000013aa1e ; ret
0x000002000013abdb : jrcxz 0x2000013ac23 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000013b3ab : jrcxz 0x2000013b3fb ; mov ebx, dword ptr [rsp + 8] ; ret
0x000002000013bcaf : jrcxz 0x2000013bcfd ; mov eax, edx ; ret
0x000002000013bcaf : jrcxz 0x2000013bcfe ; mov eax, edx ; ret
0x0000020000142183 : jrcxz 0x200001421e4 ; ret
0x0000020000142e69 : jrcxz 0x20000142eb5 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000143dab : jrcxz 0x20000143d3a ; ret
0x0000020000144499 : jrcxz 0x20000144424 ; inc byte ptr [rsi + 0xf] ; ret
0x0000020000144498 : jrcxz 0x20000144425 ; inc byte ptr [rsi + 0xf] ; ret
0x0000020000144844 : jrcxz 0x200001448a7 ; ret
0x000002000014554a : jrcxz 0x20000145596 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000015131d : jrcxz 0x2000015136b ; mov eax, edx ; pop rbx ; ret
0x000002000015131d : jrcxz 0x2000015136d ; mov eax, edx ; pop rbx ; ret
0x0000020000151969 : jrcxz 0x2000015196f ; add byte ptr [rax], al ; ret
0x00000200001786f3 : jrcxz 0x2000017873c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001ad161 : jrcxz 0x200001ad1aa ; pop rsi ; pop r13 ; pop rdi ; ret
0x00000200001aea83 : jrcxz 0x200001aeacc ; pop rsi ; pop r13 ; pop rdi ; ret
0x00000200001af932 : jrcxz 0x200001af97e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001b4d1b : jrcxz 0x200001b4d64 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001b4ffd : jrcxz 0x200001b5049 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001b5347 : jrcxz 0x200001b538f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001b6be3 : jrcxz 0x200001b6c2c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001b730d : jrcxz 0x200001b736e ; ret
0x00000200001b9be1 : jrcxz 0x200001b9c29 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001ba865 : jrcxz 0x200001ba876 ; in eax, -1 ; add rsp, 0x58 ; ret
0x00000200001bbd55 : jrcxz 0x200001bbda1 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001bc058 : jrcxz 0x200001bc0bb ; ret
0x00000200001bc381 : jrcxz 0x200001bc3ca ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001bca97 : jrcxz 0x200001bcae0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001bcbe4 : jrcxz 0x200001bcc2d ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001bce00 : jrcxz 0x200001bce48 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001bd84a : jrcxz 0x200001bd893 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001bde89 : jrcxz 0x200001bdeec ; ret
0x00000200001bdf76 : jrcxz 0x200001bdfc2 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001be186 : jrcxz 0x200001be1cf ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001be815 : jrcxz 0x200001be85e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001bee08 : jrcxz 0x200001bee6b ; ret
0x00000200001bf138 : jrcxz 0x200001bf19b ; ret
0x00000200001bf3e4 : jrcxz 0x200001bf42c ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001bf571 : jrcxz 0x200001bf5d2 ; ret
0x00000200001bfc50 : jrcxz 0x200001bfcb3 ; ret
0x00000200001c02cd : jrcxz 0x200001c0317 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200001c0c6f : jrcxz 0x200001c0cb8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001c1b6f : jrcxz 0x200001c1bd0 ; ret
0x00000200001c1d0f : jrcxz 0x200001c1d70 ; ret
0x00000200001c1fcb : jrcxz 0x200001c202c ; ret
0x00000200001c2437 : jrcxz 0x200001c243a ; ret 0x894b
0x00000200001c2676 : jrcxz 0x200001c26be ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001c278f : jrcxz 0x200001c27d7 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001c29b2 : jrcxz 0x200001c2a15 ; ret
0x00000200001c2aaf : jrcxz 0x200001c2b12 ; ret
0x00000200001c2bf3 : jrcxz 0x200001c2c3f ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001c2dc9 : jrcxz 0x200001c2e15 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001c3015 : jrcxz 0x200001c3061 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001c31d6 : jrcxz 0x200001c3239 ; ret
0x00000200001c3851 : jrcxz 0x200001c38b4 ; ret
0x00000200001c3f75 : jrcxz 0x200001c3fd8 ; ret
0x00000200001c4059 : jrcxz 0x200001c409f ; pop rsi ; ret
0x00000200001c4295 : jrcxz 0x200001c42f8 ; ret
0x00000200001c5fbe : jrcxz 0x200001c6007 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001c94f9 : jrcxz 0x200001c94c7 ; adc eax, dword ptr [rax] ; call 0x200000e5726
0x00000200001ca9ab : jrcxz 0x200001ca9f3 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001cb4e9 : jrcxz 0x200001cb535 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200001cc43e : jrcxz 0x200001cc487 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001cc8c5 : jrcxz 0x200001cc926 ; ret
0x00000200001cd796 : jrcxz 0x200001cd7f9 ; ret
0x00000200001ce8bc : jrcxz 0x200001ce902 ; pop rdi ; ret
0x00000200001ced93 : jrcxz 0x200001ceddc ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001cf1f6 : jrcxz 0x200001cf257 ; ret
0x00000200001cf643 : jrcxz 0x200001cf6a4 ; ret
0x00000200001cfde1 : jrcxz 0x200001cfe2a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001d05ea : jrcxz 0x200001d064b ; ret
0x00000200001d07a2 : jrcxz 0x200001d0803 ; ret
0x00000200001d0a7e : jrcxz 0x200001d0adf ; ret
0x00000200001d5931 : jrcxz 0x200001d5992 ; ret
0x00000200001d5c50 : jrcxz 0x200001d5c99 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001d6721 : jrcxz 0x200001d6756 ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x00000200001d74c6 : jrcxz 0x200001d7527 ; ret
0x00000200001d79be : jrcxz 0x200001d7a0a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001d8916 : jrcxz 0x200001d8962 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001d8ba1 : jrcxz 0x200001d8be9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001d97c9 : jrcxz 0x200001d982a ; ret
0x00000200001d9a4f : jrcxz 0x200001d9ab0 ; ret
0x00000200001d9bd2 : jrcxz 0x200001d9c1e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001dbf5a : jrcxz 0x200001dbf61 ; add rsp, 0x28 ; ret
0x00000200001dbf59 : jrcxz 0x200001dbf62 ; add rsp, 0x28 ; ret
0x00000200001dc30b : jrcxz 0x200001dc36e ; ret
0x00000200001dfb45 : jrcxz 0x200001dfb91 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200001e017e : jrcxz 0x200001e01ca ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001e0261 : jrcxz 0x200001e02c4 ; ret
0x00000200001e0543 : jrcxz 0x200001e05a6 ; ret
0x00000200001e187b : jrcxz 0x200001e18de ; ret
0x00000200001e36b4 : jrcxz 0x200001e36fc ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001e49a4 : jrcxz 0x200001e49f0 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200001e68f4 : jrcxz 0x200001e6955 ; ret
0x00000200001e7869 : jrcxz 0x200001e7892 ; lock dec dword ptr [rax - 0x7d] ; ret
0x00000200001eb45e : jrcxz 0x200001eb4a7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001ec28a : jrcxz 0x200001ec2d2 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001ecebc : jrcxz 0x200001ecf1d ; ret
0x00000200001f185a : jrcxz 0x200001f18a3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001f227b : jrcxz 0x200001f22dc ; ret
0x00000200001f23b7 : jrcxz 0x200001f2418 ; ret
0x00000200001f2f8d : jrcxz 0x200001f2f81 ; dec dword ptr [rax - 0x7f] ; ret
0x00000200001f4cd5 : jrcxz 0x200001f4d36 ; ret
0x00000200001f54e5 : jrcxz 0x200001f552e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001f8c07 : jrcxz 0x200001f8c56 ; mov eax, ecx ; ret
0x00000200001fa7b3 : jrcxz 0x200001fa7fc ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001fb6a2 : jrcxz 0x200001fb703 ; ret
0x00000200001fb8f6 : jrcxz 0x200001fb93f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001fbb74 : jrcxz 0x200001fbbba ; pop rsi ; ret
0x00000200001fc358 : jrcxz 0x200001fc3a0 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001fc98c : jrcxz 0x200001fc9d5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001fcae5 : jrcxz 0x200001fcb31 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001fd30b : jrcxz 0x200001fd36c ; ret
0x00000200001fd542 : jrcxz 0x200001fd58b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001fd920 : jrcxz 0x200001fd983 ; ret
0x00000200001fdb76 : jrcxz 0x200001fdbd9 ; ret
0x00000200001fe192 : jrcxz 0x200001fe1db ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001fe312 : jrcxz 0x200001fe35e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001fe7cf : jrcxz 0x200001fe832 ; ret
0x00000200001fe872 : jrcxz 0x200001fe8ba ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000201ac0 : jrcxz 0x20000201b10 ; add esp, 0x20 ; pop rbx ; ret
0x00000200002048d6 : jrcxz 0x2000020491c ; pop rsi ; ret
0x0000020000204d77 : jrcxz 0x20000204dd8 ; ret
0x0000020000204fb0 : jrcxz 0x20000205011 ; ret
0x00000200002051f9 : jrcxz 0x2000020525a ; ret
0x00000200002054a0 : jrcxz 0x200002054e8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000205595 : jrcxz 0x200002055dd ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000020566c : jrcxz 0x200002056cd ; ret
0x0000020000205731 : jrcxz 0x20000205792 ; ret
0x0000020000205e5e : jrcxz 0x20000205ebf ; ret
0x0000020000206816 : jrcxz 0x2000020685e ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000206a9c : jrcxz 0x20000206afd ; ret
0x0000020000206c48 : jrcxz 0x20000206ca9 ; ret
0x000002000020712f : jrcxz 0x2000020717b ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000208378 : jrcxz 0x200002083d9 ; ret
0x00000200002084a5 : jrcxz 0x20000208506 ; ret
0x0000020000208579 : jrcxz 0x200002085da ; ret
0x0000020000208793 : jrcxz 0x200002087f4 ; ret
0x000002000020896b : jrcxz 0x200002089ce ; ret
0x0000020000208e47 : jrcxz 0x20000208ea8 ; ret
0x0000020000209126 : jrcxz 0x2000020916e ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000209276 : jrcxz 0x200002092d7 ; ret
0x00000200002093dd : jrcxz 0x20000209425 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200002094bf : jrcxz 0x20000209520 ; ret
0x0000020000209658 : jrcxz 0x200002096a4 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000209903 : jrcxz 0x2000020994f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000209dd8 : jrcxz 0x20000209e3b ; ret
0x000002000020b05e : jrcxz 0x2000020b0a7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000020b384 : jrcxz 0x2000020b3e5 ; ret
0x000002000020c8bd : jrcxz 0x2000020c905 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000020c9df : jrcxz 0x2000020ca25 ; pop rsi ; ret
0x000002000020cabb : jrcxz 0x2000020cb1c ; ret
0x000002000020e686 : jrcxz 0x2000020e6e9 ; ret
0x0000020000212323 : jrcxz 0x20000212386 ; ret
0x00000200002151d9 : jrcxz 0x2000021523c ; ret
0x00000200002152fa : jrcxz 0x2000021535d ; ret
0x00000200002153a2 : jrcxz 0x20000215405 ; ret
0x0000020000216cb4 : jrcxz 0x20000216cfe ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000216f08 : jrcxz 0x20000216f69 ; ret
0x0000020000219121 : jrcxz 0x20000219182 ; ret
0x000002000021921c : jrcxz 0x2000021927d ; ret
0x000002000021c1b6 : jrcxz 0x2000021c202 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000021d611 : jrcxz 0x2000021d65d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000021dec2 : jrcxz 0x2000021df0e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000021e466 : jrcxz 0x2000021e4c7 ; ret
0x000002000021ed49 : jrcxz 0x2000021edaa ; ret
0x000002000021f22e : jrcxz 0x2000021f277 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000021fab9 : jrcxz 0x2000021fb02 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200002207de : jrcxz 0x20000220827 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000221029 : jrcxz 0x20000221075 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000222c02 : jrcxz 0x20000222c4c ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000222f94 : jrcxz 0x20000222ff5 ; ret
0x0000020000224104 : jrcxz 0x20000224165 ; ret
0x000002000022463d : jrcxz 0x2000022469e ; ret
0x0000020000224c25 : jrcxz 0x20000224c6d ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000225036 : jrcxz 0x20000225097 ; ret
0x00000200002251db : jrcxz 0x20000225223 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200002259ac : jrcxz 0x200002259f6 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200002270c3 : jrcxz 0x2000022710f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000022832e : jrcxz 0x20000228378 ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000229180 : jrcxz 0x20000229189 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000229c34 : jrcxz 0x20000229c3b ; add rsp, 0x28 ; ret
0x000002000022b617 : jrcxz 0x2000022b65f ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000022b803 : jrcxz 0x2000022b84c ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000022ba5e : jrcxz 0x2000022bac1 ; ret
0x000002000022bc59 : jrcxz 0x2000022bcba ; ret
0x000002000022bda4 : jrcxz 0x2000022bdec ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000022be4d : jrcxz 0x2000022beb0 ; ret
0x000002000022db49 : jrcxz 0x2000022db91 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000022e57a : jrcxz 0x2000022e5c0 ; pop rsi ; ret
0x000002000022f9e5 : jrcxz 0x2000022fa46 ; ret
0x0000020000230eaf : jrcxz 0x20000230efb ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000023133c : jrcxz 0x20000231385 ; pop rsi ; pop r13 ; pop rbp ; ret
0x000002000023195c : jrcxz 0x200002319a5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000232814 : jrcxz 0x20000232877 ; ret
0x00000200002330fe : jrcxz 0x20000233130 ; ret 0xc520
0x0000020000233132 : jrcxz 0x20000233164 ; ret 0xc531
0x00000200002331ba : jrcxz 0x2000023321b ; ret
0x0000020000233cbe : jrcxz 0x20000233d0a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200002374dd : jrcxz 0x20000237540 ; ret
0x00000200002376ba : jrcxz 0x2000023771b ; ret
0x00000200002379cc : jrcxz 0x20000237a2f ; ret
0x0000020000237e16 : jrcxz 0x20000237e5e ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000238ca7 : jrcxz 0x20000238cf0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000238f85 : jrcxz 0x20000238fe8 ; ret
0x000002000023a071 : jrcxz 0x2000023a0bb ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000024b839 : jrcxz 0x2000024b885 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200003c73f9 : jrcxz 0x200003c73be ; ret
0x00000200003c73f9 : jrcxz 0x200003c73bf ; ret
0x00000200003c76c9 : jrcxz 0x200003c7712 ; pop rdi ; pop r14 ; pop rcx ; ret
0x00000200003caf1c : jrcxz 0x200003caf62 ; pop rdi ; ret
0x00000200003cb0c1 : jrcxz 0x200003cb10a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003cc51c : jrcxz 0x200003cc565 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003cc80e : jrcxz 0x200003cc856 ; pop rdi ; pop rdi ; pop rsi ; ret
0x00000200003ccda3 : jrcxz 0x200003cce04 ; ret
0x00000200003cdcf2 : jrcxz 0x200003cdd53 ; ret
0x00000200003cdf1c : jrcxz 0x200003cdf65 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003ce0af : jrcxz 0x200003ce0f7 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200003cee07 : jrcxz 0x200003cee4f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003d0160 : jrcxz 0x200003d01ac ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x00000200003d0a57 : jrcxz 0x200003d0aa3 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200003d0dfd : jrcxz 0x200003d0e5e ; ret
0x00000200003d0f1e : jrcxz 0x200003d0f7f ; ret
0x00000200003d38e5 : jrcxz 0x200003d3946 ; ret
0x00000200003d59ac : jrcxz 0x200003d5999 ; ret 0xff56
0x00000200003d8403 : jrcxz 0x200003d8466 ; ret
0x00000200003d898d : jrcxz 0x200003d89d7 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003d8b07 : jrcxz 0x200003d8b4f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003d9680 : jrcxz 0x200003d96e1 ; ret
0x00000200003d9ecf : jrcxz 0x200003d9f18 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003dae08 : jrcxz 0x200003dae51 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003dbeed : jrcxz 0x200003dbf36 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003dc95a : jrcxz 0x200003dc9bb ; ret
0x00000200003dcb24 : jrcxz 0x200003dcb6d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003dee0f : jrcxz 0x200003dee58 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003df4f9 : jrcxz 0x200003df543 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003e0048 : jrcxz 0x200003e0091 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003e0444 : jrcxz 0x200003e04a7 ; ret
0x00000200003e12f0 : jrcxz 0x200003e1339 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003e27da : jrcxz 0x200003e2822 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200003e2d7d : jrcxz 0x200003e2dde ; ret
0x00000200003e4381 : jrcxz 0x200003e43cd ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003e5d81 : jrcxz 0x200003e5dca ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003e72fa : jrcxz 0x200003e735b ; ret
0x00000200003e7874 : jrcxz 0x200003e78d5 ; ret
0x00000200003e7c76 : jrcxz 0x200003e7cc2 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003e99c5 : jrcxz 0x200003e9a0b ; pop rsi ; ret
0x00000200003eaaf0 : jrcxz 0x200003eab53 ; ret
0x00000200003ec4e4 : jrcxz 0x200003ec52c ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003eca93 : jrcxz 0x200003ecadc ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003ecb14 : jrcxz 0x200003ecb75 ; ret
0x00000200003ecb93 : jrcxz 0x200003ecbf4 ; ret
0x00000200003ed400 : jrcxz 0x200003ed461 ; ret
0x00000200003ed4b1 : jrcxz 0x200003ed512 ; ret
0x00000200003ed6bc : jrcxz 0x200003ed708 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003f0aa9 : jrcxz 0x200003f0af2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003f228f : jrcxz 0x200003f22d8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003f24f5 : jrcxz 0x200003f2556 ; ret
0x00000200003f2fa2 : jrcxz 0x200003f2feb ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003f4d03 : jrcxz 0x200003f4d4c ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200003f4dbb : jrcxz 0x200003f4e1e ; ret
0x00000200003f4f1d : jrcxz 0x200003f4f80 ; ret
0x00000200003f51c7 : jrcxz 0x200003f522a ; ret
0x00000200003f59b8 : jrcxz 0x200003f5a04 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003f6406 : jrcxz 0x200003f6467 ; ret
0x00000200003f66a8 : jrcxz 0x200003f6709 ; ret
0x00000200003f6eb9 : jrcxz 0x200003f6f05 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200003f72ce : jrcxz 0x200003f7317 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003f73ad : jrcxz 0x200003f7410 ; ret
0x00000200003f751c : jrcxz 0x200003f757f ; ret
0x00000200003f8b25 : jrcxz 0x200003f8b71 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003f8be3 : jrcxz 0x200003f8c2f ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200003f97a9 : jrcxz 0x200003f97f2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003f993c : jrcxz 0x200003f9988 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003f9da7 : jrcxz 0x200003f9df0 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003fa616 : jrcxz 0x200003fa677 ; ret
0x00000200003fa830 : jrcxz 0x200003fa879 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003fbcac : jrcxz 0x200003fbcf5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003fd1e7 : jrcxz 0x200003fd231 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003fd602 : jrcxz 0x200003fd665 ; ret
0x00000200003fdc7b : jrcxz 0x200003fdcc4 ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200003ff1ca : jrcxz 0x200003ff213 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000040080b : jrcxz 0x2000040086e ; ret
0x0000020000401e12 : jrcxz 0x20000401e5a ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000402d6c : jrcxz 0x20000402db5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000403d7b : jrcxz 0x20000403dde ; ret
0x00000200004041c7 : jrcxz 0x20000404210 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000404c10 : jrcxz 0x20000404c59 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004052af : jrcxz 0x200004052b2 ; ret 0xb6eb
0x0000020000407fd8 : jrcxz 0x2000040801e ; pop rsi ; ret
0x0000020000408339 : jrcxz 0x20000408385 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000040c025 : jrcxz 0x2000040c086 ; ret
0x000002000040e30f : jrcxz 0x2000040e357 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000040e44e : jrcxz 0x2000040e4af ; ret
0x000002000041265f : jrcxz 0x200004126a9 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000414c06 : jrcxz 0x20000414c52 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000414ce9 : jrcxz 0x20000414d4c ; ret
0x0000020000415069 : jrcxz 0x200004150b5 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004154a2 : jrcxz 0x200004154ee ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004173ff : jrcxz 0x20000417449 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000041f272 : jrcxz 0x2000041f200 ; ret 0x1b45
0x000002000041f488 : jrcxz 0x2000041f4d1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000420799 : jrcxz 0x200004207e2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000042095b : jrcxz 0x200004209a4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004215d2 : jrcxz 0x20000421618 ; pop rdi ; ret
0x0000020000423c23 : jrcxz 0x20000423c6d ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004263d5 : jrcxz 0x2000042641f ; pop rsi ; pop r13 ; pop r12 ; ret
0x0000020000426cfd : jrcxz 0x20000426c8c ; ret
0x000002000042acf1 : jrcxz 0x2000042acde ; ret
0x000002000042acf0 : jrcxz 0x2000042acdf ; ret
0x000002000042b456 : jrcxz 0x2000042b4b7 ; ret
0x000002000042d314 : jrcxz 0x2000042d360 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000042d679 : jrcxz 0x2000042d6c5 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000042d7fa : jrcxz 0x2000042d85d ; ret
0x000002000042d94e : jrcxz 0x2000042d994 ; pop rsi ; ret
0x000002000042dcb5 : jrcxz 0x2000042dd18 ; ret
0x000002000042fc1c : jrcxz 0x2000042fc68 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000430bdd : jrcxz 0x20000430c29 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000431050 : jrcxz 0x200004310b1 ; ret
0x0000020000431569 : jrcxz 0x200004315db ; ret
0x000002000043190e : jrcxz 0x20000431959 ; mov dword ptr [rcx + 0x7c], eax ; ret
0x0000020000431b3b : jrcxz 0x20000431b85 ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000432476 : jrcxz 0x200004324bf ; pop rdi ; pop r14 ; pop rsi ; ret
0x00000200004335e3 : jrcxz 0x2000043362c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000043413f : jrcxz 0x20000434187 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000434606 : jrcxz 0x20000434655 ; add eax, 8 ; ret
0x0000020000435fef : jrcxz 0x2000043603b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000436498 : jrcxz 0x200004364e4 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000436856 : jrcxz 0x2000043689c ; pop rdi ; ret
0x0000020000436be0 : jrcxz 0x20000436c29 ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000438c13 : jrcxz 0x20000438c74 ; ret
0x000002000043ac49 : jrcxz 0x2000043acac ; ret
0x000002000043b078 : jrcxz 0x2000043b0c2 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000043b5f1 : jrcxz 0x2000043b639 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000043c5b9 : jrcxz 0x2000043c605 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000043c6c5 : jrcxz 0x2000043c728 ; ret
0x000002000043d066 : jrcxz 0x2000043d026 ; add dword ptr [rax], eax ; add al, al ; ret
0x000002000043ff67 : jrcxz 0x2000043ffb0 ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000440f82 : jrcxz 0x20000440fcc ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004410bc : jrcxz 0x20000441102 ; pop rsi ; ret
0x0000020000442790 : jrcxz 0x200004427d9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000442b8a : jrcxz 0x20000442bd6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000443bba : jrcxz 0x20000443c03 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000444912 : jrcxz 0x2000044495b ; pop rsi ; pop r13 ; pop rbp ; ret
0x000002000044547e : jrcxz 0x200004454c7 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000447f1f : jrcxz 0x20000447f80 ; ret
0x0000020000448c37 : jrcxz 0x20000448c83 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000044920a : jrcxz 0x20000449256 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004495db : jrcxz 0x2000044963e ; ret
0x00000200004496eb : jrcxz 0x20000449731 ; pop rsi ; ret
0x0000020000449d60 : jrcxz 0x20000449da8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000449f1a : jrcxz 0x20000449f66 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000044ab7d : jrcxz 0x2000044abc7 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000044ae1d : jrcxz 0x2000044ae7e ; ret
0x000002000044c247 : jrcxz 0x2000044c291 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000044c90b : jrcxz 0x2000044c953 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000044cc23 : jrcxz 0x2000044cc86 ; ret
0x000002000044d391 : jrcxz 0x2000044d3da ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000044e5c3 : jrcxz 0x2000044e60f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000044fbc7 : jrcxz 0x2000044fc11 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000044fddf : jrcxz 0x2000044fe29 ; pop rdi ; pop r13 ; pop r12 ; ret
0x000002000045037d : jrcxz 0x200004503c9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000045101d : jrcxz 0x20000451069 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000045141e : jrcxz 0x20000451466 ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000452c72 : jrcxz 0x20000452cd3 ; ret
0x0000020000453081 : jrcxz 0x200004530c9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000453372 : jrcxz 0x200004533be ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000453584 : jrcxz 0x200004535e7 ; ret
0x00000200004539f1 : jrcxz 0x20000453a54 ; ret
0x0000020000454932 : jrcxz 0x20000454993 ; ret
0x0000020000455033 : jrcxz 0x2000045507f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000455132 : jrcxz 0x2000045517a ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000455364 : jrcxz 0x200004553ac ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004554d3 : jrcxz 0x2000045551c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004566e1 : jrcxz 0x20000456742 ; ret
0x0000020000457e90 : jrcxz 0x20000457ed6 ; pop rsi ; ret
0x00000200004582f7 : jrcxz 0x20000458302 ; add byte ptr [rax], al ; shr al, 0x7f ; ret 0x8bff
0x0000020000459073 : jrcxz 0x200004590b9 ; pop rsi ; ret
0x00000200004591ab : jrcxz 0x2000045920e ; ret
0x00000200004593c0 : jrcxz 0x2000045940c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000045adb9 : jrcxz 0x2000045ae02 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000045be0b : jrcxz 0x2000045be54 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000045c01f : jrcxz 0x2000045c082 ; ret
0x000002000045c3f0 : jrcxz 0x2000045c453 ; ret
0x000002000045cc9a : jrcxz 0x2000045ccfd ; ret
0x000002000045cdcc : jrcxz 0x2000045ce2d ; ret
0x000002000045d740 : jrcxz 0x2000045d7a3 ; ret
0x000002000045dfe0 : jrcxz 0x2000045e02c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000045e41c : jrcxz 0x2000045e468 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000045eb5a : jrcxz 0x2000045eba3 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000045eed9 : jrcxz 0x2000045ef3a ; ret
0x000002000045f120 : jrcxz 0x2000045f16c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000045f5fa : jrcxz 0x2000045f646 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000045fb0a : jrcxz 0x2000045fb31 ; call 0x2000008e159
0x000002000045fdb0 : jrcxz 0x2000045fdfc ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000460094 : jrcxz 0x200004600dd ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000460a04 : jrcxz 0x20000460a65 ; ret
0x0000020000461f7f : jrcxz 0x20000461f9b ; add byte ptr [rcx - 0x7d], cl ; ret
0x000002000046515f : jrcxz 0x200004651ab ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000465272 : jrcxz 0x200004652ba ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004654a3 : jrcxz 0x200004654e9 ; pop rsi ; ret
0x0000020000465884 : jrcxz 0x200004658ca ; pop rsi ; ret
0x00000200004661b5 : jrcxz 0x200004661fd ; pop rdi ; pop rdi ; pop rsi ; ret
0x0000020000466422 : jrcxz 0x2000046646c ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000466c38 : jrcxz 0x20000466c7e ; pop rsi ; ret
0x0000020000466dd2 : jrcxz 0x20000466e1a ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000467bcd : jrcxz 0x20000467c2e ; ret
0x0000020000469603 : jrcxz 0x20000469666 ; ret
0x000002000046cd87 : jrcxz 0x2000046cdd1 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000046d144 : jrcxz 0x2000046d18e ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000046d24a : jrcxz 0x2000046d290 ; pop rsi ; ret
0x000002000046d4f1 : jrcxz 0x2000046d53a ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000046d89d : jrcxz 0x2000046d900 ; ret
0x000002000046df2a : jrcxz 0x2000046df76 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000046e2ff : jrcxz 0x2000046e2ee ; dec dword ptr [rax - 0x75] ; ret
0x000002000046fc3f : jrcxz 0x2000046fc87 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000046ff51 : jrcxz 0x2000046ff99 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000471334 : jrcxz 0x2000047137e ; pop rsi ; pop r13 ; pop r12 ; ret
0x0000020000471dfd : jrcxz 0x20000471e46 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000047310f : jrcxz 0x20000473159 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004737c1 : jrcxz 0x2000047380a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004746d7 : jrcxz 0x20000474721 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000474ba0 : jrcxz 0x20000474c03 ; ret
0x0000020000474cad : jrcxz 0x20000474d0e ; ret
0x00000200004780c6 : jrcxz 0x20000478112 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000047a189 : jrcxz 0x2000047a1d5 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000047b124 : jrcxz 0x2000047b16a ; pop rsi ; ret
0x000002000048ae17 : jrcxz 0x2000048ae61 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000048cb80 : jrcxz 0x2000048cbc6 ; pop rdi ; ret
0x000002000049169d : jrcxz 0x200004916e6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000049181b : jrcxz 0x2000049187e ; ret
0x0000020000491946 : jrcxz 0x2000049198c ; pop rsi ; ret
0x0000020000497b62 : jrcxz 0x20000497bab ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004998fb : jrcxz 0x20000499947 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000049b36b : jrcxz 0x2000049b3b4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000049b53d : jrcxz 0x2000049b589 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000049bf23 : jrcxz 0x2000049bf6c ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000049cc7d : jrcxz 0x2000049ccc9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000049d0ca : jrcxz 0x2000049d112 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000049d1cf : jrcxz 0x2000049d230 ; ret
0x000002000049feab : jrcxz 0x2000049fef3 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004a1808 : jrcxz 0x200004a1854 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200004a1d33 : jrcxz 0x200004a1d79 ; pop rsi ; ret
0x00000200004a237f : jrcxz 0x200004a23c5 ; pop rsi ; ret
0x00000200004aa38d : jrcxz 0x200004aa3ee ; ret
0x00000200004aa8b0 : jrcxz 0x200004aa8f9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004ac7d9 : jrcxz 0x200004ac825 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004ad3e7 : jrcxz 0x200004ad431 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004af11a : jrcxz 0x200004af164 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004aff2a : jrcxz 0x200004aff8b ; ret
0x00000200004b1241 : jrcxz 0x200004b128b ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004b13c6 : jrcxz 0x200004b1410 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004b18ce : jrcxz 0x200004b1916 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004b19a6 : jrcxz 0x200004b19ee ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004b21c2 : jrcxz 0x200004b220a ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200004b25dd : jrcxz 0x200004b2640 ; ret
0x00000200004b2de7 : jrcxz 0x200004b2e33 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004b6bc4 : jrcxz 0x200004b6c10 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004b6cd1 : jrcxz 0x200004b6d1d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004b8a4c : jrcxz 0x200004b8a92 ; pop rsi ; ret
0x00000200004ba618 : jrcxz 0x200004ba662 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004bcf91 : jrcxz 0x200004bcfd7 ; pop rdi ; ret
0x00000200004c0220 : jrcxz 0x200004c0226 ; mov rcx, rbx ; call 0x200000e7218
0x00000200004c0bb9 : jrcxz 0x200004c0c2e ; ret 0xbaff
0x00000200004c1135 : jrcxz 0x200004c1198 ; ret
0x00000200004c1149 : jrcxz 0x200004c11ac ; ret
0x00000200004c28e2 : jrcxz 0x200004c292c ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004c82cb : jrcxz 0x200004c832e ; ret
0x00000200004c886c : jrcxz 0x200004c88b2 ; pop rdi ; ret
0x00000200004c8a8f : jrcxz 0x200004c8ad9 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004c8c14 : jrcxz 0x200004c8c5e ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004d0402 : jrcxz 0x200004d0463 ; ret
0x00000200004d3c46 : jrcxz 0x200004d3bd5 ; ret
0x00000200004d4ed8 : jrcxz 0x200004d4f22 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004d6dee : jrcxz 0x200004d6df1 ; dec dword ptr [rax + 0x3b] ; ret 0xd74
0x00000200004dd945 : jrcxz 0x200004dd98f ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004ded80 : jrcxz 0x200004dedc9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004e396e : jrcxz 0x200004e39b8 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004e637f : jrcxz 0x200004e63e2 ; ret
0x00000200004e64f7 : jrcxz 0x200004e655a ; ret
0x00000200004e6669 : jrcxz 0x200004e66af ; pop rsi ; ret
0x00000200004e6a78 : jrcxz 0x200004e6ac1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004e7658 : jrcxz 0x200004e76a1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004e8956 : jrcxz 0x200004e89a0 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004ea1ae : jrcxz 0x200004ea211 ; ret
0x00000200004ecaa5 : jrcxz 0x200004ecaef ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004ed8d5 : jrcxz 0x200004ed91f ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004edcbe : jrcxz 0x200004edd06 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004eff3e : jrcxz 0x200004effa1 ; ret
0x00000200004f0daf : jrcxz 0x200004f0df8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004f1487 : jrcxz 0x200004f14d0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004f16ae : jrcxz 0x200004f1711 ; ret
0x00000200004f26e7 : jrcxz 0x200004f2733 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200004f7475 : jrcxz 0x200004f74be ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004f8eca : jrcxz 0x200004f8f13 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004fa01d : jrcxz 0x200004fa065 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004fa130 : jrcxz 0x200004fa178 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004fa466 : jrcxz 0x200004fa4c9 ; ret
0x00000200004fa84f : jrcxz 0x200004fa8b2 ; ret
0x00000200004fc64b : jrcxz 0x200004fc697 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004fcc97 : jrcxz 0x200004fcce0 ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200004fce05 : jrcxz 0x200004fce4b ; pop rdi ; ret
0x00000200004fcfbc : jrcxz 0x200004fd005 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004fe073 : jrcxz 0x200004fe0bf ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004fee81 : jrcxz 0x200004feec9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004fef97 : jrcxz 0x200004fefe0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000501160 : jrcxz 0x200005011ac ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000050137e : jrcxz 0x200005013c4 ; pop rsi ; ret
0x0000020000501ce9 : jrcxz 0x20000501d32 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000501f58 : jrcxz 0x20000501fbb ; ret
0x0000020000502d2f : jrcxz 0x20000502d75 ; pop rsi ; ret
0x0000020000505f8d : jrcxz 0x20000505fd7 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200005064a7 : jrcxz 0x2000050650a ; ret
0x0000020000506e50 : jrcxz 0x20000506eb1 ; ret
0x0000020000508460 : jrcxz 0x200005084ac ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000508d35 : jrcxz 0x20000508d7d ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000508e65 : jrcxz 0x20000508eb1 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000508fc3 : jrcxz 0x2000050900c ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000509bd2 : jrcxz 0x20000509c18 ; pop rdi ; ret
0x0000020000509fb8 : jrcxz 0x2000050a01b ; ret
0x000002000050ddbb : jrcxz 0x2000050de07 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000512f83 : jrcxz 0x20000512fcb ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000513548 : jrcxz 0x20000513591 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000514045 : jrcxz 0x2000051408f ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000514235 : jrcxz 0x2000051427e ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000514c21 : jrcxz 0x20000514c6a ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000514f9c : jrcxz 0x20000514ffd ; ret
0x0000020000515c2d : jrcxz 0x20000515c90 ; ret
0x00000200005160db : jrcxz 0x2000051613e ; ret
0x0000020000516465 : jrcxz 0x200005164c6 ; ret
0x00000200005170e8 : jrcxz 0x20000517149 ; ret
0x0000020000518060 : jrcxz 0x200005180aa ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000051888d : jrcxz 0x200005188ee ; ret
0x0000020000518a2e : jrcxz 0x20000518a74 ; pop rsi ; ret
0x00000200005192d3 : jrcxz 0x20000519334 ; ret
0x00000200005198fe : jrcxz 0x20000519944 ; pop rsi ; ret
0x0000020000519b35 : jrcxz 0x20000519b96 ; ret
0x000002000051a047 : jrcxz 0x2000051a090 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000051a951 : jrcxz 0x2000051a997 ; pop rsi ; ret
0x000002000051aafc : jrcxz 0x2000051ab5f ; ret
0x000002000051b068 : jrcxz 0x2000051b0c9 ; ret
0x000002000051b602 : jrcxz 0x2000051b663 ; ret
0x000002000051b6f6 : jrcxz 0x2000051b757 ; ret
0x000002000051baa4 : jrcxz 0x2000051baf0 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000051c0b1 : jrcxz 0x2000051c114 ; ret
0x000002000051ce36 : jrcxz 0x2000051ce7e ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000051dac7 : jrcxz 0x2000051db0f ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000051dee2 : jrcxz 0x2000051df45 ; ret
0x000002000051e053 : jrcxz 0x2000051e09f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000051e308 : jrcxz 0x2000051e36b ; ret
0x000002000051e3ba : jrcxz 0x2000051e403 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000051eec0 : jrcxz 0x2000051ef0c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000051f2fa : jrcxz 0x2000051f342 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000051fc76 : jrcxz 0x2000051fcbf ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000520242 : jrcxz 0x2000052028a ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005205ff : jrcxz 0x2000052064b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000052071e : jrcxz 0x20000520767 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000520a29 : jrcxz 0x20000520a72 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000522172 : jrcxz 0x200005221d3 ; ret
0x0000020000522237 : jrcxz 0x20000522281 ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000522c39 : jrcxz 0x20000522c9a ; ret
0x0000020000524f89 : jrcxz 0x20000524fd5 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000525ae9 : jrcxz 0x20000525b4a ; ret
0x00000200005263e9 : jrcxz 0x2000052644a ; ret
0x0000020000526cc6 : jrcxz 0x20000526d0f ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000527b90 : jrcxz 0x20000527bf1 ; ret
0x0000020000528cdf : jrcxz 0x20000528d42 ; ret
0x0000020000529807 : jrcxz 0x20000529850 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000052a784 : jrcxz 0x2000052a793 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000052a936 : jrcxz 0x2000052a997 ; ret
0x000002000052aa67 : jrcxz 0x2000052aaaf ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000052ad53 : jrcxz 0x2000052adb4 ; ret
0x000002000052c125 : jrcxz 0x2000052c124 ; call 0x20000157545
0x000002000052d287 : jrcxz 0x2000052d2e8 ; ret
0x000002000052f2c0 : jrcxz 0x2000052f308 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000052f4ac : jrcxz 0x2000052f50f ; ret
0x000002000052f77d : jrcxz 0x2000052f7c9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000052f829 : jrcxz 0x2000052f871 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000530038 : jrcxz 0x20000530099 ; ret
0x00000200005300f3 : jrcxz 0x20000530156 ; ret
0x0000020000531738 : jrcxz 0x20000531781 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000531e7c : jrcxz 0x20000531edd ; ret
0x0000020000531f3a : jrcxz 0x20000531f9b ; ret
0x0000020000531fc4 : jrcxz 0x20000532025 ; ret
0x000002000053378d : jrcxz 0x200005337d6 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005339a0 : jrcxz 0x200005339e9 ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000053467e : jrcxz 0x200005346e1 ; ret
0x0000020000534b55 : jrcxz 0x20000534b9e ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000053505b : jrcxz 0x200005350be ; ret
0x00000200005350e8 : jrcxz 0x20000535134 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000535fb4 : jrcxz 0x20000536017 ; ret
0x000002000053630f : jrcxz 0x20000536372 ; ret
0x00000200005365c1 : jrcxz 0x20000536624 ; ret
0x0000020000536b45 : jrcxz 0x20000536b91 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000536f20 : jrcxz 0x20000536f83 ; ret
0x000002000053881d : jrcxz 0x2000053887e ; ret
0x0000020000538c9c : jrcxz 0x20000538cfd ; ret
0x000002000053ab2a : jrcxz 0x2000053ab72 ; pop rdi ; pop rdi ; pop rsi ; ret
0x000002000053afb9 : jrcxz 0x2000053b01c ; ret
0x000002000053b515 : jrcxz 0x2000053b55e ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000053b890 : jrcxz 0x2000053b8d8 ; pop rbp ; pop rdi ; pop rbp ; ret
0x000002000053b95c : jrcxz 0x2000053b9bd ; ret
0x000002000053ba82 : jrcxz 0x2000053bae5 ; ret
0x000002000053bb41 : jrcxz 0x2000053bba4 ; ret
0x000002000053c6d2 : jrcxz 0x2000053c71b ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000053dac5 : jrcxz 0x2000053db26 ; ret
0x000002000053e776 : jrcxz 0x2000053e7be ; pop rsp ; pop rdi ; pop rsi ; ret
0x000002000053f614 : jrcxz 0x2000053f660 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000053f7f3 : jrcxz 0x2000053f854 ; ret
0x000002000053fdc0 : jrcxz 0x2000053fe09 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000540c33 : jrcxz 0x20000540c7c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005439e6 : jrcxz 0x20000543a30 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000543ceb : jrcxz 0x20000543d4c ; ret
0x0000020000547409 : jrcxz 0x20000547451 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000054799d : jrcxz 0x20000547a00 ; ret
0x0000020000548a40 : jrcxz 0x20000548a8c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000054a16b : jrcxz 0x2000054a1b4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000054a370 : jrcxz 0x2000054a3b8 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000054a562 : jrcxz 0x2000054a5c3 ; ret
0x000002000054a6a0 : jrcxz 0x2000054a701 ; ret
0x000002000054b40b : jrcxz 0x2000054b46c ; ret
0x000002000054c3e0 : jrcxz 0x2000054c428 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000054ca5e : jrcxz 0x2000054caaa ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000054d770 : jrcxz 0x2000054d7b9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000054e46e : jrcxz 0x2000054e4d1 ; ret
0x000002000054ec0b : jrcxz 0x2000054ec6e ; ret
0x00000200005501f7 : jrcxz 0x20000550258 ; ret
0x00000200005510e1 : jrcxz 0x20000551127 ; pop rsi ; ret
0x0000020000551176 : jrcxz 0x200005511d9 ; ret
0x0000020000551e78 : jrcxz 0x20000551ec1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000552f2f : jrcxz 0x20000552f78 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005530bf : jrcxz 0x20000553108 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005531a2 : jrcxz 0x20000553205 ; ret
0x0000020000553547 : jrcxz 0x2000055358f ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000055481c : jrcxz 0x20000554866 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000554ce3 : jrcxz 0x20000554d2f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200005553b8 : jrcxz 0x20000555402 ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000555e86 : jrcxz 0x20000555ee7 ; ret
0x0000020000556f8b : jrcxz 0x20000556fec ; ret
0x00000200005577a5 : jrcxz 0x200005577f1 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000559cf6 : jrcxz 0x20000559d40 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000055a1d6 : jrcxz 0x2000055a21f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000055a538 : jrcxz 0x2000055a580 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000055ad8c : jrcxz 0x2000055add4 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000055b095 : jrcxz 0x2000055b0e1 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000055b221 : jrcxz 0x2000055b26d ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000055bc52 : jrcxz 0x2000055bcb3 ; ret
0x000002000055be78 : jrcxz 0x2000055bebe ; pop rsi ; ret
0x000002000055bf16 : jrcxz 0x2000055bf5f ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000055cc50 : jrcxz 0x2000055ccb1 ; ret
0x000002000055cd9c : jrcxz 0x2000055cde8 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000055d4c2 : jrcxz 0x2000055d523 ; ret
0x000002000055d7c4 : jrcxz 0x2000055d80c ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000055f0fe : jrcxz 0x2000055f14a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000055fbb7 : jrcxz 0x2000055fbfd ; pop rdi ; ret
0x000002000055fece : jrcxz 0x2000055ff17 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005608ac : jrcxz 0x200005608f5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000560bb7 : jrcxz 0x20000560c18 ; ret
0x000002000056147e : jrcxz 0x200005614ca ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000561c27 : jrcxz 0x20000561c6f ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000561f73 : jrcxz 0x20000561fbf ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000562188 : jrcxz 0x200005621e9 ; ret
0x0000020000562400 : jrcxz 0x20000562461 ; ret
0x00000200005627fa : jrcxz 0x20000562846 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000056312c : jrcxz 0x2000056318d ; ret
0x000002000056364e : jrcxz 0x20000563697 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005641c0 : jrcxz 0x20000564221 ; ret
0x0000020000564719 : jrcxz 0x2000056477a ; ret
0x000002000056490c : jrcxz 0x20000564956 ; pop rsi ; pop r13 ; pop r12 ; ret
0x0000020000564b0a : jrcxz 0x20000564b6b ; ret
0x00000200005655db : jrcxz 0x2000056563e ; ret
0x0000020000565723 : jrcxz 0x20000565784 ; ret
0x00000200005658e8 : jrcxz 0x2000056594b ; ret
0x0000020000565bd9 : jrcxz 0x20000565c3c ; ret
0x0000020000566b2b : jrcxz 0x20000566b8e ; ret
0x0000020000566c62 : jrcxz 0x20000566cab ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000567357 : jrcxz 0x200005673b8 ; ret
0x0000020000567456 : jrcxz 0x200005674b8 ; ret
0x000002000056784d : jrcxz 0x20000567899 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005681c1 : jrcxz 0x20000568209 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000056941a : jrcxz 0x2000056947b ; ret
0x000002000056993c : jrcxz 0x20000569942 ; mov dword ptr [rcx + 0x1c], eax ; ret
0x00000200005a1ec0 : jrcxz 0x200005a1eb2 ; dec dword ptr [rbp - 0x75] ; sbb r9b, r13b ; ret
0x00000200005abc99 : jrcxz 0x200005abc88 ; push rsi ; ret 0xf40
0x00000200005b2fce : jrcxz 0x200005b2fe2 ; ret 0xc133
0x00000200005b2fcd : jrcxz 0x200005b2fe3 ; ret 0xc133
0x00000200005cbd30 : jrcxz 0x200005cbd21 ; ljmp ptr [rbx] ; ret 0x8d48
0x00000200005f1cfe : jrcxz 0x200005f1d5f ; ret
0x00000200005f600a : jrcxz 0x200005f6053 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200005fe5c5 : jrcxz 0x200005fe611 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005fecbb : jrcxz 0x200005fed1e ; ret
0x00000200005fef97 : jrcxz 0x200005fefdd ; pop rdi ; ret
0x000002000060004c : jrcxz 0x20000600098 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000060130a : jrcxz 0x2000060136b ; ret
0x0000020000601cdb : jrcxz 0x20000601d24 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000603f30 : jrcxz 0x20000603f7c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000060467f : jrcxz 0x200006046c5 ; pop rsi ; ret
0x000002000060531a : jrcxz 0x2000060537d ; ret
0x0000020000605491 : jrcxz 0x200006054dd ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000605d0b : jrcxz 0x20000605d54 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000606d06 : jrcxz 0x20000606d52 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000607039 : jrcxz 0x20000607082 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006077ed : jrcxz 0x20000607839 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000607e9f : jrcxz 0x20000607f02 ; ret
0x0000020000608746 : jrcxz 0x200006087a7 ; ret
0x0000020000609dbc : jrcxz 0x20000609e04 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000609fec : jrcxz 0x2000060a035 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000060a75d : jrcxz 0x2000060a7a5 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000060ac79 : jrcxz 0x2000060acc2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000060b287 : jrcxz 0x2000060b28f ; add rsp, 0x40 ; pop rbp ; ret
0x000002000060b90c : jrcxz 0x2000060b958 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000060e4aa : jrcxz 0x2000060e4f6 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000060e775 : jrcxz 0x2000060e7d8 ; ret
0x000002000060edd5 : jrcxz 0x2000060ee38 ; ret
0x000002000060fc94 : jrcxz 0x2000060fcdd ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000060fd21 : jrcxz 0x2000060fd84 ; ret
0x0000020000611766 : jrcxz 0x200006117c9 ; ret
0x0000020000612cb3 : jrcxz 0x20000612cff ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006149d4 : jrcxz 0x20000614a1e ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000614de9 : jrcxz 0x20000614df0 ; add rsp, 0x28 ; ret
0x00000200006169be : jrcxz 0x20000616a08 ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000616a9f : jrcxz 0x20000616ae8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006171cb : jrcxz 0x20000617213 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000617b4f : jrcxz 0x20000617b98 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006180fa : jrcxz 0x20000618142 ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000618308 : jrcxz 0x20000618369 ; ret
0x00000200006187b8 : jrcxz 0x20000618819 ; ret
0x000002000061abf6 : jrcxz 0x2000061ac3f ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000061d908 : jrcxz 0x2000061d94e ; pop rsi ; ret
0x000002000061db3f : jrcxz 0x2000061db87 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000061dcea : jrcxz 0x2000061dd34 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000061ecc8 : jrcxz 0x2000061ed2a ; ret
0x000002000061ef3f : jrcxz 0x2000061efa2 ; ret
0x000002000061f6ed : jrcxz 0x2000061f736 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000061fb07 : jrcxz 0x2000061fb68 ; ret
0x0000020000620200 : jrcxz 0x20000620263 ; ret
0x00000200006205ff : jrcxz 0x20000620647 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006208de : jrcxz 0x2000062093f ; ret
0x0000020000620ab8 : jrcxz 0x20000620b1b ; ret
0x00000200006217f2 : jrcxz 0x2000062183c ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000062216e : jrcxz 0x200006221b8 ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000622bb9 : jrcxz 0x20000622c1a ; ret
0x0000020000622da5 : jrcxz 0x20000622deb ; pop rdi ; ret
0x0000020000623dd1 : jrcxz 0x20000623e1d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006242a9 : jrcxz 0x2000062430c ; ret
0x0000020000625571 : jrcxz 0x200006255d2 ; ret
0x00000200006273a1 : jrcxz 0x200006273e9 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000627d3c : jrcxz 0x20000627d88 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000628414 : jrcxz 0x2000062845d ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006288e2 : jrcxz 0x2000062892b ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000062a6c9 : jrcxz 0x2000062a72c ; ret
0x000002000062b62b : jrcxz 0x2000062b68e ; ret
0x000002000062c1ed : jrcxz 0x2000062c233 ; pop rsi ; ret
0x000002000062c317 : jrcxz 0x2000062c35d ; pop rsi ; ret
0x000002000062cafd : jrcxz 0x2000062cb47 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000062cdd9 : jrcxz 0x2000062ce3c ; ret
0x000002000062d5a4 : jrcxz 0x2000062d5ec ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000062d779 : jrcxz 0x2000062d7da ; ret
0x000002000062dd1d : jrcxz 0x2000062dd63 ; pop rdi ; ret
0x000002000062dfec : jrcxz 0x2000062e04d ; ret
0x000002000062fb36 : jrcxz 0x2000062fb7e ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000062ff64 : jrcxz 0x2000062ffad ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000630726 : jrcxz 0x20000630770 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000630d3d : jrcxz 0x20000630d86 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000631301 : jrcxz 0x20000631362 ; ret
0x0000020000631d1d : jrcxz 0x20000631d80 ; ret
0x000002000063202d : jrcxz 0x20000632076 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006338f4 : jrcxz 0x20000633940 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000634d1d : jrcxz 0x20000634d65 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000634f68 : jrcxz 0x20000634fb0 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000635806 : jrcxz 0x20000635867 ; ret
0x0000020000636210 : jrcxz 0x20000636259 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000636314 : jrcxz 0x2000063635d ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000636751 : jrcxz 0x2000063679a ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000636efd : jrcxz 0x20000636f49 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000637257 : jrcxz 0x200006372a3 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000639414 : jrcxz 0x2000063945c ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000063afbe : jrcxz 0x2000063b01f ; ret
0x000002000063d10a : jrcxz 0x2000063d16d ; ret
0x000002000063d4f7 : jrcxz 0x2000063d558 ; ret
0x000002000063d853 : jrcxz 0x2000063d89c ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000063e68c : jrcxz 0x2000063e6ed ; ret
0x000002000063f08b : jrcxz 0x2000063f0ec ; ret
0x000002000063f16a : jrcxz 0x2000063f1cb ; ret
0x000002000064164f : jrcxz 0x20000641698 ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000641b02 : jrcxz 0x20000641b63 ; ret
0x000002000064434d : jrcxz 0x20000644396 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000645166 : jrcxz 0x200006451ae ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000645358 : jrcxz 0x200006453bb ; ret
0x0000020000645684 : jrcxz 0x200006456d0 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000645f86 : jrcxz 0x20000645fcf ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006488ab : jrcxz 0x200006488f4 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200006491c9 : jrcxz 0x20000649212 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000649a75 : jrcxz 0x20000649ad6 ; ret
0x000002000064a93c : jrcxz 0x2000064a982 ; pop rsi ; ret
0x000002000064aa22 : jrcxz 0x2000064aa68 ; pop rsi ; ret
0x000002000064ad54 : jrcxz 0x2000064ad9d ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064aea3 : jrcxz 0x2000064aee9 ; pop rsi ; ret
0x000002000064b248 : jrcxz 0x2000064b292 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000064b5f6 : jrcxz 0x2000064b63f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064ba83 : jrcxz 0x2000064bacc ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064bc18 : jrcxz 0x2000064bc61 ; pop rdi ; pop r13 ; pop rbp ; ret
0x000002000064c5d4 : jrcxz 0x2000064c626 ; lea edx, dword ptr [rsp + 0x38] ; call 0x200003f8858
0x000002000064c715 : jrcxz 0x2000064c75d ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000064c89c : jrcxz 0x2000064c8fd ; ret
0x000002000064ca4c : jrcxz 0x2000064caad ; ret
0x000002000064d3cb : jrcxz 0x2000064d42c ; ret
0x000002000064d52e : jrcxz 0x2000064d58f ; ret
0x000002000064dea0 : jrcxz 0x2000064dee8 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000064e08d : jrcxz 0x2000064e0ee ; ret
0x000002000064e73b : jrcxz 0x2000064e784 ; pop rdi ; pop r13 ; pop rbp ; ret
0x000002000064e93b : jrcxz 0x2000064e987 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000064ea77 : jrcxz 0x2000064eac0 ; pop rdi ; pop r13 ; pop rbp ; ret
0x000002000064fcc2 : jrcxz 0x2000064fd23 ; ret
0x000002000064fe03 : jrcxz 0x2000064fe64 ; ret
0x000002000064ff0b : jrcxz 0x2000064ff6c ; ret
0x000002000065012b : jrcxz 0x20000650174 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006535de : jrcxz 0x20000653626 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000065387a : jrcxz 0x200006538c6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006560f3 : jrcxz 0x2000065613c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000065770c : jrcxz 0x20000657756 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000065814d : jrcxz 0x20000658199 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200006590cd : jrcxz 0x20000659117 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200006594f6 : jrcxz 0x2000065953c ; pop rsi ; ret
0x000002000065c6af : jrcxz 0x2000065c710 ; ret
0x000002000065cbf0 : jrcxz 0x2000065cc51 ; ret
0x000002000065d075 : jrcxz 0x2000065d0bd ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000065d4f4 : jrcxz 0x2000065d557 ; ret
0x000002000065d9c1 : jrcxz 0x2000065da24 ; ret
0x000002000065e421 : jrcxz 0x2000065e46a ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000065f2f2 : jrcxz 0x2000065f33c ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000065f99c : jrcxz 0x2000065f9e8 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000065fb0c : jrcxz 0x2000065fb6f ; ret
0x000002000066324e : jrcxz 0x20000663298 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000663a95 : jrcxz 0x20000663af6 ; ret
0x00000200006642fa : jrcxz 0x20000664340 ; pop rsi ; ret
0x0000020000664426 : jrcxz 0x20000664470 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000666276 : jrcxz 0x200006662d9 ; ret
0x00000200006679c5 : jrcxz 0x20000667a11 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006690b0 : jrcxz 0x200006690fa ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000066a11a : jrcxz 0x2000066a163 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000066a1d2 : jrcxz 0x2000066a21a ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000066bd62 : jrcxz 0x2000066bda8 ; pop rsi ; ret
0x000002000066cd91 : jrcxz 0x2000066cdf4 ; ret
0x000002000066ce90 : jrcxz 0x2000066cef3 ; ret
0x000002000066d162 : jrcxz 0x2000066d1aa ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000066d3d1 : jrcxz 0x2000066d41a ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000066f569 : jrcxz 0x2000066f5cc ; ret
0x000002000066fa75 : jrcxz 0x2000066fac1 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006717db : jrcxz 0x2000067183c ; ret
0x0000020000672ab9 : jrcxz 0x20000672b02 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000674370 : jrcxz 0x200006743d1 ; ret
0x0000020000675067 : jrcxz 0x200006750c8 ; ret
0x00000200006753b1 : jrcxz 0x20000675412 ; ret
0x0000020000675808 : jrcxz 0x20000675852 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000675952 : jrcxz 0x200006759b3 ; ret
0x0000020000676fe5 : jrcxz 0x20000677046 ; ret
0x00000200006770cd : jrcxz 0x2000067712e ; ret
0x0000020000677840 : jrcxz 0x200006778a1 ; ret
0x0000020000677cfb : jrcxz 0x20000677d5e ; ret
0x0000020000679b02 : jrcxz 0x20000679b4a ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000679c3c : jrcxz 0x20000679c9d ; ret
0x000002000067a5e9 : jrcxz 0x2000067a632 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000067aa9a : jrcxz 0x2000067aae4 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000067cff2 : jrcxz 0x2000067d03a ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000067d511 : jrcxz 0x2000067d572 ; ret
0x000002000067d660 : jrcxz 0x2000067d6c1 ; ret
0x000002000067d972 : jrcxz 0x2000067d9d3 ; ret
0x000002000067daa0 : jrcxz 0x2000067db01 ; ret
0x000002000067dbe5 : jrcxz 0x2000067dc46 ; ret
0x000002000067dccb : jrcxz 0x2000067dd2c ; ret
0x000002000067de7b : jrcxz 0x2000067dedc ; ret
0x000002000067e05e : jrcxz 0x2000067e0bf ; ret
0x000002000067e2df : jrcxz 0x2000067e340 ; ret
0x000002000067e42b : jrcxz 0x2000067e48c ; ret
0x000002000067ecf5 : jrcxz 0x2000067ed56 ; ret
0x000002000067ef4d : jrcxz 0x2000067efae ; ret
0x000002000067f3c5 : jrcxz 0x2000067f426 ; ret
0x000002000067f835 : jrcxz 0x2000067f896 ; ret
0x000002000067f945 : jrcxz 0x2000067f9a6 ; ret
0x000002000067fba1 : jrcxz 0x2000067fc02 ; ret
0x0000020000680952 : jrcxz 0x20000680998 ; pop rsi ; ret
0x00000200006811d9 : jrcxz 0x20000681222 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006820b4 : jrcxz 0x200006820fa ; pop rsi ; ret
0x0000020000682485 : jrcxz 0x200006824cb ; pop rdi ; ret
0x0000020000682eb7 : jrcxz 0x20000682ebe ; add rsp, 0x38 ; ret
0x0000020000682ecf : jrcxz 0x20000682ed6 ; add rsp, 0x38 ; ret
0x00000200006832ff : jrcxz 0x20000683360 ; ret
0x0000020000683ad1 : jrcxz 0x20000683b1a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006851d1 : jrcxz 0x20000685219 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000068b2f2 : jrcxz 0x2000068b33b ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000068c130 : jrcxz 0x2000068c191 ; ret
0x000002000068e4da : jrcxz 0x2000068e53b ; ret
0x000002000068f785 : jrcxz 0x2000068f7cf ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000068fdb5 : jrcxz 0x2000068fdfb ; pop rsi ; ret
0x000002000068fed7 : jrcxz 0x2000068ff20 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000690b0c : jrcxz 0x20000690b54 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000690c9c : jrcxz 0x20000690ce5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000690e5b : jrcxz 0x20000690ea4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000691209 : jrcxz 0x20000691252 ; pop rsi ; pop r13 ; pop rbp ; ret
0x0000020000691384 : jrcxz 0x200006913e5 ; ret
0x0000020000691525 : jrcxz 0x20000691571 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000069175a : jrcxz 0x200006917a3 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000691f91 : jrcxz 0x20000691ff2 ; ret
0x000002000069217c : jrcxz 0x200006921dd ; ret
0x0000020000692e9b : jrcxz 0x20000692ee7 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000069591b : jrcxz 0x2000069597e ; ret
0x0000020000695a2d : jrcxz 0x20000695a8e ; ret
0x0000020000695b1f : jrcxz 0x20000695b80 ; ret
0x0000020000697c1b : jrcxz 0x20000697c63 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006980d1 : jrcxz 0x2000069811d ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200006983cf : jrcxz 0x20000698418 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000698ca5 : jrcxz 0x20000698cee ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000699ad2 : jrcxz 0x20000699b33 ; ret
0x000002000069a997 : jrcxz 0x2000069a9e0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000069ac48 : jrcxz 0x2000069aca9 ; ret
0x000002000069b7e3 : jrcxz 0x2000069b844 ; ret
0x000002000069c93c : jrcxz 0x2000069c988 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000069cf67 : jrcxz 0x2000069cfb3 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000069e391 : jrcxz 0x2000069e3da ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000069e9d4 : jrcxz 0x2000069ea20 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000069eeec : jrcxz 0x2000069ef34 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000069f99d : jrcxz 0x2000069f9e9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000069fc5c : jrcxz 0x2000069fca5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000069fd78 : jrcxz 0x2000069fdc2 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200006a2ed7 : jrcxz 0x200006a2f3a ; ret
0x00000200006a3f65 : jrcxz 0x200006a3fc6 ; ret
0x00000200006a49a6 : jrcxz 0x200006a4a07 ; ret
0x00000200006a4ca0 : jrcxz 0x200006a4ce9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006a752c : jrcxz 0x200006a758d ; ret
0x00000200006a7679 : jrcxz 0x200006a76c1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006a7cc7 : jrcxz 0x200006a7d15 ; mov eax, ecx ; ret
0x00000200006a7dcc : jrcxz 0x200006a7e14 ; pop rdi ; pop rdi ; pop rsi ; ret
0x00000200006a8793 : jrcxz 0x200006a87df ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006a8cf4 : jrcxz 0x200006a8d55 ; ret
0x00000200006a8f4e : jrcxz 0x200006a8f96 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006ac929 : jrcxz 0x200006ac98a ; ret
0x00000200006adba0 : jrcxz 0x200006adbe9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006ae02c : jrcxz 0x200006ae078 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200006ae524 : jrcxz 0x200006ae587 ; ret
0x00000200006af3dc : jrcxz 0x200006af422 ; pop rsi ; ret
0x00000200006af5cc : jrcxz 0x200006af615 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006afd84 : jrcxz 0x200006afdce ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200006aff0a : jrcxz 0x200006aff53 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006b00f6 : jrcxz 0x200006b013e ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006b0b5f : jrcxz 0x200006b0ba8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006b0cbf : jrcxz 0x200006b0d08 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200006b2001 : jrcxz 0x200006b2062 ; ret
0x00000200006b21e4 : jrcxz 0x200006b222c ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006b43dd : jrcxz 0x200006b4429 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200006b5515 : jrcxz 0x200006b555b ; pop rsi ; ret
0x00000200006b619e : jrcxz 0x200006b61e8 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200006b6af9 : jrcxz 0x200006b6b5c ; ret
0x00000200006b7ec5 : jrcxz 0x200006b7f0e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006b8d4a : jrcxz 0x200006b8d93 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006b95c0 : jrcxz 0x200006b9609 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006b99c4 : jrcxz 0x200006b9a10 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200006ba2b2 : jrcxz 0x200006ba2fc ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200006bb70c : jrcxz 0x200006bb76d ; ret
0x00000200006bc1d5 : jrcxz 0x200006bc238 ; ret
0x00000200006bca6d : jrcxz 0x200006bcab3 ; pop rsi ; ret
0x00000200006bce4c : jrcxz 0x200006bce94 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006bd292 : jrcxz 0x200006bd2da ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006bde41 : jrcxz 0x200006bde8a ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006c3699 : jrcxz 0x200006c36fa ; ret
0x00000200006c3c11 : jrcxz 0x200006c3c5a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006c5b58 : jrcxz 0x200006c5ba0 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006c6364 : jrcxz 0x200006c63ae ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200006c73c3 : jrcxz 0x200006c7426 ; ret
0x00000200006c83d1 : jrcxz 0x200006c8419 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006cc81e : jrcxz 0x200006cc86a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006cd6c6 : jrcxz 0x200006cd70c ; pop rsi ; ret
0x00000200006d3b3a : jrcxz 0x200006d3b86 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006d41e4 : jrcxz 0x200006d422c ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006d42ce : jrcxz 0x200006d4317 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006d48b8 : jrcxz 0x200006d4901 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200006d4a70 : jrcxz 0x200006d4ad1 ; ret
0x00000200006d5990 : jrcxz 0x200006d59f1 ; ret
0x00000200006d5e5c : jrcxz 0x200006d5ea8 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200006d705f : jrcxz 0x200006d70a7 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006d738f : jrcxz 0x200006d73d7 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006d7479 : jrcxz 0x200006d74da ; ret
0x00000200006d7ecf : jrcxz 0x200006d7f30 ; ret
0x00000200006d951d : jrcxz 0x200006d9569 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006daab8 : jrcxz 0x200006dab02 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200006daeac : jrcxz 0x200006daef8 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006dbe27 : jrcxz 0x200006dbe70 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006dbf29 : jrcxz 0x200006dbf6f ; pop rsi ; ret
0x00000200006dc028 : jrcxz 0x200006dc06e ; pop rsi ; ret
0x00000200006dc10c : jrcxz 0x200006dc152 ; pop rsi ; ret
0x00000200006dc1d1 : jrcxz 0x200006dc232 ; ret
0x00000200006dc2a3 : jrcxz 0x200006dc306 ; ret
0x00000200006dc3ee : jrcxz 0x200006dc437 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006dc6b8 : jrcxz 0x200006dc701 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006dd1ac : jrcxz 0x200006dd20f ; ret
0x00000200006dd243 : jrcxz 0x200006dd2a6 ; ret
0x00000200006ddc57 : jrcxz 0x200006ddca0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006dde46 : jrcxz 0x200006dde8f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006df4ba : jrcxz 0x200006df51d ; ret
0x00000200006dfa45 : jrcxz 0x200006dfa8e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006dfddc : jrcxz 0x200006dfe26 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200006e0697 : jrcxz 0x200006e06e0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006e0ed3 : jrcxz 0x200006e0f34 ; ret
0x00000200006e2486 : jrcxz 0x200006e24cf ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006e3b22 : jrcxz 0x200006e3b6e ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006e4eee : jrcxz 0x200006e4f37 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006e5ee0 : jrcxz 0x200006e5f2a ; pop rdi ; pop r13 ; pop r12 ; ret
0x00000200006e5fcd : jrcxz 0x200006e6019 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006e64df : jrcxz 0x200006e6527 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006e6673 : jrcxz 0x200006e66b9 ; pop rdi ; ret
0x00000200006e6b78 : jrcxz 0x200006e6bbe ; pop rsi ; ret
0x00000200006e6e72 : jrcxz 0x200006e6ed3 ; ret
0x00000200006e72ff : jrcxz 0x200006e734b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006e7582 : jrcxz 0x200006e75e5 ; ret
0x00000200006e7d05 : jrcxz 0x200006e7d51 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006e9763 : jrcxz 0x200006e97ac ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006f4f4f : jrcxz 0x200006f4f98 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006f630a : jrcxz 0x200006f6353 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006f6d69 : jrcxz 0x200006f6db1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006f7716 : jrcxz 0x200006f775e ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006f7843 : jrcxz 0x200006f788c ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000701f83 : jrcxz 0x20000701fe4 ; ret
0x0000020000704d42 : jrcxz 0x20000704da5 ; ret
0x000002000070d09f : jrcxz 0x2000070d0e9 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000070e9a6 : jrcxz 0x2000070ea09 ; ret
0x0000020000710576 : jrcxz 0x200007105d9 ; ret
0x0000020000710646 : jrcxz 0x200007106a9 ; ret
0x000002000071297b : jrcxz 0x200007129de ; ret
0x0000020000715257 : jrcxz 0x2000071529d ; pop rsi ; ret
0x0000020000718388 : jrcxz 0x200007183d2 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200007198e0 : jrcxz 0x2000071992c ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000072496d : jrcxz 0x200007249b9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000724b9a : jrcxz 0x20000724be6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000727bbd : jrcxz 0x20000727c06 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000729661 : jrcxz 0x200007296aa ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000072b4de : jrcxz 0x2000072b528 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000077cc31 : jrcxz 0x2000077cbfa ; ret 0x49ff
0x0000020000791620 : jrcxz 0x20000791668 ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000791e35 : jrcxz 0x20000791e7e ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000792086 : jrcxz 0x200007920cf ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000793ca3 : jrcxz 0x20000793cef ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200007942a1 : jrcxz 0x20000794302 ; ret
0x000002000079455b : jrcxz 0x200007945a4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000794c0f : jrcxz 0x20000794c5b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200007956a6 : jrcxz 0x200007956ef ; pop rdi ; pop r13 ; pop rbp ; ret
0x0000020000795710 : jrcxz 0x20000795773 ; ret
0x0000020000795d18 : jrcxz 0x20000795d64 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000795f05 : jrcxz 0x20000795f4d ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007960a7 : jrcxz 0x20000796108 ; ret
0x00000200007974f8 : jrcxz 0x20000797541 ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000797aed : jrcxz 0x20000797b39 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200007989d4 : jrcxz 0x20000798a1d ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000079917e : jrcxz 0x20000799120 ; dec dword ptr [rax - 0x75] ; ret
0x00000200007995ee : jrcxz 0x2000079964f ; ret
0x000002000079986a : jrcxz 0x200007998cb ; ret
0x000002000079acf8 : jrcxz 0x2000079ad59 ; ret
0x000002000079b2a5 : jrcxz 0x2000079b2ed ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000079b7cd : jrcxz 0x2000079b82e ; ret
0x000002000079ba45 : jrcxz 0x2000079ba8e ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000079c6ee : jrcxz 0x2000079c737 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000079dd44 : jrcxz 0x2000079dda7 ; ret
0x000002000079e168 : jrcxz 0x2000079e1c9 ; ret
0x000002000079fb1f : jrcxz 0x2000079fb6b ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200007a0f58 : jrcxz 0x200007a0f9e ; pop rsi ; ret
0x00000200007a1396 : jrcxz 0x200007a13f7 ; ret
0x00000200007a1856 : jrcxz 0x200007a18b7 ; ret
0x00000200007a2a16 : jrcxz 0x200007a2a77 ; ret
0x00000200007a531f : jrcxz 0x200007a5380 ; ret
0x00000200007a56d6 : jrcxz 0x200007a5722 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200007a64b5 : jrcxz 0x200007a64fd ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200007a6670 : jrcxz 0x200007a66bc ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200007a8871 : jrcxz 0x200007a88d2 ; ret
0x00000200007a910d : jrcxz 0x200007a9155 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200007ab52c : jrcxz 0x200007ab4b3 ; ret
0x00000200007abf08 : jrcxz 0x200007abf51 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007ac792 : jrcxz 0x200007ac7f3 ; ret
0x00000200007acff4 : jrcxz 0x200007ad057 ; ret
0x00000200007ad808 : jrcxz 0x200007ad850 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007b003c : jrcxz 0x200007b009d ; ret
0x00000200007b11ab : jrcxz 0x200007b11f4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007b2475 : jrcxz 0x200007b24bb ; pop rsi ; ret
0x00000200007b2cbf : jrcxz 0x200007b2d20 ; ret
0x00000200007b3bd5 : jrcxz 0x200007b3c1e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007b62ce : jrcxz 0x200007b6317 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007b6b7c : jrcxz 0x200007b6bdd ; ret
0x00000200007b72df : jrcxz 0x200007b7327 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200007b7a33 : jrcxz 0x200007b7a94 ; ret
0x00000200007b80a6 : jrcxz 0x200007b80f2 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200007b8356 : jrcxz 0x200007b83b9 ; ret
0x00000200007b886d : jrcxz 0x200007b88ce ; ret
0x00000200007b8c7f : jrcxz 0x200007b8ce0 ; ret
0x00000200007b9c0b : jrcxz 0x200007b9c6c ; ret
0x00000200007b9de5 : jrcxz 0x200007b9e46 ; ret
0x00000200007ba18a : jrcxz 0x200007ba1eb ; ret
0x00000200007ba70e : jrcxz 0x200007ba76f ; ret
0x00000200007ba8df : jrcxz 0x200007ba940 ; ret
0x00000200007bcf69 : jrcxz 0x200007bcfb1 ; pop rsp ; pop rdi ; pop rbp ; ret
0x00000200007bd0e1 : jrcxz 0x200007bd12a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007bd14f : jrcxz 0x200007bd197 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007bd24b : jrcxz 0x200007bd291 ; pop rsp ; ret
0x00000200007cf1d2 : jrcxz 0x200007cf233 ; ret
0x00000200007cf3dd : jrcxz 0x200007cf43e ; ret
0x00000200007cf7bc : jrcxz 0x200007cf808 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200007cfdcf : jrcxz 0x200007cfdc5 ; add eax, dword ptr [rax - 0x76] ; fild word ptr [rdi + rcx - 0x4a] ; ret
0x00000200007cff04 : jrcxz 0x200007cff4d ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200007d0810 : jrcxz 0x200007d0871 ; ret
0x00000200007d0945 : jrcxz 0x200007d098e ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200007d0d80 : jrcxz 0x200007d0dc8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007d0f85 : jrcxz 0x200007d0fe6 ; ret
0x00000200007d12cf : jrcxz 0x200007d1318 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007d23d7 : jrcxz 0x200007d2420 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200007d26d0 : jrcxz 0x200007d2718 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007d485f : jrcxz 0x200007d48a7 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007d4a56 : jrcxz 0x200007d4a9e ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007d4dcf : jrcxz 0x200007d4e18 ; pop rsi ; pop r13 ; pop rbp ; ret
0x00000200007d589a : jrcxz 0x200007d58e2 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000000a5d6 : js 0x2000000a5e2 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000000a606 : js 0x2000000a600 ; mov rax, rdx ; ret
0x000002000000a606 : js 0x2000000a601 ; mov rax, rdx ; ret
0x000002000000d682 : js 0x2000000d6d3 ; add esp, 0x50 ; pop r14 ; ret
0x00000200000150c2 : js 0x20000015128 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000001e11c : js 0x2000001e128 ; add byte ptr [rax], al ; ret
0x000002000001f9c6 : js 0x2000001f9cf ; xor al, al ; ret
0x0000020000026425 : js 0x2000002642f ; mov dword ptr [r10], ecx ; ret
0x00000200000296eb : js 0x200000296f8 ; add rsp, 0x28 ; ret
0x000002000002ceb5 : js 0x2000002cefa ; jmp 0x2000002ce7f
0x000002000002db8b : js 0x2000002db96 ; add byte ptr [rdi + rcx - 0x44], al ; ret
0x000002000003872b : js 0x2000003873d ; mov rax, rdx ; ret
0x000002000003872b : js 0x2000003873e ; mov rax, rdx ; ret
0x00000200000391b1 : js 0x200000391e0 ; ret
0x000002000003ddb9 : js 0x2000003de0c ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000003ea88 : js 0x2000003ea95 ; add rsp, 0x28 ; ret
0x000002000003f640 : js 0x2000003f624 ; or al, byte ptr [rax] ; sti ; add rsp, 0x28 ; ret
0x0000020000040694 : js 0x20000040640 ; add byte ptr [r13 - 0x74f88625], r8b ; ret
0x000002000004829c : js 0x20000048300 ; pop rbx ; ret
0x0000020000050fae : js 0x20000050fd0 ; push qword ptr [rbp + rbp*8 + 0x49] ; mov eax, eax ; ret
0x000002000005265e : js 0x200000526b1 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000058fbe : js 0x20000058fc8 ; mov al, dl ; ret
0x0000020000058fbe : js 0x20000058fc9 ; mov al, dl ; ret
0x000002000006d050 : js 0x2000006d072 ; add byte ptr [rcx + rax - 0x3d], dh ; xor eax, eax ; ret
0x0000020000074286 : js 0x200000742c8 ; lea rax, qword ptr [rcx + 0x30] ; add rax, r8 ; ret
0x000002000008cdf7 : js 0x2000008ce47 ; add esp, 0x50 ; pop rdi ; ret
0x000002000008f08b : js 0x2000008f0a4 ; add byte ptr [rbp + 0x25], dh ; xor al, al ; ret
0x0000020000095cce : js 0x20000095d3d ; or dword ptr [rax], eax ; add rcx, rdx ; jmp rcx
0x0000020000097b77 : js 0x20000097bc3 ; pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000b85fa : js 0x200000b865e ; pop rsi ; ret
0x00000200000bc4ac : js 0x200000bc4b8 ; add byte ptr [rax], al ; ret
0x00000200000bf6c4 : js 0x200000bf6d5 ; and al, 0 ; ret
0x00000200000bf6cc : js 0x200000bf6dd ; and al, 0 ; ret
0x00000200000c6c3a : js 0x200000c6c81 ; pop rbp ; pop rbp ; ret
0x00000200000c7df9 : js 0x200000c7df3 ; ret 0xf01
0x00000200000c84b7 : js 0x200000c852a ; or eax, 0xbc0f4400 ; ret
0x00000200000cf914 : js 0x200000cf8b9 ; sub eax, 0x3b446600 ; ret 0x820f
0x00000200000d3a96 : js 0x200000d3ac1 ; adc byte ptr [rbp + rax + 0x48], dh ; add esp, 8 ; ret
0x00000200000d3f53 : js 0x200000d3f7e ; adc byte ptr [rbp + rax + 0x48], dh ; add esp, 8 ; ret
0x00000200000d5182 : js 0x200000d5183 ; xor eax, eax ; ret
0x00000200000d74a8 : js 0x200000d74a2 ; ret
0x00000200000dea0d : js 0x200000dea5d ; add esp, 0x50 ; pop rbp ; ret
0x00000200000e1638 : js 0x200000e15c7 ; ret 0xba0f
0x00000200000e31e7 : js 0x200000e324d ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000e8358 : js 0x200000e8377 ; add byte ptr [rax], al ; jne 0x200000e8369 ; mov al, 1 ; ret
0x00000200000ebc72 : js 0x200000ebcc5 ; mov ecx, esi ; mov r8, rbx ; call 0x20000037ec1
0x00000200000ebffe : js 0x200000ec062 ; pop rbx ; ret
0x00000200000f898b : js 0x200000f89ca ; ret 0x3a74
0x00000200000f898a : js 0x200000f89cb ; ret 0x3a74
0x00000200000f97e0 : js 0x200000f981f ; ret
0x00000200000fa138 : js 0x200000fa188 ; add esp, 0x50 ; pop rbp ; ret
0x00000200000ff2c6 : js 0x200000ff316 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000102a0a : js 0x2000010297d ; add ebx, ebx ; jmp 0x200001029e0
0x000002000011398e : js 0x200001139de ; add esp, 0x60 ; pop rbp ; ret
0x0000020000113b83 : js 0x20000113bd4 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000117b7f : js 0x20000117b92 ; test cl, 0x3f ; je 0x20000117b91 ; inc eax ; ret
0x0000020000117b97 : js 0x20000117baa ; test cl, 0x20 ; je 0x20000117ba9 ; inc eax ; ret
0x000002000011845b : js 0x200001184ae ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000011d072 : js 0x2000011d069 ; mov rax, rdx ; ret
0x000002000011d072 : js 0x2000011d06a ; mov rax, rdx ; ret
0x000002000011eff7 : js 0x2000011f00f ; add byte ptr [rsp + rcx*8 - 1], dh ; ret
0x0000020000128e9e : js 0x20000128eb6 ; sub r9, rdx ; mov qword ptr [r8], r9 ; ret
0x000002000012935b : js 0x200001293ab ; add esp, 0x50 ; pop rdi ; ret
0x000002000012db80 : js 0x2000012dbd0 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000130b18 : js 0x20000130b47 ; ret 0x8944
0x0000020000130b17 : js 0x20000130b48 ; ret 0x8944
0x0000020000137c40 : js 0x20000137c47 ; add byte ptr [rax], al ; ret
0x000002000013afbe : js 0x2000013b00e ; add esp, 0x60 ; pop rbp ; ret
0x0000020000141f62 : js 0x20000141fb2 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000144d8d : js 0x20000144d94 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000152b50 : js 0x20000152b5c ; nop ; nop ; add rsp, 0x10 ; ret
0x00000200000095ba : js 0x2000016126a ; ret
0x000002000000a4e2 : js 0x2000016142c ; ret
0x000002000016d549 : js 0x2000016d53f ; in al, dx ; inc dword ptr [rcx - 0xa] ; ret 0xf04
0x000002000016df07 : js 0x2000016df78 ; and ecx, edx ; mov word ptr [r9 + 0x68], cx ; ret
0x000002000019ca83 : js 0x2000019cada ; push rsi ; ret
0x00000200001b078d : js 0x200001b07b2 ; add byte ptr [rbx], ch ; ret
0x00000200001b33f6 : js 0x200001b3407 ; sub rdx, r9 ; mov qword ptr [r8], rdx ; ret
0x00000200001ba8b4 : js 0x200001ba864 ; dec esp ; add rsp, 0x28 ; ret
0x00000200001bc338 : js 0x200001bc38a ; mov eax, dword ptr [rip + 0x13d510] ; call rax
0x00000200001bc337 : js 0x200001bc38b ; mov eax, dword ptr [rip + 0x13d510] ; call rax
0x00000200001beb61 : js 0x200001beb8c ; mov rax, qword ptr [rip + 0x13ace6] ; call rax
0x00000200001bf7bf : js 0x200001bf80f ; add esp, 0x60 ; pop rbp ; ret
0x00000200001c05e8 : js 0x200001c0638 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001c0714 : js 0x200001c0727 ; mov dword ptr [rax], edi ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c1ad4 : js 0x200001c1b58 ; adc eax, dword ptr [rax] ; call r9
0x00000200001c7b05 : js 0x200001c7b55 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001c8628 : js 0x200001c8678 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001cc2ea : js 0x200001cc336 ; pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200001db3e7 : js 0x200001db3fe ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200001e1db0 : js 0x200001e1e01 ; add esp, 0x50 ; pop r14 ; ret
0x00000200001eac43 : js 0x200001eac93 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001ead6c : js 0x200001eadbc ; add esp, 0x60 ; pop rdi ; ret
0x00000200001ef3df : js 0x200001ef42f ; add esp, 0x60 ; pop rdi ; ret
0x00000200001face8 : js 0x200001fad39 ; add esp, 0x50 ; pop r14 ; ret
0x00000200001fc18c : js 0x200001fc1a2 ; add byte ptr [rbx], al ; ret 0xc23b
0x0000020000201e76 : js 0x20000201ec6 ; add esp, 0x50 ; pop rdi ; ret
0x00000200002072c3 : js 0x20000207313 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000209ca6 : js 0x20000209cf6 ; add esp, 0x50 ; pop rbp ; ret
0x000002000020bcce : js 0x2000020bcdd ; mov eax, 0xc00000bb ; ret
0x0000020000212f9f : js 0x20000212fa8 ; add byte ptr [rax], al ; ret
0x0000020000215d39 : js 0x20000215d8a ; add esp, 0x50 ; pop r14 ; ret
0x0000020000215e49 : js 0x20000215e9a ; add esp, 0x50 ; pop r14 ; ret
0x000002000021719a : js 0x200002171ea ; add esp, 0x60 ; pop rdi ; ret
0x000002000021d26c : js 0x2000021d2bd ; add esp, 0x50 ; pop r14 ; ret
0x000002000022bd76 : js 0x2000022bd8e ; mov rcx, qword ptr [rsi] ; call 0x20000148077
0x0000020000235061 : js 0x200002350b1 ; add esp, 0x50 ; pop rdi ; ret
0x000002000023f438 : js 0x2000023f43f ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000024044c : js 0x20000240453 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000243692 : js 0x20000243699 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000024548c : js 0x20000245493 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000246300 : js 0x20000246307 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000024a68c : js 0x2000024a693 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200003c6908 : js 0x200003c6958 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003c736f : js 0x200003c735c ; ret
0x00000200003cadaa : js 0x200003cadfa ; add esp, 0x60 ; pop rdi ; ret
0x00000200003cc974 : js 0x200003cc9c4 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003cdc0d : js 0x200003cdc60 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003cf4e0 : js 0x200003cf530 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003d6fb1 : js 0x200003d6fb9 ; dec dword ptr [rcx + rcx*4 + 0x2d] ; pop rbp ; ret 0xfff4
0x00000200003d6fb0 : js 0x200003d6fba ; dec dword ptr [rcx + rcx*4 + 0x2d] ; pop rbp ; ret 0xfff4
0x00000200003df7d3 : js 0x200003df825 ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003df8ee : js 0x200003df93f ; add esp, 0x50 ; pop r14 ; ret
0x00000200003e11d4 : js 0x200003e115e ; ret 0x48ff
0x00000200003e5c24 : js 0x200003e5c31 ; ret 0xebff
0x00000200003e7658 : js 0x200003e76a8 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003eea2f : js 0x200003eea7f ; xor ecx, esp ; call 0x2000013ac76
0x00000200003f2a1a : js 0x200003f2a6a ; add esp, 0x50 ; pop rdi ; ret
0x00000200003fec51 : js 0x200003feca4 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000400aa4 : js 0x20000400a33 ; ret
0x00000200004016e8 : js 0x20000401738 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000401fd8 : js 0x20000402012 ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x0000020000405ae5 : js 0x20000405b35 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000408d13 : js 0x20000408d63 ; add esp, 0x50 ; pop rdi ; ret
0x000002000040aa47 : js 0x2000040aa67 ; add byte ptr [rax], al ; cmp eax, 1 ; je 0x2000040aa5a ; ret
0x00000200004121fa : js 0x200004121f4 ; ret 0x7503
0x000002000041f7c2 : js 0x2000041f813 ; add esp, 0x50 ; pop r15 ; ret
0x00000200004261ac : js 0x200004261fd ; add esp, 0x50 ; pop r14 ; ret
0x0000020000428984 : js 0x2000042891c ; ret
0x000002000042da91 : js 0x2000042da7f ; sbb esi, edi ; ret
0x000002000042ddc1 : js 0x2000042ddca ; mov dl, r15b ; call 0x200000564a8
0x000002000042e2bc : js 0x2000042e24b ; ret
0x0000020000431523 : js 0x20000431574 ; add esp, 0x50 ; pop r15 ; ret
0x000002000043431f : js 0x20000434370 ; add esp, 0x50 ; pop r15 ; ret
0x00000200004360a2 : js 0x200004360c6 ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000438ca2 : js 0x20000438c31 ; ret
0x000002000043be9c : js 0x2000043beec ; add esp, 0x50 ; pop rdi ; ret
0x000002000043e594 : js 0x2000043e580 ; ret
0x0000020000441b79 : js 0x20000441b08 ; ret
0x0000020000442871 : js 0x200004428a4 ; add byte ptr [rbp + rax + 0x48], dh ; add eax, 0x10 ; ret
0x0000020000442a95 : js 0x20000442a22 ; sar byte ptr [rcx + 0xd], 0x8b ; ret 0x8b48
0x00000200004554e4 : js 0x200004554ef ; setb al ; movzx eax, al ; ret
0x00000200004556c7 : js 0x20000455717 ; add esp, 0x60 ; pop rbp ; ret
0x000002000045685c : js 0x20000456864 ; or dword ptr [rax + 8], 0x20 ; ret
0x0000020000457bea : js 0x20000457c3b ; add esp, 0x50 ; pop r14 ; ret
0x00000200004583d0 : js 0x20000458420 ; add esp, 0x60 ; pop rdi ; ret
0x000002000045ca2e : js 0x2000045ca81 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000462986 : js 0x20000462a02 ; adc cl, byte ptr [rax + 0x63] ; ret 0x8d48
0x000002000046530c : js 0x2000046531b ; add rsp, 0x60 ; pop rbx ; ret
0x00000200004688bb : js 0x2000046890e ; add esp, 0x50 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000046eab9 : js 0x2000046eb08 ; mov ecx, edi ; call r12
0x000002000046fb06 : js 0x2000046fb56 ; add esp, 0x60 ; pop rbx ; ret
0x0000020000470a13 : js 0x20000470a63 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000471127 : js 0x20000471147 ; test cl, 8 ; jne 0x2000047113a ; ret
0x00000200004743df : js 0x20000474429 ; pop rdi ; pop r14 ; pop rdi ; pop rbx ; ret
0x000002000047ce6d : js 0x2000047ce5a ; ret 0xfff6
0x0000020000488cfe : js 0x20000488d4e ; add esp, 0x50 ; pop rdi ; ret
0x00000200004953bd : js 0x20000495340 ; jmp 0x20000495365
0x00000200004a3bdd : js 0x200004a3c04 ; ret
0x00000200004a472f : js 0x200004a473c ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200004a4934 : js 0x200004a48c3 ; ret 0x8b48
0x00000200004a4a45 : js 0x200004a49d2 ; sar byte ptr [rcx + 0xd], 0x8b ; ret 0x8b48
0x00000200004a49c6 : js 0x200004a4a16 ; add esp, 0x50 ; pop rbx ; ret
0x00000200004a4af2 : js 0x200004a4b42 ; add esp, 0x50 ; pop rbx ; ret
0x00000200004bda28 : js 0x200004bda8d ; mov rcx, rsi ; call 0x200000e7da8
0x00000200004c012c : js 0x200004c0142 ; ret
0x00000200004c7c0e : js 0x200004c7c61 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004c8397 : js 0x200004c83a3 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004c8f06 : js 0x200004c8f00 ; ret
0x00000200004d51d1 : js 0x200004d521b ; pop rbp ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200004d875a : js 0x200004d86e9 ; ret
0x00000200004ec1b8 : js 0x200004ec1a4 ; ret 0xc6b6
0x00000200004f1dea : js 0x200004f1df1 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004f530c : js 0x200004f535f ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004fbf7d : js 0x200004fbf9c ; mov rcx, qword ptr [rbp - 0x30] ; call 0x200001208c9
0x00000200004fc98f : js 0x200004fc9e0 ; add esp, 0x50 ; pop r15 ; ret
0x00000200004fc98f : js 0x200004fc9e2 ; add esp, 0x50 ; pop r15 ; ret
0x00000200004fd633 : js 0x200004fd683 ; add esp, 0x50 ; pop rbp ; ret
0x00000200004fedb1 : js 0x200004fee01 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000503ded : js 0x20000503e3d ; add esp, 0x60 ; pop rdi ; ret
0x0000020000504cf4 : js 0x20000504d57 ; ret
0x000002000050a2fc : js 0x2000050a305 ; xor eax, eax ; ret
0x000002000050a7d9 : js 0x2000050a7e2 ; xor eax, eax ; ret
0x000002000050cdcb : js 0x2000050ce1c ; xor ecx, esp ; call 0x2000013ac77
0x000002000050cdca : js 0x2000050ce1d ; xor ecx, esp ; call 0x2000013ac78
0x000002000050e936 : js 0x2000050e942 ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000050fa40 : js 0x2000050f9cf ; ret
0x0000020000514026 : js 0x20000514077 ; xor ecx, esp ; call 0x2000013ac77
0x000002000051a278 : js 0x2000051a2c8 ; add esp, 0x50 ; pop rbp ; ret
0x000002000051c2b2 : js 0x2000051c241 ; ret
0x000002000051f094 : js 0x2000051f045 ; ret 0x8bff
0x000002000051fe71 : js 0x2000051fed7 ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000521be3 : js 0x20000521c35 ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005222f4 : js 0x20000522354 ; ret 0x85ff
0x0000020000527888 : js 0x2000052781b ; fsubr st(0) ; loopne 0x2000052789b ; ret 0x4cff
0x00000200005284fd : js 0x200005284eb ; jge 0x200005284f8 ; ret 0x48ff
0x00000200005284fc : js 0x200005284ec ; jge 0x200005284f9 ; ret 0x48ff
0x000002000052c50b : js 0x2000052c4ee ; dec dword ptr [rax - 0x39] ; ret 0x5d00
0x0000020000530d1d : js 0x20000530d6d ; add esp, 0x60 ; pop rdi ; ret
0x0000020000537560 : js 0x2000053754e ; sbb al, byte ptr [rbx] ; ret 0x4dff
0x000002000053755f : js 0x2000053754f ; sbb al, byte ptr [rbx] ; ret 0x4dff
0x000002000053aeee : js 0x2000053af3e ; add esp, 0x60 ; pop rdi ; ret
0x0000020000540edb : js 0x20000540f2b ; add esp, 0x60 ; pop rdi ; ret
0x000002000054c82a : js 0x2000054c87a ; add esp, 0x60 ; pop rdi ; ret
0x0000020000550d7b : js 0x20000550dce ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000055b990 : js 0x2000055b91f ; ret
0x000002000056041a : js 0x200005603a9 ; ret 0xd148
0x00000200005668d7 : js 0x20000566927 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000566ff4 : js 0x20000566f83 ; ret
0x00000200003e2e07 : js 0x200005823bb ; mov al, r8b ; ret
0x0000020000583abf : js 0x20000583aab ; ret
0x000002000059381c : js 0x20000593809 ; ret
0x00000200005a2bbe : js 0x200005a2bc7 ; mov rcx, r15 ; call 0x2000061eea3
0x00000200005a7ab4 : js 0x200005a7aa4 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004f61c5 : js 0x200005e5c58 ; call 0x20000124405
0x00000200005ee0db : js 0x200005ee126 ; sete al ; mov eax, r8d ; ret
0x00000200005ee0da : js 0x200005ee127 ; sete al ; mov eax, r8d ; ret
0x00000200006013f4 : js 0x20000601397 ; mov bl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x000002000060bd27 : js 0x2000060bd14 ; ret
0x000002000060bd31 : js 0x2000060bd34 ; ret
0x0000020000618fc4 : js 0x20000619012 ; ret
0x000002000061b684 : js 0x2000061b6a1 ; ret
0x00000200006209ab : js 0x200006209fb ; add esp, 0x60 ; pop rdi ; ret
0x0000020000621d59 : js 0x20000621da9 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000622c1c : js 0x20000622c29 ; xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000623829 : js 0x20000623879 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000624571 : js 0x200006245c1 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006266a2 : js 0x200006266f2 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000627843 : js 0x20000627894 ; add esp, 0x50 ; pop r14 ; ret
0x000002000062c48e : js 0x2000062c495 ; add al, al ; ret
0x0000020000630141 : js 0x20000630192 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000630323 : js 0x20000630374 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000630a4c : js 0x20000630a9d ; add esp, 0x50 ; pop r14 ; ret
0x00000200006381cc : js 0x200006381db ; ret
0x000002000063d920 : js 0x2000063d970 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000648b2d : js 0x20000648b7d ; add esp, 0x50 ; pop rdi ; ret
0x0000020000652298 : js 0x2000065229b ; ret 0x5c03
0x000002000065486a : js 0x200006548bd ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000065507d : js 0x2000065500c ; ret
0x000002000066196e : js 0x20000661968 ; ret
0x000002000066670c : js 0x2000066675c ; add esp, 0x50 ; pop rdi ; ret
0x0000020000667d8e : js 0x20000667d91 ; ret
0x0000020000667f69 : js 0x20000667fb9 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000673746 : js 0x20000673797 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000673ba9 : js 0x20000673bf9 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000674d58 : js 0x20000674da8 ; add esp, 0x60 ; pop rdi ; ret
0x00000200006778ea : js 0x2000067793a ; add esp, 0x60 ; pop rdi ; ret
0x000002000067a354 : js 0x2000067a3a5 ; add esp, 0x50 ; pop r14 ; ret
0x00000200006819d6 : js 0x20000681a29 ; add esp, 0x80 ; pop rbx ; ret
0x0000020000681f27 : js 0x20000681f77 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006835e7 : js 0x20000683638 ; add esp, 0x50 ; pop r14 ; ret
0x00000200006840fe : js 0x2000068414e ; add esp, 0x60 ; pop rdi ; ret
0x0000020000695d53 : js 0x20000695d5c ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006a2c88 : js 0x200006a2c94 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x00000200006a7eaf : js 0x200006a7f01 ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006b2bec : js 0x200006b2b73 ; ret 0x306
0x00000200006b377a : js 0x200006b37ca ; add esp, 0x50 ; pop rdi ; ret
0x00000200006b47c5 : js 0x200006b4815 ; add esp, 0x60 ; pop rdi ; ret
0x00000200006b4945 : js 0x200006b4995 ; add esp, 0x60 ; pop rdi ; ret
0x00000200006b586a : js 0x200006b58ba ; add esp, 0x60 ; pop rdi ; ret
0x00000200006b5dcf : js 0x200006b5e1f ; add esp, 0x60 ; pop rdi ; ret
0x00000200006b916d : js 0x200006b91c8 ; call 0x200006c7e77
0x00000200006c49dd : js 0x200006c4a5d ; test byte ptr [rcx - 0x75], 0x46 ; sub byte ptr [rax - 1], cl ; ret
0x00000200006c649e : js 0x200006c64ef ; add esp, 0x50 ; pop r14 ; ret
0x00000200006c901e : js 0x200006c906f ; add esp, 0x50 ; pop r15 ; ret
0x00000200006dd110 : js 0x200006dd161 ; add esp, 0x50 ; pop r14 ; ret
0x00000200006dd9b0 : js 0x200006dd93f ; ret
0x00000200006ddfac : js 0x200006ddf3b ; ret
0x00000200006e0374 : js 0x200006e03c5 ; add esp, 0x50 ; pop r14 ; ret
0x00000200006e0962 : js 0x200006e08f1 ; ret
0x00000200006f3884 : js 0x200006f38e4 ; ret 0x1ff
0x000002000071395c : js 0x200007139ad ; add esp, 0x50 ; pop r14 ; ret
0x00000200007150dc : js 0x2000071512d ; add esp, 0x50 ; pop r14 ; ret
0x0000020000715735 : js 0x2000071573c ; add byte ptr [rax], dl ; ret
0x0000020000715735 : js 0x20000715740 ; add byte ptr [rax], dl ; ret
0x000002000071ab46 : js 0x2000071ab96 ; add esp, 0x60 ; pop rdi ; ret
0x000002000071ca55 : js 0x2000071caa7 ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000077935f : js 0x20000779366 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000780112 : js 0x20000780119 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000781017 : js 0x2000078101e ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000781dc6 : js 0x20000781dcd ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000782c72 : js 0x20000782c79 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000783c22 : js 0x20000783c29 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000783da4 : js 0x20000783de3 ; ret
0x0000020000784bf4 : js 0x20000784bfb ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000078da1c : js 0x2000078d9af ; sub byte ptr [r8 + 3], r9b ; ret 0x8948
0x0000020000798e1b : js 0x20000798e6b ; test ecx, ecx ; jne 0x20000798e28 ; ret
0x0000020000798e1a : js 0x20000798e6c ; test ecx, ecx ; jne 0x20000798e29 ; ret
0x00000200007a1e1e : js 0x200007a1dad ; ret 0x9489
0x00000200007b0693 : js 0x200007b06e3 ; add esp, 0x50 ; pop rbp ; ret
0x00000200007b1c3d : js 0x200007b1c8d ; add esp, 0x60 ; pop rdi ; ret
0x00000200007bc245 : js 0x200007bc24e ; add byte ptr [rax], al ; call 0x200003e5f8b
0x00000200007c38ed : js 0x200007c38db ; jno 0x200007c38e4 ; ret
0x00000200007c394b : js 0x200007c3939 ; adc ebp, edi ; ret
0x00000200007d0a5b : js 0x200007d0aab ; add esp, 0x60 ; pop rbp ; ret
0x00000200007d4561 : js 0x200007d45b1 ; add esp, 0x60 ; pop rdi ; ret
0x00000200007d56ac : js 0x200007d563b ; ret
0x00000200003d2870 : lahf ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x1d], cl ; test esp, edi ; ret 0x44ff
0x0000020000149285 : lahf ; add byte ptr [rax], al ; add cl, ch ; mov dl, 0xcd ; add byte ptr [rax], al ; ret
0x00000200006b7cd7 : lahf ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x55 ; loopne 0x200006b7cec ; ret 0xc13b
0x000002000014b285 : lahf ; add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xad ; add byte ptr [rax], al ; ret
0x00000200004e5e06 : lahf ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000120cba : lahf ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200000bfda9 : lahf ; and ch, dh ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xdc3
0x0000020000512835 : lahf ; and eax, 0x5ee8ffe1 ; ret 0xffbe
0x0000020000527d97 : lahf ; call 0x20000148074
0x0000020000527d96 : lahf ; call 0x20000148075
0x00000200006dcf62 : lahf ; call rax
0x000002000070163d : lahf ; cli ; ret
0x00000200005f066d : lahf ; cmc ; dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x000002000017f275 : lahf ; cmp dword ptr [rdx], ebx ; add byte ptr [rcx - 0x75], al ; ret 0x523
0x0000020000726156 : lahf ; dec dword ptr [rax + 0x2b] ; ret
0x0000020000726273 : lahf ; dec dword ptr [rax - 0x75] ; ret
0x000002000069cdd1 : lahf ; dec dword ptr [rax - 0x7d] ; ret
0x000002000065123f : lahf ; inc dword ptr [rbp - 0xf68b40] ; ret
0x00000200005852d9 : lahf ; jo 0x200005852c7 ; push rsi ; ret
0x00000200001934e5 : lahf ; lock dec dword ptr [rax - 0x75] ; ret 0x3b48
0x00000200007bb346 : lahf ; mov dh, 0xff ; add rsp, 0x28 ; ret
0x00000200004527e7 : lahf ; mov word ptr [rax], es ; add byte ptr [rax], al ; call 0x2000007d088
0x00000200005156ed : lahf ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48ff
0x0000020000564c97 : lahf ; movzx eax, dx ; jmp 0x20000564c7b
0x0000020000189c1e : lahf ; pop rax ; add dword ptr [rax], eax ; add cl, ch ; xchg eax, esp ; ret 0xffee
0x0000020000134c9d : lahf ; push rax ; cld ; dec dword ptr [rax - 0x75] ; ret
0x000002000001b618 : lahf ; ret
0x000002000010c64f : lahf ; ret 0x3345
0x0000020000437e4e : lahf ; ret 0x41ff
0x0000020000623af1 : lahf ; ret 0x48ff
0x0000020000589d57 : lahf ; ret 0x60e9
0x000002000052d948 : lahf ; ret 0x83ff
0x00000200004bd343 : lahf ; ret 0xf7ff
0x000002000071dc1d : lahf ; ret 0xffa3
0x00000200004741ed : lahf ; sahf ; ret 0xf0ff
0x00000200007c56b7 : lahf ; std ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005b20c5 : lahf ; std ; ret
0x00000200001becad : lahf ; stosd dword ptr [rdi], eax ; adc eax, dword ptr [rax] ; call rax
0x00000200001216cd : lahf ; xchg eax, ebp ; add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200005015cd : lahf ; xchg eax, esi ; ret
0x000002000044c295 : lahf ; xor bh, bh ; ret
0x000002000017772c : lahf ; xor r8d, r8d ; mov rdx, rsi ; call rax
0x000002000022e160 : lar ecx, word ptr [rax + 0x33] ; ret
0x00000200004634d5 : lcall ptr [rbx] ; jmp qword ptr [rcx]
0x00000200003f656c : lcall ptr [rdi + 0x5e] ; pop rbx ; ret
0x000002000012e441 : lcall ptr [rdi] ; add byte ptr [rax - 0x75], cl ; ret 0xc748
0x000002000068d9ba : lcall ptr [rdi] ; add byte ptr [rax], al ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000013fb74 : ldmxcsr dword ptr [rsp + 8] ; ret
0x00000200000f0ab9 : lds edx, ptr [rip - 0x3b7cb800] ; push rax ; pop rsi ; ret
0x000002000042afa1 : lds r9d, ptr [r13 + 0x3b] ; ret 0xc076
0x000002000007ec2e : lds rdx, ptr [r8] ; add dh, dh ; ret
0x0000020000703b7e : lea eax, dword ptr [r11 + rdx] ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000069e3d8 : lea eax, dword ptr [r8 + 0x14] ; ret
0x00000200005098db : lea eax, dword ptr [r8 + 0x48] ; ret
0x00000200000edcab : lea eax, dword ptr [r8 + 1] ; ret
0x00000200005352c2 : lea eax, dword ptr [r8 + r8] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200003e4585 : lea eax, dword ptr [r8 + r9] ; ret
0x00000200001bbf8b : lea eax, dword ptr [r9 + 0x30] ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x000002000069e3ce : lea eax, dword ptr [r9 + 0xb] ; ret
0x00000200003e4b85 : lea eax, dword ptr [r9 + r10] ; ret
0x000002000064db0f : lea eax, dword ptr [r9 - 2] ; sub ax, dx ; jmp 0x2000064db33
0x000002000069e3d9 : lea eax, dword ptr [rax + 0x14] ; ret
0x0000020000536e4c : lea eax, dword ptr [rax + 0x18] ; sub rcx, 1 ; jne 0x20000536e52 ; ret
0x00000200005098dc : lea eax, dword ptr [rax + 0x48] ; ret
0x0000020000686873 : lea eax, dword ptr [rax + 0xc] ; sub r9, 1 ; jne 0x20000686867 ; ret
0x00000200000edcac : lea eax, dword ptr [rax + 1] ; ret
0x00000200001d1e47 : lea eax, dword ptr [rax + 8] ; add r10d, -1 ; jne 0x200001d1e25 ; ret
0x000002000000b3f6 : lea eax, dword ptr [rax + 8] ; mov rax, qword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x000002000002b50a : lea eax, dword ptr [rax + 8] ; sub r11, 1 ; jne 0x2000002b4f2 ; ret
0x000002000023bbab : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023bbc8
0x000002000023ef07 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023ef23
0x0000020000244d10 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244d2c
0x0000020000244f8b : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244fa7
0x0000020000248ff8 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000249014
0x000002000024923a : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000249256
0x000002000024bcf4 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000024bd10
0x000002000077f9c6 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077f9e1
0x000002000077fbff : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077fc1a
0x00000200007818be : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x200007818d9
0x0000020000783734 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078374f
0x000002000078cc42 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078cc5d
0x000002000078d1e3 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078d1fe
0x0000020000008802 : lea eax, dword ptr [rax + rax*4] ; lea rax, qword ptr [rdx + rax*8] ; ret
0x00000200005352c3 : lea eax, dword ptr [rax + rax] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200006dc4ec : lea eax, dword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x200006dc500
0x00000200000a225c : lea eax, dword ptr [rax + rcx*8] ; ret
0x00000200003e4586 : lea eax, dword ptr [rax + rcx] ; ret
0x00000200004d55ad : lea eax, dword ptr [rax + rdx*4] ; ret
0x00000200000479ad : lea eax, dword ptr [rax + rdx*8] ; ret
0x000002000042a302 : lea eax, dword ptr [rax - 0x20] ; mov rax, r8 ; ret
0x0000020000081930 : lea eax, dword ptr [rax*4 + 8] ; ret
0x00000200000072ed : lea eax, dword ptr [rax*8 + 0x30] ; ret
0x000002000023b613 : lea eax, dword ptr [rbp + 0x188] ; xor ecx, ecx ; call r9
0x0000020000242f1d : lea eax, dword ptr [rbp + 0x1a8] ; xor ecx, ecx ; call r10
0x0000020000459b8a : lea eax, dword ptr [rbp + 0x67] ; mov rcx, rbx ; call 0x20000545dd0
0x00000200007d0fdf : lea eax, dword ptr [rbp - 0x10] ; lea edx, dword ptr [rdi + 4] ; call 0x200003f8b5d
0x00000200003f547b : lea eax, dword ptr [rbp - 0x10] ; mov qword ptr [rsp + 0x20], rax ; call r12
0x00000200000313d8 : lea eax, dword ptr [rbp - 0x19] ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [rbx]
0x00000200004b6d59 : lea eax, dword ptr [rbp - 0x28] ; mov dl, 1 ; mov rcx, rsi ; call rax
0x0000020000588f39 : lea eax, dword ptr [rbp - 0x30] ; mov edx, r14d ; call rax
0x00000200001a96ed : lea eax, dword ptr [rbp - 0x74ba000c] ; ret 0xb60f
0x0000020000090dd8 : lea eax, dword ptr [rbp - 8] ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x00000200003da249 : lea eax, dword ptr [rbx + 0x1000] ; call rax
0x0000020000516a3a : lea eax, dword ptr [rbx + 0x10] ; mov rcx, r15 ; call 0x2000013c289
0x000002000051f522 : lea eax, dword ptr [rbx + 0x1f] ; lea ecx, dword ptr [rbx + 0x59] ; call 0x20000148559
0x00000200001143a5 : lea eax, dword ptr [rbx + rcx*2] ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000703b7f : lea eax, dword ptr [rbx + rdx] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004a91fa : lea eax, dword ptr [rcx + 0x20] ; ret
0x00000200004a91e2 : lea eax, dword ptr [rcx + 0x24] ; ret
0x00000200004a91ff : lea eax, dword ptr [rcx + 0x2c] ; ret
0x0000020000074289 : lea eax, dword ptr [rcx + 0x30] ; add rax, r8 ; ret
0x00000200001bbf8c : lea eax, dword ptr [rcx + 0x30] ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x0000020000119a7b : lea eax, dword ptr [rcx + 0x3600] ; ret
0x00000200003e1659 : lea eax, dword ptr [rcx + 0x38] ; call 0x2000000a28a
0x0000020000044cc5 : lea eax, dword ptr [rcx + 0x38] ; ret
0x00000200004a9204 : lea eax, dword ptr [rcx + 0x3c] ; ret
0x00000200004a91ec : lea eax, dword ptr [rcx + 0x40] ; ret
0x0000020000032b3d : lea eax, dword ptr [rcx + 0x450] ; ret
0x0000020000447d4a : lea eax, dword ptr [rcx + 0x4c] ; ret
0x00000200004aa064 : lea eax, dword ptr [rcx + 0x510] ; ret
0x000002000022c0e9 : lea eax, dword ptr [rcx + 0x59] ; add rsp, 0x28 ; ret
0x0000020000447d4f : lea eax, dword ptr [rcx + 0x5c] ; ret
0x0000020000447d54 : lea eax, dword ptr [rcx + 0x64] ; ret
0x00000200001d80ac : lea eax, dword ptr [rcx + 0x788] ; ret
0x00000200001d80b4 : lea eax, dword ptr [rcx + 0x790] ; ret
0x00000200000905fe : lea eax, dword ptr [rcx + 0x7b8] ; ret
0x0000020000052669 : lea eax, dword ptr [rcx + 0x80000] ; jmp 0x2000005263a
0x000002000069e3cf : lea eax, dword ptr [rcx + 0xb] ; ret
0x00000200000a0dce : lea eax, dword ptr [rcx + 0xc0] ; ret
0x00000200000b508f : lea eax, dword ptr [rcx + 1] ; call 0x200000d1365
0x00000200006da30a : lea eax, dword ptr [rcx + 1] ; call rdi
0x00000200006d8264 : lea eax, dword ptr [rcx + 1] ; call rsi
0x0000020000721e6e : lea eax, dword ptr [rcx + 1] ; cmovne ecx, eax ; mov eax, ecx ; ret
0x000002000003eca5 : lea eax, dword ptr [rcx + 1] ; ret
0x00000200006dab2c : lea eax, dword ptr [rcx + 2] ; call rdi
0x00000200006d86f8 : lea eax, dword ptr [rcx + 2] ; call rsi
0x00000200003f91ca : lea eax, dword ptr [rcx + 2] ; ret
0x000002000045d7be : lea eax, dword ptr [rcx + 3] ; call rdi
0x0000020000729451 : lea eax, dword ptr [rcx + 4] ; add rsp, 0x38 ; ret
0x00000200003f91dd : lea eax, dword ptr [rcx + 4] ; ret
0x0000020000118e78 : lea eax, dword ptr [rcx + 7] ; and eax, 0xfffffff8 ; shr eax, 3 ; ret
0x0000020000569605 : lea eax, dword ptr [rcx + 8] ; ret
0x000002000013cbc9 : lea eax, dword ptr [rcx + rax - 1] ; ret
0x000002000013cbcf : lea eax, dword ptr [rcx + rax - 2] ; ret
0x000002000013cbd5 : lea eax, dword ptr [rcx + rax - 3] ; ret
0x000002000013cbdb : lea eax, dword ptr [rcx + rax - 4] ; ret
0x000002000013cbe1 : lea eax, dword ptr [rcx + rax - 5] ; ret
0x000002000013cbe7 : lea eax, dword ptr [rcx + rax - 6] ; ret
0x000002000013cbed : lea eax, dword ptr [rcx + rax - 7] ; ret
0x000002000013cbf3 : lea eax, dword ptr [rcx + rax - 8] ; ret
0x0000020000080e7f : lea eax, dword ptr [rcx + rax*4] ; ret
0x0000020000157a0f : lea eax, dword ptr [rcx + rax*8] ; ret
0x0000020000456928 : lea eax, dword ptr [rcx + rcx*2] ; shl rax, 3 ; ret
0x00000200006ae768 : lea eax, dword ptr [rcx + rcx*8] ; add rsp, 0x28 ; ret
0x000002000055df85 : lea eax, dword ptr [rcx + rdx] ; cmp eax, edx ; ja 0x2000055df98 ; mov eax, ecx ; ret
0x00000200001eb11b : lea eax, dword ptr [rcx + rdx] ; ret
0x0000020000658d18 : lea eax, dword ptr [rcx - 0x10] ; ret
0x000002000012d924 : lea eax, dword ptr [rcx - 0x13] ; mov dword ptr [r8], eax ; ret
0x00000200000c5bcf : lea eax, dword ptr [rcx - 0x20] ; ret
0x0000020000076057 : lea eax, dword ptr [rcx - 0x3f] ; ret
0x00000200000845fb : lea eax, dword ptr [rcx - 0x75] ; ret
0x0000020000040d33 : lea eax, dword ptr [rcx - 0xb0] ; mov qword ptr [r8], rax ; ret
0x00000200006d95a7 : lea eax, dword ptr [rcx - 0xb] ; call rsi
0x00000200006cd379 : lea eax, dword ptr [rcx - 0xd] ; test bl, r12b ; jmp 0x200006cd3ac
0x00000200006cd405 : lea eax, dword ptr [rcx - 0xd] ; test bl, r12b ; jmp 0x200006cd438
0x00000200001e5ea1 : lea eax, dword ptr [rcx - 1] ; call qword ptr [r11]
0x00000200001e5c0b : lea eax, dword ptr [rcx - 1] ; call qword ptr [r15]
0x00000200003f54d6 : lea eax, dword ptr [rcx - 1] ; call r12
0x0000020000453535 : lea eax, dword ptr [rcx - 1] ; call rbx
0x00000200004581b2 : lea eax, dword ptr [rcx - 1] ; call rdi
0x0000020000530d00 : lea eax, dword ptr [rcx - 2] ; call qword ptr [rbx]
0x00000200006dd15d : lea eax, dword ptr [rcx - 2] ; call rbx
0x00000200006d8de2 : lea eax, dword ptr [rcx - 2] ; call rdi
0x000002000064db10 : lea eax, dword ptr [rcx - 2] ; sub ax, dx ; jmp 0x2000064db32
0x0000020000400f84 : lea eax, dword ptr [rcx - 3] ; call rsi
0x0000020000401165 : lea eax, dword ptr [rcx - 4] ; call rsi
0x000002000045ddd7 : lea eax, dword ptr [rcx - 6] ; call rsi
0x00000200006dac4e : lea eax, dword ptr [rcx - 7] ; call rdi
0x00000200003f3b4b : lea eax, dword ptr [rcx - 8] ; call rsi
0x0000020000161ecb : lea eax, dword ptr [rcx - 8] ; ret
0x00000200006db9b5 : lea eax, dword ptr [rcx - 9] ; call r14
0x00000200006d9028 : lea eax, dword ptr [rcx - 9] ; call rdi
0x00000200004b2078 : lea eax, dword ptr [rcx*4 + 8] ; ret
0x000002000021e6c1 : lea eax, dword ptr [rcx*8 + 0x60] ; ret
0x00000200001ca037 : lea eax, dword ptr [rcx*8 + 0xd0] ; ret
0x00000200000f43a6 : lea eax, dword ptr [rdi + 8] ; cmp rbx, rax ; je 0x200000f4377 ; jmp 0x200000f435c
0x0000020000210bdc : lea eax, dword ptr [rdi + rcx*2] ; add rsp, 0x50 ; pop rdi ; ret
0x000002000011cd27 : lea eax, dword ptr [rdi + rcx] ; xor edx, edx ; xor ecx, ecx ; call rax
0x0000020000728915 : lea eax, dword ptr [rdx + 0x20] ; add rsp, 0x28 ; ret
0x000002000021b63c : lea eax, dword ptr [rdx + 0x20] ; call 0x20000157885
0x000002000052c6d8 : lea eax, dword ptr [rdx + 0x20] ; call 0x20000157886
0x00000200003eb5db : lea eax, dword ptr [rdx + 0x30] ; call 0x20000157885
0x000002000060a145 : lea eax, dword ptr [rdx + 0x38] ; mov qword ptr [rdx + 0x28], rax ; ret
0x000002000052f6d9 : lea eax, dword ptr [rdx + 0x40] ; call 0x20000157886
0x0000020000137342 : lea eax, dword ptr [rdx + 0x48] ; call 0x20000157889
0x00000200005347ca : lea eax, dword ptr [rdx + 0x5e] ; call 0x20000157886
0x00000200005284fb : lea eax, dword ptr [rdx + 0x78] ; call 0x20000157886
0x000002000004377e : lea eax, dword ptr [rdx + 0x880] ; ret
0x00000200007cbee0 : lea eax, dword ptr [rdx + 1] ; call 0x200001480f5
0x000002000021011f : lea eax, dword ptr [rdx + 1] ; movups xmmword ptr [rcx + 0x40], xmm0 ; ret
0x000002000062154b : lea eax, dword ptr [rdx + 1] ; ret
0x000002000058df65 : lea eax, dword ptr [rdx + 3] ; call rsi
0x0000020000521705 : lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x000002000058df30 : lea eax, dword ptr [rdx + 5] ; call rsi
0x000002000023bbae : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023bbc5
0x000002000023bbad : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023bbc6
0x000002000023ef0a : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023ef20
0x000002000023ef09 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023ef21
0x0000020000244d13 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244d29
0x0000020000244d12 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244d2a
0x0000020000244f8e : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244fa4
0x0000020000244f8d : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244fa5
0x0000020000248ffb : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000249011
0x0000020000248ffa : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000249012
0x000002000024923d : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000249253
0x000002000024923c : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000249254
0x000002000024bcf7 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000024bd0d
0x000002000024bcf6 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000024bd0e
0x000002000077f9c9 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077f9de
0x000002000077f9c8 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077f9df
0x000002000077fc02 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077fc17
0x000002000077fc01 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077fc18
0x00000200007818c1 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x200007818d6
0x00000200007818c0 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x200007818d7
0x0000020000783737 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078374c
0x0000020000783736 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078374d
0x000002000078cc45 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078cc5a
0x000002000078cc44 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078cc5b
0x000002000078d1e6 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078d1fb
0x000002000078d1e5 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000078d1fc
0x0000020000008806 : lea eax, dword ptr [rdx + rax*8] ; ret
0x00000200000cf655 : lea eax, dword ptr [rdx + rax] ; ret
0x0000020000228471 : lea eax, dword ptr [rdx - 0x10] ; lock cmpxchg qword ptr [rcx], rdx ; ret
0x0000020000092213 : lea eax, dword ptr [rdx - 0x190] ; ret
0x000002000015193b : lea eax, dword ptr [rdx*4] ; pop rdi ; ret
0x000002000000a30e : lea eax, dword ptr [rip + 0x14e92c] ; ret
0x0000020000009922 : lea eax, dword ptr [rip + 0x14f248] ; ret
0x000002000000a348 : lea eax, dword ptr [rip + 0x1503d2] ; ret
0x000002000000a340 : lea eax, dword ptr [rip + 0x1503fa] ; ret
0x000002000000a350 : lea eax, dword ptr [rip + 0x15040a] ; ret
0x000002000000a358 : lea eax, dword ptr [rip + 0x150422] ; ret
0x000002000000a365 : lea eax, dword ptr [rip + 0x150455] ; ret
0x000002000000a338 : lea eax, dword ptr [rip + 0x150462] ; ret
0x0000020000009998 : lea eax, dword ptr [rip + 0x150c92] ; ret
0x00000200000098f4 : lea eax, dword ptr [rip + 0x150cd6] ; ret
0x00000200000099cb : lea eax, dword ptr [rip + 0x150cdf] ; ret
0x0000020000009901 : lea eax, dword ptr [rip + 0x150d09] ; ret
0x00000200000098d5 : lea eax, dword ptr [rip + 0x150d15] ; ret
0x0000020000009911 : lea eax, dword ptr [rip + 0x150d39] ; ret
0x0000020000009909 : lea eax, dword ptr [rip + 0x150d51] ; ret
0x0000020000009933 : lea eax, dword ptr [rip + 0x150d57] ; ret
0x0000020000009959 : lea eax, dword ptr [rip + 0x150d81] ; ret
0x000002000000996e : lea eax, dword ptr [rip + 0x150d8c] ; ret
0x00000200000098ec : lea eax, dword ptr [rip + 0x150d8e] ; ret
0x0000020000009976 : lea eax, dword ptr [rip + 0x150da4] ; ret
0x00000200000099a5 : lea eax, dword ptr [rip + 0x150dd5] ; ret
0x0000020000009983 : lea eax, dword ptr [rip + 0x150dd7] ; ret
0x0000020000009951 : lea eax, dword ptr [rip + 0x150de9] ; ret
0x00000200000099ad : lea eax, dword ptr [rip + 0x150ded] ; ret
0x0000020000009990 : lea eax, dword ptr [rip + 0x150e2a] ; ret
0x00000200000099be : lea eax, dword ptr [rip + 0x150e5c] ; ret
0x0000020000009966 : lea eax, dword ptr [rip + 0x150ed4] ; ret
0x00000200001c2f14 : lea eax, dword ptr [rip + 0x15e026] ; ret
0x000002000013ac59 : lea eax, dword ptr [rip + 0x1de8a9] ; ret
0x000002000053d5c9 : lea eax, dword ptr [rip + 0x20b261] ; ret
0x00000200000bf6c2 : lea eax, dword ptr [rip + 0x240b78] ; ret
0x00000200000de68a : lea eax, dword ptr [rip + 0x246df0] ; ret
0x00000200000a0dd6 : lea eax, dword ptr [rip + 0x2833e4] ; ret
0x000002000009d9f1 : lea eax, dword ptr [rip + 0x287a89] ; ret
0x0000020000070bb9 : lea eax, dword ptr [rip + 0x2b36a1] ; ret
0x000002000042ee55 : lea eax, dword ptr [rip + 0x2bbbcd] ; ret
0x000002000005284c : lea eax, dword ptr [rip + 0x2d19ee] ; ret
0x0000020000044dc9 : lea eax, dword ptr [rip + 0x2defc9] ; ret
0x0000020000041e43 : lea eax, dword ptr [rip + 0x2e0b67] ; mov qword ptr [rdx], rax ; ret
0x0000020000015c7f : lea eax, dword ptr [rip + 0x30f7fb] ; ret
0x00000200001d001f : lea eax, dword ptr [rip + 0x51fa5f] ; ret
0x0000020000517d0d : lea eax, dword ptr [rip + 0x589ad] ; ret
0x0000020000517d2f : lea eax, dword ptr [rip + 0x589bb] ; ret
0x0000020000517d1f : lea eax, dword ptr [rip + 0x589fb] ; ret
0x0000020000517d27 : lea eax, dword ptr [rip + 0x58a23] ; ret
0x0000020000504e3b : lea eax, dword ptr [rip + 0x6c7ff] ; jmp 0x20000504e0c
0x00000200001b3086 : lea eax, dword ptr [rip + 0xc601c] ; mov qword ptr [rcx], rax ; ret
0x00000200004f58da : lea eax, dword ptr [rip - 0x1d6640] ; ret
0x00000200004fe39b : lea eax, dword ptr [rip - 0x1df101] ; ret
0x0000020000697c8c : lea eax, dword ptr [rip - 0x39f4da] ; ret
0x0000020000697c70 : lea eax, dword ptr [rip - 0x39f4f6] ; ret
0x0000020000697c7e : lea eax, dword ptr [rip - 0x39f52c] ; ret
0x0000020000697c46 : lea eax, dword ptr [rip - 0x39f53c] ; ret
0x0000020000697c62 : lea eax, dword ptr [rip - 0x39f540] ; ret
0x0000020000697c54 : lea eax, dword ptr [rip - 0x39f58a] ; ret
0x0000020000726001 : lea eax, dword ptr [rip - 0x42d1e7] ; ret
0x00000200007b6c95 : lea eax, dword ptr [rip - 0x66045b] ; ret
0x00000200007b6cb5 : lea eax, dword ptr [rip - 0x6651db] ; ret
0x00000200007b6cbd : lea eax, dword ptr [rip - 0x67c033] ; ret
0x0000020000161383 : lea eax, dword ptr [rip - 0x6b99] ; ret
0x00000200007b6ca5 : lea eax, dword ptr [rip - 0x6c1e7b] ; ret
0x00000200007b6cc5 : lea eax, dword ptr [rip - 0x7225db] ; ret
0x00000200007b6cad : lea eax, dword ptr [rip - 0x722f23] ; ret
0x00000200007b6c9d : lea eax, dword ptr [rip - 0x723e83] ; ret
0x0000020000161372 : lea eax, dword ptr [rip - 0x8738] ; ret
0x00000200003ee18e : lea eax, dword ptr [rip - 0xd0dd4] ; mov rax, r8 ; ret
0x00000200005328f7 : lea eax, dword ptr [rsp + 0x28] ; call 0x20000157887
0x000002000012c6ec : lea eax, dword ptr [rsp + 0x30] ; call qword ptr [rbx]
0x00000200006bdd1d : lea eax, dword ptr [rsp + 0x30] ; mov rcx, rax ; call r10
0x00000200007a91db : lea eax, dword ptr [rsp + 0x3c] ; call rax
0x00000200004004cf : lea eax, dword ptr [rsp + 0x40] ; call r10
0x0000020000650037 : lea eax, dword ptr [rsp + 0x40] ; cmp rbx, rax ; jne 0x2000065000a ; jmp 0x200006500b3
0x00000200003fb97a : lea eax, dword ptr [rsp + 0x58] ; call rax
0x00000200004c0eb0 : lea eax, dword ptr [rsp + 0x58] ; xor edx, edx ; call 0x200000eef39
0x00000200000eebab : lea eax, dword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x00000200001bc70b : lea eax, dword ptr [rsp + 0x88] ; call r9
0x000002000014bd51 : lea eax, dword ptr [rsp + 8] ; ret
0x0000020000479917 : lea ebp, dword ptr [rax + rcx*8] ; mov rcx, rbp ; call 0x2000009e099
0x00000200004bb564 : lea ebp, dword ptr [rax - 0x17fffffa] ; and ah, ah ; ret 0x84ff
0x000002000013032b : lea ebp, dword ptr [rdi - 1] ; jmp 0x200001302f6
0x000002000052c121 : lea ebx, dword ptr [rax + 7] ; and ebx, 0xfffffff8 ; call 0x20000157549
0x000002000009401d : lea ebx, dword ptr [rax - 0x1000000] ; ret
0x0000020000168aef : lea ebx, dword ptr [rax] ; idiv bh ; add rsp, 0x38 ; ret
0x000002000015793a : lea ebx, dword ptr [rbx + rcx*4] ; jmp r11
0x000002000041aeee : lea ebx, dword ptr [rcx + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000002000015ff39 : lea ebx, dword ptr [rcx - 8] ; jmp 0x2000015ff49
0x0000020000160067 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000160077
0x0000020000160185 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000160195
0x0000020000172816 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000172826
0x00000200001728e6 : lea ebx, dword ptr [rcx - 8] ; jmp 0x200001728f6
0x0000020000173b4f : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000173b5f
0x0000020000173c4a : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000173c5a
0x0000020000174466 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000174476
0x0000020000174626 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000174636
0x0000020000217ff0 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000218000
0x0000020000218104 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000218114
0x0000020000218220 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000218230
0x000002000006dad3 : lea ebx, dword ptr [rdx - 0x74b7ffef] ; ret
0x000002000015609b : lea ebx, dword ptr [rip + 0x16f] ; jmp r11
0x0000020000155dbc : lea ebx, dword ptr [rip + 0x34e] ; jmp r11
0x000002000061fc56 : lea ecx, dword ptr [r13 - 0x27] ; call 0x2000024da47
0x000002000062629a : lea ecx, dword ptr [r13 - 0x3f] ; jne 0x200006262b0 ; call 0x2000024da49
0x0000020000522494 : lea ecx, dword ptr [r9 + 0x5a] ; call 0x20000148557
0x00000200000837e6 : lea ecx, dword ptr [r9 + 1] ; mov dword ptr [rdx], ecx ; ret
0x00000200005ab88b : lea ecx, dword ptr [r9 - 1] ; call 0x20000507af2
0x00000200004385d8 : lea ecx, dword ptr [rax + 0x10] ; call 0x2000005f426
0x00000200005314e5 : lea ecx, dword ptr [rax + 0x1c] ; mov rdx, rbp ; call 0x20000157549
0x00000200002118a4 : lea ecx, dword ptr [rax + 0x26] ; cdq ; idiv ecx ; add eax, r9d ; ret
0x000002000053703b : lea ecx, dword ptr [rax + 0x28] ; mov rdx, rdi ; call 0x20000157549
0x0000020000214d82 : lea ecx, dword ptr [rax + 0x55f] ; mov eax, ecx ; ret
0x00000200004bb5dc : lea ecx, dword ptr [rax + 0x6a8] ; call 0x200000e99c9
0x00000200001bf522 : lea ecx, dword ptr [rax + 0x7b] ; call r9
0x000002000002fb31 : lea ecx, dword ptr [rax + rdx] ; mov qword ptr [r8], rcx ; ret
0x0000020000442478 : lea ecx, dword ptr [rax - 0x10] ; jmp 0x20000442444
0x000002000045132a : lea ecx, dword ptr [rax - 0x10] ; jmp 0x200004512f5
0x00000200005d7248 : lea ecx, dword ptr [rax - 0x17ffffff] ; ret 0xf16b
0x000002000040b5f2 : lea ecx, dword ptr [rax - 0x188] ; call 0x20000157888
0x00000200004b207a : lea ecx, dword ptr [rax] ; add byte ptr [rax], al ; add bl, al ; or eax, 0xffffffff ; ret
0x00000200004bea70 : lea ecx, dword ptr [rbp + 0x10] ; call 0x200000ee696
0x00000200001625c0 : lea ecx, dword ptr [rbp + 0x10] ; call rbx
0x00000200005317ec : lea ecx, dword ptr [rbp + 0x1c0] ; call 0x20000157889
0x0000020000531b5f : lea ecx, dword ptr [rbp + 0x280] ; call 0x20000157889
0x00000200001c01fb : lea ecx, dword ptr [rbp + 0x58] ; lea edx, dword ptr [rbp + 1] ; call 0x200001bc47c
0x00000200007d2b25 : lea ecx, dword ptr [rbp + 0x5c] ; call 0x2000000ed35
0x00000200004bb563 : lea ecx, dword ptr [rbp + 0x6a8] ; call 0x200000e9999
0x00000200004c10e6 : lea ecx, dword ptr [rbp + 0x770] ; call 0x200000e8069
0x000002000021b638 : lea ecx, dword ptr [rbp + 8] ; lea r8d, dword ptr [rdx + 0x20] ; call 0x20000157889
0x0000020000513ea3 : lea ecx, dword ptr [rbp - 0x11] ; call 0x2000013ba76
0x00000200007b0620 : lea ecx, dword ptr [rbp - 0x20] ; and dword ptr [rbp - 0x10], 0 ; call qword ptr [rdi]
0x00000200007b818d : lea ecx, dword ptr [rbp - 0x20] ; call 0x2000005f909
0x000002000051ee0e : lea ecx, dword ptr [rbp - 0x20] ; call 0x2000013fb96
0x000002000052ca71 : lea ecx, dword ptr [rbp - 0x20] ; mov edi, eax ; call r15
0x00000200005a3860 : lea ecx, dword ptr [rbp - 0x21] ; call 0x2000005f907
0x000002000018b5a0 : lea ecx, dword ptr [rbp - 0x21] ; xor edx, edx ; call 0x20000157887
0x000002000061fc57 : lea ecx, dword ptr [rbp - 0x27] ; call 0x2000024da46
0x00000200004b041c : lea ecx, dword ptr [rbp - 0x28] ; call 0x200000fc6ad
0x0000020000518630 : lea ecx, dword ptr [rbp - 0x28] ; call 0x200004548b9
0x0000020000115efa : lea ecx, dword ptr [rbp - 0x31] ; xor edi, edi ; call 0x2000005f909
0x0000020000454438 : lea ecx, dword ptr [rbp - 0x34] ; call rax
0x000002000062629b : lea ecx, dword ptr [rbp - 0x3f] ; jne 0x200006262af ; call 0x2000024da48
0x00000200005b15ff : lea ecx, dword ptr [rbp - 0x40] ; call 0x200001daeee
0x00000200003e78b6 : lea ecx, dword ptr [rbp - 0x49] ; call 0x20000007c36
0x00000200001c0ba6 : lea ecx, dword ptr [rbp - 0x50] ; call 0x200001bce5d
0x000002000058fb4d : lea ecx, dword ptr [rbp - 0x59] ; call 0x200001b500e
0x00000200003ed650 : lea ecx, dword ptr [rbp - 0x59] ; xor edx, edx ; call qword ptr [rdi]
0x000002000017772a : lea ecx, dword ptr [rbp - 0x61] ; xor r8d, r8d ; mov rdx, rsi ; call rax
0x000002000049abf1 : lea ecx, dword ptr [rbp - 0x69] ; call qword ptr [rax]
0x0000020000467639 : lea ecx, dword ptr [rbp - 0x71] ; call 0x20000467021
0x000002000043283a : lea ecx, dword ptr [rbp - 0x78] ; call 0x2000005f906
0x00000200007d47d0 : lea ecx, dword ptr [rbp - 0x78] ; call 0x2000040286a
0x00000200006dd39e : lea ecx, dword ptr [rbp - 0x80] ; call 0x20000009675
0x0000020000546778 : lea ecx, dword ptr [rbp - 9] ; call r12
0x00000200005fadbf : lea ecx, dword ptr [rbx + 0x10] ; call 0x2000046701d
0x000002000058dad0 : lea ecx, dword ptr [rbx + 0x18] ; call 0x20000009d19
0x00000200004c66a9 : lea ecx, dword ptr [rbx + 0x18] ; call 0x200000e8066
0x000002000068369a : lea ecx, dword ptr [rbx + 0x18] ; call 0x200004cf955
0x00000200005247de : lea ecx, dword ptr [rbx + 0x18] ; mov dl, 1 ; call 0x20000430a0b
0x00000200005fadc8 : lea ecx, dword ptr [rbx + 0x28] ; call 0x2000046701d
0x0000020000479e81 : lea ecx, dword ptr [rbx + 0x28] ; xor edx, edx ; call 0x2000009e098
0x00000200004bd819 : lea ecx, dword ptr [rbx + 0x38] ; call 0x200000e5726
0x00000200004bd7a4 : lea ecx, dword ptr [rbx + 0x38] ; mov dl, 1 ; call 0x200000e5348
0x0000020000002481 : lea ecx, dword ptr [rbx + 0x48] ; xor r9d, r9d ; call 0x200000ee698
0x000002000051f525 : lea ecx, dword ptr [rbx + 0x59] ; call 0x20000148556
0x000002000044e7a9 : lea ecx, dword ptr [rbx + 0x98] ; call 0x20000078b99
0x0000020000620e17 : lea ecx, dword ptr [rbx + 2] ; call 0x2000024da46
0x000002000049e8a7 : lea ecx, dword ptr [rbx + rdx*2] ; mov rax, r9 ; ret
0x00000200004dbde7 : lea ecx, dword ptr [rbx - 0x10] ; call 0x200000e8065
0x000002000061ff69 : lea ecx, dword ptr [rbx - 0x2f] ; call 0x2000024da46
0x0000020000010cee : lea ecx, dword ptr [rcx + 0x10] ; sub rax, 1 ; jne 0x20000010cef ; ret
0x0000020000216488 : lea ecx, dword ptr [rcx + 0x30] ; sub rcx, 1 ; jne 0x20000216480 ; ret
0x0000020000522495 : lea ecx, dword ptr [rcx + 0x5a] ; call 0x20000148556
0x00000200000837e7 : lea ecx, dword ptr [rcx + 1] ; mov dword ptr [rdx], ecx ; ret
0x0000020000481b4d : lea ecx, dword ptr [rcx + 2] ; sub rdx, 1 ; jne 0x20000481b4a ; ret
0x0000020000112e4a : lea ecx, dword ptr [rcx + 4] ; sub r10, 1 ; jne 0x20000112e2a ; ret
0x000002000005322a : lea ecx, dword ptr [rcx + 4] ; sub rdx, 1 ; jne 0x20000053230 ; ret
0x00000200001fdbc0 : lea ecx, dword ptr [rcx + 8] ; sub r8, 1 ; jne 0x200001fdbbe ; ret
0x00000200000a2258 : lea ecx, dword ptr [rcx + rcx*4] ; lea rax, qword ptr [rax + rcx*8] ; ret
0x0000020000150f93 : lea ecx, dword ptr [rcx + rdx*4] ; jmp r9
0x00000200005ab88c : lea ecx, dword ptr [rcx - 1] ; call 0x20000507af1
0x00000200004886bd : lea ecx, dword ptr [rdi + 0x10] ; call 0x2000007ce19
0x00000200004c74a2 : lea ecx, dword ptr [rdi + 0x10] ; call 0x200000e8066
0x000002000058da6f : lea ecx, dword ptr [rdi + 0x18] ; mov rdx, rax ; call 0x20000009d1c
0x000002000066e8b7 : lea ecx, dword ptr [rdi + 0x28] ; call 0x2000051ab59
0x0000020000479c48 : lea ecx, dword ptr [rdi + 0x28] ; xor edx, edx ; call 0x2000009e098
0x00000200004bd960 : lea ecx, dword ptr [rdi + 0x2d8] ; call 0x200000e8069
0x000002000046c154 : lea ecx, dword ptr [rdi + 0x308] ; call 0x20000090451
0x00000200000a49a7 : lea ecx, dword ptr [rdi + 0x48] ; call 0x20000070bc5
0x000002000055d047 : lea ecx, dword ptr [rdi + 0x59] ; call rax
0x000002000061d776 : lea ecx, dword ptr [rdi + 0x6a8] ; call 0x200000e99c8
0x00000200004baae4 : lea ecx, dword ptr [rdi + 0x6a8] ; call 0x200000e99c9
0x00000200003e00eb : lea ecx, dword ptr [rdi + 3] ; call 0x2000000ed0a
0x000002000051249b : lea ecx, dword ptr [rdi + 8] ; call 0x2000013d1b6
0x00000200004468bf : lea ecx, dword ptr [rdi + 9] ; call 0x2000006c736
0x00000200004dbda6 : lea ecx, dword ptr [rdi - 0x10] ; call 0x200000e8065
0x00000200004a9cc2 : lea ecx, dword ptr [rdi - 0x470] ; call r15
0x00000200001c4ee9 : lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x00000200007d2a50 : lea ecx, dword ptr [rdx + 0x5a] ; call 0x2000000ed35
0x000002000051ed28 : lea ecx, dword ptr [rdx + 0x62] ; call 0x20000148556
0x00000200004baac2 : lea ecx, dword ptr [rdx + 0x6a8] ; call 0x200000e9999
0x00000200001df402 : lea ecx, dword ptr [rdx + 0x75] ; call 0x2000014b6f5
0x00000200005e2a58 : lea ecx, dword ptr [rdx + 0x7c] ; call 0x2000000ed35
0x00000200005e2ae1 : lea ecx, dword ptr [rdx + 0x7e] ; call 0x2000000ed35
0x00000200004d16e3 : lea ecx, dword ptr [rdx + rax*8] ; jmp 0x200004d16a0
0x00000200006c175c : lea ecx, dword ptr [rdx - 0x13] ; call 0x2000024da45
0x00000200006d1826 : lea ecx, dword ptr [rdx - 0x23] ; call 0x2000024da45
0x0000020000623aec : lea ecx, dword ptr [rdx - 0x27] ; call 0x2000024da46
0x000002000062139f : lea ecx, dword ptr [rdx - 0x37] ; call 0x2000024da46
0x00000200006d1741 : lea ecx, dword ptr [rdx - 0xf] ; call 0x2000024da45
0x00000200006288a5 : lea ecx, dword ptr [rdx - 8] ; call 0x2000024da46
0x00000200005924b9 : lea ecx, dword ptr [rdx - 8] ; mov eax, dword ptr [rax + rcx*4] ; ret
0x00000200001c94f7 : lea ecx, dword ptr [rip + 0x13c6e3] ; call 0x200000e5728
0x00000200000c5bc5 : lea ecx, dword ptr [rip + 0x1a1ff5] ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000057be06 : lea ecx, dword ptr [rip + 0x1ccd14] ; call 0x200000e8068
0x000002000057bdbd : lea ecx, dword ptr [rip + 0x1ccd5d] ; call 0x200000e8068
0x000002000057bd75 : lea ecx, dword ptr [rip + 0x1ccda5] ; call 0x200000e8068
0x00000200000c1e31 : lea ecx, dword ptr [rip + 0x264b89] ; add rax, rcx ; ret
0x000002000003c054 : lea ecx, dword ptr [rip + 0x2e9426] ; call 0x200000a82b8
0x0000020000058e75 : lea ecx, dword ptr [rip + 0x353f15] ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200003e15c0 : lea ecx, dword ptr [rip + 0x367f5a] ; call 0x200000035e9
0x00000200003e15a4 : lea ecx, dword ptr [rip + 0x367f76] ; call 0x20000009859
0x00000200003d482f : lea ecx, dword ptr [rip + 0x375c8b] ; call 0x200000036cd
0x00000200000356b1 : lea ecx, dword ptr [rip + 0x3776d9] ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000020000112477 : lea ecx, dword ptr [rip + 0x3b41fff4] ; ret
0x000002000019f17b : lea ecx, dword ptr [rip + 0x62a57] ; call rax
0x000002000014e4c0 : lea ecx, dword ptr [rip + 0x7ed5] ; jmp rcx
0x000002000017a88f : lea ecx, dword ptr [rip + 0x87343] ; call rax
0x000002000067f493 : lea ecx, dword ptr [rip + 0xc9437] ; call 0x2000001b6e0
0x000002000067f3ed : lea ecx, dword ptr [rip + 0xc94dd] ; call 0x2000001b6e0
0x000002000044fa01 : lea ecx, dword ptr [rip - 0x12de07] ; call 0x2000007d089
0x00000200004567a3 : lea ecx, dword ptr [rip - 0x131b81] ; call 0x2000007d089
0x00000200004567e1 : lea ecx, dword ptr [rip - 0x131bbf] ; call 0x2000007d089
0x0000020000453a60 : lea ecx, dword ptr [rip - 0x1349e6] ; call 0x2000007d089
0x0000020000456291 : lea ecx, dword ptr [rip - 0x134eb7] ; call 0x2000007d089
0x0000020000456a46 : lea ecx, dword ptr [rip - 0x137a2c] ; call 0x2000007d089
0x00000200004573c3 : lea ecx, dword ptr [rip - 0x138349] ; call 0x2000007d089
0x0000020000457c80 : lea ecx, dword ptr [rip - 0x139326] ; call 0x2000007d089
0x000002000045945b : lea ecx, dword ptr [rip - 0x13aa61] ; call 0x200000e5728
0x00000200004c0312 : lea ecx, dword ptr [rip - 0x19db78] ; call 0x200000e8069
0x000002000052d217 : lea ecx, dword ptr [rip - 0x22af29] ; call 0x200001518a9
0x00000200005f6ebf : lea ecx, dword ptr [rip - 0x23a485] ; call 0x2000021e379
0x0000020000569505 : lea ecx, dword ptr [rip - 0x2416cb] ; call 0x20000005728
0x00000200003e7a2b : lea ecx, dword ptr [rip - 0x2aa11] ; call 0x2000000e719
0x00000200003e79f5 : lea ecx, dword ptr [rip - 0x2afbb] ; call 0x200000087f1
0x0000020000601f01 : lea ecx, dword ptr [rip - 0x2e0307] ; call 0x2000005e178
0x00000200007b6e8d : lea ecx, dword ptr [rip - 0x4b36b3] ; call 0x20000563138
0x000002000070d965 : lea ecx, dword ptr [rip - 0x5f2f7f] ; jmp rax
0x000002000070dbc1 : lea ecx, dword ptr [rip - 0x5f31db] ; jmp rax
0x00000200003dc0c1 : lea ecx, dword ptr [rip - 0xb7b77] ; call 0x20000008825
0x00000200003cc8be : lea ecx, dword ptr [rip - 0xc9864] ; call 0x20000078b98
0x00000200004c6ed8 : lea ecx, dword ptr [rsi + 0x10] ; call 0x200000e8066
0x0000020000472807 : lea ecx, dword ptr [rsi + 0x10] ; xor edx, edx ; call 0x2000009e098
0x00000200004dbe04 : lea ecx, dword ptr [rsi + 0x160] ; call 0x200000e8068
0x00000200004c109e : lea ecx, dword ptr [rsi + 0x28] ; call 0x200000e8066
0x0000020000437168 : lea ecx, dword ptr [rsi + 0x48] ; mov r8d, ebx ; call 0x2000005f389
0x00000200000a0cf9 : lea ecx, dword ptr [rsi + 0x68] ; call 0x2000007cf0d
0x00000200004bdaac : lea ecx, dword ptr [rsi + 0x6b0] ; call 0x200000e8069
0x000002000051fef8 : lea ecx, dword ptr [rsi + 7] ; call 0x20000148556
0x00000200004a05b1 : lea ecx, dword ptr [rsi + rdi*8 + 0x55e9ffff] ; call qword ptr [rdx]
0x00000200004e405f : lea ecx, dword ptr [rsp + 0x180] ; call 0x200000f0309
0x000002000040b660 : lea ecx, dword ptr [rsp + 0x190] ; call 0x20000157889
0x000002000002a0eb : lea ecx, dword ptr [rsp + 0x20] ; call 0x200000e63b6
0x0000020000684021 : lea ecx, dword ptr [rsp + 0x20] ; call 0x200000f0306
0x0000020000582377 : lea ecx, dword ptr [rsp + 0x20] ; call 0x2000014b4d8
0x000002000052d942 : lea ecx, dword ptr [rsp + 0x20] ; call 0x20000157887
0x00000200005badab : lea ecx, dword ptr [rsp + 0x20] ; call 0x2000046701e
0x0000020000705e86 : lea ecx, dword ptr [rsp + 0x20] ; call r8
0x00000200005303f1 : lea ecx, dword ptr [rsp + 0x20] ; call rdi
0x00000200006840bf : lea ecx, dword ptr [rsp + 0x20] ; mov edi, eax ; call 0x200000f0308
0x000002000051f9e2 : lea ecx, dword ptr [rsp + 0x28] ; call 0x200001480d7
0x000002000051f08f : lea ecx, dword ptr [rsp + 0x30] ; call 0x20000149e17
0x000002000051a924 : lea ecx, dword ptr [rsp + 0x30] ; call 0x20000526bf2
0x00000200007bb055 : lea ecx, dword ptr [rsp + 0x30] ; call 0x200005672ba
0x00000200001ade3d : lea ecx, dword ptr [rsp + 0x30] ; call rax
0x00000200006a3620 : lea ecx, dword ptr [rsp + 0x30] ; mov r15b, r13b ; call 0x2000005f909
0x000002000013ad26 : lea ecx, dword ptr [rsp + 0x30] ; mov rdx, r12 ; call rax
0x000002000042a5ea : lea ecx, dword ptr [rsp + 0x30] ; xor edx, edx ; call 0x20000058019
0x00000200003db5e3 : lea ecx, dword ptr [rsp + 0x34] ; call 0x20000157886
0x00000200001c0214 : lea ecx, dword ptr [rsp + 0x40] ; call 0x200001bc47a
0x00000200004327b2 : lea ecx, dword ptr [rsp + 0x48] ; call 0x2000005f907
0x00000200000cc2c5 : lea ecx, dword ptr [rsp + 0x48] ; call rax
0x000002000012c6e7 : lea ecx, dword ptr [rsp + 0x48] ; lea r8, qword ptr [rsp + 0x30] ; call qword ptr [rbx]
0x000002000042e587 : lea ecx, dword ptr [rsp + 0x48] ; mov dl, 1 ; call 0x200000564a9
0x00000200006a3645 : lea ecx, dword ptr [rsp + 0x50] ; call 0x2000005f906
0x000002000043b020 : lea ecx, dword ptr [rsp + 0x50] ; call 0x20000068457
0x00000200006e2952 : lea ecx, dword ptr [rsp + 0x50] ; call 0x200003feb9a
0x00000200007d13d2 : lea ecx, dword ptr [rsp + 0x50] ; call r12
0x00000200004c0ec9 : lea ecx, dword ptr [rsp + 0x58] ; call 0x200000f0307
0x00000200006a3666 : lea ecx, dword ptr [rsp + 0x60] ; call 0x2000005f906
0x0000020000793628 : lea ecx, dword ptr [rsp + 0x68] ; call 0x2000005f906
0x000002000044cb8a : lea ecx, dword ptr [rsp + 0x70] ; call 0x2000006d767
0x00000200005156e8 : lea ecx, dword ptr [rsp + 0x70] ; call 0x2000013fb97
0x00000200000eeba6 : lea ecx, dword ptr [rsp + 0x70] ; lea r8, qword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x00000200004c8035 : lea ecx, dword ptr [rsp + 0x88] ; call 0x20000484319
0x00000200006ca235 : lea ecx, dword ptr [rsp + 0x98] ; call 0x200006c64b1
0x000002000042ddc0 : lea edi, dword ptr [rax - 1] ; mov dl, r15b ; call 0x200000564a9
0x00000200000ad406 : lea edi, dword ptr [rbx + 8] ; jmp 0x200000acf5d
0x000002000070b4b0 : lea edi, dword ptr [rbx] ; add r15d, r14d ; mov edx, r15d ; call rdi
0x0000020000513e55 : lea edi, dword ptr [rdi + rbx*2] ; mov rcx, rdi ; call 0x2000013bd45
0x00000200005db5d2 : lea edi, dword ptr [rsp + 0x30] ; call 0x20000157886
0x000002000043e54d : lea edx, dword ptr [r8 + 1] ; call 0x200000620f7
0x00000200001a6a6a : lea edx, dword ptr [r9 + 0xa] ; call 0x20000092c8e
0x0000020000527f0c : lea edx, dword ptr [r9 + 2] ; call 0x20000148157
0x000002000051f14b : lea edx, dword ptr [r9 - 3] ; call 0x20000148037
0x0000020000215bfe : lea edx, dword ptr [rax + 0x18] ; mov rax, rdx ; ret
0x0000020000116ae7 : lea edx, dword ptr [rax + 0x1f] ; cmove eax, edx ; ret
0x00000200001d8e14 : lea edx, dword ptr [rax + 0xf] ; mov cr8, rdx ; jmp 0x200001d8e37
0x000002000043e54e : lea edx, dword ptr [rax + 1] ; call 0x200000620f6
0x000002000043dc00 : lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x0000020000711829 : lea edx, dword ptr [rax + 1] ; test ecx, ecx ; cmovne eax, edx ; ret
0x000002000000d770 : lea edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x2000000d762 ; ret
0x00000200003dff6f : lea edx, dword ptr [rax] ; ret 0x48ff
0x00000200006e6d01 : lea edx, dword ptr [rbp + 0x20] ; call 0x2000014c399
0x00000200001c01fe : lea edx, dword ptr [rbp + 1] ; call 0x200001bc479
0x00000200007d2b22 : lea edx, dword ptr [rbp + 2] ; lea ecx, dword ptr [rbp + 0x5c] ; call 0x2000000ed38
0x00000200005e371f : lea edx, dword ptr [rbp + 7] ; call 0x2000005fa05
0x0000020000463cae : lea edx, dword ptr [rbp + 8] ; mov ecx, ebx ; call 0x200000938f0
0x000002000051d8ba : lea edx, dword ptr [rbp - 0x10] ; call 0x20000148376
0x0000020000640da3 : lea edx, dword ptr [rbp - 0x10] ; mov rcx, rsi ; call 0x2000063d034
0x0000020000696ea9 : lea edx, dword ptr [rbp - 0x18] ; call 0x200006d3141
0x000002000052563c : lea edx, dword ptr [rbp - 0x19] ; mov rcx, rdi ; call 0x200001497f9
0x0000020000090c1e : lea edx, dword ptr [rbp - 0x20] ; call r11
0x000002000051fef5 : lea edx, dword ptr [rbp - 0x30] ; lea ecx, dword ptr [rsi + 7] ; call 0x20000148559
0x0000020000469c67 : lea edx, dword ptr [rbp - 0x30] ; mov rcx, r13 ; call rax
0x0000020000525575 : lea edx, dword ptr [rbp - 0x31] ; mov rcx, rdi ; call 0x20000148a99
0x000002000060713b : lea edx, dword ptr [rbp - 0x38] ; call 0x200004b3389
0x00000200003e188e : lea edx, dword ptr [rbp - 0x40] ; call 0x200000035ea
0x00000200006dd39a : lea edx, dword ptr [rbp - 0x40] ; lea rcx, qword ptr [rbp - 0x80] ; call 0x20000009679
0x000002000058dacc : lea edx, dword ptr [rbp - 0x40] ; lea rcx, qword ptr [rbx + 0x18] ; call 0x20000009d1d
0x000002000051d9d6 : lea edx, dword ptr [rbp - 0x41] ; call 0x200001480b6
0x000002000051da59 : lea edx, dword ptr [rbp - 0x41] ; call 0x200001487b6
0x0000020000458aa4 : lea edx, dword ptr [rbp - 0x41] ; mov qword ptr [rbp - 0x41], r11 ; call rax
0x00000200001a85d1 : lea edx, dword ptr [rbp - 0x41] ; mov rcx, rbx ; call 0x200000248c8
0x0000020000539653 : lea edx, dword ptr [rbp - 0x4c] ; mov rcx, rdi ; call r15
0x0000020000520165 : lea edx, dword ptr [rbp - 0x50] ; call 0x2000014a7f6
0x00000200006dd430 : lea edx, dword ptr [rbp - 0x60] ; lea rcx, qword ptr [rbp - 0x80] ; call 0x20000009679
0x000002000017bb69 : lea edx, dword ptr [rbp - 0x60] ; mov rcx, rax ; call 0x20000217da0
0x0000020000590593 : lea edx, dword ptr [rbp - 0x71] ; mov rcx, r12 ; call 0x200001b7855
0x00000200007a8b11 : lea edx, dword ptr [rbp - 0x7c] ; call 0x200003d0a6e
0x0000020000201980 : lea edx, dword ptr [rbx + 0x1e] ; call r9
0x0000020000117fc2 : lea edx, dword ptr [rbx + 2] ; call 0x20000117f21
0x00000200002017dd : lea edx, dword ptr [rbx + 3] ; call r9
0x00000200006e17b7 : lea edx, dword ptr [rbx + rbx] ; call 0x2000024da45
0x00000200001a6a6b : lea edx, dword ptr [rcx + 0xa] ; call 0x20000092c8d
0x0000020000527f0d : lea edx, dword ptr [rcx + 2] ; call 0x20000148156
0x00000200003fd32f : lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x00000200004e3387 : lea edx, dword ptr [rcx - 0x30] ; call rax
0x000002000051f14c : lea edx, dword ptr [rcx - 3] ; call 0x20000148036
0x00000200001acac4 : lea edx, dword ptr [rdi + 0x1e0] ; call rax
0x0000020000483764 : lea edx, dword ptr [rdi + 0x58] ; mov rcx, r12 ; call 0x2000005fa08
0x0000020000534f94 : lea edx, dword ptr [rdi + 0xc] ; mov rcx, rsi ; call 0x20000157549
0x00000200007d0fe2 : lea edx, dword ptr [rdi + 4] ; call 0x200003f8b5a
0x0000020000129788 : lea edx, dword ptr [rdx + 0x10] ; sub rcx, 1 ; jne 0x20000129786 ; ret
0x000002000040a0e3 : lea edx, dword ptr [rdx + 4] ; add ecx, -1 ; jne 0x2000040a0e5 ; ret
0x00000200004aa155 : lea edx, dword ptr [rdx + 8] ; sub rcx, 1 ; jne 0x200004aa156 ; ret
0x000002000022cee2 : lea edx, dword ptr [rdx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005392c5 : lea edx, dword ptr [rdx] ; or eax, dword ptr [rax] ; ret
0x0000020000559021 : lea edx, dword ptr [rip + 0x13299] ; jmp 0x20000558ff3
0x000002000019e919 : lea edx, dword ptr [rip + 0x158e01] ; call rax
0x0000020000151343 : lea edx, dword ptr [rip + 0x71] ; jmp rdx
0x0000020000445888 : lea edx, dword ptr [rip - 0x1284ce] ; mov rax, rdx ; ret
0x000002000049c8c5 : lea edx, dword ptr [rip - 0x24347b] ; call 0x200000c7479
0x000002000049c874 : lea edx, dword ptr [rip - 0x24575a] ; call 0x200000c7479
0x000002000054b87a : lea edx, dword ptr [rip - 0x50d3bc] ; call 0x20000057adc
0x00000200003fa1a0 : lea edx, dword ptr [rip - 0xdc866] ; mov rax, rdx ; ret
0x000002000006f199 : lea edx, dword ptr [rsi + 0x10] ; call r8
0x0000020000797a65 : lea edx, dword ptr [rsi + 0x578b49ff] ; xor byte ptr [rax - 0x7d], cl ; ret 0x4c18
0x000002000052ac89 : lea edx, dword ptr [rsi + 0xc] ; mov rcx, rax ; call 0x20000157549
0x00000200005a9e00 : lea edx, dword ptr [rsp + 0x100] ; mov cl, 0x13 ; call rax
0x00000200005ce996 : lea edx, dword ptr [rsp + 0x110] ; mov cl, 0xe ; call rax
0x00000200005c5e0e : lea edx, dword ptr [rsp + 0x128] ; mov cl, 0x11 ; call rax
0x00000200005c5c5e : lea edx, dword ptr [rsp + 0x138] ; mov cl, 0x12 ; call rax
0x00000200005ca926 : lea edx, dword ptr [rsp + 0x160] ; mov cl, 0xb ; call rax
0x00000200003d065e : lea edx, dword ptr [rsp + 0x20] ; call 0x2000051c8f2
0x0000020000683696 : lea edx, dword ptr [rsp + 0x20] ; lea ecx, dword ptr [rbx + 0x18] ; call 0x200004cf959
0x000002000052a5ff : lea edx, dword ptr [rsp + 0x20] ; mov ecx, edi ; call rsi
0x00000200005c67d2 : lea edx, dword ptr [rsp + 0x210] ; mov cl, 0xd ; call rax
0x00000200005c6b8e : lea edx, dword ptr [rsp + 0x270] ; mov cl, 0x10 ; call rax
0x00000200001bd018 : lea edx, dword ptr [rsp + 0x28] ; call r8
0x00000200001c4bee : lea edx, dword ptr [rsp + 0x28] ; mov cl, bl ; call rax
0x00000200003fe0ca : lea edx, dword ptr [rsp + 0x28] ; mov rcx, rbp ; call 0x2000000a3dd
0x00000200001162ab : lea edx, dword ptr [rsp + 0x28] ; xor ecx, ecx ; call rax
0x000002000046428c : lea edx, dword ptr [rsp + 0x30] ; call 0x20000093963
0x00000200004479d5 : lea edx, dword ptr [rsp + 0x30] ; call rax
0x0000020000160f69 : lea edx, dword ptr [rsp + 0x30] ; mov ecx, 0xa ; call rax
0x0000020000160f46 : lea edx, dword ptr [rsp + 0x30] ; mov ecx, 0xd ; call rax
0x000002000064c5d6 : lea edx, dword ptr [rsp + 0x38] ; call 0x200003f8856
0x00000200007b93b8 : lea edx, dword ptr [rsp + 0x38] ; call rax
0x000002000008f055 : lea edx, dword ptr [rsp + 0x40] ; mov bl, al ; call rsi
0x00000200001bcff0 : lea edx, dword ptr [rsp + 0x48] ; call r9
0x00000200004ece85 : lea edx, dword ptr [rsp + 0x48] ; mov rcx, r15 ; call 0x200006590e1
0x000002000048cf9d : lea edx, dword ptr [rsp + 0x50] ; mov rcx, rdi ; call rsi
0x00000200006ad02f : lea edx, dword ptr [rsp + 0x58] ; call rax
0x000002000048e06e : lea edx, dword ptr [rsp + 0x58] ; mov rcx, rbx ; call r15
0x00000200006c694a : lea edx, dword ptr [rsp + 0x60] ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000020000431adf : lea edx, dword ptr [rsp + 0x60] ; mov rcx, rbx ; call rsi
0x000002000020e64e : lea edx, dword ptr [rsp + 0x60] ; mov rcx, rdi ; call 0x2000014a8f9
0x000002000046eab6 : lea edx, dword ptr [rsp + 0x78] ; mov rcx, rdi ; call r12
0x00000200004d6a90 : lea edx, dword ptr [rsp + 0xb0] ; call r8
0x00000200005dfb30 : lea edx, dword ptr [rsp + 0xe8] ; mov cl, 0x14 ; call rax
0x000002000058f0c8 : lea edx, dword ptr [rsp + 0xe8] ; mov cl, 0xf ; call rax
0x00000200004c10e7 : lea esi, dword ptr [rax + 7] ; add byte ptr [rax], al ; call 0x200000e8068
0x000002000059b9fa : lea esp, dword ptr [rax + 4] ; add byte ptr [rax], al ; mov r8d, r10d ; call rax
0x000002000002c2bf : lea esp, dword ptr [rbp + 0x20] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200006f322a : lea esp, dword ptr [rbp + 0x20] ; pop rbp ; ret
0x0000020000106a46 : lea esp, dword ptr [rbp + 0x30] ; pop r15 ; pop r14 ; pop rbp ; ret
0x0000020000106ab6 : lea esp, dword ptr [rbp + 0x30] ; pop rbp ; ret
0x000002000021b789 : lea esp, dword ptr [rbp + 0x40] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200000047e3 : lea esp, dword ptr [rbp + 0x40] ; pop rbp ; ret
0x00000200000f5c6f : lea esp, dword ptr [rbx] ; sub eax, dword ptr [rax] ; dec eax ; ret
0x0000020000108af4 : lea esp, dword ptr [rdi - 0x74bbfffa] ; ret
0x0000020000157939 : lea r11, qword ptr [r11 + r9*4] ; jmp r11
0x000002000015609a : lea r11, qword ptr [rip + 0x16f] ; jmp r11
0x0000020000155dbb : lea r11, qword ptr [rip + 0x34e] ; jmp r11
0x00000200005db5d1 : lea r15, qword ptr [rsp + 0x30] ; call 0x20000157887
0x00000200006dc4eb : lea r8, qword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x200006dc501
0x000002000042a301 : lea r8, qword ptr [rax - 0x20] ; mov rax, r8 ; ret
0x0000020000459b89 : lea r8, qword ptr [rbp + 0x67] ; mov rcx, rbx ; call 0x20000545dd1
0x00000200004b6d58 : lea r8, qword ptr [rbp - 0x28] ; mov dl, 1 ; mov rcx, rsi ; call rax
0x0000020000588f38 : lea r8, qword ptr [rbp - 0x30] ; mov edx, r14d ; call rax
0x0000020000090dd7 : lea r8, qword ptr [rbp - 8] ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x00000200003da248 : lea r8, qword ptr [rbx + 0x1000] ; call rax
0x0000020000504e3a : lea r8, qword ptr [rip + 0x6c7ff] ; jmp 0x20000504e0d
0x000002000012c6eb : lea r8, qword ptr [rsp + 0x30] ; call qword ptr [rbx]
0x00000200006bdd1c : lea r8, qword ptr [rsp + 0x30] ; mov rcx, rax ; call r10
0x00000200007a91da : lea r8, qword ptr [rsp + 0x3c] ; call rax
0x00000200004004ce : lea r8, qword ptr [rsp + 0x40] ; call r10
0x00000200003fb979 : lea r8, qword ptr [rsp + 0x58] ; call rax
0x00000200000eebaa : lea r8, qword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x00000200001bc70a : lea r8, qword ptr [rsp + 0x88] ; call r9
0x00000200005328f6 : lea r8d, dword ptr [r12 + 0x28] ; call 0x20000157888
0x00000200005328f5 : lea r8d, dword ptr [r12 + 0x28] ; call 0x20000157889
0x00000200003e1658 : lea r8d, dword ptr [r9 + 0x38] ; call 0x2000000a28b
0x00000200000b508e : lea r8d, dword ptr [r9 + 1] ; call 0x200000d1366
0x00000200006da309 : lea r8d, dword ptr [r9 + 1] ; call rdi
0x00000200006d8263 : lea r8d, dword ptr [r9 + 1] ; call rsi
0x00000200006dab2b : lea r8d, dword ptr [r9 + 2] ; call rdi
0x00000200006d86f7 : lea r8d, dword ptr [r9 + 2] ; call rsi
0x000002000045d7bd : lea r8d, dword ptr [r9 + 3] ; call rdi
0x00000200006d95a6 : lea r8d, dword ptr [r9 - 0xb] ; call rsi
0x00000200001e5ea0 : lea r8d, dword ptr [r9 - 1] ; call qword ptr [r11]
0x00000200001e5c0a : lea r8d, dword ptr [r9 - 1] ; call qword ptr [r15]
0x00000200003f54d5 : lea r8d, dword ptr [r9 - 1] ; call r12
0x0000020000453534 : lea r8d, dword ptr [r9 - 1] ; call rbx
0x00000200004581b1 : lea r8d, dword ptr [r9 - 1] ; call rdi
0x0000020000530cff : lea r8d, dword ptr [r9 - 2] ; call qword ptr [rbx]
0x00000200006dd15c : lea r8d, dword ptr [r9 - 2] ; call rbx
0x00000200006d8de1 : lea r8d, dword ptr [r9 - 2] ; call rdi
0x0000020000400f83 : lea r8d, dword ptr [r9 - 3] ; call rsi
0x0000020000401164 : lea r8d, dword ptr [r9 - 4] ; call rsi
0x000002000045ddd6 : lea r8d, dword ptr [r9 - 6] ; call rsi
0x00000200006dac4d : lea r8d, dword ptr [r9 - 7] ; call rdi
0x00000200003f3b4a : lea r8d, dword ptr [r9 - 8] ; call rsi
0x00000200006db9b4 : lea r8d, dword ptr [r9 - 9] ; call r14
0x00000200006d9027 : lea r8d, dword ptr [r9 - 9] ; call rdi
0x000002000021b63b : lea r8d, dword ptr [rdx + 0x20] ; call 0x20000157886
0x000002000052c6d7 : lea r8d, dword ptr [rdx + 0x20] ; call 0x20000157887
0x00000200003eb5da : lea r8d, dword ptr [rdx + 0x30] ; call 0x20000157886
0x000002000052f6d8 : lea r8d, dword ptr [rdx + 0x40] ; call 0x20000157887
0x00000200005347c9 : lea r8d, dword ptr [rdx + 0x5e] ; call 0x20000157887
0x00000200005284fa : lea r8d, dword ptr [rdx + 0x78] ; call 0x20000157887
0x00000200007cbedf : lea r8d, dword ptr [rdx + 1] ; call 0x200001480f6
0x000002000058df64 : lea r8d, dword ptr [rdx + 3] ; call rsi
0x000002000058df2f : lea r8d, dword ptr [rdx + 5] ; call rsi
0x000002000049e8a6 : lea r9, qword ptr [r11 + r10*2] ; mov rax, r9 ; ret
0x0000020000150f92 : lea r9, qword ptr [r9 + rdx*4] ; jmp r9
0x00000200004d16e2 : lea r9, qword ptr [rdx + rax*8] ; jmp 0x200004d16a1
0x000002000070d964 : lea r9, qword ptr [rip - 0x5f2f7f] ; jmp rax
0x000002000070dbc0 : lea r9, qword ptr [rip - 0x5f31db] ; jmp rax
0x00000200006e2951 : lea r9, qword ptr [rsp + 0x50] ; call 0x200003feb9b
0x00000200001c01fa : lea r9d, dword ptr [rbp + 0x58] ; lea edx, dword ptr [rbp + 1] ; call 0x200001bc47d
0x00000200000cf65e : lea rax, qword ptr [r10 + r8] ; ret
0x0000020000008801 : lea rax, qword ptr [r8 + r8*4] ; lea rax, qword ptr [rdx + rax*8] ; ret
0x00000200004d55b9 : lea rax, qword ptr [r8 + rdx*4] ; ret
0x0000020000052668 : lea rax, qword ptr [r9 + 0x80000] ; jmp 0x2000005263b
0x0000020000161eca : lea rax, qword ptr [r9 - 8] ; ret
0x000002000004378b : lea rax, qword ptr [rax + rax*4] ; lea rax, qword ptr [rdx + rax*8] ; ret
0x00000200000a225b : lea rax, qword ptr [rax + rcx*8] ; ret
0x00000200004d55ac : lea rax, qword ptr [rax + rdx*4] ; ret
0x00000200000479ac : lea rax, qword ptr [rax + rdx*8] ; ret
0x00000200000072ec : lea rax, qword ptr [rax*8 + 0x30] ; ret
0x00000200000313d7 : lea rax, qword ptr [rbp - 0x19] ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [rbx]
0x00000200001143a4 : lea rax, qword ptr [rbx + rcx*2] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004a91f9 : lea rax, qword ptr [rcx + 0x20] ; ret
0x00000200004a91e1 : lea rax, qword ptr [rcx + 0x24] ; ret
0x00000200004a91fe : lea rax, qword ptr [rcx + 0x2c] ; ret
0x0000020000074288 : lea rax, qword ptr [rcx + 0x30] ; add rax, r8 ; ret
0x0000020000119a7a : lea rax, qword ptr [rcx + 0x3600] ; ret
0x0000020000044cc4 : lea rax, qword ptr [rcx + 0x38] ; ret
0x00000200004a9203 : lea rax, qword ptr [rcx + 0x3c] ; ret
0x00000200004a91eb : lea rax, qword ptr [rcx + 0x40] ; ret
0x0000020000032b3c : lea rax, qword ptr [rcx + 0x450] ; ret
0x0000020000447d49 : lea rax, qword ptr [rcx + 0x4c] ; ret
0x00000200004aa063 : lea rax, qword ptr [rcx + 0x510] ; ret
0x000002000022c0e8 : lea rax, qword ptr [rcx + 0x59] ; add rsp, 0x28 ; ret
0x0000020000447d4e : lea rax, qword ptr [rcx + 0x5c] ; ret
0x0000020000447d53 : lea rax, qword ptr [rcx + 0x64] ; ret
0x00000200001d80ab : lea rax, qword ptr [rcx + 0x788] ; ret
0x00000200001d80b3 : lea rax, qword ptr [rcx + 0x790] ; ret
0x00000200000905fd : lea rax, qword ptr [rcx + 0x7b8] ; ret
0x00000200000a0dcd : lea rax, qword ptr [rcx + 0xc0] ; ret
0x000002000005ee94 : lea rax, qword ptr [rcx + 1] ; ret
0x00000200004b0fe0 : lea rax, qword ptr [rcx + 2] ; ret
0x0000020000729450 : lea rax, qword ptr [rcx + 4] ; add rsp, 0x38 ; ret
0x0000020000569604 : lea rax, qword ptr [rcx + 8] ; ret
0x00000200006ae767 : lea rax, qword ptr [rcx + r9*8] ; add rsp, 0x28 ; ret
0x000002000013cbc8 : lea rax, qword ptr [rcx + rax - 1] ; ret
0x000002000013cbce : lea rax, qword ptr [rcx + rax - 2] ; ret
0x000002000013cbd4 : lea rax, qword ptr [rcx + rax - 3] ; ret
0x000002000013cbda : lea rax, qword ptr [rcx + rax - 4] ; ret
0x000002000013cbe0 : lea rax, qword ptr [rcx + rax - 5] ; ret
0x000002000013cbe6 : lea rax, qword ptr [rcx + rax - 6] ; ret
0x000002000013cbec : lea rax, qword ptr [rcx + rax - 7] ; ret
0x000002000013cbf2 : lea rax, qword ptr [rcx + rax - 8] ; ret
0x0000020000080e7e : lea rax, qword ptr [rcx + rax*4] ; ret
0x0000020000157a0e : lea rax, qword ptr [rcx + rax*8] ; ret
0x0000020000456927 : lea rax, qword ptr [rcx + rcx*2] ; shl rax, 3 ; ret
0x00000200001eb11a : lea rax, qword ptr [rcx + rdx] ; ret
0x0000020000658d17 : lea rax, qword ptr [rcx - 0x10] ; ret
0x00000200001ca036 : lea rax, qword ptr [rcx*8 + 0xd0] ; ret
0x00000200000f43a5 : lea rax, qword ptr [rdi + 8] ; cmp rbx, rax ; je 0x200000f4378 ; jmp 0x200000f435d
0x0000020000210bdb : lea rax, qword ptr [rdi + rcx*2] ; add rsp, 0x50 ; pop rdi ; ret
0x000002000011cd26 : lea rax, qword ptr [rdi + rcx] ; xor edx, edx ; xor ecx, ecx ; call rax
0x0000020000728914 : lea rax, qword ptr [rdx + 0x20] ; add rsp, 0x28 ; ret
0x000002000060a144 : lea rax, qword ptr [rdx + 0x38] ; mov qword ptr [rdx + 0x28], rax ; ret
0x000002000004377d : lea rax, qword ptr [rdx + 0x880] ; ret
0x00000200000cf654 : lea rax, qword ptr [rdx + r8] ; ret
0x0000020000008805 : lea rax, qword ptr [rdx + rax*8] ; ret
0x0000020000092212 : lea rax, qword ptr [rdx - 0x190] ; ret
0x000002000015193a : lea rax, qword ptr [rdx*4] ; pop rdi ; ret
0x000002000000a30d : lea rax, qword ptr [rip + 0x14e92c] ; ret
0x0000020000009921 : lea rax, qword ptr [rip + 0x14f248] ; ret
0x000002000000a347 : lea rax, qword ptr [rip + 0x1503d2] ; ret
0x000002000000a33f : lea rax, qword ptr [rip + 0x1503fa] ; ret
0x000002000000a34f : lea rax, qword ptr [rip + 0x15040a] ; ret
0x000002000000a357 : lea rax, qword ptr [rip + 0x150422] ; ret
0x000002000000a364 : lea rax, qword ptr [rip + 0x150455] ; ret
0x000002000000a337 : lea rax, qword ptr [rip + 0x150462] ; ret
0x0000020000009997 : lea rax, qword ptr [rip + 0x150c92] ; ret
0x00000200000098f3 : lea rax, qword ptr [rip + 0x150cd6] ; ret
0x00000200000099ca : lea rax, qword ptr [rip + 0x150cdf] ; ret
0x0000020000009900 : lea rax, qword ptr [rip + 0x150d09] ; ret
0x00000200000098d4 : lea rax, qword ptr [rip + 0x150d15] ; ret
0x0000020000009910 : lea rax, qword ptr [rip + 0x150d39] ; ret
0x0000020000009908 : lea rax, qword ptr [rip + 0x150d51] ; ret
0x0000020000009932 : lea rax, qword ptr [rip + 0x150d57] ; ret
0x0000020000009958 : lea rax, qword ptr [rip + 0x150d81] ; ret
0x000002000000996d : lea rax, qword ptr [rip + 0x150d8c] ; ret
0x00000200000098eb : lea rax, qword ptr [rip + 0x150d8e] ; ret
0x0000020000009975 : lea rax, qword ptr [rip + 0x150da4] ; ret
0x00000200000099a4 : lea rax, qword ptr [rip + 0x150dd5] ; ret
0x0000020000009982 : lea rax, qword ptr [rip + 0x150dd7] ; ret
0x0000020000009950 : lea rax, qword ptr [rip + 0x150de9] ; ret
0x00000200000099ac : lea rax, qword ptr [rip + 0x150ded] ; ret
0x000002000000998f : lea rax, qword ptr [rip + 0x150e2a] ; ret
0x00000200000099bd : lea rax, qword ptr [rip + 0x150e5c] ; ret
0x0000020000009965 : lea rax, qword ptr [rip + 0x150ed4] ; ret
0x00000200001c2f13 : lea rax, qword ptr [rip + 0x15e026] ; ret
0x000002000013ac58 : lea rax, qword ptr [rip + 0x1de8a9] ; ret
0x000002000053d5c8 : lea rax, qword ptr [rip + 0x20b261] ; ret
0x00000200000bf6c1 : lea rax, qword ptr [rip + 0x240b78] ; ret
0x00000200000de689 : lea rax, qword ptr [rip + 0x246df0] ; ret
0x00000200000a0dd5 : lea rax, qword ptr [rip + 0x2833e4] ; ret
0x000002000009d9f0 : lea rax, qword ptr [rip + 0x287a89] ; ret
0x0000020000070bb8 : lea rax, qword ptr [rip + 0x2b36a1] ; ret
0x000002000042ee54 : lea rax, qword ptr [rip + 0x2bbbcd] ; ret
0x000002000005284b : lea rax, qword ptr [rip + 0x2d19ee] ; ret
0x0000020000044dc8 : lea rax, qword ptr [rip + 0x2defc9] ; ret
0x0000020000015c7e : lea rax, qword ptr [rip + 0x30f7fb] ; ret
0x00000200001d001e : lea rax, qword ptr [rip + 0x51fa5f] ; ret
0x0000020000517d0c : lea rax, qword ptr [rip + 0x589ad] ; ret
0x0000020000517d2e : lea rax, qword ptr [rip + 0x589bb] ; ret
0x0000020000517d1e : lea rax, qword ptr [rip + 0x589fb] ; ret
0x0000020000517d26 : lea rax, qword ptr [rip + 0x58a23] ; ret
0x00000200004f58d9 : lea rax, qword ptr [rip - 0x1d6640] ; ret
0x00000200004fe39a : lea rax, qword ptr [rip - 0x1df101] ; ret
0x0000020000697c8b : lea rax, qword ptr [rip - 0x39f4da] ; ret
0x0000020000697c6f : lea rax, qword ptr [rip - 0x39f4f6] ; ret
0x0000020000697c7d : lea rax, qword ptr [rip - 0x39f52c] ; ret
0x0000020000697c45 : lea rax, qword ptr [rip - 0x39f53c] ; ret
0x0000020000697c61 : lea rax, qword ptr [rip - 0x39f540] ; ret
0x0000020000697c53 : lea rax, qword ptr [rip - 0x39f58a] ; ret
0x0000020000726000 : lea rax, qword ptr [rip - 0x42d1e7] ; ret
0x00000200007b6c94 : lea rax, qword ptr [rip - 0x66045b] ; ret
0x00000200007b6cb4 : lea rax, qword ptr [rip - 0x6651db] ; ret
0x00000200007b6cbc : lea rax, qword ptr [rip - 0x67c033] ; ret
0x0000020000161382 : lea rax, qword ptr [rip - 0x6b99] ; ret
0x00000200007b6ca4 : lea rax, qword ptr [rip - 0x6c1e7b] ; ret
0x00000200007b6cc4 : lea rax, qword ptr [rip - 0x7225db] ; ret
0x00000200007b6cac : lea rax, qword ptr [rip - 0x722f23] ; ret
0x00000200007b6c9c : lea rax, qword ptr [rip - 0x723e83] ; ret
0x0000020000161371 : lea rax, qword ptr [rip - 0x8738] ; ret
0x0000020000650036 : lea rax, qword ptr [rsp + 0x40] ; cmp rbx, rax ; jne 0x2000065000b ; jmp 0x200006500b4
0x000002000014bd50 : lea rax, qword ptr [rsp + 8] ; ret
0x00000200000099a3 : lea rax, qword ptr cs:[rip + 0x150dd5] ; ret
0x00000200000098ea : lea rax, qword ptr ds:[rip + 0x150d8e] ; ret
0x000002000015ff38 : lea rbx, qword ptr [rcx - 8] ; jmp 0x2000015ff4a
0x0000020000160066 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000160078
0x0000020000160184 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000160196
0x0000020000172815 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000172827
0x00000200001728e5 : lea rbx, qword ptr [rcx - 8] ; jmp 0x200001728f7
0x0000020000173b4e : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000173b60
0x0000020000173c49 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000173c5b
0x0000020000174465 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000174477
0x0000020000174625 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000174637
0x0000020000217fef : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000218001
0x0000020000218103 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000218115
0x000002000021821f : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000218231
0x00000200004dbe03 : lea rcx, qword ptr [r14 + 0x160] ; call 0x200000e8069
0x00000200004385d7 : lea rcx, qword ptr [rax + 0x10] ; call 0x2000005f427
0x000002000002fb30 : lea rcx, qword ptr [rax + rdx] ; mov qword ptr [r8], rcx ; ret
0x0000020000442477 : lea rcx, qword ptr [rax - 0x10] ; jmp 0x20000442445
0x0000020000451329 : lea rcx, qword ptr [rax - 0x10] ; jmp 0x200004512f6
0x000002000040b5f1 : lea rcx, qword ptr [rax - 0x188] ; call 0x20000157889
0x00000200004bea6f : lea rcx, qword ptr [rbp + 0x10] ; call 0x200000ee697
0x00000200001625bf : lea rcx, qword ptr [rbp + 0x10] ; call rbx
0x0000020000513ea2 : lea rcx, qword ptr [rbp - 0x11] ; call 0x2000013ba77
0x00000200007b061f : lea rcx, qword ptr [rbp - 0x20] ; and dword ptr [rbp - 0x10], 0 ; call qword ptr [rdi]
0x000002000051ee0d : lea rcx, qword ptr [rbp - 0x20] ; call 0x2000013fb97
0x000002000052ca70 : lea rcx, qword ptr [rbp - 0x20] ; mov edi, eax ; call r15
0x00000200005a385f : lea rcx, qword ptr [rbp - 0x21] ; call 0x2000005f908
0x000002000018b59f : lea rcx, qword ptr [rbp - 0x21] ; xor edx, edx ; call 0x20000157888
0x00000200004b041b : lea rcx, qword ptr [rbp - 0x28] ; call 0x200000fc6ae
0x000002000051862f : lea rcx, qword ptr [rbp - 0x28] ; call 0x200004548ba
0x0000020000454437 : lea rcx, qword ptr [rbp - 0x34] ; call rax
0x00000200005b15fe : lea rcx, qword ptr [rbp - 0x40] ; call 0x200001daeef
0x00000200003e78b5 : lea rcx, qword ptr [rbp - 0x49] ; call 0x20000007c37
0x00000200001c0ba5 : lea rcx, qword ptr [rbp - 0x50] ; call 0x200001bce5e
0x000002000058fb4c : lea rcx, qword ptr [rbp - 0x59] ; call 0x200001b500f
0x00000200003ed64f : lea rcx, qword ptr [rbp - 0x59] ; xor edx, edx ; call qword ptr [rdi]
0x000002000049abf0 : lea rcx, qword ptr [rbp - 0x69] ; call qword ptr [rax]
0x0000020000432839 : lea rcx, qword ptr [rbp - 0x78] ; call 0x2000005f907
0x00000200007d47cf : lea rcx, qword ptr [rbp - 0x78] ; call 0x2000040286b
0x00000200006dd39d : lea rcx, qword ptr [rbp - 0x80] ; call 0x20000009676
0x0000020000546777 : lea rcx, qword ptr [rbp - 9] ; call r12
0x00000200005fadbe : lea rcx, qword ptr [rbx + 0x10] ; call 0x2000046701e
0x000002000058dacf : lea rcx, qword ptr [rbx + 0x18] ; call 0x20000009d1a
0x00000200004c66a8 : lea rcx, qword ptr [rbx + 0x18] ; call 0x200000e8067
0x00000200005247dd : lea rcx, qword ptr [rbx + 0x18] ; mov dl, 1 ; call 0x20000430a0c
0x00000200005fadc7 : lea rcx, qword ptr [rbx + 0x28] ; call 0x2000046701e
0x0000020000479e80 : lea rcx, qword ptr [rbx + 0x28] ; xor edx, edx ; call 0x2000009e099
0x00000200004bd818 : lea rcx, qword ptr [rbx + 0x38] ; call 0x200000e5727
0x00000200004bd7a3 : lea rcx, qword ptr [rbx + 0x38] ; mov dl, 1 ; call 0x200000e5349
0x0000020000002480 : lea rcx, qword ptr [rbx + 0x48] ; xor r9d, r9d ; call 0x200000ee699
0x00000200004dbde6 : lea rcx, qword ptr [rbx - 0x10] ; call 0x200000e8066
0x00000200000a2257 : lea rcx, qword ptr [rcx + rcx*4] ; lea rax, qword ptr [rax + rcx*8] ; ret
0x00000200004c74a1 : lea rcx, qword ptr [rdi + 0x10] ; call 0x200000e8067
0x000002000058da6e : lea rcx, qword ptr [rdi + 0x18] ; mov rdx, rax ; call 0x20000009d1d
0x000002000066e8b6 : lea rcx, qword ptr [rdi + 0x28] ; call 0x2000051ab5a
0x0000020000479c47 : lea rcx, qword ptr [rdi + 0x28] ; xor edx, edx ; call 0x2000009e099
0x00000200000a49a6 : lea rcx, qword ptr [rdi + 0x48] ; call 0x20000070bc6
0x000002000055d046 : lea rcx, qword ptr [rdi + 0x59] ; call rax
0x000002000061d775 : lea rcx, qword ptr [rdi + 0x6a8] ; call 0x200000e99c9
0x000002000051249a : lea rcx, qword ptr [rdi + 8] ; call 0x2000013d1b7
0x00000200004dbda5 : lea rcx, qword ptr [rdi - 0x10] ; call 0x200000e8066
0x00000200004a9cc1 : lea rcx, qword ptr [rdi - 0x470] ; call r15
0x00000200001c94f6 : lea rcx, qword ptr [rip + 0x13c6e3] ; call 0x200000e5729
0x000002000057be05 : lea rcx, qword ptr [rip + 0x1ccd14] ; call 0x200000e8069
0x000002000057bdbc : lea rcx, qword ptr [rip + 0x1ccd5d] ; call 0x200000e8069
0x000002000057bd74 : lea rcx, qword ptr [rip + 0x1ccda5] ; call 0x200000e8069
0x000002000003c053 : lea rcx, qword ptr [rip + 0x2e9426] ; call 0x200000a82b9
0x000002000019f17a : lea rcx, qword ptr [rip + 0x62a57] ; call rax
0x000002000014e4bf : lea rcx, qword ptr [rip + 0x7ed5] ; jmp rcx
0x000002000017a88e : lea rcx, qword ptr [rip + 0x87343] ; call rax
0x000002000067f492 : lea rcx, qword ptr [rip + 0xc9437] ; call 0x2000001b6e1
0x000002000067f3ec : lea rcx, qword ptr [rip + 0xc94dd] ; call 0x2000001b6e1
0x000002000045945a : lea rcx, qword ptr [rip - 0x13aa61] ; call 0x200000e5729
0x0000020000569504 : lea rcx, qword ptr [rip - 0x2416cb] ; call 0x20000005729
0x0000020000601f00 : lea rcx, qword ptr [rip - 0x2e0307] ; call 0x2000005e179
0x00000200007b6e8c : lea rcx, qword ptr [rip - 0x4b36b3] ; call 0x20000563139
0x00000200003cc8bd : lea rcx, qword ptr [rip - 0xc9864] ; call 0x20000078b99
0x00000200004c6ed7 : lea rcx, qword ptr [rsi + 0x10] ; call 0x200000e8067
0x0000020000472806 : lea rcx, qword ptr [rsi + 0x10] ; xor edx, edx ; call 0x2000009e099
0x00000200004c109d : lea rcx, qword ptr [rsi + 0x28] ; call 0x200000e8067
0x00000200000a0cf8 : lea rcx, qword ptr [rsi + 0x68] ; call 0x2000007cf0e
0x000002000002a0ea : lea rcx, qword ptr [rsp + 0x20] ; call 0x200000e63b7
0x0000020000684020 : lea rcx, qword ptr [rsp + 0x20] ; call 0x200000f0307
0x0000020000582376 : lea rcx, qword ptr [rsp + 0x20] ; call 0x2000014b4d9
0x000002000052d941 : lea rcx, qword ptr [rsp + 0x20] ; call 0x20000157888
0x000002000052d940 : lea rcx, qword ptr [rsp + 0x20] ; call 0x20000157889
0x00000200005badaa : lea rcx, qword ptr [rsp + 0x20] ; call 0x2000046701f
0x0000020000705e85 : lea rcx, qword ptr [rsp + 0x20] ; call r8
0x00000200005303f0 : lea rcx, qword ptr [rsp + 0x20] ; call rdi
0x00000200006840be : lea rcx, qword ptr [rsp + 0x20] ; mov edi, eax ; call 0x200000f0309
0x000002000051f9e1 : lea rcx, qword ptr [rsp + 0x28] ; call 0x200001480d8
0x000002000051f08e : lea rcx, qword ptr [rsp + 0x30] ; call 0x20000149e18
0x000002000051a923 : lea rcx, qword ptr [rsp + 0x30] ; call 0x20000526bf3
0x00000200007bb054 : lea rcx, qword ptr [rsp + 0x30] ; call 0x200005672bb
0x00000200001ade3c : lea rcx, qword ptr [rsp + 0x30] ; call rax
0x000002000013ad25 : lea rcx, qword ptr [rsp + 0x30] ; mov rdx, r12 ; call rax
0x00000200003db5e2 : lea rcx, qword ptr [rsp + 0x34] ; call 0x20000157887
0x00000200001c0213 : lea rcx, qword ptr [rsp + 0x40] ; call 0x200001bc47b
0x00000200004327b1 : lea rcx, qword ptr [rsp + 0x48] ; call 0x2000005f908
0x00000200000cc2c4 : lea rcx, qword ptr [rsp + 0x48] ; call rax
0x00000200006a3644 : lea rcx, qword ptr [rsp + 0x50] ; call 0x2000005f907
0x000002000043b01f : lea rcx, qword ptr [rsp + 0x50] ; call 0x20000068458
0x00000200007d13d1 : lea rcx, qword ptr [rsp + 0x50] ; call r12
0x00000200004c0ec8 : lea rcx, qword ptr [rsp + 0x58] ; call 0x200000f0308
0x00000200006a3665 : lea rcx, qword ptr [rsp + 0x60] ; call 0x2000005f907
0x0000020000793627 : lea rcx, qword ptr [rsp + 0x68] ; call 0x2000005f907
0x000002000044cb89 : lea rcx, qword ptr [rsp + 0x70] ; call 0x2000006d768
0x00000200005156e7 : lea rcx, qword ptr [rsp + 0x70] ; call 0x2000013fb98
0x0000020000469c66 : lea rdx, qword ptr [r13 - 0x30] ; mov rcx, r13 ; call rax
0x0000020000483763 : lea rdx, qword ptr [r15 + 0x58] ; mov rcx, r12 ; call 0x2000005fa09
0x0000020000215bfd : lea rdx, qword ptr [rax + 0x18] ; mov rax, rdx ; ret
0x000002000000d76f : lea rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x2000000d763 ; ret
0x00000200005e371e : lea rdx, qword ptr [rbp + 7] ; call 0x2000005fa06
0x0000020000463cad : lea rdx, qword ptr [rbp + 8] ; mov ecx, ebx ; call 0x200000938f1
0x000002000051d8b9 : lea rdx, qword ptr [rbp - 0x10] ; call 0x20000148377
0x0000020000640da2 : lea rdx, qword ptr [rbp - 0x10] ; mov rcx, rsi ; call 0x2000063d035
0x0000020000696ea8 : lea rdx, qword ptr [rbp - 0x18] ; call 0x200006d3142
0x0000020000090c1d : lea rdx, qword ptr [rbp - 0x20] ; call r11
0x000002000060713a : lea rdx, qword ptr [rbp - 0x38] ; call 0x200004b338a
0x00000200003e188d : lea rdx, qword ptr [rbp - 0x40] ; call 0x200000035eb
0x000002000051d9d5 : lea rdx, qword ptr [rbp - 0x41] ; call 0x200001480b7
0x000002000051da58 : lea rdx, qword ptr [rbp - 0x41] ; call 0x200001487b7
0x0000020000458aa3 : lea rdx, qword ptr [rbp - 0x41] ; mov qword ptr [rbp - 0x41], r11 ; call rax
0x00000200001a85d0 : lea rdx, qword ptr [rbp - 0x41] ; mov rcx, rbx ; call 0x200000248c9
0x0000020000539652 : lea rdx, qword ptr [rbp - 0x4c] ; mov rcx, rdi ; call r15
0x0000020000520164 : lea rdx, qword ptr [rbp - 0x50] ; call 0x2000014a7f7
0x000002000017bb68 : lea rdx, qword ptr [rbp - 0x60] ; mov rcx, rax ; call 0x20000217da1
0x00000200007a8b10 : lea rdx, qword ptr [rbp - 0x7c] ; call 0x200003d0a6f
0x00000200006e17b6 : lea rdx, qword ptr [rbx + rbx] ; call 0x2000024da46
0x00000200006e17b5 : lea rdx, qword ptr [rbx + rbx] ; call 0x2000024da47
0x00000200006e17b4 : lea rdx, qword ptr [rbx + rbx] ; call 0x2000024da48
0x00000200006e17b3 : lea rdx, qword ptr [rbx + rbx] ; call 0x2000024da49
0x00000200004e3386 : lea rdx, qword ptr [rcx - 0x30] ; call rax
0x00000200001acac3 : lea rdx, qword ptr [rdi + 0x1e0] ; call rax
0x000002000040a0e2 : lea rdx, qword ptr [rdx + 4] ; add ecx, -1 ; jne 0x2000040a0e6 ; ret
0x0000020000559020 : lea rdx, qword ptr [rip + 0x13299] ; jmp 0x20000558ff4
0x000002000019e918 : lea rdx, qword ptr [rip + 0x158e01] ; call rax
0x0000020000151342 : lea rdx, qword ptr [rip + 0x71] ; jmp rdx
0x0000020000445887 : lea rdx, qword ptr [rip - 0x1284ce] ; mov rax, rdx ; ret
0x000002000054b879 : lea rdx, qword ptr [rip - 0x50d3bc] ; call 0x20000057add
0x00000200003fa19f : lea rdx, qword ptr [rip - 0xdc866] ; mov rax, rdx ; ret
0x000002000006f198 : lea rdx, qword ptr [rsi + 0x10] ; call r8
0x00000200003d065d : lea rdx, qword ptr [rsp + 0x20] ; call 0x2000051c8f3
0x000002000052a5fe : lea rdx, qword ptr [rsp + 0x20] ; mov ecx, edi ; call rsi
0x00000200001bd017 : lea rdx, qword ptr [rsp + 0x28] ; call r8
0x00000200001c4bed : lea rdx, qword ptr [rsp + 0x28] ; mov cl, bl ; call rax
0x00000200001162aa : lea rdx, qword ptr [rsp + 0x28] ; xor ecx, ecx ; call rax
0x000002000046428b : lea rdx, qword ptr [rsp + 0x30] ; call 0x20000093964
0x00000200004479d4 : lea rdx, qword ptr [rsp + 0x30] ; call rax
0x000002000064c5d5 : lea rdx, qword ptr [rsp + 0x38] ; call 0x200003f8857
0x00000200007b93b7 : lea rdx, qword ptr [rsp + 0x38] ; call rax
0x000002000008f054 : lea rdx, qword ptr [rsp + 0x40] ; mov bl, al ; call rsi
0x00000200001bcfef : lea rdx, qword ptr [rsp + 0x48] ; call r9
0x000002000048cf9c : lea rdx, qword ptr [rsp + 0x50] ; mov rcx, rdi ; call rsi
0x00000200006ad02e : lea rdx, qword ptr [rsp + 0x58] ; call rax
0x000002000048e06d : lea rdx, qword ptr [rsp + 0x58] ; mov rcx, rbx ; call r15
0x0000020000431ade : lea rdx, qword ptr [rsp + 0x60] ; mov rcx, rbx ; call rsi
0x000002000046eab5 : lea rdx, qword ptr [rsp + 0x78] ; mov rcx, rdi ; call r12
0x00000200004d6a8f : lea rdx, qword ptr [rsp + 0xb0] ; call r8
0x000002000002c2be : lea rsp, qword ptr [rbp + 0x20] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200006f3229 : lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x0000020000106a45 : lea rsp, qword ptr [rbp + 0x30] ; pop r15 ; pop r14 ; pop rbp ; ret
0x0000020000106ab5 : lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x000002000021b788 : lea rsp, qword ptr [rbp + 0x40] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200000047e2 : lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x0000020000151020 : leave ; adc byte ptr [rbx], al ; rol ecx, -0x18 ; adc byte ptr [rcx - 0xa], al ; ret
0x0000020000202bcf : leave ; adc byte ptr [rdi + rax - 1], dh ; ret 0x3b41
0x00000200007cbe33 : leave ; adc dword ptr [rax - 0x16387401], ebp ; push rsi ; ret 0xfffe
0x0000020000069e23 : leave ; adc dword ptr [rax], eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200006f49e7 : leave ; adc eax, 0x1d890000 ; jg 0x200006f49fc ; ret
0x00000200004e3ed8 : leave ; add byte ptr [rax], al ; add byte ptr [rbx - 0x9b7dba4], cl ; ret
0x0000020000459b6b : leave ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x00000200001438f1 : leave ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; sal dh, cl ; ret
0x000002000063a1ed : leave ; add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; outsb dx, byte ptr [rsi] ; ret 0xb841
0x0000020000150f42 : leave ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7406
0x00000200001497c5 : leave ; add byte ptr [rax], al ; add cl, ch ; jb 0x2000014979d ; add byte ptr [rax], al ; ret
0x000002000014964b : leave ; add byte ptr [rax], al ; ret
0x00000200003cd1ed : leave ; add dword ptr [rcx + 0x5c], -1 ; je 0x200003cd201 ; mov al, r10b ; ret
0x00000200005ce322 : leave ; add eax, 0x1c ; movzx ecx, al ; call r10
0x000002000024c561 : leave ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x000002000024c0ea : leave ; add ecx, dword ptr [rcx - 0x75] ; ret 0x3348
0x000002000007e689 : leave ; add esi, esi ; ret
0x00000200001ceafb : leave ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005ef56e : leave ; add rsp, 0x28 ; jmp 0x200006ab82f
0x00000200003ca678 : leave ; add rsp, 0x28 ; jmp qword ptr [rip - 0x173d2c]
0x00000200006ae76a : leave ; add rsp, 0x28 ; ret
0x000002000044576a : leave ; and bl, ch ; enter 0x58b8, 0 ; add al, al ; ret
0x00000200001a1e1d : leave ; and dh, dh ; ret 0x7402
0x0000020000195d4b : leave ; and dh, dh ; ret 0xf02
0x00000200000330e8 : leave ; and eax, ecx ; ret
0x000002000003dea5 : leave ; and r10d, ecx ; mov eax, r10d ; ret
0x00000200000f02c5 : leave ; and r8, rcx ; test r8, r8 ; jne 0x200000f02e2 ; ret
0x00000200001fc797 : leave ; and rcx, rax ; mov rax, rcx ; ret
0x0000020000059e15 : leave ; bts esi, 0x1c ; jmp 0x20000059de5
0x00000200003e360d : leave ; call 0x200000036c8
0x0000020000196966 : leave ; call 0x20000032c07
0x000002000045fafe : leave ; call 0x2000008e158
0x0000020000789871 : leave ; call 0x200000c5b2b
0x00000200004b43c3 : leave ; call 0x200000d6424
0x00000200005f1ccb : leave ; call 0x200000ed707
0x0000020000002486 : leave ; call 0x200000ee693
0x00000200003cfb38 : leave ; call 0x20000115998
0x00000200001be6ac : leave ; call 0x200001be5e8
0x00000200001a73a9 : leave ; call 0x200001d3637
0x00000200006235b4 : leave ; call 0x2000024d004
0x00000200006213a1 : leave ; call 0x2000024da44
0x00000200006213a0 : leave ; call 0x2000024da45
0x00000200007d08ac : leave ; call 0x200003f7bc0
0x00000200006f74cd : leave ; call 0x200006f37af
0x0000020000177350 : leave ; call qword ptr [rax]
0x00000200005878d8 : leave ; call qword ptr [rsi]
0x0000020000242f24 : leave ; call r10
0x0000020000055db6 : leave ; call r14
0x0000020000218ace : leave ; call r9
0x00000200001162b0 : leave ; call rax
0x00000200001300e7 : leave ; call rdx
0x00000200001b3f1a : leave ; cmovne eax, ecx ; mov dword ptr [r8 + 0x5c], eax ; ret
0x000002000071182d : leave ; cmovne eax, edx ; ret
0x000002000011caac : leave ; cmovne edx, r10d ; mov eax, edx ; ret
0x000002000021b1b5 : leave ; cmovne r8d, eax ; mov eax, r8d ; ret
0x000002000006f288 : leave ; cmovne rax, rcx ; mov qword ptr [r9], rax ; ret
0x00000200006e022e : leave ; cmovs eax, ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200007c57a3 : leave ; cmp byte ptr [rdx + rcx*8 + 0xe], r11b ; setne al ; ret
0x000002000049a77a : leave ; cmp r8d, ecx ; seta al ; ret
0x000002000013c26d : leave ; cmp rax, rcx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000200005b21f4 : leave ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x000002000068ccd0 : leave ; dec dword ptr [rax - 0x7d] ; ret 0x4802
0x0000020000718e83 : leave ; dec dword ptr [rax - 1] ; ret
0x00000200004b825c : leave ; dec dword ptr [rbp + 0x21] ; outsb dx, byte ptr [rsi] ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200004551ae : leave ; dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x0000020000672246 : leave ; dec dword ptr [rcx - 0x7cb797b5] ; ret
0x0000020000674e86 : leave ; enter 0x44ff, -0x73 ; adc al, 0x23 ; ret 0x8948
0x00000200003e4999 : leave ; imul eax, r9d ; sub eax, r8d ; ret
0x0000020000136d71 : leave ; in al, dx ; xchg byte ptr [rdx], bh ; add dh, dh ; ret 0xf02
0x000002000067109e : leave ; inc dword ptr [rax + rbp*8] ; ret 0xb90f
0x00000200004b4af1 : leave ; inc dword ptr [rbp - 0x75] ; ret
0x00000200006bbfbe : leave ; inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xd03b
0x00000200007b7a03 : leave ; inc dword ptr [rbp - 0xd28740] ; ret
0x0000020000785918 : leave ; inc dword ptr [rbx + rax - 0x37] ; jne 0x20000785910 ; mov rax, rdx ; jmp 0x2000078592f
0x000002000049b9de : leave ; inc edx ; jmp 0x2000049b9d4
0x000002000069d80c : leave ; jb 0x2000069d7f8 ; xor ecx, ecx ; mov rax, rcx ; ret
0x00000200000b9cf8 : leave ; je 0x200000b9d09 ; call 0x2000009dc89
0x00000200000bea1a : leave ; je 0x200000bea2b ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000e6ecf : leave ; je 0x200000e6ede ; add rsp, 0x28 ; ret
0x00000200000f140e : leave ; je 0x200000f140f ; mov rax, r9 ; ret
0x00000200000f9300 : leave ; je 0x200000f930a ; call rcx
0x0000020000128ab5 : leave ; je 0x20000128abd ; call rcx
0x00000200001ae5a5 : leave ; je 0x2000012f42d ; call 0x2000049a819
0x000002000013b61e : leave ; je 0x2000013b5f5 ; sub r9d, ecx ; mov eax, r9d ; ret
0x0000020000160a90 : leave ; je 0x20000160a9e ; mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x000002000016bf64 : leave ; je 0x2000016bf72 ; mov qword ptr [rcx], rax ; mov al, 1 ; ret
0x00000200001b411e : leave ; je 0x200001b412a ; mov eax, dword ptr [rcx + 0x70] ; ret
0x00000200001b9775 : leave ; je 0x200001b9783 ; mov qword ptr [r9], r10 ; xor al, al ; ret
0x00000200001b9780 : leave ; je 0x200001b978e ; mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x00000200001bde1e : leave ; je 0x200001bde28 ; call r9
0x00000200001c459e : leave ; je 0x200001c45a6 ; call rcx
0x00000200001c45c1 : leave ; je 0x200001c45c9 ; call rcx
0x00000200001c45fe : leave ; je 0x200001c4608 ; jmp rcx
0x00000200001c464d : leave ; je 0x200001c4657 ; jmp rcx
0x00000200001c46bd : leave ; je 0x200001c46c5 ; call rcx
0x00000200001c46da : leave ; je 0x200001c46e4 ; jmp rcx
0x00000200001d20e1 : leave ; je 0x200001d20f3 ; mov dword ptr [rcx], r10d ; ret
0x00000200001d3efe : leave ; je 0x200001d3f0f ; mov eax, 0xc0000225 ; ret
0x00000200001e41ee : leave ; je 0x200001e41ff ; mov dl, 2 ; call 0x200000a0487
0x00000200001fc1bf : leave ; je 0x200001fc1d7 ; and qword ptr [rcx], rdx ; ret
0x00000200001fc1c8 : leave ; je 0x200001fc1da ; mov eax, dword ptr [rdx + 4] ; mov qword ptr [rcx], rax ; ret
0x000002000021c2c1 : leave ; je 0x2000021c2d4 ; dec cl ; mov byte ptr [rax + r8], cl ; ret
0x0000020000230274 : leave ; je 0x20000230280 ; add dword ptr [rcx], r11d ; ret
0x00000200003c98c3 : leave ; je 0x200003c98cb ; call rcx
0x00000200003dc6f2 : leave ; je 0x200003dc6fa ; call rcx
0x00000200003e6549 : leave ; je 0x200003e6557 ; call 0x200000071f2
0x000002000040491e : leave ; je 0x20000404959 ; mov eax, r10d ; ret
0x000002000040491e : leave ; je 0x2000040495a ; mov eax, r10d ; ret
0x000002000043fe06 : leave ; je 0x2000043fe12 ; mov qword ptr [r9], rax ; ret
0x000002000046ae03 : leave ; je 0x2000046ae2a ; call 0x2000009a736
0x00000200004c7147 : leave ; je 0x200004c715a ; call 0x200000e7da6
0x00000200004c754d : leave ; je 0x200004c755b ; call 0x200000e7da6
0x000002000051f0e9 : leave ; je 0x2000051f0f7 ; call 0x20000148076
0x0000020000521b34 : leave ; je 0x20000521b44 ; ret
0x0000020000521e52 : leave ; je 0x20000521e60 ; call 0x20000148076
0x00000200005220a1 : leave ; je 0x200005220af ; call 0x20000148076
0x0000020000522156 : leave ; je 0x20000522164 ; call 0x20000148076
0x0000020000522304 : leave ; je 0x20000522312 ; call 0x20000148076
0x0000020000565ee4 : leave ; je 0x20000565ef2 ; mov dword ptr [r9], r8d ; mov eax, r10d ; ret
0x0000020000565ee4 : leave ; je 0x20000565ef3 ; mov dword ptr [r9], r8d ; mov eax, r10d ; ret
0x00000200005819e0 : leave ; je 0x200005819b1 ; jmp 0x200005819ac
0x00000200005ebdb3 : leave ; je 0x200005ebdc0 ; call 0x20000148075
0x0000020000621364 : leave ; je 0x20000621376 ; mov edx, esi ; call 0x2000024d008
0x00000200006255ba : leave ; je 0x200006255cc ; xor edx, edx ; call 0x2000024d008
0x0000020000625a21 : leave ; je 0x20000625a33 ; xor edx, edx ; call 0x2000024d008
0x0000020000626528 : leave ; je 0x2000062653a ; xor edx, edx ; call 0x2000024d008
0x0000020000627b5b : leave ; je 0x20000627b6d ; xor edx, edx ; call 0x2000024d008
0x0000020000628c77 : leave ; je 0x20000628c89 ; xor edx, edx ; call 0x2000024d008
0x0000020000629a33 : leave ; je 0x20000629a45 ; xor edx, edx ; call 0x2000024d008
0x0000020000629bb9 : leave ; je 0x20000629c3c ; xor edx, edx ; call 0x2000024d008
0x0000020000629da0 : leave ; je 0x20000629db2 ; xor edx, edx ; call 0x2000024d008
0x0000020000629e68 : leave ; je 0x20000629e7a ; xor edx, edx ; call 0x2000024d008
0x0000020000635c95 : leave ; je 0x20000635ca5 ; call qword ptr [rip - 0x3ded6e]
0x0000020000683db7 : leave ; je 0x20000683dc9 ; mov rdx, qword ptr [r8 + 0x10] ; call r9
0x00000200006dbe03 : leave ; je 0x200006dbe10 ; call 0x20000148075
0x00000200007b052a : leave ; jg 0x200007b0501 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f7368 : leave ; jmp qword ptr [r10 + rax*8]
0x000002000005a315 : leave ; jmp rcx
0x0000020000009a57 : leave ; jne 0x20000009a6a ; xor al, al ; add rsp, 0x28 ; ret
0x000002000000ba8b : leave ; jne 0x2000000ba92 ; ret
0x000002000001dffb : leave ; jne 0x2000001e008 ; mov eax, dword ptr [rax + 0x24] ; ret
0x000002000001f9e2 : leave ; jne 0x2000001f9e9 ; ret
0x0000020000020a25 : leave ; jne 0x20000020a06 ; mov eax, r8d ; ret
0x00000200000267b6 : leave ; jne 0x200000267c7 ; add rsp, 0x60 ; pop rbp ; ret
0x000002000002ce15 : leave ; jne 0x2000002ce0b ; mov eax, 0xc0000109 ; ret
0x0000020000041e10 : leave ; jne 0x20000041e1b ; mov al, 1 ; ret
0x0000020000069773 : leave ; jne 0x20000069793 ; add rsp, 0x28 ; ret
0x000002000006ca22 : leave ; jne 0x2000006ca2d ; xor eax, eax ; ret
0x000002000006d2b3 : leave ; jne 0x2000006d2ad ; ret
0x000002000007a3d9 : leave ; jne 0x2000007a3e0 ; ret
0x000002000007a5be : leave ; jne 0x2000007a5d1 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000007a65c : leave ; jne 0x2000007a669 ; mov rax, rcx ; ret
0x00000200000bd64e : leave ; jne 0x200000bd655 ; ret
0x00000200000bd72c : leave ; jne 0x200000bd739 ; mov rax, r9 ; ret
0x00000200000be447 : leave ; jne 0x200000be45a ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000be4ad : leave ; jne 0x200000be4c9 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000011c964 : leave ; jne 0x200000c7479 ; xor al, al ; ret
0x00000200000ecdea : leave ; jne 0x200000ecddf ; xor al, al ; ret
0x00000200000fa840 : leave ; jne 0x200000fa84c ; mov rax, rdx ; ret
0x00000200000fa840 : leave ; jne 0x200000fa84d ; mov rax, rdx ; ret
0x0000020000128b3a : leave ; jne 0x20000128b45 ; xor al, al ; ret
0x0000020000129fdb : leave ; jne 0x20000129f79 ; mov rax, r8 ; ret
0x000002000013b1b6 : leave ; jne 0x2000013b1c1 ; xor eax, eax ; ret
0x000002000013b1ea : leave ; jne 0x2000013b1f5 ; xor eax, eax ; ret
0x000002000013bd5e : leave ; jne 0x2000013bd69 ; xor eax, eax ; ret
0x000002000000c7f0 : leave ; jne 0x200001618d3 ; ret
0x00000200000317ce : leave ; jne 0x2000016a2c9 ; ret
0x000002000003e45b : leave ; jne 0x2000016de67 ; ret
0x000002000016f87b : leave ; jne 0x2000016f875 ; ret
0x000002000016f899 : leave ; jne 0x2000016f893 ; ret
0x0000020000043fc3 : leave ; jne 0x2000016fe55 ; xor al, al ; ret
0x0000020000114b56 : leave ; jne 0x20000176c23 ; ret
0x0000020000196961 : leave ; jne 0x20000196978 ; mov rcx, r9 ; call 0x20000032c0c
0x00000200001ba42f : leave ; jne 0x200001ba40f ; xor eax, eax ; ret
0x00000200001bbf61 : leave ; jne 0x200001bbf72 ; mov eax, 0xc00000bb ; ret
0x00000200001bc218 : leave ; jne 0x200001bc229 ; mov eax, 0xc000000d ; ret
0x00000200001cc44a : leave ; jne 0x200001cc45b ; mov eax, 0xc000000d ; ret
0x00000200001e390a : leave ; jne 0x200001e391b ; mov eax, 1 ; ret
0x000002000020dbde : leave ; jne 0x2000020dbef ; mov eax, 0xc000000d ; ret
0x000002000020ecc3 : leave ; jne 0x2000020ecd0 ; mov eax, r10d ; jmp 0x2000020ecd7
0x0000020000210568 : leave ; jne 0x20000210562 ; ret
0x0000020000220bbb : leave ; jne 0x20000220b9e ; test rdx, rdx ; cmovne rax, rdx ; jmp 0x20000220c0c
0x00000200002267c5 : leave ; jne 0x200002267ae ; xor eax, eax ; ret
0x00000200003dfb9b : leave ; jne 0x200003dfba2 ; ret
0x00000200003e5c1a : leave ; jne 0x200003e5c47 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f6543 : leave ; jne 0x200003f6566 ; mov eax, edi ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000405222 : leave ; jne 0x20000405229 ; ret
0x00000200004202d2 : leave ; jne 0x200004202e5 ; mov word ptr [rdx + 2], r9w ; jmp 0x200004202a8
0x000002000042b39f : leave ; jne 0x2000042b390 ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000044b599 : leave ; jne 0x2000044b5ac ; mov r8, rdx ; mov rax, r8 ; ret
0x0000020000453923 : leave ; jne 0x20000453934 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000045e53e : leave ; jne 0x2000045e545 ; ret
0x000002000045f342 : leave ; jne 0x2000045f351 ; add rsp, 0x28 ; ret
0x0000020000467027 : leave ; jne 0x20000467038 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000046dcd2 : leave ; jne 0x2000046dce3 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000471e22 : leave ; jne 0x20000471e33 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000494c72 : leave ; jne 0x20000494c79 ; ret
0x00000200004b3075 : leave ; jne 0x200004b308c ; xor eax, eax ; ret
0x00000200004d1fb0 : leave ; jne 0x200004d1fc1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e8f7f : leave ; jne 0x200004e8f90 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004f2d4f : leave ; jne 0x200004f2d5b ; mov eax, r10d ; ret
0x00000200004f2d4f : leave ; jne 0x200004f2d5c ; mov eax, r10d ; ret
0x00000200004f4468 : leave ; jne 0x200004f4477 ; add rsp, 0x28 ; ret
0x00000200004fb0c2 : leave ; jne 0x200004fb0c9 ; ret
0x000002000051ab0f : leave ; jne 0x2000051ab20 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000454b1d : leave ; jne 0x200005af88f ; xor eax, eax ; ret
0x00000200005139b0 : leave ; jne 0x200005b1698 ; ret
0x0000020000568534 : leave ; jne 0x200005fd86d ; ret
0x0000020000620d76 : leave ; jne 0x20000620d87 ; mov eax, 0xc000000d ; ret
0x000002000062b401 : leave ; jne 0x2000062b40c ; xor eax, eax ; ret
0x0000020000681932 : leave ; jne 0x20000681929 ; xor al, al ; ret
0x0000020000683501 : leave ; jne 0x200006834e0 ; ret
0x0000020000687f8a : leave ; jne 0x20000687f95 ; xor al, al ; ret
0x000002000069370f : leave ; jne 0x2000069371f ; mov eax, 1 ; ret
0x0000020000693852 : leave ; jne 0x2000069385d ; mov al, 1 ; ret
0x000002000069e3b4 : leave ; jne 0x2000069e3c5 ; mov eax, 0xc0000088 ; ret
0x00000200006a7cc5 : leave ; jne 0x200006a7cb1 ; mov rax, rcx ; ret
0x00000200006c6745 : leave ; jne 0x200006c6756 ; mov eax, 0xc000000d ; ret
0x00000200006c6f4a : leave ; jne 0x200006c6f55 ; xor eax, eax ; ret
0x00000200006d65d4 : leave ; jne 0x200006d65c9 ; mov eax, 0xc0000225 ; ret
0x000002000078591c : leave ; jne 0x2000078590c ; mov rax, rdx ; jmp 0x2000078592b
0x0000020000798e1e : leave ; jne 0x20000798e25 ; ret
0x00000200007c581d : leave ; jne 0x200007a07d0 ; xor eax, eax ; ret
0x00000200007baa7e : leave ; jne 0x200007baa6c ; ret
0x0000020000447d31 : leave ; jns 0x20000447d40 ; add rsp, 0x28 ; ret
0x000002000003872a : leave ; js 0x2000003873e ; mov rax, rdx ; ret
0x000002000003872a : leave ; js 0x2000003873f ; mov rax, rdx ; ret
0x0000020000471126 : leave ; js 0x20000471148 ; test cl, 8 ; jne 0x2000047113b ; ret
0x00000200003e4b84 : leave ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200001eb119 : leave ; lea rax, qword ptr [rcx + rdx] ; ret
0x00000200007b6e90 : leave ; mov ah, 0xff ; call 0x20000563135
0x00000200007b6e8f : leave ; mov ah, 0xff ; call 0x20000563136
0x00000200005a031e : leave ; mov al, byte ptr [rcx + rax] ; ret
0x00000200004f6905 : leave ; mov al, cl ; ret
0x00000200001d01eb : leave ; mov al, r9b ; add rsp, 0x28 ; ret
0x000002000066d4e0 : leave ; mov al, r9b ; ret
0x000002000021c2c5 : leave ; mov byte ptr [rax + r8], cl ; ret
0x00000200003fc06a : leave ; mov byte ptr [rbp - 0x79], dil ; call 0x200003fa1a1
0x000002000007c7e0 : leave ; mov byte ptr [rdx], cl ; ret
0x00000200000dd9a6 : leave ; mov cr8, rcx ; ret
0x0000020000218f41 : leave ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x0000020000525e41 : leave ; mov dword ptr [r8], r9d ; mov eax, 1 ; ret
0x00000200001c8b72 : leave ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x00000200000fc9a7 : leave ; mov eax, 0xc000000d ; ret
0x0000020000706321 : leave ; mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x0000020000100e07 : leave ; mov eax, r8d ; lock btr qword ptr [rcx], rax ; ret
0x000002000013b623 : leave ; mov eax, r9d ; ret
0x0000020000177349 : leave ; mov edx, 0xffc6c6c6 ; xor ecx, ecx ; call qword ptr [rax]
0x000002000022fab3 : leave ; mov qword ptr [r10], rcx ; cmovne rax, r9 ; ret
0x000002000005c4dd : leave ; mov qword ptr [r9], rax ; mov eax, ecx ; ret
0x000002000014626c : leave ; mov qword ptr [rsp + 0x70], rax ; call r11
0x000002000003713e : leave ; mov r14, rax ; jmp 0x2000003710c
0x000002000051c1c8 : leave ; mov r8d, esi ; call 0x20000148177
0x000002000042d7b8 : leave ; mov r8d, esi ; xor edx, edx ; call 0x200004c99d8
0x000002000079d82b : leave ; mov rax, qword ptr [r13 + rcx*8 + 0x18] ; xor ecx, ecx ; call rax
0x0000020000078822 : leave ; mov rax, qword ptr [rip + 0x330c66] ; call rax
0x000002000069d810 : leave ; mov rax, rcx ; ret
0x0000020000182429 : leave ; mov rcx, rbx ; call 0x200000ee696
0x0000020000496e53 : leave ; movdqu xmmword ptr [rax + rcx*8], xmm0 ; ret
0x00000200007aa658 : leave ; movsxd rbx, eax ; call qword ptr [rip - 0x553d0a]
0x0000020000688319 : leave ; movzx eax, cx ; ret
0x000002000013baac : leave ; movzx eax, r8w ; sub eax, ecx ; ret
0x000002000068dbdf : leave ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000003e3fc : leave ; neg ecx ; inc ecx ; mov eax, ecx ; ret
0x0000020000696dc7 : leave ; not ecx ; and eax, ecx ; add rsp, 0x38 ; ret
0x00000200001f192f : leave ; or byte ptr [rax - 0x75], cl ; and byte ptr [r13 + 0xb], al ; ret
0x0000020000653c14 : leave ; or byte ptr [rcx + 0x3b], al ; adc byte ptr [rdx - 0x27], dh ; xor eax, eax ; ret
0x00000200001895b3 : leave ; or eax, 0xe990fff4 ; ret 0xeea8
0x00000200005158a3 : leave ; push rbx ; ret 0x48ff
0x00000200005b09e5 : leave ; push rsi ; ret
0x0000020000401f5d : leave ; ret
0x00000200004522db : leave ; ret 0x15
0x00000200004bb3dc : leave ; ret 0x8bff
0x00000200005f98ef : leave ; ret 0xffd5
0x0000020000461848 : leave ; ret 0xfff
0x00000200000b5093 : leave ; ret 1
0x000002000022888a : leave ; ror byte ptr [rax + 0x4a880242], 1 ; ret
0x0000020000128451 : leave ; sbb dword ptr [rbx], esi ; enter -0x76bc, 0x6d ; mov al, 0x8b ; ret
0x000002000003e3fa : leave ; sbb ecx, ecx ; neg ecx ; inc ecx ; mov eax, ecx ; ret
0x0000020000055e9a : leave ; sete al ; ret
0x000002000057b4ad : leave ; setne al ; add rsp, 0x20 ; pop rbp ; ret
0x000002000057b4e7 : leave ; setne al ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000eb56b : leave ; setne al ; add rsp, 0x38 ; ret
0x000002000057b299 : leave ; setne al ; add rsp, 0x40 ; pop rbp ; ret
0x000002000057bc81 : leave ; setne al ; add rsp, 0x50 ; pop rbp ; ret
0x000002000057f0da : leave ; setne al ; add rsp, 0x60 ; pop rbp ; ret
0x000002000057ca88 : leave ; setne al ; add rsp, 0x70 ; pop rbp ; ret
0x000002000057ca1b : leave ; setne al ; pop rbp ; ret
0x00000200000420f9 : leave ; setne al ; ret
0x00000200003e3bb6 : leave ; setns al ; dec eax ; ret
0x000002000045fb07 : leave ; shl rbx, 0x20 ; call 0x2000008e15c
0x000002000016456f : leave ; shr rdx, cl ; and rax, rdx ; cmp rax, rdx ; jmp 0x200001645fd
0x00000200007c5da1 : leave ; std ; dec dword ptr [rbp + 0x23410142] ; ret
0x00000200001b6e35 : leave ; sub byte ptr [rax + 0x3b], cl ; ret
0x00000200003e4cb8 : leave ; sub r10d, r9d ; mov eax, r10d ; ret
0x000002000013bbc2 : leave ; sub r9d, eax ; mov eax, r9d ; ret
0x000002000057c8ef : leave ; test al, al ; setne cl ; mov eax, ecx ; pop rbp ; ret
0x0000020000709cf2 : leave ; test r8d, r8d ; jne 0x20000709d03 ; xor eax, eax ; ret
0x0000020000703bb5 : leave ; test rax, rax ; jne 0x20000703bc2 ; ret
0x00000200006549ce : leave ; xchg qword ptr [rdx + r8*8], rcx ; mov eax, r9d ; ret
0x000002000020ff86 : leave ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200003e4e54 : leave ; xor r10d, r9d ; mov eax, r10d ; ret
0x0000020000213115 : leave ; xor r8, rax ; cmp r10, r11 ; jb 0x20000213104 ; ret
0x000002000015be88 : leave ; xor r8d, r8d ; mov rcx, r10 ; call r10
0x000002000015bc5b : leave ; xor r8d, r8d ; mov rcx, r11 ; call r11
0x00000200003cc228 : leave ; xor r8d, r8d ; xor edx, edx ; call 0x20000068458
0x000002000006d01a : les eax, ptr [rcx] ; add rsp, 0x58 ; ret
0x000002000007e4f3 : les r9d, ptr [rcx - 0x74b70fbb] ; ret
0x00000200004a43ea : les r9d, ptr [rcx - 0x74b71fbb] ; ret
0x0000020000793da4 : ljmp ptr [r10] ; ret
0x00000200000c04b9 : ljmp ptr [r11] ; fld qword ptr [rcx] ; xor al, 0xff ; ret
0x00000200003ca668 : ljmp ptr [rax + 0x4805743f] ; add esp, 0x28 ; ret
0x0000020000052b98 : ljmp ptr [rax + rax] ; movdqu xmmword ptr [rcx], xmm0 ; ret
0x000002000051cc51 : ljmp ptr [rax - 0x3f6bf0fd] ; ret
0x00000200004522fd : ljmp ptr [rax - 0x4b7af0f8] ; ret 0x15
0x00000200004a0317 : ljmp ptr [rax - 0x637af0e0] ; call qword ptr [rdx]
0x00000200003dc3b1 : ljmp ptr [rax - 0x74f88bf0] ; retf ; call 0x200006686ad
0x00000200000c04ba : ljmp ptr [rbx] ; fld qword ptr [rcx] ; xor al, 0xff ; ret
0x0000020000095fa4 : ljmp ptr [rbx] ; ret
0x00000200005f1663 : ljmp ptr [rbx] ; ret 0x8b4c
0x00000200005cbd32 : ljmp ptr [rbx] ; ret 0x8d48
0x000002000017326d : ljmp ptr [rbx] ; ret 0xe1c1
0x00000200000a839c : ljmp ptr [rdi] ; add dh, dh ; ret
0x00000200000f1e35 : ljmp ptr [rdx] ; add byte ptr [rax], al ; ror byte ptr [rdi], 0x85 ; ret
0x0000020000793da5 : ljmp ptr [rdx] ; ret
0x00000200005aba16 : lldt word ptr [rax - 0x16215d17] ; jmp qword ptr [rcx]
0x00000200000b43ca : lock add byte ptr [rax + 0x33], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x00000200004b4732 : lock add byte ptr [rax - 0x7d], cl ; ret
0x000002000004867f : lock add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x4466
0x0000020000039c6f : lock add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004d6092 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200000ff985 : lock add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; fdivr st(7) ; ret 0x8d4c
0x000002000055c6f5 : lock add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret
0x00000200007a4cb2 : lock add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret 0x850f
0x00000200003db6b0 : lock add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x000002000000f6ae : lock add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rcx ; ret
0x00000200001fc143 : lock add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x00000200000d7edb : lock add byte ptr [rax], al ; add byte ptr [rdi + 0x5d], bl ; pop rbx ; ret
0x000002000001ce27 : lock add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000010cca2 : lock add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200000e30ca : lock add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; and esi, esi ; ret 0xf08
0x0000020000149ca5 : lock add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; ret
0x000002000052b483 : lock add byte ptr [rax], al ; add dh, dh ; ret
0x00000200005d8be1 : lock add byte ptr [rax], al ; shr cl, 0xab ; ret
0x00000200005d8bc4 : lock add byte ptr [rax], al ; shr cl, 0xc3 ; ret
0x0000020000441853 : lock add byte ptr [rbp - 0x73], cl ; and byte ptr [r8 - 0x75], cl ; ret 0x8b49
0x00000200000b4633 : lock add byte ptr [rbx - 0x75], cl ; ret 0x4808
0x00000200000b1de6 : lock add byte ptr [rcx - 0x75], al ; fimul dword ptr [rcx - 0x7d] ; ret 0x4d0a
0x00000200000f125f : lock add dword ptr [rax], eax ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x00000200000ade37 : lock add dword ptr [rax], eax ; add byte ptr [rcx + 0x33], cl ; ret 0x8949
0x00000200000d1833 : lock add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x000002000007246b : lock add dword ptr [rbp - 0x75], eax ; ret
0x000002000009acb3 : lock add dword ptr [rbp - 0x75], eax ; ror dword ptr [rcx + rdi + 0x34], 1 ; ret 0x8d4c
0x000002000042bf18 : lock add dword ptr [rbx - 0x158bbf07], eax ; xor al, al ; ret
0x0000020000457cc3 : lock and byte ptr [rax - 0x7d], cl ; ret
0x000002000020f7a6 : lock and dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001154ff : lock and dword ptr [r10], eax ; ret
0x00000200005b169f : lock and dword ptr [r8], eax ; ret
0x0000020000139d0d : lock and dword ptr [rcx + 0x6c0], 0xffffffef ; ret
0x000002000003d6aa : lock and qword ptr [r9 + 8], rax ; ret
0x00000200000245e1 : lock and qword ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x0000020000058fba : lock btr dword ptr [rax + 0x78], 5 ; mov al, dl ; ret
0x00000200000fd687 : lock btr dword ptr [rdx], 0x14 ; mov byte ptr [rdx + 0x7c], al ; ret
0x0000020000100e0b : lock btr qword ptr [rcx], rax ; ret
0x0000020000057b04 : lock bts dword ptr [rcx], 9 ; ret
0x000002000004444f : lock cmpxchg dword ptr [r9 + 0x320], ecx ; ret
0x000002000007706d : lock cmpxchg qword ptr [r8], rcx ; jne 0x20000077083 ; mov al, 1 ; ret
0x00000200001bc080 : lock cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x0000020000055c6d : lock cmpxchg qword ptr [r9], rcx ; jne 0x20000055c7c ; ret
0x000002000044578f : lock cmpxchg qword ptr [rcx + 0x1c8], r9 ; ret
0x00000200000478c9 : lock cmpxchg qword ptr [rcx], r8 ; jne 0x200000478ae ; ret
0x000002000000e45d : lock cmpxchg qword ptr [rcx], rdx ; jne 0x2000000e460 ; ret
0x000002000001017e : lock cmpxchg qword ptr [rcx], rdx ; jne 0x20000010190 ; ret
0x0000020000077092 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x200000770a5 ; mov al, 1 ; ret
0x000002000007ced5 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x2000007cee4 ; ret
0x00000200000ed04e : lock cmpxchg qword ptr [rcx], rdx ; jne 0x200000ed064 ; mov al, 1 ; ret
0x00000200001f01c5 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x200001f01d8 ; xor eax, eax ; ret
0x000002000042b039 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x2000042b048 ; ret
0x0000020000228474 : lock cmpxchg qword ptr [rcx], rdx ; ret
0x000002000061b6c6 : lock cmpxchg qword ptr [rdx + 0x10], rcx ; jne 0x2000061b6c4 ; ret
0x0000020000151317 : lock cmpxchg16b xmmword ptr [r11] ; jne 0x2000015130a ; mov rax, r10 ; pop rbx ; ret
0x0000020000043ee8 : lock dec dword ptr [r8] ; ret
0x00000200001997fb : lock dec dword ptr [rax + 0x23] ; ret
0x0000020000222883 : lock dec dword ptr [rax + 0x3b] ; ret 0xc74
0x0000020000055c84 : lock dec dword ptr [rax + 0xc] ; ret
0x00000200001de207 : lock dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200001b488e : lock dec dword ptr [rax - 0x75] ; je 0x200001b48c1 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000018268d : lock dec dword ptr [rax - 0x75] ; ret
0x0000020000193238 : lock dec dword ptr [rax - 0x75] ; ret 0x2b48
0x0000020000194419 : lock dec dword ptr [rax - 0x75] ; ret 0x2b49
0x00000200001934e6 : lock dec dword ptr [rax - 0x75] ; ret 0x3b48
0x00000200005e1d24 : lock dec dword ptr [rax - 0x75] ; ret 0x49f0
0x00000200005df43b : lock dec dword ptr [rax - 0x75] ; retf ; call 0x2000020bcc0
0x0000020000502609 : lock dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xe72
0x000002000022dc59 : lock dec dword ptr [rax - 0x7b] ; sal byte ptr [rbx + rdx*2 + 0x48], 0x2b ; ret
0x00000200001e786b : lock dec dword ptr [rax - 0x7d] ; ret
0x0000020000190bfe : lock dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000020000190c07 : lock dec dword ptr [rax - 1] ; ret 0x2be9
0x000002000019118e : lock dec dword ptr [rax - 1] ; ret 0x75e9
0x000002000019119f : lock dec dword ptr [rax - 1] ; ret 0x93e9
0x0000020000190bf6 : lock dec dword ptr [rax - 1] ; ret 0xde9
0x0000020000134612 : lock dec dword ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; test dword ptr [rsi], esi ; ret 7
0x0000020000193ea4 : lock dec dword ptr [rbp - 0x7b] ; ret 0x850f
0x0000020000664654 : lock dec dword ptr [rbx + 4] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000194e13 : lock dec dword ptr [rbx - 0x9bebfc0] ; ret 0xf04
0x00000200001eb144 : lock dec dword ptr [rcx + 0x1190] ; ret
0x00000200001eb162 : lock dec dword ptr [rcx + 0x1194] ; ret
0x0000020000041e78 : lock dec dword ptr [rcx + 0x6fc] ; ret
0x000002000008650d : lock dec dword ptr [rcx + 0x8c] ; ret
0x00000200001fed80 : lock dec dword ptr [rcx + 8] ; ret
0x0000020000415c4c : lock dec dword ptr [rcx + rcx*4 + 0x2d] ; ret
0x00000200001934f2 : lock dec dword ptr [rcx - 0x75] ; ret
0x000002000006fbe8 : lock dec dword ptr [rcx] ; add rsp, 0x28 ; ret
0x000002000004292c : lock dec dword ptr [rcx] ; ret
0x00000200003d01d0 : lock inc dword ptr [r8] ; ret
0x0000020000538b80 : lock inc dword ptr [rax + 0x10] ; ret
0x00000200007189b5 : lock inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x0000020000114ae5 : lock inc dword ptr [rax + 0x200] ; ret
0x00000200005139c6 : lock inc dword ptr [rax] ; ret
0x0000020000192789 : lock inc dword ptr [rbp + 0x33] ; ror byte ptr [rax - 0x73], 0xd ; ret
0x00000200005deb3e : lock inc dword ptr [rbp - 0x7b] ; in al, 0x74 ; sub byte ptr [rax - 0x75], cl ; ret
0x000002000005c0fc : lock inc dword ptr [rbx + 0x18] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043744e : lock inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x0000020000044dd0 : lock inc dword ptr [rcx + 0x10] ; ret
0x000002000009e25c : lock inc dword ptr [rcx + 0x24] ; ret
0x0000020000031088 : lock inc dword ptr [rcx + 0x28] ; ret
0x000002000045654c : lock inc dword ptr [rcx + 0x760] ; ret
0x00000200001fed90 : lock inc dword ptr [rcx + 4] ; lock inc dword ptr [rcx + 8] ; ret
0x00000200001fed88 : lock inc dword ptr [rcx + 4] ; ret
0x00000200001fed94 : lock inc dword ptr [rcx + 8] ; ret
0x000002000003109e : lock inc dword ptr [rcx + r8*4 + 0x218] ; ret
0x0000020000010d21 : lock inc dword ptr [rcx] ; add rsp, 0x28 ; ret
0x00000200000d368a : lock or byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; call qword ptr [rcx]
0x0000020000035190 : lock or byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000020f856 : lock or dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000020f90b : lock or dword ptr [r10], eax ; ret
0x00000200004cffb1 : lock or dword ptr [rbx + 0x62], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000139d04 : lock or dword ptr [rcx + 0x6c0], 0x10 ; ret
0x00000200007b979d : lock or dword ptr [rcx], eax ; add rsp, 0x38 ; ret
0x0000020000157ba8 : lock or dword ptr [rip + 0x251711], ecx ; ret
0x0000020000044dc0 : lock or dword ptr [rip + 0x2b0e69], ecx ; ret
0x0000020000157bda : lock or dword ptr [rsp], 0 ; ret
0x000002000003d6ef : lock or qword ptr [r9 + 8], rdx ; ret
0x00000200000bdb94 : lock sub qword ptr [rip + 0x264c0c], rax ; ret
0x00000200006768b1 : lock xadd dword ptr [rip - 0x3366e9], eax ; cmp eax, edx ; jmp 0x200006768f4
0x000002000002cb3e : lock xadd qword ptr [r10 + 0x20], rax ; ret
0x000002000016dfcb : lock xadd qword ptr [r9 + 0x40], r8 ; ret
0x000002000016dfbb : lock xadd qword ptr [r9 + 0x58], rax ; ret
0x000002000016df9b : lock xadd qword ptr [r9 + 0x60], rax ; ret
0x000002000002df51 : lock xadd qword ptr [rax + 0x6250], rdx ; ret
0x0000020000157b14 : lock xadd qword ptr [rcx + 0x1500], rdx ; ret
0x00000200000309fb : lock xadd qword ptr [rcx + 0x4f0], rdx ; ret
0x00000200004e6f57 : lock xadd qword ptr [rcx + 0x660], rdx ; ret
0x00000200006ff479 : lock xadd qword ptr [rcx], rax ; ret
0x00000200000a0e4c : lock xadd qword ptr [rip + 0x285b2b], r8 ; ret
0x0000020000091d8c : lock xor dword ptr [rdx + 0x78], 0x1000 ; ret
0x00000200001bebf7 : lodsb al, byte ptr [rsi] ; adc eax, dword ptr [rax] ; call r9
0x00000200001beb67 : lodsb al, byte ptr [rsi] ; adc eax, dword ptr [rax] ; call rax
0x00000200000b6366 : lodsb al, byte ptr [rsi] ; add al, 0 ; add bh, bh ; ret 0x8b48
0x0000020000706c7a : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000139f4e : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000200005df7e4 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000455e8a : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000024a2b1 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x870f
0x00000200001d3bf1 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret
0x0000020000149425 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add cl, ch ; adc cl, ah ; add byte ptr [rax], al ; ret
0x000002000014b34b : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000011607e : lodsb al, byte ptr [rsi] ; add byte ptr [rbp - 0x75f78640], al ; ret
0x00000200004cd5bd : lodsb al, byte ptr [rsi] ; add dl, r9b ; ret
0x00000200004b98df : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004bfc31 : lodsb al, byte ptr [rsi] ; and al, 0x60 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret
0x00000200004012c1 : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004e8d8c : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200004b2a69 : lodsb al, byte ptr [rsi] ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001f58cd : lodsb al, byte ptr [rsi] ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x000002000068b761 : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200002009a4 : lodsb al, byte ptr [rsi] ; and dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200005d8d6f : lodsb al, byte ptr [rsi] ; call qword ptr [rax - 0x113de617]
0x0000020000594fa5 : lodsb al, byte ptr [rsi] ; call qword ptr [rax - 0x18006f17]
0x000002000018b16f : lodsb al, byte ptr [rsi] ; cmp ch, bh ; dec dword ptr [rdx] ; ret 0x4588
0x00000200006d6c21 : lodsb al, byte ptr [rsi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax + 0x3b] ; ret
0x00000200005d8404 : lodsb al, byte ptr [rsi] ; dec dword ptr [rax + 0x2b] ; ret 0xe281
0x0000020000784861 : lodsb al, byte ptr [rsi] ; dec dword ptr [rbx - 0x7cb74fab] ; ret
0x00000200005195e0 : lodsb al, byte ptr [rsi] ; hlt ; ret 0x48ff
0x000002000070a83b : lodsb al, byte ptr [rsi] ; je 0x2000070a848 ; xor ecx, ecx ; mov rax, rcx ; ret
0x0000020000692205 : lodsb al, byte ptr [rsi] ; jmp qword ptr [rcx]
0x00000200000b139d : lodsb al, byte ptr [rsi] ; jp 0x200000b13b6 ; add byte ptr [rbp + 0x33], al ; sal dh, cl ; ret 0xf1e
0x00000200002317ca : lodsb al, byte ptr [rsi] ; loop 0x200002317d3 ; add rsp, 0x28 ; ret
0x0000020000482b44 : lodsb al, byte ptr [rsi] ; mov esi, 0x7e894dff ; or dh, dh ; ret
0x000002000002d914 : lodsb al, byte ptr [rsi] ; mov esi, 0x8b480013 ; ret
0x000002000045247d : lodsb al, byte ptr [rsi] ; mov rcx, rdi ; call 0x2000007cdf7
0x00000200000c1ec2 : lodsb al, byte ptr [rsi] ; or eax, 0x458b4800 ; and byte ptr [rax + 0x2b], cl ; ret
0x00000200005bbb37 : lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; add byte ptr [rcx - 0x7b], al ; ret
0x00000200007b3a52 : lodsb al, byte ptr [rsi] ; push rax ; stc ; dec dword ptr [rax - 0x75] ; ret
0x00000200000633ce : lodsb al, byte ptr [rsi] ; ret
0x0000020000473390 : lodsb al, byte ptr [rsi] ; ret 0x48ff
0x000002000062fcd1 : lodsb al, byte ptr [rsi] ; ret 0xb8ff
0x000002000004b44d : lodsb al, byte ptr [rsi] ; ret 0xe28
0x0000020000452100 : lodsb al, byte ptr [rsi] ; ret 0xebff
0x00000200006a2c80 : lodsb al, byte ptr [rsi] ; ret 0xffa4
0x00000200007cc014 : lodsb al, byte ptr [rsi] ; ret 0xffbd
0x0000020000661790 : lodsb al, byte ptr [rsi] ; ret 0xffbe
0x0000020000044d88 : lodsb al, byte ptr [rsi] ; sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200006f37f0 : lodsb al, byte ptr [rsi] ; xchg eax, edi ; ret 0x44ff
0x00000200001315dc : lodsb al, byte ptr [rsi] ; xor al, byte ptr [rdx] ; call 0x200004fd886
0x00000200001476f2 : lodsb al, byte ptr [rsi] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000047ac55 : lodsd eax, dword ptr [rsi] ; adc al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002fee9 : lodsd eax, dword ptr [rsi] ; adc byte ptr [rax], al ; add rsp, 0x68 ; ret
0x00000200001005aa : lodsd eax, dword ptr [rsi] ; add al, byte ptr [rdi] ; add byte ptr [rcx - 0x80], al ; call qword ptr [rcx]
0x000002000012d629 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000002000012d606 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7402
0x00000200001d3fc0 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x0000020000702032 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000014b24b : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000014b445 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add cl, ch ; repne stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x000002000020b5e6 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200005ac95a : lodsd eax, dword ptr [rsi] ; call qword ptr [rax - 0x1605a717]
0x0000020000414ffc : lodsd eax, dword ptr [rsi] ; call qword ptr [rdi]
0x0000020000051ecd : lodsd eax, dword ptr [rsi] ; cld ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000613f8b : lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000e9764 : lodsd eax, dword ptr [rsi] ; in al, dx ; or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x00000200003cfeaf : lodsd eax, dword ptr [rsi] ; insb byte ptr [rdi], dx ; ret
0x00000200007c5da0 : lodsd eax, dword ptr [rsi] ; leave ; std ; dec dword ptr [rbp + 0x23410142] ; ret
0x00000200004e33e5 : lodsd eax, dword ptr [rsi] ; mov rcx, qword ptr [rdi - 8] ; mov rdx, rdi ; call qword ptr [rax]
0x0000020000568be8 : lodsd eax, dword ptr [rsi] ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x000002000045fa0e : lodsd eax, dword ptr [rsi] ; ret
0x00000200005124a0 : lodsd eax, dword ptr [rsi] ; ret 0x48ff
0x00000200006f488f : lodsd eax, dword ptr [rsi] ; ret 0x49ff
0x0000020000441a1c : lodsd eax, dword ptr [rsi] ; ret 0x4cff
0x000002000051f095 : lodsd eax, dword ptr [rsi] ; ret 0x8bff
0x000002000047a26b : lodsd eax, dword ptr [rsi] ; ret 0xfffa
0x00000200007816ff : lodsd eax, dword ptr [rsi] ; ret 0xffff
0x0000020000783a8c : lodsd eax, dword ptr [rsi] ; rol byte ptr [rdi], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000052ff62 : lodsd eax, dword ptr [rsi] ; sar bh, 0x48 ; add esp, 0x50 ; pop rbx ; ret
0x000002000064dbbf : lodsd eax, dword ptr [rsi] ; shr byte ptr [rsi - 0x3b7cb701], 1 ; pop rbx ; ret
0x00000200001332f5 : lodsd eax, dword ptr [rsi] ; sldt word ptr [rax] ; add byte ptr [rbx], ah ; ret 0xc803
0x000002000051da5d : lodsq rax, qword ptr [rsi] ; ret 0x48ff
0x00000200000035d9 : loop 0x200000035e9 ; je 0x200000035ca ; mov al, 1 ; ret
0x0000020000006908 : loop 0x20000006902 ; ret 0x7455
0x000002000002df0b : loop 0x2000002df32 ; ret 0xc23b
0x000002000003ecde : loop 0x2000003ed32 ; mov esi, ecx ; call 0x2000044af4a
0x000002000004c6d5 : loop 0x2000004c6cf ; ret 0xf15
0x000002000004ecdf : loop 0x2000004ecd9 ; ret 0xf15
0x000002000005401b : loop 0x20000054026 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000005401a : loop 0x20000054027 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000065a00 : loop 0x20000065a27 ; or rax, rdx ; ret
0x000002000006cd92 : loop 0x2000006cd41 ; in eax, dx ; or eax, 0x1c8b4d04 ; ret
0x000002000007297c : loop 0x20000072983 ; dec dword ptr [rsi - 0x75] ; pop rsp ; ret 0x4808
0x000002000007a61a : loop 0x2000007a652 ; xor al, 0 ; add rsp, 0x28 ; ret
0x00000200000841b7 : loop 0x200000841c5 ; or eax, edx ; jmp 0x200000841ae
0x00000200000a802d : loop 0x200000a8044 ; add byte ptr [rbp + 0x33], al ; sal dh, cl ; ret 0xf1e
0x00000200000b2a62 : loop 0x200000b2a6a ; add al, 0 ; add byte ptr [rbx], dh ; ret 0x8489
0x00000200000b7ab1 : loop 0x200000b7ac6 ; jae 0x200000b7ac4 ; or byte ptr [r8 + 0x22], 0x10 ; ret
0x00000200000c5e6a : loop 0x200000c5e08 ; cli ; dec dword ptr [rax - 0x75] ; ret
0x00000200000f210f : loop 0x200000f2109 ; ret 0xf15
0x00000200000fd600 : loop 0x200000fd64a ; btr rax, rdx ; mov qword ptr [rcx], rax ; ret
0x00000200001037b5 : loop 0x200001037bc ; ret 0x8389
0x000002000010e980 : loop 0x2000010e96f ; ret
0x00000200001237aa : loop 0x2000012380c ; sub byte ptr [rax], al ; call rax
0x000002000012fd1d : loop 0x2000012fd47 ; or rax, rdx ; sub rax, r8 ; ret
0x00000200001456e9 : loop 0x20000145720 ; ret 0x8948
0x00000200001473f2 : loop 0x20000147407 ; jne 0x200001473fb ; ret
0x0000020000147ac1 : loop 0x20000147a81 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000014bd71 : loop 0x2000014bd12 ; fnstcw word ptr [rcx] ; ret
0x0000020000150ea0 : loop 0x20000150ec6 ; or rax, rdx ; pop rdi ; ret
0x0000020000150ea0 : loop 0x20000150ec8 ; or rax, rdx ; pop rdi ; ret
0x000002000015134a : loop 0x200001513a7 ; ret
0x0000020000157a36 : loop 0x20000157a14 ; sbb al, 0 ; ret
0x0000020000173d5d : loop 0x20000173dd3 ; stc ; dec dword ptr [rcx + 3] ; ret 0xc148
0x000002000017f9e7 : loop 0x2000017f9db ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000018b2b7 : loop 0x2000018b2c6 ; ret 0x8941
0x000002000019a543 : loop 0x2000019a522 ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200001c026a : loop 0x200001c0205 ; adc eax, dword ptr [rax] ; call rax
0x00000200001c21d1 : loop 0x200001c21fb ; or rax, rdx ; mov qword ptr [r8], rax ; ret
0x00000200001cb0c2 : loop 0x200001cb0bc ; ret 0x7432
0x00000200001cd5d7 : loop 0x200001cd5e0 ; call 0x20000139878
0x00000200001d4614 : loop 0x200001d465e ; bts rax, rdx ; mov qword ptr [rcx], rax ; ret
0x00000200001dbd51 : loop 0x200001dbd77 ; or rax, rdx ; ret
0x00000200001dbd51 : loop 0x200001dbd78 ; or rax, rdx ; ret
0x00000200001dea7b : loop 0x200001dea75 ; ret 0x7455
0x00000200001e6aea : loop 0x200001e6b4d ; call 0x1ffc3a9b3f6
0x00000200001eab40 : loop 0x200001eab5a ; add edx, edx ; and eax, 1 ; or eax, edx ; ret
0x00000200001efa7a : loop 0x200001efa09 ; ret 0x3b4c
0x00000200001f35dc : loop 0x200001f35e5 ; add bh, bh ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200001f6ab8 : loop 0x200001f6ab2 ; ret 0x7555
0x00000200001f82ec : loop 0x200001f82e6 ; ret 0xf55
0x0000020000201a03 : loop 0x20000201a0e ; add edx, 0x13 ; call r9
0x000002000020ee12 : loop 0x2000020ee20 ; add rdx, rax ; jmp 0x2000020ede2
0x0000020000221fd8 : loop 0x20000222003 ; or rax, rdx ; add rsp, 0x28 ; ret
0x00000200002317cb : loop 0x200002317d2 ; add rsp, 0x28 ; ret
0x000002000023ef03 : loop 0x2000023ef06 ; add eax, edi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000023ef27
0x00000200002403e4 : loop 0x200002403d9 ; add eax, dword ptr [rbp + 0x33] ; ror byte ptr [rbp + 0x3b], cl ; ret
0x0000020000244f87 : loop 0x20000244f8a ; add eax, edi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000244fab
0x000002000024aeef : loop 0x2000024af26 ; ret 0x8948
0x000002000024b6ba : loop 0x2000024b6f2 ; sal dh, 1 ; ret 0xf03
0x000002000024bcf0 : loop 0x2000024bcf3 ; add eax, ebx ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000024bd14
0x0000020000401eb7 : loop 0x20000401e42 ; add edi, edi ; je 0x20000401ec4 ; ret
0x000002000043459e : loop 0x200004345b4 ; jb 0x200004345b6 ; ret
0x00000200004345f5 : loop 0x20000434642 ; add eax, edx ; jmp 0x200004345e1
0x0000020000443014 : loop 0x2000044301d ; call 0x2000006c735
0x00000200004ab9aa : loop 0x200004ab942 ; ret
0x00000200004d55a7 : loop 0x200004d55b1 ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; add al, 0x90 ; ret
0x00000200004f58de : loop 0x200004f58e1 ; ret
0x00000200004fe39f : loop 0x200004fe3a2 ; ret
0x00000200005091aa : loop 0x2000050919b ; ret
0x000002000051c393 : loop 0x2000051c39b ; add rsp, 0x40 ; pop rdi ; ret
0x000002000051c392 : loop 0x2000051c39c ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000541d33 : loop 0x20000541d2e ; ret 0x3a0
0x00000200005657b6 : loop 0x200005657be ; adc byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x589
0x00000200005d8d46 : loop 0x200005d8d1a ; or byte ptr [rax], al ; nop ; jmp 0x200004c504b
0x00000200005e1a2c : loop 0x200005e1a1f ; loopne 0x200005e19cd ; lock dec dword ptr [rax - 0x75] ; ret
0x0000020000622821 : loop 0x20000622833 ; or r8d, edx ; jmp 0x20000622844
0x0000020000623296 : loop 0x200006232a0 ; call 0x2000024da45
0x0000020000643b81 : loop 0x20000643b12 ; add cl, byte ptr [rax - 1] ; ret 0xc084
0x000002000066e1f2 : loop 0x2000066e219 ; ret 0x4489
0x00000200006cfc0b : loop 0x200006cfc15 ; inc dword ptr [rax + rax*8 - 0x7cb7e88c] ; ret
0x00000200006d9de4 : loop 0x200006d9d73 ; ret
0x000002000070b2e2 : loop 0x2000070b34b ; xchg eax, ebx ; dec dword ptr [rax - 0x7d] ; ret
0x000002000070efaf : loop 0x2000070ef48 ; dec dword ptr [rax - 0x75] ; ret
0x000002000070efae : loop 0x2000070ef98 ; xchg eax, edx ; dec dword ptr [rax - 0x75] ; ret
0x000002000071b85b : loop 0x2000071b8ac ; add esp, 0x30 ; pop rbx ; jmp r8
0x000002000072b14a : loop 0x2000072b155 ; add byte ptr [rax], al ; mov eax, 0xc0000001 ; ret
0x000002000077fbfb : loop 0x2000077fbfe ; add eax, esi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000077fc1e
0x00000200007b0c37 : loop 0x200007b0c87 ; add esp, 0x50 ; pop rbx ; ret
0x00000200007b7a6d : loop 0x200007b7a8a ; or eax, edx ; ret
0x00000200007b7a6d : loop 0x200007b7a8b ; or eax, edx ; ret
0x00000200007bc29e : loop 0x200007bc23e ; ret 0x66ff
0x00000200007c5352 : loop 0x200007c5355 ; ret
0x00000200007c9dd7 : loop 0x200007c9d9b ; dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000002000000836b : loope 0x2000000836e ; mov edx, eax ; test r8d, r8d ; jne 0x2000000837e ; ret
0x000002000000c319 : loope 0x2000000c338 ; jb 0x2000000c335 ; ret
0x000002000001109c : loope 0x20000011089 ; ret 0x151f
0x000002000001bc3d : loope 0x2000001bbe1 ; adc al, 0 ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x000002000002164c : loope 0x2000002169f ; mov dword ptr [rdx], ecx ; ret
0x000002000002d986 : loope 0x2000002d9d6 ; add esp, 0x20 ; pop rbx ; ret
0x000002000003a65d : loope 0x2000003a66e ; cmp cl, 1 ; sete al ; ret
0x000002000003d4f1 : loope 0x2000003d4eb ; cmp cl, 0x30 ; sete al ; ret
0x000002000003fc06 : loope 0x2000003fbd3 ; mov rax, cr3 ; mov cr3, rax ; ret
0x0000020000041c24 : loope 0x20000041be4 ; add al, 0 ; add byte ptr [rax], al ; ret
0x000002000004de24 : loope 0x2000004ddf1 ; mov rax, cr3 ; mov cr3, rax ; ret
0x0000020000050d36 : loope 0x20000050d3d ; mov al, cl ; ret
0x0000020000072abf : loope 0x20000072acc ; add byte ptr [rax - 0x75], cl ; ror byte ptr [rax + 0x3b], 1 ; ret
0x00000200000770da : loope 0x20000077127 ; cmp cl, 0x42 ; je 0x200000770d7 ; xor al, al ; ret
0x0000020000090e8e : loope 0x20000090ee4 ; mov dword ptr [rcx + 0x168], eax ; ret
0x0000020000091d84 : loope 0x20000091d8e ; cmp r8b, cl ; jne 0x20000091d93 ; ret
0x0000020000093ffa : loope 0x20000093ffd ; ret
0x000002000009497a : loope 0x2000009497d ; ret
0x0000020000095cd6 : loope 0x20000095cd9 ; ret
0x0000020000101735 : loope 0x20000101786 ; mov ecx, esp ; call 0x200000dd946
0x0000020000112f7e : loope 0x20000112f82 ; mov rax, rcx ; ret
0x0000020000116161 : loope 0x20000116168 ; mov al, cl ; ret
0x000002000012e43f : loope 0x2000012e440 ; lcall ptr [rdi] ; add byte ptr [rax - 0x75], cl ; ret 0xc748
0x00000200001447f6 : loope 0x200001447cb ; mov eax, 0xffff ; ret
0x000002000017f910 : loope 0x2000017f903 ; dec dword ptr [rax - 0x75] ; ret
0x000002000019eca6 : loope 0x2000019ec9a ; call qword ptr [rax - 0xd703d17]
0x000002000019eca5 : loope 0x2000019ec9b ; call qword ptr [rax - 0xd703d17]
0x00000200001a1a96 : loope 0x200001a1a83 ; ret
0x00000200001bf6ac : loope 0x200001bf698 ; ret 0xffcd
0x00000200001c4652 : loope 0x200001c4612 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200001d2d0d : loope 0x200001d2d4a ; ror byte ptr [rax - 0x75], cl ; int1 ; call 0x200000eef38
0x000002000020b9ce : loope 0x2000020b9d7 ; mov byte ptr [rcx + 0x45f], dl ; ret
0x0000020000247032 : loope 0x20000246fc7 ; add qword ptr [r8 + 0x33], rcx ; ret 0x8948
0x00000200003cfe4d : loope 0x200003cfe9c ; add esp, 0x28 ; ret
0x00000200003cff43 : loope 0x200003cff07 ; ret
0x00000200003dc1db : loope 0x200003dc253 ; dec dword ptr [rax + 0x3b] ; ret
0x00000200003fc071 : loope 0x200003fc074 ; jmp qword ptr [rcx]
0x0000020000417c4a : loope 0x20000417c4e ; add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x000002000041f372 : loope 0x2000041f390 ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x00000200004345ec : loope 0x2000043460b ; jb 0x2000043460b ; ret
0x000002000043bbf4 : loope 0x2000043bc13 ; jb 0x2000043bc0e ; ret
0x0000020000462d09 : loope 0x20000462d25 ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200004a743b : loope 0x200004a7421 ; ret
0x00000200004e187e : loope 0x200004e1894 ; add byte ptr [rax + 0x63], cl ; ret 0x8b41
0x00000200004f1309 : loope 0x200004f1334 ; sldt word ptr [rbp - 0x3f60f040] ; ret
0x00000200004fcfe3 : loope 0x200004fd042 ; loopne 0x200004fcfed ; setne al ; ret
0x0000020000512837 : loope 0x2000051283c ; call 0x200000feaa0
0x00000200005128b3 : loope 0x200005128b6 ; ret
0x00000200005128e1 : loope 0x20000512900 ; jb 0x200005128fd ; ret
0x0000020000513259 : loope 0x2000051326c ; add byte ptr [rcx - 0x76], al ; mul byte ptr [rsi - 0x7d] ; ret 0xb902
0x0000020000544db2 : loope 0x20000544e23 ; test r9d, r10d ; je 0x20000544dc5 ; mov al, 1 ; ret
0x00000200005686ac : loope 0x2000056869b ; inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x8348
0x00000200005695fe : loope 0x20000569603 ; mov rax, rcx ; ret
0x0000020000592e87 : loope 0x20000592e88 ; ret
0x00000200005956d6 : loope 0x200005956ab ; mov eax, 0xc0000058 ; ret
0x00000200005b1603 : loope 0x200005b159f ; ret 0x8bff
0x00000200005cb902 : loope 0x200005cb8f4 ; dec dword ptr [rcx + 3] ; ret 0x8948
0x00000200005e0a0b : loope 0x200005e09a4 ; stosd dword ptr [rdi], eax ; push rsi ; ret
0x000002000061fc5b : loope 0x2000061fc3c ; ret 0x48ff
0x0000020000637f6b : loope 0x20000637fad ; ret
0x0000020000637fc3 : loope 0x20000638004 ; ret
0x0000020000641603 : loope 0x200006415a0 ; ret
0x0000020000644fd4 : loope 0x20000644fdb ; add rsp, 0x48 ; ret
0x0000020000645057 : loope 0x2000064505f ; add rsp, 0x50 ; pop rbx ; ret
0x00000200006572ae : loope 0x20000657281 ; dec dword ptr [rax - 0x75] ; ret
0x000002000066917c : loope 0x20000669183 ; mov rax, rcx ; add rsp, 0x28 ; ret
0x000002000067973b : loope 0x200006797b0 ; enter 0x44ff, -0x76 ; ret
0x00000200006955fb : loope 0x20000695605 ; add rsp, 0x98 ; ret
0x000002000069d80e : loope 0x2000069d849 ; leave ; mov rax, rcx ; ret
0x00000200006d625b : loope 0x200006d6277 ; ret 0x48ff
0x0000020000704871 : loope 0x20000704899 ; jae 0x20000704884 ; mov eax, 1 ; ret
0x000002000070f123 : loope 0x2000070f12a ; mov eax, ecx ; ret
0x000002000071b76b : loope 0x2000071b7bb ; add esp, 0x38 ; jmp rax
0x000002000071b8ae : loope 0x2000071b8fe ; add esp, 0x38 ; jmp rax
0x000002000071b903 : loope 0x2000071b953 ; add esp, 0x38 ; jmp rax
0x000002000078b2d0 : loope 0x2000078b307 ; ret 0x8948
0x000002000078b536 : loope 0x2000078b4cb ; add qword ptr [r8 + 0x33], r9 ; ret 0x8948
0x000002000078b56d : loope 0x2000078b5a4 ; ret 0x8948
0x000002000078b94c : loope 0x2000078b983 ; ret 0x8948
0x00000200007a078f : loope 0x200007a07b3 ; sub rax, rcx ; sar rax, 0x10 ; ret
0x00000200007b159d : loope 0x200007b15ec ; add esp, 0x28 ; ret
0x00000200007b6694 : loope 0x200007b6680 ; ret 0xffff
0x00000200007b70e8 : loope 0x200007b70a8 ; inc dword ptr [rcx] ; add rsp, 0x38 ; ret
0x000002000000371e : loopne 0x2000000372c ; cmp al, 3 ; jne 0x2000000373f ; mov rcx, rdi ; call rsi
0x0000020000007ed2 : loopne 0x20000007eda ; ret
0x0000020000008a4c : loopne 0x20000008a48 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000000954b : loopne 0x20000009548 ; ret
0x000002000001b6d1 : loopne 0x2000001b6d8 ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000001c528 : loopne 0x2000001c524 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000265ff : loopne 0x2000002664f ; add esp, 0x20 ; pop rbx ; ret
0x000002000002b12c : loopne 0x2000002b131 ; ret
0x000002000002ddc9 : loopne 0x2000002ddce ; ret
0x0000020000032bf7 : loopne 0x20000032c01 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000343ce : loopne 0x200000343d3 ; jne 0x200000343dd ; mov qword ptr [r9], r8 ; ret
0x0000020000034563 : loopne 0x20000034568 ; ret
0x000002000003fc03 : loopne 0x2000003fc18 ; and ah, cl ; ret
0x000002000003fd47 : loopne 0x2000003fd50 ; add byte ptr [rax], al ; ret
0x0000020000041419 : loopne 0x20000041424 ; add eax, dword ptr [rdx + 0x268] ; ret
0x00000200000417b2 : loopne 0x20000041801 ; mov dword ptr [rax], eax ; ret
0x00000200000426cb : loopne 0x2000004265a ; ret 0x8341
0x0000020000042c48 : loopne 0x20000042bdb ; or eax, 0x2dbb45 ; jmp 0x20000042c1c
0x000002000004337c : loopne 0x20000043381 ; ret
0x0000020000044cb8 : loopne 0x20000044cc7 ; add rax, qword ptr [rip + 0x3649b7] ; ret
0x00000200000492a0 : loopne 0x200000492aa ; add byte ptr [rax], al ; pop r13 ; pop rbp ; pop rbx ; ret
0x0000020000049b3e : loopne 0x20000049b48 ; add byte ptr [rax], al ; pop r13 ; pop rbp ; pop rbx ; ret
0x000002000004de21 : loopne 0x2000004de36 ; and ah, cl ; ret
0x000002000004e0a9 : loopne 0x2000004e0b3 ; add rsp, 0x28 ; ret
0x0000020000059e12 : loopne 0x20000059e2d ; jae 0x20000059de8 ; bts esi, 0x1c ; jmp 0x20000059de8
0x000002000005e1d4 : loopne 0x2000005e1d0 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000006cf9d : loopne 0x2000006cfac ; add rax, qword ptr [rcx + 0x98] ; ret
0x000002000006d268 : loopne 0x2000006d27c ; add byte ptr [rbx + rcx*4 + 0x44], cl ; and al, 0x38 ; call rax
0x0000020000071d60 : loopne 0x20000071d6a ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000078144 : loopne 0x20000078149 ; ret
0x000002000007814d : loopne 0x20000078152 ; ret
0x000002000007c768 : loopne 0x2000007c768 ; ret
0x000002000008100f : loopne 0x20000080f9e ; ret
0x0000020000083df8 : loopne 0x20000083e03 ; add rax, rcx ; ret
0x0000020000090c20 : loopne 0x20000090c65 ; call rbx
0x0000020000090ce1 : loopne 0x20000090d26 ; call rbx
0x0000020000090dde : loopne 0x20000090e23 ; call rbx
0x0000020000092b2e : loopne 0x20000092abd ; ret 0x8341
0x0000020000097a09 : loopne 0x20000097a0f ; pop rcx ; ret
0x0000020000098d77 : loopne 0x20000098d81 ; add byte ptr [rax], al ; pop r13 ; pop rbx ; pop rbp ; ret
0x000002000009939e : loopne 0x200000993a3 ; ret
0x000002000009a743 : loopne 0x2000009a74a ; mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax] ; ret
0x000002000009e257 : loopne 0x2000009e25c ; ret
0x00000200000a0a63 : loopne 0x200000a0a68 ; ret
0x00000200000a8a1c : loopne 0x200000a8a18 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000acdba : loopne 0x200000acdd1 ; add rax, 0x1000 ; jmp 0x200000acd90
0x00000200000b8951 : loopne 0x200000b8957 ; ret
0x00000200000bb973 : loopne 0x200000bb97e ; ret
0x00000200000bd778 : loopne 0x200000bd783 ; ret
0x00000200000bdb93 : loopne 0x200000bdb8e ; sub qword ptr [rip + 0x264c0c], rax ; ret
0x00000200000c50bd : loopne 0x200000c50b9 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000d0b1f : loopne 0x200000d0aae ; ret
0x00000200000d23b8 : loopne 0x200000d234a ; xor r14b, r14b ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000d528f : loopne 0x200000d528b ; shl byte ptr [rdx], 1 ; ret 0x8388
0x00000200000dbae1 : loopne 0x200000dbaea ; add rsp, 0x28 ; ret
0x00000200000e40e0 : loopne 0x200000e4079 ; or byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000f21c8 : loopne 0x200000f21ee ; jb 0x200000f21d5 ; xor eax, eax ; ret
0x00000200000f5f50 : loopne 0x200000f5f8f ; ret 0xef72
0x00000200000fc28b : loopne 0x200000fc290 ; ret
0x00000200000fcece : loopne 0x200000fcedc ; ret
0x00000200000fcec9 : loopne 0x200000fcee1 ; ret
0x00000200000fd111 : loopne 0x200000fd121 ; ret
0x000002000010a5ff : loopne 0x2000010a626 ; xor eax, r8d ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200001154fc : loopne 0x200001154fc ; sal al, 1 ; and dword ptr [r10], eax ; ret
0x000002000011611c : loopne 0x20000116121 ; ret
0x000002000011619b : loopne 0x2000011615b ; add al, byte ptr [rax] ; add al, al ; ret
0x0000020000118bdf : loopne 0x20000118be1 ; shr eax, 3 ; add eax, 0x48 ; ret
0x0000020000118e7c : loopne 0x20000118e7b ; shr eax, 3 ; ret
0x000002000011dc5d : loopne 0x2000011dc6b ; mov eax, r8d ; ret
0x0000020000120037 : loopne 0x2000012003f ; dec eax ; ret
0x0000020000120c1c : loopne 0x20000120c68 ; and byte ptr [rax], al ; or dword ptr [rax], eax ; add byte ptr [rax], al ; call rdi
0x0000020000123fd4 : loopne 0x20000123f5e ; sar esi, 0x33 ; ret 0xd18b
0x0000020000129013 : loopne 0x20000129065 ; mov edx, esi ; mov rcx, r15 ; call r14
0x0000020000129012 : loopne 0x20000129066 ; mov edx, esi ; mov rcx, r15 ; call r14
0x000002000012db93 : loopne 0x2000012db98 ; ret
0x000002000012dd21 : loopne 0x2000012dd28 ; add dword ptr [rax], eax ; add bh, bh ; ret 0x83e8
0x0000020000130123 : loopne 0x2000013012f ; mov dword ptr [rip + 0x1f51f1], eax ; ret
0x0000020000139dbe : loopne 0x20000139d7e ; add al, byte ptr [rax] ; add al, al ; ret
0x000002000013a613 : loopne 0x2000013a618 ; ret
0x000002000013bfa2 : loopne 0x2000013bfaa ; ret
0x000002000013bfc2 : loopne 0x2000013bfc8 ; ret
0x000002000013c002 : loopne 0x2000013c00e ; ret
0x000002000013c022 : loopne 0x2000013c027 ; ret
0x000002000013d0ab : loopne 0x2000013d0be ; or eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x000002000013fb4e : loopne 0x2000013fb95 ; add rsp, 0x28 ; ret
0x000002000014ba1d : loopne 0x2000014ba22 ; or eax, r8d ; wrmsr ; ret
0x000002000014bb84 : loopne 0x2000014bb86 ; wrmsr ; ret
0x000002000014bbee : loopne 0x2000014bbf3 ; or eax, r8d ; wrmsr ; ret
0x000002000014bd34 : loopne 0x2000014bd39 ; or eax, r8d ; wrmsr ; ret
0x0000020000151266 : loopne 0x200001512b6 ; mov eax, eax ; pop rbx ; ret
0x0000020000157b69 : loopne 0x20000157b72 ; add byte ptr [rax], al ; ret
0x0000020000168509 : loopne 0x20000168493 ; sar ecx, 0x33 ; ret 0x4a75
0x000002000016e4e5 : loopne 0x2000016e4ee ; add byte ptr [rax], al ; ret
0x000002000016f0a9 : loopne 0x2000016f0c6 ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x0000020000170954 : loopne 0x20000170957 ; ret 0x963b
0x000002000017d266 : loopne 0x2000017d1f4 ; in al, dx ; dec dword ptr [rax - 0x7d] ; ret
0x000002000018b2e3 : loopne 0x2000018b2f2 ; ret 0x348
0x000002000018b2e2 : loopne 0x2000018b2f3 ; ret 0x348
0x000002000019292c : loopne 0x200001928be ; push r14 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200001929f4 : loopne 0x20000192986 ; add r14, r14 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200001acac6 : loopne 0x200001acacd ; add byte ptr [rax], al ; call rax
0x00000200001b1cfa : loopne 0x200001b1d7e ; je 0x200001b1d02 ; ret
0x00000200001b3821 : loopne 0x200001b3815 ; ret
0x00000200001b860e : loopne 0x200001b8613 ; ret
0x00000200001b9c17 : loopne 0x200001b9c3b ; jae 0x200001b9c24 ; mov al, 1 ; ret
0x00000200001c11ea : loopne 0x200001c11fe ; mov dword ptr [r8 + 0x28], eax ; ret
0x00000200001c1505 : loopne 0x200001c1519 ; mov dword ptr [r8 + 0x28], eax ; ret
0x00000200001c3225 : loopne 0x200001c323a ; mov qword ptr [r9], rax ; xor eax, eax ; ret
0x00000200001d4656 : loopne 0x200001d4665 ; add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200001d46a2 : loopne 0x200001d46b1 ; add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200001d46f4 : loopne 0x200001d46fb ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200001def00 : loopne 0x200001deef2 ; fimul dword ptr [rbp + 0x348ffef] ; ret
0x00000200001e17a1 : loopne 0x200001e17aa ; or r8, 2 ; mov qword ptr [rcx], r8 ; ret
0x00000200001e1c76 : loopne 0x200001e1c7d ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200001eab45 : loopne 0x200001eab4c ; or eax, edx ; ret
0x00000200001eab2d : loopne 0x200001eab57 ; inc eax ; add rsp, 0x28 ; ret
0x00000200001f075a : loopne 0x200001f0789 ; ret
0x00000200001f4b9b : loopne 0x200001f4bee ; cmp eax, edx ; je 0x200001f4bad ; add rax, rax ; ret
0x0000020000201582 : loopne 0x20000201512 ; pop rsp ; and al, 0x40 ; call rax
0x0000020000203bef : loopne 0x20000203c08 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000206560 : loopne 0x20000206567 ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000020b95b : loopne 0x2000020b966 ; add byte ptr [rax], al ; ret
0x000002000020bf46 : loopne 0x2000020bf51 ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000020db90 : loopne 0x2000020db97 ; add rsp, 0x38 ; ret
0x000002000020dde6 : loopne 0x2000020dded ; add rsp, 0x38 ; ret
0x00000200002117db : loopne 0x200002117eb ; add eax, ecx ; ret
0x0000020000212360 : loopne 0x200002123b0 ; mov ebx, dword ptr [rsp + 8] ; ret
0x00000200002175a1 : loopne 0x200002175a6 ; ret
0x000002000021cd1e : loopne 0x2000021cd27 ; add byte ptr [rax], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000021f564 : loopne 0x2000021f570 ; add rax, r8 ; ret
0x000002000021fb3f : loopne 0x2000021fb90 ; mov eax, dword ptr [rsp + 0x38] ; jmp rax
0x000002000021fb47 : loopne 0x2000021fb94 ; jmp rax
0x0000020000221091 : loopne 0x20000221096 ; ret
0x00000200002221bc : loopne 0x200002221c3 ; add rsp, 0x58 ; ret
0x0000020000223921 : loopne 0x20000223928 ; add rsp, 0x38 ; ret
0x0000020000223ee1 : loopne 0x20000223ee8 ; add rsp, 0x48 ; ret
0x0000020000232c7d : loopne 0x20000232c45 ; ret 0x187d
0x0000020000239159 : loopne 0x20000239160 ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000024c5a4 : loopne 0x2000024c5f3 ; add esp, 0x48 ; ret
0x00000200003c8e90 : loopne 0x200003c8e1d ; ror byte ptr [rdi], 0x88 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0
0x00000200003cfe4a : loopne 0x200003cfe63 ; and ah, cl ; add rsp, 0x28 ; ret
0x00000200003d37a7 : loopne 0x200003d37f6 ; add esp, 0x28 ; ret
0x00000200003db7b9 : loopne 0x200003db808 ; add esp, 0x28 ; ret
0x00000200003e1df1 : loopne 0x200003e1df9 ; add byte ptr [rax], al ; ret
0x00000200003e47dd : loopne 0x200003e47e8 ; mov eax, dword ptr [rdx + rax*4] ; sub eax, r8d ; ret
0x00000200003e9457 : loopne 0x200003e9490 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003fe515 : loopne 0x200003fe51e ; add rsp, 0x28 ; ret
0x0000020000403e01 : loopne 0x20000403e08 ; add byte ptr [rax], al ; pop rsi ; ret
0x0000020000408e3c : loopne 0x20000408e8e ; mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x0000020000408e3b : loopne 0x20000408e8f ; mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x000002000041df83 : loopne 0x2000041dfa6 ; ret
0x0000020000425645 : loopne 0x20000425657 ; jne 0x20000425658 ; mov eax, 1 ; ret
0x000002000042a304 : loopne 0x2000042a353 ; mov eax, eax ; ret
0x000002000042a303 : loopne 0x2000042a354 ; mov eax, eax ; ret
0x000002000043200c : loopne 0x20000432006 ; ret
0x00000200004344ce : loopne 0x200004344c7 ; add ebx, eax ; jmp 0x20000434498
0x0000020000439061 : loopne 0x2000043904f ; cdq ; ret
0x000002000043aafd : loopne 0x2000043aa8c ; ret 0x48c3
0x000002000043eb4c : loopne 0x2000043eb83 ; ret 0x8948
0x000002000043ee76 : loopne 0x2000043ee7d ; add rsp, 0x28 ; ret
0x00000200004450af : loopne 0x200004450b9 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000045396b : loopne 0x2000045396d ; ret
0x0000020000453952 : loopne 0x2000045398d ; or rax, qword ptr [rcx + 0x738] ; ret
0x0000020000454e1d : loopne 0x20000454e22 ; ret
0x00000200004563aa : loopne 0x200004563b5 ; add byte ptr [rax], al ; call 0x20000077087
0x000002000045692d : loopne 0x20000456934 ; ret
0x000002000045f70d : loopne 0x2000045f767 ; xor byte ptr [rax], al ; ret 0x700
0x0000020000462996 : loopne 0x20000462921 ; je 0x2000046299e ; ret
0x00000200004662ae : loopne 0x2000046629c ; sbb al, 0x77 ; ret
0x000002000046bdad : loopne 0x2000046bd3c ; ret 0xe8c1
0x000002000047ac54 : loopne 0x2000047ac0c ; adc al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000487a8a : loopne 0x20000487a1c ; fisttp word ptr [rax - 1] ; ret
0x0000020000487a89 : loopne 0x20000487a1d ; fisttp word ptr [rax - 1] ; ret
0x0000020000494a3e : loopne 0x200004949c5 ; ret
0x0000020000494b5d : loopne 0x20000494b68 ; add rax, rcx ; ret
0x0000020000494b6e : loopne 0x20000494b7d ; add rax, qword ptr [rcx + 0xa0] ; ret
0x00000200004961e9 : loopne 0x200004961f2 ; add rsp, 0x28 ; ret
0x00000200004a83ac : loopne 0x200004a837a ; ret
0x00000200004b6cbc : loopne 0x200004b6cd0 ; ret
0x00000200004b7366 : loopne 0x200004b73e5 ; sbb eax, 0x8bcc8b49 ; ret 0xc148
0x00000200004c9398 : loopne 0x200004c9392 ; ret
0x00000200004c9397 : loopne 0x200004c9393 ; ret
0x00000200004ca5c9 : loopne 0x200004ca5ca ; add eax, edx ; ret
0x00000200004ca5c9 : loopne 0x200004ca5cb ; add eax, edx ; ret
0x00000200004cf8f8 : loopne 0x200004cf901 ; add byte ptr [rax], al ; call rax
0x00000200004e8faa : loopne 0x200004e8fb3 ; add byte ptr [rax], al ; call 0x20000114ac7
0x00000200004edf33 : loopne 0x200004edf83 ; add esp, 0x20 ; pop rbx ; ret
0x00000200004f740d : loopne 0x200004f7417 ; call 0x2000005e179
0x00000200004f7c28 : loopne 0x200004f7c14 ; ret 0x64
0x00000200004f7c27 : loopne 0x200004f7c15 ; ret 0x64
0x00000200004fcfe5 : loopne 0x200004fcfeb ; setne al ; ret
0x0000020000502119 : loopne 0x2000050211c ; ret
0x0000020000518705 : loopne 0x2000051870d ; test rax, rax ; je 0x20000518715 ; call rax
0x00000200005189f2 : loopne 0x200005189fa ; test rax, rax ; je 0x20000518a02 ; call rax
0x000002000051dc30 : loopne 0x2000051dc38 ; test rax, rax ; je 0x2000051dc40 ; call rax
0x000002000051df22 : loopne 0x2000051df29 ; add rsp, 0x38 ; ret
0x000002000051ed6c : loopne 0x2000051ed07 ; ret 0x8bff
0x000002000051ee10 : loopne 0x2000051edfe ; jp 0x2000051ee25 ; ret 0x4cff
0x000002000051ee0f : loopne 0x2000051edff ; jp 0x2000051ee26 ; ret 0x4cff
0x000002000051fdb7 : loopne 0x2000051fda3 ; ret
0x00000200005215ac : loopne 0x2000052161c ; ret 0x48ff
0x0000020000525c2c : loopne 0x20000525c31 ; ret
0x000002000052788c : loopne 0x20000527897 ; ret 0x4cff
0x000002000052ca73 : loopne 0x2000052ca04 ; clc ; call r15
0x000002000052ca72 : loopne 0x2000052ca05 ; clc ; call r15
0x000002000054b1f3 : loopne 0x2000054b1fa ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000560def : loopne 0x20000560df7 ; dec eax ; ret
0x000002000056286f : loopne 0x20000562876 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000565405 : loopne 0x2000056540d ; dec eax ; ret
0x0000020000569014 : loopne 0x20000568fa3 ; ret 0x5489
0x0000020000569013 : loopne 0x20000568fa4 ; ret 0x5489
0x00000200005696a7 : loopne 0x200005696ac ; add rax, r8 ; ret
0x00000200005699a6 : loopne 0x200005699b8 ; add r8, rdx ; mov al, byte ptr [r8 + rax] ; ret
0x00000200005ae3cb : loopne 0x200005ae3d0 ; ret
0x00000200005b169a : loopne 0x200005b16a4 ; enter -0x2f09, -0x10 ; and dword ptr [r8], eax ; ret
0x00000200005c0b5e : loopne 0x200005c0b4b ; ret
0x00000200005d75b0 : loopne 0x200005d762d ; out dx, al ; dec dword ptr [rbp + 0x3b] ; ret
0x00000200005e1a2e : loopne 0x200005e19cb ; lock dec dword ptr [rax - 0x75] ; ret
0x00000200005fabb2 : loopne 0x200005fabb6 ; inc eax ; ret
0x00000200005fc714 : loopne 0x200005fc718 ; inc eax ; ret
0x0000020000606b09 : loopne 0x20000606b13 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000060fb77 : loopne 0x2000060fb84 ; add rax, qword ptr [rcx + 0x50] ; ret
0x000002000060fb84 : loopne 0x2000060fb94 ; add rax, 0x10 ; add rax, rcx ; ret
0x000002000061015c : loopne 0x20000610163 ; ret
0x00000200006101cf : loopne 0x200006101dc ; add rax, qword ptr [rcx + 0x48] ; ret
0x00000200006101dc : loopne 0x200006101ec ; add rax, 8 ; add rax, rcx ; ret
0x000002000061e6d2 : loopne 0x2000061e6dd ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000623ec7 : loopne 0x20000623ece ; add rsp, 0x68 ; ret
0x0000020000623fe0 : loopne 0x20000623fe7 ; add rsp, 0x68 ; ret
0x0000020000624031 : loopne 0x20000624038 ; add rsp, 0x58 ; ret
0x0000020000624030 : loopne 0x20000624039 ; add rsp, 0x58 ; ret
0x0000020000624070 : loopne 0x20000624077 ; add rsp, 0x58 ; ret
0x000002000062406f : loopne 0x20000624078 ; add rsp, 0x58 ; ret
0x000002000062406e : loopne 0x20000624079 ; add rsp, 0x58 ; ret
0x0000020000628728 : loopne 0x20000628732 ; mov byte ptr [rcx + 3], al ; xor eax, eax ; ret
0x000002000062bcd3 : loopne 0x2000062bc62 ; ret
0x000002000062bcd2 : loopne 0x2000062bc63 ; ret
0x000002000062d977 : loopne 0x2000062d97e ; add byte ptr [rax], al ; pop rbx ; ret
0x0000020000632316 : loopne 0x2000063231b ; ret
0x0000020000633044 : loopne 0x2000063304d ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000064cb67 : loopne 0x2000064cb6e ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000066f3f3 : loopne 0x2000066f3fa ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000067f55f : loopne 0x2000067f566 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200006802ab : loopne 0x200006802ce ; ret
0x0000020000686974 : loopne 0x20000686979 ; ret
0x000002000068bd7b : loopne 0x2000068bd82 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000696e41 : loopne 0x20000696e80 ; ret 0xc75
0x0000020000699fa7 : loopne 0x20000699f93 ; ret
0x000002000069e436 : loopne 0x2000069e480 ; ret
0x00000200006b7cde : loopne 0x200006b7ce5 ; ret 0xc13b
0x00000200006c746a : loopne 0x200006c746b ; add eax, 7 ; ret
0x00000200006d370b : loopne 0x200006d3713 ; mov al, r8b ; ret
0x00000200006d521c : loopne 0x200006d51a3 ; ret
0x00000200006f4551 : loopne 0x200006f45a1 ; add esp, 0x20 ; pop rbx ; ret
0x00000200006f6675 : loopne 0x200006f667e ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006f734d : loopne 0x200006f7357 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006ff49d : loopne 0x200006ff4a2 ; ret
0x0000020000702885 : loopne 0x200007028a1 ; jb 0x20000702898 ; shr eax, 0xf ; and al, 1 ; ret
0x00000200007028b1 : loopne 0x200007028ca ; jb 0x200007028be ; mov al, 1 ; ret
0x00000200007070d0 : loopne 0x2000070706d ; dec dword ptr [rax - 0x75] ; ret
0x000002000070715b : loopne 0x200007070f8 ; dec dword ptr [rax - 0x75] ; ret
0x000002000070c06e : loopne 0x2000070c0bb ; jmp rax
0x0000020000710f81 : loopne 0x20000710fd4 ; mov eax, dword ptr [rax + 0x38] ; add rsp, 0x28 ; ret
0x000002000071b953 : loopne 0x2000071b9a3 ; add esp, 0x38 ; jmp rax
0x0000020000789e4c : loopne 0x20000789e5a ; add byte ptr [rax], al ; adc byte ptr [rax - 0x7f], cl ; ret 0xe10
0x00000200007a30b4 : loopne 0x200007a30f1 ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200007b159a : loopne 0x200007b15b3 ; and ah, cl ; add rsp, 0x28 ; ret
0x00000200007bae9c : loopne 0x200007bae98 ; mov bl, 0xff ; add rsp, 0x28 ; ret
0x00000200007bd2be : loopne 0x200007bd2c3 ; ret
0x00000200007d20c7 : loopne 0x200007d20cb ; inc eax ; ret
0x00000200007d2ab6 : loopne 0x200007d2abe ; dec dword ptr [rbx - 0x74b3fbbf] ; ret 0x589
0x00000200001eab41 : lsl edx, edx ; and eax, 1 ; or eax, edx ; ret
0x000002000004dbdc : mov ah, 0 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200005f69f0 : mov ah, 0x12 ; ret 0x48ff
0x0000020000492548 : mov ah, 0x13 ; add dh, dh ; ret
0x00000200005e9380 : mov ah, 0x15 ; ret 0x8bff
0x0000020000712d58 : mov ah, 0x17 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000051cc0c : mov ah, 0x22 ; add byte ptr [rax + 0x3b], cl ; ror dword ptr [rdi], -0x7b ; ret 0x971
0x00000200001052e8 : mov ah, 0x24 ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200004224f1 : mov ah, 0x24 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; test dword ptr [rbx], edi ; ret
0x0000020000598cb5 : mov ah, 0x24 ; jo 0x20000598cd0 ; add byte ptr [rax], al ; call 0x200004d4f38
0x00000200000e0fb2 : mov ah, 0x24 ; nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000065ae6 : mov ah, 0x24 ; nop ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000c13cd : mov ah, 0x24 ; ret
0x00000200004b07b8 : mov ah, 0x24 ; ret 0
0x0000020000025762 : mov ah, 0x28 ; jb 0x2000002576f ; add byte ptr [rbp + 3], dh ; xor al, al ; ret
0x00000200004288b8 : mov ah, 0x45 ; ret
0x000002000065e147 : mov ah, 0x48 ; inc edx ; jmp 0x2000065e17d
0x00000200000992d9 : mov ah, 0x48 ; mov dword ptr [rcx], edi ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000539655 : mov ah, 0x48 ; mov ecx, edi ; call r15
0x00000200005d848c : mov ah, 0x54 ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax + 0x2b] ; ret 0xe281
0x0000020000522138 : mov ah, 0x63 ; ret 0x8bff
0x00000200004b3408 : mov ah, 0x65 ; ret
0x0000020000625848 : mov ah, 0x77 ; ret 0x4cff
0x00000200005aba14 : mov ah, 0x7f ; lldt word ptr [rax - 0x16215d17] ; jmp qword ptr [rcx]
0x0000020000545d92 : mov ah, 0xa ; add dh, dh ; ret 0x7402
0x0000020000711ba3 : mov ah, 0xb3 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000704838 : mov ah, 0xbd ; ret
0x0000020000441dc4 : mov ah, 0xc2 ; dec dword ptr [rax + 0x3b] ; ret
0x00000200006bbf88 : mov ah, 0xc9 ; ret
0x00000200004e57a2 : mov ah, 0xf ; add dh, dh ; ret
0x0000020000199b9e : mov ah, 0xf1 ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000199b77 : mov ah, 0xf1 ; push rsi ; ret 0x741e
0x00000200001a5f6c : mov ah, 0xf3 ; jmp qword ptr [rbx]
0x0000020000499415 : mov ah, 0xf7 ; dec dword ptr [rax - 0x75] ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x00000200003eb5f7 : mov ah, 0xf7 ; ret
0x0000020000537c73 : mov ah, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000518a64 : mov ah, 0xff ; add rsp, 0x28 ; ret
0x0000020000679579 : mov ah, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x000002000051cca2 : mov ah, 0xff ; add rsp, 0x38 ; ret
0x0000020000539092 : mov ah, 0xff ; add rsp, 0xc8 ; ret
0x00000200007b41f0 : mov ah, 0xff ; call 0x20000080444
0x00000200007b6e91 : mov ah, 0xff ; call 0x20000563134
0x00000200007b7044 : mov ah, 0xff ; call 0x200005632a4
0x00000200007bc969 : mov ah, 0xff ; mov byte ptr [rip - 0x494759], 1 ; ret
0x00000200007baf6d : mov ah, 0xff ; mov qword ptr [rip - 0x4b7c76], rcx ; ret
0x00000200007bc4c9 : mov ah, 0xff ; mov qword ptr [rip - 0x4b9452], rcx ; ret
0x00000200007bbabe : mov ah, 0xff ; mov qword ptr [rip - 0x4ba377], rcx ; ret
0x000002000057f571 : mov ah, 0xff ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x00000200005a10b0 : mov ah, 0xff ; nop ; jmp 0x2000042b740
0x00000200007baf74 : mov ah, 0xff ; ret
0x00000200007b4dfc : mov ah, 0xff ; xor dh, byte ptr [rdx] ; ret
0x0000020000519d8f : mov ah, 0xff ; xor eax, eax ; add rsp, 0x70 ; pop rbx ; ret
0x00000200005e9ea5 : mov ah, 1 ; call 0x20000217a25
0x0000020000439e46 : mov ah, 2 ; add byte ptr [rcx + 0x23502444], cl ; ret
0x00000200007caba0 : mov ah, 5 ; xchg eax, edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x49e9
0x000002000045282c : mov ah, ah ; add dword ptr [rax], eax ; add bh, dh ; ret 0xfff0
0x00000200004ed19d : mov ah, ah ; add dword ptr [rax], eax ; add bh, dh ; ret 0xfffe
0x000002000011f172 : mov ah, ah ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; ret 0x200a
0x00000200005566ac : mov ah, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x1b2
0x00000200005e9f3e : mov ah, bh ; call 0x20000217a25
0x000002000061a972 : mov ah, byte ptr [rsi] ; ret
0x000002000040fe8a : mov ah, byte ptr [rsi] ; sbb byte ptr [rax], al ; xor al, al ; ret
0x000002000040929d : mov ah, cl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret
0x0000020000119438 : mov ah, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000200001a972f : mov ah, dh ; inc dword ptr [rbp - 0x75] ; ret
0x00000200001a9708 : mov ah, dh ; push rsi ; ret 0x741e
0x00000200005b9644 : mov ah, dl ; dec dword ptr [rax - 0x39] ; ret 0xf80
0x000002000003ecdd : mov ah, dl ; mov r14, rcx ; call 0x2000044af4b
0x000002000021fb9c : mov al, 0 ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200004d6a93 : mov al, 0 ; add byte ptr [rax], al ; call r8
0x0000020000416c15 : mov al, 0 ; add byte ptr [rax], al ; call rax
0x0000020000054bb3 : mov al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000060905a : mov al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x00000200004d1c3f : mov al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbx ; ret
0x000002000006b942 : mov al, 0 ; add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000041bfa : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000231e77 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200002045ae : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000a85ba : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001275e8 : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000e47ac : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000567cda : mov al, 0 ; add byte ptr [rax], al ; pop rsi ; ret
0x00000200001d956c : mov al, 0 ; add byte ptr [rax], al ; ret
0x00000200003db7e9 : mov al, 0x10 ; ret
0x00000200003e5597 : mov al, 0x19 ; add byte ptr [rax], al ; call 0x200000057cf
0x0000020000507085 : mov al, 0x2f ; add byte ptr [rbp + 2], al ; ret
0x00000200004e0dcd : mov al, 0x32 ; add al, byte ptr [rax] ; add bh, dh ; ret
0x000002000042d35d : mov al, 0x32 ; add al, byte ptr [rax] ; add bh, dh ; ret 0xffff
0x00000200004b07b1 : mov al, 0x32 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x78], al ; mov ah, 0x24 ; ret 0
0x00000200005079bc : mov al, 0x32 ; ret
0x00000200001bcd1b : mov al, 0x33 ; rol byte ptr [rbp + 0x3b], 0xd9 ; seta al ; ret
0x000002000050d405 : mov al, 0x33 ; shr al, cl ; sti ; sar edi, cl ; jmp 0x2000050d3da
0x0000020000619b4c : mov al, 0x34 ; ret
0x00000200005e29c4 : mov al, 0x36 ; or byte ptr [rax], al ; mov r14b, 1 ; jmp 0x200004eec3d
0x00000200001fe430 : mov al, 0x41 ; mov eax, eax ; ret
0x000002000042b82c : mov al, 0x44 ; ret 0x8bff
0x000002000022d001 : mov al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000426e64 : mov al, 0x53 ; ret
0x000002000061734c : mov al, 0x5c ; ret
0x00000200006f35cf : mov al, 0x73 ; ret 0xfff
0x0000020000615a4c : mov al, 0x75 ; ret
0x0000020000564726 : mov al, 0x77 ; or dword ptr [rax], eax ; ret
0x00000200003eb5f4 : mov al, 0x89 ; mov r12b, 0xf7 ; ret
0x0000020000128458 : mov al, 0x8b ; ret
0x000002000000eb97 : mov al, 0x8b ; ret 0xd8f7
0x0000020000709983 : mov al, 0x92 ; dec dword ptr [rax - 0x75] ; ret
0x00000200004c5fcc : mov al, 0xb3 ; push rsi ; ret 0xf20
0x0000020000112fc1 : mov al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000066629b : mov al, 0xb8 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0x0000020000701908 : mov al, 0xd6 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007aa59e : mov al, 0xe8 ; or al, 0x7a ; ret
0x00000200005ffcbd : mov al, 0xe8 ; ret
0x000002000060bb68 : mov al, 0xe8 ; ret 0xb3c6
0x00000200004b6704 : mov al, 0xe8 ; ret 0xbce0
0x00000200001c0ba8 : mov al, 0xe8 ; stosb byte ptr [rdi], al ; ret 0xffff
0x00000200005c977e : mov al, 0xeb ; push rsi ; ret
0x00000200004e5bd4 : mov al, 0xf ; add byte ptr [rbx], dh ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200004b66eb : mov al, 0xf6 ; ret 0xf07
0x00000200001758bf : mov al, 0xf9 ; dec dword ptr [rcx - 0x75] ; ret
0x000002000063cf35 : mov al, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x000002000071a173 : mov al, 0xff ; add rsp, 0x28 ; ret
0x0000020000501d13 : mov al, 0xff ; add rsp, 0x38 ; ret
0x0000020000631b26 : mov al, 0xff ; add rsp, 0x58 ; ret
0x000002000063190b : mov al, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000630dbc : mov al, 0xff ; add rsp, 0x68 ; ret
0x000002000055729b : mov al, 0xff ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000055d249 : mov al, 0xff ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000fcfd9 : mov al, 0xff ; ret 0x3ae9
0x00000200000578ed : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000042fb9 : mov al, 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200000698c0 : mov al, 1 ; add rsp, 0x18 ; ret
0x00000200000874cf : mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000436677 : mov al, 1 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000007c29 : mov al, 1 ; add rsp, 0x28 ; ret
0x00000200000377bd : mov al, 1 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000037f55 : mov al, 1 ; add rsp, 0x38 ; ret
0x00000200000c6ce4 : mov al, 1 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000794322 : mov al, 1 ; add rsp, 0x58 ; ret
0x00000200007bba27 : mov al, 1 ; add rsp, 0x60 ; pop rbp ; ret
0x00000200006a9bcd : mov al, 1 ; add rsp, 0x68 ; ret
0x00000200000c6c35 : mov al, 1 ; add rsp, 0x78 ; pop r13 ; pop rbp ; ret
0x00000200007b1d74 : mov al, 1 ; add rsp, 0x78 ; ret
0x0000020000475378 : mov al, 1 ; add rsp, 8 ; ret
0x00000200001a8c05 : mov al, 1 ; jmp 0x200000edec6
0x0000020000125758 : mov al, 1 ; jmp 0x20000125722
0x00000200001b46a4 : mov al, 1 ; mov al, r8b ; ret
0x000002000008573e : mov al, 1 ; mov byte ptr [r8 + 0x10], 0 ; ret
0x0000020000085657 : mov al, 1 ; mov byte ptr [r8 + 0x10], 1 ; ret
0x0000020000035911 : mov al, 1 ; mov qword ptr [r10], rcx ; add rsp, 0x28 ; ret
0x0000020000021707 : mov al, 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004672df : mov al, 1 ; mov rcx, r15 ; call 0x200004035d7
0x000002000019fe50 : mov al, 1 ; movzx edx, bpl ; call rax
0x0000020000028bb0 : mov al, 1 ; pop rsi ; ret
0x00000200000035dd : mov al, 1 ; ret
0x00000200003db7f2 : mov al, 2 ; ret
0x00000200006a2962 : mov al, 3 ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000034af7 : mov al, 3 ; add byte ptr [rax], al ; ret
0x0000020000127ea3 : mov al, 3 ; ret 0xc803
0x00000200003db7ef : mov al, 4 ; ret
0x00000200004bdaae : mov al, 6 ; add byte ptr [rax], al ; call 0x200000e8067
0x000002000046de00 : mov al, 6 ; ret
0x00000200003db7ec : mov al, 8 ; ret
0x00000200004ad9af : mov al, ah ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0xdd74
0x0000020000798a89 : mov al, ah ; mov esp, 0x8b440002 ; ret
0x00000200004568ad : mov al, al ; add rsp, 0x28 ; ret
0x0000020000085709 : mov al, al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001cba34 : mov al, al ; mov al, r8b ; ret
0x00000200002027eb : mov al, al ; mov eax, edx ; mov dword ptr [rcx], eax ; mov al, r8b ; ret
0x000002000003bb03 : mov al, al ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000093ff1 : mov al, al ; or dword ptr ss:[rax], eax ; add rcx, rdx ; jmp rcx
0x000002000001b6e7 : mov al, al ; ret
0x0000020000798f91 : mov al, bh ; add rdx, rbp ; call 0x20000475297
0x00000200003fc012 : mov al, bh ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043166c : mov al, bh ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000648a1a : mov al, bh ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200005cd968 : mov al, bh ; sldt word ptr [rax] ; add al, 0x8b ; ret 0x1ba
0x00000200003db475 : mov al, bl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x2b41
0x000002000000c65f : mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000ef9e : mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000215c88 : mov al, bl ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000138a29 : mov al, bl ; add rsp, 0x50 ; pop rbx ; ret
0x00000200007a9622 : mov al, bl ; add rsp, 0x60 ; pop rbx ; ret
0x000002000050d832 : mov al, bl ; call r12
0x00000200005aaf2e : mov al, bl ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000209eb1 : mov al, bl ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200002316ae : mov al, bl ; ret
0x0000020000114a73 : mov al, byte ptr [r8 + 0xf0] ; ret
0x000002000056998f : mov al, byte ptr [r8 + rax] ; ret
0x000002000068e1a0 : mov al, byte ptr [r8] ; cmp al, r9b ; jae 0x2000068e175 ; ret
0x000002000013b1a3 : mov al, byte ptr [r8] ; test al, al ; jne 0x2000013b17f ; xor eax, eax ; ret
0x000002000003b26e : mov al, byte ptr [rax + 0x22] ; and al, 1 ; ret
0x00000200000417c1 : mov al, byte ptr [rax + 0x232] ; ret
0x0000020000114a74 : mov al, byte ptr [rax + 0xf0] ; ret
0x0000020000569990 : mov al, byte ptr [rax + rax] ; ret
0x000002000043cac0 : mov al, byte ptr [rax + rcx + 8] ; shr al, 3 ; and al, 1 ; ret
0x000002000007a342 : mov al, byte ptr [rax + rcx*2 + 1] ; ret
0x000002000007a347 : mov al, byte ptr [rax + rcx*2] ; ret
0x0000020000120f41 : mov al, byte ptr [rax + rcx] ; ret
0x00000200005c2bca : mov al, byte ptr [rax + rdx + 0x6e9978] ; ret
0x000002000046ddea : mov al, byte ptr [rax + rdx + 0x747e50] ; ret
0x000002000045d9c2 : mov al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000002000068e1a1 : mov al, byte ptr [rax] ; cmp al, r9b ; jae 0x2000068e174 ; ret
0x000002000051aeab : mov al, byte ptr [rax] ; jmp 0x2000051aec4
0x000002000013b1a4 : mov al, byte ptr [rax] ; test al, al ; jne 0x2000013b17e ; xor eax, eax ; ret
0x000002000003c75c : mov al, byte ptr [rcx + 0x170] ; and al, 1 ; ret
0x000002000007daab : mov al, byte ptr [rcx + 0x30] ; ret
0x0000020000072944 : mov al, byte ptr [rcx + 0x42] ; test al, 0x40 ; jne 0x20000072957 ; xor al, al ; ret
0x000002000020b944 : mov al, byte ptr [rcx + 0x45f] ; ret
0x0000020000086769 : mov al, byte ptr [rcx + 0x6c0] ; ret
0x000002000003def0 : mov al, byte ptr [rcx + 0x6c2] ; ret
0x00000200005a031f : mov al, byte ptr [rcx + rax] ; ret
0x00000200006215a0 : mov al, byte ptr [rcx - 0x18] ; shr al, 3 ; and al, 1 ; ret
0x000002000043456c : mov al, byte ptr [rcx - 0x18] ; shr al, 4 ; and al, 1 ; ret
0x0000020000157bcc : mov al, byte ptr [rcx] ; ret
0x0000020000206eb6 : mov al, byte ptr [rdx + 0xc6] ; ret
0x0000020000157a3c : mov al, byte ptr [rip + 0x1cd8d7] ; ret
0x00000200000f7f6c : mov al, byte ptr [rip + 0x2b01a2] ; ret
0x0000020000044db8 : mov al, byte ptr [rip + 0x2c1bae] ; ret
0x0000020000044d98 : mov al, byte ptr [rip + 0x2dc182] ; ret
0x00000200004561bc : mov al, byte ptr [rip + 0x2f1e7d] ; ret
0x0000020000044d6c : mov al, byte ptr [rip + 0x3634fa] ; ret
0x0000020000409a64 : mov al, byte ptr [rip - 0x115c72] ; ret
0x00000200003d0be0 : mov al, byte ptr [rip - 0xab7ec] ; ret
0x00000200002011ef : mov al, byte ptr [rsp + 0x28] ; add rsp, 0x30 ; pop rbx ; ret
0x000002000008d622 : mov al, byte ptr [rsp + 0x32] ; add rsp, 0x28 ; ret
0x0000020000474da6 : mov al, byte ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rbx ; ret
0x00000200007d47d2 : mov al, ch ; mov eax, fs ; ret 0x8bff
0x0000020000531f07 : mov al, ch ; ret
0x000002000001b669 : mov al, cl ; add rsp, 0x28 ; ret
0x00000200002283e8 : mov al, cl ; add rsp, 0x38 ; ret
0x00000200002012a8 : mov al, cl ; add rsp, 0x48 ; ret
0x000002000020b1ef : mov al, cl ; mov al, r8b ; ret
0x0000020000671e94 : mov al, cl ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000002f8eb : mov al, cl ; ret
0x000002000014c636 : mov al, dh ; add rsp, 0x30 ; pop rsi ; ret
0x00000200003fc011 : mov al, dil ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043166b : mov al, dil ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000225cfd : mov al, dl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c3f61 : mov al, dl ; add rsp, 0x28 ; ret
0x00000200007d4fc4 : mov al, dl ; add rsp, 0x38 ; ret
0x00000200003f75ad : mov al, dl ; add rsp, 0x58 ; ret
0x00000200001c6057 : mov al, dl ; jmp 0x200001c60a3
0x0000020000157bd0 : mov al, dl ; movzx edx, cx ; out dx, al ; ret
0x0000020000058fc0 : mov al, dl ; ret
0x0000020000225cfc : mov al, r10b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c3f60 : mov al, r10b ; add rsp, 0x28 ; ret
0x00000200003f75ac : mov al, r10b ; add rsp, 0x58 ; ret
0x00000200000862bc : mov al, r10b ; ret
0x0000020000209eb0 : mov al, r11b ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200002316ad : mov al, r11b ; ret
0x00000200004568ac : mov al, r8b ; add rsp, 0x28 ; ret
0x0000020000085708 : mov al, r8b ; add rsp, 0x30 ; pop rbx ; ret
0x000002000003bb02 : mov al, r8b ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000001b6e6 : mov al, r8b ; ret
0x000002000001b668 : mov al, r9b ; add rsp, 0x28 ; ret
0x00000200002283e7 : mov al, r9b ; add rsp, 0x38 ; ret
0x00000200002014de : mov al, r9b ; add rsp, 0x48 ; ret
0x0000020000671e93 : mov al, r9b ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000002f8ea : mov al, r9b ; ret
0x000002000014c635 : mov al, sil ; add rsp, 0x30 ; pop rsi ; ret
0x00000200006c1d52 : mov bh, 0 ; add byte ptr [rax], al ; mov rcx, r14 ; call rax
0x000002000013d410 : mov bh, 0 ; test ax, ax ; jne 0x2000013d3e2 ; xor eax, eax ; ret
0x00000200006a20d2 : mov bh, 0x14 ; adc dword ptr [rbx], ebp ; ret 0x875
0x00000200006734d3 : mov bh, 0x14 ; add dword ptr [rbx], ebp ; ret 0x875
0x000002000045c8e5 : mov bh, 0x14 ; or byte ptr [rbx], bh ; ret 0x2c75
0x0000020000696e21 : mov bh, 0x14 ; or dword ptr [rbx], edi ; ret 0x1e74
0x0000020000494647 : mov bh, 0x14 ; push rax ; add dx, cx ; movzx eax, dx ; ret
0x00000200001323ea : mov bh, 0x14 ; ret 0x8b49
0x0000020000465ce2 : mov bh, 0x15 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001f0fb2 : mov bh, 0x15 ; jo 0x200001f0fd9 ; add bh, bh ; ret
0x00000200000cf912 : mov bh, 0x15 ; js 0x200000cf8bb ; sub eax, 0x3b446600 ; ret 0x820f
0x00000200006a5697 : mov bh, 0x15 ; ret
0x000002000042407e : mov bh, 0x17 ; add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200005192b5 : mov bh, 0x19 ; ret 0x4cff
0x00000200001c4915 : mov bh, 0x1e ; or dword ptr [rax], eax ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000791227 : mov bh, 0x35 ; cmc ; jnp 0x2000079122f ; dec dword ptr [rax - 0x7f] ; ret
0x00000200001d3b48 : mov bh, 0x35 ; ret 0x1d44
0x0000020000083b9e : mov bh, 0x3c ; ret 0x8566
0x00000200000572ed : mov bh, 0x40 ; adc byte ptr [rbx], bh ; ret 0x820f
0x00000200007b495b : mov bh, 0x40 ; adc byte ptr [rsi - 0x77], ah ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000200003d33d8 : mov bh, 0x40 ; add al, byte ptr [rcx + 0x3b] ; ret
0x0000020000464a3d : mov bh, 0x40 ; or bl, al ; mov eax, 0x8664 ; ret
0x00000200007b4921 : mov bh, 0x40 ; or byte ptr [rsi - 0x77], ah ; or byte ptr [r8 - 0x7d], cl ; ret
0x00000200000eb0c5 : mov bh, 0x40 ; sbb bh, byte ptr [rbx] ; ret 0x830f
0x000002000063db02 : mov bh, 0x40 ; sub byte ptr [rbx], al ; ret 0x518d
0x000002000048bf7c : mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret
0x00000200004783d7 : mov bh, 0x41 ; add cl, byte ptr [rbp + rcx*4 + 0x1c] ; or byte ptr [rbp + 0x3b], cl ; ret
0x00000200007d2421 : mov bh, 0x41 ; or al, byte ptr [rcx + 0x3b] ; ret
0x0000020000231587 : mov bh, 0x41 ; sub bl, al ; movzx eax, word ptr [rcx] ; ret
0x00000200000c8e76 : mov bh, 0x42 ; add ah, byte ptr [rsi + 0x41] ; mov dword ptr [rdx + 2], eax ; ret
0x00000200004aeb7f : mov bh, 0x42 ; add al, 0x66 ; mov dword ptr [rcx + 6], eax ; xor eax, eax ; ret
0x000002000006ca59 : mov bh, 0x42 ; add al, byte ptr [rcx - 1] ; ret
0x00000200000e03b8 : mov bh, 0x42 ; add al, byte ptr [rcx - 1] ; ret 0x348
0x00000200000fc996 : mov bh, 0x42 ; add bh, bh ; ret 0x349
0x000002000041708d : mov bh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000002000006b382 : mov bh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0xf10
0x0000020000628ea5 : mov bh, 0x43 ; adc byte ptr [rbx], ch ; ret 0x348
0x00000200006945fa : mov bh, 0x43 ; add bh, bh ; ret 0x8b4c
0x00000200005cbf93 : mov bh, 0x43 ; add cl, byte ptr [rax + 3] ; ret
0x00000200000f6a98 : mov bh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000200003f88a9 : mov bh, 0x43 ; add cl, byte ptr [rcx - 0x7d] ; ret
0x0000020000057369 : mov bh, 0x43 ; or byte ptr [rax - 0x4a], al ; add dword ptr [rax - 0x75], ecx ; ret 0x4808
0x000002000022c722 : mov bh, 0x43 ; or cl, byte ptr [rbp + 0x3c8dc00c] ; int 0x80
0x00000200003fbfb0 : mov bh, 0x44 ; and al, 0x40 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000181b52 : mov bh, 0x44 ; ret
0x0000020000214f75 : mov bh, 0x44 ; ret 0x410c
0x00000200001fc909 : mov bh, 0x44 ; ret 0x8308
0x00000200002103e6 : mov bh, 0x44 ; ret 0xeb0c
0x00000200006e7d6a : mov bh, 0x44 ; sbb byte ptr [rbx + rdi], al ; ret
0x00000200006d2613 : mov bh, 0x44 ; std ; add byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x000002000049c1c0 : mov bh, 0x45 ; add bh, bh ; ret
0x0000020000235b4f : mov bh, 0x45 ; add bh, bh ; ret 0x4d8b
0x00000200005db9a5 : mov bh, 0x45 ; add byte ptr [rcx + 3], al ; ret
0x0000020000493d1b : mov bh, 0x45 ; add byte ptr [rcx - 0x75], al ; fstp st(1), st(0) ; call 0x2004258ff6b
0x00000200005f35b6 : mov bh, 0x45 ; and ah, byte ptr [rsi + 0x23] ; ret 0xc166
0x00000200005faab9 : mov bh, 0x45 ; call qword ptr [rax]
0x00000200006908df : mov bh, 0x45 ; mov byte ptr [rcx + 3], al ; ret 0x8944
0x00000200005d51fe : mov bh, 0x45 ; ret 0x8966
0x00000200006d1d00 : mov bh, 0x46 ; add ah, byte ptr [rsi + 0x3b] ; ret
0x000002000047a49f : mov bh, 0x46 ; add bh, bh ; ret
0x00000200000e0ff3 : mov bh, 0x46 ; add bh, bh ; ret 0x348
0x000002000048c29b : mov bh, 0x46 ; add bh, bh ; ret 0x34c
0x00000200006952f8 : mov bh, 0x46 ; add bh, bh ; ret 0x8b44
0x00000200000e0098 : mov bh, 0x46 ; add ch, byte ptr [rbx] ; ret
0x000002000041ed1a : mov bh, 0x46 ; add cl, byte ptr [rax + 0x2b] ; ret
0x0000020000512f10 : mov bh, 0x46 ; add cl, byte ptr [rbp + 0x3b662455] ; ret 0x6e72
0x00000200000e0970 : mov bh, 0x47 ; add bh, bh ; ret 0x348
0x000002000017afa8 : mov bh, 0x47 ; add ch, byte ptr [rbx] ; ret
0x00000200003e58da : mov bh, 0x47 ; and byte ptr [rbx], ah ; ret 0xe0c1
0x00000200007876d5 : mov bh, 0x47 ; or byte ptr [rax - 0x7d], cl ; ret 0x494a
0x0000020000117cf8 : mov bh, 0x47 ; sbb bh, bh ; ret 0xd03b
0x000002000005cedd : mov bh, 0x48 ; add al, byte ptr [rcx - 1] ; ret
0x0000020000479052 : mov bh, 0x48 ; add bh, bh ; ret 0x348
0x000002000048be90 : mov bh, 0x49 ; add al, 0x44 ; cmp eax, ecx ; jb 0x2000048be37 ; ret
0x00000200006971dd : mov bh, 0x4a ; add al, byte ptr [rcx - 0x77] ; or dword ptr [rcx - 0x75], eax ; ret
0x0000020000595d83 : mov bh, 0x4a ; add cl, byte ptr [rbp - 0x75] ; ret 0xc18b
0x000002000052b0f8 : mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x00000200001fc927 : mov bh, 0x4c ; ret 0x4a08
0x000002000049f9b5 : mov bh, 0x4d ; call 0x1ffd70ce2c0
0x00000200004b6702 : mov bh, 0x4d ; mov al, 0xe8 ; ret 0xbce0
0x000002000067070a : mov bh, 0x4e ; add ah, byte ptr [rsi - 9] ; fadd dword ptr [rcx - 0x75] ; ret 0xc91a
0x0000020000595df0 : mov bh, 0x50 ; add dh, dh ; ret 0x7504
0x0000020000418678 : mov bh, 0x51 ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4909
0x000002000012a3dc : mov bh, 0x51 ; add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x000002000000c35e : mov bh, 0x51 ; add dh, dh ; ret 0x7501
0x000002000017bb13 : mov bh, 0x51 ; add dh, dh ; ret 0xf10
0x0000020000617888 : mov bh, 0x51 ; or dh, dh ; ret 0xf01
0x0000020000618885 : mov bh, 0x51 ; ret
0x0000020000020a3b : mov bh, 0x52 ; sbb byte ptr [rbx + rax - 0x3e], al ; jmp 0x20000020a20
0x00000200000fbbc0 : mov bh, 0x53 ; add al, byte ptr [rcx - 0xa] ; ret 0xf01
0x000002000052b0f4 : mov bh, 0x53 ; add cl, byte ptr [rdi] ; mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x000002000071d660 : mov bh, 0x53 ; or dh, dh ; ret 0x7501
0x0000020000631b67 : mov bh, 0x55 ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000200004930b2 : mov bh, 0x55 ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x84c6
0x00000200006b7cdc : mov bh, 0x55 ; loopne 0x200006b7ce7 ; ret 0xc13b
0x00000200005fa7cf : mov bh, 0x55 ; mov byte ptr [rax - 0x75], cl ; jl 0x200005fa803 ; jo 0x200005fa764 ; ret 0x8b04
0x0000020000617efb : mov bh, 0x56 ; adc al, 0xf6 ; ret 0xf01
0x0000020000494f82 : mov bh, 0x56 ; add al, byte ptr [rcx - 0x7d] ; ret 0x4403
0x0000020000556366 : mov bh, 0x56 ; add bh, bh ; ret
0x000002000059e0da : mov bh, 0x56 ; add dh, dh ; ret 0xf10
0x0000020000098b90 : mov bh, 0x56 ; and byte ptr [rax - 0x75], cl ; ret
0x00000200005e4aa9 : mov bh, 0x56 ; sub byte ptr [rax - 0x75], cl ; xor al, r13b ; ret
0x00000200006cafd6 : mov bh, 0x56 ; sub byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x00000200006caf57 : mov bh, 0x56 ; xor byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x00000200006f7765 : mov bh, 0x57 ; ret 0x40ff
0x00000200000539f2 : mov bh, 0x5a ; or byte ptr [rax - 0x7d], cl ; ret 0xf21c
0x0000020000083ba7 : mov bh, 0x5c ; ret 0x6602
0x00000200001848b6 : mov bh, 0x5d ; cmp ah, byte ptr [rsi - 1] ; ret
0x00000200006f45e5 : mov bh, 0x63 ; ret 0x48ff
0x00000200005ed91d : mov bh, 0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xeb8b
0x00000200003d7fd5 : mov bh, 0x70 ; ret
0x000002000013d591 : mov bh, 0x73 ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000200004ac2e9 : mov bh, 0x74 ; adc eax, 0x850f0000 ; ret 0x125e
0x00000200005131b5 : mov bh, 0x7a ; ret 0x48ff
0x00000200004d80d8 : mov bh, 0x7d ; ret 0x1f0f
0x00000200005aa135 : mov bh, 0x7f ; ret 0xebff
0x00000200003d2660 : mov bh, 0x81 ; nop ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x00000200000bb74e : mov bh, 0x82 ; movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x3b660000 ; ret
0x00000200004b8396 : mov bh, 0x84 ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x000002000049eeb5 : mov bh, 0x85 ; ret 0x84ff
0x00000200000a8fcc : mov bh, 0x86 ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200006afaa6 : mov bh, 0x89 ; int1 ; sbb byte ptr [rax - 0x75], cl ; ret
0x000002000051da64 : mov bh, 0x8b ; clc ; call 0x20000148076
0x00000200000a11da : mov bh, 0x8b ; ret
0x00000200006e79a6 : mov bh, 0x8c ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret 0xf48
0x00000200001dfaa2 : mov bh, 0x8e ; movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200001c0595 : mov bh, 0x92 ; adc eax, dword ptr [rax] ; call rax
0x000002000055d9f5 : mov bh, 0x93 ; inc dword ptr [rdi + rcx - 0x49] ; ret
0x00000200005d6ae3 : mov bh, 0x94 ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 0xc883
0x00000200003d262e : mov bh, 0x9b ; xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; ret 0xb74
0x000002000013d2d3 : mov bh, 0xa ; sub eax, ecx ; ret
0x000002000070d0d1 : mov bh, 0xaa ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006cfd78 : mov bh, 0xb ; call 0x2000013c064
0x00000200005ec4d6 : mov bh, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000061a315 : mov bh, 0xbb ; ret
0x000002000070429e : mov bh, 0xbf ; jmp qword ptr [rbx]
0x00000200000d759a : mov bh, 0xc ; add dh, dh ; ret
0x000002000061c3c5 : mov bh, 0xc ; cmpsb byte ptr [rsi], byte ptr [rdi] ; push rsi ; ret
0x00000200003e4a21 : mov bh, 0xc ; pop rdx ; imul eax, ecx ; add eax, r9d ; ret
0x00000200006c24e5 : mov bh, 0xc ; push rcx ; imul eax, ecx ; sub eax, r8d ; ret
0x00000200003e49be : mov bh, 0xc ; sub eax, dword ptr [rdx + r8*4] ; sub eax, ecx ; ret
0x000002000002508c : mov bh, 0xc0 ; bsr eax, eax ; sub eax, r10d ; jmp 0x20000025048
0x0000020000226ba3 : mov bh, 0xc0 ; cmp eax, 0x50 ; jmp 0x20000226b73
0x0000020000143bea : mov bh, 0xc0 ; ret
0x000002000013baaf : mov bh, 0xc0 ; sub eax, ecx ; ret
0x00000200006882df : mov bh, 0xc1 ; add eax, 0x20 ; ret
0x00000200001447d6 : mov bh, 0xc1 ; add rsp, 0x38 ; ret
0x0000020000494607 : mov bh, 0xc1 ; ret
0x0000020000494611 : mov bh, 0xc1 ; sub eax, 0x20 ; ret
0x000002000013f50d : mov bh, 0xc1 ; sub eax, edx ; ret
0x00000200003fa759 : mov bh, 0xc2 ; jmp 0x200003fa6fe
0x0000020000564c99 : mov bh, 0xc2 ; jmp 0x20000564c79
0x00000200000527f2 : mov bh, 0xc2 ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000057e52 : mov bh, 0xc2 ; or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x000002000049464e : mov bh, 0xc2 ; ret
0x0000020000230a2b : mov bh, 0xc2 ; sub eax, ecx ; ret
0x000002000050a7d5 : mov bh, 0xc2 ; test eax, eax ; js 0x2000050a7e6 ; xor eax, eax ; ret
0x000002000013d0d4 : mov bh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005564ef : mov bh, 0xc3 ; call 0x20000157549
0x0000020000462622 : mov bh, 0xc3 ; dec dword ptr [rax - 0x75] ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200005298aa : mov bh, 0xc5 ; call 0x20000157545
0x00000200000f7996 : mov bh, 0xc7 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000052cd9e : mov bh, 0xc7 ; call 0x20000157545
0x00000200001bcfed : mov bh, 0xc8 ; lea rdx, qword ptr [rsp + 0x48] ; call r9
0x00000200005a031d : mov bh, 0xc9 ; mov al, byte ptr [rcx + rax] ; ret
0x000002000013baab : mov bh, 0xc9 ; movzx eax, r8w ; sub eax, ecx ; ret
0x000002000068dbde : mov bh, 0xc9 ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000013bbc1 : mov bh, 0xc9 ; sub r9d, eax ; mov eax, r9d ; ret
0x000002000013dde5 : mov bh, 0xca ; and eax, ecx ; ret
0x00000200006c5d2f : mov bh, 0xcb ; call rax
0x0000020000230a27 : mov bh, 0xcb ; movzx eax, r10w ; sub eax, ecx ; ret
0x00000200007a91d8 : mov bh, 0xcf ; lea r8, qword ptr [rsp + 0x3c] ; call rax
0x00000200000bd2c4 : mov bh, 0xd ; cmp byte ptr [rdi - 0x74b3ffd2], bh ; ret 0xc149
0x00000200006265c3 : mov bh, 0xd0 ; jne 0x200006265d5 ; call 0x2000024da47
0x0000020000157bc5 : mov bh, 0xd1 ; in al, dx ; ret
0x00000200000de682 : mov bh, 0xd1 ; mov rax, qword ptr [rax + rdx*8] ; ret
0x0000020000157bd3 : mov bh, 0xd1 ; out dx, al ; ret
0x0000020000529c47 : mov bh, 0xd8 ; mov r8d, ebx ; call 0x20000157548
0x00000200003e78b8 : mov bh, 0xe8 ; jb 0x200003e78c3 ; ret 0x85ff
0x000002000058f748 : mov bh, 0xe8 ; ret 0x759
0x000002000059da0d : mov bh, 0xe9 ; jle 0x2000059da4f ; call 0x1ffc3e5271d
0x00000200001cf936 : mov bh, 0xee ; xor ebx, ebx ; mov r8d, ebp ; call 0x2000013bb7d
0x000002000018268c : mov bh, 0xf0 ; dec dword ptr [rax - 0x75] ; ret
0x00000200005b4893 : mov bh, 0xf6 ; dec dword ptr [rbx + 0x3382444] ; ret 0x4489
0x00000200006cd49d : mov bh, 0xff ; add rsp, 0x28 ; ret
0x000002000051cf07 : mov bh, 0xff ; jmp 0x2000051ced1
0x00000200006d3c6c : mov bh, 0xff ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x000002000057fa88 : mov bh, 0xff ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001dc0be : mov bh, 0xff ; ret
0x00000200001433b1 : mov bh, 1 ; mov r14d, r10d ; mov r8d, edx ; jmp 0x200001433df
0x000002000013d2d0 : mov bh, 1 ; movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x000002000023158c : mov bh, 1 ; ret
0x000002000013db03 : mov bh, 1 ; test ax, ax ; jne 0x2000013dae8 ; xor eax, eax ; ret
0x0000020000458927 : mov bh, 2 ; mov word ptr [r8], ax ; xor eax, eax ; ret
0x00000200004124f9 : mov bh, 3 ; add byte ptr [rbx], dh ; fucomi st(3) ; ret 0xf41
0x000002000013bfde : mov bh, 4 ; and rax, 0x157 ; ret
0x000002000013c03e : mov bh, 4 ; and rax, 0x80 ; ret
0x000002000013c01e : mov bh, 4 ; and rax, 1 ; ret
0x000002000013bfbe : mov bh, 4 ; and rax, 2 ; ret
0x000002000013bf9e : mov bh, 4 ; and rax, 4 ; ret
0x000002000013bffe : mov bh, 4 ; and rax, 8 ; ret
0x00000200003e492f : mov bh, 4 ; imul eax, r10d ; ret
0x00000200003e446e : mov bh, 4 ; imul eax, r9d ; ret
0x000002000013dde1 : mov bh, 4 ; movzx rcx, dx ; and eax, ecx ; ret
0x00000200000fd62f : mov bh, 4 ; ret
0x000002000005d093 : mov bh, 4 ; ret 0xc0ff
0x000002000021cac2 : mov bh, 4 ; sbb byte ptr [rsi - 0x77], ah ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000090395 : mov bh, 5 ; jne 0x2000009041b ; xor dword ptr [rax], eax ; ret
0x00000200000f5c6d : mov bh, 5 ; lea esp, dword ptr [rbx] ; sub eax, dword ptr [rax] ; dec eax ; ret
0x00000200001ead0b : mov bh, 5 ; out dx, eax ; rcr byte ptr [rbx], cl ; add bh, bh ; ret
0x0000020000795ac7 : mov bh, 5 ; ret
0x0000020000134138 : mov bh, 5 ; ret 0x273e
0x0000020000798fcf : mov bh, 5 ; xlatb ; ret
0x000002000045ccf9 : mov bh, 6 ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000002000042ea92 : mov bh, 7 ; cmp rcx, rax ; jne 0x2000042eaab ; mov eax, edx ; jmp 0x2000042ea5e
0x000002000052f70b : mov bh, 7 ; mov rdx, qword ptr [r15 + 8] ; call 0x20000157549
0x000002000052cd1f : mov bh, 7 ; mov rdx, qword ptr [rdi + 8] ; call 0x20000157549
0x00000200000f09f1 : mov bh, al ; jmp 0x200000f09cf
0x000002000003b910 : mov bh, bh ; ret
0x00000200004246fc : mov bh, bh ; ret 0x5489
0x0000020000095ccd : mov bh, byte ptr [rax + 0x66] ; or dword ptr [rax], eax ; add rcx, rdx ; jmp rcx
0x00000200000d74ae : mov bh, byte ptr [rax - 0x74b7fff4] ; ret
0x0000020000188793 : mov bh, byte ptr [rdx - 0x12] ; inc dword ptr [rbp - 0x75] ; ret
0x00000200006a3625 : mov bh, ch ; call 0x2000005f904
0x00000200004bebe0 : mov bh, cl ; mov dword ptr [rcx], edx ; add byte ptr [rbp + 0x3b], cl ; ret
0x000002000010b5c6 : mov bl, 0x10 ; inc dword ptr [rcx + 0x420] ; ret
0x000002000003715d : mov bl, 0x10 ; ret
0x00000200004481f9 : mov bl, 0x14 ; mov esp, 0xc48348ff ; pop rax ; ret
0x00000200006859e8 : mov bl, 0x19 ; jmp 0x20000685a0f
0x0000020000648799 : mov bl, 0x21 ; ret
0x000002000070a9f9 : mov bl, 0x26 ; add al, byte ptr [rax] ; ret
0x00000200000f2b67 : mov bl, 0x3f ; add bh, bh ; ret
0x00000200006f64f9 : mov bl, 0x44 ; ret 0x4cff
0x000002000048c37d : mov bl, 0x48 ; add byte ptr [rcx + 3], cl ; int 0xff
0x0000020000625c11 : mov bl, 0x4d ; int1 ; push qword ptr [rdx + 0xd8d4801] ; ret 0xcdff
0x00000200004f4499 : mov bl, 0x53 ; mov cl, 0xff ; add rsp, 0x48 ; ret
0x000002000058fb51 : mov bl, 0x54 ; ret 0x8bff
0x00000200004effc1 : mov bl, 0x5c ; sar bh, 0xff ; ret
0x0000020000522499 : mov bl, 0x60 ; ret 0x85ff
0x0000020000401635 : mov bl, 0x82 ; ret
0x00000200001fcd9c : mov bl, 0x89 ; add dword ptr [rax - 0x75], ecx ; ret
0x00000200003c8549 : mov bl, 0x8a ; ret
0x00000200004226c8 : mov bl, 0x8b ; ret 0x8d48
0x0000020000150947 : mov bl, 0x8c ; ret 0x118
0x000002000051e7c9 : mov bl, 0x90 ; ret
0x000002000017a29d : mov bl, 0x90 ; sbb byte ptr [rax], al ; mov rcx, qword ptr [rdi + 8] ; call r8
0x0000020000120cb9 : mov bl, 0x9f ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x000002000024f196 : mov bl, 0xa ; add byte ptr [rbx + rcx*4 - 0x6c], cl ; ret 0x95c0
0x000002000017e798 : mov bl, 0xa8 ; in al, dx ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000638191 : mov bl, 0xb ; ret
0x0000020000436839 : mov bl, 0xb3 ; ret 0x8bff
0x00000200001da171 : mov bl, 0xb8 ; add dword ptr [rax], eax ; add bl, ch ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200005c215d : mov bl, 0xbc ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006bd449 : mov bl, 0xc3 ; ret
0x0000020000594260 : mov bl, 0xc8 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000042ccfd : mov bl, 0xcb ; dec dword ptr [rax - 0x75] ; ret
0x00000200000d2af2 : mov bl, 0xd0 ; mov qword ptr [rcx + r8*8 + 8], rax ; ret
0x00000200000fd604 : mov bl, 0xd0 ; mov qword ptr [rcx], rax ; ret
0x00000200005373c2 : mov bl, 0xdc ; inc dword ptr [rbx - 0x234c43f3] ; jmp qword ptr [rax]
0x00000200005373c8 : mov bl, 0xdc ; jmp qword ptr [rax]
0x00000200001a6140 : mov bl, 0xf3 ; inc dword ptr [rbp + 0x32] ; dec dword ptr [rax - 0x39] ; ret
0x00000200007bcd65 : mov bl, 0xff ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000051beb3 : mov bl, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007bae9e : mov bl, 0xff ; add rsp, 0x28 ; ret
0x0000020000607d20 : mov bl, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005305bb : mov bl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000601173 : mov bl, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000600db0 : mov bl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000624863 : mov bl, 0xff ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000012abe2 : mov bl, 1 ; call 0x20000056ed0
0x00000200000c9380 : mov bl, 1 ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000138a27 : mov bl, 1 ; mov al, bl ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000100e0e : mov bl, 1 ; ret
0x00000200005170c1 : mov bl, 9 ; add byte ptr [rbp - 0x74dc8725], al ; ret
0x000002000055ef48 : mov bl, 9 ; add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200005c1953 : mov bl, 9 ; add dh, dh ; ret
0x000002000008f059 : mov bl, al ; call rsi
0x000002000070ff94 : mov bl, al ; mov eax, 0xc0000002 ; ret
0x000002000044b562 : mov bl, byte ptr [rax] ; ret
0x000002000040f632 : mov bl, byte ptr [rdi] ; int1 ; dec dword ptr [rax - 0x39] ; ret 0x5d00
0x00000200004f1d3f : mov bl, byte ptr [rip - 0x74b3fff1] ; ret
0x000002000050abe3 : mov bl, byte ptr [rip - 0x74b7fff2] ; ret
0x000002000000ef9c : mov bl, cl ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x000002000069c69b : mov bl, dh ; movq qword ptr [rbp - 0x68], mm0 ; call 0x20000148938
0x0000020000515bc4 : mov bl, dl ; ret
0x00000200004924eb : mov bpl, 0x13 ; add dh, dh ; ret
0x0000020000718fcc : mov bpl, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x0000020000506a83 : mov bpl, 0xff ; mov esi, eax ; jmp 0x20000506a1e
0x00000200001a828e : mov bpl, 1 ; jmp 0x200000e905d
0x00000200004f1628 : mov bpl, dl ; call 0x200004fd855
0x00000200005525e0 : mov byte ptr [r10 + 0x10], r8b ; test dl, dl ; jne 0x200005525f1 ; ret
0x000002000055260f : mov byte ptr [r10 + 0x30], dl ; ret
0x000002000050708b : mov byte ptr [r10 + rcx*2 + 0x2fb084], r8b ; ret
0x000002000022e2a9 : mov byte ptr [r10], 0x2e ; call r10
0x0000020000140261 : mov byte ptr [r10], 0x2e ; inc r10 ; jmp 0x20000140283
0x0000020000071b28 : mov byte ptr [r14 + 0x2dea], 1 ; call rsi
0x0000020000085740 : mov byte ptr [r8 + 0x10], 0 ; ret
0x0000020000085659 : mov byte ptr [r8 + 0x10], 1 ; ret
0x000002000050ce73 : mov byte ptr [r8 + 0x3b], r9b ; ret
0x0000020000053a3b : mov byte ptr [r8 + 4], r9b ; ret
0x000002000007468d : mov byte ptr [r8], 0 ; ret
0x00000200001d6901 : mov byte ptr [r8], 1 ; mov qword ptr [rdx], r9 ; ret
0x00000200004b33ac : mov byte ptr [r8], al ; xor eax, eax ; ret
0x000002000056997d : mov byte ptr [r8], cl ; mov byte ptr [r9], al ; ret
0x000002000043b6ef : mov byte ptr [r8], r10b ; ret
0x000002000012f258 : mov byte ptr [r8], r9b ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000020a192 : mov byte ptr [r9 + 0x5e99], r8b ; pop r14 ; ret
0x000002000005f017 : mov byte ptr [r9 + 0x6cc], al ; ret
0x00000200006908e0 : mov byte ptr [r9 + 3], r8b ; ret 0x8944
0x0000020000133980 : mov byte ptr [r9 + 5], r11b ; ret
0x0000020000417ce5 : mov byte ptr [r9 - 0x75], r8b ; ret
0x00000200001d090b : mov byte ptr [r9 - 0x75], r9b ; ret 0x7d89
0x0000020000569980 : mov byte ptr [r9], al ; ret
0x00000200000e95fd : mov byte ptr [r9], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000000bfcc : mov byte ptr [r9], al ; xor eax, eax ; ret
0x0000020000085741 : mov byte ptr [rax + 0x10], 0 ; ret
0x000002000008565a : mov byte ptr [rax + 0x10], 1 ; ret
0x00000200000450da : mov byte ptr [rax + 0x10b80013], 0 ; add byte ptr [rax], al ; ret
0x000002000050ce74 : mov byte ptr [rax + 0x3b], cl ; ret
0x00000200000de47d : mov byte ptr [rax + 0x44], 1 ; ret
0x0000020000413bd4 : mov byte ptr [rax + 0x49004131], cl ; add edx, eax ; jmp rdx
0x00000200000c84b6 : mov byte ptr [rax + 0x6a], bh ; or eax, 0xbc0f4400 ; ret
0x00000200005697fb : mov byte ptr [rax + 0xd0], 0 ; xor eax, eax ; ret
0x00000200001fc141 : mov byte ptr [rax + 0xf0], 1 ; ret
0x00000200000e94f8 : mov byte ptr [rax + 1], 0 ; add dh, dh ; ret
0x00000200001fc3a7 : mov byte ptr [rax + 3], cl ; mov qword ptr [rax + 0x28], r9 ; ret
0x00000200001fc3a6 : mov byte ptr [rax + 3], r9b ; mov qword ptr [rax + 0x28], r9 ; ret
0x0000020000053a3c : mov byte ptr [rax + 4], cl ; ret
0x00000200000bc4ab : mov byte ptr [rax + 6], bh ; add byte ptr [rax], al ; ret
0x0000020000008f6f : mov byte ptr [rax + 7], cl ; add byte ptr [rax], al ; ret
0x000002000021c2c6 : mov byte ptr [rax + r8], cl ; ret
0x000002000070d694 : mov byte ptr [rax + rax], 0x48 ; add esp, 0x58 ; ret
0x000002000070d63b : mov byte ptr [rax + rax], 0x48 ; add esp, 0x68 ; ret
0x0000020000594268 : mov byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000023ce6d : mov byte ptr [rax + rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001477c0 : mov byte ptr [rax + rax], cl ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000021c2c7 : mov byte ptr [rax + rax], cl ; ret
0x00000200001578c1 : mov byte ptr [rax + rcx - 1], dl ; dec r8 ; jne 0x200001578c9 ; ret
0x000002000015796f : mov byte ptr [rax + rcx - 1], dl ; dec r8 ; jne 0x20000157977 ; ret
0x00000200005bc79e : mov byte ptr [rax - 0x17], 0x8c ; test eax, 0x8b48ffe9 ; ret
0x000002000052618e : mov byte ptr [rax - 0x74fff6f0], dh ; ret
0x00000200001dc0b7 : mov byte ptr [rax - 0x75000000], al ; mov r15b, 0xff ; ret
0x00000200005fa7d1 : mov byte ptr [rax - 0x75], cl ; jl 0x200005fa801 ; jo 0x200005fa762 ; ret 0x8b04
0x00000200007819f9 : mov byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000061bfc8 : mov byte ptr [rax - 0x76000000], bh ; xchg eax, ecx ; ret 6
0x000002000009e492 : mov byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000149765 : mov byte ptr [rax], 0 ; add cl, ch ; ror al, cl ; add byte ptr [rax], al ; ret
0x000002000007468e : mov byte ptr [rax], 0 ; ret
0x00000200001d6902 : mov byte ptr [rax], 1 ; mov qword ptr [rdx], r9 ; ret
0x00000200006939db : mov byte ptr [rax], 1 ; ret
0x00000200000088a8 : mov byte ptr [rax], 1 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000069e3b8 : mov byte ptr [rax], al ; add al, al ; ret
0x0000020000516d6f : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000455bd7 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rdi ; ret
0x00000200006f313d : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000002000011afd8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; ret
0x0000020000519d72 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call 0x20000148077
0x00000200004c8038 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call 0x20000484316
0x0000020000416d29 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r12
0x00000200001bc70e : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r9
0x00000200005d8d0a : mov byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x200004c5007
0x000002000061c4b8 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx + 0x18], eax ; ret
0x000002000061c47a : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx + 0x18], rax ; ret
0x00000200001a0331 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x00000200005a69be : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rcx, rbx ; call 0x20000422c41
0x000002000061c4f9 : mov byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rcx + 0x20], xmm0 ; ret
0x00000200001dcae9 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000020000013dc1 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200004b33ad : mov byte ptr [rax], al ; xor eax, eax ; ret
0x0000020000128b8d : mov byte ptr [rax], bh ; or byte ptr ss:[rax], al ; add rsp, 0x58 ; ret
0x00000200004e42fa : mov byte ptr [rax], bh ; ret
0x00000200004cca74 : mov byte ptr [rax], bh ; ret 0x48ff
0x0000020000440313 : mov byte ptr [rax], bl ; xor eax, eax ; ret
0x00000200005bbb35 : mov byte ptr [rax], ch ; lodsb al, byte ptr [rsi] ; outsb dx, byte ptr [rsi] ; add byte ptr [rcx - 0x7b], al ; ret
0x000002000040ac51 : mov byte ptr [rax], cl ; add byte ptr [rsi - 1], ah ; ret
0x0000020000468820 : mov byte ptr [rax], cl ; jmp 0x200004688b5
0x000002000056997e : mov byte ptr [rax], cl ; mov byte ptr [r9], al ; ret
0x000002000012f259 : mov byte ptr [rax], cl ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001e25b8 : mov byte ptr [rax], dh ; out 0xff, al ; add rsp, 0x48 ; ret
0x000002000043b6f0 : mov byte ptr [rax], dl ; ret
0x000002000042193e : mov byte ptr [rax], dl ; ret 0x17
0x0000020000440312 : mov byte ptr [rax], r11b ; xor eax, eax ; ret
0x00000200003e2e08 : mov byte ptr [rbp + 0x410019f5], ah ; mov al, al ; ret
0x00000200003d480a : mov byte ptr [rbp - 0x58], dh ; call 0x200000036ca
0x00000200003d4809 : mov byte ptr [rbp - 0x58], r14b ; call 0x200000036cb
0x0000020000490198 : mov byte ptr [rbp - 0x74ffec33], al ; ret
0x00000200003fc06c : mov byte ptr [rbp - 0x79], bh ; call 0x200003fa19f
0x00000200003fc06b : mov byte ptr [rbp - 0x79], dil ; call 0x200003fa1a0
0x0000020000624f2c : mov byte ptr [rbp - 0x7cb80000], bl ; ret 0x3b08
0x00000200004ad19d : mov byte ptr [rbp - 0x9ffedac], dh ; ret
0x000002000000f71d : mov byte ptr [rbx + 0x20], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000007e828 : mov byte ptr [rbx + 0x20], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006aae82 : mov byte ptr [rbx + 0x21], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000026128 : mov byte ptr [rbx + 0x23], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d60d9 : mov byte ptr [rbx + 0x38], 2 ; call r8
0x000002000016d941 : mov byte ptr [rbx + 0x45], bpl ; call rsi
0x000002000016d942 : mov byte ptr [rbx + 0x45], ch ; call rsi
0x00000200001465b6 : mov byte ptr [rbx + 0xf], cl ; add rsp, 0x40 ; pop rbx ; ret
0x000002000003d2b9 : mov byte ptr [rbx + 8], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001474ec : mov byte ptr [rbx + rbp - 0x38], 0x41 ; mov eax, ecx ; ret
0x0000020000127b01 : mov byte ptr [rbx + rcx - 8], 0x8b ; ret
0x000002000052dcf4 : mov byte ptr [rbx + rcx*4 - 0x3d], al ; xor edx, edx ; call 0x20000157889
0x00000200006db004 : mov byte ptr [rbx + rdi - 0xb], 0x72 ; ret
0x0000020000505c62 : mov byte ptr [rbx + rdi - 0xd], 0x72 ; fcos ; ret
0x000002000011526b : mov byte ptr [rbx - 0x73], 0x14 ; adc ebp, dword ptr [rbx] ; ret 0xc0ff
0x00000200001e63d4 : mov byte ptr [rbx - 0x73], 0x14 ; or ch, byte ptr [rbx] ; ret 0x341
0x0000020000115392 : mov byte ptr [rbx - 0x73], 0x14 ; or ch, byte ptr [rbx] ; ret 0xc0ff
0x00000200007ce594 : mov byte ptr [rbx - 0x73], 0x14 ; or ebp, dword ptr [rbx] ; ret 0x341
0x000002000053a164 : mov byte ptr [rbx - 0x74fff4f8], bh ; ret
0x0000020000468bf9 : mov byte ptr [rbx - 0x74fffffa], bl ; ret
0x00000200000034d1 : mov byte ptr [rbx], 0xff ; ret
0x00000200004b31b7 : mov byte ptr [rbx], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f7dbf : mov byte ptr [rbx], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011c4eb : mov byte ptr [rbx], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003fba16 : mov byte ptr [rbx], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000093cd9 : mov byte ptr [rbx], bl ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000093ca0 : mov byte ptr [rbx], bl ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004b2b88 : mov byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001253e6 : mov byte ptr [rbx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f608b : mov byte ptr [rbx], cl ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000430a74 : mov byte ptr [rbx], dl ; ret
0x0000020000093cd8 : mov byte ptr [rbx], r11b ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000a164b : mov byte ptr [rcx + 0x1b], al ; ret
0x0000020000423fc3 : mov byte ptr [rcx + 0x27], al ; add rsp, 0x28 ; ret
0x000002000004e344 : mov byte ptr [rcx + 0x2d], ah ; add byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x000002000016f0e7 : mov byte ptr [rcx + 0x2f], bh ; in eax, dx ; dec dword ptr [rax + 0x63] ; ret
0x000002000007bb2a : mov byte ptr [rcx + 0x30], 1 ; ret
0x000002000008f3f1 : mov byte ptr [rcx + 0x318], 0x3f ; ret
0x000002000069f39e : mov byte ptr [rcx + 0x41], 0x69 ; ret 0xdcd
0x000002000020b9d0 : mov byte ptr [rcx + 0x45f], dl ; ret
0x00000200003e006b : mov byte ptr [rcx + 0x48], 0 ; ret
0x0000020000211a5a : mov byte ptr [rcx + 0x49], bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000211a59 : mov byte ptr [rcx + 0x49], r11b ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008f43e : mov byte ptr [rcx + 0x52], dl ; ret
0x0000020000157ac8 : mov byte ptr [rcx + 0x58], 1 ; ret
0x0000020000044d20 : mov byte ptr [rcx + 0x5df0], 0 ; xor eax, eax ; ret
0x0000020000044cfd : mov byte ptr [rcx + 0x5df8], 0 ; ret
0x000002000020a193 : mov byte ptr [rcx + 0x5e99], al ; pop r14 ; ret
0x0000020000126291 : mov byte ptr [rcx + 0x5f], 0x41 ; pop rsi ; pop r13 ; pop r12 ; ret
0x000002000049a3bb : mov byte ptr [rcx + 0x6c8], al ; call 0x200000be969
0x000002000005f018 : mov byte ptr [rcx + 0x6cc], al ; ret
0x0000020000085640 : mov byte ptr [rcx + 0x88], 1 ; ret
0x00000200000bb7ba : mov byte ptr [rcx + 0xbe], al ; ret
0x000002000012a651 : mov byte ptr [rcx + 0xf], 0x44 ; ret 0x8a40
0x0000020000047a96 : mov byte ptr [rcx + 0xf], 0x45 ; ret
0x00000200001323d6 : mov byte ptr [rcx + 0xf], 0xb7 ; ret
0x0000020000120548 : mov byte ptr [rcx + 1], dl ; ret
0x0000020000147450 : mov byte ptr [rcx + 2], al ; mov word ptr [rcx], ax ; ret
0x00000200006908e1 : mov byte ptr [rcx + 3], al ; ret 0x8944
0x000002000062872a : mov byte ptr [rcx + 3], al ; xor eax, eax ; ret
0x000002000014745d : mov byte ptr [rcx + 4], al ; mov dword ptr [rcx], eax ; ret
0x00000200001b3891 : mov byte ptr [rcx + 4], al ; ret
0x0000020000133981 : mov byte ptr [rcx + 5], bl ; ret
0x00000200000ca348 : mov byte ptr [rcx + 6], 1 ; add rsp, 0x28 ; ret
0x000002000003d3f7 : mov byte ptr [rcx + 8], al ; ret
0x000002000004726e : mov byte ptr [rcx + rax*2], 0xb1 ; adc dword ptr [rbp - 0x75], ecx ; ret 0x450f
0x0000020000177260 : mov byte ptr [rcx + rcx*2], 0x83 ; ret 0xe904
0x00000200007aa59a : mov byte ptr [rcx + rcx*4 + 0x6d], cl ; mov al, 0xe8 ; or al, 0x7a ; ret
0x000002000013ccc8 : mov byte ptr [rcx + rdx], al ; mov rax, r11 ; ret
0x00000200000b1810 : mov byte ptr [rcx - 0x73], 0x46 ; dec dword ptr [rcx - 1] ; ret
0x0000020000417ce6 : mov byte ptr [rcx - 0x75], al ; ret
0x00000200001d090c : mov byte ptr [rcx - 0x75], cl ; ret 0x7d89
0x00000200000fea1f : mov byte ptr [rcx - 0x7d], 0xc2 ; add al, 0xff ; ret 0x5489
0x0000020000157589 : mov byte ptr [rcx - 1], al ; jne 0x20000157588 ; mov rax, r11 ; ret
0x00000200005bb7cb : mov byte ptr [rcx], 0 ; add byte ptr [rcx - 0xa], al ; ret 0x4504
0x000002000012adc9 : mov byte ptr [rcx], 0 ; mov eax, r8d ; ret
0x00000200001d5565 : mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x000002000012a3e4 : mov byte ptr [rcx], 3 ; mov dword ptr [rcx + 0xc], r8d ; xor eax, eax ; ret
0x00000200003e7758 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x20000008db7
0x0000020000475b43 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x20000061dc6
0x0000020000433f92 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x20000061dc7
0x000002000043268c : mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200000be966
0x00000200005acd15 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200001d36d3
0x0000020000627a59 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x28] ; ret
0x000002000020b8f1 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x000002000020b8e1 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; ret
0x000002000001be31 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000002000023b615 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; xor ecx, ecx ; call r9
0x0000020000033d65 : mov byte ptr [rcx], al ; jmp 0x20000033d44
0x000002000015772a : mov byte ptr [rcx], al ; jne 0x20000157727 ; mov rax, r11 ; ret
0x000002000014744a : mov byte ptr [rcx], al ; ret
0x00000200000088c8 : mov byte ptr [rcx], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000000bfcd : mov byte ptr [rcx], al ; xor eax, eax ; ret
0x00000200000fba4b : mov byte ptr [rcx], cl ; add byte ptr [rbx], cl ; add bh, bh ; ret
0x0000020000157bd8 : mov byte ptr [rcx], dl ; lock or dword ptr [rsp], 0 ; ret
0x00000200001d2923 : mov byte ptr [rcx], dl ; ret
0x00000200001f103c : mov byte ptr [rdi + 0x22], dl ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004527e6 : mov byte ptr [rdi + 0x8c], bl ; call 0x2000007d089
0x00000200001b13ea : mov byte ptr [rdi + 4], al ; jmp 0x20000135478
0x0000020000214d83 : mov byte ptr [rdi + 5], bl ; add byte ptr [rax], al ; mov eax, ecx ; ret
0x0000020000176291 : mov byte ptr [rdi + rcx + 0x22], 0xc0 ; jmp 0x20000112587
0x0000020000102a0b : mov byte ptr [rdi + rdi*8 - 1], ah ; inc dword ptr [rbx] ; fucomi st(3) ; ret
0x00000200004d363b : mov byte ptr [rdi - 0x7cb7fff0], cl ; ret
0x00000200001d80ae : mov byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000200000f6af6 : mov byte ptr [rdi], al ; inc rdi ; jmp 0x200000f6ac6
0x00000200005bd042 : mov byte ptr [rdi], ch ; ret 0xffe9
0x00000200001f8312 : mov byte ptr [rdi], cl ; test esp, ebp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200005525e1 : mov byte ptr [rdx + 0x10], al ; test dl, dl ; jne 0x200005525f0 ; ret
0x00000200001f93c3 : mov byte ptr [rdx + 0x22], al ; ret
0x00000200000f0577 : mov byte ptr [rdx + 0x2a], 0 ; ret
0x0000020000552610 : mov byte ptr [rdx + 0x30], dl ; ret
0x00000200000fd68c : mov byte ptr [rdx + 0x7c], al ; ret
0x000002000022e2a5 : mov byte ptr [rdx + 1], 0x48 ; mov byte ptr [r10], 0x2e ; call r10
0x00000200002288af : mov byte ptr [rdx + 1], al ; mov byte ptr [rdx], cl ; ret
0x000002000022888f : mov byte ptr [rdx + 1], cl ; ret
0x000002000022888c : mov byte ptr [rdx + 2], al ; mov byte ptr [rdx + 1], cl ; ret
0x000002000022886e : mov byte ptr [rdx + 2], cl ; ret
0x000002000008e08e : mov byte ptr [rdx + 2], cl ; xor eax, eax ; ret
0x0000020000525f32 : mov byte ptr [rdx + 8], 0 ; mov rax, rdx ; ret
0x000002000050708c : mov byte ptr [rdx + rcx*2 + 0x2fb084], al ; ret
0x00000200007ce490 : mov byte ptr [rdx - 0x73], 0x14 ; sbb ebp, dword ptr [rbx] ; ret 0x341
0x000002000022e2aa : mov byte ptr [rdx], 0x2e ; call r10
0x0000020000140262 : mov byte ptr [rdx], 0x2e ; inc r10 ; jmp 0x20000140282
0x00000200006ccd95 : mov byte ptr [rdx], 0xff ; ret
0x00000200003d0760 : mov byte ptr [rdx], ah ; add byte ptr [rax], al ; adc byte ptr [rax], al ; ret
0x000002000007a3d3 : mov byte ptr [rdx], al ; add byte ptr [rax], al ; test rcx, rcx ; jne 0x2000007a3e6 ; ret
0x000002000040325d : mov byte ptr [rdx], al ; jne 0x2000040326a ; xor eax, eax ; ret
0x0000020000086767 : mov byte ptr [rdx], al ; mov al, byte ptr [rcx + 0x6c0] ; ret
0x00000200004454b0 : mov byte ptr [rdx], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001345aa : mov byte ptr [rdx], bl ; ret 7
0x00000200006db480 : mov byte ptr [rdx], cl ; add rsp, 0x48 ; ret
0x00000200006cde78 : mov byte ptr [rdx], cl ; mov al, 1 ; ret
0x000002000007c7e1 : mov byte ptr [rdx], cl ; ret
0x000002000055c14e : mov byte ptr [rdx], dl ; inc rdx ; jmp 0x2000055c13f
0x000002000055c14d : mov byte ptr [rdx], r10b ; inc rdx ; jmp 0x2000055c140
0x00000200001c462e : mov byte ptr [rip + 0x15dc6c], cl ; ret
0x000002000018d30f : mov byte ptr [rip + 0x194d31], dl ; ret
0x0000020000157b30 : mov byte ptr [rip + 0x19c195], 0 ; xor eax, eax ; ret
0x00000200001d2b6e : mov byte ptr [rip + 0x1d66ed], cl ; mov al, dl ; ret
0x00000200001d2b6d : mov byte ptr [rip + 0x1d66ed], r9b ; mov al, dl ; ret
0x000002000013a63f : mov byte ptr [rip + 0x1edd03], cl ; ret
0x000002000013a63e : mov byte ptr [rip + 0x1edd03], r9b ; ret
0x00000200000853c1 : mov byte ptr [rip + 0x29cc7d], dl ; ret
0x00000200000853ba : mov byte ptr [rip + 0x29cc82], dl ; ret
0x00000200000853aa : mov byte ptr [rip + 0x29cc95], dl ; ret
0x00000200000853a3 : mov byte ptr [rip + 0x29cc9a], dl ; ret
0x000002000002e515 : mov byte ptr [rip + 0x2f3d4c], 1 ; mov r8, r10 ; jmp 0x2000002e4ec
0x00000200002483ec : mov byte ptr [rip + 0x33480000], al ; ret 0xd233
0x000002000043e8b0 : mov byte ptr [rip - 0x11c57b], 1 ; xor eax, eax ; ret
0x000002000052fca5 : mov byte ptr [rip - 0x233c2b], 0 ; ret
0x000002000052fcad : mov byte ptr [rip - 0x233c33], 1 ; ret
0x0000020000561d06 : mov byte ptr [rip - 0x23974d], 1 ; ret
0x00000200005fbef9 : mov byte ptr [rip - 0x2d70d2], cl ; ret
0x00000200006f6314 : mov byte ptr [rip - 0x3dcdc2], cl ; ret
0x00000200007bd2cc : mov byte ptr [rip - 0x4152a3], cl ; ret
0x00000200007bc96b : mov byte ptr [rip - 0x494759], 1 ; ret
0x00000200007ab5e4 : mov byte ptr [rip - 0x4a8511], 6 ; call 0x20000157889
0x00000200007b7040 : mov byte ptr [rip - 0x4b75fd], bl ; call 0x200005632a8
0x00000200007bbf46 : mov byte ptr [rip - 0x4bb34a], 0x14 ; ret
0x0000020000082c2d : mov byte ptr [rip - 0x74ffef62], ch ; ret
0x00000200007a961d : mov byte ptr [rip - 0x75fffe1b], ah ; ret
0x0000020000172651 : mov byte ptr [rip - 0x7cb70007], bh ; ret 0xe908
0x0000020000071b29 : mov byte ptr [rsi + 0x2dea], 1 ; call rsi
0x000002000051d4ff : mov byte ptr [rsi + rax*4 + 9], dl ; add al, ch ; ret
0x0000020000558e8d : mov byte ptr [rsi - 0x74fff61b], bh ; ret
0x0000020000233394 : mov byte ptr [rsi], 1 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000055e50 : mov byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000002000059cc22 : mov byte ptr [rsi], bh ; jmp 0x2000059cc33
0x000002000059cc21 : mov byte ptr [rsi], r15b ; jmp 0x2000059cc34
0x00000200005b0cbe : mov byte ptr [rsp + 0x20], ah ; call 0x2000045ceda
0x000002000044207a : mov byte ptr [rsp + 0x20], al ; call 0x2000006cfb7
0x00000200001b237b : mov byte ptr [rsp + 0x20], al ; call r8
0x0000020000678242 : mov byte ptr [rsp + 0x20], bh ; call 0x200002044be
0x000002000070b64f : mov byte ptr [rsp + 0x20], bh ; call r12
0x0000020000678241 : mov byte ptr [rsp + 0x20], dil ; call 0x200002044bf
0x00000200005b0cbd : mov byte ptr [rsp + 0x20], r12b ; call 0x2000045cedb
0x000002000070b64e : mov byte ptr [rsp + 0x20], r15b ; call r12
0x0000020000624526 : mov byte ptr [rsp + 0x21], al ; jmp 0x2000062453d
0x000002000008f4fc : mov byte ptr [rsp + 0x30], dh ; mov rcx, rdi ; call rsi
0x000002000008f4fb : mov byte ptr [rsp + 0x30], r14b ; mov rcx, rdi ; call rsi
0x00000200005539a7 : mov ch, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000572f5 : mov ch, 0x12 ; add byte ptr [rax - 0x3ffffddb], bh ; ret
0x00000200001b6bb7 : mov ch, 0x12 ; dec dword ptr [rax - 0x75] ; ret
0x00000200004924ec : mov ch, 0x13 ; add dh, dh ; ret
0x0000020000004ca9 : mov ch, 0x15 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000bb6c3 : mov ch, 0x20 ; add byte ptr [rax], al ; add rdi, rax ; jmp 0x200000bb696
0x0000020000785b76 : mov ch, 0x30 ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006f4bd2 : mov ch, 0x33 ; ror byte ptr [rax - 0x77], 5 ; ret 0x8aff
0x00000200005a40e1 : mov ch, 0x34 ; jmp 0x1ffc21cccec
0x0000020000057ca6 : mov ch, 0x41 ; mov eax, edx ; jmp 0x20000057c89
0x0000020000560f8c : mov ch, 0x48 ; mov ebx, dword ptr [rsp + 8] ; mov eax, r8d ; ret
0x000002000056946d : mov ch, 0x49 ; or dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006eab9d : mov ch, 0x49 ; ret
0x00000200005f130c : mov ch, 0x4f ; cmc ; dec dword ptr [rax - 0x75] ; ret
0x00000200006d29af : mov ch, 0x67 ; ret 0x49ff
0x000002000062e9b7 : mov ch, 0x75 ; ret 0x4cff
0x00000200006f30e7 : mov ch, 0x78 ; ret 0xc7ff
0x000002000045964d : mov ch, 0x8b ; ret
0x00000200007b52cb : mov ch, 0xc ; ret
0x00000200005ec15d : mov ch, 0xce ; int1 ; inc dword ptr [rbx - 0x7cb70740] ; ret
0x000002000008e254 : mov ch, 0xeb ; ret 0x48cc
0x00000200004cdcdd : mov ch, 0xed ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005ebb40 : mov ch, 0xf1 ; inc dword ptr [rcx + 2] ; ret
0x00000200007ab5fc : mov ch, 0xff ; add rsp, 0x28 ; ret
0x0000020000718f2d : mov ch, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200007c5c35 : mov ch, 0xff ; jmp 0x200007c5c43
0x0000020000506a84 : mov ch, 0xff ; mov esi, eax ; jmp 0x20000506a1d
0x00000200007ab4a6 : mov ch, 0xff ; mov qword ptr [rip - 0x4a9f0f], rdx ; ret
0x00000200007ab4ad : mov ch, 0xff ; ret
0x00000200007ae454 : mov ch, 0xff ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001a828f : mov ch, 1 ; jmp 0x200000e905c
0x000002000005c4fd : mov ch, 5 ; add byte ptr [rbp + 3], cl ; ret 0xff41
0x00000200006386bf : mov ch, 6 ; ret
0x00000200005d681b : mov ch, 8 ; movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x0000020000077b71 : mov ch, bh ; and edx, dword ptr [rcx] ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200005fc5db : mov ch, bh ; mov dh, dh ; dec dword ptr [rax - 0x75] ; ret
0x00000200004baac3 : mov ch, byte ptr [rax - 0x17fffffa] ; ret
0x00000200000288c2 : mov ch, ch ; call qword ptr [rbx]
0x00000200003d4836 : mov ch, dh ; ret 0x85ff
0x00000200004f1629 : mov ch, dl ; call 0x200004fd854
0x00000200003e360f : mov cl, 0 ; ret 0x89ff
0x00000200005c6b95 : mov cl, 0x10 ; call rax
0x00000200000f7aae : mov cl, 0x10 ; jne 0x200000f7a9d ; add rsp, 0x28 ; ret
0x00000200005c5e15 : mov cl, 0x11 ; call rax
0x000002000008eede : mov cl, 0x11 ; cmp rax, 2 ; jae 0x2000008eeef ; ret
0x000002000000e460 : mov cl, 0x11 ; jne 0x2000000e45d ; ret
0x0000020000010181 : mov cl, 0x11 ; jne 0x2000001018d ; ret
0x0000020000056c4b : mov cl, 0x11 ; jne 0x20000056c5c ; add rsp, 0x28 ; ret
0x0000020000077095 : mov cl, 0x11 ; jne 0x200000770a2 ; mov al, 1 ; ret
0x000002000007ced8 : mov cl, 0x11 ; jne 0x2000007cee1 ; ret
0x00000200000e99d5 : mov cl, 0x11 ; jne 0x200000e99e6 ; add rsp, 0x28 ; ret
0x00000200000ed051 : mov cl, 0x11 ; jne 0x200000ed061 ; mov al, 1 ; ret
0x00000200001f01c8 : mov cl, 0x11 ; jne 0x200001f01d5 ; xor eax, eax ; ret
0x000002000042b03c : mov cl, 0x11 ; jne 0x2000042b045 ; ret
0x0000020000228477 : mov cl, 0x11 ; ret
0x000002000003aabf : mov cl, 0x11 ; sete al ; add rsp, 0x38 ; ret
0x00000200005c5c65 : mov cl, 0x12 ; call rax
0x00000200005a9e5c : mov cl, 0x13 ; call r10
0x00000200005a9e07 : mov cl, 0x13 ; call rax
0x0000020000075226 : mov cl, 0x13 ; jne 0x20000075245 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005dfb37 : mov cl, 0x14 ; call rax
0x00000200005ad2b7 : mov cl, 0x15 ; call r10
0x00000200005ad33e : mov cl, 0x15 ; call rax
0x00000200005368bb : mov cl, 0x17 ; sar edi, -0x75 ; ret
0x000002000013da0e : mov cl, 0x1b ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000594f74 : mov cl, 0x1b ; call rax
0x00000200003e7217 : mov cl, 0x2d ; adc edi, dword ptr [rcx - 0x7af0000d] ; wait ; ret 0x19
0x000002000001085c : mov cl, 0x2e ; add byte ptr [rbp + rcx*4 + 0x49], al ; dec dword ptr [rax - 0x75] ; ret
0x000002000062a98b : mov cl, 0x30 ; ret 0x48ff
0x0000020000091566 : mov cl, 0x32 ; add al, ch ; ret 0x2fa
0x000002000012ae88 : mov cl, 0x35 ; ret 0x2152
0x0000020000523bcb : mov cl, 0x3c ; ret
0x00000200000f0810 : mov cl, 0x3d ; ret 0x21cb
0x00000200000bcfc2 : mov cl, 0x41 ; jne 0x200000bcfdf ; add rsp, 0x28 ; ret
0x000002000079de8f : mov cl, 0x41 ; ret
0x00000200006f64eb : mov cl, 0x44 ; ret 0x45ff
0x000002000061b22e : mov cl, 0x4a ; adc byte ptr [rbp - 0x11], dh ; mov al, r8b ; ret
0x000002000061b6c9 : mov cl, 0x4a ; adc byte ptr [rbp - 0x12], dh ; ret
0x00000200000fcd27 : mov cl, 0x4a ; sbb byte ptr [rbp - 0x15], dh ; add rsp, 0x28 ; ret
0x00000200004dce38 : mov cl, 0x4b ; call 0x2001010098c
0x00000200004e05c8 : mov cl, 0x4b ; call 0x2001010411c
0x00000200004e0e54 : mov cl, 0x4b ; call 0x200101049a8
0x0000020000027c06 : mov cl, 0x51 ; xor byte ptr [rbx + rdi - 0x40], al ; jne 0x20000027bdb ; ret
0x000002000065aaaf : mov cl, 0x52 ; sbb byte ptr [rcx - 0x77], cl ; add dword ptr [rax - 0x75], ecx ; ret 0x49f0
0x00000200006f32db : mov cl, 0x54 ; ret
0x000002000079bd1b : mov cl, 0x57 ; ret
0x00000200004366cb : mov cl, 0x6b ; ret
0x000002000018876c : mov cl, 0x7a ; out dx, al ; push rsi ; ret 0x741e
0x000002000019638c : mov cl, 0x7d ; or byte ptr [rax], al ; add dh, dh ; ret
0x000002000009da39 : mov cl, 0x81 ; clc ; add al, 0 ; add byte ptr [rax + 0x3b], cl ; ret 0xe874
0x00000200004a653a : mov cl, 0x81 ; pop rax ; add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0xdb74
0x000002000001a0fe : mov cl, 0x82 ; rol byte ptr [rsi], 0 ; add byte ptr [rbx], bh ; ret
0x000002000064d4f5 : mov cl, 0x83 ; ret 0x45ff
0x000002000001a159 : mov cl, 0x86 ; rol byte ptr [rsi], 0 ; add byte ptr [rbx], bh ; ret
0x0000020000044452 : mov cl, 0x89 ; and byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000020000445792 : mov cl, 0x89 ; enter 1, 0 ; ret
0x000002000051e98b : mov cl, 0x8b ; ret
0x000002000004311b : mov cl, 0x95 ; add al, byte ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005d10fb : mov cl, 0xa ; call r10
0x000002000001f981 : mov cl, 0xa ; jne 0x2000001f976 ; add rsp, 0x28 ; ret
0x000002000004814a : mov cl, 0xa ; jne 0x2000004815d ; mov eax, 1 ; ret
0x0000020000229c5a : mov cl, 0xa ; sete cl ; movzx eax, cl ; ret
0x000002000070b8d6 : mov cl, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200005ca9e6 : mov cl, 0xb ; call r10
0x00000200005ca92d : mov cl, 0xb ; call rax
0x000002000058f8d9 : mov cl, 0xc ; call rax
0x00000200005c67d9 : mov cl, 0xd ; call rax
0x000002000044e057 : mov cl, 0xd ; ret
0x0000020000611d27 : mov cl, 0xd ; retf ; call rax
0x000002000043410b : mov cl, 0xdc ; ret 0x48ff
0x00000200005ce99d : mov cl, 0xe ; call rax
0x000002000046b7aa : mov cl, 0xe0 ; rdpmc ; ret
0x000002000017624d : mov cl, 0xea ; call qword ptr [rax - 0x63d1a17]
0x00000200005c2aac : mov cl, 0xea ; dec dword ptr [rax + 0x3b] ; ret 0x840f
0x000002000058f0cf : mov cl, 0xf ; call rax
0x0000020000199775 : mov cl, 0xf1 ; dec dword ptr [rbp + 0xb] ; ret
0x0000020000797bbf : mov cl, 0xf6 ; ret 0x7503
0x000002000013c8c4 : mov cl, 0xf7 ; ret 0xffff
0x00000200007bce86 : mov cl, 0xf8 ; inc dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000061ed3d : mov cl, 0xff ; add rsp, 0x148 ; ret
0x000002000055dff1 : mov cl, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007039ff : mov cl, 0xff ; add rsp, 0x28 ; ret
0x00000200004f449b : mov cl, 0xff ; add rsp, 0x48 ; ret
0x000002000061c6b6 : mov cl, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000703dd4 : mov cl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x00000200006249cb : mov cl, 0xff ; add rsp, 0xa8 ; ret
0x0000020000624ec2 : mov cl, 0xff ; add rsp, 0xd8 ; ret
0x00000200005cac4d : mov cl, 0xff ; call 0x200000e6eb4
0x00000200005caff1 : mov cl, 0xff ; mov rcx, r12 ; call 0x200000e7257
0x000002000001c0fa : mov cl, 1 ; add byte ptr [rcx + 3], cl ; iretd ; jmp rcx
0x000002000013ae16 : mov cl, 1 ; add r8, r15 ; call r8
0x0000020000463823 : mov cl, 1 ; call 0x20000092125
0x00000200000478cc : mov cl, 1 ; jne 0x200000478ab ; ret
0x0000020000069950 : mov cl, 1 ; jne 0x20000069970 ; add rsp, 0x28 ; ret
0x00000200000bf700 : mov cl, 1 ; jne 0x200000bf711 ; add rsp, 0x28 ; ret
0x000002000012d8ce : mov cl, 1 ; mov al, cl ; ret
0x000002000067bdaf : mov cl, 1 ; mov dword ptr [rcx + 4], eax ; mov al, r9b ; ret
0x000002000019f6b9 : mov cl, 1 ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x000002000058450a : mov cl, 1 ; mov rax, qword ptr [rip - 0x29121b] ; call rax
0x000002000044df5f : mov cl, 1 ; mov rbx, rdx ; call 0x2000001a253
0x000002000011e8e6 : mov cl, 5 ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], 1 ; iretd ; call rbx
0x000002000053d8f7 : mov cl, 7 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000077070 : mov cl, 8 ; jne 0x20000077080 ; mov al, 1 ; ret
0x000002000007e045 : mov cl, 8 ; jne 0x2000007e02b ; mov dl, 1 ; mov al, dl ; ret
0x0000020000046cd3 : mov cl, 9 ; jne 0x20000046cd0 ; add rsp, 0x28 ; ret
0x0000020000055c70 : mov cl, 9 ; jne 0x20000055c79 ; ret
0x000002000007e8f2 : mov cl, 9 ; jne 0x2000007e903 ; add rsp, 0x28 ; ret
0x000002000043ee74 : mov cl, ah ; loopne 0x2000043ee7f ; add rsp, 0x28 ; ret
0x00000200005ee5fd : mov cl, ah ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200002014dc : mov cl, al ; mov al, r9b ; add rsp, 0x48 ; ret
0x00000200005197f5 : mov cl, bh ; call rax
0x000002000071316e : mov cl, bh ; mov rbx, rax ; call qword ptr [rip - 0x3d28f9]
0x0000020000713a4d : mov cl, bh ; mov rbx, rax ; call rsi
0x00000200001c4bf2 : mov cl, bl ; call rax
0x0000020000600b1f : mov cl, bpl ; call rsi
0x0000020000008f8a : mov cl, byte ptr [rax + 7] ; add byte ptr [rax], al ; ret
0x000002000046e228 : mov cl, byte ptr [rax - 0x75] ; ret
0x0000020000007ae6 : mov cl, byte ptr [rbx] ; add byte ptr [rbx], bh ; ret
0x00000200000b7aa1 : mov cl, byte ptr [rcx + 0x22] ; test cl, 0x10 ; je 0x200000b7ab2 ; ret
0x00000200000f2600 : mov cl, byte ptr [rdx + rbx + 0x348000f] ; ret 0xe0ff
0x00000200005309c3 : mov cl, byte ptr [rip - 0x22f071] ; call rax
0x0000020000234172 : mov cl, byte ptr [rsi + 0x33450001] ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200005309c2 : mov cl, byte ptr cs:[rip - 0x22f071] ; call rax
0x0000020000600b20 : mov cl, ch ; call rsi
0x00000200004a8992 : mov cl, ch ; ret
0x00000200006f49e6 : mov cl, cl ; adc eax, 0x1d890000 ; jg 0x200006f49fd ; ret
0x0000020000709071 : mov cl, cl ; call rax
0x00000200005197f4 : mov cl, dil ; call rax
0x0000020000713a4c : mov cl, dil ; mov rbx, rax ; call rsi
0x00000200005ee5fc : mov cl, r12b ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000709070 : mov cl, r9b ; call rax
0x000002000001570b : mov cr0, rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000090ac4 : mov cr0, rax ; add rsp, 0x28 ; ret
0x000002000003f167 : mov cr0, rax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001d304f : mov cr0, rax ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000176293 : mov cr0, rax ; jmp 0x20000112585
0x000002000003b7a3 : mov cr0, rax ; ret
0x000002000004b328 : mov cr0, rax ; xor eax, eax ; jmp 0x2000004b2f8
0x000002000002913c : mov cr0, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000914e : mov cr0, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000209efc : mov cr0, rcx ; mov al, dl ; ret
0x0000020000043422 : mov cr0, rcx ; ret
0x00000200001d8e18 : mov cr0, rdx ; jmp 0x200001d8e33
0x00000200001b1566 : mov cr3, rax ; or ebp, 0x28 ; jmp 0x200001b159c
0x000002000003fc0b : mov cr3, rax ; ret
0x00000200003db7b7 : mov cr4, rax ; add rsp, 0x28 ; ret
0x000002000003fc01 : mov cr4, rax ; mov cr4, rcx ; ret
0x00000200003cfe4b : mov cr4, rcx ; add rsp, 0x28 ; ret
0x000002000003fc04 : mov cr4, rcx ; ret
0x000002000001570a : mov cr8, rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000090ac3 : mov cr8, rax ; add rsp, 0x28 ; ret
0x000002000003f166 : mov cr8, rax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001d304e : mov cr8, rax ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000176292 : mov cr8, rax ; jmp 0x20000112586
0x000002000003b7a2 : mov cr8, rax ; ret
0x000002000004b327 : mov cr8, rax ; xor eax, eax ; jmp 0x2000004b2f9
0x000002000002913b : mov cr8, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000914d : mov cr8, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000209efb : mov cr8, rcx ; mov al, dl ; ret
0x0000020000043421 : mov cr8, rcx ; ret
0x00000200001d8e17 : mov cr8, rdx ; jmp 0x200001d8e34
0x0000020000037196 : mov cs, edi ; imul eax, dword ptr [rax], 0x48 ; add esp, 0x38 ; ret
0x000002000051b5de : mov cs, edx ; ret 0x88ff
0x000002000024226f : mov cs, esp ; add eax, 0x8b480000 ; ret 0x8b48
0x0000020000242172 : mov cs, esp ; add eax, 0x8b490000 ; ret
0x00000200004bb10e : mov cs, esp ; ret 0xe9ff
0x0000020000420ae9 : mov cs, word ptr [rbp - 0x75] ; ret
0x0000020000048cee : mov cs, word ptr [rcx + 9] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200007aa6c6 : mov cs, word ptr [rdx] ; cdq ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x00000200006b69b5 : mov cx, 0x8bff ; ret
0x000002000018963e : mov dh, 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + r9 + 0x30] ; ret
0x000002000022b316 : mov dh, 0x13 ; in al, -1 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005eee20 : mov dh, 0x14 ; add dword ptr [rbx], ebp ; ret 0x775
0x00000200005262c6 : mov dh, 0x15 ; ret
0x00000200004678a0 : mov dh, 0x1c ; adc byte ptr [rbp + 0x2b], al ; ret
0x00000200001dc40e : mov dh, 0x28 ; mov rax, qword ptr [rip + 0x116371] ; call qword ptr [rax]
0x00000200006f6a06 : mov dh, 0x2a ; ret 0x3dff
0x0000020000569346 : mov dh, 0x2f ; fcos ; add rsp, 0x28 ; ret
0x00000200001dc3a2 : mov dh, 0x38 ; mov rax, qword ptr [rip + 0x1163dd] ; call qword ptr [rax]
0x00000200001c0e76 : mov dh, 0x40 ; add cl, byte ptr [rax + 0xf] ; stosd dword ptr [rdi], eax ; ret 0xd148
0x0000020000454e17 : mov dh, 0x41 ; adc cl, dl ; call 0x1ffc3472eab
0x000002000024e9ea : mov dh, 0x41 ; add al, byte ptr [rcx] ; add bpl, cl ; ret 0xfffe
0x000002000069901d : mov dh, 0x41 ; add dword ptr [rbx], ebp ; ret 0x8b44
0x0000020000064786 : mov dh, 0x41 ; add eax, dword ptr [rcx + 0x32] ; ret 0x8844
0x00000200005c0948 : mov dh, 0x41 ; add eax, ecx ; call 0x1ff841e3c5d
0x000002000042d858 : mov dh, 0x41 ; add qword ptr [r10 + 0x18], r8 ; ret
0x00000200007a3c28 : mov dh, 0x41 ; and al, cl ; call 0x200753c773e
0x000002000001f9c1 : mov dh, 0x41 ; sbb al, byte ptr [rax + rax*8 - 0x3fcdfc88] ; ret
0x00000200000a1646 : mov dh, 0x41 ; sbb esp, dword ptr [rbx + rdi*8] ; mov byte ptr [rcx + 0x1b], al ; ret
0x00000200005ae3c5 : mov dh, 0x42 ; adc cl, dl ; call 0x1ffc35cc459
0x00000200006a0a6f : mov dh, 0x42 ; add dword ptr [rcx + 3], ecx ; ret 0x894d
0x0000020000126225 : mov dh, 0x42 ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000002000049104e : mov dh, 0x42 ; sbb ch, byte ptr [rax + 0x8850f20] ; ret
0x00000200000942c2 : mov dh, 0x43 ; add al, byte ptr [rcx - 1] ; ret 0x3b44
0x0000020000002e53 : mov dh, 0x43 ; add ecx, dword ptr [rbp - 0x75] ; ret 0x348
0x000002000006e1b6 : mov dh, 0x43 ; and eax, ecx ; call 0x1ffc22a22cc
0x00000200000bb8cc : mov dh, 0x43 ; and esi, dword ptr [rdx] ; ret 0x724
0x000002000020bf04 : mov dh, 0x44 ; ror dword ptr [rcx], -1 ; ret 0xff41
0x0000020000143297 : mov dh, 0x45 ; add byte ptr [rbx], bh ; ret
0x000002000016042c : mov dh, 0x45 ; ret
0x0000020000160421 : mov dh, 0x45 ; ret 0x6b48
0x00000200000424e1 : mov dh, 0x46 ; add eax, dword ptr [rbx - 0x74b7f020] ; ret
0x000002000019734c : mov dh, 0x46 ; and esi, dword ptr [rdx] ; ret 0x724
0x0000020000503378 : mov dh, 0x47 ; add dword ptr [rbx], ebp ; ret
0x0000020000009ded : mov dh, 0x47 ; sbb byte ptr [rdx], bh ; ret 0x3674
0x00000200004cf0f1 : mov dh, 0x47 ; sub byte ptr [rbx], bh ; ret
0x000002000003e093 : mov dh, 0x47 ; sub eax, 0x2ba ; add byte ptr [rbx], al ; ret 0xc23b
0x000002000009add1 : mov dh, 0x48 ; adc byte ptr [rbx - 0x41f0bb3f], cl ; ret
0x0000020000442d5a : mov dh, 0x48 ; add cl, byte ptr [rax + 0x6b] ; ret 0x4825
0x000002000022545f : mov dh, 0x48 ; and byte ptr [rdx], bh ; ret 0x675
0x0000020000179925 : mov dh, 0x49 ; cmp eax, dword ptr [rcx - 0x75] ; ret
0x00000200006f5fc6 : mov dh, 0x49 ; ret 0xe9ff
0x00000200000555af : mov dh, 0x4c ; ret
0x000002000011974b : mov dh, 0x4e ; add cl, byte ptr [rax - 0x7cb7fdb6] ; ret 0x4903
0x000002000046b4da : mov dh, 0x4e ; ret 0xfff
0x00000200001e99fa : mov dh, 0x50 ; add cl, byte ptr [rbp - 0x75] ; fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x00000200000a53b6 : mov dh, 0x50 ; and dh, dh ; ret 0x7510
0x00000200000e85d4 : mov dh, 0x53 ; adc edi, edi ; ret 0x5388
0x0000020000093ea6 : mov dh, 0x53 ; add esi, esi ; ret 0x740f
0x00000200000e30cf : mov dh, 0x53 ; and esi, esi ; ret 0xf08
0x00000200000def5f : mov dh, 0x53 ; and esi, esi ; ret 0xf10
0x000002000017a26f : mov dh, 0x54 ; push 0x84f8b48 ; call r8
0x00000200000ab924 : mov dh, 0x55 ; and eax, dword ptr [rcx - 0x75] ; ret 0xe8c1
0x0000020000060419 : mov dh, 0x56 ; adc edi, edi ; ret 0x5688
0x0000020000095c0b : mov dh, 0x56 ; add esi, esi ; ret 0xf0f
0x00000200004af7d6 : mov dh, 0x56 ; ret
0x00000200000e5e47 : mov dh, 0x57 ; adc edi, edi ; ret 0x5788
0x000002000048c799 : mov dh, 0x57 ; add esi, esi ; ret 0xf08
0x00000200004e7bd2 : mov dh, 0x57 ; and dword ptr [rbx + rcx*4 + 0x47], eax ; sbb al, 0x8b ; ret 0xc148
0x00000200000d9219 : mov dh, 0x57 ; and eax, dword ptr [rcx - 0x75] ; ret 0xe8c1
0x000002000009ebec : mov dh, 0x59 ; and eax, dword ptr [rcx - 0x75] ; ret
0x00000200004d11eb : mov dh, 0x5d ; add esi, esi ; ret
0x0000020000139f4c : mov dh, 0x80 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x000002000007c7c8 : mov dh, 0x80 ; ret
0x0000020000478185 : mov dh, 0x80 ; ret 6
0x0000020000074eca : mov dh, 0x80 ; xor al, byte ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000200005bbeca : mov dh, 0x81 ; ret
0x00000200004cd20a : mov dh, 0x81 ; ret 6
0x00000200000ec78e : mov dh, 0x82 ; ret
0x000002000002496c : mov dh, 0x83 ; ret
0x0000020000125e26 : mov dh, 0x84 ; and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8b48
0x000002000020fbf7 : mov dh, 0x84 ; sbb byte ptr [rax], dl ; mov dl, 0x26 ; add byte ptr [rcx + 3], al ; ret 0x3eb
0x0000020000067ade : mov dh, 0x85 ; ret
0x0000020000477d88 : mov dh, 0x85 ; ret 6
0x00000200000365a3 : mov dh, 0x85 ; sal byte ptr [rbx + rdx - 0x75], cl ; ret 0x8948
0x0000020000062d64 : mov dh, 0x86 ; ret
0x0000020000474e5d : mov dh, 0x86 ; ret 6
0x00000200000ece6e : mov dh, 0x87 ; ret
0x00000200005ada8d : mov dh, 0x87 ; ret 6
0x000002000006824a : mov dh, 0x88 ; ret
0x000002000042559c : mov dh, 0x88 ; ret 6
0x00000200000ea7b2 : mov dh, 0x89 ; ret
0x000002000007da97 : mov dh, 0x8a ; ret
0x0000020000062ac0 : mov dh, 0x8b ; ret
0x0000020000065fc6 : mov dh, 0x8b ; ret 0
0x00000200000ecea6 : mov dh, 0x8d ; ret
0x000002000057e936 : mov dh, 0x8d ; ret 0
0x00000200000ed94d : mov dh, 0x8e ; ret
0x0000020000198ed9 : mov dh, 0x8f ; int1 ; push rsi ; ret 0x741e
0x000002000009f8d4 : mov dh, 0x8f ; mov edi, 0xf6000000 ; ret 0xf07
0x0000020000067623 : mov dh, 0x91 ; ret
0x00000200004255a7 : mov dh, 0x91 ; ret 6
0x0000020000062eb6 : mov dh, 0x93 ; ret
0x00000200001216b6 : mov dh, 0x95 ; add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200004c5876 : mov dh, 0x96 ; ret 0xbbff
0x0000020000485b11 : mov dh, 0x9c ; and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rdx], dh ; ret
0x000002000053e696 : mov dh, 0x9d ; mov dl, 0xff ; add rsp, 0x38 ; ret
0x0000020000613046 : mov dh, 0x9f ; ret
0x00000200004e9db7 : mov dh, 0xa0 ; add dword ptr [rax], eax ; add cl, ch ; ret
0x00000200000eae60 : mov dh, 0xa3 ; ret
0x00000200000e6fa8 : mov dh, 0xab ; add dword ptr [rdx], 0 ; add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x00000200004c74a6 : mov dh, 0xb ; ret 0xe8ff
0x00000200000e5ce4 : mov dh, 0xb3 ; ret
0x0000020000067832 : mov dh, 0xb7 ; ret
0x00000200004204a6 : mov dh, 0xba ; ret
0x00000200004251c8 : mov dh, 0xc ; or byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x000002000041df74 : mov dh, 0xc ; or edi, edi ; ret 0xc103
0x00000200001b6c5f : mov dh, 0xc0 ; add rsp, 0x28 ; ret
0x00000200000bb970 : mov dh, 0xc0 ; and eax, 7 ; ret
0x00000200005ef741 : mov dh, 0xc0 ; and eax, r8d ; or eax, 5 ; ret
0x000002000011ef5f : mov dh, 0xc0 ; mov cr8, rax ; ret
0x00000200004142a1 : mov dh, 0xc0 ; ret
0x0000020000007ecc : mov dh, 0xc0 ; shr eax, 3 ; and eax, 4 ; ret
0x0000020000116119 : mov dh, 0xc1 ; and eax, 1 ; ret
0x000002000003b7a0 : mov dh, 0xc1 ; mov cr8, rax ; ret
0x00000200000ea820 : mov dh, 0xc1 ; ret
0x000002000070f7a7 : mov dh, 0xc2 ; jmp 0x2000070f7b8
0x000002000070f874 : mov dh, 0xc2 ; jmp 0x2000070f885
0x000002000070f928 : mov dh, 0xc2 ; jmp 0x2000070f939
0x000002000070f9cb : mov dh, 0xc2 ; jmp 0x2000070f9dc
0x00000200001f01f8 : mov dh, 0xc2 ; mov cr8, rax ; ret
0x000002000004b325 : mov dh, 0xc2 ; mov cr8, rax ; xor eax, eax ; jmp 0x2000004b2fb
0x00000200000ea7fe : mov dh, 0xc2 ; ret
0x0000020000070bef : mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000243ef3 : mov dh, 0xc4 ; add eax, 0x8b480000 ; ret
0x000002000024411e : mov dh, 0xc4 ; add eax, 0x8b490000 ; ret 0x894c
0x00000200000d6de0 : mov dh, 0xc6 ; add rsp, 0x50 ; pop r14 ; ret
0x0000020000176290 : mov dh, 0xc6 ; mov cr8, rax ; jmp 0x20000112588
0x00000200004cfaeb : mov dh, 0xc6 ; mov rcx, qword ptr [rdi + 0x2e8] ; call rax
0x000002000017734b : mov dh, 0xc6 ; push qword ptr [rbx] ; leave ; call qword ptr [rax]
0x00000200000c6600 : mov dh, 0xc7 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200005ce327 : mov dh, 0xc8 ; call r10
0x0000020000209ef9 : mov dh, 0xc8 ; mov cr8, rcx ; mov al, dl ; ret
0x00000200000dd9a5 : mov dh, 0xc9 ; mov cr8, rcx ; ret
0x000002000002c802 : mov dh, 0xca ; cmovne eax, ecx ; ret
0x00000200003fff0e : mov dh, 0xcb ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x00000200000e1ea9 : mov dh, 0xd ; cmp cl, byte ptr [rip - 0x74b7ffdc] ; ret
0x00000200007c7f00 : mov dh, 0xd ; ret 0xb5a2
0x00000200003df7be : mov dh, 0xd1 ; ret 0x33ff
0x00000200006226e2 : mov dh, 0xd2 ; cmovb edx, ecx ; mov al, dl ; ret
0x00000200003cd2c2 : mov dh, 0xd2 ; cmove r10d, r11d ; mov al, r10b ; ret
0x00000200001ba91b : mov dh, 0xd2 ; cmovne edx, ecx ; mov al, dl ; ret
0x000002000019fe54 : mov dh, 0xd5 ; call rax
0x000002000051b5d8 : mov dh, 0xdb ; cmovns ebx, edx ; call 0x20000148078
0x0000020000247f6c : mov dh, 0xe0 ; add eax, 0x8b490000 ; ret
0x00000200004dfe56 : mov dh, 0xeb ; str word ptr [rax - 0x75] ; ret
0x0000020000422c06 : mov dh, 0xf1 ; ret
0x00000200001020e6 : mov dh, 0xf3 ; and dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200007b85c9 : mov dh, 0xff ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200007bb709 : mov dh, 0xff ; add rsp, 0x20 ; pop rbp ; ret
0x00000200007b426f : mov dh, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007b973d : mov dh, 0xff ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007bb347 : mov dh, 0xff ; add rsp, 0x28 ; ret
0x000002000079538a : mov dh, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006f6df1 : mov dh, 0xff ; add rsp, 0x40 ; pop rbx ; ret
0x00000200007bcdd2 : mov dh, 0xff ; add rsp, 0x68 ; ret
0x00000200007d5047 : mov dh, 0xff ; call qword ptr [rax]
0x0000020000718edd : mov dh, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200007bcaf5 : mov dh, 0xff ; mov dword ptr [rip - 0x49f7c5], edx ; ret
0x000002000057ce0d : mov dh, 0xff ; nop ; add rsp, 0x48 ; pop rbp ; pop rbx ; ret
0x00000200007b7dbf : mov dh, 0xff ; ret
0x00000200006e09cb : mov dh, 0xff ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007bc383 : mov dh, 0xff ; xor eax, eax ; add rsp, 0x48 ; ret
0x000002000017734c : mov dh, 0xff ; xor ecx, ecx ; call qword ptr [rax]
0x000002000005ccc1 : mov dh, 1 ; cmp eax, 0x51 ; jge 0x2000005ccd4 ; xor eax, eax ; ret
0x00000200005e29c9 : mov dh, 1 ; jmp 0x200004eec38
0x0000020000401162 : mov dh, 1 ; lea r8d, dword ptr [r9 - 4] ; call rsi
0x0000020000058f52 : mov dh, 1 ; mov dl, al ; mov rcx, r13 ; call 0x20000075199
0x00000200001b8609 : mov dh, 1 ; shr eax, 1 ; and eax, 1 ; ret
0x000002000006ca40 : mov dh, 2 ; cmp eax, edx ; jne 0x2000006ca5f ; mov rax, r10 ; ret
0x000002000006ca40 : mov dh, 2 ; cmp eax, edx ; jne 0x2000006ca60 ; mov rax, r10 ; ret
0x000002000001be1d : mov dh, 4 ; adc byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x000002000002f842 : mov dh, 4 ; adc cl, byte ptr [rcx - 1] ; ret 0x103
0x00000200000bc0f7 : mov dh, 4 ; ret 0x3ba
0x000002000019452d : mov dh, 4 ; ret 0xf024
0x00000200001706b4 : mov dh, 4 ; sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x000002000015f198 : mov dh, 5 ; ret 0x24a2
0x0000020000432617 : mov dh, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000069c087 : mov dh, al ; call 0x20000148374
0x00000200001298e3 : mov dh, bh ; sub al, 8 ; add dh, dh ; ret
0x00000200006444e2 : mov dh, byte ptr [rbp - 0x51] ; inc dword ptr [rbp - 0xbc8b40] ; ret
0x00000200004a0524 : mov dh, ch ; call qword ptr [rdx]
0x00000200005fc5dd : mov dh, dh ; dec dword ptr [rax - 0x75] ; ret
0x00000200000307c6 : mov di, 3 ; add rsp, 0x28 ; ret
0x0000020000590201 : mov di, fs ; dec dword ptr [rax - 0x7d] ; ret 0x4858
0x00000200000f09f0 : mov dil, al ; jmp 0x200000f09d0
0x000002000013eb5b : mov dl, 0x11 ; add byte ptr [rax + 0xf], cl ; fmul dword ptr [r8 - 0x75] ; ret
0x000002000002607d : mov dl, 0x12 ; add bl, ch ; ret
0x0000020000154a8a : mov dl, 0x1d ; add byte ptr [rax], al ; nop ; ret
0x000002000020fbfb : mov dl, 0x26 ; add byte ptr [rcx + 3], al ; ret 0x3eb
0x000002000009f481 : mov dl, 0x4d ; str word ptr [rcx - 0x75] ; ret 0x48f0
0x00000200004573ca : mov dl, 0x5c ; ret 0x48ff
0x000002000070641a : mov dl, 0x6c ; add al, byte ptr [rax] ; mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x00000200004afbfa : mov dl, 0x72 ; ret
0x0000020000630dba : mov dl, 0x9e ; mov al, 0xff ; add rsp, 0x68 ; ret
0x000002000014b68a : mov dl, 0xa9 ; add byte ptr [rax], al ; ret
0x00000200006ee128 : mov dl, 0xa9 ; test edx, edx ; cmp ebp, dword ptr [rsi] ; ret 0x39
0x000002000014b58a : mov dl, 0xaa ; add byte ptr [rax], al ; ret
0x000002000014b48a : mov dl, 0xab ; add byte ptr [rax], al ; ret
0x000002000014b38a : mov dl, 0xac ; add byte ptr [rax], al ; ret
0x000002000014b28a : mov dl, 0xad ; add byte ptr [rax], al ; ret
0x000002000061224a : mov dl, 0xad ; ret
0x000002000014b18a : mov dl, 0xae ; add byte ptr [rax], al ; ret
0x000002000014b08a : mov dl, 0xaf ; add byte ptr [rax], al ; ret
0x000002000014af8a : mov dl, 0xb0 ; add byte ptr [rax], al ; ret
0x0000020000709982 : mov dl, 0xb0 ; xchg eax, edx ; dec dword ptr [rax - 0x75] ; ret
0x000002000014ae8a : mov dl, 0xb1 ; add byte ptr [rax], al ; ret
0x000002000014ad8a : mov dl, 0xb2 ; add byte ptr [rax], al ; ret
0x000002000014ac8a : mov dl, 0xb3 ; add byte ptr [rax], al ; ret
0x000002000014ab8a : mov dl, 0xb4 ; add byte ptr [rax], al ; ret
0x000002000014aa8a : mov dl, 0xb5 ; add byte ptr [rax], al ; ret
0x000002000014a98a : mov dl, 0xb6 ; add byte ptr [rax], al ; ret
0x000002000014a88a : mov dl, 0xb7 ; add byte ptr [rax], al ; ret
0x000002000014a78a : mov dl, 0xb8 ; add byte ptr [rax], al ; ret
0x000002000014a68a : mov dl, 0xb9 ; add byte ptr [rax], al ; ret
0x000002000014a58a : mov dl, 0xba ; add byte ptr [rax], al ; ret
0x000002000014a48a : mov dl, 0xbb ; add byte ptr [rax], al ; ret
0x000002000014a38a : mov dl, 0xbc ; add byte ptr [rax], al ; ret
0x000002000014a28a : mov dl, 0xbd ; add byte ptr [rax], al ; ret
0x000002000014a18a : mov dl, 0xbe ; add byte ptr [rax], al ; ret
0x000002000014a08a : mov dl, 0xbf ; add byte ptr [rax], al ; ret
0x0000020000149f8a : mov dl, 0xc0 ; add byte ptr [rax], al ; ret
0x0000020000149e8a : mov dl, 0xc1 ; add byte ptr [rax], al ; ret
0x0000020000149d8a : mov dl, 0xc2 ; add byte ptr [rax], al ; ret
0x0000020000149c8a : mov dl, 0xc3 ; add byte ptr [rax], al ; ret
0x0000020000149b8a : mov dl, 0xc4 ; add byte ptr [rax], al ; ret
0x0000020000149a8a : mov dl, 0xc5 ; add byte ptr [rax], al ; ret
0x000002000014998a : mov dl, 0xc6 ; add byte ptr [rax], al ; ret
0x000002000014988a : mov dl, 0xc7 ; add byte ptr [rax], al ; ret
0x000002000014978a : mov dl, 0xc8 ; add byte ptr [rax], al ; ret
0x000002000014968a : mov dl, 0xc9 ; add byte ptr [rax], al ; ret
0x000002000014958a : mov dl, 0xca ; add byte ptr [rax], al ; ret
0x000002000014948a : mov dl, 0xcb ; add byte ptr [rax], al ; ret
0x000002000014938a : mov dl, 0xcc ; add byte ptr [rax], al ; ret
0x000002000014928a : mov dl, 0xcd ; add byte ptr [rax], al ; ret
0x000002000014918a : mov dl, 0xce ; add byte ptr [rax], al ; ret
0x000002000014908a : mov dl, 0xcf ; add byte ptr [rax], al ; ret
0x00000200004c6fea : mov dl, 0xd ; ret 0x48ff
0x0000020000148f8a : mov dl, 0xd0 ; add byte ptr [rax], al ; ret
0x0000020000148e8a : mov dl, 0xd1 ; add byte ptr [rax], al ; ret
0x0000020000148d8a : mov dl, 0xd2 ; add byte ptr [rax], al ; ret
0x0000020000148c8a : mov dl, 0xd3 ; add byte ptr [rax], al ; ret
0x0000020000148b8a : mov dl, 0xd4 ; add byte ptr [rax], al ; ret
0x0000020000148a8a : mov dl, 0xd5 ; add byte ptr [rax], al ; ret
0x000002000014898a : mov dl, 0xd6 ; add byte ptr [rax], al ; ret
0x000002000014888a : mov dl, 0xd7 ; add byte ptr [rax], al ; ret
0x000002000014878a : mov dl, 0xd8 ; add byte ptr [rax], al ; ret
0x000002000014868a : mov dl, 0xd9 ; add byte ptr [rax], al ; ret
0x000002000014858a : mov dl, 0xda ; add byte ptr [rax], al ; ret
0x000002000014848a : mov dl, 0xdb ; add byte ptr [rax], al ; ret
0x000002000014838a : mov dl, 0xdc ; add byte ptr [rax], al ; ret
0x00000200005374f3 : mov dl, 0xdc ; call qword ptr [rax]
0x000002000014828a : mov dl, 0xdd ; add byte ptr [rax], al ; ret
0x000002000014818a : mov dl, 0xde ; add byte ptr [rax], al ; ret
0x000002000014808a : mov dl, 0xdf ; add byte ptr [rax], al ; ret
0x0000020000147f8a : mov dl, 0xe0 ; add byte ptr [rax], al ; ret
0x00000200001e3caa : mov dl, 0xe5 ; jmp 0x200001e3cb3
0x00000200004e2028 : mov dl, 0xe9 ; ret 0xfd0
0x0000020000435aba : mov dl, 0xea ; add al, 0 ; add rsp, 0x38 ; ret
0x000002000046f9cf : mov dl, 0xeb ; ret 0xcccc
0x00000200004315fd : mov dl, 0xec ; dec dword ptr [rbx + 0x7f9e8d8] ; ret
0x00000200003d480e : mov dl, 0xee ; ret 0x85ff
0x00000200001182cb : mov dl, 0xf6 ; ret 0x7410
0x00000200000f5aae : mov dl, 0xfa ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x000002000053e674 : mov dl, 0xff ; add rsp, 0x38 ; ret
0x00000200006172b0 : mov dl, 0xff ; add rsp, 0x68 ; ret
0x0000020000610284 : mov dl, 0xff ; add rsp, 0x70 ; pop rbx ; ret
0x000002000060b54c : mov dl, 0xff ; add rsp, 0x98 ; ret
0x00000200004d34c7 : mov dl, 0xff ; jmp 0x200004d32c0
0x00000200006279f6 : mov dl, 0xff ; mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005c1331 : mov dl, 0xff ; nop ; jmp 0x200004653de
0x00000200007af526 : mov dl, 1 ; add byte ptr [rsi - 1], ah ; ret
0x000002000042e58b : mov dl, 1 ; call 0x200000564a5
0x000002000042e58a : mov dl, 1 ; call 0x200000564a6
0x00000200004bd7a7 : mov dl, 1 ; call 0x200000e5345
0x000002000040f105 : mov dl, 1 ; call 0x2000040b3d0
0x00000200005247e1 : mov dl, 1 ; call 0x20000430a08
0x000002000042036a : mov dl, 1 ; jmp 0x20000420333
0x000002000012d9ce : mov dl, 1 ; mov al, dl ; add rsp, 0x28 ; ret
0x000002000007e049 : mov dl, 1 ; mov al, dl ; ret
0x0000020000044791 : mov dl, 1 ; mov rax, qword ptr [rip + 0x364cf6] ; call rax
0x0000020000044734 : mov dl, 1 ; mov rax, qword ptr [rip + 0x364d53] ; call rax
0x00000200000379ce : mov dl, 1 ; mov rax, qword ptr [rip + 0x371ab9] ; call rax
0x0000020000037953 : mov dl, 1 ; mov rax, qword ptr [rip + 0x371b34] ; call rax
0x0000020000483341 : mov dl, 1 ; mov rcx, r15 ; call r12
0x000002000048303e : mov dl, 1 ; mov rcx, r15 ; call rsi
0x000002000048e8bb : mov dl, 1 ; mov rcx, rbx ; call r15
0x00000200004b6d5c : mov dl, 1 ; mov rcx, rsi ; call rax
0x00000200000862b5 : mov dl, 1 ; test r8, r8 ; jne 0x200000862c9 ; mov al, r10b ; ret
0x00000200001a233f : mov dl, 2 ; call 0x2000004e58c
0x00000200001e41f1 : mov dl, 2 ; call 0x200000a0484
0x00000200006bd3d1 : mov dl, ah ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x00000200000f8ef7 : mov dl, al ; call 0x20000075194
0x00000200001e41f4 : mov dl, al ; jmp 0x200001e41f8
0x000002000018e949 : mov dl, al ; jne 0x2000018e8f6 ; jmp 0x2000008ab79
0x000002000007db86 : mov dl, al ; mov al, dl ; ret
0x00000200003f75aa : mov dl, al ; mov al, r10b ; add rsp, 0x58 ; ret
0x0000020000058f54 : mov dl, al ; mov rcx, r13 ; call 0x20000075197
0x0000020000094971 : mov dl, al ; or dword ptr [rax], eax ; add rcx, rdx ; jmp rcx
0x000002000042ddc4 : mov dl, bh ; call 0x200000564a5
0x000002000002d356 : mov dl, bh ; ret
0x00000200000599fc : mov dl, bl ; mov rax, qword ptr [rip + 0x34fa8b] ; call rax
0x000002000005994e : mov dl, bl ; mov rax, qword ptr [rip + 0x34fb39] ; call rax
0x000002000005989d : mov dl, bl ; mov rax, qword ptr [rip + 0x34fbea] ; call rax
0x00000200000597ee : mov dl, bl ; mov rax, qword ptr [rip + 0x34fc99] ; call rax
0x00000200000596f6 : mov dl, bl ; mov rax, qword ptr [rip + 0x34fd91] ; call rax
0x00000200000596a8 : mov dl, bl ; mov rax, qword ptr [rip + 0x34fddf] ; call rax
0x0000020000618b72 : mov dl, bl ; ret
0x00000200003c8bb5 : mov dl, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200004beb21 : mov dl, byte ptr [rcx] ; add byte ptr [rcx - 0xa], al ; ret
0x000002000005a93c : mov dl, ch ; mov rax, qword ptr [rip + 0x34eb4b] ; call rax
0x000002000018b409 : mov dl, cl ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb byte ptr [rax], al ; add rdx, r8 ; jmp rdx
0x00000200004b9094 : mov dl, dh ; call 0x200000e4e95
0x00000200004b934a : mov dl, dh ; call 0x200000e5345
0x00000200005c215a : mov dl, dh ; call 0x200004ede1d
0x00000200000c2e6e : mov dl, dh ; mov rcx, qword ptr [rdi + 0xd8] ; call qword ptr [rax]
0x00000200004b9093 : mov dl, r14b ; call 0x200000e4e96
0x00000200004b9349 : mov dl, r14b ; call 0x200000e5346
0x000002000042ddc3 : mov dl, r15b ; call 0x200000564a6
0x000002000055c6f4 : mov dr0, eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret
0x00000200001d691a : mov dr0, edx ; adc dword ptr [rax], eax ; ret
0x00000200006b836e : mov dr0, esi ; ret
0x0000020000629e6e : mov dr0, word ptr [rcx] ; ret 0x8bff
0x000002000061996e : mov dr0, word ptr [rsi] ; ret
0x00000200007cb893 : mov dr1, esi ; dec dword ptr [rax - 9] ; ret
0x0000020000226521 : mov dr1, word ptr [rax] ; add al, 0 ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200003fc8de : mov ds, edx ; sar bh, 0x8a ; ret
0x00000200005bb9a5 : mov ds, word ptr [rax - 0x18000000] ; int1 ; ret
0x00000200000c4ea4 : mov ds, word ptr [rax] ; add dword ptr [rax], eax ; add al, ch ; ret 0xf992
0x00000200003ede12 : mov ds, word ptr [rbx] ; add byte ptr [rax], al ; jmp 0x200003edddf
0x0000020000684070 : mov ds, word ptr [rdi + 0xd8d48ff] ; ret 0xffc7
0x000002000001e4f2 : mov dword ptr [r10 + 0x10], r9d ; ret
0x00000200000c8e7a : mov dword ptr [r10 + 2], eax ; ret
0x00000200004147fd : mov dword ptr [r10 + 2], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000445737 : mov dword ptr [r10 + 2], ecx ; xor eax, eax ; ret
0x00000200001fd585 : mov dword ptr [r10 + 4], r9d ; ret
0x0000020000115504 : mov dword ptr [r10], 0 ; ret
0x000002000020f88c : mov dword ptr [r10], 0xffffffff ; ret
0x000002000004419b : mov dword ptr [r10], eax ; call r10
0x000002000020da57 : mov dword ptr [r10], eax ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200000572dc : mov dword ptr [r10], eax ; xor eax, eax ; mov qword ptr [r8 + 8], rcx ; ret
0x0000020000057abc : mov dword ptr [r10], eax ; xor eax, eax ; ret
0x000002000078f165 : mov dword ptr [r10], ecx ; mov rcx, r10 ; jmp rcx
0x0000020000026427 : mov dword ptr [r10], ecx ; ret
0x000002000068bf26 : mov dword ptr [r10], r9d ; mov al, 1 ; ret
0x0000020000093933 : mov dword ptr [r11], eax ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200004d0df2 : mov dword ptr [r12 + 4], eax ; call 0x200000faca8
0x000002000040b2f4 : mov dword ptr [r14 + 0x10], eax ; call 0x20000157546
0x00000200005dd631 : mov dword ptr [r14 + 0x3c], eax ; jmp 0x200004d991a
0x0000020000112a8d : mov dword ptr [r14], eax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004f12cd : mov dword ptr [r14], r9d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000044699e : mov dword ptr [r15 + 0xc], eax ; jmp 0x200004469b3
0x000002000044136a : mov dword ptr [r15], eax ; mov edi, 0xc0000023 ; jmp 0x2000044133f
0x0000020000085d59 : mov dword ptr [r8 + 0x10], eax ; mov al, 1 ; ret
0x00000200001c11ec : mov dword ptr [r8 + 0x28], eax ; ret
0x0000020000121dc2 : mov dword ptr [r8 + 0x30], ebx ; mov rcx, r10 ; call r9
0x000002000022d996 : mov dword ptr [r8 + 0x30], ecx ; xor eax, eax ; mov dword ptr [r9], ecx ; ret
0x00000200001b3f1e : mov dword ptr [r8 + 0x5c], eax ; ret
0x0000020000713d97 : mov dword ptr [r8 + 0xa], ecx ; mov rax, r8 ; ret
0x00000200001e1e5a : mov dword ptr [r8 + 0xa], ecx ; ret
0x0000020000519780 : mov dword ptr [r8 + 0xc], eax ; ret
0x0000020000456395 : mov dword ptr [r8 + 0xc], eax ; xor eax, eax ; ret
0x0000020000117c62 : mov dword ptr [r8 + 0xc], ecx ; ret
0x00000200001c2132 : mov dword ptr [r8 + 0xc], edx ; pop rbx ; ret
0x00000200005b327d : mov dword ptr [r8 + 0xc], r11d ; ret
0x00000200001cb0f7 : mov dword ptr [r8 + 2], ecx ; mov al, 1 ; ret
0x00000200004e9fef : mov dword ptr [r8 + 2], r9d ; xor eax, eax ; ret
0x000002000044fe85 : mov dword ptr [r8 + 4], edx ; ret
0x0000020000548855 : mov dword ptr [r8 + 4], edx ; xor eax, eax ; ret
0x0000020000039e4f : mov dword ptr [r8 + 4], r10d ; ret
0x00000200000881d8 : mov dword ptr [r8 + 8], eax ; jmp 0x200000881a5
0x000002000045690b : mov dword ptr [r8 + 8], eax ; xor eax, eax ; ret
0x00000200001c212e : mov dword ptr [r8 + 8], ecx ; mov dword ptr [r8 + 0xc], edx ; pop rbx ; ret
0x000002000044fe80 : mov dword ptr [r8 + 8], edx ; mov word ptr [r8 + 4], dx ; ret
0x00000200001b48bd : mov dword ptr [r8 + 8], edx ; test edx, edx ; jne 0x200001b48b7 ; ret
0x000002000070ff27 : mov dword ptr [r8 + rcx*4], 1 ; ret
0x000002000070ff91 : mov dword ptr [r8 + rcx*4], edx ; ret
0x00000200003c6dab : mov dword ptr [r8], 0x1000 ; xor eax, eax ; ret
0x00000200000f7387 : mov dword ptr [r8], 0x1429 ; xor eax, eax ; ret
0x00000200004e9197 : mov dword ptr [r8], eax ; add rsp, 0x28 ; ret
0x000002000053d600 : mov dword ptr [r8], eax ; mov al, 1 ; ret
0x00000200001aaf6a : mov dword ptr [r8], eax ; mov eax, 0xc0000095 ; ret
0x00000200006b0db9 : mov dword ptr [r8], eax ; mov eax, r9d ; ret
0x000002000002cb73 : mov dword ptr [r8], eax ; ret
0x0000020000009a23 : mov dword ptr [r8], eax ; xor eax, eax ; ret
0x00000200003d0a96 : mov dword ptr [r8], ecx ; add eax, ecx ; ret
0x0000020000102298 : mov dword ptr [r8], ecx ; mov eax, edx ; ret
0x000002000070a07e : mov dword ptr [r8], ecx ; ret
0x0000020000218f42 : mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200006bbed3 : mov dword ptr [r8], edx ; jmp 0x200006bbf0c
0x0000020000231782 : mov dword ptr [r8], edx ; ret
0x0000020000128c2c : mov dword ptr [r8], edx ; xor eax, eax ; ret
0x000002000040937c : mov dword ptr [r8], esi ; xor al, al ; pop r14 ; pop rsi ; ret
0x00000200000f5cc6 : mov dword ptr [r8], r9d ; jmp 0x200000f5c92
0x0000020000525e42 : mov dword ptr [r8], r9d ; mov eax, 1 ; ret
0x0000020000101268 : mov dword ptr [r8], r9d ; ret
0x0000020000093b04 : mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x0000020000649ddd : mov dword ptr [r9 + 0x10], ecx ; add rsp, 0x38 ; ret
0x00000200000f7e86 : mov dword ptr [r9 + 0x18], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000f7eaf : mov dword ptr [r9 + 0x18], eax ; ret
0x000002000000fcfe : mov dword ptr [r9 + 0x18], r8d ; mov dword ptr [r9 + 0x1c], ecx ; ret
0x000002000000fd02 : mov dword ptr [r9 + 0x1c], ecx ; ret
0x0000020000151b46 : mov dword ptr [r9 + 0x48], r10d ; mov eax, 3 ; ret
0x000002000016df0c : mov dword ptr [r9 + 0x68], ecx ; ret
0x00000200003e7d14 : mov dword ptr [r9 + 0x938], eax ; ret
0x00000200003e7d0b : mov dword ptr [r9 + 0x938], r8d ; ret
0x00000200003ee14a : mov dword ptr [r9 + 4], 0x10 ; ret
0x00000200003ee13e : mov dword ptr [r9 + 4], eax ; ret
0x000002000007f5b3 : mov dword ptr [r9 + 4], r10d ; mov dword ptr [r9], eax ; ret
0x000002000067113c : mov dword ptr [r9 + 8], edx ; add rsp, 0x28 ; ret
0x000002000067117a : mov dword ptr [r9 + 8], r8d ; add rsp, 0x28 ; ret
0x0000020000627ad1 : mov dword ptr [r9], 0x28 ; mov eax, ecx ; ret
0x0000020000111c7e : mov dword ptr [r9], eax ; add rsp, 0x38 ; ret
0x0000020000534930 : mov dword ptr [r9], eax ; mov eax, 1 ; ret
0x000002000007f5b7 : mov dword ptr [r9], eax ; ret
0x0000020000697158 : mov dword ptr [r9], ecx ; mov eax, edx ; ret
0x00000200006971e0 : mov dword ptr [r9], ecx ; mov eax, r11d ; ret
0x000002000022d99c : mov dword ptr [r9], ecx ; ret
0x0000020000403415 : mov dword ptr [r9], edx ; mov al, 1 ; ret
0x0000020000231418 : mov dword ptr [r9], r11d ; ret
0x0000020000565ee7 : mov dword ptr [r9], r8d ; mov eax, r10d ; ret
0x000002000055b0de : mov dword ptr [rax + 0x1000000], ebx ; ret
0x0000020000085d5a : mov dword ptr [rax + 0x10], eax ; mov al, 1 ; ret
0x00000200005cfb61 : mov dword ptr [rax + 0x10], ebx ; jmp 0x2000049bdb5
0x000002000021c89d : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [r8], rax ; ret
0x00000200000a123c : mov dword ptr [rax + 0x10], ecx ; mov rbx, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x000002000049bcbb : mov dword ptr [rax + 0x10], ecx ; ret
0x00000200007059c1 : mov dword ptr [rax + 0x10], edx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002dd09 : mov dword ptr [rax + 0x18], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007018dc : mov dword ptr [rax + 0x18], eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000fd443 : mov dword ptr [rax + 0x18], ebp ; mov r15, rcx ; call 0x200000e9734
0x000002000002901f : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rax + 0x1c], r11d ; mov eax, r10d ; pop rbx ; ret
0x00000200000fd442 : mov dword ptr [rax + 0x18], r13d ; mov r15, rcx ; call 0x200000e9735
0x00000200007d410a : mov dword ptr [rax + 0x1c], ebx ; call 0x20000157549
0x0000020000029023 : mov dword ptr [rax + 0x1c], ebx ; mov eax, r10d ; pop rbx ; ret
0x0000020000029022 : mov dword ptr [rax + 0x1c], r11d ; mov eax, r10d ; pop rbx ; ret
0x00000200005caadc : mov dword ptr [rax + 0x20], edx ; jmp 0x20000486d3b
0x00000200001c11ed : mov dword ptr [rax + 0x28], eax ; ret
0x000002000021dd45 : mov dword ptr [rax + 0x28], ecx ; movdqu xmmword ptr [r8 + 0x10], xmm0 ; ret
0x00000200001fc3ab : mov dword ptr [rax + 0x28], ecx ; ret
0x0000020000121dc3 : mov dword ptr [rax + 0x30], ebx ; mov rcx, r10 ; call r9
0x000002000022d997 : mov dword ptr [rax + 0x30], ecx ; xor eax, eax ; mov dword ptr [r9], ecx ; ret
0x0000020000554abb : mov dword ptr [rax + 0x50], edx ; ret
0x00000200001b3f1f : mov dword ptr [rax + 0x5c], eax ; ret
0x00000200001463d2 : mov dword ptr [rax + 0x610], edx ; ret
0x00000200000bc4aa : mov dword ptr [rax + 0x678], ecx ; ret
0x00000200001c9fb1 : mov dword ptr [rax + 0x680], edx ; ret
0x0000020000008f6e : mov dword ptr [rax + 0x748], ecx ; ret
0x000002000000bffa : mov dword ptr [rax + 0x7c0], ecx ; ret
0x0000020000716e02 : mov dword ptr [rax + 0x8168], eax ; ret
0x0000020000716e01 : mov dword ptr [rax + 0x8168], r8d ; ret
0x0000020000713d98 : mov dword ptr [rax + 0xa], ecx ; mov rax, r8 ; ret
0x00000200001e1e5b : mov dword ptr [rax + 0xa], ecx ; ret
0x0000020000519781 : mov dword ptr [rax + 0xc], eax ; ret
0x0000020000456396 : mov dword ptr [rax + 0xc], eax ; xor eax, eax ; ret
0x00000200005b327e : mov dword ptr [rax + 0xc], ebx ; ret
0x0000020000117c63 : mov dword ptr [rax + 0xc], ecx ; ret
0x00000200001c2133 : mov dword ptr [rax + 0xc], edx ; pop rbx ; ret
0x00000200000c1a9d : mov dword ptr [rax + 0xf], 0x36085 ; add dh, dh ; ret
0x00000200000c16cb : mov dword ptr [rax + 0xf], 0x5a385 ; add dh, dh ; ret
0x00000200001cb0f8 : mov dword ptr [rax + 2], ecx ; mov al, 1 ; ret
0x00000200004e9ff0 : mov dword ptr [rax + 2], ecx ; xor eax, eax ; ret
0x0000020000706aae : mov dword ptr [rax + 4], edx ; add rsp, 0x28 ; ret
0x0000020000032cbe : mov dword ptr [rax + 4], edx ; ret
0x0000020000548856 : mov dword ptr [rax + 4], edx ; xor eax, eax ; ret
0x000002000051c147 : mov dword ptr [rax + 8], eax ; cmp dword ptr [r9], r11d ; ja 0x2000051c10a ; ret
0x00000200000881d9 : mov dword ptr [rax + 8], eax ; jmp 0x200000881a4
0x000002000010499b : mov dword ptr [rax + 8], eax ; mov eax, 1 ; ret
0x000002000003e396 : mov dword ptr [rax + 8], eax ; mov qword ptr [rax], rax ; ret
0x00000200000343dc : mov dword ptr [rax + 8], eax ; ret
0x000002000045690c : mov dword ptr [rax + 8], eax ; xor eax, eax ; ret
0x0000020000023cfb : mov dword ptr [rax + 8], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000070e2a9 : mov dword ptr [rax + 8], ecx ; and qword ptr [rax + 0x10], 0 ; ret
0x00000200001c212f : mov dword ptr [rax + 8], ecx ; mov dword ptr [r8 + 0xc], edx ; pop rbx ; ret
0x000002000021c89a : mov dword ptr [rax + 8], ecx ; mov dword ptr [rax + 0x10], ecx ; mov qword ptr [r8], rax ; ret
0x0000020000116857 : mov dword ptr [rax + 8], ecx ; mov qword ptr [rcx], r9 ; mov rax, r10 ; ret
0x000002000000a3f2 : mov dword ptr [rax + 8], ecx ; mov qword ptr [rdx], rcx ; ret
0x00000200000572e2 : mov dword ptr [rax + 8], ecx ; ret
0x000002000046a569 : mov dword ptr [rax + 8], ecx ; xor eax, eax ; ret
0x00000200004f9bda : mov dword ptr [rax + 8], edx ; inc dword ptr [rcx + 0x80] ; ret
0x00000200000f8ef4 : mov dword ptr [rax + 8], edx ; mov dl, al ; call 0x20000075197
0x00000200001f6fa1 : mov dword ptr [rax + 8], edx ; mov qword ptr [rcx], rdx ; ret
0x000002000044fe81 : mov dword ptr [rax + 8], edx ; mov word ptr [r8 + 4], dx ; ret
0x000002000018cf89 : mov dword ptr [rax + 8], edx ; or dword ptr [rdx + 0x38], 1 ; inc dword ptr [rcx] ; ret
0x00000200001ce034 : mov dword ptr [rax + 8], edx ; ret
0x00000200001b48be : mov dword ptr [rax + 8], edx ; test edx, edx ; jne 0x200001b48b6 ; ret
0x00000200004511cb : mov dword ptr [rax + 8], esi ; call 0x2000007d086
0x00000200001ad906 : mov dword ptr [rax + rax*8 + 0x21], edx ; cmp ecx, dword ptr [r8] ; jb 0x200001ad8f6 ; ret
0x00000200006ab087 : mov dword ptr [rax + rax*8 + 8], edx ; xor eax, eax ; inc dword ptr [r8] ; ret
0x000002000070d3cf : mov dword ptr [rax + rax], 0x28c48348 ; ret
0x000002000070d55d : mov dword ptr [rax + rax], 0x38c48348 ; ret
0x000002000070ff28 : mov dword ptr [rax + rcx*4], 1 ; ret
0x000002000070ff92 : mov dword ptr [rax + rcx*4], edx ; ret
0x00000200001b6de3 : mov dword ptr [rax + rcx*8 + 0x28], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000c60c1 : mov dword ptr [rax + rdx*8 + 8], ecx ; ret
0x00000200000fca0e : mov dword ptr [rax + rdx*8], eax ; inc edx ; jmp 0x200000fca05
0x00000200005a2cd0 : mov dword ptr [rax + rdx*8], eax ; ret
0x0000020000118bc4 : mov dword ptr [rax - 0x10], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000461bdf : mov dword ptr [rax - 0x18000000], edi ; out -0x43, eax ; ret
0x0000020000173d9a : mov dword ptr [rax - 0x68d], eax ; ret
0x00000200007a8f45 : mov dword ptr [rax - 0x6b], 0x35e8003a ; xchg eax, ecx ; ret 0x41ff
0x00000200000a225a : mov dword ptr [rax - 0x73], ecx ; add al, 0xc8 ; ret
0x000002000043cab5 : mov dword ptr [rax - 0x75000000], ebx ; ret 0xc148
0x0000020000706d86 : mov dword ptr [rax - 0x75000000], esp ; ret 0xc141
0x00000200005efd1e : mov dword ptr [rax - 0x75], ecx ; ret
0x0000020000643f82 : mov dword ptr [rax - 0x7d], ecx ; ret
0x00000200005f4f4c : mov dword ptr [rax*8 - 0x4117000b], ebx ; ret
0x00000200004234ab : mov dword ptr [rax], 0 ; ret
0x00000200003c6dac : mov dword ptr [rax], 0x1000 ; xor eax, eax ; ret
0x00000200000f7388 : mov dword ptr [rax], 0x1429 ; xor eax, eax ; ret
0x00000200002446ff : mov dword ptr [rax], 0x48b87974 ; mov eax, edx ; jmp 0x20000244712
0x0000020000244aaa : mov dword ptr [rax], 0x48b87974 ; mov eax, edx ; jmp 0x20000244abd
0x00000200003f1166 : mov dword ptr [rax], 0x83410000 ; call qword ptr [rax]
0x0000020000157aa4 : mov dword ptr [rax], 0xc000001d ; xor eax, eax ; ret
0x0000020000157ad8 : mov dword ptr [rax], 0xc0000096 ; xor eax, eax ; ret
0x0000020000121397 : mov dword ptr [rax], 1 ; ret
0x00000200004568e4 : mov dword ptr [rax], 1 ; xor eax, eax ; ret
0x000002000012140b : mov dword ptr [rax], 3 ; ret
0x0000020000085d3d : mov dword ptr [rax], 4 ; ret
0x00000200003fa31d : mov dword ptr [rax], 9 ; mov qword ptr [rdx], rax ; ret
0x00000200002316a9 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; mov al, r11b ; ret
0x0000020000561276 : mov dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000000b6a3 : mov dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000004e4d : mov dword ptr [rax], eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e6fd0 : mov dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000053d601 : mov dword ptr [rax], eax ; mov al, 1 ; ret
0x00000200000f0575 : mov dword ptr [rax], eax ; mov byte ptr [rdx + 0x2a], 0 ; ret
0x000002000009038b : mov dword ptr [rax], eax ; mov dword ptr [rcx + 0x18], r8d ; ret
0x00000200001aaf6b : mov dword ptr [rax], eax ; mov eax, 0xc0000095 ; ret
0x0000020000710dba : mov dword ptr [rax], eax ; mov eax, 1 ; ret
0x00000200003f8e29 : mov dword ptr [rax], eax ; mov eax, r9d ; ret
0x00000200000036d1 : mov dword ptr [rax], eax ; ret
0x0000020000009a24 : mov dword ptr [rax], eax ; xor eax, eax ; ret
0x0000020000187c27 : mov dword ptr [rax], ebx ; mov qword ptr [r9], r11 ; ret
0x00000200001bd981 : mov dword ptr [rax], ebx ; mov rax, qword ptr [rip + 0x13bec6] ; call rax
0x00000200001b741c : mov dword ptr [rax], ebx ; ret
0x0000020000680895 : mov dword ptr [rax], ecx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x00000200003d0a97 : mov dword ptr [rax], ecx ; add eax, ecx ; ret
0x000002000003ff06 : mov dword ptr [rax], ecx ; add rsp, 0x28 ; ret
0x00000200000f5cc7 : mov dword ptr [rax], ecx ; jmp 0x200000f5c91
0x00000200007063d3 : mov dword ptr [rax], ecx ; mov al, 1 ; ret
0x0000020000078ae6 : mov dword ptr [rax], ecx ; mov al, r9b ; ret
0x0000020000525e43 : mov dword ptr [rax], ecx ; mov eax, 1 ; ret
0x0000020000102299 : mov dword ptr [rax], ecx ; mov eax, edx ; ret
0x00000200003f60a5 : mov dword ptr [rax], ecx ; mov eax, r9d ; ret
0x00000200001ce031 : mov dword ptr [rax], ecx ; mov qword ptr [r8 + 8], rdx ; ret
0x00000200003cd1d5 : mov dword ptr [rax], ecx ; mov qword ptr [rdx + 8], rcx ; dec dword ptr [rcx + 0x64] ; ret
0x00000200000ee94b : mov dword ptr [rax], ecx ; mov qword ptr [rdx + 8], rcx ; ret
0x0000020000215b72 : mov dword ptr [rax], ecx ; mov qword ptr [rip + 0xddebd], rcx ; ret
0x0000020000502112 : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x1fe6d3], rcx ; ret
0x0000020000526e63 : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x207d44], rcx ; ret
0x00000200005e9872 : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x2e5e43], rcx ; ret
0x000002000071710a : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x4176eb], rcx ; ret
0x0000020000124188 : mov dword ptr [rax], ecx ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000002fb35 : mov dword ptr [rax], ecx ; ret
0x000002000067b42e : mov dword ptr [rax], ecx ; xor al, al ; ret
0x0000020000056cbc : mov dword ptr [rax], ecx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002ce34 : mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x00000200001c0716 : mov dword ptr [rax], edi ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012aa40 : mov dword ptr [rax], edi ; add rsp, 0x40 ; pop rdi ; ret
0x000002000022d93b : mov dword ptr [rax], edi ; mov eax, ecx ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006bbed4 : mov dword ptr [rax], edx ; jmp 0x200006bbf0b
0x0000020000021705 : mov dword ptr [rax], edx ; mov al, 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000f8a5c : mov dword ptr [rax], edx ; mov eax, r8d ; ret
0x00000200001717ce : mov dword ptr [rax], edx ; mov qword ptr [r9 + 0x48], rdx ; ret
0x000002000040fe79 : mov dword ptr [rax], edx ; mov qword ptr [r9], rcx ; ret
0x00000200000533af : mov dword ptr [rax], edx ; ret
0x00000200000420f5 : mov dword ptr [rax], edx ; test r9d, r9d ; setne al ; ret
0x0000020000128c2d : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x00000200005dd68b : mov dword ptr [rax], esi ; ret
0x000002000040937d : mov dword ptr [rax], esi ; xor al, al ; pop r14 ; pop rsi ; ret
0x0000020000111fb6 : mov dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xb849
0x0000020000119b4d : mov dword ptr [rax], esp ; in al, 5 ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x0000020000495e53 : mov dword ptr [rax], esp ; or eax, dword ptr [rax] ; add al, ch ; ret
0x000002000003ff05 : mov dword ptr [rax], r9d ; add rsp, 0x28 ; ret
0x000002000057fedf : mov dword ptr [rbp + 0x20], ebx ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x0000020000525aa9 : mov dword ptr [rbp + 0x27], esi ; call 0x200001480d6
0x000002000058ebc3 : mov dword ptr [rbp + 0x33], 0x24894ce4 ; ret
0x00000200004305bd : mov dword ptr [rbp + 0x38], eax ; call 0x2000005fa86
0x000002000047f703 : mov dword ptr [rbp + 0x57], eax ; jmp 0x2000047f9aa
0x0000020000559984 : mov dword ptr [rbp + 0x67], eax ; jmp 0x20000559950
0x00000200000e59e0 : mov dword ptr [rbp + 0x7f], eax ; call 0x200000e3b69
0x00000200004d0763 : mov dword ptr [rbp + 4], edi ; cmp r15d, r9d ; jb 0x200004d07cf ; inc edx ; jmp 0x200004d071b
0x00000200006f7591 : mov dword ptr [rbp + rcx*4 + 0xd], ecx ; ret 0x43ff
0x000002000052c9a5 : mov dword ptr [rbp - 0x10], ebx ; mov r14d, ebx ; call 0x20000157549
0x000002000051864b : mov dword ptr [rbp - 0x18], 7 ; call 0x200004548bd
0x000002000052ca08 : mov dword ptr [rbp - 0x20], eax ; call 0x20000157546
0x00000200005217fd : mov dword ptr [rbp - 0x20], eax ; call 0x2000024da45
0x00000200006cfd74 : mov dword ptr [rbp - 0x21], eax ; movzx ecx, word ptr [rbx] ; call 0x2000013c068
0x0000020000525d7e : mov dword ptr [rbp - 0x28], esi ; call 0x20000148176
0x00000200007cd1cf : mov dword ptr [rbp - 0x29], esi ; call 0x200003f8b5a
0x0000020000555dd7 : mov dword ptr [rbp - 0x30], 0x28 ; call rdx
0x00000200001796d1 : mov dword ptr [rbp - 0x3d], edx ; jmp 0x200001796e8
0x00000200003fa5f6 : mov dword ptr [rbp - 0x40], esi ; call r10
0x0000020000458aa8 : mov dword ptr [rbp - 0x41], ebx ; call rax
0x00000200004421cb : mov dword ptr [rbp - 0x48], ebx ; call r14
0x00000200001738e9 : mov dword ptr [rbp - 0x69a], ebp ; ret
0x000002000022cefb : mov dword ptr [rbp - 0x74b7ffee], ecx ; ret
0x00000200007b6a9a : mov dword ptr [rbp - 8], 1 ; call 0x20000562ce1
0x0000020000401b2b : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000083dd1 : mov dword ptr [rbx + 0x10], ecx ; add rsp, 0x28 ; ret
0x00000200001579b7 : mov dword ptr [rbx + 0x14], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005689ec : mov dword ptr [rbx + 0x14], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000456cfe : mov dword ptr [rbx + 0x1a8], eax ; call 0x2000007d089
0x0000020000417105 : mov dword ptr [rbx + 0x1c], eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005678ca : mov dword ptr [rbx + 0x1c], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005678c9 : mov dword ptr [rbx + 0x1c], r9d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e5d4f : mov dword ptr [rbx + 0x20], esp ; call 0x200000e3b69
0x000002000044c68e : mov dword ptr [rbx + 0x28], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000017ebd9 : mov dword ptr [rbx + 0x28], eax ; jmp 0x2000004aedf
0x000002000054cf29 : mov dword ptr [rbx + 0x28], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000574e7 : mov dword ptr [rbx + 0x2c], edx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011a6f4 : mov dword ptr [rbx + 0x30], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000548439 : mov dword ptr [rbx + 0x30], edx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000054309 : mov dword ptr [rbx + 0x38], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e101d : mov dword ptr [rbx + 0x38], ecx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000002553 : mov dword ptr [rbx + 0x40], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ac5ae : mov dword ptr [rbx + 0x70], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006888be : mov dword ptr [rbx + 0xa], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006888bd : mov dword ptr [rbx + 0xa], r9d ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000494c94 : mov dword ptr [rbx + 2], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006c1759 : mov dword ptr [rbx + 4], edx ; lea ecx, dword ptr [rdx - 0x13] ; call 0x2000024da48
0x000002000045f846 : mov dword ptr [rbx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f0fd1 : mov dword ptr [rbx + 8], eax ; jmp 0x200003f0f9d
0x000002000005397d : mov dword ptr [rbx + 8], eax ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000001e0b5 : mov dword ptr [rbx + 8], ecx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000456939 : mov dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; ret
0x000002000061be3c : mov dword ptr [rbx + rbp - 0x28], 0xff480575 ; ret
0x0000020000444050 : mov dword ptr [rbx - 0x18], eax ; call 0x20000070f66
0x000002000011aa5d : mov dword ptr [rbx - 0x18], eax ; call r10
0x00000200006dd1f0 : mov dword ptr [rbx - 0x18], edi ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x0000020000201580 : mov dword ptr [rbx - 0x20], ebx ; mov dword ptr [rsp + 0x40], ebx ; call rax
0x00000200001373c8 : mov dword ptr [rbx - 0x28], eax ; call r10
0x00000200006dd0b4 : mov dword ptr [rbx - 0x38], eax ; call rdi
0x00000200006dd1f4 : mov dword ptr [rbx - 0x48], eax ; call rbx
0x0000020000453531 : mov dword ptr [rbx - 0x48], eax ; lea r8d, dword ptr [r9 - 1] ; call rbx
0x0000020000530cfc : mov dword ptr [rbx - 0x48], eax ; lea r8d, dword ptr [r9 - 2] ; call qword ptr [rbx]
0x00000200006dd159 : mov dword ptr [rbx - 0x48], eax ; lea r8d, dword ptr [r9 - 2] ; call rbx
0x0000020000531f12 : mov dword ptr [rbx - 0x74fff3dc], edi ; ret
0x0000020000459d51 : mov dword ptr [rbx - 0x75000000], ecx ; ret
0x00000200004b4730 : mov dword ptr [rbx], 0x834800f0 ; ret
0x000002000022bdfe : mov dword ptr [rbx], 2 ; call 0x200001480d8
0x0000020000498a0a : mov dword ptr [rbx], eax ; add byte ptr [rax], al ; call 0x20000494ce6
0x0000020000026356 : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000c832 : mov dword ptr [rbx], eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000fd33d : mov dword ptr [rbx], eax ; add rsp, 0x40 ; pop rbx ; ret
0x000002000042a8b7 : mov dword ptr [rbx], eax ; jmp 0x2000042a8e5
0x00000200007990fe : mov dword ptr [rbx], eax ; jmp 0x200007990c7
0x000002000020ff2a : mov dword ptr [rbx], eax ; mov al, 1 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200006d7f4e : mov dword ptr [rbx], eax ; mov eax, ecx ; add rsp, 0x60 ; pop rbx ; ret
0x00000200001f761d : mov dword ptr [rbx], eax ; mov eax, edx ; add rsp, 0x38 ; ret
0x00000200003f0fce : mov dword ptr [rbx], eax ; mov qword ptr [rbx + 8], rax ; jmp 0x200003f0fa0
0x00000200000a1190 : mov dword ptr [rbx], eax ; mov rbx, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x0000020000117f3b : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013d7c1 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000093934 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000043c46b : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x00000200003fa128 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x00000200004e01df : mov dword ptr [rbx], ebp ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001bbdd7 : mov dword ptr [rbx], ebp ; mov rax, qword ptr [rip + 0x13da70] ; call rax
0x00000200001c291a : mov dword ptr [rbx], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001bdd5b : mov dword ptr [rbx], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000007c7b : mov dword ptr [rbx], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006279a2 : mov dword ptr [rbx], ecx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000001b612 : mov dword ptr [rbx], ecx ; jmp 0x2000001b5ad
0x00000200003ca644 : mov dword ptr [rbx], ecx ; ret
0x000002000012d540 : mov dword ptr [rbx], ecx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001be7b2 : mov dword ptr [rbx], edi ; mov rax, qword ptr [rip + 0x13b095] ; call rax
0x00000200000318e7 : mov dword ptr [rbx], edx ; add byte ptr [rbp + 0x3b], cl ; ret
0x000002000003870c : mov dword ptr [rbx], edx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000129274 : mov dword ptr [rbx], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004629fc : mov dword ptr [rbx], edx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001bfc0c : mov dword ptr [rbx], esi ; mov rax, qword ptr [rip + 0x139c3b] ; call rax
0x000002000003870b : mov dword ptr [rbx], r10d ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000235761 : mov dword ptr [rbx], r10d ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000711022 : mov dword ptr [rcx + 0x100], eax ; ret
0x000002000054333e : mov dword ptr [rcx + 0x10], eax ; mov dword ptr [rcx + 0x18], eax ; ret
0x0000020000120388 : mov dword ptr [rcx + 0x10], eax ; mov qword ptr [rcx + 8], r8 ; ret
0x0000020000567ce9 : mov dword ptr [rcx + 0x10], eax ; mov qword ptr [rcx + 8], rcx ; ret
0x0000020000157b0d : mov dword ptr [rcx + 0x10], eax ; ret
0x000002000045193e : mov dword ptr [rcx + 0x10], eax ; xor eax, eax ; ret
0x0000020000649dde : mov dword ptr [rcx + 0x10], ecx ; add rsp, 0x38 ; ret
0x000002000070f686 : mov dword ptr [rcx + 0x10], ecx ; mov qword ptr [rcx], rdx ; ret
0x00000200000723b8 : mov dword ptr [rcx + 0x10], edi ; pop rdi ; ret
0x0000020000669239 : mov dword ptr [rcx + 0x10], edx ; add qword ptr [r10], 0x18 ; ret
0x00000200006851ee : mov dword ptr [rcx + 0x10], edx ; and qword ptr [rcx + 8], 0 ; ret
0x00000200001d48b5 : mov dword ptr [rcx + 0x10], edx ; mov qword ptr [rcx + 8], r8 ; ret
0x00000200001fe673 : mov dword ptr [rcx + 0x10], edx ; ret
0x0000020000026ff8 : mov dword ptr [rcx + 0x10], edx ; xor eax, eax ; ret
0x000002000078f1b2 : mov dword ptr [rcx + 0x128], eax ; xor eax, eax ; ret
0x0000020000569718 : mov dword ptr [rcx + 0x14], eax ; ret
0x0000020000137b76 : mov dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x0000020000090e90 : mov dword ptr [rcx + 0x168], eax ; ret
0x0000020000135d2f : mov dword ptr [rcx + 0x18], 0x3f ; ret
0x000002000000fcff : mov dword ptr [rcx + 0x18], eax ; mov dword ptr [r9 + 0x1c], ecx ; ret
0x0000020000129740 : mov dword ptr [rcx + 0x18], eax ; mov dword ptr [rcx + 8], edx ; ret
0x0000020000151ac7 : mov dword ptr [rcx + 0x18], eax ; mov eax, 2 ; ret
0x00000200006a100e : mov dword ptr [rcx + 0x18], eax ; mov eax, dword ptr [rdx + 0x7c] ; mov dword ptr [rcx + 0x1c], eax ; ret
0x000002000008f10b : mov dword ptr [rcx + 0x18], eax ; mov qword ptr [rcx + 0x38], r8 ; ret
0x00000200000f7e87 : mov dword ptr [rcx + 0x18], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000000fa2a : mov dword ptr [rcx + 0x18], eax ; ret
0x0000020000038287 : mov dword ptr [rcx + 0x18], ecx ; mov dword ptr [rcx], 2 ; ret
0x0000020000043b93 : mov dword ptr [rcx + 0x18], ecx ; mov dword ptr [rcx], 3 ; ret
0x00000200006692f8 : mov dword ptr [rcx + 0x18], edx ; add qword ptr [r10], 0x28 ; ret
0x0000020000057ae5 : mov dword ptr [rcx + 0x18], edx ; mov qword ptr [rcx + 0x20], r8 ; ret
0x000002000008f0ec : mov dword ptr [rcx + 0x18], edx ; mov qword ptr [rcx + 0x38], rdx ; ret
0x00000200000ba4b8 : mov dword ptr [rcx + 0x18], edx ; ret
0x000002000000fa29 : mov dword ptr [rcx + 0x18], r8d ; ret
0x000002000056993e : mov dword ptr [rcx + 0x1c], eax ; ret
0x000002000000fd03 : mov dword ptr [rcx + 0x1c], ecx ; ret
0x0000020000057ae9 : mov dword ptr [rcx + 0x20], eax ; ret
0x0000020000704911 : mov dword ptr [rcx + 0x20], ecx ; ret
0x00000200000400ff : mov dword ptr [rcx + 0x20], edx ; ret
0x00000200002119d8 : mov dword ptr [rcx + 0x28], eax ; mov al, 1 ; ret
0x0000020000121408 : mov dword ptr [rcx + 0x28], eax ; mov dword ptr [rax], 3 ; ret
0x00000200001da286 : mov dword ptr [rcx + 0x298], edx ; ret
0x00000200001d1334 : mov dword ptr [rcx + 0x29fc], eax ; mov eax, edx ; jmp 0x200001d12fa
0x00000200001d1482 : mov dword ptr [rcx + 0x29fc], eax ; mov eax, edx ; jmp 0x200001d14a9
0x0000020000085134 : mov dword ptr [rcx + 0x2b4c0010], eax ; ret 0x8b48
0x0000020000209f48 : mov dword ptr [rcx + 0x2d20], eax ; sti ; xor eax, eax ; ret
0x00000200003e1def : mov dword ptr [rcx + 0x2e0], edx ; ret
0x000002000003d1bb : mov dword ptr [rcx + 0x30], eax ; mov qword ptr [rcx + 0x38], r9 ; ret
0x000002000068383e : mov dword ptr [rcx + 0x340], edx ; ret
0x00000200007293c5 : mov dword ptr [rcx + 0x34], eax ; add rsp, 0x28 ; ret
0x00000200000fce65 : mov dword ptr [rcx + 0x36], edx ; ret
0x00000200003e908f : mov dword ptr [rcx + 0x38], eax ; cmp dword ptr [rcx + 0x14], edx ; ja 0x200003e90a0 ; ret
0x000002000008f43b : mov dword ptr [rcx + 0x38], eax ; mov byte ptr [rcx + 0x52], dl ; ret
0x00000200005137a8 : mov dword ptr [rcx + 0x38], eax ; mov qword ptr [rcx + 0x40], r10 ; ret
0x0000020000211f70 : mov dword ptr [rcx + 0x38], eax ; mov word ptr [rcx + 0x48], ax ; ret
0x000002000008f10f : mov dword ptr [rcx + 0x38], eax ; ret
0x000002000003d1bf : mov dword ptr [rcx + 0x38], ecx ; ret
0x0000020000033d8a : mov dword ptr [rcx + 0x38], edx ; mov dword ptr [rcx + 0x74], edx ; jne 0x20000033d9b ; ret
0x000002000008f0f0 : mov dword ptr [rcx + 0x38], edx ; ret
0x000002000007f2d9 : mov dword ptr [rcx + 0x3b], ecx ; ret 0x1274
0x0000020000453589 : mov dword ptr [rcx + 0x3d8], edx ; ret
0x00000200004549d5 : mov dword ptr [rcx + 0x3e8], eax ; xor eax, eax ; ret
0x00000200003e0068 : mov dword ptr [rcx + 0x40], eax ; mov byte ptr [rcx + 0x48], 0 ; ret
0x00000200005137ac : mov dword ptr [rcx + 0x40], edx ; ret
0x00000200004487a7 : mov dword ptr [rcx + 0x410], eax ; ret
0x000002000054147b : mov dword ptr [rcx + 0x410], ecx ; ret
0x000002000068023d : mov dword ptr [rcx + 0x460], edx ; xor eax, eax ; ret
0x0000020000211f74 : mov dword ptr [rcx + 0x48], eax ; ret
0x000002000022c5c1 : mov dword ptr [rcx + 0x48], ecx ; mov al, 1 ; ret
0x000002000022c5ab : mov dword ptr [rcx + 0x48], ecx ; xor al, al ; ret
0x00000200001ca00e : mov dword ptr [rcx + 0x48], edx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000151b47 : mov dword ptr [rcx + 0x48], edx ; mov eax, 3 ; ret
0x00000200001717d1 : mov dword ptr [rcx + 0x48], edx ; ret
0x0000020000122d57 : mov dword ptr [rcx + 0x50], eax ; mov eax, r8d ; ret
0x0000020000683ec4 : mov dword ptr [rcx + 0x50], eax ; ret
0x0000020000683ec9 : mov dword ptr [rcx + 0x50], ecx ; ret
0x0000020000100445 : mov dword ptr [rcx + 0x5898], eax ; ret
0x000002000005749e : mov dword ptr [rcx + 0x58], eax ; mov qword ptr [rcx + 0x60], rax ; ret
0x0000020000042aac : mov dword ptr [rcx + 0x58], eax ; ret
0x0000020000157a92 : mov dword ptr [rcx + 0x5b58], eax ; ret
0x00000200007a0ba4 : mov dword ptr [rcx + 0x5bec], eax ; ret
0x00000200006c9990 : mov dword ptr [rcx + 0x60], eax ; mov qword ptr [rcx + 0x68], rdx ; ret
0x00000200000574a2 : mov dword ptr [rcx + 0x60], eax ; ret
0x00000200006c998f : mov dword ptr [rcx + 0x60], r8d ; mov qword ptr [rcx + 0x68], rdx ; ret
0x00000200000bdf6d : mov dword ptr [rcx + 0x628], eax ; ret
0x00000200001c9f9d : mov dword ptr [rcx + 0x680], edx ; ret
0x0000020000044db2 : mov dword ptr [rcx + 0x68], eax ; ret
0x000002000016df0d : mov dword ptr [rcx + 0x68], ecx ; ret
0x00000200006c9994 : mov dword ptr [rcx + 0x68], edx ; ret
0x000002000000c85f : mov dword ptr [rcx + 0x6c4], eax ; ret
0x000002000000c85e : mov dword ptr [rcx + 0x6c4], r8d ; ret
0x00000200003d3fab : mov dword ptr [rcx + 0x70], eax ; mov dword ptr [rcx + 0x78], eax ; ret
0x000002000016df41 : mov dword ptr [rcx + 0x70], eax ; ret
0x000002000002e4f4 : mov dword ptr [rcx + 0x70], edx ; jmp 0x2000002e4bf
0x0000020000044ced : mov dword ptr [rcx + 0x70], edx ; ret
0x000002000042825f : mov dword ptr [rcx + 0x70], edx ; xor eax, eax ; ret
0x0000020000033d8d : mov dword ptr [rcx + 0x74], edx ; jne 0x20000033d98 ; ret
0x00000200003d3fae : mov dword ptr [rcx + 0x78], eax ; ret
0x0000020000451281 : mov dword ptr [rcx + 0x7a8], edx ; ret
0x0000020000431910 : mov dword ptr [rcx + 0x7c], eax ; ret
0x000002000043190f : mov dword ptr [rcx + 0x7c], r8d ; ret
0x00000200001852ad : mov dword ptr [rcx + 0x7d8], eax ; jmp 0x200000614d4
0x000002000016df7b : mov dword ptr [rcx + 0x80], eax ; ret
0x0000020000033d93 : mov dword ptr [rcx + 0x80], edx ; ret
0x00000200003e7d0c : mov dword ptr [rcx + 0x938], eax ; ret
0x0000020000604d2f : mov dword ptr [rcx + 0x98], eax ; ret
0x00000200005ead86 : mov dword ptr [rcx + 0xa0], eax ; ret
0x00000200005ead85 : mov dword ptr [rcx + 0xa0], r8d ; ret
0x000002000053bbe9 : mov dword ptr [rcx + 0xa4], eax ; ret
0x000002000045696d : mov dword ptr [rcx + 0xb08], edx ; ret
0x00000200001d956a : mov dword ptr [rcx + 0xb0], eax ; ret
0x00000200007c2080 : mov dword ptr [rcx + 0xc], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000200004c5777 : mov dword ptr [rcx + 0xc], eax ; jmp 0x200004c57c4
0x000002000012a3e8 : mov dword ptr [rcx + 0xc], eax ; xor eax, eax ; ret
0x00000200001357d5 : mov dword ptr [rcx + 0xc], ecx ; mov dword ptr [rcx + 8], r8d ; xor eax, eax ; ret
0x0000020000122d91 : mov dword ptr [rcx + 0xc], ecx ; ret
0x00000200004c5776 : mov dword ptr [rcx + 0xc], r8d ; jmp 0x200004c57c5
0x000002000012a3e7 : mov dword ptr [rcx + 0xc], r8d ; xor eax, eax ; ret
0x0000020000122d90 : mov dword ptr [rcx + 0xc], r9d ; ret
0x00000200006f40c6 : mov dword ptr [rcx + 0xd6], eax ; ret
0x0000020000147457 : mov dword ptr [rcx + 2], eax ; mov dword ptr [rcx], eax ; ret
0x0000020000036716 : mov dword ptr [rcx + 2], eax ; ret
0x000002000000969e : mov dword ptr [rcx + 2], eax ; xor eax, eax ; ret
0x00000200004b30d6 : mov dword ptr [rcx + 2], edx ; mov dword ptr [rcx + 4], eax ; ret
0x0000020000517564 : mov dword ptr [rcx + 2], edx ; xor eax, eax ; ret
0x0000020000147465 : mov dword ptr [rcx + 3], eax ; ret
0x00000200003ee14b : mov dword ptr [rcx + 4], 0x10 ; ret
0x000002000067bdb1 : mov dword ptr [rcx + 4], eax ; mov al, r9b ; ret
0x000002000005f091 : mov dword ptr [rcx + 4], eax ; ret
0x000002000007f5b4 : mov dword ptr [rcx + 4], edx ; mov dword ptr [r9], eax ; ret
0x00000200003ed9ef : mov dword ptr [rcx + 4], edx ; mov word ptr [rcx], dx ; mov word ptr [rax], dx ; ret
0x0000020000147489 : mov dword ptr [rcx + 5], eax ; ret
0x0000020000147473 : mov dword ptr [rcx + 6], eax ; ret
0x00000200004aeb83 : mov dword ptr [rcx + 6], eax ; xor eax, eax ; ret
0x000002000014747a : mov dword ptr [rcx + 7], eax ; ret
0x00000200007071ee : mov dword ptr [rcx + 8], 0xdeadf00d ; ret
0x0000020000456872 : mov dword ptr [rcx + 8], 4 ; ret
0x0000020000005733 : mov dword ptr [rcx + 8], eax ; add rsp, 0x28 ; ret
0x0000020000437185 : mov dword ptr [rcx + 8], eax ; call 0x2000005f386
0x0000020000100432 : mov dword ptr [rcx + 8], eax ; cmp rax, r9 ; je 0x20000100443 ; ret
0x0000020000121394 : mov dword ptr [rcx + 8], eax ; mov dword ptr [rax], 1 ; ret
0x0000020000042aa9 : mov dword ptr [rcx + 8], eax ; mov dword ptr [rcx + 0x58], eax ; ret
0x0000020000122d8d : mov dword ptr [rcx + 8], eax ; mov dword ptr [rcx + 0xc], r9d ; ret
0x00000200000f059f : mov dword ptr [rcx + 8], eax ; mov qword ptr [r8], rax ; ret
0x0000020000044b10 : mov dword ptr [rcx + 8], eax ; mov qword ptr [rcx + 0x18], rax ; ret
0x00000200001ceb40 : mov dword ptr [rcx + 8], eax ; mov qword ptr [rcx], r8 ; ret
0x0000020000057afb : mov dword ptr [rcx + 8], eax ; mov qword ptr [rcx], rdx ; ret
0x0000020000044ca7 : mov dword ptr [rcx + 8], eax ; mov rax, rcx ; ret
0x00000200006286d2 : mov dword ptr [rcx + 8], eax ; mov rcx, rdi ; call 0x2000024d009
0x000002000003911b : mov dword ptr [rcx + 8], eax ; ret
0x00000200001357d9 : mov dword ptr [rcx + 8], eax ; xor eax, eax ; ret
0x00000200000723b4 : mov dword ptr [rcx + 8], ecx ; mov qword ptr [r9 + 0x10], rdi ; pop rdi ; ret
0x0000020000044ce5 : mov dword ptr [rcx + 8], ecx ; ret
0x0000020000481b7c : mov dword ptr [rcx + 8], edx ; add rsp, 0x28 ; ret
0x0000020000157b44 : mov dword ptr [rcx + 8], edx ; mov dword ptr [rcx], 1 ; ret
0x0000020000157b09 : mov dword ptr [rcx + 8], edx ; mov qword ptr [rcx + 0x10], r8 ; ret
0x0000020000032ae0 : mov dword ptr [rcx + 8], edx ; ret
0x000002000000d749 : mov dword ptr [rcx + 8], edx ; xor eax, eax ; mov qword ptr [rdx + 0x10], rcx ; ret
0x0000020000044b0f : mov dword ptr [rcx + 8], r8d ; mov qword ptr [rcx + 0x18], rax ; ret
0x00000200001357d8 : mov dword ptr [rcx + 8], r8d ; xor eax, eax ; ret
0x000002000059e09b : mov dword ptr [rcx + r10], eax ; mov dword ptr [rcx + r8], edi ; inc edx ; jmp 0x2000059e08e
0x000002000059e27d : mov dword ptr [rcx + r8], eax ; inc edx ; jmp 0x2000059e261
0x000002000059e09f : mov dword ptr [rcx + r8], edi ; inc edx ; jmp 0x2000059e08a
0x00000200001b1cf6 : mov dword ptr [rcx + r9*4 + 0x747ee0], eax ; ret
0x00000200000d2af5 : mov dword ptr [rcx + rax*8 + 8], eax ; ret
0x000002000059e27e : mov dword ptr [rcx + rax], eax ; inc edx ; jmp 0x2000059e260
0x00000200000477c0 : mov dword ptr [rcx + rax], ebx ; mov rcx, rsi ; call 0x200000d3a78
0x000002000059e0a0 : mov dword ptr [rcx + rax], edi ; inc edx ; jmp 0x2000059e089
0x0000020000066012 : mov dword ptr [rcx + rcx*4 + 0x65], 0x3c8b48db ; ret 0xc641
0x00000200001b1cf7 : mov dword ptr [rcx + rcx*4 + 0x747ee0], eax ; ret
0x00000200000837e3 : mov dword ptr [rcx + rcx*4], eax ; lea ecx, dword ptr [r9 + 1] ; mov dword ptr [rdx], ecx ; ret
0x0000020000224e0d : mov dword ptr [rcx + rdx + 0x10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000059e09c : mov dword ptr [rcx + rdx], eax ; mov dword ptr [rcx + r8], edi ; inc edx ; jmp 0x2000059e08d
0x0000020000488938 : mov dword ptr [rcx + rsi + 0xc8], eax ; inc rdx ; jmp 0x20000488922
0x000002000014e96e : mov dword ptr [rcx - 0x10], eax ; mov qword ptr [rcx - 8], rax ; jne 0x2000014e959 ; ret
0x000002000006faea : mov dword ptr [rcx - 0x73], 0x2344ff51 ; ret 0x854d
0x0000020000139afc : mov dword ptr [rcx - 0x74fff875], esp ; ret
0x000002000024b941 : mov dword ptr [rcx - 0x76], 0x8349020c ; ret 0x4102
0x000002000014e972 : mov dword ptr [rcx - 8], eax ; jne 0x2000014e955 ; ret
0x00000200007acc5c : mov dword ptr [rcx], 0x158b4800 ; ret 0xf3da
0x0000020000627ad2 : mov dword ptr [rcx], 0x28 ; mov eax, ecx ; ret
0x0000020000513956 : mov dword ptr [rcx], 0x4c706345 ; ret
0x0000020000157b47 : mov dword ptr [rcx], 1 ; ret
0x000002000003828a : mov dword ptr [rcx], 2 ; ret
0x0000020000043b96 : mov dword ptr [rcx], 3 ; ret
0x0000020000646ce3 : mov dword ptr [rcx], eax ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000548b46 : mov dword ptr [rcx], eax ; add al, al ; ret
0x000002000005fa70 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000693fd2 : mov dword ptr [rcx], eax ; add rsp, 0x28 ; ret
0x0000020000111c7f : mov dword ptr [rcx], eax ; add rsp, 0x38 ; ret
0x0000020000201382 : mov dword ptr [rcx], eax ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000231dab : mov dword ptr [rcx], eax ; add rsp, 0x68 ; ret
0x000002000002f85a : mov dword ptr [rcx], eax ; cmp r10, r8 ; jb 0x2000002f847 ; ret
0x0000020000036710 : mov dword ptr [rcx], eax ; inc ax ; mov word ptr [rcx + 2], ax ; ret
0x000002000004e2c4 : mov dword ptr [rcx], eax ; inc edx ; jmp 0x2000004e2a7
0x00000200004472c5 : mov dword ptr [rcx], eax ; jmp 0x200004472d4
0x000002000046cca9 : mov dword ptr [rcx], eax ; jmp 0x2000046ccb7
0x00000200005389fd : mov dword ptr [rcx], eax ; jmp 0x200005389c7
0x00000200000268e4 : mov dword ptr [rcx], eax ; mov al, 1 ; ret
0x00000200002027ef : mov dword ptr [rcx], eax ; mov al, r8b ; ret
0x000002000014746a : mov dword ptr [rcx], eax ; mov byte ptr [rcx + 8], al ; ret
0x00000200000f7ead : mov dword ptr [rcx], eax ; mov dword ptr [r9 + 0x18], eax ; ret
0x0000020000147463 : mov dword ptr [rcx], eax ; mov dword ptr [rcx + 3], eax ; ret
0x0000020000147471 : mov dword ptr [rcx], eax ; mov dword ptr [rcx + 6], eax ; ret
0x0000020000147478 : mov dword ptr [rcx], eax ; mov dword ptr [rcx + 7], eax ; ret
0x0000020000456870 : mov dword ptr [rcx], eax ; mov dword ptr [rcx + 8], 4 ; ret
0x0000020000122d8b : mov dword ptr [rcx], eax ; mov dword ptr [rcx + 8], eax ; mov dword ptr [rcx + 0xc], r9d ; ret
0x000002000014747f : mov dword ptr [rcx], eax ; mov dword ptr [rcx + 8], eax ; ret
0x00000200001cc485 : mov dword ptr [rcx], eax ; mov dword ptr [rcx + 8], eax ; xor eax, eax ; ret
0x00000200001579df : mov dword ptr [rcx], eax ; mov eax, 0xc00000bb ; ret
0x00000200001f01d5 : mov dword ptr [rcx], eax ; mov eax, 1 ; ret
0x0000020000568f4f : mov dword ptr [rcx], eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005c4df : mov dword ptr [rcx], eax ; mov eax, ecx ; ret
0x000002000001f353 : mov dword ptr [rcx], eax ; mov eax, edx ; ret
0x0000020000056b23 : mov dword ptr [rcx], eax ; mov eax, r10d ; ret
0x0000020000147486 : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 5], rax ; ret
0x0000020000147491 : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 6], rax ; ret
0x0000020000147499 : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 7], rax ; ret
0x00000200006a4210 : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000032add : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 8], rdx ; ret
0x00000200005695f3 : mov dword ptr [rcx], eax ; mov qword ptr [rdx], r8 ; ret
0x00000200001c5cab : mov dword ptr [rcx], eax ; mov qword ptr [rip + 0x159ba4], rcx ; ret
0x000002000007b0e8 : mov dword ptr [rcx], eax ; mov qword ptr [rip + 0x2a6d77], rax ; ret
0x000002000044678b : mov dword ptr [rcx], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000005f08b : mov dword ptr [rcx], eax ; or dword ptr [rcx], 0xffffffff ; mov word ptr [rcx + 4], ax ; ret
0x000002000001016b : mov dword ptr [rcx], eax ; ret
0x0000020000600142 : mov dword ptr [rcx], eax ; test rdx, rdx ; je 0x20000600154 ; mov dword ptr [rdx], eax ; ret
0x0000020000056ed4 : mov dword ptr [rcx], eax ; test rdx, rdx ; jne 0x20000056ee3 ; ret
0x00000200006ae2d7 : mov dword ptr [rcx], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000402a7 : mov dword ptr [rcx], eax ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000160a94 : mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000020000437182 : mov dword ptr [rcx], ebp ; mov qword ptr [rcx + 8], rax ; call 0x2000005f389
0x0000020000503c0b : mov dword ptr [rcx], ebx ; add rsp, 0x20 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001d2779 : mov dword ptr [rcx], ebx ; mov eax, r10d ; ret
0x0000020000121621 : mov dword ptr [rcx], ebx ; mov rbx, qword ptr [rsp + 8] ; mov eax, r10d ; ret
0x0000020000081e9e : mov dword ptr [rcx], ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000045292 : mov dword ptr [rcx], ebx ; ret
0x000002000067a501 : mov dword ptr [rcx], ebx ; test r11, r11 ; setne al ; ret
0x0000020000128c2a : mov dword ptr [rcx], ecx ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x0000020000697159 : mov dword ptr [rcx], ecx ; mov eax, edx ; ret
0x00000200006971e1 : mov dword ptr [rcx], ecx ; mov eax, r11d ; ret
0x00000200005697c7 : mov dword ptr [rcx], ecx ; mov qword ptr [rax], rcx ; xor eax, eax ; ret
0x000002000054333b : mov dword ptr [rcx], ecx ; mov qword ptr [rcx + 0x10], rax ; mov dword ptr [rcx + 0x18], eax ; ret
0x000002000011685b : mov dword ptr [rcx], ecx ; mov rax, r10 ; ret
0x000002000003a520 : mov dword ptr [rcx], ecx ; ret
0x000002000043b0bd : mov dword ptr [rcx], ecx ; xor eax, eax ; add rsp, 0x18 ; ret
0x0000020000139516 : mov dword ptr [rcx], ecx ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000992db : mov dword ptr [rcx], edi ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004bebe2 : mov dword ptr [rcx], edx ; add byte ptr [rbp + 0x3b], cl ; ret
0x00000200004bec0f : mov dword ptr [rcx], edx ; add byte ptr [rcx - 0x75], al ; adc al, 0x2b ; ret 0x341
0x00000200001b9784 : mov dword ptr [rcx], edx ; mov al, 1 ; ret
0x0000020000451fdd : mov dword ptr [rcx], edx ; mov eax, r8d ; ret
0x000002000067aad6 : mov dword ptr [rcx], edx ; mov eax, r9d ; ret
0x0000020000682fe2 : mov dword ptr [rcx], edx ; mov qword ptr [r10], rdx ; mov qword ptr [r8], rdx ; ret
0x000002000040fe72 : mov dword ptr [rcx], edx ; mov qword ptr [r8], rcx ; ret
0x00000200004a6229 : mov dword ptr [rcx], edx ; mov qword ptr [rdx + 8], rcx ; ret
0x000002000013d2a5 : mov dword ptr [rcx], edx ; mov rax, r9 ; ret
0x00000200003ed9f3 : mov dword ptr [rcx], edx ; mov word ptr [rax], dx ; ret
0x00000200000c0a00 : mov dword ptr [rcx], edx ; pop rdi ; ret
0x000002000000a207 : mov dword ptr [rcx], edx ; ret
0x00000200001b9779 : mov dword ptr [rcx], edx ; xor al, al ; ret
0x000002000008f68f : mov dword ptr [rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x000002000013d2a4 : mov dword ptr [rcx], r10d ; mov rax, r9 ; ret
0x00000200001d20e4 : mov dword ptr [rcx], r10d ; ret
0x00000200001d2778 : mov dword ptr [rcx], r11d ; mov eax, r10d ; ret
0x0000020000045291 : mov dword ptr [rcx], r11d ; ret
0x0000020000032adc : mov dword ptr [rcx], r8d ; mov qword ptr [rcx + 8], rdx ; ret
0x000002000044678a : mov dword ptr [rcx], r8d ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001bc263 : mov dword ptr [rcx], r8d ; ret
0x0000020000056ed3 : mov dword ptr [rcx], r8d ; test rdx, rdx ; jne 0x20000056ee4 ; ret
0x0000020000448786 : mov dword ptr [rcx], r8d ; xor eax, eax ; ret
0x0000020000614a9c : mov dword ptr [rdi + 0x10], eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006213ca : mov dword ptr [rdi + 0x10], eax ; call 0x2000024da46
0x000002000045943e : mov dword ptr [rdi + 0x1b8], ebx ; call 0x2000007d089
0x0000020000551b98 : mov dword ptr [rdi + 0x24], eax ; jmp 0x20000551b64
0x0000020000551b97 : mov dword ptr [rdi + 0x24], r8d ; jmp 0x20000551b65
0x000002000009dfdb : mov dword ptr [rdi + 0x30], eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005e272 : mov dword ptr [rdi + 0x30], eax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000453d94 : mov dword ptr [rdi + 0x50], eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000534856 : mov dword ptr [rdi + 0x56], eax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000386a3 : mov dword ptr [rdi + 0xa], ecx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000386a2 : mov dword ptr [rdi + 0xa], r9d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000044699f : mov dword ptr [rdi + 0xc], eax ; jmp 0x200004469b2
0x00000200006d173e : mov dword ptr [rdi + 2], edx ; lea ecx, dword ptr [rdx - 0xf] ; call 0x2000024da48
0x000002000016beca : mov dword ptr [rdi + 8], 0xc000001c ; jmp 0x2000016be9d
0x00000200000fb376 : mov dword ptr [rdi + 8], eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000067231a : mov dword ptr [rdi + rdi*8 + 0x50c48348], ebp ; pop rbx ; ret
0x000002000016af3c : mov dword ptr [rdi - 0x73], 0x8348bf3c ; ret
0x000002000006fde3 : mov dword ptr [rdi - 0x74b3fffa], ebx ; fmul dword ptr [rax - 0x75] ; ret
0x00000200001172bc : mov dword ptr [rdi], eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000044136b : mov dword ptr [rdi], eax ; mov edi, 0xc0000023 ; jmp 0x2000044133e
0x0000020000450126 : mov dword ptr [rdi], eax ; mov rcx, rax ; call 0x2000007a468
0x0000020000425301 : mov dword ptr [rdi], eax ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020f30a : mov dword ptr [rdi], ebx ; mov eax, r10d ; jmp 0x2000020f334
0x0000020000648c40 : mov dword ptr [rdi], ebx ; mov rcx, rdi ; mov rax, qword ptr [rsi + 0x38] ; call rax
0x000002000000a863 : mov dword ptr [rdi], ecx ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020fe05 : mov dword ptr [rdi], ecx ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000212c27 : mov dword ptr [rdi], ecx ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x0000020000524db3 : mov dword ptr [rdi], esp ; ret
0x000002000020f309 : mov dword ptr [rdi], r11d ; mov eax, r10d ; jmp 0x2000020f335
0x00000200001bcecd : mov dword ptr [rdx + 0x10], eax ; je 0x200001bced9 ; sti ; ret
0x00000200000b5826 : mov dword ptr [rdx + 0x10], eax ; ret
0x00000200001da92d : mov dword ptr [rdx + 0x10], eax ; xor eax, eax ; ret
0x0000020000025efa : mov dword ptr [rdx + 0x10], ecx ; pop rsi ; ret
0x000002000000d74f : mov dword ptr [rdx + 0x10], ecx ; ret
0x000002000071c094 : mov dword ptr [rdx + 0x120], eax ; xor eax, eax ; ret
0x000002000001bb7f : mov dword ptr [rdx + 0x14], eax ; ret
0x000002000008f0af : mov dword ptr [rdx + 0x18], eax ; mov al, 1 ; ret
0x0000020000063e5a : mov dword ptr [rdx + 0x18], ecx ; add rsp, 0x28 ; ret
0x0000020000035ef8 : mov dword ptr [rdx + 0x18], edx ; add rsp, 0x38 ; ret
0x0000020000212d81 : mov dword ptr [rdx + 0x194], eax ; ret
0x00000200005696f8 : mov dword ptr [rdx + 0x207c], eax ; ret
0x000002000003d655 : mov dword ptr [rdx + 0x20], ecx ; mov al, r8b ; ret
0x000002000060a149 : mov dword ptr [rdx + 0x28], eax ; ret
0x000002000060a13c : mov dword ptr [rdx + 0x28], ecx ; mov qword ptr [rdx + 0x38], rax ; ret
0x0000020000563b63 : mov dword ptr [rdx + 0x28], ecx ; ret
0x0000020000150b87 : mov dword ptr [rdx + 0x2cc0], eax ; ret
0x0000020000212f9d : mov dword ptr [rdx + 0x378], eax ; ret
0x000002000055260c : mov dword ptr [rdx + 0x38], eax ; mov byte ptr [r10 + 0x30], dl ; ret
0x000002000060a140 : mov dword ptr [rdx + 0x38], eax ; ret
0x0000020000218f6f : mov dword ptr [rdx + 0x38], eax ; xor eax, eax ; ret
0x000002000060a16d : mov dword ptr [rdx + 0x48], eax ; ret
0x0000020000008f89 : mov dword ptr [rdx + 0x748], ecx ; ret
0x000002000000c021 : mov dword ptr [rdx + 0x7c0], ecx ; ret
0x000002000054e18a : mov dword ptr [rdx + 0xa], eax ; and word ptr [rdx + 8], cx ; ret
0x00000200007c22bd : mov dword ptr [rdx + 0xc], eax ; add rsp, 0x20 ; pop rbp ; ret
0x000002000060d48b : mov dword ptr [rdx + 2], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c8e7b : mov dword ptr [rdx + 2], eax ; ret
0x00000200004147fe : mov dword ptr [rdx + 2], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004202d7 : mov dword ptr [rdx + 2], ecx ; jmp 0x200004202a3
0x0000020000445738 : mov dword ptr [rdx + 2], ecx ; xor eax, eax ; ret
0x00000200007124a6 : mov dword ptr [rdx + 2], r8d ; ret
0x00000200004202d6 : mov dword ptr [rdx + 2], r9d ; jmp 0x200004202a4
0x0000020000157991 : mov dword ptr [rdx + 4], eax ; ret
0x00000200001fd586 : mov dword ptr [rdx + 4], ecx ; ret
0x000002000005c31e : mov dword ptr [rdx + 8], eax ; add rsp, 0x28 ; ret
0x000002000049c44a : mov dword ptr [rdx + 8], eax ; and qword ptr [rcx + 0x30], 0 ; ret
0x000002000055e2a4 : mov dword ptr [rdx + 8], eax ; mov al, r9b ; ret
0x0000020000026cd7 : mov dword ptr [rdx + 8], eax ; ret
0x0000020000627e94 : mov dword ptr [rdx + 8], eax ; xor edx, edx ; call 0x2000024d008
0x00000200003cd1d8 : mov dword ptr [rdx + 8], ecx ; dec dword ptr [rcx + 0x64] ; ret
0x00000200000ee9be : mov dword ptr [rdx + 8], ecx ; mov qword ptr [rax], rcx ; ret
0x000002000000a203 : mov dword ptr [rdx + 8], ecx ; mov qword ptr [rcx], rdx ; ret
0x000002000012f28f : mov dword ptr [rdx + 8], ecx ; mov word ptr [rdx], r9w ; jmp 0x2000012f263
0x000002000020c043 : mov dword ptr [rdx + 8], ecx ; or qword ptr [rcx + 0x10], 0xffffffffffffffff ; ret
0x00000200000ee94e : mov dword ptr [rdx + 8], ecx ; ret
0x000002000002e4dd : mov dword ptr [rdx + 8], edx ; mov qword ptr [rdx], r10 ; mov rax, r8 ; ret
0x000002000051ab91 : mov dword ptr [rdx + 8], edx ; ret
0x000002000021c2f8 : mov dword ptr [rdx + r8*2], eax ; mov eax, 1 ; ret
0x000002000021c2f9 : mov dword ptr [rdx + rax*2], eax ; mov eax, 1 ; ret
0x000002000012ab87 : mov dword ptr [rdx + rcx + 0x1c], eax ; ret
0x00000200001473fb : mov dword ptr [rdx + rcx - 0x10], eax ; mov qword ptr [rdx + rcx - 8], rax ; ret
0x0000020000147400 : mov dword ptr [rdx + rcx - 8], eax ; ret
0x000002000070d3a3 : mov dword ptr [rdx + rcx*8 + 0x18], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005c88fb : mov dword ptr [rdx - 0x49f00015], ebp ; ret 0xf44
0x0000020000115505 : mov dword ptr [rdx], 0 ; ret
0x00000200006844ca : mov dword ptr [rdx], 0x60 ; ret
0x00000200000c173a : mov dword ptr [rdx], 0x8b481275 ; ret
0x000002000020f88d : mov dword ptr [rdx], 0xffffffff ; ret
0x0000020000521b38 : mov dword ptr [rdx], 1 ; mov al, 1 ; ret
0x00000200003fdd4d : mov dword ptr [rdx], 2 ; mov eax, r8d ; ret
0x000002000001e75e : mov dword ptr [rdx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000016eccf : mov dword ptr [rdx], eax ; and qword ptr [r8], 0 ; ret
0x000002000004419c : mov dword ptr [rdx], eax ; call r10
0x00000200006cdddd : mov dword ptr [rdx], eax ; jne 0x200006cddad ; ret
0x0000020000076055 : mov dword ptr [rdx], eax ; lea eax, dword ptr [rcx - 0x3f] ; ret
0x000002000049e8a4 : mov dword ptr [rdx], eax ; lea r9, qword ptr [r11 + r10*2] ; mov rax, r9 ; ret
0x000002000020da58 : mov dword ptr [rdx], eax ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000028bae : mov dword ptr [rdx], eax ; mov al, 1 ; pop rsi ; ret
0x00000200004783d1 : mov dword ptr [rdx], eax ; mov al, 1 ; ret
0x000002000008e08c : mov dword ptr [rdx], eax ; mov byte ptr [rdx + 2], cl ; xor eax, eax ; ret
0x00000200001b3bba : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000002000002cb6d : mov dword ptr [rdx], eax ; mov eax, dword ptr [r10 + 0x24] ; mov dword ptr [r8], eax ; ret
0x0000020000044b2a : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 0x28c] ; ret
0x000002000001bd14 : mov dword ptr [rdx], eax ; mov eax, ecx ; ret
0x000002000063547a : mov dword ptr [rdx], eax ; mov eax, r8d ; ret
0x00000200001d8c2d : mov dword ptr [rdx], eax ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000464a12 : mov dword ptr [rdx], eax ; mov rax, r8 ; ret
0x0000020000099db2 : mov dword ptr [rdx], eax ; mov rax, rcx ; ret
0x00000200007124a3 : mov dword ptr [rdx], eax ; mov word ptr [rdx + 2], r8w ; ret
0x00000200001447d3 : mov dword ptr [rdx], eax ; movzx eax, cx ; add rsp, 0x38 ; ret
0x000002000015798b : mov dword ptr [rdx], eax ; or dword ptr [rdx], 0xffffffff ; mov word ptr [rdx + 4], ax ; ret
0x000002000000b3fd : mov dword ptr [rdx], eax ; ret
0x00000200000f5cbd : mov dword ptr [rdx], eax ; test r8, r8 ; jne 0x200000f5cd2 ; ret
0x000002000011f020 : mov dword ptr [rdx], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000572dd : mov dword ptr [rdx], eax ; xor eax, eax ; mov qword ptr [r8 + 8], rcx ; ret
0x0000020000558e09 : mov dword ptr [rdx], eax ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000002646a : mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000016e6da : mov dword ptr [rdx], ebx ; ret
0x00000200002117f8 : mov dword ptr [rdx], ecx ; add qword ptr [r8], 2 ; ret
0x0000020000035914 : mov dword ptr [rdx], ecx ; add rsp, 0x28 ; ret
0x0000020000144744 : mov dword ptr [rdx], ecx ; add rsp, 0x38 ; ret
0x00000200004b337d : mov dword ptr [rdx], ecx ; add rsp, 0x58 ; ret
0x0000020000433843 : mov dword ptr [rdx], ecx ; add rsp, 0x68 ; ret
0x000002000022fab5 : mov dword ptr [rdx], ecx ; cmovne rax, r9 ; ret
0x000002000012f294 : mov dword ptr [rdx], ecx ; jmp 0x2000012f25e
0x000002000068bf27 : mov dword ptr [rdx], ecx ; mov al, 1 ; ret
0x0000020000211aae : mov dword ptr [rdx], ecx ; mov eax, r8d ; ret
0x000002000023177c : mov dword ptr [rdx], ecx ; mov edx, dword ptr [r9 + rcx*4] ; mov dword ptr [r8], edx ; ret
0x000002000046a566 : mov dword ptr [rdx], ecx ; mov qword ptr [rax + 8], rcx ; xor eax, eax ; ret
0x0000020000040ec5 : mov dword ptr [rdx], ecx ; mov rax, r8 ; ret
0x0000020000410cb2 : mov dword ptr [rdx], ecx ; mov rax, rdx ; add rsp, 0x28 ; ret
0x000002000078f166 : mov dword ptr [rdx], ecx ; mov rcx, r10 ; jmp rcx
0x000002000000a3f6 : mov dword ptr [rdx], ecx ; ret
0x00000200001c8b74 : mov dword ptr [rdx], ecx ; xor al, al ; ret
0x000002000020fe57 : mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200004884fb : mov dword ptr [rdx], edi ; add byte ptr [rax - 0x7d], cl ; ret 0xe84c
0x00000200004d32f3 : mov dword ptr [rdx], edi ; add byte ptr [rcx - 0x75], cl ; pop rax ; and dh, dh ; ret
0x0000020000682fe5 : mov dword ptr [rdx], edx ; mov qword ptr [r8], rdx ; ret
0x00000200002267f9 : mov dword ptr [rdx], edx ; mov rax, r11 ; ret
0x000002000002e4e1 : mov dword ptr [rdx], edx ; mov rax, r8 ; ret
0x00000200005179e3 : mov dword ptr [rdx], esi ; ret 0x48ff
0x000002000049f321 : mov dword ptr [rdx], r8d ; mov eax, ecx ; ret
0x00000200007124a2 : mov dword ptr [rdx], r8d ; mov word ptr [rdx + 2], r8w ; ret
0x0000020000442bd4 : mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x000002000012f293 : mov dword ptr [rdx], r9d ; jmp 0x2000012f25f
0x00000200001c8b73 : mov dword ptr [rdx], r9d ; xor al, al ; ret
0x000002000023637c : mov dword ptr [rip + 0x11f95e], eax ; ret
0x00000200001daef9 : mov dword ptr [rip + 0x12b861], eax ; ret
0x0000020000600ab7 : mov dword ptr [rip + 0x147773], edx ; xor eax, eax ; ret
0x00000200005fcf3f : mov dword ptr [rip + 0x14bbcb], ebx ; call 0x2000022baa1
0x0000020000717fd4 : mov dword ptr [rip + 0x1516a], eax ; ret
0x00000200001c5cae : mov dword ptr [rip + 0x159ba4], ecx ; ret
0x00000200001c467d : mov dword ptr [rip + 0x15dc25], ecx ; ret
0x00000200005cd913 : mov dword ptr [rip + 0x17a907], eax ; ret
0x00000200001b304f : mov dword ptr [rip + 0x1a2b33], edx ; ret
0x0000020000157b28 : mov dword ptr [rip + 0x1abf7a], edx ; ret
0x0000020000711f66 : mov dword ptr [rip + 0x1b14c], eax ; ret
0x000002000013c66c : mov dword ptr [rip + 0x1b761e], ecx ; ret
0x000002000013ac04 : mov dword ptr [rip + 0x1b922e], eax ; xor eax, eax ; ret
0x000002000013abed : mov dword ptr [rip + 0x1b924d], eax ; xor eax, eax ; ret
0x0000020000157a58 : mov dword ptr [rip + 0x1c9316], eax ; ret
0x000002000012d6a0 : mov dword ptr [rip + 0x1dfb5a], edx ; ret
0x0000020000137b8f : mov dword ptr [rip + 0x1f0f7f], eax ; xor eax, eax ; ret
0x0000020000130125 : mov dword ptr [rip + 0x1f51f1], eax ; ret
0x000002000012d66e : mov dword ptr [rip + 0x1f7d84], ecx ; ret
0x000002000070a9f7 : mov dword ptr [rip + 0x226b3], ecx ; ret
0x00000200000c94c2 : mov dword ptr [rip + 0x2381cc], eax ; call r8
0x00000200000c66f2 : mov dword ptr [rip + 0x23af9c], eax ; call r8
0x00000200000cefd6 : mov dword ptr [rip + 0x23dca8], eax ; call 0x2000003b260
0x00000200000cefd5 : mov dword ptr [rip + 0x23dca8], r8d ; call 0x2000003b261
0x00000200001579fa : mov dword ptr [rip + 0x25182c], eax ; ret
0x000002000007b0eb : mov dword ptr [rip + 0x2a6d77], eax ; ret
0x0000020000042c49 : mov dword ptr [rip + 0x2dbb45], ecx ; jmp 0x20000042c1b
0x000002000045695c : mov dword ptr [rip + 0x2f18c6], eax ; ret
0x00000200007053c7 : mov dword ptr [rip + 0x55053], eax ; ret
0x000002000023676b : mov dword ptr [rip + 0xc2627], eax ; jmp 0x200002367a2
0x0000020000215b75 : mov dword ptr [rip + 0xddebd], ecx ; ret
0x000002000021fc49 : mov dword ptr [rip + 0xdf8fd], edx ; mov eax, r8d ; ret
0x000002000045175f : mov dword ptr [rip - 0x13287d], edi ; call 0x2000007d089
0x0000020000456974 : mov dword ptr [rip - 0x13317e], ecx ; ret
0x0000020000512833 : mov dword ptr [rip - 0x1eda61], eax ; call 0x200000feaa4
0x00000200005128af : mov dword ptr [rip - 0x1edadd], eax ; ret
0x0000020000502115 : mov dword ptr [rip - 0x1fe6d3], ecx ; ret
0x0000020000526e66 : mov dword ptr [rip - 0x207d44], ecx ; ret
0x0000020000518db0 : mov dword ptr [rip - 0x2169ea], eax ; or byte ptr [r10], dl ; ret
0x000002000056888c : mov dword ptr [rip - 0x265b2a], ecx ; ret
0x00000200005e9875 : mov dword ptr [rip - 0x2e5e43], ecx ; ret
0x0000020000653c66 : mov dword ptr [rip - 0x312b48], edx ; xor eax, eax ; ret
0x0000020000658813 : mov dword ptr [rip - 0x352621], ecx ; jmp 0x200006587e5
0x00000200006588f1 : mov dword ptr [rip - 0x3526ff], ecx ; jmp 0x200006588c3
0x0000020000710ea0 : mov dword ptr [rip - 0x40ad8a], ecx ; ret
0x000002000071710d : mov dword ptr [rip - 0x4176eb], ecx ; ret
0x0000020000726009 : mov dword ptr [rip - 0x42d02f], ecx ; ret
0x00000200007d275d : mov dword ptr [rip - 0x47cb63], ecx ; xor eax, eax ; ret
0x00000200007b7dbb : mov dword ptr [rip - 0x498b65], ecx ; ret
0x00000200007bd2e1 : mov dword ptr [rip - 0x49c3ff], ecx ; ret
0x00000200007bcaf7 : mov dword ptr [rip - 0x49f7c5], edx ; ret
0x00000200007ab4a9 : mov dword ptr [rip - 0x4a9f0f], edx ; ret
0x00000200007baf70 : mov dword ptr [rip - 0x4b7c76], ecx ; ret
0x00000200007bc4cc : mov dword ptr [rip - 0x4b9452], ecx ; ret
0x00000200007b41ec : mov dword ptr [rip - 0x4b9d92], ebx ; call 0x20000080448
0x00000200007bbac1 : mov dword ptr [rip - 0x4ba377], ecx ; ret
0x000002000048aa69 : mov dword ptr [rip - 0x74bbffec], ecx ; ret
0x000002000045334a : mov dword ptr [rip - 0x74ffea46], edi ; ret
0x00000200000985df : mov dword ptr [rip - 0x7c41f100], eax ; ret
0x000002000040b2f5 : mov dword ptr [rsi + 0x10], eax ; call 0x20000157545
0x0000020000457d46 : mov dword ptr [rsi + 0x1b8], eax ; call 0x2000007d089
0x00000200004320e3 : mov dword ptr [rsi + 0x24], ebx ; call 0x2000005c2c6
0x00000200005dd632 : mov dword ptr [rsi + 0x3c], eax ; jmp 0x200004d9919
0x00000200005c31b9 : mov dword ptr [rsi + 0x74], 1 ; jmp 0x2000046f47e
0x00000200006d1823 : mov dword ptr [rsi + 2], edx ; lea ecx, dword ptr [rdx - 0x23] ; call 0x2000024da48
0x00000200005c9cd5 : mov dword ptr [rsi + 4], edi ; jmp 0x200004847a1
0x00000200004320e0 : mov dword ptr [rsi + 8], eax ; mov dword ptr [rsi + 0x24], ebx ; call 0x2000005c2c9
0x00000200005ea05b : mov dword ptr [rsi + 8], esp ; call 0x2000007f5c3
0x000002000019a6ca : mov dword ptr [rsi + rbx*8 - 0xf], esi ; push rsi ; ret 0xf42
0x00000200006a6815 : mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x200006a680d
0x00000200001e3873 : mov dword ptr [rsi - 0x13], esp ; inc dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x0000020000516263 : mov dword ptr [rsi - 0x7424cc01], edi ; ret
0x0000020000112a8e : mov dword ptr [rsi], eax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000010fa21 : mov dword ptr [rsi], eax ; mov rsi, qword ptr [rsp + 0x20] ; pop r14 ; ret
0x00000200004f12ce : mov dword ptr [rsi], ecx ; add rsp, 0x20 ; pop r14 ; ret
0x000002000015c537 : mov dword ptr [rsi], edi ; jmp 0x2000015c500
0x0000020000628ecc : mov dword ptr [rsi], edx ; xor edx, edx ; call 0x2000024d007
0x00000200003debfb : mov dword ptr [rsi], esp ; call 0x200000095d5
0x00000200003debfa : mov dword ptr [rsi], r12d ; call 0x200000095d6
0x00000200005f86df : mov dword ptr [rsp + 0x20], 0xa6e84041 ; ret
0x0000020000457aeb : mov dword ptr [rsp + 0x20], 0xc8 ; call r10
0x00000200003f7e04 : mov dword ptr [rsp + 0x20], 2 ; call r12
0x000002000045cb79 : mov dword ptr [rsp + 0x20], 2 ; call r14
0x00000200005f4589 : mov dword ptr [rsp + 0x20], 2 ; call r15
0x00000200003f6675 : mov dword ptr [rsp + 0x20], 2 ; call rdi
0x00000200006dbdaa : mov dword ptr [rsp + 0x20], 2 ; call rsi
0x00000200001d93a3 : mov dword ptr [rsp + 0x20], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000020e6ec : mov dword ptr [rsp + 0x20], eax ; add rsp, 0x38 ; ret
0x00000200004f09c5 : mov dword ptr [rsp + 0x20], eax ; call 0x2000003cbf2
0x000002000043c5fa : mov dword ptr [rsp + 0x20], eax ; call 0x20000069b07
0x00000200005221ec : mov dword ptr [rsp + 0x20], eax ; call 0x20000147f77
0x000002000051c216 : mov dword ptr [rsp + 0x20], eax ; call 0x20000148177
0x0000020000527c46 : mov dword ptr [rsp + 0x20], eax ; call 0x200001484d7
0x000002000051f29d : mov dword ptr [rsp + 0x20], eax ; call 0x200001486b7
0x00000200006783a3 : mov dword ptr [rsp + 0x20], eax ; call 0x200002045be
0x00000200007d09b4 : mov dword ptr [rsp + 0x20], eax ; call 0x200003f7cf3
0x00000200007d08df : mov dword ptr [rsp + 0x20], eax ; call 0x200003fec87
0x000002000069f6a5 : mov dword ptr [rsp + 0x20], eax ; call 0x2000044b98e
0x00000200003ef95f : mov dword ptr [rsp + 0x20], eax ; call 0x2000050bc42
0x000002000068fc45 : mov dword ptr [rsp + 0x20], eax ; call qword ptr [r10]
0x00000200000313dc : mov dword ptr [rsp + 0x20], eax ; call qword ptr [rbx]
0x00000200006319ea : mov dword ptr [rsp + 0x20], eax ; call qword ptr [rip - 0x3db19c]
0x0000020000631a1b : mov dword ptr [rsp + 0x20], eax ; call qword ptr [rip - 0x3db1cd]
0x00000200003f358f : mov dword ptr [rsp + 0x20], eax ; call qword ptr [rsi]
0x000002000000c16a : mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200003f75a2 : mov dword ptr [rsp + 0x20], eax ; call r11
0x00000200003f547f : mov dword ptr [rsp + 0x20], eax ; call r12
0x0000020000430494 : mov dword ptr [rsp + 0x20], eax ; call r15
0x00000200001a0336 : mov dword ptr [rsp + 0x20], eax ; call rbx
0x0000020000707f44 : mov dword ptr [rsp + 0x20], eax ; call rdi
0x00000200001df3fe : mov dword ptr [rsp + 0x20], eax ; lea ecx, dword ptr [rdx + 0x75] ; call 0x2000014b6f9
0x00000200006dd0e9 : mov dword ptr [rsp + 0x20], eax ; lea r8d, dword ptr [r9 + 1] ; call rdi
0x00000200003f54d1 : mov dword ptr [rsp + 0x20], eax ; lea r8d, dword ptr [r9 - 1] ; call r12
0x0000020000400f7f : mov dword ptr [rsp + 0x20], eax ; lea r8d, dword ptr [r9 - 3] ; call rsi
0x0000020000090cda : mov dword ptr [rsp + 0x20], eax ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x00000200003fa5f1 : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rbp - 0x40], rsi ; call r10
0x00000200001feed0 : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rsp + 0x28], r8 ; call rdx
0x000002000050d82d : mov dword ptr [rsp + 0x20], eax ; mov r8b, r11b ; call r12
0x00000200003f3869 : mov dword ptr [rsp + 0x20], eax ; mov rcx, r11 ; call r10
0x0000020000478108 : mov dword ptr [rsp + 0x20], eax ; xor edx, edx ; call 0x2000009e099
0x00000200004ca064 : mov dword ptr [rsp + 0x20], ebp ; call r10
0x000002000070f8d5 : mov dword ptr [rsp + 0x20], ebp ; call rax
0x00000200006d8545 : mov dword ptr [rsp + 0x20], ebp ; call rdi
0x0000020000441ea9 : mov dword ptr [rsp + 0x20], ebp ; mov rcx, rsi ; call rdi
0x00000200007d1477 : mov dword ptr [rsp + 0x20], ebx ; call 0x200003fec87
0x00000200005f897c : mov dword ptr [rsp + 0x20], ebx ; call r10
0x00000200005a9b28 : mov dword ptr [rsp + 0x20], ecx ; call 0x200001d1a03
0x00000200006d82b5 : mov dword ptr [rsp + 0x20], ecx ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x00000200006d8749 : mov dword ptr [rsp + 0x20], ecx ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x000002000045d824 : mov dword ptr [rsp + 0x20], ecx ; lea r8d, dword ptr [r9 + 3] ; call rdi
0x00000200004581ad : mov dword ptr [rsp + 0x20], ecx ; lea r8d, dword ptr [r9 - 1] ; call rdi
0x0000020000478acd : mov dword ptr [rsp + 0x20], ecx ; mov dword ptr [rsp + 0x2c], ecx ; jmp 0x20000478aa2
0x000002000070f8af : mov dword ptr [rsp + 0x20], ecx ; mov r9, rbx ; call rax
0x00000200003f937e : mov dword ptr [rsp + 0x20], ecx ; mov rcx, r11 ; call rax
0x00000200007074ff : mov dword ptr [rsp + 0x20], ecx ; mov rcx, r13 ; call rax
0x0000020000708fa9 : mov dword ptr [rsp + 0x20], ecx ; mov rcx, r14 ; call rax
0x0000020000460b41 : mov dword ptr [rsp + 0x20], ecx ; mov rcx, rbx ; call rax
0x000002000021f1ef : mov dword ptr [rsp + 0x20], ecx ; mov rcx, rdi ; call rax
0x00000200007080c4 : mov dword ptr [rsp + 0x20], ecx ; mov rcx, rsi ; call r12
0x000002000019f6bc : mov dword ptr [rsp + 0x20], edi ; call rax
0x00000200006ae945 : mov dword ptr [rsp + 0x20], edi ; call rdi
0x00000200005ad337 : mov dword ptr [rsp + 0x20], edi ; mov r8d, ebx ; mov cl, 0x15 ; call rax
0x00000200000a95a9 : mov dword ptr [rsp + 0x20], edi ; mov rcx, r12 ; call 0x200000a58b9
0x00000200005878d3 : mov dword ptr [rsp + 0x20], edi ; xor ecx, ecx ; call qword ptr [rsi]
0x000002000041bd23 : mov dword ptr [rsp + 0x20], edx ; call r11
0x00000200006c694f : mov dword ptr [rsp + 0x20], edx ; call rax
0x000002000023b5fe : mov dword ptr [rsp + 0x20], edx ; mov edx, esi ; call r11
0x000002000022bf64 : mov dword ptr [rsp + 0x20], edx ; mov rdx, rsi ; call r10
0x000002000062c1bf : mov dword ptr [rsp + 0x20], esi ; call qword ptr [rax]
0x00000200003fff11 : mov dword ptr [rsp + 0x20], esi ; call qword ptr [rsi]
0x00000200006bf49c : mov dword ptr [rsp + 0x20], esi ; call r10
0x00000200003ff06c : mov dword ptr [rsp + 0x20], esi ; call r12
0x00000200006da7db : mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200004d401c : mov dword ptr [rsp + 0x20], esi ; call rbx
0x000002000072a7f8 : mov dword ptr [rsp + 0x20], esi ; mov dword ptr [rsp + 0x2c], r15d ; call rax
0x00000200003f7d8b : mov dword ptr [rsp + 0x20], esi ; mov rcx, r13 ; call r12
0x00000200003f7c60 : mov dword ptr [rsp + 0x20], esi ; mov rcx, r13 ; call r14
0x000002000054e607 : mov dword ptr [rsp + 0x20], esi ; mov rcx, r13 ; call r15
0x000002000045cae2 : mov dword ptr [rsp + 0x20], esi ; mov rcx, r15 ; call r14
0x0000020000594f6d : mov dword ptr [rsp + 0x20], esi ; xor r8d, r8d ; mov cl, 0x1b ; call rax
0x0000020000638db4 : mov dword ptr [rsp + 0x20], esp ; call 0x20000644fe2
0x00000200006be836 : mov dword ptr [rsp + 0x20], esp ; call r10
0x0000020000606885 : mov dword ptr [rsp + 0x20], esp ; mov r8d, ebx ; call rax
0x000002000058f8d2 : mov dword ptr [rsp + 0x20], esp ; mov r8d, ebx ; mov cl, 0xc ; call rax
0x00000200003f36b7 : mov dword ptr [rsp + 0x20], esp ; mov rcx, r14 ; call qword ptr [rsi]
0x00000200007d08a7 : mov dword ptr [rsp + 0x20], esp ; xor ecx, ecx ; call 0x200003f7bc5
0x000002000041bd22 : mov dword ptr [rsp + 0x20], r10d ; call r11
0x00000200006be835 : mov dword ptr [rsp + 0x20], r12d ; call r10
0x00000200006d8544 : mov dword ptr [rsp + 0x20], r13d ; call rdi
0x00000200003ff06b : mov dword ptr [rsp + 0x20], r14d ; call r12
0x00000200004d401b : mov dword ptr [rsp + 0x20], r14d ; call rbx
0x00000200003f7d8a : mov dword ptr [rsp + 0x20], r14d ; mov rcx, r13 ; call r12
0x00000200006ae944 : mov dword ptr [rsp + 0x20], r15d ; call rdi
0x00000200006d82b4 : mov dword ptr [rsp + 0x20], r9d ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x00000200006d8748 : mov dword ptr [rsp + 0x20], r9d ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x000002000045d823 : mov dword ptr [rsp + 0x20], r9d ; lea r8d, dword ptr [r9 + 3] ; call rdi
0x00000200004581ac : mov dword ptr [rsp + 0x20], r9d ; lea r8d, dword ptr [r9 - 1] ; call rdi
0x000002000070f8ae : mov dword ptr [rsp + 0x20], r9d ; mov r9, rbx ; call rax
0x0000020000706005 : mov dword ptr [rsp + 0x24], ebx ; jmp 0x20000705fd3
0x00000200005028fa : mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x200005028c9
0x0000020000706004 : mov dword ptr [rsp + 0x24], r11d ; jmp 0x20000705fd4
0x00000200001feed5 : mov dword ptr [rsp + 0x28], eax ; call rdx
0x00000200004d4017 : mov dword ptr [rsp + 0x28], eax ; mov dword ptr [rsp + 0x20], r14d ; call rbx
0x0000020000478ad1 : mov dword ptr [rsp + 0x2c], ecx ; jmp 0x20000478a9e
0x000002000072a7fd : mov dword ptr [rsp + 0x2c], edi ; call rax
0x000002000072a7fc : mov dword ptr [rsp + 0x2c], r15d ; call rax
0x000002000045bfed : mov dword ptr [rsp + 0x30], 0x8b44131b ; ret
0x000002000020e732 : mov dword ptr [rsp + 0x30], eax ; add rsp, 0x48 ; ret
0x000002000043e9ce : mov dword ptr [rsp + 0x30], eax ; add rsp, 0x50 ; pop rbx ; ret
0x00000200007bcb34 : mov dword ptr [rsp + 0x30], eax ; call 0x200003e9a07
0x000002000016daff : mov dword ptr [rsp + 0x30], eax ; call r8
0x000002000022c61d : mov dword ptr [rsp + 0x30], eax ; mov rcx, qword ptr [r8 + 0x30] ; call r9
0x000002000058e00f : mov dword ptr [rsp + 0x30], ebx ; call r11
0x000002000020774b : mov dword ptr [rsp + 0x30], ebx ; jmp 0x20000207719
0x00000200003efd4b : mov dword ptr [rsp + 0x30], ebx ; jmp 0x200003efd70
0x000002000052ddce : mov dword ptr [rsp + 0x30], ebx ; pop rbx ; jmp r10
0x00000200003fae1b : mov dword ptr [rsp + 0x30], edi ; jmp 0x200003fae43
0x000002000002c11b : mov dword ptr [rsp + 0x34], eax ; jmp 0x2000002c17d
0x00000200007d1410 : mov dword ptr [rsp + 0x34], esi ; call 0x200003fec87
0x000002000061f117 : mov dword ptr [rsp + 0x38], eax ; call 0x2000024da47
0x00000200005303ec : mov dword ptr [rsp + 0x38], ebx ; lea rcx, qword ptr [rsp + 0x20] ; call rdi
0x00000200001cb56e : mov dword ptr [rsp + 0x38], edx ; call r9
0x00000200006ca767 : mov dword ptr [rsp + 0x38], edx ; jmp 0x200006ca734
0x0000020000108f0f : mov dword ptr [rsp + 0x3c], esi ; call r9
0x0000020000108f0e : mov dword ptr [rsp + 0x3c], r14d ; call r9
0x00000200003e11cf : mov dword ptr [rsp + 0x40], eax ; call 0x20000009857
0x0000020000201583 : mov dword ptr [rsp + 0x40], ebx ; call rax
0x00000200005d9100 : mov dword ptr [rsp + 0x40], ebx ; jmp 0x200004c5406
0x00000200006dc286 : mov dword ptr [rsp + 0x40], esi ; call r10
0x00000200003d7ce9 : mov dword ptr [rsp + 0x44], eax ; jmp 0x200003d392f
0x000002000011e99d : mov dword ptr [rsp + 0x50], 0 ; call rsi
0x00000200006b72fc : mov dword ptr [rsp + 0x50], eax ; inc edx ; jmp 0x200006b72d5
0x000002000043a4d6 : mov dword ptr [rsp + 0x50], edx ; jmp 0x2000043a4a3
0x0000020000680b54 : mov dword ptr [rsp + 0x50], esi ; inc edx ; jmp 0x20000680b3e
0x00000200003f737a : mov dword ptr [rsp + 0x54], ebx ; call r10
0x00000200003f7379 : mov dword ptr [rsp + 0x54], r11d ; call r10
0x00000200004b79cf : mov dword ptr [rsp + 0x58], edi ; call 0x200004b75d8
0x00000200004cb58c : mov dword ptr [rsp + 0x5c], edx ; mov eax, edx ; jmp 0x200004cb53a
0x00000200004dfad9 : mov dword ptr [rsp + 0x60], eax ; jmp 0x200004dfaa6
0x00000200004c6fbe : mov dword ptr [rsp + 0x60], ecx ; call 0x200000e7217
0x000002000062c7d5 : mov dword ptr [rsp + 0x68], ebx ; call 0x2000024d007
0x00000200003fd5e5 : mov dword ptr [rsp + 0x68], ebx ; call r10
0x0000020000161889 : mov dword ptr [rsp + 0x68], esi ; mov ecx, 0x10 ; call rax
0x00000200003fd5e4 : mov dword ptr [rsp + 0x68], r11d ; call r10
0x00000200001bfa5b : mov dword ptr [rsp + 0x6c], ebx ; mov rcx, qword ptr [rsp + 0x68] ; call rax
0x000002000014626e : mov dword ptr [rsp + 0x70], eax ; call r11
0x00000200004bb548 : mov dword ptr [rsp + 0x70], ebp ; call 0x200000e7217
0x00000200001a5f66 : mov dword ptr [rsp + 0x7c], edx ; jmp 0x200000e13a8
0x00000200004c0e3d : mov dword ptr [rsp + 0xa0], esp ; call 0x200000bd0d9
0x0000020000157b79 : mov dword ptr [rsp + 0xc], eax ; mov rax, qword ptr [rsp + 8] ; ret
0x00000200003ce3d4 : mov dword ptr [rsp + 0xf8], esi ; call qword ptr [r15]
0x00000200004d0df3 : mov dword ptr [rsp + 4], eax ; call 0x200000faca7
0x000002000007e894 : mov dword ptr [rsp + 8], eax ; cmp eax, r8d ; jb 0x2000007e889 ; ret
0x000002000013fb70 : mov dword ptr [rsp + 8], ecx ; ldmxcsr dword ptr [rsp + 8] ; ret
0x00000200001c7bab : mov dword ptr [rsp + rbp*8 - 1], ebp ; jmp 0x200001c7bd0
0x00000200007bbac3 : mov dword ptr [rsp + rsi*4 - 1], ebx ; ret
0x00000200003dc0c3 : mov dword ptr [rsp + rsi*8 - 0x38af1701], eax ; ret 0x33ff
0x00000200001b8653 : mov dword ptr [rsp], eax ; add rsp, 0x18 ; ret
0x000002000049eb2c : mov dword ptr [rsp], eax ; mov eax, edx ; add rsp, 0x18 ; ret
0x000002000070d3ce : mov dword ptr ds:[rax + rax], 0x28c48348 ; ret
0x00000200001b1cf5 : mov dword ptr fs:[rcx + r9*4 + 0x747ee0], eax ; ret
0x0000020000056ec3 : mov eax, 0 ; seta al ; ret
0x00000200000b68af : mov eax, 0 ; sete al ; ret
0x000002000003fc56 : mov eax, 0 ; setne al ; ret
0x000002000070560f : mov eax, 0x10 ; call 0x200001518a7
0x0000020000007034 : mov eax, 0x10 ; ret
0x0000020000669e8c : mov eax, 0x100 ; ret
0x00000200007d4f5c : mov eax, 0x1000 ; ret
0x00000200004642fb : mov eax, 0x10000 ; mov eax, r8d ; ret
0x00000200004aa111 : mov eax, 0x100000 ; ret
0x000002000062c47b : mov eax, 0x102 ; ret
0x0000020000219cff : mov eax, 0x103 ; add rsp, 0x28 ; ret
0x000002000017633b : mov eax, 0x128 ; jmp 0x20000112630
0x00000200001d312c : mov eax, 0x137f ; ret
0x000002000017d1b2 : mov eax, 0x14 ; ret
0x00000200005303df : mov eax, 0x150 ; call 0x20000157888
0x000002000013bc69 : mov eax, 0x16 ; add rsp, 0x38 ; ret
0x00000200000d3264 : mov eax, 0x18 ; ret
0x00000200005699bc : mov eax, 0x1c ; ret
0x000002000069e3ec : mov eax, 0x1e ; ret
0x00000200007d4f56 : mov eax, 0x2000 ; ret
0x00000200004ac564 : mov eax, 0x2000000 ; ret
0x000002000079636d : mov eax, 0x200f44ff ; ret 0x2b8
0x000002000065179d : mov eax, 0x20207050 ; call 0x2000024da47
0x0000020000188a15 : mov eax, 0x21 ; ret
0x00000200007a5b63 : mov eax, 0x2474894c ; and al, ch ; ret 0x9a26
0x000002000069e439 : mov eax, 0x28 ; ret
0x0000020000682777 : mov eax, 0x2d0 ; ret
0x000002000021e6a4 : mov eax, 0x30 ; ret
0x000002000069e40d : mov eax, 0x32 ; ret
0x00000200001c0f38 : mov eax, 0x350059 ; ret
0x000002000079bdf3 : mov eax, 0x35894cff ; test byte ptr [rbx], al ; ret 0x48ff
0x00000200003d6a27 : mov eax, 0x39e8fff1 ; pop rsi ; ret
0x000002000069e41c : mov eax, 0x3c ; ret
0x0000020000008386 : mov eax, 0x3e8 ; ret
0x00000200004aa105 : mov eax, 0x40000 ; ret
0x0000020000013564 : mov eax, 0x40000000 ; sti ; idiv bh ; jmp qword ptr [rcx]
0x00000200005698f8 : mov eax, 0x4000001 ; xor eax, eax ; ret
0x00000200005cc546 : mov eax, 0x41000000 ; call rsi
0x00000200004c0da9 : mov eax, 0x41000000 ; pop rbp ; pop rsi ; ret
0x000002000047ea19 : mov eax, 0x41000000 ; pop rsp ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004c9138 : mov eax, 0x41000001 ; pop rbp ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000027993 : mov eax, 0x41000006 ; inc edx ; jmp 0x200000279ca
0x00000200005d0685 : mov eax, 0x418 ; call 0x20000157889
0x000002000062d34a : mov eax, 0x44536f49 ; call 0x2000024da48
0x000002000066178a : mov eax, 0x45646156 ; call 0x2000024da47
0x00000200006900e1 : mov eax, 0x48000000 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000564981 : mov eax, 0x48000000 ; add esp, 0x20 ; pop rdi ; ret
0x0000020000004fcf : mov eax, 0x48000016 ; add esp, 0x20 ; pop rdi ; ret
0x00000200001bc190 : mov eax, 0x48000058 ; add esp, 0x28 ; ret
0x00000200004254aa : mov eax, 0x480017a8 ; add esp, 0x28 ; ret
0x000002000061c6b4 : mov eax, 0x48ffb1e5 ; add esp, 0x60 ; pop rbx ; ret
0x00000200007bc2c8 : mov eax, 0x48ffc29c ; add esp, 0x40 ; pop rbx ; ret
0x00000200001bfed4 : mov eax, 0x48fff55a ; add esp, 0x30 ; pop rbx ; ret
0x0000020000415ba4 : mov eax, 0x49000003 ; mov ecx, esp ; call 0x20000061dc9
0x00000200005dd2af : mov eax, 0x49ffefc9 ; mov ecx, esp ; call 0x20000479559
0x0000020000620aee : mov eax, 0x4d574454 ; call 0x2000024da48
0x000002000061fc92 : mov eax, 0x57676244 ; call 0x2000024da48
0x0000020000037c10 : mov eax, 0x58 ; ret
0x000002000079c7f5 : mov eax, 0x58948ff ; ret 0xb856
0x000002000045177a : mov eax, 0x59706e50 ; call 0x2000024da47
0x000002000006808f : mov eax, 0x5b000000 ; pop rbp ; ret
0x0000020000204db6 : mov eax, 0x5d7bea7 ; ret 0x109e
0x000002000069fa86 : mov eax, 0x5f000000 ; pop rbx ; ret
0x000002000021fe86 : mov eax, 0x5f000000 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000063e199 : mov eax, 0x5f000001 ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000711745 : mov eax, 0x61436656 ; call 0x2000024da47
0x0000020000626eac : mov eax, 0x65546f49 ; call 0x2000024da48
0x0000020000623d71 : mov eax, 0x68745346 ; call 0x2000024da48
0x0000020000627b3c : mov eax, 0x6d4e6f49 ; call 0x2000024da48
0x000002000043fee3 : mov eax, 0x70617350 ; call 0x2000006c738
0x000002000062a0b0 : mov eax, 0x706d644c ; call 0x2000024da48
0x0000020000628f9a : mov eax, 0x72546f49 ; call 0x2000024da48
0x00000200000f1828 : mov eax, 0x7756694d ; call 0x2000024da47
0x000002000000838c : mov eax, 0x7d0 ; ret
0x00000200004aa10b : mov eax, 0x80000 ; ret
0x00000200005c20c2 : mov eax, 0x80000014 ; ret
0x0000020000547ad7 : mov eax, 0x8000001a ; ret
0x000002000062c487 : mov eax, 0x8000001c ; ret
0x000002000021ca48 : mov eax, 0x8007007a ; mov word ptr [rcx], r11w ; ret
0x00000200001b8ecc : mov eax, 0x80070216 ; ret
0x00000200000cec77 : mov eax, 0x8149002d ; ret 0x3600
0x00000200001ad9ce : mov eax, 0x8441001f ; ret 0x840f
0x00000200004719a9 : mov eax, 0x848b48ff ; ret 0x8930
0x00000200003e724c : mov eax, 0x850ffff3 ; stosb byte ptr [rdi], al ; ret 0x19
0x00000200005b21f3 : mov eax, 0x8548ffc9 ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200000ae618 : mov eax, 0x85fff734 ; ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000020000464a41 : mov eax, 0x8664 ; ret
0x000002000061bfc9 : mov eax, 0x8a000000 ; xchg eax, ecx ; ret 6
0x000002000005d9d5 : mov eax, 0x8b000000 ; ret
0x000002000011497c : mov eax, 0x8b00001b ; ret
0x000002000017a69c : mov eax, 0x8b00049e ; ret
0x00000200000061d4 : mov eax, 0x8b000848 ; ret
0x0000020000551300 : mov eax, 0x8b01ffda ; ret
0x00000200000c0678 : mov eax, 0x8b41e3eb ; ret
0x00000200000d74af : mov eax, 0x8b48000c ; ret
0x00000200005d3829 : mov eax, 0x8b48ffed ; jns 0x200005d3851 ; jmp 0x200004afabf
0x00000200001de206 : mov eax, 0x8b48fff0 ; add ecx, dword ptr [rax + 0x3b] ; ret
0x0000020000194418 : mov eax, 0x8b48fff0 ; ret 0x2b49
0x0000020000167399 : mov eax, 0x8b4cffeb ; ret
0x000002000066f447 : mov eax, 0x8b4dccff ; ret 0x8348
0x00000200000c1e6d : mov eax, 0x8bed3345 ; ret 0x3245
0x000002000079e144 : mov eax, 0x8bffaaee ; ret
0x00000200006b6d44 : mov eax, 0x8bffb962 ; ret
0x00000200005495c4 : mov eax, 0x8bffc0e2 ; ret
0x000002000079de8b : mov eax, 0xb1e801ff ; ret
0x0000020000048077 : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200006715be : mov eax, 0xc ; ret
0x00000200001bc297 : mov eax, 0xc0000001 ; add rsp, 0x28 ; ret
0x0000020000129689 : mov eax, 0xc0000001 ; add rsp, 0x38 ; ret
0x0000020000509dd9 : mov eax, 0xc0000001 ; jmp 0x20000509da8
0x0000020000007c40 : mov eax, 0xc0000001 ; ret
0x00000200001399fd : mov eax, 0xc0000002 ; add rsp, 0x28 ; ret
0x00000200000f41c1 : mov eax, 0xc0000002 ; ret
0x00000200005332b9 : mov eax, 0xc0000003 ; ret
0x00000200006691a9 : mov eax, 0xc0000004 ; ret
0x0000020000235699 : mov eax, 0xc000000d ; add rsp, 0x28 ; ret
0x00000200001c0616 : mov eax, 0xc000000d ; add rsp, 0x38 ; ret
0x00000200005ebd7a : mov eax, 0xc000000d ; jmp 0x20000507fd6
0x000002000050d54b : mov eax, 0xc000000d ; jmp 0x2000050d51a
0x000002000062b453 : mov eax, 0xc000000d ; mov eax, r8d ; ret
0x0000020000002906 : mov eax, 0xc000000d ; ret
0x000002000064f9bc : mov eax, 0xc000000e ; add rsp, 0x28 ; ret
0x00000200001d27b3 : mov eax, 0xc000000e ; mov eax, r8d ; ret
0x000002000022b80c : mov eax, 0xc000000e ; ret
0x0000020000033fd6 : mov eax, 0xc0000010 ; add rsp, 0x28 ; ret
0x00000200000398fd : mov eax, 0xc0000016 ; add rsp, 0x28 ; ret
0x00000200005a0aa2 : mov eax, 0xc0000017 ; jmp 0x20000427ffe
0x000002000056799c : mov eax, 0xc0000022 ; add rsp, 0x28 ; ret
0x00000200004b18f6 : mov eax, 0xc0000022 ; jmp 0x200004b18c5
0x00000200001bc20e : mov eax, 0xc0000022 ; ret
0x000002000022d969 : mov eax, 0xc0000023 ; and dword ptr [r9], 0 ; ret
0x00000200005062fd : mov eax, 0xc0000023 ; jmp 0x200005062cc
0x0000020000217254 : mov eax, 0xc0000023 ; ret
0x000002000062c3fb : mov eax, 0xc0000032 ; ret
0x0000020000009a09 : mov eax, 0xc0000033 ; ret
0x0000020000009a0f : mov eax, 0xc0000034 ; ret
0x000002000062c4f6 : mov eax, 0xc0000038 ; ret
0x00000200000088d1 : mov eax, 0xc0000054 ; add rsp, 0x28 ; ret
0x000002000064d73a : mov eax, 0xc0000056 ; add rsp, 0x28 ; ret
0x000002000064d5c0 : mov eax, 0xc0000056 ; ret
0x000002000000bfd8 : mov eax, 0xc0000058 ; ret
0x0000020000235097 : mov eax, 0xc0000060 ; mov eax, r8d ; ret
0x00000200001b4d9b : mov eax, 0xc0000061 ; add rsp, 0x28 ; ret
0x0000020000445774 : mov eax, 0xc0000079 ; ret
0x00000200001e4b2b : mov eax, 0xc000007b ; ret
0x000002000062c419 : mov eax, 0xc000007f ; ret
0x000002000069e3b7 : mov eax, 0xc0000088 ; ret
0x00000200005cfb73 : mov eax, 0xc0000095 ; jmp 0x2000049bdb9
0x00000200006d1350 : mov eax, 0xc0000095 ; mov dword ptr [r8], r9d ; ret
0x0000020000026457 : mov eax, 0xc0000095 ; ret
0x0000020000645fcf : mov eax, 0xc000009a ; add rsp, 0x28 ; ret
0x00000200001bf02d : mov eax, 0xc000009a ; add rsp, 0x38 ; ret
0x00000200000712ed : mov eax, 0xc000009a ; jmp 0x200000712bd
0x00000200005cfb69 : mov eax, 0xc000009a ; jmp 0x2000049bdb9
0x000002000050464e : mov eax, 0xc000009a ; jmp 0x2000050461e
0x00000200007cbe1e : mov eax, 0xc000009a ; jmp 0x200007b809b
0x0000020000117c67 : mov eax, 0xc000009a ; ret
0x000002000062c407 : mov eax, 0xc00000a2 ; ret
0x000002000062c4fc : mov eax, 0xc00000a3 ; ret
0x00000200001c124f : mov eax, 0xc00000bb ; add rsp, 0x28 ; ret
0x000002000001f7d9 : mov eax, 0xc00000bb ; ret
0x000002000043ee91 : mov eax, 0xc00000e7 ; ret
0x0000020000411e47 : mov eax, 0xc00000ef ; add rsp, 0x28 ; ret
0x00000200001e3226 : mov eax, 0xc00000ef ; add rsp, 0x38 ; ret
0x0000020000428265 : mov eax, 0xc00000ef ; ret
0x00000200001c978c : mov eax, 0xc00000f0 ; add rsp, 0x38 ; ret
0x000002000042826b : mov eax, 0xc00000f0 ; ret
0x000002000017abf0 : mov eax, 0xc00000f1 ; ret
0x0000020000121ecb : mov eax, 0xc00000f2 ; ret
0x000002000053f0c4 : mov eax, 0xc00000f4 ; ret
0x000002000062c481 : mov eax, 0xc0000100 ; ret
0x00000200000096a4 : mov eax, 0xc0000106 ; ret
0x000002000002ce18 : mov eax, 0xc0000109 ; ret
0x000002000020bdbe : mov eax, 0xc000010a ; add rsp, 0x28 ; ret
0x000002000062af4f : mov eax, 0xc0000120 ; ret
0x0000020000569734 : mov eax, 0xc0000148 ; ret
0x000002000062c48d : mov eax, 0xc0000178 ; ret
0x000002000062c40d : mov eax, 0xc0000185 ; ret
0x0000020000548b45 : mov eax, 0xc0000189 ; ret
0x0000020000231774 : mov eax, 0xc00001a2 ; ret
0x0000020000101223 : mov eax, 0xc00001af ; ret
0x000002000050b6f3 : mov eax, 0xc0000206 ; ret
0x00000200000c5dcb : mov eax, 0xc0000225 ; add rsp, 0x28 ; ret
0x00000200007ac235 : mov eax, 0xc0000225 ; jmp 0x200007ac205
0x0000020000009a03 : mov eax, 0xc0000225 ; ret
0x000002000062c4f0 : mov eax, 0xc0000240 ; ret
0x000002000014e708 : mov eax, 0xc0000258 ; ret
0x0000020000002900 : mov eax, 0xc000025f ; ret
0x000002000053ea4e : mov eax, 0xc0000263 ; add rsp, 0x28 ; ret
0x000002000062c39d : mov eax, 0xc000026c ; ret
0x000002000062c493 : mov eax, 0xc0000272 ; ret
0x00000200005ec822 : mov eax, 0xc00002c5 ; ret
0x0000020000653c3b : mov eax, 0xc0000303 ; ret
0x00000200001d209c : mov eax, 0xc0000354 ; ret
0x00000200000837ed : mov eax, 0xc0000409 ; ret
0x0000020000460bcf : mov eax, 0xc0000428 ; ret
0x000002000070fed3 : mov eax, 0xc000042a ; ret
0x000002000062c401 : mov eax, 0xc0000454 ; ret
0x0000020000455ab9 : mov eax, 0xc0000718 ; ret
0x0000020000009555 : mov eax, 0xc3000000 ; xor eax, eax ; ret
0x000002000065c4dd : mov eax, 0xc48348ff ; pop rax ; ret
0x00000200007a1598 : mov eax, 0xc48348ff ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000065cc3b : mov eax, 0xc48348ff ; ret
0x000002000022df90 : mov eax, 0xd0ff000c ; add rsp, 0x28 ; ret
0x0000020000695ac2 : mov eax, 0xd6158d48 ; ret 0xffed
0x0000020000537216 : mov eax, 0xd8 ; call 0x20000157888
0x0000020000461be0 : mov eax, 0xe8000000 ; out -0x43, eax ; ret
0x000002000019b730 : mov eax, 0xe8000000 ; ret
0x000002000051d0fb : mov eax, 0xe8000001 ; jl 0x2000051d0b0 ; ret
0x000002000014b5a5 : mov eax, 0xe9000001 ; xchg eax, edx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x0000020000196018 : mov eax, 0xeb000000 ; or ecx, dword ptr [rcx + 0x23] ; ret
0x00000200003dd47c : mov eax, 0xeb000000 ; sub al, 0x8b ; ret
0x00000200001da172 : mov eax, 0xeb000001 ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200007a0ba2 : mov eax, 0xec8189ff ; pop rbx ; add byte ptr [rax], al ; ret
0x000002000016f63b : mov eax, 0xf000000 ; xchg eax, ebp ; ret
0x00000200001c566b : mov eax, 0xf000000 ; xchg eax, ebp ; ret 0x8948
0x0000020000149d44 : mov eax, 0xf5 ; jmp 0x20000156047
0x0000020000149d64 : mov eax, 0xf6 ; jmp 0x20000156047
0x000002000007e667 : mov eax, 0xf6000000 ; ret
0x000002000066629c : mov eax, 0xf6000000 ; ret 0x7401
0x0000020000502422 : mov eax, 0xf6000000 ; ret 0x7501
0x000002000005605a : mov eax, 0xf6000000 ; ret 0xf07
0x000002000049bc54 : mov eax, 0xf600133e ; ret
0x0000020000149d84 : mov eax, 0xf7 ; jmp 0x20000156047
0x0000020000149da4 : mov eax, 0xf8 ; jmp 0x20000156047
0x0000020000149dc4 : mov eax, 0xf9 ; jmp 0x20000156047
0x0000020000149de4 : mov eax, 0xfa ; jmp 0x20000156047
0x0000020000149e04 : mov eax, 0xfb ; jmp 0x20000156047
0x0000020000149e24 : mov eax, 0xfc ; jmp 0x20000156047
0x0000020000530cfe : mov eax, 0xfe418d45 ; call qword ptr [rbx]
0x00000200006dd15b : mov eax, 0xfe418d45 ; call rbx
0x00000200007d647a : mov eax, 0xff000000 ; or edx, 0xffffffff ; call qword ptr [rax]
0x000002000066dd82 : mov eax, 0xff000000 ; ret 0x163b
0x000002000068cd6e : mov eax, 0xff000000 ; ret 0xbfe8
0x0000020000453533 : mov eax, 0xff418d45 ; call rbx
0x000002000013f6c3 : mov eax, 0xffff ; add rsp, 0x38 ; ret
0x000002000013fb5c : mov eax, 0xffff ; ret
0x0000020000074698 : mov eax, 0xfffffffe ; ret
0x000002000050dae9 : mov eax, 0xfffffffe ; ret 0xfa83
0x000002000001107e : mov eax, 1 ; add rsp, 0x28 ; ret
0x0000020000155fbc : mov eax, 1 ; add rsp, 0x38 ; ret
0x00000200003fb7e9 : mov eax, 1 ; add rsp, 0x48 ; ret
0x00000200004b17b0 : mov eax, 1 ; add rsp, 0x58 ; ret
0x0000020000032c30 : mov eax, 1 ; cmove eax, r8d ; ret
0x00000200001c23a2 : mov eax, 1 ; mov al, r8b ; ret
0x00000200000a064b : mov eax, 1 ; mov eax, r8d ; ret
0x0000020000007ed5 : mov eax, 1 ; ret
0x0000020000041e80 : mov eax, 1 ; xchg qword ptr [rcx], rax ; ret
0x00000200003fcc03 : mov eax, 2 ; add rsp, 0x28 ; ret
0x00000200000b6d01 : mov eax, 2 ; add rsp, 0x38 ; ret
0x0000020000007edb : mov eax, 2 ; ret
0x000002000010327c : mov eax, 3 ; cmovne eax, ecx ; ret
0x0000020000007ee1 : mov eax, 3 ; ret
0x0000020000041c25 : mov eax, 4 ; ret
0x00000200000bb976 : mov eax, 5 ; ret
0x000002000058cd03 : mov eax, 6 ; call rax
0x0000020000541b8a : mov eax, 6 ; ret
0x000002000016efa2 : mov eax, 7 ; ret
0x00000200000450ad : mov eax, 8 ; ret
0x000002000001be2e : mov eax, dword ptr [0x188] ; ret
0x000002000002cb6f : mov eax, dword ptr [r10 + 0x24] ; mov dword ptr [r8], eax ; ret
0x00000200004d16de : mov eax, dword ptr [r10 + 0x2c] ; lea r9, qword ptr [rdx + rax*8] ; jmp 0x200004d16a5
0x00000200000881d4 : mov eax, dword ptr [r8 + 4] ; mov dword ptr [r8 + 8], eax ; jmp 0x200000881a9
0x00000200003d01b7 : mov eax, dword ptr [r8] ; cmp eax, edx ; je 0x200003d01bc ; ret
0x0000020000236379 : mov eax, dword ptr [r8] ; mov dword ptr [rip + 0x11f95e], eax ; ret
0x000002000007f62b : mov eax, dword ptr [r8] ; test eax, r9d ; sete al ; ret
0x000002000012ab83 : mov eax, dword ptr [r9 + 0x18] ; mov dword ptr [rdx + rcx + 0x1c], eax ; ret
0x00000200001dbeb6 : mov eax, dword ptr [rax + 0x10] ; mov rcx, qword ptr [rbx] ; call rax
0x00000200001927b9 : mov eax, dword ptr [rax + 0x10] ; ret
0x0000020000116191 : mov eax, dword ptr [rax + 0x10] ; test r8, r8 ; je 0x200001161a5 ; jmp r8
0x00000200004545b9 : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0x200004545bb ; ret
0x0000020000052c2b : mov eax, dword ptr [rax + 0x1180] ; ret
0x0000020000069e37 : mov eax, dword ptr [rax + 0x1408] ; ret
0x0000020000461273 : mov eax, dword ptr [rax + 0x1410] ; ret
0x0000020000052c67 : mov eax, dword ptr [rax + 0x14c0] ; ret
0x0000020000052883 : mov eax, dword ptr [rax + 0x1500] ; ret
0x0000020000052c53 : mov eax, dword ptr [rax + 0x17a8] ; ret
0x0000020000052c3f : mov eax, dword ptr [rax + 0x1828] ; ret
0x00000200000b801f : mov eax, dword ptr [rax + 0x18] ; add rsp, 0x28 ; ret
0x0000020000041a86 : mov eax, dword ptr [rax + 0x18] ; ret
0x000002000001bedb : mov eax, dword ptr [rax + 0x1c8] ; ret
0x0000020000530a1d : mov eax, dword ptr [rax + 0x1f98] ; ret
0x00000200004535f4 : mov eax, dword ptr [rax + 0x20] ; add rsp, 0x38 ; ret
0x0000020000411009 : mov eax, dword ptr [rax + 0x20] ; ret
0x0000020000041e2e : mov eax, dword ptr [rax + 0x220] ; ret
0x000002000001dffe : mov eax, dword ptr [rax + 0x24] ; ret
0x000002000024c59d : mov eax, dword ptr [rax + 0x250] ; jmp rax
0x00000200001927b5 : mov eax, dword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 0x10] ; ret
0x000002000009a746 : mov eax, dword ptr [rax + 0x28] ; mov rax, qword ptr [rax] ; ret
0x0000020000627a5e : mov eax, dword ptr [rax + 0x28] ; ret
0x000002000006ba29 : mov eax, dword ptr [rax + 0x29] ; add byte ptr [rax], al ; je 0x2000006ba12 ; mov al, 1 ; ret
0x000002000020b8f6 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000200001c4619 : mov eax, dword ptr [rax + 0x30] ; test rax, rax ; je 0x200001c462b ; call rax
0x0000020000710f83 : mov eax, dword ptr [rax + 0x38] ; add rsp, 0x28 ; ret
0x0000020000157ae9 : mov eax, dword ptr [rax + 0x38] ; ret
0x000002000001e231 : mov eax, dword ptr [rax + 0x3a8] ; ret
0x000002000016e4e3 : mov eax, dword ptr [rax + 0x3e0] ; ret
0x000002000020b938 : mov eax, dword ptr [rax + 0x430] ; ret
0x0000020000078cc7 : mov eax, dword ptr [rax + 0x44] ; test al, 4 ; jne 0x20000078cda ; xor eax, eax ; ret
0x00000200001dffbd : mov eax, dword ptr [rax + 0x480] ; ret
0x0000020000448226 : mov eax, dword ptr [rax + 0x48] ; mov rax, qword ptr [rax + 0x20] ; ret
0x0000020000084759 : mov eax, dword ptr [rax + 0x48] ; ret
0x00000200001c46f5 : mov eax, dword ptr [rax + 0x48] ; test rax, rax ; je 0x200001c4707 ; call rax
0x000002000066483d : mov eax, dword ptr [rax + 0x50] ; ret
0x00000200001b381c : mov eax, dword ptr [rax + 0x60] ; and rax, 0xfffffffffffffff0 ; ret
0x00000200001d1eee : mov eax, dword ptr [rax + 0x60] ; mov qword ptr [r9 + 0x60], rax ; ret
0x00000200001c45dd : mov eax, dword ptr [rax + 0x60] ; test rax, rax ; je 0x200001c45ef ; call rax
0x000002000004464a : mov eax, dword ptr [rax + 0x630] ; ret
0x0000020000028b1a : mov eax, dword ptr [rax + 0x638] ; ret
0x000002000001e11a : mov eax, dword ptr [rax + 0x678] ; ret
0x0000020000447cbd : mov eax, dword ptr [rax + 0x688] ; ret
0x0000020000043375 : mov eax, dword ptr [rax + 0x68] ; shr eax, 0x19 ; and eax, 1 ; ret
0x000002000012d6fd : mov eax, dword ptr [rax + 0x70] ; test rax, rax ; jne 0x2000012d70e ; ret
0x00000200000f749a : mov eax, dword ptr [rax + 0x748] ; ret
0x00000200004725f7 : mov eax, dword ptr [rax + 0x7c0] ; ret
0x000002000001be6a : mov eax, dword ptr [rax + 0xb8] ; ret
0x00000200007d17b8 : mov eax, dword ptr [rax + 0xd8] ; ret
0x00000200001bc1b9 : mov eax, dword ptr [rax + 4] ; add rsp, 0x28 ; ret
0x00000200000881d5 : mov eax, dword ptr [rax + 4] ; mov dword ptr [r8 + 8], eax ; jmp 0x200000881a8
0x00000200007a7877 : mov eax, dword ptr [rax + 8] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d35c5 : mov eax, dword ptr [rax + 8] ; call rax
0x00000200000bf805 : mov eax, dword ptr [rax + 8] ; cmp eax, 0xff ; je 0x200000bf816 ; ret
0x00000200000facc5 : mov eax, dword ptr [rax + 8] ; cmp eax, 0xff ; je 0x200000facd6 ; ret
0x000002000000d768 : mov eax, dword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x000002000001c3f9 : mov eax, dword ptr [rax + 8] ; ret
0x000002000006f406 : mov eax, dword ptr [rax + 8] ; test rax, rax ; je 0x2000006f417 ; ret
0x00000200005696d8 : mov eax, dword ptr [rax + r9 + 0x18] ; sub eax, edx ; ret
0x00000200005696d5 : mov eax, dword ptr [rax + rax*8] ; mov eax, dword ptr [rax + r9 + 0x18] ; sub eax, edx ; ret
0x000002000068d156 : mov eax, dword ptr [rax + rax] ; add byte ptr [rcx + 0x3b], cl ; ret 0xb76
0x00000200005696d9 : mov eax, dword ptr [rax + rcx + 0x18] ; sub eax, edx ; ret
0x0000020000074297 : mov eax, dword ptr [rax + rcx + 0x2f] ; ret
0x0000020000189643 : mov eax, dword ptr [rax + rcx + 0x30] ; ret
0x00000200001fc7d1 : mov eax, dword ptr [rax + rcx + 0x50] ; mov qword ptr [r9], rax ; ret
0x00000200005924bc : mov eax, dword ptr [rax + rcx*4] ; ret
0x000002000055d043 : mov eax, dword ptr [rax + rcx*8] ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x00000200006bb615 : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; call rax
0x00000200003ddaba : mov eax, dword ptr [rax + rcx*8] ; mov ecx, edi ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x000002000009d9ec : mov eax, dword ptr [rax + rcx*8] ; ret
0x00000200003e4a3e : mov eax, dword ptr [rax + rdx*4] ; xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x00000200000de685 : mov eax, dword ptr [rax + rdx*8] ; ret
0x0000020000056482 : mov eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200000fa177 : mov eax, dword ptr [rax] ; add rsp, 0x48 ; ret
0x00000200003d01b8 : mov eax, dword ptr [rax] ; cmp eax, edx ; je 0x200003d01bb ; ret
0x000002000069b299 : mov eax, dword ptr [rax] ; cmp rax, r8 ; jne 0x2000069b27d ; xor eax, eax ; ret
0x000002000071a9f6 : mov eax, dword ptr [rax] ; cmp rax, r8 ; jne 0x2000071a9f8 ; xor eax, eax ; ret
0x00000200007c1d7e : mov eax, dword ptr [rax] ; inc dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000055c82 : mov eax, dword ptr [rax] ; lock dec dword ptr [rax + 0xc] ; ret
0x000002000023637a : mov eax, dword ptr [rax] ; mov dword ptr [rip + 0x11f95e], eax ; ret
0x00000200000b5823 : mov eax, dword ptr [rax] ; mov qword ptr [rdx + 0x10], rax ; ret
0x000002000000b3fa : mov eax, dword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x0000020000052c28 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x1180] ; ret
0x0000020000069e34 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x1408] ; ret
0x0000020000461270 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x1410] ; ret
0x0000020000052c64 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x14c0] ; ret
0x0000020000052880 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x1500] ; ret
0x0000020000052c50 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x17a8] ; ret
0x0000020000052c3c : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x1828] ; ret
0x000002000066483a : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x50] ; ret
0x000002000002555e : mov eax, dword ptr [rax] ; ret
0x000002000068696e : mov eax, dword ptr [rax] ; shr eax, 9 ; and eax, 1 ; ret
0x00000200001fc698 : mov eax, dword ptr [rax] ; test eax, eax ; je 0x200001fc6a9 ; dec eax ; ret
0x000002000007f62c : mov eax, dword ptr [rax] ; test eax, r9d ; sete al ; ret
0x00000200000878d3 : mov eax, dword ptr [rax] ; test r8b, 2 ; je 0x200000878e7 ; mov eax, edx ; ret
0x000002000020e7ef : mov eax, dword ptr [rax] ; test rax, r9 ; sete al ; ret
0x00000200001c4695 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x200001c46a5 ; call rax
0x0000020000050d09 : mov eax, dword ptr [rax] ; test rax, rax ; jne 0x20000050d05 ; xor eax, eax ; ret
0x00000200000bdf57 : mov eax, dword ptr [rax] ; test rax, rax ; jne 0x200000bdf39 ; xor eax, eax ; ret
0x00000200006bd704 : mov eax, dword ptr [rbp + 0x30] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000057fbff : mov eax, dword ptr [rbp + 0x40] ; add rsp, 0x30 ; pop rbp ; ret
0x00000200006dcb21 : mov eax, dword ptr [rbp + 0x50] ; jmp 0x200006dcaed
0x000002000079d82d : mov eax, dword ptr [rbp + rcx*8 + 0x18] ; xor ecx, ecx ; call rax
0x0000020000510aa6 : mov eax, dword ptr [rbp - 0x29] ; mov qword ptr [rsp + 0x20], rax ; call r12
0x000002000046f698 : mov eax, dword ptr [rbp - 0x41] ; mov qword ptr [rsp + 0x20], rax ; call r12
0x0000020000157156 : mov eax, dword ptr [rbp - 0x78] ; add rsp, 0x28 ; ret
0x00000200001dbeee : mov eax, dword ptr [rbx + 0x20] ; mov rdx, rdi ; mov rcx, rbp ; call rax
0x00000200004e2ae6 : mov eax, dword ptr [rbx + 0x20] ; test rax, rax ; je 0x200004e2afc ; call rax
0x0000020000078b1e : mov eax, dword ptr [rbx + 0x30] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000200006842d2 : mov eax, dword ptr [rbx + 0x30] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000022bea9 : mov eax, dword ptr [rbx + 0x38] ; call rax
0x0000020000031460 : mov eax, dword ptr [rbx + 0x50] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000070c904 : mov eax, dword ptr [rbx + 0x58] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000075231 : mov eax, dword ptr [rbx + 0x60] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000020000211cd2 : mov eax, dword ptr [rbx + 0x60] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004bab1f : mov eax, dword ptr [rbx + 0x70] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002ade4 : mov eax, dword ptr [rbx + 8] ; mov r8, r14 ; call rax
0x00000200004445c8 : mov eax, dword ptr [rbx + rax*8] ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000003713b : mov eax, dword ptr [rbx + rcx*4 - 0x37] ; mov r14, rax ; jmp 0x2000003710f
0x00000200005f49aa : mov eax, dword ptr [rbx] ; mov rcx, rbp ; call rax
0x00000200001c8710 : mov eax, dword ptr [rbx] ; not rax ; or rax, rdx ; jmp 0x200001c8730
0x0000020000070bae : mov eax, dword ptr [rcx + 0x10] ; add rax, 0x1a0 ; ret
0x0000020000547ac5 : mov eax, dword ptr [rcx + 0x10] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x0000020000038295 : mov eax, dword ptr [rcx + 0x10] ; ret
0x000002000059ff41 : mov eax, dword ptr [rcx + 0x110] ; ret
0x00000200005696f5 : mov eax, dword ptr [rcx + 0x14] ; mov dword ptr [rdx + 0x207c], eax ; ret
0x0000020000157bb8 : mov eax, dword ptr [rcx + 0x14] ; mov edx, dword ptr [rdx + 0x14] ; sub eax, edx ; ret
0x0000020000456770 : mov eax, dword ptr [rcx + 0x14] ; ret
0x000002000021a374 : mov eax, dword ptr [rcx + 0x14] ; test al, 1 ; jne 0x2000021a387 ; xor eax, eax ; ret
0x00000200006ca557 : mov eax, dword ptr [rcx + 0x18] ; add rax, rdx ; ret
0x000002000012ab84 : mov eax, dword ptr [rcx + 0x18] ; mov dword ptr [rdx + rcx + 0x1c], eax ; ret
0x00000200005a2ccc : mov eax, dword ptr [rcx + 0x18] ; mov qword ptr [rax + rdx*8], r8 ; ret
0x00000200004482f5 : mov eax, dword ptr [rcx + 0x18] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200005c7ec0 : mov eax, dword ptr [rcx + 0x18] ; mov rax, qword ptr [rax + rdx*8] ; ret
0x00000200000bd644 : mov eax, dword ptr [rcx + 0x18] ; ret
0x0000020000041d90 : mov eax, dword ptr [rcx + 0x1c0] ; ret
0x000002000001fc81 : mov eax, dword ptr [rcx + 0x1c8] ; ret
0x000002000040f662 : mov eax, dword ptr [rcx + 0x20] ; and qword ptr [rcx + 0x20], 0 ; ret
0x00000200000eeefd : mov eax, dword ptr [rcx + 0x20] ; cmp rax, 1 ; jne 0x200000eef10 ; ret
0x0000020000569885 : mov eax, dword ptr [rcx + 0x20] ; ret
0x0000020000032c51 : mov eax, dword ptr [rcx + 0x220] ; ret
0x0000020000038258 : mov eax, dword ptr [rcx + 0x24] ; ret
0x000002000008f0ab : mov eax, dword ptr [rcx + 0x28] ; mov qword ptr [rdx + 0x18], rax ; mov al, 1 ; ret
0x00000200001d68fa : mov eax, dword ptr [rcx + 0x28] ; mov qword ptr [rdx], rax ; ret
0x000002000014636d : mov eax, dword ptr [rcx + 0x28] ; mov rdx, qword ptr [rcx + 0x20] ; call rax
0x0000020000043966 : mov eax, dword ptr [rcx + 0x28] ; ret
0x000002000049e839 : mov eax, dword ptr [rcx + 0x28] ; shr rax, 0xc ; ret
0x00000200004bd06b : mov eax, dword ptr [rcx + 0x28] ; test rax, rax ; je 0x200004bd084 ; call rax
0x0000020000044b2c : mov eax, dword ptr [rcx + 0x28c] ; ret
0x0000020000112490 : mov eax, dword ptr [rcx + 0x2b] ; ret
0x00000200000035e0 : mov eax, dword ptr [rcx + 0x2c] ; ret
0x00000200000fd115 : mov eax, dword ptr [rcx + 0x2e8] ; ret
0x000002000003095d : mov eax, dword ptr [rcx + 0x308] ; ret
0x000002000040f682 : mov eax, dword ptr [rcx + 0x30] ; and qword ptr [rcx + 0x30], 0 ; ret
0x0000020000032cb9 : mov eax, dword ptr [rcx + 0x30] ; dec edx ; mov dword ptr [rax + 4], edx ; ret
0x0000020000157ae5 : mov eax, dword ptr [rcx + 0x30] ; mov rax, qword ptr [rax + 0x38] ; ret
0x000002000009e250 : mov eax, dword ptr [rcx + 0x30] ; shr eax, 0x13 ; and eax, 1 ; ret
0x000002000049c429 : mov eax, dword ptr [rcx + 0x30] ; test rax, rax ; jne 0x2000049c43a ; ret
0x0000020000157b50 : mov eax, dword ptr [rcx + 0x358] ; ret
0x000002000002f0f1 : mov eax, dword ptr [rcx + 0x3a8] ; ret
0x0000020000034af5 : mov eax, dword ptr [rcx + 0x3b0] ; ret
0x0000020000056491 : mov eax, dword ptr [rcx + 0x3c0] ; ret
0x0000020000037c89 : mov eax, dword ptr [rcx + 0x3d8] ; ret
0x000002000003fd45 : mov eax, dword ptr [rcx + 0x3e0] ; ret
0x0000020000032c59 : mov eax, dword ptr [rcx + 0x3f8] ; ret
0x000002000006f044 : mov eax, dword ptr [rcx + 0x40] ; test al, 1 ; jne 0x2000006f053 ; ret
0x000002000003cdb5 : mov eax, dword ptr [rcx + 0x420] ; ret
0x000002000072c2c7 : mov eax, dword ptr [rcx + 0x44] ; mov dword ptr [r8], eax ; ret
0x0000020000043411 : mov eax, dword ptr [rcx + 0x450] ; ret
0x00000200000bdbd1 : mov eax, dword ptr [rcx + 0x458] ; ret
0x0000020000453591 : mov eax, dword ptr [rcx + 0x460] ; ret
0x00000200006048b2 : mov eax, dword ptr [rcx + 0x48] ; mov eax, dword ptr [rax + 8] ; ret
0x00000200002298ec : mov eax, dword ptr [rcx + 0x48] ; ret
0x00000200002298e8 : mov eax, dword ptr [rcx + 0x4c] ; ret
0x0000020000040618 : mov eax, dword ptr [rcx + 0x50] ; shr eax, 0x18 ; and al, 1 ; ret
0x0000020000009546 : mov eax, dword ptr [rcx + 0x58] ; and rax, 0xfffffffffffffff9 ; ret
0x00000200004263f5 : mov eax, dword ptr [rcx + 0x58] ; ret
0x000002000020b959 : mov eax, dword ptr [rcx + 0x5e0] ; ret
0x000002000001e1a4 : mov eax, dword ptr [rcx + 0x60] ; add rsp, 0x28 ; ret
0x00000200001bba9f : mov eax, dword ptr [rcx + 0x60] ; and qword ptr [rcx + 0x60], 0 ; ret
0x0000020000680048 : mov eax, dword ptr [rcx + 0x61c] ; ret
0x0000020000031d2d : mov eax, dword ptr [rcx + 0x630] ; ret
0x000002000002c809 : mov eax, dword ptr [rcx + 0x638] ; ret
0x0000020000102175 : mov eax, dword ptr [rcx + 0x680] ; ret
0x0000020000055e4e : mov eax, dword ptr [rcx + 0x688] ; ret
0x000002000008e054 : mov eax, dword ptr [rcx + 0x6c0] ; and al, 1 ; ret
0x0000020000569901 : mov eax, dword ptr [rcx + 0x708] ; ret
0x0000020000421358 : mov eax, dword ptr [rcx + 0x70] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200001b4121 : mov eax, dword ptr [rcx + 0x70] ; ret
0x0000020000030964 : mov eax, dword ptr [rcx + 0x74] ; shr eax, 0xa ; and al, 1 ; ret
0x00000200000ed07a : mov eax, dword ptr [rcx + 0x74] ; test al, 8 ; jne 0x200000ed07d ; xor eax, eax ; ret
0x00000200001d80ca : mov eax, dword ptr [rcx + 0x788] ; ret
0x000002000003455c : mov eax, dword ptr [rcx + 0x78] ; shr eax, 0x11 ; and eax, 1 ; ret
0x00000200001d80d2 : mov eax, dword ptr [rcx + 0x790] ; ret
0x000002000042d6fd : mov eax, dword ptr [rcx + 0x7a8] ; ret
0x000002000009060f : mov eax, dword ptr [rcx + 0x7b8] ; ret
0x00000200004482ec : mov eax, dword ptr [rcx + 0xc0] ; ret
0x0000020000535370 : mov eax, dword ptr [rcx + 0xc4] ; ret
0x0000020000157a60 : mov eax, dword ptr [rcx + 0xc] ; mov edx, dword ptr [rdx + 0xc] ; sub eax, edx ; ret
0x0000020000454b28 : mov eax, dword ptr [rcx + 0xc] ; sub eax, dword ptr [rcx + 8] ; inc eax ; ret
0x0000020000569798 : mov eax, dword ptr [rcx + 0xc] ; sub eax, dword ptr [rcx + 8] ; ret
0x0000020000053999 : mov eax, dword ptr [rcx + 0xf0] ; ret
0x0000020000026340 : mov eax, dword ptr [rcx + 4] ; ret
0x0000020000151231 : mov eax, dword ptr [rcx + 8] ; and al, 0xf0 ; ret
0x000002000007f638 : mov eax, dword ptr [rcx + 8] ; bt dword ptr [rax], edx ; setae al ; ret
0x000002000002def7 : mov eax, dword ptr [rcx + 8] ; bt dword ptr [rax], edx ; setb al ; ret
0x0000020000037159 : mov eax, dword ptr [rcx + 8] ; btr dword ptr [rax], edx ; ret
0x000002000020e895 : mov eax, dword ptr [rcx + 8] ; btr qword ptr [rax], rdx ; ret
0x00000200000366dd : mov eax, dword ptr [rcx + 8] ; bts dword ptr [rax], edx ; ret
0x000002000020fc25 : mov eax, dword ptr [rcx + 8] ; bts qword ptr [rax], rdx ; ret
0x0000020000456392 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [r8 + 0xc], eax ; xor eax, eax ; ret
0x0000020000456908 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [r8 + 8], eax ; xor eax, eax ; ret
0x00000200005697e6 : mov eax, dword ptr [rcx + 8] ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x000002000006f42a : mov eax, dword ptr [rcx + 8] ; ret
0x000002000046297b : mov eax, dword ptr [rcx + rax*4 + 0x7485a0] ; ret
0x0000020000462993 : mov eax, dword ptr [rcx + rax*4 + 0x7485e0] ; ret
0x000002000046dd8b : mov eax, dword ptr [rcx + rax*4] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000057ab9 : mov eax, dword ptr [rcx + rax*4] ; mov dword ptr [r10], eax ; xor eax, eax ; ret
0x00000200000356b7 : mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200000c56c7 : mov eax, dword ptr [rcx + rax*4] ; test eax, eax ; je 0x200000c56d9 ; ret
0x00000200000527f5 : mov eax, dword ptr [rcx + rax*8 + 8] ; ret
0x0000020000043d4a : mov eax, dword ptr [rcx + rax*8] ; ret
0x000002000000ef40 : mov eax, dword ptr [rcx + rax*8] ; test dword ptr [rax], edx ; jne 0x2000000ef53 ; xor eax, eax ; ret
0x00000200000c5b46 : mov eax, dword ptr [rcx + rbx*8] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000706322 : mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x00000200007b2724 : mov eax, dword ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006715ce : mov eax, dword ptr [rcx] ; add rax, 8 ; ret
0x000002000007c764 : mov eax, dword ptr [rcx] ; and rax, 0xfffffffffffffffc ; ret
0x00000200001eaaa4 : mov eax, dword ptr [rcx] ; and rax, rdx ; ret
0x000002000006d04d : mov eax, dword ptr [rcx] ; cmp byte ptr [rax + 0x18], 0 ; je 0x2000006d05e ; ret
0x00000200004e0458 : mov eax, dword ptr [rcx] ; cmp rax, rcx ; jne 0x200004e046b ; xor eax, eax ; ret
0x00000200007c239b : mov eax, dword ptr [rcx] ; inc dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000010165 : mov eax, dword ptr [rcx] ; inc rax ; mov qword ptr [rcx], rax ; ret
0x00000200004472c3 : mov eax, dword ptr [rcx] ; mov dword ptr [rcx], eax ; jmp 0x200004472d6
0x000002000021a391 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000200001daef7 : mov eax, dword ptr [rcx] ; mov dword ptr [rip + 0x12b861], eax ; ret
0x00000200005698ec : mov eax, dword ptr [rcx] ; mov edx, dword ptr [rdx] ; sub eax, edx ; ret
0x000002000046cca6 : mov eax, dword ptr [rcx] ; mov qword ptr [rcx], rax ; jmp 0x2000046ccba
0x0000020000411006 : mov eax, dword ptr [rcx] ; mov rax, qword ptr [rax + 0x20] ; ret
0x000002000001f310 : mov eax, dword ptr [rcx] ; ret
0x00000200004968d0 : mov eax, dword ptr [rcx] ; shr eax, 0x1f ; not al ; and al, 1 ; ret
0x0000020000090537 : mov eax, dword ptr [rcx] ; test al, 1 ; jne 0x20000090544 ; ret
0x0000020000020b51 : mov eax, dword ptr [rcx] ; test rax, rax ; jne 0x20000020b64 ; mov al, 1 ; ret
0x0000020000041a7d : mov eax, dword ptr [rcx] ; test rax, rax ; jne 0x20000041a8c ; ret
0x0000020000705f4f : mov eax, dword ptr [rcx] ; test rax, rax ; jne 0x20000705f33 ; ret
0x00000200005dd61b : mov eax, dword ptr [rdi + 0x18] ; mov r14, qword ptr [rax + rcx*8] ; jmp 0x200004d990f
0x00000200005389f9 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rcx], rax ; jmp 0x200005389cb
0x000002000022c25a : mov eax, dword ptr [rdi + 0x38] ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200004aca55 : mov eax, dword ptr [rdi + 8] ; bts dword ptr [rax], r9d ; inc rdx ; jmp 0x200004aca38
0x00000200006a6812 : mov eax, dword ptr [rdi + rdx*4] ; mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x200006a6810
0x00000200001ee348 : mov eax, dword ptr [rdi] ; not rax ; or rax, rdx ; jmp 0x200001ee368
0x000002000045193b : mov eax, dword ptr [rdx + 0x10] ; mov dword ptr [rcx + 0x10], eax ; xor eax, eax ; ret
0x00000200005eadbd : mov eax, dword ptr [rdx + 0x10] ; mov dword ptr [rcx + 0xa0], eax ; ret
0x0000020000547b57 : mov eax, dword ptr [rdx + 0x10] ; mov qword ptr [r8], rax ; mov eax, r9d ; ret
0x00000200000579a6 : mov eax, dword ptr [rdx + 0x10] ; mov rdx, qword ptr [rdx + 8] ; call qword ptr [rbx]
0x00000200006ca503 : mov eax, dword ptr [rdx + 0x18] ; add rax, rcx ; ret
0x000002000070e6ec : mov eax, dword ptr [rdx + 0x18] ; mov qword ptr [rcx], rax ; ret
0x0000020000569712 : mov eax, dword ptr [rdx + 0x207c] ; mov dword ptr [rcx + 0x14], eax ; ret
0x000002000000953e : mov eax, dword ptr [rdx + 0x220] ; ret
0x000002000002cb70 : mov eax, dword ptr [rdx + 0x24] ; mov dword ptr [r8], eax ; ret
0x0000020000552b1e : mov eax, dword ptr [rdx + 0x24] ; or dword ptr [rcx + 0x24], eax ; ret
0x0000020000683011 : mov eax, dword ptr [rdx + 0x250] ; mov qword ptr [r8], rax ; ret
0x00000200004d16df : mov eax, dword ptr [rdx + 0x2c] ; lea r9, qword ptr [rdx + rax*8] ; jmp 0x200004d16a4
0x0000020000707208 : mov eax, dword ptr [rdx + 0x30] ; mov qword ptr [rcx + 8], rax ; ret
0x000002000000a601 : mov eax, dword ptr [rdx + 0x30] ; test eax, eax ; js 0x2000000a605 ; mov rax, rdx ; ret
0x000002000011d06d : mov eax, dword ptr [rdx + 0x30] ; test eax, eax ; js 0x2000011d06e ; mov rax, rdx ; ret
0x000002000002a53d : mov eax, dword ptr [rdx + 0x40] ; ret
0x000002000002e82a : mov eax, dword ptr [rdx + 0x440] ; mov qword ptr [rcx], rax ; ret
0x00000200006a421d : mov eax, dword ptr [rdx + 0x4d4] ; mov dword ptr [rcx], eax ; ret
0x0000020000085d3a : mov eax, dword ptr [rdx + 0x50] ; mov dword ptr [rax], 4 ; ret
0x00000200006a1011 : mov eax, dword ptr [rdx + 0x7c] ; mov dword ptr [rcx + 0x1c], eax ; ret
0x000002000061c4b6 : mov eax, dword ptr [rdx + 0x88] ; mov dword ptr [rcx + 0x18], eax ; ret
0x0000020000009553 : mov eax, dword ptr [rdx + 0xb8] ; ret
0x000002000069381f : mov eax, dword ptr [rdx + 0xc] ; test eax, eax ; je 0x20000693861 ; add rax, rdx ; jmp 0x20000693838
0x00000200001fc1cb : mov eax, dword ptr [rdx + 4] ; mov qword ptr [rcx], rax ; ret
0x0000020000085d56 : mov eax, dword ptr [rdx + 8] ; mov dword ptr [r8 + 0x10], eax ; mov al, 1 ; ret
0x0000020000452f70 : mov eax, dword ptr [rdx + 8] ; mov qword ptr [rcx + 8], rax ; ret
0x00000200003e47df : mov eax, dword ptr [rdx + rax*4] ; sub eax, r8d ; ret
0x00000200004ffa2d : mov eax, dword ptr [rdx + rbp*4 + 0x4ff89c] ; add rax, r10 ; jmp rax
0x00000200000f25fe : mov eax, dword ptr [rdx + rcx*4 + 0xf1a8c] ; add rax, rdx ; jmp rax
0x000002000015bd03 : mov eax, dword ptr [rdx] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000015bf7f : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x0000020000152bdd : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; ret
0x000002000015afbb : mov eax, dword ptr [rdx] ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000218ba0 : mov eax, dword ptr [rdx] ; and rax, 0xfffff000 ; ret
0x00000200005695f0 : mov eax, dword ptr [rdx] ; mov qword ptr [rcx], rax ; mov qword ptr [rdx], r8 ; ret
0x0000020000440cc9 : mov eax, dword ptr [rdx] ; mov qword ptr [rcx], rax ; ret
0x0000020000664832 : mov eax, dword ptr [rdx] ; ret
0x0000020000100990 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x2000010095d ; jmp 0x20000100964
0x000002000011bba1 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x2000011bbb0 ; ret
0x00000200001dc411 : mov eax, dword ptr [rip + 0x116371] ; call qword ptr [rax]
0x00000200001dc3a5 : mov eax, dword ptr [rip + 0x1163dd] ; call qword ptr [rax]
0x00000200001dc357 : mov eax, dword ptr [rip + 0x11642b] ; mov rbx, rcx ; call qword ptr [rax]
0x00000200001d6918 : mov eax, dword ptr [rip + 0x11f28e] ; ret
0x00000200001c0593 : mov eax, dword ptr [rip + 0x1392b7] ; call rax
0x00000200001c0268 : mov eax, dword ptr [rip + 0x1395e2] ; call rax
0x00000200001bfc0f : mov eax, dword ptr [rip + 0x139c3b] ; call rax
0x00000200001d2e58 : mov eax, dword ptr [rip + 0x139e2e] ; mov dword ptr [rcx], eax ; ret
0x00000200001d2e48 : mov eax, dword ptr [rip + 0x139e36] ; ret
0x00000200001bf6cf : mov eax, dword ptr [rip + 0x13a17b] ; call rax
0x00000200001bf358 : mov eax, dword ptr [rip + 0x13a4f2] ; call rax
0x00000200001bedc7 : mov eax, dword ptr [rip + 0x13aa83] ; call rax
0x00000200001bed29 : mov eax, dword ptr [rip + 0x13ab21] ; call rax
0x00000200001becab : mov eax, dword ptr [rip + 0x13ab9f] ; call rax
0x00000200001beb64 : mov eax, dword ptr [rip + 0x13ace6] ; call rax
0x00000200001be9dd : mov eax, dword ptr [rip + 0x13ae6d] ; call rax
0x00000200001be7b5 : mov eax, dword ptr [rip + 0x13b095] ; call rax
0x00000200001be5a7 : mov eax, dword ptr [rip + 0x13b2a3] ; call rax
0x00000200001be4f1 : mov eax, dword ptr [rip + 0x13b359] ; call rax
0x00000200001be3f0 : mov eax, dword ptr [rip + 0x13b45a] ; call rax
0x00000200001bd984 : mov eax, dword ptr [rip + 0x13bec6] ; call rax
0x00000200001bc9db : mov eax, dword ptr [rip + 0x13ce6f] ; call rax
0x00000200001bc33a : mov eax, dword ptr [rip + 0x13d510] ; call rax
0x00000200001bc00e : mov eax, dword ptr [rip + 0x13d83c] ; call rax
0x00000200001bbdda : mov eax, dword ptr [rip + 0x13da70] ; call rax
0x00000200002288c8 : mov eax, dword ptr [rip + 0x18097e] ; mov dword ptr [r8], eax ; ret
0x0000020000171691 : mov eax, dword ptr [rip + 0x1881b9] ; call rax
0x000002000016d81e : mov eax, dword ptr [rip + 0x18cd54] ; mov rdx, qword ptr [rdx + rax*8] ; jmp 0x2000016d841
0x0000020000711f73 : mov eax, dword ptr [rip + 0x1b13f] ; ret
0x000002000013f0c5 : mov eax, dword ptr [rip + 0x1b1f35] ; ret
0x0000020000157a34 : mov eax, dword ptr [rip + 0x1cd8e2] ; ret
0x00000200001d36c0 : mov eax, dword ptr [rip + 0x1d49ae] ; ret
0x00000200001d3ab5 : mov eax, dword ptr [rip + 0x1d5add] ; ret
0x00000200001c9ac0 : mov eax, dword ptr [rip + 0x1df9ca] ; call rax
0x00000200001bad1b : mov eax, dword ptr [rip + 0x1ee76f] ; call rax
0x00000200001baca2 : mov eax, dword ptr [rip + 0x1ee7e8] ; call rax
0x00000200001bab5b : mov eax, dword ptr [rip + 0x1ee92f] ; call r8
0x0000020000182a3a : mov eax, dword ptr [rip + 0x226a50] ; call rax
0x000002000017b5b1 : mov eax, dword ptr [rip + 0x22ded9] ; call rax
0x0000020000147d8d : mov eax, dword ptr [rip + 0x260525] ; call rax
0x0000020000157b59 : mov eax, dword ptr [rip + 0x265d79] ; ret
0x0000020000123bc3 : mov eax, dword ptr [rip + 0x2858c7] ; call rax
0x0000020000123abc : mov eax, dword ptr [rip + 0x2859ce] ; call rax
0x00000200001237a8 : mov eax, dword ptr [rip + 0x285ce2] ; call rax
0x0000020000123656 : mov eax, dword ptr [rip + 0x285e34] ; call rax
0x00000200001235af : mov eax, dword ptr [rip + 0x285edb] ; call rax
0x000002000011a718 : mov eax, dword ptr [rip + 0x28d966] ; ret
0x000002000011a728 : mov eax, dword ptr [rip + 0x28db02] ; ret
0x0000020000084354 : mov eax, dword ptr [rip + 0x29e612] ; mov dword ptr [r9], eax ; ret
0x000002000005ccfd : mov eax, dword ptr [rip + 0x2a33a5] ; ret
0x000002000005cced : mov eax, dword ptr [rip + 0x2a33c5] ; ret
0x000002000005ccdb : mov eax, dword ptr [rip + 0x2a340f] ; ret
0x00000200000fce2b : mov eax, dword ptr [rip + 0x2ac423] ; ret
0x00000200000f82f8 : mov eax, dword ptr [rip + 0x2afda6] ; ret
0x0000020000052b79 : mov eax, dword ptr [rip + 0x2d1229] ; sub rax, rcx ; ret
0x0000020000052871 : mov eax, dword ptr [rip + 0x2d15e1] ; ret
0x00000200000c663a : mov eax, dword ptr [rip + 0x2e2bc4] ; ret
0x00000200000c5b1e : mov eax, dword ptr [rip + 0x2e36e0] ; ret
0x000002000000f090 : mov eax, dword ptr [rip + 0x2f095a] ; ret
0x0000020000097edf : mov eax, dword ptr [rip + 0x3103eb] ; ret
0x000002000007892a : mov eax, dword ptr [rip + 0x330b60] ; call rax
0x000002000007885b : mov eax, dword ptr [rip + 0x330c2f] ; call rax
0x0000020000078824 : mov eax, dword ptr [rip + 0x330c66] ; call rax
0x000002000007868c : mov eax, dword ptr [rip + 0x330dfe] ; call rax
0x000002000007863e : mov eax, dword ptr [rip + 0x330e4c] ; call rax
0x0000020000078476 : mov eax, dword ptr [rip + 0x331014] ; call rax
0x0000020000077826 : mov eax, dword ptr [rip + 0x331c64] ; call r8
0x00000200000776f5 : mov eax, dword ptr [rip + 0x331d95] ; call rax
0x000002000007762a : mov eax, dword ptr [rip + 0x331e60] ; call rax
0x000002000005a93f : mov eax, dword ptr [rip + 0x34eb4b] ; call rax
0x00000200000599ff : mov eax, dword ptr [rip + 0x34fa8b] ; call rax
0x0000020000059951 : mov eax, dword ptr [rip + 0x34fb39] ; call rax
0x00000200000598a0 : mov eax, dword ptr [rip + 0x34fbea] ; call rax
0x00000200000597f1 : mov eax, dword ptr [rip + 0x34fc99] ; call rax
0x00000200000596f9 : mov eax, dword ptr [rip + 0x34fd91] ; call rax
0x00000200000596ab : mov eax, dword ptr [rip + 0x34fddf] ; call rax
0x0000020000044794 : mov eax, dword ptr [rip + 0x364cf6] ; call rax
0x0000020000044737 : mov eax, dword ptr [rip + 0x364d53] ; call rax
0x00000200000379d1 : mov eax, dword ptr [rip + 0x371ab9] ; call rax
0x0000020000037956 : mov eax, dword ptr [rip + 0x371b34] ; call rax
0x000002000002f07c : mov eax, dword ptr [rip + 0x37a40e] ; call rax
0x000002000002ef01 : mov eax, dword ptr [rip + 0x37a589] ; call rax
0x0000020000029ca7 : mov eax, dword ptr [rip + 0x37f7e3] ; call rax
0x000002000000c614 : mov eax, dword ptr [rip + 0x39bcde] ; ret
0x000002000000c61b : mov eax, dword ptr [rip + 0x39bcdf] ; ret
0x00000200000036e0 : mov eax, dword ptr [rip + 0x3a5b26] ; ret
0x0000020000157b90 : mov eax, dword ptr [rip + 0x6014aa] ; ret
0x0000020000031d46 : mov eax, dword ptr [rip + 0x717164] ; xor qword ptr [rdx], rax ; ret
0x0000020000015c69 : mov eax, dword ptr [rip + 0x732629] ; ret
0x0000020000238d89 : mov eax, dword ptr [rip + 0xc0ac1] ; mov rcx, rdi ; call rax
0x0000020000238c30 : mov eax, dword ptr [rip + 0xc0c1a] ; call rax
0x000002000022df8d : mov eax, dword ptr [rip + 0xcb8bd] ; call rax
0x0000020000569938 : mov eax, dword ptr [rip - 0x1c04d6] ; mov dword ptr [rcx + 0x1c], eax ; ret
0x000002000058450d : mov eax, dword ptr [rip - 0x29121b] ; call rax
0x0000020000584525 : mov eax, dword ptr [rip - 0x291243] ; call rax
0x0000020000584539 : mov eax, dword ptr [rip - 0x29125f] ; call rax
0x000002000068b404 : mov eax, dword ptr [rip - 0x36922a] ; ret
0x00000200006b8e22 : mov eax, dword ptr [rip - 0x3c6ab0] ; call rax
0x00000200006fee44 : mov eax, dword ptr [rip - 0x3ff73a] ; ret
0x0000020000431b8b : mov eax, dword ptr [rip - 0x888d9] ; call rax
0x000002000044779e : mov eax, dword ptr [rip - 0x9e4ec] ; call rax
0x000002000044d94f : mov eax, dword ptr [rip - 0xa469d] ; call rax
0x000002000046ec15 : mov eax, dword ptr [rip - 0xc5963] ; call rax
0x00000200003dfb47 : mov eax, dword ptr [rip - 0xdfb65] ; call rax
0x00000200006783a0 : mov eax, dword ptr [rsi + 0x14] ; mov dword ptr [rsp + 0x20], eax ; call 0x200002045c1
0x0000020000648c46 : mov eax, dword ptr [rsi + 0x38] ; call rax
0x000002000048303b : mov eax, dword ptr [rsi + 0x60] ; mov dl, 1 ; mov rcx, r15 ; call rsi
0x000002000048333e : mov eax, dword ptr [rsi + 0x68] ; mov dl, 1 ; mov rcx, r15 ; call r12
0x00000200000fca0a : mov eax, dword ptr [rsi + rdx*8] ; mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x200000fca09
0x000002000010b29c : mov eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret 0xe908
0x00000200004dfad6 : mov eax, dword ptr [rsi] ; mov qword ptr [rsp + 0x60], rax ; jmp 0x200004dfaa9
0x0000020000454a0c : mov eax, dword ptr [rsp + 0x20] ; add rsp, 0x38 ; ret
0x000002000051383c : mov eax, dword ptr [rsp + 0x28] ; add rsp, 0x48 ; ret
0x000002000021fb39 : mov eax, dword ptr [rsp + 0x28] ; jmp rax
0x00000200006939f5 : mov eax, dword ptr [rsp + 0x28] ; mov byte ptr [rax], 0 ; ret
0x00000200006939d7 : mov eax, dword ptr [rsp + 0x28] ; mov byte ptr [rax], 1 ; ret
0x000002000078f201 : mov eax, dword ptr [rsp + 0x28] ; mov ecx, dword ptr [rax] ; mov dword ptr [r8], ecx ; ret
0x00000200001170b0 : mov eax, dword ptr [rsp + 0x28] ; pop rdi ; pop rsi ; ret
0x0000020000044e24 : mov eax, dword ptr [rsp + 0x30] ; add rsp, 0x28 ; ret
0x00000200001d390f : mov eax, dword ptr [rsp + 0x30] ; add rsp, 0x48 ; ret
0x000002000070dead : mov eax, dword ptr [rsp + 0x30] ; jmp rax
0x0000020000118eee : mov eax, dword ptr [rsp + 0x30] ; mov qword ptr [rax], r10 ; ret
0x000002000002cb25 : mov eax, dword ptr [rsp + 0x30] ; test eax, eax ; jne 0x2000002cb46 ; ret
0x000002000011b397 : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000056aa7 : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x28 ; ret
0x000002000006d26c : mov eax, dword ptr [rsp + 0x38] ; call rax
0x000002000021fb41 : mov eax, dword ptr [rsp + 0x38] ; jmp rax
0x0000020000027212 : mov eax, dword ptr [rsp + 0x40] ; add rsp, 0x28 ; ret
0x00000200006824ef : mov eax, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001c9a03 : mov eax, dword ptr [rsp + 0x40] ; add rsp, 0x38 ; ret
0x000002000021fbe9 : mov eax, dword ptr [rsp + 0x40] ; jmp rax
0x000002000044030e : mov eax, dword ptr [rsp + 0x40] ; mov byte ptr [rax], r11b ; xor eax, eax ; ret
0x0000020000551b94 : mov eax, dword ptr [rsp + 0x44] ; mov dword ptr [rdi + 0x24], eax ; jmp 0x20000551b68
0x000002000071c2d5 : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000054ca76 : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x28 ; ret
0x000002000040776c : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x38 ; ret
0x00000200006ff39f : mov eax, dword ptr [rsp + 0x48] ; jmp rax
0x0000020000436ae6 : mov eax, dword ptr [rsp + 0x4c] ; add rsp, 0x50 ; pop rbx ; ret
0x000002000021fb2f : mov eax, dword ptr [rsp + 0x50] ; jmp rax
0x000002000003bc49 : mov eax, dword ptr [rsp + 0x58] ; add rsp, 0x38 ; ret
0x0000020000071682 : mov eax, dword ptr [rsp + 0x58] ; call rax
0x00000200004f7006 : mov eax, dword ptr [rsp + 0x60] ; add rsp, 0x48 ; ret
0x0000020000728c5f : mov eax, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001c4739 : mov eax, dword ptr [rsp + 0x60] ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000517502 : mov eax, dword ptr [rsp + 0x68] ; add rsp, 0x48 ; ret
0x000002000006fa42 : mov eax, dword ptr [rsp + 0x68] ; call rax
0x00000200001bbcfe : mov eax, dword ptr [rsp + 0x68] ; mov rdx, qword ptr [rsp + 0x48] ; call rax
0x00000200001373c3 : mov eax, dword ptr [rsp + 0x70] ; mov qword ptr [r11 - 0x28], rax ; call r10
0x00000200004a49c3 : mov eax, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbx ; ret
0x000002000046fb03 : mov eax, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000416c12 : mov eax, dword ptr [rsp + 0xb0] ; call rax
0x0000020000157b7e : mov eax, dword ptr [rsp + 8] ; ret
0x000002000061ef94 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000200001529c8 : mov eax, dword ptr [rsp] ; add rsp, 8 ; ret
0x0000020000157af1 : mov eax, dword ptr [rsp] ; ret
0x0000020000445ac5 : mov eax, eax ; add rsp, 0x18 ; ret
0x0000020000099c5f : mov eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000a261 : mov eax, eax ; add rsp, 0x28 ; ret
0x0000020000139b87 : mov eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000115ca8 : mov eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000071b763 : mov eax, eax ; add rsp, 0x38 ; jmp r9
0x00000200000c3f2e : mov eax, eax ; add rsp, 0x38 ; ret
0x00000200006e83e8 : mov eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000451915 : mov eax, eax ; add rsp, 0x48 ; ret
0x000002000001a42b : mov eax, eax ; add rsp, 8 ; ret
0x00000200005c194f : mov eax, eax ; call 0x2000065cc90
0x000002000040118f : mov eax, eax ; call rsi
0x00000200001e3933 : mov eax, eax ; cmp rcx, rax ; jae 0x200001e3916 ; xor eax, eax ; ret
0x0000020000191937 : mov eax, eax ; cmp rcx, rax ; jne 0x2000019192b ; ret
0x00000200001618cf : mov eax, eax ; div ecx ; ret
0x000002000012a7bd : mov eax, eax ; inc qword ptr [rdx + rax*8] ; ret
0x000002000001f37d : mov eax, eax ; jne 0x2000001f3ba ; add rsp, 0x28 ; ret
0x000002000004b935 : mov eax, eax ; jne 0x2000004b957 ; ret
0x000002000007ce3f : mov eax, eax ; jne 0x2000007ce87 ; add rsp, 0x28 ; ret
0x000002000004bca3 : mov eax, eax ; jne 0x2000017ede0 ; ret
0x0000020000100e09 : mov eax, eax ; lock btr qword ptr [rcx], rax ; ret
0x000002000016dfb9 : mov eax, eax ; lock xadd qword ptr [r9 + 0x58], rax ; ret
0x000002000016df99 : mov eax, eax ; lock xadd qword ptr [r9 + 0x60], rax ; ret
0x000002000040b2f2 : mov eax, eax ; mov dword ptr [r14 + 0x10], eax ; call 0x20000157548
0x0000020000445ac2 : mov eax, eax ; mov eax, r8d ; add rsp, 0x18 ; ret
0x000002000021c9a4 : mov eax, eax ; mov eax, r8d ; add rsp, 0x38 ; ret
0x00000200003cc1b3 : mov eax, eax ; mov eax, r8d ; ret
0x000002000021f14e : mov eax, eax ; mov rax, r8 ; add rsp, 0x28 ; ret
0x0000020000125476 : mov eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000042b753 : mov eax, eax ; mov rdx, rax ; call 0x200004e7a5b
0x000002000044874c : mov eax, eax ; mov rdx, rbx ; mov rcx, rdi ; call r10
0x00000200001b9c5c : mov eax, eax ; mov rdx, rdi ; mov rcx, rbx ; call r10
0x000002000052ca05 : mov eax, eax ; mov word ptr [rbp - 0x20], ax ; call 0x20000157549
0x000002000079c280 : mov eax, eax ; or dword ptr [rax], eax ; add al, ch ; ret 0xdbb0
0x0000020000151268 : mov eax, eax ; pop rbx ; ret
0x0000020000151915 : mov eax, eax ; pop rsi ; pop rdi ; ret
0x0000020000020a29 : mov eax, eax ; ret
0x00000200004990e4 : mov eax, eax ; shr rax, 1 ; ret
0x0000020000157a29 : mov eax, eax ; shr rdx, 0x20 ; wrmsr ; ret
0x00000200004cf28d : mov eax, ebp ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x00000200001cf93b : mov eax, ebp ; call 0x2000013bb78
0x0000020000543aa1 : mov eax, ebp ; call 0x2000054525d
0x000002000008f052 : mov eax, ebp ; lea rdx, qword ptr [rsp + 0x40] ; mov bl, al ; call rsi
0x00000200006ae942 : mov eax, ebp ; mov dword ptr [rsp + 0x20], r15d ; call rdi
0x000002000061f557 : mov eax, ebp ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x000002000008b9e1 : mov eax, ebp ; mov rcx, r15 ; call rax
0x0000020000535421 : mov eax, ebp ; mov rdx, r12 ; call 0x20000157548
0x0000020000466a18 : mov eax, ebp ; mov rdx, rax ; mov rcx, rsi ; call r14
0x0000020000560181 : mov eax, ebp ; mov rdx, rsi ; call rax
0x0000020000436fa8 : mov eax, ebp ; sub r8d, dword ptr [rbp - 0x3d] ; call 0x2000005f389
0x0000020000436f71 : mov eax, ebp ; sub r8d, edx ; call 0x2000005f388
0x000002000000416b : mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d409d : mov eax, ebx ; add rsp, 0x28 ; ret
0x000002000000a5da : mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000050b52 : mov eax, ebx ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000068f8d7 : mov eax, ebx ; add rsp, 0x38 ; pop rdi ; pop rbx ; ret
0x000002000043469b : mov eax, ebx ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000023946 : mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000052bf41 : mov eax, ebx ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000067c8d5 : mov eax, ebx ; add rsp, 0x40 ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000551579 : mov eax, ebx ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000200001290ad : mov eax, ebx ; add rsp, 0x48 ; pop rsi ; pop rbx ; ret
0x000002000045461a : mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x000002000013c702 : mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000013b9bb : mov eax, ebx ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000002000013b49c : mov eax, ebx ; add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x0000020000481c20 : mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x00000200000ebc77 : mov eax, ebx ; call 0x20000037ebc
0x000002000043716c : mov eax, ebx ; call 0x2000005f385
0x0000020000529c4a : mov eax, ebx ; call 0x20000157545
0x00000200006145b2 : mov eax, ebx ; call 0x200006149e4
0x000002000060688a : mov eax, ebx ; call rax
0x00000200000dbbf4 : mov eax, ebx ; jmp 0x200000dbbbe
0x00000200004922b8 : mov eax, ebx ; jmp 0x20000492282
0x00000200005ad2b5 : mov eax, ebx ; mov cl, 0x15 ; call r10
0x00000200005ad33c : mov eax, ebx ; mov cl, 0x15 ; call rax
0x000002000058f8d7 : mov eax, ebx ; mov cl, 0xc ; call rax
0x0000020000212c25 : mov eax, ebx ; mov dword ptr [rdi], ecx ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000c8ab6 : mov eax, ebx ; mov rbp, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x00000200000263d9 : mov eax, ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001d1023 : mov eax, ebx ; mov rcx, qword ptr [r10 + 0x2990] ; call rdi
0x00000200004cf92c : mov eax, ebx ; mov rcx, r13 ; call rax
0x0000020000513e40 : mov eax, ebx ; mov rcx, rdi ; call 0x2000013bb7c
0x0000020000055d09 : mov eax, ebx ; mov rcx, rsi ; call r14
0x0000020000008f5c : mov eax, ebx ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200004d6df7 : mov eax, ebx ; mov rdx, r14 ; call rax
0x0000020000006c3f : mov eax, ebx ; mov rdx, rax ; mov rcx, rbp ; call r14
0x0000020000551159 : mov eax, ebx ; mov rdx, rbp ; call rax
0x000002000070f977 : mov eax, ebx ; mov rdx, rbp ; mov rcx, r14 ; call rax
0x00000200003f603a : mov eax, ebx ; mov rdx, rbx ; mov rcx, r10 ; call rax
0x0000020000410b63 : mov eax, ebx ; mov rdx, rdi ; mov rcx, rbp ; call r15
0x000002000014c3c1 : mov eax, ebx ; pop rbx ; ret
0x0000020000005c5a : mov eax, ebx ; ret
0x000002000052dcf6 : mov eax, ebx ; xor edx, edx ; call 0x20000157887
0x000002000057bf7f : mov eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000075ff1 : mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004fd4cd : mov eax, ecx ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000444da : mov eax, ecx ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000005c8c : mov eax, ecx ; add rsp, 0x28 ; ret
0x000002000015b86c : mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001feee7 : mov eax, ecx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000078efb6 : mov eax, ecx ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000022d93d : mov eax, ecx ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000005bfb : mov eax, ecx ; add rsp, 0x38 ; ret
0x000002000057c193 : mov eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x000002000021043a : mov eax, ecx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000564c1 : mov eax, ecx ; add rsp, 0x48 ; ret
0x000002000051d975 : mov eax, ecx ; add rsp, 0x50 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000561da : mov eax, ecx ; add rsp, 0x60 ; pop rbp ; ret
0x00000200006d7f50 : mov eax, ecx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000011ddc3 : mov eax, ecx ; add rsp, 0xb8 ; ret
0x000002000007daa4 : mov eax, ecx ; cmovg eax, edx ; jmp 0x2000007dab2
0x000002000002b130 : mov eax, ecx ; cmp rdx, rax ; jb 0x2000002b12d ; xor eax, eax ; ret
0x00000200001914b1 : mov eax, ecx ; jmp 0x20000095016
0x0000020000097416 : mov eax, ecx ; jmp 0x200000969c3
0x00000200001c2477 : mov eax, ecx ; jne 0x200001c2486 ; mov eax, r8d ; ret
0x00000200004b22f0 : mov eax, ecx ; jne 0x200005d3ea0 ; ret
0x000002000003b284 : mov eax, ecx ; lea rax, qword ptr [rdx + rax*8] ; ret
0x00000200006dd0b1 : mov eax, ecx ; mov qword ptr [r11 - 0x38], rax ; call rdi
0x00000200000b567b : mov eax, ecx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000000a7b0 : mov eax, ecx ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200003fa7ca : mov eax, ecx ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x000002000057c8f5 : mov eax, ecx ; pop rbp ; ret
0x0000020000009a00 : mov eax, ecx ; ret
0x000002000021f560 : mov eax, ecx ; shl rax, 5 ; add rax, r8 ; ret
0x000002000007b697 : mov eax, ecx ; sub r8, r11 ; add r8, r10 ; jmp 0x2000007b66c
0x00000200001fecfb : mov eax, edi ; add rcx, 0x18 ; call rax
0x0000020000128f33 : mov eax, edi ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000003f1cb : mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020e121 : mov eax, edi ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003ef942 : mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000426f1a : mov eax, edi ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001c0517 : mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x000002000013b56e : mov eax, edi ; add rsp, 0x60 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000632ec7 : mov eax, edi ; add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000052e872 : mov eax, edi ; call 0x200001518a5
0x0000020000708b15 : mov eax, edi ; call rax
0x00000200005015fb : mov eax, edi ; jmp 0x200005015c4
0x00000200007cbe37 : mov eax, edi ; jmp 0x200007b8098
0x0000020000696ef3 : mov eax, edi ; lea rdx, qword ptr [rbp - 0x18] ; call 0x200006d3144
0x0000020000559982 : mov eax, edi ; mov dword ptr [rbp + 0x67], eax ; jmp 0x20000559952
0x00000200001d6dbb : mov eax, edi ; mov edx, 0x58 ; call r12
0x0000020000511449 : mov eax, edi ; mov edx, ebx ; mov rcx, r14 ; call 0x200000fd679
0x000002000070f463 : mov eax, edi ; mov edx, esi ; mov rcx, rbx ; call rax
0x00000200001625ba : mov eax, edi ; mov edx, r12d ; lea rcx, qword ptr [rbp + 0x10] ; call rbx
0x00000200004305ba : mov eax, edi ; mov qword ptr [r13 + 0x38], rax ; call 0x2000005fa89
0x000002000063371b : mov eax, edi ; mov rdx, r12 ; mov rcx, r14 ; call rax
0x00000200006dc8fe : mov eax, edi ; mov rdx, r14 ; mov rcx, rsi ; call rax
0x00000200006dbec8 : mov eax, edi ; mov rdx, rbp ; call rax
0x0000020000707811 : mov eax, edi ; mov rdx, rbp ; mov rcx, r12 ; call rax
0x000002000046aa80 : mov eax, edi ; mov rdx, rbp ; mov rcx, rsi ; call r14
0x00000200007083e0 : mov eax, edi ; mov rdx, rbx ; mov rcx, r14 ; call r12
0x00000200000038c6 : mov eax, edi ; mov rdx, rbx ; mov rcx, rsi ; call r9
0x00000200006dd051 : mov eax, edi ; mov rdx, rsi ; call rax
0x000002000045521b : mov eax, edi ; mov rdx, rsi ; mov rcx, rbx ; call r11
0x00000200003f6546 : mov eax, edi ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001518fd : mov eax, edi ; pop rsi ; pop rdi ; ret
0x00000200006dc4ef : mov eax, edi ; sub eax, edx ; jmp 0x200006dc4fd
0x0000020000532259 : mov eax, edi ; xor edx, edx ; call 0x20000157887
0x000002000003e1f9 : mov eax, edx ; add qword ptr [rcx + 0x158], rax ; ret
0x000002000049eb2f : mov eax, edx ; add rsp, 0x18 ; ret
0x0000020000006d8b : mov eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001f77c : mov eax, edx ; add rsp, 0x28 ; ret
0x0000020000045242 : mov eax, edx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000bf477 : mov eax, edx ; add rsp, 0x38 ; ret
0x000002000045da9e : mov eax, edx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000215b12 : mov eax, edx ; add rsp, 0x48 ; ret
0x00000200001512de : mov eax, edx ; and al, 0xf0 ; pop rbx ; ret
0x000002000059ba00 : mov eax, edx ; call rax
0x0000020000117b6f : mov eax, edx ; cqo ; idiv rcx ; ret
0x000002000051977b : mov eax, edx ; div rcx ; mov dword ptr [r8 + 0xc], eax ; ret
0x000002000002e51d : mov eax, edx ; jmp 0x2000002e4e4
0x0000020000037138 : mov eax, edx ; jmp 0x200000370c8
0x00000200000393d6 : mov eax, edx ; jmp 0x200000393b4
0x000002000003b832 : mov eax, edx ; jmp 0x2000003b81d
0x0000020000057ca8 : mov eax, edx ; jmp 0x20000057c87
0x0000020000087fb3 : mov eax, edx ; jmp 0x20000087fbd
0x0000020000094680 : mov eax, edx ; jmp 0x20000094663
0x0000020000094685 : mov eax, edx ; jmp 0x20000094673
0x00000200000dbc19 : mov eax, edx ; jmp 0x200000dbbbc
0x000002000011587b : mov eax, edx ; jmp 0x20000115802
0x00000200001433b7 : mov eax, edx ; jmp 0x200001433d9
0x00000200001459f9 : mov eax, edx ; jmp 0x20000145a00
0x00000200001469fc : mov eax, edx ; jmp 0x20000146a03
0x0000020000146cee : mov eax, edx ; jmp 0x20000146cf5
0x00000200001471cb : mov eax, edx ; jmp 0x200001471d2
0x00000200001b16b6 : mov eax, edx ; jmp 0x200001b16d5
0x00000200001b1738 : mov eax, edx ; jmp 0x200001b1753
0x00000200001b1791 : mov eax, edx ; jmp 0x200001b17ab
0x00000200001d133a : mov eax, edx ; jmp 0x200001d12f4
0x00000200001d1488 : mov eax, edx ; jmp 0x200001d14a3
0x00000200001e7c24 : mov eax, edx ; jmp 0x200001e7c78
0x00000200001ed2bc : mov eax, edx ; jmp 0x200001ed2e8
0x00000200001f548b : mov eax, edx ; jmp 0x200001f54d3
0x00000200001f75de : mov eax, edx ; jmp 0x200001f75e8
0x000002000020ecc7 : mov eax, edx ; jmp 0x2000020ecd3
0x000002000020f30d : mov eax, edx ; jmp 0x2000020f331
0x0000020000210959 : mov eax, edx ; jmp 0x20000210961
0x000002000023732e : mov eax, edx ; jmp 0x20000237335
0x000002000023bfcc : mov eax, edx ; jmp 0x2000023bfd3
0x000002000023c670 : mov eax, edx ; jmp 0x2000023c677
0x000002000023c845 : mov eax, edx ; jmp 0x2000023c84c
0x000002000023d103 : mov eax, edx ; jmp 0x2000023d10a
0x000002000023d209 : mov eax, edx ; jmp 0x2000023d210
0x000002000023d919 : mov eax, edx ; jmp 0x2000023d920
0x000002000023da6f : mov eax, edx ; jmp 0x2000023da76
0x000002000023deb0 : mov eax, edx ; jmp 0x2000023deb7
0x000002000023dfc6 : mov eax, edx ; jmp 0x2000023e030
0x000002000023e16f : mov eax, edx ; jmp 0x2000023e176
0x000002000023e29d : mov eax, edx ; jmp 0x2000023e2a4
0x000002000023f26f : mov eax, edx ; jmp 0x2000023f276
0x000002000023fa6d : mov eax, edx ; jmp 0x2000023fa74
0x000002000023fd12 : mov eax, edx ; jmp 0x2000023fd19
0x00000200002409f5 : mov eax, edx ; jmp 0x200002409fc
0x00000200002424bc : mov eax, edx ; jmp 0x200002424c3
0x0000020000242a25 : mov eax, edx ; jmp 0x20000242a2c
0x0000020000242b2d : mov eax, edx ; jmp 0x20000242b34
0x0000020000243d8a : mov eax, edx ; jmp 0x20000243d91
0x0000020000243fc0 : mov eax, edx ; jmp 0x20000243fc7
0x000002000024462b : mov eax, edx ; jmp 0x20000244632
0x0000020000244705 : mov eax, edx ; jmp 0x2000024470c
0x00000200002449d8 : mov eax, edx ; jmp 0x200002449df
0x0000020000244ab0 : mov eax, edx ; jmp 0x20000244ab7
0x00000200002452c2 : mov eax, edx ; jmp 0x200002452c9
0x00000200002456c9 : mov eax, edx ; jmp 0x200002456d0
0x0000020000245a47 : mov eax, edx ; jmp 0x20000245a4e
0x0000020000245c87 : mov eax, edx ; jmp 0x20000245c8e
0x00000200002461ab : mov eax, edx ; jmp 0x200002461b2
0x0000020000246593 : mov eax, edx ; jmp 0x2000024659a
0x0000020000246865 : mov eax, edx ; jmp 0x20000246891
0x0000020000246ed6 : mov eax, edx ; jmp 0x20000246edd
0x000002000024777c : mov eax, edx ; jmp 0x20000247783
0x00000200002495b8 : mov eax, edx ; jmp 0x200002495bf
0x000002000024a552 : mov eax, edx ; jmp 0x2000024a559
0x000002000024a907 : mov eax, edx ; jmp 0x2000024a90e
0x000002000024aaa5 : mov eax, edx ; jmp 0x2000024aaac
0x000002000024abee : mov eax, edx ; jmp 0x2000024abf5
0x000002000024bd9b : mov eax, edx ; jmp 0x2000024bda2
0x000002000042ea99 : mov eax, edx ; jmp 0x2000042ea57
0x000002000047870b : mov eax, edx ; jmp 0x200004786d2
0x00000200004789d2 : mov eax, edx ; jmp 0x2000047898b
0x0000020000478ac4 : mov eax, edx ; jmp 0x20000478a75
0x000002000048739d : mov eax, edx ; jmp 0x20000487339
0x00000200004c89ac : mov eax, edx ; jmp 0x200004c899a
0x00000200004cb590 : mov eax, edx ; jmp 0x200004cb536
0x00000200004cdfcb : mov eax, edx ; jmp 0x200004cdf78
0x00000200004cdfd9 : mov eax, edx ; jmp 0x200004cdfa8
0x00000200006807c9 : mov eax, edx ; jmp 0x200006807d3
0x000002000068a76b : mov eax, edx ; jmp 0x2000068a775
0x00000200006aa7e3 : mov eax, edx ; jmp 0x200006aa7c5
0x00000200006e86fb : mov eax, edx ; jmp 0x200006e8705
0x000002000077843c : mov eax, edx ; jmp 0x20000778446
0x00000200007796a3 : mov eax, edx ; jmp 0x20000779705
0x0000020000779a43 : mov eax, edx ; jmp 0x20000779a4a
0x000002000077f1da : mov eax, edx ; jmp 0x2000077f1e1
0x000002000077f2fc : mov eax, edx ; jmp 0x2000077f303
0x000002000077f4b7 : mov eax, edx ; jmp 0x2000077f4be
0x000002000077ff44 : mov eax, edx ; jmp 0x2000077ff4b
0x0000020000780987 : mov eax, edx ; jmp 0x2000078098e
0x000002000078159a : mov eax, edx ; jmp 0x200007815a1
0x0000020000781bf6 : mov eax, edx ; jmp 0x20000781bfd
0x0000020000782620 : mov eax, edx ; jmp 0x20000782627
0x00000200007831e6 : mov eax, edx ; jmp 0x200007831f6
0x0000020000783a52 : mov eax, edx ; jmp 0x20000783a59
0x0000020000783e4c : mov eax, edx ; jmp 0x20000783e53
0x00000200007845cf : mov eax, edx ; jmp 0x200007845d6
0x0000020000784e86 : mov eax, edx ; jmp 0x20000784e8d
0x000002000078510f : mov eax, edx ; jmp 0x20000785116
0x000002000078535f : mov eax, edx ; jmp 0x20000785366
0x0000020000785850 : mov eax, edx ; jmp 0x20000785857
0x0000020000785920 : mov eax, edx ; jmp 0x20000785927
0x0000020000785b42 : mov eax, edx ; jmp 0x20000785b49
0x0000020000785d91 : mov eax, edx ; jmp 0x20000785d98
0x0000020000785efe : mov eax, edx ; jmp 0x20000785f05
0x000002000078606b : mov eax, edx ; jmp 0x20000786072
0x00000200007861f8 : mov eax, edx ; jmp 0x200007861ff
0x0000020000786395 : mov eax, edx ; jmp 0x2000078639c
0x000002000078652d : mov eax, edx ; jmp 0x20000786534
0x00000200007866dc : mov eax, edx ; jmp 0x200007866e3
0x0000020000786879 : mov eax, edx ; jmp 0x20000786880
0x0000020000786a35 : mov eax, edx ; jmp 0x20000786a3c
0x0000020000786bdf : mov eax, edx ; jmp 0x20000786be6
0x0000020000786d4f : mov eax, edx ; jmp 0x20000786d56
0x0000020000786f47 : mov eax, edx ; jmp 0x20000786f4e
0x000002000078715d : mov eax, edx ; jmp 0x20000787164
0x0000020000787634 : mov eax, edx ; jmp 0x2000078763b
0x0000020000787901 : mov eax, edx ; jmp 0x20000787908
0x000002000078865b : mov eax, edx ; jmp 0x20000788662
0x0000020000788a24 : mov eax, edx ; jmp 0x20000788a2b
0x000002000078929c : mov eax, edx ; jmp 0x200007892a3
0x00000200007894cb : mov eax, edx ; jmp 0x200007894d2
0x000002000078963d : mov eax, edx ; jmp 0x20000789644
0x0000020000789836 : mov eax, edx ; jmp 0x2000078983d
0x0000020000789bac : mov eax, edx ; jmp 0x20000789bb3
0x0000020000789e12 : mov eax, edx ; jmp 0x20000789e19
0x000002000078a066 : mov eax, edx ; jmp 0x2000078a06d
0x000002000078a271 : mov eax, edx ; jmp 0x2000078a278
0x000002000078a44d : mov eax, edx ; jmp 0x2000078a454
0x000002000078a641 : mov eax, edx ; jmp 0x2000078a648
0x000002000078a8a1 : mov eax, edx ; jmp 0x2000078a8a8
0x000002000078ac7d : mov eax, edx ; jmp 0x2000078ac84
0x000002000078adef : mov eax, edx ; jmp 0x2000078adf6
0x000002000078bb23 : mov eax, edx ; jmp 0x2000078bb2a
0x000002000078c3df : mov eax, edx ; jmp 0x2000078c3e6
0x000002000003dee4 : mov eax, edx ; jne 0x2000016dc0c ; ret
0x000002000020197e : mov eax, edx ; lea edx, dword ptr [rbx + 0x1e] ; call r9
0x00000200001bc07e : mov eax, edx ; lock cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x00000200002027ed : mov eax, edx ; mov dword ptr [rcx], eax ; mov al, r8b ; ret
0x000002000040fdb8 : mov eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000021b5ed : mov eax, edx ; mov eax, r8d ; add rsp, 0x28 ; ret
0x0000020000448a47 : mov eax, edx ; mov qword ptr [rsp + 0x20], rax ; call r11
0x000002000044b59d : mov eax, edx ; mov rax, r8 ; ret
0x00000200000f5c5d : mov eax, edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000006cc2 : mov eax, edx ; mov rcx, rbp ; call r14
0x000002000020d9ff : mov eax, edx ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000043d05f : mov eax, edx ; mov rdx, r10 ; jmp r11
0x00000200001e5ae1 : mov eax, edx ; mov rdx, r11 ; mov rcx, rsi ; call qword ptr [rsi]
0x000002000048530a : mov eax, edx ; mov rdx, rsi ; mov ecx, ebx ; call rax
0x00000200000c0981 : mov eax, edx ; mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x00000200001e1e57 : mov eax, edx ; mov word ptr [r8 + 0xa], cx ; ret
0x000002000070b745 : mov eax, edx ; movsd qword ptr [rax + rcx], xmm0 ; ret
0x0000020000029027 : mov eax, edx ; pop rbx ; ret
0x0000020000005811 : mov eax, edx ; ret
0x0000020000083df4 : mov eax, edx ; shl rax, 4 ; add rax, rcx ; ret
0x00000200006626aa : mov eax, edx ; shr rax, 0x3f ; add rax, rdx ; ret
0x00000200001c2242 : mov eax, edx ; shr rdx, 0x20 ; wrmsr ; ret
0x000002000000fa2f : mov eax, edx ; shr rdx, 0x20 ; xrstor ptr [rcx] ; ret
0x0000020000203fcd : mov eax, edx ; test rdx, rdx ; jne 0x20000203fe0 ; xor eax, eax ; ret
0x0000020000167304 : mov eax, edx ; xor edx, edx ; call r10
0x00000200001621fd : mov eax, esi ; adc al, 0 ; add byte ptr [rax - 0x17], al ; ret
0x00000200000b85f5 : mov eax, esi ; add rsp, 0x78 ; pop rdi ; pop rsi ; ret
0x000002000051c1ca : mov eax, esi ; call 0x20000148175
0x000002000002ade8 : mov eax, esi ; call rax
0x00000200007076b8 : mov eax, esi ; call rbx
0x000002000062139d : mov eax, esi ; lea ecx, dword ptr [rdx - 0x37] ; call 0x2000024da48
0x000002000051c214 : mov eax, esi ; mov dword ptr [rsp + 0x20], eax ; call 0x20000148179
0x0000020000707627 : mov eax, esi ; mov edx, ebp ; mov rcx, r15 ; call r14
0x000002000070f4ee : mov eax, esi ; mov edx, ebp ; mov rcx, rbx ; call rax
0x00000200000239d2 : mov eax, esi ; mov rcx, rbx ; call rax
0x0000020000088557 : mov eax, esi ; mov rdx, r12 ; mov rcx, r13 ; call rax
0x00000200004cfc99 : mov eax, esi ; mov rdx, r12 ; mov rcx, r15 ; call rax
0x00000200006c5d29 : mov eax, esi ; mov rdx, r15 ; movzx ecx, bx ; call rax
0x00000200001664e0 : mov eax, esi ; mov rdx, rax ; call r9
0x00000200006dcfe4 : mov eax, esi ; mov rdx, rbp ; call rax
0x0000020000702589 : mov eax, esi ; mov rdx, rbp ; mov rcx, r13 ; call rbx
0x00000200003f27b8 : mov eax, esi ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x00000200006ab601 : mov eax, esi ; xor edx, edx ; call 0x20000157886
0x000002000042d7ba : mov eax, esi ; xor edx, edx ; call 0x200004c99d6
0x00000200004c262f : mov eax, esp ; add rsp, 0x68 ; pop r12 ; pop rbp ; ret
0x00000200004c6df8 : mov eax, esp ; call r10
0x0000020000136d82 : mov eax, esp ; jle 0x20000136e00 ; add bh, bh ; ret
0x0000020000009b0c : mov eax, esp ; mov rcx, rdi ; call r14
0x00000200003fbad2 : mov eax, esp ; mov rdx, r14 ; mov rcx, r15 ; call rax
0x00000200001e6325 : mov eax, esp ; mov rdx, rax ; mov rcx, rbx ; call qword ptr [rbx]
0x00000200004d7165 : mov eax, esp ; mov rdx, rsi ; call rax
0x00000200007d47d4 : mov eax, fs ; ret 0x8bff
0x000002000007da61 : mov eax, r10d ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000052be8 : mov eax, r10d ; add rsp, 0x28 ; ret
0x0000020000045241 : mov eax, r10d ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000216f6e : mov eax, r10d ; add rsp, 0x38 ; ret
0x000002000045da9d : mov eax, r10d ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000442edd : mov eax, r10d ; add rsp, 0x48 ; ret
0x00000200000393d5 : mov eax, r10d ; jmp 0x200000393b5
0x0000020000057ca7 : mov eax, r10d ; jmp 0x20000057c88
0x0000020000087fb2 : mov eax, r10d ; jmp 0x20000087fbe
0x000002000011587a : mov eax, r10d ; jmp 0x20000115803
0x00000200001ed2bb : mov eax, r10d ; jmp 0x200001ed2e9
0x000002000020ecc6 : mov eax, r10d ; jmp 0x2000020ecd4
0x000002000020f30c : mov eax, r10d ; jmp 0x2000020f332
0x000002000023732d : mov eax, r10d ; jmp 0x20000237336
0x00000200006807c8 : mov eax, r10d ; jmp 0x200006807d4
0x00000200002120da : mov eax, r10d ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000029026 : mov eax, r10d ; pop rbx ; ret
0x000002000003dea9 : mov eax, r10d ; ret
0x00000200001d409c : mov eax, r11d ; add rsp, 0x28 ; ret
0x000002000043469a : mov eax, r11d ; add rsp, 0x40 ; pop rbp ; ret
0x00000200005654c9 : mov eax, r11d ; add rsp, 0x70 ; pop rbx ; ret
0x00000200000c8ab5 : mov eax, r11d ; mov rbp, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x0000020000008f5b : mov eax, r11d ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000005c59 : mov eax, r11d ; ret
0x0000020000445ac4 : mov eax, r8d ; add rsp, 0x18 ; ret
0x0000020000099c5e : mov eax, r8d ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000017bac : mov eax, r8d ; add rsp, 0x28 ; ret
0x0000020000139b86 : mov eax, r8d ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000f8ac4 : mov eax, r8d ; add rsp, 0x38 ; ret
0x0000020000451914 : mov eax, r8d ; add rsp, 0x48 ; ret
0x000002000001a42a : mov eax, r8d ; add rsp, 8 ; ret
0x00000200001618ce : mov eax, r8d ; div ecx ; ret
0x000002000012a7bc : mov eax, r8d ; inc qword ptr [rdx + rax*8] ; ret
0x0000020000100e08 : mov eax, r8d ; lock btr qword ptr [rcx], rax ; ret
0x000002000016dfb8 : mov eax, r8d ; lock xadd qword ptr [r9 + 0x58], rax ; ret
0x000002000016df98 : mov eax, r8d ; lock xadd qword ptr [r9 + 0x60], rax ; ret
0x0000020000020a28 : mov eax, r8d ; ret
0x00000200001cb039 : mov eax, r9d ; add rsp, 0x28 ; ret
0x00000200006278c5 : mov eax, r9d ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000005bfa : mov eax, r9d ; add rsp, 0x38 ; ret
0x0000020000445fed : mov eax, r9d ; add rsp, 0x40 ; pop rbx ; ret
0x000002000046a436 : mov eax, r9d ; add rsp, 0x48 ; ret
0x000002000000a7af : mov eax, r9d ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000000a560 : mov eax, r9d ; ret
0x00000200004fed52 : mov ebp, 0x10024a1 ; sete al ; ret
0x0000020000091e2c : mov ebp, 0x244489c2 ; or byte ptr [rcx + 3], al ; ret
0x0000020000484e1e : mov ebp, 0x33001441 ; rol byte ptr [rcx - 0x75], cl ; ret 0xf1f7
0x00000200004aa6c7 : mov ebp, 0x3e8 ; add byte ptr [rbp - 0x33], dh ; jmp 0x200004aa69c
0x000002000020ecc2 : mov ebp, 0x410575c9 ; mov eax, edx ; jmp 0x2000020ecd8
0x000002000069f6a2 : mov ebp, 0x448948ff ; and al, 0x20 ; call 0x2000044b991
0x000002000020bf01 : mov ebp, 0x44b60f42 ; ror dword ptr [rcx], -1 ; ret 0xff41
0x00000200001d8755 : mov ebp, 0x4589003a ; fmul qword ptr [rax - 0x75] ; pushfq ; ret
0x00000200001d3f8f : mov ebp, 0x4800003a ; add esp, 0x28 ; ret
0x0000020000569223 : mov ebp, 0x48c033ff ; add esp, 0x20 ; pop rbx ; ret
0x00000200004b3dc9 : mov ebp, 0x48c033ff ; add esp, 0x28 ; ret
0x0000020000558289 : mov ebp, 0x48c38bff ; add esp, 0x20 ; pop rbx ; ret
0x000002000068f913 : mov ebp, 0x48ccffab ; add esp, 0x38 ; ret
0x000002000070663f : mov ebp, 0x48ffb469 ; add esp, 0x20 ; pop rbx ; ret
0x000002000022df7f : mov ebp, 0x48fff24a ; add esp, 0x38 ; ret
0x000002000072695c : mov ebp, 0x598948ff ; or byte ptr [rax + 0x3b], cl ; ret
0x0000020000024cd7 : mov ebp, 0x738d48d8 ; xor byte ptr [rcx - 0x75], al ; ret
0x00000200007cc048 : mov ebp, 0x7c05c7ff ; ret 0xffbd
0x0000020000154ec0 : mov ebp, 0x80 ; add byte ptr [rbp + rax - 0x18], dh ; ret
0x00000200007d17b5 : mov ebp, 0x808b48ff ; fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200005cd6f8 : mov ebp, 0x81ffec47 ; ret 0x1000
0x0000020000168506 : mov ebp, 0x83e0d3ca ; sar ecx, 0x33 ; ret 0x4a75
0x0000020000123fd1 : mov ebp, 0x83e0d3ca ; sar esi, 0x33 ; ret 0xd18b
0x000002000012d4c7 : mov ebp, 0x84410027 ; ret 0x850f
0x00000200005e8030 : mov ebp, 0x85fff150 ; ret 0x840f
0x00000200003e7af1 : mov ebp, 0x8a440019 ; ret
0x00000200000fb3cf : mov ebp, 0x8afff79d ; ret
0x00000200000898a3 : mov ebp, 0x8b000000 ; ret
0x000002000049f291 : mov ebp, 0x8b00130d ; ret
0x00000200003f55ec : mov ebp, 0x8b001929 ; or byte ptr [rbx], r12b ; ret 0xc83b
0x00000200007a8e7e : mov ebp, 0x8b49003a ; xchg eax, esp ; ret
0x00000200007d3caf : mov ebp, 0x8bff9743 ; ret
0x0000020000605727 : mov ebp, 0x8bffa58b ; ret
0x00000200006030ff : mov ebp, 0x8bffa5ec ; ret
0x00000200006bf33f : mov ebp, 0x8bffb8dc ; ret
0x0000020000510f3f : mov ebp, 0x8bffd3c0 ; ret
0x00000200003fe7af : mov ebp, 0x8bffd498 ; ret
0x000002000044703f : mov ebp, 0x8bffe05f ; ret
0x00000200005dd6be : mov ebp, 0xa8e990ff ; ret
0x000002000049a779 : mov ebp, 0xc13b44c9 ; seta al ; ret
0x000002000002508f : mov ebp, 0xc22b41c0 ; jmp 0x20000025045
0x0000020000569148 : mov ebp, 0xc48348ff ; pop rbx ; ret
0x00000200004bd015 : mov ebp, 0xcb8b48ff ; call 0x200000e7258
0x00000200004bd014 : mov ebp, 0xcb8b48ff ; call 0x200000e7259
0x00000200001c4fdb : mov ebp, 0xcde80015 ; ret
0x00000200004a010c : mov ebp, 0xd8b48ff ; ret
0x000002000042897f : mov ebp, 0xe8ffed3e ; js 0x20000428921 ; ret
0x0000020000149645 : mov ebp, 0xe9000000 ; leave ; add byte ptr [rax], al ; ret
0x0000020000055daf : mov ebp, 0xeb000920 ; xchg byte ptr [rbx], dh ; leave ; call r14
0x0000020000191d73 : mov ebp, 0xf6fff06b ; ret
0x00000200000aed6d : mov ebp, 0xf6fffff2 ; ret 0xf04
0x000002000043a84f : mov ebp, dword ptr [rax + 0x30] ; mov rcx, rbp ; call 0x20000056a90
0x0000020000037b77 : mov ebp, dword ptr [rax - 0x74fffffc] ; ret 0x8b48
0x0000020000567451 : mov ebp, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rsi ; ret
0x00000200003f51c2 : mov ebp, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c14d1 : mov ebp, dword ptr [rbx] ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x0000020000147c55 : mov ebp, dword ptr [rcx + 0x18] ; mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x000002000043add1 : mov ebp, dword ptr [rcx] ; ret
0x000002000016b9b3 : mov ebp, dword ptr [rdx - 0x1e3e0014] ; sbb byte ptr [rbx], ah ; ret 0xc80b
0x00000200007adb48 : mov ebp, dword ptr [rsi] ; mov rcx, rbp ; call 0x200003d3634
0x00000200004f697b : mov ebp, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000bb0d4 : mov ebp, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 0x20] ; ret
0x00000200000c8ab9 : mov ebp, dword ptr [rsp + 0x28] ; pop rdi ; ret
0x0000020000050db9 : mov ebp, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002a889 : mov ebp, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rsi ; ret
0x000002000040ccda : mov ebp, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001eb6f : mov ebp, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rsi ; ret
0x000002000009fe31 : mov ebp, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006d3bdf : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004cf9b5 : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rsi ; ret
0x000002000003f5b4 : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000052ccb3 : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rsi ; ret
0x00000200004afc27 : mov ebp, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067c7e9 : mov ebp, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004ce738 : mov ebp, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rsi ; ret
0x000002000012e8ed : mov ebp, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000002546d : mov ebp, dword ptr [rsp + 0x68] ; add rsp, 0x40 ; pop rsi ; ret
0x00000200000fb2a2 : mov ebp, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rdi ; ret
0x00000200003e1123 : mov ebp, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rsi ; ret
0x00000200001c5dfa : mov ebp, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rsi ; ret
0x0000020000707de3 : mov ebp, eax ; call rbx
0x0000020000152ea2 : mov ebp, eax ; mov r14, rax ; mov r15, rax ; jmp rsi
0x0000020000701d00 : mov ebp, eax ; ret
0x00000200007a74e5 : mov ebp, ebx ; jmp 0x200007a74b9
0x00000200003e5a52 : mov ebp, ecx ; call 0x200000087ed
0x0000020000515ad8 : mov ebp, ecx ; ret
0x000002000015b8fe : mov ebp, edx ; add rsp, 0x40 ; pop rbp ; ret
0x00000200003e7dc8 : mov ebp, edx ; call 0x20000008821
0x00000200004487cf : mov ebp, edx ; call 0x20000076cf5
0x00000200006dcfad : mov ebp, edx ; call 0x200003f91c0
0x00000200001c8323 : mov ebp, edx ; inc dword ptr [rax + rax*8 - 0xbef78c] ; ret 0x3b45
0x00000200004397fa : mov ebp, esi ; push rsi ; ret
0x000002000017d4b6 : mov ebp, esp ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000013525d : mov ebx, 0x164 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5338
0x00000200000cf5b6 : mov ebx, 0x1b0caeb ; ret
0x000002000013da0d : mov ebx, 0x22001bb1 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200007a7af9 : mov ebx, 0x2b000001 ; ret
0x0000020000439060 : mov ebx, 0x4199e8e0 ; ret
0x00000200005b2fdf : mov ebx, 0x470fc23b ; ret 0xd233
0x00000200006d8199 : mov ebx, 0x48000095 ; add esp, 0x38 ; ret
0x00000200001b8ee5 : mov ebx, 0x48004654 ; add esp, 0x28 ; ret
0x00000200007b578d : mov ebx, 0x4806ffb6 ; add esp, 0x40 ; pop rdi ; ret
0x000002000015b466 : mov ebx, 0x48900030 ; add esp, 0x20 ; pop rbp ; ret
0x000002000057c273 : mov ebx, 0x4890ffaf ; add esp, 0x30 ; pop rbp ; ret
0x000002000057c1b9 : mov ebx, 0x4890ffaf ; add esp, 0x40 ; pop rbp ; ret
0x000002000067946a : mov ebx, 0x48c00000 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001c1250 : mov ebx, 0x48c00000 ; add esp, 0x28 ; ret
0x000002000052fbe1 : mov ebx, 0x48c38bff ; add esp, 0x30 ; pop rbx ; ret
0x000002000015046d : mov ebx, 0x48faffec ; add esp, 0x28 ; ret
0x00000200006f411d : mov ebx, 0x48ff9f55 ; add esp, 0x28 ; ret
0x00000200006b013d : mov ebx, 0x48ffe810 ; add esp, 0x38 ; ret
0x0000020000607cc5 : mov ebx, 0x48fffffd ; add esp, 0x28 ; ret
0x00000200005fcf42 : mov ebx, 0x4ee80014 ; jmp 0x200005fcf11
0x00000200004c749f : mov ebx, 0x4f8d48ff ; adc al, ch ; mov dh, 0xb ; ret 0xe8ff
0x00000200006d9e3a : mov ebx, 0x75c00000 ; or bh, bh ; ret
0x0000020000176112 : mov ebx, 0x80000025 ; jmp 0x20000112381
0x00000200000965e2 : mov ebx, 0x80fffff8 ; jp 0x200000965f1 ; ret
0x00000200000eeafa : mov ebx, 0x84189c0 ; ret
0x000002000046f659 : mov ebx, 0x89f38b4c ; ret
0x0000020000619c9d : mov ebx, 0x89ff3345 ; ret
0x00000200004de4e1 : mov ebx, 0x8b000000 ; ret
0x0000020000453e51 : mov ebx, 0x8b000304 ; ret
0x000002000053a165 : mov ebx, 0x8b000b08 ; ret
0x0000020000531f13 : mov ebx, 0x8b000c24 ; ret
0x00000200000c63a9 : mov ebx, 0x8b000d78 ; ret 0xf83b
0x000002000055dc47 : mov ebx, 0x8b440009 ; ret
0x00000200001c511f : mov ebx, 0x8b480015 ; add al, 0xc1 ; ret
0x00000200001809f4 : mov ebx, 0x8b4cfff3 ; ret
0x000002000066fc22 : mov ebx, 0x8baabbaa ; ret 0x6948
0x0000020000201526 : mov ebx, 0x8bc00000 ; ret
0x00000200007055c1 : mov ebx, 0x8bff95a4 ; ret
0x00000200007cf3b1 : mov ebx, 0x8bff978c ; ret
0x00000200007b8841 : mov ebx, 0x8bffa947 ; ret
0x000002000040eee1 : mov ebx, 0x8bffbf76 ; ret
0x00000200004305c1 : mov ebx, 0x8bffc2f4 ; ret
0x00000200004770e1 : mov ebx, 0x8bffc70c ; ret
0x0000020000462841 : mov ebx, 0x8bffc8da ; ret
0x000002000053e141 : mov ebx, 0x8bffd0ee ; ret
0x0000020000478e41 : mov ebx, 0x8bffdd41 ; ret
0x000002000004fc30 : mov ebx, 0x8bfffffb ; ret
0x0000020000100443 : mov ebx, 0x988189c0 ; pop rax ; add byte ptr [rax], al ; ret
0x000002000020fa47 : mov ebx, 0xb000001 ; sal dh, 1 ; ret 0x753f
0x0000020000718516 : mov ebx, 0xb70ffffe ; ret
0x00000200003e1168 : mov ebx, 0xc0000001 ; call 0x20000009b88
0x00000200003e1167 : mov ebx, 0xc0000001 ; call 0x20000009b89
0x000002000046f0a6 : mov ebx, 0xc0000001 ; jmp 0x2000046f076
0x0000020000587af7 : mov ebx, 0xc000000d ; jmp 0x200003f3d48
0x00000200005ebde4 : mov ebx, 0xc000000d ; jmp 0x200005080c5
0x000002000005f9ee : mov ebx, 0xc000000e ; jmp 0x2000005f9be
0x00000200005bcfee : mov ebx, 0xc0000010 ; jmp 0x20000459286
0x000002000059451f : mov ebx, 0xc0000022 ; jmp 0x20000413a9b
0x00000200005b4b62 : mov ebx, 0xc0000024 ; jmp 0x20000520e5f
0x00000200004588cf : mov ebx, 0xc0000034 ; jmp 0x2000045889e
0x00000200006247f2 : mov ebx, 0xc000009a ; call 0x2000024da48
0x00000200005b4b58 : mov ebx, 0xc000009a ; jmp 0x20000520e5f
0x000002000062ec30 : mov ebx, 0xc000009a ; jmp 0x2000062ebff
0x0000020000587ae6 : mov ebx, 0xc00000e5 ; jmp 0x200003f3d48
0x00000200005f4e83 : mov ebx, 0xc00000e5 ; jmp 0x200005510cc
0x0000020000500b4f : mov ebx, 0xc0000225 ; jmp 0x20000500b1e
0x0000020000481c2f : mov ebx, 0xc0000271 ; jmp 0x20000481bff
0x00000200001796cf : mov ebx, 0xc3558900 ; jmp 0x200001796ea
0x000002000068f81d : mov ebx, 0xc3c00000 ; jmp rax
0x0000020000231576 : mov ebx, 0xc3c00000 ; xor eax, eax ; ret
0x00000200004c746c : mov ebx, 0xcd8b49ff ; call 0x200000e8068
0x00000200004c70f4 : mov ebx, 0xcf8b48ff ; call 0x200000e8068
0x0000020000149605 : mov ebx, 0xe9000000 ; xor cl, dl ; add byte ptr [rax], al ; ret
0x000002000018bd7d : mov ebx, 0xe990fffc ; ret
0x00000200005c9cd9 : mov ebx, 0xe9ffebaa ; ret
0x00000200005d268e : mov ebx, 0xebc00000 ; ret
0x0000020000195def : mov ebx, 0xf6fff110 ; ret 0x7401
0x000002000005a183 : mov ebx, 0xf7000003 ; ret 0xdffe
0x00000200006ee10a : mov ebx, 0xfac27d0d ; push rsi ; outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x000002000068656a : mov ebx, 0xfc00000 ; ret
0x000002000066fc48 : mov ebx, 0xff000001 ; ret 0x3b41
0x00000200007c6b41 : mov ebx, 0xffffa864 ; ret
0x000002000047fe03 : mov ebx, 1 ; jmp 0x2000047fd79
0x00000200001573eb : mov ebx, dword ptr [rbp - 0x68] ; add rsp, 0x68 ; ret
0x00000200003c73f6 : mov ebx, dword ptr [rbx] ; call 0x200000036e4
0x000002000021c6f1 : mov ebx, dword ptr [rcx + rax*8 + 0x10] ; jmp 0x2000021c703
0x00000200003d4831 : mov ebx, dword ptr [rdi + rsi] ; call 0x200000036cb
0x00000200004b970b : mov ebx, dword ptr [rdi] ; mov rcx, rdi ; call 0x200000da2b8
0x0000020000038188 : mov ebx, dword ptr [rsi] ; call 0x2000006fbd8
0x0000020000546cc1 : mov ebx, dword ptr [rsi] ; inc rdx ; jmp 0x20000546cab
0x0000020000021846 : mov ebx, dword ptr [rsp + 0x10] ; pop rdi ; ret
0x0000020000091e13 : mov ebx, dword ptr [rsp + 0x10] ; ret
0x000002000003b9c0 : mov ebx, dword ptr [rsp + 0x20] ; add rsp, 0x10 ; pop rdi ; ret
0x00000200000a1193 : mov ebx, dword ptr [rsp + 0x20] ; pop rdi ; ret
0x00000200000269a8 : mov ebx, dword ptr [rsp + 0x28] ; pop rbp ; ret
0x0000020000402a2b : mov ebx, dword ptr [rsp + 0x28] ; pop rdi ; ret
0x0000020000034acf : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rcx ; ret
0x0000020000004098 : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000257a4 : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000706a0 : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000200005f4e8d : mov ebx, dword ptr [rsp + 0x30] ; jmp 0x200005510cb
0x0000020000004022 : mov ebx, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005c069 : mov ebx, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000026e2e : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000076d22 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004ce563 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000f6442 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000d0ca4 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rcx ; ret
0x000002000000c142 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013575d : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rsi ; ret
0x00000200007d1677 : mov ebx, dword ptr [rsp + 0x40] ; jmp 0x200007d1645
0x00000200001031af : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000006f4b8 : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rsi ; ret
0x000002000003c8c6 : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067cb2a : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rsi ; ret
0x000002000009ecbe : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x38 ; ret
0x000002000000bc68 : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000502333 : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rsi ; ret
0x000002000043541e : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000074ef : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000138984 : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rsi ; ret
0x00000200001da8c6 : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000053db40 : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000131eae : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000057728 : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000062d7fe : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rsi ; ret
0x000002000045a549 : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000b6d9f : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000c918b : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rsi ; ret
0x0000020000114819 : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rbp ; ret
0x000002000000c782 : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001fddff : mov ebx, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000799aa8 : mov ebx, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rsi ; ret
0x0000020000114a0d : mov ebx, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rdi ; ret
0x000002000013ba64 : mov ebx, dword ptr [rsp + 0x70] ; add rsp, 0x60 ; pop rbp ; ret
0x000002000002d9fc : mov ebx, dword ptr [rsp + 0x70] ; add rsp, 0x60 ; pop rdi ; ret
0x00000200002495b3 : mov ebx, dword ptr [rsp + 0x70] ; mov rax, rdx ; jmp 0x200002495c4
0x00000200000fa135 : mov ebx, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbp ; ret
0x00000200002072c0 : mov ebx, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rbp ; ret
0x00000200003c6905 : mov ebx, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rdi ; ret
0x000002000008825a : mov ebx, dword ptr [rsp + 8] ; mov al, dl ; ret
0x00000200001b81ef : mov ebx, dword ptr [rsp + 8] ; mov al, r10b ; ret
0x0000020000216958 : mov ebx, dword ptr [rsp + 8] ; mov al, r8b ; ret
0x00000200007a30be : mov ebx, dword ptr [rsp + 8] ; mov eax, 1 ; ret
0x00000200003ff80f : mov ebx, dword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000121624 : mov ebx, dword ptr [rsp + 8] ; mov eax, r10d ; ret
0x0000020000005c55 : mov ebx, dword ptr [rsp + 8] ; mov eax, r11d ; ret
0x00000200001b3a5f : mov ebx, dword ptr [rsp + 8] ; mov eax, r8d ; ret
0x000002000000a55c : mov ebx, dword ptr [rsp + 8] ; mov eax, r9d ; ret
0x00000200001b7417 : mov ebx, dword ptr [rsp + 8] ; mov qword ptr [r8], r11 ; ret
0x0000020000039116 : mov ebx, dword ptr [rsp + 8] ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000797370 : mov ebx, dword ptr [rsp + 8] ; mov rax, r10 ; ret
0x000002000012a490 : mov ebx, dword ptr [rsp + 8] ; mov rax, r11 ; ret
0x000002000052a049 : mov ebx, dword ptr [rsp + 8] ; mov rax, r8 ; ret
0x00000200007109e2 : mov ebx, dword ptr [rsp + 8] ; mov rax, r9 ; ret
0x00000200000092c3 : mov ebx, dword ptr [rsp + 8] ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000000bcf8 : mov ebx, dword ptr [rsp + 8] ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000398c1 : mov ebx, dword ptr [rsp + 8] ; mov rsi, qword ptr [rsp + 0x10] ; ret
0x000002000023635d : mov ebx, dword ptr [rsp + 8] ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x00000200006863a8 : mov ebx, dword ptr [rsp + 8] ; movzx eax, r9w ; ret
0x000002000001e0b9 : mov ebx, dword ptr [rsp + 8] ; ret
0x00000200003f8eba : mov ebx, dword ptr [rsp] ; add rsp, 8 ; ret
0x0000020000661a06 : mov ebx, eax ; call 0x2000001dcd4
0x0000020000441dc0 : mov ebx, eax ; call 0x2000006d285
0x0000020000463f27 : mov ebx, eax ; call 0x20000093ab5
0x00000200004bf720 : mov ebx, eax ; call 0x200000e7e75
0x00000200004bb3c6 : mov ebx, eax ; call 0x200000e99c5
0x00000200005250c9 : mov ebx, eax ; call 0x20000148075
0x0000020000712a86 : mov ebx, eax ; call 0x2000021ed78
0x000002000061ef1b : mov ebx, eax ; call 0x2000024d005
0x00000200007d0a86 : mov ebx, eax ; call 0x200003f7bc1
0x0000020000713171 : mov ebx, eax ; call qword ptr [rip - 0x3d28f9]
0x00000200007131de : mov ebx, eax ; call rdi
0x0000020000713a50 : mov ebx, eax ; call rsi
0x0000020000176129 : mov ebx, eax ; jmp 0x20000112374
0x00000200001c0211 : mov ebx, eax ; lea rcx, qword ptr [rsp + 0x40] ; call 0x200001bc47d
0x000002000010bb65 : mov ebx, eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000065f5d2 : mov ebx, eax ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004c5951 : mov ebx, eax ; mov rcx, rdi ; call 0x200000e7da8
0x00000200001bce2d : mov ebx, eax ; test rax, rax ; je 0x200001bce3f ; call rax
0x000002000062575b : mov ebx, ebp ; call 0x2000024da45
0x00000200007c8655 : mov ebx, ebp ; jmp 0x200007aa813
0x00000200005fc362 : mov ebx, ebx ; push -0x53e1609 ; or al, 0x8b ; ret 0xe8c1
0x000002000008d733 : mov ebx, ecx ; add rcx, 0x20 ; call 0x200000e9998
0x00000200000411ac : mov ebx, ecx ; call 0x20000041328
0x000002000045225f : mov ebx, ecx ; call 0x2000007a401
0x000002000000ca1a : mov ebx, ecx ; call 0x20000408c68
0x00000200001dc26f : mov ebx, ecx ; call qword ptr [rax]
0x0000020000587af0 : mov ebx, ecx ; jmp 0x200003f3d45
0x00000200003eb5d8 : mov ebx, ecx ; lea r8d, dword ptr [rdx + 0x30] ; call 0x20000157888
0x00000200004385d5 : mov ebx, ecx ; lea rcx, qword ptr [rax + 0x10] ; call 0x2000005f429
0x0000020000452ce3 : mov ebx, ecx ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200006636d3 : mov ebx, ecx ; mov rcx, rbx ; call 0x200001ef967
0x00000200004f568a : mov ebx, ecx ; mov rdx, qword ptr [rdx + 8] ; call qword ptr [rdi]
0x000002000070f4a7 : mov ebx, ecx ; test rax, rax ; je 0x2000070f4ba ; call rax
0x00000200006d46fd : mov ebx, ecx ; xor r14d, r14d ; call 0x20000520943
0x00000200006256c2 : mov ebx, edi ; call 0x2000024da45
0x000002000043ee56 : mov ebx, edi ; jmp 0x2000043ee1f
0x000002000044df62 : mov ebx, edx ; call 0x2000001a250
0x00000200000f8b06 : mov ebx, edx ; call 0x20000074d14
0x00000200001dc329 : mov ebx, edx ; call qword ptr [rax]
0x000002000044871f : mov ebx, edx ; mov rdi, rcx ; call 0x2000006d288
0x00000200001a3e72 : mov ebx, esi ; dec dword ptr [rax - 0x75] ; ret 0x84e9
0x0000020000525603 : mov ebx, esp ; mov rcx, rdi ; call 0x20000148078
0x0000020000525602 : mov ebx, r12d ; mov rcx, rdi ; call 0x20000148079
0x00000200006256c1 : mov ebx, r15d ; call 0x2000024da46
0x00000200003eb5d7 : mov ebx, r9d ; lea r8d, dword ptr [rdx + 0x30] ; call 0x20000157889
0x000002000016188d : mov ecx, 0x10 ; call rax
0x0000020000463d7e : mov ecx, 0x10001f ; call 0x200000938f0
0x0000020000541b6c : mov ecx, 0x18 ; cmove eax, ecx ; ret
0x00000200003e5596 : mov ecx, 0x19b0 ; call 0x200000057d0
0x00000200007924fa : mov ecx, 0x1d8d48ff ; xchg eax, ecx ; ret 0xffab
0x000002000062a8da : mov ecx, 0x200 ; call 0x2000024da48
0x0000020000441a15 : mov ecx, 0x208 ; call 0x2000006c738
0x00000200004aa7b3 : mov ecx, 0x358 ; add byte ptr [rdi + 1], dh ; ret
0x000002000003e2b5 : mov ecx, 0x410012f9 ; mov al, al ; ret
0x000002000051cc1d : mov ecx, 0x48000971 ; add esp, 0x28 ; ret
0x00000200001d849b : mov ecx, 0x48001cfb ; add esp, 0x28 ; ret
0x000002000000b6a1 : mov ecx, 0x48008948 ; add esp, 0x20 ; pop rbx ; ret
0x000002000057fdb9 : mov ecx, 0x4890ffbc ; add esp, 0x30 ; pop rbp ; ret
0x00000200005513ac : mov ecx, 0x48c033ff ; add esp, 0x28 ; ret
0x0000020000623a73 : mov ecx, 0x48c033ff ; add esp, 0x58 ; ret
0x0000020000623a1e : mov ecx, 0x48c38bff ; add esp, 0x40 ; pop rbx ; ret
0x00000200006ad843 : mov ecx, 0x48ffb9f7 ; add esp, 0x28 ; ret
0x00000200005224b3 : mov ecx, 0x48ffc187 ; add esp, 0x50 ; pop rbx ; ret
0x0000020000456133 : mov ecx, 0x48ffcf36 ; add esp, 0x30 ; pop rbx ; ret
0x00000200001cbe63 : mov ecx, 0x48ffef22 ; add esp, 0x38 ; ret
0x00000200002222b3 : mov ecx, 0x48fff189 ; add esp, 0x78 ; ret
0x000002000016142b : mov ecx, 0x4dffea90 ; mov dword ptr [rax], edx ; ret
0x000002000051ed66 : mov ecx, 0x62 ; call 0x20000148558
0x0000020000137dc7 : mov ecx, 0x64 ; mov eax, ecx ; ret
0x000002000006d2f0 : mov ecx, 0x75c03b49 ; add al, 0x49 ; mov eax, eax ; ret
0x0000020000462991 : mov ecx, 0x81848bff ; loopne 0x20000462926 ; je 0x200004629a3 ; ret
0x00000200004f1098 : mov ecx, 0x834804e0 ; ret 0x4418
0x00000200003e721a : mov ecx, 0x850ffff3 ; wait ; ret 0x19
0x00000200006da6b3 : mov ecx, 0x85ffa613 ; ror byte ptr [rdi], 0x94 ; ret
0x0000020000653407 : mov ecx, 0x8b0000bd ; ret
0x00000200000f5b83 : mov ecx, 0x8b000619 ; ret
0x00000200006b1957 : mov ecx, 0x8b34ebff ; ret
0x00000200004fc0d5 : mov ecx, 0x8b44000e ; ret
0x00000200007097d5 : mov ecx, 0x8b48ff96 ; ret
0x00000200007d1673 : mov ecx, 0x8b48ffa7 ; pop rsp ; and al, 0x40 ; jmp 0x200007d1649
0x00000200007116f3 : mov ecx, 0x8b48ffb3 ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200001abd49 : mov ecx, 0x8b48fff7 ; ret
0x00000200000c097d : mov ecx, 0x8b49000d ; ret 0x8b48
0x00000200005a171c : mov ecx, 0x8b4cffe8 ; ret
0x00000200005c42e3 : mov ecx, 0x8bffb23a ; ret
0x00000200004d4b23 : mov ecx, 0x8bffb94d ; ret
0x00000200006b6343 : mov ecx, 0x8bffb96c ; ret
0x0000020000672adc : mov ecx, 0x92 ; call 0x2000000ed37
0x0000020000160f6d : mov ecx, 0xa ; call rax
0x00000200000f76a1 : mov ecx, 0xa ; mov edi, edx ; call 0x200000c3999
0x0000020000524e60 : mov ecx, 0xb ; call 0x20000148558
0x000002000021c2cb : mov ecx, 0xbfff ; and word ptr [rdx + rax*2], cx ; ret
0x0000020000607d57 : mov ecx, 0xc ; call 0x20000113fb3
0x000002000021cb49 : mov ecx, 0xc000000d ; mov eax, r9d ; ret
0x0000020000173a6f : mov ecx, 0xc0000429 ; cmove eax, ecx ; ret
0x0000020000056f25 : mov ecx, 0xc0320012 ; ret
0x00000200000038fd : mov ecx, 0xc033cccc ; ret
0x000002000063270e : mov ecx, 0xc48348ff ; pop rbx ; ret
0x0000020000160f4a : mov ecx, 0xd ; call rax
0x00000200004ad2c3 : mov ecx, 0xe80029af ; xchg eax, esp ; lodsd eax, dword ptr [rsi] ; ret
0x00000200001495c5 : mov ecx, 0xe9000000 ; jb 0x2000014959f ; add byte ptr [rax], al ; ret
0x000002000014b5c5 : mov ecx, 0xe9000001 ; jb 0x2000014b57f ; add byte ptr [rax], al ; ret
0x000002000018a481 : mov ecx, 0xe990ffea ; ret
0x000002000016c059 : mov ecx, 0xe9c00002 ; ret
0x0000020000451333 : mov ecx, 0xebffc2ba ; ret
0x0000020000466443 : mov ecx, 0xebfff80e ; ret 0xcccc
0x00000200001528e5 : mov ecx, 0xf0 ; xor eax, eax ; ret
0x00000200005078cb : mov ecx, 0xfde80006 ; pop rax ; ret
0x00000200006c0997 : mov ecx, 0xff000001 ; ret 0xfa83
0x000002000051f233 : mov ecx, 0xfffffffe ; call 0x20000148479
0x0000020000461841 : mov ecx, 1 ; call 0x2000008e15c
0x0000020000464942 : mov ecx, 1 ; call 0x2000008e15d
0x00000200006257d5 : mov ecx, 1 ; call 0x2000024da48
0x00000200006ca6a1 : mov ecx, 1 ; call 0x200006c693b
0x00000200005389ee : mov ecx, 1 ; call r8
0x00000200006bb618 : mov ecx, 1 ; call rax
0x000002000013d200 : mov ecx, 1 ; cmovg eax, ecx ; ret
0x00000200005b3dac : mov ecx, 1 ; jmp 0x200005b3dd0
0x00000200001bdd82 : mov ecx, 1 ; mov al, cl ; ret
0x0000020000207b9e : mov ecx, 1 ; mov eax, ecx ; ret
0x0000020000703bde : mov ecx, 1 ; mov eax, r9d ; ret
0x000002000022bea3 : mov ecx, 1 ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x000002000021f133 : mov ecx, 2 ; call rax
0x000002000004341c : mov ecx, 2 ; mov cr8, rcx ; ret
0x00000200006b7aa9 : mov ecx, 3 ; call rax
0x00000200005d6868 : mov ecx, 3 ; int 0x29
0x0000020000631e01 : mov ecx, 4 ; call 0x200004fe0a3
0x000002000015f3e2 : mov ecx, 6 ; call 0x2000014b6e7
0x00000200006f4f5d : mov ecx, 7 ; call 0x200001511c7
0x00000200000f776c : mov ecx, 9 ; call 0x200000c3a07
0x00000200005ac4bb : mov ecx, 9 ; call 0x200001dbf40
0x00000200005ac4d1 : mov ecx, 9 ; call 0x200001dc1a8
0x0000020000075fd0 : mov ecx, dr0 ; add eax, 0x8bc93300 ; sar byte ptr [rbx], 1 ; ret
0x0000020000475b40 : mov ecx, dword ptr [0x188] ; call 0x20000061dc9
0x0000020000432689 : mov ecx, dword ptr [0x188] ; call 0x200000be969
0x000002000014f199 : mov ecx, dword ptr [0x20] ; call 0x200000eb3e9
0x0000020000026631 : mov ecx, dword ptr [r9 + 0x14] ; cmp r8d, ecx ; jb 0x2000002661e ; ret
0x000002000042f629 : mov ecx, dword ptr [rax + 0x10] ; cmp rcx, rdx ; jne 0x2000042f643 ; ret
0x000002000000ba86 : mov ecx, dword ptr [rax + 0x10] ; test rcx, rcx ; jne 0x2000000ba97 ; ret
0x000002000002559a : mov ecx, dword ptr [rax + 0x10] ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000200001c46d5 : mov ecx, dword ptr [rax + 0x18] ; test rcx, rcx ; je 0x200001c46e9 ; jmp rcx
0x000002000070ff8c : mov ecx, dword ptr [rax + 0x24] ; xor eax, eax ; mov dword ptr [r8 + rcx*4], edx ; ret
0x000002000022c622 : mov ecx, dword ptr [rax + 0x30] ; call r9
0x000002000002e4f0 : mov ecx, dword ptr [rax + 0x30] ; mov qword ptr [rcx + 0x70], r10 ; jmp 0x2000002e4c3
0x00000200001c45f9 : mov ecx, dword ptr [rax + 0x40] ; test rcx, rcx ; je 0x200001c460d ; jmp rcx
0x00000200003c98be : mov ecx, dword ptr [rax + 0x48] ; test rcx, rcx ; je 0x200003c98d0 ; call rcx
0x00000200003dc6ed : mov ecx, dword ptr [rax + 0x48] ; test rcx, rcx ; je 0x200003dc6ff ; call rcx
0x0000020000798e19 : mov ecx, dword ptr [rax + 0x78] ; test rcx, rcx ; jne 0x20000798e2a ; ret
0x00000200001c4599 : mov ecx, dword ptr [rax + 8] ; test rcx, rcx ; je 0x200001c45ab ; call rcx
0x0000020000506a89 : mov ecx, dword ptr [rax - 0x7d] ; ret
0x00000200007cd791 : mov ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x0000020000005336 : mov ecx, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xe0d3
0x0000020000454b03 : mov ecx, dword ptr [rax] ; call 0x2000007a351
0x00000200004d4ae0 : mov ecx, dword ptr [rax] ; call 0x200000fc295
0x0000020000625444 : mov ecx, dword ptr [rax] ; cmp rcx, rax ; jbe 0x20000625457 ; xor eax, eax ; ret
0x00000200007c25a6 : mov ecx, dword ptr [rax] ; inc dword ptr [rcx] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000078f205 : mov ecx, dword ptr [rax] ; mov dword ptr [r8], ecx ; ret
0x000002000070b64b : mov ecx, dword ptr [rbp + 0x10] ; mov byte ptr [rsp + 0x20], r15b ; call r12
0x00000200005171e8 : mov ecx, dword ptr [rbp + 0x10] ; xor rcx, rsp ; call 0x2000013ac79
0x0000020000648809 : mov ecx, dword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x000002000050b136 : mov ecx, dword ptr [rbp + 0x17] ; xor rcx, rsp ; call 0x2000013ac79
0x000002000050fea7 : mov ecx, dword ptr [rbp + 0x27] ; xor rcx, rsp ; call 0x2000013ac79
0x00000200000d26f5 : mov ecx, dword ptr [rbp + 0x28] ; call 0x200000be965
0x000002000050c4c0 : mov ecx, dword ptr [rbp + 0x2f] ; xor rcx, rsp ; call 0x2000013ac79
0x00000200005ba53e : mov ecx, dword ptr [rbp + 0x30] ; call rdx
0x00000200005bd144 : mov ecx, dword ptr [rbp + 0x30] ; jmp 0x200004593aa
0x0000020000517256 : mov ecx, dword ptr [rbp + 0x37] ; xor rcx, rsp ; call 0x2000013ac79
0x00000200005201ae : mov ecx, dword ptr [rbp + 0x38] ; call 0x20000148076
0x000002000041b28e : mov ecx, dword ptr [rbp + 0x38] ; call 0x20000157545
0x00000200004cf8f6 : mov ecx, dword ptr [rbp + 0x3e0] ; call rax
0x00000200005151d5 : mov ecx, dword ptr [rbp + 0x3f] ; xor rcx, rsp ; call 0x2000013ac79
0x00000200005252be : mov ecx, dword ptr [rbp + 0x40] ; call 0x20000148076
0x000002000015c2fd : mov ecx, dword ptr [rbp + 0x40] ; call rax
0x000002000059b9f9 : mov ecx, dword ptr [rbp + 0x460] ; mov r8d, r10d ; call rax
0x000002000067ea56 : mov ecx, dword ptr [rbp + 0x47] ; xor rcx, rsp ; call 0x2000013ac78
0x00000200005147c3 : mov ecx, dword ptr [rbp + 0x47] ; xor rcx, rsp ; call 0x2000013ac79
0x0000020000525312 : mov ecx, dword ptr [rbp + 0x48] ; call 0x20000148076
0x000002000015af51 : mov ecx, dword ptr [rbp + 0x50] ; call rax
0x000002000051f46d : mov ecx, dword ptr [rbp + 0x58] ; call 0x20000148076
0x0000020000515ff1 : mov ecx, dword ptr [rbp + 0x58] ; xor rcx, rsp ; call 0x2000013ac79
0x000002000047a1da : mov ecx, dword ptr [rbp + 0x60] ; call 0x20000426419
0x0000020000642657 : mov ecx, dword ptr [rbp + 0x67] ; call r12
0x00000200005a9431 : mov ecx, dword ptr [rbp + 0x68] ; call r14
0x000002000050cdc9 : mov ecx, dword ptr [rbp + 0x78] ; xor rcx, rsp ; call 0x2000013ac79
0x0000020000510122 : mov ecx, dword ptr [rbp + 7] ; xor rcx, rsp ; call 0x2000013ac79
0x00000200004ba818 : mov ecx, dword ptr [rbp + 8] ; call 0x200000e7da6
0x000002000023ffd6 : mov ecx, dword ptr [rbp + 8] ; call 0x2000024c295
0x000002000065e143 : mov ecx, dword ptr [rbp + 8] ; jne 0x2000065e103 ; inc rdx ; jmp 0x2000065e181
0x00000200001f407b : mov ecx, dword ptr [rbp + 8] ; mov rdx, r15 ; call 0x200001f02c8
0x0000020000513923 : mov ecx, dword ptr [rbp - 0x10] ; xor rcx, rsp ; call 0x2000013ac79
0x0000020000525b3d : mov ecx, dword ptr [rbp - 0x11] ; call 0x20000148076
0x0000020000626611 : mov ecx, dword ptr [rbp - 0x18] ; xor edx, edx ; call 0x2000024d008
0x000002000051b6ce : mov ecx, dword ptr [rbp - 0x19] ; call 0x20000148076
0x00000200004fbf80 : mov ecx, dword ptr [rbp - 0x30] ; call 0x200001208c6
0x0000020000527b59 : mov ecx, dword ptr [rbp - 0x39] ; mov ebx, eax ; call 0x20000148078
0x0000020000519b0c : mov ecx, dword ptr [rbp - 0x40] ; call 0x20000148076
0x000002000051da62 : mov ecx, dword ptr [rbp - 0x49] ; mov edi, eax ; call 0x20000148078
0x0000020000527d95 : mov ecx, dword ptr [rbp - 0x61] ; call 0x20000148076
0x00000200006dcf60 : mov ecx, dword ptr [rbp - 0x61] ; call rax
0x0000020000590967 : mov ecx, dword ptr [rbp - 0x71] ; call 0x200001b639e
0x000002000011000c : mov ecx, dword ptr [rbp - 0x75] ; ret
0x00000200005250c6 : mov ecx, dword ptr [rbp - 0x79] ; mov ebx, eax ; call 0x20000148078
0x000002000051096c : mov ecx, dword ptr [rbp - 1] ; xor rcx, rsp ; call 0x2000013ac79
0x00000200005c1fbf : mov ecx, dword ptr [rbp - 8] ; call qword ptr [rax]
0x00000200005136ff : mov ecx, dword ptr [rbp - 8] ; xor rcx, rsp ; call 0x2000013ac79
0x0000020000458c1f : mov ecx, dword ptr [rbp - 9] ; call rax
0x00000200005123b6 : mov ecx, dword ptr [rbp] ; xor rcx, rsp ; call 0x2000013ac79
0x00000200003cf6c6 : mov ecx, dword ptr [rbx + 0x10] ; call qword ptr [rbx]
0x000002000010abb6 : mov ecx, dword ptr [rbx + 0x118] ; add rax, rcx ; ret
0x000002000067a415 : mov ecx, dword ptr [rbx + 0x18] ; mov edx, esi ; call rdi
0x00000200004b693b : mov ecx, dword ptr [rbx + 0x18] ; mov rdx, rbx ; call 0x200000db9b9
0x00000200005e6782 : mov ecx, dword ptr [rbx + 0x28] ; call rax
0x0000020000033d62 : mov ecx, dword ptr [rbx + 0x38] ; mov byte ptr [rcx], al ; jmp 0x20000033d47
0x00000200004511d9 : mov ecx, dword ptr [rbx + 0x80] ; call 0x2000007b879
0x0000020000114497 : mov ecx, dword ptr [rbx + 0xa8] ; call rax
0x00000200000342e4 : mov ecx, dword ptr [rbx + 0xb8] ; call 0x200000f05b8
0x00000200003dc209 : mov ecx, dword ptr [rbx + 8] ; call 0x20000068455
0x00000200005819db : mov ecx, dword ptr [rbx + 8] ; test rcx, rcx ; je 0x200005819b6 ; jmp 0x200005819b1
0x000002000010cb80 : mov ecx, dword ptr [rbx] ; call 0x20000004854
0x000002000049bb77 : mov ecx, dword ptr [rbx] ; call 0x200004c75e9
0x00000200006a24d3 : mov ecx, dword ptr [rbx] ; call 0x20000524545
0x00000200001dbeba : mov ecx, dword ptr [rbx] ; call rax
0x000002000056610b : mov ecx, dword ptr [rcx + 0x10] ; mov rdx, qword ptr [r9 + 8] ; call r8
0x000002000016f876 : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0x2000016f87a ; ret
0x0000020000026632 : mov ecx, dword ptr [rcx + 0x14] ; cmp r8d, ecx ; jb 0x2000002661d ; ret
0x000002000006d2ae : mov ecx, dword ptr [rcx + 0x18] ; test rcx, rcx ; jne 0x2000006d2b2 ; ret
0x000002000016f894 : mov ecx, dword ptr [rcx + 0x18] ; test rcx, rcx ; jne 0x2000016f898 ; ret
0x0000020000494c6d : mov ecx, dword ptr [rcx + 0x18] ; test rcx, rcx ; jne 0x20000494c7e ; ret
0x000002000008e014 : mov ecx, dword ptr [rcx + 0x20] ; add rcx, 0x50 ; call 0x200000ca2f9
0x00000200004f46ff : mov ecx, dword ptr [rcx + 0x28] ; call 0x200003f09f1
0x0000020000029b87 : mov ecx, dword ptr [rcx + 0x28] ; jne 0x20000168e94 ; call rdi
0x00000200001d15a2 : mov ecx, dword ptr [rcx + 0x2990] ; call rax
0x00000200006048aa : mov ecx, dword ptr [rcx + 0x48] ; add eax, dword ptr [rcx + 8] ; ret
0x000002000001f7d1 : mov ecx, dword ptr [rcx + 0x508] ; jmp 0x2000001f7a3
0x0000020000697248 : mov ecx, dword ptr [rcx + 2] ; mov qword ptr [rdx], rcx ; mov eax, r8d ; ret
0x0000020000040ec1 : mov ecx, dword ptr [rcx + 4] ; mov qword ptr [rdx], rcx ; mov rax, r8 ; ret
0x00000200004bc2f9 : mov ecx, dword ptr [rcx + 8] ; call 0x200000e7da6
0x0000020000103263 : mov ecx, dword ptr [rcx + 8] ; call rax
0x0000020000408e3e : mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000200001dc325 : mov ecx, dword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x00000200001cd5ff : mov ecx, dword ptr [rcx + 8] ; mov rdx, rdi ; call 0x2000013987c
0x0000020000102e06 : mov ecx, dword ptr [rcx + 8] ; mov rsi, rdx ; call qword ptr [rbx]
0x0000020000210563 : mov ecx, dword ptr [rcx + 8] ; test rcx, rcx ; jne 0x20000210567 ; ret
0x000002000054fc9d : mov ecx, dword ptr [rcx + 8] ; xor r8d, r8d ; mov rdx, rsi ; call rax
0x00000200000f92fb : mov ecx, dword ptr [rcx + rbx*8] ; test rcx, rcx ; je 0x200000f930f ; call rcx
0x00000200004df01b : mov ecx, dword ptr [rcx - 0x75] ; ret
0x000002000044784d : mov ecx, dword ptr [rcx] ; call 0x2000006d8b5
0x000002000021f26a : mov ecx, dword ptr [rcx] ; cmp r8, rcx ; jne 0x2000021f25f ; ret
0x0000020000496f2c : mov ecx, dword ptr [rcx] ; mov qword ptr [rdx], rcx ; ret
0x000002000058cd00 : mov ecx, dword ptr [rcx] ; mov r8d, 6 ; call rax
0x00000200001ba42b : mov ecx, dword ptr [rcx] ; test r9, r9 ; jne 0x200001ba413 ; xor eax, eax ; ret
0x00000200007baa7a : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0x200007baa70 ; ret
0x00000200004cfaee : mov ecx, dword ptr [rdi + 0x2e8] ; call rax
0x00000200005e371b : mov ecx, dword ptr [rdi + 0x38] ; lea rdx, qword ptr [rbp + 7] ; call 0x2000005fa09
0x0000020000448413 : mov ecx, dword ptr [rdi + 0x98] ; call 0x20000077c49
0x00000200004484a3 : mov ecx, dword ptr [rdi + 0x98] ; call 0x20000077da9
0x00000200000c2e71 : mov ecx, dword ptr [rdi + 0xd8] ; call qword ptr [rax]
0x00000200004bd66e : mov ecx, dword ptr [rdi + 8] ; call 0x200000e7da6
0x000002000011fd59 : mov ecx, dword ptr [rdi + 8] ; call r8
0x0000020000428f86 : mov ecx, dword ptr [rdi + 8] ; call rax
0x00000200007058e9 : mov ecx, dword ptr [rdi + rcx] ; call 0x200000f7ff9
0x00000200004e33e7 : mov ecx, dword ptr [rdi - 8] ; mov rdx, rdi ; call qword ptr [rax]
0x00000200001fd05e : mov ecx, dword ptr [rdx + 0x1d8] ; call rax
0x00000200001d1026 : mov ecx, dword ptr [rdx + 0x2990] ; call rdi
0x0000020000136533 : mov ecx, dword ptr [rdx + 0xc] ; cmp eax, ecx ; ja 0x20000136546 ; sbb eax, eax ; ret
0x000002000003a519 : mov ecx, dword ptr [rdx + rax*8 + 8] ; xor eax, eax ; mov qword ptr [r9], rcx ; ret
0x000002000070490d : mov ecx, dword ptr [rdx - 0x28] ; mov qword ptr [r9 + 0x20], rcx ; ret
0x00000200005490c2 : mov ecx, dword ptr [rdx] ; add bh, bh ; ret
0x000002000054917d : mov ecx, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000147e6c : mov ecx, dword ptr [rdx] ; mov rdx, qword ptr [rdx + 8] ; call r10
0x00000200001c1ebd : mov ecx, dword ptr [rip + 0x13798d] ; call r9
0x00000200001c1c9d : mov ecx, dword ptr [rip + 0x137bad] ; call r9
0x00000200001c1ad2 : mov ecx, dword ptr [rip + 0x137d78] ; call r9
0x00000200001c1354 : mov ecx, dword ptr [rip + 0x1384f6] ; call r9
0x00000200001c088c : mov ecx, dword ptr [rip + 0x138fbe] ; call r9
0x00000200001c04f4 : mov ecx, dword ptr [rip + 0x139356] ; call r9
0x00000200001c0138 : mov ecx, dword ptr [rip + 0x139712] ; call r9
0x00000200001bebf4 : mov ecx, dword ptr [rip + 0x13ac56] ; call r9
0x00000200001be1ea : mov ecx, dword ptr [rip + 0x13b660] ; call r9
0x00000200001bdf12 : mov ecx, dword ptr [rip + 0x13b938] ; call r9
0x00000200001bd913 : mov ecx, dword ptr [rip + 0x13bf37] ; call r9
0x00000200001bd7da : mov ecx, dword ptr [rip + 0x13c070] ; call r9
0x00000200001bd5de : mov ecx, dword ptr [rip + 0x13c26c] ; call r9
0x00000200001bcdaa : mov ecx, dword ptr [rip + 0x13caa0] ; call r9
0x00000200005f6465 : mov ecx, dword ptr [rip + 0x151c9d] ; call 0x200002164b5
0x000002000019dcd8 : mov ecx, dword ptr [rip + 0x16568a] ; call rax
0x0000020000584770 : mov ecx, dword ptr [rip + 0x1c43d2] ; call 0x20000470994
0x00000200005846e1 : mov ecx, dword ptr [rip + 0x1c4441] ; call 0x20000470994
0x0000020000584749 : mov ecx, dword ptr [rip + 0x1c4749] ; call 0x20000470994
0x00000200006b46a0 : mov ecx, dword ptr [rip + 0x944c2] ; call 0x20000470994
0x00000200006017aa : mov ecx, dword ptr [rip - 0x2dc508] ; call rax
0x0000020000633f7a : mov ecx, dword ptr [rip - 0x2f3e48] ; call rax
0x00000200007a9444 : mov ecx, dword ptr [rip - 0x3fef0a] ; call 0x200003d2fa9
0x0000020000705f9d : mov ecx, dword ptr [rip - 0x40e4c7] ; call rax
0x00000200007b3aa0 : mov ecx, dword ptr [rip - 0x52982] ; call 0x200003e2e1d
0x00000200003fba0e : mov ecx, dword ptr [rip - 0xbb8dc] ; call rax
0x00000200001a0306 : mov ecx, dword ptr [rsi + 0x24] ; xor r8d, r8d ; xor edx, edx ; call rax
0x00000200003c856e : mov ecx, dword ptr [rsi + 0x28] ; call rax
0x000002000014e09f : mov ecx, dword ptr [rsi + 0x50] ; jmp rcx
0x000002000017614d : mov ecx, dword ptr [rsi + 0x58] ; mov edx, ebp ; call 0x200001123a3
0x000002000008592c : mov ecx, dword ptr [rsi + 0xa8] ; mov edx, ebp ; call rax
0x0000020000085e0d : mov ecx, dword ptr [rsi + 0xa8] ; mov edx, r15d ; call rax
0x00000200001dc4b2 : mov ecx, dword ptr [rsi + 8] ; call qword ptr [rax]
0x0000020000019fab : mov ecx, dword ptr [rsi + 8] ; call rax
0x000002000052c023 : mov ecx, dword ptr [rsi + rbp*8 + 0x28] ; call 0x20000157547
0x00000200000afeaf : mov ecx, dword ptr [rsi] ; add dh, dh ; ret
0x00000200003df19a : mov ecx, dword ptr [rsi] ; call 0x2000000ca11
0x000002000022bd79 : mov ecx, dword ptr [rsi] ; call 0x20000148074
0x00000200005e937d : mov ecx, dword ptr [rsi] ; call 0x2000020a93d
0x0000020000623d8a : mov ecx, dword ptr [rsi] ; xor edx, edx ; call 0x2000024d007
0x000002000066c543 : mov ecx, dword ptr [rsp + 0x110] ; call 0x200001487b9
0x000002000000ce07 : mov ecx, dword ptr [rsp + 0x148] ; call 0x200004990c5
0x00000200001be155 : mov ecx, dword ptr [rsp + 0x20] ; call r9
0x00000200001be042 : mov ecx, dword ptr [rsp + 0x20] ; call rax
0x0000020000468c55 : mov ecx, dword ptr [rsp + 0x260] ; call rax
0x00000200006afdf5 : mov ecx, dword ptr [rsp + 0x28] ; mov dword ptr [rdx], ecx ; ret
0x000002000051964d : mov ecx, dword ptr [rsp + 0x30] ; call 0x20000148077
0x00000200001d8505 : mov ecx, dword ptr [rsp + 0x30] ; mov qword ptr [rcx], r10 ; ret
0x00000200004df9c7 : mov ecx, dword ptr [rsp + 0x38] ; call rax
0x00000200001d2774 : mov ecx, dword ptr [rsp + 0x38] ; mov dword ptr [rcx], r11d ; mov eax, r10d ; ret
0x00000200004cca29 : mov ecx, dword ptr [rsp + 0x40] ; call 0x200000eef37
0x00000200005df8a8 : mov ecx, dword ptr [rsp + 0x40] ; call 0x2000020bd3b
0x0000020000623f38 : mov ecx, dword ptr [rsp + 0x40] ; call 0x2000024d007
0x00000200004de0f5 : mov ecx, dword ptr [rsp + 0x40] ; call rax
0x00000200003e7985 : mov ecx, dword ptr [rsp + 0x48] ; call 0x20000007c4f
0x00000200004334da : mov ecx, dword ptr [rsp + 0x48] ; call 0x200000620f7
0x000002000047bac6 : mov ecx, dword ptr [rsp + 0x48] ; call 0x200000e7da6
0x00000200004c6fe5 : mov ecx, dword ptr [rsp + 0x48] ; call 0x200000e7da7
0x00000200004b88c2 : mov ecx, dword ptr [rsp + 0x48] ; call 0x200000e7e77
0x00000200005fe58f : mov ecx, dword ptr [rsp + 0x48] ; call 0x2000049a816
0x000002000068f6f2 : mov ecx, dword ptr [rsp + 0x48] ; call rax
0x00000200003dfac7 : mov ecx, dword ptr [rsp + 0x50] ; call 0x2000000c353
0x000002000051f5fe : mov ecx, dword ptr [rsp + 0x50] ; call 0x20000148077
0x000002000014c61c : mov ecx, dword ptr [rsp + 0x50] ; call rdx
0x0000020000629ca9 : mov ecx, dword ptr [rsp + 0x58] ; call 0x2000024d007
0x00000200005fe599 : mov ecx, dword ptr [rsp + 0x60] ; call 0x2000049a816
0x00000200006359e4 : mov ecx, dword ptr [rsp + 0x60] ; call qword ptr [rip - 0x3deab6]
0x000002000046b286 : mov ecx, dword ptr [rsp + 0x68] ; call 0x2000009a737
0x00000200004bb3d6 : mov ecx, dword ptr [rsp + 0x68] ; call 0x200000e7da7
0x00000200004c589d : mov ecx, dword ptr [rsp + 0x68] ; call 0x200000e7e77
0x000002000061d09d : mov ecx, dword ptr [rsp + 0x68] ; call 0x2000024d007
0x00000200001bfa60 : mov ecx, dword ptr [rsp + 0x68] ; call rax
0x000002000049ea4a : mov ecx, dword ptr [rsp + 0x68] ; xor rcx, rsp ; call 0x2000013ac79
0x000002000051c293 : mov ecx, dword ptr [rsp + 0x70] ; call 0x20000148077
0x0000020000527719 : mov ecx, dword ptr [rsp + 0x70] ; mov ebx, eax ; call 0x20000148079
0x000002000070e988 : mov ecx, dword ptr [rsp + 0x70] ; xor rcx, rsp ; call 0x2000013ac79
0x000002000004df62 : mov ecx, dword ptr [rsp + 0x78] ; call rax
0x0000020000527885 : mov ecx, dword ptr [rsp + 0x78] ; mov ebx, eax ; call 0x20000148079
0x00000200003eea2c : mov ecx, dword ptr [rsp + 0x78] ; xor rcx, rsp ; call 0x2000013ac79
0x0000020000416d26 : mov ecx, dword ptr [rsp + 0x88] ; call r12
0x00000200001bcba4 : mov ecx, dword ptr [rsp + 0x90] ; call rax
0x00000200003df18e : mov ecx, eax ; call 0x2000000e821
0x0000020000101822 : mov ecx, eax ; call 0x20000046499
0x000002000044787a : mov ecx, eax ; call 0x2000006f599
0x0000020000450129 : mov ecx, eax ; call 0x2000007a465
0x0000020000156b9d : mov ecx, eax ; call 0x20000092e24
0x00000200004bd61b : mov ecx, eax ; call 0x200000e7da5
0x00000200001e7866 : mov ecx, eax ; call 0x200000e9a59
0x00000200004eeee2 : mov ecx, eax ; call 0x20000113d59
0x000002000051c017 : mov ecx, eax ; call 0x2000013fb95
0x000002000051ebe8 : mov ecx, eax ; call 0x200001412c9
0x000002000051ad45 : mov ecx, eax ; call 0x20000149a35
0x000002000052ac8d : mov ecx, eax ; call 0x20000157545
0x000002000043b66f : mov ecx, eax ; call 0x20000157884
0x0000020000529b0d : mov ecx, eax ; call 0x20000157885
0x00000200007c3515 : mov ecx, eax ; call 0x20000157888
0x000002000017bb6d : mov ecx, eax ; call 0x20000217d9c
0x00000200007ae169 : mov ecx, eax ; call 0x200003d02e5
0x000002000000ca8e : mov ecx, eax ; call 0x20000408d34
0x00000200001e605c : mov ecx, eax ; call qword ptr [rax]
0x00000200006bdd22 : mov ecx, eax ; call r10
0x0000020000717937 : mov ecx, eax ; call r15
0x000002000062e91f : mov ecx, eax ; call r8
0x0000020000500135 : mov ecx, eax ; call r9
0x000002000017a175 : mov ecx, eax ; call rdx
0x0000020000190e14 : mov ecx, eax ; inc rdx ; jmp 0x20000190dcd
0x000002000011ea08 : mov ecx, eax ; jmp rdx
0x00000200001d3aab : mov ecx, eax ; mov eax, ecx ; add rsp, 0x28 ; ret
0x000002000012d8b8 : mov ecx, eax ; mov eax, ecx ; ret
0x0000020000447e6a : mov ecx, eax ; mov eax, r9d ; add rsp, 0x28 ; ret
0x0000020000005bf8 : mov ecx, eax ; mov eax, r9d ; add rsp, 0x38 ; ret
0x000002000046a434 : mov ecx, eax ; mov eax, r9d ; add rsp, 0x48 ; ret
0x00000200004c6df5 : mov ecx, eax ; mov r8, r12 ; call r10
0x000002000040118c : mov ecx, eax ; mov r8d, eax ; call rsi
0x0000020000182a37 : mov ecx, eax ; mov rax, qword ptr [rip + 0x226a50] ; call rax
0x000002000017b5ae : mov ecx, eax ; mov rax, qword ptr [rip + 0x22ded9] ; call rax
0x000002000044779b : mov ecx, eax ; mov rax, qword ptr [rip - 0x9e4ec] ; call rax
0x000002000044d94c : mov ecx, eax ; mov rax, qword ptr [rip - 0xa469d] ; call rax
0x00000200000c5a8f : mov ecx, eax ; mov rax, r9 ; ret
0x00000200006e8173 : mov ecx, eax ; mov rax, rcx ; add rsp, 0x28 ; ret
0x000002000052e10b : mov ecx, eax ; mov rdx, qword ptr [rdi + 8] ; call 0x20000157549
0x000002000014c398 : mov ecx, eax ; mov rdx, r9 ; encls ; pop rbx ; ret
0x00000200003e61a0 : mov ecx, eax ; mov rsi, rax ; call 0x20000007c18
0x00000200003fe0cf : mov ecx, ebp ; call 0x2000000a3d8
0x000002000043a853 : mov ecx, ebp ; call 0x20000056a8c
0x0000020000058f57 : mov ecx, ebp ; call 0x20000075194
0x000002000047491b : mov ecx, ebp ; call 0x2000009e095
0x00000200006829ca : mov ecx, ebp ; call 0x200000e7da9
0x00000200004bb61b : mov ecx, ebp ; call 0x200000e7e75
0x00000200004c60f1 : mov ecx, ebp ; call 0x200000e8065
0x00000200004d429a : mov ecx, ebp ; call 0x200000fc295
0x00000200001cf7da : mov ecx, ebp ; call 0x2000013ba74
0x000002000011c232 : mov ecx, ebp ; call 0x20000151289
0x00000200005ba6f6 : mov ecx, ebp ; call 0x200001dbf3d
0x0000020000220d78 : mov ecx, ebp ; call 0x2000024d004
0x000002000062b822 : mov ecx, ebp ; call 0x2000024d005
0x00000200007adb4b : mov ecx, ebp ; call 0x200003d3631
0x00000200006e00d9 : mov ecx, ebp ; call 0x20000401358
0x00000200004e5832 : mov ecx, ebp ; call 0x200004cb458
0x00000200003f7d90 : mov ecx, ebp ; call r12
0x0000020000006c45 : mov ecx, ebp ; call r14
0x0000020000410b69 : mov ecx, ebp ; call r15
0x000002000008855d : mov ecx, ebp ; call rax
0x000002000070258f : mov ecx, ebp ; call rbx
0x00000200004a9c5c : mov ecx, ebp ; call rdi
0x00000200003ff069 : mov ecx, ebp ; mov dword ptr [rsp + 0x20], r14d ; call r12
0x000002000062ce9e : mov ecx, ebp ; mov edi, eax ; call 0x2000024d007
0x0000020000670d59 : mov ecx, ebp ; mov edx, ebx ; call 0x2000024d006
0x000002000070fa06 : mov ecx, ebp ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x00000200004ca995 : mov ecx, ebp ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000430491 : mov ecx, ebp ; mov qword ptr [rsp + 0x20], rax ; call r15
0x0000020000029ca4 : mov ecx, ebp ; mov rax, qword ptr [rip + 0x37f7e3] ; call rax
0x0000020000431b88 : mov ecx, ebp ; mov rax, qword ptr [rip - 0x888d9] ; call rax
0x000002000046ec12 : mov ecx, ebp ; mov rax, qword ptr [rip - 0xc5963] ; call rax
0x000002000058df5f : mov ecx, ebp ; mov rcx, rdi ; lea r8d, dword ptr [rdx + 3] ; call rsi
0x000002000058df2a : mov ecx, ebp ; mov rcx, rdi ; lea r8d, dword ptr [rdx + 5] ; call rsi
0x000002000047402d : mov ecx, ebp ; xor edx, edx ; call 0x2000009e097
0x000002000021f2c8 : mov ecx, ebx ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000200006e0ceb : mov ecx, ebx ; add rsp, 0x28 ; jmp qword ptr [r10]
0x0000020000552ba9 : mov ecx, ebx ; call 0x20000005729
0x00000200001d6a2e : mov ecx, ebx ; call 0x200000245d9
0x00000200001a85d5 : mov ecx, ebx ; call 0x200000248c4
0x0000020000239bc4 : mov ecx, ebx ; call 0x20000045ebc
0x00000200000d1a6e : mov ecx, ebx ; call 0x2000004dd34
0x0000020000461bbb : mov ecx, ebx ; call 0x20000053439
0x000002000042de3f : mov ecx, ebx ; call 0x20000056a8d
0x000002000043a967 : mov ecx, ebx ; call 0x20000056b84
0x0000020000431b71 : mov ecx, ebx ; call 0x2000005c1b5
0x00000200005e0c64 : mov ecx, ebx ; call 0x2000005ce74
0x0000020000650cc8 : mov ecx, ebx ; call 0x2000005f909
0x0000020000436836 : mov ecx, ebx ; call 0x20000061bf5
0x00000200004473db : mov ecx, ebx ; call 0x2000006d285
0x0000020000541165 : mov ecx, ebx ; call 0x2000006d769
0x0000020000451330 : mov ecx, ebx ; call 0x2000007cdf5
0x00000200007b6f6b : mov ecx, ebx ; call 0x20000080449
0x0000020000466036 : mov ecx, ebx ; call 0x2000008eed9
0x000002000046d446 : mov ecx, ebx ; call 0x2000008f0f9
0x0000020000594fb1 : mov ecx, ebx ; call 0x20000091214
0x0000020000463cb1 : mov ecx, ebx ; call 0x200000938ed
0x0000020000194cae : mov ecx, ebx ; call 0x200000b0f54
0x0000020000501e2e : mov ecx, ebx ; call 0x200000be124
0x0000020000222715 : mov ecx, ebx ; call 0x200000be964
0x00000200005db853 : mov ecx, ebx ; call 0x200000bf6e9
0x00000200004a1769 : mov ecx, ebx ; call 0x200000ca365
0x00000200004c0223 : mov ecx, ebx ; call 0x200000e7215
0x00000200004bd018 : mov ecx, ebx ; call 0x200000e7255
0x00000200004bd2a3 : mov ecx, ebx ; call 0x200000e7da5
0x00000200004bb36c : mov ecx, ebx ; call 0x200000e7e75
0x000002000020bd60 : mov ecx, ebx ; call 0x200000e8064
0x000002000018242b : mov ecx, ebx ; call 0x200000ee694
0x00000200004cbec2 : mov ecx, ebx ; call 0x200000eef35
0x00000200001112e3 : mov ecx, ebx ; call 0x20000111365
0x0000020000471a52 : mov ecx, ebx ; call 0x20000157889
0x000002000060fbb5 : mov ecx, ebx ; call 0x200001579a1
0x000002000058f23d : mov ecx, ebx ; call 0x200001b5ded
0x00000200005a2f16 : mov ecx, ebx ; call 0x200001c596d
0x00000200005aae0c : mov ecx, ebx ; call 0x200001cb88d
0x00000200005ac29e : mov ecx, ebx ; call 0x200001dbf3d
0x00000200006636d6 : mov ecx, ebx ; call 0x200001ef964
0x00000200005df454 : mov ecx, ebx ; call 0x2000020bb6d
0x00000200005df43e : mov ecx, ebx ; call 0x2000020bcbd
0x00000200005df86b : mov ecx, ebx ; call 0x2000020bce1
0x000002000068eaa3 : mov ecx, ebx ; call 0x20000211c38
0x0000020000160220 : mov ecx, ebx ; call 0x2000021c490
0x00000200003d0dc6 : mov ecx, ebx ; call 0x2000024d004
0x000002000062392f : mov ecx, ebx ; call 0x2000024d005
0x0000020000202581 : mov ecx, ebx ; call 0x2000024d008
0x00000200007ac147 : mov ecx, ebx ; call 0x200003d079d
0x00000200003fd492 : mov ecx, ebx ; call 0x200003fd4cd
0x00000200003de820 : mov ecx, ebx ; call 0x2000040aa44
0x00000200005a69c3 : mov ecx, ebx ; call 0x20000422c3c
0x00000200004592c1 : mov ecx, ebx ; call 0x20000467021
0x000002000055ae26 : mov ecx, ebx ; call 0x2000049e525
0x00000200004e6db4 : mov ecx, ebx ; call 0x200004e3000
0x00000200005a3025 : mov ecx, ebx ; call 0x200004ff2cc
0x0000020000513f87 : mov ecx, ebx ; call 0x20000513fad
0x0000020000459b8e : mov ecx, ebx ; call 0x20000545dcc
0x00000200005f2ac8 : mov ecx, ebx ; call 0x2000054ba15
0x0000020000610182 : mov ecx, ebx ; call 0x2000056964d
0x000002000060ed31 : mov ecx, ebx ; call 0x2000060ebc1
0x00000200003dc3b6 : mov ecx, ebx ; call 0x200006686a8
0x0000020000710791 : mov ecx, ebx ; call 0x20000710d6d
0x00000200007043d3 : mov ecx, ebx ; call 0x20000717898
0x0000020000538eb9 : mov ecx, ebx ; call qword ptr [rax]
0x00000200001e632b : mov ecx, ebx ; call qword ptr [rbx]
0x00000200001b9c62 : mov ecx, ebx ; call r10
0x000002000015bc60 : mov ecx, ebx ; call r11
0x000002000013c441 : mov ecx, ebx ; call r14
0x000002000048e073 : mov ecx, ebx ; call r15
0x0000020000144b23 : mov ecx, ebx ; call r8
0x00000200000239d5 : mov ecx, ebx ; call rax
0x00000200007c9d1b : mov ecx, ebx ; call rbx
0x00000200001d933f : mov ecx, ebx ; call rdi
0x0000020000431ae4 : mov ecx, ebx ; call rsi
0x00000200004acc97 : mov ecx, ebx ; cmovb r14, rdi ; jmp 0x200004acc69
0x000002000019ca80 : mov ecx, ebx ; jmp 0x200000c1b07
0x00000200007d2aff : mov ecx, ebx ; lea ecx, dword ptr [rdx + 0x5a] ; call 0x2000000ed37
0x00000200005e2adf : mov ecx, ebx ; lea ecx, dword ptr [rdx + 0x7e] ; call 0x2000000ed37
0x00000200001e5e9e : mov ecx, ebx ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r11]
0x000002000052f6d6 : mov ecx, ebx ; lea r8d, dword ptr [rdx + 0x40] ; call 0x20000157889
0x00000200007a8b0e : mov ecx, ebx ; lea rdx, qword ptr [rbp - 0x7c] ; call 0x200003d0a71
0x00000200007b93b5 : mov ecx, ebx ; lea rdx, qword ptr [rsp + 0x38] ; call rax
0x0000020000443aa4 : mov ecx, ebx ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200006c09e0 : mov ecx, ebx ; mov dword ptr [rsp + 0x20], esi ; call r10
0x00000200001feee5 : mov ecx, ebx ; mov eax, ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006826f5 : mov ecx, ebx ; mov edi, eax ; call 0x200000be966
0x000002000050a2e5 : mov ecx, ebx ; mov edi, eax ; call 0x200004265ce
0x0000020000453c15 : mov ecx, ebx ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200006dd04e : mov ecx, ebx ; mov r8d, edi ; mov rdx, rsi ; call rax
0x0000020000210956 : mov ecx, ebx ; mov r8d, edx ; jmp 0x20000210964
0x00000200006dcfe1 : mov ecx, ebx ; mov r8d, esi ; mov rdx, rbp ; call rax
0x00000200001c9abd : mov ecx, ebx ; mov rax, qword ptr [rip + 0x1df9ca] ; call rax
0x00000200001bad18 : mov ecx, ebx ; mov rax, qword ptr [rip + 0x1ee76f] ; call rax
0x00000200001bac9f : mov ecx, ebx ; mov rax, qword ptr [rip + 0x1ee7e8] ; call rax
0x000002000071afe3 : mov ecx, ebx ; mov rsi, rax ; call qword ptr [rdi]
0x000002000046f9fb : mov ecx, ebx ; xor edx, edx ; call 0x2000009e097
0x00000200003e360c : mov ecx, ecx ; call 0x200000036c9
0x0000020000196965 : mov ecx, ecx ; call 0x20000032c08
0x00000200004b43c2 : mov ecx, ecx ; call 0x200000d6425
0x00000200001a73a8 : mov ecx, ecx ; call 0x200001d3638
0x00000200006235b3 : mov ecx, ecx ; call 0x2000024d005
0x00000200002267c4 : mov ecx, ecx ; jne 0x200002267af ; xor eax, eax ; ret
0x000002000003713d : mov ecx, ecx ; mov r14, rax ; jmp 0x2000003710d
0x0000020000078821 : mov ecx, ecx ; mov rax, qword ptr [rip + 0x330c66] ; call rax
0x0000020000709cf1 : mov ecx, ecx ; test r8d, r8d ; jne 0x20000709d04 ; xor eax, eax ; ret
0x00000200006549cd : mov ecx, ecx ; xchg qword ptr [rdx + r8*8], rcx ; mov eax, r9d ; ret
0x00000200006dd30d : mov ecx, edi ; call 0x20000009584
0x00000200003df7bb : mov ecx, edi ; call 0x2000000c97d
0x00000200004338f0 : mov ecx, edi ; call 0x2000002fb40
0x00000200005d89d0 : mov ecx, edi ; call 0x20000030a00
0x00000200001f664f : mov ecx, edi ; call 0x20000042934
0x000002000042ec5f : mov ecx, edi ; call 0x2000005c1b5
0x0000020000439075 : mov ecx, edi ; call 0x20000061bf5
0x0000020000465b25 : mov ecx, edi ; call 0x20000061dc4
0x000002000043daa8 : mov ecx, edi ; call 0x2000006d285
0x0000020000452d10 : mov ecx, edi ; call 0x20000075e55
0x0000020000450dec : mov ecx, edi ; call 0x2000007cdf5
0x0000020000200bb5 : mov ecx, edi ; call 0x2000007ce14
0x000002000044fdee : mov ecx, edi ; call 0x2000007e425
0x00000200005f7d23 : mov ecx, edi ; call 0x20000081934
0x0000020000660953 : mov ecx, edi ; call 0x2000008e0b8
0x0000020000462220 : mov ecx, edi ; call 0x2000008e159
0x00000200004e1ff9 : mov ecx, edi ; call 0x2000008e25c
0x00000200004e1fc4 : mov ecx, edi ; call 0x2000008e2a0
0x00000200004661fc : mov ecx, edi ; call 0x20000091215
0x00000200004c5506 : mov ecx, edi ; call 0x2000009dc88
0x00000200004c59f0 : mov ecx, edi ; call 0x2000009dd48
0x00000200004a1db4 : mov ecx, edi ; call 0x2000009e094
0x0000020000192686 : mov ecx, edi ; call 0x200000be964
0x000002000049eeb2 : mov ecx, edi ; call 0x200000c7475
0x00000200004b970e : mov ecx, edi ; call 0x200000da2b5
0x00000200004bc0ca : mov ecx, edi ; call 0x200000e7215
0x00000200004bd33f : mov ecx, edi ; call 0x200000e7255
0x00000200004b80ae : mov ecx, edi ; call 0x200000e7da5
0x00000200006849b2 : mov ecx, edi ; call 0x200000e7da8
0x00000200004bb77c : mov ecx, edi ; call 0x200000e7e75
0x00000200004c70f7 : mov ecx, edi ; call 0x200000e8065
0x000002000069dce1 : mov ecx, edi ; call 0x200000e8068
0x00000200004bd12c : mov ecx, edi ; call 0x200000e9665
0x0000020000662c52 : mov ecx, edi ; call 0x200000eef34
0x00000200004c7c65 : mov ecx, edi ; call 0x200000f02a9
0x00000200004d4d59 : mov ecx, edi ; call 0x200000fc295
0x00000200001cd47b : mov ecx, edi ; call 0x2000013977c
0x00000200001c7e0a : mov ecx, edi ; call 0x200001397cd
0x0000020000513e43 : mov ecx, edi ; call 0x2000013bb79
0x0000020000513e59 : mov ecx, edi ; call 0x2000013bd41
0x0000020000516af1 : mov ecx, edi ; call 0x2000013c1b5
0x0000020000516a3e : mov ecx, edi ; call 0x2000013c285
0x000002000051ebf6 : mov ecx, edi ; call 0x2000014122d
0x0000020000525606 : mov ecx, edi ; call 0x20000148075
0x0000020000527f5e : mov ecx, edi ; call 0x20000148155
0x000002000061c259 : mov ecx, edi ; call 0x200001484f4
0x0000020000519495 : mov ecx, edi ; call 0x20000148a95
0x0000020000525640 : mov ecx, edi ; call 0x200001497f5
0x000002000020e653 : mov ecx, edi ; call 0x2000014a8f4
0x000002000052a63f : mov ecx, edi ; call 0x20000157545
0x0000020000528464 : mov ecx, edi ; call 0x20000157885
0x00000200005a3849 : mov ecx, edi ; call 0x200001c980d
0x00000200005a7097 : mov ecx, edi ; call 0x200001cb88d
0x00000200005f69ed : mov ecx, edi ; call 0x20000217cad
0x00000200002254c3 : mov ecx, edi ; call 0x20000225214
0x00000200000e0cfb : mov ecx, edi ; call 0x2000024d004
0x000002000061f39e : mov ecx, edi ; call 0x2000024d005
0x00000200007a8d02 : mov ecx, edi ; call 0x200003d2529
0x00000200007bbc57 : mov ecx, edi ; call 0x200003e1c85
0x0000020000400425 : mov ecx, edi ; call 0x200003fea10
0x00000200006c3335 : mov ecx, edi ; call 0x200003ff5b0
0x00000200004672e2 : mov ecx, edi ; call 0x200004035d4
0x00000200005d89c0 : mov ecx, edi ; call 0x200004c083c
0x0000020000543699 : mov ecx, edi ; call 0x200005436e5
0x00000200005b02fc : mov ecx, edi ; call 0x2000061c5f4
0x000002000061c3cf : mov ecx, edi ; call 0x2000061c5f8
0x00000200005a2bc1 : mov ecx, edi ; call 0x2000061eea0
0x00000200004ece8a : mov ecx, edi ; call 0x200006590dc
0x00000200005de159 : mov ecx, edi ; call 0x2000065a398
0x00000200005de286 : mov ecx, edi ; call 0x2000065a544
0x00000200005dcb85 : mov ecx, edi ; call 0x20000668dec
0x000002000067c16b : mov ecx, edi ; call 0x2000067f020
0x00000200007031d2 : mov ecx, edi ; call 0x2000070d320
0x00000200007052c0 : mov ecx, edi ; call 0x20000711598
0x00000200001e6381 : mov ecx, edi ; call qword ptr [rbx]
0x0000020000448752 : mov ecx, edi ; call r10
0x00000200006beecc : mov ecx, edi ; call r11
0x00000200003e61c8 : mov ecx, edi ; call r12
0x0000020000009b0f : mov ecx, edi ; call r14
0x0000020000539657 : mov ecx, edi ; call r15
0x00000200000434d7 : mov ecx, edi ; call rax
0x0000020000030892 : mov ecx, edi ; call rbx
0x00000200003f2b15 : mov ecx, edi ; call rdi
0x0000020000003725 : mov ecx, edi ; call rsi
0x00000200001a6a68 : mov ecx, edi ; lea edx, dword ptr [r9 + 0xa] ; call 0x20000092c90
0x00000200006d8261 : mov ecx, edi ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x00000200006d86f5 : mov ecx, edi ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x00000200001e5c08 : mov ecx, edi ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r15]
0x00000200005347c7 : mov ecx, edi ; lea r8d, dword ptr [rdx + 0x5e] ; call 0x20000157889
0x000002000058df62 : mov ecx, edi ; lea r8d, dword ptr [rdx + 3] ; call rsi
0x000002000058df2d : mov ecx, edi ; lea r8d, dword ptr [rdx + 5] ; call rsi
0x000002000016d93f : mov ecx, edi ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x000002000040f103 : mov ecx, edi ; mov dl, 1 ; call 0x2000040b3d2
0x00000200006da7d9 : mov ecx, edi ; mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200006d8542 : mov ecx, edi ; mov dword ptr [rsp + 0x20], r13d ; call rdi
0x0000020000661a04 : mov ecx, edi ; mov ebx, eax ; call 0x2000001dcd6
0x000002000061ef19 : mov ecx, edi ; mov ebx, eax ; call 0x2000024d007
0x000002000000c167 : mov ecx, edi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000062c1bc : mov ecx, edi ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rax]
0x000002000040115f : mov ecx, edi ; mov r14b, 1 ; lea r8d, dword ptr [r9 - 4] ; call rsi
0x00000200003ddabd : mov ecx, edi ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x0000020000529c88 : mov ecx, edi ; mov r8d, ebx ; call 0x20000157548
0x0000020000551156 : mov ecx, edi ; mov r8d, ebx ; mov rdx, rbp ; call rax
0x0000020000401189 : mov ecx, edi ; mov r9d, eax ; mov r8d, eax ; call rsi
0x0000020000123bc0 : mov ecx, edi ; mov rax, qword ptr [rip + 0x2858c7] ; call rax
0x0000020000123ab9 : mov ecx, edi ; mov rax, qword ptr [rip + 0x2859ce] ; call rax
0x00000200001237a5 : mov ecx, edi ; mov rax, qword ptr [rip + 0x285ce2] ; call rax
0x0000020000123653 : mov ecx, edi ; mov rax, qword ptr [rip + 0x285e34] ; call rax
0x00000200001235ac : mov ecx, edi ; mov rax, qword ptr [rip + 0x285edb] ; call rax
0x000002000002eefe : mov ecx, edi ; mov rax, qword ptr [rip + 0x37a589] ; call rax
0x0000020000648c43 : mov ecx, edi ; mov rax, qword ptr [rsi + 0x38] ; call rax
0x0000020000218a79 : mov ecx, edi ; mov rdx, qword ptr [rsp + 0x70] ; call r9
0x000002000021d23b : mov ecx, edi ; mov rdx, rbx ; call rsi
0x0000020000708130 : mov ecx, edi ; mov rsi, rax ; call rbx
0x0000020000650aa2 : mov ecx, edi ; xor ebx, ebx ; call 0x2000024d008
0x0000020000121e84 : mov ecx, edi ; xor edx, edx ; call 0x2000009e096
0x000002000046f2b4 : mov ecx, edi ; xor edx, edx ; call 0x2000009e097
0x000002000049b9d9 : mov ecx, edx ; add rax, qword ptr [rcx + r9*8] ; inc edx ; jmp 0x2000049b9d9
0x0000020000407ac7 : mov ecx, edx ; add rax, r9 ; mov dword ptr [r8], edx ; ret
0x00000200004f0e94 : mov ecx, edx ; and qword ptr [rax], 0 ; jmp 0x200004f0e65
0x0000020000031ff1 : mov ecx, edx ; bt qword ptr [rax], rcx ; setb al ; ret
0x000002000042a474 : mov ecx, edx ; call 0x20000058015
0x00000200001a7952 : mov ecx, edx ; call 0x20000063bc4
0x00000200000ca79b : mov ecx, edx ; call 0x200000cc048
0x00000200004fdd62 : mov ecx, edx ; call 0x2000011f4e5
0x00000200006e354f : mov ecx, edx ; call 0x20000148078
0x00000200000766b4 : mov ecx, edx ; call 0x20000494b58
0x000002000015be8d : mov ecx, edx ; call r10
0x0000020000121dc7 : mov ecx, edx ; call r9
0x00000200003f6040 : mov ecx, edx ; call rax
0x000002000004e300 : mov ecx, edx ; cmp rax, rcx ; jne 0x2000004e313 ; xor eax, eax ; ret
0x0000020000439278 : mov ecx, edx ; je 0x20000439289 ; add rsp, 0x28 ; ret
0x000002000078f169 : mov ecx, edx ; jmp rcx
0x0000020000090c1b : mov ecx, edx ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x0000020000521794 : mov ecx, edx ; mov r15d, edx ; call 0x2000024da47
0x0000020000156f76 : mov ecx, edx ; mov rdx, qword ptr [rcx + 0x38] ; jmp rdx
0x0000020000440771 : mov ecx, es ; and byte ptr [rbx], al ; add byte ptr [rax], al ; mov qword ptr [r9], rcx ; ret
0x00000200003dec2a : mov ecx, esi ; call 0x200000095d5
0x00000200006f3fe3 : mov ecx, esi ; call 0x20000010270
0x00000200001886cb : mov ecx, esi ; call 0x200000148e4
0x00000200000e5286 : mov ecx, esi ; call 0x200000214a0
0x0000020000627fe6 : mov ecx, esi ; call 0x20000025668
0x00000200004633a1 : mov ecx, esi ; call 0x2000003f5cc
0x00000200000f2036 : mov ecx, esi ; call 0x2000004e32c
0x0000020000484dc7 : mov ecx, esi ; call 0x20000051078
0x0000020000435694 : mov ecx, esi ; call 0x20000061dc5
0x0000020000064678 : mov ecx, esi ; call 0x20000064fd8
0x00000200001f5f2e : mov ecx, esi ; call 0x20000069f38
0x00000200005bb781 : mov ecx, esi ; call 0x200000779f4
0x000002000044d8fe : mov ecx, esi ; call 0x20000078b95
0x0000020000400baf : mov ecx, esi ; call 0x2000007cdf4
0x00000200001b2355 : mov ecx, esi ; call 0x2000007e634
0x0000020000536f94 : mov ecx, esi ; call 0x20000080e7e
0x00000200004b4444 : mov ecx, esi ; call 0x200000841c9
0x0000020000463cf4 : mov ecx, esi ; call 0x200000939a1
0x0000020000501529 : mov ecx, esi ; call 0x2000009dc88
0x000002000046f30a : mov ecx, esi ; call 0x2000009e095
0x000002000047178d : mov ecx, esi ; call 0x200000a1155
0x00000200001e3ca7 : mov ecx, esi ; call 0x200000a2269
0x00000200000a1cbb : mov ecx, esi ; call 0x200000bded4
0x00000200000477c4 : mov ecx, esi ; call 0x200000d3a74
0x000002000044a6e1 : mov ecx, esi ; call 0x200000e5728
0x00000200004bb3ce : mov ecx, esi ; call 0x200000e7255
0x00000200004bda2b : mov ecx, esi ; call 0x200000e7da5
0x00000200004cbbf2 : mov ecx, esi ; call 0x200000e7e74
0x00000200004c0bc3 : mov ecx, esi ; call 0x200000e7e75
0x00000200004bb756 : mov ecx, esi ; call 0x200000e7f65
0x00000200004bd934 : mov ecx, esi ; call 0x200000e8065
0x00000200005e9ee1 : mov ecx, esi ; call 0x200000e8068
0x00000200004c5873 : mov ecx, esi ; call 0x200000eef35
0x00000200004c4b8a : mov ecx, esi ; call 0x200000f13ad
0x00000200001ce4ce : mov ecx, esi ; call 0x200000fa750
0x000002000051144e : mov ecx, esi ; call 0x200000fd674
0x0000020000236ac0 : mov ecx, esi ; call 0x20000117f20
0x00000200004eeeb4 : mov ecx, esi ; call 0x2000011bf39
0x0000020000555763 : mov ecx, esi ; call 0x200001319e4
0x00000200001cd527 : mov ecx, esi ; call 0x2000013977c
0x00000200001cf84b : mov ecx, esi ; call 0x2000013ba74
0x000002000051f0ca : mov ecx, esi ; call 0x200001480d5
0x00000200003fb274 : mov ecx, esi ; call 0x20000157544
0x0000020000534f98 : mov ecx, esi ; call 0x20000157545
0x000002000070b638 : mov ecx, esi ; call 0x20000157884
0x0000020000528603 : mov ecx, esi ; call 0x20000157885
0x00000200006c31ac : mov ecx, esi ; call 0x20000157886
0x00000200007ccde4 : mov ecx, esi ; call 0x20000157888
0x000002000059f5ff : mov ecx, esi ; call 0x200001cce55
0x00000200005bfe43 : mov ecx, esi ; call 0x200001e4af9
0x00000200005d3f8b : mov ecx, esi ; call 0x200001f4369
0x00000200005e5f99 : mov ecx, esi ; call 0x2000020cc8d
0x0000020000580d0f : mov ecx, esi ; call 0x2000024d004
0x000002000061d3f7 : mov ecx, esi ; call 0x2000024d005
0x00000200005b09e0 : mov ecx, esi ; call 0x2000024d008
0x00000200007a8c9e : mov ecx, esi ; call 0x200003d2419
0x00000200007a8cf2 : mov ecx, esi ; call 0x200003d25b9
0x00000200007a42e3 : mov ecx, esi ; call 0x200003d2695
0x00000200003e73be : mov ecx, esi ; call 0x200003e73e9
0x00000200001b58f0 : mov ecx, esi ; call 0x20000481b14
0x000002000040b34f : mov ecx, esi ; call 0x200004975d4
0x00000200004eaadf : mov ecx, esi ; call 0x200004e6d70
0x00000200000f1e7b : mov ecx, esi ; call 0x200004e73bc
0x00000200001eef65 : mov ecx, esi ; call 0x200004ede1d
0x0000020000640da7 : mov ecx, esi ; call 0x2000063d030
0x00000200005e0b34 : mov ecx, esi ; call 0x20000664df8
0x0000020000708b73 : mov ecx, esi ; call 0x20000706ac1
0x00000200007023c0 : mov ecx, esi ; call 0x2000070cae1
0x0000020000705382 : mov ecx, esi ; call 0x20000711598
0x00000200001e5ae7 : mov ecx, esi ; call qword ptr [rsi]
0x00000200003f04fb : mov ecx, esi ; call r10
0x00000200007080c9 : mov ecx, esi ; call r12
0x0000020000055d0c : mov ecx, esi ; call r14
0x000002000058102a : mov ecx, esi ; call r8
0x00000200000038cc : mov ecx, esi ; call r9
0x000002000003ec90 : mov ecx, esi ; call rax
0x00000200003f65ff : mov ecx, esi ; call rdi
0x00000200004e6e47 : mov ecx, esi ; call rdx
0x00000200006dbd4c : mov ecx, esi ; call rsi
0x00000200002017db : mov ecx, esi ; lea edx, dword ptr [rbx + 3] ; call r9
0x0000020000607138 : mov ecx, esi ; lea rdx, qword ptr [rbp - 0x38] ; call 0x200004b338c
0x00000200004479d2 : mov ecx, esi ; lea rdx, qword ptr [rsp + 0x30] ; call rax
0x000002000070f8d3 : mov ecx, esi ; mov dword ptr [rsp + 0x20], ebp ; call rax
0x000002000022e9e9 : mov ecx, esi ; mov edx, r15d ; call rax
0x00000200003f358c : mov ecx, esi ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [rsi]
0x000002000070f81f : mov ecx, esi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000070f959 : mov ecx, esi ; mov qword ptr [rsp + 0x20], rdi ; call rax
0x0000020000022273 : mov ecx, esi ; mov r10, qword ptr [r10 + rax*8] ; call r10
0x00000200005e9ea2 : mov ecx, esi ; mov r12b, 1 ; call 0x20000217a28
0x00000200005e9f3b : mov ecx, esi ; mov r12b, r15b ; call 0x20000217a28
0x00000200007a8a88 : mov ecx, esi ; mov r12d, r13d ; call 0x200003d241c
0x000002000008b9de : mov ecx, esi ; mov r8, r13 ; mov rcx, r15 ; call rax
0x00000200000ebc74 : mov ecx, esi ; mov r8, rbx ; call 0x20000037ebf
0x0000020000438b98 : mov ecx, esi ; mov r8d, ebx ; call 0x2000005f388
0x00000200006dc0cd : mov ecx, esi ; mov r8d, edi ; mov rdx, rbp ; call rax
0x000002000022e9e6 : mov ecx, esi ; mov r9d, esi ; mov edx, r15d ; call rax
0x0000020000078927 : mov ecx, esi ; mov rax, qword ptr [rip + 0x330b60] ; call rax
0x0000020000078858 : mov ecx, esi ; mov rax, qword ptr [rip + 0x330c2f] ; call rax
0x0000020000078689 : mov ecx, esi ; mov rax, qword ptr [rip + 0x330dfe] ; call rax
0x000002000007863b : mov ecx, esi ; mov rax, qword ptr [rip + 0x330e4c] ; call rax
0x0000020000078473 : mov ecx, esi ; mov rax, qword ptr [rip + 0x331014] ; call rax
0x00000200000776f2 : mov ecx, esi ; mov rax, qword ptr [rip + 0x331d95] ; call rax
0x0000020000077627 : mov ecx, esi ; mov rax, qword ptr [rip + 0x331e60] ; call rax
0x000002000002f079 : mov ecx, esi ; mov rax, qword ptr [rip + 0x37a40e] ; call rax
0x00000200003dfb44 : mov ecx, esi ; mov rax, qword ptr [rip - 0xdfb65] ; call rax
0x0000020000707de0 : mov ecx, esi ; mov rbp, rax ; call rbx
0x0000020000441dbd : mov ecx, esi ; mov rbx, rax ; call 0x2000006d288
0x00000200003debf7 : mov ecx, esi ; mov word ptr [rsi], r12w ; call 0x200000095d9
0x000002000052bc53 : mov ecx, esi ; test r15b, r15b ; je 0x2000052bc98 ; call 0x20000147f59
0x000002000046e16a : mov ecx, esi ; xor edx, edx ; call 0x2000009e097
0x000002000042b829 : mov ecx, esp ; call 0x2000004fce5
0x0000020000483768 : mov ecx, esp ; call 0x2000005fa04
0x0000020000415ba9 : mov ecx, esp ; call 0x20000061dc4
0x0000020000435e26 : mov ecx, esp ; call 0x20000061dc5
0x00000200000e0cc2 : mov ecx, esp ; call 0x2000006cf48
0x000002000066042c : mov ecx, esp ; call 0x2000009dd48
0x00000200000a95ae : mov ecx, esp ; call 0x200000a58b4
0x0000020000101737 : mov ecx, esp ; call 0x200000dd944
0x00000200000e1e30 : mov ecx, esp ; call 0x200000de054
0x00000200005caff4 : mov ecx, esp ; call 0x200000e7254
0x00000200004bb623 : mov ecx, esp ; call 0x200000e7da5
0x00000200004bb2db : mov ecx, esp ; call 0x200000e9995
0x00000200004f5f03 : mov ecx, esp ; call 0x200001244e1
0x0000020000590597 : mov ecx, esp ; call 0x200001b7851
0x00000200005a2ea2 : mov ecx, esp ; call 0x200001ce9e1
0x00000200005a2eaa : mov ecx, esp ; call 0x200001ceabd
0x000002000062befb : mov ecx, esp ; call 0x2000024d005
0x00000200007ae1c2 : mov ecx, esp ; call 0x200003d3795
0x000002000047a268 : mov ecx, esp ; call 0x20000426520
0x00000200005dd2b4 : mov ecx, esp ; call 0x20000479554
0x000002000007635a : mov ecx, esp ; call 0x20000494b58
0x000002000013c3ac : mov ecx, esp ; call r14
0x0000020000020d0e : mov ecx, esp ; call r15
0x00000200005cced3 : mov ecx, esp ; call rax
0x0000020000707f42 : mov ecx, esp ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x00000200004bb3c4 : mov ecx, esp ; mov ebx, eax ; call 0x200000e99c7
0x000002000022ef44 : mov ecx, esp ; mov edx, esi ; cmovne rcx, r11 ; call rax
0x000002000079d724 : mov ecx, esp ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x000002000043f8d1 : mov ecx, esp ; mov rdx, qword ptr [rsi - 8] ; call 0x2000013bb7c
0x00000200001f511a : mov ecx, gs ; dec dword ptr [rax - 0x75] ; ret
0x000002000079d723 : mov ecx, r12d ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x00000200005e9ea1 : mov ecx, r14d ; mov r12b, 1 ; call 0x20000217a29
0x00000200005e9f3a : mov ecx, r14d ; mov r12b, r15b ; call 0x20000217a29
0x000002000046221f : mov ecx, r15d ; call 0x2000008e15a
0x00000200007a8d01 : mov ecx, r15d ; call 0x200003d252a
0x000002000067c16a : mov ecx, r15d ; call 0x2000067f021
0x0000020000190e13 : mov ecx, r8d ; inc rdx ; jmp 0x20000190dce
0x00000200006f488a : mov edi, 0x158948ff ; lodsd eax, dword ptr [rsi] ; ret 0x49ff
0x000002000068d22c : mov edi, 0x19ba ; add byte ptr [rsi + 0x3b], ah ; ret 0x877
0x000002000021c2cd : mov edi, 0x21660000 ; or al, 0x42 ; ret
0x000002000070429f : mov edi, 0x23ca23ff ; ret 0xd89
0x000002000007ee30 : mov edi, 0x246c8b4c ; xor byte ptr [rbp + rcx*4 + 0x3d], cl ; ret
0x00000200006bbec6 : mov edi, 0x25f748d6 ; jno 0x200006bbe9e ; ret
0x00000200006bbf83 : mov edi, 0x25f748d6 ; mov ah, 0xc9 ; ret
0x0000020000066243 : mov edi, 0x2ba ; add byte ptr [rcx + 0xf], al ; xchg eax, edx ; ret
0x00000200004de115 : mov edi, 0x34cffe5 ; ret 0xff41
0x000002000050028e : mov edi, 0x3e1d8bff ; jmp rbx
0x00000200006f79a3 : mov edi, 0x458bffff ; ret
0x00000200007bb08b : mov edi, 0x4800011e ; add esp, 0x28 ; ret
0x00000200001d1c89 : mov edi, 0x480053dd ; add esp, 0x28 ; ret
0x0000020000443faf : mov edi, 0x4801b0ff ; add esp, 0x28 ; ret
0x000002000006fbe7 : mov edi, 0x4809fff0 ; add esp, 0x28 ; ret
0x0000020000664608 : mov edi, 0x48c033ff ; add esp, 0x28 ; ret
0x000002000054ee47 : mov edi, 0x48c38bff ; add esp, 0x30 ; pop rbx ; ret
0x00000200004eb687 : mov edi, 0x48c38bff ; add esp, 0x60 ; pop rbx ; ret
0x00000200006a278d : mov edi, 0x48ff9c5c ; add esp, 0x30 ; pop rbx ; ret
0x0000020000632c3d : mov edi, 0x48ffc1a3 ; add esp, 0x20 ; pop rbx ; ret
0x00000200006d37c9 : mov edi, 0x48ffe4d8 ; add esp, 0x38 ; ret
0x00000200002044ad : mov edi, 0x48fff367 ; add esp, 0x50 ; pop rbx ; ret
0x000002000009a36d : mov edi, 0x48fffd07 ; add esp, 0x28 ; ret
0x00000200003d3a88 : mov edi, 0x4dd0234c ; mov dword ptr [rax + 8], edx ; ret
0x00000200004cfed9 : mov edi, 0x578b48ff ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000642655 : mov edi, 0x674d8b48 ; call r12
0x00000200005355a5 : mov edi, 0x75c084ff ; or al, 0xff ; ret
0x00000200001d467f : mov edi, 0x7cc23bc0 ; jmp 0x1ffc41d0f15
0x000002000043b227 : mov edi, 0x80e883ff ; add rsp, 0x28 ; ret
0x000002000055cced : mov edi, 0x83480009 ; ret 0x4804
0x00000200003e4065 : mov edi, 0x85000000 ; sal byte ptr [rbp + rbp - 0x75], cl ; ret 0xffb9
0x000002000072972c : mov edi, 0x850f00ff ; call qword ptr [rsi]
0x00000200004cf029 : mov edi, 0x870f0000 ; xchg eax, ebp ; ret 0x10
0x000002000066b845 : mov edi, 0x8affd3c7 ; ret 0x1024
0x00000200004d0bc5 : mov edi, 0x8b000000 ; ret
0x00000200003d2d08 : mov edi, 0x8b0000ff ; ret
0x00000200003e1921 : mov edi, 0x8b0019fd ; ret
0x00000200003f3ba6 : mov edi, 0x8b068941 ; ret
0x0000020000018f8e : mov edi, 0x8b410014 ; ret 0xc12b
0x00000200000dc5dd : mov edi, 0x8b44fa8b ; ret 0x8b48
0x00000200004d50ea : mov edi, 0x8b48ffb2 ; ret
0x00000200001a73a4 : mov edi, 0x8b491774 ; leave ; call 0x200001d363c
0x00000200000bd2c7 : mov edi, 0x8b4c002e ; ret 0xc149
0x000002000011cfcd : mov edi, 0x8bfff581 ; ret
0x000002000022251d : mov edi, 0x8d000000 ; jmp qword ptr [r11]
0x00000200001aa705 : mov edi, 0x8d48fff4 ; or dil, dil ; ret
0x00000200007cbf83 : mov edi, 0x97c0e7e8 ; call qword ptr [rax - 0x13d2917]
0x0000020000236dcc : mov edi, 0xaf0f4906 ; ret 0x9948
0x0000020000705d7e : mov edi, 0xb80673ff ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200002446fe : mov edi, 0xb8797400 ; mov rax, rdx ; jmp 0x20000244713
0x0000020000244aa9 : mov edi, 0xb8797400 ; mov rax, rdx ; jmp 0x20000244abe
0x0000020000458aa6 : mov edi, 0xbf5d894c ; call rax
0x00000200004b175c : mov edi, 0xc000000d ; jmp 0x200004b172c
0x000002000044136d : mov edi, 0xc0000023 ; jmp 0x2000044133c
0x0000020000520d05 : mov edi, 0xc0000024 ; jmp 0x20000520cd4
0x00000200005d268d : mov edi, 0xc00000bb ; jmp 0x200005d265d
0x000002000053ce9d : mov edi, 0xc48148ff ; mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000500d83 : mov edi, 0xc48348ff ; jo 0x20000500dec ; ret
0x000002000054dbe7 : mov edi, 0xc48348ff ; pop rax ; ret
0x0000020000540e2d : mov edi, 0xc48348ff ; push rax ; pop rbx ; ret
0x000002000051ad42 : mov edi, 0xc88b48ff ; call 0x20000149a38
0x00000200004eaadc : mov edi, 0xce8b48ff ; call 0x200004e6d73
0x00000200006f5e62 : mov edi, 0xde1d88ff ; ret 0x88ff
0x00000200005aa130 : mov edi, 0xe8000001 ; mov bh, 0x7f ; ret 0xebff
0x0000020000149685 : mov edi, 0xe9000000 ; mov dl, 0xc9 ; add byte ptr [rax], al ; ret
0x000002000014b685 : mov edi, 0xe9000001 ; mov dl, 0xa9 ; add byte ptr [rax], al ; ret
0x0000020000118dd4 : mov edi, 0xf490242 ; scasd eax, dword ptr [rdi] ; ret
0x0000020000118dea : mov edi, 0xf490642 ; scasd eax, dword ptr [rdi] ; ret
0x0000020000118dfc : mov edi, 0xf490a42 ; scasd eax, dword ptr [rdi] ; ret
0x0000020000118e0e : mov edi, 0xf490e42 ; scasd eax, dword ptr [rdi] ; ret
0x0000020000118e20 : mov edi, 0xf491242 ; scasd eax, dword ptr [rdi] ; ret
0x0000020000118e3c : mov edi, 0xf498104 ; scasd eax, dword ptr [rdi] ; ret
0x000002000009f8d6 : mov edi, 0xf6000000 ; ret 0xf07
0x00000200003d3923 : mov edi, 0xf6000043 ; ret 0xf08
0x0000020000502a06 : mov edi, 0xfc33bff ; xchg eax, esp ; ret
0x00000200001fd775 : mov edi, 0xff001aba ; ret
0x00000200001dc155 : mov edi, 0xff0028ae ; ret
0x00000200007b6bfa : mov edi, 0xff4e77ff ; ret
0x0000020000457105 : mov edi, 1 ; call 0x2000054334f
0x000002000060d870 : mov edi, dr0 ; ret
0x000002000002ceb4 : mov edi, dword ptr [rax + 0x40] ; jmp 0x2000002ce80
0x00000200001c566a : mov edi, dword ptr [rax + 0xf000000] ; xchg eax, ebp ; ret 0x8948
0x000002000051d0fa : mov edi, dword ptr [rax - 0x17ffffff] ; jl 0x2000051d0b1 ; ret
0x000002000019b72f : mov edi, dword ptr [rax - 0x18000000] ; ret
0x00000200006f3226 : mov edi, dword ptr [rbp + 0x48] ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x00000200000047df : mov edi, dword ptr [rbp + 0x60] ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x00000200004364a3 : mov edi, dword ptr [rbp + 0x77] ; jmp 0x2000043646f
0x00000200001762a2 : mov edi, dword ptr [rbp - 0x30] ; jmp 0x20000112597
0x0000020000056829 : mov edi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000130e1a : mov edi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x00000200000036ad : mov edi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x00000200007bd246 : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r12 ; ret
0x0000020000003811 : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x00000200001ce8b7 : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000040a2d : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x00000200005d382d : mov edi, dword ptr [rcx + 0x18] ; jmp 0x200004afabb
0x000002000007c87b : mov edi, dword ptr [rdi] ; jmp 0x2000007c845
0x000002000018d2ac : mov edi, dword ptr [rsi - 0x11] ; dec dword ptr [rax + 0x3b] ; ret 0x860f
0x00000200003d7f3c : mov edi, dword ptr [rsi - 0x74b30001] ; ret
0x0000020000028fff : mov edi, dword ptr [rsp + 0x10] ; jmp rcx
0x0000020000053a37 : mov edi, dword ptr [rsp + 0x10] ; mov byte ptr [r8 + 4], r9b ; ret
0x0000020000231414 : mov edi, dword ptr [rsp + 0x10] ; mov dword ptr [r9], r11d ; ret
0x00000200003fa124 : mov edi, dword ptr [rsp + 0x10] ; mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x0000020000008f5f : mov edi, dword ptr [rsp + 0x10] ; ret
0x000002000007b68b : mov edi, dword ptr [rsp + 0x18] ; cmova rdx, rax ; mov eax, edx ; ret
0x0000020000420ead : mov edi, dword ptr [rsp + 0x18] ; mov r14, qword ptr [rsp + 0x20] ; ret
0x000002000000b300 : mov edi, dword ptr [rsp + 0x18] ; ret
0x000002000047a891 : mov edi, dword ptr [rsp + 0x20] ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000689343 : mov edi, dword ptr [rsp + 0x20] ; and eax, 0x80000005 ; ret
0x00000200000bb0d9 : mov edi, dword ptr [rsp + 0x20] ; ret
0x000002000001f0a1 : mov edi, dword ptr [rsp + 0x28] ; pop r14 ; ret
0x00000200000243e1 : mov edi, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000fcf9a : mov edi, dword ptr [rsp + 0x30] ; pop r14 ; pop r12 ; ret
0x0000020000409321 : mov edi, dword ptr [rsp + 0x30] ; pop r14 ; pop rsi ; ret
0x0000020000037689 : mov edi, dword ptr [rsp + 0x30] ; pop r15 ; pop r14 ; ret
0x000002000005fa5e : mov edi, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000a0040 : mov edi, dword ptr [rsp + 0x38] ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000137d56 : mov edi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000479afb : mov edi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003d9999 : mov edi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rcx ; ret
0x00000200004311e9 : mov edi, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000040f5c3 : mov edi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rbp ; ret
0x000002000001dd53 : mov edi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rbx ; ret
0x000002000024c71f : mov edi, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rcx ; ret
0x000002000024ea73 : mov edi, dword ptr [rsp + 0x50] ; add rsp, 0x70 ; pop rdi ; ret
0x000002000020ac16 : mov edi, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000c4001 : mov edi, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000662c4d : mov edi, dword ptr [rsp + 0x58] ; mov rcx, rdi ; call 0x200000eef39
0x00000200000261f3 : mov edi, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rbp ; ret
0x00000200007911e1 : mov edi, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rbp ; ret
0x000002000001f304 : mov edi, dword ptr [rsp + 0x60] ; add rsp, 0x68 ; ret
0x0000020000199f81 : mov edi, dword ptr [rsp + 0x60] ; jmp 0x200000b61c2
0x00000200000c72d3 : mov edi, dword ptr [rsp + 0x68] ; add rsp, 0x40 ; pop rbp ; ret
0x000002000008ab79 : mov edi, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000610e6d : mov edi, dword ptr [rsp + 0x68] ; jmp 0x20000610e9f
0x0000020000036293 : mov edi, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rbp ; ret
0x000002000012db7d : mov edi, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbp ; ret
0x000002000011398b : mov edi, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rbp ; ret
0x00000200005d8cfa : mov edi, dword ptr [rsp + 0xa0] ; jmp 0x200004c500a
0x000002000013d318 : mov edi, dword ptr [rsp + 8] ; mov rax, r9 ; ret
0x00000200000f649a : mov edi, dword ptr [rsp + 8] ; ret
0x00000200001196fb : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbp ; ret
0x00000200006826f7 : mov edi, eax ; call 0x200000be964
0x00000200006840c3 : mov edi, eax ; call 0x200000f0304
0x000002000051da65 : mov edi, eax ; call 0x20000148075
0x000002000062cea0 : mov edi, eax ; call 0x2000024d005
0x000002000050a2e7 : mov edi, eax ; call 0x200004265cc
0x000002000052ca74 : mov edi, eax ; call r15
0x00000200000545bd : mov edi, eax ; jmp 0x200000547cc
0x00000200004b808d : mov edi, eax ; jmp 0x200004b7fc2
0x00000200004c52d2 : mov edi, eax ; jmp 0x200004c529b
0x0000020000152ea8 : mov edi, eax ; jmp rsi
0x00000200007076b5 : mov edi, eax ; mov r8d, esi ; call rbx
0x0000020000102e03 : mov edi, eax ; mov rcx, qword ptr [rcx + 8] ; mov rsi, rdx ; call qword ptr [rbx]
0x0000020000450110 : mov edi, eax ; mov rsi, rdx ; call 0x2000007a50c
0x0000020000131619 : mov edi, eax ; test eax, eax ; jns 0x200001315bf ; call 0x200004fd888
0x0000020000448722 : mov edi, ecx ; call 0x2000006d285
0x00000200000fd447 : mov edi, ecx ; call 0x200000e9730
0x0000020000527f0a : mov edi, ecx ; lea edx, dword ptr [r9 + 2] ; call 0x20000148159
0x000002000044df5d : mov edi, ecx ; mov cl, 1 ; mov rbx, rdx ; call 0x2000001a255
0x00000200001dc322 : mov edi, ecx ; mov rcx, qword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x00000200004b43bf : mov edi, ecx ; mov rcx, r9 ; call 0x200000d6428
0x000002000045fafb : mov edi, ecx ; xor ecx, ecx ; call 0x2000008e15b
0x00000200007b1fe4 : mov edi, edi ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f76a6 : mov edi, edx ; call 0x200000c3994
0x0000020000521797 : mov edi, edx ; call 0x2000024da44
0x000002000000ca17 : mov edi, edx ; mov rbx, rcx ; call 0x20000408c6b
0x00000200004f5687 : mov edi, edx ; mov rbx, rcx ; mov rdx, qword ptr [rdx + 8] ; call qword ptr [rdi]
0x0000020000059a01 : mov edi, edx ; xor al, 0 ; call rax
0x00000200007a8f44 : mov edi, es ; xchg eax, ebp ; cmp al, byte ptr [rax] ; call 0x200003d208d
0x0000020000428915 : mov edi, esi ; shl dword ptr [rbx], cl ; ret
0x0000020000532933 : mov edi, esp ; call 0x20000157885
0x00000200001dd820 : mov edi, esp ; mov esi, r12d ; call 0x200000e9a57
0x0000020000590202 : mov edi, fs ; dec dword ptr [rax - 0x7d] ; ret 0x4858
0x0000020000532932 : mov edi, r12d ; call 0x20000157886
0x00000200001dd81f : mov edi, r12d ; mov esi, r12d ; call 0x200000e9a58
0x0000020000565d30 : mov edx, 0x100 ; call r14
0x000002000043459d : mov edx, 0x107210e2 ; ret
0x000002000043bbf3 : mov edx, 0x127219e1 ; ret
0x000002000000c318 : mov edx, 0x147219e1 ; ret
0x00000200004345eb : mov edx, 0x177219e1 ; ret
0x00000200005bc503 : mov edx, 0x18c6262d ; add byte ptr [rcx + rbp*8], al ; ret 0xf790
0x00000200005d0d76 : mov edx, 0x20666e57 ; call 0x2000024d007
0x000002000003fbfe : mov edx, 0x220f07f0 ; loopne 0x2000003fc1d ; and ah, cl ; ret
0x000002000004de1c : mov edx, 0x220f07f0 ; loopne 0x2000004de3b ; and ah, cl ; ret
0x0000020000134dee : mov edx, 0x234807f7 ; ret 0xc148
0x00000200001c4ee4 : mov edx, 0x32 ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x00000200007028b0 : mov edx, 0x37211e0 ; mov al, 1 ; ret
0x00000200000f21c7 : mov edx, 0x3721ee0 ; xor eax, eax ; ret
0x00000200001b9c16 : mov edx, 0x3731ce0 ; mov al, 1 ; ret
0x000002000069d91a : mov edx, 0x3bff9da4 ; ret
0x00000200004b61f0 : mov edx, 0x420f1de1 ; ret 0xba0f
0x00000200000bd98b : mov edx, 0x43891be8 ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000002000041e6af : mov edx, 0x472118e8 ; adc al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000002000004d1b2 : mov edx, 0x48000eda ; add esp, 0x30 ; pop rbx ; ret
0x00000200001bbe92 : mov edx, 0x480013d9 ; add esp, 0x28 ; ret
0x0000020000220dfe : mov edx, 0x480047d8 ; add esp, 0x28 ; ret
0x00000200007d2044 : mov edx, 0x480a086b ; add esp, 0x20 ; pop rbx ; ret
0x000002000071a1aa : mov edx, 0x48190468 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000624f62 : mov edx, 0x48ffa3bb ; add esp, 0x38 ; ret
0x00000200006463e2 : mov edx, 0x48ffaaea ; add esp, 0x20 ; pop rbx ; ret
0x00000200003e0f6a : mov edx, 0x48ffc2b0 ; add esp, 0x28 ; ret
0x0000020000229c32 : mov edx, 0x48ffe384 ; add esp, 0x28 ; ret
0x00000200001c97ee : mov edx, 0x48ffe790 ; add esp, 0x38 ; ret
0x00000200001505c2 : mov edx, 0x48fff995 ; add esp, 0x20 ; pop rbx ; ret
0x000002000010cda2 : mov edx, 0x49000678 ; mov edx, eax ; call qword ptr [r8]
0x000002000061f389 : mov edx, 0x4d574454 ; call 0x2000024d008
0x0000020000724a48 : mov edx, 0x50 ; call 0x20000140d23
0x000002000043bbcd : mov edx, 0x508d1fe1 ; or al, 0xf ; ret 0xba0f
0x000002000000c2ee : mov edx, 0x508d1fe1 ; sbb byte ptr [rdi], cl ; ret 0xba0f
0x0000020000456776 : mov edx, 0x518a9 ; add byte ptr [rdx], dl ; xor eax, eax ; ret
0x00000200000213c0 : mov edx, 0x5720029 ; add rsp, 0x28 ; ret
0x00000200006204a5 : mov edx, 0x57676244 ; call 0x2000024d008
0x00000200001d6dbd : mov edx, 0x58 ; call r12
0x000002000042efdd : mov edx, 0x63706c41 ; call 0x2000005c2c8
0x00000200002284a8 : mov edx, 0x64 ; sub edx, eax ; mov dword ptr [rcx], edx ; ret
0x0000020000623ca5 : mov edx, 0x68745346 ; call 0x2000024d008
0x0000020000620d25 : mov edx, 0x6c634d45 ; call 0x2000024d007
0x0000020000620f97 : mov edx, 0x6c634d45 ; call 0x2000024d008
0x00000200004bb6e0 : mov edx, 0x6e457350 ; call 0x200000e7e78
0x000002000061f87f : mov edx, 0x704e534b ; call 0x2000024d008
0x000002000062b056 : mov edx, 0x706d644c ; call 0x2000024d008
0x00000200004bb136 : mov edx, 0x72437350 ; call 0x200000e7e78
0x000002000062109a : mov edx, 0x72704d45 ; call 0x2000024d008
0x000002000009823d : mov edx, 0x820f08e0 ; ret
0x00000200004ecee7 : mov edx, 0x820f09e1 ; ret 0xf54
0x0000020000489b34 : mov edx, 0x820f09e6 ; ret
0x00000200000162e0 : mov edx, 0x820f0ae1 ; ret
0x000002000024dcb2 : mov edx, 0x820f0ae2 ; ret 0x13
0x00000200000d5310 : mov edx, 0x830f0036 ; ret 0xc
0x00000200001108b9 : mov edx, 0x830f0de0 ; ret 0xfffb
0x00000200000abd55 : mov edx, 0x830f0ee0 ; ret
0x000002000049bb7b : mov edx, 0x83480002 ; ret
0x00000200001cfbb8 : mov edx, 0x834813ef ; ret
0x0000020000785604 : mov edx, 0x83491ff2 ; ret
0x00000200007823d5 : mov edx, 0x83491ff2 ; ret 0x8904
0x0000020000175e44 : mov edx, 0x83ccfff9 ; call qword ptr [rax]
0x000002000000f391 : mov edx, 0x8720029 ; mov al, 1 ; ret
0x00000200004c33da : mov edx, 0x88441ff0 ; and r14b, byte ptr [r11] ; ret 0x8d4c
0x000002000006989d : mov edx, 0x89441fe9 ; or byte ptr [rcx - 1], al ; ret 0x8348
0x00000200000bf996 : mov edx, 0x89480ae8 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000058fbc : mov edx, 0x8a057870 ; ret 0xf0c3
0x000002000065f3e4 : mov edx, 0x8a4401b2 ; ret 0x8d48
0x000002000013dffa : mov edx, 0x8b000006 ; ret
0x0000020000031402 : mov edx, 0x8b000b85 ; ret
0x00000200000a954d : mov edx, 0x8b000ed9 ; ret
0x0000020000799aa1 : mov edx, 0x8b073071 ; ret
0x00000200006acf9e : mov edx, 0x8b3e89ff ; ret
0x00000200001351c6 : mov edx, 0x8b480007 ; ret
0x000002000020a523 : mov edx, 0x8b48092e ; fmul dword ptr [rax - 0x75] ; ret
0x00000200001884fe : mov edx, 0x8b4809ef ; ret
0x000002000006b675 : mov edx, 0x8b4809f3 ; ret
0x000002000054cec0 : mov edx, 0x8b480a2b ; ret
0x000002000020a534 : mov edx, 0x8b480a2e ; fmul dword ptr [rax - 0x75] ; ret
0x00000200003d0057 : mov edx, 0x8b480bf3 ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200000633c9 : mov edx, 0x8b4d1ff0 ; lodsb al, byte ptr [rsi] ; ret
0x00000200004af1e2 : mov edx, 0x8bffc38b ; ret
0x00000200001ce916 : mov edx, 0x8bffe404 ; ret
0x00000200007d61ba : mov edx, 0xb22ccf2d ; call qword ptr [rcx]
0x00000200005a9b12 : mov edx, 0xb60f10e6 ; ret
0x00000200006e86f6 : mov edx, 0xc0000001 ; mov eax, edx ; jmp 0x200006e870a
0x00000200004d1840 : mov edx, 0xc00000e9 ; call 0x200000ff4b8
0x00000200006d6ab5 : mov edx, 0xc0000225 ; mov eax, r10d ; ret
0x00000200007118bf : mov edx, 0xc0330001 ; ret
0x00000200006e66a7 : mov edx, 0xc033ff97 ; add rsp, 0x28 ; ret
0x00000200006d372b : mov edx, 0xc08548ff ; jne 0x200006d36eb ; mov al, 1 ; ret
0x000002000046b4c9 : mov edx, 0xcbe809eb ; ret 0x84ff
0x000002000064d92d : mov edx, 0xce830df3 ; add al, 0xf7 ; ret
0x00000200005215e9 : mov edx, 0xd233dc3c ; call 0x20000147f18
0x000002000012e35e : mov edx, 0xd48fffa ; ret 0
0x0000020000588b62 : mov edx, 0xd7007f25 ; call qword ptr [rbx]
0x0000020000507132 : mov edx, 0xe8000649 ; jge 0x200005071a2 ; ret
0x000002000014b5e5 : mov edx, 0xe9000001 ; push rdx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000200000d2a49 : mov edx, 0xe90f786f ; ret 0xfff9
0x00000200003eec9a : mov edx, 0xf09f4725 ; call qword ptr [rsi]
0x00000200003eec34 : mov edx, 0xf09fad25 ; call qword ptr [rsi]
0x0000020000041a33 : mov edx, 0xf0a1063 ; xchg eax, edx ; ret 0xf48
0x00000200001977e7 : mov edx, 0xf1a3867 ; xchg eax, edx ; ret 0xf640
0x000002000004efd4 : mov edx, 0xf392867 ; xchg eax, edx ; ret 0xf48
0x0000020000432bb4 : mov edx, 0xf3eb1ee8 ; bts eax, 0x1c ; ret
0x000002000022545a : mov edx, 0xf410cf3 ; mov dh, 0x48 ; and byte ptr [rdx], bh ; ret 0x675
0x000002000049dc8a : mov edx, 0xf4c0ee9 ; scasd eax, dword ptr [rdi] ; ret 0xc88b
0x000002000005a23f : mov edx, 0xf6000000 ; ret 0xf08
0x00000200000ade53 : mov edx, 0xf6000e9f ; ret
0x000002000070d0c0 : mov edx, 0xf6143868 ; ret
0x00000200005d59b5 : mov edx, 0xf64108eb ; ret
0x0000020000062c1b : mov edx, 0xf6fffffd ; ret 0x75f0
0x00000200003ff430 : mov edx, 0xff000000 ; ret
0x00000200007d5045 : mov edx, 0xffc6c6c6 ; call qword ptr [rax]
0x000002000017734a : mov edx, 0xffc6c6c6 ; xor ecx, ecx ; call qword ptr [rax]
0x000002000049e531 : mov edx, 0xffff ; add word ptr [rcx + 0xa], dx ; ret
0x00000200003e7a03 : mov edx, 1 ; call 0x2000000eb54
0x00000200004b8d50 : mov edx, 1 ; call 0x200000e5348
0x000002000051c076 : mov edx, 1 ; call 0x2000014b518
0x000002000051c075 : mov edx, 1 ; call 0x2000014b519
0x00000200003db7e0 : mov edx, 1 ; cmovne eax, edx ; ret
0x000002000024c4b0 : mov edx, 1 ; jmp r8
0x00000200001fc497 : mov edx, 1 ; mov al, dl ; ret
0x00000200001f75d9 : mov edx, 1 ; mov eax, edx ; jmp 0x200001f75ed
0x00000200001d9e6e : mov edx, 1 ; mov eax, edx ; ret
0x00000200004710ac : mov edx, 1 ; mov rcx, rsi ; call r10
0x00000200007d10f2 : mov edx, 6 ; call 0x200003f8b5c
0x000002000023177e : mov edx, dword ptr [r9 + rcx*4] ; mov dword ptr [r8], edx ; ret
0x00000200006359a6 : mov edx, dword ptr [rax + 0x10] ; call qword ptr [rip - 0x3dea9f]
0x0000020000683dbb : mov edx, dword ptr [rax + 0x10] ; call r9
0x00000200001e62c3 : mov edx, dword ptr [rax + 0x28] ; shr rdx, 0xc ; call qword ptr [rbx]
0x00000200003dc001 : mov edx, dword ptr [rax + 0x28] ; shr rdx, 0xc ; call qword ptr [rsi]
0x000002000052ddb7 : mov edx, dword ptr [rax + 0x28] ; test r10, r10 ; jne 0x2000052ddca ; pop rbx ; ret
0x00000200001c4711 : mov edx, dword ptr [rax + 0x50] ; test rdx, rdx ; je 0x200001c4725 ; jmp rdx
0x00000200005cc544 : mov edx, dword ptr [rax + 0xb8] ; call r14
0x00000200006818b4 : mov edx, dword ptr [rax + 8] ; test rdx, rdx ; je 0x200006818c6 ; call rdx
0x0000020000167300 : mov edx, dword ptr [rax + rax*8] ; mov r8d, edx ; xor edx, edx ; call r10
0x000002000015d67f : mov edx, dword ptr [rbp + 0x28] ; mov rcx, r10 ; call r10
0x0000020000656d6d : mov edx, dword ptr [rbp + 0x30] ; mov dword ptr [rsp + 0x20], eax ; call r10
0x000002000023ffd2 : mov edx, dword ptr [rbp + 0x30] ; mov rcx, qword ptr [rbp + 8] ; call 0x2000024c299
0x000002000015c2f9 : mov edx, dword ptr [rbp + 0x38] ; mov rcx, qword ptr [rbp + 0x40] ; call rax
0x000002000015af4d : mov edx, dword ptr [rbp + 0x48] ; mov rcx, qword ptr [rbp + 0x50] ; call rax
0x000002000015d1ac : mov edx, dword ptr [rbp + 0x48] ; mov rcx, r11 ; call r11
0x00000200003df196 : mov edx, dword ptr [rbp + 0x50] ; mov rcx, qword ptr [rsi] ; call 0x2000000ca15
0x00000200005248ed : mov edx, dword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x0000020000587ade : mov edx, dword ptr [rbp - 0x20] ; jmp 0x200003f3cf5
0x0000020000642653 : mov edx, dword ptr [rbp - 0x41] ; mov rcx, qword ptr [rbp + 0x67] ; call r12
0x000002000040b34b : mov edx, dword ptr [rbp - 0x71] ; mov rcx, rsi ; call 0x200004975d8
0x0000020000244624 : mov edx, dword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x20000244639
0x00000200002449d1 : mov edx, dword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x200002449e6
0x000002000077f4b0 : mov edx, dword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x2000077f4c5
0x0000020000785d8a : mov edx, dword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x20000785d9f
0x0000020000786064 : mov edx, dword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x20000786079
0x000002000078638e : mov edx, dword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x200007863a3
0x00000200007866d5 : mov edx, dword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x200007866ea
0x0000020000786a2e : mov edx, dword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x20000786a43
0x00000200007894c4 : mov edx, dword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x200007894d9
0x000002000078a89a : mov edx, dword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x2000078a8af
0x000002000078ac76 : mov edx, dword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x2000078ac8b
0x0000020000027991 : mov edx, dword ptr [rbx + 0x6b8] ; inc r10d ; jmp 0x200000279cc
0x000002000062e91c : mov edx, dword ptr [rbx + 8] ; mov ecx, eax ; call r8
0x0000020000546cbd : mov edx, dword ptr [rbx + 8] ; mov rbx, qword ptr [rsi] ; inc rdx ; jmp 0x20000546caf
0x0000020000146371 : mov edx, dword ptr [rcx + 0x20] ; call rax
0x0000020000156f79 : mov edx, dword ptr [rcx + 0x38] ; jmp rdx
0x00000200004edf29 : mov edx, dword ptr [rcx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000002000049c8f5 : mov edx, dword ptr [rcx + 0xe4] ; call 0x200000c5b19
0x000002000056610f : mov edx, dword ptr [rcx + 8] ; call r8
0x000002000023177f : mov edx, dword ptr [rcx + rcx*4] ; mov dword ptr [r8], edx ; ret
0x000002000006ef6d : mov edx, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004ad6f4 : mov edx, dword ptr [rcx] ; call 0x200000332b4
0x000002000046a18f : mov edx, dword ptr [rcx] ; test r10d, r10d ; jne 0x2000046a1a2 ; xor eax, eax ; ret
0x00000200005389eb : mov edx, dword ptr [rdi + 0x38] ; mov ecx, 1 ; call r8
0x00000200006b7a84 : mov edx, dword ptr [rdi + 0x38] ; mov ecx, 2 ; call rax
0x00000200006b7aa6 : mov edx, dword ptr [rdi + 0x38] ; mov ecx, 3 ; call rax
0x000002000018670a : mov edx, dword ptr [rdi + 0x38] ; test rdx, rdx ; je 0x2000018671c ; call rax
0x00000200005389e1 : mov edx, dword ptr [rdi + 0x38] ; xor ecx, ecx ; call rax
0x000002000024a54b : mov edx, dword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x2000024a560
0x0000020000785849 : mov edx, dword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x2000078585e
0x0000020000785ef7 : mov edx, dword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x20000785f0c
0x00000200007861f1 : mov edx, dword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x20000786206
0x0000020000786526 : mov edx, dword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x2000078653b
0x0000020000786872 : mov edx, dword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x20000786887
0x0000020000786bd8 : mov edx, dword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x20000786bed
0x000002000078a26a : mov edx, dword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x2000078a27f
0x000002000078a446 : mov edx, dword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x2000078a45b
0x000002000052cd22 : mov edx, dword ptr [rdi + 8] ; call 0x20000157546
0x000002000071afdf : mov edx, dword ptr [rdi + 8] ; mov rcx, rbx ; mov rsi, rax ; call qword ptr [rdi]
0x0000020000683dd8 : mov edx, dword ptr [rdx + 0x10] ; call r8
0x00000200001fc46d : mov edx, dword ptr [rdx + 0x10] ; mov eax, edx ; ret
0x0000020000157bbb : mov edx, dword ptr [rdx + 0x14] ; sub eax, edx ; ret
0x000002000070efe0 : mov edx, dword ptr [rdx + 0x18] ; test rdx, rdx ; jne 0x2000070efd9 ; ret
0x0000020000157a63 : mov edx, dword ptr [rdx + 0xc] ; sub eax, edx ; ret
0x00000200000579aa : mov edx, dword ptr [rdx + 8] ; call qword ptr [rbx]
0x00000200004f568d : mov edx, dword ptr [rdx + 8] ; call qword ptr [rdi]
0x0000020000147e6f : mov edx, dword ptr [rdx + 8] ; call r10
0x00000200003fb976 : mov edx, dword ptr [rdx + 8] ; lea r8, qword ptr [rsp + 0x58] ; call rax
0x00000200003c856b : mov edx, dword ptr [rdx + 8] ; mov ecx, dword ptr [rsi + 0x28] ; call rax
0x0000020000022276 : mov edx, dword ptr [rdx + rax*8] ; call r10
0x000002000016d825 : mov edx, dword ptr [rdx + rax*8] ; jmp 0x2000016d83a
0x00000200004fd51b : mov edx, dword ptr [rdx] ; cmp rdx, r8 ; jne 0x200004fd51b ; ret
0x000002000066fe80 : mov edx, dword ptr [rdx] ; cmp rdx, r8 ; jne 0x2000066fe79 ; ret
0x00000200005698ee : mov edx, dword ptr [rdx] ; sub eax, edx ; ret
0x0000020000512c93 : mov edx, dword ptr [rip - 0x1699e1] ; call r10
0x0000020000626b5f : mov edx, dword ptr [rip - 0x27d8ad] ; call r10
0x000002000062938b : mov edx, dword ptr [rip - 0x2800d9] ; call r10
0x0000020000629c7f : mov edx, dword ptr [rip - 0x2809cd] ; call r10
0x000002000042ec88 : mov edx, dword ptr [rip - 0x859d6] ; call r10
0x000002000043dac8 : mov edx, dword ptr [rip - 0x94816] ; call r10
0x000002000046e6da : mov edx, dword ptr [rip - 0xc5428] ; call r10
0x000002000041b2d9 : mov edx, dword ptr [rsi + 0x18] ; mov rcx, qword ptr [rbp + 0x38] ; call 0x20000157549
0x000002000041b329 : mov edx, dword ptr [rsi + 0x28] ; mov rcx, qword ptr [rbp + 0x38] ; call 0x20000157549
0x00000200002461a4 : mov edx, dword ptr [rsi + 0x5d0] ; mov rax, rdx ; jmp 0x200002461b9
0x0000020000786d48 : mov edx, dword ptr [rsi + 0x5d0] ; mov rax, rdx ; jmp 0x20000786d5d
0x0000020000789636 : mov edx, dword ptr [rsi + 0x5d0] ; mov rax, rdx ; jmp 0x2000078964b
0x000002000078a05f : mov edx, dword ptr [rsi + 0x5d0] ; mov rax, rdx ; jmp 0x2000078a074
0x000002000078a63a : mov edx, dword ptr [rsi + 0x5d0] ; mov rax, rdx ; jmp 0x2000078a64f
0x000002000078ade8 : mov edx, dword ptr [rsi + 0x5d0] ; mov rax, rdx ; jmp 0x2000078adfd
0x00000200005e937a : mov edx, dword ptr [rsi + 4] ; mov ecx, dword ptr [rsi] ; call 0x2000020a940
0x000002000041b28a : mov edx, dword ptr [rsi + 8] ; mov rcx, qword ptr [rbp + 0x38] ; call 0x20000157549
0x000002000011fd54 : mov edx, dword ptr [rsi + rbp + 0x54] ; mov rcx, qword ptr [rdi + 8] ; call r8
0x000002000011fd74 : mov edx, dword ptr [rsi + rbp + 0x58] ; mov rcx, qword ptr [rdi + 8] ; call r8
0x000002000017a223 : mov edx, dword ptr [rsi + rbp + 0x60] ; mov rcx, qword ptr [rdi + 8] ; call r8
0x000002000017a245 : mov edx, dword ptr [rsi + rbp + 0x64] ; mov rcx, qword ptr [rdi + 8] ; call r8
0x000002000043f8d4 : mov edx, dword ptr [rsi - 8] ; call 0x2000013bb79
0x0000020000550baf : mov edx, dword ptr [rsp + 0x28] ; add rax, rdx ; jmp 0x20000550bcc
0x00000200003d0dc1 : mov edx, dword ptr [rsp + 0x30] ; mov rcx, rbx ; call 0x2000024d009
0x0000020000156765 : mov edx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; call r10
0x00000200005493ad : mov edx, dword ptr [rsp + 0x40] ; dec rax ; add rax, rdx ; jmp 0x20000549354
0x00000200001be03d : mov edx, dword ptr [rsp + 0x40] ; mov rcx, qword ptr [rsp + 0x20] ; call rax
0x00000200001bbd03 : mov edx, dword ptr [rsp + 0x48] ; call rax
0x000002000014c617 : mov edx, dword ptr [rsp + 0x48] ; mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x000002000068f6ed : mov edx, dword ptr [rsp + 0x50] ; mov rcx, qword ptr [rsp + 0x48] ; call rax
0x0000020000218a7c : mov edx, dword ptr [rsp + 0x70] ; call r9
0x000002000000ca89 : mov edx, dword ptr [rsp + 0x70] ; mov rcx, rax ; call 0x20000408d39
0x00000200004a9c57 : mov edx, dword ptr [rsp + 0x70] ; mov rcx, rbp ; call rdi
0x0000020000218ac9 : mov edx, dword ptr [rsp + 0x70] ; xor ecx, ecx ; call r9
0x000002000071b94b : mov edx, eax ; add rsp, 0x38 ; jmp r8
0x000002000058da73 : mov edx, eax ; call 0x20000009d18
0x00000200004385fe : mov edx, eax ; call 0x2000005f305
0x000002000042b756 : mov edx, eax ; call 0x200004e7a58
0x000002000010cda7 : mov edx, eax ; call qword ptr [r8]
0x000002000012c715 : mov edx, eax ; call qword ptr [rbx]
0x00000200001664e3 : mov edx, eax ; call r9
0x0000020000052685 : mov edx, eax ; jmp 0x20000052625
0x000002000041f625 : mov edx, eax ; jne 0x2000041f638 ; mov eax, 1 ; ret
0x00000200006213c8 : mov edx, eax ; mov dword ptr [rdi + 0x10], eax ; call 0x2000024da48
0x000002000061f115 : mov edx, eax ; mov dword ptr [rsp + 0x38], eax ; call 0x2000024da49
0x00000200006ac7e6 : mov edx, eax ; mov eax, edx ; add rsp, 0x18 ; ret
0x0000020000121481 : mov edx, eax ; mov eax, edx ; add rsp, 0x28 ; ret
0x0000020000111700 : mov edx, eax ; mov eax, edx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000079a7c4 : mov edx, eax ; mov eax, edx ; add rsp, 0x38 ; ret
0x000002000068a769 : mov edx, eax ; mov eax, edx ; jmp 0x2000068a777
0x000002000054d477 : mov edx, eax ; mov eax, edx ; ret
0x0000020000531465 : mov edx, eax ; mov eax, r10d ; add rsp, 0x28 ; ret
0x0000020000216f6c : mov edx, eax ; mov eax, r10d ; add rsp, 0x38 ; ret
0x0000020000442edb : mov edx, eax ; mov eax, r10d ; add rsp, 0x48 ; ret
0x00000200006807c6 : mov edx, eax ; mov eax, r10d ; jmp 0x200006807d6
0x0000020000620e43 : mov edx, eax ; mov r12d, eax ; call 0x2000024da48
0x0000020000037135 : mov edx, eax ; mov r8, r10 ; jmp 0x200000370cb
0x00000200004f46fc : mov edx, eax ; mov rcx, qword ptr [rcx + 0x28] ; call 0x200003f09f4
0x0000020000006c42 : mov edx, eax ; mov rcx, rbp ; call r14
0x00000200001e6328 : mov edx, eax ; mov rcx, rbx ; call qword ptr [rbx]
0x000002000044fdeb : mov edx, eax ; mov rcx, rdi ; call 0x2000007e428
0x00000200001cd524 : mov edx, eax ; mov rcx, rsi ; call 0x2000013977f
0x0000020000466a1b : mov edx, eax ; mov rcx, rsi ; call r14
0x000002000000836d : mov edx, eax ; test r8d, r8d ; jne 0x2000000837c ; ret
0x0000020000147cda : mov edx, eax ; wrmsr ; pop rdx ; pop rax ; pop rcx ; ret
0x00000200004a5a46 : mov edx, ebp ; call 0x20000081c80
0x0000020000176150 : mov edx, ebp ; call 0x200001123a0
0x000002000014530e : mov edx, ebp ; call 0x20000139780
0x00000200005314e9 : mov edx, ebp ; call 0x20000157545
0x000002000062a83f : mov edx, ebp ; call 0x2000024da45
0x0000020000085932 : mov edx, ebp ; call rax
0x000002000061fc54 : mov edx, ebp ; lea ecx, dword ptr [r13 - 0x27] ; call 0x2000024da49
0x00000200000b508c : mov edx, ebp ; lea r8d, dword ptr [r9 + 1] ; call 0x200000d1368
0x00000200005f897a : mov edx, ebp ; mov dword ptr [rsp + 0x20], ebx ; call r10
0x00000200005c1fbc : mov edx, ebp ; mov rcx, qword ptr [r13 - 8] ; call qword ptr [rax]
0x00000200000e1e2d : mov edx, ebp ; mov rcx, r12 ; call 0x200000de057
0x0000020000707814 : mov edx, ebp ; mov rcx, r12 ; call rax
0x000002000070258c : mov edx, ebp ; mov rcx, r13 ; call rbx
0x000002000070f97a : mov edx, ebp ; mov rcx, r14 ; call rax
0x0000020000707629 : mov edx, ebp ; mov rcx, r15 ; call r14
0x000002000070f4f0 : mov edx, ebp ; mov rcx, rbx ; call rax
0x00000200004661f9 : mov edx, ebp ; mov rcx, rdi ; call 0x20000091218
0x00000200003e61c5 : mov edx, ebp ; mov rcx, rdi ; call r12
0x00000200007081d1 : mov edx, ebp ; mov rcx, rdi ; mov rsi, rax ; call rbx
0x000002000046aa83 : mov edx, ebp ; mov rcx, rsi ; call r14
0x00000200001a94d1 : mov edx, ebx ; call 0x20000025774
0x0000020000488a53 : mov edx, ebx ; call 0x20000069e99
0x000002000013a109 : mov edx, ebx ; call 0x200000863b4
0x000002000046d798 : mov edx, ebx ; call 0x2000009a735
0x000002000004fd91 : mov edx, ebx ; call 0x2000009bfa4
0x00000200004b693f : mov edx, ebx ; call 0x200000db9b5
0x0000020000670d5b : mov edx, ebx ; call 0x2000024d004
0x000002000061fdd1 : mov edx, ebx ; call 0x2000024da45
0x000002000021d23e : mov edx, ebx ; call rsi
0x000002000061ff67 : mov edx, ebx ; lea ecx, dword ptr [rbx - 0x2f] ; call 0x2000024da48
0x00000200006aa7e1 : mov edx, ebx ; mov eax, edx ; jmp 0x200006aa7c7
0x00000200004b25b2 : mov edx, ebx ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000552763 : mov edx, ebx ; mov rax, rdx ; ret
0x00000200003f603d : mov edx, ebx ; mov rcx, r10 ; call rax
0x0000020000463cf1 : mov edx, ebx ; mov rcx, r14 ; call 0x200000939a4
0x000002000051144b : mov edx, ebx ; mov rcx, r14 ; call 0x200000fd677
0x00000200007083e3 : mov edx, ebx ; mov rcx, r14 ; call r12
0x00000200000434d4 : mov edx, ebx ; mov rcx, r15 ; call rax
0x000002000052b4fb : mov edx, ebx ; mov rcx, rax ; call 0x20000157548
0x00000200005f69ea : mov edx, ebx ; mov rcx, rdi ; call 0x20000217cb0
0x0000020000670d67 : mov edx, ebx ; mov rcx, rdi ; call 0x2000024d007
0x000002000044874f : mov edx, ebx ; mov rcx, rdi ; call r10
0x000002000070f577 : mov edx, ebx ; mov rcx, rdi ; call rax
0x0000020000041dd3 : mov edx, ebx ; mov rcx, rdi ; call rsi
0x000002000016d93c : mov edx, ebx ; mov rcx, rdi ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x00000200001b2352 : mov edx, ebx ; mov rcx, rsi ; call 0x2000007e637
0x000002000047178a : mov edx, ebx ; mov rcx, rsi ; call 0x200000a1158
0x00000200001cf848 : mov edx, ebx ; mov rcx, rsi ; call 0x2000013ba77
0x00000200001e5ae4 : mov edx, ebx ; mov rcx, rsi ; call qword ptr [rsi]
0x00000200000038c9 : mov edx, ebx ; mov rcx, rsi ; call r9
0x000002000024c58c : mov edx, ebx ; pop rbx ; add rsp, 8 ; jmp r8
0x000002000010f65f : mov edx, ecx ; call 0x2000004b8fc
0x000002000014c3bb : mov edx, ecx ; encls ; mov rax, rbx ; pop rbx ; ret
0x000002000014c39b : mov edx, ecx ; encls ; pop rbx ; ret
0x000002000070e271 : mov edx, ecx ; jne 0x2000070e27e ; xor eax, eax ; ret
0x0000020000454b00 : mov edx, ecx ; mov rcx, qword ptr [rax] ; call 0x2000007a354
0x0000020000428fab : mov edx, ecx ; mov rcx, qword ptr [rdi + 8] ; call rax
0x000002000011e8ea : mov edx, ecx ; mov rcx, rdi ; call rbx
0x00000200001b1732 : mov edx, ecx ; shr rdx, 0x10 ; mov eax, edx ; jmp 0x200001b1759
0x00000200001b178a : mov edx, ecx ; shr rdx, 0x20 ; mov rax, rdx ; jmp 0x200001b17b2
0x00000200001b16b0 : mov edx, ecx ; shr rdx, 8 ; mov eax, edx ; jmp 0x200001b16db
0x00000200005b01ef : mov edx, edi ; call 0x2000001b879
0x00000200005e0a08 : mov edx, edi ; call 0x20000099cf8
0x00000200001cd603 : mov edx, edi ; call 0x20000139878
0x000002000053703f : mov edx, edi ; call 0x20000157545
0x0000020000616e06 : mov edx, edi ; call 0x200001b861c
0x00000200001f407f : mov edx, edi ; call 0x200001f02c4
0x000002000062ad03 : mov edx, edi ; call 0x2000024da45
0x00000200007d0e46 : mov edx, edi ; call 0x200003f7bc1
0x00000200004e33eb : mov edx, edi ; call qword ptr [rax]
0x0000020000085e14 : mov edx, edi ; call rax
0x000002000070b4b7 : mov edx, edi ; call rdi
0x0000020000513ea0 : mov edx, edi ; lea rcx, qword ptr [rbp - 0x11] ; call 0x2000013ba79
0x0000020000546775 : mov edx, edi ; lea rcx, qword ptr [rbp - 9] ; call r12
0x0000020000512498 : mov edx, edi ; lea rcx, qword ptr [rdi + 8] ; call 0x2000013d1b9
0x0000020000463821 : mov edx, edi ; mov cl, 1 ; call 0x20000092127
0x00000200007cd1cc : mov edx, edi ; mov qword ptr [rbp - 0x29], r14 ; call 0x200003f8b5d
0x000002000047a1d7 : mov edx, edi ; mov rcx, qword ptr [rbp + 0x60] ; call 0x2000042641c
0x000002000070e38b : mov edx, edi ; mov rcx, qword ptr [rsi + 8] ; call rax
0x00000200001a794f : mov edx, edi ; mov rcx, r10 ; call 0x20000063bc7
0x0000020000144b20 : mov edx, edi ; mov rcx, r11 ; call r8
0x000002000047a265 : mov edx, edi ; mov rcx, r12 ; call 0x20000426523
0x000002000013c3a9 : mov edx, edi ; mov rcx, r12 ; call r14
0x0000020000707f3f : mov edx, edi ; mov rcx, r12 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x00000200006f3fe0 : mov edx, edi ; mov rcx, r14 ; call 0x20000010273
0x00000200003fb271 : mov edx, edi ; mov rcx, r14 ; call 0x20000157547
0x00000200005f4936 : mov edx, edi ; mov rcx, r14 ; call rax
0x000002000070f8d0 : mov edx, edi ; mov rcx, r14 ; mov dword ptr [rsp + 0x20], ebp ; call rax
0x00000200005f498e : mov edx, edi ; mov rcx, r15 ; call rax
0x00000200003df18b : mov edx, edi ; mov rcx, rax ; call 0x2000000e824
0x0000020000530aa4 : mov edx, edi ; mov rcx, rax ; call 0x20000157548
0x00000200001cf7d7 : mov edx, edi ; mov rcx, rbp ; call 0x2000013ba77
0x0000020000410b66 : mov edx, edi ; mov rcx, rbp ; call r15
0x00000200001dbef2 : mov edx, edi ; mov rcx, rbp ; call rax
0x0000020000594fae : mov edx, edi ; mov rcx, rbx ; call 0x20000091217
0x0000020000538eb6 : mov edx, edi ; mov rcx, rbx ; call qword ptr [rax]
0x00000200001b9c5f : mov edx, edi ; mov rcx, rbx ; call r10
0x00000200003fc10c : mov edx, edi ; mov rcx, rbx ; call r14
0x000002000070f5e6 : mov edx, edi ; mov rcx, rbx ; call rax
0x00000200000f2033 : mov edx, edi ; mov rcx, rsi ; call 0x2000004e32f
0x00000200004c4b87 : mov edx, edi ; mov rcx, rsi ; call 0x200000f13b0
0x00000200005f49c9 : mov edx, edi ; mov rcx, rsi ; call r10
0x000002000013c3e9 : mov edx, edi ; mov rcx, rsi ; call r14
0x0000020000707ddd : mov edx, edi ; mov rcx, rsi ; mov rbp, rax ; call rbx
0x00000200006c5d2c : mov edx, edi ; movzx ecx, bx ; call rax
0x00000200001cd5d3 : mov edx, edi ; shl rdx, 3 ; call 0x2000013987c
0x000002000043d062 : mov edx, edx ; jmp r11
0x000002000068b2b9 : mov edx, edx ; mov rcx, r14 ; call 0x20000157547
0x00000200006beec9 : mov edx, edx ; mov rcx, r15 ; call r11
0x00000200001e6059 : mov edx, edx ; mov rcx, rax ; call qword ptr [rax]
0x00000200004850db : mov edx, edx ; mov rcx, rsi ; call rax
0x000002000043861c : mov edx, esi ; call 0x2000005f0a5
0x00000200004b498b : mov edx, esi ; call 0x200000d9f75
0x00000200005d0d3b : mov edx, esi ; call 0x2000024d004
0x0000020000621367 : mov edx, esi ; call 0x2000024d005
0x000002000062a7aa : mov edx, esi ; call 0x2000024da45
0x00000200000fb31f : mov edx, esi ; call qword ptr [rdi]
0x000002000022bf69 : mov edx, esi ; call r10
0x000002000023b602 : mov edx, esi ; call r11
0x000002000013c36a : mov edx, esi ; call r14
0x0000020000177731 : mov edx, esi ; call rax
0x000002000067a418 : mov edx, esi ; call rdi
0x000002000022ef46 : mov edx, esi ; cmovne rcx, r11 ; call rax
0x00000200004468bd : mov edx, esi ; lea ecx, dword ptr [rdi + 9] ; call 0x2000006c738
0x00000200006a3642 : mov edx, esi ; lea rcx, qword ptr [rsp + 0x50] ; call 0x2000005f909
0x00000200006a3663 : mov edx, esi ; lea rcx, qword ptr [rsp + 0x60] ; call 0x2000005f909
0x000002000048530d : mov edx, esi ; mov ecx, ebx ; call rax
0x00000200004ee56c : mov edx, esi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005f49a7 : mov edx, esi ; mov r8d, dword ptr [rbx] ; mov rcx, rbp ; call rax
0x000002000042b826 : mov edx, esi ; mov rcx, r12 ; call 0x2000004fce8
0x0000020000020d0b : mov edx, esi ; mov rcx, r12 ; call r15
0x000002000050178e : mov edx, esi ; mov rcx, r13 ; call rax
0x000002000052a522 : mov edx, esi ; mov rcx, r14 ; call r9
0x00000200004e1ff6 : mov edx, esi ; mov rcx, r15 ; call 0x2000008e25f
0x00000200004e1fc1 : mov edx, esi ; mov rcx, r15 ; call 0x2000008e2a3
0x0000020000129015 : mov edx, esi ; mov rcx, r15 ; call r14
0x00000200003fbad5 : mov edx, esi ; mov rcx, r15 ; call rax
0x0000020000447877 : mov edx, esi ; mov rcx, rax ; call 0x2000006f59c
0x000002000051ebe5 : mov edx, esi ; mov rcx, rax ; call 0x200001412cc
0x0000020000717934 : mov edx, esi ; mov rcx, rax ; call r15
0x00000200003f27bb : mov edx, esi ; mov rcx, rbp ; call rax
0x000002000046d443 : mov edx, esi ; mov rcx, rbx ; call 0x2000008f0fc
0x000002000058f23a : mov edx, esi ; mov rcx, rbx ; call 0x200001b5df0
0x00000200005a3022 : mov edx, esi ; mov rcx, rbx ; call 0x200004ff2cf
0x000002000045521e : mov edx, esi ; mov rcx, rbx ; call r11
0x000002000013c43e : mov edx, esi ; mov rcx, rbx ; call r14
0x000002000059500f : mov edx, esi ; mov rcx, rbx ; call rax
0x0000020000682025 : mov edx, esi ; mov rcx, rdi ; call 0x2000008e2a3
0x00000200004c7c62 : mov edx, esi ; mov rcx, rdi ; call 0x200000f02ac
0x00000200001cd4dc : mov edx, esi ; mov rcx, rdi ; call 0x2000013977f
0x0000020000516aee : mov edx, esi ; mov rcx, rdi ; call 0x2000013c1b8
0x000002000051ebf3 : mov edx, esi ; mov rcx, rdi ; call 0x20000141230
0x000002000062136e : mov edx, esi ; mov rcx, rdi ; call 0x2000024d008
0x00000200007bbc54 : mov edx, esi ; mov rcx, rdi ; call 0x200003e1c88
0x000002000013c46e : mov edx, esi ; mov rcx, rdi ; call r14
0x0000020000179aa6 : mov edx, esi ; mov rcx, rdi ; call rbx
0x00000200005d0cfd : mov edx, esi ; mov rcx, rsi ; call 0x2000024d007
0x00000200006dc901 : mov edx, esi ; mov rcx, rsi ; call rax
0x0000020000516872 : mov edx, esp ; call 0x2000013bb79
0x0000020000535424 : mov edx, esp ; call 0x20000157545
0x000002000012c81c : mov edx, esp ; call 0x2000024d009
0x000002000013ad2b : mov edx, esp ; call rax
0x00000200001625bd : mov edx, esp ; lea rcx, qword ptr [rbp + 0x10] ; call rbx
0x0000020000460b3f : mov edx, esp ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, rbx ; call rax
0x00000200006bfe23 : mov edx, esp ; mov qword ptr [rsp + 0x20], r14 ; call r10
0x00000200006dcf5d : mov edx, esp ; mov rcx, qword ptr [rbp - 0x61] ; call rax
0x0000020000473482 : mov edx, esp ; mov rcx, qword ptr [rcx + 8] ; call rax
0x000002000008855a : mov edx, esp ; mov rcx, r13 ; call rax
0x000002000063371e : mov edx, esp ; mov rcx, r14 ; call rax
0x00000200006dbd49 : mov edx, esp ; mov rcx, r14 ; call rsi
0x00000200005dcb82 : mov edx, esp ; mov rcx, r15 ; call 0x20000668def
0x00000200004cfc9c : mov edx, esp ; mov rcx, r15 ; call rax
0x0000020000458145 : mov edx, esp ; mov rcx, r15 ; call rdi
0x0000020000156b9a : mov edx, esp ; mov rcx, rax ; call 0x20000092e27
0x00000200003c6469 : mov edx, esp ; mov rcx, rbx ; call r8
0x00000200001cd478 : mov edx, esp ; mov rcx, rdi ; call 0x2000013977f
0x0000020000581027 : mov edx, esp ; mov rcx, rsi ; call r8
0x00000200004850da : mov edx, r10d ; mov rcx, rsi ; call rax
0x00000200001625bc : mov edx, r12d ; lea rcx, qword ptr [rbp + 0x10] ; call rbx
0x00000200001cd477 : mov edx, r12d ; mov rcx, rdi ; call 0x20000139780
0x000002000014530d : mov edx, r13d ; call 0x20000139781
0x00000200005d0d3a : mov edx, r14d ; call 0x2000024d005
0x0000020000588f3c : mov edx, r14d ; call rax
0x000002000051ebe4 : mov edx, r14d ; mov rcx, rax ; call 0x200001412cd
0x000002000046d442 : mov edx, r14d ; mov rcx, rbx ; call 0x2000008f0fd
0x000002000059500e : mov edx, r14d ; mov rcx, rbx ; call rax
0x00000200004c7c61 : mov edx, r14d ; mov rcx, rdi ; call 0x200000f02ad
0x000002000051ebf2 : mov edx, r14d ; mov rcx, rdi ; call 0x20000141231
0x00000200005d0cfc : mov edx, r14d ; mov rcx, rsi ; call 0x2000024d008
0x0000020000085e13 : mov edx, r15d ; call rax
0x000002000070b4b6 : mov edx, r15d ; call rdi
0x000002000077bb96 : mov es, edi ; ret 0x48ff
0x00000200001677bd : mov es, word ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x00000200006ae34f : mov es, word ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000041364f : mov es, word ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe675
0x000002000044f2e9 : mov es, word ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe775
0x0000020000234173 : mov es, word ptr [rcx] ; add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200001db8ea : mov es, word ptr [rdi] ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200007d8891 : mov esi, 0x1407d ; add byte ptr [rax], al ; ret 0x407d
0x0000020000426c17 : mov esi, 0x20f083c1 ; ret
0x00000200005bc59e : mov esi, 0x3345fff7 ; inc dword ptr [rcx - 1] ; ret 0x8349
0x00000200001a9fb8 : mov esi, 0x33487e35 ; ret 0xf48
0x0000020000548eda : mov esi, 0x37e883c0 ; jmp 0x20000548ea9
0x00000200004273a5 : mov esi, 0x3b411104 ; ret
0x00000200001c088e : mov esi, 0x4100138f ; call rcx
0x0000020000553004 : mov esi, 0x48000000 ; mov ecx, ebx ; call rax
0x000002000043613a : mov esi, 0x48000731 ; add esp, 0x50 ; pop rbx ; ret
0x0000020000452b02 : mov esi, 0x4801b0ff ; add esp, 0x28 ; ret
0x0000020000466a7d : mov esi, 0x48c033ff ; add esp, 0x28 ; ret
0x0000020000507bcb : mov esi, 0x48c38bff ; add esp, 0x30 ; pop rbx ; ret
0x0000020000563195 : mov esi, 0x48c38bff ; add esp, 0x70 ; pop rbx ; ret
0x000002000053f894 : mov esi, 0x48ccffc0 ; and dword ptr [rcx], 0 ; ret
0x000002000054a84f : mov esi, 0x48daebff ; add esp, 0x40 ; pop rbx ; ret
0x00000200006172ae : mov esi, 0x48ffb239 ; add esp, 0x68 ; ret
0x0000020000600dae : mov esi, 0x48ffb39e ; add esp, 0x70 ; pop rbp ; ret
0x00000200007bca66 : mov esi, 0x48ffc944 ; add esp, 0x68 ; ret
0x00000200001dc236 : mov esi, 0x48ffe690 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000209fba : mov esi, 0x48fffb64 ; add esp, 0x30 ; pop rbx ; ret
0x000002000009aa6e : mov esi, 0x48fffd00 ; add esp, 0x28 ; ret
0x000002000059ef2f : mov esi, 0x490059e5 ; add ecx, edi ; jmp rcx
0x00000200000f3487 : mov esi, 0x4c8b49c1 ; ret
0x000002000071d630 : mov esi, 0x7401a8ff ; sbb eax, dword ptr [rdi + rcx - 0x4a] ; ret 0x7aba
0x00000200004914fb : mov esi, 0x74c084ff ; or dword ptr [rax - 0x75], ecx ; ret
0x000002000013b189 : mov esi, 0x75c83bc0 ; or dword ptr [rax - 1], ecx ; ret 0x3845
0x00000200002002e7 : mov esi, 0x79890802 ; ret
0x0000020000482b45 : mov esi, 0x7e894dff ; or dh, dh ; ret
0x000002000007f575 : mov esi, 0x80ba0010 ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x3344
0x0000020000666401 : mov esi, 0x8348ccff ; in al, dx ; sub byte ptr [rax - 0x7f], cl ; ret 0x7fff
0x00000200003dbf55 : mov esi, 0x8348ffd0 ; ret
0x000002000017e8a2 : mov esi, 0x8348ffec ; call qword ptr [rax]
0x00000200001d9296 : mov esi, 0x89ffffd1 ; adc byte ptr [rax - 0x7d], r9b ; ret
0x00000200000c90c1 : mov esi, 0x8b000000 ; ret 0xe8c1
0x0000020000558e8e : mov esi, 0x8b0009e5 ; ret
0x0000020000494870 : mov esi, 0x8b00139a ; ret 0x8348
0x00000200001c7e7e : mov esi, 0x8b0015d4 ; ret 0xe083
0x000002000002d915 : mov esi, 0x8b480013 ; ret
0x00000200006761e1 : mov esi, 0x8b49ffc8 ; ret
0x0000020000711157 : mov esi, 0x8b4c00ff ; ret 0x8b48
0x0000020000662228 : mov esi, 0x8b4cffb8 ; ret
0x00000200003d7f3d : mov esi, 0x8b4cffff ; ret
0x0000020000516264 : mov esi, 0x8bdb33ff ; ret
0x00000200006e28ae : mov esi, 0x8bffa657 ; ret
0x00000200005f5c9e : mov esi, 0x8bffac8c ; ret
0x00000200006d703e : mov esi, 0x8bffb75f ; ret
0x0000020000650b3e : mov esi, 0x8bffbfc4 ; ret
0x00000200006a3ff9 : mov esi, 0x8d000000 ; jmp qword ptr [rbx]
0x0000020000152c0e : mov esi, 0x90ffffff ; add rsp, 0x28 ; ret
0x00000200000ead07 : mov esi, 0xab3a40e8 ; ret
0x0000020000062bed : mov esi, 0xb33a40f0 ; ret
0x00000200000ec73d : mov esi, 0xb33a40f6 ; ret
0x00000200007c78be : mov esi, 0xb70f45ff ; ret 0x4166
0x00000200007bd2d0 : mov esi, 0xb8ccc3ff ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200000e5c58 : mov esi, 0xbb3a44ff ; ret
0x00000200000a962b : mov esi, 0xbe0f080c ; ret 0xc82b
0x00000200005b0dee : mov esi, 0xc000000d ; call 0x2000007d087
0x00000200005d8cc2 : mov esi, 0xc000009a ; jmp 0x200004c4f97
0x0000020000043fc7 : mov esi, 0xc0320012 ; ret
0x00000200000ee0d9 : mov esi, 0xc381 ; add byte ptr [rbx], bh ; ret 0x767d
0x0000020000566dca : mov esi, 0xc48348ff ; pop rax ; ret
0x0000020000553433 : mov esi, 0xc48348ff ; push rax ; pop rbx ; ret
0x00000200005580a9 : mov esi, 0xc48348ff ; ret
0x000002000019ca25 : mov esi, 0xe8000000 ; ret 0xfaec
0x0000020000149665 : mov esi, 0xe9000000 ; ror cl, cl ; add byte ptr [rax], al ; ret
0x00000200005af7cc : mov esi, 0xe990ffb4 ; ret 0xea51
0x00000200005dd6cb : mov esi, 0xe990ffe9 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000200007bd2b8 : mov esi, 0xee8c1ff ; and eax, 1 ; ret
0x00000200006cda5e : mov esi, 0xf6000000 ; ret 0x7401
0x000002000005e07a : mov esi, 1 ; jmp 0x2000005e049
0x0000020000440cf0 : mov esi, dr0 ; dec dword ptr [rax - 0x75] ; add al, 0xc1 ; ret
0x00000200000069f1 : mov esi, dword ptr [rax + 0x18] ; call 0x200000070e9
0x000002000005efa4 : mov esi, dword ptr [rax + r8*8 + 8] ; shr esi, 3 ; jmp 0x2000005ef79
0x000002000005efa5 : mov esi, dword ptr [rax + rax*8 + 8] ; shr esi, 3 ; jmp 0x2000005ef78
0x00000200005dd61f : mov esi, dword ptr [rax + rcx*8] ; jmp 0x200004d990b
0x0000020000214dcb : mov esi, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0x148
0x0000020000106ab2 : mov esi, dword ptr [rbp + 0x58] ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x00000200001d8af9 : mov esi, dword ptr [rbp - 0x30] ; jmp 0x200001d8b31
0x00000200005bd7a0 : mov esi, dword ptr [rbp - 0x78] ; jmp 0x200005bd677
0x00000200003d0df8 : mov esi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x00000200000090af : mov esi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rdi ; ret
0x000002000064ae9e : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x00000200004bcf8c : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000115fe6 : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000003cbd : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x00000200004a1d2e : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x00000200003caf17 : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x000002000000fedf : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000007c01 : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rdi ; ret
0x000002000050c36b : mov esi, dword ptr [rsi] ; jmp 0x2000050c304
0x000002000070388d : mov esi, dword ptr [rsp + 0x10] ; mov qword ptr [rdx], r11 ; ret
0x000002000000b2fb : mov esi, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000398c6 : mov esi, dword ptr [rsp + 0x10] ; ret
0x00000200000f83b5 : mov esi, dword ptr [rsp + 0x18] ; mov rdi, qword ptr [rsp + 0x20] ; ret
0x0000020000236362 : mov esi, dword ptr [rsp + 0x18] ; ret
0x000002000068956e : mov esi, dword ptr [rsp + 0x20] ; and eax, 0x80000005 ; ret
0x000002000010fa24 : mov esi, dword ptr [rsp + 0x20] ; pop r14 ; ret
0x000002000007f3a3 : mov esi, dword ptr [rsp + 0x20] ; pop rdi ; ret
0x0000020000420eb2 : mov esi, dword ptr [rsp + 0x20] ; ret
0x0000020000479208 : mov esi, dword ptr [rsp + 0x28] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005343d2 : mov esi, dword ptr [rsp + 0x28] ; jmp 0x200005343fe
0x00000200005330e2 : mov esi, dword ptr [rsp + 0x28] ; pop rdi ; ret
0x000002000021565b : mov esi, dword ptr [rsp + 0x30] ; add rsp, 0x10 ; pop rdi ; ret
0x0000020000099631 : mov esi, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d125e : mov esi, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b8ae5 : mov esi, dword ptr [rsp + 0x30] ; add rsp, 0x40 ; pop rbp ; ret
0x000002000023791d : mov esi, dword ptr [rsp + 0x38] ; add rsp, 0x10 ; pop rdi ; ret
0x000002000005c20d : mov esi, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000286c : mov esi, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000eb789 : mov esi, dword ptr [rsp + 0x38] ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000003d7a : mov esi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c0f0f : mov esi, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000016035 : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003cd8a8 : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000003112 : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000006e3d7 : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x70 ; pop rsi ; ret
0x0000020000043da2 : mov esi, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rbp ; ret
0x000002000000a6d9 : mov esi, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200002309dd : mov esi, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004562bf : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rbp ; ret
0x000002000000b38a : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006183fd : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rbp ; ret
0x000002000000840f : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000000a2d7 : mov esi, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000007c99e : mov esi, dword ptr [rsp + 0x68] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000827c3 : mov esi, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rdi ; ret
0x000002000047289f : mov esi, dword ptr [rsp + 0x68] ; add rsp, 0x70 ; pop rsi ; ret
0x0000020000054eb7 : mov esi, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rdi ; ret
0x000002000046d361 : mov esi, dword ptr [rsp + 0x70] ; add rsp, 0x60 ; pop rdi ; ret
0x00000200000dea0a : mov esi, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbp ; ret
0x000002000008cdf4 : mov esi, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000141f5f : mov esi, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rdi ; ret
0x00000200001f377e : mov esi, dword ptr [rsp + 8] ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200003e61a3 : mov esi, eax ; call 0x20000007c15
0x00000200003cbd6a : mov esi, eax ; call 0x20000517f78
0x000002000071afe6 : mov esi, eax ; call qword ptr [rdi]
0x0000020000708133 : mov esi, eax ; call rbx
0x0000020000037140 : mov esi, eax ; jmp 0x2000003710a
0x0000020000506a86 : mov esi, eax ; jmp 0x20000506a1b
0x00000200004f1626 : mov esi, eax ; mov bpl, dl ; call 0x200004fd857
0x00000200004487cd : mov esi, eax ; mov ebp, edx ; call 0x20000076cf7
0x0000020000152ea5 : mov esi, eax ; mov r15, rax ; jmp rsi
0x00000200006dcfaa : mov esi, eax ; mov rbp, rdx ; call 0x200003f91c3
0x000002000062c66a : mov esi, eax ; test rax, rax ; jne 0x2000062c67d ; jmp 0x2000062c63e
0x00000200001095f4 : mov esi, ebp ; jmp 0x200001095be
0x000002000005198f : mov esi, ebx ; adc al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001cd656 : mov esi, ebx ; call 0x20000139878
0x000002000052c9a9 : mov esi, ebx ; call 0x20000157545
0x0000020000441e5e : mov esi, ecx ; call 0x2000006d285
0x00000200001d2d11 : mov esi, ecx ; call 0x200000eef34
0x0000020000521eff : mov esi, ecx ; call 0x20000147f75
0x000002000061f5ea : mov esi, ecx ; call 0x2000024da45
0x000002000003ece0 : mov esi, ecx ; call 0x2000044af48
0x00000200001fb618 : mov esi, ecx ; jmp 0x200001fb680
0x00000200001cd653 : mov esi, ecx ; mov r14d, ebx ; call 0x2000013987b
0x00000200004338ed : mov esi, ecx ; mov rcx, rdi ; call 0x2000002fb43
0x0000020000642b05 : mov esi, edi ; jmp 0x20000642acf
0x00000200007c5aca : mov esi, edi ; jmp 0x200007a1d0b
0x0000020000450113 : mov esi, edx ; call 0x2000007a509
0x0000020000102e0a : mov esi, edx ; call qword ptr [rbx]
0x00000200001433b4 : mov esi, edx ; mov r8d, edx ; jmp 0x200001433dc
0x00000200001dc26c : mov esi, edx ; mov rbx, rcx ; call qword ptr [rax]
0x0000020000441e5b : mov esi, edx ; mov rsi, rcx ; call 0x2000006d288
0x000002000005a649 : mov esi, esi ; jmp 0x20000059f55
0x00000200005fc705 : mov esi, esi ; push qword ptr [rbx + 4] ; or eax, 0xffffffff ; ret
0x00000200001dd823 : mov esi, esp ; call 0x200000e9a54
0x0000020000532930 : mov esi, esp ; mov edi, r12d ; call 0x20000157888
0x0000020000778439 : mov esi, esp ; mov rax, rdx ; jmp 0x20000778449
0x000002000046fa00 : mov esi, fs ; ret 0x48ff
0x00000200001dd822 : mov esi, r12d ; call 0x200000e9a55
0x000002000053292f : mov esi, r12d ; mov edi, r12d ; call 0x20000157889
0x0000020000778438 : mov esi, r12d ; mov rax, rdx ; jmp 0x2000077844a
0x000002000005a648 : mov esi, r14d ; jmp 0x20000059f56
0x00000200004f1625 : mov esi, r8d ; mov bpl, dl ; call 0x200004fd858
0x00000200006dcfa9 : mov esi, r8d ; mov rbp, rdx ; call 0x200003f91c4
0x00000200005825f2 : mov esp, 0x11024 ; add byte ptr [rcx - 0x75], al ; ret 0x4489
0x0000020000582803 : mov esp, 0x17024 ; add byte ptr [rcx - 0x75], al ; ret 0x100f
0x00000200004826f8 : mov esp, 0x18024 ; add byte ptr [rax - 0x7d], cl ; ret 0x4520
0x0000020000727ae1 : mov esp, 0x2d894cff ; outsb dx, byte ptr [rsi] ; ret 0xffbc
0x0000020000706d95 : mov esp, 0x3000000 ; ret 0x8445
0x00000200004d1caa : mov esp, 0x3b48ffbc ; ret 0x850f
0x0000020000727ae8 : mov esp, 0x3d894cff ; xchg eax, edi ; ret 0xffbc
0x000002000004419a : mov esp, 0x41028941 ; call rdx
0x0000020000587b04 : mov esp, 0x42e990ff ; ret 0xffe6
0x00000200000846d9 : mov esp, 0x440f41c0 ; ret 0xc13b
0x000002000008e801 : mov esp, 0x440f41c1 ; ret 0x3b48
0x000002000001278f : mov esp, 0x440f41c1 ; ret 0x4589
0x00000200006858a3 : mov esp, 0x48c033ff ; add esp, 0x20 ; pop rbx ; ret
0x000002000072b3cd : mov esp, 0x48c08b41 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000792570 : mov esp, 0x48ffb95e ; add esp, 0x20 ; pop rbx ; ret
0x00000200006ff458 : mov esp, 0x48ffc000 ; add esp, 0x38 ; ret
0x00000200001fbc4c : mov esp, 0x48ffe7da ; add esp, 0x58 ; ret
0x00000200001cba60 : mov esp, 0x48ffef26 ; add esp, 0x38 ; ret
0x00000200001478b0 : mov esp, 0x48ffff33 ; add esp, 0x68 ; ret
0x0000020000727aa1 : mov esp, 0x58800ff ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffbc
0x0000020000247d04 : mov esp, 0x5e024 ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200005eb582 : mov esp, 0x6348000c ; ret
0x0000020000727ad0 : mov esp, 0x6405c7ff ; ret 0xffbc
0x000002000072a772 : mov esp, 0x70e900ff ; ret
0x000002000008f7b0 : mov esp, 0x8024 ; add dh, dh ; ret
0x000002000066a54f : mov esp, 0x8024 ; add dh, dh ; ret 0x7410
0x0000020000478778 : mov esp, 0x8024 ; add dh, dh ; ret 0x7510
0x0000020000130d86 : mov esp, 0x83000000 ; call 0x1ffc314829a
0x000002000045362f : mov esp, 0x83480015 ; ret
0x00000200005c215e : mov esp, 0x8348fff2 ; ret
0x0000020000711698 : mov esp, 0x8348ffff ; ret
0x0000020000671179 : mov esp, 0x8418945 ; add rsp, 0x28 ; ret
0x0000020000002760 : mov esp, 0x8424 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004a8860 : mov esp, 0x84ffc379 ; ror byte ptr [rdi], 0x95 ; ret
0x0000020000206477 : mov esp, 0x8905000e ; push rbp ; ret
0x00000200004f9369 : mov esp, 0x8b000000 ; ret
0x00000200004639e4 : mov esp, 0x8b000001 ; adc esi, edi ; ret 0
0x000002000001a11a : mov esp, 0x8b0014af ; ret
0x0000020000798a8b : mov esp, 0x8b440002 ; ret
0x00000200007028d6 : mov esp, 0x8b4cffde ; ret
0x000002000001880c : mov esp, 0x8b4d0030 ; ret 0x1472
0x00000200003d0ad4 : mov esp, 0x8bffc73a ; ret
0x0000020000556a40 : mov esp, 0x8bffcf65 ; ret
0x00000200006d4894 : mov esp, 0x8bffe4c1 ; ret
0x0000020000707d28 : mov esp, 0x8bffffef ; ret
0x000002000008f9fb : mov esp, 0x9024 ; add dh, dh ; ret
0x0000020000587b55 : mov esp, 0x98e990ff ; ret
0x00000200000be1f0 : mov esp, 0xa024 ; add byte ptr [rcx - 0x75], al ; ret 0x8b4c
0x00000200005d8cfb : mov esp, 0xa024 ; add cl, ch ; sti ; ret 0xffee
0x00000200000be72f : mov esp, 0xa024 ; add dh, dh ; ret
0x0000020000482a7a : mov esp, 0xa824 ; add dh, dh ; ret
0x000002000072b2a9 : mov esp, 0xb00189ff ; add ebx, eax ; xor al, al ; ret
0x00000200000c6ace : mov esp, 0xb70f45d1 ; ror dword ptr [rdi], -0x4a ; ret 0xf48
0x0000020000718420 : mov esp, 0xb70ffffe ; ret
0x000002000007e665 : mov esp, 0xb824 ; add dh, dh ; ret
0x000002000049ad83 : mov esp, 0xc024 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200007297ae : mov esp, 0xc03300ff ; add rsp, 0x28 ; ret
0x0000020000530dd1 : mov esp, 0xc48348ff ; jo 0x20000530e3a ; ret
0x00000200004441a3 : mov esp, 0xc48348ff ; pop rax ; ret
0x0000020000517fdb : mov esp, 0xcb8348ff ; dec dword ptr [rax - 0x75] ; ret
0x0000020000070374 : mov esp, 0xd824 ; add byte ptr [rax - 0x75], cl ; ret 0xf49
0x0000020000002a5c : mov esp, 0xd824 ; add byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x000002000052e0b5 : mov esp, 0xd8b48ff ; ret 0xdd7f
0x0000020000149625 : mov esp, 0xe9000000 ; adc cl, dl ; add byte ptr [rax], al ; ret
0x0000020000097fe3 : mov esp, 0xf6000000 ; ret 0xf01
0x000002000011f28e : mov esp, 0xf60005aa ; ret 0xf10
0x0000020000056426 : mov esp, 0xf60012c2 ; ret
0x00000200006881f0 : mov esp, 0xff000000 ; ret
0x00000200005b7342 : mov esp, 0xfffff6ef ; ret 0x3b41
0x00000200003cfe05 : mov esp, cs ; jae 0x200003cfe10 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000051585f : mov esp, dword ptr [rax + 0x1e4] ; call rdi
0x0000020000080223 : mov esp, dword ptr [rax] ; add al, 0 ; add al, ch ; ret
0x0000020000636ce9 : mov esp, dword ptr [rax] ; ret
0x000002000055fbb2 : mov esp, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x000002000079b7c8 : mov esp, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x00000200004410b7 : mov esp, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x00000200003ccd9e : mov esp, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000147c59 : mov esp, dword ptr [rcx + 0x10] ; jmp rdx
0x000002000015658e : mov esp, dword ptr [rsp + 0x100] ; sti ; ret
0x00000200005d8d07 : mov esp, dword ptr [rsp + 0x88] ; jmp 0x200004c500a
0x0000020000620e46 : mov esp, eax ; call 0x2000024da45
0x00000200006ae952 : mov esp, eax ; call 0x200004bc055
0x00000200007a8a8b : mov esp, ebp ; call 0x200003d2419
0x00000200007bcf68 : mov esp, ebx ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000053e775 : mov esp, ebx ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200007bd24a : mov esp, ebx ; pop r12 ; ret
0x000002000053b88f : mov esp, ebx ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000053399f : mov esp, ebx ; pop r14 ; pop r12 ; pop rbp ; ret
0x000002000012d6e5 : mov esp, ebx ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200004263d4 : mov esp, ebx ; pop r14 ; pop r13 ; pop r12 ; ret
0x000002000023133b : mov esp, ebx ; pop r14 ; pop r13 ; pop rbp ; ret
0x00000200000408dc : mov esp, ebx ; pop r14 ; pop r13 ; pop rdi ; ret
0x000002000003002d : mov esp, ebx ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000000ec59 : mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000003815 : mov esp, ebx ; pop r14 ; ret
0x000002000044fdde : mov esp, ebx ; pop r15 ; pop r13 ; pop r12 ; ret
0x00000200003f4d02 : mov esp, ebx ; pop r15 ; pop r13 ; pop rbp ; ret
0x00000200000043ad : mov esp, ebx ; pop r15 ; pop r14 ; pop r12 ; ret
0x0000020000017b3f : mov esp, ebx ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200000028be : mov esp, ebx ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000000f374 : mov esp, ebx ; pop r15 ; pop r14 ; pop rcx ; ret
0x000002000012c6b7 : mov esp, ebx ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000024c1 : mov esp, ebx ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000432475 : mov esp, ebx ; pop r15 ; pop r14 ; pop rsi ; ret
0x00000200002251da : mov esp, ebx ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000003a923 : mov esp, ebx ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200001ce8bb : mov esp, ebx ; pop r15 ; ret
0x00000200000036b1 : mov esp, ebx ; pop rbp ; ret
0x0000020000003cc1 : mov esp, ebx ; pop rdi ; ret
0x0000020000567455 : mov esp, ebx ; pop rsi ; ret
0x0000020000628e22 : mov esp, ecx ; call 0x2000024da45
0x00000200001d2d0c : mov esp, ecx ; xor edx, edx ; mov rsi, rcx ; call 0x200000eef39
0x000002000043d3ef : mov esp, esi ; call 0x2000005f905
0x00000200004cc3f4 : mov fs, eax ; add al, byte ptr [rax] ; add al, ch ; ret 0xc1d5
0x0000020000203bee : mov fs, eax ; sldt word ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000420638 : mov fs, esp ; add dword ptr [rax], eax ; add bh, dh ; ret
0x0000020000415a70 : mov fs, esp ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x00000200004dbe05 : mov fs, word ptr [rax + 1] ; add byte ptr [rax], al ; call 0x200000e8067
0x0000020000172a10 : mov fs, word ptr [rax] ; add eax, dword ptr [rax] ; add al, ch ; ret 0xe915
0x0000020000085e0e : mov gs, word ptr [rax + 0x41000000] ; mov edx, edi ; call rax
0x000002000002a537 : mov gs, word ptr [rax + rax] ; je 0x2000002a53b ; mov rax, qword ptr [rdx + 0x40] ; ret
0x0000020000792612 : mov gs, word ptr [rsi - 0x67] ; inc dword ptr [rbp - 0x75ec8740] ; ret
0x000002000055260b : mov qword ptr [r10 + 0x38], r8 ; mov byte ptr [r10 + 0x30], dl ; ret
0x000002000051ab90 : mov qword ptr [r10 + 8], rdx ; ret
0x000002000016e6d9 : mov qword ptr [r10], r11 ; ret
0x0000020000099db1 : mov qword ptr [r10], r8 ; mov rax, rcx ; ret
0x000002000002164d : mov qword ptr [r10], r9 ; ret
0x00000200005242d0 : mov qword ptr [r10], r9 ; xor eax, eax ; ret
0x000002000001bd13 : mov qword ptr [r10], rax ; mov eax, ecx ; ret
0x000002000001df48 : mov qword ptr [r10], rax ; ret
0x0000020000035913 : mov qword ptr [r10], rcx ; add rsp, 0x28 ; ret
0x000002000022fab4 : mov qword ptr [r10], rcx ; cmovne rax, r9 ; ret
0x0000020000682fe4 : mov qword ptr [r10], rdx ; mov qword ptr [r8], rdx ; ret
0x00000200002267f8 : mov qword ptr [r10], rdx ; mov rax, r11 ; ret
0x0000020000083dd0 : mov qword ptr [r11 + 0x10], r9 ; add rsp, 0x28 ; ret
0x000002000044404f : mov qword ptr [r11 - 0x18], rax ; call 0x20000070f67
0x000002000011aa5c : mov qword ptr [r11 - 0x18], rax ; call r10
0x00000200006dd1ef : mov qword ptr [r11 - 0x18], rdi ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x000002000020157f : mov qword ptr [r11 - 0x20], rbx ; mov dword ptr [rsp + 0x40], ebx ; call rax
0x00000200001373c7 : mov qword ptr [r11 - 0x28], rax ; call r10
0x00000200006dd0b3 : mov qword ptr [r11 - 0x38], rax ; call rdi
0x00000200006dd1f3 : mov qword ptr [r11 - 0x48], rax ; call rbx
0x0000020000453530 : mov qword ptr [r11 - 0x48], rax ; lea r8d, dword ptr [r9 - 1] ; call rbx
0x0000020000530cfb : mov qword ptr [r11 - 0x48], rax ; lea r8d, dword ptr [r9 - 2] ; call qword ptr [rbx]
0x00000200006dd158 : mov qword ptr [r11 - 0x48], rax ; lea r8d, dword ptr [r9 - 2] ; call rbx
0x00000200000a118f : mov qword ptr [r11], r8 ; mov rbx, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x00000200001f761c : mov qword ptr [r11], rax ; mov eax, edx ; add rsp, 0x38 ; ret
0x00000200001c2919 : mov qword ptr [r11], rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003ca643 : mov qword ptr [r11], rcx ; ret
0x00000200004305bc : mov qword ptr [r13 + 0x38], rax ; call 0x2000005fa87
0x00000200005ea05a : mov qword ptr [r14 + 8], r12 ; call 0x2000007f5c4
0x000002000071664a : mov qword ptr [r14], r9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001463d1 : mov qword ptr [r8 + 0x610], rdx ; ret
0x00000200003d3a8c : mov qword ptr [r8 + 8], r10 ; ret
0x000002000051c146 : mov qword ptr [r8 + 8], rax ; cmp dword ptr [r9], r11d ; ja 0x2000051c10b ; ret
0x000002000010499a : mov qword ptr [r8 + 8], rax ; mov eax, 1 ; ret
0x00000200000572e1 : mov qword ptr [r8 + 8], rcx ; ret
0x00000200000f8ef3 : mov qword ptr [r8 + 8], rdx ; mov dl, al ; call 0x20000075198
0x00000200001ce033 : mov qword ptr [r8 + 8], rdx ; ret
0x00000200000c60c0 : mov qword ptr [r8 + rdx*8 + 8], rcx ; ret
0x00000200000fca0d : mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x200000fca06
0x00000200005697a8 : mov qword ptr [r8], 1 ; ret
0x0000020000128eae : mov qword ptr [r8], r10 ; ret
0x0000020000187c26 : mov qword ptr [r8], r11 ; mov qword ptr [r9], r11 ; ret
0x00000200001b741b : mov qword ptr [r8], r11 ; ret
0x0000020000128ea3 : mov qword ptr [r8], r9 ; ret
0x00000200006d65dd : mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x00000200001e6fcf : mov qword ptr [r8], rax ; add rsp, 0x28 ; ret
0x00000200005f11dc : mov qword ptr [r8], rax ; mov al, 1 ; ret
0x0000020000710db9 : mov qword ptr [r8], rax ; mov eax, 1 ; ret
0x00000200003f8e28 : mov qword ptr [r8], rax ; mov eax, r9d ; ret
0x00000200000036d0 : mov qword ptr [r8], rax ; ret
0x000002000001bc41 : mov qword ptr [r8], rax ; xor eax, eax ; ret
0x0000020000078ae5 : mov qword ptr [r8], rcx ; mov al, r9b ; ret
0x00000200003f60a4 : mov qword ptr [r8], rcx ; mov eax, r9d ; ret
0x000002000002fb34 : mov qword ptr [r8], rcx ; ret
0x000002000067b42d : mov qword ptr [r8], rcx ; xor al, al ; ret
0x000002000002ce33 : mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x000002000040fe78 : mov qword ptr [r8], rdx ; mov qword ptr [r9], rcx ; ret
0x00000200000533ae : mov qword ptr [r8], rdx ; ret
0x00000200000420f4 : mov qword ptr [r8], rdx ; test r9d, r9d ; setne al ; ret
0x00000200000723b7 : mov qword ptr [r9 + 0x10], rdi ; pop rdi ; ret
0x0000020000151ac6 : mov qword ptr [r9 + 0x18], rax ; mov eax, 2 ; ret
0x0000020000704910 : mov qword ptr [r9 + 0x20], rcx ; ret
0x000002000022c5c0 : mov qword ptr [r9 + 0x48], rcx ; mov al, 1 ; ret
0x000002000022c5aa : mov qword ptr [r9 + 0x48], rcx ; xor al, al ; ret
0x00000200001717d0 : mov qword ptr [r9 + 0x48], rdx ; ret
0x00000200001d1ef1 : mov qword ptr [r9 + 0x60], rax ; ret
0x00000200000bdf6c : mov qword ptr [r9 + 0x628], rax ; ret
0x000002000016df40 : mov qword ptr [r9 + 0x70], rax ; ret
0x000002000016df7a : mov qword ptr [r9 + 0x80], rax ; ret
0x0000020000671166 : mov qword ptr [r9 + 8], r8 ; add rsp, 0x28 ; ret
0x0000020000017c1f : mov qword ptr [r9 + 8], rax ; add rsp, 0x28 ; ret
0x0000020000100431 : mov qword ptr [r9 + 8], rax ; cmp rax, r9 ; je 0x20000100444 ; ret
0x00000200000c46a4 : mov qword ptr [r9 + 8], rax ; ret
0x00000200001b9783 : mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x00000200003ee102 : mov qword ptr [r9], r10 ; ret
0x00000200001b9778 : mov qword ptr [r9], r10 ; xor al, al ; ret
0x0000020000187c29 : mov qword ptr [r9], r11 ; ret
0x000002000067a500 : mov qword ptr [r9], r11 ; test r11, r11 ; setne al ; ret
0x0000020000231daa : mov qword ptr [r9], r8 ; add rsp, 0x68 ; ret
0x0000020000411d91 : mov qword ptr [r9], r8 ; mov eax, 1 ; ret
0x00000200000343d2 : mov qword ptr [r9], r8 ; ret
0x00000200000f7eac : mov qword ptr [r9], rax ; mov dword ptr [r9 + 0x18], eax ; ret
0x000002000005c4de : mov qword ptr [r9], rax ; mov eax, ecx ; ret
0x0000020000056b22 : mov qword ptr [r9], rax ; mov eax, r10d ; ret
0x000002000006f25d : mov qword ptr [r9], rax ; ret
0x00000200001c3227 : mov qword ptr [r9], rax ; xor eax, eax ; ret
0x0000020000128c29 : mov qword ptr [r9], rcx ; mov dword ptr [r8], edx ; xor eax, eax ; ret
0x00000200005697c6 : mov qword ptr [r9], rcx ; mov qword ptr [rax], rcx ; xor eax, eax ; ret
0x000002000003a51f : mov qword ptr [r9], rcx ; ret
0x000002000043b0bc : mov qword ptr [r9], rcx ; xor eax, eax ; add rsp, 0x18 ; ret
0x0000020000139515 : mov qword ptr [r9], rcx ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000682fe1 : mov qword ptr [r9], rdx ; mov qword ptr [r10], rdx ; mov qword ptr [r8], rdx ; ret
0x000002000040fe71 : mov qword ptr [r9], rdx ; mov qword ptr [r8], rcx ; ret
0x00000200000c09ff : mov qword ptr [r9], rdx ; pop rdi ; ret
0x000002000049bcba : mov qword ptr [rax + 0x10], r9 ; ret
0x00000200005cfb60 : mov qword ptr [rax + 0x10], rbx ; jmp 0x2000049bdb6
0x00000200007059c0 : mov qword ptr [rax + 0x10], rdx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002dd08 : mov qword ptr [rax + 0x18], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007018db : mov qword ptr [rax + 0x18], rax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005caadb : mov qword ptr [rax + 0x20], rdx ; jmp 0x20000486d3c
0x00000200001fc3aa : mov qword ptr [rax + 0x28], r9 ; ret
0x0000020000554aba : mov qword ptr [rax + 0x50], rdx ; ret
0x00000200000bc4a9 : mov qword ptr [rax + 0x678], rcx ; ret
0x00000200001c9fb0 : mov qword ptr [rax + 0x680], rdx ; ret
0x0000020000008f6d : mov qword ptr [rax + 0x748], rcx ; ret
0x000002000000bff9 : mov qword ptr [rax + 0x7c0], rcx ; ret
0x00000200000343db : mov qword ptr [rax + 8], r8 ; ret
0x0000020000116856 : mov qword ptr [rax + 8], r9 ; mov qword ptr [rcx], r9 ; mov rax, r10 ; ret
0x000002000003e395 : mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x0000020000023cfa : mov qword ptr [rax + 8], rcx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000070e2a8 : mov qword ptr [rax + 8], rcx ; and qword ptr [rax + 0x10], 0 ; ret
0x000002000000a3f1 : mov qword ptr [rax + 8], rcx ; mov qword ptr [rdx], rcx ; ret
0x000002000046a568 : mov qword ptr [rax + 8], rcx ; xor eax, eax ; ret
0x00000200001f6fa0 : mov qword ptr [rax + 8], rdx ; mov qword ptr [rcx], rdx ; ret
0x00000200004511ca : mov qword ptr [rax + 8], rsi ; call 0x2000007d087
0x00000200005a2ccf : mov qword ptr [rax + rdx*8], r8 ; ret
0x0000020000118bc3 : mov qword ptr [rax - 0x10], rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004234aa : mov qword ptr [rax], 0 ; ret
0x00000200004568e3 : mov qword ptr [rax], 1 ; xor eax, eax ; ret
0x0000020000118ef2 : mov qword ptr [rax], r10 ; ret
0x00000200000343ef : mov qword ptr [rax], r8 ; ret
0x00000200007063d2 : mov qword ptr [rax], r9 ; mov al, 1 ; ret
0x0000020000124187 : mov qword ptr [rax], r9 ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000000b6a2 : mov qword ptr [rax], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000004e4c : mov qword ptr [rax], rax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f0574 : mov qword ptr [rax], rax ; mov byte ptr [rdx + 0x2a], 0 ; ret
0x000002000009038a : mov qword ptr [rax], rax ; mov dword ptr [rcx + 0x18], r8d ; ret
0x000002000003e399 : mov qword ptr [rax], rax ; ret
0x00000200001ce030 : mov qword ptr [rax], rcx ; mov qword ptr [r8 + 8], rdx ; ret
0x00000200000ee94a : mov qword ptr [rax], rcx ; mov qword ptr [rdx + 8], rcx ; ret
0x00000200000ee9c1 : mov qword ptr [rax], rcx ; ret
0x00000200005697c9 : mov qword ptr [rax], rcx ; xor eax, eax ; ret
0x00000200000f8a5b : mov qword ptr [rax], rdx ; mov eax, r8d ; ret
0x00000200001717cd : mov qword ptr [rax], rdx ; mov qword ptr [r9 + 0x48], rdx ; ret
0x00000200001616a0 : mov qword ptr [rax], rdx ; ret
0x0000020000525aa8 : mov qword ptr [rbp + 0x27], r14 ; call 0x200001480d7
0x00000200005217fc : mov qword ptr [rbp - 0x20], rax ; call 0x2000024da46
0x00000200006cfd73 : mov qword ptr [rbp - 0x21], rax ; movzx ecx, word ptr [rbx] ; call 0x2000013c069
0x0000020000525d7d : mov qword ptr [rbp - 0x28], r14 ; call 0x20000148177
0x00000200007cd1ce : mov qword ptr [rbp - 0x29], r14 ; call 0x200003f8b5b
0x00000200003fa5f5 : mov qword ptr [rbp - 0x40], rsi ; call r10
0x0000020000458aa7 : mov qword ptr [rbp - 0x41], r11 ; call rax
0x00000200004421ca : mov qword ptr [rbp - 0x48], rbx ; call r14
0x0000020000401b2a : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000017ebd8 : mov qword ptr [rbx + 0x28], rax ; jmp 0x2000004aee0
0x000002000054cf28 : mov qword ptr [rbx + 0x28], rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011a6f3 : mov qword ptr [rbx + 0x30], rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000548438 : mov qword ptr [rbx + 0x30], rdx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000054308 : mov qword ptr [rbx + 0x38], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e101c : mov qword ptr [rbx + 0x38], rcx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000045f845 : mov qword ptr [rbx + 8], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f0fd0 : mov qword ptr [rbx + 8], rax ; jmp 0x200003f0f9e
0x000002000001e0b4 : mov qword ptr [rbx + 8], rcx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000129273 : mov qword ptr [rbx], r10 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000090456 : mov qword ptr [rbx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000c831 : mov qword ptr [rbx], rax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000fd33c : mov qword ptr [rbx], rax ; add rsp, 0x40 ; pop rbx ; ret
0x000002000042a8b6 : mov qword ptr [rbx], rax ; jmp 0x2000042a8e6
0x000002000042a8b5 : mov qword ptr [rbx], rax ; jmp 0x2000042a8e7
0x00000200007990fd : mov qword ptr [rbx], rax ; jmp 0x200007990c8
0x00000200003f0fcd : mov qword ptr [rbx], rax ; mov qword ptr [rbx + 8], rax ; jmp 0x200003f0fa1
0x0000020000209f6c : mov qword ptr [rbx], rcx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000007c7a : mov qword ptr [rbx], rcx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006279a1 : mov qword ptr [rbx], rcx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000001b611 : mov qword ptr [rbx], rcx ; jmp 0x2000001b5ae
0x00000200005618d1 : mov qword ptr [rbx], rdx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000157b0c : mov qword ptr [rcx + 0x10], r8 ; ret
0x000002000070f685 : mov qword ptr [rcx + 0x10], r9 ; mov qword ptr [rcx], rdx ; ret
0x000002000054333d : mov qword ptr [rcx + 0x10], rax ; mov dword ptr [rcx + 0x18], eax ; ret
0x0000020000567ce8 : mov qword ptr [rcx + 0x10], rax ; mov qword ptr [rcx + 8], rcx ; ret
0x00000200006851ed : mov qword ptr [rcx + 0x10], rdx ; and qword ptr [rcx + 8], 0 ; ret
0x00000200001fe672 : mov qword ptr [rcx + 0x10], rdx ; ret
0x000002000078f1b1 : mov qword ptr [rcx + 0x128], rax ; xor eax, eax ; ret
0x0000020000090e8f : mov qword ptr [rcx + 0x168], r8 ; ret
0x0000020000090ea0 : mov qword ptr [rcx + 0x168], rax ; ret
0x000002000008f10a : mov qword ptr [rcx + 0x18], r8 ; mov qword ptr [rcx + 0x38], r8 ; ret
0x000002000012973f : mov qword ptr [rcx + 0x18], rax ; mov dword ptr [rcx + 8], edx ; ret
0x0000020000018c39 : mov qword ptr [rcx + 0x18], rax ; ret
0x0000020000057ae4 : mov qword ptr [rcx + 0x18], rdx ; mov qword ptr [rcx + 0x20], r8 ; ret
0x000002000008f0eb : mov qword ptr [rcx + 0x18], rdx ; mov qword ptr [rcx + 0x38], rdx ; ret
0x00000200000ba4b7 : mov qword ptr [rcx + 0x18], rdx ; ret
0x00000200000400fe : mov qword ptr [rcx + 0x20], r10 ; ret
0x0000020000057ae8 : mov qword ptr [rcx + 0x20], r8 ; ret
0x0000020000108868 : mov qword ptr [rcx + 0x20], rdx ; ret
0x00000200002119d7 : mov qword ptr [rcx + 0x28], rax ; mov al, 1 ; ret
0x00000200003e1dee : mov qword ptr [rcx + 0x2e0], rdx ; ret
0x000002000003d1ba : mov qword ptr [rcx + 0x30], r8 ; mov qword ptr [rcx + 0x38], r9 ; ret
0x000002000068383d : mov qword ptr [rcx + 0x340], rdx ; ret
0x000002000008f10e : mov qword ptr [rcx + 0x38], r8 ; ret
0x000002000003d1be : mov qword ptr [rcx + 0x38], r9 ; ret
0x00000200003e908e : mov qword ptr [rcx + 0x38], rax ; cmp dword ptr [rcx + 0x14], edx ; ja 0x200003e90a1 ; ret
0x000002000008f43a : mov qword ptr [rcx + 0x38], rax ; mov byte ptr [rcx + 0x52], dl ; ret
0x00000200005137a7 : mov qword ptr [rcx + 0x38], rax ; mov qword ptr [rcx + 0x40], r10 ; ret
0x0000020000033d89 : mov qword ptr [rcx + 0x38], rdx ; mov dword ptr [rcx + 0x74], edx ; jne 0x20000033d9c ; ret
0x000002000008f0ef : mov qword ptr [rcx + 0x38], rdx ; ret
0x0000020000453588 : mov qword ptr [rcx + 0x3d8], rdx ; ret
0x00000200004549d4 : mov qword ptr [rcx + 0x3e8], rax ; xor eax, eax ; ret
0x00000200005137ab : mov qword ptr [rcx + 0x40], r10 ; ret
0x00000200003e0067 : mov qword ptr [rcx + 0x40], r8 ; mov byte ptr [rcx + 0x48], 0 ; ret
0x00000200004487a6 : mov qword ptr [rcx + 0x410], rax ; ret
0x000002000054147a : mov qword ptr [rcx + 0x410], rcx ; ret
0x000002000068023c : mov qword ptr [rcx + 0x460], rdx ; xor eax, eax ; ret
0x0000020000683ec8 : mov qword ptr [rcx + 0x50], r9 ; ret
0x0000020000683ec3 : mov qword ptr [rcx + 0x50], rax ; ret
0x000002000005749d : mov qword ptr [rcx + 0x58], rax ; mov qword ptr [rcx + 0x60], rax ; ret
0x0000020000157a91 : mov qword ptr [rcx + 0x5b58], rax ; ret
0x00000200000574a1 : mov qword ptr [rcx + 0x60], rax ; ret
0x00000200001c9f9c : mov qword ptr [rcx + 0x680], rdx ; ret
0x0000020000044db1 : mov qword ptr [rcx + 0x68], rax ; ret
0x00000200006c9993 : mov qword ptr [rcx + 0x68], rdx ; ret
0x000002000002e4f3 : mov qword ptr [rcx + 0x70], r10 ; jmp 0x2000002e4c0
0x00000200003d3faa : mov qword ptr [rcx + 0x70], rax ; mov dword ptr [rcx + 0x78], eax ; ret
0x0000020000044cec : mov qword ptr [rcx + 0x70], rdx ; ret
0x000002000042825e : mov qword ptr [rcx + 0x70], rdx ; xor eax, eax ; ret
0x0000020000451280 : mov qword ptr [rcx + 0x7a8], rdx ; ret
0x0000020000604d2e : mov qword ptr [rcx + 0x98], rax ; ret
0x000002000045696c : mov qword ptr [rcx + 0xb08], rdx ; ret
0x00000200001d9569 : mov qword ptr [rcx + 0xb0], rax ; ret
0x0000020000147488 : mov qword ptr [rcx + 5], rax ; ret
0x0000020000147493 : mov qword ptr [rcx + 6], rax ; ret
0x000002000014749b : mov qword ptr [rcx + 7], rax ; ret
0x00000200007071ed : mov qword ptr [rcx + 8], -0x21520ff3 ; ret
0x0000020000042aa8 : mov qword ptr [rcx + 8], r8 ; mov dword ptr [rcx + 0x58], eax ; ret
0x000002000012038b : mov qword ptr [rcx + 8], r8 ; ret
0x00000200000723b3 : mov qword ptr [rcx + 8], r9 ; mov qword ptr [r9 + 0x10], rdi ; pop rdi ; ret
0x0000020000658957 : mov qword ptr [rcx + 8], r9 ; ret
0x0000020000005732 : mov qword ptr [rcx + 8], rax ; add rsp, 0x28 ; ret
0x0000020000437184 : mov qword ptr [rcx + 8], rax ; call 0x2000005f387
0x00000200000f059e : mov qword ptr [rcx + 8], rax ; mov qword ptr [r8], rax ; ret
0x0000020000057afa : mov qword ptr [rcx + 8], rax ; mov qword ptr [rcx], rdx ; ret
0x000002000003911a : mov qword ptr [rcx + 8], rax ; ret
0x0000020000044ce4 : mov qword ptr [rcx + 8], rcx ; ret
0x0000020000481b7b : mov qword ptr [rcx + 8], rdx ; add rsp, 0x28 ; ret
0x0000020000157b08 : mov qword ptr [rcx + 8], rdx ; mov qword ptr [rcx + 0x10], r8 ; ret
0x0000020000032adf : mov qword ptr [rcx + 8], rdx ; ret
0x00000200000d2af4 : mov qword ptr [rcx + r8*8 + 8], rax ; ret
0x0000020000432bd4 : mov qword ptr [rcx + rax*8 + 8], r8 ; ret
0x00000200000477bf : mov qword ptr [rcx + rax], rbx ; mov rcx, rsi ; call 0x200000d3a79
0x000002000014e971 : mov qword ptr [rcx - 8], rax ; jne 0x2000014e956 ; ret
0x000002000067aad5 : mov qword ptr [rcx], r10 ; mov eax, r9d ; ret
0x00000200001d8509 : mov qword ptr [rcx], r10 ; ret
0x000002000070641e : mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x000002000020f6f4 : mov qword ptr [rcx], r8 ; mov qword ptr [rcx + 8], rdx ; ret
0x00000200001ceb43 : mov qword ptr [rcx], r8 ; ret
0x000002000011685a : mov qword ptr [rcx], r9 ; mov rax, r10 ; ret
0x0000020000693fd1 : mov qword ptr [rcx], rax ; add rsp, 0x28 ; ret
0x0000020000201381 : mov qword ptr [rcx], rax ; add rsp, 0x50 ; pop rdi ; ret
0x000002000004e2c3 : mov qword ptr [rcx], rax ; inc edx ; jmp 0x2000004e2a8
0x000002000046cca8 : mov qword ptr [rcx], rax ; jmp 0x2000046ccb8
0x00000200005389fc : mov qword ptr [rcx], rax ; jmp 0x200005389c8
0x000002000016bf67 : mov qword ptr [rcx], rax ; mov al, 1 ; ret
0x0000020000147469 : mov qword ptr [rcx], rax ; mov byte ptr [rcx + 8], al ; ret
0x0000020000147470 : mov qword ptr [rcx], rax ; mov dword ptr [rcx + 6], eax ; ret
0x0000020000147477 : mov qword ptr [rcx], rax ; mov dword ptr [rcx + 7], eax ; ret
0x000002000014747e : mov qword ptr [rcx], rax ; mov dword ptr [rcx + 8], eax ; ret
0x00000200001cc484 : mov qword ptr [rcx], rax ; mov dword ptr [rcx + 8], eax ; xor eax, eax ; ret
0x00000200001579de : mov qword ptr [rcx], rax ; mov eax, 0xc00000bb ; ret
0x00000200001f01d4 : mov qword ptr [rcx], rax ; mov eax, 1 ; ret
0x000002000001f352 : mov qword ptr [rcx], rax ; mov eax, edx ; ret
0x0000020000147485 : mov qword ptr [rcx], rax ; mov qword ptr [rcx + 5], rax ; ret
0x0000020000147490 : mov qword ptr [rcx], rax ; mov qword ptr [rcx + 6], rax ; ret
0x0000020000147498 : mov qword ptr [rcx], rax ; mov qword ptr [rcx + 7], rax ; ret
0x00000200006a420f : mov qword ptr [rcx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x00000200005695f2 : mov qword ptr [rcx], rax ; mov qword ptr [rdx], r8 ; ret
0x000002000001016a : mov qword ptr [rcx], rax ; ret
0x00000200006ae2d6 : mov qword ptr [rcx], rax ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000402a6 : mov qword ptr [rcx], rax ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000160a93 : mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x0000020000081e9d : mov qword ptr [rcx], rbx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000992da : mov qword ptr [rcx], rdi ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000451fdc : mov qword ptr [rcx], rdx ; mov eax, r8d ; ret
0x00000200004a6228 : mov qword ptr [rcx], rdx ; mov qword ptr [rdx + 8], rcx ; ret
0x000002000000a206 : mov qword ptr [rcx], rdx ; ret
0x00000200005699c4 : mov qword ptr [rcx], rdx ; xor al, al ; ret
0x0000020000614a9b : mov qword ptr [rdi + 0x10], rax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000493569 : mov qword ptr [rdi + 0x30], rax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000453d93 : mov qword ptr [rdi + 0x50], rax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000534855 : mov qword ptr [rdi + 0x56], rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000016bec9 : mov qword ptr [rdi + 8], -0x3fffffe4 ; jmp 0x2000016be9e
0x00000200000fb375 : mov qword ptr [rdi + 8], rax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001dea58 : mov qword ptr [rdi], r8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000009583d : mov qword ptr [rdi], r9 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020fe04 : mov qword ptr [rdi], r9 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004a9bdf : mov qword ptr [rdi], rax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000450125 : mov qword ptr [rdi], rax ; mov rcx, rax ; call 0x2000007a469
0x000002000000a862 : mov qword ptr [rdi], rcx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001bcecc : mov qword ptr [rdx + 0x10], rax ; je 0x200001bceda ; sti ; ret
0x00000200000b5825 : mov qword ptr [rdx + 0x10], rax ; ret
0x00000200001da92c : mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x0000020000025ef9 : mov qword ptr [rdx + 0x10], rcx ; pop rsi ; ret
0x000002000000d74e : mov qword ptr [rdx + 0x10], rcx ; ret
0x000002000071c093 : mov qword ptr [rdx + 0x120], rax ; xor eax, eax ; ret
0x000002000008f0ae : mov qword ptr [rdx + 0x18], rax ; mov al, 1 ; ret
0x0000020000063e59 : mov qword ptr [rdx + 0x18], rcx ; add rsp, 0x28 ; ret
0x0000020000035ef7 : mov qword ptr [rdx + 0x18], rdx ; add rsp, 0x38 ; ret
0x000002000003d654 : mov qword ptr [rdx + 0x20], r9 ; mov al, r8b ; ret
0x000002000060a148 : mov qword ptr [rdx + 0x28], rax ; ret
0x000002000060a13b : mov qword ptr [rdx + 0x28], rcx ; mov qword ptr [rdx + 0x38], rax ; ret
0x0000020000563b62 : mov qword ptr [rdx + 0x28], rcx ; ret
0x0000020000212f9c : mov qword ptr [rdx + 0x378], rax ; ret
0x0000020000218f6e : mov qword ptr [rdx + 0x38], r8 ; xor eax, eax ; ret
0x000002000060a13f : mov qword ptr [rdx + 0x38], rax ; ret
0x000002000060a16c : mov qword ptr [rdx + 0x48], rax ; ret
0x0000020000008f88 : mov qword ptr [rdx + 0x748], rcx ; ret
0x000002000000c020 : mov qword ptr [rdx + 0x7c0], rcx ; ret
0x0000020000026cd6 : mov qword ptr [rdx + 8], r8 ; ret
0x000002000012f28e : mov qword ptr [rdx + 8], r9 ; mov word ptr [rdx], r9w ; jmp 0x2000012f264
0x000002000049c449 : mov qword ptr [rdx + 8], rax ; and qword ptr [rcx + 0x30], 0 ; ret
0x0000020000627e93 : mov qword ptr [rdx + 8], rax ; xor edx, edx ; call 0x2000024d009
0x00000200003cd1d7 : mov qword ptr [rdx + 8], rcx ; dec dword ptr [rcx + 0x64] ; ret
0x00000200000ee9bd : mov qword ptr [rdx + 8], rcx ; mov qword ptr [rax], rcx ; ret
0x000002000000a202 : mov qword ptr [rdx + 8], rcx ; mov qword ptr [rcx], rdx ; ret
0x000002000020c042 : mov qword ptr [rdx + 8], rcx ; or qword ptr [rcx + 0x10], 0xffffffffffffffff ; ret
0x00000200000ee94d : mov qword ptr [rdx + 8], rcx ; ret
0x00000200001473ff : mov qword ptr [rdx + rcx - 8], rax ; ret
0x00000200006844c9 : mov qword ptr [rdx], 0x60 ; ret
0x000002000002e4e0 : mov qword ptr [rdx], r10 ; mov rax, r8 ; ret
0x0000020000703891 : mov qword ptr [rdx], r11 ; ret
0x00000200004783d0 : mov qword ptr [rdx], r8 ; mov al, 1 ; ret
0x00000200005695f5 : mov qword ptr [rdx], r8 ; ret
0x0000020000211aad : mov qword ptr [rdx], r9 ; mov eax, r8d ; ret
0x00000200001d6905 : mov qword ptr [rdx], r9 ; ret
0x0000020000028bad : mov qword ptr [rdx], rax ; mov al, 1 ; pop rsi ; ret
0x0000020000635479 : mov qword ptr [rdx], rax ; mov eax, r8d ; ret
0x00000200001d8c2c : mov qword ptr [rdx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000464a11 : mov qword ptr [rdx], rax ; mov rax, r8 ; ret
0x00000200006aa3b0 : mov qword ptr [rdx], rax ; mov rax, rcx ; ret
0x000002000000b3fc : mov qword ptr [rdx], rax ; ret
0x00000200000f5cbc : mov qword ptr [rdx], rax ; test r8, r8 ; jne 0x200000f5cd3 ; ret
0x000002000020bf81 : mov qword ptr [rdx], rax ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000020bf48 : mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x0000020000144743 : mov qword ptr [rdx], rcx ; add rsp, 0x38 ; ret
0x0000020000433842 : mov qword ptr [rdx], rcx ; add rsp, 0x68 ; ret
0x000002000069724b : mov qword ptr [rdx], rcx ; mov eax, r8d ; ret
0x000002000046a565 : mov qword ptr [rdx], rcx ; mov qword ptr [rax + 8], rcx ; xor eax, eax ; ret
0x0000020000040ec4 : mov qword ptr [rdx], rcx ; mov rax, r8 ; ret
0x000002000000a3f5 : mov qword ptr [rdx], rcx ; ret
0x000002000020fe56 : mov qword ptr [rdx], rcx ; xor eax, eax ; ret
0x0000020000600ab6 : mov qword ptr [rip + 0x147773], rdx ; xor eax, eax ; ret
0x00000200001c5cad : mov qword ptr [rip + 0x159ba4], rcx ; ret
0x00000200001c467c : mov qword ptr [rip + 0x15dc25], rcx ; ret
0x00000200005cd912 : mov qword ptr [rip + 0x17a907], rax ; ret
0x00000200001b304e : mov qword ptr [rip + 0x1a2b33], rdx ; ret
0x0000020000157b27 : mov qword ptr [rip + 0x1abf7a], rdx ; ret
0x000002000013abec : mov qword ptr [rip + 0x1b924d], rax ; xor eax, eax ; ret
0x000002000012d69f : mov qword ptr [rip + 0x1dfb5a], rdx ; ret
0x000002000007b0ea : mov qword ptr [rip + 0x2a6d77], rax ; ret
0x000002000045695b : mov qword ptr [rip + 0x2f18c6], rax ; ret
0x0000020000215b74 : mov qword ptr [rip + 0xddebd], rcx ; ret
0x0000020000512832 : mov qword ptr [rip - 0x1eda61], rax ; call 0x200000feaa5
0x00000200005128ae : mov qword ptr [rip - 0x1edadd], rax ; ret
0x0000020000502114 : mov qword ptr [rip - 0x1fe6d3], rcx ; ret
0x0000020000526e65 : mov qword ptr [rip - 0x207d44], rcx ; ret
0x00000200005e9874 : mov qword ptr [rip - 0x2e5e43], rcx ; ret
0x0000020000658812 : mov qword ptr [rip - 0x352621], rcx ; jmp 0x200006587e6
0x00000200006588f0 : mov qword ptr [rip - 0x3526ff], rcx ; jmp 0x200006588c4
0x000002000071710c : mov qword ptr [rip - 0x4176eb], rcx ; ret
0x0000020000726008 : mov qword ptr [rip - 0x42d02f], rcx ; ret
0x00000200007d275c : mov qword ptr [rip - 0x47cb63], rcx ; xor eax, eax ; ret
0x00000200007bd2e0 : mov qword ptr [rip - 0x49c3ff], rcx ; ret
0x00000200007ab4a8 : mov qword ptr [rip - 0x4a9f0f], rdx ; ret
0x00000200007baf6f : mov qword ptr [rip - 0x4b7c76], rcx ; ret
0x00000200007bc4cb : mov qword ptr [rip - 0x4b9452], rcx ; ret
0x00000200007b41eb : mov qword ptr [rip - 0x4b9d92], rbx ; call 0x20000080449
0x00000200007bbac0 : mov qword ptr [rip - 0x4ba377], rcx ; ret
0x000002000015c536 : mov qword ptr [rsi], rdi ; jmp 0x2000015c501
0x00000200006c694e : mov qword ptr [rsp + 0x20], r10 ; call rax
0x000002000023b5fd : mov qword ptr [rsp + 0x20], r10 ; mov edx, esi ; call r11
0x0000020000638db3 : mov qword ptr [rsp + 0x20], r12 ; call 0x20000644fe3
0x0000020000606884 : mov qword ptr [rsp + 0x20], r12 ; mov r8d, ebx ; call rax
0x00000200003f36b6 : mov qword ptr [rsp + 0x20], r12 ; mov rcx, r14 ; call qword ptr [rsi]
0x00000200004ca063 : mov qword ptr [rsp + 0x20], r13 ; call r10
0x00000200006bf49b : mov qword ptr [rsp + 0x20], r14 ; call r10
0x000002000019f6bb : mov qword ptr [rsp + 0x20], r15 ; call rax
0x00000200005878d2 : mov qword ptr [rsp + 0x20], r15 ; xor ecx, ecx ; call qword ptr [rsi]
0x000002000050d82c : mov qword ptr [rsp + 0x20], r8 ; mov r8b, r11b ; call r12
0x000002000020e6eb : mov qword ptr [rsp + 0x20], rax ; add rsp, 0x38 ; ret
0x000002000043c5f9 : mov qword ptr [rsp + 0x20], rax ; call 0x20000069b08
0x00000200005221eb : mov qword ptr [rsp + 0x20], rax ; call 0x20000147f78
0x000002000051f29c : mov qword ptr [rsp + 0x20], rax ; call 0x200001486b8
0x00000200007d09b3 : mov qword ptr [rsp + 0x20], rax ; call 0x200003f7cf4
0x00000200007d08de : mov qword ptr [rsp + 0x20], rax ; call 0x200003fec88
0x000002000069f6a4 : mov qword ptr [rsp + 0x20], rax ; call 0x2000044b98f
0x00000200003ef95e : mov qword ptr [rsp + 0x20], rax ; call 0x2000050bc43
0x000002000068fc44 : mov qword ptr [rsp + 0x20], rax ; call qword ptr [r10]
0x00000200000313db : mov qword ptr [rsp + 0x20], rax ; call qword ptr [rbx]
0x00000200006319e9 : mov qword ptr [rsp + 0x20], rax ; call qword ptr [rip - 0x3db19c]
0x0000020000631a1a : mov qword ptr [rsp + 0x20], rax ; call qword ptr [rip - 0x3db1cd]
0x00000200003f358e : mov qword ptr [rsp + 0x20], rax ; call qword ptr [rsi]
0x000002000000c169 : mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200003f75a1 : mov qword ptr [rsp + 0x20], rax ; call r11
0x00000200003f547e : mov qword ptr [rsp + 0x20], rax ; call r12
0x0000020000430493 : mov qword ptr [rsp + 0x20], rax ; call r15
0x00000200001a0335 : mov qword ptr [rsp + 0x20], rax ; call rbx
0x00000200006dd0e8 : mov qword ptr [rsp + 0x20], rax ; lea r8d, dword ptr [r9 + 1] ; call rdi
0x0000020000400f7e : mov qword ptr [rsp + 0x20], rax ; lea r8d, dword ptr [r9 - 3] ; call rsi
0x00000200003f3868 : mov qword ptr [rsp + 0x20], rax ; mov rcx, r11 ; call r10
0x0000020000441ea8 : mov qword ptr [rsp + 0x20], rbp ; mov rcx, rsi ; call rdi
0x00000200007d1476 : mov qword ptr [rsp + 0x20], rbx ; call 0x200003fec88
0x00000200005a9b27 : mov qword ptr [rsp + 0x20], rcx ; call 0x200001d1a04
0x00000200003f937d : mov qword ptr [rsp + 0x20], rcx ; mov rcx, r11 ; call rax
0x000002000070f95b : mov qword ptr [rsp + 0x20], rdi ; call rax
0x000002000022bf63 : mov qword ptr [rsp + 0x20], rdx ; mov rdx, rsi ; call r10
0x000002000062c1be : mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rax]
0x00000200003fff10 : mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x00000200001feed4 : mov qword ptr [rsp + 0x28], r8 ; call rdx
0x000002000052ddcd : mov qword ptr [rsp + 0x30], r11 ; pop rbx ; jmp r10
0x00000200007bcb33 : mov qword ptr [rsp + 0x30], rax ; call 0x200003e9a08
0x000002000016dafe : mov qword ptr [rsp + 0x30], rax ; call r8
0x000002000058e00e : mov qword ptr [rsp + 0x30], rbx ; call r11
0x00000200001cb56d : mov qword ptr [rsp + 0x38], rdx ; call r9
0x00000200006ca766 : mov qword ptr [rsp + 0x38], rdx ; jmp 0x200006ca735
0x00000200006dc285 : mov qword ptr [rsp + 0x40], rsi ; call r10
0x00000200006b72fb : mov qword ptr [rsp + 0x50], r8 ; inc edx ; jmp 0x200006b72d6
0x000002000043a4d5 : mov qword ptr [rsp + 0x50], rdx ; jmp 0x2000043a4a4
0x0000020000680b53 : mov qword ptr [rsp + 0x50], rsi ; inc edx ; jmp 0x20000680b3f
0x00000200004b79ce : mov qword ptr [rsp + 0x58], rdi ; call 0x200004b75d9
0x00000200004dfad8 : mov qword ptr [rsp + 0x60], rax ; jmp 0x200004dfaa7
0x00000200004c6fbd : mov qword ptr [rsp + 0x60], rcx ; call 0x200000e7218
0x000002000062c7d4 : mov qword ptr [rsp + 0x68], rbx ; call 0x2000024d008
0x000002000014626d : mov qword ptr [rsp + 0x70], rax ; call r11
0x00000200004bb547 : mov qword ptr [rsp + 0x70], rbp ; call 0x200000e7218
0x00000200005ea059 : mov qword ptr ss:[r14 + 8], r12 ; call 0x2000007f5c5
0x0000020000022275 : mov r10, qword ptr [r10 + rax*8] ; call r10
0x0000020000512c92 : mov r10, qword ptr [rip - 0x1699e1] ; call r10
0x0000020000626b5e : mov r10, qword ptr [rip - 0x27d8ad] ; call r10
0x000002000062938a : mov r10, qword ptr [rip - 0x2800d9] ; call r10
0x0000020000629c7e : mov r10, qword ptr [rip - 0x2809cd] ; call r10
0x000002000042ec87 : mov r10, qword ptr [rip - 0x859d6] ; call r10
0x000002000043dac7 : mov r10, qword ptr [rip - 0x94816] ; call r10
0x000002000046e6d9 : mov r10, qword ptr [rip - 0xc5428] ; call r10
0x00000200007af525 : mov r10b, 1 ; add byte ptr [rsi - 1], ah ; ret
0x0000020000420369 : mov r10b, 1 ; jmp 0x20000420334
0x00000200006d6ab4 : mov r10d, 0xc0000225 ; mov eax, r10d ; ret
0x0000020000027990 : mov r10d, dword ptr [r11 + 0x6b8] ; inc r10d ; jmp 0x200000279cd
0x00000200006807c5 : mov r10d, eax ; mov eax, r10d ; jmp 0x200006807d7
0x000002000046d797 : mov r10d, r11d ; call 0x2000009a736
0x00000200001573ea : mov r11, qword ptr [rbp - 0x68] ; add rsp, 0x68 ; ret
0x00000200001fcd9b : mov r11b, 0x89 ; add dword ptr [rax - 0x75], ecx ; ret
0x000002000069c69a : mov r11b, r14b ; movq qword ptr [rbp - 0x68], mm0 ; call 0x20000148939
0x00000200005b2fde : mov r11d, 0x470fc23b ; ret 0xd233
0x000002000046f658 : mov r11d, 0x89f38b4c ; ret
0x0000020000619c9c : mov r11d, 0x89ff3345 ; ret
0x0000020000463f26 : mov r11d, eax ; call 0x20000093ab6
0x000002000055fbb1 : mov r12, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x000002000079b7c7 : mov r12, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x00000200004410b6 : mov r12, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x00000200003ccd9d : mov r12, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000628e21 : mov r12, r9 ; call 0x2000024da46
0x00000200003eb5f6 : mov r12b, 0xf7 ; ret
0x00000200005e9ea4 : mov r12b, 1 ; call 0x20000217a26
0x000002000003ecdc : mov r12b, dl ; mov r14, rcx ; call 0x2000044af4c
0x00000200005e9f3d : mov r12b, r15b ; call 0x20000217a26
0x000002000051585e : mov r12d, dword ptr [rax + 0x1e4] ; call rdi
0x0000020000620e45 : mov r12d, eax ; call 0x2000024da46
0x00000200007a8a8a : mov r12d, r13d ; call 0x200003d241a
0x000002000043d3ee : mov r12d, r14d ; call 0x2000005f906
0x0000020000152ea1 : mov r13, rax ; mov r14, rax ; mov r15, rax ; jmp rsi
0x00000200003e7dc7 : mov r13, rdx ; call 0x20000008822
0x00000200005ebb3f : mov r13b, 0xf1 ; inc dword ptr [rcx + 2] ; ret
0x00000200007a74e4 : mov r13d, ebx ; jmp 0x200007a74ba
0x00000200003d0df7 : mov r14, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x00000200004bcf8b : mov r14, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000115fe5 : mov r14, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x00000200003caf16 : mov r14, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x000002000000fede : mov r14, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x00000200005dd61e : mov r14, qword ptr [rax + rcx*8] ; jmp 0x200004d990c
0x0000020000106ab1 : mov r14, qword ptr [rbp + 0x58] ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x0000020000420eb1 : mov r14, qword ptr [rsp + 0x20] ; ret
0x000002000003713f : mov r14, rax ; jmp 0x2000003710b
0x0000020000152ea4 : mov r14, rax ; mov r15, rax ; jmp rsi
0x00000200001095f3 : mov r14, rbp ; jmp 0x200001095bf
0x000002000003ecdf : mov r14, rcx ; call 0x2000044af49
0x0000020000441e5a : mov r14, rdx ; mov rsi, rcx ; call 0x2000006d289
0x00000200005e29c8 : mov r14b, 1 ; jmp 0x200004eec39
0x0000020000401161 : mov r14b, 1 ; lea r8d, dword ptr [r9 - 4] ; call rsi
0x00000200002002e6 : mov r14d, 0x79890802 ; ret
0x000002000005e079 : mov r14d, 1 ; jmp 0x2000005e04a
0x00000200001cd655 : mov r14d, ebx ; call 0x20000139879
0x000002000052c9a8 : mov r14d, ebx ; call 0x20000157546
0x00000200004338ec : mov r14d, ecx ; mov rcx, rdi ; call 0x2000002fb44
0x0000020000642b04 : mov r14d, edi ; jmp 0x20000642ad0
0x00000200001433b3 : mov r14d, r10d ; mov r8d, edx ; jmp 0x200001433dd
0x0000020000522c33 : mov r15, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000409320 : mov r15, qword ptr [rsp + 0x30] ; pop r14 ; pop rsi ; ret
0x00000200001196fa : mov r15, qword ptr [rsp] ; add rsp, 0x10 ; pop rbp ; ret
0x0000020000152ea7 : mov r15, rax ; jmp rsi
0x00000200007076b4 : mov r15, rax ; mov r8d, esi ; call rbx
0x00000200000fd446 : mov r15, rcx ; call 0x200000e9731
0x000002000042407d : mov r15b, 0x17 ; add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200006afaa5 : mov r15b, 0x89 ; int1 ; sbb byte ptr [rax - 0x75], cl ; ret
0x000002000051da63 : mov r15b, 0x8b ; clc ; call 0x20000148077
0x00000200003e78b7 : mov r15b, 0xe8 ; jb 0x200003e78c4 ; ret 0x85ff
0x000002000058f747 : mov r15b, 0xe8 ; ret 0x759
0x00000200001dc0bd : mov r15b, 0xff ; ret
0x00000200001433b0 : mov r15b, 1 ; mov r14d, r10d ; mov r8d, edx ; jmp 0x200001433e0
0x00000200006a3624 : mov r15b, r13b ; call 0x2000005f905
0x000002000068d22b : mov r15d, 0x19ba ; add byte ptr [rsi + 0x3b], ah ; ret 0x877
0x00000200003f3ba5 : mov r15d, 0x8b068941 ; ret
0x0000020000457104 : mov r15d, 1 ; call 0x20000543350
0x0000020000521796 : mov r15d, edx ; call 0x2000024da45
0x000002000048303a : mov r8, qword ptr [r14 + 0x60] ; mov dl, 1 ; mov rcx, r15 ; call rsi
0x00000200001dbeb5 : mov r8, qword ptr [r8 + 0x10] ; mov rcx, qword ptr [rbx] ; call rax
0x000002000022bea8 : mov r8, qword ptr [rbx + 0x38] ; call rax
0x000002000014636c : mov r8, qword ptr [rcx + 0x28] ; mov rdx, qword ptr [rcx + 0x20] ; call rax
0x00000200000579a5 : mov r8, qword ptr [rdx + 0x10] ; mov rdx, qword ptr [rdx + 8] ; call qword ptr [rbx]
0x00000200001bab5a : mov r8, qword ptr [rip + 0x1ee92f] ; call r8
0x0000020000077825 : mov r8, qword ptr [rip + 0x331c64] ; call r8
0x000002000006d26b : mov r8, qword ptr [rsp + 0x38] ; call rax
0x0000020000071681 : mov r8, qword ptr [rsp + 0x58] ; call rax
0x000002000006fa41 : mov r8, qword ptr [rsp + 0x68] ; call rax
0x000002000002e51c : mov r8, r10 ; jmp 0x2000002e4e5
0x0000020000037137 : mov r8, r10 ; jmp 0x200000370c9
0x00000200001e7c23 : mov r8, r10 ; jmp 0x200001e7c79
0x0000020000448a46 : mov r8, r10 ; mov qword ptr [rsp + 0x20], rax ; call r11
0x00000200001e5ae0 : mov r8, r10 ; mov rdx, r11 ; mov rcx, rsi ; call qword ptr [rsi]
0x00000200003f6039 : mov r8, r11 ; mov rdx, rbx ; mov rcx, r10 ; call rax
0x00000200004c6df7 : mov r8, r12 ; call r10
0x0000020000009b0b : mov r8, r12 ; mov rcx, rdi ; call r14
0x00000200001e6324 : mov r8, r12 ; mov rdx, rax ; mov rcx, rbx ; call qword ptr [rbx]
0x00000200004d7164 : mov r8, r12 ; mov rdx, rsi ; call rax
0x000002000061f556 : mov r8, r13 ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x000002000008b9e0 : mov r8, r13 ; mov rcx, r15 ; call rax
0x000002000002ade7 : mov r8, r14 ; call rax
0x00000200000239d1 : mov r8, r14 ; mov rcx, rbx ; call rax
0x00000200004cfc98 : mov r8, r14 ; mov rdx, r12 ; mov rcx, r15 ; call rax
0x00000200001664df : mov r8, r14 ; mov rdx, rax ; call r9
0x0000020000702588 : mov r8, r14 ; mov rdx, rbp ; mov rcx, r13 ; call rbx
0x0000020000696ef2 : mov r8, r15 ; lea rdx, qword ptr [rbp - 0x18] ; call 0x200006d3145
0x00000200001d6dba : mov r8, r15 ; mov edx, 0x58 ; call r12
0x0000020000707810 : mov r8, r15 ; mov rdx, rbp ; mov rcx, r12 ; call rax
0x000002000071b762 : mov r8, rax ; add rsp, 0x38 ; jmp r9
0x00000200005c194e : mov r8, rax ; call 0x2000065cc91
0x0000020000191936 : mov r8, rax ; cmp rcx, rax ; jne 0x2000019192c ; ret
0x000002000001f37c : mov r8, rax ; jne 0x2000001f3bb ; add rsp, 0x28 ; ret
0x000002000004b934 : mov r8, rax ; jne 0x2000004b958 ; ret
0x000002000007ce3e : mov r8, rax ; jne 0x2000007ce88 ; add rsp, 0x28 ; ret
0x000002000004bca2 : mov r8, rax ; jne 0x2000017ede1 ; ret
0x000002000042b752 : mov r8, rax ; mov rdx, rax ; call 0x200004e7a5c
0x00000200006ae941 : mov r8, rbp ; mov dword ptr [rsp + 0x20], r15d ; call rdi
0x0000020000535420 : mov r8, rbp ; mov rdx, r12 ; call 0x20000157549
0x0000020000560180 : mov r8, rbp ; mov rdx, rsi ; call rax
0x00000200000ebc76 : mov r8, rbx ; call 0x20000037ebd
0x00000200004cf92b : mov r8, rbx ; mov rcx, r13 ; call rax
0x0000020000513e3f : mov r8, rbx ; mov rcx, rdi ; call 0x2000013bb7d
0x0000020000055d08 : mov r8, rbx ; mov rcx, rsi ; call r14
0x00000200004d6df6 : mov r8, rbx ; mov rdx, r14 ; call rax
0x000002000070f976 : mov r8, rbx ; mov rdx, rbp ; mov rcx, r14 ; call rax
0x000002000007b696 : mov r8, rcx ; sub r8, r11 ; add r8, r10 ; jmp 0x2000007b66d
0x00000200001fecfa : mov r8, rdi ; add rcx, 0x18 ; call rax
0x000002000070f462 : mov r8, rdi ; mov edx, esi ; mov rcx, rbx ; call rax
0x000002000020197d : mov r8, rdx ; lea edx, dword ptr [rbx + 0x1e] ; call r9
0x000002000044b59c : mov r8, rdx ; mov rax, r8 ; ret
0x0000020000006cc1 : mov r8, rdx ; mov rcx, rbp ; call r14
0x000002000043d05e : mov r8, rdx ; mov rdx, r10 ; jmp r11
0x0000020000707626 : mov r8, rsi ; mov edx, ebp ; mov rcx, r15 ; call r14
0x000002000070f4ed : mov r8, rsi ; mov edx, ebp ; mov rcx, rbx ; call rax
0x0000020000088556 : mov r8, rsi ; mov rdx, r12 ; mov rcx, r13 ; call rax
0x00000200003eb5f3 : mov r8b, 0x89 ; mov r12b, 0xf7 ; ret
0x000002000000eb96 : mov r8b, 0x8b ; ret 0xd8f7
0x000002000060bb67 : mov r8b, 0xe8 ; ret 0xb3c6
0x00000200004b6703 : mov r8b, 0xe8 ; ret 0xbce0
0x00000200001c0ba7 : mov r8b, 0xe8 ; stosb byte ptr [rdi], al ; ret 0xffff
0x00000200004b66ea : mov r8b, 0xf6 ; ret 0xf07
0x00000200001b46a3 : mov r8b, 1 ; mov al, r8b ; ret
0x00000200004672de : mov r8b, 1 ; mov rcx, r15 ; call 0x200004035d8
0x000002000019fe4f : mov r8b, 1 ; movzx edx, bpl ; call rax
0x0000020000127ea2 : mov r8b, 3 ; ret 0xc803
0x00000200001cba33 : mov r8b, al ; mov al, r8b ; ret
0x00000200005aaf2d : mov r8b, bl ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000020b1ee : mov r8b, cl ; mov al, r8b ; ret
0x0000020000798f90 : mov r8b, dil ; add rdx, rbp ; call 0x20000475298
0x00000200001c6056 : mov r8b, dl ; jmp 0x200001c60a4
0x000002000050d831 : mov r8b, r11b ; call r12
0x00000200007d47d1 : mov r8b, r13b ; mov eax, fs ; ret 0x8bff
0x0000020000531f06 : mov r8b, r13b ; ret
0x000002000070560e : mov r8d, 0x10 ; call 0x200001518a8
0x00000200004642fa : mov r8d, 0x10000 ; mov eax, r8d ; ret
0x000002000017633a : mov r8d, 0x128 ; jmp 0x20000112631
0x00000200005303de : mov r8d, 0x150 ; call 0x20000157889
0x000002000065179c : mov r8d, 0x20207050 ; call 0x2000024da48
0x00000200007a5b62 : mov r8d, 0x2474894c ; and al, ch ; ret 0x9a26
0x000002000062d349 : mov r8d, 0x44536f49 ; call 0x2000024da49
0x0000020000661789 : mov r8d, 0x45646156 ; call 0x2000024da48
0x0000020000620aed : mov r8d, 0x4d574454 ; call 0x2000024da49
0x000002000061fc91 : mov r8d, 0x57676244 ; call 0x2000024da49
0x0000020000451779 : mov r8d, 0x59706e50 ; call 0x2000024da48
0x0000020000711744 : mov r8d, 0x61436656 ; call 0x2000024da48
0x0000020000626eab : mov r8d, 0x65546f49 ; call 0x2000024da49
0x0000020000623d70 : mov r8d, 0x68745346 ; call 0x2000024da49
0x0000020000627b3b : mov r8d, 0x6d4e6f49 ; call 0x2000024da49
0x000002000043fee2 : mov r8d, 0x70617350 ; call 0x2000006c739
0x000002000062a0af : mov r8d, 0x706d644c ; call 0x2000024da49
0x0000020000628f99 : mov r8d, 0x72546f49 ; call 0x2000024da49
0x00000200000f1827 : mov r8d, 0x7756694d ; call 0x2000024da48
0x00000200001de205 : mov r8d, 0x8b48fff0 ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000062b452 : mov r8d, 0xc000000d ; mov eax, r8d ; ret
0x00000200001d27b2 : mov r8d, 0xc000000e ; mov eax, r8d ; ret
0x0000020000235096 : mov r8d, 0xc0000060 ; mov eax, r8d ; ret
0x0000020000695ac1 : mov r8d, 0xd6158d48 ; ret 0xffed
0x0000020000537215 : mov r8d, 0xd8 ; call 0x20000157889
0x0000020000530cfd : mov r8d, 0xfe418d45 ; call qword ptr [rbx]
0x00000200006dd15a : mov r8d, 0xfe418d45 ; call rbx
0x00000200007d6479 : mov r8d, 0xff000000 ; or edx, 0xffffffff ; call qword ptr [rax]
0x0000020000453532 : mov r8d, 0xff418d45 ; call rbx
0x00000200001c23a1 : mov r8d, 1 ; mov al, r8b ; ret
0x00000200000a064a : mov r8d, 1 ; mov eax, r8d ; ret
0x000002000058cd02 : mov r8d, 6 ; call rax
0x00000200005f49a9 : mov r8d, dword ptr [rbx] ; mov rcx, rbp ; call rax
0x000002000040118e : mov r8d, eax ; call rsi
0x000002000040b2f1 : mov r8d, eax ; mov dword ptr [r14 + 0x10], eax ; call 0x20000157549
0x00000200003cc1b2 : mov r8d, eax ; mov eax, r8d ; ret
0x00000200001cf93a : mov r8d, ebp ; call 0x2000013bb79
0x000002000043716b : mov r8d, ebx ; call 0x2000005f386
0x000002000043716a : mov r8d, ebx ; call 0x2000005f387
0x0000020000437169 : mov r8d, ebx ; call 0x2000005f388
0x0000020000529c49 : mov r8d, ebx ; call 0x20000157546
0x00000200006145b1 : mov r8d, ebx ; call 0x200006149e5
0x0000020000606889 : mov r8d, ebx ; call rax
0x00000200005ad2b4 : mov r8d, ebx ; mov cl, 0x15 ; call r10
0x00000200005ad33b : mov r8d, ebx ; mov cl, 0x15 ; call rax
0x000002000058f8d6 : mov r8d, ebx ; mov cl, 0xc ; call rax
0x00000200005f80c4 : mov r8d, ebx ; mov rdx, r14 ; call rax
0x0000020000551158 : mov r8d, ebx ; mov rdx, rbp ; call rax
0x000002000052dcf5 : mov r8d, ebx ; xor edx, edx ; call 0x20000157888
0x00000200001c2476 : mov r8d, ecx ; jne 0x200001c2487 ; mov eax, r8d ; ret
0x000002000052e871 : mov r8d, edi ; call 0x200001518a6
0x0000020000708b14 : mov r8d, edi ; call rax
0x000002000063371a : mov r8d, edi ; mov rdx, r12 ; mov rcx, r14 ; call rax
0x00000200006dbec7 : mov r8d, edi ; mov rdx, rbp ; call rax
0x00000200006dd050 : mov r8d, edi ; mov rdx, rsi ; call rax
0x00000200001433b6 : mov r8d, edx ; jmp 0x200001433da
0x00000200001433b5 : mov r8d, edx ; jmp 0x200001433db
0x0000020000210958 : mov r8d, edx ; jmp 0x20000210962
0x0000020000167303 : mov r8d, edx ; xor edx, edx ; call r10
0x000002000051c1c9 : mov r8d, esi ; call 0x20000148176
0x00000200007076b7 : mov r8d, esi ; call rbx
0x000002000062139c : mov r8d, esi ; lea ecx, dword ptr [rdx - 0x37] ; call 0x2000024da49
0x00000200006dcfe3 : mov r8d, esi ; mov rdx, rbp ; call rax
0x000002000042d7b9 : mov r8d, esi ; xor edx, edx ; call 0x200004c99d7
0x000002000059b9ff : mov r8d, r10d ; call rax
0x00000200001f548a : mov r8d, r10d ; jmp 0x200001f54d4
0x0000020000485309 : mov r8d, r10d ; mov rdx, rsi ; mov ecx, ebx ; call rax
0x00000200003fbad1 : mov r8d, r12d ; mov rdx, r14 ; mov rcx, r15 ; call rax
0x0000020000436f70 : mov r8d, r13d ; sub r8d, edx ; call 0x2000005f389
0x00000200006c5d28 : mov r8d, r14d ; mov rdx, r15 ; movzx ecx, bx ; call rax
0x00000200003f27b7 : mov r8d, r14d ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x00000200006ab600 : mov r8d, r14d ; xor edx, edx ; call 0x20000157887
0x00000200006dc8fd : mov r8d, r15d ; mov rdx, r14 ; mov rcx, rsi ; call rax
0x0000020000532258 : mov r8d, r15d ; xor edx, edx ; call 0x20000157888
0x0000020000532257 : mov r8d, r15d ; xor edx, edx ; call 0x20000157889
0x00000200006dd0b0 : mov r8d, r9d ; mov qword ptr [r11 - 0x38], rax ; call rdi
0x00000200001c1ebc : mov r9, qword ptr [rip + 0x13798d] ; call r9
0x00000200001c1c9c : mov r9, qword ptr [rip + 0x137bad] ; call r9
0x00000200001c1ad1 : mov r9, qword ptr [rip + 0x137d78] ; call r9
0x00000200001c1353 : mov r9, qword ptr [rip + 0x1384f6] ; call r9
0x00000200001c088b : mov r9, qword ptr [rip + 0x138fbe] ; call r9
0x00000200001c04f3 : mov r9, qword ptr [rip + 0x139356] ; call r9
0x00000200001c0137 : mov r9, qword ptr [rip + 0x139712] ; call r9
0x00000200001bebf3 : mov r9, qword ptr [rip + 0x13ac56] ; call r9
0x00000200001be1e9 : mov r9, qword ptr [rip + 0x13b660] ; call r9
0x00000200001bdf11 : mov r9, qword ptr [rip + 0x13b938] ; call r9
0x00000200001bd912 : mov r9, qword ptr [rip + 0x13bf37] ; call r9
0x00000200001bd7d9 : mov r9, qword ptr [rip + 0x13c070] ; call r9
0x00000200001bd5dd : mov r9, qword ptr [rip + 0x13c26c] ; call r9
0x00000200001bcda9 : mov r9, qword ptr [rip + 0x13caa0] ; call r9
0x00000200006c09df : mov r9, r11 ; mov dword ptr [rsp + 0x20], esi ; call r10
0x000002000008b9dd : mov r9, r14 ; mov r8, r13 ; mov rcx, r15 ; call rax
0x00000200000c5a8e : mov r9, rax ; mov rax, r9 ; ret
0x000002000070f8b3 : mov r9, rbx ; call rax
0x00000200007d2afe : mov r9, rbx ; lea ecx, dword ptr [rdx + 0x5a] ; call 0x2000000ed38
0x00000200005e2ade : mov r9, rbx ; lea ecx, dword ptr [rdx + 0x7e] ; call 0x2000000ed38
0x00000200002267c3 : mov r9, rcx ; jne 0x200002267b0 ; xor eax, eax ; ret
0x000002000067bdae : mov r9b, 1 ; mov dword ptr [rcx + 4], eax ; mov al, r9b ; ret
0x000002000021cb48 : mov r9d, 0xc000000d ; mov eax, r9d ; ret
0x0000020000703bdd : mov r9d, 1 ; mov eax, r9d ; ret
0x00000200006dd267 : mov r9d, 2 ; call rax
0x00000200006dd294 : mov r9d, 3 ; call rax
0x000002000011000b : mov r9d, dword ptr [r13 - 0x75] ; ret
0x000002000040118b : mov r9d, eax ; mov r8d, eax ; call rsi
0x000002000003713c : mov r9d, ecx ; mov r14, rax ; jmp 0x2000003710e
0x000002000049b9d8 : mov r9d, edx ; add rax, qword ptr [rcx + r9*8] ; inc edx ; jmp 0x2000049b9da
0x0000020000407ac6 : mov r9d, edx ; add rax, r9 ; mov dword ptr [r8], edx ; ret
0x0000020000439277 : mov r9d, edx ; je 0x2000043928a ; add rsp, 0x28 ; ret
0x000002000022e9e8 : mov r9d, esi ; mov edx, r15d ; call rax
0x0000020000210955 : mov r9d, r11d ; mov r8d, edx ; jmp 0x20000210965
0x00000200001e6380 : mov r9d, r15d ; call qword ptr [rbx]
0x00000200004c6df4 : mov r9d, r8d ; mov r8, r12 ; call r10
0x0000020000074697 : mov rax, -2 ; ret
0x00000200000979f2 : mov rax, cr0 ; add rsp, 0x28 ; ret
0x0000020000711c13 : mov rax, cr0 ; cmp al, 1 ; ja 0x20000711c50 ; call 0x2000020dec5
0x000002000023a07d : mov rax, cr0 ; cmp al, 2 ; jae 0x2000023a090 ; xor eax, eax ; ret
0x0000020000116319 : mov rax, cr0 ; ret
0x000002000003fc08 : mov rax, cr3 ; mov cr3, rax ; ret
0x00000200000979f1 : mov rax, cr8 ; add rsp, 0x28 ; ret
0x0000020000116318 : mov rax, cr8 ; ret
0x000002000001be2d : mov rax, qword ptr [0x188] ; ret
0x000002000010098f : mov rax, qword ptr [r10] ; test rax, rax ; jne 0x2000010095e ; jmp 0x20000100965
0x000002000079d82c : mov rax, qword ptr [r13 + rcx*8 + 0x18] ; xor ecx, ecx ; call rax
0x00000200004dfad5 : mov rax, qword ptr [r14] ; mov qword ptr [rsp + 0x60], rax ; jmp 0x200004dfaaa
0x00000200005d3ea0 : mov rax, qword ptr [r8 + 0x30] ; ret
0x000002000020b937 : mov rax, qword ptr [r8 + 0x430] ; ret
0x00000200001d1eed : mov rax, qword ptr [r8 + 0x60] ; mov qword ptr [r9 + 0x60], rax ; ret
0x0000020000074296 : mov rax, qword ptr [r8 + rcx + 0x2f] ; ret
0x00000200001fc7d0 : mov rax, qword ptr [r8 + rcx + 0x50] ; mov qword ptr [r9], rax ; ret
0x0000020000055c81 : mov rax, qword ptr [r8] ; lock dec dword ptr [rax + 0xc] ; ret
0x000002000020e7ee : mov rax, qword ptr [r8] ; test rax, r9 ; sete al ; ret
0x0000020000547ac4 : mov rax, qword ptr [r9 + 0x10] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200006ca556 : mov rax, qword ptr [r9 + 0x18] ; add rax, rdx ; ret
0x00000200001927b8 : mov rax, qword ptr [rax + 0x10] ; ret
0x00000200004545b8 : mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x200004545bc ; ret
0x0000020000052c2a : mov rax, qword ptr [rax + 0x1180] ; ret
0x0000020000069e36 : mov rax, qword ptr [rax + 0x1408] ; ret
0x0000020000461272 : mov rax, qword ptr [rax + 0x1410] ; ret
0x0000020000052c66 : mov rax, qword ptr [rax + 0x14c0] ; ret
0x0000020000052882 : mov rax, qword ptr [rax + 0x1500] ; ret
0x0000020000052c52 : mov rax, qword ptr [rax + 0x17a8] ; ret
0x0000020000052c3e : mov rax, qword ptr [rax + 0x1828] ; ret
0x00000200000b801e : mov rax, qword ptr [rax + 0x18] ; add rsp, 0x28 ; ret
0x0000020000041a85 : mov rax, qword ptr [rax + 0x18] ; ret
0x000002000001beda : mov rax, qword ptr [rax + 0x1c8] ; ret
0x0000020000411008 : mov rax, qword ptr [rax + 0x20] ; ret
0x0000020000041e2d : mov rax, qword ptr [rax + 0x220] ; ret
0x000002000024c59c : mov rax, qword ptr [rax + 0x250] ; jmp rax
0x00000200001927b4 : mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 0x10] ; ret
0x000002000009a745 : mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax] ; ret
0x0000020000627a5d : mov rax, qword ptr [rax + 0x28] ; ret
0x000002000020b8f5 : mov rax, qword ptr [rax + 0x30] ; ret
0x00000200001c4618 : mov rax, qword ptr [rax + 0x30] ; test rax, rax ; je 0x200001c462c ; call rax
0x0000020000710f82 : mov rax, qword ptr [rax + 0x38] ; add rsp, 0x28 ; ret
0x0000020000157ae8 : mov rax, qword ptr [rax + 0x38] ; ret
0x000002000001e230 : mov rax, qword ptr [rax + 0x3a8] ; ret
0x00000200001dffbc : mov rax, qword ptr [rax + 0x480] ; ret
0x0000020000448225 : mov rax, qword ptr [rax + 0x48] ; mov rax, qword ptr [rax + 0x20] ; ret
0x0000020000084758 : mov rax, qword ptr [rax + 0x48] ; ret
0x00000200001c46f4 : mov rax, qword ptr [rax + 0x48] ; test rax, rax ; je 0x200001c4708 ; call rax
0x000002000066483c : mov rax, qword ptr [rax + 0x50] ; ret
0x00000200001b381b : mov rax, qword ptr [rax + 0x60] ; and rax, 0xfffffffffffffff0 ; ret
0x00000200001c45dc : mov rax, qword ptr [rax + 0x60] ; test rax, rax ; je 0x200001c45f0 ; call rax
0x0000020000044649 : mov rax, qword ptr [rax + 0x630] ; ret
0x0000020000028b19 : mov rax, qword ptr [rax + 0x638] ; ret
0x000002000001e119 : mov rax, qword ptr [rax + 0x678] ; ret
0x0000020000447cbc : mov rax, qword ptr [rax + 0x688] ; ret
0x000002000012d6fc : mov rax, qword ptr [rax + 0x70] ; test rax, rax ; jne 0x2000012d70f ; ret
0x00000200000f7499 : mov rax, qword ptr [rax + 0x748] ; ret
0x00000200004725f6 : mov rax, qword ptr [rax + 0x7c0] ; ret
0x000002000001be69 : mov rax, qword ptr [rax + 0xb8] ; ret
0x00000200007d17b7 : mov rax, qword ptr [rax + 0xd8] ; ret
0x00000200007a7876 : mov rax, qword ptr [rax + 8] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d35c4 : mov rax, qword ptr [rax + 8] ; call rax
0x000002000000d767 : mov rax, qword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x000002000001c3f8 : mov rax, qword ptr [rax + 8] ; ret
0x000002000006f405 : mov rax, qword ptr [rax + 8] ; test rax, rax ; je 0x2000006f418 ; ret
0x0000020000189642 : mov rax, qword ptr [rax + r9 + 0x30] ; ret
0x000002000055d042 : mov rax, qword ptr [rax + rcx*8] ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x00000200006bb614 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; call rax
0x000002000009d9eb : mov rax, qword ptr [rax + rcx*8] ; ret
0x00000200000de684 : mov rax, qword ptr [rax + rdx*8] ; ret
0x0000020000056481 : mov rax, qword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200000b5822 : mov rax, qword ptr [rax] ; mov qword ptr [rdx + 0x10], rax ; ret
0x000002000000b3f9 : mov rax, qword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x0000020000664839 : mov rax, qword ptr [rax] ; mov rax, qword ptr [rax + 0x50] ; ret
0x000002000002555d : mov rax, qword ptr [rax] ; ret
0x00000200001c4694 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x200001c46a6 ; call rax
0x00000200006dcb20 : mov rax, qword ptr [rbp + 0x50] ; jmp 0x200006dcaee
0x0000020000157155 : mov rax, qword ptr [rbp - 0x78] ; add rsp, 0x28 ; ret
0x00000200004e2ae5 : mov rax, qword ptr [rbx + 0x20] ; test rax, rax ; je 0x200004e2afd ; call rax
0x00000200006842d1 : mov rax, qword ptr [rbx + 0x30] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003145f : mov rax, qword ptr [rbx + 0x50] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000070c903 : mov rax, qword ptr [rbx + 0x58] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002ade3 : mov rax, qword ptr [rbx + 8] ; mov r8, r14 ; call rax
0x00000200004445c7 : mov rax, qword ptr [rbx + rax*8] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001c870f : mov rax, qword ptr [rbx] ; not rax ; or rax, rdx ; jmp 0x200001c8731
0x0000020000038294 : mov rax, qword ptr [rcx + 0x10] ; ret
0x00000200005a2ccb : mov rax, qword ptr [rcx + 0x18] ; mov qword ptr [rax + rdx*8], r8 ; ret
0x00000200004482f4 : mov rax, qword ptr [rcx + 0x18] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200005c7ebf : mov rax, qword ptr [rcx + 0x18] ; mov rax, qword ptr [rax + rdx*8] ; ret
0x00000200000bd643 : mov rax, qword ptr [rcx + 0x18] ; ret
0x000002000001fc80 : mov rax, qword ptr [rcx + 0x1c8] ; ret
0x000002000040f661 : mov rax, qword ptr [rcx + 0x20] ; and qword ptr [rcx + 0x20], 0 ; ret
0x0000020000569884 : mov rax, qword ptr [rcx + 0x20] ; ret
0x0000020000032c50 : mov rax, qword ptr [rcx + 0x220] ; ret
0x00000200001d68f9 : mov rax, qword ptr [rcx + 0x28] ; mov qword ptr [rdx], rax ; ret
0x0000020000043965 : mov rax, qword ptr [rcx + 0x28] ; ret
0x000002000049e838 : mov rax, qword ptr [rcx + 0x28] ; shr rax, 0xc ; ret
0x00000200004bd06a : mov rax, qword ptr [rcx + 0x28] ; test rax, rax ; je 0x200004bd085 ; call rax
0x00000200000fd114 : mov rax, qword ptr [rcx + 0x2e8] ; ret
0x000002000003095c : mov rax, qword ptr [rcx + 0x308] ; ret
0x000002000040f681 : mov rax, qword ptr [rcx + 0x30] ; and qword ptr [rcx + 0x30], 0 ; ret
0x0000020000032cb8 : mov rax, qword ptr [rcx + 0x30] ; dec edx ; mov dword ptr [rax + 4], edx ; ret
0x0000020000157ae4 : mov rax, qword ptr [rcx + 0x30] ; mov rax, qword ptr [rax + 0x38] ; ret
0x000002000049c428 : mov rax, qword ptr [rcx + 0x30] ; test rax, rax ; jne 0x2000049c43b ; ret
0x000002000002f0f0 : mov rax, qword ptr [rcx + 0x3a8] ; ret
0x0000020000034af4 : mov rax, qword ptr [rcx + 0x3b0] ; ret
0x0000020000056490 : mov rax, qword ptr [rcx + 0x3c0] ; ret
0x0000020000037c88 : mov rax, qword ptr [rcx + 0x3d8] ; ret
0x000002000003fd44 : mov rax, qword ptr [rcx + 0x3e0] ; ret
0x0000020000032c58 : mov rax, qword ptr [rcx + 0x3f8] ; ret
0x000002000003cdb4 : mov rax, qword ptr [rcx + 0x420] ; ret
0x0000020000043410 : mov rax, qword ptr [rcx + 0x450] ; ret
0x00000200000bdbd0 : mov rax, qword ptr [rcx + 0x458] ; ret
0x0000020000453590 : mov rax, qword ptr [rcx + 0x460] ; ret
0x00000200006048b1 : mov rax, qword ptr [rcx + 0x48] ; mov eax, dword ptr [rax + 8] ; ret
0x0000020000009545 : mov rax, qword ptr [rcx + 0x58] ; and rax, 0xfffffffffffffff9 ; ret
0x000002000020b958 : mov rax, qword ptr [rcx + 0x5e0] ; ret
0x000002000001e1a3 : mov rax, qword ptr [rcx + 0x60] ; add rsp, 0x28 ; ret
0x00000200001bba9e : mov rax, qword ptr [rcx + 0x60] ; and qword ptr [rcx + 0x60], 0 ; ret
0x0000020000031d2c : mov rax, qword ptr [rcx + 0x630] ; ret
0x000002000002c808 : mov rax, qword ptr [rcx + 0x638] ; ret
0x0000020000102174 : mov rax, qword ptr [rcx + 0x680] ; ret
0x0000020000055e4d : mov rax, qword ptr [rcx + 0x688] ; ret
0x0000020000569900 : mov rax, qword ptr [rcx + 0x708] ; ret
0x0000020000421357 : mov rax, qword ptr [rcx + 0x70] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200001d80c9 : mov rax, qword ptr [rcx + 0x788] ; ret
0x00000200001d80d1 : mov rax, qword ptr [rcx + 0x790] ; ret
0x000002000042d6fc : mov rax, qword ptr [rcx + 0x7a8] ; ret
0x000002000009060e : mov rax, qword ptr [rcx + 0x7b8] ; ret
0x0000020000053998 : mov rax, qword ptr [rcx + 0xf0] ; ret
0x0000020000151230 : mov rax, qword ptr [rcx + 8] ; and al, 0xf0 ; ret
0x0000020000037158 : mov rax, qword ptr [rcx + 8] ; btr dword ptr [rax], edx ; ret
0x000002000020e894 : mov rax, qword ptr [rcx + 8] ; btr qword ptr [rax], rdx ; ret
0x00000200000366dc : mov rax, qword ptr [rcx + 8] ; bts dword ptr [rax], edx ; ret
0x000002000020fc24 : mov rax, qword ptr [rcx + 8] ; bts qword ptr [rax], rdx ; ret
0x000002000006f429 : mov rax, qword ptr [rcx + 8] ; ret
0x00000200000527f4 : mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000043d49 : mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200000c5b45 : mov rax, qword ptr [rcx + rbx*8] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006715cd : mov rax, qword ptr [rcx] ; add rax, 8 ; ret
0x000002000007c763 : mov rax, qword ptr [rcx] ; and rax, 0xfffffffffffffffc ; ret
0x000002000006d04c : mov rax, qword ptr [rcx] ; cmp byte ptr [rax + 0x18], 0 ; je 0x2000006d05f ; ret
0x0000020000010164 : mov rax, qword ptr [rcx] ; inc rax ; mov qword ptr [rcx], rax ; ret
0x000002000046cca5 : mov rax, qword ptr [rcx] ; mov qword ptr [rcx], rax ; jmp 0x2000046ccbb
0x0000020000411005 : mov rax, qword ptr [rcx] ; mov rax, qword ptr [rax + 0x20] ; ret
0x0000020000090536 : mov rax, qword ptr [rcx] ; test al, 1 ; jne 0x20000090545 ; ret
0x0000020000041a7c : mov rax, qword ptr [rcx] ; test rax, rax ; jne 0x20000041a8d ; ret
0x0000020000705f4e : mov rax, qword ptr [rcx] ; test rax, rax ; jne 0x20000705f34 ; ret
0x00000200005389f8 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rcx], rax ; jmp 0x200005389cc
0x00000200001ee347 : mov rax, qword ptr [rdi] ; not rax ; or rax, rdx ; jmp 0x200001ee369
0x00000200006ca502 : mov rax, qword ptr [rdx + 0x18] ; add rax, rcx ; ret
0x000002000070e6eb : mov rax, qword ptr [rdx + 0x18] ; mov qword ptr [rcx], rax ; ret
0x000002000000953d : mov rax, qword ptr [rdx + 0x220] ; ret
0x0000020000707207 : mov rax, qword ptr [rdx + 0x30] ; mov qword ptr [rcx + 8], rax ; ret
0x000002000002a53c : mov rax, qword ptr [rdx + 0x40] ; ret
0x0000020000009552 : mov rax, qword ptr [rdx + 0xb8] ; ret
0x0000020000452f6f : mov rax, qword ptr [rdx + 8] ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000218b9f : mov rax, qword ptr [rdx] ; and rax, 0xfffff000 ; ret
0x00000200005695ef : mov rax, qword ptr [rdx] ; mov qword ptr [rcx], rax ; mov qword ptr [rdx], r8 ; ret
0x0000020000440cc8 : mov rax, qword ptr [rdx] ; mov qword ptr [rcx], rax ; ret
0x0000020000664831 : mov rax, qword ptr [rdx] ; ret
0x000002000011bba0 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x2000011bbb1 ; ret
0x00000200001dc410 : mov rax, qword ptr [rip + 0x116371] ; call qword ptr [rax]
0x00000200001dc3a4 : mov rax, qword ptr [rip + 0x1163dd] ; call qword ptr [rax]
0x00000200001c0592 : mov rax, qword ptr [rip + 0x1392b7] ; call rax
0x00000200001c0267 : mov rax, qword ptr [rip + 0x1395e2] ; call rax
0x00000200001bfc0e : mov rax, qword ptr [rip + 0x139c3b] ; call rax
0x00000200001bf6ce : mov rax, qword ptr [rip + 0x13a17b] ; call rax
0x00000200001bf357 : mov rax, qword ptr [rip + 0x13a4f2] ; call rax
0x00000200001bedc6 : mov rax, qword ptr [rip + 0x13aa83] ; call rax
0x00000200001bed28 : mov rax, qword ptr [rip + 0x13ab21] ; call rax
0x00000200001becaa : mov rax, qword ptr [rip + 0x13ab9f] ; call rax
0x00000200001beb63 : mov rax, qword ptr [rip + 0x13ace6] ; call rax
0x00000200001be9dc : mov rax, qword ptr [rip + 0x13ae6d] ; call rax
0x00000200001be7b4 : mov rax, qword ptr [rip + 0x13b095] ; call rax
0x00000200001be5a6 : mov rax, qword ptr [rip + 0x13b2a3] ; call rax
0x00000200001be4f0 : mov rax, qword ptr [rip + 0x13b359] ; call rax
0x00000200001be3ef : mov rax, qword ptr [rip + 0x13b45a] ; call rax
0x00000200001bd983 : mov rax, qword ptr [rip + 0x13bec6] ; call rax
0x00000200001bc9da : mov rax, qword ptr [rip + 0x13ce6f] ; call rax
0x00000200001bc339 : mov rax, qword ptr [rip + 0x13d510] ; call rax
0x00000200001bc00d : mov rax, qword ptr [rip + 0x13d83c] ; call rax
0x00000200001bbdd9 : mov rax, qword ptr [rip + 0x13da70] ; call rax
0x0000020000171690 : mov rax, qword ptr [rip + 0x1881b9] ; call rax
0x000002000013f0c4 : mov rax, qword ptr [rip + 0x1b1f35] ; ret
0x00000200001d3ab4 : mov rax, qword ptr [rip + 0x1d5add] ; ret
0x00000200001c9abf : mov rax, qword ptr [rip + 0x1df9ca] ; call rax
0x00000200001bad1a : mov rax, qword ptr [rip + 0x1ee76f] ; call rax
0x00000200001baca1 : mov rax, qword ptr [rip + 0x1ee7e8] ; call rax
0x0000020000182a39 : mov rax, qword ptr [rip + 0x226a50] ; call rax
0x000002000017b5b0 : mov rax, qword ptr [rip + 0x22ded9] ; call rax
0x0000020000147d8c : mov rax, qword ptr [rip + 0x260525] ; call rax
0x0000020000157b58 : mov rax, qword ptr [rip + 0x265d79] ; ret
0x0000020000123bc2 : mov rax, qword ptr [rip + 0x2858c7] ; call rax
0x0000020000123abb : mov rax, qword ptr [rip + 0x2859ce] ; call rax
0x00000200001237a7 : mov rax, qword ptr [rip + 0x285ce2] ; call rax
0x0000020000123655 : mov rax, qword ptr [rip + 0x285e34] ; call rax
0x00000200001235ae : mov rax, qword ptr [rip + 0x285edb] ; call rax
0x000002000005ccfc : mov rax, qword ptr [rip + 0x2a33a5] ; ret
0x000002000005ccec : mov rax, qword ptr [rip + 0x2a33c5] ; ret
0x000002000005ccda : mov rax, qword ptr [rip + 0x2a340f] ; ret
0x0000020000052870 : mov rax, qword ptr [rip + 0x2d15e1] ; ret
0x0000020000078929 : mov rax, qword ptr [rip + 0x330b60] ; call rax
0x000002000007885a : mov rax, qword ptr [rip + 0x330c2f] ; call rax
0x0000020000078823 : mov rax, qword ptr [rip + 0x330c66] ; call rax
0x000002000007868b : mov rax, qword ptr [rip + 0x330dfe] ; call rax
0x000002000007863d : mov rax, qword ptr [rip + 0x330e4c] ; call rax
0x0000020000078475 : mov rax, qword ptr [rip + 0x331014] ; call rax
0x00000200000776f4 : mov rax, qword ptr [rip + 0x331d95] ; call rax
0x0000020000077629 : mov rax, qword ptr [rip + 0x331e60] ; call rax
0x000002000005a93e : mov rax, qword ptr [rip + 0x34eb4b] ; call rax
0x00000200000599fe : mov rax, qword ptr [rip + 0x34fa8b] ; call rax
0x0000020000059950 : mov rax, qword ptr [rip + 0x34fb39] ; call rax
0x000002000005989f : mov rax, qword ptr [rip + 0x34fbea] ; call rax
0x00000200000597f0 : mov rax, qword ptr [rip + 0x34fc99] ; call rax
0x00000200000596f8 : mov rax, qword ptr [rip + 0x34fd91] ; call rax
0x00000200000596aa : mov rax, qword ptr [rip + 0x34fddf] ; call rax
0x0000020000044793 : mov rax, qword ptr [rip + 0x364cf6] ; call rax
0x0000020000044736 : mov rax, qword ptr [rip + 0x364d53] ; call rax
0x00000200000379d0 : mov rax, qword ptr [rip + 0x371ab9] ; call rax
0x0000020000037955 : mov rax, qword ptr [rip + 0x371b34] ; call rax
0x000002000002f07b : mov rax, qword ptr [rip + 0x37a40e] ; call rax
0x000002000002ef00 : mov rax, qword ptr [rip + 0x37a589] ; call rax
0x0000020000029ca6 : mov rax, qword ptr [rip + 0x37f7e3] ; call rax
0x0000020000015c68 : mov rax, qword ptr [rip + 0x732629] ; ret
0x0000020000238c2f : mov rax, qword ptr [rip + 0xc0c1a] ; call rax
0x000002000022df8c : mov rax, qword ptr [rip + 0xcb8bd] ; call rax
0x000002000058450c : mov rax, qword ptr [rip - 0x29121b] ; call rax
0x0000020000584524 : mov rax, qword ptr [rip - 0x291243] ; call rax
0x0000020000584538 : mov rax, qword ptr [rip - 0x29125f] ; call rax
0x00000200006b8e21 : mov rax, qword ptr [rip - 0x3c6ab0] ; call rax
0x0000020000431b8a : mov rax, qword ptr [rip - 0x888d9] ; call rax
0x000002000044779d : mov rax, qword ptr [rip - 0x9e4ec] ; call rax
0x000002000044d94e : mov rax, qword ptr [rip - 0xa469d] ; call rax
0x000002000046ec14 : mov rax, qword ptr [rip - 0xc5963] ; call rax
0x00000200003dfb46 : mov rax, qword ptr [rip - 0xdfb65] ; call rax
0x0000020000648c45 : mov rax, qword ptr [rsi + 0x38] ; call rax
0x00000200000fca09 : mov rax, qword ptr [rsi + rdx*8] ; mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x200000fca0a
0x0000020000454a0b : mov rax, qword ptr [rsp + 0x20] ; add rsp, 0x38 ; ret
0x000002000021fb38 : mov rax, qword ptr [rsp + 0x28] ; jmp rax
0x00000200006939f4 : mov rax, qword ptr [rsp + 0x28] ; mov byte ptr [rax], 0 ; ret
0x00000200006939d6 : mov rax, qword ptr [rsp + 0x28] ; mov byte ptr [rax], 1 ; ret
0x00000200001bdcd0 : mov rax, qword ptr [rsp + 0x30] ; add rsp, 0x28 ; ret
0x00000200001d390e : mov rax, qword ptr [rsp + 0x30] ; add rsp, 0x48 ; ret
0x000002000070deac : mov rax, qword ptr [rsp + 0x30] ; jmp rax
0x0000020000118eed : mov rax, qword ptr [rsp + 0x30] ; mov qword ptr [rax], r10 ; ret
0x0000020000056aa6 : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x28 ; ret
0x000002000021fb40 : mov rax, qword ptr [rsp + 0x38] ; jmp rax
0x0000020000027211 : mov rax, qword ptr [rsp + 0x40] ; add rsp, 0x28 ; ret
0x00000200001c9a02 : mov rax, qword ptr [rsp + 0x40] ; add rsp, 0x38 ; ret
0x000002000021fbe8 : mov rax, qword ptr [rsp + 0x40] ; jmp rax
0x00000200006ff39e : mov rax, qword ptr [rsp + 0x48] ; jmp rax
0x000002000021fb2e : mov rax, qword ptr [rsp + 0x50] ; jmp rax
0x00000200000fd30d : mov rax, qword ptr [rsp + 0x58] ; add rsp, 0x38 ; ret
0x00000200004f7005 : mov rax, qword ptr [rsp + 0x60] ; add rsp, 0x48 ; ret
0x0000020000517501 : mov rax, qword ptr [rsp + 0x68] ; add rsp, 0x48 ; ret
0x0000020000416c11 : mov rax, qword ptr [rsp + 0xb0] ; call rax
0x0000020000157b7d : mov rax, qword ptr [rsp + 8] ; ret
0x0000020000157af0 : mov rax, qword ptr [rsp] ; ret
0x000002000001be2c : mov rax, qword ptr gs:[0x188] ; ret
0x00000200007a099a : mov rax, r10 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200000c0980 : mov rax, r10 ; mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x000002000015131e : mov rax, r10 ; pop rbx ; ret
0x000002000006ca46 : mov rax, r10 ; ret
0x000002000012a494 : mov rax, r11 ; ret
0x000002000000a260 : mov rax, r8 ; add rsp, 0x28 ; ret
0x0000020000115ca7 : mov rax, r8 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c3f2d : mov rax, r8 ; add rsp, 0x38 ; ret
0x00000200006e83e7 : mov rax, r8 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000125475 : mov rax, r8 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000151267 : mov rax, r8 ; pop rbx ; ret
0x0000020000151914 : mov rax, r8 ; pop rsi ; pop rdi ; ret
0x00000200000273bf : mov rax, r8 ; ret
0x00000200004990e3 : mov rax, r8 ; shr rax, 1 ; ret
0x0000020000157a28 : mov rax, r8 ; shr rdx, 0x20 ; wrmsr ; ret
0x000002000043aa9a : mov rax, r9 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c99d2 : mov rax, r9 ; add rsp, 0x28 ; ret
0x0000020000162f26 : mov rax, r9 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000002d076 : mov rax, r9 ; ret
0x00000200004cf28c : mov rax, rbp ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000024d9b : mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000a5d9 : mov rax, rbx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001e6e13 : mov rax, rbx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000dbbf3 : mov rax, rbx ; jmp 0x200000dbbbf
0x0000020000604b68 : mov rax, rbx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000014c3c0 : mov rax, rbx ; pop rbx ; ret
0x000002000020f980 : mov rax, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d7daa : mov rax, rcx ; add rsp, 0x20 ; pop rdi ; ret
0x000002000012fef4 : mov rax, rcx ; add rsp, 0x28 ; ret
0x000002000001fc63 : mov rax, rcx ; add rsp, 0x38 ; ret
0x0000020000210439 : mov rax, rcx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000564c0 : mov rax, rcx ; add rsp, 0x48 ; ret
0x00000200000561d9 : mov rax, rcx ; add rsp, 0x60 ; pop rbp ; ret
0x00000200001914b0 : mov rax, rcx ; jmp 0x20000095017
0x0000020000097415 : mov rax, rcx ; jmp 0x200000969c4
0x00000200004b22ef : mov rax, rcx ; jne 0x200005d3ea1 ; ret
0x00000200000b567a : mov rax, rcx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000009bcc : mov rax, rcx ; ret
0x000002000003f1ca : mov rax, rdi ; add rsp, 0x20 ; pop rdi ; ret
0x000002000067b8f2 : mov rax, rdi ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001e7f51 : mov rax, rdi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001518fc : mov rax, rdi ; pop rsi ; pop rdi ; ret
0x0000020000006d8a : mov rax, rdx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001f77b : mov rax, rdx ; add rsp, 0x28 ; ret
0x000002000013aeca : mov rax, rdx ; add rsp, 0x38 ; ret
0x0000020000215b11 : mov rax, rdx ; add rsp, 0x48 ; ret
0x00000200001512dd : mov rax, rdx ; and al, 0xf0 ; pop rbx ; ret
0x0000020000117b6e : mov rax, rdx ; cqo ; idiv rcx ; ret
0x000002000009467f : mov rax, rdx ; jmp 0x20000094664
0x0000020000094684 : mov rax, rdx ; jmp 0x20000094674
0x00000200000dbc18 : mov rax, rdx ; jmp 0x200000dbbbd
0x00000200001459f8 : mov rax, rdx ; jmp 0x20000145a01
0x00000200001469fb : mov rax, rdx ; jmp 0x20000146a04
0x0000020000146ced : mov rax, rdx ; jmp 0x20000146cf6
0x00000200001471ca : mov rax, rdx ; jmp 0x200001471d3
0x00000200001b1790 : mov rax, rdx ; jmp 0x200001b17ac
0x000002000023bfcb : mov rax, rdx ; jmp 0x2000023bfd4
0x000002000023c66f : mov rax, rdx ; jmp 0x2000023c678
0x000002000023c844 : mov rax, rdx ; jmp 0x2000023c84d
0x000002000023d102 : mov rax, rdx ; jmp 0x2000023d10b
0x000002000023d208 : mov rax, rdx ; jmp 0x2000023d211
0x000002000023d918 : mov rax, rdx ; jmp 0x2000023d921
0x000002000023da6e : mov rax, rdx ; jmp 0x2000023da77
0x000002000023deaf : mov rax, rdx ; jmp 0x2000023deb8
0x000002000023dfc5 : mov rax, rdx ; jmp 0x2000023e031
0x000002000023e16e : mov rax, rdx ; jmp 0x2000023e177
0x000002000023e29c : mov rax, rdx ; jmp 0x2000023e2a5
0x000002000023f26e : mov rax, rdx ; jmp 0x2000023f277
0x000002000023fa6c : mov rax, rdx ; jmp 0x2000023fa75
0x000002000023fd11 : mov rax, rdx ; jmp 0x2000023fd1a
0x00000200002409f4 : mov rax, rdx ; jmp 0x200002409fd
0x00000200002424bb : mov rax, rdx ; jmp 0x200002424c4
0x0000020000242a24 : mov rax, rdx ; jmp 0x20000242a2d
0x0000020000242b2c : mov rax, rdx ; jmp 0x20000242b35
0x0000020000243d89 : mov rax, rdx ; jmp 0x20000243d92
0x0000020000243fbf : mov rax, rdx ; jmp 0x20000243fc8
0x000002000024462a : mov rax, rdx ; jmp 0x20000244633
0x0000020000244704 : mov rax, rdx ; jmp 0x2000024470d
0x00000200002449d7 : mov rax, rdx ; jmp 0x200002449e0
0x0000020000244aaf : mov rax, rdx ; jmp 0x20000244ab8
0x00000200002452c1 : mov rax, rdx ; jmp 0x200002452ca
0x00000200002456c8 : mov rax, rdx ; jmp 0x200002456d1
0x0000020000245a46 : mov rax, rdx ; jmp 0x20000245a4f
0x0000020000245c86 : mov rax, rdx ; jmp 0x20000245c8f
0x00000200002461aa : mov rax, rdx ; jmp 0x200002461b3
0x0000020000246592 : mov rax, rdx ; jmp 0x2000024659b
0x0000020000246864 : mov rax, rdx ; jmp 0x20000246892
0x0000020000246ed5 : mov rax, rdx ; jmp 0x20000246ede
0x000002000024777b : mov rax, rdx ; jmp 0x20000247784
0x00000200002495b7 : mov rax, rdx ; jmp 0x200002495c0
0x000002000024a551 : mov rax, rdx ; jmp 0x2000024a55a
0x000002000024a906 : mov rax, rdx ; jmp 0x2000024a90f
0x000002000024aaa4 : mov rax, rdx ; jmp 0x2000024aaad
0x000002000024abed : mov rax, rdx ; jmp 0x2000024abf6
0x000002000024bd9a : mov rax, rdx ; jmp 0x2000024bda3
0x000002000047870a : mov rax, rdx ; jmp 0x200004786d3
0x00000200004789d1 : mov rax, rdx ; jmp 0x2000047898c
0x00000200004789d0 : mov rax, rdx ; jmp 0x2000047898d
0x0000020000478ac3 : mov rax, rdx ; jmp 0x20000478a76
0x000002000048739c : mov rax, rdx ; jmp 0x2000048733a
0x00000200004c89ab : mov rax, rdx ; jmp 0x200004c899b
0x00000200004cdfca : mov rax, rdx ; jmp 0x200004cdf79
0x00000200004cdfd8 : mov rax, rdx ; jmp 0x200004cdfa9
0x000002000077843b : mov rax, rdx ; jmp 0x20000778447
0x00000200007796a2 : mov rax, rdx ; jmp 0x20000779706
0x0000020000779a42 : mov rax, rdx ; jmp 0x20000779a4b
0x000002000077f1d9 : mov rax, rdx ; jmp 0x2000077f1e2
0x000002000077f2fb : mov rax, rdx ; jmp 0x2000077f304
0x000002000077f4b6 : mov rax, rdx ; jmp 0x2000077f4bf
0x000002000077ff43 : mov rax, rdx ; jmp 0x2000077ff4c
0x0000020000780986 : mov rax, rdx ; jmp 0x2000078098f
0x0000020000781599 : mov rax, rdx ; jmp 0x200007815a2
0x0000020000781bf5 : mov rax, rdx ; jmp 0x20000781bfe
0x000002000078261f : mov rax, rdx ; jmp 0x20000782628
0x00000200007831e5 : mov rax, rdx ; jmp 0x200007831f7
0x0000020000783a51 : mov rax, rdx ; jmp 0x20000783a5a
0x0000020000783e4b : mov rax, rdx ; jmp 0x20000783e54
0x00000200007845ce : mov rax, rdx ; jmp 0x200007845d7
0x0000020000784e85 : mov rax, rdx ; jmp 0x20000784e8e
0x000002000078510e : mov rax, rdx ; jmp 0x20000785117
0x000002000078535e : mov rax, rdx ; jmp 0x20000785367
0x000002000078584f : mov rax, rdx ; jmp 0x20000785858
0x000002000078591f : mov rax, rdx ; jmp 0x20000785928
0x0000020000785b41 : mov rax, rdx ; jmp 0x20000785b4a
0x0000020000785d90 : mov rax, rdx ; jmp 0x20000785d99
0x0000020000785efd : mov rax, rdx ; jmp 0x20000785f06
0x000002000078606a : mov rax, rdx ; jmp 0x20000786073
0x00000200007861f7 : mov rax, rdx ; jmp 0x20000786200
0x0000020000786394 : mov rax, rdx ; jmp 0x2000078639d
0x000002000078652c : mov rax, rdx ; jmp 0x20000786535
0x00000200007866db : mov rax, rdx ; jmp 0x200007866e4
0x0000020000786878 : mov rax, rdx ; jmp 0x20000786881
0x0000020000786a34 : mov rax, rdx ; jmp 0x20000786a3d
0x0000020000786bde : mov rax, rdx ; jmp 0x20000786be7
0x0000020000786d4e : mov rax, rdx ; jmp 0x20000786d57
0x0000020000786f46 : mov rax, rdx ; jmp 0x20000786f4f
0x000002000078715c : mov rax, rdx ; jmp 0x20000787165
0x0000020000787633 : mov rax, rdx ; jmp 0x2000078763c
0x0000020000787900 : mov rax, rdx ; jmp 0x20000787909
0x000002000078865a : mov rax, rdx ; jmp 0x20000788663
0x0000020000788a23 : mov rax, rdx ; jmp 0x20000788a2c
0x000002000078929b : mov rax, rdx ; jmp 0x200007892a4
0x00000200007894ca : mov rax, rdx ; jmp 0x200007894d3
0x000002000078963c : mov rax, rdx ; jmp 0x20000789645
0x0000020000789835 : mov rax, rdx ; jmp 0x2000078983e
0x0000020000789bab : mov rax, rdx ; jmp 0x20000789bb4
0x0000020000789e11 : mov rax, rdx ; jmp 0x20000789e1a
0x000002000078a065 : mov rax, rdx ; jmp 0x2000078a06e
0x000002000078a270 : mov rax, rdx ; jmp 0x2000078a279
0x000002000078a44c : mov rax, rdx ; jmp 0x2000078a455
0x000002000078a640 : mov rax, rdx ; jmp 0x2000078a649
0x000002000078a8a0 : mov rax, rdx ; jmp 0x2000078a8a9
0x000002000078ac7c : mov rax, rdx ; jmp 0x2000078ac85
0x000002000078adee : mov rax, rdx ; jmp 0x2000078adf7
0x000002000078bb22 : mov rax, rdx ; jmp 0x2000078bb2b
0x000002000078c3de : mov rax, rdx ; jmp 0x2000078c3e7
0x000002000003dee3 : mov rax, rdx ; jne 0x2000016dc0d ; ret
0x00000200001bc07d : mov rax, rdx ; lock cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x00000200000f5c5c : mov rax, rdx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000020d9fe : mov rax, rdx ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000005810 : mov rax, rdx ; ret
0x00000200006626a9 : mov rax, rdx ; shr rax, 0x3f ; add rax, rdx ; ret
0x00000200001c2241 : mov rax, rdx ; shr rdx, 0x20 ; wrmsr ; ret
0x0000020000567450 : mov rbp, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rsi ; ret
0x00000200003f51c1 : mov rbp, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x000002000043a84e : mov rbp, qword ptr [rax + 0x30] ; mov rcx, rbp ; call 0x20000056a91
0x0000020000147c54 : mov rbp, qword ptr [rcx + 0x18] ; mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x00000200007adb47 : mov rbp, qword ptr [rsi] ; mov rcx, rbp ; call 0x200003d3635
0x00000200000c8ab8 : mov rbp, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x0000020000707de2 : mov rbp, rax ; call rbx
0x00000200003e5a51 : mov rbp, rcx ; call 0x200000087ee
0x000002000015b8fd : mov rbp, rdx ; add rsp, 0x40 ; pop rbp ; ret
0x00000200006dcfac : mov rbp, rdx ; call 0x200003f91c1
0x0000020000038187 : mov rbx, qword ptr [r14] ; call 0x2000006fbd9
0x00000200003c73f5 : mov rbx, qword ptr [rbx] ; call 0x200000036e5
0x000002000021c6f0 : mov rbx, qword ptr [rcx + rax*8 + 0x10] ; jmp 0x2000021c704
0x00000200004b970a : mov rbx, qword ptr [rdi] ; mov rcx, rdi ; call 0x200000da2b9
0x0000020000546cc0 : mov rbx, qword ptr [rsi] ; inc rdx ; jmp 0x20000546cac
0x0000020000021845 : mov rbx, qword ptr [rsp + 0x10] ; pop rdi ; ret
0x0000020000091e12 : mov rbx, qword ptr [rsp + 0x10] ; ret
0x00000200000a1192 : mov rbx, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x00000200000269a7 : mov rbx, qword ptr [rsp + 0x28] ; pop rbp ; ret
0x0000020000402a2a : mov rbx, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x000002000007069f : mov rbx, qword ptr [rsp + 0x30] ; add rsp, 0x38 ; ret
0x00000200007d1676 : mov rbx, qword ptr [rsp + 0x40] ; jmp 0x200007d1646
0x000002000009ecbd : mov rbx, qword ptr [rsp + 0x48] ; add rsp, 0x38 ; ret
0x00000200002495b2 : mov rbx, qword ptr [rsp + 0x70] ; mov rax, rdx ; jmp 0x200002495c5
0x0000020000088259 : mov rbx, qword ptr [rsp + 8] ; mov al, dl ; ret
0x00000200001b81ee : mov rbx, qword ptr [rsp + 8] ; mov al, r10b ; ret
0x0000020000216957 : mov rbx, qword ptr [rsp + 8] ; mov al, r8b ; ret
0x00000200003ff80e : mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000121623 : mov rbx, qword ptr [rsp + 8] ; mov eax, r10d ; ret
0x0000020000005c54 : mov rbx, qword ptr [rsp + 8] ; mov eax, r11d ; ret
0x00000200001b3a5e : mov rbx, qword ptr [rsp + 8] ; mov eax, r8d ; ret
0x000002000000a55b : mov rbx, qword ptr [rsp + 8] ; mov eax, r9d ; ret
0x00000200001b7416 : mov rbx, qword ptr [rsp + 8] ; mov qword ptr [r8], r11 ; ret
0x0000020000039115 : mov rbx, qword ptr [rsp + 8] ; mov qword ptr [rcx + 8], rax ; ret
0x000002000079736f : mov rbx, qword ptr [rsp + 8] ; mov rax, r10 ; ret
0x000002000012a48f : mov rbx, qword ptr [rsp + 8] ; mov rax, r11 ; ret
0x000002000052a048 : mov rbx, qword ptr [rsp + 8] ; mov rax, r8 ; ret
0x00000200007109e1 : mov rbx, qword ptr [rsp + 8] ; mov rax, r9 ; ret
0x00000200006863a7 : mov rbx, qword ptr [rsp + 8] ; movzx eax, r9w ; ret
0x000002000001e0b8 : mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003f8eb9 : mov rbx, qword ptr [rsp] ; add rsp, 8 ; ret
0x00000200007d0a85 : mov rbx, r8 ; call 0x200003f7bc2
0x00000200001bce2c : mov rbx, r8 ; test rax, rax ; je 0x200001bce40 ; call rax
0x0000020000441dbf : mov rbx, rax ; call 0x2000006d286
0x0000020000713170 : mov rbx, rax ; call qword ptr [rip - 0x3d28f9]
0x00000200007131dd : mov rbx, rax ; call rdi
0x0000020000713a4f : mov rbx, rax ; call rsi
0x000002000008d732 : mov rbx, rcx ; add rcx, 0x20 ; call 0x200000e9999
0x000002000045225e : mov rbx, rcx ; call 0x2000007a402
0x000002000000ca19 : mov rbx, rcx ; call 0x20000408c69
0x00000200001dc26e : mov rbx, rcx ; call qword ptr [rax]
0x00000200006636d2 : mov rbx, rcx ; mov rcx, rbx ; call 0x200001ef968
0x00000200004f5689 : mov rbx, rcx ; mov rdx, qword ptr [rdx + 8] ; call qword ptr [rdi]
0x000002000070f4a6 : mov rbx, rcx ; test rax, rax ; je 0x2000070f4bb ; call rax
0x00000200006d46fc : mov rbx, rcx ; xor r14d, r14d ; call 0x20000520944
0x000002000044df61 : mov rbx, rdx ; call 0x2000001a251
0x00000200000f8b05 : mov rbx, rdx ; call 0x20000074d15
0x00000200001dc328 : mov rbx, rdx ; call qword ptr [rax]
0x000002000044871e : mov rbx, rdx ; mov rdi, rcx ; call 0x2000006d289
0x00000200001fd05d : mov rcx, qword ptr [r10 + 0x1d8] ; call rax
0x00000200001d1025 : mov rcx, qword ptr [r10 + 0x2990] ; call rdi
0x00000200004cf8f5 : mov rcx, qword ptr [r13 + 0x3e0] ; call rax
0x00000200005c1fbe : mov rcx, qword ptr [r13 - 8] ; call qword ptr [rax]
0x000002000008592b : mov rcx, qword ptr [r14 + 0xa8] ; mov edx, ebp ; call rax
0x0000020000019faa : mov rcx, qword ptr [r14 + 8] ; call rax
0x00000200004bd66d : mov rcx, qword ptr [r15 + 8] ; call 0x200000e7da7
0x000002000022c621 : mov rcx, qword ptr [r8 + 0x30] ; call r9
0x0000020000496f2b : mov rcx, qword ptr [r9] ; mov qword ptr [rdx], rcx ; ret
0x000002000042f628 : mov rcx, qword ptr [rax + 0x10] ; cmp rcx, rdx ; jne 0x2000042f644 ; ret
0x000002000000ba85 : mov rcx, qword ptr [rax + 0x10] ; test rcx, rcx ; jne 0x2000000ba98 ; ret
0x0000020000025599 : mov rcx, qword ptr [rax + 0x10] ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000002000002e4ef : mov rcx, qword ptr [rax + 0x30] ; mov qword ptr [rcx + 0x70], r10 ; jmp 0x2000002e4c4
0x00000200003c98bd : mov rcx, qword ptr [rax + 0x48] ; test rcx, rcx ; je 0x200003c98d1 ; call rcx
0x00000200003dc6ec : mov rcx, qword ptr [rax + 0x48] ; test rcx, rcx ; je 0x200003dc700 ; call rcx
0x0000020000798e18 : mov rcx, qword ptr [rax + 0x78] ; test rcx, rcx ; jne 0x20000798e2b ; ret
0x00000200001c4598 : mov rcx, qword ptr [rax + 8] ; test rcx, rcx ; je 0x200001c45ac ; call rcx
0x0000020000454b02 : mov rcx, qword ptr [rax] ; call 0x2000007a352
0x00000200004d4adf : mov rcx, qword ptr [rax] ; call 0x200000fc296
0x0000020000648808 : mov rcx, qword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x00000200000d26f4 : mov rcx, qword ptr [rbp + 0x28] ; call 0x200000be966
0x00000200005ba53d : mov rcx, qword ptr [rbp + 0x30] ; call rdx
0x00000200005bd143 : mov rcx, qword ptr [rbp + 0x30] ; jmp 0x200004593ab
0x00000200005201ad : mov rcx, qword ptr [rbp + 0x38] ; call 0x20000148077
0x000002000041b28d : mov rcx, qword ptr [rbp + 0x38] ; call 0x20000157546
0x00000200005252bd : mov rcx, qword ptr [rbp + 0x40] ; call 0x20000148077
0x000002000015c2fc : mov rcx, qword ptr [rbp + 0x40] ; call rax
0x000002000059b9f8 : mov rcx, qword ptr [rbp + 0x460] ; mov r8d, r10d ; call rax
0x000002000067ea55 : mov rcx, qword ptr [rbp + 0x47] ; xor rcx, rsp ; call 0x2000013ac79
0x0000020000525311 : mov rcx, qword ptr [rbp + 0x48] ; call 0x20000148077
0x000002000015af50 : mov rcx, qword ptr [rbp + 0x50] ; call rax
0x000002000051f46c : mov rcx, qword ptr [rbp + 0x58] ; call 0x20000148077
0x000002000047a1d9 : mov rcx, qword ptr [rbp + 0x60] ; call 0x2000042641a
0x0000020000642656 : mov rcx, qword ptr [rbp + 0x67] ; call r12
0x00000200005a9430 : mov rcx, qword ptr [rbp + 0x68] ; call r14
0x00000200004ba817 : mov rcx, qword ptr [rbp + 8] ; call 0x200000e7da7
0x000002000023ffd5 : mov rcx, qword ptr [rbp + 8] ; call 0x2000024c296
0x000002000065e142 : mov rcx, qword ptr [rbp + 8] ; jne 0x2000065e104 ; inc rdx ; jmp 0x2000065e182
0x00000200001f407a : mov rcx, qword ptr [rbp + 8] ; mov rdx, r15 ; call 0x200001f02c9
0x0000020000525b3c : mov rcx, qword ptr [rbp - 0x11] ; call 0x20000148077
0x0000020000626610 : mov rcx, qword ptr [rbp - 0x18] ; xor edx, edx ; call 0x2000024d009
0x000002000051b6cd : mov rcx, qword ptr [rbp - 0x19] ; call 0x20000148077
0x00000200004fbf7f : mov rcx, qword ptr [rbp - 0x30] ; call 0x200001208c7
0x0000020000527b58 : mov rcx, qword ptr [rbp - 0x39] ; mov ebx, eax ; call 0x20000148079
0x0000020000519b0b : mov rcx, qword ptr [rbp - 0x40] ; call 0x20000148077
0x000002000051da61 : mov rcx, qword ptr [rbp - 0x49] ; mov edi, eax ; call 0x20000148079
0x0000020000527d94 : mov rcx, qword ptr [rbp - 0x61] ; call 0x20000148077
0x00000200006dcf5f : mov rcx, qword ptr [rbp - 0x61] ; call rax
0x0000020000590966 : mov rcx, qword ptr [rbp - 0x71] ; call 0x200001b639f
0x00000200005250c5 : mov rcx, qword ptr [rbp - 0x79] ; mov ebx, eax ; call 0x20000148079
0x0000020000458c1e : mov rcx, qword ptr [rbp - 9] ; call rax
0x00000200003cf6c5 : mov rcx, qword ptr [rbx + 0x10] ; call qword ptr [rbx]
0x000002000067a414 : mov rcx, qword ptr [rbx + 0x18] ; mov edx, esi ; call rdi
0x00000200005e6781 : mov rcx, qword ptr [rbx + 0x28] ; call rax
0x0000020000114496 : mov rcx, qword ptr [rbx + 0xa8] ; call rax
0x00000200000342e3 : mov rcx, qword ptr [rbx + 0xb8] ; call 0x200000f05b9
0x00000200003dc208 : mov rcx, qword ptr [rbx + 8] ; call 0x20000068456
0x000002000010cb7f : mov rcx, qword ptr [rbx] ; call 0x20000004855
0x00000200001dbeb9 : mov rcx, qword ptr [rbx] ; call rax
0x000002000056610a : mov rcx, qword ptr [rcx + 0x10] ; mov rdx, qword ptr [r9 + 8] ; call r8
0x000002000016f875 : mov rcx, qword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0x2000016f87b ; ret
0x000002000006d2ad : mov rcx, qword ptr [rcx + 0x18] ; test rcx, rcx ; jne 0x2000006d2b3 ; ret
0x000002000016f893 : mov rcx, qword ptr [rcx + 0x18] ; test rcx, rcx ; jne 0x2000016f899 ; ret
0x0000020000494c6c : mov rcx, qword ptr [rcx + 0x18] ; test rcx, rcx ; jne 0x20000494c7f ; ret
0x00000200004f46fe : mov rcx, qword ptr [rcx + 0x28] ; call 0x200003f09f2
0x00000200001d15a1 : mov rcx, qword ptr [rcx + 0x2990] ; call rax
0x00000200006048a9 : mov rcx, qword ptr [rcx + 0x48] ; add eax, dword ptr [rcx + 8] ; ret
0x000002000001f7d0 : mov rcx, qword ptr [rcx + 0x508] ; jmp 0x2000001f7a4
0x00000200004bc2f8 : mov rcx, qword ptr [rcx + 8] ; call 0x200000e7da7
0x00000200004bc2f7 : mov rcx, qword ptr [rcx + 8] ; call 0x200000e7da8
0x00000200004bc2f6 : mov rcx, qword ptr [rcx + 8] ; call 0x200000e7da9
0x0000020000103262 : mov rcx, qword ptr [rcx + 8] ; call rax
0x0000020000408e3d : mov rcx, qword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000200001dc324 : mov rcx, qword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x00000200001cd5fe : mov rcx, qword ptr [rcx + 8] ; mov rdx, rdi ; call 0x2000013987d
0x0000020000102e05 : mov rcx, qword ptr [rcx + 8] ; mov rsi, rdx ; call qword ptr [rbx]
0x0000020000210562 : mov rcx, qword ptr [rcx + 8] ; test rcx, rcx ; jne 0x20000210568 ; ret
0x00000200000f92fa : mov rcx, qword ptr [rcx + rbx*8] ; test rcx, rcx ; je 0x200000f9310 ; call rcx
0x000002000044784c : mov rcx, qword ptr [rcx] ; call 0x2000006d8b6
0x000002000021f269 : mov rcx, qword ptr [rcx] ; cmp r8, rcx ; jne 0x2000021f260 ; ret
0x000002000058ccff : mov rcx, qword ptr [rcx] ; mov r8d, 6 ; call rax
0x00000200007baa79 : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0x200007baa71 ; ret
0x00000200004cfaed : mov rcx, qword ptr [rdi + 0x2e8] ; call rax
0x00000200000c2e70 : mov rcx, qword ptr [rdi + 0xd8] ; call qword ptr [rax]
0x000002000011fd58 : mov rcx, qword ptr [rdi + 8] ; call r8
0x0000020000428f85 : mov rcx, qword ptr [rdi + 8] ; call rax
0x00000200004e33e6 : mov rcx, qword ptr [rdi - 8] ; mov rdx, rdi ; call qword ptr [rax]
0x000002000070490c : mov rcx, qword ptr [rdx - 0x28] ; mov qword ptr [r9 + 0x20], rcx ; ret
0x0000020000147e6b : mov rcx, qword ptr [rdx] ; mov rdx, qword ptr [rdx + 8] ; call r10
0x000002000019dcd7 : mov rcx, qword ptr [rip + 0x16568a] ; call rax
0x000002000058476f : mov rcx, qword ptr [rip + 0x1c43d2] ; call 0x20000470995
0x00000200005846e0 : mov rcx, qword ptr [rip + 0x1c4441] ; call 0x20000470995
0x0000020000584748 : mov rcx, qword ptr [rip + 0x1c4749] ; call 0x20000470995
0x00000200006b469f : mov rcx, qword ptr [rip + 0x944c2] ; call 0x20000470995
0x00000200006017a9 : mov rcx, qword ptr [rip - 0x2dc508] ; call rax
0x0000020000633f79 : mov rcx, qword ptr [rip - 0x2f3e48] ; call rax
0x00000200003fba0d : mov rcx, qword ptr [rip - 0xbb8dc] ; call rax
0x000002000014e09e : mov rcx, qword ptr [rsi + 0x50] ; jmp rcx
0x0000020000085fdd : mov rcx, qword ptr [rsi + 0xa8] ; mov edx, ebp ; call rax
0x00000200001dc4b1 : mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x000002000070e38d : mov rcx, qword ptr [rsi + 8] ; call rax
0x000002000052c022 : mov rcx, qword ptr [rsi + rbp*8 + 0x28] ; call 0x20000157548
0x00000200003df199 : mov rcx, qword ptr [rsi] ; call 0x2000000ca12
0x000002000022bd78 : mov rcx, qword ptr [rsi] ; call 0x20000148075
0x0000020000623d89 : mov rcx, qword ptr [rsi] ; xor edx, edx ; call 0x2000024d008
0x00000200001be154 : mov rcx, qword ptr [rsp + 0x20] ; call r9
0x00000200001be041 : mov rcx, qword ptr [rsp + 0x20] ; call rax
0x0000020000468c54 : mov rcx, qword ptr [rsp + 0x260] ; call rax
0x000002000051964c : mov rcx, qword ptr [rsp + 0x30] ; call 0x20000148078
0x00000200001d8504 : mov rcx, qword ptr [rsp + 0x30] ; mov qword ptr [rcx], r10 ; ret
0x00000200004df9c6 : mov rcx, qword ptr [rsp + 0x38] ; call rax
0x00000200004cca28 : mov rcx, qword ptr [rsp + 0x40] ; call 0x200000eef38
0x00000200005df8a7 : mov rcx, qword ptr [rsp + 0x40] ; call 0x2000020bd3c
0x0000020000623f37 : mov rcx, qword ptr [rsp + 0x40] ; call 0x2000024d008
0x00000200004de0f4 : mov rcx, qword ptr [rsp + 0x40] ; call rax
0x00000200003e7984 : mov rcx, qword ptr [rsp + 0x48] ; call 0x20000007c50
0x00000200004334d9 : mov rcx, qword ptr [rsp + 0x48] ; call 0x200000620f8
0x000002000047bac5 : mov rcx, qword ptr [rsp + 0x48] ; call 0x200000e7da7
0x00000200004c6fe4 : mov rcx, qword ptr [rsp + 0x48] ; call 0x200000e7da8
0x00000200004b88c1 : mov rcx, qword ptr [rsp + 0x48] ; call 0x200000e7e78
0x00000200005fe58e : mov rcx, qword ptr [rsp + 0x48] ; call 0x2000049a817
0x000002000068f6f1 : mov rcx, qword ptr [rsp + 0x48] ; call rax
0x00000200003dfac6 : mov rcx, qword ptr [rsp + 0x50] ; call 0x2000000c354
0x000002000051f5fd : mov rcx, qword ptr [rsp + 0x50] ; call 0x20000148078
0x000002000014c61b : mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x0000020000629ca8 : mov rcx, qword ptr [rsp + 0x58] ; call 0x2000024d008
0x00000200005fe598 : mov rcx, qword ptr [rsp + 0x60] ; call 0x2000049a817
0x00000200006359e3 : mov rcx, qword ptr [rsp + 0x60] ; call qword ptr [rip - 0x3deab6]
0x000002000046b285 : mov rcx, qword ptr [rsp + 0x68] ; call 0x2000009a738
0x00000200004bb3d5 : mov rcx, qword ptr [rsp + 0x68] ; call 0x200000e7da8
0x00000200004c589c : mov rcx, qword ptr [rsp + 0x68] ; call 0x200000e7e78
0x000002000061d09c : mov rcx, qword ptr [rsp + 0x68] ; call 0x2000024d008
0x00000200001bfa5f : mov rcx, qword ptr [rsp + 0x68] ; call rax
0x000002000051c292 : mov rcx, qword ptr [rsp + 0x70] ; call 0x20000148078
0x000002000004df61 : mov rcx, qword ptr [rsp + 0x78] ; call rax
0x0000020000416d25 : mov rcx, qword ptr [rsp + 0x88] ; call r12
0x00000200001bcba3 : mov rcx, qword ptr [rsp + 0x90] ; call rax
0x000002000017a248 : mov rcx, qword ptr fs:[rdi + 8] ; call r8
0x000002000042a473 : mov rcx, r10 ; call 0x20000058016
0x00000200001a7951 : mov rcx, r10 ; call 0x20000063bc5
0x00000200006e354e : mov rcx, r10 ; call 0x20000148079
0x00000200000766b3 : mov rcx, r10 ; call 0x20000494b59
0x000002000015be8c : mov rcx, r10 ; call r10
0x0000020000121dc6 : mov rcx, r10 ; call r9
0x00000200003f603f : mov rcx, r10 ; call rax
0x000002000078f168 : mov rcx, r10 ; jmp rcx
0x0000020000090c1a : mov rcx, r10 ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x0000020000521793 : mov rcx, r10 ; mov r15d, edx ; call 0x2000024da48
0x0000020000521792 : mov rcx, r10 ; mov r15d, edx ; call 0x2000024da49
0x00000200006e0cea : mov rcx, r11 ; add rsp, 0x28 ; jmp qword ptr [r10]
0x00000200003f386d : mov rcx, r11 ; call r10
0x000002000015bc5f : mov rcx, r11 ; call r11
0x0000020000144b22 : mov rcx, r11 ; call r8
0x00000200003f9382 : mov rcx, r11 ; call rax
0x00000200007c9d1a : mov rcx, r11 ; call rbx
0x00000200001e5e9d : mov rcx, r11 ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r11]
0x0000020000443aa3 : mov rcx, r11 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200004b3366 : mov rcx, r11 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000042b828 : mov rcx, r12 ; call 0x2000004fce6
0x0000020000483767 : mov rcx, r12 ; call 0x2000005fa05
0x0000020000415ba8 : mov rcx, r12 ; call 0x20000061dc5
0x0000020000435e25 : mov rcx, r12 ; call 0x20000061dc6
0x00000200000e0cc1 : mov rcx, r12 ; call 0x2000006cf49
0x000002000066042b : mov rcx, r12 ; call 0x2000009dd49
0x00000200000a95ad : mov rcx, r12 ; call 0x200000a58b5
0x0000020000101736 : mov rcx, r12 ; call 0x200000dd945
0x00000200000e1e2f : mov rcx, r12 ; call 0x200000de055
0x00000200005caff3 : mov rcx, r12 ; call 0x200000e7255
0x00000200004bb622 : mov rcx, r12 ; call 0x200000e7da6
0x00000200004bb2da : mov rcx, r12 ; call 0x200000e9996
0x00000200004f5f02 : mov rcx, r12 ; call 0x200001244e2
0x0000020000590596 : mov rcx, r12 ; call 0x200001b7852
0x00000200005a2ea1 : mov rcx, r12 ; call 0x200001ce9e2
0x00000200005a2ea9 : mov rcx, r12 ; call 0x200001ceabe
0x000002000062befa : mov rcx, r12 ; call 0x2000024d006
0x00000200007ae1c1 : mov rcx, r12 ; call 0x200003d3796
0x000002000047a267 : mov rcx, r12 ; call 0x20000426521
0x00000200005dd2b3 : mov rcx, r12 ; call 0x20000479555
0x0000020000076359 : mov rcx, r12 ; call 0x20000494b59
0x000002000013c3ab : mov rcx, r12 ; call r14
0x0000020000020d0d : mov rcx, r12 ; call r15
0x00000200005cced2 : mov rcx, r12 ; call rax
0x0000020000707f41 : mov rcx, r12 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x00000200004bb3c3 : mov rcx, r12 ; mov ebx, eax ; call 0x200000e99c8
0x000002000022ef43 : mov rcx, r12 ; mov edx, esi ; cmovne rcx, r11 ; call rax
0x000002000043f8d0 : mov rcx, r12 ; mov rdx, qword ptr [rsi - 8] ; call 0x2000013bb7d
0x0000020000058f56 : mov rcx, r13 ; call 0x20000075195
0x00000200004c47f8 : mov rcx, r13 ; call 0x200000e7e76
0x00000200004c60f0 : mov rcx, r13 ; call 0x200000e8066
0x00000200004d4299 : mov rcx, r13 ; call 0x200000fc296
0x00000200004e5831 : mov rcx, r13 ; call 0x200004cb459
0x00000200003f7d8f : mov rcx, r13 ; call r12
0x00000200003f7c64 : mov rcx, r13 ; call r14
0x000002000054e60b : mov rcx, r13 ; call r15
0x000002000008855c : mov rcx, r13 ; call rax
0x000002000070258e : mov rcx, r13 ; call rbx
0x00000200003ff068 : mov rcx, r13 ; mov dword ptr [rsp + 0x20], r14d ; call r12
0x0000020000670d58 : mov rcx, r13 ; mov edx, ebx ; call 0x2000024d007
0x0000020000670d57 : mov rcx, r13 ; mov edx, ebx ; call 0x2000024d008
0x00000200006f3fe2 : mov rcx, r14 ; call 0x20000010271
0x00000200000e5285 : mov rcx, r14 ; call 0x200000214a1
0x0000020000627fe5 : mov rcx, r14 ; call 0x20000025669
0x0000020000064677 : mov rcx, r14 ; call 0x20000064fd9
0x00000200001f5f2d : mov rcx, r14 ; call 0x20000069f39
0x000002000044d8fd : mov rcx, r14 ; call 0x20000078b96
0x0000020000400bae : mov rcx, r14 ; call 0x2000007cdf5
0x0000020000463cf3 : mov rcx, r14 ; call 0x200000939a2
0x000002000046f309 : mov rcx, r14 ; call 0x2000009e096
0x00000200004bb3cd : mov rcx, r14 ; call 0x200000e7256
0x00000200004cbbf1 : mov rcx, r14 ; call 0x200000e7e75
0x00000200004c0bc2 : mov rcx, r14 ; call 0x200000e7e76
0x00000200004bb755 : mov rcx, r14 ; call 0x200000e7f66
0x00000200004bd933 : mov rcx, r14 ; call 0x200000e8066
0x00000200004c16fc : mov rcx, r14 ; call 0x200000e8067
0x00000200004c5872 : mov rcx, r14 ; call 0x200000eef36
0x000002000051144d : mov rcx, r14 ; call 0x200000fd675
0x0000020000236abf : mov rcx, r14 ; call 0x20000117f21
0x000002000051f0c9 : mov rcx, r14 ; call 0x200001480d6
0x00000200003fb273 : mov rcx, r14 ; call 0x20000157545
0x000002000070b637 : mov rcx, r14 ; call 0x20000157885
0x00000200007ccde3 : mov rcx, r14 ; call 0x20000157889
0x000002000059f5fe : mov rcx, r14 ; call 0x200001cce56
0x00000200005bfe42 : mov rcx, r14 ; call 0x200001e4afa
0x000002000061d3f6 : mov rcx, r14 ; call 0x2000024d006
0x00000200005b09df : mov rcx, r14 ; call 0x2000024d009
0x00000200007a8c9d : mov rcx, r14 ; call 0x200003d241a
0x00000200007a8cf1 : mov rcx, r14 ; call 0x200003d25ba
0x00000200007a8c88 : mov rcx, r14 ; call 0x200003d2696
0x00000200001b58ef : mov rcx, r14 ; call 0x20000481b15
0x00000200005e0b33 : mov rcx, r14 ; call 0x20000664df9
0x00000200003f36bb : mov rcx, r14 ; call qword ptr [rsi]
0x00000200007083e5 : mov rcx, r14 ; call r12
0x000002000052a524 : mov rcx, r14 ; call r9
0x000002000022f49f : mov rcx, r14 ; call rax
0x00000200006d8b1d : mov rcx, r14 ; call rdi
0x00000200006dbd4b : mov rcx, r14 ; call rsi
0x000002000070f8d2 : mov rcx, r14 ; mov dword ptr [rsp + 0x20], ebp ; call rax
0x00000200003f358b : mov rcx, r14 ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [rsi]
0x000002000070f81e : mov rcx, r14 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000070f958 : mov rcx, r14 ; mov qword ptr [rsp + 0x20], rdi ; call rax
0x0000020000438b97 : mov rcx, r14 ; mov r8d, ebx ; call 0x2000005f389
0x000002000022e9e5 : mov rcx, r14 ; mov r9d, esi ; mov edx, r15d ; call rax
0x0000020000441dbc : mov rcx, r14 ; mov rbx, rax ; call 0x2000006d289
0x000002000046f56e : mov rcx, r14 ; xor edx, edx ; call 0x2000009e098
0x00000200001f664e : mov rcx, r15 ; call 0x20000042935
0x0000020000465b24 : mov rcx, r15 ; call 0x20000061dc5
0x0000020000441db4 : mov rcx, r15 ; call 0x2000006d286
0x00000200004520fb : mov rcx, r15 ; call 0x2000007cdf6
0x0000020000200bb4 : mov rcx, r15 ; call 0x2000007ce15
0x00000200005f7d22 : mov rcx, r15 ; call 0x20000081935
0x0000020000660952 : mov rcx, r15 ; call 0x2000008e0b9
0x00000200004e1ff8 : mov rcx, r15 ; call 0x2000008e25d
0x00000200004e1fc3 : mov rcx, r15 ; call 0x2000008e2a1
0x00000200004c59ef : mov rcx, r15 ; call 0x2000009dd49
0x00000200004a1db3 : mov rcx, r15 ; call 0x2000009e095
0x0000020000192685 : mov rcx, r15 ; call 0x200000be965
0x00000200006849b1 : mov rcx, r15 ; call 0x200000e7da9
0x0000020000516a3d : mov rcx, r15 ; call 0x2000013c286
0x00000200005257c9 : mov rcx, r15 ; call 0x20000148076
0x000002000052a63e : mov rcx, r15 ; call 0x20000157546
0x0000020000528463 : mov rcx, r15 ; call 0x20000157886
0x0000020000626b81 : mov rcx, r15 ; call 0x2000024d006
0x00000200004672e1 : mov rcx, r15 ; call 0x200004035d5
0x00000200005a2bc0 : mov rcx, r15 ; call 0x2000061eea1
0x00000200004ece89 : mov rcx, r15 ; call 0x200006590dd
0x00000200004ece88 : mov rcx, r15 ; call 0x200006590de
0x00000200005dcb84 : mov rcx, r15 ; call 0x20000668ded
0x00000200006beecb : mov rcx, r15 ; call r11
0x0000020000483343 : mov rcx, r15 ; call r12
0x0000020000129017 : mov rcx, r15 ; call r14
0x00000200000434d6 : mov rcx, r15 ; call rax
0x00000200003f2b14 : mov rcx, r15 ; call rdi
0x0000020000483040 : mov rcx, r15 ; call rsi
0x00000200006d8260 : mov rcx, r15 ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x00000200006d86f4 : mov rcx, r15 ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x00000200001e5c07 : mov rcx, r15 ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r15]
0x00000200006da7d8 : mov rcx, r15 ; mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200006d8541 : mov rcx, r15 ; mov dword ptr [rsp + 0x20], r13d ; call rdi
0x000002000046f2b3 : mov rcx, r15 ; xor edx, edx ; call 0x2000009e098
0x00000200004eeee1 : mov rcx, r8 ; call 0x20000113d5a
0x000002000011ea07 : mov rcx, r8 ; jmp rdx
0x00000200003e360b : mov rcx, r9 ; call 0x200000036ca
0x0000020000196964 : mov rcx, r9 ; call 0x20000032c09
0x00000200004b43c1 : mov rcx, r9 ; call 0x200000d6426
0x00000200001a73a7 : mov rcx, r9 ; call 0x200001d3639
0x00000200006235b2 : mov rcx, r9 ; call 0x2000024d006
0x00000200003df18d : mov rcx, rax ; call 0x2000000e822
0x0000020000447879 : mov rcx, rax ; call 0x2000006f59a
0x0000020000450128 : mov rcx, rax ; call 0x2000007a466
0x0000020000156b9c : mov rcx, rax ; call 0x20000092e25
0x00000200004bd61a : mov rcx, rax ; call 0x200000e7da6
0x000002000051c016 : mov rcx, rax ; call 0x2000013fb96
0x000002000051ebe7 : mov rcx, rax ; call 0x200001412ca
0x000002000051ad44 : mov rcx, rax ; call 0x20000149a36
0x000002000052ac8c : mov rcx, rax ; call 0x20000157546
0x000002000043b66e : mov rcx, rax ; call 0x20000157885
0x0000020000529b0c : mov rcx, rax ; call 0x20000157886
0x00000200007c3514 : mov rcx, rax ; call 0x20000157889
0x000002000017bb6c : mov rcx, rax ; call 0x20000217d9d
0x00000200007ae168 : mov rcx, rax ; call 0x200003d02e6
0x000002000000ca8d : mov rcx, rax ; call 0x20000408d35
0x00000200001e605b : mov rcx, rax ; call qword ptr [rax]
0x00000200006bdd21 : mov rcx, rax ; call r10
0x0000020000717936 : mov rcx, rax ; call r15
0x00000200006bd816 : mov rcx, rax ; call r8
0x000002000017a174 : mov rcx, rax ; call rdx
0x00000200003e619f : mov rcx, rax ; mov rsi, rax ; call 0x20000007c19
0x00000200003fe0ce : mov rcx, rbp ; call 0x2000000a3d9
0x000002000043a852 : mov rcx, rbp ; call 0x20000056a8d
0x000002000047491a : mov rcx, rbp ; call 0x2000009e096
0x00000200004bb61a : mov rcx, rbp ; call 0x200000e7e76
0x00000200001cf7d9 : mov rcx, rbp ; call 0x2000013ba75
0x0000020000220d77 : mov rcx, rbp ; call 0x2000024d005
0x000002000062b821 : mov rcx, rbp ; call 0x2000024d006
0x00000200007adb4a : mov rcx, rbp ; call 0x200003d3632
0x00000200007adb49 : mov rcx, rbp ; call 0x200003d3633
0x00000200006e00d8 : mov rcx, rbp ; call 0x20000401359
0x0000020000006c44 : mov rcx, rbp ; call r14
0x0000020000410b68 : mov rcx, rbp ; call r15
0x00000200001dbef4 : mov rcx, rbp ; call rax
0x00000200004a9c5b : mov rcx, rbp ; call rdi
0x000002000062ce9d : mov rcx, rbp ; mov edi, eax ; call 0x2000024d008
0x000002000070fa05 : mov rcx, rbp ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x00000200004ca994 : mov rcx, rbp ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000430490 : mov rcx, rbp ; mov qword ptr [rsp + 0x20], rax ; call r15
0x000002000047402c : mov rcx, rbp ; xor edx, edx ; call 0x2000009e098
0x000002000021f2c7 : mov rcx, rbx ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000200001a85d4 : mov rcx, rbx ; call 0x200000248c5
0x0000020000239bc3 : mov rcx, rbx ; call 0x20000045ebd
0x000002000042de3e : mov rcx, rbx ; call 0x20000056a8e
0x000002000043a966 : mov rcx, rbx ; call 0x20000056b85
0x0000020000431b70 : mov rcx, rbx ; call 0x2000005c1b6
0x00000200005e0c63 : mov rcx, rbx ; call 0x2000005ce75
0x0000020000436835 : mov rcx, rbx ; call 0x20000061bf6
0x00000200004473da : mov rcx, rbx ; call 0x2000006d286
0x000002000045132f : mov rcx, rbx ; call 0x2000007cdf6
0x0000020000466035 : mov rcx, rbx ; call 0x2000008eeda
0x000002000046d445 : mov rcx, rbx ; call 0x2000008f0fa
0x0000020000594fb0 : mov rcx, rbx ; call 0x20000091215
0x0000020000194cad : mov rcx, rbx ; call 0x200000b0f55
0x0000020000501e2d : mov rcx, rbx ; call 0x200000be125
0x0000020000222714 : mov rcx, rbx ; call 0x200000be965
0x00000200004a1768 : mov rcx, rbx ; call 0x200000ca366
0x00000200004c0222 : mov rcx, rbx ; call 0x200000e7216
0x00000200004bd017 : mov rcx, rbx ; call 0x200000e7256
0x00000200004bd2a2 : mov rcx, rbx ; call 0x200000e7da6
0x00000200004bb36b : mov rcx, rbx ; call 0x200000e7e76
0x000002000020bd5f : mov rcx, rbx ; call 0x200000e8065
0x000002000018242a : mov rcx, rbx ; call 0x200000ee695
0x00000200004cbec1 : mov rcx, rbx ; call 0x200000eef36
0x000002000058f23c : mov rcx, rbx ; call 0x200001b5dee
0x00000200005a2f15 : mov rcx, rbx ; call 0x200001c596e
0x00000200005aae0b : mov rcx, rbx ; call 0x200001cb88e
0x00000200006636d5 : mov rcx, rbx ; call 0x200001ef965
0x00000200005df453 : mov rcx, rbx ; call 0x2000020bb6e
0x00000200005df43d : mov rcx, rbx ; call 0x2000020bcbe
0x00000200005df86a : mov rcx, rbx ; call 0x2000020bce2
0x00000200005df869 : mov rcx, rbx ; call 0x2000020bce3
0x000002000068eaa2 : mov rcx, rbx ; call 0x20000211c39
0x000002000016021f : mov rcx, rbx ; call 0x2000021c491
0x00000200003d0dc5 : mov rcx, rbx ; call 0x2000024d005
0x000002000062392e : mov rcx, rbx ; call 0x2000024d006
0x00000200007d0d55 : mov rcx, rbx ; call 0x2000024d007
0x0000020000202580 : mov rcx, rbx ; call 0x2000024d009
0x00000200007ac146 : mov rcx, rbx ; call 0x200003d079e
0x00000200003de81f : mov rcx, rbx ; call 0x2000040aa45
0x00000200005a69c2 : mov rcx, rbx ; call 0x20000422c3d
0x00000200004e6db3 : mov rcx, rbx ; call 0x200004e3001
0x00000200005a3024 : mov rcx, rbx ; call 0x200004ff2cd
0x0000020000459b8d : mov rcx, rbx ; call 0x20000545dcd
0x0000020000459b8c : mov rcx, rbx ; call 0x20000545dce
0x0000020000459b8b : mov rcx, rbx ; call 0x20000545dcf
0x0000020000538eb8 : mov rcx, rbx ; call qword ptr [rax]
0x00000200001e632a : mov rcx, rbx ; call qword ptr [rbx]
0x00000200001b9c61 : mov rcx, rbx ; call r10
0x0000020000455220 : mov rcx, rbx ; call r11
0x000002000013c440 : mov rcx, rbx ; call r14
0x000002000048e072 : mov rcx, rbx ; call r15
0x00000200003c646b : mov rcx, rbx ; call r8
0x00000200000239d4 : mov rcx, rbx ; call rax
0x00000200001d933e : mov rcx, rbx ; call rdi
0x0000020000431ae3 : mov rcx, rbx ; call rsi
0x00000200004acc96 : mov rcx, rbx ; cmovb r14, rdi ; jmp 0x200004acc6a
0x000002000019ca7f : mov rcx, rbx ; jmp 0x200000c1b08
0x00000200007b93b4 : mov rcx, rbx ; lea rdx, qword ptr [rsp + 0x38] ; call rax
0x00000200006826f4 : mov rcx, rbx ; mov edi, eax ; call 0x200000be967
0x000002000050a2e4 : mov rcx, rbx ; mov edi, eax ; call 0x200004265cf
0x0000020000453c14 : mov rcx, rbx ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200006dd04d : mov rcx, rbx ; mov r8d, edi ; mov rdx, rsi ; call rax
0x00000200006dcfe0 : mov rcx, rbx ; mov r8d, esi ; mov rdx, rbp ; call rax
0x000002000071afe2 : mov rcx, rbx ; mov rsi, rax ; call qword ptr [rdi]
0x000002000046f9fa : mov rcx, rbx ; xor edx, edx ; call 0x2000009e098
0x00000200006dd30c : mov rcx, rdi ; call 0x20000009585
0x00000200003df7ba : mov rcx, rdi ; call 0x2000000c97e
0x00000200004338ef : mov rcx, rdi ; call 0x2000002fb41
0x00000200005d89cf : mov rcx, rdi ; call 0x20000030a01
0x000002000042ec5e : mov rcx, rdi ; call 0x2000005c1b6
0x0000020000439074 : mov rcx, rdi ; call 0x20000061bf6
0x000002000043daa7 : mov rcx, rdi ; call 0x2000006d286
0x0000020000452d0f : mov rcx, rdi ; call 0x20000075e56
0x0000020000450deb : mov rcx, rdi ; call 0x2000007cdf6
0x000002000044fded : mov rcx, rdi ; call 0x2000007e426
0x0000020000682027 : mov rcx, rdi ; call 0x2000008e2a1
0x00000200004661fb : mov rcx, rdi ; call 0x20000091216
0x00000200004c5505 : mov rcx, rdi ; call 0x2000009dc89
0x000002000049eeb1 : mov rcx, rdi ; call 0x200000c7476
0x00000200004b970d : mov rcx, rdi ; call 0x200000da2b6
0x00000200004bc0c9 : mov rcx, rdi ; call 0x200000e7216
0x00000200004bd33e : mov rcx, rdi ; call 0x200000e7256
0x00000200004b80ad : mov rcx, rdi ; call 0x200000e7da6
0x00000200004bb77b : mov rcx, rdi ; call 0x200000e7e76
0x00000200004c70f6 : mov rcx, rdi ; call 0x200000e8066
0x000002000069dce0 : mov rcx, rdi ; call 0x200000e8069
0x00000200004bd12b : mov rcx, rdi ; call 0x200000e9666
0x0000020000662c51 : mov rcx, rdi ; call 0x200000eef35
0x00000200004c7c64 : mov rcx, rdi ; call 0x200000f02aa
0x00000200004d4d58 : mov rcx, rdi ; call 0x200000fc296
0x00000200001cd47a : mov rcx, rdi ; call 0x2000013977d
0x0000020000513e42 : mov rcx, rdi ; call 0x2000013bb7a
0x0000020000513e58 : mov rcx, rdi ; call 0x2000013bd42
0x0000020000516af0 : mov rcx, rdi ; call 0x2000013c1b6
0x000002000051ebf5 : mov rcx, rdi ; call 0x2000014122e
0x0000020000525605 : mov rcx, rdi ; call 0x20000148076
0x0000020000527f5d : mov rcx, rdi ; call 0x20000148156
0x000002000061c258 : mov rcx, rdi ; call 0x200001484f5
0x0000020000519494 : mov rcx, rdi ; call 0x20000148a96
0x000002000052563f : mov rcx, rdi ; call 0x200001497f6
0x000002000020e652 : mov rcx, rdi ; call 0x2000014a8f5
0x00000200005a3848 : mov rcx, rdi ; call 0x200001c980e
0x00000200005a7096 : mov rcx, rdi ; call 0x200001cb88e
0x00000200005a7095 : mov rcx, rdi ; call 0x200001cb88f
0x00000200005f69ec : mov rcx, rdi ; call 0x20000217cae
0x00000200002254c2 : mov rcx, rdi ; call 0x20000225215
0x00000200000e0cfa : mov rcx, rdi ; call 0x2000024d005
0x000002000061f39d : mov rcx, rdi ; call 0x2000024d006
0x00000200007bbc56 : mov rcx, rdi ; call 0x200003e1c86
0x0000020000400424 : mov rcx, rdi ; call 0x200003fea11
0x00000200006c3334 : mov rcx, rdi ; call 0x200003ff5b1
0x00000200005d89bf : mov rcx, rdi ; call 0x200004c083d
0x00000200005b02fb : mov rcx, rdi ; call 0x2000061c5f5
0x000002000061c3ce : mov rcx, rdi ; call 0x2000061c5f9
0x00000200005de158 : mov rcx, rdi ; call 0x2000065a399
0x00000200005de285 : mov rcx, rdi ; call 0x2000065a545
0x00000200007052bf : mov rcx, rdi ; call 0x20000711599
0x0000020000448751 : mov rcx, rdi ; call r10
0x00000200003e61c7 : mov rcx, rdi ; call r12
0x0000020000009b0e : mov rcx, rdi ; call r14
0x0000020000539656 : mov rcx, rdi ; call r15
0x000002000021f1f3 : mov rcx, rdi ; call rax
0x0000020000030891 : mov rcx, rdi ; call rbx
0x0000020000003724 : mov rcx, rdi ; call rsi
0x000002000058df61 : mov rcx, rdi ; lea r8d, dword ptr [rdx + 3] ; call rsi
0x000002000058df2c : mov rcx, rdi ; lea r8d, dword ptr [rdx + 5] ; call rsi
0x000002000016d93e : mov rcx, rdi ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x000002000040f102 : mov rcx, rdi ; mov dl, 1 ; call 0x2000040b3d3
0x0000020000661a03 : mov rcx, rdi ; mov ebx, eax ; call 0x2000001dcd7
0x000002000061ef18 : mov rcx, rdi ; mov ebx, eax ; call 0x2000024d008
0x000002000000c166 : mov rcx, rdi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000062c1bb : mov rcx, rdi ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rax]
0x0000020000529c87 : mov rcx, rdi ; mov r8d, ebx ; call 0x20000157549
0x0000020000551155 : mov rcx, rdi ; mov r8d, ebx ; mov rdx, rbp ; call rax
0x0000020000401188 : mov rcx, rdi ; mov r9d, eax ; mov r8d, eax ; call rsi
0x0000020000648c42 : mov rcx, rdi ; mov rax, qword ptr [rsi + 0x38] ; call rax
0x0000020000218a78 : mov rcx, rdi ; mov rdx, qword ptr [rsp + 0x70] ; call r9
0x000002000021d23a : mov rcx, rdi ; mov rdx, rbx ; call rsi
0x000002000070812f : mov rcx, rdi ; mov rsi, rax ; call rbx
0x0000020000650aa1 : mov rcx, rdi ; xor ebx, ebx ; call 0x2000024d009
0x0000020000121e83 : mov rcx, rdi ; xor edx, edx ; call 0x2000009e097
0x00000200004715eb : mov rcx, rdi ; xor edx, edx ; call 0x2000009e098
0x00000200004f0e93 : mov rcx, rdx ; and qword ptr [rax], 0 ; jmp 0x200004f0e66
0x00000200000ca79a : mov rcx, rdx ; call 0x200000cc049
0x00000200004fdd61 : mov rcx, rdx ; call 0x2000011f4e6
0x0000020000156f75 : mov rcx, rdx ; mov rdx, qword ptr [rcx + 0x38] ; jmp rdx
0x00000200003dec29 : mov rcx, rsi ; call 0x200000095d6
0x00000200001886ca : mov rcx, rsi ; call 0x200000148e5
0x00000200004633a0 : mov rcx, rsi ; call 0x2000003f5cd
0x00000200000f2035 : mov rcx, rsi ; call 0x2000004e32d
0x0000020000484dc6 : mov rcx, rsi ; call 0x20000051079
0x0000020000435693 : mov rcx, rsi ; call 0x20000061dc6
0x00000200005bb780 : mov rcx, rsi ; call 0x200000779f5
0x00000200001b2354 : mov rcx, rsi ; call 0x2000007e635
0x0000020000536f93 : mov rcx, rsi ; call 0x20000080e7f
0x0000020000463dbc : mov rcx, rsi ; call 0x200000939a2
0x0000020000501528 : mov rcx, rsi ; call 0x2000009dc89
0x00000200004734b2 : mov rcx, rsi ; call 0x2000009e096
0x000002000047178c : mov rcx, rsi ; call 0x200000a1156
0x00000200000a1cba : mov rcx, rsi ; call 0x200000bded5
0x00000200000477c3 : mov rcx, rsi ; call 0x200000d3a75
0x000002000044a6e0 : mov rcx, rsi ; call 0x200000e5729
0x00000200004bda2a : mov rcx, rsi ; call 0x200000e7da6
0x00000200005e9ee0 : mov rcx, rsi ; call 0x200000e8069
0x00000200004c4b89 : mov rcx, rsi ; call 0x200000f13ae
0x00000200001ce4cd : mov rcx, rsi ; call 0x200000fa751
0x00000200004eeeb3 : mov rcx, rsi ; call 0x2000011bf3a
0x0000020000555762 : mov rcx, rsi ; call 0x200001319e5
0x00000200001cd526 : mov rcx, rsi ; call 0x2000013977d
0x00000200001cf84a : mov rcx, rsi ; call 0x2000013ba75
0x0000020000534f97 : mov rcx, rsi ; call 0x20000157546
0x0000020000528602 : mov rcx, rsi ; call 0x20000157886
0x00000200006c31ab : mov rcx, rsi ; call 0x20000157887
0x00000200005d3f8a : mov rcx, rsi ; call 0x200001f436a
0x00000200005e5f98 : mov rcx, rsi ; call 0x2000020cc8e
0x0000020000580d0e : mov rcx, rsi ; call 0x2000024d005
0x0000020000620fa6 : mov rcx, rsi ; call 0x2000024d006
0x00000200007a42e2 : mov rcx, rsi ; call 0x200003d2696
0x000002000040b34e : mov rcx, rsi ; call 0x200004975d5
0x00000200004eaade : mov rcx, rsi ; call 0x200004e6d71
0x00000200000f1e7a : mov rcx, rsi ; call 0x200004e73bd
0x0000020000640da6 : mov rcx, rsi ; call 0x2000063d031
0x0000020000705381 : mov rcx, rsi ; call 0x20000711599
0x00000200001e5ae6 : mov rcx, rsi ; call qword ptr [rsi]
0x00000200003f04fa : mov rcx, rsi ; call r10
0x00000200007080c8 : mov rcx, rsi ; call r12
0x0000020000055d0b : mov rcx, rsi ; call r14
0x0000020000581029 : mov rcx, rsi ; call r8
0x00000200000038cb : mov rcx, rsi ; call r9
0x000002000003ec8f : mov rcx, rsi ; call rax
0x00000200003f65fe : mov rcx, rsi ; call rdi
0x00000200004e6e46 : mov rcx, rsi ; call rdx
0x00000200002017da : mov rcx, rsi ; lea edx, dword ptr [rbx + 3] ; call r9
0x0000020000607137 : mov rcx, rsi ; lea rdx, qword ptr [rbp - 0x38] ; call 0x200004b338d
0x00000200004479d1 : mov rcx, rsi ; lea rdx, qword ptr [rsp + 0x30] ; call rax
0x0000020000022272 : mov rcx, rsi ; mov r10, qword ptr [r10 + rax*8] ; call r10
0x00000200007a8a87 : mov rcx, rsi ; mov r12d, r13d ; call 0x200003d241d
0x00000200000ebc73 : mov rcx, rsi ; mov r8, rbx ; call 0x20000037ec0
0x00000200006dc0cc : mov rcx, rsi ; mov r8d, edi ; mov rdx, rbp ; call rax
0x0000020000707ddf : mov rcx, rsi ; mov rbp, rax ; call rbx
0x000002000046e169 : mov rcx, rsi ; xor edx, edx ; call 0x2000009e098
0x00000200002446fd : mov rdi, -0x47868c00 ; mov rax, rdx ; jmp 0x20000244714
0x0000020000244aa8 : mov rdi, -0x47868c00 ; mov rax, rdx ; jmp 0x20000244abf
0x0000020000056828 : mov rdi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000130e19 : mov rdi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x00000200000036ac : mov rdi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x00000200007bd245 : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r12 ; ret
0x0000020000003810 : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x00000200001ce8b6 : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000040a2c : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x00000200006f3225 : mov rdi, qword ptr [rbp + 0x48] ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x00000200000047de : mov rdi, qword ptr [rbp + 0x60] ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x00000200004364a2 : mov rdi, qword ptr [rbp + 0x77] ; jmp 0x20000436470
0x00000200005d382c : mov rdi, qword ptr [rcx + 0x18] ; jmp 0x200004afabc
0x000002000007c87a : mov rdi, qword ptr [rdi] ; jmp 0x2000007c846
0x0000020000028ffe : mov rdi, qword ptr [rsp + 0x10] ; jmp rcx
0x0000020000053a36 : mov rdi, qword ptr [rsp + 0x10] ; mov byte ptr [r8 + 4], r9b ; ret
0x0000020000231413 : mov rdi, qword ptr [rsp + 0x10] ; mov dword ptr [r9], r11d ; ret
0x0000020000008f5e : mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000000b2ff : mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000bb0d8 : mov rdi, qword ptr [rsp + 0x20] ; ret
0x000002000001f0a0 : mov rdi, qword ptr [rsp + 0x28] ; pop r14 ; ret
0x00000200000fcf99 : mov rdi, qword ptr [rsp + 0x30] ; pop r14 ; pop r12 ; ret
0x0000020000037688 : mov rdi, qword ptr [rsp + 0x30] ; pop r15 ; pop r14 ; ret
0x000002000001f303 : mov rdi, qword ptr [rsp + 0x60] ; add rsp, 0x68 ; ret
0x0000020000199f80 : mov rdi, qword ptr [rsp + 0x60] ; jmp 0x200000b61c3
0x000002000013d317 : mov rdi, qword ptr [rsp + 8] ; mov rax, r9 ; ret
0x00000200000f6499 : mov rdi, qword ptr [rsp + 8] ; ret
0x000002000045010f : mov rdi, r8 ; mov rsi, rdx ; call 0x2000007a50d
0x00000200004b808c : mov rdi, rax ; jmp 0x200004b7fc3
0x00000200004c52d1 : mov rdi, rax ; jmp 0x200004c529c
0x0000020000448721 : mov rdi, rcx ; call 0x2000006d286
0x000002000045fafa : mov rdi, rcx ; xor ecx, ecx ; call 0x2000008e15c
0x000002000000ca16 : mov rdi, rdx ; mov rbx, rcx ; call 0x20000408c6c
0x00000200002461a3 : mov rdx, qword ptr [r14 + 0x5d0] ; mov rax, rdx ; jmp 0x200002461ba
0x0000020000786d47 : mov rdx, qword ptr [r14 + 0x5d0] ; mov rax, rdx ; jmp 0x20000786d5e
0x0000020000789635 : mov rdx, qword ptr [r14 + 0x5d0] ; mov rax, rdx ; jmp 0x2000078964c
0x000002000078a05e : mov rdx, qword ptr [r14 + 0x5d0] ; mov rax, rdx ; jmp 0x2000078a075
0x000002000078a639 : mov rdx, qword ptr [r14 + 0x5d0] ; mov rax, rdx ; jmp 0x2000078a650
0x000002000078ade7 : mov rdx, qword ptr [r14 + 0x5d0] ; mov rax, rdx ; jmp 0x2000078adfe
0x000002000078a269 : mov rdx, qword ptr [r15 + 0x5d0] ; mov rax, rdx ; jmp 0x2000078a280
0x000002000052f70d : mov rdx, qword ptr [r15 + 8] ; call 0x20000157547
0x0000020000683dba : mov rdx, qword ptr [r8 + 0x10] ; call r9
0x000002000056610e : mov rdx, qword ptr [r9 + 8] ; call r8
0x00000200001e62c2 : mov rdx, qword ptr [rax + 0x28] ; shr rdx, 0xc ; call qword ptr [rbx]
0x00000200003dc000 : mov rdx, qword ptr [rax + 0x28] ; shr rdx, 0xc ; call qword ptr [rsi]
0x00000200005cc543 : mov rdx, qword ptr [rax + 0xb8] ; call r14
0x00000200006818b3 : mov rdx, qword ptr [rax + 8] ; test rdx, rdx ; je 0x200006818c7 ; call rdx
0x000002000015d67e : mov rdx, qword ptr [rbp + 0x28] ; mov rcx, r10 ; call r10
0x0000020000656d6c : mov rdx, qword ptr [rbp + 0x30] ; mov dword ptr [rsp + 0x20], eax ; call r10
0x000002000015c2f8 : mov rdx, qword ptr [rbp + 0x38] ; mov rcx, qword ptr [rbp + 0x40] ; call rax
0x000002000015af4c : mov rdx, qword ptr [rbp + 0x48] ; mov rcx, qword ptr [rbp + 0x50] ; call rax
0x000002000015d1ab : mov rdx, qword ptr [rbp + 0x48] ; mov rcx, r11 ; call r11
0x00000200005248ec : mov rdx, qword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x0000020000587add : mov rdx, qword ptr [rbp - 0x20] ; jmp 0x200003f3cf6
0x0000020000642652 : mov rdx, qword ptr [rbp - 0x41] ; mov rcx, qword ptr [rbp + 0x67] ; call r12
0x0000020000244623 : mov rdx, qword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x2000024463a
0x00000200002449d0 : mov rdx, qword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x200002449e7
0x000002000077f4af : mov rdx, qword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x2000077f4c6
0x0000020000785d89 : mov rdx, qword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x20000785da0
0x0000020000786063 : mov rdx, qword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x2000078607a
0x000002000078638d : mov rdx, qword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x200007863a4
0x00000200007866d4 : mov rdx, qword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x200007866eb
0x0000020000786a2d : mov rdx, qword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x20000786a44
0x00000200007894c3 : mov rdx, qword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x200007894da
0x000002000078a899 : mov rdx, qword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x2000078a8b0
0x000002000078ac75 : mov rdx, qword ptr [rbx + 0x5d0] ; mov rax, rdx ; jmp 0x2000078ac8c
0x000002000062e91b : mov rdx, qword ptr [rbx + 8] ; mov ecx, eax ; call r8
0x0000020000546cbc : mov rdx, qword ptr [rbx + 8] ; mov rbx, qword ptr [rsi] ; inc rdx ; jmp 0x20000546cb0
0x0000020000146370 : mov rdx, qword ptr [rcx + 0x20] ; call rax
0x0000020000156f78 : mov rdx, qword ptr [rcx + 0x38] ; jmp rdx
0x00000200004ad6f3 : mov rdx, qword ptr [rcx] ; call 0x200000332b5
0x00000200006b7a83 : mov rdx, qword ptr [rdi + 0x38] ; mov ecx, 2 ; call rax
0x00000200006b7aa5 : mov rdx, qword ptr [rdi + 0x38] ; mov ecx, 3 ; call rax
0x0000020000186709 : mov rdx, qword ptr [rdi + 0x38] ; test rdx, rdx ; je 0x2000018671d ; call rax
0x00000200005389e0 : mov rdx, qword ptr [rdi + 0x38] ; xor ecx, ecx ; call rax
0x000002000024a54a : mov rdx, qword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x2000024a561
0x0000020000785848 : mov rdx, qword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x2000078585f
0x0000020000785ef6 : mov rdx, qword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x20000785f0d
0x00000200007861f0 : mov rdx, qword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x20000786207
0x0000020000786525 : mov rdx, qword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x2000078653c
0x0000020000786871 : mov rdx, qword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x20000786888
0x0000020000786bd7 : mov rdx, qword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x20000786bee
0x000002000078a445 : mov rdx, qword ptr [rdi + 0x5d0] ; mov rax, rdx ; jmp 0x2000078a45c
0x000002000052cd21 : mov rdx, qword ptr [rdi + 8] ; call 0x20000157547
0x0000020000683dd7 : mov rdx, qword ptr [rdx + 0x10] ; call r8
0x000002000070efdf : mov rdx, qword ptr [rdx + 0x18] ; test rdx, rdx ; jne 0x2000070efda ; ret
0x00000200000579a9 : mov rdx, qword ptr [rdx + 8] ; call qword ptr [rbx]
0x00000200004f568c : mov rdx, qword ptr [rdx + 8] ; call qword ptr [rdi]
0x0000020000147e6e : mov rdx, qword ptr [rdx + 8] ; call r10
0x00000200003fb975 : mov rdx, qword ptr [rdx + 8] ; lea r8, qword ptr [rsp + 0x58] ; call rax
0x00000200003c856a : mov rdx, qword ptr [rdx + 8] ; mov ecx, dword ptr [rsi + 0x28] ; call rax
0x000002000016d824 : mov rdx, qword ptr [rdx + rax*8] ; jmp 0x2000016d83b
0x00000200004fd51a : mov rdx, qword ptr [rdx] ; cmp rdx, r8 ; jne 0x200004fd51c ; ret
0x000002000066fe7f : mov rdx, qword ptr [rdx] ; cmp rdx, r8 ; jne 0x2000066fe7a ; ret
0x000002000043f8d3 : mov rdx, qword ptr [rsi - 8] ; call 0x2000013bb7a
0x0000020000550bae : mov rdx, qword ptr [rsp + 0x28] ; add rax, rdx ; jmp 0x20000550bcd
0x00000200001bbd02 : mov rdx, qword ptr [rsp + 0x48] ; call rax
0x0000020000218a7b : mov rdx, qword ptr [rsp + 0x70] ; call r9
0x00000200004a9c56 : mov rdx, qword ptr [rsp + 0x70] ; mov rcx, rbp ; call rdi
0x0000020000218ac8 : mov rdx, qword ptr [rsp + 0x70] ; xor ecx, ecx ; call r9
0x000002000043d061 : mov rdx, r10 ; jmp r11
0x000002000068b2b8 : mov rdx, r10 ; mov rcx, r14 ; call 0x20000157548
0x00000200006beec8 : mov rdx, r10 ; mov rcx, r15 ; call r11
0x00000200001e6058 : mov rdx, r10 ; mov rcx, rax ; call qword ptr [rax]
0x0000020000552762 : mov rdx, r11 ; mov rax, rdx ; ret
0x00000200001e5ae3 : mov rdx, r11 ; mov rcx, rsi ; call qword ptr [rsi]
0x0000020000516871 : mov rdx, r12 ; call 0x2000013bb7a
0x0000020000535423 : mov rdx, r12 ; call 0x20000157546
0x000002000013ad2a : mov rdx, r12 ; call rax
0x00000200006bfe22 : mov rdx, r12 ; mov qword ptr [rsp + 0x20], r14 ; call r10
0x00000200006dcf5c : mov rdx, r12 ; mov rcx, qword ptr [rbp - 0x61] ; call rax
0x0000020000473481 : mov rdx, r12 ; mov rcx, qword ptr [rcx + 8] ; call rax
0x0000020000088559 : mov rdx, r12 ; mov rcx, r13 ; call rax
0x000002000063371d : mov rdx, r12 ; mov rcx, r14 ; call rax
0x00000200006dbd48 : mov rdx, r12 ; mov rcx, r14 ; call rsi
0x00000200005dcb81 : mov rdx, r12 ; mov rcx, r15 ; call 0x20000668df0
0x00000200004cfc9b : mov rdx, r12 ; mov rcx, r15 ; call rax
0x0000020000458144 : mov rdx, r12 ; mov rcx, r15 ; call rdi
0x00000200003c6468 : mov rdx, r12 ; mov rcx, rbx ; call r8
0x0000020000581026 : mov rdx, r12 ; mov rcx, rsi ; call r8
0x00000200000b508b : mov rdx, r13 ; lea r8d, dword ptr [r9 + 1] ; call 0x200000d1369
0x00000200005c1fbb : mov rdx, r13 ; mov rcx, qword ptr [r13 - 8] ; call qword ptr [rax]
0x00000200000e1e2c : mov rdx, r13 ; mov rcx, r12 ; call 0x200000de058
0x00000200003e61c4 : mov rdx, r13 ; mov rcx, rdi ; call r12
0x00000200000fb31e : mov rdx, r14 ; call qword ptr [rdi]
0x00000200004d6df9 : mov rdx, r14 ; call rax
0x0000020000020d0a : mov rdx, r14 ; mov rcx, r12 ; call r15
0x000002000050178d : mov rdx, r14 ; mov rcx, r13 ; call rax
0x00000200004e1ff5 : mov rdx, r14 ; mov rcx, r15 ; call 0x2000008e260
0x00000200004e1fc0 : mov rdx, r14 ; mov rcx, r15 ; call 0x2000008e2a4
0x00000200003fbad4 : mov rdx, r14 ; mov rcx, r15 ; call rax
0x0000020000447876 : mov rdx, r14 ; mov rcx, rax ; call 0x2000006f59d
0x0000020000717933 : mov rdx, r14 ; mov rcx, rax ; call r15
0x000002000058f239 : mov rdx, r14 ; mov rcx, rbx ; call 0x200001b5df1
0x0000020000682024 : mov rdx, r14 ; mov rcx, rdi ; call 0x2000008e2a4
0x0000020000682023 : mov rdx, r14 ; mov rcx, rdi ; call 0x2000008e2a5
0x00000200006dc900 : mov rdx, r14 ; mov rcx, rsi ; call rax
0x00000200005e0a07 : mov rdx, r15 ; call 0x20000099cf9
0x00000200001f407e : mov rdx, r15 ; call 0x200001f02c5
0x00000200007d13a8 : mov rdx, r15 ; call 0x200003f7bc2
0x0000020000546774 : mov rdx, r15 ; lea rcx, qword ptr [rbp - 9] ; call r12
0x000002000070e38a : mov rdx, r15 ; mov rcx, qword ptr [rsi + 8] ; call rax
0x000002000013c3a8 : mov rdx, r15 ; mov rcx, r12 ; call r14
0x00000200006f3fdf : mov rdx, r15 ; mov rcx, r14 ; call 0x20000010274
0x00000200001cf7d6 : mov rdx, r15 ; mov rcx, rbp ; call 0x2000013ba78
0x00000200003fc10b : mov rdx, r15 ; mov rcx, rbx ; call r14
0x00000200004c4b86 : mov rdx, r15 ; mov rcx, rsi ; call 0x200000f13b1
0x000002000013c3e8 : mov rdx, r15 ; mov rcx, rsi ; call r14
0x00000200006c5d2b : mov rdx, r15 ; movzx ecx, bx ; call rax
0x000002000010cda6 : mov rdx, r8 ; call qword ptr [r8]
0x000002000012c714 : mov rdx, r8 ; call qword ptr [rbx]
0x000002000010f65e : mov rdx, r9 ; call 0x2000004b8fd
0x000002000014c39a : mov rdx, r9 ; encls ; pop rbx ; ret
0x00000200001b1731 : mov rdx, r9 ; shr rdx, 0x10 ; mov eax, edx ; jmp 0x200001b175a
0x00000200001b1789 : mov rdx, r9 ; shr rdx, 0x20 ; mov rax, rdx ; jmp 0x200001b17b3
0x00000200001b16af : mov rdx, r9 ; shr rdx, 8 ; mov eax, edx ; jmp 0x200001b16dc
0x000002000071b94a : mov rdx, rax ; add rsp, 0x38 ; jmp r8
0x000002000058da72 : mov rdx, rax ; call 0x20000009d19
0x00000200004385fd : mov rdx, rax ; call 0x2000005f306
0x00000200004385fc : mov rdx, rax ; call 0x2000005f307
0x000002000042b755 : mov rdx, rax ; call 0x200004e7a59
0x00000200001664e2 : mov rdx, rax ; call r9
0x0000020000052684 : mov rdx, rax ; jmp 0x20000052626
0x00000200004f46fb : mov rdx, rax ; mov rcx, qword ptr [rcx + 0x28] ; call 0x200003f09f5
0x0000020000006c41 : mov rdx, rax ; mov rcx, rbp ; call r14
0x00000200001e6327 : mov rdx, rax ; mov rcx, rbx ; call qword ptr [rbx]
0x000002000044fdea : mov rdx, rax ; mov rcx, rdi ; call 0x2000007e429
0x0000020000466a1a : mov rdx, rax ; mov rcx, rsi ; call r14
0x00000200004a5a45 : mov rdx, rbp ; call 0x20000081c81
0x00000200005314e8 : mov rdx, rbp ; call 0x20000157546
0x000002000062a83e : mov rdx, rbp ; call 0x2000024da46
0x000002000055115b : mov rdx, rbp ; call rax
0x00000200005f8979 : mov rdx, rbp ; mov dword ptr [rsp + 0x20], ebx ; call r10
0x0000020000707813 : mov rdx, rbp ; mov rcx, r12 ; call rax
0x000002000070258b : mov rdx, rbp ; mov rcx, r13 ; call rbx
0x000002000070f979 : mov rdx, rbp ; mov rcx, r14 ; call rax
0x00000200004661f8 : mov rdx, rbp ; mov rcx, rdi ; call 0x20000091219
0x000002000046aa82 : mov rdx, rbp ; mov rcx, rsi ; call r14
0x00000200001a94d0 : mov rdx, rbx ; call 0x20000025775
0x000002000013a108 : mov rdx, rbx ; call 0x200000863b5
0x000002000004fd90 : mov rdx, rbx ; call 0x2000009bfa5
0x00000200004b693e : mov rdx, rbx ; call 0x200000db9b6
0x000002000021d23d : mov rdx, rbx ; call rsi
0x00000200004b25b1 : mov rdx, rbx ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200003f603c : mov rdx, rbx ; mov rcx, r10 ; call rax
0x00000200007083e2 : mov rdx, rbx ; mov rcx, r14 ; call r12
0x00000200000434d3 : mov rdx, rbx ; mov rcx, r15 ; call rax
0x000002000052b4fa : mov rdx, rbx ; mov rcx, rax ; call 0x20000157549
0x000002000044874e : mov rdx, rbx ; mov rcx, rdi ; call r10
0x000002000070f576 : mov rdx, rbx ; mov rcx, rdi ; call rax
0x0000020000041dd2 : mov rdx, rbx ; mov rcx, rdi ; call rsi
0x00000200001b2351 : mov rdx, rbx ; mov rcx, rsi ; call 0x2000007e638
0x0000020000471789 : mov rdx, rbx ; mov rcx, rsi ; call 0x200000a1159
0x00000200001cf847 : mov rdx, rbx ; mov rcx, rsi ; call 0x2000013ba78
0x00000200000038c8 : mov rdx, rbx ; mov rcx, rsi ; call r9
0x000002000024c58b : mov rdx, rbx ; pop rbx ; add rsp, 8 ; jmp r8
0x000002000070e270 : mov rdx, rcx ; jne 0x2000070e27f ; xor eax, eax ; ret
0x0000020000454aff : mov rdx, rcx ; mov rcx, qword ptr [rax] ; call 0x2000007a355
0x0000020000428faa : mov rdx, rcx ; mov rcx, qword ptr [rdi + 8] ; call rax
0x000002000011e8e9 : mov rdx, rcx ; mov rcx, rdi ; call rbx
0x00000200001cd602 : mov rdx, rdi ; call 0x20000139879
0x000002000053703e : mov rdx, rdi ; call 0x20000157546
0x0000020000616e05 : mov rdx, rdi ; call 0x200001b861d
0x000002000062ad02 : mov rdx, rdi ; call 0x2000024da46
0x00000200007d0e45 : mov rdx, rdi ; call 0x200003f7bc2
0x00000200004e33ea : mov rdx, rdi ; call qword ptr [rax]
0x000002000064880c : mov rdx, rdi ; call rax
0x0000020000463820 : mov rdx, rdi ; mov cl, 1 ; call 0x20000092128
0x000002000047a1d6 : mov rdx, rdi ; mov rcx, qword ptr [rbp + 0x60] ; call 0x2000042641d
0x00000200001a794e : mov rdx, rdi ; mov rcx, r10 ; call 0x20000063bc8
0x0000020000144b1f : mov rdx, rdi ; mov rcx, r11 ; call r8
0x000002000047a264 : mov rdx, rdi ; mov rcx, r12 ; call 0x20000426524
0x00000200003fb270 : mov rdx, rdi ; mov rcx, r14 ; call 0x20000157548
0x00000200005f4935 : mov rdx, rdi ; mov rcx, r14 ; call rax
0x00000200005f498d : mov rdx, rdi ; mov rcx, r15 ; call rax
0x00000200003df18a : mov rdx, rdi ; mov rcx, rax ; call 0x2000000e825
0x0000020000530aa3 : mov rdx, rdi ; mov rcx, rax ; call 0x20000157549
0x0000020000410b65 : mov rdx, rdi ; mov rcx, rbp ; call r15
0x00000200001dbef1 : mov rdx, rdi ; mov rcx, rbp ; call rax
0x0000020000594fad : mov rdx, rdi ; mov rcx, rbx ; call 0x20000091218
0x0000020000538eb5 : mov rdx, rdi ; mov rcx, rbx ; call qword ptr [rax]
0x00000200001b9c5e : mov rdx, rdi ; mov rcx, rbx ; call r10
0x00000200000f2032 : mov rdx, rdi ; mov rcx, rsi ; call 0x2000004e330
0x00000200005f49c8 : mov rdx, rdi ; mov rcx, rsi ; call r10
0x0000020000707ddc : mov rdx, rdi ; mov rcx, rsi ; mov rbp, rax ; call rbx
0x00000200001cd5d2 : mov rdx, rdi ; shl rdx, 3 ; call 0x2000013987d
0x000002000043861b : mov rdx, rsi ; call 0x2000005f0a6
0x000002000043861a : mov rdx, rsi ; call 0x2000005f0a7
0x00000200004b498a : mov rdx, rsi ; call 0x200000d9f76
0x000002000062a7a9 : mov rdx, rsi ; call 0x2000024da46
0x000002000022bf68 : mov rdx, rsi ; call r10
0x000002000013c369 : mov rdx, rsi ; call r14
0x0000020000177730 : mov rdx, rsi ; call rax
0x000002000048530c : mov rdx, rsi ; mov ecx, ebx ; call rax
0x00000200004ee56b : mov rdx, rsi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005f49a6 : mov rdx, rsi ; mov r8d, dword ptr [rbx] ; mov rcx, rbp ; call rax
0x000002000042b825 : mov rdx, rsi ; mov rcx, r12 ; call 0x2000004fce9
0x0000020000129014 : mov rdx, rsi ; mov rcx, r15 ; call r14
0x00000200005019ed : mov rdx, rsi ; mov rcx, r15 ; call rax
0x00000200003f27ba : mov rdx, rsi ; mov rcx, rbp ; call rax
0x000002000045521d : mov rdx, rsi ; mov rcx, rbx ; call r11
0x000002000013c43d : mov rdx, rsi ; mov rcx, rbx ; call r14
0x0000020000516aed : mov rdx, rsi ; mov rcx, rdi ; call 0x2000013c1b9
0x000002000013c46d : mov rdx, rsi ; mov rcx, rdi ; call r14
0x0000020000179aa5 : mov rdx, rsi ; mov rcx, rdi ; call rbx
0x0000020000156b99 : mov rdx, rsp ; mov rcx, rax ; call 0x20000092e28
0x00000200004609fe : mov rsi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x00000200000090ae : mov rsi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rdi ; ret
0x000002000064ae9d : mov rsi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x000002000042b450 : mov rsi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000003cbc : mov rsi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x00000200004a1d2d : mov rsi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x0000020000564713 : mov rsi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000007c00 : mov rsi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rdi ; ret
0x000002000050c36a : mov rsi, qword ptr [r14] ; jmp 0x2000050c305
0x000002000070388c : mov rsi, qword ptr [rsp + 0x10] ; mov qword ptr [rdx], r11 ; ret
0x00000200000398c5 : mov rsi, qword ptr [rsp + 0x10] ; ret
0x0000020000236361 : mov rsi, qword ptr [rsp + 0x18] ; ret
0x000002000010fa23 : mov rsi, qword ptr [rsp + 0x20] ; pop r14 ; ret
0x000002000007f3a2 : mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x00000200005330e1 : mov rsi, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x00000200007c5ac9 : mov rsi, r15 ; jmp 0x200007a1d0c
0x00000200004487cc : mov rsi, r8 ; mov ebp, edx ; call 0x20000076cf8
0x000002000061f5e9 : mov rsi, r9 ; call 0x2000024da46
0x00000200003e61a2 : mov rsi, rax ; call 0x20000007c16
0x000002000071afe5 : mov rsi, rax ; call qword ptr [rdi]
0x0000020000708132 : mov rsi, rax ; call rbx
0x000002000062c669 : mov rsi, rax ; test rax, rax ; jne 0x2000062c67e ; jmp 0x2000062c63f
0x0000020000441e5d : mov rsi, rcx ; call 0x2000006d286
0x0000020000441e5c : mov rsi, rcx ; call 0x2000006d287
0x00000200001d2d10 : mov rsi, rcx ; call 0x200000eef35
0x0000020000521efe : mov rsi, rcx ; call 0x20000147f76
0x00000200001fb617 : mov rsi, rcx ; jmp 0x200001fb681
0x00000200001cd652 : mov rsi, rcx ; mov r14d, ebx ; call 0x2000013987c
0x0000020000450112 : mov rsi, rdx ; call 0x2000007a50a
0x0000020000102e09 : mov rsi, rdx ; call qword ptr [rbx]
0x00000200001dc26b : mov rsi, rdx ; mov rbx, rcx ; call qword ptr [rax]
0x0000020000147c58 : mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x000002000015658d : mov rsp, qword ptr [rsp + 0x100] ; sti ; ret
0x00000200007bcf67 : mov rsp, r11 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000053e774 : mov rsp, r11 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200007bd249 : mov rsp, r11 ; pop r12 ; ret
0x000002000053b88e : mov rsp, r11 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000053399e : mov rsp, r11 ; pop r14 ; pop r12 ; pop rbp ; ret
0x000002000012d6e4 : mov rsp, r11 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200004263d3 : mov rsp, r11 ; pop r14 ; pop r13 ; pop r12 ; ret
0x000002000023133a : mov rsp, r11 ; pop r14 ; pop r13 ; pop rbp ; ret
0x00000200000408db : mov rsp, r11 ; pop r14 ; pop r13 ; pop rdi ; ret
0x000002000003002c : mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000000ec58 : mov rsp, r11 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000003814 : mov rsp, r11 ; pop r14 ; ret
0x000002000044fddd : mov rsp, r11 ; pop r15 ; pop r13 ; pop r12 ; ret
0x00000200003f4d01 : mov rsp, r11 ; pop r15 ; pop r13 ; pop rbp ; ret
0x00000200000043ac : mov rsp, r11 ; pop r15 ; pop r14 ; pop r12 ; ret
0x0000020000017b3e : mov rsp, r11 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200000028bd : mov rsp, r11 ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000000f373 : mov rsp, r11 ; pop r15 ; pop r14 ; pop rcx ; ret
0x00000200000024c0 : mov rsp, r11 ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000432474 : mov rsp, r11 ; pop r15 ; pop r14 ; pop rsi ; ret
0x00000200002251d9 : mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000003a922 : mov rsp, r11 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200001ce8ba : mov rsp, r11 ; pop r15 ; ret
0x00000200000036b0 : mov rsp, r11 ; pop rbp ; ret
0x0000020000003cc0 : mov rsp, r11 ; pop rdi ; ret
0x0000020000567454 : mov rsp, r11 ; pop rsi ; ret
0x000002000069c086 : mov sil, al ; call 0x20000148375
0x00000200001a972e : mov spl, r14b ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000107974 : mov ss, word ptr [rax - 0x17fffffc] ; ret 0x498
0x0000020000608236 : mov ss, word ptr [rbp - 0x7cb7002f] ; ret
0x0000020000007c3d : mov ss, word ptr [rip + 0x1b800] ; add al, al ; ret
0x000002000001e4f1 : mov word ptr [r10 + 0x10], r9w ; ret
0x00000200000c8e79 : mov word ptr [r10 + 2], ax ; ret
0x0000020000445736 : mov word ptr [r10 + 2], cx ; xor eax, eax ; ret
0x000002000068bf25 : mov word ptr [r10], r9w ; mov al, 1 ; ret
0x00000200004d0df1 : mov word ptr [r12 + 4], ax ; call 0x200000faca9
0x0000020000713d96 : mov word ptr [r8 + 0xa], cx ; mov rax, r8 ; ret
0x00000200001e1e59 : mov word ptr [r8 + 0xa], cx ; ret
0x00000200001cb0f6 : mov word ptr [r8 + 2], cx ; mov al, 1 ; ret
0x00000200004e9fee : mov word ptr [r8 + 2], r9w ; xor eax, eax ; ret
0x000002000044fe84 : mov word ptr [r8 + 4], dx ; ret
0x00000200001aaf69 : mov word ptr [r8], ax ; mov eax, 0xc0000095 ; ret
0x00000200000f5d2b : mov word ptr [r8], ax ; ret
0x00000200000f84dc : mov word ptr [r8], ax ; xor eax, eax ; ret
0x00000200000f5cc5 : mov word ptr [r8], r9w ; jmp 0x200000f5c93
0x000002000016df0b : mov word ptr [r9 + 0x68], cx ; ret
0x00000200003e7d13 : mov word ptr [r9 + 0x938], ax ; ret
0x00000200003e7d0a : mov word ptr [r9 + 0x938], r8w ; ret
0x000002000067113b : mov word ptr [r9 + 8], dx ; add rsp, 0x28 ; ret
0x000002000016efe8 : mov word ptr [rax + 0x16e064], es ; add rcx, r8 ; jmp rcx
0x0000020000490591 : mov word ptr [rax + 0x48f878], es ; add rcx, r8 ; jmp rcx
0x00000200004a5200 : mov word ptr [rax + 0x4a43b4], es ; add rcx, r8 ; jmp rcx
0x00000200004cc1f1 : mov word ptr [rax + 0x4cc67c], es ; add rcx, r8 ; jmp rcx
0x00000200004e1541 : mov word ptr [rax + 0x4e1190], es ; add rcx, r8 ; jmp rcx
0x00000200004e1886 : mov word ptr [rax + 0x4e11c8], es ; add rcx, r8 ; jmp rcx
0x00000200001f3c07 : mov word ptr [rax + rax*2], fs ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x0000020000439759 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add al, ch ; in al, dx ; in al, dx ; ret 0x8bff
0x00000200005e9732 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000007073e : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000b3608 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x3b4c
0x0000020000458280 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x00000200004e3efd : mov word ptr [rax + rax*4], fs ; add dword ptr [rax], eax ; add al, ch ; clc ; ret
0x00000200004e3fa9 : mov word ptr [rax + rax*4], fs ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000200004e4060 : mov word ptr [rax + rax*4], fs ; add dword ptr [rax], eax ; add al, ch ; xchg eax, ebp ; ret 0xffc0
0x000002000046bf53 : mov word ptr [rax + rax*8], fs ; add byte ptr [rax], al ; add al, ch ; shl bh, cl ; ret 0x48ff
0x000002000004d418 : mov word ptr [rax + rax], fs ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x00000200004c5cb9 : mov word ptr [rax + rbp*8], fs ; add byte ptr [rax], al ; add al, ch ; cmp al, 0xa6 ; ret 0xbaff
0x00000200005d889a : mov word ptr [rax + rbp*8], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b41
0x000002000023062e : mov word ptr [rax + rbp*8], fs ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b41
0x00000200004d9d33 : mov word ptr [rax + rbx*2], fs ; add eax, dword ptr [rax] ; add al, ch ; ret 0xb8fc
0x00000200000e7182 : mov word ptr [rax + rbx*4], fs ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200003e3163 : mov word ptr [rax + rbx*4], fs ; add byte ptr [rax], al ; add al, ch ; ret 0xf1d
0x00000200006ca236 : mov word ptr [rax + rbx*4], fs ; add byte ptr [rax], al ; add al, ch ; ret 0xffff
0x00000200001a6064 : mov word ptr [rax + rbx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000200004ff66e : mov word ptr [rax + rbx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000009ce9b : mov word ptr [rax + rbx*4], fs ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200004cbf10 : mov word ptr [rax + rbx*4], fs ; add eax, dword ptr [rax] ; add al, ch ; in eax, 0x43 ; ret 0x4cff
0x00000200004cca6d : mov word ptr [rax + rbx*4], fs ; add eax, dword ptr [rax] ; add al, ch ; mov byte ptr [rax], bh ; ret 0x48ff
0x0000020000064f83 : mov word ptr [rax + rbx*8], fs ; add byte ptr [rax], al ; add al, ch ; ret 0x879
0x000002000059ecb9 : mov word ptr [rax + rcx*2], fs ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x000002000006c103 : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add al, ch ; ret 5
0x00000200006991ff : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000418b12 : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200000ad0cf : mov word ptr [rax + rcx*8], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200007a4f65 : mov word ptr [rax + rcx], fs ; add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; ret 0x8489
0x00000200005ca666 : mov word ptr [rax + rdi*2], fs ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000200003e681b : mov word ptr [rax + rdi*8], fs ; add byte ptr [rax], al ; add al, ch ; ret 0xc1fa
0x0000020000652a58 : mov word ptr [rax + rdi], fs ; add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x00000200004c4914 : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add al, ch ; add ebx, ecx ; ret 0xe9ff
0x00000200004c4e2d : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add al, ch ; call 0x200344c1107
0x0000020000498d38 : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add al, ch ; pop rcx ; ret
0x0000020000052d82 : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200000dc7cb : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000017703d : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200005d914b : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add cl, ch ; scasd eax, dword ptr [rdi] ; ret
0x00000200005d9111 : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; ret
0x0000020000017930 : mov word ptr [rax + rdx*8], fs ; add byte ptr [rax], al ; add al, ch ; call qword ptr [r11]
0x00000200004e1f66 : mov word ptr [rax + rsi*2], fs ; add dword ptr [rax], eax ; add al, ch ; outsd dx, dword ptr [rsi] ; cld ; ret
0x000002000072bb6e : mov word ptr [rax + rsi*4], fs ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000432f6f : mov word ptr [rax + rsi*4], fs ; add dword ptr [rax], eax ; add al, ch ; ret 0x1367
0x000002000022fd71 : mov word ptr [rax - 0x75], cs ; ret 0xc148
0x00000200003ed9f5 : mov word ptr [rax], dx ; ret
0x000002000011d989 : mov word ptr [rax], es ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004527e8 : mov word ptr [rax], es ; add byte ptr [rax], al ; call 0x2000007d087
0x0000020000086510 : mov word ptr [rax], es ; add byte ptr [rax], al ; ret
0x000002000046b48a : mov word ptr [rax], fs ; add al, byte ptr [rax] ; add al, ch ; jmp 0x2000046b45e
0x000002000008e41c : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret
0x00000200004c31cc : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x000002000046554e : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200004656fa : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x98e8
0x00000200006e79a7 : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret 0xf48
0x000002000066dd80 : mov word ptr [rax], gs ; mov eax, 0xff000000 ; ret 0x163b
0x00000200000081bc : mov word ptr [rax], ss ; cmp al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ad1a7 : mov word ptr [rbp + 0x12], ss ; add dh, dh ; ret
0x000002000041b601 : mov word ptr [rbp + 0x41c324], es ; add rcx, r13 ; jmp rcx
0x000002000048c37a : mov word ptr [rbp + 0x48b3ec], es ; add rcx, r13 ; jmp rcx
0x00000200000f70a9 : mov word ptr [rbp + 0xf6314], es ; add rcx, rbp ; jmp rcx
0x000002000052ca07 : mov word ptr [rbp - 0x20], ax ; call 0x20000157547
0x00000200001579b6 : mov word ptr [rbx + 0x14], ax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000008344b : mov word ptr [rbx + 0x824f0], es ; add rcx, rbx ; jmp rcx
0x0000020000494c93 : mov word ptr [rbx + 2], ax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006a7565 : mov word ptr [rbx + 8], ax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005f0ba : mov word ptr [rbx], ax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000648ed0 : mov word ptr [rbx], ds ; ret
0x0000020000235760 : mov word ptr [rbx], r10w ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001c0ba2 : mov word ptr [rbx], ss ; add byte ptr [rax - 0x73], cl ; mov r8b, 0xe8 ; stosb byte ptr [rdi], al ; ret 0xffff
0x00000200005198e0 : mov word ptr [rbx], ss ; ret 0x4cff
0x0000020000120387 : mov word ptr [rcx + 0x10], ax ; mov qword ptr [rcx + 8], r8 ; ret
0x00000200001d48b4 : mov word ptr [rcx + 0x10], dx ; mov qword ptr [rcx + 8], r8 ; ret
0x00000200000af32c : mov word ptr [rcx + 0x3345000e], ss ; sal dh, cl ; ret 0xf1e
0x000002000001c0f9 : mov word ptr [rcx + 0x3490001], dr0 ; iretd ; jmp rcx
0x00000200000fce64 : mov word ptr [rcx + 0x36], dx ; ret
0x0000020000211f73 : mov word ptr [rcx + 0x48], ax ; ret
0x000002000005a30d : mov word ptr [rcx + 0x59650], es ; add rcx, r9 ; jmp rcx
0x000002000005a3d9 : mov word ptr [rcx + 0x596a0], es ; add rcx, r9 ; jmp rcx
0x000002000053bbe8 : mov word ptr [rcx + 0xa4], ax ; ret
0x00000200006f40c5 : mov word ptr [rcx + 0xd6], ax ; ret
0x0000020000036715 : mov word ptr [rcx + 2], ax ; ret
0x000002000000969d : mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x00000200004b30d5 : mov word ptr [rcx + 2], dx ; mov dword ptr [rcx + 4], eax ; ret
0x0000020000517563 : mov word ptr [rcx + 2], dx ; xor eax, eax ; ret
0x000002000005f090 : mov word ptr [rcx + 4], ax ; ret
0x00000200004aeb82 : mov word ptr [rcx + 6], ax ; xor eax, eax ; ret
0x0000020000087cd6 : mov word ptr [rcx + rax], cs ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005bc7a1 : mov word ptr [rcx - 0x74b70017], gs ; ret
0x000002000005fa6f : mov word ptr [rcx], ax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005f422 : mov word ptr [rcx], ax ; ret
0x0000020000217268 : mov word ptr [rcx], ax ; xor eax, eax ; ret
0x00000200003ed9f2 : mov word ptr [rcx], dx ; mov word ptr [rax], dx ; ret
0x00000200001d291f : mov word ptr [rcx], dx ; ret
0x000002000013d2a3 : mov word ptr [rcx], r10w ; mov rax, r9 ; ret
0x0000020000045290 : mov word ptr [rcx], r11w ; ret
0x000002000001c0f7 : mov word ptr [rdi + 0x1b18c], cs ; add rcx, r15 ; jmp rcx
0x000002000059ef2d : mov word ptr [rdi + 0x59e5be], es ; add rcx, r15 ; jmp rcx
0x00000200006d173d : mov word ptr [rdi + 2], dx ; lea ecx, dword ptr [rdx - 0xf] ; call 0x2000024da49
0x00000200001084f6 : mov word ptr [rdi - 0x75ffffff], gs ; ret
0x0000020000154830 : mov word ptr [rdi], ds ; add byte ptr [rax], al ; nop ; ret
0x000002000001bb7e : mov word ptr [rdx + 0x14], ax ; ret
0x0000020000150b86 : mov word ptr [rdx + 0x2cc0], ax ; ret
0x000002000002f169 : mov word ptr [rdx + 0x2e460], es ; add rcx, rdx ; jmp rcx
0x00000200003c854e : mov word ptr [rdx + 0x3c7744], es ; add rcx, rdx ; jmp rcx
0x0000020000041c1a : mov word ptr [rdx + 0x40c34], es ; add rcx, rdx ; jmp rcx
0x0000020000462d17 : mov word ptr [rdx + 0x462470], es ; add rcx, rdx ; jmp rcx
0x0000020000473b93 : mov word ptr [rdx + 0x472f38], es ; add rcx, rdx ; jmp rcx
0x00000200004754bd : mov word ptr [rdx + 0x4767d8], es ; add rcx, rdx ; jmp rcx
0x000002000047bc5e : mov word ptr [rdx + 0x47b334], es ; add rcx, rdx ; jmp rcx
0x000002000047cf9e : mov word ptr [rdx + 0x47c794], dr0 ; add rcx, rdx ; jmp rcx
0x00000200004847d5 : mov word ptr [rdx + 0x484c9c], ds ; add rcx, rdx ; jmp rcx
0x000002000048481c : mov word ptr [rdx + 0x484f7c], es ; add rcx, rdx ; jmp rcx
0x0000020000486374 : mov word ptr [rdx + 0x4856b0], es ; add rcx, rdx ; jmp rcx
0x00000200004d6e7e : mov word ptr [rdx + 0x4d649c], es ; add rcx, rdx ; jmp rcx
0x00000200004d71e9 : mov word ptr [rdx + 0x4d64fc], es ; add rcx, rdx ; jmp rcx
0x00000200004d7379 : mov word ptr [rdx + 0x4d655c], es ; add rcx, rdx ; jmp rcx
0x00000200004d761a : mov word ptr [rdx + 0x4d6e78], es ; add rcx, rdx ; jmp rcx
0x000002000064da35 : mov word ptr [rdx + 0x64caa0], es ; add rcx, rdx ; jmp rcx
0x00000200006e5239 : mov word ptr [rdx + 0x6e4570], es ; add rcx, r10 ; jmp rcx
0x00000200006f3c16 : mov word ptr [rdx + 0x6f2dfc], es ; add rcx, rdx ; jmp rcx
0x0000020000075560 : mov word ptr [rdx + 0x74ca4], es ; add rcx, rdx ; jmp rcx
0x0000020000093ff0 : mov word ptr [rdx + 0x936c0], cs ; add rcx, rdx ; jmp rcx
0x0000020000094970 : mov word ptr [rdx + 0x940d0], cs ; add rcx, rdx ; jmp rcx
0x0000020000095ccc : mov word ptr [rdx + 0x96678], cs ; add rcx, rdx ; jmp rcx
0x000002000054e189 : mov word ptr [rdx + 0xa], ax ; and word ptr [rdx + 8], cx ; ret
0x000002000060d48a : mov word ptr [rdx + 2], ax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007124a5 : mov word ptr [rdx + 2], r8w ; ret
0x00000200004202d5 : mov word ptr [rdx + 2], r9w ; jmp 0x200004202a5
0x0000020000157990 : mov word ptr [rdx + 4], ax ; ret
0x0000020000471ab0 : mov word ptr [rdx - 0x32], ds ; dec dword ptr [rax - 0x75] ; ret
0x0000020000507082 : mov word ptr [rdx - 0x7b], cs ; mov al, 0x2f ; add byte ptr [rbp + 2], al ; ret
0x000002000008e08b : mov word ptr [rdx], ax ; mov byte ptr [rdx + 2], cl ; xor eax, eax ; ret
0x0000020000517445 : mov word ptr [rdx], ax ; ret
0x000002000045097f : mov word ptr [rdx], ax ; xor eax, eax ; ret
0x00000200002117f7 : mov word ptr [rdx], cx ; add qword ptr [r8], 2 ; ret
0x00000200001059be : mov word ptr [rdx], ds ; fcomp dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200000f2601 : mov word ptr [rdx], ds ; str word ptr [rax + 3] ; ret 0xe0ff
0x0000020000044b2e : mov word ptr [rdx], es ; add byte ptr [rax], al ; ret
0x00000200007124a1 : mov word ptr [rdx], r8w ; mov word ptr [rdx + 2], r8w ; ret
0x000002000012f292 : mov word ptr [rdx], r9w ; jmp 0x2000012f260
0x000002000022cfc1 : mov word ptr [rdx], ss ; add byte ptr [rdx + 0x1d8b48d0], cl ; ret
0x000002000012d66d : mov word ptr [rip + 0x1f7d84], cx ; ret
0x000002000001b2a1 : mov word ptr [rip + 0x3b490000], es ; ret 0xa375
0x00000200007b4df7 : mov word ptr [rip - 0x4b3ce0], 0x3232 ; ret
0x000002000059b230 : mov word ptr [rip - 0x74bbffeb], gs ; ret
0x000002000048c338 : mov word ptr [rsi + 0x48b3b0], es ; add rcx, r14 ; jmp rcx
0x00000200006d1822 : mov word ptr [rsi + 2], dx ; lea ecx, dword ptr [rdx - 0x23] ; call 0x2000024da49
0x0000020000628ecb : mov word ptr [rsi], dx ; xor edx, edx ; call 0x2000024d008
0x000002000010b16a : mov word ptr [rsi], es ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000200000ba01e : mov word ptr [rsi], fs ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200003debf9 : mov word ptr [rsi], r12w ; call 0x200000095d7
0x0000020000108f0d : mov word ptr [rsp + 0x3c], r14w ; call r9
0x000002000062a4a6 : movabs al, byte ptr [0x158d482824448948] ; ret
0x00000200001c46b7 : movabs al, byte ptr [0x274c98548000000] ; call rcx
0x0000020000081cb7 : movabs al, byte ptr [0x28c4834801b00010] ; ret
0x00000200001cd7ea : movabs al, byte ptr [0x28c48348c033fff8] ; ret
0x00000200001ba88c : movabs al, byte ptr [0x28c48348ccfff3a5] ; ret
0x000002000042ee52 : movabs al, byte ptr [0x2bbbcd058d48cc] ; ret
0x0000020000709817 : movabs al, byte ptr [0x344f98b48000000] ; ret 0xf28b
0x0000020000248522 : movabs al, byte ptr [0x34cd03348000005] ; ret 0x8d49
0x0000020000051f8f : movabs al, byte ptr [0x3b415024442b0036] ; ret 0x5c76
0x0000020000249047 : movabs al, byte ptr [0x3b419c5589d18b41] ; ret
0x00000200001b5f74 : movabs al, byte ptr [0x3b48008b48000000] ; ret 0xf48
0x0000020000665e75 : movabs al, byte ptr [0x3b4dff3345000000] ; ret
0x00000200006d399a : movabs al, byte ptr [0x419b058b48000000] ; ret 0x48ff
0x00000200005060fa : movabs al, byte ptr [0x5b20c48348000e41] ; ret
0x0000020000656157 : movabs al, byte ptr [0x5b20c48348c033ff] ; ret
0x00000200006f306c : movabs al, byte ptr [0x5b30c48348ff91b6] ; ret
0x00000200004be417 : movabs al, byte ptr [0x5d5e415f41000001] ; ret
0x000002000054b23a : movabs al, byte ptr [0x5f20c48348000000] ; ret
0x00000200001780a2 : movabs al, byte ptr [0x6348c3950f000000] ; ret
0x00000200000ada6b : movabs al, byte ptr [0x814910558b4d000e] ; ret 0x1a0
0x00000200004aa0a0 : movabs al, byte ptr [0x854102894c000003] ; ret
0x00000200001c5957 : movabs al, byte ptr [0x8affeaf831e80015] ; ret
0x000002000021c8cd : movabs al, byte ptr [0x8b444174db850003] ; ret
0x0000020000704d09 : movabs al, byte ptr [0x8b4ccfb60f44ffb1] ; ret
0x000002000052aeb9 : movabs al, byte ptr [0x8b4ce9d149000000] ; ret
0x00000200006ddfa5 : movabs al, byte ptr [0x8b78246c8b48ffa6] ; ret
0x000002000060ddba : movabs al, byte ptr [0x940fce8b48000000] ; ret
0x00000200007bc26d : movabs al, byte ptr [0x9d0ce8d233000000] ; ret 0x66ff
0x000002000014b2a5 : movabs al, byte ptr [0xad92e9000001] ; ret
0x000002000061a2d8 : movabs al, byte ptr [0xbc1d158d4800001b] ; ret
0x0000020000530eea : movabs al, byte ptr [0xc00000bbb80008a2] ; ret
0x00000200001492a5 : movabs al, byte ptr [0xcd92e9000000] ; ret
0x00000200004327b0 : movabs al, byte ptr [0xd145e848244c8d48] ; ret 0x48ff
0x000002000017624a : movabs al, byte ptr [0xe5e990ffeab160e8] ; ret 0xfff9
0x00000200006b8d6a : movabs al, byte ptr [0xedcb058b48000001] ; ret
0x0000020000080c51 : movabs byte ptr [0x34901894c0010ab], al ; ret 0x8948
0x000002000049b716 : movabs byte ptr [0x3b10458d41000001], al ; ret
0x000002000011492a : movabs byte ptr [0x5b40c48348fff57d], al ; ret
0x0000020000115a3d : movabs byte ptr [0x5b5f58c48348002b], al ; ret
0x000002000057cc54 : movabs byte ptr [0x5d30c4834890ffcd], al ; ret
0x000002000047095a : movabs byte ptr [0x5f20c48348ffddc6], al ; ret
0x00000200007b4cc5 : movabs byte ptr [0x83480873894cff8d], al ; ret
0x0000020000681d8c : movabs byte ptr [0x8b4024748b48ff98], al ; ret
0x000002000066db1c : movabs byte ptr [0x8b48246c8b48ffa7], al ; ret
0x00000200007035da : movabs byte ptr [0x8b48dbf748ffa4dc], al ; ret
0x00000200006ae98a : movabs byte ptr [0x8b4911558d440009], al ; ret 0x48f0
0x0000020000704a83 : movabs byte ptr [0x8b4ccdb60f44ffb1], al ; ret
0x00000200003f2d19 : movabs byte ptr [0x8b60245c8d4cffe5], al ; ret
0x00000200001ce912 : movabs byte ptr [0x8bffe404bae8fff8], al ; ret
0x0000020000433532 : movabs byte ptr [0x9d43e8ce8b48ffc3], al ; ret
0x00000200004adbed : movabs byte ptr [0xa1a8e8cf8b48ffc3], al ; ret
0x000002000014b2e5 : movabs byte ptr [0xad52e9000001], al ; ret
0x00000200001c62c0 : movabs byte ptr [0xb0474f684400017], al ; ret
0x000002000009467e : movabs byte ptr [0xc28b48deebc28b48], al ; jmp 0x2000009467a
0x00000200001492e5 : movabs byte ptr [0xcd52e9000000], al ; ret
0x0000020000635d08 : movabs byte ptr [0xf6000000e4938bff], al ; ret 0x7502
0x0000020000562570 : movabs byte ptr [0xfe4c588ad233ffd9], al ; ret
0x0000020000421937 : movabs dword ptr [0x10880fff85000000], eax ; ret 0x17
0x000002000066f229 : movabs dword ptr [0x1b80673c1], eax ; ret
0x0000020000510735 : movabs dword ptr [0x5b20c48348ffbd8f], eax ; ret
0x00000200007115ed : movabs dword ptr [0x5b30c48348ff92bc], eax ; ret
0x000002000066f2c9 : movabs dword ptr [0x5b40c48348ffacb9], eax ; ret
0x00000200001b4961 : movabs dword ptr [0x5b40c48348ffecc3], eax ; ret
0x000002000011174e : movabs dword ptr [0x5b50c48348000646], eax ; ret
0x0000020000622dd5 : movabs dword ptr [0x5b5d38c4834890ff], eax ; ret
0x0000020000136e8e : movabs dword ptr [0x5e4120c48348001e], eax ; ret
0x00000200005c2bc8 : movabs dword ptr [0x6e997810848aff], eax ; ret
0x000002000043c36f : movabs dword ptr [0x7512e9c033450016], eax ; ret
0x0000020000126358 : movabs dword ptr [0x8348c1ff48000001], eax ; ret 0x4804
0x000002000046ed78 : movabs dword ptr [0x8348ca03414b72c7], eax ; ret
0x000002000067a899 : movabs dword ptr [0x8b44cb8b44ffeb49], eax ; ret
0x000002000065d5b7 : movabs dword ptr [0x8b483824748b48ff], eax ; ret
0x000002000051877c : movabs dword ptr [0x8b48ffcb83480009], eax ; ret
0x0000020000684b50 : movabs dword ptr [0x8b4c1175c63b49ff], eax ; ret
0x000002000045dd11 : movabs dword ptr [0x8b7024748b48ffce], eax ; ret
0x0000020000724355 : movabs dword ptr [0x8bbf3061830472ed], eax ; ret
0x000002000014b305 : movabs dword ptr [0xad32e9000001], eax ; ret
0x000002000008390b : movabs dword ptr [0xc032c301b00373c1], eax ; ret
0x0000020000149305 : movabs dword ptr [0xcd32e9000000], eax ; ret
0x00000200000ddc69 : movabs dword ptr [0xd8d48f88b000003], eax ; ret 0x18dd
0x00000200006ccd8f : movabs dword ptr [0xff02c683493e73c8], eax ; ret
0x00000200005838a8 : movabs dword ptr [0xff0674f685ffe645], eax ; ret 0xeed1
0x00000200003cfc75 : movabs dword ptr [0xff49c1ff41147310], eax ; ret 0x3b45
0x0000020000726c88 : movabs dword ptr [0xfff70349ee2b49ff], eax ; ret
0x00000200000b68ce : movabs eax, dword ptr [0x1b8c3c033] ; ret
0x000002000007f4e2 : movabs eax, dword ptr [0x28c4834801b00006] ; ret
0x00000200006466f9 : movabs eax, dword ptr [0x5b20c48348c38bff] ; ret
0x00000200003fb2cb : movabs eax, dword ptr [0x5b70c48348ffd3f9] ; ret
0x00000200001f7ff3 : movabs eax, dword ptr [0x81e81875c085ffef] ; ret
0x00000200005caebb : movabs eax, dword ptr [0x89e8cc8b49ffb1d1] ; ret
0x000002000023982f : movabs eax, dword ptr [0x8a3824748b48000b] ; ret
0x0000020000108977 : movabs eax, dword ptr [0x8b68245c8b0006a8] ; ret
0x000002000014b2c5 : movabs eax, dword ptr [0xad72e9000001] ; ret
0x00000200007d2a6b : movabs eax, dword ptr [0xb9e85a4a8dfffee7] ; ret 0xff83
0x00000200001492c5 : movabs eax, dword ptr [0xcd72e9000000] ; ret
0x00000200006e2e30 : movabs eax, dword ptr [0xe8ce8b49d233ffb6] ; ret
0x00000200004aa0f1 : movabs eax, dword ptr [0xffbfffff00000518] ; ret
0x00000200001364f2 : movaps xmm6, xmmword ptr [r11 - 0x10] ; mov rsp, r11 ; pop rbp ; ret
0x000002000022ba57 : movaps xmm6, xmmword ptr [r11 - 0x10] ; mov rsp, r11 ; pop rdi ; ret
0x00000200001364f3 : movaps xmm6, xmmword ptr [rbx - 0x10] ; mov rsp, r11 ; pop rbp ; ret
0x000002000022ba58 : movaps xmm6, xmmword ptr [rbx - 0x10] ; mov rsp, r11 ; pop rdi ; ret
0x00000200002331b3 : movaps xmm7, xmmword ptr [rsp + 0x40] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000535663 : movd eax, mm0 ; call rax
0x0000020000135dad : movd eax, mm1 ; not eax ; inc eax ; ret
0x0000020000135dac : movd eax, xmm1 ; not eax ; inc eax ; ret
0x0000020000535662 : movd rax, mm0 ; call rax
0x00000200006d68b9 : movdqu xmmword ptr [r10], xmm0 ; add rsp, 0x28 ; ret
0x000002000021dd48 : movdqu xmmword ptr [r8 + 0x10], xmm0 ; ret
0x000002000044f174 : movdqu xmmword ptr [r8], xmm0 ; mov eax, edx ; ret
0x000002000023280d : movdqu xmmword ptr [rax + 0x10], xmm5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000069028f : movdqu xmmword ptr [rax + 8], xmm0 ; ret
0x0000020000496e54 : movdqu xmmword ptr [rax + rcx*8], xmm0 ; ret
0x000002000051b672 : movdqu xmmword ptr [rbp + 0x27], xmm0 ; call 0x200001480d8
0x0000020000525b73 : movdqu xmmword ptr [rbp + 0x37], xmm0 ; call 0x200001480d8
0x00000200003ed386 : movdqu xmmword ptr [rbp + 0x3f], xmm0 ; call 0x20000469687
0x0000020000520138 : movdqu xmmword ptr [rbp - 0x10], xmm0 ; call 0x2000014a258
0x000002000051da2e : movdqu xmmword ptr [rbp - 0x11], xmm0 ; call 0x200001484f8
0x0000020000510a28 : movdqu xmmword ptr [rbp - 0x11], xmm0 ; call r12
0x0000020000525084 : movdqu xmmword ptr [rbp - 0x31], xmm0 ; call 0x200001480d8
0x0000020000558831 : movdqu xmmword ptr [rbp - 0x31], xmm0 ; call 0x200004a4a7f
0x0000020000521d2d : movdqu xmmword ptr [rbp - 0x50], xmm0 ; call 0x200001484f8
0x000002000069c69c : movdqu xmmword ptr [rbp - 0x68], xmm0 ; call 0x20000148937
0x0000020000525ec4 : movdqu xmmword ptr [rbp - 9], xmm0 ; call 0x20000148238
0x000002000061c4fd : movdqu xmmword ptr [rcx + 0x20], xmm0 ; ret
0x0000020000496e3d : movdqu xmmword ptr [rcx + rax*8], xmm0 ; ret
0x0000020000052b9b : movdqu xmmword ptr [rcx], xmm0 ; ret
0x0000020000457416 : movdqu xmmword ptr [rdx + r8*8], xmm0 ; jmp 0x200004573c7
0x0000020000109e3e : movdqu xmmword ptr [rdx], xmm0 ; add qword ptr [rdx + 8], -8 ; ret
0x0000020000455d1f : movdqu xmmword ptr [rdx], xmm0 ; mov eax, r10d ; ret
0x0000020000712469 : movdqu xmmword ptr [rdx], xmm0 ; ret
0x000002000072655c : movdqu xmmword ptr [rip - 0x4014cc], xmm0 ; ret
0x0000020000522448 : movdqu xmmword ptr [rsp + 0x50], xmm0 ; call 0x20000148639
0x000002000041f1fc : movnti dword ptr [rcx - 0x75], eax ; or al, 0xb ; ret 0x189
0x0000020000151a3a : movnti dword ptr [rcx], eax ; sfence ; ret
0x0000020000151a39 : movnti qword ptr [rcx], rax ; sfence ; ret
0x00000200006d68ba : movq qword ptr [r10], mm0 ; add rsp, 0x28 ; ret
0x000002000021dd49 : movq qword ptr [r8 + 0x10], mm0 ; ret
0x00000200002184c5 : movq qword ptr [r8], mm0 ; mov eax, 1 ; ret
0x000002000044f175 : movq qword ptr [r8], mm0 ; mov eax, edx ; ret
0x000002000021dd4a : movq qword ptr [rax + 0x10], mm0 ; ret
0x000002000023280e : movq qword ptr [rax + 0x10], mm5 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000690290 : movq qword ptr [rax + 8], mm0 ; ret
0x0000020000496e55 : movq qword ptr [rax + rcx*8], mm0 ; ret
0x00000200002184c6 : movq qword ptr [rax], mm0 ; mov eax, 1 ; ret
0x000002000044f176 : movq qword ptr [rax], mm0 ; mov eax, edx ; ret
0x000002000051b673 : movq qword ptr [rbp + 0x27], mm0 ; call 0x200001480d7
0x0000020000525b74 : movq qword ptr [rbp + 0x37], mm0 ; call 0x200001480d7
0x00000200003ed387 : movq qword ptr [rbp + 0x3f], mm0 ; call 0x20000469686
0x0000020000520139 : movq qword ptr [rbp - 0x10], mm0 ; call 0x2000014a257
0x000002000051da2f : movq qword ptr [rbp - 0x11], mm0 ; call 0x200001484f7
0x0000020000510a29 : movq qword ptr [rbp - 0x11], mm0 ; call r12
0x0000020000525085 : movq qword ptr [rbp - 0x31], mm0 ; call 0x200001480d7
0x0000020000558832 : movq qword ptr [rbp - 0x31], mm0 ; call 0x200004a4a7e
0x0000020000521d2e : movq qword ptr [rbp - 0x50], mm0 ; call 0x200001484f7
0x000002000069c69d : movq qword ptr [rbp - 0x68], mm0 ; call 0x20000148936
0x0000020000525ec5 : movq qword ptr [rbp - 9], mm0 ; call 0x20000148237
0x000002000061c4fe : movq qword ptr [rcx + 0x20], mm0 ; ret
0x00000200001528e3 : movq qword ptr [rcx + 0xf0], mm7 ; xor eax, eax ; ret
0x0000020000496e3e : movq qword ptr [rcx + rax*8], mm0 ; ret
0x0000020000052b9c : movq qword ptr [rcx], mm0 ; ret
0x0000020000457417 : movq qword ptr [rdx + r8*8], mm0 ; jmp 0x200004573c6
0x0000020000457418 : movq qword ptr [rdx + rax*8], mm0 ; jmp 0x200004573c5
0x0000020000109e3f : movq qword ptr [rdx], mm0 ; add qword ptr [rdx + 8], -8 ; ret
0x00000200006d68bb : movq qword ptr [rdx], mm0 ; add rsp, 0x28 ; ret
0x0000020000455d20 : movq qword ptr [rdx], mm0 ; mov eax, r10d ; ret
0x000002000071246a : movq qword ptr [rdx], mm0 ; ret
0x000002000072655d : movq qword ptr [rip - 0x4014cc], mm0 ; ret
0x0000020000522449 : movq qword ptr [rsp + 0x50], mm0 ; call 0x20000148638
0x0000020000535661 : movq rax, xmm0 ; call rax
0x00000200001bf35b : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; call rax
0x000002000046d977 : movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001dfaa4 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000042c70b : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x00000200006df2de : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200000a8fce : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000149325 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add cl, ch ; adc cl, ch ; add byte ptr [rax], al ; ret
0x00000200004952c9 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000078b78 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000200000bb750 : movsb byte ptr [rdi], byte ptr [rsi] ; add eax, 0x3b660000 ; ret
0x000002000015658f : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0 ; add dword ptr [rax], eax ; add bl, bh ; ret
0x00000200005d8d08 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add cl, ch ; out dx, al ; ret 0xffee
0x0000020000095d24 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x98 ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200000972bc : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x98 ; add al, byte ptr [rax] ; add cl, ch ; ret 0xfffe
0x00000200002395a3 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x9a ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000004d222 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000184890 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret
0x000002000017e117 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200007108c7 : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x00000200007035dc : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 9] ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200006a8eba : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rbx - 0xcbdbbc] ; ret
0x000002000056888f : movsb byte ptr [rdi], byte ptr [rsi] ; fcos ; ret
0x000002000070905d : movsb byte ptr [rdi], byte ptr [rsi] ; inc dword ptr [rcx + 0x3b] ; ret
0x00000200001245d8 : movsb byte ptr [rdi], byte ptr [rsi] ; jb 0x200001245e5 ; add dh, dh ; ret 0x7502
0x000002000054dbe6 : movsb byte ptr [rdi], byte ptr [rsi] ; mov edi, 0xc48348ff ; pop rax ; ret
0x00000200003e8f58 : movsb byte ptr [rdi], byte ptr [rsi] ; out 0xff, al ; add rsp, 0x28 ; ret
0x00000200006f7978 : movsb byte ptr [rdi], byte ptr [rsi] ; push rbp ; ret 0x41ff
0x000002000009bcb8 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000200003e732e : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x19
0x00000200005156ee : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48ff
0x000002000062c513 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xccff
0x00000200006b4908 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffbc
0x00000200004d0df8 : movsb byte ptr [rdi], byte ptr [rsi] ; sahf ; ret 0x41ff
0x0000020000642bb2 : movsb byte ptr [rdi], byte ptr [rsi] ; sar bh, 0x8b ; ret
0x000002000018b40b : movsb byte ptr [rdi], byte ptr [rsi] ; sbb byte ptr [rax], al ; add rdx, r8 ; jmp rdx
0x000002000006fd90 : movsb byte ptr [rdi], byte ptr [rsi] ; test dword ptr [rcx], edx ; add dh, dh ; ret
0x00000200006798c7 : movsd dword ptr [rdi], dword ptr [rsi] ; adc ebp, dword ptr [rdi + rdi*8 + 0x78c48348] ; ret
0x00000200000a652a : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x000002000014b345 : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add cl, ch ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000020000120739 : movsd dword ptr [rdi], dword ptr [rsi] ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200001895c7 : movsd dword ptr [rdi], dword ptr [rsi] ; call 0x1ffc3a495c7
0x00000200005e463b : movsd dword ptr [rdi], dword ptr [rsi] ; call 0x1ffc3ea4636
0x000002000052dc15 : movsd dword ptr [rdi], dword ptr [rsi] ; call rax
0x00000200004b88c7 : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; ret 0x85ff
0x0000020000678ccf : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; retf 0x48ff ; test eax, eax ; je 0x20000678ce3 ; call rax
0x00000200003e2e09 : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; sbb dword ptr [rax], eax ; mov al, r8b ; ret
0x000002000020bf19 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp r8d, r9d ; sete al ; ret
0x00000200007b85c7 : movsd dword ptr [rdi], dword ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; mov dh, 0xff ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000227327 : movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax + 0x3b] ; ret
0x00000200005d681d : movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000065f1ae : movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x000002000066e9e4 : movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax - 0x75] ; retf ; call rdi
0x00000200006a5441 : movsd dword ptr [rdi], dword ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001ba88d : movsd dword ptr [rdi], dword ptr [rsi] ; dec esp ; add rsp, 0x28 ; ret
0x00000200001a23be : movsd dword ptr [rdi], dword ptr [rsi] ; hlt ; dec dword ptr [rcx - 0x75] ; sbb byte ptr [rax - 0x7b], r9b ; ret
0x000002000006cd93 : movsd dword ptr [rdi], dword ptr [rsi] ; in eax, dx ; or eax, 0x1c8b4d04 ; ret
0x000002000060ebe9 : movsd dword ptr [rdi], dword ptr [rsi] ; inc dword ptr [rbx - 0x7cb700f6] ; ret
0x00000200004c8bf7 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; sar edi, -0x75 ; ret
0x000002000046e657 : movsd dword ptr [rdi], dword ptr [rsi] ; jmp 0x1ffc3d2e63f
0x0000020000492547 : movsd dword ptr [rdi], dword ptr [rsi] ; mov ah, 0x13 ; add dh, dh ; ret
0x0000020000679577 : movsd dword ptr [rdi], dword ptr [rsi] ; mov ah, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005bc59d : movsd dword ptr [rdi], dword ptr [rsi] ; mov esi, 0x3345fff7 ; inc dword ptr [rcx - 1] ; ret 0x8349
0x0000020000525b7e : movsd dword ptr [rdi], dword ptr [rsi] ; mov rcx, qword ptr [rbp - 0x11] ; call 0x20000148078
0x00000200003cb8f2 : movsd dword ptr [rdi], dword ptr [rsi] ; nop ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b4c
0x0000020000030437 : movsd dword ptr [rdi], dword ptr [rsi] ; or dword ptr [rdi], eax ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200005d89d5 : movsd dword ptr [rdi], dword ptr [rsi] ; push rsi ; ret
0x00000200006f3b97 : movsd dword ptr [rdi], dword ptr [rsi] ; push rsp ; ret
0x00000200000d6856 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000200001a7037 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x17
0x00000200004bdab4 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x4cff
0x00000200005db5d7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffb7
0x00000200000477c7 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 8
0x000002000053db3a : movsd dword ptr [rdi], dword ptr [rsi] ; sar bh, 0x8b ; ret
0x000002000014e9ea : movsd dword ptr [rdi], dword ptr [rsi] ; sfence ; ret
0x000002000002d34f : movsd dword ptr [rdi], dword ptr [rsi] ; sldt word ptr [r13 - 0x577f040] ; ret
0x00000200006e5c98 : movsd dword ptr [rdi], dword ptr [rsi] ; xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200006a5440 : movsd dword ptr [rdi], dword ptr cs:[rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001ba8f6 : movsd dword ptr [rdi], dword ptr ss:[rsi] ; dec esp ; add rsp, 0x28 ; ret
0x000002000070b747 : movsd qword ptr [rax + rcx], xmm0 ; ret
0x00000200006409ca : movsd qword ptr [rax], xmm0 ; xor eax, eax ; ret
0x00000200006f51a9 : movsd qword ptr [rcx + 0x20], xmm0 ; ret
0x00000200004ea03c : movsd qword ptr [rdx + 0x20], xmm0 ; add rsp, 0x28 ; ret
0x0000020000548ed9 : movsx eax, al ; sub eax, 0x37 ; jmp 0x20000548eaa
0x0000020000008dc0 : movsx eax, byte ptr [rcx + 0xc3] ; ret
0x0000020000426c16 : movsx eax, cl ; xor eax, 0x20 ; ret
0x0000020000432bd1 : movsx eax, dx ; mov qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000481b1b : movsx eax, dx ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000548ed8 : movsx eax, r8b ; sub eax, 0x37 ; jmp 0x20000548eab
0x0000020000426c15 : movsx eax, r9b ; xor eax, 0x20 ; ret
0x0000020000432bd0 : movsx rax, dx ; mov qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000481b1a : movsx rax, dx ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000620e14 : movsxd r13, dword ptr [r13 + rcx*4 + 0x4b] ; add ch, al ; and esp, ecx ; ret 0x48ff
0x0000020000620d27 : movsxd r13, dword ptr [r8 + rbp*8 - 0x2f] ; ret 0xffc2
0x0000020000620d31 : movsxd r13, dword ptr [r8 + rcx*2 - 0x75] ; iretd ; call 0x2000024d008
0x0000020000620d30 : movsxd r13, dword ptr [r8 + rcx*2 - 0x75] ; iretd ; call 0x2000024d009
0x0000020000157bb1 : movsxd rax, ecx ; mov qword ptr [rdx], rax ; ret
0x000002000013c103 : movsxd rax, edx ; jmp 0x2000013c118
0x000002000013c102 : movsxd rax, edx ; jmp 0x2000013c119
0x00000200004e09a8 : movsxd rbp, eax ; ret 0xc074
0x00000200005d7075 : movsxd rbp, esi ; dec dword ptr [rax - 0x75] ; iretd ; call rax
0x00000200007aa65a : movsxd rbx, eax ; call qword ptr [rip - 0x553d0a]
0x00000200000ddf1c : movsxd rcx, dword ptr [rax + r8] ; xor eax, eax ; ret
0x000002000069ecba : movsxd rcx, eax ; dec dword ptr [rax - 0x77] ; pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x00000200001bbf60 : movsxd rcx, ecx ; jne 0x200001bbf73 ; mov eax, 0xc00000bb ; ret
0x00000200007a2f4e : movsxd rdi, eax ; add bl, ch ; ret 0x48cc
0x000002000011be97 : movsxd rdi, eax ; dec dword ptr [rax - 0x75] ; ret
0x0000020000176164 : movsxd rdi, edx ; call qword ptr [rax - 0x63dfc17]
0x00000200000a0e1d : movsxd rdx, eax ; jne 0x20000194938 ; ret
0x00000200000a0e1c : movsxd rdx, eax ; jne 0x20000194939 ; ret
0x0000020000623292 : movsxd rdx, eax ; shl rdx, 3 ; call 0x2000024da49
0x0000020000521b2f : movsxd rdx, ebx ; dec dword ptr [rax - 0x7b] ; leave ; je 0x20000521b49 ; ret
0x0000020000441852 : movsxd rsi, eax ; add byte ptr [rbp - 0x73], cl ; and byte ptr [r8 - 0x75], cl ; ret 0x8b49
0x000002000009dc0b : movsxd rsi, edi ; rol dword ptr [rax], 7 ; add byte ptr [rax], al ; jne 0x2000009dc39 ; ret
0x00000200004eea4a : movsxd rsi, esi ; ret 0xf04
0x000002000001e0f9 : movups xmm0, xmmword ptr [rax + 0x18] ; xor eax, eax ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000200006409c7 : movups xmm0, xmmword ptr [rax] ; movsd qword ptr [rax], xmm0 ; xor eax, eax ; ret
0x0000020000712466 : movups xmm0, xmmword ptr [rcx] ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x000002000069028c : movups xmm0, xmmword ptr [rdx] ; movdqu xmmword ptr [rax + 8], xmm0 ; ret
0x000002000013c80a : movups xmm0, xmmword ptr [rsp + 0x70] ; add rsp, 0x58 ; ret
0x0000020000031767 : movups xmm1, xmmword ptr [r9 + 0x10] ; movups xmmword ptr [rdx + 0x10], xmm1 ; ret
0x0000020000031768 : movups xmm1, xmmword ptr [rcx + 0x10] ; movups xmmword ptr [rdx + 0x10], xmm1 ; ret
0x00000200001059bb : movups xmmword ptr [r10 + r11 + 0x18d8], xmm1 ; ret
0x000002000004ba77 : movups xmmword ptr [rax + 0x20], xmm0 ; add rsp, 0x30 ; pop rbp ; ret
0x000002000061c589 : movups xmmword ptr [rax + rcx + 0x10], xmm0 ; ret
0x000002000070b748 : movups xmmword ptr [rax + rcx], xmm0 ; ret
0x00000200006409cb : movups xmmword ptr [rax], xmm0 ; xor eax, eax ; ret
0x0000020000006329 : movups xmmword ptr [rcx + 0x10], xmm1 ; add rsp, 0x28 ; ret
0x00000200006f51a5 : movups xmmword ptr [rcx + 0x10], xmm1 ; movsd qword ptr [rcx + 0x20], xmm0 ; ret
0x00000200006f51aa : movups xmmword ptr [rcx + 0x20], xmm0 ; ret
0x0000020000210122 : movups xmmword ptr [rcx + 0x40], xmm0 ; ret
0x0000020000044d5a : movups xmmword ptr [rcx + 0x70], xmm1 ; ret
0x00000200000952a0 : movups xmmword ptr [rcx + rdx + 0x10], xmm0 ; ret
0x00000200001276bb : movups xmmword ptr [rdi + 0x10], xmm1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003176c : movups xmmword ptr [rdx + 0x10], xmm1 ; ret
0x00000200004ea03d : movups xmmword ptr [rdx + 0x20], xmm0 ; add rsp, 0x28 ; ret
0x00000200000920d8 : movups xmmword ptr [rdx + 0x4c0], xmm1 ; ret
0x00000200001059bc : movups xmmword ptr [rdx + rbx + 0x18d8], xmm1 ; ret
0x000002000055e2a1 : movups xmmword ptr [rdx], xmm0 ; mov dword ptr [rdx + 8], eax ; mov al, r9b ; ret
0x000002000001e0ff : movups xmmword ptr [rdx], xmm0 ; ret
0x00000200001b6c5e : movzx eax, al ; add rsp, 0x28 ; ret
0x00000200000bb96f : movzx eax, al ; and eax, 7 ; ret
0x00000200005ef740 : movzx eax, al ; and eax, r8d ; or eax, 5 ; ret
0x000002000011ef5e : movzx eax, al ; mov cr8, rax ; ret
0x00000200004142a0 : movzx eax, al ; ret
0x0000020000007ecb : movzx eax, al ; shr eax, 3 ; and eax, 4 ; ret
0x000002000002508b : movzx eax, ax ; bsr eax, eax ; sub eax, r10d ; jmp 0x20000025049
0x0000020000226ba2 : movzx eax, ax ; cmp eax, 0x50 ; jmp 0x20000226b74
0x0000020000143be9 : movzx eax, ax ; ret
0x000002000013baae : movzx eax, ax ; sub eax, ecx ; ret
0x00000200000c65ff : movzx eax, bh ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000070bee : movzx eax, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005298a9 : movzx eax, bp ; call 0x20000157546
0x000002000013d0d3 : movzx eax, bx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000074ec9 : movzx eax, byte ptr [rax + 0x232] ; ret
0x0000020000139f4b : movzx eax, byte ptr [rax + 0xac] ; ret
0x0000020000454e16 : movzx eax, byte ptr [rcx + 0x10] ; shr eax, 1 ; and eax, 1 ; ret
0x00000200000a1645 : movzx eax, byte ptr [rcx + 0x1b] ; and al, 0xfb ; mov byte ptr [rcx + 0x1b], al ; ret
0x0000020000408dae : movzx eax, byte ptr [rcx + 0x39] ; ret
0x000002000042d857 : movzx eax, byte ptr [rcx + 0x4f] ; add dword ptr [rdx + 0x18], eax ; ret
0x00000200001d36c7 : movzx eax, byte ptr [rcx + 0x7d] ; ret
0x00000200001d6dfc : movzx eax, byte ptr [rcx + 0xc0] ; ret
0x0000020000078148 : movzx eax, byte ptr [rcx + 8] ; and eax, 1 ; ret
0x00000200001b8608 : movzx eax, byte ptr [rcx] ; shr eax, 1 ; and eax, 1 ; ret
0x00000200005ae3c4 : movzx eax, byte ptr [rdx + 0x10] ; shr eax, 1 ; and eax, 1 ; ret
0x0000020000610157 : movzx eax, byte ptr [rdx + 0xd] ; and eax, 3 ; ret
0x0000020000201bcd : movzx eax, byte ptr [rdx + r8 + 0x27a218] ; ret
0x0000020000201bce : movzx eax, byte ptr [rdx + rax + 0x27a218] ; ret
0x000002000006ca3f : movzx eax, byte ptr [rdx] ; cmp eax, edx ; jne 0x2000006ca60 ; mov rax, r10 ; ret
0x00000200005a61e6 : movzx eax, byte ptr [rip - 0x28cca5] ; ret
0x0000020000116118 : movzx eax, cl ; and eax, 1 ; ret
0x000002000003b79f : movzx eax, cl ; mov cr8, rax ; ret
0x00000200000ea81f : movzx eax, cl ; ret
0x00000200006882de : movzx eax, cx ; add eax, 0x20 ; ret
0x00000200001447d5 : movzx eax, cx ; add rsp, 0x38 ; ret
0x0000020000494606 : movzx eax, cx ; ret
0x0000020000494610 : movzx eax, cx ; sub eax, 0x20 ; ret
0x000002000013f50c : movzx eax, cx ; sub eax, edx ; ret
0x00000200000d6ddf : movzx eax, dh ; add rsp, 0x50 ; pop r14 ; ret
0x000002000017628f : movzx eax, dh ; mov cr8, rax ; jmp 0x20000112589
0x00000200000f7995 : movzx eax, di ; add rsp, 0x20 ; pop rdi ; ret
0x000002000052cd9d : movzx eax, di ; call 0x20000157546
0x00000200000c65fe : movzx eax, dil ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000070f7a6 : movzx eax, dl ; jmp 0x2000070f7b9
0x000002000070f873 : movzx eax, dl ; jmp 0x2000070f886
0x000002000070f927 : movzx eax, dl ; jmp 0x2000070f93a
0x000002000070f9ca : movzx eax, dl ; jmp 0x2000070f9dd
0x00000200001f01f7 : movzx eax, dl ; mov cr8, rax ; ret
0x00000200000ea7fd : movzx eax, dl ; ret
0x00000200003fa758 : movzx eax, dx ; jmp 0x200003fa6ff
0x0000020000564c98 : movzx eax, dx ; jmp 0x20000564c7a
0x00000200000527f1 : movzx eax, dx ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000057e51 : movzx eax, dx ; or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x000002000049464d : movzx eax, dx ; ret
0x0000020000230a2a : movzx eax, dx ; sub eax, ecx ; ret
0x000002000050a7d4 : movzx eax, dx ; test eax, eax ; js 0x2000050a7e7 ; xor eax, eax ; ret
0x000002000070f7a5 : movzx eax, r10b ; jmp 0x2000070f7ba
0x000002000070f872 : movzx eax, r10b ; jmp 0x2000070f887
0x000002000070f926 : movzx eax, r10b ; jmp 0x2000070f93b
0x000002000070f9c9 : movzx eax, r10b ; jmp 0x2000070f9de
0x0000020000230a29 : movzx eax, r10w ; sub eax, ecx ; ret
0x000002000011ef5d : movzx eax, r8b ; mov cr8, rax ; ret
0x000002000002508a : movzx eax, r8w ; bsr eax, eax ; sub eax, r10d ; jmp 0x2000002504a
0x0000020000226ba1 : movzx eax, r8w ; cmp eax, 0x50 ; jmp 0x20000226b75
0x0000020000143be8 : movzx eax, r8w ; ret
0x000002000013baad : movzx eax, r8w ; sub eax, ecx ; ret
0x000002000003b79e : movzx eax, r9b ; mov cr8, rax ; ret
0x00000200000ea81e : movzx eax, r9b ; ret
0x00000200006882dd : movzx eax, r9w ; add eax, 0x20 ; ret
0x00000200006863ac : movzx eax, r9w ; ret
0x00000200001a42ac : movzx eax, word ptr [r8 + rax*8 + 0xc] ; ret
0x00000200003e492d : movzx eax, word ptr [r8 + rcx*2] ; imul eax, r10d ; ret
0x00000200003e446c : movzx eax, word ptr [r8 + rcx*2] ; imul eax, r9d ; ret
0x0000020000464a3c : movzx eax, word ptr [rax + 8] ; ret
0x00000200001a42ad : movzx eax, word ptr [rax + rax*8 + 0xc] ; ret
0x000002000013bfdd : movzx eax, word ptr [rax + rcx*2] ; and eax, 0x157 ; ret
0x000002000013c03d : movzx eax, word ptr [rax + rcx*2] ; and eax, 0x80 ; ret
0x000002000013c01d : movzx eax, word ptr [rax + rcx*2] ; and eax, 1 ; ret
0x000002000013bfbd : movzx eax, word ptr [rax + rcx*2] ; and eax, 2 ; ret
0x000002000013bf9d : movzx eax, word ptr [rax + rcx*2] ; and eax, 4 ; ret
0x000002000013bffd : movzx eax, word ptr [rax + rcx*2] ; and eax, 8 ; ret
0x00000200003e492e : movzx eax, word ptr [rax + rcx*2] ; imul eax, r10d ; ret
0x00000200003e446d : movzx eax, word ptr [rax + rcx*2] ; imul eax, r9d ; ret
0x000002000013dde0 : movzx eax, word ptr [rax + rcx*2] ; movzx ecx, dx ; and eax, ecx ; ret
0x00000200000fd62e : movzx eax, word ptr [rax + rcx*2] ; ret
0x0000020000231586 : movzx eax, word ptr [rcx + 0x28] ; ret
0x00000200000265c0 : movzx eax, word ptr [rcx + 0x92] ; ret
0x000002000045097b : movzx eax, word ptr [rcx + 2] ; mov word ptr [rdx], ax ; xor eax, eax ; ret
0x000002000013d2cf : movzx eax, word ptr [rcx] ; movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x000002000023158b : movzx eax, word ptr [rcx] ; ret
0x000002000042ea91 : movzx eax, word ptr [rdi] ; cmp rcx, rax ; jne 0x2000042eaac ; mov eax, edx ; jmp 0x2000042ea5f
0x00000200000c8e75 : movzx eax, word ptr [rdx + 2] ; mov word ptr [r10 + 2], ax ; ret
0x0000020000458926 : movzx eax, word ptr [rdx] ; mov word ptr [r8], ax ; xor eax, eax ; ret
0x00000200000f5c6c : movzx eax, word ptr [rip + 0x2b238d] ; dec eax ; ret
0x00000200000f5570 : movzx eax, word ptr [rip + 0x2b2a95] ; ret
0x0000020000044d60 : movzx eax, word ptr [rip + 0x2e0691] ; ret
0x0000020000090394 : movzx eax, word ptr [rip + 0x317c75] ; ret
0x0000020000529c46 : movzx ebx, ax ; mov r8d, ebx ; call 0x20000157549
0x000002000051b5d7 : movzx ebx, bl ; cmovns ebx, edx ; call 0x20000148079
0x00000200005ce326 : movzx ecx, al ; call r10
0x0000020000209ef8 : movzx ecx, al ; mov cr8, rcx ; mov al, dl ; ret
0x00000200001bcfec : movzx ecx, ax ; lea rdx, qword ptr [rsp + 0x48] ; call r9
0x00000200003fff0d : movzx ecx, bl ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x00000200006c5d2e : movzx ecx, bx ; call rax
0x0000020000230a26 : movzx ecx, bx ; movzx eax, r10w ; sub eax, ecx ; ret
0x00000200000dd9a4 : movzx ecx, cl ; mov cr8, rcx ; ret
0x00000200005a031c : movzx ecx, cx ; mov al, byte ptr [rcx + rax] ; ret
0x000002000013baaa : movzx ecx, cx ; movzx eax, r8w ; sub eax, ecx ; ret
0x000002000068dbdd : movzx ecx, cx ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000013bbc0 : movzx ecx, cx ; sub r9d, eax ; mov eax, r9d ; ret
0x00000200007a91d7 : movzx ecx, di ; lea r8, qword ptr [rsp + 0x3c] ; call rax
0x000002000002c801 : movzx ecx, dl ; cmovne eax, ecx ; ret
0x000002000013dde4 : movzx ecx, dx ; and eax, ecx ; ret
0x00000200005a031b : movzx ecx, r9w ; mov al, byte ptr [rcx + rax] ; ret
0x000002000068dbdc : movzx ecx, r9w ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200006cfd77 : movzx ecx, word ptr [rbx] ; call 0x2000013c065
0x000002000048be8f : movzx ecx, word ptr [rcx + 4] ; cmp r8d, ecx ; jb 0x2000048be38 ; ret
0x0000020000697154 : movzx ecx, word ptr [rdx + 2] ; mov dword ptr [r9], ecx ; mov eax, edx ; ret
0x000002000013d2d2 : movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x00000200006265c2 : movzx edx, ax ; jne 0x200006265d6 ; call 0x2000024da48
0x000002000019fe52 : movzx edx, bpl ; call rax
0x000002000019fe53 : movzx edx, ch ; call rax
0x0000020000157bc4 : movzx edx, cx ; in al, dx ; ret
0x00000200000de681 : movzx edx, cx ; mov rax, qword ptr [rax + rdx*8] ; ret
0x0000020000157bd2 : movzx edx, cx ; out dx, al ; ret
0x00000200006226e1 : movzx edx, dl ; cmovb edx, ecx ; mov al, dl ; ret
0x00000200003cd2c1 : movzx edx, dl ; cmove r10d, r11d ; mov al, r10b ; ret
0x00000200001ba91a : movzx edx, dl ; cmovne edx, ecx ; mov al, dl ; ret
0x0000020000020a3a : movzx edx, word ptr [rdx + 0x18] ; add r8d, edx ; jmp 0x20000020a21
0x00000200001b58eb : movzx edx, word ptr [rsi + 2] ; mov rcx, r14 ; call 0x20000481b19
0x00000200005298a8 : movzx r8d, bp ; call 0x20000157547
0x000002000052cd9c : movzx r8d, di ; call 0x20000157547
0x00000200003fa757 : movzx r8d, dx ; jmp 0x200003fa700
0x000002000013dde3 : movzx rcx, dx ; and eax, ecx ; ret
0x00000200006d3a76 : mul byte ptr [rsi + 3] ; ret 0xb841
0x000002000044915f : mul byte ptr [rsi - 0x77] ; in eax, -0xa ; ret
0x000002000051325e : mul byte ptr [rsi - 0x7d] ; ret 0xb902
0x0000020000043d45 : mul dword ptr [rdi + 0x36] ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x000002000000b30b : mul dword ptr [rdx + 0x15] ; add byte ptr [rcx + 0x3b], cl ; ret
0x000002000017f9e6 : mul edx ; in al, dx ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000062af5d : neg al ; sbb eax, eax ; and eax, 0xc000004b ; ret
0x00000200001b303a : neg al ; sbb eax, eax ; neg eax ; inc eax ; ret
0x000002000003dea2 : neg al ; sbb ecx, ecx ; and r10d, ecx ; mov eax, r10d ; ret
0x0000020000489d7e : neg byte ptr [rip - 0x74baffec] ; ret
0x0000020000729404 : neg byte ptr [rsi - 0x3b7cb701] ; pop rbx ; ret
0x0000020000595646 : neg byte ptr [rsi] ; call 0x1ffc3e4a352
0x00000200001b303e : neg eax ; inc eax ; ret
0x000002000005b312 : neg eax ; sbb eax, eax ; and eax, 0xc0000001 ; ret
0x000002000001fa14 : neg eax ; sbb eax, eax ; and eax, 0xc0000022 ; ret
0x000002000013c18f : neg eax ; sbb rax, rax ; and rax, rcx ; ret
0x000002000003e3fd : neg ecx ; inc ecx ; mov eax, ecx ; ret
0x0000020000100c58 : neg ecx ; sbb eax, eax ; and eax, 0xc0000022 ; ret
0x000002000043e25c : neg ecx ; sbb eax, eax ; and eax, 0xc00000bb ; ret
0x00000200000330e5 : neg ecx ; sbb ecx, ecx ; and eax, ecx ; ret
0x00000200001463cf : neg edx ; mov qword ptr [r8 + 0x610], rdx ; ret
0x00000200001715fa : neg edx ; sbb eax, eax ; add eax, 3 ; ret
0x000002000050a391 : neg edx ; sbb eax, eax ; and eax, 0xc000000d ; ret
0x000002000013c18e : neg r8 ; sbb rax, rax ; and rax, rcx ; ret
0x00000200001d9890 : neg rax ; sbb rax, rax ; and rax, rcx ; ret
0x00000200000330e4 : neg rcx ; sbb ecx, ecx ; and eax, ecx ; ret
0x0000020000123ff5 : nop ; adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001463d3 : nop ; adc byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x00000200004e1543 : nop ; adc dword ptr [rsi], ecx ; add rcx, r8 ; jmp rcx
0x0000020000107975 : nop ; add al, 0 ; add al, ch ; ret 0x498
0x00000200007b8e4d : nop ; add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200001bceb8 : nop ; add byte ptr [rax], ah ; add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x00000200004c4916 : nop ; add byte ptr [rax], al ; add al, ch ; add ebx, ecx ; ret 0xe9ff
0x00000200004c4e2f : nop ; add byte ptr [rax], al ; add al, ch ; call 0x200344c1105
0x0000020000498d3a : nop ; add byte ptr [rax], al ; add al, ch ; pop rcx ; ret
0x0000020000052d84 : nop ; add byte ptr [rax], al ; add al, ch ; ret
0x0000020000105508 : nop ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200006c06c7 : nop ; add byte ptr [rax], al ; add bh, bh ; ret 0xfa83
0x00000200006e02f3 : nop ; add byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x000002000009d0fc : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200001da04b : nop ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200005cbf9d : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or byte ptr [r11], bpl ; ret 0x8b44
0x0000020000077a3b : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x000002000054ae7a : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000018918c : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200001d3eb3 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6608
0x000002000061c4ea : nop ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000246743 : nop ; add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], cl ; ret 0x2c6
0x00000200000dc7cd : nop ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000017703f : nop ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200004d0c75 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x65], al ; or bh, bh ; ret
0x00000200003d2662 : nop ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x000002000005904e : nop ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x2074
0x00000200004880bf : nop ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x7d89
0x00000200000b84f1 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x4975
0x00000200000b86f1 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x000002000066022d : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xce75
0x00000200004e5f6c : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x00000200001da674 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200004e4818 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; ret
0x00000200000e0fb4 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x000002000018a168 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xa1e9
0x0000020000491dbe : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf11
0x00000200004c67d9 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf20
0x00000200004d3687 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x000002000016fdc0 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200001dccc9 : nop ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x00000200001b76de : nop ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000070fb55 : nop ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200003cb8f3 : nop ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b4c
0x000002000006cb83 : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0x5d], bl ; pop rbx ; ret
0x00000200004961fa : nop ; add byte ptr [rax], al ; add cl, al ; call 0x1ffc34a8621
0x00000200005d914d : nop ; add byte ptr [rax], al ; add cl, ch ; scasd eax, dword ptr [rdi] ; ret
0x00000200005d9113 : nop ; add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; ret
0x0000020000065ae8 : nop ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000051064e : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0x0000020000113fd2 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0x00000200006036b2 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x00000200006d8128 : nop ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x000002000052de2a : nop ; add dword ptr [rax], eax ; add byte ptr [rax + 0x38850f40], ch ; ret
0x00000200004ebc3c : nop ; add dword ptr [rax], eax ; add byte ptr [rbx], al ; ret 0x8948
0x00000200004e8d5b : nop ; add dword ptr [rax], eax ; add byte ptr [rbx], al ; ret 0x8b48
0x00000200003d518b : nop ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200005efdda : nop ; add dword ptr [rax], eax ; add byte ptr [rsi + 0x2b], ah ; ret 0x4fe9
0x000002000014b0a5 : nop ; add dword ptr [rax], eax ; add cl, ch ; xchg eax, edx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000200006ac45c : nop ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7403
0x00000200000535db : nop ; add dword ptr [rax], eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000ed17a : nop ; add eax, 0x81480000 ; ret
0x00000200000bd823 : nop ; add eax, 0x83480000 ; ret
0x00000200003e26fb : nop ; add eax, dword ptr [rax] ; add dh, dh ; ret 0xf01
0x0000020000152b53 : nop ; add rsp, 0x10 ; ret
0x000002000012437d : nop ; add rsp, 0x140 ; pop rbx ; ret
0x000002000012424d : nop ; add rsp, 0x150 ; pop rbx ; ret
0x0000020000043403 : nop ; add rsp, 0x1a0 ; pop rbx ; ret
0x0000020000042fb5 : nop ; add rsp, 0x1b0 ; pop rbx ; ret
0x00000200001477c3 : nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000057c2b8 : nop ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200000ec965 : nop ; add rsp, 0x28 ; ret
0x000002000015b4b5 : nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001fd7bf : nop ; add rsp, 0x30 ; pop rbx ; ret
0x000002000015debf : nop ; add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200003d454c : nop ; add rsp, 0x38 ; pop r13 ; pop rbp ; ret
0x000002000015b8c1 : nop ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x000002000068bc0f : nop ; add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x000002000015c569 : nop ; add rsp, 0x38 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000015b707 : nop ; add rsp, 0x40 ; pop rbp ; ret
0x000002000015b79c : nop ; add rsp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000057ce0f : nop ; add rsp, 0x48 ; pop rbp ; pop rbx ; ret
0x000002000015b812 : nop ; add rsp, 0x48 ; pop rdi ; pop rbp ; ret
0x00000200007782ce : nop ; add rsp, 0x48 ; ret
0x000002000015bffc : nop ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000701990 : nop ; add rsp, 0x50 ; pop rbx ; ret
0x000002000057bd8e : nop ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000701acc : nop ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000701a3d : nop ; add rsp, 0x70 ; pop rbx ; ret
0x00000200000f75b3 : nop ; and al, 0 ; add byte ptr [rbp + 1], dh ; ret
0x00000200001d10be : nop ; and byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001fbe94 : nop ; call qword ptr [rcx]
0x00000200004746fc : nop ; cdq ; ret 0xf0ff
0x000002000007bf80 : nop ; clc ; add byte ptr [rax], al ; add cl, ch ; ret 1
0x00000200005e53ec : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call qword ptr [rax - 0xf163d17]
0x00000200007b6518 : nop ; dec dword ptr [rax - 0x77] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000224db7 : nop ; fcomp dword ptr [rdi] ; add byte ptr [rcx - 0x7f], cl ; ret 0xa00
0x00000200006f5e60 : nop ; fidivr word ptr [rdi - 0x21e27701] ; ret 0x88ff
0x000002000012c94d : nop ; fsub dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xd148
0x000002000051c07c : nop ; hlt ; ret 0x48ff
0x00000200001d1b82 : nop ; idiv bh ; add rsp, 0x68 ; ret
0x00000200001c1c1a : nop ; idiv edi ; add rsp, 0x78 ; ret
0x00000200005a94f5 : nop ; jmp 0x1ffc285ddff
0x0000020000165ace : nop ; jmp 0x2000001e1af
0x000002000019271b : nop ; jmp 0x2000009a4eb
0x0000020000193645 : nop ; jmp 0x2000009d662
0x000002000019497c : nop ; jmp 0x200000a0fa2
0x00000200001a2999 : nop ; jmp 0x200000d4c54
0x0000020000176167 : nop ; jmp 0x20000112373
0x0000020000176250 : nop ; jmp 0x2000011253e
0x00000200001b280e : nop ; jmp 0x2000013a1ee
0x0000020000587b06 : nop ; jmp 0x200003f3d51
0x00000200005a10b2 : nop ; jmp 0x2000042b73e
0x00000200005a187b : nop ; jmp 0x2000042db75
0x00000200005ab176 : nop ; jmp 0x20000447e3f
0x00000200005aba18 : nop ; jmp 0x200004498c5
0x00000200005c1333 : nop ; jmp 0x200004653dc
0x00000200005c317c : nop ; jmp 0x2000046f478
0x00000200005cd656 : nop ; jmp 0x20000491d57
0x00000200005d8ca3 : nop ; jmp 0x200004c4f93
0x00000200005d8d4a : nop ; jmp 0x200004c5047
0x00000200005d90b4 : nop ; jmp 0x200004c5343
0x00000200005d99d5 : nop ; jmp 0x200004c8f7e
0x00000200005ea341 : nop ; jmp 0x20000506602
0x00000200005ebdfc : nop ; jmp 0x20000508061
0x00000200005f1abb : nop ; jmp 0x20000548c89
0x000002000072a436 : nop ; jmp 0x200007266bd
0x000002000072a444 : nop ; jmp 0x2000072670a
0x00000200007ca76c : nop ; jmp 0x200007af4ce
0x00000200007cbe52 : nop ; jmp 0x200007b8095
0x00000200007cbf89 : nop ; jmp 0x200007b8268
0x0000020000594fa9 : nop ; jmp rdi
0x00000200001d3fbf : nop ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x0000020000718f7c : nop ; mov ch, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200007b973c : nop ; mov dh, 0xff ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005cc545 : nop ; mov eax, 0x41000000 ; call rsi
0x00000200003d01b6 : nop ; mov eax, dword ptr [r8] ; cmp eax, edx ; je 0x200003d01bd ; ret
0x00000200006c8ec9 : nop ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200006c820f : nop ; mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001d3f8e : nop ; mov ebp, 0x4800003a ; add esp, 0x28 ; ret
0x00000200007a8e7d : nop ; mov ebp, 0x8b49003a ; xchg eax, esp ; ret
0x00000200001573e9 : nop ; mov r11, qword ptr [rbp - 0x68] ; add rsp, 0x68 ; ret
0x0000020000090535 : nop ; mov rax, qword ptr [rcx] ; test al, 1 ; jne 0x20000090546 ; ret
0x0000020000090534 : nop ; mov rax, qword ptr [rcx] ; test al, 1 ; jne 0x20000090547 ; ret
0x000002000051064d : nop ; nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0x0000020000113fd1 : nop ; nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0x0000020000152b52 : nop ; nop ; add rsp, 0x10 ; ret
0x00000200007782cd : nop ; nop ; add rsp, 0x48 ; ret
0x00000200004cc12b : nop ; nop ; sub al, 0 ; add byte ptr [rbx], dh ; ret 0x8b48
0x00000200007b270d : nop ; or bh, bh ; ret 0x3b41
0x00000200000e40e1 : nop ; or byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200001c97ef : nop ; out -1, eax ; add rsp, 0x38 ; ret
0x00000200001dc237 : nop ; out 0xff, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001fd7bd : nop ; pause ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000679e41 : nop ; pop rax ; add al, byte ptr [rax] ; add dh, dh ; ret 0x7504
0x00000200005151dc : nop ; pop rdx ; ret 0x48ff
0x00000200000f66eb : nop ; push -0x9ffffff ; ret 0xf01
0x000002000013b22f : nop ; ret
0x000002000051f52a : nop ; ret 0x85ff
0x0000020000623f3e : nop ; ret 0xebff
0x00000200007ab5ec : nop ; ret 0xff9a
0x000002000061c25c : nop ; ret 0xffb2
0x00000200004254de : nop ; ret 6
0x000002000017a29e : nop ; sbb byte ptr [rax], al ; mov rcx, qword ptr [rdi + 8] ; call r8
0x000002000062fe84 : nop ; stosb byte ptr [rdi], al ; ret 0x48ff
0x000002000052c9ac : nop ; stosd dword ptr [rdi], eax ; ret 0xfff
0x00000200004cc12c : nop ; sub al, 0 ; add byte ptr [rbx], dh ; ret 0x8b48
0x000002000007a659 : nop ; test rcx, rcx ; jne 0x2000007a66c ; mov rax, rcx ; ret
0x000002000019ece3 : nop ; xchg eax, edx ; dec dword ptr [rbp - 0x75] ; ret
0x00000200001c01bc : nop ; xchg eax, esi ; adc eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000131eeb : nop ; xor al, 0x1f ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000020b5c : nop ; xor al, al ; ret
0x00000200001d4430 : nop ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003e4a40 : nop ; xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x0000020000147b98 : nop dword ptr [rax + rax] ; jmp rax
0x0000020000150c68 : nop dword ptr [rax + rax] ; nop ; ret
0x000002000013b238 : nop dword ptr [rax + rax] ; ret
0x000002000014bd7c : nop dword ptr [rax] ; fldcw word ptr [rcx] ; ret
0x000002000014bd5c : nop dword ptr [rax] ; fninit ; ret
0x000002000014744d : nop dword ptr [rax] ; mov byte ptr [rcx + 2], al ; mov word ptr [rcx], ax ; ret
0x0000020000137b92 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000020000147b97 : nop word ptr [rax + rax] ; jmp rax
0x000002000013b237 : nop word ptr [rax + rax] ; ret
0x000002000043c1f4 : not al ; and al, 1 ; ret
0x00000200007ca652 : not al ; ret
0x000002000019a52f : not bh ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200004aa9a6 : not bl ; ret
0x00000200007a9446 : not byte ptr [rax] ; sar bh, 0xe8 ; push rcx ; wait ; ret 0xb8ff
0x0000020000526486 : not byte ptr [rbx] ; ret
0x000002000023662e : not byte ptr [rcx] ; add byte ptr [rcx - 0x75], al ; jmp qword ptr [rax]
0x00000200001101e6 : not byte ptr [rsi + 6] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000011615e : not cl ; and cl, 1 ; mov al, cl ; ret
0x0000020000452a17 : not eax ; and dword ptr [rcx + 0x3b0], eax ; ret
0x00000200000fc97d : not eax ; and eax, 0xc000000d ; ret
0x0000020000452f3e : not eax ; and eax, 0xc0000034 ; ret
0x000002000044a571 : not eax ; and eax, 0xc0000061 ; jmp 0x2000044a545
0x000002000022108e : not eax ; and eax, 1 ; ret
0x00000200001d4705 : not eax ; and qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000135db0 : not eax ; inc eax ; ret
0x00000200001154fd : not eax ; lock and dword ptr [r10], eax ; ret
0x00000200005b169d : not eax ; lock and dword ptr [r8], eax ; ret
0x000002000003d6a8 : not eax ; lock and qword ptr [r9 + 8], rax ; ret
0x00000200001c8713 : not eax ; or rax, rdx ; jmp 0x200001c872d
0x00000200001c8713 : not eax ; or rax, rdx ; jmp 0x200001c8732
0x00000200001ee34b : not eax ; or rax, rdx ; jmp 0x200001ee365
0x000002000020e68e : not eax ; test eax, ecx ; je 0x2000020e69f ; xor al, al ; ret
0x0000020000696dc8 : not ecx ; and eax, ecx ; add rsp, 0x38 ; ret
0x0000020000100105 : not ecx ; mov eax, r9d ; ret
0x000002000042d704 : not ecx ; test ecx, edx ; sete al ; ret
0x00000200002117d6 : not edi ; add byte ptr [rax], al ; shl eax, 0xa ; add eax, ecx ; ret
0x00000200001d4704 : not r8 ; and qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000100104 : not r9d ; mov eax, r9d ; ret
0x000002000003d6a7 : not rax ; lock and qword ptr [r9 + 8], rax ; ret
0x00000200001c8712 : not rax ; or rax, rdx ; jmp 0x200001c872e
0x00000200001ee34a : not rax ; or rax, rdx ; jmp 0x200001ee366
0x0000020000030969 : or ah, byte ptr [rcx + rax] ; ret
0x00000200002146a4 : or ah, byte ptr [rsi - 0x77] ; add dword ptr [r8 - 0x7d], ecx ; ret
0x0000020000499e55 : or al, 0 ; add bl, ch ; ret 0x4865
0x0000020000096999 : or al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc2f6
0x00000200001a4b03 : or al, 0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000020000607d58 : or al, 0 ; add byte ptr [rax], al ; call 0x20000113fb2
0x0000020000591c8a : or al, 0 ; add byte ptr [rax], al ; call 0x2000040deb6
0x00000200006715bf : or al, 0 ; add byte ptr [rax], al ; ret
0x0000020000788806 : or al, 0 ; add byte ptr [rax], cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200004664c6 : or al, 0 ; add byte ptr [rbp - 0x8858a27], al ; ret
0x00000200007853dc : or al, 0 ; add byte ptr [rcx + 0xf], al ; ret
0x00000200000d5303 : or al, 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000125379 : or al, 0 ; add byte ptr [rdx - 0x3c], dh ; add rsp, 0x38 ; ret
0x00000200007c2357 : or al, 0 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000de495 : or al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000938aa : or al, 0 ; add rsp, 0x28 ; ret
0x00000200000292d0 : or al, 0 ; add rsp, 0x38 ; ret
0x0000020000079688 : or al, 0 ; add rsp, 0x48 ; ret
0x000002000007167a : or al, 0 ; add rsp, 0x58 ; ret
0x00000200004c26b9 : or al, 0 ; and dword ptr [rcx + 8], 0 ; ret
0x000002000067f3f1 : or al, 0 ; call 0x2000001b6dc
0x000002000022df91 : or al, 0 ; call rax
0x000002000023577f : or al, 0 ; cmp dword ptr [rcx], eax ; jb 0x20000235790 ; xor al, al ; ret
0x000002000023577e : or al, 0 ; cmp dword ptr [rcx], eax ; jb 0x20000235791 ; xor al, al ; ret
0x000002000023676f : or al, 0 ; jmp 0x2000023679e
0x000002000023676e : or al, 0 ; jmp 0x2000023679f
0x00000200000e7f89 : or al, 0 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000682775 : or al, 0 ; mov eax, 0x2d0 ; ret
0x0000020000588888 : or al, 0 ; mov eax, 0xc00000bb ; ret
0x000002000003b830 : or al, 0 ; mov eax, edx ; jmp 0x2000003b81f
0x00000200001b308a : or al, 0 ; mov qword ptr [rcx], rax ; ret
0x0000020000238d8d : or al, 0 ; mov rcx, rdi ; call rax
0x00000200001477c1 : or al, 0 ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000021c2c8 : or al, 0 ; ret
0x00000200000d2140 : or al, 0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000017ea7e : or al, 0 ; xor eax, eax ; jmp 0x2000004aca2
0x00000200000ddf1e : or al, 0 ; xor eax, eax ; ret
0x000002000002fb32 : or al, 0x10 ; mov qword ptr [r8], rcx ; ret
0x00000200001d98b7 : or al, 0x10 ; ret
0x00000200000099ce : or al, 0x15 ; add bl, al ; xor eax, eax ; ret
0x00000200007a3f8c : or al, 0x24 ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200004ce584 : or al, 0x24 ; add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0x7401
0x00000200007102e8 : or al, 0x24 ; add byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x7d], cl ; ret 0x118
0x0000020000039ef3 : or al, 0x24 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000065af8 : or al, 0x24 ; add dh, dh ; ret
0x00000200001d5696 : or al, 0x24 ; mov al, r9b ; add rsp, 0x28 ; ret
0x000002000014f19a : or al, 0x25 ; and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200000eb3e8
0x000002000002de8a : or al, 0x25 ; jo 0x2000002dec2 ; add byte ptr [rax], al ; ret
0x00000200003e7756 : or al, 0x25 ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x20000008db9
0x0000020000475b41 : or al, 0x25 ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x20000061dc8
0x0000020000433f90 : or al, 0x25 ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x20000061dc9
0x000002000043268a : or al, 0x25 ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200000be968
0x00000200005acd13 : or al, 0x25 ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200001d36d5
0x00000200000a293f : or al, 0x28 ; str word ptr [rcx - 0x75] ; ret
0x000002000006ad7e : or al, 0x29 ; add byte ptr [rcx - 0x73], al ; jmp qword ptr [rbx]
0x000002000043afa0 : or al, 0x29 ; ret
0x00000200006663af : or al, 0x2b ; call 0x20000043af1
0x00000200004b7410 : or al, 0x2b ; ret
0x0000020000157a65 : or al, 0x2b ; ret 0xccc3
0x0000020000008025 : or al, 0x33 ; ret 0x8941
0x0000020000625699 : or al, 0x33 ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000024d009
0x000002000016d9ca : or al, 0x33 ; ror byte ptr [rax - 9], cl ; int1 ; mov rax, rdx ; ret
0x000002000070630e : or al, 0x40 ; cmp ecx, dword ptr [rdx + 0x14] ; jb 0x20000706321 ; xor eax, eax ; ret
0x00000200001e5e5e : or al, 0x41 ; call qword ptr [rbx]
0x00000200003fd313 : or al, 0x41 ; inc edx ; jmp 0x200003fd300
0x00000200001c11eb : or al, 0x41 ; mov dword ptr [rax + 0x28], eax ; ret
0x000002000044699d : or al, 0x41 ; mov dword ptr [rdi + 0xc], eax ; jmp 0x200004469b4
0x000002000044699c : or al, 0x41 ; mov dword ptr [rdi + 0xc], eax ; jmp 0x200004469b5
0x000002000021c2d2 : or al, 0x42 ; ret
0x00000200001357d7 : or al, 0x44 ; mov dword ptr [rcx + 8], eax ; xor eax, eax ; ret
0x0000020000622822 : or al, 0x44 ; or eax, edx ; jmp 0x20000622843
0x00000200007b06c5 : or al, 0x48 ; add dword ptr [rcx + 0x18], eax ; add rsp, 0x28 ; ret
0x00000200007b05a1 : or al, 0x48 ; add dword ptr [rcx + 0x18], eax ; add rsp, 0x38 ; ret
0x00000200007b0a2c : or al, 0x48 ; add dword ptr [rdx + 0x18], eax ; add rsp, 0x28 ; ret
0x00000200000acdbb : or al, 0x48 ; add eax, 0x1000 ; jmp 0x200000acd8f
0x00000200007c2082 : or al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x000002000015abfc : or al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x00000200003fb248 : or al, 0x48 ; cmp ecx, edx ; jb 0x200003fb25e ; jmp 0x200003fb276
0x00000200000479ab : or al, 0x48 ; lea eax, dword ptr [rax + rdx*8] ; ret
0x00000200000072eb : or al, 0x48 ; lea eax, dword ptr [rax*8 + 0x30] ; ret
0x00000200001ade3b : or al, 0x48 ; lea ecx, dword ptr [rsp + 0x30] ; call rax
0x000002000004306c : or al, 0x48 ; mov dword ptr [rax + 8], eax ; mov qword ptr [rax], rax ; ret
0x0000020000157b7c : or al, 0x48 ; mov eax, dword ptr [rsp + 8] ; ret
0x000002000003872c : or al, 0x48 ; mov eax, edx ; ret
0x0000020000468c53 : or al, 0x48 ; mov ecx, dword ptr [rsp + 0x260] ; call rax
0x000002000052ac8b : or al, 0x48 ; mov ecx, eax ; call 0x20000157547
0x0000020000534f96 : or al, 0x48 ; mov ecx, esi ; call 0x20000157547
0x000002000013b119 : or al, 0x48 ; xor eax, eax ; ret
0x0000020000213ea4 : or al, 0x49 ; add eax, 0xc ; jmp 0x20000213ec6
0x00000200001c3226 : or al, 0x49 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000013c9bd : or al, 0x49 ; mov eax, ebx ; ret
0x0000020000196963 : or al, 0x49 ; mov ecx, ecx ; call 0x20000032c0a
0x00000200006adbbf : or al, 0x49 ; sub eax, 1 ; jne 0x200006adbbc ; ret
0x0000020000686875 : or al, 0x49 ; sub ecx, 1 ; jne 0x20000686865 ; ret
0x0000020000686874 : or al, 0x49 ; sub ecx, 1 ; jne 0x20000686866 ; ret
0x0000020000688314 : or al, 0x4a ; add cx, r9w ; movzx eax, cx ; ret
0x00000200003e49bf : or al, 0x4a ; sub eax, dword ptr [rdx + r8*4] ; sub eax, ecx ; ret
0x0000020000018c0e : or al, 0x4c ; cmp dword ptr [rcx + 0x20], eax ; je 0x20000018c1d ; ret
0x000002000070f461 : or al, 0x4c ; mov eax, edi ; mov edx, esi ; mov rcx, rbx ; call rax
0x00000200001bdf10 : or al, 0x4c ; mov ecx, dword ptr [rip + 0x13b938] ; call r9
0x0000020000411d90 : or al, 0x4d ; mov dword ptr [rcx], eax ; mov eax, 1 ; ret
0x00000200005242cf : or al, 0x4d ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200006c24e6 : or al, 0x51 ; imul eax, ecx ; sub eax, r8d ; ret
0x000002000049e8a8 : or al, 0x53 ; mov rax, r9 ; ret
0x00000200003e4a22 : or al, 0x5a ; imul eax, ecx ; add eax, r9d ; ret
0x00000200001c2135 : or al, 0x5b ; ret
0x00000200007d13ac : or al, 0x68 ; ret 0x33ff
0x0000020000053340 : or al, 0x72 ; sbb dh, dh ; ret 0x7502
0x00000200005653f8 : or al, 0x73 ; or dword ptr [rax], eax ; mov eax, 1 ; ret
0x00000200002303d1 : or al, 0x74 ; adc byte ptr [rcx - 1], al ; ret 0x3b45
0x00000200004ac9ad : or al, 0x75 ; add al, 0x41 ; mov al, cl ; ret
0x000002000043baed : or al, 0x75 ; enter -0xbf, -0x3e ; jmp 0x2000043bac7
0x00000200007aa5a0 : or al, 0x7a ; ret
0x00000200004c22d1 : or al, 0x81 ; ret 0xfff
0x0000020000091d82 : or al, 0x83 ; loope 0x20000091d90 ; cmp r8b, cl ; jne 0x20000091d95 ; ret
0x00000200003f91d7 : or al, 0x83 ; stc ; add dword ptr [rbp + 4], esi ; lea eax, dword ptr [rcx + 4] ; ret
0x000002000000414e : or al, 0x84 ; ror dword ptr [rbp + 0x450fff43], cl ; ret
0x0000020000455cae : or al, 0x85 ; sal byte ptr [rbx + 0x48], 3 ; ret 0x8548
0x00000200000e1025 : or al, 0x85 ; sal byte ptr [rcx + rbx*8 + 0x48], 3 ; ret 0xb4e9
0x0000020000693821 : or al, 0x85 ; sal byte ptr [rdx + rsi + 0x48], 3 ; ret 0x4eb
0x00000200007bcdd0 : or al, 0x86 ; mov dh, 0xff ; add rsp, 0x68 ; ret
0x00000200000a2259 : or al, 0x89 ; lea rax, qword ptr [rax + rcx*8] ; ret
0x0000020000545510 : or al, 0x89 ; or byte ptr [r8 - 0x7d], cl ; ret
0x0000020000206255 : or al, 0x89 ; ret
0x000002000013da1e : or al, 0x8a ; ret
0x00000200000fce2a : or al, 0x8b ; add eax, 0x2ac423 ; ret
0x0000020000157a62 : or al, 0x8b ; push rdx ; or al, 0x2b ; ret 0xccc3
0x00000200003e8951 : or al, 0x8b ; pushfq ; and al, 0 ; add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x0000020000037495 : or al, 0x8b ; ret
0x000002000013b7fc : or al, 0x8b ; ret 0x3b48
0x000002000077ac97 : or al, 0x8b ; ret 0x8948
0x000002000077bbe0 : or al, 0x8b ; ret 0x894c
0x00000200000d9d7a : or al, 0x8b ; ret 0x8b49
0x00000200003c6102 : or al, 0x8b ; ret 0xc148
0x0000020000190653 : or al, 0x8b ; ret 0xc2ff
0x00000200006834eb : or al, 0x8b ; ret 0xd0f7
0x00000200001c5371 : or al, 0x8b ; ret 0xe8c1
0x000002000065b543 : or al, 0x8b ; sbb cl, byte ptr [rax - 1] ; ret
0x0000020000150f94 : or al, 0x91 ; jmp r9
0x00000200006dc4e9 : or al, 0x92 ; lea r8, qword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x200006dc503
0x00000200007039b0 : or al, 0x97 ; add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200007bc274 : or al, 0x9d ; ret 0x66ff
0x000002000061c3c6 : or al, 0xa6 ; push rsi ; ret
0x00000200000b6923 : or al, 0xa8 ; add dword ptr [rbp + rax + 0x48], esi ; add esp, 0x28 ; ret
0x00000200001332f4 : or al, 0xad ; sldt word ptr [rax] ; add byte ptr [rbx], ah ; ret 0xc803
0x00000200007c23dd : or al, 0xb ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000613f86 : or al, 0xb ; call 0x200000e7219
0x000002000041f201 : or al, 0xb ; ret 0x189
0x0000020000499e54 : or al, 0xc ; add byte ptr [rax], al ; jmp 0x20000499e21
0x00000200007c2563 : or al, 0xc ; add rsp, 0x20 ; pop rbp ; ret
0x00000200006d6f30 : or al, 0xc ; ret 0x48ff
0x0000020000441f9c : or al, 0xc1 ; dec dword ptr [rax + 0x3b] ; ret 0x820f
0x00000200001bc084 : or al, 0xc1 ; ret
0x000002000007f174 : or al, 0xc2 ; adc byte ptr [rax], al ; mov eax, r9d ; ret
0x00000200004d16e4 : or al, 0xc2 ; jmp 0x200004d169f
0x00000200006549d1 : or al, 0xc2 ; mov eax, r9d ; ret
0x0000020000117c65 : or al, 0xc3 ; mov eax, 0xc000009a ; ret
0x00000200000fd112 : or al, 0xc3 ; mov rax, qword ptr [rcx + 0x2e8] ; ret
0x000002000044a174 : or al, 0xc7 ; or dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200006f78ae : or al, 0xc7 ; ret
0x0000020000541d31 : or al, 0xd3 ; loop 0x20000541d30 ; ret 0x3a0
0x00000200000f92fc : or al, 0xd9 ; test rcx, rcx ; je 0x200000f930e ; call rcx
0x00000200007c26c0 : or al, 0xe ; add rsp, 0x20 ; pop rbp ; ret
0x00000200006d561b : or al, 0xe8 ; ret
0x00000200001a3a86 : or al, 0xe9 ; ret
0x0000020000213ea8 : or al, 0xeb ; adc cl, byte ptr [rax - 0x7d] ; ret
0x00000200006cb719 : or al, 0xeb ; add ecx, dword ptr [rax - 0x75] ; ret 0x8548
0x000002000018033a : or al, 0xeb ; add ecx, dword ptr [rcx - 0x75] ; ret
0x00000200007b0c35 : or al, 0xeb ; loop 0x200007b0c89 ; add esp, 0x50 ; pop rbx ; ret
0x000002000001d55d : or al, 0xeb ; out dx, eax ; mov eax, 0xc0000001 ; ret
0x000002000012a43d : or al, 0xeb ; stosd dword ptr [rdi], eax ; mov eax, 0xc000000d ; ret
0x0000020000478d7b : or al, 0xeb ; sub dword ptr [rax - 0x75], ecx ; ret
0x00000200004fbe60 : or al, 0xee ; ret
0x00000200007c277e : or al, 0xf ; add rsp, 0x20 ; pop rbp ; ret
0x00000200007058ea : or al, 0xf ; call 0x200000f7ff8
0x00000200006a3841 : or al, 0xf ; mov bh, 0x45 ; add bh, bh ; ret
0x00000200006b4cee : or al, 0xf ; ret 0x4789
0x000002000043bbd2 : or al, 0xf ; ret 0xba0f
0x00000200007d2253 : or al, 0xf ; xchg eax, ebp ; ret
0x00000200004bebaa : or al, 0xf ; xchg edx, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000008fad9 : or al, 0xf6 ; ret
0x000002000054882f : or al, 0xf7 ; jno 0x2000054883f ; ret
0x000002000054882e : or al, 0xf7 ; jno 0x20000548840 ; ret
0x00000200004664e2 : or al, 0xf7 ; ret
0x00000200005fa2a0 : or al, 0xf7 ; ret 0xff80
0x00000200004b4a72 : or al, 0xff ; ret
0x0000020000431907 : or al, 0xff ; ret 0x3b41
0x00000200001bd45a : or al, 0xff ; ror byte ptr [rax - 0x7d], 0xc1 ; and al, 0x3b ; ret
0x000002000001f586 : or al, 1 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000001bedc : or al, 1 ; add byte ptr [rax], al ; ret
0x0000020000231582 : or al, 1 ; jne 0x20000231593 ; movzx eax, word ptr [rcx + 0x28] ; ret
0x00000200001f93c1 : or al, 1 ; mov byte ptr [rdx + 0x22], al ; ret
0x000002000070a078 : or al, 3 ; enter 0x2b41, -0x36 ; mov dword ptr [r8], ecx ; ret
0x000002000049fe8a : or al, 3 ; ret
0x00000200001d0184 : or al, 4 ; jne 0x200001d0197 ; mov eax, 1 ; ret
0x00000200001b388f : or al, 4 ; mov byte ptr [rcx + 4], al ; ret
0x00000200001d023b : or al, 4 ; sete dl ; jmp 0x200001d0225
0x000002000057f937 : or al, 8 ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x00000200001d98b0 : or al, 8 ; test cl, 8 ; je 0x200001d98c2 ; or al, 0x10 ; ret
0x000002000043cac3 : or al, al ; call 0x1ffc344eed3
0x00000200000bb7b8 : or al, al ; mov byte ptr [rcx + 0xbe], al ; ret
0x0000020000109e45 : or al, bh ; ret
0x00000200000c9d84 : or al, bh ; sub eax, 0xc2b4b00 ; ret 0x3b48
0x00000200000837eb : or al, bl ; mov eax, 0xc0000409 ; ret
0x000002000042f630 : or al, bl ; xor eax, eax ; ret
0x00000200003c6a35 : or al, bpl ; in al, -0x14 ; ret
0x00000200005ddd0a : or al, bpl ; ret
0x000002000071cfa8 : or al, bpl ; rol dword ptr [rbx - 1], 1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200007d2422 : or al, byte ptr [r9 + 0x3b] ; ret
0x0000020000044096 : or al, byte ptr [rax + rax] ; or dword ptr [rcx - 0x75], ecx ; ret 0x8b49
0x000002000078ae43 : or al, byte ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x0000020000544353 : or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x000002000078aa46 : or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000040d4bd : or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000cff6d : or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x8b49
0x0000020000102632 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000086112 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x0000020000160f6e : or al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000200000f76a2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, edx ; call 0x200000c3998
0x00000200005913f2 : or al, byte ptr [rax] ; add byte ptr [rbx], ch ; ret 0xf823
0x000002000040a9a1 : or al, byte ptr [rax] ; add byte ptr [rcx - 0x3f], cl ; call 0x1ffc273f5bd
0x000002000040a9d7 : or al, byte ptr [rax] ; add byte ptr [rcx - 0x3f], cl ; call 0x1ffc273f5f3
0x0000020000479d33 : or al, byte ptr [rax] ; add byte ptr [rcx - 0x3f], cl ; call 0x1ffc27ae94f
0x0000020000092ee8 : or al, byte ptr [rax] ; add byte ptr [rcx - 0x74b3f7bb], cl ; ret
0x00000200006abc99 : or al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0xcb75
0x00000200004ac43b : or al, byte ptr [rax] ; add byte ptr [rsp + rax*4 - 0x75], dh ; adc esi, esi ; ret 0xf08
0x000002000046ba70 : or al, byte ptr [rax] ; add dh, dh ; ret
0x00000200000aff45 : or al, byte ptr [rax] ; add dh, dh ; ret 0xf04
0x0000020000044631 : or al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200004526ad : or al, byte ptr [rax] ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000633317 : or al, byte ptr [rax] ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000442fbd : or al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x000002000008dffc : or al, byte ptr [rax] ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000440002 : or al, byte ptr [rax] ; add rsp, 0x78 ; ret
0x000002000054bab1 : or al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000006d269 : or al, byte ptr [rax] ; mov r8, qword ptr [rsp + 0x38] ; call rax
0x000002000053b04e : or al, byte ptr [rax] ; ret
0x000002000003f642 : or al, byte ptr [rax] ; sti ; add rsp, 0x28 ; ret
0x0000020000545cac : or al, byte ptr [rax] ; xor al, al ; ret
0x00000200000fcd5d : or al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003e0f63 : or al, byte ptr [rbp + 0x33] ; sal byte ptr [rbx], 0xd2 ; call 0x2000000c031
0x00000200000753d1 : or al, byte ptr [rbx + rax + 0x3d] ; ret
0x000002000021c478 : or al, byte ptr [rbx + rdi - 0x3f] ; jae 0x2000021c48b ; or eax, 0xffffffff ; ret
0x0000020000207bac : or al, byte ptr [rbx + rdi - 0x3f] ; jbe 0x20000207bbf ; or eax, 0xffffffff ; ret
0x0000020000211af2 : or al, byte ptr [rbx] ; ret 0x8941
0x0000020000084e4e : or al, byte ptr [rcx + 0x23] ; fmul dword ptr [rbx] ; fadd dword ptr [rcx - 0x48] ; ret 0
0x00000200007d2423 : or al, byte ptr [rcx + 0x3b] ; ret
0x00000200007aff0e : or al, byte ptr [rcx + 0xf] ; mov bh, 0xc0 ; ret
0x0000020000477d85 : or al, byte ptr [rcx + 0xf] ; mov dh, 0x85 ; ret 6
0x000002000059648e : or al, byte ptr [rcx - 0x3f] ; ret
0x000002000023177d : or al, byte ptr [rcx - 0x75] ; adc al, 0x89 ; mov dword ptr [r8], edx ; ret
0x00000200001e63d1 : or al, byte ptr [rcx - 0x75] ; mov byte ptr [rbx - 0x73], 0x14 ; or ch, byte ptr [rbx] ; ret 0x341
0x0000020000224ec4 : or al, byte ptr [rcx - 0x75] ; ret 0x2b41
0x00000200005f8aba : or al, byte ptr [rcx - 0x7f] ; ret 0x2400
0x000002000050a32c : or al, byte ptr [rcx - 0xa] ; ret 0xf01
0x00000200006db001 : or al, byte ptr [rcx - 1] ; mov byte ptr [rbx + rdi - 0xb], 0x72 ; ret
0x00000200006e212c : or al, byte ptr [rcx - 1] ; ret
0x00000200004019ff : or al, byte ptr [rcx - 1] ; ret 0x3b44
0x00000200001a29ca : or al, byte ptr [rcx - 1] ; ret 0x834a
0x000002000023035f : or al, byte ptr [rcx - 9] ; ret
0x000002000020bdbf : or al, byte ptr [rcx] ; add al, al ; add rsp, 0x28 ; ret
0x00000200001214bf : or al, byte ptr [rcx] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005af7c9 : or al, ch ; adc dword ptr [rsi - 0x166f004c], edi ; ret 0xea51
0x000002000060ed21 : or al, ch ; cmp dword ptr [rax + rax], edx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003c6a36 : or al, ch ; in al, -0x14 ; ret
0x0000020000716ec3 : or al, ch ; ja 0x20000716ed5 ; movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x00000200004ba924 : or al, ch ; jbe 0x200004ba900 ; ret 0x41ff
0x00000200005218ca : or al, ch ; jo 0x2000052192e ; ret
0x0000020000718fca : or al, ch ; mov bpl, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x0000020000718f7a : or al, ch ; nop ; mov ch, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x0000020000454b04 : or al, ch ; pop rax ; ret 0x33ff
0x000002000000abcf : or al, ch ; ret
0x0000020000108798 : or al, ch ; ret 0xfb61
0x000002000071cfa9 : or al, ch ; rol dword ptr [rbx - 1], 1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200005c2082 : or al, ch ; sbb byte ptr [rbp - 0x4e], bl ; call qword ptr [rax - 0x15833d17]
0x000002000022be31 : or al, ch ; stc ; ret
0x0000020000710de7 : or al, ch ; xchg eax, edi ; cmp eax, 0x8348ffad ; ret
0x0000020000718eda : or al, ch ; xor byte ptr [rsi - 0x74b70001], dh ; ret
0x000002000001017d : or al, dh ; cmpxchg qword ptr [rcx], rdx ; jne 0x20000010191 ; ret
0x00000200001eb143 : or al, dh ; dec dword ptr [rcx + 0x1190] ; ret
0x00000200001eb161 : or al, dh ; dec dword ptr [rcx + 0x1194] ; ret
0x00000200006ce540 : or al, dh ; pop r15 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000020000109e44 : or al, dil ; ret
0x00000200000191aa : or al, dl ; jmp 0x2000001917b
0x00000200004cec3e : or al, r13b ; ret
0x00000200000bb7b7 : or al, r8b ; mov byte ptr [rcx + 0xbe], al ; ret
0x00000200000f35bd : or ax, word ptr [rax] ; ret
0x0000020000147402 : or bh, al ; ret
0x00000200001578c3 : or bh, bh ; dec r8 ; jne 0x200001578c7 ; ret
0x0000020000157971 : or bh, bh ; dec r8 ; jne 0x20000157975 ; ret
0x00000200000f4330 : or bh, bh ; jl 0x200000f433d ; mov al, 1 ; ret
0x00000200001b8eca : or bh, bh ; mov eax, 0x80070216 ; ret
0x000002000016138c : or bh, bh ; mov eax, 0xc0000095 ; ret
0x000002000015798e : or bh, bh ; mov word ptr [rdx + 4], ax ; ret
0x0000020000019504 : or bh, bh ; ret
0x000002000000837d : or bh, bh ; ret 0x3b41
0x000002000042914a : or bh, bh ; ret 0x5489
0x0000020000565b05 : or bh, bh ; ret 0x8948
0x0000020000027fd2 : or bh, bh ; ret 0x894c
0x0000020000545c46 : or bh, bh ; ret 0x8b48
0x00000200004990a3 : or bh, bh ; ret 0xb70f
0x0000020000451ed7 : or bh, bh ; ret 0xc1ff
0x00000200006a02a1 : or bh, bh ; ret 0xefeb
0x00000200001322e7 : or bh, bh ; rol byte ptr [rbp + 0xf], 0xb7 ; ret
0x00000200004373f1 : or bh, bh ; rol byte ptr [rcx - 0x77], 0x41 ; add al, 0xe8 ; ret
0x000002000001c958 : or bh, bh ; rol byte ptr [rcx - 0x7d], 0xc3 ; or byte ptr [rbx], bh ; ret
0x00000200001bd400 : or bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; and al, 0x3b ; ret
0x000002000002821c : or bh, byte ptr [rax + 1] ; ret
0x000002000062ec2f : or bh, byte ptr [rbx - 0x3fffff66] ; jmp 0x2000062ec00
0x000002000022ea9b : or bh, byte ptr [rbx] ; ret 0xdb1b
0x00000200007116f2 : or bh, byte ptr [rcx - 0x74b7004d] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000015d7ac : or bh, byte ptr [rcx] ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x00000200007d2250 : or bh, byte ptr [rcx] ; pop rcx ; or al, 0xf ; xchg eax, ebp ; ret
0x00000200001c4f94 : or bh, byte ptr [rdx + 0x32] ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x000002000061f388 : or bh, byte ptr [rdx + 0x4d574454] ; call 0x2000024d009
0x00000200006204a4 : or bh, byte ptr [rdx + 0x57676244] ; call 0x2000024d009
0x000002000061f87e : or bh, byte ptr [rdx + 0x704e534b] ; call 0x2000024d009
0x000002000062116f : or bh, byte ptr [rdx + 0x72704d45] ; call 0x2000024d009
0x000002000019c23c : or bh, byte ptr [rdx] ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000007c7de : or bh, byte ptr [rsi - 0x37] ; mov byte ptr [rdx], cl ; ret
0x0000020000170f3b : or bh, cl ; dec dword ptr [rax - 0x75] ; ret
0x0000020000444054 : or bh, cl ; ret 0x48ff
0x0000020000439898 : or bh, dh ; ret
0x00000200004ef2e6 : or bh, dh ; ret 0xfff
0x00000200004315a5 : or bl, al ; inc dword ptr [rbp - 0x74d98a25] ; ret
0x00000200006cf1e9 : or bl, al ; mov al, 1 ; ret
0x00000200003db7ed : or bl, al ; mov al, 4 ; ret
0x00000200006715d3 : or bl, al ; mov eax, 0x30 ; ret
0x0000020000464a3f : or bl, al ; mov eax, 0x8664 ; ret
0x000002000054e190 : or bl, al ; mov eax, 0xc000000d ; ret
0x000002000040fe76 : or bl, al ; mov qword ptr [r8], rdx ; mov qword ptr [r9], rcx ; ret
0x000002000014746e : or bl, al ; mov qword ptr [rcx], rax ; mov dword ptr [rcx + 6], eax ; ret
0x0000020000147483 : or bl, al ; mov qword ptr [rcx], rax ; mov qword ptr [rcx + 5], rax ; ret
0x00000200006048af : or bl, al ; mov rax, qword ptr [rcx + 0x48] ; mov eax, dword ptr [rax + 8] ; ret
0x00000200000bc513 : or bl, al ; or eax, 0xffffffff ; ret
0x0000020000120f43 : or bl, al ; xor al, al ; ret
0x0000020000026cd9 : or bl, al ; xor eax, eax ; ret
0x0000020000026221 : or bl, bpl ; ret
0x00000200000881da : or bl, bpl ; ret 0xfe83
0x000002000062b0f2 : or bl, byte ptr [rdi] ; ret 0x48ff
0x0000020000059d09 : or bl, ch ; cmc ; test rcx, rcx ; sete al ; ret
0x000002000011fc28 : or bl, ch ; cmc ; xor eax, eax ; ret
0x00000200004b33b5 : or bl, ch ; in al, dx ; mov eax, 0xc0000058 ; ret
0x0000020000213eb2 : or bl, ch ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200001d10e6 : or bl, ch ; or dword ptr [rcx - 0xa], eax ; ror byte ptr [rax], 0x8b ; ret
0x0000020000440324 : or bl, ch ; out dx, al ; mov eax, 0xc000007b ; ret
0x0000020000026222 : or bl, ch ; ret
0x00000200005c7dec : or bl, ch ; ret 0xdb33
0x00000200000881db : or bl, ch ; ret 0xfe83
0x00000200003d2362 : or bl, dh ; ret
0x00000200001e2099 : or bpl, byte ptr [rax - 0x74f98bff] ; ret 0x149
0x00000200007c8027 : or bpl, r8b ; ret 0x9836
0x0000020000620d23 : or byte ptr [r10 + 0x6c634d45], r15b ; call 0x2000024d009
0x0000020000237ba5 : or byte ptr [r10 - 0x7d], al ; ret
0x0000020000518db6 : or byte ptr [r10], dl ; ret
0x000002000050e1e2 : or byte ptr [r11 + 0x17401f8], al ; ret
0x000002000062c88d : or byte ptr [r11 + 0x41890846], cl ; or al, 0x8b ; ret
0x0000020000507119 : or byte ptr [r11 + 0x621ee8d5], cl ; ret
0x0000020000018be2 : or byte ptr [r11 + rcx*4 + 0x51], cl ; sbb byte ptr [rcx - 0x75], cl ; ret 0x348
0x00000200005cbfa3 : or byte ptr [r11], bpl ; ret 0x8b44
0x000002000041f214 : or byte ptr [r11], cl ; ret 0x189
0x00000200003e7dd9 : or byte ptr [r11], r14b ; call rbx
0x0000020000049209 : or byte ptr [r11], sil ; ror byte ptr [rcx - 0x75], cl ; ret
0x000002000054fc9e : or byte ptr [r13 + 0x33], al ; ror byte ptr [rax - 0x75], 0xd6 ; call rax
0x000002000000f929 : or byte ptr [r13 + 0x3b], cl ; ret 0x850f
0x00000200001c011a : or byte ptr [r13 + 0x50e80153], cl ; ret
0x0000020000619a2a : or byte ptr [r13 + r9*4 + 0x2d], r9b ; ffree st(4) ; ret
0x00000200006f43ff : or byte ptr [r13 + r9*4 + 0xd], cl ; cwde ; ret 0x8bff
0x00000200006f649c : or byte ptr [r13 + r9*4 + 0xd], cl ; sti ; ret 0x8bff
0x00000200006f63ec : or byte ptr [r13 + r9*4 + 0xd], r9b ; stosd dword ptr [rdi], eax ; ret 0xb8ff
0x000002000065e144 : or byte ptr [r13 - 0x4c], r14b ; inc rdx ; jmp 0x2000065e180
0x000002000049a684 : or byte ptr [r13 - 0x75], al ; ret 0x8948
0x0000020000178443 : or byte ptr [r13 - 0x75], cl ; ret 0x894d
0x00000200001e8594 : or byte ptr [r13 - 0x7b], r9b ; ret
0x00000200006bf76c : or byte ptr [r13 - 0x7b], r9b ; ror byte ptr [rdi], 0x85 ; ret 0
0x0000020000703ba7 : or byte ptr [r14 + 4], sil ; mov qword ptr [rcx + 8], rax ; ret
0x000002000020dfd8 : or byte ptr [r14 - 0x7b], spl ; ret 0x1975
0x00000200004aca56 : or byte ptr [r15 + r9 - 0x55], r8b ; or byte ptr [rax - 1], cl ; ret 0xceeb
0x0000020000796396 : or byte ptr [r15], 0xb6 ; ret 0xf44
0x000002000003715a : or byte ptr [r15], cl ; mov bl, 0x10 ; ret
0x0000020000035001 : or byte ptr [r15], cl ; test byte ptr [rdi + 0x5e], cl ; adc eax, dword ptr [rax] ; ret
0x00000200002281df : or byte ptr [r15], cl ; xchg eax, ebx ; ret
0x0000020000228201 : or byte ptr [r15], cl ; xchg eax, edi ; ret
0x00000200002281f0 : or byte ptr [r15], cl ; xchg eax, edx ; ret
0x0000020000228212 : or byte ptr [r15], cl ; xchg eax, esi ; ret
0x0000020000717c64 : or byte ptr [r15], r9b ; xchg eax, esp ; ret
0x00000200000b7ab5 : or byte ptr [r8 + 0x22], 0x10 ; ret
0x00000200000c4697 : or byte ptr [r8 + 0x23], cl ; ret
0x00000200001197d1 : or byte ptr [r8 + 0x23], cl ; ret 0xb49
0x000002000065e68d : or byte ptr [r8 + 0x2b], cl ; ret 0x3b48
0x00000200005a735e : or byte ptr [r8 + 0x2b], cl ; ret 0x8548
0x00000200004e72cd : or byte ptr [r8 + 0x2b], r9b ; ret
0x00000200002387fa : or byte ptr [r8 + 0x2b], r9b ; ret 0x8548
0x000002000051496b : or byte ptr [r8 + 0x3b], cl ; ret
0x0000020000431473 : or byte ptr [r8 + 0x3b], cl ; ret 0x4177
0x00000200001d6610 : or byte ptr [r8 + 0x3b], cl ; ret 0xec75
0x000002000021c0ae : or byte ptr [r8 + 0x3b], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3983
0x000002000011cf80 : or byte ptr [r8 + 0x3b], cl ; sal dword ptr [rbx + rcx + 0x48], 0x3b ; ret 0x974
0x0000020000021a3c : or byte ptr [r8 + 0xb], cl ; ret 0x3b48
0x00000200000bab81 : or byte ptr [r8 + 0xb], cl ; ret 0x8949
0x000002000079ef9c : or byte ptr [r8 + 0xb], r9b ; ret 0x894c
0x000002000020e896 : or byte ptr [r8 + 0xf], cl ; mov bl, 0x10 ; ret
0x000002000014e997 : or byte ptr [r8 + 0xf], cl ; ret
0x0000020000009ba8 : or byte ptr [r8 + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x0000020000798f68 : or byte ptr [r8 + 3], cl ; ret
0x0000020000558ddd : or byte ptr [r8 + 3], cl ; ret 0x3b48
0x000002000016becb : or byte ptr [r8 + r8], r11b ; add al, al ; jmp 0x2000016be9c
0x0000020000456873 : or byte ptr [r8 + rax], al ; add byte ptr [rax], al ; ret
0x0000020000151232 : or byte ptr [r8 + rsi*8], spl ; ret
0x000002000005736a : or byte ptr [r8 - 0x4a], al ; add dword ptr [rax - 0x75], ecx ; ret 0x4808
0x000002000001ec0e : or byte ptr [r8 - 0x74178aff], r13b ; ret
0x0000020000102e07 : or byte ptr [r8 - 0x75], cl ; call qword ptr [rbx]
0x000002000006b0c8 : or byte ptr [r8 - 0x75], cl ; fimul dword ptr [rax - 9] ; ret 0xfff
0x00000200006286d3 : or byte ptr [r8 - 0x75], cl ; iretd ; call 0x2000024d008
0x00000200003ca638 : or byte ptr [r8 - 0x75], cl ; or dword ptr [rax + 3], ecx ; ret 0x2b48
0x0000020000669f43 : or byte ptr [r8 - 0x75], cl ; pop rbx ; and byte ptr [rax - 0x7f], cl ; ret
0x000002000001e0b6 : or byte ptr [r8 - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x000002000006c6fa : or byte ptr [r8 - 0x75], cl ; ret
0x000002000003a516 : or byte ptr [r8 - 0x75], cl ; ret 0x3308
0x000002000020e784 : or byte ptr [r8 - 0x75], cl ; ret 0xc148
0x000002000001a3e5 : or byte ptr [r8 - 0x75], cl ; ret 0xd148
0x00000200001cd600 : or byte ptr [r8 - 0x75], cl ; xlatb ; call 0x2000013987b
0x0000020000401aae : or byte ptr [r8 - 0x75], r9b ; push rdx ; or byte ptr [rcx - 0x75], al ; ret 0xf44
0x00000200000e66ad : or byte ptr [r8 - 0x75], r9b ; ret 0x49f0
0x00000200001265ae : or byte ptr [r8 - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200004dbb68 : or byte ptr [r8 - 0x77], cl ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200005d51f7 : or byte ptr [r8 - 0x77], cl ; enter -0x48f1, 0x45 ; ret 0x8966
0x000002000040491a : or byte ptr [r8 - 0x7b], cl ; leave ; je 0x2000040495d ; mov eax, r10d ; ret
0x00000200005819dc : or byte ptr [r8 - 0x7b], cl ; leave ; je 0x200005819b5 ; jmp 0x200005819b0
0x0000020000210564 : or byte ptr [r8 - 0x7b], cl ; leave ; jne 0x20000210566 ; ret
0x0000020000225be5 : or byte ptr [r8 - 0x7b], cl ; ret 0x4d74
0x00000200004b3161 : or byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x000002000010a9f6 : or byte ptr [r8 - 0x7d], cl ; ret
0x0000020000569772 : or byte ptr [r8 - 0x7d], cl ; sal dword ptr [rax], -0x18 ; ret
0x00000200000056a4 : or byte ptr [r8 - 0x7d], r9b ; ret
0x00000200007876d6 : or byte ptr [r8 - 0x7d], r9b ; ret 0x494a
0x00000200001932f9 : or byte ptr [r8 - 0x7d], r9b ; ret 0x4cf8
0x000002000045f38e : or byte ptr [r8 - 1], r9b ; ret
0x000002000071ad89 : or byte ptr [r8 - 9], cl ; ret 0xfffc
0x000002000003d2ba : or byte ptr [r8], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000049452d : or byte ptr [r9 + 0x23], cl ; ret
0x00000200000db058 : or byte ptr [r9 + 0x23], cl ; ret 0xb4c
0x00000200005fae8f : or byte ptr [r9 + 0x23], r9b ; ret
0x000002000004c2e2 : or byte ptr [r9 + 0x3b], r9b ; ret 0x870f
0x000002000005397e : or byte ptr [r9 + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200000c7faa : or byte ptr [r9 + 3], al ; ret 0xc203
0x0000020000524dac : or byte ptr [r9 + r9*4 + 0x77], r8b ; adc al, 0xe8 ; mov dword ptr [rdi], esp ; ret
0x00000200001ceb41 : or byte ptr [r9 + rcx*4 + 1], cl ; ret
0x00000200004e5ec4 : or byte ptr [r9 - 0x42], r8b ; add byte ptr [rax], ah ; add sil, sil ; ret
0x00000200005475f5 : or byte ptr [r9 - 0x75], al ; ret
0x00000200003ca168 : or byte ptr [r9 - 0x75], cl ; ret 0xf748
0x00000200001f407c : or byte ptr [r9 - 0x75], r9b ; xlatb ; call 0x200001f02c7
0x0000020000709b81 : or byte ptr [r9 - 0x76], al ; ret 0xd8f6
0x0000020000230936 : or byte ptr [r9 - 0x77], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x00000200000723b5 : or byte ptr [r9 - 0x77], cl ; jns 0x200000723d2 ; pop rdi ; ret
0x0000020000560d00 : or byte ptr [r9 - 0x77], r9b ; sbb byte ptr [r9 - 1], al ; ret 0x8944
0x000002000023f1d0 : or byte ptr [r9 - 0x7d], al ; jmp qword ptr [rax]
0x00000200001fdbc1 : or byte ptr [r9 - 0x7d], cl ; call 0x1ffc40c50d3
0x00000200001752e7 : or byte ptr [r9 - 0x7d], cl ; ret
0x000002000005333c : or byte ptr [r9], dil ; or al, 0x72 ; sbb dh, dh ; ret 0x7502
0x00000200000980a5 : or byte ptr [rax + 0x1a], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000015b934 : or byte ptr [rax + 0x1a], cl ; add al, ch ; ret
0x00000200000b7ab6 : or byte ptr [rax + 0x22], 0x10 ; ret
0x0000020000230d29 : or byte ptr [rax + 0x23], cl ; add al, 0x24 ; add rsp, 0x18 ; ret
0x00000200000c4698 : or byte ptr [rax + 0x23], cl ; ret
0x00000200001197d2 : or byte ptr [rax + 0x23], cl ; ret 0xb49
0x0000020000035730 : or byte ptr [rax + 0x29], cl ; adc eax, 0x2ed038 ; ret
0x000002000024382c : or byte ptr [rax + 0x2b], cl ; ret
0x000002000065e68e : or byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x00000200002387fb : or byte ptr [rax + 0x2b], cl ; ret 0x8548
0x000002000062d405 : or byte ptr [rax + 0x2b], cl ; ret 0xd148
0x00000200002401ef : or byte ptr [rax + 0x2b], cl ; ret 0xf075
0x000002000023fb82 : or byte ptr [rax + 0x2b], cl ; ret 0xf175
0x00000200000b467f : or byte ptr [rax + 0x31], cl ; add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4b08
0x000002000012c16a : or byte ptr [rax + 0x33], cl ; ret
0x0000020000018342 : or byte ptr [rax + 0x33], cl ; sub byte ptr [r8 + 0x23], r9b ; ret 0x3148
0x0000020000146810 : or byte ptr [rax + 0x3b], cl ; enter 0x2175, -0x7d ; ret 0x83f8
0x0000020000146ab4 : or byte ptr [rax + 0x3b], cl ; enter 0x2275, -0x7d ; ret 0x83f8
0x0000020000144e08 : or byte ptr [rax + 0x3b], cl ; enter 0x2375, -0x7d ; ret 0x83f8
0x00000200007801b3 : or byte ptr [rax + 0x3b], cl ; enter 0x2575, -0x7d ; ret
0x0000020000783cc4 : or byte ptr [rax + 0x3b], cl ; enter 0x2675, -0x7d ; ret
0x000002000003022c : or byte ptr [rax + 0x3b], cl ; ret
0x0000020000099a35 : or byte ptr [rax + 0x3b], cl ; ret 0x1674
0x00000200000ee99f : or byte ptr [rax + 0x3b], cl ; ret 0x2075
0x0000020000100dce : or byte ptr [rax + 0x3b], cl ; ret 0x3c75
0x0000020000431474 : or byte ptr [rax + 0x3b], cl ; ret 0x4177
0x000002000020dda0 : or byte ptr [rax + 0x3b], cl ; ret 0x775
0x00000200001c8200 : or byte ptr [rax + 0x3b], cl ; ret 0x820f
0x0000020000064752 : or byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200000fe0c7 : or byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200000eeaef : or byte ptr [rax + 0x3b], cl ; ret 0xa75
0x0000020000220192 : or byte ptr [rax + 0x3b], cl ; ret 0xeb72
0x00000200001d6611 : or byte ptr [rax + 0x3b], cl ; ret 0xec75
0x0000020000099a4b : or byte ptr [rax + 0x3b], cl ; ret 0xef75
0x00000200001e2ffe : or byte ptr [rax + 0x3b], cl ; ret 0xf172
0x00000200001048ce : or byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000021c0af : or byte ptr [rax + 0x3b], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3983
0x000002000011cf81 : or byte ptr [rax + 0x3b], cl ; sal dword ptr [rbx + rcx + 0x48], 0x3b ; ret 0x974
0x0000020000038c37 : or byte ptr [rax + 0x3b], r9b ; ret
0x0000020000220191 : or byte ptr [rax + 0x3b], r9b ; ret 0xeb72
0x000002000008573d : or byte ptr [rax + 0x40c64101], dh ; adc byte ptr [rax], al ; ret
0x0000020000085656 : or byte ptr [rax + 0x40c64101], dh ; adc byte ptr [rcx], al ; ret
0x000002000008573c : or byte ptr [rax + 0x40c64101], sil ; adc byte ptr [rax], al ; ret
0x0000020000085655 : or byte ptr [rax + 0x40c64101], sil ; adc byte ptr [rcx], al ; ret
0x00000200001fc7d3 : or byte ptr [rax + 0x49], dl ; mov dword ptr [rcx], eax ; ret
0x00000200001fc7d2 : or byte ptr [rax + 0x49], r10b ; mov dword ptr [rcx], eax ; ret
0x00000200005d6dd3 : or byte ptr [rax + 0x4c000000], 0x2b ; ret
0x00000200000881fc : or byte ptr [rax + 0x63], cl ; ret 0x8b41
0x0000020000087b5b : or byte ptr [rax + 0x69], cl ; ret
0x00000200004ca652 : or byte ptr [rax + 0x69], cl ; ret 0x101
0x00000200000953c2 : or byte ptr [rax + 0x6a850f01], bpl ; ret 0xf
0x00000200000953c3 : or byte ptr [rax + 0x6a850f01], ch ; ret 0xf
0x00000200006cde74 : or byte ptr [rax + 0xa8830e9], al ; mov al, 1 ; ret
0x0000020000021a3d : or byte ptr [rax + 0xb], cl ; ret 0x3b48
0x00000200001da177 : or byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200000bab82 : or byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000079ef9d : or byte ptr [rax + 0xb], cl ; ret 0x894c
0x000002000077d0dc : or byte ptr [rax + 0xb], cl ; ret 0xbf48
0x0000020000103123 : or byte ptr [rax + 0xb], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0xc148
0x000002000020e897 : or byte ptr [rax + 0xf], cl ; mov bl, 0x10 ; ret
0x000002000014e998 : or byte ptr [rax + 0xf], cl ; ret
0x0000020000009ba9 : or byte ptr [rax + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x00000200000811b8 : or byte ptr [rax + 0xf], cl ; stosd dword ptr [rdi], eax ; ret
0x000002000010499d : or byte ptr [rax + 1], bh ; ret
0x00000200007ae05c : or byte ptr [rax + 1], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000002000010499c : or byte ptr [rax + 1], dil ; ret
0x00000200001a5afa : or byte ptr [rax + 2], 0 ; add bl, ch ; add ecx, dword ptr [rbp - 0x75] ; ret
0x000002000070c88d : or byte ptr [rax + 3], 1 ; xor eax, eax ; ret
0x00000200003dc9f7 : or byte ptr [rax + 3], cl ; ret
0x0000020000558dde : or byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200001da048 : or byte ptr [rax + 5], cl ; nop ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x000002000065f7e6 : or byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0xf3f
0x0000020000456874 : or byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret
0x000002000016becc : or byte ptr [rax + rax], bl ; add al, al ; jmp 0x2000016be9b
0x000002000059cc20 : or byte ptr [rax + rcx*4 + 0x3e], al ; jmp 0x2000059cc35
0x0000020000151233 : or byte ptr [rax + rsi*8], ah ; ret
0x000002000002ddc4 : or byte ptr [rax - 0x2d], cl ; call 0x1ffc304be56
0x00000200000c6ce3 : or byte ptr [rax - 0x3b7cb7ff], dh ; pop rbx ; ret
0x00000200001e2a9a : or byte ptr [rax - 0x3f], cl ; call 0x1ffc34973b5
0x00000200000ffe41 : or byte ptr [rax - 0x3f], cl ; call 0x1ffc3934658
0x00000200000bd5ec : or byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200007a165f : or byte ptr [rax - 0x3f], cl ; jmp 0x200007a166e
0x0000020000622637 : or byte ptr [rax - 0x3fffff45], bh ; ret
0x000002000005736b : or byte ptr [rax - 0x4a], al ; add dword ptr [rax - 0x75], ecx ; ret 0x4808
0x000002000011ed3f : or byte ptr [rax - 0x68], 0x49 ; or eax, ecx ; or rax, rcx ; ret
0x000002000015ef0c : or byte ptr [rax - 0x73], 0x1c ; ret 0x3c7
0x000002000023333c : or byte ptr [rax - 0x73], 0x4f ; and bh, bh ; ret
0x000002000042f2b1 : or byte ptr [rax - 0x73], 0xc ; ret
0x000002000004378e : or byte ptr [rax - 0x73], 4 ; ret 0x48c3
0x0000020000008804 : or byte ptr [rax - 0x73], 4 ; ret 0xccc3
0x000002000000a30c : or byte ptr [rax - 0x73], cl ; add eax, 0x14e92c ; ret
0x000002000000a363 : or byte ptr [rax - 0x73], cl ; add eax, 0x150455 ; ret
0x00000200000099c9 : or byte ptr [rax - 0x73], cl ; add eax, 0x150cdf ; ret
0x00000200000bf6c0 : or byte ptr [rax - 0x73], cl ; add eax, 0x240b78 ; ret
0x0000020000517d0b : or byte ptr [rax - 0x73], cl ; add eax, 0x589ad ; ret
0x0000020000517d1d : or byte ptr [rax - 0x73], cl ; add eax, 0x589fb ; ret
0x00000200004f58d8 : or byte ptr [rax - 0x73], cl ; add eax, 0xffe299c0 ; ret
0x000002000002fb2f : or byte ptr [rax - 0x73], cl ; or al, 0x10 ; mov qword ptr [r8], rcx ; ret
0x0000020000455379 : or byte ptr [rax - 0x73], cl ; pop rdx ; adc byte ptr [rax - 0x75], cl ; ret 0x8948
0x000002000001ec0f : or byte ptr [rax - 0x74178aff], ch ; ret
0x00000200000bab7e : or byte ptr [rax - 0x75], 0x41 ; or byte ptr [rax + 0xb], cl ; ret 0x8949
0x0000020000021a39 : or byte ptr [rax - 0x75], 0x43 ; or byte ptr [rax + 0xb], cl ; ret 0x3b48
0x000002000079ef99 : or byte ptr [rax - 0x75], 0x47 ; or byte ptr [rax + 0xb], cl ; ret 0x894c
0x00000200000d89c6 : or byte ptr [rax - 0x75], 0x4c ; ret 0xf618
0x00000200000bd5e8 : or byte ptr [rax - 0x75], 0x59 ; or byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200001b7415 : or byte ptr [rax - 0x75], 0x5c ; and al, 8 ; mov qword ptr [r8], r11 ; ret
0x000002000061c257 : or byte ptr [rax - 0x75], 0xcf ; call 0x200001484f6
0x0000020000156b98 : or byte ptr [rax - 0x75], 0xd4 ; mov rcx, rax ; call 0x20000092e29
0x000002000040e354 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000010e356 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], r9b ; ret 0x4408
0x000002000066fe7e : or byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0x15], 1 ; ret
0x000002000014727e : or byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200001264d2 : or byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x00000200007113ed : or byte ptr [rax - 0x75], cl ; add dword ptr [rax + 0x3b], ecx ; ret 0xf176
0x000002000007c762 : or byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x7d], ecx ; loopne 0x2000007c76e ; ret
0x00000200001bf356 : or byte ptr [rax - 0x75], cl ; add eax, 0x13a4f2 ; call rax
0x000002000005ccd9 : or byte ptr [rax - 0x75], cl ; add eax, 0x2a340f ; ret
0x0000020000238c2e : or byte ptr [rax - 0x75], cl ; add eax, 0xc0c1a ; call rax
0x00000200006939f3 : or byte ptr [rax - 0x75], cl ; and al, 0x28 ; mov byte ptr [rax], 0 ; ret
0x00000200001f1930 : or byte ptr [rax - 0x75], cl ; and byte ptr [r13 + 0xb], al ; ret
0x0000020000102e08 : or byte ptr [rax - 0x75], cl ; call qword ptr [rbx]
0x000002000041b28c : or byte ptr [rax - 0x75], cl ; cmp r8b, r13b ; stosb byte ptr [rdi], al ; ret 0xffd3
0x00000200005102ab : or byte ptr [rax - 0x75], cl ; enter -0x4318, 0x7d ; ret
0x00000200007ae167 : or byte ptr [rax - 0x75], cl ; enter 0x70e8, 0x21 ; ret 0x44ff
0x000002000069d871 : or byte ptr [rax - 0x75], cl ; fild word ptr [rcx - 0x75] ; ret 0x8d48
0x000002000006b0c9 : or byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 9] ; ret 0xfff
0x00000200006286d4 : or byte ptr [rax - 0x75], cl ; iretd ; call 0x2000024d007
0x00000200003ca639 : or byte ptr [rax - 0x75], cl ; or dword ptr [rax + 3], ecx ; ret 0x2b48
0x000002000021f268 : or byte ptr [rax - 0x75], cl ; or dword ptr [rbx + rdi - 0x3f], ecx ; jne 0x2000021f261 ; ret
0x0000020000669f44 : or byte ptr [rax - 0x75], cl ; pop rbx ; and byte ptr [rax - 0x7f], cl ; ret
0x00000200003ff80d : or byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov eax, edx ; ret
0x000002000001e0b7 : or byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x0000020000401aaf : or byte ptr [rax - 0x75], cl ; push rdx ; or byte ptr [rcx - 0x75], al ; ret 0xf44
0x0000020000218ac7 : or byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x70 ; xor ecx, ecx ; call r9
0x000002000001cc78 : or byte ptr [rax - 0x75], cl ; ret
0x000002000006ab99 : or byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000003a517 : or byte ptr [rax - 0x75], cl ; ret 0x3308
0x00000200001e98af : or byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200000a52d3 : or byte ptr [rax - 0x75], cl ; ret 0x3b4c
0x00000200000a7c2f : or byte ptr [rax - 0x75], cl ; ret 0x43c7
0x0000020000029299 : or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200000e66ae : or byte ptr [rax - 0x75], cl ; ret 0x49f0
0x000002000005282a : or byte ptr [rax - 0x75], cl ; ret 0x8348
0x000002000020fb72 : or byte ptr [rax - 0x75], cl ; ret 0x8349
0x00000200004e73f9 : or byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200003cd5c3 : or byte ptr [rax - 0x75], cl ; ret 0x854d
0x00000200004b7272 : or byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000024cb0 : or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200001d65ff : or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x000002000020e785 : or byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000b4563 : or byte ptr [rax - 0x75], cl ; ret 0xc741
0x0000020000069750 : or byte ptr [rax - 0x75], cl ; ret 0xc748
0x000002000001a3e6 : or byte ptr [rax - 0x75], cl ; ret 0xd148
0x000002000049e05e : or byte ptr [rax - 0x75], cl ; ret 0xe183
0x00000200005a48d5 : or byte ptr [rax - 0x75], cl ; ret 0xe283
0x00000200004d1668 : or byte ptr [rax - 0x75], cl ; ret 0xff25
0x000002000016021e : or byte ptr [rax - 0x75], cl ; retf ; call 0x2000021c492
0x000002000071afe1 : or byte ptr [rax - 0x75], cl ; retf ; mov rsi, rax ; call qword ptr [rdi]
0x000002000070f575 : or byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x00000200000434d2 : or byte ptr [rax - 0x75], cl ; ror dword ptr [rcx - 0x75], cl ; iretd ; call rax
0x00000200005d70cd : or byte ptr [rax - 0x75], cl ; xchg eax, esp ; ret
0x00000200001cd601 : or byte ptr [rax - 0x75], cl ; xlatb ; call 0x2000013987a
0x000002000069d870 : or byte ptr [rax - 0x75], r9b ; fild word ptr [rcx - 0x75] ; ret 0x8d48
0x000002000001cc77 : or byte ptr [rax - 0x75], r9b ; ret
0x00000200005623d1 : or byte ptr [rax - 0x77], cl ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200000835a4 : or byte ptr [rax - 0x77], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001265af : or byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200000f0573 : or byte ptr [rax - 0x77], cl ; add dh, al ; sub al, byte ptr [rax] ; ret
0x00000200004dbb69 : or byte ptr [rax - 0x77], cl ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200005d51f8 : or byte ptr [rax - 0x77], cl ; enter -0x48f1, 0x45 ; ret 0x8966
0x0000020000420bbf : or byte ptr [rax - 0x77], cl ; je 0x20000420bf0 ; sub byte ptr [rax - 0x7f], cl ; ret
0x000002000016e3eb : or byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200004bc20c : or byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x7d], cl ; ret
0x00000200005f1af1 : or byte ptr [rax - 0x77], cl ; or byte ptr [rcx - 0x77], cl ; or r9b, bpl ; ret 0xf571
0x000002000017b6de : or byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x77] ; or cl, bpl ; ret
0x00000200003cd1d6 : or byte ptr [rax - 0x77], cl ; or dil, dil ; ret
0x0000020000215b73 : or byte ptr [rax - 0x77], cl ; or eax, 0xddebd ; ret
0x000002000071710b : or byte ptr [rax - 0x77], cl ; or eax, 0xffbe8915 ; ret
0x00000200006588ef : or byte ptr [rax - 0x77], cl ; or eax, 0xffcad901 ; jmp 0x200006588c5
0x0000020000658811 : or byte ptr [rax - 0x77], cl ; or eax, 0xffcad9df ; jmp 0x200006587e7
0x00000200005e9873 : or byte ptr [rax - 0x77], cl ; or eax, 0xffd1a1bd ; ret
0x0000020000526e64 : or byte ptr [rax - 0x77], cl ; or eax, 0xffdf82bc ; ret
0x0000020000502113 : or byte ptr [rax - 0x77], cl ; or eax, 0xffe0192d ; ret
0x0000020000605a33 : or byte ptr [rax - 0x77], cl ; pop rsi ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200001f7300 : or byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0x000002000010f22e : or byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x77], ecx ; or byte ptr [rcx - 0x75], cl ; ret
0x0000020000445783 : or byte ptr [rax - 0x79], cl ; xchg eax, ecx ; enter 1, 0 ; ret
0x0000020000121a7e : or byte ptr [rax - 0x7b], cl ; div byte ptr [rdx - 0x75] ; ret
0x00000200001b411b : or byte ptr [rax - 0x7b], cl ; leave ; je 0x200001b412d ; mov eax, dword ptr [rcx + 0x70] ; ret
0x00000200001c459b : or byte ptr [rax - 0x7b], cl ; leave ; je 0x200001c45a9 ; call rcx
0x00000200001c459a : or byte ptr [rax - 0x7b], cl ; leave ; je 0x200001c45aa ; call rcx
0x000002000040491b : or byte ptr [rax - 0x7b], cl ; leave ; je 0x2000040495c ; mov eax, r10d ; ret
0x000002000040491b : or byte ptr [rax - 0x7b], cl ; leave ; je 0x2000040495d ; mov eax, r10d ; ret
0x00000200005819dd : or byte ptr [rax - 0x7b], cl ; leave ; je 0x200005819b4 ; jmp 0x200005819af
0x0000020000210565 : or byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000210565 ; ret
0x0000020000225be6 : or byte ptr [rax - 0x7b], cl ; ret 0x4d74
0x00000200004b3162 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x000002000003b00b : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi + rcx + 0x45], cl ; ret 0xf41
0x000002000050459e : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x44 ; ret 0xccc3
0x000002000011dd43 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 4], 0x48 ; mov eax, ecx ; ret
0x000002000000d772 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x1e], cl ; ret
0x0000020000009bc6 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x000002000059d2da : or byte ptr [rax - 0x7cd78bff], ch ; sal eax, -0x7d ; ret
0x000002000020c045 : or byte ptr [rax - 0x7d], cl ; adc r15b, dil ; ret
0x0000020000540cf7 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000002000020beb1 : or byte ptr [rax - 0x7d], cl ; cmp dword ptr [rax], eax ; setne al ; ret
0x000002000042dbc9 : or byte ptr [rax - 0x7d], cl ; in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0xf44
0x00000200004aa157 : or byte ptr [rax - 0x7d], cl ; jmp 0x1ffc43a1667
0x00000200006ca06d : or byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000200000056a5 : or byte ptr [rax - 0x7d], cl ; ret
0x00000200000d058d : or byte ptr [rax - 0x7d], cl ; ret 0x4408
0x00000200001e8768 : or byte ptr [rax - 0x7d], cl ; ret 0x4504
0x00000200000972b0 : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000200000d0750 : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200007acfc3 : or byte ptr [rax - 0x7d], cl ; ret 0x480c
0x000002000077c393 : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000020000228f0d : or byte ptr [rax - 0x7d], cl ; ret 0x4818
0x000002000054801e : or byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200000d09bb : or byte ptr [rax - 0x7d], cl ; ret 0x4908
0x000002000002e18f : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000200003e09c7 : or byte ptr [rax - 0x7d], cl ; ret 0x4918
0x00000200005f1b70 : or byte ptr [rax - 0x7d], cl ; ret 0x4920
0x00000200007876d7 : or byte ptr [rax - 0x7d], cl ; ret 0x494a
0x0000020000190dc4 : or byte ptr [rax - 0x7d], cl ; ret 0x4c02
0x0000020000247bf7 : or byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000200001932fa : or byte ptr [rax - 0x7d], cl ; ret 0x4cf8
0x000002000023b18f : or byte ptr [rax - 0x7d], cl ; ret 0x4d08
0x0000020000430dd7 : or byte ptr [rax - 0x7d], cl ; ret 0xe812
0x00000200001913f9 : or byte ptr [rax - 0x7d], cl ; ret 0xe902
0x00000200000426ba : or byte ptr [rax - 0x7d], cl ; ret 0xe908
0x0000020000080ed6 : or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000200000539f4 : or byte ptr [rax - 0x7d], cl ; ret 0xf21c
0x0000020000139921 : or byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x3b ; ret 0xed72
0x0000020000569773 : or byte ptr [rax - 0x7d], cl ; sal dword ptr [rax], -0x18 ; ret
0x000002000054801d : or byte ptr [rax - 0x7d], r9b ; ret 0x4828
0x00000200000f0791 : or byte ptr [rax - 0x7f], cl ; ret
0x000002000055415f : or byte ptr [rax - 0x7f], cl ; ret 0x88
0x000002000015d507 : or byte ptr [rax - 0xcfeab4], cl ; ret 0x5589
0x0000020000431903 : or byte ptr [rax - 0xf38bcc], ch ; ret 0x3b41
0x00000200001e66a9 : or byte ptr [rax - 1], cl ; ret
0x000002000001eb06 : or byte ptr [rax - 1], cl ; ret 0x3b49
0x000002000013ca4a : or byte ptr [rax - 1], cl ; ret 0x77e9
0x00000200001474e4 : or byte ptr [rax - 1], cl ; ret 0x854d
0x0000020000191394 : or byte ptr [rax - 1], cl ; ret 0x8b41
0x0000020000097203 : or byte ptr [rax - 1], cl ; ret 0xa9e9
0x00000200004aca5b : or byte ptr [rax - 1], cl ; ret 0xceeb
0x000002000045f46c : or byte ptr [rax - 1], r9b ; ret
0x000002000071ad8a : or byte ptr [rax - 9], cl ; ret 0xfffc
0x00000200001f11a4 : or byte ptr [rax], 0 ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000409a61 : or byte ptr [rax], 0 ; mov al, byte ptr [rip - 0x115c72] ; ret
0x0000020000069e38 : or byte ptr [rax], 0x14 ; add byte ptr [rax], al ; ret
0x00000200001ead90 : or byte ptr [rax], 0x1f ; add byte ptr [rax], al ; ret
0x0000020000456860 : or byte ptr [rax], ah ; ret
0x000002000046bd77 : or byte ptr [rax], al ; add bh, dh ; ret
0x0000020000441f8e : or byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x000002000024da86 : or byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x0000020000247edd : or byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200001c3c5b : or byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000054177e : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; jmp 0x1ffc4098c92
0x0000020000785b78 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003d01cb : or byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; inc dword ptr [r8] ; ret
0x00000200001337a4 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000004538c : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200003de92c : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000013db34 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000048344 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200003f57ac : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000013c8bf : or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x2000013c87d
0x0000020000117c5e : or byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [r8 + 0xc], ecx ; ret
0x00000200001116b0 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc0000001 ; ret
0x000002000000c340 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc000000d ; ret
0x00000200000450ae : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200000e40e2 : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000b165e : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; push rbx ; adc byte ptr [rax - 0x7f], cl ; ret 0x1a0
0x00000200000b3ecc : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; push rdi ; adc byte ptr [rax - 0x7f], cl ; ret 0x1a0
0x000002000022a850 : or byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret
0x000002000017e3b3 : or byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret 0x840f
0x00000200000d368b : or byte ptr [rax], al ; add byte ptr [rcx - 0x80], al ; call qword ptr [rcx]
0x00000200005eb97a : or byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x574
0x00000200001aca9b : or byte ptr [rax], al ; add byte ptr [rsi - 0x7b], ah ; ret
0x000002000019638e : or byte ptr [rax], al ; add dh, dh ; ret
0x000002000017727c : or byte ptr [rax], al ; add dh, dh ; ret 0x7401
0x000002000008344f : or byte ptr [rax], al ; add rcx, rbx ; jmp rcx
0x00000200004425b7 : or byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000002000003d2bb : or byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000015d25d : or byte ptr [rax], al ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000004af73 : or byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200001d249e : or byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000057ba20 : or byte ptr [rax], al ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000035191 : or byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000052feda : or byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000128b90 : or byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200004416a9 : or byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000002000017a893 : or byte ptr [rax], al ; call rax
0x0000020000021673 : or byte ptr [rax], al ; je 0x20000021680 ; xor eax, eax ; ret
0x00000200001f4afa : or byte ptr [rax], al ; je 0x200001f4b03 ; ret
0x0000020000454e0f : or byte ptr [rax], al ; je 0x20000454e1c ; xor eax, eax ; ret
0x0000020000035845 : or byte ptr [rax], al ; jmp 0x2000003580f
0x000002000005266d : or byte ptr [rax], al ; jmp 0x20000052636
0x0000020000018c35 : or byte ptr [rax], al ; jne 0x20000018c1d ; mov qword ptr [rcx + 0x18], rax ; ret
0x0000020000610150 : or byte ptr [rax], al ; jne 0x2000061015d ; xor eax, eax ; ret
0x000002000052c77e : or byte ptr [rax], al ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000409a62 : or byte ptr [rax], al ; mov al, byte ptr [rip - 0x115c72] ; ret
0x000002000012d8cc : or byte ptr [rax], al ; mov cl, 1 ; mov al, cl ; ret
0x0000020000548853 : or byte ptr [rax], al ; mov dword ptr [r8 + 4], edx ; xor eax, eax ; ret
0x0000020000530eec : or byte ptr [rax], al ; mov eax, 0xc00000bb ; ret
0x000002000012d474 : or byte ptr [rax], al ; mov ecx, esi ; call rax
0x00000200005e29c6 : or byte ptr [rax], al ; mov r14b, 1 ; jmp 0x200004eec3b
0x0000020000525f34 : or byte ptr [rax], al ; mov rax, rdx ; ret
0x000002000057f917 : or byte ptr [rax], al ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005d8d48 : or byte ptr [rax], al ; nop ; jmp 0x200004c5049
0x00000200005d99d3 : or byte ptr [rax], al ; nop ; jmp 0x200004c8f80
0x000002000012d195 : or byte ptr [rax], al ; ret
0x00000200006bda12 : or byte ptr [rax], al ; test rax, rax ; je 0x200006bda26 ; call rax
0x000002000012d940 : or byte ptr [rax], al ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000535796 : or byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000448ef8 : or byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000015c63 : or byte ptr [rax], al ; xor eax, eax ; ret
0x000002000051df20 : or byte ptr [rax], bh ; loopne 0x2000051df2b ; add rsp, 0x38 ; ret
0x00000200005696db : or byte ptr [rax], bl ; sub eax, edx ; ret
0x00000200000fce5f : or byte ptr [rax], cl ; add byte ptr [rax], al ; mov word ptr [rcx + 0x36], dx ; ret
0x000002000043cac2 : or byte ptr [rax], cl ; shr al, 3 ; and al, 1 ; ret
0x0000020000189645 : or byte ptr [rax], dh ; ret
0x000002000066fcda : or byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xff41
0x0000020000028f92 : or byte ptr [rax], dl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000061c58c : or byte ptr [rax], dl ; ret
0x000002000061c58b : or byte ptr [rax], r10b ; ret
0x00000200005696da : or byte ptr [rax], r11b ; sub eax, edx ; ret
0x0000020000189644 : or byte ptr [rax], r14b ; ret
0x000002000046bfdf : or byte ptr [rax], r8b ; add dh, dh ; ret
0x0000020000157302 : or byte ptr [rax], r8b ; add rsp, 0x28 ; ret
0x000002000043cac1 : or byte ptr [rax], r9b ; shr al, 3 ; and al, 1 ; ret
0x000002000045685f : or byte ptr [rax], spl ; ret
0x00000200004300b7 : or byte ptr [rbp + 0x15], dh ; test cl, 0xf8 ; jne 0x200004300c8 ; ret
0x0000020000248612 : or byte ptr [rbp + 0x2b], cl ; ret
0x00000200001c37ff : or byte ptr [rbp + 0x2b], cl ; ret 0xd975
0x000002000023e076 : or byte ptr [rbp + 0x2b], cl ; ret 0xe975
0x0000020000241939 : or byte ptr [rbp + 0x2b], cl ; ret 0xea75
0x000002000044c5c5 : or byte ptr [rbp + 0x33], al ; dec dword ptr [rax - 0x75] ; ret
0x0000020000182426 : or byte ptr [rbp + 0x33], al ; leave ; mov rcx, rbx ; call 0x200000ee699
0x0000020000444584 : or byte ptr [rbp + 0x33], al ; rol byte ptr [rbp - 0x75], cl ; ret 0x8d45
0x00000200004a5a41 : or byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], 0xd5 ; call 0x20000081c85
0x000002000054fc9f : or byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], 0xd6 ; call rax
0x000002000051c149 : or byte ptr [rbp + 0x39], al ; sbb dword ptr [rdi - 0x4d], esi ; ret
0x000002000067091f : or byte ptr [rbp + 0x3b], al ; ret
0x00000200000482dd : or byte ptr [rbp + 0x3b], al ; sal dword ptr [rdx - 0x2d], cl ; xor eax, eax ; ret
0x000002000053f33d : or byte ptr [rbp + 0x3b], cl ; enter -0xe8e, -0x75 ; ret
0x00000200002131a7 : or byte ptr [rbp + 0x3b], cl ; ret
0x000002000020e7cd : or byte ptr [rbp + 0x3b], cl ; ret 0x1074
0x00000200000cb263 : or byte ptr [rbp + 0x3b], cl ; ret 0x1077
0x0000020000164548 : or byte ptr [rbp + 0x3b], cl ; ret 0x1374
0x000002000000f92a : or byte ptr [rbp + 0x3b], cl ; ret 0x850f
0x00000200000cb193 : or byte ptr [rbp + 0x3b], cl ; ret 0x870f
0x000002000016455b : or byte ptr [rbp + 0x3b], cl ; ret 0xed75
0x000002000020e7dd : or byte ptr [rbp + 0x3b], cl ; ret 0xf275
0x0000020000026422 : or byte ptr [rbp + 0x410378c0], al ; mov dword ptr [rdx], ecx ; ret
0x00000200001c011b : or byte ptr [rbp + 0x50e80153], cl ; ret
0x00000200004b2077 : or byte ptr [rbp + 0x88d04], cl ; add byte ptr [rax], al ; ret
0x00000200001d36bd : or byte ptr [rbp + 0xb], dh ; mov eax, dword ptr [rip + 0x1d49ae] ; ret
0x000002000059500b : or byte ptr [rbp + 0xe], dh ; mov edx, r14d ; mov rcx, rbx ; call rax
0x0000020000079473 : or byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc149
0x00000200000b9ef7 : or byte ptr [rbp + 1], dh ; ret
0x000002000002681c : or byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x0000020000055e72 : or byte ptr [rbp + 4], dh ; mov rax, rdx ; ret
0x000002000047112b : or byte ptr [rbp + 5], dh ; ret
0x0000020000077071 : or byte ptr [rbp + 6], dh ; mov al, 1 ; ret
0x00000200000bb96c : or byte ptr [rbp + 7], dh ; movzx eax, al ; and eax, 7 ; ret
0x00000200005f98ea : or byte ptr [rbp + r9*4 + 5], cl ; leave ; ret 0xffd5
0x00000200001dc151 : or byte ptr [rbp + rax - 0x18], dh ; mov edi, 0xff0028ae ; ret
0x0000020000150031 : or byte ptr [rbp + rax - 0x18], dh ; xchg eax, edi ; ret
0x000002000066b024 : or byte ptr [rbp + rax*8 - 1], dh ; ret 0x8348
0x00000200001bcaf3 : or byte ptr [rbp + rcx - 1], dh ; ret 0x8348
0x00000200001bcaf2 : or byte ptr [rbp + rcx - 1], sil ; ret 0x8348
0x0000020000619a2b : or byte ptr [rbp + rcx*4 + 0x2d], cl ; ffree st(4) ; ret
0x0000020000619cc7 : or byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 0xffc3
0x000002000042a300 : or byte ptr [rbp + rcx*4 + 0x40], cl ; loopne 0x2000042a357 ; mov eax, eax ; ret
0x00000200003fb978 : or byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x58 ; call rax
0x00000200006f4400 : or byte ptr [rbp + rcx*4 + 0xd], cl ; cwde ; ret 0x8bff
0x00000200006f649d : or byte ptr [rbp + rcx*4 + 0xd], cl ; sti ; ret 0x8bff
0x00000200006f63ed : or byte ptr [rbp + rcx*4 + 0xd], cl ; stosd dword ptr [rdi], eax ; ret 0xb8ff
0x00000200005f98eb : or byte ptr [rbp + rcx*4 + 5], cl ; leave ; ret 0xffd5
0x0000020000225ff6 : or byte ptr [rbp - 0x1b], dh ; mov al, 1 ; ret
0x000002000007e046 : or byte ptr [rbp - 0x26], dh ; mov dl, 1 ; mov al, dl ; ret
0x00000200001ed2e2 : or byte ptr [rbp - 0x2a], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000616e72 : or byte ptr [rbp - 0x3e6bf02e], al ; mov eax, ecx ; ret
0x000002000065e145 : or byte ptr [rbp - 0x4c], dh ; inc rdx ; jmp 0x2000065e17f
0x0000020000402789 : or byte ptr [rbp - 0x73], cl ; inc byte ptr [r13 + 3] ; ret 0xf41
0x00000200007a3204 : or byte ptr [rbp - 0x73], cl ; or byte ptr [rcx - 1], cl ; ret
0x0000020000694eb9 : or byte ptr [rbp - 0x75], al ; add al, 0x8b ; ret 0xe083
0x000002000005cef0 : or byte ptr [rbp - 0x75], al ; ret
0x0000020000545f3a : or byte ptr [rbp - 0x75], al ; ret 0x4166
0x00000200000e0b97 : or byte ptr [rbp - 0x75], al ; ret 0x850f
0x000002000049a685 : or byte ptr [rbp - 0x75], al ; ret 0x8948
0x000002000007f04c : or byte ptr [rbp - 0x75], al ; ret 0xc149
0x00000200000e1f59 : or byte ptr [rbp - 0x75], cl ; ret
0x0000020000178444 : or byte ptr [rbp - 0x75], cl ; ret 0x894d
0x000002000007ef8d : or byte ptr [rbp - 0x75], cl ; ret 0xc148
0x0000020000545f39 : or byte ptr [rbp - 0x75], r8b ; ret 0x4166
0x0000020000247271 : or byte ptr [rbp - 0x77], al ; push rsi ; adc byte ptr [rbp - 0x75], al ; ret 0x8b48
0x0000020000247270 : or byte ptr [rbp - 0x77], r8b ; push rsi ; adc byte ptr [rbp - 0x75], al ; ret 0x8b48
0x000002000043fe03 : or byte ptr [rbp - 0x7b], cl ; leave ; je 0x2000043fe15 ; mov qword ptr [r9], rax ; ret
0x00000200001e8595 : or byte ptr [rbp - 0x7b], cl ; ret
0x00000200006bf76d : or byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret 0
0x000002000005b27c : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + 4], 0x48 ; mov eax, edx ; ret
0x00000200004263ef : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + 9], 0x8b ; pop r8 ; ret
0x00000200001edcd2 : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x3c], 0x49 ; mov eax, eax ; ret
0x00000200003f8e83 : or byte ptr [rbp - 0x7c], al ; sal byte ptr [rbp + rdx*2 + 0x49], 0x3b ; ret 0x2973
0x00000200000ed07e : or byte ptr [rbp - 0xd], dh ; xor eax, eax ; ret
0x00000200000bb0b6 : or byte ptr [rbp - 1], dh ; ret 0x8348
0x00000200006d9251 : or byte ptr [rbx + 0x10048dc8], 0x85 ; ret 0x1175
0x00000200006d8d22 : or byte ptr [rbx + 0x10048dc8], 0x85 ; ret 0x975
0x000002000050e1e3 : or byte ptr [rbx + 0x17401f8], al ; ret
0x00000200000bf807 : or byte ptr [rbx + 0x174fff8], al ; ret
0x0000020000715731 : or byte ptr [rbx + 0x178db0d], al ; add byte ptr [rax], dl ; ret
0x0000020000005ba4 : or byte ptr [rbx + 0x1a], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000243234 : or byte ptr [rbx + 0x2b4cf8c2], al ; ret
0x00000200004c1988 : or byte ptr [rbx + 0x2bc6ffc7], cl ; ret
0x00000200000ecc81 : or byte ptr [rbx + 0x2f], cl ; add cl, ch ; ret
0x00000200004635cc : or byte ptr [rbx + 0x314e8cb], cl ; ret
0x0000020000028149 : or byte ptr [rbx + 0x41000461], al ; mov al, al ; ret
0x000002000062c88e : or byte ptr [rbx + 0x41890846], cl ; or al, 0x8b ; ret
0x00000200005af633 : or byte ptr [rbx + 0x44d80bd9], 0x8b ; ret
0x0000020000042568 : or byte ptr [rbx + 0x4d2b41ce], cl ; add byte ptr [rbp + 3], cl ; ret
0x00000200000a988d : or byte ptr [rbx + 0x548b4cf8], 0x24 ; jo 0x200000a9888 ; ret
0x0000020000470859 : or byte ptr [rbx + 0x5c8b48c3], cl ; and al, 8 ; ret
0x000002000050711a : or byte ptr [rbx + 0x621ee8d5], cl ; ret
0x000002000004510e : or byte ptr [rbx + 0x67714f9], al ; xor al, al ; ret
0x000002000040147d : or byte ptr [rbx + 0x7c8b48c1], cl ; and al, 0x10 ; ret
0x00000200006e4d9b : or byte ptr [rbx + 4], dh ; or eax, 0xffffffff ; ret
0x00000200000bf474 : or byte ptr [rbx + 7], dh ; mov eax, edx ; add rsp, 0x38 ; ret
0x00000200003f2507 : or byte ptr [rbx + 7], dh ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200000f1d82 : or byte ptr [rbx + rcx - 0x10], 0xf6 ; ret
0x000002000021d2d7 : or byte ptr [rbx + rcx*4 + 0x47], al ; adc byte ptr [rax - 0x75], cl ; ret 0x2349
0x0000020000018be3 : or byte ptr [rbx + rcx*4 + 0x51], cl ; sbb byte ptr [rcx - 0x75], cl ; ret 0x348
0x00000200007d35b3 : or byte ptr [rbx + rcx*4 + 0x58], cl ; and byte ptr [rcx - 0x75], cl ; ret
0x00000200001bd7d8 : or byte ptr [rbx + rcx*4 + 0xd], 0x70 ; rcl byte ptr [rbx], 0 ; call r9
0x00000200006bbbe4 : or byte ptr [rbx + rdi - 0x36], al ; jb 0x200006bbbdf ; ret
0x00000200004923c2 : or byte ptr [rbx + rdi - 0x36], al ; jne 0x200004923d3 ; mov al, 1 ; ret
0x00000200007d177b : or byte ptr [rbx + rdi - 0x3f], cl ; jae 0x200007d178e ; or eax, 0xffffffff ; ret
0x00000200000d325d : or byte ptr [rbx + rdx + 0x41], dh ; mov eax, eax ; ret
0x00000200006ce75f : or byte ptr [rbx + rdx - 1], dh ; ret 0x8349
0x00000200006f5e2c : or byte ptr [rbx - 0x24f2763f], cl ; ret 0x3dff
0x00000200007b064a : or byte ptr [rbx - 0x2cb7c01f], al ; ret 0x8948
0x000002000052f9d2 : or byte ptr [rbx - 0x3b7cb73d], cl ; push rax ; pop rbx ; ret
0x0000020000463cb0 : or byte ptr [rbx - 0x3cf1735], cl ; ret 0x85ff
0x000002000071a895 : or byte ptr [rbx - 0x7cb7ebbe], cl ; ret 0x4120
0x00000200003f3694 : or byte ptr [rbx - 0x914d411], cl ; ret 0xf20
0x00000200003cc914 : or byte ptr [rbx - 0xd], bl ; dec dword ptr [rax + 0x63] ; ret 0x8348
0x00000200000de034 : or byte ptr [rbx - 0xf8dfc07], al ; or eax, 0xffffffff ; ret
0x000002000078d767 : or byte ptr [rbx], 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200003f55f2 : or byte ptr [rbx], ah ; ret 0xc83b
0x000002000046c156 : or byte ptr [rbx], al ; add byte ptr [rax], al ; call 0x2000009044f
0x000002000000c266 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000020000169a30 : or byte ptr [rbx], al ; ret
0x000002000001c95e : or byte ptr [rbx], bh ; ret
0x000002000045c8e7 : or byte ptr [rbx], bh ; ret 0x2c75
0x00000200000e5961 : or byte ptr [rbx], bh ; ret 0x830f
0x00000200005a8dcb : or byte ptr [rbx], bh ; ret 0x850f
0x000002000013859b : or byte ptr [rbx], bh ; ret 0xe872
0x00000200001f7285 : or byte ptr [rbx], bh ; ret 0xf172
0x00000200007cfd3e : or byte ptr [rbx], ch ; ret
0x00000200005cbfa4 : or byte ptr [rbx], ch ; ret 0x8b44
0x000002000045c91c : or byte ptr [rbx], ch ; ret 0x8b48
0x000002000045696f : or byte ptr [rbx], cl ; add byte ptr [rax], al ; ret
0x000002000041f215 : or byte ptr [rbx], cl ; ret 0x189
0x0000020000122d51 : or byte ptr [rbx], cl ; ret 0x3345
0x0000020000083eed : or byte ptr [rbx], cl ; ret 0x8189
0x000002000024b3f7 : or byte ptr [rbx], cl ; ret 0x8789
0x000002000013d0ac : or byte ptr [rbx], cl ; ror dword ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000200003e7dda : or byte ptr [rbx], dh ; call rbx
0x0000020000105b8e : or byte ptr [rbx], dh ; fdiv st(6) ; ret
0x000002000063417d : or byte ptr [rbx], dh ; fisttp dword ptr [rcx - 0x75] ; jmp 0x2004925ccd7
0x00000200004e3bad : or byte ptr [rbx], dh ; fmul dword ptr [rcx - 0x9b7dba4] ; ret
0x0000020000194a15 : or byte ptr [rbx], dh ; imul cl ; ret
0x00000200007ce9f3 : or byte ptr [rbx], dh ; ret 0x25
0x00000200004a85df : or byte ptr [rbx], dh ; ret 0x8941
0x00000200006ab08a : or byte ptr [rbx], dh ; rol byte ptr [rcx - 1], 0 ; ret
0x00000200000255af : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200005143cb : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x7c ; and al, 8 ; ret
0x0000020000524adc : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; enter -0x6618, 0x2d ; ret
0x00000200005413fe : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x77], cl ; add al, ch ; push rdi ; ret
0x00000200000e223d : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200000e22a8 ; ret
0x0000020000456a02 : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000456a6d ; ret
0x0000020000122e57 : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x000002000005eeae : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; ret
0x000002000004920a : or byte ptr [rbx], dh ; ror byte ptr [rcx - 0x75], cl ; ret
0x000002000003a51c : or byte ptr [rbx], dh ; ror byte ptr [rcx - 0x77], 9 ; ret
0x00000200007b6274 : or byte ptr [rbx], dh ; shr al, cl ; jl 0x200007b62f7 ; cwde ; inc dword ptr [rbx] ; ret
0x0000020000408bc6 : or byte ptr [rbx], dh ; shr al, cl ; ret 0x70d
0x00000200003f55f1 : or byte ptr [rbx], r12b ; ret 0xc83b
0x00000200005413fd : or byte ptr [rbx], sil ; ror byte ptr [rax - 0x77], cl ; add al, ch ; push rdi ; ret
0x0000020000463d7d : or byte ptr [rcx + 0x10001f], bh ; call 0x200000938f1
0x000002000049a6b2 : or byte ptr [rcx + 0x23], al ; ret 0x7fa8
0x0000020000005e47 : or byte ptr [rcx + 0x23], cl ; ret
0x00000200000db059 : or byte ptr [rcx + 0x23], cl ; ret 0xb4c
0x0000020000005e46 : or byte ptr [rcx + 0x23], r9b ; ret
0x00000200000237aa : or byte ptr [rcx + 0x2b], al ; ret
0x0000020000246711 : or byte ptr [rcx + 0x2b], cl ; ret
0x000002000024aa86 : or byte ptr [rcx + 0x2b], cl ; ret 0xed75
0x0000020000683ebf : or byte ptr [rcx + 0x2b], cl ; ror byte ptr [rax - 0x77], 0x41 ; push rax ; ret
0x00000200000237a9 : or byte ptr [rcx + 0x2b], r8b ; ret
0x000002000013caf0 : or byte ptr [rcx + 0x33], cl ; ret 0x8549
0x0000020000653c15 : or byte ptr [rcx + 0x3b], al ; adc byte ptr [rdx - 0x27], dh ; xor eax, eax ; ret
0x0000020000051ffd : or byte ptr [rcx + 0x3b], al ; ret 0x8a41
0x00000200006d1346 : or byte ptr [rcx + 0x3b], al ; sal byte ptr [rdx + 4], cl ; mov dword ptr [r8], edx ; ret
0x00000200000eade5 : or byte ptr [rcx + 0x3b], cl ; ret 0x448b
0x000002000016dca1 : or byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x000002000004c2e3 : or byte ptr [rcx + 0x3b], cl ; ret 0x870f
0x00000200000d1bcd : or byte ptr [rcx + 0x3b], cl ; ret 0xc772
0x00000200006c0658 : or byte ptr [rcx + 0x3b], cl ; sal byte ptr [rdx + 0x2a], 0xff ; ret 0xfa83
0x00000200006becb8 : or byte ptr [rcx + 0x3b], cl ; sal byte ptr [rdx + 0x36], 0xff ; ret 0xfa83
0x00000200006bf2c2 : or byte ptr [rcx + 0x3b], cl ; sal byte ptr [rdx + 0x37], 0xff ; ret 0xfa83
0x00000200003ccdda : or byte ptr [rcx + 0x3b], cl ; sal byte ptr [rsi - 0x10], 1 ; ret
0x000002000054550d : or byte ptr [rcx + 0x43890c43], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000005397f : or byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200006c569e : or byte ptr [rcx + 0x63487f7d], cl ; ret 0x8348
0x0000020000106f8d : or byte ptr [rcx + 0x63], cl ; ret
0x00000200006882dc : or byte ptr [rcx + 0xf], al ; mov bh, 0xc1 ; add eax, 0x20 ; ret
0x00000200006863ab : or byte ptr [rcx + 0xf], al ; mov bh, 0xc1 ; ret
0x000002000019ee2a : or byte ptr [rcx + 0xf], al ; mov dh, 0x86 ; ret
0x000002000008e7fe : or byte ptr [rcx + 0xf], cl ; mov esp, 0x440f41c1 ; ret 0x3b48
0x000002000001278c : or byte ptr [rcx + 0xf], cl ; mov esp, 0x440f41c1 ; ret 0x4589
0x00000200001e6d80 : or byte ptr [rcx + 0xfffe1], al ; add byte ptr [rax - 0x7f], cl ; ret 0xfff
0x0000020000091e31 : or byte ptr [rcx + 3], al ; ret
0x000002000007f53d : or byte ptr [rcx + 3], al ; ret 0xc141
0x00000200000c7fab : or byte ptr [rcx + 3], al ; ret 0xc203
0x000002000024628c : or byte ptr [rcx + 3], cl ; ret 0x2b49
0x000002000003d3f3 : or byte ptr [rcx + 9], 1 ; mov byte ptr [rcx + 8], al ; ret
0x000002000003d41d : or byte ptr [rcx + 9], 4 ; ret
0x000002000049bd90 : or byte ptr [rcx + r9*4 + 0x44], cl ; ret 0xff10
0x00000200000808ab : or byte ptr [rcx + rax + 8], al ; add rsp, 0x28 ; ret
0x0000020000057e2b : or byte ptr [rcx + rcx + 0x4c], cl ; ret
0x000002000002e4df : or byte ptr [rcx + rcx*4 + 0x12], cl ; mov rax, r8 ; ret
0x000002000049bd91 : or byte ptr [rcx + rcx*4 + 0x44], cl ; ret 0xff10
0x00000200000d0591 : or byte ptr [rcx + rcx*4 + 0x55], al ; ret
0x00000200000977fb : or byte ptr [rcx + rcx*4 + 0x59], al ; adc byte ptr [rcx - 0x75], cl ; ret
0x0000020000524dad : or byte ptr [rcx + rcx*4 + 0x77], al ; adc al, 0xe8 ; mov dword ptr [rdi], esp ; ret
0x0000020000056ed2 : or byte ptr [rcx + rcx*4 + 1], al ; test rdx, rdx ; jne 0x20000056ee5 ; ret
0x00000200001ceb42 : or byte ptr [rcx + rcx*4 + 1], cl ; ret
0x0000020000116859 : or byte ptr [rcx + rcx*4 + 9], cl ; mov rax, r10 ; ret
0x000002000009401a : or byte ptr [rcx + rcx*4 - 0x73], cl ; cwde ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000544b22 : or byte ptr [rcx + rdi + 0x3a], al ; jne 0x20000544ae2 ; jmp 0x200005f0e1a
0x000002000017e1f7 : or byte ptr [rcx + rdx*8 - 0xa], dh ; ret
0x000002000001109a : or byte ptr [rcx - 0x17], dh ; ret 0x151f
0x00000200003e11ce : or byte ptr [rcx - 0x17bfdbbc], cl ; js 0x200003e1164 ; ret 0x48ff
0x00000200003e11cd : or byte ptr [rcx - 0x17bfdbbc], r9b ; js 0x200003e1165 ; ret 0x48ff
0x00000200003e4b81 : or byte ptr [rcx - 0x2d], al ; leave ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200003e4cb5 : or byte ptr [rcx - 0x2d], al ; leave ; sub r10d, r9d ; mov eax, r10d ; ret
0x00000200003e4e51 : or byte ptr [rcx - 0x2d], al ; leave ; xor r10d, r9d ; mov eax, r10d ; ret
0x00000200000542c2 : or byte ptr [rcx - 0x3f], cl ; call 0x1ffc2288eda
0x00000200004e5ec5 : or byte ptr [rcx - 0x42], al ; add byte ptr [rax], ah ; add sil, sil ; ret
0x00000200006c9d21 : or byte ptr [rcx - 0x48], al ; ret
0x00000200007d03b8 : or byte ptr [rcx - 0x67827401], 0x81 ; jmp qword ptr [rbx]
0x000002000000fa1b : or byte ptr [rcx - 0x74b7e7bf], cl ; ret 0xc148
0x0000020000190e12 : or byte ptr [rcx - 0x75], al ; enter -0xb8, -0x3e ; jmp 0x20000190dcf
0x0000020000199b71 : or byte ptr [rcx - 0x75], al ; fucompp ; ret
0x0000020000778437 : or byte ptr [rcx - 0x75], al ; hlt ; mov rax, rdx ; jmp 0x2000077844b
0x0000020000005c58 : or byte ptr [rcx - 0x75], al ; ret
0x0000020000798033 : or byte ptr [rcx - 0x75], al ; ret 0x349
0x0000020000121627 : or byte ptr [rcx - 0x75], al ; ret 0x44c3
0x000002000065238b : or byte ptr [rcx - 0x75], al ; ret 0x4566
0x00000200006dbcbf : or byte ptr [rcx - 0x75], al ; ret 0x48c3
0x00000200004e9f64 : or byte ptr [rcx - 0x75], al ; ret 0x8348
0x0000020000118d87 : or byte ptr [rcx - 0x75], al ; ret 0x8b48
0x0000020000401ab3 : or byte ptr [rcx - 0x75], al ; ret 0xf44
0x000002000010a34b : or byte ptr [rcx - 0x75], al ; ret 0xff48
0x000002000000a7ae : or byte ptr [rcx - 0x75], al ; ror dword ptr [rax - 0x75], 0x7c ; and al, 0x10 ; ret
0x00000200004642bd : or byte ptr [rcx - 0x75], al ; shr eax, cl ; ret 0xbef6
0x00000200004d16dd : or byte ptr [rcx - 0x75], al ; sub al, 0x4c ; lea ecx, dword ptr [rdx + rax*8] ; jmp 0x200004d16a6
0x000002000000ff39 : or byte ptr [rcx - 0x75], cl ; adc dh, dh ; ret 0x7501
0x0000020000237bf3 : or byte ptr [rcx - 0x75], cl ; add dword ptr [rdx - 0x75], ecx ; push rsp ; ret
0x00000200001b9164 : or byte ptr [rcx - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret 0x1172
0x0000020000200bb3 : or byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000007ce16
0x00000200005257c8 : or byte ptr [rcx - 0x75], cl ; iretd ; call 0x20000148077
0x000002000004dfff : or byte ptr [rcx - 0x75], cl ; ret
0x00000200004251ca : or byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x00000200001883ee : or byte ptr [rcx - 0x75], cl ; ret 0x3b48
0x0000020000797373 : or byte ptr [rcx - 0x75], cl ; ret 0x41c3
0x00000200006c6648 : or byte ptr [rcx - 0x75], cl ; ret 0x8b48
0x00000200001d84e3 : or byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x000002000007ef86 : or byte ptr [rcx - 0x75], cl ; ret 0x8b4d
0x00000200001646c1 : or byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200003ca169 : or byte ptr [rcx - 0x75], cl ; ret 0xf748
0x000002000003a8ea : or byte ptr [rcx - 0x75], cl ; ret 0xf749
0x0000020000162f25 : or byte ptr [rcx - 0x75], cl ; ror dword ptr [rax - 0x75], 0x7c ; and al, 0x10 ; ret
0x00000200006ca555 : or byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 + 3], cl ; ret 0x33c3
0x00000200001bf214 : or byte ptr [rcx - 0x75], cl ; sbb r8b, bpl ; ret 0xf937
0x00000200001f407d : or byte ptr [rcx - 0x75], cl ; xlatb ; call 0x200001f02c6
0x000002000020b936 : or byte ptr [rcx - 0x75], cl ; xor byte ptr [rax], 4 ; add byte ptr [rax], al ; ret
0x0000020000209eaf : or byte ptr [rcx - 0x76], al ; ret
0x00000200001b81f2 : or byte ptr [rcx - 0x76], al ; ret 0xccc3
0x0000020000709b82 : or byte ptr [rcx - 0x76], al ; ret 0xd8f6
0x000002000003bb01 : or byte ptr [rcx - 0x76], al ; ror byte ptr [rax - 0x75], 0x7c ; and al, 0x10 ; ret
0x0000020000671e92 : or byte ptr [rcx - 0x76], al ; ror dword ptr [rax - 0x75], 0x7c ; and al, 0x10 ; ret
0x00000200004beacd : or byte ptr [rcx - 0x77], al ; add al, byte ptr [rcx - 0x75] ; ret
0x0000020000230937 : or byte ptr [rcx - 0x77], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x000002000053492f : or byte ptr [rcx - 0x77], al ; add dword ptr [rax + 1], edi ; ret
0x00000200001c2131 : or byte ptr [rcx - 0x77], al ; push rax ; or al, 0x5b ; ret
0x00000200001e1e17 : or byte ptr [rcx - 0x77], cl ; add edi, edi ; ret 0xb848
0x00000200000723b6 : or byte ptr [rcx - 0x77], cl ; jns 0x200000723d1 ; pop rdi ; ret
0x000002000055421d : or byte ptr [rcx - 0x77], cl ; or byte ptr [r9 - 0x7d], cl ; ret
0x0000020000554448 : or byte ptr [rcx - 0x77], cl ; or byte ptr [rcx - 0x7d], cl ; ret 0x4518
0x00000200005f1af4 : or byte ptr [rcx - 0x77], cl ; or r9b, bpl ; ret 0xf571
0x0000020000560d01 : or byte ptr [rcx - 0x77], cl ; sbb byte ptr [r9 - 1], al ; ret 0x8944
0x000002000023f1d1 : or byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x0000020000245580 : or byte ptr [rcx - 0x7d], al ; ret
0x00000200004a1515 : or byte ptr [rcx - 0x7d], al ; ret 0x48f8
0x0000020000245a22 : or byte ptr [rcx - 0x7d], al ; ret 0x49f8
0x00000200001d1e49 : or byte ptr [rcx - 0x7d], al ; ret 0x75ff
0x00000200004048b6 : or byte ptr [rcx - 0x7d], al ; stc ; add dh, byte ptr [rdx - 0x25] ; mov al, dl ; ret
0x00000200001fdbc2 : or byte ptr [rcx - 0x7d], cl ; call 0x1ffc40c50d2
0x00000200001c24a0 : or byte ptr [rcx - 0x7d], cl ; jmp 0x1ff8bfe99b2
0x0000020000051965 : or byte ptr [rcx - 0x7d], cl ; jmp 0x1ffc3ef8e75
0x000002000002b2ec : or byte ptr [rcx - 0x7d], cl ; rcl byte ptr [rax], 0xff ; ret
0x0000020000027e73 : or byte ptr [rcx - 0x7d], cl ; ret
0x0000020000548cc6 : or byte ptr [rcx - 0x7d], cl ; ret 0x4418
0x000002000055444c : or byte ptr [rcx - 0x7d], cl ; ret 0x4518
0x00000200007b2e6f : or byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x0000020000145ea5 : or byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x000002000010fa59 : or byte ptr [rcx - 0x7d], cl ; ret 0x4910
0x0000020000548d73 : or byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x0000020000247990 : or byte ptr [rcx - 0x7d], cl ; ret 0x4c08
0x000002000003ba73 : or byte ptr [rcx - 0x7d], cl ; ret 0x4c10
0x0000020000213eae : or byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax], 0xeb ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000013411a : or byte ptr [rcx - 0xa], al ; rcr byte ptr [rdi], 0xf ; xchg eax, ebp ; ret 0xc149
0x00000200005d59b7 : or byte ptr [rcx - 0xa], al ; ret
0x000002000021cb04 : or byte ptr [rcx - 0xa], al ; ret 0x7501
0x00000200000bd738 : or byte ptr [rcx - 0xa], dh ; ret 0x7504
0x0000020000134119 : or byte ptr [rcx - 0xa], r8b ; rcr byte ptr [rdi], 0xf ; xchg eax, ebp ; ret 0xc149
0x0000020000044144 : or byte ptr [rcx - 1], al ; ret
0x00000200004b5fc4 : or byte ptr [rcx - 1], al ; ret 0x3b44
0x00000200001c8329 : or byte ptr [rcx - 1], al ; ret 0x3b45
0x00000200000698a2 : or byte ptr [rcx - 1], al ; ret 0x8348
0x00000200007a3208 : or byte ptr [rcx - 1], cl ; ret
0x000002000013b2b4 : or byte ptr [rcx - 1], cl ; ret 0x2c6
0x000002000010ecea : or byte ptr [rcx - 1], cl ; ret 0x3b4c
0x00000200006a0a4b : or byte ptr [rcx - 1], cl ; ret 0x3b4d
0x00000200000cc1ab : or byte ptr [rcx - 1], cl ; ret 0x8348
0x000002000013b2f0 : or byte ptr [rcx - 1], cl ; ror byte ptr [rbp + 0x3b], 0xc2 ; jb 0x2000013b2eb ; ret
0x0000020000010c2d : or byte ptr [rcx - 9], cl ; ret 0xfff
0x00000200007d0758 : or byte ptr [rcx], ah ; ret
0x00000200004c02d0 : or byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000024eb15 : or byte ptr [rcx], al ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; ret
0x00000200003e35ca : or byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200000036cb
0x0000020000114a4c : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000002000042ea05 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor rcx, rsp ; call 0x2000013ac79
0x000002000005333d : or byte ptr [rcx], bh ; or al, 0x72 ; sbb dh, dh ; ret 0x7502
0x00000200001a9c48 : or byte ptr [rcx], bl ; ret
0x00000200004b4f54 : or byte ptr [rcx], dh ; ret
0x0000020000501b91 : or byte ptr [rdi + 0x1a], 1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001c1fb : or byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200004aca57 : or byte ptr [rdi + rcx - 0x55], al ; or byte ptr [rax - 1], cl ; ret 0xceeb
0x0000020000610174 : or byte ptr [rdi - 0x4c], dh ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000035da : or byte ptr [rdi - 0x50], dh ; add ebx, eax ; mov eax, dword ptr [rcx + 0x2c] ; ret
0x00000200000a79e9 : or byte ptr [rdi - 0x77], cl ; pop rsp ; ret 0x4908
0x000002000004a091 : or byte ptr [rdi], 0 ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000006fcc2 : or byte ptr [rdi], 0 ; add byte ptr [rax + 3], cl ; ret 0x3b4c
0x000002000009a739 : or byte ptr [rdi], 0 ; test al, 2 ; jne 0x2000009a748 ; ret
0x00000200004cf7e6 : or byte ptr [rdi], 0x45 ; ret 0x4589
0x00000200000d3598 : or byte ptr [rdi], 0x85 ; ret
0x0000020000719aeb : or byte ptr [rdi], 0x95 ; ret 0xc141
0x0000020000796397 : or byte ptr [rdi], 0xb6 ; ret 0xf44
0x00000200003f6472 : or byte ptr [rdi], 0xb7 ; ret 0x48d
0x0000020000569903 : or byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000200001ead91 : or byte ptr [rdi], bl ; add byte ptr [rax], al ; ret
0x0000020000074299 : or byte ptr [rdi], ch ; ret
0x0000020000712465 : or byte ptr [rdi], cl ; adc byte ptr [rcx], al ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x000002000061037a : or byte ptr [rdi], cl ; cwde ; ret
0x000002000017bb11 : or byte ptr [rdi], cl ; mov bh, 0x51 ; add dh, dh ; ret 0xf10
0x0000020000631b65 : or byte ptr [rdi], cl ; mov bh, 0x55 ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000013d58f : or byte ptr [rdi], cl ; mov bh, 0x73 ; add cl, byte ptr [rax - 0x7d] ; ret
0x000002000003715b : or byte ptr [rdi], cl ; mov bl, 0x10 ; ret
0x00000200005c0946 : or byte ptr [rdi], cl ; mov dh, 0x41 ; add eax, ecx ; call 0x1ff841e3c5f
0x00000200001706b2 : or byte ptr [rdi], cl ; mov dh, 4 ; sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x0000020000616c20 : or byte ptr [rdi], cl ; ret
0x000002000052c791 : or byte ptr [rdi], cl ; ret 0xc88b
0x000002000013fb73 : or byte ptr [rdi], cl ; scasb al, byte ptr [rdi] ; push rsp ; and al, 8 ; ret
0x00000200003e44e3 : or byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 0x33], -0x3e ; ret
0x00000200004b8aea : or byte ptr [rdi], cl ; test byte ptr [rax], ch ; add al, 0 ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200001a7c7b : or byte ptr [rdi], cl ; test byte ptr [rcx - 0x14], dl ; dec dword ptr [rax - 0x7d] ; jmp qword ptr [rax]
0x0000020000035002 : or byte ptr [rdi], cl ; test byte ptr [rdi + 0x5e], cl ; adc eax, dword ptr [rax] ; ret
0x00000200003ff42d : or byte ptr [rdi], cl ; test byte ptr [rdx - 0x1000000], bh ; ret
0x00000200000ade50 : or byte ptr [rdi], cl ; test byte ptr [rdx - 0x9fff161], bh ; ret
0x00000200004a7f93 : or byte ptr [rdi], cl ; test dh, ch ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000214f21 : or byte ptr [rdi], cl ; test dword ptr [rbx], edx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x000002000003716e : or byte ptr [rdi], cl ; test dword ptr [rcx + 0x4a], edx ; adc eax, dword ptr [rax] ; ret
0x000002000050315b : or byte ptr [rdi], cl ; test dword ptr [rdx], esp ; push -0x3d00fff2 ; jmp 0x20000503150
0x000002000005258c : or byte ptr [rdi], cl ; test ebp, edi ; jmp 0x1ffff8825af
0x000002000052de93 : or byte ptr [rdi], cl ; test edi, esi ; ret 8
0x00000200000dc4b0 : or byte ptr [rdi], cl ; test edx, edi ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000489d7b : or byte ptr [rdi], cl ; test esi, esi ; sbb eax, 0x8b450014 ; ret
0x0000020000214f4d : or byte ptr [rdi], cl ; test esp, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x3474
0x0000020000427909 : or byte ptr [rdi], cl ; xchg ah, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x000002000053245d : or byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200002281e0 : or byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x0000020000228202 : or byte ptr [rdi], cl ; xchg eax, edi ; ret
0x00000200002281f1 : or byte ptr [rdi], cl ; xchg eax, edx ; ret
0x0000020000228213 : or byte ptr [rdi], cl ; xchg eax, esi ; ret
0x00000200000f2bc0 : or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000021fcb4 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x0000020000074298 : or byte ptr [rdi], r13b ; ret
0x000002000070c7d0 : or byte ptr [rdi], r9b ; xchg eax, esp ; ret
0x0000020000623ca4 : or byte ptr [rdx + 0x68745346], bh ; call 0x2000024d009
0x0000020000620d24 : or byte ptr [rdx + 0x6c634d45], bh ; call 0x2000024d008
0x0000020000620f96 : or byte ptr [rdx + 0x6c634d45], bh ; call 0x2000024d009
0x000002000008a900 : or byte ptr [rdx + 1], ah ; add byte ptr [rax - 0x9dfddb1], al ; ret
0x00000200003e7a02 : or byte ptr [rdx + 1], bh ; call 0x2000000eb55
0x00000200006a029d : or byte ptr [rdx + rax + 4], al ; or bh, bh ; ret 0xefeb
0x00000200001ca029 : or byte ptr [rdx + rax - 2], dh ; ret 0xf48
0x00000200005332a6 : or byte ptr [rdx + rdx*8 - 0x41f0f18c], al ; ret 0x3b44
0x00000200001ad90c : or byte ptr [rdx - 0x22], dh ; ret
0x000002000020ff84 : or byte ptr [rdx - 0x37], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000481705 : or byte ptr [rdx - 0x75], 4 ; ret 0x8d4c
0x0000020000693c84 : or byte ptr [rdx - 0x75], cl ; push rsp ; call qword ptr [rax]
0x00000200001fc92a : or byte ptr [rdx - 0x75], cl ; ret 0x4810
0x0000020000237ba6 : or byte ptr [rdx - 0x7d], al ; ret
0x00000200003d5e31 : or byte ptr [rdx - 1], bl ; dec dword ptr [rcx - 0x73] ; test dword ptr [rax], eax ; ret
0x0000020000441a16 : or byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x2000006c737
0x000002000009c851 : or byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003c6293 : or byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000200006f6acc : or byte ptr [rdx], ch ; ret 0x48ff
0x00000200007d2046 : or byte ptr [rdx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000046b147 : or byte ptr [rdx], cl ; ret
0x00000200006a8438 : or byte ptr [rdx], dh ; sbb byte ptr [r10], sil ; ret 0xb60f
0x0000020000518db7 : or byte ptr [rdx], dl ; ret
0x000002000077da82 : or byte ptr [rip + 0x33480000], al ; ret 0xd233
0x00000200006eee19 : or byte ptr [rip + 0x3820125c], ah ; call qword ptr [rdx]
0x00000200006048a7 : or byte ptr [rip + 0x48498b48], ah ; add eax, dword ptr [rcx + 8] ; ret
0x00000200006eee05 : or byte ptr [rip + 0xe20125c], ah ; call qword ptr [rdx]
0x0000020000053a48 : or byte ptr [rip + 0xfffff], ah ; ret
0x00000200006eeea5 : or byte ptr [rip - 0x43dfeda4], ah ; call qword ptr [rdx]
0x0000020000118862 : or byte ptr [rip - 0x7cb7d18c], al ; ret
0x0000020000070141 : or byte ptr [rsi + 0x33450011], al ; sal dh, cl ; ret 0xf1e
0x000002000040e6e2 : or byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x00000200000d2b37 : or byte ptr [rsi + 0x41], ah ; cmp eax, dword ptr [rax] ; jb 0x200000d2b27 ; ret
0x000002000044fe83 : or byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 4], edx ; ret
0x000002000012f291 : or byte ptr [rsi + 0x44], ah ; mov dword ptr [rdx], ecx ; jmp 0x2000012f261
0x000002000012f290 : or byte ptr [rsi + 0x44], spl ; mov dword ptr [rdx], ecx ; jmp 0x2000012f262
0x0000020000535660 : or byte ptr [rsi + 0x48], ah ; movd eax, mm0 ; call rax
0x000002000021cc44 : or byte ptr [rsi + 0x65830003], dl ; ret
0x000002000002821a : or byte ptr [rsi + 0xa], dh ; mov eax, 1 ; ret
0x0000020000151030 : or byte ptr [rsi + 3], ah ; ret
0x0000020000521702 : or byte ptr [rsi + 3], dh ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x0000020000703ba8 : or byte ptr [rsi + 4], dh ; mov qword ptr [rcx + 8], rax ; ret
0x00000200000f05cb : or byte ptr [rsi + rax + 0x48], dh ; add esp, 0x20 ; pop rbx ; ret
0x00000200004e7ca9 : or byte ptr [rsi + rcx - 1], dh ; ret 0x8348
0x000002000065a38c : or byte ptr [rsi - 0x3b7cb701], ch ; pop rax ; ret
0x0000020000046dcf : or byte ptr [rsi - 0x77], ah ; add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000200007b4923 : or byte ptr [rsi - 0x77], ah ; or byte ptr [r8 - 0x7d], cl ; ret
0x0000020000119513 : or byte ptr [rsi - 0x77], ah ; or cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x00000200004685de : or byte ptr [rsi - 0x77], ah ; pop rsi ; add al, byte ptr [rdi + rcx - 0x49] ; ret
0x00000200001329c7 : or byte ptr [rsi - 0x77], ah ; push rbp ; add bh, bh ; ret 0x8341
0x00000200004685dd : or byte ptr [rsi - 0x77], r12b ; pop rsi ; add al, byte ptr [rdi + rcx - 0x49] ; ret
0x00000200007b4922 : or byte ptr [rsi - 0x77], spl ; or byte ptr [r8 - 0x7d], cl ; ret
0x000002000020dfd9 : or byte ptr [rsi - 0x7b], ah ; ret 0x1975
0x0000020000693c4f : or byte ptr [rsi - 0x7b], ah ; sal byte ptr [rdx + rbp + 0x4a], 0x8b ; call qword ptr [rax]
0x0000020000479665 : or byte ptr [rsi - 1], ah ; ret 0x8948
0x000002000045e7ad : or byte ptr [rsi], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200007a12b5 : or byte ptr [rsp - 0xa], dh ; ret 0x4510
0x0000020000128b8f : or byte ptr ss:[rax], al ; add rsp, 0x58 ; ret
0x00000200005e29c5 : or byte ptr ss:[rax], al ; mov r14b, 1 ; jmp 0x200004eec3c
0x000002000079a4b9 : or ch, al ; and eax, 0x8bff95e0 ; ret
0x000002000064c5a7 : or ch, al ; ret
0x00000200007c8028 : or ch, al ; ret 0x9836
0x00000200006c7223 : or ch, bl ; dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x3966
0x000002000012f295 : or ch, bl ; ret
0x00000200001e209a : or ch, byte ptr [rax - 0x74f98bff] ; ret 0x149
0x0000020000114dd9 : or ch, byte ptr [rbx] ; ret 0x341
0x0000020000115396 : or ch, byte ptr [rbx] ; ret 0xc0ff
0x0000020000087b97 : or ch, byte ptr [rbx] ; sar dword ptr [rdx + 0x200], 0x3b ; ret 0x377
0x0000020000119a70 : or ch, byte ptr [rcx] ; add byte ptr [rax + 5], cl ; add byte ptr [rsi], dh ; add byte ptr [rax], al ; ret
0x000002000065a220 : or ch, byte ptr [rsi - 0x3b7cb701] ; pop rax ; ret
0x00000200005a2f12 : or ch, cl ; dec dword ptr [rax - 0x75] ; retf ; call 0x200001c5971
0x0000020000228889 : or cl, 0xc0 ; mov byte ptr [rdx + 2], al ; mov byte ptr [rdx + 1], cl ; ret
0x00000200002288ac : or cl, 0xe0 ; mov byte ptr [rdx + 1], al ; mov byte ptr [rdx], cl ; ret
0x000002000005efa8 : or cl, al ; out dx, al ; add ebp, ebx ; ret 0x8b48
0x000002000063ecfc : or cl, al ; ret
0x000002000017b6e4 : or cl, bpl ; ret
0x000002000022c723 : or cl, byte ptr [r13 + 0x3c8dc00c] ; int 0x80
0x000002000001d5c5 : or cl, byte ptr [r8 - 0x75] ; ret
0x000002000011cf73 : or cl, byte ptr [rax + 0x3b] ; ret 0x1c74
0x00000200006bfae7 : or cl, byte ptr [rax + 0x3b] ; ret 0x2772
0x00000200006c02f1 : or cl, byte ptr [rax + 0x3b] ; ret 0x2872
0x00000200006c0287 : or cl, byte ptr [rax + 0x3b] ; ret 0x3472
0x0000020000056af4 : or cl, byte ptr [rax + 0x3b] ; ret 0x3772
0x0000020000119e49 : or cl, byte ptr [rax + 0x3b] ; ret 0x820f
0x0000020000238d8c : or cl, byte ptr [rax + rax] ; mov rcx, rdi ; call rax
0x00000200005bada9 : or cl, byte ptr [rax - 0x73] ; and al, 0x20 ; call 0x20000467020
0x00000200001ff90b : or cl, byte ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0xec75
0x00000200001bb76d : or cl, byte ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0xf275
0x000002000051f5fc : or cl, byte ptr [rax - 0x75] ; and al, 0x50 ; call 0x20000148079
0x000002000051c291 : or cl, byte ptr [rax - 0x75] ; and al, 0x70 ; call 0x20000148079
0x000002000020a536 : or cl, byte ptr [rax - 0x75] ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000661412 : or cl, byte ptr [rax - 0x75] ; pop rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x0000020000214dd5 : or cl, byte ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x000002000001d5c6 : or cl, byte ptr [rax - 0x75] ; ret
0x0000020000410cb3 : or cl, byte ptr [rax - 0x75] ; ret 0x8348
0x00000200001b3c25 : or cl, byte ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], cl ; iretd ; call rsi
0x00000200000bf998 : or cl, byte ptr [rax - 0x77] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200004dff71 : or cl, byte ptr [rax - 0x77] ; or byte ptr [rax - 0x75], cl ; ret
0x000002000017b6e1 : or cl, byte ptr [rax - 0x77] ; or cl, bpl ; ret
0x00000200000bd729 : or cl, byte ptr [rax - 0x7b] ; leave ; jne 0x200000bd73c ; mov rax, r9 ; ret
0x00000200001a7c98 : or cl, byte ptr [rax - 0x7d] ; jmp qword ptr [rcx]
0x0000020000140a1e : or cl, byte ptr [rax - 0x7d] ; ret
0x00000200006892fb : or cl, byte ptr [rax - 0x7d] ; ret 0x4102
0x00000200000f9c8a : or cl, byte ptr [rax - 0x7d] ; ret 0x4404
0x00000200000f9cc0 : or cl, byte ptr [rax - 0x7d] ; ret 0x4408
0x0000020000119516 : or cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x00000200003ccdd6 : or cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x000002000023a34d : or cl, byte ptr [rax - 0x7d] ; ret 0x8102
0x000002000013b591 : or cl, byte ptr [rax - 1] ; ret 0x418d
0x00000200005f8b57 : or cl, byte ptr [rax - 1] ; ret 0x43e9
0x00000200005f8b6c : or cl, byte ptr [rax - 1] ; ret 0x6be9
0x000002000055c196 : or cl, byte ptr [rax - 1] ; ret 0x8445
0x000002000068953d : or cl, byte ptr [rax - 1] ; ret 0x8844
0x000002000013c9b3 : or cl, byte ptr [rax - 1] ; ret 0xc2f6
0x0000020000119452 : or cl, byte ptr [rax - 1] ; ret 0xff49
0x00000200000d2b36 : or cl, byte ptr [rax] ; cmp ax, word ptr [r8] ; jb 0x200000d2b28 ; ret
0x000002000022c724 : or cl, byte ptr [rbp + 0x3c8dc00c] ; int 0x80
0x000002000070dbbf : or cl, byte ptr [rbp + rcx*4 + 0xd] ; and eax, 0x48ffa0ce ; jmp rax
0x0000020000712641 : or cl, byte ptr [rbp - 0x75] ; add byte ptr [rbp + 0x3b], cl ; ret
0x000002000021cb01 : or cl, byte ptr [rbp - 0x77] ; or byte ptr [rcx - 0xa], al ; ret 0x7501
0x0000020000115390 : or cl, byte ptr [rbx + 0x148d43c6] ; or ch, byte ptr [rbx] ; ret 0xc0ff
0x0000020000114dd3 : or cl, byte ptr [rbx + 0x148d43c7] ; or ch, byte ptr [rbx] ; ret 0x341
0x00000200006a6811 : or cl, byte ptr [rbx + 0x4899704] ; xchg eax, esi ; inc edx ; jmp 0x200006a6811
0x000002000071b761 : or cl, byte ptr [rbx + rcx*4 - 0x40] ; add rsp, 0x38 ; jmp r9
0x00000200001460f9 : or cl, byte ptr [rbx + rdi - 0x3f] ; jae 0x2000014610c ; or eax, 0xffffffff ; ret
0x00000200001e36c1 : or cl, byte ptr [rbx + rdi - 0x3f] ; jae 0x200001e36d4 ; or eax, 0xffffffff ; ret
0x0000020000666ead : or cl, byte ptr [rbx + rdi - 0x3f] ; jae 0x20000666ec0 ; or eax, 0xffffffff ; ret
0x0000020000670d66 : or cl, byte ptr [rbx - 0x3074b72d] ; call 0x2000024d008
0x00000200001cd523 : or cl, byte ptr [rbx - 0x3174b730] ; call 0x20000139780
0x00000200006eab9b : or cl, byte ptr [rbx] ; mov ch, 0x49 ; ret
0x000002000070c27d : or cl, byte ptr [rbx] ; ret 0x1be
0x00000200005e2085 : or cl, byte ptr [rcx + 0x3b] ; ret
0x0000020000118e0b : or cl, byte ptr [rcx + 0xf] ; mov edi, 0xf490e42 ; scasd eax, dword ptr [rdi] ; ret
0x0000020000118dfe : or cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000002000024c55e : or cl, byte ptr [rcx - 0x3f] ; leave ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x000002000068a167 : or cl, byte ptr [rcx - 0x75] ; add bh, bh ; ret 0x34d
0x00000200002117f9 : or cl, byte ptr [rcx - 0x7d] ; add byte ptr [rdx], al ; ret
0x000002000013dfc0 : or cl, byte ptr [rcx - 0x7d] ; ret 0x3308
0x000002000044a005 : or cl, byte ptr [rcx - 0x7d] ; ret 0x4102
0x00000200001408a8 : or cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x00000200000ffa97 : or cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x00000200005abcf8 : or cl, byte ptr [rcx - 0x7d] ; ret 0xe902
0x00000200005bb2f4 : or cl, byte ptr [rcx - 0x7d] ; ret 0xff02
0x00000200000f9c51 : or cl, byte ptr [rcx - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret 0x4508
0x00000200004c9578 : or cl, byte ptr [rcx - 0x99fdba4] ; ret
0x0000020000134877 : or cl, byte ptr [rcx - 1] ; ret 0x8b41
0x000002000013b5ef : or cl, byte ptr [rcx - 1] ; ret 0x8d41
0x00000200005a09f5 : or cl, byte ptr [rcx - 1] ; ret 0xc883
0x00000200004c20af : or cl, byte ptr [rcx - 1] ; ret 0xc8ff
0x0000020000689d2b : or cl, byte ptr [rcx - 1] ; ret 0xc983
0x000002000022e15e : or cl, byte ptr [rcx] ; lar ecx, word ptr [rax + 0x33] ; ret
0x0000020000028881 : or cl, byte ptr [rdi] ; adc dword ptr [rcx + 0x48000000], -0x75 ; ret
0x00000200005a244a : or cl, byte ptr [rdi] ; add dh, dh ; ret
0x0000020000119436 : or cl, byte ptr [rdi] ; mov ah, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000200004b7152 : or cl, byte ptr [rdi] ; ret
0x000002000003d739 : or cl, byte ptr [rdi] ; sbb dword ptr [rdi + 1], 0 ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000041a36 : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf48
0x0000020000021a73 : or cl, byte ptr [rdi] ; xor dword ptr [rdi + rdi*8], 0xffffffff ; dec dword ptr [rax - 0x75] ; ret
0x00000200004462a4 : or cl, byte ptr [rdx] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000003c8ec : or cl, byte ptr [rsi] ; adc eax, dword ptr [rax] ; ret
0x000002000020a535 : or cl, byte ptr cs:[rax - 0x75] ; fmul dword ptr [rax - 0x75] ; ret
0x000002000018e977 : or cl, ch ; in eax, dx ; ret
0x00000200001a3e6f : or cl, ch ; int1 ; mov ebx, esi ; dec dword ptr [rax - 0x75] ; ret 0x84e9
0x00000200005a40df : or cl, ch ; mov ch, 0x34 ; jmp 0x1ffc21cccee
0x00000200005c2aa9 : or cl, ch ; pop rax ; mov cl, 0xea ; dec dword ptr [rax + 0x3b] ; ret 0x840f
0x000002000015214c : or cl, ch ; ret
0x00000200005a40d2 : or cl, ch ; ret 0xe934
0x00000200005f1af8 : or cl, ch ; ret 0xf571
0x00000200004bb462 : or cl, dl ; ret 0x8bff
0x0000020000121c18 : or cx, word ptr [r8 + 0xa] ; jne 0x20000121c31 ; mov al, 1 ; ret
0x0000020000582177 : or dh, ah ; dec dword ptr [rax - 0x73] ; fmul dword ptr [r8 + 0x2b] ; ret
0x00000200001473fd : or dh, al ; mov qword ptr [rdx + rcx - 8], rax ; ret
0x00000200004adc4c : or dh, al ; ret
0x000002000013b361 : or dh, bh ; fmul dword ptr [rbp - 0x75] ; ret 0xd233
0x0000020000099542 : or dh, byte ptr [rax - 0x74ec7500] ; ret 0xba0f
0x00000200007c5efa : or dh, byte ptr [rax - 0x75] ; call qword ptr [rax - 0x2323d17]
0x00000200004a6c8c : or dh, byte ptr [rbp + 1] ; ret
0x00000200002267f5 : or dh, byte ptr [rbp + 3] ; mov qword ptr [r10], rdx ; mov rax, r11 ; ret
0x000002000004814b : or dh, byte ptr [rbp + 6] ; mov eax, 1 ; ret
0x0000020000121c1c : or dh, byte ptr [rbp + 9] ; mov al, 1 ; ret
0x000002000001f982 : or dh, byte ptr [rbp - 0x17] ; add rsp, 0x28 ; ret
0x00000200001512a9 : or dh, byte ptr [rbp - 0x18] ; mov rax, r8 ; pop rbx ; ret
0x0000020000151264 : or dh, byte ptr [rbp - 0x20] ; mov rax, r8 ; pop rbx ; ret
0x00000200001512da : or dh, byte ptr [rbp - 0xf] ; mov rax, rdx ; and al, 0xf0 ; pop rbx ; ret
0x00000200000b7ab2 : or dh, byte ptr [rbx + 6] ; or byte ptr [r8 + 0x22], 0x10 ; ret
0x000002000012807e : or dh, byte ptr [rbx] ; enter 0x448b, 0x24 ; jo 0x20000128091 ; ret 0xc803
0x00000200004fdf74 : or dh, byte ptr [rbx] ; jmp qword ptr [rcx]
0x0000020000463f23 : or dh, byte ptr [rbx] ; rol byte ptr [rbx + rcx*4 - 0x28], cl ; call 0x20000093ab9
0x000002000060d068 : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; enter -0x7218, -1 ; ret
0x0000020000220d74 : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; int 0xe8
0x0000020000625841 : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000024d009
0x000002000062392b : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000024d009
0x0000020000626b7e : or dh, byte ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000024d009
0x00000200006235af : or dh, byte ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; leave ; call 0x2000024d009
0x000002000058e5a3 : or dh, byte ptr [rbx] ; shl byte ptr [rsi + 0x41], 0x89 ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x00000200006cf1c0 : or dh, byte ptr [rdx - 0x12] ; ret
0x00000200006f5f3b : or dh, byte ptr [rsi] ; ret 0x44ff
0x00000200001cb762 : or dh, ch ; idiv bh ; add rsp, 0x68 ; ret
0x0000020000206dbf : or dh, ch ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200006024d0 : or dh, dh ; call 0x2007520a9df
0x0000020000105b66 : or dh, dh ; ret
0x000002000002ad88 : or dh, dh ; ret 0x7401
0x000002000005d01a : or dh, dh ; ret 0x7403
0x000002000071d662 : or dh, dh ; ret 0x7501
0x00000200005e57ca : or dh, dh ; ret 0x7502
0x0000020000434593 : or dh, dh ; ret 0x7504
0x000002000009c596 : or dh, dh ; ret 0x7508
0x00000200005e3534 : or dh, dh ; ret 0x7520
0x000002000012d8ae : or dh, dh ; ret 0x8d02
0x000002000061788a : or dh, dh ; ret 0xf01
0x000002000007f5c6 : or dh, dh ; ret 0xf1f
0x00000200004d16a0 : or dh, dh ; rol dword ptr [rcx], 0x74 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200001d98b1 : or dh, dh ; ror dword ptr [rax], 0x74 ; add cl, byte ptr [rax + rdx] ; ret
0x00000200000f7dd4 : or dh, dh ; shl dword ptr [rcx], -0x4d ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret
0x00000200001aa70a : or dil, dil ; ret
0x000002000061c587 : or dl, byte ptr [rax] ; movups xmmword ptr [rax + rcx + 0x10], xmm0 ; ret
0x0000020000549fa5 : or dl, byte ptr [rax] ; ret
0x000002000020f857 : or dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000020f90c : or dword ptr [r10], eax ; ret
0x000002000016138a : or dword ptr [r8], 0xffffffff ; mov eax, 0xc0000095 ; ret
0x0000020000142aae : or dword ptr [r8], 0xffffffff ; ret
0x00000200004f216a : or dword ptr [rax + 0x1000002], 0x74 ; ret 0x8b48
0x00000200007c57ca : or dword ptr [rax + 0x10], 0x80000000 ; ret
0x0000020000175618 : or dword ptr [rax + 0x17], 0 ; add byte ptr [rax + 0x3b], cl ; ret 0x860f
0x0000020000047a73 : or dword ptr [rax + 0x23], ecx ; fmul dword ptr [rcx - 0x75] ; ret 0x8b44
0x00000200001e2e98 : or dword ptr [rax + 0x23], ecx ; ret 0xba48
0x00000200007a3b33 : or dword ptr [rax + 0x23], ecx ; ror byte ptr [rcx - 0x75], 1 ; ret 0x148b
0x00000200000ba6c0 : or dword ptr [rax + 0x23], ecx ; ror byte ptr [rcx - 0x75], 1 ; ret 0x348
0x00000200000729d8 : or dword ptr [rax + 0x23], ecx ; ror dword ptr [rcx - 0x75], cl ; ret
0x000002000046a592 : or dword ptr [rax + 0x28], 4 ; mov eax, 0xc000000d ; ret
0x000002000009a0bc : or dword ptr [rax + 0x2b], ecx ; ret 0x4b8b
0x000002000006a3ca : or dword ptr [rax + 0x33], ecx ; add ecx, dword ptr [rax + 0x23] ; ret 0x3148
0x0000020000186b2f : or dword ptr [rax + 0x33], ecx ; add ecx, dword ptr [rax + 0x23] ; ret 0x3348
0x0000020000461878 : or dword ptr [rax + 0x348ffff], eax ; ret
0x000002000003e155 : or dword ptr [rax + 0x39], ecx ; add dh, byte ptr [rbp - 0x29] ; mov eax, r8d ; ret
0x00000200000c0764 : or dword ptr [rax + 0x3b], ecx ; ret
0x000002000061ad81 : or dword ptr [rax + 0x3b], ecx ; ret 0x1873
0x0000020000181a15 : or dword ptr [rax + 0x3b], ecx ; ret 0x860f
0x00000200000c2ade : or dword ptr [rax + 0x3b], ecx ; ret 0x8f0f
0x000002000013cad6 : or dword ptr [rax + 0x3b], ecx ; ret 0xbf75
0x000002000013b0ef : or dword ptr [rax + 0x3b], ecx ; ret 0xc575
0x000002000061ad99 : or dword ptr [rax + 0x3b], ecx ; ret 0xec72
0x000002000061e06d : or dword ptr [rax + 0x3b], ecx ; ret 0xf48
0x000002000020ef7f : or dword ptr [rax + 0xf000000], 0xffffffb6 ; ret 0xed33
0x0000020000519703 : or dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x694c
0x00000200000a2376 : or dword ptr [rax + 3], ecx ; ret
0x00000200003ca63c : or dword ptr [rax + 3], ecx ; ret 0x2b48
0x00000200001b91ab : or dword ptr [rax + 4], 2 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000045685e : or dword ptr [rax + 8], 0x20 ; ret
0x0000020000087b7f : or dword ptr [rax + rcx*2], eax ; add esp, 0x20 ; pop rdi ; ret
0x00000200001ff109 : or dword ptr [rax + rdi + 0x25], eax ; ret
0x000002000010a5b7 : or dword ptr [rax - 0x39], ecx ; ret
0x000002000001ce8f : or dword ptr [rax - 0x39], ecx ; ret 0xf000
0x0000020000041d73 : or dword ptr [rax - 0x3d74f58c], eax ; ret
0x0000020000050d34 : or dword ptr [rax - 0x3e75fe1f], eax ; ret
0x000002000072944f : or dword ptr [rax - 0x73], ecx ; add al, 0x48 ; add esp, 0x38 ; ret
0x000002000059fe3c : or dword ptr [rax - 0x73], ecx ; sbb r8b, r13b ; ret 0xadd0
0x00000200004fd519 : or dword ptr [rax - 0x75], ecx ; adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0xe], 1 ; ret
0x00000200006939d5 : or dword ptr [rax - 0x75], ecx ; and al, 0x28 ; mov byte ptr [rax], 1 ; ret
0x000002000020a525 : or dword ptr [rax - 0x75], ecx ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000448224 : or dword ptr [rax - 0x75], ecx ; mov rax, qword ptr [rax + 0x20] ; ret
0x00000200007baa78 : or dword ptr [rax - 0x75], ecx ; or dword ptr [rax - 0x7b], ecx ; leave ; jne 0x200007baa72 ; ret
0x000002000051f46b : or dword ptr [rax - 0x75], ecx ; pop r8 ; call 0x20000148078
0x0000020000005c53 : or dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r11d ; ret
0x000002000079736e : or dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov rax, r10 ; ret
0x000002000012a48e : or dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov rax, r11 ; ret
0x000002000006b677 : or dword ptr [rax - 0x75], ecx ; ret
0x00000200001ed405 : or dword ptr [rax - 0x75], ecx ; ret 0x348
0x000002000000580f : or dword ptr [rax - 0x75], ecx ; ret 0x48c3
0x000002000008d743 : or dword ptr [rax - 0x75], ecx ; ret 0x8348
0x00000200000f5c5b : or dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x000002000070f5d0 : or dword ptr [rax - 0x75], ecx ; retf ; call rax
0x00000200000bf72f : or dword ptr [rax - 0x75], ecx ; sbb esi, esi ; ret
0x00000200001fc1bc : or dword ptr [rax - 0x7b], ecx ; leave ; je 0x200001fc1da ; and qword ptr [rcx], rdx ; ret
0x00000200007baa7b : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0x200007baa6f ; ret
0x0000020000621545 : or dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 4], cl ; lea eax, dword ptr [rdx + 1] ; ret
0x000002000000580a : or dword ptr [rax - 0x7b], ecx ; sal byte ptr [rcx + rcx + 0x48], cl ; mov eax, edx ; ret
0x000002000013ecbd : or dword ptr [rax - 0x7bf0cfc5], eax ; ret 0xfffc
0x00000200003fa340 : or dword ptr [rax - 0x7d], ecx ; and al, byte ptr [rax] ; and dword ptr [r8], 0 ; ret
0x0000020000025384 : or dword ptr [rax - 0x7d], ecx ; ret
0x0000020000524c66 : or dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000020000500ed9 : or dword ptr [rax - 0x7d], ecx ; ret 0x4902
0x000002000049871f : or dword ptr [rax - 0x7d], ecx ; sar ah, 0x48 ; add esp, 0x28 ; ret
0x000002000043c3b4 : or dword ptr [rax - 0x7d], ecx ; sar dh, 0x83 ; ret 0x75fe
0x0000020000167fa3 : or dword ptr [rax - 0x7f], ecx ; ret
0x00000200003e8868 : or dword ptr [rax - 0x7f], ecx ; ret 0x1000
0x00000200006648e4 : or dword ptr [rax - 0x7f], ecx ; ret 0x40d8
0x0000020000494c18 : or dword ptr [rax - 0x99ffed], ebx ; ret
0x000002000015d747 : or dword ptr [rax - 0xcfeab4], ecx ; ret 0x5589
0x000002000014055d : or dword ptr [rax - 1], ecx ; ret
0x000002000013b18e : or dword ptr [rax - 1], ecx ; ret 0x3845
0x00000200001eb5c2 : or dword ptr [rax - 9], ecx ; ret
0x000002000011d307 : or dword ptr [rax - 9], ecx ; ret 0x1ff
0x000002000050459d : or dword ptr [rax], 0xfc08548 ; ret 0xccc3
0x00000200001b8ec9 : or dword ptr [rax], 0xffffffff ; mov eax, 0x80070216 ; ret
0x000002000016138b : or dword ptr [rax], 0xffffffff ; mov eax, 0xc0000095 ; ret
0x0000020000142aaf : or dword ptr [rax], 0xffffffff ; ret
0x000002000079c282 : or dword ptr [rax], eax ; add al, ch ; ret 0xdbb0
0x0000020000600c07 : or dword ptr [rax], eax ; add bh, bh ; ret 0xb841
0x00000200000ef68d : or dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x8948
0x00000200000b3d78 : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; push rdi ; adc byte ptr [rax - 0x7f], cl ; ret 0x1a0
0x00000200000a741e : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; push rsi ; adc byte ptr [rax - 0x7f], cl ; ret 0x1a0
0x000002000078977f : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004c5207 : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x00000200006b68ab : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x0000020000194caa : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200000b0f58
0x0000020000788a51 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000f776d : or dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x200000c3a06
0x00000200005ac4bc : or dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x200001dbf3f
0x00000200005ac4d2 : or dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x200001dc1a7
0x0000020000120c20 : or dword ptr [rax], eax ; add byte ptr [rax], al ; call rdi
0x00000200003fa31f : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdx], rax ; ret
0x00000200001d21ea : or dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x8348
0x000002000006467c : or dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000093ff4 : or dword ptr [rax], eax ; add rcx, rdx ; jmp rcx
0x00000200000041aa : or dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051cb5b : or dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000002ea2d : or dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001c4917 : or dword ptr [rax], eax ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000037c07 : or dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x0000020000435b83 : or dword ptr [rax], eax ; add rsp, 0x40 ; pop rbp ; ret
0x000002000044a176 : or dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x000002000044559e : or dword ptr [rax], eax ; add rsp, 0x68 ; ret
0x00000200001c53a6 : or dword ptr [rax], eax ; call 0x200001c51d8
0x00000200006b46a4 : or dword ptr [rax], eax ; call 0x20000470990
0x000002000043c1fd : or dword ptr [rax], eax ; je 0x2000043c20a ; xor al, al ; ret
0x0000020000563662 : or dword ptr [rax], eax ; mov eax, 1 ; ret
0x00000200000c5aaa : or dword ptr [rax], eax ; mov qword ptr [r8], rcx ; ret
0x00000200005201ab : or dword ptr [rax], eax ; mov rcx, qword ptr [rbp + 0x38] ; call 0x20000148079
0x0000020000519b09 : or dword ptr [rax], eax ; mov rcx, qword ptr [rbp - 0x40] ; call 0x20000148079
0x0000020000560de0 : or dword ptr [rax], eax ; or eax, 0xffffffff ; ret
0x00000200005139b5 : or dword ptr [rax], eax ; ret
0x00000200001be67f : or dword ptr [rax], eax ; sti ; add rsp, 0x28 ; ret
0x000002000051c5d7 : or dword ptr [rax], eax ; xor al, al ; ret
0x000002000051c0d1 : or dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c4f70 : or dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000055ec59 : or dword ptr [rax], eax ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200006b46a3 : or dword ptr [rax], r8d ; call 0x20000470991
0x000002000004707d : or dword ptr [rbp + 0x23], ecx ; ret
0x0000020000014814 : or dword ptr [rbp + 0x23], ecx ; ret 0x8b48
0x000002000061af30 : or dword ptr [rbp + 0x2b], ecx ; ret 0x8348
0x000002000021316d : or dword ptr [rbp + 0x3b], 0x470f4dc3 ; ret
0x00000200004ac9aa : or dword ptr [rbp + 0x4750c4a], eax ; mov al, r9b ; ret
0x000002000006dad2 : or dword ptr [rbp + 0x4800119a], 0xffffff8b ; ret
0x000002000000b722 : or dword ptr [rbp + 0xb], esi ; mov rax, rcx ; ret
0x00000200001d8e13 : or dword ptr [rbp + 0xf440f50], ecx ; and al, dl ; jmp 0x200001d8e38
0x00000200001f248d : or dword ptr [rbp + 1], 0 ; add byte ptr [rax - 9], cl ; ret
0x0000020000055c71 : or dword ptr [rbp + 1], esi ; ret
0x0000020000605bbd : or dword ptr [rbp + 3], ecx ; ret 0x4166
0x00000200005098b6 : or dword ptr [rbp + 3], esi ; xor eax, eax ; ret
0x000002000007e8f3 : or dword ptr [rbp + 5], esi ; add rsp, 0x28 ; ret
0x0000020000015ac3 : or dword ptr [rbp + rax], ebp ; add rsp, 0x40 ; pop rbx ; ret
0x000002000007f2d5 : or dword ptr [rbp - 0x73], 0x3b498914 ; ret 0x1274
0x000002000023ef7b : or dword ptr [rbp - 0x73], eax ; pop rdx ; or eax, dword ptr [rcx + 0x3b] ; ret
0x0000020000244ff8 : or dword ptr [rbp - 0x73], eax ; push rbx ; or eax, dword ptr [rcx + 0x3b] ; ret 0x1075
0x000002000055c966 : or dword ptr [rbp - 0x76], eax ; ret
0x00000200001ba42c : or dword ptr [rbp - 0x7b], ecx ; leave ; jne 0x200001ba412 ; xor eax, eax ; ret
0x0000020000046cd4 : or dword ptr [rbp - 0xf], esi ; add rsp, 0x28 ; ret
0x000002000003d4c3 : or dword ptr [rbx + 0x10], 0xffffffff ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005698ab : or dword ptr [rbx + 0x18], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004cffb2 : or dword ptr [rbx + 0x62], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000018e973 : or dword ptr [rbx + rcx*4 + 0x73], ecx ; or cl, ch ; in eax, dx ; ret
0x0000020000664850 : or dword ptr [rbx + rdi + 0x41], ecx ; cmp byte ptr [rdx + 3], dh ; xor eax, eax ; ret
0x000002000021f26b : or dword ptr [rbx + rdi - 0x3f], ecx ; jne 0x2000021f25e ; ret
0x00000200000035d7 : or dword ptr [rbx - 0x188bf71e], eax ; mov al, 1 ; ret
0x000002000070f5e5 : or dword ptr [rbx - 0x3474b729], ecx ; call rax
0x0000020000678e5b : or dword ptr [rbx - 0x37884ef3], eax ; call qword ptr [rax]
0x00000200000b1329 : or dword ptr [rbx - 0x49f0f81f], eax ; ret 0x3b48
0x00000200004f8ee3 : or dword ptr [rbx - 0x7af0f407], eax ; ret
0x00000200000a310c : or dword ptr [rbx - 0x7af0fe07], eax ; ret
0x00000200000841b8 : or dword ptr [rbx], ecx ; ret 0xeeeb
0x0000020000696e23 : or dword ptr [rbx], edi ; ret 0x1e74
0x00000200001fd859 : or dword ptr [rbx], edi ; ret 0xa74
0x0000020000441952 : or dword ptr [rbx], esi ; jmp 0x2000044191c
0x000002000040fa48 : or dword ptr [rbx], esi ; ret
0x0000020000479d21 : or dword ptr [rbx], esi ; ret 0xc069
0x000002000040fd22 : or dword ptr [rbx], esi ; ret 0xd069
0x000002000004b10d : or dword ptr [rbx], esi ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000009052a : or dword ptr [rbx], esi ; ror byte ptr [rax + 0x3b], 0xca ; sete al ; ret
0x00000200004ac14a : or dword ptr [rbx], esi ; ror byte ptr [rcx - 0x7d], cl ; ret 0x8b28
0x00000200004930fb : or dword ptr [rbx], esi ; sal byte ptr [rbx], cl ; ret
0x00000200005b1436 : or dword ptr [rbx], esi ; shr al, cl ; ret 0xc9bb
0x000002000060f9c5 : or dword ptr [rbx], esi ; shr al, cl ; xor edx, esi ; ret
0x000002000020c047 : or dword ptr [rcx + 0x10], 0xffffffff ; ret
0x000002000079fe23 : or dword ptr [rcx + 0x18], 0xffffffff ; ret
0x0000020000552b1b : or dword ptr [rcx + 0x18], eax ; mov eax, dword ptr [rdx + 0x24] ; or dword ptr [rcx + 0x24], eax ; ret
0x000002000002b70e : or dword ptr [rcx + 0x23], ecx ; call 0x20048c54264
0x000002000004ff47 : or dword ptr [rcx + 0x23], ecx ; fisttp word ptr [rcx - 0x75] ; ret
0x00000200000dbb42 : or dword ptr [rcx + 0x23], ecx ; fmul dword ptr [rax - 0x75] ; ret 0x348
0x000002000079e428 : or dword ptr [rcx + 0x23], ecx ; fmul dword ptr [rax - 0x75] ; ret 0xc148
0x000002000009b19c : or dword ptr [rcx + 0x23], ecx ; ret 0x8b49
0x00000200000dbe44 : or dword ptr [rcx + 0x23], ecx ; ror byte ptr [rcx - 0x75], 1 ; ret 0x8b48
0x0000020000049d76 : or dword ptr [rcx + 0x23], ecx ; ror dword ptr [rcx - 0x75], 1 ; ret 0x348
0x000002000001708f : or dword ptr [rcx + 0x23], ecx ; ror dword ptr [rcx - 0x75], cl ; ret 0x348
0x0000020000552b21 : or dword ptr [rcx + 0x24], eax ; ret
0x000002000066137b : or dword ptr [rcx + 0x2b], ecx ; fmul dword ptr [rax - 0x7d] ; ret
0x0000020000629676 : or dword ptr [rcx + 0x38], eax ; pop rcx ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200002232e5 : or dword ptr [rcx + 0x3b], eax ; ret 0x976
0x0000020000178e11 : or dword ptr [rcx + 0x3b], ecx ; ret
0x0000020000139d05 : or dword ptr [rcx + 0x6c0], 0x10 ; ret
0x00000200006c98b7 : or dword ptr [rcx + 0x78], edx ; ret
0x000002000055b0dd : or dword ptr [rcx + 0x98], 1 ; ret
0x00000200006c98b1 : or dword ptr [rcx + 0x98], edx ; or dword ptr [rcx + 0x78], edx ; ret
0x000002000003302e : or dword ptr [rcx + 0xa], eax ; mov eax, edx ; ret
0x000002000003302d : or dword ptr [rcx + 0xa], r8d ; mov eax, edx ; ret
0x00000200001c0e73 : or dword ptr [rcx + 0xf], eax ; mov dh, 0x40 ; add cl, byte ptr [rax + 0xf] ; stosd dword ptr [rdi], eax ; ret 0xd148
0x0000020000548ed7 : or dword ptr [rcx + 0xf], eax ; mov esi, 0x37e883c0 ; jmp 0x20000548eac
0x00000200001579c1 : or dword ptr [rcx + 8], 4 ; ret
0x000002000003d6f1 : or dword ptr [rcx + 8], edx ; ret
0x0000020000136d7f : or dword ptr [rcx + r9*4 + 0x747ee0], 0xffffffff ; ret
0x0000020000057e55 : or dword ptr [rcx + rax*8 + 8], eax ; ret
0x00000200001d20e3 : or dword ptr [rcx + rcx*4 + 0x11], eax ; ret
0x00000200004052e6 : or dword ptr [rcx + rcx*4 + 0x24], ecx ; ret
0x0000020000136d80 : or dword ptr [rcx + rcx*4 + 0x747ee0], 0xffffffff ; ret
0x00000200004260b6 : or dword ptr [rcx + rcx*4 + 0x76], ecx ; shr al, 0x40 ; cdq ; ret
0x00000200004706fc : or dword ptr [rcx - 0x18], 8 ; ret
0x00000200007c3d15 : or dword ptr [rcx - 0x4837a3fb], ecx ; push rsi ; ret 0xf02
0x00000200006cb715 : or dword ptr [rcx - 0x73], ecx ; or al, 0xeb ; add ecx, dword ptr [rax - 0x75] ; ret 0x8548
0x0000020000469c65 : or dword ptr [rcx - 0x73], ecx ; push rbp ; ror byte ptr [rcx - 0x75], 1 ; int 0xff
0x000002000018c501 : or dword ptr [rcx - 0x75], eax ; ret
0x00000200000275a5 : or dword ptr [rcx - 0x75], eax ; ret 0x3b48
0x0000020000045ea5 : or dword ptr [rcx - 0x75], ecx ; ret
0x0000020000044099 : or dword ptr [rcx - 0x75], ecx ; ret 0x8b49
0x000002000011685c : or dword ptr [rcx - 0x75], ecx ; ret 0xb9c3
0x00000200003f90d7 : or dword ptr [rcx - 0x75], esi ; ret 0x8b48
0x00000200000398e1 : or dword ptr [rcx - 0x7d], 0xffffffe8 ; add al, 0x83 ; ret 0xebe0
0x000002000023f557 : or dword ptr [rcx - 0x7d], eax ; ret 0x75ff
0x00000200005ef6e8 : or dword ptr [rcx - 0x7d], ecx ; ret
0x0000020000458918 : or dword ptr [rcx - 0x7d], ecx ; ret 0x4802
0x00000200001d10e8 : or dword ptr [rcx - 0xa], eax ; ror byte ptr [rax], 0x8b ; ret
0x00000200001b18e4 : or dword ptr [rcx - 1], eax ; ret 0x8d48
0x0000020000563661 : or dword ptr [rcx], 0 ; mov eax, 1 ; ret
0x00000200005fa96f : or dword ptr [rcx], 0xffffffff ; mov eax, 0xc000000d ; ret
0x000002000005f08d : or dword ptr [rcx], 0xffffffff ; mov word ptr [rcx + 4], ax ; ret
0x000002000000b42b : or dword ptr [rcx], 0xffffffff ; ret
0x0000020000087b7e : or dword ptr [rcx], 4 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043e3da : or dword ptr [rcx], 4 ; xor eax, eax ; ret
0x000002000002ce19 : or dword ptr [rcx], eax ; add al, al ; ret
0x00000200007b979e : or dword ptr [rcx], eax ; add rsp, 0x38 ; ret
0x000002000003d3f5 : or dword ptr [rcx], eax ; mov byte ptr [rcx + 8], al ; ret
0x0000020000059d38 : or dword ptr [rcx], ebx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000015d8ab : or dword ptr [rcx], edi ; add byte ptr [rax + 0x40c48348], dl ; pop rbp ; ret
0x00000200000450aa : or dword ptr [rdi + 0x1b], esi ; mov eax, 8 ; ret
0x0000020000425675 : or dword ptr [rdi], 0xce72d0a3 ; xor eax, eax ; ret
0x0000020000190c4b : or dword ptr [rdi], 0xffffff85 ; ret 0
0x0000020000030438 : or dword ptr [rdi], eax ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000022e15f : or dword ptr [rdi], ecx ; add cl, byte ptr [rax + 0x33] ; ret
0x00000200000527f0 : or dword ptr [rdi], ecx ; mov bh, 0xc2 ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000057e50 : or dword ptr [rdi], ecx ; mov bh, 0xc2 ; or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x00000200004780a5 : or dword ptr [rdi], ecx ; mov dh, 0x85 ; ret 6
0x00000200001a85af : or dword ptr [rdi], ecx ; mov dh, 0x87 ; ret
0x0000020000070bed : or dword ptr [rdi], ecx ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005bd106 : or dword ptr [rdi], ecx ; test byte ptr [rbx - 0x3d], ch ; jmp 0x1ffc288bb18
0x00000200000a8e34 : or dword ptr [rdi], ecx ; test dl, ch ; fimul dword ptr [rsi] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000c8aae : or dword ptr [rdi], ecx ; test dword ptr [rax + rax - 0x74bf0000], ebx ; ret
0x00000200001d28f3 : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc28b
0x0000020000009ca8 : or dword ptr [rdi], edi ; add byte ptr [rax + 1], bh ; ret
0x000002000001bba7 : or dword ptr [rdx + 0x16], eax ; ret
0x000002000001bba6 : or dword ptr [rdx + 0x16], r8d ; ret
0x000002000013fb58 : or dword ptr [rdx + 0x18], 0x20 ; mov eax, 0xffff ; ret
0x000002000013ddf0 : or dword ptr [rdx + 0x18], 0x20 ; or eax, 0xffffffff ; ret
0x000002000018cd14 : or dword ptr [rdx + 0x20], 1 ; inc dword ptr [rcx + 0x3c] ; ret
0x000002000067a37b : or dword ptr [rdx + 0x258], 0x20 ; ret
0x000002000018cf8c : or dword ptr [rdx + 0x38], 1 ; inc dword ptr [rcx] ; ret
0x00000200001f75d8 : or dword ptr [rdx + 1], edi ; mov eax, edx ; jmp 0x200001f75ee
0x00000200000770cd : or dword ptr [rdx + rax*2], esp ; cmp al, 2 ; je 0x200000770ea ; mov al, 1 ; ret
0x0000020000556316 : or dword ptr [rdx - 0x19], esi ; mov eax, 0xc0000001 ; ret
0x0000020000549fa4 : or dword ptr [rdx], 0x10 ; ret
0x000002000015798d : or dword ptr [rdx], 0xffffffff ; mov word ptr [rdx + 4], ax ; ret
0x000002000020f858 : or dword ptr [rdx], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000020f90d : or dword ptr [rdx], eax ; ret
0x000002000013caa0 : or dword ptr [rdx], edi ; ret 0x5675
0x0000020000715732 : or dword ptr [rip + 0x178db], 0x10 ; ret
0x0000020000157ba9 : or dword ptr [rip + 0x251711], ecx ; ret
0x0000020000044dc1 : or dword ptr [rip + 0x2b0e69], ecx ; ret
0x00000200007ab4bd : or dword ptr [rip - 0x4a9f00], 2 ; ret
0x000002000015bb2d : or dword ptr [rip - 0x762dccfc], ecx ; push rbp ; cmp al, 0x8b ; ret 0x8d4c
0x00000200003cddd4 : or dword ptr [rip - 0xcad2a], ecx ; ret
0x000002000064f51c : or dword ptr [rsi + 0x2b], esp ; ret 0xb70f
0x000002000013d1b1 : or dword ptr [rsi + 0x3b], esp ; ret 0x1174
0x00000200004bbd1d : or dword ptr [rsi + rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000065a27a : or dword ptr [rsi - 0x3b7cb701], ebp ; pop rax ; ret
0x00000200001d3f1a : or dword ptr [rsi - 0x7b], esp ; sal byte ptr [rbp + 4], cl ; mov dword ptr [r8], eax ; ret
0x00000200005015f8 : or dword ptr [rsi], 0xebc78b00 ; ret 0x854d
0x00000200007a5812 : or dword ptr [rsi], 2 ; add bh, bh ; ret
0x0000020000157bdb : or dword ptr [rsp], 0 ; ret
0x000002000020a524 : or dword ptr cs:[rax - 0x75], ecx ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000194ca9 : or dword ptr ss:[rax], eax ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200000b0f59
0x0000020000093ff3 : or dword ptr ss:[rax], eax ; add rcx, rdx ; jmp rcx
0x00000200001c1ebe : or eax, 0x13798d ; call r9
0x00000200001c1c9e : or eax, 0x137bad ; call r9
0x00000200001c1ad3 : or eax, 0x137d78 ; call r9
0x00000200001c1355 : or eax, 0x1384f6 ; call r9
0x00000200001c088d : or eax, 0x138fbe ; call r9
0x00000200001c04f5 : or eax, 0x139356 ; call r9
0x00000200001c0139 : or eax, 0x139712 ; call r9
0x00000200001bf51d : or eax, 0x13a32e ; lea ecx, dword ptr [rax + 0x7b] ; call r9
0x00000200001bebf5 : or eax, 0x13ac56 ; call r9
0x00000200001be1eb : or eax, 0x13b660 ; call r9
0x00000200001bdf13 : or eax, 0x13b938 ; call r9
0x00000200001bd914 : or eax, 0x13bf37 ; call r9
0x00000200001bd7db : or eax, 0x13c070 ; call r9
0x00000200001bd5df : or eax, 0x13c26c ; call r9
0x00000200001c94f8 : or eax, 0x13c6e3 ; call 0x200000e5727
0x00000200001bcdab : or eax, 0x13caa0 ; call r9
0x00000200005f6466 : or eax, 0x151c9d ; call 0x200002164b4
0x00000200001c5caf : or eax, 0x159ba4 ; ret
0x00000200001c511d : or eax, 0x15bbfe ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200001c467e : or eax, 0x15dc25 ; ret
0x00000200001c462f : or eax, 0x15dc6c ; ret
0x000002000019dcd9 : or eax, 0x16568a ; call rax
0x000002000009dc5b : or eax, 0x18 ; ret
0x00000200000c5bc6 : or eax, 0x1a1ff5 ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000013c66d : or eax, 0x1b761e ; ret
0x000002000013f69f : or eax, 0x1b941c ; sete al ; ret
0x0000020000584771 : or eax, 0x1c43d2 ; call 0x20000470993
0x00000200005846e2 : or eax, 0x1c4441 ; call 0x20000470993
0x000002000058474a : or eax, 0x1c4749 ; call 0x20000470993
0x000002000006cd95 : or eax, 0x1c8b4d04 ; ret
0x000002000057be07 : or eax, 0x1ccd14 ; call 0x200000e8067
0x000002000057bdbe : or eax, 0x1ccd5d ; call 0x200000e8067
0x000002000057bd76 : or eax, 0x1ccda5 ; call 0x200000e8067
0x00000200001d3547 : or eax, 0x1d4b6c ; ret
0x00000200001d2b6f : or eax, 0x1d66ed ; mov al, dl ; ret
0x00000200005695de : or eax, 0x1debcd ; ret
0x00000200001529fb : or eax, 0x1e ; sub r9, r8 ; jmp r9
0x00000200001397ba : or eax, 0x1e64ad ; add rsp, 0x48 ; ret
0x00000200001c0f6a : or eax, 0x1e709d ; cmova eax, ecx ; ret
0x000002000011c544 : or eax, 0x1ea297 ; ret
0x000002000013a640 : or eax, 0x1edd03 ; ret
0x000002000012d66f : or eax, 0x1f7d84 ; ret
0x0000020000434599 : or eax, 0x20 ; bt edx, 0x10 ; jb 0x200004345bb ; ret
0x0000020000050f7c : or eax, 0x20 ; mov qword ptr [rcx], rax ; ret
0x00000200000ca080 : or eax, 0x200f4400 ; ret
0x000002000001aa84 : or eax, 0x20c48348 ; pop rbx ; ret
0x000002000070a9f8 : or eax, 0x226b3 ; ret
0x0000020000044d55 : or eax, 0x226d1e ; movups xmmword ptr [rcx + 0x70], xmm1 ; ret
0x00000200006b242b : or eax, 0x22c00000 ; ret
0x000002000050017b : or eax, 0x248c8d48 ; ret 0
0x0000020000157baa : or eax, 0x251711 ; ret
0x0000020000157a09 : or eax, 0x254772 ; lea rax, qword ptr [rcx + rax*8] ; ret
0x00000200000c1e32 : or eax, 0x264b89 ; add rax, rcx ; ret
0x00000200007039af : or eax, 0x2970c ; add rsp, 0x28 ; ret
0x0000020000044dc2 : or eax, 0x2b0e69 ; ret
0x0000020000492978 : or eax, 0x2b646b ; add rsp, 0x38 ; ret
0x0000020000042c4a : or eax, 0x2dbb45 ; jmp 0x20000042c1a
0x000002000003c055 : or eax, 0x2e9426 ; call 0x200000a82b7
0x000002000000ff03 : or eax, 0x2f6a78 ; ret
0x00000200006edc26 : or eax, 0x30dbde31 ; ret 0xc556
0x000002000008e0a2 : or eax, 0x31b171 ; sete al ; ret
0x0000020000413b8b : or eax, 0x33450018 ; in al, -0xa ; ret
0x0000020000535a43 : or eax, 0x3345ffe9 ; rol byte ptr [rcx - 0x75], cl ; ret 0x8348
0x000002000006ba02 : or eax, 0x33d839 ; je 0x2000006ba15 ; xor al, al ; ret
0x000002000048a9a8 : or eax, 0x3480014 ; ret 0xdb33
0x0000020000058e76 : or eax, 0x353f15 ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000020000053422 : or eax, 0x356171 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000693847 : or eax, 0x360d3844 ; ret 0xffc6
0x0000020000043d44 : or eax, 0x3667f7 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200003e15c1 : or eax, 0x367f5a ; call 0x200000035e8
0x00000200003e15a5 : or eax, 0x367f76 ; call 0x20000009858
0x00000200003d4830 : or eax, 0x375c8b ; call 0x200000036cc
0x00000200000356b2 : or eax, 0x3776d9 ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000002ae58 : or eax, 0x3922c3 ; sete al ; ret
0x0000020000112478 : or eax, 0x3b41fff4 ; ret
0x000002000069c082 : or eax, 0x40000000 ; mov dh, al ; call 0x20000148379
0x00000200000c7fa6 : or eax, 0x418d4100 ; or byte ptr [rcx + 3], al ; ret 0xc203
0x000002000062b454 : or eax, 0x41c00000 ; mov eax, eax ; ret
0x000002000021cb4a : or eax, 0x41c00000 ; mov eax, ecx ; ret
0x00000200000fd1a8 : or eax, 0x41c12b4c ; mov eax, eax ; ret
0x00000200000c1ec3 : or eax, 0x458b4800 ; and byte ptr [rax + 0x2b], cl ; ret
0x00000200004cdc2f : or eax, 0x48000000 ; add esp, 0x38 ; ret
0x00000200006a726f : or eax, 0x4800000a ; add esp, 0x48 ; ret
0x0000020000007c27 : or eax, 0x4801b000 ; add esp, 0x28 ; ret
0x000002000057f916 : or eax, 0x48900008 ; add esp, 0x20 ; pop rbp ; ret
0x000002000002cfba : or eax, 0x48c00000 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001214ec : or eax, 0x48c00000 ; add esp, 0x20 ; pop rdi ; ret
0x0000020000091f0f : or eax, 0x48c00000 ; add esp, 0x28 ; ret
0x00000200001ce0d8 : or eax, 0x48c00000 ; add esp, 0x30 ; pop rbx ; ret
0x00000200001c0617 : or eax, 0x48c00000 ; add esp, 0x38 ; ret
0x00000200001c702d : or eax, 0x48c00000 ; add esp, 0x40 ; pop rbx ; ret
0x000002000062b4a2 : or eax, 0x48c00000 ; add esp, 0x48 ; ret
0x00000200006ca7a4 : or eax, 0x48c00000 ; add esp, 0x50 ; pop rbx ; ret
0x00000200007c2626 : or eax, 0x48c0940f ; add esp, 0x20 ; pop rbp ; ret
0x00000200004d7163 : or eax, 0x48c48b4d ; mov edx, esi ; call rax
0x00000200000bf7d0 : or eax, 0x48cccc00 ; mov eax, dword ptr [rcx + 8] ; ret
0x0000020000428fa9 : or eax, 0x48d18b48 ; mov ecx, dword ptr [rdi + 8] ; call rax
0x000002000013c457 : or eax, 0x48d68b48 ; mov ecx, ebx ; call r14
0x000002000013c46c : or eax, 0x48d68b48 ; mov ecx, edi ; call r14
0x00000200005fe0cb : or eax, 0x48ffe562 ; add esp, 0x48 ; ret
0x000002000020585f : or eax, 0x48fff354 ; add esp, 0x70 ; pop rbp ; ret
0x000002000013d813 : or eax, 0x48ffffff ; add esp, 0x38 ; ret
0x00000200004d6df5 : or eax, 0x49c38b4c ; mov edx, esi ; call rax
0x00000200006ee10b : or eax, 0x56fac27d ; outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x0000020000517894 : or eax, 0x57b8000 ; add byte ptr [rax - 0x75], cl ; ret 0xf49
0x0000020000122417 : or eax, 0x598b0849 ; or dh, dh ; ret
0x000002000019f17c : or eax, 0x62a57 ; call rax
0x00000200007ce6d9 : or eax, 0x6b000001 ; ret
0x000002000042825d : or eax, 0x70518948 ; xor eax, eax ; ret
0x00000200003deabc : or eax, 0x74c00000 ; and dword ptr [rcx - 0x75], ecx ; ret
0x0000020000187a6b : or eax, 0x74c78441 ; adc ecx, dword ptr [rax - 0x75] ; ret 0xf48
0x0000020000652386 : or eax, 0x76ea3b41 ; or byte ptr [rcx - 0x75], al ; ret 0x4566
0x00000200007e0c71 : or eax, 0x7e ; add byte ptr [rax], al ; ret 0x7e0d
0x000002000014e4c1 : or eax, 0x7ed5 ; jmp rcx
0x00000200005ae2fe : or eax, 0x81c00000 ; jmp qword ptr [rbx]
0x00000200003fe314 : or eax, 0x83000000 ; call qword ptr [rax]
0x00000200001bedc5 : or eax, 0x83058b48 ; stosb byte ptr [rdi], al ; adc eax, dword ptr [rax] ; call rax
0x00000200007026b5 : or eax, 0x83480673 ; ret
0x00000200001c3ef9 : or eax, 0x8348c1ff ; ret 0x8308
0x00000200001e3af6 : or eax, 0x8348c3ff ; ret 0x8308
0x0000020000678dc2 : or eax, 0x8348c7ff ; ret
0x0000020000660c3d : or eax, 0x8348c80c ; ret 0x4908
0x00000200005e3df7 : or eax, 0x83fff0e4 ; ret
0x000002000017a890 : or eax, 0x87343 ; call rax
0x000002000015bb2e : or eax, 0x89d23304 ; push rbp ; cmp al, 0x8b ; ret 0x8d4c
0x00000200000c937e : or eax, 0x8a01b300 ; ret
0x000002000068a48f : or eax, 0x8b000000 ; ret
0x000002000048aa6a : or eax, 0x8b440014 ; ret
0x000002000022a0cb : or eax, 0x8b480000 ; ret
0x0000020000046b65 : or eax, 0x8b480011 ; ret
0x00000200000e1eac : or eax, 0x8b480024 ; ret
0x0000020000487e0f : or eax, 0x8b48284f ; push rdi ; sub dh, dh ; ret 0x740f
0x0000020000487838 : or eax, 0x8b48284f ; push rdi ; sub dh, dh ; ret 0xf0f
0x000002000051c2ab : or eax, 0x8b48ffd3 ; je 0x2000051c2df ; js 0x2000051c248 ; ret
0x000002000048794a : or eax, 0x8b49284f ; push rdi ; sub dh, dh ; ret 0xf0f
0x00000200005172bd : or eax, 0x8b74568b ; ret
0x00000200001fed6e : or eax, 0x8bc00000 ; ret
0x000002000069fa6d : or eax, 0x8bc00000 ; ret 0x8b48
0x00000200001f0753 : or eax, 0x8bca8b48 ; ret
0x00000200007a76d7 : or eax, 0x8bffb7dc ; ret
0x00000200004cdf0f : or eax, 0x8bffbf02 ; ret
0x00000200004334df : or eax, 0x8bffc2ec ; ret
0x000002000061a6ef : or eax, 0x8bffc329 ; ret
0x00000200004af78f : or eax, 0x8bffc386 ; ret
0x00000200004647ef : or eax, 0x8bffc8bb ; ret
0x00000200007941ff : or eax, 0x8bffd066 ; ret
0x0000020000449b6f : or eax, 0x8bffd0dd ; ret
0x00000200006ca3a3 : or eax, 0x8bffd94c ; ret
0x0000020000478bef : or eax, 0x8bffdd44 ; ret
0x0000020000176743 : or eax, 0x8bfff9d0 ; ret
0x00000200001546af : or eax, 0x90000021 ; ret
0x00000200005a1877 : or eax, 0x90ffa942 ; jmp 0x2000042db79
0x00000200006b46a1 : or eax, 0x944c2 ; call 0x20000470993
0x0000020000514a22 : or eax, 0xb1d38b48 ; add eax, ebp ; pop rdi ; ret
0x00000200004664dc : or eax, 0xba0f0472 ; jmp 0x200004664f7
0x00000200000c84b9 : or eax, 0xbc0f4400 ; ret
0x000002000068bf1b : or eax, 0xbcc60 ; jne 0x2000068bf2e ; xor al, al ; ret
0x00000200001c0f32 : or eax, 0xc0350000 ; ret
0x000002000021fc4d : or eax, 0xc08b4100 ; ret
0x00000200000c3f2b : or eax, 0xc08b4900 ; add rsp, 0x38 ; ret
0x000002000021fcaf : or eax, 0xc2f64100 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x00000200001d2917 : or eax, 0xc3118948 ; mov dword ptr [rcx], edx ; ret
0x000002000021fc43 : or eax, 0xc38b4100 ; ret
0x00000200001c8c6f : or eax, 0xc7001570 ; ret
0x000002000067f494 : or eax, 0xc9437 ; call 0x2000001b6df
0x000002000067f3ee : or eax, 0xc94dd ; call 0x2000001b6df
0x0000020000215b76 : or eax, 0xddebd ; ret
0x00000200002200db : or eax, 0xdf130 ; add rsp, 0x28 ; ret
0x00000200001895b4 : or eax, 0xe990fff4 ; ret 0xeea8
0x00000200005f1a3f : or eax, 0xe9c00000 ; ret
0x00000200006b64f4 : or eax, 0xe9c00000 ; ret 0
0x000002000058387c : or eax, 0xe9c00000 ; ret 0xe643
0x00000200001697a9 : or eax, 0xe9c00000 ; ret 0xec3e
0x00000200005bbd17 : or eax, 0xe9c00000 ; ret 0xf788
0x0000020000587af8 : or eax, 0xe9c00000 ; ret 0xffe6
0x00000200005ebd7b : or eax, 0xe9c00000 ; ret 0xfff1
0x00000200005fed96 : or eax, 0xe9c00000 ; ret 1
0x0000020000591719 : or eax, 0xe9c00000 ; xchg eax, ebp ; ret
0x00000200000038ef : or eax, 0xeb002497 ; ret 0x8a80
0x00000200006d697f : or eax, 0xeb800000 ; add bh, bh ; ret
0x00000200006d690f : or eax, 0xeb800000 ; add eax, dword ptr [rcx - 1] ; ret
0x0000020000128ea8 : or eax, 0xebc00000 ; jmp 0x1ffc3231808
0x00000200003fd30e : or eax, 0xebc00000 ; or al, 0x41 ; inc edx ; jmp 0x200003fd305
0x00000200004b175d : or eax, 0xebc00000 ; ret
0x000002000050d54c : or eax, 0xebc00000 ; ret 0x22b8
0x0000020000056598 : or eax, 0xebc00000 ; ret 0xcccc
0x000002000001eb01 : or eax, 0xebc08b4c ; or byte ptr [rax - 1], cl ; ret 0x3b49
0x000002000006761e : or eax, 0xf0011eb ; mov dh, 0x91 ; ret
0x00000200001763ca : or eax, 0xf0e99000 ; ret
0x000002000068dc69 : or eax, 0xf18418b ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x0000020000052b97 : or eax, 0xf3002cff ; movq qword ptr [rcx], mm0 ; ret
0x00000200001cb1b7 : or eax, 0xf600175f ; ret
0x00000200006f6365 : or eax, 0xf6c00000 ; ret 0x7402
0x000002000066042f : or eax, 0xf6ffa3d9 ; ret
0x000002000064d92f : or eax, 0xf704ce83 ; ret
0x00000200001763ba : or eax, 0xf7e99000 ; ret
0x00000200005945c4 : or eax, 0xfc00000 ; ret
0x000002000054d470 : or eax, 0xfc00000 ; ret 0xd08b
0x0000020000117b89 : or eax, 0xfc000000 ; ret
0x0000020000150f2a : or eax, 0xff49228a ; ret 0xc9ff
0x000002000070dbc2 : or eax, 0xffa0ce25 ; jmp rax
0x000002000070d966 : or eax, 0xffa0d081 ; jmp rax
0x00000200007bbac2 : or eax, 0xffb45c89 ; ret
0x00000200007bc4cd : or eax, 0xffb46bae ; ret
0x00000200007baf71 : or eax, 0xffb4838a ; ret
0x00000200007b6e8e : or eax, 0xffb4c94d ; call 0x20000563137
0x00000200007bc9ee : or eax, 0xffb626a9 ; add rsp, 0x28 ; ret
0x00000200007bd2e2 : or eax, 0xffb63c01 ; ret
0x00000200007b7dbc : or eax, 0xffb6749b ; ret
0x00000200007d275e : or eax, 0xffb8349d ; xor eax, eax ; ret
0x000002000072600a : or eax, 0xffbd2fd1 ; ret
0x00000200007179b8 : or eax, 0xffbe7d33 ; call 0x20000703bef
0x000002000071710e : or eax, 0xffbe8915 ; ret
0x00000200007bd2cd : or eax, 0xffbead5d ; ret
0x0000020000705f9e : or eax, 0xffbf1b39 ; call rax
0x0000020000710ea1 : or eax, 0xffbf5276 ; ret
0x00000200007a9445 : or eax, 0xffc010f6 ; call 0x200003d2fa8
0x00000200006f6315 : or eax, 0xffc2323e ; ret
0x0000020000672c54 : or eax, 0xffc811db ; cmova eax, ecx ; ret
0x00000200006762f1 : or eax, 0xffc8bdca ; jmp 0x20000676307
0x000002000067109b : or eax, 0xffc921a7 ; add al, 0xe8 ; ret 0xb90f
0x0000020000658952 : or eax, 0xffcad899 ; mov qword ptr [rcx + 8], r9 ; ret
0x00000200006588f2 : or eax, 0xffcad901 ; jmp 0x200006588c2
0x0000020000658814 : or eax, 0xffcad9df ; jmp 0x200006587e4
0x0000020000658768 : or eax, 0xffcada93 ; mov qword ptr [rcx + 8], rdx ; ret
0x0000020000633f7b : or eax, 0xffd0c1b8 ; call rax
0x00000200005e9876 : or eax, 0xffd1a1bd ; ret
0x00000200006245a6 : or eax, 0xffd1cadd ; add rsp, 0x28 ; ret
0x0000020000601f02 : or eax, 0xffd1fcf9 ; call 0x2000005e177
0x00000200006017ab : or eax, 0xffd23af8 ; call rax
0x00000200005fbefa : or eax, 0xffd28f2e ; ret
0x000002000056888d : or eax, 0xffd9a4d6 ; ret
0x0000020000569506 : or eax, 0xffdbe935 ; call 0x20000005727
0x00000200005f6ec0 : or eax, 0xffdc5b7b ; call 0x2000021e378
0x00000200005309c4 : or eax, 0xffdd0f8f ; call rax
0x000002000052d218 : or eax, 0xffdd50d7 ; call 0x200001518a8
0x00000200005695e6 : or eax, 0xffdd6b05 ; ret
0x000002000051db18 : or eax, 0xffde5359 ; add rsp, 0x28 ; ret
0x000002000050c202 : or eax, 0xffdefe39 ; xor edx, edx ; call 0x20000068459
0x0000020000526e67 : or eax, 0xffdf82bc ; ret
0x0000020000502116 : or eax, 0xffe0192d ; ret
0x00000200004c0313 : or eax, 0xffe62488 ; call 0x200000e8068
0x000002000045945c : or eax, 0xffec559f ; call 0x200000e5727
0x0000020000457c81 : or eax, 0xffec6cda ; call 0x2000007d088
0x00000200004573c4 : or eax, 0xffec7cb7 ; call 0x2000007d088
0x0000020000456a47 : or eax, 0xffec85d4 ; call 0x2000007d088
0x0000020000456292 : or eax, 0xffecb149 ; call 0x2000007d088
0x0000020000453a61 : or eax, 0xffecb61a ; call 0x2000007d088
0x0000020000456975 : or eax, 0xffecce82 ; ret
0x00000200004567e2 : or eax, 0xffece441 ; call 0x2000007d088
0x00000200004567a4 : or eax, 0xffece47f ; call 0x2000007d088
0x000002000044fa02 : or eax, 0xffed21f9 ; call 0x2000007d088
0x00000200003cddd5 : or eax, 0xfff352d6 ; ret
0x00000200003cc8bf : or eax, 0xfff3679c ; call 0x20000078b97
0x00000200003fba0f : or eax, 0xfff44724 ; call rax
0x00000200003dc0c2 : or eax, 0xfff48489 ; call 0x20000008824
0x00000200003cbd65 : or eax, 0xfff5883e ; mov esi, eax ; call 0x20000517f7d
0x0000020000440cee : or eax, 0xfff68c3d ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200007abab2 : or eax, 0xfffacc49 ; add rsp, 0x28 ; ret
0x00000200007b3aa1 : or eax, 0xfffad67e ; call 0x200003e2e1c
0x00000200003e79f6 : or eax, 0xfffd5045 ; call 0x200000087f0
0x00000200003e7a2c : or eax, 0xfffd55ef ; call 0x2000000e718
0x000002000001f34d : or eax, 0xfffe ; mov qword ptr [rcx], rax ; mov eax, edx ; ret
0x0000020000712a81 : or eax, 0xfffedf7a ; mov ebx, eax ; call 0x2000021ed7d
0x0000020000180d82 : or eax, 0xffffed0c ; ret 0x8349
0x0000020000140d7a : or eax, 0xffffffff ; add rsp, 0x30 ; pop rbx ; ret
0x000002000013d493 : or eax, 0xffffffff ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000144694 : or eax, 0xffffffff ; add rsp, 0x38 ; ret
0x00000200003f656a : or eax, 0xffffffff ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000009cb1 : or eax, 0xffffffff ; ret
0x00000200004aa7bc : or eax, 1 ; ret
0x00000200001e17a4 : or eax, 2 ; mov qword ptr [rcx], r8 ; ret
0x00000200005ef746 : or eax, 5 ; ret
0x0000020000152adc : or eax, 7 ; add r9, r8 ; jmp r9
0x00000200006cf1e1 : or eax, dword ptr [rax + 0x67651f9] ; add cl, 8 ; ret
0x00000200002232df : or eax, dword ptr [rax + rcx + 0x55] ; fsubp st(3) ; or dword ptr [rcx + 0x3b], eax ; ret 0x976
0x0000020000495e55 : or eax, dword ptr [rax] ; add al, ch ; ret
0x00000200004b3df9 : or eax, dword ptr [rax] ; add bl, ch ; ret 0x19b8
0x000002000078d768 : or eax, dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200007c2370 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000002000040dd40 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000524e61 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x20000148557
0x0000020000027501 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x200000274ce
0x0000020000678cc1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200006f33a1 : or eax, dword ptr [rax] ; add byte ptr [rbx + 0x3b582444], cl ; ret
0x0000020000405043 : or eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret
0x000002000040a28f : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x3f], cl ; call 0x1ffc273eeab
0x00000200000b3b9b : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; pop rax ; adc byte ptr [rax - 0x7f], cl ; ret
0x00000200004ffd6f : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200004392e0 : or eax, dword ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0x7401
0x0000020000003fc9 : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000036731 : or eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200000e8382 : or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000000c929 : or eax, dword ptr [rax] ; add rsp, 0x48 ; ret
0x000002000001a385 : or eax, dword ptr [rax] ; add rsp, 0x58 ; ret
0x00000200000855ef : or eax, dword ptr [rax] ; add rsp, 0x60 ; pop rbx ; ret
0x000002000068bf1e : or eax, dword ptr [rax] ; jne 0x2000068bf2b ; xor al, al ; ret
0x000002000000c65d : or eax, dword ptr [rax] ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003e0552 : or eax, dword ptr [rax] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f3b1e : or eax, dword ptr [rax] ; mov rax, rcx ; add rsp, 0x38 ; ret
0x0000020000538eb3 : or eax, dword ptr [rax] ; mov rdx, rdi ; mov rcx, rbx ; call qword ptr [rax]
0x00000200000f84da : or eax, dword ptr [rax] ; mov word ptr [r8], ax ; xor eax, eax ; ret
0x00000200000f556e : or eax, dword ptr [rax] ; movzx eax, word ptr [rip + 0x2b2a95] ; ret
0x000002000015b4d6 : or eax, dword ptr [rax] ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000015cf73 : or eax, dword ptr [rax] ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000eeb13 : or eax, dword ptr [rax] ; ret
0x00000200000edeb9 : or eax, dword ptr [rax] ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b81e2 : or eax, dword ptr [rbp + 3] ; ret
0x0000020000210954 : or eax, dword ptr [rbp - 0x75] ; retf ; mov r8d, edx ; jmp 0x20000210966
0x00000200005a8602 : or eax, dword ptr [rbp - 0x7b] ; in al, -0x75 ; ret
0x00000200004338eb : or eax, dword ptr [rbx + rcx*4 - 0xf] ; mov rcx, rdi ; call 0x2000002fb45
0x00000200007824bf : or eax, dword ptr [rbx - 0x7cb7073f] ; ret
0x000002000023ef7f : or eax, dword ptr [rcx + 0x3b] ; ret
0x0000020000244ffc : or eax, dword ptr [rcx + 0x3b] ; ret 0x1075
0x0000020000453955 : or eax, dword ptr [rcx + 0x738] ; ret
0x000002000069013f : or eax, dword ptr [rcx + 3] ; ret
0x00000200001433af : or eax, dword ptr [rcx - 0x49] ; add dword ptr [rbp - 0x75], eax ; mov r8d, edx ; jmp 0x200001433e1
0x000002000055d35c : or eax, dword ptr [rcx - 0x75] ; adc dword ptr [rbp - 0x3f7af02e], eax ; ret
0x00000200007ce48d : or eax, dword ptr [rcx - 0x75] ; mov byte ptr [rdx - 0x73], 0x14 ; sbb ebp, dword ptr [rbx] ; ret 0x341
0x0000020000107871 : or eax, dword ptr [rcx - 0x75] ; ret
0x0000020000245504 : or eax, dword ptr [rcx - 0x7d] ; ret
0x000002000023f4af : or eax, dword ptr [rcx - 0x7d] ; ret 0x75ff
0x00000200005d2208 : or eax, dword ptr [rcx - 0xa] ; ret 0xf04
0x00000200003c67a2 : or eax, dword ptr [rcx - 1] ; ret
0x00000200000f8aed : or eax, dword ptr es:[rax] ; ret
0x00000200001197d7 : or eax, eax ; mov qword ptr [rcx + 8], rax ; ret
0x000002000003b252 : or eax, eax ; mov qword ptr [rcx], rax ; ret
0x00000200004aa1fd : or eax, eax ; ret
0x000002000014ba20 : or eax, eax ; wrmsr ; ret
0x0000020000059c97 : or eax, ebp ; ret
0x000002000021014f : or eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000995bb : or eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013d0ad : or eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x000002000017ebd6 : or eax, ecx ; mov qword ptr [rbx + 0x28], rax ; jmp 0x2000004aee2
0x000002000011ed43 : or eax, ecx ; or rax, rcx ; ret
0x000002000011ed46 : or eax, ecx ; ret
0x0000020000221fdb : or eax, edx ; add rsp, 0x28 ; ret
0x00000200000841b9 : or eax, edx ; jmp 0x200000841ac
0x00000200001c8716 : or eax, edx ; jmp 0x200001c872a
0x00000200001c8716 : or eax, edx ; jmp 0x200001c872f
0x00000200001ee34e : or eax, edx ; jmp 0x200001ee362
0x0000020000622824 : or eax, edx ; jmp 0x20000622841
0x0000020000057462 : or eax, edx ; jne 0x20000057475 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c21d4 : or eax, edx ; mov qword ptr [r8], rax ; ret
0x00000200000c46a2 : or eax, edx ; mov qword ptr [r9 + 8], rax ; ret
0x0000020000150ea3 : or eax, edx ; pop rdi ; ret
0x0000020000065a03 : or eax, edx ; ret
0x000002000012fd20 : or eax, edx ; sub rax, r8 ; ret
0x0000020000058fb9 : or eax, esi ; btr dword ptr [rax + 0x78], 5 ; mov al, dl ; ret
0x00000200000fd686 : or eax, esi ; btr dword ptr [rdx], 0x14 ; mov byte ptr [rdx + 0x7c], al ; ret
0x000002000061b6c5 : or eax, esi ; cmpxchg qword ptr [rdx + 0x10], rcx ; jne 0x2000061b6c5 ; ret
0x0000020000139d03 : or eax, esi ; or dword ptr [rcx + 0x6c0], 0x10 ; ret
0x00000200004aa1fc : or eax, r8d ; ret
0x000002000014ba1f : or eax, r8d ; wrmsr ; ret
0x00000200001b1569 : or ebp, 0x28 ; jmp 0x200001b1599
0x000002000017eac1 : or ebp, dword ptr [rax - 0x166f000d] ; ret
0x00000200007ce598 : or ebp, dword ptr [rbx] ; ret 0x341
0x0000020000107878 : or ebp, dword ptr [rbx] ; ret 0xc703
0x00000200006538ef : or ebp, eax ; ret
0x00000200005f9004 : or ebp, eax ; ret 0xc0cf
0x00000200007c8744 : or ebp, eax ; ret 0xc654
0x0000020000613f87 : or ebp, eax ; xor dword ptr [rdx], 0xffffffad ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001869e1 : or ebp, ecx ; out dx, al ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200004055d1 : or ebp, ecx ; ret
0x00000200000a8823 : or ebx, 0xffffffff ; jmp 0x200000a8643
0x00000200005d90fd : or ebx, 4 ; mov dword ptr [rsp + 0x40], ebx ; jmp 0x200004c5409
0x00000200001886c7 : or ebx, 4 ; mov rcx, rsi ; call 0x200000148e8
0x0000020000668673 : or ebx, 8 ; call 0x200004bc055
0x00000200003dff69 : or ebx, dword ptr [rdx] ; add byte ptr [rbp + rcx*4 + 0x25], cl ; lea edx, dword ptr [rax] ; ret 0x48ff
0x0000020000457a81 : or ebx, eax ; add dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x000002000003a521 : or ebx, eax ; mov eax, 0xc0000225 ; ret
0x000002000051f30b : or ecx, 0xffffffff ; call 0x20000148496
0x000002000020b902 : or ecx, 0xffffffff ; cmp eax, 0xfd ; cmova eax, ecx ; ret
0x0000020000121c19 : or ecx, dword ptr [r8 + 0xa] ; jne 0x20000121c30 ; mov al, 1 ; ret
0x0000020000051320 : or ecx, dword ptr [rax + 0x2b] ; ret 0x3d48
0x0000020000721da7 : or ecx, dword ptr [rax + 0x3b] ; ret
0x000002000011cf86 : or ecx, dword ptr [rax + 0x3b] ; ret 0x974
0x0000020000248916 : or ecx, dword ptr [rax + 0x69] ; ret 0x2710
0x00000200001b9733 : or ecx, dword ptr [rax + 0x69] ; ret 0xdf3
0x0000020000121c1a : or ecx, dword ptr [rax + 0xa] ; jne 0x20000121c2f ; mov al, 1 ; ret
0x000002000019bfde : or ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7501
0x000002000067aabe : or ecx, dword ptr [rax - 0x75] ; add byte ptr [rbp - 0x75], cl ; ror dword ptr [rax + 0x3b], 1 ; ret 0xec75
0x00000200004df9c5 : or ecx, dword ptr [rax - 0x75] ; and al, 0x38 ; call rax
0x00000200004de0f3 : or ecx, dword ptr [rax - 0x75] ; and al, 0x40 ; call rax
0x00000200007037a9 : or ecx, dword ptr [rax - 0x75] ; enter -0x76b7, 0x43 ; adc dh, dh ; ret
0x000002000044acda : or ecx, dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200003c7417 : or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200003d0059 : or ecx, dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], cl ; ret
0x000002000006a960 : or ecx, dword ptr [rax - 0x77] ; add ebp, ecx ; ret 0xfff6
0x00000200006bb44d : or ecx, dword ptr [rax - 0x77] ; pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x000002000008cc1a : or ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000710d7c : or ecx, dword ptr [rax - 0x7d] ; ret 0x4828
0x000002000013d3f4 : or ecx, dword ptr [rax - 0x7d] ; ret 0x6602
0x0000020000651124 : or ecx, dword ptr [rax - 0x7d] ; ret 0xe838
0x0000020000125b89 : or ecx, dword ptr [rax - 1] ; ret
0x00000200001112f9 : or ecx, dword ptr [rax - 9] ; ret
0x0000020000042eee : or ecx, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001f1aea : or ecx, dword ptr [rbp - 0x75] ; ret 0x8149
0x0000020000036c6d : or ecx, dword ptr [rbx + 0x148d42c5] ; adc ebp, dword ptr [rbx] ; ret 0xc0ff
0x0000020000115269 : or ecx, dword ptr [rbx + 0x148d43c6] ; adc ebp, dword ptr [rbx] ; ret 0xc0ff
0x00000200007ce592 : or ecx, dword ptr [rbx + 0x148d43c6] ; or ebp, dword ptr [rbx] ; ret 0x341
0x0000020000558ddb : or ecx, dword ptr [rbx + 0x3480841] ; ret 0x3b48
0x000002000002cf06 : or ecx, dword ptr [rbx + 0x3484041] ; ret 0x3b48
0x00000200001fa864 : or ecx, dword ptr [rbx + 0x3484042] ; ret
0x000002000019601d : or ecx, dword ptr [rcx + 0x23] ; ret
0x0000020000129272 : or ecx, dword ptr [rcx + rcx*4 + 0x13] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001fd3f8 : or ecx, dword ptr [rcx - 0x75] ; ret
0x0000020000125474 : or ecx, dword ptr [rcx - 0x75] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x0000020000245522 : or ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200001411c2 : or ecx, dword ptr [rdi + rcx + 0x44] ; ror dword ptr [rcx - 0x75], cl ; ret 0x2ce9
0x00000200007131d9 : or ecx, dword ptr [rdi] ; add byte ptr [rax], al ; mov rbx, rax ; call rdi
0x00000200000f6a96 : or ecx, dword ptr [rdi] ; mov bh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000200001e33ca : or ecx, dword ptr [rdi] ; sbb dword ptr [rcx + 1], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006cfdef : or ecx, dword ptr [rdi] ; test dword ptr [rax], edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006cfe2f : or ecx, dword ptr [rdi] ; test edi, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000025ef7 : or ecx, eax ; mov qword ptr [rdx + 0x10], rcx ; pop rsi ; ret
0x0000020000098c78 : or ecx, ebp ; ret 0
0x00000200006262b4 : or ecx, ebp ; shr r9d, 1 ; call 0x20000052567
0x0000020000461847 : or ecx, ecx ; ret 0xfff
0x00000200004522d6 : or edi, dword ptr [rbx] ; enter -0x7df1, -0x37 ; ret 0x15
0x00000200006c6637 : or edi, dword ptr [rbx] ; ret
0x0000020000045946 : or edi, dword ptr [rcx + 0x13] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005daf72 : or edi, ebp ; push rdi ; ret
0x0000020000073a3b : or edi, ebx ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200005fa970 : or edi, edi ; mov eax, 0xc000000d ; ret
0x000002000005f08e : or edi, edi ; mov word ptr [rcx + 4], ax ; ret
0x000002000000b42c : or edi, edi ; ret
0x00000200001fd403 : or edi, edi ; ret 0x3b41
0x00000200006af330 : or edi, edi ; ret 0x6348
0x00000200005fa10a : or edi, edi ; ret 0x8349
0x000002000059e8c3 : or edi, edi ; ret 0x8b44
0x0000020000422712 : or edi, edi ; ret 0x9489
0x000002000041df76 : or edi, edi ; ret 0xc103
0x0000020000664866 : or edi, edi ; ret 0xfa83
0x000002000020bf07 : or edi, edi ; ret 0xff41
0x000002000021f556 : or edi, edi ; sar dword ptr [rbx], -0x36 ; jb 0x2000021f54c ; xor eax, eax ; ret
0x00000200000b4dea : or edx, 0x10 ; call 0x200000b52c9
0x00000200000533a8 : or edx, 0x500 ; mov qword ptr [r8], rdx ; ret
0x00000200005d6b69 : or edx, 0xb00000f ; ret 0xc883
0x0000020000560ddd : or edx, 0xffffff9d ; or dword ptr [rax], eax ; or eax, 0xffffffff ; ret
0x00000200007d647f : or edx, 0xffffffff ; call qword ptr [rax]
0x0000020000537c71 : or edx, dword ptr [rsp + rsi*4 - 1] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000026ff6 : or edx, eax ; mov dword ptr [rcx + 0x10], edx ; xor eax, eax ; ret
0x0000020000517561 : or edx, eax ; mov word ptr [rcx + 2], dx ; xor eax, eax ; ret
0x0000020000451fda : or edx, ebx ; mov qword ptr [rcx], rdx ; mov eax, r8d ; ret
0x0000020000701f9f : or edx, ecx ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000bdf12 : or edx, ecx ; cmp r8, rdx ; ja 0x200000bdf21 ; ret
0x00000200005b3b93 : or edx, edi ; dec dword ptr [rbp + rcx*4 + 0x15] ; ret
0x00000200005b3b8c : or edx, edi ; dec dword ptr [rbp + rcx*4 + 0xd] ; ret 0xd70b
0x0000020000517560 : or edx, r8d ; mov word ptr [rcx + 2], dx ; xor eax, eax ; ret
0x000002000015131b : or esi, dword ptr [rbp - 0x1d] ; mov rax, r10 ; pop rbx ; ret
0x0000020000116f2a : or esi, dword ptr [rbx] ; rol byte ptr [rcx + 0x69], cl ; ret 0xff
0x0000020000051068 : or esi, dword ptr [rdx + 6] ; shr rcx, 0xd ; and eax, ecx ; ret
0x000002000060841b : or esi, ebp ; or al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x000002000016dadb : or esi, ecx ; call qword ptr [rax - 0x12fe3d17]
0x000002000003880d : or esi, edi ; ret
0x0000020000529d03 : or esi, esi ; add al, byte ptr [r9] ; jne 0x20000529d16 ; xor eax, eax ; ret
0x00000200000a1f55 : or esi, esi ; ret
0x00000200001a26d9 : or esi, esi ; ret 0x7402
0x00000200000478de : or esi, esi ; ret 0x7404
0x00000200007243b4 : or esi, esi ; ret 0xf02
0x00000200000e235e : or esi, esi ; ret 0xf10
0x00000200001a26d8 : or esi, r14d ; ret 0x7402
0x00000200000bf6c5 : or esp, dword ptr [rax + rax] ; ret
0x0000020000509b81 : or esp, esp ; ret
0x00000200001b8ec8 : or qword ptr [r8], 0xffffffffffffffff ; mov eax, 0x80070216 ; ret
0x0000020000165622 : or qword ptr [r8], 0xffffffffffffffff ; mov eax, 0xc0000095 ; ret
0x000002000056946e : or qword ptr [r8], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003d6f0 : or qword ptr [r9 + 8], rdx ; ret
0x00000200005fa96e : or qword ptr [r9], 0xffffffffffffffff ; mov eax, 0xc000000d ; ret
0x000002000003d3f4 : or qword ptr [r9], rax ; mov byte ptr [rcx + 8], al ; ret
0x000002000056958e : or qword ptr [rax], rax ; ret
0x00000200005698aa : or qword ptr [rbx + 0x18], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000020c046 : or qword ptr [rcx + 0x10], 0xffffffffffffffff ; ret
0x000002000079fe22 : or qword ptr [rcx + 0x18], 0xffffffffffffffff ; ret
0x00000200001579c0 : or qword ptr [rcx + 8], 4 ; ret
0x0000020000057e54 : or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x000002000000b42a : or qword ptr [rcx], 0xffffffffffffffff ; ret
0x000002000061c586 : or r10b, byte ptr [rax] ; movups xmmword ptr [rax + rcx + 0x10], xmm0 ; ret
0x00000200001886c6 : or r11, 4 ; mov rcx, rsi ; call 0x200000148e9
0x000002000014746d : or r11b, al ; mov qword ptr [rcx], rax ; mov dword ptr [rcx + 6], eax ; ret
0x00000200004b33b4 : or r11b, bpl ; in al, dx ; mov eax, 0xc0000058 ; ret
0x00000200001d10e5 : or r11b, bpl ; or dword ptr [rcx - 0xa], eax ; ror byte ptr [rax], 0x8b ; ret
0x00000200003f0fd2 : or r11b, bpl ; ret
0x000002000065a21f : or r13b, byte ptr [r14 - 0x3b7cb701] ; pop rax ; ret
0x000002000064c5a6 : or r13b, r8b ; ret
0x00000200001473fc : or r14b, al ; mov qword ptr [rdx + rcx - 8], rax ; ret
0x0000020000607dcc : or r14b, r14b ; ret
0x000002000002ad87 : or r14b, sil ; ret 0x7401
0x000002000012d8ad : or r14b, sil ; ret 0x8d02
0x000002000007f5c5 : or r14b, sil ; ret 0xf1f
0x0000020000147401 : or r15b, al ; ret
0x00000200000263c4 : or r15b, dil ; ret
0x0000020000565b04 : or r15b, dil ; ret 0x8948
0x00000200005fbc40 : or r15b, dil ; ret 0x894c
0x0000020000545c45 : or r15b, dil ; ret 0x8b48
0x00000200004373f0 : or r15b, dil ; rol byte ptr [rcx - 0x77], 0x41 ; add al, 0xe8 ; ret
0x00000200001e17a3 : or r8, 2 ; mov qword ptr [rcx], r8 ; ret
0x00000200005af7c8 : or r8b, bpl ; adc dword ptr [rsi - 0x166f004c], edi ; ret 0xea51
0x000002000060ed20 : or r8b, bpl ; cmp dword ptr [rax + rax], edx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005218c9 : or r8b, bpl ; jo 0x2000052192f ; ret
0x0000020000656fde : or r8b, bpl ; ret
0x00000200004ba923 : or r8b, r13b ; jbe 0x200004ba901 ; ret 0x41ff
0x000002000000abce : or r8b, r13b ; ret
0x00000200005c2081 : or r8b, r13b ; sbb byte ptr [rbp - 0x4e], bl ; call qword ptr [rax - 0x15833d17]
0x0000020000622823 : or r8d, edx ; jmp 0x20000622842
0x00000200005f1af7 : or r9b, bpl ; ret 0xf571
0x00000200000d2b35 : or r9b, byte ptr [rax] ; cmp ax, word ptr [r8] ; jb 0x200000d2b29 ; ret
0x00000200006262b3 : or r9d, r13d ; shr r9d, 1 ; call 0x20000052568
0x0000020000050f7b : or rax, 0x20 ; mov qword ptr [rcx], rax ; ret
0x000002000013d492 : or rax, 0xffffffffffffffff ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000207ece : or rax, 0xffffffffffffffff ; ret
0x0000020000453954 : or rax, qword ptr [rcx + 0x738] ; ret
0x00000200001197d6 : or rax, r8 ; mov qword ptr [rcx + 8], rax ; ret
0x000002000003b251 : or rax, r8 ; mov qword ptr [rcx], rax ; ret
0x000002000011ed42 : or rax, r9 ; or rax, rcx ; ret
0x000002000021014e : or rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000995ba : or rax, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000017ebd5 : or rax, rcx ; mov qword ptr [rbx + 0x28], rax ; jmp 0x2000004aee3
0x000002000011ed45 : or rax, rcx ; ret
0x0000020000221fda : or rax, rdx ; add rsp, 0x28 ; ret
0x00000200001c8715 : or rax, rdx ; jmp 0x200001c872b
0x00000200001c8715 : or rax, rdx ; jmp 0x200001c8730
0x00000200001ee34d : or rax, rdx ; jmp 0x200001ee363
0x00000200001c21d3 : or rax, rdx ; mov qword ptr [r8], rax ; ret
0x00000200000c46a1 : or rax, rdx ; mov qword ptr [r9 + 8], rax ; ret
0x0000020000150ea2 : or rax, rdx ; pop rdi ; ret
0x0000020000065a02 : or rax, rdx ; ret
0x000002000012fd1f : or rax, rdx ; sub rax, r8 ; ret
0x000002000051f30a : or rcx, 0xffffffffffffffff ; call 0x20000148497
0x0000020000025ef6 : or rcx, rax ; mov qword ptr [rdx + 0x10], rcx ; pop rsi ; ret
0x0000020000451fd9 : or rdx, r11 ; mov qword ptr [rcx], rdx ; mov eax, r8d ; ret
0x00000200000bdf11 : or rdx, rcx ; cmp r8, rdx ; ja 0x200000bdf22 ; ret
0x0000020000121c1b : or sil, byte ptr [rbp + 9] ; mov al, 1 ; ret
0x0000020000095ccf : or word ptr [rax], ax ; add rcx, rdx ; jmp rcx
0x000002000003302c : or word ptr [rcx + 0xa], r8w ; mov eax, edx ; ret
0x000002000001bba5 : or word ptr [rdx + 0x16], r8w ; ret
0x000002000002cb3d : out -0x10, eax ; xadd qword ptr [r10 + 0x20], rax ; ret
0x000002000042fb16 : out -0x15, eax ; ret 0xcccc
0x0000020000687e81 : out -0x15, eax ; sbb byte ptr [rbp - 0x75], al ; ret
0x00000200005e9f3f : out -0x18, eax ; fcmovnu st(0), st(2) ; ret 0x8bff
0x00000200001a7839 : out -0x1a, eax ; dec dword ptr [rbp - 0x75] ; ret 0x8b48
0x000002000068fa14 : out -0x1f, eax ; dec dword ptr [rbx + 0x78c085d8] ; ret 0xa2e8
0x00000200006d37e1 : out -0x2a, eax ; in al, -1 ; add rsp, 0x38 ; ret
0x000002000043daa4 : out -0x3f, eax ; dec dword ptr [rax - 0x75] ; iretd ; call 0x2000006d289
0x00000200007cbf85 : out -0x40, eax ; xchg eax, edi ; call qword ptr [rax - 0x13d2917]
0x0000020000461be5 : out -0x43, eax ; ret
0x000002000069fa6b : out -0x46, eax ; or eax, 0x8bc00000 ; ret 0x8b48
0x000002000009883f : out -0x48, eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000556318 : out -0x48, eax ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200000b6e95 : out -0x48, eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000035dc : out -0x50, eax ; add ebx, eax ; mov eax, dword ptr [rcx + 0x2c] ; ret
0x00000200006598f1 : out -0x58, eax ; dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x85 ; ret
0x0000020000460045 : out -0x5a, eax ; ret
0x000002000054dbe5 : out -0x5c, eax ; mov edi, 0xc48348ff ; pop rax ; ret
0x0000020000208fb2 : out -0x75, eax ; ret 0x6948
0x00000200006cbf58 : out -0x75, eax ; ret 0x8948
0x00000200001d8c73 : out -0x75, eax ; ret 0x8b44
0x0000020000558718 : out -0x76, eax ; ret
0x0000020000450800 : out -0x77, eax ; xchg dword ptr [r8 - 0x75], r9d ; ret
0x00000200006cd394 : out -0x7c, eax ; fstp xword ptr [rcx + 0x14] ; jmp 0x200006cd3ad
0x00000200006cd420 : out -0x7c, eax ; fstp xword ptr [rcx + 0x31] ; jmp 0x200006cd439
0x000002000077a141 : out -0x7d, eax ; ret
0x0000020000181173 : out -0xa, eax ; jmp 0x2000005259c
0x00000200006cbfd0 : out -0xa, eax ; ret
0x000002000062da2a : out -0xd, eax ; jmp qword ptr [rcx]
0x000002000051b671 : out -0xd, eax ; movq qword ptr [rbp + 0x27], mm0 ; call 0x200001480d9
0x00000200001fede3 : out -1, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ba3f2 : out -1, eax ; add rsp, 0x38 ; ret
0x00000200001f0ed6 : out -1, eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005669ef : out -1, eax ; add rsp, 0x48 ; ret
0x00000200001fbc4e : out -1, eax ; add rsp, 0x58 ; ret
0x000002000059252c : out -1, eax ; mov al, 1 ; ret
0x000002000020270e : out -1, eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000020bd5d : out -1, eax ; mov rcx, rbx ; call 0x200000e8067
0x00000200006d017d : out -1, eax ; ret
0x00000200006d03d5 : out -1, eax ; ret 0x5589
0x00000200001caf69 : out -1, eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000590d10 : out -1, eax ; xor edx, edx ; call 0x2000024d006
0x00000200007d2a6c : out -2, eax ; dec dword ptr [rbp - 0x4617a5b6] ; ret 0xff83
0x00000200007d2a85 : out -2, eax ; dec dword ptr [rbp - 0x5f17a5b6] ; ret 0xff83
0x00000200006b7d15 : out -4, eax ; ret
0x00000200004bc0c7 : out -8, eax ; mov rcx, rdi ; call 0x200000e7218
0x000002000043ee92 : out 0, eax ; add al, al ; ret
0x00000200007af701 : out 0, eax ; add byte ptr [rbx + 0xd8d48d6], cl ; ret
0x00000200004b664f : out 0x11, eax ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000079686 : out 0x15, al ; or al, 0 ; add rsp, 0x48 ; ret
0x000002000044f027 : out 0x15, eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200007cd196 : out 0x1a, al ; ret
0x0000020000795306 : out 0x1d, al ; ret
0x00000200006d5b55 : out 0x1f, eax ; ret 0x48ff
0x00000200007863ce : out 0x22, al ; ret 0x48ff
0x00000200000ce678 : out 0x23, al ; add byte ptr [rax + 3], cl ; ret
0x00000200007bcc6d : out 0x24, eax ; mov dh, 0xff ; add rsp, 0x20 ; pop rdi ; ret
0x000002000014491f : out 0x30, eax ; ret 0x3b88
0x000002000000e0d6 : out 0x32, al ; add byte ptr [rbx], al ; ret
0x00000200006849b5 : out 0x33, eax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; push rsi ; ret
0x000002000019bf1a : out 0x34, al ; dec dword ptr [rax - 0x75] ; ret
0x0000020000524e66 : out 0x36, al ; ret 0x8bff
0x00000200006f5e25 : out 0x36, eax ; ret 0x3bff
0x000002000014435f : out 0x38, eax ; pop rbp ; ret
0x00000200005ee5fb : out 0x41, eax ; mov cl, ah ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200000480e5 : out 0x45, eax ; add al, byte ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000724f6a : out 0x48, al ; add esp, 0x20 ; pop rbx ; ret
0x00000200007ab53f : out 0x48, al ; add esp, 0x30 ; pop rbx ; ret
0x000002000013b5dd : out 0x48, al ; mov eax, ecx ; ret
0x000002000013aec9 : out 0x48, al ; mov eax, edx ; add rsp, 0x38 ; ret
0x00000200000bd66f : out 0x48, eax ; add esp, 0x20 ; pop rbx ; ret
0x00000200006ae26c : out 0x48, eax ; add esp, 0x28 ; ret
0x00000200000313da : out 0x48, eax ; mov dword ptr [rsp + 0x20], eax ; call qword ptr [rbx]
0x000002000050a807 : out 0x48, eax ; mov eax, ecx ; ret
0x000002000052563e : out 0x48, eax ; mov ecx, edi ; call 0x200001497f7
0x0000020000516870 : out 0x49, eax ; mov edx, esp ; call 0x2000013bb7b
0x0000020000618c55 : out 0x4d, eax ; ret
0x000002000011f8a6 : out 0x58, al ; cmc ; dec dword ptr [rax - 0x75] ; ret
0x0000020000429f95 : out 0x5a, eax ; ret
0x00000200006cce8d : out 0x6c, eax ; ret 0x48ff
0x00000200004c0226 : out 0x6f, al ; ret 0xe9ff
0x000002000004442e : out 0x79, al ; sub eax, dword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x00000200006f33d6 : out 0x85, al ; ret 0xebff
0x00000200006d00ea : out 0x8b, al ; ret
0x0000020000437bd6 : out 0xa1, al ; ret 0xf7ff
0x00000200001beb66 : out 0xac, al ; adc eax, dword ptr [rax] ; call rax
0x000002000015b4d5 : out 0xb, eax ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x00000200005437a9 : out 0xb1, al ; dec dword ptr [rax - 0x75] ; je 0x200005437dd ; jo 0x20000543746 ; ret
0x0000020000464d7a : out 0xbe, al ; dec dword ptr [rax + 0x23] ; ret
0x00000200000d3856 : out 0xc, eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe906
0x00000200004b8d56 : out 0xc5, al ; ret 0x8bff
0x000002000063def6 : out 0xca, al ; ret
0x0000020000594355 : out 0xe7, al ; push rdi ; ret
0x000002000013cde9 : out 0xeb, al ; or al, 0x49 ; mov eax, ebx ; ret
0x000002000017facf : out 0xec, al ; dec dword ptr [rax - 0x75] ; ret 0x64e9
0x00000200001a783a : out 0xf3, al ; dec dword ptr [rbp - 0x75] ; ret 0x8b48
0x000002000060bd4e : out 0xf5, al ; inc dword ptr [rbx] ; ret
0x000002000042dd0c : out 0xfc, al ; call 0x200000564a5
0x00000200001dc238 : out 0xff, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001dc1bf : out 0xff, al ; add rsp, 0x28 ; ret
0x0000020000203f1d : out 0xff, al ; add rsp, 0x38 ; ret
0x00000200001e25ba : out 0xff, al ; add rsp, 0x48 ; ret
0x000002000068a9ac : out 0xff, al ; add rsp, 0x68 ; ret
0x00000200004c0316 : out 0xff, al ; call 0x200000e8065
0x00000200005fadc5 : out 0xff, al ; lea rcx, qword ptr [rbx + 0x28] ; call 0x20000467020
0x0000020000212998 : out 0xff, al ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000587af5 : out 0xff, al ; mov ebx, 0xc000000d ; jmp 0x200003f3d4a
0x0000020000587ae4 : out 0xff, al ; mov ebx, 0xc00000e5 ; jmp 0x200003f3d4a
0x0000020000587aee : out 0xff, al ; mov ebx, ecx ; jmp 0x200003f3d47
0x000002000020b956 : out 0xff, al ; mov rax, qword ptr [rcx + 0x5e0] ; ret
0x0000020000587adb : out 0xff, al ; mov rdx, qword ptr [rbp - 0x20] ; jmp 0x200003f3cf8
0x00000200004b4988 : out 0xff, al ; mov rdx, rsi ; call 0x200000d9f78
0x00000200006067ac : out 0xff, al ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006e64f3 : out 0xff, al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001af61b : out 1, al ; add byte ptr [rax], al ; jmp 0x200001af5e9
0x000002000001d4fc : out 1, al ; add byte ptr [rax], al ; ret
0x0000020000616cfd : out 3, eax ; idiv edi ; ret
0x00000200005594b6 : out 9, eax ; add al, ch ; ret 0xfa43
0x00000200004b845a : out dx, al ; adc dword ptr [rax - 9], ecx ; ret
0x000002000079431f : out dx, al ; add al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x58 ; ret
0x00000200004500dc : out dx, al ; add bh, bh ; ret
0x0000020000149c65 : out dx, al ; add byte ptr [rax], al ; add cl, ch ; rol bl, cl ; add byte ptr [rax], al ; ret
0x00000200004ae4ea : out dx, al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000130da0 : out dx, al ; add eax, -1 ; jne 0x20000130d9d ; ret
0x0000020000079d94 : out dx, al ; add eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000c322 : out dx, al ; add eax, edx ; jmp 0x2000000c2ff
0x000002000005efaa : out dx, al ; add ebp, ebx ; ret 0x8b48
0x0000020000629719 : out dx, al ; add esi, dword ptr [rbx] ; jmp qword ptr [rcx]
0x0000020000004bc7 : out dx, al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003e115 : out dx, al ; and byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200003dbd22 : out dx, al ; and byte ptr [rcx], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000003b82d : out dx, al ; and dword ptr [rbx + 0xc], 0 ; mov eax, edx ; jmp 0x2000003b822
0x00000200004a0525 : out dx, al ; call qword ptr [rdx]
0x00000200004a6e7a : out dx, al ; cdq ; jmp 0x1ffc2df7e86
0x000002000001e20e : out dx, al ; cmp dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200005d7076 : out dx, al ; dec dword ptr [rax - 0x75] ; iretd ; call rax
0x00000200001869e5 : out dx, al ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200001887c0 : out dx, al ; dec dword ptr [rax - 0x75] ; ret 0xf48
0x000002000051bd66 : out dx, al ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005d58bb : out dx, al ; dec dword ptr [rax - 9] ; ret
0x00000200005d75b2 : out dx, al ; dec dword ptr [rbp + 0x3b] ; ret
0x000002000018992c : out dx, al ; dec dword ptr [rbx - 0x779fdbbc] ; add ch, cl ; ret 0xeeaf
0x0000020000189c26 : out dx, al ; dec dword ptr [rcx + 0x3b] ; ret 0x850f
0x00000200004397f5 : out dx, al ; dec dword ptr [rcx - 0x117434c3] ; push rsi ; ret
0x0000020000187769 : out dx, al ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000186ad9 : out dx, al ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000018880a : out dx, al ; dec dword ptr [rcx - 0x75] ; sbb byte ptr [rbp - 0x75], cl ; ret 0x4ba
0x00000200001887f2 : out dx, al ; dec dword ptr [rcx - 0x7f] ; ret
0x0000020000187c23 : out dx, al ; dec esp ; mov qword ptr [r8], r11 ; mov qword ptr [r9], r11 ; ret
0x00000200004ae1b1 : out dx, al ; fcos ; add rsp, 0x28 ; ret
0x00000200001cbd96 : out dx, al ; idiv bh ; add rsp, 0x58 ; ret
0x000002000016d54a : out dx, al ; in al, dx ; inc dword ptr [rcx - 0xa] ; ret 0xf04
0x000002000016d554 : out dx, al ; in al, dx ; push rsi ; ret 0x7402
0x0000020000188795 : out dx, al ; inc dword ptr [rbp - 0x75] ; ret
0x000002000043e8b4 : out dx, al ; inc dword ptr [rcx] ; xor eax, eax ; ret
0x00000200006a50ee : out dx, al ; jb 0x200006a50bc ; inc dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000001f9d9 : out dx, al ; mov al, 1 ; ret
0x00000200001d5564 : out dx, al ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x0000020000525f31 : out dx, al ; mov byte ptr [rdx + 8], 0 ; mov rax, rdx ; ret
0x0000020000440326 : out dx, al ; mov eax, 0xc000007b ; ret
0x0000020000018f8d : out dx, al ; mov edi, 0x8b410014 ; ret 0xc12b
0x0000020000784e84 : out dx, al ; mov rax, rdx ; jmp 0x20000784e8f
0x000002000078510d : out dx, al ; mov rax, rdx ; jmp 0x20000785118
0x00000200002117f6 : out dx, al ; mov word ptr [rdx], cx ; add qword ptr [r8], 2 ; ret
0x0000020000037494 : out dx, al ; or al, 0x8b ; ret
0x000002000060841c : out dx, al ; or al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x00000200001e2a99 : out dx, al ; or byte ptr [rax - 0x3f], cl ; call 0x1ffc34973b6
0x00000200004bb17e : out dx, al ; popfq ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200005a0d5d : out dx, al ; push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000024d009
0x0000020000409a2f : out dx, al ; push qword ptr [rsi + rax + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x00000200004397fb : out dx, al ; push rsi ; ret
0x000002000015e779 : out dx, al ; push rsi ; ret 0x7403
0x000002000018876e : out dx, al ; push rsi ; ret 0x741e
0x000002000015e66a : out dx, al ; push rsi ; ret 0x7503
0x00000200001875c5 : out dx, al ; push rsi ; ret 0xf08
0x0000020000105e7a : out dx, al ; ret
0x00000200001fc4b2 : out dx, al ; ret 0x12
0x000002000013918e : out dx, al ; ret 0x1e
0x00000200004baaca : out dx, al ; ret 0x84ff
0x00000200003d480f : out dx, al ; ret 0x85ff
0x00000200000d694c : out dx, al ; ret 0xc
0x00000200004baaec : out dx, al ; ret 0xebff
0x00000200005d8d0f : out dx, al ; ret 0xffee
0x0000020000176282 : out dx, al ; ret 0xfff9
0x0000020000059e18 : out dx, al ; sbb al, 0xeb ; ret
0x00000200007b7a6b : out dx, al ; shl edx, 0x18 ; or eax, edx ; ret
0x000002000052c025 : out dx, al ; sub al, ch ; adc al, 0xb5 ; ret 0x8bff
0x0000020000075189 : out dx, al ; sub rax, r8 ; ret
0x000002000007709f : out dx, al ; xor al, al ; ret
0x000002000020d6a3 : out dx, al ; xor eax, eax ; add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x00000200001f8aba : out dx, al ; xor eax, eax ; cmp ecx, 0x1e ; setb al ; ret
0x00000200001cf937 : out dx, al ; xor ebx, ebx ; mov r8d, ebp ; call 0x2000013bb7c
0x00000200001cfbb9 : out dx, eax ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000200004b4762 : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2a], al ; ret 0x388
0x0000020000149c85 : out dx, eax ; add byte ptr [rax], al ; add cl, ch ; mov dl, 0xc3 ; add byte ptr [rax], al ; ret
0x0000020000449176 : out dx, eax ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000f73bb : out dx, eax ; add byte ptr [rax], al ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x000002000078c993 : out dx, eax ; add eax, 0x6b03eac1 ; ret 0x2b1a
0x0000020000145e96 : out dx, eax ; add ecx, dword ptr [rax - 0x75] ; add dword ptr [rcx - 0x7d], eax ; ret
0x000002000061b265 : out dx, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001473f0 : out dx, eax ; and edx, 0xf ; jne 0x200001473fd ; ret
0x0000020000232104 : out dx, eax ; call 0x1ffc3923075
0x00000200006a34cd : out dx, eax ; call 0x1ffc3f63473
0x0000020000513ea5 : out dx, eax ; call 0x2000013ba74
0x0000020000513ea4 : out dx, eax ; call 0x2000013ba75
0x0000020000525b3f : out dx, eax ; call 0x20000148074
0x0000020000525b3e : out dx, eax ; call 0x20000148075
0x000002000051da32 : out dx, eax ; call 0x200001484f4
0x000002000051da31 : out dx, eax ; call 0x200001484f5
0x0000020000510a2c : out dx, eax ; call r12
0x000002000013d1c2 : out dx, eax ; cmp ax, dx ; jne 0x2000013d1d5 ; mov rax, rcx ; ret
0x000002000018d2ae : out dx, eax ; dec dword ptr [rax + 0x3b] ; ret 0x860f
0x00000200001def04 : out dx, eax ; dec dword ptr [rax + 3] ; ret
0x0000020000138c08 : out dx, eax ; dec dword ptr [rax - 0x73] ; sub byte ptr [r8 - 0x7d], r9b ; ret
0x00000200005de156 : out dx, eax ; dec dword ptr [rax - 0x75] ; iretd ; call 0x2000065a39b
0x00000200005de283 : out dx, eax ; dec dword ptr [rax - 0x75] ; iretd ; call 0x2000065a547
0x00000200001cce94 : out dx, eax ; dec dword ptr [rax - 0x75] ; ret
0x000002000018cf14 : out dx, eax ; dec dword ptr [rax - 0x7d] ; ret 0x830c
0x000002000018e0af : out dx, eax ; dec dword ptr [rbp - 0x75] ; ret 0xd1e9
0x00000200001f45fb : out dx, eax ; dec dword ptr [rbx - 0x74bba3a9] ; ret 0xc141
0x00000200005dbce0 : out dx, eax ; dec dword ptr [rdi] ; mov dh, 0x5d ; add esi, esi ; ret
0x000002000018b171 : out dx, eax ; dec dword ptr [rdx] ; ret 0x4588
0x000002000055ae29 : out dx, eax ; hlt ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004f809f : out dx, eax ; idiv bh ; jmp 0x200004f806b
0x00000200003cb9ea : out dx, eax ; imul esi, ebx, 0x3d8840ff ; ret
0x000002000018c5e3 : out dx, eax ; inc dword ptr [rcx - 0x75] ; ret
0x00000200005de18b : out dx, eax ; inc dword ptr [rcx - 0x7d] ; ret 0xc7f0
0x000002000018cf21 : out dx, eax ; inc dword ptr [rcx - 1] ; ret 0x8348
0x000002000005258f : out dx, eax ; jmp 0x1ffff8825ac
0x00000200005dd684 : out dx, eax ; jmp qword ptr [rsi - 0x7d]
0x000002000046227d : out dx, eax ; jne 0x200004622ff ; mov ecx, r15d ; call 0x2000008e15d
0x00000200007ab5e6 : out dx, eax ; jp 0x200007ab5a5 ; inc dword ptr [rsi] ; call 0x20000157887
0x000002000051a922 : out dx, eax ; lea rcx, qword ptr [rsp + 0x30] ; call 0x20000526bf4
0x000002000070a83a : out dx, eax ; lodsb al, byte ptr [rsi] ; je 0x2000070a849 ; xor ecx, ecx ; mov rax, rcx ; ret
0x00000200001d24e3 : out dx, eax ; mov al, 1 ; ret
0x000002000061b232 : out dx, eax ; mov al, r8b ; ret
0x000002000055ef47 : out dx, eax ; mov bl, 9 ; add byte ptr [rcx - 1], al ; ret 0x8349
0x000002000001d55f : out dx, eax ; mov eax, 0xc0000001 ; ret
0x0000020000211778 : out dx, eax ; mov eax, edx ; ret
0x00000200006ab5ff : out dx, eax ; mov r8d, r14d ; xor edx, edx ; call 0x20000157888
0x00000200006ab5fe : out dx, eax ; mov r8d, r14d ; xor edx, edx ; call 0x20000157889
0x000002000013d18f : out dx, eax ; mov rax, rcx ; ret
0x0000020000781598 : out dx, eax ; mov rax, rdx ; jmp 0x200007815a3
0x00000200007831e4 : out dx, eax ; mov rax, rdx ; jmp 0x200007831f8
0x0000020000222713 : out dx, eax ; mov rcx, rbx ; call 0x200000be966
0x00000200001d10bd : out dx, eax ; nop ; and byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000753d0 : out dx, eax ; or al, byte ptr [rbx + rax + 0x3d] ; ret
0x000002000004af72 : out dx, eax ; or byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200001884ff : out dx, eax ; or dword ptr [rax - 0x75], ecx ; ret
0x00000200004a672d : out dx, eax ; out dx, eax ; ret
0x00000200005daf73 : out dx, eax ; push rdi ; ret
0x00000200001ead0d : out dx, eax ; rcr byte ptr [rbx], cl ; add bh, bh ; ret
0x00000200004a0f0d : out dx, eax ; rcr dl, 0xff ; add rsp, 0x28 ; ret
0x0000020000010cf6 : out dx, eax ; ret
0x00000200000d685d : out dx, eax ; ret 0x24
0x00000200004b8e9c : out dx, eax ; ret 0x90ff
0x0000020000419b8f : out dx, eax ; ret 0xf66
0x00000200003dcfe5 : out dx, eax ; ret 0xfffc
0x00000200001da283 : out dx, eax ; sbb al, 0 ; mov dword ptr [rcx + 0x298], edx ; ret
0x00000200006c5395 : out dx, eax ; sbb al, 0x83 ; call qword ptr [rax]
0x000002000023212b : out dx, eax ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000020000232571 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000020000075c26 : out dx, eax ; sub al, byte ptr [rax] ; dec byte ptr [rax - 0x75] ; ret
0x000002000016560f : out dx, eax ; sub r9, 1 ; jne 0x20000165601 ; ret
0x0000020000604897 : out dx, eax ; xor al, al ; ret
0x0000020000716d2f : out dx, eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000088a96 : out dx, eax ; xor eax, eax ; ret
0x00000200001df385 : outsb dx, byte ptr [rsi] ; adc dh, dh ; ret
0x000002000046b4d6 : outsb dx, byte ptr [rsi] ; adc eax, 0x4eb6e800 ; ret 0xfff
0x00000200003d03af : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000008e5c6 : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003d02b2 : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000e83c0 : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8348
0x000002000001b242 : outsb dx, byte ptr [rsi] ; add al, byte ptr [rbp - 0x73] ; add word ptr [rcx + 0x3b], cx ; ret 0x6474
0x0000020000148c65 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add cl, ch ; rcl bl, cl ; add byte ptr [rax], al ; ret
0x00000200003d03e3 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000200005bbb38 : outsb dx, byte ptr [rsi] ; add byte ptr [rcx - 0x7b], al ; ret
0x0000020000048f01 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000662ef : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200002161e5 : outsb dx, byte ptr [rsi] ; add eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200004bb6e4 : outsb dx, byte ptr [rsi] ; call 0x200000e7e74
0x00000200004bb6e3 : outsb dx, byte ptr [rsi] ; call 0x200000e7e75
0x0000020000792613 : outsb dx, byte ptr [rsi] ; cdq ; inc dword ptr [rbp - 0x75ec8740] ; ret
0x00000200007c3d06 : outsb dx, byte ptr [rsi] ; enter -0x49, -0x75 ; push rcx ; xor al, 0xf6 ; ret 0x7401
0x0000020000198858 : outsb dx, byte ptr [rsi] ; jg 0x20000198851 ; push rsi ; ret 0x741e
0x000002000045177c : outsb dx, byte ptr [rsi] ; jo 0x200004517dd ; call 0x2000024da45
0x0000020000550d61 : outsb dx, byte ptr [rsi] ; jo 0x20000550dc6 ; mov rcx, rbx ; call 0x2000024d008
0x00000200007c56b6 : outsb dx, byte ptr [rsi] ; lahf ; std ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000648807 : outsb dx, byte ptr [rsi] ; mov rcx, qword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x00000200004bb754 : outsb dx, byte ptr [rsi] ; mov rcx, r14 ; call 0x200000e7f67
0x00000200004bb753 : outsb dx, byte ptr [rsi] ; mov rcx, r14 ; call 0x200000e7f68
0x00000200004bb619 : outsb dx, byte ptr [rsi] ; mov rcx, rbp ; call 0x200000e7e77
0x00000200004bb618 : outsb dx, byte ptr [rsi] ; mov rcx, rbp ; call 0x200000e7e78
0x00000200004bb77a : outsb dx, byte ptr [rsi] ; mov rcx, rdi ; call 0x200000e7e77
0x00000200004bb779 : outsb dx, byte ptr [rsi] ; mov rcx, rdi ; call 0x200000e7e78
0x000002000016d553 : outsb dx, byte ptr [rsi] ; out dx, al ; in al, dx ; push rsi ; ret 0x7402
0x00000200006ee111 : outsb dx, byte ptr [rsi] ; push rsp ; ret
0x000002000016deab : outsb dx, byte ptr [rsi] ; ret
0x00000200004385dd : outsb dx, byte ptr [rsi] ; ret 0x33ff
0x0000020000513df6 : outsb dx, byte ptr [rsi] ; ret 0x48ff
0x000002000063a1f3 : outsb dx, byte ptr [rsi] ; ret 0xb841
0x00000200006f3b82 : outsb dx, byte ptr [rsi] ; ret 0xb8ff
0x000002000047991e : outsb dx, byte ptr [rsi] ; ret 0xf0ff
0x0000020000727ae6 : outsb dx, byte ptr [rsi] ; ret 0xffbc
0x00000200005a69c6 : outsb dx, byte ptr [rsi] ; ret 0xffe7
0x00000200005fe59e : outsb dx, byte ptr [rsi] ; ret 0xffe9
0x00000200001c0202 : outsb dx, byte ptr [rsi] ; ret 0xffff
0x0000020000152a28 : outsb dx, byte ptr [rsi] ; sbb al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000020000173d5e : outsb dx, byte ptr [rsi] ; stc ; dec dword ptr [rcx + 3] ; ret 0xc148
0x00000200004b8260 : outsb dx, byte ptr [rsi] ; sub byte ptr [rax - 0x75], cl ; ret
0x000002000047491e : outsb dx, byte ptr [rsi] ; xchg eax, edi ; ret 0xf0ff
0x00000200004c60dd : outsb dx, byte ptr [rsi] ; xor edx, dword ptr [rcx] ; add byte ptr [rcx - 0x75], cl ; ret 0x49f0
0x00000200006ee110 : outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x00000200004315e8 : outsb dx, byte ptr fs:[rsi] ; ret
0x0000020000231a24 : outsd dx, dword ptr [rsi] ; adc byte ptr [r14 + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000002000024e014 : outsd dx, dword ptr [rsi] ; adc eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret
0x00000200003d03c1 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x0000020000089f7a : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003d02c4 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000148c85 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add cl, ch ; mov dl, 0xd3 ; add byte ptr [rax], al ; ret
0x00000200003d02db : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000200007157a5 : outsd dx, dword ptr [rsi] ; add byte ptr [rcx - 0x43], al ; add eax, 0xf6000010 ; ret 0x7508
0x00000200000e3d48 : outsd dx, dword ptr [rsi] ; add dword ptr [rax - 0x7f], ecx ; jmp qword ptr [rax]
0x000002000013ec98 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbx], ch ; ret
0x000002000014ac85 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xb3 ; add byte ptr [rax], al ; ret
0x00000200000fe8bb : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add cl, ch ; ret 0
0x000002000013a2d7 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200006288a2 : outsd dx, dword ptr [rsi] ; and byte ptr [rax], ah ; lea ecx, dword ptr [rdx - 8] ; call 0x2000024da49
0x00000200001b2539 : outsd dx, dword ptr [rsi] ; clc ; push rsi ; ret 0x7403
0x00000200004e1f6d : outsd dx, dword ptr [rsi] ; cld ; ret
0x0000020000231b92 : outsd dx, dword ptr [rsi] ; fiadd dword ptr [rbp + 0xf] ; cmp bl, cl ; ret 0xf66
0x0000020000134873 : outsd dx, dword ptr [rsi] ; inc dword ptr [rcx - 0x76] ; or cl, byte ptr [rcx - 1] ; ret 0x8b41
0x0000020000627b3e : outsd dx, dword ptr [rsi] ; insd dword ptr [rdi], dx ; call 0x2000024da46
0x0000020000627b3d : outsd dx, dword ptr [rsi] ; insd dword ptr [rdi], dx ; call 0x2000024da47
0x00000200007d0e49 : outsd dx, dword ptr [rsi] ; insd dword ptr [rdi], dx ; ret 0x8bff
0x00000200007bb345 : outsd dx, dword ptr [rsi] ; lahf ; mov dh, 0xff ; add rsp, 0x28 ; ret
0x0000020000437e4d : outsd dx, dword ptr [rsi] ; lahf ; ret 0x41ff
0x000002000055dff0 : outsd dx, dword ptr [rsi] ; mov cl, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f5aad : outsd dx, dword ptr [rsi] ; mov dl, 0xfa ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200001bed27 : outsd dx, dword ptr [rsi] ; mov rax, qword ptr [rip + 0x13ab21] ; call rax
0x00000200001be5a5 : outsd dx, dword ptr [rsi] ; mov rax, qword ptr [rip + 0x13b2a3] ; call rax
0x00000200004c738d : outsd dx, dword ptr [rsi] ; mov rcx, r13 ; call 0x200000e8067
0x00000200001e94d1 : outsd dx, dword ptr [rsi] ; or byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000187768 : outsd dx, dword ptr [rsi] ; out dx, al ; dec dword ptr [rcx - 0x75] ; ret
0x00000200004c10ed : outsd dx, dword ptr [rsi] ; outsd dx, dword ptr [rsi] ; ret 0x48ff
0x0000020000232c7b : outsd dx, dword ptr [rsi] ; push rax ; loopne 0x20000232c47 ; ret 0x187d
0x000002000062d34c : outsd dx, dword ptr [rsi] ; push rbx ; call 0x2000024da46
0x000002000062d34b : outsd dx, dword ptr [rsi] ; push rbx ; call 0x2000024da47
0x0000020000626eae : outsd dx, dword ptr [rsi] ; push rsp ; call 0x2000024da46
0x0000020000626ead : outsd dx, dword ptr [rsi] ; push rsp ; call 0x2000024da47
0x0000020000628f9c : outsd dx, dword ptr [rsi] ; push rsp ; jb 0x20000628f8e ; pushfq ; ret 0x48ff
0x0000020000628f9b : outsd dx, dword ptr [rsi] ; push rsp ; jb 0x20000628f8f ; pushfq ; ret 0x48ff
0x000002000005bafd : outsd dx, dword ptr [rsi] ; ret
0x0000020000231d8c : outsd dx, dword ptr [rsi] ; ret 0x4166
0x00000200004c10a3 : outsd dx, dword ptr [rsi] ; ret 0x48ff
0x00000200002325cb : outsd dx, dword ptr [rsi] ; ret 0x8349
0x0000020000035625 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000200005e5dfc : outsd dx, dword ptr [rsi] ; ret 0x90ff
0x0000020000069f97 : outsd dx, dword ptr [rsi] ; ret 0xbe49
0x00000200004c0227 : outsd dx, dword ptr [rsi] ; ret 0xe9ff
0x0000020000626ae4 : outsd dx, dword ptr [rsi] ; ret 0xebff
0x0000020000231a29 : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000200007cc1e9 : outsd dx, dword ptr [rsi] ; ret 0xffb5
0x00000200006360e0 : outsd dx, dword ptr [rsi] ; sar edi, -0x75 ; ret
0x00000200004509bf : outsd dx, dword ptr [rsi] ; sbb al, ch ; ret 0xc0e6
0x00000200006a7afc : outsd dx, dword ptr [rsi] ; sbb byte ptr [rbp + rcx - 0x75], dh ; ret 0x44f0
0x00000200001f892b : outsd dx, dword ptr [rsi] ; sbb byte ptr [rdi + rcx + 0x22], al ; ret
0x000002000001c3f3 : outsd dx, dword ptr [rsi] ; sub eax, 0x48f47400 ; mov eax, dword ptr [rax + 8] ; ret
0x000002000012f30d : outsd dx, dword ptr [rsi] ; test dword ptr [rdx], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000052209e : outsd dx, dword ptr [rsi] ; test rcx, rcx ; je 0x200005220b2 ; call 0x20000148079
0x0000020000522301 : outsd dx, dword ptr [rsi] ; test rcx, rcx ; je 0x20000522315 ; call 0x20000148079
0x0000020000511afd : outsd dx, dword ptr [rsi] ; xchg eax, ecx ; ret 0x48ff
0x00000200007a8ca1 : outsd dx, dword ptr [rsi] ; xchg eax, edi ; ret 0x85ff
0x0000020000703ca5 : outsd dx, dword ptr [rsi] ; xchg eax, esi ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200006f5fe5 : outsd dx, dword ptr [rsi] ; xor eax, 0x1d88ffc2 ; xchg eax, esp ; ret 0x40ff
0x000002000013a2d6 : outsd dx, dword ptr ss:[rsi] ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200000a8827 : paddd mm7, mm7 ; push rsi ; ret
0x00000200005309c6 : paddusw mm7, mm7 ; call rax
0x00000200000ec964 : pause ; add rsp, 0x28 ; ret
0x00000200001fd7be : pause ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003d01b5 : pause ; mov eax, dword ptr [r8] ; cmp eax, edx ; je 0x200003d01be ; ret
0x00000200001fd7bc : pause ; pause ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000020b5b : pause ; xor al, al ; ret
0x00000200001d442f : pause ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000020dde5 : pavgb mm7, mm7 ; add rsp, 0x38 ; ret
0x0000020000544e1c : pcmpeqw mm0, qword ptr [rcx + rcx*2] ; mov eax, eax ; ret
0x00000200001473f3 : pcmpeqw mm0, qword ptr [rcx] ; ret
0x00000200000465e7 : pcmpgtd mm0, qword ptr [rcx - 0x7b] ; ret 0x2f75
0x000002000041f44b : pcmpgtd mm4, qword ptr [r11] ; ret 0x8d49
0x000002000041f44c : pcmpgtd mm4, qword ptr [rbx] ; ret 0x8d49
0x00000200000e6da8 : pop qword ptr [rax] ; adc dword ptr [rax], eax ; add cl, ch ; ret 0xfff7
0x00000200001399c2 : pop qword ptr [rax] ; add eax, 0x234c0000 ; ret 0xd08a
0x000002000068047f : pop qword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe875
0x00000200004a6c09 : pop qword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xea75
0x000002000044c9ed : pop qword ptr [rsi] ; ret
0x00000200000e7b12 : pop qword ptr [rsp + rcx] ; add byte ptr [rax + rcx*4 - 0x4d], al ; ret 0
0x0000020000522496 : pop r10 ; call 0x20000148555
0x00000200006017e3 : pop r10 ; or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000014c9f6 : pop r12 ; add rsp, 8 ; ret
0x00000200007d2b26 : pop r12 ; call 0x2000000ed34
0x0000020000151183 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000200000097b7 : pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000006afa : pop r12 ; pop rbp ; ret
0x000002000005f631 : pop r12 ; pop rbx ; ret
0x00000200000998d0 : pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000003a7b : pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000657ef : pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000071a0a : pop r12 ; pop rdi ; pop rbx ; ret
0x00000200001bc5e8 : pop r12 ; pop rdi ; pop rcx ; ret
0x00000200003da999 : pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000000b1ed : pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000cdfaf : pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000005e3e : pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000003f37 : pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000d209 : pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000026742 : pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000005282 : pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000002705 : pop r12 ; pop rdi ; ret
0x0000020000017f6d : pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000018b81 : pop r12 ; pop rsi ; pop rbp ; ret
0x000002000005030c : pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000008a500 : pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000032468 : pop r12 ; pop rsi ; ret
0x00000200003cd1ef : pop r12 ; push qword ptr [rsp + rax + 0x41] ; mov al, dl ; ret
0x00000200000043b3 : pop r12 ; ret
0x00000200006f38b4 : pop r12 ; ret 0xff
0x00000200000097b5 : pop r13 ; pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000006af8 : pop r13 ; pop r12 ; pop rbp ; ret
0x00000200000727f0 : pop r13 ; pop r12 ; pop rbx ; ret
0x00000200000998ce : pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000219f4 : pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000e069f : pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000071a08 : pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200003da997 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000000b1eb : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000cdfad : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000005e3c : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000011bd6 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000d207 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000026740 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000103c8 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000002703 : pop r13 ; pop r12 ; pop rdi ; ret
0x0000020000017f6b : pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000018b7f : pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000005030a : pop r13 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000c86c5 : pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000032466 : pop r13 ; pop r12 ; pop rsi ; ret
0x0000020000017e24 : pop r13 ; pop r12 ; ret
0x0000020000151185 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000200000492a4 : pop r13 ; pop rbp ; pop rbx ; ret
0x00000200000c6c3b : pop r13 ; pop rbp ; ret
0x000002000005fbdc : pop r13 ; pop rbx ; pop rbp ; ret
0x00000200000a6164 : pop r13 ; pop rbx ; ret
0x00000200000a8c5f : pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000004f034 : pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000c27fa : pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200004281fc : pop r13 ; pop rdi ; pop rbx ; ret
0x00000200000cdc66 : pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000822a1 : pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000089616 : pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000031d22 : pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000a29f0 : pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000cbf80 : pop r13 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000000473f : pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000408e0 : pop r13 ; pop rdi ; ret
0x0000020000062206 : pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000048d55c : pop r13 ; pop rsi ; pop rbp ; ret
0x00000200003f84f4 : pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b777f : pop r13 ; pop rsi ; ret
0x0000020000017b45 : pop r13 ; ret
0x00000200006f382f : pop r13 ; ret 0x48ff
0x0000020000035005 : pop r14 ; adc eax, dword ptr [rax] ; ret
0x000002000071d21c : pop r14 ; jmp qword ptr [rip + 0x3c23b]
0x000002000070b407 : pop r14 ; jmp rax
0x0000020000459d6b : pop r14 ; pop r12 ; pop rbp ; ret
0x0000020000003a79 : pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000657ed : pop r14 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001bc5e6 : pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x000002000001aebc : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200001011ae : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000003f35 : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000023965f : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000005280 : pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000062be : pop r14 ; pop r12 ; pop rdi ; ret
0x00000200000ae22f : pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000006503b : pop r14 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000008a4fe : pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x000002000048c703 : pop r14 ; pop r12 ; pop rsi ; ret
0x00000200000043b1 : pop r14 ; pop r12 ; ret
0x0000020000006af6 : pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200000727ee : pop r14 ; pop r13 ; pop r12 ; pop rbx ; ret
0x00000200000efe1d : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000219f2 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000e069d : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000429898 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x0000020000005e3a : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000d205 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002673e : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000103c6 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000002701 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; ret
0x0000020000017f69 : pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000018b7d : pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000050308 : pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000c86c3 : pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000032464 : pop r14 ; pop r13 ; pop r12 ; pop rsi ; ret
0x0000020000017e22 : pop r14 ; pop r13 ; pop r12 ; ret
0x00000200004245af : pop r14 ; pop r13 ; pop rbp ; pop rbx ; ret
0x000002000023133d : pop r14 ; pop r13 ; pop rbp ; ret
0x00000200000a8c5d : pop r14 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000004f032 : pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000c27f8 : pop r14 ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200004281fa : pop r14 ; pop r13 ; pop rdi ; pop rbx ; ret
0x00000200000cdc64 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000008229f : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004dbc81 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000031d20 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cfa29 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000cbf7e : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000000473d : pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000408de : pop r14 ; pop r13 ; pop rdi ; ret
0x0000020000062204 : pop r14 ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000048d55a : pop r14 ; pop r13 ; pop rsi ; pop rbp ; ret
0x00000200003f84f2 : pop r14 ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b777d : pop r14 ; pop r13 ; pop rsi ; ret
0x0000020000017b43 : pop r14 ; pop r13 ; ret
0x0000020000151187 : pop r14 ; pop r15 ; ret
0x000002000006fba7 : pop r14 ; pop rbp ; pop rbx ; ret
0x00000200000028c2 : pop r14 ; pop rbp ; ret
0x000002000009ef43 : pop r14 ; pop rbx ; ret
0x000002000000f378 : pop r14 ; pop rcx ; ret
0x0000020000056a82 : pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000003002f : pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006d357d : pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000075dec : pop r14 ; pop rdi ; pop rbx ; ret
0x000002000001bf47 : pop r14 ; pop rdi ; pop rcx ; ret
0x0000020000015e57 : pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000000847f : pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000031ba6 : pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003a9bd : pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000012c6bb : pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000089ac : pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000024c5 : pop r14 ; pop rdi ; ret
0x000002000001a97f : pop r14 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009bed2 : pop r14 ; pop rsi ; pop rbp ; ret
0x00000200000690e1 : pop r14 ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000058555 : pop r14 ; pop rsi ; pop rbx ; ret
0x000002000000f6b2 : pop r14 ; pop rsi ; pop rcx ; ret
0x0000020000409325 : pop r14 ; pop rsi ; ret
0x0000020000003817 : pop r14 ; ret
0x00000200006ce542 : pop r15 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000002000005f62f : pop r15 ; pop r12 ; pop rbx ; ret
0x000002000006c912 : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000a3d3e : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000124ce2 : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000001c693 : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000011372e : pop r15 ; pop r12 ; pop rdi ; ret
0x00000200004cb40a : pop r15 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004c8600 : pop r15 ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000047a017 : pop r15 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000f131b : pop r15 ; pop r12 ; ret
0x00000200000097b3 : pop r15 ; pop r13 ; pop r12 ; pop rbp ; pop rbx ; ret
0x00000200003fb64f : pop r15 ; pop r13 ; pop r12 ; pop rbx ; ret
0x00000200000998cc : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000c9863 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000071a06 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x0000020000086fbc : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004437b5 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000098356 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000563bf : pop r15 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000044fde0 : pop r15 ; pop r13 ; pop r12 ; ret
0x00000200003f4d04 : pop r15 ; pop r13 ; pop rbp ; ret
0x00000200000e6ff9 : pop r15 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200003d5094 : pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200004d1602 : pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000089614 : pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000d0351 : pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000a29ee : pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000055c16e : pop r15 ; pop r13 ; pop rdi ; ret
0x00000200004e5869 : pop r15 ; pop r13 ; pop rsi ; pop rbp ; ret
0x000002000007a995 : pop r15 ; pop r13 ; ret
0x0000020000003a77 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000657eb : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001bc5e4 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x00000200004579cb : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000023965d : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000527e : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001f5c80 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200006452e1 : pop r15 ; pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000008a4fc : pop r15 ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000043af : pop r15 ; pop r14 ; pop r12 ; ret
0x0000020000006af4 : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200000026ff : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; ret
0x0000020000032462 : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rsi ; ret
0x000002000004a46f : pop r15 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200000a8c5b : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000004f030 : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000c27f6 : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200004281f8 : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rbx ; ret
0x00000200004dbc7f : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003dda0f : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000473b : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000a68f6 : pop r15 ; pop r14 ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000048d558 : pop r15 ; pop r14 ; pop r13 ; pop rsi ; pop rbp ; ret
0x00000200003f84f0 : pop r15 ; pop r14 ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b777b : pop r15 ; pop r14 ; pop r13 ; pop rsi ; ret
0x0000020000017b41 : pop r15 ; pop r14 ; pop r13 ; ret
0x00000200000c84e6 : pop r15 ; pop r14 ; pop rbp ; pop rbx ; ret
0x00000200000028c0 : pop r15 ; pop r14 ; pop rbp ; ret
0x000002000009ef41 : pop r15 ; pop r14 ; pop rbx ; ret
0x000002000000f376 : pop r15 ; pop r14 ; pop rcx ; ret
0x0000020000056a80 : pop r15 ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200006d357b : pop r15 ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000075dea : pop r15 ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000b2dc7 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000000847d : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000b8f9b : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000093c10 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000012c6b9 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000007ed71 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000024c3 : pop r15 ; pop r14 ; pop rdi ; ret
0x000002000008f5fe : pop r15 ; pop r14 ; pop rsi ; pop rbx ; ret
0x0000020000432477 : pop r15 ; pop r14 ; pop rsi ; ret
0x000002000001fb20 : pop r15 ; pop r14 ; ret
0x00000200000b9465 : pop r15 ; pop rbp ; ret
0x00000200006e67ae : pop r15 ; pop rbx ; pop rbp ; ret
0x0000020000003028 : pop r15 ; pop rbx ; ret
0x00000200000acac7 : pop r15 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000006f014 : pop r15 ; pop rdi ; pop rbp ; ret
0x0000020000634900 : pop r15 ; pop rdi ; pop rbx ; ret
0x0000020000069c51 : pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000021c58 : pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000013003 : pop r15 ; pop rdi ; pop rsi ; ret
0x000002000049a8ee : pop r15 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000102aa5 : pop r15 ; pop rsi ; pop rbp ; ret
0x0000020000071ebb : pop r15 ; pop rsi ; pop rbx ; ret
0x0000020000009c56 : pop r15 ; ret
0x000002000070c905 : pop r8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000009547 : pop r8 ; and rax, 0xfffffffffffffff9 ; ret
0x000002000051f46e : pop r8 ; call 0x20000148075
0x0000020000031219 : pop r8 ; je 0x2000003122b ; mov eax, 1 ; ret
0x00000200001c01fc : pop r8 ; lea edx, dword ptr [rbp + 1] ; call 0x200001bc47b
0x000002000016d711 : pop r8 ; mov qword ptr [rcx + 0x168], r8 ; ret
0x000002000005749f : pop r8 ; mov qword ptr [rcx + 0x60], rax ; ret
0x0000020000042aad : pop r8 ; ret
0x00000200005023a0 : pop r8 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000515ff2 : pop r8 ; xor rcx, rsp ; call 0x2000013ac78
0x0000020000179aa2 : pop r9 ; add byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call rbx
0x000002000022c0ea : pop r9 ; add rsp, 0x28 ; ret
0x000002000049f01d : pop r9 ; call 0x1ffc4493929
0x000002000051f526 : pop r9 ; call 0x20000148555
0x000002000055d048 : pop r9 ; call rax
0x00000200004012e3 : pop rax ; adc byte ptr [rax + rsi - 1], dh ; ret 0x3b41
0x00000200001beca8 : pop rax ; adc byte ptr [rax - 0x75], cl ; add eax, 0x13ab9f ; call rax
0x00000200000b3ba0 : pop rax ; adc byte ptr [rax - 0x7f], cl ; ret
0x00000200000572e9 : pop rax ; adc byte ptr [rcx + 0xf], al ; mov bh, 0x40 ; adc byte ptr [rbx], bh ; ret 0x820f
0x0000020000558d51 : pop rax ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200005cfb62 : pop rax ; adc cl, ch ; ret 0xffec
0x0000020000048e1d : pop rax ; adc eax, dword ptr [rax] ; mov eax, 1 ; ret
0x000002000069e81c : pop rax ; add al, byte ptr [rax] ; add al, ch ; ret
0x000002000017bf8a : pop rax ; add al, byte ptr [rax] ; add bl, ch ; add ecx, dword ptr [rbp - 0x75] ; ret
0x00000200004a653c : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0xdb74
0x00000200003d0320 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003d0222 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000ae8ab : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000067a37d : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], ah ; ret
0x00000200004fdb51 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200004a651a : pop rax ; add al, byte ptr [rax] ; add byte ptr [rdi + 1], dh ; ret
0x0000020000679e42 : pop rax ; add al, byte ptr [rax] ; add dh, dh ; ret 0x7504
0x00000200004ba7be : pop rax ; add al, ch ; ret
0x000002000003e2cd : pop rax ; add byte ptr [rax], al ; add bl, bh ; ret
0x00000200001489a5 : pop rax ; add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; salc ; add byte ptr [rax], al ; ret
0x00000200001bc191 : pop rax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000100448 : pop rax ; add byte ptr [rax], al ; ret
0x000002000001d548 : pop rax ; add byte ptr [rax], al ; test eax, eax ; jne 0x2000001d55b ; xor eax, eax ; ret
0x0000020000050572 : pop rax ; add byte ptr [rbx], dl ; add byte ptr [rax - 0x75], cl ; ret
0x000002000077dbe2 : pop rax ; add cl, byte ptr [rax + 0xb] ; ret 0x8b48
0x0000020000602f21 : pop rax ; add dword ptr [rax - 0x75], ecx ; ret
0x00000200005ab759 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x0000020000075e7b : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx], al ; ret 0x813b
0x00000200006b3b38 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x000002000049a04f : pop rax ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rbp ; ret
0x00000200000f1317 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r12 ; ret
0x0000020000124374 : pop rax ; add dword ptr [rax], eax ; add cl, ch ; ret
0x0000020000189c1f : pop rax ; add dword ptr [rax], eax ; add cl, ch ; xchg eax, esp ; ret 0xffee
0x00000200004871c5 : pop rax ; add eax, dword ptr [rax] ; add al, ch ; in eax, dx ; ret
0x0000020000486e64 : pop rax ; add eax, dword ptr [rax] ; add al, ch ; ret
0x00000200004d9d35 : pop rax ; add eax, dword ptr [rax] ; add al, ch ; ret 0xb8fc
0x00000200004aa7b4 : pop rax ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ja 0x200004aa7c3 ; ret
0x00000200005239fd : pop rax ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc28b
0x00000200004d9def : pop rax ; add esi, esi ; ret
0x000002000060ecea : pop rax ; add rax, rcx ; ret
0x000002000006fba2 : pop rax ; add rsp, 0x20 ; pop r14 ; pop rbp ; pop rbx ; ret
0x000002000065b4cd : pop rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000f0c8a : pop rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000712ca : pop rax ; add rsp, 0x20 ; pop r14 ; pop rsi ; pop rbx ; ret
0x000002000001ccc8 : pop rax ; add rsp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000070c906 : pop rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021c0e8 : pop rax ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009e188 : pop rax ; add rsp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000016210 : pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000011bfc9 : pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000020ac19 : pop rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000218b6d : pop rax ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000b38d : pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004ce73b : pop rax ; add rsp, 0x30 ; pop rsi ; ret
0x000002000009c062 : pop rax ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000056eb2 : pop rax ; add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x000002000003bc4c : pop rax ; add rsp, 0x38 ; ret
0x0000020000113ab3 : pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x00000200000c4004 : pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000008412 : pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000062d801 : pop rax ; add rsp, 0x40 ; pop rsi ; ret
0x00000200000ebffa : pop rax ; add rsp, 0x78 ; pop rdi ; pop rbx ; ret
0x0000020000232da6 : pop rax ; and ah, al ; ret 0x187d
0x00000200007d35b6 : pop rax ; and byte ptr [rcx - 0x75], cl ; ret
0x00000200004d32f8 : pop rax ; and dh, dh ; ret
0x0000020000009548 : pop rax ; and rax, 0xfffffffffffffff9 ; ret
0x00000200001e6e10 : pop rax ; call 0x1ffc3a9b71a
0x0000020000024e92 : pop rax ; call 0x200000a1153
0x00000200004c0ecc : pop rax ; call 0x200000f0304
0x0000020000234f01 : pop rax ; call 0x200000f920c
0x000002000051f46f : pop rax ; call 0x20000148074
0x0000020000629cac : pop rax ; call 0x2000024d004
0x00000200004b79d2 : pop rax ; call 0x200004b75d5
0x0000020000071685 : pop rax ; call rax
0x00000200005ac95e : pop rax ; cli ; jmp 0x2004a1dc969
0x000002000011f8a7 : pop rax ; cmc ; dec dword ptr [rax - 0x75] ; ret
0x00000200000d10e4 : pop rax ; enter 0, -0xa ; ret
0x000002000003121a : pop rax ; je 0x2000003122a ; mov eax, 1 ; ret
0x000002000059ade9 : pop rax ; jmp 0x2000041cc91
0x00000200006e5142 : pop rax ; jmp 0x2004cc43d4f
0x00000200000ccd30 : pop rax ; jmp qword ptr [rbx]
0x00000200001c01fd : pop rax ; lea edx, dword ptr [rbp + 1] ; call 0x200001bc47a
0x0000020000431add : pop rax ; lea rdx, qword ptr [rsp + 0x60] ; mov rcx, rbx ; call rsi
0x0000020000106ab4 : pop rax ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x00000200000088c7 : pop rax ; mov byte ptr [rcx], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200005c2aab : pop rax ; mov cl, 0xea ; dec dword ptr [rax + 0x3b] ; ret 0x840f
0x0000020000111c7d : pop rax ; mov dword ptr [r9], eax ; add rsp, 0x38 ; ret
0x0000020000201757 : pop rax ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000053f9ce : pop rax ; mov eax, r9d ; ret
0x00000200004fc0d4 : pop rax ; mov ecx, 0x8b44000e ; ret
0x000002000017614f : pop rax ; mov edx, ebp ; call 0x200001123a1
0x000002000017614e : pop rax ; mov edx, ebp ; call 0x200001123a2
0x00000200003f60a3 : pop rax ; mov qword ptr [r8], rcx ; mov eax, r9d ; ret
0x0000020000007c79 : pop rax ; mov qword ptr [rbx], rcx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000016d712 : pop rax ; mov qword ptr [rcx + 0x168], r8 ; ret
0x00000200000574a0 : pop rax ; mov qword ptr [rcx + 0x60], rax ; ret
0x00000200006844c8 : pop rax ; mov qword ptr [rdx], 0x60 ; ret
0x0000020000536ec9 : pop rax ; mov r8d, ebx ; xor edx, edx ; call 0x20000157889
0x0000020000035315 : pop rax ; mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011fd77 : pop rax ; mov rcx, qword ptr [rdi + 8] ; call r8
0x0000020000483766 : pop rax ; mov rcx, r12 ; call 0x2000005fa06
0x0000020000670d56 : pop rax ; mov rcx, r13 ; mov edx, ebx ; call 0x2000024d009
0x000002000048e071 : pop rax ; mov rcx, rbx ; call r15
0x0000020000662c50 : pop rax ; mov rcx, rdi ; call 0x200000eef36
0x00000200004315a4 : pop rax ; or bl, al ; inc dword ptr [rbp - 0x74d98a25] ; ret
0x00000200006b01ec : pop rax ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000024caf : pop rax ; or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000788aa5 : pop rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000dd672 : pop rax ; pop r13 ; pop r12 ; ret
0x000002000057f303 : pop rax ; pop r13 ; pop rbp ; ret
0x00000200000c5987 : pop rax ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000003f34 : pop rax ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000006c911 : pop rax ; pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000007a994 : pop rax ; pop r15 ; pop r13 ; ret
0x00000200000c84e5 : pop rax ; pop r15 ; pop r14 ; pop rbp ; pop rbx ; ret
0x0000020000157a94 : pop rax ; pop rbx ; add byte ptr [rax], al ; ret
0x00000200006bd32c : pop rax ; pop rbx ; pop rbp ; ret
0x0000020000147cdf : pop rax ; pop rcx ; ret
0x0000020000115a43 : pop rax ; pop rdi ; pop rbx ; ret
0x00000200002227e1 : pop rax ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000054ed9e : pop rax ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000005551 : pop rax ; ret
0x0000020000454b07 : pop rax ; ret 0x33ff
0x0000020000516a42 : pop rax ; ret 0x45ff
0x00000200006f7088 : pop rax ; ret 0x4cff
0x0000020000594fb4 : pop rax ; ret 0xffaf
0x00000200007ac97c : pop rax ; ret 0xffb4
0x00000200004e1ffc : pop rax ; ret 0xffba
0x00000200005ab890 : pop rax ; ret 0xfff5
0x0000020000515dae : pop rax ; ret 9
0x0000020000029024 : pop rax ; sbb al, 0x41 ; mov eax, edx ; pop rbx ; ret
0x000002000024a224 : pop rax ; sbb byte ptr [rcx - 0x75], al ; ret 0x8b49
0x00000200005956e8 : pop rax ; sbb cl, ch ; ret
0x000002000017326b : pop rax ; stc ; ljmp ptr [rbx] ; ret 0xe1c1
0x00000200001807c9 : pop rax ; std ; in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000112474 : pop rax ; sub al, 0xe8 ; lea ecx, dword ptr [rip + 0x3b41fff4] ; ret
0x000002000000a8e1 : pop rax ; sub byte ptr [rax - 0x75], cl ; ret
0x000002000060024a : pop rax ; sub byte ptr [rax - 0x7d], cl ; ret
0x0000020000123bc6 : pop rax ; sub byte ptr [rax], al ; call rax
0x00000200004bfae2 : pop rax ; sub dh, dh ; ret
0x00000200001ba281 : pop rax ; test eax, eax ; je 0x200001ba291 ; mov dl, 1 ; mov al, dl ; ret
0x00000200005ccecc : pop rax ; test rax, rax ; je 0x200005ccee2 ; mov rcx, r12 ; call rax
0x00000200005023a1 : pop rax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007b9e98 : pop rax ; xor eax, eax ; add rsp, 0x30 ; pop rsi ; ret
0x00000200004c0eb3 : pop rax ; xor edx, edx ; call 0x200000eef36
0x000002000049bb6b : pop rax ; xor r8d, r8d ; xor edx, edx ; call 0x200000bbbed
0x000002000050b951 : pop rax ; xor rcx, rsp ; call 0x2000013ac77
0x00000200001e4569 : pop rbp ; adc byte ptr [rax - 0x75], cl ; ret
0x0000020000072dce : pop rbp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200005d1226 : pop rbp ; add bh, bh ; add dword ptr [rbp], ebx ; ret
0x000002000011f138 : pop rbp ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001d9b4 : pop rbp ; add dh, dh ; ret
0x0000020000701d98 : pop rbp ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000041d71 : pop rbp ; add ecx, dword ptr [rcx] ; xor byte ptr [rdx + rcx - 0x75], 0xc2 ; ret
0x00000200004d11ec : pop rbp ; add esi, esi ; ret
0x0000020000194b48 : pop rbp ; and cl, ch ; ret 0xf0d1
0x00000200005657a7 : pop rbp ; cmp ah, ah ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc933
0x00000200001848b7 : pop rbp ; cmp ah, byte ptr [rsi - 1] ; ret
0x00000200001573ec : pop rbp ; cwde ; add rsp, 0x68 ; ret
0x000002000046c7ff : pop rbp ; idiv bh ; push rsi ; ret
0x0000020000197ca6 : pop rbp ; insb byte ptr [rdi], dx ; int1 ; dec dword ptr [rcx - 0x75] ; ret 0x3b4c
0x0000020000173dea : pop rbp ; jb 0x20000173dec ; dec dword ptr [rcx + 3] ; ret 0xc148
0x00000200004d0643 : pop rbp ; jl 0x200004d05d0 ; ror byte ptr [rdi], 0x85 ; ret
0x000002000015e16f : pop rbp ; jp 0x2000015e197 ; add byte ptr [rbp + 0x3b], al ; ret 0x177c
0x0000020000143daa : pop rbp ; jrcxz 0x20000143d3b ; ret
0x000002000043200b : pop rbp ; loopne 0x20000432007 ; ret
0x00000200006d521b : pop rbp ; loopne 0x200006d51a4 ; ret
0x00000200007819f8 : pop rbp ; mov byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004c70f3 : pop rbp ; mov ebx, 0xcf8b48ff ; call 0x200000e8069
0x0000020000194a14 : pop rbp ; or byte ptr [rbx], dh ; imul cl ; ret
0x00000200000c937d : pop rbp ; or eax, 0x8a01b300 ; ret
0x00000200000097b6 : pop rbp ; pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000006af9 : pop rbp ; pop r12 ; pop rbp ; ret
0x00000200000727f1 : pop rbp ; pop r12 ; pop rbx ; ret
0x00000200000998cf : pop rbp ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000219f5 : pop rbp ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000e06a0 : pop rbp ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000071a09 : pop rbp ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200003da998 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000000b1ec : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000cdfae : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000005e3d : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000011bd7 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000d208 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000026741 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000103c9 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000002704 : pop rbp ; pop r12 ; pop rdi ; ret
0x0000020000017f6c : pop rbp ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000018b80 : pop rbp ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000005030b : pop rbp ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000c86c6 : pop rbp ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000032467 : pop rbp ; pop r12 ; pop rsi ; ret
0x0000020000017e25 : pop rbp ; pop r12 ; ret
0x0000020000151186 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000200000492a5 : pop rbp ; pop rbp ; pop rbx ; ret
0x00000200000c6c3c : pop rbp ; pop rbp ; ret
0x000002000005fbdd : pop rbp ; pop rbx ; pop rbp ; ret
0x00000200000cdc6a : pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000097b9 : pop rbp ; pop rbx ; ret
0x00000200000cc873 : pop rbp ; pop rcx ; ret
0x00000200000a8c60 : pop rbp ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000004f035 : pop rbp ; pop rdi ; pop rbp ; ret
0x00000200000c27fb : pop rbp ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200004281fd : pop rbp ; pop rdi ; pop rbx ; ret
0x00000200000cdc67 : pop rbp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000822a2 : pop rbp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000089617 : pop rbp ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000031d23 : pop rbp ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000a29f1 : pop rbp ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000cbf81 : pop rbp ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000004740 : pop rbp ; pop rdi ; pop rsi ; ret
0x00000200000408e1 : pop rbp ; pop rdi ; ret
0x0000020000062207 : pop rbp ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000048d55d : pop rbp ; pop rsi ; pop rbp ; ret
0x00000200003f84f5 : pop rbp ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b7780 : pop rbp ; pop rsi ; ret
0x00000200000028c4 : pop rbp ; ret
0x000002000003ece3 : pop rbp ; ret 0x40
0x0000020000627238 : pop rbp ; ret 0x48ff
0x00000200006f4c4d : pop rbp ; ret 0x49ff
0x000002000062720a : pop rbp ; ret 0x80ff
0x00000200006348df : pop rbp ; ret 0x83ff
0x00000200003e52a3 : pop rbp ; ret 0x850f
0x0000020000522309 : pop rbp ; ret 0x8aff
0x00000200006d19bb : pop rbp ; ret 0x8b49
0x00000200003db224 : pop rbp ; ret 0x8bff
0x0000020000518653 : pop rbp ; ret 0xfff3
0x00000200003d6fb7 : pop rbp ; ret 0xfff4
0x0000020000531b67 : pop rbp ; ret 0xffff
0x0000020000609d01 : pop rbp ; ror byte ptr [rax - 0x77], 0x45 ; ret 0x4589
0x00000200004e1194 : pop rbp ; sar bh, 0x8b ; ret
0x0000020000055498 : pop rbp ; sbb byte ptr [rbx + rcx*4 + 0x65], al ; adc bh, bh ; ret
0x00000200006d1954 : pop rbp ; shl byte ptr [rsi - 0x7d], 1 ; ret
0x00000200000c6c05 : pop rbp ; sub byte ptr [rcx - 1], al ; ret
0x0000020000622644 : pop rbx ; adc al, byte ptr [rax] ; test rax, rax ; je 0x20000622658 ; jmp qword ptr [rax]
0x00000200004ac6a8 : pop rbx ; adc al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000666b7e : pop rbx ; adc byte ptr [rcx + rcx*4 + 0x5b], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0x0000020000148a05 : pop rbx ; add byte ptr [rax], al ; add cl, ch ; xor dl, dh ; add byte ptr [rax], al ; ret
0x0000020000157a95 : pop rbx ; add byte ptr [rax], al ; ret
0x00000200004634d2 : pop rbx ; add byte ptr [rbx], al ; lcall ptr [rbx] ; jmp qword ptr [rcx]
0x000002000023f056 : pop rbx ; add dword ptr [rax - 0x75], ecx ; ret 0xc148
0x0000020000688a94 : pop rbx ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x7675
0x000002000024c58e : pop rbx ; add rsp, 8 ; jmp r8
0x0000020000669f47 : pop rbx ; and byte ptr [rax - 0x7f], cl ; ret
0x00000200001e6aeb : pop rbx ; call 0x1ffc3a9b3f5
0x00000200000036e3 : pop rbx ; cmp al, byte ptr [rax] ; ret
0x00000200003cc915 : pop rbx ; dec dword ptr [rax + 0x63] ; ret 0x8348
0x00000200005f6ec2 : pop rbx ; fdiv st(7), st(0) ; call 0x2000021e376
0x000002000053307f : pop rbx ; inc dword ptr [rbp + 0x3b] ; ret
0x00000200004d076a : pop rbx ; inc edx ; jmp 0x200004d0714
0x00000200005588ae : pop rbx ; jmp 0x1ffc45488c2
0x00000200006273f8 : pop rbx ; jmp 0x2000024d004
0x00000200006273f7 : pop rbx ; jmp 0x2000024d005
0x000002000052ddd2 : pop rbx ; jmp r10
0x000002000071b860 : pop rbx ; jmp r8
0x0000020000075238 : pop rbx ; jmp rax
0x00000200004ad031 : pop rbx ; leave ; ret
0x0000020000201581 : pop rbx ; loopne 0x20000201513 ; pop rsp ; and al, 0x40 ; call rax
0x0000020000045088 : pop rbx ; mov eax, 2 ; ret
0x00000200004bda29 : pop rbx ; mov rcx, rsi ; call 0x200000e7da7
0x0000020000682774 : pop rbx ; or al, 0 ; mov eax, 0x2d0 ; ret
0x0000020000439897 : pop rbx ; or bh, dh ; ret
0x0000020000619cc6 : pop rbx ; or byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 0xffc3
0x00000200005a2449 : pop rbx ; or cl, byte ptr [rdi] ; add dh, dh ; ret
0x0000020000152751 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000020000003f3b : pop rbx ; pop rbp ; ret
0x00000200000cdc6b : pop rbx ; pop rcx ; ret
0x000002000014c9f4 : pop rbx ; pop rdi ; pop r12 ; add rsp, 8 ; ret
0x000002000014e54d : pop rbx ; pop rdi ; pop rsi ; ret
0x000002000017ec21 : pop rbx ; push -0x1517ffe6 ; ret
0x000002000000255a : pop rbx ; ret
0x0000020000127984 : pop rbx ; ret 0x3956
0x00000200006d202f : pop rbx ; ret 0x48ff
0x00000200006f398d : pop rbx ; ret 0xff
0x000002000041b2e1 : pop rbx ; ret 0xffd3
0x00000200004edfd3 : pop rbx ; sar bh, 0x48 ; add esp, 0x28 ; ret
0x00000200004b7a6b : pop rbx ; sar bh, 0x8b ; ret
0x0000020000666b82 : pop rbx ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000200000a0e52 : pop rbx ; sub byte ptr [rax], al ; ret
0x000002000009acf5 : pop rcx ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000021eced : pop rcx ; adc byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000200000977fe : pop rcx ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200003d0331 : pop rcx ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003d0234 : pop rcx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000062abb : pop rcx ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x000002000079fdf6 : pop rcx ; add al, byte ptr [rax] ; ret
0x0000020000179aa3 : pop rcx ; add byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call rbx
0x00000200001489c5 : pop rcx ; add byte ptr [rax], al ; add cl, ch ; jb 0x200001489ab ; add byte ptr [rax], al ; ret
0x000002000059ef31 : pop rcx ; add byte ptr [rcx + 3], cl ; iretd ; jmp rcx
0x000002000062c387 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x3ffffdfa], bh ; ret
0x00000200001e33cd : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000014a9c5 : pop rcx ; add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014a98b ; add byte ptr [rax], al ; ret
0x00000200000d26f1 : pop rcx ; add dword ptr [rax], eax ; mov rcx, qword ptr [rbp + 0x28] ; call 0x200000be969
0x00000200001184b9 : pop rcx ; add dword ptr [rbp - 0x75], eax ; ret
0x0000020000242fac : pop rcx ; add dword ptr [rcx - 0x7f], ecx ; ret 0xf1
0x0000020000211a5b : pop rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000022c0eb : pop rcx ; add rsp, 0x28 ; ret
0x000002000002e638 : pop rcx ; and bl, ch ; rol byte ptr [rcx - 0x75], 1 ; ret 0xe8d1
0x000002000007c668 : pop rcx ; and byte ptr [rcx - 0x7f], cl ; ret 0
0x000002000009ebed : pop rcx ; and eax, dword ptr [rcx - 0x75] ; ret
0x000002000049f01e : pop rcx ; call 0x1ffc4493928
0x000002000051f527 : pop rcx ; call 0x20000148554
0x000002000045177e : pop rcx ; call 0x2000024da43
0x000002000055d049 : pop rcx ; call rax
0x000002000015ff3a : pop rcx ; clc ; jmp 0x2000015ff48
0x0000020000160068 : pop rcx ; clc ; jmp 0x20000160076
0x0000020000160186 : pop rcx ; clc ; jmp 0x20000160194
0x0000020000172817 : pop rcx ; clc ; jmp 0x20000172825
0x00000200001728e7 : pop rcx ; clc ; jmp 0x200001728f5
0x0000020000173b50 : pop rcx ; clc ; jmp 0x20000173b5e
0x0000020000173c4b : pop rcx ; clc ; jmp 0x20000173c59
0x0000020000174467 : pop rcx ; clc ; jmp 0x20000174475
0x0000020000174627 : pop rcx ; clc ; jmp 0x20000174635
0x0000020000217ff1 : pop rcx ; clc ; jmp 0x20000217fff
0x0000020000218105 : pop rcx ; clc ; jmp 0x20000218113
0x0000020000218221 : pop rcx ; clc ; jmp 0x2000021822f
0x0000020000192682 : pop rcx ; cmc ; dec dword ptr [rcx - 0x75] ; iretd ; call 0x200000be968
0x000002000068ca43 : pop rcx ; dec byte ptr [rax + 0x63] ; ret 0x8d4e
0x00000200004232bb : pop rcx ; in eax, dx ; dec dword ptr [rcx + rcx*4 + 0x3d] ; ret
0x00000200005e9133 : pop rcx ; ja 0x200005e912d ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200001c0f2f : pop rcx ; je 0x200001c0f40 ; or eax, 0xc0350000 ; ret
0x0000020000563ba0 : pop rcx ; jg 0x20000563bb1 ; add dh, dh ; ret
0x0000020000545d91 : pop rcx ; mov ah, 0xa ; add dh, dh ; ret 0x7402
0x00000200004c746b : pop rcx ; mov ebx, 0xcd8b49ff ; call 0x200000e8069
0x000002000053f893 : pop rcx ; mov esi, 0x48ccffc0 ; and dword ptr [rcx], 0 ; ret
0x00000200000dfb41 : pop rcx ; or al, 0 ; add rsp, 0x28 ; ret
0x00000200007d2252 : pop rcx ; or al, 0xf ; xchg eax, ebp ; ret
0x000002000069ecbf : pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x00000200000bd5eb : pop rcx ; or byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200001f72ff : pop rcx ; or byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000200000977fa : pop rcx ; or byte ptr [rcx + rcx*4 + 0x59], al ; adc byte ptr [rcx - 0x75], cl ; ret
0x0000020000629679 : pop rcx ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000012241b : pop rcx ; or dh, dh ; ret
0x00000200003e7675 : pop rcx ; out 0xff, al ; add rsp, 0x28 ; ret
0x0000020000626ae3 : pop rcx ; outsd dx, dword ptr [rsi] ; ret 0xebff
0x00000200006189e3 : pop rcx ; push rax ; ret
0x000002000051db19 : pop rcx ; push rbx ; fdivp st(7) ; add rsp, 0x28 ; ret
0x000002000000f37a : pop rcx ; ret
0x000002000051533f : pop rcx ; ret 0x48ff
0x00000200006f6643 : pop rcx ; ret 0x4cff
0x00000200006f4f63 : pop rcx ; ret 0xffa5
0x00000200005bd148 : pop rcx ; ret 0xffe9
0x0000020000693882 : pop rcx ; ror byte ptr [rcx - 0x75], 1 ; ret
0x0000020000535273 : pop rcx ; sar bh, 0x48 ; add esp, 0x78 ; ret
0x000002000044b948 : pop rcx ; sar bh, 1 ; add rsp, 0x28 ; ret
0x00000200004ad103 : pop rcx ; scasd eax, dword ptr [rdi] ; ret
0x000002000020be13 : pop rcx ; shr ch, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011e7fb : pop rcx ; sub al, 0xf7 ; ret
0x0000020000042926 : pop rcx ; sub bl, ch ; ror ah, 0xcc ; lock dec dword ptr [rcx] ; ret
0x0000020000123abf : pop rcx ; sub byte ptr [rax], al ; call rax
0x00000200004e5bcc : pop rcx ; sub dh, dh ; ret
0x0000020000705a17 : pop rcx ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000020000655078 : pop rcx ; xor byte ptr [rcx - 0x7487dba4], cl ; ret
0x00000200000becc5 : pop rdi ; adc byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000008a0bd : pop rdi ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000011c823 : pop rdi ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000200000b4047 : pop rdi ; adc byte ptr [rax - 0x7f], cl ; ret
0x00000200005d1c43 : pop rdi ; add al, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x31e8
0x0000020000713703 : pop rdi ; add al, 0 ; add rsp, 0x28 ; ret
0x000002000017673f : pop rdi ; add al, 0xf ; xchg byte ptr [rip - 0x74000630], cl ; ret
0x0000020000176097 : pop rdi ; add al, 0xf ; xchg byte ptr [rip - 0x74000641], al ; ret
0x0000020000148a85 : pop rdi ; add byte ptr [rax], al ; add cl, ch ; mov dl, 0xd5 ; add byte ptr [rax], al ; ret
0x000002000001155f : pop rdi ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000078b292 : pop rdi ; add dword ptr [rax + 0x33], ecx ; ret 0x8948
0x000002000077e6f9 : pop rdi ; add dword ptr [rax + 0xb], ecx ; ret 0x8b48
0x00000200006ce543 : pop rdi ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000200000e68b7 : pop rdi ; add dword ptr [rax - 0x7f], ecx ; jmp qword ptr [rax]
0x000002000003d73c : pop rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000014aa85 : pop rdi ; add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xb5 ; add byte ptr [rax], al ; ret
0x0000020000115a19 : pop rdi ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000047bf00 : pop rdi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x4002
0x000002000005acfd : pop rdi ; add eax, 0xc0330000 ; ret
0x0000020000214d84 : pop rdi ; add eax, 0xc18b0000 ; ret
0x000002000050d0b7 : pop rdi ; and byte ptr [rax - 0x7f], cl ; ret
0x0000020000551751 : pop rdi ; cmp byte ptr [rdx], cl ; add bh, bh ; ret 0x8b45
0x00000200005ea33d : pop rdi ; fisubr dword ptr [rdi - 0x47166f01] ; ret 0xfff1
0x000002000001e2e8 : pop rdi ; jmp 0x20000075197
0x0000020000457fff : pop rdi ; jmp 0x2000007d084
0x0000020000629189 : pop rdi ; jmp 0x2000024d004
0x0000020000101e54 : pop rdi ; jmp rax
0x00000200005e1a2b : pop rdi ; loop 0x200005e1a20 ; loopne 0x200005e19ce ; lock dec dword ptr [rax - 0x75] ; ret
0x0000020000439e45 : pop rdi ; mov ah, 2 ; add byte ptr [rcx + 0x23502444], cl ; ret
0x0000020000718515 : pop rdi ; mov ebx, 0xb70ffffe ; ret
0x00000200007924f9 : pop rdi ; mov ecx, 0x1d8d48ff ; xchg eax, ecx ; ret 0xffab
0x00000200005cd911 : pop rdi ; mov qword ptr [rip + 0x17a907], rax ; ret
0x0000020000513e57 : pop rdi ; mov rcx, rdi ; call 0x2000013bd43
0x00000200000de494 : pop rdi ; or al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000661415 : pop rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200000bb358 : pop rdi ; or dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000014c9f5 : pop rdi ; pop r12 ; add rsp, 8 ; ret
0x0000020000151182 : pop rdi ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000002000005f630 : pop rdi ; pop r12 ; pop rbx ; ret
0x000002000006c913 : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000a3d3f : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000124ce3 : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000001c694 : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000011372f : pop rdi ; pop r12 ; pop rdi ; ret
0x00000200004cb40b : pop rdi ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004c8601 : pop rdi ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000047a018 : pop rdi ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000f131c : pop rdi ; pop r12 ; ret
0x00000200000097b4 : pop rdi ; pop r13 ; pop r12 ; pop rbp ; pop rbx ; ret
0x00000200003fb650 : pop rdi ; pop r13 ; pop r12 ; pop rbx ; ret
0x00000200000998cd : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000c9864 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000071a07 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x0000020000052d2d : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000cdfac : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000086fbd : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000f6153 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004437b6 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000098357 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000563c0 : pop rdi ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000044fde1 : pop rdi ; pop r13 ; pop r12 ; ret
0x00000200003f4d05 : pop rdi ; pop r13 ; pop rbp ; ret
0x00000200000e6ffa : pop rdi ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200003d5095 : pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200004d1603 : pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000089615 : pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000d0352 : pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000a29ef : pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000055c16f : pop rdi ; pop r13 ; pop rdi ; ret
0x00000200004e586a : pop rdi ; pop r13 ; pop rsi ; pop rbp ; ret
0x000002000007a996 : pop rdi ; pop r13 ; ret
0x0000020000003a78 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000657ec : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001bc5e5 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x000002000001aebb : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004579cc : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000db09 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000023965e : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000527f : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001f5c81 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200006452e2 : pop rdi ; pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000008a4fd : pop rdi ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000043b0 : pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000006af5 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200000219f1 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000429897 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000529fe : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000002700 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; ret
0x0000020000487cb2 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000c86c2 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000032463 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rsi ; ret
0x000002000004a470 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200000a8c5c : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000004f031 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000c27f7 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200004281f9 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbx ; ret
0x000002000008229e : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004dbc80 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000031d1f : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003dda10 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000473c : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000a68f7 : pop rdi ; pop r14 ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000048d559 : pop rdi ; pop r14 ; pop r13 ; pop rsi ; pop rbp ; ret
0x00000200003f84f1 : pop rdi ; pop r14 ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b777c : pop rdi ; pop r14 ; pop r13 ; pop rsi ; ret
0x0000020000017b42 : pop rdi ; pop r14 ; pop r13 ; ret
0x00000200000c84e7 : pop rdi ; pop r14 ; pop rbp ; pop rbx ; ret
0x00000200000028c1 : pop rdi ; pop r14 ; pop rbp ; ret
0x000002000009ef42 : pop rdi ; pop r14 ; pop rbx ; ret
0x000002000000f377 : pop rdi ; pop r14 ; pop rcx ; ret
0x0000020000056a81 : pop rdi ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200006d357c : pop rdi ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000075deb : pop rdi ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000b2dc8 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000000847e : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000b8f9c : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000093c11 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000012c6ba : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000007ed72 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000024c4 : pop rdi ; pop r14 ; pop rdi ; ret
0x000002000008f5ff : pop rdi ; pop r14 ; pop rsi ; pop rbx ; ret
0x0000020000432478 : pop rdi ; pop r14 ; pop rsi ; ret
0x000002000001fb21 : pop rdi ; pop r14 ; ret
0x0000020000056a84 : pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000003a7d : pop rdi ; pop rbp ; ret
0x0000020000152750 : pop rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000002000001bcac : pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000003029 : pop rdi ; pop rbx ; ret
0x000002000079fe4b : pop rdi ; pop rcx ; add al, byte ptr [rax] ; ret
0x000002000001bf49 : pop rdi ; pop rcx ; ret
0x00000200000acac8 : pop rdi ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000006f015 : pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000634901 : pop rdi ; pop rdi ; pop rbx ; ret
0x0000020000069c52 : pop rdi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000021c59 : pop rdi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000013004 : pop rdi ; pop rdi ; pop rsi ; ret
0x00000200000cdc68 : pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000000b1ef : pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000cdfb1 : pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000005e40 : pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000003f39 : pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000d20b : pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000026744 : pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000004741 : pop rdi ; pop rsi ; ret
0x00000200000024c7 : pop rdi ; ret
0x00000200001da51d : pop rdi ; ret 0x12
0x00000200006f4a0e : pop rdi ; ret 0x14ff
0x00000200001ae5ad : pop rdi ; ret 0x2e
0x0000020000514ca9 : pop rdi ; ret 0x48ff
0x00000200006f49d5 : pop rdi ; ret 0x49ff
0x0000020000478110 : pop rdi ; ret 0x4cff
0x00000200006f4a6b : pop rdi ; ret 0xa2ff
0x00000200006a05dd : pop rdi ; ret 0xffc5
0x000002000042ea0d : pop rdi ; ret 0xffd0
0x00000200006f4a5d : pop rdi ; ret 0xfff
0x0000020000441db1 : pop rdi ; retf 0x49ff ; mov ecx, edi ; call 0x2000006d289
0x000002000000a69f : pop rdi ; ror byte ptr [rax - 1], 1 ; ret
0x00000200003fb9ba : pop rdi ; sbb al, 0x3b ; ret
0x000002000054fcad : pop rdi ; sbb al, 0x8b ; sbb byte ptr [r11], r15b ; ret
0x000002000062c8aa : pop rdi ; sbb byte ptr [rax - 0x7d], cl ; ret
0x00000200001d64c8 : pop rdi ; sbb eax, eax ; and eax, 0x128 ; ret
0x0000020000228341 : pop rdi ; sub al, 0 ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200004d7c38 : pop rdi ; sub cl, ch ; ret
0x00000200007c53b4 : pop rdi ; xchg eax, esp ; std ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000446839 : pop rdi ; xor al, ch ; xchg eax, edx ; sar edi, -0x75 ; ret
0x000002000045537c : pop rdx ; adc byte ptr [rax - 0x75], cl ; ret 0x8948
0x000002000053ebd8 : pop rdx ; adc byte ptr [rbx + 0x39], cl ; ret
0x0000020000519dc7 : pop rdx ; adc byte ptr [rcx - 0x75], al ; adc byte ptr [rbx], bpl ; ret
0x000002000041778f : pop rdx ; adc byte ptr [rcx - 0x75], cl ; ret 0x4cf0
0x00000200000b2357 : pop rdx ; add al, byte ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0x8b48
0x0000020000710c92 : pop rdx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001489e5 : pop rdx ; add byte ptr [rax], al ; add cl, ch ; push rdx ; salc ; add byte ptr [rax], al ; ret
0x00000200006044bc : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200000598ba : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x3bc323c6], cl ; ret
0x00000200000f97db : pop rdx ; add dword ptr [rbp + 0x3b7874c0], eax ; ret
0x000002000044458d : pop rdx ; add dword ptr [rcx - 0x75], eax ; ret
0x000002000003a8e5 : pop rdx ; and byte ptr [rbx + rcx*4 + 0x48], cl ; or byte ptr [rcx - 0x75], cl ; ret 0xf749
0x00000200007d2a52 : pop rdx ; call 0x2000000ed33
0x00000200007d2a51 : pop rdx ; call 0x2000000ed34
0x0000020000522497 : pop rdx ; call 0x20000148554
0x00000200003cc93e : pop rdx ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x00000200000a85a8 : pop rdx ; fisttp word ptr [rsi] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003e4a23 : pop rdx ; imul eax, ecx ; add eax, r9d ; ret
0x00000200005db112 : pop rdx ; int 0xb0
0x00000200000c7ad5 : pop rdx ; jno 0x200000c7aea ; add dh, dh ; ret
0x0000020000711ba2 : pop rdx ; mov ah, 0xb3 ; dec dword ptr [rax - 0x75] ; ret
0x000002000057f570 : pop rdx ; mov ah, 0xff ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x00000200000985de : pop rdx ; mov dword ptr [rip - 0x7c41f100], eax ; ret
0x0000020000550d63 : pop rdx ; mov rcx, rbx ; call 0x2000024d006
0x0000020000628eca : pop rdx ; mov word ptr [rsi], dx ; xor edx, edx ; call 0x2000024d009
0x000002000004306b : pop rdx ; or al, 0x48 ; mov dword ptr [rax + 8], eax ; mov qword ptr [rax], rax ; ret
0x00000200004e73f8 : pop rdx ; or byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200000539f3 : pop rdx ; or byte ptr [rax - 0x7d], cl ; ret 0xf21c
0x00000200000a79e8 : pop rdx ; or byte ptr [rdi - 0x77], cl ; pop rsp ; ret 0x4908
0x00000200006c7222 : pop rdx ; or ch, bl ; dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x3966
0x00000200006017e4 : pop rdx ; or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000023ef7e : pop rdx ; or eax, dword ptr [rcx + 0x3b] ; ret
0x0000020000147cde : pop rdx ; pop rax ; pop rcx ; ret
0x00000200006f3022 : pop rdx ; push rdi ; ret
0x0000020000429f96 : pop rdx ; ret
0x0000020000421989 : pop rdx ; ret 0x17
0x00000200000ca712 : pop rdx ; ret 0x18
0x00000200005151dd : pop rdx ; ret 0x48ff
0x00000200007adb4f : pop rdx ; ret 0x83ff
0x000002000059096c : pop rdx ; ret 0x84ff
0x00000200007cd15e : pop rdx ; stosb byte ptr [rdi], al ; ret 0x8bff
0x00000200006b0427 : pop rdx ; sub byte ptr [rbx - 0x74bbd33d], al ; ret
0x00000200007ba25e : pop rdx ; sub dword ptr [rcx], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006d65f6 : pop rdx ; xor byte ptr [rcx - 0xa], al ; ret
0x00000200004b83dd : pop rsi ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000007974a : pop rsi ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000200000b5f3d : pop rsi ; adc byte ptr [rax - 0x7f], cl ; ret
0x00000200001cc470 : pop rsi ; adc eax, 0x940f0100 ; ret 0x5188
0x0000020000035006 : pop rsi ; adc eax, dword ptr [rax] ; ret
0x00000200003c7e61 : pop rsi ; add al, byte ptr [rdi + rcx + 0x22] ; ret
0x00000200004685e1 : pop rsi ; add al, byte ptr [rdi + rcx - 0x49] ; ret
0x0000020000148a65 : pop rsi ; add byte ptr [rax], al ; add cl, ch ; rcl ch, cl ; add byte ptr [rax], al ; ret
0x0000020000021070 : pop rsi ; add byte ptr [rax], al ; call 0x2000006d285
0x000002000020a196 : pop rsi ; add byte ptr [rax], al ; pop r14 ; ret
0x0000020000123219 : pop rsi ; add byte ptr [rax], al ; ret
0x000002000077dd89 : pop rsi ; add dword ptr [rax + 0xb], ecx ; ret 0x8b48
0x00000200004c18e1 : pop rsi ; add dword ptr [rax], eax ; add bh, bh ; ret
0x000002000005b2f3 : pop rsi ; add dword ptr [rax], eax ; test eax, eax ; jns 0x2000005b2c2 ; jmp 0x2000005b2dd
0x000002000019511e : pop rsi ; add ebx, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; call 0x1fff0f1141a
0x00000200005347cc : pop rsi ; call 0x20000157884
0x00000200005347cb : pop rsi ; call 0x20000157885
0x00000200005ec951 : pop rsi ; cmp al, 0xf ; test byte ptr [rax - 0x18], dh ; int1 ; push rsi ; ret 0xf0c
0x00000200007d16ec : pop rsi ; cwde ; dec dword ptr [rax - 0x75] ; ret
0x00000200000d24aa : pop rsi ; dec dword ptr [rcx - 0x75] ; ret
0x00000200000411b8 : pop rsi ; fcom qword ptr [rdx] ; add dh, dh ; ret
0x0000020000197c8a : pop rsi ; int1 ; dec dword ptr [rcx - 0x75] ; ret 0x3b4c
0x000002000001dce0 : pop rsi ; jge 0x2000001dd00 ; add dh, dh ; rol dword ptr [rdx], 0xf ; xchg eax, ebp ; ret 0xc3f6
0x000002000071d21d : pop rsi ; jmp qword ptr [rip + 0x3c23b]
0x000002000070b408 : pop rsi ; jmp rax
0x000002000071569e : pop rsi ; jns 0x200007156a8 ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000046e2fe : pop rsi ; jrcxz 0x2000046e2ef ; dec dword ptr [rax - 0x75] ; ret
0x00000200003e61c3 : pop rsi ; mov rdx, r13 ; mov rcx, rdi ; call r12
0x00000200007a165e : pop rsi ; or byte ptr [rax - 0x3f], cl ; jmp 0x200007a166f
0x0000020000605a36 : pop rsi ; or byte ptr [rax - 0x7f], cl ; ret
0x000002000007ef8c : pop rsi ; or byte ptr [rbp - 0x75], cl ; ret 0xc148
0x0000020000459d6c : pop rsi ; pop r12 ; pop rbp ; ret
0x0000020000003a7a : pop rsi ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000657ee : pop rsi ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001bc5e7 : pop rsi ; pop r12 ; pop rdi ; pop rcx ; ret
0x000002000001aebd : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200001011af : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000003f36 : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000239660 : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000005281 : pop rsi ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000062bf : pop rsi ; pop r12 ; pop rdi ; ret
0x00000200000ae230 : pop rsi ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000006503c : pop rsi ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000008a4ff : pop rsi ; pop r12 ; pop rsi ; pop rbx ; ret
0x000002000048c704 : pop rsi ; pop r12 ; pop rsi ; ret
0x00000200000043b2 : pop rsi ; pop r12 ; ret
0x0000020000006af7 : pop rsi ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200000727ef : pop rsi ; pop r13 ; pop r12 ; pop rbx ; ret
0x00000200000efe1e : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000219f3 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000e069e : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000429899 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x000002000000b1ea : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000005e3b : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000011bd5 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000d206 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002673f : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000103c7 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000002702 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; ret
0x0000020000017f6a : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000018b7e : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000050309 : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000c86c4 : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000032465 : pop rsi ; pop r13 ; pop r12 ; pop rsi ; ret
0x0000020000017e23 : pop rsi ; pop r13 ; pop r12 ; ret
0x00000200004245b0 : pop rsi ; pop r13 ; pop rbp ; pop rbx ; ret
0x000002000023133e : pop rsi ; pop r13 ; pop rbp ; ret
0x00000200000a8c5e : pop rsi ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000004f033 : pop rsi ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000c27f9 : pop rsi ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200004281fb : pop rsi ; pop r13 ; pop rdi ; pop rbx ; ret
0x00000200000cdc65 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x00000200000822a0 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004dbc82 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000031d21 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cfa2a : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000cbf7f : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000000473e : pop rsi ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000408df : pop rsi ; pop r13 ; pop rdi ; ret
0x0000020000062205 : pop rsi ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000048d55b : pop rsi ; pop r13 ; pop rsi ; pop rbp ; ret
0x00000200003f84f3 : pop rsi ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b777e : pop rsi ; pop r13 ; pop rsi ; ret
0x0000020000017b44 : pop rsi ; pop r13 ; ret
0x0000020000151188 : pop rsi ; pop r15 ; ret
0x00000200000cdc69 : pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000000b1f0 : pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000cdfb2 : pop rsi ; pop rbp ; pop rcx ; ret
0x00000200000028c3 : pop rsi ; pop rbp ; ret
0x0000020000003f3a : pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000d20c : pop rsi ; pop rbx ; ret
0x000002000000f379 : pop rsi ; pop rcx ; ret
0x0000020000056a83 : pop rsi ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000030030 : pop rsi ; pop rdi ; pop rbp ; ret
0x000002000015274f : pop rsi ; pop rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000200006d357e : pop rsi ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000075ded : pop rsi ; pop rdi ; pop rbx ; ret
0x000002000001bf48 : pop rsi ; pop rdi ; pop rcx ; ret
0x0000020000015e58 : pop rsi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000008480 : pop rsi ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000031ba7 : pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003a9be : pop rsi ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000012c6bc : pop rsi ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000089ad : pop rsi ; pop rdi ; pop rsi ; ret
0x00000200000024c6 : pop rsi ; pop rdi ; ret
0x000002000001a980 : pop rsi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009bed3 : pop rsi ; pop rsi ; pop rbp ; ret
0x00000200000690e2 : pop rsi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000058556 : pop rsi ; pop rsi ; pop rbx ; ret
0x000002000000f6b3 : pop rsi ; pop rsi ; pop rcx ; ret
0x0000020000409326 : pop rsi ; pop rsi ; ret
0x0000020000003818 : pop rsi ; ret
0x00000200007ca736 : pop rsi ; ret 0
0x0000020000522071 : pop rsi ; ret 0x3dff
0x000002000062713f : pop rsi ; ret 0x45ff
0x00000200004468c4 : pop rsi ; ret 0x48ff
0x000002000051283a : pop rsi ; ret 0xffbe
0x00000200005369ce : pop rsi ; ret 0xffdc
0x00000200006f4a88 : pop rsi ; ret 0xfff
0x000002000018242e : pop rsi ; ret 0xfff6
0x0000020000176118 : pop rsi ; ret 0xfff9
0x000002000006ef9f : pop rsi ; ror byte ptr [rax - 1], 1 ; ret
0x00000200003ca450 : pop rsi ; sbb byte ptr [rcx - 0x3f], cl ; out dx, al ; or al, 0x8b ; ret
0x00000200003f10bd : pop rsi ; sbb dword ptr [rax], eax ; mov eax, r9d ; ret
0x000002000023637e : pop rsi ; stc ; adc dword ptr [rax], eax ; ret
0x0000020000228383 : pop rsi ; sub al, 0 ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001235b2 : pop rsi ; sub byte ptr [rax], al ; call rax
0x0000020000017159 : pop rsi ; xor byte ptr [rcx - 0x75], al ; ret
0x00000200006eee1b : pop rsp ; adc ah, byte ptr [rax] ; cmp bh, bh ; adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x00000200006eeeff : pop rsp ; adc ah, byte ptr [rax] ; ret 0xff
0x00000200006eee17 : pop rsp ; adc cl, byte ptr [rax] ; and eax, 0x3820125c ; call qword ptr [rdx]
0x00000200006eee03 : pop rsp ; adc cl, byte ptr [rax] ; and eax, 0xe20125c ; call qword ptr [rdx]
0x00000200000b806a : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rbx], dh ; jmp qword ptr [rcx]
0x0000020000148a25 : pop rsp ; add byte ptr [rax], al ; add cl, ch ; adc dl, dh ; add byte ptr [rax], al ; ret
0x0000020000237bab : pop rsp ; add byte ptr [rdx - 0x77], al ; ret
0x000002000041aeef : pop rsp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000002000014c9f7 : pop rsp ; add rsp, 8 ; ret
0x0000020000021847 : pop rsp ; and al, 0x10 ; pop rdi ; ret
0x0000020000091e14 : pop rsp ; and al, 0x10 ; ret
0x000002000007f39f : pop rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x000002000003b9c1 : pop rsp ; and al, 0x20 ; add rsp, 0x10 ; pop rdi ; ret
0x00000200007d1478 : pop rsp ; and al, 0x20 ; call 0x200003fec86
0x00000200005f897d : pop rsp ; and al, 0x20 ; call r10
0x00000200005852d5 : pop rsp ; and al, 0x20 ; jmp 0x200003ec385
0x00000200000a1194 : pop rsp ; and al, 0x20 ; pop rdi ; ret
0x0000020000706006 : pop rsp ; and al, 0x24 ; jmp 0x20000705fd2
0x000002000070f7f0 : pop rsp ; and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200000269a9 : pop rsp ; and al, 0x28 ; pop rbp ; ret
0x0000020000402a2c : pop rsp ; and al, 0x28 ; pop rdi ; ret
0x0000020000074f3a : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000040e33 : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000034ad0 : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rcx ; ret
0x0000020000101e4d : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rdi ; jmp rax
0x0000020000004099 : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000257a5 : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000706a1 : pop rsp ; and al, 0x30 ; add rsp, 0x38 ; ret
0x000002000058e010 : pop rsp ; and al, 0x30 ; call r11
0x000002000020774c : pop rsp ; and al, 0x30 ; jmp 0x20000207718
0x00000200003efd4c : pop rsp ; and al, 0x30 ; jmp 0x200003efd6f
0x00000200005f4e8e : pop rsp ; and al, 0x30 ; jmp 0x200005510ca
0x00000200004ce89b : pop rsp ; and al, 0x30 ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000052ddcf : pop rsp ; and al, 0x30 ; pop rbx ; jmp r10
0x0000020000004023 : pop rsp ; and al, 0x38 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005c06a : pop rsp ; and al, 0x38 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200005303ed : pop rsp ; and al, 0x38 ; lea rcx, qword ptr [rsp + 0x20] ; call rdi
0x0000020000026e2f : pop rsp ; and al, 0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000076d23 : pop rsp ; and al, 0x40 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004ce564 : pop rsp ; and al, 0x40 ; add rsp, 0x20 ; pop rsi ; ret
0x0000020000023bc3 : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000f6443 : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000d0ca5 : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rcx ; ret
0x000002000000c143 : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013575e : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000201584 : pop rsp ; and al, 0x40 ; call rax
0x00000200005d9101 : pop rsp ; and al, 0x40 ; jmp 0x200004c5405
0x00000200007d1678 : pop rsp ; and al, 0x40 ; jmp 0x200007d1644
0x00000200005df867 : pop rsp ; and al, 0x40 ; mov rcx, rbx ; call 0x2000020bce5
0x00000200001031b0 : pop rsp ; and al, 0x48 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000006f4b9 : pop rsp ; and al, 0x48 ; add rsp, 0x20 ; pop rsi ; ret
0x000002000047b726 : pop rsp ; and al, 0x48 ; add rsp, 0x28 ; pop rdi ; pop rsi ; ret
0x000002000055bb89 : pop rsp ; and al, 0x48 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000003c8c7 : pop rsp ; and al, 0x48 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067cb2b : pop rsp ; and al, 0x48 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000009ecbf : pop rsp ; and al, 0x48 ; add rsp, 0x38 ; ret
0x000002000000bc69 : pop rsp ; and al, 0x50 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000502334 : pop rsp ; and al, 0x50 ; add rsp, 0x30 ; pop rsi ; ret
0x00000200006d7513 : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop r14 ; ret
0x000002000043541f : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000074f0 : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000138985 : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop rsi ; ret
0x00000200004473d7 : pop rsp ; and al, 0x50 ; mov rcx, rbx ; call 0x2000006d289
0x00000200003f737b : pop rsp ; and al, 0x54 ; call r10
0x00000200001da8c7 : pop rsp ; and al, 0x58 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000053db41 : pop rsp ; and al, 0x58 ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000056eb0 : pop rsp ; and al, 0x58 ; add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x0000020000131eaf : pop rsp ; and al, 0x58 ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000057729 : pop rsp ; and al, 0x58 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000062d7ff : pop rsp ; and al, 0x58 ; add rsp, 0x40 ; pop rsi ; ret
0x000002000045a54a : pop rsp ; and al, 0x60 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000b6da0 : pop rsp ; and al, 0x60 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000c918c : pop rsp ; and al, 0x60 ; add rsp, 0x40 ; pop rsi ; ret
0x000002000011481a : pop rsp ; and al, 0x60 ; add rsp, 0x50 ; pop rbp ; ret
0x000002000000c783 : pop rsp ; and al, 0x60 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001fde00 : pop rsp ; and al, 0x68 ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000799aa9 : pop rsp ; and al, 0x68 ; add rsp, 0x50 ; pop rsi ; ret
0x000002000062c7d6 : pop rsp ; and al, 0x68 ; call 0x2000024d006
0x00000200003fd5e6 : pop rsp ; and al, 0x68 ; call r10
0x00000200001bfa5c : pop rsp ; and al, 0x6c ; mov rcx, qword ptr [rsp + 0x68] ; call rax
0x0000020000114a0e : pop rsp ; and al, 0x70 ; add rsp, 0x50 ; pop rdi ; ret
0x000002000013ba65 : pop rsp ; and al, 0x70 ; add rsp, 0x60 ; pop rbp ; ret
0x000002000002d9fd : pop rsp ; and al, 0x70 ; add rsp, 0x60 ; pop rdi ; ret
0x00000200002495b4 : pop rsp ; and al, 0x70 ; mov rax, rdx ; jmp 0x200002495c3
0x00000200000fa136 : pop rsp ; and al, 0x78 ; add rsp, 0x50 ; pop rbp ; ret
0x00000200002072c1 : pop rsp ; and al, 0x78 ; add rsp, 0x60 ; pop rbp ; ret
0x00000200003c6906 : pop rsp ; and al, 0x78 ; add rsp, 0x60 ; pop rdi ; ret
0x00000200003e44e1 : pop rsp ; and al, 8 ; imul eax, ecx ; xor eax, r10d ; ret
0x000002000008825b : pop rsp ; and al, 8 ; mov al, dl ; ret
0x00000200001b81f0 : pop rsp ; and al, 8 ; mov al, r10b ; ret
0x0000020000216959 : pop rsp ; and al, 8 ; mov al, r8b ; ret
0x00000200007a30bf : pop rsp ; and al, 8 ; mov eax, 1 ; ret
0x00000200003ff810 : pop rsp ; and al, 8 ; mov eax, edx ; ret
0x0000020000121625 : pop rsp ; and al, 8 ; mov eax, r10d ; ret
0x0000020000005c56 : pop rsp ; and al, 8 ; mov eax, r11d ; ret
0x00000200001b3a60 : pop rsp ; and al, 8 ; mov eax, r8d ; ret
0x000002000000a55d : pop rsp ; and al, 8 ; mov eax, r9d ; ret
0x00000200001b7418 : pop rsp ; and al, 8 ; mov qword ptr [r8], r11 ; ret
0x0000020000039117 : pop rsp ; and al, 8 ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000797371 : pop rsp ; and al, 8 ; mov rax, r10 ; ret
0x000002000012a491 : pop rsp ; and al, 8 ; mov rax, r11 ; ret
0x000002000052a04a : pop rsp ; and al, 8 ; mov rax, r8 ; ret
0x00000200007109e3 : pop rsp ; and al, 8 ; mov rax, r9 ; ret
0x00000200000092c4 : pop rsp ; and al, 8 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000000bcf9 : pop rsp ; and al, 8 ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000398c2 : pop rsp ; and al, 8 ; mov rsi, qword ptr [rsp + 0x10] ; ret
0x000002000023635e : pop rsp ; and al, 8 ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x00000200006863a9 : pop rsp ; and al, 8 ; movzx eax, r9w ; ret
0x000002000001e0ba : pop rsp ; and al, 8 ; ret
0x00000200000f8b02 : pop rsp ; and al, byte ptr [rax] ; mov rbx, rdx ; call 0x20000074d18
0x00000200007d2b27 : pop rsp ; call 0x2000000ed33
0x0000020000050898 : pop rsp ; call qword ptr [rdx]
0x0000020000179a08 : pop rsp ; cli ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200001a35ca : pop rsp ; dec dword ptr [rcx - 0x75] ; ret 0x3b48
0x00000200007c3d18 : pop rsp ; enter -0x49, -0xa ; ret 0xf02
0x00000200004f40b1 : pop rsp ; jne 0x200004f40ad ; xor al, al ; ret
0x00000200005a79ae : pop rsp ; jns 0x200005a79a0 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006ad02d : pop rsp ; lea rdx, qword ptr [rsp + 0x58] ; call rax
0x00000200007bbac4 : pop rsp ; mov ah, 0xff ; ret
0x000002000071a172 : pop rsp ; mov al, 0xff ; add rsp, 0x28 ; ret
0x00000200004cb58f : pop rsp ; mov eax, edx ; jmp 0x200004cb537
0x00000200006ca501 : pop rsp ; mov rax, qword ptr [rdx + 0x18] ; add rax, rcx ; ret
0x00000200000f41ab : pop rsp ; or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000151184 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000200000097b8 : pop rsp ; pop rbp ; pop rbx ; ret
0x0000020000006afb : pop rsp ; pop rbp ; ret
0x000002000005f632 : pop rsp ; pop rbx ; ret
0x00000200000998d1 : pop rsp ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000003a7c : pop rsp ; pop rdi ; pop rbp ; ret
0x00000200000657f0 : pop rsp ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000071a0b : pop rsp ; pop rdi ; pop rbx ; ret
0x00000200001bc5e9 : pop rsp ; pop rdi ; pop rcx ; ret
0x00000200003da99a : pop rsp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000000b1ee : pop rsp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000cdfb0 : pop rsp ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000005e3f : pop rsp ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000003f38 : pop rsp ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000d20a : pop rsp ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000026743 : pop rsp ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000005283 : pop rsp ; pop rdi ; pop rsi ; ret
0x0000020000002706 : pop rsp ; pop rdi ; ret
0x00000200004c4df8 : pop rsp ; pop rdx ; ret
0x0000020000017f6e : pop rsp ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000018b82 : pop rsp ; pop rsi ; pop rbp ; ret
0x000002000005030d : pop rsp ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000008a501 : pop rsp ; pop rsi ; pop rbx ; ret
0x0000020000032469 : pop rsp ; pop rsi ; ret
0x00000200003cd1f0 : pop rsp ; push qword ptr [rsp + rax + 0x41] ; mov al, dl ; ret
0x0000020000617da0 : pop rsp ; push rdx ; ret
0x00000200000043b4 : pop rsp ; ret
0x00000200006f3885 : pop rsp ; ret 0x1ff
0x0000020000131620 : pop rsp ; ret 0x3c
0x00000200003db353 : pop rsp ; ret 0x44ff
0x0000020000480e5c : pop rsp ; ret 0x4804
0x0000020000072981 : pop rsp ; ret 0x4808
0x000002000004941d : pop rsp ; ret 0x4810
0x00000200004573cb : pop rsp ; ret 0x48ff
0x000002000004dffd : pop rsp ; ret 0x4908
0x0000020000514f83 : pop rsp ; ret 0x4cff
0x00000200000bb08c : pop rsp ; ret 0x4f28
0x00000200006f38bd : pop rsp ; ret 0x65ff
0x0000020000083ba8 : pop rsp ; ret 0x6602
0x0000020000687e77 : pop rsp ; ret 0x7408
0x00000200006f394c : pop rsp ; ret 0x80ff
0x00000200005222f5 : pop rsp ; ret 0x85ff
0x00000200003db3f5 : pop rsp ; ret 0xe9ff
0x00000200006f38b5 : pop rsp ; ret 0xff
0x00000200005cac50 : pop rsp ; ret 0xffb1
0x000002000049b8e0 : pop rsp ; ret 0xffe5
0x00000200005bd016 : pop rsp ; ret 0xffe9
0x00000200005ebdfe : pop rsp ; ret 0xfff1
0x00000200005dcb88 : pop rsp ; ret 8
0x00000200004effc2 : pop rsp ; sar bh, 0xff ; ret
0x00000200007c4deb : pop rsp ; std ; dec dword ptr [rax + 0x63] ; enter 0x58b, 0x35 ; ret
0x00000200001237ab : pop rsp ; sub byte ptr [rax], al ; call rax
0x00000200006f38a0 : pop rsp ; xchg eax, esi ; ret 0xe9ff
0x000002000043609c : pop rsp ; xor al, byte ptr [rdi] ; add byte ptr [rbp - 0x75e68740], al ; ret
0x0000020000515006 : pop sp ; ret 0x48ff
0x000002000001b86c : popfq ; adc al, 0 ; ret
0x00000200004bd29f : popfq ; adc dword ptr [rax], eax ; mov rcx, rbx ; call 0x200000e7da9
0x00000200001d2e43 : popfq ; adc eax, dword ptr [rax] ; ret
0x00000200004b6544 : popfq ; add al, 0 ; add dh, dh ; ret
0x000002000060ebe7 : popfq ; add al, 0xa5 ; inc dword ptr [rbx - 0x7cb700f6] ; ret
0x000002000009aab9 : popfq ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200004e97e5 : popfq ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000043d1a8 : popfq ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x000002000068b860 : popfq ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x00000200006378b0 : popfq ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret
0x000002000014b245 : popfq ; add dword ptr [rax], eax ; add cl, ch ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000200004bb17f : popfq ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x0000020000143264 : popfq ; add eax, dword ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0x95e9
0x000002000048aa14 : popfq ; add ecx, ebp ; ret 0xffee
0x000002000077ba7c : popfq ; call 0x2004877ba99
0x00000200004a7ea1 : popfq ; clc ; add byte ptr [rax], al ; add bh, dh ; ret
0x000002000078783b : popfq ; clc ; or byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005f3564 : popfq ; cmc ; call rcx
0x000002000077ab55 : popfq ; cwde ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200007853da : popfq ; cwde ; or al, 0 ; add byte ptr [rcx + 0xf], al ; ret
0x0000020000699553 : popfq ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000200006663b4 : popfq ; dec dword ptr [rax - 0x7f] ; ret
0x000002000017d883 : popfq ; in al, dx ; dec dword ptr [rax - 0x75] ; ret 0x3b48
0x00000200005bbb06 : popfq ; jbe 0x200005bbb09 ; inc dword ptr [rcx - 9] ; rol dword ptr [rcx - 0xa], cl ; ret
0x00000200001934f1 : popfq ; lock dec dword ptr [rcx - 0x75] ; ret
0x0000020000600f39 : popfq ; mov bl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x000002000053e673 : popfq ; mov dl, 0xff ; add rsp, 0x38 ; ret
0x0000020000500d82 : popfq ; mov edi, 0xc48348ff ; jo 0x20000500ded ; ret
0x00000200005fc704 : popfq ; mov esi, esi ; push qword ptr [rbx + 4] ; or eax, 0xffffffff ; ret
0x0000020000530dd0 : popfq ; mov esp, 0xc48348ff ; jo 0x20000530e3b ; ret
0x0000020000135e4b : popfq ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004880be : popfq ; nop ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x7d89
0x0000020000070f3b : popfq ; or al, 0 ; add rsp, 0x38 ; ret
0x0000020000435b82 : popfq ; or dword ptr [rax], eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000560ddf : popfq ; or dword ptr [rax], eax ; or eax, 0xffffffff ; ret
0x0000020000788aa4 : popfq ; pop rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000788a4f : popfq ; push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000175aeb : popfq ; ret
0x0000020000452a62 : popfq ; ret 0x33ff
0x00000200007bc24b : popfq ; ret 0x66ff
0x0000020000589d1b : popfq ; ret 0x9ce9
0x0000020000711c1b : popfq ; ret 0xffaf
0x00000200003eb5df : popfq ; ret 0xffd6
0x00000200003fb32f : popfq ; ret 0xffe5
0x00000200006332bf : popfq ; sar edi, -0x75 ; ret
0x00000200005f6467 : popfq ; sbb al, 0x15 ; add al, ch ; cmp al, 0 ; ret 0x48ff
0x000002000071c148 : popfq ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000024c5aa : prefetchw byte ptr [rcx] ; ret
0x000002000020270a : psubsb mm0, qword ptr [rax - 0x740018d6] ; ret
0x000002000071dfc7 : psubsb mm1, qword ptr [rdi - 0x740000d0] ; ret
0x000002000005f346 : psubsb mm2, qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000436f9a : psubsb mm5, qword ptr [rdi + rdi*2 + 0x558bffc4] ; ret
0x0000020000569046 : push -0x137cb73d ; sub byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000017ec22 : push -0x1517ffe6 ; ret
0x0000020000581009 : push -0x16000001 ; ret 0xe5f3
0x000002000059cd14 : push -0x160974b7 ; xchg eax, edx ; jmp rdi
0x00000200003d607d : push -0x16700000 ; ret 0xff5a
0x000002000023c5f1 : push -0x16ffffff ; ret
0x0000020000623aeb : push -0x1726b573 ; lahf ; ret 0x48ff
0x00000200004602c1 : push -0x173074b8 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000002000051589e : push -0x1733ccb8 ; leave ; push rbx ; ret 0x48ff
0x000002000067e8d0 : push -0x1733ccb8 ; xchg eax, edi ; ret
0x0000020000518486 : push -0x17fffffe ; int1 ; ret
0x00000200005d61f4 : push -0x17ffffff ; xchg eax, edi ; pop rsp ; ret
0x0000020000232810 : push -0x1c74b6f0 ; pop rdi ; ret
0x000002000043a850 : push -0x3274b7d0 ; call 0x20000056a8f
0x000002000001f30b : push -0x3333333d ; mov eax, dword ptr [rcx] ; ret
0x000002000050315f : push -0x3d00fff2 ; jmp 0x2000050314c
0x0000020000697ff9 : push -0x3ffcb8 ; ret
0x00000200004685fe : push -0x48f0e115 ; ret
0x00000200005fc364 : push -0x53e1609 ; or al, 0x8b ; ret 0xe8c1
0x00000200000fd444 : push -0x674b3e8 ; call 0x200000e9733
0x000002000046ef8b : push -0x72b78e15 ; add cl, byte ptr [r8 + 0x3b] ; ret 0x5277
0x0000020000088f62 : push -0x74000001 ; ret
0x000002000059daa4 : push -0x74001198 ; ret
0x00000200005ecca4 : push -0x740017d2 ; ret
0x00000200006318a4 : push -0x74001ad6 ; ret
0x0000020000458894 : push -0x740020b9 ; ret
0x00000200006a1df0 : push -0x7400276a ; ret
0x000002000053e754 : push -0x74004dca ; ret
0x00000200003eba5f : push -0x7400ccbb ; ret 0x348
0x0000020000146d73 : push -0x7437dcb7 ; ret 0xbb83
0x00000200005f1925 : push -0x74b3000b ; ret 0x8d48
0x000002000019d3d9 : push -0x74b3000e ; ret
0x0000020000483340 : push -0x74b6fe4e ; iretd ; call r12
0x0000020000202215 : push -0x74b70d75 ; jmp 0x2000018e51d
0x000002000061e7a4 : push -0x74b7fc15 ; ret
0x00000200005dc6e3 : push -0x74f776b8 ; ret
0x000002000062cfcf : push -0x74fc76b8 ; ret 0x8b48
0x000002000021ef08 : push -0x74ffb1fb ; ret
0x000002000040d415 : push -0x74ffe7be ; ret
0x000002000000d1f6 : push -0x74ffeab4 ; ret
0x0000020000610e70 : push -0x76bbdc15 ; ret
0x00000200000c8054 : push -0x76f48c00 ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000002000055073f : push -0x7cb7000f ; ret
0x0000020000043377 : push -0x7ce6173f ; loopne 0x20000043386 ; ret
0x0000020000043376 : push -0x7ce6173f ; loopne 0x20000043387 ; ret
0x00000200006d1252 : push -0x7df005c5 ; ret 0xfffb
0x000002000008a004 : push -0x93e6df1 ; ret 0xf20
0x0000020000584b4b : push -0x9fffffe ; ret
0x0000020000189b22 : push -0x9ffffff ; ret 0x7501
0x00000200000f66ec : push -0x9ffffff ; ret 0xf01
0x00000200003dda46 : push -0xd179e9b ; jmp rsi
0x000002000040123a : push -0xda8bf0 ; ret 0xd33b
0x0000020000072463 : push 0x11 ; add byte ptr [rcx - 0x75], al ; ret
0x00000200007d8868 : push 0x1407dbe ; add byte ptr [rax], al ; add byte ptr [rax], bl ; ret 0x407d
0x0000020000522524 : push 0x14e80022 ; push rax ; ret
0x00000200004eea43 : push 0x24448948 ; jo 0x200004eeac7 ; movsxd rsi, esi ; ret 0xf04
0x00000200003f945d : push 0x24448948 ; sub byte ptr [rbp + 0xf], cl ; ret 0x8d48
0x00000200001319a4 : push 0x244c8948 ; and byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200007c7ef0 : push 0x244c8d48 ; cmp byte ptr [rax - 0x7d], cl ; ret 0xe804
0x00000200001bbd01 : push 0x24548b48 ; call rax
0x000002000061a992 : push 0x26 ; ret
0x000002000007414c : push 0x30c48348 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000861af : push 0x30c48348 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200000d41bc : push 0x30c48348 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000050b35 : push 0x30c48348 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000142c5f : push 0x33 ; sal dh, cl ; ret
0x00000200004e3a9c : push 0x331b048d ; ret
0x0000020000039864 : push 0x3b ; sal dword ptr [rbp + rcx - 0x75], cl ; ret 0xf49
0x000002000049949e : push 0x40c48348 ; pop r13 ; ret
0x00000200007d53c8 : push 0x40c48348 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000ed693 : push 0x40c48348 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000b0cde : push 0x40c48348 ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000043a32 : push 0x40c48348 ; pop r14 ; ret
0x000002000008f4c9 : push 0x40c48348 ; pop r15 ; ret
0x00000200000c72d6 : push 0x40c48348 ; pop rbp ; ret
0x000002000043b83b : push 0x40c48348 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000007c9a1 : push 0x40c48348 ; pop rdi ; ret
0x0000020000025470 : push 0x40c48348 ; pop rsi ; ret
0x000002000079d062 : push 0x44 ; ret
0x0000020000172957 : push 0x44 ; stc ; dec dword ptr [rax - 0x75] ; ret
0x00000200005b9508 : push 0x440ffffb ; ret
0x0000020000517505 : push 0x48c48348 ; ret
0x00000200006b06f0 : push 0x48ffe847 ; add esp, 0x38 ; ret
0x0000020000209704 : push 0x48fff315 ; add esp, 0x60 ; pop rbx ; ret
0x0000020000426a58 : push 0x48fff828 ; add esp, 0x30 ; pop rbx ; ret
0x0000020000141104 : push 0x48ffff9b ; add esp, 0x60 ; pop rbx ; ret
0x000002000021ef6f : push 0x4e ; add byte ptr [rax + rax*8 - 0x74bbed8c], al ; ret 0x8b49
0x000002000021ef34 : push 0x4e ; add byte ptr [rax + rax*8 - 0x74bbee8c], al ; ret 0x8b49
0x00000200004b6942 : push 0x50 ; ret 0xebff
0x0000020000710175 : push 0x50c48348 ; pop r14 ; ret
0x000002000008ab7c : push 0x50c48348 ; pop rbp ; ret
0x00000200000827c6 : push 0x50c48348 ; pop rdi ; ret
0x00000200003e1126 : push 0x50c48348 ; pop rsi ; ret
0x0000020000717fd6 : push 0x51 ; add dword ptr [rax], eax ; ret
0x0000020000787945 : push 0x53158d48 ; ret 0xffb7
0x0000020000623fde : push 0x55 ; loopne 0x20000623fe9 ; add rsp, 0x68 ; ret
0x0000020000496c11 : push 0x5b5f5d41 ; pop rbp ; ret
0x00000200001176be : push 0x5c415d41 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004d1601 : push 0x5d415f41 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000060a62f : push 0x5d5b5e5f ; ret
0x00000200000a31c6 : push 0x5d5f5e41 ; pop rbx ; ret
0x00000200000b7fea : push 0x5e415f41 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000521f02 : push 0x60 ; ret 0x8bff
0x0000020000626692 : push 0x69 ; ret 0x40ff
0x00000200001cce92 : push 0x6b ; out dx, eax ; dec dword ptr [rax - 0x75] ; ret
0x000002000016df3f : push 0x70418949 ; ret
0x00000200004728a2 : push 0x70c48348 ; pop rsi ; ret
0x00000200006eab99 : push 0x71 ; or cl, byte ptr [rbx] ; mov ch, 0x49 ; ret
0x0000020000243814 : push 0x7208fa83 ; sbb al, 0x8b ; ret 0xc148
0x0000020000442c82 : push 0x73 ; ret
0x00000200000f9c63 : push 0x74d28548 ; sub eax, dword ptr [rbp - 0x75] ; ret 0xdb85
0x0000020000086387 : push 0x75023883 ; ret
0x00000200007d0fe6 : push 0x7b ; ret 0x8bff
0x000002000064035a : push 0x7d ; ret 0x48ff
0x000002000051cf7f : push 0x7d358b44 ; ret 0xffe8
0x000002000017a272 : push 0x84f8b48 ; call r8
0x000002000023d74c : push 0x8b ; ret 0xe083
0x000002000069ece6 : push 0x96 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000452482 : push 0xa9 ; ret 0xebff
0x00000200006bccd2 : push 0xae ; ret
0x00000200007b3887 : push 0xb4 ; call qword ptr [rbx]
0x000002000079d324 : push 0xb6 ; jmp qword ptr [rcx]
0x00000200005df86e : push 0xc4 ; ret 0xc6ff
0x00000200000c84b8 : push 0xd ; add byte ptr [rdi + rcx - 0x44], al ; ret
0x0000020000427aca : push 0xe ; in eax, dx ; dec dword ptr [rax + 3] ; ret 0x8948
0x00000200005abc21 : push 0xe3 ; jmp 0x200261d482c
0x0000020000711155 : push 0xe8 ; mov esi, 0x8b4c00ff ; ret 0x8b48
0x000002000064bf42 : push 0xeb ; ret 0xe8ff
0x00000200001a3a73 : push 0xf3 ; dec dword ptr [rax - 0x75] ; ret
0x000002000011e6c0 : push 0xf5 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000100578 : push 0xf6 ; ret
0x000002000065c958 : push 2 ; add al, al ; add rsp, 0x70 ; pop rbp ; ret
0x000002000079e993 : push 2 ; add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x000002000007e453 : push 3 ; add byte ptr [rax], al ; xor bh, 0xff ; push rsi ; ret
0x0000020000587b02 : push 5 ; mov esp, 0x42e990ff ; ret 0xffe6
0x00000200003e5c32 : push 9 ; ret 0xebff
0x000002000015758a : push qword ptr [r13 - 0xe] ; mov rax, r11 ; ret
0x00000200000a0e31 : push qword ptr [rax + rbx - 0x75] ; ret 0x41f0
0x00000200005257c6 : push qword ptr [rax + rcx + 0x49] ; mov ecx, edi ; call 0x20000148079
0x00000200003cab34 : push qword ptr [rax + rcx - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000200005ef365 : push qword ptr [rax + rcx - 0x7d] ; ret
0x00000200006b476c : push qword ptr [rax + rcx - 0x7f] ; jmp qword ptr [rbx]
0x0000020000778107 : push qword ptr [rax] ; sar bh, cl ; call qword ptr [rsi]
0x000002000049f31e : push qword ptr [rbp + 0x44] ; mov dword ptr [rdx], eax ; mov eax, ecx ; ret
0x00000200000fd5c8 : push qword ptr [rbp + 0xb] ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000083ba3 : push qword ptr [rbp + 0xf] ; mov bh, 0x5c ; ret 0x6602
0x00000200004cf0ed : push qword ptr [rbp + 0xf] ; mov dh, 0x47 ; sub byte ptr [rbx], bh ; ret
0x000002000013ac81 : push qword ptr [rbp + 1] ; ret
0x00000200000fb31b : push qword ptr [rbp + 3] ; mov rdx, r14 ; call qword ptr [rdi]
0x000002000020a19f : push qword ptr [rbp + 3] ; xor eax, eax ; ret
0x0000020000563ebf : push qword ptr [rbp + 5] ; add rsp, 0x58 ; ret
0x000002000069e3cb : push qword ptr [rbp + 5] ; lea eax, dword ptr [r9 + 0xb] ; ret
0x000002000053ae0d : push qword ptr [rbp + 6] ; mov eax, 1 ; ret
0x00000200000c3a33 : push qword ptr [rbp + rax + 0x48] ; add esp, 0x28 ; ret
0x00000200007cf7a5 : push qword ptr [rbp + rax - 0x18] ; ret
0x0000020000050fb0 : push qword ptr [rbp + rbp*8 + 0x49] ; mov eax, eax ; ret
0x00000200007a39b3 : push qword ptr [rbp + rbx - 0x75] ; ret 0xff0
0x00000200004c6ea9 : push qword ptr [rbp + rcx + 0x48] ; mov ecx, edi ; call 0x200000e7219
0x000002000023cef4 : push qword ptr [rbp + rcx - 0x15] ; in eax, 0x33 ; ror byte ptr [rax - 0x7d], cl ; ret
0x000002000052bc57 : push qword ptr [rbp + rsi - 0x18] ; int1 ; ret 0xffc1
0x00000200007a8f1f : push qword ptr [rbp + rsi - 0x75] ; ret
0x0000020000781596 : push qword ptr [rbp - 0x11] ; mov rax, rdx ; jmp 0x200007815a5
0x00000200007831e2 : push qword ptr [rbp - 0x11] ; mov rax, rdx ; jmp 0x200007831fa
0x00000200001d5562 : push qword ptr [rbp - 0x12] ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x0000020000784e82 : push qword ptr [rbp - 0x12] ; mov rax, rdx ; jmp 0x20000784e91
0x000002000078510b : push qword ptr [rbp - 0x12] ; mov rax, rdx ; jmp 0x2000078511a
0x00000200002409f1 : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x20000240a00
0x000002000024658f : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x2000024659e
0x0000020000246861 : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x20000246895
0x000002000024a903 : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x2000024a912
0x000002000024aaa1 : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x2000024aab0
0x000002000024abea : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x2000024abf9
0x0000020000785b3e : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x20000785b4d
0x0000020000789832 : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x20000789841
0x000002000078261c : push qword ptr [rbp - 0x14] ; mov rax, rdx ; jmp 0x2000078262b
0x000002000078bb1f : push qword ptr [rbp - 0x14] ; mov rax, rdx ; jmp 0x2000078bb2e
0x000002000078c3db : push qword ptr [rbp - 0x14] ; mov rax, rdx ; jmp 0x2000078c3ea
0x000002000023e299 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x2000023e2a8
0x0000020000245a43 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x20000245a52
0x000002000024bd97 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x2000024bda6
0x000002000077f1d6 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x2000077f1e5
0x000002000077ff40 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x2000077ff4f
0x0000020000780983 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x20000780992
0x0000020000781bf2 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x20000781c01
0x0000020000783e48 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x20000783e57
0x00000200007845cb : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x200007845da
0x0000020000787630 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x2000078763f
0x0000020000788a20 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x20000788a2f
0x0000020000789ba8 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x20000789bb7
0x0000020000789e0e : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x20000789e1d
0x00000200002456c2 : push qword ptr [rbp - 0x15] ; xor r11d, r11d ; mov rax, rdx ; jmp 0x200002456d7
0x00000200001459f5 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000145a04
0x00000200001469f8 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000146a07
0x0000020000146cea : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000146cf9
0x00000200001471c7 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x200001471d6
0x000002000023bfc8 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000023bfd7
0x000002000023c66c : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000023c67b
0x000002000023c841 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000023c850
0x000002000023d0ff : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000023d10e
0x000002000023d205 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000023d214
0x000002000023da6b : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000023da7a
0x000002000023deac : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000023debb
0x000002000023dfc2 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000023e034
0x000002000023e16b : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000023e17a
0x000002000023f26b : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000023f27a
0x00000200002424b8 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x200002424c7
0x0000020000242a21 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000242a30
0x0000020000242b29 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000242b38
0x0000020000243d86 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000243d95
0x0000020000243fbc : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000243fcb
0x00000200002452be : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x200002452cd
0x0000020000245c83 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000245c92
0x0000020000246ed2 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000246ee1
0x0000020000247778 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000247787
0x000002000077969f : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000779709
0x0000020000779a3f : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000779a4e
0x0000020000783a4e : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000783a5d
0x000002000078535b : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000078536a
0x0000020000786f43 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000786f52
0x0000020000787159 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000787168
0x00000200007878fd : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000078790c
0x0000020000788657 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000788666
0x0000020000789298 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x200007892a7
0x000002000023fa67 : push qword ptr [rbp - 0x16] ; xor esi, esi ; mov rax, rdx ; jmp 0x2000023fa7a
0x000002000023fd0b : push qword ptr [rbp - 0x16] ; xor r11d, r11d ; mov rax, rdx ; jmp 0x2000023fd20
0x000002000023d912 : push qword ptr [rbp - 0x16] ; xor r13d, r13d ; mov rax, rdx ; jmp 0x2000023d927
0x000002000077f2f8 : push qword ptr [rbp - 0x17] ; mov rax, rdx ; jmp 0x2000077f307
0x00000200001e4b1b : push qword ptr [rbp - 0x17] ; xor eax, eax ; ret
0x00000200003d9a28 : push qword ptr [rbp - 0x29] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d1e4d : push qword ptr [rbp - 0x34] ; ret
0x000002000014036f : push qword ptr [rbp - 0x3e] ; jmp 0x20000140353
0x0000020000221b23 : push qword ptr [rbp - 0xa] ; ret 0x7403
0x000002000015758b : push qword ptr [rbp - 0xe] ; mov rax, r11 ; ret
0x000002000040a0e8 : push qword ptr [rbp - 0xe] ; ret
0x0000020000130da3 : push qword ptr [rbp - 0xf] ; ret
0x00000200005fc707 : push qword ptr [rbx + 4] ; or eax, 0xffffffff ; ret
0x0000020000705d7f : push qword ptr [rbx + 6] ; mov eax, 1 ; ret
0x0000020000074684 : push qword ptr [rbx + rcx + 0x4d] ; test eax, eax ; jne 0x20000074695 ; ret
0x00000200004cf64a : push qword ptr [rbx + rdx - 0xa] ; ret
0x000002000010821f : push qword ptr [rbx + rdx*2 - 0xa] ; ret 0x7510
0x0000020000445a1e : push qword ptr [rbx] ; fild dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], 0x45 ; ret 0x8941
0x000002000004a242 : push qword ptr [rbx] ; fisttp dword ptr [rax + 0xb] ; ret 0x8b49
0x00000200007d4552 : push qword ptr [rbx] ; fisttp dword ptr [rax - 0x75] ; ret
0x0000020000177373 : push qword ptr [rbx] ; fucomi st(1) ; ret
0x0000020000459649 : push qword ptr [rbx] ; fucomi st(3) ; mov ch, 0x8b ; ret
0x000002000049fa35 : push qword ptr [rbx] ; idiv byte ptr [rbx] ; ret 0xb841
0x000002000044fcd1 : push qword ptr [rbx] ; in eax, dx ; call 0x2000007a5e6
0x00000200005ef56c : push qword ptr [rbx] ; leave ; add rsp, 0x28 ; jmp 0x200006ab831
0x000002000017734e : push qword ptr [rbx] ; leave ; call qword ptr [rax]
0x00000200007aa656 : push qword ptr [rbx] ; leave ; movsxd rbx, eax ; call qword ptr [rip - 0x553d0a]
0x000002000049b9cf : push qword ptr [rbx] ; rol byte ptr [rcx + 0x3b], 0xd0 ; jbe 0x2000049b9e0 ; ret
0x00000200004a6ca3 : push qword ptr [rbx] ; ror byte ptr [rax + 0x3b], 0xa ; jne 0x200004a6cb4 ; ret
0x00000200007b84e0 : push qword ptr [rbx] ; ror byte ptr [rax - 0x39], 5 ; ret 0xb653
0x00000200000c8b58 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], 0x6c ; and al, 0x28 ; pop rdi ; ret
0x00000200004c7c70 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x200000f02ad
0x00000200000e0cf7 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000024d008
0x000002000061f47e : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000024d009
0x000002000053f5e1 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call r15
0x00000200003c7794 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret
0x0000020000510d23 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000024d008
0x0000020000625a2a : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000024d009
0x00000200007b6099 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; ret
0x000002000009c0a7 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbp + 0x5b], bl ; ret
0x0000020000073df8 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rsi + 0x5b], bl ; ret
0x000002000011fa2e : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000011fa99 ; ret
0x0000020000519d90 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000519dfb ; ret
0x0000020000623a74 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000200001cb1e8 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x00000200000de921 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rbx ; ret
0x0000020000516d04 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbp ; ret
0x00000200001c968b : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000200005fa0dd : push qword ptr [rbx] ; ror byte ptr [rbp - 0x75], cl ; ret
0x000002000046add2 : push qword ptr [rbx] ; ror byte ptr [rbp - 0x7b], 0xc0 ; je 0x2000046ade6 ; call r8
0x0000020000710e9d : push qword ptr [rbx] ; ror byte ptr [rcx - 0x40ad89f3], 0xff ; ret
0x00000200006235dc : push qword ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; leave ; call 0x2000024d009
0x00000200007c920d : push qword ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; ret 0xf749
0x00000200005b8a13 : push qword ptr [rbx] ; sal dh, cl ; ret
0x00000200006936df : push qword ptr [rbx] ; sar byte ptr [rax], 5 ; pushfq ; ret
0x00000200006cf17e : push qword ptr [rbx] ; shl byte ptr [rsi + 0x39], cl ; sbb dword ptr [rbp + rcx - 1], esi ; ret 0x8348
0x0000020000591b01 : push qword ptr [rbx] ; shr al, cl ; ret
0x000002000050c206 : push qword ptr [rbx] ; shr al, cl ; ret 0xffb5
0x00000200005bd3df : push qword ptr [rbx] ; shr cl, cl ; ret
0x00000200000bf80a : push qword ptr [rcx + rax - 0x3d] ; xor eax, eax ; ret
0x000002000009ed83 : push qword ptr [rcx + rbx - 0x75] ; ret 0x41f0
0x0000020000108638 : push qword ptr [rcx + rcx - 0xa] ; ret 0xf10
0x0000020000024401 : push qword ptr [rcx + rcx*2 - 0x75] ; ret
0x00000200005215a6 : push qword ptr [rdi + rax + 0x33] ; shr al, cl ; loopne 0x20000521622 ; ret 0x48ff
0x000002000069384e : push qword ptr [rdi + rax - 0x7c] ; leave ; jne 0x20000693861 ; mov al, 1 ; ret
0x00000200006355a0 : push qword ptr [rdi + rbp - 0x7d] ; ret
0x000002000069d7f4 : push qword ptr [rdi + rcx + 0x3b] ; ret 0xb75
0x000002000012d9cd : push qword ptr [rdx + 0x48c28a01] ; add esp, 0x28 ; ret
0x0000020000625c14 : push qword ptr [rdx + 0xd8d4801] ; ret 0xcdff
0x000002000068c59c : push qword ptr [rdx + rax - 1] ; ret
0x000002000077a638 : push qword ptr [rdx + rdx - 0x75] ; ret 0x341
0x00000200007060f1 : push qword ptr [rdx + rdx - 0x75] ; ret 0x8b49
0x000002000042a552 : push qword ptr [rdx] ; fild dword ptr [rdi + rcx + 0x20] ; ret 0xf45
0x0000020000483a81 : push qword ptr [rdx] ; ret
0x000002000013cd9b : push qword ptr [rdx] ; ror byte ptr [rax - 0x74b6eefc], 0xc3 ; ret
0x00000200000d513d : push qword ptr [rdx] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200000d51a8 ; ret
0x0000020000409a30 : push qword ptr [rsi + rax + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x00000200006245bd : push qword ptr [rsi + rax - 0x48] ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000684401 : push qword ptr [rsi + rax - 0x48] ; mov dword ptr [rcx], eax ; add al, al ; ret
0x00000200003cd1f1 : push qword ptr [rsp + rax + 0x41] ; mov al, dl ; ret
0x000002000005a1ee : push qword ptr [rsp + rsi*2 - 0xa] ; ret 0xf08
0x000002000061f880 : push r11 ; jo 0x2000061f874 ; ja 0x2000061f865 ; ret 0x48ff
0x000002000001e490 : push r12 ; call 0x2000001e4bd
0x0000020000612962 : push r13 ; ja 0x20000612955 ; xchg eax, esi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000020000612961 : push r13 ; ja 0x20000612956 ; xchg eax, esi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000020000645bbd : push r13 ; ret
0x0000020000534857 : push r14 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000ca87e : push r14 ; ret
0x000002000019292e : push r14 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000047f704 : push r15 ; jmp 0x2000047f9a9
0x00000200000ca07e : push r15 ; or eax, 0x200f4400 ; ret
0x0000020000031461 : push r8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000453d95 : push r8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000015af52 : push r8 ; call rax
0x0000020000031ae0 : push r8 ; je 0x20000031af3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006dcb22 : push r8 ; jmp 0x200006dcaec
0x00000200000ed5ac : push r8 ; jne 0x200000ed5bf ; sti ; add rsp, 0x28 ; ret
0x0000020000588f36 : push r8 ; lea r8, qword ptr [rbp - 0x30] ; mov edx, r14d ; call rax
0x0000020000122d58 : push r8 ; mov eax, r8d ; ret
0x000002000060fb7b : push r8 ; ret
0x0000020000040619 : push r8 ; shr eax, 0x18 ; and al, 1 ; ret
0x000002000040b23c : push rax ; adc al, 0xe8 ; pop rcx ; ret
0x00000200004f5920 : push rax ; adc al, ch ; sbb eax, 0x8148ffc0 ; ret
0x00000200001037b2 : push rax ; adc bl, dl ; loop 0x200001037bf ; ret 0x8389
0x000002000061ba84 : push rax ; adc byte ptr [rax - 1], cl ; ret 0x8348
0x000002000055e87e : push rax ; adc byte ptr [rbp + rcx - 1], dh ; ret 0x8349
0x00000200007109c4 : push rax ; adc byte ptr [rbx + 0x14394dc1], cl ; ret
0x00000200004c296c : push rax ; adc dh, dh ; ret 0x753f
0x000002000005c6c4 : push rax ; adc dh, dh ; ret 0xf01
0x000002000041a961 : push rax ; add al, 0 ; add byte ptr [rcx - 1], al ; ret
0x000002000023c524 : push rax ; add al, 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000706aaf : push rax ; add al, 0x48 ; add esp, 0x28 ; ret
0x00000200007060a8 : push rax ; add al, 0x73 ; jbe 0x2000070603d ; ret 0x3949
0x00000200004aa938 : push rax ; add al, 0x75 ; sbb al, byte ptr [rcx - 0x75] ; add byte ptr [rcx - 0x7b], al ; ret 0x4c75
0x00000200005e3557 : push rax ; add al, 0xf6 ; ret 0xf01
0x00000200004489f8 : push rax ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x00000200003d0210 : push rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000d4431 : push rax ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000069ab4f : push rax ; add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200007c275c : push rax ; add al, byte ptr [rbx + 0x440f0ff9] ; ret 0x8348
0x00000200001f9de4 : push rax ; add al, byte ptr [rdi + rcx + 0x22] ; ret 0x4c88
0x0000020000600d83 : push rax ; add bh, bh ; ret 0xb841
0x00000200005cd616 : push rax ; add bh, bh ; ret 0xb941
0x000002000011e9a0 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsi
0x00000200001488a5 : push rax ; add byte ptr [rax], al ; add cl, ch ; xchg eax, edx ; xlatb ; add byte ptr [rax], al ; ret
0x000002000049758f : push rax ; add byte ptr [rax], al ; je 0x200005ced1f ; ret
0x000002000022006f : push rax ; add byte ptr [rbx + 0x538fa505], cl ; add bh, bh ; ret
0x0000020000600c02 : push rax ; add byte ptr [rcx - 0x47], al ; and eax, 0xff000009 ; ret 0xb841
0x000002000022c5be : push rax ; add byte ptr [rcx - 0x77], cl ; mov al, 1 ; ret
0x00000200007d29b1 : push rax ; add cl, byte ptr [rbp + 0x75e85c48] ; ret
0x00000200001e99fb : push rax ; add cl, byte ptr [rbp - 0x75] ; fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x00000200004aa7ad : push rax ; add cl, byte ptr [rdi] ; ret 0xb983
0x00000200000770c0 : push rax ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x4a8
0x0000020000595df1 : push rax ; add dh, dh ; ret 0x7504
0x00000200003c9bce : push rax ; add dword ptr [rax + 3], ecx ; ror dword ptr [rax - 0x75], 1 ; ret 0x2b48
0x000002000042ed78 : push rax ; add dword ptr [rax - 0x75], ecx ; enter -0x2118, -0x17 ; ret
0x00000200001f75e5 : push rax ; add dword ptr [rax - 0x7d], ecx ; and al, 0x20 ; add byte ptr [rbx], bh ; ret 0x1075
0x000002000021147f : push rax ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0x00000200006c872b : push rax ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x0000020000203ed1 : push rax ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x000002000055c050 : push rax ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000717fd1 : push rax ; add dword ptr [rax], eax ; mov dword ptr [rip + 0x1516a], eax ; ret
0x000002000071182a : push rax ; add dword ptr [rbp - 0x3dbaf037], eax ; ret
0x00000200007a8155 : push rax ; add dword ptr [rbx], ebp ; ret 0x840f
0x00000200000e6c35 : push rax ; add dword ptr [rcx - 0x75], eax ; ret 0x348
0x000002000003830e : push rax ; add dword ptr [rdi], ecx ; ret 0x7d80
0x0000020000494649 : push rax ; add dx, cx ; movzx eax, dx ; ret
0x000002000078c017 : push rax ; add eax, 0xb480000 ; ret 0x8d48
0x000002000024734c : push rax ; add eax, 0xb480000 ; ret 0x8d4c
0x00000200004e2021 : push rax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x164d8bf0], ch ; ret 0xfd0
0x0000020000541415 : push rax ; add eax, ebp ; ret
0x00000200004ce9ad : push rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000001bf42 : push rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rcx ; ret
0x0000020000021293 : push rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004790ca : push rax ; add rsp, 0x20 ; pop r15 ; pop rdi ; pop rbp ; ret
0x0000020000026b73 : push rax ; add rsp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000031462 : push rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c5e7d : push rax ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000453d96 : push rax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000022aa93 : push rax ; add rsp, 0x28 ; ret
0x0000020000095682 : push rax ; add rsp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000000e5ad : push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003cf6f4 : push rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000043da5 : push rax ; add rsp, 0x30 ; pop rbp ; ret
0x000002000024c722 : push rax ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000707d94 : push rax ; add rsp, 0x30 ; pop rdi ; jmp rax
0x000002000002523e : push rax ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000a6dc : push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000001c362 : push rax ; add rsp, 0x30 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000502336 : push rax ; add rsp, 0x30 ; pop rsi ; ret
0x00000200006d7515 : push rax ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000435421 : push rax ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000074f2 : push rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000138987 : push rax ; add rsp, 0x40 ; pop rsi ; ret
0x0000020000102aa0 : push rax ; add rsp, 0x60 ; pop r15 ; pop rsi ; pop rbp ; ret
0x000002000024ea76 : push rax ; add rsp, 0x70 ; pop rdi ; ret
0x0000020000685f0b : push rax ; add rsp, 0x80 ; pop rbx ; ret
0x00000200000fb580 : push rax ; and byte ptr [rax - 0x75], cl ; ret
0x00000200007892b1 : push rax ; and byte ptr [rcx - 0x7cb6eba9], cl ; ret
0x00000200006259d9 : push rax ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3d80
0x00000200005caadd : push rax ; and cl, ch ; push rdx ; ret 0xffeb
0x000002000047636a : push rax ; and dh, dh ; ret 0x7504
0x00000200001ca080 : push rax ; and dh, dh ; ret 0x750f
0x00000200000a53b7 : push rax ; and dh, dh ; ret 0x7510
0x000002000047bef9 : push rax ; and dh, dh ; ret 0xf04
0x00000200006f6452 : push rax ; call 0x1ff8c48efa7
0x0000020000517388 : push rax ; call 0x1ffc0a000db
0x00000200004637b6 : push rax ; call 0x1ffe90fc305
0x00000200003dfaca : push rax ; call 0x2000000c350
0x00000200006a3648 : push rax ; call 0x2000005f903
0x000002000043b023 : push rax ; call 0x20000068454
0x000002000008e01a : push rax ; call 0x200000ca2f3
0x000002000051f601 : push rax ; call 0x20000148074
0x000002000052244d : push rax ; call 0x20000148634
0x0000020000610172 : push rax ; call 0x20000157888
0x0000020000610171 : push rax ; call 0x20000157889
0x00000200006e2955 : push rax ; call 0x200003feb97
0x00000200006b916e : push rax ; call 0x200006c7e76
0x000002000015676c : push rax ; call r10
0x00000200007d13d5 : push rax ; call r12
0x000002000015af53 : push rax ; call rax
0x000002000018b34f : push rax ; call rbx
0x000002000014c61f : push rax ; call rdx
0x0000020000134c9e : push rax ; cld ; dec dword ptr [rax - 0x75] ; ret
0x00000200001d8e15 : push rax ; cmove ecx, dword ptr [rdi] ; and al, dl ; jmp 0x200001d8e36
0x00000200000bd63c : push rax ; cmp dh, dh ; ret 0x7420
0x0000020000135676 : push rax ; cmp edx, dword ptr [r8 + 0x40] ; jb 0x20000135661 ; ret
0x000002000065b576 : push rax ; dec dword ptr [rax - 0x7d] ; ret 0x4803
0x00000200004592c4 : push rax ; fld qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005139c5 : push rax ; inc dword ptr [rax] ; ret
0x00000200004ea1f9 : push rax ; inc dword ptr [rcx - 0x7c] ; ror byte ptr [rax + 0xf], 0x45 ; ret 0x3b48
0x0000020000680b57 : push rax ; inc edx ; jmp 0x20000680b3b
0x00000200006b72ff : push rax ; inc edx ; jmp 0x200006b72d2
0x00000200004bb137 : push rax ; jae 0x200004bb184 ; jb 0x200004bb12b ; xor ch, cl ; ret 0xe9ff
0x00000200004bb6e1 : push rax ; jae 0x200004bb730 ; outsb dx, byte ptr [rsi] ; call 0x200000e7e77
0x00000200004cbbed : push rax ; jae 0x200004cbc4a ; jns 0x200004cbc44 ; mov ecx, esi ; call 0x200000e7e79
0x000002000013567a : push rax ; jb 0x2000013565d ; ret
0x0000020000031ae1 : push rax ; je 0x20000031af2 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004300c5 : push rax ; je 0x200004300c4 ; or dword ptr [rdx], eax ; ret
0x000002000043a8fe : push rax ; je 0x2000043a90b ; ret
0x00000200006843d3 : push rax ; je 0x200006843e4 ; mov eax, 0xc0000004 ; ret
0x00000200007acd4e : push rax ; je 0x200007acd4a ; ret 0xf08
0x00000200000818ac : push rax ; jmp 0x20000081500
0x0000020000193ac1 : push rax ; jmp 0x2000009e4eb
0x0000020000226ba7 : push rax ; jmp 0x20000226b6f
0x000002000043a4d9 : push rax ; jmp 0x2000043a4a0
0x00000200006dcb23 : push rax ; jmp 0x200006dcaeb
0x000002000049e286 : push rax ; jmp qword ptr [rbx]
0x000002000021fb32 : push rax ; jmp rax
0x000002000014e0a1 : push rax ; jmp rcx
0x00000200000ed5ad : push rax ; jne 0x200000ed5be ; sti ; add rsp, 0x28 ; ret
0x0000020000450475 : push rax ; jo 0x2000045049d ; and al, ch ; ret 0xdfd5
0x000002000065179e : push rax ; jo 0x200006517c7 ; and al, ch ; cdq ; ret 0xffbf
0x00000200007d0d53 : push rax ; jo 0x200007d0dab ; mov rcx, rbx ; call 0x2000024d009
0x00000200001dbf58 : push rax ; jrcxz 0x200001dbf63 ; add rsp, 0x28 ; ret
0x0000020000588f37 : push rax ; lea r8, qword ptr [rbp - 0x30] ; mov edx, r14d ; call rax
0x0000020000232c7c : push rax ; loopne 0x20000232c46 ; ret 0x187d
0x0000020000085d3c : push rax ; mov dword ptr [rax], 4 ; ret
0x000002000062c591 : push rax ; mov dword ptr [rbx], ecx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000121dd0 : push rax ; mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005e271 : push rax ; mov dword ptr [rdi + 0x30], eax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c1e6c : push rax ; mov eax, 0x8bed3345 ; ret 0x3245
0x0000020000149d43 : push rax ; mov eax, 0xf5 ; jmp 0x20000156048
0x0000020000149d63 : push rax ; mov eax, 0xf6 ; jmp 0x20000156048
0x0000020000149d83 : push rax ; mov eax, 0xf7 ; jmp 0x20000156048
0x0000020000149da3 : push rax ; mov eax, 0xf8 ; jmp 0x20000156048
0x0000020000149dc3 : push rax ; mov eax, 0xf9 ; jmp 0x20000156048
0x0000020000149de3 : push rax ; mov eax, 0xfa ; jmp 0x20000156048
0x0000020000149e03 : push rax ; mov eax, 0xfb ; jmp 0x20000156048
0x0000020000149e23 : push rax ; mov eax, 0xfc ; jmp 0x20000156048
0x000002000013d7fd : push rax ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001c0516 : push rax ; mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000122d59 : push rax ; mov eax, r8d ; ret
0x00000200001fc7d4 : push rax ; mov qword ptr [r9], rax ; ret
0x000002000005749c : push rax ; mov qword ptr [rcx + 0x58], rax ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000053683d : push rax ; mov r8d, ebx ; xor edx, edx ; call 0x20000157889
0x00000200001bd911 : push rax ; mov r9, qword ptr [rip + 0x13bf37] ; call r9
0x00000200001d1eec : push rax ; mov rax, qword ptr [r8 + 0x60] ; mov qword ptr [r9 + 0x60], rax ; ret
0x00000200001c0266 : push rax ; mov rax, qword ptr [rip + 0x1395e2] ; call rax
0x00000200001e7f50 : push rax ; mov rax, rdi ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000147c53 : push rax ; mov rbp, qword ptr [rcx + 0x18] ; mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x00000200001fd05c : push rax ; mov rcx, qword ptr [r10 + 0x1d8] ; call rax
0x00000200003df198 : push rax ; mov rcx, qword ptr [rsi] ; call 0x2000000ca13
0x000002000068f6f0 : push rax ; mov rcx, qword ptr [rsp + 0x48] ; call rax
0x0000020000431b6f : push rax ; mov rcx, rbx ; call 0x2000005c1b7
0x00000200004473d9 : push rax ; mov rcx, rbx ; call 0x2000006d287
0x00000200005248ef : push rax ; mov rcx, rbx ; call rax
0x000002000048cfa0 : push rax ; mov rcx, rdi ; call rsi
0x00000200001c2134 : push rax ; or al, 0x5b ; ret
0x000002000043bbd1 : push rax ; or al, 0xf ; ret 0xba0f
0x0000020000044630 : push rax ; or al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000002000022634e : push rax ; or al, ch ; ret
0x00000200004a31bd : push rax ; or byte ptr [rax - 0x75], cl ; ret
0x00000200000a7c2e : push rax ; or byte ptr [rax - 0x75], cl ; ret 0x43c7
0x00000200001d65fe : push rax ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x000002000000d771 : push rax ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x1e], cl ; ret
0x0000020000430dd6 : push rax ; or byte ptr [rax - 0x7d], cl ; ret 0xe812
0x00000200000b9ef6 : push rax ; or byte ptr [rbp + 1], dh ; ret
0x0000020000408bc5 : push rax ; or byte ptr [rbx], dh ; shr al, cl ; ret 0x70d
0x0000020000798032 : push rax ; or byte ptr [rcx - 0x75], al ; ret 0x349
0x000002000052c790 : push rax ; or byte ptr [rdi], cl ; ret 0xc88b
0x000002000044fe82 : push rax ; or byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 4], edx ; ret
0x00000200006aea21 : push rax ; or dh, dh ; ret 0x7403
0x00000200005e57c9 : push rax ; or dh, dh ; ret 0x7502
0x00000200005e3533 : push rax ; or dh, dh ; ret 0x7520
0x0000020000788a50 : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200007b979c : push rax ; or dword ptr [rcx], eax ; add rsp, 0x38 ; ret
0x00000200007c8743 : push rax ; or ebp, eax ; ret 0xc654
0x000002000045177b : push rax ; outsb dx, byte ptr [rsi] ; jo 0x200004517de ; call 0x2000024da46
0x0000020000550d60 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000550dc7 ; mov rcx, rbx ; call 0x2000024d009
0x00000200001b2538 : push rax ; outsd dx, dword ptr [rsi] ; clc ; push rsi ; ret 0x7403
0x000002000071d21b : push rax ; pop r14 ; jmp qword ptr [rip + 0x3c23b]
0x00000200003d8cce : push rax ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000230c6f : push rax ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200000bb918 : push rax ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003e1020 : push rax ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000525331 : push rax ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000055d6e : push rax ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004cf531 : push rax ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000000d686 : push rax ; pop r14 ; ret
0x000002000001c692 : push rax ; pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000e0fe8 : push rax ; pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000e6ff8 : push rax ; pop r15 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001cb87d : push rax ; pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000f86c6 : push rax ; pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003faf04 : push rax ; pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000011dd8 : push rax ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000e76aa : push rax ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000040204a : push rax ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200004688bf : push rax ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000066ee74 : push rax ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000021c57 : push rax ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000041f7c6 : push rax ; pop r15 ; ret
0x000002000003629a : push rax ; pop rbp ; ret
0x0000020000002971 : push rax ; pop rbx ; ret
0x000002000051d97a : push rax ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200002025f7 : push rax ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000001059e : push rax ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000c789 : push rax ; pop rdi ; ret
0x00000200004c14dc : push rax ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000f0ac0 : push rax ; pop rsi ; ret
0x0000020000554abc : push rax ; push rax ; ret
0x00000200001c4712 : push rax ; push rax ; test rdx, rdx ; je 0x200001c4724 ; jmp rdx
0x000002000019ca84 : push rax ; push rsi ; ret
0x0000020000004f3f : push rax ; ret
0x000002000024e344 : push rax ; ret 0xa
0x0000020000458002 : push rax ; ret 0xbaff
0x00000200004b6943 : push rax ; ret 0xebff
0x00000200001a8be4 : push rax ; ret 0xffe7
0x000002000061c3c1 : push rax ; sar bh, 1 ; call 0x2000007d089
0x0000020000215bff : push rax ; sbb byte ptr [rax - 0x75], cl ; ret 0xccc3
0x0000020000635aa4 : push rax ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4414
0x0000020000029020 : push rax ; sbb byte ptr [rcx + rcx*4 + 0x58], al ; sbb al, 0x41 ; mov eax, edx ; pop rbx ; ret
0x000002000000c2f2 : push rax ; sbb byte ptr [rdi], cl ; ret 0xba0f
0x0000020000538b7c : push rax ; sbb dh, byte ptr [rbp - 0xb] ; lock inc dword ptr [rax + 0x10] ; ret
0x0000020000567056 : push rax ; sbb dh, dh ; ret 0xf02
0x000002000004061a : push rax ; shr eax, 0x18 ; and al, 1 ; ret
0x00000200007b3a53 : push rax ; stc ; dec dword ptr [rax - 0x75] ; ret
0x0000020000089c6a : push rax ; stosb byte ptr [rdi], al ; add byte ptr es:[rbx + rcx*4 - 0x74], cl ; ret 0xaa38
0x000002000066d17c : push rax ; sub al, 0xf6 ; ret 0x7401
0x0000020000646bd1 : push rax ; sub bl, ch ; add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c28
0x00000200001fda68 : push rax ; sub byte ptr [rbp - 0x74f58740], al ; ret
0x000002000052ddb8 : push rax ; sub byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + 2], cl ; pop rbx ; ret
0x00000200003f42ed : push rax ; sub dh, dh ; ret 0x7401
0x00000200004a85af : push rax ; sub dh, dh ; ret 0x7540
0x000002000006f2d0 : push rax ; test rax, rax ; je 0x2000006f299 ; mov qword ptr [r9], rax ; ret
0x000002000070f6db : push rax ; test rax, rax ; je 0x2000070f6ef ; mov rcx, rdi ; call rax
0x00000200001c4713 : push rax ; test rdx, rdx ; je 0x200001c4723 ; jmp rdx
0x000002000016dfca : push rax ; xadd qword ptr [r9 + 0x40], r8 ; ret
0x00000200006b8e24 : push rax ; xchg eax, ebp ; ret
0x00000200001e7f1c : push rax ; xchg eax, ecx ; in eax, dx ; dec dword ptr [rax - 0x7f] ; ret
0x000002000005a30f : push rax ; xchg eax, esi ; add eax, 0xc9034900 ; jmp rcx
0x00000200006d36e1 : push rax ; xor al, al ; ret
0x000002000008da48 : push rax ; xor byte ptr [rcx - 0x75], al ; ret 0xc025
0x000002000072507f : push rax ; xor dh, dh ; ret 0xf02
0x00000200001cb16e : push rax ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000515c90 : push rax ; xor rcx, rsp ; call 0x2000013ac77
0x00000200005f3d23 : push rbp ; adc byte ptr [rax - 0x75], cl ; xor r8b, r13b ; ret 0xb55a
0x00000200000b8a60 : push rbp ; adc byte ptr [rcx - 0x75], cl ; ret 0x8948
0x00000200000ada70 : push rbp ; adc byte ptr [rcx - 0x7f], cl ; ret 0x1a0
0x0000020000480e10 : push rbp ; adc byte ptr [rdi], cl ; mov bh, 0x46 ; add bh, bh ; ret
0x00000200006ae98f : push rbp ; adc dword ptr [rcx - 0x75], ecx ; ret 0x48f0
0x0000020000144092 : push rbp ; add al, 0 ; add byte ptr [rcx - 1], al ; ret 0x4de9
0x000002000000a367 : push rbp ; add al, 0x15 ; add bl, al ; xor eax, eax ; ret
0x00000200000a4308 : push rbp ; add al, 0xc1 ; call 0x2000fcc7e1c
0x000002000009abdf : push rbp ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x1c8948c6], cl ; ret 0x8548
0x00000200001329cb : push rbp ; add bh, bh ; ret 0x8341
0x000002000016b171 : push rbp ; add bh, bh ; ret 0x8b48
0x0000020000631b68 : push rbp ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000200006dd308 : push rbp ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000009589
0x0000020000148945 : push rbp ; add byte ptr [rax], al ; add cl, ch ; salc ; add byte ptr [rax], al ; ret
0x00000200004930b3 : push rbp ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x84c6
0x000002000048aa2a : push rbp ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000200007d2b23 : push rbp ; add cl, byte ptr [rbp + 0x3e85c4d] ; ret 0xff83
0x0000020000196699 : push rbp ; add cl, ch ; rcr byte ptr [rdi], cl ; int1 ; dec dword ptr [rax - 0x39] ; ret
0x00000200004abbb4 : push rbp ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x000002000022c323 : push rbp ; add eax, dword ptr [rax] ; add byte ptr [rbx - 0x74b3ebad], cl ; ret
0x00000200001c01ff : push rbp ; add eax, ebp ; outsb dx, byte ptr [rsi] ; ret 0xffff
0x00000200006e6d02 : push rbp ; and al, ch ; xchg dword ptr [rsi - 0x5a], edx ; push rsi ; ret
0x00000200000ab925 : push rbp ; and eax, dword ptr [rcx - 0x75] ; ret 0xe8c1
0x000002000062f8e8 : push rbp ; call 0x1ffe932843e
0x0000020000696ef7 : push rbp ; call 0x200042bade9
0x0000020000696eaa : push rbp ; call 0x200042bfa9c
0x00000200004a05b7 : push rbp ; call qword ptr [rdx]
0x000002000015bb33 : push rbp ; cmp al, 0x8b ; ret 0x8d4c
0x000002000043156f : push rbp ; cmp byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x2174
0x000002000015c2fa : push rbp ; cmp byte ptr [rax - 0x75], cl ; call rax
0x00000200004d1cc6 : push rbp ; cmp byte ptr [rax - 0x7d], cl ; ret
0x00000200006129a7 : push rbp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000200007d47cd : push rbp ; cwde ; lea rcx, qword ptr [rbp - 0x78] ; call 0x2000040286d
0x000002000019e10f : push rbp ; dec dword ptr [rax - 0x73] ; ret
0x00000200007d0249 : push rbp ; enter -0x72b8, 0x4d ; test al, 0xe8 ; adc byte ptr [rsi], ah ; ret
0x00000200005d4b63 : push rbp ; fcomp st(0), st(4) ; call qword ptr [rcx]
0x000002000053ae1a : push rbp ; fdiv st(7), st(0) ; je 0x2000053ae17 ; xor eax, eax ; ret
0x00000200007786fa : push rbp ; fild word ptr [rcx - 0x3f] ; ret 0xeb07
0x00000200001104ba : push rbp ; fisttp word ptr [rax + 0x3b] ; ret 0x850f
0x00000200001450c5 : push rbp ; fisttp word ptr [rcx - 0x7d] ; ret 0x4c0c
0x00000200001456ad : push rbp ; fmul dword ptr [rax + 0x33] ; ret 0xd233
0x00000200002232e2 : push rbp ; fsubp st(3) ; or dword ptr [rcx + 0x3b], eax ; ret 0x976
0x000002000061ad0a : push rbp ; fucompi st(0) ; imul edx, dword ptr [rcx], 0 ; add bh, bh ; ret
0x00000200004719a7 : push rbp ; idiv byte ptr [rax - 0x7b74b701] ; ret 0x8930
0x0000020000165857 : push rbp ; imul edi, ebp, 0xfc085ff ; xchg eax, esp ; ret
0x00000200001d60a6 : push rbp ; inc r11 ; inc r10d ; jmp 0x200001d609b
0x0000020000525576 : push rbp ; iretd ; mov rcx, rdi ; call 0x20000148a98
0x0000020000612963 : push rbp ; ja 0x20000612954 ; xchg eax, esi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000200005a0b5a : push rbp ; jbe 0x200005a0b4e ; dec dword ptr [rax - 0x75] ; int 0xe8
0x0000020000070c31 : push rbp ; jge 0x20000070c4e ; add byte ptr [rax + 1], bh ; ret
0x0000020000446956 : push rbp ; jmp 0x2000044695c
0x0000020000446955 : push rbp ; jmp 0x2000044695d
0x00000200005d8403 : push rbp ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax + 0x2b] ; ret 0xe281
0x0000020000090c1f : push rbp ; loopne 0x20000090c66 ; call rbx
0x0000020000090ce0 : push rbp ; loopne 0x20000090d27 ; call rbx
0x0000020000090ddd : push rbp ; loopne 0x20000090e24 ; call rbx
0x000002000051fdb6 : push rbp ; loopne 0x2000051fda4 ; ret
0x0000020000623fdf : push rbp ; loopne 0x20000623fe8 ; add rsp, 0x68 ; ret
0x0000020000699fa6 : push rbp ; loopne 0x20000699f94 ; ret
0x00000200006b7cdd : push rbp ; loopne 0x200006b7ce6 ; ret 0xc13b
0x0000020000539654 : push rbp ; mov ah, 0x48 ; mov ecx, edi ; call r15
0x00000200005fa7d0 : push rbp ; mov byte ptr [rax - 0x75], cl ; jl 0x200005fa802 ; jo 0x200005fa763 ; ret 0x8b04
0x00000200007acc5b : push rbp ; mov dword ptr [rcx], 0x158b4800 ; ret 0xf3da
0x00000200004cfed8 : push rbp ; mov edi, 0x578b48ff ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000642654 : push rbp ; mov edi, 0x674d8b48 ; call r12
0x00000200000dc5dc : push rbp ; mov edi, 0x8b44fa8b ; ret 0x8b48
0x0000020000458aa5 : push rbp ; mov edi, 0xbf5d894c ; call rax
0x0000020000662227 : push rbp ; mov esi, 0x8b4cffb8 ; ret
0x000002000071841f : push rbp ; mov esp, 0xb70ffffe ; ret
0x00000200004441a2 : push rbp ; mov esp, 0xc48348ff ; pop rax ; ret
0x000002000015af4e : push rbp ; mov rcx, qword ptr [rbp + 0x50] ; call rax
0x000002000015d1ad : push rbp ; mov rcx, r11 ; call r11
0x00000200000e1f58 : push rbp ; or byte ptr [rbp - 0x75], cl ; ret
0x00000200004635cb : push rbp ; or byte ptr [rbx + 0x314e8cb], cl ; ret
0x0000020000463caf : push rbp ; or byte ptr [rbx - 0x3cf1735], cl ; ret 0x85ff
0x000002000041ab2c : push rbp ; or byte ptr [rcx - 1], al ; ret
0x00000200001706b1 : push rbp ; or byte ptr [rdi], cl ; mov dh, 4 ; sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x00000200006cbf57 : push rbp ; out -0x75, eax ; ret 0x8948
0x000002000014435e : push rbp ; out 0x38, eax ; pop rbp ; ret
0x000002000052563d : push rbp ; out 0x48, eax ; mov ecx, edi ; call 0x200001497f8
0x00000200005dbcdf : push rbp ; out dx, eax ; dec dword ptr [rdi] ; mov dh, 0x5d ; add esi, esi ; ret
0x0000020000436f99 : push rbp ; psubsb mm5, qword ptr [rdi + rdi*2 + 0x558bffc4] ; ret
0x00000200003df197 : push rbp ; push rax ; mov rcx, qword ptr [rsi] ; call 0x2000000ca14
0x00000200005248ee : push rbp ; push rax ; mov rcx, rbx ; call rax
0x00000200000d0594 : push rbp ; ret
0x0000020000491081 : push rbp ; ret 0x13
0x0000020000018cfe : push rbp ; ret 0x14
0x00000200006f7979 : push rbp ; ret 0x41ff
0x00000200004b498f : push rbp ; ret 0xe9ff
0x00000200005caff7 : push rbp ; ret 0xffb1
0x00000200007b7047 : push rbp ; ret 0xffda
0x00000200007ae1c6 : push rbp ; ret 0xfff
0x0000020000631a57 : push rbp ; rol byte ptr [rbx + rdi + 0x66], 1 ; adc byte ptr [rcx + rcx*2 - 1], dh ; ret 0x8349
0x00000200006dd39b : push rbp ; ror byte ptr [rax - 0x73], 0x4d ; sub al, 0xca ; ret 0xff92
0x000002000017843f : push rbp ; ror byte ptr [rax - 0x77], 0x41 ; or byte ptr [rbp - 0x75], cl ; ret 0x894d
0x0000020000118058 : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4942
0x0000020000469c68 : push rbp ; ror byte ptr [rcx - 0x75], 1 ; int 0xff
0x0000020000144489 : push rbp ; sar dword ptr [rax], cl ; pop rbp ; ret
0x00000200003d28e4 : push rbp ; sbb byte ptr [rbp + rcx*4 + 0x1d], cl ; adc esp, edi ; ret 0x8bff
0x00000200004ecbd7 : push rbp ; str word ptr [rax - 0x75] ; push rdx ; sbb dh, dh ; ret 0x4801
0x00000200000bd22f : push rbp ; sub al, 3 ; ret 0xff25
0x0000020000245e6b : push rbp ; sub byte ptr [rbp - 0x73], cl ; sbb byte ptr [r9 - 0x75], r8b ; ret 0x8b4c
0x00000200001966ad : push rbp ; sub byte ptr [rbp - 0x75], al ; ret
0x00000200000ae261 : push rbp ; sub byte ptr [rbx + 0x148d4dc8], cl ; ret 0x8b49
0x000002000013fa73 : push rbp ; xchg eax, ecx ; sbb eax, dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000007fdfa : push rbp ; xor al, ch ; ret
0x000002000007fdf6 : push rbp ; xor byte ptr [rax - 0x73], cl ; push rbp ; xor al, ch ; ret
0x00000200005dbee3 : push rbp ; xor byte ptr [rax - 0x7d], cl ; ret 0x4828
0x0000020000656d6e : push rbp ; xor byte ptr [rcx + 0x41202444], cl ; call rdx
0x00000200005b3a01 : push rbp ; xor esi, 0x3d83ccff ; ret
0x0000020000489a4e : push rbx ; adc al, byte ptr [rax] ; add byte ptr [rbx - 0x7abe992d], cl ; ret 0x850f
0x000002000060e537 : push rbx ; adc bl, ch ; ret
0x00000200004045ce : push rbx ; adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x8074
0x00000200000b05cc : push rbx ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000b1663 : push rbx ; adc byte ptr [rax - 0x7f], cl ; ret 0x1a0
0x00000200001c446c : push rbx ; adc cl, byte ptr [rax - 0x75] ; ret 0x2548
0x00000200004e4e5a : push rbx ; adc dh, dh ; ret 0x7404
0x00000200000e85d5 : push rbx ; adc edi, edi ; ret 0x5388
0x00000200000ab604 : push rbx ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006c175a : push rbx ; add al, 0x8d ; in eax, dx ; call 0x2000024da47
0x00000200000fbbc1 : push rbx ; add al, byte ptr [rcx - 0xa] ; ret 0xf01
0x0000020000220075 : push rbx ; add bh, bh ; ret
0x00000200001509fa : push rbx ; add byte ptr [rax], al ; add byte ptr [rsi - 0x73277320], cl ; ret 0xc223
0x0000020000148905 : push rbx ; add byte ptr [rax], al ; add cl, ch ; xor dl, bh ; add byte ptr [rax], al ; ret
0x000002000005665a : push rbx ; add byte ptr [rdi], cl ; test byte ptr [rdx - 0xa000000], cl ; ret 0xf08
0x000002000052b0f5 : push rbx ; add cl, byte ptr [rdi] ; mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x00000200004b4778 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000200003fcdf9 : push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000004d45 : push rbx ; add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000717e2a : push rbx ; add dword ptr [rax], eax ; add rsp, 0x58 ; ret
0x00000200004af7cf : push rbx ; add dword ptr [rcx - 0x75], ecx ; xor r8b, r13b ; mov dh, 0x56 ; ret
0x00000200002146b1 : push rbx ; add dword ptr [rcx - 0x7cb7fcbd], ecx ; ret
0x0000020000081783 : push rbx ; add dword ptr [rdx + rdx*8 - 0x49f0eb8c], eax ; ret 0x2b41
0x00000200001c011d : push rbx ; add eax, ebp ; push rax ; ret
0x0000020000093ea7 : push rbx ; add esi, esi ; ret 0x740f
0x000002000020b889 : push rbx ; and byte ptr [rax - 0x75], cl ; ret
0x000002000008dc41 : push rbx ; and byte ptr [rax - 1], cl ; ret 0x8348
0x00000200007a9792 : push rbx ; and byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rbp + 0x3b] ; ret 0x1a74
0x00000200001b1a42 : push rbx ; and dh, dh ; ret 0x7508
0x00000200000e30d0 : push rbx ; and esi, esi ; ret 0xf08
0x00000200000def60 : push rbx ; and esi, esi ; ret 0xf10
0x000002000062d34d : push rbx ; call 0x2000024da45
0x000002000077cc69 : push rbx ; cli ; ret
0x0000020000591485 : push rbx ; cmp byte ptr [rax - 0x7f], cl ; ret
0x0000020000526285 : push rbx ; cmp byte ptr [rdx], bh ; ret 0x820f
0x0000020000038217 : push rbx ; cmp dh, dh ; ret 0x7520
0x00000200006829ce : push rbx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000641739 : push rbx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x48ff
0x000002000068c55f : push rbx ; dec dword ptr [rax + 0x63] ; ret 0x4566
0x00000200000bf772 : push rbx ; dec dword ptr [rax - 0x75] ; ret
0x00000200005f5183 : push rbx ; enter 0x48ff, -0x75 ; shr eax, cl ; ret 0xa9f
0x000002000051db1a : push rbx ; fdivp st(7) ; add rsp, 0x28 ; ret
0x000002000024e33d : push rbx ; idiv edi ; dec dword ptr [rbx + rcx*4 + 5] ; push rax ; ret 0xa
0x00000200001ad48c : push rbx ; in eax, -9 ; dec dword ptr [rax - 9] ; ret
0x0000020000623ae9 : push rbx ; je 0x20000623b5d ; lea ecx, dword ptr [rdx - 0x27] ; call 0x2000024da49
0x0000020000623ca7 : push rbx ; je 0x20000623d18 ; call 0x2000024d006
0x0000020000623ca6 : push rbx ; je 0x20000623d19 ; call 0x2000024d007
0x0000020000623d73 : push rbx ; je 0x20000623de4 ; call 0x2000024da46
0x0000020000623d72 : push rbx ; je 0x20000623de5 ; call 0x2000024da47
0x0000020000130b14 : push rbx ; jl 0x20000130aa8 ; js 0x20000130b4b ; ret 0x8944
0x00000200004a4624 : push rbx ; jl 0x200004a463a ; xchg eax, ebp ; ret 0x8445
0x000002000061f39a : push rbx ; jo 0x2000061f3ef ; mov ecx, edi ; call 0x2000024d009
0x000002000061f5e6 : push rbx ; jo 0x2000061f63c ; mov esi, ecx ; call 0x2000024da49
0x000002000061f66e : push rbx ; jo 0x2000061f6c3 ; mov ecx, edi ; call 0x2000024d009
0x000002000061f6cd : push rbx ; jo 0x2000061f722 ; mov ecx, edi ; call 0x2000024d009
0x000002000061f881 : push rbx ; jo 0x2000061f873 ; ja 0x2000061f864 ; ret 0x48ff
0x00000200002317c9 : push rbx ; lodsb al, byte ptr [rsi] ; loop 0x200002317d4 ; add rsp, 0x28 ; ret
0x00000200004f449a : push rbx ; mov cl, 0xff ; add rsp, 0x48 ; ret
0x0000020000672319 : push rbx ; mov dword ptr [rdi + rdi*8 + 0x50c48348], ebp ; pop rbx ; ret
0x000002000065c4dc : push rbx ; mov eax, 0xc48348ff ; pop rax ; ret
0x000002000049e8a9 : push rbx ; mov rax, r9 ; ret
0x0000020000457415 : push rbx ; movq qword ptr [rdx + r8*8], mm0 ; jmp 0x200004573c8
0x000002000072655b : push rbx ; movq qword ptr [rip - 0x4014cc], mm0 ; ret
0x00000200001c1c19 : push rbx ; nop ; idiv edi ; add rsp, 0x78 ; ret
0x0000020000710de6 : push rbx ; or al, ch ; xchg eax, edi ; cmp eax, 0x8348ffad ; ret
0x0000020000490a2e : push rbx ; or byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000044ad3f : push rbx ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200005a48d4 : push rbx ; or byte ptr [rax - 0x75], cl ; ret 0xe283
0x00000200001646c0 : push rbx ; or byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000071d661 : push rbx ; or dh, dh ; ret 0x7501
0x0000020000568538 : push rbx ; or dword ptr [rax], eax ; ret
0x0000020000244ffb : push rbx ; or eax, dword ptr [rcx + 0x3b] ; ret 0x1075
0x0000020000500d81 : push rbx ; popfq ; mov edi, 0xc48348ff ; jo 0x20000500dee ; ret
0x00000200001f45f9 : push rbx ; push rsp ; out dx, eax ; dec dword ptr [rbx - 0x74bba3a9] ; ret 0xc141
0x00000200003da749 : push rbx ; ret
0x0000020000457c88 : push rbx ; ret 0x48ff
0x00000200006f49f4 : push rbx ; ret 0x75ff
0x0000020000457d4e : push rbx ; ret 0xf7ff
0x0000020000787949 : push rbx ; ret 0xffb7
0x00000200001fd211 : push rbx ; sbb al, 0x72 ; in al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200000cbd7c : push rbx ; sbb byte ptr [rax + 1], cl ; push rsp ; ret
0x0000020000119b41 : push rbx ; sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000016d4d : push rbx ; sbb byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200003ef95c : push rbx ; sbb byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x2000050bc45
0x0000020000231469 : push rbx ; sbb byte ptr [rbx], bh ; ret 0x3073
0x00000200007b46dd : push rbx ; sbb byte ptr [rcx - 0x75], cl ; and byte ptr [r9 + 3], cl ; ret 0x3b48
0x000002000009eb6d : push rbx ; str word ptr [rbp - 0x7b] ; ret 0x850f
0x00000200004ecee3 : push rbx ; str word ptr [rdi] ; mov edx, 0x820f09e1 ; ret 0xf54
0x00000200000574e8 : push rbx ; sub al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000618f35 : push rbx ; sub byte ptr [rax - 0x75], cl ; ror dword ptr [rax + 0xf], -0x51 ; ret 0x3d48
0x000002000023813b : push rbx ; sub byte ptr [rax - 1], cl ; ret 0x488b
0x000002000051585c : push rbx ; sub byte ptr [rbx + rcx*4 - 0x60], al ; in al, 1 ; add byte ptr [rax], al ; call rdi
0x0000020000161269 : push rbx ; sub edx, -1 ; mov qword ptr [r8], r10 ; ret
0x00000200007038a9 : push rbx ; xchg eax, edi ; mov ah, 0xff ; add rsp, 0x28 ; ret
0x00000200006bbc64 : push rbx ; xchg eax, esp ; inc dword ptr [rbp + 0x33] ; fild dword ptr [rbp - 0x75] ; ret
0x00000200004154d8 : push rbx ; xor al, 0x88 ; fisttp qword ptr [r9 - 0x75] ; ret
0x0000020000238137 : push rbx ; xor byte ptr [rax + 0x2b], cl ; push rbx ; sub byte ptr [rax - 1], cl ; ret 0x488b
0x000002000016097b : push rbx ; xor byte ptr [rbx + 0x8c86], cl ; add byte ptr [rbx], bh ; ret 0x470f
0x00000200000c3dbc : push rcx ; adc bh, bh ; ret 0xffb8
0x00000200003fba0b : push rcx ; adc byte ptr [rax - 0x75], cl ; or eax, 0xfff44724 ; call rax
0x000002000001b6e2 : push rcx ; adc byte ptr [rbp + 4], dh ; mov al, r8b ; ret
0x00000200001fecf8 : push rcx ; adc byte ptr [rbx + rcx*4 - 0x39], cl ; add rcx, 0x18 ; call rax
0x00000200006c5fdd : push rcx ; adc byte ptr [rcx + 0x39], al ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x00000200000992e5 : push rcx ; adc byte ptr [rcx - 0x75], cl ; ret 0x8348
0x00000200000400e3 : push rcx ; adc byte ptr [rcx - 0x75], cl ; ret 0xf49
0x000002000066923a : push rcx ; adc byte ptr [rcx - 0x7d], cl ; add bl, byte ptr [rax] ; ret
0x0000020000418679 : push rcx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4909
0x000002000004a38f : push rcx ; adc byte ptr [rcx - 0x7f], cl ; ret 0x1a0
0x00000200001fe66e : push rcx ; adc byte ptr [rsi + 4], dh ; mov qword ptr [rcx + 0x10], rdx ; ret
0x000002000054bb68 : push rcx ; adc dh, dh ; ret 0x7401
0x0000020000037171 : push rcx ; adc rax, qword ptr [rax] ; ret
0x000002000007f5b5 : push rcx ; add al, 0x41 ; mov dword ptr [rcx], eax ; ret
0x00000200003ed9f0 : push rcx ; add al, 0x66 ; mov dword ptr [rcx], edx ; mov word ptr [rax], dx ; ret
0x000002000044a054 : push rcx ; add al, 0x8b ; ret 0x8b41
0x0000020000411dcd : push rcx ; add al, 0xf7 ; ret 0xfff8
0x00000200005600a2 : push rcx ; add al, 0xff ; ret 0x533b
0x000002000006e666 : push rcx ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; cmp sil, r14b ; ret
0x00000200000f5286 : push rcx ; add al, byte ptr [rdi + rcx + 0x22] ; ret 0x4c65
0x00000200001488c5 : push rcx ; add byte ptr [rax], al ; add cl, ch ; jb 0x200001488ac ; add byte ptr [rax], al ; ret
0x00000200003d2a5d : push rcx ; add byte ptr [rax], al ; call 0x200003d0701
0x0000020000527f0e : push rcx ; add ch, al ; cmp eax, dword ptr [rdx] ; ret 0x3dff
0x000002000012a3dd : push rcx ; add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x000002000000c35f : push rcx ; add dh, dh ; ret 0x7501
0x000002000017bb14 : push rcx ; add dh, dh ; ret 0xf10
0x00000200007afb89 : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000014a8c5 : push rcx ; add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014a88c ; add byte ptr [rax], al ; ret
0x0000020000717fd7 : push rcx ; add dword ptr [rax], eax ; ret
0x00000200001903b1 : push rcx ; add dword ptr [rcx - 0x76], eax ; ret 0xf824
0x00000200001a61a4 : push rcx ; add ecx, dword ptr [rax + 0x63] ; ret
0x00000200004edf2a : push rcx ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000200001ca00f : push rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200002381af : push rcx ; and byte ptr [rax - 1], cl ; ret 0x488b
0x0000020000108864 : push rcx ; and byte ptr [rbx + 4], dh ; mov qword ptr [rcx + 0x20], rdx ; ret
0x00000200001208fa : push rcx ; and dh, dh ; ret 0xf01
0x0000020000042ed0 : push rcx ; and dh, dh ; ret 0xf0f
0x0000020000033d8b : push rcx ; cmp byte ptr [rcx + 0x1757451], cl ; ret
0x00000200004e4bc6 : push rcx ; cmp dh, dh ; ret 0x7520
0x0000020000114baa : push rcx ; ficomp dword ptr [rsi] ; add byte ptr [rcx], al ; add rsp, 0x38 ; ret
0x00000200006c24e7 : push rcx ; imul eax, ecx ; sub eax, r8d ; ret
0x00000200001a7c7e : push rcx ; in al, dx ; dec dword ptr [rax - 0x7d] ; jmp qword ptr [rax]
0x00000200006cf1e4 : push rcx ; jbe 0x200006cf1f3 ; add cl, 8 ; ret
0x000002000005ccc5 : push rcx ; jge 0x2000005ccd0 ; xor eax, eax ; ret
0x000002000002287c : push rcx ; jl 0x2000002280d ; ret 0xb60f
0x00000200003ebaa3 : push rcx ; jmp qword ptr [rbx]
0x00000200004cbbef : push rcx ; jns 0x200004cbc42 ; mov ecx, esi ; call 0x200000e7e77
0x00000200004e20fc : push rcx ; jns 0x200004e20ef ; insd dword ptr [rdi], dx ; pop rbp ; sar bh, 0x8b ; ret
0x000002000002e4f5 : push rcx ; jo 0x2000002e4e6 ; ret 0x8b44
0x00000200001bf6ab : push rcx ; loope 0x200001bf699 ; ret 0xffcd
0x000002000018268b : push rcx ; mov bh, 0xf0 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000718fc9 : push rcx ; or al, ch ; mov bpl, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x0000020000718f79 : push rcx ; or al, ch ; nop ; mov ch, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x000002000022be30 : push rcx ; or al, ch ; stc ; ret
0x0000020000718ed9 : push rcx ; or al, ch ; xor byte ptr [rsi - 0x74b70001], dh ; ret
0x00000200004ef2e5 : push rcx ; or bh, dh ; ret 0xfff
0x000002000011fc27 : push rcx ; or bl, ch ; cmc ; xor eax, eax ; ret
0x00000200000b467e : push rcx ; or byte ptr [rax + 0x31], cl ; add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4b08
0x00000200001048cd : push rcx ; or byte ptr [rax + 0x3b], cl ; ret 0xf48
0x00000200001264d1 : push rcx ; or byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4818
0x0000020000029298 : push rcx ; or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200000e5960 : push rcx ; or byte ptr [rbx], bh ; ret 0x830f
0x0000020000544b21 : push rcx ; or byte ptr [rcx + rdi + 0x3a], al ; jne 0x20000544ae3 ; jmp 0x200005f0e1b
0x00000200000bd737 : push rcx ; or byte ptr [rcx - 0xa], dh ; ret 0x7504
0x000002000079a4b8 : push rcx ; or ch, al ; and eax, 0x8bff95e0 ; ret
0x0000020000617889 : push rcx ; or dh, dh ; ret 0xf01
0x000002000006467b : push rcx ; or dword ptr [rax], eax ; add dh, dh ; ret
0x000002000002ea2b : push rcx ; or dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001d64c7 : push rcx ; pop rdi ; sbb eax, eax ; and eax, 0x128 ; ret
0x00000200007d16eb : push rcx ; pop rsi ; cwde ; dec dword ptr [rax - 0x75] ; ret
0x000002000016df3e : push rcx ; push 0x70418949 ; ret
0x000002000008f43f : push rcx ; push rdx ; ret
0x0000020000044d91 : push rcx ; push rsp ; mov eax, edx ; ret
0x00000200000fce66 : push rcx ; ret
0x00000200006288aa : push rcx ; ret 0x48ff
0x0000020000627e9b : push rcx ; ret 0xebff
0x00000200004dbe0b : push rcx ; ret 0xffc0
0x0000020000587aec : push rcx ; ret 0xffe6
0x000002000003c05b : push rcx ; ret 6
0x00000200006ff38b : push rcx ; sahf ; add eax, 0xc4834800 ; pop rax ; ret
0x0000020000405b57 : push rcx ; sar edi, cl ; add rsp, 0x78 ; ret
0x0000020000445bf5 : push rcx ; sbb al, 0xf ; test dword ptr [rcx - 0x74ffe9bd], ebx ; ret
0x000002000014555a : push rcx ; sbb byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x33], cl ; ret 0x3348
0x0000020000779d4b : push rcx ; sbb byte ptr [rax - 0x75], cl ; ret
0x00000200007a5082 : push rcx ; sbb byte ptr [rax - 0x75], cl ; sbb dword ptr [rax - 0x75], ecx ; ret 0xc148
0x0000020000591169 : push rcx ; sbb byte ptr [rcx - 0x74bbcfa9], cl ; ret 0xf41
0x000002000001cd53 : push rcx ; sbb byte ptr [rcx - 0x75], al ; jmp 0x2004dc457a4
0x00000200004e7371 : push rcx ; sbb byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x0000020000018be6 : push rcx ; sbb byte ptr [rcx - 0x75], cl ; ret 0x348
0x00000200006692f9 : push rcx ; sbb byte ptr [rcx - 0x7d], cl ; add ch, byte ptr [rax] ; ret
0x0000020000180d7e : push rcx ; sbb byte ptr [rdi], cl ; test dword ptr [rip - 0x12f4], ecx ; ret 0x8349
0x000002000051f14d : push rcx ; std ; call 0x20000148035
0x0000020000518703 : push rcx ; sti ; loopne 0x2000051870f ; test rax, rax ; je 0x20000518717 ; call rax
0x00000200000dbdea : push rcx ; sub al, 0x3b ; ret 0x830f
0x00000200000dc698 : push rcx ; sub al, 0x3b ; ret 0xe273
0x00000200000164ca : push rcx ; sub byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200001e38e6 : push rcx ; sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200002381ab : push rcx ; sub byte ptr [rcx + 0x2b], cl ; push rcx ; and byte ptr [rax - 1], cl ; ret 0x488b
0x00000200003ef3be : push rcx ; sub dh, dh ; ret 0xf02
0x00000200007a944b : push rcx ; wait ; ret 0xb8ff
0x0000020000623cab : push rcx ; xchg eax, ebx ; ret 0xebff
0x00000200007c3d0b : push rcx ; xor al, 0xf6 ; ret 0x7401
0x00000200004b3c92 : push rcx ; xor al, 0xf6 ; ret 0xf10
0x0000020000151aeb : push rcx ; xor byte ptr [rax + 0x28c48348], dl ; ret
0x0000020000027c07 : push rcx ; xor byte ptr [rbx + rdi - 0x40], al ; jne 0x20000027bda ; ret
0x00000200000770bc : push rcx ; xor dh, dh ; push rax ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x4a8
0x0000020000723e4e : push rcx ; xor dh, dh ; ret 0x7440
0x00000200007243a1 : push rcx ; xor dh, dh ; ret 0xf01
0x0000020000523429 : push rcx ; xor dword ptr [rcx], ecx ; add byte ptr [rax - 0x75], cl ; ret
0x000002000021a8fa : push rdi ; adc al, 0xf6 ; ret 0x7408
0x000002000049a06c : push rdi ; adc al, 0xf6 ; ret 0xf01
0x000002000043528d : push rdi ; adc byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0x9577
0x00000200000b8e4c : push rdi ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000a6ca4 : push rdi ; adc byte ptr [rax - 0x7f], cl ; ret 0x1a0
0x00000200003e1fdd : push rdi ; adc byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000060cefe : push rdi ; adc byte ptr [rbx - 0x74b388bb], cl ; ret
0x000002000060f887 : push rdi ; adc byte ptr [rbx], al ; cmp esi, r14d ; jb 0x2000060f85a ; jmp 0x2000060f89d
0x00000200004ef677 : push rdi ; adc byte ptr [rbx], al ; ret 0x3b41
0x000002000008a075 : push rdi ; adc byte ptr [rcx + 0x23], cl ; ret 0x894c
0x00000200000e5e48 : push rdi ; adc edi, edi ; ret 0x5788
0x0000020000539834 : push rdi ; add al, 0x76 ; sub al, 0x8b ; ret 0xff48
0x00000200007d0fe3 : push rdi ; add al, 0xe8 ; push 0x7b ; ret 0x8bff
0x000002000018ed3e : push rdi ; add al, 0xf6 ; ret 0x7508
0x0000020000148985 : push rdi ; add byte ptr [rax], al ; add cl, ch ; mov dl, 0xd6 ; add byte ptr [rax], al ; ret
0x00000200006d16e7 : push rdi ; add cl, byte ptr [rbp + 0x4fe8934a] ; ret
0x00000200006d173f : push rdi ; add cl, byte ptr [rbp - 0x8170eb6] ; ret 0xffb7
0x00000200005f2f46 : push rdi ; add dword ptr [rax + 0x63], ecx ; ret
0x000002000001196e : push rdi ; add dword ptr [rax - 0x77], ecx ; cmovns r8, qword ptr [r11] ; ret 0x894c
0x000002000044d688 : push rdi ; add dword ptr [rax], eax ; add bh, bh ; ret 0x5489
0x000002000014a985 : push rdi ; add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xb6 ; add byte ptr [rax], al ; ret
0x0000020000642998 : push rdi ; add edi, dword ptr [rbx] ; ret 0x4c73
0x000002000048c79a : push rdi ; add esi, esi ; ret 0xf08
0x00000200007a4e7b : push rdi ; and byte ptr [rcx + 0xb], cl ; ret 0x8949
0x00000200000279be : push rdi ; and byte ptr [rdi + rcx + 0x45], al ; rol byte ptr [rcx - 0x75], 1 ; ret 0x8d48
0x00000200004e7bd3 : push rdi ; and dword ptr [rbx + rcx*4 + 0x47], eax ; sbb al, 0x8b ; ret 0xc148
0x00000200000d921a : push rdi ; and eax, dword ptr [rcx - 0x75] ; ret 0xe8c1
0x00000200006204a9 : push rdi ; call 0x2000024d004
0x000002000061f38c : push rdi ; call 0x2000024d005
0x000002000061f38b : push rdi ; call 0x2000024d006
0x000002000061fc96 : push rdi ; call 0x2000024da44
0x000002000061fc95 : push rdi ; call 0x2000024da45
0x0000020000620af0 : push rdi ; call 0x2000024da46
0x000002000012293b : push rdi ; cld ; dec dword ptr [rax - 0x75] ; ret
0x00000200004a4405 : push rdi ; cmp al, 0xc4 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000035ce0 : push rdi ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200005389e2 : push rdi ; cmp byte ptr [rbx], dh ; leave ; call rax
0x00000200005389ec : push rdi ; cmp byte ptr [rcx + 1], bh ; call r8
0x00000200006b7a85 : push rdi ; cmp byte ptr [rcx + 2], bh ; call rax
0x00000200006b7aa7 : push rdi ; cmp byte ptr [rcx + 3], bh ; call rax
0x000002000003d95d : push rdi ; cmp dh, dh ; ret 0xf01
0x0000020000098a60 : push rdi ; cmp dh, dh ; ret 0xf10
0x00000200004c3824 : push rdi ; cmp dh, dh ; ret 0xf20
0x00000200001d6775 : push rdi ; fsubrp st(4) ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200003e5fad : push rdi ; hlt ; sar edi, 0x48 ; add esp, 0x48 ; ret
0x00000200001979ca : push rdi ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200001979f9 : push rdi ; int1 ; push rsi ; ret
0x00000200006f5dd3 : push rdi ; jmp 0x1ffcafb5ddf
0x000002000047f705 : push rdi ; jmp 0x2000047f9a8
0x0000020000133c79 : push rdi ; jno 0x20000133c7e ; ret 0xbf
0x000002000006f197 : push rdi ; lea rdx, qword ptr [rsi + 0x10] ; call r8
0x000002000017f90f : push rdi ; loope 0x2000017f904 ; dec dword ptr [rax - 0x75] ; ret
0x000002000016f0a8 : push rdi ; loopne 0x2000016f0c7 ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x0000020000091565 : push rdi ; mov cl, 0x32 ; add al, ch ; ret 0x2fa
0x000002000061fdd0 : push rdi ; mov edx, ebx ; call 0x2000024da46
0x000002000061fdcf : push rdi ; mov edx, ebx ; call 0x2000024da47
0x000002000061ff66 : push rdi ; mov edx, ebx ; lea ecx, dword ptr [rbx - 0x2f] ; call 0x2000024da49
0x0000020000534f95 : push rdi ; or al, 0x48 ; mov ecx, esi ; call 0x20000157548
0x0000020000716ec2 : push rdi ; or al, ch ; ja 0x20000716ed6 ; movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x00000200001322e6 : push rdi ; or bh, bh ; rol byte ptr [rbp + 0xf], 0xb7 ; ret
0x00000200004cfedd : push rdi ; or byte ptr [rax - 0x75], cl ; ret
0x000002000071afe0 : push rdi ; or byte ptr [rax - 0x75], cl ; retf ; mov rsi, rax ; call qword ptr [rdi]
0x0000020000080ed5 : push rdi ; or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000200001e66a8 : push rdi ; or byte ptr [rax - 1], cl ; ret
0x0000020000402788 : push rdi ; or byte ptr [rbp - 0x73], cl ; inc byte ptr [r13 + 3] ; ret 0xf41
0x000002000021d2d6 : push rdi ; or byte ptr [rbx + rcx*4 + 0x47], al ; adc byte ptr [rax - 0x75], cl ; ret 0x2349
0x0000020000237bf2 : push rdi ; or byte ptr [rcx - 0x75], cl ; add dword ptr [rdx - 0x75], ecx ; push rsp ; ret
0x00000200000ca07f : push rdi ; or eax, 0x200f4400 ; ret
0x0000020000483765 : push rdi ; pop rax ; mov rcx, r12 ; call 0x2000005fa07
0x00000200003dda45 : push rdi ; push -0xd179e9b ; jmp rsi
0x00000200001a8355 : push rdi ; ret
0x00000200001d0fcd : push rdi ; ret 0x14
0x00000200006f7766 : push rdi ; ret 0x40ff
0x00000200003db8f7 : push rdi ; ret 0x48ff
0x0000020000448725 : push rdi ; ret 0x4cff
0x00000200000ed2f2 : push rdi ; ret 0x600
0x00000200001c0219 : push rdi ; ret 0xffff
0x00000200000d97d4 : push rdi ; sbb byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200001b985b : push rdi ; sbb byte ptr [rbx + 0x207883], cl ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200001f0da9 : push rdi ; sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000009d9e8 : push rdi ; sub byte ptr [rax], al ; mov rax, qword ptr [rax + rcx*8] ; ret
0x0000020000487e14 : push rdi ; sub dh, dh ; ret 0x740f
0x000002000048783d : push rdi ; sub dh, dh ; ret 0xf0f
0x00000200004826bb : push rdi ; xor al, 0xf7 ; ret 1
0x00000200005e8748 : push rdi ; xor al, ch ; cmc ; xor eax, 0xe990ffe7 ; ret
0x000002000053f1ff : push rdi ; xor al, ch ; ret 0xaf83
0x000002000070c4c2 : push rdi ; xor byte ptr [rax - 0x75], cl ; ret
0x0000020000797a6a : push rdi ; xor byte ptr [rax - 0x7d], cl ; ret 0x4c18
0x000002000062fcc2 : push rdi ; xor byte ptr [rax - 0x7d], cl ; ret 0xe838
0x00000200004c624e : push rdi ; xor dh, dh ; ret 0xf10
0x000002000043b058 : push rdx ; adc al, 0 ; mov rcx, rbx ; call 0x20000061bf9
0x0000020000157bbc : push rdx ; adc al, 0x2b ; ret 0xccc3
0x00000200003ef672 : push rdx ; adc al, ch ; ret
0x0000020000129789 : push rdx ; adc byte ptr [rax - 0x7d], cl ; jmp 0x1ffc3ff0c9b
0x00000200000b0bff : push rdx ; adc byte ptr [rcx - 0x7f], cl ; ret 0x1a0
0x000002000013302b : push rdx ; add al, 0x83 ; ret 0x2307
0x000002000040a0e4 : push rdx ; add al, 0x83 ; sar edi, 0x75 ; ret
0x0000020000102069 : push rdx ; add al, 0xff ; ret 0xc148
0x00000200004f7c21 : push rdx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x73], cl ; loopne 0x200004f7c1b ; ret 0x64
0x00000200001488e5 : push rdx ; add byte ptr [rax], al ; add cl, ch ; push rdx ; xlatb ; add byte ptr [rax], al ; ret
0x000002000041f251 : push rdx ; add esi, esi ; ret 0xf10
0x0000020000717077 : push rdx ; and al, ch ; ret 0xa404
0x000002000018b2f4 : push rdx ; call rbx
0x00000200001b2fd2 : push rdx ; cli ; dec dword ptr [rax - 0x73] ; adc bpl, al ; ret 0xf880
0x00000200005835dc : push rdx ; cmp eax, 0x8b48ffe6 ; add dword ptr [rax + 0x2b], ecx ; ret 0x3b48
0x00000200001a1a4c : push rdx ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000002515c : push rdx ; je 0x200000250ed ; ret 0x412b
0x000002000045663c : push rdx ; jg 0x20000456647 ; mov al, 1 ; ret
0x00000200001496ea : push rdx ; leave ; add byte ptr [rax], al ; ret
0x000002000014b3ea : push rdx ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000014b2ea : push rdx ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000200001499ea : push rdx ; mov byte ptr [rax], 0 ; ret
0x0000020000157a64 : push rdx ; or al, 0x2b ; ret 0xccc3
0x00000200000cbf0d : push rdx ; or byte ptr [rax - 0x75], cl ; ret 0xd148
0x00000200005623d0 : push rdx ; or byte ptr [rax - 0x77], cl ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200004aa156 : push rdx ; or byte ptr [rax - 0x7d], cl ; jmp 0x1ffc43a1668
0x0000020000042acb : push rdx ; or byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200001c37fe : push rdx ; or byte ptr [rbp + 0x2b], cl ; ret 0xd975
0x000002000053f33c : push rdx ; or byte ptr [rbp + 0x3b], cl ; enter -0xe8e, -0x75 ; ret
0x00000200003fb977 : push rdx ; or byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x58 ; call rax
0x000002000002e4de : push rdx ; or byte ptr [rcx + rcx*4 + 0x12], cl ; mov rax, r8 ; ret
0x0000020000401ab2 : push rdx ; or byte ptr [rcx - 0x75], al ; ret 0xf44
0x00000200004642bc : push rdx ; or byte ptr [rcx - 0x75], al ; shr eax, cl ; ret 0xbef6
0x00000200004d16dc : push rdx ; or byte ptr [rcx - 0x75], al ; sub al, 0x4c ; lea ecx, dword ptr [rdx + rax*8] ; jmp 0x200004d16a7
0x00000200001b9163 : push rdx ; or byte ptr [rcx - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret 0x1172
0x000002000016dada : push rdx ; or esi, ecx ; call qword ptr [rax - 0x12fe3d17]
0x000002000008f440 : push rdx ; ret
0x0000020000149dea : push rdx ; ret 0
0x0000020000516876 : push rdx ; ret 0x85ff
0x00000200005caae0 : push rdx ; ret 0xffeb
0x000002000008d73a : push rdx ; ret 5
0x0000020000149fea : push rdx ; rol byte ptr [rax], 0 ; ret
0x0000020000149eea : push rdx ; rol dword ptr [rax], 0 ; ret
0x00000200006a8d75 : push rdx ; sahf ; dec dword ptr [rbx - 0xcfdbbc] ; ret
0x00000200001489ea : push rdx ; salc ; add byte ptr [rax], al ; ret
0x00000200006d39db : push rdx ; sbb al, 0x8b ; ret 0x25
0x000002000070efe1 : push rdx ; sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x17], cl ; ret
0x000002000065b9d1 : push rdx ; sbb byte ptr [rax - 0x7d], cl ; ret 0xeb20
0x0000020000020a3c : push rdx ; sbb byte ptr [rbx + rax - 0x3e], al ; jmp 0x20000020a1f
0x000002000065aab0 : push rdx ; sbb byte ptr [rcx - 0x77], cl ; add dword ptr [rax - 0x75], ecx ; ret 0x49f0
0x00000200004ecbdc : push rdx ; sbb dh, dh ; ret 0x4801
0x000002000014b1ea : push rdx ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b0ea : push rdx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b5ea : push rdx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000002000014b4ea : push rdx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x0000020000124010 : push rdx ; sub byte ptr [rax], al ; je 0x20000124023 ; mov rax, qword ptr [rax + 0x48] ; ret
0x00000200001488ea : push rdx ; xlatb ; add byte ptr [rax], al ; ret
0x000002000016f6d3 : push rdx ; xor byte ptr [rax + 0x69], cl ; rol dword ptr [rax], 0x46 ; ret
0x00000200000400dc : push rdx ; xor byte ptr [rbp + 0x3b], cl ; ret 0x894c
0x00000200004467c8 : push rdx ; xor byte ptr [rbp + 3], al ; ret 0x8b44
0x0000020000617efc : push rsi ; adc al, 0xf6 ; ret 0xf01
0x00000200004ceccb : push rsi ; adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000051acd1 : push rsi ; adc byte ptr [rax - 0x75], cl ; enter 0x65e8, -0x38 ; ret
0x0000020000249d1e : push rsi ; adc byte ptr [rax - 0x75], cl ; ret
0x0000020000425ba3 : push rsi ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000200000a7423 : push rsi ; adc byte ptr [rax - 0x7f], cl ; ret 0x1a0
0x0000020000247274 : push rsi ; adc byte ptr [rbp - 0x75], al ; ret 0x8b48
0x000002000047a49b : push rsi ; adc byte ptr [rcx + 0xf], al ; mov bh, 0x46 ; add bh, bh ; ret
0x00000200000a766b : push rsi ; adc byte ptr [rcx - 0x7f], cl ; ret 0x1a0
0x0000020000073e47 : push rsi ; adc dword ptr [rax], eax ; mov rax, r8 ; ret
0x000002000006041a : push rsi ; adc edi, edi ; ret 0x5688
0x000002000079b051 : push rsi ; add al, byte ptr [rax] ; add bh, bh ; ret
0x0000020000494f83 : push rsi ; add al, byte ptr [rcx - 0x7d] ; ret 0x4403
0x0000020000556367 : push rsi ; add bh, bh ; ret
0x0000020000644877 : push rsi ; add bh, byte ptr [rbx] ; ret 0x1b76
0x0000020000148965 : push rsi ; add byte ptr [rax], al ; add cl, ch ; rcl dh, cl ; add byte ptr [rax], al ; ret
0x00000200006d1824 : push rsi ; add cl, byte ptr [rbp + 0x12e8dd4a] ; ret 0xffb7
0x000002000059e0db : push rsi ; add dh, dh ; ret 0xf10
0x00000200004c649f : push rsi ; add dword ptr [rax - 0x75], ecx ; ret 0xc148
0x00000200000492ec : push rsi ; add dword ptr [rbp + rcx*4 + 0x3c], ecx ; ret
0x00000200003fa752 : push rsi ; add dx, r8w ; movzx r8d, dx ; jmp 0x200003fa705
0x000002000008cef7 : push rsi ; add eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000077ac92 : push rsi ; add eax, dword ptr [rbp - 0x74f38b25] ; ret 0x8948
0x000002000077bbdb : push rsi ; add eax, dword ptr [rbp - 0x74f38b25] ; ret 0x894c
0x0000020000095c0c : push rsi ; add esi, esi ; ret 0xf0f
0x0000020000534858 : push rsi ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000098b91 : push rsi ; and byte ptr [rax - 0x75], cl ; ret
0x00000200004500d7 : push rsi ; and byte ptr [rax - 0x7d], cl ; and al, 0xee ; add bh, bh ; ret
0x000002000043f8d5 : push rsi ; clc ; call 0x2000013bb78
0x00000200006e6d06 : push rsi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; push rsi ; ret
0x00000200004c47f6 : push rsi ; insd dword ptr [rdi], dx ; mov rcx, r13 ; call 0x200000e7e78
0x00000200004c5afd : push rsi ; insd dword ptr [rdi], dx ; mov rcx, r14 ; call 0x200000e7e78
0x00000200004c0bc0 : push rsi ; ja 0x200004c0c14 ; mov ecx, esi ; call 0x200000e7e78
0x00000200005172bf : push rsi ; je 0x20000517250 ; ret
0x00000200001bebf6 : push rsi ; lodsb al, byte ptr [rsi] ; adc eax, dword ptr [rax] ; call r9
0x0000020000692204 : push rsi ; lodsb al, byte ptr [rsi] ; jmp qword ptr [rcx]
0x00000200004fcfe4 : push rsi ; loopne 0x200004fcfec ; setne al ; ret
0x0000020000623ec6 : push rsi ; loopne 0x20000623ecf ; add rsp, 0x68 ; ret
0x000002000079c7f4 : push rsi ; mov eax, 0x58948ff ; ret 0xb856
0x00000200001c6055 : push rsi ; mov r8b, dl ; jmp 0x200001c60a5
0x00000200001ba8d6 : push rsi ; movsd dword ptr [rdi], dword ptr [rsi] ; dec esp ; add rsp, 0x28 ; ret
0x000002000052ac8a : push rsi ; or al, 0x48 ; mov ecx, eax ; call 0x20000157548
0x0000020000618c76 : push rsi ; or al, ch ; ret
0x000002000041b28b : push rsi ; or byte ptr [rax - 0x75], cl ; cmp r8b, r13b ; stosb byte ptr [rdi], al ; ret 0xffd3
0x0000020000694eb8 : push rsi ; or byte ptr [rbp - 0x75], al ; add al, 0x8b ; ret 0xe083
0x000002000077c313 : push rsi ; or byte ptr [rbp - 0x75], al ; ret
0x00000200003f3693 : push rsi ; or byte ptr [rbx - 0x914d411], cl ; ret 0xf20
0x00000200000855ee : push rsi ; or eax, dword ptr [rax] ; add rsp, 0x60 ; pop rbx ; ret
0x00000200006ee10f : push rsi ; outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x0000020000721f75 : push rsi ; push rsp ; insd dword ptr [rdi], dx ; jo 0x20000721f67 ; ret 0xb2ba
0x000002000047904d : push rsi ; rcl dword ptr [rax + rax], 0xf ; mov bh, 0x48 ; add bh, bh ; ret 0x348
0x0000020000015144 : push rsi ; ret
0x000002000053225f : push rsi ; ret 0x44ff
0x000002000005a4c8 : push rsi ; ret 0x4508
0x00000200006f78a6 : push rsi ; ret 0x48ff
0x0000020000195d43 : push rsi ; ret 0x7401
0x000002000016d556 : push rsi ; ret 0x7402
0x0000020000097540 : push rsi ; ret 0x7403
0x00000200001a6fa8 : push rsi ; ret 0x7404
0x00000200000b40c1 : push rsi ; ret 0x7408
0x000002000070e664 : push rsi ; ret 0x7410
0x000002000016786e : push rsi ; ret 0x741e
0x00000200005abca4 : push rsi ; ret 0x7420
0x00000200000b89e6 : push rsi ; ret 0x7502
0x0000020000092c26 : push rsi ; ret 0x7503
0x00000200004bacae : push rsi ; ret 0x750f
0x000002000005a264 : push rsi ; ret 0x751e
0x000002000066b7cb : push rsi ; ret 0x7573
0x0000020000062c1e : push rsi ; ret 0x75f0
0x0000020000516af5 : push rsi ; ret 0x85ff
0x000002000018f8a4 : push rsi ; ret 0xba01
0x0000020000797c8d : push rsi ; ret 0xe901
0x000002000005a485 : push rsi ; ret 0xe908
0x00000200000dde54 : push rsi ; ret 0xf01
0x00000200004bfe3b : push rsi ; ret 0xf02
0x0000020000042777 : push rsi ; ret 0xf03
0x00000200000a70b6 : push rsi ; ret 0xf04
0x00000200001718d6 : push rsi ; ret 0xf07
0x000002000006e3f4 : push rsi ; ret 0xf08
0x00000200005ec958 : push rsi ; ret 0xf0c
0x00000200000e33d7 : push rsi ; ret 0xf10
0x00000200004c5fce : push rsi ; ret 0xf20
0x00000200002279bb : push rsi ; ret 0xf30
0x00000200005abc9b : push rsi ; ret 0xf40
0x000002000019a6ce : push rsi ; ret 0xf42
0x00000200007bb05a : push rsi ; ret 0xffda
0x00000200003d6fce : push rsi ; ret 0xfff4
0x00000200007cbe3a : push rsi ; ret 0xfffe
0x00000200001a6fb7 : push rsi ; rol dword ptr [rdx], 0x74 ; adc byte ptr [rax - 0x7d], cl ; jmp qword ptr [rcx]
0x00000200005afab9 : push rsi ; sbb al, byte ptr [rcx - 0x73] ; call r11
0x000002000041b2da : push rsi ; sbb byte ptr [rax - 0x75], cl ; cmp r8b, r13b ; pop rbx ; ret 0xffd3
0x00000200000d9a4b : push rsi ; sbb byte ptr [rax - 0x75], cl ; ret 0xb849
0x0000020000676959 : push rsi ; sbb ebx, ecx ; inc dword ptr [rdx] ; sete al ; ret
0x000002000019292f : push rsi ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000b5319 : push rsi ; sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200005e4aaa : push rsi ; sub byte ptr [rax - 0x75], cl ; xor al, r13b ; ret
0x00000200006cafd7 : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x00000200001f1085 : push rsi ; sub byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000613ee6 : push rsi ; wait ; ret
0x00000200001c04f6 : push rsi ; xchg eax, ebx ; adc eax, dword ptr [rax] ; call r9
0x00000200006caf58 : push rsi ; xor byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x00000200006edc24 : push rsi ; xor dword ptr [rip + 0x30dbde31], ecx ; ret 0xc556
0x0000020000213c80 : push rsp ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000066a6a6 : push rsp ; add byte ptr [r13 + 3], r8b ; ret 0x8944
0x00000200001e364b : push rsp ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000148925 : push rsp ; add byte ptr [rax], al ; add cl, ch ; adc dl, bh ; add byte ptr [rax], al ; ret
0x00000200003d065f : push rsp ; and al, 0x20 ; call 0x2000051c8f1
0x000002000041bd24 : push rsp ; and al, 0x20 ; call r11
0x00000200006c6950 : push rsp ; and al, 0x20 ; call rax
0x0000020000683697 : push rsp ; and al, 0x20 ; lea ecx, dword ptr [rbx + 0x18] ; call 0x200004cf958
0x00000200007d4fc1 : push rsp ; and al, 0x20 ; mov al, dl ; add rsp, 0x38 ; ret
0x000002000052a600 : push rsp ; and al, 0x20 ; mov ecx, edi ; call rsi
0x000002000023b5ff : push rsp ; and al, 0x20 ; mov edx, esi ; call r11
0x000002000052a63b : push rsp ; and al, 0x20 ; mov rcx, r15 ; call 0x20000157549
0x000002000022bf65 : push rsp ; and al, 0x20 ; mov rdx, rsi ; call r10
0x0000020000550bb0 : push rsp ; and al, 0x28 ; add rax, rdx ; jmp 0x20000550bcb
0x00000200001bd019 : push rsp ; and al, 0x28 ; call r8
0x0000020000705e82 : push rsp ; and al, 0x28 ; lea rcx, qword ptr [rsp + 0x20] ; call r8
0x00000200001c4bef : push rsp ; and al, 0x28 ; mov cl, bl ; call rax
0x00000200003fe0cb : push rsp ; and al, 0x28 ; mov rcx, rbp ; call 0x2000000a3dc
0x00000200001162ac : push rsp ; and al, 0x28 ; xor ecx, ecx ; call rax
0x000002000046428d : push rsp ; and al, 0x30 ; call 0x20000093962
0x00000200004479d6 : push rsp ; and al, 0x30 ; call rax
0x0000020000160f6a : push rsp ; and al, 0x30 ; mov ecx, 0xa ; call rax
0x0000020000160f47 : push rsp ; and al, 0x30 ; mov ecx, 0xd ; call rax
0x000002000016dafb : push rsp ; and al, 0x30 ; mov qword ptr [rsp + 0x30], rax ; call r8
0x00000200003d0dc2 : push rsp ; and al, 0x30 ; mov rcx, rbx ; call 0x2000024d008
0x000002000064c5d7 : push rsp ; and al, 0x38 ; call 0x200003f8855
0x00000200001cb56f : push rsp ; and al, 0x38 ; call r9
0x00000200007b93b9 : push rsp ; and al, 0x38 ; call rax
0x00000200006ca768 : push rsp ; and al, 0x38 ; jmp 0x200006ca733
0x0000020000519491 : push rsp ; and al, 0x38 ; mov rcx, rdi ; call 0x20000148a99
0x0000020000156766 : push rsp ; and al, 0x40 ; add rsp, 0x50 ; call r10
0x00000200005493ae : push rsp ; and al, 0x40 ; dec rax ; add rax, rdx ; jmp 0x20000549353
0x000002000008f056 : push rsp ; and al, 0x40 ; mov bl, al ; call rsi
0x00000200001be151 : push rsp ; and al, 0x40 ; mov rcx, qword ptr [rsp + 0x20] ; call r9
0x00000200001be03e : push rsp ; and al, 0x40 ; mov rcx, qword ptr [rsp + 0x20] ; call rax
0x00000200001bcff1 : push rsp ; and al, 0x48 ; call r9
0x00000200001bbd04 : push rsp ; and al, 0x48 ; call rax
0x000002000014c618 : push rsp ; and al, 0x48 ; mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x00000200004ece86 : push rsp ; and al, 0x48 ; mov rcx, r15 ; call 0x200006590e0
0x000002000043a4d7 : push rsp ; and al, 0x50 ; jmp 0x2000043a4a2
0x000002000068f6ee : push rsp ; and al, 0x50 ; mov rcx, qword ptr [rsp + 0x48] ; call rax
0x000002000048cf9e : push rsp ; and al, 0x50 ; mov rcx, rdi ; call rsi
0x00000200006dbec4 : push rsp ; and al, 0x54 ; mov r8d, edi ; mov rdx, rbp ; call rax
0x00000200006ad030 : push rsp ; and al, 0x58 ; call rax
0x000002000048e06f : push rsp ; and al, 0x58 ; mov rcx, rbx ; call r15
0x00000200004cb58d : push rsp ; and al, 0x5c ; mov eax, edx ; jmp 0x200004cb539
0x00000200006c694b : push rsp ; and al, 0x60 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000020000431ae0 : push rsp ; and al, 0x60 ; mov rcx, rbx ; call rsi
0x000002000020e64f : push rsp ; and al, 0x60 ; mov rcx, rdi ; call 0x2000014a8f8
0x0000020000218a7d : push rsp ; and al, 0x70 ; call r9
0x00000200007a8c9a : push rsp ; and al, 0x70 ; mov rcx, r14 ; call 0x200003d241d
0x000002000000ca8a : push rsp ; and al, 0x70 ; mov rcx, rax ; call 0x20000408d38
0x00000200004a9c58 : push rsp ; and al, 0x70 ; mov rcx, rbp ; call rdi
0x0000020000218aca : push rsp ; and al, 0x70 ; xor ecx, ecx ; call r9
0x000002000046eab7 : push rsp ; and al, 0x78 ; mov rcx, rdi ; call r12
0x00000200001a5f67 : push rsp ; and al, 0x7c ; jmp 0x200000e13a7
0x000002000013fb76 : push rsp ; and al, 8 ; ret
0x000002000001e491 : push rsp ; call 0x2000001e4bc
0x0000020000626eaf : push rsp ; call 0x2000024da45
0x0000020000693c87 : push rsp ; call qword ptr [rax]
0x00000200003f737d : push rsp ; call r10
0x00000200001891e5 : push rsp ; cmc ; dec dword ptr [rcx + 0x3b] ; ret 0x840f
0x000002000010e354 : push rsp ; enter 0x4808, -0x75 ; adc byte ptr [rax - 0x7d], r9b ; ret 0x4408
0x00000200001b6de4 : push rsp ; enter 0x4828, -0x75 ; pop rsp ; and al, 8 ; ret
0x00000200006996c0 : push rsp ; fild dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret 0xb849
0x00000200003d3a63 : push rsp ; fstp dword ptr [rbx + rdi] ; ret 0x420f
0x0000020000721f76 : push rsp ; insd dword ptr [rdi], dx ; jo 0x20000721f66 ; ret 0xb2ba
0x0000020000197929 : push rsp ; int1 ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000197902 : push rsp ; int1 ; push rsi ; ret 0x741e
0x0000020000628f9d : push rsp ; jb 0x20000628f8d ; pushfq ; ret 0x48ff
0x000002000079cb33 : push rsp ; jo 0x2000079cb38 ; ret 0x8b41
0x00000200005d848d : push rsp ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax + 0x2b] ; ret 0xe281
0x0000020000537c72 : push rsp ; mov ah, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000044d92 : push rsp ; mov eax, edx ; ret
0x00000200004468bc : push rsp ; mov edx, esi ; lea ecx, dword ptr [rdi + 9] ; call 0x2000006c739
0x00000200001e7c22 : push rsp ; mov r8, r10 ; jmp 0x200001e7c7a
0x00000200006dbec6 : push rsp ; mov r8d, edi ; mov rdx, rbp ; call rax
0x000002000011fd57 : push rsp ; mov rcx, qword ptr [rdi + 8] ; call r8
0x000002000017a246 : push rsp ; mov rcx, qword ptr fs:[rdi + 8] ; call r8
0x0000020000044c84 : push rsp ; or al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001578c2 : push rsp ; or bh, bh ; dec r8 ; jne 0x200001578c8 ; ret
0x0000020000157970 : push rsp ; or bh, bh ; dec r8 ; jne 0x20000157976 ; ret
0x00000200001f45fa : push rsp ; out dx, eax ; dec dword ptr [rbx - 0x74bba3a9] ; ret 0xc141
0x000002000011fd75 : push rsp ; pop rax ; mov rcx, qword ptr [rdi + 8] ; call r8
0x000002000017a270 : push rsp ; push 0x84f8b48 ; call r8
0x000002000061f38a : push rsp ; push rdi ; call 0x2000024d007
0x0000020000620aef : push rsp ; push rdi ; call 0x2000024da47
0x00000200001a1a4b : push rsp ; push rdx ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000011fd55 : push rsp ; push rsp ; mov rcx, qword ptr [rdi + 8] ; call r8
0x0000020000055413 : push rsp ; ret
0x0000020000049422 : push rsp ; ret 0x4118
0x0000020000627b62 : push rsp ; ret 0x48ff
0x00000200000b4685 : push rsp ; ret 0x4b08
0x00000200005157c3 : push rsp ; ret 0x4cff
0x000002000058fb52 : push rsp ; ret 0x8bff
0x00000200000a7998 : push rsp ; ret 0xc708
0x000002000017d14e : push rsp ; ret 0xe870
0x000002000003a4fd : push rsp ; ret 0xf08
0x0000020000200bb8 : push rsp ; ret 0xffe7
0x00000200006ab088 : push rsp ; ror byte ptr [rax], 0x33 ; rol byte ptr [rcx - 1], 0 ; ret
0x000002000069ccd0 : push rsp ; sar bh, cl ; dec dword ptr [rax - 0x75] ; or r8b, bpl ; ret
0x00000200001ad907 : push rsp ; shl byte ptr [rcx], 0x41 ; cmp ecx, dword ptr [rax] ; jb 0x200001ad8f5 ; ret
0x00000200006f759b : push rsp ; shl dword ptr [rax], -0x75 ; ret 0x524
0x000002000051d500 : push rsp ; xchg byte ptr [rcx], cl ; add al, ch ; ret
0x000002000045f70e : push rsp ; xor byte ptr [rax], al ; ret 0x700
0x00000200004bd33b : pushfq ; adc dword ptr [rax], eax ; mov rcx, rdi ; call 0x200000e7259
0x000002000047f719 : pushfq ; adc eax, dword ptr [rax] ; add dh, dh ; ret 0x7401
0x00000200001bfc12 : pushfq ; adc eax, dword ptr [rax] ; call rax
0x000002000019577a : pushfq ; add al, 0xf1 ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000663f12 : pushfq ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffe
0x0000020000092bcf : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0xf49
0x00000200000c8ab1 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000137cc0 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x0000020000149225 : pushfq ; add byte ptr [rax], al ; add cl, ch ; adc cl, dh ; add byte ptr [rax], al ; ret
0x0000020000482c5d : pushfq ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000180fd2 : pushfq ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000783854 : pushfq ; add eax, 0x8b480000 ; ret 0x5c89
0x000002000077fd39 : pushfq ; add eax, 0x8b480000 ; ret 0xc148
0x0000020000567e5e : pushfq ; add eax, 0xb480000 ; ret 0x1bf
0x00000200003e8953 : pushfq ; and al, 0 ; add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x00000200005df7d9 : pushfq ; and al, 0 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000485b12 : pushfq ; and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rdx], dh ; ret
0x0000020000124372 : pushfq ; and al, 0x58 ; add dword ptr [rax], eax ; add cl, ch ; ret
0x0000020000584b49 : pushfq ; and al, 0x68 ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200001f9d0c : pushfq ; and al, 0x78 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000483cf : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x000002000021b259 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000413b51 : pushfq ; and al, 0x94 ; add byte ptr [rax], al ; add bh, dh ; ret
0x000002000079ee1d : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x348
0x0000020000534376 : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200000289ff : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000016f639 : pushfq ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000020000095eac : pushfq ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x00000200004b2df8 : pushfq ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x41fe
0x000002000052b481 : pushfq ; and al, 0xf0 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200004b2745 : pushfq ; and al, 0xf8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004a031c : pushfq ; call qword ptr [rdx]
0x00000200004ffa30 : pushfq ; clc ; add byte ptr [r9 + 3], r9b ; ret 0xe0ff
0x00000200001793c2 : pushfq ; cli ; dec dword ptr [rax - 0x75] ; ret
0x00000200005d99d7 : pushfq ; cmc ; out dx, al ; push rsi ; ret
0x0000020000151341 : pushfq ; lea rdx, qword ptr [rip + 0x71] ; jmp rdx
0x0000020000069e22 : pushfq ; leave ; adc dword ptr [rax], eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200006bbfbd : pushfq ; leave ; inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xd03b
0x000002000043744d : pushfq ; lock inc dword ptr [rbx - 0x7bf0fd08] ; ret
0x0000020000199b9d : pushfq ; mov ah, 0xf1 ; inc dword ptr [rbp - 0x75] ; ret
0x000002000072b8c4 : pushfq ; mov al, 0xff ; add rsp, 0x58 ; ret
0x00000200000e94f7 : pushfq ; mov byte ptr [rax + 1], 0 ; add dh, dh ; ret
0x00000200005389f7 : pushfq ; mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rcx], rax ; jmp 0x200005389cd
0x000002000045f1f0 : pushfq ; out dx, al ; ret
0x0000020000622f30 : pushfq ; rcl byte ptr [r10 + 0x4740074], 0xff ; ret 0x15eb
0x000002000006350b : pushfq ; ret
0x0000020000623d78 : pushfq ; ret 0x48ff
0x000002000077f6a1 : pushfq ; ret 0x4cff
0x00000200007bc29f : pushfq ; ret 0x66ff
0x00000200000d8c02 : pushfq ; ret 0x7340
0x0000020000589d39 : pushfq ; ret 0x7ee9
0x0000020000715ef7 : pushfq ; ret 0x8068
0x000002000017b762 : pushfq ; ret 0x828
0x00000200000303ef : pushfq ; ret 0x8341
0x0000020000024d86 : pushfq ; ret 0x88
0x000002000005880a : pushfq ; ret 0x9540
0x00000200005a3028 : pushfq ; ret 0xfff5
0x000002000042dc00 : pushfq ; sar bh, cl ; nop ; add rsp, 0x28 ; ret
0x0000020000509724 : pushfq ; sar edi, 1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200000c66f4 : pushfq ; scasd eax, dword ptr [rdi] ; and eax, dword ptr [rax] ; call r8
0x00000200000cf915 : pushfq ; sub eax, 0x3b446600 ; ret 0x820f
0x0000020000148b6a : rcl ah, cl ; add byte ptr [rax], al ; ret
0x0000020000148f6a : rcl al, cl ; add byte ptr [rax], al ; ret
0x000002000014886a : rcl bh, cl ; add byte ptr [rax], al ; ret
0x0000020000148c6a : rcl bl, cl ; add byte ptr [rax], al ; ret
0x0000020000622f31 : rcl byte ptr [r10 + 0x4740074], 0xff ; ret 0x15eb
0x000002000066338c : rcl byte ptr [rax + 0x4c000008], 3 ; ret 0x894c
0x0000020000052c69 : rcl byte ptr [rax + rax], 0 ; ret
0x000002000060fb88 : rcl byte ptr [rax], 0x48 ; add eax, ecx ; ret
0x0000020000225205 : rcl byte ptr [rax], 0x48 ; add esp, 0x28 ; ret
0x00000200001a9d08 : rcl byte ptr [rax], 0xb9 ; ret 0
0x0000020000442878 : rcl byte ptr [rax], 0xc3 ; xor eax, eax ; ret
0x00000200005128ec : rcl byte ptr [rax], 0xeb ; fld qword ptr [rbx] ; ret 0xdfeb
0x000002000002b2ef : rcl byte ptr [rax], 0xff ; ret
0x000002000007dfac : rcl byte ptr [rax], 1 ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000007dd36 : rcl byte ptr [rax], cl ; add dh, dh ; ret 0xf02
0x00000200001bd7dd : rcl byte ptr [rbx], 0 ; call r9
0x00000200007e1310 : rcl byte ptr [rbx], cl ; jle 0x200007e131c ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7e13
0x000002000007f527 : rcl byte ptr [rcx + rax*2], 3 ; ret 0xc141
0x00000200007cc000 : rcl byte ptr [rdi - 0x163c7401], 0x39 ; ret
0x0000020000023fae : rcl byte ptr [rdx + 0x38], cl ; add byte ptr [rcx - 0x7c], al ; ret
0x0000020000622f32 : rcl byte ptr [rdx + 0x4740074], 0xff ; ret 0x15eb
0x0000020000148a6a : rcl ch, cl ; add byte ptr [rax], al ; ret
0x00000200002350a5 : rcl cl, 0xe9 ; jne 0x200002350a9 ; ret
0x00000200000e95cc : rcl cl, 0xf8 ; cmp edx, eax ; jl 0x200000e95df ; mov al, 1 ; ret
0x00000200003cd45c : rcl cl, 1 ; ret
0x0000020000148e6a : rcl cl, cl ; add byte ptr [rax], al ; ret
0x000002000014896a : rcl dh, cl ; add byte ptr [rax], al ; ret
0x0000020000148d6a : rcl dl, cl ; add byte ptr [rax], al ; ret
0x000002000047904e : rcl dword ptr [rax + rax], 0xf ; mov bh, 0x48 ; add bh, bh ; ret 0x348
0x000002000008e019 : rcl dword ptr [rax - 0x18], -0x30 ; ret 3
0x000002000020217f : rcl dword ptr [rax], -0x18 ; ret 0x1ffc
0x000002000054d46d : rcl dword ptr [rax], -0x46 ; or eax, 0xfc00000 ; ret 0xd08b
0x00000200005abd4d : rcl dword ptr [rax], -0x75 ; ret 0xf41
0x000002000021ecea : rcl dword ptr [rax], -0x77 ; pop rcx ; adc byte ptr [rax - 0x7d], cl ; ret 0x4830
0x00000200000c831b : rcl dword ptr [rax], -1 ; ret 0x8b4c
0x000002000010a32f : rcl dword ptr [rax], 0x3b ; ret 0x4c73
0x00000200005b279c : rcl dword ptr [rax], 0x3b ; ret 0xee72
0x0000020000237326 : rcl dword ptr [rax], 0x45 ; test edx, edx ; je 0x200002372f7 ; mov eax, r10d ; jmp 0x2000023733d
0x00000200000365b3 : rcl dword ptr [rax], 0x48 ; sub eax, 1 ; jne 0x200000365b2 ; ret
0x00000200004385b4 : rcl dword ptr [rax], 0x48 ; sub eax, 1 ; jne 0x200004385b3 ; ret
0x000002000013ac7b : rcl dword ptr [rax], 0x66 ; test ecx, 0x175ffff ; ret
0x000002000003fb80 : rcl dword ptr [rax], 0x75 ; add eax, 0x38c48348 ; ret
0x00000200004bb493 : rcl dword ptr [rax], 0x75 ; add ebx, eax ; bts dword ptr [rdx], 7 ; ret
0x00000200000c3dbb : rcl dword ptr [rcx + 0x10], -1 ; ret 0xffb8
0x00000200000da8fe : rcl dword ptr [rcx - 0x74b6fff4], cl ; ret 0x48f0
0x00000200000436eb : rcl dword ptr [rdx], 0 ; ret
0x0000020000452545 : rcl dword ptr [rip + 0xd8d4800], 0x11 ; ret
0x000002000042828b : rcl dword ptr [rsi - 0x23170011], 1 ; pop rsi ; ret
0x0000020000633f7d : rcl eax, -1 ; call rax
0x00000200003d308f : rcl eax, 1 ; ret
0x000002000052bbf3 : rcl ebp, 8 ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000002000002df09 : rcl ebx, 1 ; loop 0x2000002df34 ; ret 0xc23b
0x0000020000404786 : rcl esp, 1 ; dec dword ptr [rax + 0x3b] ; ret
0x000002000014836a : rcr ah, cl ; add byte ptr [rax], al ; ret
0x000002000014876a : rcr al, cl ; add byte ptr [rax], al ; ret
0x000002000014806a : rcr bh, cl ; add byte ptr [rax], al ; ret
0x000002000014846a : rcr bl, cl ; add byte ptr [rax], al ; ret
0x0000020000564b2e : rcr byte ptr [rax], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000021c332 : rcr byte ptr [rax], 0x48 ; cmp eax, ecx ; jb 0x2000021c335 ; xor eax, eax ; ret
0x00000200004e7cb0 : rcr byte ptr [rax], 0x83 ; cli ; add dh, byte ptr [rdx - 0x10] ; xor eax, eax ; ret
0x0000020000434603 : rcr byte ptr [rax], 0xeb ; jrcxz 0x20000434658 ; add eax, 8 ; ret
0x000002000000c31f : rcr byte ptr [rax], 0xeb ; out dx, al ; add eax, edx ; jmp 0x2000000c302
0x0000020000213e89 : rcr byte ptr [rax], 0xeb ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000020000110d84 : rcr byte ptr [rbx + 0x14], 1 ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200006e7d66 : rcr byte ptr [rbx + rax*2], 0xf ; mov bh, 0x44 ; sbb byte ptr [rbx + rdi], al ; ret
0x00000200001ead0e : rcr byte ptr [rbx], cl ; add bh, bh ; ret
0x00000200003e75ba : rcr byte ptr [rcx], 0 ; call 0x20000007b1a
0x0000020000712b3c : rcr byte ptr [rcx], 1 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000013411d : rcr byte ptr [rdi], 0xf ; xchg eax, ebp ; ret 0xc149
0x000002000019669c : rcr byte ptr [rdi], cl ; int1 ; dec dword ptr [rax - 0x39] ; ret
0x00000200001c5ce4 : rcr byte ptr [rdx + 0x5870015], 1 ; ret 0x159a
0x000002000015274e : rcr byte ptr [rsi + 0x5f], 0x5b ; pop rbp ; pop r12 ; ret
0x000002000014826a : rcr ch, cl ; add byte ptr [rax], al ; ret
0x000002000014866a : rcr cl, cl ; add byte ptr [rax], al ; ret
0x000002000014816a : rcr dh, cl ; add byte ptr [rax], al ; ret
0x00000200004a0f0e : rcr dl, 0xff ; add rsp, 0x28 ; ret
0x000002000014856a : rcr dl, cl ; add byte ptr [rax], al ; ret
0x0000020000486e63 : rcr dword ptr [rax + 3], 0 ; add al, ch ; ret
0x00000200006d27cd : rcr dword ptr [rax - 0x163fcc01], 1 ; ret
0x0000020000526815 : rcr dword ptr [rax - 0x7d], 1 ; ret 0x3960
0x0000020000437933 : rcr dword ptr [rax], -0x18 ; pop rsi ; ret
0x000002000024c58d : rcr dword ptr [rbx + 0x48], cl ; add esp, 8 ; jmp r8
0x00000200005fc710 : rcr dword ptr [rbx], -0x40 ; and eax, 0xfffffffe ; inc eax ; ret
0x000002000013c270 : rcr dword ptr [rbx], -0x40 ; sbb eax, -1 ; ret
0x000002000013b87a : rcr dword ptr [rbx], cl ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000706e1e : rcr dword ptr [rcx + 0xb4], -1 ; ret
0x0000020000189c1d : rcr dword ptr [rdi + 0x158], -0x17 ; xchg eax, esp ; ret 0xffee
0x00000200005cd910 : rcr dword ptr [rdi + 0x48], -0x77 ; add eax, 0x17a907 ; ret
0x000002000005e8eb : rcr dword ptr [rsi + 0x194], -1 ; ret
0x00000200001bbe9f : rcr dword ptr [rsi], cl ; add cl, al ; call 0x1ffc31ce2c4
0x00000200004d715b : rcr edi, 1 ; cld ; dec dword ptr [rax + 0x3b] ; ret 0xd74
0x00000200004aa189 : rcr esi, cl ; ret
0x000002000013b879 : rcr qword ptr [r11], cl ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000052bbe1 : rdmsr ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000014bb81 : rdmsr ; and eax, 0xfffffffc ; wrmsr ; ret
0x0000020000062f63 : rdmsr ; ret 0x8388
0x0000020000150e9c : rdmsr ; shl rdx, 0x20 ; or rax, rdx ; pop rdi ; ret
0x00000200001dbd4d : rdmsr ; shl rdx, 0x20 ; or rax, rdx ; ret
0x00000200006ddbb7 : rdpmc ; inc dword ptr [rcx - 1] ; ret
0x000002000046b7ad : rdpmc ; ret
0x00000200006dfe46 : rdpmc ; rol byte ptr [rcx - 1], cl ; ret
0x000002000011cd29 : rdpmc ; sal byte ptr [rbx], cl ; leave ; call rax
0x00000200005f0c62 : rdpmc ; shr al, cl ; xchg eax, esi ; ret
0x00000200000659fc : rdtsc ; shl rdx, 0x20 ; or rax, rdx ; ret
0x000002000072b039 : rep stosb byte ptr [rdi], al ; ret 0x45ff
0x00000200001bf35a : repne movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, dword ptr [rax] ; call rax
0x000002000014b14a : repne scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b04a : repne scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b54a : repne stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000200004cd5b8 : repne stosb byte ptr [rdi], al ; add byte ptr [rdx], r14b ; lodsb al, byte ptr [rsi] ; add dl, r9b ; ret
0x000002000014b44a : repne stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x00000200000024c8 : ret
0x000002000000b83a : ret 0
0x000002000007efea : ret 0x10
0x000002000014ba06 : ret 0x100
0x0000020000072ab2 : ret 0x1000
0x000002000010740f : ret 0x100f
0x00000200004ca287 : ret 0x101
0x000002000066b84a : ret 0x1024
0x000002000008c7ce : ret 0x1029
0x000002000002f847 : ret 0x103
0x00000200001ff60a : ret 0x103e
0x00000200000862a4 : ret 0x1073
0x000002000007f658 : ret 0x1074
0x00000200001f75ee : ret 0x1075
0x000002000067800b : ret 0x1076
0x00000200000cb266 : ret 0x1077
0x0000020000546c4f : ret 0x1078
0x0000020000192f19 : ret 0x108
0x0000020000204dbb : ret 0x109e
0x0000020000025c62 : ret 0x10a8
0x000002000017b21e : ret 0x10b
0x000002000044ac19 : ret 0x10ba
0x0000020000402755 : ret 0x10bb
0x00000200001ea57a : ret 0x10d5
0x00000200001f1dda : ret 0x10e8
0x000002000013c104 : ret 0x10eb
0x00000200001b749f : ret 0x11
0x000002000001a2a2 : ret 0x110
0x00000200004c9345 : ret 0x1106
0x000002000008e371 : ret 0x110f
0x000002000006c226 : ret 0x1140
0x00000200004c32ee : ret 0x1153
0x000002000013d6ea : ret 0x116a
0x00000200001b916a : ret 0x1172
0x00000200000bdf53 : ret 0x1173
0x000002000013d1b4 : ret 0x1174
0x000002000006ca43 : ret 0x1175
0x000002000005e3ed : ret 0x1177
0x0000020000150949 : ret 0x118
0x00000200004bf4fb : ret 0x1184
0x0000020000458288 : ret 0x1188
0x000002000009914d : ret 0x11b2
0x000002000016e729 : ret 0x11ba
0x000002000003a27a : ret 0x11d2
0x000002000012f73a : ret 0x11d8
0x00000200005b5446 : ret 0x11e9
0x00000200001d8f7a : ret 0x11eb
0x0000020000235e12 : ret 0x11fe
0x0000020000056427 : ret 0x12
0x00000200004b2b49 : ret 0x1214
0x00000200004b1fc6 : ret 0x121d
0x0000020000625b5a : ret 0x1224
0x00000200004af7ad : ret 0x123a
0x000002000006143b : ret 0x123e
0x0000020000119c1b : ret 0x124
0x000002000005fe66 : ret 0x124e
0x000002000008b54f : ret 0x125
0x00000200004ac2f0 : ret 0x125e
0x000002000005bce8 : ret 0x1273
0x000002000006ca54 : ret 0x1274
0x00000200003fbd69 : ret 0x1275
0x00000200001ecfee : ret 0x1276
0x00000200001aa42a : ret 0x1277
0x00000200004054fc : ret 0x127d
0x00000200005b6b97 : ret 0x128
0x00000200004a9478 : ret 0x1283
0x00000200006c60b7 : ret 0x128b
0x000002000012367a : ret 0x12a3
0x000002000010eda0 : ret 0x12b
0x0000020000188832 : ret 0x12ba
0x0000020000042618 : ret 0x12cb
0x000002000011fb3a : ret 0x12d4
0x00000200001c9a7a : ret 0x12e0
0x000002000002d4d8 : ret 0x13
0x000002000004b2a5 : ret 0x1339
0x0000020000432f76 : ret 0x1367
0x0000020000498553 : ret 0x1369
0x00000200003fab60 : ret 0x1372
0x000002000024a125 : ret 0x1373
0x000002000016454b : ret 0x1374
0x000002000011caa3 : ret 0x1375
0x00000200001e1716 : ret 0x1376
0x0000020000032773 : ret 0x1380
0x000002000003218c : ret 0x1383
0x00000200004962b0 : ret 0x1386
0x00000200005aed83 : ret 0x1389
0x0000020000057c10 : ret 0x138b
0x0000020000494071 : ret 0x13a1
0x000002000002e674 : ret 0x13b3
0x0000020000109627 : ret 0x13e8
0x0000020000140267 : ret 0x13eb
0x00000200001b48fa : ret 0x13f3
0x0000020000018cc5 : ret 0x14
0x000002000046377b : ret 0x141
0x0000020000025c84 : ret 0x1420
0x00000200004869fb : ret 0x143f
0x0000020000240680 : ret 0x144
0x00000200004850ce : ret 0x144c
0x000002000060287a : ret 0x1462
0x0000020000018811 : ret 0x1472
0x0000020000560067 : ret 0x1473
0x0000020000033d3b : ret 0x1474
0x00000200004a6d13 : ret 0x1475
0x00000200004e5c5f : ret 0x1476
0x00000200007ce777 : ret 0x147d
0x0000020000704cae : ret 0x147f
0x000002000003e1fa : ret 0x148
0x00000200007a3b39 : ret 0x148b
0x0000020000663539 : ret 0x148d
0x0000020000094bc3 : ret 0x149
0x000002000010383a : ret 0x1497
0x0000020000477e18 : ret 0x14d1
0x00000200000ff63a : ret 0x14d9
0x00000200001d8e1a : ret 0x14eb
0x00000200006f4a0f : ret 0x14ff
0x00000200000037e4 : ret 0x15
0x00000200004744c0 : ret 0x1501
0x0000020000011e28 : ret 0x151a
0x000002000001109e : ret 0x151f
0x00000200001a10f2 : ret 0x1521
0x000002000000fba7 : ret 0x152e
0x00000200001a05b2 : ret 0x1538
0x000002000019e285 : ret 0x1539
0x000002000059879a : ret 0x1553
0x0000020000614b1c : ret 0x1572
0x00000200004c2d9e : ret 0x1573
0x0000020000078ad0 : ret 0x1574
0x00000200001254bb : ret 0x1589
0x00000200001c5cca : ret 0x159a
0x00000200007175d1 : ret 0x15a
0x0000020000454da8 : ret 0x15ab
0x00000200004534b1 : ret 0x15bb
0x0000020000451dab : ret 0x15c7
0x0000020000717242 : ret 0x15e
0x00000200001ac63c : ret 0x15e9
0x00000200001b1792 : ret 0x15eb
0x00000200000e0cff : ret 0x16
0x00000200001c4d4c : ret 0x1604
0x000002000044890b : ret 0x162d
0x000002000066dd87 : ret 0x163b
0x000002000045933a : ret 0x163d
0x0000020000445ea8 : ret 0x1644
0x0000020000443068 : ret 0x1667
0x00000200000164f3 : ret 0x1674
0x00000200001cac58 : ret 0x1675
0x00000200001cf6e8 : ret 0x167c
0x000002000043b9c4 : ret 0x16a9
0x0000020000513518 : ret 0x16e8
0x00000200001b1739 : ret 0x16eb
0x00000200007a72ca : ret 0x16f
0x00000200001a702a : ret 0x17
0x000002000051c5ac : ret 0x1700
0x0000020000431d40 : ret 0x170c
0x00000200007b46d0 : ret 0x171
0x00000200005fef16 : ret 0x173b
0x000002000005edee : ret 0x1753
0x00000200000bdf16 : ret 0x177
0x000002000006ed0f : ret 0x1773
0x0000020000169e7c : ret 0x1774
0x00000200000bb39c : ret 0x1775
0x00000200000d2adf : ret 0x1776
0x0000020000034ff0 : ret 0x1777
0x000002000015e175 : ret 0x177c
0x00000200007b3b82 : ret 0x178
0x00000200003fd0bd : ret 0x1789
0x000002000044ac28 : ret 0x178b
0x000002000041d070 : ret 0x17a0
0x00000200005ce342 : ret 0x17c
0x0000020000420ec5 : ret 0x17ca
0x00000200000e1d78 : ret 0x17e9
0x000002000004815c : ret 0x18
0x00000200003cfa20 : ret 0x1824
0x000002000040bcab : ret 0x1851
0x000002000061ad84 : ret 0x1873
0x0000020000673a5a : ret 0x1875
0x0000020000087cef : ret 0x187c
0x0000020000232c7f : ret 0x187d
0x00000200001ce608 : ret 0x188
0x00000200001b5f81 : ret 0x188b
0x00000200002027ee : ret 0x189
0x00000200000df6e0 : ret 0x18b
0x00000200004f6e65 : ret 0x18ba
0x00000200000ca72a : ret 0x18c1
0x0000020000198cba : ret 0x18c7
0x00000200003fc68a : ret 0x18d3
0x00000200000ddc72 : ret 0x18dd
0x00000200003fecc4 : ret 0x18eb
0x0000020000187fb0 : ret 0x19
0x00000200000385db : ret 0x190
0x00000200003f7dac : ret 0x190b
0x000002000066a8c5 : ret 0x191
0x00000200003f091a : ret 0x1961
0x00000200006cddc5 : ret 0x1972
0x00000200000c689b : ret 0x1973
0x0000020000657b7e : ret 0x1974
0x000002000020dfdc : ret 0x1975
0x00000200007ce772 : ret 0x197c
0x00000200003edb4a : ret 0x197e
0x0000020000186682 : ret 0x1995
0x00000200003ea4c5 : ret 0x19a9
0x000002000018710e : ret 0x19b5
0x00000200004b3dfd : ret 0x19b8
0x00000200003e1352 : ret 0x19fe
0x000002000004a393 : ret 0x1a0
0x0000020000207142 : ret 0x1a22
0x000002000047c67a : ret 0x1a72
0x00000200007a9799 : ret 0x1a74
0x0000020000076cc6 : ret 0x1a77
0x00000200007c8e54 : ret 0x1a7f
0x0000020000070636 : ret 0x1a8
0x000002000059adf2 : ret 0x1ad2
0x00000200004f82e8 : ret 0x1ae8
0x000002000050f2e5 : ret 0x1ae9
0x00000200001b16b7 : ret 0x1aeb
0x0000020000093d7d : ret 0x1b
0x00000200000ac95f : ret 0x1b0
0x0000020000624c74 : ret 0x1b1
0x000002000016f812 : ret 0x1b1a
0x00000200005566b3 : ret 0x1b2
0x0000020000144c2a : ret 0x1b3e
0x000002000041f274 : ret 0x1b45
0x000002000017adad : ret 0x1b48
0x00000200001ca7c8 : ret 0x1b72
0x00000200000104d2 : ret 0x1b73
0x000002000020e491 : ret 0x1b74
0x000002000046a1a2 : ret 0x1b75
0x000002000064487a : ret 0x1b76
0x0000020000009c8d : ret 0x1b77
0x000002000013032f : ret 0x1b8
0x00000200002472f8 : ret 0x1b9
0x00000200000260f4 : ret 0x1ba
0x0000020000778a89 : ret 0x1bb
0x000002000016b196 : ret 0x1bd
0x000002000070c27f : ret 0x1be
0x00000200004ed04f : ret 0x1be8
0x000002000008e13a : ret 0x1bee
0x000002000004acc2 : ret 0x1bf
0x00000200005ea506 : ret 0x1c38
0x0000020000111bda : ret 0x1c7
0x00000200003e915b : ret 0x1c72
0x000002000061be93 : ret 0x1c73
0x000002000011cf76 : ret 0x1c74
0x000002000000c199 : ret 0x1c75
0x000002000060d183 : ret 0x1c76
0x0000020000214d18 : ret 0x1c77
0x000002000006f84e : ret 0x1c7d
0x0000020000137752 : ret 0x1c89
0x000002000024e92e : ret 0x1ce9
0x00000200001268b2 : ret 0x1d
0x00000200001d3b4a : ret 0x1d44
0x0000020000138a9a : ret 0x1d49
0x000002000008f6a3 : ret 0x1d73
0x000002000070d341 : ret 0x1d74
0x000002000000fcec : ret 0x1d75
0x00000200004318ef : ret 0x1d76
0x0000020000420bb9 : ret 0x1d77
0x00000200001c8c22 : ret 0x1da
0x0000020000189332 : ret 0x1db9
0x00000200001433b8 : ret 0x1deb
0x00000200007aa45e : ret 0x1df
0x00000200001bd063 : ret 0x1e
0x00000200007a9d21 : ret 0x1e3
0x000002000055df6e : ret 0x1e72
0x000002000067b299 : ret 0x1e73
0x0000020000027bde : ret 0x1e74
0x000002000000c369 : ret 0x1e77
0x0000020000544df1 : ret 0x1e8
0x00000200001396aa : ret 0x1e9
0x00000200001101fc : ret 0x1ea8
0x00000200001be742 : ret 0x1eaa
0x00000200001bcf16 : ret 0x1ec4
0x000002000065843c : ret 0x1ee8
0x0000020000093c8b : ret 0x1f0f
0x000002000016a5bb : ret 0x1f72
0x000002000000bfb0 : ret 0x1f74
0x00000200003cd5ce : ret 0x1f75
0x00000200000c7aee : ret 0x1f77
0x0000020000544da1 : ret 0x1f8
0x000002000050dd20 : ret 0x1f88
0x000002000020f30e : ret 0x1feb
0x000002000004622f : ret 0x1ff
0x0000020000202182 : ret 0x1ffc
0x000002000004ae83 : ret 0x200
0x00000200001da3ea : ret 0x2000
0x000002000011f17a : ret 0x200a
0x00000200001c32f6 : ret 0x201
0x000002000012f627 : ret 0x2025
0x00000200001cc60a : ret 0x2057
0x00000200004208d4 : ret 0x2072
0x0000020000534adb : ret 0x2073
0x0000020000059053 : ret 0x2074
0x00000200000ee9a2 : ret 0x2075
0x0000020000039307 : ret 0x207d
0x0000020000445b30 : ret 0x2083
0x000002000069dadc : ret 0x209
0x0000020000176d73 : ret 0x20ba
0x00000200000f3f2a : ret 0x20bb
0x0000020000115a3a : ret 0x20e8
0x000002000018b37d : ret 0x20e9
0x000002000006385e : ret 0x210
0x00000200001ab497 : ret 0x2148
0x000002000012ae8a : ret 0x2152
0x00000200007087af : ret 0x2173
0x0000020000431576 : ret 0x2174
0x0000020000518cea : ret 0x2175
0x000002000042470d : ret 0x2176
0x000002000012a3e1 : ret 0x2177
0x00000200000f3e3a : ret 0x2193
0x00000200000f0812 : ret 0x21cb
0x00000200003d04fa : ret 0x220f
0x00000200000ff272 : ret 0x222c
0x0000020000222833 : ret 0x224
0x0000020000658754 : ret 0x2274
0x00000200000c9d76 : ret 0x22a0
0x000002000050d551 : ret 0x22b8
0x00000200001fce37 : ret 0x230
0x000002000013302e : ret 0x2307
0x000002000000fa7f : ret 0x2341
0x0000020000483d46 : ret 0x2343
0x0000020000015b4d : ret 0x2344
0x000002000007f15e : ret 0x2345
0x000002000002c3eb : ret 0x2348
0x00000200000164ce : ret 0x2349
0x000002000004b91e : ret 0x234c
0x00000200000a6e66 : ret 0x234d
0x00000200002121ba : ret 0x2366
0x00000200001672f1 : ret 0x2373
0x000002000000c192 : ret 0x2374
0x0000020000477b34 : ret 0x2377
0x000002000009cf5e : ret 0x23c
0x000002000007db89 : ret 0x23c3
0x00000200000d685e : ret 0x24
0x000002000041de0c : ret 0x240
0x00000200005f8abd : ret 0x2400
0x000002000013d5b2 : ret 0x2475
0x00000200000ddb11 : ret 0x247c
0x0000020000492344 : ret 0x247d
0x000002000015f19a : ret 0x24a2
0x000002000043b864 : ret 0x24b9
0x000002000068eb8d : ret 0x24c
0x000002000004368a : ret 0x24d
0x00000200000c7531 : ret 0x25
0x00000200000aa0ca : ret 0x2548
0x000002000000207a : ret 0x254d
0x0000020000002002 : ret 0x254e
0x000002000068a7e9 : ret 0x254f
0x000002000015527a : ret 0x2552
0x00000200006cb40b : ret 0x2572
0x00000200001627ba : ret 0x259e
0x000002000079108e : ret 0x25e
0x00000200000b4808 : ret 0x25e9
0x0000020000462286 : ret 0x25ff
0x000002000008b8a7 : ret 0x26
0x000002000009587a : ret 0x2622
0x0000020000169e77 : ret 0x2672
0x0000020000012cba : ret 0x2674
0x00000200000b5b5a : ret 0x2675
0x00000200007ce713 : ret 0x267d
0x0000020000706412 : ret 0x26c
0x00000200001e37d4 : ret 0x26e8
0x00000200005ae5b3 : ret 0x26e9
0x00000200000855ca : ret 0x27
0x0000020000144969 : ret 0x2710
0x000002000013413a : ret 0x273e
0x00000200006bfaea : ret 0x2772
0x000002000008f706 : ret 0x2773
0x00000200004cfa6a : ret 0x2790
0x000002000079d3ec : ret 0x27a
0x000002000061636f : ret 0x27e8
0x00000200001ed2bd : ret 0x27eb
0x00000200003dc3ba : ret 0x28
0x000002000068d6c7 : ret 0x2809
0x00000200004d98a5 : ret 0x280f
0x00000200006be11a : ret 0x2872
0x00000200003fa6bc : ret 0x2873
0x0000020000403273 : ret 0x2874
0x00000200001fd83d : ret 0x2875
0x000002000003b8a3 : ret 0x2877
0x000002000016afd8 : ret 0x287d
0x000002000000bf9c : ret 0x288
0x000002000016a2ba : ret 0x289
0x000002000006e57a : ret 0x2895
0x0000020000027999 : ret 0x28eb
0x000002000077f6d2 : ret 0x29
0x00000200001e1e3c : ret 0x2949
0x000002000007c60a : ret 0x294c
0x00000200003f8e8b : ret 0x2973
0x000002000053578b : ret 0x2975
0x000002000079a38f : ret 0x298
0x000002000064949a : ret 0x2988
0x000002000008719a : ret 0x29ac
0x000002000011e6ba : ret 0x29da
0x00000200000ec1d8 : ret 0x29e9
0x00000200007a0b6a : ret 0x2a41
0x000002000022e95e : ret 0x2a72
0x00000200003e7e9b : ret 0x2a73
0x0000020000015cac : ret 0x2a77
0x00000200001bbe60 : ret 0x2a8
0x00000200000ed068 : ret 0x2b
0x00000200001e81f9 : ret 0x2b05
0x00000200004fa1a0 : ret 0x2b0d
0x00000200002434af : ret 0x2b1a
0x000002000068ebf6 : ret 0x2b1c
0x00000200004b171f : ret 0x2b25
0x000002000020d885 : ret 0x2b32
0x0000020000227667 : ret 0x2b3f
0x000002000002018d : ret 0x2b41
0x000002000001feae : ret 0x2b44
0x0000020000052a69 : ret 0x2b45
0x000002000002c3ba : ret 0x2b48
0x000002000012fd21 : ret 0x2b49
0x00000200006f38f1 : ret 0x2b4b
0x000002000000a758 : ret 0x2b4c
0x000002000021c563 : ret 0x2b57
0x0000020000157a4e : ret 0x2b64
0x000002000008f3cb : ret 0x2b66
0x00000200006c0ea4 : ret 0x2b72
0x000002000002ded3 : ret 0x2b75
0x00000200000ad06a : ret 0x2b8
0x00000200001dbd77 : ret 0x2b9
0x0000020000145940 : ret 0x2ba
0x0000020000595502 : ret 0x2ba0
0x00000200001818a2 : ret 0x2bb
0x000002000077fb1d : ret 0x2be
0x00000200001212e3 : ret 0x2be8
0x000002000011874e : ret 0x2be9
0x000002000062357f : ret 0x2bf
0x0000020000063902 : ret 0x2bf2
0x00000200000e97ba : ret 0x2bfa
0x0000020000056886 : ret 0x2c
0x000002000003d1f2 : ret 0x2c27
0x000002000013b2b7 : ret 0x2c6
0x000002000055df60 : ret 0x2c72
0x00000200003efd52 : ret 0x2c74
0x000002000001aaeb : ret 0x2c75
0x00000200001030aa : ret 0x2cd3
0x000002000045eace : ret 0x2ce8
0x00000200001411c9 : ret 0x2ce9
0x0000020000031072 : ret 0x2d
0x00000200000daa8a : ret 0x2d48
0x00000200000d231e : ret 0x2d5d
0x000002000022544d : ret 0x2d72
0x000002000004b86a : ret 0x2d75
0x00000200000fb6aa : ret 0x2d77
0x0000020000214574 : ret 0x2deb
0x00000200001b51ba : ret 0x2df9
0x00000200000cfd91 : ret 0x2e
0x000002000003b27f : ret 0x2e00
0x0000020000410d16 : ret 0x2e26
0x00000200004658c2 : ret 0x2e28
0x00000200004cf569 : ret 0x2e75
0x000002000055e6f4 : ret 0x2e8
0x00000200001459fa : ret 0x2eb
0x00000200007945d8 : ret 0x2ec
0x0000020000031112 : ret 0x2ee3
0x00000200006768ba : ret 0x2eeb
0x00000200000ad015 : ret 0x2f
0x000002000000c3ae : ret 0x2f5d
0x000002000003a8d0 : ret 0x2f72
0x000002000004a2a8 : ret 0x2f74
0x00000200000465eb : ret 0x2f75
0x00000200003e20b0 : ret 0x2f77
0x000002000020f31f : ret 0x2f89
0x000002000009156a : ret 0x2fa
0x0000020000089ddb : ret 0x2fe8
0x0000020000016a7b : ret 0x30
0x000002000014bafe : ret 0x300
0x00000200001868cf : ret 0x302
0x0000020000451f72 : ret 0x3024
0x0000020000504fb6 : ret 0x304
0x00000200006b2bee : ret 0x306
0x000002000023146c : ret 0x3073
0x000002000045221d : ret 0x3074
0x00000200001cb15a : ret 0x30e8
0x00000200000b4810 : ret 0x30e9
0x00000200004f318c : ret 0x30f
0x000002000020df7c : ret 0x310
0x0000020000437c82 : ret 0x3111
0x0000020000478b4f : ret 0x314
0x000002000069dbc8 : ret 0x3141
0x0000020000018349 : ret 0x3148
0x000002000004b8b5 : ret 0x3149
0x00000200001464bd : ret 0x314c
0x000002000024a5bf : ret 0x3166
0x00000200006c0e38 : ret 0x3172
0x000002000002f8b6 : ret 0x3173
0x00000200001d1da5 : ret 0x3175
0x000002000000e4a6 : ret 0x31a0
0x000002000000c7de : ret 0x31bf
0x00000200005d1c49 : ret 0x31e8
0x0000020000246734 : ret 0x31e9
0x000002000041c1c8 : ret 0x32
0x000002000015dd77 : ret 0x324
0x000002000011f72e : ret 0x3240
0x0000020000062f5e : ret 0x3241
0x00000200000c1e72 : ret 0x3245
0x00000200002001f5 : ret 0x3272
0x000002000020dfc3 : ret 0x3274
0x0000020000424723 : ret 0x3276
0x00000200000c60f8 : ret 0x32c3
0x000002000006bdb5 : ret 0x33
0x000002000020ba6e : ret 0x3302
0x000002000003a51b : ret 0x3308
0x0000020000416f72 : ret 0x331b
0x00000200000ae73c : ret 0x3341
0x000002000007f57e : ret 0x3344
0x0000020000012019 : ret 0x3345
0x0000020000129990 : ret 0x3348
0x00000200000a4389 : ret 0x3349
0x00000200000478c5 : ret 0x334c
0x0000020000147bce : ret 0x334d
0x0000020000018003 : ret 0x3364
0x000002000007d519 : ret 0x3366
0x000002000022e89c : ret 0x3372
0x000002000002fd03 : ret 0x3373
0x00000200003cbedb : ret 0x3374
0x000002000000a60a : ret 0x33c3
0x00000200003ca7c3 : ret 0x33e9
0x00000200006bbf92 : ret 0x33eb
0x00000200003dc0ca : ret 0x33ff
0x00000200000ce6ab : ret 0x341
0x0000020000032dbc : ret 0x344
0x00000200000649fa : ret 0x344a
0x0000020000144c21 : ret 0x345
0x000002000022ee64 : ret 0x3472
0x0000020000214f56 : ret 0x3474
0x0000020000002bd3 : ret 0x348
0x000002000043f440 : ret 0x348d
0x00000200000169d0 : ret 0x349
0x000002000042b8ad : ret 0x34a
0x000002000000299c : ret 0x34c
0x0000020000097440 : ret 0x34d
0x000002000016e8cb : ret 0x34e9
0x00000200006c336e : ret 0x35
0x0000020000051c3e : ret 0x3564
0x000002000022f3b9 : ret 0x3572
0x000002000068636f : ret 0x3573
0x000002000004d18b : ret 0x3574
0x000002000001914e : ret 0x3575
0x000002000010a4e7 : ret 0x35e9
0x0000020000066fef : ret 0x3600
0x000002000003f45d : ret 0x366
0x0000020000009df1 : ret 0x3674
0x000002000016470e : ret 0x3675
0x00000200000f6b7e : ret 0x3678
0x000002000003e7ca : ret 0x369
0x00000200007785d9 : ret 0x36e9
0x00000200000cf40e : ret 0x373
0x00000200001f4b9e : ret 0x374
0x00000200006d1b98 : ret 0x375
0x00000200000a0a4d : ret 0x376
0x0000020000087ba0 : ret 0x377
0x0000020000056af7 : ret 0x3772
0x00000200000449ba : ret 0x3778
0x0000020000719385 : ret 0x37ba
0x000002000069c21f : ret 0x37c
0x000002000020fac9 : ret 0x37e9
0x0000020000231bfa : ret 0x380f
0x000002000013c10d : ret 0x3840
0x00000200005ba12e : ret 0x3843
0x00000200000577fc : ret 0x3844
0x000002000013b191 : ret 0x3845
0x000002000054a268 : ret 0x3872
0x00000200001d1d9e : ret 0x3874
0x000002000013ec88 : ret 0x388
0x00000200000fe909 : ret 0x388b
0x000002000001c3ba : ret 0x38ce
0x000002000064fc1a : ret 0x38e8
0x000002000045fd32 : ret 0x38e9
0x00000200006ee12e : ret 0x39
0x000002000055e27b : ret 0x3941
0x0000020000072c47 : ret 0x3944
0x000002000001df3b : ret 0x3945
0x00000200000cd03f : ret 0x3948
0x000002000015385d : ret 0x3949
0x000002000003b02b : ret 0x394c
0x0000020000127985 : ret 0x3956
0x0000020000526818 : ret 0x3960
0x0000020000141214 : ret 0x3966
0x000002000042305e : ret 0x3972
0x000002000065c08d : ret 0x3973
0x0000020000544dc7 : ret 0x3974
0x000002000021c0b6 : ret 0x3983
0x0000020000610c31 : ret 0x39e8
0x0000020000462225 : ret 0x39ff
0x000002000009c6aa : ret 0x3a
0x0000020000541d35 : ret 0x3a0
0x000002000060e632 : ret 0x3a73
0x00000200000f898d : ret 0x3a74
0x00000200001dbafd : ret 0x3a75
0x00000200007222df : ret 0x3a76
0x000002000013b5d8 : ret 0x3a80
0x0000020000038540 : ret 0x3ab1
0x00000200000fcfdb : ret 0x3ae9
0x0000020000039dec : ret 0x3b04
0x000002000001e31a : ret 0x3b05
0x000002000003710e : ret 0x3b08
0x000002000010d15c : ret 0x3b10
0x000002000021196f : ret 0x3b1c
0x00000200001bd286 : ret 0x3b24
0x000002000000837f : ret 0x3b41
0x00000200000942c7 : ret 0x3b44
0x000002000007f161 : ret 0x3b45
0x000002000001152c : ret 0x3b48
0x00000200000161f0 : ret 0x3b49
0x0000020000006bca : ret 0x3b4c
0x00000200000cf4f1 : ret 0x3b4d
0x00000200003d044d : ret 0x3b4e
0x000002000000ea9a : ret 0x3b64
0x00000200000376ac : ret 0x3b66
0x0000020000428633 : ret 0x3b73
0x00000200007880e1 : ret 0x3b76
0x0000020000144921 : ret 0x3b88
0x00000200003ede17 : ret 0x3b9
0x00000200000bc0f9 : ret 0x3ba
0x0000020000696e40 : ret 0x3be0
0x000002000006ca0e : ret 0x3be9
0x00000200004d4c6c : ret 0x3bff
0x00000200001315e2 : ret 0x3c
0x000002000015ef10 : ret 0x3c7
0x000002000020b84c : ret 0x3c74
0x0000020000100dd1 : ret 0x3c75
0x0000020000140dbe : ret 0x3c80
0x00000200005a7c33 : ret 0x3c8d
0x0000020000478ad6 : ret 0x3ce8
0x0000020000220bc4 : ret 0x3ceb
0x00000200006904ee : ret 0x3d
0x0000020000002bf2 : ret 0x3d48
0x0000020000468715 : ret 0x3d74
0x0000020000032fb6 : ret 0x3d75
0x000002000015e1c2 : ret 0x3d7c
0x0000020000401f16 : ret 0x3d80
0x00000200003ca7e9 : ret 0x3d83
0x00000200005c4caa : ret 0x3de9
0x00000200003e15c9 : ret 0x3dff
0x000002000011464c : ret 0x3e00
0x00000200005f0182 : ret 0x3e7
0x00000200001f0279 : ret 0x3e74
0x0000020000423059 : ret 0x3e77
0x000002000001e2ef : ret 0x3e8
0x000002000007daa8 : ret 0x3eb
0x000002000000ca1e : ret 0x3f
0x00000200005f8b24 : ret 0x3f24
0x0000020000056537 : ret 0x3f74
0x000002000064d944 : ret 0x3f75
0x0000020000245ef4 : ret 0x3f76
0x000002000047b6f2 : ret 0x3f77
0x0000020000117cba : ret 0x3fb
0x000002000047f155 : ret 0x3fb8
0x000002000048d5e5 : ret 0x3fc
0x000002000079aaef : ret 0x3ff
0x000002000066ad34 : ret 0x3ffd
0x000002000003ece4 : ret 0x40
0x0000020000044476 : ret 0x400
0x00000200004c0441 : ret 0x4000
0x0000020000476372 : ret 0x4002
0x000002000013e212 : ret 0x4008
0x000002000050927c : ret 0x402
0x00000200006ebca1 : ret 0x406e
0x000002000020a002 : ret 0x4074
0x0000020000079d54 : ret 0x4075
0x0000020000780c07 : ret 0x4076
0x00000200007d8871 : ret 0x407d
0x000002000015ae0e : ret 0x40b9
0x000002000012a7c2 : ret 0x40c3
0x00000200005450de : ret 0x40c7
0x00000200006648e7 : ret 0x40d8
0x00000200006ede0d : ret 0x40ed
0x00000200006648f0 : ret 0x40f0
0x000002000044fa0a : ret 0x40ff
0x0000020000450a16 : ret 0x410
0x000002000023df47 : ret 0x4101
0x000002000012622a : ret 0x4102
0x0000020000542156 : ret 0x4103
0x000002000001ff9b : ret 0x4104
0x000002000041b03e : ret 0x4105
0x000002000010d8e7 : ret 0x4106
0x0000020000018891 : ret 0x4108
0x0000020000214f77 : ret 0x410c
0x0000020000014d1d : ret 0x4110
0x0000020000201a06 : ret 0x4113
0x00000200003c65d7 : ret 0x4114
0x00000200006b39ff : ret 0x4116
0x0000020000049423 : ret 0x4118
0x00000200002434dd : ret 0x411a
0x00000200002307f2 : ret 0x4120
0x00000200000df6e8 : ret 0x4123
0x00000200006775a0 : ret 0x4125
0x00000200003fe6a5 : ret 0x4128
0x000002000002515f : ret 0x412b
0x000002000020b31c : ret 0x4130
0x000002000065cfc5 : ret 0x4131
0x00000200000864e8 : ret 0x4138
0x0000020000554b75 : ret 0x413f
0x000002000023341b : ret 0x4160
0x00000200000164ef : ret 0x4166
0x0000020000461470 : ret 0x4170
0x000002000062d3ca : ret 0x4172
0x0000020000431477 : ret 0x4177
0x00000200003d3a6a : ret 0x4189
0x0000020000714390 : ret 0x418b
0x000002000013b594 : ret 0x418d
0x0000020000795743 : ret 0x4199
0x00000200000878dc : ret 0x41c3
0x000002000021ebb8 : ret 0x41c7
0x000002000013b7ec : ret 0x41c9
0x00000200003f64c6 : ret 0x41d0
0x000002000020ea45 : ret 0x41e0
0x00000200005a977d : ret 0x41e8
0x000002000009ec90 : ret 0x41f0
0x000002000068939f : ret 0x41f1
0x0000020000130413 : ret 0x41f2
0x0000020000177b3f : ret 0x41fc
0x00000200004b2e00 : ret 0x41fe
0x00000200003dedb7 : ret 0x41ff
0x00000200000c60f3 : ret 0x420f
0x0000020000427764 : ret 0x4210
0x00000200004977d2 : ret 0x423b
0x000002000050b3c7 : ret 0x4266
0x000002000004efa3 : ret 0x4274
0x0000020000092114 : ret 0x4289
0x0000020000058c29 : ret 0x428d
0x000002000011609e : ret 0x42ba
0x000002000061700c : ret 0x42d
0x0000020000532b28 : ret 0x42e8
0x00000200003d2ff9 : ret 0x42ff
0x00000200003d392c : ret 0x43
0x0000020000082532 : ret 0x430d
0x000002000003efc6 : ret 0x4358
0x000002000055f1bf : ret 0x4366
0x00000200005aaef2 : ret 0x4387
0x0000020000068f84 : ret 0x4388
0x000002000002177d : ret 0x4389
0x0000020000647f2e : ret 0x438b
0x000002000002e4a7 : ret 0x43c
0x00000200000a7c32 : ret 0x43c7
0x0000020000099d57 : ret 0x43e8
0x00000200005f8b5a : ret 0x43e9
0x00000200001f548c : ret 0x43eb
0x0000020000431943 : ret 0x43f3
0x00000200003ce0de : ret 0x43f7
0x00000200006f7597 : ret 0x43ff
0x00000200005a0a04 : ret 0x4401
0x000002000013d1e7 : ret 0x4402
0x0000020000494f87 : ret 0x4403
0x000002000001ff4f : ret 0x4404
0x000002000007e553 : ret 0x4406
0x0000020000137b25 : ret 0x4407
0x0000020000088250 : ret 0x4408
0x000002000007f52e : ret 0x4409
0x000002000066bdf7 : ret 0x440c
0x0000020000142fe7 : ret 0x440f
0x000002000005590c : ret 0x4410
0x000002000007f543 : ret 0x4413
0x0000020000635aa8 : ret 0x4414
0x0000020000037484 : ret 0x4418
0x00000200002434c7 : ret 0x441a
0x00000200001bd184 : ret 0x4424
0x00000200004e9f34 : ret 0x4428
0x000002000002392b : ret 0x4432
0x00000200004a28f7 : ret 0x4438
0x0000020000171dbf : ret 0x443b
0x0000020000052c08 : ret 0x4440
0x000002000003a4f0 : ret 0x4466
0x00000200004fe2a8 : ret 0x4475
0x000002000022cca0 : ret 0x4476
0x00000200000f249b : ret 0x4488
0x000002000002638c : ret 0x4489
0x00000200000e361a : ret 0x448b
0x000002000016c19f : ret 0x44ba
0x000002000012162a : ret 0x44c3
0x000002000003e0ad : ret 0x44c6
0x000002000007e868 : ret 0x44c7
0x000002000052dcba : ret 0x44e
0x0000020000020268 : ret 0x44e9
0x000002000007f496 : ret 0x44f0
0x0000020000481cec : ret 0x44f4
0x000002000048211c : ret 0x44f8
0x000002000022516a : ret 0x44ff
0x0000020000235dc8 : ret 0x4502
0x00000200001260b5 : ret 0x4504
0x0000020000446818 : ret 0x4507
0x000002000005a4ca : ret 0x4508
0x00000200000f7571 : ret 0x4509
0x00000200000811c6 : ret 0x450c
0x0000020000010569 : ret 0x450f
0x000002000021d1bc : ret 0x4510
0x00000200001184e6 : ret 0x4511
0x000002000007f5b1 : ret 0x4513
0x000002000055444f : ret 0x4518
0x00000200007786b6 : ret 0x451a
0x0000020000447f8b : ret 0x4520
0x000002000018cf28 : ret 0x4528
0x00000200003d2893 : ret 0x453b
0x00000200006c40a9 : ret 0x453d
0x00000200007786c4 : ret 0x4541
0x0000020000605d6f : ret 0x454c
0x000002000049bc4a : ret 0x4560
0x00000200007ada71 : ret 0x4564
0x00000200000dfa27 : ret 0x4566
0x000002000005c510 : ret 0x4572
0x0000020000452208 : ret 0x4574
0x000002000041183b : ret 0x4575
0x000002000018b174 : ret 0x4588
0x00000200000123d2 : ret 0x4589
0x00000200001e57e5 : ret 0x458d
0x000002000006ca48 : ret 0x45c3
0x000002000006db97 : ret 0x45c6
0x000002000069184a : ret 0x45c7
0x00000200005ebb3d : ret 0x45e9
0x000002000007d0e5 : ret 0x45f0
0x00000200000b10de : ret 0x45f6
0x00000200003df19f : ret 0x45ff
0x00000200000511ac : ret 0x460f
0x00000200001169c1 : ret 0x462b
0x00000200000d9e6c : ret 0x4673
0x000002000046e5a3 : ret 0x4675
0x00000200004b4cbd : ret 0x4677
0x00000200006ab161 : ret 0x4689
0x00000200004c3fb1 : ret 0x46e9
0x00000200000532de : ret 0x470f
0x00000200006bd593 : ret 0x472
0x0000020000145dbb : ret 0x473
0x0000020000011a9b : ret 0x4733
0x000002000007e8e4 : ret 0x474
0x000002000013ca68 : ret 0x475
0x00000200006c6778 : ret 0x4766
0x000002000068cdff : ret 0x477
0x0000020000478987 : ret 0x4773
0x00000200001b176e : ret 0x4777
0x0000020000706ec6 : ret 0x4779
0x0000020000099322 : ret 0x4788
0x0000020000087f5c : ret 0x4789
0x000002000044f244 : ret 0x478b
0x00000200005b2bb6 : ret 0x47e9
0x00000200001c6058 : ret 0x47eb
0x000002000000ce10 : ret 0x48
0x000002000019feb0 : ret 0x4801
0x00000200000197f2 : ret 0x4802
0x0000020000630aa7 : ret 0x4803
0x000002000002d517 : ret 0x4804
0x00000200004da42a : ret 0x4806
0x00000200004642ae : ret 0x4807
0x0000020000023dfd : ret 0x4808
0x00000200000b1d09 : ret 0x480a
0x000002000002f4c0 : ret 0x480b
0x00000200000fa1e1 : ret 0x480c
0x00000200007c29b1 : ret 0x480d
0x000002000004941e : ret 0x4810
0x0000020000117459 : ret 0x4811
0x000002000007f55d : ret 0x4813
0x0000020000498f9f : ret 0x4814
0x000002000003e143 : ret 0x4818
0x000002000021414a : ret 0x481f
0x000002000010f8ee : ret 0x4820
0x000002000003a102 : ret 0x4824
0x0000020000442d5f : ret 0x4825
0x00000200000064da : ret 0x4828
0x00000200003d2e01 : ret 0x482b
0x000002000003a12d : ret 0x4830
0x000002000021dd22 : ret 0x4837
0x000002000003a14a : ret 0x4838
0x000002000003a167 : ret 0x4840
0x00000200007d64f6 : ret 0x4841
0x00000200001acc6a : ret 0x4848
0x000002000003ceb8 : ret 0x4850
0x00000200001369de : ret 0x4858
0x000002000009a5a3 : ret 0x4864
0x0000020000064da5 : ret 0x4865
0x000002000003a187 : ret 0x4870
0x00000200006640b3 : ret 0x4873
0x000002000001fc20 : ret 0x4874
0x000002000012a3f5 : ret 0x4877
0x000002000003a1a7 : ret 0x4878
0x0000020000504fd1 : ret 0x488
0x00000200002190b3 : ret 0x4880
0x00000200001f82e1 : ret 0x488b
0x00000200001ba0fb : ret 0x488d
0x00000200001d4659 : ret 0x48b
0x0000020000005812 : ret 0x48c3
0x000002000008e256 : ret 0x48cc
0x00000200001458c0 : ret 0x48d
0x0000020000490ce9 : ret 0x48d0
0x00000200005f107e : ret 0x48d8
0x000002000007f6cb : ret 0x48e0
0x00000200004ca1b2 : ret 0x48e8
0x00000200000851ed : ret 0x48e9
0x000002000002929c : ret 0x48f0
0x0000020000212ff1 : ret 0x48f3
0x0000020000027ba2 : ret 0x48f8
0x000002000001d7b4 : ret 0x48ff
0x0000020000152ab7 : ret 0x4901
0x0000020000119519 : ret 0x4902
0x0000020000119533 : ret 0x4903
0x0000020000088015 : ret 0x4904
0x00000200006b4c0f : ret 0x4906
0x0000020000422f64 : ret 0x4907
0x00000200000e44ce : ret 0x4908
0x000002000041867d : ret 0x4909
0x00000200001a48cc : ret 0x490c
0x00000200003e4430 : ret 0x490f
0x000002000002e192 : ret 0x4910
0x000002000018b42e : ret 0x4913
0x000002000000bc38 : ret 0x4918
0x000002000072b3c6 : ret 0x4919
0x00000200001b66cc : ret 0x491a
0x000002000069d850 : ret 0x491f
0x00000200000c09e6 : ret 0x4920
0x00000200001bd3ce : ret 0x4924
0x0000020000005dc1 : ret 0x4925
0x00000200000245c4 : ret 0x4928
0x00000200000e47dc : ret 0x4930
0x00000200003eb58b : ret 0x4938
0x0000020000209870 : ret 0x4940
0x000002000011805c : ret 0x4942
0x00000200007876da : ret 0x494a
0x0000020000525ff7 : ret 0x4958
0x00000200001813e0 : ret 0x4964
0x00000200000b84f7 : ret 0x4975
0x0000020000479088 : ret 0x4977
0x00000200001acd3d : ret 0x4978
0x00000200000a308a : ret 0x498
0x000002000003d3f2 : ret 0x4980
0x00000200001f0545 : ret 0x498a
0x000002000003deab : ret 0x49c3
0x00000200007caba9 : ret 0x49e9
0x000002000000ff48 : ret 0x49f0
0x00000200001448a7 : ret 0x49f8
0x00000200004b2ef2 : ret 0x49fe
0x00000200003d5fbe : ret 0x49ff
0x00000200006caf5c : ret 0x4a02
0x00000200001fc929 : ret 0x4a08
0x0000020000208913 : ret 0x4a10
0x0000020000051a77 : ret 0x4a20
0x00000200006241d2 : ret 0x4a72
0x000002000007f31a : ret 0x4a74
0x000002000016850e : ret 0x4a75
0x00000200000770c4 : ret 0x4a8
0x0000020000186d11 : ret 0x4a8d
0x000002000048df84 : ret 0x4ae9
0x00000200003d6b19 : ret 0x4b02
0x00000200000b4686 : ret 0x4b08
0x0000020000686de8 : ret 0x4b0c
0x0000020000029aca : ret 0x4b6
0x000002000000784f : ret 0x4b8b
0x0000020000040a73 : ret 0x4b8d
0x0000020000026de9 : ret 0x4ba
0x000002000061ea71 : ret 0x4bb8
0x000002000017d34d : ret 0x4be9
0x00000200005071f0 : ret 0x4bf
0x00000200001bc07f : ret 0x4bf0
0x00000200004cd601 : ret 0x4c
0x000002000019fddf : ret 0x4c01
0x0000020000190dc7 : ret 0x4c02
0x0000020000425ba7 : ret 0x4c04
0x000002000022a55d : ret 0x4c07
0x0000020000057e2a : ret 0x4c08
0x00000200006d52d5 : ret 0x4c0b
0x00000200001450c9 : ret 0x4c0c
0x0000020000778bd2 : ret 0x4c0d
0x00000200000ec850 : ret 0x4c0f
0x000002000003ba76 : ret 0x4c10
0x0000020000586364 : ret 0x4c18
0x0000020000689135 : ret 0x4c1c
0x00000200006f87fd : ret 0x4c1f
0x00000200004a0720 : ret 0x4c20
0x00000200000fd141 : ret 0x4c25
0x0000020000230829 : ret 0x4c28
0x000002000003eefc : ret 0x4c30
0x00000200004ae4fa : ret 0x4c40
0x0000020000165950 : ret 0x4c50
0x000002000005e9a5 : ret 0x4c65
0x000002000012977b : ret 0x4c68
0x00000200001fe3d5 : ret 0x4c70
0x000002000010a332 : ret 0x4c73
0x00000200005ec064 : ret 0x4c74
0x00000200004aa941 : ret 0x4c75
0x000002000020aad7 : ret 0x4c78
0x0000020000119ee4 : ret 0x4c88
0x00000200000457c4 : ret 0x4c89
0x00000200006cf562 : ret 0x4c8a
0x0000020000231a52 : ret 0x4cc0
0x000002000007b694 : ret 0x4cc3
0x0000020000023a74 : ret 0x4cd0
0x00000200000daf8f : ret 0x4ce0
0x00000200005541eb : ret 0x4ce8
0x0000020000051f7a : ret 0x4cf0
0x00000200001932fd : ret 0x4cf8
0x00000200003d25c6 : ret 0x4cff
0x0000020000710c5a : ret 0x4d0
0x00000200000303f3 : ret 0x4d02
0x000002000011959d : ret 0x4d03
0x0000020000233e37 : ret 0x4d04
0x0000020000213733 : ret 0x4d07
0x000002000001ca5e : ret 0x4d08
0x00000200000b1ded : ret 0x4d0a
0x00000200001b6dcc : ret 0x4d10
0x00000200006ded8c : ret 0x4d18
0x000002000018478f : ret 0x4d1a
0x0000020000680fcd : ret 0x4d20
0x000002000065e5f9 : ret 0x4d30
0x000002000066c02b : ret 0x4d38
0x000002000008f3d8 : ret 0x4d60
0x0000020000020553 : ret 0x4d73
0x0000020000081de2 : ret 0x4d74
0x00000200001dbb81 : ret 0x4d75
0x0000020000064772 : ret 0x4d89
0x0000020000235b53 : ret 0x4d8b
0x0000020000029eda : ret 0x4de
0x000002000068ba39 : ret 0x4de0
0x00000200000b4930 : ret 0x4de9
0x00000200000db304 : ret 0x4df0
0x000002000014510c : ret 0x4df8
0x00000200004bd7ac : ret 0x4dff
0x000002000021ef6e : ret 0x4e6a
0x000002000069f39b : ret 0x4e6d
0x0000020000227bef : ret 0x4e73
0x0000020000164636 : ret 0x4e74
0x0000020000096f6b : ret 0x4eb
0x00000200001464e3 : ret 0x4f05
0x00000200000e608b : ret 0x4f0f
0x00000200000bb08d : ret 0x4f28
0x000002000051425b : ret 0x4f72
0x0000020000478a71 : ret 0x4f73
0x000002000022eb7e : ret 0x4f8b
0x00000200005efde0 : ret 0x4fe9
0x00000200001e7c25 : ret 0x4feb
0x000002000005a0ba : ret 0x4ffe
0x0000020000050b75 : ret 0x500
0x00000200000e549b : ret 0x5073
0x000002000000bcd5 : ret 0x5077
0x0000020000044c6c : ret 0x508d
0x000002000015f14a : ret 0x50b6
0x0000020000116fc2 : ret 0x50e9
0x00000200001cf72b : ret 0x51
0x00000200003e90b6 : ret 0x513b
0x0000020000008887 : ret 0x5174
0x00000200001ea66a : ret 0x5175
0x00000200001b170e : ret 0x5177
0x00000200001cc476 : ret 0x5188
0x00000200000b44bd : ret 0x5189
0x000002000003d3fe : ret 0x518b
0x0000020000616e60 : ret 0x518d
0x00000200001bbc1c : ret 0x521
0x000002000017f27b : ret 0x523
0x00000200000b3c29 : ret 0x524
0x000002000046ef94 : ret 0x5277
0x000002000054708c : ret 0x528b
0x0000020000045e38 : ret 0x52e8
0x00000200000dc897 : ret 0x52e9
0x0000020000135265 : ret 0x5338
0x00000200001b1306 : ret 0x533b
0x000002000043aa47 : ret 0x5340
0x00000200000d9e3e : ret 0x5373
0x0000020000056541 : ret 0x5375
0x00000200000e85d8 : ret 0x5388
0x0000020000515eb8 : ret 0x5389
0x000002000020197f : ret 0x538d
0x00000200004fce11 : ret 0x53b
0x00000200004ecc0b : ret 0x53e8
0x0000020000089c4a : ret 0x543
0x0000020000417bff : ret 0x5474
0x00000200001e7c20 : ret 0x5476
0x00000200004fd16b : ret 0x5477
0x0000020000005eb6 : ret 0x548
0x000002000005d0bb : ret 0x5489
0x000002000066fbf3 : ret 0x553b
0x00000200001ce07f : ret 0x5577
0x00000200001d99c7 : ret 0x5588
0x00000200001072ab : ret 0x5589
0x00000200000656a9 : ret 0x558b
0x0000020000647cae : ret 0x558d
0x000002000058a263 : ret 0x55e9
0x00000200000f09f7 : ret 0x560
0x00000200000205b4 : ret 0x5673
0x000002000013caa2 : ret 0x5675
0x000002000006041d : ret 0x5688
0x0000020000647ec0 : ret 0x568d
0x00000200004af53e : ret 0x56b
0x0000020000130dfc : ret 0x56e8
0x00000200006ee10d : ret 0x56fa
0x0000020000678bd4 : ret 0x570
0x00000200000c99b9 : ret 0x573
0x0000020000037d10 : ret 0x574
0x000002000002ad15 : ret 0x575
0x00000200000401b4 : ret 0x577
0x00000200001cdfdd : ret 0x5774
0x000002000013b0c4 : ret 0x5775
0x0000020000123d9c : ret 0x578
0x00000200000953b9 : ret 0x5788
0x00000200001fe89a : ret 0x578b
0x00000200001d8891 : ret 0x57d
0x00000200000ecefc : ret 0x5803
0x00000200001233ca : ret 0x581
0x0000020000202722 : ret 0x587
0x00000200000c8185 : ret 0x5872
0x0000020000214faa : ret 0x5874
0x00000200005fb672 : ret 0x588
0x00000200001add21 : ret 0x589
0x00000200007a4c7c : ret 0x58a
0x00000200003ead42 : ret 0x58b
0x00000200001220b4 : ret 0x58c
0x00000200000fe132 : ret 0x58e8
0x00000200001abea3 : ret 0x59
0x00000200000481e2 : ret 0x5974
0x0000020000705fb7 : ret 0x5975
0x000002000043f0e1 : ret 0x59e9
0x000002000001b742 : ret 0x5a74
0x00000200001383cd : ret 0x5aba
0x00000200007133fc : ret 0x5ae8
0x0000020000127982 : ret 0x5b05
0x000002000010fa8a : ret 0x5b29
0x00000200001f1aa0 : ret 0x5ba
0x0000020000779fde : ret 0x5bb
0x000002000061623b : ret 0x5be8
0x000002000018577a : ret 0x5c0
0x000002000065229a : ret 0x5c03
0x000002000000ca7d : ret 0x5c38
0x000002000047c3b4 : ret 0x5c53
0x000002000024bf47 : ret 0x5c73
0x00000200001db941 : ret 0x5c75
0x0000020000051f98 : ret 0x5c76
0x00000200005645c0 : ret 0x5c89
0x00000200000fe585 : ret 0x5c8b
0x00000200006ee986 : ret 0x5ccb
0x000002000050d40e : ret 0x5ce8
0x00000200005f3b57 : ret 0x5ce9
0x000002000040f638 : ret 0x5d00
0x000002000011b092 : ret 0x5d5
0x0000020000232a62 : ret 0x5dc5
0x00000200007796a4 : ret 0x5deb
0x0000020000568a88 : ret 0x5e75
0x000002000003c6cb : ret 0x5e77
0x0000020000436f75 : ret 0x5e8
0x00000200005009d0 : ret 0x5e84
0x00000200000517fd : ret 0x5e9
0x0000020000087fb4 : ret 0x5eb
0x000002000001de4a : ret 0x5ef
0x0000020000025ff3 : ret 0x5f6
0x0000020000713dd7 : ret 0x5f7
0x000002000023a82f : ret 0x5f72
0x0000020000426d05 : ret 0x5f89
0x0000020000177774 : ret 0x5f8b
0x00000200000f736c : ret 0x5fb8
0x00000200002392f3 : ret 0x5fe8
0x000002000069eb12 : ret 0x5ff
0x00000200000ed2f4 : ret 0x600
0x00000200004fd9c4 : ret 0x6000
0x000002000020a67d : ret 0x6020
0x00000200006c1003 : ret 0x6072
0x00000200001b7347 : ret 0x6077
0x00000200004e95ea : ret 0x6083
0x0000020000589d58 : ret 0x60e9
0x0000020000581d79 : ret 0x61e8
0x0000020000114b1c : ret 0x620
0x000002000000fa08 : ret 0x624
0x0000020000092c52 : ret 0x6245
0x00000200000728d8 : ret 0x6275
0x0000020000226be9 : ret 0x62e9
0x0000020000035600 : ret 0x6348
0x000002000016cfec : ret 0x6349
0x000002000024d577 : ret 0x634d
0x000002000021443b : ret 0x6374
0x00000200003f8f8c : ret 0x6377
0x00000200004f7c2a : ret 0x64
0x00000200005e5852 : ret 0x640
0x00000200006bef60 : ret 0x6472
0x0000020000487335 : ret 0x6473
0x000002000001b24a : ret 0x6474
0x00000200000eb50d : ret 0x647d
0x0000020000102e96 : ret 0x6483
0x000002000017fad4 : ret 0x64e9
0x0000020000206b5f : ret 0x6583
0x00000200000181d5 : ret 0x65e8
0x00000200001957af : ret 0x65e9
0x000002000023dfc7 : ret 0x65eb
0x00000200000404c3 : ret 0x65fe
0x000002000044fcd7 : ret 0x65ff
0x000002000000326e : ret 0x6602
0x0000020000478332 : ret 0x6604
0x00000200004e415b : ret 0x6606
0x000002000010300e : ret 0x6607
0x00000200000654c6 : ret 0x6608
0x0000020000692fae : ret 0x6610
0x000002000042496d : ret 0x6618
0x000002000068c3a6 : ret 0x6620
0x00000200005b8730 : ret 0x6622
0x000002000013b379 : ret 0x6630
0x000002000016d29a : ret 0x666
0x00000200006abc96 : ret 0x66ba
0x00000200002117a0 : ret 0x66c3
0x00000200005298af : ret 0x66ff
0x0000020000428f19 : ret 0x672
0x0000020000079f50 : ret 0x673
0x00000200001f02b1 : ret 0x674
0x0000020000057463 : ret 0x675
0x0000020000653be5 : ret 0x676
0x000002000023ef96 : ret 0x677
0x00000200004791ac : ret 0x6775
0x000002000000bce4 : ret 0x6777
0x000002000044ac21 : ret 0x677e
0x0000020000191f1f : ret 0x67e8
0x0000020000697441 : ret 0x6875
0x0000020000448197 : ret 0x6877
0x0000020000706952 : ret 0x69
0x0000020000044ade : ret 0x6948
0x000002000008e328 : ret 0x694c
0x0000020000207b77 : ret 0x694d
0x0000020000436902 : ret 0x6972
0x00000200004c091d : ret 0x6973
0x000002000006cb58 : ret 0x6974
0x00000200006f65cd : ret 0x6975
0x00000200001c5baf : ret 0x6980
0x00000200004254f5 : ret 0x69e8
0x000002000065003f : ret 0x69eb
0x00000200001219cd : ret 0x6a73
0x00000200003cf74b : ret 0x6a7f
0x00000200003e46c3 : ret 0x6b44
0x00000200005f6fc7 : ret 0x6b45
0x000002000007f510 : ret 0x6b48
0x000002000012ce7f : ret 0x6b4c
0x0000020000117ccc : ret 0x6b4d
0x0000020000248a79 : ret 0x6b73
0x000002000048ebee : ret 0x6b77
0x00000200006479c4 : ret 0x6ba
0x000002000010e69b : ret 0x6be8
0x00000200000fe96d : ret 0x6be9
0x000002000003966a : ret 0x6c20
0x000002000066a175 : ret 0x6c89
0x00000200000a7f51 : ret 0x6c8b
0x0000020000493bbe : ret 0x6cba
0x00000200000fcf4e : ret 0x6d74
0x000002000046a42d : ret 0x6de8
0x00000200000ce680 : ret 0x6e72
0x00000200006c0a7a : ret 0x6f72
0x00000200004521de : ret 0x6f74
0x000002000000b976 : ret 0x6f75
0x0000020000019795 : ret 0x6f76
0x00000200004b6177 : ret 0x6f89
0x000002000045f711 : ret 0x700
0x000002000005a1d6 : ret 0x7000
0x0000020000408bca : ret 0x70d
0x00000200000d6729 : ret 0x70e9
0x000002000018dece : ret 0x710
0x000002000018d4ce : ret 0x71a
0x00000200001957a3 : ret 0x71e9
0x0000020000028142 : ret 0x724
0x000002000003420c : ret 0x7274
0x000002000017768d : ret 0x72b
0x0000020000418f80 : ret 0x72e9
0x000002000020eedd : ret 0x7304
0x00000200000d8c03 : ret 0x7340
0x0000020000405155 : ret 0x7372
0x00000200001b168c : ret 0x7377
0x000002000071cee7 : ret 0x73ba
0x000002000002023e : ret 0x73e9
0x00000200000fb0f3 : ret 0x7400
0x0000020000022629 : ret 0x7401
0x000002000012d60c : ret 0x7402
0x000002000005d01c : ret 0x7403
0x000002000001cd6d : ret 0x7404
0x0000020000150f48 : ret 0x7406
0x000002000013c9a7 : ret 0x7407
0x00000200001a9c41 : ret 0x7408
0x0000020000093eaa : ret 0x740f
0x000002000000d756 : ret 0x7410
0x00000200004ac399 : ret 0x7414
0x0000020000167870 : ret 0x741e
0x00000200000ac7e1 : ret 0x7420
0x00000200001cb0c4 : ret 0x7432
0x0000020000236d68 : ret 0x7440
0x000002000000690a : ret 0x7455
0x000002000016e559 : ret 0x7489
0x00000200000a7d70 : ret 0x74e9
0x0000020000605667 : ret 0x74ff
0x00000200001222d1 : ret 0x7501
0x0000020000004158 : ret 0x7502
0x000002000003c522 : ret 0x7503
0x000002000009c56f : ret 0x7504
0x0000020000150f61 : ret 0x7506
0x000002000013ccc0 : ret 0x7507
0x000002000003f89d : ret 0x7508
0x000002000005a420 : ret 0x750c
0x0000020000022104 : ret 0x750f
0x000002000003f898 : ret 0x7510
0x00000200000243c1 : ret 0x751e
0x000002000003821a : ret 0x7520
0x00000200004a85b7 : ret 0x7521
0x0000020000227930 : ret 0x7530
0x00000200005f9fb5 : ret 0x7539
0x000002000020fa4e : ret 0x753f
0x0000020000047689 : ret 0x7540
0x00000200001f6aba : ret 0x7555
0x000002000066b7cd : ret 0x7573
0x000002000050ee2a : ret 0x7578
0x000002000058f74a : ret 0x759
0x0000020000084722 : ret 0x75e9
0x0000020000062c20 : ret 0x75f0
0x0000020000424342 : ret 0x75fb
0x000002000043c3ba : ret 0x75fe
0x00000200001e4b1a : ret 0x75ff
0x000002000004a40b : ret 0x7673
0x0000020000688a99 : ret 0x7675
0x00000200007ad050 : ret 0x7676
0x000002000040c196 : ret 0x7677
0x00000200000ee0e0 : ret 0x767d
0x0000020000687e54 : ret 0x7701
0x000002000003f406 : ret 0x772
0x0000020000215412 : ret 0x773
0x000002000000532b : ret 0x774
0x000002000000780f : ret 0x775
0x000002000000b8cb : ret 0x7774
0x00000200001b0165 : ret 0x778d
0x00000200001694ef : ret 0x77ba
0x000002000068d355 : ret 0x77c
0x000002000013ca4d : ret 0x77e9
0x00000200000f6d82 : ret 0x7878
0x000002000021de3c : ret 0x7880
0x00000200003cd6e6 : ret 0x7883
0x000002000003d5f8 : ret 0x789
0x000002000006d7ea : ret 0x78b
0x000002000016950a : ret 0x78ba
0x00000200000f9e4d : ret 0x7983
0x00000200000a78b1 : ret 0x7989
0x000002000071d61f : ret 0x79ba
0x000002000058a23f : ret 0x79e9
0x0000020000164578 : ret 0x79eb
0x00000200007cb93f : ret 0x7a
0x00000200001f36fe : ret 0x7a72
0x00000200000d9e53 : ret 0x7a73
0x000002000071d639 : ret 0x7aba
0x000002000018d2bb : ret 0x7ae9
0x0000020000544877 : ret 0x7b80
0x00000200007aff67 : ret 0x7b8d
0x000002000016982a : ret 0x7ba
0x00000200000fbbd0 : ret 0x7c77
0x000002000045c85e : ret 0x7c80
0x000002000008178e : ret 0x7c81
0x00000200001bc8ae : ret 0x7c89
0x000002000008e830 : ret 0x7ce9
0x000002000005409a : ret 0x7d2
0x00000200000bbae8 : ret 0x7d73
0x0000020000038312 : ret 0x7d80
0x000002000011019a : ret 0x7d89
0x00000200007e0c78 : ret 0x7e0d
0x00000200007e1318 : ret 0x7e13
0x00000200007e0fc8 : ret 0x7e15
0x00000200001455dd : ret 0x7e7
0x000002000020ecc8 : ret 0x7eb
0x0000020000098ebc : ret 0x7ee8
0x0000020000589d3a : ret 0x7ee9
0x00000200001240a5 : ret 0x7f0
0x00000200001df1ad : ret 0x7f24
0x000002000049a6b5 : ret 0x7fa8
0x00000200000e4d7b : ret 0x7fe8
0x00000200000ccdee : ret 0x7fe9
0x00000200000ea095 : ret 0x7ffe
0x000002000066640a : ret 0x7fff
0x000002000023de16 : ret 0x8001
0x00000200001b3c62 : ret 0x8018
0x000002000050ce5d : ret 0x8020
0x000002000042fdb6 : ret 0x8024
0x0000020000093ab4 : ret 0x8025
0x000002000053bf12 : ret 0x8028
0x00000200001401ff : ret 0x8041
0x00000200004290c0 : ret 0x8042
0x000002000071573d : ret 0x8068
0x00000200001cc83a : ret 0x807
0x00000200004bee18 : ret 0x8073
0x00000200004045d5 : ret 0x8074
0x000002000003aea5 : ret 0x808b
0x00000200000364ad : ret 0x80ba
0x00000200004ac15a : ret 0x80e8
0x00000200004c7553 : ret 0x80ff
0x000002000023a350 : ret 0x8102
0x0000020000075e80 : ret 0x813b
0x00000200000d6799 : ret 0x8141
0x00000200004794f1 : ret 0x8142
0x00000200000b2e67 : ret 0x8148
0x0000020000013a7d : ret 0x8149
0x000002000049a3ba : ret 0x8188
0x0000020000083eef : ret 0x8189
0x00000200001d3bc5 : ret 0x818a
0x00000200007b7a70 : ret 0x81c3
0x000002000015dff9 : ret 0x81e0
0x0000020000229dfb : ret 0x81f0
0x00000200006364bf : ret 0x81fe
0x000002000051f0ef : ret 0x81ff
0x00000200001a6ef1 : ret 0x820
0x000002000003038d : ret 0x820f
0x00000200004a74ff : ret 0x824
0x0000020000099ccf : ret 0x8274
0x000002000017b763 : ret 0x828
0x000002000000f21c : ret 0x82e8
0x000002000011587c : ret 0x82eb
0x00000200001323f3 : ret 0x8302
0x000002000040731e : ret 0x8303
0x000002000049c01f : ret 0x8304
0x0000020000145933 : ret 0x8307
0x00000200000a1e5f : ret 0x8308
0x000002000044c730 : ret 0x8309
0x000002000061816f : ret 0x830a
0x000002000018cf18 : ret 0x830c
0x000002000001909a : ret 0x830f
0x000002000015446e : ret 0x831
0x000002000005395b : ret 0x8310
0x00000200000f8455 : ret 0x8314
0x000002000013393f : ret 0x8318
0x00000200000c0559 : ret 0x8320
0x00000200006e2916 : ret 0x8328
0x000002000024a402 : ret 0x833b
0x00000200006b7f04 : ret 0x8340
0x00000200000303f0 : ret 0x8341
0x0000020000006d8c : ret 0x8348
0x000002000000702a : ret 0x8349
0x00000200001a29cd : ret 0x834a
0x00000200000028dc : ret 0x8366
0x0000020000062f65 : ret 0x8388
0x0000020000005345 : ret 0x8389
0x000002000010250d : ret 0x838b
0x0000020000083c55 : ret 0x83c3
0x000002000012dd27 : ret 0x83e8
0x00000200000128b4 : ret 0x83e9
0x00000200007a3f89 : ret 0x83f0
0x0000020000144e0f : ret 0x83f8
0x00000200004e1876 : ret 0x83fe
0x00000200003e775f : ret 0x83ff
0x0000020000100560 : ret 0x840f
0x00000200007ae0d8 : ret 0x8440
0x00000200004b95a7 : ret 0x8441
0x00000200001eaf8f : ret 0x8444
0x0000020000054eca : ret 0x8445
0x00000200006ee4c5 : ret 0x8451
0x000002000002fce3 : ret 0x8488
0x00000200000b2a68 : ret 0x8489
0x00000200001d88e5 : ret 0x848b
0x000002000006bae3 : ret 0x8498
0x00000200004930b8 : ret 0x84c6
0x000002000065ab39 : ret 0x84c7
0x00000200005170b6 : ret 0x84e8
0x00000200001a3e77 : ret 0x84e9
0x00000200004baacb : ret 0x84ff
0x000002000013b381 : ret 0x8502
0x00000200000c0669 : ret 0x8504
0x0000020000032ff8 : ret 0x8508
0x000002000006ad96 : ret 0x850f
0x00000200004970ed : ret 0x8541
0x000002000070377a : ret 0x8544
0x00000200000c112e : ret 0x8545
0x000002000000a4b6 : ret 0x8548
0x0000020000030358 : ret 0x8549
0x000002000006faf1 : ret 0x854d
0x0000020000083ba0 : ret 0x8566
0x0000020000593be6 : ret 0x8598
0x00000200003d2a49 : ret 0x85e8
0x00000200001861d7 : ret 0x85e9
0x00000200003d4810 : ret 0x85ff
0x00000200000456bc : ret 0x860f
0x00000200000ea10f : ret 0x862b
0x00000200000ed1ee : ret 0x8675
0x000002000003032e : ret 0x8676
0x000002000009d55b : ret 0x8686
0x00000200002427e3 : ret 0x868b
0x000002000053577a : ret 0x86d
0x00000200004a6e80 : ret 0x86e8
0x0000020000132818 : ret 0x86e9
0x00000200003ce55d : ret 0x87
0x000002000001fc4f : ret 0x870f
0x000002000022ea57 : ret 0x873
0x0000020000004d3d : ret 0x874
0x000002000020b3d9 : ret 0x8741
0x0000020000560f72 : ret 0x8748
0x0000020000122d4f : ret 0x875
0x0000020000585c07 : ret 0x877
0x00000200000e91c3 : ret 0x8789
0x0000020000064f8a : ret 0x879
0x000002000045fa5a : ret 0x87e
0x000002000066181b : ret 0x87e8
0x0000020000024d87 : ret 0x88
0x000002000008f0ff : ret 0x8808
0x000002000043806a : ret 0x8840
0x000002000000bfcb : ret 0x8841
0x000002000000f7c7 : ret 0x8844
0x000002000022cb0f : ret 0x8864
0x00000200001bc310 : ret 0x888b
0x00000200001dbae8 : ret 0x889
0x00000200006171e3 : ret 0x88a
0x00000200000fea14 : ret 0x88b
0x0000020000519b12 : ret 0x88ff
0x000002000054177c : ret 0x890
0x000002000049b126 : ret 0x8902
0x00000200007823da : ret 0x8904
0x00000200000e6c4f : ret 0x8908
0x0000020000249e2c : ret 0x890d
0x000002000049b1f4 : ret 0x8912
0x0000020000485a6c : ret 0x8918
0x0000020000553ede : ret 0x8928
0x0000020000471953 : ret 0x8930
0x0000020000008027 : ret 0x8941
0x0000020000053792 : ret 0x8942
0x0000020000031c1b : ret 0x8944
0x000002000002c857 : ret 0x8945
0x0000020000703b69 : ret 0x8946
0x0000020000002a9e : ret 0x8948
0x0000020000002ec9 : ret 0x8949
0x00000200000651db : ret 0x894a
0x00000200001c2439 : ret 0x894b
0x00000200000100c3 : ret 0x894c
0x0000020000002d4c : ret 0x894d
0x000002000003670e : ret 0x8966
0x000002000010ab75 : ret 0x898b
0x00000200003cde85 : ret 0x89f0
0x000002000011fb26 : ret 0x89ff
0x00000200000196fe : ret 0x8a
0x0000020000214557 : ret 0x8a04
0x00000200007d02c2 : ret 0x8a34
0x000002000012a655 : ret 0x8a40
0x0000020000052000 : ret 0x8a41
0x0000020000622f1b : ret 0x8a42
0x00000200000f34d0 : ret 0x8a44
0x0000020000135d42 : ret 0x8a45
0x000002000062306a : ret 0x8a46
0x00000200000038f4 : ret 0x8a80
0x000002000040a245 : ret 0x8aa3
0x000002000042eb3b : ret 0x8ac3
0x0000020000795ac2 : ret 0x8af6
0x000002000049a3c4 : ret 0x8aff
0x00000200004640bb : ret 0x8b
0x000002000023a2a3 : ret 0x8b02
0x000002000022fcc8 : ret 0x8b04
0x000002000003ef1c : ret 0x8b08
0x0000020000778b67 : ret 0x8b0d
0x0000020000608305 : ret 0x8b18
0x000002000077a14b : ret 0x8b1a
0x000002000012541c : ret 0x8b20
0x0000020000677410 : ret 0x8b25
0x00000200004ac14f : ret 0x8b28
0x00000200006aa991 : ret 0x8b2a
0x00000200004a2d29 : ret 0x8b38
0x000002000004e21d : ret 0x8b41
0x0000020000039dfb : ret 0x8b42
0x00000200001c820c : ret 0x8b44
0x00000200000ddb5e : ret 0x8b45
0x00000200000057ca : ret 0x8b48
0x0000020000002a64 : ret 0x8b49
0x000002000002f685 : ret 0x8b4a
0x00000200000a6d46 : ret 0x8b4b
0x000002000000f6f0 : ret 0x8b4c
0x0000020000010541 : ret 0x8b4d
0x00000200001afc78 : ret 0x8b4f
0x00000200001511d5 : ret 0x8b66
0x0000020000145f09 : ret 0x8b8b
0x00000200003da26b : ret 0x8ba
0x000002000043ee59 : ret 0x8bb
0x00000200004ca5cc : ret 0x8bc3
0x00000200004f4b1b : ret 0x8be8
0x000002000018d2aa : ret 0x8be9
0x0000020000037139 : ret 0x8beb
0x0000020000494b64 : ret 0x8bf8
0x00000200003d28eb : ret 0x8bff
0x000002000001ff34 : ret 0x8c0f
0x00000200000cdff7 : ret 0x8c89
0x00000200000c8f40 : ret 0x8c8b
0x000002000016e876 : ret 0x8ce9
0x000002000010ebfa : ret 0x8cff
0x000002000012d8b0 : ret 0x8d02
0x00000200001c948f : ret 0x8d07
0x000002000000ea19 : ret 0x8d0f
0x000002000043457e : ret 0x8d10
0x000002000008440d : ret 0x8d41
0x00000200000536ec : ret 0x8d42
0x0000020000018ce6 : ret 0x8d43
0x000002000002b4d9 : ret 0x8d44
0x0000020000035ecc : ret 0x8d45
0x0000020000689ed3 : ret 0x8d47
0x0000020000007998 : ret 0x8d48
0x000002000000792e : ret 0x8d49
0x0000020000053215 : ret 0x8d4a
0x0000020000049104 : ret 0x8d4b
0x000002000000ed19 : ret 0x8d4c
0x000002000000a775 : ret 0x8d4d
0x0000020000087fea : ret 0x8d4e
0x000002000059ea51 : ret 0x8de8
0x00000200001d2fb8 : ret 0x8e0f
0x000002000040990a : ret 0x8e1
0x00000200000d9eb0 : ret 0x8e73
0x00000200007165d2 : ret 0x8e8
0x000002000018a117 : ret 0x8ee9
0x0000020000074c77 : ret 0x8f0f
0x0000020000035bf5 : ret 0x8f76
0x000002000018a10a : ret 0x8fe9
0x0000020000237a51 : ret 0x90
0x0000020000052d7d : ret 0x9066
0x000002000007a23a : ret 0x90e8
0x000002000018a0fd : ret 0x90e9
0x00000200005cc3be : ret 0x90ff
0x0000020000127849 : ret 0x9105
0x000002000066f405 : ret 0x913b
0x0000020000056161 : ret 0x918a
0x000002000014c890 : ret 0x918b
0x0000020000524997 : ret 0x920
0x000002000006e0f9 : ret 0x920f
0x00000200004bde75 : ret 0x928b
0x00000200005493b6 : ret 0x92eb
0x00000200000bda99 : ret 0x930f
0x000002000024e320 : ret 0x9310
0x0000020000104bbe : ret 0x933b
0x0000020000728f3a : ret 0x9369
0x0000020000142dfa : ret 0x9375
0x000002000062f56b : ret 0x938
0x000002000045136f : ret 0x93e8
0x00000200001911a3 : ret 0x93e9
0x00000200007b7b3e : ret 0x93fd
0x00000200007a91eb : ret 0x94
0x00000200000055ba : ret 0x940f
0x00000200006b46a2 : ret 0x944
0x00000200000f847a : ret 0x9472
0x0000020000231716 : ret 0x9475
0x000002000020bfe5 : ret 0x948
0x000002000016b19d : ret 0x9489
0x0000020000087d75 : ret 0x948a
0x0000020000057e53 : ret 0x94c
0x00000200005654b6 : ret 0x94e8
0x000002000018a0ed : ret 0x94e9
0x000002000000f7bd : ret 0x950f
0x000002000019490a : ret 0x954
0x000002000005880b : ret 0x9540
0x0000020000435295 : ret 0x9577
0x000002000077b944 : ret 0x9589
0x000002000024f19c : ret 0x95c0
0x00000200004588d5 : ret 0x95e8
0x000002000014326a : ret 0x95e9
0x0000020000643784 : ret 0x960f
0x000002000056681c : ret 0x962
0x0000020000170956 : ret 0x963b
0x000002000010228b : ret 0x9680
0x000002000070c94a : ret 0x9683
0x000002000007a198 : ret 0x96e8
0x0000020000190a70 : ret 0x96e9
0x0000020000242081 : ret 0x96ff
0x000002000064378f : ret 0x970f
0x000002000051cc14 : ret 0x971
0x000002000010030b : ret 0x972
0x0000020000217b1b : ret 0x973
0x00000200000c2fb4 : ret 0x9739
0x0000020000033d46 : ret 0x974
0x0000020000029aaa : ret 0x975
0x00000200002232e8 : ret 0x976
0x00000200003d90b6 : ret 0x977
0x00000200007d2dda : ret 0x9772
0x00000200000fd64c : ret 0x97d
0x000002000048739e : ret 0x97eb
0x000002000016dc80 : ret 0x98
0x00000200007c802a : ret 0x9836
0x00000200000dc768 : ret 0x9848
0x00000200000d08df : ret 0x9874
0x000002000070c93a : ret 0x98b0
0x0000020000465702 : ret 0x98e8
0x0000020000117aec : ret 0x9948
0x00000200006237f7 : ret 0x9972
0x00000200000bf030 : ret 0x9977
0x0000020000186f77 : ret 0x99ba
0x0000020000448031 : ret 0x99e8
0x00000200007c2a26 : ret 0x9a
0x00000200007a5b6a : ret 0x9a26
0x00000200007b29ba : ret 0x9a4e
0x00000200006a01ee : ret 0x9a59
0x00000200007c9527 : ret 0x9ab9
0x0000020000186fb7 : ret 0x9aba
0x0000020000003ca0 : ret 0x9ae8
0x000002000017d224 : ret 0x9ae9
0x00000200006b2efa : ret 0x9aee
0x00000200006af4fa : ret 0x9af
0x000002000069c9ba : ret 0x9b94
0x00000200006478ef : ret 0x9ba
0x00000200006a57fa : ret 0x9bc5
0x000002000045265c : ret 0x9c75
0x0000020000065a65 : ret 0x9c89
0x000002000016e74e : ret 0x9ce8
0x0000020000195778 : ret 0x9ce9
0x00000200006af45a : ret 0x9cef
0x00000200006f446a : ret 0x9d21
0x00000200000366bb : ret 0x9d74
0x000002000058a21b : ret 0x9de9
0x0000020000794496 : ret 0x9e4
0x0000020000705a8a : ret 0x9e6e
0x00000200006781fa : ret 0x9e9b
0x000002000070b254 : ret 0x9ee8
0x000002000018a13e : ret 0x9ee9
0x00000200000dbc1a : ret 0x9eeb
0x000002000012df27 : ret 0x9f0
0x0000020000726102 : ret 0x9f04
0x000002000018a131 : ret 0x9fe9
0x00000200000461ce : ret 0xa
0x000002000046a24e : ret 0xa0
0x0000020000224dbe : ret 0xa00
0x0000020000248adc : ret 0xa072
0x00000200003d7322 : ret 0xa0b9
0x000002000018a124 : ret 0xa0e9
0x00000200003fa75a : ret 0xa0eb
0x00000200004c7d6a : ret 0xa1
0x00000200007cb172 : ret 0xa10d
0x00000200000d9ecb : ret 0xa177
0x00000200007c799c : ret 0xa17c
0x00000200005f33a2 : ret 0xa1b9
0x000002000066c91d : ret 0xa1e8
0x000002000018a16e : ret 0xa1e9
0x00000200004cb591 : ret 0xa1eb
0x000002000068fa1c : ret 0xa2e8
0x000002000018a17e : ret 0xa2e9
0x00000200006f4a6c : ret 0xa2ff
0x0000020000044a9a : ret 0xa35
0x0000020000552f6c : ret 0xa373
0x000002000001b2a7 : ret 0xa375
0x00000200004d076c : ret 0xa3eb
0x00000200003cb800 : ret 0xa4
0x00000200004384d9 : ret 0xa40
0x000002000071707a : ret 0xa404
0x0000020000119f51 : ret 0xa44
0x00000200001d2992 : ret 0xa483
0x0000020000673d5a : ret 0xa4a3
0x000002000070367a : ret 0xa4db
0x0000020000670f5a : ret 0xa4e7
0x000002000045741b : ret 0xa4eb
0x0000020000127923 : ret 0xa505
0x00000200006329af : ret 0xa572
0x0000020000118721 : ret 0xa5e9
0x00000200000f43ad : ret 0xa5eb
0x00000200006e72aa : ret 0xa60d
0x00000200006d63aa : ret 0xa648
0x00000200006e25aa : ret 0xa65a
0x00000200000cbbd7 : ret 0xa674
0x00000200006cdbae : ret 0xa6df
0x00000200006d99aa : ret 0xa6e6
0x00000200006755da : ret 0xa727
0x00000200001d5f76 : ret 0xa73
0x0000020000050d2e : ret 0xa74
0x00000200000eeaf2 : ret 0xa75
0x0000020000140288 : ret 0xa76
0x00000200005dc4d1 : ret 0xa77
0x00000200006c10bc : ret 0xa772
0x00000200003cd567 : ret 0xa774
0x000002000050d65f : ret 0xa7e8
0x0000020000219b68 : ret 0xa808
0x0000020000662caa : ret 0xa851
0x00000200005fb466 : ret 0xa864
0x00000200000350aa : ret 0xa87
0x00000200004a7f03 : ret 0xa877
0x000002000069f7a9 : ret 0xa8ba
0x00000200006d6abc : ret 0xa8c3
0x00000200006cadba : ret 0xa8ca
0x00000200004cdfcc : ret 0xa8eb
0x00000200005a48fc : ret 0xa9
0x00000200006c617a : ret 0xa913
0x00000200005cf1fa : ret 0xa92b
0x000002000004e1b9 : ret 0xa948
0x0000020000726377 : ret 0xa989
0x00000200005e175a : ret 0xa9cc
0x0000020000097206 : ret 0xa9e9
0x00000200005f518a : ret 0xa9f
0x00000200007abf7a : ret 0xaa1a
0x0000020000089c71 : ret 0xaa38
0x00000200001f93a2 : ret 0xaa50
0x00000200005b5c8a : ret 0xab27
0x0000020000222fff : ret 0xab8
0x00000200001d0f59 : ret 0xaba
0x0000020000627e5a : ret 0xabd8
0x0000020000025093 : ret 0xabeb
0x00000200005a2d8a : ret 0xac56
0x00000200005b895a : ret 0xac5a
0x00000200005fe21a : ret 0xac6d
0x000002000068fb1a : ret 0xac8d
0x000002000024d6ba : ret 0xace
0x0000020000593cfa : ret 0xace0
0x0000020000478ac5 : ret 0xaceb
0x000002000024bf9a : ret 0xad72
0x00000200000fd0f1 : ret 0xad74
0x00000200005a334a : ret 0xad9a
0x0000020000541b7a : ret 0xadb
0x00000200006f72e2 : ret 0xadb5
0x000002000059fe42 : ret 0xadd0
0x0000020000678b96 : ret 0xae
0x0000020000190e18 : ret 0xaeeb
0x00000200005af2ea : ret 0xaf09
0x00000200000cd20f : ret 0xaf0f
0x00000200005eef5a : ret 0xaf67
0x000002000053f202 : ret 0xaf83
0x000002000002a0f1 : ret 0xb
0x00000200000879d8 : ret 0xb0
0x000002000053a95a : ret 0xb01
0x00000200004271ea : ret 0xb072
0x000002000001082c : ret 0xb075
0x000002000064feba : ret 0xb079
0x000002000053a10b : ret 0xb08
0x00000200005ef92a : ret 0xb086
0x0000020000056b27 : ret 0xb0c3
0x0000020000589012 : ret 0xb0e9
0x00000200000e8b7e : ret 0xb141
0x000002000062d60a : ret 0xb1aa
0x000002000062e52a : ret 0xb1d1
0x000002000011b79f : ret 0xb1e9
0x00000200004a176e : ret 0xb1ff
0x00000200005a6656 : ret 0xb26
0x00000200007d157a : ret 0xb265
0x000002000043be6f : ret 0xb272
0x00000200000f8199 : ret 0xb2b
0x0000020000615c56 : ret 0xb2b0
0x0000020000721f7a : ret 0xb2ba
0x00000200004048be : ret 0xb2c3
0x00000200004bd01d : ret 0xb2ff
0x00000200005b63da : ret 0xb319
0x00000200007cc96a : ret 0xb32d
0x0000020000621f7a : ret 0xb355
0x00000200007cce0a : ret 0xb372
0x000002000046188b : ret 0xb376
0x000002000060bb6a : ret 0xb3c6
0x000002000017e796 : ret 0xb3e9
0x00000200000a4730 : ret 0xb40
0x00000200005a70da : ret 0xb40c
0x00000200000257e2 : ret 0xb41
0x00000200007b789a : ret 0xb42c
0x00000200000ffae2 : ret 0xb44
0x0000020000058899 : ret 0xb440
0x0000020000523d8a : ret 0xb446
0x00000200007bbf39 : ret 0xb44c
0x0000020000532eda : ret 0xb44e
0x000002000043925d : ret 0xb476
0x000002000004b4ac : ret 0xb48
0x000002000003b250 : ret 0xb49
0x00000200007ba53a : ret 0xb499
0x00000200000ac3dd : ret 0xb4c
0x00000200007b6db2 : ret 0xb4c6
0x00000200005111aa : ret 0xb4cf
0x00000200001962c6 : ret 0xb4d
0x0000020000032d8e : ret 0xb4e8
0x00000200000e102c : ret 0xb4e9
0x00000200004789d3 : ret 0xb4eb
0x0000020000179ee9 : ret 0xb540
0x00000200000552cc : ret 0xb541
0x00000200005f3d2a : ret 0xb55a
0x00000200007ab6e9 : ret 0xb55b
0x0000020000591fda : ret 0xb55d
0x00000200007b009a : ret 0xb55f
0x000002000054aa1a : ret 0xb563
0x00000200007c7f02 : ret 0xb5a2
0x000002000079da8a : ret 0xb5ea
0x00000200001d133b : ret 0xb5eb
0x00000200007c8c32 : ret 0xb5f5
0x0000020000002aa2 : ret 0xb60f
0x00000200004a4816 : ret 0xb619
0x00000200007b84e6 : ret 0xb653
0x000002000005f061 : ret 0xb66
0x0000020000798b9a : ret 0xb668
0x00000200007b7cda : ret 0xb674
0x00000200004c9222 : ret 0xb6b5
0x00000200004052b1 : ret 0xb6eb
0x000002000058d1aa : ret 0xb6f0
0x000002000050e15a : ret 0xb702
0x000002000002564b : ret 0xb70f
0x00000200005e64ba : ret 0xb713
0x00000200001dab19 : ret 0xb73
0x00000200000e54bc : ret 0xb74
0x00000200000ec42f : ret 0xb740
0x00000200006d8c3a : ret 0xb743
0x000002000017bd00 : ret 0xb75
0x000002000005131e : ret 0xb76
0x00000200004c168a : ret 0xb765
0x000002000047f3e9 : ret 0xb77
0x000002000061e199 : ret 0xb775
0x00000200000b7eab : ret 0xb776
0x00000200005bdab2 : ret 0xb7bc
0x0000020000484e3a : ret 0xb7c1
0x00000200005cee2a : ret 0xb7c8
0x000002000068d47b : ret 0xb7e8
0x00000200001f8b96 : ret 0xb8
0x00000200005abdb9 : ret 0xb802
0x00000200007a259a : ret 0xb808
0x000002000049759d : ret 0xb80b
0x00000200007a222a : ret 0xb81b
0x0000020000077f7e : ret 0xb841
0x00000200000542c9 : ret 0xb848
0x000002000001484b : ret 0xb849
0x000002000079c7fa : ret 0xb856
0x00000200004ee31a : ret 0xb867
0x000002000068415a : ret 0xb881
0x000002000079c3f2 : ret 0xb88f
0x00000200005b96d6 : ret 0xb8b
0x00000200000092fe : ret 0xb8c3
0x00000200005bfb68 : ret 0xb8cc
0x0000020000098c22 : ret 0xb8e8
0x00000200004d9d3a : ret 0xb8fc
0x00000200004c5ccf : ret 0xb8ff
0x000002000000724a : ret 0xb9
0x000002000050ba4d : ret 0xb902
0x0000020000524ef0 : ret 0xb90e
0x00000200006710a2 : ret 0xb90f
0x00000200004d5fa4 : ret 0xb910
0x0000020000171348 : ret 0xb918
0x000002000063e792 : ret 0xb91a
0x00000200000f6265 : ret 0xb91f
0x0000020000529636 : ret 0xb920
0x0000020000716e83 : ret 0xb928
0x0000020000799136 : ret 0xb930
0x00000200005b41aa : ret 0xb93e
0x00000200001ab04e : ret 0xb940
0x000002000004158c : ret 0xb941
0x0000020000015537 : ret 0xb948
0x000002000002bbab : ret 0xb949
0x0000020000083542 : ret 0xb970
0x0000020000790b82 : ret 0xb978
0x00000200004aa7b1 : ret 0xb983
0x000002000011685f : ret 0xb9c3
0x000002000042ea9a : ret 0xb9eb
0x0000020000605907 : ret 0xb9f4
0x0000020000463f2c : ret 0xb9ff
0x0000020000046a21 : ret 0xba
0x0000020000131f89 : ret 0xba00
0x000002000018f8a6 : ret 0xba01
0x00000200004dc004 : ret 0xba02
0x000002000000c2f6 : ret 0xba0f
0x0000020000144e3a : ret 0xba41
0x000002000004ef96 : ret 0xba48
0x00000200000478b1 : ret 0xba49
0x00000200004d7d6a : ret 0xba68
0x00000200005330b3 : ret 0xba72
0x00000200004d4b6a : ret 0xba9a
0x0000020000041d78 : ret 0xbac3
0x0000020000013f30 : ret 0xbae8
0x0000020000589cfe : ret 0xbae9
0x0000020000458003 : ret 0xbaff
0x000002000041f264 : ret 0xbb
0x0000020000249536 : ret 0xbb01
0x00000200004ecaca : ret 0xbb15
0x000002000077a165 : ret 0xbb1a
0x00000200004eb0ca : ret 0xbb2f
0x00000200000ff888 : ret 0xbb41
0x00000200000b222d : ret 0xbb48
0x0000020000146d78 : ret 0xbb83
0x00000200004c4812 : ret 0xbbff
0x00000200004d0564 : ret 0xbc0f
0x000002000003ab7f : ret 0xbc41
0x0000020000244ea0 : ret 0xbc49
0x00000200006bd58a : ret 0xbc72
0x00000200000292e9 : ret 0xbc74
0x00000200004e4cfa : ret 0xbc76
0x00000200004dc00d : ret 0xbc80
0x00000200004b6706 : ret 0xbce0
0x00000200001cbd2a : ret 0xbce8
0x00000200000fd0b1 : ret 0xbd04
0x00000200006148ee : ret 0xbd0e
0x00000200000251cd : ret 0xbd0f
0x000002000072792a : ret 0xbd16
0x0000020000726f82 : ret 0xbd1f
0x000002000048f02a : ret 0xbd30
0x00000200004ac0f6 : ret 0xbd34
0x000002000006e145 : ret 0xbd41
0x000002000001526e : ret 0xbd48
0x00000200000702fd : ret 0xbd49
0x00000200005641aa : ret 0xbd6a
0x00000200005dd7fa : ret 0xbd94
0x000002000049b7de : ret 0xbdd4
0x000002000049f9ba : ret 0xbdd6
0x00000200001ace4e : ret 0xbde9
0x00000200004bb628 : ret 0xbdff
0x000002000047eeda : ret 0xbe01
0x00000200000c860b : ret 0xbe0f
0x0000020000016c55 : ret 0xbe41
0x0000020000248f0b : ret 0xbe48
0x0000020000069f98 : ret 0xbe49
0x000002000045e1c2 : ret 0xbe6f
0x000002000002d09c : ret 0xbe72
0x0000020000476efa : ret 0xbeae
0x000002000021315c : ret 0xbeb
0x0000020000711cda : ret 0xbed7
0x000002000070a3d2 : ret 0xbee4
0x00000200007cdb7a : ret 0xbee8
0x0000020000197d49 : ret 0xbee9
0x00000200004642c2 : ret 0xbef6
0x0000020000133c7c : ret 0xbf
0x000002000047864a : ret 0xbf11
0x00000200007ca07a : ret 0xbf23
0x0000020000705146 : ret 0xbf36
0x000002000003763e : ret 0xbf41
0x0000020000150eb3 : ret 0xbf48
0x00000200000c417a : ret 0xbf49
0x0000020000702952 : ret 0xbf53
0x000002000013cad9 : ret 0xbf75
0x00000200005039aa : ret 0xbf88
0x000002000055eaba : ret 0xbf8d
0x000002000051ac3e : ret 0xbfb3
0x00000200007283da : ret 0xbfcd
0x000002000068cd73 : ret 0xbfe8
0x00000200004bb452 : ret 0xbfff
0x0000020000071042 : ret 0xc
0x000002000012ebaa : ret 0xc0
0x000002000002182a : ret 0xc003
0x00000200006b079f : ret 0xc01b
0x00000200005abd2b : ret 0xc024
0x000002000008da4c : ret 0xc025
0x0000020000009d78 : ret 0xc032
0x000002000000b70a : ret 0xc033
0x000002000051754b : ret 0xc03f
0x00000200000480cb : ret 0xc041
0x00000200004e33d6 : ret 0xc064
0x0000020000479d23 : ret 0xc069
0x00000200004ee45a : ret 0xc06f
0x000002000008e93c : ret 0xc072
0x00000200004e09aa : ret 0xc074
0x000002000003d6ec : ret 0xc075
0x000002000042afa5 : ret 0xc076
0x000002000016afe0 : ret 0xc083
0x000002000020164e : ret 0xc084
0x0000020000025138 : ret 0xc085
0x00000200004e745a : ret 0xc09f
0x00000200004dd79a : ret 0xc0a8
0x000002000052f2aa : ret 0xc0b9
0x00000200005f9006 : ret 0xc0cf
0x00000200004509c2 : ret 0xc0e6
0x00000200001efc9a : ret 0xc0e8
0x0000020000169df1 : ret 0xc0e9
0x0000020000036c75 : ret 0xc0ff
0x000002000055aca6 : ret 0xc102
0x00000200000844ff : ret 0xc103
0x000002000055acde : ret 0xc107
0x000002000001052d : ret 0xc10a
0x00000200002434fc : ret 0xc11a
0x000002000000f862 : ret 0xc123
0x0000020000018cf4 : ret 0xc12b
0x00000200000c8726 : ret 0xc133
0x000002000063a17a : ret 0xc138
0x00000200000846de : ret 0xc13b
0x000002000000c849 : ret 0xc141
0x000002000000fa30 : ret 0xc148
0x0000020000013334 : ret 0xc149
0x00000200003c8dfa : ret 0xc166
0x00000200000084af : ret 0xc181
0x000002000023edaf : ret 0xc183
0x00000200004c259e : ret 0xc18b
0x00000200004cc3fa : ret 0xc1d5
0x000002000058a1f7 : ret 0xc1e9
0x0000020000052670 : ret 0xc1f6
0x00000200003e6822 : ret 0xc1fa
0x00000200000fcf7e : ret 0xc1ff
0x00000200006e005a : ret 0xc2
0x00000200000ea7d7 : ret 0xc202
0x00000200000c7fae : ret 0xc203
0x0000020000702a59 : ret 0xc207
0x0000020000150a03 : ret 0xc223
0x000002000001fa11 : ret 0xc22b
0x00000200003eb44a : ret 0xc232
0x00000200000288f4 : ret 0xc233
0x00000200005136e9 : ret 0xc23a
0x000002000002df0d : ret 0xc23b
0x000002000016d528 : ret 0xc24
0x000002000062643a : ret 0xc26b
0x0000020000631ff2 : ret 0xc26d
0x000002000022f0dd : ret 0xc272
0x00000200001a0544 : ret 0xc280
0x000002000061462c : ret 0xc281
0x00000200003f954f : ret 0xc285
0x00000200004bf4da : ret 0xc288
0x00000200000f89bd : ret 0xc28a
0x00000200001d28f6 : ret 0xc28b
0x000002000072b02a : ret 0xc2aa
0x000002000024edb2 : ret 0xc2b9
0x00000200004c326a : ret 0xc2bc
0x000002000043ca4a : ret 0xc2cd
0x000002000002e51e : ret 0xc2eb
0x0000020000094498 : ret 0xc2f6
0x0000020000064778 : ret 0xc2ff
0x00000200001cb131 : ret 0xc30b
0x0000020000439efa : ret 0xc323
0x00000200007c300a : ret 0xc32a
0x000002000009931b : ret 0xc332
0x0000020000521dba : ret 0xc35a
0x0000020000029028 : ret 0xc35b
0x0000020000150ea4 : ret 0xc35f
0x00000200004ab07a : ret 0xc383
0x00000200004af2da : ret 0xc38a
0x0000020000126137 : ret 0xc38b
0x00000200007d1b7f : ret 0xc39
0x00000200004ff4aa : ret 0xc3b7
0x0000020000706919 : ret 0xc3ba
0x00000200007023c9 : ret 0xc3e1
0x000002000001dce9 : ret 0xc3f6
0x00000200004abe82 : ret 0xc3ff
0x00000200004a5d9a : ret 0xc422
0x00000200000e1bdf : ret 0xc46
0x00000200006bbc43 : ret 0xc472
0x00000200006b0152 : ret 0xc4c6
0x000002000016452a : ret 0xc4e9
0x000002000007b69e : ret 0xc4eb
0x000002000061b03e : ret 0xc503
0x0000020000233101 : ret 0xc520
0x0000020000233135 : ret 0xc531
0x00000200000e8fac : ret 0xc53b
0x000002000048ac5a : ret 0xc555
0x00000200006edc2b : ret 0xc556
0x00000200005f663a : ret 0xc569
0x000002000013b0f2 : ret 0xc575
0x00000200004f1710 : ret 0xc581
0x00000200004646da : ret 0xc59d
0x0000020000487e7a : ret 0xc5d4
0x0000020000006e95 : ret 0xc5e8
0x0000020000020249 : ret 0xc5e9
0x00000200005edf3a : ret 0xc5f0
0x00000200004c0f16 : ret 0xc601
0x000002000065494d : ret 0xc603
0x000002000021405f : ret 0xc60f
0x00000200000104b0 : ret 0xc62b
0x000002000016bfe8 : ret 0xc63b
0x000002000006601a : ret 0xc641
0x00000200007c8746 : ret 0xc654
0x000002000072a895 : ret 0xc677
0x00000200005ee9da : ret 0xc680
0x0000020000779d43 : ret 0xc683
0x0000020000117002 : ret 0xc68b
0x00000200004ec1ba : ret 0xc6b6
0x0000020000792a9e : ret 0xc6fd
0x000002000044841c : ret 0xc6ff
0x000002000022b890 : ret 0xc7
0x00000200003d4e84 : ret 0xc702
0x000002000010787a : ret 0xc703
0x00000200000a7999 : ret 0xc708
0x00000200001c6031 : ret 0xc70b
0x00000200001e207f : ret 0xc723
0x0000020000025be1 : ret 0xc73b
0x0000020000145bdd : ret 0xc74
0x0000020000057f08 : ret 0xc741
0x0000020000069753 : ret 0xc748
0x00000200005a95cb : ret 0xc74c
0x00000200001d010e : ret 0xc75
0x000002000041ee5e : ret 0xc766
0x00000200000402eb : ret 0xc77
0x00000200000d1bd0 : ret 0xc772
0x000002000077ff3d : ret 0xc783
0x000002000047a439 : ret 0xc78b
0x00000200007900f2 : ret 0xc7cb
0x0000020000037340 : ret 0xc7f
0x00000200005de18f : ret 0xc7f0
0x0000020000528608 : ret 0xc7ff
0x0000020000051daf : ret 0xc803
0x0000020000222139 : ret 0xc80a
0x000002000016b9bb : ret 0xc80b
0x00000200003e10fa : ret 0xc80c
0x00000200000d9408 : ret 0xc823
0x0000020000027b74 : ret 0xc82b
0x0000020000039d0b : ret 0xc833
0x00000200001472a1 : ret 0xc83a
0x00000200001b986c : ret 0xc83b
0x0000020000680fba : ret 0xc84a
0x00000200003d229a : ret 0xc857
0x0000020000038683 : ret 0xc86b
0x000002000013f91f : ret 0xc883
0x000002000016fcc3 : ret 0xc88a
0x00000200000f6b3c : ret 0xc88b
0x000002000017ef24 : ret 0xc8a
0x0000020000675e4a : ret 0xc8a7
0x00000200005f56de : ret 0xc8b
0x00000200002476af : ret 0xc8ba
0x00000200006762fa : ret 0xc8bd
0x00000200001278ce : ret 0xc8c1
0x000002000043924a : ret 0xc8d
0x0000020000784fc9 : ret 0xc8e9
0x0000020000221ba4 : ret 0xc8eb
0x0000020000672e52 : ret 0xc8f1
0x00000200004c20b2 : ret 0xc8ff
0x0000020000672252 : ret 0xc902
0x00000200000d0c5f : ret 0xc903
0x0000020000670712 : ret 0xc91a
0x000002000068c8de : ret 0xc91b
0x0000020000091cdd : ret 0xc933
0x00000200005ed242 : ret 0xc935
0x0000020000689d2e : ret 0xc983
0x0000020000009566 : ret 0xc984
0x0000020000039ddb : ret 0xc985
0x00000200005b143a : ret 0xc9bb
0x000002000044695a : ret 0xc9ed
0x0000020000150f2f : ret 0xc9ff
0x00000200001280c1 : ret 0xca03
0x00000200005f6ffc : ret 0xca07
0x0000020000126fc6 : ret 0xca23
0x0000020000518df3 : ret 0xca2b
0x00000200000d9284 : ret 0xca3
0x00000200005aff2c : ret 0xca32
0x0000020000448b51 : ret 0xca3b
0x000002000077869c : ret 0xca6b
0x000002000060e66c : ret 0xca72
0x00000200001afe05 : ret 0xca75
0x00000200005aefa2 : ret 0xca80
0x000002000079ef05 : ret 0xca83
0x00000200001d98ab : ret 0xca84
0x0000020000107887 : ret 0xca8a
0x0000020000204e8e : ret 0xca8b
0x0000020000127bae : ret 0xcac1
0x00000200005a0d3a : ret 0xcac2
0x0000020000658b1a : ret 0xcad6
0x0000020000669c6c : ret 0xcae9
0x00000200004cdfda : ret 0xcaeb
0x000002000059f57b : ret 0xcaff
0x00000200004322da : ret 0xcb5a
0x00000200006abc9e : ret 0xcb75
0x000002000003983d : ret 0xcb83
0x000002000000c49d : ret 0xcb8b
0x0000020000591c3a : ret 0xcbb3
0x000002000070fe8e : ret 0xcbe9
0x000002000007db91 : ret 0xcbeb
0x00000200000316ff : ret 0xcc
0x00000200006c67a2 : ret 0xcc72
0x00000200000c74d7 : ret 0xcc75
0x000002000000703b : ret 0xccc3
0x00000200000088e0 : ret 0xcccc
0x000002000042e701 : ret 0xcce9
0x00000200000191ab : ret 0xcceb
0x000002000045122d : ret 0xccff
0x0000020000465daa : ret 0xcd4e
0x0000020000648162 : ret 0xcd50
0x00000200001f02ac : ret 0xcd75
0x000002000056165a : ret 0xcd8b
0x0000020000648df2 : ret 0xcdc5
0x000002000043baf2 : ret 0xcdeb
0x0000020000625c1a : ret 0xcdff
0x0000020000229fb4 : ret 0xce0b
0x00000200006bc270 : ret 0xce3b
0x0000020000660233 : ret 0xce75
0x0000020000127c93 : ret 0xce8b
0x00000200000d32fb : ret 0xcea
0x00000200003fa97a : ret 0xcea9
0x00000200006a01cd : ret 0xceb
0x00000200004aca5e : ret 0xceeb
0x00000200004195a8 : ret 0xcf03
0x00000200001278b0 : ret 0xcf05
0x000002000055b27a : ret 0xcf27
0x000002000006eb9b : ret 0xcf2b
0x000002000068f1dc : ret 0xcf3b
0x00000200006863a4 : ret 0xcf72
0x00000200004437aa : ret 0xcf74
0x00000200000d1e86 : ret 0xcf8b
0x000002000067af8a : ret 0xd
0x0000020000117cfc : ret 0xd03b
0x00000200006a4ffe : ret 0xd042
0x00000200006a34fe : ret 0xd05d
0x000002000040fd24 : ret 0xd069
0x000002000000f7f2 : ret 0xd075
0x00000200001e3f58 : ret 0xd077
0x0000020000637f72 : ret 0xd081
0x000002000007db85 : ret 0xd08a
0x000002000000f802 : ret 0xd08b
0x0000020000778717 : ret 0xd0ba
0x00000200004fdc12 : ret 0xd0e8
0x000002000042ec05 : ret 0xd0f6
0x000002000013e9e2 : ret 0xd0f7
0x000002000059ba01 : ret 0xd0ff
0x00000200004a0b42 : ret 0xd10b
0x00000200004c07d7 : ret 0xd12b
0x0000020000580aa3 : ret 0xd13a
0x00000200007c56e1 : ret 0xd13b
0x00000200006b1be1 : ret 0xd141
0x000002000001a3e9 : ret 0xd148
0x000002000001332e : ret 0xd149
0x00000200001e0634 : ret 0xd166
0x00000200004076cc : ret 0xd169
0x00000200006d882a : ret 0xd186
0x000002000000be62 : ret 0xd18a
0x000002000000edbf : ret 0xd18b
0x000002000018e0b3 : ret 0xd1e9
0x000002000078fea6 : ret 0xd1ec
0x000002000078fca6 : ret 0xd1ee
0x00000200006df05a : ret 0xd2
0x00000200005aff3e : ret 0xd202
0x0000020000230428 : ret 0xd203
0x0000020000670702 : ret 0xd21a
0x0000020000790dca : ret 0xd222
0x00000200007b0dd7 : ret 0xd232
0x0000020000008032 : ret 0xd233
0x000002000018b1e7 : ret 0xd241
0x00000200006e1025 : ret 0xd272
0x000002000066c02f : ret 0xd27c
0x00000200005d5786 : ret 0xd284
0x000002000001ef9c : ret 0xd285
0x00000200005305f2 : ret 0xd288
0x000002000056967e : ret 0xd28b
0x000002000040bfaa : ret 0xd2ec
0x0000020000535720 : ret 0xd2f6
0x00000200003e22a3 : ret 0xd2f7
0x0000020000075157 : ret 0xd300
0x00000200005f607a : ret 0xd324
0x00000200003f630a : ret 0xd32a
0x00000200000f3572 : ret 0xd33b
0x00000200000027a4 : ret 0xd348
0x00000200001d29f2 : ret 0xd349
0x00000200006aaa35 : ret 0xd372
0x0000020000544e49 : ret 0xd374
0x00000200003f901c : ret 0xd377
0x00000200001c27f4 : ret 0xd38a
0x00000200000eceae : ret 0xd38b
0x00000200005c328a : ret 0xd392
0x00000200006c4fe6 : ret 0xd3a5
0x000002000041967a : ret 0xd3de
0x00000200005ea48a : ret 0xd3e2
0x00000200007a6365 : ret 0xd3eb
0x00000200005bae7a : ret 0xd3ec
0x00000200005be473 : ret 0xd472
0x00000200003f8ee0 : ret 0xd473
0x000002000017b49f : ret 0xd523
0x00000200004fa07a : ret 0xd539
0x00000200006532ee : ret 0xd560
0x00000200000a3708 : ret 0xd572
0x00000200007a4d11 : ret 0xd575
0x00000200006e7d88 : ret 0xd57c
0x00000200003d8e2e : ret 0xd5b9
0x0000020000488941 : ret 0xd5eb
0x000002000011eddb : ret 0xd603
0x0000020000004b28 : ret 0xd68b
0x000002000000c324 : ret 0xd6eb
0x00000200004f0fa1 : ret 0xd7
0x00000200003f1412 : ret 0xd703
0x00000200005b3b92 : ret 0xd70b
0x0000020000703eca : ret 0xd713
0x0000020000211822 : ret 0xd72
0x000002000021c22d : ret 0xd73b
0x000002000013ca5b : ret 0xd74
0x00000200000d1a4b : ret 0xd75
0x000002000040fe68 : ret 0xd77
0x000002000024dc36 : ret 0xd775
0x00000200006e7df0 : ret 0xd77c
0x0000020000127fe6 : ret 0xd78b
0x00000200002244c2 : ret 0xd7b
0x00000200003cca6a : ret 0xd7cf
0x000002000059e282 : ret 0xd7eb
0x00000200004b1a5b : ret 0xd803
0x000002000012794f : ret 0xd80b
0x0000020000664fe7 : ret 0xd823
0x0000020000485b1c : ret 0xd832
0x000002000012a637 : ret 0xd83b
0x000002000011efcd : ret 0xd875
0x00000200007042a4 : ret 0xd89
0x00000200003c611a : ret 0xd8ad
0x00000200003dc032 : ret 0xd8e8
0x0000020000020a40 : ret 0xd8eb
0x00000200001099a5 : ret 0xd8f6
0x000002000000eb99 : ret 0xd8f7
0x00000200004b803a : ret 0xd94f
0x000002000022fdbd : ret 0xd972
0x00000200001c3802 : ret 0xd975
0x000002000013a658 : ret 0xd98b
0x00000200005684d2 : ret 0xd9a8
0x00000200000c320b : ret 0xd9d
0x00000200001d2bcd : ret 0xd9e8
0x00000200000393d7 : ret 0xd9eb
0x000002000078041d : ret 0xda2b
0x00000200001c164c : ret 0xda3b
0x000002000054e87a : ret 0xda92
0x00000200001f19a9 : ret 0xdab9
0x000002000071168d : ret 0xdaba
0x000002000004e2c7 : ret 0xdaeb
0x000002000022ea9d : ret 0xdb1b
0x000002000012f16c : ret 0xdb33
0x000002000054187a : ret 0xdb62
0x00000200005e11ac : ret 0xdb72
0x000002000062d3fe : ret 0xdb73
0x00000200004a6542 : ret 0xdb74
0x000002000066177c : ret 0xdb75
0x0000020000027506 : ret 0xdb8
0x00000200000f9c6b : ret 0xdb85
0x00000200000095a0 : ret 0xdb9
0x000002000079c286 : ret 0xdbb0
0x000002000005b2f9 : ret 0xdbeb
0x00000200005abc92 : ret 0xdc00
0x000002000055ed1a : ret 0xdc09
0x00000200000bfdb2 : ret 0xdc3
0x00000200006cea27 : ret 0xdc72
0x00000200001fb6dc : ret 0xdc75
0x00000200005df96a : ret 0xdc98
0x0000020000632b3a : ret 0xdc9d
0x00000200005268da : ret 0xdcc8
0x000002000069f357 : ret 0xdcd
0x0000020000555da2 : ret 0xdcf1
0x000002000052db86 : ret 0xdd51
0x0000020000580322 : ret 0xdd58
0x00000200004ad9b5 : ret 0xdd74
0x00000200007784d4 : ret 0xdd75
0x000002000052e0ba : ret 0xdd7f
0x000002000054903a : ret 0xddb5
0x000002000048df33 : ret 0xdde9
0x000002000001a61e : ret 0xddeb
0x0000020000510c9a : ret 0xde0d
0x000002000066f586 : ret 0xde5c
0x000002000018d052 : ret 0xde72
0x000002000020b87c : ret 0xde75
0x000002000053c812 : ret 0xde8a
0x00000200001cfb80 : ret 0xde8b
0x0000020000190bfa : ret 0xde9
0x000002000065837a : ret 0xded2
0x0000020000778848 : ret 0xdee8
0x0000020000094681 : ret 0xdeeb
0x0000020000123ad0 : ret 0xdf25
0x00000200001b9736 : ret 0xdf3
0x000002000050467a : ret 0xdf34
0x000002000050721a : ret 0xdf4e
0x000002000010a187 : ret 0xdf75
0x0000020000211899 : ret 0xdf7f
0x000002000077bb0c : ret 0xdf8b
0x000002000045073a : ret 0xdfc8
0x000002000045047a : ret 0xdfd5
0x00000200001d023f : ret 0xdfeb
0x000002000005a188 : ret 0xdffe
0x0000020000002489 : ret 0xe
0x000002000052272a : ret 0xe003
0x0000020000522c6a : ret 0xe018
0x00000200005abc3d : ret 0xe025
0x00000200006ab5b3 : ret 0xe072
0x00000200000d9b70 : ret 0xe075
0x0000020000236205 : ret 0xe07c
0x000002000002833f : ret 0xe083
0x0000020000604496 : ret 0xe0b2
0x00000200004b9ba9 : ret 0xe0c0
0x0000020000227141 : ret 0xe0c1
0x000002000000533d : ret 0xe0d3
0x000002000012721a : ret 0xe0e8
0x00000200000f2607 : ret 0xe0ff
0x0000020000789e53 : ret 0xe10
0x0000020000144939 : ret 0xe100
0x000002000050bc90 : ret 0xe12
0x000002000021e162 : ret 0xe16c
0x000002000003cd75 : ret 0xe172
0x0000020000420b8c : ret 0xe176
0x00000200000c0af0 : ret 0xe180
0x0000020000027bef : ret 0xe181
0x000002000003fbdb : ret 0xe183
0x00000200004eb8fa : ret 0xe1a8
0x00000200000d1e8c : ret 0xe1c1
0x0000020000046817 : ret 0xe1e9
0x00000200000dc69b : ret 0xe273
0x00000200004708b7 : ret 0xe275
0x000002000004b44e : ret 0xe28
0x00000200001fc78c : ret 0xe280
0x0000020000213ce2 : ret 0xe281
0x00000200000e6783 : ret 0xe283
0x000002000014696b : ret 0xe2c1
0x000002000018b376 : ret 0xe2d3
0x0000020000639052 : ret 0xe2df
0x0000020000010e88 : ret 0xe2e8
0x00000200001a1d78 : ret 0xe2e9
0x0000020000503163 : ret 0xe2eb
0x000002000041b43a : ret 0xe31b
0x00000200004f0d46 : ret 0xe33b
0x000002000013b3a9 : ret 0xe372
0x00000200004abd64 : ret 0xe375
0x00000200005ce866 : ret 0xe3a2
0x0000020000721e21 : ret 0xe3ba
0x000002000050645c : ret 0xe3e
0x00000200004d52d1 : ret 0xe3e9
0x00000200004345f8 : ret 0xe3eb
0x000002000020dd0a : ret 0xe44
0x00000200005631b2 : ret 0xe460
0x00000200004977a5 : ret 0xe472
0x00000200000cecbd : ret 0xe475
0x00000200001e3f44 : ret 0xe476
0x000002000065b572 : ret 0xe477
0x00000200004d9f9a : ret 0xe479
0x000002000013c9fc : ret 0xe484
0x00000200006d6a4a : ret 0xe486
0x00000200004f7572 : ret 0xe48b
0x000002000016b643 : ret 0xe4b9
0x00000200001d640a : ret 0xe4e1
0x00000200003fd316 : ret 0xe4eb
0x00000200005dd5fa : ret 0xe555
0x00000200000ac504 : ret 0xe581
0x0000020000563782 : ret 0xe599
0x00000200001fd89a : ret 0xe5a1
0x00000200003f9dba : ret 0xe5ed
0x0000020000580a06 : ret 0xe5ee
0x000002000058100e : ret 0xe5f3
0x000002000050381f : ret 0xe62
0x0000020000583071 : ret 0xe628
0x00000200001e34ce : ret 0xe637
0x0000020000583881 : ret 0xe643
0x00000200000ce5ea : ret 0xe672
0x0000020000413655 : ret 0xe675
0x000002000011d2f4 : ret 0xe683
0x000002000020904a : ret 0xe6bc
0x00000200002080ca : ret 0xe6d0
0x00000200005881d1 : ret 0xe6d7
0x00000200006e1492 : ret 0xe6dd
0x0000020000216344 : ret 0xe6e8
0x000002000003b833 : ret 0xe6eb
0x00000200000385c4 : ret 0xe6f7
0x0000020000589145 : ret 0xe702
0x00000200005892e3 : ret 0xe709
0x000002000000adb3 : ret 0xe72
0x0000020000091e5a : ret 0xe74
0x00000200000366b2 : ret 0xe75
0x0000020000123b36 : ret 0xe76
0x0000020000023865 : ret 0xe77
0x00000200005ed536 : ret 0xe772
0x000002000010a10e : ret 0xe775
0x000002000059d476 : ret 0xe77c
0x000002000059072a : ret 0xe797
0x0000020000590e3f : ret 0xe7af
0x00000200001ff94a : ret 0xe7d4
0x000002000059cca4 : ret 0xe7e4
0x0000020000593649 : ret 0xe7f3
0x000002000077b547 : ret 0xe7f7
0x00000200004e70e9 : ret 0xe8
0x00000200004fb58c : ret 0xe802
0x000002000002634f : ret 0xe804
0x0000020000650d69 : ret 0xe806
0x000002000000ad0a : ret 0xe808
0x00000200007acbfe : ret 0xe80c
0x000002000049f713 : ret 0xe810
0x0000020000430dda : ret 0xe812
0x00000200005d073e : ret 0xe814
0x00000200001663cf : ret 0xe818
0x00000200001b7e67 : ret 0xe81a
0x0000020000112c6c : ret 0xe820
0x0000020000522e08 : ret 0xe823
0x00000200006503c8 : ret 0xe826
0x00000200000f90e9 : ret 0xe828
0x00000200006af1c5 : ret 0xe82c
0x0000020000649233 : ret 0xe830
0x000002000059660d : ret 0xe837
0x000002000062fcc6 : ret 0xe838
0x000002000060a063 : ret 0xe840
0x0000020000545456 : ret 0xe848
0x000002000041e7d2 : ret 0xe84c
0x00000200003ff53d : ret 0xe850
0x0000020000024e91 : ret 0xe858
0x00000200005970b1 : ret 0xe85d
0x000002000017d14f : ret 0xe870
0x000002000006cb46 : ret 0xe872
0x000002000009da41 : ret 0xe874
0x000002000007f4cc : ret 0xe875
0x00000200000d7dd2 : ret 0xe88
0x0000020000111f91 : ret 0xe883
0x00000200001a588a : ret 0xe892
0x00000200005f9190 : ret 0xe8b8
0x000002000002eecf : ret 0xe8c1
0x00000200006b9b2e : ret 0xe8cb
0x000002000043d09e : ret 0xe8d0
0x000002000002e63e : ret 0xe8d1
0x0000020000162a02 : ret 0xe8e8
0x000002000009a1e2 : ret 0xe8e9
0x000002000043bbfb : ret 0xe8eb
0x00000200004511d1 : ret 0xe8ff
0x000002000011def6 : ret 0xe9
0x0000020000797c8f : ret 0xe901
0x0000020000126191 : ret 0xe902
0x00000200001d1d2a : ret 0xe903
0x0000020000177264 : ret 0xe904
0x00000200000d385b : ret 0xe906
0x00000200000426bd : ret 0xe908
0x00000200005a30bf : ret 0xe90d
0x00000200003e0857 : ret 0xe910
0x000002000018b4c2 : ret 0xe913
0x0000020000172a16 : ret 0xe915
0x00000200005de223 : ret 0xe918
0x000002000017912a : ret 0xe920
0x00000200005a40d4 : ret 0xe934
0x00000200005f1639 : ret 0xe940
0x000002000014ddc1 : ret 0xe955
0x00000200006e514a : ret 0xe958
0x000002000007f364 : ret 0xe972
0x00000200005a83ff : ret 0xe973
0x000002000054905a : ret 0xe974
0x000002000023e079 : ret 0xe975
0x00000200004c3db0 : ret 0xe976
0x00000200005a8784 : ret 0xe977
0x00000200001d4682 : ret 0xe97c
0x00000200005a8cc6 : ret 0xe97e
0x00000200000f8a45 : ret 0xe983
0x00000200005b3a48 : ret 0xe990
0x00000200005a9e1f : ret 0xe9af
0x0000020000679a02 : ret 0xe9c0
0x000002000011c38d : ret 0xe9c1
0x000002000011989e : ret 0xe9c3
0x00000200001b1a4a : ret 0xe9c8
0x00000200003f6557 : ret 0xe9c9
0x0000020000094686 : ret 0xe9eb
0x00000200004246c0 : ret 0xe9fc
0x00000200004246b8 : ret 0xe9fd
0x00000200004246b0 : ret 0xe9fe
0x00000200003db3f6 : ret 0xe9ff
0x000002000045667a : ret 0xea14
0x00000200005ade5e : ret 0xea28
0x00000200006656f0 : ret 0xea3b
0x00000200001601b4 : ret 0xea47
0x00000200005af7d1 : ret 0xea51
0x000002000041eb72 : ret 0xea72
0x0000020000146c0d : ret 0xea75
0x00000200005c208a : ret 0xea7c
0x00000200006cef0a : ret 0xeaa8
0x0000020000161bb1 : ret 0xeab6
0x00000200005c2ce7 : ret 0xeab9
0x00000200000385a0 : ret 0xeac1
0x00000200004c0edd : ret 0xead1
0x000002000021b8f6 : ret 0xead3
0x000002000043ed3b : ret 0xeae9
0x00000200006c8ffa : ret 0xeaf8
0x00000200006c88ba : ret 0xeb00
0x0000020000140901 : ret 0xeb02
0x0000020000209e15 : ret 0xeb03
0x0000020000163fa0 : ret 0xeb05
0x00000200007786fe : ret 0xeb07
0x0000020000080ed9 : ret 0xeb08
0x00000200002103e8 : ret 0xeb0c
0x00000200006c68ca : ret 0xeb0e
0x0000020000214536 : ret 0xeb10
0x000002000021452c : ret 0xeb14
0x00000200001264fb : ret 0xeb18
0x0000020000214518 : ret 0xeb1c
0x000002000016a104 : ret 0xeb20
0x00000200001644a4 : ret 0xeb22
0x000002000068d434 : ret 0xeb24
0x00000200003eda69 : ret 0xeb28
0x00000200005193c6 : ret 0xeb2d
0x000002000050a93a : ret 0xeb32
0x000002000022bb74 : ret 0xeb37
0x0000020000676544 : ret 0xeb38
0x00000200004fca4e : ret 0xeb4
0x00000200001e902a : ret 0xeb46
0x000002000013b2cb : ret 0xeb57
0x000002000020855a : ret 0xeb5b
0x00000200001654f2 : ret 0xeb5f
0x00000200004fc45f : ret 0xeb6
0x00000200005c68e9 : ret 0xeb69
0x000002000007f3d2 : ret 0xeb72
0x0000020000099b62 : ret 0xeb75
0x000002000022002e : ret 0xeb7c
0x00000200000f8db4 : ret 0xeb8
0x00000200005ed924 : ret 0xeb8b
0x00000200001dfd2a : ret 0xeb9f
0x00000200001662b2 : ret 0xeba3
0x00000200001e789a : ret 0xeba9
0x000002000016673a : ret 0xebb0
0x00000200005c98cb : ret 0xebb3
0x000002000049a3b0 : ret 0xebc0
0x000002000019a96a : ret 0xebc2
0x0000020000431264 : ret 0xebc9
0x0000020000547607 : ret 0xebd8
0x00000200000398e7 : ret 0xebe0
0x000002000020759e : ret 0xebe4
0x00000200000c9890 : ret 0xebe9
0x000002000015ff8a : ret 0xebf8
0x0000020000460106 : ret 0xebfe
0x0000020000146833 : ret 0xebff
0x00000200001697ae : ret 0xec3e
0x000002000016a17d : ret 0xec69
0x00000200002202ea : ret 0xec72
0x0000020000219e0e : ret 0xec74
0x00000200001bb755 : ret 0xec75
0x00000200005cf44d : ret 0xec9a
0x000002000042670e : ret 0xece8
0x00000200000fca12 : ret 0xeceb
0x000002000017fe54 : ret 0xecf1
0x000002000016d86e : ret 0xecf6
0x000002000016dae0 : ret 0xed01
0x00000200005d0954 : ret 0xed06
0x00000200001ef2aa : ret 0xed1d
0x000002000052fe82 : ret 0xed1f
0x000002000020ef86 : ret 0xed33
0x00000200005d607a : ret 0xed3a
0x00000200001828db : ret 0xed47
0x000002000069ce6a : ret 0xed53
0x00000200004232ba : ret 0xed59
0x0000020000139928 : ret 0xed72
0x000002000016455e : ret 0xed75
0x0000020000550bc8 : ret 0xed77
0x00000200005d18cc : ret 0xed7d
0x00000200004f8cd4 : ret 0xed9
0x0000020000532caa : ret 0xeda6
0x00000200005df37e : ret 0xedb5
0x00000200005d3b0e : ret 0xedd7
0x00000200000ddfe3 : ret 0xedeb
0x000002000015e79d : ret 0xee45
0x00000200000c68b4 : ret 0xee72
0x0000020000075187 : ret 0xee75
0x00000200005e1b5c : ret 0xee8
0x00000200001f457a : ret 0xee93
0x00000200001895b9 : ret 0xeea8
0x0000020000189935 : ret 0xeeaf
0x000002000016d827 : ret 0xeeb
0x0000020000189ed8 : ret 0xeece
0x00000200005d9503 : ret 0xeed0
0x00000200005838b1 : ret 0xeed1
0x00000200000841ba : ret 0xeeeb
0x00000200001cec5a : ret 0xeef4
0x000002000018a4a3 : ret 0xef00
0x00000200005dabb5 : ret 0xef25
0x00000200001f4e8a : ret 0xef4b
0x00000200000f5f52 : ret 0xef72
0x0000020000099a4e : ret 0xef75
0x00000200005dcfd3 : ret 0xefa7
0x0000020000504e42 : ret 0xefbb
0x000002000049b9e0 : ret 0xefeb
0x00000200005de5bc : ret 0xefef
0x0000020000094f8d : ret 0xf
0x0000020000658ffb : ret 0xf0
0x00000200000783ce : ret 0xf00
0x000002000001ce92 : ret 0xf000
0x000002000020f9f4 : ret 0xf003
0x00000200000055d0 : ret 0xf01
0x00000200004fa6f2 : ret 0xf01a
0x000002000001159a : ret 0xf02
0x0000020000093c79 : ret 0xf024
0x00000200000ade35 : ret 0xf025
0x0000020000042779 : ret 0xf03
0x000002000010fe2a : ret 0xf033
0x000002000016c20a : ret 0xf039
0x000002000061fc1c : ret 0xf03b
0x00000200000a70b8 : ret 0xf04
0x00000200005e12fa : ret 0xf068
0x000002000005605f : ret 0xf07
0x000002000013cf38 : ret 0xf072
0x000002000007466b : ret 0xf074
0x00000200002401f2 : ret 0xf075
0x0000020000704cc2 : ret 0xf07e
0x0000020000003a02 : ret 0xf08
0x00000200000a5910 : ret 0xf0b
0x00000200001941b1 : ret 0xf0b6
0x000002000023ff95 : ret 0xf0c
0x0000020000058fc1 : ret 0xf0c3
0x0000020000415c4a : ret 0xf0c7
0x0000020000194b4b : ret 0xf0d1
0x0000020000195126 : ret 0xf0d7
0x000002000016f64b : ret 0xf0e
0x0000020000191dba : ret 0xf0e6
0x00000200005c6d1e : ret 0xf0e9
0x0000020000042ed3 : ret 0xf0f
0x000002000046e171 : ret 0xf0ff
0x000002000023b57d : ret 0xf1
0x000002000004f0aa : ret 0xf10
0x00000200001279ff : ret 0xf105
0x0000020000195887 : ret 0xf108
0x0000020000491dc4 : ret 0xf11
0x00000200001964bb : ret 0xf11e
0x000002000040e47a : ret 0xf137
0x00000200005e7efe : ret 0xf14a
0x000002000004c6d7 : ret 0xf15
0x00000200000a3c42 : ret 0xf16
0x00000200005d724e : ret 0xf16b
0x00000200001b1cb0 : ret 0xf172
0x0000020000018ad4 : ret 0xf175
0x000002000053ebe6 : ret 0xf176
0x000002000040a392 : ret 0xf178
0x000002000052e792 : ret 0xf18b
0x00000200004f267a : ret 0xf19
0x00000200005e9a78 : ret 0xf19b
0x00000200004b9b90 : ret 0xf1c
0x0000020000160a4a : ret 0xf1c3
0x00000200003e316a : ret 0xf1d
0x0000020000070149 : ret 0xf1e
0x000002000007f5c8 : ret 0xf1f
0x0000020000484e26 : ret 0xf1f7
0x000002000008a009 : ret 0xf20
0x00000200005f0a5f : ret 0xf20b
0x00000200004f11b9 : ret 0xf21
0x00000200000539f7 : ret 0xf21c
0x00000200005ef241 : ret 0xf21f
0x0000020000062f61 : ret 0xf24
0x000002000019c3e8 : ret 0xf246
0x00000200004f0a99 : ret 0xf26
0x00000200003dc132 : ret 0xf262
0x000002000019d576 : ret 0xf267
0x00000200006b4530 : ret 0xf272
0x000002000007f668 : ret 0xf275
0x000002000059358e : ret 0xf27b
0x0000020000171d3c : ret 0xf28b
0x000002000019ecab : ret 0xf28f
0x00000200004f06e5 : ret 0xf29
0x000002000020507a : ret 0xf2a
0x00000200003d654a : ret 0xf2ca
0x00000200001a0e85 : ret 0xf2d5
0x00000200000c6832 : ret 0xf30
0x00000200005804b2 : ret 0xf32b
0x000002000016d49a : ret 0xf34d
0x00000200003cbb7a : ret 0xf360
0x00000200001b2316 : ret 0xf373
0x000002000008da5a : ret 0xf38
0x00000200001a44ad : ret 0xf3a3
0x00000200001a4599 : ret 0xf3a4
0x00000200001a6fa5 : ret 0xf3cd
0x00000200007acc62 : ret 0xf3da
0x0000020000131f9a : ret 0xf3ef
0x00000200000c0e26 : ret 0xf3f
0x0000020000094b45 : ret 0xf40
0x000002000000f86d : ret 0xf41
0x00000200000f6f50 : ret 0xf42
0x00000200001320ca : ret 0xf430
0x0000020000010d53 : ret 0xf44
0x000002000000a51b : ret 0xf45
0x000002000021b199 : ret 0xf46
0x00000200001a90ca : ret 0xf460
0x00000200004fa774 : ret 0xf47
0x00000200000b92b9 : ret 0xf472
0x00000200003d80da : ret 0xf474
0x0000020000013c01 : ret 0xf48
0x00000200005b6e8e : ret 0xf483
0x000002000001de85 : ret 0xf49
0x000002000046107a : ret 0xf494
0x000002000016cb76 : ret 0xf4bd
0x0000020000049100 : ret 0xf4c
0x000002000006ac16 : ret 0xf4d
0x00000200001cf9fa : ret 0xf4e
0x00000200000974e7 : ret 0xf4e9
0x00000200001ab987 : ret 0xf4fb
0x00000200001aba0d : ret 0xf4ff
0x00000200005efe09 : ret 0xf52b
0x00000200001d59aa : ret 0xf53c
0x00000200004ecd9e : ret 0xf54
0x00000200001f82ee : ret 0xf55
0x00000200005f1afa : ret 0xf571
0x00000200000a0a58 : ret 0xf572
0x000002000016aa59 : ret 0xf575
0x000002000018dcea : ret 0xf586
0x00000200005f3919 : ret 0xf5a4
0x000002000050ad52 : ret 0xf5c2
0x000002000060c70a : ret 0xf5df
0x00000200005f59d8 : ret 0xf5f9
0x00000200000ead3b : ret 0xf602
0x00000200004ebb4c : ret 0xf61
0x00000200000d89ca : ret 0xf618
0x000002000006889a : ret 0xf62
0x00000200005f8782 : ret 0xf632
0x0000020000075e99 : ret 0xf633
0x00000200005f8e71 : ret 0xf638
0x0000020000110d4a : ret 0xf63f
0x00000200001977ed : ret 0xf640
0x000002000004726b : ret 0xf641
0x00000200001206be : ret 0xf655
0x0000020000231a2a : ret 0xf66
0x00000200005fb73a : ret 0xf676
0x00000200000f9ca0 : ret 0xf685
0x00000200005b3d1e : ret 0xf68d
0x00000200005fccfa : ret 0xf69f
0x00000200005fdd2a : ret 0xf6dd
0x00000200000cf65b : ret 0xf6eb
0x00000200006f692f : ret 0xf6ff
0x00000200005b828c : ret 0xf713
0x0000020000138fa1 : ret 0xf72
0x0000020000411141 : ret 0xf728
0x00000200001b4dcf : ret 0xf73
0x0000020000018ac5 : ret 0xf74
0x00000200000385e7 : ret 0xf741
0x000002000002846e : ret 0xf748
0x00000200000169ba : ret 0xf749
0x000002000065dc1a : ret 0xf75
0x00000200006e92d6 : ret 0xf766
0x00000200003d01bb : ret 0xf774
0x00000200005bbd1c : ret 0xf788
0x00000200005bc50b : ret 0xf790
0x00000200000f84ac : ret 0xf799
0x00000200007cb516 : ret 0xf7cb
0x00000200001ace42 : ret 0xf7d8
0x00000200001ad22c : ret 0xf7df
0x000002000049b743 : ret 0xf7e8
0x00000200005a99fc : ret 0xf7e9
0x000002000059122a : ret 0xf7ea
0x000002000049a094 : ret 0xf7f
0x0000020000083106 : ret 0xf7f3
0x000002000016489a : ret 0xf7f6
0x0000020000404b97 : ret 0xf7f7
0x00000200001ade90 : ret 0xf7fb
0x0000020000437bd8 : ret 0xf7ff
0x00000200005b9649 : ret 0xf80
0x0000020000623557 : ret 0xf803
0x00000200001279ce : ret 0xf80b
0x00000200005b60d3 : ret 0xf816
0x00000200005913f6 : ret 0xf823
0x0000020000042611 : ret 0xf824
0x00000200000ad3e4 : ret 0xf825
0x00000200000c63ae : ret 0xf83b
0x00000200000e517a : ret 0xf845
0x00000200001b1db3 : ret 0xf851
0x00000200001b2ef7 : ret 0xf87c
0x00000200001b2fda : ret 0xf880
0x000002000002f221 : ret 0xf883
0x00000200005e82b9 : ret 0xf89
0x00000200006647fe : ret 0xf8ba
0x00000200004c1a9d : ret 0xf8c1
0x00000200000032a0 : ret 0xf8d1
0x000002000015f2e6 : ret 0xf8df
0x00000200004e8542 : ret 0xf8e
0x00000200000c6cfa : ret 0xf909
0x0000020000078287 : ret 0xf91
0x00000200001bf21a : ret 0xf937
0x000002000059152f : ret 0xf93b
0x000002000010c960 : ret 0xf983
0x00000200000c4eaa : ret 0xf992
0x00000200000f6b43 : ret 0xf9c1
0x00000200000fa65d : ret 0xf9e9
0x00000200000fecca : ret 0xf9f3
0x000002000017794b : ret 0xf9f4
0x0000020000051ceb : ret 0xfa2b
0x00000200005594ba : ret 0xfa43
0x00000200005b6cba : ret 0xfa45
0x0000020000719341 : ret 0xfa80
0x0000020000439202 : ret 0xfa81
0x00000200001e82b3 : ret 0xfa83
0x000002000017b67a : ret 0xfa86
0x0000020000113429 : ret 0xfa8b
0x0000020000706a1d : ret 0xfaba
0x000002000019ca2a : ret 0xfaec
0x00000200004babfe : ret 0xfb30
0x00000200005ba76a : ret 0xfb41
0x000002000079487a : ret 0xfb42
0x000002000010879a : ret 0xfb61
0x0000020000790c52 : ret 0xfb7e
0x0000020000099871 : ret 0xfb83
0x00000200005f08aa : ret 0xfb8b
0x000002000013078a : ret 0xfb92
0x00000200000190ae : ret 0xfc0
0x0000020000033032 : ret 0xfc3
0x00000200000ab11a : ret 0xfcab
0x0000020000664818 : ret 0xfcba
0x0000020000093c06 : ret 0xfcd
0x0000020000547652 : ret 0xfce8
0x0000020000144432 : ret 0xfd0
0x00000200003d7a62 : ret 0xfd17
0x00000200003d4b66 : ret 0xfd46
0x00000200003e5f5a : ret 0xfd71
0x00000200003fac70 : ret 0xfd8b
0x00000200005a4a65 : ret 0xfd98
0x00000200004e775a : ret 0xfda6
0x00000200007c5f00 : ret 0xfdcd
0x00000200004d53b7 : ret 0xfde9
0x00000200004e0e35 : ret 0xfe0
0x0000020000015c99 : ret 0xfe00
0x00000200007c771e : ret 0xfe1b
0x0000020000091b75 : ret 0xfe4
0x00000200000f3512 : ret 0xfe41
0x00000200000881dd : ret 0xfe83
0x00000200006b23ff : ret 0xfe8b
0x00000200001c8717 : ret 0xfeb
0x000002000015e82a : ret 0xfece
0x00000200007d344a : ret 0xfee4
0x000002000017d38c : ret 0xfee8
0x0000020000116f2f : ret 0xff
0x0000020000032281 : ret 0xff0
0x0000020000068f1c : ret 0xff00
0x0000020000150f55 : ret 0xff02
0x00000200000fea22 : ret 0xff04
0x000002000001c957 : ret 0xff08
0x000002000022b00c : ret 0xff10
0x00000200005f0970 : ret 0xff14
0x00000200004e6594 : ret 0xff2
0x00000200003db660 : ret 0xff24
0x00000200000bd232 : ret 0xff25
0x000002000007d274 : ret 0xff28
0x000002000013c85d : ret 0xff3
0x000002000009ff32 : ret 0xff33
0x0000020000247e95 : ret 0xff38
0x00000200000ad1fa : ret 0xff3b
0x00000200000197df : ret 0xff41
0x0000020000014d0a : ret 0xff48
0x0000020000088332 : ret 0xff49
0x000002000071c85a : ret 0xff50
0x00000200003d59ae : ret 0xff56
0x00000200003d6082 : ret 0xff5a
0x00000200000c6d74 : ret 0xff66
0x000002000009016e : ret 0xff7
0x00000200003d04ec : ret 0xff7f
0x000002000001911d : ret 0xff80
0x00000200007d2a55 : ret 0xff83
0x000002000049a656 : ret 0xff85
0x00000200007c5eed : ret 0xff89
0x00000200007ab26a : ret 0xff8a
0x000002000079362e : ret 0xff8c
0x00000200006f3fe7 : ret 0xff91
0x00000200006dd311 : ret 0xff92
0x0000020000789874 : ret 0xff93
0x0000020000706eea : ret 0xff97
0x0000020000672ae3 : ret 0xff99
0x00000200006b5b16 : ret 0xff9a
0x0000020000661a0a : ret 0xff9b
0x000002000069c1da : ret 0xff9c
0x0000020000150a18 : ret 0xffa
0x000002000068202c : ret 0xffa0
0x0000020000724a4f : ret 0xffa1
0x00000200005e2a5d : ret 0xffa2
0x00000200006826fb : ret 0xffa3
0x00000200000ae92a : ret 0xffa4
0x0000020000601f09 : ret 0xffa5
0x0000020000684027 : ret 0xffa6
0x000002000058da77 : ret 0xffa7
0x0000020000662c56 : ret 0xffa8
0x000002000056950d : ret 0xffa9
0x000002000069c08b : ret 0xffaa
0x00000200005bb785 : ret 0xffab
0x00000200005b0df5 : ret 0xffac
0x000002000066c54c : ret 0xffad
0x0000020000594fb5 : ret 0xffaf
0x000002000054b882 : ret 0xffb0
0x0000020000545aca : ret 0xffb1
0x000002000061c25d : ret 0xffb2
0x000002000071174c : ret 0xffb3
0x00000200004f09cb : ret 0xffb4
0x000002000050c20b : ret 0xffb5
0x000002000057bd7d : ret 0xffb6
0x00000200005db5d8 : ret 0xffb7
0x00000200000c3dbf : ret 0xffb8
0x00000200001c8957 : ret 0xffb9
0x0000020000007986 : ret 0xffba
0x0000020000501e32 : ret 0xffbb
0x000002000044df66 : ret 0xffbc
0x00000200004633a5 : ret 0xffbd
0x0000020000475b49 : ret 0xffbe
0x00000200004338f4 : ret 0xffbf
0x00000200003fe0d3 : ret 0xffc0
0x000002000043a857 : ret 0xffc1
0x0000020000620d2c : ret 0xffc2
0x00000200003c73fa : ret 0xffc3
0x0000020000415bad : ret 0xffc4
0x00000200006a062c : ret 0xffc5
0x000002000047bacc : ret 0xffc6
0x0000020000400bb3 : ret 0xffc7
0x00000200003dc20e : ret 0xffc8
0x0000020000183008 : ret 0xffc9
0x00000200003cc8c6 : ret 0xffca
0x0000020000590d16 : ret 0xffcb
0x0000020000580d13 : ret 0xffcc
0x00000200001bf6ae : ret 0xffcd
0x000002000060b93b : ret 0xffce
0x000002000043f8d9 : ret 0xffcf
0x000002000042ea0e : ret 0xffd0
0x000002000043b673 : ret 0xffd1
0x000002000052179b : ret 0xffd2
0x00000200003e2c71 : ret 0xffd3
0x00000200003eea35 : ret 0xffd4
0x00000200003fb278 : ret 0xffd5
0x00000200003eb5e0 : ret 0xffd6
0x00000200003db5e9 : ret 0xffd7
0x0000020000556fbd : ret 0xffda
0x000002000045b71a : ret 0xffdb
0x00000200003fc18a : ret 0xffdc
0x00000200005424ad : ret 0xffdd
0x000002000067c962 : ret 0xffde
0x000002000010deb6 : ret 0xffdf
0x00000200004f08e1 : ret 0xffe
0x0000020000239bc8 : ret 0xffe0
0x00000200004cff94 : ret 0xffe2
0x00000200001f9b90 : ret 0xffe3
0x00000200001f6653 : ret 0xffe4
0x00000200003fb330 : ret 0xffe5
0x000002000053cf60 : ret 0xffe6
0x000002000005cb86 : ret 0xffe7
0x00000200001886cf : ret 0xffe8
0x0000020000196969 : ret 0xffe9
0x0000020000162476 : ret 0xffea
0x00000200001a7956 : ret 0xffeb
0x000002000017ea35 : ret 0xffec
0x00000200001852b5 : ret 0xffed
0x0000020000189c25 : ret 0xffee
0x000002000018e94f : ret 0xffef
0x0000020000010c30 : ret 0xfff
0x00000200001256f2 : ret 0xfff0
0x0000020000194cb2 : ret 0xfff1
0x000002000012abe6 : ret 0xfff2
0x00000200000e528a : ret 0xfff3
0x00000200000ebc7b : ret 0xfff4
0x00000200000f203a : ret 0xfff5
0x000002000006a965 : ret 0xfff6
0x000002000020fb0a : ret 0xfff7
0x00000200000d0736 : ret 0xfff8
0x0000020000063a95 : ret 0xfff9
0x0000020000058d76 : ret 0xfffa
0x00000200000705a7 : ret 0xfffb
0x00000200000e8020 : ret 0xfffc
0x000002000001ad3c : ret 0xfffd
0x0000020000012c72 : ret 0xfffe
0x000002000002c02f : ret 0xffff
0x000002000000b777 : ret 1
0x0000020000002ab8 : ret 2
0x000002000001451a : ret 3
0x0000020000021075 : ret 4
0x000002000006c10a : ret 5
0x000002000003a656 : ret 6
0x0000020000022e0a : ret 7
0x00000200000477c8 : ret 8
0x000002000005a53a : ret 9
0x0000020000003267 : retf -0x2eb8 ; jmp 0x1ffc28373dc
0x0000020000606bdf : retf -0x2eb8 ; jmp 0x2000322ef53
0x000002000007daa3 : retf -0x3e75 ; cmovg eax, edx ; jmp 0x2000007dab3
0x00000200000d176c : retf -0x3eb8 ; call 0x1ffc230607d
0x00000200000d193c : retf -0x3eb8 ; call 0x1ffc230624d
0x000002000019e15b : retf -0x3eb8 ; call 0x1ffc23d296c
0x000002000020a23c : retf -0x3eb8 ; call 0x1ffc243ea4d
0x000002000051a86f : retf -0x3eb8 ; call 0x1ffc274f080
0x0000020000526937 : retf -0x3eb8 ; call 0x1ffc275b148
0x00000200007a8d81 : retf -0x3eb8 ; call 0x1ffc29dd592
0x00000200000510e4 : retf -0x3eb8 ; jmp 0x20048c79c12
0x0000020000090c1c : retf -0x72b8 ; push rbp ; loopne 0x20000090c69 ; call rbx
0x0000020000521795 : retf -0x74bc ; cli ; call 0x2000024da46
0x00000200004f0e95 : retf -0x7cb8 ; and byte ptr [rax], al ; jmp 0x200004f0e64
0x000002000047f76c : retf -0xe8e ; jmp 0x2000047f50b
0x00000200001bcdad : retf 0x13 ; call r9
0x0000020000439071 : retf 0x16 ; mov rcx, rdi ; call 0x20000061bf9
0x000002000049b9da : retf 0x34a ; add al, 0xc9 ; inc edx ; jmp 0x2000049b9d8
0x0000020000678cd1 : retf 0x48ff ; test eax, eax ; je 0x20000678ce1 ; call rax
0x0000020000441db2 : retf 0x49ff ; mov ecx, edi ; call 0x2000006d288
0x00000200001ed2b8 : retf 0x575 ; mov eax, r10d ; jmp 0x200001ed2ec
0x000002000064da38 : retf 0x64 ; add rcx, rdx ; jmp rcx
0x00000200003fb24b : retf 0x772 ; jmp 0x200003fb273
0x00000200001886c8 : retf ; add al, 0x48 ; mov ecx, esi ; call 0x200000148e7
0x00000200005d90fe : retf ; add al, 0x89 ; pop rsp ; and al, 0x40 ; jmp 0x200004c5408
0x000002000021f2c9 : retf ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000200006e0cec : retf ; add rsp, 0x28 ; jmp qword ptr [r10]
0x00000200006273f3 : retf ; add rsp, 0x40 ; pop rbx ; jmp 0x2000024d009
0x0000020000552baa : retf ; call 0x20000005728
0x00000200006f392f : retf ; call 0x2000000f3ad
0x00000200001d6a2f : retf ; call 0x200000245d8
0x00000200001a85d6 : retf ; call 0x200000248c3
0x0000020000239bc5 : retf ; call 0x20000045ebb
0x00000200000d1a6f : retf ; call 0x2000004dd33
0x0000020000461bbc : retf ; call 0x20000053438
0x000002000042de40 : retf ; call 0x20000056a8c
0x000002000043a968 : retf ; call 0x20000056b83
0x0000020000431b72 : retf ; call 0x2000005c1b4
0x00000200005e0c65 : retf ; call 0x2000005ce73
0x0000020000650cc9 : retf ; call 0x2000005f908
0x0000020000436837 : retf ; call 0x20000061bf4
0x00000200004473dc : retf ; call 0x2000006d284
0x0000020000541166 : retf ; call 0x2000006d768
0x0000020000451331 : retf ; call 0x2000007cdf4
0x00000200007b6f6c : retf ; call 0x20000080448
0x0000020000466037 : retf ; call 0x2000008eed8
0x000002000046d447 : retf ; call 0x2000008f0f8
0x0000020000594fb2 : retf ; call 0x20000091213
0x0000020000463cb2 : retf ; call 0x200000938ec
0x0000020000194caf : retf ; call 0x200000b0f53
0x0000020000501e2f : retf ; call 0x200000be123
0x0000020000222716 : retf ; call 0x200000be963
0x00000200005db854 : retf ; call 0x200000bf6e8
0x00000200004a176a : retf ; call 0x200000ca364
0x00000200004c0224 : retf ; call 0x200000e7214
0x00000200004bd019 : retf ; call 0x200000e7254
0x00000200004bd2a4 : retf ; call 0x200000e7da4
0x00000200004bb36d : retf ; call 0x200000e7e74
0x000002000020bd61 : retf ; call 0x200000e8063
0x00000200000ebe9a : retf ; call 0x200000ec399
0x000002000018242c : retf ; call 0x200000ee693
0x00000200004cbec3 : retf ; call 0x200000eef34
0x000002000018fbcf : retf ; call 0x200000f0885
0x0000020000025c13 : retf ; call 0x200000f0f45
0x00000200001112e4 : retf ; call 0x20000111364
0x00000200006d52b7 : retf ; call 0x20000157548
0x0000020000471a53 : retf ; call 0x20000157888
0x000002000060fbb6 : retf ; call 0x200001579a0
0x000002000058f23e : retf ; call 0x200001b5dec
0x00000200005a2f17 : retf ; call 0x200001c596c
0x00000200005aae0d : retf ; call 0x200001cb88c
0x00000200005ac29f : retf ; call 0x200001dbf3c
0x00000200006636d7 : retf ; call 0x200001ef963
0x00000200005df455 : retf ; call 0x2000020bb6c
0x00000200005df43f : retf ; call 0x2000020bcbc
0x00000200005df86c : retf ; call 0x2000020bce0
0x000002000068eaa4 : retf ; call 0x20000211c37
0x0000020000160221 : retf ; call 0x2000021c48f
0x00000200003d0dc7 : retf ; call 0x2000024d003
0x0000020000623930 : retf ; call 0x2000024d004
0x0000020000202582 : retf ; call 0x2000024d007
0x00000200007ac148 : retf ; call 0x200003d079c
0x00000200003fd493 : retf ; call 0x200003fd4cc
0x00000200003de821 : retf ; call 0x2000040aa43
0x00000200005a69c4 : retf ; call 0x20000422c3b
0x00000200004592c2 : retf ; call 0x20000467020
0x000002000055ae27 : retf ; call 0x2000049e524
0x00000200004e6db5 : retf ; call 0x200004e2fff
0x00000200005a3026 : retf ; call 0x200004ff2cb
0x0000020000513f88 : retf ; call 0x20000513fac
0x0000020000459b8f : retf ; call 0x20000545dcb
0x00000200005f2ac9 : retf ; call 0x2000054ba14
0x0000020000610183 : retf ; call 0x2000056964c
0x000002000060ed32 : retf ; call 0x2000060ebc0
0x00000200003dc3b7 : retf ; call 0x200006686a7
0x0000020000710792 : retf ; call 0x20000710d6c
0x00000200007043d4 : retf ; call 0x20000717897
0x0000020000538eba : retf ; call qword ptr [rax]
0x00000200001e632c : retf ; call qword ptr [rbx]
0x00000200001b9c63 : retf ; call r10
0x000002000015bc61 : retf ; call r11
0x000002000013c442 : retf ; call r14
0x000002000048e074 : retf ; call r15
0x0000020000144b24 : retf ; call r8
0x00000200000239d6 : retf ; call rax
0x00000200007c9d1c : retf ; call rbx
0x00000200001d9340 : retf ; call rdi
0x0000020000431ae5 : retf ; call rsi
0x00000200004acc98 : retf ; cmovb r14, rdi ; jmp 0x200004acc68
0x00000200003e7dd5 : retf ; inc dword ptr [rcx - 0x75] ; or byte ptr [r11], r14b ; call rbx
0x00000200003eaea9 : retf ; jb 0x200003eaeba ; jmp 0x200003eaec5
0x0000020000038147 : retf ; jmp 0x2000003812f
0x000002000019ca81 : retf ; jmp 0x200000c1b06
0x0000020000083453 : retf ; jmp rcx
0x00000200007d2b00 : retf ; lea ecx, dword ptr [rdx + 0x5a] ; call 0x2000000ed36
0x00000200005e2ae0 : retf ; lea ecx, dword ptr [rdx + 0x7e] ; call 0x2000000ed36
0x00000200001e5e9f : retf ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r11]
0x000002000052f6d7 : retf ; lea r8d, dword ptr [rdx + 0x40] ; call 0x20000157888
0x00000200007a8b0f : retf ; lea rdx, qword ptr [rbp - 0x7c] ; call 0x200003d0a70
0x00000200007b93b6 : retf ; lea rdx, qword ptr [rsp + 0x38] ; call rax
0x0000020000443aa5 : retf ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200006c09e1 : retf ; mov dword ptr [rsp + 0x20], esi ; call r10
0x00000200005fcf41 : retf ; mov ebx, 0x4ee80014 ; jmp 0x200005fcf12
0x000002000046188f : retf ; mov ecx, 1 ; call 0x2000008e15d
0x00000200006826f6 : retf ; mov edi, eax ; call 0x200000be965
0x000002000050a2e6 : retf ; mov edi, eax ; call 0x200004265cd
0x0000020000453c16 : retf ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200003fff0f : retf ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x00000200001bab59 : retf ; mov r8, qword ptr [rip + 0x1ee92f] ; call r8
0x00000200006dd04f : retf ; mov r8d, edi ; mov rdx, rsi ; call rax
0x0000020000210957 : retf ; mov r8d, edx ; jmp 0x20000210963
0x00000200006dcfe2 : retf ; mov r8d, esi ; mov rdx, rbp ; call rax
0x00000200006dcb1f : retf ; mov rax, qword ptr [rbp + 0x50] ; jmp 0x200006dcaef
0x00000200001c9abe : retf ; mov rax, qword ptr [rip + 0x1df9ca] ; call rax
0x00000200001bad19 : retf ; mov rax, qword ptr [rip + 0x1ee76f] ; call rax
0x00000200001baca0 : retf ; mov rax, qword ptr [rip + 0x1ee7e8] ; call rax
0x00000200001e62c1 : retf ; mov rdx, qword ptr [rax + 0x28] ; shr rdx, 0xc ; call qword ptr [rbx]
0x00000200005cc542 : retf ; mov rdx, qword ptr [rax + 0xb8] ; call r14
0x000002000071afe4 : retf ; mov rsi, rax ; call qword ptr [rdi]
0x00000200005d8d47 : retf ; or byte ptr [rax], al ; nop ; jmp 0x200004c504a
0x000002000046f9fc : retf ; xor edx, edx ; call 0x2000009e096
0x0000020000232c77 : rol ah, 0x41 ; jle 0x20000232cf3 ; push rax ; loopne 0x20000232c4b ; ret 0x187d
0x0000020000149b6a : rol ah, cl ; add byte ptr [rax], al ; ret
0x00000200004836fa : rol al, 0xe0 ; add al, 0x32 ; ret
0x00000200005dbd22 : rol al, 0xe0 ; add esi, dword ptr [rdx] ; ret
0x00000200004742b9 : rol al, 0xea ; add ecx, dword ptr [rax - 0x75] ; int 0x80
0x0000020000149f6a : rol al, cl ; add byte ptr [rax], al ; ret
0x000002000054bae7 : rol bh, 0xdd ; inc dword ptr [rcx] ; add rsp, 0x28 ; ret
0x00000200007a3d87 : rol bh, 4 ; ret 1
0x00000200005d4f68 : rol bh, 5 ; fcmovbe st(0), st(4) ; call qword ptr [rax]
0x000002000079ccd7 : rol bh, 5 ; ficom word ptr [rdx - 0x48] ; call qword ptr [rbx]
0x000002000014986a : rol bh, cl ; add byte ptr [rax], al ; ret
0x000002000000ef48 : rol bl, 0x41 ; mov eax, ecx ; ret
0x000002000071a9fe : rol bl, 0x48 ; add eax, -8 ; ret
0x000002000068f820 : rol bl, 0x48 ; jmp rax
0x0000020000128b3e : rol bl, 0x48 ; jmp rcx
0x0000020000658d15 : rol bl, 0x48 ; lea eax, dword ptr [rcx - 0x10] ; ret
0x0000020000052849 : rol bl, 0x48 ; lea eax, dword ptr [rip + 0x2d19ee] ; ret
0x00000200006c6f4e : rol bl, 0x48 ; mov eax, dword ptr [rcx + 0x220] ; ret
0x00000200005698fe : rol bl, 0x48 ; mov eax, dword ptr [rcx + 0x708] ; ret
0x0000020000015c66 : rol bl, 0x48 ; mov eax, dword ptr [rip + 0x732629] ; ret
0x000002000013db0b : rol bl, 0x48 ; mov eax, ecx ; ret
0x000002000013b11c : rol bl, 0x48 ; sbb eax, eax ; sbb rax, -1 ; ret
0x000002000004e320 : rol bl, 0x48 ; shr eax, 0x20 ; ret
0x00000200000482e4 : rol bl, 0x49 ; mov eax, eax ; ret
0x00000200006d65db : rol bl, 0x4d ; mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x000002000068bf23 : rol bl, 0x66 ; mov dword ptr [r10], r9d ; mov al, 1 ; ret
0x000002000049759a : rol bl, 0x83 ; ret 0xb80b
0x0000020000052864 : rol bl, 0x83 ; stc ; add dword ptr [rbp - 8], esi ; mov eax, ecx ; ret
0x00000200003f91e2 : rol bl, 0xb8 ; add al, 0 ; add byte ptr [rax], al ; ret
0x000002000012a444 : rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000026820 : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200005332b7 : rol bl, 0xb8 ; add eax, dword ptr [rax] ; add al, al ; ret
0x000002000062c4e8 : rol bl, 0xb8 ; and al, byte ptr [rax] ; add al, al ; ret
0x000002000062c3a4 : rol bl, 0xb8 ; and eax, dword ptr [rax] ; add al, al ; ret
0x000002000062c4f4 : rol bl, 0xb8 ; cmp byte ptr [rax], al ; add al, al ; ret
0x000002000062c491 : rol bl, 0xb8 ; jb 0x2000062c49f ; add al, al ; ret
0x000002000062c417 : rol bl, 0xb8 ; jg 0x2000062c423 ; add al, al ; ret
0x0000020000445772 : rol bl, 0xb8 ; jns 0x2000044577e ; add al, al ; ret
0x00000200004b307f : rol bl, 0xb8 ; jns 0x200004b308b ; add al, al ; ret
0x00000200004b313a : rol bl, 0xb8 ; jns 0x200004b3146 ; add al, al ; ret
0x00000200004b3192 : rol bl, 0xb8 ; jns 0x200004b319e ; add al, al ; ret
0x00000200000d3262 : rol bl, 0xb8 ; sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000062c40b : rol bl, 0xb8 ; test dword ptr [rcx], eax ; add al, al ; ret
0x0000020000009a0d : rol bl, 0xb8 ; xor al, 0 ; add al, al ; ret
0x0000020000009a07 : rol bl, 0xb8 ; xor eax, dword ptr [rax] ; add al, al ; ret
0x000002000049a780 : rol bl, 0xc1 ; call 0x200332c9299
0x00000200001e4b1f : rol bl, 0xc7 ; add eax, 0x13de95 ; ret 0
0x0000020000569795 : rol bl, 0xcc ; mov eax, dword ptr [rcx + 0xc] ; sub eax, dword ptr [rcx + 8] ; ret
0x00000200001579e5 : rol bl, 0xcc ; mov eax, ecx ; ret
0x00000200000bd649 : rol bl, 0xcc ; test rcx, rcx ; jne 0x200000bd65a ; ret
0x0000020000117b87 : rol bl, 0xd ; add byte ptr [rax], al ; add ah, bh ; ret
0x000002000020beb8 : rol bl, 0xf6 ; ret 0x7407
0x00000200000de687 : rol bl, 1 ; lea rax, qword ptr [rip + 0x246df0] ; ret
0x0000020000149c6a : rol bl, cl ; add byte ptr [rax], al ; ret
0x0000020000502ec7 : rol byte ptr [r13 + rcx*4 + 0x46], 1 ; ret 0x44c7
0x000002000013557f : rol byte ptr [r15], 0 ; mov eax, 1 ; ret
0x000002000021b1b8 : rol byte ptr [r9 - 0x75], 0xc0 ; ret
0x00000200000279c2 : rol byte ptr [r9 - 0x75], 1 ; ret 0x8d48
0x0000020000588f3a : rol byte ptr [r9 - 0x75], 1 ; salc ; call rax
0x000002000066a0b6 : rol byte ptr [r9], 1 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x8948
0x000002000024069f : rol byte ptr [rax + 0x48], 0x3b ; ret
0x0000020000139924 : rol byte ptr [rax + 0x48], 0x3b ; ret 0xed72
0x000002000078aabd : rol byte ptr [rax + 0x48], 0x3b ; ret 0xf472
0x00000200001d7fa1 : rol byte ptr [rax + 0x48], 0x83 ; ret
0x0000020000246550 : rol byte ptr [rax + 0x49], 0x3b ; ret
0x0000020000781266 : rol byte ptr [rax + 0x49], 0x3b ; ret 0xf472
0x000002000014eacc : rol byte ptr [rax + 0x75], 0xd0 ; sfence ; ret
0x00000200004fce0b : rol byte ptr [rax + 0xf], 0xb6 ; imul byte ptr [rbx] ; ret 0x53b
0x000002000008d73f : rol byte ptr [rax + rax*8 - 0x74b7f68b], cl ; ret 0x8348
0x0000020000032b90 : rol byte ptr [rax + rax*8 - 0x75befb8c], 0xc0 ; ret
0x00000200000920db : rol byte ptr [rax + rax], 0 ; ret
0x000002000077d872 : rol byte ptr [rax + rax], 1 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000070c064 : rol byte ptr [rax + rax], 1 ; test rax, rax ; je 0x2000070c078 ; jmp rax
0x00000200001b1cac : rol byte ptr [rax + rcx*2], 0x3b ; ret 0xf172
0x00000200000f9c54 : rol byte ptr [rax + rcx*2], 0x83 ; ret 0x4508
0x000002000016605a : rol byte ptr [rax + rcx*2], 0xff ; ret 0x8348
0x0000020000093cd7 : rol byte ptr [rax + rcx*4 + 0x1b], 0x48 ; mov ebx, dword ptr [rsp + 8] ; ret
0x0000020000222132 : rol byte ptr [rax - 0x36fdfc1f], 0x22 ; ret 0xc80a
0x00000200001fc661 : rol byte ptr [rax - 0x49], 1 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000020000067d86 : rol byte ptr [rax - 0x62f0efc6], 0xc0 ; ret
0x00000200004dff8c : rol byte ptr [rax - 0x74b70040], 1 ; ret
0x0000020000600b1e : rol byte ptr [rax - 0x76], 0xcd ; call rsi
0x0000020000535577 : rol byte ptr [rax - 0x7c], cl ; test byte ptr [rdi], 0x95 ; ret 0x6de8
0x0000020000094e2c : rol byte ptr [rax], 0 ; add al, ch ; ret
0x000002000046bf55 : rol byte ptr [rax], 0 ; add al, ch ; shl bh, cl ; ret 0x48ff
0x00000200001d793a : rol byte ptr [rax], 0 ; add bl, ch ; fisttp word ptr [rax - 0x7d] ; ret
0x000002000007e73c : rol byte ptr [rax], 0 ; add bl, ch ; ret
0x00000200001d84c2 : rol byte ptr [rax], 0 ; add byte ptr [rax + 0x23], cl ; ret 0x234c
0x00000200000ef027 : rol byte ptr [rax], 0 ; add byte ptr [rax + rcx*4 - 0x55], al ; ret 0
0x00000200001ce70f : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xccc3
0x000002000054481e : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004cc4fc : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret 0xb0
0x00000200001f58cf : rol byte ptr [rax], 0 ; add byte ptr [rax - 1], cl ; ret
0x00000200004b828e : rol byte ptr [rax], 0 ; add byte ptr [rbp + 0x33], al ; rol byte ptr [rcx - 0x76], cl ; ret
0x0000020000481e2b : rol byte ptr [rax], 0 ; add byte ptr [rbx], bh ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x8844
0x00000200000a78ab : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x23], cl ; ret 0x7989
0x00000200000be21c : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbx ; ret
0x00000200000be775 : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x000002000055ea95 : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200004c39f1 : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rbp ; ret
0x000002000049ad85 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000002000078f04b : rol byte ptr [rax], 0 ; add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x000002000043cbb2 : rol byte ptr [rax], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200000ad063 : rol byte ptr [rax], 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x2b8
0x00000200001496a5 : rol byte ptr [rax], 0 ; add cl, ch ; xchg eax, edx ; leave ; add byte ptr [rax], al ; ret
0x00000200000d47d9 : rol byte ptr [rax], 0 ; add dh, dh ; ret
0x0000020000149f4b : rol byte ptr [rax], 0 ; ret
0x00000200000099fa : rol byte ptr [rax], 0 ; sal byte ptr [rdi + rcx - 0x75], 0xc1 ; ret
0x0000020000460c17 : rol byte ptr [rax], 0x75 ; sub edi, edi ; ret 0xfa83
0x0000020000213fda : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rdi, 4 ; jmp 0x20000213fb0
0x00000200000cc273 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop r14 ; pop rbp ; pop rbx ; ret
0x0000020000031300 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000014b906 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200003cc713 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001f5d59 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000021ff24 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200006363ac : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200001ca03a : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x0000020000151035 : rol byte ptr [rax], 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000004241b : rol byte ptr [rbp + 0x2b], 1 ; ret
0x0000020000404e5b : rol byte ptr [rbp + 0x2b], 1 ; rol dword ptr [rbp - 0x75], cl ; ret 0xb60f
0x0000020000479a08 : rol byte ptr [rbp + 0x32], 0xf6 ; xor edx, edx ; call 0x2000009e099
0x000002000008830f : rol byte ptr [rbp + 0x33], cl ; ror byte ptr [rdi - 0x75], 0xc ; ret 0x854d
0x0000020000530f0b : rol byte ptr [rbp + 0x33], cl ; shr al, 0x44 ; ret
0x000002000022c7e8 : rol byte ptr [rbp + 0x3b], 0xc1 ; jl 0x2000022c7e0 ; xor eax, eax ; ret
0x00000200001bcd1d : rol byte ptr [rbp + 0x3b], 0xd9 ; seta al ; ret
0x0000020000213154 : rol byte ptr [rbp + 0x3b], 1 ; sal byte ptr [rdi + 5], 1 ; sub r8d, r10d ; jmp 0x20000213172
0x00000200004012e0 : rol byte ptr [rbp + 0x3b], cl ; pop rax ; adc byte ptr [rax + rsi - 1], dh ; ret 0x3b41
0x000002000054e442 : rol byte ptr [rbp + 0xf0689c0], 0x95 ; ret
0x000002000024e253 : rol byte ptr [rbp + 0xf], 0x22 ; ret 0x5f6
0x00000200001d4027 : rol byte ptr [rbp + 0xf], 0x22 ; ret 0x8a44
0x00000200005399a0 : rol byte ptr [rbp + 0xf], 0x44 ; ret
0x00000200000baa14 : rol byte ptr [rbp + 0xf], 0x45 ; ret 0x8944
0x00000200001322e9 : rol byte ptr [rbp + 0xf], 0xb7 ; ret
0x00000200003cd2c3 : rol byte ptr [rbp + 0xf], cl ; rol dword ptr [rcx - 0x76], cl ; ret 0xb9c3
0x000002000064feb4 : rol byte ptr [rbp + rcx*4 + 0x40], cl ; test al, 0xe8 ; ret 0xb079
0x00000200005284f9 : rol byte ptr [rbp + rcx*4 + 0x42], cl ; js 0x200005284ef ; jge 0x200005284fc ; ret 0x48ff
0x0000020000502ec8 : rol byte ptr [rbp + rcx*4 + 0x46], 1 ; ret 0x44c7
0x0000020000242fa9 : rol byte ptr [rbp + rcx*4 + 0x59], 1 ; add dword ptr [rcx - 0x7f], ecx ; ret 0xf1
0x000002000066fb28 : rol byte ptr [rbp - 0x74b28b40], cl ; ret 0xc2ff
0x00000200001278a7 : rol byte ptr [rbp - 0x75], 1 ; fisttp word ptr [rbx + 0x3449045] ; ret 0xcf05
0x00000200000d055b : rol byte ptr [rbp - 0x75], 1 ; fisttp word ptr [rcx - 9] ; ror byte ptr [rcx - 0x75], cl ; ret 0x8b41
0x0000020000164aab : rol byte ptr [rbp - 0x75], 1 ; ret
0x00000200005b531c : rol byte ptr [rbp - 0x75], 1 ; ret 0x1b9
0x0000020000084509 : rol byte ptr [rbp - 0x75], 1 ; ror dword ptr [rax - 9], cl ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x00000200000df6dd : rol byte ptr [rbp - 0x75], cl ; ret 0x18b
0x0000020000788034 : rol byte ptr [rbp - 0x75], cl ; ret 0x394c
0x000002000002e499 : rol byte ptr [rbp - 0x75], cl ; ret 0x3b48
0x00000200002492eb : rol byte ptr [rbp - 0x75], cl ; ret 0x894c
0x000002000004c1d2 : rol byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000444587 : rol byte ptr [rbp - 0x75], cl ; ret 0x8d45
0x000002000021c931 : rol byte ptr [rbp - 0x75], cl ; ret 0xbb41
0x0000020000118163 : rol byte ptr [rbp - 0x75], cl ; ret 0xf45
0x000002000016b0bb : rol byte ptr [rbp - 0x77], 0x7d ; add cl, ch ; ret
0x0000020000052434 : rol byte ptr [rbp - 0x77], 1 ; cmp cl, byte ptr [rcx - 0x7d] ; ret 0x4804
0x00000200006d1354 : rol byte ptr [rbp - 0x77], 8 ; ret
0x00000200006f5f5a : rol byte ptr [rbp - 0x77f98a40], 0x1d ; in eax, 0x35 ; ret 0x80ff
0x0000020000605901 : rol byte ptr [rbp - 0x7cfc8b40], 1 ; ret 0xb9f4
0x00000200001d025a : rol byte ptr [rbx + 0x137202fa], 0x8b ; ret 0xd148
0x00000200003ff2ec : rol byte ptr [rbx + 0x33c302c0], 0xc0 ; ret
0x000002000007f3cb : rol byte ptr [rbx + rax*4], 0xc3 ; and byte ptr [rcx + 0x3b], cl ; ret 0xeb72
0x000002000066b02b : rol byte ptr [rbx + rax*4], 0xfa ; adc byte ptr [rdx - 0xf], dh ; xor al, al ; ret
0x00000200001c0e84 : rol byte ptr [rbx + rbp*8], 0xd5 ; mov rax, rdx ; ret
0x00000200003e4fd1 : rol byte ptr [rbx + rcx*4 + 0x44], 0x24 ; cmp byte ptr [rax + 0x2b], cl ; ret 0x8b45
0x00000200003e4735 : rol byte ptr [rbx + rcx*4 + 0x44], 0x24 ; cmp byte ptr [rax + 0x2b], cl ; ret 0xd148
0x000002000015ae06 : rol byte ptr [rbx + rcx*4 + 0x45], 1 ; cmp byte ptr [rdi + rcx - 0x51], al ; ret 0x40b9
0x000002000015c710 : rol byte ptr [rbx + rcx*4 + 0x45], 1 ; sub byte ptr [rdi + rcx - 0x51], al ; ret 0x40b9
0x0000020000494a3b : rol byte ptr [rbx + rcx*4 - 0x20], 0x83 ; ret
0x0000020000620e44 : rol byte ptr [rbx + rcx*4 - 0x20], 1 ; call 0x2000024da47
0x0000020000463f25 : rol byte ptr [rbx + rcx*4 - 0x28], cl ; call 0x20000093ab7
0x0000020000631a58 : rol byte ptr [rbx + rdi + 0x66], 1 ; adc byte ptr [rcx + rcx*2 - 1], dh ; ret 0x8349
0x0000020000120035 : rol byte ptr [rbx - 0x3700fd20], 0xc3 ; xor eax, eax ; ret
0x00000200001eab43 : rol byte ptr [rbx - 0x3df4fe20], cl ; ret
0x00000200006c7468 : rol byte ptr [rbx - 0x3f7c0520], 7 ; ret
0x00000200001f8abc : rol byte ptr [rbx - 0x6df0e107], 0xc0 ; ret
0x00000200000cf96b : rol byte ptr [rbx - 0x72b7c01f], 0x14 ; ret
0x00000200004bead6 : rol byte ptr [rbx - 0x76bee740], 0x42 ; add al, 0xf7 ; ret
0x00000200005a7c30 : rol byte ptr [rbx], 0x23 ; ret 0x3c8d
0x00000200004b1a58 : rol byte ptr [rbx], 0x23 ; ret 0xd803
0x00000200004ca5c6 : rol byte ptr [rbx], 0x83 ; loopne 0x200004ca5cd ; add eax, edx ; ret
0x00000200004ca5c6 : rol byte ptr [rbx], 0x83 ; loopne 0x200004ca5ce ; add eax, edx ; ret
0x0000020000002c0c : rol byte ptr [rbx], 0xeb ; sbb byte ptr [rax - 1], cl ; ret
0x000002000062ecd4 : rol byte ptr [rbx], 0xf ; xchg eax, ebp ; ret 0xf741
0x00000200005d3f8e : rol byte ptr [rbx], cl ; ret 0x44ff
0x00000200005657b4 : rol byte ptr [rcx + 0x1000e2], 1 ; add byte ptr [rbx], dh ; ret 0x589
0x000002000022282c : rol byte ptr [rcx + 0x22], 1 ; ret
0x00000200005ef742 : rol byte ptr [rcx + 0x23], 0xc0 ; or eax, 5 ; ret
0x000002000018b35b : rol byte ptr [rcx + 0x23], 1 ; add al, 0xb ; ret 0x8b41
0x000002000018b2b2 : rol byte ptr [rcx + 0x23], 1 ; add ebx, edx ; loop 0x2000018b2cb ; ret 0x8941
0x000002000018b370 : rol byte ptr [rcx + 0x23], cl ; adc eax, dword ptr [rcx - 0x75] ; ret 0xe2d3
0x0000020000025090 : rol byte ptr [rcx + 0x2b], 0xc2 ; jmp 0x20000025044
0x00000200001d28f0 : rol byte ptr [rcx + 0x38], cl ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc28b
0x000002000049b9d1 : rol byte ptr [rcx + 0x3b], 0xd0 ; jbe 0x2000049b9de ; ret
0x00000200000998a8 : rol byte ptr [rcx + 0x3b], 1 ; ret
0x000002000006f84b : rol byte ptr [rcx + 0x3b], 1 ; ret 0x1c7d
0x00000200000b2a60 : rol byte ptr [rcx + 0x400e2], 1 ; add byte ptr [rbx], dh ; ret 0x8489
0x0000020000409380 : rol byte ptr [rcx + 0x5e], 0x5e ; ret
0x0000020000116f2c : rol byte ptr [rcx + 0x69], cl ; ret 0xff
0x000002000003985d : rol byte ptr [rcx + 0xb], 1 ; add byte ptr [rbx], bh ; ret
0x00000200001add19 : rol byte ptr [rcx + 0xf00e2], 1 ; add byte ptr [rbx], dh ; ret 0x589
0x00000200000846da : rol byte ptr [rcx + 0xf], 0x44 ; ret 0xc13b
0x000002000002e276 : rol byte ptr [rcx + 0xf], 0x45 ; ret 0x4489
0x0000020000445a23 : rol byte ptr [rcx + 0xf], 0x45 ; ret 0x8941
0x00000200004f28f4 : rol byte ptr [rcx + 0xf], 0x99 ; ret
0x000002000068a10e : rol byte ptr [rcx + 0xf], 0xa3 ; ret
0x00000200001260fd : rol byte ptr [rcx + 0xf], 0xb6 ; add cl, byte ptr [rcx - 1] ; ret 0xf41
0x0000020000069fc8 : rol byte ptr [rcx + 0xf], 0xb6 ; ret
0x0000020000064783 : rol byte ptr [rcx + 0xf], 1 ; mov dh, 0x41 ; add eax, dword ptr [rcx + 0x32] ; ret 0x8844
0x00000200004aa1dd : rol byte ptr [rcx + 0xf], 1 ; ret 0x8b48
0x00000200000fcf00 : rol byte ptr [rcx + 0xf], 1 ; stosd dword ptr [rdi], eax ; ret 0xc0ff
0x0000020000481e30 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x8844
0x00000200000edc96 : rol byte ptr [rcx + 0xf], 1 ; xchg eax, edi ; rol dword ptr [rcx - 0x75], -0x3f ; ret
0x00000200006f6376 : rol byte ptr [rcx + 0xf], cl ; ret
0x000002000045136b : rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0x93e8
0x00000200000128f6 : rol byte ptr [rcx + rax*2], 0x8b ; ret 0x8d48
0x000002000007f345 : rol byte ptr [rcx + rcx*2], 0x3b ; ret 0x1b73
0x00000200000c09e2 : rol byte ptr [rcx + rcx*2], 0x83 ; ret 0x4920
0x0000020000166105 : rol byte ptr [rcx + rcx*2], 0xff ; ret 0x8348
0x00000200001d45ea : rol byte ptr [rcx + rcx*4 + 0x5c], 0x24 ; and byte ptr [rbp + 0x2b], al ; ret 0x8b48
0x00000200000864b0 : rol byte ptr [rcx - 0x3f], 0xe8 ; add al, byte ptr [rbp + 0x23] ; ret
0x00000200001fd836 : rol byte ptr [rcx - 0x3f], 0xe8 ; sbb byte ptr [rbp + 0x3b], al ; ret 0x2875
0x00000200000480c2 : rol byte ptr [rcx - 0x40], 0xe8 ; add al, 0x24 ; cmove ebp, dword ptr [rdx] ; ret 0xc041
0x00000200004bb62e : rol byte ptr [rcx - 0x44], 0x22 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200000db2a5 : rol byte ptr [rcx - 0x44], 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x34c
0x00000200000b5c8b : rol byte ptr [rcx - 0x46], 0xff ; add eax, dword ptr [rax] ; add byte ptr [rbp + 0x23], cl ; ret 0x8b48
0x00000200005f5420 : rol byte ptr [rcx - 0x47], 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0x6980
0x00000200007a1c57 : rol byte ptr [rcx - 0x48], 1 ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret
0x000002000043f731 : rol byte ptr [rcx - 0x73], 0x7d ; ret 0x440f
0x000002000010a32b : rol byte ptr [rcx - 0x75], 0x44 ; rcl dword ptr [rax], 0x3b ; ret 0x4c73
0x000002000022781a : rol byte ptr [rcx - 0x75], 0x54 ; ret
0x00000200006c5699 : rol byte ptr [rcx - 0x75], 0x7c ; ret
0x000002000010c95c : rol byte ptr [rcx - 0x75], 0xc ; ret 0xf983
0x0000020000445ac3 : rol byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x18 ; ret
0x0000020000070ca9 : rol byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x28 ; ret
0x000002000021c9a5 : rol byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x38 ; ret
0x000002000012a7bb : rol byte ptr [rcx - 0x75], 0xc0 ; inc qword ptr [rdx + rax*8] ; ret
0x000002000013ddc7 : rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200001cb038 : rol byte ptr [rcx - 0x75], 0xc1 ; add rsp, 0x28 ; ret
0x000002000021cb4d : rol byte ptr [rcx - 0x75], 0xc1 ; ret
0x0000020000533166 : rol byte ptr [rcx - 0x75], 0xc2 ; add rsp, 0x28 ; ret
0x00000200006d6ab9 : rol byte ptr [rcx - 0x75], 0xc2 ; ret
0x00000200001d409b : rol byte ptr [rcx - 0x75], 0xc3 ; add rsp, 0x28 ; ret
0x00000200004b4c21 : rol byte ptr [rcx - 0x75], 1 ; int 0xe8
0x0000020000012ba4 : rol byte ptr [rcx - 0x75], 1 ; ret
0x0000020000128185 : rol byte ptr [rcx - 0x75], 1 ; ret 0x2341
0x0000020000127c76 : rol byte ptr [rcx - 0x75], 1 ; ret 0x344
0x0000020000087fb1 : rol byte ptr [rcx - 0x75], 1 ; ret 0x5eb
0x0000020000045240 : rol byte ptr [rcx - 0x75], 1 ; ret 0x8348
0x00000200000279c3 : rol byte ptr [rcx - 0x75], 1 ; ret 0x8d48
0x00000200001278e1 : rol byte ptr [rcx - 0x75], 1 ; ret 0xc8c1
0x0000020000412481 : rol byte ptr [rcx - 0x75], 1 ; ret 0xe083
0x000002000002e63b : rol byte ptr [rcx - 0x75], 1 ; ret 0xe8d1
0x0000020000007a13 : rol byte ptr [rcx - 0x75], 1 ; ret 0xffba
0x0000020000588f3b : rol byte ptr [rcx - 0x75], 1 ; salc ; call rax
0x00000200004dbed8 : rol byte ptr [rcx - 0x75], 1 ; test dword ptr [rax + 0x3000000], ebx ; ret 0x9489
0x000002000002678f : rol byte ptr [rcx - 0x75], cl ; ret
0x00000200006e9300 : rol byte ptr [rcx - 0x75], cl ; ret 0x2366
0x000002000070fb9f : rol byte ptr [rcx - 0x75], cl ; ret 0x40c3
0x0000020000453101 : rol byte ptr [rcx - 0x75], cl ; ret 0x4589
0x0000020000535a48 : rol byte ptr [rcx - 0x75], cl ; ret 0x8348
0x000002000048a3cc : rol byte ptr [rcx - 0x75], cl ; ret 0x8948
0x0000020000484e23 : rol byte ptr [rcx - 0x75], cl ; ret 0xf1f7
0x0000020000401fda : rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x0000020000404b94 : rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x00000200000fa65a : rol byte ptr [rcx - 0x75], cl ; ret 0xf9e9
0x00000200001618cd : rol byte ptr [rcx - 0x75], cl ; sal bh, 0xf1 ; ret
0x00000200001cba35 : rol byte ptr [rcx - 0x76], 0xc0 ; ret
0x00000200003f75ab : rol byte ptr [rcx - 0x76], 1 ; ret 0x8348
0x00000200004b8294 : rol byte ptr [rcx - 0x76], cl ; ret
0x00000200004373f3 : rol byte ptr [rcx - 0x77], 0x41 ; add al, 0xe8 ; ret
0x000002000040b2f3 : rol byte ptr [rcx - 0x77], 0x46 ; adc al, ch ; ret 0xffd4
0x000002000014c8b2 : rol byte ptr [rcx - 0x77], 1 ; adc al, byte ptr [rcx - 0x7d] ; ret
0x00000200007cd78d : rol byte ptr [rcx - 0x77], 4 ; mov ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x000002000022d99b : rol byte ptr [rcx - 0x77], 9 ; ret
0x000002000056997c : rol byte ptr [rcx - 0x78], 8 ; mov byte ptr [r9], al ; ret
0x0000020000109a59 : rol byte ptr [rcx - 0x7c], 1 ; ret 0x840f
0x000002000010acdb : rol byte ptr [rcx - 0x7c], 1 ; ret 0x850f
0x000002000001c95a : rol byte ptr [rcx - 0x7d], 0xc3 ; or byte ptr [rbx], bh ; ret
0x00000200001e4b78 : rol byte ptr [rcx - 0x7d], 0xf8 ; xor dh, byte ptr [rdx - 0x31] ; xor eax, eax ; ret
0x00000200005f1fb7 : rol byte ptr [rcx - 0x7d], 1 ; ret 0x41f2
0x00000200007786c1 : rol byte ptr [rcx - 0x7d], 1 ; ret 0x4541
0x000002000054195c : rol byte ptr [rcx - 0x7d], 1 ; ret 0x75ff
0x00000200004ddb3f : rol byte ptr [rcx - 0xa], cl ; ret 0xf03
0x00000200006ab08c : rol byte ptr [rcx - 1], 0 ; ret
0x00000200000338f4 : rol byte ptr [rcx - 1], 1 ; ret
0x0000020000049ee9 : rol byte ptr [rcx - 1], 1 ; ret 0x8341
0x00000200006dfe48 : rol byte ptr [rcx - 1], cl ; ret
0x00000200004290cb : rol byte ptr [rcx - 1], cl ; ret 0x8844
0x000002000066fd54 : rol byte ptr [rcx - 1], cl ; ror dword ptr [rax - 0x77], 0xc ; ret
0x00000200000a8773 : rol byte ptr [rcx], 0 ; add byte ptr [rcx - 0xa], al ; ret
0x00000200004a69af : rol byte ptr [rcx], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200004b36c5 : rol byte ptr [rcx], 0 ; add dh, dh ; ret 0x7401
0x0000020000076cb6 : rol byte ptr [rcx], 0x75 ; sub dword ptr [rdi], ecx ; mov bh, 0x51 ; add dh, dh ; ret 0x7501
0x00000200001a272c : rol byte ptr [rcx], 0xf ; xchg eax, ebp ; ret 0xf640
0x000002000066a0b7 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x8948
0x00000200006ff489 : rol byte ptr [rdi + 0x2dcac05], 0 ; ret
0x0000020000090ac2 : rol byte ptr [rdi + rcx + 0x22], 0xc0 ; add rsp, 0x28 ; ret
0x000002000011ef60 : rol byte ptr [rdi + rcx + 0x22], 0xc0 ; ret
0x0000020000201b74 : rol byte ptr [rdi + rcx + 0x22], cl ; ret 0x8d48
0x000002000001f69d : rol byte ptr [rdi + rcx + 0x42], 1 ; ret 0x548
0x0000020000185770 : rol byte ptr [rdi + rcx + 0x42], 1 ; ret 0x8b41
0x00000200001b28c9 : rol byte ptr [rdi + rcx + 0x42], 1 ; ret 0x8d4a
0x00000200006bc26c : rol byte ptr [rdi + rcx + 0x42], 1 ; ret 0xce3b
0x0000020000087fad : rol byte ptr [rdi + rcx + 0x44], 1 ; rol byte ptr [rcx - 0x75], 1 ; ret 0x5eb
0x0000020000181b4f : rol byte ptr [rdi + rcx - 0x49], 0x44 ; ret
0x00000200002103e3 : rol byte ptr [rdi + rcx - 0x49], 0x44 ; ret 0xeb0c
0x0000020000418675 : rol byte ptr [rdi + rcx - 0x49], 0x51 ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4909
0x00000200003fa756 : rol byte ptr [rdi + rcx - 0x49], 1 ; ret 0xa0eb
0x000002000058900e : rol byte ptr [rdi + rcx - 0x49], 1 ; ret 0xb0e9
0x00000200004c8e49 : rol byte ptr [rdi + rcx], 0x95 ; ret 0xba0f
0x0000020000783a8d : rol byte ptr [rdi], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000135580 : rol byte ptr [rdi], 0 ; mov eax, 1 ; ret
0x00000200001b6184 : rol byte ptr [rdi], 0x23 ; ret 0x4489
0x000002000070ac6e : rol byte ptr [rdi], 0x75 ; jmp 0x1ff8bb9be6a
0x00000200006c746d : rol byte ptr [rdi], 0xc3 ; mov eax, 6 ; ret
0x000002000000838d : rol byte ptr [rdi], 1 ; add byte ptr [rax], al ; ret
0x00000200002027e9 : rol byte ptr [rdx + rcx*4 - 0x40], 0x8b ; ret 0x189
0x000002000079d664 : rol byte ptr [rdx + rdx*4 + 0x484d8bff], 0xff ; ret
0x000002000003de8e : rol byte ptr [rdx + rdx*8 - 0x7e75e58b], cl ; ret 0
0x00000200005696d7 : rol byte ptr [rdx - 0x75], 0x44 ; or byte ptr [rax], bl ; sub eax, edx ; ret
0x000002000013adc0 : rol byte ptr [rdx - 0x75], 0x44 ; ret
0x0000020000237b7e : rol byte ptr [rdx - 0x76], 0x4c ; ret
0x00000200000d1797 : rol byte ptr [rdx], 0 ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x00000200005352a4 : rol byte ptr [rdx], 0x48 ; add esp, 0x28 ; ret
0x0000020000080e7c : rol byte ptr [rdx], 0x48 ; lea eax, dword ptr [rcx + rax*4] ; ret
0x00000200002119d5 : rol byte ptr [rdx], 0x48 ; mov dword ptr [rcx + 0x28], eax ; mov al, 1 ; ret
0x0000020000494b59 : rol byte ptr [rdx], 0x48 ; shl eax, 4 ; add rax, rcx ; ret
0x000002000005f92f : rol byte ptr [rdx], 0x66 ; mov dword ptr [rcx + 2], eax ; ret
0x000002000000969b : rol byte ptr [rdx], 0x66 ; mov dword ptr [rcx + 2], eax ; xor eax, eax ; ret
0x00000200006e45c8 : rol byte ptr [rdx], 0x75 ; add ecx, dword ptr [rax - 0x75] ; ret
0x0000020000248ff6 : rol byte ptr [rdx], 0x8d ; add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000249016
0x0000020000249238 : rol byte ptr [rdx], 0x8d ; add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000249258
0x00000200004198fe : rol byte ptr [rdx], 0xc1 ; ret 0x4108
0x00000200003ff2ee : rol byte ptr [rdx], 0xc3 ; xor eax, eax ; ret
0x00000200001a2762 : rol byte ptr [rdx], 0xf ; xchg eax, ebp ; ret 0xf640
0x00000200004334f8 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000682778 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000200004636c8 : rol byte ptr [rdx], 1 ; ret
0x0000020000246542 : rol byte ptr [rip + 0x3b4d0000], 1 ; ret
0x00000200004f3ecb : rol byte ptr [rip + 0x49c10348], 0x3b ; ret 0x870f
0x00000200001e7b9f : rol byte ptr [rip - 0x72b606d5], 0x14 ; ret
0x0000020000145fcc : rol byte ptr [rip - 0x74b80000], 1 ; ret
0x0000020000244626 : rol byte ptr [rip - 0x74b80000], 1 ; ret 0x2eb
0x000002000053327a : rol byte ptr [rsi], 0 ; add al, al ; call 0x1ffc3545690
0x0000020000139d10 : rol byte ptr [rsi], 0 ; add bh, ch ; ret
0x0000020000139d07 : rol byte ptr [rsi], 0 ; add byte ptr [rax], dl ; ret
0x000002000001a100 : rol byte ptr [rsi], 0 ; add byte ptr [rbx], bh ; ret
0x000002000077f4da : rol byte ptr [rsi], 0 ; add byte ptr [rbx], ch ; ret
0x000002000008e056 : rol byte ptr [rsi], 0 ; add byte ptr [rcx + rax], ah ; ret
0x0000020000596929 : rol byte ptr [rsi], 0 ; add byte ptr [rcx - 1], al ; ret
0x00000200000dddac : rol byte ptr [rsi], 0 ; add dh, dh ; ret 0x7502
0x00000200001d24dd : rol byte ptr [rsp + rax*2], 0x3b ; ret 0xef72
0x000002000001053c : rol byte ptr [rsp + rax*4 - 0x40], 0x74 ; ret 0x8b4d
0x0000020000149a6a : rol ch, cl ; add byte ptr [rax], al ; ret
0x000002000046be93 : rol cl, 0xe0 ; adc dh, byte ptr [rbx] ; ret
0x00000200004a85d7 : rol cl, 0xe0 ; add esi, dword ptr [rbx] ; ret 0xe083
0x00000200004930f8 : rol cl, 0xe8 ; or dword ptr [rbx], esi ; sal byte ptr [rbx], cl ; ret
0x000002000069f352 : rol cl, 1 ; jmp 0x1ffce2c5c6e
0x000002000007f525 : rol cl, 1 ; rcl byte ptr [rcx + rax*2], 3 ; ret 0xc141
0x0000020000149e6a : rol cl, cl ; add byte ptr [rax], al ; ret
0x00000200004d9deb : rol dh, 0x44 ; and al, 0x58 ; add esi, esi ; ret
0x000002000070d63a : rol dh, cl ; add al, 0 ; add rsp, 0x68 ; ret
0x000002000014996a : rol dh, cl ; add byte ptr [rax], al ; ret
0x0000020000149d6a : rol dl, cl ; add byte ptr [rax], al ; ret
0x00000200001cba31 : rol dword ptr [r10 + rcx*4 - 0x40], 0x41 ; mov al, al ; ret
0x000002000043bd0f : rol dword ptr [r13 - 0x75], 1 ; ret 0x8348
0x0000020000052be6 : rol dword ptr [r9 - 0x75], 1 ; ret 0x8348
0x00000200001b3f1c : rol dword ptr [r9 - 0x77], 0x40 ; pop rsp ; ret
0x000002000014e9b9 : rol dword ptr [rax + 0x48000000], 0xf ; ret
0x000002000007f308 : rol dword ptr [rax + 0x77501f9], -1 ; ret
0x00000200004b3df7 : rol dword ptr [rax + 0xb], 0 ; add bl, ch ; ret 0x19b8
0x00000200006dcf27 : rol dword ptr [rax + rcx*2], 0x63 ; ret 0x5489
0x00000200006336e5 : rol dword ptr [rax + rcx*2], 0x63 ; ret 0x5589
0x000002000013b160 : rol dword ptr [rax + rdi + 0x1a], 0x75 ; add al, 0x48 ; mov eax, ecx ; ret
0x000002000011615f : rol dword ptr [rax - 0x3e75fe1f], 1 ; ret
0x0000020000440d3d : rol dword ptr [rax - 0x74b7ffea], 1 ; ret
0x000002000014c634 : rol dword ptr [rax - 0x76], -0x3a ; add rsp, 0x30 ; pop rsi ; ret
0x000002000021174e : rol dword ptr [rax], -1 ; add byte ptr [rax], al ; setbe al ; ret
0x00000200003db291 : rol dword ptr [rax], 0 ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; pop rbp ; ret 0x8bff
0x00000200001496c5 : rol dword ptr [rax], 0 ; add cl, ch ; jb 0x2000014969e ; add byte ptr [rax], al ; ret
0x0000020000149e4b : rol dword ptr [rax], 0 ; ret
0x000002000016f6d7 : rol dword ptr [rax], 0x46 ; ret
0x0000020000664863 : rol dword ptr [rax], 0x75 ; or edi, edi ; ret 0xfa83
0x000002000009dc0d : rol dword ptr [rax], 7 ; add byte ptr [rax], al ; jne 0x2000009dc37 ; ret
0x0000020000075f4b : rol dword ptr [rbp + 0x10], 3 ; ret
0x0000020000075e95 : rol dword ptr [rbp + 0x10], 3 ; ret 0xf633
0x00000200006d3683 : rol dword ptr [rbp + 0x23], 1 ; sal dword ptr [rdx + rcx - 0x75], 1 ; ret 0x2341
0x000002000000ef42 : rol dword ptr [rbp + 0x33037510], -0x40 ; ret
0x00000200001fd352 : rol dword ptr [rbp + 0x33], 1 ; leave ; mov eax, r9d ; ret
0x000002000070a2c3 : rol dword ptr [rbp + 0x3b], -0x36 ; jb 0x2000070a2c0 ; xor eax, eax ; ret
0x0000020000438ede : rol dword ptr [rbp + 0x440f41c0], -0x40 ; ret
0x000002000069f398 : rol dword ptr [rbp + 0x69], cl ; ret 0x4e6d
0x00000200004a451c : rol dword ptr [rbp + 0xa4], 3 ; ret
0x00000200001e3429 : rol dword ptr [rbp + 0xf], 0x22 ; ret
0x0000020000499908 : rol dword ptr [rbp + 0xf], 0x22 ; ret 0x4865
0x0000020000231cc7 : rol dword ptr [rbp + 0xf], 1 ; cmp bl, cl ; ret 0xf66
0x000002000043bd0c : rol dword ptr [rbp + 0xf], 1 ; rol dword ptr [r13 - 0x75], 1 ; ret 0x8348
0x0000020000116ffe : rol dword ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc68b
0x000002000021f099 : rol dword ptr [rbp + 4], 3 ; ret 0x2075
0x000002000016bd57 : rol dword ptr [rbp - 0x30], 0x3b ; ret
0x000002000042d705 : rol dword ptr [rbp - 0x3f6bf036], 1 ; ret
0x00000200003f40a5 : rol dword ptr [rbp - 0x73], 0x4d ; add dword ptr [rbx], esp ; ret 0xc23b
0x00000200000cb1e6 : rol dword ptr [rbp - 0x75], 1 ; fimul word ptr [rax - 9] ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x00000200001e409c : rol dword ptr [rbp - 0x75], 1 ; ret 0x3b48
0x000002000043bd10 : rol dword ptr [rbp - 0x75], 1 ; ret 0x8348
0x000002000008e608 : rol dword ptr [rbp - 0x75], 1 ; ror dword ptr [rax - 9], cl ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x00000200005cf79c : rol dword ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000404e5e : rol dword ptr [rbp - 0x75], cl ; ret 0xb60f
0x000002000012f257 : rol dword ptr [rbp - 0x78], 8 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000022d1db : rol dword ptr [rbx + 0x18], 3 ; ret 0xc23b
0x00000200003e4768 : rol dword ptr [rbx + 0x34803e3], cl ; ret 0x8b48
0x000002000068829c : rol dword ptr [rbx + 0xe7208f8], -1 ; ret
0x000002000021f0a7 : rol dword ptr [rbx + 4], 3 ; ret 0x675
0x000002000013b5a9 : rol dword ptr [rbx + rbp - 0x3f], 1 ; mov eax, r8d ; ret
0x0000020000116f22 : rol dword ptr [rbx + rdi - 0x32], 0x72 ; ret 0x8b41
0x000002000013bf8a : rol dword ptr [rbx - 0x35c40036], 0xf ; ret 0x6348
0x000002000069013b : rol dword ptr [rbx - 0x73], 0xc ; or eax, dword ptr [rcx + 3] ; ret
0x00000200000424bd : rol dword ptr [rbx - 0x74b7f020], 0x4c ; ret
0x0000020000214ec2 : rol dword ptr [rbx - 0xb7c01e], 1 ; ret 0xc148
0x000002000071cfab : rol dword ptr [rbx - 1], 1 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000417c47 : rol dword ptr [rbx], -0x7d ; loope 0x20000417c51 ; add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x000002000007c774 : rol dword ptr [rbx], 0x48 ; cmove eax, ecx ; ret
0x000002000014226c : rol dword ptr [rbx], cl ; ret 0x8d48
0x00000200006210bb : rol dword ptr [rcx + 0x10], 3 ; ret
0x0000020000075e79 : rol dword ptr [rcx + 0x158], 3 ; ret 0x813b
0x000002000007bb17 : rol dword ptr [rcx + 0x18], 0x48 ; sub eax, 1 ; jle 0x2000007bb2a ; ret
0x000002000062111e : rol dword ptr [rcx + 0x18], 3 ; ret
0x000002000062281c : rol dword ptr [rcx + 0x23], -0x29 ; shl edx, 0xc ; or r8d, edx ; jmp 0x20000622849
0x000002000007d513 : rol dword ptr [rcx + 0x23], 1 ; ror byte ptr [rdi], 1 ; stosd dword ptr [rdi], eax ; ret 0x3366
0x00000200003e499d : rol dword ptr [rcx + 0x2b], -0x40 ; ret
0x00000200004c07d9 : rol dword ptr [rcx + 0x2b], 1 ; ret 0x2b44
0x000002000016fcc0 : rol dword ptr [rcx + 0x2b], 1 ; ret 0xc88a
0x00000200003e44e6 : rol dword ptr [rcx + 0x33], -0x3e ; ret
0x000002000002deec : rol dword ptr [rcx + 0x3b], -0x3f ; sete al ; ret
0x00000200001b39c5 : rol dword ptr [rcx + 0x3b], 1 ; ret
0x000002000040fe65 : rol dword ptr [rcx + 0x3b], cl ; ret 0xd77
0x00000200005b9603 : rol dword ptr [rcx + 0x3b], cl ; ret 0xf44
0x000002000077868f : rol dword ptr [rcx + 0x41], -0x75 ; ret
0x000002000003eaac : rol dword ptr [rcx + 0x68], 3 ; ret
0x0000020000166552 : rol dword ptr [rcx + 0x6fc], 3 ; ret
0x0000020000706ebd : rol dword ptr [rcx + 0xa0], 0x33 ; imul byte ptr [rbx] ; ret 0x4779
0x0000020000706d93 : rol dword ptr [rcx + 0xbc], 3 ; ret 0x8445
0x000002000049fe88 : rol dword ptr [rcx + 0xc], 3 ; ret
0x000002000060efbd : rol dword ptr [rcx + 0xf], -0x49 ; ret 0x8d49
0x00000200007158ee : rol dword ptr [rcx + 0xf], 0x28 ; xor byte ptr [r8 + 0x2b], r9b ; ret 0xd148
0x000002000008e802 : rol dword ptr [rcx + 0xf], 0x44 ; ret 0x3b48
0x0000020000012790 : rol dword ptr [rcx + 0xf], 0x44 ; ret 0x4589
0x00000200003e4a26 : rol dword ptr [rcx + 3], -0x3f ; ret
0x000002000010c983 : rol dword ptr [rcx + 3], 1 ; salc ; add r8d, edx ; jmp 0x2000010c96c
0x000002000008824c : rol dword ptr [rcx + rcx*2], -0x7d ; ret 0x4408
0x00000200007d197e : rol dword ptr [rcx + rcx*2], -0x7d ; ret 0x6602
0x000002000003870a : rol dword ptr [rcx + rcx*4 + 0x13], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000017269 : rol dword ptr [rcx - 0x45], 7 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200005eb933 : rol dword ptr [rcx - 0x47], 4 ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x3b41
0x000002000044d728 : rol dword ptr [rcx - 0x73], 0x40 ; inc dword ptr [rcx - 0x7b] ; ret 0x850f
0x000002000078299d : rol dword ptr [rcx - 0x73], 0x47 ; xor byte ptr [rbx], al ; ret 0x3b41
0x000002000023732c : rol dword ptr [rcx - 0x75], -0x3e ; jmp 0x20000237337
0x00000200000edc9a : rol dword ptr [rcx - 0x75], -0x3f ; ret
0x00000200000f8ac3 : rol dword ptr [rcx - 0x75], -0x40 ; add rsp, 0x38 ; ret
0x00000200000fd1ab : rol dword ptr [rcx - 0x75], -0x40 ; ret
0x00000200000c4694 : rol dword ptr [rcx - 0x75], 1 ; or byte ptr [r8 + 0x23], cl ; ret
0x0000020000045259 : rol dword ptr [rcx - 0x75], 1 ; ret
0x00000200003e4cbb : rol dword ptr [rcx - 0x75], 1 ; ret 0x48c3
0x000002000003dea8 : rol dword ptr [rcx - 0x75], 1 ; ret 0x49c3
0x0000020000052be7 : rol dword ptr [rcx - 0x75], 1 ; ret 0x8348
0x00000200001b1bd3 : rol dword ptr [rcx - 0x75], cl ; ret 0x3b49
0x00000200001c82f9 : rol dword ptr [rcx - 0x75], cl ; ret 0x8b48
0x000002000020b1f0 : rol dword ptr [rcx - 0x76], -0x40 ; ret
0x00000200006b23ba : rol dword ptr [rcx - 0x76], 1 ; add ah, byte ptr [rdx] ; ret
0x00000200003cd2c7 : rol dword ptr [rcx - 0x76], cl ; ret 0xb9c3
0x0000020000407acb : rol dword ptr [rcx - 0x77], 0x10 ; ret
0x00000200001b3f1d : rol dword ptr [rcx - 0x77], 0x40 ; pop rsp ; ret
0x00000200001341a3 : rol dword ptr [rcx - 0x77], cl ; and byte ptr [rcx - 1], al ; ret 0x894d
0x00000200001d842a : rol dword ptr [rcx - 0x7c], 1 ; ret
0x000002000013facb : rol dword ptr [rcx - 0x7f8037], 1 ; jmp qword ptr [rbx]
0x0000020000125419 : rol dword ptr [rcx - 0x80], 1 ; ret 0x8b20
0x00000200005331a2 : rol dword ptr [rcx - 0xa], cl ; ret
0x00000200001b25ea : rol dword ptr [rcx - 1], 1 ; ret 0x8348
0x000002000020b886 : rol dword ptr [rcx - 1], cl ; push rbx ; and byte ptr [rax - 0x75], cl ; ret
0x0000020000782f53 : rol dword ptr [rcx], 0 ; add byte ptr [rcx + 0x3b], cl ; ret
0x000002000001d72d : rol dword ptr [rcx], 0 ; add byte ptr [rcx + 3], cl ; ret
0x000002000014b6c5 : rol dword ptr [rcx], 0 ; add cl, ch ; jb 0x2000014b67e ; add byte ptr [rax], al ; ret
0x00000200004d16a2 : rol dword ptr [rcx], 0x74 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200003ee0fe : rol dword ptr [rcx], 0x75 ; mov qword ptr [r9], r10 ; ret
0x00000200001ff106 : rol dword ptr [rcx], 0x75 ; or dword ptr [rax + rdi + 0x25], eax ; ret
0x000002000002a876 : rol dword ptr [rcx], 0x75 ; sbb dword ptr [rax - 0x77], ecx ; sbb al, byte ptr [rcx - 0x75] ; ret
0x00000200007b6b50 : rol dword ptr [rcx], 0xf ; test dword ptr [rcx - 0x74fffeaf], ecx ; ret
0x000002000022660b : rol dword ptr [rdi + 0x3b0], 3 ; ret
0x00000200001d40d4 : rol dword ptr [rdi + rcx + 0x20], 1 ; ret
0x000002000003b7a1 : rol dword ptr [rdi + rcx + 0x22], -0x40 ; ret
0x00000200000c5609 : rol dword ptr [rdi + rcx + 0x22], cl ; ret 0xc085
0x00000200005b95ff : rol dword ptr [rdi + rcx + 0x44], 1 ; rol dword ptr [rcx + 0x3b], cl ; ret 0xf44
0x00000200006aa194 : rol dword ptr [rdi + rcx - 0x49], 1 ; ret
0x00000200004b58ac : rol dword ptr [rdi + rcx - 0x49], cl ; ret
0x000002000017990e : rol dword ptr [rdi + rcx - 0x4a], 1 ; rol byte ptr [rcx - 0x75], 1 ; ret
0x0000020000085373 : rol dword ptr [rdx + 0x10], 0x48 ; add esp, 0x38 ; ret
0x00000200001cba32 : rol dword ptr [rdx + rcx*4 - 0x40], 0x41 ; mov al, al ; ret
0x0000020000007a81 : rol dword ptr [rdx - 0x73], 4 ; add dword ptr [rbx], edi ; ret
0x0000020000530d3a : rol dword ptr [rdx], -0x15 ; call 0x20033160efb
0x000002000041aff7 : rol dword ptr [rdx], -0x3f ; ret 0x4106
0x00000200005abd94 : rol dword ptr [rdx], -0x75 ; ret 0xffb9
0x0000020000160c20 : rol dword ptr [rdx], -0x78 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x000002000013d336 : rol dword ptr [rdx], 0x48 ; cmp eax, edx ; jb 0x2000013d332 ; ret
0x0000020000563b60 : rol dword ptr [rdx], 0x48 ; mov dword ptr [rdx + 0x28], ecx ; ret
0x0000020000144741 : rol dword ptr [rdx], 0x48 ; mov dword ptr [rdx], ecx ; add rsp, 0x38 ; ret
0x0000020000401af4 : rol dword ptr [rdx], 0x48 ; sub edx, 1 ; jne 0x20000401af4 ; ret
0x0000020000696e48 : rol dword ptr [rdx], 0x49 ; cmp ecx, edx ; jb 0x20000696e25 ; mov al, 1 ; ret
0x000002000013bbe2 : rol dword ptr [rdx], 0x4d ; test eax, eax ; jne 0x2000013bbdb ; ret
0x00000200001a6fb9 : rol dword ptr [rdx], 0x74 ; adc byte ptr [rax - 0x7d], cl ; jmp qword ptr [rcx]
0x00000200001a7c95 : rol dword ptr [rdx], 0x74 ; or cl, byte ptr [rax - 0x7d] ; jmp qword ptr [rcx]
0x000002000001dce5 : rol dword ptr [rdx], 0xf ; xchg eax, ebp ; ret 0xc3f6
0x0000020000527d99 : rol dword ptr [rdx], cl ; ret 0x45ff
0x00000200001fc189 : rol dword ptr [rip + 0x107895], 3 ; ret 0xc23b
0x00000200004ae02f : rol dword ptr [rip + 0x29a27b], 3 ; ret
0x000002000000e0d3 : rol dword ptr [rip + 0x32e6ff], 3 ; ret
0x00000200006768b3 : rol dword ptr [rip - 0x3366e9], 0x3b ; ret 0x2eeb
0x00000200004ebc3a : rol dword ptr [rsi + 0x190], 3 ; ret 0x8948
0x00000200004e8d59 : rol dword ptr [rsi + 0x190], 3 ; ret 0x8b48
0x0000020000165ad0 : rol dword ptr [rsi + 0x33e8ffeb], cl ; ret
0x00000200000dddaa : rol dword ptr [rsi + 0x6c0], -0xa ; ret 0x7502
0x000002000042c709 : rol dword ptr [rsi + 0xa4], 3 ; ret
0x00000200003d80d3 : rol dword ptr [rsi + rsi*8 + 0xd8d48ff], 1 ; ret 0xf474
0x00000200005b03c6 : rol dword ptr [rsi], cl ; add bl, ch ; ret 0x3b9
0x000002000022fdb9 : rol dword ptr [rsp + rax*2], 0x3b ; ret 0xd972
0x00000200001579e9 : rol ebx, -0x34 ; mov eax, 0xc0000001 ; ret
0x0000020000616e79 : rol ebx, -0x75 ; ret 0xccc3
0x00000200000edc9d : rol ebx, -0x7b ; sal byte ptr [rbp + 3], cl ; xor eax, eax ; ret
0x0000020000494b61 : rol ebx, -0x7d ; ret 0x8bf8
0x0000020000426c13 : rol ebx, 0x41 ; movsx eax, cl ; xor eax, 0x20 ; ret
0x0000020000569602 : rol ebx, 0x48 ; lea eax, dword ptr [rcx + 8] ; ret
0x000002000002c806 : rol ebx, 0x48 ; mov eax, dword ptr [rcx + 0x638] ; ret
0x0000020000053996 : rol ebx, 0x48 ; mov eax, dword ptr [rcx + 0xf0] ; ret
0x000002000020d8a3 : rol ecx, -0x16 ; add al, 0x6b ; ret 0x2b32
0x0000020000151023 : rol ecx, -0x18 ; adc byte ptr [rcx - 0xa], al ; ret
0x0000020000211963 : rol ecx, 1 ; cli ; add al, 0x8b ; ret 0xe8c1
0x000002000041aff5 : rol ecx, 1 ; rol dword ptr [rdx], -0x3f ; ret 0x4106
0x000002000005c348 : rol ecx, 1 ; sub rdx, 1 ; jne 0x2000005c348 ; ret
0x0000020000781592 : rol edx, cl ; add ebx, -1 ; jne 0x20000781591 ; mov rax, rdx ; jmp 0x200007815a9
0x0000020000782618 : rol edx, cl ; add ebx, -1 ; jne 0x20000782614 ; mov rax, rdx ; jmp 0x2000078262f
0x00000200007831de : rol edx, cl ; add ebx, -1 ; jne 0x200007831dd ; mov rax, rdx ; jmp 0x200007831fe
0x0000020000783e44 : rol edx, cl ; add ebx, -1 ; jne 0x20000783e3f ; mov rax, rdx ; jmp 0x20000783e5b
0x00000200007845c7 : rol edx, cl ; add ebx, -1 ; jne 0x200007845c2 ; mov rax, rdx ; jmp 0x200007845de
0x0000020000784e7e : rol edx, cl ; add ebx, -1 ; jne 0x20000784e7c ; mov rax, rdx ; jmp 0x20000784e95
0x0000020000785107 : rol edx, cl ; add ebx, -1 ; jne 0x20000785105 ; mov rax, rdx ; jmp 0x2000078511e
0x0000020000789e0a : rol edx, cl ; add ebx, -1 ; jne 0x20000789e05 ; mov rax, rdx ; jmp 0x20000789e21
0x000002000078c3d7 : rol edx, cl ; add ebx, -1 ; jne 0x2000078c3d3 ; mov rax, rdx ; jmp 0x2000078c3ee
0x000002000077ff3c : rol edx, cl ; add edi, -1 ; jne 0x2000077ff37 ; mov rax, rdx ; jmp 0x2000077ff53
0x000002000078097f : rol edx, cl ; add edi, -1 ; jne 0x2000078097a ; mov rax, rdx ; jmp 0x20000780996
0x0000020000781bee : rol edx, cl ; add edi, -1 ; jne 0x20000781be9 ; mov rax, rdx ; jmp 0x20000781c05
0x000002000078762c : rol edx, cl ; add edi, -1 ; jne 0x20000787627 ; mov rax, rdx ; jmp 0x20000787643
0x0000020000789ba4 : rol edx, cl ; add edi, -1 ; jne 0x20000789b9f ; mov rax, rdx ; jmp 0x20000789bbb
0x000002000078bb1b : rol edx, cl ; add edi, -1 ; jne 0x2000078bb17 ; mov rax, rdx ; jmp 0x2000078bb32
0x000002000043a92b : rol r11b, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000005c347 : rol rcx, 1 ; sub rdx, 1 ; jne 0x2000005c349 ; ret
0x0000020000232c76 : rol spl, 0x41 ; jle 0x20000232cf4 ; push rax ; loopne 0x20000232c4c ; ret 0x187d
0x0000020000042929 : ror ah, 0xcc ; lock dec dword ptr [rcx] ; ret
0x000002000014936a : ror ah, cl ; add byte ptr [rax], al ; ret
0x000002000067307c : ror al, 1 ; in eax, -1 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000063e23c : ror al, 1 ; ret
0x000002000014976a : ror al, cl ; add byte ptr [rax], al ; ret
0x000002000014906a : ror bh, cl ; add byte ptr [rax], al ; ret
0x000002000014946a : ror bl, cl ; add byte ptr [rax], al ; ret
0x000002000022e15c : ror byte ptr [r10], 1 ; or dword ptr [rdi], ecx ; add cl, byte ptr [rax + 0x33] ; ret
0x000002000013af60 : ror byte ptr [r13 - 0x75], 1 ; ret
0x0000020000048fa7 : ror byte ptr [r8 + 0x2b], 1 ; ret
0x000002000014e9cb : ror byte ptr [r8 + 0xf], 1 ; ret
0x000002000053d885 : ror byte ptr [r8 + 3], 1 ; ret 0x4466
0x00000200004e1c3d : ror byte ptr [r8 - 0x73], 4 ; ret 0x3b49
0x0000020000697bc6 : ror byte ptr [r8 - 0x73], cl ; push rbp ; xor al, ch ; ret
0x0000020000018abe : ror byte ptr [r8 - 0x75], 1 ; add cl, byte ptr [rax + 0x3b] ; ret 0xf74
0x00000200007d548a : ror byte ptr [r8 - 0x77], 2 ; ret
0x0000020000600d3c : ror byte ptr [r8], 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x4466
0x000002000046798d : ror byte ptr [r9 + 3], 1 ; ret 0x3b48
0x0000020000099d7b : ror byte ptr [rax + 0x1b], 0xc0 ; and rax, rcx ; ret
0x0000020000099d7e : ror byte ptr [rax + 0x23], 0xc1 ; ret
0x000002000020a584 : ror byte ptr [rax + 0x23], 1 ; ret
0x00000200000a5707 : ror byte ptr [rax + 0x23], 1 ; ret 0x2348
0x0000020000194174 : ror byte ptr [rax + 0x23], 1 ; ret 0x234c
0x0000020000541959 : ror byte ptr [rax + 0x23], 1 ; rol byte ptr [rcx - 0x7d], 1 ; ret 0x75ff
0x00000200004257ce : ror byte ptr [rax + 0x23], 1 ; ror byte ptr [rcx + 0x33], 1 ; ror byte ptr [rax - 0x75], 1 ; ret 0x8b48
0x0000020000048fa8 : ror byte ptr [rax + 0x2b], 1 ; ret
0x00000200004c54d9 : ror byte ptr [rax + 0x2b], 1 ; ror dword ptr [rax - 1], 1 ; ret 0xf749
0x000002000013d249 : ror byte ptr [rax + 0x2b], cl ; ror dword ptr [rax - 0x2f], -8 ; ret
0x00000200000be892 : ror byte ptr [rax + 0x31887], 1 ; add al, ch ; ret 0
0x000002000002621e : ror byte ptr [rax + 0x31], 0x42 ; or bl, ch ; ret
0x00000200001f05b7 : ror byte ptr [rax + 0x33], 1 ; ret 0x2349
0x000002000000bb29 : ror byte ptr [rax + 0x39], 1 ; sete al ; ret
0x00000200000ca321 : ror byte ptr [rax + 0x3b], 0x41 ; sbb byte ptr [rbp - 0x16], dh ; mov al, 1 ; ret
0x000002000050ee26 : ror byte ptr [rax + 0x3b], 0x4c ; ret 0x7578
0x00000200004a6c89 : ror byte ptr [rax + 0x3b], 0xa ; jne 0x200004a6c96 ; ret
0x00000200004a6ca5 : ror byte ptr [rax + 0x3b], 0xa ; jne 0x200004a6cb2 ; ret
0x00000200000e6c28 : ror byte ptr [rax + 0x3b], 0xc ; ret 0x820f
0x00000200000e6c3c : ror byte ptr [rax + 0x3b], 0xc ; ret 0x830f
0x000002000061bf19 : ror byte ptr [rax + 0x3b], 0xc1 ; jb 0x2000061bf0d ; ret
0x00000200000273b9 : ror byte ptr [rax + 0x3b], 0xc1 ; jne 0x200000273cc ; mov rax, r8 ; ret
0x00000200006c679f : ror byte ptr [rax + 0x3b], 0xc2 ; jb 0x200006c6779 ; xor eax, eax ; ret
0x00000200001e3934 : ror byte ptr [rax + 0x3b], 0xc8 ; jae 0x200001e3915 ; xor eax, eax ; ret
0x0000020000191938 : ror byte ptr [rax + 0x3b], 0xc8 ; jne 0x2000019192a ; ret
0x000002000009052c : ror byte ptr [rax + 0x3b], 0xca ; sete al ; ret
0x000002000002ae55 : ror byte ptr [rax + 0x3b], 0xd ; ret
0x0000020000110f97 : ror byte ptr [rax + 0x3b], 0xd1 ; seta al ; ret
0x0000020000072ac4 : ror byte ptr [rax + 0x3b], 1 ; ret
0x00000200000a0a4a : ror byte ptr [rax + 0x3b], 1 ; ret 0x376
0x0000020000110f8c : ror byte ptr [rax + 0x3b], 1 ; sal dword ptr [rbx + 4], 1 ; or eax, 0xffffffff ; ret
0x00000200000862a1 : ror byte ptr [rax + 0x3b], cl ; ret 0x1073
0x000002000022888b : ror byte ptr [rax + 0x4a880242], 1 ; ret
0x00000200004eb62f : ror byte ptr [rax + 0x4c582444], 0x8b ; ret 0x8949
0x0000020000236201 : ror byte ptr [rax + 0x4c], 0x3b ; ret 0xe07c
0x0000020000247528 : ror byte ptr [rax + 0x63], 1 ; ret 0x8d48
0x0000020000087fe7 : ror byte ptr [rax + 0x63], 1 ; ret 0x8d4e
0x00000200002479e8 : ror byte ptr [rax + 0x63], cl ; ret 0x8d48
0x0000020000144936 : ror byte ptr [rax + 0x69], 1 ; ret 0xe100
0x000002000060ece2 : ror byte ptr [rax + 0x6b], cl ; ret 0x4870
0x0000020000027b9f : ror byte ptr [rax + 0x6b], cl ; ret 0x48f8
0x000002000021014d : ror byte ptr [rax + 0xb], 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000212fee : ror byte ptr [rax + 0xb], 1 ; ret 0x48f3
0x00000200000cf14c : ror byte ptr [rax + 0xb], 1 ; ret 0x8348
0x00000200001c8714 : ror byte ptr [rax + 0xb], 1 ; ret 0xfeb
0x00000200003d044a : ror byte ptr [rax + 0xb], cl ; ret 0x3b4e
0x00000200000bb7b9 : ror byte ptr [rax + 0xbe81], 0 ; ret
0x000002000019137d : ror byte ptr [rax + 0xf], 0x43 ; ret
0x00000200004e9c73 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000200004bb94d : ror byte ptr [rax + 0xf], 0x44 ; ret 0x3b48
0x00000200004ea1fd : ror byte ptr [rax + 0xf], 0x45 ; ret 0x3b48
0x00000200000a6d05 : ror byte ptr [rax + 0xf], 0xaf ; ret
0x000002000014e9cc : ror byte ptr [rax + 0xf], 1 ; ret
0x000002000021c0b2 : ror byte ptr [rax + 0xf], 1 ; ret 0x3983
0x0000020000439246 : ror byte ptr [rax + 0xf], 1 ; ret 0xc8d
0x000002000020779e : ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0xff48
0x00000200003eb30d : ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; sal dh, 1 ; ret 0x7401
0x0000020000220bc0 : ror byte ptr [rax + 0xf], cl ; ret 0x3ceb
0x00000200001b98af : ror byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000200004b310d : ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000200004a2bb9 : ror byte ptr [rax + 0xf], cl ; ret 0x8b44
0x000002000000c1ae : ror byte ptr [rax + 3], 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000024794c : ror byte ptr [rax + 3], 1 ; fisttp word ptr [rax - 0x2d] ; ret 0x8341
0x000002000053d886 : ror byte ptr [rax + 3], 1 ; ret 0x4466
0x0000020000117a39 : ror byte ptr [rax + 3], cl ; ret 0xc148
0x00000200000808d0 : ror byte ptr [rax + 5], 0 ; add al, 0 ; add byte ptr [rax + 3], cl ; ret 0xccc3
0x0000020000057cd3 : ror byte ptr [rax - 0x2d], 0xe8 ; and rax, r8 ; ret
0x00000200001856c5 : ror byte ptr [rax - 0x2d], 1 ; ret 0x3348
0x00000200002406da : ror byte ptr [rax - 0x2d], 1 ; ret 0x8341
0x0000020000781297 : ror byte ptr [rax - 0x2d], 1 ; ret 0xc383
0x00000200004990e5 : ror byte ptr [rax - 0x2f], 0xe8 ; ret
0x00000200003cf396 : ror byte ptr [rax - 0x39], 1 ; ret
0x00000200007b84e2 : ror byte ptr [rax - 0x39], 5 ; ret 0xb653
0x00000200006d06d2 : ror byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rcx + 0x3b] ; ret
0x00000200006101cc : ror byte ptr [rax - 0x3f], 0xe0 ; add eax, 0x48410348 ; ret
0x000002000060fb74 : ror byte ptr [rax - 0x3f], 0xe0 ; add eax, 0x50410348 ; ret
0x000002000007946f : ror byte ptr [rax - 0x3f], 0xe2 ; or byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc149
0x00000200001318a0 : ror byte ptr [rax - 0x3f], 0xe8 ; add cl, byte ptr [rax + 0x3b] ; ret 0xf48
0x00000200001e2e94 : ror byte ptr [rax - 0x3f], 0xe8 ; or dword ptr [rax + 0x23], ecx ; ret 0xba48
0x00000200003cbc34 : ror byte ptr [rax - 0x3f], 0xe9 ; and byte ptr [rdi + rcx - 0x51], cl ; ret 0xaf0f
0x00000200003ceb80 : ror byte ptr [rax - 0x3f], 1 ; call 0x1ffc2c82f9b
0x00000200003ceb7f : ror byte ptr [rax - 0x3f], 1 ; call 0x1ffc2c82f9c
0x00000200007bab3c : ror byte ptr [rax - 0x3f], 1 ; cli ; adc byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000024c0e7 : ror byte ptr [rax - 0x3f], 1 ; leave ; add ecx, dword ptr [rcx - 0x75] ; ret 0x3348
0x0000020000623293 : ror byte ptr [rax - 0x3f], 1 ; loop 0x200006232a3 ; call 0x2000024da48
0x00000200003d2dfe : ror byte ptr [rax - 0x3f], 1 ; ret 0x482b
0x000002000001a3f8 : ror byte ptr [rax - 0x3f], cl ; call 0x1ffc224ed09
0x00000200000f6623 : ror byte ptr [rax - 0x3f], cl ; call qword ptr [rdx]
0x00000200000532b1 : ror byte ptr [rax - 0x3f], cl ; jmp 0x1ffc2907bc3
0x00000200001e96fe : ror byte ptr [rax - 0x3f], cl ; sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000022dfc9 : ror byte ptr [rax - 0x48], 0x7f ; out 0x30, eax ; ret 0x3b88
0x00000200004053db : ror byte ptr [rax - 0x73], 0x14 ; ret
0x00000200003cd1bb : ror byte ptr [rax - 0x73], 0x14 ; ret 0x8b48
0x00000200006b4904 : ror byte ptr [rax - 0x73], 0x15 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffbc
0x000002000019cf45 : ror byte ptr [rax - 0x73], 0x15 ; ret
0x00000200007a72c6 : ror byte ptr [rax - 0x73], 0x15 ; ret 0x16f
0x0000020000680fb6 : ror byte ptr [rax - 0x73], 0x15 ; ret 0xc84a
0x000002000069ce66 : ror byte ptr [rax - 0x73], 0x15 ; ret 0xed53
0x00000200006bb765 : ror byte ptr [rax - 0x73], 0x35 ; ret
0x000002000000a514 : ror byte ptr [rax - 0x73], 0x42 ; dec dword ptr [rcx + 0x3b] ; ret 0xf45
0x00000200004d23c1 : ror byte ptr [rax - 0x73], 0x4d ; adc byte ptr [rbx], dh ; shr al, cl ; ret
0x00000200003ed64e : ror byte ptr [rax - 0x73], 0x4d ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xor edx, edx ; call qword ptr [rdi]
0x00000200006dd39c : ror byte ptr [rax - 0x73], 0x4d ; sub al, 0xca ; ret 0xff92
0x0000020000696ea7 : ror byte ptr [rax - 0x73], 0x55 ; call 0x200042bfa9f
0x0000020000539651 : ror byte ptr [rax - 0x73], 0x55 ; mov ah, 0x48 ; mov ecx, edi ; call r15
0x000002000019278d : ror byte ptr [rax - 0x73], 0xd ; ret
0x00000200001c5cc6 : ror byte ptr [rax - 0x73], 0xd ; ret 0x159a
0x00000200004d9f96 : ror byte ptr [rax - 0x73], 0xd ; ret 0xe479
0x0000020000491ff6 : ror byte ptr [rax - 0x73], 1 ; or al, 0x89 ; lea rax, qword ptr [rax + rcx*8] ; ret
0x00000200004e1c3e : ror byte ptr [rax - 0x73], 4 ; ret 0x3b49
0x00000200003cd1b7 : ror byte ptr [rax - 0x73], 4 ; ror byte ptr [rax - 0x73], 0x14 ; ret 0x8b48
0x00000200006bcfde : ror byte ptr [rax - 0x73], 5 ; jp 0x200006bcfb2 ; ret
0x00000200004bea6e : ror byte ptr [rax - 0x73], cl ; adc r8b, r13b ; sbb ah, bh ; ret 0x84ff
0x000002000068401f : ror byte ptr [rax - 0x73], cl ; and al, 0x20 ; call 0x200000f0308
0x000002000043b01e : ror byte ptr [rax - 0x73], cl ; and al, 0x50 ; call 0x20000068459
0x00000200004c0ec7 : ror byte ptr [rax - 0x73], cl ; and al, 0x58 ; call 0x200000f0309
0x000002000044cb88 : ror byte ptr [rax - 0x73], cl ; and al, 0x70 ; call 0x2000006d769
0x000002000058fb4b : ror byte ptr [rax - 0x73], cl ; cmpsq qword ptr [rsi], qword ptr [rdi] ; call 0x200001b5010
0x000002000043adcb : ror byte ptr [rax - 0x73], cl ; enter -0x7418, 0x29 ; ret
0x0000020000697bc7 : ror byte ptr [rax - 0x73], cl ; push rbp ; xor al, ch ; ret
0x000002000013ccc7 : ror byte ptr [rax - 0x74b6eefc], 0xc3 ; ret
0x0000020000080563 : ror byte ptr [rax - 0x75], 0x14 ; ret 0x8b48
0x00000200003f8ed4 : ror byte ptr [rax - 0x75], 0x1c ; and al, 0x48 ; add esp, 8 ; ret
0x00000200000a8fdd : ror byte ptr [rax - 0x75], 0x1c ; ret
0x0000020000138027 : ror byte ptr [rax - 0x75], 0x44 ; ret
0x00000200006fedbb : ror byte ptr [rax - 0x75], 0x4b ; xor al, ch ; jmp rbx
0x00000200001d8503 : ror byte ptr [rax - 0x75], 0x4c ; and al, 0x30 ; mov qword ptr [rcx], r10 ; ret
0x000002000052c021 : ror byte ptr [rax - 0x75], 0x4c ; out dx, al ; sub al, ch ; adc al, 0xb5 ; ret 0x8bff
0x000002000053eb75 : ror byte ptr [rax - 0x75], 0x4c ; ret
0x000002000015c2f7 : ror byte ptr [rax - 0x75], 0x55 ; cmp byte ptr [rax - 0x75], cl ; call rax
0x000002000015af4b : ror byte ptr [rax - 0x75], 0x55 ; mov rcx, qword ptr [rbp + 0x50] ; call rax
0x000002000015d1aa : ror byte ptr [rax - 0x75], 0x55 ; mov rcx, r11 ; call r11
0x0000020000622f59 : ror byte ptr [rax - 0x75], 0x5c ; and al, 0x10 ; ret
0x0000020000402a29 : ror byte ptr [rax - 0x75], 0x5c ; and al, 0x28 ; pop rdi ; ret
0x00000200006dbcba : ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; mov eax, r10d ; ret
0x00000200006ba3c0 : ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; mov eax, r8d ; ret
0x00000200000255b1 : ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000004941a : ror byte ptr [rax - 0x75], 0x5c ; ret 0x4810
0x00000200000c8b5a : ror byte ptr [rax - 0x75], 0x6c ; and al, 0x28 ; pop rdi ; ret
0x000002000052cb5f : ror byte ptr [rax - 0x75], 0x74 ; ret
0x000002000003bb04 : ror byte ptr [rax - 0x75], 0x7c ; and al, 0x10 ; ret
0x00000200005143cd : ror byte ptr [rax - 0x75], 0x7c ; and al, 8 ; ret
0x000002000047194f : ror byte ptr [rax - 0x75], 0x84 ; ret 0x8930
0x00000200004cfb57 : ror byte ptr [rax - 0x75], 0x8f ; call 0x1ffff4cfb6a
0x000002000017b75f : ror byte ptr [rax - 0x75], 0x9c ; ret 0x828
0x0000020000024d83 : ror byte ptr [rax - 0x75], 0x9c ; ret 0x88
0x00000200000b10da : ror byte ptr [rax - 0x75], 0xc ; ret 0x45f6
0x00000200000b1a75 : ror byte ptr [rax - 0x75], 0xc ; ret 0x8b49
0x0000020000501e2c : ror byte ptr [rax - 0x75], 0xcb ; call 0x200000be126
0x00000200007ac145 : ror byte ptr [rax - 0x75], 0xcb ; call 0x200003d079f
0x000002000046f9f9 : ror byte ptr [rax - 0x75], 0xcb ; xor edx, edx ; call 0x2000009e099
0x000002000047402b : ror byte ptr [rax - 0x75], 0xcd ; xor edx, edx ; call 0x2000009e099
0x000002000046e168 : ror byte ptr [rax - 0x75], 0xce ; xor edx, edx ; call 0x2000009e099
0x00000200005255f0 : ror byte ptr [rax - 0x75], 0xcf ; call 0x20000148a97
0x000002000021d239 : ror byte ptr [rax - 0x75], 0xcf ; mov rdx, rbx ; call rsi
0x0000020000121e82 : ror byte ptr [rax - 0x75], 0xcf ; xor edx, edx ; call 0x2000009e098
0x00000200004715ea : ror byte ptr [rax - 0x75], 0xcf ; xor edx, edx ; call 0x2000009e099
0x000002000042b754 : ror byte ptr [rax - 0x75], 0xd0 ; call 0x200004e7a5a
0x000002000044874d : ror byte ptr [rax - 0x75], 0xd3 ; mov rcx, rdi ; call r10
0x0000020000041dd1 : ror byte ptr [rax - 0x75], 0xd3 ; mov rcx, rdi ; call rsi
0x00000200004a5a44 : ror byte ptr [rax - 0x75], 0xd5 ; call 0x20000081c82
0x000002000017772f : ror byte ptr [rax - 0x75], 0xd6 ; call rax
0x00000200001b9c5d : ror byte ptr [rax - 0x75], 0xd7 ; mov rcx, rbx ; call r10
0x000002000002e493 : ror byte ptr [rax - 0x75], 1 ; adc dword ptr [rbp + 0x33], eax ; rol byte ptr [rbp - 0x75], cl ; ret 0x3b48
0x0000020000018abf : ror byte ptr [rax - 0x75], 1 ; add cl, byte ptr [rax + 0x3b] ; ret 0xf74
0x00000200000ce166 : ror byte ptr [rax - 0x75], 1 ; add dword ptr [rax + 0x3b], ecx ; ret
0x000002000044fdec : ror byte ptr [rax - 0x75], 1 ; iretd ; call 0x2000007e427
0x00000200000ee99b : ror byte ptr [rax - 0x75], 1 ; or byte ptr [rax + 0x3b], cl ; ret 0x2075
0x0000020000175a23 : ror byte ptr [rax - 0x75], 1 ; ret
0x000002000012d57d : ror byte ptr [rax - 0x75], 1 ; ret 0x2348
0x000002000001a3f2 : ror byte ptr [rax - 0x75], 1 ; ret 0x2349
0x0000020000490cea : ror byte ptr [rax - 0x75], 1 ; ret 0x8948
0x000002000024c0fb : ror byte ptr [rax - 0x75], 1 ; ret 0x8949
0x00000200004257d4 : ror byte ptr [rax - 0x75], 1 ; ret 0x8b48
0x0000020000117ae9 : ror byte ptr [rax - 0x75], 1 ; ret 0x9948
0x0000020000103126 : ror byte ptr [rax - 0x75], 1 ; ret 0xc148
0x00000200007c754f : ror byte ptr [rax - 0x75], 1 ; ret 0xd148
0x0000020000042865 : ror byte ptr [rax - 0x75], 1 ; ret 0xf49
0x00000200001e6329 : ror byte ptr [rax - 0x75], 1 ; retf ; call qword ptr [rbx]
0x0000020000207b70 : ror byte ptr [rax - 0x75], 1 ; ror dword ptr [rax + 0xf], -0x51 ; ret 0x694d
0x00000200001b24d1 : ror byte ptr [rax - 0x75], 1 ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200005c7ebe : ror byte ptr [rax - 0x75], 1 ; sbb byte ptr [r8 - 0x75], cl ; add al, 0xd0 ; ret
0x00000200000a8faf : ror byte ptr [rax - 0x75], 4 ; ret
0x00000200000b1a92 : ror byte ptr [rax - 0x75], 4 ; ret 0x3b48
0x00000200001f013c : ror byte ptr [rax - 0x75], 4 ; ret 0x8549
0x00000200000df129 : ror byte ptr [rax - 0x75], cl ; add dword ptr [rcx + 0x23], ecx ; ret
0x00000200001b9183 : ror byte ptr [rax - 0x75], cl ; add eax, dword ptr [rbp + 0x2b] ; ret 0x8348
0x0000020000204e88 : ror byte ptr [rax - 0x75], cl ; add eax, dword ptr [rbp + 3] ; ret 0xca8b
0x00000200004cca27 : ror byte ptr [rax - 0x75], cl ; and al, 0x40 ; call 0x200000eef39
0x0000020000623f36 : ror byte ptr [rax - 0x75], cl ; and al, 0x40 ; call 0x2000024d009
0x00000200004334d8 : ror byte ptr [rax - 0x75], cl ; and al, 0x48 ; call 0x200000620f9
0x0000020000629ca7 : ror byte ptr [rax - 0x75], cl ; and al, 0x58 ; call 0x2000024d009
0x000002000061d09b : ror byte ptr [rax - 0x75], cl ; and al, 0x68 ; call 0x2000024d009
0x0000020000526579 : ror byte ptr [rax - 0x75], cl ; enter -0x118, 0x12 ; ret
0x000002000052e18c : ror byte ptr [rax - 0x75], cl ; enter -0x1418, -0x6a ; ret 0x48ff
0x00000200005269a4 : ror byte ptr [rax - 0x75], cl ; enter -0x2c18, 0xe ; ret
0x00000200005374b2 : ror byte ptr [rax - 0x75], cl ; enter -0x3a18, 3 ; ret 0x48ff
0x00000200005353d3 : ror byte ptr [rax - 0x75], cl ; enter -0x5b18, 0x24 ; ret 0x44ff
0x0000020000524ade : ror byte ptr [rax - 0x75], cl ; enter -0x6618, 0x2d ; ret
0x000002000042daa5 : ror byte ptr [rax - 0x75], cl ; enter -0x6d18, -1 ; ret
0x000002000060d06a : ror byte ptr [rax - 0x75], cl ; enter -0x7218, -1 ; ret
0x0000020000524d75 : ror byte ptr [rax - 0x75], cl ; enter 0x2e8, 0x2b ; ret
0x0000020000526048 : ror byte ptr [rax - 0x75], cl ; enter 0x2fe8, 0x18 ; ret
0x000002000051fe19 : ror byte ptr [rax - 0x75], cl ; enter 0x5ee8, 0x7a ; ret
0x0000020000518f13 : ror byte ptr [rax - 0x75], cl ; enter 0x64e8, -0x17 ; ret
0x0000020000529b0b : ror byte ptr [rax - 0x75], cl ; enter 0x6ce8, -0x23 ; ret 0x44ff
0x0000020000522505 : ror byte ptr [rax - 0x75], cl ; enter 0x72e8, 0x53 ; ret
0x000002000043afb8 : ror byte ptr [rax - 0x75], cl ; enter 0x7fe8, 0x2a ; ret
0x00000200002444f5 : ror byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000020000220d76 : ror byte ptr [rax - 0x75], cl ; int 0xe8
0x00000200001d2d0f : ror byte ptr [rax - 0x75], cl ; int1 ; call 0x200000eef36
0x0000020000521efd : ror byte ptr [rax - 0x75], cl ; int1 ; call 0x20000147f77
0x00000200006a2c7b : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x200000eef36
0x00000200004c7c72 : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x200000f02ab
0x00000200000e0cf9 : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000024d006
0x000002000061f480 : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000024d007
0x000002000053f5e3 : ror byte ptr [rax - 0x75], cl ; iretd ; call r15
0x0000020000661a02 : ror byte ptr [rax - 0x75], cl ; iretd ; mov ebx, eax ; call 0x2000001dcd8
0x000002000061ef17 : ror byte ptr [rax - 0x75], cl ; iretd ; mov ebx, eax ; call 0x2000024d009
0x0000020000088258 : ror byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov al, dl ; ret
0x00000200001d76fb : ror byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x0000020000039382 : ror byte ptr [rax - 0x75], cl ; ret
0x0000020000246749 : ror byte ptr [rax - 0x75], cl ; ret 0x2c6
0x000002000001238d : ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x000002000017dacc : ror byte ptr [rax - 0x75], cl ; ret 0x8b49
0x00000200001d84d0 : ror byte ptr [rax - 0x75], cl ; ret 0xb841
0x0000020000451fa1 : ror byte ptr [rax - 0x75], cl ; ret 0xba41
0x000002000043a965 : ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000056b86
0x00000200004a1767 : ror byte ptr [rax - 0x75], cl ; retf ; call 0x200000ca367
0x00000200004cbec0 : ror byte ptr [rax - 0x75], cl ; retf ; call 0x200000eef37
0x0000020000510d25 : ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000024d006
0x000002000062392d : ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000024d007
0x0000020000036e81 : ror byte ptr [rax - 0x75], cl ; ror dword ptr [rcx - 0x75], 1 ; ret 0xc148
0x00000200007d4fbf : ror byte ptr [rax - 0x75dfdbac], cl ; ret 0x8348
0x00000200005618d0 : ror byte ptr [rax - 0x77], 0x13 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000178440 : ror byte ptr [rax - 0x77], 0x41 ; or byte ptr [rbp - 0x75], cl ; ret 0x894d
0x0000020000683ec2 : ror byte ptr [rax - 0x77], 0x41 ; push rax ; ret
0x000002000060a16b : ror byte ptr [rax - 0x77], 0x42 ; ret
0x0000020000609d02 : ror byte ptr [rax - 0x77], 0x45 ; ret 0x4589
0x0000020000557f1f : ror byte ptr [rax - 0x77], 0x45 ; ret 0x8948
0x0000020000011960 : ror byte ptr [rax - 0x77], 0x4d ; dec dword ptr [rax + 0x2b] ; ret 0x8948
0x0000020000647da2 : ror byte ptr [rax - 0x77], 0x54 ; ret
0x00000200004adc47 : ror byte ptr [rax - 0x77], 0x7c ; ret
0x000002000002559e : ror byte ptr [rax - 0x77], 0xa ; ret
0x00000200000231b6 : ror byte ptr [rax - 0x77], 0xc ; ret
0x0000020000144ade : ror byte ptr [rax - 0x77], 1 ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000147445 : ror byte ptr [rax - 0x77], 1 ; add ebx, eax ; mov byte ptr [rcx], al ; ret
0x00000200001cc483 : ror byte ptr [rax - 0x77], 1 ; mov dword ptr [rcx + 8], eax ; xor eax, eax ; ret
0x00000200001579dd : ror byte ptr [rax - 0x77], 1 ; mov eax, 0xc00000bb ; ret
0x00000200006a420e : ror byte ptr [rax - 0x77], 1 ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000010169 : ror byte ptr [rax - 0x77], 1 ; ret
0x00000200007d548b : ror byte ptr [rax - 0x77], 2 ; ret
0x00000200003f0fcc : ror byte ptr [rax - 0x77], 3 ; mov qword ptr [rbx + 8], rax ; jmp 0x200003f0fa2
0x000002000079daed : ror byte ptr [rax - 0x77], 5 ; ret
0x00000200006f4bd4 : ror byte ptr [rax - 0x77], 5 ; ret 0x8aff
0x000002000078446d : ror byte ptr [rax - 0x77], cl ; adc eax, dword ptr [rbx - 0x7cb7073f] ; ret
0x0000020000541400 : ror byte ptr [rax - 0x77], cl ; add al, ch ; push rdi ; ret
0x00000200005caada : ror byte ptr [rax - 0x77], cl ; push rax ; and cl, ch ; push rdx ; ret 0xffeb
0x0000020000120e71 : ror byte ptr [rax - 0x79], 1 ; ret
0x0000020000041e0d : ror byte ptr [rax - 0x7b], 0xc9 ; jne 0x20000041e1e ; mov al, 1 ; ret
0x000002000062b3fe : ror byte ptr [rax - 0x7b], 0xc9 ; jne 0x2000062b40f ; xor eax, eax ; ret
0x000002000002a52c : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x2000002a539 ; ret
0x00000200001b8ebe : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x200001b8ed1 ; mov qword ptr [r8], rcx ; ret
0x000002000000f978 : ror byte ptr [rax - 0x7b], 1 ; ret 0x850f
0x00000200004adc3a : ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x2b], 0x8b ; ret 0x8b48
0x000002000042eb34 : ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], 0x8a ; ret 0x8ac3
0x00000200000fb0ef : ror byte ptr [rax - 0x7d], 0x3c ; ret 0x7400
0x00000200001b90e4 : ror byte ptr [rax - 0x7d], 0x64 ; and al, 0x28 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005b2799 : ror byte ptr [rax - 0x7d], 0xc1 ; adc byte ptr [rbx], bh ; ret 0xee72
0x00000200005ed52f : ror byte ptr [rax - 0x7d], 0xc1 ; adc byte ptr [rcx + 0x3b], al ; ret 0xe772
0x0000020000610e13 : ror byte ptr [rax - 0x7d], 0xc1 ; add al, 0x3b ; ret 0xf172
0x000002000013d333 : ror byte ptr [rax - 0x7d], 0xc1 ; add cl, byte ptr [rax + 0x3b] ; ret 0xee72
0x00000200001bd402 : ror byte ptr [rax - 0x7d], 0xc1 ; and al, 0x3b ; ret
0x00000200001e8764 : ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rax - 0x7d], cl ; ret 0x4504
0x000002000055415b : ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rax - 0x7f], cl ; ret 0x88
0x0000020000138597 : ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xe872
0x0000020000610e31 : ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xf172
0x00000200001b6dc9 : ror byte ptr [rax - 0x7d], 0xc2 ; adc byte ptr [rbp + 0x3b], cl ; ret
0x000002000066c028 : ror byte ptr [rax - 0x7d], 0xc2 ; cmp byte ptr [rbp + 0x3b], cl ; ret 0xd27c
0x00000200000bc48e : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5c], al ; pop rbp ; pop rbx ; ret
0x000002000009a403 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5c], al ; pop rdi ; pop rbx ; ret
0x000002000005866a : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbx ; ret
0x00000200007b609b : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; ret
0x0000020000071efc : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5f], al ; pop rsi ; pop rbx ; ret
0x000002000009c0a9 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbp + 0x5b], bl ; ret
0x00000200000cf5e8 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rdi + 0x5b], bl ; ret
0x00000200000a04f1 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000051bc8c : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x0000020000073dfa : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rsi + 0x5b], bl ; ret
0x00000200000d513f : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200000d51a6 ; ret
0x00000200000e223f : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200000e22a6 ; ret
0x000002000011fa30 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000011fa97 ; ret
0x0000020000407aa3 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000407b10 ; pop rsi ; pop rbx ; ret
0x0000020000446b85 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000446bf2 ; pop rsi ; pop rbp ; ret
0x0000020000456a04 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000456a6b ; ret
0x00000200004c3ef3 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200004c3f41 ; pop rbp ; ret
0x0000020000519d92 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000519df9 ; ret
0x000002000057ca8b : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000057caf4 ; ret
0x000002000065c95b : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000065c9c4 ; ret
0x000002000067ff66 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000067ffcf ; ret
0x00000200007916ad : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000079171a ; pop rsi ; pop rbp ; ret
0x000002000057f2ff : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop r13 ; pop rbp ; ret
0x00000200006bd328 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000020000623a76 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000020000070cfe : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x0000020000122e59 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x00000200004b32af : ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000de923 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rbx ; ret
0x000002000005eeb0 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; ret
0x0000020000516d06 : ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbp ; ret
0x00000200001d3051 : ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x0000020000078b7b : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x000002000001fb40 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x000002000020d6a5 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rdi + 0x5b], bl ; ret
0x00000200001b3e6f : ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rcx + 0x5e], al ; ret
0x000002000006f038 : ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rcx + 0x5f], al ; pop rdi ; pop rbp ; ret
0x00000200006c66b4 : ror byte ptr [rax - 0x7d], 0xc7 ; add bh, bh ; ret 0x3b45
0x000002000009b2ec : ror byte ptr [rax - 0x7d], 0xcb ; dec dword ptr [rax - 0x75] ; ret
0x000002000013cafd : ror byte ptr [rax - 0x7d], 0xd8 ; inc ebx ; xor eax, eax ; ret
0x000002000049e891 : ror byte ptr [rax - 0x7d], 0xe8 ; add cl, byte ptr [rcx + 0x3b] ; ret
0x000002000070ac98 : ror byte ptr [rax - 0x7d], 0xea ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x00000200002426c4 : ror byte ptr [rax - 0x7d], 1 ; ret
0x000002000050b880 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4102
0x00000200000197ef : ror byte ptr [rax - 0x7d], 1 ; ret 0x4802
0x00000200007a31c6 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4807
0x0000020000119530 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4903
0x0000020000118059 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4942
0x00000200006b1bb2 : ror byte ptr [rax - 0x7d], 1 ; ret 0x8902
0x00000200005240a8 : ror byte ptr [rax - 0x7d], 1 ; ret 0xe802
0x0000020000426dea : ror byte ptr [rax - 0x7d], 1 ; ret 0xe808
0x0000020000234178 : ror byte ptr [rax - 0x7d], cl ; ret
0x00000200004a8742 : ror byte ptr [rax - 0x7d], cl ; ret 0x4102
0x000002000049ead7 : ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000020000646bd6 : ror byte ptr [rax - 0x7d], cl ; ret 0x4c28
0x000002000010a2bb : ror byte ptr [rax - 0x7d], cl ; ret 0x4d02
0x00000200001060ee : ror byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x00000200001c075f : ror byte ptr [rax - 0x7f], 0xc4 ; enter 1, 0 ; ret
0x00000200007bbe04 : ror byte ptr [rax - 0x7f], 0xc4 ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200007bc13e : ror byte ptr [rax - 0x7f], 0xc4 ; mov al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200000e4d91 : ror byte ptr [rax - 0x7f], 0xc4 ; mov al, 0 ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200003c628f : ror byte ptr [rax - 0x7f], 0xc4 ; or byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000002000065ab5d : ror byte ptr [rax - 0x7f], 0xc4 ; test al, 0 ; add byte ptr [rax], al ; ret
0x000002000011f6c5 : ror byte ptr [rax - 0x7f], 1 ; ret
0x00000200007bab2a : ror byte ptr [rax - 0x7f], 1 ; ret 0
0x0000020000185777 : ror byte ptr [rax - 0x7f], 1 ; ret 0x5c0
0x0000020000696569 : ror byte ptr [rax - 0x7f], cl ; ret
0x000002000013cf32 : ror byte ptr [rax - 1], 0xc1 ; cmp rax, rdx ; jb 0x2000013cf34 ; ret
0x000002000000a6a0 : ror byte ptr [rax - 1], 1 ; ret
0x00000200006add06 : ror byte ptr [rax - 1], 1 ; ret 0x3966
0x0000020000457f13 : ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200005b24e0 : ror byte ptr [rax - 1], 1 ; ret 0x4566
0x00000200005f6fae : ror byte ptr [rax - 1], 1 ; ret 0xd148
0x00000200001e5711 : ror byte ptr [rax - 1], 1 ; ret 0xfee8
0x000002000012a7be : ror byte ptr [rax - 1], 4 ; ret 0x40c3
0x00000200005b59d9 : ror byte ptr [rax - 1], cl ; ret
0x00000200000330e3 : ror byte ptr [rax - 9], 0xd9 ; sbb ecx, ecx ; and eax, ecx ; ret
0x000002000016d9cc : ror byte ptr [rax - 9], cl ; int1 ; mov rax, rdx ; ret
0x00000200006ab089 : ror byte ptr [rax], 0x33 ; rol byte ptr [rcx - 1], 0 ; ret
0x00000200001f7284 : ror byte ptr [rax], 0x3b ; ret 0xf172
0x00000200006715e0 : ror byte ptr [rax], 0x48 ; add eax, 2 ; ret
0x00000200006101e0 : ror byte ptr [rax], 0x48 ; add eax, ecx ; ret
0x000002000002ddc3 : ror byte ptr [rax], 0x48 ; shr eax, cl ; and eax, 1 ; ret
0x00000200001370f3 : ror byte ptr [rax], 0x48 ; sub edx, 1 ; jne 0x200001370e2 ; ret
0x00000200000d1bcc : ror byte ptr [rax], 0x49 ; cmp eax, edx ; jb 0x200000d1ba1 ; ret
0x0000020000051964 : ror byte ptr [rax], 0x49 ; sub ecx, 1 ; jne 0x2000005195e ; ret
0x00000200000878e0 : ror byte ptr [rax], 0x75 ; idiv edi ; ret 0x8348
0x0000020000783e22 : ror byte ptr [rax], 0x83 ; ret
0x0000020000241df4 : ror byte ptr [rax], 0x83 ; ret 0x49f8
0x0000020000145109 : ror byte ptr [rax], 0x83 ; ret 0x4df8
0x00000200001d10eb : ror byte ptr [rax], 0x8b ; ret
0x000002000005efa7 : ror byte ptr [rax], 0xc1 ; out dx, al ; add ebp, ebx ; ret 0x8b48
0x00000200006715d2 : ror byte ptr [rax], 0xc3 ; mov eax, 0x30 ; ret
0x0000020000213eb1 : ror byte ptr [rax], 0xeb ; or byte ptr [rax - 0x7d], cl ; ret
0x0000020000600d3d : ror byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x4466
0x00000200000c60c3 : ror byte ptr [rax], 1 ; ret
0x000002000012152a : ror byte ptr [rax], cl ; add bh, dh ; ret
0x000002000051ed27 : ror byte ptr [rbp + 0x20e8624a], 0x98 ; ret 0x8bff
0x000002000007ee05 : ror byte ptr [rbp + 0x23], 1 ; ret
0x0000020000015ca3 : ror byte ptr [rbp + 0x23], cl ; ret 0x8b49
0x000002000013b2f3 : ror byte ptr [rbp + 0x3b], 0xc2 ; jb 0x2000013b2e8 ; ret
0x0000020000213118 : ror byte ptr [rbp + 0x3b], 0xd3 ; jb 0x20000213101 ; ret
0x000002000017e0c5 : ror byte ptr [rbp + 0x3b], 1 ; ret
0x0000020000452659 : ror byte ptr [rbp + 0x3b], 1 ; ret 0x9c75
0x00000200002403e9 : ror byte ptr [rbp + 0x3b], cl ; ret
0x000002000055b52c : ror byte ptr [rbp + 0xf], cl ; fisttp qword ptr [rcx - 1] ; ret 0x894c
0x000002000024748c : ror byte ptr [rbp + 3], 1 ; fimul word ptr [rax - 0x2d] ; ret 0x8341
0x000002000023ee04 : ror byte ptr [rbp + 3], cl ; ret
0x000002000008f817 : ror byte ptr [rbp + rcx*4 + 0x47], 1 ; sal dh, 1 ; ret
0x00000200006180e8 : ror byte ptr [rbp + rcx*4 + 0x5c], 0x24 ; jo 0x20000618081 ; ret
0x00000200006c95a6 : ror byte ptr [rbp + rcx*4 + 0xd], 0x32 ; ret
0x00000200006f663f : ror byte ptr [rbp + rcx*4 + 0xd], 0x59 ; ret 0x4cff
0x00000200003ea333 : ror byte ptr [rbp - 0x74bbe0b5], cl ; ret
0x0000020000552741 : ror byte ptr [rbp - 0x75], 0x1c ; ret
0x00000200000deb9f : ror byte ptr [rbp - 0x75], 0x24 ; ret 0x8b48
0x00000200000e4690 : ror byte ptr [rbp - 0x75], 0x34 ; ret
0x000002000013af61 : ror byte ptr [rbp - 0x75], 1 ; ret
0x0000020000037136 : ror byte ptr [rbp - 0x75], 1 ; ret 0x8beb
0x00000200005fa0df : ror byte ptr [rbp - 0x75], cl ; ret
0x0000020000410cb0 : ror byte ptr [rbp - 0x77], 1 ; or cl, byte ptr [rax - 0x75] ; ret 0x8348
0x0000020000203a28 : ror byte ptr [rbp - 0x7b], 0xc0 ; je 0x20000203a38 ; call r8
0x000002000046add4 : ror byte ptr [rbp - 0x7b], 0xc0 ; je 0x2000046ade4 ; call r8
0x00000200001f8c02 : ror byte ptr [rbp - 0x7b], 0xc0 ; jne 0x200001f8bf4 ; mov rax, r9 ; ret
0x000002000020f965 : ror byte ptr [rbp - 0x7b], 0xc0 ; jne 0x2000020f92e ; ret
0x000002000068f800 : ror byte ptr [rbp - 0x7b], 0xc0 ; jne 0x2000068f813 ; mov qword ptr [rdx], rax ; ret
0x00000200001bde1b : ror byte ptr [rbp - 0x7b], 0xc9 ; je 0x200001bde2b ; call r9
0x00000200000f74e6 : ror byte ptr [rbp - 0x7b], 0xd2 ; jne 0x200000f74f7 ; mov eax, ecx ; ret
0x0000020000462741 : ror byte ptr [rbx + 0x1213e8c8], cl ; ret
0x00000200007295cb : ror byte ptr [rbx + 0x144b8b13], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xc82b
0x00000200004637ca : ror byte ptr [rbx + 0x18ae8ce], cl ; ret
0x000002000071b654 : ror byte ptr [rbx + 0x200f44d1], cl ; ret
0x00000200004c00a5 : ror byte ptr [rbx + 0x2b483446], 1 ; ror dword ptr [rax - 1], 1 ; ret 0xc233
0x0000020000127843 : ror byte ptr [rbx + 0x3442404], 1 ; ret 0x9105
0x00000200001279f9 : ror byte ptr [rbx + 0x3442404], 1 ; ret 0xf105
0x000002000012791d : ror byte ptr [rbx + 0x344a045], 1 ; ret 0xa505
0x0000020000147cd9 : ror byte ptr [rbx + 0x5a300fd0], 0x58 ; pop rcx ; ret
0x000002000061a578 : ror byte ptr [rbx + 0xfc085d8], 0x88 ; ret 0
0x00000200007cef4b : ror byte ptr [rbx + rbp - 0x28], cl ; mov rax, r11 ; ret
0x00000200001e5e57 : ror byte ptr [rbx + rbp - 0x3e], 1 ; shr r8, 0xc ; call qword ptr [r11]
0x00000200000d0589 : ror byte ptr [rbx + rcx*4 + 0x42], 1 ; or byte ptr [rax - 0x7d], cl ; ret 0x4408
0x0000020000545c42 : ror byte ptr [rbx + rcx*4 + 0x43], cl ; or bh, bh ; ret 0x8b48
0x00000200001eb8ef : ror byte ptr [rbx + rcx*4 + 0x54], 0xc3 ; adc byte ptr [rbx + rcx*4 + 0x4c], cl ; ret
0x000002000004b933 : ror byte ptr [rbx + rcx*4 - 0x40], 1 ; jne 0x2000004b959 ; ret
0x00000200007072eb : ror byte ptr [rbx - 0x3474b72b], 0xe8 ; ret 0xfff7
0x00000200005b517e : ror byte ptr [rbx - 0x3774b72d], 0xe8 ; ret
0x0000020000670556 : ror byte ptr [rbx - 0x3b7cb73d], 0x20 ; pop rbx ; ret
0x0000020000569495 : ror byte ptr [rbx - 0x3b7cb73d], 0x30 ; pop rbx ; ret
0x000002000062ed22 : ror byte ptr [rbx - 0x3b7cb73d], 0x50 ; pop rbx ; ret
0x000002000063d1ce : ror byte ptr [rbx - 0x3b7cb73d], 0x70 ; pop rbx ; ret
0x0000020000797231 : ror byte ptr [rbx - 0x49f0ba3b], 1 ; ret 0x3b44
0x000002000054917c : ror byte ptr [rbx - 0x7cb7fff6], 1 ; ret
0x0000020000703b34 : ror byte ptr [rbx - 0x7ebe7cfc], 0xc2 ; ret
0x0000020000094b1f : ror byte ptr [rbx], 1 ; add byte ptr [rbx - 0x7af0fe18], al ; ret 2
0x0000020000029138 : ror byte ptr [rbx], cl ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200000c94c1 : ror byte ptr [rcx + 0x2381cc05], 0 ; call r8
0x00000200000a2cbc : ror byte ptr [rcx + 0x23], 1 ; ret 0x2348
0x0000020000452245 : ror byte ptr [rcx + 0x23], cl ; enter 0x3b49, -0x38 ; cmovne eax, edx ; ret
0x00000200000c66f1 : ror byte ptr [rcx + 0x23af9c05], 0 ; call r8
0x00000200004257d1 : ror byte ptr [rcx + 0x33], 1 ; ror byte ptr [rax - 0x75], 1 ; ret 0x8b48
0x000002000013b10f : ror byte ptr [rcx + 0x33], cl ; ret 0x8549
0x00000200001ac695 : ror byte ptr [rcx + 0x3b], 0x3c ; sal byte ptr [rbx - 0x11], 0xff ; ret 0x8d48
0x00000200001a429a : ror byte ptr [rcx + 0x3b], 0xc ; sal byte ptr [rdx - 0xd], 0x8b ; ret 0x348
0x000002000020c01e : ror byte ptr [rcx + 0x3b], 0xc8 ; seta al ; ret
0x000002000043b6e9 : ror byte ptr [rcx + 0x3b], 0xd1 ; jb 0x2000043b6e4 ; mov byte ptr [r8], r10b ; ret
0x0000020000213b1b : ror byte ptr [rcx + 0x3b], 0xd2 ; jb 0x20000213afb ; mov al, 1 ; ret
0x0000020000099ccc : ror byte ptr [rcx + 0x3b], 1 ; ret 0x8274
0x0000020000219e0b : ror byte ptr [rcx + 0x3b], 1 ; ret 0xec74
0x000002000001ba40 : ror byte ptr [rcx + 0x4444247c], 0x8b ; ret
0x00000200001d4415 : ror byte ptr [rcx + 0x4520245c], 0x2b ; ret
0x00000200001f5dca : ror byte ptr [rcx + 0x48382444], 0x8b ; ret
0x000002000054e606 : ror byte ptr [rcx + 0x49202474], cl ; mov ecx, ebp ; call r15
0x0000020000038309 : ror byte ptr [rcx + 0x508de875], 1 ; add dword ptr [rdi], ecx ; ret 0x7d80
0x0000020000100444 : ror byte ptr [rcx + 0x589881], 0 ; ret
0x00000200001813dd : ror byte ptr [rcx + 0x6b], cl ; ret 0x4964
0x000002000015e73d : ror byte ptr [rcx + 0xf], 0x43 ; ret
0x000002000013be62 : ror byte ptr [rcx + 0xf], 0x45 ; fimul word ptr [rax - 0x75] ; ret
0x000002000008119e : ror byte ptr [rcx + 0xf], 0xab ; ret 0x894c
0x000002000003f4ce : ror byte ptr [rcx + 0xf], 0xaf ; ret
0x0000020000118dd1 : ror byte ptr [rcx + 0xf], 0xbf ; add cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000002000019035c : ror byte ptr [rcx + 0xf], cl ; ret 0x8a
0x0000020000249d93 : ror byte ptr [rcx + 3], 1 ; fimul dword ptr [rax - 0x2d] ; ret 0x8341
0x000002000078bb16 : ror byte ptr [rcx + 3], 1 ; fmul qword ptr [rax - 0x2d] ; ret 0xc783
0x000002000046798e : ror byte ptr [rcx + 3], 1 ; ret 0x3b48
0x0000020000117ae6 : ror byte ptr [rcx + 3], 1 ; ror byte ptr [rax - 0x75], 1 ; ret 0x9948
0x00000200003d33ea : ror byte ptr [rcx + rax*2], 0xff ; ret 0x3b44
0x0000020000688082 : ror byte ptr [rcx + rcx*2], 3 ; ret 0x3b48
0x000002000067aad4 : ror byte ptr [rcx + rcx*4 + 0x11], 0x41 ; mov eax, ecx ; ret
0x00000200006b72fa : ror byte ptr [rcx + rcx*4 + 0x44], 0x24 ; push rax ; inc edx ; jmp 0x200006b72d7
0x00000200005878d1 : ror byte ptr [rcx + rcx*4 + 0x7c], cl ; and al, 0x20 ; xor ecx, ecx ; call qword ptr [rsi]
0x0000020000429144 : ror byte ptr [rcx - 0x14b3dbac], 1 ; or bh, bh ; ret 0x5489
0x000002000061f116 : ror byte ptr [rcx - 0x17c7dbbc], 1 ; and cl, ch ; ret 0x33ff
0x00000200002476d6 : ror byte ptr [rcx - 0x2d], cl ; ret 0x34d
0x00000200005697a7 : ror byte ptr [rcx - 0x39], 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000054e444 : ror byte ptr [rcx - 0x3c6af0fa], 0x8a ; ret
0x0000020000659119 : ror byte ptr [rcx - 0x3f], 0xe8 ; add al, 0xf6 ; ret 0x7403
0x000002000049f8ca : ror byte ptr [rcx - 0x3f], 0xe8 ; and byte ptr [rdi + rcx - 0x51], cl ; ret 0xc149
0x0000020000047079 : ror byte ptr [rcx - 0x3f], 0xe8 ; or dword ptr [rbp + 0x23], ecx ; ret
0x00000200000188fb : ror byte ptr [rcx - 0x3f], 0xf8 ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200001b2437 : ror byte ptr [rcx - 0x3f], 1 ; call 0x1ffc2a66c72
0x000002000004bdc2 : ror byte ptr [rcx - 0x3f], cl ; cli ; add ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x0000020000026ff7 : ror byte ptr [rcx - 0x3fccefaf], 1 ; ret
0x0000020000710e9f : ror byte ptr [rcx - 0x40ad89f3], 0xff ; ret
0x00000200001f3943 : ror byte ptr [rcx - 0x73], 4 ; ret
0x0000020000429160 : ror byte ptr [rcx - 0x74b3dbac], 1 ; ret 0x349
0x00000200000a8840 : ror byte ptr [rcx - 0x74bbf7bb], 1 ; ret
0x0000020000122d56 : ror byte ptr [rcx - 0x74beafbf], 0xc0 ; ret
0x0000020000434305 : ror byte ptr [rcx - 0x74cbdbbc], 1 ; ret 0x8b48
0x00000200001c71cb : ror byte ptr [rcx - 0x75], 0x4c ; ret 0x4918
0x0000020000715eff : ror byte ptr [rcx - 0x75], 0x8c ; ret 0x8068
0x00000200001d3bc1 : ror byte ptr [rcx - 0x75], 0xc ; ret 0x818a
0x000002000021f14f : ror byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x28 ; ret
0x000002000015be8b : ror byte ptr [rcx - 0x75], 0xca ; call r10
0x00000200006e0ce9 : ror byte ptr [rcx - 0x75], 0xcb ; add rsp, 0x28 ; jmp qword ptr [r10]
0x000002000015bc5e : ror byte ptr [rcx - 0x75], 0xcb ; call r11
0x000002000046f56d : ror byte ptr [rcx - 0x75], 0xce ; xor edx, edx ; call 0x2000009e099
0x000002000046f2b2 : ror byte ptr [rcx - 0x75], 0xcf ; xor edx, edx ; call 0x2000009e099
0x000002000010f65d : ror byte ptr [rcx - 0x75], 0xd1 ; call 0x2000004b8fe
0x0000020000020d09 : ror byte ptr [rcx - 0x75], 0xd6 ; mov rcx, r12 ; call r15
0x00000200006e2dbc : ror byte ptr [rcx - 0x75], 0xd6 ; mov rcx, r15 ; call rax
0x00000200004c82c8 : ror byte ptr [rcx - 0x75], 0xe3 ; pop rdi ; ret
0x000002000001d9d0 : ror byte ptr [rcx - 0x75], 1 ; add byte ptr [r8 + 0x3b], r9b ; ret
0x0000020000469c69 : ror byte ptr [rcx - 0x75], 1 ; int 0xff
0x00000200003f64d8 : ror byte ptr [rcx - 0x75], 1 ; or byte ptr [r9 - 0x7d], cl ; ret
0x000002000001cd83 : ror byte ptr [rcx - 0x75], 1 ; ret
0x00000200007a3b36 : ror byte ptr [rcx - 0x75], 1 ; ret 0x148b
0x00000200000b9795 : ror byte ptr [rcx - 0x75], 1 ; ret 0x2348
0x00000200000ba6c3 : ror byte ptr [rcx - 0x75], 1 ; ret 0x348
0x0000020000152ab1 : ror byte ptr [rcx - 0x75], 1 ; ret 0x8349
0x00000200000dbe47 : ror byte ptr [rcx - 0x75], 1 ; ret 0x8b48
0x00000200000b8111 : ror byte ptr [rcx - 0x75], 1 ; ret 0x8d4c
0x0000020000058dad : ror byte ptr [rcx - 0x75], 1 ; ret 0xf41
0x0000020000546ff2 : ror byte ptr [rcx - 0x75], 1 ; ret 0xf748
0x00000200000dec51 : ror byte ptr [rcx - 0x75], 4 ; ret 0x3b49
0x0000020000615a37 : ror byte ptr [rcx - 0x75], cl ; int 0xe8
0x00000200004a1db2 : ror byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000009e096
0x0000020000528462 : ror byte ptr [rcx - 0x75], cl ; iretd ; call 0x20000157887
0x0000020000626b80 : ror byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000024d007
0x00000200006beeca : ror byte ptr [rcx - 0x75], cl ; iretd ; call r11
0x00000200006235b1 : ror byte ptr [rcx - 0x75], cl ; leave ; call 0x2000024d007
0x000002000004920c : ror byte ptr [rcx - 0x75], cl ; ret
0x00000200000d0561 : ror byte ptr [rcx - 0x75], cl ; ret 0x8b41
0x0000020000519719 : ror byte ptr [rcx - 0x75], cl ; ret 0xf748
0x00000200000169b7 : ror byte ptr [rcx - 0x75], cl ; ret 0xf749
0x00000200001e5e9c : ror byte ptr [rcx - 0x75], cl ; retf ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r11]
0x0000020000211f6f : ror byte ptr [rcx - 0x7699c7bf], 0x41 ; ret
0x00000200001ceb3f : ror byte ptr [rcx - 0x76b3f7bf], 1 ; ret
0x00000200000c09fe : ror byte ptr [rcx - 0x77], 0x11 ; pop rdi ; ret
0x00000200000433d0 : ror byte ptr [rcx - 0x77], 0x43 ; test byte ptr [rcx - 0x75], cl ; ret 0xd348
0x000002000078e9f3 : ror byte ptr [rcx - 0x77], 1 ; adc byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret
0x000002000024b34c : ror byte ptr [rcx - 0x77], 1 ; adc cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x000002000001bd12 : ror byte ptr [rcx - 0x77], 2 ; mov eax, ecx ; ret
0x000002000003a51e : ror byte ptr [rcx - 0x77], 9 ; ret
0x00000200001f7281 : ror byte ptr [rcx - 0x7d], 0xc0 ; or byte ptr [rbx], bh ; ret 0xf172
0x000002000004921b : ror byte ptr [rcx - 0x7d], 0xc1 ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x00000200005c474a : ror byte ptr [rcx - 0x7d], 0xc1 ; and byte ptr [rcx - 0x7d], cl ; ret
0x000002000067091b : ror byte ptr [rcx - 0x7d], 0xc2 ; or byte ptr [rbp + 0x3b], al ; ret
0x000002000054ff67 : ror byte ptr [rcx - 0x7d], 0xc7 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4120
0x000002000013376c : ror byte ptr [rcx - 0x7d], 1 ; jmp 0x1ff8af8ac7e
0x0000020000404b9c : ror byte ptr [rcx - 0x7d], 1 ; jmp 0x2004902d6ac
0x0000020000428638 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4102
0x0000020000240980 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4408
0x0000020000052368 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4804
0x00000200005abc8c : ror byte ptr [rcx - 0x7d], 1 ; ret 0x8102
0x00000200005abdb6 : ror byte ptr [rcx - 0x7d], 1 ; ret 0xb802
0x00000200001464e0 : ror byte ptr [rcx - 0x7d], cl ; ret 0x4f05
0x00000200004ac14c : ror byte ptr [rcx - 0x7d], cl ; ret 0x8b28
0x00000200007c64aa : ror byte ptr [rcx - 0x7f], 0xc8 ; ret 0
0x00000200003cc93a : ror byte ptr [rcx - 0xca520eb], cl ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x000002000024bd8d : ror byte ptr [rcx - 1], 1 ; ret
0x00000200001000e6 : ror byte ptr [rcx - 1], 1 ; ret 0xb60f
0x000002000077890f : ror byte ptr [rcx - 1], 1 ; ret 0xd348
0x000002000016e34e : ror byte ptr [rcx - 1], cl ; enter -0x72b7, 0x2c ; ret 0x8b48
0x000002000043d063 : ror byte ptr [rcx - 1], cl ; jrcxz 0x2000043d029 ; add dword ptr [rax], eax ; add al, al ; ret
0x000002000079c281 : ror byte ptr [rcx], 0 ; add al, ch ; ret 0xdbb0
0x0000020000514840 : ror byte ptr [rcx], 1 ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x00000200003cddd3 : ror byte ptr [rcx], cl ; or eax, 0xfff352d6 ; ret
0x0000020000589036 : ror byte ptr [rdi + 0x48], 0x3b ; ret 0x870f
0x0000020000052be3 : ror byte ptr [rdi + rcx + 0x43], 1 ; rol dword ptr [rcx - 0x75], 1 ; ret 0x8348
0x00000200001861d3 : ror byte ptr [rdi + rcx + 0x45], 1 ; ret 0x85e9
0x000002000003b00e : ror byte ptr [rdi + rcx + 0x45], cl ; ret 0xf41
0x000002000053f32a : ror byte ptr [rdi + rcx + 0x47], 1 ; ret
0x0000020000088312 : ror byte ptr [rdi - 0x75], 0xc ; ret 0x854d
0x00000200005f8be2 : ror byte ptr [rdi], 0 ; add byte ptr [rax - 1], cl ; ret 0xba0f
0x000002000078ef44 : ror byte ptr [rdi], 0x20 ; ret
0x000002000014ba21 : ror byte ptr [rdi], 0x30 ; ret
0x00000200001dbd4c : ror byte ptr [rdi], 0x32 ; shl rdx, 0x20 ; or rax, rdx ; ret
0x000002000064f8e5 : ror byte ptr [rdi], 0x44 ; ret
0x000002000065d211 : ror byte ptr [rdi], 0x44 ; ret 0x189
0x00000200006063e3 : ror byte ptr [rdi], 0x44 ; ret 0x4589
0x0000020000648856 : ror byte ptr [rdi], 0x44 ; ret 0x4ba
0x0000020000647cab : ror byte ptr [rdi], 0x44 ; ret 0x558d
0x0000020000647ebd : ror byte ptr [rdi], 0x44 ; ret 0x568d
0x00000200006483a5 : ror byte ptr [rdi], 0x44 ; ret 0x5ba
0x00000200006479c1 : ror byte ptr [rdi], 0x44 ; ret 0x6ba
0x0000020000647697 : ror byte ptr [rdi], 0x44 ; ret 0x7ba
0x00000200001d0f6c : ror byte ptr [rdi], 0x44 ; ret 0x8189
0x00000200003da268 : ror byte ptr [rdi], 0x44 ; ret 0x8ba
0x00000200006478ec : ror byte ptr [rdi], 0x44 ; ret 0x9ba
0x00000200006479d7 : ror byte ptr [rdi], 0x44 ; ret 0x9ce9
0x00000200001d0f56 : ror byte ptr [rdi], 0x44 ; ret 0xaba
0x00000200000844fc : ror byte ptr [rdi], 0x44 ; ret 0xc103
0x00000200005045a1 : ror byte ptr [rdi], 0x44 ; ret 0xccc3
0x000002000054d473 : ror byte ptr [rdi], 0x44 ; ret 0xd08b
0x00000200005215fc : ror byte ptr [rdi], 0x44 ; ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop rbx ; ret
0x00000200003f7e24 : ror byte ptr [rdi], 0x45 ; ret
0x0000020000432ba2 : ror byte ptr [rdi], 0x45 ; ret 0x394c
0x00000200004568c0 : ror byte ptr [rdi], 0x45 ; ret 0x8a44
0x00000200001d98a8 : ror byte ptr [rdi], 0x45 ; ret 0xca84
0x00000200004b8617 : ror byte ptr [rdi], 0x49 ; ret
0x000002000001ac38 : ror byte ptr [rdi], 0x4e ; ret 0x4589
0x00000200006c0903 : ror byte ptr [rdi], 0x82 ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x000002000016bf80 : ror byte ptr [rdi], 0x82 ; ret
0x0000020000448908 : ror byte ptr [rdi], 0x82 ; ret 0x162d
0x00000200004489ae : ror byte ptr [rdi], 0x82 ; xchg eax, edi ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x00000200000b2354 : ror byte ptr [rdi], 0x83 ; pop rdx ; add al, byte ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0x8b48
0x00000200000b20ee : ror byte ptr [rdi], 0x83 ; xchg byte ptr [rip - 0xbf0000], al ; ret 0x8b48
0x0000020000164bc9 : ror byte ptr [rdi], 0x84 ; add dword ptr [rax], 0 ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000066af1b : ror byte ptr [rdi], 0x84 ; add dword ptr [rax], 0x8b440000 ; ret
0x000002000049e2d7 : ror byte ptr [rdi], 0x84 ; add dword ptr [rax], r8d ; add byte ptr [rcx - 1], al ; ret
0x000002000012d46f : ror byte ptr [rdi], 0x84 ; add eax, 0xce8b0008 ; call rax
0x00000200005fb975 : ror byte ptr [rdi], 0x84 ; call 0x200345fb002
0x000002000048a6bf : ror byte ptr [rdi], 0x84 ; call qword ptr [rax]
0x0000020000185fd1 : ror byte ptr [rdi], 0x84 ; call qword ptr [rcx]
0x000002000006cd0f : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200000a8881 : ror byte ptr [rdi], 0x84 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000413d6d : ror byte ptr [rdi], 0x84 ; cwde ; call qword ptr [rdi]
0x00000200003e83ad : ror byte ptr [rdi], 0x84 ; fbstp dword ptr [rbp - 0x74bbffe7] ; ret
0x00000200006ccac3 : ror byte ptr [rdi], 0x84 ; imul eax, dword ptr [rbx], 0 ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000078173c : ror byte ptr [rdi], 0x84 ; insd dword ptr [rdi], dx ; ret 0xffff
0x000002000010608b : ror byte ptr [rdi], 0x84 ; jmp 0x20000106056
0x0000020000413d12 : ror byte ptr [rdi], 0x84 ; jmp 0x20000413d1a
0x0000020000417162 : ror byte ptr [rdi], 0x84 ; jmp rdx
0x0000020000108af1 : ror byte ptr [rdi], 0x84 ; lea esp, dword ptr [rdi - 0x74bbfffa] ; ret
0x000002000049bc51 : ror byte ptr [rdi], 0x84 ; mov eax, 0xf600133e ; ret
0x000002000004fc2d : ror byte ptr [rdi], 0x84 ; mov ebx, 0x8bfffffb ; ret
0x00000200006cda5b : ror byte ptr [rdi], 0x84 ; mov esi, 0xf6000000 ; ret 0x7401
0x00000200005b733f : ror byte ptr [rdi], 0x84 ; mov esp, 0xfffff6ef ; ret 0x3b41
0x00000200007ce6d6 : ror byte ptr [rdi], 0x84 ; or eax, 0x6b000001 ; ret
0x0000020000045943 : ror byte ptr [rdi], 0x84 ; or edi, dword ptr [rcx + 0x13] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004fc0d1 : ror byte ptr [rdi], 0x84 ; pop rax ; mov ecx, 0x8b44000e ; ret
0x0000020000688a91 : ror byte ptr [rdi], 0x84 ; pop rbx ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x7675
0x0000020000180fcf : ror byte ptr [rdi], 0x84 ; pushfq ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200000632be : ror byte ptr [rdi], 0x84 ; ret
0x00000200002444fb : ror byte ptr [rdi], 0x84 ; ret 0
0x00000200004b1fc3 : ror byte ptr [rdi], 0x84 ; ret 0x121d
0x00000200004af7aa : ror byte ptr [rdi], 0x84 ; ret 0x123a
0x000002000004b2a2 : ror byte ptr [rdi], 0x84 ; ret 0x1339
0x0000020000431d3d : ror byte ptr [rdi], 0x84 ; ret 0x170c
0x00000200003fecc1 : ror byte ptr [rdi], 0x84 ; ret 0x18eb
0x00000200003edb47 : ror byte ptr [rdi], 0x84 ; ret 0x197e
0x00000200007aa45b : ror byte ptr [rdi], 0x84 ; ret 0x1df
0x0000020000524994 : ror byte ptr [rdi], 0x84 ; ret 0x920
0x0000020000566819 : ror byte ptr [rdi], 0x84 ; ret 0x962
0x0000020000545713 : ror byte ptr [rdi], 0x84 ; ret 0xab8
0x00000200000e1bdc : ror byte ptr [rdi], 0x84 ; ret 0xc46
0x00000200000bfdaf : ror byte ptr [rdi], 0x84 ; ret 0xdc3
0x000002000050bc8d : ror byte ptr [rdi], 0x84 ; ret 0xe12
0x000002000050381c : ror byte ptr [rdi], 0x84 ; ret 0xe62
0x000002000050260d : ror byte ptr [rdi], 0x84 ; ret 0xe72
0x00000200001654ef : ror byte ptr [rdi], 0x84 ; ret 0xeb5f
0x00000200004fc45c : ror byte ptr [rdi], 0x84 ; ret 0xeb6
0x00000200005de5b9 : ror byte ptr [rdi], 0x84 ; ret 0xefef
0x00000200005e9a75 : ror byte ptr [rdi], 0x84 ; ret 0xf19b
0x00000200001b2ef4 : ror byte ptr [rdi], 0x84 ; ret 0xf87c
0x0000020000050cd5 : ror byte ptr [rdi], 0x84 ; ret 0xfffd
0x00000200003f9542 : ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x00000200000685c9 : ror byte ptr [rdi], 0x84 ; ret 1
0x00000200006e478f : ror byte ptr [rdi], 0x84 ; ret 2
0x0000020000412103 : ror byte ptr [rdi], 0x84 ; ret 3
0x000002000079caa5 : ror byte ptr [rdi], 0x84 ; ret 4
0x00000200000da7e6 : ror byte ptr [rdi], 0x84 ; ret 5
0x00000200000a8770 : ror byte ptr [rdi], 0x84 ; rol byte ptr [rcx], 0 ; add byte ptr [rcx - 0xa], al ; ret
0x00000200005538a5 : ror byte ptr [rdi], 0x84 ; sbb eax, 0x8b4c000a ; ret
0x000002000002d3c2 : ror byte ptr [rdi], 0x84 ; scasb al, byte ptr [rdi] ; ret
0x0000020000478e62 : ror byte ptr [rdi], 0x84 ; stc ; ret 0x14
0x000002000048a9a4 : ror byte ptr [rdi], 0x84 ; std ; or eax, 0x3480014 ; ret 0xdb33
0x00000200000c6cf2 : ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; ja 0x200000c6d0d ; add al, ch ; ret 0xf909
0x000002000018cf0f : ror byte ptr [rdi], 0x84 ; xchg byte ptr [rcx - 0x11], ch ; dec dword ptr [rax - 0x7d] ; ret 0x830c
0x000002000066c332 : ror byte ptr [rdi], 0x84 ; xor dword ptr [rax + rax], eax ; add byte ptr [rbx], bh ; ret
0x000002000051f913 : ror byte ptr [rdi], 0x84 ; xor eax, 0x8b000948 ; ret
0x0000020000050060 : ror byte ptr [rdi], 0x85 ; add qword ptr [r8], r8 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005922bf : ror byte ptr [rdi], 0x85 ; call rbx
0x000002000044f023 : ror byte ptr [rdi], 0x85 ; cld ; out 0x15, eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000465cde : ror byte ptr [rdi], 0x85 ; div dword ptr [rdi - 0x7cb7ffeb] ; ret
0x00000200000f8ae9 : ror byte ptr [rdi], 0x85 ; in al, 0x26 ; or eax, dword ptr [rax] ; ret
0x000002000001b868 : ror byte ptr [rdi], 0x85 ; jnp 0x2000001b811 ; adc al, 0 ; ret
0x000002000007ec2b : ror byte ptr [rdi], 0x85 ; lds rdx, ptr [r8] ; add dh, dh ; ret
0x00000200007816fc : ror byte ptr [rdi], 0x85 ; lodsd eax, dword ptr [rsi] ; ret 0xffff
0x00000200004dfe53 : ror byte ptr [rdi], 0x85 ; mov dh, 0xeb ; str word ptr [rax - 0x75] ; ret
0x000002000049486d : ror byte ptr [rdi], 0x85 ; mov esi, 0x8b00139a ; ret 0x8348
0x00000200000ddf19 : ror byte ptr [rdi], 0x85 ; movsxd rcx, dword ptr [rax + r8] ; xor eax, eax ; ret
0x000002000003c8e9 : ror byte ptr [rdi], 0x85 ; or cl, byte ptr [rsi] ; adc eax, dword ptr [rax] ; ret
0x000002000005056f : ror byte ptr [rdi], 0x85 ; pop rax ; add byte ptr [rbx], dl ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000072dcb : ror byte ptr [rdi], 0x85 ; pop rbp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000020000421986 : ror byte ptr [rdi], 0x85 ; pop rdx ; ret 0x17
0x0000020000050895 : ror byte ptr [rdi], 0x85 ; pop rsp ; call qword ptr [rdx]
0x000002000009aab6 : ror byte ptr [rdi], 0x85 ; popfq ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200007afb86 : ror byte ptr [rdi], 0x85 ; push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000004f3d5 : ror byte ptr [rdi], 0x85 ; ret
0x00000200004f2751 : ror byte ptr [rdi], 0x85 ; ret 0
0x000002000008c7cb : ror byte ptr [rdi], 0x85 ; ret 0x1029
0x00000200004c32eb : ror byte ptr [rdi], 0x85 ; ret 0x1153
0x000002000000fba4 : ror byte ptr [rdi], 0x85 ; ret 0x152e
0x00000200003f7da9 : ror byte ptr [rdi], 0x85 ; ret 0x190b
0x00000200007945d5 : ror byte ptr [rdi], 0x85 ; ret 0x2ec
0x0000020000114b19 : ror byte ptr [rdi], 0x85 ; ret 0x620
0x00000200005881ce : ror byte ptr [rdi], 0x85 ; ret 0xe6d7
0x00000200004fca4b : ror byte ptr [rdi], 0x85 ; ret 0xeb4
0x00000200007c771b : ror byte ptr [rdi], 0x85 ; ret 0xfe1b
0x0000020000063a92 : ror byte ptr [rdi], 0x85 ; ret 0xfff9
0x000002000006e42c : ror byte ptr [rdi], 0x85 ; ret 0xfffd
0x00000200000ae61d : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000002000007823d : ror byte ptr [rdi], 0x85 ; ret 2
0x00000200000375bd : ror byte ptr [rdi], 0x85 ; sahf ; adc rax, qword ptr [r8] ; ret
0x00000200005a94f1 : ror byte ptr [rdi], 0x85 ; seto cl ; dec dword ptr [rax + 0x2b] ; ret 0xc148
0x000002000050a7b9 : ror byte ptr [rdi], 0x85 ; shl byte ptr [rax], 0xe ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x0000020000587022 : ror byte ptr [rdi], 0x85 ; stosd dword ptr [rdi], eax ; test al, 0xe6 ; jmp qword ptr [rcx]
0x00000200000b8519 : ror byte ptr [rdi], 0x85 ; wait ; and dword ptr [rsi], ecx ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006ca93f : ror byte ptr [rdi], 0x86 ; ret
0x00000200004120a7 : ror byte ptr [rdi], 0x87 ; ret
0x00000200007a961b : ror byte ptr [rdi], 0x88 ; and eax, 0x8a0001e5 ; ret
0x000002000045d50b : ror byte ptr [rdi], 0x88 ; call qword ptr [rcx]
0x000002000002d354 : ror byte ptr [rdi], 0x88 ; cli ; ret
0x00000200003c8e92 : ror byte ptr [rdi], 0x88 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0
0x0000020000489596 : ror byte ptr [rdi], 0x88 ; jmp qword ptr [rax]
0x0000020000512d73 : ror byte ptr [rdi], 0x88 ; jmp rbx
0x0000020000558e8b : ror byte ptr [rdi], 0x88 ; mov esi, 0x8b0009e5 ; ret
0x000002000046bfdc : ror byte ptr [rdi], 0x88 ; or byte ptr [rax], r8b ; add dh, dh ; ret
0x00000200004a0522 : ror byte ptr [rdi], 0x88 ; out dx, al ; call qword ptr [rdx]
0x00000200005bd013 : ror byte ptr [rdi], 0x88 ; pop rsp ; ret 0xffe9
0x000002000079b04e : ror byte ptr [rdi], 0x88 ; push rsi ; add al, byte ptr [rax] ; add bh, bh ; ret
0x0000020000054972 : ror byte ptr [rdi], 0x88 ; ret
0x00000200001b56a8 : ror byte ptr [rdi], 0x88 ; ret 0
0x0000020000443065 : ror byte ptr [rdi], 0x88 ; ret 0x1667
0x00000200003e134f : ror byte ptr [rdi], 0x88 ; ret 0x19fe
0x00000200007a9d1e : ror byte ptr [rdi], 0x88 ; ret 0x1e3
0x000002000053a957 : ror byte ptr [rdi], 0x88 ; ret 0xb01
0x0000020000506459 : ror byte ptr [rdi], 0x88 ; ret 0xe3e
0x0000020000590e3c : ror byte ptr [rdi], 0x88 ; ret 0xe7af
0x00000200005b60d0 : ror byte ptr [rdi], 0x88 ; ret 0xf816
0x0000020000587ad6 : ror byte ptr [rdi], 0x88 ; ret 0xffe6
0x00000200003f85cf : ror byte ptr [rdi], 0x88 ; ret 0xfffe
0x000002000044d1a3 : ror byte ptr [rdi], 0x88 ; ret 1
0x00000200004dca11 : ror byte ptr [rdi], 0x88 ; ret 2
0x0000020000515d9f : ror byte ptr [rdi], 0x88 ; ret 9
0x0000020000077b6f : ror byte ptr [rdi], 0x88 ; std ; and edx, dword ptr [rcx] ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x0000020000453348 : ror byte ptr [rdi], 0x89 ; cmp eax, 0x8b0015ba ; ret
0x0000020000515ad6 : ror byte ptr [rdi], 0x89 ; int 0xc3
0x000002000019a6c8 : ror byte ptr [rdi], 0x89 ; je 0x2000019a6b3 ; int1 ; push rsi ; ret 0xf42
0x0000020000531f10 : ror byte ptr [rdi], 0x89 ; mov ebx, 0x8b000c24 ; ret
0x00000200005588ab : ror byte ptr [rdi], 0x89 ; pop rbx ; jmp 0x1ffc45488c5
0x0000020000531b09 : ror byte ptr [rdi], 0x89 ; ret
0x0000020000518ac0 : ror byte ptr [rdi], 0x89 ; ret 2
0x0000020000515b62 : ror byte ptr [rdi], 0x8c ; cdq ; ret
0x0000020000030e85 : ror byte ptr [rdi], 0x94 ; ret
0x0000020000032d63 : ror byte ptr [rdi], 0x94 ; ret 0x2b49
0x00000200007caba6 : ror byte ptr [rdi], 0x94 ; ret 0x49e9
0x00000200001fb940 : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x00000200000b8165 : ror byte ptr [rdi], 0x95 ; ret
0x0000020000401f30 : ror byte ptr [rdi], 0x95 ; ret 0x3d83
0x00000200001fc397 : ror byte ptr [rdi], 0x95 ; ret 0x8941
0x00000200006bbfc2 : ror byte ptr [rdi], 0x95 ; ret 0xd03b
0x000002000052cc39 : ror byte ptr [rdi], 0x99 ; ret
0x0000020000024aec : ror byte ptr [rdi], 0x9e ; ret
0x000002000010c91c : ror byte ptr [rdi], 0xaf ; ret
0x00000200000dd9a3 : ror byte ptr [rdi], 0xb6 ; leave ; mov cr8, rcx ; ret
0x00000200001a8802 : ror byte ptr [rdi], 0xb6 ; ret 0xf44
0x000002000041708b : ror byte ptr [rdi], 0xb7 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000002000041ed18 : ror byte ptr [rdi], 0xb7 ; add r9b, byte ptr [rax + 0x2b] ; ret
0x000002000003b972 : ror byte ptr [rdi], 0xb7 ; ret
0x00000200007d2714 : ror byte ptr [rdi], 0xb7 ; ret 0x894c
0x00000200002117cb : ror byte ptr [rdi], 0xb7 ; ret 0xe77
0x000002000002508d : ror byte ptr [rdi], 0xbd ; rol byte ptr [rcx + 0x2b], 0xc2 ; jmp 0x20000025047
0x00000200000b453f : ror byte ptr [rdi], 1 ; add dword ptr [rbx + 3], 0 ; add bh, bh ; ret 0x8b4d
0x0000020000097ed1 : ror byte ptr [rdi], 1 ; add eax, 0x3103ef ; ret
0x0000020000072a03 : ror byte ptr [rdi], 1 ; cmp dword ptr [rdx + 1], 0 ; add byte ptr [rax - 9], cl ; ret 0xfff
0x00000200007a3c26 : ror byte ptr [rdi], 1 ; mov dh, 0x41 ; and al, cl ; call 0x200753c7740
0x000002000016042a : ror byte ptr [rdi], 1 ; mov dh, 0x45 ; ret
0x000002000015f196 : ror byte ptr [rdi], 1 ; mov dh, 5 ; ret 0x24a2
0x00000200004b708c : ror byte ptr [rdi], 1 ; ret
0x00000200004029dd : ror byte ptr [rdi], 1 ; ret 0x854d
0x000002000007586e : ror byte ptr [rdi], 1 ; ret 0xd08b
0x000002000014eacf : ror byte ptr [rdi], 1 ; scasb al, byte ptr [rdi] ; clc ; ret
0x000002000007d516 : ror byte ptr [rdi], 1 ; stosd dword ptr [rdi], eax ; ret 0x3366
0x00000200000a293c : ror byte ptr [rdi], 1 ; test dword ptr [rax + rbp], ecx ; str word ptr [rcx - 0x75] ; ret
0x00000200000aff41 : ror byte ptr [rdi], 1 ; test dword ptr [rdi - 0x9fffff6], esp ; ret 0xf04
0x00000200004c5203 : ror byte ptr [rdi], 1 ; xchg dword ptr [rbx], edi ; or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x0000020000404dd2 : ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x0000020000688089 : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x0000020000100aff : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000200004c2de5 : ror byte ptr [rdi], 1 ; xchg ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000147cdb : ror byte ptr [rdi], 1 ; xor byte ptr [rdx + 0x58], bl ; pop rcx ; ret
0x00000200001ade5e : ror byte ptr [rdi], cl ; test bl, ch ; cli ; idiv edi ; call rdx
0x00000200001270f3 : ror byte ptr [rdi], cl ; test byte ptr [rdx - 0x74000003], dh ; ret 0x6948
0x000002000021fc9a : ror byte ptr [rdi], cl ; test cl, dh ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000020000056f21 : ror byte ptr [rdi], cl ; test dword ptr [rcx + rdi*4], esi ; adc al, byte ptr [rax] ; xor al, al ; ret
0x000002000055d361 : ror byte ptr [rdi], cl ; test eax, eax ; ret
0x000002000008396b : ror byte ptr [rdi], cl ; test ebp, ebp ; xchg eax, ebp ; adc byte ptr [rax], al ; ret
0x0000020000458d93 : ror byte ptr [rdi], cl ; test ecx, edi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret
0x0000020000494c61 : ror byte ptr [rdi], cl ; test ecx, esp ; xchg eax, edi ; adc eax, dword ptr [rax] ; ret
0x000002000004a2fc : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000002000053d7a7 : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x349
0x00000200001ae204 : ror byte ptr [rdx + 9], 0xc ; ret 0xff49
0x0000020000092bdc : ror byte ptr [rdx - 0x2f31700], 0xff ; push rsi ; ret 0xf03
0x0000020000092bc2 : ror byte ptr [rdx - 0x3021700], 0xff ; push rsi ; ret 0xf03
0x00000200000b7aa0 : ror byte ptr [rdx - 0x3e09ddb7], 0x10 ; je 0x200000b7ab3 ; ret
0x000002000007b65b : ror byte ptr [rdx - 0x73], 4 ; adc dword ptr [rcx + 0x3b], ecx ; ret
0x00000200006b713f : ror byte ptr [rdx - 0x75], 0x14 ; ret 0x8d4b
0x00000200002018e0 : ror byte ptr [rdx - 0x75], 4 ; ret 0x8b48
0x000002000022e15d : ror byte ptr [rdx], 1 ; or dword ptr [rdi], ecx ; add cl, byte ptr [rax + 0x33] ; ret
0x0000020000687e6e : ror byte ptr [rsi + 0x39], 0x1c ; ret 0xbc74
0x0000020000402144 : ror byte ptr [rsi + 6], 1 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000483a29 : ror byte ptr [rsp + rax*2 + 0xf], 0xb6 ; ret
0x00000200001a52b8 : ror byte ptr [rsp + rcx*2], 3 ; ret
0x0000020000094b1e : ror byte ptr ds:[rbx], 1 ; add byte ptr [rbx - 0x7af0fe18], al ; ret 2
0x000002000014926a : ror ch, cl ; add byte ptr [rax], al ; ret
0x000002000014966a : ror cl, cl ; add byte ptr [rax], al ; ret
0x000002000014916a : ror dh, cl ; add byte ptr [rax], al ; ret
0x00000200001304c3 : ror dl, 0x1c ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000014956a : ror dl, cl ; add byte ptr [rax], al ; ret
0x00000200006bb06a : ror dl, cl ; ret
0x0000020000219ede : ror dword ptr [r9 - 0x74bee789], cl ; ret 0x8b48
0x000002000006f28b : ror dword ptr [r9 - 0x77], 1 ; ret
0x0000020000546c3b : ror dword ptr [rax + 0x23], 1 ; ror dword ptr [rax + 0x2b], 1 ; ret 0xd233
0x0000020000064b05 : ror dword ptr [rax + 0x2b], 0x46 ; sbb byte ptr [rax + 3], cl ; ret
0x0000020000546c3e : ror dword ptr [rax + 0x2b], 1 ; ret 0xd233
0x0000020000052365 : ror dword ptr [rax + 0x2b], cl ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4804
0x0000020000097cca : ror dword ptr [rax + 0x33], 1 ; ret 0x2348
0x0000020000431dfb : ror dword ptr [rax + 0x33], 1 ; ret 0x8d48
0x00000200002406d7 : ror dword ptr [rax + 0x33], cl ; ror byte ptr [rax - 0x2d], 1 ; ret 0x8341
0x0000020000099231 : ror dword ptr [rax + 0x39], 0x3c ; ret 0x8d4c
0x00000200000cf991 : ror dword ptr [rax + 0x39], 0x74 ; ret
0x000002000002b131 : ror dword ptr [rax + 0x3b], -0x30 ; jb 0x2000002b12c ; xor eax, eax ; ret
0x0000020000687ff4 : ror dword ptr [rax + 0x3b], -0x30 ; setae al ; ret
0x000002000013cf35 : ror dword ptr [rax + 0x3b], -0x3e ; jb 0x2000013cf31 ; ret
0x000002000067aac4 : ror dword ptr [rax + 0x3b], 1 ; ret 0xec75
0x00000200000a0a55 : ror dword ptr [rax + 0x3b], 1 ; ret 0xf572
0x000002000013c101 : ror dword ptr [rax + 0x63], 1 ; ret 0x10eb
0x00000200002480a7 : ror dword ptr [rax + 0x63], cl ; ret 0x8d48
0x0000020000143aee : ror dword ptr [rax + 0x6650144c], -1 ; ret
0x000002000011ed44 : ror dword ptr [rax + 0xb], -0x3f ; ret
0x0000020000778b0a : ror dword ptr [rax + 0xb], 1 ; ret 0x5c89
0x000002000024b298 : ror dword ptr [rax + 0xb], 1 ; ret 0x8b48
0x0000020000212fb9 : ror dword ptr [rax + 0xb], 1 ; ret 0xb941
0x00000200000cb22b : ror dword ptr [rax + 0xf], -0x44 ; ret 0x4489
0x0000020000170b8b : ror dword ptr [rax + 0xf], -0x4d ; ret 0x4c89
0x0000020000618f39 : ror dword ptr [rax + 0xf], -0x51 ; ret 0x3d48
0x0000020000207b73 : ror dword ptr [rax + 0xf], -0x51 ; ret 0x694d
0x00000200001476e4 : ror dword ptr [rax + 0xf], 0x43 ; ret
0x0000020000186a0c : ror dword ptr [rax + 0xf], 0x43 ; ret 0xba48
0x000002000049fdd5 : ror dword ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; sal dh, 1 ; ret 0x7401
0x00000200007283d6 : ror dword ptr [rax + 1], 0xd ; ret 0xbfcd
0x00000200000ddfda : ror dword ptr [rax + 3], -0x40 ; cmp rdi, qword ptr [r8 + rax*8] ; jb 0x200000ddfaf ; jmp 0x200000ddfdc
0x000002000024c676 : ror dword ptr [rax + 3], 1 ; ret
0x000002000012e17c : ror dword ptr [rax + 3], 1 ; ret 0x3b44
0x00000200003e4c61 : ror dword ptr [rax + 3], 1 ; ret 0x8341
0x0000020000125d4d : ror dword ptr [rax + 3], 1 ; ret 0x8b48
0x0000020000002d3a : ror dword ptr [rax + 3], 1 ; ret 0x8b49
0x000002000069805e : ror dword ptr [rax + 3], cl ; sar bh, cl ; ret
0x000002000046e02d : ror dword ptr [rax + 9], 0x54 ; ret
0x000002000013d265 : ror dword ptr [rax - 0x2f], -8 ; dec rax ; ret
0x000002000043dbfc : ror dword ptr [rax - 0x2f], -8 ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x000002000013d24c : ror dword ptr [rax - 0x2f], -8 ; ret
0x000002000011c4ea : ror dword ptr [rax - 0x3b7cb7fd], 0x30 ; pop rbx ; ret
0x00000200000a98f9 : ror dword ptr [rax - 0x3f], -0x18 ; and byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200000c66ac : ror dword ptr [rax - 0x3f], -0x18 ; cmp bl, al ; xor eax, eax ; ret
0x00000200000f5d26 : ror dword ptr [rax - 0x3f], -0x18 ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax], eax ; ret
0x00000200001819ef : ror dword ptr [rax - 0x3f], -0x20 ; add cl, byte ptr [rax + 0x3b] ; ret 0x1973
0x00000200004c5988 : ror dword ptr [rax - 0x3f], -0x20 ; and byte ptr [rax + 0xb], cl ; ret 0x3b48
0x00000200000c4679 : ror dword ptr [rax - 0x3f], -6 ; add ecx, dword ptr [rcx - 0x75] ; ret
0x000002000004e999 : ror dword ptr [rax - 0x3f], 1 ; call 0x1ffc24031b4
0x00000200007a0805 : ror dword ptr [rax - 0x3f], 1 ; cli ; adc byte ptr [rax - 0x75], cl ; ret 0xccc3
0x00000200001d3cdc : ror dword ptr [rax - 0x73], 0x14 ; ret 0xb70f
0x000002000002692a : ror dword ptr [rax - 0x73], 0x3c ; ret
0x000002000061ad95 : ror dword ptr [rax - 0x73], 4 ; or dword ptr [rax + 0x3b], ecx ; ret 0xec72
0x000002000003b285 : ror dword ptr [rax - 0x73], 4 ; ret 0xccc3
0x00000200007b2e33 : ror dword ptr [rax - 0x73], cl ; adc byte ptr [r9 - 0x39], cl ; ret
0x00000200004f0e92 : ror dword ptr [rax - 0x75], -0x36 ; and qword ptr [rax], 0 ; jmp 0x200004f0e67
0x000002000017a173 : ror dword ptr [rax - 0x75], -0x38 ; call rdx
0x000002000059553c : ror dword ptr [rax - 0x75], -0x74 ; ret 0x2ba0
0x0000020000058895 : ror dword ptr [rax - 0x75], -0x74 ; ret 0xb440
0x00000200005954fe : ror dword ptr [rax - 0x75], -0x7c ; ret 0x2ba0
0x000002000024e31c : ror dword ptr [rax - 0x75], -0x7c ; ret 0x9310
0x0000020000485278 : ror dword ptr [rax - 0x75], -0x7c ; ret 0x9540
0x000002000052a01e : ror dword ptr [rax - 0x75], 0x14 ; ret 0x2b48
0x0000020000167f96 : ror dword ptr [rax - 0x75], 0x1c ; ret 0x3840
0x0000020000167faf : ror dword ptr [rax - 0x75], 0x1c ; ret 0x8148
0x000002000000ba91 : ror dword ptr [rax - 0x75], 0x49 ; adc bl, ch ; int1 ; ret
0x000002000065e141 : ror dword ptr [rax - 0x75], 0x4d ; or byte ptr [rbp - 0x4c], dh ; inc rdx ; jmp 0x2000065e183
0x00000200001ce13e : ror dword ptr [rax - 0x75], 0x5c ; and al, 8 ; mov qword ptr [r8], r11 ; ret
0x00000200000b567c : ror dword ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000070388b : ror dword ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov qword ptr [rdx], r11 ; ret
0x000002000000a7b1 : ror dword ptr [rax - 0x75], 0x7c ; and al, 0x10 ; ret
0x00000200003fa7cb : ror dword ptr [rax - 0x75], 0x7c ; and al, 0x18 ; ret
0x00000200007bc04d : ror dword ptr [rax - 0x75], 0xd ; sti ; ret 0xffbe
0x00000200000de683 : ror dword ptr [rax - 0x75], 1 ; add al, 0xd0 ; ret
0x000002000067aaad : ror dword ptr [rax - 0x75], 1 ; add cl, byte ptr [rax + 0x3b] ; ret 0x1974
0x000002000011e8eb : ror dword ptr [rax - 0x75], 1 ; iretd ; call rbx
0x0000020000454b01 : ror dword ptr [rax - 0x75], 1 ; or al, ch ; pop rax ; ret 0x33ff
0x00000200000365f6 : ror dword ptr [rax - 0x75], 1 ; ret
0x00000200003c9bd2 : ror dword ptr [rax - 0x75], 1 ; ret 0x2b48
0x00000200000d8ed5 : ror dword ptr [rax - 0x75], 1 ; ret 0x3349
0x000002000004eeda : ror dword ptr [rax - 0x75], 1 ; ret 0x348
0x0000020000009bad : ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x000002000061b29a : ror dword ptr [rax - 0x75], 1 ; ret 0x48f0
0x00000200006bed7c : ror dword ptr [rax - 0x75], 1 ; ret 0x8b4c
0x000002000004339c : ror dword ptr [rax - 0x75], 1 ; ret 0xc148
0x000002000053aec8 : ror dword ptr [rax - 0x75], 1 ; sbb cl, byte ptr [rax - 0x7d] ; ret
0x00000200001f3d94 : ror dword ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x7c], eax ; ret 0xe75
0x00000200000599fd : ror dword ptr [rax - 0x75], cl ; add eax, 0x34fa8b ; call rax
0x000002000005994f : ror dword ptr [rax - 0x75], cl ; add eax, 0x34fb39 ; call rax
0x000002000005989e : ror dword ptr [rax - 0x75], cl ; add eax, 0x34fbea ; call rax
0x00000200000597ef : ror dword ptr [rax - 0x75], cl ; add eax, 0x34fc99 ; call rax
0x00000200000596f7 : ror dword ptr [rax - 0x75], cl ; add eax, 0x34fd91 ; call rax
0x00000200000596a9 : ror dword ptr [rax - 0x75], cl ; add eax, 0x34fddf ; call rax
0x000002000052b4fc : ror dword ptr [rax - 0x75], cl ; enter 0x3be8, -0x40 ; ret 0x89ff
0x00000200005f69eb : ror dword ptr [rax - 0x75], cl ; iretd ; call 0x20000217caf
0x0000020000670d68 : ror dword ptr [rax - 0x75], cl ; iretd ; call 0x2000024d006
0x0000020000448750 : ror dword ptr [rax - 0x75], cl ; iretd ; call r10
0x000002000070f578 : ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x0000020000041dd4 : ror dword ptr [rax - 0x75], cl ; iretd ; call rsi
0x000002000016d93d : ror dword ptr [rax - 0x75], cl ; iretd ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x00000200000390d3 : ror dword ptr [rax - 0x75], cl ; ret
0x0000020000552764 : ror dword ptr [rax - 0x75], cl ; ret 0xccc3
0x000002000015e673 : ror dword ptr [rax - 0x75], cl ; ret 0xf49
0x0000020000081e9c : ror dword ptr [rax - 0x77], 0x19 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000555b78 : ror dword ptr [rax - 0x77], 0x42 ; and byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000017ebd7 : ror dword ptr [rax - 0x77], 0x43 ; sub cl, ch ; stc ; ret 0xffec
0x000002000066fd57 : ror dword ptr [rax - 0x77], 0xc ; ret
0x0000020000157bb2 : ror dword ptr [rax - 0x77], 2 ; ret
0x00000200004b25b3 : ror dword ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x000002000043a4d4 : ror dword ptr [rax - 0x77], cl ; push rsp ; and al, 0x50 ; jmp 0x2000043a4a5
0x000002000043a4d3 : ror dword ptr [rax - 0x77], cl ; push rsp ; and al, 0x50 ; jmp 0x2000043a4a6
0x00000200000087f4 : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x20000008805 ; xor eax, eax ; ret
0x000002000005c349 : ror dword ptr [rax - 0x7d], -0x16 ; add dword ptr [rbp - 0x10], esi ; ret
0x0000020000015503 : ror dword ptr [rax - 0x7d], -0x31 ; and dword ptr [rax - 0x75], ecx ; ret 0x3b48
0x0000020000451f7f : ror dword ptr [rax - 0x7d], -0x36 ; adc byte ptr [rax - 0x75], cl ; ret 0xba41
0x00000200004fd4ce : ror dword ptr [rax - 0x7d], -0x3c ; and byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x000002000013d0ae : ror dword ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x000002000021043b : ror dword ptr [rax - 0x7d], -0x3c ; pop rbx ; ret
0x00000200005215ff : ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop rbx ; ret
0x000002000051d976 : ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000564c2 : ror dword ptr [rax - 0x7d], -0x3c ; ret
0x000002000078efb7 : ror dword ptr [rax - 0x7d], -0x3c ; xor byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x0000020000027e6f : ror dword ptr [rax - 0x7d], -0x3d ; or byte ptr [rcx - 0x7d], cl ; ret
0x0000020000057e27 : ror dword ptr [rax - 0x7d], -0x3e ; or byte ptr [rcx + rcx + 0x4c], cl ; ret
0x000002000012661e : ror dword ptr [rax - 0x7d], -0x3f ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200007b4ff6 : ror dword ptr [rax - 0x7d], -7 ; jb 0x200007b4fe5 ; ret
0x00000200006ae172 : ror dword ptr [rax - 0x7d], 1 ; ret 0xb902
0x0000020000125da6 : ror dword ptr [rax - 0x7d], cl ; ret
0x00000200006a0f31 : ror dword ptr [rax - 0x7d], cl ; ret 0x4802
0x00000200004b2503 : ror dword ptr [rax - 1], 1 ; ret
0x00000200004d0264 : ror dword ptr [rax - 1], 1 ; ret 0x3b48
0x00000200004e5e64 : ror dword ptr [rax - 1], 1 ; ret 0xc148
0x00000200004c00ab : ror dword ptr [rax - 1], 1 ; ret 0xc233
0x00000200001d2bca : ror dword ptr [rax - 1], 1 ; ret 0xd9e8
0x00000200004c54dc : ror dword ptr [rax - 1], 1 ; ret 0xf749
0x0000020000231e17 : ror dword ptr [rax - 1], cl ; ret 0x294c
0x00000200005b5239 : ror dword ptr [rax - 1], cl ; ret 0x3966
0x00000200001456e6 : ror dword ptr [rax - 9], 1 ; loop 0x20000145723 ; ret 0x8948
0x000002000024aeec : ror dword ptr [rax - 9], 1 ; loop 0x2000024af29 ; ret 0x8948
0x000002000024b6b7 : ror dword ptr [rax - 9], 1 ; loop 0x2000024b6f5 ; sal dh, 1 ; ret 0xf03
0x000002000009a797 : ror dword ptr [rax - 9], 1 ; ret 0
0x000002000070b0ef : ror dword ptr [rax - 9], 1 ; ret 0xf000
0x000002000001238a : ror dword ptr [rax - 9], cl ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x00000200006cf1e8 : ror dword ptr [rax], -0x3d ; mov al, 1 ; ret
0x00000200000527f7 : ror dword ptr [rax], -0x3d ; xor eax, eax ; ret
0x00000200003ff7e3 : ror dword ptr [rax], -0x75 ; ret
0x00000200001e211c : ror dword ptr [rax], -0x75 ; ret 0x3b49
0x00000200003ff873 : ror dword ptr [rax], -0x7d ; ret 0x4904
0x00000200001448a4 : ror dword ptr [rax], -0x7d ; ret 0x49f8
0x000002000023f637 : ror dword ptr [rax], -0x7d ; ret 0x4cf8
0x000002000000837c : ror dword ptr [rax], -1 ; ret 0x3b41
0x000002000013859a : ror dword ptr [rax], 0x3b ; ret 0xe872
0x0000020000610e34 : ror dword ptr [rax], 0x3b ; ret 0xf172
0x000002000051061b : ror dword ptr [rax], 0x41 ; cmp eax, eax ; jb 0x2000051061b ; xor al, al ; ret
0x0000020000190e11 : ror dword ptr [rax], 0x41 ; mov ecx, eax ; inc rdx ; jmp 0x20000190dd0
0x00000200006bbbe3 : ror dword ptr [rax], 0x44 ; cmp ecx, edx ; jb 0x200006bbbe0 ; ret
0x00000200000482dc : ror dword ptr [rax], 0x45 ; cmp edx, ebx ; jb 0x200000482bf ; xor eax, eax ; ret
0x000002000002818d : ror dword ptr [rax], 0x48 ; sub edx, 1 ; jne 0x20000028184 ; ret
0x0000020000034e62 : ror dword ptr [rax], 0x49 ; sub edx, 1 ; jne 0x20000034e58 ; ret
0x00000200001d98b3 : ror dword ptr [rax], 0x74 ; add cl, byte ptr [rax + rdx] ; ret
0x000002000005258b : ror dword ptr [rax], 0xf ; test ebp, edi ; jmp 0x1ffff8825b0
0x00000200000261b0 : ror dword ptr [rax], 1 ; adc byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret
0x0000020000018c34 : ror dword ptr [rax], 1 ; add byte ptr [rbp - 0x24], dh ; mov qword ptr [rcx + 0x18], rax ; ret
0x0000020000010d4d : ror dword ptr [rax], cl ; add byte ptr [rdi + rcx + 0x20], al ; ret 0xf44
0x00000200003e00ea : ror dword ptr [rbp + 0x11e8034f], -0x14 ; ret 0x84ff
0x000002000007b698 : ror dword ptr [rbp + 0x2b], -0x3d ; add r8, r10 ; jmp 0x2000007b66b
0x00000200007109c7 : ror dword ptr [rbp + 0x39], 0x14 ; ret
0x00000200003e7f88 : ror dword ptr [rbp + 0x39], 4 ; ret 0x774
0x00000200001e7c1d : ror dword ptr [rbp + 0x3b], -0x3e ; jbe 0x200001e7c7f ; mov r8, r10 ; jmp 0x200001e7c7f
0x00000200001e7c1c : ror dword ptr [rbp + 0x3b], -0x3e ; jbe 0x200001e7c80 ; mov r8, r10 ; jmp 0x200001e7c80
0x0000020000004150 : ror dword ptr [rbp + 0x450fff43], cl ; ret
0x00000200004e3b27 : ror dword ptr [rbp + 0x8504], 0 ; add byte ptr [rbx], dh ; ret
0x00000200004e3ba1 : ror dword ptr [rbp + 0xc504], 0 ; add byte ptr [rbx], dh ; ret
0x00000200000c9987 : ror dword ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000200001332f2 : ror dword ptr [rbp + 0xfad0c], 0 ; add byte ptr [rbx], ah ; ret 0xc803
0x0000020000129f89 : ror dword ptr [rbp + 3], 4 ; ret 0x8d41
0x000002000062b1e5 : ror dword ptr [rbp + rcx*4 + 4], 1 ; ret 0x8545
0x00000200007c7955 : ror dword ptr [rbp - 0x73], 4 ; ror byte ptr [rdi], 0xb7 ; ret
0x00000200006c6003 : ror dword ptr [rbp - 0x74b2d0b8], 1 ; ret 0x8b4c
0x0000020000555512 : ror dword ptr [rbp - 0x75], -0x7c ; ret
0x0000020000088858 : ror dword ptr [rbp - 0x75], cl ; ret 0x8b44
0x00000200000569a4 : ror dword ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200001e8a06 : ror dword ptr [rbp - 0x77], 0x43 ; or byte ptr [rcx - 0x7d], cl ; ret
0x00000200000f02c8 : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x200000f02df ; ret
0x000002000013b645 : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x2000013b63f ; ret
0x000002000043b873 : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x2000043b868 ; ret
0x000002000043b872 : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x2000043b869 ; ret
0x0000020000672551 : ror dword ptr [rbp - 0x7cb70058], cl ; ret
0x000002000023b577 : ror dword ptr [rbp - 0x7eb6fe87], 1 ; ret 0xf1
0x0000020000463e19 : ror dword ptr [rbx + 0x20bac3], 1 ; add byte ptr [rbx], ah ; ret 0xc23b
0x00000200006abe75 : ror dword ptr [rbx + 0x4804244c], 0xf ; stosd dword ptr [rdi], eax ; ret
0x000002000023e22c : ror dword ptr [rbx + 0x5cc9e], cl ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000151910 : ror dword ptr [rbx + rbp - 0x3f], 0x49 ; mov eax, eax ; pop rsi ; pop rdi ; ret
0x00000200007b0c34 : ror dword ptr [rbx + rbp*8], -0x1e ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001d818d : ror dword ptr [rbx + rcx*4 - 0x27], 0xf ; ret 0x3345
0x00000200000bdf13 : ror dword ptr [rbx + rdi - 0x3e], 1 ; ja 0x200000bdf20 ; ret
0x00000200000a528d : ror dword ptr [rbx + rdi - 0x40], 0x72 ; and cl, byte ptr [rcx - 0x75] ; ret
0x00000200000a52ce : ror dword ptr [rbx + rdi - 0x40], 0x77 ; or byte ptr [rax - 0x75], cl ; ret 0x3b4c
0x00000200001df4c1 : ror dword ptr [rbx + rdi - 8], 0x77 ; or byte ptr [rax - 0x75], cl ; ret
0x000002000057bf7e : ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rbp ; ret
0x00000200000444d9 : ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rdi ; ret
0x0000020000005c8b : ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x000002000015b86b : ror dword ptr [rbx - 0x3b7cb73f], 0x30 ; pop rbp ; ret
0x00000200000459e7 : ror dword ptr [rbx - 0x3b7cb73f], 0x38 ; ret
0x000002000057c192 : ror dword ptr [rbx - 0x3b7cb73f], 0x40 ; pop rbp ; ret
0x000002000057bd04 : ror dword ptr [rbx - 0x3b7cb73f], 0x60 ; pop rbp ; ret
0x0000020000170bea : ror dword ptr [rbx - 0x4cf0b63f], 1 ; ret 0x4c89
0x00000200006aa7e2 : ror dword ptr [rbx - 0x7422143e], cl ; ret
0x0000020000228d1f : ror dword ptr [rbx - 0x75], 0xc ; ret 0x8d48
0x00000200003e90af : ror dword ptr [rbx - 0x77], 0x44 ; shl dword ptr [rax], -1 ; ret 0x513b
0x0000020000228d39 : ror dword ptr [rbx - 0x7d], 0x24 ; ret 0xf00
0x00000200000e1692 : ror dword ptr [rbx], 1 ; ret 0xc823
0x0000020000057f06 : ror dword ptr [rbx], cl ; ret 0xc741
0x000002000002621b : ror dword ptr [rcx + 0x23], -0x40 ; xor qword ptr [rdx + 8], rax ; jmp 0x200000261f1
0x00000200001f05b4 : ror dword ptr [rcx + 0x2b], 1 ; ror byte ptr [rax + 0x33], 1 ; ret 0x2349
0x00000200007a31c3 : ror dword ptr [rcx + 0x2b], 1 ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4807
0x00000200005f6fab : ror dword ptr [rcx + 0x2b], 1 ; ror byte ptr [rax - 1], 1 ; ret 0xd148
0x000002000010fff1 : ror dword ptr [rcx + 0x2b], cl ; ret
0x000002000024904a : ror dword ptr [rcx + 0x3b419c55], 1 ; ret
0x0000020000249297 : ror dword ptr [rcx + 0x3b41ac55], 1 ; ret
0x000002000020e88c : ror dword ptr [rcx + 0x3b], -0x3f ; sete al ; ret
0x0000020000479047 : ror dword ptr [rcx + 0x3b], cl ; ret 0x830f
0x000002000013f147 : ror dword ptr [rcx + 0x63], 1 ; ret
0x00000200000e43ec : ror dword ptr [rcx + 0x63], cl ; ret 0x348
0x00000200003e09a3 : ror dword ptr [rcx + 0x63], cl ; ret 0x8d48
0x00000200007c9224 : ror dword ptr [rcx + 0x69], 1 ; ret 0x9680
0x00000200000d05a0 : ror dword ptr [rcx + 0xf], -0x44 ; ret 0x4589
0x0000020000170bec : ror dword ptr [rcx + 0xf], -0x4d ; ret 0x4c89
0x00000200000cdff3 : ror dword ptr [rcx + 0xf], -0x51 ; ret 0x8c89
0x00000200007a8e65 : ror dword ptr [rcx + 0xf], -0x5d ; ret 0x830f
0x000002000020e55e : ror dword ptr [rcx + 0xf], 0x43 ; ret
0x0000020000115853 : ror dword ptr [rcx + 0xf], 1 ; mov esp, 0x440f41c1 ; ret 0x3b48
0x00000200001b25e6 : ror dword ptr [rcx + 0xf], 1 ; rol dword ptr [rcx - 1], 1 ; ret 0x8348
0x000002000068ac23 : ror dword ptr [rcx + 3], cl ; ret
0x0000020000404e58 : ror dword ptr [rcx + 3], cl ; rol byte ptr [rbp + 0x2b], 1 ; rol dword ptr [rbp - 0x75], cl ; ret 0xb60f
0x00000200001fbbdb : ror dword ptr [rcx + rcx*4 + 0x44], 0x24 ; sub byte ptr [rax + 0x23], cl ; ret 0x894c
0x0000020000615d75 : ror dword ptr [rcx + rcx*4 + 0x4d], 1 ; inc dword ptr [rdi + rcx - 0x49] ; ret 0xb70f
0x0000020000211aac : ror dword ptr [rcx + rcx*4 + 0xa], 0x41 ; mov eax, eax ; ret
0x00000200001dea57 : ror dword ptr [rcx + rcx*4 + 7], 0x48 ; add esp, 0x20 ; pop rdi ; ret
0x000002000009acb7 : ror dword ptr [rcx + rdi + 0x34], 1 ; ret 0x8d4c
0x0000020000432184 : ror dword ptr [rcx - 0x3f], -0x20 ; sbb dword ptr [rcx - 0x75], ecx ; ret
0x00000200000c0f7e : ror dword ptr [rcx - 0x3f], cl ; cli ; add ecx, dword ptr [rcx - 1] ; ret 0xc149
0x00000200000169c9 : ror dword ptr [rcx - 0x73], 1 ; dec dword ptr [r9 + 3] ; ret 0x349
0x0000020000219edf : ror dword ptr [rcx - 0x74bee789], cl ; ret 0x8b48
0x0000020000151913 : ror dword ptr [rcx - 0x75], -0x40 ; pop rsi ; pop rdi ; ret
0x000002000013cf5c : ror dword ptr [rcx - 0x75], -0x40 ; ret
0x00000200000f3488 : ror dword ptr [rcx - 0x75], 0x4c ; ret
0x0000020000544e43 : ror dword ptr [rcx - 0x75], 1 ; add cl, byte ptr [rcx + 0x3b] ; ret 0xd374
0x0000020000410bcb : ror dword ptr [rcx - 0x75], 1 ; add dword ptr [rbp - 0x75], ecx ; ret
0x00000200005e5df6 : ror dword ptr [rcx - 0x75], 1 ; enter 0x1de8, 0x6f ; ret 0x90ff
0x00000200005d7245 : ror dword ptr [rcx - 0x75], 1 ; lea ecx, dword ptr [rax - 0x17ffffff] ; ret 0xf16b
0x0000020000144dfa : ror dword ptr [rcx - 0x75], 1 ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x0000020000049d79 : ror dword ptr [rcx - 0x75], 1 ; ret 0x348
0x000002000024c625 : ror dword ptr [rcx - 0x75], 1 ; ret 0x8b4d
0x0000020000036e84 : ror dword ptr [rcx - 0x75], 1 ; ret 0xc148
0x00000200000defe4 : ror dword ptr [rcx - 0x75], 1 ; ret 0xf748
0x0000020000496f2a : ror dword ptr [rcx - 0x75], 9 ; mov qword ptr [rdx], rcx ; ret
0x00000200000434d5 : ror dword ptr [rcx - 0x75], cl ; iretd ; call rax
0x000002000023ceb5 : ror dword ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x00000200000729db : ror dword ptr [rcx - 0x75], cl ; ret
0x00000200001411c6 : ror dword ptr [rcx - 0x75], cl ; ret 0x2ce9
0x0000020000017092 : ror dword ptr [rcx - 0x75], cl ; ret 0x348
0x0000020000127f4e : ror dword ptr [rcx - 0x76e7dbb4], 1 ; and al, 0x8b ; ret
0x00000200000c60bf : ror dword ptr [rcx - 0x77], 0x4c ; ror byte ptr [rax], 1 ; ret
0x00000200001b33fa : ror dword ptr [rcx - 0x77], 1 ; adc bl, al ; and qword ptr [r8], 0 ; ret
0x000002000006f28c : ror dword ptr [rcx - 0x77], 1 ; ret
0x000002000007afb6 : ror dword ptr [rcx - 0x79], 1 ; adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 1], cl ; ret
0x00000200001960a9 : ror dword ptr [rcx - 0x7b], cl ; ret 0x2374
0x0000020000459e5f : ror dword ptr [rcx - 0x7d], -0x16 ; add dword ptr [rbp - 0x37], esi ; ret
0x0000020000052c16 : ror dword ptr [rcx - 0x7d], -0x18 ; add dword ptr [rbp - 0x10], esi ; ret
0x000002000065b9fc : ror dword ptr [rcx - 0x7d], -0x3c ; adc byte ptr [rcx - 0x7d], cl ; ret
0x00000200001e1e13 : ror dword ptr [rcx - 0x7d], -0x3e ; or byte ptr [rcx - 0x77], cl ; add edi, edi ; ret 0xb848
0x0000020000049c3c : ror dword ptr [rcx - 0x7d], -0x40 ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x00000200002476c0 : ror dword ptr [rcx - 0x7d], 1 ; ret
0x0000020000247b70 : ror dword ptr [rcx - 0x7d], 1 ; ret 0x4508
0x0000020000422f61 : ror dword ptr [rcx - 0x7d], 1 ; ret 0x4907
0x0000020000686de5 : ror dword ptr [rcx - 0x7d], 1 ; ret 0x4b0c
0x00000200005abd91 : ror dword ptr [rcx - 0x7d], 1 ; rol dword ptr [rdx], -0x75 ; ret 0xffb9
0x000002000023b69e : ror dword ptr [rcx - 0x7f], 1 ; ret 0xf1
0x000002000013c1e9 : ror dword ptr [rcx - 1], -0x38 ; jne 0x2000013c1e9 ; xor rax, rax ; ret
0x0000020000151a57 : ror dword ptr [rcx - 1], -0x38 ; jne 0x20000151a56 ; ret
0x0000020000203fe3 : ror dword ptr [rcx - 9], -0x10 ; ret
0x000002000020bf06 : ror dword ptr [rcx], -1 ; ret 0xff41
0x00000200003e875a : ror dword ptr [rdi + rcx - 0x51], 1 ; ret 0xc148
0x000002000007db8c : ror dword ptr [rdi], -0x43 ; sar dh, 1 ; ret 0xcbeb
0x00000200006bbcd0 : ror dword ptr [rdi], -0x46 ; call 0x2002d7945e9
0x000002000012cafc : ror dword ptr [rdi], -0x49 ; ret
0x0000020000037657 : ror dword ptr [rdi], -0x49 ; ret 0x4166
0x000002000003763b : ror dword ptr [rdi], -0x49 ; ret 0xbf41
0x0000020000482815 : ror dword ptr [rdi], -0x4a ; ret
0x00000200000c69c6 : ror dword ptr [rdi], -0x4a ; ret 0x8948
0x00000200000c6ad3 : ror dword ptr [rdi], -0x4a ; ret 0xf48
0x000002000042fe4d : ror dword ptr [rdi], -0x6d ; ret 0xba0f
0x00000200004924e8 : ror dword ptr [rdi], -0x79 ; mov bpl, 0x13 ; add dh, dh ; ret
0x00000200006881ed : ror dword ptr [rdi], -0x79 ; mov esp, 0xff000000 ; ret
0x0000020000492544 : ror dword ptr [rdi], -0x79 ; movsd dword ptr [rdi], dword ptr [rsi] ; mov ah, 0x13 ; add dh, dh ; ret
0x00000200004b74ec : ror dword ptr [rdi], -0x79 ; ret
0x00000200006c124f : ror dword ptr [rdi], -0x79 ; ret 0xfffd
0x00000200000fb8e7 : ror dword ptr [rdi], -0x79 ; ret 1
0x00000200004d0d8b : ror dword ptr [rdi], -0x79 ; sti ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x00000200004368c6 : ror dword ptr [rdi], -0x79 ; xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x0000020000549ef9 : ror dword ptr [rdi], -0x7b ; in eax, dx ; jg 0x20000549f12 ; add byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x00000200007a580f : ror dword ptr [rdi], -0x7b ; or dword ptr [rsi], 2 ; add bh, bh ; ret
0x00000200007ba25b : ror dword ptr [rdi], -0x7b ; pop rdx ; sub dword ptr [rcx], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000068b85d : ror dword ptr [rdi], -0x7b ; popfq ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x0000020000088f5f : ror dword ptr [rdi], -0x7b ; push -0x74000001 ; ret
0x000002000042de5d : ror dword ptr [rdi], -0x7b ; ret
0x000002000051cc11 : ror dword ptr [rdi], -0x7b ; ret 0x971
0x0000020000654e50 : ror dword ptr [rdi], -0x7b ; ret 1
0x000002000046d974 : ror dword ptr [rdi], -0x7c ; movsb byte ptr [rdi], byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000a254d : ror dword ptr [rdi], -0x7c ; ret
0x00000200007b46cd : ror dword ptr [rdi], -0x7c ; ret 0x171
0x00000200004dbecf : ror dword ptr [rdi], -0x7c ; ret 2
0x000002000009e72f : ror dword ptr [rdi], -0x7c ; ret 3
0x00000200000b6363 : ror dword ptr [rdi], -0x7d ; lodsb al, byte ptr [rsi] ; add al, 0 ; add bh, bh ; ret 0x8b48
0x0000020000094f72 : ror dword ptr [rdi], -0x7d ; ret
0x0000020000078101 : ror dword ptr [rdi], -0x7d ; ret 0xfffd
0x00000200007affc6 : ror dword ptr [rdi], -0x7e ; sbb ebp, dword ptr [rdx - 0x74b7ffff] ; ret
0x000002000065e981 : ror dword ptr [rdi], -0x7e ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x977
0x000002000019e576 : ror dword ptr [rdi], 0x44 ; ret 0x4488
0x000002000019f3dd : ror dword ptr [rdi], 0x44 ; ret 0x8941
0x00000200001383ca : ror dword ptr [rdi], 0x47 ; ret 0x5aba
0x000002000007daa5 : ror dword ptr [rdi], 0x4f ; ret 0x3eb
0x000002000014c3bc : ror dword ptr [rdi], 1 ; add edi, ecx ; mov rax, rbx ; pop rbx ; ret
0x000002000014c39c : ror dword ptr [rdi], 1 ; add edi, ecx ; pop rbx ; ret
0x000002000049464c : ror dword ptr [rdi], 1 ; mov bh, 0xc2 ; ret
0x000002000007da95 : ror dword ptr [rdi], 1 ; mov dh, 0x8a ; ret
0x000002000001d83b : ror dword ptr [rdi], 1 ; test al, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000072a36 : ror dword ptr [rdi], 1 ; test cl, ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000b9c7d : ror dword ptr [rdi], 1 ; test dword ptr [rsi], eax ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000042fe59 : ror dword ptr [rdi], 1 ; test esp, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000aa0c1 : ror dword ptr [rdi], 1 ; xchg dword ptr [rsi], esi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x0000020000051ce8 : ror dword ptr [rdi], 1 ; xchg eax, ebp ; ret 0xfa2b
0x00000200000c1255 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret 0xf641
0x0000020000589d55 : ror dword ptr [rdi], cl ; lahf ; ret 0x60e9
0x0000020000589d19 : ror dword ptr [rdi], cl ; popfq ; ret 0x9ce9
0x0000020000589d37 : ror dword ptr [rdi], cl ; pushfq ; ret 0x7ee9
0x0000020000589cfb : ror dword ptr [rdi], cl ; sahf ; ret 0xbae9
0x00000200000546f5 : ror dword ptr [rdi], cl ; test edx, ebx ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200004a0b3f : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0xd10b
0x000002000058a218 : ror dword ptr [rdi], cl ; xchg eax, ebx ; ret 0x9de9
0x000002000058a260 : ror dword ptr [rdi], cl ; xchg eax, edi ; ret 0x55e9
0x000002000058a23c : ror dword ptr [rdi], cl ; xchg eax, edx ; ret 0x79e9
0x000002000058a1f4 : ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0xc1e9
0x00000200003fd0ba : ror dword ptr [rdi], cl ; xchg eax, esp ; ret 0x1789
0x00000200001e266c : ror dword ptr [rdx + 0x31], 4 ; ret 0xc149
0x0000020000647f2a : ror dword ptr [rdx - 0x77], 0xc ; ret 0x438b
0x0000020000238d8b : ror dword ptr [rdx], 0xc ; add byte ptr [rax - 0x75], cl ; iretd ; call rax
0x00000200005269a9 : ror dword ptr [rsi], cl ; ret
0x00000200003e4583 : ror eax, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003e4623 : ror eax, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003e47ba : ror eax, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x00000200003e4b83 : ror ecx, cl ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200003e4cb7 : ror ecx, cl ; sub r10d, r9d ; mov eax, r10d ; ret
0x00000200003e4e53 : ror ecx, cl ; xor r10d, r9d ; mov eax, r10d ; ret
0x00000200005ec219 : ror edi, -0xf ; push rsi ; ret 0x7420
0x000002000015bd01 : ror edx, cl ; mov eax, dword ptr [rdx] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000015afb9 : ror edx, cl ; mov eax, dword ptr [rdx] ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001c84a7 : ror esi, 0x15 ; add byte ptr [rax + 0xb], cl ; ret 0x589
0x00000200007283d5 : ror qword ptr [r8 + 1], 0xd ; ret 0xbfcd
0x00000200003e4582 : ror r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003e4622 : ror r8d, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003e47b9 : ror r8d, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x00000200003e4b82 : ror r9d, cl ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200003e4cb6 : ror r9d, cl ; sub r10d, r9d ; mov eax, r10d ; ret
0x00000200003e4e52 : ror r9d, cl ; xor r10d, r9d ; mov eax, r10d ; ret
0x00000200007e0fc0 : sahf ; adc eax, 0x7e ; add byte ptr [rax], al ; ret 0x7e15
0x00000200001d2e5b : sahf ; adc eax, dword ptr [rax] ; mov dword ptr [rcx], eax ; ret
0x00000200001d2e4b : sahf ; adc eax, dword ptr [rax] ; ret
0x00000200000375c0 : sahf ; adc rax, qword ptr [r8] ; ret
0x0000020000533196 : sahf ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000149265 : sahf ; add byte ptr [rax], al ; add cl, ch ; ror ch, cl ; add byte ptr [rax], al ; ret
0x00000200000685c3 : sahf ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 1
0x000002000003e430 : sahf ; add dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006ff38c : sahf ; add eax, 0xc4834800 ; pop rax ; ret
0x0000020000726ac0 : sahf ; dec dword ptr [rax - 0x75] ; ret
0x00000200006a8d76 : sahf ; dec dword ptr [rbx - 0xcfdbbc] ; ret
0x00000200005c3179 : sahf ; enter -0x6f01, -0x17 ; ret 0xffea
0x00000200005c6606 : sahf ; in eax, -0x16 ; dec dword ptr [rax - 0x77] ; cmp ebp, ecx ; ret
0x00000200005a1ebf : sahf ; jrcxz 0x200005a1eb3 ; dec dword ptr [rbp - 0x75] ; sbb r9b, r13b ; ret
0x00000200005e1d23 : sahf ; lock dec dword ptr [rax - 0x75] ; ret 0x49f0
0x00000200001d3bf0 : sahf ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret
0x0000020000630dbb : sahf ; mov al, 0xff ; add rsp, 0x68 ; ret
0x0000020000600daf : sahf ; mov bl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x00000200004a010b : sahf ; mov ebp, 0xd8b48ff ; ret
0x0000020000540e2c : sahf ; mov edi, 0xc48348ff ; push rax ; pop rbx ; ret
0x00000200004473de : sahf ; pop rsi ; ret 0x48ff
0x0000020000783853 : sahf ; pushfq ; add eax, 0x8b480000 ; ret 0x5c89
0x000002000077fd38 : sahf ; pushfq ; add eax, 0x8b480000 ; ret 0xc148
0x0000020000024aee : sahf ; ret
0x00000200004d0df9 : sahf ; ret 0x41ff
0x0000020000589cfd : sahf ; ret 0xbae9
0x000002000062c9b6 : sahf ; ret 0xccff
0x00000200004741ee : sahf ; ret 0xf0ff
0x0000020000727aaf : sahf ; ret 0xffbc
0x0000020000670d5e : sahf ; ret 0xffbd
0x00000200003fa668 : sahf ; sar bh, 0xc0 ; add rsp, 0x28 ; ret
0x000002000044885e : sahf ; sar bh, 0xc0 ; ret
0x00000200000ca79e : sahf ; sbb byte ptr [rax], al ; add dh, dh ; ret
0x00000200005b8a10 : sahf ; sbb dh, bh ; push qword ptr [rbx] ; sal dh, cl ; ret
0x0000020000703dd2 : sahf ; scasd eax, dword ptr [rdi] ; mov cl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x000002000005e8ec : sahf ; xchg eax, esp ; add dword ptr [rax], eax ; add bh, bh ; ret
0x0000020000100e0a : sal al, 0x48 ; btr dword ptr [rcx], eax ; ret
0x000002000003d6ee : sal al, 0x49 ; or dword ptr [rcx + 8], edx ; ret
0x000002000016dfba : sal al, 0x49 ; xadd dword ptr [rcx + 0x58], eax ; ret
0x000002000016df9a : sal al, 0x49 ; xadd dword ptr [rcx + 0x60], eax ; ret
0x00000200000478c8 : sal al, 0x4c ; cmpxchg dword ptr [rcx], eax ; jne 0x200000478af ; ret
0x000002000059d38b : sal al, 0x83 ; ret
0x00000200004a33e6 : sal al, 0xc3 ; xor eax, eax ; ret
0x00000200001154fe : sal al, 1 ; and dword ptr [r10], eax ; ret
0x00000200005b169e : sal al, 1 ; and dword ptr [r8], eax ; ret
0x000002000003d6a9 : sal al, 1 ; and qword ptr [r9 + 8], rax ; ret
0x00000200000fc97c : sal bh, 0xd0 ; and eax, 0xc000000d ; ret
0x0000020000452f3d : sal bh, 0xd0 ; and eax, 0xc0000034 ; ret
0x000002000044a570 : sal bh, 0xd0 ; and eax, 0xc0000061 ; jmp 0x2000044a546
0x00000200001b303d : sal bh, 0xd8 ; inc eax ; ret
0x00000200001618d0 : sal bh, 0xf1 ; ret
0x000002000020fb08 : sal bh, 1 ; ret 0xfff7
0x0000020000090108 : sal bh, 1 ; str word ptr [rax - 0x75] ; ret
0x00000200001ac637 : sal bh, cl ; inc dword ptr [rcx - 0x75] ; ret 0x15e9
0x00000200005db21f : sal byte ptr [r10 + 0x840e801], 1 ; ret 0x90ff
0x000002000045f3b9 : sal byte ptr [rax + rax*2 + 0x4c], 0x8b ; ret
0x00000200006b648b : sal byte ptr [rax + rax*2 - 0xa], cl ; ret
0x0000020000017078 : sal byte ptr [rax + rbp + 0x44], 3 ; ret
0x0000020000582a43 : sal byte ptr [rax + rbp - 0x75], cl ; ret 0xc148
0x0000020000729393 : sal byte ptr [rax + rbp - 0x75], cl ; xor al, 0x3b ; ret 0x2675
0x000002000001f16f : sal byte ptr [rax + rbp*2 + 0x49], 0x8b ; ret 0xb948
0x000002000001bcfe : sal byte ptr [rax + rbx + 0x48], 0x8b ; ret 0x2b49
0x0000020000701626 : sal byte ptr [rax + rbx + 0x4c], 0x8b ; ret
0x0000020000007279 : sal byte ptr [rax + rbx*2 + 0x48], 0x8b ; ret
0x0000020000199b6f : sal byte ptr [rax + rcx + 0x41], 0x8b ; fucompp ; ret
0x00000200001c8327 : sal byte ptr [rax + rcx + 0x41], 0xff ; ret 0x3b45
0x00000200005102a9 : sal byte ptr [rax + rcx + 0x48], 0x8b ; enter -0x4318, 0x7d ; ret
0x00000200007ae165 : sal byte ptr [rax + rcx + 0x48], 0x8b ; enter 0x70e8, 0x21 ; ret 0x44ff
0x000002000070f573 : sal byte ptr [rax + rcx + 0x48], 0x8b ; ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x00000200000434d0 : sal byte ptr [rax + rcx + 0x48], 0x8b ; ror dword ptr [rcx - 0x75], cl ; iretd ; call rax
0x00000200007a8547 : sal byte ptr [rax + rcx + 0x48], 0xff ; ret
0x000002000071b851 : sal byte ptr [rax + rcx + 0x48], cl ; add esp, 0x30 ; pop rbx ; jmp r10
0x00000200003ff80b : sal byte ptr [rax + rcx + 0x48], cl ; mov ebx, dword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000514334 : sal byte ptr [rax + rcx*2 + 0x44], 0x3b ; ret 0x820f
0x0000020000644872 : sal byte ptr [rax + rdi + 0x41], 0x8d ; push rsi ; add bh, byte ptr [rbx] ; ret 0x1b76
0x00000200000b2e62 : sal byte ptr [rax + rdi + 0x48], 0xff ; ret 0x8148
0x00000200004208c7 : sal byte ptr [rax + rdi + 0x48], 3 ; ret 0x3b48
0x00000200001bcaee : sal byte ptr [rax + rdx + 0x39], 0x48 ; or byte ptr [rbp + rcx - 1], dh ; ret 0x8348
0x0000020000793f22 : sal byte ptr [rax + rdx + 0x44], 0x88 ; add edi, edi ; ret 0xff48
0x000002000020e22d : sal byte ptr [rax + rdx + 0x48], 0x83 ; ret 0x310
0x000002000070f557 : sal byte ptr [rax + rdx + 0x48], 0x8b ; iretd ; call rax
0x000002000070f443 : sal byte ptr [rax + rdx + 0x48], 0x8b ; retf ; call rax
0x00000200007013de : sal byte ptr [rax + rdx + 0x49], 0x3b ; ret 0xb74
0x00000200004f2016 : sal byte ptr [rax + rdx*2 + 0x44], 0x8b ; ret
0x000002000040ec05 : sal byte ptr [rax + rdx*2 + 0x66], 0xff ; ret
0x00000200001b24cf : sal byte ptr [rax + rdx*8 + 0x48], 0x8b ; ror dword ptr [rax - 0x75], cl ; ret
0x0000020000225a13 : sal byte ptr [rax + rsi + 0x41], 0xf6 ; ret 0x7403
0x0000020000582468 : sal byte ptr [rax + rsi - 0x75], cl ; ret 0xc148
0x00000200004a0e57 : sal byte ptr [rax + rsi - 0xa], cl ; ret
0x0000020000213b20 : sal byte ptr [rax - 0x3fcd3cff], cl ; ret
0x0000020000658dfa : sal byte ptr [rbp + 0x10], 0xff ; ret
0x000002000019e11b : sal byte ptr [rbp + 0x11], 0x8b ; ret
0x00000200006f7960 : sal byte ptr [rbp + 0x12], 0x39 ; ret
0x000002000005cab9 : sal byte ptr [rbp + 0x14], cl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001ebaa : sal byte ptr [rbp + 0x16], 0x48 ; add esp, 0x38 ; ret
0x00000200001a28ac : sal byte ptr [rbp + 0x19], 0xf6 ; ret
0x00000200003e11da : sal byte ptr [rbp + 0x1a], 0x8b ; ret
0x00000200001aeb46 : sal byte ptr [rbp + 0x1d], 0xff ; ret
0x000002000050a3de : sal byte ptr [rbp + 0x22], 0xff ; ret
0x00000200006aeeeb : sal byte ptr [rbp + 0x23], 0x85 ; sal byte ptr [rcx + rbp - 0x75], cl ; ret 0xc148
0x00000200006b0c10 : sal byte ptr [rbp + 0x23], 0x85 ; sal byte ptr [rdx + rbp - 0x75], cl ; ret 0xc148
0x00000200003f978e : sal byte ptr [rbp + 0x24], 0x8b ; ret
0x000002000043c004 : sal byte ptr [rbp + 0x25], 0x8b ; ret 0x8948
0x00000200000ea7fa : sal byte ptr [rbp + 0x26], 0xf ; mov dh, 0xc2 ; ret
0x00000200003d4813 : sal byte ptr [rbp + 0x28], 0x85 ; sal byte ptr [rsi + rbp - 0x75], cl ; ret 0xffb9
0x0000020000582689 : sal byte ptr [rbp + 0x2a], 0x85 ; sal byte ptr [rdx - 0x75], cl ; ret 0xc148
0x00000200004adc3d : sal byte ptr [rbp + 0x2b], 0x8b ; ret 0x8b48
0x0000020000582a3f : sal byte ptr [rbp + 0x2c], 0x85 ; sal byte ptr [rax + rbp - 0x75], cl ; ret 0xc148
0x0000020000582ccc : sal byte ptr [rbp + 0x2c], 0x85 ; sal byte ptr [rsp + rsi - 0x75], cl ; ret 0xffb9
0x000002000046b074 : sal byte ptr [rbp + 0x2f], 0xff ; ret
0x000002000001de96 : sal byte ptr [rbp + 0x30], 0x48 ; add esp, 0x48 ; ret
0x000002000045e9c7 : sal byte ptr [rbp + 0x30], 0x8b ; ret
0x000002000001f37e : sal byte ptr [rbp + 0x31], 0x48 ; add esp, 0x28 ; ret
0x0000020000051f35 : sal byte ptr [rbp + 0x31], 0xff ; ret
0x0000020000582464 : sal byte ptr [rbp + 0x34], 0x85 ; sal byte ptr [rax + rsi - 0x75], cl ; ret 0xc148
0x00000200003ec96f : sal byte ptr [rbp + 0x3a], 0x8b ; ret
0x000002000007ce40 : sal byte ptr [rbp + 0x3c], 0x48 ; add esp, 0x28 ; ret
0x00000200006b22d0 : sal byte ptr [rbp + 0x3e], 0xff ; ret 0xc28b
0x00000200001068f1 : sal byte ptr [rbp + 0x41], 0x8b ; add byte ptr [rax - 0x7d], cl ; ret 0xf08
0x00000200006e29c3 : sal byte ptr [rbp + 0x44], 0x8b ; ret 0x8d4c
0x00000200001f5488 : sal byte ptr [rbp + 0x45], 0x8b ; ret 0x43eb
0x000002000021305c : sal byte ptr [rbp + 0x4c], 0x8b ; ret
0x00000200006e34bd : sal byte ptr [rbp + 0x51], 0x81 ; call qword ptr [rdx]
0x000002000048ef73 : sal byte ptr [rbp + 0x60], 0x8b ; ret 0x3b44
0x000002000020e318 : sal byte ptr [rbp + 0x6c], 0xff ; ret
0x00000200006d39d7 : sal byte ptr [rbp + 0x70], 0x8b ; push rdx ; sbb al, 0x8b ; ret 0x25
0x00000200001b3c23 : sal byte ptr [rbp + 0xa], 0x48 ; mov edx, ebx ; mov rcx, rdi ; call rsi
0x00000200003c7ea1 : sal byte ptr [rbp + 0xb], 0xb8 ; add byte ptr [rdx], 0 ; add byte ptr [rbx], al ; ret
0x0000020000703ecf : sal byte ptr [rbp + 0xb], 0xff ; ret
0x00000200006a383f : sal byte ptr [rbp + 0xc], 0xf ; mov bh, 0x45 ; add bh, bh ; ret
0x00000200005355a8 : sal byte ptr [rbp + 0xc], 0xff ; ret
0x0000020000557bfa : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200006701ce : sal byte ptr [rbp + 0xf], 0xf6 ; ret
0x000002000068191e : sal byte ptr [rbp + 0xf], cl ; mov al, 1 ; ret
0x000002000012d702 : sal byte ptr [rbp + 1], 0xc3 ; jmp rax
0x0000020000074689 : sal byte ptr [rbp + 1], 0xc3 ; mov byte ptr [r8], 0 ; ret
0x0000020000041a81 : sal byte ptr [rbp + 1], 0xc3 ; mov rax, qword ptr [rax + 0x18] ; ret
0x0000020000025559 : sal byte ptr [rbp + 1], 0xc3 ; mov rax, qword ptr [rax] ; ret
0x000002000002a52f : sal byte ptr [rbp + 1], cl ; ret
0x0000020000719fed : sal byte ptr [rbp + 2], 1 ; xor eax, eax ; ret
0x000002000052ddbc : sal byte ptr [rbp + 2], cl ; pop rbx ; ret
0x000002000042eb37 : sal byte ptr [rbp + 3], 0x8a ; ret 0x8ac3
0x000002000043caad : sal byte ptr [rbp + 3], cl ; mov al, 1 ; ret
0x00000200000f74e9 : sal byte ptr [rbp + 3], cl ; mov eax, ecx ; ret
0x00000200000087f7 : sal byte ptr [rbp + 3], cl ; xor eax, eax ; ret
0x00000200000862b9 : sal byte ptr [rbp + 4], 0x41 ; mov al, dl ; ret
0x00000200000863c9 : sal byte ptr [rbp + 4], 0x41 ; mov eax, eax ; ret
0x0000020000453815 : sal byte ptr [rbp + 4], 0x41 ; mov eax, edx ; ret
0x000002000068f803 : sal byte ptr [rbp + 4], 0x48 ; mov dword ptr [rdx], eax ; ret
0x000002000011dd46 : sal byte ptr [rbp + 4], 0x48 ; mov eax, ecx ; ret
0x000002000005b27f : sal byte ptr [rbp + 4], 0x48 ; mov eax, edx ; ret
0x000002000006d2f3 : sal byte ptr [rbp + 4], 0x49 ; mov eax, eax ; ret
0x000002000062c66e : sal byte ptr [rbp + 4], 0xeb ; ret
0x00000200001aebdd : sal byte ptr [rbp + 4], 0xff ; ret
0x0000020000621548 : sal byte ptr [rbp + 4], cl ; lea eax, dword ptr [rdx + 1] ; ret
0x00000200001d3f1d : sal byte ptr [rbp + 4], cl ; mov dword ptr [r8], eax ; ret
0x00000200001b8ec1 : sal byte ptr [rbp + 4], cl ; mov qword ptr [r8], rcx ; ret
0x000002000003d41a : sal byte ptr [rbp + 4], cl ; or byte ptr [rcx + 9], 4 ; ret
0x00000200004f6901 : sal byte ptr [rbp + 5], 0x32 ; leave ; mov al, cl ; ret
0x000002000069e3d5 : sal byte ptr [rbp + 5], 0x41 ; lea eax, dword ptr [rax + 0x14] ; ret
0x00000200000edca8 : sal byte ptr [rbp + 5], 0x41 ; lea eax, dword ptr [rax + 1] ; ret
0x0000020000054ecd : sal byte ptr [rbp + 5], 0x48 ; add esp, 0x28 ; ret
0x00000200000c1054 : sal byte ptr [rbp + 5], cl ; add rsp, 0x28 ; ret
0x000002000007a33f : sal byte ptr [rbp + 5], cl ; mov al, byte ptr [rax + rcx*2 + 1] ; ret
0x000002000003cf10 : sal byte ptr [rbp + 6], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001f726b : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000041f626 : sal byte ptr [rbp + 6], 1 ; mov eax, 1 ; ret
0x0000020000033fa9 : sal byte ptr [rbp + 6], cl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000f5cc1 : sal byte ptr [rbp + 7], 0xc3 ; mov word ptr [r8], r9w ; jmp 0x200000f5c97
0x0000020000626adf : sal byte ptr [rbp + 7], 0xe8 ; pop rcx ; outsd dx, dword ptr [rsi] ; ret 0xebff
0x0000020000629bf2 : sal byte ptr [rbp + 7], 0xe8 ; ret 0xebff
0x00000200005cbf8f : sal byte ptr [rbp + 7], 0xf ; mov bh, 0x43 ; add cl, byte ptr [rax + 3] ; ret
0x00000200006265c4 : sal byte ptr [rbp + 7], 1 ; call 0x2000024da46
0x00000200000698bd : sal byte ptr [rbp + 7], 1 ; mov al, 1 ; add rsp, 0x18 ; ret
0x0000020000530a1a : sal byte ptr [rbp + 7], cl ; mov eax, dword ptr [rax + 0x1f98] ; ret
0x000002000047b00d : sal byte ptr [rbp + 7], cl ; xor al, al ; add rsp, 0x28 ; ret
0x00000200003f41ea : sal byte ptr [rbp + 7], cl ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000101dfd : sal byte ptr [rbp + 8], 0x8a ; ret
0x000002000008646f : sal byte ptr [rbp + 8], 0x8b ; ret
0x00000200006d9e3d : sal byte ptr [rbp + 8], 0xff ; ret
0x00000200006bbfc7 : sal byte ptr [rbp + 8], 1 ; xor eax, eax ; ret
0x00000200004263f2 : sal byte ptr [rbp + 9], 0x8b ; pop r8 ; ret
0x0000020000204383 : sal byte ptr [rbp + 9], 0x8b ; ret
0x00000200001d8e11 : sal byte ptr [rbp + 9], 0x8d ; push rax ; cmove ecx, dword ptr [rdi] ; and al, dl ; jmp 0x200001d8e3a
0x0000020000102244 : sal byte ptr [rbp + rax + 0x33], 0xd2 ; call r8
0x00000200000b9ef2 : sal byte ptr [rbp + rax + 0x39], 0x50 ; or byte ptr [rbp + 1], dh ; ret
0x000002000070906d : sal byte ptr [rbp + rax + 0x41], 0x8a ; leave ; call rax
0x000002000068424f : sal byte ptr [rbp + rax + 0x48], 0x8b ; iretd ; call rax
0x0000020000084755 : sal byte ptr [rbp + rax + 0x48], 0x8b ; ret
0x00000200003ffcfb : sal byte ptr [rbp + rax + 0x48], 0x8b ; retf ; call rax
0x00000200000ac958 : sal byte ptr [rbp + rax + 0x48], 0x8b ; shr bl, 1 ; ret 0x1b0
0x00000200004e6e43 : sal byte ptr [rbp + rax + 0x48], cl ; mov ecx, esi ; call rdx
0x000002000004528d : sal byte ptr [rbp + rax + 0x66], cl ; mov dword ptr [rcx], r11d ; ret
0x000002000021307c : sal byte ptr [rbp + rax*2 + 0x4c], 0x8b ; ret
0x00000200003c737e : sal byte ptr [rbp + rbp - 0x75], cl ; ret 0xffb9
0x00000200007b2419 : sal byte ptr [rbp + rbx*2 + 0x44], 0x8b ; ret
0x000002000012f6e0 : sal byte ptr [rbp + rcx + 0x44], 0x8b ; ret
0x000002000022b887 : sal byte ptr [rbp + rcx + 0x48], 0x3b ; ret 0xf48
0x0000020000701428 : sal byte ptr [rbp + rcx + 0x49], 0x3b ; ret 0x874
0x0000020000423051 : sal byte ptr [rbp + rcx + 0x49], 3 ; ret 0x3b48
0x00000200006c60c3 : sal byte ptr [rbp + rcx + 0x4c], 0x8b ; ret
0x0000020000209e09 : sal byte ptr [rbp + rcx - 0x7d], cl ; cli ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret 0x8341
0x0000020000039056 : sal byte ptr [rbp + rdi - 0x50], 1 ; ret
0x000002000069dad4 : sal byte ptr [rbp + rdx + 0x41], 0x8b ; add dword ptr [rcx - 1], ecx ; ret 0x209
0x0000020000048271 : sal byte ptr [rbp + rdx + 0x48], 0x3b ; ret
0x00000200003f8e86 : sal byte ptr [rbp + rdx*2 + 0x49], 0x3b ; ret 0x2973
0x00000200001d60a4 : sal byte ptr [rbp + rdx*2 + 0x49], 0xff ; ret
0x000002000021306c : sal byte ptr [rbp + rdx*2 + 0x4c], 0x8b ; ret
0x0000020000667519 : sal byte ptr [rbp + rsi + 0x2b], 1 ; ret 0x8d48
0x000002000013d18d : sal byte ptr [rbp - 0x11], 0x48 ; mov eax, ecx ; ret
0x00000200000fc0a8 : sal byte ptr [rbp - 0x13], 0xe9 ; ret
0x00000200000283d5 : sal byte ptr [rbp - 0x15], 0x48 ; btr eax, 0xc ; ret
0x0000020000558f22 : sal byte ptr [rbp - 0x15], 0x85 ; sal byte ptr [rdi + rdx - 0x75], cl ; ret
0x000002000066fe84 : sal byte ptr [rbp - 0x15], 1 ; ret
0x000002000044e1c6 : sal byte ptr [rbp - 0x16], 0x8b ; ret
0x00000200001b48c2 : sal byte ptr [rbp - 0x16], cl ; ret
0x000002000070efe5 : sal byte ptr [rbp - 0x17], cl ; ret
0x0000020000711a61 : sal byte ptr [rbp - 0x18], 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x0000020000724f68 : sal byte ptr [rbp - 0x1a], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001f8c05 : sal byte ptr [rbp - 0x1d], 0x49 ; mov eax, ecx ; ret
0x000002000000d775 : sal byte ptr [rbp - 0x1e], cl ; ret
0x0000020000230cc9 : sal byte ptr [rbp - 0x24], 1 ; mov eax, 1 ; ret
0x0000020000216459 : sal byte ptr [rbp - 0x26], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000003a79e : sal byte ptr [rbp - 0x28], 0x41 ; mov eax, ecx ; ret
0x00000200004955a8 : sal byte ptr [rbp - 0x29], 0x48 ; add esp, 0x28 ; ret
0x0000020000705f53 : sal byte ptr [rbp - 0x2a], 0xc3 ; mov rax, qword ptr [rcx + 8] ; ret
0x000002000013db07 : sal byte ptr [rbp - 0x2b], 0x33 ; rol bl, 0x48 ; mov eax, ecx ; ret
0x000002000047b06a : sal byte ptr [rbp - 0x2d], 0x48 ; add esp, 0x28 ; ret
0x000002000013d3ab : sal byte ptr [rbp - 0x2e], 0x48 ; sub eax, ecx ; sar rax, 1 ; ret
0x00000200007cef49 : sal byte ptr [rbp - 0x2e], cl ; sub r11, rax ; mov rax, r11 ; ret
0x00000200001fd350 : sal byte ptr [rbp - 0x2f], 0x45 ; xor ecx, ecx ; mov eax, r9d ; ret
0x000002000013b1a7 : sal byte ptr [rbp - 0x34], 0x33 ; rol bl, 0x49 ; mov eax, eax ; ret
0x0000020000668dd0 : sal byte ptr [rbp - 0x35], 0x48 ; add esp, 0x38 ; ret
0x00000200000dbbf0 : sal byte ptr [rbp - 0x38], 0x48 ; mov eax, ebx ; jmp 0x200000dbbc2
0x0000020000420366 : sal byte ptr [rbp - 0x39], cl ; mov r10b, 1 ; jmp 0x20000420337
0x00000200001474ea : sal byte ptr [rbp - 0x3a], cl ; sub r9d, eax ; mov eax, r9d ; ret
0x00000200001edcd5 : sal byte ptr [rbp - 0x3c], 0x49 ; mov eax, eax ; ret
0x000002000013d414 : sal byte ptr [rbp - 0x3e], 0x33 ; rol bl, 0x49 ; mov eax, eax ; ret
0x00000200004abe80 : sal byte ptr [rbp - 0x3e], 0xff ; ret
0x0000020000100994 : sal byte ptr [rbp - 0x42], 0xeb ; ret
0x000002000046f9cd : sal byte ptr [rbp - 0x4e], 0xeb ; ret 0xcccc
0x000002000055c387 : sal byte ptr [rbp - 0x5a], 0x8b ; ret
0x000002000018e94a : sal byte ptr [rbp - 0x5d], 1 ; jmp 0x2000008ab78
0x0000020000410fad : sal byte ptr [rbp - 0x7b], 0xe9 ; ret
0x0000020000785600 : sal byte ptr [rbp - 0xb], 0xf ; mov edx, 0x83491ff2 ; ret
0x00000200007823d1 : sal byte ptr [rbp - 0xb], 0xf ; mov edx, 0x83491ff2 ; ret 0x8904
0x0000020000009bc9 : sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x000002000014ea09 : sal byte ptr [rbp - 0xc], 1 ; sfence ; ret
0x000002000013ca64 : sal byte ptr [rbp - 0xd], 0x3a ; ret 0x475
0x00000200007aebad : sal byte ptr [rbp - 0xd], 0xeb ; xchg eax, edx ; mov al, 1 ; ret
0x00000200004fd51f : sal byte ptr [rbp - 0xe], 1 ; ret
0x00000200001c63ae : sal byte ptr [rbp - 0xf], 0x48 ; add esp, 0x28 ; ret
0x0000020000640a1e : sal byte ptr [rbp - 0xf], 0x8b ; ret
0x0000020000230ca5 : sal byte ptr [rbx + 0x24], 1 ; xor eax, eax ; ret
0x00000200005efd69 : sal byte ptr [rbx + 0x44], 0x8b ; ret
0x0000020000455cb0 : sal byte ptr [rbx + 0x48], 3 ; ret 0x8548
0x0000020000190651 : sal byte ptr [rbx + 0xc], 0x8b ; ret 0xc2ff
0x0000020000050f5b : sal byte ptr [rbx + 5], 1 ; add qword ptr [rcx + 0x78], r8 ; ret
0x0000020000188a12 : sal byte ptr [rbx + 6], 1 ; mov eax, 0x21 ; ret
0x000002000079fe1f : sal byte ptr [rbx + 6], 1 ; or qword ptr [rcx + 0x18], 0xffffffffffffffff ; ret
0x0000020000099dae : sal byte ptr [rbx + 7], 0x4d ; mov dword ptr [rdx], eax ; mov rax, rcx ; ret
0x00000200000536e7 : sal byte ptr [rbx + rax + 0x41], 0xff ; ret 0x8d42
0x0000020000400db9 : sal byte ptr [rbx + rax + 0x48], 0x8b ; sbb byte ptr [rax - 0x75], cl ; ret
0x000002000070c069 : sal byte ptr [rbx + rax + 0x48], 0xff ; loopne 0x2000070c0c0 ; jmp rax
0x00000200001c4671 : sal byte ptr [rbx + rax + 0x48], cl ; jmp rdx
0x0000020000460bc9 : sal byte ptr [rbx + rax + 0x49], cl ; jmp rdx
0x000002000008c1ad : sal byte ptr [rbx + rax - 0x50], 1 ; ret
0x00000200000ffba2 : sal byte ptr [rbx + rax - 0x76], 0xc1 ; ret
0x00000200001fc69b : sal byte ptr [rbx + rax - 1], 0xc8 ; ret
0x00000200000daf52 : sal byte ptr [rbx + rbp - 0x75], cl ; ret
0x0000020000218d0b : sal byte ptr [rbx + rbx - 0xa], cl ; ret 0x7502
0x00000200003e9597 : sal byte ptr [rbx + rbx*2 + 0x44], 0x3b ; ret
0x00000200003e94b1 : sal byte ptr [rbx + rbx*8 + 0x32], 0xc0 ; ret
0x00000200004df9c3 : sal byte ptr [rbx + rcx + 0x48], 0x8b ; and al, 0x38 ; call rax
0x00000200004de0f1 : sal byte ptr [rbx + rcx + 0x48], 0x8b ; and al, 0x40 ; call rax
0x00000200001fd3f6 : sal byte ptr [rbx + rcx + 0x49], 0x8b ; ret
0x00000200000cf5b4 : sal byte ptr [rbx + rdi*4 - 0x15], 0xca ; mov al, 1 ; ret
0x00000200000365a5 : sal byte ptr [rbx + rdx - 0x75], cl ; ret 0x8948
0x00000200003e951b : sal byte ptr [rbx + rdx*2 + 0x44], 0x3b ; ret
0x000002000022dc5d : sal byte ptr [rbx + rdx*2 + 0x48], 0x2b ; ret
0x00000200000c8ad6 : sal byte ptr [rbx + rsi - 0x75], cl ; ret 0x8b41
0x0000020000402380 : sal byte ptr [rbx + rsi - 0x75], cl ; ret 0x8b4c
0x000002000000569f : sal byte ptr [rbx + rsi*2 + 0x48], 0x8b ; or byte ptr [r8 - 0x7d], r9b ; ret
0x0000020000456c00 : sal byte ptr [rbx + rsi*4 + 0x44], 0x8b ; ret
0x00000200001ac699 : sal byte ptr [rbx - 0x11], 0xff ; ret 0x8d48
0x00000200001f1f47 : sal byte ptr [rbx], 0xc0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000004b32a : sal byte ptr [rbx], 0xc0 ; jmp 0x2000004b2f6
0x0000020000157aa9 : sal byte ptr [rbx], 0xc0 ; ret
0x00000200003e0f66 : sal byte ptr [rbx], 0xd2 ; call 0x2000000c02e
0x00000200007c5ee8 : sal byte ptr [rbx], 0xd2 ; call 0x200000620f5
0x00000200000037ed : sal byte ptr [rbx], 0xd2 ; call 0x200000620f9
0x00000200003cc22b : sal byte ptr [rbx], 0xd2 ; call 0x20000068455
0x000002000047c558 : sal byte ptr [rbx], 0xd2 ; call 0x2000009e096
0x000002000049bb6e : sal byte ptr [rbx], 0xd2 ; call 0x200000bbbea
0x00000200001022c6 : sal byte ptr [rbx], 0xd2 ; call r9
0x00000200001a030b : sal byte ptr [rbx], 0xd2 ; call rax
0x00000200004a1db0 : sal byte ptr [rbx], 0xd2 ; mov rcx, r15 ; call 0x2000009e098
0x00000200004734af : sal byte ptr [rbx], 0xd2 ; mov rcx, rsi ; call 0x2000009e099
0x00000200001f3621 : sal byte ptr [rbx], 1 ; fisttp dword ptr [rcx - 0x7d] ; enter 0x49ff, -0x75 ; ret
0x000002000049eae6 : sal byte ptr [rbx], 1 ; rol bl, 0x49 ; mov eax, eax ; ret
0x00000200005f1cc9 : sal byte ptr [rbx], cl ; leave ; call 0x200000ed709
0x000002000011cd2b : sal byte ptr [rbx], cl ; leave ; call rax
0x00000200004930fd : sal byte ptr [rbx], cl ; ret
0x00000200003deabf : sal byte ptr [rcx + 0x49], 0x8b ; ret
0x000002000059f835 : sal byte ptr [rcx + 0x4c], 0x8b ; ret
0x000002000003f074 : sal byte ptr [rcx + 0x4d], 0x8b ; ret 0x2b4c
0x00000200006b32ae : sal byte ptr [rcx + rax*4 + 0x44], 0x8b ; ret
0x000002000023732a : sal byte ptr [rcx + rax*8 + 0x41], cl ; mov eax, edx ; jmp 0x20000237339
0x00000200001408f0 : sal byte ptr [rcx + rbp + 0x49], 0xff ; ret
0x00000200006aeeef : sal byte ptr [rcx + rbp - 0x75], cl ; ret 0xc148
0x00000200001af6ac : sal byte ptr [rcx + rbx + 0x48], 0x3b ; ret
0x00000200004c52ce : sal byte ptr [rcx + rbx + 0x48], 0x8b ; clc ; jmp 0x200004c529f
0x000002000066473e : sal byte ptr [rcx + rbx + 0x49], 0x83 ; ret 0x4502
0x00000200000d9d2e : sal byte ptr [rcx + rbx - 0x75], cl ; ret 0x41f0
0x00000200000e1027 : sal byte ptr [rcx + rbx*8 + 0x48], 3 ; ret 0xb4e9
0x00000200005d177e : sal byte ptr [rcx + rcx + 0x48], 0x3b ; ret
0x00000200004914fe : sal byte ptr [rcx + rcx + 0x48], 0x8b ; ret
0x000002000070f5ce : sal byte ptr [rcx + rcx + 0x48], 0x8b ; retf ; call rax
0x000002000010a5b5 : sal byte ptr [rcx + rcx + 0x48], 0xc7 ; ret
0x000002000000580d : sal byte ptr [rcx + rcx + 0x48], cl ; mov eax, edx ; ret
0x000002000070f5e3 : sal byte ptr [rcx + rcx - 0x75], 0xd7 ; mov rcx, rbx ; call rax
0x00000200005bfaff : sal byte ptr [rcx + rdx + 0x44], 0x8b ; ret
0x000002000021ef38 : sal byte ptr [rcx + rdx + 0x44], 0x8b ; ret 0x8b49
0x000002000013d1e2 : sal byte ptr [rcx + rdx + 0x48], 0x83 ; ret 0x4402
0x00000200005cb76c : sal byte ptr [rcx + rdx + 0x49], 3 ; ret
0x000002000051695a : sal byte ptr [rcx + rsi + 0x4c], 0x8b ; ret
0x00000200005caff0 : sal byte ptr [rcx - 0x3374b601], 1 ; call 0x200000e7258
0x0000020000090e6d : sal byte ptr [rdi + 0x27], 1 ; ret
0x000002000023003c : sal byte ptr [rdi + 0x2c], 3 ; ret
0x00000200004783cd : sal byte ptr [rdi + 3], 0x4c ; mov dword ptr [rdx], eax ; mov al, 1 ; ret
0x00000200000ddbd4 : sal byte ptr [rdi + 4], 1 ; sub rax, rdx ; ret
0x0000020000213157 : sal byte ptr [rdi + 5], 1 ; sub r8d, r10d ; jmp 0x2000021316f
0x0000020000703c1a : sal byte ptr [rdi + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200005197f1 : sal byte ptr [rdi + rax + 0x40], 0x8a ; iretd ; call rax
0x00000200001d832b : sal byte ptr [rdi + rax + 0x48], 0x3b ; ret
0x000002000004df5e : sal byte ptr [rdi + rax + 0x48], 0x8b ; and al, 0x78 ; call rax
0x0000020000451ed0 : sal byte ptr [rdi + rax + 0x4c], 0x89 ; xlatb ; or bh, bh ; ret 0xc1ff
0x000002000012adc6 : sal byte ptr [rdi + rax - 0x3a], cl ; add dword ptr [rax], eax ; mov eax, r8d ; ret
0x00000200003ea367 : sal byte ptr [rdi + rax - 0x50], 1 ; add rsp, 0x28 ; ret
0x00000200001ead8c : sal byte ptr [rdi + rax - 1], cl ; or byte ptr [rax], 0x1f ; add byte ptr [rax], al ; ret
0x000002000078808e : sal byte ptr [rdi + rax*2 + 0x45], 0x8b ; ret 0x394c
0x00000200002246ac : sal byte ptr [rdi + rax*8 + 0x44], 0x8b ; ret
0x00000200006be195 : sal byte ptr [rdi + rbp - 0x7b], cl ; fisttp dword ptr [rcx - 0x75] ; ret
0x000002000042be61 : sal byte ptr [rdi + rcx + 0x33], 0xc0 ; add rsp, 0x38 ; ret
0x00000200002131f6 : sal byte ptr [rdi + rcx + 0x41], 0x89 ; sbb dword ptr [rax - 1], ecx ; ret 0x8349
0x0000020000684185 : sal byte ptr [rdi + rcx + 0x48], 0x8b ; int 0xff
0x000002000018032b : sal byte ptr [rdi + rcx + 0x48], 0x8b ; ret
0x000002000021322c : sal byte ptr [rdi + rcx + 0x49], 0xff ; ret 0x8941
0x000002000043d05b : sal byte ptr [rdi + rcx + 0x4c], 0x8b ; ret 0x8b49
0x00000200000099fd : sal byte ptr [rdi + rcx - 0x75], 0xc1 ; ret
0x000002000004d23d : sal byte ptr [rdi + rcx*2 + 0x48], 0x83 ; ret
0x0000020000091e0f : sal byte ptr [rdi + rcx*2 + 0x48], 1 ; mov ebx, dword ptr [rsp + 0x10] ; ret
0x000002000012cc07 : sal byte ptr [rdi + rdi*2 + 0x4c], 0x8b ; ret
0x000002000068e974 : sal byte ptr [rdi + rdi*4 + 0x48], 0x8b ; and byte ptr [rbp + 0x63], r9b ; ret 0x8b49
0x00000200006cfc0f : sal byte ptr [rdi + rdx + 0x48], 0x83 ; ret
0x0000020000558f26 : sal byte ptr [rdi + rdx - 0x75], cl ; ret
0x00000200007a1276 : sal byte ptr [rdi + rsi + 0x48], 0x83 ; ret
0x0000020000656fd9 : sal byte ptr [rdi + rsi + 0x48], 0x8b ; or r8b, bpl ; ret
0x0000020000050f6f : sal byte ptr [rdi - 0x14], 1 ; ret
0x00000200006c065b : sal byte ptr [rdx + 0x2a], 0xff ; ret 0xfa83
0x00000200006becbb : sal byte ptr [rdx + 0x36], 0xff ; ret 0xfa83
0x00000200006bd777 : sal byte ptr [rdx + 0x37], 0xff ; ret 0xfa83
0x00000200001d65f9 : sal byte ptr [rdx + 0x48], 0x8d ; push rax ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200005db220 : sal byte ptr [rdx + 0x840e801], 1 ; ret 0x90ff
0x00000200000c5df4 : sal byte ptr [rdx + 0xa], 1 ; mov al, cl ; ret
0x00000200006d1349 : sal byte ptr [rdx + 4], cl ; mov dword ptr [r8], edx ; ret
0x000002000010b590 : sal byte ptr [rdx + 6], 0x44 ; cmp ecx, eax ; jb 0x2000010b5c1 ; ret
0x00000200001f75d6 : sal byte ptr [rdx + 9], 1 ; mov edx, 1 ; mov eax, edx ; jmp 0x200001f75f0
0x00000200001ba283 : sal byte ptr [rdx + rax - 0x4e], 1 ; mov al, dl ; ret
0x0000020000706385 : sal byte ptr [rdx + rax - 0x50], 1 ; add rsp, 0x28 ; ret
0x00000200001c45e2 : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 0x28 ; ret
0x000002000001053f : sal byte ptr [rdx + rax*8 + 0x4d], 0x8b ; ret
0x0000020000644a0e : sal byte ptr [rdx + rbp + 0x41], 0x3b ; ret 0x1b76
0x00000200004d06df : sal byte ptr [rdx + rbp + 0x41], 0xf6 ; ret 0xf03
0x0000020000693c52 : sal byte ptr [rdx + rbp + 0x4a], 0x8b ; call qword ptr [rax]
0x00000200006b0c14 : sal byte ptr [rdx + rbp - 0x75], cl ; ret 0xc148
0x00000200000f74de : sal byte ptr [rdx + rbx + 0x48], 0x8b ; ret 0x2b49
0x00000200005cb720 : sal byte ptr [rdx + rbx + 0x49], 3 ; ret
0x000002000041f616 : sal byte ptr [rdx + rbx - 0x75], cl ; ret 0xc2ff
0x000002000013c9b1 : sal byte ptr [rdx + rcx + 0x48], 0xff ; ret 0xc2f6
0x0000020000119620 : sal byte ptr [rdx + rcx*4 + 0x4c], 0x3b ; ret
0x000002000051c349 : sal byte ptr [rdx + rdx + 0x44], 0x8b ; ret
0x000002000021ef73 : sal byte ptr [rdx + rdx + 0x44], 0x8b ; ret 0x8b49
0x00000200000039fa : sal byte ptr [rdx + rsi + 0x41], 0x8b ; add byte ptr [rax - 0x7d], cl ; ret 0xf08
0x00000200003d2008 : sal byte ptr [rdx + rsi + 0x44], 0x8b ; ret
0x0000020000693823 : sal byte ptr [rdx + rsi + 0x48], 3 ; ret 0x4eb
0x0000020000008382 : sal byte ptr [rdx - 0x10], 1 ; ret
0x00000200001bcafe : sal byte ptr [rdx - 0x10], 1 ; xor eax, eax ; ret
0x0000020000213abf : sal byte ptr [rdx - 0x11], 0xb0 ; add ebx, eax ; xor al, al ; ret
0x000002000002b134 : sal byte ptr [rdx - 0x13], 1 ; xor eax, eax ; ret
0x0000020000021680 : sal byte ptr [rdx - 0x17], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000043190c : sal byte ptr [rdx - 0x1d], 1 ; mov dword ptr [rcx + 0x7c], r8d ; ret
0x0000020000201abe : sal byte ptr [rdx - 0x1d], cl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002f85e : sal byte ptr [rdx - 0x21], 1 ; ret
0x000002000002d082 : sal byte ptr [rdx - 0x21], cl ; xor eax, eax ; ret
0x0000020000213b1e : sal byte ptr [rdx - 0x2e], cl ; mov al, 1 ; ret
0x0000020000425678 : sal byte ptr [rdx - 0x32], 1 ; xor eax, eax ; ret
0x00000200005fe213 : sal byte ptr [rdx - 0x3474b7ff], 0xe8 ; ret 0xac6d
0x000002000077aff5 : sal byte ptr [rdx - 0x75], cl ; ret 0x8b48
0x00000200003e3a65 : sal byte ptr [rdx - 0x75], cl ; ret 0xc148
0x00000200001a429e : sal byte ptr [rdx - 0xd], 0x8b ; ret 0x348
0x0000020000213adb : sal byte ptr [rdx - 0xd], 1 ; mov al, 1 ; ret
0x000002000021323b : sal byte ptr [rdx - 0xf], 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001ea084 : sal byte ptr [rsi + 0x48], 0x8b ; ret 0x8548
0x000002000049b9d4 : sal byte ptr [rsi + 1], 1 ; ret
0x0000020000119a63 : sal byte ptr [rsi + rax + 0x38], cl ; and dword ptr [r13 + 1], esi ; ret
0x0000020000719fe9 : sal byte ptr [rsi + rax + 0x3a], cl ; sal byte ptr [rbp + 2], 1 ; xor eax, eax ; ret
0x00000200005ba53a : sal byte ptr [rsi + rax + 0x48], cl ; mov ecx, dword ptr [rbp + 0x30] ; call rdx
0x000002000069716a : sal byte ptr [rsi + rax - 0x48], 1 ; xor al, 0 ; add al, al ; ret
0x00000200006afdf2 : sal byte ptr [rsi + rax - 0x75], cl ; and al, 0x28 ; mov dword ptr [rdx], ecx ; ret
0x00000200003d4817 : sal byte ptr [rsi + rbp - 0x75], cl ; ret 0xffb9
0x000002000077aca5 : sal byte ptr [rsi + rbx - 0x75], cl ; ret 0x8b48
0x000002000066e53d : sal byte ptr [rsi + rbx*2 + 0x4d], 0x8b ; call qword ptr [rax]
0x000002000012fa3a : sal byte ptr [rsi + rcx + 0x44], 0x8b ; ret
0x000002000020f31a : sal byte ptr [rsi + rcx + 0x45], 0x3b ; ret 0x2f89
0x0000020000440756 : sal byte ptr [rsi + rcx + 0x48], 0x63 ; ret 0x8b4c
0x000002000014755c : sal byte ptr [rsi + rcx + 0x48], 0x83 ; ret 0x4402
0x00000200003f3773 : sal byte ptr [rsi + rcx + 0x4c], 0x8b ; ret
0x00000200005a0a54 : sal byte ptr [rsi + rcx - 0x75], cl ; ret
0x000002000000f60f : sal byte ptr [rsi + rdi*4 + 0x48], 0x3b ; ret
0x000002000055cd4d : sal byte ptr [rsi + rdx*2 + 0x44], 0x8b ; ret
0x00000200003ccddd : sal byte ptr [rsi - 0x10], 1 ; ret
0x00000200003cff00 : sal byte ptr [rsi - 0x15], 1 ; add rsp, 0x28 ; ret
0x000002000022a5ae : sal byte ptr [rsi - 0x1b], 1 ; add dword ptr [r10 + 0x14], edx ; xor eax, eax ; ret
0x00000200001b8e47 : sal byte ptr [rsi - 9], cl ; ret 0xfff
0x000002000021907b : sal byte ptr [rsp + 0x41], 0x8b ; add byte ptr [rax - 0x7d], cl ; ret 0xf08
0x00000200001300e3 : sal byte ptr [rsp + rax + 0x33], cl ; leave ; call rdx
0x00000200006b01e7 : sal byte ptr [rsp + rax + 0x48], 0x8b ; pop rax ; or byte ptr [rax - 0x75], cl ; ret
0x000002000066482e : sal byte ptr [rsp + rax + 0x48], cl ; mov eax, dword ptr [rdx] ; ret
0x000002000013cb2e : sal byte ptr [rsp + rax - 0x7c], cl ; div byte ptr [rbp - 0x75] ; xor eax, eax ; ret
0x00000200006cfdfe : sal byte ptr [rsp + rbx + 0x48], 0x83 ; ret
0x00000200006ad02b : sal byte ptr [rsp + rbx*2 + 0x48], 0x8d ; push rsp ; and al, 0x58 ; call rax
0x000002000004da12 : sal byte ptr [rsp + rcx + 0x3c], 2 ; je 0x2000004da25 ; mov eax, ecx ; ret
0x000002000024a529 : sal byte ptr [rsp + rcx + 0x40], 0x88 ; xor byte ptr [rax + 3], cl ; ret
0x00000200005a1f8e : sal byte ptr [rsp + rcx + 0x48], 0x83 ; ret 0x6608
0x00000200001ade39 : sal byte ptr [rsp + rcx + 0x48], 0x8d ; and al, 0x30 ; call rax
0x00000200005ec069 : sal byte ptr [rsp + rcx*2 + 0x48], 0x83 ; ret
0x00000200006d7970 : sal byte ptr [rsp + rcx*2 - 0x75], cl ; ret 0x8d48
0x000002000052e185 : sal byte ptr [rsp + rdi*4 + 0x44], 0x8b ; ret
0x000002000009d986 : sal byte ptr [rsp + rdx + 0x33], 0xc0 ; ret
0x00000200006cfc4c : sal byte ptr [rsp + rdx + 0x48], 0x83 ; ret
0x000002000013ccb4 : sal byte ptr [rsp + rdx + 0x48], 0xff ; ret 0xff49
0x00000200001398ad : sal byte ptr [rsp + rdx + 0x49], 0x81 ; ret 0x1000
0x000002000064c5a2 : sal byte ptr [rsp + rdx*2 - 0x73], 0x4d ; or ch, al ; ret
0x00000200004ea7b1 : sal byte ptr [rsp + rdx*4 + 0x48], 0x8b ; ret
0x00000200005fc84f : sal byte ptr [rsp + rdx*8 + 0x48], 0x8b ; ror dword ptr [rax - 0x75], cl ; ret
0x0000020000582cd0 : sal byte ptr [rsp + rsi - 0x75], cl ; ret 0xffb9
0x00000200006be80b : sal byte ptr [rsp + rsi - 0x7b], cl ; fisttp dword ptr [rcx - 0x75] ; ret
0x00000200001cec68 : sal dh, 0xff ; add rsp, 0x58 ; ret
0x00000200005abd4b : sal dh, 1 ; rcl dword ptr [rax], -0x75 ; ret 0xf41
0x000002000008f81b : sal dh, 1 ; ret
0x00000200003eb311 : sal dh, 1 ; ret 0x7401
0x000002000004791f : sal dh, 1 ; ret 0x7404
0x000002000020fa4c : sal dh, 1 ; ret 0x753f
0x00000200000b2ef8 : sal dh, 1 ; ret 0xf01
0x000002000024b6bc : sal dh, 1 ; ret 0xf03
0x000002000009600f : sal dh, 1 ; ret 0xf10
0x0000020000122431 : sal dh, cl ; ret
0x00000200004f128f : sal dh, cl ; ret 0x7507
0x0000020000070147 : sal dh, cl ; ret 0xf1e
0x00000200005098b2 : sal dword ptr [rax + 0x48], 0x39 ; or dword ptr [rbp + 3], esi ; xor eax, eax ; ret
0x0000020000434591 : sal dword ptr [rax + rcx - 0xa], 1 ; ret 0x7504
0x00000200001f2f5d : sal dword ptr [rax + rsi + 0x4d], 0x2b ; ret 0x2b4c
0x000002000051a7ec : sal dword ptr [rax - 0x18], 0x19 ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000569776 : sal dword ptr [rax], -0x18 ; ret
0x000002000052d667 : sal dword ptr [rbp + 0x64], -0x7f ; call qword ptr [rax]
0x000002000070e272 : sal dword ptr [rbp + 3], 1 ; xor eax, eax ; ret
0x00000200001c2478 : sal dword ptr [rbp + 4], 0x41 ; mov eax, eax ; ret
0x00000200000273bc : sal dword ptr [rbp + 4], 0x49 ; mov eax, eax ; ret
0x000002000068a393 : sal dword ptr [rbp + rax + 0x66], 0x3b ; ret 0x2875
0x00000200006c662e : sal dword ptr [rbp + rcx + 0x41], -1 ; ret
0x0000020000039866 : sal dword ptr [rbp + rcx - 0x75], cl ; ret 0xf49
0x00000200005098d8 : sal dword ptr [rbp - 0x14], 1 ; lea eax, dword ptr [r8 + 0x48] ; ret
0x000002000002ce30 : sal dword ptr [rbp - 0xb], cl ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x000002000008390c : sal dword ptr [rbx + 3], -0x50 ; add ebx, eax ; xor al, al ; ret
0x0000020000604884 : sal dword ptr [rbx + 3], 1 ; mov al, 1 ; ret
0x0000020000220386 : sal dword ptr [rbx + 4], 0x44 ; mov cr0, rcx ; ret
0x000002000002d073 : sal dword ptr [rbx + 4], 0x49 ; mov eax, ecx ; ret
0x0000020000110f8f : sal dword ptr [rbx + 4], 1 ; or eax, 0xffffffff ; ret
0x00000200000792fd : sal dword ptr [rbx + 5], 0x48 ; add esp, 0x28 ; ret
0x000002000066f22a : sal dword ptr [rbx + 6], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000020e691 : sal dword ptr [rbx + rax + 0x32], -0x40 ; ret
0x000002000011cf84 : sal dword ptr [rbx + rcx + 0x48], 0x3b ; ret 0x974
0x000002000017e661 : sal dword ptr [rbx + rdx + 0x48], -0x73 ; dec dword ptr [r9 + 3] ; ret 0x2349
0x000002000068c714 : sal dword ptr [rbx + rdx + 0x66], 0x3b ; ret 0xe74
0x000002000021179b : sal dword ptr [rbx - 0xf], 0x48 ; mov eax, edx ; ret
0x00000200003e4a42 : sal dword ptr [rbx], 0x44 ; and al, 0x38 ; ret
0x0000020000629c2b : sal dword ptr [rbx], 1 ; ret 0xbfff
0x00000200000482e2 : sal dword ptr [rbx], cl ; rol bl, 0x49 ; mov eax, eax ; ret
0x0000020000026982 : sal dword ptr [rcx + rbp + 0x48], -0x75 ; sbb byte ptr [r9 - 0x7d], r9b ; ret 0x4108
0x0000020000178e0f : sal dword ptr [rcx + rcx + 0x49], 0x3b ; ret
0x000002000013b5a7 : sal dword ptr [rcx + rdx*8 + 0x44], 0x2b ; rol dword ptr [rcx - 0x75], -0x40 ; ret
0x0000020000517a9b : sal dword ptr [rcx], 1 ; ret 0x48ff
0x000002000000c375 : sal dword ptr [rdi + 0x12], 1 ; cmp qword ptr [rcx + 8], rax ; je 0x2000000c388 ; ret
0x0000020000556308 : sal dword ptr [rdi + 0x14], -1 ; ret 0x8349
0x000002000006c076 : sal dword ptr [rdi + 0x20], -0x17 ; ret
0x00000200000888e9 : sal dword ptr [rdi + 1], 1 ; ret
0x000002000069e419 : sal dword ptr [rdi + 6], -0x48 ; cmp al, 0 ; add byte ptr [rax], al ; ret
0x000002000070a04c : sal dword ptr [rdi + 7], 0x45 ; sub ecx, edx ; mov dword ptr [r8], r9d ; ret
0x000002000047529d : sal dword ptr [rdi + rax + 0x32], -0x40 ; add rsp, 8 ; ret
0x00000200004240bb : sal dword ptr [rdi], -0x2d ; dec dword ptr [rax - 0x75] ; ret
0x000002000042f3f6 : sal dword ptr [rdx + 0xb], 0x48 ; add esp, 0x28 ; ret
0x00000200007784b9 : sal dword ptr [rdx + 0xe], 0x3b ; ret 0x1773
0x00000200004aa1f8 : sal dword ptr [rdx + 1], 1 ; ret
0x000002000011cf71 : sal dword ptr [rdx + rcx + 0x48], 0x3b ; ret 0x1c74
0x00000200006d3686 : sal dword ptr [rdx + rcx - 0x75], 1 ; ret 0x2341
0x000002000043b6ec : sal dword ptr [rdx - 0x14], 1 ; mov byte ptr [r8], r10b ; ret
0x00000200004990e0 : sal dword ptr [rdx - 0x15], 1 ; mov rax, r8 ; shr rax, 1 ; ret
0x0000020000043972 : sal dword ptr [rdx - 0x16], 1 ; xor eax, eax ; ret
0x000002000049bda3 : sal dword ptr [rdx - 0x17], -1 ; ret
0x0000020000007031 : sal dword ptr [rdx - 0x17], 1 ; mov eax, 0x10 ; ret
0x0000020000687e7f : sal dword ptr [rdx - 0x19], -0x15 ; sbb byte ptr [rbp - 0x75], al ; ret
0x000002000043aafb : sal dword ptr [rdx - 0x20], -0x75 ; ret 0x48c3
0x00000200000265fd : sal dword ptr [rdx - 0x20], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200007d24ef : sal dword ptr [rdx - 0x22], 1 ; add rsp, 0x28 ; ret
0x0000020000046dd9 : sal dword ptr [rdx - 0x23], 1 ; ret
0x000002000021311b : sal dword ptr [rdx - 0x23], cl ; ret
0x00000200000482e0 : sal dword ptr [rdx - 0x2d], cl ; xor eax, eax ; ret
0x00000200000f8476 : sal dword ptr [rdx - 0x68], 0x3b ; ret 0x9472
0x0000020000039095 : sal dword ptr [rdx], -0x40 ; ret
0x000002000019e080 : sal dword ptr [rdx], -9 ; jmp 0x20033dc6bd2
0x000002000002be42 : sal dword ptr [rsi + 5], 0x48 ; add esp, 0x38 ; ret
0x00000200000cf6b6 : sal dword ptr [rsi + 5], 1 ; add rsp, 0x38 ; ret
0x0000020000032b5a : sal dword ptr [rsi + 6], 1 ; mov eax, 1 ; ret
0x000002000064db0c : sal dword ptr [rsi + 9], 0x41 ; lea eax, dword ptr [rcx - 2] ; sub ax, dx ; jmp 0x2000064db36
0x000002000010d3e8 : sal dword ptr [rsi + rax - 0x75], cl ; ret 0x8d49
0x0000020000130d9e : sal dword ptr [rsi - 0x12], -0x7d ; sar bh, 0x75 ; int1 ; ret
0x0000020000137b73 : sal dword ptr [rsi - 0x14], 1 ; mov dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x0000020000140896 : sal dword ptr [rsp + rdx + 0x49], -1 ; ret
0x000002000059d2e0 : sal eax, -0x7d ; ret
0x00000200001cdcfa : sal eax, 0x48 ; mov eax, ecx ; ret
0x000002000043daab : sal edi, 1 ; ret 0x4cff
0x000002000002c02d : sal edi, 1 ; ret 0xffff
0x000002000024c674 : sal edi, 1 ; ror dword ptr [rax + 3], 1 ; ret
0x00000200002476be : sal edi, cl ; ror dword ptr [rcx - 0x7d], 1 ; ret
0x0000020000247b6e : sal edi, cl ; ror dword ptr [rcx - 0x7d], 1 ; ret 0x4508
0x000002000017e1f9 : sal esi, 1 ; ret
0x000002000063c733 : sal esi, 1 ; ret 0x49ff
0x00000200001a64ab : sal esi, 1 ; ret 0x7401
0x000002000041d8fa : sal esi, cl ; ret
0x000002000022282a : sal esi, cl ; rol byte ptr [rcx + 0x22], 1 ; ret
0x000002000003db3b : sal esp, 0x20 ; add bl, ch ; ret 0x8348
0x000002000008f81a : sal r14b, 1 ; ret
0x000002000051e6db : salc ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x9d7c4ac], cl ; ret 0xf20
0x00000200001e3bc4 : salc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001c88fd : salc ; add byte ptr [rax], al ; add byte ptr [rsp + rdx - 0x7f], dh ; call rcx
0x0000020000149965 : salc ; add byte ptr [rax], al ; add cl, ch ; rol dh, cl ; add byte ptr [rax], al ; ret
0x0000020000701909 : salc ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000014894b : salc ; add byte ptr [rax], al ; ret
0x000002000010c986 : salc ; add r8d, edx ; jmp 0x2000010c969
0x0000020000705a8f : salc ; add rsp, 0x20 ; pop rbx ; ret
0x000002000066fbf0 : salc ; and bh, bh ; ret 0x553b
0x0000020000548b42 : salc ; and eax, 0x189b800 ; add al, al ; ret
0x000002000043861d : salc ; call 0x2000005f0a4
0x00000200004b498c : salc ; call 0x200000d9f74
0x00000200004b9095 : salc ; call 0x200000e4e94
0x00000200004b934b : salc ; call 0x200000e5344
0x00000200005d0d3c : salc ; call 0x2000024d003
0x0000020000621368 : salc ; call 0x2000024d004
0x000002000062a7ab : salc ; call 0x2000024da44
0x0000020000790b79 : salc ; call 0x200004b3099
0x00000200005c215b : salc ; call 0x200004ede1c
0x00000200007c602b : salc ; call 0x200007d226b
0x00000200000fb320 : salc ; call qword ptr [rdi]
0x000002000022bf6a : salc ; call r10
0x000002000023b603 : salc ; call r11
0x000002000013c36b : salc ; call r14
0x0000020000177732 : salc ; call rax
0x000002000067a419 : salc ; call rdi
0x000002000022ef47 : salc ; cmovne rcx, r11 ; call rax
0x0000020000597944 : salc ; dec dword ptr [rax - 0x3f] ; cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200001a0c75 : salc ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200005baf2c : salc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc933
0x0000020000203fdf : salc ; imul rax, rcx ; div r8 ; ret
0x00000200006d37e2 : salc ; in al, -1 ; add rsp, 0x38 ; ret
0x000002000066e8b3 : salc ; je 0x2000066e8e3 ; lea rcx, qword ptr [rdi + 0x28] ; call 0x2000051ab5d
0x00000200004468be : salc ; lea ecx, dword ptr [rdi + 9] ; call 0x2000006c737
0x000002000051f9e0 : salc ; lea rcx, qword ptr [rsp + 0x28] ; call 0x200001480d9
0x00000200006a3643 : salc ; lea rcx, qword ptr [rsp + 0x50] ; call 0x2000005f908
0x00000200006a3664 : salc ; lea rcx, qword ptr [rsp + 0x60] ; call 0x2000005f908
0x00000200001fd584 : salc ; mov dword ptr [r10 + 4], r9d ; ret
0x000002000062a984 : salc ; mov ecx, 0x200 ; call 0x2000024da49
0x000002000048530e : salc ; mov ecx, ebx ; call rax
0x00000200000fca0c : salc ; mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x200000fca07
0x00000200004ee56d : salc ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005f49a8 : salc ; mov r8d, dword ptr [rbx] ; mov rcx, rbp ; call rax
0x00000200000c2e6f : salc ; mov rcx, qword ptr [rdi + 0xd8] ; call qword ptr [rax]
0x00000200005df8a6 : salc ; mov rcx, qword ptr [rsp + 0x40] ; call 0x2000020bd3d
0x000002000042b827 : salc ; mov rcx, r12 ; call 0x2000004fce7
0x0000020000020d0c : salc ; mov rcx, r12 ; call r15
0x000002000050178f : salc ; mov rcx, r13 ; call rax
0x000002000052a523 : salc ; mov rcx, r14 ; call r9
0x00000200004e1ff7 : salc ; mov rcx, r15 ; call 0x2000008e25e
0x00000200004e1fc2 : salc ; mov rcx, r15 ; call 0x2000008e2a2
0x0000020000129016 : salc ; mov rcx, r15 ; call r14
0x00000200003fbad6 : salc ; mov rcx, r15 ; call rax
0x00000200001e5c06 : salc ; mov rcx, r15 ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r15]
0x0000020000447878 : salc ; mov rcx, rax ; call 0x2000006f59b
0x000002000051ebe6 : salc ; mov rcx, rax ; call 0x200001412cb
0x0000020000717935 : salc ; mov rcx, rax ; call r15
0x00000200003f27bc : salc ; mov rcx, rbp ; call rax
0x000002000046d444 : salc ; mov rcx, rbx ; call 0x2000008f0fb
0x000002000058f23b : salc ; mov rcx, rbx ; call 0x200001b5def
0x00000200005a3023 : salc ; mov rcx, rbx ; call 0x200004ff2ce
0x000002000045521f : salc ; mov rcx, rbx ; call r11
0x000002000013c43f : salc ; mov rcx, rbx ; call r14
0x0000020000595010 : salc ; mov rcx, rbx ; call rax
0x0000020000682026 : salc ; mov rcx, rdi ; call 0x2000008e2a2
0x00000200004c7c63 : salc ; mov rcx, rdi ; call 0x200000f02ab
0x00000200001cd4dd : salc ; mov rcx, rdi ; call 0x2000013977e
0x0000020000516aef : salc ; mov rcx, rdi ; call 0x2000013c1b7
0x000002000051ebf4 : salc ; mov rcx, rdi ; call 0x2000014122f
0x000002000062136f : salc ; mov rcx, rdi ; call 0x2000024d007
0x00000200007bbc55 : salc ; mov rcx, rdi ; call 0x200003e1c87
0x000002000013c46f : salc ; mov rcx, rdi ; call r14
0x0000020000179aa7 : salc ; mov rcx, rdi ; call rbx
0x00000200005d0cfe : salc ; mov rcx, rsi ; call 0x2000024d006
0x00000200006dc902 : salc ; mov rcx, rsi ; call rax
0x000002000056888e : salc ; movsb byte ptr [rdi], byte ptr [rsi] ; fcos ; ret
0x0000020000521b2e : salc ; movsxd rdx, ebx ; dec dword ptr [rax - 0x7b] ; leave ; je 0x20000521b4a ; ret
0x000002000055073e : salc ; push -0x7cb7000f ; ret
0x000002000002b512 : salc ; ret
0x000002000044fa09 : salc ; ret 0x40ff
0x000002000077ac51 : salc ; ret 0x48ff
0x0000020000684026 : salc ; ret 0xffa6
0x0000020000728efa : salc ; ret 0xffbf
0x0000020000695ac6 : salc ; ret 0xffed
0x000002000018b5a6 : salc ; ret 0xfffc
0x00000200007cbf8b : salc ; ret 0xfffe
0x00000200004734b6 : salc ; stosd dword ptr [rdi], eax ; ret 0x48ff
0x00000200006cdea3 : salc ; xor al, al ; ret
0x00000200001ed2e4 : salc ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000498722 : sar ah, 0x48 ; add esp, 0x28 ; ret
0x00000200007bd065 : sar al, 0xff ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200006a993f : sar bh, 0x46 ; sbb byte ptr [rcx - 0x7d], cl ; ret 0x8918
0x00000200004e341c : sar bh, 0x48 ; add esp, 0x28 ; ret
0x00000200004148ba : sar bh, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x00000200004089a4 : sar bh, 0x48 ; add esp, 0x38 ; ret
0x0000020000519c0f : sar bh, 0x48 ; add esp, 0x50 ; pop rbx ; ret
0x000002000053e64f : sar bh, 0x48 ; add esp, 0x58 ; ret
0x0000020000535274 : sar bh, 0x48 ; add esp, 0x78 ; ret
0x0000020000530c18 : sar bh, 0x48 ; add esp, 0x88 ; ret
0x00000200004725f4 : sar bh, 0x48 ; mov eax, dword ptr [rax + 0x7c0] ; ret
0x00000200004e5ede : sar bh, 0x49 ; add edi, 0x30 ; jmp 0x200004e5f03
0x00000200002409f0 : sar bh, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x20000240a01
0x000002000024aaa0 : sar bh, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x2000024aab1
0x0000020000789831 : sar bh, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x20000789842
0x0000020000130da2 : sar bh, 0x75 ; int1 ; ret
0x000002000077f2f7 : sar bh, 0x75 ; jmp 0x1ffec3a7e4d
0x00000200001d5561 : sar bh, 0x75 ; out dx, al ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x00000200006f37a6 : sar bh, 0x75 ; ret
0x00000200003d9a27 : sar bh, 0x75 ; xlatb ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000401f2d : sar bh, 0x84 ; ror byte ptr [rdi], 0x95 ; ret 0x3d83
0x00000200007a8a72 : sar bh, 0x85 ; ror byte ptr [rdi], 0x85 ; ret
0x00000200003fc8e0 : sar bh, 0x8a ; ret
0x00000200003fb121 : sar bh, 0x8b ; ret
0x00000200003fa669 : sar bh, 0xc0 ; add rsp, 0x28 ; ret
0x000002000024c5c1 : sar bh, 0xc0 ; ret
0x00000200003e3bb9 : sar bh, 0xc8 ; ret
0x000002000053f895 : sar bh, 0xcc ; and qword ptr [rcx], 0 ; ret
0x00000200007a9448 : sar bh, 0xe8 ; push rcx ; wait ; ret 0xb8ff
0x00000200006753e2 : sar bh, 0xeb ; adc ecx, dword ptr [rbp + rcx*4 + 0xd] ; ret
0x000002000054cebd : sar bh, 0xf ; mov edx, 0x8b480a2b ; ret
0x000002000013fb80 : sar bh, 0xff ; jmp qword ptr [rcx]
0x00000200004effc3 : sar bh, 0xff ; ret
0x00000200003d3f82 : sar bh, 0xff ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000044b949 : sar bh, 1 ; add rsp, 0x28 ; ret
0x0000020000430d7b : sar bh, 1 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000438f31 : sar bh, 1 ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000438834 : sar bh, 1 ; add rsp, 0x60 ; pop rbx ; ret
0x000002000061c3c2 : sar bh, 1 ; call 0x2000007d088
0x0000020000633f7e : sar bh, 1 ; call rax
0x00000200005ea55a : sar bh, 1 ; cmp al, 0 ; add byte ptr [rax], al ; ret
0x000002000070f6e5 : sar bh, 1 ; ret
0x00000200000fca10 : sar bh, 1 ; ret 0xeceb
0x0000020000528eef : sar bh, cl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000040bfac : sar bh, cl ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000778109 : sar bh, cl ; call qword ptr [rsi]
0x00000200006017ae : sar bh, cl ; call rax
0x000002000069ccd1 : sar bh, cl ; dec dword ptr [rax - 0x75] ; or r8b, bpl ; ret
0x000002000052ab76 : sar bh, cl ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005252bb : sar bh, cl ; mov rcx, qword ptr [rbp + 0x40] ; call 0x20000148079
0x000002000052530f : sar bh, cl ; mov rcx, qword ptr [rbp + 0x48] ; call 0x20000148079
0x000002000042dc01 : sar bh, cl ; nop ; add rsp, 0x28 ; ret
0x00000200005fbefd : sar bh, cl ; ret
0x00000200003d0568 : sar bl, 0xeb ; ret 0x8b4c
0x000002000016bd58 : sar byte ptr [r11], 1 ; ret
0x000002000016afd5 : sar byte ptr [r11], 1 ; ret 0x287d
0x00000200005ae0a7 : sar byte ptr [rax + 0x10], 0xff ; ret
0x00000200006af94f : sar byte ptr [rax + 0x11], 0xff ; ret 0x6348
0x00000200006510f8 : sar byte ptr [rax + 0x12], 0xff ; ret
0x0000020000792617 : sar byte ptr [rax + 0x13], 0x8a ; ret
0x000002000064c0eb : sar byte ptr [rax + 0x17], 0xf7 ; ret
0x00000200007058b0 : sar byte ptr [rax + 0x18], 0xff ; ret
0x00000200004360a1 : sar byte ptr [rax + 0x19], 0x8a ; ret
0x00000200006e8fdd : sar byte ptr [rax + 0x19], 0xff ; ret
0x0000020000435418 : sar byte ptr [rax + 0x2d], 0x8a ; ret
0x00000200007b7a06 : sar byte ptr [rax + 0x2d], 0xff ; ret
0x00000200006e8878 : sar byte ptr [rax + 0x30], 0x8a ; ret
0x00000200007a1817 : sar byte ptr [rax + 0x3f], 0xff ; ret
0x00000200001b75bd : sar byte ptr [rax + 0x48], 0x81 ; ret
0x00000200005b5251 : sar byte ptr [rax + 0x48c933ff], 0xff ; ret
0x0000020000510675 : sar byte ptr [rax + 0x4d], 0x8b ; ret
0x0000020000632b36 : sar byte ptr [rax + 0x50], 0xe8 ; ret 0xdc9d
0x00000200004bda27 : sar byte ptr [rax + 0x5b], 0x48 ; mov ecx, esi ; call 0x200000e7da9
0x0000020000692b34 : sar byte ptr [rax + 0x64], 0x8b ; ret
0x0000020000411672 : sar byte ptr [rax + 0x67], 0xf6 ; ret
0x00000200004636cd : sar byte ptr [rax + 0x69], 0x8b ; ret
0x00000200001fda6b : sar byte ptr [rax + 0xa], 0x8b ; ret
0x00000200006af32e : sar byte ptr [rax + 0xb], 0xff ; ret 0x6348
0x00000200006f3feb : sar byte ptr [rax + 0xc], 0x8b ; ret
0x00000200004b4a70 : sar byte ptr [rax + 0xc], 0xff ; ret
0x0000020000128e9d : sar byte ptr [rax + 0xe], 0x4c ; sub ecx, edx ; mov qword ptr [r8], r9 ; ret
0x000002000022bd75 : sar byte ptr [rax + 0xf], 0x48 ; mov ecx, dword ptr [rsi] ; call 0x20000148078
0x00000200006af9a6 : sar byte ptr [rax + 0xf], 0xff ; ret 0x6348
0x000002000068f16a : sar byte ptr [rax + 2], 0x8b ; ret
0x0000020000112eec : sar byte ptr [rax + 2], 0xff ; ret
0x0000020000026424 : sar byte ptr [rax + 3], 0x41 ; mov dword ptr [rdx], ecx ; ret
0x00000200000296ea : sar byte ptr [rax + 5], 0x48 ; add esp, 0x28 ; ret
0x000002000046530b : sar byte ptr [rax + 6], 0x48 ; add esp, 0x60 ; pop rbx ; ret
0x00000200001b33f5 : sar byte ptr [rax + 7], 0x49 ; sub edx, ecx ; mov qword ptr [r8], rdx ; ret
0x0000020000558283 : sar byte ptr [rax + 7], 0xe8 ; cmp eax, 0x8bffbdb9 ; ret
0x00000200007b0d05 : sar byte ptr [rax + 7], 0xff ; ret
0x0000020000438a97 : sar byte ptr [rax + 9], 0xff ; ret
0x000002000052c50a : sar byte ptr [rax - 0x24], cl ; dec dword ptr [rax - 0x39] ; ret 0x5d00
0x000002000000a605 : sar byte ptr [rax - 0xc], 0x48 ; mov eax, edx ; ret
0x000002000011d071 : sar byte ptr [rax - 0xf], 0x48 ; mov eax, edx ; ret
0x0000020000043789 : sar byte ptr [rax], 0x48 ; lea eax, dword ptr [rax + rax*4] ; lea rax, qword ptr [rdx + rax*8] ; ret
0x000002000003fc55 : sar byte ptr [rax], 1 ; setne al ; ret
0x00000200006936e1 : sar byte ptr [rax], 5 ; pushfq ; ret
0x000002000077e618 : sar byte ptr [rax], 5 ; ret
0x000002000068dc67 : sar byte ptr [rbp + 0xd], 0x8b ; sbb byte ptr [r15], cl ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x00000200000e95d0 : sar byte ptr [rbx + rax - 0x50], 1 ; add ebx, eax ; xor al, al ; ret
0x00000200005945c2 : sar byte ptr [rbx - 0x3ffffff3], 0xf ; ret
0x0000020000027bfa : sar byte ptr [rbx], 0xc1 ; ja 0x20000027c05 ; ret
0x00000200001d4680 : sar byte ptr [rbx], 0xc2 ; jl 0x200001d4676 ; or eax, 0xffffffff ; ret
0x0000020000551324 : sar byte ptr [rbx], 1 ; or al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000075fd7 : sar byte ptr [rbx], 1 ; ret
0x000002000016afd6 : sar byte ptr [rbx], 1 ; ret 0x287d
0x0000020000646d0a : sar byte ptr [rbx], cl ; ret
0x00000200006ee12b : sar byte ptr [rbx], cl ; ret 0x39
0x000002000005c743 : sar byte ptr [rcx + 0x13], 0x8b ; ret
0x00000200003e100b : sar byte ptr [rcx + 0x1a], 0x8b ; ret
0x00000200001a28c9 : sar byte ptr [rcx + 0x25], 0xf6 ; ret
0x0000020000558ffc : sar byte ptr [rcx + 0x2a], 0x8b ; ret
0x00000200003f379a : sar byte ptr [rcx + 0x58], 0xf7 ; fdivr dword ptr [rbx] ; ret
0x000002000051ed65 : sar byte ptr [rcx + 0x62], 1 ; call 0x20000148559
0x0000020000656648 : sar byte ptr [rcx + 0xa], 0xbb ; and eax, 0xe9c00002 ; ret 0
0x0000020000442a97 : sar byte ptr [rcx + 0xd], 0x8b ; ret 0x8b48
0x0000020000082200 : sar byte ptr [rcx + 5], 0x48 ; add esp, 0x58 ; ret
0x00000200001c97fc : sar byte ptr [rcx + 5], 0x48 ; and dword ptr [rcx + 0x70], 0 ; ret
0x0000020000453392 : sar byte ptr [rcx + 6], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001d20c5 : sar byte ptr [rcx + 6], 0xb8 ; and al, byte ptr [rax] ; add al, al ; ret
0x0000020000116082 : sar byte ptr [rcx + 8], 0x8a ; ret
0x000002000052f9d0 : sar byte ptr [rcx + 8], 0x8b ; ret
0x000002000013161c : sar byte ptr [rcx - 0x68], 0xe8 ; pop rsp ; ret 0x3c
0x000002000007602f : sar byte ptr [rcx], 1 ; jae 0x2000007603e ; xor eax, eax ; ret
0x00000200000fd647 : sar byte ptr [rdi + rdx + 0x44], 0x3b ; ret 0x97d
0x000002000055c934 : sar byte ptr [rdx + 0x294098], 0xe9 ; ret 0xfffd
0x00000200007945d1 : sar byte ptr [rdx + 0xfc084ff], 0x85 ; ret 0x2ec
0x00000200001acdf6 : sar byte ptr [rdx + 1], 0xf ; ret 0x4488
0x00000200001acc9f : sar byte ptr [rdx + 1], 0xf ; ret 0x4489
0x0000020000217b14 : sar byte ptr [rdx + 2], 0x3a ; ret 0x973
0x000002000021f8dd : sar byte ptr [rdx + 2], 0x3a ; ret 0xa73
0x00000200005d265b : sar byte ptr [rdx - 0x3ffffef6], 0xf6 ; ret
0x000002000065d20c : sar byte ptr [rdx - 0x3fffff18], 0xf ; ret 0x189
0x000002000061f1ba : sar byte ptr [rdx], 0xf ; ret 0x4489
0x00000200004e3013 : sar byte ptr [rsi + 5], cl ; add rsp, 0x38 ; ret
0x00000200003cc1af : sar ch, cl ; inc dword ptr [rbx + rcx*4 - 0x40] ; mov eax, r8d ; ret
0x0000020000235e18 : sar dh, 0x11 ; add bh, bh ; ret
0x000002000043c3b7 : sar dh, 0x83 ; ret 0x75fe
0x0000020000143994 : sar dh, 0xff ; push rsi ; ret
0x000002000007db8f : sar dh, 1 ; ret 0xcbeb
0x00000200007cc205 : sar dh, cl ; inc dword ptr [rbx + 0xd8904c9] ; ret 0xffb5
0x00000200004089a3 : sar dil, 0x48 ; add esp, 0x38 ; ret
0x0000020000648b73 : sar dil, 0x8a ; ret
0x00000200004a573b : sar dword ptr [rax - 0x26], -1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000028ff : sar dword ptr [rax - 0x3ffffda1], cl ; ret
0x000002000050464d : sar dword ptr [rax - 0x3fffff66], -0x15 ; ret
0x00000200004a6c9d : sar dword ptr [rax], -0x17 ; jl 0x200004a6c91 ; ret
0x00000200004ab94d : sar dword ptr [rax], -0x18 ; cmp al, 0x95 ; ret
0x00000200004a672a : sar dword ptr [rax], -0x18 ; out dx, eax ; out dx, eax ; ret
0x00000200004a9cfb : sar dword ptr [rax], -0x4e ; add eax, ebp ; cmp al, 0xb6 ; ret
0x00000200004a94b9 : sar dword ptr [rax], -0x4e ; add eax, ebp ; jle 0x200004a9485 ; ret
0x00000200004a958f : sar dword ptr [rax], -0x4e ; add eax, ebp ; test al, 0xbd ; ret
0x00000200004aa803 : sar dword ptr [rax], -0x4e ; add eax, ebp ; xor al, 0xab ; ret
0x000002000014448a : sar dword ptr [rax], cl ; pop rbp ; ret
0x00000200007d24ed : sar dword ptr [rbx], -0x2f ; jb 0x200007d24d9 ; add rsp, 0x28 ; ret
0x000002000021f558 : sar dword ptr [rbx], -0x36 ; jb 0x2000021f54a ; xor eax, eax ; ret
0x000002000000f866 : sar dword ptr [rcx + 0x100008], -0x75 ; ret 0xf41
0x0000020000524e5f : sar dword ptr [rcx + 0xb], cl ; call 0x20000148559
0x000002000005a1ea : sar dword ptr [rdi - 2], -0x13 ; push qword ptr [rsp + rsi*2 - 0xa] ; ret 0xf08
0x000002000049bc44 : sar dword ptr [rdi], 0 ; add byte ptr [rcx - 0x7d], al ; ret 0x4560
0x0000020000619a69 : sar dword ptr [rdi], cl ; ret
0x0000020000087b99 : sar dword ptr [rdx + 0x200], 0x3b ; ret 0x377
0x0000020000018eae : sar dword ptr [rdx + 0x40], 0xf ; ret 0x4589
0x000002000022c7eb : sar dword ptr [rdx + rbp*8 + 0x33], -0x40 ; ret
0x000002000007db80 : sar dword ptr [rdx], -0x36 ; cmovg eax, edx ; mov dl, al ; mov al, dl ; ret
0x00000200003f35c8 : sar dword ptr [rsi + rsi*2 + 0x44], -0x75 ; ret 0x8b49
0x00000200004bec64 : sar dword ptr [rsp + rdx + 0x4d], 0x3b ; ret
0x000002000013aa5c : sar eax, 0x10 ; add rax, rcx ; ret
0x000002000013c661 : sar eax, 0x10 ; and eax, 0x7fff ; ret
0x00000200007a0795 : sar eax, 0x10 ; ret
0x00000200000e95cd : sar eax, 1 ; cmp edx, eax ; jl 0x200000e95de ; mov al, 1 ; ret
0x000002000013d267 : sar eax, 1 ; dec rax ; ret
0x000002000043dbfe : sar eax, 1 ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x000002000013d24e : sar eax, 1 ; ret
0x000002000056998c : sar eax, 7 ; mov al, byte ptr [r8 + rax] ; ret
0x00000200007c5ac6 : sar ebp, -1 ; mov rsi, r15 ; jmp 0x200007a1d0f
0x0000020000176218 : sar ecx, -1 ; jmp 0x20000112466
0x000002000016850b : sar ecx, 0x33 ; ret 0x4a75
0x00000200004d4b20 : sar edi, -0x18 ; mov ecx, 0x8bffb94d ; ret
0x0000020000727009 : sar edi, -0x46 ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000052f9cb : sar edi, -0x75 ; fadd dword ptr [rbp - 0x74f78640] ; ret
0x000002000072439e : sar edi, -0x75 ; push rcx ; xor dh, dh ; ret 0xf01
0x000002000044683e : sar edi, -0x75 ; ret
0x0000020000531b06 : sar edi, -0x7b ; ror byte ptr [rdi], 0x89 ; ret
0x00000200004ebd63 : sar edi, -1 ; add rsp, 0x78 ; ret
0x000002000013ac7f : sar edi, -1 ; jne 0x2000013ac8a ; ret
0x000002000053f5e0 : sar edi, 0x33 ; ror byte ptr [rax - 0x75], cl ; iretd ; call r15
0x0000020000449d96 : sar edi, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000632c59 : sar edi, 0x48 ; add esp, 0x28 ; ret
0x000002000062e93d : sar edi, 0x48 ; add esp, 0x40 ; pop rbx ; ret
0x00000200003e5faf : sar edi, 0x48 ; add esp, 0x48 ; ret
0x00000200004cfc88 : sar edi, 0x48 ; add esp, 0x50 ; pop rbp ; ret
0x000002000051f50c : sar edi, 0x48 ; add esp, 0x50 ; pop rbx ; ret
0x00000200003f8fe4 : sar edi, 0x48 ; add esp, 0x58 ; ret
0x0000020000530476 : sar edi, 0x48 ; add esp, 0x60 ; pop rbx ; ret
0x0000020000522466 : sar edi, 0x48 ; add esp, 0x98 ; ret
0x000002000043daa5 : sar edi, 0x48 ; mov ecx, edi ; call 0x2000006d288
0x000002000024658e : sar edi, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x2000024659f
0x0000020000246860 : sar edi, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x20000246896
0x000002000024a902 : sar edi, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x2000024a913
0x000002000024abe9 : sar edi, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x2000024abfa
0x0000020000785b3d : sar edi, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x20000785b4e
0x000002000040a0e7 : sar edi, 0x75 ; ret
0x000002000041f186 : sar edi, 1 ; add rsp, 0x18 ; ret
0x00000200006084b1 : sar edi, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000530ae4 : sar edi, 1 ; add rsp, 0x28 ; ret
0x0000020000624f3e : sar edi, 1 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000601f05 : sar edi, 1 ; call 0x2000005e174
0x0000020000509725 : sar edi, 1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200001d9297 : sar edi, 1 ; dec dword ptr [rcx - 0x7cb7efba] ; ret
0x00000200006245bc : sar edi, 1 ; je 0x200006245cf ; mov eax, 0xc0000001 ; ret
0x000002000022aa91 : sar edi, 1 ; push rax ; add rsp, 0x28 ; ret
0x00000200005e9879 : sar edi, 1 ; ret
0x00000200006a993d : sar edi, 1 ; sar bh, 0x46 ; sbb byte ptr [rcx - 0x7d], cl ; ret 0x8918
0x0000020000519c8c : sar edi, cl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003fb2cd : sar edi, cl ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000405b58 : sar edi, cl ; add rsp, 0x78 ; ret
0x0000020000405bea : sar edi, cl ; add rsp, 0x98 ; ret
0x000002000050d40b : sar edi, cl ; jmp 0x2000050d3d4
0x00000200007bba25 : sar edi, cl ; mov al, 1 ; add rsp, 0x60 ; pop rbp ; ret
0x000002000051abe2 : sar edi, cl ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006017a7 : sar edi, cl ; mov rcx, qword ptr [rip - 0x2dc508] ; call rax
0x000002000066afe6 : sar edi, cl ; test al, 0x10 ; jne 0x2000066aff7 ; mov al, 1 ; ret
0x0000020000521b30 : sar edi, cl ; test rcx, rcx ; je 0x20000521b48 ; ret
0x00000200007141af : sar edx, -2 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200007a0807 : sar edx, 0x10 ; mov rax, rdx ; ret
0x0000020000123fd6 : sar esi, 0x33 ; ret 0xd18b
0x0000020000094492 : sar esp, -1 ; dec dword ptr [rax - 0x75] ; ret 0xc2f6
0x00000200006486b9 : sar r15b, 0x8b ; ret
0x00000200006753e1 : sar r15b, 0xeb ; adc ecx, dword ptr [rbp + rcx*4 + 0xd] ; ret
0x0000020000528eee : sar r15b, cl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000056998b : sar r8, 7 ; mov al, byte ptr [r8 + rax] ; ret
0x000002000013aa5b : sar rax, 0x10 ; add rax, rcx ; ret
0x00000200007a0794 : sar rax, 0x10 ; ret
0x000002000013d266 : sar rax, 1 ; dec rax ; ret
0x000002000043dbfd : sar rax, 1 ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x000002000013d24d : sar rax, 1 ; ret
0x00000200005fb079 : sar rdi, -0x75 ; ret
0x00000200007a0806 : sar rdx, 0x10 ; mov rax, rdx ; ret
0x0000020000567e8d : sbb ah, ah ; dec dword ptr [rax + 0xb] ; ret 0xc148
0x0000020000233130 : sbb ah, al ; jrcxz 0x20000233166 ; ret 0xc531
0x00000200004bea74 : sbb ah, bh ; ret 0x84ff
0x0000020000057572 : sbb ah, byte ptr [rax] ; xor eax, 0x3d8d4800 ; ret
0x00000200004487d2 : sbb ah, ch ; ret 0x33ff
0x00000200006a96cf : sbb al, 0 ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4807
0x000002000016becd : sbb al, 0 ; add al, al ; jmp 0x2000016be9a
0x00000200005699bd : sbb al, 0 ; add byte ptr [rax], al ; ret
0x00000200006f3af3 : sbb al, 0 ; add byte ptr [rcx + 3], al ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001d849d : sbb al, 0 ; add rsp, 0x28 ; ret
0x0000020000135fc9 : sbb al, 0 ; add rsp, 0x40 ; pop rbp ; ret
0x000002000013a1ab : sbb al, 0 ; add rsp, 0x78 ; ret
0x000002000057bd79 : sbb al, 0 ; call 0x200000e8064
0x00000200005846e5 : sbb al, 0 ; call 0x20000470990
0x00000200005846e4 : sbb al, 0 ; call 0x20000470991
0x00000200005846e3 : sbb al, 0 ; call 0x20000470992
0x00000200001da284 : sbb al, 0 ; mov dword ptr [rcx + 0x298], edx ; ret
0x0000020000157a56 : sbb al, 0 ; mov dword ptr [rip + 0x1c9316], eax ; ret
0x0000020000157a38 : sbb al, 0 ; ret
0x000002000012db8d : sbb al, 0 ; shr eax, 2 ; and eax, 1 ; ret
0x00000200005f6468 : sbb al, 0x15 ; add al, ch ; cmp al, 0 ; ret 0x48ff
0x0000020000011596 : sbb al, 0x15 ; add dh, dh ; ret 0xf02
0x00000200001d7537 : sbb al, 0x1d ; add byte ptr [rbx], bh ; ret
0x00000200003f8ebb : sbb al, 0x24 ; add rsp, 8 ; ret
0x00000200001529c6 : sbb al, 0x24 ; mov eax, dword ptr [rsp] ; add rsp, 8 ; ret
0x00000200003fb9bb : sbb al, 0x3b ; ret
0x00000200003d3a65 : sbb al, 0x3b ; ret 0x420f
0x000002000022c48e : sbb al, 0x3b ; ret 0x974
0x0000020000402a3e : sbb al, 0x40 ; add byte ptr [rax + 3], cl ; xlatb ; jmp rdx
0x0000020000029025 : sbb al, 0x41 ; mov eax, edx ; pop rbx ; ret
0x000002000010a600 : sbb al, 0x41 ; xor eax, eax ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200005a79f0 : sbb al, 0x43 ; jmp 0x2000043f321
0x00000200005a7a14 : sbb al, 0x43 ; jmp 0x2000043f342
0x00000200005678cc : sbb al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000417107 : sbb al, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x0000020000633f78 : sbb al, 0x48 ; mov ecx, dword ptr [rip - 0x2f3e48] ; call rax
0x00000200005314e7 : sbb al, 0x48 ; mov edx, ebp ; call 0x20000157547
0x00000200005314e6 : sbb al, 0x48 ; mov edx, ebp ; call 0x20000157548
0x0000020000213e7c : sbb al, 0x49 ; add eax, 0x1c ; jmp 0x20000213ec6
0x00000200001b3088 : sbb al, 0x60 ; or al, 0 ; mov qword ptr [rcx], rax ; ret
0x00000200005b0790 : sbb al, 0x69 ; ret
0x00000200001fd212 : sbb al, 0x72 ; in al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001b9c18 : sbb al, 0x73 ; add esi, dword ptr [rax - 0x3fcd3cff] ; ret
0x00000200004de842 : sbb al, 0x73 ; jp 0x200004de7d5 ; ret
0x000002000022c489 : sbb al, 0x76 ; sbb eax, 0x3b1c438b ; ret 0x974
0x00000200004662b0 : sbb al, 0x77 ; ret
0x00000200001c88fa : sbb al, 0x81 ; call rsi
0x00000200006c5396 : sbb al, 0x83 ; call qword ptr [rax]
0x00000200001271cc : sbb al, 0x83 ; clc ; add dword ptr [rdi + rax - 1], esi ; ret
0x00000200001d0810 : sbb al, 0x83 ; clc ; dec dword ptr [rcx - 0x75] ; ret 0x7c89
0x00000200006a8241 : sbb al, 0x85 ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000020000524af7 : sbb al, 0x89 ; and byte ptr [r8 - 0x75], cl ; ret
0x00000200001e0f42 : sbb al, 0x8b ; add al, 0xb ; ret
0x000002000015793b : sbb al, 0x8b ; jmp r11
0x00000200003e8670 : sbb al, 0x8b ; ret
0x00000200006d39dc : sbb al, 0x8b ; ret 0x25
0x0000020000243819 : sbb al, 0x8b ; ret 0xc148
0x00000200005f6ff3 : sbb al, 0x8b ; ret 0xe8c1
0x0000020000485276 : sbb al, 0x8b ; ror dword ptr [rax - 0x75], -0x7c ; ret 0x9540
0x000002000054fcae : sbb al, 0x8b ; sbb byte ptr [r11], r15b ; ret
0x00000200003fd301 : sbb al, 0x8d ; add dword ptr [r9 - 0x77], eax ; add byte ptr [rcx + 0x3b], al ; ret
0x000002000042ebf0 : sbb al, 0x94 ; ret 0x85ff
0x000002000013f6a0 : sbb al, 0x94 ; sbb eax, dword ptr [rax] ; sete al ; ret
0x0000020000517b00 : sbb al, 0x97 ; fdivp st(7) ; add rsp, 0x28 ; ret
0x00000200004c4810 : sbb al, 0xa7 ; ret 0xbbff
0x000002000063e310 : sbb al, 0xaa ; ret 0x89ff
0x000002000070f3d9 : sbb al, 0xc3 ; bts dword ptr [r8 + 0x20], 0x1a ; ret
0x0000020000627623 : sbb al, 0xd8 ; dec dword ptr [rax - 0x7d] ; ret 0xe84c
0x00000200005de281 : sbb al, 0xd9 ; out dx, eax ; dec dword ptr [rax - 0x75] ; iretd ; call 0x2000065a549
0x0000020000213e80 : sbb al, 0xeb ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x0000020000059e19 : sbb al, 0xeb ; ret
0x00000200005ce325 : sbb al, 0xf ; mov dh, 0xc8 ; call r10
0x0000020000588b60 : sbb al, 0xf ; mov edx, 0xd7007f25 ; call qword ptr [rbx]
0x0000020000445bf6 : sbb al, 0xf ; test dword ptr [rcx - 0x74ffe9bd], ebx ; ret
0x0000020000002b96 : sbb al, 0xf ; test ecx, edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000013d9e4 : sbb al, 0xf6 ; ret
0x000002000060c0e3 : sbb al, 0xf6 ; ret 0x7401
0x00000200005abca9 : sbb al, 0xf6 ; ret 0x7410
0x000002000041f30b : sbb al, 0xf6 ; ret 0x7501
0x00000200000df6db : sbb al, 0xf7 ; rol byte ptr [rbp - 0x75], cl ; ret 0x18b
0x00000200001c0d1f : sbb al, 0xff ; ret
0x00000200000477c1 : sbb al, 1 ; mov rcx, rsi ; call 0x200000d3a77
0x000002000021190d : sbb al, 5 ; add byte ptr [rax + rax - 0x3fcc3d00], ch ; ret
0x000002000062cae0 : sbb al, 5 ; ret 0x4cff
0x0000020000115117 : sbb al, 6 ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000068004a : sbb al, 6 ; add byte ptr [rax], al ; ret
0x00000200006aaa76 : sbb al, bpl ; ret
0x00000200000ab117 : sbb al, bpl ; ret 0xfcab
0x000002000015e827 : sbb al, bpl ; ret 0xfece
0x000002000001f9c2 : sbb al, byte ptr [r8 + rax*8 - 0x3fcdfc88] ; ret
0x0000020000005ba5 : sbb al, byte ptr [r9] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001f9c3 : sbb al, byte ptr [rax + rax*8 - 0x3fcdfc88] ; ret
0x00000200005a6982 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7421bbf1], al ; ret
0x0000020000527b75 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7427bbf1], al ; ret
0x000002000013fc7e : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000062474c : sbb al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000152a29 : sbb al, byte ptr [rax] ; add rsp, 8 ; ret
0x00000200000c5bc9 : sbb al, byte ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000020000157b25 : sbb al, byte ptr [rax] ; mov qword ptr [rip + 0x1abf7a], rdx ; ret
0x00000200003df7b8 : sbb al, byte ptr [rax] ; mov rcx, rdi ; call 0x2000000c980
0x00000200005a0319 : sbb al, byte ptr [rax] ; movzx ecx, r9w ; mov al, byte ptr [rcx + rax] ; ret
0x0000020000157b2c : sbb al, byte ptr [rax] ; ret
0x000002000070f121 : sbb al, byte ptr [rbx - 0x3e74fe1f] ; ret
0x0000020000537562 : sbb al, byte ptr [rbx] ; ret 0x4dff
0x000002000021d1c0 : sbb al, byte ptr [rcx + 0x3b] ; ret
0x000002000019064e : sbb al, byte ptr [rcx + 0x3b] ; sal byte ptr [rbx + 0xc], 0x8b ; ret 0xc2ff
0x00000200005afaba : sbb al, byte ptr [rcx - 0x73] ; call r11
0x00000200004aa93b : sbb al, byte ptr [rcx - 0x75] ; add byte ptr [rcx - 0x7b], al ; ret 0x4c75
0x000002000002a87c : sbb al, byte ptr [rcx - 0x75] ; ret
0x0000020000005ba6 : sbb al, byte ptr [rcx] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000501b93 : sbb al, byte ptr [rcx] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000061b1fb : sbb al, byte ptr [rcx] ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200001d2ea7 : sbb al, byte ptr [rdi + rcx + 0x20] ; ret
0x0000020000682bf0 : sbb al, byte ptr [rdi + rcx - 0x4a] ; ret
0x0000020000057b6a : sbb al, byte ptr [rsi] ; mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x00000200004a58d0 : sbb al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000020000437934 : sbb al, ch ; pop rsi ; ret
0x000002000067381b : sbb al, ch ; ret
0x00000200003efd50 : sbb al, ch ; ret 0x2c74
0x000002000059fe40 : sbb al, ch ; ret 0xadd0
0x00000200004509c0 : sbb al, ch ; ret 0xc0e6
0x00000200001bf218 : sbb al, ch ; ret 0xf937
0x00000200000ab118 : sbb al, ch ; ret 0xfcab
0x000002000015e828 : sbb al, ch ; ret 0xfece
0x000002000068369c : sbb al, ch ; scasb al, byte ptr [rdi] ; ret 0xffe4
0x000002000000e45c : sbb al, dh ; cmpxchg qword ptr [rcx], rdx ; jne 0x2000000e461 ; ret
0x000002000000e45b : sbb al, sil ; cmpxchg qword ptr [rcx], rdx ; jne 0x2000000e462 ; ret
0x00000200001d2b71 : sbb ax, 0x8a00 ; ret 0xccc3
0x0000020000101f2a : sbb bh, ah ; dec dword ptr [rbx + rcx*4 + 5] ; jmp qword ptr [rcx]
0x0000020000135d1d : sbb bh, bh ; enter -0x77d, 0x3e ; ja 0x20000135d37 ; ret
0x0000020000050faf : sbb bh, bh ; je 0x20000050fa7 ; mov rax, r8 ; ret
0x00000200003fb9b6 : sbb bh, bh ; ret
0x0000020000117cfa : sbb bh, bh ; ret 0xd03b
0x0000020000133034 : sbb bh, byte ptr [rbx] ; ret
0x00000200000eb0c7 : sbb bh, byte ptr [rbx] ; ret 0x830f
0x00000200003c7792 : sbb bh, dh ; push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret
0x000002000004ae81 : sbb bh, dh ; ret 0x200
0x000002000070f3bd : sbb bl, al ; bts dword ptr [r8 + 0x20], 0x19 ; ret
0x00000200004d7c32 : sbb bl, al ; hlt ; dec dword ptr [rax - 0x77] ; pop rdi ; sub cl, ch ; ret
0x00000200000bd646 : sbb bl, al ; xor eax, eax ; ret
0x0000020000627622 : sbb bl, byte ptr [rax + rbx*8] ; dec dword ptr [rax - 0x7d] ; ret 0xe84c
0x000002000041155e : sbb bl, byte ptr [rax] ; add byte ptr [rcx + 0x3b], cl ; ret 0x870f
0x0000020000411602 : sbb bl, byte ptr [rax] ; add dh, dh ; ret
0x0000020000518d52 : sbb bl, byte ptr [rdi] ; ret 0x48ff
0x0000020000434604 : sbb bl, ch ; jrcxz 0x20000434657 ; add eax, 8 ; ret
0x000002000002cb3b : sbb bl, ch ; out -0x10, eax ; xadd qword ptr [r10 + 0x20], rax ; ret
0x000002000000c320 : sbb bl, ch ; out dx, al ; add eax, edx ; jmp 0x2000000c301
0x000002000046f574 : sbb bl, ch ; ret 0x48ff
0x0000020000213e8a : sbb bl, ch ; xor byte ptr [rax - 0x7d], cl ; ret
0x000002000044f173 : sbb bl, dh ; movq qword ptr [r8], mm0 ; mov eax, edx ; ret
0x000002000049104f : sbb bpl, byte ptr [rax + 0x8850f20] ; ret
0x00000200007a3dec : sbb byte ptr [edi + ecx + 0x22], al ; ret
0x00000200005525f8 : sbb byte ptr [r10], dil ; ret 0x470f
0x0000020000009dee : sbb byte ptr [r10], r15b ; ret 0x3674
0x00000200006a843a : sbb byte ptr [r10], sil ; ret 0xb60f
0x000002000079f11a : sbb byte ptr [r11 + 0x220f44c3], r9b ; ret
0x0000020000603ae7 : sbb byte ptr [r11 + 0x9091], r9b ; add dh, dh ; ret 0xf02
0x00000200000400d8 : sbb byte ptr [r11 + rcx*4 + 0x52], cl ; xor byte ptr [rbp + 0x3b], cl ; ret 0x894c
0x00000200005ce575 : sbb byte ptr [r11 + rcx*4 + 4], cl ; shr ecx, 1 ; ret
0x0000020000097e7c : sbb byte ptr [r11 - 0x38], cl ; xor qword ptr [rcx + 0x18], r9 ; ret
0x0000020000513b2d : sbb byte ptr [r11 - 0x74bb88bb], r9b ; ret 0x8a40
0x000002000062111f : sbb byte ptr [r11], al ; ret
0x000002000022d1dc : sbb byte ptr [r11], al ; ret 0xc23b
0x0000020000557a12 : sbb byte ptr [r11], dil ; ret
0x000002000054fcb0 : sbb byte ptr [r11], r15b ; ret
0x0000020000585c04 : sbb byte ptr [r11], r15b ; ret 0x877
0x00000200001458bd : sbb byte ptr [r11], r8b ; ret 0x48d
0x00000200001357bc : sbb byte ptr [r13 + 0x3b], cl ; ret
0x00000200000ca324 : sbb byte ptr [r13 - 0x16], sil ; mov al, 1 ; ret
0x000002000054daeb : sbb byte ptr [r13 - 0x75], al ; ret 0x4466
0x000002000000c15a : sbb byte ptr [r13 - 0x75], cl ; ret
0x0000020000113654 : sbb byte ptr [r14 + 0x3b], spl ; ret 0x830f
0x0000020000017cc5 : sbb byte ptr [r15 + r9 + 0x22], r8b ; ret
0x00000200001054da : sbb byte ptr [r15 + rcx + 0x22], al ; ret 0x854d
0x0000020000051a98 : sbb byte ptr [r15 + rcx + 0x22], r8b ; ret
0x00000200001f01f5 : sbb byte ptr [r15], cl ; mov dh, 0xc2 ; mov cr8, rax ; ret
0x000002000068dc6b : sbb byte ptr [r15], cl ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x00000200000b7cd7 : sbb byte ptr [r8 + 0x23], cl ; ret 0x8348
0x000002000004bc04 : sbb byte ptr [r8 + 0x23], r9b ; ret 0x3148
0x000002000004cebe : sbb byte ptr [r8 + 0x23], r9b ; ret 0xb49
0x00000200000df101 : sbb byte ptr [r8 + 0x33], cl ; ret 0x2349
0x0000020000036c03 : sbb byte ptr [r8 + 0x33], r9b ; ret
0x000002000005e3e9 : sbb byte ptr [r8 + 0x3b], cl ; ret 0x1177
0x0000020000014eb3 : sbb byte ptr [r8 + 0x3b], cl ; ret 0x850f
0x000002000043ba05 : sbb byte ptr [r8 + 0x450f4801], bpl ; ret
0x00000200004dec20 : sbb byte ptr [r8 + 0x450f4801], bpl ; ret 0x8548
0x000002000014e9a1 : sbb byte ptr [r8 + 0xf], cl ; ret
0x00000200001fd6c1 : sbb byte ptr [r8 + 1], cl ; ret
0x0000020000151ac8 : sbb byte ptr [r8 + 2], dil ; ret
0x00000200005033bc : sbb byte ptr [r8 + 3], cl ; ret
0x00000200006ca558 : sbb byte ptr [r8 + 3], cl ; ret 0x33c3
0x0000020000430ce3 : sbb byte ptr [r8 + 3], cl ; ret 0x3b48
0x00000200004a59b9 : sbb byte ptr [r8 + 3], r9b ; ret
0x00000200005c7ec1 : sbb byte ptr [r8 - 0x75], cl ; add al, 0xd0 ; ret
0x00000200000f7e88 : sbb byte ptr [r8 - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200001048c9 : sbb byte ptr [r8 - 0x75], cl ; push rcx ; or byte ptr [rax + 0x3b], cl ; ret 0xf48
0x00000200004fadf9 : sbb byte ptr [r8 - 0x75], cl ; ret 0x8945
0x000002000000fa1d : sbb byte ptr [r8 - 0x75], cl ; ret 0xc148
0x0000020000085168 : sbb byte ptr [r8 - 0x75], cl ; ret 0xf44
0x000002000012eb41 : sbb byte ptr [r8 - 0x75], cl ; sbb byte ptr [r8 + 0x23], cl ; ret 0x8348
0x00000200004b693c : sbb byte ptr [r8 - 0x75], cl ; shr eax, cl ; push 0x50 ; ret 0xebff
0x00000200001ebae3 : sbb byte ptr [r8 - 0x75], cl ; shr eax, cl ; ret
0x000002000004c30e : sbb byte ptr [r8 - 0x75], r9b ; ret
0x00000200000e43e8 : sbb byte ptr [r8 - 0x75], r9b ; ror dword ptr [rcx + 0x63], cl ; ret 0x348
0x000002000004cf09 : sbb byte ptr [r8 - 0x75], r9b ; sbb dh, dh ; ret
0x00000200001bceca : sbb byte ptr [r8 - 0x77], cl ; adc byte ptr [rcx + r8 - 5], sil ; ret
0x00000200001ecef0 : sbb byte ptr [r8 - 0x77], cl ; and byte ptr [r13 + 0x3b], al ; ret 0x675
0x000002000006d2af : sbb byte ptr [r8 - 0x7b], cl ; leave ; jne 0x2000006d2b1 ; ret
0x000002000016f895 : sbb byte ptr [r8 - 0x7b], cl ; leave ; jne 0x2000016f897 ; ret
0x0000020000494c6e : sbb byte ptr [r8 - 0x7b], cl ; leave ; jne 0x20000494c7d ; ret
0x00000200000a5f9b : sbb byte ptr [r8 - 0x7b], r9b ; ret
0x000002000007bb18 : sbb byte ptr [r8 - 0x7d], cl ; call 0x1ffc309392a
0x0000020000015e27 : sbb byte ptr [r8 - 0x7d], cl ; ret
0x0000020000630aa3 : sbb byte ptr [r8 - 0x7d], cl ; ret 0x4803
0x00000200000a04e2 : sbb byte ptr [r8 - 0x80], al ; call qword ptr [rcx]
0x000002000009f5f1 : sbb byte ptr [r8 - 0x80], r8b ; call qword ptr [rcx]
0x00000200000c4169 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200000daa86 : sbb byte ptr [r9 + 0x23], cl ; ret 0x2d48
0x00000200000daa93 : sbb byte ptr [r9 + 0x23], cl ; ret 0x3148
0x00000200000daa54 : sbb byte ptr [r9 + 0x23], cl ; ret 0x3d48
0x0000020000245e6f : sbb byte ptr [r9 - 0x75], r8b ; ret 0x8b4c
0x000002000004402e : sbb byte ptr [r9 - 0x75], r9b ; add byte ptr [rax + 0x33], cl ; ret 0x3348
0x00000200000d0e27 : sbb byte ptr [r9 - 0x75], r9b ; ret 0xc148
0x000002000004cdf7 : sbb byte ptr [r9 - 0x75], r9b ; sbb byte ptr [rax - 0x75], cl ; ret
0x0000020000026987 : sbb byte ptr [r9 - 0x7d], r9b ; ret 0x4108
0x0000020000560d04 : sbb byte ptr [r9 - 1], al ; ret 0x8944
0x00000200005f1050 : sbb byte ptr [r9], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000010ffbd : sbb byte ptr [rax + 0x23], cl ; ret
0x000002000004bc05 : sbb byte ptr [rax + 0x23], cl ; ret 0x3148
0x00000200001ee66d : sbb byte ptr [rax + 0x23], cl ; ret 0x3b48
0x00000200000b36bc : sbb byte ptr [rax + 0x23], cl ; ret 0x8348
0x000002000004cebf : sbb byte ptr [rax + 0x23], cl ; ret 0xb49
0x00000200001ee66c : sbb byte ptr [rax + 0x23], r9b ; ret 0x3b48
0x00000200000b36bb : sbb byte ptr [rax + 0x23], r9b ; ret 0x8348
0x0000020000036c04 : sbb byte ptr [rax + 0x33], cl ; ret
0x00000200000df102 : sbb byte ptr [rax + 0x33], cl ; ret 0x2349
0x000002000004e1b6 : sbb byte ptr [rax + 0x33], cl ; ret 0xa948
0x000002000004e1b5 : sbb byte ptr [rax + 0x33], r9b ; ret 0xa948
0x00000200006637b1 : sbb byte ptr [rax + 0x3b], cl ; ret
0x000002000005e3ea : sbb byte ptr [rax + 0x3b], cl ; ret 0x1177
0x000002000024a122 : sbb byte ptr [rax + 0x3b], cl ; ret 0x1373
0x0000020000014eb4 : sbb byte ptr [rax + 0x3b], cl ; ret 0x850f
0x000002000004b930 : sbb byte ptr [rax + 0x3b], cl ; ror byte ptr [rbx + rcx*4 - 0x40], 1 ; jne 0x2000004b95c ; ret
0x0000020000142aa9 : sbb byte ptr [rax + 0x41057420], ch ; or dword ptr [rax], 0xffffffff ; ret
0x000002000043ba06 : sbb byte ptr [rax + 0x450f4801], ch ; ret
0x00000200004dec21 : sbb byte ptr [rax + 0x450f4801], ch ; ret 0x8548
0x00000200005a2407 : sbb byte ptr [rax + 0x48000000], 0x8b ; cmp dh, dh ; ret
0x0000020000565b13 : sbb byte ptr [rax + 0x63], cl ; ret 0x8348
0x00000200003fd2bf : sbb byte ptr [rax + 0x6b], cl ; ret
0x000002000014e9a2 : sbb byte ptr [rax + 0xf], cl ; ret
0x00000200000fa055 : sbb byte ptr [rax + 1], bh ; ret
0x00000200000cbd7d : sbb byte ptr [rax + 1], cl ; push rsp ; ret
0x00000200001fd6c2 : sbb byte ptr [rax + 1], cl ; ret
0x000002000017bf89 : sbb byte ptr [rax + 2], 0 ; add bl, ch ; add ecx, dword ptr [rbp - 0x75] ; ret
0x000002000049bcb5 : sbb byte ptr [rax + 2], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x10], r9 ; ret
0x0000020000151ac9 : sbb byte ptr [rax + 2], bh ; ret
0x00000200005239fc : sbb byte ptr [rax + 3], 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc28b
0x0000020000064b09 : sbb byte ptr [rax + 3], cl ; ret
0x00000200006ca559 : sbb byte ptr [rax + 3], cl ; ret 0x33c3
0x0000020000430ce4 : sbb byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200007a2df2 : sbb byte ptr [rax + 3], cl ; ret 0x8948
0x0000020000064b08 : sbb byte ptr [rax + 3], r9b ; ret
0x00000200005d0686 : sbb byte ptr [rax + rax], al ; add al, ch ; int1 ; jno 0x200005d064e ; jmp qword ptr [rcx]
0x00000200006921fe : sbb byte ptr [rax + rax], al ; add al, ch ; jns 0x20000692263 ; lodsb al, byte ptr [rsi] ; jmp qword ptr [rcx]
0x00000200006a7cdd : sbb byte ptr [rax + rbp*8 + 0x44], dh ; xchg dword ptr [rcx + 0x2c], eax ; xor eax, eax ; ret
0x00000200007b9437 : sbb byte ptr [rax - 0x3b7cb701], bl ; ret
0x00000200000d32df : sbb byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200000098ff : sbb byte ptr [rax - 0x73], cl ; add eax, 0x150d09 ; ret
0x000002000000ff41 : sbb byte ptr [rax - 0x73], cl ; add qword ptr [rax - 0x75], rcx ; ret 0x49f0
0x000002000014555b : sbb byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x33], cl ; ret 0x3348
0x00000200005c7ec2 : sbb byte ptr [rax - 0x75], cl ; add al, 0xd0 ; ret
0x00000200001bd982 : sbb byte ptr [rax - 0x75], cl ; add eax, 0x13bec6 ; call rax
0x000002000041b2db : sbb byte ptr [rax - 0x75], cl ; cmp r8b, r13b ; pop rbx ; ret 0xffd3
0x00000200001348be : sbb byte ptr [rax - 0x75], cl ; jl 0x200001348ef ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000058f744 : sbb byte ptr [rax - 0x75], cl ; mov r15b, 0xe8 ; ret 0x759
0x0000020000225be2 : sbb byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x7b], cl ; ret 0x4d74
0x00000200000f7e89 : sbb byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x0000020000119b3e : sbb byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200001048ca : sbb byte ptr [rax - 0x75], cl ; push rcx ; or byte ptr [rax + 0x3b], cl ; ret 0xf48
0x0000020000048597 : sbb byte ptr [rax - 0x75], cl ; ret
0x0000020000119b42 : sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000001bd00 : sbb byte ptr [rax - 0x75], cl ; ret 0x2b49
0x0000020000014b19 : sbb byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200004fadfa : sbb byte ptr [rax - 0x75], cl ; ret 0x8945
0x000002000021d02f : sbb byte ptr [rax - 0x75], cl ; ret 0x894d
0x00000200007289a0 : sbb byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200007bb6cb : sbb byte ptr [rax - 0x75], cl ; ret 0x8d49
0x00000200000d9a4c : sbb byte ptr [rax - 0x75], cl ; ret 0xb849
0x000002000000fa1e : sbb byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000215c00 : sbb byte ptr [rax - 0x75], cl ; ret 0xccc3
0x0000020000085169 : sbb byte ptr [rax - 0x75], cl ; ret 0xf44
0x00000200000e43e9 : sbb byte ptr [rax - 0x75], cl ; ror dword ptr [rcx + 0x63], cl ; ret 0x348
0x000002000013c4c7 : sbb byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call r14
0x000002000012eb42 : sbb byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x23], cl ; ret 0x8348
0x000002000004cf0a : sbb byte ptr [rax - 0x75], cl ; sbb dh, dh ; ret
0x00000200007a5083 : sbb byte ptr [rax - 0x75], cl ; sbb dword ptr [rax - 0x75], ecx ; ret 0xc148
0x00000200004b693d : sbb byte ptr [rax - 0x75], cl ; shr eax, cl ; push 0x50 ; ret 0xebff
0x00000200001ebae4 : sbb byte ptr [rax - 0x75], cl ; shr eax, cl ; ret
0x00000200003ff299 : sbb byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x3b], cl ; ret
0x00000200001bcecb : sbb byte ptr [rax - 0x77], cl ; adc byte ptr [rcx + r8 - 5], sil ; ret
0x00000200003ef95d : sbb byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x2000050bc44
0x00000200001ecef1 : sbb byte ptr [rax - 0x77], cl ; and byte ptr [r13 + 0x3b], al ; ret 0x675
0x00000200001c46d7 : sbb byte ptr [rax - 0x7b], cl ; leave ; je 0x200001c46e7 ; jmp rcx
0x00000200001c46d6 : sbb byte ptr [rax - 0x7b], cl ; leave ; je 0x200001c46e8 ; jmp rcx
0x000002000006d2b0 : sbb byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000006d2b0 ; ret
0x000002000016f896 : sbb byte ptr [rax - 0x7b], cl ; leave ; jne 0x2000016f896 ; ret
0x0000020000494c6f : sbb byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000494c7c ; ret
0x00000200000a5f9c : sbb byte ptr [rax - 0x7b], cl ; ret
0x00000200004e6e40 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov ecx, esi ; call rdx
0x000002000070efe2 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x17], cl ; ret
0x00000200000fb5ef : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x0000020000684182 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + rcx + 0x48], 0x8b ; int 0xff
0x0000020000197d98 : sbb byte ptr [rax - 0x7b], r9b ; ret
0x000002000007bb19 : sbb byte ptr [rax - 0x7d], cl ; call 0x1ffc3093929
0x0000020000536e4e : sbb byte ptr [rax - 0x7d], cl ; jmp 0x1ffc447e35e
0x0000020000536e4d : sbb byte ptr [rax - 0x7d], cl ; jmp 0x1ffc447e35f
0x0000020000015e28 : sbb byte ptr [rax - 0x7d], cl ; ret
0x0000020000635aa5 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4414
0x0000020000630aa4 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4803
0x000002000008f3d5 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4d60
0x0000020000032ff5 : sbb byte ptr [rax - 0x7d], cl ; ret 0x8508
0x000002000040c8ad : sbb byte ptr [rax - 0x7d], cl ; ret 0xe820
0x000002000021451f : sbb byte ptr [rax - 0x7d], cl ; ret 0xeb18
0x000002000065b9d2 : sbb byte ptr [rax - 0x7d], cl ; ret 0xeb20
0x00000200006296b3 : sbb byte ptr [rax - 0x7d], cl ; sal dword ptr [rax], -0x18 ; ret
0x000002000065add3 : sbb byte ptr [rax - 0x7f], cl ; ret
0x00000200004c2c18 : sbb byte ptr [rax - 0x80], al ; adc byte ptr [rbx], ch ; ret 0xe0c1
0x000002000009f5f2 : sbb byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200000c1737 : sbb byte ptr [rax - 0xa], al ; mov dword ptr [rdx], 0x8b481275 ; ret
0x0000020000002c0f : sbb byte ptr [rax - 1], cl ; ret
0x000002000013fb5a : sbb byte ptr [rax], ah ; mov eax, 0xffff ; ret
0x000002000013ddf2 : sbb byte ptr [rax], ah ; or eax, 0xffffffff ; ret
0x00000200005bc507 : sbb byte ptr [rax], al ; add al, 0xe9 ; ret 0xf790
0x0000020000051319 : sbb byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xb76
0x00000200000442e8 : sbb byte ptr [rax], al ; add byte ptr [rax - 0x3fccfc8c], al ; ret
0x00000200000c416a : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000541b6d : sbb byte ptr [rax], al ; add byte ptr [rax], al ; cmove eax, ecx ; ret
0x0000020000150f8e : sbb byte ptr [rax], al ; add byte ptr [rax], al ; lea r9, qword ptr [r9 + rdx*4] ; jmp r9
0x00000200001b2377 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rsp + 0x20], al ; call r8
0x00000200000d3265 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200000ca79f : sbb byte ptr [rax], al ; add dh, dh ; ret
0x000002000018b40c : sbb byte ptr [rax], al ; add rdx, r8 ; jmp rdx
0x00000200001bba85 : sbb byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000711c0a : sbb byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000408a1a : sbb byte ptr [rax], al ; call 0x20000494b25
0x0000020000171695 : sbb byte ptr [rax], al ; call rax
0x0000020000412c45 : sbb byte ptr [rax], al ; inc edx ; jmp 0x20000412c30
0x000002000006d051 : sbb byte ptr [rax], al ; je 0x2000006d05a ; ret
0x0000020000408e67 : sbb byte ptr [rax], al ; mov al, 1 ; ret
0x00000200000de47b : sbb byte ptr [rax], al ; mov byte ptr [rax + 0x44], 1 ; ret
0x00000200002288cc : sbb byte ptr [rax], al ; mov dword ptr [r8], eax ; ret
0x000002000040fdb6 : sbb byte ptr [rax], al ; mov eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000040fe6f : sbb byte ptr [rax], al ; mov qword ptr [r9], rdx ; mov qword ptr [r8], rcx ; ret
0x000002000017a29f : sbb byte ptr [rax], al ; mov rcx, qword ptr [rdi + 8] ; call r8
0x00000200003dec27 : sbb byte ptr [rax], al ; mov rcx, rsi ; call 0x200000095d8
0x000002000016d822 : sbb byte ptr [rax], al ; mov rdx, qword ptr [rdx + rax*8] ; jmp 0x2000016d83d
0x000002000057ee0f : sbb byte ptr [rax], al ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x000002000057cf9f : sbb byte ptr [rax], al ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000038cca : sbb byte ptr [rax], al ; ret
0x000002000040fe8c : sbb byte ptr [rax], al ; xor al, al ; ret
0x0000020000411836 : sbb byte ptr [rax], bl ; add byte ptr [rbp + 0x3b], cl ; ret 0x4575
0x00000200000a6ab5 : sbb byte ptr [rax], dh ; add byte ptr [rax - 9], cl ; ror byte ptr [rax + 0x23], 1 ; ret 0x2348
0x000002000020fbf9 : sbb byte ptr [rax], dl ; mov dl, 0x26 ; add byte ptr [rcx + 3], al ; ret 0x3eb
0x000002000013fb59 : sbb byte ptr [rax], spl ; mov eax, 0xffff ; ret
0x000002000013ddf1 : sbb byte ptr [rax], spl ; or eax, 0xffffffff ; ret
0x000002000003937f : sbb byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], cl ; ret
0x00000200001fd83a : sbb byte ptr [rbp + 0x3b], al ; ret 0x2875
0x00000200001357bd : sbb byte ptr [rbp + 0x3b], cl ; ret
0x0000020000010829 : sbb byte ptr [rbp + 0x3b], cl ; ret 0xb075
0x0000020000494f7f : sbb byte ptr [rbp + 0xf], al ; mov bh, 0x56 ; add al, byte ptr [rcx - 0x7d] ; ret 0x4403
0x00000200001f8aa6 : sbb byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x00000200006a7afd : sbb byte ptr [rbp + rcx - 0x75], dh ; ret 0x44f0
0x00000200003d28e5 : sbb byte ptr [rbp + rcx*4 + 0x1d], cl ; adc esp, edi ; ret 0x8bff
0x00000200000fcd29 : sbb byte ptr [rbp - 0x15], dh ; add rsp, 0x28 ; ret
0x00000200000fcd28 : sbb byte ptr [rbp - 0x15], sil ; add rsp, 0x28 ; ret
0x00000200000ca325 : sbb byte ptr [rbp - 0x16], dh ; mov al, 1 ; ret
0x00000200005c2084 : sbb byte ptr [rbp - 0x4e], bl ; call qword ptr [rax - 0x15833d17]
0x0000020000687e83 : sbb byte ptr [rbp - 0x75], al ; ret
0x000002000054daec : sbb byte ptr [rbp - 0x75], al ; ret 0x4466
0x0000020000249d03 : sbb byte ptr [rbp - 0x75], al ; ret 0x8b48
0x0000020000778714 : sbb byte ptr [rbp - 0x75], al ; ret 0xd0ba
0x00000200000566db : sbb byte ptr [rbp - 0x75], cl ; jae 0x20000056711 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000115fe4 : sbb byte ptr [rbp - 0x75], cl ; jae 0x20000116012 ; mov rsp, r11 ; pop rbp ; ret
0x000002000052d280 : sbb byte ptr [rbp - 0x75], cl ; jae 0x2000052d2ae ; mov rsp, r11 ; pop rbp ; ret
0x0000020000538c95 : sbb byte ptr [rbp - 0x75], cl ; jae 0x20000538cc3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006187b1 : sbb byte ptr [rbp - 0x75], cl ; jae 0x200006187df ; mov rsp, r11 ; pop rbp ; ret
0x00000200006a7525 : sbb byte ptr [rbp - 0x75], cl ; jae 0x200006a7553 ; mov rsp, r11 ; pop rbp ; ret
0x000002000079429a : sbb byte ptr [rbp - 0x75], cl ; jae 0x200007942c8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007b8c78 : sbb byte ptr [rbp - 0x75], cl ; jae 0x200007b8ca6 ; mov rsp, r11 ; pop rbp ; ret
0x000002000000c15b : sbb byte ptr [rbp - 0x75], cl ; ret
0x000002000018880f : sbb byte ptr [rbp - 0x75], cl ; ret 0x4ba
0x0000020000249d02 : sbb byte ptr [rbp - 0x75], r8b ; ret 0x8b48
0x000002000006cb3b : sbb byte ptr [rbp - 0xf48b40], al ; ret
0x0000020000453f31 : sbb byte ptr [rbx + 0x1f9c81], cl ; add byte ptr [rbx], bh ; ret
0x0000020000453f30 : sbb byte ptr [rbx + 0x1f9c81], r9b ; add byte ptr [rbx], bh ; ret
0x00000200001b985c : sbb byte ptr [rbx + 0x207883], cl ; add byte ptr [rbx], bh ; ret 0x820f
0x000002000079f11b : sbb byte ptr [rbx + 0x220f44c3], cl ; ret
0x0000020000228498 : sbb byte ptr [rbx + 0x28c90], cl ; add byte ptr [rax + 0x6b], cl ; ret 0x3364
0x00000200003e7f86 : sbb byte ptr [rbx + 0x4394dc1], cl ; ret 0x774
0x00000200003f6545 : sbb byte ptr [rbx + 0x5b5e5fc7], cl ; ret
0x00000200006036af : sbb byte ptr [rbx + 0x9091], cl ; add dh, dh ; ret 0xf02
0x00000200006036ae : sbb byte ptr [rbx + 0x9091], r9b ; add dh, dh ; ret 0xf02
0x00000200001d0238 : sbb byte ptr [rbx + 0xf040c79], al ; xchg eax, esp ; ret 0xdfeb
0x000002000066919a : sbb byte ptr [rbx + 6], dh ; mov eax, 0xc0000095 ; ret
0x0000020000020a3d : sbb byte ptr [rbx + rax - 0x3e], al ; jmp 0x20000020a1e
0x00000200000400d9 : sbb byte ptr [rbx + rcx*4 + 0x52], cl ; xor byte ptr [rbp + 0x3b], cl ; ret 0x894c
0x0000020000055499 : sbb byte ptr [rbx + rcx*4 + 0x65], al ; adc bh, bh ; ret
0x0000020000420eb0 : sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x000002000040931f : sbb byte ptr [rbx + rcx*4 + 0x7c], cl ; and al, 0x30 ; pop r14 ; pop rsi ; ret
0x00000200005ce576 : sbb byte ptr [rbx + rcx*4 + 4], cl ; shr ecx, 1 ; ret
0x0000020000191935 : sbb byte ptr [rbx + rcx*4 - 0x40], cl ; cmp rcx, rax ; jne 0x2000019192d ; ret
0x00000200000fd445 : sbb byte ptr [rbx + rcx*4 - 7], cl ; call 0x200000e9732
0x00000200006e7d6c : sbb byte ptr [rbx + rdi], al ; ret
0x00000200006e7d6b : sbb byte ptr [rbx + rdi], r8b ; ret
0x00000200004c5986 : sbb byte ptr [rbx - 0x1f3eb73f], cl ; and byte ptr [rax + 0xb], cl ; ret 0x3b48
0x0000020000097e7d : sbb byte ptr [rbx - 0x38], cl ; xor qword ptr [rcx + 0x18], r9 ; ret
0x000002000049bd77 : sbb byte ptr [rbx - 0x74b2afb8], cl ; adc dword ptr [rbp - 0x75], ecx ; ret 0xc1f6
0x0000020000513b2e : sbb byte ptr [rbx - 0x74bb88bb], cl ; ret 0x8a40
0x0000020000090168 : sbb byte ptr [rbx - 0x7af0fe06], al ; ret 0xff7
0x00000200004e7cb1 : sbb byte ptr [rbx - 0xf8dfd06], al ; xor eax, eax ; ret
0x0000020000241bfe : sbb byte ptr [rbx], ah ; ret
0x000002000016b9b9 : sbb byte ptr [rbx], ah ; ret 0xc80b
0x000002000024bc73 : sbb byte ptr [rbx], al ; ret
0x00000200001458be : sbb byte ptr [rbx], al ; ret 0x48d
0x000002000022d1dd : sbb byte ptr [rbx], al ; ret 0xc23b
0x000002000054fcb1 : sbb byte ptr [rbx], bh ; ret
0x000002000023146a : sbb byte ptr [rbx], bh ; ret 0x3073
0x0000020000585c05 : sbb byte ptr [rbx], bh ; ret 0x877
0x00000200006f3825 : sbb byte ptr [rbx], bl ; add byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200005696dc : sbb byte ptr [rbx], ch ; ret 0x8bc3
0x00000200003e0dde : sbb byte ptr [rbx], cl ; add byte ptr [rax], al ; add edi, edi ; ret
0x00000200007b7a6e : sbb byte ptr [rbx], cl ; ret 0x81c3
0x000002000079d830 : sbb byte ptr [rbx], dh ; leave ; call rax
0x00000200005478e1 : sbb byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x000002000004e288 : sbb byte ptr [rbx], dl ; add byte ptr [rcx - 0x75], al ; ret 0xe083
0x00000200000daa87 : sbb byte ptr [rcx + 0x23], cl ; ret 0x2d48
0x00000200000daa94 : sbb byte ptr [rcx + 0x23], cl ; ret 0x3148
0x00000200000daa55 : sbb byte ptr [rcx + 0x23], cl ; ret 0x3d48
0x00000200000c13ca : sbb byte ptr [rcx + 0x38], al ; mov ah, 0x24 ; ret
0x000002000007244f : sbb byte ptr [rcx + 0x3b], al ; ret
0x00000200005e2aaf : sbb byte ptr [rcx + 0x3b], al ; ret 0x2075
0x0000020000553be8 : sbb byte ptr [rcx + 0x3b], cl ; ret 0x870f
0x00000200003d1af4 : sbb byte ptr [rcx + 0x65486], cl ; add byte ptr [rcx - 0x75], al ; ret 0xe8c1
0x000002000000c895 : sbb byte ptr [rcx + 0xb], al ; ret 0x8948
0x00000200001c71d0 : sbb byte ptr [rcx + 3], cl ; ret 0x4810
0x000002000023edac : sbb byte ptr [rcx + 3], cl ; ret 0xc183
0x000002000004061d : sbb byte ptr [rcx + rax], ah ; ret
0x0000020000029021 : sbb byte ptr [rcx + rcx*4 + 0x58], al ; sbb al, 0x41 ; mov eax, edx ; pop rbx ; ret
0x000002000002e635 : sbb byte ptr [rcx + rcx*4 + 0x59], al ; and bl, ch ; rol byte ptr [rcx - 0x75], 1 ; ret 0xe8d1
0x00000200005d3b08 : sbb byte ptr [rcx - 0x16bfdbbc], cl ; ret 0xedd7
0x00000200003ca451 : sbb byte ptr [rcx - 0x3f], cl ; out dx, al ; or al, 0x8b ; ret
0x000002000059116a : sbb byte ptr [rcx - 0x74bbcfa9], cl ; ret 0xf41
0x0000020000183003 : sbb byte ptr [rcx - 0x75], al ; adc bh, dh ; ret 0xffc9
0x000002000001cd54 : sbb byte ptr [rcx - 0x75], al ; jmp 0x2004dc457a3
0x00000200000c8b36 : sbb byte ptr [rcx - 0x75], al ; ret
0x00000200001b8248 : sbb byte ptr [rcx - 0x75], al ; ret 0x8b41
0x0000020000219ee2 : sbb byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000024a225 : sbb byte ptr [rcx - 0x75], al ; ret 0x8b49
0x0000020000245e70 : sbb byte ptr [rcx - 0x75], al ; ret 0x8b4c
0x000002000050ee23 : sbb byte ptr [rcx - 0x75], al ; ror byte ptr [rax + 0x3b], 0x4c ; ret 0x7578
0x000002000004402f : sbb byte ptr [rcx - 0x75], cl ; add byte ptr [rax + 0x33], cl ; ret 0x3348
0x00000200007b46de : sbb byte ptr [rcx - 0x75], cl ; and byte ptr [r9 + 3], cl ; ret 0x3b48
0x00000200003f51c0 : sbb byte ptr [rcx - 0x75], cl ; imul esp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x0000020000003cbb : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000003ce9 ; mov rsp, r11 ; pop rdi ; ret
0x000002000000e407 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000000e435 ; mov rsp, r11 ; pop rdi ; ret
0x000002000002b026 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000002b054 ; mov rsp, r11 ; pop rdi ; ret
0x000002000003dc07 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000003dc35 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000045a80 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000045aae ; mov rsp, r11 ; pop rdi ; ret
0x0000020000085b4b : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000085b79 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f36ca : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000f36f8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f3c2d : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000f3c5b ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f8f82 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000f8fb0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f9079 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000f90a7 ; mov rsp, r11 ; pop rdi ; ret
0x000002000011ded7 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000011df05 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001267cb : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001267f9 ; mov rsp, r11 ; pop rdi ; ret
0x000002000012d275 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000012d2ab ; mov rsp, r11 ; pop rdi ; ret
0x000002000013528a : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001352b8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001bf131 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001bf167 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001bfc49 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001bfc77 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c31cf : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001c31fd ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c384a : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001c3878 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c428e : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001c42bc ; mov rsp, r11 ; pop rdi ; ret
0x00000200001cd78f : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001cd7bd ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fd919 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001fd947 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fdb6f : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001fdb9d ; mov rsp, r11 ; pop rdi ; ret
0x0000020000208964 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000208992 ; mov rsp, r11 ; pop rdi ; ret
0x000002000020e67f : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000020e6ad ; mov rsp, r11 ; pop rdi ; ret
0x000002000021231c : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000021234a ; mov rsp, r11 ; pop rdi ; ret
0x00000200003f4f16 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200003f4f44 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003f73a6 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200003f73d4 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003fd5fb : sbb byte ptr [rcx - 0x75], cl ; jae 0x200003fd629 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000400804 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000400832 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000403d74 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000403da2 ; mov rsp, r11 ; pop rdi ; ret
0x000002000042b44f : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000042b47d ; mov rsp, r11 ; pop rbp ; ret
0x000002000042dcae : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000042dcdc ; mov rsp, r11 ; pop rdi ; ret
0x000002000043ac42 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000043ac70 ; mov rsp, r11 ; pop rdi ; ret
0x000002000045357d : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004535ab ; mov rsp, r11 ; pop rdi ; ret
0x00000200004591a4 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004591d2 ; mov rsp, r11 ; pop rdi ; ret
0x000002000045cc93 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000045ccc1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e64f0 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004e651e ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ea1a7 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004ea1d5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004f16a7 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004f16d5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004fa45f : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004fa48d ; mov rsp, r11 ; pop rdi ; ret
0x00000200004fa848 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004fa876 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005160d4 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000516102 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051aaf5 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000051ab23 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051c0aa : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000051c0d8 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051dedb : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000051df09 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051e301 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000051e32f ; mov rsp, r11 ; pop rdi ; ret
0x0000020000528cd8 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000528d06 ; mov rsp, r11 ; pop rdi ; ret
0x000002000052f4a5 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000052f4d3 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000535054 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000535082 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000536308 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000536336 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000536f19 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000536f47 ; mov rsp, r11 ; pop rdi ; ret
0x000002000054ec04 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000054ec32 ; mov rsp, r11 ; pop rdi ; ret
0x000002000055116f : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000055119d ; mov rsp, r11 ; pop rdi ; ret
0x00000200005655d4 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000565602 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005658e1 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000056590f ; mov rsp, r11 ; pop rdi ; ret
0x0000020000566b24 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000566b52 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000605313 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000605341 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006201f9 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000620227 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000620ab1 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000620adf ; mov rsp, r11 ; pop rdi ; ret
0x000002000062a6c2 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000062a6f0 ; mov rsp, r11 ; pop rdi ; ret
0x000002000062b624 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000062b652 ; mov rsp, r11 ; pop rdi ; ret
0x000002000062cdd2 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000062ce00 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000631d16 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000631d44 ; mov rsp, r11 ; pop rdi ; ret
0x000002000065d9ba : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000065d9e8 ; mov rsp, r11 ; pop rdi ; ret
0x000002000066cd8a : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000066cdb8 ; mov rsp, r11 ; pop rdi ; ret
0x000002000066f562 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000066f590 ; mov rsp, r11 ; pop rdi ; ret
0x000002000067594b : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000675979 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006bc1ce : sbb byte ptr [rcx - 0x75], cl ; jae 0x200006bc1fc ; mov rsp, r11 ; pop rdi ; ret
0x00000200006dc29c : sbb byte ptr [rcx - 0x75], cl ; jae 0x200006dc2ca ; mov rsp, r11 ; pop rdi ; ret
0x00000200006dd1a5 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200006dd1d3 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006dd23c : sbb byte ptr [rcx - 0x75], cl ; jae 0x200006dd26a ; mov rsp, r11 ; pop rdi ; ret
0x00000200006df4b3 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200006df4e1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006e757b : sbb byte ptr [rcx - 0x75], cl ; jae 0x200006e75a9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200007acfed : sbb byte ptr [rcx - 0x75], cl ; jae 0x200007ad01b ; mov rsp, r11 ; pop rdi ; ret
0x00000200000517cc : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200000517fa ; mov rsp, r11 ; pop rbp ; ret
0x00000200000fb0cf : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200000fb0fd ; mov rsp, r11 ; pop rbp ; ret
0x0000020000101602 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000101630 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011ad46 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000011ad74 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011e2e4 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000011e312 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001b7306 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001b7334 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c1fc4 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001c1ff2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001cc8be : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001cc8f4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d74bf : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001d74ed ; mov rsp, r11 ; pop rbp ; ret
0x00000200001eceb5 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001ecee3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000205665 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000205693 ; mov rsp, r11 ; pop rbp ; ret
0x000002000020878c : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200002087ba ; mov rsp, r11 ; pop rbp ; ret
0x0000020000208e40 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000208e6e ; mov rsp, r11 ; pop rbp ; ret
0x000002000020b37d : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000020b3ab ; mov rsp, r11 ; pop rbp ; ret
0x000002000021ed42 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000021ed70 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000222f8d : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000222fbb ; mov rsp, r11 ; pop rbp ; ret
0x0000020000224636 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000224664 ; mov rsp, r11 ; pop rbp ; ret
0x000002000022bc52 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000022bc80 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003d0f17 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200003d0f45 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003d38de : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200003d390c ; mov rsp, r11 ; pop rbp ; ret
0x00000200003ecb0d : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200003ecb3b ; mov rsp, r11 ; pop rbp ; ret
0x00000200003ed3f9 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200003ed427 ; mov rsp, r11 ; pop rbp ; ret
0x000002000040e447 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000040e475 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004566da : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000456708 ; mov rsp, r11 ; pop rbp ; ret
0x000002000045eed2 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000045ef00 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004aff23 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004aff51 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d03fb : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004d0429 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005170e1 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000051710f ; mov rsp, r11 ; pop rbp ; ret
0x000002000051b061 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000051b08f ; mov rsp, r11 ; pop rbp ; ret
0x000002000051b5fb : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000051b629 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051b6ef : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000051b71d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000527b89 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000527bb7 ; mov rsp, r11 ; pop rbp ; ret
0x000002000052ad4c : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000052ad7a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000530031 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000053005f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000531fbd : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000531feb ; mov rsp, r11 ; pop rbp ; ret
0x0000020000562181 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005621af ; mov rsp, r11 ; pop rbp ; ret
0x0000020000601303 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000601331 ; mov rsp, r11 ; pop rbp ; ret
0x000002000062556a : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000625598 ; mov rsp, r11 ; pop rbp ; ret
0x000002000062dfe5 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000062e013 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006312fa : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000631330 ; mov rsp, r11 ; pop rbp ; ret
0x000002000063afb7 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000063afed ; mov rsp, r11 ; pop rbp ; ret
0x000002000063d4f0 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000063d51e ; mov rsp, r11 ; pop rbp ; ret
0x000002000063e685 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000063e6b3 ; mov rsp, r11 ; pop rbp ; ret
0x000002000063f084 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000063f0b2 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000641afb : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000641b31 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064fdfc : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000064fe2a ; mov rsp, r11 ; pop rbp ; ret
0x000002000064ff04 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000064ff32 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000677839 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000677867 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067d50a : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000067d540 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067d659 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000067d68f ; mov rsp, r11 ; pop rbp ; ret
0x000002000067d96b : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000067d999 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067e057 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000067e085 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000691f8a : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000691fb8 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000695a26 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000695a54 ; mov rsp, r11 ; pop rbp ; ret
0x000002000069b7dc : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000069b80a ; mov rsp, r11 ; pop rbp ; ret
0x00000200006a3f5e : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200006a3f8c ; mov rsp, r11 ; pop rbp ; ret
0x00000200006ac922 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200006ac950 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006b1ffa : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200006b2030 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006bb705 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200006bb733 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006c3692 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200006c36c0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006d5989 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200006d59b7 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006e6e6b : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200006e6e99 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007a138f : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200007a13bd ; mov rsp, r11 ; pop rbp ; ret
0x00000200007a184f : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200007a187d ; mov rsp, r11 ; pop rbp ; ret
0x00000200007a5318 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200007a5346 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007b0035 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200007b0063 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007b9c04 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200007b9c32 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007ba183 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200007ba1b1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007cf1cb : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200007cf1f9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000090b1 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000911a ; ret
0x000002000001a31e : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000001a387 ; ret
0x000002000004def8 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000004df61 ; ret
0x000002000005682b : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000056892 ; ret
0x000002000005c419 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000005c482 ; ret
0x0000020000074e7f : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000074ee8 ; ret
0x00000200001034e8 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000103551 ; ret
0x0000020000111d50 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000111db9 ; ret
0x000002000011e4de : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011e545 ; ret
0x000002000011ed11 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011ed78 ; ret
0x0000020000120541 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001205a8 ; ret
0x0000020000131dae : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000131e17 ; ret
0x0000020000139770 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001397d7 ; ret
0x00000200001bc055 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bc0be ; ret
0x00000200001bde86 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bdeef ; ret
0x00000200001bee05 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bee6e ; ret
0x00000200001c1b6c : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c1bd3 ; ret
0x00000200001c1d0c : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c1d73 ; ret
0x00000200001c29af : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c2a18 ; ret
0x00000200001c3f72 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c3fdb ; ret
0x00000200001cf640 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001cf6a7 ; ret
0x00000200001d97c6 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d982d ; ret
0x00000200001f2278 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001f22df ; ret
0x00000200001f23b4 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001f241b ; ret
0x00000200001fd308 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fd36f ; ret
0x000002000020cab8 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020cb1f ; ret
0x00000200002151d6 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000021523f ; ret
0x00000200002152f7 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000215360 ; ret
0x000002000021539f : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000215408 ; ret
0x0000020000224101 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000224168 ; ret
0x000002000022be4a : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022beb3 ; ret
0x00000200003cdcef : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003cdd56 ; ret
0x00000200003d0dfa : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003d0e61 ; ret
0x00000200003d8400 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003d8469 ; ret
0x00000200003f4db8 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f4e21 ; ret
0x000002000042d7f7 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042d860 ; ret
0x000002000044cc20 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044cc89 ; ret
0x0000020000452c6f : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000452cd6 ; ret
0x000002000045c01c : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045c085 ; ret
0x000002000045d73d : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045d7a6 ; ret
0x0000020000460a01 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000460a68 ; ret
0x0000020000469600 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000469669 ; ret
0x000002000046d89a : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046d903 ; ret
0x0000020000474b9d : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000474c06 ; ret
0x0000020000491818 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000491881 ; ret
0x00000200004b25da : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b2643 ; ret
0x00000200005064a4 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050650d ; ret
0x0000020000506e4d : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000506eb4 ; ret
0x0000020000519b32 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000519b99 ; ret
0x000002000052216f : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005221d6 ; ret
0x000002000052a933 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052a99a ; ret
0x00000200005300f0 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000530159 ; ret
0x0000020000535fb1 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053601a ; ret
0x000002000053f7f0 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053f857 ; ret
0x000002000054799a : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000547a03 ; ret
0x000002000054a55f : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054a5c6 ; ret
0x000002000054a69d : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054a704 ; ret
0x0000020000555e83 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000555eea ; ret
0x000002000055d4bf : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055d526 ; ret
0x0000020000563129 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000563190 ; ret
0x00000200005641bd : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000564224 ; ret
0x0000020000564b07 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000564b6e ; ret
0x0000020000565bd6 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000565c3f ; ret
0x0000020000567453 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005674bb ; ret
0x00000200005fecb8 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fed21 ; ret
0x000002000061ecc5 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061ed2d ; ret
0x000002000061fb04 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061fb6b ; ret
0x00000200006242a6 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062430f ; ret
0x000002000063d107 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063d170 ; ret
0x0000020000645355 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006453be ; ret
0x000002000064d3c8 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064d42f ; ret
0x000002000064d52b : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064d592 ; ret
0x0000020000675064 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006750cb ; ret
0x00000200006753ae : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000675415 ; ret
0x0000020000676fe2 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000677049 ; ret
0x00000200006770ca : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000677131 ; ret
0x0000020000679c39 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000679ca0 ; ret
0x000002000067dcc8 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067dd2f ; ret
0x000002000067de78 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067dedf ; ret
0x000002000067e2dc : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067e343 ; ret
0x000002000067ecf2 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067ed59 ; ret
0x000002000067ef4a : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067efb1 ; ret
0x000002000067f3c2 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067f429 ; ret
0x000002000067f832 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067f899 ; ret
0x000002000067f942 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067f9a9 ; ret
0x0000020000692179 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006921e0 ; ret
0x0000020000695918 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000695981 ; ret
0x0000020000699acf : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000699b36 ; ret
0x00000200006b6af6 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006b6b5f ; ret
0x00000200006d7476 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006d74dd ; ret
0x00000200006d7ecc : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006d7f33 ; ret
0x00000200007995eb : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000799652 ; ret
0x000002000079acf5 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000079ad5c ; ret
0x000002000079e165 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000079e1cc ; ret
0x00000200007a2a13 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200007a2a7a ; ret
0x00000200007a886e : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200007a88d5 ; ret
0x00000200007b9de2 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b9e49 ; ret
0x00000200004509bc : sbb byte ptr [rcx - 0x75], cl ; outsd dx, dword ptr [rsi] ; sbb al, ch ; ret 0xc0e6
0x000002000003f4fa : sbb byte ptr [rcx - 0x75], cl ; ret
0x00000200004e7372 : sbb byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x0000020000018be7 : sbb byte ptr [rcx - 0x75], cl ; ret 0x348
0x000002000043e1d8 : sbb byte ptr [rcx - 0x75], cl ; ret 0x8941
0x00000200000d0e28 : sbb byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000004cdf8 : sbb byte ptr [rcx - 0x75], cl ; sbb byte ptr [rax - 0x75], cl ; ret
0x0000020000183002 : sbb byte ptr [rcx - 0x75], r8b ; adc bh, dh ; ret 0xffc9
0x00000200004a9008 : sbb byte ptr [rcx - 0x76], al ; fiadd word ptr [rbx + rcx*4 + 0x6d] ; or dh, dh ; ret
0x000002000012f28a : sbb byte ptr [rcx - 0x76], al ; ret
0x00000200000f9cd1 : sbb byte ptr [rcx - 0x76], al ; ret 0x8b48
0x00000200004bead9 : sbb byte ptr [rcx - 0x77], al ; add al, 0xf7 ; ret
0x00000200006acf6c : sbb byte ptr [rcx - 0x77], cl ; adc byte ptr [rdi + r9 - 0x49], r8b ; ret 0x8b48
0x000002000065aab1 : sbb byte ptr [rcx - 0x77], cl ; add dword ptr [rax - 0x75], ecx ; ret 0x49f0
0x00000200006acf6b : sbb byte ptr [rcx - 0x77], r9b ; adc byte ptr [rdi + r9 - 0x49], r8b ; ret 0x8b48
0x000002000014104a : sbb byte ptr [rcx - 0x78], al ; add ecx, dword ptr [rcx - 1] ; ret
0x00000200006692fa : sbb byte ptr [rcx - 0x7d], cl ; add ch, byte ptr [rax] ; ret
0x0000020000213e86 : sbb byte ptr [rcx - 0x7d], cl ; rcr byte ptr [rax], 0xeb ; xor byte ptr [rax - 0x7d], cl ; ret
0x000002000024690b : sbb byte ptr [rcx - 0x7d], cl ; ret
0x0000020000026988 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x00000200001d75f0 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x000002000078325c : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4828
0x00000200006a9942 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x8918
0x00000200006a9941 : sbb byte ptr [rcx - 0x7d], r9b ; ret 0x8918
0x0000020000491f68 : sbb byte ptr [rcx - 0x7f], al ; ret 0x1000
0x000002000055ec2f : sbb byte ptr [rcx - 1], al ; ret 0x8349
0x0000020000560d05 : sbb byte ptr [rcx - 1], al ; ret 0x8944
0x000002000041e6b1 : sbb byte ptr [rcx], ah ; adc al, 0xe8 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000200005f1051 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000010abb8 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add rax, rcx ; ret
0x00000200006cef85 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000483e95 : sbb byte ptr [rdi + 0x14], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000046fdc : sbb byte ptr [rdi + r9 + 0x22], r8b ; ret
0x0000020000017cc6 : sbb byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200001054db : sbb byte ptr [rdi + rcx + 0x22], al ; ret 0x854d
0x0000020000455aba : sbb byte ptr [rdi], al ; add al, al ; ret
0x000002000002c87f : sbb byte ptr [rdi], bh ; jb 0x2000002c892 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000dd956 : sbb byte ptr [rdi], bh ; jb 0x200000dd969 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000069901b : sbb byte ptr [rdi], cl ; mov dh, 0x41 ; add dword ptr [rbx], ebp ; ret 0x8b44
0x00000200001f01f6 : sbb byte ptr [rdi], cl ; mov dh, 0xc2 ; mov cr8, rax ; ret
0x000002000000c2f3 : sbb byte ptr [rdi], cl ; ret 0xba0f
0x0000020000197d46 : sbb byte ptr [rdi], cl ; ret 0xbee9
0x000002000068dc6c : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x00000200005e802d : sbb byte ptr [rdi], cl ; test dword ptr [rbp - 0x7a000eb0], edi ; ret 0x840f
0x00000200004e97e2 : sbb byte ptr [rdi], cl ; test dword ptr [rbp - 0xa000000], ebx ; ret
0x0000020000180d7f : sbb byte ptr [rdi], cl ; test dword ptr [rip - 0x12f4], ecx ; ret 0x8349
0x000002000069901a : sbb byte ptr [rdi], r9b ; mov dh, 0x41 ; add dword ptr [rbx], ebp ; ret 0x8b44
0x00000200000d4e38 : sbb byte ptr [rdx + 0x21], dh ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000621099 : sbb byte ptr [rdx + 0x72704d45], bh ; call 0x2000024d009
0x00000200003d3a60 : sbb byte ptr [rdx + 3], al ; push rsp ; fstp dword ptr [rbx + rdi] ; ret 0x420f
0x00000200006ce76e : sbb byte ptr [rdx - 0x14], dh ; or eax, 0xffffffff ; ret
0x00000200000310a3 : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000020000009def : sbb byte ptr [rdx], bh ; ret 0x3674
0x00000200005525f9 : sbb byte ptr [rdx], bh ; ret 0x470f
0x00000200003d4c39 : sbb byte ptr [rdx], cl ; add al, ch ; ret
0x00000200006a843b : sbb byte ptr [rdx], dh ; ret 0xb60f
0x00000200004aa096 : sbb byte ptr [rip + 0x43750000], al ; ret
0x0000020000046b64 : sbb byte ptr [rip - 0x74b7ffef], cl ; ret
0x00000200004aba69 : sbb byte ptr [rip - 0x74bc0000], al ; ret 0xb44
0x00000200004dba73 : sbb byte ptr [rip - 0x7abf0000], al ; ret 0x850f
0x00000200001ed0c3 : sbb byte ptr [rip - 0x7cb80000], al ; ret
0x0000020000113655 : sbb byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x000002000054d6f1 : sbb byte ptr [rsi + rdx - 0x75], dh ; ret 0xd8f7
0x000002000015e777 : sbb byte ptr [rsi - 0x12], al ; push rsi ; ret 0x7403
0x000002000021cac4 : sbb byte ptr [rsi - 0x77], ah ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000012d66c : sbb byte ptr [rsi - 0x77], ah ; or eax, 0x1f7d84 ; ret
0x0000020000234fb5 : sbb byte ptr [rsi - 0x7d], ah ; ret
0x00000200001af50f : sbb byte ptr [rsi], bl ; clc ; inc dword ptr [rcx - 0x75] ; ret
0x00000200005fc884 : sbb byte ptr [rsi], dl ; ret
0x000002000040fdb5 : sbb byte ptr es:[rax], al ; mov eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000040fe6e : sbb byte ptr es:[rax], al ; mov qword ptr [r9], rdx ; mov qword ptr [r8], rcx ; ret
0x000002000040fe8b : sbb byte ptr es:[rax], al ; xor al, al ; ret
0x0000020000090167 : sbb byte ptr gs:[rbx - 0x7af0fe06], al ; ret 0xff7
0x00000200000c13c9 : sbb byte ptr gs:[rcx + 0x38], al ; mov ah, 0x24 ; ret
0x00000200007b9436 : sbb byte ptr ss:[rax - 0x3b7cb701], bl ; ret
0x00000200003d4c38 : sbb byte ptr ss:[rdx], cl ; add al, ch ; ret
0x00000200003fae20 : sbb ch, al ; ret
0x000002000003dee8 : sbb ch, bh ; adc al, byte ptr [rax] ; ret
0x000002000014022a : sbb ch, bl ; adc ecx, dword ptr [rcx - 1] ; ret
0x0000020000491050 : sbb ch, byte ptr [rax + 0x8850f20] ; ret
0x000002000077b542 : sbb ch, byte ptr [rbx] ; fadd dword ptr [rcx - 0x75] ; ret 0xe7f7
0x00000200007a74ce : sbb ch, byte ptr [rbx] ; ret
0x00000200006f6ac2 : sbb ch, byte ptr [rdx] ; ret 0x44ff
0x00000200006bac88 : sbb ch, cl ; ret
0x0000020000519652 : sbb ch, dl ; ret 0x44ff
0x000002000069b593 : sbb cl, byte ptr [rax + 0x2b] ; ret 0x894c
0x000002000023b410 : sbb cl, byte ptr [rax + 0x69] ; ret 0xe100
0x00000200000b297c : sbb cl, byte ptr [rax - 0x73] ; dec qword ptr [rax - 0x75] ; ret 0x48f0
0x0000020000107971 : sbb cl, byte ptr [rax - 0x73] ; mov ss, word ptr [rax - 0x17fffffc] ; ret 0x498
0x0000020000494311 : sbb cl, byte ptr [rax - 0x75] ; or byte ptr [rcx + 0x23], cl ; ret
0x0000020000106f89 : sbb cl, byte ptr [rax - 0x75] ; or byte ptr [rcx + 0x63], cl ; ret
0x00000200000f74e0 : sbb cl, byte ptr [rax - 0x75] ; ret 0x2b49
0x000002000053aecb : sbb cl, byte ptr [rax - 0x7d] ; ret
0x00000200001d3d0a : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x000002000065b545 : sbb cl, byte ptr [rax - 1] ; ret
0x00000200001706b6 : sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x0000020000113fcf : sbb cl, byte ptr [rbx + 0x9090] ; add dh, dh ; ret 0x7502
0x0000020000538918 : sbb cl, byte ptr [rbx] ; add bh, bh ; ret 0x3b41
0x00000200005cb722 : sbb cl, byte ptr [rcx + 3] ; ret
0x00000200000ddbb3 : sbb cl, byte ptr [rcx + 3] ; ror dword ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x0000020000606883 : sbb cl, byte ptr [rcx + rcx*4 + 0x64] ; and al, 0x20 ; mov r8d, ebx ; call rax
0x000002000012618e : sbb cl, byte ptr [rcx - 0x7d] ; ret 0xe902
0x0000020000126134 : sbb cl, byte ptr [rcx - 1] ; ret 0xc38b
0x00000200000f2602 : sbb cl, byte ptr [rdi] ; add byte ptr [rax + 3], cl ; ret 0xe0ff
0x00000200001977ea : sbb cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf640
0x000002000019aa5f : sbb cl, ch ; in eax, dx ; int1 ; dec dword ptr [rax + 0xb] ; ret 0x8948
0x00000200005a31d7 : sbb cl, ch ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x000002000015eecb : sbb cl, ch ; int 0xde
0x00000200005956e9 : sbb cl, ch ; ret
0x0000020000163f9e : sbb cl, ch ; ret 0xeb05
0x0000020000587b11 : sbb cl, ch ; salc ; ret
0x0000020000197e83 : sbb cl, ch ; sub dword ptr [rax - 0xf], esp ; push rsi ; ret 0x7401
0x00000200001718d1 : sbb cl, ch ; sub eax, 0xf6fff923 ; ret 0xf07
0x00000200004d3c51 : sbb cl, dl ; call 0x1ffe90efe5f
0x0000020000197e82 : sbb cl, r13b ; sub dword ptr [rax - 0xf], esp ; push rsi ; ret 0x7401
0x00000200005b8a11 : sbb dh, bh ; push qword ptr [rbx] ; sal dh, cl ; ret
0x00000200001f84eb : sbb dh, bl ; dec dword ptr [rcx + 0x3b] ; ret
0x000002000013b163 : sbb dh, byte ptr [rbp + 4] ; mov rax, rcx ; ret
0x00000200005c1d6e : sbb dh, byte ptr [rbp - 0x16] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000538b7d : sbb dh, byte ptr [rbp - 0xb] ; lock inc dword ptr [rax + 0x10] ; ret
0x00000200005e5a8b : sbb dh, byte ptr [rcx - 0x7a277401] ; ror byte ptr [rdi], 0x88 ; ret
0x00000200006bc086 : sbb dh, byte ptr [rdi + 0xd8b44ff] ; je 0x200006bc050 ; ret
0x000002000000c314 : sbb dh, byte ptr [rdx + 0x15] ; bt ecx, 0x19 ; jb 0x2000000c33a ; ret
0x0000020000453a62 : sbb dh, byte ptr [rsi + 0x15e8ffec] ; xchg eax, esi ; ret 0x8bff
0x00000200005fded5 : sbb dh, byte ptr [rsi - 0x74b3000a] ; ret 0x8b48
0x0000020000004197 : sbb dh, dh ; ret
0x00000200004ecbdd : sbb dh, dh ; ret 0x4801
0x0000020000053342 : sbb dh, dh ; ret 0x7502
0x000002000043458a : sbb dh, dh ; ret 0x7508
0x000002000018ed54 : sbb dh, dh ; ret 0x7510
0x00000200000d6f84 : sbb dh, dh ; ret 0xf01
0x0000020000567057 : sbb dh, dh ; ret 0xf02
0x00000200000eb0c6 : sbb dil, byte ptr [rbx] ; ret 0x830f
0x0000020000449d94 : sbb dl, bh ; sar edi, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000002675e : sbb dl, byte ptr [rax + rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005ada89 : sbb dl, ch ; dec dword ptr [rdi] ; mov dh, 0x87 ; ret 6
0x000002000046db5e : sbb dword ptr [rax + 0x15], edx ; add byte ptr [rax - 0x75], cl ; ret
0x00000200007a467d : sbb dword ptr [rax + 0x2b], ecx ; fmul dword ptr [rax - 0x7f] ; ret
0x00000200007bab27 : sbb dword ptr [rax + 0x2b], ecx ; ror byte ptr [rax - 0x7f], 1 ; ret 0
0x00000200001af6ae : sbb dword ptr [rax + 0x3b], ecx ; ret
0x00000200007ce774 : sbb dword ptr [rax + 0x3b], ecx ; ret 0x147d
0x0000020000479066 : sbb dword ptr [rax + 0x3b], ecx ; ret 0x377
0x0000020000035bf2 : sbb dword ptr [rax + 0x3b], ecx ; ret 0x8f76
0x00000200000b7ea8 : sbb dword ptr [rax + 0x3b], ecx ; ret 0xb776
0x0000020000490fbb : sbb dword ptr [rax + 0xf000000], -0x7b ; ret
0x00000200004a653b : sbb dword ptr [rax + 2], 0x3b480000 ; ret 0xdb74
0x00000200004c3da8 : sbb dword ptr [rax + rax - 0x3f010000], 0x3b ; ret 0xe976
0x0000020000154bb9 : sbb dword ptr [rax + rax], 0 ; nop ; ret
0x00000200004c52d0 : sbb dword ptr [rax - 0x75], ecx ; clc ; jmp 0x200004c529d
0x0000020000121622 : sbb dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r10d ; ret
0x000002000000a55a : sbb dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r9d ; ret
0x0000020000081e9f : sbb dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; ret
0x000002000001506e : sbb dword ptr [rax - 0x75], ecx ; ret
0x00000200007a0ad7 : sbb dword ptr [rax - 0x75], ecx ; ret 0x8b4c
0x000002000004f7b5 : sbb dword ptr [rax - 0x75], ecx ; ret 0xc148
0x000002000002a879 : sbb dword ptr [rax - 0x77], ecx ; sbb al, byte ptr [rcx - 0x75] ; ret
0x000002000007098d : sbb dword ptr [rax - 0x7d], ecx ; ret 0x4cf0
0x000002000007006b : sbb dword ptr [rax - 1], ecx ; ret
0x00000200002131fb : sbb dword ptr [rax - 1], ecx ; ret 0x8349
0x00000200004c2c17 : sbb dword ptr [rax], 0x2b108040 ; ret 0xe0c1
0x000002000008f3f2 : sbb dword ptr [rax], 0x3f000003 ; ret
0x00000200001d178c : sbb dword ptr [rax], 0x8b00002a ; ret
0x000002000004e287 : sbb dword ptr [rax], 0x8b410013 ; ret 0xe083
0x00000200007cd159 : sbb dword ptr [rax], eax ; add al, byte ptr [rax] ; call 0x200003f7bc3
0x00000200003e5598 : sbb dword ptr [rax], eax ; add al, ch ; sub byte ptr [rdx], al ; ret 0x48ff
0x000002000000eb91 : sbb dword ptr [rax], eax ; add byte ptr [rbp - 0x73], cl ; mov r8b, 0x8b ; ret 0xd8f7
0x0000020000637693 : sbb dword ptr [rax], eax ; add dh, dh ; ret 0x7440
0x00000200003f09e3 : sbb dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003e7330 : sbb dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200003e75bb : sbb dword ptr [rax], eax ; call 0x20000007b19
0x0000020000194b54 : sbb dword ptr [rax], eax ; jmp 0x200000a18e2
0x00000200003e188b : sbb dword ptr [rax], eax ; lea rdx, qword ptr [rbp - 0x40] ; call 0x200000035ed
0x00000200003e2e0b : sbb dword ptr [rax], eax ; mov al, r8b ; ret
0x00000200001bc46a : sbb dword ptr [rax], eax ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200003f10be : sbb dword ptr [rax], eax ; mov eax, r9d ; ret
0x000002000018d313 : sbb dword ptr [rax], eax ; ret
0x0000020000411555 : sbb dword ptr [rax], ebx ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x0000020000127aaf : sbb dword ptr [rbp + 0x23], eax ; ret
0x00000200006cf183 : sbb dword ptr [rbp + rcx - 1], esi ; ret 0x8348
0x00000200000c689d : sbb dword ptr [rbp + rcx*4 + 5], ecx ; ret
0x00000200004ba4a1 : sbb dword ptr [rbp - 0x74a88725], eax ; ret
0x000002000077aca3 : sbb dword ptr [rbp - 0x74e18b2e], eax ; ret 0x8b48
0x00000200003db3e3 : sbb dword ptr [rbp - 0x75], ecx ; ret
0x000002000016a9fc : sbb dword ptr [rbp - 0x75], ecx ; ret 0x2b48
0x000002000002d973 : sbb dword ptr [rbx + 0x2d279605], ecx ; add byte ptr [rbx], bh ; ret
0x00000200003cd9d5 : sbb dword ptr [rbx + 0x6c490], ecx ; add dh, dh ; ret 0x7401
0x00000200005f69e9 : sbb dword ptr [rbx - 0x3074b72d], ecx ; call 0x20000217cb1
0x000002000068f8d6 : sbb dword ptr [rbx - 0x3b7cb73d], ecx ; cmp byte ptr [rdi + 0x5b], bl ; ret
0x0000020000594fa3 : sbb dword ptr [rbx - 0x54], esi ; call qword ptr [rax - 0x18006f17]
0x000002000005e3dd : sbb dword ptr [rbx - 0x9fe76ff], ecx ; ret
0x00000200005099b7 : sbb dword ptr [rbx], eax ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x00000200004d59b4 : sbb dword ptr [rbx], edi ; ret
0x0000020000614b1a : sbb dword ptr [rbx], edi ; ret 0x1572
0x0000020000128452 : sbb dword ptr [rbx], esi ; enter -0x76bc, 0x6d ; mov al, 0x8b ; ret
0x0000020000127a50 : sbb dword ptr [rbx], esi ; rol byte ptr [rcx - 0x75], 1 ; ret 0xc8c1
0x000002000001fa29 : sbb dword ptr [rbx], esp ; ret 0xc22b
0x00000200001f3180 : sbb dword ptr [rcx + 0x2b], ecx ; dec byte ptr [rax - 0x3f] ; call qword ptr [rax]
0x00000200006317aa : sbb dword ptr [rcx + 0x3b], eax ; fisttp word ptr [rdi] ; ret 0x8b48
0x000002000041485d : sbb dword ptr [rcx + 0x3b], ecx ; ret
0x000002000013aa51 : sbb dword ptr [rcx + 0xfffe1], eax ; add byte ptr [rax + 0x2b], cl ; ret 0xc148
0x00000200001e33cc : sbb dword ptr [rcx + 1], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200002479e5 : sbb dword ptr [rcx + 3], eax ; ror byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200002480a4 : sbb dword ptr [rcx + 3], eax ; ror dword ptr [rax + 0x63], cl ; ret 0x8d48
0x0000020000124155 : sbb dword ptr [rcx + 3], ecx ; ret
0x000002000079795d : sbb dword ptr [rcx - 0x3b7cb701], ebx ; pop rbx ; ret
0x00000200001d277a : sbb dword ptr [rcx - 0x75], eax ; ret 0x48c3
0x000002000003859d : sbb dword ptr [rcx - 0x75], eax ; ret 0xeac1
0x00000200000188f1 : sbb dword ptr [rcx - 0x75], ecx ; ret
0x0000020000014e18 : sbb dword ptr [rcx - 0x75], ecx ; ret 0xc148
0x00000200007b2e66 : sbb dword ptr [rcx - 0x77], ecx ; add bh, bh ; ret 0x8349
0x0000020000029051 : sbb dword ptr [rcx - 0x7d], eax ; ret
0x0000020000664740 : sbb dword ptr [rcx - 0x7d], ecx ; ret 0x4502
0x000002000007c7a6 : sbb dword ptr [rcx], eax ; jne 0x2000007c7bb ; ret
0x000002000007c7a5 : sbb dword ptr [rcx], eax ; jne 0x2000007c7bc ; ret
0x0000020000551750 : sbb dword ptr [rdi + 0x38], 0xa ; add bh, bh ; ret 0x8b45
0x000002000003d73b : sbb dword ptr [rdi + 1], 0 ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200005d1c42 : sbb dword ptr [rdi + 4], 0x940f0000 ; ret 0x31e8
0x00000200006549b9 : sbb dword ptr [rdi + rcx - 0x49], eax ; ret 0x8b48
0x000002000051c14c : sbb dword ptr [rdi - 0x4d], esi ; ret
0x00000200007b6bf9 : sbb dword ptr [rdi - 0xb18801], edi ; ret
0x00000200001979c9 : sbb dword ptr [rdi - 0xf], edx ; dec dword ptr [rax - 0x75] ; ret
0x00000200002364e7 : sbb dword ptr [rdi], ecx ; add byte ptr [rbx + 0x440f48cf], cl ; ret 0x8d48
0x000002000011609b : sbb dword ptr [rdi], ecx ; ret 0x42ba
0x000002000043bbf5 : sbb dword ptr [rdx + 0x12], esi ; ret
0x000002000000c31a : sbb dword ptr [rdx + 0x14], esi ; ret
0x00000200004345ed : sbb dword ptr [rdx + 0x17], esi ; ret
0x00000200000b2356 : sbb dword ptr [rdx + 2], 0 ; add byte ptr [rcx - 1], al ; ret 0x8b48
0x000002000020e804 : sbb dword ptr [rdx + 3], esi ; xor al, al ; ret
0x000002000020e768 : sbb dword ptr [rdx + 3], esi ; xor eax, eax ; ret
0x00000200005a6574 : sbb dword ptr [rdx + rdx*8 - 0x49f0ea88], eax ; ret 0xf42
0x00000200000f8b01 : sbb dword ptr [rdx], 0x48 ; mov ebx, edx ; call 0x20000074d19
0x00000200004b24df : sbb dword ptr [rdx], edx ; add byte ptr [rax - 1], cl ; ret
0x0000020000232128 : sbb dword ptr [rsi + 0xf], esp ; out dx, eax ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000020000482b43 : sbb dword ptr [rsi + rdi*4 + 0x7e894dff], ebp ; or dh, dh ; ret
0x00000200006cfdfb : sbb dword ptr [rsi - 0x7b], esp ; sal byte ptr [rsp + rbx + 0x48], 0x83 ; ret
0x00000200000b8e32 : sbb dword ptr [rsi], ecx ; add byte ptr [rcx - 0x75], cl ; pop rdi ; adc byte ptr [rax - 0x75], cl ; ret
0x00000200003edc8b : sbb dword ptr [rsp + rax*2 - 0x75], ecx ; ret 0xff3
0x00000200003edc8a : sbb dword ptr [rsp + rax*2 - 0x75], r9d ; ret 0xff3
0x000002000013b122 : sbb eax, -1 ; ret
0x00000200005fcf40 : sbb eax, 0x14bbcb ; call 0x2000022baa0
0x000002000015609c : sbb eax, 0x16f ; jmp r11
0x00000200004def7a : sbb eax, 0x3410373 ; ret 0xba0f
0x0000020000155dbd : sbb eax, 0x34e ; jmp r11
0x000002000022c48b : sbb eax, 0x3b1c438b ; ret 0x974
0x000002000069383a : sbb eax, 0x420d3844 ; ret 0xffc6
0x00000200001cac53 : sbb eax, 0x4394a00 ; ret 0x1675
0x000002000052ca6e : sbb eax, 0x4d8d4800 ; loopne 0x2000052ca09 ; clc ; call r15
0x000002000011d034 : sbb eax, 0x4dc5e800 ; hlt ; dec dword ptr [rax - 0x75] ; ret
0x0000020000156302 : sbb eax, 0x79 ; sub r11, rax ; jmp r11
0x00000200004f5924 : sbb eax, 0x8148ffc0 ; ret
0x000002000046b06f : sbb eax, 0x840000a2 ; sal byte ptr [rbp + 0x2f], 0xff ; ret
0x00000200007b371f : sbb eax, 0x8442408a ; ret
0x00000200001d6937 : sbb eax, 0x85c8ff00 ; ret 0x1c74
0x0000020000131a5c : sbb eax, 0x8a44001f ; ret
0x0000020000476364 : sbb eax, 0x8b000000 ; push rax ; and dh, dh ; ret 0x7504
0x0000020000004167 : sbb eax, 0x8b000000 ; ret
0x0000020000526325 : sbb eax, 0x8b000910 ; ret 0x6b48
0x0000020000489d9b : sbb eax, 0x8b410014 ; ret
0x000002000041ad0d : sbb eax, 0x8b440018 ; ret 0x894c
0x0000020000489d7f : sbb eax, 0x8b450014 ; ret
0x000002000050abe4 : sbb eax, 0x8b48000e ; ret
0x00000200004110da : sbb eax, 0x8b480018 ; ret
0x0000020000178ca9 : sbb eax, 0x8b48fff1 ; ret
0x00000200005538a9 : sbb eax, 0x8b4c000a ; ret
0x00000200004f1d40 : sbb eax, 0x8b4c000f ; ret
0x00000200004df042 : sbb eax, 0x8b4dcc00 ; ret
0x00000200004b7368 : sbb eax, 0x8bcc8b49 ; ret 0xc148
0x000002000077aab0 : sbb eax, 0x8bfee283 ; ret 0x348
0x000002000079704f : sbb eax, 0x8bff9b10 ; ret
0x00000200007974df : sbb eax, 0x8bffab5b ; ret
0x00000200005e1e7f : sbb eax, 0x8bffb05f ; ret
0x000002000044e59f : sbb eax, 0x8bffc138 ; ret
0x00000200006360df : sbb eax, 0x8bffc16f ; ret
0x00000200001d21d7 : sbb eax, 0x940f0000 ; ret
0x0000020000178c53 : sbb eax, 0xb60f000b ; ret
0x0000020000056f0b : sbb eax, 0xb80012b9 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000012cd76 : sbb eax, 0xb8057400 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200006e64f2 : sbb eax, 0xc033ffe6 ; add rsp, 0x28 ; ret
0x00000200000e4144 : sbb eax, 0xe8ce8b49 ; ret
0x0000020000701b0b : sbb eax, 0xea7d05f6 ; ret
0x00000200005a2487 : sbb eax, 0xf6000f0a ; ret
0x0000020000585792 : sbb eax, 0xf6ffe679 ; ret
0x0000020000004a37 : sbb eax, 0xff000000 ; ret
0x00000200007bae9b : sbb eax, 0xffb3f2e0 ; add rsp, 0x28 ; ret
0x00000200007b41ed : sbb eax, 0xffb4626e ; call 0x20000080447
0x00000200007b7041 : sbb eax, 0xffb48a03 ; call 0x200005632a7
0x00000200007ba8e4 : sbb eax, 0xfff8da0f ; jmp 0x200007ba8a2
0x000002000066af5f : sbb eax, 0xffffae63 ; ret
0x00000200003ede13 : sbb eax, dword ptr [rax] ; add bl, ch ; ret 0x3b9
0x00000200000f7a51 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000548b2d : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xc000000d ; ret
0x000002000013a5fd : sbb eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000139660 : sbb eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000013fa75 : sbb eax, dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000013fa80 : sbb eax, dword ptr [rax] ; and dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000157a8f : sbb eax, dword ptr [rax] ; mov qword ptr [rcx + 0x5b58], rax ; ret
0x000002000013c01b : sbb eax, dword ptr [rax] ; movzx eax, word ptr [rax + rcx*2] ; and eax, 1 ; ret
0x000002000013bfbb : sbb eax, dword ptr [rax] ; movzx eax, word ptr [rax + rcx*2] ; and eax, 2 ; ret
0x000002000013bf9b : sbb eax, dword ptr [rax] ; movzx eax, word ptr [rax + rcx*2] ; and eax, 4 ; ret
0x000002000013bffb : sbb eax, dword ptr [rax] ; movzx eax, word ptr [rax + rcx*2] ; and eax, 8 ; ret
0x000002000013c670 : sbb eax, dword ptr [rax] ; ret
0x000002000013f6a2 : sbb eax, dword ptr [rax] ; sete al ; ret
0x0000020000176c5f : sbb eax, dword ptr [rax] ; test rax, rax ; je 0x20000176c6f ; call rax
0x000002000013abf1 : sbb eax, dword ptr [rax] ; xor eax, eax ; ret
0x0000020000687e15 : sbb eax, dword ptr [rbp - 0x75] ; ret
0x00000200005a853b : sbb eax, dword ptr [rbp - 0xe88a13] ; ret
0x000002000003f4f6 : sbb eax, dword ptr [rbx + rcx*4 + 4] ; sbb byte ptr [rcx - 0x75], cl ; ret
0x000002000023fb7b : sbb eax, dword ptr [rbx - 0x7cb7073f] ; ret
0x000002000012e43d : sbb eax, dword ptr [rcx + 0x1ffff8e1] ; add byte ptr [rax - 0x75], cl ; ret 0xc748
0x0000020000789565 : sbb eax, dword ptr [rcx + 3] ; int 0x48
0x000002000007f557 : sbb eax, dword ptr [rcx + 3] ; ret 0xc141
0x0000020000216938 : sbb eax, dword ptr [rcx - 1] ; ret 0x8348
0x000002000071d635 : sbb eax, dword ptr [rdi + rcx - 0x4a] ; ret 0x7aba
0x00000200003ff2eb : sbb eax, eax ; add eax, 2 ; ret
0x00000200001715fc : sbb eax, eax ; add eax, 3 ; ret
0x000002000040c406 : sbb eax, eax ; add rsp, 0x28 ; ret
0x00000200001d64c9 : sbb eax, eax ; and eax, 0x128 ; ret
0x000002000069e433 : sbb eax, eax ; and eax, 0x46 ; ret
0x00000200004279dc : sbb eax, eax ; and eax, 0x80000005 ; ret
0x000002000005b314 : sbb eax, eax ; and eax, 0xc0000001 ; ret
0x00000200005332b1 : sbb eax, eax ; and eax, 0xc0000004 ; ret
0x000002000050a393 : sbb eax, eax ; and eax, 0xc000000d ; ret
0x000002000001fa16 : sbb eax, eax ; and eax, 0xc0000022 ; ret
0x000002000062af5f : sbb eax, eax ; and eax, 0xc000004b ; ret
0x00000200004c7eca : sbb eax, eax ; and eax, 0xc00000a5 ; ret
0x000002000043e25e : sbb eax, eax ; and eax, 0xc00000bb ; ret
0x00000200006c7467 : sbb eax, eax ; and eax, 0xfffffffa ; add eax, 7 ; ret
0x00000200005fabaf : sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x000002000004e0a6 : sbb eax, eax ; and eax, 2 ; add rsp, 0x28 ; ret
0x0000020000120034 : sbb eax, eax ; and eax, 2 ; dec eax ; ret
0x00000200000b894e : sbb eax, eax ; and eax, 2 ; ret
0x0000020000099d7d : sbb eax, eax ; and rax, rcx ; ret
0x00000200001b303c : sbb eax, eax ; neg eax ; inc eax ; ret
0x00000200000fc97b : sbb eax, eax ; not eax ; and eax, 0xc000000d ; ret
0x0000020000452f3c : sbb eax, eax ; not eax ; and eax, 0xc0000034 ; ret
0x0000020000032b63 : sbb eax, eax ; ret
0x000002000013c1f3 : sbb eax, eax ; sbb eax, -1 ; ret
0x000002000013b11f : sbb eax, eax ; sbb rax, -1 ; ret
0x000002000070f3cb : sbb eax, ebx ; bts dword ptr [r8 + 0x20], 0x1d ; ret
0x00000200006197f1 : sbb eax, edi ; ret
0x000002000070d711 : sbb eax, esi ; add al, 0 ; add rsp, 0x68 ; ret
0x00000200001d60d8 : sbb eax, esi ; cmp byte ptr [r10], al ; call r8
0x000002000003dedf : sbb ebp, dword ptr [rax + rax] ; add byte ptr [rax - 0x75], cl ; ret 0x850f
0x0000020000044dbb : sbb ebp, dword ptr [rax + rax] ; ret
0x00000200007ce494 : sbb ebp, dword ptr [rbx] ; ret 0x341
0x00000200007affc9 : sbb ebp, dword ptr [rdx - 0x74b7ffff] ; ret
0x00000200003c73f7 : sbb ebp, eax ; jrcxz 0x200003c73c0 ; ret
0x00000200003c73f7 : sbb ebp, eax ; jrcxz 0x200003c73c1 ; ret
0x00000200005b20c3 : sbb ebp, eax ; lahf ; std ; ret
0x00000200007bbd29 : sbb ebp, ecx ; ret
0x000002000000b96d : sbb ebx, dword ptr [rbp + 0x15] ; add byte ptr [rcx - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret 0x6f75
0x00000200001a9c49 : sbb ebx, eax ; btr dword ptr [rcx + 8], 0x19 ; ret
0x000002000070f3c4 : sbb ebx, eax ; bts dword ptr [r8 + 0x20], 0x1b ; ret
0x00000200004789ce : sbb ebx, ebp ; mov rax, rdx ; jmp 0x2000047898f
0x00000200005de154 : sbb ebx, ebx ; out dx, eax ; dec dword ptr [rax - 0x75] ; iretd ; call 0x2000065a39d
0x000002000067695a : sbb ebx, ecx ; inc dword ptr [rdx] ; sete al ; ret
0x00000200005ca0d6 : sbb ebx, edx ; dec dword ptr [rax - 0x7d] ; ret 0x4804
0x000002000042a5f1 : sbb ebx, edx ; ret 0x85ff
0x00000200000d3634 : sbb ecx, dword ptr [rax + 0x23] ; ret 0x8d49
0x00000200007090dc : sbb ecx, dword ptr [rax + 0x3b] ; ret
0x00000200003cd5cb : sbb ecx, dword ptr [rax + 0x3b] ; ret 0x1f75
0x00000200001cdd2e : sbb ecx, dword ptr [rax + 0x3b] ; ret 0xef75
0x0000020000017c16 : sbb ecx, dword ptr [rax + 0xb] ; ret 0xf48
0x0000020000456926 : sbb ecx, dword ptr [rax - 0x73] ; add al, 0x49 ; shl rax, 3 ; ret
0x00000200000269d0 : sbb ecx, dword ptr [rax - 0x73] ; add dword ptr [r9 + 3], ecx ; ret
0x0000020000018ace : sbb ecx, dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0xf175
0x00000200004708b1 : sbb ecx, dword ptr [rax - 0x75] ; add byte ptr [rcx + 0x3b], cl ; ret 0xe275
0x0000020000093cda : sbb ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x000002000002da2b : sbb ecx, dword ptr [rax - 0x75] ; ret
0x00000200001a1380 : sbb ecx, dword ptr [rax - 0x75] ; ret 0x2b48
0x0000020000093d3a : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000f6c5e : sbb ecx, dword ptr [rax - 1] ; ret
0x0000020000411811 : sbb ecx, dword ptr [rbp + 0x3b] ; ret 0x1675
0x000002000061b375 : sbb ecx, dword ptr [rcx + 0x3b] ; ret 0x574
0x000002000022018e : sbb ecx, dword ptr [rcx - 0x75] ; or byte ptr [rax + 0x3b], r9b ; ret 0xeb72
0x00000200000bd98d : sbb ecx, dword ptr [rcx - 0x7cb7c7bd] ; ret
0x00000200004c380a : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x000002000013ca9a : sbb ecx, dword ptr [rdx + 0x148a4201] ; or dword ptr [rdx], edi ; ret 0x5675
0x00000200000330e7 : sbb ecx, ecx ; and eax, ecx ; ret
0x000002000003dea4 : sbb ecx, ecx ; and r10d, ecx ; mov eax, r10d ; ret
0x00000200001fc796 : sbb ecx, ecx ; and rcx, rax ; mov rax, rcx ; ret
0x000002000003e3fb : sbb ecx, ecx ; neg ecx ; inc ecx ; mov eax, ecx ; ret
0x0000020000195f03 : sbb ecx, esi ; dec dword ptr [rax - 0x7f] ; ret 0
0x00000200000450ac : sbb edi, dword ptr [rax + 8] ; ret
0x0000020000569147 : sbb edi, dword ptr [rbp - 0x3b7cb701] ; pop rbx ; ret
0x0000020000569146 : sbb edi, dword ptr es:[rbp - 0x3b7cb701] ; pop rbx ; ret
0x00000200007c373d : sbb edi, ebp ; dec dword ptr [rax - 0x75] ; ret
0x00000200000244fa : sbb edi, edi ; ret
0x0000020000177f6f : sbb edi, edx ; dec dword ptr [rax + 0x3b] ; ret 0xf49
0x00000200001c7e0e : sbb edi, esi ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001b2fd1 : sbb edx, dword ptr [rdx - 6] ; dec dword ptr [rax - 0x73] ; adc bpl, al ; ret 0xf880
0x00000200004b2368 : sbb edx, dword ptr [rdx] ; add al, ch ; add byte ptr [rax], 0 ; add dh, dh ; ret
0x00000200004b22f5 : sbb edx, dword ptr [rdx] ; add bl, al ; xor eax, eax ; ret
0x00000200006eab97 : sbb edx, dword ptr [rsi + 0xb0a716a] ; mov ch, 0x49 ; ret
0x0000020000201a00 : sbb edx, edx ; and edx, 3 ; add edx, 0x13 ; call r9
0x000002000019b8ad : sbb edx, esi ; dec dword ptr [rax - 0x75] ; ret
0x00000200004a9b75 : sbb esi, dword ptr [rbp + 6] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000545caa : sbb esi, dword ptr [rbp - 0x3fcdfff6] ; ret
0x00000200004e3a9f : sbb esi, dword ptr [rbx] ; ret
0x0000020000093ca1 : sbb esi, dword ptr [rbx] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000070f7a2 : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000070f7bd
0x000002000070f86f : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000070f88a
0x000002000070f923 : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000070f93e
0x000002000070f9c6 : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x2000070f9e1
0x000002000043bbef : sbb esi, dword ptr [rdx + 0x12] ; bt ecx, 0x19 ; jb 0x2000043bc13 ; ret
0x00000200005128dc : sbb esi, dword ptr [rdx + 0x15] ; bt ecx, 0x19 ; jb 0x20000512902 ; ret
0x00000200004345e7 : sbb esi, dword ptr [rdx + 0x17] ; bt ecx, 0x19 ; jb 0x20000434610 ; ret
0x00000200005b09e3 : sbb esi, eax ; leave ; push rsi ; ret
0x000002000015c533 : sbb esi, ebx ; dec dword ptr [rax - 0x77] ; jmp 0x2000015c504
0x000002000011b551 : sbb esi, edi ; add dword ptr [rax], eax ; add rsp, 0x60 ; pop rbx ; ret
0x000002000042da93 : sbb esi, edi ; ret
0x00000200001a0c74 : sbb esi, edx ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000006a86 : sbb esi, esi ; ret
0x0000020000218d0d : sbb esi, esi ; ret 0x7502
0x00000200001903e1 : sbb esi, esi ; ret 0x7503
0x00000200001a7c93 : sbb esi, esi ; rol dword ptr [rdx], 0x74 ; or cl, byte ptr [rax - 0x7d] ; jmp qword ptr [rcx]
0x00000200000a1647 : sbb esp, dword ptr [r11 + rdi*8] ; mov byte ptr [rcx + 0x1b], al ; ret
0x00000200000a1648 : sbb esp, dword ptr [rbx + rdi*8] ; mov byte ptr [rcx + 0x1b], al ; ret
0x00000200000f8447 : sbb esp, dword ptr [rsi + 0x3b] ; ret
0x0000020000223a2a : sbb esp, esp ; inc dword ptr [rdi + rcx - 0x44] ; ret
0x000002000018d312 : sbb qword ptr [r8], r8 ; ret
0x00000200000bd645 : sbb r11b, al ; xor eax, eax ; ret
0x000002000044f172 : sbb r11b, sil ; movq qword ptr [r8], mm0 ; mov eax, edx ; ret
0x000002000023312f : sbb r12b, al ; jrcxz 0x20000233167 ; ret 0xc531
0x00000200000e86e3 : sbb r14b, r14b ; ret
0x0000020000135d1c : sbb r15b, dil ; enter -0x77d, 0x3e ; ja 0x20000135d38 ; ret
0x000002000079fe24 : sbb r15b, dil ; ret
0x00000200003fb9b5 : sbb r15b, r15b ; ret
0x0000020000117cf9 : sbb r15b, r15b ; ret 0xd03b
0x000002000004ae80 : sbb r15b, sil ; ret 0x200
0x00000200001bf217 : sbb r8b, bpl ; ret 0xf937
0x000002000068369b : sbb r8b, bpl ; scasb al, byte ptr [rdi] ; ret 0xffe4
0x0000020000501b92 : sbb r8b, byte ptr [r9] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004a58cf : sbb r8b, r13b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x000002000059fe3f : sbb r8b, r13b ; ret 0xadd0
0x00000200005a1ec5 : sbb r9b, r13b ; ret
0x000002000013b121 : sbb rax, -1 ; ret
0x0000020000099d7c : sbb rax, rax ; and rax, rcx ; ret
0x000002000013b11e : sbb rax, rax ; sbb rax, -1 ; ret
0x00000200001fc795 : sbb rcx, rcx ; and rcx, rax ; mov rax, rcx ; ret
0x00000200004b5263 : sbb sil, sil ; ret
0x0000020000157145 : scasb al, byte ptr [rdi] ; adc al, 0x25 ; add byte ptr [rcx], 0 ; add al, ch ; ret
0x00000200007cbe4e : scasb al, byte ptr [rdi] ; adc dword ptr [rax + 0x3ae990ff], ebp ; ret 0xfffe
0x00000200001be9e0 : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rax] ; call rax
0x00000200005cc0eb : scasb al, byte ptr [rdi] ; add al, 0xec ; push rsi ; ret 0xf10
0x000002000007a4a3 : scasb al, byte ptr [rdi] ; add byte ptr [rax + rax], al ; add al, ch ; ret
0x00000200004121b2 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbp - 0x74bbfbb0], cl ; ret 0x8b48
0x0000020000412149 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbp - 0x9e18b37], al ; ret 0xf03
0x0000020000149465 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add cl, ch ; ror bl, cl ; add byte ptr [rax], al ; ret
0x000002000014b14b : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000200007c8658 : scasb al, byte ptr [rdi] ; and esi, edi ; dec dword ptr [rax - 0x7d] ; ret
0x000002000014e9ec : scasb al, byte ptr [rdi] ; clc ; ret
0x00000200005fe58c : scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x75] ; and al, 0x48 ; call 0x2000049a819
0x00000200005db858 : scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000671271 : scasb al, byte ptr [rdi] ; dec dword ptr [rcx - 0x74b7ef85] ; ret
0x0000020000459fb8 : scasb al, byte ptr [rdi] ; enter 0x4cff, -0x75 ; ret
0x000002000065874e : scasb al, byte ptr [rdi] ; fcmove st(0), st(2) ; dec dword ptr [rax + 0x3b] ; ret 0x2274
0x00000200001b9002 : scasb al, byte ptr [rdi] ; fld dword ptr [rcx] ; add bh, bh ; ret
0x00000200000a8c43 : scasb al, byte ptr [rdi] ; fmul qword ptr [rsi] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005cf7e5 : scasb al, byte ptr [rdi] ; in al, dx ; inc dword ptr [rbp - 0x75] ; ret 0x1ba
0x0000020000193ea3 : scasb al, byte ptr [rdi] ; lock dec dword ptr [rbp - 0x7b] ; ret 0x850f
0x0000020000516262 : scasb al, byte ptr [rdi] ; mov dword ptr [rsi - 0x7424cc01], edi ; ret
0x0000020000167398 : scasb al, byte ptr [rdi] ; mov eax, 0x8b4cffeb ; ret
0x00000200006348de : scasb al, byte ptr [rdi] ; pop rbp ; ret 0x83ff
0x000002000013fb75 : scasb al, byte ptr [rdi] ; push rsp ; and al, 8 ; ret
0x000002000002d3c5 : scasb al, byte ptr [rdi] ; ret
0x000002000068369e : scasb al, byte ptr [rdi] ; ret 0xffe4
0x000002000010601c : scasb al, byte ptr [rdi] ; ret 6
0x0000020000044dba : scasb al, byte ptr [rdi] ; sbb ebp, dword ptr [rax + rax] ; ret
0x000002000051d8be : scasb al, byte ptr [rdi] ; stosb byte ptr [rdi], al ; ret 0x8bff
0x00000200004bfe35 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x32], al ; push rsi ; ret 0xf02
0x0000020000116646 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200004f0807 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x0000020000149485 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add cl, ch ; mov dl, 0xcb ; add byte ptr [rax], al ; ret
0x000002000014b04b : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b485 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xab ; add byte ptr [rax], al ; ret
0x000002000042fe65 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200004c9941 : scasd eax, dword ptr [rdi] ; add dword ptr [rcx], edx ; add dh, dh ; ret
0x00000200000c66f5 : scasd eax, dword ptr [rdi] ; and eax, dword ptr [rax] ; call r8
0x00000200007bab19 : scasd eax, dword ptr [rdi] ; and eax, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005c0aae : scasd eax, dword ptr [rdi] ; and edx, ebp ; push rsi ; ret
0x00000200005892df : scasd eax, dword ptr [rdi] ; call qword ptr [rax - 0x18f63d17]
0x00000200005ea33f : scasd eax, dword ptr [rdi] ; call qword ptr [rax - 0xe3d4717]
0x00000200005b042d : scasd eax, dword ptr [rdi] ; call rsp
0x000002000013c364 : scasd eax, dword ptr [rdi] ; cmc ; add rsi, r12 ; mov rdx, rsi ; call r14
0x00000200000638fd : scasd eax, dword ptr [rdi] ; enter -0x74b8, 5 ; ret 0x2bf2
0x00000200000b3de1 : scasd eax, dword ptr [rdi] ; enter -0x76b8, 0x1c ; add esi, esi ; ret
0x00000200005c834d : scasd eax, dword ptr [rdi] ; ffree st(4) ; push qword ptr [rdx] ; ret
0x0000020000726dfc : scasd eax, dword ptr [rdi] ; fld qword ptr [rcx - 0x75] ; ret
0x00000200006d1950 : scasd eax, dword ptr [rdi] ; fsub dword ptr [rsi + 0x2b] ; pop rbp ; shl byte ptr [rsi - 0x7d], 1 ; ret
0x00000200006444e4 : scasd eax, dword ptr [rdi] ; inc dword ptr [rbp - 0xbc8b40] ; ret
0x00000200007b6f49 : scasd eax, dword ptr [rdi] ; mov ah, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000703dd3 : scasd eax, dword ptr [rdi] ; mov cl, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x000002000023662d : scasd eax, dword ptr [rdi] ; not byte ptr [rcx] ; add byte ptr [rcx - 0x75], al ; jmp qword ptr [rax]
0x000002000003f4ab : scasd eax, dword ptr [rdi] ; ret
0x000002000010ed9f : scasd eax, dword ptr [rdi] ; ret 0x12b
0x00000200000ce6aa : scasd eax, dword ptr [rdi] ; ret 0x341
0x00000200005f917b : scasd eax, dword ptr [rdi] ; ret 0x344
0x000002000015bdbe : scasd eax, dword ptr [rdi] ; ret 0x348
0x000002000068dc6e : scasd eax, dword ptr [rdi] ; ret 0x3b41
0x0000020000618f3c : scasd eax, dword ptr [rdi] ; ret 0x3d48
0x000002000015ae0d : scasd eax, dword ptr [rdi] ; ret 0x40b9
0x0000020000442080 : scasd eax, dword ptr [rdi] ; ret 0x48ff
0x0000020000519706 : scasd eax, dword ptr [rdi] ; ret 0x694c
0x0000020000207b76 : scasd eax, dword ptr [rdi] ; ret 0x694d
0x00000200000e3600 : scasd eax, dword ptr [rdi] ; ret 0x8348
0x00000200001a9ece : scasd eax, dword ptr [rdi] ; ret 0x8948
0x000002000050a8fd : scasd eax, dword ptr [rdi] ; ret 0x8b41
0x000002000079e1a1 : scasd eax, dword ptr [rdi] ; ret 0x8b45
0x000002000004ea55 : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000020000030ce9 : scasd eax, dword ptr [rdi] ; ret 0x8b49
0x00000200000a6d45 : scasd eax, dword ptr [rdi] ; ret 0x8b4b
0x000002000003f545 : scasd eax, dword ptr [rdi] ; ret 0x8b4c
0x00000200000cdff6 : scasd eax, dword ptr [rdi] ; ret 0x8c89
0x0000020000236dd0 : scasd eax, dword ptr [rdi] ; ret 0x9948
0x00000200003cbc3b : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000002000016afdf : scasd eax, dword ptr [rdi] ; ret 0xc083
0x000002000003f4f1 : scasd eax, dword ptr [rdi] ; ret 0xc148
0x0000020000079476 : scasd eax, dword ptr [rdi] ; ret 0xc149
0x0000020000117001 : scasd eax, dword ptr [rdi] ; ret 0xc68b
0x00000200007295d2 : scasd eax, dword ptr [rdi] ; ret 0xc82b
0x000002000049dc8f : scasd eax, dword ptr [rdi] ; ret 0xc88b
0x00000200003e4934 : scasd eax, dword ptr [rdi] ; ret 0xccc3
0x000002000015bbab : scasd eax, dword ptr [rdi] ; ret 0xd348
0x000002000017991b : scasd eax, dword ptr [rdi] ; ret 0xf41
0x00000200000d35eb : scasd eax, dword ptr [rdi] ; ret 0xf49
0x00000200002077a1 : scasd eax, dword ptr [rdi] ; ret 0xff48
0x00000200003e499c : scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 0x2b], -0x40 ; ret
0x00000200003e44e5 : scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 0x33], -0x3e ; ret
0x00000200003e4a25 : scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 3], -0x3f ; ret
0x0000020000207b6f : scasd eax, dword ptr [rdi] ; ror byte ptr [rax - 0x75], 1 ; ror dword ptr [rax + 0xf], -0x51 ; ret 0x694d
0x0000020000117ae5 : scasd eax, dword ptr [rdi] ; ror byte ptr [rcx + 3], 1 ; ror byte ptr [rax - 0x75], 1 ; ret 0x9948
0x0000020000429143 : scasd eax, dword ptr [rdi] ; ror byte ptr [rcx - 0x14b3dbac], 1 ; or bh, bh ; ret 0x5489
0x00000200000c66ab : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x18 ; cmp bl, al ; xor eax, eax ; ret
0x0000020000203fe2 : scasd eax, dword ptr [rdi] ; ror dword ptr [rcx - 9], -0x10 ; ret
0x00000200003eb310 : scasd eax, dword ptr [rdi] ; sal dh, 1 ; ret 0x7401
0x000002000024c673 : scasd eax, dword ptr [rdi] ; sal edi, 1 ; ror dword ptr [rax + 3], 1 ; ret
0x00000200002476bd : scasd eax, dword ptr [rdi] ; sal edi, cl ; ror dword ptr [rcx - 0x7d], 1 ; ret
0x0000020000247b6d : scasd eax, dword ptr [rdi] ; sal edi, cl ; ror dword ptr [rcx - 0x7d], 1 ; ret 0x4508
0x00000200004ccef7 : scasd eax, dword ptr [rdi] ; sar edi, -0x75 ; ret
0x000002000042d8cd : scasd eax, dword ptr [rdi] ; stc ; ret
0x00000200001201bd : scasd eax, dword ptr [rdi] ; stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006a20ee : scasd eax, dword ptr [rdi] ; xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000003ad4e : seta al ; ret
0x000002000003088d : seta byte ptr [rbx] ; add byte ptr [rax - 0x75], cl ; iretd ; call rbx
0x00000200006e4da9 : seta cl ; mov eax, ecx ; ret
0x00000200000edc98 : seta cl ; mov eax, r9d ; ret
0x00000200000f89bb : seta dl ; mov al, dl ; ret
0x00000200000edc97 : seta r9b ; mov eax, r9d ; ret
0x000002000068808a : setae al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000007f63e : setae al ; ret
0x00000200000847fb : setae al ; test cl, al ; sete al ; ret
0x00000200001e1a3d : setb al ; add rsp, 0x28 ; ret
0x000002000023a0c3 : setb al ; mov eax, r8d ; ret
0x000002000041429d : setb al ; movzx eax, al ; ret
0x000002000002defd : setb al ; ret
0x0000020000055e96 : setb cl ; test cl, cl ; sete al ; ret
0x000002000023a0c2 : setb r8b ; mov eax, r8d ; ret
0x0000020000139641 : setbe al ; ret
0x00000200001ceb14 : setbe cl ; mov eax, ecx ; ret
0x000002000015bcaf : sete al ; add rsp, 0x20 ; pop rbp ; ret
0x000002000040fe38 : sete al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013f290 : sete al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000239b63 : sete al ; add rsp, 0x28 ; ret
0x00000200001b3e6d : sete al ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000150ab8 : sete al ; add rsp, 0x30 ; pop rbp ; ret
0x000002000003aac1 : sete al ; add rsp, 0x38 ; ret
0x00000200001fb941 : sete al ; add rsp, 0x40 ; pop rbp ; ret
0x00000200005ee0dd : sete al ; mov eax, r8d ; ret
0x0000020000009b85 : sete al ; ret
0x0000020000057cd1 : sete al ; shr rax, cl ; and rax, r8 ; ret
0x000002000003c362 : sete cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x0000020000616e75 : sete cl ; mov eax, ecx ; ret
0x0000020000558faa : sete cl ; mov eax, r9d ; ret
0x0000020000229c5c : sete cl ; movzx eax, cl ; ret
0x00000200001d023d : sete dl ; jmp 0x200001d0223
0x0000020000523a01 : sete dl ; mov eax, edx ; add rsp, 0x28 ; ret
0x00000200001d28f4 : sete dl ; mov eax, edx ; ret
0x00000200007c2436 : sete r8b ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005ee0dc : sete r8b ; mov eax, r8d ; ret
0x0000020000558fa9 : sete r9b ; mov eax, r9d ; ret
0x00000200004f130f : setg al ; ret
0x0000020000067d8a : setge al ; ret
0x0000020000718991 : setge bh ; add rsp, 0x28 ; ret
0x0000020000705a51 : setl al ; ret
0x00000200003fa667 : setle al ; inc eax ; add rsp, 0x28 ; ret
0x000002000044885d : setle al ; inc eax ; ret
0x000002000020e6a7 : setle al ; ret
0x000002000057b4ae : setne al ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000fd1e7 : setne al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000044246e : setne al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c4e9a : setne al ; add rsp, 0x28 ; ret
0x000002000015d91e : setne al ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000eb56c : setne al ; add rsp, 0x38 ; ret
0x000002000057b29a : setne al ; add rsp, 0x40 ; pop rbp ; ret
0x000002000057bc82 : setne al ; add rsp, 0x50 ; pop rbp ; ret
0x000002000057f0db : setne al ; add rsp, 0x60 ; pop rbp ; ret
0x000002000057ca89 : setne al ; add rsp, 0x70 ; pop rbp ; ret
0x00000200006bbefe : setne al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200004c82c6 : setne al ; mov rsp, r11 ; pop rdi ; ret
0x000002000057ca1c : setne al ; pop rbp ; ret
0x000002000000bf88 : setne al ; ret
0x00000200000c5da1 : setne al ; test cl, al ; setne al ; ret
0x0000020000138db6 : setne byte ptr [rip + 0x1ea414] ; xor eax, eax ; ret
0x00000200001020e3 : setne byte ptr [rip + 0x21f3b6] ; xor eax, eax ; ret
0x0000020000005c89 : setne cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x00000200000459e5 : setne cl ; mov eax, ecx ; add rsp, 0x38 ; ret
0x000002000057c8f2 : setne cl ; mov eax, ecx ; pop rbp ; ret
0x00000200006bbfc3 : setne dl ; cmp edx, eax ; jne 0x200006bbfdb ; xor eax, eax ; ret
0x00000200007b4899 : setns al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002029f : setns al ; add rsp, 0x28 ; ret
0x000002000053a9f1 : setns al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000438eb4 : setns al ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003e3bb7 : setns al ; dec eax ; ret
0x00000200007978e9 : setns cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x00000200005a94f4 : seto cl ; dec dword ptr [rax + 0x2b] ; ret 0xc148
0x000002000018e0ad : sets bh ; dec dword ptr [rbp - 0x75] ; ret 0xd1e9
0x000002000014e9eb : sfence ; ret
0x000002000024c380 : sgdt ptr [rax] ; add byte ptr [rax + 3], cl ; ret
0x00000200005414be : sgdt ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000014a085 : sgdt ptr [rax] ; add cl, ch ; mov dl, 0xbf ; add byte ptr [rax], al ; ret
0x000002000024c470 : sgdt ptr [rcx] ; sidt ptr [rdx] ; ret
0x0000020000147f6a : shl al, cl ; add byte ptr [rax], al ; ret
0x00000200005572d6 : shl al, cl ; fdiv st(7), st(0) ; add rsp, 0x20 ; pop rbx ; ret
0x000002000046bf5a : shl bh, cl ; ret 0x48ff
0x00000200001f2f8c : shl bl, 1 ; in eax, dx ; dec dword ptr [rax - 0x7f] ; ret
0x00000200005e7790 : shl byte ptr [r14 - 0x77], 0x45 ; ret 0x8d48
0x0000020000408d3b : shl byte ptr [rax], 0x48 ; add esp, 0x28 ; ret
0x0000020000050fa2 : shl byte ptr [rax], 0x4d ; cmp eax, ecx ; jbe 0x20000050f9c ; xor eax, eax ; ret
0x000002000050a7bc : shl byte ptr [rax], 0xe ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200004c0aa1 : shl byte ptr [rax], 0xf ; xchg eax, esp ; ret 0x8b44
0x0000020000535787 : shl byte ptr [rbx + rax], 0x3a ; ret 0x2975
0x00000200000e1f41 : shl byte ptr [rbx], 1 ; ret
0x00000200000ffae0 : shl byte ptr [rbx], 1 ; ret 0xb44
0x00000200003e22a1 : shl byte ptr [rbx], 1 ; ret 0xd2f7
0x000002000068d425 : shl byte ptr [rcx + 0x66], 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000043c1f5 : shl byte ptr [rcx + rax], 1 ; ret
0x0000020000132e2c : shl byte ptr [rcx - 0x7cb7ffef], 1 ; ret
0x00000200001ad908 : shl byte ptr [rcx], 0x41 ; cmp ecx, dword ptr [rax] ; jb 0x200001ad8f4 ; ret
0x00000200004c5c9c : shl byte ptr [rcx], 1 ; ret 0xe9ff
0x00000200006f7329 : shl byte ptr [rcx], cl ; ret 0x1ff
0x00000200001d2175 : shl byte ptr [rdx + 0x2d4], 0x80 ; idiv edi ; jmp qword ptr [rcx]
0x00000200000d5291 : shl byte ptr [rdx], 1 ; ret 0x8388
0x0000020000008a4e : shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000044a572 : shl byte ptr [rip - 0x3fffff9f], 1 ; jmp 0x2000044a544
0x0000020000452f3f : shl byte ptr [rip - 0x3fffffcc], 1 ; ret
0x00000200001bc25d : shl byte ptr [rip - 0x3fffffdd], 0x44 ; mov dword ptr [rcx], eax ; ret
0x000002000001fa17 : shl byte ptr [rip - 0x3fffffde], 0xc3 ; xor eax, eax ; ret
0x00000200000fc97e : shl byte ptr [rip - 0x3ffffff3], 1 ; ret
0x00000200006cf180 : shl byte ptr [rsi + 0x39], cl ; sbb dword ptr [rbp + rcx - 1], esi ; ret 0x8348
0x00000200002316f7 : shl byte ptr [rsi + 0x41], 0x2b ; ret
0x00000200006872b5 : shl byte ptr [rsi + 0x41], 0x2b ; ret 0x366
0x0000020000480645 : shl byte ptr [rsi + 0x41], 0x2b ; ret 0x4166
0x0000020000533ecd : shl byte ptr [rsi + 0x41], 0x2b ; ret 0xc748
0x00000200004b4524 : shl byte ptr [rsi + 0x41], 0x3b ; ret
0x00000200005330af : shl byte ptr [rsi + 0x41], 0x3b ; ret 0xba72
0x00000200006953dd : shl byte ptr [rsi + 0x41], 0x83 ; ret
0x000002000058e5a5 : shl byte ptr [rsi + 0x41], 0x89 ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x00000200000a166b : shl byte ptr [rsi + 0x44], 0x23 ; ret 0x4466
0x00000200000a1667 : shl byte ptr [rsi + 0x44], 0x33 ; shl byte ptr [rsi + 0x44], 0x23 ; ret 0x4466
0x000002000007a232 : shl byte ptr [rsi + 0x44], 0x39 ; adc cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x90e8
0x000002000060e668 : shl byte ptr [rsi + 0x45], 0x3b ; ret 0xca72
0x00000200006ad06e : shl byte ptr [rsi + 0x45], 0x3b ; ret 0xd972
0x00000200006ad081 : shl byte ptr [rsi + 0x45], 0x3b ; ret 0xf44
0x000002000003a512 : shl byte ptr [rsi + 0x45], 0x89 ; or byte ptr [r8 - 0x75], cl ; ret 0x3308
0x00000200007a4e77 : shl byte ptr [rsi + 0x45], 0x89 ; push rdi ; and byte ptr [rcx + 0xb], cl ; ret 0x8949
0x000002000066efe9 : shl byte ptr [rsi + 0xf], 0x6f ; ret 0xf66
0x00000200002325c3 : shl byte ptr [rsi + 0xf], 1 ; jb 0x200002325c2 ; adc esp, dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0x8349
0x000002000023212c : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000200005e7791 : shl byte ptr [rsi - 0x77], 0x45 ; ret 0x8d48
0x0000020000022a92 : shl byte ptr [rsi - 0x77], 0x4c ; ret
0x000002000005fa6e : shl byte ptr [rsi - 0x77], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005f421 : shl byte ptr [rsi - 0x77], 1 ; ret
0x000002000005f0b9 : shl byte ptr [rsi - 0x77], 3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006d1955 : shl byte ptr [rsi - 0x7d], 1 ; ret
0x00000200007d64f3 : shl byte ptr [rsi - 0x7d], 1 ; ret 0x4841
0x00000200004f5f06 : shl ch, cl ; ret 0xc6ff
0x0000020000220000 : shl cl, cl ; dec dword ptr [rax - 0x75] ; ret
0x00000200002080cb : shl dh, 1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200000b3f48 : shl dword ptr [rax + 0x41000001], -0xa ; ret 0xf04
0x00000200006aab91 : shl dword ptr [rax + 0x45], -0x75 ; ret 0xd08b
0x0000020000454dee : shl dword ptr [rax - 0x18], -0x39 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x83ff
0x000002000008d737 : shl dword ptr [rax], -0x18 ; push rdx ; ret 5
0x0000020000450cee : shl dword ptr [rax], -0x18 ; ret
0x00000200006f759c : shl dword ptr [rax], -0x75 ; ret 0x524
0x00000200003e90b3 : shl dword ptr [rax], -1 ; ret 0x513b
0x00000200004148c6 : shl dword ptr [rax], 0x48 ; cmp dword ptr [rcx], ecx ; jne 0x200004148d5 ; ret
0x000002000049c456 : shl dword ptr [rax], 0x48 ; cmp dword ptr [rcx], ecx ; jne 0x2000049c465 ; ret
0x00000200004e4491 : shl dword ptr [rax], 0xf ; test dword ptr [rax], ebp ; ret 0xf
0x0000020000440772 : shl dword ptr [rax], 3 ; add byte ptr [rax], al ; mov qword ptr [r9], rcx ; ret
0x0000020000515bbb : shl dword ptr [rbx], 1 ; ret
0x000002000052de8e : shl dword ptr [rbx], cl ; fdiv st(6) ; ret
0x00000200001c62cd : shl dword ptr [rbx], cl ; ret
0x0000020000011528 : shl dword ptr [rbx], cl ; shr dword ptr [rbx], 1 ; ret 0x3b48
0x00000200000f7dd6 : shl dword ptr [rcx], -0x4d ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret
0x00000200001545eb : shl dword ptr [rcx], 1 ; add byte ptr [rax], al ; nop ; ret
0x0000020000160426 : shl dword ptr [rip + 0xfd00348], 1 ; mov dh, 0x45 ; ret
0x00000200005e2a18 : shl dword ptr [rip - 0x2bedbe], -0x75 ; ret
0x00000200006872b1 : shl dword ptr [rsi + 0x41], 0x2b ; shl byte ptr [rsi + 0x41], 0x2b ; ret 0x366
0x0000020000417bfb : shl dword ptr [rsi + 0x45], 0x23 ; ret 0x5474
0x00000200000bda95 : shl dword ptr [rsi + 0xf], -0x5d ; ret 0x930f
0x00000200002327f2 : shl dword ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret
0x0000020000231ee5 : shl dword ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0x4166
0x0000020000232572 : shl dword ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000002000049a18d : shl dword ptr [rsi - 0x70], -0x75 ; adc dh, dh ; ret 0x7501
0x000002000020e36a : shl dword ptr [rsi - 0x77], 0x42 ; or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000020dfd5 : shl dword ptr [rsi - 0x77], 0x43 ; or byte ptr [rsi - 0x7b], ah ; ret 0x1975
0x00000200000fcec8 : shl eax, 0x14 ; ret
0x00000200002117da : shl eax, 0xa ; add eax, ecx ; ret
0x00000200000fcecd : shl eax, 0xa ; ret
0x00000200001c11e9 : shl eax, 0xc ; mov dword ptr [r8 + 0x28], eax ; ret
0x00000200001c3224 : shl eax, 0xc ; mov qword ptr [r9], rax ; xor eax, eax ; ret
0x00000200000fd110 : shl eax, 0xc ; ret
0x00000200004563a9 : shl eax, 2 ; add byte ptr [rax], al ; call 0x20000077088
0x000002000020bf45 : shl eax, 2 ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000045692c : shl eax, 3 ; ret
0x0000020000083df7 : shl eax, 4 ; add rax, rcx ; ret
0x00000200006101ce : shl eax, 5 ; add rax, qword ptr [rcx + 0x48] ; ret
0x000002000060fb76 : shl eax, 5 ; add rax, qword ptr [rcx + 0x50] ; ret
0x000002000021f563 : shl eax, 5 ; add rax, r8 ; ret
0x00000200001d4655 : shl eax, 6 ; add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200003d37a6 : shl eax, cl ; add rsp, 0x28 ; ret
0x000002000020f907 : shl eax, cl ; dec eax ; lock or dword ptr [r10], eax ; ret
0x00000200000417b1 : shl eax, cl ; mov qword ptr [r8], rax ; ret
0x00000200001154fb : shl eax, cl ; not eax ; lock and dword ptr [r10], eax ; ret
0x000002000045fb09 : shl ebx, 0x20 ; call 0x2000008e15a
0x00000200007b7a6c : shl edx, 0x18 ; or eax, edx ; ret
0x00000200001c21d0 : shl edx, 0x20 ; or rax, rdx ; mov qword ptr [r8], rax ; ret
0x0000020000150e9f : shl edx, 0x20 ; or rax, rdx ; pop rdi ; ret
0x00000200000659ff : shl edx, 0x20 ; or rax, rdx ; ret
0x000002000012fd1c : shl edx, 0x20 ; or rax, rdx ; sub rax, r8 ; ret
0x0000020000622820 : shl edx, 0xc ; or r8d, edx ; jmp 0x20000622845
0x0000020000443013 : shl edx, 2 ; call 0x2000006c736
0x00000200001cd5d6 : shl edx, 3 ; call 0x20000139879
0x0000020000623295 : shl edx, 3 ; call 0x2000024da46
0x000002000020ee11 : shl edx, 6 ; add rdx, rax ; jmp 0x2000020ede3
0x00000200000841b6 : shl edx, 9 ; or eax, edx ; jmp 0x200000841af
0x00000200000fcec7 : shl rax, 0x14 ; ret
0x00000200000fcecc : shl rax, 0xa ; ret
0x00000200001c3223 : shl rax, 0xc ; mov qword ptr [r9], rax ; xor eax, eax ; ret
0x00000200000fd10f : shl rax, 0xc ; ret
0x000002000020bf44 : shl rax, 2 ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000045692b : shl rax, 3 ; ret
0x0000020000083df6 : shl rax, 4 ; add rax, rcx ; ret
0x00000200006101cd : shl rax, 5 ; add rax, qword ptr [rcx + 0x48] ; ret
0x000002000060fb75 : shl rax, 5 ; add rax, qword ptr [rcx + 0x50] ; ret
0x000002000021f562 : shl rax, 5 ; add rax, r8 ; ret
0x00000200003d37a5 : shl rax, cl ; add rsp, 0x28 ; ret
0x00000200000417b0 : shl rax, cl ; mov qword ptr [r8], rax ; ret
0x000002000045fb08 : shl rbx, 0x20 ; call 0x2000008e15b
0x0000020000150e9e : shl rdx, 0x20 ; or rax, rdx ; pop rdi ; ret
0x00000200000659fe : shl rdx, 0x20 ; or rax, rdx ; ret
0x0000020000443012 : shl rdx, 2 ; call 0x2000006c737
0x00000200001cd5d5 : shl rdx, 3 ; call 0x2000013987a
0x0000020000623294 : shl rdx, 3 ; call 0x2000024da47
0x000002000020ee10 : shl rdx, 6 ; add rdx, rax ; jmp 0x2000020ede4
0x000002000059d3aa : shr ah, 0x83 ; ret
0x0000020000404783 : shr al, 0x17 ; rcl esp, 1 ; dec dword ptr [rax + 0x3b] ; ret
0x000002000046fa56 : shr al, 0x18 ; ret
0x00000200004f1de7 : shr al, 0x27 ; js 0x200004f1df4 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006a349a : shr al, 0x30 ; ret
0x00000200005c1950 : shr al, 0x32 ; mov bl, 9 ; add dh, dh ; ret
0x00000200004260ba : shr al, 0x40 ; cdq ; ret
0x0000020000519646 : shr al, 0x44 ; hlt ; ret 0x48ff
0x0000020000530f0e : shr al, 0x44 ; ret
0x00000200006247f6 : shr al, 0x44 ; xchg eax, edx ; ret 0x48ff
0x00000200004582fb : shr al, 0x7f ; ret 0x8bff
0x00000200005b03c3 : shr al, 0x83 ; rol dword ptr [rsi], cl ; add bl, ch ; ret 0x3b9
0x00000200005b0df2 : shr al, 0x88 ; ret 0xffac
0x00000200004494c7 : shr al, 0x93 ; ret 0x48ff
0x00000200005b1601 : shr al, 0xe1 ; cwde ; ret 0x8bff
0x0000020000431567 : shr al, 0xe3 ; outsb dx, byte ptr [rsi] ; ret
0x000002000060c69c : shr al, 0xee ; ret
0x000002000052b7de : shr al, 1 ; and al, 1 ; mov byte ptr [r8], al ; xor eax, eax ; ret
0x00000200007c3ac5 : shr al, 1 ; cdq ; in eax, dx ; ret
0x000002000049b924 : shr al, 1 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x000002000045facd : shr al, 1 ; jno 0x2000045fab3 ; ret
0x00000200000c5e68 : shr al, 1 ; loop 0x200000c5e0a ; cli ; dec dword ptr [rax - 0x75] ; ret
0x00000200005d848a : shr al, 1 ; mov ah, 0x54 ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax + 0x2b] ; ret 0xe281
0x00000200005d8400 : shr al, 1 ; push rbp ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax + 0x2b] ; ret 0xe281
0x000002000015f148 : shr al, 1 ; ret 0x50b6
0x0000020000073f88 : shr al, 1 ; ret 2
0x000002000066af5d : shr al, 1 ; sbb eax, 0xffffae63 ; ret
0x00000200004385ff : shr al, 1 ; sti ; insb byte ptr [rdi], dx ; ret 0x48ff
0x00000200001d45f5 : shr al, 1 ; test eax, 0x8a000507 ; ret
0x00000200004d1ca7 : shr al, 1 ; xchg eax, edi ; mov esp, 0x3b48ffbc ; ret 0x850f
0x00000200000f8ef8 : shr al, 1 ; xchg eax, edx ; ret 0xfff7
0x00000200000c5f17 : shr al, 1 ; xor edx, dword ptr [rsi - 0x74b70006] ; ret
0x0000020000042a56 : shr al, 2 ; and al, 1 ; ret
0x000002000043c1f1 : shr al, 2 ; not al ; and al, 1 ; ret
0x000002000043cac4 : shr al, 3 ; and al, 1 ; ret
0x000002000043456f : shr al, 4 ; and al, 1 ; ret
0x000002000008b150 : shr al, 6 ; and al, 1 ; ret
0x0000020000615ae6 : shr al, cl ; adc al, 0x75 ; ret
0x000002000049bbac : shr al, cl ; adc al, 0xdb ; dec dword ptr [rax - 0x7d] ; ret
0x000002000043163a : shr al, cl ; adc byte ptr [rsi - 0x3d], ch ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005133e5 : shr al, cl ; adc eax, 0x8bffd39c ; ret
0x0000020000428a37 : shr al, cl ; adc edi, edx ; ret
0x000002000060daf8 : shr al, cl ; add dh, ch ; ret
0x0000020000130c8b : shr al, cl ; call rbx
0x00000200006255be : shr al, cl ; cmp al, 0x7a ; ret 0x48ff
0x0000020000536842 : shr al, cl ; cmp byte ptr [rax], dl ; ret 0x48ff
0x00000200005c2dbd : shr al, cl ; cmp eax, 0x8bffc8a2 ; ret
0x000002000022601f : shr al, cl ; fld xword ptr [rdi + 2] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000626615 : shr al, cl ; in eax, 0x69 ; ret 0xe9ff
0x00000200007bb50e : shr al, cl ; insb byte ptr [rdi], dx ; ret
0x0000020000623d8d : shr al, cl ; insd dword ptr [rdi], dx ; xchg eax, edx ; ret 0x48ff
0x0000020000619b88 : shr al, cl ; jb 0x20000619bc4 ; ret
0x0000020000611d86 : shr al, cl ; je 0x20000611d40 ; ret
0x00000200004289cb : shr al, cl ; jg 0x200004289cd ; ret
0x000002000047280b : shr al, cl ; jg 0x200004727cb ; ret 0xf0ff
0x0000020000628c7b : shr al, cl ; jg 0x20000628cc6 ; ret 0x4cff
0x000002000047810d : shr al, cl ; jge 0x20000478174 ; ret 0x4cff
0x0000020000479a0d : shr al, cl ; jge 0x20000479a5b ; ret 0x48ff
0x00000200007b6276 : shr al, cl ; jl 0x200007b62f5 ; cwde ; inc dword ptr [rbx] ; ret
0x0000020000141096 : shr al, cl ; jmp 0x2000014109f
0x00000200004c0eb5 : shr al, cl ; jne 0x200004c0e9d ; ret 0x41ff
0x0000020000615785 : shr al, cl ; jne 0x20000615805 ; ret
0x00000200004741eb : shr al, cl ; lahf ; sahf ; ret 0xf0ff
0x00000200001895b1 : shr al, cl ; leave ; or eax, 0xe990fff4 ; ret 0xeea8
0x00000200007bc29c : shr al, cl ; loop 0x200007bc240 ; ret 0x66ff
0x00000200005215aa : shr al, cl ; loopne 0x2000052161e ; ret 0x48ff
0x0000020000615a4a : shr al, cl ; mov al, 0x75 ; ret
0x00000200007b52c9 : shr al, cl ; mov ch, 0xc ; ret
0x0000020000154a88 : shr al, cl ; mov dl, 0x1d ; add byte ptr [rax], al ; nop ; ret
0x0000020000629e6c : shr al, cl ; mov dr0, word ptr [rcx] ; ret 0x8bff
0x00000200006b6d42 : shr al, cl ; mov eax, 0x8bffb962 ; ret
0x0000020000510f3d : shr al, cl ; mov ebp, 0x8bffd3c0 ; ret
0x000002000046f9fe : shr al, cl ; mov esi, fs ; ret 0x48ff
0x00000200003d0ad2 : shr al, cl ; mov esp, 0x8bffc73a ; ret
0x000002000046e655 : shr al, cl ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp 0x1ffc3d2e641
0x00000200004746fa : shr al, cl ; nop ; cdq ; ret 0xf0ff
0x00000200007bc272 : shr al, cl ; or al, 0x9d ; ret 0x66ff
0x0000020000611c9b : shr al, cl ; out dx, eax ; ret
0x00000200004315e6 : shr al, cl ; outsb dx, byte ptr fs:[rsi] ; ret
0x0000020000626690 : shr al, cl ; push 0x69 ; ret 0x40ff
0x00000200003e5c30 : shr al, cl ; push 9 ; ret 0xebff
0x000002000045f1ee : shr al, cl ; pushfq ; out dx, al ; ret
0x0000020000130cc7 : shr al, cl ; ret
0x0000020000408bc8 : shr al, cl ; ret 0x70d
0x00000200005b5c88 : shr al, cl ; ret 0xab27
0x00000200005a2d88 : shr al, cl ; ret 0xac56
0x00000200005b1438 : shr al, cl ; ret 0xc9bb
0x00000200005dd5f8 : shr al, cl ; ret 0xe555
0x00000200001d1d28 : shr al, cl ; ret 0xe903
0x0000020000479c4c : shr al, cl ; ret 0xf0ff
0x00000200000fecc8 : shr al, cl ; ret 0xf9f3
0x000002000050c208 : shr al, cl ; ret 0xffb5
0x000002000018b5a4 : shr al, cl ; salc ; ret 0xfffc
0x00000200004c480e : shr al, cl ; sbb al, 0xa7 ; ret 0xbbff
0x000002000046f572 : shr al, cl ; sbb bl, ch ; ret 0x48ff
0x00000200007974dd : shr al, cl ; sbb eax, 0x8bffab5b ; ret
0x000002000042a5ef : shr al, cl ; sbb ebx, edx ; ret 0x85ff
0x000002000079b4cc : shr al, cl ; scasb al, byte ptr [rdi] ; ret
0x0000020000132e2a : shr al, cl ; shl byte ptr [rcx - 0x7cb7ffef], 1 ; ret
0x000002000046f2b7 : shr al, cl ; shr ebp, cl ; ret 0xf0ff
0x000002000047338d : shr al, cl ; std ; lodsb al, byte ptr [rsi] ; ret 0x48ff
0x00000200000037ef : shr al, cl ; sti ; call 0x1ffc3f63803
0x000002000042894f : shr al, cl ; sti ; cli ; ret
0x000002000050d407 : shr al, cl ; sti ; sar edi, cl ; jmp 0x2000050d3d8
0x000002000047a862 : shr al, cl ; sub byte ptr [rax], bh ; ret 0x48ff
0x00000200005cd1cd : shr al, cl ; sub eax, 0x8bffc7fe ; ret
0x000002000045e461 : shr al, cl ; sub esp, edi ; ret
0x0000020000490651 : shr al, cl ; test eax, 0x8bffdbc9 ; ret
0x0000020000627b5f : shr al, cl ; wait ; push rsp ; ret 0x48ff
0x00000200004662c7 : shr al, cl ; xchg eax, ebx ; ret
0x00000200005f0c64 : shr al, cl ; xchg eax, esi ; ret
0x000002000045f958 : shr al, cl ; xor ah, bh ; ret
0x0000020000051eca : shr al, cl ; xor byte ptr [rbp - 0x7cb70004], ch ; ret
0x000002000047c55a : shr al, cl ; xor byte ptr [rbx], bl ; ret 0x48ff
0x000002000055b2c5 : shr al, cl ; xor eax, 0x8affcf1d ; ret
0x000002000060f9c7 : shr al, cl ; xor edx, esi ; ret
0x00000200001c20b3 : shr bh, 0xff ; add rsp, 0x38 ; ret
0x0000020000601530 : shr bl, 0 ; add rsp, 0x18 ; ret
0x0000020000722026 : shr bl, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006802ff : shr bl, 0 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000699701 : shr bl, 0 ; add rsp, 0x38 ; ret
0x000002000069a640 : shr bl, 0 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000683526 : shr bl, 0x13 ; mov rcx, rbx ; call qword ptr [rax]
0x00000200005a7093 : shr bl, 0x40 ; mov rcx, rdi ; call 0x200001cb891
0x00000200000dbc15 : shr bl, 0xa8 ; mov rax, rdx ; jmp 0x200000dbbc0
0x00000200003fd311 : shr bl, 0xc ; inc r10d ; jmp 0x200003fd302
0x0000020000039093 : shr bl, 0xc1 ; xor al, al ; ret
0x00000200004b0fdd : shr bl, 0xc7 ; lea rax, qword ptr [rcx + 2] ; ret
0x00000200007ac232 : shr bl, 0xca ; mov eax, 0xc0000225 ; jmp 0x200007ac208
0x0000020000481c2c : shr bl, 0xca ; mov ebx, 0xc0000271 ; jmp 0x20000481c02
0x00000200005d268a : shr bl, 0xca ; mov edi, 0xc00000bb ; jmp 0x200005d2660
0x00000200003cddd1 : shr bl, 0xd2 ; or dword ptr [rip - 0xcad2a], ecx ; ret
0x0000020000026454 : shr bl, 0xe4 ; mov eax, 0xc0000095 ; ret
0x0000020000128eab : shr bl, 0xe9 ; mov qword ptr [r8], r10 ; ret
0x000002000003b82b : shr bl, 0xee ; and dword ptr [rbx + 0xc], 0 ; mov eax, edx ; jmp 0x2000003b824
0x000002000002f8e7 : shr bl, 0xf0 ; mov al, r9b ; ret
0x00000200004843a9 : shr bl, 0xf1 ; mov al, 1 ; add rsp, 0x38 ; ret
0x0000020000069839 : shr bl, 0xf7 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000048157 : shr bl, 0xf9 ; jmp 0x200001d43a9
0x00000200007c1de3 : shr bl, 0xfa ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000046812 : shr bl, 1 ; call 0x1ffe9c6f263
0x000002000065f3e2 : shr bl, 1 ; mov edx, 0x8a4401b2 ; ret 0x8d48
0x000002000052dc13 : shr bl, 1 ; movsd dword ptr [rdi], dword ptr [rsi] ; call rax
0x000002000020ee16 : shr bl, 1 ; ret
0x00000200000ac95d : shr bl, 1 ; ret 0x1b0
0x00000200005248f4 : shr bl, 1 ; ret 0x48cc
0x00000200000cf724 : shr bl, 1 ; ret 0xc933
0x00000200002350a1 : shr bl, 2 ; inc al ; shr ecx, 1 ; jne 0x200002350ad ; ret
0x00000200004acddb : shr bl, 2 ; xor al, al ; add rsp, 0x28 ; ret
0x00000200001deac2 : shr bl, 2 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001b46a0 : shr bl, 3 ; mov r8b, 1 ; mov al, r8b ; ret
0x000002000013ddc2 : shr bl, 3 ; xor r8d, r8d ; mov eax, r8d ; ret
0x00000200001c143f : shr bl, 5 ; mov eax, 0xc000000d ; ret
0x000002000064d5bd : shr bl, 5 ; mov eax, 0xc0000056 ; ret
0x00000200001e5af7 : shr bl, cl ; add ecx, dword ptr [rcx - 1] ; ret 0x8348
0x00000200005b33b3 : shr byte ptr [r11], 1 ; ret
0x00000200001bcafa : shr byte ptr [rax + 0x41], 0x3b ; sal byte ptr [rdx - 0x10], 1 ; xor eax, eax ; ret
0x0000020000150b89 : shr byte ptr [rax + rax], 0 ; ret
0x000002000012d8a7 : shr byte ptr [rax - 0x72f18bff], 1 ; or r14b, sil ; ret 0x8d02
0x0000020000088c41 : shr byte ptr [rax], 0x83 ; call qword ptr [rax]
0x00000200006740ac : shr byte ptr [rbx - 0x54], 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000177675 : shr byte ptr [rbx], 0x47 ; add al, 0x2b ; ret
0x000002000068d472 : shr byte ptr [rbx], 0x94 ; and al, 0xd8 ; add byte ptr [rax], al ; add bh, bh ; ret 0xb7e8
0x000002000013bab0 : shr byte ptr [rbx], 0xc1 ; ret
0x00000200005b33b4 : shr byte ptr [rbx], 1 ; ret
0x000002000054882c : shr byte ptr [rbx], cl ; or al, 0xf7 ; jno 0x20000548842 ; ret
0x00000200000ecbc3 : shr byte ptr [rbx], cl ; ret 0xd8f7
0x00000200005adf3a : shr byte ptr [rcx], 0xea ; dec dword ptr [rax - 0x75] ; ret
0x000002000014121c : shr byte ptr [rcx], 1 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000026229 : shr byte ptr [rdi], cl ; add byte ptr [rax + 3], cl ; ret
0x000002000064dbc0 : shr byte ptr [rsi - 0x3b7cb701], 1 ; pop rbx ; ret
0x000002000020be14 : shr ch, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001674fe : shr cl, 0x12 ; ret
0x000002000017ea81 : shr cl, 0x15 ; ret 0xffec
0x00000200005d8ce0 : shr cl, 0x1b ; ret
0x0000020000585790 : shr cl, 0x1d ; jns 0x20000585782 ; push rsi ; ret
0x0000020000172fe6 : shr cl, 0x21 ; stc ; inc dword ptr [rcx - 0x75] ; ret
0x00000200005d8c65 : shr cl, 0x25 ; ret
0x00000200005f08a2 : shr cl, 0x25 ; xor ebp, esi ; inc dword ptr [rcx - 0x75] ; ret 0xfb8b
0x00000200005890b7 : shr cl, 0x29 ; jmp rsi
0x000002000015e666 : shr cl, 0x29 ; out dx, al ; push rsi ; ret 0x7503
0x00000200001f6c14 : shr cl, 0x2d ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005caaf0 : shr cl, 0x30 ; ret
0x00000200005cfb77 : shr cl, 0x35 ; ret 0xffec
0x00000200007c373a : shr cl, 0x37 ; sbb edi, ebp ; dec dword ptr [rax - 0x75] ; ret
0x00000200005f4e87 : shr cl, 0x38 ; ret 0xfff5
0x00000200005cfb6d : shr cl, 0x3f ; ret 0xffec
0x0000020000587afb : shr cl, 0x40 ; ret 0xffe6
0x0000020000637690 : shr cl, 0x42 ; sbb dword ptr [rax], eax ; add dh, dh ; ret 0x7440
0x00000200004828c6 : shr cl, 0x43 ; add al, 0 ; add dh, dh ; ret
0x00000200005a5de0 : shr cl, 0x43 ; cmp cl, ch ; push rsi ; ret
0x00000200005a0aa6 : shr cl, 0x49 ; jne 0x200005a0a98 ; call rcx
0x0000020000172e7e : shr cl, 0x4a ; stc ; inc dword ptr [rbp - 0x75] ; ret
0x00000200005ebd7e : shr cl, 0x4b ; ret 0xfff1
0x000002000015f69c : shr cl, 0x4d ; xor dl, ch ; dec dword ptr [rax - 0x75] ; ret
0x00000200001b2536 : shr cl, 0x50 ; outsd dx, dword ptr [rsi] ; clc ; push rsi ; ret 0x7403
0x0000020000587aea : shr cl, 0x51 ; ret 0xffe6
0x00000200005b39ff : shr cl, 0x55 ; xor esi, 0x3d83ccff ; ret
0x00000200005901ff : shr cl, 0x66 ; mov edi, fs ; dec dword ptr [rax - 0x7d] ; ret 0x4858
0x00000200005d58b7 : shr cl, 0x68 ; sub ebp, esi ; dec dword ptr [rax - 9] ; ret
0x00000200007cbe22 : shr cl, 0x6c ; ret 0xfffe
0x000002000016d547 : shr cl, 0x78 ; out dx, al ; in al, dx ; inc dword ptr [rcx - 0xa] ; ret 0xf04
0x00000200003d6af9 : shr cl, 0x82 ; jne 0x200003d6b05 ; dec dword ptr [rax - 0x7d] ; ret 0x4510
0x00000200005bcff2 : shr cl, 0x87 ; ret 0xffe9
0x00000200005d8bf6 : shr cl, 0x94 ; ret
0x00000200001975be : shr cl, 0x95 ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x000002000059171c : shr cl, 0x95 ; ret
0x00000200005d3df2 : shr cl, 0x99 ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret
0x00000200007cbf94 : shr cl, 0xa9 ; ret
0x00000200005d8be4 : shr cl, 0xab ; ret
0x000002000020b5e4 : shr cl, 0xad ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200002210d6 : shr cl, 0xb4 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005f94b2 : shr cl, 0xb4 ; cmp dh, dh ; dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000020000587b32 : shr cl, 0xb5 ; ret
0x00000200005d8bc7 : shr cl, 0xc3 ; ret
0x00000200005d8cc6 : shr cl, 0xc4 ; ret 0xffee
0x0000020000591712 : shr cl, 0xc7 ; ret
0x00000200005d0f72 : shr cl, 0xcd ; xor al, 0xed ; dec dword ptr [rax - 0x75] ; ret
0x0000020000652d84 : shr cl, 0xd ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200005ebde8 : shr cl, 0xd0 ; ret 0xfff1
0x000002000009753b : shr cl, 0xd5 ; call 0x1ffc3007549
0x0000020000176295 : shr cl, 0xe5 ; ret 0xfff9
0x000002000048df7c : shr cl, 0xe9 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret 0x4ae9
0x0000020000652da5 : shr cl, 0xec ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200005b4b66 : shr cl, 0xec ; ret 0xfff6
0x00000200005b4b5c : shr cl, 0xf6 ; ret 0xfff6
0x000002000048ce7a : shr cl, 0xf8 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200005a2cbc : shr cl, 0xfb ; std ; call 0x1ffc3193ccc
0x000002000011615c : shr cl, 1 ; not cl ; and cl, 1 ; mov al, cl ; ret
0x000002000060f2fb : shr cl, 1 ; ret 1
0x000002000064042b : shr cl, 3 ; add eax, 0x8b4c0000 ; ret
0x00000200001a1a49 : shr cl, cl ; push rsp ; push rdx ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200005bd3e1 : shr cl, cl ; ret
0x000002000016d86c : shr cl, cl ; ret 0xecf6
0x00000200007cb890 : shr cl, cl ; sub dword ptr [rsi - 0x8b70002], ecx ; ret
0x00000200006f54b8 : shr dl, 0xff ; dec dword ptr [rbx + 0x3b582444] ; ret
0x00000200000b4232 : shr dword ptr [rax + 0x49387401], -0x75 ; ret 0x8548
0x00000200000b564e : shr dword ptr [rax + 0x493f7401], -0x7b ; ret 0x2b75
0x00000200001e4b17 : shr dword ptr [rax], -0x7d ; ret 0x75ff
0x000002000002d07c : shr dword ptr [rax], -1 ; ret 0x3b41
0x00000200004794ea : shr dword ptr [rax], 1 ; add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x8142
0x0000020000454a83 : shr dword ptr [rbp - 7], -1 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001a5de9 : shr dword ptr [rbx + rsi*8 + 0x23018bff], 1 ; ret
0x000002000021190a : shr dword ptr [rbx - 0x40], 0x1c ; add eax, 0xac00 ; ret
0x000002000013f50e : shr dword ptr [rbx], -0x3e ; ret
0x000002000002018b : shr dword ptr [rbx], 1 ; ret 0x2b41
0x000002000001152a : shr dword ptr [rbx], 1 ; ret 0x3b48
0x00000200000ecb67 : shr dword ptr [rbx], cl ; ret 0xd8f7
0x000002000068cd6a : shr dword ptr [rbx], cl ; xchg eax, esp ; and al, 0xb8 ; add byte ptr [rax], al ; add bh, bh ; ret 0xbfe8
0x00000200005352f5 : shr dword ptr [rdi - 0x3b7cb701], 0x20 ; pop rbx ; ret
0x000002000079d323 : shr dword ptr [rdx - 0x4a], 1 ; jmp qword ptr [rcx]
0x000002000052ba67 : shr dword ptr [rdx], 1 ; add ecx, dword ptr [rax - 1] ; ret
0x0000020000044d9b : shr dword ptr [rip - 0x7c333d00], 0x61 ; adc bh, ch ; ret
0x000002000011ec74 : shr dword ptr [rsi - 0x74b7fffb], 1 ; ret
0x000002000020b976 : shr eax, 0x10 ; and al, 1 ; ret
0x000002000003455f : shr eax, 0x11 ; and eax, 1 ; ret
0x000002000022108b : shr eax, 0x11 ; not eax ; and eax, 1 ; ret
0x0000020000680062 : shr eax, 0x12 ; and al, 1 ; ret
0x00000200000820a6 : shr eax, 0x13 ; and al, 1 ; ret
0x000002000009e253 : shr eax, 0x13 ; and eax, 1 ; ret
0x00000200001bbea2 : shr eax, 0x14 ; and al, 1 ; ret
0x000002000004061b : shr eax, 0x18 ; and al, 1 ; ret
0x00000200001fd664 : shr eax, 0x18 ; ret
0x0000020000043378 : shr eax, 0x19 ; and eax, 1 ; ret
0x000002000009939a : shr eax, 0x1e ; and eax, 1 ; ret
0x00000200004968d2 : shr eax, 0x1f ; not al ; and al, 1 ; ret
0x000002000016dea4 : shr eax, 0x20 ; add word ptr [r9 + 0x6e], r8w ; ret
0x000002000004e323 : shr eax, 0x20 ; ret
0x00000200001d7be2 : shr eax, 0x38 ; add rsp, 0x28 ; ret
0x00000200000f5d28 : shr eax, 0x38 ; mov word ptr [r8], ax ; ret
0x000002000002c3fe : shr eax, 0x38 ; ret
0x00000200006626ad : shr eax, 0x3f ; add rax, rdx ; ret
0x000002000013b276 : shr eax, 0x3f ; ret
0x0000020000030967 : shr eax, 0xa ; and al, 1 ; ret
0x00000200001e5e5c : shr eax, 0xc ; call qword ptr [r11]
0x0000020000018c0c : shr eax, 0xc ; cmp qword ptr [rcx + 0x20], r8 ; je 0x20000018c1f ; ret
0x000002000049e83d : shr eax, 0xc ; ret
0x00000200007bd2ba : shr eax, 0xe ; and eax, 1 ; ret
0x0000020000033041 : shr eax, 0xe ; ret
0x000002000002c41a : shr eax, 0xf ; and al, 1 ; ret
0x00000200004990b3 : shr eax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b860b : shr eax, 1 ; and eax, 1 ; ret
0x00000200004990e7 : shr eax, 1 ; ret
0x000002000010f660 : shr eax, 1 ; xchg eax, edx ; ret 0xfff3
0x0000020000078140 : shr eax, 2 ; and eax, 1 ; ret
0x0000020000118be1 : shr eax, 3 ; add eax, 0x48 ; ret
0x00000200000fc287 : shr eax, 3 ; and eax, 1 ; ret
0x0000020000007ece : shr eax, 3 ; and eax, 4 ; ret
0x0000020000118e7e : shr eax, 3 ; ret
0x00000200000dda5d : shr eax, 4 ; add rax, rdx ; ret
0x000002000013a60f : shr eax, 4 ; and eax, 1 ; ret
0x000002000002b128 : shr eax, 5 ; and eax, 1 ; ret
0x0000020000053a46 : shr eax, 8 ; and eax, 0xfffff ; ret
0x0000020000097a05 : shr eax, 9 ; and eax, 1 ; pop rcx ; ret
0x0000020000686970 : shr eax, 9 ; and eax, 1 ; ret
0x00000200000bd774 : shr eax, 9 ; and eax, 7 ; ret
0x0000020000488a54 : shr eax, cl ; adc al, 0xbe ; dec dword ptr [rax - 0x7d] ; ret
0x000002000002ddc6 : shr eax, cl ; and eax, 1 ; ret
0x000002000011dc59 : shr eax, cl ; and r8d, 7 ; mov eax, r8d ; ret
0x0000020000057cd5 : shr eax, cl ; and rax, r8 ; ret
0x00000200001a94d2 : shr eax, cl ; cwde ; ret 0xffe7
0x0000020000619087 : shr eax, cl ; jae 0x200006190ce ; ret
0x00000200000b7d5c : shr eax, cl ; jg 0x200000b7d67 ; dec dword ptr [rax - 0x75] ; ret
0x00000200003e4aea : shr eax, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200004b6940 : shr eax, cl ; push 0x50 ; ret 0xebff
0x000002000001b5f7 : shr eax, cl ; ret
0x00000200005f5188 : shr eax, cl ; ret 0xa9f
0x00000200004642c0 : shr eax, cl ; ret 0xbef6
0x0000020000670d5c : shr eax, cl ; sahf ; ret 0xffbd
0x00000200006c2574 : shr eax, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003e5050 : shr eax, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x000002000046f2b9 : shr ebp, cl ; ret 0xf0ff
0x000002000009467c : shr ebx, -0x5e ; mov rax, rdx ; jmp 0x20000094667
0x000002000013cf1b : shr ebx, -0xd ; mov rax, r11 ; ret
0x000002000013b117 : shr ebx, 0xc ; xor rax, rax ; ret
0x0000020000025aac : shr ebx, cl ; cmp ecx, dword ptr [rcx + 0x63] ; ret
0x000002000070f11f : shr ecx, 0x1a ; and ecx, 1 ; mov eax, ecx ; ret
0x000002000019153e : shr ecx, 0x35 ; cmp dh, al ; push rsi ; ret 0x7503
0x000002000005106c : shr ecx, 0xd ; and eax, ecx ; ret
0x0000020000022b96 : shr ecx, 1 ; add al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200006262b7 : shr ecx, 1 ; call 0x20000052564
0x00000200002350a6 : shr ecx, 1 ; jne 0x200002350a8 ; ret
0x000002000072c2e0 : shr ecx, 1 ; mov dword ptr [r8], ecx ; ret
0x00000200005ce57a : shr ecx, 1 ; ret
0x000002000004b107 : shr ecx, 6 ; cmp ecx, edx ; jne 0x2000004b120 ; xor eax, eax ; ret
0x0000020000050d32 : shr ecx, 9 ; and cl, 1 ; mov al, cl ; ret
0x00000200000b4939 : shr ecx, cl ; cmp ah, 0xff ; push rsi ; ret 0xf04
0x00000200004b8e9b : shr edi, 1 ; ret 0x90ff
0x00000200001b1735 : shr edx, 0x10 ; mov eax, edx ; jmp 0x200001b1756
0x00000200006bbf8d : shr edx, 0x17 ; cmp r8d, edx ; jmp 0x200006bbfcd
0x00000200001b178d : shr edx, 0x20 ; mov rax, rdx ; jmp 0x200001b17af
0x0000020000150ebf : shr edx, 0x20 ; wrmsr ; pop rdi ; ret
0x0000020000157a2c : shr edx, 0x20 ; wrmsr ; ret
0x000002000000fa32 : shr edx, 0x20 ; xrstor ptr [rcx] ; ret
0x00000200001e62c7 : shr edx, 0xc ; call qword ptr [rbx]
0x00000200003dc005 : shr edx, 0xc ; call qword ptr [rsi]
0x00000200000479a9 : shr edx, 0xc ; lea rax, qword ptr [rax + rdx*8] ; ret
0x00000200001b16b3 : shr edx, 8 ; mov eax, edx ; jmp 0x200001b16d8
0x0000020000164571 : shr edx, cl ; and rax, rdx ; cmp rax, rdx ; jmp 0x200001645fb
0x0000020000038726 : shr edx, cl ; test r9, r9 ; js 0x20000038742 ; mov rax, rdx ; ret
0x0000020000157bd4 : shr esi, 1 ; ret
0x00000200004baaeb : shr esi, 1 ; ret 0xebff
0x000002000005efa9 : shr esi, 3 ; jmp 0x2000005ef74
0x000002000059d308 : shr esp, -0x7d ; ret
0x0000020000157bc6 : shr esp, 1 ; ret
0x000002000016dea3 : shr r8, 0x20 ; add word ptr [r9 + 0x6e], r8w ; ret
0x00000200001e5e5b : shr r8, 0xc ; call qword ptr [r11]
0x0000020000060886 : shr r8, cl ; ret
0x00000200005b1600 : shr r8b, 0xe1 ; cwde ; ret 0x8bff
0x00000200007c3ac4 : shr r8b, 1 ; cdq ; in eax, dx ; ret
0x00000200000c5e67 : shr r8b, 1 ; loop 0x200000c5e0b ; cli ; dec dword ptr [rax - 0x75] ; ret
0x00000200000c5f16 : shr r8b, 1 ; xor edx, dword ptr [rsi - 0x74b70006] ; ret
0x00000200003e4ae9 : shr r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200006c2573 : shr r8d, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003e504f : shr r8d, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x00000200006262b6 : shr r9d, 1 ; call 0x20000052565
0x000002000004e322 : shr rax, 0x20 ; ret
0x00000200001d7be1 : shr rax, 0x38 ; add rsp, 0x28 ; ret
0x00000200000f5d27 : shr rax, 0x38 ; mov word ptr [r8], ax ; ret
0x000002000002c3fd : shr rax, 0x38 ; ret
0x00000200006626ac : shr rax, 0x3f ; add rax, rdx ; ret
0x000002000013b275 : shr rax, 0x3f ; ret
0x000002000049e83c : shr rax, 0xc ; ret
0x00000200004990b2 : shr rax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004990e6 : shr rax, 1 ; ret
0x00000200000dda5c : shr rax, 4 ; add rax, rdx ; ret
0x000002000002ddc5 : shr rax, cl ; and eax, 1 ; ret
0x0000020000057cd4 : shr rax, cl ; and rax, r8 ; ret
0x000002000005106b : shr rcx, 0xd ; and eax, ecx ; ret
0x0000020000050d31 : shr rcx, 9 ; and cl, 1 ; mov al, cl ; ret
0x00000200001b1734 : shr rdx, 0x10 ; mov eax, edx ; jmp 0x200001b1757
0x00000200006bbf8c : shr rdx, 0x17 ; cmp r8d, edx ; jmp 0x200006bbfce
0x00000200001b178c : shr rdx, 0x20 ; mov rax, rdx ; jmp 0x200001b17b0
0x0000020000150ebe : shr rdx, 0x20 ; wrmsr ; pop rdi ; ret
0x0000020000157a2b : shr rdx, 0x20 ; wrmsr ; ret
0x000002000000fa31 : shr rdx, 0x20 ; xrstor ptr [rcx] ; ret
0x00000200001e62c6 : shr rdx, 0xc ; call qword ptr [rbx]
0x00000200003dc004 : shr rdx, 0xc ; call qword ptr [rsi]
0x00000200000479a8 : shr rdx, 0xc ; lea rax, qword ptr [rax + rdx*8] ; ret
0x00000200001b16b2 : shr rdx, 8 ; mov eax, edx ; jmp 0x200001b16d9
0x0000020000164570 : shr rdx, cl ; and rax, rdx ; cmp rax, rdx ; jmp 0x200001645fc
0x000002000024c473 : sidt ptr [rdx] ; ret
0x000002000002d350 : sldt word ptr [r13 - 0x577f040] ; ret
0x0000020000155b6f : sldt word ptr [r8] ; nop ; ret
0x00000200005cd96a : sldt word ptr [rax] ; add al, 0x8b ; ret 0x1ba
0x0000020000111bd4 : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x1c7
0x0000020000032db6 : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x344
0x000002000004ca62 : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8b44
0x00000200001e8f8a : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8b49
0x00000200000799e0 : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x00000200000d8ecf : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x3349
0x000002000004b944 : sldt word ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0x2348
0x00000200000b80f8 : sldt word ptr [rax] ; add byte ptr [rax + 0xb], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0xc148
0x00000200000f41bd : sldt word ptr [rax] ; add byte ptr [rax - 0x3ffffffe], bh ; ret
0x0000020000072d71 : sldt word ptr [rax] ; add byte ptr [rax - 0x75], cl ; call 0x2000fc968ce
0x0000020000072ee5 : sldt word ptr [rax] ; add byte ptr [rax - 0x75], cl ; call 0x2000fc96a42
0x0000020000023ee8 : sldt word ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000004b918 : sldt word ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x234c
0x00000200000bf18d : sldt word ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200003cfc39 : sldt word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000b1c8f : sldt word ptr [rax] ; add byte ptr [rbx - 0x74b3f7b9], cl ; ret 0xc149
0x000002000066dc63 : sldt word ptr [rax] ; add byte ptr [rbx], ah ; ret 0x4489
0x00000200001332f6 : sldt word ptr [rax] ; add byte ptr [rbx], ah ; ret 0xc803
0x00000200001e7489 : sldt word ptr [rax] ; add byte ptr [rcx + 0x23], cl ; ret
0x000002000003f4a5 : sldt word ptr [rax] ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000200001a3b6f : sldt word ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000017abd : sldt word ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000021cf8c : sldt word ptr [rax] ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x0000020000148085 : sldt word ptr [rax] ; add cl, ch ; mov dl, 0xdf ; add byte ptr [rax], al ; ret
0x00000200000d3d20 : sldt word ptr [rax] ; add dh, dh ; ret
0x0000020000203bf0 : sldt word ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000598cb8 : sldt word ptr [rax] ; call 0x200004d4f35
0x000002000004bc8c : sldt word ptr [rax] ; dec dword ptr [rax - 0x75] ; ret 0x2349
0x00000200000e67c5 : sldt word ptr [rax] ; dec dword ptr [rcx - 0x75] ; ret
0x00000200001eaaa1 : sldt word ptr [rax] ; mov eax, dword ptr [rcx] ; and rax, rdx ; ret
0x00000200007131da : sldt word ptr [rax] ; mov rbx, rax ; call rdi
0x0000020000155b70 : sldt word ptr [rax] ; nop ; ret
0x000002000041b4e6 : sldt word ptr [rax] ; pop r15 ; pop rsi ; pop rbp ; ret
0x00000200004f130b : sldt word ptr [rbp - 0x3f60f040] ; ret
0x000002000002d351 : sldt word ptr [rbp - 0x577f040] ; ret
0x000002000014b952 : sldt word ptr [rcx + 0x72] ; stmxcsr dword ptr [rcx + 0x74] ; ret
0x000002000009844c : sldt word ptr [rsp + rax*4 - 0x55] ; ret 0
0x000002000003e2b6 : stc ; adc al, byte ptr [rax] ; mov al, r8b ; ret
0x000002000003e45f : stc ; adc al, byte ptr [rax] ; ret
0x0000020000051040 : stc ; adc al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000592e84 : stc ; adc al, ch ; loope 0x20000592e8b ; ret
0x00000200000daa21 : stc ; adc byte ptr [rax - 0x75], cl ; ret 0x3b48
0x0000020000014e2e : stc ; adc byte ptr [rbp - 0x75], cl ; ret
0x00000200000152b2 : stc ; adc byte ptr [rcx - 0x75], cl ; ret 0x3b48
0x000002000023637f : stc ; adc dword ptr [rax], eax ; ret
0x0000020000147abe : stc ; add al, 0x72 ; loop 0x20000147a84 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000018acb : stc ; add al, 0x74 ; sbb ecx, dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0xf175
0x0000020000210186 : stc ; add al, 0x75 ; jge 0x2000021011e ; je 0x200002101a1 ; ret 0x1a8
0x000002000013963c : stc ; add al, byte ptr [rax] ; add byte ptr [rdx], cl ; setbe al ; ret
0x0000020000149dc5 : stc ; add byte ptr [rax], al ; add cl, ch ; jb 0x20000149d97 ; add byte ptr [rax], al ; ret
0x0000020000098fa5 : stc ; add dh, byte ptr [rbx + 4] ; mov qword ptr [r8], rax ; ret
0x00000200004048b9 : stc ; add dh, byte ptr [rdx - 0x25] ; mov al, dl ; ret
0x00000200001cb0dd : stc ; add dword ptr [rbp + 3], esi ; xor al, al ; ret
0x00000200003f91d9 : stc ; add dword ptr [rbp + 4], esi ; lea eax, dword ptr [rcx + 4] ; ret
0x0000020000052867 : stc ; add dword ptr [rbp - 8], esi ; mov eax, ecx ; ret
0x0000020000231770 : stc ; add dword ptr [rbx + 6], esi ; mov eax, 0xc00001a2 ; ret
0x00000200002410e5 : stc ; add dword ptr [rdi + rax*2 - 0xa], esi ; ret
0x00000200000450c4 : stc ; add dword ptr [rdi - 0x15], esi ; xor eax, eax ; ret
0x00000200007b4a84 : stc ; add dword ptr [rdi], ecx ; test byte ptr [rdx - 0xfffe92], bl ; ret
0x00000200004aa101 : stc ; add dword ptr [rsi + rax - 0x48], esi ; add byte ptr [rax], al ; add al, 0 ; ret
0x0000020000116ae5 : stc ; add eax, 0xf1f508d ; ret 0xb8c3
0x00000200001f5653 : stc ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200002118a9 : stc ; add eax, r9d ; ret
0x000002000019a63f : stc ; add ebp, dword ptr [rbx] ; ret
0x00000200007a4f9c : stc ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x00000200004e4faa : stc ; add ecx, dword ptr [rbp + 0xb] ; ret 0x2b4c
0x00000200007b2104 : stc ; add ecx, dword ptr [rdi] ; ret 0x8348
0x00000200000450b4 : stc ; add esi, dword ptr [rdi + 0x10] ; mov eax, 1 ; ret
0x00000200000de036 : stc ; add esi, dword ptr [rdx - 0x10] ; or eax, 0xffffffff ; ret
0x0000020000039052 : stc ; and byte ptr [rax + rax], al ; sal byte ptr [rbp + rdi - 0x50], 1 ; ret
0x0000020000213aa0 : stc ; and byte ptr [rdx - 0x18], dh ; mov rax, r8 ; ret
0x00000200001969e5 : stc ; and eax, 0x8b48fff1 ; ret 0xc148
0x0000020000448723 : stc ; call 0x2000006d284
0x00000200000fd448 : stc ; call 0x200000e972f
0x00000200006dac50 : stc ; call rdi
0x0000020000601f03 : stc ; cld ; sar edi, 1 ; call 0x2000005e176
0x000002000079f2eb : stc ; cmp byte ptr [rdx + 0x33480026], ch ; ret 0xb948
0x000002000013f508 : stc ; cmp dh, byte ptr [rbx + 6] ; movzx eax, cx ; sub eax, edx ; ret
0x000002000020e6a3 : stc ; cmp ecx, 1 ; setle al ; ret
0x0000020000175624 : stc ; dec dword ptr [rax + 0x2b] ; ret 0x8948
0x0000020000173924 : stc ; dec dword ptr [rax + 0x63] ; ret
0x000002000012e632 : stc ; dec dword ptr [rax - 0x75] ; ret
0x0000020000172653 : stc ; dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000200000bc94e : stc ; dec dword ptr [rax - 1] ; ret
0x00000200001726cb : stc ; dec dword ptr [rbx - 0x74b3efb0] ; ret
0x0000020000173821 : stc ; dec dword ptr [rcx + 3] ; ret 0xc148
0x00000200001758c0 : stc ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000708e77 : stc ; fdivp st(7) ; dec dword ptr [rax - 0x75] ; ret
0x000002000050a8f7 : stc ; fsub dword ptr [rbx] ; add byte ptr [rdi + rcx - 0x51], cl ; ret 0x8b41
0x00000200005eaaee : stc ; hlt ; inc dword ptr [rcx + 3] ; int 0x80
0x00000200001bb357 : stc ; idiv edi ; add rsp, 0x68 ; ret
0x00000200007b1d71 : stc ; inc dword ptr [rax] ; mov al, 1 ; add rsp, 0x78 ; ret
0x00000200000baa11 : stc ; inc dword ptr [rbp + 0x450f45c0] ; ret 0x8944
0x0000020000172e82 : stc ; inc dword ptr [rbp - 0x75] ; ret
0x00000200000216d5 : stc ; inc dword ptr [rcx - 0x75] ; ret
0x0000020000176d6f : stc ; inc dword ptr [rcx - 0x75] ; ret 0x20ba
0x00000200006882ce : stc ; jae 0x200006882dd ; movzx eax, cx ; ret
0x000002000046cc28 : stc ; jb 0x2000046cc03 ; mov rax, r8 ; ret
0x00000200004d0768 : stc ; jb 0x200004d07ca ; inc edx ; jmp 0x200004d0716
0x00000200007b4ff9 : stc ; jb 0x200007b4fe2 ; ret
0x00000200000770dd : stc ; je 0x200000770d4 ; xor al, al ; ret
0x000002000042bf1b : stc ; je 0x2000042bf0f ; xor al, al ; ret
0x0000020000048159 : stc ; jmp 0x200001d43a7
0x000002000003ba3b : stc ; jmp qword ptr [rdx]
0x000002000008c1a9 : stc ; jo 0x2000008c1b9 ; add al, al ; je 0x2000008c1bc ; mov al, 1 ; ret
0x0000020000527f0b : stc ; lea edx, dword ptr [r9 + 2] ; call 0x20000148158
0x000002000017326c : stc ; ljmp ptr [rbx] ; ret 0xe1c1
0x000002000044df5e : stc ; mov cl, 1 ; mov rbx, rdx ; call 0x2000001a254
0x00000200001518fb : stc ; mov rax, rdi ; pop rsi ; pop rdi ; ret
0x00000200001dc323 : stc ; mov rcx, qword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x00000200004b43c0 : stc ; mov rcx, r9 ; call 0x200000d6427
0x00000200000d213f : stc ; or al, 0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001f93c0 : stc ; or al, 1 ; mov byte ptr [rdx + 0x22], al ; ret
0x0000020000011099 : stc ; or byte ptr [rcx - 0x17], dh ; ret 0x151f
0x00000200003f90d6 : stc ; or dword ptr [rcx - 0x75], esi ; ret 0x8b48
0x00000200000450a9 : stc ; or dword ptr [rdi + 0x1b], esi ; mov eax, 8 ; ret
0x000002000021fc42 : stc ; or eax, 0xc38b4100 ; ret
0x0000020000544e1b : stc ; pcmpeqw mm0, qword ptr [rcx + rcx*2] ; mov eax, eax ; ret
0x0000020000041d70 : stc ; pop rbp ; add ecx, dword ptr [rcx] ; xor byte ptr [rdx + rcx - 0x75], 0xc2 ; ret
0x000002000069e3ca : stc ; push qword ptr [rbp + 5] ; lea eax, dword ptr [r9 + 0xb] ; ret
0x00000200007cf7a4 : stc ; push qword ptr [rbp + rax - 0x18] ; ret
0x00000200000e0cf6 : stc ; push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000024d009
0x00000200005215a5 : stc ; push qword ptr [rdi + rax + 0x33] ; shr al, cl ; loopne 0x20000521623 ; ret 0x48ff
0x00000200006cf1e3 : stc ; push rcx ; jbe 0x200006cf1f4 ; add cl, 8 ; ret
0x00000200001718d5 : stc ; push rsi ; ret 0xf07
0x000002000000954c : stc ; ret
0x0000020000478e65 : stc ; ret 0x14
0x000002000046ae08 : stc ; ret 0x48ff
0x00000200006f5e86 : stc ; ret 0x88ff
0x0000020000471791 : stc ; ret 0xebff
0x00000200005d0d03 : stc ; ret 0xffc7
0x000002000017ebdd : stc ; ret 0xffec
0x000002000020bd63 : stc ; ret 0xffed
0x00000200000099f9 : stc ; rol byte ptr [rax], 0 ; sal byte ptr [rdi + rcx - 0x75], 0xc1 ; ret
0x000002000009d985 : stc ; sal byte ptr [rsp + rdx + 0x33], 0xc0 ; ret
0x00000200003fb2cc : stc ; sar edi, cl ; add rsp, 0x70 ; pop rbx ; ret
0x00000200000442e7 : stc ; sbb byte ptr [rax], al ; add byte ptr [rax - 0x3fccfc8c], al ; ret
0x00000200001f8aa5 : stc ; sbb byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x0000020000669199 : stc ; sbb byte ptr [rbx + 6], dh ; mov eax, 0xc0000095 ; ret
0x00000200000f3727 : stc ; std ; ja 0x200000f3716 ; mov al, 1 ; ret
0x0000020000669255 : stc ; sub byte ptr [rbx + 6], dh ; mov eax, 0xc0000095 ; ret
0x00000200004255d0 : stc ; sub byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xba0f
0x000002000000ff53 : stc ; sub edx, dword ptr [rip - 0x3cfe5000] ; xor al, al ; ret
0x0000020000778434 : stc ; xor dh, byte ptr [rbx + 8] ; mov esi, r12d ; mov rax, rdx ; jmp 0x2000077844e
0x000002000045fafc : stc ; xor ecx, ecx ; call 0x2000008e15a
0x000002000003dee9 : std ; adc al, byte ptr [rax] ; ret
0x000002000009c4d8 : std ; add al, 0 ; add dh, dh ; ret
0x00000200005cd6f4 : std ; add al, 0xf ; test dword ptr [rbp - 0x7e0013b9], edi ; ret 0x1000
0x0000020000544b0f : std ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x0000020000225cbf : std ; add al, byte ptr [rax] ; add byte ptr [rax], bh ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xb60f
0x000002000001fc1a : std ; add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x4874
0x0000020000149e45 : std ; add byte ptr [rax], al ; add cl, ch ; rol dword ptr [rax], 0 ; ret
0x00000200006d2615 : std ; add byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x0000020000023df7 : std ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000729920 : std ; add rsp, 0x28 ; ret
0x0000020000077b72 : std ; and edx, dword ptr [rcx] ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200005a2cbf : std ; call 0x1ffc3193cc9
0x00000200006a3626 : std ; call 0x2000005f903
0x000002000051f14e : std ; call 0x20000148034
0x0000020000400f86 : std ; call rsi
0x000002000021fc4b : std ; clc ; or eax, 0xc08b4100 ; ret
0x000002000020b907 : std ; cmova eax, ecx ; ret
0x0000020000178e0b : std ; dec dword ptr [rax + 0x3b] ; sal dword ptr [rcx + rcx + 0x49], 0x3b ; ret
0x00000200007c4dec : std ; dec dword ptr [rax + 0x63] ; enter 0x58b, 0x35 ; ret
0x0000020000028fe7 : std ; dec dword ptr [rax + 0x63] ; ret 0xb60f
0x00000200007c373e : std ; dec dword ptr [rax - 0x75] ; ret
0x00000200007c53e1 : std ; dec dword ptr [rax - 0x75] ; ret 0x3b48
0x00000200007c56b8 : std ; dec dword ptr [rax - 0x7d] ; ret
0x00000200007c5da2 : std ; dec dword ptr [rbp + 0x23410142] ; ret
0x00000200007c5ac7 : std ; dec dword ptr [rcx - 0x75] ; imul ecx ; ret 0xfffd
0x00000200007c53b6 : std ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000672792 : std ; enter 0x44ff, 0xf ; ret 0x8944
0x00000200000ead12 : std ; fimul dword ptr [rbx] ; add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x00000200006b71df : std ; in al, dx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x00000200001807ca : std ; in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000234f03 : std ; in al, dx ; inc dword ptr [rcx - 0x7f] ; call qword ptr [rcx]
0x00000200007c5ee4 : std ; inc dword ptr [rbp + 0x33] ; sal byte ptr [rbx], 0xd2 ; call 0x200000620f9
0x00000200003cc1b0 : std ; inc dword ptr [rbx + rcx*4 - 0x40] ; mov eax, r8d ; ret
0x00000200000f3728 : std ; ja 0x200000f3715 ; mov al, 1 ; ret
0x0000020000677e19 : std ; jmp 0x1ffd88b6727
0x000002000058ecf4 : std ; jno 0x2000058ece4 ; dec dword ptr [rax - 0x75] ; ret
0x000002000008650c : std ; lock dec dword ptr [rcx + 0x8c] ; ret
0x000002000047338f : std ; lodsb al, byte ptr [rsi] ; ret 0x48ff
0x000002000007e827 : std ; mov byte ptr [rbx + 0x20], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005fc5dc : std ; mov dh, dh ; dec dword ptr [rax - 0x75] ; ret
0x00000200003d7ce8 : std ; mov dword ptr [rsp + 0x44], eax ; jmp 0x200003d3930
0x0000020000587b54 : std ; mov esp, 0x98e990ff ; ret
0x000002000068383c : std ; mov qword ptr [rcx + 0x340], rdx ; ret
0x0000020000112f7f : std ; mov rax, rcx ; ret
0x000002000048a9a7 : std ; or eax, 0x3480014 ; ret 0xdb33
0x00000200005078cf : std ; pop rax ; ret
0x000002000079bccf : std ; push rdi ; ret
0x000002000013cbd8 : std ; ret
0x000002000078537f : std ; ret 0x44ff
0x00000200004524cf : std ; ret 0xffec
0x00000200001aa835 : std ; ret 0xfff4
0x0000020000135fc7 : std ; sbb al, 0 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000f82fb : std ; sub al, byte ptr [rax] ; ret
0x00000200000596ae : std ; xor al, 0 ; call rax
0x000002000068d772 : std ; xor byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xf799
0x00000200001e7168 : sti ; adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200000ad906 : sti ; adc byte ptr [rax - 0x75], cl ; ret
0x0000020000029b8c : sti ; adc eax, dword ptr [rax] ; call rdi
0x000002000010a982 : sti ; add al, 0xff ; ret
0x000002000042cd4e : sti ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003e9daa : sti ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000149e05 : sti ; add byte ptr [rax], al ; add cl, ch ; xor al, dl ; add byte ptr [rax], al ; ret
0x0000020000126424 : sti ; add cl, byte ptr [rcx - 0x75] ; ret
0x0000020000120b2d : sti ; add dh, byte ptr [rdx - 0x13] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000053eb5b : sti ; add dword ptr [rax + rbp*8 - 0xa], esi ; ret
0x00000200004d0d8e : sti ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x00000200001fc253 : sti ; add eax, 0x8a455b75 ; ret
0x000002000003c1fa : sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200000d75cc : sti ; add ecx, dword ptr [rax - 1] ; ret
0x0000020000014486 : sti ; add ecx, dword ptr [rcx - 0x75] ; ret
0x000002000003f644 : sti ; add rsp, 0x28 ; ret
0x00000200006f75b6 : sti ; and byte ptr [rsi - 0x2f], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f26f2 : sti ; and eax, 0x74c00002 ; and al, 0x8b ; ret
0x00000200000037f1 : sti ; call 0x1ffc3f63801
0x0000020000111557 : sti ; cli ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000428951 : sti ; cli ; ret
0x000002000079122b : sti ; dec dword ptr [rax - 0x7f] ; ret
0x00000200005ba76c : sti ; dec dword ptr [rbx + 0x17c3e8cd] ; ret 0x48ff
0x00000200005ba6f4 : sti ; dec dword ptr [rbx + 0x183be8cd] ; ret 0x4cff
0x00000200005b9509 : sti ; dec dword ptr [rdi] ; ret
0x000002000079fd6c : sti ; idiv bh ; dec dword ptr [rax + 3] ; ret 0x3b49
0x00000200000a26eb : sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x3b4c
0x00000200001ea059 : sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8548
0x00000200007a7e70 : sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8b48
0x000002000079e976 : sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0x8b4c
0x00000200001fb0d4 : sti ; idiv bh ; dec dword ptr [rax - 0x75] ; ret 0xf44
0x000002000012bba5 : sti ; idiv bh ; dec dword ptr [rax - 9] ; ret
0x000002000079e7ec : sti ; idiv bh ; dec dword ptr [rcx - 0x75] ; ret 0x8b4c
0x0000020000013569 : sti ; idiv bh ; jmp qword ptr [rcx]
0x0000020000073a3c : sti ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x0000020000438601 : sti ; insb byte ptr [rdi], dx ; ret 0x48ff
0x000002000001ea6c : sti ; jmp 0x2000001ea34
0x00000200003d0569 : sti ; jmp 0x200003d0530
0x00000200003de81c : sti ; jne 0x200003de7ea ; mov rcx, rbx ; call 0x2000040aa48
0x000002000056993b : sti ; jrcxz 0x20000569943 ; mov dword ptr [rcx + 0x1c], eax ; ret
0x0000020000702031 : sti ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000518704 : sti ; loopne 0x2000051870e ; test rax, rax ; je 0x20000518716 ; call rax
0x00000200006cd49c : sti ; mov bh, 0xff ; add rsp, 0x28 ; ret
0x00000200000a164a : sti ; mov byte ptr [rcx + 0x1b], al ; ret
0x000002000066f446 : sti ; mov eax, 0x8b4dccff ; ret 0x8348
0x00000200007a74e3 : sti ; mov r13d, ebx ; jmp 0x200007a74bb
0x00000200000c5aa9 : sti ; or dword ptr [rax], eax ; mov qword ptr [r8], rcx ; ret
0x000002000004af71 : sti ; out dx, eax ; or byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000177372 : sti ; push qword ptr [rbx] ; fucomi st(1) ; ret
0x0000020000516d03 : sti ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbp ; ret
0x0000020000516875 : sti ; push rdx ; ret 0x85ff
0x000002000003e2d1 : sti ; ret
0x000002000050b13e : sti ; ret 0x48ff
0x0000020000463d85 : sti ; ret 0x85ff
0x00000200006f64a1 : sti ; ret 0x8bff
0x00000200005cbeba : sti ; ret 0x90ff
0x0000020000463f2b : sti ; ret 0xb9ff
0x0000020000704149 : sti ; ret 0xe8ff
0x00000200005ac5e0 : sti ; ret 0xebff
0x00000200007bc051 : sti ; ret 0xffbe
0x000002000045691d : sti ; ret 0xffec
0x00000200005d8d02 : sti ; ret 0xffee
0x00000200000a95b1 : sti ; ret 0xffff
0x0000020000538538 : sti ; sar bh, 0x8b ; ret
0x000002000050d40a : sti ; sar edi, cl ; jmp 0x2000050d3d5
0x000002000050d409 : sti ; sar edi, cl ; jmp 0x2000050d3d6
0x00000200001d849c : sti ; sbb al, 0 ; add rsp, 0x28 ; ret
0x00000200005a6981 : sti ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7421bbf1], al ; ret
0x0000020000527b74 : sti ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7427bbf1], al ; ret
0x00000200005a2cbe : sti ; std ; call 0x1ffc3193cca
0x0000020000479401 : sti ; xchg dl, ch ; dec dword ptr [rax + 0x3b] ; ret
0x00000200000598a3 : sti ; xor al, 0 ; call rax
0x00000200000d5183 : sti ; xor eax, eax ; ret
0x000002000014b956 : stmxcsr dword ptr [rcx + 0x74] ; ret
0x00000200001bedca : stosb byte ptr [rdi], al ; adc eax, dword ptr [rax] ; call rax
0x000002000009c3ae : stosb byte ptr [rdi], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004b8bf2 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x000002000070d0d2 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000014b54b : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000200004cd5b9 : stosb byte ptr [rdi], al ; add byte ptr [rdx], r14b ; lodsb al, byte ptr [rsi] ; add dl, r9b ; ret
0x000002000079f2ed : stosb byte ptr [rdi], al ; add byte ptr es:[rax + 0x33], cl ; ret 0xb948
0x0000020000089c6b : stosb byte ptr [rdi], al ; add byte ptr es:[rbx + rcx*4 - 0x74], cl ; ret 0xaa38
0x000002000014b3e5 : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add cl, ch ; push rdx ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000200001201be : stosb byte ptr [rdi], al ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000841b2 : stosb byte ptr [rdi], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; shl edx, 9 ; or eax, edx ; jmp 0x200000841b3
0x00000200007ccde8 : stosb byte ptr [rdi], al ; cwde ; push rsi ; ret
0x00000200007b4ad0 : stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x7d] ; ret 0x4908
0x0000020000407fb2 : stosb byte ptr [rdi], al ; int 8
0x00000200005c9cda : stosb byte ptr [rdi], al ; jmp 0x200005c9ce0
0x0000020000558c44 : stosb byte ptr [rdi], al ; jmp qword ptr [rcx]
0x00000200003eb592 : stosb byte ptr [rdi], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004520fa : stosb byte ptr [rdi], al ; mov rcx, r15 ; call 0x2000007cdf7
0x00000200006a726e : stosb byte ptr [rdi], al ; or eax, 0x4800000a ; add esp, 0x48 ; ret
0x00000200003db352 : stosb byte ptr [rdi], al ; pop rsp ; ret 0x44ff
0x00000200005157c2 : stosb byte ptr [rdi], al ; push rsp ; ret 0x4cff
0x00000200004ffa2f : stosb byte ptr [rdi], al ; pushfq ; clc ; add byte ptr [r9 + 3], r9b ; ret 0xe0ff
0x0000020000121fc2 : stosb byte ptr [rdi], al ; ret
0x00000200003e7251 : stosb byte ptr [rdi], al ; ret 0x19
0x000002000072b03a : stosb byte ptr [rdi], al ; ret 0x45ff
0x00000200004bd2a7 : stosb byte ptr [rdi], al ; ret 0x48ff
0x00000200006f743a : stosb byte ptr [rdi], al ; ret 0x65ff
0x000002000063e311 : stosb byte ptr [rdi], al ; ret 0x89ff
0x000002000051d8bf : stosb byte ptr [rdi], al ; ret 0x8bff
0x00000200004c5894 : stosb byte ptr [rdi], al ; ret 0xbaff
0x000002000041b292 : stosb byte ptr [rdi], al ; ret 0xffd3
0x00000200001c0baa : stosb byte ptr [rdi], al ; ret 0xffff
0x00000200005ada88 : stosb byte ptr [rdi], al ; sbb dl, ch ; dec dword ptr [rdi] ; mov dh, 0x87 ; ret 6
0x0000020000048ebd : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub ah, byte ptr [rsi + 0x23] ; ret 0x3b66
0x0000020000411add : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x75] ; ret
0x00000200001f9074 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x7d] ; call qword ptr [rax]
0x00000200000def10 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret 0xb948
0x0000020000048ebe : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub ah, byte ptr [rsi + 0x23] ; ret 0x3b66
0x0000020000411ade : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x75] ; ret
0x00000200001f9075 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x7d] ; call qword ptr [rax]
0x00000200000def11 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret 0xb948
0x0000020000048ebf : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub ah, byte ptr [rsi + 0x23] ; ret 0x3b66
0x0000020000411adf : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x75] ; ret
0x00000200001f9076 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x7d] ; call qword ptr [rax]
0x00000200000def12 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret 0xb948
0x0000020000048ec0 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub ah, byte ptr [rsi + 0x23] ; ret 0x3b66
0x0000020000411ae0 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x75] ; ret
0x00000200001f9077 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x7d] ; call qword ptr [rax]
0x00000200000def13 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret 0xb948
0x0000020000048ec1 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub ah, byte ptr [rsi + 0x23] ; ret 0x3b66
0x0000020000411ae1 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x75] ; ret
0x00000200001f9078 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x7d] ; call qword ptr [rax]
0x00000200000def14 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret 0xb948
0x0000020000048ec2 : stosb byte ptr [rdi], al ; sub ah, byte ptr [rsi + 0x23] ; ret 0x3b66
0x0000020000411ae2 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x75] ; ret
0x00000200001f9079 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x7d] ; call qword ptr [rax]
0x00000200000def15 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret 0xb948
0x0000020000029293 : stosb byte ptr [rdi], al ; sub eax, 0x51894800 ; or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x0000020000080d23 : stosd dword ptr [rdi], eax ; adc byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001becae : stosd dword ptr [rdi], eax ; adc eax, dword ptr [rax] ; call rax
0x000002000003179b : stosd dword ptr [rdi], eax ; add al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000138594 : stosd dword ptr [rdi], eax ; add bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xe872
0x000002000065e984 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x977
0x0000020000473a13 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0f005], al ; ret
0x000002000023c12c : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; inc dword ptr [rcx - 0x75] ; ret 0x8d4c
0x0000020000149405 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add cl, ch ; xor cl, ah ; add byte ptr [rax], al ; ret
0x000002000043e137 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000014b44b : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x0000020000685348 : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add bl, ch ; ret
0x00000200001191bb : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200000e6fa9 : stosd dword ptr [rdi], eax ; add dword ptr [rdx], 0 ; add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x000002000000c7d7 : stosd dword ptr [rdi], eax ; and al, 0 ; jmp 0x2000000c772
0x00000200005d90b2 : stosd dword ptr [rdi], eax ; call qword ptr [rax - 0x113d7917]
0x000002000079caa1 : stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 4
0x0000020000552bae : stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000002000068f914 : stosd dword ptr [rdi], eax ; dec esp ; add rsp, 0x38 ; ret
0x000002000005580e : stosd dword ptr [rdi], eax ; enter 0x12, -0xa ; ret
0x00000200001d00e8 : stosd dword ptr [rdi], eax ; idiv bh ; add rsp, 0x58 ; ret
0x00000200000c6cf5 : stosd dword ptr [rdi], eax ; ja 0x200000c6d0a ; add al, ch ; ret 0xf909
0x00000200005a3866 : stosd dword ptr [rdi], eax ; jmp qword ptr [rcx]
0x000002000012a43f : stosd dword ptr [rdi], eax ; mov eax, 0xc000000d ; ret
0x000002000013d316 : stosd dword ptr [rdi], eax ; mov rdi, qword ptr [rsp + 8] ; mov rax, r9 ; ret
0x00000200004aca5a : stosd dword ptr [rdi], eax ; or byte ptr [rax - 1], cl ; ret 0xceeb
0x00000200005e0a0d : stosd dword ptr [rdi], eax ; push rsi ; ret
0x00000200000811bb : stosd dword ptr [rdi], eax ; ret
0x0000020000098450 : stosd dword ptr [rdi], eax ; ret 0
0x00000200003e5f31 : stosd dword ptr [rdi], eax ; ret 0x18
0x000002000007d518 : stosd dword ptr [rdi], eax ; ret 0x3366
0x00000200004734b7 : stosd dword ptr [rdi], eax ; ret 0x48ff
0x00000200007d273d : stosd dword ptr [rdi], eax ; ret 0x8349
0x000002000049c87c : stosd dword ptr [rdi], eax ; ret 0x84ff
0x00000200000811a1 : stosd dword ptr [rdi], eax ; ret 0x894c
0x00000200003d25e9 : stosd dword ptr [rdi], eax ; ret 0x8b44
0x00000200006f63f1 : stosd dword ptr [rdi], eax ; ret 0xb8ff
0x00000200000fcf03 : stosd dword ptr [rdi], eax ; ret 0xc0ff
0x00000200001c0e68 : stosd dword ptr [rdi], eax ; ret 0xd148
0x00000200006f5179 : stosd dword ptr [rdi], eax ; ret 0xe8ff
0x00000200006d29b9 : stosd dword ptr [rdi], eax ; ret 0xebff
0x000002000052c9ad : stosd dword ptr [rdi], eax ; ret 0xfff
0x00000200000ef026 : stosd dword ptr [rdi], eax ; rol byte ptr [rax], 0 ; add byte ptr [rax + rcx*4 - 0x55], al ; ret 0
0x00000200000be891 : stosd dword ptr [rdi], eax ; ror byte ptr [rax + 0x31887], 1 ; add al, ch ; ret 0
0x0000020000143aed : stosd dword ptr [rdi], eax ; ror dword ptr [rax + 0x6650144c], -1 ; ret
0x00000200000c60be : stosd dword ptr [rdi], eax ; ror dword ptr [rcx - 0x77], 0x4c ; ror byte ptr [rax], 1 ; ret
0x0000020000647f29 : stosd dword ptr [rdi], eax ; ror dword ptr [rdx - 0x77], 0xc ; ret 0x438b
0x0000020000508f81 : stosd dword ptr [rdi], eax ; stc ; ret
0x00000200005cbeb9 : stosd dword ptr [rdi], eax ; sti ; ret 0x90ff
0x000002000015283f : stosd dword ptr [rdi], eax ; sub byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000587025 : stosd dword ptr [rdi], eax ; test al, 0xe6 ; jmp qword ptr [rcx]
0x000002000009f482 : str word ptr [r9 - 0x75] ; ret 0x48f0
0x00000200000d4089 : str word ptr [rax + 0x33] ; add cl, byte ptr [rcx + 0x23] ; ret
0x00000200000b1d42 : str word ptr [rax + 0x33] ; add dword ptr [rcx + 0x23], ecx ; ret
0x00000200004f0972 : str word ptr [rax + 0x3b] ; ret 0x830f
0x00000200004e187f : str word ptr [rax + 0x63] ; ret 0x8b41
0x00000200000b213c : str word ptr [rax + 0xb] ; ret 0x8948
0x00000200000f70ad : str word ptr [rax + 3] ; int 0xff
0x00000200000f2603 : str word ptr [rax + 3] ; ret 0xe0ff
0x00000200004f0b14 : str word ptr [rax - 0x73] ; add ecx, dword ptr [r9 + 0x3b] ; ret
0x000002000009bcb1 : str word ptr [rax - 0x73] ; sub r8b, r13b ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000200004ecbd8 : str word ptr [rax - 0x75] ; push rdx ; sbb dh, dh ; ret 0x4801
0x000002000009010a : str word ptr [rax - 0x75] ; ret
0x00000200005bafff : str word ptr [rax - 0x75] ; ret 0x3b49
0x0000020000094604 : str word ptr [rax - 0x75] ; ret 0xc2f6
0x0000020000661d1c : str word ptr [rax - 0x7b] ; ret 0x3074
0x00000200004f05aa : str word ptr [rbp + 0x3b] ; ret
0x000002000009eb6e : str word ptr [rbp - 0x7b] ; ret 0x850f
0x00000200002364e8 : str word ptr [rbx + 0x440f48cf] ; ret 0x8d48
0x00000200004e1764 : str word ptr [rbx + rcx*4 + 5] ; ret
0x0000020000098d25 : str word ptr [rbx - 0x74bb50bb] ; ret
0x00000200000a7994 : str word ptr [rbx - 0x75] ; push rsp ; ret 0xc708
0x00000200000a2941 : str word ptr [rcx - 0x75] ; ret
0x000002000009f483 : str word ptr [rcx - 0x75] ; ret 0x48f0
0x00000200004ecee4 : str word ptr [rdi] ; mov edx, 0x820f09e1 ; ret 0xf54
0x00000200004f0b13 : str word ptr es:[rax - 0x73] ; add ecx, dword ptr [r9 + 0x3b] ; ret
0x0000020000223f3a : sub ah, bl ; dec dword ptr [rax - 0x75] ; ret
0x0000020000196485 : sub ah, byte ptr [rax] ; int1 ; push rsi ; ret
0x0000020000048ec3 : sub ah, byte ptr [rsi + 0x23] ; ret 0x3b66
0x000002000014b9f9 : sub ah, byte ptr [rsi - 9] ; ret 0x200
0x000002000003dee0 : sub al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x850f
0x00000200004cc12d : sub al, 0 ; add byte ptr [rbx], dh ; ret 0x8b48
0x0000020000045310 : sub al, 0 ; add rsp, 0x28 ; ret
0x000002000002a538 : sub al, 0 ; je 0x2000002a53a ; mov rax, qword ptr [rdx + 0x40] ; ret
0x0000020000052b99 : sub al, 0 ; movdqu xmmword ptr [rcx], xmm0 ; ret
0x0000020000228342 : sub al, 0 ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000227e02 : sub al, 0 ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000044dbc : sub al, 0 ; ret
0x0000020000446861 : sub al, 0x20 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; fucomi st(3) ; ret 0x3345
0x0000020000517e40 : sub al, 0x2e ; ret 0x48ff
0x00000200006dd436 : sub al, 0x34 ; ret 0xff92
0x0000020000689066 : sub al, 0x3b ; ret 0x820f
0x00000200000dbdeb : sub al, 0x3b ; ret 0x830f
0x00000200000dc699 : sub al, 0x3b ; ret 0xe273
0x000002000059d2b6 : sub al, 0x3b ; test dword ptr [rdi + 0x72000000], ecx ; ret 0xdb33
0x00000200003d14f0 : sub al, 0x42 ; ret
0x000002000013c0fd : sub al, 0x43 ; cmove edx, ecx ; movsxd rax, edx ; jmp 0x2000013c11e
0x0000020000633118 : sub al, 0x46 ; ret 0x48ff
0x0000020000039323 : sub al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000051b6cc : sub al, 0x48 ; mov ecx, dword ptr [rbp - 0x19] ; call 0x20000148078
0x00000200003c8569 : sub al, 0x48 ; mov edx, dword ptr [rdx + 8] ; mov ecx, dword ptr [rsi + 0x28] ; call rax
0x00000200004d16e1 : sub al, 0x4c ; lea ecx, dword ptr [rdx + rax*8] ; jmp 0x200004d16a2
0x00000200004d16e0 : sub al, 0x4c ; lea ecx, dword ptr [rdx + rax*8] ; jmp 0x200004d16a3
0x00000200006177d0 : sub al, 0x58 ; ret
0x00000200004af010 : sub al, 0x63 ; ret
0x00000200007d108c : sub al, 0x6b ; ret 0x8bff
0x0000020000626810 : sub al, 0x72 ; ret 0xebff
0x0000020000582a41 : sub al, 0x85 ; sal byte ptr [rax + rbp - 0x75], cl ; ret 0xc148
0x0000020000582cce : sub al, 0x85 ; sal byte ptr [rsp + rsi - 0x75], cl ; ret 0xffb9
0x00000200004b4753 : sub al, 0x88 ; or ecx, dword ptr [rax - 1] ; ret
0x000002000007f07e : sub al, 0x8b ; inc byte ptr [rcx - 0x75] ; ret 0x2b49
0x00000200001286e5 : sub al, 0x8b ; ret
0x000002000071e025 : sub al, 0x8b ; ret 0xba0f
0x0000020000150844 : sub al, 0x8b ; ret 0xc148
0x0000020000539837 : sub al, 0x8b ; ret 0xff48
0x0000020000667514 : sub al, 0x8b ; sub byte ptr [rbx], r15b ; sal byte ptr [rbp + rsi + 0x2b], 1 ; ret 0x8d48
0x0000020000601240 : sub al, 0x9a ; mov bl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005a9a42 : sub al, 0xa9 ; jmp 0x1ffc35de04e
0x00000200007d61bd : sub al, 0xb2 ; call qword ptr [rcx]
0x00000200006ee127 : sub al, 0xb2 ; test eax, 0x2e3bd285 ; ret 0x39
0x00000200000e4590 : sub al, 0xc ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rdx]
0x00000200005c8dce : sub al, 0xc3 ; call qword ptr [rax - 0x144f3d17]
0x00000200004a9201 : sub al, 0xc3 ; lea rax, qword ptr [rcx + 0x3c] ; ret
0x0000020000479918 : sub al, 0xc8 ; mov rcx, rbp ; call 0x2000009e098
0x00000200006dd3a0 : sub al, 0xca ; ret 0xff92
0x0000020000653d0f : sub al, 0xcb ; dec dword ptr [rbx - 0x76bd6ffc] ; ret
0x000002000066dc89 : sub al, 0xcd ; jmp qword ptr [rbx]
0x000002000066d51c : sub al, 0xcd ; jmp qword ptr [rdx]
0x000002000024c621 : sub al, 0xd2 ; fcomp st(0), st(0) ; ror dword ptr [rcx - 0x75], 1 ; ret 0x8b4d
0x00000200003d8d59 : sub al, 0xd7 ; dec dword ptr [rax - 0x7f] ; ret
0x00000200004f61cc : sub al, 0xe2 ; ret 0x48ff
0x0000020000112475 : sub al, 0xe8 ; lea ecx, dword ptr [rip + 0x3b41fff4] ; ret
0x000002000000a310 : sub al, 0xe9 ; adc al, 0 ; ret
0x0000020000478ad4 : sub al, 0xeb ; ret 0x3ce8
0x0000020000462d05 : sub al, 0xf ; xchg edi, esi ; loope 0x20000462d29 ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x0000020000701fb0 : sub al, 0xf1 ; ret
0x000002000066d17d : sub al, 0xf6 ; ret 0x7401
0x000002000011e7fc : sub al, 0xf7 ; ret
0x00000200005189f0 : sub al, 0xf8 ; loopne 0x200005189fc ; test rax, rax ; je 0x20000518a04 ; call rax
0x000002000012cafa : sub al, 0xff ; ror dword ptr [rdi], -0x49 ; ret
0x0000020000044c57 : sub al, 2 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000023003e : sub al, 3 ; ret
0x00000200000bd230 : sub al, 3 ; ret 0xff25
0x0000020000512365 : sub al, 5 ; pop rbp ; ret
0x00000200001298e5 : sub al, 8 ; add dh, dh ; ret
0x0000020000424594 : sub al, bl ; ret
0x000002000053f9ae : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005070c5 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000648f79 : sub al, byte ptr [rax] ; add byte ptr [rcx - 0x74cbdbbc], cl ; ret 0x2b41
0x0000020000075c27 : sub al, byte ptr [rax] ; dec byte ptr [rax - 0x75] ; ret
0x000002000005ccdf : sub al, byte ptr [rax] ; ret
0x00000200004560d8 : sub al, byte ptr [rbp - 0x74d28701] ; ret
0x000002000058268b : sub al, byte ptr [rbp - 0x74dd8b2e] ; ret 0xc148
0x00000200005d8cd2 : sub al, byte ptr [rbx - 0x39] ; call qword ptr [rax - 0x113d4b17]
0x0000020000644a10 : sub al, byte ptr [rcx + 0x3b] ; ret 0x1b76
0x0000020000143294 : sub al, byte ptr [rcx + 0xf] ; mov dh, 0x45 ; add byte ptr [rbx], bh ; ret
0x0000020000140260 : sub al, byte ptr [rcx - 0x3a] ; add ch, byte ptr [rsi] ; inc r10 ; jmp 0x20000140284
0x00000200001a43b3 : sub al, byte ptr [rcx - 0x75] ; ret 0x20ba
0x00000200004d06e1 : sub al, byte ptr [rcx - 0xa] ; ret 0xf03
0x000002000005949c : sub al, byte ptr [rcx - 9] ; ret 0
0x000002000013ff42 : sub al, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200004bb49a : sub al, byte ptr [rdi] ; ret
0x000002000052c026 : sub al, ch ; adc al, 0xb5 ; ret 0x8bff
0x000002000051f9e5 : sub al, ch ; in eax, -0x7a ; ret 0x8bff
0x000002000043f781 : sub al, ch ; in eax, dx ; ret
0x0000020000227324 : sub al, ch ; jbe 0x200002272d5 ; dec dword ptr [rax + 0x3b] ; ret
0x000002000009bcb6 : sub al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000200003fe03c : sub al, ch ; ret
0x0000020000194908 : sub al, ch ; ret 0x954
0x00000200006c6178 : sub al, ch ; ret 0xa913
0x00000200005fadca : sub al, ch ; ret 0xffe6
0x000002000066e8b9 : sub al, ch ; xchg eax, ebp ; ret 0xffea
0x0000020000147b8c : sub al, cl ; ret
0x000002000064db13 : sub ax, dx ; jmp 0x2000064db2f
0x000002000018d30c : sub bh, 0xff ; mov byte ptr [rip + 0x194d31], dl ; ret
0x000002000053b944 : sub bh, al ; sar bh, 0x8b ; ret
0x000002000046f741 : sub bh, bh ; ret
0x000002000050f2e3 : sub bh, bh ; ret 0x1ae9
0x000002000002d07d : sub bh, bh ; ret 0x3b41
0x000002000015bb47 : sub bh, bh ; ret 0x5589
0x00000200000fcf7c : sub bh, bh ; ret 0xc1ff
0x00000200006c065d : sub bh, bh ; ret 0xfa83
0x0000020000237c2d : sub bh, bh ; ret 0xff41
0x000002000056993a : sub bh, bl ; jrcxz 0x20000569944 ; mov dword ptr [rcx + 0x1c], eax ; ret
0x0000020000559565 : sub bh, dh ; ret 0xf00
0x00000200001fc46a : sub bl, 3 ; mov edx, dword ptr [rdx + 0x10] ; mov eax, edx ; ret
0x000002000047a54c : sub bl, al ; jmp 0x2000047a54e
0x000002000000950b : sub bl, al ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200003d3f8a : sub bl, al ; mov eax, 0xc00000bb ; ret
0x00000200001d3ab2 : sub bl, al ; mov rax, qword ptr [rip + 0x1d5add] ; ret
0x0000020000231589 : sub bl, al ; movzx eax, word ptr [rcx] ; ret
0x00000200000c74e2 : sub bl, al ; xor al, al ; add rsp, 0x28 ; ret
0x00000200000852f2 : sub bl, al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200005e4b60 : sub bl, bpl ; add ecx, dword ptr [rax - 0x75] ; ret
0x0000020000471135 : sub bl, byte ptr [rax] ; ret
0x00000200005e1d22 : sub bl, byte ptr [rsi - 0x74b70010] ; ret 0x49f0
0x0000020000646bd2 : sub bl, ch ; add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c28
0x00000200005e4b61 : sub bl, ch ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200003dfe36 : sub bl, ch ; ret 0xcccc
0x00000200006a01cb : sub bl, ch ; ret 0xceb
0x0000020000042927 : sub bl, ch ; ror ah, 0xcc ; lock dec dword ptr [rcx] ; ret
0x000002000021dd47 : sub bl, dh ; movq qword ptr [r8 + 0x10], mm0 ; ret
0x000002000021dd46 : sub bl, sil ; movq qword ptr [r8 + 0x10], mm0 ; ret
0x00000200007c5527 : sub byte ptr [r11 + 0x234803e1], r8b ; ret 0xc148
0x0000020000479c49 : sub byte ptr [r11], r14b ; shr al, cl ; ret 0xf0ff
0x00000200004cf0f2 : sub byte ptr [r11], r15b ; ret
0x000002000047a85f : sub byte ptr [r11], sil ; shr al, cl ; sub byte ptr [rax], bh ; ret 0x48ff
0x000002000051d885 : sub byte ptr [r13 + 0x490f48c9], r8b ; ret
0x00000200003e9593 : sub byte ptr [r13 - 0x7b], r8b ; sal byte ptr [rbx + rbx*2 + 0x44], 0x3b ; ret
0x000002000015c713 : sub byte ptr [r15 + rcx - 0x51], r8b ; ret 0x40b9
0x0000020000029b88 : sub byte ptr [r15], cl ; test edi, ebx ; adc eax, dword ptr [rax] ; call rdi
0x00000200004f0970 : sub byte ptr [r15], r9b ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x00000200005f35b3 : sub byte ptr [r15], r9b ; mov bh, 0x45 ; and ah, byte ptr [rsi + 0x23] ; ret 0xc166
0x000002000079ffb8 : sub byte ptr [r8 + 0x23], cl ; ret 0x3148
0x00000200000a6554 : sub byte ptr [r8 + 0x23], cl ; ret 0xba48
0x000002000004b7f5 : sub byte ptr [r8 + 0x23], cl ; ret 0xc148
0x0000020000018345 : sub byte ptr [r8 + 0x23], r9b ; ret 0x3148
0x00000200000799f7 : sub byte ptr [r8 + 0x23], r9b ; ret 0x8d48
0x000002000014e9ab : sub byte ptr [r8 + 0xf], cl ; ret
0x000002000070a86e : sub byte ptr [r8 + 3], cl ; ret 0x348
0x00000200001d60c2 : sub byte ptr [r8 + 3], cl ; ret 0x349
0x000002000078da1e : sub byte ptr [r8 + 3], r9b ; ret 0x8948
0x000002000051fdb2 : sub byte ptr [r8 - 0x73], r9b ; push rbp ; loopne 0x2000051fda8 ; ret
0x00000200005f9eb7 : sub byte ptr [r8 - 0x75], r9b ; or byte ptr [rax - 0x7d], cl ; ret
0x0000020000487e10 : sub byte ptr [r8 - 0x75], r9b ; push rdi ; sub dh, dh ; ret 0x740f
0x0000020000487839 : sub byte ptr [r8 - 0x75], r9b ; push rdi ; sub dh, dh ; ret 0xf0f
0x00000200000d562f : sub byte ptr [r8 - 0x75], r9b ; ret
0x00000200000aa733 : sub byte ptr [r8 - 0x75], r9b ; ret 0xc148
0x00000200005389fa : sub byte ptr [r8 - 0x77], r9b ; add ebx, ebp ; ret
0x0000020000138c0c : sub byte ptr [r8 - 0x7d], r9b ; ret
0x00000200000b98da : sub byte ptr [r8 - 0x80], al ; call qword ptr [rcx]
0x00000200000df138 : sub byte ptr [r9 + 0x23], r9b ; ret
0x0000020000547ab3 : sub byte ptr [r9 + 0x3b], cl ; ret
0x00000200000bd22b : sub byte ptr [r9 - 0x75], r8b ; push rbp ; sub al, 3 ; ret 0xff25
0x000002000048794b : sub byte ptr [r9 - 0x75], r9b ; push rdi ; sub dh, dh ; ret 0xf0f
0x0000020000693347 : sub byte ptr [r9], r8b ; add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x775
0x0000020000018346 : sub byte ptr [rax + 0x23], cl ; ret 0x3148
0x00000200001fbbe0 : sub byte ptr [rax + 0x23], cl ; ret 0x894c
0x00000200000799f8 : sub byte ptr [rax + 0x23], cl ; ret 0x8d48
0x00000200000a6555 : sub byte ptr [rax + 0x23], cl ; ret 0xba48
0x000002000004b7f6 : sub byte ptr [rax + 0x23], cl ; ret 0xc148
0x00000200001efdfa : sub byte ptr [rax + 0x33], cl ; ret 0x2348
0x00000200002281dc : sub byte ptr [rax + 0x3b], cl ; or byte ptr [r15], cl ; xchg eax, ebx ; ret
0x00000200002281fe : sub byte ptr [rax + 0x3b], cl ; or byte ptr [r15], cl ; xchg eax, edi ; ret
0x00000200002281ed : sub byte ptr [rax + 0x3b], cl ; or byte ptr [r15], cl ; xchg eax, edx ; ret
0x000002000022820f : sub byte ptr [rax + 0x3b], cl ; or byte ptr [r15], cl ; xchg eax, esi ; ret
0x00000200000c0d39 : sub byte ptr [rax + 0x3b], cl ; ret
0x00000200005e2abc : sub byte ptr [rax + 0x3b], cl ; ret 0x1376
0x00000200007ce710 : sub byte ptr [rax + 0x3b], cl ; ret 0x267d
0x00000200000511c9 : sub byte ptr [rax + 0x3b], cl ; ret 0x460f
0x00000200006715bd : sub byte ptr [rax + 0xc], bh ; ret
0x000002000014e9ac : sub byte ptr [rax + 0xf], cl ; ret
0x00000200004ee3e8 : sub byte ptr [rax + 3], cl ; ret 0x348
0x00000200001d60c3 : sub byte ptr [rax + 3], cl ; ret 0x349
0x000002000078da1f : sub byte ptr [rax + 3], cl ; ret 0x8948
0x0000020000550bb2 : sub byte ptr [rax + 3], cl ; ret 0xeeb
0x00000200004ee3e7 : sub byte ptr [rax + 3], r9b ; ret 0x348
0x0000020000139f4d : sub byte ptr [rax + rax + 0x33c30000], 0xc0 ; ret
0x00000200004b8aed : sub byte ptr [rax + rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000002000022ba6c : sub byte ptr [rax + rax], ch ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200005b0cbc : sub byte ptr [rax + rcx*4 + 0x64], al ; and al, 0x20 ; call 0x2000045cedc
0x000002000066dd81 : sub byte ptr [rax - 0x1000000], bh ; ret 0x163b
0x0000020000048783 : sub byte ptr [rax - 0x3f], cl ; call 0x1ffc32fcf9e
0x00000200004255ce : sub byte ptr [rax - 0x6af0d707], al ; ret 0xba0f
0x000002000000a336 : sub byte ptr [rax - 0x73], cl ; add eax, 0x150462 ; ret
0x0000020000705e84 : sub byte ptr [rax - 0x73], cl ; and al, 0x20 ; call r8
0x00000200007bb053 : sub byte ptr [rax - 0x73], cl ; and al, 0x30 ; call 0x200005672bc
0x000002000021c854 : sub byte ptr [rax - 0x73], cl ; mov bh, bh ; ret
0x000002000051fdb3 : sub byte ptr [rax - 0x73], cl ; push rbp ; loopne 0x2000051fda7 ; ret
0x00000200001bb74f : sub byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret 0xec75
0x00000200001dc40f : sub byte ptr [rax - 0x75], cl ; add eax, 0x116371 ; call qword ptr [rax]
0x000002000022df8b : sub byte ptr [rax - 0x75], cl ; add eax, 0xcb8bd ; call rax
0x00000200007ad9ad : sub byte ptr [rax - 0x75], cl ; fdiv st(7) ; ret
0x00000200005f9eb8 : sub byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200001b6de6 : sub byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x0000020000487e11 : sub byte ptr [rax - 0x75], cl ; push rdi ; sub dh, dh ; ret 0x740f
0x000002000048783a : sub byte ptr [rax - 0x75], cl ; push rdi ; sub dh, dh ; ret 0xf0f
0x000002000000a8e2 : sub byte ptr [rax - 0x75], cl ; ret
0x00000200000164cb : sub byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200004ee063 : sub byte ptr [rax - 0x75], cl ; ret 0x8349
0x0000020000054ec7 : sub byte ptr [rax - 0x75], cl ; ret 0x8445
0x000002000045efb7 : sub byte ptr [rax - 0x75], cl ; ret 0x8548
0x0000020000428853 : sub byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000007e8af : sub byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x00000200000aa734 : sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000009563 : sub byte ptr [rax - 0x75], cl ; ret 0xc984
0x000002000062265b : sub byte ptr [rax - 0x75], cl ; ret 0xd233
0x000002000042dbcd : sub byte ptr [rax - 0x75], cl ; ret 0xf44
0x0000020000618f36 : sub byte ptr [rax - 0x75], cl ; ror dword ptr [rax + 0xf], -0x51 ; ret 0x3d48
0x000002000054dae8 : sub byte ptr [rax - 0x75], cl ; sbb byte ptr [r13 - 0x75], al ; ret 0x4466
0x000002000002da28 : sub byte ptr [rax - 0x75], cl ; sbb ecx, dword ptr [rax - 0x75] ; ret
0x000002000053703d : sub byte ptr [rax - 0x75], cl ; xlatb ; call 0x20000157547
0x000002000053703c : sub byte ptr [rax - 0x75], cl ; xlatb ; call 0x20000157548
0x00000200005e4aab : sub byte ptr [rax - 0x75], cl ; xor al, r13b ; ret
0x000002000001c2f6 : sub byte ptr [rax - 0x75], r9b ; ret
0x00000200005389fb : sub byte ptr [rax - 0x77], cl ; add ebx, ebp ; ret
0x00000200005a9b26 : sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call 0x200001d1a05
0x00000200004882aa : sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x00000200005a2594 : sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r15
0x0000020000678240 : sub byte ptr [rax - 0x78], al ; jl 0x20000678271 ; and al, ch ; insd dword ptr [rdi], dx ; ret 0xffb8
0x000002000051f0e6 : sub byte ptr [rax - 0x7b], cl ; leave ; je 0x2000051f0fa ; call 0x20000148079
0x0000020000403bb8 : sub byte ptr [rax - 0x7b], cl ; ret
0x000002000070f440 : sub byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rdx + 0x48], 0x8b ; retf ; call rax
0x0000020000453812 : sub byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 4], 0x41 ; mov eax, edx ; ret
0x00000200007063a2 : sub byte ptr [rax - 0x7d], cl ; cmp dword ptr [rax], eax ; jne 0x2000070639b ; xor al, al ; ret
0x0000020000138c0d : sub byte ptr [rax - 0x7d], cl ; ret
0x0000020000230909 : sub byte ptr [rax - 0x7d], cl ; ret 0x4120
0x00000200002306d8 : sub byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000020000509f10 : sub byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000020000120847 : sub byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200000245c1 : sub byte ptr [rax - 0x7d], cl ; ret 0x4928
0x00000200006cafd8 : sub byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x00000200000d76d3 : sub byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x0000020000689132 : sub byte ptr [rax - 0x7d], cl ; ret 0x4c1c
0x0000020000420bc4 : sub byte ptr [rax - 0x7f], cl ; ret
0x0000020000666407 : sub byte ptr [rax - 0x7f], cl ; ret 0x7fff
0x00000200000879d5 : sub byte ptr [rax - 0x7f], cl ; ret 0xb0
0x000002000044801f : sub byte ptr [rax - 0x7f], cl ; ret 0xb40
0x00000200000b98db : sub byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200006c49e3 : sub byte ptr [rax - 1], cl ; ret
0x000002000023365c : sub byte ptr [rax - 1], cl ; ret 0x3b48
0x000002000023813c : sub byte ptr [rax - 1], cl ; ret 0x488b
0x00000200006c49e2 : sub byte ptr [rax - 1], r9b ; ret
0x0000020000052c40 : sub byte ptr [rax], 0x18 ; add byte ptr [rax], al ; ret
0x000002000010a4e0 : sub byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x35e9
0x00000200000e3b69 : sub byte ptr [rax], al ; add bl, bh ; add rsp, 0x28 ; ret
0x000002000011bc46 : sub byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000020000555dda : sub byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000200000b3c07 : sub byte ptr [rax], al ; add byte ptr [rax], al ; cmp dl, 0xff ; push rsi ; ret 0xf04
0x0000020000627ad4 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; ret
0x000002000069e43a : sub byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200002117bd : sub byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xb841
0x00000200004037fb : sub byte ptr [rax], al ; add rdx, rbx ; jmp rdx
0x000002000011b4b1 : sub byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000152840 : sub byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200001235b3 : sub byte ptr [rax], al ; call rax
0x0000020000124011 : sub byte ptr [rax], al ; je 0x20000124022 ; mov rax, qword ptr [rax + 0x48] ; ret
0x00000200003e94a6 : sub byte ptr [rax], al ; je 0x200003e94b4 ; mov dword ptr [rcx], edx ; mov al, 1 ; ret
0x0000020000442872 : sub byte ptr [rax], al ; je 0x20000442883 ; add rax, 0x10 ; ret
0x00000200001b8867 : sub byte ptr [rax], al ; jmp 0x200001b8831
0x00000200001dbdee : sub byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000009d9e9 : sub byte ptr [rax], al ; mov rax, qword ptr [rax + rcx*8] ; ret
0x00000200001cb0f4 : sub byte ptr [rax], al ; mov word ptr [r8 + 2], cx ; mov al, 1 ; ret
0x000002000009d9f5 : sub byte ptr [rax], al ; ret
0x00000200001289f2 : sub byte ptr [rax], al ; sete al ; ret
0x0000020000138c6d : sub byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000047a864 : sub byte ptr [rax], bh ; ret 0x48ff
0x0000020000052c41 : sub byte ptr [rax], bl ; add byte ptr [rax], al ; ret
0x00000200000e3b68 : sub byte ptr [rax], r8b ; add bl, bh ; add rsp, 0x28 ; ret
0x000002000047c555 : sub byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call 0x2000009e099
0x000002000001239d : sub byte ptr [rbp + 0x3b], cl ; ret
0x00000200000cb399 : sub byte ptr [rbp + 0x3b], cl ; ret 0x870f
0x000002000051d886 : sub byte ptr [rbp + 0x490f48c9], al ; ret
0x000002000015bc95 : sub byte ptr [rbp + 0x5b], bl ; ret
0x00000200003f9462 : sub byte ptr [rbp + 0xf], cl ; ret 0x8d48
0x0000020000432ba9 : sub byte ptr [rbp + 7], dh ; cmp qword ptr [rcx + 0x30], r8 ; jne 0x20000432bc2 ; ret
0x00000200000059f5 : sub byte ptr [rbp + rbp - 0x18], dh ; ret
0x0000020000045d6f : sub byte ptr [rbp + rcx*4 + 0x2c], cl ; ret
0x0000020000542123 : sub byte ptr [rbp + rcx*4 + 0x42], cl ; and byte ptr [rax - 0x7d], cl ; ret 0x4410
0x000002000064c0cb : sub byte ptr [rbp + rcx*4 + 0x4d], cl ; ret
0x0000020000502ec4 : sub byte ptr [rbp + rcx*4 + 0x4d], cl ; rol byte ptr [rbp + rcx*4 + 0x46], 1 ; ret 0x44c7
0x0000020000245e6c : sub byte ptr [rbp - 0x73], cl ; sbb byte ptr [r9 - 0x75], r8b ; ret 0x8b4c
0x00000200003d4815 : sub byte ptr [rbp - 0x74d18b2e], al ; ret 0xffb9
0x00000200001fda69 : sub byte ptr [rbp - 0x74f58740], al ; ret
0x00000200000354ff : sub byte ptr [rbp - 0x75], al ; inc byte ptr [rbp - 0x76] ; ret 0x8b44
0x00000200001966ae : sub byte ptr [rbp - 0x75], al ; ret
0x00000200006f63a8 : sub byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200001e8a0e : sub byte ptr [rbp - 0x75], cl ; adc bh, bh ; ret
0x00000200000a9794 : sub byte ptr [rbp - 0x75], cl ; ret
0x00000200000888be : sub byte ptr [rbp - 0x75], cl ; ret 0x8948
0x000002000004841e : sub byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200000463c1 : sub byte ptr [rbp - 0x75], cl ; ret 0x8d48
0x00000200006c09de : sub byte ptr [rbp - 0x75], cl ; retf ; mov dword ptr [rsp + 0x20], esi ; call r10
0x000002000055c859 : sub byte ptr [rbp - 0x76], al ; ret
0x00000200001e00d7 : sub byte ptr [rbp - 0x7b], al ; in al, -0x75 ; xor byte ptr [r15], cl ; xchg eax, ebp ; ret 0xc233
0x00000200003e9594 : sub byte ptr [rbp - 0x7b], al ; sal byte ptr [rbx + rbx*2 + 0x44], 0x3b ; ret
0x000002000052ddb9 : sub byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + 2], cl ; pop rbx ; ret
0x00000200000ae262 : sub byte ptr [rbx + 0x148d4dc8], cl ; ret 0x8b49
0x000002000004fccf : sub byte ptr [rbx + 0x17407fa], al ; ret
0x00000200007c5528 : sub byte ptr [rbx + 0x234803e1], al ; ret 0xc148
0x00000200000f2088 : sub byte ptr [rbx + 0x3f], dl ; add dh, dh ; ret
0x00000200001170af : sub byte ptr [rbx + 0x5f282444], cl ; pop rsi ; ret
0x000002000014c9f3 : sub byte ptr [rbx + 0x5f], bl ; pop r12 ; add rsp, 8 ; ret
0x000002000078f204 : sub byte ptr [rbx + 0x8894108], cl ; ret
0x00000200006691a6 : sub byte ptr [rbx + 6], dh ; mov eax, 0xc0000004 ; ret
0x0000020000669256 : sub byte ptr [rbx + 6], dh ; mov eax, 0xc0000095 ; ret
0x00000200006ae940 : sub byte ptr [rbx + rcx*4 - 0x3b], cl ; mov dword ptr [rsp + 0x20], r15d ; call rdi
0x000002000051585d : sub byte ptr [rbx + rcx*4 - 0x60], al ; in al, 1 ; add byte ptr [rax], al ; call rdi
0x000002000021198b : sub byte ptr [rbx + rdi + 0x41], cl ; and byte ptr [rdx + 3], dh ; xor al, al ; ret
0x00000200001364f4 : sub byte ptr [rbx - 0x10], dh ; mov rsp, r11 ; pop rbp ; ret
0x000002000022ba59 : sub byte ptr [rbx - 0x10], dh ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e4b18 : sub byte ptr [rbx - 0x168a003e], al ; xor eax, eax ; ret
0x00000200006b0428 : sub byte ptr [rbx - 0x74bbd33d], al ; ret
0x000002000063db04 : sub byte ptr [rbx], al ; ret 0x518d
0x00000200004cf0f3 : sub byte ptr [rbx], bh ; ret
0x0000020000667517 : sub byte ptr [rbx], bh ; sal byte ptr [rbp + rsi + 0x2b], 1 ; ret 0x8d48
0x00000200001162ae : sub byte ptr [rbx], dh ; leave ; call rax
0x000002000066a173 : sub byte ptr [rbx], dh ; ret 0x6c89
0x00000200006253f9 : sub byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000024d009
0x0000020000479c4a : sub byte ptr [rbx], dh ; shr al, cl ; ret 0xf0ff
0x000002000047a860 : sub byte ptr [rbx], dh ; shr al, cl ; sub byte ptr [rax], bh ; ret 0x48ff
0x0000020000667516 : sub byte ptr [rbx], r15b ; sal byte ptr [rbp + rsi + 0x2b], 1 ; ret 0x8d48
0x00000200000df139 : sub byte ptr [rcx + 0x23], cl ; ret
0x000002000002e613 : sub byte ptr [rcx + 0x2b], al ; ret
0x00000200002381ac : sub byte ptr [rcx + 0x2b], cl ; push rcx ; and byte ptr [rax - 1], cl ; ret 0x488b
0x0000020000547ab4 : sub byte ptr [rcx + 0x3b], cl ; ret
0x00000200007074fe : sub byte ptr [rcx + 0x4920244c], cl ; mov ecx, ebp ; call rax
0x0000020000708fa8 : sub byte ptr [rcx + 0x4920244c], cl ; mov ecx, esi ; call rax
0x000002000009a478 : sub byte ptr [rcx + 0x5c], al ; pop rbx ; ret
0x0000020000067792 : sub byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000001f0a4 : sub byte ptr [rcx + 0x5e], al ; ret
0x00000200007b2213 : sub byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000075de9 : sub byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rbx ; ret
0x000002000001fb1f : sub byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x000002000019f6b8 : sub byte ptr [rcx + 0x7c894c01], dh ; and al, 0x20 ; call rax
0x000002000005d090 : sub byte ptr [rcx + 0xf], al ; mov bh, 4 ; ret 0xc0ff
0x0000020000503375 : sub byte ptr [rcx + 0xf], al ; mov dh, 0x47 ; add dword ptr [rbx], ebp ; ret
0x00000200000ba61b : sub byte ptr [rcx + 0xfffe1], al ; add byte ptr [rax - 0x7f], cl ; ret 0xfff
0x0000020000692084 : sub byte ptr [rcx + 3], al ; ret 0x4489
0x000002000069211d : sub byte ptr [rcx + 3], al ; ret 0xca8b
0x00000200001f93bd : sub byte ptr [rcx + r15*8], spl ; or al, 1 ; mov byte ptr [rdx + 0x22], al ; ret
0x000002000070f8ad : sub byte ptr [rcx + rcx*4 + 0x4c], al ; and al, 0x20 ; mov r9, rbx ; call rax
0x000002000041bd21 : sub byte ptr [rcx + rcx*4 + 0x54], al ; and al, 0x20 ; call r11
0x00000200006be834 : sub byte ptr [rcx + rcx*4 + 0x64], al ; and al, 0x20 ; call r10
0x00000200004ca062 : sub byte ptr [rcx + rcx*4 + 0x6c], cl ; and al, 0x20 ; call r10
0x00000200004d401a : sub byte ptr [rcx + rcx*4 + 0x74], al ; and al, 0x20 ; call rbx
0x00000200006bf49a : sub byte ptr [rcx + rcx*4 + 0x74], cl ; and al, 0x20 ; call r10
0x00000200001f93be : sub byte ptr [rcx + rdi*8], ah ; or al, 1 ; mov byte ptr [rdx + 0x22], al ; ret
0x000002000048ac54 : sub byte ptr [rcx - 0x17dfdbbc], cl ; ret 0xc555
0x000002000078fca1 : sub byte ptr [rcx - 0x50], al ; add eax, ebp ; ret 0xd1ee
0x00000200000bd22c : sub byte ptr [rcx - 0x75], al ; push rbp ; sub al, 3 ; ret 0xff25
0x0000020000128643 : sub byte ptr [rcx - 0x75], al ; ret
0x0000020000249d57 : sub byte ptr [rcx - 0x75], al ; ret 0xbb41
0x0000020000003813 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000385f ; pop rsi ; ret
0x0000020000006f69 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000006fb5 ; pop rsi ; ret
0x0000020000007c03 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000007c6c ; ret
0x000002000000fee1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000ff48 ; ret
0x000002000001f4ff : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000001f568 ; ret
0x00000200000242c8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000024331 ; ret
0x000002000002b4bc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000002b525 ; ret
0x000002000003002b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000030079 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000030eaa : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000030f13 ; ret
0x0000020000031a89 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000031af0 ; ret
0x0000020000034366 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000343cd ; ret
0x000002000003aa94 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000003aafd ; ret
0x000002000003f706 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000003f76f ; ret
0x0000020000040a2f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000040a96 ; ret
0x0000020000040d16 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000040d7d ; ret
0x00000200000566df : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000056746 ; ret
0x000002000008606c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000860d3 ; ret
0x000002000008953e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000895a7 ; ret
0x000002000009347e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000934ca ; pop rsi ; ret
0x00000200000bbb62 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000bbbc9 ; ret
0x00000200000f8dab : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f8e14 ; ret
0x00000200000fc534 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000fc582 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000fd760 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000fd7c7 ; ret
0x0000020000112e0e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000112e75 ; ret
0x0000020000113f9d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000114006 ; ret
0x000002000011b68d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011b6f4 ; ret
0x000002000011bc86 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011bcef ; ret
0x0000020000120c4d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000120cb4 ; ret
0x000002000012105e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001210ac ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000012d279 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012d2e2 ; ret
0x000002000012dd99 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012de00 ; ret
0x000002000013049e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001304ec ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000013513f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001351a8 ; ret
0x0000020000135897 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001358fe ; ret
0x0000020000137447 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001374ae ; ret
0x000002000013a9ba : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013aa21 ; ret
0x0000020000142180 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001421e7 ; ret
0x0000020000144841 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001448aa ; ret
0x00000200001bcbe1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bcc30 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001bcdfd : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bce4b ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001bf135 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bf19e ; ret
0x00000200001bf56e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bf5d5 ; ret
0x00000200001c2673 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c26c1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001c4056 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c40a2 ; pop rsi ; ret
0x00000200001ca9a8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ca9f6 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001cc8c2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001cc929 ; ret
0x00000200001ce8b9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ce905 ; pop rdi ; ret
0x00000200001cf1f3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001cf25a ; ret
0x00000200001d592e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d5995 ; ret
0x00000200001d9a4c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d9ab3 ; ret
0x00000200001dc308 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001dc371 ; ret
0x00000200001e025e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e02c7 ; ret
0x00000200001e0540 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e05a9 ; ret
0x00000200001e1878 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e18e1 ; ret
0x00000200001f4cd2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001f4d39 ; ret
0x00000200001fb69f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fb706 ; ret
0x00000200001fb8f3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fb942 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001fbb71 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fbbbd ; pop rsi ; ret
0x00000200001fe7cc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fe835 ; ret
0x00000200002048d3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020491f ; pop rsi ; ret
0x0000020000204d74 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000204ddb ; ret
0x0000020000204fad : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000205014 ; ret
0x00000200002051f6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020525d ; ret
0x000002000020549d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200002054eb ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000205e5b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000205ec2 ; ret
0x0000020000206a99 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000206b00 ; ret
0x0000020000206c45 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000206cac ; ret
0x0000020000208375 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200002083dc ; ret
0x0000020000209273 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200002092da ; ret
0x00000200002093da : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000209428 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200002094bc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000209523 ; ret
0x0000020000209dd5 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000209e3e ; ret
0x000002000020c9dc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020ca28 ; pop rsi ; ret
0x0000020000216f05 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000216f6c ; ret
0x000002000021911e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000219185 ; ret
0x0000020000219219 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000219280 ; ret
0x000002000021e463 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000021e4ca ; ret
0x0000020000225033 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022509a ; ret
0x000002000022e577 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022e5c3 ; pop rsi ; ret
0x000002000022f9e2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022fa49 ; ret
0x00000200002374da : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000237543 ; ret
0x00000200002376b7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000023771e ; ret
0x00000200002379c9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000237a32 ; ret
0x0000020000238f82 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000238feb ; ret
0x00000200003caf19 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003caf65 ; pop rdi ; ret
0x00000200003cb0be : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003cb10d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003ccda0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003cce07 ; ret
0x00000200003d967d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003d96e4 ; ret
0x00000200003dc957 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003dc9be ; ret
0x00000200003e0045 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e0094 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003e2d7a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e2de1 ; ret
0x00000200003e72f7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e735e ; ret
0x00000200003e7871 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e78d8 ; ret
0x00000200003ecb90 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ecbf7 ; ret
0x00000200003ed4ae : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ed515 ; ret
0x00000200003f24f2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f2559 ; ret
0x00000200003f6403 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f646a ; ret
0x00000200003f66a5 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f670c ; ret
0x00000200003f7519 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f7582 ; ret
0x00000200003fa613 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fa67a ; ret
0x0000020000404c0d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000404c5c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004215cf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042161b ; pop rdi ; ret
0x000002000042d94b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042d997 ; pop rsi ; ret
0x0000020000436853 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043689f ; pop rdi ; ret
0x0000020000438c10 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000438c77 ; ret
0x00000200004410b9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000441105 ; pop rsi ; ret
0x000002000044547b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004454ca ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000447f1c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000447f83 ; ret
0x00000200004495d8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000449641 ; ret
0x00000200004496e8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000449734 ; pop rsi ; ret
0x000002000044ae1a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044ae81 ; ret
0x00000200004539ee : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000453a57 ; ret
0x000002000045492f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000454996 ; ret
0x0000020000459070 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004590bc ; pop rsi ; ret
0x000002000045c3ed : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045c456 ; ret
0x000002000045cdc9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045ce30 ; ret
0x00000200004654a0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004654ec ; pop rsi ; ret
0x0000020000466c35 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000466c81 ; pop rsi ; ret
0x0000020000467bca : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000467c31 ; ret
0x000002000046d4ee : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046d53d ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000474caa : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000474d11 ; ret
0x000002000047b121 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047b16d ; pop rsi ; ret
0x000002000048cb7d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000048cbc9 ; pop rdi ; ret
0x000002000049169a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004916e9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000491943 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049198f ; pop rsi ; ret
0x000002000049d1cc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049d233 ; ret
0x00000200004a1d30 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004a1d7c ; pop rsi ; ret
0x00000200004aa38a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004aa3f1 ; ret
0x00000200004b19a3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b19f1 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004c8869 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c88b5 ; pop rdi ; ret
0x00000200004e637c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e63e5 ; ret
0x00000200004e7655 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e76a4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004eff3b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004effa4 ; ret
0x00000200004fce02 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fce4e ; pop rdi ; ret
0x0000020000501f55 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000501fbe ; ret
0x0000020000502d2c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000502d78 ; pop rsi ; ret
0x0000020000509bcf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000509c1b ; pop rdi ; ret
0x0000020000509fb5 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050a01e ; ret
0x0000020000514f99 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000515000 ; ret
0x0000020000515c2a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000515c93 ; ret
0x0000020000516462 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005164c9 ; ret
0x000002000051888a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005188f1 ; ret
0x0000020000518a2b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000518a77 ; pop rsi ; ret
0x00000200005192d0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000519337 ; ret
0x00000200005198fb : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000519947 ; pop rsi ; ret
0x000002000051a94e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051a99a ; pop rsi ; ret
0x000002000051f2f7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051f345 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000052023f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052028d ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000522c36 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000522c9d ; ret
0x0000020000525ae6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000525b4d ; ret
0x00000200005263e6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052644d ; ret
0x000002000052aa64 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052aab2 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000531f37 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000531f9e ; ret
0x000002000053467b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005346e4 ; ret
0x000002000053881a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000538881 ; ret
0x000002000053afb6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053b01f ; ret
0x000002000053b959 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053b9c0 ; ret
0x000002000053ba7f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053bae8 ; ret
0x000002000053bb3e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053bba7 ; ret
0x000002000053dac2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053db29 ; ret
0x0000020000543ce8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000543d4f ; ret
0x000002000054b408 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054b46f ; ret
0x000002000054e46b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054e4d4 ; ret
0x00000200005501f4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055025b ; ret
0x00000200005510de : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055112a ; pop rsi ; ret
0x000002000055319f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000553208 ; ret
0x0000020000556f88 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000556fef ; ret
0x000002000055bc4f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055bcb6 ; ret
0x000002000055be75 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055bec1 ; pop rsi ; ret
0x000002000055cc4d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055ccb4 ; ret
0x0000020000560bb4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000560c1b ; ret
0x0000020000561c24 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000561c72 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005623fd : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000562464 ; ret
0x0000020000564716 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000056477d ; ret
0x0000020000565720 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000565787 ; ret
0x00000200005681be : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000056820c ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000569417 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000056947e ; ret
0x00000200005f1cfb : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f1d62 ; ret
0x00000200005fef94 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fefe0 ; pop rdi ; ret
0x000002000060467c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006046c8 ; pop rsi ; ret
0x0000020000607036 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000607085 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000607e9c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000607f05 ; ret
0x0000020000608743 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006087aa ; ret
0x0000020000609db9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000609e07 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000060e772 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060e7db ; ret
0x000002000060edd2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060ee3b ; ret
0x000002000060fd1e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060fd87 ; ret
0x0000020000611763 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006117cc ; ret
0x00000200006180f7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000618145 ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000618305 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061836c ; ret
0x000002000061ef3c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061efa5 ; ret
0x00000200006208db : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000620942 ; ret
0x0000020000622bb6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000622c1d ; ret
0x0000020000622da2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000622dee ; pop rdi ; ret
0x000002000062c1ea : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062c236 ; pop rsi ; ret
0x000002000062c314 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062c360 ; pop rsi ; ret
0x000002000062d776 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062d7dd ; ret
0x000002000062dd1a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062dd66 ; pop rdi ; ret
0x00000200006312fe : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000631365 ; ret
0x0000020000635803 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063586a ; ret
0x000002000063afbb : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063b022 ; ret
0x000002000063f167 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063f1ce ; ret
0x0000020000641aff : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000641b66 ; ret
0x0000020000649a72 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000649ad9 ; ret
0x000002000064c712 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064c760 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000064c899 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064c900 ; ret
0x000002000064ca49 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064cab0 ; ret
0x000002000064e08a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064e0f1 ; ret
0x000002000064fcbf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064fd26 ; ret
0x000002000065c6ac : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065c713 ; ret
0x000002000065cbed : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065cc54 ; ret
0x000002000065d4f1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065d55a ; ret
0x000002000065fb09 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065fb72 ; ret
0x0000020000663a92 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000663af9 ; ret
0x00000200006642f7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000664343 ; pop rsi ; ret
0x0000020000666273 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006662dc ; ret
0x000002000066bd5f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066bdab ; pop rsi ; ret
0x000002000066ce8d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066cef6 ; ret
0x00000200006717d8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067183f ; ret
0x000002000067436d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006743d4 ; ret
0x0000020000677cf8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000677d61 ; ret
0x000002000067d50e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067d575 ; ret
0x000002000067d65d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067d6c4 ; ret
0x000002000067da9d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067db04 ; ret
0x000002000067dbe2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067dc49 ; ret
0x000002000067e428 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067e48f ; ret
0x000002000067fb9e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067fc05 ; ret
0x0000020000682482 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006824ce ; pop rdi ; ret
0x00000200006832fc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000683363 ; ret
0x000002000068c12d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068c194 ; ret
0x000002000068e4d7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068e53e ; ret
0x000002000068fdb2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068fdfe ; pop rsi ; ret
0x0000020000691381 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006913e8 ; ret
0x0000020000695b1c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000695b83 ; ret
0x0000020000697c18 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000697c66 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000069ac45 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069acac ; ret
0x00000200006a2ed4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006a2f3d ; ret
0x00000200006a49a3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006a4a0a ; ret
0x00000200006a8cf1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006a8d58 ; ret
0x00000200006ae521 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ae58a ; ret
0x00000200006b00f3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006b0141 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006b1ffe : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006b2065 ; ret
0x00000200006b21e1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006b222f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006bca6a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006bcab6 ; pop rsi ; ret
0x00000200006c73c0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c7429 ; ret
0x00000200006cd6c3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006cd70f ; pop rsi ; ret
0x00000200006d41e1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006d422f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006d4a6d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006d4ad4 ; ret
0x00000200006d738c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006d73da ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006dbf26 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006dbf72 ; pop rsi ; ret
0x00000200006dc025 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006dc071 ; pop rsi ; ret
0x00000200006dc109 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006dc155 ; pop rsi ; ret
0x00000200006dc1ce : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006dc235 ; ret
0x00000200006e0ed0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006e0f37 ; ret
0x00000200006e6670 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006e66bc ; pop rdi ; ret
0x00000200006e6b75 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006e6bc1 ; pop rsi ; ret
0x0000020000701f80 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000701fe7 ; ret
0x0000020000704d3f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000704da8 ; ret
0x000002000070e9a3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000070ea0c ; ret
0x0000020000710573 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007105dc ; ret
0x0000020000710643 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007106ac ; ret
0x0000020000712978 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007129e1 ; ret
0x0000020000715254 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007152a0 ; pop rsi ; ret
0x000002000079570d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000795776 ; ret
0x00000200007960a4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000079610b ; ret
0x0000020000799867 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007998ce ; ret
0x00000200007a0f55 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007a0fa1 ; pop rsi ; ret
0x00000200007ac78f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007ac7f6 ; ret
0x00000200007b2472 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b24be ; pop rsi ; ret
0x00000200007b2cbc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b2d23 ; ret
0x00000200007b7a30 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b7a97 ; ret
0x00000200007b8353 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b83bc ; ret
0x00000200007b886a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b88d1 ; ret
0x00000200007ba70b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007ba772 ; ret
0x00000200007ba8dc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007ba943 ; ret
0x00000200007bd248 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007bd294 ; pop rsp ; ret
0x00000200007cf3da : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007cf441 ; ret
0x00000200007d080d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007d0874 ; ret
0x00000200007d0f82 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007d0fe9 ; ret
0x00000200007d26cd : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007d271b ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000048794c : sub byte ptr [rcx - 0x75], cl ; push rdi ; sub dh, dh ; ret 0xf0f
0x000002000006f2e5 : sub byte ptr [rcx - 0x75], cl ; ret
0x00000200001f1086 : sub byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200001b137a : sub byte ptr [rcx - 0x77], cl ; and dil, dil ; ret 0x3b41
0x00000200001b1300 : sub byte ptr [rcx - 0x77], cl ; and dil, dil ; ret 0x533b
0x000002000055c963 : sub byte ptr [rcx - 0x78], al ; or dword ptr [rbp - 0x76], eax ; ret
0x0000020000051039 : sub byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x00000200001a4380 : sub byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x00000200000c6c06 : sub byte ptr [rcx - 1], al ; ret
0x00000200006ca535 : sub byte ptr [rcx - 1], al ; ret 0x3b45
0x0000020000147c79 : sub byte ptr [rcx - 1], al ; ret 0x8944
0x0000020000693348 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x775
0x00000200001123f8 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000017633c : sub byte ptr [rcx], al ; add byte ptr [rax], al ; jmp 0x2000011262f
0x00000200005c5e11 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x11 ; call rax
0x00000200000acac3 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200001d64cc : sub byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000002000078f1b4 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000010426c : sub byte ptr [rcx], bl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020d6a9 : sub byte ptr [rdi + 0x5b], bl ; ret
0x000002000003cc4b : sub byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x00000200001170b3 : sub byte ptr [rdi + 0x5e], bl ; ret
0x0000020000203b1d : sub byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000233657 : sub byte ptr [rdi + rcx + 0x43], cl ; sub byte ptr [rax - 1], cl ; ret 0x3b48
0x00000200001fd83f : sub byte ptr [rdi + rcx - 0x4a], al ; ret 0xc141
0x000002000015c714 : sub byte ptr [rdi + rcx - 0x51], al ; ret 0x40b9
0x00000200003cffb3 : sub byte ptr [rdi - 0xb], cl ; inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000196cec : sub byte ptr [rdi], ah ; int1 ; dec dword ptr [rax - 9] ; ret
0x00000200003d31d2 : sub byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004f0971 : sub byte ptr [rdi], cl ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x00000200000a2940 : sub byte ptr [rdi], cl ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200002282e9 : sub byte ptr [rdi], cl ; lahf ; ret
0x00000200005f35b4 : sub byte ptr [rdi], cl ; mov bh, 0x45 ; and ah, byte ptr [rsi + 0x23] ; ret 0xc166
0x00000200003fff0c : sub byte ptr [rdi], cl ; mov dh, 0xcb ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x00000200002282d5 : sub byte ptr [rdi], cl ; popfq ; ret
0x00000200002282df : sub byte ptr [rdi], cl ; pushfq ; ret
0x00000200002282f3 : sub byte ptr [rdi], cl ; sahf ; ret
0x0000020000029b89 : sub byte ptr [rdi], cl ; test edi, ebx ; adc eax, dword ptr [rax] ; call rdi
0x0000020000021af6 : sub byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200004255d1 : sub byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xba0f
0x00000200004c82c5 : sub byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rcx - 0x75], 0xe3 ; pop rdi ; ret
0x0000020000228307 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200007d10f1 : sub byte ptr [rdx + 6], bh ; call 0x200003f8b5d
0x00000200000b8986 : sub byte ptr [rdx], al ; je 0x200000b8998 ; bts qword ptr [rcx], 0xc ; ret
0x00000200003e559c : sub byte ptr [rdx], al ; ret 0x48ff
0x000002000020a569 : sub byte ptr [rdx], bl ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000025763 : sub byte ptr [rdx], dh ; add byte ptr [rbp + 3], dh ; xor al, al ; ret
0x0000020000038255 : sub byte ptr [rip + 0x24418b00], al ; ret
0x0000020000532589 : sub byte ptr [rip - 0x7ffffffb], ah ; pop r14 ; ret
0x000002000068a39a : sub byte ptr [rsi + 0x3b], ah ; ret 0x575
0x00000200000ec294 : sub byte ptr [rsi + 0x5b], bl ; ret
0x00000200000bdf6f : sub byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x00000200002331b4 : sub byte ptr [rsp + 0x40], bh ; mov rsp, r11 ; pop rbp ; ret
0x000002000048447f : sub byte ptr [rsp + rsi + 0x3490048], 0xd0 ; jmp rdx
0x00000200006a8201 : sub ch, byte ptr [rcx - 0x3b7cb701] ; pop rax ; ret
0x00000200006cde75 : sub cl, 0x30 ; mov byte ptr [rdx], cl ; mov al, 1 ; ret
0x0000020000176116 : sub cl, 0x5e ; ret 0xfff9
0x000002000007dfa9 : sub cl, 0xb6 ; rcl byte ptr [rax], 1 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004329e2 : sub cl, 0xea ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xf000
0x000002000061f6d4 : sub cl, bl ; ret 0x8bff
0x00000200000a6b44 : sub cl, bpl ; ret 0xfffa
0x000002000007e45f : sub cl, byte ptr [rax - 0x73] ; add qword ptr [r8 - 0x75], rcx ; ret
0x00000200002390d6 : sub cl, byte ptr [rax - 0x75] ; ret
0x00000200001f907a : sub cl, byte ptr [rax - 0x7d] ; call qword ptr [rax]
0x000002000068931f : sub cl, byte ptr [rax - 0x7d] ; ret 0x4d02
0x0000020000444aa5 : sub cl, byte ptr [rax] ; mov eax, r9d ; ret
0x000002000020197c : sub cl, byte ptr [rbx + rcx*4 - 0x3e] ; lea edx, dword ptr [rbx + 0x1e] ; call r9
0x00000200000f84d9 : sub cl, byte ptr [rbx] ; add byte ptr [rsi + 0x41], ah ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200001317d0 : sub cl, byte ptr [rcx + 0x3b] ; ret 0x820f
0x00000200000def16 : sub cl, byte ptr [rcx - 0x75] ; ret 0xb948
0x00000200005bb316 : sub cl, byte ptr [rcx - 0x7d] ; ret 0x4d02
0x0000020000155f12 : sub cl, byte ptr [rcx] ; add byte ptr [rax], al ; nop ; ret
0x00000200004f05a9 : sub cl, byte ptr [rdi] ; add byte ptr [rbp + 0x3b], cl ; ret
0x000002000020d713 : sub cl, byte ptr [rdi] ; add byte ptr [rbx], bh ; ret
0x0000020000693c54 : sub cl, byte ptr [rdx - 0x75] ; call qword ptr [rax]
0x00000200004d7c39 : sub cl, ch ; ret
0x00000200001b1db1 : sub cl, ch ; ret 0xf851
0x00000200000a6b45 : sub cl, ch ; ret 0xfffa
0x00000200000bf3a3 : sub cl, ch ; ret 0xfffd
0x000002000017ebdb : sub cl, ch ; stc ; ret 0xffec
0x00000200007b594b : sub cl, ch ; xor ecx, dword ptr [rsi] ; xchg eax, ecx ; call rcx
0x00000200006939f8 : sub dh, al ; add byte ptr [rax], al ; ret
0x00000200006939da : sub dh, al ; add byte ptr [rcx], al ; ret
0x00000200006904e7 : sub dh, al ; and al, 0x20 ; add eax, ebp ; ret 0x3d
0x00000200004252a1 : sub dh, bh ; ret 0xb60f
0x0000020000585dd2 : sub dh, byte ptr [rdx - 0x34] ; dec dword ptr [rbx - 0x74bbafab] ; ret
0x0000020000039e8a : sub dh, dh ; ret
0x00000200003f42ee : sub dh, dh ; ret 0x7401
0x000002000069a5b4 : sub dh, dh ; ret 0x7403
0x0000020000487e15 : sub dh, dh ; ret 0x740f
0x00000200004a85b0 : sub dh, dh ; ret 0x7540
0x00000200003ef3bf : sub dh, dh ; ret 0xf02
0x000002000048783e : sub dh, dh ; ret 0xf0f
0x000002000051e6e2 : sub dh, dh ; ret 0xf20
0x00000200003ee0fc : sub dh, dh ; rol dword ptr [rcx], 0x75 ; mov qword ptr [r9], r10 ; ret
0x000002000052a452 : sub dl, ah ; ret 0xfff
0x000002000072a463 : sub dl, byte ptr [rbp + 0x45e990ff] ; ret
0x000002000072a441 : sub dl, byte ptr [rbp - 0x42166f01] ; ret 0xffff
0x000002000049d4e2 : sub dl, byte ptr [rbx] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200005e198c : sub dl, byte ptr [rcx - 0x74b30010] ; ret
0x000002000016fa1b : sub dword ptr [rax + 0x3b], ecx ; ret
0x0000020000614d81 : sub dword ptr [rax + 0x63], ecx ; ret 0x694c
0x00000200005d1bd7 : sub dword ptr [rax + 1], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000016efa1 : sub dword ptr [rax + 7], edi ; ret
0x00000200001ad227 : sub dword ptr [rax - 0x49], eax ; add ecx, ebp ; ret 0xf7df
0x000002000006c6f7 : sub dword ptr [rax - 0x75], ecx ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000478d7d : sub dword ptr [rax - 0x75], ecx ; ret
0x00000200005cac31 : sub dword ptr [rax - 0x75], ecx ; ret 0x4cf0
0x00000200007d29bf : sub dword ptr [rax - 0x75], ecx ; ret 0x8348
0x00000200001c8954 : sub dword ptr [rax - 0x75], ecx ; ret 0xffb9
0x0000020000026984 : sub dword ptr [rax - 0x75], ecx ; sbb byte ptr [r9 - 0x7d], r9b ; ret 0x4108
0x00000200005fbc76 : sub dword ptr [rax - 0x77], ecx ; or dil, dil ; ret
0x000002000045c3a2 : sub dword ptr [rax - 0x7d], ecx ; ret
0x0000020000118c53 : sub dword ptr [rax - 0x7d], ecx ; ret 0x4904
0x0000020000197e85 : sub dword ptr [rax - 0xf], esp ; push rsi ; ret 0x7401
0x000002000013ca29 : sub dword ptr [rax - 1], ecx ; ret 0xe484
0x0000020000119a71 : sub dword ptr [rax], eax ; add rax, 0x3600 ; ret
0x000002000000f392 : sub dword ptr [rax], eax ; jb 0x2000000f3a4 ; mov al, 1 ; ret
0x00000200000213c1 : sub dword ptr [rax], eax ; jb 0x200000213d2 ; add rsp, 0x28 ; ret
0x0000020000084358 : sub dword ptr [rax], eax ; mov dword ptr [r9], eax ; ret
0x00000200000853a7 : sub dword ptr [rax], eax ; ret
0x000002000006fa40 : sub dword ptr [rbx + rcx*4 + 0x44], ecx ; and al, 0x68 ; call rax
0x000002000010f97f : sub dword ptr [rbx - 0x44], ebx ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4c08
0x0000020000176111 : sub dword ptr [rbx - 0x7fffffdb], edi ; jmp 0x20000112382
0x00000200000c04a6 : sub dword ptr [rbx], edi ; ret 0x820f
0x00000200001d9943 : sub dword ptr [rbx], edx ; idiv bh ; add rsp, 0x58 ; ret
0x000002000012242f : sub dword ptr [rbx], esi ; sal dh, cl ; ret
0x0000020000042862 : sub dword ptr [rcx + 0x3b], ecx ; ror byte ptr [rax - 0x75], 1 ; ret 0xf49
0x00000200005e2aab : sub dword ptr [rcx - 0x75], eax ; sbb byte ptr [rcx + 0x3b], al ; ret 0x2075
0x0000020000797345 : sub dword ptr [rcx - 0x76], eax ; add byte ptr [rcx + 0x3a], al ; ret
0x00000200006d3708 : sub dword ptr [rcx - 0x80], eax ; loopne 0x200006d3716 ; mov al, r8b ; ret
0x00000200003d7d74 : sub dword ptr [rcx - 0xa], eax ; ret 0x7401
0x00000200003cfa26 : sub dword ptr [rcx - 0xa], eax ; ret 0x7510
0x00000200006e3b79 : sub dword ptr [rcx - 1], eax ; ret 0x8348
0x00000200001408f2 : sub dword ptr [rcx - 1], ecx ; ret
0x00000200007ba25f : sub dword ptr [rcx], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000057b07 : sub dword ptr [rcx], ecx ; ret
0x000002000015e668 : sub dword ptr [rdi - 0x12], eax ; push rsi ; ret 0x7503
0x00000200007aaa03 : sub dword ptr [rdi - 0x4b], 0x58d48ff ; ret 0xffa5
0x00000200000ec961 : sub dword ptr [rdi], eax ; add bl, dh ; nop ; add rsp, 0x28 ; ret
0x000002000022004b : sub dword ptr [rdi], ecx ; add rsp, 0x28 ; ret
0x0000020000076cb9 : sub dword ptr [rdi], ecx ; mov bh, 0x51 ; add dh, dh ; ret 0x7501
0x00000200004e187a : sub dword ptr [rdi], ecx ; xchg dword ptr [rcx], esp ; loope 0x200004e1898 ; add byte ptr [rax + 0x63], cl ; ret 0x8b41
0x00000200000c3a1e : sub dword ptr [rdx], eax ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200006f6aa3 : sub dword ptr [rdx], ebp ; ret 0xbfff
0x0000020000052b7b : sub dword ptr [rdx], edx ; sub eax, 0xc12b4800 ; ret
0x00000200000bdb96 : sub dword ptr [rip + 0x264c0c], eax ; ret
0x000002000003573a : sub dword ptr [rip + 0x2ed028], edx ; ret
0x0000020000035732 : sub dword ptr [rip + 0x2ed038], edx ; ret
0x00000200007068df : sub dword ptr [rip - 0x3b7cb800], eax ; ret
0x00000200007cb892 : sub dword ptr [rsi - 0x8b70002], ecx ; ret
0x0000020000015c6b : sub dword ptr [rsi], esp ; jae 0x20000015c73 ; ret
0x0000020000598cb4 : sub dword ptr [rsp + 0xf70], esi ; call 0x200004d4f39
0x00000200006cdbf8 : sub dword ptr [rsp + rdx*2 - 1], esi ; ret 0x8348
0x000002000043b229 : sub eax, -0x80 ; add rsp, 0x28 ; ret
0x0000020000033102 : sub eax, -0x80 ; ret
0x0000020000044d15 : sub eax, 0x10000 ; add byte ptr [rax], al ; ret
0x00000200005bc504 : sub eax, 0x18c626 ; add al, 0xe9 ; ret 0xf790
0x0000020000494613 : sub eax, 0x20 ; ret
0x00000200000ce660 : sub eax, 0x271000 ; add byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x000002000003e095 : sub eax, 0x2ba ; add byte ptr [rbx], al ; ret 0xc23b
0x0000020000548edc : sub eax, 0x37 ; jmp 0x20000548ea7
0x00000200000cf916 : sub eax, 0x3b446600 ; ret 0x820f
0x000002000010226e : sub eax, 0x48000022 ; add esp, 0x28 ; ret
0x0000020000006cc0 : sub eax, 0x48c28b4c ; mov ecx, ebp ; call r14
0x000002000001c3f4 : sub eax, 0x48f47400 ; mov eax, dword ptr [rax + 8] ; ret
0x000002000056903f : sub eax, 0x48ffbd1c ; add esp, 0x68 ; ret
0x000002000044207f : sub eax, 0x48ffc2af ; add esp, 0x58 ; ret
0x000002000045623f : sub eax, 0x48ffce4a ; add esp, 0x50 ; pop rbx ; ret
0x0000020000029294 : sub eax, 0x51894800 ; or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200003d16c0 : sub eax, 0x58b0000 ; ret
0x000002000003f3c6 : sub eax, 0x830f002e ; add esi, ebx ; adc al, byte ptr [rax] ; ret
0x0000020000624f2e : sub eax, 0x83480000 ; ret 0x3b08
0x00000200006a9dff : sub eax, 0x8aff9bfb ; ret
0x00000200004162f7 : sub eax, 0x8b000000 ; ret
0x00000200004607df : sub eax, 0x8b000001 ; ret
0x000002000012d167 : sub eax, 0x8b000807 ; ret
0x0000020000082c2e : sub eax, 0x8b00109e ; ret
0x000002000059b231 : sub eax, 0x8b440015 ; ret
0x000002000013b2ba : sub eax, 0x8b4dd8f7 ; ret 0xd233
0x00000200001df7f5 : sub eax, 0x8bc00001 ; ret
0x000002000004ad04 : sub eax, 0x8bd00b00 ; ret 0x8d48
0x00000200006cc993 : sub eax, 0x8bffa749 ; ret
0x000002000047626f : sub eax, 0x8bffc71b ; ret
0x00000200005cd1cf : sub eax, 0x8bffc7fe ; ret
0x0000020000101c4f : sub eax, 0x8bfff542 ; ret
0x00000200007a648d : sub eax, 0x8bffffff ; ret
0x00000200001cfbb4 : sub eax, 0xba0f1275 ; out dx, eax ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000044d34 : sub eax, 0xc0034800 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000052b7d : sub eax, 0xc12b4800 ; ret
0x00000200000c9d86 : sub eax, 0xc2b4b00 ; ret 0x3b48
0x0000020000147b87 : sub eax, 0xf48f2c8 ; sub al, cl ; ret
0x00000200005d89b3 : sub eax, 0xf6c00001 ; ret
0x00000200001718d3 : sub eax, 0xf6fff923 ; ret 0xf07
0x00000200000dc519 : sub eax, 0xf6ffffff ; ret
0x00000200000ea090 : sub eax, 0xf7410000 ; ret 0x7ffe
0x0000020000225f80 : sub eax, 0xff48038a ; ret
0x000002000007bb1b : sub eax, 1 ; jle 0x2000007bb26 ; ret
0x0000020000010cf2 : sub eax, 1 ; jne 0x20000010ceb ; ret
0x00000200000365b6 : sub eax, 1 ; jne 0x200000365af ; ret
0x0000020000052c18 : sub eax, 1 ; jne 0x20000052c12 ; ret
0x00000200001170f9 : sub eax, 1 ; jne 0x200001170d6 ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x0000020000119897 : sub eax, 1 ; jne 0x20000119890 ; mov rax, rdx ; ret
0x0000020000119897 : sub eax, 1 ; jne 0x20000119891 ; mov rax, rdx ; ret
0x000002000011e7ce : sub eax, 1 ; jne 0x2000011e7cc ; ret
0x0000020000130d8a : sub eax, 1 ; jne 0x20000130d95 ; ret
0x00000200001b1332 : sub eax, 1 ; jne 0x200001b1322 ; jmp 0x2000013534c
0x00000200001fdbc4 : sub eax, 1 ; jne 0x200001fdbba ; ret
0x00000200004385b7 : sub eax, 1 ; jne 0x200004385b0 ; ret
0x00000200006adbc1 : sub eax, 1 ; jne 0x200006adbba ; ret
0x00000200007b7a67 : sub eax, 1 ; jne 0x200007b7a63 ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200001d4634 : sub eax, 1 ; jns 0x200001d462e ; or eax, 0xffffffff ; ret
0x0000020000211774 : sub eax, 1 ; jns 0x2000021176e ; mov eax, edx ; ret
0x0000020000211774 : sub eax, 1 ; jns 0x2000021176f ; mov eax, edx ; ret
0x0000020000143be5 : sub eax, 7 ; movzx eax, r8w ; ret
0x0000020000044ca4 : sub eax, dword ptr [r8] ; mov dword ptr [rcx + 8], eax ; mov rax, rcx ; ret
0x000002000044b28d : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000044d89 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000049297b : sub eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000115a3e : sub eax, dword ptr [rax] ; add rsp, 0x58 ; pop rdi ; pop rbx ; ret
0x00000200000f5c71 : sub eax, dword ptr [rax] ; dec eax ; ret
0x000002000049238f : sub eax, dword ptr [rax] ; jne 0x200005cd8b4 ; ret
0x0000020000044ca5 : sub eax, dword ptr [rax] ; mov dword ptr [rcx + 8], eax ; mov rax, rcx ; ret
0x0000020000044430 : sub eax, dword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x0000020000044dc5 : sub eax, dword ptr [rax] ; ret
0x0000020000436fab : sub eax, dword ptr [rbp - 0x3d] ; call 0x2000005f386
0x00000200000f9c68 : sub eax, dword ptr [rbp - 0x75] ; ret 0xdb85
0x0000020000249067 : sub eax, dword ptr [rbx + 0x3b41dfc0] ; ret
0x000002000054882d : sub eax, dword ptr [rcx + 0xc] ; div dword ptr [rcx + 8] ; ret
0x0000020000454b2b : sub eax, dword ptr [rcx + 8] ; inc eax ; ret
0x000002000056979b : sub eax, dword ptr [rcx + 8] ; ret
0x00000200000fe98d : sub eax, dword ptr [rcx - 0xa] ; ret
0x00000200000f3551 : sub eax, dword ptr [rcx - 2] ; ret
0x000002000001df46 : sub eax, dword ptr [rcx] ; mov qword ptr [r10], rax ; ret
0x00000200004b7f31 : sub eax, dword ptr [rcx] ; ret
0x00000200003e49c1 : sub eax, dword ptr [rdx + r8*4] ; sub eax, ecx ; ret
0x00000200003e49c2 : sub eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000020000130758 : sub eax, dword ptr [rdx] ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000004442c : sub eax, dword ptr [rip + 0x2b79e6] ; mov qword ptr [rdx], rax ; ret
0x0000020000037f52 : sub eax, dword ptr [rip + 0x4801b000] ; add esp, 0x38 ; ret
0x000002000049297a : sub eax, dword ptr fs:[rax] ; add rsp, 0x38 ; ret
0x0000020000070bbc : sub eax, dword ptr ss:[rax] ; ret
0x0000020000683ec1 : sub eax, eax ; mov qword ptr [rcx + 0x50], rax ; ret
0x000002000007518b : sub eax, eax ; ret
0x00000200000f74e5 : sub eax, eax ; test r10, r10 ; jne 0x200000f74f8 ; mov eax, ecx ; ret
0x000002000007b69a : sub eax, ebx ; add r8, r10 ; jmp 0x2000007b669
0x00000200000f8ac2 : sub eax, ecx ; mov eax, r8d ; add rsp, 0x38 ; ret
0x00000200000fd1aa : sub eax, ecx ; mov eax, r8d ; ret
0x0000020000151912 : sub eax, ecx ; mov rax, r8 ; pop rsi ; pop rdi ; ret
0x0000020000496f29 : sub eax, ecx ; mov rcx, qword ptr [r9] ; mov qword ptr [rdx], rcx ; ret
0x0000020000428849 : sub eax, ecx ; movzx eax, r8w ; ret
0x0000020000025753 : sub eax, ecx ; ret
0x00000200007a0792 : sub eax, ecx ; sar rax, 0x10 ; ret
0x000002000013d264 : sub eax, ecx ; sar rax, 1 ; dec rax ; ret
0x000002000013d24b : sub eax, ecx ; sar rax, 1 ; ret
0x000002000013b273 : sub eax, ecx ; shr rax, 0x3f ; ret
0x0000020000436f74 : sub eax, edx ; call 0x2000005f385
0x0000020000025092 : sub eax, edx ; jmp 0x20000025042
0x000002000021315b : sub eax, edx ; jmp 0x2000021316b
0x000002000064db14 : sub eax, edx ; jmp 0x2000064db2e
0x00000200006dc4f1 : sub eax, edx ; jmp 0x200006dc4fb
0x00000200007a93c3 : sub eax, edx ; jne 0x200007a93a9 ; ret
0x00000200000ddbd8 : sub eax, edx ; ret
0x000002000013aa59 : sub eax, edx ; sar rax, 0x10 ; add rax, rcx ; ret
0x00000200001e5e59 : sub eax, edx ; shr r8, 0xc ; call qword ptr [r11]
0x00000200003e4805 : sub eax, edx ; xor eax, dword ptr [r8 + rcx*4] ; ret
0x0000020000025091 : sub eax, r10d ; jmp 0x20000025043
0x00000200003e47e2 : sub eax, r8d ; ret
0x0000020000407fb0 : sub ebp, eax ; stosb byte ptr [rdi], al ; int 8
0x00000200006663b0 : sub ebp, eax ; xor dl, bh ; popfq ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000587b53 : sub ebp, edi ; mov esp, 0x98e990ff ; ret
0x00000200005d58ba : sub ebp, esi ; dec dword ptr [rax - 9] ; ret
0x000002000050a805 : sub ebx, 0xc18b48e7 ; ret
0x000002000002b50e : sub ebx, 1 ; jne 0x2000002b4ee ; ret
0x0000020000156308 : sub ebx, eax ; jmp r11
0x000002000020f9a5 : sub ebx, eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000023944 : sub ebx, eax ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200007cef4d : sub ebx, eax ; mov rax, r11 ; ret
0x0000020000164a49 : sub ebx, ebp ; dec dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x00000200003da246 : sub ebx, edi ; lea r8, qword ptr [rbx + 0x1000] ; call rax
0x00000200006c6025 : sub ecx, 0x10 ; jns 0x200006c600c ; ret
0x00000200006c6061 : sub ecx, 0x10 ; jns 0x200006c6048 ; ret
0x0000020000051967 : sub ecx, 1 ; jne 0x2000005195b ; ret
0x000002000005285d : sub ecx, 1 ; jne 0x2000005286b ; ret
0x000002000012978c : sub ecx, 1 ; jne 0x20000129782 ; ret
0x000002000013376e : sub ecx, 1 ; jne 0x2000013375f ; mov al, dl ; ret
0x0000020000165611 : sub ecx, 1 ; jne 0x200001655ff ; ret
0x00000200001c24a2 : sub ecx, 1 ; jne 0x200001c2490 ; mov eax, ecx ; ret
0x00000200001f07db : sub ecx, 1 ; jne 0x200001f07da ; mov rax, r10 ; ret
0x00000200001f07db : sub ecx, 1 ; jne 0x200001f07db ; mov rax, r10 ; ret
0x000002000021648c : sub ecx, 1 ; jne 0x2000021647c ; ret
0x00000200003f91bc : sub ecx, 1 ; jne 0x200003f91cd ; lea eax, dword ptr [rcx + 1] ; ret
0x00000200003f91c5 : sub ecx, 1 ; jne 0x200003f91d6 ; lea eax, dword ptr [rcx + 2] ; ret
0x00000200003fd32a : sub ecx, 1 ; jne 0x200003fd33e ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x00000200004aa159 : sub ecx, 1 ; jne 0x200004aa152 ; ret
0x0000020000536e50 : sub ecx, 1 ; jne 0x20000536e4e ; ret
0x0000020000541782 : sub ecx, 1 ; jne 0x20000541741 ; ret
0x0000020000686877 : sub ecx, 1 ; jne 0x20000686863 ; ret
0x00000200000cf820 : sub ecx, dword ptr [rax - 0x73] ; jl 0x200000cf851 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001b3581 : sub ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x00000200001bbdd8 : sub ecx, dword ptr [rax - 0x75] ; add eax, 0x13da70 ; call rax
0x0000020000635aa1 : sub ecx, dword ptr [rax - 0x75] ; push rax ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4414
0x0000020000493c6e : sub ecx, dword ptr [rax - 1] ; ret
0x000002000000f7c4 : sub ecx, dword ptr [rbp - 0x75] ; ret 0x8844
0x00000200000b5657 : sub ecx, dword ptr [rcx + 0x23] ; ret
0x000002000065c9f8 : sub ecx, dword ptr [rcx - 0x7d] ; ret 0x6602
0x000002000009aa80 : sub ecx, dword ptr [rdx + 8] ; mov qword ptr [r8 + 8], rcx ; ret
0x00000200000daff7 : sub ecx, dword ptr [rdx - 0x7cb6fff4] ; ret
0x0000020000087ba7 : sub ecx, eax ; cmp ecx, edx ; jbe 0x20000087bab ; xor eax, eax ; ret
0x0000020000052859 : sub ecx, eax ; je 0x2000005286c ; sub ecx, 1 ; jne 0x2000005286f ; ret
0x00000200003d4b5d : sub ecx, eax ; jmp 0x200003c7bf9
0x0000020000152a01 : sub ecx, eax ; jmp r9
0x000002000007ecb0 : sub ecx, eax ; mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013bbc4 : sub ecx, eax ; mov eax, r9d ; ret
0x0000020000703c44 : sub ecx, eax ; mov qword ptr [rcx + 8], r9 ; ret
0x000002000001be21 : sub ecx, eax ; mov rax, rcx ; ret
0x000002000063de01 : sub ecx, ebp ; ret
0x00000200003e723b : sub ecx, ebp ; xchg eax, ecx ; ret 0x19
0x000002000055632d : sub ecx, ebx ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200003e4998 : sub ecx, ecx ; imul eax, r9d ; sub eax, r8d ; ret
0x000002000013b622 : sub ecx, ecx ; mov eax, r9d ; ret
0x000002000070a07c : sub ecx, edx ; mov dword ptr [r8], ecx ; ret
0x000002000070a050 : sub ecx, edx ; mov dword ptr [r8], r9d ; ret
0x0000020000518df4 : sub ecx, edx ; mov eax, ecx ; ret
0x00000200003ca641 : sub ecx, edx ; mov qword ptr [r11], rcx ; ret
0x0000020000128ea1 : sub ecx, edx ; mov qword ptr [r8], r9 ; ret
0x000002000008571e : sub ecx, edx ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x000002000070a07b : sub ecx, r10d ; mov dword ptr [r8], ecx ; ret
0x000002000055632c : sub ecx, r11d ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x0000020000087ba6 : sub ecx, r8d ; cmp ecx, edx ; jbe 0x20000087bac ; xor eax, eax ; ret
0x000002000043f951 : sub edi, dword ptr [rdi - 0x2f] ; dec dword ptr [rax - 0x75] ; ret
0x00000200003dc7f9 : sub edi, dword ptr [rsi + rax*8 - 1] ; add rsp, 0x28 ; ret
0x00000200005580a8 : sub edi, dword ptr [rsi - 0x3b7cb701] ; ret
0x00000200001518fa : sub edi, ecx ; mov rax, rdi ; pop rsi ; pop rdi ; ret
0x00000200006e340d : sub edi, edi ; ret 0x8349
0x0000020000460c1a : sub edi, edi ; ret 0xfa83
0x000002000016126a : sub edx, -1 ; mov qword ptr [r8], r10 ; ret
0x0000020000151a78 : sub edx, 0x40 ; ja 0x20000151a75 ; ret
0x0000020000028190 : sub edx, 1 ; jne 0x20000028181 ; ret
0x0000020000034e65 : sub edx, 1 ; jne 0x20000034e55 ; ret
0x000002000005322e : sub edx, 1 ; jne 0x2000005322c ; ret
0x000002000005c34b : sub edx, 1 ; jne 0x2000005c345 ; ret
0x000002000008801c : sub edx, 1 ; jne 0x20000088012 ; ret
0x0000020000112e4e : sub edx, 1 ; jne 0x20000112e26 ; ret
0x00000200001370f6 : sub edx, 1 ; jne 0x200001370df ; ret
0x0000020000190903 : sub edx, 1 ; jne 0x200001908e4 ; add rsp, 0x28 ; ret
0x00000200001fe42c : sub edx, 1 ; jne 0x200001fe3e9 ; mov eax, r8d ; ret
0x0000020000401af7 : sub edx, 1 ; jne 0x20000401af1 ; ret
0x0000020000459e61 : sub edx, 1 ; jne 0x20000459e34 ; ret
0x0000020000481b51 : sub edx, 1 ; jne 0x20000481b46 ; ret
0x00000200006bbbc6 : sub edx, 1 ; jne 0x200006bbbb7 ; mov eax, r8d ; ret
0x000002000070ac9a : sub edx, 1 ; jne 0x2000070ac97 ; xor eax, eax ; ret
0x000002000061bf49 : sub edx, 1 ; jns 0x2000061bf3a ; ret
0x0000020000692f60 : sub edx, dword ptr [rbx] ; add byte ptr [rax], al ; jmp 0x20000692f9e
0x0000020000039e83 : sub edx, dword ptr [rbx] ; add dh, dh ; ret
0x000002000000ff54 : sub edx, dword ptr [rip - 0x3cfe5000] ; xor al, al ; ret
0x0000020000213153 : sub edx, eax ; cmp r10d, r8d ; ja 0x20000213168 ; sub r8d, r10d ; jmp 0x20000213173
0x00000200006f6ae0 : sub edx, eax ; dec dword ptr [rax - 1] ; ret
0x000002000014ea08 : sub edx, eax ; jne 0x2000014ea07 ; sfence ; ret
0x000002000014ea38 : sub edx, eax ; jne 0x2000014ea37 ; sfence ; ret
0x00000200002284ad : sub edx, eax ; mov dword ptr [rcx], edx ; ret
0x00000200005adf3b : sub edx, ebp ; dec dword ptr [rax - 0x75] ; ret
0x000002000010c982 : sub edx, ecx ; add edx, r14d ; add r8d, edx ; jmp 0x2000010c96d
0x00000200003e4cba : sub edx, ecx ; mov eax, r10d ; ret
0x00000200001b33f9 : sub edx, ecx ; mov qword ptr [r8], rdx ; ret
0x00000200007a0804 : sub edx, ecx ; sar rdx, 0x10 ; mov rax, rdx ; ret
0x000002000010c981 : sub edx, r9d ; add edx, r14d ; add r8d, edx ; jmp 0x2000010c96e
0x00000200000c7706 : sub esi, esi ; ret
0x0000020000216ea8 : sub esi, esp ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000200001a8889 : sub esi, esp ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000045225b : sub esp, 0x20 ; mov rbx, rcx ; call 0x2000007a405
0x000002000024c499 : sub esp, 0x28 ; call rax
0x00000200001dc359 : sub esp, dword ptr [rcx + rdx] ; mov rbx, rcx ; call qword ptr [rax]
0x000002000017dcb0 : sub esp, dword ptr [rdx - 0x74b70014] ; ret
0x000002000001bb79 : sub esp, dword ptr [rsi + 0x41] ; add eax, eax ; mov word ptr [rdx + 0x14], ax ; ret
0x000002000051ebf9 : sub esp, dword ptr [rsi] ; ret 0x49ff
0x000002000045e463 : sub esp, edi ; ret
0x000002000044fdf1 : sub esp, esi ; ret 0xe9ff
0x000002000021cf0a : sub esp, esp ; inc dword ptr [rbp + 0x33] ; in al, -0xa ; ret
0x00000200000bdb95 : sub qword ptr [rip + 0x264c0c], rax ; ret
0x0000020000035739 : sub qword ptr [rip + 0x2ed028], rdx ; ret
0x0000020000035731 : sub qword ptr [rip + 0x2ed038], rdx ; ret
0x0000020000034e64 : sub r10, 1 ; jne 0x20000034e56 ; ret
0x000002000008801b : sub r10, 1 ; jne 0x20000088013 ; ret
0x0000020000112e4d : sub r10, 1 ; jne 0x20000112e27 ; ret
0x00000200001fe42b : sub r10, 1 ; jne 0x200001fe3ea ; mov eax, r8d ; ret
0x0000020000459e60 : sub r10, 1 ; jne 0x20000459e35 ; ret
0x0000020000692f5f : sub r10d, dword ptr [rbx] ; add byte ptr [rax], al ; jmp 0x20000692f9f
0x00000200003e4cb9 : sub r10d, r9d ; mov eax, r10d ; ret
0x000002000002b50d : sub r11, 1 ; jne 0x2000002b4ef ; ret
0x0000020000156307 : sub r11, rax ; jmp r11
0x00000200007cef4c : sub r11, rax ; mov rax, r11 ; ret
0x0000020000231588 : sub r11b, al ; movzx eax, word ptr [rcx] ; ret
0x0000020000052c17 : sub r8, 1 ; jne 0x20000052c13 ; ret
0x000002000011e7cd : sub r8, 1 ; jne 0x2000011e7cd ; ret
0x00000200001fdbc3 : sub r8, 1 ; jne 0x200001fdbbb ; ret
0x00000200006adbc0 : sub r8, 1 ; jne 0x200006adbbb ; ret
0x00000200007a93c2 : sub r8, r10 ; jne 0x200007a93aa ; ret
0x000002000007b699 : sub r8, r11 ; add r8, r10 ; jmp 0x2000007b66a
0x00000200000fd1a9 : sub r8, rcx ; mov eax, r8d ; ret
0x0000020000151911 : sub r8, rcx ; mov rax, r8 ; pop rsi ; pop rdi ; ret
0x00000200001e5e58 : sub r8, rdx ; shr r8, 0xc ; call qword ptr [r11]
0x00000200006dd435 : sub r8b, 0x34 ; ret 0xff92
0x00000200006dd39f : sub r8b, 0xca ; ret 0xff92
0x0000020000512364 : sub r8b, 5 ; pop rbp ; ret
0x00000200005fadc9 : sub r8b, bpl ; ret 0xffe6
0x0000020000227323 : sub r8b, r13b ; jbe 0x200002272d6 ; dec dword ptr [rax + 0x3b] ; ret
0x000002000009bcb5 : sub r8b, r13b ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000002000066e8b8 : sub r8b, r13b ; xchg eax, ebp ; ret 0xffea
0x00000200001d4633 : sub r8d, 1 ; jns 0x200001d462f ; or eax, 0xffffffff ; ret
0x0000020000211773 : sub r8d, 1 ; jns 0x2000021176f ; mov eax, edx ; ret
0x0000020000211773 : sub r8d, 1 ; jns 0x20000211770 ; mov eax, edx ; ret
0x0000020000143be4 : sub r8d, 7 ; movzx eax, r8w ; ret
0x0000020000436faa : sub r8d, dword ptr [rbp - 0x3d] ; call 0x2000005f387
0x000002000013b5aa : sub r8d, ecx ; mov eax, r8d ; ret
0x0000020000428848 : sub r8d, ecx ; movzx eax, r8w ; ret
0x0000020000436f73 : sub r8d, edx ; call 0x2000005f386
0x000002000021315a : sub r8d, r10d ; jmp 0x2000021316c
0x0000020000051966 : sub r9, 1 ; jne 0x2000005195c ; ret
0x000002000013376d : sub r9, 1 ; jne 0x20000133760 ; mov al, dl ; ret
0x0000020000165610 : sub r9, 1 ; jne 0x20000165600 ; ret
0x00000200001c24a1 : sub r9, 1 ; jne 0x200001c2491 ; mov eax, ecx ; ret
0x0000020000686876 : sub r9, 1 ; jne 0x20000686864 ; ret
0x0000020000152a00 : sub r9, r8 ; jmp r9
0x0000020000703c43 : sub r9, r8 ; mov qword ptr [rcx + 8], r9 ; ret
0x0000020000128ea0 : sub r9, rdx ; mov qword ptr [r8], r9 ; ret
0x00000200001b1db0 : sub r9b, bpl ; ret 0xf851
0x000002000017ebda : sub r9b, bpl ; stc ; ret 0xffec
0x0000020000242240 : sub r9b, r13b ; ret 0xfffd
0x000002000013bbc3 : sub r9d, eax ; mov eax, r9d ; ret
0x000002000013b621 : sub r9d, ecx ; mov eax, r9d ; ret
0x000002000070a04f : sub r9d, r10d ; mov dword ptr [r8], r9d ; ret
0x00000200003e4625 : sub r9d, r8d ; mov eax, r9d ; ret
0x0000020000033101 : sub rax, -0x80 ; ret
0x000002000007bb1a : sub rax, 1 ; jle 0x2000007bb27 ; ret
0x0000020000010cf1 : sub rax, 1 ; jne 0x20000010cec ; ret
0x00000200000365b5 : sub rax, 1 ; jne 0x200000365b0 ; ret
0x0000020000119896 : sub rax, 1 ; jne 0x20000119891 ; mov rax, rdx ; ret
0x0000020000119896 : sub rax, 1 ; jne 0x20000119892 ; mov rax, rdx ; ret
0x00000200004385b6 : sub rax, 1 ; jne 0x200004385b1 ; ret
0x000002000001df45 : sub rax, qword ptr [rcx] ; mov qword ptr [r10], rax ; ret
0x0000020000683ec0 : sub rax, r8 ; mov qword ptr [rcx + 0x50], rax ; ret
0x000002000007518a : sub rax, r8 ; ret
0x0000020000496f28 : sub rax, rcx ; mov rcx, qword ptr [r9] ; mov qword ptr [rdx], rcx ; ret
0x0000020000025752 : sub rax, rcx ; ret
0x00000200007a0791 : sub rax, rcx ; sar rax, 0x10 ; ret
0x000002000013d263 : sub rax, rcx ; sar rax, 1 ; dec rax ; ret
0x000002000013d24a : sub rax, rcx ; sar rax, 1 ; ret
0x000002000013b272 : sub rax, rcx ; shr rax, 0x3f ; ret
0x00000200000ddbd7 : sub rax, rdx ; ret
0x000002000012978b : sub rcx, 1 ; jne 0x20000129783 ; ret
0x00000200001f07da : sub rcx, 1 ; jne 0x200001f07db ; mov rax, r10 ; ret
0x00000200001f07da : sub rcx, 1 ; jne 0x200001f07dc ; mov rax, r10 ; ret
0x000002000021648b : sub rcx, 1 ; jne 0x2000021647d ; ret
0x00000200004aa158 : sub rcx, 1 ; jne 0x200004aa153 ; ret
0x0000020000536e4f : sub rcx, 1 ; jne 0x20000536e4f ; ret
0x0000020000541781 : sub rcx, 1 ; jne 0x20000541742 ; ret
0x000002000009aa7f : sub rcx, qword ptr [rdx + 8] ; mov qword ptr [r8 + 8], rcx ; ret
0x000002000001be20 : sub rcx, rax ; mov rax, rcx ; ret
0x00000200003ca640 : sub rcx, rdx ; mov qword ptr [r11], rcx ; ret
0x000002000008571d : sub rcx, rdx ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x00000200001518f9 : sub rdi, r9 ; mov rax, rdi ; pop rsi ; pop rdi ; ret
0x0000020000151a77 : sub rdx, 0x40 ; ja 0x20000151a76 ; ret
0x0000020000151a76 : sub rdx, 0x40 ; ja 0x20000151a77 ; ret
0x000002000002818f : sub rdx, 1 ; jne 0x20000028182 ; ret
0x000002000005322d : sub rdx, 1 ; jne 0x2000005322d ; ret
0x000002000005c34a : sub rdx, 1 ; jne 0x2000005c346 ; ret
0x00000200001370f5 : sub rdx, 1 ; jne 0x200001370e0 ; ret
0x0000020000401af6 : sub rdx, 1 ; jne 0x20000401af2 ; ret
0x0000020000481b50 : sub rdx, 1 ; jne 0x20000481b47 ; ret
0x00000200006bbbc5 : sub rdx, 1 ; jne 0x200006bbbb8 ; mov eax, r8d ; ret
0x000002000070ac99 : sub rdx, 1 ; jne 0x2000070ac98 ; xor eax, eax ; ret
0x000002000061bf48 : sub rdx, 1 ; jns 0x2000061bf3b ; ret
0x0000020000039e82 : sub rdx, qword ptr [rbx] ; add dh, dh ; ret
0x000002000014ea07 : sub rdx, r8 ; jne 0x2000014ea08 ; sfence ; ret
0x00000200001b33f8 : sub rdx, r9 ; mov qword ptr [r8], rdx ; ret
0x000002000014ea37 : sub rdx, rax ; jne 0x2000014ea38 ; sfence ; ret
0x000002000024c498 : sub rsp, 0x28 ; call rax
0x000002000005ccdd : sysenter
0x00000200003d3c56 : test ah, ah ; add byte ptr [r8], al ; mov al, 1 ; ret
0x000002000055dc45 : test ah, al ; mov ebx, 0x8b440009 ; ret
0x000002000013cdd8 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff49
0x00000200000f1186 : test ah, bl ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000689146 : test ah, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8545
0x000002000043c8bb : test ah, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000045e7ab : test ah, dl ; or byte ptr [rsi], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000015da11 : test al, 0 ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000114499 : test al, 0 ; add byte ptr [rax], al ; call rax
0x000002000008592e : test al, 0 ; add byte ptr [rax], al ; mov edx, ebp ; call rax
0x0000020000085e0f : test al, 0 ; add byte ptr [rax], al ; mov edx, r15d ; call rax
0x00000200000e0cbd : test al, 0 ; add byte ptr [rax], al ; mov rcx, r12 ; call 0x2000006cf4d
0x00000200000a6160 : test al, 0 ; add byte ptr [rax], al ; pop r13 ; pop rbx ; ret
0x00000200004c781b : test al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000690dd : test al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200001dd3ff : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000200000cac12 : test al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rbp ; ret
0x00000200000eaee7 : test al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rbx ; ret
0x00000200000f9850 : test al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000641ff5 : test al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000004dc8c : test al, 0 ; add byte ptr [rax], al ; ret
0x0000020000128aaf : test al, 0 ; add byte ptr [rax], al ; test rcx, rcx ; je 0x20000128ac3 ; call rcx
0x00000200004d1738 : test al, 0x10 ; add dh, dh ; ret
0x00000200003dc3b2 : test al, 0x10 ; je 0x200003dc3c5 ; mov ecx, ebx ; call 0x200006686ac
0x00000200000fc276 : test al, 0x10 ; jne 0x200000fc283 ; xor al, al ; ret
0x000002000066afe8 : test al, 0x10 ; jne 0x2000066aff5 ; mov al, 1 ; ret
0x0000020000052c55 : test al, 0x17 ; add byte ptr [rax], al ; ret
0x00000200003e9524 : test al, 0x19 ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000142aaa : test al, 0x20 ; je 0x20000142abb ; or dword ptr [r8], 0xffffffff ; ret
0x0000020000647aae : test al, 0x29 ; add byte ptr [rax], al ; test rax, rax ; je 0x20000647ac2 ; call rax
0x0000020000619954 : test al, 0x36 ; ret
0x00000200003ca669 : test al, 0x3f ; je 0x200003ca67a ; add rsp, 0x28 ; ret
0x0000020000072947 : test al, 0x40 ; jne 0x20000072954 ; xor al, al ; ret
0x0000020000072946 : test al, 0x40 ; jne 0x20000072955 ; xor al, al ; ret
0x0000020000072945 : test al, 0x40 ; jne 0x20000072956 ; xor al, al ; ret
0x0000020000442bd0 : test al, 0x40 ; jne 0x20000442bfb ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x0000020000618d54 : test al, 0x42 ; ret
0x00000200000dbc17 : test al, 0x48 ; mov eax, edx ; jmp 0x200000dbbbe
0x000002000044dced : test al, 0x49 ; mov eax, eax ; add rsp, 0x28 ; ret
0x0000020000546773 : test al, 0x49 ; mov edx, edi ; lea rcx, qword ptr [rbp - 9] ; call r12
0x0000020000645b0c : test al, 0x54 ; ret
0x00000200007d0e10 : test al, 0x6d ; ret 0x8bff
0x00000200006014c4 : test al, 0x97 ; mov bl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004adbf4 : test al, 0xa1 ; ret
0x000002000071a497 : test al, 0xb7 ; ret
0x0000020000502421 : test al, 0xb8 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200004a9594 : test al, 0xbd ; ret
0x00000200001cecc4 : test al, 0xbf ; idiv bh ; add rsp, 0x58 ; ret
0x0000020000220c44 : test al, 0xcd ; jmp 0x1ffc3d81c50
0x00000200004a7e74 : test al, 0xd8 ; ret
0x00000200000cefd8 : test al, 0xdc ; and eax, dword ptr [rax] ; call 0x2000003b25e
0x0000020000587026 : test al, 0xe6 ; jmp qword ptr [rcx]
0x00000200007d024e : test al, 0xe8 ; adc byte ptr [rsi], ah ; ret
0x00000200003d480c : test al, 0xe8 ; mov dl, 0xee ; ret 0x85ff
0x000002000064feb8 : test al, 0xe8 ; ret 0xb079
0x00000200006ceed9 : test al, 0xea ; dec dword ptr [rax - 0x7d] ; ret
0x000002000017e799 : test al, 0xec ; dec dword ptr [rcx - 0x75] ; ret
0x00000200004a7f05 : test al, 0xf6 ; ret
0x00000200005cc3bc : test al, 0xf6 ; ret 0x90ff
0x00000200006eeea2 : test al, 0xfe ; adc cl, byte ptr [rax] ; and eax, 0xbc20125c ; call qword ptr [rdx]
0x00000200006ba313 : test al, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x00000200006af070 : test al, 0xff ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000658648 : test al, 0xff ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000658463 : test al, 0xff ; mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x00000200007cbe35 : test al, 0xff ; mov eax, edi ; jmp 0x200007b809a
0x000002000057b9e9 : test al, 0xff ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005cd654 : test al, 0xff ; nop ; jmp 0x20000491d59
0x00000200007cbe50 : test al, 0xff ; nop ; jmp 0x200007b8097
0x000002000066e68d : test al, 0xff ; ret
0x0000020000456d00 : test al, 1 ; add byte ptr [rax], al ; call 0x2000007d087
0x0000020000157539 : test al, 1 ; add byte ptr [rax], al ; ret
0x00000200000330fd : test al, 1 ; add byte ptr [rax], al ; sub rax, -0x80 ; ret
0x0000020000242f1f : test al, 1 ; add byte ptr [rax], al ; xor ecx, ecx ; call r10
0x000002000007709c : test al, 1 ; je 0x20000077094 ; xor al, al ; ret
0x00000200000b6924 : test al, 1 ; je 0x200000b6935 ; add rsp, 0x28 ; ret
0x000002000022c7a7 : test al, 1 ; je 0x2000022c7ba ; xor eax, eax ; xchg dword ptr [rcx + 0x1c], eax ; ret
0x00000200005bafd2 : test al, 1 ; je 0x200005bafe1 ; call 0x200006b721e
0x000002000006f047 : test al, 1 ; jne 0x2000006f050 ; ret
0x000002000006f046 : test al, 1 ; jne 0x2000006f051 ; ret
0x000002000006f045 : test al, 1 ; jne 0x2000006f052 ; ret
0x0000020000090539 : test al, 1 ; jne 0x20000090542 ; ret
0x000002000021a377 : test al, 1 ; jne 0x2000021a384 ; xor eax, eax ; ret
0x0000020000453965 : test al, 1 ; jne 0x20000453976 ; and rax, 0xfffffffffffffffe ; ret
0x000002000007ce7f : test al, 2 ; je 0x2000007ce28 ; jmp 0x2000007ce4d
0x00000200000878d6 : test al, 2 ; je 0x200000878e4 ; mov eax, edx ; ret
0x00000200000878d6 : test al, 2 ; je 0x200000878e5 ; mov eax, edx ; ret
0x00000200007164ba : test al, 2 ; je 0x200007164c7 ; xor eax, eax ; ret
0x000002000005f374 : test al, 2 ; jne 0x2000005f381 ; xor al, al ; ret
0x000002000009a73c : test al, 2 ; jne 0x2000009a745 ; ret
0x000002000009dc57 : test al, 2 ; jne 0x2000009dc76 ; or eax, 0x18 ; ret
0x00000200001bc1ee : test al, 2 ; jne 0x200001bc201 ; mov eax, 0xc0000001 ; ret
0x00000200001bc20a : test al, 2 ; jne 0x200001bc21d ; mov eax, 0xc0000022 ; ret
0x00000200001bc3a2 : test al, 2 ; jne 0x200001bc3b5 ; mov eax, 0xc0000022 ; ret
0x00000200001bc44a : test al, 2 ; jne 0x200001bc45d ; mov eax, 0xc0000022 ; ret
0x00000200007d26f1 : test al, 2 ; jne 0x200007d26e8 ; xor eax, eax ; ret
0x000002000001e233 : test al, 3 ; add byte ptr [rax], al ; ret
0x00000200000e06de : test al, 3 ; ret 0xc148
0x000002000051cc52 : test al, 3 ; sete al ; ret
0x00000200007d26de : test al, 4 ; je 0x200007d26f1 ; mov eax, 1 ; ret
0x0000020000078cca : test al, 4 ; jne 0x20000078cd7 ; xor eax, eax ; ret
0x0000020000078cc9 : test al, 4 ; jne 0x20000078cd8 ; xor eax, eax ; ret
0x0000020000078cc8 : test al, 4 ; jne 0x20000078cd9 ; xor eax, eax ; ret
0x0000020000136f75 : test al, 4 ; jne 0x20000136f88 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b388b : test al, 4 ; jne 0x200001b389d ; or al, 4 ; mov byte ptr [rcx + 4], al ; ret
0x00000200003e6fde : test al, 4 ; jne 0x200003e6feb ; xor eax, eax ; ret
0x00000200004baac4 : test al, 6 ; add byte ptr [rax], al ; call 0x200000e9997
0x000002000061d778 : test al, 6 ; add byte ptr [rax], al ; call 0x200000e99c6
0x00000200004baae6 : test al, 6 ; add byte ptr [rax], al ; call 0x200000e99c7
0x0000020000108978 : test al, 6 ; add byte ptr [rbx - 0x7497dba4], cl ; ret
0x000002000062c954 : test al, 6 ; ret 0x48ff
0x000002000042d6ff : test al, 7 ; add byte ptr [rax], al ; ret
0x000002000009d993 : test al, 7 ; jne 0x2000009d992 ; mov eax, 1 ; ret
0x000002000043e3d6 : test al, 8 ; je 0x2000043e3e6 ; or dword ptr [rcx], 4 ; xor eax, eax ; ret
0x0000020000055e71 : test al, 8 ; jne 0x20000055e7f ; mov rax, rdx ; ret
0x0000020000055e71 : test al, 8 ; jne 0x20000055e80 ; mov rax, rdx ; ret
0x00000200000ed07d : test al, 8 ; jne 0x200000ed07a ; xor eax, eax ; ret
0x000002000003716d : test al, 8 ; jne 0x2000016bbce ; ret
0x00000200000f35b7 : test al, 8 ; jne 0x200001a9c49 ; ret
0x00000200004522fe : test al, 8 ; jne 0x200005ae5c2 ; ret
0x000002000070ef54 : test al, 9 ; ret
0x0000020000791088 : test al, ah ; add byte ptr [rax], al ; add al, ch ; ret 0x25e
0x00000200004c9949 : test al, ah ; idiv edi ; push rsi ; ret
0x000002000002d4df : test al, ah ; ret 0x13
0x00000200000a8772 : test al, al ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000032b91 : test al, al ; je 0x20000032ba0 ; mov al, r8b ; ret
0x0000020000035f19 : test al, al ; je 0x20000035f2a ; add rsp, 0x28 ; ret
0x0000020000036e4a : test al, al ; je 0x20000036e5d ; mov eax, 1 ; ret
0x000002000011f833 : test al, al ; je 0x2000011f848 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000012cd16 : test al, al ; je 0x2000012cd27 ; add rsp, 0x28 ; ret
0x000002000012cd15 : test al, al ; je 0x2000012cd28 ; add rsp, 0x28 ; ret
0x00000200001d60a3 : test al, al ; je 0x200001d6105 ; inc r11 ; inc r10d ; jmp 0x200001d609e
0x0000020000231571 : test al, al ; je 0x20000231584 ; mov eax, 0xc00000bb ; ret
0x000002000001eba9 : test al, al ; jne 0x2000001ebcb ; add rsp, 0x38 ; ret
0x0000020000054ecc : test al, al ; jne 0x20000054edd ; add rsp, 0x28 ; ret
0x000002000013b1a6 : test al, al ; jne 0x2000013b17c ; xor eax, eax ; ret
0x0000020000002502 : test al, al ; jne 0x2000015f5aa ; ret
0x000002000013a9d1 : test al, al ; jne 0x200001b2cac ; ret
0x0000020000423f6d : test al, al ; jne 0x20000423f80 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004b3124 : test al, al ; jne 0x200004b3131 ; xor eax, eax ; ret
0x00000200004b317c : test al, al ; jne 0x200004b3189 ; xor eax, eax ; ret
0x0000020000724f67 : test al, al ; jne 0x20000724f5a ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c97fb : test al, al ; jns 0x200001c980d ; and qword ptr [rcx + 0x70], 0 ; ret
0x00000200001d20c4 : test al, al ; jns 0x200001d20d7 ; mov eax, 0xc0000022 ; ret
0x000002000001f9c4 : test al, al ; js 0x2000001f9d1 ; xor al, al ; ret
0x000002000020bccc : test al, al ; js 0x2000020bcdf ; mov eax, 0xc00000bb ; ret
0x00000200001c4e98 : test al, al ; setne al ; add rsp, 0x28 ; ret
0x000002000057c8f0 : test al, al ; setne cl ; mov eax, ecx ; pop rbp ; ret
0x00000200003f1165 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000561884 : test al, bl ; cdq ; or dword ptr [rax], eax ; ret
0x00000200000d6954 : test al, bl ; ret 0xc
0x000002000001d83d : test al, ch ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004d3685 : test al, ch ; nop ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200003fecc3 : test al, dl ; jmp 0x200003fece0
0x000002000002ad14 : test al, dl ; jne 0x2000002ad25 ; add rsp, 0x28 ; ret
0x00000200000bfdb1 : test al, dl ; ret
0x00000200006a460a : test ax, 0x48ff ; add esp, 0x68 ; ret
0x0000020000061dd4 : test ax, ax ; je 0x20000061de7 ; add rsp, 0x28 ; ret
0x00000200000be974 : test ax, ax ; je 0x200000be987 ; add rsp, 0x28 ; ret
0x000002000013d18b : test ax, ax ; jne 0x2000013d187 ; mov rax, rcx ; ret
0x000002000013d1a6 : test ax, ax ; jne 0x2000013d1a2 ; mov rax, rcx ; ret
0x000002000013d412 : test ax, ax ; jne 0x2000013d3e0 ; xor eax, eax ; ret
0x000002000013db05 : test ax, ax ; jne 0x2000013dae6 ; xor eax, eax ; ret
0x000002000006cd11 : test bh, al ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200001e8c04 : test bh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x25
0x00000200005f0c31 : test bh, al ; cmc ; push qword ptr [rbx] ; shr al, cl ; ret
0x00000200001d0658 : test bh, al ; dec dword ptr [rcx - 0x75] ; ret 0x7d89
0x00000200003fb594 : test bh, bh ; add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x000002000052bc56 : test bh, bh ; je 0x2000052bc95 ; call 0x20000147f56
0x00000200007bbd40 : test bh, bh ; mov al, 1 ; add rsp, 0x38 ; ret
0x000002000048a9a6 : test bh, ch ; or eax, 0x3480014 ; ret 0xdb33
0x0000020000478e64 : test bh, cl ; ret 0x14
0x00000200005490c0 : test bh, dh ; mov ecx, dword ptr [rdx] ; add bh, bh ; ret
0x000002000002469b : test bh, dl ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x00000200004953cd : test bl, 0x20 ; jmp 0x200004952d9
0x00000200004953c5 : test bl, 0x40 ; jmp 0x200004952d9
0x00000200004953d5 : test bl, 0x40 ; jmp 0x2000049533e
0x00000200006cd39b : test bl, 0x40 ; jmp 0x200006cd3a9
0x00000200006cd427 : test bl, 0x40 ; jmp 0x200006cd435
0x000002000065b1a2 : test bl, ah ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000053b04b : test bl, ah ; cld ; or al, byte ptr [rax] ; ret
0x00000200006cd37d : test bl, ah ; jmp 0x200006cd3a8
0x00000200006cd409 : test bl, ah ; jmp 0x200006cd434
0x00000200004b02dc : test bl, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x000002000019fd2c : test bl, bh ; ret 0xfff2
0x0000020000039320 : test bl, bl ; jne 0x20000039359 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006cd395 : test bl, bl ; jns 0x200006cd3b4 ; jmp 0x200006cd3ac
0x00000200006cd421 : test bl, bl ; jns 0x200006cd45d ; jmp 0x200006cd438
0x00000200006c9fb8 : test bl, bl ; ret 0x48ff
0x0000020000105fce : test bl, bl ; ret 6
0x00000200001ade60 : test bl, ch ; cli ; idiv edi ; call rdx
0x00000200003fa6b5 : test bl, cl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x2873
0x00000200006893b6 : test bl, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200005449fb : test bl, cl ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x00000200003d03e1 : test bl, cl ; outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000200007a7bc6 : test bl, dh ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x00000200006cd37c : test bl, r12b ; jmp 0x200006cd3a9
0x00000200006cd37b : test bl, r12b ; jmp 0x200006cd3aa
0x00000200006cd37a : test bl, r12b ; jmp 0x200006cd3ab
0x00000200006cd408 : test bl, r12b ; jmp 0x200006cd435
0x00000200006cd407 : test bl, r12b ; jmp 0x200006cd436
0x00000200006cd406 : test bl, r12b ; jmp 0x200006cd437
0x000002000010e97b : test bpl, 2 ; je 0x2000010e96a ; jmp 0x2000010e94d
0x000002000016134f : test bpl, r10b ; inc dword ptr [rcx - 0x75] ; ret 0x8548
0x000002000007c7a3 : test byte ptr [r8 + 0x19], 1 ; jne 0x2000007c7be ; ret
0x000002000007c7a2 : test byte ptr [r8 + 0x19], 1 ; jne 0x2000007c7bf ; ret
0x0000020000074658 : test byte ptr [r8], 0x20 ; jne 0x20000074665 ; ret
0x00000200000433d3 : test byte ptr [r9 - 0x75], cl ; ret 0xd348
0x000002000007c7a4 : test byte ptr [rax + 0x19], 1 ; jne 0x2000007c7bd ; ret
0x00000200006f74c7 : test byte ptr [rax + 0x33000000], ah ; leave ; call 0x200006f37b5
0x00000200000ec73e : test byte ptr [rax + 0x3a], 0xb3 ; ret
0x0000020000412b0e : test byte ptr [rax + 0x413060], al ; add rax, r8 ; jmp rax
0x00000200004254a9 : test byte ptr [rax + 0x480017a8], bh ; add esp, 0x28 ; ret
0x000002000011a9f7 : test byte ptr [rax + 0x48fff56c], dl ; jmp rax
0x00000200004cb5df : test byte ptr [rax + 0x4cc550], bl ; add rax, r8 ; jmp rax
0x00000200000f2346 : test byte ptr [rax + 0xf1a24], cl ; add rax, r8 ; jmp rax
0x00000200000f25db : test byte ptr [rax + 0xf1a58], al ; add rax, r8 ; jmp rax
0x0000020000026819 : test byte ptr [rax + 6], 8 ; jne 0x2000002682a ; xor eax, eax ; ret
0x00000200003ffb9f : test byte ptr [rax + rax + 0x438d0000], dl ; add edi, dword ptr [rbx] ; ret
0x000002000014baf7 : test byte ptr [rax + rax - 0x89a0000], cl ; ret 0x300
0x000002000013ce37 : test byte ptr [rax + rax - 0xb80000], al ; ret 0xff49
0x00000200006df2dd : test byte ptr [rax + rax - 0xbf0000], ah ; ret 0x8349
0x00000200001f9326 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200003de16d : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004941de : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000043e0e7 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200005ed60e : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret
0x000002000018a146 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x9fe9
0x00000200005d913a : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add cl, ch ; wait ; ret
0x000002000054495f : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000a78a9 : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret 0x7989
0x0000020000669aa5 : test byte ptr [rax + rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001bbc8e : test byte ptr [rax + rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004ddb20 : test byte ptr [rax + rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x000002000064500c : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000068a978 : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8949
0x00000200000b99ae : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffe
0x0000020000655cfc : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x772
0x0000020000537771 : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000125e27 : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8b48
0x00000200005ab757 : test byte ptr [rax + rbx*2], ah ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200004e3bc7 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x00000200000b43a8 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], cl ; ret
0x000002000018a176 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xa2e9
0x00000200005e20f0 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000053772b : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200005849ad : test byte ptr [rax + rbx*8], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000002000008f4fa : test byte ptr [rax + rcx*4 + 0x74], 0x24 ; xor byte ptr [rax - 0x75], cl ; iretd ; call rsi
0x00000200004a4c8f : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000018a156 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xa0e9
0x00000200001d2989 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0xa483
0x000002000047878d : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x0000020000089c43 : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add al, ch ; ret 0x543
0x00000200004d5195 : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000059524f : test byte ptr [rax + rcx], dh ; call 0x200491bde5c
0x00000200004b8397 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x000002000046daec : test byte ptr [rax + rdx*2 + 0x15], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000d442f : test byte ptr [rax + rdx*2], ah ; add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000009d0fa : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000066022b : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xce75
0x000002000018a166 : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xa1e9
0x0000020000537713 : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200004d514c : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rcx]
0x00000200006b8f7e : test byte ptr [rax + rdx], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000000f87d : test byte ptr [rax + rsi - 0x74b3ffeb], bl ; ret
0x0000020000219bb6 : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x00000200000962be : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xc22b
0x000002000004867d : test byte ptr [rax + rsi*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x4466
0x00000200007a4cb0 : test byte ptr [rax + rsi*8], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret 0x850f
0x0000020000180f5d : test byte ptr [rax - 0x160012ec], bl ; call qword ptr [rdx]
0x00000200005ec954 : test byte ptr [rax - 0x18], dh ; int1 ; push rsi ; ret 0xf0c
0x0000020000592529 : test byte ptr [rax - 0x27], ah ; out -1, eax ; mov al, 1 ; ret
0x00000200006d2894 : test byte ptr [rax - 0x73], 0x1d ; in al, 0x68 ; ret 0x4cff
0x00000200000bb7e1 : test byte ptr [rax - 0x73], 0x2c ; ret 0x8b48
0x00000200007b6315 : test byte ptr [rax - 0x73], 0x3d ; ret
0x00000200003f1627 : test byte ptr [rax - 0x74fffff8], ch ; ret
0x000002000002a53b : test byte ptr [rax - 0x75], 0x42 ; ret
0x00000200005fae8c : test byte ptr [rax - 0x75], 0x47 ; or byte ptr [rcx + 0x23], cl ; ret
0x000002000023fa6b : test byte ptr [rax - 0x75], 0xc2 ; jmp 0x2000023fa76
0x000002000042ec5d : test byte ptr [rax - 0x75], 0xcf ; call 0x2000005c1b7
0x00000200006f47ac : test byte ptr [rax - 0x75], 5 ; push rsp ; ret 0x48ff
0x00000200007b952d : test byte ptr [rax - 0x77], 0x45 ; ret 0x8b48
0x00000200004bb546 : test byte ptr [rax - 0x77], 0x6c ; and al, 0x70 ; call 0x200000e7219
0x00000200000ec74a : test byte ptr [rax - 0x78], 0xb3 ; ret
0x00000200005adb1a : test byte ptr [rax - 0x7c0015e4], ch ; ret
0x0000020000452851 : test byte ptr [rax - 0x9ffea42], cl ; ret 0x7504
0x000002000049bc53 : test byte ptr [rax - 0x9ffecc2], bh ; ret
0x000002000008fb02 : test byte ptr [rax - 0x9fff005], dl ; ret
0x00000200000efd90 : test byte ptr [rax], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000149d65 : test byte ptr [rax], 0 ; add cl, ch ; rol dl, cl ; add byte ptr [rax], al ; ret
0x000002000004f333 : test byte ptr [rax], 0 ; add dh, dh ; ret
0x0000020000074659 : test byte ptr [rax], 0x20 ; jne 0x20000074664 ; ret
0x0000020000032f80 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x3348
0x0000020000537743 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200000b3188 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200002393c1 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x00000200002392a9 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x00000200003f57d9 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b44
0x00000200001025fb : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b44
0x0000020000429170 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x4489
0x00000200006e7946 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000010bb03 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000663b94 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200005d7073 : test byte ptr [rax], ah ; movsxd rbp, esi ; dec dword ptr [rax - 0x75] ; iretd ; call rax
0x00000200000aef9d : test byte ptr [rax], ah ; or dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000147b9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000020000150c6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000002000013b23a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000020fbf8 : test byte ptr [rax], bl ; adc byte ptr [rdx + 0x3410026], dh ; ret 0x3eb
0x0000020000018da5 : test byte ptr [rax], bl ; ret 0x14
0x00000200004b8aec : test byte ptr [rax], ch ; add al, 0 ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000002000077fb16 : test byte ptr [rax], dl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x2be
0x00000200005bd061 : test byte ptr [rax], dl ; ret 0xffe9
0x0000020000484e1d : test byte ptr [rbp + 0x33001441], bh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf1f7
0x00000200005eaba9 : test byte ptr [rbp + 0x48fff4ff], ch ; mov ecx, esi ; call rdx
0x00000200000ca07d : test byte ptr [rbp + 0x57], al ; or eax, 0x200f4400 ; ret
0x00000200005e941e : test byte ptr [rbp + 0x74], ch ; int1 ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200006c5b2e : test byte ptr [rbp - 0x27fcfda1], 0x8b ; ret
0x00000200006b153a : test byte ptr [rbp - 0x3c74bce4], 0x83 ; ret
0x0000020000042e3b : test byte ptr [rbp - 0x47], ch ; adc dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200005e463a : test byte ptr [rbp - 0x74000f18], ah ; ret
0x000002000041f24b : test byte ptr [rbp - 0x76000000], ch ; push rdx ; add esi, esi ; ret 0xf10
0x00000200004bf48a : test byte ptr [rbp - 0x7c], ah ; adc dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200004b6543 : test byte ptr [rbp - 0x9fffffc], bl ; ret
0x00000200001f6ac5 : test byte ptr [rbx + 0x167502fd], 0xf6 ; ret
0x00000200007a7af8 : test byte ptr [rbx + 0x2b000001], bh ; ret
0x00000200004fdca5 : test byte ptr [rbx + 0x33000000], dl ; imul cl ; ret 0xfffd
0x0000020000459ed6 : test byte ptr [rbx + 0x3b001635], bl ; ret 0x840f
0x0000020000655076 : test byte ptr [rbx + 0x5c893059], 0x24 ; js 0x20000655013 ; ret
0x000002000064065a : test byte ptr [rbx + 0xfc085d8], 0x88 ; ret 2
0x000002000012830e : test byte ptr [rbx + rax + 0x64], 0x24 ; and byte ptr [rcx - 0x75], al ; ret 0xc8c1
0x00000200004f0650 : test byte ptr [rbx + rcx*4 - 0x2d], 0x8b ; ret
0x00000200000c6cf4 : test byte ptr [rbx - 0x17fff289], ch ; ret 0xf909
0x00000200000be799 : test byte ptr [rbx - 0x2674b706], 0xf7 ; ret 0xfffc
0x000002000001c249 : test byte ptr [rbx - 0x2674b716], 0xf7 ; ret 0xfffc
0x00000200001a6fa1 : test byte ptr [rbx - 0x323d1602], 0xf3 ; push rsi ; ret 0x7404
0x00000200005493d9 : test byte ptr [rbx - 0x3700fbae], 3 ; ret 0x65e9
0x00000200005bd108 : test byte ptr [rbx - 0x3d], ch ; jmp 0x1ffc288bb16
0x000002000004fc2f : test byte ptr [rbx - 0x74000005], bh ; ret
0x00000200007b05f9 : test byte ptr [rbx - 0x74fffe5c], ch ; ret
0x000002000042fdb0 : test byte ptr [rbx - 0x75ffe8e2], dh ; ret 0x8024
0x0000020000494a08 : test byte ptr [rbx - 0x7cffec67], bl ; call qword ptr [rax]
0x00000200003df96a : test byte ptr [rbx - 0x9ffe5f0], dh ; ret 0xf30
0x00000200001191ba : test byte ptr [rbx - 0x9ffffff], ch ; ret
0x00000200006b6e40 : test byte ptr [rbx - 0xa000000], al ; ret
0x00000200004c0f10 : test byte ptr [rbx], ah ; add al, byte ptr [rax] ; add dh, dh ; ret 0xc601
0x0000020000248f04 : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xbe48
0x00000200000d3854 : test byte ptr [rbx], ah ; out 0xc, eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe906
0x00000200000bfe33 : test byte ptr [rbx], ah ; ret
0x00000200001061d1 : test byte ptr [rbx], al ; ret
0x000002000079bdf8 : test byte ptr [rbx], al ; ret 0x48ff
0x00000200000729f5 : test byte ptr [rbx], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200000301ba : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000150f21 : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7401
0x0000020000045945 : test byte ptr [rbx], cl ; jns 0x20000045963 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000515dd2 : test byte ptr [rbx], dh ; ret 9
0x00000200000a1619 : test byte ptr [rcx + 0x1b], 4 ; jne 0x200000a1626 ; ret
0x00000200000310a1 : test byte ptr [rcx + 0x218], al ; ret
0x000002000009e2f9 : test byte ptr [rcx + 0x43], 1 ; jne 0x2000009e30a ; xor eax, eax ; ret
0x00000200004c5591 : test byte ptr [rcx + 0x4c4d18], ch ; add rax, rcx ; jmp rax
0x000002000016142a : test byte ptr [rcx + 0x4dffea90], bh ; mov dword ptr [rax], edx ; ret
0x00000200001b1cf8 : test byte ptr [rcx + 0x747ee0], cl ; ret
0x000002000046297c : test byte ptr [rcx + 0x7485a0], al ; ret
0x0000020000462994 : test byte ptr [rcx + 0x7485e0], al ; ret
0x0000020000544959 : test byte ptr [rcx + 0xf], al ; ret 0x8489
0x0000020000529d04 : test byte ptr [rcx + 2], 1 ; jne 0x20000529d15 ; xor eax, eax ; ret
0x000002000049e2d9 : test byte ptr [rcx + rax], al ; add byte ptr [rcx - 1], al ; ret
0x0000020000076cdb : test byte ptr [rcx + rsi - 0x3fccffef], ah ; ret
0x00000200001a7c7d : test byte ptr [rcx - 0x14], dl ; dec dword ptr [rax - 0x7d] ; jmp qword ptr [rax]
0x0000020000498a09 : test byte ptr [rcx - 0x17fffffd], cl ; int 0xc2
0x00000200004a898c : test byte ptr [rcx - 0x73], 0x4f ; cmp al, ch ; mov cl, ch ; ret
0x000002000047983d : test byte ptr [rcx - 0x74ffeb45], bl ; ret
0x00000200006c49df : test byte ptr [rcx - 0x75], 0x46 ; sub byte ptr [rax - 1], cl ; ret
0x000002000016fca0 : test byte ptr [rcx - 0x75], al ; ret 0xc148
0x00000200000433d4 : test byte ptr [rcx - 0x75], cl ; ret 0xd348
0x000002000046b113 : test byte ptr [rcx - 0x75ffea8f], cl ; ret
0x000002000005462b : test byte ptr [rcx], 0 ; add dh, dh ; ret
0x000002000045d0ae : test byte ptr [rcx], ah ; adc eax, 0x83480016 ; ret 0xf02
0x0000020000714b10 : test byte ptr [rcx], al ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000005078f : test byte ptr [rcx], al ; call qword ptr [rdx]
0x00000200003e0ddc : test byte ptr [rcx], bh ; sbb byte ptr [rbx], cl ; add byte ptr [rax], al ; add edi, edi ; ret
0x000002000078cb55 : test byte ptr [rcx], bl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200004a060a : test byte ptr [rcx], bl ; call qword ptr [rdx]
0x000002000046da4d : test byte ptr [rcx], ch ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000066c334 : test byte ptr [rcx], dh ; add al, 0 ; add byte ptr [rbx], bh ; ret
0x0000020000488939 : test byte ptr [rcx], dh ; enter 0, 0 ; inc rdx ; jmp 0x20000488921
0x000002000014189b : test byte ptr [rcx], dl ; add byte ptr [rax + 0xf], cl ; fmul dword ptr [r8 - 0x75] ; ret
0x0000020000070362 : test byte ptr [rcx], dl ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc3424b91
0x0000020000070331 : test byte ptr [rcx], dl ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000007038f : test byte ptr [rcx], dl ; add byte ptr [rax - 0x75], cl ; ret 0xf48
0x00000200006c1d51 : test byte ptr [rdi + 0x49000000], dh ; mov ecx, esi ; call rax
0x000002000079fe4a : test byte ptr [rdi + 0x59], bl ; add al, byte ptr [rax] ; ret
0x0000020000035004 : test byte ptr [rdi + 0x5e], cl ; adc eax, dword ptr [rax] ; ret
0x00000200004775ce : test byte ptr [rdi + rdx*8 - 0x74bbffec], ch ; ret 0xc149
0x0000020000564ebd : test byte ptr [rdi + rsi*2 + 9], cl ; add byte ptr [rax - 0x75], cl ; ret
0x000002000022251c : test byte ptr [rdi - 0x73000000], bh ; jmp qword ptr [r11]
0x000002000003ab77 : test byte ptr [rdi - 0x74ffecdf], al ; ret
0x000002000051fa08 : test byte ptr [rdi - 0x74fff6b9], ah ; ret
0x000002000053571a : test byte ptr [rdi - 0x76000000], bl ; ret 0xd2f6
0x00000200004c9940 : test byte ptr [rdi - 0x9ffeeff], ch ; ret
0x00000200003d3922 : test byte ptr [rdi - 0x9ffffbd], bh ; ret 0xf08
0x0000020000661afe : test byte ptr [rdi - 0x9fffffb], al ; ret 0x7402
0x0000020000143904 : test byte ptr [rdi - 0xa000000], cl ; ret
0x00000200000f0ee1 : test byte ptr [rdi], 0x4f ; ret 0x8388
0x0000020000187fc6 : test byte ptr [rdi], 0x84 ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200005e941c : test byte ptr [rdi], 0x84 ; insd dword ptr [rdi], dx ; je 0x200005e941c ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x000002000006fd8d : test byte ptr [rdi], 0x84 ; movsb byte ptr [rdi], byte ptr [rsi] ; test dword ptr [rcx], edx ; add dh, dh ; ret
0x00000200000d6952 : test byte ptr [rdi], 0x84 ; ret
0x0000020000580a03 : test byte ptr [rdi], 0x84 ; ret 0xe5ee
0x00000200005a83fc : test byte ptr [rdi], 0x84 ; ret 0xe973
0x00000200001ab984 : test byte ptr [rdi], 0x84 ; ret 0xf4fb
0x00000200004190c2 : test byte ptr [rdi], 0x84 ; ret 1
0x0000020000116643 : test byte ptr [rdi], 0x84 ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000011ec71 : test byte ptr [rdi], 0x84 ; shr dword ptr [rsi - 0x74b7fffb], 1 ; ret
0x000002000004f57b : test byte ptr [rdi], 0x85 ; add eax, 0xe9ffffff ; ret
0x000002000019bea0 : test byte ptr [rdi], 0x85 ; dec dword ptr cs:[rax - 0x75] ; ret
0x000002000002d911 : test byte ptr [rdi], 0x85 ; lodsb al, byte ptr [rsi] ; mov esi, 0x8b480013 ; ret
0x000002000055d2d3 : test byte ptr [rdi], 0x85 ; lodsb al, byte ptr [rsi] ; ret
0x00000200005e9130 : test byte ptr [rdi], 0x85 ; pop rcx ; ja 0x200005e9130 ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200000f6944 : test byte ptr [rdi], 0x85 ; ret
0x00000200004746b2 : test byte ptr [rdi], 0x85 ; ret 0
0x00000200004c9342 : test byte ptr [rdi], 0x85 ; ret 0x1106
0x000002000055d51f : test byte ptr [rdi], 0x85 ; ret 9
0x000002000004f5a9 : test byte ptr [rdi], 0x85 ; xchg eax, ebx ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000028978 : test byte ptr [rdi], 0x88 ; call qword ptr [rbx]
0x00000200000288c0 : test byte ptr [rdi], 0x88 ; in eax, dx ; call qword ptr [rbx]
0x000002000051d4fd : test byte ptr [rdi], 0x88 ; push rsp ; xchg byte ptr [rcx], cl ; add al, ch ; ret
0x00000200004a829d : test byte ptr [rdi], 0x88 ; ret
0x0000020000002ab5 : test byte ptr [rdi], 0x8e ; ret 2
0x00000200006c42f1 : test byte ptr [rdi], 0x95 ; ret
0x000002000053557a : test byte ptr [rdi], 0x95 ; ret 0x6de8
0x00000200000ad6d7 : test byte ptr [rdi], 0x95 ; ret 0x8548
0x0000020000032d8b : test byte ptr [rdi], 0x95 ; ret 0xb4e8
0x000002000007d19a : test byte ptr [rdi], 0x9f ; ret
0x000002000010c64d : test byte ptr [rdi], 0x9f ; ret 0x3345
0x00000200000ec84d : test byte ptr [rdi], 0xb6 ; ret 0x4c0f
0x000002000016ba78 : test byte ptr [rdi], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x0000020000071583 : test byte ptr [rdi], al ; add bl, ch ; ret 0x3b41
0x000002000013ac30 : test byte ptr [rdi], al ; add byte ptr [rax - 0x3ffffffe], bh ; ret
0x00000200001f11df : test byte ptr [rdi], al ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000052d77c : test byte ptr [rdi], bh ; enter 8, -0x7d ; jmp qword ptr [rax]
0x00000200005bd122 : test byte ptr [rdi], bl ; ret 0xffe9
0x00000200005dea26 : test byte ptr [rdi], ch ; adc al, 0xf0 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000544b31 : test byte ptr [rdi], dh ; ret
0x00000200005d90e4 : test byte ptr [rdi], dl ; ret
0x00000200007a7c6b : test byte ptr [rdx + 0x2b000000], dl ; ret
0x00000200000e837f : test byte ptr [rdx + 0x48000bfc], ah ; add esp, 0x38 ; ret
0x00000200004ffa2e : test byte ptr [rdx + 0x4ff89c], ch ; add rax, r10 ; jmp rax
0x00000200000f25ff : test byte ptr [rdx + 0xf1a8c], cl ; add rax, rdx ; jmp rax
0x000002000046d976 : test byte ptr [rdx + rax - 0x74b80000], ah ; ret
0x0000020000002c01 : test byte ptr [rdx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000a5e55 : test byte ptr [rdx + rdi*8 - 0x74b70001], dh ; ret 0x8348
0x0000020000124349 : test byte ptr [rdx + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200003ff42f : test byte ptr [rdx - 0x1000000], bh ; ret
0x00000200003fb5b8 : test byte ptr [rdx - 0x1000000], bl ; ret
0x00000200001270f5 : test byte ptr [rdx - 0x74000003], dh ; ret 0x6948
0x000002000013dff9 : test byte ptr [rdx - 0x74fffffa], bh ; ret
0x00000200006e4035 : test byte ptr [rdx - 0x75000000], dl ; ret 0xd148
0x00000200000ade52 : test byte ptr [rdx - 0x9fff161], bh ; ret
0x000002000005665d : test byte ptr [rdx - 0xa000000], cl ; ret 0xf08
0x00000200004686d6 : test byte ptr [rdx - 0xa000000], dl ; ret
0x00000200005f508e : test byte ptr [rdx - 0xa35], al ; ret 0x3b41
0x00000200007b4a87 : test byte ptr [rdx - 0xfffe92], bl ; ret
0x0000020000413b89 : test byte ptr [rdx], ah ; or eax, 0x33450018 ; in al, -0xa ; ret
0x000002000005043b : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004fb029 : test byte ptr [rdx], al ; ret
0x00000200004fb2d9 : test byte ptr [rdx], al ; ret 0xe
0x00000200000f6c6a : test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000200004ce70a : test byte ptr [rdx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200001344ab : test byte ptr [rdx], dl ; ret
0x00000200007ce6d8 : test byte ptr [rip + 0x6b000001], cl ; ret
0x000002000001dc8f : test byte ptr [rip - 0x74ffeb83], ah ; ret
0x000002000051f915 : test byte ptr [rip - 0x74fff6b8], dh ; ret
0x00000200006c0d5e : test byte ptr [rip - 0x74ffffff], dl ; ret 0xe083
0x0000020000011da4 : test byte ptr [rip - 0xffeae5], al ; ret
0x0000020000196d81 : test byte ptr [rsi + 0x2f], bh ; int1 ; dec dword ptr [rax - 0x75] ; ret 0x8348
0x0000020000553003 : test byte ptr [rsi + 0x48000000], bh ; mov ecx, ebx ; call rax
0x0000020000497593 : test byte ptr [rsi + 0x77], bh ; adc eax, dword ptr [rax] ; ret
0x00000200000b2061 : test byte ptr [rsi + rax], dh ; add byte ptr [rcx - 0x75], cl ; ret 0x8944
0x000002000003e559 : test byte ptr [rsi + rdi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x000002000000eec1 : test byte ptr [rsi + rsi + 0x15], ch ; add byte ptr [rax - 1], cl ; ret
0x00000200005c3178 : test byte ptr [rsi - 0x166f0038], bl ; ret 0xffea
0x0000020000490309 : test byte ptr [rsi - 0x34], bl ; adc eax, dword ptr [rax] ; mov rcx, rbp ; call rax
0x00000200006a3ff8 : test byte ptr [rsi - 0x73000000], bh ; jmp qword ptr [rbx]
0x00000200005deed7 : test byte ptr [rsi - 0x74000fe0], ah ; ret 0xe8c1
0x0000020000047265 : test byte ptr [rsi - 0x74ffec9b], bl ; ret 0xf641
0x00000200004d366c : test byte ptr [rsi - 0x74ffef71], cl ; ret
0x00000200000dc692 : test byte ptr [rsi - 0x74fff389], al ; push rcx ; sub al, 0x3b ; ret 0xe273
0x00000200007bc6bb : test byte ptr [rsi - 0x74fffeea], dl ; ret
0x000002000002035a : test byte ptr [rsi - 0x74fffffc], ch ; ret
0x000002000079eb22 : test byte ptr [rsi - 0x7cfffd96], cl ; call qword ptr [rsi]
0x000002000046c249 : test byte ptr [rsi - 0x9000009], dh ; ret
0x0000020000657870 : test byte ptr [rsi - 0x9ffffff], cl ; ret 0xf01
0x00000200006cda5d : test byte ptr [rsi - 0xa000000], bh ; ret 0x7401
0x0000020000021960 : test byte ptr [rsi - 0xa000000], dl ; ret
0x000002000024da9c : test byte ptr [rsi], al ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf08
0x00000200005c520b : test byte ptr [rsi], al ; jmp 0x200005c5215
0x000002000012d471 : test byte ptr [rsi], bh ; add eax, 0xce8b0008 ; call rax
0x00000200004ffd6d : test byte ptr [rsi], bl ; or eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000002000018c5e0 : test byte ptr [rsi], bl ; out dx, eax ; inc dword ptr [rcx - 0x75] ; ret
0x0000020000249146 : test byte ptr [rsi], ch ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xba49
0x00000200006c6940 : test byte ptr [rsi], ch ; ret
0x00000200000e458e : test byte ptr [rsi], ch ; sub al, 0xc ; add byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rdx]
0x00000200003c8f55 : test byte ptr [rsi], dl ; ret 0
0x0000020000515def : test byte ptr [rsi], dl ; ret 9
0x000002000017d934 : test byte ptr [rsi], dl ; wait ; in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x00000200000b4c8a : test byte ptr [rsp + rax - 0x49f10000], cl ; ret
0x00000200004950b8 : test byte ptr [rsp + rcx*8], ah ; dec dword ptr [rax - 0x75] ; ret
0x000002000005d9fd : test byte ptr [rsp + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x830f
0x00000200005c0d95 : test byte ptr [rsp + rdx*8], ah ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x00000200000a1618 : test byte ptr ss:[rcx + 0x1b], 4 ; jne 0x200000a1627 ; ret
0x000002000010e97c : test ch, 2 ; je 0x2000010e969 ; jmp 0x2000010e94c
0x000002000055ef46 : test ch, bh ; mov bl, 9 ; add byte ptr [rcx - 1], al ; ret 0x8349
0x0000020000085120 : test ch, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000413d14 : test ch, bl ; call qword ptr [rdi]
0x000002000010608d : test ch, bl ; ret 6
0x000002000042b07e : test ch, cl ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000020000018f8c : test ch, dh ; mov edi, 0x8b410014 ; ret 0xc12b
0x0000020000176281 : test ch, dh ; ret 0xfff9
0x0000020000161350 : test ch, dl ; inc dword ptr [rcx - 0x75] ; ret 0x8548
0x00000200004cefb1 : test ch, dl ; ret 0x10
0x00000200000b7aa4 : test cl, 0x10 ; je 0x200000b7aaf ; ret
0x000002000003fb7f : test cl, 0x10 ; jne 0x2000003fb92 ; add rsp, 0x38 ; ret
0x00000200004bb492 : test cl, 0x10 ; jne 0x200004bb49d ; ret
0x0000020000117b99 : test cl, 0x20 ; je 0x20000117ba7 ; inc eax ; ret
0x00000200000f16e6 : test cl, 0x20 ; jne 0x200000f16f4 ; xor eax, eax ; ret
0x0000020000117b81 : test cl, 0x3f ; je 0x20000117b8f ; inc eax ; ret
0x00000200004300ba : test cl, 0xf8 ; jne 0x200004300c5 ; ret
0x00000200000283bc : test cl, 1 ; jne 0x200000283ca ; xor eax, eax ; ret
0x000002000004e31a : test cl, 1 ; jne 0x2000004e329 ; xor eax, eax ; ret
0x00000200003ee0fd : test cl, 1 ; jne 0x200003ee14b ; mov qword ptr [r9], r10 ; ret
0x000002000007c773 : test cl, 3 ; cmove rax, rcx ; ret
0x00000200005baf92 : test cl, 3 ; je 0x200005bafa3 ; call 0x200006b721f
0x00000200001d98b2 : test cl, 8 ; je 0x200001d98c0 ; or al, 0x10 ; ret
0x0000020000471129 : test cl, 8 ; jne 0x20000471138 ; ret
0x0000020000072a38 : test cl, ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200003dd47a : test cl, ah ; mov eax, 0xeb000000 ; sub al, 0x8b ; ret
0x000002000002ccae : test cl, al ; je 0x2000002ccc1 ; mov eax, 1 ; ret
0x000002000045f70b : test cl, al ; loopne 0x2000045f769 ; xor byte ptr [rax], al ; ret 0x700
0x00000200000847fe : test cl, al ; sete al ; ret
0x00000200000c5da4 : test cl, al ; setne al ; ret
0x0000020000115115 : test cl, bh ; sbb al, 6 ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000018031d : test cl, ch ; hlt ; in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x000002000002d4d6 : test cl, ch ; ret 0x13
0x0000020000150f41 : test cl, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7406
0x0000020000136d70 : test cl, cl ; in al, dx ; xchg byte ptr [rdx], bh ; add dh, dh ; ret 0xf02
0x0000020000069772 : test cl, cl ; jne 0x20000069794 ; add rsp, 0x28 ; ret
0x00000200004b3074 : test cl, cl ; jne 0x200004b308d ; xor eax, eax ; ret
0x0000020000568533 : test cl, cl ; jne 0x200005fd86e ; ret
0x000002000069370e : test cl, cl ; jne 0x20000693720 ; mov eax, 1 ; ret
0x0000020000693851 : test cl, cl ; jne 0x2000069385e ; mov al, 1 ; ret
0x0000020000471125 : test cl, cl ; js 0x20000471149 ; test cl, 8 ; jne 0x2000047113c ; ret
0x0000020000055e99 : test cl, cl ; sete al ; ret
0x000002000057ca1a : test cl, cl ; setne al ; pop rbp ; ret
0x000002000021fc9c : test cl, dh ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000002000024e927 : test cl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x1ce9
0x00000200001ed2b7 : test cl, dl ; jne 0x200001ed2c6 ; mov eax, r10d ; jmp 0x200001ed2ed
0x000002000010106f : test cl, dl ; xor byte ptr [rcx - 0x48f0ffc6], dl ; ret
0x00000200001ed2b6 : test cl, r10b ; jne 0x200001ed2c7 ; mov eax, r10d ; jmp 0x200001ed2ee
0x000002000013ac7d : test cx, 0xffff ; jne 0x2000013ac8c ; ret
0x0000020000228869 : test cx, ax ; jne 0x2000022887a ; mov byte ptr [rdx + 2], cl ; ret
0x0000020000481afa : test cx, ax ; jne 0x20000481ae8 ; mov al, 1 ; ret
0x0000020000481af9 : test cx, ax ; jne 0x20000481ae9 ; mov al, 1 ; ret
0x00000200000e6ecd : test cx, cx ; je 0x200000e6ee0 ; add rsp, 0x28 ; ret
0x000002000044559c : test dh, ah ; or dword ptr [rax], eax ; add rsp, 0x68 ; ret
0x00000200006e36d6 : test dh, bh ; add dword ptr [rax], eax ; add bh, bh ; ret 0x8349
0x00000200004a7f95 : test dh, ch ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000b22c7 : test dh, ch ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0x8944
0x000002000004f332 : test dh, dh ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000005462a : test dh, dh ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000001a61b : test dh, dh ; jne 0x2000001a5e4 ; jmp 0x2000001a601
0x000002000013b14d : test dh, dh ; jne 0x2000013b0e0 ; xor rax, rax ; ret
0x000002000013cb31 : test dh, dh ; jne 0x2000013cac6 ; xor eax, eax ; ret
0x000002000013cbc4 : test dh, dh ; jne 0x2000013cb8a ; lea rax, qword ptr [rcx + rax - 1] ; ret
0x00000200004d1736 : test dh, dh ; test al, 0x10 ; add dh, dh ; ret
0x000002000019a52e : test dh, dh ; xlatb ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x000002000060f2f4 : test dh, dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; shr cl, 1 ; ret 1
0x00000200000d8bfd : test dh, dl ; dec dword ptr [rbx + rcx*4 - 0x64] ; ret 0x7340
0x00000200000bd63e : test dl, 0x20 ; je 0x200000bd651 ; mov rax, qword ptr [rcx + 0x18] ; ret
0x000002000002ad89 : test dl, 1 ; je 0x2000002ad9a ; and qword ptr [rcx], rax ; ret
0x00000200005baff7 : test dl, 3 ; je 0x200005bb008 ; call 0x200006b721f
0x000002000020beba : test dl, 7 ; je 0x2000020bec9 ; xor al, al ; ret
0x00000200000c4e94 : test dl, ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000036ee9 : test dl, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8d4d
0x000002000054917b : test dl, al ; mov ecx, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000106132 : test dl, bl ; ret 6
0x0000020000474e57 : test dl, ch ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x86 ; ret 6
0x000002000012b6cd : test dl, ch ; add dword ptr [rax], eax ; add bh, bh ; ret 0x894a
0x00000200000a8e36 : test dl, ch ; fimul dword ptr [rsi] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004a4c50 : test dl, ch ; ret
0x0000020000491174 : test dl, ch ; ret 0x13
0x00000200000d724a : test dl, cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003d2fe8 : test dl, cl ; ret
0x00000200001062a0 : test dl, cl ; ret 6
0x00000200000bf63c : test dl, dl ; je 0x200000bf638 ; mov al, 1 ; ret
0x00000200000f370c : test dl, dl ; je 0x200000f3719 ; xor al, al ; ret
0x00000200000f370c : test dl, dl ; je 0x200000f371c ; xor al, al ; ret
0x0000020000119a62 : test dl, dl ; je 0x20000119a75 ; cmp byte ptr [rcx + 0x21], al ; jne 0x20000119a75 ; ret
0x000002000007a33e : test dl, dl ; jne 0x2000007a34f ; mov al, byte ptr [rax + rcx*2 + 1] ; ret
0x00000200000832b2 : test dl, dl ; jne 0x2000018ccef ; ret
0x000002000008396a : test dl, dl ; jne 0x2000018cf67 ; ret
0x00000200005525e4 : test dl, dl ; jne 0x200005525ed ; ret
0x0000020000073e45 : test dl, dl ; push rsi ; adc dword ptr [rax], eax ; mov rax, r8 ; ret
0x000002000053d4af : test dword ptr [0x37e8000a], ecx ; ret
0x000002000002caca : test dword ptr [r10 + 0x98], edx ; jne 0x2000002cadd ; ret
0x0000020000507084 : test dword ptr [rax + 0x245002f], esi ; ret
0x00000200004dbedb : test dword ptr [rax + 0x3000000], ebx ; ret 0x9489
0x0000020000242f1e : test dword ptr [rax + 0x33000001], ebp ; leave ; call r10
0x000002000023b614 : test dword ptr [rax + 0x33000001], ecx ; leave ; call r9
0x000002000078986b : test dword ptr [rax + 0x33000012], ebx ; leave ; call 0x200000c5b31
0x000002000063e147 : test dword ptr [rax + 0xf000000], esp ; xchg eax, ebp ; ret
0x0000020000066f01 : test dword ptr [rax + 0xf000004], ebp ; mov dh, 0x86 ; ret
0x0000020000065fc0 : test dword ptr [rax + 0xf000004], ebx ; mov dh, 0x8b ; ret 0
0x00000200005df7e3 : test dword ptr [rax + rax - 0x74b80000], ebp ; ret
0x00000200000c8ab0 : test dword ptr [rax + rax - 0x74bf0000], ebx ; ret
0x00000200000a293e : test dword ptr [rax + rbp], ecx ; str word ptr [rcx - 0x75] ; ret
0x00000200004b22f3 : test dword ptr [rax - 0x3cffede5], esp ; xor eax, eax ; ret
0x000002000006b68d : test dword ptr [rax - 0x3f], 0x8b4909e2 ; ret
0x0000020000015162 : test dword ptr [rax - 0x3f], 0x8b4919e6 ; ret 0xc148
0x000002000063b660 : test dword ptr [rax - 0x73], 0x8348431c ; ret
0x00000200003f0104 : test dword ptr [rax - 0x73], 0x83484b1c ; ret
0x00000200006d7e09 : test dword ptr [rax - 0x73], 0xff48ff45 ; ret 0x8948
0x00000200003ee0b9 : test dword ptr [rax - 0x74ffe686], esi ; ret
0x00000200004a5187 : test dword ptr [rax - 0x74ffed41], esp ; ret
0x00000200005223da : test dword ptr [rax - 0x74fff6ca], ebp ; ret
0x0000020000118670 : test dword ptr [rax - 0x75000000], ecx ; ret 0x6b48
0x0000020000525b3b : test dword ptr [rax - 0x75], ecx ; out dx, eax ; call 0x20000148078
0x00000200006dbe00 : test dword ptr [rax - 0x7b], 0xe80574c9 ; ret 0xffa6
0x000002000077ee8b : test dword ptr [rax - 0x7cffffef], esi ; ret
0x0000020000146bc7 : test dword ptr [rax - 0x7cfffffd], esp ; ret 0xebff
0x00000200003f350c : test dword ptr [rax - 0x9ffe6bc], esp ; ret 0x7510
0x00000200004ad1af : test dword ptr [rax - 0x9ffedab], ebx ; ret
0x00000200000d9325 : test dword ptr [rax - 0x9fff35d], esp ; ret
0x00000200006ac45b : test dword ptr [rax - 0x9ffffff], edx ; ret 0x7403
0x000002000049ec6a : test dword ptr [rax - 0xa000000], eax ; ret
0x000002000043d19e : test dword ptr [rax - 0xa000000], esi ; ret 0xf01
0x00000200001bd2d4 : test dword ptr [rax - 3], esi ; ret
0x00000200006f48b5 : test dword ptr [rax], 0x35890000 ; push rcx ; ret 0x48ff
0x000002000061ff90 : test dword ptr [rax], 0x8b4c0000 ; ret
0x0000020000149d85 : test dword ptr [rax], 0xb2e90000 ; ret 0
0x00000200004e3b2a : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret
0x00000200003d5e37 : test dword ptr [rax], eax ; ret
0x00000200004e4494 : test dword ptr [rax], ebp ; ret 0xf
0x00000200000504e3 : test dword ptr [rax], ebx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000247edb : test dword ptr [rax], ebx ; or byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x000002000003dee7 : test dword ptr [rax], ebx ; std ; adc al, byte ptr [rax] ; ret
0x00000200006cb673 : test dword ptr [rax], ecx ; or byte ptr [rax], al ; add dh, dh ; ret
0x0000020000491054 : test dword ptr [rax], ecx ; ret
0x0000020000070140 : test dword ptr [rax], ecx ; xchg byte ptr [rcx], dl ; add byte ptr [rbp + 0x33], al ; sal dh, cl ; ret 0xf1e
0x00000200006cfdf1 : test dword ptr [rax], edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000052de31 : test dword ptr [rax], edi ; ret
0x00000200000e06f4 : test dword ptr [rax], edx ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret
0x000002000007bb25 : test dword ptr [rax], edx ; fisttp word ptr [rsi] ; add dh, al ; xor byte ptr [r9], al ; ret
0x000002000000ef43 : test dword ptr [rax], edx ; jne 0x2000000ef50 ; xor eax, eax ; ret
0x00000200000f41a9 : test dword ptr [rax], edx ; pop rsp ; or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000010ed99 : test dword ptr [rax], esi ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x12b
0x000002000050066b : test dword ptr [rax], esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000069914 : test dword ptr [rbp + 0x480011cd], edx ; add esp, 0x28 ; ret
0x000002000006d62d : test dword ptr [rbp + rbx*4 + 0x11], edi ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005262c0 : test dword ptr [rbp + rcx*4 + 0x42], 0x15b6e860 ; ret
0x00000200000b420b : test dword ptr [rbp + rdi*8 - 1], edx ; dec dword ptr [rcx - 0x75] ; ret 0xba48
0x0000020000187c5c : test dword ptr [rbp - 0x16001189], ebp ; ret
0x00000200000ad1f4 : test dword ptr [rbp - 0x17fffffd], eax ; ret 0xff3b
0x0000020000098449 : test dword ptr [rbp - 0x69], eax ; sldt word ptr [rsp + rax*4 - 0x55] ; ret 0
0x000002000049f290 : test dword ptr [rbp - 0x74ffecf3], edi ; ret
0x0000020000553f40 : test dword ptr [rbp - 0x74fff5e8], esi ; ret
0x00000200000898a2 : test dword ptr [rbp - 0x75000000], edi ; ret
0x00000200000fb632 : test dword ptr [rbp - 0x75fff4fd], eax ; ret
0x00000200005e802f : test dword ptr [rbp - 0x7a000eb0], edi ; ret 0x840f
0x00000200006c7cfd : test dword ptr [rbp - 0x7d000000], eax ; call qword ptr [rdi]
0x00000200005cd6f7 : test dword ptr [rbp - 0x7e0013b9], edi ; ret 0x1000
0x00000200004e97e4 : test dword ptr [rbp - 0xa000000], ebx ; ret
0x000002000043d1a7 : test dword ptr [rbp - 0xa000000], ebx ; ret 0xf02
0x00000200000dc4fb : test dword ptr [rbp - 0xa000000], esi ; ret
0x000002000052fb2f : test dword ptr [rbx + 0x38], ecx ; jne 0x2000052fb42 ; add rsp, 0x38 ; ret
0x0000020000500b7f : test dword ptr [rbx + 0x3b000000], esp ; ret
0x000002000015638b : test dword ptr [rbx + 0x41000003], ebx ; call rdx
0x00000200001115b8 : test dword ptr [rbx + 0x48000647], edx ; add esp, 0x38 ; ret
0x000002000012d8c9 : test dword ptr [rbx + rax + 0x1b10008], ebp ; mov al, cl ; ret
0x0000020000189c40 : test dword ptr [rbx + rax*8 - 0x5d160012], ebp ; ret
0x000002000041b602 : test dword ptr [rbx + rax*8], esp ; add byte ptr [r9 + 3], cl ; int 0xff
0x00000200000ba6da : test dword ptr [rbx + rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006d64f9 : test dword ptr [rbx - 0x1000000], eax ; ret
0x00000200004588ce : test dword ptr [rbx - 0x3fffffcc], edi ; jmp 0x2000045889f
0x000002000001b86a : test dword ptr [rbx - 0x63], edi ; adc al, 0 ; ret
0x0000020000566ecc : test dword ptr [rbx - 0x74fff6a2], edx ; ret
0x0000020000132a3d : test dword ptr [rbx - 0x74fff829], esi ; ret 0x4466
0x00000200007a93e4 : test dword ptr [rbx - 0x74fffe1a], ebx ; ret
0x00000200004ffae8 : test dword ptr [rbx - 0x75000000], edx ; ret
0x00000200005c45a5 : test dword ptr [rbx - 0x7c001507], eax ; call qword ptr [rax]
0x0000020000105c5c : test dword ptr [rbx - 0x9fff93b], esp ; ret
0x0000020000059f68 : test dword ptr [rbx - 0x9fffffa], esi ; ret
0x00000200000c16ce : test dword ptr [rbx - 0x9fffffb], esp ; ret
0x000002000010d5b6 : test dword ptr [rbx - 0xa000000], ebx ; ret
0x000002000004f5ab : test dword ptr [rbx - 0xa000000], edx ; ret
0x00000200007a5811 : test dword ptr [rbx - 0xfffdf2], eax ; ret
0x000002000066fc47 : test dword ptr [rbx - 0xffffff], edi ; ret 0x3b41
0x00000200000e9e88 : test dword ptr [rbx], eax ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0x0000020000463613 : test dword ptr [rbx], eax ; ret
0x0000020000568536 : test dword ptr [rbx], ebp ; push rbx ; or dword ptr [rax], eax ; ret
0x000002000007efe8 : test dword ptr [rbx], ebx ; ret 0x10
0x00000200000dec5a : test dword ptr [rbx], ecx ; add al, byte ptr [rax] ; add bh, bh ; ret 0x8d48
0x000002000043f084 : test dword ptr [rbx], ecx ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8941
0x0000020000515dfa : test dword ptr [rbx], ecx ; ret 9
0x000002000072238b : test dword ptr [rbx], edi ; add dword ptr [rax], eax ; add byte ptr [rcx - 9], cl ; ret
0x00000200004224f8 : test dword ptr [rbx], edi ; ret
0x0000020000214f23 : test dword ptr [rbx], edx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x0000020000491244 : test dword ptr [rbx], edx ; ret 0x13
0x00000200000f70aa : test dword ptr [rbx], edx ; str word ptr [rax + 3] ; int 0xff
0x00000200005015f6 : test dword ptr [rbx], esi ; or dword ptr [rsi], 0xebc78b00 ; ret 0x854d
0x000002000041f370 : test dword ptr [rbx], esp ; loope 0x2000041f392 ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x000002000001b6e1 : test dword ptr [rcx + 0x10], edx ; jne 0x2000001b6f2 ; mov al, r8b ; ret
0x0000020000432b4c : test dword ptr [rcx + 0x23], ecx ; ret 0x3b48
0x00000200001f4af5 : test dword ptr [rcx + 0x30], 0x80000 ; je 0x200001f4b08 ; ret
0x00000200002316a8 : test dword ptr [rcx + 0x41000000], ecx ; mov al, bl ; ret
0x000002000003e2b4 : test dword ptr [rcx + 0x410012f9], edi ; mov al, al ; ret
0x0000020000102fd6 : test dword ptr [rcx + 0x480006e4], esi ; add esp, 0x28 ; ret
0x000002000051cc1c : test dword ptr [rcx + 0x48000971], edi ; add esp, 0x28 ; ret
0x0000020000037170 : test dword ptr [rcx + 0x4a], edx ; adc eax, dword ptr [rax] ; ret
0x00000200004aa094 : test dword ptr [rcx + 0x518], ebx ; jne 0x200004aa0e7 ; ret
0x00000200004aa093 : test dword ptr [rcx + 0x518], r11d ; jne 0x200004aa0e8 ; ret
0x0000020000187766 : test dword ptr [rcx + 0x6f], esp ; out dx, al ; dec dword ptr [rcx - 0x75] ; ret
0x00000200005e9522 : test dword ptr [rcx + 0x73], ebp ; int1 ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200005e9132 : test dword ptr [rcx + 0x77], ebx ; int1 ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200004b98de : test dword ptr [rcx + rax - 0x7cb80000], ebp ; ret
0x00000200004d416d : test dword ptr [rcx + rax], esi ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000200005924d7 : test dword ptr [rcx + rbx*8 - 0x9be0019], ebx ; ret 0x7402
0x000002000015f93d : test dword ptr [rcx + rdi - 0x48f00016], esp ; ret 0xb9
0x0000020000056f23 : test dword ptr [rcx + rdi*4], esi ; adc al, byte ptr [rax] ; xor al, al ; ret
0x00000200000af32b : test dword ptr [rcx + rdx*4 + 0x3345000e], ecx ; sal dh, cl ; ret 0xf1e
0x00000200004df9b5 : test dword ptr [rcx - 0x29], 0x1c8b48ff ; ret
0x0000020000144055 : test dword ptr [rcx - 0x39ffffff], esp ; ret
0x0000020000015267 : test dword ptr [rcx - 0x3f], 0x8b4910fe ; ret 0xbd48
0x00000200003e75b8 : test dword ptr [rcx - 0x40], esi ; sbb dword ptr [rax], eax ; call 0x20000007b1c
0x0000020000445bf8 : test dword ptr [rcx - 0x74ffe9bd], ebx ; ret
0x000002000005dc65 : test dword ptr [rcx - 0x74ffed9c], ebp ; ret
0x0000020000530df8 : test dword ptr [rcx - 0x74fff75d], eax ; ret
0x00000200007b6b53 : test dword ptr [rcx - 0x74fffeaf], ecx ; ret
0x0000020000409342 : test dword ptr [rcx - 0x75], 0x8b83ebc3 ; ret
0x0000020000196430 : test dword ptr [rcx - 0x9000ee0], ebx ; ret
0x00000200004825bc : test dword ptr [rcx - 0x9fffffe], esi ; ret
0x00000200003cb257 : test dword ptr [rcx - 0xd], esi ; dec dword ptr [rdi] ; ret 0x4d89
0x000002000062c40e : test dword ptr [rcx], eax ; add al, al ; ret
0x000002000043f341 : test dword ptr [rcx], ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005594b4 : test dword ptr [rcx], ebp ; out 9, eax ; add al, ch ; ret 0xfa43
0x00000200004b0807 : test dword ptr [rcx], ebx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000007a57c : test dword ptr [rcx], ebx ; call qword ptr [rax]
0x00000200001b19c1 : test dword ptr [rcx], ecx ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x000002000005a0f0 : test dword ptr [rcx], edi ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200004b6501 : test dword ptr [rcx], edi ; call 0x1ffc442651f
0x000002000006fd91 : test dword ptr [rcx], edx ; add dh, dh ; ret
0x000002000003ecb4 : test dword ptr [rcx], esi ; clc ; adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200004d55b4 : test dword ptr [rcx], esi ; jbe 0x200004d55d1 ; add byte ptr [rcx - 0x73], cl ; add al, 0x90 ; ret
0x000002000042c077 : test dword ptr [rcx], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000046ba6e : test dword ptr [rcx], esp ; or al, byte ptr [rax] ; add dh, dh ; ret
0x00000200007bc8d6 : test dword ptr [rdi + 0x48000114], ecx ; add esp, 0x48 ; ret
0x00000200007bb08a : test dword ptr [rdi + 0x4800011e], edi ; add esp, 0x28 ; ret
0x00000200004bc068 : test dword ptr [rdi + 0x480011a7], edx ; add esp, 0x28 ; ret
0x000002000059d2b8 : test dword ptr [rdi + 0x72000000], ecx ; ret 0xdb33
0x0000020000408e64 : test dword ptr [rdi + 0x73], edi ; sbb byte ptr [rax], al ; mov al, 1 ; ret
0x00000200004b5835 : test dword ptr [rdi + rbp*8 - 0x48f0ffef], esi ; ret
0x000002000060f008 : test dword ptr [rdi + rdi*8 + 0x28c48348], esi ; ret
0x00000200004e7a01 : test dword ptr [rdi + rdx*4 + 0xf], eax ; add dh, dh ; ret 0x7420
0x000002000046b4d4 : test dword ptr [rdi - 0x17ffea92], edx ; mov dh, 0x4e ; ret 0xfff
0x00000200005aa12f : test dword ptr [rdi - 0x17ffffff], edi ; mov bh, 0x7f ; ret 0xebff
0x00000200000d62f2 : test dword ptr [rdi - 0x38], ecx ; or al, 0 ; add rsp, 0x28 ; ret
0x00000200003e1920 : test dword ptr [rdi - 0x74ffe603], edi ; ret
0x0000020000480e56 : test dword ptr [rdi - 0x74ffeb95], esp ; pop rsp ; ret 0x4804
0x0000020000094d89 : test dword ptr [rdi - 0x74fff039], ebx ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4802
0x000002000054ba62 : test dword ptr [rdi - 0x74fff590], ebp ; ret
0x00000200004ab30d : test dword ptr [rdi - 0x74ffffff], edx ; ret
0x0000020000047f08 : test dword ptr [rdi - 0x9ffeca3], esp ; ret
0x00000200004c4fa0 : test dword ptr [rdi - 0x9ffeec1], esi ; ret
0x00000200000aff43 : test dword ptr [rdi - 0x9fffff6], esp ; ret 0xf04
0x000002000042fe64 : test dword ptr [rdi - 0x9ffffff], ebp ; ret
0x00000200004e5e05 : test dword ptr [rdi - 0x9ffffff], ebx ; ret
0x00000200000d4d46 : test dword ptr [rdi - 0xa000000], eax ; ret
0x00000200001e0469 : test dword ptr [rdi - 0xa000000], ecx ; ret 0x7401
0x000002000010b8db : test dword ptr [rdi], 0x686c385 ; add dh, dh ; ret
0x00000200004e57a0 : test dword ptr [rdi], eax ; mov ah, 0xf ; add dh, dh ; ret
0x00000200005a94f3 : test dword ptr [rdi], ecx ; nop ; jmp 0x1ffc285de01
0x000002000003088c : test dword ptr [rdi], ecx ; xchg eax, edi ; adc eax, dword ptr [rax] ; mov rcx, rdi ; call rbx
0x00000200001762c7 : test dword ptr [rdi], edi ; ret
0x000002000052dfbc : test dword ptr [rdi], edx ; ret 8
0x000002000003eca0 : test dword ptr [rdi], esi ; clc ; adc al, byte ptr [rax] ; lea eax, dword ptr [rcx + 1] ; ret
0x000002000052dfcd : test dword ptr [rdi], esi ; ret 8
0x000002000021148d : test dword ptr [rdi], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0x00000200004f05a7 : test dword ptr [rdx + 0x2a], esp ; str word ptr [rbp + 0x3b] ; ret
0x000002000019bea2 : test dword ptr [rdx + 0x2e], eax ; dec dword ptr [rax - 0x75] ; ret
0x000002000010cda1 : test dword ptr [rdx + 0x49000678], edi ; mov edx, eax ; call qword ptr [r8]
0x00000200000ddf1b : test dword ptr [rdx + 0x63], ecx ; or al, 0 ; xor eax, eax ; ret
0x000002000002cacb : test dword ptr [rdx + 0x98], edx ; jne 0x2000002cadc ; ret
0x00000200004ac9ab : test dword ptr [rdx + 0xc], ecx ; jne 0x200004ac9bc ; mov al, r9b ; ret
0x00000200005ada87 : test dword ptr [rdx + 0xfffea18], ebp ; mov dh, 0x87 ; ret 6
0x0000020000070267 : test dword ptr [rdx + rax - 0x8bf0000], edx ; ret
0x000002000007f173 : test dword ptr [rdx + rax*8], ecx ; adc byte ptr [rax], al ; mov eax, r9d ; ret
0x00000200000c483f : test dword ptr [rdx + rax], esp ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000724e1 : test dword ptr [rdx + rbp*2 - 0x74beffef], edx ; ret
0x00000200000b139c : test dword ptr [rdx + rdi*2 + 0x3345000e], ebp ; sal dh, cl ; ret 0xf1e
0x00000200000b1439 : test dword ptr [rdx + rdi*2 + 0xe], edi ; add byte ptr [rbp + 0x33], al ; sal dh, cl ; ret 0xf1e
0x000002000058913f : test dword ptr [rdx - 0x160018fe], edx ; ret 0xe702
0x0000020000487c84 : test dword ptr [rdx - 0x74ffebc9], edx ; ret
0x0000020000490e66 : test dword ptr [rdx - 0x74ffec3b], ebp ; ret
0x00000200000a954c : test dword ptr [rdx - 0x74fff127], edi ; ret
0x000002000010bc82 : test dword ptr [rdx - 0x74fff97c], ecx ; ret
0x000002000006c7b1 : test dword ptr [rdx - 0x9fff0db], edx ; ret
0x00000200004c93e8 : test dword ptr [rdx - 0x9fffffb], ebx ; ret
0x000002000005a23e : test dword ptr [rdx - 0xa000000], edi ; ret 0xf08
0x00000200000dc4e5 : test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000002000012f30e : test dword ptr [rdx], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000f0ce9 : test dword ptr [rdx], eax ; je 0x200000f0cfc ; mov eax, 1 ; ret
0x00000200006f6a37 : test dword ptr [rdx], ebp ; ret 0xf6ff
0x0000020000515ddb : test dword ptr [rdx], ebp ; ret 9
0x00000200005a064a : test dword ptr [rdx], ebx ; add byte ptr [rcx - 0x75], al ; ret 0xf42
0x0000020000452543 : test dword ptr [rdx], ebx ; rcl dword ptr [rip + 0xd8d4800], 0x11 ; ret
0x000002000040206b : test dword ptr [rdx], ebx ; ret
0x000002000043e8b2 : test dword ptr [rdx], edi ; out dx, al ; inc dword ptr [rcx] ; xor eax, eax ; ret
0x00000200003e72cf : test dword ptr [rdx], edi ; ret 0x19
0x00000200001175c3 : test dword ptr [rdx], edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003e0745 : test dword ptr [rdx], esi ; add dword ptr [rax], eax ; add bh, bh ; ret
0x000002000049124e : test dword ptr [rdx], esi ; ret 0x13
0x0000020000020643 : test dword ptr [rdx], esp ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x000002000050315d : test dword ptr [rdx], esp ; push -0x3d00fff2 ; jmp 0x2000050314e
0x00000200004e5bd2 : test dword ptr [rip + 0x33000fb0], esp ; fisttp dword ptr [rax - 0x75] ; ret
0x000002000006761d : test dword ptr [rip + 0xf0011eb], ecx ; mov dh, 0x91 ; ret
0x0000020000180d81 : test dword ptr [rip - 0x12f4], ecx ; ret 0x8349
0x000002000004f57d : test dword ptr [rip - 0x16000001], eax ; ret
0x00000200004db4b8 : test dword ptr [rip - 0x16000019], edx ; ret
0x0000020000798c73 : test dword ptr [rip - 0x17fffd45], esi ; ret
0x00000200001762b8 : test dword ptr [rip - 0x4e00063d], edi ; add ecx, ebp ; ret
0x0000020000526324 : test dword ptr [rip - 0x74fff6f0], ebx ; ret 0x6b48
0x00000200004607de : test dword ptr [rip - 0x74ffffff], ebp ; ret
0x0000020000502a14 : test dword ptr [rip - 0x75fff191], eax ; ret
0x0000020000483a94 : test dword ptr [rip - 0x9ffebb8], eax ; ret
0x00000200000c47b2 : test dword ptr [rip - 0x9fffffd], edx ; ret
0x00000200004abbbc : test dword ptr [rip - 0x9fffffe], eax ; ret 0xf02
0x000002000040b78c : test dword ptr [rip - 0x9ffffff], edi ; ret
0x000002000002d913 : test dword ptr [rsi + rdi*4 - 0x74b7ffed], ebp ; ret
0x0000020000049929 : test dword ptr [rsi + rdi*8 - 1], ecx ; dec dword ptr [rax - 0x7d] ; ret
0x000002000054269f : test dword ptr [rsi + rdx*8 - 0x74b7fff6], eax ; ret 0x8b48
0x000002000016d552 : test dword ptr [rsi - 0x12], ebp ; in al, dx ; push rsi ; ret 0x7402
0x0000020000488be7 : test dword ptr [rsi - 0x17ffebd8], edx ; fild qword ptr [rbx] ; ret
0x000002000042d8c7 : test dword ptr [rsi - 0x18000000], eax ; scasd eax, dword ptr [rdi] ; stc ; ret
0x000002000004301e : test dword ptr [rsi - 0x3a], esp ; adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001b015f : test dword ptr [rsi - 0x740007d8], esp ; ret 0x778d
0x00000200003e3dc7 : test dword ptr [rsi - 0x74ffe613], esp ; ret
0x000002000049486f : test dword ptr [rsi - 0x74ffec66], edi ; ret 0x8348
0x000002000005dc94 : test dword ptr [rsi - 0x74ffed9c], eax ; ret
0x00000200004fc8fc : test dword ptr [rsi - 0x7d000000], edx ; ret
0x0000020000135105 : test dword ptr [rsi - 0x9fff846], ecx ; ret
0x00000200000c5aa7 : test dword ptr [rsi - 5], esi ; or dword ptr [rax], eax ; mov qword ptr [r8], rcx ; ret
0x000002000021fc63 : test dword ptr [rsi], 0x28c48348 ; ret
0x00000200000b9c7f : test dword ptr [rsi], eax ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200000b0946 : test dword ptr [rsi], eax ; idiv bh ; push rsi ; ret
0x00000200005cab42 : test dword ptr [rsi], eax ; ret
0x000002000007c717 : test dword ptr [rsi], ebp ; in eax, 0x10 ; add byte ptr [rcx - 0x75], al ; ret
0x000002000052dfd6 : test dword ptr [rsi], ebp ; ret 8
0x00000200000a5909 : test dword ptr [rsi], ebx ; add eax, 0xf6410000 ; ret 0xf0b
0x00000200003f10bb : test dword ptr [rsi], ebx ; pop rsi ; sbb dword ptr [rax], eax ; mov eax, r9d ; ret
0x00000200000b02d4 : test dword ptr [rsi], ecx ; add dh, dh ; ret 0xf1e
0x00000200003d1eea : test dword ptr [rsi], edx ; add byte ptr [rbx - 0x79f0c505], al ; ret
0x000002000009eb6b : test dword ptr [rsi], esi ; push rbx ; str word ptr [rbp - 0x7b] ; ret 0x850f
0x0000020000134618 : test dword ptr [rsi], esi ; ret 7
0x00000200000d8ac7 : test dword ptr [rsi], esp ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x0000020000412c42 : test dword ptr [rsp + rdx], eax ; sbb byte ptr [rax], al ; inc edx ; jmp 0x20000412c33
0x000002000021fc62 : test dword ptr cs:[rsi], 0x28c48348 ; ret
0x00000200001d3f1b : test dx, dx ; jne 0x200001d3f2c ; mov dword ptr [r8], eax ; ret
0x0000020000027434 : test eax, 0x10001 ; jne 0x20000027447 ; xor eax, eax ; ret
0x00000200006ee129 : test eax, 0x2e3bd285 ; ret 0x39
0x00000200005a9a43 : test eax, 0x345ffe9 ; ret
0x00000200006994dc : test eax, 0x40001 ; je 0x200006994ef ; mov al, 1 ; ret
0x000002000002c863 : test eax, 0x48000308 ; add esp, 0x68 ; ret
0x000002000004462f : test eax, 0x48000a50 ; add esp, 0x28 ; ret
0x00000200006b8b6f : test eax, 0x48c033ff ; add esp, 0x20 ; pop rbx ; ret
0x000002000067581c : test eax, 0x48c033ff ; add esp, 0x28 ; ret
0x000002000072b17f : test eax, 0x48c38bff ; add esp, 0x20 ; pop rbx ; ret
0x00000200006ad8db : test eax, 0x48c38bff ; add esp, 0x40 ; pop rbx ; ret
0x00000200007bc9ef : test eax, 0x48ffb626 ; add esp, 0x28 ; ret
0x000002000020bd5b : test eax, 0x48ffe711 ; mov ecx, ebx ; call 0x200000e8069
0x00000200003cb27b : test eax, 0x48fffff5 ; add esp, 0x40 ; pop rbp ; ret
0x000002000013d6ef : test eax, 0x48fffffd ; add esp, 0x38 ; ret
0x00000200004c5592 : test eax, 0x4c4d18 ; add rax, rcx ; jmp rax
0x00000200007ae354 : test eax, 0x58948ff ; ret
0x00000200005ebdfa : test eax, 0x5ce990ff ; ret 0xfff1
0x000002000058f327 : test eax, 0x81000002 ; ret
0x00000200005ce33d : test eax, 0x81000002 ; ret 0x17c
0x00000200001d45f7 : test eax, 0x8a000507 ; ret
0x00000200005abc69 : test eax, 0x8b000001 ; ret 0xffb9
0x000002000022ca53 : test eax, 0x8b000205 ; ret
0x000002000005dc66 : test eax, 0x8b001264 ; ret
0x00000200001b5dbf : test eax, 0x8b002dee ; ret
0x00000200005bc7a2 : test eax, 0x8b48ffe9 ; ret
0x0000020000428a53 : test eax, 0x8bffc393 ; ret
0x0000020000423c03 : test eax, 0x8bffcc32 ; ret
0x0000020000490653 : test eax, 0x8bffdbc9 ; ret
0x000002000013fd53 : test eax, 0x8bfffdfe ; ret
0x000002000052dc11 : test eax, 0xa5ebd0ff ; call rax
0x000002000070ded2 : test eax, 0xbaffbe ; add byte ptr [rax], dl ; add byte ptr [rbx], bh ; ret 0x676
0x000002000069f0e4 : test eax, 0xc48348ff ; jo 0x2000069f14f ; ret
0x000002000069f255 : test eax, 0xc48348ff ; jo 0x2000069f2c0 ; ret
0x00000200006a3a6d : test eax, 0xc48348ff ; jo 0x200006a3ad6 ; ret
0x00000200006a6605 : test eax, 0xc48348ff ; jo 0x200006a6670 ; ret
0x00000200006a6604 : test eax, 0xc48348ff ; jo 0x200006a6671 ; ret
0x000002000069f147 : test eax, 0xc48348ff ; pop rax ; ret
0x00000200006a8fc1 : test eax, 0xc48348ff ; pop rbx ; ret
0x00000200006a3564 : test eax, 0xc48348ff ; push rax ; pop rbx ; ret
0x00000200001493c5 : test eax, 0xe9000000 ; jb 0x200001493a1 ; add byte ptr [rax], al ; ret
0x000002000014b3c5 : test eax, 0xe9000001 ; jb 0x2000014b381 ; add byte ptr [rax], al ; ret
0x00000200006cfdc5 : test eax, 0xf000000 ; mov bh, 0xb ; call 0x2000013c069
0x00000200005a1879 : test eax, 0xf1e990ff ; ret 0xffe8
0x000002000019b01a : test eax, 0xf6fff1fc ; ret 0xf07
0x000002000005a1d1 : test eax, 0xf7000000 ; ret 0x7000
0x00000200006d36db : test eax, 0xfffff ; jne 0x200006d373b ; xor al, al ; ret
0x000002000000a61a : test eax, 0xffffff ; je 0x2000000a629 ; ret
0x000002000050a7bb : test eax, eax ; and byte ptr [rsi], cl ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200005045a0 : test eax, eax ; cmove eax, edx ; ret
0x0000020000438edf : test eax, eax ; cmove eax, r8d ; ret
0x00000200000036cc : test eax, eax ; je 0x200000036db ; mov qword ptr [r8], rax ; ret
0x0000020000019fa6 : test eax, eax ; je 0x20000019fb8 ; mov rcx, qword ptr [r14 + 8] ; call rax
0x0000020000021ba0 : test eax, eax ; je 0x20000021bb3 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000004b0e0 : test eax, eax ; je 0x2000004b0fc ; add rsp, 0x20 ; pop rbx ; ret
0x000002000004df5d : test eax, eax ; je 0x2000004df71 ; mov rcx, qword ptr [rsp + 0x78] ; call rax
0x000002000004df8c : test eax, eax ; je 0x2000004dfa0 ; mov rcx, qword ptr [rsp + 0x78] ; call rax
0x0000020000061dd5 : test eax, eax ; je 0x20000061de6 ; add rsp, 0x28 ; ret
0x000002000006f259 : test eax, eax ; je 0x2000006f297 ; mov qword ptr [r9], rax ; ret
0x000002000006f40a : test eax, eax ; je 0x2000006f413 ; ret
0x000002000011a9f4 : test eax, eax ; je 0x20000071695 ; jmp rax
0x0000020000078b06 : test eax, eax ; je 0x20000078b19 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000084754 : test eax, eax ; je 0x20000084765 ; mov rax, qword ptr [rax + 0x48] ; ret
0x0000020000093985 : test eax, eax ; je 0x20000093993 ; mov dword ptr [r8], eax ; ret
0x0000020000093b00 : test eax, eax ; je 0x20000093b10 ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x00000200000b9ef1 : test eax, eax ; je 0x200000b9f03 ; cmp dword ptr [rax + 8], edx ; jne 0x200000b9f04 ; ret
0x00000200000be975 : test eax, eax ; je 0x200000be986 ; add rsp, 0x28 ; ret
0x00000200000c54bb : test eax, eax ; je 0x200000c54ce ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c56ca : test eax, eax ; je 0x200000c56d6 ; ret
0x00000200000e5281 : test eax, eax ; je 0x200000e5296 ; mov rcx, r14 ; call 0x200000214a5
0x00000200000ffba1 : test eax, eax ; je 0x200000ffbae ; mov al, cl ; ret
0x0000020000101264 : test eax, eax ; je 0x20000101272 ; mov dword ptr [r8], r9d ; ret
0x0000020000102243 : test eax, eax ; je 0x20000102253 ; xor edx, edx ; call r8
0x0000020000102294 : test eax, eax ; je 0x200001022a4 ; mov dword ptr [r8], ecx ; mov eax, edx ; ret
0x0000020000112aea : test eax, eax ; je 0x20000112af3 ; ret
0x0000020000116195 : test eax, eax ; je 0x200001161a1 ; jmp r8
0x00000200001b263d : test eax, eax ; je 0x20000139a05 ; call rax
0x0000020000139db8 : test eax, eax ; je 0x20000139dc4 ; jmp r8
0x000002000015b746 : test eax, eax ; je 0x2000015b759 ; mov rcx, qword ptr [rcx + 8] ; call rax
0x0000020000176c62 : test eax, eax ; je 0x20000176c6c ; call rax
0x0000020000115e42 : test eax, eax ; je 0x200001772e8 ; call rax
0x00000200001ade38 : test eax, eax ; je 0x200001ade51 ; lea rcx, qword ptr [rsp + 0x30] ; call rax
0x00000200001ba282 : test eax, eax ; je 0x200001ba290 ; mov dl, 1 ; mov al, dl ; ret
0x00000200001bce30 : test eax, eax ; je 0x200001bce3c ; call rax
0x00000200001c45e1 : test eax, eax ; je 0x200001c45eb ; call rax
0x00000200001c461d : test eax, eax ; je 0x200001c4627 ; call rax
0x00000200001c4698 : test eax, eax ; je 0x200001c46a2 ; call rax
0x00000200001c46f9 : test eax, eax ; je 0x200001c4703 ; call rax
0x00000200001d35c0 : test eax, eax ; je 0x200001d35e3 ; mov rax, qword ptr [rax + 8] ; call rax
0x00000200001fc69a : test eax, eax ; je 0x200001fc6a7 ; dec eax ; ret
0x0000020000203a2a : test eax, eax ; je 0x20000203a36 ; call r8
0x000002000021f12f : test eax, eax ; je 0x2000021f159 ; mov ecx, 2 ; call rax
0x000002000022f49b : test eax, eax ; je 0x2000022f4af ; mov rcx, r14 ; call rax
0x00000200003e94b0 : test eax, eax ; je 0x200003e9495 ; xor al, al ; ret
0x00000200003ffcfa : test eax, eax ; je 0x200003ffd0a ; mov rcx, rbx ; call rax
0x000002000044b96f : test eax, eax ; je 0x2000044b982 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000045681c : test eax, eax ; je 0x20000456828 ; jmp rax
0x0000020000458c1a : test eax, eax ; je 0x20000458c2f ; mov rcx, qword ptr [rbp - 9] ; call rax
0x0000020000464a38 : test eax, eax ; je 0x20000464a49 ; movzx eax, word ptr [rax + 8] ; ret
0x000002000046add6 : test eax, eax ; je 0x2000046ade2 ; call r8
0x00000200004a33e0 : test eax, eax ; je 0x200004a33f1 ; add rax, -0x10 ; ret
0x00000200004bd06f : test eax, eax ; je 0x200004bd080 ; call rax
0x00000200004c52cd : test eax, eax ; je 0x200004c52f2 ; mov rdi, rax ; jmp 0x200004c52a0
0x00000200004de0f0 : test eax, eax ; je 0x200004de108 ; mov rcx, qword ptr [rsp + 0x40] ; call rax
0x00000200004df9c2 : test eax, eax ; je 0x200004df9da ; mov rcx, qword ptr [rsp + 0x38] ; call rax
0x00000200004e2aea : test eax, eax ; je 0x200004e2af8 ; call rax
0x00000200004e3382 : test eax, eax ; je 0x200004e3394 ; lea rdx, qword ptr [rcx - 0x30] ; call rax
0x00000200004fca3c : test eax, eax ; je 0x200004fca59 ; mov ecx, dword ptr [rcx + 8] ; call rax
0x00000200004fe391 : test eax, eax ; je 0x200004fe3a2 ; add rax, 0x10 ; ret
0x00000200005000a9 : test eax, eax ; je 0x200004ffc18 ; call rax
0x0000020000518708 : test eax, eax ; je 0x20000518712 ; call rax
0x00000200005189f5 : test eax, eax ; je 0x200005189ff ; call rax
0x00000200005197f0 : test eax, eax ; je 0x20000519802 ; mov cl, dil ; call rax
0x000002000051dc33 : test eax, eax ; je 0x2000051dc3d ; call rax
0x000002000052cc32 : test eax, eax ; je 0x2000052cc05 ; call rax
0x000002000052dc0e : test eax, eax ; je 0x2000052dbbf ; call rax
0x000002000053098f : test eax, eax ; je 0x20000530999 ; call rax
0x0000020000538111 : test eax, eax ; je 0x2000053811b ; call rax
0x000002000053d5fc : test eax, eax ; je 0x2000053d60c ; mov dword ptr [r8], eax ; mov al, 1 ; ret
0x00000200005ccece : test eax, eax ; je 0x200005ccee0 ; mov rcx, r12 ; call rax
0x0000020000622648 : test eax, eax ; je 0x20000622654 ; jmp qword ptr [rax]
0x0000020000647ab3 : test eax, eax ; je 0x20000647abd ; call rax
0x0000020000675fd0 : test eax, eax ; je 0x20000675fda ; call rax
0x0000020000678cd4 : test eax, eax ; je 0x20000678cde ; call rax
0x0000020000683dd3 : test eax, eax ; je 0x20000683de7 ; mov rdx, qword ptr [rdx + 0x10] ; call r8
0x0000020000684184 : test eax, eax ; je 0x2000068419e ; mov rcx, rbp ; call rax
0x000002000068424e : test eax, eax ; je 0x2000068425e ; mov rcx, rdi ; call rax
0x0000020000693822 : test eax, eax ; je 0x2000069385e ; add rax, rdx ; jmp 0x20000693835
0x00000200006ad02a : test eax, eax ; je 0x200006ad093 ; lea rdx, qword ptr [rsp + 0x58] ; call rax
0x00000200006bd812 : test eax, eax ; je 0x200006bd828 ; mov rcx, rax ; call r8
0x00000200006bda15 : test eax, eax ; je 0x200006bda23 ; call rax
0x00000200006c170e : test eax, eax ; je 0x200006c1724 ; mov rcx, rax ; call r8
0x00000200006c1976 : test eax, eax ; je 0x200006c198c ; mov rcx, rax ; call r8
0x0000020000708b10 : test eax, eax ; je 0x20000708b90 ; mov r8d, edi ; call rax
0x000002000070906c : test eax, eax ; je 0x2000070907c ; mov cl, r9b ; call rax
0x000002000070a2cd : test eax, eax ; je 0x2000070a2d2 ; mov dword ptr [r8], r9d ; ret
0x000002000070c068 : test eax, eax ; je 0x2000070c074 ; jmp rax
0x000002000070f442 : test eax, eax ; je 0x2000070f45d ; mov rcx, rbx ; call rax
0x000002000070f4aa : test eax, eax ; je 0x2000070f4b7 ; call rax
0x000002000070f556 : test eax, eax ; je 0x2000070f571 ; mov rcx, rdi ; call rax
0x000002000070f5cd : test eax, eax ; je 0x2000070f5e1 ; mov rcx, rbx ; call rax
0x000002000070f5e2 : test eax, eax ; je 0x2000070f5f8 ; mov edx, edi ; mov rcx, rbx ; call rax
0x000002000070f6dd : test eax, eax ; je 0x2000070f6ed ; mov rcx, rdi ; call rax
0x000002000070f6f5 : test eax, eax ; je 0x2000070f705 ; mov rcx, rdi ; call rax
0x000002000070f74e : test eax, eax ; je 0x2000070f75e ; mov rcx, rdi ; call rax
0x0000020000447b31 : test eax, eax ; jle 0x200005aaf74 ; ret
0x0000020000008370 : test eax, eax ; jne 0x20000008379 ; ret
0x0000020000009bc8 : test eax, eax ; jne 0x20000009bc7 ; mov rax, rcx ; ret
0x000002000001c3e8 : test eax, eax ; jne 0x2000001c3f5 ; xor eax, eax ; ret
0x000002000001d54b : test eax, eax ; jne 0x2000001d558 ; xor eax, eax ; ret
0x000002000001de95 : test eax, eax ; jne 0x2000001ded1 ; add rsp, 0x48 ; ret
0x0000020000020b54 : test eax, eax ; jne 0x20000020b61 ; mov al, 1 ; ret
0x0000020000025558 : test eax, eax ; jne 0x20000025561 ; ret
0x00000200000283d4 : test eax, eax ; jne 0x200000283cc ; btr rax, 0xc ; ret
0x0000020000028b38 : test eax, eax ; jne 0x20000028b41 ; ret
0x000002000002cb29 : test eax, eax ; jne 0x2000002cb42 ; ret
0x0000020000038b68 : test eax, eax ; jne 0x20000038b67 ; mov rax, rcx ; ret
0x000002000003cf0f : test eax, eax ; jne 0x2000003cf22 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000041a80 : test eax, eax ; jne 0x20000041a89 ; ret
0x0000020000050d0c : test eax, eax ; jne 0x20000050d02 ; xor eax, eax ; ret
0x0000020000059cfd : test eax, eax ; jne 0x20000059d0e ; add rsp, 0x28 ; ret
0x000002000005b27e : test eax, eax ; jne 0x2000005b28c ; mov rax, rdx ; ret
0x000002000005b27e : test eax, eax ; jne 0x2000005b28d ; mov rax, rdx ; ret
0x000002000005b28c : test eax, eax ; jne 0x2000005b299 ; xor eax, eax ; ret
0x0000020000067d74 : test eax, eax ; jne 0x20000067d81 ; xor al, al ; ret
0x0000020000074688 : test eax, eax ; jne 0x20000074691 ; ret
0x00000200000862b8 : test eax, eax ; jne 0x200000862c6 ; mov al, r10b ; ret
0x00000200000862b8 : test eax, eax ; jne 0x200000862c7 ; mov al, r10b ; ret
0x00000200000863c8 : test eax, eax ; jne 0x200000863d7 ; mov eax, r8d ; ret
0x00000200000bdf5a : test eax, eax ; jne 0x200000bdf36 ; xor eax, eax ; ret
0x00000200000ca30e : test eax, eax ; jne 0x200000ca321 ; xor al, al ; ret
0x00000200000cf56e : test eax, eax ; jne 0x200000cf57b ; xor al, al ; ret
0x00000200000dbbef : test eax, eax ; jne 0x200000dbbc3 ; mov rax, rbx ; jmp 0x200000dbbc3
0x00000200000e8361 : test eax, eax ; jne 0x200000e8357 ; xor al, al ; ret
0x00000200000ea7f9 : test eax, eax ; jne 0x200000ea829 ; movzx eax, dl ; ret
0x00000200000ea7f9 : test eax, eax ; jne 0x200000ea82a ; movzx eax, dl ; ret
0x00000200000edca7 : test eax, eax ; jne 0x200000edcb8 ; lea eax, dword ptr [r8 + 1] ; ret
0x00000200000f02ca : test eax, eax ; jne 0x200000f02dd ; ret
0x00000200000f5cc0 : test eax, eax ; jne 0x200000f5ccf ; ret
0x00000200000fb5f1 : test eax, eax ; jne 0x200000fb5f0 ; mov rax, rcx ; ret
0x0000020000100993 : test eax, eax ; jne 0x2000010095a ; jmp 0x20000100961
0x0000020000113bad : test eax, eax ; jne 0x20000113bc0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011bba4 : test eax, eax ; jne 0x2000011bbad ; ret
0x000002000011dd45 : test eax, eax ; jne 0x2000011dd54 ; mov rax, rcx ; ret
0x000002000012d701 : test eax, eax ; jne 0x2000012d70a ; ret
0x000002000013b647 : test eax, eax ; jne 0x2000013b63d ; ret
0x000002000013bbe5 : test eax, eax ; jne 0x2000013bbd8 ; ret
0x000002000013d18c : test eax, eax ; jne 0x2000013d186 ; mov rax, rcx ; ret
0x000002000013d1a7 : test eax, eax ; jne 0x2000013d1a1 ; mov rax, rcx ; ret
0x000002000013d2ad : test eax, eax ; jne 0x2000013d2cf ; xor eax, eax ; ret
0x000002000013d413 : test eax, eax ; jne 0x2000013d3df ; xor eax, eax ; ret
0x000002000013db06 : test eax, eax ; jne 0x2000013dae5 ; xor eax, eax ; ret
0x0000020000003d8b : test eax, eax ; jne 0x2000015fc02 ; ret
0x000002000000b9df : test eax, eax ; jne 0x200001616a8 ; ret
0x000002000001b867 : test eax, eax ; jne 0x200001655f2 ; ret
0x00000200000375bc : test eax, eax ; jne 0x2000016bf6a ; ret
0x000002000003c8e8 : test eax, eax ; jne 0x2000016d702 ; ret
0x00000200000f8ae8 : test eax, eax ; jne 0x200001ab1dc ; ret
0x000002000012d18f : test eax, eax ; jne 0x200001ad8b6 ; ret
0x00000200001c63ad : test eax, eax ; jne 0x200001c63aa ; add rsp, 0x28 ; ret
0x00000200001edcd4 : test eax, eax ; jne 0x200001edca3 ; mov rax, r8 ; ret
0x00000200001f27f4 : test eax, eax ; jne 0x200001f2800 ; xor eax, eax ; ret
0x00000200001f5487 : test eax, eax ; jne 0x200001f54d5 ; mov eax, edx ; jmp 0x200001f54d7
0x00000200001f726a : test eax, eax ; jne 0x200001f727d ; mov eax, 1 ; ret
0x00000200001f8c04 : test eax, eax ; jne 0x200001f8bf2 ; mov rax, r9 ; ret
0x000002000020f967 : test eax, eax ; jne 0x2000020f92c ; ret
0x0000020000210528 : test eax, eax ; jne 0x20000210527 ; mov rax, rcx ; ret
0x0000020000216458 : test eax, eax ; jne 0x2000021643f ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003c6ae4 : test eax, eax ; jne 0x200003c6af7 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041f62f : test eax, eax ; jne 0x2000041f61f ; xor eax, eax ; ret
0x00000200004263f1 : test eax, eax ; jne 0x20000426405 ; mov eax, dword ptr [rcx + 0x58] ; ret
0x000002000042eb36 : test eax, eax ; jne 0x2000042eb42 ; mov al, dl ; ret
0x000002000042eb36 : test eax, eax ; jne 0x2000042eb43 ; mov al, dl ; ret
0x000002000043b875 : test eax, eax ; jne 0x2000043b866 ; ret
0x000002000043e8c8 : test eax, eax ; jne 0x2000043e8db ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000452a5a : test eax, eax ; jne 0x20000452a6e ; xor edx, edx ; call 0x2000007c7f5
0x0000020000453814 : test eax, eax ; jne 0x20000453822 ; mov eax, r10d ; ret
0x0000020000453814 : test eax, eax ; jne 0x20000453823 ; mov eax, r10d ; ret
0x00000200004545bd : test eax, eax ; jne 0x200004545b7 ; ret
0x000002000047b069 : test eax, eax ; jne 0x2000047b048 ; add rsp, 0x28 ; ret
0x00000200004955a7 : test eax, eax ; jne 0x2000049558a ; add rsp, 0x28 ; ret
0x000002000049c42d : test eax, eax ; jne 0x2000049c436 ; ret
0x00000200004f6900 : test eax, eax ; jne 0x200004f6911 ; xor cl, cl ; mov al, cl ; ret
0x00000200004fd532 : test eax, eax ; jne 0x200004fd543 ; add rsp, 0x28 ; ret
0x0000020000557bf9 : test eax, eax ; jne 0x20000557c13 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000626ade : test eax, eax ; jne 0x20000626af0 ; call 0x2000024da47
0x0000020000629bf1 : test eax, eax ; jne 0x20000629c03 ; call 0x2000024da47
0x000002000062c66d : test eax, eax ; jne 0x2000062c67a ; jmp 0x2000062c63b
0x0000020000668dcf : test eax, eax ; jne 0x20000668da6 ; add rsp, 0x38 ; ret
0x0000020000670b45 : test eax, eax ; jne 0x20000670b58 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000068f802 : test eax, eax ; jne 0x2000068f811 ; mov qword ptr [rdx], rax ; ret
0x000002000068f818 : test eax, eax ; jne 0x2000068f82b ; mov eax, 0xc00000bb ; ret
0x000002000068f83c : test eax, eax ; jne 0x2000068f84f ; mov eax, 0xc00000bb ; ret
0x000002000069e3d4 : test eax, eax ; jne 0x2000069e3e5 ; lea eax, dword ptr [r8 + 0x14] ; ret
0x00000200006d372e : test eax, eax ; jne 0x200006d36e8 ; mov al, 1 ; ret
0x00000200006e0cda : test eax, eax ; jne 0x200006e0ceb ; add rsp, 0x28 ; ret
0x0000020000703bb7 : test eax, eax ; jne 0x20000703bc0 ; ret
0x0000020000705f52 : test eax, eax ; jne 0x20000705f30 ; ret
0x0000020000709cf4 : test eax, eax ; jne 0x20000709d01 ; xor eax, eax ; ret
0x000002000070fecf : test eax, eax ; jne 0x2000070fee2 ; mov eax, 0xc000042a ; ret
0x000002000070ff53 : test eax, eax ; jne 0x2000070ff66 ; mov eax, 0xc000042a ; ret
0x0000020000711a60 : test eax, eax ; jne 0x20000711a55 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000005b2f6 : test eax, eax ; jns 0x2000005b2bf ; jmp 0x2000005b2da
0x00000200000821ff : test eax, eax ; jns 0x20000082210 ; add rsp, 0x58 ; ret
0x000002000013161b : test eax, eax ; jns 0x200001315bd ; call 0x200004fd886
0x000002000013d1f6 : test eax, eax ; jns 0x2000013d205 ; or eax, 0xffffffff ; ret
0x0000020000453391 : test eax, eax ; jns 0x200004533a4 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000a604 : test eax, eax ; js 0x2000000a602 ; mov rax, rdx ; ret
0x000002000000a604 : test eax, eax ; js 0x2000000a603 ; mov rax, rdx ; ret
0x0000020000026423 : test eax, eax ; js 0x20000026431 ; mov dword ptr [r10], ecx ; ret
0x00000200000296e9 : test eax, eax ; js 0x200000296fa ; add rsp, 0x28 ; ret
0x000002000003ea86 : test eax, eax ; js 0x2000003ea97 ; add rsp, 0x28 ; ret
0x00000200000d5180 : test eax, eax ; js 0x200000d5185 ; xor eax, eax ; ret
0x000002000011d070 : test eax, eax ; js 0x2000011d06b ; mov rax, rdx ; ret
0x000002000011d070 : test eax, eax ; js 0x2000011d06c ; mov rax, rdx ; ret
0x00000200000095b8 : test eax, eax ; js 0x2000016126c ; ret
0x000002000000a4e0 : test eax, eax ; js 0x2000016142e ; ret
0x000002000022bd74 : test eax, eax ; js 0x2000022bd90 ; mov rcx, qword ptr [rsi] ; call 0x20000148079
0x000002000046530a : test eax, eax ; js 0x2000046531d ; add rsp, 0x60 ; pop rbx ; ret
0x000002000050a2fa : test eax, eax ; js 0x2000050a307 ; xor eax, eax ; ret
0x000002000050a7d7 : test eax, eax ; js 0x2000050a7e4 ; xor eax, eax ; ret
0x0000020000189c2c : test eax, eax ; ret
0x0000020000239b61 : test eax, eax ; sete al ; add rsp, 0x28 ; ret
0x00000200004f130d : test eax, eax ; setg al ; ret
0x00000200001cb9ff : test eax, eax ; setne al ; ret
0x000002000002029d : test eax, eax ; setns al ; add rsp, 0x28 ; ret
0x00000200005adf39 : test eax, eax ; sub edx, ebp ; dec dword ptr [rax - 0x75] ; ret
0x000002000043f35f : test eax, eax ; xchg byte ptr [rsi], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000056958c : test eax, ebp ; or qword ptr [rax], rax ; ret
0x000002000010b8dd : test eax, ebx ; xchg byte ptr [rsi], al ; add dh, dh ; ret
0x000002000006eec3 : test eax, ecx ; je 0x2000006eed6 ; mov eax, 1 ; ret
0x00000200000a0163 : test eax, ecx ; je 0x200000a0168 ; mov eax, 1 ; ret
0x000002000020e690 : test eax, ecx ; je 0x2000020e69d ; xor al, al ; ret
0x00000200000a015b : test eax, ecx ; jne 0x200000a016d ; xor eax, eax ; ret
0x00000200004e42a5 : test eax, ecx ; ret 0xf
0x000002000007f62f : test eax, ecx ; sete al ; ret
0x0000020000093c05 : test eax, edx ; int 0xf
0x00000200004b4d49 : test eax, edx ; je 0x200004b4d31 ; mov eax, 3 ; ret
0x0000020000549f01 : test eax, edx ; jne 0x20000549fac ; ret
0x000002000051cc13 : test eax, edx ; jno 0x2000051cc27 ; add byte ptr [rbp + 0x3b], al ; ret 0x850f
0x000002000009e491 : test eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000010d5bf : test eax, esi ; je 0x2000010d5cf ; add dh, dh ; ret
0x000002000007f62e : test eax, r9d ; sete al ; ret
0x000002000048aba3 : test ebp, eax ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200000ee5eb : test ebp, eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000db561 : test ebp, eax ; add eax, dword ptr [rax] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000549efb : test ebp, ebp ; jg 0x20000549f10 ; add byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x0000020000004ca7 : test ebp, ebp ; mov ch, 0x15 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000008396d : test ebp, ebp ; xchg eax, ebp ; adc byte ptr [rax], al ; ret
0x0000020000065b23 : test ebp, ebx ; add dword ptr [rdx], edx ; add dh, dh ; ret
0x00000200000037e2 : test ebp, ebx ; ret 0x15
0x00000200001de31c : test ebp, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000410faf : test ebp, ecx ; ret
0x0000020000449175 : test ebp, edi ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000005258e : test ebp, edi ; jmp 0x1ffff8825ad
0x00000200000153d1 : test ebp, edx ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000164651 : test ebp, esp ; and al, 0xeb ; dec dword ptr [rcx - 0x7d] ; ret 0x4c08
0x000002000048c37b : test ebp, esp ; mov bl, 0x48 ; add byte ptr [rcx + 3], cl ; int 0xff
0x0000020000515a89 : test ebp, esp ; ret
0x00000200000a6829 : test ebx, eax ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000020000173346 : test ebx, eax ; add eax, 0x8b480000 ; ret
0x00000200000a1164 : test ebx, ebp ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b4c
0x00000200001060a5 : test ebx, ebp ; ret 6
0x00000200004fe99e : test ebx, ebx ; add byte ptr [rax], al ; add dh, bh ; ret
0x000002000009fd67 : test ebx, ebx ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x0000020000004bc4 : test ebx, ebx ; jne 0x20000004bbf ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000296a6 : test ebx, ebx ; jne 0x200000296d2 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000bd66c : test ebx, ebx ; jne 0x200000bd660 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c67a0 : test ebx, ebx ; jne 0x200000c67b3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ce9d1 : test ebx, ebx ; jne 0x200001ce99e ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001ceaf8 : test ebx, ebx ; jne 0x200001ceace ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001e7829 : test ebx, ebx ; jne 0x200001e7824 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f9b97 : test ebx, ebx ; jne 0x200001f9b8b ; add rsp, 0x20 ; pop rbx ; ret
0x000002000055eb1c : test ebx, ebx ; jne 0x2000055eafa ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000634040 : test ebx, ebx ; jne 0x2000063403d ; add rsp, 0x20 ; pop rbx ; ret
0x000002000067a504 : test ebx, ebx ; setne al ; ret
0x0000020000025644 : test ebx, ecx ; and eax, 0x3410014 ; ret 0xb70f
0x0000020000011594 : test ebx, ecx ; sbb al, 0x15 ; add dh, dh ; ret 0xf02
0x0000020000028898 : test ebx, edi ; call qword ptr [rbx]
0x00000200004b0855 : test ebx, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000002414e : test ebx, esi ; adc al, 0 ; add rsp, 0x28 ; ret
0x00000200004c941d : test ebx, esi ; add al, 0 ; add dh, dh ; ret
0x000002000006852a : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200004475d3 : test ebx, esi ; add byte ptr [rax], al ; add bh, bh ; ret 0xdbeb
0x00000200005392dc : test ebx, esi ; inc dword ptr [rax] ; ret
0x000002000013ac7e : test ecx, 0x175ffff ; ret
0x000002000009dc0c : test ecx, 0x700 ; jne 0x2000009dc38 ; ret
0x00000200001ff458 : test ecx, 0x8b4c1ee8 ; ret
0x000002000021174d : test ecx, 0xff00 ; setbe al ; ret
0x000002000023fdb5 : test ecx, eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000069e7a : test ecx, eax ; cmovne eax, edx ; ret
0x0000020000565d8d : test ecx, eax ; imul ecx, dword ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x00000200000476ac : test ecx, eax ; je 0x200000476b9 ; xor eax, eax ; ret
0x00000200004aa1f2 : test ecx, eax ; je 0x200004aa204 ; cmp rdx, rcx ; jb 0x200004aa205 ; ret
0x000002000022886a : test ecx, eax ; jne 0x20000228879 ; mov byte ptr [rdx + 2], cl ; ret
0x0000020000481afb : test ecx, eax ; jne 0x20000481ae7 ; mov al, 1 ; ret
0x0000020000401f48 : test ecx, eax ; ret
0x000002000007a4b8 : test ecx, ebp ; call qword ptr [rax]
0x0000020000414fcb : test ecx, ebp ; call qword ptr [rdi]
0x0000020000197900 : test ecx, ebp ; push rsp ; int1 ; push rsi ; ret 0x741e
0x00000200000d5301 : test ecx, ebx ; or al, 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000063a1ec : test ecx, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; outsb dx, byte ptr [rsi] ; ret 0xb841
0x00000200001b3f19 : test ecx, ecx ; cmovne eax, ecx ; mov dword ptr [r8 + 0x5c], eax ; ret
0x000002000071182c : test ecx, ecx ; cmovne eax, edx ; ret
0x000002000011caab : test ecx, ecx ; cmovne edx, r10d ; mov eax, edx ; ret
0x000002000006f287 : test ecx, ecx ; cmovne rax, rcx ; mov qword ptr [r9], rax ; ret
0x00000200000bea19 : test ecx, ecx ; je 0x200000bea2c ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000e6ece : test ecx, ecx ; je 0x200000e6edf ; add rsp, 0x28 ; ret
0x00000200000f140d : test ecx, ecx ; je 0x200000f1410 ; mov rax, r9 ; ret
0x00000200000f92ff : test ecx, ecx ; je 0x200000f930b ; call rcx
0x0000020000128ab4 : test ecx, ecx ; je 0x20000128abe ; call rcx
0x0000020000160a8f : test ecx, ecx ; je 0x20000160a9f ; mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x000002000016bf63 : test ecx, ecx ; je 0x2000016bf73 ; mov qword ptr [rcx], rax ; mov al, 1 ; ret
0x00000200001b411d : test ecx, ecx ; je 0x200001b412b ; mov eax, dword ptr [rcx + 0x70] ; ret
0x00000200001b9774 : test ecx, ecx ; je 0x200001b9784 ; mov qword ptr [r9], r10 ; xor al, al ; ret
0x00000200001b977f : test ecx, ecx ; je 0x200001b978f ; mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x00000200001bde1d : test ecx, ecx ; je 0x200001bde29 ; call r9
0x00000200001c459d : test ecx, ecx ; je 0x200001c45a7 ; call rcx
0x00000200001c45c0 : test ecx, ecx ; je 0x200001c45ca ; call rcx
0x00000200001c45fd : test ecx, ecx ; je 0x200001c4609 ; jmp rcx
0x00000200001c464c : test ecx, ecx ; je 0x200001c4658 ; jmp rcx
0x00000200001c46bc : test ecx, ecx ; je 0x200001c46c6 ; call rcx
0x00000200001c46d9 : test ecx, ecx ; je 0x200001c46e5 ; jmp rcx
0x00000200001d20e0 : test ecx, ecx ; je 0x200001d20f4 ; mov dword ptr [rcx], r10d ; ret
0x00000200001d3efd : test ecx, ecx ; je 0x200001d3f10 ; mov eax, 0xc0000225 ; ret
0x00000200001e41ed : test ecx, ecx ; je 0x200001e4200 ; mov dl, 2 ; call 0x200000a0488
0x00000200001fc1be : test ecx, ecx ; je 0x200001fc1d8 ; and qword ptr [rcx], rdx ; ret
0x0000020000230273 : test ecx, ecx ; je 0x20000230281 ; add dword ptr [rcx], r11d ; ret
0x00000200003c98c2 : test ecx, ecx ; je 0x200003c98cc ; call rcx
0x00000200003dc6f1 : test ecx, ecx ; je 0x200003dc6fb ; call rcx
0x00000200003e6548 : test ecx, ecx ; je 0x200003e6558 ; call 0x200000071f3
0x000002000040491d : test ecx, ecx ; je 0x2000040495a ; mov eax, r10d ; ret
0x000002000040491d : test ecx, ecx ; je 0x2000040495b ; mov eax, r10d ; ret
0x000002000043fe05 : test ecx, ecx ; je 0x2000043fe13 ; mov qword ptr [r9], rax ; ret
0x000002000046ae02 : test ecx, ecx ; je 0x2000046ae2b ; call 0x2000009a737
0x00000200004c7146 : test ecx, ecx ; je 0x200004c715b ; call 0x200000e7da7
0x00000200004c754c : test ecx, ecx ; je 0x200004c755c ; call 0x200000e7da7
0x000002000051f0e8 : test ecx, ecx ; je 0x2000051f0f8 ; call 0x20000148077
0x0000020000521b33 : test ecx, ecx ; je 0x20000521b45 ; ret
0x0000020000521e51 : test ecx, ecx ; je 0x20000521e61 ; call 0x20000148077
0x00000200005220a0 : test ecx, ecx ; je 0x200005220b0 ; call 0x20000148077
0x0000020000522155 : test ecx, ecx ; je 0x20000522165 ; call 0x20000148077
0x0000020000522303 : test ecx, ecx ; je 0x20000522313 ; call 0x20000148077
0x0000020000565ee3 : test ecx, ecx ; je 0x20000565ef3 ; mov dword ptr [r9], r8d ; mov eax, r10d ; ret
0x00000200005819df : test ecx, ecx ; je 0x200005819b2 ; jmp 0x200005819ad
0x00000200005ebdb2 : test ecx, ecx ; je 0x200005ebdc1 ; call 0x20000148076
0x0000020000621363 : test ecx, ecx ; je 0x20000621377 ; mov edx, esi ; call 0x2000024d009
0x00000200006255b9 : test ecx, ecx ; je 0x200006255cd ; xor edx, edx ; call 0x2000024d009
0x0000020000625a20 : test ecx, ecx ; je 0x20000625a34 ; xor edx, edx ; call 0x2000024d009
0x0000020000626527 : test ecx, ecx ; je 0x2000062653b ; xor edx, edx ; call 0x2000024d009
0x0000020000627b5a : test ecx, ecx ; je 0x20000627b6e ; xor edx, edx ; call 0x2000024d009
0x0000020000628c76 : test ecx, ecx ; je 0x20000628c8a ; xor edx, edx ; call 0x2000024d009
0x0000020000629a32 : test ecx, ecx ; je 0x20000629a46 ; xor edx, edx ; call 0x2000024d009
0x0000020000629bb8 : test ecx, ecx ; je 0x20000629c3d ; xor edx, edx ; call 0x2000024d009
0x0000020000629d9f : test ecx, ecx ; je 0x20000629db3 ; xor edx, edx ; call 0x2000024d009
0x0000020000629e67 : test ecx, ecx ; je 0x20000629e7b ; xor edx, edx ; call 0x2000024d009
0x0000020000635c94 : test ecx, ecx ; je 0x20000635ca6 ; call qword ptr [rip - 0x3ded6e]
0x0000020000683db6 : test ecx, ecx ; je 0x20000683dca ; mov rdx, qword ptr [r8 + 0x10] ; call r9
0x00000200006dbe02 : test ecx, ecx ; je 0x200006dbe11 ; call 0x20000148076
0x00000200007b0529 : test ecx, ecx ; jg 0x200007b0502 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000ba8a : test ecx, ecx ; jne 0x2000000ba93 ; ret
0x000002000001dffa : test ecx, ecx ; jne 0x2000001e009 ; mov eax, dword ptr [rax + 0x24] ; ret
0x000002000001f9e1 : test ecx, ecx ; jne 0x2000001f9ea ; ret
0x0000020000020a24 : test ecx, ecx ; jne 0x20000020a07 ; mov eax, r8d ; ret
0x00000200000267b5 : test ecx, ecx ; jne 0x200000267c8 ; add rsp, 0x60 ; pop rbp ; ret
0x000002000002ce14 : test ecx, ecx ; jne 0x2000002ce0c ; mov eax, 0xc0000109 ; ret
0x0000020000041e0f : test ecx, ecx ; jne 0x20000041e1c ; mov al, 1 ; ret
0x000002000006ca21 : test ecx, ecx ; jne 0x2000006ca2e ; xor eax, eax ; ret
0x000002000006d2b2 : test ecx, ecx ; jne 0x2000006d2ae ; ret
0x000002000007a3d8 : test ecx, ecx ; jne 0x2000007a3e1 ; ret
0x000002000007a65b : test ecx, ecx ; jne 0x2000007a66a ; mov rax, rcx ; ret
0x00000200000bd64d : test ecx, ecx ; jne 0x200000bd656 ; ret
0x00000200000bd72b : test ecx, ecx ; jne 0x200000bd73a ; mov rax, r9 ; ret
0x00000200000ecde9 : test ecx, ecx ; jne 0x200000ecde0 ; xor al, al ; ret
0x00000200000fa83f : test ecx, ecx ; jne 0x200000fa84d ; mov rax, rdx ; ret
0x00000200000fa83f : test ecx, ecx ; jne 0x200000fa84e ; mov rax, rdx ; ret
0x0000020000128b39 : test ecx, ecx ; jne 0x20000128b46 ; xor al, al ; ret
0x0000020000129fda : test ecx, ecx ; jne 0x20000129f7a ; mov rax, r8 ; ret
0x000002000013b1b5 : test ecx, ecx ; jne 0x2000013b1c2 ; xor eax, eax ; ret
0x000002000013b1e9 : test ecx, ecx ; jne 0x2000013b1f6 ; xor eax, eax ; ret
0x000002000013bd5d : test ecx, ecx ; jne 0x2000013bd6a ; xor eax, eax ; ret
0x000002000000c7ef : test ecx, ecx ; jne 0x200001618d4 ; ret
0x00000200000317cd : test ecx, ecx ; jne 0x2000016a2ca ; ret
0x000002000003e45a : test ecx, ecx ; jne 0x2000016de68 ; ret
0x000002000016f87a : test ecx, ecx ; jne 0x2000016f876 ; ret
0x000002000016f898 : test ecx, ecx ; jne 0x2000016f894 ; ret
0x0000020000114b55 : test ecx, ecx ; jne 0x20000176c24 ; ret
0x0000020000196960 : test ecx, ecx ; jne 0x20000196979 ; mov rcx, r9 ; call 0x20000032c0d
0x00000200001ba42e : test ecx, ecx ; jne 0x200001ba410 ; xor eax, eax ; ret
0x00000200001bc217 : test ecx, ecx ; jne 0x200001bc22a ; mov eax, 0xc000000d ; ret
0x00000200001cc449 : test ecx, ecx ; jne 0x200001cc45c ; mov eax, 0xc000000d ; ret
0x00000200001e3909 : test ecx, ecx ; jne 0x200001e391c ; mov eax, 1 ; ret
0x000002000020dbdd : test ecx, ecx ; jne 0x2000020dbf0 ; mov eax, 0xc000000d ; ret
0x0000020000210567 : test ecx, ecx ; jne 0x20000210563 ; ret
0x00000200003dfb9a : test ecx, ecx ; jne 0x200003dfba3 ; ret
0x00000200003e5c19 : test ecx, ecx ; jne 0x200003e5c48 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f6542 : test ecx, ecx ; jne 0x200003f6567 ; mov eax, edi ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000405221 : test ecx, ecx ; jne 0x2000040522a ; ret
0x0000020000453922 : test ecx, ecx ; jne 0x20000453935 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000045e53d : test ecx, ecx ; jne 0x2000045e546 ; ret
0x000002000045f341 : test ecx, ecx ; jne 0x2000045f352 ; add rsp, 0x28 ; ret
0x0000020000467026 : test ecx, ecx ; jne 0x20000467039 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000046dcd1 : test ecx, ecx ; jne 0x2000046dce4 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000471e21 : test ecx, ecx ; jne 0x20000471e34 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000494c71 : test ecx, ecx ; jne 0x20000494c7a ; ret
0x00000200004d1faf : test ecx, ecx ; jne 0x200004d1fc2 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e8f7e : test ecx, ecx ; jne 0x200004e8f91 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004f2d4e : test ecx, ecx ; jne 0x200004f2d5c ; mov eax, r10d ; ret
0x00000200004f2d4e : test ecx, ecx ; jne 0x200004f2d5d ; mov eax, r10d ; ret
0x00000200004f4467 : test ecx, ecx ; jne 0x200004f4478 ; add rsp, 0x28 ; ret
0x00000200004fb0c1 : test ecx, ecx ; jne 0x200004fb0ca ; ret
0x000002000051ab0e : test ecx, ecx ; jne 0x2000051ab21 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005139af : test ecx, ecx ; jne 0x200005b1699 ; ret
0x0000020000620d75 : test ecx, ecx ; jne 0x20000620d88 ; mov eax, 0xc000000d ; ret
0x000002000062b400 : test ecx, ecx ; jne 0x2000062b40d ; xor eax, eax ; ret
0x0000020000681931 : test ecx, ecx ; jne 0x2000068192a ; xor al, al ; ret
0x0000020000683500 : test ecx, ecx ; jne 0x200006834e1 ; ret
0x0000020000687f89 : test ecx, ecx ; jne 0x20000687f96 ; xor al, al ; ret
0x000002000069e3b3 : test ecx, ecx ; jne 0x2000069e3c6 ; mov eax, 0xc0000088 ; ret
0x00000200006a7cc4 : test ecx, ecx ; jne 0x200006a7cb2 ; mov rax, rcx ; ret
0x00000200006c6744 : test ecx, ecx ; jne 0x200006c6757 ; mov eax, 0xc000000d ; ret
0x00000200006c6f49 : test ecx, ecx ; jne 0x200006c6f56 ; xor eax, eax ; ret
0x0000020000798e1d : test ecx, ecx ; jne 0x20000798e26 ; ret
0x00000200007baa7d : test ecx, ecx ; jne 0x200007baa6d ; ret
0x0000020000447d30 : test ecx, ecx ; jns 0x20000447d41 ; add rsp, 0x28 ; ret
0x0000020000038729 : test ecx, ecx ; js 0x2000003873f ; mov rax, rdx ; ret
0x0000020000038729 : test ecx, ecx ; js 0x20000038740 ; mov rax, rdx ; ret
0x0000020000401f5c : test ecx, ecx ; ret
0x0000020000059d0d : test ecx, ecx ; sete al ; ret
0x00000200000eb56a : test ecx, ecx ; setne al ; add rsp, 0x38 ; ret
0x00000200000420f8 : test ecx, ecx ; setne al ; ret
0x00000200003e3bb5 : test ecx, ecx ; setns al ; dec eax ; ret
0x0000020000458d95 : test ecx, edi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret
0x00000200006186bf : test ecx, edx ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000020000055886 : test ecx, edx ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000002b98 : test ecx, edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000544db5 : test ecx, edx ; je 0x20000544dc2 ; mov al, 1 ; ret
0x00000200001629a0 : test ecx, edx ; jmp 0x2000000f985
0x000002000042d706 : test ecx, edx ; sete al ; ret
0x00000200004535fc : test ecx, edx ; setne al ; ret
0x0000020000065d52 : test ecx, esp ; call qword ptr [rcx]
0x0000020000494c63 : test ecx, esp ; xchg eax, edi ; adc eax, dword ptr [rax] ; ret
0x00000200006cfe31 : test edi, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001a9571 : test edi, eax ; jge 0x200001a9570 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000072461 : test edi, eax ; push 0x11 ; add byte ptr [rcx - 0x75], al ; ret
0x000002000009c4d7 : test edi, ebp ; add al, 0 ; add dh, dh ; ret
0x0000020000023df6 : test edi, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000058ecf3 : test edi, ebp ; jno 0x2000058ece5 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000029b8b : test edi, ebx ; adc eax, dword ptr [rax] ; call rdi
0x000002000042cd4d : test edi, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003e9da9 : test edi, ebx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200007b2e0c : test edi, edi ; xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000cd0fd : test edi, edx ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret
0x00000200000c937b : test edi, edx ; pop rbp ; or eax, 0x8a01b300 ; ret
0x00000200000dc4dc : test edi, esi ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000060dbb7 : test edi, esi ; ret
0x000002000052de95 : test edi, esi ; ret 8
0x000002000003e45d : test edi, esi ; stc ; adc al, byte ptr [rax] ; ret
0x0000020000076d99 : test edi, esi ; xor byte ptr [rcx], dl ; add byte ptr [rax - 0x75], cl ; ret
0x000002000044f025 : test edi, esp ; out 0x15, eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000569530 : test edx, 0xfffffffd ; je 0x20000569541 ; ret
0x0000020000414fbe : test edx, eax ; call qword ptr [rdi]
0x00000200000546f7 : test edx, ebx ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000020000414fb0 : test edx, ecx ; call qword ptr [rdi]
0x00000200004fb140 : test edx, ecx ; ret 0xe
0x00000200000dc4b2 : test edx, edi ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000401efe : test edx, edi ; ret
0x0000020000220bbf : test edx, edx ; cmovne rax, rdx ; jmp 0x20000220c08
0x00000200006ee12a : test edx, edx ; cmp ebp, dword ptr [rsi] ; ret 0x39
0x000002000000580c : test edx, edx ; je 0x2000000581f ; mov rax, rdx ; ret
0x000002000000580c : test edx, edx ; je 0x20000005820 ; mov rax, rdx ; ret
0x000002000000c386 : test edx, edx ; je 0x2000000c387 ; mov eax, 0xc000000d ; ret
0x000002000004528c : test edx, edx ; je 0x2000004529d ; mov word ptr [rcx], r11w ; ret
0x0000020000088a67 : test edx, edx ; je 0x20000088a75 ; add eax, dword ptr [rdx + 0x68] ; ret
0x000002000010221b : test edx, edx ; je 0x20000102225 ; call rdx
0x00000200001ade5d : test edx, edx ; je 0x2000012d94a ; call rdx
0x00000200001300e2 : test edx, edx ; je 0x200001300f0 ; xor ecx, ecx ; call rdx
0x000002000018670e : test edx, edx ; je 0x20000186718 ; call rax
0x00000200001c4670 : test edx, edx ; je 0x200001c467c ; jmp rdx
0x00000200001c4715 : test edx, edx ; je 0x200001c4721 ; jmp rdx
0x0000020000237329 : test edx, edx ; je 0x200002372f4 ; mov eax, r10d ; jmp 0x2000023733a
0x000002000042640f : test edx, edx ; je 0x200004263f9 ; ret
0x0000020000460bc8 : test edx, edx ; je 0x20000460bd4 ; jmp r10
0x00000200004e6e42 : test edx, edx ; je 0x200004e6e52 ; mov rcx, rsi ; call rdx
0x00000200005ba539 : test edx, edx ; je 0x200005ba54b ; mov rcx, qword ptr [rbp + 0x30] ; call rdx
0x0000020000600145 : test edx, edx ; je 0x20000600151 ; mov dword ptr [rdx], eax ; ret
0x000002000066482d : test edx, edx ; je 0x2000066483c ; mov rax, qword ptr [rdx] ; ret
0x00000200006818b8 : test edx, edx ; je 0x200006818c2 ; call rdx
0x00000200004e3012 : test edx, edx ; jle 0x200004e3023 ; add rsp, 0x38 ; ret
0x00000200000087f6 : test edx, edx ; jne 0x20000008803 ; xor eax, eax ; ret
0x000002000000d774 : test edx, edx ; jne 0x2000000d75e ; ret
0x000002000002a52e : test edx, edx ; jne 0x2000002a537 ; ret
0x000002000002df4c : test edx, edx ; jne 0x2000002df55 ; ret
0x000002000003d419 : test edx, edx ; jne 0x2000003d429 ; or byte ptr [rcx + 9], 4 ; ret
0x0000020000056ed7 : test edx, edx ; jne 0x20000056ee0 ; ret
0x000002000005cab8 : test edx, edx ; jne 0x2000005cad9 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000007afbb : test edx, edx ; jne 0x2000007afc4 ; ret
0x00000200000c1053 : test edx, edx ; jne 0x200000c1064 ; add rsp, 0x28 ; ret
0x00000200000c10a3 : test edx, edx ; jne 0x200000c10b4 ; add rsp, 0x28 ; ret
0x00000200000edc9f : test edx, edx ; jne 0x200000edcac ; xor eax, eax ; ret
0x00000200000f74e8 : test edx, edx ; jne 0x200000f74f5 ; mov eax, ecx ; ret
0x00000200000436e6 : test edx, edx ; jne 0x2000016f898 ; ret
0x00000200001b48c1 : test edx, edx ; jne 0x200001b48b3 ; ret
0x00000200001b8ec0 : test edx, edx ; jne 0x200001b8ecf ; mov qword ptr [r8], rcx ; ret
0x00000200001d3f1c : test edx, edx ; jne 0x200001d3f2b ; mov dword ptr [r8], eax ; ret
0x0000020000203fd0 : test edx, edx ; jne 0x20000203fdd ; xor eax, eax ; ret
0x0000020000420365 : test edx, edx ; jne 0x20000420338 ; mov r10b, 1 ; jmp 0x20000420338
0x000002000042bf05 : test edx, edx ; jne 0x2000042bf0e ; ret
0x000002000043caac : test edx, edx ; jne 0x2000043cab9 ; mov al, 1 ; ret
0x000002000046a192 : test edx, edx ; jne 0x2000046a19f ; xor eax, eax ; ret
0x00000200004a2faa : test edx, edx ; jne 0x200004a2fb7 ; xor eax, eax ; ret
0x000002000052ddbb : test edx, edx ; jne 0x2000052ddc6 ; pop rbx ; ret
0x0000020000494c60 : test edx, edx ; jne 0x200005ce43c ; ret
0x0000020000621547 : test edx, edx ; jne 0x20000621556 ; lea eax, dword ptr [rdx + 1] ; ret
0x000002000068191d : test edx, edx ; jne 0x20000681936 ; mov al, 1 ; ret
0x000002000070efe4 : test edx, edx ; jne 0x2000070efd5 ; ret
0x000002000079fdf1 : test edx, edx ; jne 0x200007c5782 ; ret
0x0000020000461f7d : test edx, edx ; jrcxz 0x20000461f9d ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000020000616e73 : test edx, edx ; sete cl ; mov eax, ecx ; ret
0x0000020000222882 : test esi, eax ; dec dword ptr [rax + 0x3b] ; ret 0xc74
0x0000020000018053 : test esi, eax ; int 0x14
0x000002000052a782 : test esi, eax ; jrcxz 0x2000052a795 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000e36e6 : test esi, ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200005b3278 : test esi, ecx ; idiv bh ; mov dword ptr [r8 + 0xc], r11d ; ret
0x00000200000a7bd4 : test esi, edi ; jrcxz 0x200000a7bed ; add byte ptr [rcx + 0x23], cl ; ret
0x0000020000465ce0 : test esi, edi ; mov bh, 0x15 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000008ab2 : test esi, edx ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200004618e7 : test esi, edx ; ret
0x00000200000efd8f : test esi, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000006f194 : test esi, esi ; je 0x2000006f1f8 ; lea rdx, qword ptr [rsi + 0x10] ; call r8
0x000002000014e09a : test esi, esi ; je 0x2000014e0ac ; mov rcx, qword ptr [rsi + 0x50] ; jmp rcx
0x00000200001ce4c9 : test esi, esi ; je 0x200001ce508 ; mov rcx, rsi ; call 0x200000fa755
0x0000020000446946 : test esi, esi ; je 0x2000044695a ; mov rcx, rsi ; call r14
0x0000020000489d7d : test esi, esi ; sbb eax, 0x8b450014 ; ret
0x00000200001a96ee : test esi, esp ; inc dword ptr [rbp - 0x75] ; ret 0xb60f
0x00000200004fb112 : test esi, esp ; ret 0xe
0x0000020000784f69 : test esp, eax ; add eax, 0x8b480000 ; ret
0x0000020000411834 : test esp, eax ; sbb byte ptr [rax], bl ; add byte ptr [rbp + 0x3b], cl ; ret 0x4575
0x00000200000d7236 : test esp, ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001f8314 : test esp, ebp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200000bad5c : test esp, ebx ; add cl, byte ptr [rsi] ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x000002000042fe5b : test esp, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000214f4f : test esp, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x3474
0x00000200003d2877 : test esp, edi ; ret 0x44ff
0x00000200004fb102 : test esp, edi ; ret 0xe
0x00000200004fb177 : test esp, edx ; ret 0xe
0x00000200000f8aeb : test esp, esp ; or eax, dword ptr es:[rax] ; ret
0x00000200005262bf : test qword ptr [r13 + rcx*4 + 0x42], 0x15b6e860 ; ret
0x00000200006dbdff : test qword ptr [r8 - 0x7b], -0x17fa8b37 ; ret 0xffa6
0x0000020000507083 : test qword ptr [rax + 0x245002f], rsi ; ret
0x000002000001b6e0 : test qword ptr [rcx + 0x10], rdx ; jne 0x2000001b6f3 ; mov al, r8b ; ret
0x0000020000460bc7 : test r10, r10 ; je 0x20000460bd5 ; jmp r10
0x00000200000f74e7 : test r10, r10 ; jne 0x200000f74f6 ; mov eax, ecx ; ret
0x000002000052ddba : test r10, r10 ; jne 0x2000052ddc7 ; pop rbx ; ret
0x00000200000832b1 : test r10b, r10b ; jne 0x2000018ccf0 ; ret
0x0000020000083969 : test r10b, r10b ; jne 0x2000018cf68 ; ret
0x0000020000237328 : test r10d, r10d ; je 0x200002372f5 ; mov eax, r10d ; jmp 0x2000023733b
0x000002000046a191 : test r10d, r10d ; jne 0x2000046a1a0 ; xor eax, eax ; ret
0x000002000067a503 : test r11, r11 ; setne al ; ret
0x0000020000446945 : test r14, r14 ; je 0x2000044695b ; mov rcx, rsi ; call r14
0x000002000052bc55 : test r15b, r15b ; je 0x2000052bc96 ; call 0x20000147f57
0x00000200000036cb : test r8, r8 ; je 0x200000036dc ; mov qword ptr [r8], rax ; ret
0x0000020000093984 : test r8, r8 ; je 0x20000093994 ; mov dword ptr [r8], eax ; ret
0x0000020000101263 : test r8, r8 ; je 0x20000101273 ; mov dword ptr [r8], r9d ; ret
0x0000020000102242 : test r8, r8 ; je 0x20000102254 ; xor edx, edx ; call r8
0x0000020000116194 : test r8, r8 ; je 0x200001161a2 ; jmp r8
0x0000020000139db7 : test r8, r8 ; je 0x20000139dc5 ; jmp r8
0x0000020000203a29 : test r8, r8 ; je 0x20000203a37 ; call r8
0x000002000046add5 : test r8, r8 ; je 0x2000046ade3 ; call r8
0x00000200006bd811 : test r8, r8 ; je 0x200006bd829 ; mov rcx, rax ; call r8
0x00000200006c170d : test r8, r8 ; je 0x200006c1725 ; mov rcx, rax ; call r8
0x00000200006c1975 : test r8, r8 ; je 0x200006c198d ; mov rcx, rax ; call r8
0x000002000070a2cc : test r8, r8 ; je 0x2000070a2d3 ; mov dword ptr [r8], r9d ; ret
0x000002000001de94 : test r8, r8 ; jne 0x2000001ded2 ; add rsp, 0x48 ; ret
0x000002000005b27d : test r8, r8 ; jne 0x2000005b28d ; mov rax, rdx ; ret
0x000002000005b27d : test r8, r8 ; jne 0x2000005b28e ; mov rax, rdx ; ret
0x000002000005b28b : test r8, r8 ; jne 0x2000005b29a ; xor eax, eax ; ret
0x0000020000074687 : test r8, r8 ; jne 0x20000074692 ; ret
0x00000200000862b7 : test r8, r8 ; jne 0x200000862c7 ; mov al, r10b ; ret
0x00000200000862b7 : test r8, r8 ; jne 0x200000862c8 ; mov al, r10b ; ret
0x00000200000edca6 : test r8, r8 ; jne 0x200000edcb9 ; lea eax, dword ptr [r8 + 1] ; ret
0x00000200000f02c9 : test r8, r8 ; jne 0x200000f02de ; ret
0x00000200000f5cbf : test r8, r8 ; jne 0x200000f5cd0 ; ret
0x000002000013b646 : test r8, r8 ; jne 0x2000013b63e ; ret
0x000002000013bbe4 : test r8, r8 ; jne 0x2000013bbd9 ; ret
0x000002000013d2ac : test r8, r8 ; jne 0x2000013d2d0 ; xor eax, eax ; ret
0x000002000001b866 : test r8, r8 ; jne 0x200001655f3 ; ret
0x000002000003c8e7 : test r8, r8 ; jne 0x2000016d703 ; ret
0x000002000012d18e : test r8, r8 ; jne 0x200001ad8b7 ; ret
0x00000200001edcd3 : test r8, r8 ; jne 0x200001edca4 ; mov rax, r8 ; ret
0x00000200001f8c03 : test r8, r8 ; jne 0x200001f8bf3 ; mov rax, r9 ; ret
0x000002000020f966 : test r8, r8 ; jne 0x2000020f92d ; ret
0x00000200004263f0 : test r8, r8 ; jne 0x20000426406 ; mov eax, dword ptr [rcx + 0x58] ; ret
0x000002000043b874 : test r8, r8 ; jne 0x2000043b867 ; ret
0x000002000068f801 : test r8, r8 ; jne 0x2000068f812 ; mov qword ptr [rdx], rax ; ret
0x000002000069e3d3 : test r8, r8 ; jne 0x2000069e3e6 ; lea eax, dword ptr [r8 + 0x14] ; ret
0x00000200000878d5 : test r8b, 2 ; je 0x200000878e5 ; mov eax, edx ; ret
0x00000200000878d5 : test r8b, 2 ; je 0x200000878e6 ; mov eax, edx ; ret
0x0000020000054ecb : test r8b, r8b ; jne 0x20000054ede ; add rsp, 0x28 ; ret
0x0000020000002501 : test r8b, r8b ; jne 0x2000015f5ab ; ret
0x000002000013a9d0 : test r8b, r8b ; jne 0x200001b2cad ; ret
0x00000200004b3123 : test r8b, r8b ; jne 0x200004b3132 ; xor eax, eax ; ret
0x00000200004b317b : test r8b, r8b ; jne 0x200004b318a ; xor eax, eax ; ret
0x00000200003e94af : test r8d, r8d ; je 0x200003e9496 ; xor al, al ; ret
0x000002000000836f : test r8d, r8d ; jne 0x2000000837a ; ret
0x00000200000863c7 : test r8d, r8d ; jne 0x200000863d8 ; mov eax, r8d ; ret
0x0000020000003d8a : test r8d, r8d ; jne 0x2000015fc03 ; ret
0x0000020000709cf3 : test r8d, r8d ; jne 0x20000709d02 ; xor eax, eax ; ret
0x000002000050a2f9 : test r8d, r8d ; js 0x2000050a308 ; xor eax, eax ; ret
0x00000200000f140c : test r9, r9 ; je 0x200000f1411 ; mov rax, r9 ; ret
0x00000200001bde1c : test r9, r9 ; je 0x200001bde2a ; call r9
0x000002000043fe04 : test r9, r9 ; je 0x2000043fe14 ; mov qword ptr [r9], rax ; ret
0x000002000003e459 : test r9, r9 ; jne 0x2000016de69 ; ret
0x00000200001ba42d : test r9, r9 ; jne 0x200001ba411 ; xor eax, eax ; ret
0x00000200004f2d4d : test r9, r9 ; jne 0x200004f2d5d ; mov eax, r10d ; ret
0x00000200004f2d4d : test r9, r9 ; jne 0x200004f2d5e ; mov eax, r10d ; ret
0x00000200006834ff : test r9, r9 ; jne 0x200006834e2 ; ret
0x0000020000038728 : test r9, r9 ; js 0x20000038740 ; mov rax, rdx ; ret
0x0000020000038728 : test r9, r9 ; js 0x20000038741 ; mov rax, rdx ; ret
0x00000200004b3073 : test r9b, r9b ; jne 0x200004b308e ; xor eax, eax ; ret
0x0000020000544db4 : test r9d, r10d ; je 0x20000544dc3 ; mov al, 1 ; ret
0x00000200005139ae : test r9d, r9d ; jne 0x200005b169a ; ret
0x00000200000420f7 : test r9d, r9d ; setne al ; ret
0x0000020000544db3 : test r9w, r10w ; je 0x20000544dc4 ; mov al, 1 ; ret
0x0000020000549f00 : test rax, r10 ; jne 0x20000549fad ; ret
0x0000020000112ae9 : test rax, r8 ; je 0x20000112af4 ; ret
0x00000200000ca30d : test rax, r8 ; jne 0x200000ca322 ; xor al, al ; ret
0x000002000020e7f1 : test rax, r9 ; sete al ; ret
0x000002000050459f : test rax, rax ; cmove eax, edx ; ret
0x0000020000019fa5 : test rax, rax ; je 0x20000019fb9 ; mov rcx, qword ptr [r14 + 8] ; call rax
0x000002000006f258 : test rax, rax ; je 0x2000006f298 ; mov qword ptr [r9], rax ; ret
0x000002000006f409 : test rax, rax ; je 0x2000006f414 ; ret
0x0000020000084753 : test rax, rax ; je 0x20000084766 ; mov rax, qword ptr [rax + 0x48] ; ret
0x00000200000ffba0 : test rax, rax ; je 0x200000ffbaf ; mov al, cl ; ret
0x00000200001b263c : test rax, rax ; je 0x20000139a06 ; call rax
0x000002000015b745 : test rax, rax ; je 0x2000015b75a ; mov rcx, qword ptr [rcx + 8] ; call rax
0x0000020000176c61 : test rax, rax ; je 0x20000176c6d ; call rax
0x0000020000115e41 : test rax, rax ; je 0x200001772e9 ; call rax
0x00000200001bce2f : test rax, rax ; je 0x200001bce3d ; call rax
0x00000200001c45e0 : test rax, rax ; je 0x200001c45ec ; call rax
0x00000200001c461c : test rax, rax ; je 0x200001c4628 ; call rax
0x00000200001c4697 : test rax, rax ; je 0x200001c46a3 ; call rax
0x00000200001c46f8 : test rax, rax ; je 0x200001c4704 ; call rax
0x00000200001c46f7 : test rax, rax ; je 0x200001c4705 ; call rax
0x00000200001c46f6 : test rax, rax ; je 0x200001c4706 ; call rax
0x00000200001d35bf : test rax, rax ; je 0x200001d35e4 ; mov rax, qword ptr [rax + 8] ; call rax
0x000002000022f49a : test rax, rax ; je 0x2000022f4b0 ; mov rcx, r14 ; call rax
0x00000200003ffcf9 : test rax, rax ; je 0x200003ffd0b ; mov rcx, rbx ; call rax
0x000002000045681b : test rax, rax ; je 0x20000456829 ; jmp rax
0x0000020000458c19 : test rax, rax ; je 0x20000458c30 ; mov rcx, qword ptr [rbp - 9] ; call rax
0x0000020000464a37 : test rax, rax ; je 0x20000464a4a ; movzx eax, word ptr [rax + 8] ; ret
0x00000200004a33df : test rax, rax ; je 0x200004a33f2 ; add rax, -0x10 ; ret
0x00000200004bd06e : test rax, rax ; je 0x200004bd081 ; call rax
0x00000200004c52cc : test rax, rax ; je 0x200004c52f3 ; mov rdi, rax ; jmp 0x200004c52a1
0x00000200004e2ae9 : test rax, rax ; je 0x200004e2af9 ; call rax
0x00000200004e3381 : test rax, rax ; je 0x200004e3395 ; lea rdx, qword ptr [rcx - 0x30] ; call rax
0x00000200004fca3b : test rax, rax ; je 0x200004fca5a ; mov ecx, dword ptr [rcx + 8] ; call rax
0x00000200004fe390 : test rax, rax ; je 0x200004fe3a3 ; add rax, 0x10 ; ret
0x00000200005000a8 : test rax, rax ; je 0x200004ffc19 ; call rax
0x0000020000518707 : test rax, rax ; je 0x20000518713 ; call rax
0x00000200005189f4 : test rax, rax ; je 0x20000518a00 ; call rax
0x00000200005197ef : test rax, rax ; je 0x20000519803 ; mov cl, dil ; call rax
0x000002000051dc32 : test rax, rax ; je 0x2000051dc3e ; call rax
0x000002000052cc31 : test rax, rax ; je 0x2000052cc06 ; call rax
0x000002000052dc0d : test rax, rax ; je 0x2000052dbc0 ; call rax
0x000002000053098e : test rax, rax ; je 0x2000053099a ; call rax
0x0000020000538110 : test rax, rax ; je 0x2000053811c ; call rax
0x00000200005ccecd : test rax, rax ; je 0x200005ccee1 ; mov rcx, r12 ; call rax
0x0000020000622647 : test rax, rax ; je 0x20000622655 ; jmp qword ptr [rax]
0x0000020000647ab2 : test rax, rax ; je 0x20000647abe ; call rax
0x0000020000675fcf : test rax, rax ; je 0x20000675fdb ; call rax
0x0000020000678cd3 : test rax, rax ; je 0x20000678cdf ; call rax
0x0000020000684183 : test rax, rax ; je 0x2000068419f ; mov rcx, rbp ; call rax
0x000002000068424d : test rax, rax ; je 0x2000068425f ; mov rcx, rdi ; call rax
0x00000200006bda14 : test rax, rax ; je 0x200006bda24 ; call rax
0x0000020000708b0f : test rax, rax ; je 0x20000708b91 ; mov r8d, edi ; call rax
0x000002000070906b : test rax, rax ; je 0x2000070907d ; mov cl, r9b ; call rax
0x000002000070c067 : test rax, rax ; je 0x2000070c075 ; jmp rax
0x000002000070f441 : test rax, rax ; je 0x2000070f45e ; mov rcx, rbx ; call rax
0x000002000070f4a9 : test rax, rax ; je 0x2000070f4b8 ; call rax
0x000002000070f555 : test rax, rax ; je 0x2000070f572 ; mov rcx, rdi ; call rax
0x000002000070f5cc : test rax, rax ; je 0x2000070f5e2 ; mov rcx, rbx ; call rax
0x000002000070f6dc : test rax, rax ; je 0x2000070f6ee ; mov rcx, rdi ; call rax
0x000002000070f6f4 : test rax, rax ; je 0x2000070f706 ; mov rcx, rdi ; call rax
0x000002000070f74d : test rax, rax ; je 0x2000070f75f ; mov rcx, rdi ; call rax
0x000002000070f74c : test rax, rax ; je 0x2000070f760 ; mov rcx, rdi ; call rax
0x0000020000447b30 : test rax, rax ; jle 0x200005aaf75 ; ret
0x0000020000009bc7 : test rax, rax ; jne 0x20000009bc8 ; mov rax, rcx ; ret
0x000002000001c3e7 : test rax, rax ; jne 0x2000001c3f6 ; xor eax, eax ; ret
0x0000020000020b53 : test rax, rax ; jne 0x20000020b62 ; mov al, 1 ; ret
0x0000020000025557 : test rax, rax ; jne 0x20000025562 ; ret
0x0000020000028b37 : test rax, rax ; jne 0x20000028b42 ; ret
0x0000020000038b67 : test rax, rax ; jne 0x20000038b68 ; mov rax, rcx ; ret
0x0000020000041a7f : test rax, rax ; jne 0x20000041a8a ; ret
0x0000020000050d0b : test rax, rax ; jne 0x20000050d03 ; xor eax, eax ; ret
0x0000020000059cfc : test rax, rax ; jne 0x20000059d0f ; add rsp, 0x28 ; ret
0x0000020000067d73 : test rax, rax ; jne 0x20000067d82 ; xor al, al ; ret
0x00000200000bdf59 : test rax, rax ; jne 0x200000bdf37 ; xor eax, eax ; ret
0x00000200000cf56d : test rax, rax ; jne 0x200000cf57c ; xor al, al ; ret
0x00000200000dbbee : test rax, rax ; jne 0x200000dbbc4 ; mov rax, rbx ; jmp 0x200000dbbc4
0x00000200000fb5f0 : test rax, rax ; jne 0x200000fb5f1 ; mov rax, rcx ; ret
0x0000020000100992 : test rax, rax ; jne 0x2000010095b ; jmp 0x20000100962
0x000002000011bba3 : test rax, rax ; jne 0x2000011bbae ; ret
0x000002000011dd44 : test rax, rax ; jne 0x2000011dd55 ; mov rax, rcx ; ret
0x000002000012d700 : test rax, rax ; jne 0x2000012d70b ; ret
0x000002000000b9de : test rax, rax ; jne 0x200001616a9 ; ret
0x00000200000375bb : test rax, rax ; jne 0x2000016bf6b ; ret
0x00000200000f8ae7 : test rax, rax ; jne 0x200001ab1dd ; ret
0x00000200001c63ac : test rax, rax ; jne 0x200001c63ab ; add rsp, 0x28 ; ret
0x00000200001f27f3 : test rax, rax ; jne 0x200001f2801 ; xor eax, eax ; ret
0x0000020000210527 : test rax, rax ; jne 0x20000210528 ; mov rax, rcx ; ret
0x000002000042eb35 : test rax, rax ; jne 0x2000042eb43 ; mov al, dl ; ret
0x000002000042eb35 : test rax, rax ; jne 0x2000042eb44 ; mov al, dl ; ret
0x0000020000453813 : test rax, rax ; jne 0x20000453823 ; mov eax, r10d ; ret
0x0000020000453813 : test rax, rax ; jne 0x20000453824 ; mov eax, r10d ; ret
0x00000200004545bc : test rax, rax ; jne 0x200004545b8 ; ret
0x000002000047b068 : test rax, rax ; jne 0x2000047b049 ; add rsp, 0x28 ; ret
0x00000200004955a6 : test rax, rax ; jne 0x2000049558b ; add rsp, 0x28 ; ret
0x000002000049c42c : test rax, rax ; jne 0x2000049c437 ; ret
0x00000200004f68ff : test rax, rax ; jne 0x200004f6912 ; xor cl, cl ; mov al, cl ; ret
0x00000200004fd531 : test rax, rax ; jne 0x200004fd544 ; add rsp, 0x28 ; ret
0x0000020000626add : test rax, rax ; jne 0x20000626af1 ; call 0x2000024da48
0x0000020000629bf0 : test rax, rax ; jne 0x20000629c04 ; call 0x2000024da48
0x000002000062c66c : test rax, rax ; jne 0x2000062c67b ; jmp 0x2000062c63c
0x0000020000668dce : test rax, rax ; jne 0x20000668da7 ; add rsp, 0x38 ; ret
0x00000200006d372d : test rax, rax ; jne 0x200006d36e9 ; mov al, 1 ; ret
0x0000020000703bb6 : test rax, rax ; jne 0x20000703bc1 ; ret
0x0000020000705f51 : test rax, rax ; jne 0x20000705f31 ; ret
0x00000200000a015a : test rax, rcx ; jne 0x200000a016e ; xor eax, eax ; ret
0x0000020000069e79 : test rcx, r8 ; cmovne eax, edx ; ret
0x00000200000476ab : test rcx, rax ; je 0x200000476ba ; xor eax, eax ; ret
0x00000200000f92fe : test rcx, rcx ; je 0x200000f930c ; call rcx
0x0000020000128ab3 : test rcx, rcx ; je 0x20000128abf ; call rcx
0x00000200001b411c : test rcx, rcx ; je 0x200001b412c ; mov eax, dword ptr [rcx + 0x70] ; ret
0x00000200001c459c : test rcx, rcx ; je 0x200001c45a8 ; call rcx
0x00000200001c45bf : test rcx, rcx ; je 0x200001c45cb ; call rcx
0x00000200001c45fc : test rcx, rcx ; je 0x200001c460a ; jmp rcx
0x00000200001c45fb : test rcx, rcx ; je 0x200001c460b ; jmp rcx
0x00000200001c45fa : test rcx, rcx ; je 0x200001c460c ; jmp rcx
0x00000200001c464b : test rcx, rcx ; je 0x200001c4659 ; jmp rcx
0x00000200001c46bb : test rcx, rcx ; je 0x200001c46c7 ; call rcx
0x00000200001c46d8 : test rcx, rcx ; je 0x200001c46e6 ; jmp rcx
0x00000200001d20df : test rcx, rcx ; je 0x200001d20f5 ; mov dword ptr [rcx], r10d ; ret
0x00000200001e41ec : test rcx, rcx ; je 0x200001e4201 ; mov dl, 2 ; call 0x200000a0489
0x00000200001fc1bd : test rcx, rcx ; je 0x200001fc1d9 ; and qword ptr [rcx], rdx ; ret
0x0000020000230272 : test rcx, rcx ; je 0x20000230282 ; add dword ptr [rcx], r11d ; ret
0x00000200003c98c1 : test rcx, rcx ; je 0x200003c98cd ; call rcx
0x00000200003c98c0 : test rcx, rcx ; je 0x200003c98ce ; call rcx
0x00000200003c98bf : test rcx, rcx ; je 0x200003c98cf ; call rcx
0x00000200003dc6f0 : test rcx, rcx ; je 0x200003dc6fc ; call rcx
0x00000200003dc6ef : test rcx, rcx ; je 0x200003dc6fd ; call rcx
0x00000200003dc6ee : test rcx, rcx ; je 0x200003dc6fe ; call rcx
0x00000200003e6547 : test rcx, rcx ; je 0x200003e6559 ; call 0x200000071f4
0x00000200003e6546 : test rcx, rcx ; je 0x200003e655a ; call 0x200000071f5
0x000002000040491c : test rcx, rcx ; je 0x2000040495b ; mov eax, r10d ; ret
0x000002000040491c : test rcx, rcx ; je 0x2000040495c ; mov eax, r10d ; ret
0x000002000046ae01 : test rcx, rcx ; je 0x2000046ae2c ; call 0x2000009a738
0x00000200004c7145 : test rcx, rcx ; je 0x200004c715c ; call 0x200000e7da8
0x00000200004c7144 : test rcx, rcx ; je 0x200004c715d ; call 0x200000e7da9
0x00000200004c754b : test rcx, rcx ; je 0x200004c755d ; call 0x200000e7da8
0x00000200004c754a : test rcx, rcx ; je 0x200004c755e ; call 0x200000e7da9
0x000002000051f0e7 : test rcx, rcx ; je 0x2000051f0f9 ; call 0x20000148078
0x0000020000521b32 : test rcx, rcx ; je 0x20000521b46 ; ret
0x0000020000521e50 : test rcx, rcx ; je 0x20000521e62 ; call 0x20000148078
0x000002000052209f : test rcx, rcx ; je 0x200005220b1 ; call 0x20000148078
0x0000020000522154 : test rcx, rcx ; je 0x20000522166 ; call 0x20000148078
0x0000020000522302 : test rcx, rcx ; je 0x20000522314 ; call 0x20000148078
0x00000200005819de : test rcx, rcx ; je 0x200005819b3 ; jmp 0x200005819ae
0x00000200005ebdb1 : test rcx, rcx ; je 0x200005ebdc2 ; call 0x20000148077
0x0000020000635c93 : test rcx, rcx ; je 0x20000635ca7 ; call qword ptr [rip - 0x3ded6e]
0x00000200006dbe01 : test rcx, rcx ; je 0x200006dbe12 ; call 0x20000148077
0x000002000000ba89 : test rcx, rcx ; jne 0x2000000ba94 ; ret
0x000002000001dff9 : test rcx, rcx ; jne 0x2000001e00a ; mov eax, dword ptr [rax + 0x24] ; ret
0x000002000001f9e0 : test rcx, rcx ; jne 0x2000001f9eb ; ret
0x0000020000020a23 : test rcx, rcx ; jne 0x20000020a08 ; mov eax, r8d ; ret
0x0000020000041e0e : test rcx, rcx ; jne 0x20000041e1d ; mov al, 1 ; ret
0x000002000006ca20 : test rcx, rcx ; jne 0x2000006ca2f ; xor eax, eax ; ret
0x000002000006d2b1 : test rcx, rcx ; jne 0x2000006d2af ; ret
0x000002000007a3d7 : test rcx, rcx ; jne 0x2000007a3e2 ; ret
0x000002000007a65a : test rcx, rcx ; jne 0x2000007a66b ; mov rax, rcx ; ret
0x00000200000bd64c : test rcx, rcx ; jne 0x200000bd657 ; ret
0x00000200000bd72a : test rcx, rcx ; jne 0x200000bd73b ; mov rax, r9 ; ret
0x00000200000ecde8 : test rcx, rcx ; jne 0x200000ecde1 ; xor al, al ; ret
0x00000200000fa83e : test rcx, rcx ; jne 0x200000fa84e ; mov rax, rdx ; ret
0x00000200000fa83e : test rcx, rcx ; jne 0x200000fa84f ; mov rax, rdx ; ret
0x0000020000128b38 : test rcx, rcx ; jne 0x20000128b47 ; xor al, al ; ret
0x000002000013b1b4 : test rcx, rcx ; jne 0x2000013b1c3 ; xor eax, eax ; ret
0x000002000013b1e8 : test rcx, rcx ; jne 0x2000013b1f7 ; xor eax, eax ; ret
0x000002000013bd5c : test rcx, rcx ; jne 0x2000013bd6b ; xor eax, eax ; ret
0x00000200000317cc : test rcx, rcx ; jne 0x2000016a2cb ; ret
0x000002000016f879 : test rcx, rcx ; jne 0x2000016f877 ; ret
0x000002000016f897 : test rcx, rcx ; jne 0x2000016f895 ; ret
0x0000020000114b54 : test rcx, rcx ; jne 0x20000176c25 ; ret
0x0000020000210566 : test rcx, rcx ; jne 0x20000210564 ; ret
0x00000200003dfb99 : test rcx, rcx ; jne 0x200003dfba4 ; ret
0x0000020000405220 : test rcx, rcx ; jne 0x2000040522b ; ret
0x000002000045e53c : test rcx, rcx ; jne 0x2000045e547 ; ret
0x000002000045f340 : test rcx, rcx ; jne 0x2000045f353 ; add rsp, 0x28 ; ret
0x0000020000494c70 : test rcx, rcx ; jne 0x20000494c7b ; ret
0x00000200004f4466 : test rcx, rcx ; jne 0x200004f4479 ; add rsp, 0x28 ; ret
0x00000200004fb0c0 : test rcx, rcx ; jne 0x200004fb0cb ; ret
0x000002000062b3ff : test rcx, rcx ; jne 0x2000062b40e ; xor eax, eax ; ret
0x0000020000681930 : test rcx, rcx ; jne 0x2000068192b ; xor al, al ; ret
0x0000020000687f88 : test rcx, rcx ; jne 0x20000687f97 ; xor al, al ; ret
0x00000200006a7cc3 : test rcx, rcx ; jne 0x200006a7cb3 ; mov rax, rcx ; ret
0x00000200006c6f48 : test rcx, rcx ; jne 0x200006c6f57 ; xor eax, eax ; ret
0x0000020000798e1c : test rcx, rcx ; jne 0x20000798e27 ; ret
0x00000200007baa7c : test rcx, rcx ; jne 0x200007baa6e ; ret
0x0000020000059d0c : test rcx, rcx ; sete al ; ret
0x0000020000220bbe : test rdx, rdx ; cmovne rax, rdx ; jmp 0x20000220c09
0x000002000000580b : test rdx, rdx ; je 0x20000005820 ; mov rax, rdx ; ret
0x000002000000580b : test rdx, rdx ; je 0x20000005821 ; mov rax, rdx ; ret
0x000002000004528b : test rdx, rdx ; je 0x2000004529e ; mov word ptr [rcx], r11w ; ret
0x0000020000088a66 : test rdx, rdx ; je 0x20000088a76 ; add eax, dword ptr [rdx + 0x68] ; ret
0x000002000010221a : test rdx, rdx ; je 0x20000102226 ; call rdx
0x00000200001ade5c : test rdx, rdx ; je 0x2000012d94b ; call rdx
0x00000200001300e1 : test rdx, rdx ; je 0x200001300f1 ; xor ecx, ecx ; call rdx
0x000002000018670d : test rdx, rdx ; je 0x20000186719 ; call rax
0x00000200001c466f : test rdx, rdx ; je 0x200001c467d ; jmp rdx
0x00000200001c4714 : test rdx, rdx ; je 0x200001c4722 ; jmp rdx
0x000002000042640e : test rdx, rdx ; je 0x200004263fa ; ret
0x00000200004e6e41 : test rdx, rdx ; je 0x200004e6e53 ; mov rcx, rsi ; call rdx
0x00000200005ba538 : test rdx, rdx ; je 0x200005ba54c ; mov rcx, qword ptr [rbp + 0x30] ; call rdx
0x0000020000600144 : test rdx, rdx ; je 0x20000600152 ; mov dword ptr [rdx], eax ; ret
0x000002000066482c : test rdx, rdx ; je 0x2000066483d ; mov rax, qword ptr [rdx] ; ret
0x00000200006818b7 : test rdx, rdx ; je 0x200006818c3 ; call rdx
0x00000200004e3011 : test rdx, rdx ; jle 0x200004e3024 ; add rsp, 0x38 ; ret
0x00000200000087f5 : test rdx, rdx ; jne 0x20000008804 ; xor eax, eax ; ret
0x000002000000d773 : test rdx, rdx ; jne 0x2000000d75f ; ret
0x000002000002a52d : test rdx, rdx ; jne 0x2000002a538 ; ret
0x000002000002df4b : test rdx, rdx ; jne 0x2000002df56 ; ret
0x0000020000056ed6 : test rdx, rdx ; jne 0x20000056ee1 ; ret
0x000002000007afba : test rdx, rdx ; jne 0x2000007afc5 ; ret
0x00000200000c1052 : test rdx, rdx ; jne 0x200000c1065 ; add rsp, 0x28 ; ret
0x00000200000c10a2 : test rdx, rdx ; jne 0x200000c10b5 ; add rsp, 0x28 ; ret
0x00000200001b8ebf : test rdx, rdx ; jne 0x200001b8ed0 ; mov qword ptr [r8], rcx ; ret
0x0000020000203fcf : test rdx, rdx ; jne 0x20000203fde ; xor eax, eax ; ret
0x0000020000420364 : test rdx, rdx ; jne 0x20000420339 ; mov r10b, 1 ; jmp 0x20000420339
0x000002000042bf04 : test rdx, rdx ; jne 0x2000042bf0f ; ret
0x0000020000494c5f : test rdx, rdx ; jne 0x200005ce43d ; ret
0x0000020000621546 : test rdx, rdx ; jne 0x20000621557 ; lea eax, dword ptr [rdx + 1] ; ret
0x000002000068191c : test rdx, rdx ; jne 0x20000681937 ; mov al, 1 ; ret
0x000002000070efe3 : test rdx, rdx ; jne 0x2000070efd6 ; ret
0x000002000079fdf0 : test rdx, rdx ; jne 0x200007c5783 ; ret
0x000002000014e099 : test rsi, rsi ; je 0x2000014e0ad ; mov rcx, qword ptr [rsi + 0x50] ; jmp rcx
0x000002000001a61a : test sil, sil ; jne 0x2000001a5e5 ; jmp 0x2000001a602
0x00000200005af225 : ud2b ; ret
0x000002000049eae4 : vaddsubps xmm6, xmm2, xmmword ptr [rbx] ; rol bl, 0x49 ; mov eax, eax ; ret
0x000002000005ccef : vcvtsi2sd xmm8, xmm9, dword ptr [rax] ; ret
0x000002000046b2ce : verw ax ; call rax
0x000002000052133f : verw ax ; ret 0
0x00000200002080c7 : verw ax ; ret 0xe6d0
0x000002000064e252 : vpmaxsw ymm8, ymm0, ymmword ptr [rcx + rcx*4 + 0x45] ; ret
0x0000020000459999 : wait ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret
0x000002000024bc6c : wait ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; sbb byte ptr [rbx], al ; ret
0x0000020000149205 : wait ; add byte ptr [rax], al ; add cl, ch ; xor cl, dh ; add byte ptr [rax], al ; ret
0x000002000010d5b7 : wait ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200001209ce : wait ; add eax, 0x48c03300 ; add esp, 0x28 ; ret
0x00000200000b851c : wait ; and dword ptr [rsi], ecx ; add byte ptr [rax - 0x75], cl ; ret
0x000002000052cda1 : wait ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x66ff
0x000002000003a4d0 : wait ; cwde ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000665aea : wait ; dec dword ptr [rax - 0x75] ; ret
0x000002000014bd72 : wait ; fnstcw word ptr [rcx] ; ret
0x00000200001d6a31 : wait ; fsetpm ; dec dword ptr [rax - 0x7d] ; ret
0x000002000017d936 : wait ; in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000674e85 : wait ; leave ; enter 0x44ff, -0x73 ; adc al, 0x23 ; ret 0x8948
0x0000020000223ee0 : wait ; loopne 0x20000223ee9 ; add rsp, 0x48 ; ret
0x0000020000627b61 : wait ; push rsp ; ret 0x48ff
0x00000200001649f5 : wait ; ret
0x00000200003e721f : wait ; ret 0x19
0x00000200001315e1 : wait ; ret 0x3c
0x000002000000ca91 : wait ; ret 0x3f
0x0000020000511167 : wait ; ret 0x48ff
0x000002000052dcfc : wait ; ret 0x89ff
0x00000200007a944c : wait ; ret 0xb8ff
0x00000200006d2961 : wait ; ret 0xe8ff
0x000002000047457e : wait ; ret 0xf0ff
0x0000020000194cb1 : wait ; ret 0xfff1
0x00000200000ce65f : wait ; sub eax, 0x271000 ; add byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x00000200003d262f : wait ; xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; ret 0xb74
0x0000020000044d68 : wbinvd ; ret
0x0000020000150ec2 : wrmsr ; pop rdi ; ret
0x0000020000147cdc : wrmsr ; pop rdx ; pop rax ; pop rcx ; ret
0x000002000014ba22 : wrmsr ; ret
0x0000020000519a34 : xadd bl, ah ; add al, 0xa ; ret
0x000002000002df53 : xadd dword ptr [rax + 0x6250], edx ; ret
0x0000020000157b16 : xadd dword ptr [rcx + 0x1500], edx ; ret
0x000002000016dfcd : xadd dword ptr [rcx + 0x40], eax ; ret
0x00000200000309fd : xadd dword ptr [rcx + 0x4f0], edx ; ret
0x000002000016dfbd : xadd dword ptr [rcx + 0x58], eax ; ret
0x000002000016df9d : xadd dword ptr [rcx + 0x60], eax ; ret
0x00000200004e6f59 : xadd dword ptr [rcx + 0x660], edx ; ret
0x000002000050e1e0 : xadd dword ptr [rcx + 8], eax ; cmp eax, 1 ; je 0x2000050e1f3 ; ret
0x00000200006ff47b : xadd dword ptr [rcx], eax ; ret
0x0000020000189c1c : xadd dword ptr [rdi + 0x158], ebx ; jmp 0x20000075ec5
0x0000020000085372 : xadd dword ptr [rdx + 0x10], eax ; add rsp, 0x38 ; ret
0x000002000002cb40 : xadd dword ptr [rdx + 0x20], eax ; ret
0x00000200000a0e4e : xadd dword ptr [rip + 0x285b2b], eax ; ret
0x000002000045655a : xadd dword ptr [rip - 0x1609b1], eax ; inc eax ; ret
0x00000200006768b2 : xadd dword ptr [rip - 0x3366e9], eax ; cmp eax, edx ; jmp 0x200006768f3
0x000002000002cb3f : xadd qword ptr [r10 + 0x20], rax ; ret
0x000002000016dfcc : xadd qword ptr [r9 + 0x40], r8 ; ret
0x000002000016dfbc : xadd qword ptr [r9 + 0x58], rax ; ret
0x000002000016df9c : xadd qword ptr [r9 + 0x60], rax ; ret
0x000002000002df52 : xadd qword ptr [rax + 0x6250], rdx ; ret
0x0000020000157b15 : xadd qword ptr [rcx + 0x1500], rdx ; ret
0x00000200000309fc : xadd qword ptr [rcx + 0x4f0], rdx ; ret
0x00000200004e6f58 : xadd qword ptr [rcx + 0x660], rdx ; ret
0x00000200006ff47a : xadd qword ptr [rcx], rax ; ret
0x0000020000085371 : xadd qword ptr [rdx + 0x10], rax ; add rsp, 0x38 ; ret
0x00000200000a0e4d : xadd qword ptr [rip + 0x285b2b], r8 ; ret
0x000002000024433b : xchg ah, al ; add eax, 0x8b480000 ; ret
0x00000200002451fd : xchg ah, al ; add eax, 0x8b490000 ; ret 0x894c
0x000002000017d267 : xchg ah, ch ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000555739 : xchg ah, cl ; add byte ptr [rax], al ; add byte ptr [rsi + 0x23], ah ; ret 0xb66
0x000002000042790b : xchg ah, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x00000200001d04ff : xchg al, bh ; dec dword ptr [rcx - 0x75] ; ret 0x7d89
0x000002000022729f : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret
0x00000200000f52d0 : xchg al, ch ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004bb6e6 : xchg bh, al ; ret 0xbdff
0x0000020000176216 : xchg bh, bh ; sar ecx, -1 ; jmp 0x20000112468
0x000002000045f1a3 : xchg bh, cl ; dec dword ptr [rax - 0x75] ; ret
0x000002000003985b : xchg bh, dh ; rol byte ptr [rcx + 0xb], 1 ; add byte ptr [rbx], bh ; ret
0x00000200004ebc3b : xchg byte ptr [rax + 0x3000001], dl ; ret 0x8948
0x00000200004e8d5a : xchg byte ptr [rax + 0x3000001], dl ; ret 0x8b48
0x000002000048c339 : xchg byte ptr [rax + 0x490048b3], dh ; add ecx, esi ; jmp rcx
0x000002000017133f : xchg byte ptr [rax + 0x75000000], bl ; adc cl, byte ptr [rax - 0x7d] ; ret 0xb918
0x00000200000a8fcd : xchg byte ptr [rax + rax + 0x3b660000], ah ; ret 0x840f
0x0000020000030330 : xchg byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 3] ; ret 0x3b48
0x00000200004e97d3 : xchg byte ptr [rax - 0x75], cl ; ret
0x00000200005df92f : xchg byte ptr [rax], ah ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x88 ; ret 6
0x00000200000e9763 : xchg byte ptr [rbp + 0x48000bec], ch ; add esp, 0x38 ; ret
0x000002000023c12b : xchg byte ptr [rbx + 0x33000000], ch ; inc dword ptr [rcx - 0x75] ; ret 0x8d4c
0x0000020000055db4 : xchg byte ptr [rbx], dh ; leave ; call r14
0x00000200007b1fe2 : xchg byte ptr [rbx], dh ; mov edi, edi ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004abef7 : xchg byte ptr [rcx + 0x12], dl ; add bh, bh ; ret
0x000002000018cf12 : xchg byte ptr [rcx - 0x11], ch ; dec dword ptr [rax - 0x7d] ; ret 0x830c
0x000002000062a0b6 : xchg byte ptr [rcx], bh ; ret 0x48ff
0x000002000051d501 : xchg byte ptr [rcx], cl ; add al, ch ; ret
0x0000020000090e68 : xchg byte ptr [rcx], dh ; add byte ptr [rax + 0x3b], cl ; sal byte ptr [rdi + 0x27], 1 ; ret
0x0000020000070142 : xchg byte ptr [rcx], dl ; add byte ptr [rbp + 0x33], al ; sal dh, cl ; ret 0xf1e
0x0000020000102524 : xchg byte ptr [rdi - 0x75000000], bl ; call 0x20048d22880
0x0000020000515c13 : xchg byte ptr [rdi], bh ; ret
0x00000200004beb2c : xchg byte ptr [rdi], bl ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200004629d2 : xchg byte ptr [rdi], cl ; ret
0x0000020000130808 : xchg byte ptr [rdx + rax], ch ; add bh, bh ; ret
0x000002000007e196 : xchg byte ptr [rdx], al ; add byte ptr [rax], al ; jmp 0x2000007e164
0x00000200005649f2 : xchg byte ptr [rdx], bh ; add dh, dh ; ret 0x7502
0x0000020000136d73 : xchg byte ptr [rdx], bh ; add dh, dh ; ret 0xf02
0x0000020000009576 : xchg byte ptr [rdx], bh ; and al, 0 ; add rsp, 0x28 ; ret
0x00000200004cc4a6 : xchg byte ptr [rdx], ch ; ret 0x90ff
0x0000020000176742 : xchg byte ptr [rip - 0x74000630], cl ; ret
0x000002000017609a : xchg byte ptr [rip - 0x74000641], al ; ret
0x00000200000b20f1 : xchg byte ptr [rip - 0xbf0000], al ; ret 0x8b48
0x000002000078907f : xchg byte ptr [rsi + rax], dh ; add byte ptr [rcx + 0xf], al ; ret 0x4489
0x00000200003d1af6 : xchg byte ptr [rsi + rax], dl ; add byte ptr [rcx - 0x75], al ; ret 0xe8c1
0x000002000010b8df : xchg byte ptr [rsi], al ; add dh, dh ; ret
0x00000200005db856 : xchg byte ptr [rsi], bh ; scasb al, byte ptr [rdi] ; dec dword ptr [rax - 0x7d] ; ret
0x000002000053245f : xchg byte ptr [rsi], ch ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x000002000007933e : xchg byte ptr [rsi], cl ; adc dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x000002000043f2f2 : xchg byte ptr [rsi], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000ca9e5 : xchg cl, bl ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x3b4c
0x00000200004b24dd : xchg dh, bl ; sbb dword ptr [rdx], edx ; add byte ptr [rax - 1], cl ; ret
0x000002000066d556 : xchg dh, cl ; jmp qword ptr [rdx]
0x00000200003e11d5 : xchg dl, al ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x1a], 0x8b ; ret
0x000002000017c984 : xchg dl, bh ; jmp qword ptr [rbx]
0x0000020000479402 : xchg dl, ch ; dec dword ptr [rax + 0x3b] ; ret
0x00000200001104b6 : xchg dword ptr [r8 - 0x75], r9d ; push rbp ; fisttp word ptr [rax + 0x3b] ; ret 0x850f
0x0000020000450802 : xchg dword ptr [r8 - 0x75], r9d ; ret
0x000002000010fcf2 : xchg dword ptr [r8 - 0x75], r9d ; ret 0xb948
0x00000200003fc109 : xchg dword ptr [r9 - 0x75], r9d ; xlatb ; mov rcx, rbx ; call r14
0x000002000022660c : xchg dword ptr [rax + 0x3000003], esi ; ret
0x000002000053f9cb : xchg dword ptr [rax + rcx*8 + 0x58], eax ; mov eax, r9d ; ret
0x0000020000642992 : xchg dword ptr [rax - 0x73000000], eax ; push rdi ; add edi, dword ptr [rbx] ; ret 0x4c73
0x000002000012fb52 : xchg dword ptr [rax - 0x75000000], edx ; ret
0x00000200001104b7 : xchg dword ptr [rax - 0x75], ecx ; push rbp ; fisttp word ptr [rax + 0x3b] ; ret 0x850f
0x0000020000450803 : xchg dword ptr [rax - 0x75], ecx ; ret
0x000002000010fcf3 : xchg dword ptr [rax - 0x75], ecx ; ret 0xb948
0x00000200005eb1c3 : xchg dword ptr [rax - 0x7b000000], edx ; ret
0x00000200004f197b : xchg dword ptr [rax - 0x7c000000], ecx ; ret 0x5a74
0x0000020000475347 : xchg dword ptr [rax - 0x7cffeb0b], esp ; ret 0xebe0
0x0000020000504fb0 : xchg dword ptr [rax - 0x7d000000], ecx ; ret 0x304
0x00000200000bf029 : xchg dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x9977
0x00000200000befe5 : xchg dword ptr [rax], eax ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x000002000021488f : xchg dword ptr [rax], eax ; add byte ptr [rcx], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x000002000043c25c : xchg dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000be894 : xchg dword ptr [rax], ebx ; add eax, dword ptr [rax] ; add al, ch ; ret 0
0x00000200000cd90e : xchg dword ptr [rax], ebx ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8b44
0x000002000007afb8 : xchg dword ptr [rax], edx ; test rdx, rdx ; jne 0x2000007afc7 ; ret
0x00000200000afead : xchg dword ptr [rax], esi ; mov ecx, dword ptr [rsi] ; add dh, dh ; ret
0x000002000011d8e6 : xchg dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000043767f : xchg dword ptr [rbp - 0x8fffffb], eax ; ret
0x0000020000492546 : xchg dword ptr [rbp - 0x9ffec4c], esp ; ret
0x00000200005250c8 : xchg dword ptr [rbx + 0x2fa0e8d8], ecx ; ret 0x85ff
0x0000020000568a68 : xchg dword ptr [rbx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000568a67 : xchg dword ptr [rbx + 8], r8d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004a5eff : xchg dword ptr [rbx + rax], ebp ; add byte ptr [rcx - 0x7b], al ; ret 0x840f
0x00000200003ea4bf : xchg dword ptr [rbx - 0x7af0fc17], eax ; ret 0x19a9
0x00000200004c5205 : xchg dword ptr [rbx], edi ; or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x0000020000445785 : xchg dword ptr [rcx + 0x1c8], edx ; ret
0x000002000022c7ad : xchg dword ptr [rcx + 0x1c], eax ; ret
0x00000200005698b6 : xchg dword ptr [rcx + 0x20], eax ; ret
0x00000200006a7ce1 : xchg dword ptr [rcx + 0x2c], eax ; xor eax, eax ; ret
0x00000200006a7ce0 : xchg dword ptr [rcx + 0x2c], r8d ; xor eax, eax ; ret
0x000002000004447d : xchg dword ptr [rcx + 0x320], edx ; ret
0x0000020000044d90 : xchg dword ptr [rcx + 0x54], edx ; mov eax, edx ; ret
0x00000200000472f8 : xchg dword ptr [rcx + rax + 0x634c0000], eax ; ret
0x00000200003fc10a : xchg dword ptr [rcx - 0x75], ecx ; xlatb ; mov rcx, rbx ; call r14
0x0000020000041e86 : xchg dword ptr [rcx], eax ; ret
0x000002000051aae5 : xchg dword ptr [rcx], eax ; ret 0x4cff
0x00000200006aa3ae : xchg dword ptr [rcx], ecx ; mov qword ptr [rdx], rax ; mov rax, rcx ; ret
0x00000200004e187c : xchg dword ptr [rcx], esp ; loope 0x200004e1896 ; add byte ptr [rax + 0x63], cl ; ret 0x8b41
0x00000200007c53b3 : xchg dword ptr [rdi - 0x6c], ebx ; std ; dec dword ptr [rcx - 0x75] ; ret
0x000002000066197c : xchg dword ptr [rdi - 0x75000000], ebx ; ret
0x00000200003c6a19 : xchg dword ptr [rdx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006549d0 : xchg dword ptr [rdx + rax*8], ecx ; mov eax, r9d ; ret
0x00000200007c5416 : xchg dword ptr [rdx - 0x6b], esi ; std ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000157b3e : xchg dword ptr [rdx], eax ; ret
0x00000200004cf0d0 : xchg dword ptr [rdx], esi ; ret 0x10
0x00000200001cbfc3 : xchg dword ptr [rip + 0x17510b], eax ; ret
0x00000200001d3546 : xchg dword ptr [rip + 0x1d4b6c], ecx ; ret
0x00000200005695dd : xchg dword ptr [rip + 0x1debcd], ecx ; ret
0x000002000011617c : xchg dword ptr [rip + 0x1dfab6], eax ; ret
0x000002000011c543 : xchg dword ptr [rip + 0x1ea297], ecx ; ret
0x00000200006ff48a : xchg dword ptr [rip + 0x2dcac], eax ; ret
0x000002000000ff02 : xchg dword ptr [rip + 0x2f6a78], ecx ; ret
0x0000020000122d4b : xchg dword ptr [rip + 0x75c28500], eax ; or byte ptr [rbx], cl ; ret 0x3345
0x00000200005695e5 : xchg dword ptr [rip - 0x2294fb], ecx ; ret
0x000002000007933d : xchg dword ptr [rsi + 0x4800110e], eax ; add esp, 0x38 ; ret
0x000002000059ef2e : xchg dword ptr [rsi + 0x490059e5], edi ; add ecx, edi ; jmp rcx
0x00000200006e6d05 : xchg dword ptr [rsi - 0x5a], edx ; push rsi ; ret
0x00000200004023ad : xchg dword ptr [rsi], ebp ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000002000043ff85 : xchg dword ptr [rsi], edx ; add byte ptr [rax - 0x75], cl ; retf ; call rsi
0x00000200005f3562 : xchg dword ptr [rsi], edx ; popfq ; cmc ; call rcx
0x00000200000aa0c3 : xchg dword ptr [rsi], esi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x00000200006f87fa : xchg dword ptr [rsp + rdi*8], esi ; ret 0x4c1f
0x000002000043ff84 : xchg dword ptr fs:[rsi], edx ; add byte ptr [rax - 0x75], cl ; retf ; call rsi
0x00000200000d1796 : xchg eax, eax ; add al, byte ptr [rax] ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x000002000008396f : xchg eax, ebp ; adc byte ptr [rax], al ; ret
0x00000200001c026b : xchg eax, ebp ; adc eax, dword ptr [rax] ; call rax
0x000002000041a87b : xchg eax, ebp ; add al, 0 ; add byte ptr [rcx - 1], al ; ret
0x000002000004311c : xchg eax, ebp ; add al, byte ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000e8a42 : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000410f3a : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000015193d : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200000c02c3 : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xf48
0x00000200004ddd9f : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rsi + 3], ah ; ret 0xb70f
0x00000200006d819a : xchg eax, ebp ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200006d1351 : xchg eax, ebp ; add byte ptr [rax], al ; rol byte ptr [rbp - 0x77], 8 ; ret
0x00000200005cfb74 : xchg eax, ebp ; add byte ptr [rax], al ; shr cl, 0x35 ; ret 0xffec
0x000002000014b145 : xchg eax, ebp ; add dword ptr [rax], eax ; add cl, ch ; repne scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000200001216b7 : xchg eax, ebp ; add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000138db7 : xchg eax, ebp ; add eax, 0x1ea414 ; xor eax, eax ; ret
0x00000200001020e4 : xchg eax, ebp ; add eax, 0x21f3b6 ; xor eax, eax ; ret
0x00000200001db2d9 : xchg eax, ebp ; and dword ptr [r11], r10d ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000072a442 : xchg eax, ebp ; call qword ptr [rax - 0x3d4217]
0x000002000072a434 : xchg eax, ebp ; call qword ptr [rax - 0x3d8117]
0x00000200007a8f47 : xchg eax, ebp ; cmp al, byte ptr [rax] ; call 0x200003d208a
0x00000200007a8f46 : xchg eax, ebp ; cmp al, byte ptr [rax] ; call 0x200003d208b
0x000002000077df9c : xchg eax, ebp ; cwde ; add eax, 0x33480000 ; ret 0xd233
0x000002000071881b : xchg eax, ebp ; dec dword ptr [rax + 0x3b] ; ret 0x1675
0x00000200006af94a : xchg eax, ebp ; dec dword ptr [rbx + 0x78c085f8] ; adc edi, edi ; ret 0x6348
0x00000200006af329 : xchg eax, ebp ; dec dword ptr [rbx + 0x78c085f8] ; or edi, edi ; ret 0x6348
0x00000200006e8c33 : xchg eax, ebp ; hlt ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200001a9c3d : xchg eax, ebp ; hlt ; push rsi ; ret 0x7408
0x00000200001ad4b3 : xchg eax, ebp ; in al, -9 ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200001975c0 : xchg eax, ebp ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x00000200001fc18b : xchg eax, ebp ; js 0x200001fc1a3 ; add byte ptr [rbx], al ; ret 0xc23b
0x00000200007b7a02 : xchg eax, ebp ; leave ; inc dword ptr [rbp - 0xd28740] ; ret
0x00000200005e1a2f : xchg eax, ebp ; lock dec dword ptr [rax - 0x75] ; ret
0x0000020000193237 : xchg eax, ebp ; lock dec dword ptr [rax - 0x75] ; ret 0x2b48
0x000002000051f077 : xchg eax, ebp ; lodsd eax, dword ptr [rsi] ; ret 0x48ff
0x00000200002483eb : xchg eax, ebp ; mov byte ptr [rip + 0x33480000], al ; ret 0xd233
0x000002000068406f : xchg eax, ebp ; mov ds, word ptr [rdi + 0xd8d48ff] ; ret 0xffc7
0x0000020000129fdd : xchg eax, ebp ; mov rax, r8 ; ret
0x00000200004c67d8 : xchg eax, ebp ; nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf20
0x0000020000641de7 : xchg eax, ebp ; nop ; ret
0x0000020000071679 : xchg eax, ebp ; or al, 0 ; add rsp, 0x58 ; ret
0x000002000078d766 : xchg eax, ebp ; or byte ptr [rbx], 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200007d03b7 : xchg eax, ebp ; or byte ptr [rcx - 0x67827401], 0x81 ; jmp qword ptr [rbx]
0x000002000077da81 : xchg eax, ebp ; or byte ptr [rip + 0x33480000], al ; ret 0xd233
0x000002000065a2d7 : xchg eax, ebp ; or dword ptr [rsi - 0x3b7cb701], ebp ; pop rax ; ret
0x000002000041a960 : xchg eax, ebp ; push rax ; add al, 0 ; add byte ptr [rcx - 1], al ; ret
0x0000020000021af8 : xchg eax, ebp ; ret
0x00000200004cf02e : xchg eax, ebp ; ret 0x10
0x00000200000aca72 : xchg eax, ebp ; ret 0x1a8
0x00000200004f82e7 : xchg eax, ebp ; ret 0x1ae8
0x000002000061636e : xchg eax, ebp ; ret 0x27e8
0x000002000068d5cd : xchg eax, ebp ; ret 0x2b49
0x00000200001212e2 : xchg eax, ebp ; ret 0x2be8
0x0000020000113801 : xchg eax, ebp ; ret 0x3345
0x0000020000610c30 : xchg eax, ebp ; ret 0x39e8
0x0000020000401f15 : xchg eax, ebp ; ret 0x3d80
0x0000020000401f32 : xchg eax, ebp ; ret 0x3d83
0x00000200005c4ca9 : xchg eax, ebp ; ret 0x3de9
0x00000200005a977c : xchg eax, ebp ; ret 0x41e8
0x00000200006ce5f7 : xchg eax, ebp ; ret 0x48ff
0x0000020000135264 : xchg eax, ebp ; ret 0x5338
0x000002000061623a : xchg eax, ebp ; ret 0x5be8
0x0000020000581d78 : xchg eax, ebp ; ret 0x61e8
0x00000200004e767e : xchg eax, ebp ; ret 0x6483
0x000002000053557c : xchg eax, ebp ; ret 0x6de8
0x00000200001df1ac : xchg eax, ebp ; ret 0x7f24
0x000002000000f21b : xchg eax, ebp ; ret 0x82e8
0x0000020000209e11 : xchg eax, ebp ; ret 0x8341
0x00000200004a4627 : xchg eax, ebp ; ret 0x8445
0x00000200000ad6d9 : xchg eax, ebp ; ret 0x8548
0x00000200001c240b : xchg eax, ebp ; ret 0x854d
0x00000200004a6e7f : xchg eax, ebp ; ret 0x86e8
0x00000200001fc399 : xchg eax, ebp ; ret 0x8941
0x00000200001c5670 : xchg eax, ebp ; ret 0x8948
0x0000020000080755 : xchg eax, ebp ; ret 0x8d4c
0x000002000020bfe4 : xchg eax, ebp ; ret 0x948
0x0000020000032d8d : xchg eax, ebp ; ret 0xb4e8
0x00000200004255d3 : xchg eax, ebp ; ret 0xba0f
0x0000020000719aed : xchg eax, ebp ; ret 0xc141
0x0000020000134120 : xchg eax, ebp ; ret 0xc149
0x00000200001e00df : xchg eax, ebp ; ret 0xc233
0x00000200001a0543 : xchg eax, ebp ; ret 0xc280
0x000002000001dce8 : xchg eax, ebp ; ret 0xc3f6
0x00000200005657ac : xchg eax, ebp ; ret 0xc933
0x00000200006bbfc4 : xchg eax, ebp ; ret 0xd03b
0x00000200004fdc11 : xchg eax, ebp ; ret 0xd0e8
0x00000200004a0b41 : xchg eax, ebp ; ret 0xd10b
0x0000020000093ad4 : xchg eax, ebp ; ret 0xe181
0x0000020000216343 : xchg eax, ebp ; ret 0xe6e8
0x0000020000663533 : xchg eax, ebp ; ret 0xe8c1
0x000002000011def5 : xchg eax, ebp ; ret 0xe9
0x00000200004f6956 : xchg eax, ebp ; ret 0xe9c1
0x000002000006bd4c : xchg eax, ebp ; ret 0xf41
0x00000200001a272f : xchg eax, ebp ; ret 0xf640
0x000002000043a6e8 : xchg eax, ebp ; ret 0xf641
0x000002000062ecd7 : xchg eax, ebp ; ret 0xf741
0x0000020000051cea : xchg eax, ebp ; ret 0xfa2b
0x00000200006f3939 : xchg eax, ebp ; ret 0xff
0x0000020000039e4a : xchg eax, ebp ; ret 0xff41
0x00000200004e4067 : xchg eax, ebp ; ret 0xffc0
0x00000200006a0682 : xchg eax, ebp ; ret 0xffc5
0x000002000051bba7 : xchg eax, ebp ; ret 0xffd3
0x00000200005dd2b7 : xchg eax, ebp ; ret 0xffe9
0x000002000066e8bb : xchg eax, ebp ; ret 0xffea
0x00000200003d6f97 : xchg eax, ebp ; ret 0xfff4
0x00000200005dbd21 : xchg eax, ebp ; rol al, 0xe0 ; add esi, dword ptr [rdx] ; ret
0x000002000020beb7 : xchg eax, ebp ; rol bl, 0xf6 ; ret 0x7407
0x000002000077d871 : xchg eax, ebp ; rol byte ptr [rax + rax], 1 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x0000020000222131 : xchg eax, ebp ; rol byte ptr [rax - 0x36fdfc1f], 0x22 ; ret 0xc80a
0x0000020000070ca8 : xchg eax, ebp ; rol byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x28 ; ret
0x00000200004b36c4 : xchg eax, ebp ; rol byte ptr [rcx], 0 ; add dh, dh ; ret 0x7401
0x0000020000784e3b : xchg eax, ebp ; rol byte ptr [rip + 0x3b4d0000], 1 ; ret
0x000002000046be92 : xchg eax, ebp ; rol cl, 0xe0 ; adc dh, byte ptr [rbx] ; ret
0x00000200004a85d6 : xchg eax, ebp ; rol cl, 0xe0 ; add esi, dword ptr [rbx] ; ret 0xe083
0x0000020000446b84 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000446bf3 ; pop rsi ; pop rbp ; ret
0x000002000057ca8a : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000057caf5 ; ret
0x000002000067ff65 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000067ffd0 ; ret
0x00000200007916ac : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000079171b ; pop rsi ; pop rbp ; ret
0x000002000057f2fe : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop r13 ; pop rbp ; ret
0x000002000057b29b : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x000002000057bc83 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbp ; ret
0x00000200004c82c7 : xchg eax, ebp ; ror byte ptr [rcx - 0x75], 0xe3 ; pop rdi ; ret
0x000002000057bf7d : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rbp ; ret
0x00000200000444d8 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rdi ; ret
0x0000020000005c8a : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x000002000015b86a : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x30 ; pop rbp ; ret
0x00000200000459e6 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x38 ; ret
0x000002000057c191 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x40 ; pop rbp ; ret
0x000002000057bd03 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x60 ; pop rbp ; ret
0x00000200007c5418 : xchg eax, ebp ; std ; dec dword ptr [rcx - 0x75] ; ret
0x00000200007ccde7 : xchg eax, ebp ; stosb byte ptr [rdi], al ; cwde ; push rsi ; ret
0x0000020000216ea7 : xchg eax, ebp ; sub esi, esp ; dec dword ptr [rax - 0x77] ; ret 0x8d48
0x00000200001b9abb : xchg eax, ebp ; xor al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004acdd1 : xchg eax, ebx ; adc byte ptr [rip + 0x3b480000], dl ; ret 0x930f
0x000002000018189c : xchg eax, ebx ; adc eax, 0x348ffed ; ret 0x2bb
0x00000200001c04f7 : xchg eax, ebx ; adc eax, dword ptr [rax] ; call r9
0x0000020000641563 : xchg eax, ebx ; add al, 0 ; ror byte ptr [rdi], 0x85 ; ret
0x00000200000c7723 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004fdca6 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; imul cl ; ret 0xfffd
0x0000020000149105 : xchg eax, ebx ; add byte ptr [rax], al ; add cl, ch ; xor cl, bh ; add byte ptr [rax], al ; ret
0x000002000004f5ac : xchg eax, ebx ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000136b0d : xchg eax, ebx ; add byte ptr [rsi], 0 ; add dh, dh ; ret 0xf02
0x0000020000137e15 : xchg eax, ebx ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200000f3e61 : xchg eax, ebx ; and dword ptr [rax], eax ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x00000200007d2889 : xchg eax, ebx ; call 0x1ff83c62890
0x00000200004475a9 : xchg eax, ebx ; call rax
0x00000200005ac6a1 : xchg eax, ebx ; clc ; ret 0x48ff
0x00000200005ac2a1 : xchg eax, ebx ; cld ; ret 0x4cff
0x00000200004530fc : xchg eax, ebx ; cli ; inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x4589
0x00000200005669ed : xchg eax, ebx ; cmc ; out -1, eax ; add rsp, 0x48 ; ret
0x00000200007788dc : xchg eax, ebx ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x000002000070b2e4 : xchg eax, ebx ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000517e5d : xchg eax, ebx ; fdivp st(7) ; jne 0x200005f2aeb ; ret
0x00000200001d1942 : xchg eax, ebx ; idiv bh ; add rsp, 0x58 ; ret
0x00000200001d18e3 : xchg eax, ebx ; idiv bh ; add rsp, 0x78 ; ret
0x000002000055d9f6 : xchg eax, ebx ; inc dword ptr [rdi + rcx - 0x49] ; ret
0x0000020000620269 : xchg eax, ebx ; int 0xc2
0x00000200004e8fa9 : xchg eax, ebx ; loopne 0x200004e8fb4 ; add byte ptr [rax], al ; call 0x20000114ac8
0x000002000063190a : xchg eax, ebx ; mov al, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000027992 : xchg eax, ebx ; mov eax, 0x41000006 ; inc edx ; jmp 0x200000279cb
0x00000200000c1a63 : xchg eax, ebx ; mov eax, 0xf6000000 ; ret 0xf07
0x00000200001c2462 : xchg eax, ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000189eb9 : xchg eax, ebx ; push -0x9ffffff ; ret 0x7501
0x00000200006188a9 : xchg eax, ebx ; push rcx ; ret
0x00000200006288a9 : xchg eax, ebx ; push rcx ; ret 0x48ff
0x000002000002fd07 : xchg eax, ebx ; ret
0x00000200000ed72e : xchg eax, ebx ; ret 0
0x00000200004494c9 : xchg eax, ebx ; ret 0x48ff
0x0000020000481e33 : xchg eax, ebx ; ret 0x8844
0x000002000058a21a : xchg eax, ebx ; ret 0x9de9
0x000002000042fe4f : xchg eax, ebx ; ret 0xba0f
0x0000020000623cac : xchg eax, ebx ; ret 0xebff
0x00000200007ab269 : xchg eax, ebx ; ret 0xff8a
0x000002000061e9f2 : xchg eax, ebx ; ret 6
0x0000020000145fcb : xchg eax, ebx ; rol byte ptr [rip - 0x74b80000], 1 ; ret
0x0000020000244625 : xchg eax, ebx ; rol byte ptr [rip - 0x74b80000], 1 ; ret 0x2eb
0x000002000068808b : xchg eax, ebx ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x0000020000203fde : xchg eax, ebx ; salc ; imul rax, rcx ; div r8 ; ret
0x0000020000157a55 : xchg eax, ebx ; sbb al, 0 ; mov dword ptr [rip + 0x1c9316], eax ; ret
0x0000020000157a5b : xchg eax, ebx ; sbb al, 0 ; ret
0x00000200004aba68 : xchg eax, ebx ; sbb byte ptr [rip - 0x74bc0000], al ; ret 0xb44
0x00000200005cf7e4 : xchg eax, ebx ; scasb al, byte ptr [rdi] ; in al, dx ; inc dword ptr [rbp - 0x75] ; ret 0x1ba
0x00000200004827e9 : xchg eax, ebx ; stc ; ret
0x0000020000401d3d : xchg eax, ebx ; xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x000002000046d549 : xchg eax, ebx ; xlatb ; add dword ptr [rax], eax ; add rsp, 0x58 ; ret
0x00000200000243b9 : xchg eax, ebx ; xor al, 0x14 ; add byte ptr [rbp + 0x33], al ; fcomi st(6) ; ret 0x751e
0x00000200005af235 : xchg eax, ebx ; xor al, bl ; dec dword ptr [rax - 0x75] ; ret
0x000002000002df8c : xchg eax, ecx ; add al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x00000200004368c9 : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x00000200000eb10e : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax + rcx*4 - 0x45], al ; ret
0x0000020000028884 : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001490c5 : xchg eax, ecx ; add byte ptr [rax], al ; add cl, ch ; jb 0x200001490a4 ; add byte ptr [rax], al ; ret
0x00000200004a4e39 : xchg eax, ecx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000014b0c5 : xchg eax, ecx ; add dword ptr [rax], eax ; add cl, ch ; jb 0x2000014b084 ; add byte ptr [rax], al ; ret
0x0000020000706324 : xchg eax, ecx ; add rax, r9 ; ret
0x000002000004447e : xchg eax, ecx ; and byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x0000020000502607 : xchg eax, ecx ; and eax, esi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xe72
0x00000200007b594f : xchg eax, ecx ; call rcx
0x00000200000fa819 : xchg eax, ecx ; cld ; dec dword ptr [rax - 0x75] ; ret
0x0000020000445786 : xchg eax, ecx ; enter 1, 0 ; ret
0x000002000045358a : xchg eax, ecx ; fadd dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000200001d1ad5 : xchg eax, ecx ; idiv bh ; add rsp, 0x70 ; pop rbx ; ret
0x000002000049c8f6 : xchg eax, ecx ; in al, 0 ; add byte ptr [rax], al ; call 0x200000c5b18
0x0000020000183364 : xchg eax, ecx ; in eax, dx ; dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rcx - 0x75] ; ret 0x3b49
0x00000200001e7f1d : xchg eax, ecx ; in eax, dx ; dec dword ptr [rax - 0x7f] ; ret
0x00000200006f3fe8 : xchg eax, ecx ; inc dword ptr [rbp - 0x74f38740] ; ret
0x00000200000fd10b : xchg eax, ecx ; insb byte ptr [rdi], dx ; and al, byte ptr [rax] ; shl rax, 0xc ; ret
0x0000020000150f95 : xchg eax, ecx ; jmp r9
0x00000200000e8357 : xchg eax, ecx ; js 0x200000e8378 ; add byte ptr [rax], al ; jne 0x200000e836a ; mov al, 1 ; ret
0x000002000012d628 : xchg eax, ecx ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000002000012d605 : xchg eax, ecx ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7402
0x00000200003e1df0 : xchg eax, ecx ; loopne 0x200003e1dfa ; add byte ptr [rax], al ; ret
0x0000020000631b25 : xchg eax, ecx ; mov al, 0xff ; add rsp, 0x58 ; ret
0x00000200005374f2 : xchg eax, ecx ; mov dl, 0xdc ; call qword ptr [rax]
0x000002000001e75d : xchg eax, ecx ; mov dword ptr [rdx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200006a543f : xchg eax, ecx ; movsd dword ptr [rdi], dword ptr cs:[rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006036b1 : xchg eax, ecx ; nop ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x0000020000035844 : xchg eax, ecx ; or byte ptr [rax], al ; jmp 0x20000035810
0x000002000045696e : xchg eax, ecx ; or byte ptr [rbx], cl ; add byte ptr [rax], al ; ret
0x00000200001dc1be : xchg eax, ecx ; out 0xff, al ; add rsp, 0x28 ; ret
0x00000200004a6519 : xchg eax, ecx ; pop rax ; add al, byte ptr [rax] ; add byte ptr [rdi + 1], dh ; ret
0x0000020000067624 : xchg eax, ecx ; ret
0x00000200003e723d : xchg eax, ecx ; ret 0x19
0x00000200007a8f4c : xchg eax, ecx ; ret 0x41ff
0x0000020000511afe : xchg eax, ecx ; ret 0x48ff
0x000002000051f310 : xchg eax, ecx ; ret 0x8bff
0x00000200006a366b : xchg eax, ecx ; ret 0xff9b
0x00000200007924ff : xchg eax, ecx ; ret 0xffab
0x00000200007ac943 : xchg eax, ecx ; ret 0xffb4
0x000002000048376b : xchg eax, ecx ; ret 0xffbd
0x0000020000557023 : xchg eax, ecx ; ret 0xffda
0x0000020000631e07 : xchg eax, ecx ; ret 0xffec
0x00000200007ada85 : xchg eax, ecx ; ret 1
0x00000200004255a8 : xchg eax, ecx ; ret 6
0x000002000078f04a : xchg eax, ecx ; rol byte ptr [rax], 0 ; add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x0000020000131a5b : xchg eax, ecx ; sbb eax, 0x8a44001f ; ret
0x000002000013fa74 : xchg eax, ecx ; sbb eax, dword ptr [rax] ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000013fa7f : xchg eax, ecx ; sbb eax, dword ptr [rax] ; and dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000021ffff : xchg eax, ecx ; shl cl, cl ; dec dword ptr [rax - 0x75] ; ret
0x00000200000596fb : xchg eax, ecx ; std ; xor al, 0 ; call rax
0x0000020000451282 : xchg eax, ecx ; test al, 7 ; add byte ptr [rax], al ; ret
0x000002000043f326 : xchg eax, ecx ; xchg byte ptr [rsi], dl ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000011099c : xchg eax, ecx ; xor al, 4 ; add byte ptr [rax], al ; sete al ; ret
0x00000200004bd930 : xchg eax, edi ; adc dword ptr [rax], eax ; mov rcx, r14 ; call 0x200000e8069
0x00000200001c013b : xchg eax, edi ; adc eax, dword ptr [rax] ; call r9
0x000002000003088e : xchg eax, edi ; adc eax, dword ptr [rax] ; mov rcx, rdi ; call rbx
0x0000020000494c65 : xchg eax, edi ; adc eax, dword ptr [rax] ; ret
0x00000200004489b1 : xchg eax, edi ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x00000200007039b1 : xchg eax, edi ; add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001fc299 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret
0x0000020000149185 : xchg eax, edi ; add byte ptr [rax], al ; add cl, ch ; mov dl, 0xce ; add byte ptr [rax], al ; ret
0x000002000014b185 : xchg eax, edi ; add dword ptr [rax], eax ; add cl, ch ; mov dl, 0xae ; add byte ptr [rax], al ; ret
0x00000200000038f0 : xchg eax, edi ; and al, 0 ; jmp 0x200000038bb
0x00000200007cbf87 : xchg eax, edi ; call qword ptr [rax - 0x13d2917]
0x000002000049abf3 : xchg eax, edi ; call qword ptr [rax]
0x0000020000710de9 : xchg eax, edi ; cmp eax, 0x8348ffad ; ret
0x00000200004bc069 : xchg eax, edi ; cmpsd dword ptr [rsi], dword ptr [rdi] ; adc dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000476e1a : xchg eax, edi ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4410
0x0000020000476ea9 : xchg eax, edi ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x00000200007caba2 : xchg eax, edi ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x49e9
0x0000020000517b01 : xchg eax, edi ; fdivp st(7) ; add rsp, 0x28 ; ret
0x00000200004445a5 : xchg eax, edi ; jle 0x200004445a5 ; inc dword ptr [rcx + 3] ; ret
0x00000200001acac5 : xchg eax, edi ; loopne 0x200001acace ; add byte ptr [rax], al ; call rax
0x00000200007038aa : xchg eax, edi ; mov ah, 0xff ; add rsp, 0x28 ; ret
0x00000200006014c5 : xchg eax, edi ; mov bl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x00000200006a6814 : xchg eax, edi ; mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x200006a680e
0x0000020000056059 : xchg eax, edi ; mov eax, 0xf6000000 ; ret 0xf07
0x00000200005dd6bd : xchg eax, edi ; mov ebp, 0xa8e990ff ; ret
0x00000200004d1ca9 : xchg eax, edi ; mov esp, 0x3b48ffbc ; ret 0x850f
0x0000020000510a27 : xchg eax, edi ; movdqu xmmword ptr [rbp - 0x11], xmm0 ; call r12
0x00000200005913f0 : xchg eax, edi ; or al, byte ptr [rax] ; add byte ptr [rbx], ch ; ret 0xf823
0x000002000022a0ca : xchg eax, edi ; or eax, 0x8b480000 ; ret
0x0000020000464d79 : xchg eax, edi ; out 0xbe, al ; dec dword ptr [rax + 0x23] ; ret
0x000002000046b4d5 : xchg eax, edi ; outsb dx, byte ptr [rsi] ; adc eax, 0x4eb6e800 ; ret 0xfff
0x00000200005d61f9 : xchg eax, edi ; pop rsp ; ret
0x000002000001b453 : xchg eax, edi ; ret
0x00000200001c4b85 : xchg eax, edi ; ret 0x15
0x000002000019e284 : xchg eax, edi ; ret 0x1539
0x00000200006f37f1 : xchg eax, edi ; ret 0x44ff
0x0000020000443018 : xchg eax, edi ; ret 0x48ff
0x000002000058a262 : xchg eax, edi ; ret 0x55e9
0x00000200007a8ca2 : xchg eax, edi ; ret 0x85ff
0x000002000051ed6d : xchg eax, edi ; ret 0x8bff
0x00000200000f89bc : xchg eax, edi ; ret 0xc28a
0x000002000062d0c4 : xchg eax, edi ; ret 0xccff
0x000002000047491f : xchg eax, edi ; ret 0xf0ff
0x0000020000727aed : xchg eax, edi ; ret 0xffbc
0x00000200005a0d65 : xchg eax, edi ; ret 0xffca
0x00000200005d0441 : xchg eax, edi ; ret 6
0x000002000024ab9c : xchg eax, edi ; rol byte ptr [rip + 0x3b4d0000], 1 ; ret
0x000002000024a54c : xchg eax, edi ; rol byte ptr [rip - 0x74b80000], 1 ; ret 0x2eb
0x00000200000edc99 : xchg eax, edi ; rol dword ptr [rcx - 0x75], -0x3f ; ret
0x000002000009844b : xchg eax, edi ; sldt word ptr [rsp + rax*4 - 0x55] ; ret 0
0x00000200005c8dcd : xchg eax, edi ; sub al, 0xc3 ; call qword ptr [rax - 0x144f3d17]
0x00000200000309b7 : xchg eax, edi ; xchg eax, esi ; adc eax, dword ptr [rax] ; xor eax, eax ; ret
0x00000200005f0d66 : xchg eax, edi ; xor eax, 0xd233fff5 ; call 0x2000024d008
0x00000200001c0596 : xchg eax, edx ; adc eax, dword ptr [rax] ; call rax
0x0000020000672add : xchg eax, edx ; add byte ptr [rax], al ; add al, ch ; ret 0xff99
0x00000200007a7c6c : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x00000200003d2630 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; ret 0xb74
0x000002000050b1d4 : xchg eax, edx ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200004686d7 : xchg eax, edx ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200007040d7 : xchg eax, edx ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000014b0e5 : xchg eax, edx ; add dword ptr [rax], eax ; add cl, ch ; push rdx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000200006eee22 : xchg eax, edx ; call qword ptr [rdx]
0x00000200001b2816 : xchg eax, edx ; call qword ptr [rsi]
0x00000200000fa788 : xchg eax, edx ; cld ; dec dword ptr [rax - 0x75] ; ret
0x00000200005f8e6c : xchg eax, edx ; cmpsb byte ptr [rsi], byte ptr [rdi] ; call qword ptr [rax - 0x9c73d17]
0x000002000002cacc : xchg eax, edx ; cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x0000020000709984 : xchg eax, edx ; dec dword ptr [rax - 0x75] ; ret
0x000002000019ece4 : xchg eax, edx ; dec dword ptr [rbp - 0x75] ; ret
0x00000200001d19f1 : xchg eax, edx ; idiv bh ; add rsp, 0x68 ; ret
0x0000020000622f33 : xchg eax, edx ; je 0x20000622f3c ; je 0x20000622f42 ; inc edx ; jmp 0x20000622f57
0x000002000045f8aa : xchg eax, edx ; jl 0x2000045f882 ; dec dword ptr [rax - 0x75] ; ret
0x000002000059cd19 : xchg eax, edx ; jmp rdi
0x00000200006dc4ea : xchg eax, edx ; lea r8, qword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x200006dc502
0x00000200001496aa : xchg eax, edx ; leave ; add byte ptr [rax], al ; ret
0x000002000014b3aa : xchg eax, edx ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000014b2aa : xchg eax, edx ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000200007aebb1 : xchg eax, edx ; mov al, 1 ; ret
0x00000200001499aa : xchg eax, edx ; mov byte ptr [rax], 0 ; ret
0x0000020000073a3a : xchg eax, edx ; or edi, ebx ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x0000020000065ab4 : xchg eax, edx ; ret
0x0000020000149daa : xchg eax, edx ; ret 0
0x0000020000089dda : xchg eax, edx ; ret 0x2fe8
0x0000020000623d90 : xchg eax, edx ; ret 0x48ff
0x000002000058a23e : xchg eax, edx ; ret 0x79e9
0x000002000049c8fd : xchg eax, edx ; ret 0x8bff
0x000002000062696a : xchg eax, edx ; ret 0xb8ff
0x0000020000041a38 : xchg eax, edx ; ret 0xf48
0x00000200001977ec : xchg eax, edx ; ret 0xf640
0x000002000009e354 : xchg eax, edx ; ret 0xf641
0x000002000010f662 : xchg eax, edx ; ret 0xfff3
0x00000200001cd4e2 : xchg eax, edx ; ret 0xfff6
0x00000200000f8efa : xchg eax, edx ; ret 0xfff7
0x0000020000149faa : xchg eax, edx ; rol byte ptr [rax], 0 ; ret
0x000002000023a0c4 : xchg eax, edx ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x000002000007f307 : xchg eax, edx ; rol dword ptr [rax + 0x77501f9], -1 ; ret
0x0000020000149eaa : xchg eax, edx ; rol dword ptr [rax], 0 ; ret
0x00000200001489aa : xchg eax, edx ; salc ; add byte ptr [rax], al ; ret
0x000002000044683d : xchg eax, edx ; sar edi, -0x75 ; ret
0x00000200006084b0 : xchg eax, edx ; sar edi, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013abf0 : xchg eax, edx ; sbb eax, dword ptr [rax] ; xor eax, eax ; ret
0x000002000014b1aa : xchg eax, edx ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000014b0aa : xchg eax, edx ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000200000bda94 : xchg eax, edx ; shl dword ptr [rsi + 0xf], -0x5d ; ret 0x930f
0x000002000014b5aa : xchg eax, edx ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000002000014b4aa : xchg eax, edx ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x00000200005e0a0c : xchg eax, edx ; stosd dword ptr [rdi], eax ; push rsi ; ret
0x0000020000098d24 : xchg eax, edx ; str word ptr [rbx - 0x74bb50bb] ; ret
0x00000200002080c6 : xchg eax, edx ; verw ax ; ret 0xe6d0
0x00000200001488aa : xchg eax, edx ; xlatb ; add byte ptr [rax], al ; ret
0x0000020000428aa2 : xchg eax, esi ; adc byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200001d690e : xchg eax, esi ; adc dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200001fc4bb : xchg eax, esi ; adc eax, 0xe0058900 ; ret 0x12
0x00000200001c01bd : xchg eax, esi ; adc eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000309b8 : xchg eax, esi ; adc eax, dword ptr [rax] ; xor eax, eax ; ret
0x000002000005d02f : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x3b49
0x000002000047f7b1 : xchg eax, esi ; add byte ptr [rax], al ; add cl, ch ; call qword ptr [rdx]
0x0000020000149165 : xchg eax, esi ; add byte ptr [rax], al ; add cl, ch ; ror dh, cl ; add byte ptr [rax], al ; ret
0x0000020000021961 : xchg eax, esi ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000703ca6 : xchg eax, esi ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000157ada : xchg eax, esi ; add byte ptr [rax], al ; sal byte ptr [rbx], 0xc0 ; ret
0x000002000005a310 : xchg eax, esi ; add eax, 0xc9034900 ; jmp rcx
0x00000200006d6386 : xchg eax, esi ; call rcx
0x00000200001cf4b0 : xchg eax, esi ; clc ; dec dword ptr [rcx - 0x74b65c83] ; ret 0xf49
0x00000200000c5e6b : xchg eax, esi ; cli ; dec dword ptr [rax - 0x75] ; ret
0x0000020000612966 : xchg eax, esi ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000020000678006 : xchg eax, esi ; cwde ; add byte ptr [rax + 0x3b], cl ; ret 0x1076
0x000002000044ac10 : xchg eax, esi ; cwde ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x0000020000176b09 : xchg eax, esi ; cwde ; add byte ptr [rcx + 3], cl ; xor byte ptr [rax + 0x3b], cl ; ret
0x00000200007070d1 : xchg eax, esi ; dec dword ptr [rax - 0x75] ; ret
0x000002000069ccdb : xchg eax, esi ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000797a66 : xchg eax, esi ; dec dword ptr [rcx - 0x75] ; push rdi ; xor byte ptr [rax - 0x7d], cl ; ret 0x4c18
0x0000020000518db3 : xchg eax, esi ; fdivp st(7) ; or byte ptr [r10], dl ; ret
0x0000020000653666 : xchg eax, esi ; fstp dword ptr [rdx - 0x6b74b701] ; ret 0xb440
0x000002000015b986 : xchg eax, esi ; idiv bh ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x000002000016feaf : xchg eax, esi ; in eax, dx ; dec dword ptr [rax - 0x7f] ; ret
0x00000200007baa41 : xchg eax, esi ; inc dword ptr [rbp - 0xf68740] ; ret
0x00000200006a6817 : xchg eax, esi ; inc edx ; jmp 0x200006a680b
0x0000020000198e94 : xchg eax, esi ; int1 ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000198e6d : xchg eax, esi ; int1 ; push rsi ; ret 0x741e
0x0000020000518a63 : xchg eax, esi ; mov ah, 0xff ; add rsp, 0x28 ; ret
0x000002000008f68e : xchg eax, esi ; mov dword ptr [rcx], esi ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x00000200001c47e2 : xchg eax, esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000491dbd : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf11
0x000002000023c5f0 : xchg eax, esi ; push -0x16ffffff ; ret
0x0000020000189b21 : xchg eax, esi ; push -0x9ffffff ; ret 0x7501
0x00000200006eab98 : xchg eax, esi ; push 0x71 ; or cl, byte ptr [rbx] ; mov ch, 0x49 ; ret
0x000002000024780e : xchg eax, esi ; push rax ; add eax, 0xb480000 ; ret 0x8d4c
0x0000020000043b46 : xchg eax, esi ; ret
0x000002000008b8a6 : xchg eax, esi ; ret 0x26
0x000002000052e192 : xchg eax, esi ; ret 0x48ff
0x000002000060ca09 : xchg eax, esi ; ret 0x8944
0x0000020000453a68 : xchg eax, esi ; ret 0x8bff
0x00000200004c5877 : xchg eax, esi ; ret 0xbbff
0x000002000058a1f6 : xchg eax, esi ; ret 0xc1e9
0x00000200006f38a1 : xchg eax, esi ; ret 0xe9ff
0x0000020000727ab8 : xchg eax, esi ; ret 0xffbc
0x000002000020e656 : xchg eax, esi ; ret 0xfff3
0x00000200001cd5da : xchg eax, esi ; ret 0xfff6
0x000002000061da0e : xchg eax, esi ; ret 6
0x000002000055d4ac : xchg eax, esi ; ret 9
0x0000020000246541 : xchg eax, esi ; rol byte ptr [rip + 0x3b4d0000], 1 ; ret
0x00000200002461a5 : xchg eax, esi ; rol byte ptr [rip - 0x74b80000], 1 ; ret 0x2eb
0x00000200002364e6 : xchg eax, esi ; sbb dword ptr [rdi], ecx ; add byte ptr [rbx + 0x440f48cf], cl ; ret 0x8d48
0x000002000017c983 : xchg eax, esi ; xchg dl, bh ; jmp qword ptr [rbx]
0x00000200000243fc : xchg eax, esi ; xor al, 0x14 ; add byte ptr [rbp - 0x74b68b01], al ; ret
0x00000200005d1159 : xchg eax, esp ; adc dword ptr [rax], 0x48005d02 ; add edx, ecx ; jmp rdx
0x00000200000cf1bf : xchg eax, esp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000070268 : xchg eax, esp ; add al, byte ptr [rax] ; add byte ptr [rcx - 9], al ; ret
0x000002000003c057 : xchg eax, esp ; add al, ch ; push rcx ; ret 6
0x0000020000413b53 : xchg eax, esp ; add byte ptr [rax], al ; add bh, dh ; ret
0x00000200005946ee : xchg eax, esp ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffc
0x00000200004dbe71 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7a2f083f], cl ; ret 0x870f
0x0000020000401d3e : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x0000020000149125 : xchg eax, esp ; add byte ptr [rax], al ; add cl, ch ; adc cl, bh ; add byte ptr [rax], al ; ret
0x000002000005e8ed : xchg eax, esp ; add dword ptr [rax], eax ; add bh, bh ; ret
0x000002000044d55e : xchg eax, esp ; and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret 0xfff
0x00000200001a05a9 : xchg eax, esp ; and al, 0x14 ; add dword ptr [rax], eax ; add byte ptr [rax + rcx*4 + 5], al ; ret 0x1538
0x00000200003e37d5 : xchg eax, esp ; and al, 0x30 ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000005d2ae : xchg eax, esp ; and al, 0x70 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200004babf6 : xchg eax, esp ; and al, 0x78 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0xfb30
0x0000020000417314 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000115a32 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x20e8
0x0000020000115b7e : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8348
0x000002000004a556 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x0000020000034c51 : xchg eax, esp ; and al, 0x82 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x894c
0x000002000047c673 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1a72
0x0000020000477e9c : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x8f0f
0x00000200005d6ae4 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 0xc883
0x00000200004b549b : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx + 0x3c], cl ; ret 0x8b44
0x000002000042e9a9 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret 0x4488
0x0000020000553dc7 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4428
0x0000020000230ad7 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x6349
0x0000020000018656 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000020000105506 : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200000fb973 : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000018918a : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200000b84ef : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x4975
0x00000200000b86ef : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x000002000016fdbe : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200000b3cf5 : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200005946ec : xchg eax, esp ; and al, 0x94 ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffc
0x00000200003e8057 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200003e7e93 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x2a73
0x0000020000418c4a : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200006b4c07 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x00000200003c64b6 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x00000200001aeafb : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000066a502 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0x0000020000663f10 : xchg eax, esp ; and al, 0x9c ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffe
0x000002000018917e : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 4], cl ; ret 0x8b48
0x0000020000511860 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000010f2bd : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add bh, bh ; ret 0x8348
0x000002000003a0fa : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x000002000003a125 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000003a142 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x000002000003a15f : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000002000003a17f : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x000002000003a19f : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x000002000004ee4a : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200004b2559 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200003fdff7 : xchg eax, esp ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200004c4b7d : xchg eax, esp ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000096021 : xchg eax, esp ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xc22b
0x000002000068cd6c : xchg eax, esp ; and al, 0xb8 ; add byte ptr [rax], al ; add bh, bh ; ret 0xbfe8
0x000002000054481c : xchg eax, esp ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004cc4fa : xchg eax, esp ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xb0
0x00000200004b2803 : xchg eax, esp ; and al, 0xc8 ; add byte ptr [rax], al ; add al, ch ; ret 0xffc9
0x00000200000c0792 : xchg eax, esp ; and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000424697 : xchg eax, esp ; and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x3948
0x0000020000594bba : xchg eax, esp ; and al, 0xcc ; add dword ptr [rax], eax ; add bh, dh ; ret 0xfff8
0x000002000068d474 : xchg eax, esp ; and al, 0xd8 ; add byte ptr [rax], al ; add bh, bh ; ret 0xb7e8
0x00000200000591a7 : xchg eax, esp ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret 0
0x000002000004ea3e : xchg eax, esp ; and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x00000200004d6090 : xchg eax, esp ; and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000146594 : xchg eax, esp ; and byte ptr [rax - 1], cl ; ret 0x4c89
0x0000020000610186 : xchg eax, esp ; cmc ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000004d38 : xchg eax, esp ; cmp cl, byte ptr [rcx] ; add byte ptr [rbx], bh ; ret 0x874
0x00000200003e26f9 : xchg eax, esp ; fcom dword ptr [rax - 0x9fffffd] ; ret 0xf01
0x00000200006bbc65 : xchg eax, esp ; inc dword ptr [rbp + 0x33] ; fild dword ptr [rbp - 0x75] ; ret
0x00000200000edbe8 : xchg eax, esp ; jmp 0x200001a8bbe
0x00000200004ad2c8 : xchg eax, esp ; lodsd eax, dword ptr [rsi] ; ret
0x0000020000413bd3 : xchg eax, esp ; mov byte ptr [rax + 0x49004131], cl ; add edx, eax ; jmp rdx
0x000002000018b408 : xchg eax, esp ; mov dl, cl ; movsb byte ptr [rdi], byte ptr [rsi] ; sbb byte ptr [rax], al ; add rdx, r8 ; jmp rdx
0x00000200001abd48 : xchg eax, esp ; mov ecx, 0x8b48fff7 ; ret
0x00000200006bbec5 : xchg eax, esp ; mov edi, 0x25f748d6 ; jno 0x200006bbe9f ; ret
0x00000200006bbf82 : xchg eax, esp ; mov edi, 0x25f748d6 ; mov ah, 0xc9 ; ret
0x00000200000717df : xchg eax, esp ; or al, 0 ; add rsp, 0x38 ; ret
0x000002000067f3f0 : xchg eax, esp ; or al, 0 ; call 0x2000001b6dd
0x0000020000405041 : xchg eax, esp ; or eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret
0x00000200001cc46f : xchg eax, esp ; pop rsi ; adc eax, 0x940f0100 ; ret 0x5188
0x00000200000724e2 : xchg eax, esp ; push 0x11 ; add byte ptr [rcx - 0x75], al ; ret
0x000002000000c651 : xchg eax, esp ; ret
0x0000020000458287 : xchg eax, esp ; ret 0x1188
0x00000200005aed82 : xchg eax, esp ; ret 0x1389
0x00000200003fd0bc : xchg eax, esp ; ret 0x1789
0x0000020000070635 : xchg eax, esp ; ret 0x1a8
0x00000200005357a5 : xchg eax, esp ; ret 0x2a8
0x0000020000032d65 : xchg eax, esp ; ret 0x2b49
0x00000200005d1c48 : xchg eax, esp ; ret 0x31e8
0x000002000024f732 : xchg eax, esp ; ret 0x3345
0x000002000053d7a9 : xchg eax, esp ; ret 0x349
0x00000200006f5feb : xchg eax, esp ; ret 0x40ff
0x0000020000532b27 : xchg eax, esp ; ret 0x42e8
0x00000200007caba8 : xchg eax, esp ; ret 0x49e9
0x00000200000770c3 : xchg eax, esp ; ret 0x4a8
0x00000200001cc475 : xchg eax, esp ; ret 0x5188
0x00000200007c753e : xchg eax, esp ; ret 0x6020
0x0000020000230ade : xchg eax, esp ; ret 0x6349
0x000002000024d576 : xchg eax, esp ; ret 0x634d
0x00000200001eaf8e : xchg eax, esp ; ret 0x8444
0x0000020000593be5 : xchg eax, esp ; ret 0x8598
0x000002000042ebf1 : xchg eax, esp ; ret 0x85ff
0x0000020000033b9e : xchg eax, esp ; ret 0x8944
0x0000020000225cfa : xchg eax, esp ; ret 0x8a41
0x0000020000230635 : xchg eax, esp ; ret 0x8b41
0x00000200004c0aa4 : xchg eax, esp ; ret 0x8b44
0x000002000068a974 : xchg eax, esp ; ret 0x8b48
0x00000200006bba6c : xchg eax, esp ; ret 0x8b49
0x000002000051f2a3 : xchg eax, esp ; ret 0x8bff
0x00000200003ea96a : xchg eax, esp ; ret 0x8d48
0x000002000007be20 : xchg eax, esp ; ret 0x8d49
0x00000200004ffd2a : xchg eax, esp ; ret 0x8d4c
0x000002000007a239 : xchg eax, esp ; ret 0x90e8
0x000002000045136e : xchg eax, esp ; ret 0x93e8
0x000002000024f19b : xchg eax, esp ; ret 0x95c0
0x000002000007a197 : xchg eax, esp ; ret 0x96e8
0x000002000070b253 : xchg eax, esp ; ret 0x9ee8
0x000002000065366c : xchg eax, esp ; ret 0xb440
0x000002000018a0a6 : xchg eax, esp ; ret 0xb60f
0x000002000021f6f4 : xchg eax, esp ; ret 0xba0f
0x00000200001d28f5 : xchg eax, esp ; ret 0xc28b
0x00000200005baf2f : xchg eax, esp ; ret 0xc933
0x00000200001d2b2b : xchg eax, esp ; ret 0xc985
0x00000200005aff2b : xchg eax, esp ; ret 0xca32
0x00000200005aff3d : xchg eax, esp ; ret 0xd202
0x000002000023ccea : xchg eax, esp ; ret 0xd285
0x00000200001d023e : xchg eax, esp ; ret 0xdfeb
0x000002000046af1a : xchg eax, esp ; ret 0xf41
0x00000200000c1257 : xchg eax, esp ; ret 0xf641
0x00000200004bf9fe : xchg eax, esp ; ret 0xf66
0x00000200005b2bb2 : xchg eax, esp ; ret 0xff41
0x0000020000465b28 : xchg eax, esp ; ret 0xffbf
0x0000020000550d68 : xchg eax, esp ; ret 0xffcf
0x00000200003db5e8 : xchg eax, esp ; ret 0xffd7
0x0000020000189c24 : xchg eax, esp ; ret 0xffee
0x000002000052e113 : xchg eax, esp ; ret 0xfff
0x000002000010eb32 : xchg eax, esp ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200005ee0de : xchg eax, esp ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x000002000001053b : xchg eax, esp ; rol byte ptr [rsp + rax*4 - 0x40], 0x74 ; ret 0x8b4d
0x0000020000558fab : xchg eax, esp ; rol dword ptr [rcx - 0x75], -0x3f ; ret
0x0000020000057cd2 : xchg eax, esp ; ror byte ptr [rax - 0x2d], 0xe8 ; and rax, r8 ; ret
0x00000200001fb942 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x00000200001b3e6e : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rcx + 0x5e], al ; ret
0x000002000003c363 : xchg eax, esp ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x0000020000482814 : xchg eax, esp ; ror dword ptr [rdi], -0x4a ; ret
0x0000020000460307 : xchg eax, esp ; sar bh, 0x8b ; ret
0x000002000013f6a1 : xchg eax, esp ; sbb eax, dword ptr [rax] ; sete al ; ret
0x000002000007a231 : xchg eax, esp ; shl byte ptr [rsi + 0x44], 0x39 ; adc cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x90e8
0x00000200005901fe : xchg eax, esp ; shr cl, 0x66 ; mov edi, fs ; dec dword ptr [rax - 0x7d] ; ret 0x4858
0x000002000079f2ea : xchg eax, esp ; stc ; cmp byte ptr [rdx + 0x33480026], ch ; ret 0xb948
0x00000200007c53e0 : xchg eax, esp ; std ; dec dword ptr [rax - 0x75] ; ret 0x3b48
0x00000200007c53b5 : xchg eax, esp ; std ; dec dword ptr [rcx - 0x75] ; ret
0x000002000048447e : xchg eax, esp ; sub byte ptr [rsp + rsi + 0x3490048], 0xd0 ; jmp rdx
0x00000200004884f8 : xchg eax, esp ; xlatb ; xor byte ptr [rcx - 0x7cb7ffc6], cl ; ret 0xe84c
0x00000200006145fb : xchg eax, r12d ; ret
0x00000200004438bd : xchg eax, r14d ; ret
0x0000020000510a26 : xchg eax, r15d ; movdqu xmmword ptr [rbp - 0x11], xmm0 ; call r12
0x00000200004ae659 : xchg eax, r15d ; ret
0x000002000009844a : xchg eax, r15d ; sldt word ptr [rsp + rax*4 - 0x55] ; ret 0
0x00000200004604f7 : xchg eax, r9d ; ret
0x00000200004a8905 : xchg ebp, eax ; ret
0x0000020000609e3d : xchg ebp, ebp ; jmp rsi
0x00000200004c2de7 : xchg ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x00000200004d0d8d : xchg ebx, edi ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x0000020000412136 : xchg ebx, esp ; add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], cl ; ret
0x0000020000782f52 : xchg ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret
0x0000020000544b7a : xchg ecx, eax ; ret 0xa
0x000002000061f675 : xchg ecx, ebx ; ret 0xfff
0x00000200001f5652 : xchg ecx, edi ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200005b5316 : xchg ecx, edx ; enter -0xa, -0x75 ; rol byte ptr [rbp - 0x75], 1 ; ret 0x1b9
0x00000200004b664d : xchg ecx, edx ; out 0x11, eax ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000619785 : xchg edi, eax ; ret
0x0000020000798e72 : xchg edi, edi ; add rsp, 0xb8 ; ret
0x00000200007ad425 : xchg edi, edi ; ret 0x8948
0x00000200007ad440 : xchg edi, edi ; ret 0xc748
0x0000020000065aae : xchg edi, edx ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x0000020000462d07 : xchg edi, esi ; loope 0x20000462d27 ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200004bebac : xchg edx, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000c097b : xchg edx, ecx ; mov ecx, 0x8b49000d ; ret 0x8b48
0x0000020000105e79 : xchg esi, ebp ; ret
0x00000200000d694b : xchg esi, ebp ; ret 0xc
0x00000200005fc4f2 : xchg esi, esi ; dec dword ptr [rax - 1] ; ret 0x8349
0x00000200003df191 : xchg esi, esi ; ret 0x48ff
0x00000200001af61a : xchg esi, esp ; add dword ptr [rax], eax ; add bl, ch ; ret
0x00000200000318e5 : xchg esi, esp ; mov dword ptr [rbx], edx ; add byte ptr [rbp + 0x3b], cl ; ret
0x0000020000789e5a : xchg esp, ecx ; add eax, 0x8b480000 ; ret 0x8b4c
0x00000200005250c7 : xchg qword ptr [r11 + 0x2fa0e8d8], r9 ; ret 0x85ff
0x000002000007afb7 : xchg qword ptr [r8], rdx ; test rdx, rdx ; jne 0x2000007afc8 ; ret
0x00000200006aa3ad : xchg qword ptr [r9], rcx ; mov qword ptr [rdx], rax ; mov rax, rcx ; ret
0x000002000053f9ca : xchg qword ptr [rax + rcx*8 + 0x58], r8 ; mov eax, r9d ; ret
0x0000020000445784 : xchg qword ptr [rcx + 0x1c8], rdx ; ret
0x0000020000041e85 : xchg qword ptr [rcx], rax ; ret
0x00000200003c6a18 : xchg qword ptr [rdx + 8], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006549cf : xchg qword ptr [rdx + r8*8], rcx ; mov eax, r9d ; ret
0x00000200001d3545 : xchg qword ptr [rip + 0x1d4b6c], rcx ; ret
0x00000200005695dc : xchg qword ptr [rip + 0x1debcd], rcx ; ret
0x000002000011617b : xchg qword ptr [rip + 0x1dfab6], rax ; ret
0x000002000000ff01 : xchg qword ptr [rip + 0x2f6a78], rcx ; ret
0x00000200005695e4 : xchg qword ptr [rip - 0x2294fb], rcx ; ret
0x000002000013abef : xchg rax, r10 ; sbb eax, dword ptr [rax] ; xor eax, eax ; ret
0x0000020000428aa1 : xchg rax, r14 ; adc byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200007baa40 : xchg rax, r14 ; inc dword ptr [rbp - 0xf68740] ; ret
0x000002000049abf2 : xchg rax, r15 ; call qword ptr [rax]
0x0000020000631b24 : xchg rax, rcx ; mov al, 0xff ; add rsp, 0x58 ; ret
0x000002000013fa7e : xchg rax, rcx ; sbb eax, dword ptr [rax] ; and dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000146593 : xchg rax, rsp ; and byte ptr [rax - 1], cl ; ret 0x4c89
0x0000020000065aaf : xlatb ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x0000020000149985 : xlatb ; add byte ptr [rax], al ; add cl, ch ; mov dl, 0xc6 ; add byte ptr [rax], al ; ret
0x00000200000dc4b3 : xlatb ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000014884b : xlatb ; add byte ptr [rax], al ; ret
0x00000200002117d7 : xlatb ; add byte ptr [rax], al ; shl eax, 0xa ; add eax, ecx ; ret
0x000002000046d54a : xlatb ; add dword ptr [rax], eax ; add rsp, 0x58 ; ret
0x00000200003d9a2a : xlatb ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004955aa : xlatb ; add rsp, 0x28 ; ret
0x00000200005b01f0 : xlatb ; call 0x2000001b878
0x000002000042ddc5 : xlatb ; call 0x200000564a4
0x00000200005e0a09 : xlatb ; call 0x20000099cf7
0x00000200001cd604 : xlatb ; call 0x20000139877
0x000002000054a669 : xlatb ; call 0x20000148078
0x000002000054a668 : xlatb ; call 0x20000148079
0x0000020000537040 : xlatb ; call 0x20000157544
0x0000020000616e07 : xlatb ; call 0x200001b861b
0x00000200001f4080 : xlatb ; call 0x200001f02c3
0x000002000062ad04 : xlatb ; call 0x2000024da44
0x00000200007d0e47 : xlatb ; call 0x200003f7bc0
0x00000200007cd1d1 : xlatb ; call 0x200003f8b58
0x000002000043a925 : xlatb ; call 0x2000f85a929
0x00000200004e33ec : xlatb ; call qword ptr [rax]
0x0000020000588b66 : xlatb ; call qword ptr [rbx]
0x0000020000085e15 : xlatb ; call rax
0x000002000070b4b8 : xlatb ; call rdi
0x00000200003d8d5a : xlatb ; dec dword ptr [rax - 0x7f] ; ret
0x00000200005b3b94 : xlatb ; dec dword ptr [rbp + rcx*4 + 0x15] ; ret
0x00000200005b3b8d : xlatb ; dec dword ptr [rbp + rcx*4 + 0xd] ; ret 0xd70b
0x00000200003db55b : xlatb ; dec esp ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000157a3e : xlatb ; fcomp dword ptr [rax + rax] ; ret
0x00000200007d5041 : xlatb ; idiv edi ; mov edx, 0xffc6c6c6 ; call qword ptr [rax]
0x000002000019a530 : xlatb ; int1 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000402a43 : xlatb ; jmp rdx
0x0000020000513ea1 : xlatb ; lea rcx, qword ptr [rbp - 0x11] ; call 0x2000013ba78
0x0000020000546776 : xlatb ; lea rcx, qword ptr [rbp - 9] ; call r12
0x0000020000512499 : xlatb ; lea rcx, qword ptr [rdi + 8] ; call 0x2000013d1b8
0x0000020000194e12 : xlatb ; lock dec dword ptr [rbx - 0x9bebfc0] ; ret 0xf04
0x00000200001a613f : xlatb ; mov bl, 0xf3 ; inc dword ptr [rbp + 0x32] ; dec dword ptr [rax - 0x39] ; ret
0x00000200007bcd64 : xlatb ; mov bl, 0xff ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000463822 : xlatb ; mov cl, 1 ; call 0x20000092126
0x0000020000007ae5 : xlatb ; mov cl, byte ptr [rbx] ; add byte ptr [rbx], bh ; ret
0x00000200007080c3 : xlatb ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, rsi ; call r12
0x000002000003e15a : xlatb ; mov eax, r8d ; ret
0x00000200007cd1cd : xlatb ; mov qword ptr [rbp - 0x29], r14 ; call 0x200003f8b5c
0x000002000043c5f8 : xlatb ; mov qword ptr [rsp + 0x20], rax ; call 0x20000069b09
0x0000020000510aa8 : xlatb ; mov qword ptr [rsp + 0x20], rax ; call r12
0x00000200003e2dc5 : xlatb ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000047a1d8 : xlatb ; mov rcx, qword ptr [rbp + 0x60] ; call 0x2000042641b
0x000002000070e38c : xlatb ; mov rcx, qword ptr [rsi + 8] ; call rax
0x00000200001a7950 : xlatb ; mov rcx, r10 ; call 0x20000063bc6
0x0000020000144b21 : xlatb ; mov rcx, r11 ; call r8
0x000002000047a266 : xlatb ; mov rcx, r12 ; call 0x20000426522
0x000002000013c3aa : xlatb ; mov rcx, r12 ; call r14
0x0000020000707f40 : xlatb ; mov rcx, r12 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x00000200006f3fe1 : xlatb ; mov rcx, r14 ; call 0x20000010272
0x00000200003fb272 : xlatb ; mov rcx, r14 ; call 0x20000157546
0x00000200005f4937 : xlatb ; mov rcx, r14 ; call rax
0x000002000070f8d1 : xlatb ; mov rcx, r14 ; mov dword ptr [rsp + 0x20], ebp ; call rax
0x00000200005f498f : xlatb ; mov rcx, r15 ; call rax
0x00000200003df18c : xlatb ; mov rcx, rax ; call 0x2000000e823
0x0000020000530aa5 : xlatb ; mov rcx, rax ; call 0x20000157547
0x00000200001cf7d8 : xlatb ; mov rcx, rbp ; call 0x2000013ba76
0x0000020000410b67 : xlatb ; mov rcx, rbp ; call r15
0x00000200001dbef3 : xlatb ; mov rcx, rbp ; call rax
0x0000020000594faf : xlatb ; mov rcx, rbx ; call 0x20000091216
0x0000020000538eb7 : xlatb ; mov rcx, rbx ; call qword ptr [rax]
0x00000200001b9c60 : xlatb ; mov rcx, rbx ; call r10
0x00000200003fc10d : xlatb ; mov rcx, rbx ; call r14
0x000002000070f5e7 : xlatb ; mov rcx, rbx ; call rax
0x00000200000f2034 : xlatb ; mov rcx, rsi ; call 0x2000004e32e
0x00000200004c4b88 : xlatb ; mov rcx, rsi ; call 0x200000f13af
0x00000200005f49ca : xlatb ; mov rcx, rsi ; call r10
0x000002000013c3ea : xlatb ; mov rcx, rsi ; call r14
0x0000020000707dde : xlatb ; mov rcx, rsi ; mov rbp, rax ; call rbx
0x00000200001cd651 : xlatb ; mov rsi, rcx ; mov r14d, ebx ; call 0x2000013987d
0x00000200006c5d2d : xlatb ; movzx ecx, bx ; call rax
0x0000020000451ed6 : xlatb ; or bh, bh ; ret 0xc1ff
0x0000020000007c26 : xlatb ; or eax, 0x4801b000 ; add esp, 0x28 ; ret
0x0000020000049229 : xlatb ; or eax, 0xffffffff ; ret
0x00000200001cbd95 : xlatb ; out dx, al ; idiv bh ; add rsp, 0x58 ; ret
0x0000020000197c89 : xlatb ; pop rsi ; int1 ; dec dword ptr [rcx - 0x75] ; ret 0x3b4c
0x00000200006663b3 : xlatb ; popfq ; dec dword ptr [rax - 0x7f] ; ret
0x000002000079bcf5 : xlatb ; push rdi ; ret
0x00000200000478cf : xlatb ; ret
0x0000020000491041 : xlatb ; ret 0x13
0x0000020000515c95 : xlatb ; ret 0x48ff
0x0000020000713176 : xlatb ; ret 0xbaff
0x0000020000662c55 : xlatb ; ret 0xffa8
0x00000200003fb9dc : xlatb ; sar bh, 0x8b ; ret
0x000002000062281f : xlatb ; shl edx, 0xc ; or r8d, edx ; jmp 0x20000622846
0x00000200001cd5d4 : xlatb ; shl rdx, 3 ; call 0x2000013987b
0x0000020000220bbd : xlatb ; test rdx, rdx ; cmovne rax, rdx ; jmp 0x20000220c0a
0x00000200001dc1bd : xlatb ; xchg eax, ecx ; out 0xff, al ; add rsp, 0x28 ; ret
0x00000200004884f9 : xlatb ; xor byte ptr [rcx - 0x7cb7ffc6], cl ; ret 0xe84c
0x00000200001b8865 : xlatb ; xor ebp, dword ptr [rax] ; add bl, ch ; ret
0x000002000014800a : xor ah, al ; add byte ptr [rax], al ; ret
0x000002000070715a : xor ah, al ; xchg eax, esi ; dec dword ptr [rax - 0x75] ; ret
0x000002000045f95a : xor ah, bh ; ret
0x0000020000463cb4 : xor ah, bh ; ret 0x85ff
0x0000020000147f0a : xor ah, cl ; add byte ptr [rax], al ; ret
0x00000200004588d0 : xor al, 0 ; add al, al ; jmp 0x2000045889d
0x0000020000009a10 : xor al, 0 ; add al, al ; ret
0x0000020000114a75 : xor al, 0 ; add byte ptr [rax], al ; ret
0x0000020000065d4e : xor al, 0 ; add dword ptr [rdi], ecx ; test ecx, esp ; call qword ptr [rcx]
0x000002000007a61c : xor al, 0 ; add rsp, 0x28 ; ret
0x00000200000596af : xor al, 0 ; call rax
0x00000200001f23f6 : xor al, 0x13 ; add bh, bh ; ret 0x8d48
0x00000200000393d2 : xor al, 0x13 ; add byte ptr [rcx - 0x75], al ; ret 0xd9eb
0x00000200000243ba : xor al, 0x14 ; add byte ptr [rbp + 0x33], al ; fcomi st(6) ; ret 0x751e
0x00000200000243fd : xor al, 0x14 ; add byte ptr [rbp - 0x74b68b01], al ; ret
0x0000020000131eec : xor al, 0x1f ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200006f6a90 : xor al, 0x2a ; ret 0x48ff
0x0000020000075ea8 : xor al, 0x2b ; ret
0x00000200005c343b : xor al, 0x33 ; ror byte ptr [rcx - 0x75], cl ; ret 0xf748
0x00000200006f5f11 : xor al, 0x36 ; ret 0x45ff
0x0000020000729398 : xor al, 0x3b ; ret 0x2675
0x00000200006a1151 : xor al, 0x3b ; ret 0x830f
0x00000200004850d9 : xor al, 0x41 ; mov edx, edx ; mov rcx, rsi ; call rax
0x0000020000465f14 : xor al, 0x44 ; ret
0x0000020000485308 : xor al, 0x45 ; mov eax, edx ; mov rdx, rsi ; mov ecx, ebx ; call rax
0x00000200007293c7 : xor al, 0x48 ; add esp, 0x28 ; ret
0x00000200005137a6 : xor al, 0x48 ; mov dword ptr [rcx + 0x38], eax ; mov qword ptr [rcx + 0x40], r10 ; ret
0x000002000070f0c8 : xor al, 0x49 ; wait ; dec dword ptr [rax - 0x75] ; ret
0x0000020000123658 : xor al, 0x5e ; sub byte ptr [rax], al ; call rax
0x00000200001dc550 : xor al, 0x62 ; adc dword ptr [rax], eax ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200001763c8 : xor al, 0x6c ; or eax, 0xf0e99000 ; ret
0x0000020000431905 : xor al, 0x74 ; or al, 0xff ; ret 0x3b41
0x000002000054958e : xor al, 0x81 ; ret
0x0000020000679a44 : xor al, 0x83 ; ret
0x00000200000404c1 : xor al, 0x83 ; ret 0x65fe
0x00000200006be80d : xor al, 0x85 ; fisttp dword ptr [rcx - 0x75] ; ret
0x0000020000582466 : xor al, 0x85 ; sal byte ptr [rax + rsi - 0x75], cl ; ret 0xc148
0x00000200004154d9 : xor al, 0x88 ; fisttp qword ptr [r9 - 0x75] ; ret
0x00000200001788b4 : xor al, 0x8b ; ret
0x0000020000648f7f : xor al, 0x8b ; ret 0x2b41
0x00000200005262e3 : xor al, 0x8b ; ret 0x6b48
0x0000020000434309 : xor al, 0x8b ; ret 0x8b48
0x0000020000582cd2 : xor al, 0x8b ; ret 0xffb9
0x0000020000699552 : xor al, 0x9d ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x0000020000600f38 : xor al, 0x9d ; mov bl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000120738 : xor al, 0xa5 ; add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x00000200004aa808 : xor al, 0xab ; ret
0x00000200007994cf : xor al, 0xb6 ; inc edi ; ret
0x0000020000056f24 : xor al, 0xb9 ; adc al, byte ptr [rax] ; xor al, al ; ret
0x0000020000041c1c : xor al, 0xc ; add al, 0 ; add rcx, rdx ; jmp rcx
0x000002000015abfb : xor al, 0xc ; add rsp, 0x30 ; pop rbp ; ret
0x00000200005dd620 : xor al, 0xc8 ; jmp 0x200004d990a
0x00000200000ccab9 : xor al, 0xd ; add byte ptr [rbp - 0x75], cl ; ret 0xb70f
0x000002000052e3fe : xor al, 0xdd ; inc dword ptr [rcx + 3] ; ret
0x00000200003db5e6 : xor al, 0xe8 ; xchg eax, esp ; ret 0xffd7
0x00000200001f5484 : xor al, 0xec ; inc dword ptr [rbp - 0x74ba8a40] ; ret 0x43eb
0x00000200005d0f75 : xor al, 0xed ; dec dword ptr [rax - 0x75] ; ret
0x000002000022251a : xor al, 0xf ; test byte ptr [rdi - 0x73000000], bh ; jmp qword ptr [r11]
0x000002000019bf1b : xor al, 0xf2 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000136b1d : xor al, 0xf6 ; ret 0x7401
0x0000020000249322 : xor al, 0xf6 ; ret 0x7402
0x000002000065d764 : xor al, 0xf6 ; ret 0x7403
0x00000200005341b0 : xor al, 0xf6 ; ret 0xf08
0x00000200004b3c93 : xor al, 0xf6 ; ret 0xf10
0x00000200000bca70 : xor al, 0xf6 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200001b4268 : xor al, 0xf7 ; ret 0x820
0x00000200004826bc : xor al, 0xf7 ; ret 1
0x00000200005302d9 : xor al, 0xfa ; add cl, byte ptr [rax + 0x3b] ; ret
0x00000200006f87fb : xor al, 0xfc ; ret 0x4c1f
0x00000200000c04bf : xor al, 0xff ; ret
0x00000200007043d7 : xor al, 1 ; add dh, dh ; ret
0x000002000054fcab : xor al, 1 ; pop rdi ; sbb al, 0x8b ; sbb byte ptr [r11], r15b ; ret
0x000002000007a3f2 : xor al, 3 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000011099d : xor al, 4 ; add byte ptr [rax], al ; sete al ; ret
0x0000020000595250 : xor al, 8 ; call 0x200491bde5b
0x0000020000149c0a : xor al, ah ; add byte ptr [rax], al ; ret
0x000002000014a00a : xor al, al ; add byte ptr [rax], al ; ret
0x0000020000026fd8 : xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001cac81 : xor al, al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000094e5 : xor al, al ; add rsp, 0x28 ; ret
0x00000200001c149f : xor al, al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000067abda : xor al, al ; add rsp, 0x38 ; ret
0x00000200004b32ae : xor al, al ; add rsp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000d513e : xor al, al ; add rsp, 0x70 ; pop rbx ; ret
0x00000200003f8f14 : xor al, al ; add rsp, 8 ; ret
0x00000200001696d5 : xor al, al ; and al, 1 ; xor byte ptr [rcx + 0x22], al ; ret
0x000002000013ccc6 : xor al, al ; mov byte ptr [rcx + rdx], al ; mov rax, r11 ; ret
0x0000020000622f58 : xor al, al ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x00000200002303dc : xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000040937f : xor al, al ; pop r14 ; pop rsi ; ret
0x00000200000035cd : xor al, al ; ret
0x000002000014990a : xor al, bh ; add byte ptr [rax], al ; ret
0x0000020000149d0a : xor al, bl ; add byte ptr [rax], al ; ret
0x00000200005af236 : xor al, bl ; dec dword ptr [rax - 0x75] ; ret
0x00000200003eb5dc : xor al, bpl ; popfq ; ret 0xffd6
0x000002000062c3fc : xor al, byte ptr [rax] ; add al, al ; ret
0x00000200001c4ee5 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x000002000069e40e : xor al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200005ac192 : xor al, byte ptr [rax] ; ret
0x00000200001b9abc : xor al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000059a57 : xor al, byte ptr [rbp - 0x75] ; ret 0x8b48
0x000002000014bb82 : xor al, byte ptr [rbx + 0x300ffce0] ; ret
0x000002000014ba1b : xor al, byte ptr [rbx + 0xb41fce0] ; ror byte ptr [rdi], 0x30 ; ret
0x00000200000eb5c5 : xor al, byte ptr [rbx + rbx*8 - 0x74b3c18b] ; ret 0xf641
0x000002000043a8fb : xor al, byte ptr [rcx + 0x474150fa] ; je 0x2000043a90e ; ret
0x00000200000039fc : xor al, byte ptr [rcx - 0x75] ; add byte ptr [rax - 0x7d], cl ; ret 0xf08
0x0000020000715f4d : xor al, byte ptr [rcx - 1] ; enter -0x74b5, -0x74 ; ret 0x8068
0x0000020000559024 : xor al, byte ptr [rcx] ; add bl, ch ; ret
0x000002000043609d : xor al, byte ptr [rdi] ; add byte ptr [rbp - 0x75e68740], al ; ret
0x00000200000fefea : xor al, byte ptr [rdi] ; idiv edi ; add rsp, 0x48 ; ret
0x00000200000417c3 : xor al, byte ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000200004ee289 : xor al, byte ptr [rdx] ; add byte ptr [rax], al ; setne al ; ret
0x00000200001315dd : xor al, byte ptr [rdx] ; call 0x200004fd885
0x000002000070dc62 : xor al, ch ; add al, 0 ; add rsp, 0x38 ; ret
0x0000020000149b0a : xor al, ch ; add byte ptr [rax], al ; ret
0x00000200004f3238 : xor al, ch ; add byte ptr ds:[rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200001ef2cb : xor al, ch ; call rbx
0x000002000064833f : xor al, ch ; call rdx
0x00000200001c3c58 : xor al, ch ; cli ; or byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005e8749 : xor al, ch ; cmc ; xor eax, 0xe990ffe7 ; ret
0x00000200004af274 : xor al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000200007d1761 : xor al, ch ; imul edi, dword ptr [rbx], 0xb60fff8b ; ret
0x00000200003fff26 : xor al, ch ; in al, -0x5a ; sar bh, 0x8b ; ret
0x00000200004ae6a8 : xor al, ch ; jb 0x200004ae720 ; ret
0x00000200004afc9c : xor al, ch ; jle 0x200004afcfe ; ret
0x00000200006fedbf : xor al, ch ; jmp rbx
0x000002000051f092 : xor al, ch ; js 0x2000051f047 ; ret 0x8bff
0x00000200006b69b2 : xor al, ch ; mov cx, 0x8bff ; ret
0x00000200004af7d4 : xor al, ch ; mov dh, 0x56 ; ret
0x000002000017a69a : xor al, ch ; mov eax, 0x8b00049e ; ret
0x00000200005db5d5 : xor al, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffb7
0x00000200003eb5dd : xor al, ch ; popfq ; ret 0xffd6
0x00000200007bb058 : xor al, ch ; push rsi ; ret 0xffda
0x000002000007fdfb : xor al, ch ; ret
0x00000200001030a8 : xor al, ch ; ret 0x2cd3
0x0000020000705a88 : xor al, ch ; ret 0x9e6e
0x000002000053f200 : xor al, ch ; ret 0xaf83
0x00000200005f3d28 : xor al, ch ; ret 0xb55a
0x0000020000487e78 : xor al, ch ; ret 0xc5d4
0x00000200003fc2ac : xor al, ch ; ret 8
0x0000020000519650 : xor al, ch ; sbb ch, dl ; ret 0x44ff
0x00000200004af00e : xor al, ch ; sub al, 0x63 ; ret
0x000002000044683a : xor al, ch ; xchg eax, edx ; sar edi, -0x75 ; ret
0x0000020000149f0a : xor al, cl ; add byte ptr [rax], al ; ret
0x000002000002c7b8 : xor al, cl ; and al, 1 ; xor byte ptr [rdx + 0x22], al ; ret
0x0000020000149a0a : xor al, dh ; add byte ptr [rax], al ; ret
0x0000020000149e0a : xor al, dl ; add byte ptr [rax], al ; ret
0x0000020000094f8c : xor al, dl ; str word ptr [rax - 0x75] ; ret 0xc2f6
0x00000200004ae6a7 : xor al, r13b ; jb 0x200004ae721 ; ret
0x00000200005e4aae : xor al, r13b ; ret
0x00000200004af00d : xor al, r13b ; sub al, 0x63 ; ret
0x00000200001696d4 : xor al, r8b ; and al, 1 ; xor byte ptr [rcx + 0x22], al ; ret
0x000002000022a2d5 : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 0x2b] ; ret 0x8d49
0x0000020000582ddb : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000191c37 : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x00000200000cc9b4 : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200003c73f1 : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; sbb ebp, eax ; jrcxz 0x200003c73c6 ; ret
0x00000200006c7a2d : xor bh, 0xff ; dec dword ptr [rax - 1] ; ret
0x000002000001d9ae : xor bh, 0xff ; dec dword ptr [rcx - 0x75] ; pop rbp ; add dh, dh ; ret
0x0000020000010092 : xor bh, 0xff ; dec dword ptr [rcx - 0x75] ; ret
0x000002000003b207 : xor bh, 0xff ; dec dword ptr [rcx - 0x75fe4cf9] ; ret
0x0000020000185018 : xor bh, 0xff ; inc dword ptr [rbx] ; ret 0x8189
0x000002000000f9d1 : xor bh, 0xff ; inc dword ptr [rcx - 0x7c] ; ret
0x00000200001d217b : xor bh, 0xff ; jmp qword ptr [rcx]
0x00000200005139c2 : xor bh, 0xff ; push rax ; inc dword ptr [rax] ; ret
0x000002000007e457 : xor bh, 0xff ; push rsi ; ret
0x000002000070d55c : xor bh, al ; add al, 0 ; add rsp, 0x38 ; ret
0x00000200001c38cf : xor bh, bh ; ret
0x00000200004012e6 : xor bh, bh ; ret 0x3b41
0x00000200001fd20d : xor bh, bh ; ret 0x533b
0x000002000015d081 : xor bh, bh ; ret 0x5589
0x0000020000424725 : xor bh, bh ; ret 0x8349
0x00000200001e20f4 : xor bh, bh ; ret 0xc28b
0x00000200000d1fe8 : xor bh, bh ; ret 0xf41
0x0000020000724e6e : xor bh, bh ; ret 0xff48
0x000002000044588a : xor bh, byte ptr [rbx - 0x13] ; dec dword ptr [rax - 0x75] ; ret 0x83c3
0x00000200001cb0d6 : xor bh, byte ptr [rbx] ; ret 0x2074
0x0000020000506e3a : xor bh, byte ptr [rsi] ; ret
0x0000020000117099 : xor bh, dh ; jmp 0x1fffad341ac
0x00000200000403d2 : xor bh, dh ; ret
0x000002000014840a : xor bl, ah ; add byte ptr [rax], al ; ret
0x000002000014880a : xor bl, al ; add byte ptr [rax], al ; ret
0x000002000014810a : xor bl, bh ; add byte ptr [rax], al ; ret
0x000002000014850a : xor bl, bl ; add byte ptr [rax], al ; ret
0x00000200006720b3 : xor bl, bl ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004e5ee3 : xor bl, ch ; adc al, 0xf6 ; ret
0x000002000014830a : xor bl, ch ; add byte ptr [rax], al ; ret
0x000002000020774e : xor bl, ch ; ret
0x00000200005bfb66 : xor bl, ch ; ret 0xb8cc
0x00000200003efd4e : xor bl, ch ; sbb al, ch ; ret 0x2c74
0x00000200003fae1e : xor bl, ch ; sbb ch, al ; ret
0x000002000014870a : xor bl, cl ; add byte ptr [rax], al ; ret
0x000002000014820a : xor bl, dh ; add byte ptr [rax], al ; ret
0x000002000014860a : xor bl, dl ; add byte ptr [rax], al ; ret
0x00000200004afc5e : xor byte ptr [r10 + 0x5229e801], sil ; ret
0x00000200004afb69 : xor byte ptr [r10 + 0x531ee801], sil ; ret
0x00000200000df6e5 : xor byte ptr [r11], cl ; ret 0x4123
0x00000200007829a0 : xor byte ptr [r11], r8b ; ret 0x3b41
0x00000200001d60d5 : xor byte ptr [r13 + 0x1b], sil ; mov byte ptr [rbx + 0x38], 2 ; call r8
0x0000020000432bae : xor byte ptr [r13 + 7], sil ; ret
0x000002000001f9d6 : xor byte ptr [r13 - 0x12], sil ; mov al, 1 ; ret
0x0000020000433869 : xor byte ptr [r13 - 0x76], al ; ret 0xc141
0x00000200004c5db8 : xor byte ptr [r14 - 1], r12b ; ret
0x00000200001e00dc : xor byte ptr [r15], cl ; xchg eax, ebp ; ret 0xc233
0x0000020000453d5c : xor byte ptr [r8 + 0x2b], cl ; ret
0x00000200007158f2 : xor byte ptr [r8 + 0x2b], r9b ; ret 0xd148
0x000002000014e9b0 : xor byte ptr [r8 + 0xf], cl ; ret
0x000002000013af5c : xor byte ptr [r8 - 0x73], r9b ; ror byte ptr [r13 - 0x75], 1 ; ret
0x000002000023a189 : xor byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x00000200004eadeb : xor byte ptr [r8 - 0x75], r9b ; ret
0x0000020000216489 : xor byte ptr [r8 - 0x7d], cl ; jmp 0x1ffc407d99b
0x00000200006b0de8 : xor byte ptr [r8 - 0x7d], cl ; ret
0x0000020000524eec : xor byte ptr [r8 - 0x7d], cl ; ret 0xb90e
0x00000200001ca024 : xor byte ptr [r8], al ; add byte ptr [rax], al ; or byte ptr [rdx + rax - 2], dh ; ret 0xf48
0x000002000012952d : xor byte ptr [r8], cl ; add bh, bh ; ret 0x8348
0x000002000069f580 : xor byte ptr [r9 - 0x75], al ; ret 0x8341
0x000002000007bb2b : xor byte ptr [r9], al ; ret
0x0000020000151aec : xor byte ptr [rax + 0x28c48348], dl ; ret
0x0000020000238138 : xor byte ptr [rax + 0x2b], cl ; push rbx ; sub byte ptr [rax - 1], cl ; ret 0x488b
0x000002000013f0ed : xor byte ptr [rax + 0x2b], cl ; ret
0x00000200007158f3 : xor byte ptr [rax + 0x2b], cl ; ret 0xd148
0x00000200001d6084 : xor byte ptr [rax + 0x3b], cl ; fbstp dword ptr [rdx + rsi*2 - 0xa] ; ret
0x0000020000176b0f : xor byte ptr [rax + 0x3b], cl ; ret
0x0000020000041fe0 : xor byte ptr [rax + 0x63], cl ; ret
0x000002000016f6d4 : xor byte ptr [rax + 0x69], cl ; rol dword ptr [rax], 0x46 ; ret
0x0000020000710050 : xor byte ptr [rax + 0xb], cl ; ret 0xf48
0x000002000014e9b1 : xor byte ptr [rax + 0xf], cl ; ret
0x000002000024a52e : xor byte ptr [rax + 3], cl ; ret
0x000002000020b93a : xor byte ptr [rax + rax], al ; add bl, al ; xor eax, eax ; ret
0x000002000043b123 : xor byte ptr [rax + rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200003e37d7 : xor byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000013131e : xor byte ptr [rax + rax], al ; add byte ptr [rcx - 0x7c], al ; ret
0x000002000018fbe0 : xor byte ptr [rax + rcx*4 - 0x55], al ; ret 0
0x00000200007a4fb8 : xor byte ptr [rax - 0x3f], cl ; call 0x1ffc39d98d3
0x00000200004816d3 : xor byte ptr [rax - 0x3f], cl ; call 0x1ffc3d35b01
0x00000200004d54a0 : xor byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200001e4e3f : xor byte ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200007d13d0 : xor byte ptr [rax - 0x73], cl ; and al, 0x50 ; call r12
0x00000200000a49a5 : xor byte ptr [rax - 0x73], cl ; call 0x20000070bc7
0x000002000007fdf7 : xor byte ptr [rax - 0x73], cl ; push rbp ; xor al, ch ; ret
0x000002000053f1fc : xor byte ptr [rax - 0x73], cl ; push rdi ; xor al, ch ; ret 0xaf83
0x000002000013af5d : xor byte ptr [rax - 0x73], cl ; ror byte ptr [r13 - 0x75], 1 ; ret
0x000002000053f1fb : xor byte ptr [rax - 0x73], r9b ; push rdi ; xor al, ch ; ret 0xaf83
0x00000200003e7983 : xor byte ptr [rax - 0x75], cl ; and al, 0x48 ; call 0x20000007c51
0x000002000054a324 : xor byte ptr [rax - 0x75], cl ; fsubr st(0) ; ret
0x000002000040abf4 : xor byte ptr [rax - 0x75], cl ; int 0xe8
0x000002000008f4ff : xor byte ptr [rax - 0x75], cl ; iretd ; call rsi
0x00000200004d1665 : xor byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x75], cl ; ret 0xff25
0x000002000042ccdd : xor byte ptr [rax - 0x75], cl ; ret
0x000002000023a18a : xor byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000008fedc : xor byte ptr [rax - 0x75], cl ; ret 0x48f0
0x000002000059f735 : xor byte ptr [rax - 0x75], cl ; ret 0x4cf0
0x0000020000215b10 : xor byte ptr [rax - 0x75], cl ; ret 0x8348
0x0000020000400d84 : xor byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000015873 : xor byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000054173b : xor byte ptr [rax - 0x75], cl ; ret 0xba41
0x00000200001dad54 : xor byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200003d0dc4 : xor byte ptr [rax - 0x75], cl ; retf ; call 0x2000024d006
0x00000200007b93b3 : xor byte ptr [rax - 0x75], cl ; retf ; lea rdx, qword ptr [rsp + 0x38] ; call rax
0x000002000045faf9 : xor byte ptr [rax - 0x75], cl ; stc ; xor ecx, ecx ; call 0x2000008e15d
0x000002000016dafd : xor byte ptr [rax - 0x77], cl ; and al, 0x30 ; call r8
0x00000200007ba846 : xor byte ptr [rax - 0x77], cl ; jl 0x200007ba878 ; and al, ch ; sti ; ret
0x0000020000607dc9 : xor byte ptr [rax - 0x77], cl ; or r14b, r14b ; ret
0x00000200001cb56c : xor byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x38 ; call r9
0x00000200001357b9 : xor byte ptr [rax - 0x77], cl ; sbb byte ptr [r13 + 0x3b], cl ; ret
0x00000200001d20de : xor byte ptr [rax - 0x7b], cl ; leave ; je 0x200001d20f6 ; mov dword ptr [rcx], r10d ; ret
0x00000200000fa83d : xor byte ptr [rax - 0x7b], cl ; leave ; jne 0x200000fa84f ; mov rax, rdx ; ret
0x00000200000fa83d : xor byte ptr [rax - 0x7b], cl ; leave ; jne 0x200000fa850 ; mov rax, rdx ; ret
0x00000200001af6a9 : xor byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rbx + 0x48], 0x3b ; ret
0x000002000070f5cb : xor byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rcx + 0x48], 0x8b ; retf ; call rax
0x00000200007063ee : xor byte ptr [rax - 0x7d], cl ; cmp byte ptr [rax], al ; jne 0x200007063e8 ; xor al, al ; ret
0x000002000021648a : xor byte ptr [rax - 0x7d], cl ; jmp 0x1ffc407d99a
0x0000020000084b40 : xor byte ptr [rax - 0x7d], cl ; ret
0x0000020000214f3b : xor byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000047c150 : xor byte ptr [rax - 0x7d], cl ; ret 0x4818
0x00000200005dbee4 : xor byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200001a5fe7 : xor byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000200006caf59 : xor byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x0000020000797a6b : xor byte ptr [rax - 0x7d], cl ; ret 0x4c18
0x000002000079e528 : xor byte ptr [rax - 0x7d], cl ; ret 0x4cf8
0x000002000079748f : xor byte ptr [rax - 0x7d], cl ; ret 0x4d20
0x0000020000524eed : xor byte ptr [rax - 0x7d], cl ; ret 0xb90e
0x000002000062fcc3 : xor byte ptr [rax - 0x7d], cl ; ret 0xe838
0x00000200005352a1 : xor byte ptr [rax - 0x7d], cl ; rol byte ptr [rdx], 0x48 ; add esp, 0x28 ; ret
0x00000200004ab94a : xor byte ptr [rax - 0x7d], cl ; sar dword ptr [rax], -0x18 ; cmp al, 0x95 ; ret
0x00000200003ceb6a : xor byte ptr [rax - 0x7f], cl ; ret 0xfff
0x00000200000f169e : xor byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x0000020000619211 : xor byte ptr [rax - 1], cl ; ret
0x00000200006c81d3 : xor byte ptr [rax - 1], cl ; ret 0x8948
0x0000020000619210 : xor byte ptr [rax - 1], r9b ; ret
0x000002000020b939 : xor byte ptr [rax], 4 ; add byte ptr [rax], al ; ret
0x000002000004464b : xor byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x000002000046da8e : xor byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000000eda0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200001ca025 : xor byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rdx + rax - 2], dh ; ret 0xf48
0x00000200000072f0 : xor byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000024188 : xor byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x000002000068d773 : xor byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xf799
0x0000020000451f5e : xor byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x00000200006e861b : xor byte ptr [rax], al ; add byte ptr [rsi + 0x23], ah ; ret
0x000002000002bf83 : xor byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000018b8d : xor byte ptr [rax], al ; cmp rcx, rax ; jae 0x20000018ba0 ; xor eax, eax ; ret
0x0000020000018bc3 : xor byte ptr [rax], al ; jae 0x20000018b9d ; mov eax, 1 ; ret
0x000002000001a9db : xor byte ptr [rax], al ; jmp 0x2000001a96d
0x000002000001a9da : xor byte ptr [rax], al ; jmp 0x2000001a96e
0x000002000015b467 : xor byte ptr [rax], al ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000015c83 : xor byte ptr [rax], al ; ret
0x000002000045f70f : xor byte ptr [rax], al ; ret 0x700
0x000002000012952e : xor byte ptr [rax], cl ; add bh, bh ; ret 0x8348
0x00000200000bda22 : xor byte ptr [rbp + 0x13], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200000a0d63 : xor byte ptr [rbp + 0x1a], 0x8b ; ret
0x00000200001d60d6 : xor byte ptr [rbp + 0x1b], dh ; mov byte ptr [rbx + 0x38], 2 ; call r8
0x0000020000077af4 : xor byte ptr [rbp + 0x23], al ; ret
0x00000200001f2f5f : xor byte ptr [rbp + 0x2b], cl ; ret 0x2b4c
0x000002000060c699 : xor byte ptr [rbp + 0x33], al ; shr al, 0xee ; ret
0x00000200000400dd : xor byte ptr [rbp + 0x3b], cl ; ret 0x894c
0x000002000011d06f : xor byte ptr [rbp + 0x48f178c0], al ; mov eax, edx ; ret
0x000002000000a603 : xor byte ptr [rbp + 0x48f478c0], al ; mov eax, edx ; ret
0x0000020000006fc2 : xor byte ptr [rbp + 0xb], 0x83 ; call qword ptr [rax]
0x00000200004467c9 : xor byte ptr [rbp + 3], al ; ret 0x8b44
0x000002000052dbb8 : xor byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000432baf : xor byte ptr [rbp + 7], dh ; ret
0x000002000007ee35 : xor byte ptr [rbp + rcx*4 + 0x3d], cl ; ret
0x00000200001a26d5 : xor byte ptr [rbp + rcx*4 + 0x46], al ; or esi, esi ; ret 0x7402
0x00000200005db5d0 : xor byte ptr [rbp + rcx*4 + 0x7c], cl ; and al, 0x30 ; call 0x20000157888
0x00000200006e2395 : xor byte ptr [rbp + rcx*4 + 5], cl ; ret
0x0000020000602449 : xor byte ptr [rbp + rdi - 1], dh ; ret
0x000002000001f9d7 : xor byte ptr [rbp - 0x12], dh ; mov al, 1 ; ret
0x0000020000207829 : xor byte ptr [rbp - 0x142a8a25], al ; add bh, bh ; ret
0x000002000071e021 : xor byte ptr [rbp - 0x74d3862e], al ; ret 0xba0f
0x0000020000729391 : xor byte ptr [rbp - 0x74d78b2e], al ; xor al, 0x3b ; ret 0x2675
0x000002000021ebb5 : xor byte ptr [rbp - 0x75], al ; ret 0x41c7
0x000002000043085f : xor byte ptr [rbp - 0x75], al ; ret 0x8b49
0x00000200003e93fd : xor byte ptr [rbp - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0x8b45
0x0000020000002953 : xor byte ptr [rbp - 0x75], cl ; ret
0x00000200003f38af : xor byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000043386a : xor byte ptr [rbp - 0x76], al ; ret 0xc141
0x00000200006a3623 : xor byte ptr [rbp - 0x76], al ; std ; call 0x2000005f906
0x0000020000514331 : xor byte ptr [rbp - 0x7b], al ; sal byte ptr [rax + rcx*2 + 0x44], 0x3b ; ret 0x820f
0x0000020000051ecc : xor byte ptr [rbp - 0x7cb70004], ch ; ret
0x00000200004cdcdc : xor byte ptr [rbp - 0x7cb70013], dh ; ret
0x000002000060e910 : xor byte ptr [rbp - 0x99000b], ch ; ret
0x00000200007d3ac2 : xor byte ptr [rbx + 0x3480843], cl ; ret
0x00000200007d3ac1 : xor byte ptr [rbx + 0x3480843], r9b ; ret
0x000002000071b85f : xor byte ptr [rbx + 0x49], bl ; jmp rax
0x000002000052ddd1 : xor byte ptr [rbx + 0x49], bl ; jmp rdx
0x000002000016097c : xor byte ptr [rbx + 0x8c86], cl ; add byte ptr [rbx], bh ; ret 0x470f
0x00000200000442eb : xor byte ptr [rbx + rax + 0x33], 0xc0 ; ret
0x0000020000580d56 : xor byte ptr [rbx + rax - 0x7d], dh ; ret
0x00000200004a5201 : xor byte ptr [rbx + rax*2 + 0x349004a], 0xc8 ; jmp rcx
0x00000200005afb3e : xor byte ptr [rbx + rbx*8 - 0x7cb7fb8b], al ; ret 0xe810
0x00000200003e7dc6 : xor byte ptr [rbx + rcx*4 - 0x16], cl ; call 0x20000008823
0x0000020000027c08 : xor byte ptr [rbx + rdi - 0x40], al ; jne 0x20000027bd9 ; ret
0x000002000003fbd4 : xor byte ptr [rbx - 0x3574ffc6], 0x8b ; ret 0xe183
0x00000200004968c5 : xor byte ptr [rbx - 0x3d], bl ; cmp dword ptr [rcx], 0 ; sete al ; ret
0x0000020000624815 : xor byte ptr [rbx - 0x7424cc01], dh ; ret
0x000002000004ea4f : xor byte ptr [rbx - 0x80], al ; adc byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000200003d3919 : xor byte ptr [rbx - 0x9bbdbbc], cl ; ret 0xf10
0x00000200007829a1 : xor byte ptr [rbx], al ; ret 0x3b41
0x000002000024a400 : xor byte ptr [rbx], al ; ret 0x833b
0x0000020000483d4a : xor byte ptr [rbx], bh ; ret 0x840f
0x00000200004029db : xor byte ptr [rbx], bh ; ror byte ptr [rdi], 1 ; ret 0x854d
0x000002000047c55c : xor byte ptr [rbx], bl ; ret 0x48ff
0x00000200007797da : xor byte ptr [rbx], ch ; ret
0x00000200000df6e6 : xor byte ptr [rbx], cl ; ret 0x4123
0x00000200001245ca : xor byte ptr [rbx], dh ; dec dword ptr [rax - 0x75] ; fincstp ; ret 0xfffc
0x000002000022d999 : xor byte ptr [rbx], dh ; rol byte ptr [rcx - 0x77], 9 ; ret
0x00000200006a2c79 : xor byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x200000eef38
0x000002000046273f : xor byte ptr [rbx], dh ; ror byte ptr [rbx + 0x1213e8c8], cl ; ret
0x000002000042a5ed : xor byte ptr [rbx], dh ; shr al, cl ; sbb ebx, edx ; ret 0x85ff
0x00000200000be797 : xor byte ptr [rbx], dh ; test byte ptr [rbx - 0x2674b706], 0xf7 ; ret 0xfffc
0x000002000001c247 : xor byte ptr [rbx], dh ; test byte ptr [rbx - 0x2674b716], 0xf7 ; ret 0xfffc
0x000002000024a3ff : xor byte ptr [rbx], r8b ; ret 0x833b
0x000002000022d998 : xor byte ptr [rbx], sil ; rol byte ptr [rcx - 0x77], 9 ; ret
0x000002000065479b : xor byte ptr [rcx + 0x1b801], cl ; add byte ptr [rax], al ; ret
0x00000200001b3bb9 : xor byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x00000200001696d9 : xor byte ptr [rcx + 0x22], al ; ret
0x0000020000077b0f : xor byte ptr [rcx + 0x23], al ; ret
0x00000200001d26fc : xor byte ptr [rcx + 0x2b], al ; ret
0x000002000077979c : xor byte ptr [rcx + 0x33], al ; or dword ptr [rcx - 0x7d], ecx ; ret
0x0000020000548ea2 : xor byte ptr [rcx + 0x3b], al ; ret 0x1073
0x0000020000211c5c : xor byte ptr [rcx + 0x3b], cl ; ret
0x0000020000656d6f : xor byte ptr [rcx + 0x41202444], cl ; call rdx
0x00000200001011ad : xor byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000003066e : xor byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x00000200000fcf9d : xor byte ptr [rcx + 0x5e], al ; pop r12 ; ret
0x00000200006f6f51 : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000050be17 : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200007d2d8b : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; ret
0x00000200004e0f30 : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004707da : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; ret
0x00000200000441b6 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200000ac419 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbx ; ret
0x00000200003c8589 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rcx ; ret
0x0000020000015e56 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000462661 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000089ab : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x000002000009bed1 : xor byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x0000020000409324 : xor byte ptr [rcx + 0x5e], al ; pop rsi ; ret
0x000002000000e5b1 : xor byte ptr [rcx + 0x5e], al ; ret
0x00000200006a0c6b : xor byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000011372d : xor byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; ret
0x00000200000e9552 : xor byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x0000020000441b84 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000000ad8b : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000008a4fb : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x000002000000c07b : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x000002000004f02f : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000a6ef6 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000010e1f7 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; ret
0x000002000007b7f6 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x0000020000056a7f : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000010c51 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000093c0f : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000009660 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x000002000003768c : xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x000002000006f013 : xor byte ptr [rcx + 0x5f], al ; pop rdi ; pop rbp ; ret
0x0000020000013002 : xor byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; ret
0x000002000041f709 : xor byte ptr [rcx + 0x5f], al ; pop rsi ; pop rbx ; ret
0x0000020000090442 : xor byte ptr [rcx + 0x5f], al ; ret
0x0000020000160f6c : xor byte ptr [rcx + 0xa], bh ; call rax
0x0000020000160f49 : xor byte ptr [rcx + 0xd], bh ; call rax
0x0000020000214f72 : xor byte ptr [rcx + 0xf], al ; mov bh, 0x44 ; ret 0x410c
0x00000200005bbec7 : xor byte ptr [rcx + 0xf], al ; mov dh, 0x81 ; ret
0x000002000020c3c5 : xor byte ptr [rcx + 0xf], al ; mov dh, 0xc0 ; mov cr8, rax ; ret
0x000002000060a168 : xor byte ptr [rcx + 3], cl ; ror byte ptr [rax - 0x77], 0x42 ; ret
0x0000020000118ef1 : xor byte ptr [rcx + rcx*4 + 0x10], cl ; ret
0x00000200001d8508 : xor byte ptr [rcx + rcx*4 + 0x11], cl ; ret
0x000002000002e4f2 : xor byte ptr [rcx + rcx*4 + 0x51], cl ; jo 0x2000002e4e9 ; ret 0x8b44
0x000002000002e4f1 : xor byte ptr [rcx + rcx*4 + 0x51], cl ; jo 0x2000002e4ea ; ret 0x8b44
0x0000020000638db2 : xor byte ptr [rcx + rcx*4 + 0x64], cl ; and al, 0x20 ; call 0x20000644fe4
0x000002000009583c : xor byte ptr [rcx + rcx*4 + 0xf], cl ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010f8e7 : xor byte ptr [rcx - 0x3f], cl ; enter 0x491d, -0x7d ; ret 0x4820
0x0000020000457103 : xor byte ptr [rcx - 0x41], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20000543351
0x0000020000101071 : xor byte ptr [rcx - 0x48f0ffc6], dl ; ret
0x0000020000655079 : xor byte ptr [rcx - 0x7487dba4], cl ; ret
0x00000200004d32f2 : xor byte ptr [rcx - 0x74b6ffc6], cl ; pop rax ; and dh, dh ; ret
0x000002000001715a : xor byte ptr [rcx - 0x75], al ; ret
0x000002000042e3da : xor byte ptr [rcx - 0x75], al ; ret 0x4489
0x000002000069f581 : xor byte ptr [rcx - 0x75], al ; ret 0x8341
0x0000020000518912 : xor byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000008da49 : xor byte ptr [rcx - 0x75], al ; ret 0xc025
0x00000200000028bc : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000290b ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000005b1c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000005b6b ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000000ec57 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000eca5 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000027cb6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000027d05 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000002d70e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000002d75c ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200000328ae : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000328fc ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000003836a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000383b8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000003a921 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000003a96f ; pop rdi ; pop rdi ; pop rsi ; ret
0x000002000003c849 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000003c898 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000003e372 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000003e3c0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000004db45 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000004db93 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200000794b1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000794ff ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000008d4f4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000008d542 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200000f5557 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f55a5 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000f8e3a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f8e88 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000108ead : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000108efc ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000010d541 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010d590 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000010eaf9 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010eb48 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000110c02 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000110c51 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001129b5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000112a04 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000011ae6e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011aebc ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011c47b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011c4c9 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001217d1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000121820 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000012307b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001230c9 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000012fcf0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012fd3f ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000137314 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000137363 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000013abd8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013ac26 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001b6be0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b6c2f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001b9bde : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b9c2c ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001bc37e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bc3cd ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001bca94 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bcae3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001bd847 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bd896 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001be183 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001be1d2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001be812 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001be861 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001bf3e1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bf42f ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001c0c6c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c0cbb ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001c278c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c27da ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001c5fbb : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c600a ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001e36b1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e36ff ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001ec287 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ec2d5 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001f1857 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001f18a6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001f54e2 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001f5531 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001fa7b0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fa7ff ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001fc355 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fc3a3 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001fc989 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fc9d8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001fe86f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fe8bd ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000205592 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200002055e0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000206813 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000206861 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000209123 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000209171 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000020b05b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020b0aa ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000020c8ba : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020c908 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000021f22b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000021f27a ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000021fab6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000021fb05 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200002251d8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000225226 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000022b800 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000022b84f ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000238ca4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000238cf3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003cc519 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003cc568 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003cc80b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003cc859 ; pop rdi ; pop rdi ; pop rsi ; ret
0x00000200003cdf19 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003cdf68 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003ce0ac : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ce0fa ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200003cee04 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003cee52 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003d8b04 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003d8b52 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003d9ecc : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003d9f1b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003dae05 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003dae54 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003dbeea : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003dbf39 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003dcb21 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003dcb70 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003ec4e1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ec52f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003eca90 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ecadf ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003f0aa6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f0af5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003f228c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f22db ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003f4d00 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f4d4f ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200003f72cb : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f731a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003f97a6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f97f5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003fa82d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fa87c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003ff1c7 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ff216 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000402d69 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000402db8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004041c4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000404213 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000040e30c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040e35a ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000420796 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004207e5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000432473 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004324c2 ; pop rdi ; pop r14 ; pop rsi ; ret
0x00000200004335e0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043362f ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000043ff64 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043ffb3 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000044278d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004427dc ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000443bb7 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000443c06 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000449d5d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000449dab ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000044c908 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044c956 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000045141b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000451469 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000045307e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004530cc ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000045512f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045517d ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000455361 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004553af ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000045adb6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045ae05 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000045be08 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045be57 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000460091 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004600e0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000046526f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004652bd ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004661b2 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000466200 ; pop rdi ; pop rdi ; pop rsi ; ret
0x000002000046ff4e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046ff9c ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000497b5f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000497bae ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000049b368 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049b3b7 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000049fea8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049fef6 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004b18cb : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004b1919 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004ded7d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004dedcc ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004edcbb : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004edd09 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004f7472 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f74c1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004fa01a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fa068 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004fa12d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fa17b ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000508fc0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050900f ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000512f80 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000512fce ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000514232 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000514281 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000051a044 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051a093 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000051ce33 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051ce81 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000051dac4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051db12 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000051e3b7 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051e406 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000520a26 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000520a75 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000526cc3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000526d12 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000052f2bd : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052f30b ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000052f826 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052f874 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000531735 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000531784 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000053378a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005337d9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000053399d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005339ec ; pop rsi ; pop r12 ; pop rbp ; ret
0x0000020000534b52 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000534ba1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000053ab27 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053ab75 ; pop rdi ; pop rdi ; pop rsi ; ret
0x000002000053b88d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053b8db ; pop rbp ; pop rdi ; pop rbp ; ret
0x000002000053c6cf : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053c71e ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000053fdbd : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053fe0c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000054a168 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054a1b7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000552f2c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000552f7b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005530bc : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055310b ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000553544 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000553592 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000055a1d3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055a222 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000055a535 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055a583 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000055ad89 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055add7 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000055bf13 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000055bf62 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005608a9 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005608f8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000056364b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000056369a ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000566c5f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000566cae ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005f6007 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f6056 ; pop rsi ; pop r12 ; pop rbp ; ret
0x0000020000601cd8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000601d27 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000605d08 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000605d57 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000060a75a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060a7a8 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006171c8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000617216 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000617b4c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000617b9b ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000061abf3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061ac42 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000061f6ea : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061f739 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000628411 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000628460 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006288df : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062892e ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000062d5a1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062d5ef ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000630d3a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000630d89 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000063620d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063625c ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000636311 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000636360 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000063674e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063679d ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000639411 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063945f ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000064164c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064169b ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200006488a8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006488f7 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200006491c6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000649215 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064ad51 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064ada0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064ba80 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064bacf ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006535db : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000653629 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006560f0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065613f ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000065e41e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065e46d ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000066a1cf : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066a21d ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000066d15f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066d1ad ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000066d3ce : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066d41d ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000679aff : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000679b4d ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000067a5e6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067a635 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000683ace : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000683b1d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006851ce : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068521c ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000068b2ef : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068b33e ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000690b09 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000690b57 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006983cc : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069841b ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000698ca2 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000698cf1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000069e38e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069e3dd ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000069eee9 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069ef37 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000069fc59 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069fca8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006a4c9d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006a4cec ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006a7676 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006a76c4 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006a8f4b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006a8f99 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006adb9d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006adbec ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006aff07 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006aff56 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006b0b5c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006b0bab ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006b0cbc : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006b0d0b ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200006b7ec2 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006b7f11 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006b8d47 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006b8d96 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006bde3e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006bde8d ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006c3c0e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c3c5d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006c5b55 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c5ba3 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006c83ce : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c841c ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006d42cb : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006d431a ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006d48b5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006d4904 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200006dc3eb : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006dc43a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006dc6b5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006dc704 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006ddc54 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ddca3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006dde43 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006dde92 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006dfa42 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006dfa91 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006e2483 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006e24d2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006e4eeb : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006e4f3a ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006f4f4c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006f4f9b ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000072965e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007296ad ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000079161d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000079166b ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000792083 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007920d2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007974f5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000797544 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200007989d1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000798a20 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007a64b2 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007a6500 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200007a910a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007a9158 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200007ad805 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007ad853 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007b11a8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b11f7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007b3bd2 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007b3c21 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007bcf66 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007bcfb4 ; pop rsp ; pop rdi ; pop rbp ; ret
0x00000200007bd14c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007bd19a ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007cff01 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007cff50 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200007d485c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007d48aa ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000558d39 : xor byte ptr [rcx - 0x75], cl ; ret 0x348
0x00000200004b58a9 : xor byte ptr [rcx - 0x75], cl ; rol dword ptr [rdi + rcx - 0x49], cl ; ret
0x00000200003d1a23 : xor byte ptr [rcx - 0x76], al ; ret 0xf41
0x000002000013b2d1 : xor byte ptr [rcx - 0x78], al ; adc cl, byte ptr [rcx - 1] ; ret 0xc085
0x00000200004884fa : xor byte ptr [rcx - 0x7cb7ffc6], cl ; ret 0xe84c
0x000002000020b31d : xor byte ptr [rcx - 0x7d], al ; ret
0x0000020000146e73 : xor byte ptr [rcx - 0x7d], cl ; ret
0x00000200006929d6 : xor byte ptr [rcx - 0x7d], cl ; ret 0x4404
0x000002000054972d : xor byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x000002000010f982 : xor byte ptr [rcx - 0x7d], cl ; ret 0x4c08
0x00000200006d65f7 : xor byte ptr [rcx - 0xa], al ; ret
0x0000020000225a15 : xor byte ptr [rcx - 0xa], al ; ret 0x7403
0x00000200003d00b6 : xor byte ptr [rcx - 1], al ; ret
0x0000020000024793 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop r14 ; ret
0x0000020000533d98 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200001b8b8d : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000119283 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200003e17b6 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000047152c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000412b11 : xor byte ptr [rcx], al ; add rax, r8 ; jmp rax
0x00000200004549b7 : xor byte ptr [rcx], al ; je 0x200004549ca ; add rsp, 0x20 ; pop rbx ; ret
0x000002000007bb2c : xor byte ptr [rcx], al ; ret
0x0000020000415938 : xor byte ptr [rcx], cl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000076d9b : xor byte ptr [rcx], dl ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000707d98 : xor byte ptr [rdi + 0x48], bl ; jmp rax
0x000002000015dec3 : xor byte ptr [rdi + 0x5d], bl ; pop rbx ; ret
0x0000020000025242 : xor byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000050b39 : xor byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x000002000071b619 : xor byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001d3c89 : xor byte ptr [rdi + rcx - 0x49], al ; ret 0x8b49
0x0000020000490150 : xor byte ptr [rdi + rcx - 0x4a], al ; ret
0x000002000072bb27 : xor byte ptr [rdi + rcx - 0x51], al ; ret
0x000002000067af87 : xor byte ptr [rdi - 0x17], bl ; ret 0xd
0x000002000044194f : xor byte ptr [rdi - 0x3d], bl ; or dword ptr [rbx], esi ; jmp 0x2000044191f
0x00000200001979f8 : xor byte ptr [rdi - 0xf], dl ; push rsi ; ret
0x000002000071d65e : xor byte ptr [rdi], cl ; mov bh, 0x53 ; or dh, dh ; ret 0x7501
0x00000200001b9c14 : xor byte ptr [rdi], cl ; mov edx, 0x3731ce0 ; mov al, 1 ; ret
0x000002000022716d : xor byte ptr [rdi], cl ; ret 0x8b45
0x00000200000dc765 : xor byte ptr [rdi], cl ; ret 0x9848
0x00000200006a3ff6 : xor byte ptr [rdi], cl ; test byte ptr [rsi - 0x73000000], bh ; jmp qword ptr [rbx]
0x00000200006ac459 : xor byte ptr [rdi], cl ; test dword ptr [rax - 0x9ffffff], edx ; ret 0x7403
0x0000020000508daa : xor byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200001e00dd : xor byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc233
0x000002000002c7bc : xor byte ptr [rdx + 0x22], al ; ret
0x0000020000487e72 : xor byte ptr [rdx + 0x498b4801], dh ; xor al, ch ; ret 0xc5d4
0x0000020000487e71 : xor byte ptr [rdx + 0x498b4801], r14b ; xor al, ch ; ret 0xc5d4
0x00000200004afc5f : xor byte ptr [rdx + 0x5229e801], dh ; ret
0x00000200004afb6a : xor byte ptr [rdx + 0x531ee801], dh ; ret
0x0000020000147cdd : xor byte ptr [rdx + 0x58], bl ; pop rcx ; ret
0x000002000068f0a0 : xor byte ptr [rdx + rcx - 0x48], dh ; add eax, 0xe9800000 ; ret 0
0x0000020000041d74 : xor byte ptr [rdx + rcx - 0x75], 0xc2 ; ret
0x00000200000417c2 : xor byte ptr [rdx], 2 ; add byte ptr [rax], al ; ret
0x00000200001021fa : xor byte ptr [rdx], ah ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000079f420 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000040937e : xor byte ptr [rdx], dh ; rol byte ptr [rcx + 0x5e], 0x5e ; ret
0x000002000000f924 : xor byte ptr [rip + 0x438b4c00], dl ; or byte ptr [rbp + 0x3b], cl ; ret 0x850f
0x000002000001c366 : xor byte ptr [rsi + 0x5d], bl ; pop rbx ; ret
0x0000020000555af1 : xor byte ptr [rsi + 0xb], ah ; ret 0x4166
0x0000020000718edc : xor byte ptr [rsi - 0x74b70001], dh ; ret
0x00000200004c5db9 : xor byte ptr [rsi - 1], ah ; ret
0x0000020000534d80 : xor byte ptr [rsi], al ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000031d2f : xor byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000002000017629f : xor byte ptr [rsi], al ; add byte ptr [rbx - 0x17162f83], cl ; ret 0xfff9
0x0000020000637c7c : xor byte ptr [rsi], cl ; ret 0x48ff
0x00000200006024b8 : xor byte ptr [rsp + rcx - 1], dh ; ret
0x00000200004e9f2f : xor byte ptr [rsp + rcx*2 + 0x48], 0x83 ; ret 0x4428
0x000002000017629e : xor byte ptr cs:[rsi], al ; add byte ptr [rbx - 0x17162f83], cl ; ret 0xfff9
0x0000020000106a47 : xor byte ptr gs:[rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x000002000061a427 : xor ch, al ; adc esi, dword ptr [rsi] ; ret
0x00000200007b3886 : xor ch, byte ptr [rdx - 0x4c] ; call qword ptr [rbx]
0x00000200004bb13c : xor ch, cl ; ret 0xe9ff
0x00000200003db056 : xor cl, 0xff ; add rsp, 0x28 ; ret
0x000002000014940a : xor cl, ah ; add byte ptr [rax], al ; ret
0x000002000014980a : xor cl, al ; add byte ptr [rax], al ; ret
0x00000200005fbef7 : xor cl, al ; mov byte ptr [rip - 0x2d70d2], cl ; ret
0x000002000014910a : xor cl, bh ; add byte ptr [rax], al ; ret
0x000002000014950a : xor cl, bl ; add byte ptr [rax], al ; ret
0x0000020000592f4b : xor cl, byte ptr [rax + 0x3b] ; ret 0x850f
0x000002000003032b : xor cl, byte ptr [rax + 0x3b] ; ret 0x8676
0x0000020000693825 : xor cl, byte ptr [rax + 3] ; ret 0x4eb
0x00000200007c7674 : xor cl, byte ptr [rax - 0x39] ; ret 0x9a
0x0000020000150e9d : xor cl, byte ptr [rax - 0x3f] ; loop 0x20000150ec9 ; or rax, rdx ; pop rdi ; ret
0x0000020000150e9d : xor cl, byte ptr [rax - 0x3f] ; loop 0x20000150ecb ; or rax, rdx ; pop rdi ; ret
0x00000200001dbd4e : xor cl, byte ptr [rax - 0x3f] ; loop 0x200001dbd7a ; or rax, rdx ; ret
0x00000200001dbd4e : xor cl, byte ptr [rax - 0x3f] ; loop 0x200001dbd7b ; or rax, rdx ; ret
0x0000020000547ab0 : xor cl, byte ptr [rax - 0x73] ; sub byte ptr [r9 + 0x3b], cl ; ret
0x0000020000604c7e : xor cl, byte ptr [rax - 0x75] ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200004d8503 : xor cl, byte ptr [rax - 1] ; ret 0x8948
0x000002000013cd6e : xor cl, byte ptr [rax - 1] ; ret 0xff49
0x00000200001ee459 : xor cl, byte ptr [rbp + 0x23] ; ret
0x000002000077fbe2 : xor cl, byte ptr [rbx - 0x74b6dbb5] ; ret
0x00000200000f7830 : xor cl, byte ptr [rbx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004df05f : xor cl, byte ptr [rcx + 0x3b] ; ret
0x00000200001e0b31 : xor cl, byte ptr [rcx - 0x73] ; dec dword ptr [rax - 0x7b] ; ret
0x000002000013e319 : xor cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x000002000004530e : xor cl, byte ptr [rdi] ; sub al, 0 ; add rsp, 0x28 ; ret
0x0000020000551ef7 : xor cl, byte ptr [rdx] ; add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000200004b722a : xor cl, byte ptr [rsi] ; ret
0x000002000014930a : xor cl, ch ; add byte ptr [rax], al ; ret
0x00000200004c15b4 : xor cl, ch ; int 0xfe
0x00000200005bd146 : xor cl, ch ; pop rcx ; ret 0xffe9
0x00000200004af8c7 : xor cl, ch ; ret
0x00000200006e2a35 : xor cl, ch ; ret 0
0x000002000014970a : xor cl, cl ; add byte ptr [rax], al ; ret
0x00000200004f6904 : xor cl, cl ; mov al, cl ; ret
0x000002000066d4df : xor cl, cl ; mov al, r9b ; ret
0x000002000014920a : xor cl, dh ; add byte ptr [rax], al ; ret
0x000002000014960a : xor cl, dl ; add byte ptr [rax], al ; ret
0x00000200001f3cf5 : xor dh, 0xff ; dec dword ptr [rax + 0x3b] ; ret 0x820f
0x00000200000c12b8 : xor dh, 0xff ; dec dword ptr [rax + 3] ; ret 0xc148
0x0000020000432153 : xor dh, 0xff ; dec dword ptr [rax - 0x75] ; add dword ptr [rcx - 0x7c], eax ; ret 0x1774
0x00000200000afd29 : xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x000002000004e8d9 : xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x348
0x00000200000f10d7 : xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x349
0x0000020000070c49 : xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x3b48
0x0000020000102e90 : xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x6483
0x0000020000024643 : xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x8b44
0x0000020000011a13 : xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x8b4c
0x000002000008f8ad : xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0x8d4c
0x000002000009f804 : xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0xb849
0x0000020000038e85 : xor dh, 0xff ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x000002000079ffcc : xor dh, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000200007acde2 : xor dh, 0xff ; dec dword ptr [rbx + rcx*4 + 0x35] ; ret
0x00000200000390cd : xor dh, 0xff ; dec dword ptr [rcx + 0x2b] ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200000a5bb4 : xor dh, 0xff ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000049d0c : xor dh, 0xff ; dec dword ptr [rcx - 0x75] ; ret 0x3b48
0x0000020000101693 : xor dh, 0xff ; dec dword ptr [rcx - 0x75] ; ret 0xb60f
0x00000200000d91e9 : xor dh, 0xff ; dec dword ptr [rcx - 0x75] ; ret 0xb949
0x00000200001f758e : xor dh, 0xff ; dec dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200000a93fb : xor dh, 0xff ; inc dword ptr [rcx - 0x7f] ; jmp qword ptr [rax]
0x000002000004a23f : xor dh, 0xff ; push qword ptr [rbx] ; fisttp dword ptr [rax + 0xb] ; ret 0x8b49
0x00000200000d4c0e : xor dh, 0xff ; push rsi ; ret
0x000002000019e081 : xor dh, bh ; jmp 0x20033dc6bd1
0x0000020000724445 : xor dh, bh ; xor eax, eax ; add rsp, 0x48 ; ret
0x000002000007b009 : xor dh, byte ptr [rax + 0x2a] ; add byte ptr [rcx], al ; add rsp, 0x38 ; ret
0x0000020000778435 : xor dh, byte ptr [rbx + 8] ; mov esi, r12d ; mov rax, rdx ; jmp 0x2000077844d
0x0000020000696567 : xor dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7f], cl ; ret
0x00000200001e4b7c : xor dh, byte ptr [rdx - 0x31] ; xor eax, eax ; ret
0x00000200007b4dfe : xor dh, byte ptr [rdx] ; ret
0x00000200000770bd : xor dh, dh ; push rax ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x4a8
0x000002000019ea3f : xor dh, dh ; ret
0x0000020000723e4f : xor dh, dh ; ret 0x7440
0x0000020000053350 : xor dh, dh ; ret 0x7501
0x000002000003c520 : xor dh, dh ; ret 0x7503
0x00000200000a53c8 : xor dh, dh ; ret 0x7508
0x00000200007243a2 : xor dh, dh ; ret 0xf01
0x0000020000725080 : xor dh, dh ; ret 0xf02
0x00000200004c624f : xor dh, dh ; ret 0xf10
0x00000200000d23bb : xor dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x0000020000479a0a : xor dh, dh ; xor edx, edx ; call 0x2000009e097
0x0000020000148c0a : xor dl, ah ; add byte ptr [rax], al ; ret
0x000002000014900a : xor dl, al ; add byte ptr [rax], al ; ret
0x000002000014890a : xor dl, bh ; add byte ptr [rax], al ; ret
0x00000200006663b2 : xor dl, bh ; popfq ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000148d0a : xor dl, bl ; add byte ptr [rax], al ; ret
0x00000200000f1e7e : xor dl, byte ptr [rbp + 0x3f] ; add dh, dh ; ret
0x00000200005d3202 : xor dl, byte ptr [rdi - 0x2e] ; dec dword ptr [rax + 3] ; ret 0x8941
0x0000020000148b0a : xor dl, ch ; add byte ptr [rax], al ; ret
0x000002000015f69f : xor dl, ch ; dec dword ptr [rax - 0x75] ; ret
0x0000020000148f0a : xor dl, cl ; add byte ptr [rax], al ; ret
0x0000020000148a0a : xor dl, dh ; add byte ptr [rax], al ; ret
0x0000020000148e0a : xor dl, dl ; add byte ptr [rax], al ; ret
0x0000020000088257 : xor dl, dl ; mov rbx, qword ptr [rsp + 8] ; mov al, dl ; ret
0x00000200003c61ef : xor dword ptr [rax + 0x33], ecx ; ret 0x3348
0x00000200002278a5 : xor dword ptr [rax + 0x44000003], 0x3b ; ret 0xa75
0x000002000003c75d : xor dword ptr [rax + 1], 0x1240000 ; ret
0x000002000066c335 : xor dword ptr [rax + rax], eax ; add byte ptr [rbx], bh ; ret
0x00000200000659fd : xor dword ptr [rax - 0x3f], ecx ; loop 0x20000065a2a ; or rax, rdx ; ret
0x0000020000196f28 : xor dword ptr [rax - 0x75], ecx ; ret 0x8348
0x000002000010f231 : xor dword ptr [rax - 0x77], ecx ; or byte ptr [rcx - 0x75], cl ; ret
0x0000020000051e65 : xor dword ptr [rax - 0x7d], ecx ; ret
0x000002000013ce8e : xor dword ptr [rax - 1], ecx ; ret 0xff49
0x0000020000618cdf : xor dword ptr [rax], eax ; add byte ptr [rbp + 3], al ; fimul word ptr [rcx + 0x63] ; ret
0x00000200000100e9 : xor dword ptr [rax], eax ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000135960 : xor dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000011f9c : xor dword ptr [rax], eax ; call 0x200000c461d
0x0000020000090e69 : xor dword ptr [rax], eax ; cmp rdx, rax ; ja 0x20000090e9e ; ret
0x00000200001d93b9 : xor dword ptr [rax], eax ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000090399 : xor dword ptr [rax], eax ; ret
0x000002000008e0a5 : xor dword ptr [rax], eax ; sete al ; ret
0x0000020000222c4d : xor dword ptr [rbp + rbx + 0x22], 0xc1034c00 ; jmp r8
0x00000200007c8024 : xor dword ptr [rbp - 0x73], eax ; or bpl, r8b ; ret 0x9836
0x00000200006c9bf4 : xor dword ptr [rbx + 0x418d48f2], ecx ; add dword ptr [rax + 3], ecx ; ret 0x3b4c
0x000002000004c30b : xor dword ptr [rbx + rcx*4 + 0x45], ecx ; sbb byte ptr [rax - 0x75], cl ; ret
0x00000200002238e9 : xor dword ptr [rbx - 0xf], 0xffffffff ; add rsp, 0x58 ; ret
0x00000200000f7950 : xor dword ptr [rbx], ecx ; add byte ptr [rax - 0x75], cl ; ret
0x000002000004b94f : xor dword ptr [rcx + 0x18], eax ; ret
0x0000020000097e82 : xor dword ptr [rcx + 0x18], ecx ; ret
0x00000200004f0b59 : xor dword ptr [rcx + 0xf000f25], 0xffffffb7 ; ret 0x3966
0x0000020000016840 : xor dword ptr [rcx - 0x24], 0x14 ; add bh, bh ; ret
0x00000200001e3103 : xor dword ptr [rcx - 1], eax ; ret 0x8349
0x00000200005601a1 : xor dword ptr [rcx], 0xffffffd9 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000413bd6 : xor dword ptr [rcx], eax ; add rdx, r8 ; jmp rdx
0x000002000007514e : xor dword ptr [rcx], eax ; jmp 0x20000075044
0x000002000052342a : xor dword ptr [rcx], ecx ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004663bb : xor dword ptr [rcx], edi ; ret
0x0000020000021a75 : xor dword ptr [rdi + rdi*8], 0xffffffff ; dec dword ptr [rax - 0x75] ; ret
0x00000200004d11e9 : xor dword ptr [rdi], ecx ; mov dh, 0x5d ; add esi, esi ; ret
0x0000020000091d8d : xor dword ptr [rdx + 0x78], 0x1000 ; ret
0x0000020000026220 : xor dword ptr [rdx + 8], eax ; jmp 0x200000261ec
0x00000200000ebd96 : xor dword ptr [rdx + rax], 0 ; add byte ptr [rdi + rcx - 0x42], al ; stosd dword ptr [rdi], eax ; ret
0x0000020000613f89 : xor dword ptr [rdx], 0xffffffad ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000d4092 : xor dword ptr [rdx], eax ; jmp 0x200000d4042
0x0000020000031d4d : xor dword ptr [rdx], eax ; ret
0x00000200006edc25 : xor dword ptr [rip + 0x30dbde31], ecx ; ret 0xc556
0x00000200004d55b5 : xor dword ptr [rsi + 0x10], esi ; add byte ptr [rcx - 0x73], cl ; add al, 0x90 ; ret
0x00000200007cb01b : xor dword ptr [rsi - 1], ecx ; jmp qword ptr [rcx]
0x00000200000bfdbd : xor dword ptr [rsi], esp ; add byte ptr [rax - 0x75], cl ; ret
0x000002000045362d : xor dword ptr [rsp + rdi*4], 0x15 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006f5fe6 : xor eax, 0x1d88ffc2 ; xchg eax, esp ; ret 0x40ff
0x0000020000426c19 : xor eax, 0x20 ; ret
0x000002000008344c : xor eax, 0x24 ; or byte ptr [rax], al ; add rcx, rbx ; jmp rcx
0x000002000021440c : xor eax, 0x3341028b ; ret 0x840f
0x0000020000211c80 : xor eax, 0x3a3f2400 ; ret
0x00000200000f8988 : xor eax, 0x3b78418b ; ret 0x3a74
0x0000020000057574 : xor eax, 0x3d8d4800 ; ret
0x00000200001bc393 : xor eax, 0x48000000 ; add esp, 0x38 ; ret
0x000002000043e103 : xor eax, 0x4800009a ; add esp, 0x40 ; pop rbx ; ret
0x000002000000c927 : xor eax, 0x48000b18 ; add esp, 0x48 ; ret
0x000002000072b8c3 : xor eax, 0x48ffb09c ; add esp, 0x58 ; ret
0x000002000060f007 : xor eax, 0x48ffb485 ; add esp, 0x28 ; ret
0x000002000044b947 : xor eax, 0x48ffd059 ; add esp, 0x28 ; ret
0x00000200003d0537 : xor eax, 0x48ffd6a7 ; add esp, 0x20 ; pop rcx ; ret
0x0000020000222a37 : xor eax, 0x48fff182 ; add esp, 0x50 ; pop rbx ; ret
0x00000200000f7b07 : xor eax, 0x48fff7f5 ; add esp, 0x28 ; ret
0x0000020000079e97 : xor eax, 0x48ffff28 ; add esp, 0x40 ; pop rbx ; ret
0x0000020000044d21 : xor eax, 0x5d ; xor eax, eax ; ret
0x000002000000bfa8 : xor eax, 0x8000ba ; add byte ptr [rsi - 0x7b], ah ; ret 0x1f74
0x0000020000058e79 : xor eax, 0x81048b00 ; ret
0x00000200006b6486 : xor eax, 0x84000001 ; sal byte ptr [rax + rax*2 - 0xa], cl ; ret
0x000002000055b2c7 : xor eax, 0x8affcf1d ; ret
0x00000200006dba2f : xor eax, 0x8b000016 ; ret
0x000002000013b9b7 : xor eax, 0x8b000024 ; ret
0x00000200000cec8c : xor eax, 0x8b00002d ; ret 0x2b41
0x0000020000132d37 : xor eax, 0x8b000153 ; ret
0x000002000051f916 : xor eax, 0x8b000948 ; ret
0x000002000053e3ff : xor eax, 0x8bffaf30 ; ret
0x0000020000538537 : xor eax, 0x8bffc0fb ; ret
0x00000200006328c7 : xor eax, 0x8bffc1a7 ; ret
0x000002000042d477 : xor eax, 0x8bffcb9a ; ret
0x0000020000202046 : xor eax, 0x9001011 ; add rsp, 0x38 ; ret
0x0000020000554b6c : xor eax, 0xb8ffe5 ; add byte ptr [rax], al ; add dh, dh ; ret 0x413f
0x0000020000044196 : xor eax, 0xbc2a27db ; mov dword ptr [r10], eax ; call r10
0x000002000023a24b : xor eax, 0xc03302eb ; add rsp, 0x28 ; ret
0x00000200005f0d67 : xor eax, 0xd233fff5 ; call 0x2000024d007
0x0000020000221e2e : xor eax, 0xda255 ; jmp 0x20000221e4a
0x0000020000798c74 : xor eax, 0xe80002bb ; ret
0x00000200005e874c : xor eax, 0xe990ffe7 ; ret
0x0000020000065d4d : xor eax, 0xf010034 ; test ecx, esp ; call qword ptr [rcx]
0x000002000016f646 : xor eax, 0xf6ccffed ; ret 0xf0e
0x0000020000191540 : xor eax, 0xf6fff03a ; ret 0x7503
0x000002000005a4c5 : xor eax, 0xf6fffffc ; ret 0x4508
0x000002000064f8e2 : xor eax, 0xfc00000 ; ret
0x00000200004c76a5 : xor eax, 0xff48ffb7 ; ret
0x00000200003e4807 : xor eax, dword ptr [r8 + rcx*4] ; ret
0x00000200000fb2d9 : xor eax, dword ptr [rax + rax*8 - 0xb7d18b] ; ret
0x0000020000778a47 : xor eax, dword ptr [rax + rax] ; add rsp, 0x28 ; ret
0x00000200003e4808 : xor eax, dword ptr [rax + rcx*4] ; ret
0x00000200003f0f43 : xor eax, dword ptr [rax] ; add al, al ; add rsp, 0x28 ; ret
0x0000020000009a0a : xor eax, dword ptr [rax] ; add al, al ; ret
0x000002000007782a : xor eax, dword ptr [rax] ; call r8
0x000002000007762e : xor eax, dword ptr [rax] ; call rax
0x000002000006ba05 : xor eax, dword ptr [rax] ; je 0x2000006ba12 ; xor al, al ; ret
0x00000200006feec0 : xor eax, dword ptr [rbp - 0xd08a40] ; ret
0x00000200007b2f4f : xor eax, dword ptr [rbx - 0x74bbffff] ; ret 0x8b41
0x00000200005015f7 : xor eax, dword ptr [rcx - 0x3874fff2] ; jmp 0x200005015c8
0x000002000066fc1f : xor eax, dword ptr [rcx - 0x47] ; mov ebx, 0x8baabbaa ; ret 0x6948
0x0000020000404920 : xor eax, dword ptr [rcx - 0x75] ; ret 0x83c3
0x000002000011658a : xor eax, dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000052eb4 : xor eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001650e1 : xor eax, dword ptr [rip - 0x74bc0000] ; ret
0x00000200004b566b : xor eax, dword ptr [rsi + rsi*8] ; ret
0x00000200003e4a43 : xor eax, dword ptr [rsp + 0x38] ; ret
0x00000200000ac727 : xor eax, eax ; add rsp, 0x10 ; pop rdi ; ret
0x000002000043b0bf : xor eax, eax ; add rsp, 0x18 ; ret
0x00000200007b609a : xor eax, eax ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003098b : xor eax, eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000212e4 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000004a1f5 : xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020d6a4 : xor eax, eax ; add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x00000200000087c9 : xor eax, eax ; add rsp, 0x28 ; ret
0x000002000015af68 : xor eax, eax ; add rsp, 0x30 ; pop rbp ; ret
0x000002000013d7c3 : xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000be3e5 : xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007b9e99 : xor eax, eax ; add rsp, 0x30 ; pop rsi ; ret
0x000002000009c0a8 : xor eax, eax ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x00000200000cf5e7 : xor eax, eax ; add rsp, 0x38 ; pop rdi ; pop rbx ; ret
0x0000020000073df9 : xor eax, eax ; add rsp, 0x38 ; pop rsi ; pop rbx ; ret
0x00000200000402a9 : xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000070cfd : xor eax, eax ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000122e58 : xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x000002000005eeaf : xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000de922 : xor eax, eax ; add rsp, 0x48 ; pop rdi ; pop rbx ; ret
0x00000200001c968c : xor eax, eax ; add rsp, 0x48 ; ret
0x0000020000516d05 : xor eax, eax ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000435774 : xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x00000200006bd327 : xor eax, eax ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000020000623a75 : xor eax, eax ; add rsp, 0x58 ; ret
0x0000020000465bd2 : xor eax, eax ; add rsp, 0x60 ; pop rbx ; ret
0x00000200004c3ef2 : xor eax, eax ; add rsp, 0x70 ; pop r13 ; ret
0x00000200000e223e : xor eax, eax ; add rsp, 0x70 ; pop rbx ; ret
0x00000200004494c6 : xor eax, eax ; call 0x2000006d765
0x00000200000135ff : xor eax, eax ; call 0x200000d9d79
0x0000020000519645 : xor eax, eax ; call 0x20000148a95
0x0000020000176c74 : xor eax, eax ; call 0x200001fc7e5
0x00000200004f1de6 : xor eax, eax ; call 0x200004f961d
0x0000020000067d85 : xor eax, eax ; cmp byte ptr [rdx], 0x10 ; setge al ; ret
0x000002000060fdec : xor eax, eax ; cmp dword ptr [rcx + 0x20], -1 ; sete al ; ret
0x0000020000009b80 : xor eax, eax ; cmp dword ptr [rcx + 0x2c], eax ; sete al ; ret
0x00000200001f8abb : xor eax, eax ; cmp ecx, 0x1e ; setb al ; ret
0x000002000049b9d0 : xor eax, eax ; cmp edx, r8d ; jbe 0x2000049b9df ; ret
0x00000200001ba988 : xor eax, eax ; cmp qword ptr [rcx], r8 ; jne 0x200001ba99b ; xor eax, eax ; ret
0x000002000000bb28 : xor eax, eax ; cmp qword ptr [rcx], rax ; sete al ; ret
0x0000020000213117 : xor eax, eax ; cmp r10, r11 ; jb 0x20000213102 ; ret
0x00000200001bcd1c : xor eax, eax ; cmp r11d, r9d ; seta al ; ret
0x000002000008dc90 : xor eax, eax ; cmp r8, rcx ; seta al ; ret
0x00000200007b32ec : xor eax, eax ; cmp r8b, cl ; seta al ; ret
0x00000200007b7c7c : xor eax, eax ; cmp r8d, ecx ; seta al ; ret
0x0000020000207bb6 : xor eax, eax ; cmp r8d, ecx ; setb al ; ret
0x000002000021c482 : xor eax, eax ; cmp r8d, ecx ; setne al ; ret
0x00000200006c6067 : xor eax, eax ; cmp r8w, r9w ; seta al ; ret
0x00000200006c602b : xor eax, eax ; cmp r8w, r9w ; setb al ; ret
0x00000200004a6c88 : xor eax, eax ; cmp rcx, qword ptr [rdx] ; jne 0x200004a6c97 ; ret
0x00000200004a6ca4 : xor eax, eax ; cmp rcx, qword ptr [rdx] ; jne 0x200004a6cb3 ; ret
0x000002000020c01d : xor eax, eax ; cmp rcx, r8 ; seta al ; ret
0x000002000009052b : xor eax, eax ; cmp rcx, rdx ; sete al ; ret
0x0000020000213b1a : xor eax, eax ; cmp rdx, r10 ; jb 0x20000213afc ; mov al, 1 ; ret
0x0000020000110f96 : xor eax, eax ; cmp rdx, rcx ; seta al ; ret
0x00000200006ab08b : xor eax, eax ; inc dword ptr [r8] ; ret
0x000002000024c5c0 : xor eax, eax ; inc eax ; ret
0x00000200000291b8 : xor eax, eax ; jmp 0x20000029182
0x000002000002abdf : xor eax, eax ; jmp 0x2000002aba9
0x000002000017ea80 : xor eax, eax ; jmp 0x2000004aca0
0x000002000004b32b : xor eax, eax ; jmp 0x2000004b2f5
0x00000200000733fe : xor eax, eax ; jmp 0x200000733c8
0x0000020000191d70 : xor eax, eax ; jmp 0x2000009893c
0x000002000011bb90 : xor eax, eax ; jmp 0x2000011ba99
0x0000020000548245 : xor eax, eax ; jmp 0x2000054820f
0x000002000051ed26 : xor eax, eax ; lea ecx, dword ptr [rdx + 0x62] ; call 0x20000148558
0x000002000043e54b : xor eax, eax ; lea edx, dword ptr [r8 + 1] ; call 0x200000620f9
0x00000200003ed64d : xor eax, eax ; lea rcx, qword ptr [rbp - 0x59] ; xor edx, edx ; call qword ptr [rdi]
0x0000020000696ea6 : xor eax, eax ; lea rdx, qword ptr [rbp - 0x18] ; call 0x200006d3144
0x00000200000478c7 : xor eax, eax ; lock cmpxchg qword ptr [rcx], r8 ; jne 0x200000478b0 ; ret
0x0000020000157ac6 : xor eax, eax ; mov byte ptr [rcx + 0x58], 1 ; ret
0x0000020000044cfb : xor eax, eax ; mov byte ptr [rcx + 0x5df8], 0 ; ret
0x0000020000594f72 : xor eax, eax ; mov cl, 0x1b ; call rax
0x0000020000600b1d : xor eax, eax ; mov cl, bpl ; call rsi
0x00000200001a233d : xor eax, eax ; mov dl, 2 ; call 0x2000004e58e
0x000002000070ff8f : xor eax, eax ; mov dword ptr [r8 + rcx*4], edx ; ret
0x000002000022d99a : xor eax, eax ; mov dword ptr [r9], ecx ; ret
0x0000020000211f6e : xor eax, eax ; mov dword ptr [rcx + 0x38], eax ; mov word ptr [rcx + 0x48], ax ; ret
0x0000020000122d55 : xor eax, eax ; mov dword ptr [rcx + 0x50], eax ; mov eax, r8d ; ret
0x0000020000513954 : xor eax, eax ; mov dword ptr [rcx], 0x4c706345 ; ret
0x000002000010a602 : xor eax, eax ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000710e9e : xor eax, eax ; mov dword ptr [rip - 0x40ad8a], ecx ; ret
0x0000020000527c44 : xor eax, eax ; mov dword ptr [rsp + 0x20], eax ; call 0x200001484d9
0x00000200006648b3 : xor eax, eax ; mov dword ptr [rsp], eax ; add rsp, 0x18 ; ret
0x000002000012a7ba : xor eax, eax ; mov eax, r8d ; inc qword ptr [rdx + rax*8] ; ret
0x000002000013ddc6 : xor eax, eax ; mov eax, r8d ; ret
0x0000020000147cd8 : xor eax, eax ; mov edx, eax ; wrmsr ; pop rdx ; pop rax ; pop rcx ; ret
0x00000200000572df : xor eax, eax ; mov qword ptr [r8 + 8], rcx ; ret
0x00000200005697a6 : xor eax, eax ; mov qword ptr [r8], 1 ; ret
0x000002000003a51d : xor eax, eax ; mov qword ptr [r9], rcx ; ret
0x00000200000c09fd : xor eax, eax ; mov qword ptr [r9], rdx ; pop rdi ; ret
0x00000200006a420d : xor eax, eax ; mov qword ptr [rcx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000456964 : xor eax, eax ; mov qword ptr [rcx], rax ; ret
0x000002000000d74c : xor eax, eax ; mov qword ptr [rdx + 0x10], rcx ; ret
0x000002000002559d : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000200000c8b59 : xor eax, eax ; mov rbp, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x0000020000402a28 : xor eax, eax ; mov rbx, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x00000200000255b0 : xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004cfb56 : xor eax, eax ; mov rcx, qword ptr [rdi + 0x2e8] ; call rax
0x000002000015be8a : xor eax, eax ; mov rcx, r10 ; call r10
0x000002000015bc5d : xor eax, eax ; mov rcx, r11 ; call r11
0x0000020000501e2b : xor eax, eax ; mov rcx, rbx ; call 0x200000be127
0x00000200007ac144 : xor eax, eax ; mov rcx, rbx ; call 0x200003d07a0
0x00000200005255ef : xor eax, eax ; mov rcx, rdi ; call 0x20000148a98
0x000002000021d238 : xor eax, eax ; mov rcx, rdi ; mov rdx, rbx ; call rsi
0x0000020000121e81 : xor eax, eax ; mov rcx, rdi ; xor edx, edx ; call 0x2000009e099
0x00000200005143cc : xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x0000020000020d08 : xor eax, eax ; mov rdx, r14 ; mov rcx, r12 ; call r15
0x00000200006e2dbb : xor eax, eax ; mov rdx, r14 ; mov rcx, r15 ; call rax
0x000002000010f65c : xor eax, eax ; mov rdx, r9 ; call 0x2000004b8ff
0x00000200004a5a43 : xor eax, eax ; mov rdx, rbp ; call 0x20000081c83
0x0000020000041dd0 : xor eax, eax ; mov rdx, rbx ; mov rcx, rdi ; call rsi
0x000002000017772e : xor eax, eax ; mov rdx, rsi ; call rax
0x000002000005f420 : xor eax, eax ; mov word ptr [rcx], ax ; ret
0x000002000001e0fd : xor eax, eax ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000200003fa12a : xor eax, eax ; pop rbx ; ret
0x000002000015274d : xor eax, eax ; pop rsi ; pop rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000020000003900 : xor eax, eax ; ret
0x0000020000032b8f : xor eax, eax ; test al, al ; je 0x20000032ba2 ; mov al, r8b ; ret
0x000002000057ca18 : xor eax, eax ; test cl, cl ; setne al ; pop rbp ; ret
0x00000200003e3bb3 : xor eax, eax ; test ecx, ecx ; setns al ; dec eax ; ret
0x0000020000203a27 : xor eax, eax ; test r8, r8 ; je 0x20000203a39 ; call r8
0x000002000046add3 : xor eax, eax ; test r8, r8 ; je 0x2000046ade5 ; call r8
0x000002000020f964 : xor eax, eax ; test r8, r8 ; jne 0x2000020f92f ; ret
0x0000020000041e0c : xor eax, eax ; test rcx, rcx ; jne 0x20000041e1f ; mov al, 1 ; ret
0x000002000062b3fd : xor eax, eax ; test rcx, rcx ; jne 0x2000062b410 ; xor eax, eax ; ret
0x000002000002a52b : xor eax, eax ; test rdx, rdx ; jne 0x2000002a53a ; ret
0x000002000022c7ab : xor eax, eax ; xchg dword ptr [rcx + 0x1c], eax ; ret
0x00000200005698b4 : xor eax, eax ; xchg dword ptr [rcx + 0x20], eax ; ret
0x0000020000157b3c : xor eax, eax ; xchg dword ptr [rdx], eax ; ret
0x00000200006ff488 : xor eax, eax ; xchg dword ptr [rip + 0x2dcac], eax ; ret
0x0000020000120e70 : xor eax, eax ; xchg qword ptr [rcx], rax ; ret
0x00000200003e0f65 : xor eax, eax ; xor edx, edx ; call 0x2000000c02f
0x00000200007c5ee7 : xor eax, eax ; xor edx, edx ; call 0x200000620f6
0x00000200003cc22a : xor eax, eax ; xor edx, edx ; call 0x20000068456
0x000002000047c557 : xor eax, eax ; xor edx, edx ; call 0x2000009e097
0x000002000049bb6d : xor eax, eax ; xor edx, edx ; call 0x200000bbbeb
0x00000200001022c5 : xor eax, eax ; xor edx, edx ; call r9
0x00000200001a030a : xor eax, eax ; xor edx, edx ; call rax
0x00000200004a1daf : xor eax, eax ; xor edx, edx ; mov rcx, r15 ; call 0x2000009e099
0x000002000048893a : xor eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xd5eb
0x000002000000c85c : xor eax, ecx ; mov dword ptr [rcx + 0x6c4], r8d ; ret
0x000002000002f858 : xor eax, ecx ; mov dword ptr [rcx], eax ; cmp r10, r8 ; jb 0x2000002f849 ; ret
0x000002000017a172 : xor eax, ecx ; mov rcx, rax ; call rdx
0x00000200003e4a41 : xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x000002000003ecb5 : xor eax, edi ; adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000002000004b949 : xor eax, edx ; and rax, rcx ; xor qword ptr [r9 + 0x18], rax ; ret
0x00000200003e44e8 : xor eax, edx ; ret
0x0000020000145561 : xor eax, edx ; xor rcx, rdx ; jmp rax
0x00000200003e44e7 : xor eax, r10d ; ret
0x000002000010a601 : xor eax, r8d ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200001b8866 : xor ebp, dword ptr [rax] ; add bl, ch ; ret
0x00000200001b3051 : xor ebp, dword ptr [rbx] ; sbb al, byte ptr [rax] ; ret
0x000002000044fcd2 : xor ebp, ebp ; call 0x2000007a5e5
0x000002000023d916 : xor ebp, ebp ; mov rax, rdx ; jmp 0x2000023d923
0x0000020000441953 : xor ebp, ebx ; ret
0x000002000051a34b : xor ebp, edx ; ret
0x00000200005f08a5 : xor ebp, esi ; inc dword ptr [rcx - 0x75] ; ret 0xfb8b
0x0000020000701760 : xor ebp, esi ; ret
0x00000200001c5ba9 : xor ebx, dword ptr [rbp - 0x38b7ffeb] ; ret 0x6980
0x000002000070905b : xor ebx, ebp ; movsb byte ptr [rdi], byte ptr [rsi] ; inc dword ptr [rcx + 0x3b] ; ret
0x00000200006cd424 : xor ebx, ebp ; or dh, dh ; ret
0x000002000071116f : xor ebx, ebx ; call 0x2000003d414
0x0000020000650aa4 : xor ebx, ebx ; call 0x2000024d006
0x000002000017d263 : xor ebx, ebx ; jmp 0x20000045953
0x00000200000f8db1 : xor ebx, ebx ; jmp 0x200000f8d7a
0x00000200004124fc : xor ebx, ebx ; jmp 0x200004124c5
0x0000020000446866 : xor ebx, ebx ; jmp 0x2000044682f
0x000002000053505e : xor ebx, ebx ; jmp 0x20000535028
0x0000020000624818 : xor ebx, ebx ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006c91f9 : xor ebx, ebx ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004421c8 : xor ebx, ebx ; mov qword ptr [rbp - 0x48], rbx ; call r14
0x000002000046d795 : xor ebx, ebx ; mov r10d, r11d ; call 0x2000009a738
0x00000200001cf938 : xor ebx, ebx ; mov r8d, ebp ; call 0x2000013bb7b
0x000002000023fd0f : xor ebx, ebx ; mov rax, rdx ; jmp 0x2000023fd1c
0x00000200002456c6 : xor ebx, ebx ; mov rax, rdx ; jmp 0x200002456d3
0x000002000052cc2f : xor ebx, ebx ; test rax, rax ; je 0x2000052cc08 ; call rax
0x00000200002228d3 : xor ecx, 0xffffffff ; add rsp, 0x50 ; pop rbp ; ret
0x000002000022293f : xor ecx, 0xffffffff ; add rsp, 0x68 ; ret
0x0000020000051122 : xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x000002000012d57a : xor ecx, dword ptr [rax + 0x2b] ; ror byte ptr [rax - 0x75], 1 ; ret 0x2348
0x00000200001bfc0d : xor ecx, dword ptr [rax - 0x75] ; add eax, 0x139c3b ; call rax
0x00000200001ab45d : xor ecx, dword ptr [rax - 0x75] ; and byte ptr [r13 - 0x75], r9b ; ret
0x000002000043b204 : xor ecx, dword ptr [rax - 0x75] ; je 0x2000043b235 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000020a21f : xor ecx, dword ptr [rax - 0x75] ; ret
0x0000020000478ac2 : xor ecx, dword ptr [rax - 0x75] ; ret 0xaceb
0x00000200007bcb32 : xor ecx, dword ptr [rax - 0x77] ; and al, 0x30 ; call 0x200003e9a09
0x0000020000024295 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000650d66 : xor ecx, dword ptr [rax - 0x7d] ; ret 0xe806
0x0000020000215ab4 : xor ecx, dword ptr [rax - 0x7d] ; ret 0xff0
0x000002000077f9a8 : xor ecx, dword ptr [rbx - 0x74b6dbb5] ; ret
0x0000020000447564 : xor ecx, dword ptr [rcx + 0x3b] ; ret
0x00000200001cf7d5 : xor ecx, dword ptr [rcx - 0x75] ; xlatb ; mov rcx, rbp ; call 0x2000013ba79
0x0000020000229009 : xor ecx, dword ptr [rcx - 9] ; ret
0x00000200007b594d : xor ecx, dword ptr [rsi] ; xchg eax, ecx ; call rcx
0x0000020000796391 : xor ecx, eax ; dec dword ptr [rax - 0x77] ; or byte ptr [r15], 0xb6 ; ret 0xf44
0x00000200003e47bd : xor ecx, eax ; mov eax, r9d ; ret
0x00000200004a953b : xor ecx, ebp ; ret
0x00000200005601a2 : xor ecx, ebx ; dec dword ptr [rax - 0x75] ; ret
0x00000200005ce321 : xor ecx, ecx ; add eax, 0x1c ; movzx ecx, al ; call r10
0x00000200005ef56d : xor ecx, ecx ; add rsp, 0x28 ; jmp 0x200006ab830
0x000002000045fafd : xor ecx, ecx ; call 0x2000008e159
0x0000020000789870 : xor ecx, ecx ; call 0x200000c5b2c
0x00000200005f1cca : xor ecx, ecx ; call 0x200000ed708
0x0000020000002485 : xor ecx, ecx ; call 0x200000ee694
0x00000200003cfb37 : xor ecx, ecx ; call 0x20000115999
0x00000200001be6ab : xor ecx, ecx ; call 0x200001be5e9
0x00000200007d08ab : xor ecx, ecx ; call 0x200003f7bc1
0x00000200006f74cc : xor ecx, ecx ; call 0x200006f37b0
0x000002000017734f : xor ecx, ecx ; call qword ptr [rax]
0x00000200005878d7 : xor ecx, ecx ; call qword ptr [rsi]
0x0000020000242f23 : xor ecx, ecx ; call r10
0x0000020000055db5 : xor ecx, ecx ; call r14
0x0000020000218acd : xor ecx, ecx ; call r9
0x00000200001162af : xor ecx, ecx ; call rax
0x00000200001300e6 : xor ecx, ecx ; call rdx
0x00000200001eb118 : xor ecx, ecx ; lea rax, qword ptr [rcx + rdx] ; ret
0x00000200001d01ea : xor ecx, ecx ; mov al, r9b ; add rsp, 0x28 ; ret
0x0000020000218f40 : xor ecx, ecx ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200001c8b71 : xor ecx, ecx ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x00000200001fd354 : xor ecx, ecx ; mov eax, r9d ; ret
0x0000020000177348 : xor ecx, ecx ; mov edx, 0xffc6c6c6 ; xor ecx, ecx ; call qword ptr [rax]
0x000002000005c4dc : xor ecx, ecx ; mov qword ptr [r9], rax ; mov eax, ecx ; ret
0x000002000014626b : xor ecx, ecx ; mov qword ptr [rsp + 0x70], rax ; call r11
0x000002000051c1c7 : xor ecx, ecx ; mov r8d, esi ; call 0x20000148178
0x000002000042d7b7 : xor ecx, ecx ; mov r8d, esi ; xor edx, edx ; call 0x200004c99d9
0x000002000069d80f : xor ecx, ecx ; mov rax, rcx ; ret
0x0000020000182428 : xor ecx, ecx ; mov rcx, rbx ; call 0x200000ee697
0x00000200007aa657 : xor ecx, ecx ; movsxd rbx, eax ; call qword ptr [rip - 0x553d0a]
0x000002000045fb06 : xor ecx, ecx ; shl rbx, 0x20 ; call 0x2000008e15d
0x0000020000703bb4 : xor ecx, ecx ; test rax, rax ; jne 0x20000703bc3 ; ret
0x000002000015be87 : xor ecx, ecx ; xor r8d, r8d ; mov rcx, r10 ; call r10
0x000002000015bc5a : xor ecx, ecx ; xor r8d, r8d ; mov rcx, r11 ; call r11
0x00000200003cc227 : xor ecx, ecx ; xor r8d, r8d ; xor edx, edx ; call 0x20000068459
0x0000020000145564 : xor ecx, edx ; jmp rax
0x00000200001aea66 : xor ecx, esp ; call 0x2000013ac74
0x000002000050b13a : xor ecx, esp ; call 0x2000013ac75
0x0000020000218f3f : xor ecx, r9d ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x0000020000115efd : xor edi, edi ; call 0x2000005f906
0x00000200001e7f19 : xor edi, edi ; call 0x200000c1079
0x000002000010d31f : xor edi, edi ; jmp 0x2000010d203
0x000002000003df89 : xor edi, edi ; ret
0x000002000020fa6f : xor edi, edi ; ret 0xbe49
0x000002000044fcd0 : xor edi, edi ; xor ebp, ebp ; call 0x2000007a5e7
0x000002000071116d : xor edi, edi ; xor ebx, ebx ; call 0x2000003d416
0x000002000012ef7c : xor edx, 0xffffffff ; add rsp, 0x38 ; ret
0x00000200004c60c6 : xor edx, dword ptr [rcx] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004c60de : xor edx, dword ptr [rcx] ; add byte ptr [rcx - 0x75], cl ; ret 0x49f0
0x00000200007bcfd9 : xor edx, dword ptr [rcx] ; add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000078f163 : xor edx, dword ptr [rdx] ; mov dword ptr [r10], ecx ; mov rcx, r10 ; jmp rcx
0x00000200000c5f19 : xor edx, dword ptr [rsi - 0x74b70006] ; ret
0x00000200000ba4b5 : xor edx, eax ; mov qword ptr [rcx + 0x18], rdx ; ret
0x000002000004447b : xor edx, eax ; xchg dword ptr [rcx + 0x320], edx ; ret
0x00000200003e4e56 : xor edx, ecx ; mov eax, r10d ; ret
0x000002000043014e : xor edx, edx ; and qword ptr [rsp + 0x20], 0 ; call r11
0x00000200003e0f67 : xor edx, edx ; call 0x2000000c02d
0x0000020000051ec9 : xor edx, edx ; call 0x2000001cc09
0x000002000042a5ee : xor edx, edx ; call 0x20000058015
0x00000200007c5ee9 : xor edx, edx ; call 0x200000620f4
0x00000200000037ee : xor edx, edx ; call 0x200000620f8
0x00000200003cc22c : xor edx, edx ; call 0x20000068454
0x0000020000431639 : xor edx, edx ; call 0x20000068459
0x0000020000452a5e : xor edx, edx ; call 0x2000007c7f1
0x0000020000121e86 : xor edx, edx ; call 0x2000009e094
0x000002000046e16c : xor edx, edx ; call 0x2000009e095
0x000002000049bb6f : xor edx, edx ; call 0x200000bbbe9
0x00000200004c0eb4 : xor edx, edx ; call 0x200000eef35
0x00000200005215ec : xor edx, edx ; call 0x20000147f15
0x00000200005215a9 : xor edx, edx ; call 0x20000148295
0x000002000018b5a3 : xor edx, edx ; call 0x20000157884
0x000002000052dcf8 : xor edx, edx ; call 0x20000157885
0x0000020000590d12 : xor edx, edx ; call 0x2000024d004
0x0000020000623d8c : xor edx, edx ; call 0x2000024d005
0x0000020000460914 : xor edx, edx ; call 0x2000024d008
0x0000020000004beb : xor edx, edx ; call 0x2000024d009
0x00000200007bc271 : xor edx, edx ; call 0x200003e5f89
0x000002000042d7bc : xor edx, edx ; call 0x200004c99d4
0x00000200003ed653 : xor edx, edx ; call qword ptr [rdi]
0x0000020000167306 : xor edx, edx ; call r10
0x0000020000102247 : xor edx, edx ; call r8
0x00000200001022c7 : xor edx, edx ; call r9
0x00000200001a030c : xor edx, edx ; call rax
0x000002000016d9cb : xor edx, edx ; div rcx ; mov rax, rdx ; ret
0x00000200007cb88f : xor edx, edx ; jmp 0x200007b46c8
0x00000200005284f8 : xor edx, edx ; lea r8d, dword ptr [rdx + 0x78] ; call 0x20000157889
0x00000200004bea6d : xor edx, edx ; lea rcx, qword ptr [rbp + 0x10] ; call 0x200000ee699
0x000002000058fb4a : xor edx, edx ; lea rcx, qword ptr [rbp - 0x59] ; call 0x200001b5011
0x000002000068401e : xor edx, edx ; lea rcx, qword ptr [rsp + 0x20] ; call 0x200000f0309
0x000002000070fb9e : xor edx, edx ; mov eax, r10d ; ret
0x00000200001618cc : xor edx, edx ; mov eax, r8d ; div ecx ; ret
0x00000200005caad9 : xor edx, edx ; mov qword ptr [rax + 0x20], rdx ; jmp 0x20000486d3e
0x00000200005878d0 : xor edx, edx ; mov qword ptr [rsp + 0x20], r15 ; xor ecx, ecx ; call qword ptr [rsi]
0x0000020000463f24 : xor edx, edx ; mov r11d, eax ; call 0x20000093ab8
0x000002000024c59a : xor edx, edx ; mov rax, qword ptr [rax + 0x250] ; jmp rax
0x00000200005a942e : xor edx, edx ; mov rcx, qword ptr [rbp + 0x68] ; call r14
0x00000200003dc206 : xor edx, edx ; mov rcx, qword ptr [rbx + 8] ; call 0x20000068458
0x000002000042a471 : xor edx, edx ; mov rcx, r10 ; call 0x20000058018
0x000002000062bef8 : xor edx, edx ; mov rcx, r12 ; call 0x2000024d008
0x00000200005f44c8 : xor edx, edx ; mov rcx, r13 ; call r15
0x000002000046f307 : xor edx, edx ; mov rcx, r14 ; call 0x2000009e098
0x000002000070b635 : xor edx, edx ; mov rcx, r14 ; call 0x20000157887
0x000002000061d3f4 : xor edx, edx ; mov rcx, r14 ; call 0x2000024d008
0x00000200004a1db1 : xor edx, edx ; mov rcx, r15 ; call 0x2000009e097
0x0000020000528461 : xor edx, edx ; mov rcx, r15 ; call 0x20000157888
0x0000020000626b7f : xor edx, edx ; mov rcx, r15 ; call 0x2000024d008
0x00000200006235b0 : xor edx, edx ; mov rcx, r9 ; call 0x2000024d008
0x000002000043b66c : xor edx, edx ; mov rcx, rax ; call 0x20000157887
0x0000020000529b0a : xor edx, edx ; mov rcx, rax ; call 0x20000157888
0x0000020000474918 : xor edx, edx ; mov rcx, rbp ; call 0x2000009e098
0x0000020000220d75 : xor edx, edx ; mov rcx, rbp ; call 0x2000024d007
0x000002000062b81f : xor edx, edx ; mov rcx, rbp ; call 0x2000024d008
0x000002000043a964 : xor edx, edx ; mov rcx, rbx ; call 0x20000056b87
0x00000200004a1766 : xor edx, edx ; mov rcx, rbx ; call 0x200000ca368
0x00000200004cbebf : xor edx, edx ; mov rcx, rbx ; call 0x200000eef38
0x0000020000510d24 : xor edx, edx ; mov rcx, rbx ; call 0x2000024d007
0x000002000062392c : xor edx, edx ; mov rcx, rbx ; call 0x2000024d008
0x00000200006a2c7a : xor edx, edx ; mov rcx, rdi ; call 0x200000eef37
0x00000200004c7c71 : xor edx, edx ; mov rcx, rdi ; call 0x200000f02ac
0x00000200000e0cf8 : xor edx, edx ; mov rcx, rdi ; call 0x2000024d007
0x000002000061f47f : xor edx, edx ; mov rcx, rdi ; call 0x2000024d008
0x000002000053f5e2 : xor edx, edx ; mov rcx, rdi ; call r15
0x0000020000661a01 : xor edx, edx ; mov rcx, rdi ; mov ebx, eax ; call 0x2000001dcd9
0x0000020000536f91 : xor edx, edx ; mov rcx, rsi ; call 0x20000080e81
0x00000200004734b0 : xor edx, edx ; mov rcx, rsi ; call 0x2000009e098
0x0000020000580d0c : xor edx, edx ; mov rcx, rsi ; call 0x2000024d007
0x0000020000625625 : xor edx, edx ; mov rcx, rsi ; call 0x2000024d008
0x00000200001d2d0e : xor edx, edx ; mov rsi, rcx ; call 0x200000eef37
0x0000020000521efc : xor edx, edx ; mov rsi, rcx ; call 0x20000147f78
0x000002000054882b : xor edx, edx ; sub eax, dword ptr [rcx + 0xc] ; div dword ptr [rcx + 8] ; ret
0x000002000042eb33 : xor edx, edx ; test rax, rax ; jne 0x2000042eb45 ; mov al, dl ; ret
0x000002000042eb33 : xor edx, edx ; test rax, rax ; jne 0x2000042eb46 ; mov al, dl ; ret
0x000002000011cd2a : xor edx, edx ; xor ecx, ecx ; call rax
0x000002000060f9c9 : xor edx, esi ; ret
0x00000200005b3a02 : xor esi, 0x3d83ccff ; ret
0x000002000053d7a3 : xor esi, dword ptr [rbp + rax - 0x7c] ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x349
0x0000020000051120 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x000002000012d578 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x2b] ; ror byte ptr [rax - 0x75], 1 ; ret 0x2348
0x000002000020a21d : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x75] ; ret
0x000002000020fa6d : xor esi, dword ptr [rbx] ; xor edi, edi ; ret 0xbe49
0x000002000005111e : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x000002000020a21b : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x75] ; ret
0x000002000020fa6b : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor edi, edi ; ret 0xbe49
0x000002000005111c : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x000002000020a219 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x75] ; ret
0x000002000020fa69 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor edi, edi ; ret 0xbe49
0x00000200006f3bb2 : xor esi, dword ptr [rsi - 0x37e2c701] ; insd dword ptr [rdi], dx ; ret 0xfff
0x00000200007c5c33 : xor esi, ecx ; mov ch, 0xff ; jmp 0x200007c5c45
0x00000200006d4700 : xor esi, esi ; call 0x20000520940
0x00000200006cfbe9 : xor esi, esi ; jmp 0x200006cfbff
0x00000200006cff9e : xor esi, esi ; jmp 0x200006cffb4
0x000002000023fa6a : xor esi, esi ; mov rax, rdx ; jmp 0x2000023fa77
0x000002000042ec5c : xor esi, esi ; mov rcx, rdi ; call 0x2000005c1b8
0x0000020000074d7d : xor esi, esi ; ret
0x00000200000bfb2f : xor esp, dword ptr [rsi] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000045efc9 : xor esp, eax ; fdivp st(7) ; add rsp, 0x28 ; ret
0x0000020000589be7 : xor esp, edi ; dec dword ptr [rax - 0x7d] ; ret
0x000002000062da29 : xor esp, edi ; jmp qword ptr [rcx]
0x0000020000102f2b : xor esp, esp ; cld ; dec dword ptr [rax - 0x7d] ; ret
0x000002000010467c : xor esp, esp ; jmp 0x20000104531
0x00000200007c8023 : xor qword ptr [r13 - 0x73], rax ; or bpl, r8b ; ret 0x9836
0x000002000004b94e : xor qword ptr [r9 + 0x18], rax ; ret
0x00000200001d93b8 : xor qword ptr [rax], r8 ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000097e81 : xor qword ptr [rcx + 0x18], r9 ; ret
0x000002000002621f : xor qword ptr [rdx + 8], rax ; jmp 0x200000261ed
0x00000200000d4091 : xor qword ptr [rdx], rax ; jmp 0x200000d4043
0x0000020000031d4c : xor qword ptr [rdx], rax ; ret
0x000002000015f69e : xor r10b, r13b ; dec dword ptr [rax - 0x75] ; ret
0x000002000070fb9d : xor r10d, r10d ; mov eax, r10d ; ret
0x00000200003e4e55 : xor r10d, r9d ; mov eax, r10d ; ret
0x000002000046d794 : xor r11d, r11d ; mov r10d, r11d ; call 0x2000009a739
0x000002000023fd0e : xor r11d, r11d ; mov rax, rdx ; jmp 0x2000023fd1d
0x00000200002456c5 : xor r11d, r11d ; mov rax, rdx ; jmp 0x200002456d4
0x000002000010467b : xor r12d, r12d ; jmp 0x20000104532
0x000002000023d915 : xor r13d, r13d ; mov rax, rdx ; jmp 0x2000023d924
0x00000200000d23ba : xor r14b, r14b ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x0000020000479a09 : xor r14b, r14b ; xor edx, edx ; call 0x2000009e098
0x00000200006d46ff : xor r14d, r14d ; call 0x20000520941
0x00000200006cfbe8 : xor r14d, r14d ; jmp 0x200006cfc00
0x00000200006cff9d : xor r14d, r14d ; jmp 0x200006cffb5
0x00000200001fd20c : xor r15b, dil ; ret 0x533b
0x000002000044fccf : xor r15d, r15d ; xor ebp, ebp ; call 0x2000007a5e8
0x00000200004b566a : xor r8, qword ptr [rsi + r14*8] ; ret
0x0000020000213116 : xor r8, rax ; cmp r10, r11 ; jb 0x20000213103 ; ret
0x00000200004af273 : xor r8b, bpl ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x00000200006fedbe : xor r8b, bpl ; jmp rbx
0x0000020000487e77 : xor r8b, bpl ; ret 0xc5d4
0x00000200003fff25 : xor r8b, r13b ; in al, -0x5a ; sar bh, 0x8b ; ret
0x00000200004afc9b : xor r8b, r13b ; jle 0x200004afcff ; ret
0x00000200004af7d3 : xor r8b, r13b ; mov dh, 0x56 ; ret
0x00000200005f3d27 : xor r8b, r13b ; ret 0xb55a
0x00000200004494c5 : xor r8d, r8d ; call 0x2000006d766
0x0000020000519644 : xor r8d, r8d ; call 0x20000148a96
0x0000020000548244 : xor r8d, r8d ; jmp 0x20000548210
0x000002000051ed25 : xor r8d, r8d ; lea ecx, dword ptr [rdx + 0x62] ; call 0x20000148559
0x00000200003ed64c : xor r8d, r8d ; lea rcx, qword ptr [rbp - 0x59] ; xor edx, edx ; call qword ptr [rdi]
0x0000020000696ea5 : xor r8d, r8d ; lea rdx, qword ptr [rbp - 0x18] ; call 0x200006d3145
0x0000020000594f71 : xor r8d, r8d ; mov cl, 0x1b ; call rax
0x0000020000600b1c : xor r8d, r8d ; mov cl, bpl ; call rsi
0x00000200001a233c : xor r8d, r8d ; mov dl, 2 ; call 0x2000004e58f
0x0000020000122d54 : xor r8d, r8d ; mov dword ptr [rcx + 0x50], eax ; mov eax, r8d ; ret
0x000002000012a7b9 : xor r8d, r8d ; mov eax, r8d ; inc qword ptr [rdx + rax*8] ; ret
0x000002000013ddc5 : xor r8d, r8d ; mov eax, r8d ; ret
0x000002000015be89 : xor r8d, r8d ; mov rcx, r10 ; call r10
0x000002000015bc5c : xor r8d, r8d ; mov rcx, r11 ; call r11
0x0000020000501e2a : xor r8d, r8d ; mov rcx, rbx ; call 0x200000be128
0x00000200007ac143 : xor r8d, r8d ; mov rcx, rbx ; call 0x200003d07a1
0x00000200005255ee : xor r8d, r8d ; mov rcx, rdi ; call 0x20000148a99
0x000002000021d237 : xor r8d, r8d ; mov rcx, rdi ; mov rdx, rbx ; call rsi
0x00000200006e2dba : xor r8d, r8d ; mov rdx, r14 ; mov rcx, r15 ; call rax
0x000002000010f65b : xor r8d, r8d ; mov rdx, r9 ; call 0x2000004b900
0x00000200004a5a42 : xor r8d, r8d ; mov rdx, rbp ; call 0x20000081c84
0x0000020000041dcf : xor r8d, r8d ; mov rdx, rbx ; mov rcx, rdi ; call rsi
0x000002000017772d : xor r8d, r8d ; mov rdx, rsi ; call rax
0x000002000020f963 : xor r8d, r8d ; test r8, r8 ; jne 0x2000020f930 ; ret
0x00000200003e0f64 : xor r8d, r8d ; xor edx, edx ; call 0x2000000c030
0x00000200007c5ee6 : xor r8d, r8d ; xor edx, edx ; call 0x200000620f7
0x00000200003cc229 : xor r8d, r8d ; xor edx, edx ; call 0x20000068457
0x000002000047c556 : xor r8d, r8d ; xor edx, edx ; call 0x2000009e098
0x000002000049bb6c : xor r8d, r8d ; xor edx, edx ; call 0x200000bbbec
0x00000200001022c4 : xor r8d, r8d ; xor edx, edx ; call r9
0x00000200001a0309 : xor r8d, r8d ; xor edx, edx ; call rax
0x00000200004af8c6 : xor r9b, bpl ; ret
0x00000200005bd145 : xor r9b, r13b ; pop rcx ; ret 0xffe9
0x000002000066d4de : xor r9b, r9b ; mov al, r9b ; ret
0x00000200003e47bc : xor r9d, r8d ; mov eax, r9d ; ret
0x0000020000002484 : xor r9d, r9d ; call 0x200000ee695
0x0000020000002483 : xor r9d, r9d ; call 0x200000ee696
0x0000020000002482 : xor r9d, r9d ; call 0x200000ee697
0x00000200001c8b70 : xor r9d, r9d ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x00000200001fd353 : xor r9d, r9d ; mov eax, r9d ; ret
0x000002000051c1c6 : xor r9d, r9d ; mov r8d, esi ; call 0x20000148179
0x0000020000182427 : xor r9d, r9d ; mov rcx, rbx ; call 0x200000ee698
0x0000020000703bb3 : xor r9d, r9d ; test rax, rax ; jne 0x20000703bc4 ; ret
0x000002000017a171 : xor rax, r9 ; mov rcx, rax ; call rdx
0x000002000013b11a : xor rax, rax ; ret
0x0000020000145560 : xor rax, rdx ; xor rcx, rdx ; jmp rax
0x0000020000145563 : xor rcx, rdx ; jmp rax
0x00000200001aea65 : xor rcx, rsp ; call 0x2000013ac75
0x000002000050b139 : xor rcx, rsp ; call 0x2000013ac76
0x00000200005131b0 : xor rcx, rsp ; call 0x2000013ac77
0x00000200005147c4 : xor rcx, rsp ; call 0x2000013ac78
0x000002000078f162 : xor rdx, qword ptr [r10] ; mov dword ptr [r10], ecx ; mov rcx, r10 ; jmp rcx
0x00000200000ba4b4 : xor rdx, r8 ; mov qword ptr [rcx + 0x18], rdx ; ret
0x0000020000589be6 : xor sp, di ; dec dword ptr [rax - 0x7d] ; ret
0x000002000000fa26 : xrstor ptr [rcx] ; mov dword ptr [rcx + 0x18], r8d ; ret
0x000002000000fa35 : xrstor ptr [rcx] ; ret

Unique gadgets found: 58921
