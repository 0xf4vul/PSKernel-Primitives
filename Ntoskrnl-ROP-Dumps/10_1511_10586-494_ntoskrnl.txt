Gadgets information
============================================================
0x00000200002179f7 : adc ah, al ; ret 0x7d
0x00000200004bfbba : adc ah, al ; ret 0xe9ff
0x00000200006a35bc : adc ah, byte ptr [rax] ; cmp bh, bh ; adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x00000200006a36a0 : adc ah, byte ptr [rax] ; ret 0xff
0x00000200006a35c0 : adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x0000020000501bfb : adc al, 0 ; add byte ptr [rax - 0x6d7af0e0], ch ; ret 8
0x000002000050302c : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000089738 : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000002000060e7c9 : adc al, 0 ; add byte ptr [rax], al ; call 0x20000231ce7
0x000002000019c33b : adc al, 0 ; add byte ptr [rax], al ; ret
0x00000200001e2313 : adc al, 0 ; add byte ptr [rcx + 0x3a], al ; ret
0x0000020000146f52 : adc al, 0 ; add dl, bh ; add rsp, 8 ; ret
0x00000200001b3437 : adc al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001319c : adc al, 0 ; add rsp, 0x28 ; ret
0x0000020000182dc7 : adc al, 0 ; call 0x200000deff4
0x000002000052e15a : adc al, 0 ; call 0x2000014f4c5
0x0000020000182dfd : adc al, 0 ; call rax
0x000002000052f7fc : adc al, 0 ; lea rcx, qword ptr [rbp + 8] ; call 0x2000040ba20
0x00000200000170dd : adc al, 0 ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000045d9bb : adc al, 0 ; mov al, 1 ; add rsp, 0x38 ; ret
0x00000200001b2a6c : adc al, 0 ; mov byte ptr [rip + 0x1482dc], cl ; ret
0x000002000001764f : adc al, 0 ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x00000200001b3570 : adc al, 0 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000455c13 : adc al, 0 ; mov rcx, rdi ; call 0x200000c1e27
0x000002000000c96c : adc al, 0 ; ret
0x00000200001b139f : adc al, 0 ; shl eax, 0xc ; mov dword ptr [r8 + 0x28], eax ; ret
0x0000020000008f4c : adc al, 0 ; test r8d, r8d ; setne al ; ret
0x000002000001111d : adc al, 0 ; xor eax, eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000018cf1 : adc al, 0 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000012575 : adc al, 0 ; xor eax, eax ; ret
0x000002000006b3a8 : adc al, 0x11 ; add bh, bh ; ret
0x000002000049892b : adc al, 0x12 ; call 0x200000bab45
0x0000020000187533 : adc al, 0x12 ; int1 ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000498641 : adc al, 0x12 ; lea rcx, qword ptr [rbp + 0x40] ; call 0x200000bab49
0x00000200004a1028 : adc al, 0x18 ; ret 0x48ff
0x0000020000532b6c : adc al, 0x1d ; lock dec dword ptr [rax - 0x7d] ; ret
0x000002000075d1fc : adc al, 0x21 ; ret 0x48ff
0x000002000010cec5 : adc al, 0x22 ; ret 0xf45
0x0000020000510d68 : adc al, 0x24 ; ret 0x48ff
0x0000020000450fdb : adc al, 0x2b ; ret 0x341
0x000002000014f7cd : adc al, 0x2b ; ret 0xccc3
0x0000020000472038 : adc al, 0x33 ; call 0x2000003e334
0x0000020000210008 : adc al, 0x33 ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000527186 : adc al, 0x33 ; ror byte ptr [rax - 0x75], cl ; ret
0x000002000060ef6a : adc al, 0x36 ; call 0x20000231ce5
0x0000020000779e05 : adc al, 0x39 ; add al, ch ; ret
0x00000200001cf1b0 : adc al, 0x3e ; jrcxz 0x200001cf1bb ; add rsp, 0x48 ; ret
0x0000020000054e72 : adc al, 0x3f ; add eax, 0xcd034800 ; jmp rcx
0x00000200001bfbc1 : adc al, 0x41 ; cmp eax, 4 ; je 0x200001bfbd4 ; xor eax, eax ; ret
0x00000200001259c2 : adc al, 0x41 ; mov eax, dword ptr [rcx + 0x18] ; mov dword ptr [rdx + rcx + 0x1c], eax ; ret
0x000002000012edcc : adc al, 0x41 ; mov eax, eax ; add rsp, 0x28 ; ret
0x000002000002cd6c : adc al, 0x44 ; cmp eax, ecx ; jb 0x2000002cd53 ; ret
0x000002000002cd6b : adc al, 0x44 ; cmp eax, ecx ; jb 0x2000002cd54 ; ret
0x000002000050108c : adc al, 0x46 ; ret
0x000002000052ada8 : adc al, 0x47 ; ret 0x48ff
0x000002000000b3d5 : adc al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000005a896 : adc al, 0x48 ; add esp, 0x28 ; ret
0x00000200003a6d9d : adc al, 0x48 ; mov dword ptr [rcx + 0x70], eax ; mov dword ptr [rcx + 0x78], eax ; ret
0x00000200005cacbb : adc al, 0x48 ; mov ecx, esi ; call 0x200001f1807
0x00000200001f8b14 : adc al, 0x49 ; add eax, 0x14 ; jmp 0x200001f8b4a
0x00000200001f92d0 : adc al, 0x49 ; add eax, 0x14 ; jmp 0x200001f9306
0x000002000020313c : adc al, 0x49 ; and esp, 0xfffffffe ; jmp 0x20000203150
0x000002000044c958 : adc al, 0x49 ; mov eax, eax ; ret
0x00000200001b7cb5 : adc al, 0x49 ; mov eax, ecx ; add rsp, 0x28 ; ret
0x000002000049cd88 : adc al, 0x50 ; add dx, cx ; movzx eax, dx ; ret
0x00000200004641d1 : adc al, 0x56 ; add dx, r8w ; movzx r8d, dx ; jmp 0x20000464186
0x00000200007494d8 : adc al, 0x5e ; ret
0x000002000060b9c8 : adc al, 0x63 ; ret 0x4cff
0x0000020000541f2a : adc al, 0x67 ; or dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200001a632e : adc al, 0x72 ; xor al, 0xf7 ; ret 0x820
0x00000200000c8d09 : adc al, 0x74 ; adc dword ptr [rdi], ecx ; mov bh, 0x48 ; add al, byte ptr [rcx - 1] ; ret
0x00000200003dcf7f : adc al, 0x75 ; or bh, bh ; ret
0x000002000049a308 : adc al, 0x7b ; ret 0x41ff
0x00000200000396d9 : adc al, 0x7c ; in al, -1 ; ret
0x0000020000084caa : adc al, 0x7f ; xor al, 0x2b ; ret
0x00000200001b6c2a : adc al, 0x81 ; call rcx
0x0000020000466865 : adc al, 0x83 ; ret 0xe9c9
0x000002000068be85 : adc al, 0x85 ; sal byte ptr [rbp + 0x70], 0x8b ; push rdx ; sbb al, 0x8b ; ret 0x25
0x00000200006c0ea3 : adc al, 0x88 ; ret
0x000002000077df0c : adc al, 0x89 ; add eax, 0xffb84d11 ; ret
0x0000020000216af8 : adc al, 0x89 ; mov dword ptr [r8], edx ; ret
0x000002000014f7ca : adc al, 0x8b ; push rdx ; adc al, 0x2b ; ret 0xccc3
0x0000020000408bad : adc al, 0x8b ; ret
0x000002000052a213 : adc al, 0x8b ; ret 0x348
0x00000200000b25b5 : adc al, 0x8b ; ret 0x45f0
0x00000200000f938e : adc al, 0x8b ; ret 0xe8c1
0x00000200004b4704 : adc al, 0x8b ; ror dword ptr [rax - 0x75], -0x7c ; ret 0xf2c0
0x0000020000515da8 : adc al, 0x97 ; ret
0x00000200004b84a8 : adc al, 0x9f ; sar bh, 0x8b ; ret
0x000002000014dae8 : adc al, 0xa ; add byte ptr [rax], al ; nop ; ret
0x00000200005bef50 : adc al, 0xab ; test eax, 0x74c084ff ; adc edi, edi ; ret
0x000002000064dfd2 : adc al, 0xb0 ; jmp qword ptr [rcx]
0x00000200006abe68 : adc al, 0xb2 ; ret
0x00000200006c60df : adc al, 0xb4 ; dec dword ptr [rax - 0x73] ; or r8b, r13b ; ret 0xff9b
0x0000020000515488 : adc al, 0xb9 ; ret 0x48ff
0x000002000043926c : adc al, 0xc ; add byte ptr [rax], al ; jmp 0x20000439239
0x000002000015f945 : adc al, 0xc0 ; mov r8d, edx ; xor edx, edx ; call r10
0x00000200001202a5 : adc al, 0xc1 ; jbe 0x200001202a0 ; add eax, -1 ; jne 0x200001202a8 ; ret
0x000002000015f731 : adc al, 0xc2 ; call r10
0x0000020000512f68 : adc al, 0xc2 ; ret
0x0000020000546066 : adc al, 0xc3 ; mov eax, 2 ; ret
0x000002000003cd2a : adc al, 0xc3 ; shl rax, 0xa ; ret
0x00000200006da478 : adc al, 0xc4 ; mov esi, 0xfe0589ff ; ret
0x000002000060cb1c : adc al, 0xc5 ; or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x20000231ce9
0x0000020000209047 : adc al, 0xc8 ; add rsp, 0x28 ; ret
0x000002000049be67 : adc al, 0xc9 ; lea rcx, qword ptr [rdi + 0x10] ; call 0x200000bd1f5
0x0000020000161ff9 : adc al, 0xca ; in al, dx ; ljmp ptr [rcx + 0xd] ; push rcx ; ret 0x21
0x00000200006cc508 : adc al, 0xcb ; add eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000494dfd : adc al, 0xd5 ; add byte ptr [rax], al ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rcx ; ret 0x33ff
0x0000020000497aab : adc al, 0xd5 ; or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200000bb21d
0x00000200000abce4 : adc al, 0xe ; add byte ptr [rcx + 0x23], cl ; ret 0x2349
0x00000200006028f8 : adc al, 0xe7 ; ret 0x4cff
0x0000020000460694 : adc al, 0xe8 ; ret 0x210a
0x00000200003babb8 : adc al, 0xe8 ; ret 0xd945
0x000002000005d148 : adc al, 0xe8 ; ret 0xebf
0x00000200005989bc : adc al, 0xe9 ; lodsb al, byte ptr [rsi] ; ret 0xffe8
0x00000200003fbe0b : adc al, 0xeb ; mov edi, esi ; shl dword ptr [rbx], cl ; ret
0x00000200006857cc : adc al, 0xeb ; or dh, dh ; ret
0x0000020000162fa0 : adc al, 0xed ; dec dword ptr [rbp - 0x75] ; or byte ptr [rbx], al ; ret
0x00000200003fe69e : adc al, 0xf ; mov dh, 0x41 ; add qword ptr [r10 + 0x18], r8 ; ret
0x0000020000453af5 : adc al, 0xf6 ; ret
0x000002000043947a : adc al, 0xf6 ; ret 0xf01
0x000002000012c2e1 : adc al, 0xf6 ; ret 0xf02
0x0000020000482108 : adc al, 0xf8 ; ret
0x00000200003e6e2e : adc al, 0xff ; ret
0x000002000053208a : adc al, 0xff ; ret 0x8349
0x000002000005127c : adc al, 0xff ; ret 0x8b41
0x0000020000647d88 : adc al, 3 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200003e89d6 : adc al, 3 ; ret
0x0000020000031395 : adc al, 9 ; add byte ptr [rdi + rcx + 0x20], al ; ret 0xf44
0x0000020000018846 : adc al, 9 ; and edx, 8 ; je 0x2000001883d ; mov al, 1 ; ret
0x00000200007845a1 : adc al, al ; lea rcx, qword ptr [rsp + 0x50] ; call 0x20000140809
0x000002000057b1e3 : adc al, bpl ; jb 0x2000057b1a6 ; ret 0x44ff
0x0000020000507c1f : adc al, bpl ; jbe 0x20000507c08 ; ret 0x33ff
0x00000200007616b6 : adc al, bpl ; ret
0x00000200000500e3 : adc al, byte ptr [eax] ; ret
0x00000200001ad94c : adc al, byte ptr [r8] ; call rax
0x00000200000432c9 : adc al, byte ptr [r8] ; ret
0x00000200001f1312 : adc al, byte ptr [rax + rax] ; add cl, ch ; ret 2
0x000002000064d90b : adc al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x4466
0x0000020000048f20 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000001784a : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x000002000003449a : adc al, byte ptr [rax] ; add rax, r8 ; add rsp, 0x38 ; ret
0x000002000001fda4 : adc al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ab231 : adc al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000047845 : adc al, byte ptr [rax] ; add rsp, 0x38 ; pop r13 ; pop rdi ; ret
0x000002000003cd62 : adc al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x000002000001fcc3 : adc al, byte ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200001d7bbb : adc al, byte ptr [rax] ; call 0x200000628b9
0x000002000048f277 : adc al, byte ptr [rax] ; call 0x200000bcca9
0x0000020000487cb5 : adc al, byte ptr [rax] ; call 0x20000443ed4
0x00000200001ac3a6 : adc al, byte ptr [rax] ; call r9
0x00000200001ab17a : adc al, byte ptr [rax] ; call rax
0x00000200001ac0a0 : adc al, byte ptr [rax] ; je 0x200001ac0ad ; mov eax, ecx ; ret
0x00000200001ac09f : adc al, byte ptr [rax] ; je 0x200001ac0ae ; mov eax, ecx ; ret
0x00000200000059c2 : adc al, byte ptr [rax] ; jmp 0x200000058a4
0x0000020000110ad5 : adc al, byte ptr [rax] ; jmp 0x20000110a9f
0x00000200001ce5fa : adc al, byte ptr [rax] ; jmp 0x200001ce620
0x00000200001aeaf0 : adc al, byte ptr [rax] ; lea ecx, dword ptr [rax + 0x7b] ; call r9
0x000002000048a711 : adc al, byte ptr [rax] ; lea r9, qword ptr [r8 + rdx*4] ; jmp 0x200005b6969
0x0000020000035d2f : adc al, byte ptr [rax] ; lea rcx, qword ptr [rsp + 0x50] ; call 0x20000091f49
0x0000020000485eab : adc al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000045709 : adc al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000485e8d : adc al, byte ptr [rax] ; mov al, 1 ; ret
0x000002000048cf56 : adc al, byte ptr [rax] ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000046a4c : adc al, byte ptr [rax] ; mov al, r9b ; add rsp, 0x28 ; ret
0x000002000003e4a0 : adc al, byte ptr [rax] ; mov byte ptr [rip + 0x2bc61a], dl ; ret
0x00000200001bfc44 : adc al, byte ptr [rax] ; mov dword ptr [rcx], eax ; ret
0x0000020000057f8d : adc al, byte ptr [rax] ; mov eax, 0xc00000bb ; ret
0x000002000048d64a : adc al, byte ptr [rax] ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000003d7e3 : adc al, byte ptr [rax] ; mov eax, r10d ; jmp 0x2000003d7c7
0x0000020000054927 : adc al, byte ptr [rax] ; mov qword ptr [rax + 8], rcx ; mov qword ptr [rdx], rcx ; ret
0x00000200000548e8 : adc al, byte ptr [rax] ; mov qword ptr [rax], rcx ; mov qword ptr [rdx + 8], rcx ; ret
0x000002000005495b : adc al, byte ptr [rax] ; mov qword ptr [rdx + 8], rcx ; mov qword ptr [rax], rcx ; ret
0x000002000003b594 : adc al, byte ptr [rax] ; mov rax, r10 ; add rsp, 0x28 ; ret
0x0000020000032b94 : adc al, byte ptr [rax] ; mov rax, rcx ; add rsp, 0x38 ; ret
0x0000020000498cb3 : adc al, byte ptr [rax] ; mov rcx, r14 ; call 0x200000c1b38
0x000002000048e388 : adc al, byte ptr [rax] ; mov rcx, rax ; call 0x200000bcd18
0x0000020000036482 : adc al, byte ptr [rax] ; ret
0x00000200001cb949 : adc al, byte ptr [rax] ; ret 0
0x00000200004878b0 : adc al, byte ptr [rax] ; test rdx, rdx ; je 0x200004878a0 ; ret
0x00000200000435f8 : adc al, byte ptr [rax] ; xor al, al ; ret
0x0000020000043268 : adc al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000036201 : adc al, byte ptr [rax] ; xor eax, eax ; ret
0x0000020000782bed : adc al, byte ptr [rbx + rcx*4 + 5] ; ret
0x00000200003a07a0 : adc al, byte ptr [rcx + 0x3b] ; ret
0x000002000058bd4b : adc al, byte ptr [rcx + 0x3b] ; ret 0x820f
0x00000200000cc7c6 : adc al, byte ptr [rcx + 0xf] ; mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret
0x000002000059f39a : adc al, byte ptr [rcx + 0xf] ; mov bh, 0x45 ; add byte ptr [rcx + 3], al ; ret
0x00000200000d3067 : adc al, byte ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x0000020000488285 : adc al, byte ptr [rcx - 0x75] ; ror byte ptr [rax + 0x3b], 0x4c ; ret 0x7470
0x00000200001448b5 : adc al, byte ptr [rcx - 0x7d] ; ret
0x00000200004d173b : adc al, byte ptr [rcx - 1] ; ret 0x8349
0x0000020000138222 : adc al, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200000550d1 : adc al, byte ptr cs:[rax] ; ret
0x00000200001afe1f : adc al, byte ptr es:[rax] ; call r9
0x00000200001abfd6 : adc al, byte ptr fs:[rax] ; call rax
0x0000020000594141 : adc al, ch ; cdq ; ret 0xffba
0x00000200005134ac : adc al, ch ; cli ; pop rbp ; ret 0x48ff
0x000002000057b1e4 : adc al, ch ; jb 0x2000057b1a5 ; ret 0x44ff
0x00000200004efba8 : adc al, ch ; jbe 0x200004efc28 ; ret 0x44ff
0x0000020000507c20 : adc al, ch ; jbe 0x20000507c07 ; ret 0x33ff
0x00000200001e927b : adc al, ch ; jmp rax
0x000002000049be6c : adc al, ch ; jp 0x2000049be87 ; ret 0x48ff
0x00000200004ad620 : adc al, ch ; pop rdx ; lodsd eax, dword ptr [rsi] ; ret
0x00000200004adb87 : adc al, ch ; repe cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000020000131d37 : adc al, ch ; ret
0x00000200005373b0 : adc al, ch ; ret 0xb122
0x00000200005f1d18 : adc al, ch ; ret 0xc3ff
0x00000200004ad6c5 : adc al, ch ; xor eax, 0xe9ffba14 ; ret 0xfffc
0x00000200004adb86 : adc al, r13b ; repe cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000020000115a9c : adc bh, bh ; ret
0x0000020000681e7f : adc bh, bh ; ret 0xca8b
0x000002000016fb1d : adc bh, bh ; ret 0xd03b
0x00000200003b702b : adc bh, bh ; ret 0xe2c1
0x00000200001a7045 : adc bh, bh ; ret 0xff49
0x0000020000061f21 : adc bh, bh ; ret 0xffb8
0x0000020000599773 : adc bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; adc byte ptr [rcx + 0x3b], al ; ret 0xe772
0x00000200005fd7fa : adc bh, byte ptr [rax] ; ret
0x00000200006ac796 : adc bh, byte ptr [rcx] ; ret
0x0000020000204d62 : adc bh, byte ptr [rdx] ; jrcxz 0x20000204d6d ; add rsp, 0x38 ; ret
0x0000020000044d3a : adc bh, ch ; ret
0x0000020000072272 : adc bh, dh ; ret 0xffc9
0x00000200001a5795 : adc bl, al ; and qword ptr [r8], 0 ; ret
0x00000200004cd484 : adc bl, al ; lea rax, qword ptr [rip - 0x1d566d] ; ret
0x00000200003ae4be : adc bl, al ; mov al, 8 ; ret
0x000002000046dfbd : adc bl, al ; xor eax, eax ; ret
0x0000020000760642 : adc bl, bpl ; add eax, 0xff098b48 ; ret
0x00000200004f58bf : adc bl, byte ptr [rbx + 9] ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000c1b39
0x00000200004c0d32 : adc bl, byte ptr [rcx] ; ret 0x41ff
0x000002000075e2b4 : adc bl, byte ptr [rdi + 0x3d8948ff] ; jp 0x2000075e2d5 ; ret 0x8bff
0x0000020000760643 : adc bl, ch ; add eax, 0xff098b48 ; ret
0x00000200003c9a62 : adc bl, ch ; cmovs ecx, dword ptr [rbp - 0x74b3e7b0] ; ret
0x00000200004286f2 : adc bl, ch ; or byte ptr [rax - 0x75], 0xcf ; call 0x2000004eb09
0x00000200000d1f24 : adc bl, ch ; ret
0x000002000020329e : adc bl, ch ; sub byte ptr [rax - 0x73], cl ; mov bh, bh ; ret
0x0000020000087377 : adc byte ptr [r11 + 0xb4803e0], al ; ret 0x8949
0x00000200000d30dc : adc byte ptr [r11 + 0xb4903e0], al ; ret 0x8949
0x00000200005f1a08 : adc byte ptr [r11], al ; ret
0x00000200005fa04e : adc byte ptr [r11], bpl ; ret 0x348
0x000002000017919a : adc byte ptr [r11], bpl ; ret 0x8948
0x0000020000638029 : adc byte ptr [r11], r12b ; ret 0x8948
0x0000020000438c8c : adc byte ptr [r11], r15b ; ret
0x0000020000084d50 : adc byte ptr [r11], r8b ; ret
0x0000020000084c9a : adc byte ptr [r11], r8b ; ret 0xf633
0x00000200001bfbed : adc byte ptr [r11], sil ; rol byte ptr [rcx + 0x38], cl ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc28b
0x00000200000bd228 : adc byte ptr [r13 - 0x27], sil ; lea rax, qword ptr [r9 - 0x10] ; ret
0x0000020000024a9c : adc byte ptr [r13 - 0x73], cl ; adc byte ptr [r8 - 0x7d], cl ; ret 0x4918
0x000002000001694f : adc byte ptr [r13 - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4d], 0x3b ; ret
0x00000200004d37d2 : adc byte ptr [r13 - 9], sil ; mov eax, 1 ; ret
0x0000020000523e84 : adc byte ptr [r14 + rax + 0x48], sil ; add esp, 0x40 ; pop rbx ; ret
0x000002000058a668 : adc byte ptr [r14], al ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x8941
0x00000200006aaf84 : adc byte ptr [r15 + rcx - 0x49], r8b ; ret
0x0000020000037966 : adc byte ptr [r15], cl ; adc dword ptr [rdx + 0x10], ecx ; ret
0x0000020000097288 : adc byte ptr [r15], r9b ; xchg eax, edx ; ret 0xf49
0x00000200000be63c : adc byte ptr [r8 + 0x23], cl ; ret 0x3148
0x000002000003e539 : adc byte ptr [r8 + 0x23], cl ; ret 0x3b48
0x000002000041b1e2 : adc byte ptr [r8 + 0x2b], cl ; ret
0x000002000018a877 : adc byte ptr [r8 + 0x2b], r9b ; ret 0x8d48
0x000002000013da4e : adc byte ptr [r8 + 0x33], cl ; ret 0x3348
0x0000020000037b62 : adc byte ptr [r8 + 0x3b], cl ; ret 0x850f
0x00000200003bbff9 : adc byte ptr [r8 + 0x3b], cl ; ret 0x9577
0x0000020000037b6f : adc byte ptr [r8 + 0x3b], cl ; ret 0x9974
0x000002000014691c : adc byte ptr [r8 + 0xf], cl ; ret
0x00000200001f506e : adc byte ptr [r8 + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x00000200001a379f : adc byte ptr [r8 + 1], cl ; adc dword ptr [rcx - 1], eax ; ret 0x8d48
0x00000200006bc594 : adc byte ptr [r8 + rcx*4 + 0x7c], r8b ; and al, 0x20 ; call r12
0x000002000017e627 : adc byte ptr [r8 - 0x3f], r9b ; call 0x1ffc29c2745
0x0000020000023697 : adc byte ptr [r8 - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000010549d : adc byte ptr [r8 - 0x75], cl ; or edi, edi ; ret 0xe8eb
0x0000020000084f87 : adc byte ptr [r8 - 0x75], cl ; ret
0x0000020000774d4c : adc byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x0000020000097d1f : adc byte ptr [r8 - 0x75], cl ; ret 0xc148
0x000002000042d728 : adc byte ptr [r8 - 0x75], cl ; ret 0xffba
0x00000200001c3431 : adc byte ptr [r8 - 0x75], cl ; sub byte ptr [r8 + 3], cl ; ret 0x349
0x000002000021ded9 : adc byte ptr [r8 - 0x75], cl ; xor byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x0000020000203e1e : adc byte ptr [r8 - 0x75], r9b ; ret 0x2349
0x000002000041b1ec : adc byte ptr [r8 - 0x75], r9b ; xor byte ptr [r8 + 0x2b], cl ; ret
0x000002000020e2d1 : adc byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4818
0x0000020000577220 : adc byte ptr [r8 - 0x77], r9b ; or cl, bpl ; ret
0x00000200000248fc : adc byte ptr [r8 - 0x7b], cl ; leave ; jne 0x200000248fe ; ret
0x00000200004d6a19 : adc byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000200000a552a : adc byte ptr [r8 - 0x7d], cl ; ret
0x0000020000024aa0 : adc byte ptr [r8 - 0x7d], cl ; ret 0x4918
0x00000200001fd923 : adc byte ptr [r8 - 0x7d], r9b ; ret
0x00000200005e650c : adc byte ptr [r8 - 1], r9b ; ret 0x3966
0x00000200001c9ede : adc byte ptr [r8], r8b ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x000002000019f5a1 : adc byte ptr [r9 + 0x23], r8b ; ret
0x000002000002b7e6 : adc byte ptr [r9 + 0x2b], al ; ret 0x2b41
0x0000020000216b1d : adc byte ptr [r9 + rcx*4 + 4], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000020000766862 : adc byte ptr [r9 - 0x39], cl ; ret
0x000002000021cee8 : adc byte ptr [r9 - 0x75], al ; ret 0x8949
0x0000020000521b80 : adc byte ptr [r9 - 0x75], cl ; or byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x00000200007318f5 : adc byte ptr [r9 - 0x75], cl ; ret
0x000002000060ed56 : adc byte ptr [r9 - 0x75], r8b ; salc ; call 0x20000231018
0x00000200003a683c : adc byte ptr [r9 - 1], al ; ret
0x000002000015db04 : adc byte ptr [rax + 0x10], al ; xor eax, eax ; movups xmmword ptr [rdx], xmm0 ; ret
0x0000020000081636 : adc byte ptr [rax + 0x23], cl ; fisttp word ptr [rax + 0xb] ; ret
0x00000200000be63d : adc byte ptr [rax + 0x23], cl ; ret 0x3148
0x000002000003e53a : adc byte ptr [rax + 0x23], cl ; ret 0x3b48
0x00000200000298f8 : adc byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x00000200003cc54f : adc byte ptr [rax + 0x2b], cl ; fimul dword ptr [rax - 0x75] ; ret
0x000002000041b1e3 : adc byte ptr [rax + 0x2b], cl ; ret
0x000002000018a878 : adc byte ptr [rax + 0x2b], cl ; ret 0x8d48
0x00000200000a9f16 : adc byte ptr [rax + 0x33], cl ; add cl, byte ptr [rcx + 0x23] ; ret
0x00000200000a9e21 : adc byte ptr [rax + 0x33], cl ; add dword ptr [rcx + 0x23], ecx ; ret
0x0000020000231e0c : adc byte ptr [rax + 0x33], cl ; ret
0x000002000013da4f : adc byte ptr [rax + 0x33], cl ; ret 0x3348
0x000002000017951c : adc byte ptr [rax + 0x39], cl ; add byte ptr [rbp + 0xf], cl ; ret
0x000002000003c5b1 : adc byte ptr [rax + 0x3b], cl ; ret
0x00000200000f1e3c : adc byte ptr [rax + 0x3b], cl ; ret 0x460f
0x0000020000037b63 : adc byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200003bbffa : adc byte ptr [rax + 0x3b], cl ; ret 0x9577
0x0000020000037b70 : adc byte ptr [rax + 0x3b], cl ; ret 0x9974
0x00000200001faaba : adc byte ptr [rax + 0x3b], cl ; ret 0xb75
0x0000020000025800 : adc byte ptr [rax + 0x3b], cl ; ret 0xea75
0x00000200004f60c6 : adc byte ptr [rax + 0x3b], cl ; ret 0xf072
0x0000020000452acf : adc byte ptr [rax + 0x48fffff5], al ; add esp, 0x28 ; ret
0x00000200001bec89 : adc byte ptr [rax + 0x50], cl ; movups xmmword ptr [r9 + 0x50], xmm1 ; ret
0x000002000002c1e6 : adc byte ptr [rax + 0x5c8b4801], dh ; and al, 8 ; ret
0x000002000067d398 : adc byte ptr [rax + 0x63], cl ; ret 0x8348
0x00000200006c2877 : adc byte ptr [rax + 0xb], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0xc148
0x000002000014691d : adc byte ptr [rax + 0xf], cl ; ret
0x00000200001f506f : adc byte ptr [rax + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x000002000000f577 : adc byte ptr [rax + 1], bh ; ret
0x00000200001a37a0 : adc byte ptr [rax + 1], cl ; adc dword ptr [rcx - 1], eax ; ret 0x8d48
0x000002000014aa4f : adc byte ptr [rax + 2], bh ; nop ; nop ; add rsp, 0x10 ; ret
0x00000200005175e4 : adc byte ptr [rax + 3], cl ; ret
0x00000200001da92c : adc byte ptr [rax + 3], cl ; ror byte ptr [rax - 0x75], 4 ; ret 0x8549
0x0000020000017797 : adc byte ptr [rax + 3], cl ; ror byte ptr [rcx - 0x77], 2 ; mov eax, ecx ; ret
0x00000200005175e3 : adc byte ptr [rax + 3], r9b ; ret
0x00000200001ab928 : adc byte ptr [rax + rax - 0x74b80000], 4 ; ret 0x888b
0x00000200001ab93f : adc byte ptr [rax + rax - 0x74b80000], 4 ; ret 0x8b48
0x00000200000d07b8 : adc byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0x0000020000407bcd : adc byte ptr [rax + rcx*4 + 0x6b], al ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000200006bc595 : adc byte ptr [rax + rcx*4 + 0x7c], al ; and al, 0x20 ; call r12
0x000002000006ca04 : adc byte ptr [rax + rdx + 0x10], al ; movups xmmword ptr [rcx + rdx + 0x10], xmm0 ; ret
0x00000200004ce9a0 : adc byte ptr [rax + rsi - 1], dh ; ret 0x3b41
0x00000200003e45c8 : adc byte ptr [rax - 0x17f08bff], ch ; scasb al, byte ptr [rdi] ; ret
0x00000200000dee7b : adc byte ptr [rax - 0x3f], cl ; call 0x1ffc2313693
0x000002000017e628 : adc byte ptr [rax - 0x3f], cl ; call 0x1ffc29c2744
0x000002000003a457 : adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000041197b : adc byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200001bfa86 : adc byte ptr [rax - 0x3fffffff], bh ; ret
0x0000020000037b5f : adc byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0x850f
0x00000200004ea4cd : adc byte ptr [rax - 0x73], cl ; add eax, 0x628eb ; ret
0x000002000076a97a : adc byte ptr [rax - 0x73], cl ; add eax, 0xff988536 ; ret
0x000002000050fa55 : adc byte ptr [rax - 0x73], cl ; fucompi st(0) ; cdqe ; ret 0x48ff
0x000002000022d02d : adc byte ptr [rax - 0x73], cl ; or byte ptr [rbp + 0x2b], cl ; ret
0x00000200004862d1 : adc byte ptr [rax - 0x73], cl ; push rbp ; ret
0x00000200006249c5 : adc byte ptr [rax - 0x7400000b], al ; ret
0x0000020000595939 : adc byte ptr [rax - 0x74fff881], al ; ret
0x00000200003bbff6 : adc byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0x9577
0x00000200000412ee : adc byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000047017b : adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x840f
0x00000200001fa3b1 : adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 1] ; add dword ptr [rax - 0x7d], ecx ; ret 0xeb18
0x00000200001aec9d : adc byte ptr [rax - 0x75], cl ; add eax, 0x1237d3 ; call rax
0x00000200001ae27d : adc byte ptr [rax - 0x75], cl ; add eax, 0x1241f3 ; call rax
0x0000020000023698 : adc byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000050443f : adc byte ptr [rax - 0x75], cl ; and r8b, r13b ; push rdi ; leave ; ret
0x0000020000218421 : adc byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x7d] ; ret 0x4160
0x0000020000012b5e : adc byte ptr [rax - 0x75], cl ; iretd ; call 0x200000bee66
0x0000020000641277 : adc byte ptr [rax - 0x75], cl ; iretd ; call r8
0x00000200006c0469 : adc byte ptr [rax - 0x75], cl ; iretd ; call rax
0x00000200004653a4 : adc byte ptr [rax - 0x75], cl ; or eax, 0xffeb405c ; call rax
0x000002000010549e : adc byte ptr [rax - 0x75], cl ; or edi, edi ; ret 0xe8eb
0x00000200000872b0 : adc byte ptr [rax - 0x75], cl ; pop rsp ; and al, 0x20 ; pop rdi ; ret
0x000002000020bedc : adc byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x000002000000f8e3 : adc byte ptr [rax - 0x75], cl ; push rsp ; ret 0x4518
0x000002000000a02d : adc byte ptr [rax - 0x75], cl ; ret
0x0000020000203e1f : adc byte ptr [rax - 0x75], cl ; ret 0x2349
0x0000020000774d4d : adc byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000022bae : adc byte ptr [rax - 0x75], cl ; ret 0x49f0
0x0000020000189438 : adc byte ptr [rax - 0x75], cl ; ret 0x8348
0x0000020000632d45 : adc byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200004251a3 : adc byte ptr [rax - 0x75], cl ; ret 0x8941
0x00000200004e7721 : adc byte ptr [rax - 0x75], cl ; ret 0x8948
0x00000200000818b3 : adc byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000d9d05 : adc byte ptr [rax - 0x75], cl ; ret 0xb948
0x000002000041667b : adc byte ptr [rax - 0x75], cl ; ret 0xba41
0x0000020000081bbc : adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200001fa237 : adc byte ptr [rax - 0x75], cl ; ret 0xd148
0x0000020000204f66 : adc byte ptr [rax - 0x75], cl ; ret 0xe283
0x0000020000022b3a : adc byte ptr [rax - 0x75], cl ; ret 0xf49
0x00000200000055f1 : adc byte ptr [rax - 0x75], cl ; ret 0xff48
0x000002000042d729 : adc byte ptr [rax - 0x75], cl ; ret 0xffba
0x0000020000456f82 : adc byte ptr [rax - 0x75], cl ; retf ; call 0x2000008239f
0x0000020000443d73 : adc byte ptr [rax - 0x75], cl ; retf ; call 0x200004a0066
0x00000200006c0355 : adc byte ptr [rax - 0x75], cl ; retf ; call rax
0x000002000017cec2 : adc byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x7d], 1 ; ret 0x4540
0x0000020000534b96 : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [r11], dil ; ret
0x0000020000217a10 : adc byte ptr [rax - 0x75], cl ; sbb spl, al ; ret 0x7d
0x00000200001c3432 : adc byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 3], cl ; ret 0x349
0x000002000041b1ed : adc byte ptr [rax - 0x75], cl ; xor byte ptr [r8 + 0x2b], cl ; ret
0x000002000021deda : adc byte ptr [rax - 0x75], cl ; xor byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x0000020000193709 : adc byte ptr [rax - 0x75], cl ; xor r8b, bpl ; ret 0xfff2
0x000002000063b554 : adc byte ptr [rax - 0x77], cl ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x000002000063d776 : adc byte ptr [rax - 0x77], cl ; je 0x2000063d7a6 ; push rax ; inc edx ; jmp 0x2000063d764
0x00000200000402ba : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x174
0x000002000008a950 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x4475
0x00000200001f3064 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0x775
0x000002000002ed0b : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax + 0x3b], cl ; ret 0xa75
0x000002000020e2d2 : adc byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4818
0x0000020000577221 : adc byte ptr [rax - 0x77], cl ; or cl, bpl ; ret
0x00000200004738a2 : adc byte ptr [rax - 0x77], cl ; push rax ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000604312 : adc byte ptr [rax - 0x7b], cl ; leave ; je 0x20000604326 ; call 0x20000231019
0x00000200000248fd : adc byte ptr [rax - 0x7b], cl ; leave ; jne 0x200000248fd ; ret
0x00000200004d6a1a : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000020000521b63 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; in eax, dx ; ret 0xa
0x000002000046be18 : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x8b ; retf ; call rax
0x00000200001f504e : adc byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x00000200000af322 : adc byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x000002000017e588 : adc byte ptr [rax - 0x7bbadda9], cl ; ret 0x3075
0x0000020000407b9c : adc byte ptr [rax - 0x7cb7efbd], cl ; ret
0x00000200003bb674 : adc byte ptr [rax - 0x7d], cl ; call 0x1ffc376fea3
0x0000020000036738 : adc byte ptr [rax - 0x7d], cl ; call 0x1ffc3f2dc48
0x00000200004002ad : adc byte ptr [rax - 0x7d], cl ; call 0x1ffc42f77bd
0x0000020000121fa7 : adc byte ptr [rax - 0x7d], cl ; jmp 0x1ffc3fe94b7
0x000002000004dbc7 : adc byte ptr [rax - 0x7d], cl ; ret
0x00000200001f29b7 : adc byte ptr [rax - 0x7d], cl ; ret 0x310
0x00000200004e5c7b : adc byte ptr [rax - 0x7d], cl ; ret 0x4128
0x000002000010658a : adc byte ptr [rax - 0x7d], cl ; ret 0x4408
0x00000200003b942c : adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000206196 : adc byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000053d840 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x0000020000024aa1 : adc byte ptr [rax - 0x7d], cl ; ret 0x4918
0x000002000052e5fe : adc byte ptr [rax - 0x7d], cl ; ret 0x4930
0x00000200003d8434 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x000002000010d4d8 : adc byte ptr [rax - 0x7d], cl ; ret 0xe804
0x00000200004a140d : adc byte ptr [rax - 0x7d], cl ; ret 0xe820
0x0000020000419288 : adc byte ptr [rax - 0x7d], cl ; ret 0xe920
0x00000200001f98c3 : adc byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000200005cef41 : adc byte ptr [rax - 0x7d], cl ; ret 0xff14
0x00000200001c6f73 : adc byte ptr [rax - 0x7d], r9b ; ret
0x0000020000106589 : adc byte ptr [rax - 0x7d], r9b ; ret 0x4408
0x000002000009a3b1 : adc byte ptr [rax - 0x7f], cl ; ret
0x000002000005b6bc : adc byte ptr [rax - 0x7f], cl ; ret 0x1000
0x000002000073bfae : adc byte ptr [rax - 0x7f], cl ; ret 0xe10
0x0000020000580f37 : adc byte ptr [rax - 1], cl ; ret
0x00000200005e650d : adc byte ptr [rax - 1], cl ; ret 0x3966
0x00000200001e3249 : adc byte ptr [rax - 1], cl ; ret 0x789
0x000002000013539f : adc byte ptr [rax - 1], cl ; ret 0xff49
0x00000200003ee489 : adc byte ptr [rax - 9], cl ; ret
0x0000020000503c4a : adc byte ptr [rax], 0x1f ; add byte ptr [rax], al ; ret
0x000002000052b6b5 : adc byte ptr [rax], ah ; add byte ptr [rax], al ; call 0x2000014f4c7
0x00000200001312ad : adc byte ptr [rax], al ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003773f : adc byte ptr [rax], al ; add al, al ; add rsp, 0x28 ; ret
0x0000020000536ce7 : adc byte ptr [rax], al ; add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001b0483 : adc byte ptr [rax], al ; add bh, bh ; ret
0x00000200000312d5 : adc byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret
0x000002000045c976 : adc byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xea75
0x0000020000747830 : adc byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc397c14c
0x0000020000020adb : adc byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001b28b7 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001469d4 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x00000200001c3d4c : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200005414cf : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000200001a6de0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000046b458 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x000002000049288c : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000076b104 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x00000200005146bc : adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x20000140487
0x000002000019bdac : adc byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000200004967ae : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000046bc9 : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000665b8a : adc byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret
0x00000200005b7a02 : adc byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret 0xe472
0x00000200003ddffe : adc byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x00000200001623a1 : adc byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b41
0x0000020000175754 : adc byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xc123
0x00000200006b96d7 : adc byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x2173
0x00000200001002ec : adc byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x830f
0x00000200005b78b7 : adc byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0xa9
0x00000200000a03c3 : adc byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x0000020000424e8e : adc byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; add al, byte ptr [rbp + 0x3b] ; ret
0x00000200000ea975 : adc byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000122b2f : adc byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000200003c8ed7 : adc byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x00000200004390d8 : adc byte ptr [rax], al ; add byte ptr [rcx - 1], al ; or byte ptr [rax + 0x3b], cl ; ret 0xe872
0x00000200003c8ee2 : adc byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200004037b2 : adc byte ptr [rax], al ; add byte ptr [rdi + 0x50], dh ; add rsp, 0x38 ; ret
0x00000200001d2e4f : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; mov edx, 0x820f13e1 ; ret
0x00000200000ff4ba : adc byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x35e9
0x00000200006ce3ae : adc byte ptr [rax], al ; add dh, dh ; ret
0x00000200006ca9ce : adc byte ptr [rax], al ; add dh, dh ; ret 0x7508
0x00000200005f1ed1 : adc byte ptr [rax], al ; add rax, qword ptr [rip - 0x2f80d2] ; ret
0x000002000003bf80 : adc byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000219c06 : adc byte ptr [rax], al ; add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x000002000006f24a : adc byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000051c2e4 : adc byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000021a541 : adc byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x000002000002502f : adc byte ptr [rax], al ; add rsp, 0x78 ; ret
0x0000020000149360 : adc byte ptr [rax], al ; add rsp, 8 ; ret
0x00000200004c40dc : adc byte ptr [rax], al ; call 0x200000ebe25
0x00000200001c9dd9 : adc byte ptr [rax], al ; call qword ptr [rax]
0x000002000007076d : adc byte ptr [rax], al ; cmp rax, rcx ; jne 0x200000707aa ; mov al, 1 ; ret
0x00000200001beeec : adc byte ptr [rax], al ; je 0x200001beeff ; mov eax, 0xc0000354 ; ret
0x0000020000066c9c : adc byte ptr [rax], al ; jne 0x20000066ccb ; xor al, al ; ret
0x000002000008616b : adc byte ptr [rax], al ; jne 0x20000086174 ; ret
0x00000200000d397b : adc byte ptr [rax], al ; jne 0x200000d3984 ; ret
0x00000200000d39ae : adc byte ptr [rax], al ; jne 0x200000d39df ; cmp eax, 2 ; jl 0x200000d39c1 ; ret
0x00000200000732cd : adc byte ptr [rax], al ; lea rax, qword ptr [rip + 0xdd14a] ; ret
0x0000020000073354 : adc byte ptr [rax], al ; lea rax, qword ptr [rip + 0xdec73] ; ret
0x000002000007a83e : adc byte ptr [rax], al ; mov eax, r9d ; ret
0x00000200000529c6 : adc byte ptr [rax], al ; mov qword ptr [r8], rcx ; ret
0x00000200001f247f : adc byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001c9d8b : adc byte ptr [rax], al ; mov rbx, rcx ; call qword ptr [rax]
0x00000200001c9edf : adc byte ptr [rax], al ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200004c35c4 : adc byte ptr [rax], al ; mov rcx, rdi ; call 0x200000ea7c8
0x00000200004c3778 : adc byte ptr [rax], al ; mov rcx, rdx ; call 0x200000ea7c8
0x00000200001c9c99 : adc byte ptr [rax], al ; mov rsi, rdx ; mov rbx, rcx ; call qword ptr [rax]
0x0000020000608440 : adc byte ptr [rax], al ; movsd qword ptr [rax], xmm0 ; xor eax, eax ; ret
0x000002000007065e : adc byte ptr [rax], al ; ret
0x00000200005f2e99 : adc byte ptr [rax], al ; test rax, rax ; je 0x200005f2eab ; jmp qword ptr [rax]
0x0000020000527be5 : adc byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000079139 : adc byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000071197 : adc byte ptr [rax], al ; xor eax, eax ; ret
0x0000020000126a7e : adc byte ptr [rax], bh ; adc byte ptr [rdi + r8 - 1], r14b ; ret 0x3b41
0x00000200003cbc3c : adc byte ptr [rax], ch ; lea ebp, dword ptr [rdi] ; ret
0x0000020000126a7d : adc byte ptr [rax], dil ; adc byte ptr [rdi + r8 - 1], r14b ; ret 0x3b41
0x000002000006ca06 : adc byte ptr [rax], dl ; movups xmmword ptr [rcx + rdx + 0x10], xmm0 ; ret
0x00000200005f5e08 : adc byte ptr [rax], dl ; sar bh, cl ; add rsp, 0x40 ; pop rbx ; ret
0x000002000006ca05 : adc byte ptr [rax], r10b ; movups xmmword ptr [rcx + rdx + 0x10], xmm0 ; ret
0x00000200001c9f81 : adc byte ptr [rax], r8b ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x0000020000037448 : adc byte ptr [rbp + 0x13], dh ; mov qword ptr [rax], r8 ; ret
0x00000200003e6946 : adc byte ptr [rbp + 0x2b], al ; ret
0x000002000020d718 : adc byte ptr [rbp + 0x3b], al ; ret 0x4d73
0x00000200000634f5 : adc byte ptr [rbp + 0x3b], cl ; ret
0x000002000022d4ee : adc byte ptr [rbp + 0x3b], cl ; ret 0xb272
0x000002000041b27c : adc byte ptr [rbp + 0xc], dh ; call 0x20000042aa6
0x000002000075d621 : adc byte ptr [rbp + 0xf840fca], al ; ret
0x000002000046c973 : adc byte ptr [rbp + 1], dh ; ret
0x0000020000733f3c : adc byte ptr [rbp + 3], al ; ret 0xec75
0x0000020000735deb : adc byte ptr [rbp + 3], cl ; ret 0xb60f
0x000002000062e129 : adc byte ptr [rbp + 3], dh ; mov al, 1 ; ret
0x000002000001a077 : adc byte ptr [rbp + 3], dh ; xor al, al ; ret
0x0000020000020a2c : adc byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x0000020000050363 : adc byte ptr [rbp + 4], dh ; mov al, r8b ; ret
0x000002000001a30f : adc byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x000002000002d323 : adc byte ptr [rbp + 5], dh ; mov qword ptr [rdx + 8], r8 ; ret
0x000002000001a30e : adc byte ptr [rbp + 5], sil ; add rsp, 0x28 ; ret
0x000002000002d322 : adc byte ptr [rbp + 5], sil ; mov qword ptr [rdx + 8], r8 ; ret
0x0000020000040f3a : adc byte ptr [rbp + 7], dh ; mov r8, rax ; mov rax, r8 ; ret
0x00000200000822b4 : adc byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x00000200000814d7 : adc byte ptr [rbp + rax + 0x48], dh ; add esp, 8 ; ret
0x00000200000814d6 : adc byte ptr [rbp + rax + 0x48], sil ; add esp, 8 ; ret
0x0000020000538c4f : adc byte ptr [rbp + rcx - 1], dh ; ret 0x8349
0x00000200005de5c1 : adc byte ptr [rbp + rcx*4 + 0x45], cl ; ret
0x000002000075d472 : adc byte ptr [rbp - 0x137bf036], al ; ret
0x0000020000018a3f : adc byte ptr [rbp - 0x1d], dh ; add rsp, 0x28 ; ret
0x00000200000bd229 : adc byte ptr [rbp - 0x27], dh ; lea rax, qword ptr [r9 - 0x10] ; ret
0x0000020000073fdb : adc byte ptr [rbp - 0x2977f040], al ; wait ; adc byte ptr [rax], al ; ret
0x0000020000426b07 : adc byte ptr [rbp - 0x51], al ; movdqu xmmword ptr [rbp - 1], xmm0 ; call r12
0x00000200004b59c2 : adc byte ptr [rbp - 0x6377f037], al ; ret 0x10
0x00000200004b59c1 : adc byte ptr [rbp - 0x6377f037], r8b ; ret 0x10
0x000002000042aca8 : adc byte ptr [rbp - 0x73], al ; add r8d, ebp ; out 0x34, al ; ret 0x48ff
0x0000020000024a9d : adc byte ptr [rbp - 0x73], cl ; adc byte ptr [r8 - 0x7d], cl ; ret 0x4918
0x0000020000088710 : adc byte ptr [rbp - 0x73], cl ; or byte ptr [rax - 0x75], cl ; ret 0xd148
0x0000020000081c31 : adc byte ptr [rbp - 0x75], al ; jmp 0x20048caa787
0x0000020000038b39 : adc byte ptr [rbp - 0x75], al ; ret 0x6348
0x000002000007749a : adc byte ptr [rbp - 0x75], al ; ret 0x8b49
0x0000020000203d01 : adc byte ptr [rbp - 0x75], al ; sbb al, byte ptr [rcx + 0x3b] ; ret
0x000002000053e95e : adc byte ptr [rbp - 0x75], cl ; jae 0x2000053e984 ; mov rsp, r11 ; pop rbp ; ret
0x000002000022def6 : adc byte ptr [rbp - 0x75], cl ; ret 0xbb01
0x00000200000d08e3 : adc byte ptr [rbp - 0x75], cl ; xchg eax, esp ; ret
0x000002000001beee : adc byte ptr [rbp - 0x7b], al ; leave ; setne al ; ret
0x000002000021bea3 : adc byte ptr [rbp - 0x7b], al ; sal byte ptr [rcx + rax*8 + 0x41], cl ; mov eax, edx ; jmp 0x2000021beb8
0x0000020000016950 : adc byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + rax + 0x4d], 0x3b ; ret
0x000002000046b594 : adc byte ptr [rbp - 0x7cb7a3be], cl ; ret
0x00000200004ce8f7 : adc byte ptr [rbp - 1], dh ; ret 0xd33b
0x00000200004d37d3 : adc byte ptr [rbp - 9], dh ; mov eax, 1 ; ret
0x00000200006c18d5 : adc byte ptr [rbx + 0x14394dc1], cl ; ret
0x00000200001f6c4d : adc byte ptr [rbx + 0x23cf23c8], cl ; ret
0x0000020000519759 : adc byte ptr [rbx + 0x39], cl ; ret
0x00000200004f8f58 : adc byte ptr [rbx + 0x4b891c4f], cl ; and byte ptr [rax - 0x75], cl ; ret
0x000002000010e78c : adc byte ptr [rbx + 0x598d45c2], cl ; add dword ptr [rbp - 0x75], eax ; ret
0x0000020000019908 : adc byte ptr [rbx + 0x5c8b48c3], cl ; and al, 8 ; ret
0x000002000046424c : adc byte ptr [rbx + 0x7c8b48c1], cl ; and al, 0x18 ; ret
0x00000200000bc484 : adc byte ptr [rbx + 0xb4803e0], al ; ret
0x0000020000087378 : adc byte ptr [rbx + 0xb4803e0], al ; ret 0x8949
0x00000200000d30dd : adc byte ptr [rbx + 0xb4903e0], al ; ret 0x8949
0x000002000006cd3c : adc byte ptr [rbx + 3], dh ; mov al, 1 ; ret
0x00000200001fc685 : adc byte ptr [rbx + 6], dh ; mov eax, 0xc0000023 ; ret
0x00000200006816db : adc byte ptr [rbx + 8], dh ; mov rax, qword ptr [r9 + 0x18] ; add rax, rdx ; ret
0x0000020000463888 : adc byte ptr [rbx + rdi - 1], dh ; ret 0x8348
0x0000020000463887 : adc byte ptr [rbx + rdi - 1], sil ; ret 0x8348
0x00000200007332f9 : adc byte ptr [rbx - 0x2cb7073d], al ; ret 0x8349
0x00000200000ba737 : adc byte ptr [rbx - 0x41f0bb3f], cl ; ret
0x0000020000117979 : adc byte ptr [rbx - 0x7cb7fbbd], cl ; ret
0x00000200001f6c31 : adc byte ptr [rbx], ah ; ret
0x000002000063802a : adc byte ptr [rbx], ah ; ret 0x8948
0x00000200003dd896 : adc byte ptr [rbx], al ; add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000084d51 : adc byte ptr [rbx], al ; ret
0x00000200003e43a6 : adc byte ptr [rbx], al ; ret 0x3b41
0x0000020000084c9b : adc byte ptr [rbx], al ; ret 0xf633
0x0000020000148ef1 : adc byte ptr [rbx], al ; rol ecx, -0x18 ; adc byte ptr [rcx - 0xa], al ; ret
0x00000200001bef55 : adc byte ptr [rbx], al ; sbb al, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000438c8d : adc byte ptr [rbx], bh ; ret
0x0000020000086c7b : adc byte ptr [rbx], bh ; ret 0x820f
0x000002000055c4e7 : adc byte ptr [rbx], bh ; ret 0xee72
0x0000020000746f62 : adc byte ptr [rbx], bl ; add byte ptr [rax + 0x33], cl ; ret 0x3348
0x00000200004ea58b : adc byte ptr [rbx], bpl ; ret
0x000002000049024c : adc byte ptr [rbx], ch ; ret
0x00000200005fa04f : adc byte ptr [rbx], ch ; ret 0x348
0x000002000017919b : adc byte ptr [rbx], ch ; ret 0x8948
0x0000020000168a05 : adc byte ptr [rbx], cl ; ret 0x50e9
0x0000020000689fd2 : adc byte ptr [rbx], cl ; ret 0xe9c1
0x0000020000181d5f : adc byte ptr [rbx], dh ; leave ; call 0x2000009e035
0x00000200004a1aa3 : adc byte ptr [rbx], dh ; ret 0x8941
0x00000200001bfbee : adc byte ptr [rbx], dh ; rol byte ptr [rcx + 0x38], cl ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc28b
0x0000020000527e72 : adc byte ptr [rbx], dh ; shr byte ptr [rbx], cl ; or al, 0xf7 ; jno 0x20000527e8c ; ret
0x0000020000086c7a : adc byte ptr [rbx], dil ; ret 0x820f
0x0000020000037965 : adc byte ptr [rcx + 0x10], cl ; movups xmmword ptr [rdx + 0x10], xmm1 ; ret
0x000002000041284d : adc byte ptr [rcx + 0x18], al ; movdqu xmmword ptr [r8], xmm0 ; mov eax, edx ; ret
0x00000200001a470f : adc byte ptr [rcx + 0x1dab0205], cl ; add dh, dh ; ret 0x7504
0x000002000019f5a2 : adc byte ptr [rcx + 0x23], al ; ret
0x000002000002b7e7 : adc byte ptr [rcx + 0x2b], al ; ret 0x2b41
0x00000200000815d9 : adc byte ptr [rcx + 0x33], cl ; add byte ptr [rax + 0x23], cl ; ret
0x00000200000a9bd2 : adc byte ptr [rcx + 0x33], cl ; add byte ptr [rcx + 0x23], cl ; ret
0x000002000067dd0a : adc byte ptr [rcx + 0x39], al ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x00000200002157e9 : adc byte ptr [rcx + 0x39], al ; or al, 0x74 ; adc byte ptr [rcx - 1], al ; ret 0x3b45
0x000002000067dce9 : adc byte ptr [rcx + 0x39], al ; or byte ptr [rdi], cl ; xchg eax, esi ; ret
0x000002000067dcc8 : adc byte ptr [rcx + 0x39], al ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000599779 : adc byte ptr [rcx + 0x3b], al ; ret 0xe772
0x0000020000529149 : adc byte ptr [rcx + 0x3b], cl ; div byte ptr [rdx + rcx*2 - 0x18] ; sub al, 0x60 ; ret 0x41ff
0x00000200003eaa65 : adc byte ptr [rcx + 0x3b], cl ; ret 0x7377
0x00000200006b2644 : adc byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x0000020000677ce1 : adc byte ptr [rcx + 0x3b], cl ; sal byte ptr [rdx + 0x37], 0xff ; ret 0xfa83
0x0000020000463e27 : adc byte ptr [rcx + 0x5bc03303], cl ; ret
0x00000200003f2757 : adc byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000048ec81 : adc byte ptr [rcx + 0x7c8b480f], cl ; and al, 0x18 ; ret
0x0000020000086c76 : adc byte ptr [rcx + 0xf], al ; mov bh, 0x40 ; adc byte ptr [rbx], bh ; ret 0x820f
0x00000200003c0b21 : adc byte ptr [rcx + 0xf], al ; ret 0x8b48
0x000002000003ce23 : adc byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret 0xff41
0x00000200000bb7a6 : adc byte ptr [rcx + 0xfffe1], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200000a2801 : adc byte ptr [rcx + 3], cl ; ret
0x00000200005166d5 : adc byte ptr [rcx + 3], cl ; ret 0x3b49
0x00000200005166d4 : adc byte ptr [rcx + 3], r9b ; ret 0x3b49
0x00000200001ac4c6 : adc byte ptr [rcx + r8 - 5], sil ; ret
0x00000200001ac4c7 : adc byte ptr [rcx + rax - 5], dh ; ret
0x00000200006023a4 : adc byte ptr [rcx + rcx*2 - 1], dh ; ret 0x8349
0x00000200006b49d0 : adc byte ptr [rcx + rcx*4 + 0x1a], cl ; ret
0x000002000062186e : adc byte ptr [rcx + rcx*4 + 0x52], cl ; sbb byte ptr [rax - 0x7d], cl ; ret 0xeb20
0x0000020000216b1e : adc byte ptr [rcx + rcx*4 + 4], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000002000050ecab : adc byte ptr [rcx + rdx + 0x33], dh ; rol byte ptr [rcx - 1], cl ; ret
0x000002000067ddc7 : adc byte ptr [rcx - 0x22], bh ; mov eax, 1 ; ret
0x000002000067dd53 : adc byte ptr [rcx - 0x23], bh ; ret
0x0000020000766863 : adc byte ptr [rcx - 0x39], cl ; ret
0x000002000065b0e5 : adc byte ptr [rcx - 0x3e], ch ; int 0xd
0x0000020000188743 : adc byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200004188d1 : adc byte ptr [rcx - 0x3fccefbf], cl ; ret
0x000002000000512e : adc byte ptr [rcx - 0x48], al ; ret 0
0x00000200001d697e : adc byte ptr [rcx - 0x73], al ; inc dword ptr [rcx - 0x7c] ; ret 0x1775
0x00000200000b2f88 : adc byte ptr [rcx - 0x73], cl ; push rdi ; adc byte ptr [rax - 0x75], cl ; ret
0x00000200004ea588 : adc byte ptr [rcx - 0x75], al ; adc byte ptr [rbx], bpl ; ret
0x00000200001a3637 : adc byte ptr [rcx - 0x75], al ; ret
0x000002000012e0f5 : adc byte ptr [rcx - 0x75], al ; ret 0x4589
0x000002000021cee9 : adc byte ptr [rcx - 0x75], al ; ret 0x8949
0x000002000020d723 : adc byte ptr [rcx - 0x75], al ; ret 0xc148
0x000002000060ed57 : adc byte ptr [rcx - 0x75], al ; salc ; call 0x20000231017
0x00000200004d8fc9 : adc byte ptr [rcx - 0x75], cl ; imul ebx, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rsi ; ret
0x000002000002e290 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000002e2b6 ; mov rsp, r11 ; pop rdi ; ret
0x000002000004525d : adc byte ptr [rcx - 0x75], cl ; jae 0x2000004528b ; mov rsp, r11 ; pop rdi ; ret
0x00000200000df4c2 : adc byte ptr [rcx - 0x75], cl ; jae 0x200000df4e8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000e1750 : adc byte ptr [rcx - 0x75], cl ; jae 0x200000e1776 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f2585 : adc byte ptr [rcx - 0x75], cl ; jae 0x200000f25ab ; mov rsp, r11 ; pop rdi ; ret
0x000002000010539c : adc byte ptr [rcx - 0x75], cl ; jae 0x200001053c2 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000106c9d : adc byte ptr [rcx - 0x75], cl ; jae 0x20000106cc3 ; mov rsp, r11 ; pop rdi ; ret
0x000002000012a3c2 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000012a3e8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ab3ed : adc byte ptr [rcx - 0x75], cl ; jae 0x200001ab413 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ad3da : adc byte ptr [rcx - 0x75], cl ; jae 0x200001ad400 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ae3d5 : adc byte ptr [rcx - 0x75], cl ; jae 0x200001ae3fb ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b0322 : adc byte ptr [rcx - 0x75], cl ; jae 0x200001b0348 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ba7bd : adc byte ptr [rcx - 0x75], cl ; jae 0x200001ba7e3 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001d6908 : adc byte ptr [rcx - 0x75], cl ; jae 0x200001d693e ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fac67 : adc byte ptr [rcx - 0x75], cl ; jae 0x200001fac8d ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fad94 : adc byte ptr [rcx - 0x75], cl ; jae 0x200001fadba ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fae40 : adc byte ptr [rcx - 0x75], cl ; jae 0x200001fae66 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000211442 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000211468 ; mov rsp, r11 ; pop rdi ; ret
0x000002000021cf83 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000021cfa9 ; mov rsp, r11 ; pop rdi ; ret
0x000002000021d080 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000021d0ae ; mov rsp, r11 ; pop rdi ; ret
0x00000200003ab410 : adc byte ptr [rcx - 0x75], cl ; jae 0x200003ab436 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003b2b6d : adc byte ptr [rcx - 0x75], cl ; jae 0x200003b2b9b ; mov rsp, r11 ; pop rdi ; ret
0x00000200003b61bd : adc byte ptr [rcx - 0x75], cl ; jae 0x200003b61e3 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003bb3b2 : adc byte ptr [rcx - 0x75], cl ; jae 0x200003bb3e0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003fea6d : adc byte ptr [rcx - 0x75], cl ; jae 0x200003fea93 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000406fa6 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000406fd4 ; mov rsp, r11 ; pop rdi ; ret
0x000002000042eb93 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000042ebc1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004383d1 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000438407 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004425f3 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000442619 ; mov rsp, r11 ; pop rdi ; ret
0x000002000044d4ac : adc byte ptr [rcx - 0x75], cl ; jae 0x2000044d4d2 ; mov rsp, r11 ; pop rdi ; ret
0x000002000045e529 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000045e54f ; mov rsp, r11 ; pop rdi ; ret
0x00000200004674fc : adc byte ptr [rcx - 0x75], cl ; jae 0x20000467522 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004deb27 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004deb4d ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e17fc : adc byte ptr [rcx - 0x75], cl ; jae 0x200004e1822 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e45c6 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004e45ec ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ec98e : adc byte ptr [rcx - 0x75], cl ; jae 0x200004ec9b4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f1028 : adc byte ptr [rcx - 0x75], cl ; jae 0x200004f104e ; mov rsp, r11 ; pop rdi ; ret
0x0000020000503820 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000503846 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000507b8f : adc byte ptr [rcx - 0x75], cl ; jae 0x20000507bb5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000050d0ae : adc byte ptr [rcx - 0x75], cl ; jae 0x2000050d0d4 ; mov rsp, r11 ; pop rdi ; ret
0x000002000050e32f : adc byte ptr [rcx - 0x75], cl ; jae 0x2000050e365 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051f7cd : adc byte ptr [rcx - 0x75], cl ; jae 0x2000051f7f3 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051fc6f : adc byte ptr [rcx - 0x75], cl ; jae 0x2000051fc9d ; mov rsp, r11 ; pop rdi ; ret
0x0000020000527072 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000527098 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000545a8a : adc byte ptr [rcx - 0x75], cl ; jae 0x20000545ab0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005daaea : adc byte ptr [rcx - 0x75], cl ; jae 0x200005dab10 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005e9278 : adc byte ptr [rcx - 0x75], cl ; jae 0x200005e92ae ; mov rsp, r11 ; pop rdi ; ret
0x00000200005ef8b8 : adc byte ptr [rcx - 0x75], cl ; jae 0x200005ef8ee ; mov rsp, r11 ; pop rdi ; ret
0x000002000060bc95 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000060bcbb ; mov rsp, r11 ; pop rdi ; ret
0x0000020000651638 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000065165e ; mov rsp, r11 ; pop rdi ; ret
0x00000200006628dd : adc byte ptr [rcx - 0x75], cl ; jae 0x20000662903 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000670a33 : adc byte ptr [rcx - 0x75], cl ; jae 0x20000670a59 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000750707 : adc byte ptr [rcx - 0x75], cl ; jae 0x2000075072d ; mov rsp, r11 ; pop rbp ; ret
0x000002000001fc1f : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000001fc4d ; mov rsp, r11 ; pop rbp ; ret
0x000002000007bab2 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000007bae0 ; mov rsp, r11 ; pop rbp ; ret
0x000002000010bdc5 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000010bdeb ; mov rsp, r11 ; pop rbp ; ret
0x0000020000110c06 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000110c2c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000112b78 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000112ba6 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000113619 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000113647 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000114a82 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000114aa8 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000116e85 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000116eab ; mov rsp, r11 ; pop rbp ; ret
0x000002000011c6cf : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000011c6fd ; mov rsp, r11 ; pop rbp ; ret
0x000002000011c9a3 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000011c9d1 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000130728 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000013074e ; mov rsp, r11 ; pop rbp ; ret
0x00000200001bd0f0 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001bd116 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001bd827 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001bd855 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e0d94 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001e0dba ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e0eb0 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001e0ed6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e313d : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001e3163 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001eae14 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001eae4a ; mov rsp, r11 ; pop rbp ; ret
0x00000200001eb70e : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001eb73c ; mov rsp, r11 ; pop rbp ; ret
0x00000200001ed292 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001ed2c0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001ee1d8 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001ee20e ; mov rsp, r11 ; pop rbp ; ret
0x00000200001f17f4 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200001f181a ; mov rsp, r11 ; pop rbp ; ret
0x000002000039d593 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000039d5b9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003cb6bc : adc byte ptr [rcx - 0x75], cl ; jnp 0x200003cb6e2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004126ea : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000412720 ; mov rsp, r11 ; pop rbp ; ret
0x000002000041d94c : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000041d972 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000422047 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000422075 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004815a2 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004815d0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d86df : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004d8705 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ebd5e : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004ebd94 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f505b : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004f5081 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004fd47e : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004fd4a4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ff2e5 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200004ff30b ; mov rsp, r11 ; pop rbp ; ret
0x000002000050480e : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000050483c ; mov rsp, r11 ; pop rbp ; ret
0x000002000053a575 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000053a59b ; mov rsp, r11 ; pop rbp ; ret
0x000002000053ec47 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000053ec6d ; mov rsp, r11 ; pop rbp ; ret
0x00000200005459e9 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000545a1f ; mov rsp, r11 ; pop rbp ; ret
0x00000200005f0454 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200005f047a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000613818 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000061383e ; mov rsp, r11 ; pop rbp ; ret
0x000002000061397b : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006139a1 ; mov rsp, r11 ; pop rbp ; ret
0x000002000062efaf : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000062efd5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006381a6 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200006381cc ; mov rsp, r11 ; pop rbp ; ret
0x00000200006384ee : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000638514 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000639326 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000063934c ; mov rsp, r11 ; pop rbp ; ret
0x000002000063940e : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000639434 ; mov rsp, r11 ; pop rbp ; ret
0x000002000063c6e5 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000063c70b ; mov rsp, r11 ; pop rbp ; ret
0x000002000064df42 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000064df68 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006557eb : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000655811 ; mov rsp, r11 ; pop rbp ; ret
0x000002000065ee46 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000065ee6c ; mov rsp, r11 ; pop rbp ; ret
0x000002000068fa5b : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000068fa81 ; mov rsp, r11 ; pop rbp ; ret
0x000002000069043a : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000690460 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007473b7 : adc byte ptr [rcx - 0x75], cl ; jnp 0x200007473dd ; mov rsp, r11 ; pop rbp ; ret
0x000002000075505d : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000755083 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000757c6d : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000757c93 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000758df6 : adc byte ptr [rcx - 0x75], cl ; jnp 0x20000758e1c ; mov rsp, r11 ; pop rbp ; ret
0x000002000075c0c2 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000075c0e8 ; mov rsp, r11 ; pop rbp ; ret
0x000002000076ecb2 : adc byte ptr [rcx - 0x75], cl ; jnp 0x2000076ecd8 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000217825 : adc byte ptr [rcx - 0x75], cl ; jrcxz 0x2000021788e ; ret
0x000002000013fc5a : adc byte ptr [rcx - 0x75], cl ; leave ; call 0x2000011bf66
0x0000020000521b81 : adc byte ptr [rcx - 0x75], cl ; or byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x000002000006ecfe : adc byte ptr [rcx - 0x75], cl ; ret
0x000002000045cf24 : adc byte ptr [rcx - 0x75], cl ; ret 0x4cf0
0x000002000009d99e : adc byte ptr [rcx - 0x75], cl ; ret 0x8348
0x0000020000641ea9 : adc byte ptr [rcx - 0x75], cl ; ret 0x854d
0x00000200000dbcb7 : adc byte ptr [rcx - 0x75], cl ; ret 0x8948
0x0000020000774da7 : adc byte ptr [rcx - 0x75], cl ; ret 0xeae9
0x00000200000414e0 : adc byte ptr [rcx - 0x75], cl ; ret 0xf49
0x000002000022db8b : adc byte ptr [rcx - 0x75], cl ; ret 0xf748
0x00000200006c1cc0 : adc byte ptr [rcx - 0x77], cl ; add byte ptr [rax + 1], bh ; ret
0x0000020000161f47 : adc byte ptr [rcx - 0x77], cl ; or byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x0000020000169185 : adc byte ptr [rcx - 0x77], cl ; push rcx ; ret
0x00000200003c6908 : adc byte ptr [rcx - 0x77], cl ; sbb sil, sil ; ret
0x0000020000206193 : adc byte ptr [rcx - 0x7cb7efa7], cl ; ret 0x4830
0x00000200003f2b0a : adc byte ptr [rcx - 0x7d], al ; ret
0x0000020000005608 : adc byte ptr [rcx - 0x7d], al ; stc ; add al, 0x72 ; ret
0x000002000062c38f : adc byte ptr [rcx - 0x7d], cl ; add bl, byte ptr [rax] ; ret
0x00000200006218a0 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000002000040aaaa : adc byte ptr [rcx - 0x7d], cl ; ret 0x4909
0x0000020000740512 : adc byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret
0x00000200000c31e4 : adc byte ptr [rcx - 0xa], al ; ret
0x00000200003a683d : adc byte ptr [rcx - 1], al ; ret
0x000002000013e53a : adc byte ptr [rcx - 1], al ; ret 0x3b44
0x00000200002157ef : adc byte ptr [rcx - 1], al ; ret 0x3b45
0x00000200003ed1ce : adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003da297 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x20000002297
0x00000200005b7d55 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0xe ; call rax
0x00000200000f707a : adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x30], eax ; jmp 0x200000f704e
0x0000020000041e2f : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001affb2 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000063785f : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200001ea8de : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000051f680 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200005b5df3 : adc byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000200000871d5 : adc byte ptr [rcx], al ; mov rbx, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x00000200006c33f3 : adc byte ptr [rcx], al ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x00000200000f1ea0 : adc byte ptr [rcx], al ; ret
0x00000200001ac0e8 : adc byte ptr [rcx], bh ; or byte ptr [rbp + rcx - 1], sil ; ret 0x8348
0x0000020000126a80 : adc byte ptr [rdi + r8 - 1], r14b ; ret 0x3b41
0x0000020000669343 : adc byte ptr [rdi + r9 - 0x49], r8b ; ret 0x8b48
0x0000020000126a81 : adc byte ptr [rdi + rax - 1], dh ; ret 0x3b41
0x0000020000025a39 : adc byte ptr [rdi + rcx + 0x20], al ; ret 0xf41
0x00000200006aaf85 : adc byte ptr [rdi + rcx - 0x49], al ; ret
0x0000020000669344 : adc byte ptr [rdi + rcx - 0x49], al ; ret 0x8b48
0x0000020000667c6c : adc byte ptr [rdi - 0x16], 0xff ; add rsp, 0x38 ; ret
0x00000200005f5d3c : adc byte ptr [rdi - 0x24cc004b], 0x8b ; ret
0x000002000040c248 : adc byte ptr [rdi - 1], dh ; ret
0x0000020000503c4b : adc byte ptr [rdi], bl ; add byte ptr [rax], al ; ret
0x00000200005ed554 : adc byte ptr [rdi], cl ; adc dword ptr [rax + rcx + 0x10], eax ; ret
0x00000200000d8c0f : adc byte ptr [rdi], cl ; adc dword ptr [rcx + 0x20], eax ; add rsp, 0x38 ; ret
0x000002000006ca07 : adc byte ptr [rdi], cl ; adc dword ptr [rcx + rdx + 0x10], eax ; ret
0x0000020000037967 : adc byte ptr [rdi], cl ; adc dword ptr [rdx + 0x10], ecx ; ret
0x00000200003ae48a : adc byte ptr [rdi], cl ; and ah, al ; add rsp, 0x28 ; ret
0x00000200000f74b8 : adc byte ptr [rdi], cl ; mov dh, 0x83 ; ret 1
0x00000200004b59e7 : adc byte ptr [rdi], cl ; mov edx, 0x820f1ce1 ; pushfq ; ret 0x10
0x00000200004b59da : adc byte ptr [rdi], cl ; mov edx, 0x820f1de1 ; pushfq ; ret 0x10
0x00000200004b59cd : adc byte ptr [rdi], cl ; mov edx, 0x820f1ee1 ; pushfq ; ret 0x10
0x0000020000464b99 : adc byte ptr [rdi], cl ; test byte ptr [rbp - 0x1000000], bl ; ret
0x00000200004ac5a9 : adc byte ptr [rdi], cl ; test byte ptr [rbx], al ; add al, 0 ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000464b76 : adc byte ptr [rdi], cl ; test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add bh, bh ; ret 0x8348
0x00000200000d7373 : adc byte ptr [rdi], cl ; test byte ptr [rsi], ch ; dec byte ptr [rbx] ; add bl, ch ; ret 0xcccc
0x0000020000017278 : adc byte ptr [rdi], cl ; test dh, dh ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000446113 : adc byte ptr [rdi], cl ; test dword ptr [rax], eax ; ret 0x15
0x0000020000101994 : adc byte ptr [rdi], cl ; test dword ptr [rbx - 0xa000000], ebx ; ret
0x0000020000092000 : adc byte ptr [rdi], cl ; xchg dword ptr [rax - 0x9fffffe], ebp ; ret 0xf01
0x000002000001723a : adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xba0f
0x000002000067dd0d : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x0000020000097289 : adc byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf49
0x00000200005627c7 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200004041f5 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x0000020000428907 : adc byte ptr [rdi], dl ; add byte ptr [rbx - 0x7bf0fc06], al ; ret 0
0x00000200004b59e6 : adc byte ptr [rdi], r9b ; mov edx, 0x820f1ce1 ; pushfq ; ret 0x10
0x00000200004b59d9 : adc byte ptr [rdi], r9b ; mov edx, 0x820f1de1 ; pushfq ; ret 0x10
0x00000200004b59cc : adc byte ptr [rdi], r9b ; mov edx, 0x820f1ee1 ; pushfq ; ret 0x10
0x0000020000091fff : adc byte ptr [rdi], r9b ; xchg dword ptr [rax - 0x9fffffe], ebp ; ret 0xf01
0x00000200004049cb : adc byte ptr [rdx + 0x12], dh ; mov eax, edx ; ret
0x00000200001332e8 : adc byte ptr [rdx + 0x39], al ; ret
0x00000200005ed551 : adc byte ptr [rdx + rcx + 0x10], al ; movups xmmword ptr [rax + rcx + 0x10], xmm0 ; ret
0x00000200006198b8 : adc byte ptr [rdx - 0x27], dh ; xor eax, eax ; ret
0x000002000062e16f : adc byte ptr [rdx - 0xf], dh ; xor al, al ; ret
0x0000020000692579 : adc byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000064bfa9 : adc byte ptr [rdx], al ; movdqu xmmword ptr [rax + 8], xmm0 ; ret
0x000002000060791c : adc byte ptr [rdx], al ; xor edx, edx ; call 0x20000231017
0x0000020000531fde : adc byte ptr [rdx], cl ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000060791b : adc byte ptr [rdx], r8b ; xor edx, edx ; call 0x20000231018
0x0000020000044b24 : adc byte ptr [rip + 0x10000], ch ; add byte ptr [rax], al ; ret
0x000002000047fd79 : adc byte ptr [rip + 0x3b480000], dl ; ret 0x930f
0x00000200004790d6 : adc byte ptr [rip + 0x43750000], al ; ret
0x0000020000134b53 : adc byte ptr [rip + 0x7fff], ah ; ret
0x00000200003e23fb : adc byte ptr [rip - 0x74bc0000], al ; ret 0xb44
0x000002000077b793 : adc byte ptr [rsi + 0x3b], ah ; ret 0x1a7f
0x000002000015ab25 : adc byte ptr [rsi + 0xb], ah ; ret
0x00000200001e463b : adc byte ptr [rsi + 4], dh ; mov qword ptr [rcx + 0x10], rdx ; ret
0x00000200006198c5 : adc byte ptr [rsi + 6], dh ; mov eax, 0xc000000d ; ret
0x0000020000523e85 : adc byte ptr [rsi + rax + 0x48], dh ; add esp, 0x40 ; pop rbx ; ret
0x000002000049a3b2 : adc byte ptr [rsi + rdx - 0x75], dh ; ret
0x000002000075d924 : adc byte ptr [rsi - 0x72b3ff68], 5 ; sub dword ptr [rbx], ebx ; ret 0x48ff
0x00000200001318f8 : adc byte ptr [rsi - 0x76b7ff68], 2 ; ret
0x00000200007683e1 : adc byte ptr [rsi - 0x77], ah ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000200007683e0 : adc byte ptr [rsi - 0x77], spl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000002000064926f : adc byte ptr [rsi - 0x7d], ah ; ret
0x0000020000587746 : adc byte ptr [rsi - 0x7e17ff68], 0x94 ; ret
0x00000200005f69db : adc byte ptr [rsi - 1], ah ; ret
0x000002000013318c : adc byte ptr [rsi - 9], ah ; sar edi, -1 ; jne 0x2000013319d ; ret
0x000002000058a669 : adc byte ptr [rsi], al ; add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x8941
0x00000200000ac29e : adc byte ptr [rsi], cl ; add byte ptr [rbp + 0x33], al ; sal dh, cl ; ret 0xf1e
0x00000200006364d0 : adc byte ptr [rsi], dh ; salc ; push qword ptr [rbx] ; leave ; call 0x200001327cc
0x0000020000137763 : adc byte ptr [rsp + 0x40], al ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000134cfb : adc byte ptr [rsp + 0x70], al ; add rsp, 0x58 ; ret
0x0000020000671ecd : adc byte ptr [rsp + rax + 0xf], dh ; mov edx, 0xa0917e9 ; ret
0x00000200000d08e2 : adc byte ptr gs:[rbp - 0x75], cl ; xchg eax, esp ; ret
0x00000200003e5600 : adc ch, al ; mov ah, byte ptr [rbp - 0x74b70032] ; ret
0x0000020000774efa : adc ch, bh ; dec dword ptr [rax - 0x7d] ; ret 0x4108
0x0000020000015e5c : adc ch, bl ; mov ch, 0x41 ; mov eax, edx ; jmp 0x20000015e43
0x000002000010bf96 : adc ch, bl ; ret 0xcccc
0x000002000074b966 : adc ch, byte ptr [rax] ; ret
0x000002000054620b : adc ch, byte ptr [rbx] ; ret 0xccc3
0x0000020000178ea8 : adc ch, dh ; dec dword ptr [rax - 0x75] ; ret 0x2b48
0x000002000041b0f5 : adc cl, 0xff ; add rsp, 0x68 ; ret
0x0000020000113234 : adc cl, al ; sbb al, 0 ; ret
0x000002000016a9ec : adc cl, bpl ; ret 0xf933
0x0000020000012702 : adc cl, byte ptr [rax + 0x23] ; ret 0x8b4a
0x000002000020fd2f : adc cl, byte ptr [rax + 0x2b] ; ret 0x8d49
0x0000020000678086 : adc cl, byte ptr [rax + 0x3b] ; ret 0x3272
0x0000020000213db5 : adc cl, byte ptr [rax + 0x3b] ; ret 0x3372
0x000002000021437d : adc cl, byte ptr [rax + 0x3b] ; ret 0x3472
0x00000200002148d2 : adc cl, byte ptr [rax + 0x3b] ; ret 0x3572
0x00000200004644ca : adc cl, byte ptr [rax + 0x63] ; ret 0x8b48
0x00000200003cbc4c : adc cl, byte ptr [rax + 0x6b00019] ; ret
0x00000200001f2da2 : adc cl, byte ptr [rax + 3] ; ret 0x3b48
0x0000020000498642 : adc cl, byte ptr [rax - 0x73] ; call 0x200000bab48
0x000002000007132d : adc cl, byte ptr [rax - 0x73] ; dec qword ptr [r8 - 0x75] ; ret
0x0000020000047a3f : adc cl, byte ptr [rax - 0x75] ; iretd ; call rsi
0x000002000009cd50 : adc cl, byte ptr [rax - 0x75] ; ret
0x00000200001b0992 : adc cl, byte ptr [rax - 0x75] ; ret 0x2548
0x00000200001db340 : adc cl, byte ptr [rax - 0x75] ; ret 0x2b48
0x00000200004eb30b : adc cl, byte ptr [rax - 0x75] ; ret 0x2b49
0x0000020000049300 : adc cl, byte ptr [rax - 0x75] ; ret 0xc148
0x00000200001c6a66 : adc cl, byte ptr [rax - 0x7d] ; ret
0x000002000021dfdc : adc cl, byte ptr [rax - 0x7d] ; ret 0x4504
0x0000020000496545 : adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000020000019aeb : adc cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200001b82c9 : adc cl, byte ptr [rax - 0x7d] ; ret 0xb910
0x0000020000038579 : adc cl, byte ptr [rax - 0x7d] ; ror dword ptr [rax], -1 ; ret 0x3b41
0x00000200004e1bcd : adc cl, byte ptr [rax - 1] ; ret 0x4466
0x0000020000134f30 : adc cl, byte ptr [rax - 1] ; ret 0xe484
0x000002000053884b : adc cl, byte ptr [rax - 1] ; ret 0xe6eb
0x000002000011a85b : adc cl, byte ptr [rax - 9] ; ret
0x00000200006a35b8 : adc cl, byte ptr [rax] ; and eax, 0x3820125c ; call qword ptr [rdx]
0x00000200006a3644 : adc cl, byte ptr [rax] ; and eax, 0xbc20125c ; call qword ptr [rdx]
0x00000200006a35a4 : adc cl, byte ptr [rax] ; and eax, 0xe20125c ; call qword ptr [rdx]
0x000002000074609d : adc cl, byte ptr [rbp + 0x2b] ; ret
0x000002000008c4aa : adc cl, byte ptr [rbp - 0x73] ; push rdx ; or byte ptr [rax - 0x75], cl ; ret 0xd148
0x00000200004efd93 : adc cl, byte ptr [rbx + 0x10083] ; add byte ptr [rax + 0x3b], cl ; ret 0x470f
0x000002000003d4f3 : adc cl, byte ptr [rbx + rdi - 0x40] ; jne 0x2000003d4da ; mov eax, r9d ; ret
0x00000200004cb233 : adc cl, byte ptr [rbx - 0x2f00f7b7] ; call 0x200000eef99
0x00000200007856a3 : adc cl, byte ptr [rbx - 0x4b3f71fb] ; dec dword ptr [rax + 3] ; ret
0x00000200003ca6f6 : adc cl, byte ptr [rbx] ; ret
0x00000200001dd91e : adc cl, byte ptr [rcx + 0x23] ; ret 0x2b49
0x0000020000632d55 : adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0x15], 1 ; ret
0x0000020000745c23 : adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0x1a], 1 ; xor eax, eax ; ret
0x00000200004cc578 : adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0xe], 1 ; ret
0x000002000010f0fa : adc cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000002000008dccf : adc cl, byte ptr [rcx - 0x75] ; ret
0x00000200003e60b7 : adc cl, byte ptr [rcx - 0x75] ; ret 0x3b4d
0x0000020000041d85 : adc cl, byte ptr [rcx - 0x75] ; ret 0x4b8d
0x000002000064af86 : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4902
0x000002000022fc6b : adc cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x000002000013387e : adc cl, byte ptr [rcx - 0x7d] ; ret 0x8502
0x000002000064ad43 : adc cl, byte ptr [rcx - 0x7d] ; ret 0xeb02
0x00000200001337d4 : adc cl, byte ptr [rcx - 1] ; ret 0xc085
0x000002000013e1a3 : adc cl, byte ptr [rcx - 1] ; ret 0xf41
0x00000200003a9e9a : adc cl, byte ptr [rdi] ; and ah, cl ; ret
0x0000020000589a08 : adc cl, byte ptr [rdi] ; ret 0x4389
0x0000020000466a0c : adc cl, byte ptr [rdi] ; test byte ptr [rip - 0x74ffffff], dl ; ret
0x000002000007ec4c : adc cl, byte ptr [rdi] ; test dword ptr [rdx], ebx ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x0000020000074e25 : adc cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x42e8
0x0000020000530ecb : adc cl, byte ptr [rdx] ; add byte ptr [rbx + 0x23d8f7c2], cl ; ret 0xc23b
0x000002000075e4fa : adc cl, byte ptr [rsi] ; ret 0x85ff
0x0000020000466a0b : adc cl, byte ptr ds:[rdi] ; test byte ptr [rip - 0x74ffffff], dl ; ret
0x0000020000581263 : adc cl, ch ; dec dword ptr [rax - 0x73] ; fmul dword ptr [r8 + 0x2b] ; ret
0x000002000017abca : adc cl, ch ; jne 0x2000017ac51 ; out dx, al ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000017224e : adc cl, ch ; push rbx ; movsxd rdi, edx ; dec dword ptr [rax - 0x39] ; ret 0xdfff
0x000002000077725e : adc cl, ch ; ret
0x000002000016a9ed : adc cl, ch ; ret 0xf933
0x000002000041b3f5 : adc cl, dl ; call 0x1ffc3439485
0x000002000048d5e4 : adc cl, dl ; out 0xff, al ; call 0x200000bc257
0x00000200000ef7f4 : adc dh, byte ptr [rbx + 3] ; mov al, 1 ; ret
0x00000200000364a7 : adc dh, byte ptr [rbx] ; fisttp dword ptr [rbx + rcx*4 + 0x59] ; and byte ptr [rcx - 0x7f], cl ; ret 0
0x00000200003ca6d7 : adc dh, byte ptr [rbx] ; ret
0x00000200001351b5 : adc dh, byte ptr [rdx] ; ror byte ptr [rax - 0x74b6eefc], 0xc3 ; ret
0x00000200001875dc : adc dh, cl ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000187534 : adc dh, cl ; inc dword ptr [rbp - 0x75] ; ret
0x000002000051126a : adc dh, cl ; ret 0x85ff
0x0000020000017275 : adc dh, dh ; ret
0x000002000009f737 : adc dh, dh ; ret 0x7401
0x000002000007229f : adc dh, dh ; ret 0x7402
0x000002000007978c : adc dh, dh ; ret 0x7501
0x000002000044fda3 : adc dh, dh ; ret 0x7504
0x0000020000494dad : adc dh, dh ; ret 0x753f
0x0000020000050c64 : adc dh, dh ; ret 0xf01
0x00000200000c3b1c : adc dh, dh ; ret 0xf08
0x000002000011857c : adc dh, dh ; ret 0xf10
0x000002000012f4a8 : adc dil, dil ; ret
0x0000020000170061 : adc dl, bh ; dec dword ptr [rax - 0x39] ; ret 0xfffe
0x00000200006a8450 : adc dl, dh ; movups xmmword ptr [rcx + 0x20], xmm0 ; ret
0x000002000075ea3d : adc dword ptr [rax + 0x1d], 0x38 ; add byte ptr [rcx - 0x75], cl ; xchg eax, esp ; ret
0x00000200000cdfc6 : adc dword ptr [rax + 0x3b], ecx ; ret
0x0000020000492513 : adc dword ptr [rax + 0x3b], ecx ; ret 0x820f
0x000002000013e2a3 : adc dword ptr [rax + 0x3b], ecx ; ret 0xc74
0x00000200001498f3 : adc dword ptr [rax + 0xf], ecx ; ret
0x00000200001d3ddf : adc dword ptr [rax + 0xf], ecx ; ret 0x8b48
0x00000200003ba6f9 : adc dword ptr [rax + 1], 0x4a80000 ; jne 0x200003ba70c ; ret
0x00000200004518e3 : adc dword ptr [rax + 6], 0x3480000 ; ret 0x3d48
0x000002000044d2c1 : adc dword ptr [rax + 6], 0x3b480000 ; ret 0x1472
0x000002000044d2d5 : adc dword ptr [rax + 6], 0xe3750000 ; xor eax, eax ; ret
0x00000200001351a2 : adc dword ptr [rax + rax*8 - 0xb7eb8c], eax ; ret 0xff49
0x0000020000134e9f : adc dword ptr [rax + rax*8 - 0xb7f58c], eax ; ret 0xc2f6
0x00000200000f201a : adc dword ptr [rax + rax], eax ; add rsp, 0x60 ; pop rbx ; ret
0x00000200005ed556 : adc dword ptr [rax + rcx + 0x10], eax ; ret
0x00000200006bc691 : adc dword ptr [rax + rcx], eax ; ret
0x00000200004f0834 : adc dword ptr [rax - 0x39], ecx ; ret 0x5d00
0x00000200006602cb : adc dword ptr [rax - 0x39], edx ; inc dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000052b6e3 : adc dword ptr [rax - 0x3b170026], esp ; ret
0x00000200004860bf : adc dword ptr [rax - 0x3fcd3cff], esi ; ret
0x0000020000023cc3 : adc dword ptr [rax - 0x73], ecx ; dec dword ptr [r8 + 3] ; ret 0x3b48
0x00000200000df592 : adc dword ptr [rax - 0x73], ecx ; or byte ptr [r8 - 0x75], cl ; ret 0xd148
0x0000020000100c95 : adc dword ptr [rax - 0x75], ecx ; fmul dword ptr [rax - 0x75] ; ret
0x00000200001c397d : adc dword ptr [rax - 0x75], ecx ; or byte ptr [r8 + 0x3b], cl ; ret 0xec75
0x00000200004048bc : adc dword ptr [rax - 0x75], ecx ; ret
0x0000020000740b70 : adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x000002000011fd2e : adc dword ptr [rax - 0x75], ecx ; ret 0xd148
0x00000200005ae87d : adc dword ptr [rax - 0x75], ecx ; salc ; mov rcx, rax ; call 0x2000064ab0d
0x0000020000633254 : adc dword ptr [rax - 0x77], ecx ; add edi, edi ; ret 0x8348
0x00000200000684f3 : adc dword ptr [rax - 0x7d], ecx ; clc ; add dh, byte ptr [rbx + 1] ; ret
0x000002000011cae6 : adc dword ptr [rax - 0x7d], ecx ; ret
0x00000200001356d8 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4402
0x000002000063b557 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4804
0x0000020000134eb5 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x0000020000126e94 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4818
0x00000200004afb77 : adc dword ptr [rax - 0x7d], ecx ; ret 0x6602
0x0000020000414ce1 : adc dword ptr [rax - 0x7d], ecx ; ror dword ptr [rax], -0x18 ; jne 0x20000414ce0 ; ret
0x00000200003c07cb : adc dword ptr [rax - 0x7f], ecx ; ret
0x00000200005148d0 : adc dword ptr [rax - 0x7f], ecx ; ret 0x98
0x00000200006ab754 : adc dword ptr [rax - 1], ecx ; ret 0x8341
0x00000200001758a1 : adc dword ptr [rax - 1], ecx ; ret 0x8948
0x000002000013527f : adc dword ptr [rax - 1], ecx ; ret 0xff49
0x0000020000133b42 : adc dword ptr [rax - 1], ecx ; ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x20000133b42 ; ret
0x0000020000135408 : adc dword ptr [rax - 1], ecx ; shr ebx, -0xd ; mov rax, r11 ; ret
0x0000020000454bd6 : adc dword ptr [rax - 9], ecx ; ret
0x000002000016cd4c : adc dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x860f
0x000002000023217c : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000016b2a3 : adc dword ptr [rax], eax ; add byte ptr [rsp + rsi*2], al ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000043d5e : adc dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200005e3aa2 : adc dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000061f3b : adc dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x0000020000020bb3 : adc dword ptr [rax], eax ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000001b3fa : adc dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x000002000058e105 : adc dword ptr [rax], eax ; jmp 0x20000501cc2
0x00000200004ad067 : adc dword ptr [rax], eax ; lea rax, qword ptr [r8 + rdx*4] ; ret
0x000002000006679a : adc dword ptr [rax], eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000681f0 : adc dword ptr [rax], eax ; mov rax, qword ptr [rcx + 0x7b0] ; ret
0x0000020000062dc3 : adc dword ptr [rax], eax ; mov rax, r8 ; add rsp, 0x38 ; ret
0x000002000049addc : adc dword ptr [rax], eax ; mov rcx, rbp ; call rax
0x000002000005d7c8 : adc dword ptr [rax], eax ; ret
0x00000200001c601f : adc dword ptr [rax], eax ; xchg qword ptr [rip + 0x1194d8], rcx ; ret
0x00000200005dc82b : adc dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000020bedb : adc dword ptr [rax], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000006ca0b : adc dword ptr [rax], edx ; ret
0x000002000020beda : adc dword ptr [rax], r10d ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000006ca0a : adc dword ptr [rax], r10d ; ret
0x00000200004d31ec : adc dword ptr [rbp + 0x20], ecx ; call 0x2000014f4c5
0x0000020000117c23 : adc dword ptr [rbp + 0x2b], eax ; ret 0x8941
0x000002000005e462 : adc dword ptr [rbp + 0x33], eax ; rol byte ptr [rbp - 0x75], cl ; ret 0x3b48
0x000002000069c6a0 : adc dword ptr [rbp + 0x33], eax ; ror byte ptr [rax - 0x73], 0xd ; xchg eax, ebp ; push rdx ; ret
0x00000200001f448a : adc dword ptr [rbp + 0x33], eax ; ror byte ptr [rbp - 0x7b], 0xc0 ; jne 0x200001f4459 ; ret
0x000002000050ddc8 : adc dword ptr [rbp + 0x3b], eax ; ret 0x1472
0x0000020000667d18 : adc dword ptr [rbp + 0x3b], eax ; ret 0xc01b
0x00000200000829cb : adc dword ptr [rbp + 0x3b], ecx ; ret 0x820f
0x00000200006b50f4 : adc dword ptr [rbp + 0x47058bff], esi ; ret 0xa8ff
0x000002000046da6d : adc dword ptr [rbp + 0xf000000], -0x49 ; ret 0x8d48
0x000002000004ebe9 : adc dword ptr [rbp + 1], esi ; ret
0x000002000002db16 : adc dword ptr [rbp + 4], esi ; ret
0x000002000005cb2c : adc dword ptr [rbp + 5], esi ; add rsp, 0x28 ; ret
0x0000020000053b92 : adc dword ptr [rbp + 6], esi ; mov al, 1 ; ret
0x0000020000029a5f : adc dword ptr [rbp + 7], esi ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200003fc15d : adc dword ptr [rbp + 7], esi ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000480aa5 : adc dword ptr [rbp - 0x16], esi ; mov al, 1 ; add rsp, 0x38 ; ret
0x0000020000204f60 : adc dword ptr [rbp - 0x75], ecx ; add dword ptr [rcx - 0x75], ecx ; adc byte ptr [rax - 0x75], cl ; ret 0xe283
0x00000200001d6d61 : adc dword ptr [rbp - 0x7b], eax ; ret
0x0000020000403c34 : adc dword ptr [rbp - 0x7b], eax ; sal byte ptr [rbp + 3], cl ; xor eax, eax ; ret
0x0000020000012ebd : adc dword ptr [rbp - 0xb], esi ; ret
0x00000200004da7a3 : adc dword ptr [rbx + 0x48282444], ecx ; add esp, 0x48 ; ret
0x0000020000538b85 : adc dword ptr [rbx + 0x4c8b48c2], ecx ; ret
0x00000200006341ab : adc dword ptr [rbx + 0x7b89ffb1], esi ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000065cc43 : adc dword ptr [rbx + 8], esi ; add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x2000065cc45
0x000002000039a25b : adc dword ptr [rbx + rcx*4 + 0x42], ecx ; or byte ptr [rax - 0x75], cl ; ret 0x854d
0x000002000008238c : adc dword ptr [rbx + rdi - 0x3e], ecx ; jne 0x20000082389 ; sub rax, r8 ; ret
0x000002000059dda5 : adc dword ptr [rbx - 0x173eebba], ecx ; or byte ptr [rcx + 0x23], al ; ret 0x7fa8
0x000002000065d3a0 : adc dword ptr [rbx], ebp ; ret 0x875
0x00000200005638c7 : adc dword ptr [rbx], edi ; ret 0x2f72
0x000002000053646b : adc dword ptr [rbx], edi ; ret 0x377
0x000002000021e581 : adc dword ptr [rbx], edi ; ret 0x5f72
0x000002000042ad8b : adc dword ptr [rbx], esi ; ret 0x2341
0x000002000050ecad : adc dword ptr [rbx], esi ; rol byte ptr [rcx - 1], cl ; ret
0x000002000060b098 : adc dword ptr [rbx], esi ; ror byte ptr [rcx - 0x75], cl ; leave ; call 0x20000231019
0x0000020000042d56 : adc dword ptr [rcx + 0x10], ecx ; add rsp, 0x28 ; ret
0x00000200006a844e : adc dword ptr [rcx + 0x10], ecx ; movsd qword ptr [rcx + 0x20], xmm0 ; ret
0x00000200000d8c11 : adc dword ptr [rcx + 0x20], eax ; add rsp, 0x38 ; ret
0x00000200006a8453 : adc dword ptr [rcx + 0x20], eax ; ret
0x0000020000015a10 : adc dword ptr [rcx + 0x3b], eax ; ret
0x0000020000515833 : adc dword ptr [rcx + 0x3b], eax ; ret 0x820f
0x0000020000036177 : adc dword ptr [rcx + 0x3b], ecx ; ret
0x00000200001f4c4b : adc dword ptr [rcx + 0x40], eax ; ret
0x00000200001bec8e : adc dword ptr [rcx + 0x50], ecx ; ret
0x000002000075de17 : adc dword ptr [rcx + 0x58948ff], ebp ; xlatb ; ret 0xffb7
0x0000020000044cf3 : adc dword ptr [rcx + 0x70], ecx ; ret
0x000002000042ce97 : adc dword ptr [rcx + 0xf], ecx ; mov edx, 0xf4c0ee9 ; scasd eax, dword ptr [rdi] ; ret 0xc88b
0x00000200005c37c5 : adc dword ptr [rcx + 3], ecx ; ret
0x000002000006ca09 : adc dword ptr [rcx + rdx + 0x10], eax ; ret
0x00000200003aadf9 : adc dword ptr [rcx - 0x46], -1 ; push rsi ; ret 0x7401
0x0000020000152380 : adc dword ptr [rcx - 0x75], eax ; ret
0x0000020000099fdc : adc dword ptr [rcx - 0x75], eax ; ret 0x41f0
0x0000020000152f8c : adc dword ptr [rcx - 0x75], eax ; ret 0xf49
0x00000200001351ba : adc dword ptr [rcx - 0x75], ecx ; ret
0x000002000066aa5c : adc dword ptr [rcx - 0x75], ecx ; ret 0x48f0
0x00000200000a41f1 : adc dword ptr [rcx - 0x75], ecx ; ret 0xc148
0x00000200004390b3 : adc dword ptr [rcx - 0x75], ecx ; ret 0xc2f6
0x00000200003b6fa9 : adc dword ptr [rcx - 0x7d], eax ; ret 0x4507
0x00000200002245fa : adc dword ptr [rcx - 0x7d], eax ; ret 0x75ff
0x000002000012e6e5 : adc dword ptr [rcx - 0x7d], ecx ; ret 0x4830
0x00000200000ae561 : adc dword ptr [rcx - 0xf], 0xd ; add bh, bh ; ret 0x8d4c
0x0000020000128535 : adc dword ptr [rcx - 1], eax ; ret 0x8348
0x00000200001b550d : adc dword ptr [rcx - 1], eax ; ret 0x8349
0x00000200001a37a3 : adc dword ptr [rcx - 1], eax ; ret 0x8d48
0x00000200001f412d : adc dword ptr [rcx - 9], ecx ; rol byte ptr [rbp + 0x3b], cl ; ret
0x00000200002070e9 : adc dword ptr [rcx], 0xd ; add byte ptr [rcx - 0x75], al ; ret
0x000002000075d641 : adc dword ptr [rcx], eax ; add byte ptr [rbp + 0x2c880fc0], al ; ret
0x000002000076cca9 : adc dword ptr [rcx], eax ; add byte ptr [rbx], bh ; ret 0x870f
0x0000020000491bdb : adc dword ptr [rcx], ecx ; add rax, rcx ; jmp rax
0x000002000006ad4f : adc dword ptr [rcx], edx ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x000002000001722d : adc dword ptr [rdi + 0x14], eax ; add byte ptr [rbx - 0x742e0832], cl ; ret
0x000002000048a659 : adc dword ptr [rdi + 0x44000000], -0x75 ; ret
0x0000020000135448 : adc dword ptr [rdi + rcx + 0x44], ecx ; ror dword ptr [rcx - 0x75], -0x40 ; ret
0x0000020000541fd3 : adc dword ptr [rdi - 0x3b7cb701], edi ; pop rbx ; ret
0x00000200000c8d0b : adc dword ptr [rdi], ecx ; mov bh, 0x48 ; add al, byte ptr [rcx - 1] ; ret
0x00000200001352c6 : adc dword ptr [rdi], ecx ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff49
0x0000020000135325 : adc dword ptr [rdi], ecx ; test byte ptr [rax + rax - 0xb80000], al ; ret 0xff49
0x00000200004a1162 : adc dword ptr [rdi], ecx ; xchg eax, ebx ; ret 0xf41
0x00000200001985cc : adc dword ptr [rdi], edi ; hlt ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000748143 : adc dword ptr [rdi], esi ; mov ebx, 0xd8d48ff ; ret 0xbb36
0x0000020000037969 : adc dword ptr [rdx + 0x10], ecx ; ret
0x00000200004947b0 : adc dword ptr [rdx + 0x12], edx ; add byte ptr [rcx - 0x75], cl ; ret 0x49f0
0x00000200003c438c : adc dword ptr [rdx + 0x20], eax ; add rsp, 0x28 ; ret
0x00000200004c195b : adc dword ptr [rdx + 0x49fffffe], 0x3b ; ret 0x850f
0x0000020000058155 : adc dword ptr [rdx + 0x4c0], ecx ; ret
0x00000200006b3a1a : adc dword ptr [rdx + 3], esi ; mov al, 1 ; ret
0x00000200006b39ee : adc dword ptr [rdx + 6], esi ; shr eax, 0xf ; and al, 1 ; ret
0x00000200000fa98d : adc dword ptr [rdx + rbx + 0x1898], ecx ; ret
0x0000020000161ff8 : adc dword ptr [rdx + rcx*8], -0x14 ; ljmp ptr [rcx + 0xd] ; push rcx ; ret 0x21
0x0000020000187532 : adc dword ptr [rdx + rdx], -0xf ; inc dword ptr [rbp - 0x75] ; ret
0x000002000059e374 : adc dword ptr [rdx - 0x77], eax ; cmp al, 1 ; inc edx ; jmp 0x2000059e361
0x0000020000002bcd : adc dword ptr [rdx - 1], -1 ; dec dword ptr [rax - 0x75] ; ret 0xd348
0x000002000015db0a : adc dword ptr [rdx], eax ; ret
0x0000020000639d2b : adc dword ptr [rdx], edx ; retf 0x48ff ; test eax, eax ; je 0x20000639d3f ; call rax
0x00000200002070ea : adc dword ptr [rip - 0x3c74bf00], ecx ; ret
0x0000020000040d62 : adc dword ptr [rsi + 0x4d00002b], ebx ; mov dword ptr [rdx], ebx ; ret
0x000002000040916c : adc dword ptr [rsi*2 - 0x3d00be38], ecx ; jmp 0x20000409148
0x000002000040916b : adc dword ptr [rsi*2 - 0x3d00be38], r9d ; jmp 0x20000409149
0x00000200000faddf : adc dword ptr [rsp + 0x60], ecx ; call 0x20000067096
0x000002000007fc74 : adc dword ptr [rsp + rbx - 1], esi ; ret 0x5489
0x0000020000148f04 : adc eax, 0 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005dc828 : adc eax, 0x11c9fb ; xor eax, eax ; ret
0x00000200001ab22e : adc eax, 0x127245 ; add rsp, 0x28 ; ret
0x0000020000535f7a : adc eax, 0x12b61 ; jmp 0x20000535f4a
0x0000020000182dfa : adc eax, 0x14b9b1 ; call rax
0x0000020000182df6 : adc eax, 0x158d4800 ; mov cl, 0xb9 ; adc al, 0 ; call rax
0x000002000014a926 : adc eax, 0x187b4d ; add rsp, 8 ; ret
0x00000200001a4aae : adc eax, 0x18c10d ; ret
0x000002000014f735 : adc eax, 0x18cf86 ; ret
0x000002000039ba77 : adc eax, 0x19058b00 ; ret 0xfff7
0x00000200001661ea : adc eax, 0x1948d7 ; ret
0x000002000012580d : adc eax, 0x1c006e ; ret
0x000002000002d883 : adc eax, 0x206910 ; add rsp, 0x28 ; ret
0x00000200000abbeb : adc eax, 0x2349000e ; ret 0x2349
0x000002000064782f : adc eax, 0x24448948 ; and byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200000067f2 : adc eax, 0x245c0349 ; and byte ptr [rax - 0x75], cl ; ret
0x000002000003e4aa : adc eax, 0x2bc615 ; ret
0x000002000003e4a3 : adc eax, 0x2bc61a ; ret
0x000002000003e493 : adc eax, 0x2bc62d ; ret
0x000002000003e48c : adc eax, 0x2bc632 ; ret
0x00000200000075af : adc eax, 0x2f3bf4 ; ret
0x00000200000075a7 : adc eax, 0x2f3c04 ; ret
0x00000200000c1939 : adc eax, 0x3750000 ; mov al, 1 ; ret
0x00000200001b9d3d : adc eax, 0x3750000 ; xor al, al ; ret
0x000002000047fd7a : adc eax, 0x3b480000 ; ret 0x930f
0x00000200006cc507 : adc eax, 0x3cb14 ; add rsp, 0x38 ; ret
0x000002000050b8d8 : adc eax, 0x3e683 ; call 0x20000133f78
0x0000020000450fd6 : adc eax, 0x428b4100 ; adc al, 0x2b ; ret 0x341
0x00000200006c46b1 : adc eax, 0x44f7a ; add rsp, 0x28 ; ret
0x00000200006c46c1 : adc eax, 0x44f8a ; add rsp, 0x28 ; ret
0x00000200000116f3 : adc eax, 0x48000000 ; add esp, 0x28 ; ret
0x00000200001a5b78 : adc eax, 0x48b4100 ; rol dword ptr [rcx + 0x3b], 1 ; ret
0x000002000044f391 : adc eax, 0x48c18b00 ; add esp, 0x60 ; pop rbx ; ret
0x000002000000751e : adc eax, 0x48c38b00 ; add esp, 0x20 ; pop rbx ; ret
0x000002000044ff35 : adc eax, 0x48d4a00 ; or cl, byte ptr [rax + 0x3b] ; ret 0x820f
0x00000200006b74f7 : adc eax, 0x48ffb79b ; add esp, 0x20 ; pop rbx ; ret
0x0000020000622b27 : adc eax, 0x48ffbac5 ; add esp, 0x58 ; ret
0x00000200005f0df7 : adc eax, 0x48ffc402 ; add esp, 0x28 ; ret
0x00000200003c5d23 : adc eax, 0x48ffc4e7 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000403777 : adc eax, 0x48ffcc9a ; add esp, 0x38 ; ret
0x0000020000620ae7 : adc eax, 0x48ffcdba ; add esp, 0x50 ; pop rbx ; ret
0x000002000020a267 : adc eax, 0x48fff28f ; add esp, 0x68 ; ret
0x0000020000209a67 : adc eax, 0x48fff297 ; add esp, 0x50 ; pop rbx ; ret
0x00000200006becc9 : adc eax, 0x4b582 ; add rsp, 0x28 ; ret
0x00000200006bec92 : adc eax, 0x4b5a9 ; add rsp, 0x58 ; ret
0x00000200006beb99 : adc eax, 0x4b5da ; add rsp, 0x38 ; ret
0x00000200006be648 : adc eax, 0x4b703 ; add rsp, 0x68 ; ret
0x00000200006be5ca : adc eax, 0x4b769 ; add rsp, 0x58 ; ret
0x00000200006be571 : adc eax, 0x4b7ba ; add rsp, 0x68 ; ret
0x00000200006be305 : adc eax, 0x4b80e ; add rsp, 0x28 ; ret
0x00000200006be493 : adc eax, 0x4b818 ; add rsp, 0x38 ; ret
0x00000200006b7809 : adc eax, 0x519da ; add rsp, 0x48 ; ret
0x00000200006b74a1 : adc eax, 0x51d42 ; add rsp, 0x48 ; ret
0x000002000076aa49 : adc eax, 0x569ffb7 ; ret 0xb5a3
0x00000200006b060e : adc eax, 0x58bcd ; add rsp, 0x58 ; ret
0x00000200001ed48a : adc eax, 0x617d1 ; call 0x20000089717
0x0000020000149214 : adc eax, 0x71 ; jmp rdx
0x00000200004d8b55 : adc eax, 0x74a07539 ; adc dh, dh ; ret
0x00000200001a7040 : adc eax, 0x74c33b49 ; adc bh, bh ; ret 0xff49
0x000002000010d4d3 : adc eax, 0x74d28548 ; adc byte ptr [rax - 0x7d], cl ; ret 0xe804
0x000002000006b7e6 : adc eax, 0x80fffffb ; jns 0x2000006b7f5 ; ret
0x00000200000e9b69 : adc eax, 0x81048b00 ; ret
0x000002000049c1bc : adc eax, 0x840f0000 ; ret
0x0000020000426342 : adc eax, 0x89480001 ; add ebp, ebx ; ret 0x8b8
0x0000020000466a0f : adc eax, 0x8b000001 ; ret
0x000002000046af2f : adc eax, 0x8b00142f ; ret
0x000002000040cc79 : adc eax, 0x8b001732 ; ret
0x00000200001f226b : adc eax, 0x8b002426 ; ret
0x000002000012a7b9 : adc eax, 0x8b378966 ; ret
0x000002000059c4c7 : adc eax, 0x8b440000 ; ret
0x00000200007783d7 : adc eax, 0x8b44ffa5 ; ret
0x000002000051df31 : adc eax, 0x8b480003 ; ror dword ptr [rax - 1], 1 ; ret 0x4566
0x000002000057aae5 : adc eax, 0x8b4c0000 ; ret
0x000002000043f6ec : adc eax, 0x8b4c0016 ; ret
0x00000200006b985f : adc eax, 0x8bff99a2 ; ret
0x000002000074da67 : adc eax, 0x8bff9f29 ; ret
0x00000200004b86a7 : adc eax, 0x8bffc09d ; ret
0x00000200003cd407 : adc eax, 0x8bffc89e ; ret
0x00000200005de923 : adc eax, 0x8d480000 ; push rbp ; ret
0x0000020000185993 : adc eax, 0x90000647 ; jmp 0x20000091c9f
0x0000020000115dd3 : adc eax, 0xb60ffff1 ; ret
0x00000200000ec2f9 : adc eax, 0xb60ffff4 ; ret
0x00000200002070f2 : adc eax, 0xd130d ; mov eax, r8d ; ret
0x000002000039aeb1 : adc eax, 0xe80000c8 ; ret 0x154b
0x0000020000140455 : adc eax, 0xe9000000 ; and bl, dl ; add byte ptr [rax], al ; ret
0x00000200005ad86d : adc eax, 0xe9000000 ; ret
0x0000020000778394 : adc eax, 0xe990ffa5 ; xchg eax, edx ; ret 0xfffd
0x000002000022fd0e : adc eax, 0xeb000000 ; or byte ptr [rbx], cl ; ret 0x8789
0x0000020000485e5e : adc eax, 0xeb740000 ; mov al, 1 ; ret
0x000002000005ee6f : adc eax, 0xf6000003 ; ret
0x00000200005c9683 : adc eax, 0xf6fff097 ; ret
0x00000200001d00fc : adc eax, 0xff018948 ; ret 0xc28b
0x0000020000657535 : adc eax, 0xff48028b ; ret
0x000002000076e3b8 : adc eax, 0xffb87afb ; ret
0x0000020000665606 : adc eax, 0xffbea315 ; call 0x200006618bf
0x00000200006490a6 : adc eax, 0xffc7ff41 ; ret 0x9489
0x0000020000619907 : adc eax, 0xffd1729c ; xor eax, eax ; ret
0x00000200005fadb2 : adc eax, 0xffd84511 ; call r10
0x00000200005fa4b1 : adc eax, 0xffd84e12 ; call r10
0x00000200005f78a4 : adc eax, 0xffd87a1f ; call r10
0x000002000045de6c : adc eax, 0xffdd89d7 ; call 0x20000088d48
0x0000020000463ea1 : adc eax, 0xffe9261a ; mov rax, rdx ; ret
0x00000200004e72cc : adc eax, 0xffe97ff7 ; call r10
0x000002000040dcbd : adc eax, 0xffee827e ; mov rax, rdx ; ret
0x00000200003adfc4 : adc eax, 0xfff215f7 ; add rsp, 0x28 ; ret
0x00000200003f9f88 : adc eax, 0xfff8533b ; call r10
0x00000200003f9b23 : adc eax, 0xfff857a0 ; call r10
0x00000200003f98af : adc eax, 0xfff85a14 ; call r10
0x000002000004238d : adc eax, dword ptr [rax + rax] ; add rcx, rdx ; jmp rcx
0x000002000064ed5b : adc eax, dword ptr [rax] ; add bl, ch ; xor esi, esi ; ret
0x000002000009a01d : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x0000020000040d95 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200004916c9 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200004d1e21 : adc eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x00000200005981f6 : adc eax, dword ptr [rax] ; add byte ptr [rbx], bh ; sal byte ptr [rsp + rcx - 1], 1 ; ret
0x000002000064ed74 : adc eax, dword ptr [rax] ; add dh, dh ; ret
0x000002000002a6cc : adc eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000020193 : adc eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000002d497 : adc eax, dword ptr [rax] ; add rsp, 0x30 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000001dea0 : adc eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x00000200000267ab : adc eax, dword ptr [rax] ; add rsp, 0x60 ; pop r13 ; ret
0x000002000019ebae : adc eax, dword ptr [rax] ; call rax
0x000002000047a0b6 : adc eax, dword ptr [rax] ; inc edx ; jmp 0x2000047a0a1
0x000002000002e76b : adc eax, dword ptr [rax] ; mov al, r8b ; ret
0x0000020000017741 : adc eax, dword ptr [rax] ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x000002000002268e : adc eax, dword ptr [rax] ; mov eax, 0xc0000225 ; ret
0x000002000003278c : adc eax, dword ptr [rax] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004752a8 : adc eax, dword ptr [rax] ; mov ecx, esi ; call 0x2000009a247
0x000002000002362b : adc eax, dword ptr [rax] ; mov qword ptr [rax + 8], rcx ; mov qword ptr [rdx], rcx ; ret
0x000002000002906f : adc eax, dword ptr [rax] ; mov r8, r14 ; mov rcx, rbx ; call rax
0x000002000002d812 : adc eax, dword ptr [rax] ; mov rax, rcx ; add rsp, 0x28 ; ret
0x000002000002f53e : adc eax, dword ptr [rax] ; mov rax, rcx ; ret
0x00000200004757cd : adc eax, dword ptr [rax] ; mov rcx, rbx ; call 0x2000009a248
0x000002000001dbc3 : adc eax, dword ptr [rax] ; mov rcx, rdi ; call rbx
0x0000020000472967 : adc eax, dword ptr [rax] ; mov rcx, rsi ; call 0x2000004ec1f
0x0000020000475f30 : adc eax, dword ptr [rax] ; mov rcx, rsi ; call 0x2000009a488
0x0000020000024851 : adc eax, dword ptr [rax] ; ret
0x000002000002ccf6 : adc eax, dword ptr [rax] ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000203e1 : adc eax, dword ptr [rax] ; xor eax, eax ; ret
0x000002000007b782 : adc eax, dword ptr [rbp - 0x77] ; push rcx ; add al, 0x41 ; mov dword ptr [rcx], eax ; ret
0x0000020000422910 : adc eax, dword ptr [rbp - 0x7b] ; sal byte ptr [rsi + rcx + 0x4c], 0x8b ; ret
0x00000200001c9302 : adc eax, dword ptr [rbp] ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000224c15 : adc eax, dword ptr [rbx - 0x7cb7073f] ; ret
0x000002000072be53 : adc eax, dword ptr [rbx - 0x7cb70740] ; ret
0x000002000022bd05 : adc eax, dword ptr [rcx + 0x23] ; ret
0x00000200003b6f1d : adc eax, dword ptr [rcx + rcx*4 + 1] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005373a9 : adc eax, dword ptr [rcx - 0x72b7003f] ; adc r8b, bpl ; ret 0xb122
0x000002000064afee : adc eax, dword ptr [rcx - 0x75] ; ret
0x00000200001d022e : adc eax, dword ptr [rcx - 0x75] ; ret 0x8349
0x00000200003e3fc9 : adc eax, dword ptr [rcx - 0x75] ; ret 0x8d48
0x000002000017f47b : adc eax, dword ptr [rcx - 0x75] ; ret 0xe2d3
0x00000200004cb08a : adc eax, dword ptr [rcx - 0x75] ; rol byte ptr [rax + 0xf], 0xb6 ; imul byte ptr [rbx] ; ret 0x53b
0x0000020000652689 : adc eax, dword ptr [rcx - 0xa] ; ret 0x7510
0x0000020000745768 : adc eax, dword ptr [rcx - 0xa] ; ret 0xf01
0x00000200006b4bc7 : adc eax, dword ptr [rcx] ; add dh, dh ; ret
0x00000200000b9c0f : adc eax, dword ptr [rdx] ; add bh, bh ; ret
0x0000020000742f39 : adc eax, ebx ; ret
0x000002000014f7e9 : adc eax, esi ; or dword ptr [rsp], 0 ; ret
0x00000200005384e9 : adc ebp, dword ptr [rbx + rsi*4 - 0x3b7cb701] ; pop rax ; ret
0x00000200000fb8ff : adc ebp, dword ptr [rbx] ; ret 0xc703
0x000002000007c591 : adc ebp, dword ptr [rdi] ; xor byte ptr [rax], al ; call rax
0x0000020000598eb8 : adc ebp, dword ptr [rdx + 0xf00ffd6] ; test bl, ch ; ret
0x00000200004903f9 : adc ebp, dword ptr [rsi] ; ret
0x000002000075d569 : adc ebp, dword ptr [rsi] ; sahf ; inc dword ptr [rbp + 0x7d880fdb] ; ret
0x0000020000598f10 : adc ebx, dword ptr [rbp + 0xf00ffd6] ; test ebp, ecx ; ret
0x00000200001464cc : adc ebx, dword ptr [rbx + 0x5f] ; pop rsi ; ret
0x0000020000401e29 : adc ebx, dword ptr [rbx] ; ret
0x00000200000e9606 : adc ebx, dword ptr [rsi] ; or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x00000200001bfc21 : adc ebx, eax ; mov byte ptr [rcx], dl ; ret
0x00000200001bfc1a : adc ebx, eax ; mov dword ptr [rcx], edx ; ret
0x00000200001bef3a : adc ebx, eax ; mov eax, 0xc000000d ; ret
0x00000200001bfc1d : adc ebx, eax ; mov word ptr [rcx], dx ; ret
0x0000020000114d61 : adc ebx, edi ; dec dword ptr [rdx + 0xd8d48d3] ; ret
0x0000020000412575 : adc ebx, edx ; jmp qword ptr [rcx]
0x0000020000417b2f : adc ecx, dword ptr [rax + 0x2b] ; ret 0x138b
0x00000200005863ff : adc ecx, dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000200000d5c24 : adc ecx, dword ptr [rax + rax] ; add rsp, 0x38 ; ret
0x00000200000bb532 : adc ecx, dword ptr [rax - 0x73] ; dec qword ptr [rax - 0x75] ; ret 0x48f0
0x00000200006241f6 : adc ecx, dword ptr [rax - 0x75] ; or byte ptr [r8 + 0x2b], cl ; ret 0x3b48
0x0000020000123a55 : adc ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x00000200000c1e8e : adc ecx, dword ptr [rax - 0x75] ; ret
0x000002000064047c : adc ecx, dword ptr [rax - 0x75] ; retf ; call qword ptr [rax]
0x000002000013491c : adc ecx, dword ptr [rax - 0x75] ; salc ; mov rcx, rbx ; call r14
0x0000020000438f76 : adc ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0x164c
0x0000020000037d48 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000200004afb9d : adc ecx, dword ptr [rax - 0x7d] ; ret 0x6602
0x0000020000017ae6 : adc ecx, dword ptr [rax - 1] ; ret
0x00000200003b1db7 : adc ecx, dword ptr [rbp - 0x75] ; ret 0x8b41
0x000002000016c8e3 : adc ecx, dword ptr [rbp - 0x77] ; or byte ptr [r9 - 0x7d], cl ; ret
0x00000200006bf596 : adc ecx, dword ptr [rbx - 0x3e0dfceb] ; push rsi ; ret 0x7410
0x000002000063fdd9 : adc ecx, dword ptr [rbx] ; loope 0x2000063fde4 ; add rsp, 0x38 ; ret
0x000002000003744a : adc ecx, dword ptr [rcx + rcx*4] ; ret
0x000002000018f560 : adc ecx, dword ptr [rcx - 0x75] ; ret 0x8d41
0x0000020000055999 : adc ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x0000020000117c20 : adc ecx, dword ptr [rcx - 0x77] ; adc dword ptr [rbp + 0x2b], eax ; ret 0x8941
0x000002000004379e : adc ecx, dword ptr [rcx - 0x7d] ; call 0x20048e2acb0
0x00000200002139bf : adc ecx, dword ptr [rcx - 0x7d] ; call 0x20049feaed1
0x0000020000213be4 : adc ecx, dword ptr [rcx - 0x7d] ; call 0x20049feb0f6
0x0000020000230db1 : adc ecx, dword ptr [rcx - 0x7d] ; call 0x2004a0082c3
0x000002000000cbb9 : adc ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200001387bc : adc ecx, dword ptr [rcx - 1] ; ret
0x00000200006c4189 : adc ecx, dword ptr [rdi] ; add byte ptr [rax], al ; mov rbx, rax ; call rdi
0x00000200002070f4 : adc ecx, dword ptr [rip - 0x3f74bf00] ; ret
0x000002000052f1ee : adc ecx, eax ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000d9ffa : adc ecx, ebp ; add eax, 0xf6ffffff ; ret 0x7501
0x0000020000187568 : adc ecx, esi ; dec dword ptr [rbp - 0x7b] ; rol byte ptr [rbp + 0xf], cl ; ret
0x0000020000187560 : adc ecx, esi ; inc dword ptr [rbp - 0x75] ; ret
0x00000200005ca6a8 : adc edi, dword ptr [rax + rsi*8 + 0x344f83ff] ; jmp qword ptr [rcx]
0x0000020000169295 : adc edi, dword ptr [rbx] ; ret
0x0000020000436dab : adc edi, dword ptr [rdx] ; ret 0x7377
0x00000200003c2b5b : adc edi, edi ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005ef92 : adc edi, edi ; ret
0x00000200000c43aa : adc edi, edi ; ret 0x5688
0x0000020000053f6f : adc edi, edi ; ret 0x5788
0x0000020000046bbc : adc edi, edi ; ret 0x8349
0x000002000012e283 : adc edi, edi ; ret 0x8b41
0x000002000061d010 : adc edi, edi ; ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xf172
0x000002000019440e : adc edx, 0x5f ; inc dword ptr [rcx - 0x75] ; ret 0x2b4d
0x000002000043f6eb : adc edx, dword ptr [rip - 0x74b3ffea] ; ret
0x00000200000ec347 : adc edx, ebp ; and byte ptr [rax], al ; seta dl ; mov al, dl ; ret
0x00000200003ddf15 : adc edx, esp ; ret
0x0000020000203148 : adc esi, dword ptr [rdx - 8] ; jmp 0x20000203160
0x0000020000125375 : adc esi, dword ptr [rsi + 6] ; lea eax, dword ptr [rcx - 0x13] ; mov dword ptr [r8], eax ; ret
0x0000020000483a2b : adc esi, ebp ; ret
0x00000200003f7919 : adc esi, edi ; ret 0
0x000002000017f3b8 : adc esi, edi ; rol byte ptr [rcx + 0x23], 1 ; add ebx, edx ; loop 0x2000017f3d5 ; ret 0x8941
0x00000200000b6eeb : adc esi, esi ; ret 0x7401
0x0000020000196e76 : adc esi, esi ; ret 0x7407
0x00000200000a8450 : adc esi, esi ; ret 0x740f
0x00000200001789ff : adc esi, esi ; ret 0x7501
0x00000200000b6ef0 : adc esi, esi ; ret 0x7542
0x0000020000024e74 : adc esi, esi ; ret 0xf01
0x000002000047cc88 : adc esi, esi ; ret 0xf08
0x000002000046d6ba : adc esi, esi ; ret 0xf1c
0x0000020000625380 : adc esi, esi ; ret 0xf3f
0x00000200000b9a70 : adc esi, esi ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200005e2b57 : adc esi, esp ; or byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000218346 : adc esp, dword ptr [rax] ; or byte ptr [rax - 0x73], 0x4f ; and bh, bh ; ret
0x0000020000460be8 : adc esp, dword ptr [rsi - 0x7d] ; ret 0x6602
0x0000020000066774 : adc qword ptr [rax], rax ; ret
0x00000200006a844f : adc r10b, sil ; movups xmmword ptr [rcx + 0x20], xmm0 ; ret
0x00000200000d1f23 : adc r11b, bpl ; ret
0x000002000020329d : adc r11b, bpl ; sub byte ptr [rax - 0x73], cl ; mov bh, bh ; ret
0x0000020000218345 : adc r12d, dword ptr [rax] ; or byte ptr [rax - 0x73], 0x4f ; and bh, bh ; ret
0x00000200000b9a6f : adc r14, r14 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000007e45b : adc r14b, r14b ; ret
0x00000200000855d0 : adc r14b, sil ; ret
0x000002000016fb1c : adc r15b, dil ; ret 0xd03b
0x0000020000131d36 : adc r8b, bpl ; ret
0x00000200005373af : adc r8b, bpl ; ret 0xb122
0x00000200001ad745 : adc r8b, byte ptr [r8] ; call r9
0x00000200001add0c : adc r8b, byte ptr [r8] ; call rax
0x000002000005342a : adc r8b, byte ptr [r8] ; ret
0x00000200000435f7 : adc r8b, byte ptr [r8] ; xor al, al ; ret
0x00000200001adfb1 : adc r8b, byte ptr [rax] ; call rax
0x0000020000043267 : adc r8b, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200005134ab : adc r8b, r13b ; cli ; pop rbp ; ret 0x48ff
0x000002000049be6b : adc r8b, r13b ; jp 0x2000049be88 ; ret 0x48ff
0x00000200004ad61f : adc r8b, r13b ; pop rdx ; lodsd eax, dword ptr [rsi] ; ret
0x00000200004ad666 : adc r8b, r13b ; ret
0x00000200005f1d17 : adc r8b, r13b ; ret 0xc3ff
0x00000200004ad6c4 : adc r8b, r13b ; xor eax, 0xe9ffba14 ; ret 0xfffc
0x000002000041b3f4 : adc r9b, dl ; call 0x1ffc3439486
0x00000200005863fe : adc r9d, dword ptr [r8 + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000200000e9b68 : adc rax, -0x7efb7500 ; ret
0x00000200001a5b77 : adc rax, 0x48b4100 ; rol dword ptr [rcx + 0x3b], 1 ; ret
0x00000200001dc9dd : adc sil, sil ; ret
0x00000200002179f6 : adc spl, al ; ret 0x7d
0x0000020000217e2d : add ah, al ; ret 0x187d
0x0000020000217a32 : add ah, al ; ret 0x7d
0x000002000010de5c : add ah, bh ; ret
0x0000020000403f39 : add ah, byte ptr [rcx + rax] ; mov byte ptr [r8], al ; xor eax, eax ; ret
0x000002000004248c : add ah, byte ptr [rcx + rax] ; ret
0x000002000076cc77 : add ah, byte ptr [rdi + rax*4 + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x000002000066c2a1 : add ah, byte ptr [rdx] ; ret
0x00000200003b62a8 : add ah, byte ptr [rdx] ; ret 0x450f
0x00000200003fd16c : add ah, byte ptr [rsi + 0x39] ; add cl, byte ptr [rdi] ; xchg dword ptr [rbx], edi ; ret 0x17
0x000002000068a1dc : add ah, byte ptr [rsi + 0x3b] ; ret
0x00000200004e11ac : add ah, byte ptr [rsi + 0x41] ; mov dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200000866f8 : add ah, byte ptr [rsi + 0x41] ; mov dword ptr [rdx + 2], eax ; ret
0x0000020000523b0e : add ah, byte ptr [rsi + 0x41] ; mov dword ptr [rsi + 2], eax ; call 0x2000014f189
0x00000200006c3430 : add ah, byte ptr [rsi + 0x44] ; mov dword ptr [rdx + 2], eax ; ret
0x000002000049e509 : add ah, byte ptr [rsi + 3] ; ret 0x8948
0x000002000049e4bd : add ah, byte ptr [rsi + 3] ; ret 0xf175
0x00000200000e37b4 : add ah, byte ptr [rsi - 0x77] ; or cl, byte ptr [r8 - 0x75] ; ret
0x000002000013385e : add ah, byte ptr [rsi - 0x77] ; or dh, bh ; fmul dword ptr [rbp - 0x75] ; ret 0xd233
0x000002000013567e : add ah, byte ptr [rsi - 0x7b] ; sal byte ptr [rbp - 0x11], 0x48 ; mov eax, ecx ; ret
0x00000200003ef682 : add ah, byte ptr [rsi - 0x7d] ; jmp qword ptr [rax]
0x00000200006335e0 : add ah, byte ptr [rsi - 9] ; fadd dword ptr [rcx - 0x75] ; ret 0xc91a
0x0000020000143c4c : add ah, byte ptr [rsi - 9] ; ret 0x100
0x000002000050719e : add ah, ch ; ret 0x45ff
0x0000020000041cd6 : add ah, cl ; mov rax, qword ptr [rcx + 0x450] ; ret
0x00000200006bede2 : add ah, cl ; mov rax, qword ptr [rsp + 0x30] ; jmp rax
0x0000020000049df6 : add ah, cl ; movzx eax, word ptr [rip + 0x33420d] ; ret
0x000002000014906f : add ah, cl ; ret
0x0000020000506d3c : add al, 0 ; add al, al ; ret
0x000002000051db85 : add al, 0 ; add al, ch ; xor ebx, dword ptr [rcx] ; ret
0x0000020000650c47 : add al, 0 ; add bh, bh ; ret
0x00000200000942e4 : add al, 0 ; add bh, bh ; ret 0x8d48
0x00000200000a9b66 : add al, 0 ; add bh, bh ; ret 0x8d4c
0x00000200001f0abb : add al, 0 ; add bl, al ; xor eax, eax ; ret
0x000002000065f0ed : add al, 0 ; add bl, dh ; movq qword ptr [rcx], mm0 ; ret
0x000002000061a188 : add al, 0 ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x00000200000af7d4 : add al, 0 ; add byte ptr [rax + 0x23], cl ; ret 0x3345
0x0000020000223847 : add al, 0 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200003beb5c : add al, 0 ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000009b4ac : add al, 0 ; add byte ptr [rax + 0x3b], cl ; ret 0xe874
0x0000020000063e05 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x00000200000660f4 : add al, 0 ; add byte ptr [rax + 3], cl ; ret 0xccc3
0x00000200002015ff : add al, 0 ; add byte ptr [rax + 3], cl ; rol byte ptr [rcx], 0xac ; ret
0x00000200004a76b4 : add al, 0 ; add byte ptr [rax + 5], cl ; ror byte ptr [rax + rax], 0 ; ret
0x00000200001f7c34 : add al, 0 ; add byte ptr [rax + rax*8 - 0x74b39a8c], al ; ret
0x00000200001f7c44 : add al, 0 ; add byte ptr [rax + rax*8 - 0x74b3aa8c], al ; ret
0x00000200004ac5ad : add al, 0 ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000062537b : add al, 0 ; add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0xf3f
0x00000200005b249d : add al, 0 ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000041a3b4 : add al, 0 ; add byte ptr [rax - 0x75], cl ; int 0xe8
0x00000200000ab61d : add al, 0 ; add byte ptr [rax - 0x75], cl ; push rdi ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000ab4d4 : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000f31b2 : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200000aa849 : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x5189
0x000002000009cabe : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xb948
0x00000200001983ed : add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000009754f : add al, 0 ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r9 + 0x23], cl ; ret 0x3d48
0x0000020000222bd3 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000063ddc3 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4868
0x0000020000118f89 : add al, 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000012f34d : add al, 0 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fc9cf : add al, 0 ; add byte ptr [rax], al ; and eax, 1 ; ret
0x0000020000433da8 : add al, 0 ; add byte ptr [rax], al ; call 0x20000059937
0x00000200006a8e29 : add al, 0 ; add byte ptr [rax], al ; call 0x200006b509e
0x00000200000740db : add al, 0 ; add byte ptr [rax], al ; je 0x200000740b9 ; mov al, 1 ; ret
0x000002000063cfa8 : add al, 0 ; add byte ptr [rax], al ; je 0x2000063cfba ; and eax, 0x1f ; ret
0x00000200000740ab : add al, 0 ; add byte ptr [rax], al ; jne 0x20000074106 ; xor al, al ; ret
0x00000200001bf2ff : add al, 0 ; add byte ptr [rax], al ; mov rcx, rdi ; call 0x200006ab609
0x0000020000025e7d : add al, 0 ; add byte ptr [rax], al ; mov word ptr [r10 + 0x10], r9w ; ret
0x0000020000042396 : add al, 0 ; add byte ptr [rax], al ; ret
0x000002000063cd60 : add al, 0 ; add byte ptr [rax], al ; setne al ; ret
0x0000020000028214 : add al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000073b8e5 : add al, 0 ; add byte ptr [rbp - 0x74b7d0b8], cl ; ret
0x0000020000663e34 : add al, 0 ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000640450 : add al, 0 ; add byte ptr [rbp - 0x7b], cl ; leave ; jne 0x20000640439 ; ret
0x000002000019f9cb : add al, 0 ; add byte ptr [rbx + rcx*4 + 0x44], cl ; ret
0x0000020000452749 : add al, 0 ; add byte ptr [rbx - 0x9bfdb84], cl ; ret
0x000002000062f346 : add al, 0 ; add byte ptr [rbx], bh ; ret
0x00000200000ad73e : add al, 0 ; add byte ptr [rbx], dh ; ret 0x4489
0x00000200004915bc : add al, 0 ; add byte ptr [rbx], dh ; shr al, cl ; jp 0x200004915de ; ret
0x0000020000648d63 : add al, 0 ; add byte ptr [rcx + 0x3b], cl ; ret 0xb76
0x000002000068094f : add al, 0 ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000064c510 : add al, 0 ; add byte ptr [rcx + 3], al ; ret 0x8589
0x00000200006ab7af : add al, 0 ; add byte ptr [rcx - 0x73], al ; call 0x200452cbb07
0x00000200000fbb4d : add al, 0 ; add byte ptr [rcx - 0x75], al ; ret 0x2348
0x00000200000a280c : add al, 0 ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000ad022 : add al, 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x8944
0x0000020000128400 : add al, 0 ; add byte ptr [rcx - 0x7c], al ; ret
0x000002000005deab : add al, 0 ; add byte ptr [rcx - 0x7d], al ; add byte ptr ds:[rdi], cl ; xchg eax, esp ; ret 0x8d49
0x0000020000215006 : add al, 0 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000002000022c8d5 : add al, 0 ; add byte ptr [rcx - 0x7f], al ; ret
0x0000020000198cf7 : add al, 0 ; add byte ptr [rcx - 0x7f], cl ; ret 0xb98
0x00000200003d1823 : add al, 0 ; add byte ptr [rcx - 1], al ; ret
0x000002000013c627 : add al, 0 ; add byte ptr [rcx - 1], al ; ret 0x4de9
0x000002000020c637 : add al, 0 ; add byte ptr [rcx], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000781e1d : add al, 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000051b11 : add al, 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000d07b9 : add al, 0 ; add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0x0000020000446241 : add al, 0 ; add byte ptr [rdi], cl ; test bh, bl ; ret
0x00000200005b014e : add al, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe3e8
0x0000020000697bb2 : add al, 0 ; add byte ptr [rdx], ah ; ret 0x450f
0x000002000059741c : add al, 0 ; add byte ptr [rsi + 0x3b], ah ; ret 0x2174
0x00000200001a0cf2 : add al, 0 ; add byte ptr [rsi - 0x7b], ah ; ret
0x00000200001f1313 : add al, 0 ; add cl, ch ; ret 2
0x0000020000059e7b : add al, 0 ; add dh, dh ; ret
0x00000200000a85a4 : add al, 0 ; add dh, dh ; ret 0x740f
0x00000200000a11e5 : add al, 0 ; add dh, dh ; ret 0xf0f
0x000002000004aecd : add al, 0 ; add rcx, rbp ; jmp rcx
0x000002000004238e : add al, 0 ; add rcx, rdx ; jmp rcx
0x000002000041fa21 : add al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002fcec : add al, 0 ; add rsp, 0x28 ; ret
0x00000200000747b6 : add al, 0 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000003af13 : add al, 0 ; add rsp, 0x38 ; ret
0x00000200000efe87 : add al, 0 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000ec874 : add al, 0 ; add rsp, 0x48 ; ret
0x00000200000ecc59 : add al, 0 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200006be5cd : add al, 0 ; add rsp, 0x58 ; ret
0x00000200000ec665 : add al, 0 ; add rsp, 0x60 ; pop rbp ; ret
0x00000200000f201b : add al, 0 ; add rsp, 0x60 ; pop rbx ; ret
0x00000200000eb930 : add al, 0 ; add rsp, 0x68 ; ret
0x000002000040bfa1 : add al, 0 ; add rsp, 0x70 ; pop rbp ; ret
0x00000200000ec467 : add al, 0 ; add rsp, 0xe8 ; ret
0x000002000065d733 : add al, 0 ; call 0x2000053b1a1
0x00000200000e9405 : add al, 0 ; je 0x200000e9412 ; mov al, 1 ; ret
0x00000200005fc02f : add al, 0 ; je 0x200005fc042 ; mov eax, 0xc0000120 ; ret
0x0000020000654d5b : add al, 0 ; je 0x20000654d68 ; mov al, 1 ; ret
0x00000200006b39c4 : add al, 0 ; jl 0x200006b39d1 ; mov al, 1 ; ret
0x0000020000091625 : add al, 0 ; jmp 0x200000910e9
0x00000200001c1905 : add al, 0 ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x000002000003099c : add al, 0 ; mov al, r8b ; ret
0x000002000001ae65 : add al, 0 ; mov byte ptr [rbx], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000511c58 : add al, 0 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200000cccc9 : add al, 0 ; mov r8, qword ptr [rsp + 0x38] ; call rax
0x0000020000177b31 : add al, 0 ; nop ; jmp 0x20000053dfb
0x0000020000408b67 : add al, 0 ; or dword ptr [rax], eax ; je 0x20000408b78 ; xor al, al ; ret
0x00000200000436fb : add al, 0 ; or dword ptr [rcx - 0x75], ecx ; ret 0x8b49
0x000002000004360e : add al, 0 ; ret
0x0000020000199f72 : add al, 0 ; rol byte ptr [rcx - 0x73], 0x49 ; xor al, 0xe8 ; ret 0xfa99
0x000002000017a472 : add al, 0 ; rol byte ptr [rcx - 0x73], 0x49 ; xor al, 0xe8 ; ret 0xfc94
0x0000020000608bbc : add al, 0 ; ror byte ptr [rdi], 0x85 ; ret
0x000002000003b07c : add al, 0 ; sal byte ptr [rbp + rdi - 0x50], 1 ; ret
0x00000200000e453f : add al, 0 ; sal byte ptr [rbx + rax - 0x50], 1 ; ret
0x00000200006bcfad : add al, 0 ; test rax, rax ; je 0x200006bcfbf ; jmp rax
0x000002000010e637 : add al, 0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000050e3e9 : add al, 0 ; xor edx, edx ; mov ebp, eax ; call 0x20000135bf5
0x0000020000055de0 : add al, 0x10 ; add byte ptr [rax - 0x75], cl ; ret 0x8d4d
0x00000200000298f7 : add al, 0x10 ; sub rcx, rax ; mov rax, rcx ; ret
0x000002000053646a : add al, 0x11 ; cmp eax, edx ; ja 0x2000053647b ; mov eax, ecx ; ret
0x000002000059e373 : add al, 0x11 ; mov dword ptr [rcx + r8], edi ; inc edx ; jmp 0x2000059e362
0x00000200001351b9 : add al, 0x11 ; mov rax, r11 ; ret
0x0000020000149907 : add al, 0x11 ; movnti qword ptr [rcx], rax ; sfence ; ret
0x00000200003ee02b : add al, 0x11 ; ret
0x00000200001d7acc : add al, 0x11 ; shr rax, 0xc ; ret
0x00000200006b5330 : add al, 0x13 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200006c879c : add al, 0x19 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000128cec : add al, 0x1b ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000002000052d871 : add al, 0x1b ; call 0x2000014f185
0x00000200001bfe15 : add al, 0x1c ; add byte ptr [rax - 0x7f], cl ; ret 0x3600
0x00000200003d4f3e : add al, 0x24 ; add rsp, 0x18 ; ret
0x000002000014a8c9 : add al, 0x24 ; add rsp, 8 ; ret
0x0000020000065a32 : add al, 0x24 ; cmove ebp, dword ptr [rdx] ; ret 0xc041
0x000002000010f948 : add al, 0x24 ; jmp 0x2000010f912
0x0000020000683a07 : add al, 0x24 ; mov byte ptr [rax], 4 ; jmp 0x20000683a1b
0x00000200004300f1 : add al, 0x24 ; mov eax, edx ; add rsp, 0x18 ; ret
0x000002000014f6fe : add al, 0x24 ; ret
0x000002000006f1f3 : add al, 0x24 ; shr eax, 9 ; and eax, 1 ; pop rcx ; ret
0x000002000011d8de : add al, 0x25 ; add al, 0x5e ; add byte ptr [rax], al ; ret
0x0000020000048bf0 : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax + 0x33], al ; ret 0xd233
0x00000200001a92f6 : add al, 0x25 ; add byte ptr cs:[rax], al ; ret
0x0000020000044b03 : add al, 0x25 ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000200001a9302 : add al, 0x25 ; pop rsi ; add byte ptr [rax], al ; ret
0x0000020000512b92 : add al, 0x2b ; ret
0x0000020000437fda : add al, 0x2b ; ret 0xc085
0x000002000006d9c1 : add al, 0x2b ; ret 0xd08b
0x000002000048f080 : add al, 0x2e ; mov dword ptr [rsi + 0x58], eax ; call 0x200000bab48
0x000002000055d180 : add al, 0x32 ; fdiv st(6) ; ret
0x00000200004b6ef8 : add al, 0x32 ; ret
0x00000200006213df : add al, 0x33 ; fucomi st(3) ; or al, 0x8b ; sbb cl, byte ptr [rax - 1] ; ret
0x00000200006bd1c1 : add al, 0x33 ; imul bl ; or cl, byte ptr [rbx] ; ret 0x1be
0x00000200004ecd63 : add al, 0x33 ; leave ; call rax
0x0000020000127b05 : add al, 0x33 ; leave ; call rdx
0x00000200004a1a9e : add al, 0x33 ; ret 0xe083
0x0000020000619f1a : add al, 0x33 ; shr bl, 0 ; add rsp, 0x18 ; ret
0x000002000041f103 : add al, 0x33 ; shr byte ptr [rax - 0x74e58aff], cl ; ret 0x8b48
0x000002000015d5ed : add al, 0x38 ; add cl, ch ; ret
0x0000020000409169 : add al, 0x39 ; adc dword ptr [rsi*2 - 0x3d00be38], r9d ; jmp 0x2000040914b
0x00000200001fbe9f : add al, 0x39 ; add al, 0x74 ; sbb eax, dword ptr [rcx - 1] ; ret 0x8348
0x0000020000501f67 : add al, 0x39 ; xor dword ptr [rdi], ecx ; test esi, ebx ; ret 8
0x0000020000119fba : add al, 0x3a ; ret
0x0000020000216a8c : add al, 0x3a ; ret 0x9475
0x000002000047fc50 : add al, 0x3b ; je 0x2000047fc7e ; jo 0x2000047fcce ; ret
0x00000200001a2c75 : add al, 0x3b ; ret
0x00000200005e89ad : add al, 0x3b ; ret 0xed72
0x000002000040bcb9 : add al, 0x3b ; ret 0xf072
0x000002000013e005 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000013e01e
0x0000020000221b0e : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000221b28
0x0000020000223f9c : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000223fb6
0x000002000022984c : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000229866
0x0000020000229ac7 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000229ae1
0x000002000022d9bd : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022d9d7
0x000002000022dc01 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022dc1b
0x00000200002303d1 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x200002303eb
0x0000020000731968 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000731981
0x0000020000731bc6 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000731bdf
0x00000200007338e8 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000733901
0x0000020000735809 : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000735822
0x000002000073e8fd : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073e916
0x000002000073eeee : add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073ef07
0x000002000050c378 : add al, 0x40 ; ret
0x0000020000050365 : add al, 0x41 ; mov al, al ; ret
0x0000020000471986 : add al, 0x41 ; mov al, cl ; ret
0x00000200000f1d3b : add al, 0x41 ; mov al, dl ; ret
0x00000200000f160f : add al, 0x41 ; mov dword ptr [rax + 8], eax ; jmp 0x200000f15de
0x00000200000f160e : add al, 0x41 ; mov dword ptr [rax + 8], eax ; jmp 0x200000f15df
0x00000200001c118f : add al, 0x41 ; mov dword ptr [rax], eax ; ret
0x000002000068981f : add al, 0x41 ; mov dword ptr [rax], edx ; ret
0x000002000007b786 : add al, 0x41 ; mov dword ptr [rcx], eax ; ret
0x00000200001159df : add al, 0x41 ; mov eax, 0x70696d57 ; call 0x20000231ce9
0x00000200000f1a1b : add al, 0x41 ; mov eax, eax ; ret
0x000002000041e263 : add al, 0x41 ; mov eax, edx ; ret
0x00000200004bd8e2 : add al, 0x44 ; cmp eax, ecx ; jb 0x200004bd885 ; ret
0x00000200004bd8e1 : add al, 0x44 ; cmp eax, ecx ; jb 0x200004bd886 ; ret
0x00000200001bf4ea : add al, 0x44 ; cmp eax, edx ; jb 0x200001bf4e7 ; mov al, 1 ; ret
0x00000200002078a8 : add al, 0x44 ; mov cr0, rcx ; ret
0x0000020000416177 : add al, 0x44 ; mov edi, dword ptr [rcx + 0x18] ; call 0x200000c23c7
0x000002000010fae8 : add al, 0x45 ; xor ebx, ebx ; jmp 0x2000010fab6
0x000002000019d664 : add al, 0x46 ; clc ; inc dword ptr [rcx - 0x76] ; or cl, byte ptr [rcx - 1] ; ret 0x8b41
0x000002000020c262 : add al, 0x48 ; add eax, 0x10 ; add rsp, 0x28 ; ret
0x00000200000cc83a : add al, 0x48 ; add eax, dword ptr [rcx + 0x98] ; ret
0x0000020000044a3d : add al, 0x48 ; add eax, dword ptr [rip + 0x33ac43] ; ret
0x0000020000016a89 : add al, 0x48 ; add eax, ecx ; ret
0x00000200000b013f : add al, 0x48 ; add eax, edx ; ret
0x00000200001bb9a7 : add al, 0x48 ; add ecx, -0x10 ; mov rax, rcx ; ret
0x00000200004e9f43 : add al, 0x48 ; add esp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000628e4f : add al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200000f0f60 : add al, 0x48 ; add esp, 0x20 ; pop rdi ; ret
0x00000200001ab7db : add al, 0x48 ; add esp, 0x28 ; ret
0x00000200006da38b : add al, 0x48 ; add esp, 0x38 ; ret
0x0000020000031b49 : add al, 0x48 ; and dword ptr [rcx], eax ; ret
0x00000200001344d7 : add al, 0x48 ; and eax, 0x157 ; ret
0x0000020000134537 : add al, 0x48 ; and eax, 0x80 ; ret
0x0000020000134517 : add al, 0x48 ; and eax, 1 ; ret
0x00000200001344b7 : add al, 0x48 ; and eax, 2 ; ret
0x0000020000134497 : add al, 0x48 ; and eax, 4 ; ret
0x00000200001344f7 : add al, 0x48 ; and eax, 8 ; ret
0x00000200001f86b4 : add al, 0x48 ; cmp edx, eax ; jb 0x200001f86b5 ; mov al, 1 ; ret
0x00000200003eddf8 : add al, 0x48 ; imul eax, r10d ; ret
0x00000200003ed3d3 : add al, 0x48 ; imul eax, r9d ; ret
0x0000020000211657 : add al, 0x48 ; lea eax, dword ptr [rcx + 0x59] ; add rsp, 0x28 ; ret
0x00000200001fb6a0 : add al, 0x48 ; lea edx, dword ptr [rax + 0x18] ; mov rax, rdx ; ret
0x00000200001e463d : add al, 0x48 ; mov dword ptr [rcx + 0x10], edx ; ret
0x00000200000fc493 : add al, 0x48 ; mov dword ptr [rcx + 0x20], edx ; ret
0x00000200006b535a : add al, 0x48 ; mov dword ptr [rcx + 8], eax ; ret
0x00000200001e2239 : add al, 0x48 ; mov dword ptr [rcx], eax ; ret
0x000002000064b5f9 : add al, 0x48 ; mov dword ptr [rdx], eax ; ret
0x000002000004079b : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov rax, r8 ; ret
0x000002000041caf6 : add al, 0x48 ; mov eax, dword ptr [rdx + 0x38] ; ret
0x00000200001abfd1 : add al, 0x48 ; mov eax, dword ptr [rip + 0x12649f] ; call rax
0x000002000007116e : add al, 0x48 ; mov eax, ecx ; ret
0x000002000003c25c : add al, 0x48 ; mov eax, edx ; ret
0x0000020000512f8c : add al, 0x48 ; mov ecx, dword ptr [rsp + 0x38] ; call 0x20000140389
0x00000200004247b5 : add al, 0x48 ; mov ecx, ebx ; call 0x2000005168b
0x00000200004247b4 : add al, 0x48 ; mov ecx, ebx ; call 0x2000005168c
0x00000200001362d6 : add al, 0x48 ; movzx ecx, dx ; and eax, ecx ; ret
0x00000200001dd978 : add al, 0x48 ; or ebx, 4 ; call 0x200000d9be7
0x0000020000031e04 : add al, 0x48 ; ret
0x000002000000854a : add al, 0x48 ; sub eax, ecx ; ret
0x00000200000092c0 : add al, 0x48 ; sub edx, 1 ; jne 0x200000092c2 ; ret
0x00000200000092bf : add al, 0x48 ; sub edx, 1 ; jne 0x200000092c3 ; ret
0x00000200005cd5c3 : add al, 0x49 ; add ecx, esp ; call 0x200000597f6
0x00000200003f2a52 : add al, 0x49 ; and dword ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x000002000062c4d7 : add al, 0x49 ; and dword ptr [rdx], 0 ; add rsp, 0x28 ; ret
0x000002000069dbcd : add al, 0x49 ; mov eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000c30f2 : add al, 0x49 ; mov eax, eax ; ret
0x0000020000051fa5 : add al, 0x49 ; mov eax, ecx ; ret
0x000002000041ee31 : add al, 0x49 ; shl rax, 3 ; ret
0x0000020000105070 : add al, 0x49 ; sub edx, 1 ; jne 0x2000010504c ; ret
0x000002000010506f : add al, 0x49 ; sub edx, 1 ; jne 0x2000010504d ; ret
0x0000020000206453 : add al, 0x4b ; add byte ptr [rax + rax*8 - 0x74bbed8c], al ; ret 0x8b49
0x0000020000108f22 : add al, 0x4b ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000790aa : add al, 0x4c ; add dword ptr [rcx + 0x70], eax ; ret
0x00000200001f8698 : add al, 0x4c ; cmp eax, eax ; jb 0x200001f8695 ; mov al, 1 ; ret
0x00000200001fddb1 : add al, 0x4c ; mov dword ptr [rdx + 0x38], eax ; xor eax, eax ; ret
0x0000020000037441 : add al, 0x4d ; mov dword ptr [rcx], eax ; ret
0x00000200001f5705 : add al, 0x4f ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000519a78 : add al, 0x57 ; ret
0x000002000011d8e0 : add al, 0x5e ; add byte ptr [rax], al ; ret
0x00000200003d58f1 : add al, 0x66 ; mov dword ptr [rcx + 6], eax ; xor eax, eax ; ret
0x00000200004d06bd : add al, 0x66 ; mov dword ptr [rcx], edx ; mov word ptr [rax], dx ; ret
0x00000200001f24c3 : add al, 0x6b ; ret 0x2b32
0x00000200001f231e : add al, 0x6b ; ret 0x4432
0x000002000060acd8 : add al, 0x70 ; ret 0x45ff
0x00000200003d826c : add al, 0x72 ; in eax, dx ; mov eax, 1 ; ret
0x000002000013fddf : add al, 0x72 ; loop 0x2000013fda3 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000000560c : add al, 0x72 ; ret
0x00000200006b6fbd : add al, 0x73 ; jbe 0x200006b6f50 ; ret 0x3949
0x00000200005e0145 : add al, 0x73 ; sub byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000687bfa : add al, 0x74 ; add eax, dword ptr [rcx - 0x75] ; ret
0x000002000016b2a6 : add al, 0x74 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000b75e6 : add al, 0x74 ; idiv dword ptr [rax + 1] ; ret
0x000002000007145e : add al, 0x74 ; jmp 0x2000017d747
0x000002000019a1b9 : add al, 0x74 ; or al, 0xff ; ret 0xfa83
0x00000200004f454c : add al, 0x74 ; or byte ptr [rsi + 3], dh ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x00000200001fbea2 : add al, 0x74 ; sbb eax, dword ptr [rcx - 1] ; ret 0x8348
0x000002000041f872 : add al, 0x75 ; add eax, 0x58c48348 ; ret
0x0000020000133d50 : add al, 0x75 ; and al, 0xf6 ; ret
0x00000200000d52ac : add al, 0x75 ; cmp dword ptr [rdi], ecx ; mov dh, 0x87 ; ret
0x00000200001f4caf : add al, 0x75 ; jge 0x200001f4c45 ; je 0x200001f4cc8 ; ret 0x1a8
0x000002000001da5d : add al, 0x75 ; or dword ptr [rcx - 0x76], eax ; ret
0x00000200001969cc : add al, 0x75 ; or dword ptr [rdi], ecx ; mov dh, 0x87 ; ret
0x00000200001bfc15 : add al, 0x75 ; or eax, 0xc3118948 ; mov dword ptr [rcx], edx ; ret
0x0000020000135ed6 : add al, 0x75 ; sbb al, 0xf6 ; ret
0x00000200003b54f9 : add al, 0x75 ; sbb al, byte ptr [rcx - 0x75] ; add byte ptr [rcx - 0x7b], al ; ret 0x4c75
0x00000200004b80de : add al, 0x75 ; sbb dh, dh ; ret 0x7402
0x00000200006344f7 : add al, 0x75 ; sub byte ptr [rax + 0xc], bh ; ret
0x000002000013b1b5 : add al, 0x76 ; add eax, 0x7520f983 ; cmp esi, esi ; ret
0x000002000051297f : add al, 0x76 ; sub al, 0x8b ; ret 0xff48
0x0000020000041e50 : add al, 0x77 ; add al, byte ptr [rax] ; sti ; add rsp, 0x28 ; ret
0x00000200001f0f6f : add al, 0x77 ; movsd dword ptr [rdi], dword ptr [rsi] ; cmp r8d, r9d ; sete al ; ret
0x0000020000565058 : add al, 0x7d ; or al, byte ptr [rcx - 0x3f] ; ret
0x00000200006c7c71 : add al, 0x7e ; mov eax, 1 ; ret
0x000002000007be09 : add al, 0x80 ; add rsp, 0x28 ; ret
0x000002000003f8bd : add al, 0x80 ; lea rax, qword ptr [rdx + rax*8] ; ret
0x00000200003cbbdc : add al, 0x81 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005164a : add al, 0x81 ; mov dword ptr [r10], eax ; xor eax, eax ; ret
0x0000020000038a7c : add al, 0x81 ; ret
0x000002000042c552 : add al, 0x81 ; ret 0xd7
0x0000020000051be8 : add al, 0x81 ; test eax, eax ; je 0x20000051bf8 ; ret
0x00000200000c1a43 : add al, 0x82 ; ret
0x00000200003edcef : add al, 0x82 ; sub eax, ecx ; ret
0x00000200003ed828 : add al, 0x82 ; sub eax, r8d ; ret
0x000002000062e16c : add al, 0x83 ; cli ; adc byte ptr [rdx - 0xf], dh ; xor al, al ; ret
0x0000020000131909 : add al, 0x83 ; loopne 0x20000131912 ; ret
0x000002000066a7fa : add al, 0x83 ; loopne 0x2000066a803 ; ret
0x000002000006313c : add al, 0x83 ; ret
0x000002000012c3b8 : add al, 0x83 ; ret 0x2307
0x00000200004fab76 : add al, 0x83 ; ret 0x4128
0x0000020000442246 : add al, 0x83 ; ret 0x44f8
0x00000200005d26a1 : add al, 0x83 ; ret 0x4804
0x000002000003852d : add al, 0x83 ; ret 0xebe0
0x00000200004858dd : add al, 0x83 ; sar edi, 0x75 ; ret
0x000002000002c1b3 : add al, 0x83 ; stc ; inc dword ptr [rcx - 0x75] ; ret 0x8941
0x0000020000135020 : add al, 0x84 ; div byte ptr [rbp - 0x75] ; xor eax, eax ; ret
0x000002000013344c : add al, 0x84 ; div byte ptr [rbp - 0x78] ; xor rax, rax ; ret
0x00000200000539ed : add al, 0x85 ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200006bd1bd : add al, 0x85 ; ret 0x474
0x00000200005c3775 : add al, 0x85 ; sal byte ptr [rdx + rbx + 0x49], 3 ; ret
0x00000200003c5b05 : add al, 0x88 ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000200006c0e39 : add al, 0x88 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000694335 : add al, 0x88 ; mov eax, edi ; sub eax, edx ; jmp 0x20000694347
0x00000200003ed16d : add al, 0x88 ; ret
0x0000020000066fe2 : add al, 0x88 ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4d60
0x000002000011ff56 : add al, 0x89 ; add eax, 0x1e4177 ; xor eax, eax ; ret
0x000002000013f81f : add al, 0x89 ; add ebx, eax ; mov dword ptr [rcx], eax ; mov dword ptr [rcx + 3], eax ; ret
0x0000020000201d04 : add al, 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000066a839 : add al, 0x89 ; add rsp, 0x28 ; ret
0x00000200004cb4ed : add al, 0x89 ; je 0x200004cb51b ; and al, 0xff ; ret 0xc2eb
0x0000020000050840 : add al, 0x89 ; lea ecx, dword ptr [r9 + 1] ; mov dword ptr [rdx], ecx ; ret
0x00000200001e8541 : add al, 0x8a ; rol byte ptr [rbx + 0x74e80fe3], 1 ; jmp rdi
0x00000200000bc7c4 : add al, 0x8b ; or bl, al ; or eax, 0xffffffff ; ret
0x00000200004a8b1b : add al, 0x8b ; push rax ; add al, 0x8b ; ret 0xc10b
0x000002000003b2ca : add al, 0x8b ; ret
0x00000200005b76b1 : add al, 0x8b ; ret 0x1ba
0x00000200003f0be4 : add al, 0x8b ; ret 0x2b44
0x00000200004a6555 : add al, 0x8b ; ret 0x3b48
0x0000020000665cf4 : add al, 0x8b ; ret 0x8944
0x000002000064ae06 : add al, 0x8b ; ret 0x8b41
0x000002000002c1a0 : add al, 0x8b ; ret 0x8d4c
0x00000200004f4553 : add al, 0x8b ; ret 0xb8c3
0x00000200004a8b1e : add al, 0x8b ; ret 0xc10b
0x00000200000470b7 : add al, 0x8b ; ret 0xc148
0x0000020000650c79 : add al, 0x8b ; ret 0xe083
0x00000200001f647e : add al, 0x8b ; ret 0xe8c1
0x0000020000517d75 : add al, 0x8b ; salc ; call 0x20000143366
0x00000200003d81a5 : add al, 0x8d ; or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200004b96b8 : add al, 0x8d ; sar bh, 0x8b ; ret
0x00000200004ad05e : add al, 0x90 ; ret
0x00000200003ed4f3 : add al, 0x90 ; xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x00000200006b7237 : add al, 0x91 ; add rax, r9 ; ret
0x000002000014980c : add al, 0x95 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000661bf6 : add al, 0x96 ; inc edx ; jmp 0x20000661bec
0x0000020000661bf3 : add al, 0x97 ; mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x20000661bef
0x0000020000437838 : add al, 0x98 ; ret
0x00000200006b7ffc : add al, 0x9b ; dec dword ptr [rax - 0x75] ; ret
0x00000200001cedcc : add al, 0x9b ; hlt ; push rsi ; ret
0x0000020000429e64 : add al, 0xa ; add bl, ch ; ret
0x000002000062ace3 : add al, 0xa ; cmp rax, rbx ; jne 0x2000062acf8 ; inc rdx ; jmp 0x2000062ad0b
0x000002000065cc48 : add al, 0xa ; inc edx ; jmp 0x2000065cc40
0x000002000002daff : add al, 0xa ; ret
0x00000200006317cf : add al, 0xa2 ; dec dword ptr [rax - 0x75] ; retf ; call rdi
0x000002000049a0be : add al, 0xb ; add byte ptr [rax], al ; call 0x200000c2547
0x00000200000eb21a : add al, 0xb ; add byte ptr [rbx + rcx*4 + 0x42], al ; xor byte ptr [rbp + 0x23], al ; ret
0x00000200000eb28f : add al, 0xb ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000066a691 : add al, 0xb ; fdivr st(7) ; ret
0x00000200000346c1 : add al, 0xb ; ret
0x00000200003b6d4e : add al, 0xb ; ret 0x894c
0x000002000017f467 : add al, 0xb ; ret 0x8b41
0x00000200005e3bf0 : add al, 0xb2 ; add ebx, ebp ; add dh, byte ptr [rbx] ; shr al, cl ; pushfq ; ret 0xfff5
0x000002000076ba7b : add al, 0xb9 ; call qword ptr [rbx]
0x0000020000630a7d : add al, 0xbd ; sldt word ptr [rax] ; add byte ptr [rbx], ah ; ret 0x4489
0x000002000057f968 : add al, 0xc ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000546022 : add al, 0xc0 ; mov eax, dword ptr [rax + r9 + 0x18] ; sub eax, edx ; ret
0x000002000076d3b2 : add al, 0xc0 ; mov qword ptr [rip - 0x471b03], rax ; ret
0x00000200001318d1 : add al, 0xc1 ; movzx eax, byte ptr [rax + 0xac] ; ret
0x0000020000030f19 : add al, 0xc1 ; ret
0x0000020000020a29 : add al, 0xc1 ; test dword ptr [rax], edx ; jne 0x20000020a3a ; xor eax, eax ; ret
0x000002000013e008 : add al, 0xc2 ; jmp 0x2000013e01b
0x0000020000221b11 : add al, 0xc2 ; jmp 0x20000221b25
0x0000020000223f9f : add al, 0xc2 ; jmp 0x20000223fb3
0x000002000022984f : add al, 0xc2 ; jmp 0x20000229863
0x0000020000229aca : add al, 0xc2 ; jmp 0x20000229ade
0x000002000022d9c0 : add al, 0xc2 ; jmp 0x2000022d9d4
0x000002000022dc04 : add al, 0xc2 ; jmp 0x2000022dc18
0x00000200002303d4 : add al, 0xc2 ; jmp 0x200002303e8
0x00000200004e1da2 : add al, 0xc2 ; jmp 0x200004e1d4b
0x000002000073196b : add al, 0xc2 ; jmp 0x2000073197e
0x0000020000731bc9 : add al, 0xc2 ; jmp 0x20000731bdc
0x00000200007338eb : add al, 0xc2 ; jmp 0x200007338fe
0x000002000073580c : add al, 0xc2 ; jmp 0x2000073581f
0x000002000073e900 : add al, 0xc2 ; jmp 0x2000073e913
0x000002000073eef1 : add al, 0xc2 ; jmp 0x2000073ef04
0x000002000003dacc : add al, 0xc2 ; ret
0x00000200003ae4c4 : add al, 0xc3 ; mov al, 2 ; ret
0x000002000043ee23 : add al, 0xc3 ; mov eax, 0xc0000023 ; ret
0x0000020000030a7b : add al, 0xc3 ; mov eax, 1 ; ret
0x000002000046331f : add al, 0xc3 ; mov eax, 3 ; ret
0x000002000040f67d : add al, 0xc3 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000051bed : add al, 0xc3 ; xor eax, eax ; ret
0x00000200000df6da : add al, 0xc5 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200005743aa : add al, 0xc8 ; call qword ptr [rax - 0x18a83d17]
0x00000200005360c8 : add al, 0xc8 ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x0000020000062df6 : add al, 0xc8 ; mov al, r10b ; add rsp, 0x28 ; ret
0x0000020000595a83 : add al, 0xc8 ; mov ecx, 1 ; call rax
0x00000200003b072f : add al, 0xc8 ; mov ecx, edi ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x000002000009b45d : add al, 0xc8 ; ret
0x0000020000438f3d : add al, 0xc9 ; inc edx ; cmp edx, r8d ; jbe 0x20000438f41 ; ret
0x000002000014f7b7 : add al, 0xc9 ; mov rax, qword ptr [rax + r8*8 + 8] ; ret
0x00000200002129b8 : add al, 0xcc ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001b8366 : add al, 0xcd ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000002000009da83 : add al, 0xd0 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000001a5eb : add al, 0xd0 ; inc edx ; jmp 0x2000001a5e0
0x0000020000012cfb : add al, 0xd0 ; mov rax, qword ptr [rax + 0x1648] ; ret
0x000002000004585f : add al, 0xd0 ; mov rax, qword ptr [rax + 0x1650] ; ret
0x000002000007beca : add al, 0xd0 ; ret
0x00000200001f0b09 : add al, 0xd1 ; je 0x200001f0b1c ; mov eax, 0xc000000d ; ret
0x00000200004e0b66 : add al, 0xd5 ; inc dword ptr [rbp - 0x74838725] ; ret
0x00000200003acae8 : add al, 0xd6 ; idiv bh ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001a5e7 : add al, 0xd6 ; mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x2000001a5e4
0x000002000040c748 : add al, 0xd8 ; add al, byte ptr [rax] ; add rsp, 0x78 ; ret
0x000002000011cf82 : add al, 0xd8 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005204b : add al, 0xd9 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000505778 : add al, 0xda ; ret 0x4cff
0x00000200006dbce0 : add al, 0xdf ; ret
0x000002000016dd7b : add al, 0xe8 ; call qword ptr [rbx]
0x0000020000046a9f : add al, 0xe8 ; fild dword ptr [rsi - 0x74b7fff0] ; ret
0x00000200001dd97c : add al, 0xe8 ; pop rsi ; ret 0xffef
0x00000200003c86c7 : add al, 0xe8 ; ret
0x0000020000781760 : add al, 0xe8 ; ret 0xce0f
0x00000200001593c5 : add al, 0xe9 ; loopne 0x200001593fe ; jmp 0x200001593d2
0x00000200000946db : add al, 0xe9 ; ret 0xfff5
0x00000200004482f8 : add al, 0xe9 ; sub eax, 0xf6ffffff ; ret 0x7503
0x00000200001588ef : add al, 0xeb ; dec dword ptr [rax + 3] ; ret 0x2bb
0x000002000049cd45 : add al, 0xf ; mov bh, 0xc1 ; ret
0x00000200003e37cd : add al, 0xf ; mov dh, 0xc1 ; ret
0x0000020000671ecf : add al, 0xf ; mov edx, 0xa0917e9 ; ret
0x0000020000613d83 : add al, 0xf ; mov edx, 0xce830df3 ; add al, 0xf7 ; ret
0x000002000017b78c : add al, 0xf ; test byte ptr [rbx - 0x900113d], ch ; ret 0xba01
0x0000020000095278 : add al, 0xf ; test ch, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000045a9af : add al, 0xf ; test dword ptr [rbx], edx ; ret
0x00000200003b461d : add al, 0xf ; test dword ptr [rdi - 0x9ffe570], ebp ; ret
0x000002000010199d : add al, 0xf ; test dword ptr [rdi - 0x9fff957], ecx ; ret
0x00000200003b51f3 : add al, 0xf ; test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add dh, dh ; ret 0x7402
0x00000200004a0464 : add al, 0xf ; test edi, ebp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x4002
0x0000020000177fb9 : add al, 0xf ; test edi, edx ; xlatb ; in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000588235 : add al, 0xf ; xchg byte ptr [rdi - 0x740009ad], bl ; ret
0x00000200001bd6c0 : add al, 0xf ; xchg eax, esp ; ret 0xdfeb
0x0000020000114434 : add al, 0xf ; xor edx, edx ; xor ecx, ecx ; call rax
0x00000200006c6fe8 : add al, 0xf0 ; inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x00000200001e4bcf : add al, 0xf0 ; inc dword ptr [rcx + 8] ; ret
0x00000200001976e1 : add al, 0xf4 ; dec dword ptr [rdi] ; mov dh, 0x53 ; and esi, esi ; ret 0xf08
0x00000200001a4847 : add al, 0xf6 ; fcomp dword ptr [rbx] ; sal bh, 0xd8 ; inc eax ; ret
0x00000200000fabe2 : add al, 0xf6 ; ret
0x000002000061f0e5 : add al, 0xf6 ; ret 0x7403
0x00000200006276d4 : add al, 0xf6 ; ret 0x7404
0x00000200003eff6f : add al, 0xf6 ; ret 0x7502
0x0000020000199bc7 : add al, 0xf6 ; ret 0x7508
0x000002000056e4aa : add al, 0xf6 ; ret 0xf01
0x0000020000450ea5 : add al, 0xf7 ; ret
0x00000200004115a6 : add al, 0xf7 ; ret 0xfff8
0x00000200001b463b : add al, 0xf7 ; shl dword ptr [rbx], cl ; ret
0x0000020000441868 : add al, 0xfc ; ret 0x48ff
0x00000200000f1903 : add al, 0xfd ; lock dec dword ptr [rcx + 0x8c] ; ret
0x0000020000061ebe : add al, 0xff ; je 0x20000061ecf ; add rsp, 0x28 ; ret
0x0000020000061ebd : add al, 0xff ; je 0x20000061ed0 ; add rsp, 0x28 ; ret
0x00000200001a16c8 : add al, 0xff ; ret
0x00000200005f377f : add al, 0xff ; ret 0x15eb
0x0000020000538b8f : add al, 0xff ; ret 0x533b
0x0000020000040c68 : add al, 0xff ; ret 0x5489
0x0000020000686629 : add al, 0xff ; ret 0x854d
0x0000020000763e0e : add al, 0xff ; ret 0x8841
0x000002000004456e : add al, 0xff ; ret 0xc148
0x00000200001e8515 : add al, 1 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000052c92d : add al, 1 ; add byte ptr [rax], al ; call 0x2000014f4c7
0x0000020000545fef : add al, 1 ; and rax, 0xfffffffffffffffe ; add rax, r8 ; ret
0x00000200001b6e82 : add al, 1 ; cmp r8d, r9d ; jae 0x200001b6e95 ; mov al, 1 ; ret
0x000002000059e53d : add al, 1 ; inc edx ; jmp 0x2000059e519
0x000002000057183e : add al, 1 ; ret
0x000002000001145b : add al, 1 ; shr rax, 9 ; and eax, 1 ; ret
0x0000020000129c48 : add al, 2 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001a8871 : add al, 2 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000041ee42 : add al, 3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; ret
0x0000020000042486 : add al, 3 ; add byte ptr [rax], al ; shr al, 2 ; and al, 1 ; ret
0x000002000058e5ea : add al, 3 ; ret
0x0000020000206543 : add al, 3 ; ret 0x2075
0x000002000068667b : add al, 3 ; ret 0x4589
0x0000020000206551 : add al, 3 ; ret 0x675
0x000002000064610f : add al, 3 ; ret 0x8948
0x000002000040dbac : add al, 4 ; add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000200000082bb : add al, 8 ; ret
0x0000020000033bac : add al, 9 ; ret
0x0000020000141a7a : add al, ah ; add byte ptr [rax], al ; ret
0x000002000053d4e4 : add al, ah ; dec dword ptr [rax - 0x75] ; ret
0x0000020000788c17 : add al, ah ; ret 0x4078
0x0000020000159555 : add al, al ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x0000020000141e7a : add al, al ; add byte ptr [rax], al ; ret
0x00000200001afcee : add al, al ; add rsp, 0x1c8 ; ret
0x000002000001e821 : add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005d131 : add al, al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000304c8 : add al, al ; add rsp, 0x28 ; ret
0x00000200001bbd8a : add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000123f5c : add al, al ; add rsp, 0x38 ; ret
0x00000200001b5327 : add al, al ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000053316 : add al, al ; add rsp, 0x48 ; ret
0x00000200001f87aa : add al, al ; add rsp, 0x50 ; pop rbx ; ret
0x00000200006226ba : add al, al ; add rsp, 0x70 ; pop rbp ; ret
0x00000200006201c7 : add al, al ; add rsp, 0xa8 ; ret
0x0000020000212dc0 : add al, al ; and dword ptr [r9], 0 ; ret
0x0000020000159524 : add al, al ; and qword ptr [rcx + 0x18], rax ; ret
0x000002000007bb7d : add al, al ; call 0x1ffc229fc8d
0x00000200004875ec : add al, al ; call 0x1ffc26ab6fe
0x0000020000042489 : add al, al ; call 0x1ffc3054898
0x000002000005c7bf : add al, al ; call 0x1ffc306ebd2
0x0000020000506d05 : add al, al ; call 0x1ffc3519115
0x00000200006ce0b4 : add al, al ; call 0x2000006a2e0
0x000002000043cdd6 : add al, al ; call 0x2000006a2e1
0x000002000049a590 : add al, al ; call 0x200000c23c5
0x00000200001ba5b1 : add al, al ; cmove eax, ecx ; add rsp, 0x28 ; ret
0x000002000069a503 : add al, al ; cmove eax, ecx ; add rsp, 0x38 ; ret
0x000002000057702c : add al, al ; cmove ebx, ecx ; mov eax, ebx ; jmp 0x200003f329b
0x0000020000530c9c : add al, al ; cmove edx, eax ; mov eax, edx ; ret
0x000002000051f3c5 : add al, al ; cmovne eax, ecx ; add rsp, 0x28 ; ret
0x000002000002f701 : add al, al ; cmp eax, ecx ; ja 0x2000002f70e ; ret
0x000002000003b07d : add al, al ; je 0x2000003b0c4 ; mov al, 1 ; ret
0x00000200000733f4 : add al, al ; je 0x2000007340d ; mov eax, ecx ; ret
0x00000200000e4540 : add al, al ; je 0x200000e454d ; mov al, 1 ; ret
0x000002000050b235 : add al, al ; je 0x2000050b208 ; jmp 0x2000050b215
0x000002000051ec83 : add al, al ; je 0x2000051ec96 ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000161bbf : add al, al ; jmp 0x2000002dead
0x000002000005c784 : add al, al ; jmp 0x2000005c74d
0x00000200000c36b1 : add al, al ; jmp 0x200000c367b
0x00000200001324f6 : add al, al ; jmp 0x200001324c0
0x00000200001f07af : add al, al ; jmp 0x200001f0960
0x00000200002084cd : add al, al ; jmp 0x20000208591
0x000002000055d69c : add al, al ; jmp 0x200003b46fc
0x00000200003d7ee2 : add al, al ; jmp 0x200003d7eac
0x0000020000577046 : add al, al ; jmp 0x200003f3296
0x0000020000577283 : add al, al ; jmp 0x200003f3c85
0x000002000057e22a : add al, al ; jmp 0x20000404d9d
0x000002000057e1b9 : add al, al ; jmp 0x20000404dfa
0x000002000040cab8 : add al, al ; jmp 0x2000040ca81
0x000002000041775a : add al, al ; jmp 0x20000417724
0x000002000043709a : add al, al ; jmp 0x20000437064
0x00000200004381fe : add al, al ; jmp 0x200004381c8
0x000002000043f060 : add al, al ; jmp 0x2000043f029
0x000002000044d62d : add al, al ; jmp 0x2000044d5f6
0x000002000044e7d9 : add al, al ; jmp 0x2000044e7a3
0x00000200005a5161 : add al, al ; jmp 0x20000454ba9
0x00000200005a538d : add al, al ; jmp 0x20000454ee6
0x00000200005a9c09 : add al, al ; jmp 0x20000465e3a
0x00000200005ad367 : add al, al ; jmp 0x2000046957d
0x00000200004921e5 : add al, al ; jmp 0x20000491ba8
0x000002000049a360 : add al, al ; jmp 0x2000049a8cf
0x00000200005c97a1 : add al, al ; jmp 0x200004d3486
0x00000200004d93a0 : add al, al ; jmp 0x200004d9369
0x00000200004e1156 : add al, al ; jmp 0x200004e111f
0x00000200004e43b0 : add al, al ; jmp 0x200004e4379
0x000002000058ba9b : add al, al ; jmp 0x200004f7cf0
0x00000200005ff8c7 : add al, al ; jmp 0x200005ff890
0x00000200006042df : add al, al ; jmp 0x200006043d1
0x00000200006324fd : add al, al ; jmp 0x2000063277f
0x0000020000694c54 : add al, al ; jmp 0x20000694d4e
0x00000200006db315 : add al, al ; jmp 0x200006d752a
0x0000020000778328 : add al, al ; jmp 0x200007545db
0x0000020000764793 : add al, al ; jmp 0x2000076475d
0x0000020000782bea : add al, al ; jmp 0x20000782c07
0x000002000053d000 : add al, al ; jne 0x2000053d013 ; mov eax, 1 ; ret
0x0000020000689827 : add al, al ; mov dword ptr [r8], r9d ; ret
0x00000200001ab883 : add al, al ; mov dword ptr [rcx], edx ; ret
0x0000020000633429 : add al, al ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000542398 : add al, al ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005ff9b5 : add al, al ; mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x000002000050f125 : add al, al ; mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x000002000069de81 : add al, al ; mov eax, edx ; jmp 0x2000069de8f
0x000002000068eff8 : add al, al ; mov eax, r10d ; ret
0x0000020000506681 : add al, al ; mov eax, r11d ; add rsp, 0x28 ; ret
0x00000200001bfab6 : add al, al ; mov eax, r8d ; ret
0x00000200001b933f : add al, al ; mov eax, r9d ; add rsp, 0x28 ; ret
0x0000020000203514 : add al, al ; mov eax, r9d ; ret
0x000002000021e7ea : add al, al ; mov rbx, qword ptr [rsp + 8] ; mov eax, ecx ; ret
0x000002000048eba8 : add al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003e5fac : add al, al ; mov rcx, rdi ; call 0x20000013278
0x00000200005966ad : add al, al ; mov rdi, qword ptr [rsp + 0x70] ; jmp 0x200005128e2
0x0000020000038e96 : add al, al ; neg rcx ; sbb ecx, ecx ; and eax, ecx ; ret
0x00000200000177e3 : add al, al ; ret
0x00000200001c97ab : add al, al ; shr rdx, 0x20 ; wrmsr ; ret
0x00000200001ad372 : add al, al ; test r9, r9 ; je 0x200001ad384 ; call r9
0x0000020000636012 : add al, al ; test rdx, rdx ; je 0x20000636022 ; call rdx
0x000002000014f6b4 : add al, al ; xor eax, eax ; ret
0x000002000014177a : add al, bh ; add byte ptr [rax], al ; ret
0x0000020000141b7a : add al, bl ; add byte ptr [rax], al ; ret
0x000002000064b5fc : add al, bl ; jmp r8
0x00000200001c3d3b : add al, bl ; mov byte ptr [r8], 1 ; mov qword ptr [rdx], r9 ; ret
0x0000020000109a36 : add al, bl ; mov dword ptr [r10], 0 ; ret
0x00000200003be3cf : add al, bl ; mov eax, 0x10000000 ; ret
0x00000200004b4820 : add al, bl ; ret
0x00000200003ae4c7 : add al, bl ; xor al, al ; ret
0x00000200003c97ee : add al, bl ; xor eax, eax ; ret
0x0000020000042c9a : add al, byte ptr [r8] ; add rsp, 0x38 ; ret
0x00000200001720fd : add al, byte ptr [r9 + 0xf] ; fdiv st(6) ; ret 0x7402
0x00000200005f4967 : add al, byte ptr [r9 - 0x75] ; rol cl, 0xe8 ; add dh, byte ptr [rdx] ; ret 0xc141
0x00000200000cc7ca : add al, byte ptr [r9 - 1] ; ret
0x00000200004bdfef : add al, byte ptr [r9 - 1] ; ret 0x348
0x0000020000231b98 : add al, byte ptr [r9] ; add bpl, cl ; ret 0xfffe
0x0000020000419de5 : add al, byte ptr [r9] ; jne 0x20000419df4 ; xor eax, eax ; ret
0x0000020000083f87 : add al, byte ptr [rax - 0x7af0fe1f] ; ret 0
0x00000200001e78bb : add al, byte ptr [rax] ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000130fb2 : add al, byte ptr [rax] ; add al, al ; add rsp, 0x28 ; ret
0x0000020000465b5b : add al, byte ptr [rax] ; add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000001c1f2 : add al, byte ptr [rax] ; add al, al ; ret
0x0000020000636010 : add al, byte ptr [rax] ; add al, al ; test rdx, rdx ; je 0x20000636024 ; call rdx
0x0000020000441864 : add al, byte ptr [rax] ; add al, ch ; add al, 0xfc ; ret 0x48ff
0x000002000051052d : add al, byte ptr [rax] ; add al, ch ; mov ebp, edi ; ret
0x000002000043adb7 : add al, byte ptr [rax] ; add al, ch ; pop r9 ; ret
0x000002000050ad94 : add al, byte ptr [rax] ; add al, ch ; push rsi ; ret
0x00000200003dafc5 : add al, byte ptr [rax] ; add al, ch ; ret
0x000002000060dae6 : add al, byte ptr [rax] ; add al, ch ; ret 0x48ff
0x0000020000443350 : add al, byte ptr [rax] ; add al, ch ; sbb cl, ah ; ret 0x48ff
0x0000020000230ca0 : add al, byte ptr [rax] ; add bh, bh ; loopne 0x20000230cf7 ; add esp, 0x48 ; ret
0x000002000006c14e : add al, byte ptr [rax] ; add bh, bh ; ret
0x000002000001803d : add al, byte ptr [rax] ; add bh, bh ; ret 0x5489
0x00000200000acfc4 : add al, byte ptr [rax] ; add bh, bh ; ret 0x8b48
0x000002000004189c : add al, byte ptr [rax] ; add bh, bh ; ret 0x9489
0x00000200004110fd : add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x0000020000446dbf : add al, byte ptr [rax] ; add bh, dh ; ret
0x00000200004acd70 : add al, byte ptr [rax] ; add bh, dh ; ret 0
0x00000200003c768b : add al, byte ptr [rax] ; add bh, dh ; ret 0xffff
0x000002000019fa24 : add al, byte ptr [rax] ; add bl, ch ; add ecx, dword ptr [rbp - 0x75] ; ret 0x8548
0x00000200000cb89a : add al, byte ptr [rax] ; add bl, ch ; sub eax, 0xe9c88b48 ; ret 0xfffe
0x00000200000b0d83 : add al, byte ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x000002000072d97d : add al, byte ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x0000020000680f76 : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x00000200000a079d : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x0000020000063ed3 : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x9277
0x000002000008f76a : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x9577
0x0000020000603657 : add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0xa74
0x000002000020e9e6 : add al, byte ptr [rax] ; add byte ptr [rax + 0x6b], cl ; ret 0x3364
0x000002000074c0bc : add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200003a2a79 : add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x0000020000080c15 : add al, byte ptr [rax] ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200000dde92 : add al, byte ptr [rax] ; add byte ptr [rax - 0x3f], cl ; jmp 0x20048d0ddad
0x00000200005208f4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x3ffffff3], bh ; ret
0x0000020000524601 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x00000200004c34b4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000ea7c9
0x000002000003c39f : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003a2969 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000064a579 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200001f67d8
0x000002000064a578 : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200001f67d9
0x000002000064a56c : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200001f6848
0x00000200000ab6fc : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200000c8176 : add al, byte ptr [rax] ; add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x0000020000074f28 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000074f39 ; ret
0x00000200000fea8d : add al, byte ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], cl ; test byte ptr [rdi], bl ; ret
0x00000200006481a9 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7c], al ; push qword ptr [rdx + rax - 1] ; ret
0x00000200000a4b3f : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001d6162 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4102
0x000002000004a40a : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x411f
0x000002000041b118 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4130
0x000002000074f935 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4c02
0x00000200006c5cda : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x00000200005b2496 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000052489c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x1e8
0x000002000052484c : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x1f8
0x000002000047e087 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x240
0x0000020000139f88 : add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret
0x00000200000e015a : add al, byte ptr [rax] ; add byte ptr [rax - 1], cl ; ret 0x8148
0x00000200001ce0d2 : add al, byte ptr [rax] ; add byte ptr [rax - 9], cl ; ret
0x000002000016eb06 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x00000200001c5998 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000096be2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000048ad93 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x20000067012
0x0000020000475d2c : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x200000a4fb7
0x00000200004c49d1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x200000ebe77
0x00000200004ec689 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x2000011707f
0x0000020000595262 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x200003b14a6
0x0000020000147ed5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call qword ptr [rip + 0xec251]
0x000002000046186c : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r12
0x00000200004dee79 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r14
0x00000200005cfe61 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call r15
0x00000200002065dc : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x0000020000463469 : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdi
0x0000020000693bfa : add al, byte ptr [rax] ; add byte ptr [rax], al ; call rsi
0x00000200000dc548 : add al, byte ptr [rax] ; add byte ptr [rax], al ; je 0x200000dc539 ; mov al, 1 ; ret
0x00000200006921f1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 1] ; call rdi
0x0000020000692a1b : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 2] ; call rdi
0x000002000069148e : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 0xb] ; call rsi
0x0000020000691e35 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 1] ; call rdi
0x0000020000690cc1 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 2] ; call rdi
0x00000200005c98ee : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 6] ; call rsi
0x0000020000692b3d : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 7] ; call rdi
0x00000200004dd6e6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 8] ; call rsi
0x00000200006938b0 : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 9] ; call r14
0x0000020000690f0f : add al, byte ptr [rax] ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 9] ; call rdi
0x0000020000053829 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov cr8, rcx ; ret
0x000002000046a335 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x0000020000030a84 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000008b2b2 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x3b411104], cl ; ret
0x00000200004e5774 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x3b], al ; ret 0x850f
0x00000200000643b3 : add al, byte ptr [rax] ; add byte ptr [rbp + 0x3b], cl ; ret 0xc072
0x00000200001f4514 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x74bb008e], cl ; ret 0xf003
0x000002000002ad9e : add al, byte ptr [rax] ; add byte ptr [rbp - 0x74bb00bd], cl ; ret 0x4404
0x000002000047e7c6 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x74e58b2e], al ; ret 0xc2ff
0x00000200005eab89 : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000013649a : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rcx - 0x7d] ; ret 0xe908
0x00000200001dbf6d : add al, byte ptr [rax] ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200000ea67a : add al, byte ptr [rax] ; add byte ptr [rbp - 0x76], al ; ret 0x8b49
0x00000200000ba540 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x1c8948c6], cl ; ret 0x8548
0x0000020000097d1a : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x41], cl ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000452f08 : add al, byte ptr [rax] ; add byte ptr [rbx + rcx*4 - 0x3d], cl ; mov rcx, r13 ; call rax
0x00000200000c6987 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x49f00037], al ; ret 0xf44
0x00000200003d8338 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x74b383aa], cl ; ret
0x00000200001365f1 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf09117], al ; ret 1
0x00000200004fdb14 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x9d7c4ac], cl ; ret 0xf20
0x00000200004dfb5d : add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret
0x00000200000e2cd8 : add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret 0x377
0x00000200003f5fc5 : add al, byte ptr [rax] ; add byte ptr [rbx], dh ; fisttp dword ptr [rax - 0x75] ; ret 0x2b49
0x000002000005891b : add al, byte ptr [rax] ; add byte ptr [rbx], dh ; jmp qword ptr [rcx]
0x000002000008f3d0 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x2b], cl ; fsub st(1), st(0) ; ret
0x00000200003e128e : add al, byte ptr [rax] ; add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x0000020000131818 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000052a3ed : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003d6a2 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000044281e : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x000002000019d3c5 : add al, byte ptr [rax] ; add byte ptr [rcx + 0x5f], al ; pop rbp ; ret
0x000002000059413b : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x6d], cl ; adc al, ch ; cdq ; ret 0xffba
0x0000020000445487 : add al, byte ptr [rax] ; add byte ptr [rcx + rcx*8 - 0x74b3e78c], al ; ret 0xc2f6
0x000002000022644a : add al, byte ptr [rax] ; add byte ptr [rcx - 0x73], al ; add r15d, dword ptr [rdx] ; ret
0x00000200001f89cb : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x0000020000574c87 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret 0x8948
0x0000020000103a0d : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret 0xe8c1
0x000002000049a2ee : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; int 0xe8
0x00000200001364a6 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x00000200001fa85d : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0x148
0x000002000002582a : add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0x8b48
0x00000200005194b8 : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7b], al ; ret 0x850f
0x000002000004aa8c : add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000020000231d3b : add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x000002000051583a : add al, byte ptr [rax] ; add byte ptr [rcx - 1], al ; ret
0x00000200000d39ec : add al, byte ptr [rax] ; add byte ptr [rcx], al ; je 0x200000d39fd ; xor al, al ; ret
0x00000200000d39eb : add al, byte ptr [rax] ; add byte ptr [rcx], al ; je 0x200000d39fe ; xor al, al ; ret
0x00000200002088d3 : add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000005a256 : add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x0000020000415d39 : add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x0000020000055ebd : add al, byte ptr [rax] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000048d113 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x8b48
0x0000020000053d63 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8348
0x000002000004aa78 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; sbb ecx, dword ptr [rax - 1] ; ret
0x00000200005a6cb4 : add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x5d], cl ; ret 0x820f
0x0000020000021197 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x00000200000d4344 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0x00000200000c68b8 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x00000200000cf5dc : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200004a1363 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0xd3 ; call 0x2000043d584
0x00000200003fd10e : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; test byte ptr [rdi], dh ; ret 0x17
0x00000200000dbf28 : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; test byte ptr [rdi], dl ; ret
0x00000200005d204e : add al, byte ptr [rax] ; add byte ptr [rdi], cl ; xchg dword ptr [rsi - 0x16], ecx ; cmc ; call rcx
0x0000020000068eed : add al, byte ptr [rax] ; add byte ptr [rdx + rcx*4 - 0x7d], al ; ret
0x000002000002731b : add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x4874
0x000002000005c726 : add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x5375
0x000002000008b864 : add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x820f
0x00000200003cea8d : add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x00000200001a0cd3 : add al, byte ptr [rax] ; add byte ptr [rsi - 0x7b], ah ; ret
0x00000200000921a8 : add al, byte ptr [rax] ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x000002000005723c : add al, byte ptr [rax] ; add cl, ch ; or al, 0 ; add byte ptr [rax], al ; ret
0x0000020000017211 : add al, byte ptr [rax] ; add dh, dh ; ret
0x00000200003b51f7 : add al, byte ptr [rax] ; add dh, dh ; ret 0x7402
0x000002000042269e : add al, byte ptr [rax] ; add dh, dh ; ret 0x7510
0x000002000007edb9 : add al, byte ptr [rax] ; add dh, dh ; ret 0x751e
0x0000020000498d22 : add al, byte ptr [rax] ; add dh, dh ; ret 0xc601
0x0000020000069be9 : add al, byte ptr [rax] ; add dh, dh ; ret 0xf01
0x000002000064a305 : add al, byte ptr [rax] ; add dh, dh ; ret 0xfbf
0x000002000010b601 : add al, byte ptr [rax] ; add rsp, 0x138 ; ret
0x000002000074552a : add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000039268 : add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000039aa0 : add al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x000002000010b1c3 : add al, byte ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x000002000010c1ae : add al, byte ptr [rax] ; add rsp, 0x48 ; ret
0x0000020000107d3b : add al, byte ptr [rax] ; add rsp, 0x58 ; ret
0x000002000010c5bb : add al, byte ptr [rax] ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000108a28 : add al, byte ptr [rax] ; add rsp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000040c74a : add al, byte ptr [rax] ; add rsp, 0x78 ; ret
0x00000200006bb989 : add al, byte ptr [rax] ; and dword ptr [rip + 0x2271e], 0 ; ret
0x000002000011f2e2 : add al, byte ptr [rax] ; jmp 0x2000011f2ac
0x0000020000079bdf : add al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x38 ; ret
0x0000020000042eb5 : add al, byte ptr [rax] ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003c908 : add al, byte ptr [rax] ; mov dword ptr [rax], r9d ; add rsp, 0x28 ; ret
0x0000020000044dab : add al, byte ptr [rax] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000752cfa : add al, byte ptr [rax] ; mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x00000200006b72e4 : add al, byte ptr [rax] ; mov qword ptr [rax], r9 ; mov al, 1 ; ret
0x00000200006b7330 : add al, byte ptr [rax] ; mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x000002000002d624 : add al, byte ptr [rax] ; or edx, eax ; mov dword ptr [rcx + 0x10], edx ; xor eax, eax ; ret
0x00000200006b071e : add al, byte ptr [rax] ; ret
0x000002000068eb21 : add al, byte ptr [rax] ; rol bl, 0x4d ; mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x00000200005fd21e : add al, byte ptr [rax] ; rol bl, 0xb8 ; cmp byte ptr [rax], al ; add al, al ; ret
0x00000200005fd141 : add al, byte ptr [rax] ; rol bl, 0xb8 ; jg 0x200005fd151 ; add al, al ; ret
0x00000200000733fd : add al, byte ptr [rax] ; rol bl, 0xb8 ; xor eax, dword ptr [rax] ; add al, al ; ret
0x000002000068eff7 : add al, byte ptr [rax] ; rol byte ptr [rcx - 0x75], 0xc2 ; ret
0x000002000048eba7 : add al, byte ptr [rax] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200006226b9 : add al, byte ptr [rax] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000622726 ; ret
0x000002000058bab9 : add al, byte ptr [rax] ; shr cl, 0xf2 ; ret
0x0000020000041e52 : add al, byte ptr [rax] ; sti ; add rsp, 0x28 ; ret
0x000002000041a4b0 : add al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000f19d8 : add al, byte ptr [rbp + 0x23] ; ret
0x00000200006649c9 : add al, byte ptr [rbp + 0x33] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000424e93 : add al, byte ptr [rbp + 0x3b] ; ret
0x000002000005e992 : add al, byte ptr [rbp + 0xb0775c3] ; ret
0x00000200003fb535 : add al, byte ptr [rbp + 3] ; ret 0x3b45
0x0000020000507c1c : add al, byte ptr [rbp + rcx*4 + 0x42] ; adc al, ch ; jbe 0x20000507c0b ; ret 0x33ff
0x00000200004eb57e : add al, byte ptr [rbp + rcx*4 + 0x6f] ; add dword ptr [rdi], ecx ; test dword ptr [rbx], edx ; ret
0x000002000004d20b : add al, byte ptr [rbp - 0x73] ; add word ptr [rcx + 0x3b], cx ; ret 0x6474
0x0000020000097363 : add al, byte ptr [rbp - 0x75] ; ret
0x000002000043eea2 : add al, byte ptr [rbp - 0x7c] ; leave ; jne 0x2000043eebf ; xor eax, eax ; ret
0x000002000043eea1 : add al, byte ptr [rbp - 0x7c] ; leave ; jne 0x2000043eec0 ; xor eax, eax ; ret
0x00000200004e7f9e : add al, byte ptr [rbx + 0x334d03e2] ; ret
0x0000020000773f7d : add al, byte ptr [rbx + 0x440f0ff9] ; ret 0x8348
0x0000020000031deb : add al, byte ptr [rbx + rdi - 0x40] ; jne 0x20000031dfe ; or eax, 0xffffffff ; ret
0x00000200004befd4 : add al, byte ptr [rbx - 0x1f7cfc40] ; cld ; add eax, edx ; ret
0x000002000072d229 : add al, byte ptr [rbx - 0x76b7073f] ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x0000020000148e1f : add al, byte ptr [rbx - 0x7cb6ff30] ; ret 0xff02
0x00000200003c8ed3 : add al, byte ptr [rcx + 0x1000c2] ; add byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x000002000007bb51 : add al, byte ptr [rcx + 0x22] ; ret 0x288
0x00000200001d6dde : add al, byte ptr [rcx + 0x23] ; ret
0x0000020000584dbe : add al, byte ptr [rcx + 0x32] ; ret 0x4788
0x00000200005f495e : add al, byte ptr [rcx + 0x32] ; ret 0x8844
0x00000200001f97f0 : add al, byte ptr [rcx + 0x33] ; ret 0x3b74
0x00000200001f97ca : add al, byte ptr [rcx + 0x33] ; ret 0x6174
0x00000200003a5c4a : add al, byte ptr [rcx + 0x3b] ; ret
0x0000020000578204 : add al, byte ptr [rcx + 0xb] ; ret
0x00000200001720fe : add al, byte ptr [rcx + 0xf] ; fdiv st(6) ; ret 0x7402
0x0000020000649806 : add al, byte ptr [rcx + 0xf] ; mov bh, 0xc9 ; movzx eax, word ptr [rax + rcx*2] ; ret
0x0000020000587b08 : add al, byte ptr [rcx + 0xf] ; shr cl, 1 ; ret
0x000002000020ca69 : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8a41
0x000002000020ca39 : add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xb60f
0x000002000013e8d8 : add al, byte ptr [rcx + 2] ; ret
0x0000020000532083 : add al, byte ptr [rcx + 3] ; ret
0x00000200004a0af4 : add al, byte ptr [rcx - 0x3a] ; add byte ptr [rcx], al ; mov al, 1 ; ret
0x000002000003244a : add al, byte ptr [rcx - 0x75] ; and al, 0x41 ; mov dword ptr [rax], eax ; ret
0x0000020000450e98 : add al, byte ptr [rcx - 0x75] ; ret
0x00000200003ee14e : add al, byte ptr [rcx - 0x75] ; ret 0x41c3
0x00000200005d53cf : add al, byte ptr [rcx - 0x75] ; ret 0xe8c1
0x00000200005f4968 : add al, byte ptr [rcx - 0x75] ; rol cl, 0xe8 ; add dh, byte ptr [rdx] ; ret 0xc141
0x00000200004e7fbc : add al, byte ptr [rcx - 0x76] ; shl byte ptr [rbx + rax], 0x3a ; ret 0x2975
0x0000020000652bfb : add al, byte ptr [rcx - 0x77] ; or dword ptr [rcx - 0x75], eax ; ret
0x00000200004790e6 : add al, byte ptr [rcx - 0x7b] ; ret
0x00000200001f628a : add al, byte ptr [rcx - 0x7d] ; call 0x1ff8c0edb9c
0x000002000068768c : add al, byte ptr [rcx - 0x7d] ; clc ; or dh, byte ptr [rdx - 0x12] ; ret
0x000002000066dd6e : add al, byte ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x00000200004409a4 : add al, byte ptr [rcx - 0x7d] ; ret 0x4503
0x000002000000a4ba : add al, byte ptr [rcx - 0xa] ; ret 0x7404
0x00000200001f107a : add al, byte ptr [rcx - 0xa] ; ret 0x7501
0x00000200000edb3a : add al, byte ptr [rcx - 0xa] ; ret 0xf01
0x00000200000c8d0f : add al, byte ptr [rcx - 1] ; ret
0x00000200004bdff0 : add al, byte ptr [rcx - 1] ; ret 0x348
0x00000200000f8abe : add al, byte ptr [rcx - 1] ; ret 0xff41
0x0000020000231b99 : add al, byte ptr [rcx] ; add bpl, cl ; ret 0xfffe
0x000002000004da82 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200005fd1a8 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x0000020000419de6 : add al, byte ptr [rcx] ; jne 0x20000419df3 ; xor eax, eax ; ret
0x00000200000155ce : add al, byte ptr [rdi + rcx + 0x22] ; ret 0x4c65
0x000002000053eba5 : add al, byte ptr [rdi + rcx + 0x44] ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x000002000065cc47 : add al, byte ptr [rdx + rcx] ; inc edx ; jmp 0x2000065cc41
0x0000020000137c77 : add al, byte ptr [rdx] ; add rsp, 0x38 ; ret
0x0000020000102a8d : add al, byte ptr [rdx] ; jne 0x2000016c8f9 ; ret
0x0000020000040003 : add al, byte ptr [rsi] ; mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x00000200005244a0 : add al, byte ptr cs:[rax] ; add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x000002000005eefc : add al, byte ptr fs:[rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000060b9c6 : add al, ch ; adc al, 0x63 ; ret 0x4cff
0x00000200004b84a6 : add al, ch ; adc al, 0x9f ; sar bh, 0x8b ; ret
0x000002000014dae6 : add al, ch ; adc al, 0xa ; add byte ptr [rax], al ; nop ; ret
0x000002000049024a : add al, ch ; adc byte ptr [rbx], ch ; ret
0x00000200006b985d : add al, ch ; adc eax, 0x8bff99a2 ; ret
0x00000200004b86a5 : add al, ch ; adc eax, 0x8bffc09d ; ret
0x0000020000185991 : add al, ch ; adc eax, 0x90000647 ; jmp 0x20000091ca1
0x00000200004903f7 : add al, ch ; adc ebp, dword ptr [rsi] ; ret
0x00000200006b8084 : add al, ch ; add al, 0x9b ; dec dword ptr [rax - 0x75] ; ret
0x0000020000441866 : add al, ch ; add al, 0xfc ; ret 0x48ff
0x00000200004b481e : add al, ch ; add al, bl ; ret
0x000002000052b6b8 : add al, ch ; add bh, byte ptr [rsi] ; ret 0x48ff
0x00000200003b64ea : add al, ch ; add byte ptr [rax], 0 ; add dh, dh ; ret
0x000002000014197a : add al, ch ; add byte ptr [rax], al ; ret
0x000002000048ff7a : add al, ch ; add byte ptr [rdx], dh ; ret
0x000002000051c4b9 : add al, ch ; add dword ptr [rax], esi ; ret
0x00000200005c28b5 : add al, ch ; add eax, 0x8bffaffb ; ret
0x000002000048da4a : add al, ch ; and byte ptr [rdi], bl ; ret
0x00000200006704f5 : add al, ch ; and eax, 0x8bffa575 ; ret
0x000002000056bb51 : add al, ch ; and eax, 0x8bffe6be ; ret
0x0000020000014345 : add al, ch ; call 0x1ffc3f7435e
0x00000200003ae2bb : add al, ch ; call qword ptr [rcx]
0x0000020000566033 : add al, ch ; call qword ptr [rsi]
0x00000200001cf211 : add al, ch ; cdq ; ret
0x0000020000487fec : add al, ch ; cli ; ret
0x000002000039f46a : add al, ch ; cmp bh, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004b277f : add al, ch ; cmp edi, ebp ; ret 0x48ff
0x00000200005941a2 : add al, ch ; cwde ; ret
0x00000200004b7922 : add al, ch ; cwde ; stosb byte ptr [rdi], al ; sar bh, 0x8b ; ret
0x00000200005212e1 : add al, ch ; fabs ; ret 0x8bff
0x000002000067f5c1 : add al, ch ; fldenv dword ptr [rsi] ; jmp 0x1ffc3f386d1
0x000002000016ff4c : add al, ch ; fsubp st(4) ; dec dword ptr [rax - 0x75] ; ret
0x00000200004b6cc2 : add al, ch ; fsubr dword ptr [rax] ; sar edi, 0x32 ; ret
0x00000200004248b9 : add al, ch ; fxch st(0), st(5) ; ret 0x83ff
0x000002000048e3c3 : add al, ch ; imul eax ; ret 0x8aff
0x00000200003f90f2 : add al, ch ; in al, dx ; insd dword ptr [rdi], dx ; ret
0x000002000061d576 : add al, ch ; in al, dx ; ret
0x00000200006086ee : add al, ch ; in al, dx ; xchg eax, ebp ; ret 0x48ff
0x00000200005124d5 : add al, ch ; in eax, -0x31 ; ret
0x0000020000503869 : add al, ch ; in eax, 0x5f ; ret
0x00000200004efe55 : add al, ch ; in eax, 0x76 ; ret 0xa8ff
0x000002000058af9a : add al, ch ; insb byte ptr [rdi], dx ; ret
0x00000200001a4b25 : add al, ch ; insd dword ptr [rdi], dx ; mov edi, fs ; call qword ptr [rax - 0x7233d17]
0x000002000046cf17 : add al, ch ; insd dword ptr [rdi], dx ; mov esi, 0x74c084ff ; ret
0x00000200004b6b79 : add al, ch ; int1 ; push rdx ; ret
0x000002000048dfe3 : add al, ch ; ja 0x2000048e004 ; ret
0x000002000048f6e7 : add al, ch ; jae 0x2000048f725 ; ret
0x00000200004cb418 : add al, ch ; jb 0x200004cb45b ; ret 0x84ff
0x00000200001834ec : add al, ch ; jbe 0x200001834d4 ; out dx, al ; dec dword ptr [rax + 0x3b] ; ret 0xc74
0x00000200004fd530 : add al, ch ; jbe 0x200004fd4bb ; ret
0x000002000060eb66 : add al, ch ; je 0x2000060eb9f ; ret 0x48ff
0x0000020000680026 : add al, ch ; je 0x2000068004e ; jmp 0x1ffc3f39136
0x0000020000433dab : add al, ch ; jg 0x20000433e0e ; ret 0x89ff
0x00000200004b803b : add al, ch ; jg 0x200004b7fe9 ; sar bh, 0x8b ; ret
0x00000200004b753d : add al, ch ; jge 0x200004b74f6 ; sar bh, 0x8b ; ret
0x0000020000515e3e : add al, ch ; jl 0x20000515ddc ; ret
0x0000020000438078 : add al, ch ; jle 0x200004380d3 ; ret 0x48ff
0x00000200005a017f : add al, ch ; jmp 0x200005a0148
0x00000200001d4d1b : add al, ch ; jmp qword ptr [rax + rbp*8]
0x0000020000144e2b : add al, ch ; jmp qword ptr [rax]
0x00000200001d476b : add al, ch ; jmp rax
0x00000200006da767 : add al, ch ; jmp rsi
0x00000200004c1c05 : add al, ch ; jne 0x200004c1c69 ; ret 0x48ff
0x0000020000475d2f : add al, ch ; jnp 0x20000475d29 ; ret 0x48ff
0x000002000048fe61 : add al, ch ; jns 0x2000048fe98 ; ret
0x000002000049a0c1 : add al, ch ; jns 0x2000049a04d ; ret 0x33ff
0x00000200004b7e41 : add al, ch ; jns 0x200004b7df1 ; sar bh, 0x8b ; ret
0x000002000040115c : add al, ch ; jp 0x2000040117e ; ret
0x00000200003dada7 : add al, ch ; jrcxz 0x200003dada0 ; ret
0x000002000048ac37 : add al, ch ; jrcxz 0x2000048ac0c ; ret
0x00000200006bff8d : add al, ch ; lea ebx, dword ptr [rdx + rbx*4] ; dec dword ptr [rax - 0x75] ; ret
0x000002000053cfed : add al, ch ; lea esi, dword ptr [rbx] ; sar bh, 0x8b ; ret
0x0000020000434828 : add al, ch ; loop 0x20000434892 ; ret 0x48ff
0x0000020000680eb8 : add al, ch ; loop 0x20000680ed1 ; jmp 0x1ffc3f39fc8
0x00000200005e18c1 : add al, ch ; loope 0x200005e18a3 ; ret 0x84ff
0x000002000048386a : add al, ch ; loopne 0x200004837fb ; ret
0x000002000048ff26 : add al, ch ; mov ah, 0x2e ; ret
0x00000200004b8006 : add al, ch ; mov ah, 0xa3 ; sar bh, 0x8b ; ret
0x000002000049cb66 : add al, ch ; mov ah, 0xae ; ret 0x4cff
0x0000020000496b6a : add al, ch ; mov al, 0x1c ; ret 0x83ff
0x0000020000425c4a : add al, ch ; mov al, 0x65 ; ret 0xf7ff
0x00000200004b7d0a : add al, ch ; mov al, 0xa6 ; sar bh, 0x8b ; ret
0x00000200004b7a0a : add al, ch ; mov al, 0xa9 ; sar bh, 0x8b ; ret
0x00000200005a9a10 : add al, ch ; mov al, byte ptr [rdx - 0x48f0000a] ; ret
0x000002000047fed0 : add al, ch ; mov bh, dl ; ret
0x000002000067fee7 : add al, ch ; mov bl, 0x1d ; jmp 0x1ffc3f38ff7
0x00000200006322f3 : add al, ch ; mov bl, 0x2c ; mov ebx, 0x8b4dccff ; ret 0x8348
0x00000200004b8d07 : add al, ch ; mov bl, 0x96 ; sar bh, 0x8b ; ret
0x000002000052c930 : add al, ch ; mov ch, byte ptr [rbx] ; ret 0x4cff
0x00000200004b8e04 : add al, ch ; mov dh, 0x95 ; sar bh, 0x8b ; ret
0x000002000048f650 : add al, ch ; mov dh, byte ptr [rdi] ; ret
0x00000200004afc98 : add al, ch ; mov dl, 0x84 ; ret
0x00000200004ac198 : add al, ch ; mov dl, 0xbf ; ret
0x000002000014dd48 : add al, ch ; mov dl, 7 ; add byte ptr [rax], al ; nop ; ret
0x00000200003a5302 : add al, ch ; mov eax, 0xb8ffffd9 ; ret
0x000002000051552f : add al, ch ; mov eax, ebp ; ret 0x44ff
0x000002000007cd4d : add al, ch ; mov ebp, 0x8b001b42 ; ret
0x000002000041015d : add al, ch ; mov ebp, 0x8bffcb78 ; ret
0x000002000051052f : add al, ch ; mov ebp, edi ; ret
0x00000200005e4561 : add al, ch ; mov ecx, 0x8bffae34 ; ret
0x00000200005df85b : add al, ch ; mov edi, 0x8bffae81 ; ret
0x000002000014d8bb : add al, ch ; mov edi, 0x9000000b ; ret
0x00000200003ba460 : add al, ch ; mov edx, 0x8affd0d5 ; ret
0x00000200004b8800 : add al, ch ; mov edx, 0x8bffc09b ; ret
0x0000020000512eef : add al, ch ; mov edx, ebp ; ret 0xb9ff
0x00000200004397cc : add al, ch ; mov esi, 0x8affc893 ; ret
0x00000200004b94fc : add al, ch ; mov esi, 0x8bffc08e ; ret
0x00000200004803df : add al, ch ; mov esi, ebp ; ret
0x00000200004ba28c : add al, ch ; mov ss, edi ; sar bh, 0x8b ; ret
0x0000020000101252 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; mov ecx, 0x8b44ffff ; ret
0x0000020000494e02 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rcx ; ret 0x33ff
0x00000200004b8616 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; sar bh, 0x8b ; ret
0x00000200004f2dd6 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000020000608136 : add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; wait ; ret 0x48ff
0x00000200004b7f56 : add al, ch ; movsb byte ptr [rdi], byte ptr fs:[rsi] ; sar bh, 0x8b ; ret
0x000002000048d4cb : add al, ch ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000020000098ac2 : add al, ch ; or byte ptr [rdi + 2], cl ; add byte ptr [rcx - 0x80], al ; call qword ptr [rcx]
0x00000200005030d0 : add al, ch ; or ch, bh ; ret
0x0000020000511fb2 : add al, ch ; or ch, dl ; ret
0x00000200004905b1 : add al, ch ; or dword ptr [rsi], ebx ; ret
0x000002000014c56d : add al, ch ; or eax, 0x9000001f ; ret
0x00000200003eb733 : add al, ch ; out -0x3e, eax ; int 0xff
0x000002000049df73 : add al, ch ; out 0x19, eax ; ret 0x48ff
0x0000020000499ac3 : add al, ch ; out 0x2c, eax ; ret 0x89ff
0x00000200004ec68c : add al, ch ; out 0xa9, al ; ret 0x48ff
0x00000200001d7bbc : add al, ch ; out dx, al ; lodsb al, byte ptr [rsi] ; call 0x1ffc39ec4cc
0x0000020000517adc : add al, ch ; out dx, al ; ret
0x0000020000105904 : add al, ch ; out dx, al ; ret 0xfff4
0x0000020000492f9b : add al, ch ; out dx, eax ; push rax ; ret 0xe9ff
0x00000200004b914c : add al, ch ; outsb dx, byte ptr [rsi] ; xchg eax, edx ; sar bh, 0x8b ; ret
0x00000200005ccc23 : add al, ch ; outsd dx, dword ptr [rsi] ; ret 0xffe0
0x000002000015c24b : add al, ch ; outsd dx, dword ptr [rsi] ; ret 0xfff0
0x000002000043adb9 : add al, ch ; pop r9 ; ret
0x00000200004b8a62 : add al, ch ; pop rax ; cdq ; sar bh, 0x8b ; ret
0x00000200005b9332 : add al, ch ; pop rax ; in eax, dx ; scasd eax, dword ptr [rdi] ; push rsi ; ret
0x0000020000514cad : add al, ch ; pop rbp ; ret
0x000002000020f61f : add al, ch ; pop rbx ; fsub st(4) ; dec dword ptr [rax - 0x75] ; ret
0x0000020000167717 : add al, ch ; pop rbx ; ret
0x0000020000480800 : add al, ch ; pop rdx ; int1 ; ret
0x00000200004b2c10 : add al, ch ; pop rdx ; xchg eax, edx ; ret
0x00000200000c6570 : add al, ch ; pop rdx ; xor al, 0xfa ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x0000020000084610 : add al, ch ; push 0x2d ; cli ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x000002000052a474 : add al, ch ; push rax ; ret 0x48ff
0x00000200004c1ae5 : add al, ch ; push rbp ; ret 0x48ff
0x000002000051b6f3 : add al, ch ; push rcx ; ret 0x8bff
0x00000200003eb703 : add al, ch ; push rdi ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000012e768 : add al, ch ; push rdx ; or eax, 0x8b480002 ; ret
0x000002000051cc8c : add al, ch ; push rdx ; ret 0x23
0x00000200004b8764 : add al, ch ; push rsi ; pushfq ; sar bh, 0x8b ; ret
0x00000200001aa184 : add al, ch ; push rsi ; ret
0x00000200004b8b66 : add al, ch ; push rsp ; cwde ; sar bh, 0x8b ; ret
0x00000200001c6526 : add al, ch ; push rsp ; mov eax, dr1 ; inc dword ptr [rbp - 0x76] ; xchg eax, edi ; ret
0x0000020000750462 : add al, ch ; push rsp ; ret
0x00000200001676d6 : add al, ch ; pushfq ; ret
0x0000020000497269 : add al, ch ; rcr dword ptr [rcx], 1 ; ret 0xf7ff
0x000002000014c4a9 : add al, ch ; rcr dword ptr [rdi], 1 ; add byte ptr [rax], al ; nop ; ret
0x000002000001e1c7 : add al, ch ; ret
0x00000200006a8e2c : add al, ch ; ret 0
0x000002000039aeb4 : add al, ch ; ret 0x154b
0x0000020000746940 : add al, ch ; ret 0x179
0x0000020000066868 : add al, ch ; ret 0x1ba
0x000002000002a6e8 : add al, ch ; ret 0x381
0x0000020000017700 : add al, ch ; ret 0x3b7e
0x00000200000380e8 : add al, ch ; ret 0x3ce4
0x000002000060dae8 : add al, ch ; ret 0x48ff
0x000002000065f428 : add al, ch ; ret 0xa2bb
0x00000200006b6918 : add al, ch ; ret 0xa401
0x0000020000667288 : add al, ch ; ret 0xa80e
0x000002000066d358 : add al, ch ; ret 0xacad
0x00000200005d7288 : add al, ch ; ret 0xb10e
0x00000200006b3b0c : add al, ch ; ret 0xb20a
0x00000200005feb14 : add al, ch ; ret 0xb328
0x0000020000578758 : add al, ch ; ret 0xb4f2
0x000002000055f358 : add al, ch ; ret 0xb686
0x00000200004cc058 : add al, ch ; ret 0xbfb9
0x0000020000437bbc : add al, ch ; ret 0xc19a
0x0000020000512db8 : add al, ch ; ret 0xc2d6
0x00000200004bedd8 : add al, ch ; ret 0xc758
0x00000200004866b8 : add al, ch ; ret 0xcb9d
0x00000200003a8c14 : add al, ch ; ret 0xd887
0x00000200002335f8 : add al, ch ; ret 0xe34e
0x00000200001edd68 : add al, ch ; ret 0xe945
0x0000020000162e98 : add al, ch ; ret 0xecf9
0x000002000013cee8 : add al, ch ; ret 0xf2b4
0x0000020000179548 : add al, ch ; ret 0xf370
0x00000200001fee78 : add al, ch ; ret 0xf44a
0x00000200002087f8 : add al, ch ; ret 0xf46c
0x00000200000b3b50 : add al, ch ; ret 0xf7a0
0x00000200004aa108 : add al, ch ; ret 0xf99d
0x000002000017d178 : add al, ch ; ret 0xfc67
0x00000200004e00c4 : add al, ch ; ret 0xff09
0x00000200000ccec8 : add al, ch ; ret 0xff37
0x0000020000673255 : add al, ch ; ret 0xffad
0x0000020000466e68 : add al, ch ; ret 0xffc4
0x000002000058278c : add al, ch ; sahf ; xlatb ; ret
0x0000020000121aaa : add al, ch ; sal byte ptr [rbx - 0x74b7000d], 1 ; ret
0x000002000051fee9 : add al, ch ; sal ebp, 1 ; ret 0x48ff
0x0000020000480587 : add al, ch ; sal ebx, cl ; ret
0x00000200004e8acc : add al, ch ; salc ; ret 0xffb9
0x00000200006bffd6 : add al, ch ; sbb al, 0x9a ; dec dword ptr [rax - 0x75] ; ret
0x0000020000443352 : add al, ch ; sbb cl, ah ; ret 0x48ff
0x00000200003ae9f4 : add al, ch ; sbb cl, byte ptr [rbp + 0xa] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000407008 : add al, ch ; sbb dl, byte ptr [rdi] ; ret
0x00000200000b9c0c : add al, ch ; scasb al, byte ptr [rdi] ; adc eax, dword ptr [rdx] ; add bh, bh ; ret
0x000002000011630c : add al, ch ; scasb al, byte ptr [rdi] ; and ebp, esi ; dec dword ptr [rax - 0x75] ; ret
0x00000200005118ec : add al, ch ; scasb al, byte ptr [rdi] ; hlt ; ret 0x8bff
0x00000200004b747c : add al, ch ; scasd eax, dword ptr [rdi] ; sar bh, 0x8b ; ret
0x00000200001ae5df : add al, ch ; sti ; ret 0xfff9
0x0000020000115dd0 : add al, ch ; stosb byte ptr [rdi], al ; adc eax, 0xb60ffff1 ; ret
0x000002000052ce91 : add al, ch ; sub dword ptr [rsi], esp ; ret 0x48ff
0x00000200004b788d : add al, ch ; sub eax, 0x8bffc0ab ; ret
0x000002000014d3d2 : add al, ch ; test al, 0x10 ; add byte ptr [rax], al ; nop ; ret
0x000002000067f7f2 : add al, ch ; test al, 0x24 ; jmp 0x1ffc3f38902
0x00000200004b9212 : add al, ch ; test al, 0x91 ; sar bh, 0x8b ; ret
0x00000200004b9012 : add al, ch ; test al, 0x93 ; sar bh, 0x8b ; ret
0x00000200005c1496 : add al, ch ; test byte ptr [rdx], al ; ret 0x44ff
0x00000200005c2711 : add al, ch ; test eax, 0x8bffaffc ; ret
0x000002000047febf : add al, ch ; wait ; cli ; ret
0x00000200004206f8 : add al, ch ; xchg byte ptr [rdi], cl ; ret
0x0000020000409db4 : add al, ch ; xchg byte ptr [rdx], al ; ret
0x000002000052de35 : add al, ch ; xchg eax, ebp ; sub eax, 0xb70fffb8 ; ret
0x00000200001c3ae3 : add al, ch ; xchg eax, edi ; cmp dh, ah ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200004b7624 : add al, ch ; xchg eax, esi ; lodsd eax, dword ptr [rsi] ; sar bh, 0x8b ; ret
0x00000200004b8d72 : add al, ch ; xchg rax, rsi ; sar bh, 0x8b ; ret
0x00000200004b8f72 : add al, ch ; xchg rax, rsp ; sar bh, 0x8b ; ret
0x0000020000492e07 : add al, ch ; xlatb ; pop rsi ; ret 0x48ff
0x000002000067f968 : add al, ch ; xor ah, byte ptr [rbx] ; jmp 0x1ffc3f38a78
0x000002000049df36 : add al, ch ; xor al, 0x1a ; ret 0x48ff
0x0000020000487eea : add al, ch ; xor bl, bh ; ret
0x000002000048db38 : add al, ch ; xor bl, byte ptr [rsi] ; ret
0x000002000052ee8a : add al, ch ; xor byte ptr [rsi], al ; ret 0xfff
0x000002000051db87 : add al, ch ; xor ebx, dword ptr [rcx] ; ret
0x00000200004880e9 : add al, ch ; xor ecx, edi ; ret
0x0000020000141d7a : add al, cl ; add byte ptr [rax], al ; ret
0x000002000015a7fc : add al, cl ; call 0x1ffc350e90f
0x000002000069fdcf : add al, cl ; ret 0x405f
0x00000200003d1f6b : add al, cl ; ret 0x4106
0x00000200000aa777 : add al, dh ; add byte ptr [rax + 0x33], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x000002000014187a : add al, dh ; add byte ptr [rax], al ; ret
0x0000020000071293 : add al, dh ; dec dword ptr [rax + 0xc] ; ret
0x00000200003a2927 : add al, dh ; inc dword ptr [r8] ; ret
0x0000020000108f50 : add al, dh ; inc dword ptr [rax + 0x200] ; ret
0x00000200006b0708 : add al, dh ; xadd qword ptr [rcx], rax ; ret
0x00000200000f31b0 : add al, dl ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x0000020000141c7a : add al, dl ; add byte ptr [rax], al ; ret
0x0000020000148a64 : add al, dl ; mov word ptr [rdx + 0x2cc0], ax ; ret
0x000002000007bb7c : add al, r8b ; call 0x1ffc229fc8e
0x00000200004875eb : add al, r8b ; call 0x1ffc26ab6ff
0x000002000011cd93 : add ax, 0x3300 ; ret
0x00000200000c36ed : add ax, 2 ; mov word ptr [rcx + 2], ax ; ret
0x00000200000581ba : add ax, r8w ; mov word ptr [rdx + 0x14], ax ; ret
0x00000200001edd61 : add bh, al ; inc dword ptr [r9] ; add byte ptr [rax], al ; add al, ch ; ret 0xe945
0x000002000013db58 : add bh, al ; ret
0x0000020000209045 : add bh, bh ; adc al, 0xc8 ; add rsp, 0x28 ; ret
0x00000200001f6267 : add bh, bh ; add byte ptr [rax], al ; setbe al ; ret
0x00000200006c27c7 : add bh, bh ; add eax, 0x1bb66 ; xor eax, eax ; ret
0x000002000000ddf8 : add bh, bh ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000ad2a4 : add bh, bh ; dec dword ptr [rax + 0xb] ; ret
0x00000200006347a7 : add bh, bh ; dec dword ptr [rax + 3] ; ret
0x00000200000aa288 : add bh, bh ; dec dword ptr [rax - 0x75] ; ret
0x000002000017f6de : add bh, bh ; dec dword ptr [rax - 0x75] ; ret 0x2348
0x00000200000ad207 : add bh, bh ; dec dword ptr [rcx + 0xb] ; ret
0x00000200000ad3c3 : add bh, bh ; dec dword ptr [rcx + 0xb] ; ret 0x91e9
0x00000200000ad253 : add bh, bh ; dec dword ptr [rcx + 0xb] ; ret 0xba49
0x00000200000ad2b6 : add bh, bh ; dec dword ptr [rcx + 0xb] ; ret 0xe2e9
0x0000020000116c83 : add bh, bh ; enter 0x33c3, -0x40 ; ret
0x00000200006c5168 : add bh, bh ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000044f425 : add bh, bh ; jmp 0x2000044f3ef
0x000002000046b053 : add bh, bh ; jmp qword ptr [rbx]
0x0000020000149218 : add bh, bh ; loop 0x20000149279 ; ret
0x0000020000230ca2 : add bh, bh ; loopne 0x20000230cf5 ; add esp, 0x48 ; ret
0x0000020000786a5d : add bh, bh ; or edx, 0xffffffff ; call qword ptr [rax]
0x00000200001e3a42 : add bh, bh ; push rax ; sub byte ptr [rbp - 0x74f58740], al ; ret
0x0000020000013cf5 : add bh, bh ; ret
0x000002000012786d : add bh, bh ; ret 0x1589
0x0000020000630ba1 : add bh, bh ; ret 0x163b
0x00000200000cb077 : add bh, bh ; ret 0x348
0x0000020000053a3c : add bh, bh ; ret 0x349
0x00000200000c9a21 : add bh, bh ; ret 0x34c
0x0000020000645c2e : add bh, bh ; ret 0x34d
0x000002000042d3a1 : add bh, bh ; ret 0x3b41
0x000002000051fd9b : add bh, bh ; ret 0x3b44
0x000002000067e298 : add bh, bh ; ret 0x3b45
0x000002000018f0f3 : add bh, bh ; ret 0x5189
0x000002000001803f : add bh, bh ; ret 0x5489
0x00000200001f3a1a : add bh, bh ; ret 0x5a8d
0x00000200001f3ad9 : add bh, bh ; ret 0x7a8d
0x00000200000e4f3c : add bh, bh ; ret 0x8148
0x000002000012b8a3 : add bh, bh ; ret 0x8341
0x000002000009cb8c : add bh, bh ; ret 0x8348
0x00000200004da5fb : add bh, bh ; ret 0x8349
0x000002000003081e : add bh, bh ; ret 0x8948
0x00000200000e2025 : add bh, bh ; ret 0x894a
0x00000200006510b6 : add bh, bh ; ret 0x8b44
0x000002000052a230 : add bh, bh ; ret 0x8b45
0x00000200000acd82 : add bh, bh ; ret 0x8b48
0x0000020000228c33 : add bh, bh ; ret 0x8b4c
0x00000200000942e6 : add bh, bh ; ret 0x8d48
0x00000200000a9b68 : add bh, bh ; ret 0x8d4c
0x000002000004189e : add bh, bh ; ret 0x9489
0x00000200005b4f89 : add bh, bh ; ret 0xb841
0x00000200005b843f : add bh, bh ; ret 0xb941
0x00000200000a9c58 : add bh, bh ; ret 0xc28b
0x0000020000649085 : add bh, bh ; ret 0xc3e8
0x00000200004eaff5 : add bh, bh ; ret 0xca2b
0x000002000018daaf : add bh, bh ; ret 0xca8b
0x000002000064897d : add bh, bh ; ret 0xcbe8
0x00000200003f89e1 : add bh, bh ; ret 0xdbeb
0x00000200003d49d5 : add bh, bh ; ret 0xe2eb
0x00000200001f75a9 : add bh, bh ; ret 0xebe9
0x00000200003b1c54 : add bh, bh ; ret 0xfa83
0x00000200003fe968 : add bh, bh ; ret 0xff41
0x00000200000f1764 : add bh, bh ; ret 0xff49
0x00000200001c57ad : add bh, bh ; retf ; jmp 0x200001c579c
0x000002000010de55 : add bh, bh ; rol bl, 0xd ; add byte ptr [rax], al ; add ah, bh ; ret
0x00000200005e89a7 : add bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; add al, 0x3b ; ret 0xed72
0x0000020000130432 : add bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xe872
0x00000200005e89cb : add bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xed72
0x0000020000521693 : add bh, bh ; ror byte ptr [rbx - 0x40], 0xe8 ; loop 0x2000052167f ; ret 0xfff
0x000002000049878a : add bh, bh ; ror byte ptr [rcx - 0x4214ffbb], 0x8b ; ret
0x00000200001bc7fd : add bh, bh ; ror byte ptr [rcx - 0x76b3f7bf], 1 ; ret
0x000002000007fd16 : add bh, bh ; test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200001a5cdb : add bh, byte ptr [rax + 1] ; ret
0x00000200000730ec : add bh, byte ptr [rax - 0x3fffff6b] ; ret
0x00000200001676a5 : add bh, byte ptr [rax - 0x9330013] ; ret 0xf0e
0x0000020000064ac3 : add bh, byte ptr [rbx] ; ret
0x000002000060b518 : add bh, byte ptr [rbx] ; ret 0x1b76
0x00000200004eaff3 : add bh, byte ptr [rdx + rax - 1] ; ret 0xca2b
0x000002000011f955 : add bh, byte ptr [rsi] ; and al, 0 ; ret
0x000002000052b6ba : add bh, byte ptr [rsi] ; ret 0x48ff
0x000002000013125b : add bh, ch ; ret
0x000002000021a0b3 : add bh, dh ; rcl cl, 0xe9 ; jne 0x2000021a0bb ; ret
0x0000020000060051 : add bh, dh ; ret
0x0000020000404a1c : add bh, dh ; ret 0
0x000002000049004d : add bh, dh ; ret 0x3fc
0x0000020000423abe : add bh, dh ; ret 0x402
0x00000200004cca4a : add bh, dh ; ret 0x6000
0x000002000007ed14 : add bh, dh ; ret 0x7000
0x00000200000ea1fa : add bh, dh ; ret 0xf00
0x00000200001b8359 : add bh, dh ; ret 0xf48
0x0000020000535b0e : add bh, dh ; ret 0xfce8
0x000002000010af08 : add bh, dh ; ret 0xfff
0x000002000041acd4 : add bh, dh ; ret 0xfff0
0x00000200005b2881 : add bh, dh ; ret 0xfffc
0x00000200003bfef1 : add bh, dh ; ret 0xfffe
0x0000020000134d28 : add bh, dh ; ret 0xffff
0x00000200004f6c17 : add bh, dh ; shl byte ptr [rbx], 1 ; ret 0xd2f7
0x000002000016fe32 : add bh, dl ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000041dbac : add bh, dl ; or dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x00000200005fd1b7 : add bl, 0xb8 ; js 0x200005fd1c4 ; add al, al ; ret
0x00000200003f183c : add bl, 0xff ; add rsp, 0x38 ; ret
0x000002000014027a : add bl, ah ; add byte ptr [rax], al ; ret
0x000002000014067a : add bl, al ; add byte ptr [rax], al ; ret
0x00000200000ff09d : add bl, al ; and qword ptr [rdx + 8], 0 ; ret
0x00000200000b2dbe : add bl, al ; cmp al, 2 ; sbb eax, eax ; and eax, 2 ; ret
0x0000020000208061 : add bl, al ; cmp rax, qword ptr [rdx + 0x40] ; sbb eax, eax ; ret
0x00000200001d7c20 : add bl, al ; dec dword ptr [rax + 0x1e88] ; ret
0x00000200001f4f80 : add bl, al ; inc dword ptr [rcx + 0x248] ; ret
0x0000020000110e04 : add bl, al ; lea rax, qword ptr [rcx + 0x3600] ; ret
0x0000020000478983 : add bl, al ; lea rax, qword ptr [rcx + 0x3e8] ; ret
0x000002000047898b : add bl, al ; lea rax, qword ptr [rcx + 0x500] ; ret
0x00000200001c5481 : add bl, al ; lea rax, qword ptr [rcx + 0x780] ; ret
0x00000200000ef8ad : add bl, al ; lea rax, qword ptr [rip + 0x6261a] ; ret
0x00000200000ef8a5 : add bl, al ; lea rax, qword ptr [rip + 0x62642] ; ret
0x00000200000ef8b5 : add bl, al ; lea rax, qword ptr [rip + 0x62652] ; ret
0x00000200000ef8bd : add bl, al ; lea rax, qword ptr [rip + 0x6266a] ; ret
0x00000200004ea4d4 : add bl, al ; lea rax, qword ptr [rip + 0x62883] ; ret
0x00000200004ea4e4 : add bl, al ; lea rax, qword ptr [rip + 0x628a3] ; ret
0x00000200004ea4dc : add bl, al ; lea rax, qword ptr [rip + 0x6290b] ; ret
0x0000020000073314 : add bl, al ; lea rax, qword ptr [rip + 0xdeac3] ; ret
0x000002000007327d : add bl, al ; lea rax, qword ptr [rip + 0xdeafa] ; ret
0x000002000007329a : add bl, al ; lea rax, qword ptr [rip + 0xdeb5d] ; ret
0x0000020000073292 : add bl, al ; lea rax, qword ptr [rip + 0xdeb75] ; ret
0x00000200000732e2 : add bl, al ; lea rax, qword ptr [rip + 0xdeba5] ; ret
0x00000200000732f7 : add bl, al ; lea rax, qword ptr [rip + 0xdebb0] ; ret
0x00000200000732ff : add bl, al ; lea rax, qword ptr [rip + 0xdebc8] ; ret
0x0000020000073336 : add bl, al ; lea rax, qword ptr [rip + 0xdec11] ; ret
0x000002000019c33e : add bl, al ; lea rax, qword ptr [rip - 0x4a337] ; ret
0x0000020000044d6a : add bl, al ; lock inc dword ptr [rcx + 0x10] ; ret
0x0000020000044d2a : add bl, al ; mov al, cl ; ret
0x000002000003e4a7 : add bl, al ; mov byte ptr [rip + 0x2bc615], dl ; ret
0x000002000003e490 : add bl, al ; mov byte ptr [rip + 0x2bc62d], dl ; ret
0x00000200005035d3 : add bl, al ; mov byte ptr [rip - 0x22e193], 1 ; ret
0x000002000041ee6a : add bl, al ; mov dword ptr [rip - 0x122d46], ecx ; ret
0x00000200007856e6 : add bl, al ; mov eax, 0x1000 ; ret
0x000002000064066f : add bl, al ; mov eax, 0x100000 ; ret
0x000002000003858a : add bl, al ; mov eax, 0x7d0 ; ret
0x0000020000640669 : add bl, al ; mov eax, 0x80000 ; ret
0x00000200004c80ba : add bl, al ; mov eax, 0xc0000001 ; ret
0x00000200006c0e3e : add bl, al ; mov eax, 0xc0000002 ; ret
0x00000200001ab780 : add bl, al ; mov eax, 0xc000009a ; ret
0x00000200005fd1ab : add bl, al ; mov eax, 0xc0000100 ; ret
0x00000200001c1192 : add bl, al ; mov eax, 0xc0000225 ; ret
0x0000020000042399 : add bl, al ; mov eax, 1 ; ret
0x0000020000030a81 : add bl, al ; mov eax, 2 ; ret
0x0000020000030a87 : add bl, al ; mov eax, 3 ; ret
0x0000020000463325 : add bl, al ; mov eax, 4 ; ret
0x000002000004239f : add bl, al ; mov eax, 7 ; ret
0x00000200001c61ff : add bl, al ; mov eax, dword ptr [rip + 0x1b7e91] ; ret
0x00000200001c61f8 : add bl, al ; mov eax, dword ptr [rip + 0x1b7e9c] ; ret
0x00000200000ecf61 : add bl, al ; mov eax, dword ptr [rip + 0x291387] ; ret
0x0000020000046bcc : add bl, al ; mov eax, edx ; ret
0x000002000003620a : add bl, al ; mov rax, qword ptr [rcx + 0x308] ; ret
0x00000200001c549f : add bl, al ; mov rax, qword ptr [rcx + 0x780] ; ret
0x00000200001bff29 : add bl, al ; movzx eax, byte ptr [rcx + 0x7d] ; ret
0x000002000002bd31 : add bl, al ; or eax, 0xffffffff ; ret
0x00000200005399e2 : add bl, al ; sbb eax, eax ; and eax, 2 ; dec eax ; ret
0x0000020000218ab3 : add bl, al ; sbb eax, eax ; ret
0x00000200000075ab : add bl, al ; sub qword ptr [rip + 0x2f3bf4], rdx ; ret
0x000002000047e7e1 : add bl, al ; test eax, eax ; jne 0x2000047e7d5 ; xor eax, eax ; ret
0x000002000040f627 : add bl, al ; xchg qword ptr [rcx + 0x1c8], rdx ; ret
0x0000020000542436 : add bl, al ; xchg qword ptr [rip - 0x22908f], rcx ; ret
0x00000200004c39cb : add bl, al ; xor al, al ; ret
0x00000200000156f0 : add bl, al ; xor eax, eax ; ret
0x0000020000041e53 : add bl, bh ; add rsp, 0x28 ; ret
0x000002000004077c : add bl, bh ; ret
0x00000200001ef2c9 : add bl, bh ; xor eax, eax ; ret
0x000002000014037a : add bl, bl ; add byte ptr [rax], al ; ret
0x0000020000143f9f : add bl, bl ; loop 0x20000143f44 ; fnstcw word ptr [rcx] ; ret
0x000002000062c392 : add bl, byte ptr [rax] ; ret
0x000002000062f80a : add bl, byte ptr [rax] ; sar bh, 0x8b ; ret
0x0000020000127acc : add bl, byte ptr [rbx] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200001387ac : add bl, byte ptr [rcx + rcx*2 - 1] ; ret 0x8b48
0x00000200005dcaf1 : add bl, byte ptr [rcx] ; push rax ; add bh, bh ; ret 0xb841
0x00000200005b843c : add bl, byte ptr [rcx] ; push rax ; add bh, bh ; ret 0xb941
0x00000200001ff179 : add bl, ch ; add al, 0x8b ; ret
0x00000200005ccd5f : add bl, ch ; add eax, 0x1ba ; add dh, dh ; ret 0xf01
0x0000020000675f6c : add bl, ch ; add eax, 0x8bf38a40 ; ret
0x00000200005b2584 : add bl, ch ; add eax, 0xec7944e9 ; push rdi ; ret
0x00000200005c0b19 : add bl, ch ; add eax, 0xef2fd1e9 ; push rsi ; ret
0x000002000047adf2 : add bl, ch ; add eax, 0xfff0d6e9 ; push rdi ; ret
0x00000200006c0aaa : add bl, ch ; add eax, dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x40c3
0x00000200006971e1 : add bl, ch ; add eax, dword ptr [rcx - 0x75] ; ret 0x4489
0x000002000007453e : add bl, ch ; add ecx, dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0x1d74
0x000002000019fa26 : add bl, ch ; add ecx, dword ptr [rbp - 0x75] ; ret 0x8548
0x0000020000697192 : add bl, ch ; add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x00000200005ebfc3 : add bl, ch ; cmp dword ptr [rax - 0x7d], ecx ; ret 0x4c20
0x0000020000463cbb : add bl, ch ; fisttp dword ptr [rax - 0x7d] ; ret 0x4808
0x00000200001c4cf6 : add bl, ch ; fisttp word ptr [rax - 0x7d] ; ret
0x00000200004e11b9 : add bl, ch ; fnstsw dword ptr [rax - 0x3fffffdd] ; ret
0x00000200004f8a91 : add bl, ch ; idiv dword ptr [rax - 0x3ffffff3] ; ret
0x00000200000346bc : add bl, ch ; in eax, -0x75 ; add al, 0xb ; ret
0x00000200004deb34 : add bl, ch ; in eax, -0x75 ; ret
0x00000200004cc5e2 : add bl, ch ; int1 ; xor eax, eax ; ret
0x00000200006c2cf0 : add bl, ch ; jmp 0x200006c2c7c
0x000002000048e094 : add bl, ch ; mov bh, 0xcc ; or dword ptr [rcx - 0x18], 8 ; ret
0x0000020000134db2 : add bl, ch ; mov cl, 0xf7 ; ret 0xffff
0x0000020000215187 : add bl, ch ; mov word ptr [rax - 0x75], cs ; ret 0xc148
0x00000200004381f8 : add bl, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; mov eax, 0xc0000001 ; jmp 0x200004381ce
0x000002000064043d : add bl, ch ; or al, 0x8b ; ret 0xd0f7
0x00000200001c8069 : add bl, ch ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x000002000022fd11 : add bl, ch ; or byte ptr [rbx], cl ; ret 0x8789
0x00000200001fca84 : add bl, ch ; or ecx, dword ptr [rax - 0x75] ; ret
0x0000020000043608 : add bl, ch ; out 0xcc, al ; and dword ptr [rcx + 4], 0 ; ret
0x00000200000076ba : add bl, ch ; ret
0x00000200003c5d95 : add bl, ch ; ret 0x19b8
0x0000020000118f66 : add bl, ch ; ret 0x3345
0x0000020000004398 : add bl, ch ; ret 0x3b4c
0x00000200005884f2 : add bl, ch ; ret 0x3b9
0x000002000043926f : add bl, ch ; ret 0x4865
0x0000020000519684 : add bl, ch ; ret 0x48cc
0x000002000042c451 : add bl, ch ; ret 0x8348
0x000002000005ecad : add bl, ch ; ret 0x8948
0x00000200000488a7 : add bl, ch ; ret 0x8a80
0x000002000003f7d9 : add bl, ch ; ret 0x8b48
0x0000020000008ccb : add bl, ch ; ret 0x9066
0x0000020000466421 : add bl, ch ; ret 0xc033
0x00000200000bf950 : add bl, ch ; ret 0xcccc
0x000002000005064c : add bl, ch ; ret 0xdb8
0x00000200003dbb7c : add bl, ch ; ret 0xefbb
0x0000020000686331 : add bl, ch ; salc ; xor al, al ; ret
0x000002000044e7d3 : add bl, ch ; sar dword ptr [rax - 0x3fffff66], -0x15 ; ret
0x00000200003b00eb : add bl, ch ; sub al, 0x8b ; ret
0x00000200000cb89c : add bl, ch ; sub eax, 0xe9c88b48 ; ret 0xfffe
0x00000200001a582f : add bl, ch ; sub ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x000002000021bdb9 : add bl, ch ; sub esi, esi ; ret
0x00000200000825fe : add bl, ch ; xchg dword ptr [rax - 0x7f], ecx ; ret
0x0000020000731948 : add bl, ch ; xor cl, byte ptr [rbx - 0x74b6dbb5] ; ret
0x000002000064ed5d : add bl, ch ; xor esi, esi ; ret
0x000002000014057a : add bl, cl ; add byte ptr [rax], al ; ret
0x0000020000534fde : add bl, dh ; fdiv st(7), st(0) ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005107bd : add bl, dh ; movq qword ptr [rbp + 0x1f], mm0 ; call 0x200001403e9
0x0000020000514e14 : add bl, dh ; movq qword ptr [rbp + 0x47], mm0 ; call 0x20000140549
0x000002000051b01b : add bl, dh ; movq qword ptr [rbp + 0xf], mm0 ; call 0x200001403e9
0x00000200004c5022 : add bl, dh ; movq qword ptr [rbp - 0x18], mm0 ; call 0x200000ebb3d
0x0000020000512671 : add bl, dh ; movq qword ptr [rbp - 0x68], mm0 ; call 0x200001403e9
0x0000020000512d60 : add bl, dh ; movq qword ptr [rbp - 0x69], mm0 ; call 0x200001403e9
0x00000200005ed4c8 : add bl, dh ; movq qword ptr [rcx + 0x20], mm0 ; ret
0x0000020000008582 : add bl, dh ; movq qword ptr [rcx], mm0 ; ret
0x00000200003ee14a : add bl, dh ; movq qword ptr [rdx], mm0 ; mov eax, r10d ; ret
0x00000200000b0623 : add bl, dh ; nop ; add rsp, 0x28 ; ret
0x000002000014047a : add bl, dl ; add byte ptr [rax], al ; ret
0x00000200000760a1 : add bl, dl ; loop 0x2000007609f ; ret 0xf15
0x00000200001b9464 : add bl, dl ; loop 0x200001b9462 ; ret 0x7432
0x00000200004dfb2f : add bpl, al ; ret 2
0x0000020000074711 : add bpl, bl ; sar dword ptr [rax - 0x3ffffff3], 1 ; ret
0x0000020000231b9c : add bpl, cl ; ret 0xfffe
0x00000200004d6a42 : add bpl, r11b ; mov eax, 0xc0000058 ; ret
0x000002000002ca52 : add bpl, r8b ; scasd eax, dword ptr [rdi] ; ret
0x0000020000140e95 : add byte ptr [eax], al ; add cl, ch ; loop 0x20000140e74 ; add byte ptr [rax], al ; ret
0x0000020000207517 : add byte ptr [r11 + 0x501afd05], r9b ; add bh, bh ; ret
0x00000200004433a1 : add byte ptr [r11 + 0x6f32e8c8], r9b ; ret 0xebff
0x00000200004f7a9f : add byte ptr [r11 - 0x255b1728], r9b ; ret
0x00000200004f7ac5 : add byte ptr [r11 - 0x25811728], r9b ; ret
0x000002000013b82c : add byte ptr [r11], r15b ; ret
0x000002000062d7f3 : add byte ptr [r13 + 3], r8b ; ret 0x8944
0x0000020000539419 : add byte ptr [r13 + rcx*4 + 0x45], r9b ; ret
0x00000200001c9303 : add byte ptr [r8 + 0x30c48348], r10b ; pop rbp ; ret
0x0000020000206418 : add byte ptr [r8 + r8*8 - 0x74bbed8c], al ; ret 0x8b49
0x00000200002063dd : add byte ptr [r8 + r8*8 - 0x74bbee8c], al ; ret 0x8b49
0x000002000019927a : add byte ptr [r8 - 0x3f], r9b ; call 0x1ffc23cdb97
0x00000200000f2e47 : add byte ptr [r8], al ; add byte ptr [rax + 3], cl ; ret 0x349
0x000002000010bcc7 : add byte ptr [r8], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000012ed98 : add byte ptr [r8], al ; add rsp, 0x70 ; pop rbp ; ret
0x000002000065bc85 : add byte ptr [r8], r8b ; add bh, bh ; ret
0x00000200000b0337 : add byte ptr [r8], r8b ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x000002000008b93e : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4865
0x0000020000140a55 : add byte ptr [r8], r8b ; add cl, ch ; and dl, ah ; add byte ptr [rax], al ; ret
0x0000020000140b55 : add byte ptr [r8], r8b ; add cl, ch ; and dl, bl ; add byte ptr [rax], al ; ret
0x0000020000140a95 : add byte ptr [r8], r8b ; add cl, ch ; loop 0x20000140a78 ; add byte ptr [rax], al ; ret
0x0000020000140b95 : add byte ptr [r8], r8b ; add cl, ch ; loop 0x20000140b77 ; add byte ptr [rax], al ; ret
0x00000200004be257 : add byte ptr [r9 + 3], cl ; int 0xff
0x0000020000435287 : add byte ptr [r9 + 3], cl ; ret 0xe0ff
0x000002000059f39e : add byte ptr [r9 + 3], r8b ; ret
0x0000020000769591 : add byte ptr [r9 - 0x48], r8b ; ret 0
0x00000200003cb6ac : add byte ptr [r9 - 0x75], r8b ; ret
0x0000020000051745 : add byte ptr [r9 - 0x75], r9b ; pop rbp ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000cb373 : add byte ptr [r9 - 9], r8b ; rol dword ptr [rcx + 0x23], cl ; ret
0x000002000052e156 : add byte ptr [r9], 0 ; adc al, 0 ; call 0x2000014f4c9
0x000002000001d30f : add byte ptr [rax + 0x10015bb], cl ; ret 1
0x00000200000ef7db : add byte ptr [rax + 0x10], bh ; ret
0x00000200001bef24 : add byte ptr [rax + 0x13578905], cl ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000009b3f3 : add byte ptr [rax + 0x1474c0f9], al ; xor eax, eax ; ret
0x000002000046cf90 : add byte ptr [rax + 0x1740000], al ; ret
0x00000200005fd1b6 : add byte ptr [rax + 0x178b8c3], al ; add al, al ; ret
0x0000020000107733 : add byte ptr [rax + 0x20c48348], al ; pop rbx ; ret
0x000002000013faea : add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x00000200004cd323 : add byte ptr [rax + 0x21f5e801], al ; ret 0x85ff
0x0000020000402977 : add byte ptr [rax + 0x234987eb], al ; ret 0x3b48
0x00000200000312d7 : add byte ptr [rax + 0x23], cl ; ret
0x0000020000106054 : add byte ptr [rax + 0x23], cl ; ret 0x1c7
0x00000200000af7d6 : add byte ptr [rax + 0x23], cl ; ret 0x3345
0x0000020000120d26 : add byte ptr [rax + 0x23], cl ; ret 0x3349
0x000002000017fa5e : add byte ptr [rax + 0x23], cl ; ret 0x348
0x00000200000822fd : add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x000002000009c935 : add byte ptr [rax + 0x23], cl ; ret 0x3b49
0x000002000021c203 : add byte ptr [rax + 0x23], cl ; ret 0x548
0x000002000018d0ab : add byte ptr [rax + 0x23], cl ; ret 0x8348
0x00000200001e08b0 : add byte ptr [rax + 0x23], cl ; ret 0x8948
0x00000200000a251b : add byte ptr [rax + 0x23], cl ; ret 0x894c
0x0000020000745727 : add byte ptr [rax + 0x23], cl ; ret 0x8b41
0x000002000016cdf8 : add byte ptr [rax + 0x23], cl ; ret 0x8b45
0x000002000040d1fe : add byte ptr [rax + 0x23], cl ; ret 0x8b48
0x00000200001d4f02 : add byte ptr [rax + 0x23], cl ; ret 0x8b49
0x000002000002a0c7 : add byte ptr [rax + 0x23], cl ; ret 0x8b4c
0x00000200001cb7c4 : add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x00000200006737cf : add byte ptr [rax + 0x23], cl ; ret 0x8d49
0x00000200000766ab : add byte ptr [rax + 0x23], cl ; ret 0xb948
0x00000200000aa148 : add byte ptr [rax + 0x23], cl ; ret 0xba48
0x00000200000d8900 : add byte ptr [rax + 0x23], cl ; ret 0xc148
0x0000020000166263 : add byte ptr [rax + 0x23], cl ; ret 0xf44
0x00000200000adabf : add byte ptr [rax + 0x23], cl ; sal dh, 1 ; ret 0xf01
0x000002000009b3ca : add byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x0000020000492104 : add byte ptr [rax + 0x2b], cl ; fimul dword ptr [rax - 1] ; ret
0x00000200006bbdbb : add byte ptr [rax + 0x2b], cl ; fimul word ptr [rax - 0x7d] ; ret
0x0000020000005623 : add byte ptr [rax + 0x2b], cl ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000009881 : add byte ptr [rax + 0x2b], cl ; ret
0x0000020000582dcf : add byte ptr [rax + 0x2b], cl ; ret 0x34c
0x0000020000005d99 : add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000005354 : add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x000002000007681a : add byte ptr [rax + 0x2b], cl ; ret 0x8948
0x000002000006282c : add byte ptr [rax + 0x2b], cl ; ret 0x8949
0x00000200000dde73 : add byte ptr [rax + 0x2b], cl ; ret 0x894c
0x00000200001b650d : add byte ptr [rax + 0x2b], cl ; ret 0x8b44
0x00000200000ab036 : add byte ptr [rax + 0x2b], cl ; ret 0x8b48
0x00000200000983a2 : add byte ptr [rax + 0x2b], cl ; ret 0x8b49
0x00000200000d695d : add byte ptr [rax + 0x2b], cl ; ret 0xba48
0x0000020000636cf2 : add byte ptr [rax + 0x2b], cl ; ret 0xc766
0x000002000063f71a : add byte ptr [rax + 0x2d0], bh ; ret
0x0000020000152a41 : add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x000002000015505a : add byte ptr [rax + 0x30c48348], r10b ; pop rbp ; ret
0x000002000002157f : add byte ptr [rax + 0x31850f08], ch ; ret 0x13
0x00000200000855cd : add byte ptr [rax + 0x31], cl ; adc r14b, sil ; ret
0x00000200000aa758 : add byte ptr [rax + 0x31], cl ; add cl, byte ptr [rbp + 0x3b] ; ret 0x840f
0x0000020000048bf4 : add byte ptr [rax + 0x33], al ; ret 0xd233
0x0000020000579651 : add byte ptr [rax + 0x33], al ; ror byte ptr [rax - 0x75], cl ; or r8b, r13b ; ret 0xf23c
0x00000200000aa779 : add byte ptr [rax + 0x33], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x000002000006516c : add byte ptr [rax + 0x33], cl ; ret
0x0000020000009bb3 : add byte ptr [rax + 0x33], cl ; ret 0x2348
0x0000020000043696 : add byte ptr [rax + 0x33], cl ; ret 0x3348
0x0000020000053761 : add byte ptr [rax + 0x33], cl ; ret 0x8948
0x0000020000223849 : add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000072d9ea : add byte ptr [rax + 0x33], cl ; ror byte ptr [rax - 0x77], 1 ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000413f2 : add byte ptr [rax + 0x3490000], al ; ret 0xb849
0x00000200000ba233 : add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + rax - 0x18], dh ; ret 0x180
0x000002000001e150 : add byte ptr [rax + 0x39], cl ; xor byte ptr [r13 + 3], sil ; mov al, 1 ; ret
0x00000200000c7f19 : add byte ptr [rax + 0x3a], al ; stosd dword ptr [rdi], eax ; ret
0x00000200005d2d67 : add byte ptr [rax + 0x3b], cl ; enter -0x298d, -0x17 ; ret
0x0000020000008545 : add byte ptr [rax + 0x3b], cl ; enter 0x477, 0x48 ; sub eax, ecx ; ret
0x00000200001814c3 : add byte ptr [rax + 0x3b], cl ; enter 0xf44, 0x46 ; ret 0x8b41
0x0000020000015519 : add byte ptr [rax + 0x3b], cl ; ret
0x000002000063ab52 : add byte ptr [rax + 0x3b], cl ; ret 0x1076
0x00000200000d9774 : add byte ptr [rax + 0x3b], cl ; ret 0x1273
0x000002000044d2c5 : add byte ptr [rax + 0x3b], cl ; ret 0x1472
0x00000200006bb9c6 : add byte ptr [rax + 0x3b], cl ; ret 0x1474
0x00000200003e35af : add byte ptr [rax + 0x3b], cl ; ret 0x1a76
0x0000020000074543 : add byte ptr [rax + 0x3b], cl ; ret 0x1d74
0x00000200001fa9e3 : add byte ptr [rax + 0x3b], cl ; ret 0x3474
0x00000200004efd99 : add byte ptr [rax + 0x3b], cl ; ret 0x470f
0x00000200000790a5 : add byte ptr [rax + 0x3b], cl ; ret 0x476
0x00000200000de217 : add byte ptr [rax + 0x3b], cl ; ret 0x5077
0x0000020000417b28 : add byte ptr [rax + 0x3b], cl ; ret 0x607e
0x000002000061bc06 : add byte ptr [rax + 0x3b], cl ; ret 0x772
0x00000200000247d7 : add byte ptr [rax + 0x3b], cl ; ret 0x7774
0x0000020000110f66 : add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x000002000042bf49 : add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x000002000005e6d0 : add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200000123b6 : add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200000ab490 : add byte ptr [rax + 0x3b], cl ; ret 0x860f
0x00000200003d0bdc : add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x0000020000005575 : add byte ptr [rax + 0x3b], cl ; ret 0x8d48
0x0000020000063ed5 : add byte ptr [rax + 0x3b], cl ; ret 0x9277
0x000002000047fd7c : add byte ptr [rax + 0x3b], cl ; ret 0x930f
0x000002000008f76c : add byte ptr [rax + 0x3b], cl ; ret 0x9577
0x00000200006244f3 : add byte ptr [rax + 0x3b], cl ; ret 0x977
0x0000020000603659 : add byte ptr [rax + 0x3b], cl ; ret 0xa74
0x0000020000007a63 : add byte ptr [rax + 0x3b], cl ; ret 0xb76
0x00000200005ef198 : add byte ptr [rax + 0x3b], cl ; ret 0xb775
0x00000200000e0fd6 : add byte ptr [rax + 0x3b], cl ; ret 0xb841
0x00000200000e8c9e : add byte ptr [rax + 0x3b], cl ; ret 0xbc74
0x000002000009b4ae : add byte ptr [rax + 0x3b], cl ; ret 0xe874
0x000002000000ad41 : add byte ptr [rax + 0x3b], cl ; ret 0xe875
0x000002000045c978 : add byte ptr [rax + 0x3b], cl ; ret 0xea75
0x00000200002074d3 : add byte ptr [rax + 0x3b], cl ; ret 0xeb7c
0x00000200001aaa0e : add byte ptr [rax + 0x3b], cl ; ret 0xec75
0x000002000063ddda : add byte ptr [rax + 0x3b], cl ; ret 0xef75
0x00000200001aaa2c : add byte ptr [rax + 0x3b], cl ; ret 0xf275
0x00000200001f0582 : add byte ptr [rax + 0x3b], cl ; ret 0xf41
0x0000020000417b1c : add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000018a18b : add byte ptr [rax + 0x3b], cl ; ror dword ptr [rax + 0xf], 0x43 ; ret 0xba48
0x000002000002220a : add byte ptr [rax + 0x3b], cl ; sal byte ptr [rdi + 0x27], 1 ; ret
0x0000020000032825 : add byte ptr [rax + 0x3b], cl ; sal byte ptr [rdi + rbp*8 - 0x15], 1 ; test al, 0xf6 ; ret 0x7401
0x00000200000344b7 : add byte ptr [rax + 0x3b], cl ; sal dword ptr [rdi + 3], 1 ; sbb eax, eax ; ret
0x0000020000154e6d : add byte ptr [rax + 0x40c48348], dl ; pop rbp ; ret
0x00000200001a3f7c : add byte ptr [rax + 0x41202444], cl ; call rax
0x000002000020e4d7 : add byte ptr [rax + 0x4288e0c9], 1 ; mov byte ptr [rdx], cl ; ret
0x0000020000697bae : add byte ptr [rax + 0x473e9], al ; add byte ptr [rdx], ah ; ret 0x450f
0x00000200003e37c8 : add byte ptr [rax + 0x47d61f9], al ; movzx eax, cl ; ret
0x000002000003c258 : add byte ptr [rax + 0x48047508], ch ; mov eax, edx ; ret
0x00000200006c5ee2 : add byte ptr [rax + 0x48], al ; add esp, 0x28 ; ret
0x0000020000069365 : add byte ptr [rax + 0x48], al ; add esp, 0x40 ; pop rbx ; ret
0x000002000011769d : add byte ptr [rax + 0x48fffff7], al ; and eax, ecx ; ret
0x0000020000067f51 : add byte ptr [rax + 0x48fffff7], al ; mov eax, dword ptr [rax] ; ret
0x00000200001e636d : add byte ptr [rax + 0x4d000000], 3 ; ret 0x8348
0x000002000055b340 : add byte ptr [rax + 0x50c48348], dl ; pop rbp ; ret
0x0000020000532c10 : add byte ptr [rax + 0x5c8b4801], dh ; and al, 8 ; ret
0x0000020000063e07 : add byte ptr [rax + 0x63], cl ; ret
0x000002000008949f : add byte ptr [rax + 0x63], cl ; ret 0x34d
0x0000020000445b20 : add byte ptr [rax + 0x63], cl ; ret 0x8b41
0x00000200004583c9 : add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200004f885d : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0xe802
0x00000200000074c8 : add byte ptr [rax + 0x6b], cl ; ret 0x3364
0x000002000006765e : add byte ptr [rax + 0x75ff0640], al ; or al, 0xf6 ; ret
0x00000200000f281b : add byte ptr [rax + 0x7a840f00], al ; ret 0xa
0x00000200000815ae : add byte ptr [rax + 0xb], cl ; ret
0x0000020000512219 : add byte ptr [rax + 0xb], cl ; ret 0x1bf
0x000002000073e306 : add byte ptr [rax + 0xb], cl ; ret 0x20bf
0x00000200003aa96c : add byte ptr [rax + 0xb], cl ; ret 0x2348
0x00000200001b67cd : add byte ptr [rax + 0xb], cl ; ret 0x589
0x000002000008d208 : add byte ptr [rax + 0xb], cl ; ret 0x8348
0x00000200003a4d7e : add byte ptr [rax + 0xb], cl ; ret 0x8548
0x0000020000450de0 : add byte ptr [rax + 0xb], cl ; ret 0x8948
0x0000020000159557 : add byte ptr [rax + 0xb], cl ; ret 0x8949
0x0000020000052b10 : add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x000002000008cc3d : add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x00000200003a1e3f : add byte ptr [rax + 0xb], cl ; ret 0x8d48
0x000002000022bd4f : add byte ptr [rax + 0xb], cl ; ret 0x8d4c
0x00000200000ad6a4 : add byte ptr [rax + 0xb], cl ; ret 0xb48
0x00000200001f865f : add byte ptr [rax + 0xb], cl ; ret 0xc933
0x0000020000512350 : add byte ptr [rax + 0xb], cl ; ret 0xd233
0x00000200000a9424 : add byte ptr [rax + 0xb], cl ; ret 0xf748
0x0000020000004974 : add byte ptr [rax + 0xd], cl ; ret 0
0x0000020000402811 : add byte ptr [rax + 0xeae9], al ; add byte ptr [rcx - 0x39], cl ; ret 0xf000
0x000002000016fb93 : add byte ptr [rax + 0xf410842], cl ; mov dh, 0x87 ; ret
0x0000020000613c56 : add byte ptr [rax + 0xf542444], cl ; xchg eax, ebp ; ret
0x00000200001c7c8f : add byte ptr [rax + 0xf], cl ; add eax, 0x1b6548 ; ret
0x0000020000136f9f : add byte ptr [rax + 0xf], cl ; fmul dword ptr [r8 - 0x75] ; ret
0x000002000014690f : add byte ptr [rax + 0xf], cl ; ret
0x000002000064c455 : add byte ptr [rax + 0xf], cl ; ret 0x45c7
0x0000020000036436 : add byte ptr [rax + 0xf], cl ; ret 0x8966
0x0000020000011ca7 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x00000200001ab6a9 : add byte ptr [rax + 0xf], cl ; stosd dword ptr [rdi], eax ; ret 0xd148
0x0000020000082635 : add byte ptr [rax + 1], bh ; ret
0x00000200005f1ed2 : add byte ptr [rax + 3], cl ; add eax, 0xffd07f2e ; ret
0x000002000004aece : add byte ptr [rax + 3], cl ; int 0xff
0x000002000002c23a : add byte ptr [rax + 3], cl ; iretd ; mov rdi, qword ptr [rsp + 0x10] ; jmp rcx
0x0000020000005491 : add byte ptr [rax + 3], cl ; ret
0x00000200003cead8 : add byte ptr [rax + 3], cl ; ret 0x100f
0x000002000001116d : add byte ptr [rax + 3], cl ; ret 0x1bf
0x00000200004ef88c : add byte ptr [rax + 3], cl ; ret 0x2349
0x00000200000f2e4a : add byte ptr [rax + 3], cl ; ret 0x349
0x00000200000060ae : add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000009cf50 : add byte ptr [rax + 3], cl ; ret 0x3b49
0x000002000009ca66 : add byte ptr [rax + 3], cl ; ret 0x3d48
0x000002000049c4b1 : add byte ptr [rax + 3], cl ; ret 0x8142
0x0000020000230b94 : add byte ptr [rax + 3], cl ; ret 0x8348
0x000002000004b3c7 : add byte ptr [rax + 3], cl ; ret 0x8948
0x0000020000097d38 : add byte ptr [rax + 3], cl ; ret 0x894c
0x0000020000231fac : add byte ptr [rax + 3], cl ; ret 0x8b48
0x0000020000017c90 : add byte ptr [rax + 3], cl ; ret 0x8b49
0x000002000073f820 : add byte ptr [rax + 3], cl ; ret 0x8d45
0x0000020000081cc4 : add byte ptr [rax + 3], cl ; ret 0xb948
0x0000020000079098 : add byte ptr [rax + 3], cl ; ret 0xba48
0x00000200000141ec : add byte ptr [rax + 3], cl ; ret 0xc148
0x000002000022e6a8 : add byte ptr [rax + 3], cl ; ret 0xc183
0x00000200000660f6 : add byte ptr [rax + 3], cl ; ret 0xccc3
0x000002000001cec7 : add byte ptr [rax + 3], cl ; ret 0xe0ff
0x0000020000201601 : add byte ptr [rax + 3], cl ; rol byte ptr [rcx], 0xac ; ret
0x00000200005fc2c6 : add byte ptr [rax + 3], cl ; ror dword ptr [rbp + rcx*4 + 4], 1 ; ret 0x8545
0x0000020000201deb : add byte ptr [rax + 3], cl ; sar byte ptr [rbx], 0xb4 ; ret
0x0000020000760b04 : add byte ptr [rax + 3], cl ; sti ; mov r13d, ebx ; jmp 0x20000760ae2
0x0000020000486c70 : add byte ptr [rax + 3], cl ; xlatb ; jmp rdx
0x000002000009caac : add byte ptr [rax + 5], al ; or dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x0000020000232178 : add byte ptr [rax + 5], cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000110dfe : add byte ptr [rax + 5], cl ; add byte ptr [rsi], dh ; add byte ptr [rax], al ; ret
0x0000020000231fa6 : add byte ptr [rax + 5], cl ; or byte ptr [rax], 0 ; add byte ptr [rax + 3], cl ; ret 0x8b48
0x00000200003b1220 : add byte ptr [rax + 5], cl ; or byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x00000200004a76b6 : add byte ptr [rax + 5], cl ; ror byte ptr [rax + rax], 0 ; ret
0x00000200006ad48b : add byte ptr [rax + rax + 0x30000], bl ; add byte ptr [rax], al ; ret 0
0x00000200001f6427 : add byte ptr [rax + rax - 0x3fcc3d00], ch ; ret
0x000002000001b62b : add byte ptr [rax + rax*8 + 0x58a0e74], al ; ret 0x2da8
0x00000200004eb01e : add byte ptr [rax + rax*8 - 0x39057af1], al ; or dword ptr [rax], eax ; ret
0x00000200001334a5 : add byte ptr [rax + rax*8 - 0x3fcc338b], al ; ret
0x00000200000e4511 : add byte ptr [rax + rax*8 - 0x743c6bf1], al ; ret
0x00000200001f7c36 : add byte ptr [rax + rax*8 - 0x74b39a8c], al ; ret
0x00000200001f7c46 : add byte ptr [rax + rax*8 - 0x74b3aa8c], al ; ret
0x00000200001f7c56 : add byte ptr [rax + rax*8 - 0x74b3ba8c], al ; ret
0x0000020000439aa3 : add byte ptr [rax + rax*8 - 0x74bad98b], al ; ret 0xd233
0x0000020000206419 : add byte ptr [rax + rax*8 - 0x74bbed8c], al ; ret 0x8b49
0x00000200002063de : add byte ptr [rax + rax*8 - 0x74bbee8c], al ; ret 0x8b49
0x000002000007c9ec : add byte ptr [rax + rax*8 - 0x8becb8b], al ; ret 0
0x000002000048a3db : add byte ptr [rax + rax*8 - 0x99af8c], al ; ret
0x0000020000202642 : add byte ptr [rax + rax*8 - 0xbef78b], al ; ret 0x5e9
0x0000020000202818 : add byte ptr [rax + rax*8 - 0xbef78b], al ; ret 0xdbe9
0x000002000051d1d1 : add byte ptr [rax + rax*8], bl ; add rsp, 0x28 ; ret
0x00000200001cd123 : add byte ptr [rax + rax], 0 ; ret
0x00000200000660f3 : add byte ptr [rax + rax], al ; add byte ptr [rax + 3], cl ; ret 0xccc3
0x0000020000118f88 : add byte ptr [rax + rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200000f1f36 : add byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret
0x0000020000452748 : add byte ptr [rax + rax], al ; add byte ptr [rbx - 0x9bfdb84], cl ; ret
0x00000200000ad73d : add byte ptr [rax + rax], al ; add byte ptr [rbx], dh ; ret 0x4489
0x00000200004915bb : add byte ptr [rax + rax], al ; add byte ptr [rbx], dh ; shr al, cl ; jp 0x200004915df ; ret
0x0000020000198cf6 : add byte ptr [rax + rax], al ; add byte ptr [rcx - 0x7f], cl ; ret 0xb98
0x0000020000446240 : add byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; test bh, bl ; ret
0x000002000059741b : add byte ptr [rax + rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x2174
0x00000200001a0cf1 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 0x7b], ah ; ret
0x0000020000654d5a : add byte ptr [rax + rax], al ; je 0x20000654d69 ; mov al, 1 ; ret
0x0000020000640667 : add byte ptr [rax + rax], al ; ret
0x000002000012580f : add byte ptr [rax + rax], bl ; ret
0x00000200003ce855 : add byte ptr [rax + rax], cl ; add byte ptr [rbp - 0x8858a27], al ; ret
0x00000200000b2fcb : add byte ptr [rax + rax], cl ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf749
0x000002000052e159 : add byte ptr [rax + rax], dl ; call 0x2000014f4c6
0x000002000052f7fb : add byte ptr [rax + rax], dl ; lea rcx, qword ptr [rbp + 8] ; call 0x2000040ba21
0x00000200004c4e20 : add byte ptr [rax + rcx + 0x49], dh ; mov ecx, ebp ; call 0x200000ebb29
0x00000200001d7314 : add byte ptr [rax + rcx + 0x4c], dh ; mov esi, ebx ; mov r8d, r10d ; jmp 0x200001d7331
0x000002000044c6a6 : add byte ptr [rax + rcx*4 + 0x7f], al ; sbb al, ch ; cmp al, 0x40 ; ret 0x49ff
0x00000200000c01e0 : add byte ptr [rax + rcx*4 - 0x4d], al ; ret
0x00000200000570ba : add byte ptr [rax + rcx*4 - 0x55], al ; ret 0
0x00000200000cf28b : add byte ptr [rax + rcx*4 - 0x5d], al ; ret 0
0x000002000075e584 : add byte ptr [rax + rdi + 0x2d], al ; mov dl, 0xc ; ret 0xfff
0x000002000075581f : add byte ptr [rax + rdi + 0x35], al ; loope 0x200007557b3 ; ret 0x74ff
0x000002000005340b : add byte ptr [rax + rdx - 0x75], dh ; add dword ptr [rbx], esp ; ret 0xc22b
0x000002000017d978 : add byte ptr [rax - 0x10a78417], dl ; inc dword ptr [rcx - 0x75] ; ret 0x8548
0x0000020000010846 : add byte ptr [rax - 0x1600000a], al ; ret
0x000002000018d1d1 : add byte ptr [rax - 0x16b7dbbc], cl ; ret
0x00000200005a3287 : add byte ptr [rax - 0x17], al ; add byte ptr [rbx - 0x16], bh ; dec dword ptr [rax - 0x75] ; ret
0x00000200003e5da4 : add byte ptr [rax - 0x247af0ff], ch ; ret
0x000002000003f463 : add byte ptr [rax - 0x2d], cl ; loopne 0x2000003f4b8 ; mov dword ptr [rax], eax ; ret
0x00000200003a3e70 : add byte ptr [rax - 0x2d], cl ; loopne 0x200003a3ec5 ; add esp, 0x28 ; ret
0x00000200001bebd5 : add byte ptr [rax - 0x2d], cl ; ret 0x3348
0x0000020000157083 : add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x000002000073ed0d : add byte ptr [rax - 0x2f], cl ; call 0x2004935f063
0x0000020000636cfb : add byte ptr [rax - 0x2f], cl ; call 0x20067257051
0x00000200000348cc : add byte ptr [rax - 0x39], cl ; ret
0x00000200001b3ff8 : add byte ptr [rax - 0x39], cl ; ret 0x6980
0x000002000000f403 : add byte ptr [rax - 0x39], cl ; ret 0xfff8
0x00000200000f0316 : add byte ptr [rax - 0x3b7cb7fe], dh ; sub byte ptr [rbp + 0x5b], bl ; ret
0x0000020000107fd9 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc213c7ec
0x00000200000a1a62 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc22d627d
0x00000200000a1dbe : add byte ptr [rax - 0x3f], cl ; call 0x1ffc22d83f5
0x00000200000adf63 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc22e277e
0x00000200000aeae5 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc22e3300
0x00000200000dae67 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc230f682
0x00000200000db606 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc230fe21
0x00000200000f5ba1 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc232a3bc
0x00000200000f86ee : add byte ptr [rax - 0x3f], cl ; call 0x1ffc232d009
0x000002000018154f : add byte ptr [rax - 0x3f], cl ; call 0x1ffc23b5d6a
0x0000020000187f3b : add byte ptr [rax - 0x3f], cl ; call 0x1ffc23bc756
0x000002000018d708 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc23c1f23
0x000002000019927b : add byte ptr [rax - 0x3f], cl ; call 0x1ffc23cdb96
0x00000200001d067f : add byte ptr [rax - 0x3f], cl ; call 0x1ffc2404e97
0x00000200001d2334 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc2406b4c
0x00000200000a4ab1 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc32d93cc
0x00000200000aa491 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc32dedac
0x000002000007df8b : add byte ptr [rax - 0x3f], cl ; call 0x1ffc34327b6
0x0000020000747832 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc397c14a
0x00000200007626a5 : add byte ptr [rax - 0x3f], cl ; call 0x1ffc3996fc0
0x000002000005fb0e : add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200004acc6f : add byte ptr [rax - 0x3f], cl ; call qword ptr [rcx]
0x000002000005b6b8 : add byte ptr [rax - 0x3f], cl ; clc ; adc byte ptr [rax - 0x7f], cl ; ret 0x1000
0x000002000005f44a : add byte ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000a5a2f : add byte ptr [rax - 0x3f], cl ; jmp 0x1ffc395a24a
0x000002000054494b : add byte ptr [rax - 0x3f], cl ; jmp 0x20000544976
0x00000200000dde94 : add byte ptr [rax - 0x3f], cl ; jmp 0x20048d0ddab
0x0000020000045722 : add byte ptr [rax - 0x3f], cl ; loopne 0x20000045738 ; ret
0x0000020000454bd2 : add byte ptr [rax - 0x3f], cl ; out dx, al ; adc dword ptr [rax - 9], ecx ; ret
0x00000200003a6a2a : add byte ptr [rax - 0x3fcd3cff], dh ; ret
0x000002000002268f : add byte ptr [rax - 0x3ffffddb], bh ; ret
0x00000200005fd0b6 : add byte ptr [rax - 0x3ffffdfa], bh ; ret
0x0000020000521a04 : add byte ptr [rax - 0x3ffffe77], bh ; ret
0x000002000003caab : add byte ptr [rax - 0x3fffff0e], bh ; ret
0x0000020000413144 : add byte ptr [rax - 0x3fffff19], bh ; ret
0x0000020000057f8e : add byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200001cb94e : add byte ptr [rax - 0x3fffff85], bh ; ret
0x00000200001324f2 : add byte ptr [rax - 0x3fffff9f], bh ; jmp 0x200001324c4
0x00000200005fd126 : add byte ptr [rax - 0x3fffffce], bh ; ret
0x000002000043f05c : add byte ptr [rax - 0x3fffffdd], bh ; jmp 0x2000043f02d
0x00000200001b8aa5 : add byte ptr [rax - 0x3fffffde], bh ; ret
0x00000200005208f6 : add byte ptr [rax - 0x3ffffff3], bh ; ret
0x000002000001c1f0 : add byte ptr [rax - 0x3ffffffe], bh ; ret
0x00000200001063af : add byte ptr [rax - 0x3fffffff], bh ; ret
0x0000020000434ff9 : add byte ptr [rax - 0x47], cl ; ret
0x00000200001411b2 : add byte ptr [rax - 0x48], dl ; add byte ptr [rax], 0 ; add cl, ch ; ret 0xcc
0x0000020000140ab2 : add byte ptr [rax - 0x48], dl ; add byte ptr [rax], al ; add cl, ch ; ret 0xd3
0x00000200001409b2 : add byte ptr [rax - 0x48], dl ; add byte ptr [rax], al ; add cl, ch ; ret 0xd4
0x00000200001431b2 : add byte ptr [rax - 0x48], dl ; add byte ptr [rcx], 0 ; add cl, ch ; ret 0xac
0x00000200001429b2 : add byte ptr [rax - 0x48], dl ; add dword ptr [rax], eax ; add cl, ch ; ret 0xb4
0x0000020000142ab2 : add byte ptr [rax - 0x48], dl ; add qword ptr [rax], rax ; add cl, ch ; ret 0xb3
0x00000200001420b2 : add byte ptr [rax - 0x48], dl ; clc ; add byte ptr [rax], al ; add cl, ch ; ret 0xbd
0x00000200001414b2 : add byte ptr [rax - 0x48], dl ; cwde ; add byte ptr [rax], al ; add cl, ch ; ret 0xc9
0x00000200001434b2 : add byte ptr [rax - 0x48], dl ; cwde ; add dword ptr [rax], eax ; add cl, ch ; ret 0xa9
0x0000020000141fb2 : add byte ptr [rax - 0x48], dl ; lock add byte ptr [rax], al ; add cl, ch ; ret 0xbe
0x0000020000141a92 : add byte ptr [rax - 0x48], dl ; mov dword ptr [rax], 0xe2e90000 ; ret
0x00000200001418b2 : add byte ptr [rax - 0x48], dl ; mov eax, 0xe9000000 ; ret 0xc5
0x00000200001438b2 : add byte ptr [rax - 0x48], dl ; mov eax, 0xe9000001 ; ret 0xa5
0x00000200001413b2 : add byte ptr [rax - 0x48], dl ; nop ; add byte ptr [rax], al ; add cl, ch ; ret 0xca
0x00000200001433b2 : add byte ptr [rax - 0x48], dl ; nop ; add dword ptr [rax], eax ; add cl, ch ; ret 0xaa
0x0000020000140cb2 : add byte ptr [rax - 0x48], dl ; pop rax ; add byte ptr [rax], al ; add cl, ch ; ret 0xd1
0x0000020000142cb2 : add byte ptr [rax - 0x48], dl ; pop rax ; add dword ptr [rax], eax ; add cl, ch ; ret 0xb1
0x0000020000142eb2 : add byte ptr [rax - 0x48], dl ; push -0x16ffffff ; ret 0xaf
0x0000020000140eb2 : add byte ptr [rax - 0x48], dl ; push -0x17000000 ; ret 0xcf
0x0000020000140bb2 : add byte ptr [rax - 0x48], dl ; push rax ; add byte ptr [rax], al ; add cl, ch ; ret 0xd2
0x0000020000142bb2 : add byte ptr [rax - 0x48], dl ; push rax ; add dword ptr [rax], eax ; add cl, ch ; ret 0xb2
0x0000020000141a12 : add byte ptr [rax - 0x48], dl ; ret
0x00000200001419f2 : add byte ptr [rax - 0x48], dl ; ret 0
0x00000200001419b2 : add byte ptr [rax - 0x48], dl ; rol byte ptr [rax], 0 ; add cl, ch ; ret 0xc4
0x0000020000141bf2 : add byte ptr [rax - 0x48], dl ; rol byte ptr [rax], cl ; add byte ptr [rax], al ; jmp 0x2000014de89
0x0000020000141bd2 : add byte ptr [rax - 0x48], dl ; rol dword ptr [rax], 1 ; add byte ptr [rax], al ; jmp 0x2000014de89
0x0000020000141c12 : add byte ptr [rax - 0x48], dl ; rol dword ptr [rax], cl ; add byte ptr [rax], al ; jmp 0x2000014de89
0x0000020000218c60 : add byte ptr [rax - 0x48f0ca15], al ; ret
0x00000200001c77f5 : add byte ptr [rax - 0x49f02dbb], cl ; ret 0xf41
0x00000200001733ab : add byte ptr [rax - 0x5682817], dl ; dec dword ptr [rax - 0x7d] ; ret 0xf4e
0x000002000016a965 : add byte ptr [rax - 0x6d0a317], dl ; dec dword ptr [rcx + 3] ; ret 0xc148
0x0000020000501bfd : add byte ptr [rax - 0x6d7af0e0], ch ; ret 8
0x00000200000f27a2 : add byte ptr [rax - 0x707bf100], al ; ret 0xa
0x0000020000038b5b : add byte ptr [rax - 0x72000009], al ; outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x0000020000037b6c : add byte ptr [rax - 0x73], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0x9974
0x0000020000535f77 : add byte ptr [rax - 0x73], cl ; adc eax, 0x12b61 ; jmp 0x20000535f4d
0x0000020000182df7 : add byte ptr [rax - 0x73], cl ; adc eax, 0x14b9b1 ; call rax
0x00000200004ad663 : add byte ptr [rax - 0x73], cl ; adc r8b, r13b ; ret
0x00000200004ad05b : add byte ptr [rax - 0x73], cl ; add al, 0x90 ; ret
0x000002000014f60d : add byte ptr [rax - 0x73], cl ; add al, 0xc1 ; ret
0x00000200004baa0a : add byte ptr [rax - 0x73], cl ; add dword ptr [r8 + 0x3b], ecx ; ret 0x5273
0x00000200005d0b14 : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x3b], ecx ; ret 0x830f
0x00000200000064c9 : add byte ptr [rax - 0x73], cl ; add eax, 0x2f67af ; ret
0x00000200000732ce : add byte ptr [rax - 0x73], cl ; add eax, 0xdd14a ; ret
0x0000020000073355 : add byte ptr [rax - 0x73], cl ; add eax, 0xdec73 ; ret
0x00000200006534bc : add byte ptr [rax - 0x73], cl ; add eax, 0xffc7d82c ; ret
0x00000200006534ca : add byte ptr [rax - 0x73], cl ; add eax, 0xffc7d836 ; ret
0x00000200006534e6 : add byte ptr [rax - 0x73], cl ; add eax, 0xffc7d85a ; ret
0x00000200006534d8 : add byte ptr [rax - 0x73], cl ; add eax, 0xffc7d8a0 ; ret
0x0000020000653502 : add byte ptr [rax - 0x73], cl ; add eax, 0xffc7d8a6 ; ret
0x00000200006534f4 : add byte ptr [rax - 0x73], cl ; add eax, 0xffc7d8dc ; ret
0x000002000042c0e5 : add byte ptr [rax - 0x73], cl ; add ecx, dword ptr [r9 + 0x3b] ; ret
0x00000200001f9dcd : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [r8 + 3] ; ret
0x0000020000425543 : add byte ptr [rax - 0x73], cl ; and al, 0x20 ; call 0x200000459b1
0x00000200005c056c : add byte ptr [rax - 0x73], cl ; and al, 0x3c ; call 0x200001ec844
0x00000200004ec0e2 : add byte ptr [rax - 0x73], cl ; and al, 0x40 ; call 0x20000117ea9
0x000002000052e85c : add byte ptr [rax - 0x73], cl ; and al, 0x48 ; call 0x2000014f4c9
0x0000020000035d30 : add byte ptr [rax - 0x73], cl ; and al, 0x50 ; call 0x20000091f48
0x0000020000143f7f : add byte ptr [rax - 0x73], cl ; and al, 8 ; ret
0x0000020000507017 : add byte ptr [rax - 0x73], cl ; and byte ptr [r9 - 0x75], al ; ret
0x00000200004987b8 : add byte ptr [rax - 0x73], cl ; call 0x200000bcd28
0x00000200004aedbf : add byte ptr [rax - 0x73], cl ; dec qword ptr [rax - 0x75] ; ret 0x48f0
0x00000200000a137f : add byte ptr [rax - 0x73], cl ; dec qword ptr [rax - 0x75] ; ret 0x49f0
0x00000200003fb0e8 : add byte ptr [rax - 0x73], cl ; enter 0x6ae8, 0x59 ; ret
0x00000200005041f3 : add byte ptr [rax - 0x73], cl ; js 0x200005041e7 ; ret
0x00000200005010cb : add byte ptr [rax - 0x73], cl ; loopne 0x20000501064 ; clc ; call r15
0x00000200001e1edc : add byte ptr [rax - 0x73], cl ; nop ; call qword ptr [rcx]
0x00000200005c3ecc : add byte ptr [rax - 0x73], cl ; or byte ptr [r11], bpl ; ret 0x8b44
0x00000200006c62b9 : add byte ptr [rax - 0x73], cl ; or byte ptr [r15], r9b ; xchg eax, esp ; ret
0x00000200006bd715 : add byte ptr [rax - 0x73], cl ; or byte ptr [rdi], r9b ; xchg eax, esp ; ret
0x000002000014643a : add byte ptr [rax - 0x73], cl ; or eax, 0x7d69 ; jmp rcx
0x000002000051d641 : add byte ptr [rax - 0x73], cl ; or r8b, r13b ; jne 0x2000051d66f ; ret
0x000002000000729a : add byte ptr [rax - 0x73], cl ; outsd dx, dword ptr [rsi] ; add dword ptr [rbx], esi ; fisttp dword ptr [rax - 0x7f] ; jmp qword ptr [rax]
0x00000200000be46f : add byte ptr [rax - 0x73], cl ; pop rdi ; add dword ptr [rax - 0x7f], ecx ; jmp qword ptr [rax]
0x00000200005143c1 : add byte ptr [rax - 0x73], cl ; push rbp ; out dx, eax ; call 0x20000140488
0x0000020000505b2d : add byte ptr [rax - 0x73], cl ; push rbp ; ret
0x00000200001b3038 : add byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x28 ; mov cl, bl ; call rax
0x0000020000512e91 : add byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x40 ; call 0x20000140489
0x00000200005126b4 : add byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x48 ; call 0x20000140489
0x00000200004ebec3 : add byte ptr [rax - 0x73], cl ; ret
0x00000200003f7ad0 : add byte ptr [rax - 0x73], cl ; sbb al, 0xe8 ; jb 0x200003f7b5a ; ret
0x0000020000593ccf : add byte ptr [rax - 0x73], cl ; shr r8b, 0x7f ; xchg eax, esi ; ret 0x33ff
0x0000020000498eb3 : add byte ptr [rax - 0x73], cl ; sub al, r13b ; jae 0x20000498e4f ; ret 0x48ff
0x0000020000514f74 : add byte ptr [rax - 0x73], cl ; test r13b, r8b ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000002000019e278 : add byte ptr [rax - 0x73], cl ; xchg eax, ebx ; loopne 0x2000019e287 ; add byte ptr [rax], al ; call rax
0x000002000057ef98 : add byte ptr [rax - 0x7421bbf1], al ; ret
0x00000200004fe35b : add byte ptr [rax - 0x7427bbf1], al ; ret
0x000002000000260f : add byte ptr [rax - 0x74b30001], al ; ret
0x000002000039f60a : add byte ptr [rax - 0x74b80000], bl ; ret
0x0000020000117894 : add byte ptr [rax - 0x75000009], al ; add al, 8 ; ret
0x00000200000d3a5c : add byte ptr [rax - 0x75], al ; ret
0x000002000020eaba : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax - 0x7d] ; ret
0x0000020000079789 : add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0x7501
0x00000200001d4b7d : add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0xf01
0x000002000059e03b : add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0x7401
0x0000020000024e71 : add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0xf01
0x000002000062537d : add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0xf3f
0x0000020000131d33 : add byte ptr [rax - 0x75], cl ; adc r8b, bpl ; ret
0x0000020000030f16 : add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x000002000009b45a : add byte ptr [rax - 0x75], cl ; add al, 0xc8 ; ret
0x00000200000082b8 : add byte ptr [rax - 0x75], cl ; add al, 8 ; ret
0x000002000000864d : add byte ptr [rax - 0x75], cl ; add byte ptr [rax], 0x17 ; add byte ptr [rax], al ; ret
0x000002000063f941 : add byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x17fa8bff], ebp ; ret 0xa052
0x000002000073fc33 : add byte ptr [rax - 0x75], cl ; add dword ptr [rcx - 0x7d], eax ; ret 0x48f8
0x00000200001afb21 : add byte ptr [rax - 0x75], cl ; add eax, 0x12294f ; call rax
0x00000200001ada47 : add byte ptr [rax - 0x75], cl ; add eax, 0x124a29 ; call rax
0x00000200001ab3a8 : add byte ptr [rax - 0x75], cl ; add eax, 0x1270c8 ; call rax
0x000002000016d659 : add byte ptr [rax - 0x75], cl ; add eax, 0x164e17 ; call rax
0x00000200001400ab : add byte ptr [rax - 0x75], cl ; add eax, 0x23e00d ; call rax
0x00000200005b249f : add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x0000020000504077 : add byte ptr [rax - 0x75], cl ; and al, 0x30 ; call 0x20000140388
0x000002000051ff5f : add byte ptr [rax - 0x75], cl ; and al, 0x38 ; call 0x20000140389
0x000002000049f36b : add byte ptr [rax - 0x75], cl ; and al, 0x48 ; call 0x200000c23c9
0x00000200005182a5 : add byte ptr [rax - 0x75], cl ; and al, 0x70 ; call 0x20000140389
0x00000200004996a4 : add byte ptr [rax - 0x75], cl ; and al, 0x78 ; call 0x200000bc289
0x00000200004997b9 : add byte ptr [rax - 0x75], cl ; and al, 0x78 ; call 0x200000c23c9
0x00000200000c1c0a : add byte ptr [rax - 0x75], cl ; and byte ptr [r9 + 0x23], cl ; ret
0x00000200006c11fa : add byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x7d], cl ; ret 0x118
0x00000200000424a4 : add byte ptr [rax - 0x75], cl ; and byte ptr [rax], 2 ; add byte ptr [rax], al ; ret
0x00000200001858c1 : add byte ptr [rax - 0x75], cl ; clc ; jmp 0x20000091b50
0x000002000057df33 : add byte ptr [rax - 0x75], cl ; cmp dh, dh ; ret
0x0000020000073d48 : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rdi] ; mov dh, 0x47 ; sbb byte ptr [rdx], bh ; ret 0x3674
0x00000200003e7ebf : add byte ptr [rax - 0x75], cl ; enter -0x1f18, -0x80 ; ret
0x000002000051cde6 : add byte ptr [rax - 0x75], cl ; enter -0x2e18, 0x26 ; ret
0x00000200003de940 : add byte ptr [rax - 0x75], cl ; enter -0x4018, -0x36 ; ret
0x000002000040de74 : add byte ptr [rax - 0x75], cl ; enter -0x5418, -0x13 ; ret 0xb0ff
0x0000020000489b1a : add byte ptr [rax - 0x75], cl ; enter -0x7e18, 0x31 ; ret
0x000002000052e9b5 : add byte ptr [rax - 0x75], cl ; enter 0x2e8, 0xb ; ret 0x48ff
0x000002000051ae6c : add byte ptr [rax - 0x75], cl ; enter 0x4be8, 0x46 ; ret
0x000002000051bd5b : add byte ptr [rax - 0x75], cl ; enter 0x5ce8, 0x37 ; ret
0x00000200003daffe : add byte ptr [rax - 0x75], cl ; enter 0x69e8, -0x10 ; ret
0x000002000048e389 : add byte ptr [rax - 0x75], cl ; enter 0x7ee8, -0x17 ; ret 0x84ff
0x00000200003e539a : add byte ptr [rax - 0x75], cl ; enter 0xde8, -0x60 ; ret
0x00000200004766fd : add byte ptr [rax - 0x75], cl ; fdecstp ; ret 0x7520
0x0000020000118cc4 : add byte ptr [rax - 0x75], cl ; fild word ptr [rbx - 0x7cb7f01d] ; ret
0x0000020000040114 : add byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], 1 ; ret
0x0000020000032ac4 : add byte ptr [rax - 0x75], cl ; fld dword ptr [rbp + 0x6a850fc0] ; call qword ptr [rdx]
0x00000200006628f5 : add byte ptr [rax - 0x75], cl ; fld1 ; ret 0xaecb
0x000002000052d9ab : add byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000523de8 : add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x00000200001057bc : add byte ptr [rax - 0x75], cl ; int 0xe8
0x000002000049addd : add byte ptr [rax - 0x75], cl ; int 0xff
0x00000200001e1746 : add byte ptr [rax - 0x75], cl ; int1 ; jmp 0x200001e17b2
0x000002000002a554 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000016786
0x000002000016b64c : add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000047956
0x0000020000423b46 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000005168b
0x00000200004c6d46 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000052f7a
0x0000020000475a46 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000009a487
0x0000020000497a6d : add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000ba7b3
0x000002000049b2de : add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000bcd17
0x00000200003d5873 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000c1b36
0x0000020000455c14 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000c1e26
0x00000200004c34b6 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000ea7c7
0x0000020000507199 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x200001356ab
0x000002000051b334 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000140487
0x00000200001bf302 : add byte ptr [rax - 0x75], cl ; iretd ; call 0x200006ab606
0x00000200006b61da : add byte ptr [rax - 0x75], cl ; iretd ; call 0x200006c2482
0x000002000021d486 : add byte ptr [rax - 0x75], cl ; iretd ; call rax
0x000002000001dbc4 : add byte ptr [rax - 0x75], cl ; iretd ; call rbx
0x00000200006ba24b : add byte ptr [rax - 0x75], cl ; iretd ; call rsi
0x00000200006b905a : add byte ptr [rax - 0x75], cl ; iretd ; mov rsi, rax ; call rbx
0x00000200000132b9 : add byte ptr [rax - 0x75], cl ; je 0x200000132ea ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000005025b : add byte ptr [rax - 0x75], cl ; je 0x2000005028c ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000069582 : add byte ptr [rax - 0x75], cl ; je 0x200000695b3 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000075144 : add byte ptr [rax - 0x75], cl ; je 0x20000075175 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000f97fa : add byte ptr [rax - 0x75], cl ; je 0x200000f982b ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001c0b39 : add byte ptr [rax - 0x75], cl ; je 0x200001c0b6a ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003e1d48 : add byte ptr [rax - 0x75], cl ; je 0x200003e1d79 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003f37a8 : add byte ptr [rax - 0x75], cl ; je 0x200003f37d9 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000479b32 : add byte ptr [rax - 0x75], cl ; je 0x20000479b63 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004fb11c : add byte ptr [rax - 0x75], cl ; je 0x200004fb14d ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000052c8d0 : add byte ptr [rax - 0x75], cl ; je 0x2000052c901 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000ff2aa : add byte ptr [rax - 0x75], cl ; jl 0x200000ff2db ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000010168d : add byte ptr [rax - 0x75], cl ; jmp 0x1ffc158d925
0x0000020000003f57 : add byte ptr [rax - 0x75], cl ; mov byte ptr [rax - 0x75000000], bh ; ret
0x00000200001c9c9a : add byte ptr [rax - 0x75], cl ; mov rbx, rcx ; call qword ptr [rax]
0x000002000001e179 : add byte ptr [rax - 0x75], cl ; or al, 1 ; add byte ptr [rax], al ; ret
0x00000200003c546a : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x2b], r9b ; ret
0x00000200001490ff : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + rsi*8], spl ; ret
0x000002000001c8b1 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200000536f4 : add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret
0x00000200000d7bc2 : add byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0xb], cl ; ret
0x000002000000a3c4 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x75], r9b ; ret
0x000002000009170b : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000057a3b : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200006822a6 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 1], cl ; ret
0x000002000007ae24 : add byte ptr [rax - 0x75], cl ; or byte ptr [rbp - 0x75], al ; ret 0xc149
0x0000020000431c5b : add byte ptr [rax - 0x75], cl ; or byte ptr [rcx + 0x23], cl ; ret
0x0000020000428177 : add byte ptr [rax - 0x75], cl ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8948
0x00000200004ec4d4 : add byte ptr [rax - 0x75], cl ; or dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x694c
0x000002000020eb16 : add byte ptr [rax - 0x75], cl ; or dword ptr [rax - 0x7d], ecx ; ret
0x0000020000183150 : add byte ptr [rax - 0x75], cl ; or eax, 0x158d30 ; call rax
0x000002000040f4c8 : add byte ptr [rax - 0x75], cl ; or eax, ebp ; out dx, eax ; call rbx
0x000002000007b792 : add byte ptr [rax - 0x75], cl ; or r14b, sil ; ret 0xf1f
0x0000020000427b97 : add byte ptr [rax - 0x75], cl ; pop rbx ; and byte ptr [rax - 0x7f], cl ; ret
0x00000200001a5c15 : add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov eax, r8d ; ret
0x0000020000015379 : add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200005a7d5a : add byte ptr [rax - 0x75], cl ; push rbp ; cmp byte ptr [rax - 0x7d], cl ; ret 0x4828
0x0000020000081bb8 : add byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000000ff4f : add byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000116774 : add byte ptr [rax - 0x75], cl ; push rcx ; or bl, ch ; cmc ; xor eax, eax ; ret
0x00000200000ab61f : add byte ptr [rax - 0x75], cl ; push rdi ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000019ade : add byte ptr [rax - 0x75], cl ; push rdi ; or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000020000002b95 : add byte ptr [rax - 0x75], cl ; ret
0x0000020000026ecb : add byte ptr [rax - 0x75], cl ; ret 0x1275
0x0000020000231ad8 : add byte ptr [rax - 0x75], cl ; ret 0x1fe9
0x000002000008a66f : add byte ptr [rax - 0x75], cl ; ret 0x2348
0x0000020000416639 : add byte ptr [rax - 0x75], cl ; ret 0x2349
0x0000020000009b87 : add byte ptr [rax - 0x75], cl ; ret 0x234c
0x00000200001d4b89 : add byte ptr [rax - 0x75], cl ; ret 0x25
0x0000020000491863 : add byte ptr [rax - 0x75], cl ; ret 0x2548
0x00000200004ab9d5 : add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000009a01f : add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x0000020000229481 : add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x0000020000071603 : add byte ptr [rax - 0x75], cl ; ret 0x3348
0x00000200000ada1f : add byte ptr [rax - 0x75], cl ; ret 0x348
0x0000020000015359 : add byte ptr [rax - 0x75], cl ; ret 0x3844
0x00000200006707ef : add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x00000200005dcab1 : add byte ptr [rax - 0x75], cl ; ret 0x4466
0x000002000011b77d : add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x0000020000503269 : add byte ptr [rax - 0x75], cl ; ret 0x4bf
0x000002000045cc67 : add byte ptr [rax - 0x75], cl ; ret 0x4cf0
0x00000200000aa84b : add byte ptr [rax - 0x75], cl ; ret 0x5189
0x00000200000cee17 : add byte ptr [rax - 0x75], cl ; ret 0x7c80
0x0000020000010991 : add byte ptr [rax - 0x75], cl ; ret 0x8341
0x0000020000022bcf : add byte ptr [rax - 0x75], cl ; ret 0x8348
0x000002000003fcfe : add byte ptr [rax - 0x75], cl ; ret 0x850f
0x0000020000528364 : add byte ptr [rax - 0x75], cl ; ret 0x8548
0x000002000000d31a : add byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000100fba : add byte ptr [rax - 0x75], cl ; ret 0x8949
0x00000200000d53ab : add byte ptr [rax - 0x75], cl ; ret 0x894c
0x000002000022855d : add byte ptr [rax - 0x75], cl ; ret 0x8b45
0x0000020000022630 : add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000021c5b6 : add byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x0000020000090d56 : add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x0000020000779d9f : add byte ptr [rax - 0x75], cl ; ret 0x8d44
0x00000200006a8cc0 : add byte ptr [rax - 0x75], cl ; ret 0x8d48
0x000002000002663f : add byte ptr [rax - 0x75], cl ; ret 0x8d4a
0x00000200000631ed : add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x0000020000055de2 : add byte ptr [rax - 0x75], cl ; ret 0x8d4d
0x00000200003ccce4 : add byte ptr [rax - 0x75], cl ; ret 0xa348
0x00000200001072fe : add byte ptr [rax - 0x75], cl ; ret 0xb849
0x000002000009cac0 : add byte ptr [rax - 0x75], cl ; ret 0xb948
0x00000200000589a4 : add byte ptr [rax - 0x75], cl ; ret 0xb949
0x0000020000744045 : add byte ptr [rax - 0x75], cl ; ret 0xbf48
0x000002000000ffcf : add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004bc6d6 : add byte ptr [rax - 0x75], cl ; ret 0xc932
0x00000200004af1fd : add byte ptr [rax - 0x75], cl ; ret 0xc933
0x00000200001bc3d2 : add byte ptr [rax - 0x75], cl ; ret 0xccc3
0x0000020000128d7e : add byte ptr [rax - 0x75], cl ; ret 0xd148
0x000002000003af83 : add byte ptr [rax - 0x75], cl ; ret 0xd348
0x000002000007dfb0 : add byte ptr [rax - 0x75], cl ; ret 0xf48
0x000002000007df98 : add byte ptr [rax - 0x75], cl ; ret 0xf49
0x000002000042e0f7 : add byte ptr [rax - 0x75], cl ; retf ; call 0x2000005abbf
0x000002000042dc96 : add byte ptr [rax - 0x75], cl ; retf ; call 0x2000005c78f
0x00000200006bc20b : add byte ptr [rax - 0x75], cl ; retf ; call 0x200000684c6
0x00000200004757ce : add byte ptr [rax - 0x75], cl ; retf ; call 0x2000009a247
0x00000200004558bc : add byte ptr [rax - 0x75], cl ; retf ; call 0x200000c1b36
0x00000200004c41bc : add byte ptr [rax - 0x75], cl ; retf ; call 0x200000e9467
0x00000200004cc072 : add byte ptr [rax - 0x75], cl ; retf ; call 0x200000ef377
0x000002000052d285 : add byte ptr [rax - 0x75], cl ; retf ; call 0x2000014f187
0x00000200005c04ba : add byte ptr [rax - 0x75], cl ; retf ; call 0x200001eca2f
0x000002000064a57b : add byte ptr [rax - 0x75], cl ; retf ; call 0x200001f67d6
0x000002000064a56e : add byte ptr [rax - 0x75], cl ; retf ; call 0x200001f6846
0x000002000075cbee : add byte ptr [rax - 0x75], cl ; retf ; call 0x20000768ee6
0x000002000052c1f7 : add byte ptr [rax - 0x75], cl ; retf ; call rax
0x000002000040ad73 : add byte ptr [rax - 0x75], cl ; retf ; call rsi
0x00000200006160ac : add byte ptr [rax - 0x75], cl ; retf ; mov r8d, edx ; call 0x200004e22c9
0x00000200000fd95e : add byte ptr [rax - 0x75], cl ; rol byte ptr [rcx - 0x7c], 1 ; ret 0x840f
0x000002000047961d : add byte ptr [rax - 0x75], cl ; ror byte ptr [rbp - 0x77], 1 ; or cl, byte ptr [rax - 0x75] ; ret 0x8348
0x00000200000220f9 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x0000020000115c80 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], 1 ; iretd ; call rbx
0x00000200000ab6fe : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200001c32de : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x77], 0xd ; jmp qword ptr [rbx]
0x00000200001f9a9d : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x7d], cl ; ret
0x000002000051df33 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 1], 1 ; ret 0x4566
0x000002000058a613 : add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 1], cl ; ret 0x3966
0x00000200006bf1a7 : add byte ptr [rax - 0x75], cl ; sal dword ptr [rbp + 3], 1 ; xor eax, eax ; ret
0x00000200003d4d6b : add byte ptr [rax - 0x75], cl ; sal esi, cl ; ret
0x000002000005b7b9 : add byte ptr [rax - 0x75], cl ; salc ; call 0x200000979d6
0x000002000060ab45 : add byte ptr [rax - 0x75], cl ; salc ; call 0x20000231ce7
0x00000200004c9d80 : add byte ptr [rax - 0x75], cl ; salc ; mov rcx, r15 ; call rax
0x0000020000171624 : add byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call rbx
0x000002000064c8f4 : add byte ptr [rax - 0x75], cl ; sbb al, ch ; ret
0x00000200000fb652 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x2b], cl ; ret 0x8348
0x00000200003bb5b3 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x0000020000097551 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [r9 + 0x23], cl ; ret 0x3d48
0x00000200000a7b69 : add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7b], r9b ; ret
0x000002000008582f : add byte ptr [rax - 0x75], cl ; sbb dh, dh ; ret
0x00000200003ecbb0 : add byte ptr [rax - 0x75], cl ; sbb ebp, eax ; xchg eax, edi ; ret
0x0000020000081a51 : add byte ptr [rax - 0x75], cl ; sbb esi, esi ; ret
0x0000020000218144 : add byte ptr [rax - 0x75], cl ; sbb r12b, al ; jrcxz 0x20000218182 ; ret 0xc531
0x00000200004ba799 : add byte ptr [rax - 0x75], cl ; shr bl, 1 ; ret 0xb8e8
0x00000200004970f3 : add byte ptr [rax - 0x75], cl ; shr eax, cl ; call 0x1ff8c49331f
0x00000200000d62a4 : add byte ptr [rax - 0x75], cl ; shr eax, cl ; jmp qword ptr [rsi]
0x0000020000008625 : add byte ptr [rax - 0x75], cl ; sub al, 0x17 ; add byte ptr [rax], al ; ret
0x000002000056f84b : add byte ptr [rax - 0x75], cl ; sub bl, bpl ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000002155d : add byte ptr [rax - 0x75], cl ; sub byte ptr [r13 - 0x7b], r9b ; ret 0x850f
0x00000200000442e8 : add byte ptr [rax - 0x75], cl ; sub byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x00000200005031f1 : add byte ptr [rax - 0x75], cl ; sub r8b, r13b ; test edx, ecx ; ret
0x0000020000429f1e : add byte ptr [rax - 0x75], cl ; test al, 0xb8 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000020000190338 : add byte ptr [rax - 0x75], cl ; xchg eax, edi ; push -0x9ffffff ; ret 0x7501
0x000002000017b738 : add byte ptr [rax - 0x75], cl ; xlatb ; call 0x200000979d6
0x0000020000475a83 : add byte ptr [rax - 0x75], cl ; xlatb ; call 0x2000009a2d7
0x00000200004a2528 : add byte ptr [rax - 0x75], cl ; xlatb ; call 0x200000c2d17
0x0000020000523b22 : add byte ptr [rax - 0x75], cl ; xlatb ; call 0x2000014f187
0x00000200005ccbf5 : add byte ptr [rax - 0x75], cl ; xlatb ; call 0x200003d8e9e
0x00000200005d00f8 : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r14 ; call rax
0x00000200005d0150 : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r15 ; call rax
0x000002000051e6f0 : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, rbx ; call qword ptr [rax]
0x00000200005d018b : add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, rsi ; call r10
0x000002000002f888 : add byte ptr [rax - 0x75], cl ; xor byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x00000200003e544b : add byte ptr [rax - 0x75], cl ; xor r8b, r13b ; mov bl, 0x9f ; ret
0x00000200006c49fb : add byte ptr [rax - 0x76], al ; iretd ; mov rbx, rax ; call rsi
0x0000020000774d49 : add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x000002000011fd2b : add byte ptr [rax - 0x77], cl ; adc dword ptr [rax - 0x75], ecx ; ret 0xd148
0x0000020000126e91 : add byte ptr [rax - 0x77], cl ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4818
0x000002000014f732 : add byte ptr [rax - 0x77], cl ; adc eax, 0x18cf86 ; ret
0x000002000000f5a4 : add byte ptr [rax - 0x77], cl ; add ch, bl ; stosb byte ptr [rdi], al ; xor eax, eax ; ret
0x0000020000046af2 : add byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x75] ; ret 0x8348
0x00000200003f5e4a : add byte ptr [rax - 0x77], cl ; add dword ptr [rax - 0x75], ecx ; ret
0x0000020000025ff1 : add byte ptr [rax - 0x77], cl ; add dword ptr [rbx - 0x3fcc3c3e], ecx ; ret
0x000002000041ee52 : add byte ptr [rax - 0x77], cl ; add eax, 0x2da3c6 ; ret
0x0000020000426344 : add byte ptr [rax - 0x77], cl ; add ebp, ebx ; ret 0x8b8
0x00000200003f2da0 : add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x75] ; ret
0x0000020000097b8f : add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000046908c : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r11
0x00000200005101a6 : add byte ptr [rax - 0x77], cl ; and al, 0x20 ; mov r8d, r9d ; call rdi
0x0000020000496ea6 : add byte ptr [rax - 0x77], cl ; and al, 0x48 ; call 0x200000b9109
0x00000200000dbc42 : add byte ptr [rax - 0x77], cl ; jl 0x200000dbc72 ; xor dh, dh ; ret 0x7502
0x00000200000f1342 : add byte ptr [rax - 0x77], cl ; jl 0x200000f1373 ; sub byte ptr [rbp - 0x75], cl ; ret 0x8948
0x000002000049d98f : add byte ptr [rax - 0x77], cl ; jl 0x2000049d9c1 ; cmp al, ch ; push rsp ; ret 0x48ff
0x0000020000225f1e : add byte ptr [rax - 0x77], cl ; jne 0x20000225f62 ; jmp 0x200002221d8
0x0000020000406572 : add byte ptr [rax - 0x77], cl ; jnp 0x1ff8b8089d0 ; ret
0x00000200000ebb43 : add byte ptr [rax - 0x77], cl ; mov al, byte ptr [rax + 7] ; add byte ptr [rax], al ; ret
0x00000200000bc568 : add byte ptr [rax - 0x77], cl ; mov byte ptr [rax + 6], dh ; add byte ptr [rax], al ; ret
0x00000200000ebb28 : add byte ptr [rax - 0x77], cl ; mov byte ptr [rax + 7], al ; add byte ptr [rax], al ; ret
0x00000200000be271 : add byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x75], r9b ; ret 0x49f0
0x000002000052c8f1 : add byte ptr [rax - 0x77], cl ; push rax ; push rax ; ret
0x00000200000e8c4d : add byte ptr [rax - 0x77], cl ; push rcx ; or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x0000020000499139 : add byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x28 ; call 0x200000bb119
0x000002000049a02f : add byte ptr [rax - 0x77], cl ; sal r14b, 1 ; ret
0x00000200000032da : add byte ptr [rax - 0x77], cl ; sbb al, byte ptr [rcx - 0x75] ; ret
0x00000200001610c4 : add byte ptr [rax - 0x77], cl ; sbb eax, ebp ; ret
0x000002000073152f : add byte ptr [rax - 0x77], cl ; test dword ptr [rax + 0x2b000005], edx ; ret
0x00000200003ea799 : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; loopne 0x200003ea7a9 ; add byte ptr [rax], al ; ret
0x00000200000c7f26 : add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x00000200001c6020 : add byte ptr [rax - 0x79], cl ; or eax, 0x1194d8 ; ret
0x000002000007bb62 : add byte ptr [rax - 0x7a9a0000], al ; ret 0x1f74
0x00000200004875d1 : add byte ptr [rax - 0x7a9a0000], al ; ret 0x2874
0x000002000012623e : add byte ptr [rax - 0x7a9a0000], al ; ret 0x840f
0x00000200001fbc9a : add byte ptr [rax - 0x7a9a0000], al ; ret 0xd74
0x00000200001cec3d : add byte ptr [rax - 0x7ab80000], al ; ret
0x0000020000459a8b : add byte ptr [rax - 0x7ae8fb73], al ; ret 0x840f
0x00000200005068c8 : add byte ptr [rax - 0x7ae9fb73], al ; ret 0x574
0x000002000057fda0 : add byte ptr [rax - 0x7aecfb73], al ; ret 0xc75
0x0000020000735ffb : add byte ptr [rax - 0x7aeefb73], al ; ret 0xc75
0x000002000039b872 : add byte ptr [rax - 0x7af10000], al ; ret
0x0000020000479188 : add byte ptr [rax - 0x7b], al ; ret 0x1475
0x00000200000467e3 : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbx + rbx - 0xa] ; ret
0x000002000002ccc5 : add byte ptr [rax - 0x7b], cl ; leave ; je 0x2000002ccd6 ; mov al, 1 ; ret
0x0000020000124392 : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001243a0 ; call rcx
0x00000200001b29fe : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001b2a0c ; call rcx
0x00000200001b2a8a : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001b2a9a ; jmp rcx
0x00000200001b2afa : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001b2b08 ; call rcx
0x00000200004c1bf4 : add byte ptr [rax - 0x7b], cl ; leave ; je 0x200004c1c08 ; call 0x200000e7979
0x0000020000021dc8 : add byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000021ddb ; mov eax, dword ptr [rax + 0x24] ; ret
0x0000020000069e9f : add byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000069e9a ; xor al, al ; ret
0x0000020000074f2a : add byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000074f37 ; ret
0x000002000075e909 : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rsi - 0x75] ; ret
0x00000200001cec40 : add byte ptr [rax - 0x7b], cl ; ret
0x0000020000627897 : add byte ptr [rax - 0x7b], cl ; ret 0x2574
0x00000200003f6c7e : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], 0x44 ; ret 0x3b48
0x000002000006f47d : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8948
0x000002000045b042 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; cli ; ret
0x000002000004a00c : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000002000049f37c : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; in eax, dx ; ret 0x11
0x0000020000492812 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000020000035f3f : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret
0x00000200000fea8f : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], cl ; test byte ptr [rdi], bl ; ret
0x0000020000409b72 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x25], 0x8b ; ret 0x8948
0x00000200000342ce : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 1], cl ; ret
0x00000200006b9f96 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x41], 0x8a ; leave ; call rax
0x00000200006c0603 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], 0x8b ; iretd ; call rax
0x0000020000069ffb : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], cl ; ret
0x00000200003c9ac8 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x14], 0xeb ; ret 0x8948
0x000002000017e0c8 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xb], 0xe9 ; ret
0x00000200001b2aae : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rax + 0x48], cl ; jmp rdx
0x000002000044defa : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rdx + rcx + 0x48], 3 ; ret
0x0000020000127b00 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rax + 0x33], cl ; leave ; call rdx
0x00000200003c1382 : add byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rdx*4 + 0x48], 0x8b ; ret
0x00000200004d8260 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000200003f9d02 : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x000002000045b76c : add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; stosb byte ptr [rdi], al ; ret 0x14
0x00000200001b3532 : add byte ptr [rax - 0x7c], al ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000200006685e5 : add byte ptr [rax - 0x7c], al ; div byte ptr [rcx + rbx*2 - 0xa] ; ret
0x00000200001b4632 : add byte ptr [rax - 0x7c], al ; div byte ptr [rsp + rax + 0xb] ; ret
0x00000200003dc2ab : add byte ptr [rax - 0x7c], al ; push qword ptr [rcx + rsi - 0x18] ; cmp ch, ah ; ret
0x00000200006481ab : add byte ptr [rax - 0x7c], al ; push qword ptr [rdx + rax - 1] ; ret
0x00000200000bfc87 : add byte ptr [rax - 0x7c], al ; test byte ptr [rdi], 0x85 ; ret 0xd16
0x00000200003c3e8e : add byte ptr [rax - 0x7cb7c68c], al ; ret 0x4428
0x00000200001cb935 : add byte ptr [rax - 0x7cb7f38c], ah ; shr dword ptr [rax], -0x7d ; ret 0x75ff
0x00000200004e8ac6 : add byte ptr [rax - 0x7d], cl ; and al, 0x20 ; add al, ch ; salc ; ret 0xffb9
0x00000200001326e2 : add byte ptr [rax - 0x7d], cl ; and al, 0x48 ; dec dword ptr [rax - 0x39] ; ret 0xba00
0x000002000042eeb3 : add byte ptr [rax - 0x7d], cl ; and dword ptr [rax], eax ; call 0x20000053c68
0x00000200004ecd5d : add byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rsi + 4], esi ; xor ecx, ecx ; call rax
0x0000020000121f44 : add byte ptr [rax - 0x7d], cl ; jmp 0x1ffc3d99454
0x00000200001f9ddd : add byte ptr [rax - 0x7d], cl ; jmp 0x200001f9df8
0x00000200001fa087 : add byte ptr [rax - 0x7d], cl ; jmp 0x200001fa0a2
0x0000020000157fa6 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000020000008257 : add byte ptr [rax - 0x7d], cl ; ret
0x00000200001d40ba : add byte ptr [rax - 0x7d], cl ; ret 0x2b05
0x00000200005f5dfc : add byte ptr [rax - 0x7d], cl ; ret 0x3b08
0x00000200001d6164 : add byte ptr [rax - 0x7d], cl ; ret 0x4102
0x000002000077ba62 : add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000020000618a9d : add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x0000020000639212 : add byte ptr [rax - 0x7d], cl ; ret 0x410c
0x000002000004a40c : add byte ptr [rax - 0x7d], cl ; ret 0x411f
0x0000020000419611 : add byte ptr [rax - 0x7d], cl ; ret 0x4120
0x00000200006398e5 : add byte ptr [rax - 0x7d], cl ; ret 0x4125
0x000002000041b11a : add byte ptr [rax - 0x7d], cl ; ret 0x4130
0x0000020000620823 : add byte ptr [rax - 0x7d], cl ; ret 0x4131
0x000002000022b07a : add byte ptr [rax - 0x7d], cl ; ret 0x4408
0x00000200004b85bc : add byte ptr [rax - 0x7d], cl ; ret 0x4410
0x0000020000054c83 : add byte ptr [rax - 0x7d], cl ; ret 0x4470
0x000002000000bde0 : add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x00000200004b6439 : add byte ptr [rax - 0x7d], cl ; ret 0x4520
0x00000200000f9a0a : add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000003dfd4 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000002000002287a : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000007b227 : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000003de4f : add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x00000200004a8073 : add byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000003de7a : add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000003de97 : add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x000002000003deb4 : add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000002000019e43e : add byte ptr [rax - 0x7d], cl ; ret 0x4848
0x00000200000672a1 : add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x000002000063ddc5 : add byte ptr [rax - 0x7d], cl ; ret 0x4868
0x000002000003ded4 : add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x000002000003def4 : add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x000002000010f9ec : add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000002000066eb66 : add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000020000020b51 : add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x0000020000079536 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000020000114cf5 : add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x000002000040fe90 : add byte ptr [rax - 0x7d], cl ; ret 0x4938
0x000002000074f937 : add byte ptr [rax - 0x7d], cl ; ret 0x4c02
0x0000020000125798 : add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x000002000003ee8d : add byte ptr [rax - 0x7d], cl ; ret 0x4c10
0x000002000003eaa2 : add byte ptr [rax - 0x7d], cl ; ret 0x4c30
0x000002000015d90f : add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x00000200002215b9 : add byte ptr [rax - 0x7d], cl ; ret 0x4cf8
0x0000020000598f8c : add byte ptr [rax - 0x7d], cl ; ret 0x6604
0x00000200001c1127 : add byte ptr [rax - 0x7d], cl ; ret 0x6608
0x00000200006c5cdc : add byte ptr [rax - 0x7d], cl ; ret 0xe820
0x00000200000ef0d6 : add byte ptr [rax - 0x7d], cl ; ret 0xe828
0x00000200004af256 : add byte ptr [rax - 0x7d], cl ; ret 0xe84c
0x00000200004cec7a : add byte ptr [rax - 0x7d], cl ; ret 0xe850
0x000002000050c8f0 : add byte ptr [rax - 0x7d], cl ; ret 0xe904
0x0000020000062c63 : add byte ptr [rax - 0x7d], cl ; ret 0xe906
0x00000200004d3d46 : add byte ptr [rax - 0x7d], cl ; ret 0xeb28
0x00000200004e9c56 : add byte ptr [rax - 0x7d], cl ; ret 0xf02
0x0000020000100020 : add byte ptr [rax - 0x7d], cl ; ret 0xf08
0x00000200000875ef : add byte ptr [rax - 0x7d], cl ; ret 0xf30
0x0000020000232267 : add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x000002000022574b : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x3b ; ret
0x000002000073ca15 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x3b ; ret 0xf472
0x000002000022b0ac : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x3b ; ret
0x00000200007332dc : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x3b ; ret 0xf472
0x000002000002d692 : add byte ptr [rax - 0x7f], cl ; jmp rax
0x00000200000040c0 : add byte ptr [rax - 0x7f], cl ; ret
0x00000200001469d6 : add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x00000200000920a6 : add byte ptr [rax - 0x7f], cl ; ret 0x110
0x000002000052489e : add byte ptr [rax - 0x7f], cl ; ret 0x1e8
0x000002000052484e : add byte ptr [rax - 0x7f], cl ; ret 0x1f8
0x000002000005fab9 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000002000047e089 : add byte ptr [rax - 0x7f], cl ; ret 0x240
0x000002000003dac0 : add byte ptr [rax - 0x7f], cl ; ret 0x2e00
0x00000200001bfe17 : add byte ptr [rax - 0x7f], cl ; ret 0x3600
0x000002000040611b : add byte ptr [rax - 0x7f], cl ; ret 0x450
0x000002000009f85d : add byte ptr [rax - 0x7f], cl ; ret 0xc0
0x00000200000378f8 : add byte ptr [rax - 0x7f], cl ; ret 0xcc
0x000002000046d04b : add byte ptr [rax - 0x7f], cl ; ret 0xfb30
0x00000200000dcbb4 : add byte ptr [rax - 0x7f], cl ; ret 0xfff
0x00000200003c5d8e : add byte ptr [rax - 0x7f], cl ; rol dword ptr [rax + 0xb], 0 ; add bl, ch ; ret 0x19b8
0x0000020000527306 : add byte ptr [rax - 0x7fffffe6], bh ; ret
0x000002000007d1f0 : add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200006c9377 : add byte ptr [rax - 0x8b7f7bd], cl ; ret 0xfffc
0x00000200000e83b6 : add byte ptr [rax - 0x9000009], al ; ret
0x0000020000075cee : add byte ptr [rax - 0x907f4b4], al ; ret
0x000002000001f6fc : add byte ptr [rax - 0x908dc9a], al ; ret
0x0000020000431f65 : add byte ptr [rax - 0x9ef8afe], ch ; ret
0x0000020000058cde : add byte ptr [rax - 0x9fffffb], al ; ret
0x0000020000198674 : add byte ptr [rax - 0xbbe3817], dl ; dec dword ptr [rax - 0x75] ; ret
0x000002000068ee55 : add byte ptr [rax - 0xbefc15], al ; ret
0x000002000018f71a : add byte ptr [rax - 0xd721417], dl ; dec dword ptr [rax - 0x75] ; ret
0x00000200004b5fda : add byte ptr [rax - 0xd7af0fe], ch ; ret 0x10
0x000002000018c7f1 : add byte ptr [rax - 0xe34c017], dl ; push rsi ; ret 0x7401
0x00000200004e8d39 : add byte ptr [rax - 0xf000009], al ; inc dword ptr [rax] ; ret
0x00000200001dc9da : add byte ptr [rax - 1], cl ; adc sil, sil ; ret
0x00000200000209ae : add byte ptr [rax - 1], cl ; ret
0x000002000009f6bc : add byte ptr [rax - 1], cl ; ret 0x3b48
0x000002000068c54d : add byte ptr [rax - 1], cl ; ret 0x4566
0x000002000057aef2 : add byte ptr [rax - 1], cl ; ret 0x4d8b
0x00000200000e015c : add byte ptr [rax - 1], cl ; ret 0x8148
0x00000200000396ce : add byte ptr [rax - 1], cl ; ret 0x8d4d
0x00000200005d5483 : add byte ptr [rax - 1], cl ; ret 0xba0f
0x0000020000620072 : add byte ptr [rax - 1], cl ; ret 0xc148
0x00000200003b7278 : add byte ptr [rax - 1], cl ; ret 0xd5eb
0x00000200001f896b : add byte ptr [rax - 1], cl ; ret 0xe281
0x000002000013520b : add byte ptr [rax - 1], cl ; ret 0xff49
0x000002000074405b : add byte ptr [rax - 5], al ; idiv bh ; dec dword ptr [rcx + 0x23] ; ret 0xbf49
0x00000200000069c1 : add byte ptr [rax - 9], cl ; fucompp ; ret 0xfffe
0x000002000005a6c0 : add byte ptr [rax - 9], cl ; ret
0x0000020000129ec1 : add byte ptr [rax - 9], cl ; ret 0xfff
0x00000200001dd8d7 : add byte ptr [rax - 9], cl ; ror byte ptr [rax + 0x23], 1 ; ret 0x2348
0x00000200000a00f6 : add byte ptr [rax - 9], cl ; ror byte ptr [rax + 0x23], 1 ; ret 0x234c
0x0000020000096042 : add byte ptr [rax - 9], cl ; ror byte ptr [rax + 0x23], cl ; ret 0x8949
0x00000200001749b2 : add byte ptr [rax - 9], cl ; ror byte ptr [rax + 0xb], 1 ; ret 0x8348
0x000002000003be89 : add byte ptr [rax - 9], cl ; ror byte ptr [rax - 0x7b], 1 ; ret 0x850f
0x0000020000181c4c : add byte ptr [rax - 9], cl ; ror byte ptr [rcx + 0x23], 1 ; ret
0x000002000003e4f6 : add byte ptr [rax - 9], cl ; sal al, 1 ; and qword ptr [r9 + 8], rax ; ret
0x0000020000217e2a : add byte ptr [rax], 0 ; add ah, al ; ret 0x187d
0x00000200004bedd5 : add byte ptr [rax], 0 ; add al, ch ; ret 0xc758
0x00000200003d96da : add byte ptr [rax], 0 ; add bh, bh ; ret
0x0000020000405d76 : add byte ptr [rax], 0 ; add bl, ch ; ret
0x00000200003b116f : add byte ptr [rax], 0 ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000516fbf : add byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; ret
0x0000020000052b0d : add byte ptr [rax], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x000002000008cc3a : add byte ptr [rax], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x000002000014693a : add byte ptr [rax], 0 ; add byte ptr [rax + 0xf], cl ; ret
0x00000200003cead5 : add byte ptr [rax], 0 ; add byte ptr [rax + 3], cl ; ret 0x100f
0x0000020000002b92 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000fa742 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000911f6 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000075ef3e : add byte ptr [rax], 0 ; add byte ptr [rbp + 0x2b], cl ; ret 0xde75
0x00000200001e636e : add byte ptr [rax], 0 ; add byte ptr [rbp + 3], cl ; ret 0x8348
0x000002000062a9f5 : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x4f], dh ; inc rdx ; jmp 0x2000062aa38
0x0000020000064f1c : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x75], al ; ret
0x000002000041f7dd : add byte ptr [rax], 0 ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x0000020000474375 : add byte ptr [rax], 0 ; add byte ptr [rbx - 0x6bf0fe03], al ; ret
0x000002000007b749 : add byte ptr [rax], 0 ; add byte ptr [rbx], al ; ret 0x3344
0x0000020000761298 : add byte ptr [rax], 0 ; add byte ptr [rbx], ch ; ret
0x00000200000ff1a7 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x3a], al ; ret 0x840f
0x00000200000cd3b4 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; ret
0x00000200000d2b35 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; ret
0x00000200000860ad : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rbx ; ret
0x00000200005e20c4 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200004469d9 : add byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x000002000015a35d : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x75], al ; ret 0x2eb
0x000002000077b156 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x75], cl ; or dword ptr [rax - 0x75], ecx ; ret
0x0000020000177976 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x3ee9
0x000002000003abd5 : add byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200004ac979 : add byte ptr [rax], 0 ; add byte ptr [rcx - 1], al ; ret
0x000002000000c194 : add byte ptr [rax], 0 ; add byte ptr [rcx - 9], al ; ret
0x0000020000536335 : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x0000020000133012 : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200002072a3 : add byte ptr [rax], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200004c80fe : add byte ptr [rax], 0 ; add byte ptr [rdi + 4], dh ; mov al, r8b ; ret
0x000002000004a3b0 : add byte ptr [rax], 0 ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8341
0x00000200004ddadd : add byte ptr [rax], 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x0000020000020d93 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0x5d], bl ; pop rbx ; ret
0x00000200003d0177 : add byte ptr [rax], 0 ; add byte ptr [rsi - 1], ah ; ret 0x9489
0x00000200005ad990 : add byte ptr [rax], 0 ; add cl, ch ; ret
0x00000200001411b5 : add byte ptr [rax], 0 ; add cl, ch ; ret 0xcc
0x00000200000673bf : add byte ptr [rax], 0 ; add dh, dh ; ret
0x000002000062d69d : add byte ptr [rax], 0 ; add dh, dh ; ret 0x7410
0x00000200004ba80d : add byte ptr [rax], 0 ; add dh, dh ; ret 0x7510
0x0000020000173506 : add byte ptr [rax], 0 ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000f73a2 : add byte ptr [rax], 0 ; bt r8d, eax ; jae 0x200000f73b5 ; ret
0x000002000047cd79 : add byte ptr [rax], 0 ; cmp edx, eax ; cmovb edx, eax ; mov eax, edx ; ret
0x00000200006ca963 : add byte ptr [rax], 0 ; inc dword ptr [rdx + 0x8060] ; ret
0x000002000046cf91 : add byte ptr [rax], 0 ; je 0x2000046cf9c ; ret
0x00000200006ca969 : add byte ptr [rax], 0 ; ret
0x0000020000008650 : add byte ptr [rax], 0x17 ; add byte ptr [rax], al ; ret
0x0000020000108f53 : add byte ptr [rax], 2 ; add byte ptr [rax], al ; ret
0x000002000023097e : add byte ptr [rax], 6 ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000074530f : add byte ptr [rax], ah ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200001abbbb : add byte ptr [rax], ah ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001ac4b1 : add byte ptr [rax], ah ; add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x00000200001813cb : add byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200007856e3 : add byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x00000200001d0d9c : add byte ptr [rax], ah ; add byte ptr [rbp - 0x75], al ; ret 0x2b48
0x00000200001d744a : add byte ptr [rax], ah ; add byte ptr [rcx + 0x3b], al ; ret
0x000002000018d769 : add byte ptr [rax], ah ; add byte ptr [rdi], cl ; ror dword ptr [r8 + 0x2b], 1 ; ret 0x47e9
0x00000200001885ee : add byte ptr [rax], ah ; add byte ptr [rdi], cl ; ror dword ptr [r8 + 0x2b], 1 ; ret 0x50e9
0x000002000018ce72 : add byte ptr [rax], ah ; add byte ptr [rdi], cl ; ror dword ptr [r8 + 0x2b], 1 ; ret 0xf9e9
0x0000020000564621 : add byte ptr [rax], ah ; add cl, ch ; ret 0xe684
0x0000020000453ad8 : add byte ptr [rax], ah ; add sil, sil ; ret
0x00000200000822f2 : add byte ptr [rax], ah ; jne 0x200000822fb ; ret
0x000002000044c9d9 : add byte ptr [rax], ah ; ret
0x000002000003a455 : add byte ptr [rax], al ; adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000073bfac : add byte ptr [rax], al ; adc byte ptr [rax - 0x7f], cl ; ret 0xe10
0x0000020000086169 : add byte ptr [rax], al ; adc byte ptr [rax], al ; jne 0x20000086176 ; ret
0x00000200000d3979 : add byte ptr [rax], al ; adc byte ptr [rax], al ; jne 0x200000d3986 ; ret
0x00000200003a2d2b : add byte ptr [rax], al ; adc byte ptr [rax], al ; ret
0x0000020000188741 : add byte ptr [rax], al ; adc byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x0000020000589a06 : add byte ptr [rax], al ; adc cl, byte ptr [rdi] ; ret 0x4389
0x0000020000217e2b : add byte ptr [rax], al ; add ah, al ; ret 0x187d
0x000002000010de5a : add byte ptr [rax], al ; add ah, bh ; ret
0x000002000014906d : add byte ptr [rax], al ; add ah, cl ; ret
0x0000020000640666 : add byte ptr [rax], al ; add al, 0 ; ret
0x000002000016b2a4 : add byte ptr [rax], al ; add al, 0x74 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200005b76af : add byte ptr [rax], al ; add al, 0x8b ; ret 0x1ba
0x0000020000788c15 : add byte ptr [rax], al ; add al, ah ; ret 0x4078
0x0000020000159553 : add byte ptr [rax], al ; add al, al ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x0000020000159522 : add byte ptr [rax], al ; add al, al ; and qword ptr [rcx + 0x18], rax ; ret
0x000002000002f6ff : add byte ptr [rax], al ; add al, al ; cmp eax, ecx ; ja 0x2000002f710 ; ret
0x00000200003be3cd : add byte ptr [rax], al ; add al, bl ; mov eax, 0x10000000 ; ret
0x0000020000788cb5 : add byte ptr [rax], al ; add al, bl ; ret
0x0000020000097361 : add byte ptr [rax], al ; add al, byte ptr [rbp - 0x75] ; ret
0x000002000060b9c4 : add byte ptr [rax], al ; add al, ch ; adc al, 0x63 ; ret 0x4cff
0x00000200004b84a4 : add byte ptr [rax], al ; add al, ch ; adc al, 0x9f ; sar bh, 0x8b ; ret
0x000002000014dae4 : add byte ptr [rax], al ; add al, ch ; adc al, 0xa ; add byte ptr [rax], al ; nop ; ret
0x00000200004b86a3 : add byte ptr [rax], al ; add al, ch ; adc eax, 0x8bffc09d ; ret
0x000002000051c4b7 : add byte ptr [rax], al ; add al, ch ; add dword ptr [rax], esi ; ret
0x00000200005c28b3 : add byte ptr [rax], al ; add al, ch ; add eax, 0x8bffaffb ; ret
0x000002000056bb4f : add byte ptr [rax], al ; add al, ch ; and eax, 0x8bffe6be ; ret
0x00000200003ae2b9 : add byte ptr [rax], al ; add al, ch ; call qword ptr [rcx]
0x0000020000566031 : add byte ptr [rax], al ; add al, ch ; call qword ptr [rsi]
0x00000200004b277d : add byte ptr [rax], al ; add al, ch ; cmp edi, ebp ; ret 0x48ff
0x00000200004b7920 : add byte ptr [rax], al ; add al, ch ; cwde ; stosb byte ptr [rdi], al ; sar bh, 0x8b ; ret
0x00000200005212df : add byte ptr [rax], al ; add al, ch ; fabs ; ret 0x8bff
0x000002000048e3c1 : add byte ptr [rax], al ; add al, ch ; imul eax ; ret 0x8aff
0x00000200003f90f0 : add byte ptr [rax], al ; add al, ch ; in al, dx ; insd dword ptr [rdi], dx ; ret
0x000002000061d574 : add byte ptr [rax], al ; add al, ch ; in al, dx ; ret
0x00000200006086ec : add byte ptr [rax], al ; add al, ch ; in al, dx ; xchg eax, ebp ; ret 0x48ff
0x000002000058af98 : add byte ptr [rax], al ; add al, ch ; insb byte ptr [rdi], dx ; ret
0x00000200004b6b77 : add byte ptr [rax], al ; add al, ch ; int1 ; push rdx ; ret
0x000002000048f6e5 : add byte ptr [rax], al ; add al, ch ; jae 0x2000048f727 ; ret
0x000002000060eb64 : add byte ptr [rax], al ; add al, ch ; je 0x2000060eba1 ; ret 0x48ff
0x0000020000433da9 : add byte ptr [rax], al ; add al, ch ; jg 0x20000433e10 ; ret 0x89ff
0x00000200004b8039 : add byte ptr [rax], al ; add al, ch ; jg 0x200004b7feb ; sar bh, 0x8b ; ret
0x00000200004b753b : add byte ptr [rax], al ; add al, ch ; jge 0x200004b74f8 ; sar bh, 0x8b ; ret
0x0000020000515e3c : add byte ptr [rax], al ; add al, ch ; jl 0x20000515dde ; ret
0x00000200005a017d : add byte ptr [rax], al ; add al, ch ; jmp 0x200005a014a
0x0000020000475d2d : add byte ptr [rax], al ; add al, ch ; jnp 0x20000475d2b ; ret 0x48ff
0x00000200004b7e3f : add byte ptr [rax], al ; add al, ch ; jns 0x200004b7df3 ; sar bh, 0x8b ; ret
0x000002000040115a : add byte ptr [rax], al ; add al, ch ; jp 0x20000401180 ; ret
0x000002000053cfeb : add byte ptr [rax], al ; add al, ch ; lea esi, dword ptr [rbx] ; sar bh, 0x8b ; ret
0x0000020000434826 : add byte ptr [rax], al ; add al, ch ; loop 0x20000434894 ; ret 0x48ff
0x00000200004b8004 : add byte ptr [rax], al ; add al, ch ; mov ah, 0xa3 ; sar bh, 0x8b ; ret
0x00000200004b7d08 : add byte ptr [rax], al ; add al, ch ; mov al, 0xa6 ; sar bh, 0x8b ; ret
0x00000200004b7a08 : add byte ptr [rax], al ; add al, ch ; mov al, 0xa9 ; sar bh, 0x8b ; ret
0x00000200004b8d05 : add byte ptr [rax], al ; add al, ch ; mov bl, 0x96 ; sar bh, 0x8b ; ret
0x00000200004b8e02 : add byte ptr [rax], al ; add al, ch ; mov dh, 0x95 ; sar bh, 0x8b ; ret
0x000002000014dd46 : add byte ptr [rax], al ; add al, ch ; mov dl, 7 ; add byte ptr [rax], al ; nop ; ret
0x000002000007cd4b : add byte ptr [rax], al ; add al, ch ; mov ebp, 0x8b001b42 ; ret
0x000002000014d8b9 : add byte ptr [rax], al ; add al, ch ; mov edi, 0x9000000b ; ret
0x00000200004b87fe : add byte ptr [rax], al ; add al, ch ; mov edx, 0x8bffc09b ; ret
0x0000020000512eed : add byte ptr [rax], al ; add al, ch ; mov edx, ebp ; ret 0xb9ff
0x00000200004b94fa : add byte ptr [rax], al ; add al, ch ; mov esi, 0x8bffc08e ; ret
0x0000020000494e00 : add byte ptr [rax], al ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; pop rcx ; ret 0x33ff
0x00000200004b8614 : add byte ptr [rax], al ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; sar bh, 0x8b ; ret
0x00000200004f2dd4 : add byte ptr [rax], al ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000020000608134 : add byte ptr [rax], al ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; wait ; ret 0x48ff
0x00000200004b7f54 : add byte ptr [rax], al ; add al, ch ; movsb byte ptr [rdi], byte ptr fs:[rsi] ; sar bh, 0x8b ; ret
0x0000020000511fb0 : add byte ptr [rax], al ; add al, ch ; or ch, dl ; ret
0x00000200004905af : add byte ptr [rax], al ; add al, ch ; or dword ptr [rsi], ebx ; ret
0x000002000014c56b : add byte ptr [rax], al ; add al, ch ; or eax, 0x9000001f ; ret
0x0000020000499ac1 : add byte ptr [rax], al ; add al, ch ; out 0x2c, eax ; ret 0x89ff
0x00000200004ec68a : add byte ptr [rax], al ; add al, ch ; out 0xa9, al ; ret 0x48ff
0x0000020000105902 : add byte ptr [rax], al ; add al, ch ; out dx, al ; ret 0xfff4
0x0000020000492f99 : add byte ptr [rax], al ; add al, ch ; out dx, eax ; push rax ; ret 0xe9ff
0x00000200004b914a : add byte ptr [rax], al ; add al, ch ; outsb dx, byte ptr [rsi] ; xchg eax, edx ; sar bh, 0x8b ; ret
0x00000200004b8a60 : add byte ptr [rax], al ; add al, ch ; pop rax ; cdq ; sar bh, 0x8b ; ret
0x00000200005b9330 : add byte ptr [rax], al ; add al, ch ; pop rax ; in eax, dx ; scasd eax, dword ptr [rdi] ; push rsi ; ret
0x00000200004b2c0e : add byte ptr [rax], al ; add al, ch ; pop rdx ; xchg eax, edx ; ret
0x000002000052a472 : add byte ptr [rax], al ; add al, ch ; push rax ; ret 0x48ff
0x00000200004c1ae3 : add byte ptr [rax], al ; add al, ch ; push rbp ; ret 0x48ff
0x000002000051b6f1 : add byte ptr [rax], al ; add al, ch ; push rcx ; ret 0x8bff
0x00000200004b8762 : add byte ptr [rax], al ; add al, ch ; push rsi ; pushfq ; sar bh, 0x8b ; ret
0x00000200001aa182 : add byte ptr [rax], al ; add al, ch ; push rsi ; ret
0x00000200004b8b64 : add byte ptr [rax], al ; add al, ch ; push rsp ; cwde ; sar bh, 0x8b ; ret
0x0000020000497267 : add byte ptr [rax], al ; add al, ch ; rcr dword ptr [rcx], 1 ; ret 0xf7ff
0x000002000014c4a7 : add byte ptr [rax], al ; add al, ch ; rcr dword ptr [rdi], 1 ; add byte ptr [rax], al ; nop ; ret
0x000002000005f775 : add byte ptr [rax], al ; add al, ch ; ret
0x00000200006a8e2a : add byte ptr [rax], al ; add al, ch ; ret 0
0x00000200000176fe : add byte ptr [rax], al ; add al, ch ; ret 0x3b7e
0x00000200000380e6 : add byte ptr [rax], al ; add al, ch ; ret 0x3ce4
0x000002000065f426 : add byte ptr [rax], al ; add al, ch ; ret 0xa2bb
0x00000200006b6916 : add byte ptr [rax], al ; add al, ch ; ret 0xa401
0x000002000066d356 : add byte ptr [rax], al ; add al, ch ; ret 0xacad
0x00000200006b3b0a : add byte ptr [rax], al ; add al, ch ; ret 0xb20a
0x00000200005feb12 : add byte ptr [rax], al ; add al, ch ; ret 0xb328
0x0000020000512db6 : add byte ptr [rax], al ; add al, ch ; ret 0xc2d6
0x00000200004bedd6 : add byte ptr [rax], al ; add al, ch ; ret 0xc758
0x00000200004866b6 : add byte ptr [rax], al ; add al, ch ; ret 0xcb9d
0x00000200001edd66 : add byte ptr [rax], al ; add al, ch ; ret 0xe945
0x0000020000162e96 : add byte ptr [rax], al ; add al, ch ; ret 0xecf9
0x000002000013cee6 : add byte ptr [rax], al ; add al, ch ; ret 0xf2b4
0x0000020000179546 : add byte ptr [rax], al ; add al, ch ; ret 0xf370
0x00000200002087f6 : add byte ptr [rax], al ; add al, ch ; ret 0xf46c
0x00000200000b3b4e : add byte ptr [rax], al ; add al, ch ; ret 0xf7a0
0x00000200000ccec6 : add byte ptr [rax], al ; add al, ch ; ret 0xff37
0x0000020000673253 : add byte ptr [rax], al ; add al, ch ; ret 0xffad
0x000002000051fee7 : add byte ptr [rax], al ; add al, ch ; sal ebp, 1 ; ret 0x48ff
0x00000200000b9c0a : add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr [rdi] ; adc eax, dword ptr [rdx] ; add bh, bh ; ret
0x00000200004b747a : add byte ptr [rax], al ; add al, ch ; scasd eax, dword ptr [rdi] ; sar bh, 0x8b ; ret
0x00000200001ae5dd : add byte ptr [rax], al ; add al, ch ; sti ; ret 0xfff9
0x000002000052ce8f : add byte ptr [rax], al ; add al, ch ; sub dword ptr [rsi], esp ; ret 0x48ff
0x00000200004b788b : add byte ptr [rax], al ; add al, ch ; sub eax, 0x8bffc0ab ; ret
0x000002000014d3d0 : add byte ptr [rax], al ; add al, ch ; test al, 0x10 ; add byte ptr [rax], al ; nop ; ret
0x00000200004b9210 : add byte ptr [rax], al ; add al, ch ; test al, 0x91 ; sar bh, 0x8b ; ret
0x00000200004b9010 : add byte ptr [rax], al ; add al, ch ; test al, 0x93 ; sar bh, 0x8b ; ret
0x00000200005c270f : add byte ptr [rax], al ; add al, ch ; test eax, 0x8bffaffc ; ret
0x00000200004b7622 : add byte ptr [rax], al ; add al, ch ; xchg eax, esi ; lodsd eax, dword ptr [rsi] ; sar bh, 0x8b ; ret
0x00000200004b8d70 : add byte ptr [rax], al ; add al, ch ; xchg rax, rsi ; sar bh, 0x8b ; ret
0x00000200004b8f70 : add byte ptr [rax], al ; add al, ch ; xchg rax, rsp ; sar bh, 0x8b ; ret
0x0000020000492e05 : add byte ptr [rax], al ; add al, ch ; xlatb ; pop rsi ; ret 0x48ff
0x000002000069fdcd : add byte ptr [rax], al ; add al, cl ; ret 0x405f
0x00000200003a2925 : add byte ptr [rax], al ; add al, dh ; inc dword ptr [r8] ; ret
0x00000200006b0706 : add byte ptr [rax], al ; add al, dh ; xadd qword ptr [rcx], rax ; ret
0x00000200000ad2a2 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0xb] ; ret
0x00000200000aa286 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax - 0x75] ; ret
0x000002000017f6dc : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax - 0x75] ; ret 0x2348
0x00000200000ad205 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0xb] ; ret
0x00000200000ad3c1 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0xb] ; ret 0x91e9
0x00000200000ad251 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0xb] ; ret 0xba49
0x00000200000ad2b4 : add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0xb] ; ret 0xe2e9
0x000002000044f423 : add byte ptr [rax], al ; add bh, bh ; jmp 0x2000044f3f1
0x0000020000149216 : add byte ptr [rax], al ; add bh, bh ; loop 0x2000014927b ; ret
0x0000020000786a5b : add byte ptr [rax], al ; add bh, bh ; or edx, 0xffffffff ; call qword ptr [rax]
0x0000020000020f13 : add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000630b9f : add byte ptr [rax], al ; add bh, bh ; ret 0x163b
0x000002000018f0f1 : add byte ptr [rax], al ; add bh, bh ; ret 0x5189
0x00000200004da5f9 : add byte ptr [rax], al ; add bh, bh ; ret 0x8349
0x00000200001e7adc : add byte ptr [rax], al ; add bh, bh ; ret 0x8948
0x0000020000164beb : add byte ptr [rax], al ; add bh, bh ; ret 0x9489
0x00000200005b4f87 : add byte ptr [rax], al ; add bh, bh ; ret 0xb841
0x0000020000649083 : add byte ptr [rax], al ; add bh, bh ; ret 0xc3e8
0x000002000064897b : add byte ptr [rax], al ; add bh, bh ; ret 0xcbe8
0x00000200003f89df : add byte ptr [rax], al ; add bh, bh ; ret 0xdbeb
0x0000020000678722 : add byte ptr [rax], al ; add bh, bh ; ret 0xfa83
0x00000200004ace4e : add byte ptr [rax], al ; add bh, dh ; ret 0
0x000002000049004b : add byte ptr [rax], al ; add bh, dh ; ret 0x3fc
0x0000020000423abc : add byte ptr [rax], al ; add bh, dh ; ret 0x402
0x000002000007ed12 : add byte ptr [rax], al ; add bh, dh ; ret 0x7000
0x00000200005b287f : add byte ptr [rax], al ; add bh, dh ; ret 0xfffc
0x00000200006238fd : add byte ptr [rax], al ; add bh, dh ; ret 0xfffe
0x0000020000134d26 : add byte ptr [rax], al ; add bh, dh ; ret 0xffff
0x00000200005fd1b5 : add byte ptr [rax], al ; add bl, 0xb8 ; js 0x200005fd1c6 ; add al, al ; ret
0x0000020000044d28 : add byte ptr [rax], al ; add bl, al ; mov al, cl ; ret
0x00000200004c80b8 : add byte ptr [rax], al ; add bl, al ; mov eax, 0xc0000001 ; ret
0x00000200006c0e3c : add byte ptr [rax], al ; add bl, al ; mov eax, 0xc0000002 ; ret
0x0000020000042397 : add byte ptr [rax], al ; add bl, al ; mov eax, 1 ; ret
0x0000020000030a7f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000020000030a85 : add byte ptr [rax], al ; add bl, al ; mov eax, 3 ; ret
0x0000020000463323 : add byte ptr [rax], al ; add bl, al ; mov eax, 4 ; ret
0x000002000004239d : add byte ptr [rax], al ; add bl, al ; mov eax, 7 ; ret
0x0000020000046bca : add byte ptr [rax], al ; add bl, al ; mov eax, edx ; ret
0x000002000002bd2f : add byte ptr [rax], al ; add bl, al ; or eax, 0xffffffff ; ret
0x0000020000218ab1 : add byte ptr [rax], al ; add bl, al ; sbb eax, eax ; ret
0x00000200000156ee : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x000002000004077a : add byte ptr [rax], al ; add bl, bh ; ret
0x0000020000143f9d : add byte ptr [rax], al ; add bl, bl ; loop 0x20000143f46 ; fnstcw word ptr [rcx] ; ret
0x00000200001ff177 : add byte ptr [rax], al ; add bl, ch ; add al, 0x8b ; ret
0x0000020000675f6a : add byte ptr [rax], al ; add bl, ch ; add eax, 0x8bf38a40 ; ret
0x00000200006971df : add byte ptr [rax], al ; add bl, ch ; add eax, dword ptr [rcx - 0x75] ; ret 0x4489
0x0000020000697190 : add byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x0000020000463cb9 : add byte ptr [rax], al ; add bl, ch ; fisttp dword ptr [rax - 0x7d] ; ret 0x4808
0x00000200001c4cf4 : add byte ptr [rax], al ; add bl, ch ; fisttp word ptr [rax - 0x7d] ; ret
0x0000020000134db0 : add byte ptr [rax], al ; add bl, ch ; mov cl, 0xf7 ; ret 0xffff
0x0000020000215185 : add byte ptr [rax], al ; add bl, ch ; mov word ptr [rax - 0x75], cs ; ret 0xc148
0x000002000022fd0f : add byte ptr [rax], al ; add bl, ch ; or byte ptr [rbx], cl ; ret 0x8789
0x00000200001fca82 : add byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax - 0x75] ; ret
0x000002000004598f : add byte ptr [rax], al ; add bl, ch ; ret
0x0000020000519682 : add byte ptr [rax], al ; add bl, ch ; ret 0x48cc
0x000002000003f7d7 : add byte ptr [rax], al ; add bl, ch ; ret 0x8b48
0x0000020000008cc9 : add byte ptr [rax], al ; add bl, ch ; ret 0x9066
0x000002000046641f : add byte ptr [rax], al ; add bl, ch ; ret 0xc033
0x000002000041f951 : add byte ptr [rax], al ; add bl, ch ; ret 0xcccc
0x00000200003b00e9 : add byte ptr [rax], al ; add bl, ch ; sub al, 0x8b ; ret
0x00000200000825fc : add byte ptr [rax], al ; add bl, ch ; xchg dword ptr [rax - 0x7f], ecx ; ret
0x00000200005ed4c6 : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rcx + 0x20], mm0 ; ret
0x000002000007609f : add byte ptr [rax], al ; add bl, dl ; loop 0x200000760a1 ; ret 0xf15
0x00000200001b9462 : add byte ptr [rax], al ; add bl, dl ; loop 0x200001b9464 ; ret 0x7432
0x000002000046cf8e : add byte ptr [rax], al ; add byte ptr [rax + 0x1740000], al ; ret
0x0000020000106052 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x1c7
0x000002000017fa5c : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x348
0x00000200001d239b : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x000002000009c933 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x3b49
0x00000200001e08ae : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8948
0x00000200000a2519 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x894c
0x0000020000745725 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8b41
0x00000200001d4f00 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8b49
0x00000200001cb7c2 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x00000200000766a9 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0xb948
0x00000200000aa146 : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0xba48
0x00000200000d88fe : add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0xc148
0x00000200006bbdb9 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; fimul word ptr [rax - 0x7d] ; ret
0x0000020000005621 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; fmul dword ptr [rax - 0x75] ; ret
0x000002000009aae2 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x0000020000582dcd : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x34c
0x00000200004922f1 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x00000200001b650b : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x8b44
0x00000200000ab034 : add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x8b48
0x00000200000aa756 : add byte ptr [rax], al ; add byte ptr [rax + 0x31], cl ; add cl, byte ptr [rbp + 0x3b] ; ret 0x840f
0x0000020000048bf2 : add byte ptr [rax], al ; add byte ptr [rax + 0x33], al ; ret 0xd233
0x000002000006516a : add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret
0x0000020000009bb1 : add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret 0x2348
0x00000200000413f0 : add byte ptr [rax], al ; add byte ptr [rax + 0x3490000], al ; ret 0xb849
0x00000200000ba231 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; add byte ptr [rbp + rax - 0x18], dh ; ret 0x180
0x00000200000c7f17 : add byte ptr [rax], al ; add byte ptr [rax + 0x3a], al ; stosd dword ptr [rdi], eax ; ret
0x00000200005d2d65 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; enter -0x298d, -0x17 ; ret
0x00000200001814c1 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; enter 0xf44, 0x46 ; ret 0x8b41
0x0000020000015517 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200003e35ad : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x1a76
0x00000200001fa9e1 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x3474
0x00000200000790a3 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x476
0x000002000061bc04 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x772
0x00000200004084e4 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x000002000062012d : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x000002000067a880 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200000ab48e : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x860f
0x0000020000493780 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x0000020000005573 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x8d48
0x00000200006244f1 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x977
0x00000200000e0fd4 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xb841
0x00000200001f0580 : add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xf41
0x00000200001a3f7a : add byte ptr [rax], al ; add byte ptr [rax + 0x41202444], cl ; call rax
0x00000200006c5ee0 : add byte ptr [rax], al ; add byte ptr [rax + 0x48], al ; add esp, 0x28 ; ret
0x000002000045f5a7 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x00000200004f885b : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax - 0x7d], 1 ; ret 0xe802
0x00000200000a1f9c : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret
0x00000200003a4d7c : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8548
0x0000020000052b0e : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x000002000008cc3b : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x00000200003a1e3d : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8d48
0x000002000051234e : add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0xd233
0x0000020000613c54 : add byte ptr [rax], al ; add byte ptr [rax + 0xf542444], cl ; xchg eax, ebp ; ret
0x000002000014690d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000002000064c453 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x45c7
0x00000200000df32d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x000002000005c8f5 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200003cead6 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x100f
0x000002000001116b : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x1bf
0x00000200000f2e48 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x349
0x0000020000055ff7 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000009cf4e : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b49
0x000002000021eefe : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8948
0x0000020000017c8e : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8b49
0x00000200000de04e : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0xb948
0x00000200005fc2c4 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ror dword ptr [rbp + rcx*4 + 4], 1 ; ret 0x8545
0x0000020000201de9 : add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; sar byte ptr [rbx], 0xb4 ; ret
0x00000200000e450f : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x743c6bf1], al ; ret
0x0000020000439aa1 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x74bad98b], al ; ret 0xd233
0x000002000007c9ea : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0x8becb8b], al ; ret 0
0x0000020000202640 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0xbef78b], al ; ret 0x5e9
0x0000020000202816 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 - 0xbef78b], al ; ret 0xdbe9
0x00000200000570b8 : add byte ptr [rax], al ; add byte ptr [rax + rcx*4 - 0x55], al ; ret 0
0x0000020000010844 : add byte ptr [rax], al ; add byte ptr [rax - 0x1600000a], al ; ret
0x00000200003e5da2 : add byte ptr [rax], al ; add byte ptr [rax - 0x247af0ff], ch ; ret
0x000002000003f461 : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; loopne 0x2000003f4ba ; mov dword ptr [rax], eax ; ret
0x00000200001653cd : add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x000002000073ed0b : add byte ptr [rax], al ; add byte ptr [rax - 0x2f], cl ; call 0x2004935f065
0x00000200001942a7 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000002000000f401 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xfff8
0x00000200000a1a60 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc22d627f
0x00000200000aeae3 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc22e3302
0x00000200000dae65 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc230f684
0x00000200000db604 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc230fe23
0x00000200000f5b9f : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc232a3be
0x00000200000f86ec : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc232d00b
0x0000020000187f39 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc23bc758
0x00000200001d067d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc2404e99
0x00000200000a4aaf : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc32d93ce
0x000002000007e2de : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200004acc6d : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rcx]
0x000002000005f448 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000431317 : add byte ptr [rax], al ; add byte ptr [rax - 0x3ffffddb], bh ; ret
0x0000020000413142 : add byte ptr [rax], al ; add byte ptr [rax - 0x3fffff19], bh ; ret
0x00000200001cb94c : add byte ptr [rax], al ; add byte ptr [rax - 0x3fffff85], bh ; ret
0x00000200005fd124 : add byte ptr [rax], al ; add byte ptr [rax - 0x3fffffce], bh ; ret
0x00000200005219ee : add byte ptr [rax], al ; add byte ptr [rax - 0x3ffffff3], bh ; ret
0x000002000001c1ee : add byte ptr [rax], al ; add byte ptr [rax - 0x3ffffffe], bh ; ret
0x00000200001063ad : add byte ptr [rax], al ; add byte ptr [rax - 0x3fffffff], bh ; ret
0x00000200005d2af1 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; adc r8b, r13b ; ret
0x00000200005d0b12 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x3b], ecx ; ret 0x830f
0x00000200001fa075 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [r8 + 3] ; ret
0x0000020000143f7d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; and al, 8 ; ret
0x00000200000a137d : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; dec qword ptr [rax - 0x75] ; ret 0x49f0
0x00000200005c3eca : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or byte ptr [r11], bpl ; ret 0x8b44
0x00000200006bd713 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or byte ptr [rdi], r9b ; xchg eax, esp ; ret
0x00000200004ebec1 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; ret
0x000002000000260d : add byte ptr [rax], al ; add byte ptr [rax - 0x74b30001], al ; ret
0x000002000020eb83 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax - 0x7d] ; ret
0x00000200000082b6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add al, 8 ; ret
0x000002000057df31 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp dh, dh ; ret
0x000002000051cde4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; enter -0x2e18, 0x26 ; ret
0x00000200003de93e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; enter -0x4018, -0x36 ; ret
0x000002000052e9b3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; enter 0x2e8, 0xb ; ret 0x48ff
0x000002000051ae6a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; enter 0x4be8, 0x46 ; ret
0x00000200006628f3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fld1 ; ret 0xaecb
0x000002000052d9a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret
0x00000200001ceaec : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; int 0xe8
0x00000200004c6d44 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000052f7c
0x0000020000475a44 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x2000009a489
0x0000020000497a6b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000ba7b5
0x0000020000507197 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200001356ad
0x000002000051b332 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000140489
0x00000200001bf300 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200006ab608
0x00000200006b61d8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200006c2484
0x000002000010168b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp 0x1ffc158d927
0x00000200003c5468 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + 0x2b], r9b ; ret
0x00000200001490fd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 + rsi*8], spl ; ret
0x000002000001c8af : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200000d7bc0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [r9 + 0xb], cl ; ret
0x0000020000057a39 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200006822a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 1], cl ; ret
0x000002000007ae22 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or byte ptr [rbp - 0x75], al ; ret 0xc149
0x000002000040f4c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or eax, ebp ; out dx, eax ; call rbx
0x000002000007b790 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; or r14b, sil ; ret 0xf1f
0x0000020000427b95 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rbx ; and byte ptr [rax - 0x7f], cl ; ret
0x0000020000015377 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200005a7d58 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbp ; cmp byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000000ff4d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rbx ; sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000002b93 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000231ad6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x1fe9
0x000002000008a66d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2348
0x0000020000009b85 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x234c
0x00000200001d4b87 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x25
0x00000200004ab9d3 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000180264 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200000ada1d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x348
0x0000020000015357 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x3844
0x00000200005dcaaf : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x4466
0x000002000062bdcb : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x4cf0
0x00000200000cee15 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x7c80
0x000002000000d318 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x000002000076cf32 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b45
0x00000200000fa743 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000021c5b4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x0000020000121f0f : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x0000020000779d9d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8d44
0x000002000002663d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8d4a
0x00000200000589a2 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xb949
0x000002000000ffcd : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200005a2c1a : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc933
0x00000200001bc3d0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xccc3
0x0000020000184156 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd148
0x000002000003af81 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200006bc209 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200000684c8
0x00000200004558ba : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200000c1b38
0x00000200004c41ba : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200000e9469
0x00000200005c04b8 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200001eca31
0x000002000052c1f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; retf ; call rax
0x00000200000fd95c : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; rol byte ptr [rcx - 0x7c], 1 ; ret 0x840f
0x00000200001f9a9b : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x7d], cl ; ret
0x000002000058a611 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 1], cl ; ret 0x3966
0x00000200003d4d69 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sal esi, cl ; ret
0x000002000060ab43 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; salc ; call 0x20000231ce9
0x000002000064c8f2 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb al, ch ; ret
0x00000200000fb650 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 + 0x2b], cl ; ret 0x8348
0x00000200003ecbae : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb ebp, eax ; xchg eax, edi ; ret
0x00000200000d62a2 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; shr eax, cl ; jmp qword ptr [rsi]
0x0000020000475a81 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xlatb ; call 0x2000009a2d9
0x0000020000523b20 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xlatb ; call 0x2000014f189
0x00000200005d00f6 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r14 ; call rax
0x00000200005d014e : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, r15 ; call rax
0x0000020000126e8f : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; adc dword ptr [rax - 0x7d], ecx ; ret 0x4818
0x00000200003f5e48 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add dword ptr [rax - 0x75], ecx ; ret
0x000002000046908a : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r11
0x00000200001cec3b : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab80000], al ; ret
0x0000020000459a89 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ae8fb73], al ; ret 0x840f
0x00000200005068c6 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ae9fb73], al ; ret 0x574
0x000002000057fd9e : add byte ptr [rax], al ; add byte ptr [rax - 0x7aecfb73], al ; ret 0xc75
0x0000020000735ff9 : add byte ptr [rax], al ; add byte ptr [rax - 0x7aeefb73], al ; ret 0xc75
0x0000020000479186 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], al ; ret 0x1475
0x0000020000124390 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001243a2 ; call rcx
0x00000200001b29fc : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001b2a0e ; call rcx
0x00000200001b2a88 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001b2a9c ; jmp rcx
0x00000200001b2af8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001b2b0a ; call rcx
0x000002000075e907 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rsi - 0x75] ; ret
0x000002000006f47b : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000020000492810 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000020000409b70 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 0x25], 0x8b ; ret 0x8948
0x00000200003fd261 : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 1], cl ; ret
0x00000200001b2aac : add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rax + 0x48], cl ; jmp rdx
0x00000200003c3e8c : add byte ptr [rax], al ; add byte ptr [rax - 0x7cb7c68c], al ; ret 0x4428
0x00000200001fa085 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; jmp 0x200001fa0a4
0x000002000000e48a : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001d40b8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x2b05
0x0000020000690168 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4102
0x000002000077ba60 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4104
0x0000020000618abc : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x0000020000639210 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x410c
0x000002000041960f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4120
0x00000200006398e3 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4125
0x0000020000620821 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4131
0x000002000022b078 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4408
0x00000200004b85ba : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4410
0x0000020000054c81 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4470
0x000002000022f373 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x00000200000f9a08 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000003dfd2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000200003cfb38 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000007b225 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000003de4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x000002000003de78 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000003de95 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x000002000003deb2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000002000003ded2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x000002000003def2 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x000002000010f9ea : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x000002000066eb64 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000020000020b4f : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x00000200004ea6ba : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x0000020000125796 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x0000020000454b15 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x00000200002215b7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4cf8
0x00000200001c1125 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6608
0x00000200004cec78 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe850
0x00000200000875ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf30
0x0000020000232265 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x000002000002d690 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; jmp rax
0x000002000008043c : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200000920a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x110
0x000002000005fab7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000002000003dabe : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x2e00
0x0000020000406119 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x450
0x00000200000378f6 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xcc
0x000002000022f84a : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0xfff
0x0000020000075cec : add byte ptr [rax], al ; add byte ptr [rax - 0x907f4b4], al ; ret
0x0000020000058cdc : add byte ptr [rax], al ; add byte ptr [rax - 0x9fffffb], al ; ret
0x00000200001dc9d8 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; adc sil, sil ; ret
0x00000200001f5ac9 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x00000200001d614a : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x3b48
0x000002000068c54b : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x4566
0x000002000057aef0 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x4d8b
0x00000200003b7276 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xd5eb
0x0000020000135209 : add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff49
0x000002000005a6be : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x00000200003c5ea7 : add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret 0xfff
0x0000020000052b0b : add byte ptr [rax], al ; add byte ptr [rax], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8b48
0x000002000008cc38 : add byte ptr [rax], al ; add byte ptr [rax], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x000002000046cf8f : add byte ptr [rax], al ; add byte ptr [rax], 0 ; je 0x2000046cf9e ; ret
0x00000200001813c9 : add byte ptr [rax], al ; add byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000056461f : add byte ptr [rax], al ; add byte ptr [rax], ah ; add cl, ch ; ret 0xe684
0x000002000044c9d7 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x0000020000086167 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; jne 0x20000086178 ; ret
0x00000200000d3977 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc byte ptr [rax], al ; jne 0x200000d3988 ; ret
0x000002000014906b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, cl ; ret
0x0000020000159551 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, al ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000009735f : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rbp - 0x75] ; ret
0x0000020000126dc3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200000ad2a0 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax + 0xb] ; ret
0x00000200000aa284 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax - 0x75] ; ret
0x000002000017f6da : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rax - 0x75] ; ret 0x2348
0x00000200000ad203 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0xb] ; ret
0x00000200000ad3bf : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0xb] ; ret 0x91e9
0x00000200000ad24f : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0xb] ; ret 0xba49
0x00000200000ad2b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; dec dword ptr [rcx + 0xb] ; ret 0xe2e9
0x000002000006292b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000014690b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000200000de04c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0xb948
0x000002000002663b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8d4a
0x0000020000149a8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000009193b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x0000020000490fa7 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000009735d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, byte ptr [rbp - 0x75] ; ret
0x0000020000490fa5 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200006ad468 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000020000790d2c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7905
0x0000020000791228 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7916
0x000002000001d341 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 1
0x0000020000093b7e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7b] ; ret 0x3875
0x00000200000a7605 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8948
0x0000020000082986 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsi
0x00000200006ad46a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000020000790d2e : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7905
0x000002000079122a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7916
0x000002000001d343 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 1
0x0000020000230cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; sar bh, 0xc0 ; ret
0x000002000008b93f : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4865
0x000002000062006c : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], bl ; add byte ptr [rax - 1], cl ; ret 0xc148
0x00000200000815a8 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; add byte ptr [rax + 0xb], cl ; ret
0x00000200000a9b9d : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; add byte ptr [rcx + 0xb], cl ; ret
0x0000020000093b80 : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7b] ; ret 0x3875
0x000002000049a16b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000a7607 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8948
0x000002000041ee44 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; ret
0x00000200001157c6 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000009ec83 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200005589bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001e2f2f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000a277c : add byte ptr [rax], al ; add byte ptr [rax], al ; and byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret
0x0000020000082988 : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsi
0x0000020000143f9c : add byte ptr [rax], al ; add byte ptr [rax], al ; fnclex ; wait ; fnstcw word ptr [rcx] ; ret
0x000002000017d63f : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x2000017d631 ; mov rax, rcx ; ret
0x000002000013febc : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000020000143f7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rsp + 8] ; ret
0x00000200003a2924 : add byte ptr [rax], al ; add byte ptr [rax], al ; lock inc dword ptr [r8] ; ret
0x000002000014aab1 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000020000148b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x00000200000de6b2 : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0xb948
0x0000020000075ceb : add byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rbx + rcx - 8], 0xf6 ; ret
0x000002000001d344 : add byte ptr [rax], al ; add byte ptr [rax], al ; or eax, edx ; add dword ptr [rax], eax ; ret 1
0x000002000014980e : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000109a3b : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200006ad46c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000020000790d30 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7905
0x000002000079122c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x7916
0x00000200000503cc : add byte ptr [rax], al ; add byte ptr [rax], al ; seta al ; ret
0x000002000000bd3d : add byte ptr [rax], al ; add byte ptr [rax], al ; setne al ; ret
0x00000200000815a9 : add byte ptr [rax], al ; add byte ptr [rax], al ; str word ptr [rax + 0xb] ; ret
0x00000200000a9b9e : add byte ptr [rax], al ; add byte ptr [rax], al ; str word ptr [rcx + 0xb] ; ret
0x00000200003cb932 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000230cbc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; inc eax ; ret
0x000002000054614a : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000020ca65 : add byte ptr [rax], al ; add byte ptr [rax], bh ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8a41
0x000002000020ca35 : add byte ptr [rax], al ; add byte ptr [rax], bh ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xb60f
0x0000020000154ddf : add byte ptr [rax], al ; add byte ptr [rax], bl ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000788c3d : add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x0000020000166e0e : add byte ptr [rax], al ; add byte ptr [rax], cl ; inc rdx ; jmp 0x20000166db9
0x00000200003be3bd : add byte ptr [rax], al ; add byte ptr [rax], cl ; ret
0x00000200003cb8b5 : add byte ptr [rax], al ; add byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006a07a5 : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x405f
0x0000020000788b9d : add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x4078
0x0000020000086168 : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rbp + 1], dh ; ret
0x00000200003be3d2 : add byte ptr [rax], al ; add byte ptr [rax], dl ; ret
0x00000200006469f0 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], al ; ret
0x000002000044d07d : add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], cl ; ret 0x82eb
0x000002000014a9a9 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], cl ; ret 0x8b4d
0x00000200005c493d : add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], cl ; ret 0xc149
0x000002000075ef3f : add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], cl ; ret 0xde75
0x000002000005d0a7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], dh ; ret
0x0000020000119104 : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; fild dword ptr [rcx - 0x75] ; ret
0x00000200004424df : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; rol byte ptr [rcx - 0x75], cl ; ret
0x000002000063c97c : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; rol byte ptr [rcx - 0x76], cl ; ret
0x000002000010b309 : add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call r9
0x00000200001bf9ed : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret
0x00000200001d739d : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret 0x5175
0x00000200004c35ad : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret 0x840f
0x0000020000096a0f : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], cl ; ret
0x00000200000a9ca1 : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], cl ; ret 0x840f
0x00000200000740ac : add byte ptr [rax], al ; add byte ptr [rbp + 0x4d], dh ; xor al, al ; ret
0x00000200001d75dd : add byte ptr [rax], al ; add byte ptr [rbp + 0x58e8b54a], cl ; ret
0x00000200005770a7 : add byte ptr [rax], al ; add byte ptr [rbp + 0x68890fc0], al ; ret 0xffe7
0x00000200000db741 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], al ; fiadd dword ptr [r9 - 0x75] ; ret
0x00000200000e267e : add byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x0000020000617f3f : add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; in eax, -0x75 ; ret 0x8941
0x00000200001e636f : add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; ret 0x8348
0x000002000022392b : add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; ret 0xbf49
0x00000200005e0c1e : add byte ptr [rax], al ; add byte ptr [rbp + 3], cl ; ret 0xd285
0x00000200004a3417 : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; call 0x200000d2308
0x000002000014e8f4 : add byte ptr [rax], al ; add byte ptr [rbp + rax - 0x18], dh ; ret 0xff54
0x000002000016921f : add byte ptr [rax], al ; add byte ptr [rbp + rbx - 0x75], dh ; ret 0xe8c1
0x00000200004a054d : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x41], al ; dec dword ptr [rax - 0x7d] ; ret 0xf10
0x00000200006baeb2 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x42], al ; call 0x2000020711d
0x000002000040c153 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x40 ; call r10
0x0000020000065fef : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4a], al ; ret 0x8d48
0x000002000067adf3 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0xd], cl ; ret
0x00000200007577be : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0xd], cl ; test al, 0x7d ; ret 0xc7ff
0x000002000075d1f6 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; adc al, 0x21 ; ret 0x48ff
0x000002000016fcef : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret
0x000002000056a6fc : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x18f0
0x00000200001d764c : add byte ptr [rax], al ; add byte ptr [rbp - 0x16174bb6], cl ; ret 0xfff6
0x00000200001242bc : add byte ptr [rax], al ; add byte ptr [rbp - 0x3d], bl ; mov rcx, rdx ; call r9
0x000002000062a9f6 : add byte ptr [rax], al ; add byte ptr [rbp - 0x4f], dh ; inc rdx ; jmp 0x2000062aa37
0x000002000046896b : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; clc ; call rsi
0x00000200004d39d3 : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; cli ; call rsi
0x000002000069143b : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; cmc ; call rsi
0x0000020000692af2 : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; stc ; call rdi
0x0000020000148e5f : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], cl ; or al, 0x91 ; jmp r9
0x000002000064864a : add byte ptr [rax], al ; add byte ptr [rbp - 0x73], cl ; pop rcx ; dec byte ptr [rax + 0x63] ; ret 0x8d4e
0x000002000002ad82 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74bb00bd], cl ; ret 0x4404
0x00000200004c1066 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74bbfbb0], cl ; ret 0x8b48
0x000002000047e8f9 : add byte ptr [rax], al ; add byte ptr [rbp - 0x74e98a40], al ; ret
0x000002000005c158 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000064298f : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8949
0x0000020000198117 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x894c
0x00000200000ab2db : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b44
0x00000200004ac6f8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8d48
0x00000200000cfa98 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0xf44
0x00000200006c5552 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; loopne 0x200006c54eb ; ret
0x00000200000dbcb1 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; push rsi ; adc byte ptr [rcx - 0x75], cl ; ret 0x8948
0x000002000010c99f : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000156125 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x10e8
0x0000020000059eea : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x3b4d
0x000002000016554f : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x44ba
0x000002000039f296 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x44c7
0x00000200001dbd8a : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x5ba
0x000002000010a103 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8348
0x0000020000133655 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200000f2ce6 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x894c
0x000002000010a696 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b44
0x0000020000076bfd : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200003ce10d : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000087116 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b4c
0x00000200003ce2b9 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xace8
0x0000020000109fa5 : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xe0e8
0x00000200000803bc : add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; sbb al, byte ptr [rcx - 0xa] ; ret
0x00000200001e2306 : add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret
0x000002000069d11d : add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret 0xf48
0x0000020000625fa0 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; div byte ptr [rsp + rdi - 0xa] ; ret
0x000002000000ab01 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbx + rdi - 0x75], cl ; ret 0x8b41
0x000002000011f113 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7c], al ; in al, 0x74 ; sub dh, dh ; ret 0xf03
0x000002000055f9a8 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7c], al ; push qword ptr [rbp + rax - 0x18] ; ret
0x00000200000409d7 : add byte ptr [rax], al ; add byte ptr [rbp - 0x7c], al ; ret 0x574
0x00000200000b09ef : add byte ptr [rax], al ; add byte ptr [rbp - 0x7c], al ; test byte ptr [rax - 0x78], 0xb3 ; ret
0x000002000016c7ca : add byte ptr [rax], al ; add byte ptr [rbp - 0x9be00b2], cl ; ret
0x000002000074a92b : add byte ptr [rax], al ; add byte ptr [rbp - 0xc08740], al ; ret
0x00000200004ef648 : add byte ptr [rax], al ; add byte ptr [rbp - 0xed8b40], al ; ret
0x0000020000489d1b : add byte ptr [rax], al ; add byte ptr [rbp - 0xf68740], al ; ret
0x000002000012028f : add byte ptr [rax], al ; add byte ptr [rbx + 0x17501e8], al ; ret
0x00000200000324e4 : add byte ptr [rax], al ; add byte ptr [rbx + 0x2bd123d3], cl ; ret 0x3b48
0x00000200006bb7b2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3482843], cl ; ret 0x348
0x000002000018ac48 : add byte ptr [rax], al ; add byte ptr [rbx + 0x440f18f8], al ; ret 0xcce9
0x0000020000046951 : add byte ptr [rax], al ; add byte ptr [rbx + 0x440ffff8], al ; ret
0x000002000017d640 : add byte ptr [rax], al ; add byte ptr [rbx + 0x48], dh ; mov eax, ecx ; ret
0x00000200000b0e2b : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000020000601178 : add byte ptr [rax], al ; add byte ptr [rbx + 0xb5ee8e8], cl ; ret
0x00000200001d29fe : add byte ptr [rax], al ; add byte ptr [rbx + 0xf484046], cl ; scasd eax, dword ptr [rdi] ; ret
0x000002000063cfa9 : add byte ptr [rax], al ; add byte ptr [rbx + rax - 0x7d], dh ; loopne 0x2000063cfd8 ; ret
0x000002000014e114 : add byte ptr [rax], al ; add byte ptr [rbx + rbp - 0x28], cl ; jmp r11
0x000002000074bb42 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x35], cl ; je 0x2000074bb89 ; ret
0x000002000004a5d9 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x41], cl ; or dh, dh ; ret 0xf1f
0x0000020000682ab3 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x75], cl ; out -0xa, eax ; ret
0x000002000045c119 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x7d], al ; or al, 0xff ; ret
0x0000020000489f00 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x7f], al ; or byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x0000020000579aa6 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x3a], al ; call 0x200001a6b65
0x00000200000c12d9 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x5c], cl ; ret
0x00000200001a58a7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d001731], cl ; jmp 0x200001a58b7
0x00000200001a58cb : add byte ptr [rax], al ; add byte ptr [rbx - 0x3d241731], cl ; jmp 0x200001a58db
0x00000200005f656c : add byte ptr [rax], al ; add byte ptr [rbx - 0x48951723], cl ; ret
0x0000020000474376 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6bf0fe03], al ; ret
0x00000200004b2c44 : add byte ptr [rax], al ; add byte ptr [rbx - 0x6ddd1735], cl ; ret
0x00000200003e2bf3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x748fdba4], cl ; ret
0x0000020000138260 : add byte ptr [rax], al ; add byte ptr [rbx - 0x749fdbac], cl ; ret 0xd8f7
0x000002000013ed25 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b3f3c6], al ; ret 0x8b48
0x000002000002ecaf : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b6dbb3], cl ; ret
0x00000200007318f1 : add byte ptr [rax], al ; add byte ptr [rbx - 0x74b6efb5], cl ; ret
0x000002000041492c : add byte ptr [rax], al ; add byte ptr [rbx - 0x74bb031a], al ; ret
0x00000200004a7f74 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7a2f083f], cl ; ret 0x870f
0x000002000066e3eb : add byte ptr [rax], al ; add byte ptr [rbx - 0x7af0fec7], al ; ret 0
0x00000200001cd665 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bbec7b9], cl ; ret
0x000002000013c3a6 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0b906], al ; ret 0
0x00000200004890f9 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fd08], al ; ret 0
0x00000200004fb844 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe17], al ; ret
0x000002000022871b : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe17], al ; ret 0
0x0000020000041628 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe17], al ; ret 2
0x00000200003a4403 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7ef39], al ; ret
0x00000200001c7d4e : add byte ptr [rax], al ; add byte ptr [rbx - 0x7cb7f3ad], cl ; ret 0x4810
0x0000020000748de2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x7eb7bfa9], cl ; ret 0xfff
0x000002000050e200 : add byte ptr [rax], al ; add byte ptr [rbx - 0x8b7dbac], cl ; ret 0xffe0
0x0000020000627507 : add byte ptr [rax], al ; add byte ptr [rbx - 0x987dba4], cl ; ret
0x0000020000450508 : add byte ptr [rax], al ; add byte ptr [rbx - 0x9cfdba4], cl ; ret
0x00000200001ff99a : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret
0x00000200005973f5 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x3b41
0x0000020000630a80 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x4489
0x0000020000224e5f : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8331
0x000002000041335a : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8941
0x0000020000544ebd : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8948
0x0000020000544ef0 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8b44
0x0000020000129657 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0xc803
0x0000020000638044 : add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0xe9d1
0x00000200003ca6ef : add byte ptr [rax], al ; add byte ptr [rbx], ah ; rol ecx, -0x20 ; adc cl, byte ptr [rbx] ; ret
0x00000200003cb8d8 : add byte ptr [rax], al ; add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000f9809 : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x000002000007b74a : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x3344
0x000002000042099c : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x33b
0x00000200003c0b2f : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x4489
0x00000200006b7cc2 : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x8445
0x00000200004a7fdf : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x9489
0x00000200004f1b36 : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xb841
0x0000020000501fd6 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; int 0xf
0x00000200001fedf5 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x0000020000609acb : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1375
0x000002000020ffe3 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x1b72
0x000002000007bf63 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x2074
0x000002000060a7ef : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x3c75
0x0000020000048e0d : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x470f
0x0000020000594567 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x5b73
0x00000200000eb630 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x767d
0x00000200006b6f95 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x850f
0x000002000012ef43 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x870f
0x000002000044c65f : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x8f0f
0x00000200000bbcc9 : add byte ptr [rax], al ; add byte ptr [rbx], bh ; ror byte ptr [rdi], 1 ; ret 0xd08b
0x00000200000f9938 : add byte ptr [rax], al ; add byte ptr [rbx], bl ; jmp qword ptr [rbx]
0x00000200000df4d4 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x000002000040190f : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x4489
0x00000200003db8be : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x448b
0x00000200001c1004 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x8966
0x000002000062244c : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x9848
0x00000200001f855b : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xc803
0x000002000009c958 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xd08b
0x0000020000016517 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xe0c1
0x00000200006020cb : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xf803
0x000002000001bac8 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xf883
0x00000200000647f5 : add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0xff48
0x000002000056c109 : add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret
0x00000200006c2ef3 : add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 0x8b48
0x000002000001d345 : add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 1
0x00000200003b6ff7 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; fucomi st(3) ; ret 0x3345
0x00000200006b7dec : add byte ptr [rax], al ; add byte ptr [rbx], dh ; imul byte ptr [rbx] ; ret 0x4779
0x000002000042435d : add byte ptr [rax], al ; add byte ptr [rbx], dh ; leave ; call 0x20000050278
0x00000200005219a7 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x589
0x000002000062d29d : add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x8948
0x0000020000487022 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x000002000047e68c : add byte ptr [rax], al ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x0000020000212e3d : add byte ptr [rax], al ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x77], 9 ; ret
0x0000020000223165 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x80], cl ; ret 0x4101
0x0000020000650149 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x000002000013be86 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; sal dh, cl ; ret
0x0000020000230cbd : add byte ptr [rax], al ; add byte ptr [rbx], dh ; sar bh, 0xc0 ; ret
0x0000020000120af6 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; shr bl, cl ; ret
0x000002000068aeb2 : add byte ptr [rax], al ; add byte ptr [rbx], dh ; test byte ptr [rax - 0x73], 0x15 ; ret 0xeca6
0x00000200000db738 : add byte ptr [rax], al ; add byte ptr [rcx + 0x22], al ; ret
0x00000200000a07c7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret
0x00000200001d0747 : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret 0x4ba
0x0000020000105d99 : add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret 0xb948
0x00000200003c5adb : add byte ptr [rax], al ; add byte ptr [rcx + 0x2a], al ; ret 0x388
0x0000020000152398 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret
0x00000200001f7d3d : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret 0x344
0x0000020000683e39 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret 0x348d
0x0000020000152fa4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; ret 0xf41
0x00000200001de1cd : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; rol byte ptr [rcx - 0x75], cl ; ret
0x00000200001793b8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], al ; rol dword ptr [rcx - 0x75], 1 ; ret 0xca8b
0x000002000009e0b3 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret
0x0000020000438e97 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x00000200001cfc72 : add byte ptr [rax], al ; add byte ptr [rcx + 0x33], cl ; ret 0x8948
0x000002000020cdf9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret
0x00000200007625a9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret 0x4975
0x00000200000ff1a8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret 0x840f
0x000002000017b388 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ror byte ptr [rdi], 0x85 ; ret 0
0x000002000060a0ae : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; enter 0x1674, -0x75 ; ret
0x0000020000163551 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200000cbebe : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x830f
0x000002000042c07a : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x850f
0x0000020000092239 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x860f
0x000002000007d08c : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x0000020000464137 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x2873
0x00000200000a9e3b : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x8b48
0x0000020000625db7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xce75
0x00000200000286a3 : add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ror byte ptr [rdi], 0x85 ; ret 0
0x00000200004ab12e : add byte ptr [rax], al ; add byte ptr [rcx + 0x42bce801], dh ; ret
0x0000020000615bdc : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000453b7b : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x000002000008980d : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbx ; ret
0x00000200000b7f5a : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000da6f9 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rbx ; pop rbp ; ret
0x00000200000cd3b5 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; ret
0x000002000049693a : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rdi ; ret
0x00000200000d2b36 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; ret
0x00000200000b847a : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x00000200003f3296 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rbp ; pop rbx ; ret
0x00000200000860ae : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rbx ; ret
0x000002000000fdb0 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rbp ; pop rbx ; ret
0x000002000001c6f1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rbp ; ret
0x00000200004c05bc : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000538e66 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200000bf18f : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbx ; ret
0x0000020000051ba4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000137949 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000451fe8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001104ac : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200005e3c2f : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x00000200000d924a : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rsi ; ret
0x0000020000440178 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000048f02f : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rsi ; ret
0x00000200000cf71d : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r12 ; ret
0x000002000044f179 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; ret
0x0000020000017ecb : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rbp ; ret
0x00000200000c80df : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rbx ; ret
0x00000200005f606e : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000044e038 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000495858 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rsi ; pop rbx ; ret
0x000002000007a5d2 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rsi ; ret
0x00000200000c1551 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; add dword ptr [rcx + 0x3b], ecx ; ret 0x840f
0x000002000039bfe7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret
0x00000200000a9ef3 : add byte ptr [rax], al ; add byte ptr [rcx + 0xb], cl ; ret
0x000002000044a4c0 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], 0x45 ; ret 0xba0f
0x0000020000008123 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0xc803
0x0000020000491e87 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; ret
0x00000200000f70c7 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x000002000058a66b : add byte ptr [rax], al ; add byte ptr [rcx + 3], al ; ret 0x8941
0x00000200000a2993 : add byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret
0x00000200000a48e9 : add byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret 0x3b48
0x00000200000e4f69 : add byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret 0x3b49
0x00000200003c6b27 : add byte ptr [rax], al ; add byte ptr [rcx + rcx + 0x3c], cl ; ret 0x8b44
0x000002000051601b : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x0000020000402815 : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xf000
0x0000020000055e04 : add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], cl ; jmp 0x1ffc290a623
0x00000200001d3dda : add byte ptr [rax], al ; add byte ptr [rcx - 0x50], al ; adc dword ptr [rax + 0xf], ecx ; ret 0x8b48
0x00000200006bc194 : add byte ptr [rax], al ; add byte ptr [rcx - 0x50], al ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x12e8
0x00000200001f5104 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; add dword ptr [rcx + 0x3b], eax ; ret 0x870f
0x0000020000606e82 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; outsb dx, byte ptr [rsi] ; ret 0xb841
0x00000200001d5382 : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; push rax ; add eax, ebp ; ret 0xef0b
0x000002000062e6db : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rcx - 0x75] ; ret 0xf748
0x000002000043afbe : add byte ptr [rax], al ; add byte ptr [rcx - 0x73], cl ; and byte ptr [rdi], r9b ; xchg eax, esp ; ret 0x8948
0x000002000006d61c : add byte ptr [rax], al ; add byte ptr [rcx - 0x74a7dbac], cl ; ret 0x34c
0x00000200006c7018 : add byte ptr [rax], al ; add byte ptr [rcx - 0x74b3c7b8], cl ; ret
0x000002000075fc66 : add byte ptr [rax], al ; add byte ptr [rcx - 0x74bbc7ba], cl ; ret
0x0000020000223f20 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; adc byte ptr [rcx - 0x75], cl ; ret
0x000002000022db85 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; adc byte ptr [rcx - 0x75], cl ; ret 0xf748
0x0000020000229b29 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x3b], al ; ret
0x0000020000224009 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x3b], al ; ret 0x974
0x0000020000049efa : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; enter -0x1f2d, 0x3b ; ret 0xef72
0x00000200004ac702 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; int 0xe8
0x0000020000493bc4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; push rcx ; cmp dh, dh ; ret 0xf20
0x000002000000aae2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x000002000015a35e : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x2eb
0x00000200001b551c : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x348
0x00000200003f3384 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x3948
0x00000200004ac863 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x48f0
0x00000200006c0a73 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x587
0x000002000063be48 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x694c
0x0000020000643dc4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8545
0x0000020000053288 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200000897e3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8b4c
0x00000200003f883a : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x950f
0x000002000006d6bc : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xc22b
0x00000200000f126a : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xd285
0x00000200003f5899 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x000002000000832d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xff41
0x00000200002320fe : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ror dword ptr [rax - 0x75], -0x7c ; ret 0x830
0x0000020000221a85 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; sbb byte ptr [r9 + 3], r8b ; ret
0x0000020000230349 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; sbb byte ptr [rbx], al ; ret
0x00000200000f0778 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; xlatb ; call rax
0x00000200005dfceb : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; call 0x20049208741
0x0000020000111d5a : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; cmp r8b, bpl ; ret 4
0x00000200000970a3 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; fild dword ptr [rbp - 0x75] ; ret
0x00000200003e2021 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; fld1 ; jl 0x200003e2012 ; ret
0x0000020000648cc7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax + 0x63] ; ret 0x3345
0x000002000063301e : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0x8548
0x0000020000692611 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; iretd ; call r14
0x00000200004d4909 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; iretd ; call rdi
0x000002000077b157 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; or dword ptr [rax - 0x75], ecx ; ret
0x0000020000021889 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000006a253 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x2348
0x000002000072b89e : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x0000020000177977 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3ee9
0x0000020000177987 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3fe9
0x00000200001779a7 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x40e9
0x00000200000200f1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8b44
0x000002000001793b : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x0000020000010dcf : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000002a67 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x000002000003d558 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xf749
0x000002000007de5d : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ror byte ptr [rax + 0xf], 0xaf ; ret 0x349
0x00000200000a4ad9 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; sub byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x0000020000216a22 : add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret
0x00000200003e32d0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret 0x4488
0x00000200004132c8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; cmp dh, dh ; ret
0x0000020000617f67 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; jl 0x20000617f9b ; sbb al, 0x8b ; ret
0x000002000000cbb4 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; adc ecx, dword ptr [rcx - 0x7d] ; ret
0x000002000003510b : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000211afa : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; xor al, al ; ret
0x000002000052eb0d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x00000200003a6449 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; ret 0xb74
0x00000200003ea4ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7c9fdb84], cl ; call qword ptr [rax]
0x0000020000672dcf : add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret 0x850f
0x0000020000634f55 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7cb797b5], cl ; ret
0x00000200005cef3c : add byte ptr [rax], al ; add byte ptr [rcx - 0x7cb7efbe], cl ; ret 0xff14
0x000002000003abd6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000643f1f : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret 0x49f0
0x0000020000681bed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000200001366ce : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4008
0x000002000072b8c0 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x0000020000651e0e : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000020000430243 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x41fe
0x00000200000461be : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x000002000016eb08 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x000002000001197d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4930
0x000002000010b091 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x6607
0x0000020000193948 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ror byte ptr [rsp + rcx*2], 3 ; ret
0x0000020000041008 : add byte ptr [rax], al ; add byte ptr [rcx - 0x8cbdb8c], cl ; ret
0x0000020000090c1e : add byte ptr [rax], al ; add byte ptr [rcx - 0x9afdbb4], cl ; ret
0x00000200001e228f : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000125773 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7402
0x0000020000148e13 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7406
0x0000020000148e2c : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7506
0x00000200005066b3 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xeb03
0x0000020000207146 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000020000207179 : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf04
0x000002000049862b : add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf0f
0x00000200004fc5c0 : add byte ptr [rax], al ; add byte ptr [rcx - 0xcf60bc], cl ; ret
0x0000020000120079 : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x000002000013f311 : add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x000002000000c195 : add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x000002000007c0bb : add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret 0
0x00000200000803af : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 0xfff
0x0000020000620129 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x00000200006256d6 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xb841
0x000002000008c0a6 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200004c3a87 : add byte ptr [rax], al ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000f1ec3 : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x000002000001ddfe : add byte ptr [rax], al ; add byte ptr [rcx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000740b6c : add byte ptr [rax], al ; add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x00000200000a2576 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x000002000065b407 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bl ; ret
0x0000020000052565 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000000a567 : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000446d4c : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x0000020000100f0b : add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200004766ce : add byte ptr [rax], al ; add byte ptr [rdi + 1], dh ; ret
0x00000200004c80ff : add byte ptr [rax], al ; add byte ptr [rdi + 4], dh ; mov al, r8b ; ret
0x000002000000f093 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001e2595 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x2b9
0x00000200002323f7 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x00000200003a8f8a : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200001bc2c2 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x188
0x0000020000085fb1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x41f0
0x000002000001cd45 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4488
0x0000020000082807 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4865
0x00000200000203c4 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4980
0x000002000005433c : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4c65
0x0000020000063d84 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x5f6
0x00000200000628c8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x8841
0x00000200001c1325 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x8b48
0x00000200001c03f8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0xa483
0x0000020000740a5a : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ror byte ptr [rdi], 0x20 ; ret
0x0000020000020cb5 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; sal esi, 5 ; ret
0x000002000039b0d8 : add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b4c
0x0000020000203ad1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000048d1cd : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x8b48
0x000002000006fe4a : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x49], al ; ret 0xd233
0x00000200000726c4 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000200006c796f : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x37ba
0x000002000004a3b1 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8341
0x000002000004ac82 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; sbb ecx, dword ptr [rax - 1] ; ret
0x000002000014f576 : add byte ptr [rax], al ; add byte ptr [rdi - 0x73], cl ; sbb al, 0x8b ; jmp r11
0x00000200006c2a4e : add byte ptr [rax], al ; add byte ptr [rdi - 0x7cb7f7bd], al ; ret
0x000002000062006e : add byte ptr [rax], al ; add byte ptr [rdi], bl ; add byte ptr [rax - 1], cl ; ret 0xc148
0x00000200000815aa : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add byte ptr [rax + 0xb], cl ; ret
0x00000200000a9b9f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add byte ptr [rcx + 0xb], cl ; ret
0x0000020000230b6d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add dword ptr [rcx], eax ; sidt ptr [rdx] ; ret
0x00000200006503ae : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x43 ; add bh, bh ; ret 0x8b4c
0x00000200004be16f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x46 ; add bh, bh ; ret 0x348
0x0000020000172e46 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x47 ; add ch, byte ptr [rbx] ; ret
0x0000020000688292 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0xb ; call 0x20000134560
0x0000020000747079 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 5 ; jge 0x200007470f8 ; ret
0x000002000003ffcf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x82 ; ret
0x000002000006947e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x8d ; ret
0x000002000055a502 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x8d ; ret 0
0x00000200006aa5b0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret
0x000002000049673d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret
0x00000200000cd3ea : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x1ba
0x00000200005efb0c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x4489
0x00000200003ffc4e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x8789
0x00000200003ae4b6 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xb0c3
0x00000200005b1cb8 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xb60f
0x00000200004a810a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xbc80
0x00000200001d6d80 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc83a
0x00000200000a36a5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xe383
0x000002000019e5bf : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xff41
0x00000200001028a7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x12b
0x000002000004f566 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; stosd dword ptr [rdi], eax ; ret 0x8a45
0x0000020000521a77 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test ch, dl ; ret
0x0000020000485982 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; test dword ptr [rdi], edx ; call qword ptr [rdx]
0x0000020000170714 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000020000132880 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5338
0x00000200001b3abc : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x00000200000d1c7f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x00000200001a15ea : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200004ddade : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x0000020000215ef7 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x6349
0x0000020000215a4e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b41
0x0000020000587b18 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc2ff
0x00000200000389d7 : add byte ptr [rax], al ; add byte ptr [rdx + 0x1242240], cl ; ret
0x00000200004001b6 : add byte ptr [rax], al ; add byte ptr [rdx + 0xa417c47], cl ; ret 0xa40
0x00000200001e3712 : add byte ptr [rax], al ; add byte ptr [rdx + 0xf], al ; mov bh, 0x4c ; ret 0x4a08
0x00000200000c01d1 : add byte ptr [rax], al ; add byte ptr [rdx + rdi - 0x4d], al ; ret
0x0000020000181297 : add byte ptr [rax], al ; add byte ptr [rdx - 0x75], cl ; or byte ptr [rax], r14b ; ret
0x000002000042fda5 : add byte ptr [rax], al ; add byte ptr [rdx - 0x75fedb3d], cl ; ret
0x000002000059e538 : add byte ptr [rax], al ; add byte ptr [rdx - 0x77], al ; add al, 1 ; inc edx ; jmp 0x2000059e51e
0x00000200001d8905 : add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x000002000018c70c : add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret 0x27b9
0x00000200001e9461 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200003a4d78 : add byte ptr [rax], al ; add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8548
0x00000200003be3cc : add byte ptr [rax], al ; add byte ptr [rdx], al ; ret
0x00000200000d3da5 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; lahf ; ret
0x00000200003e3733 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret
0x00000200006d30fb : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x3a76
0x000002000022637f : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x860f
0x00000200001fcf33 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0x973
0x0000020000206d88 : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0xa73
0x00000200003adfdf : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret 0xc75
0x000002000004f6bf : add byte ptr [rax], al ; add byte ptr [rdx], bh ; retf -0x3e75 ; cmovg eax, edx ; jmp 0x2000004f6d7
0x00000200000e66cb : add byte ptr [rax], al ; add byte ptr [rdx], ch ; ret 0x8488
0x00000200001f625c : add byte ptr [rax], al ; add byte ptr [rdx], cl ; je 0x200001f626d ; xor al, al ; ret
0x000002000052fd87 : add byte ptr [rax], al ; add byte ptr [rsi + 0x23], ah ; ret 0xb66
0x000002000042e03e : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret
0x00000200001e6208 : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x3272
0x00000200005babbe : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x672
0x000002000052f5c5 : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x0000020000648e3b : add byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x877
0x0000020000025e7e : add byte ptr [rax], al ; add byte ptr [rsi + 0x45], ah ; mov dword ptr [rdx + 0x10], ecx ; ret
0x00000200000cd61f : add byte ptr [rax], al ; add byte ptr [rsi + 0x5b], bl ; pop rbp ; ret
0x0000020000020d94 : add byte ptr [rax], al ; add byte ptr [rsi + 0x5d], bl ; pop rbx ; ret
0x00000200000da20f : add byte ptr [rax], al ; add byte ptr [rsi + 0xb], ah ; ret 0x8966
0x000002000044841c : add byte ptr [rax], al ; add byte ptr [rsi + 3], ah ; ret 0xb70f
0x0000020000687384 : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000062338c : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; or cl, byte ptr [rax - 0x7d] ; ret 0x4830
0x00000200000459b5 : add byte ptr [rax], al ; add byte ptr [rsi - 0x77], ah ; push rcx ; ret
0x0000020000530123 : add byte ptr [rax], al ; add byte ptr [rsi - 0x7d], ah ; enter 0x6630, 0xb ; ret 0x4166
0x0000020000781251 : add byte ptr [rax], al ; add byte ptr [rsi - 0x7d], ah ; ret
0x000002000008e370 : add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret
0x00000200000923d8 : add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x00000200003d0178 : add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret 0x9489
0x0000020000143d23 : add byte ptr [rax], al ; add byte ptr [rsi - 9], ah ; ret 0x300
0x00000200001b6c1e : add byte ptr [rax], al ; add byte ptr [rsp + rbx - 0x7f], dh ; call rsi
0x000002000044e6c6 : add byte ptr [rax], al ; add byte ptr [rsp + rbx*2 - 0x75], dh ; ret
0x00000200001b6c26 : add byte ptr [rax], al ; add byte ptr [rsp + rdx - 0x7f], dh ; call rcx
0x00000200001661f9 : add byte ptr [rax], al ; add ch, cl ; sub dword ptr [rax + 0x3b], ecx ; ret
0x00000200005bf466 : add byte ptr [rax], al ; add ch, cl ; sub dword ptr [rax - 0x75], ecx ; ret 0xc933
0x00000200005a5d90 : add byte ptr [rax], al ; add ch, cl ; sub dword ptr [rax - 0x7d], ecx ; ret
0x0000020000649815 : add byte ptr [rax], al ; add cl, al ; clc ; add eax, dword ptr [rbx] ; ret 0x3b41
0x00000200000adf87 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x75] ; sub byte ptr [rax - 0x7b], cl ; ret 0xba48
0x0000020000093b82 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7b] ; ret 0x3875
0x000002000077a079 : add byte ptr [rax], al ; add cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00000200003e548b : add byte ptr [rax], al ; add cl, byte ptr [rcx - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x0000020000141a76 : add byte ptr [rax], al ; add cl, ch ; add al, ah ; add byte ptr [rax], al ; ret
0x0000020000141e76 : add byte ptr [rax], al ; add cl, ch ; add al, al ; add byte ptr [rax], al ; ret
0x0000020000141776 : add byte ptr [rax], al ; add cl, ch ; add al, bh ; add byte ptr [rax], al ; ret
0x0000020000141b76 : add byte ptr [rax], al ; add cl, ch ; add al, bl ; add byte ptr [rax], al ; ret
0x0000020000141976 : add byte ptr [rax], al ; add cl, ch ; add al, ch ; add byte ptr [rax], al ; ret
0x0000020000141d76 : add byte ptr [rax], al ; add cl, ch ; add al, cl ; add byte ptr [rax], al ; ret
0x0000020000141876 : add byte ptr [rax], al ; add cl, ch ; add al, dh ; add byte ptr [rax], al ; ret
0x0000020000141c76 : add byte ptr [rax], al ; add cl, ch ; add al, dl ; add byte ptr [rax], al ; ret
0x0000020000140276 : add byte ptr [rax], al ; add cl, ch ; add bl, ah ; add byte ptr [rax], al ; ret
0x0000020000140676 : add byte ptr [rax], al ; add cl, ch ; add bl, al ; add byte ptr [rax], al ; ret
0x0000020000140376 : add byte ptr [rax], al ; add cl, ch ; add bl, bl ; add byte ptr [rax], al ; ret
0x0000020000140576 : add byte ptr [rax], al ; add cl, ch ; add bl, cl ; add byte ptr [rax], al ; ret
0x0000020000140476 : add byte ptr [rax], al ; add cl, ch ; add bl, dl ; add byte ptr [rax], al ; ret
0x0000020000141276 : add byte ptr [rax], al ; add cl, ch ; add cl, ah ; add byte ptr [rax], al ; ret
0x0000020000141676 : add byte ptr [rax], al ; add cl, ch ; add cl, al ; add byte ptr [rax], al ; ret
0x0000020000140f76 : add byte ptr [rax], al ; add cl, ch ; add cl, bh ; add byte ptr [rax], al ; ret
0x0000020000141376 : add byte ptr [rax], al ; add cl, ch ; add cl, bl ; add byte ptr [rax], al ; ret
0x0000020000141176 : add byte ptr [rax], al ; add cl, ch ; add cl, ch ; add byte ptr [rax], al ; ret
0x0000020000141576 : add byte ptr [rax], al ; add cl, ch ; add cl, cl ; add byte ptr [rax], al ; ret
0x0000020000141076 : add byte ptr [rax], al ; add cl, ch ; add cl, dh ; add byte ptr [rax], al ; ret
0x0000020000141476 : add byte ptr [rax], al ; add cl, ch ; add cl, dl ; add byte ptr [rax], al ; ret
0x0000020000140a76 : add byte ptr [rax], al ; add cl, ch ; add dl, ah ; add byte ptr [rax], al ; ret
0x0000020000140e76 : add byte ptr [rax], al ; add cl, ch ; add dl, al ; add byte ptr [rax], al ; ret
0x0000020000140776 : add byte ptr [rax], al ; add cl, ch ; add dl, bh ; add byte ptr [rax], al ; ret
0x0000020000140b76 : add byte ptr [rax], al ; add cl, ch ; add dl, bl ; add byte ptr [rax], al ; ret
0x0000020000140976 : add byte ptr [rax], al ; add cl, ch ; add dl, ch ; add byte ptr [rax], al ; ret
0x0000020000140d76 : add byte ptr [rax], al ; add cl, ch ; add dl, cl ; add byte ptr [rax], al ; ret
0x0000020000140876 : add byte ptr [rax], al ; add cl, ch ; add dl, dh ; add byte ptr [rax], al ; ret
0x0000020000140c76 : add byte ptr [rax], al ; add cl, ch ; add dl, dl ; add byte ptr [rax], al ; ret
0x0000020000141a56 : add byte ptr [rax], al ; add cl, ch ; and al, ah ; add byte ptr [rax], al ; ret
0x0000020000141e56 : add byte ptr [rax], al ; add cl, ch ; and al, al ; add byte ptr [rax], al ; ret
0x0000020000141756 : add byte ptr [rax], al ; add cl, ch ; and al, bh ; add byte ptr [rax], al ; ret
0x0000020000141b56 : add byte ptr [rax], al ; add cl, ch ; and al, bl ; add byte ptr [rax], al ; ret
0x0000020000141956 : add byte ptr [rax], al ; add cl, ch ; and al, ch ; add byte ptr [rax], al ; ret
0x0000020000141d56 : add byte ptr [rax], al ; add cl, ch ; and al, cl ; add byte ptr [rax], al ; ret
0x0000020000141856 : add byte ptr [rax], al ; add cl, ch ; and al, dh ; add byte ptr [rax], al ; ret
0x0000020000141c56 : add byte ptr [rax], al ; add cl, ch ; and al, dl ; add byte ptr [rax], al ; ret
0x0000020000140256 : add byte ptr [rax], al ; add cl, ch ; and bl, ah ; add byte ptr [rax], al ; ret
0x0000020000140656 : add byte ptr [rax], al ; add cl, ch ; and bl, al ; add byte ptr [rax], al ; ret
0x0000020000140356 : add byte ptr [rax], al ; add cl, ch ; and bl, bl ; add byte ptr [rax], al ; ret
0x0000020000140556 : add byte ptr [rax], al ; add cl, ch ; and bl, cl ; add byte ptr [rax], al ; ret
0x0000020000140456 : add byte ptr [rax], al ; add cl, ch ; and bl, dl ; add byte ptr [rax], al ; ret
0x0000020000141256 : add byte ptr [rax], al ; add cl, ch ; and cl, ah ; add byte ptr [rax], al ; ret
0x0000020000141656 : add byte ptr [rax], al ; add cl, ch ; and cl, al ; add byte ptr [rax], al ; ret
0x0000020000140f56 : add byte ptr [rax], al ; add cl, ch ; and cl, bh ; add byte ptr [rax], al ; ret
0x0000020000141356 : add byte ptr [rax], al ; add cl, ch ; and cl, bl ; add byte ptr [rax], al ; ret
0x0000020000141156 : add byte ptr [rax], al ; add cl, ch ; and cl, ch ; add byte ptr [rax], al ; ret
0x0000020000141556 : add byte ptr [rax], al ; add cl, ch ; and cl, cl ; add byte ptr [rax], al ; ret
0x0000020000141056 : add byte ptr [rax], al ; add cl, ch ; and cl, dh ; add byte ptr [rax], al ; ret
0x0000020000141456 : add byte ptr [rax], al ; add cl, ch ; and cl, dl ; add byte ptr [rax], al ; ret
0x0000020000140a56 : add byte ptr [rax], al ; add cl, ch ; and dl, ah ; add byte ptr [rax], al ; ret
0x0000020000140e56 : add byte ptr [rax], al ; add cl, ch ; and dl, al ; add byte ptr [rax], al ; ret
0x0000020000140756 : add byte ptr [rax], al ; add cl, ch ; and dl, bh ; add byte ptr [rax], al ; ret
0x0000020000140b56 : add byte ptr [rax], al ; add cl, ch ; and dl, bl ; add byte ptr [rax], al ; ret
0x0000020000140956 : add byte ptr [rax], al ; add cl, ch ; and dl, ch ; add byte ptr [rax], al ; ret
0x0000020000140d56 : add byte ptr [rax], al ; add cl, ch ; and dl, cl ; add byte ptr [rax], al ; ret
0x0000020000140856 : add byte ptr [rax], al ; add cl, ch ; and dl, dh ; add byte ptr [rax], al ; ret
0x0000020000140c56 : add byte ptr [rax], al ; add cl, ch ; and dl, dl ; add byte ptr [rax], al ; ret
0x000002000018b7a4 : add byte ptr [rax], al ; add cl, ch ; inc cl ; int1 ; push rsi ; ret 0x741e
0x0000020000141536 : add byte ptr [rax], al ; add cl, ch ; leave ; add byte ptr [rax], al ; ret
0x0000020000140296 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014027f ; add byte ptr [rax], al ; ret
0x0000020000140396 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014037e ; add byte ptr [rax], al ; ret
0x0000020000140496 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014047d ; add byte ptr [rax], al ; ret
0x0000020000140596 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014057c ; add byte ptr [rax], al ; ret
0x0000020000140696 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014067b ; add byte ptr [rax], al ; ret
0x0000020000140796 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014077a ; add byte ptr [rax], al ; ret
0x0000020000140896 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000140879 ; add byte ptr [rax], al ; ret
0x0000020000140996 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000140978 ; add byte ptr [rax], al ; ret
0x0000020000140a96 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000140a77 ; add byte ptr [rax], al ; ret
0x0000020000140b96 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000140b76 ; add byte ptr [rax], al ; ret
0x0000020000140c96 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000140c75 ; add byte ptr [rax], al ; ret
0x0000020000140d96 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000140d74 ; add byte ptr [rax], al ; ret
0x0000020000140e96 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000140e73 ; add byte ptr [rax], al ; ret
0x0000020000140f96 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000140f72 ; add byte ptr [rax], al ; ret
0x0000020000141096 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000141071 ; add byte ptr [rax], al ; ret
0x0000020000141196 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000141170 ; add byte ptr [rax], al ; ret
0x0000020000141296 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014126f ; add byte ptr [rax], al ; ret
0x0000020000141396 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014136e ; add byte ptr [rax], al ; ret
0x0000020000141496 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014146d ; add byte ptr [rax], al ; ret
0x0000020000141596 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014156c ; add byte ptr [rax], al ; ret
0x0000020000141696 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014166b ; add byte ptr [rax], al ; ret
0x0000020000141796 : add byte ptr [rax], al ; add cl, ch ; loop 0x2000014176a ; add byte ptr [rax], al ; ret
0x0000020000141896 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000141869 ; add byte ptr [rax], al ; ret
0x0000020000141996 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000141968 ; add byte ptr [rax], al ; ret
0x0000020000141a96 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000141a67 ; add byte ptr [rax], al ; ret
0x0000020000141b96 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000141b66 ; add byte ptr [rax], al ; ret
0x0000020000141c96 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000141c65 ; add byte ptr [rax], al ; ret
0x0000020000141d96 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000141d64 ; add byte ptr [rax], al ; ret
0x0000020000141e96 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000141e63 ; add byte ptr [rax], al ; ret
0x0000020000141f96 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000141f62 ; add byte ptr [rax], al ; ret
0x0000020000142096 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000142061 ; add byte ptr [rax], al ; ret
0x0000020000142196 : add byte ptr [rax], al ; add cl, ch ; loop 0x20000142160 ; add byte ptr [rax], al ; ret
0x0000020000141836 : add byte ptr [rax], al ; add cl, ch ; mov byte ptr [rax], 0 ; ret
0x00000200000cbe8f : add byte ptr [rax], al ; add cl, ch ; mov eax, 0x8b000000 ; ret
0x00000200000532c0 : add byte ptr [rax], al ; add cl, ch ; ret
0x0000020000141c36 : add byte ptr [rax], al ; add cl, ch ; ret 0
0x00000200001420b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xbd
0x0000020000141fb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xbe
0x0000020000141eb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xbf
0x0000020000141db6 : add byte ptr [rax], al ; add cl, ch ; ret 0xc0
0x0000020000141cb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xc1
0x0000020000141bb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xc2
0x0000020000141ab6 : add byte ptr [rax], al ; add cl, ch ; ret 0xc3
0x00000200001419b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xc4
0x00000200001418b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xc5
0x00000200001417b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xc6
0x00000200001416b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xc7
0x00000200001415b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xc8
0x00000200001414b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xc9
0x00000200001413b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xca
0x00000200001412b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xcb
0x00000200001411b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xcc
0x00000200001410b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xcd
0x0000020000140fb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xce
0x0000020000140eb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xcf
0x0000020000140db6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd0
0x0000020000140cb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd1
0x0000020000140bb6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd2
0x0000020000140ab6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd3
0x00000200001409b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd4
0x00000200001408b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd5
0x00000200001407b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd6
0x00000200001406b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd7
0x00000200001405b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd8
0x00000200001404b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xd9
0x00000200001403b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xda
0x00000200001402b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xdb
0x00000200001401b6 : add byte ptr [rax], al ; add cl, ch ; ret 0xdc
0x0000020000565cfc : add byte ptr [rax], al ; add cl, ch ; ret 0xe6e0
0x00000200005b1854 : add byte ptr [rax], al ; add cl, ch ; ret 0xec85
0x0000020000178d5a : add byte ptr [rax], al ; add cl, ch ; ret 0xee12
0x00000200000aba2f : add byte ptr [rax], al ; add cl, ch ; ret 0xfff8
0x000002000057a903 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000020000141e36 : add byte ptr [rax], al ; add cl, ch ; rol byte ptr [rax], 0 ; ret
0x0000020000141d36 : add byte ptr [rax], al ; add cl, ch ; rol dword ptr [rax], 0 ; ret
0x0000020000140836 : add byte ptr [rax], al ; add cl, ch ; salc ; add byte ptr [rax], al ; ret
0x0000020000140736 : add byte ptr [rax], al ; add cl, ch ; xlatb ; add byte ptr [rax], al ; ret
0x00000200004e2e15 : add byte ptr [rax], al ; add dh, bh ; ret
0x000002000006cc8d : add byte ptr [rax], al ; add dh, bh ; ret 0x5688
0x000002000006cbc2 : add byte ptr [rax], al ; add dh, bh ; ret 0x8b49
0x000002000000cc01 : add byte ptr [rax], al ; add dh, dh ; ret
0x00000200001ababb : add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0x0000020000186630 : add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x0000020000208ef8 : add byte ptr [rax], al ; add dh, dh ; ret 0x7403
0x00000200004ba81e : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000002000062d69e : add byte ptr [rax], al ; add dh, dh ; ret 0x7410
0x000002000003d6d3 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200001088d3 : add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0x00000200000328e3 : add byte ptr [rax], al ; add dh, dh ; ret 0x7510
0x00000200000b748c : add byte ptr [rax], al ; add dh, dh ; ret 0xf01
0x0000020000059ed1 : add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x00000200003b51ee : add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x0000020000099c66 : add byte ptr [rax], al ; add dh, dh ; ret 0xf07
0x000002000007ed31 : add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x0000020000116a3c : add byte ptr [rax], al ; add dh, dh ; ret 0xf3f
0x000002000064ac19 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x0000020000004450 : add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000019571e : add byte ptr [rax], al ; add dl, dl ; loopne 0x20000195722 ; shl byte ptr [rdx], 1 ; ret 0x8841
0x00000200000a7609 : add byte ptr [rax], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8948
0x00000200001091bd : add byte ptr [rax], al ; add dword ptr [rax - 0x75], ecx ; ret
0x0000020000044b26 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000016eaa2 : add byte ptr [rax], al ; add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000002d600 : add byte ptr [rax], al ; add dword ptr [rax], eax ; mov dword ptr [rcx], eax ; mov al, 1 ; ret
0x00000200003f7f18 : add byte ptr [rax], al ; add dword ptr [rax], eax ; mov eax, r8d ; ret
0x000002000041ee46 : add byte ptr [rax], al ; add dword ptr [rax], eax ; ret
0x00000200001d1c2f : add byte ptr [rax], al ; add dword ptr [rbp + 2], esi ; mov al, 1 ; ret
0x00000200000e79ed : add byte ptr [rax], al ; add dword ptr [rbp + 5], esi ; add rsp, 0x38 ; ret
0x000002000014e7b3 : add byte ptr [rax], al ; add dword ptr [rbp + rax - 0x18], esi ; ret
0x00000200003ccecf : add byte ptr [rax], al ; add dword ptr [rbx], eax ; ret
0x00000200005461c4 : add byte ptr [rax], al ; add dword ptr [rcx + 0xac], eax ; ret
0x0000020000069e86 : add byte ptr [rax], al ; add dword ptr [rcx + rax - 0x3d], esi ; mov al, 1 ; ret
0x0000020000671559 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf41
0x0000020000186817 : add byte ptr [rax], al ; add dword ptr [rsp - 0xa], esi ; ret
0x0000020000515e39 : add byte ptr [rax], al ; add eax, 0xe8000000 ; jl 0x20000515de1 ; ret
0x0000020000619141 : add byte ptr [rax], al ; add eax, 0xfc0920f ; mov dh, 0xc0 ; ret
0x00000200006ad476 : add byte ptr [rax], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0
0x00000200005989b7 : add byte ptr [rax], al ; add ebx, dword ptr [r15 + 0x14] ; jmp 0x20000424c76
0x00000200004f7970 : add byte ptr [rax], al ; add edi, edi ; ret
0x000002000014a9df : add byte ptr [rax], al ; add r9, r8 ; jmp r9
0x00000200003b121f : add byte ptr [rax], al ; add rax, 0x608 ; ret
0x000002000076ec5c : add byte ptr [rax], al ; add rax, 0x8b8 ; ret
0x00000200004a76b5 : add byte ptr [rax], al ; add rax, 0xcc0 ; ret
0x00000200003a15a4 : add byte ptr [rax], al ; add rax, rcx ; add rsp, 0x38 ; ret
0x00000200000660f5 : add byte ptr [rax], al ; add rax, rdx ; ret
0x0000020000230b93 : add byte ptr [rax], al ; add rax, rdx ; sub rsp, 0x28 ; call rax
0x0000020000427cdd : add byte ptr [rax], al ; add rcx, r14 ; call 0x20000053c68
0x0000020000760b03 : add byte ptr [rax], al ; add rdi, rbx ; mov r13d, ebx ; jmp 0x20000760ae3
0x000002000004e8f4 : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000200005414d1 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000002000014f174 : add byte ptr [rax], al ; add rsp, 0x1a8 ; ret
0x00000200001af29a : add byte ptr [rax], al ; add rsp, 0x1c8 ; ret
0x00000200001532ca : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x000002000013f73d : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000020000009376 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000007386 : add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000055864a : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x0000020000008e01 : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000015557a : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000002000001fc72 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000057579 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000062c24 : add byte ptr [rax], al ; add rsp, 0x30 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200005571e0 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000020846 : add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000154d85 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000002000000e0b3 : add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x000002000004321e : add byte ptr [rax], al ; add rsp, 0x40 ; pop rdi ; ret
0x000002000000c14a : add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x0000020000154c7d : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbp ; ret
0x000002000001784c : add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x00000200003ac07e : add byte ptr [rax], al ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000494a4 : add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000007934b : add byte ptr [rax], al ; add rsp, 0x60 ; pop r12 ; ret
0x000002000000ecef : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x00000200004e76e9 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x000002000021b050 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000012454f : add byte ptr [rax], al ; add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000b6ff6 : add byte ptr [rax], al ; add rsp, 0x60 ; pop rdi ; ret
0x000002000014018b : add byte ptr [rax], al ; add rsp, 0x68 ; pop rdi ; pop rsi ; ret
0x00000200000c9600 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x000002000000868a : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000123c84 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000049ddd : add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000111a7a : add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; ret
0x000002000077ff79 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rsi ; ret
0x000002000053cd1b : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x00000200000c8fb7 : add byte ptr [rax], al ; add rsp, 0x88 ; ret
0x000002000039c5bc : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000002000042d730 : add byte ptr [rax], al ; add word ptr [rcx + 0xa], dx ; ret
0x00000200001c1260 : add byte ptr [rax], al ; add word ptr [rip + 0x141bcf], ax ; ret
0x000002000006a3a0 : add byte ptr [rax], al ; and al, 1 ; ret
0x000002000073640e : add byte ptr [rax], al ; and bh, dh ; fistp word ptr [rbx] ; jmp qword ptr [rbx]
0x00000200000a277e : add byte ptr [rax], al ; and byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret
0x000002000045abdb : add byte ptr [rax], al ; and byte ptr [rax], al ; add byte ptr [rdi], cl ; test dword ptr [rax], edi ; ret
0x00000200000c2c96 : add byte ptr [rax], al ; and eax, 0x10001 ; ret
0x00000200001fc9d2 : add byte ptr [rax], al ; and eax, 1 ; ret
0x00000200000385bc : add byte ptr [rax], al ; and eax, r8d ; shr eax, 0xe ; ret
0x000002000042eeb2 : add byte ptr [rax], al ; and qword ptr [rcx], 0 ; call 0x20000053c69
0x00000200000f73a3 : add byte ptr [rax], al ; bt r8d, eax ; jae 0x200000f73b4 ; ret
0x00000200001a53e7 : add byte ptr [rax], al ; bts dword ptr [rax + 0x40], 9 ; ret
0x00000200003da299 : add byte ptr [rax], al ; call 0x20000002295
0x00000200001d3832 : add byte ptr [rax], al ; call 0x20000016789
0x00000200003f472d : add byte ptr [rax], al ; call 0x20000018a05
0x00000200001a8c7f : add byte ptr [rax], al ; call 0x20000020820
0x00000200000c7171 : add byte ptr [rax], al ; call 0x200000333f0
0x00000200003a3d22 : add byte ptr [rax], al ; call 0x2000003fff8
0x0000020000424789 : add byte ptr [rax], al ; call 0x20000045859
0x000002000042a745 : add byte ptr [rax], al ; call 0x20000046a28
0x00000200004241f1 : add byte ptr [rax], al ; call 0x2000004c205
0x0000020000585478 : add byte ptr [rax], al ; call 0x20000051688
0x00000200004248b8 : add byte ptr [rax], al ; call 0x200000516a1
0x0000020000105903 : add byte ptr [rax], al ; call 0x20000051bfc
0x00000200005f5dcb : add byte ptr [rax], al ; call 0x20000052064
0x000002000043a9fe : add byte ptr [rax], al ; call 0x20000053798
0x00000200004d759d : add byte ptr [rax], al ; call 0x20000053850
0x0000020000425c7b : add byte ptr [rax], al ; call 0x20000053bb5
0x0000020000433211 : add byte ptr [rax], al ; call 0x20000053c65
0x000002000043425e : add byte ptr [rax], al ; call 0x20000057225
0x00000200006264f8 : add byte ptr [rax], al ; call 0x20000057228
0x0000020000433daa : add byte ptr [rax], al ; call 0x20000059935
0x0000020000434827 : add byte ptr [rax], al ; call 0x2000005ab15
0x0000020000438077 : add byte ptr [rax], al ; call 0x2000005d401
0x00000200001a595d : add byte ptr [rax], al ; call 0x20000061c24
0x000002000006004b : add byte ptr [rax], al ; call 0x20000061c28
0x000002000048ad95 : add byte ptr [rax], al ; call 0x20000067010
0x0000020000441865 : add byte ptr [rax], al ; call 0x20000071475
0x00000200005f3126 : add byte ptr [rax], al ; call 0x2000007f3d4
0x00000200005f32f9 : add byte ptr [rax], al ; call 0x2000007f564
0x0000020000664014 : add byte ptr [rax], al ; call 0x2000008aff9
0x0000020000475d2e : add byte ptr [rax], al ; call 0x200000a4fb5
0x0000020000492f9a : add byte ptr [rax], al ; call 0x200000b8095
0x00000200005b9331 : add byte ptr [rax], al ; call 0x200000b8098
0x0000020000496b69 : add byte ptr [rax], al ; call 0x200000b8825
0x0000020000497268 : add byte ptr [rax], al ; call 0x200000b8c45
0x0000020000492e06 : add byte ptr [rax], al ; call 0x200000b8ce9
0x0000020000494dc9 : add byte ptr [rax], al ; call 0x200000ba7b1
0x0000020000497b41 : add byte ptr [rax], al ; call 0x200000ba84d
0x0000020000497aaf : add byte ptr [rax], al ; call 0x200000bb219
0x000002000049249f : add byte ptr [rax], al ; call 0x200000bc285
0x000002000049a1fc : add byte ptr [rax], al ; call 0x200000bc565
0x0000020000499ac2 : add byte ptr [rax], al ; call 0x200000bc7b5
0x000002000048e3c2 : add byte ptr [rax], al ; call 0x200000bccc5
0x000002000049df72 : add byte ptr [rax], al ; call 0x200000bf965
0x000002000049df35 : add byte ptr [rax], al ; call 0x200000bf975
0x0000020000498f01 : add byte ptr [rax], al ; call 0x200000c1b35
0x00000200004997cf : add byte ptr [rax], al ; call 0x200000c1e65
0x000002000049a0c0 : add byte ptr [rax], al ; call 0x200000c2545
0x0000020000014344 : add byte ptr [rax], al ; call 0x200000c2b98
0x000002000049d9cc : add byte ptr [rax], al ; call 0x200000c2d15
0x00000200004a24ea : add byte ptr [rax], al ; call 0x200000c2de5
0x00000200004299d1 : add byte ptr [rax], al ; call 0x200000c5ca4
0x00000200003eb732 : add byte ptr [rax], al ; call 0x200000c7a24
0x000002000049cb65 : add byte ptr [rax], al ; call 0x200000c7a25
0x00000200000d521b : add byte ptr [rax], al ; call 0x200000d1504
0x00000200004b277e : add byte ptr [rax], al ; call 0x200000e24c5
0x00000200004c1ae4 : add byte ptr [rax], al ; call 0x200000e5c45
0x00000200004c1c04 : add byte ptr [rax], al ; call 0x200000e7885
0x000002000044a34f : add byte ptr [rax], al ; call 0x200000e8158
0x00000200004c3012 : add byte ptr [rax], al ; call 0x200000e9de5
0x00000200004c49d3 : add byte ptr [rax], al ; call 0x200000ebe75
0x00000200004ca140 : add byte ptr [rax], al ; call 0x200000ee7b5
0x00000200004cb417 : add byte ptr [rax], al ; call 0x200000eef95
0x00000200004caf84 : add byte ptr [rax], al ; call 0x200000eefad
0x0000020000201509 : add byte ptr [rax], al ; call 0x200000fd804
0x00000200004ec68b : add byte ptr [rax], al ; call 0x2000011707d
0x0000020000519202 : add byte ptr [rax], al ; call 0x200001403e5
0x0000020000512e0e : add byte ptr [rax], al ; call 0x20000140485
0x00000200005138aa : add byte ptr [rax], al ; call 0x20000140545
0x000002000051b6f2 : add byte ptr [rax], al ; call 0x20000140865
0x00000200001ae5de : add byte ptr [rax], al ; call 0x2000014a8e4
0x0000020000673254 : add byte ptr [rax], al ; call 0x2000014f4c4
0x000002000051fee8 : add byte ptr [rax], al ; call 0x2000014f4c5
0x000002000064dfce : add byte ptr [rax], al ; call 0x2000014f4c6
0x00000200001a4576 : add byte ptr [rax], al ; call 0x200001b07f8
0x000002000058c72f : add byte ptr [rax], al ; call 0x200001ba3dd
0x00000200005642fd : add byte ptr [rax], al ; call 0x200001c05e4
0x00000200005afda4 : add byte ptr [rax], al ; call 0x200001cbfec
0x00000200005c1495 : add byte ptr [rax], al ; call 0x200001e1725
0x00000200006caef8 : add byte ptr [rax], al ; call 0x20000207118
0x00000200006baf26 : add byte ptr [rax], al ; call 0x2000020711d
0x00000200005e18c0 : add byte ptr [rax], al ; call 0x2000020f3ad
0x00000200002059db : add byte ptr [rax], al ; call 0x20000231ce4
0x0000020000608135 : add byte ptr [rax], al ; call 0x20000231ce5
0x000002000039f469 : add byte ptr [rax], al ; call 0x2000039f3f9
0x00000200003a5301 : add byte ptr [rax], al ; call 0x200003a2cc8
0x0000020000595213 : add byte ptr [rax], al ; call 0x200003b14a4
0x00000200005a017e : add byte ptr [rax], al ; call 0x2000043c474
0x0000020000487c26 : add byte ptr [rax], al ; call 0x20000443ed4
0x00000200004b1ef8 : add byte ptr [rax], al ; call 0x2000044e178
0x00000200003e0ec8 : add byte ptr [rax], al ; call 0x200004cd17c
0x0000020000593041 : add byte ptr [rax], al ; call 0x2000050f310
0x00000200006a8e2b : add byte ptr [rax], al ; call 0x200006b509c
0x000002000051cc8b : add byte ptr [rax], al ; call 0x20000758ee8
0x000002000039dd59 : add byte ptr [rax], al ; call qword ptr [r15]
0x0000020000061715 : add byte ptr [rax], al ; call qword ptr [rax]
0x0000020000147ed7 : add byte ptr [rax], al ; call qword ptr [rip + 0xec251]
0x000002000014e19e : add byte ptr [rax], al ; call r10
0x00000200001c41fc : add byte ptr [rax], al ; call r12
0x00000200004dee7b : add byte ptr [rax], al ; call r14
0x00000200005cfe63 : add byte ptr [rax], al ; call r15
0x000002000051e22d : add byte ptr [rax], al ; call r8
0x00000200001abd08 : add byte ptr [rax], al ; call r9
0x000002000011f993 : add byte ptr [rax], al ; call rax
0x00000200006b6f81 : add byte ptr [rax], al ; call rcx
0x000002000011750e : add byte ptr [rax], al ; call rdi
0x000002000008298a : add byte ptr [rax], al ; call rsi
0x000002000010de5b : add byte ptr [rax], al ; cld ; ret
0x0000020000146f53 : add byte ptr [rax], al ; cli ; add rsp, 8 ; ret
0x0000020000036cb7 : add byte ptr [rax], al ; cmove eax, r8d ; ret
0x00000200004ccfbb : add byte ptr [rax], al ; cmove ebx, r15d ; call 0x200000ef4b5
0x00000200006c7a24 : add byte ptr [rax], al ; cmove edx, r9d ; mov dword ptr [r8], edx ; ret
0x0000020000517772 : add byte ptr [rax], al ; cmove r8d, eax ; mov eax, r8d ; ret
0x00000200001356f7 : add byte ptr [rax], al ; cmovg eax, ecx ; ret
0x0000020000105157 : add byte ptr [rax], al ; cmovne eax, ecx ; ret
0x00000200003ae4b7 : add byte ptr [rax], al ; cmovne eax, edx ; ret
0x000002000006a037 : add byte ptr [rax], al ; cmp al, 2 ; je 0x2000006a044 ; ret
0x000002000006a037 : add byte ptr [rax], al ; cmp al, 2 ; je 0x2000006a047 ; ret
0x000002000009b3f2 : add byte ptr [rax], al ; cmp cl, 0xc0 ; je 0x2000009b416 ; xor eax, eax ; ret
0x000002000004f6c0 : add byte ptr [rax], al ; cmp cl, dl ; mov eax, ecx ; cmovg eax, edx ; jmp 0x2000004f6d6
0x00000200001f6340 : add byte ptr [rax], al ; cmp cx, ax ; jae 0x200001f6353 ; xor al, al ; ret
0x00000200005f1ea6 : add byte ptr [rax], al ; cmp dword ptr [rdx], ecx ; cmove eax, r8d ; ret
0x000002000048218d : add byte ptr [rax], al ; cmp eax, 1 ; je 0x2000048219c ; ret
0x00000200000e2cd9 : add byte ptr [rax], al ; cmp eax, edx ; ja 0x200000e2cea ; mov al, 1 ; ret
0x00000200004193de : add byte ptr [rax], al ; cmp eax, r8d ; jne 0x200004193d3 ; xor eax, eax ; ret
0x00000200000ef7f0 : add byte ptr [rax], al ; cmp ecx, 0x12 ; jae 0x200000ef803 ; mov al, 1 ; ret
0x000002000047cd97 : add byte ptr [rax], al ; cmp ecx, 4 ; jne 0x2000047cdaa ; xor eax, eax ; ret
0x000002000047cd7a : add byte ptr [rax], al ; cmp edx, eax ; cmovb edx, eax ; mov eax, edx ; ret
0x0000020000053c97 : add byte ptr [rax], al ; cmp qword ptr [rax], rax ; je 0x20000053c98 ; mov al, 1 ; ret
0x00000200005dfc08 : add byte ptr [rax], al ; cmp r10d, ecx ; jae 0x200005dfc1b ; mov al, 1 ; ret
0x000002000066bd4f : add byte ptr [rax], al ; cmp r8d, r9d ; jb 0x2000066bd1e ; jmp 0x2000066bd61
0x00000200000c2c75 : add byte ptr [rax], al ; cmp rax, rcx ; jbe 0x200000c2c88 ; xor eax, eax ; ret
0x00000200001468a4 : add byte ptr [rax], al ; cmp rcx, rdx ; jb 0x20000146867 ; ret
0x000002000013cfe7 : add byte ptr [rax], al ; cmp rcx, rdx ; sete al ; ret
0x00000200000344b6 : add byte ptr [rax], al ; cmp rdx, rcx ; ja 0x200000344c9 ; sbb eax, eax ; ret
0x0000020000788c66 : add byte ptr [rax], al ; cwde ; ret
0x00000200000ba057 : add byte ptr [rax], al ; dec byte ptr [rax - 0x75] ; ret
0x00000200001035ed : add byte ptr [rax], al ; dec dword ptr [rax - 0x75] ; ret 0x2349
0x00000200001cb78b : add byte ptr [rax], al ; dec qword ptr [rdx + 0xd0] ; ret
0x00000200000c25e7 : add byte ptr [rax], al ; dec word ptr [rax + 0x1e4] ; ret
0x00000200000710a7 : add byte ptr [rax], al ; dec word ptr [rax + 0x1e6] ; ret
0x0000020000143f9e : add byte ptr [rax], al ; fnclex ; wait ; fnstcw word ptr [rcx] ; ret
0x0000020000144586 : add byte ptr [rax], al ; fxsave ptr [rcx] ; add rsp, 0x28 ; ret
0x000002000040df03 : add byte ptr [rax], al ; imul r8, rsi ; call 0x2000003cd21
0x00000200001f4f8d : add byte ptr [rax], al ; inc dword ptr [rcx + 0x244] ; ret
0x00000200006ca964 : add byte ptr [rax], al ; inc dword ptr [rdx + 0x8060] ; ret
0x00000200000d5dcd : add byte ptr [rax], al ; inc eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003f89e0 : add byte ptr [rax], al ; inc edx ; jmp 0x200003f89c4
0x00000200003b7277 : add byte ptr [rax], al ; inc rdx ; jmp 0x200003b7257
0x00000200005a5d91 : add byte ptr [rax], al ; int 0x29
0x00000200004037b3 : add byte ptr [rax], al ; ja 0x2000040380f ; add rsp, 0x38 ; ret
0x000002000041cb96 : add byte ptr [rax], al ; ja 0x2000041cbd2 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004766cf : add byte ptr [rax], al ; ja 0x200004766d8 ; ret
0x00000200004c8100 : add byte ptr [rax], al ; ja 0x200004c810f ; mov al, r8b ; ret
0x000002000012777c : add byte ptr [rax], al ; jb 0x2000012774c ; add rsp, 0x38 ; ret
0x00000200006c7a08 : add byte ptr [rax], al ; jb 0x200006c7a15 ; xor eax, eax ; ret
0x0000020000763e1e : add byte ptr [rax], al ; jb 0x20000763dd0 ; ret
0x000002000076a824 : add byte ptr [rax], al ; jb 0x2000076a817 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000062519e : add byte ptr [rax], al ; jbe 0x2000062518e ; xor eax, eax ; ret
0x000002000003cc7d : add byte ptr [rax], al ; je 0x2000003cc90 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000004b5ac : add byte ptr [rax], al ; je 0x2000004b5bf ; mov eax, 1 ; ret
0x00000200000740dd : add byte ptr [rax], al ; je 0x200000740b7 ; mov al, 1 ; ret
0x0000020000085ed4 : add byte ptr [rax], al ; je 0x20000085ecb ; mov eax, 2 ; ret
0x000002000008c842 : add byte ptr [rax], al ; je 0x2000008c7e5 ; lea rcx, qword ptr [rsp + 0x40] ; call rax
0x00000200000c190c : add byte ptr [rax], al ; je 0x200000c18ef ; mov al, 1 ; ret
0x00000200000d39cc : add byte ptr [rax], al ; je 0x200000d39c0 ; mov eax, 2 ; ret
0x00000200000dc54a : add byte ptr [rax], al ; je 0x200000dc537 ; mov al, 1 ; ret
0x00000200000eef9e : add byte ptr [rax], al ; je 0x200000eefab ; mov al, 1 ; ret
0x00000200001479fc : add byte ptr [rax], al ; je 0x20000147a0b ; call 0x200001c3c3a
0x000002000017d641 : add byte ptr [rax], al ; je 0x2000017d62f ; mov rax, rcx ; ret
0x00000200001d7313 : add byte ptr [rax], al ; je 0x200001d7328 ; mov r14, rbx ; mov r8d, r10d ; jmp 0x200001d7332
0x0000020000205dc8 : add byte ptr [rax], al ; je 0x20000205ddb ; mov eax, 0x30 ; ret
0x00000200003ddfff : add byte ptr [rax], al ; je 0x200003de010 ; add rsp, 0x28 ; ret
0x000002000041cb0c : add byte ptr [rax], al ; je 0x2000041cb19 ; xor eax, eax ; ret
0x000002000046cf92 : add byte ptr [rax], al ; je 0x2000046cf9b ; ret
0x0000020000485e5f : add byte ptr [rax], al ; je 0x20000485e54 ; mov al, 1 ; ret
0x00000200004df73d : add byte ptr [rax], al ; je 0x200004df74a ; mov al, 1 ; ret
0x00000200004c39c4 : add byte ptr [rax], al ; je 0x200005c51bc ; ret
0x000002000063cfaa : add byte ptr [rax], al ; je 0x2000063cfb8 ; and eax, 0x1f ; ret
0x00000200006c2e89 : add byte ptr [rax], al ; je 0x200006c2e9c ; mov eax, 1 ; ret
0x00000200007856da : add byte ptr [rax], al ; je 0x200007856ef ; or eax, 0xffffffff ; ret
0x00000200000ef55a : add byte ptr [rax], al ; jg 0x200000ef57f ; mov eax, 1 ; ret
0x0000020000600099 : add byte ptr [rax], al ; jg 0x200006000a6 ; mov al, 1 ; ret
0x00000200000ef513 : add byte ptr [rax], al ; jl 0x200000ef526 ; mov eax, 1 ; ret
0x0000020000017d29 : add byte ptr [rax], al ; jmp 0x200000179e1
0x0000020000022031 : add byte ptr [rax], al ; jmp 0x20000021ea3
0x0000020000161baa : add byte ptr [rax], al ; jmp 0x2000002ddd7
0x000002000003f7d8 : add byte ptr [rax], al ; jmp 0x2000003f7a1
0x0000020000045990 : add byte ptr [rax], al ; jmp 0x2000004595a
0x000002000004d5de : add byte ptr [rax], al ; jmp 0x2000004d57f
0x000002000005064b : add byte ptr [rax], al ; jmp 0x20000050614
0x000002000005ecac : add byte ptr [rax], al ; jmp 0x2000005ec75
0x0000020000063a08 : add byte ptr [rax], al ; jmp 0x20000063923
0x000002000017c6d9 : add byte ptr [rax], al ; jmp 0x2000006b2de
0x000002000006c2d2 : add byte ptr [rax], al ; jmp 0x2000006c3d9
0x000002000006e919 : add byte ptr [rax], al ; jmp 0x2000006d14b
0x00000200000825fd : add byte ptr [rax], al ; jmp 0x2000008258e
0x000002000009cdcb : add byte ptr [rax], al ; jmp 0x2000009cc7a
0x000002000018b2e9 : add byte ptr [rax], al ; jmp 0x200000a74f6
0x00000200000b66e9 : add byte ptr [rax], al ; jmp 0x200000b63c8
0x00000200000b8a24 : add byte ptr [rax], al ; jmp 0x200000b8950
0x0000020000196877 : add byte ptr [rax], al ; jmp 0x200000d4042
0x0000020000199158 : add byte ptr [rax], al ; jmp 0x200000e01b7
0x00000200000ea1f4 : add byte ptr [rax], al ; jmp 0x200000ea794
0x0000020000110db4 : add byte ptr [rax], al ; jmp 0x20000110d08
0x0000020000134db1 : add byte ptr [rax], al ; jmp 0x20000134d6b
0x000002000013b22f : add byte ptr [rax], al ; jmp 0x2000013b175
0x0000020000141b97 : add byte ptr [rax], al ; jmp 0x2000014de84
0x00000200001a134f : add byte ptr [rax], al ; jmp 0x200001a1319
0x00000200001c4cf5 : add byte ptr [rax], al ; jmp 0x200001c4cde
0x00000200001cbe4f : add byte ptr [rax], al ; jmp 0x200001cbf5d
0x00000200001d09bc : add byte ptr [rax], al ; jmp 0x200001d0b99
0x00000200001e228b : add byte ptr [rax], al ; jmp 0x200001e2329
0x0000020000560e3d : add byte ptr [rax], al ; jmp 0x200003bd053
0x00000200003c5d94 : add byte ptr [rax], al ; jmp 0x200003c5d5d
0x0000020000564a19 : add byte ptr [rax], al ; jmp 0x200003ce85c
0x00000200003d4b58 : add byte ptr [rax], al ; jmp 0x200003d4b22
0x00000200003f1dd5 : add byte ptr [rax], al ; jmp 0x200003f1d64
0x0000020000405d78 : add byte ptr [rax], al ; jmp 0x20000405d42
0x000002000059ae1a : add byte ptr [rax], al ; jmp 0x2000042bda8
0x000002000043926e : add byte ptr [rax], al ; jmp 0x20000439237
0x0000020000441829 : add byte ptr [rax], al ; jmp 0x20000441918
0x000002000049a3ac : add byte ptr [rax], al ; jmp 0x2000049a3d2
0x00000200004a98fc : add byte ptr [rax], al ; jmp 0x200004a9551
0x00000200004b9be1 : add byte ptr [rax], al ; jmp 0x200004b9bab
0x000002000052e91a : add byte ptr [rax], al ; jmp 0x2000052e900
0x000002000056307e : add byte ptr [rax], al ; jmp 0x20000563095
0x0000020000563861 : add byte ptr [rax], al ; jmp 0x20000563878
0x00000200005887cb : add byte ptr [rax], al ; jmp 0x200005887e9
0x00000200005bd500 : add byte ptr [rax], al ; jmp 0x200005be0a7
0x0000020000641c2d : add byte ptr [rax], al ; jmp 0x20000641bf7
0x000002000064ed5c : add byte ptr [rax], al ; jmp 0x2000064ed96
0x00000200006881b1 : add byte ptr [rax], al ; jmp 0x200006881bf
0x0000020000775531 : add byte ptr [rax], al ; jmp 0x2000077553f
0x000002000014dc34 : add byte ptr [rax], al ; jmp r11
0x0000020000230bb3 : add byte ptr [rax], al ; jmp r8
0x000002000013febe : add byte ptr [rax], al ; jmp rax
0x0000020000146440 : add byte ptr [rax], al ; jmp rcx
0x0000020000149217 : add byte ptr [rax], al ; jmp rdx
0x00000200000302b6 : add byte ptr [rax], al ; jne 0x200000302c9 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003cd23 : add byte ptr [rax], al ; jne 0x2000003cd34 ; shl rax, 0x14 ; ret
0x000002000005ac4b : add byte ptr [rax], al ; jne 0x2000005ac67 ; mov qword ptr [r9], rax ; mov eax, r10d ; ret
0x000002000005d0a8 : add byte ptr [rax], al ; jne 0x2000005d0db ; ret
0x0000020000066816 : add byte ptr [rax], al ; jne 0x20000066829 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000006a018 : add byte ptr [rax], al ; jne 0x2000006a02b ; mov eax, 1 ; ret
0x00000200000740ad : add byte ptr [rax], al ; jne 0x20000074104 ; xor al, al ; ret
0x000002000007b9b9 : add byte ptr [rax], al ; jne 0x2000007b9c2 ; ret
0x000002000009a550 : add byte ptr [rax], al ; jne 0x2000009a574 ; ret
0x00000200000c193a : add byte ptr [rax], al ; jne 0x200000c1947 ; mov al, 1 ; ret
0x00000200000e267f : add byte ptr [rax], al ; jne 0x200000e2688 ; ret
0x00000200000f5139 : add byte ptr [rax], al ; jne 0x200000f5142 ; ret
0x0000020000117633 : add byte ptr [rax], al ; jne 0x20000117646 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011b741 : add byte ptr [rax], al ; jne 0x2000011b754 ; mov eax, 1 ; ret
0x000002000014e198 : add byte ptr [rax], al ; jne 0x2000014e3fe ; call r10
0x00000200001b9d3e : add byte ptr [rax], al ; jne 0x200001b9d4b ; xor al, al ; ret
0x00000200001c9755 : add byte ptr [rax], al ; jne 0x200001c9767 ; mov eax, 1 ; ret
0x00000200003f89da : add byte ptr [rax], al ; jne 0x200003f8ac6 ; inc edx ; jmp 0x200003f89ca
0x000002000044d2d8 : add byte ptr [rax], al ; jne 0x2000044d2c5 ; xor eax, eax ; ret
0x00000200004790d8 : add byte ptr [rax], al ; jne 0x20000479123 ; ret
0x00000200004a3418 : add byte ptr [rax], al ; jne 0x200004a3428 ; call 0x200000d2307
0x00000200004a4e6c : add byte ptr [rax], al ; jne 0x200004a4e7c ; call 0x200000d2307
0x00000200004bfb98 : add byte ptr [rax], al ; jne 0x200004bfbab ; add rsp, 0x70 ; pop rbx ; ret
0x00000200004379b7 : add byte ptr [rax], al ; jne 0x2000059d916 ; ret
0x000002000062a9f7 : add byte ptr [rax], al ; jne 0x2000062a9b2 ; inc rdx ; jmp 0x2000062aa36
0x00000200001b3337 : add byte ptr [rax], al ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x00000200001d764d : add byte ptr [rax], al ; lea ecx, dword ptr [rdx - 0x4c] ; call 0x20000143947
0x0000020000507bcf : add byte ptr [rax], al ; lea edx, dword ptr [r15 + 0x5c] ; call 0x200001356ad
0x00000200005c764d : add byte ptr [rax], al ; lea edx, dword ptr [r9 + 4] ; call 0x20000143948
0x000002000014f577 : add byte ptr [rax], al ; lea r11, qword ptr [r11 + r9*4] ; jmp r11
0x0000020000157568 : add byte ptr [rax], al ; lea r15d, dword ptr [rdx + 0x1f] ; jmp 0x20000003850
0x000002000040c154 : add byte ptr [rax], al ; lea r8, qword ptr [rsp + 0x40] ; call r10
0x00000200006921a7 : add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 1] ; call rdi
0x00000200006929d1 : add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 2] ; call rdi
0x00000200004dd9a3 : add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 3] ; call rdi
0x000002000069143c : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 0xb] ; call rsi
0x0000020000691deb : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 1] ; call rdi
0x0000020000690c77 : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 2] ; call rdi
0x00000200004d39d4 : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 6] ; call rsi
0x0000020000692af3 : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 7] ; call rdi
0x000002000046896c : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 8] ; call rsi
0x000002000069385a : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 9] ; call r14
0x0000020000690ebd : add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 9] ; call rdi
0x00000200006baeb3 : add byte ptr [rax], al ; lea r8d, dword ptr [rdx - 0xe] ; call 0x2000020711c
0x0000020000148e60 : add byte ptr [rax], al ; lea r9, qword ptr [r9 + rdx*4] ; jmp r9
0x00000200004ad05a : add byte ptr [rax], al ; lea rax, qword ptr [rax + rdx*4] ; ret
0x00000200000064c8 : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x2f67af] ; ret
0x00000200006534f3 : add byte ptr [rax], al ; lea rax, qword ptr [rip - 0x382724] ; ret
0x0000020000653501 : add byte ptr [rax], al ; lea rax, qword ptr [rip - 0x38275a] ; ret
0x00000200006534d7 : add byte ptr [rax], al ; lea rax, qword ptr [rip - 0x382760] ; ret
0x00000200006534e5 : add byte ptr [rax], al ; lea rax, qword ptr [rip - 0x3827a6] ; ret
0x00000200006534c9 : add byte ptr [rax], al ; lea rax, qword ptr [rip - 0x3827ca] ; ret
0x00000200006534bb : add byte ptr [rax], al ; lea rax, qword ptr [rip - 0x3827d4] ; ret
0x0000020000143f7e : add byte ptr [rax], al ; lea rax, qword ptr [rsp + 8] ; ret
0x00000200004a0e2d : add byte ptr [rax], al ; lea rcx, qword ptr [r14 + 0x30] ; call 0x200000c1b39
0x000002000049cb53 : add byte ptr [rax], al ; lea rcx, qword ptr [r15 + 0x30] ; call 0x200000c1b39
0x00000200004987b7 : add byte ptr [rax], al ; lea rcx, qword ptr [rbp + 0x40] ; call 0x200000bcd29
0x00000200001ea19b : add byte ptr [rax], al ; lea rcx, qword ptr [rbp + 0x68] ; call 0x200000d6408
0x00000200005152f0 : add byte ptr [rax], al ; lea rcx, qword ptr [rbp - 0x40] ; call 0x200001392b5
0x0000020000593cce : add byte ptr [rax], al ; lea rcx, qword ptr [rbp - 0x40] ; call 0x200001bd361
0x00000200004edcf3 : add byte ptr [rax], al ; lea rcx, qword ptr [rbp - 0x48] ; call 0x20000117ea9
0x00000200004e9509 : add byte ptr [rax], al ; lea rcx, qword ptr [rbp - 0x50] ; call 0x200004c5758
0x0000020000146439 : add byte ptr [rax], al ; lea rcx, qword ptr [rip + 0x7d69] ; jmp rcx
0x0000020000498eb2 : add byte ptr [rax], al ; lea rcx, qword ptr [rsi + 0x28] ; call 0x200000c1b39
0x000002000049dbb7 : add byte ptr [rax], al ; lea rcx, qword ptr [rsi + 0x30] ; call 0x200000c1b39
0x000002000045bb8e : add byte ptr [rax], al ; lea rcx, qword ptr [rsi + 0x70] ; call 0x200000895e9
0x00000200005c056b : add byte ptr [rax], al ; lea rcx, qword ptr [rsp + 0x3c] ; call 0x200001ec845
0x00000200005143c0 : add byte ptr [rax], al ; lea rdx, qword ptr [rbp - 0x11] ; call 0x20000140489
0x0000020000514606 : add byte ptr [rax], al ; lea rdx, qword ptr [rbp - 0x80] ; call 0x20000140489
0x000002000019e277 : add byte ptr [rax], al ; lea rdx, qword ptr [rbx + 0x1e0] ; call rax
0x00000200001b3037 : add byte ptr [rax], al ; lea rdx, qword ptr [rsp + 0x28] ; mov cl, bl ; call rax
0x00000200000aa776 : add byte ptr [rax], al ; lock add byte ptr [rax + 0x33], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x00000200003a2926 : add byte ptr [rax], al ; lock inc dword ptr [r8] ; ret
0x0000020000108f4f : add byte ptr [rax], al ; lock inc dword ptr [rax + 0x200] ; ret
0x00000200006b0707 : add byte ptr [rax], al ; lock xadd qword ptr [rcx], rax ; ret
0x000002000044773b : add byte ptr [rax], al ; loopne 0x200004476ce ; ret 0x8b49
0x00000200001f726c : add byte ptr [rax], al ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003a6a29 : add byte ptr [rax], al ; mov al, 1 ; ret
0x00000200000389d8 : add byte ptr [rax], al ; mov al, byte ptr [rax + 0x22] ; and al, 1 ; ret
0x00000200000421fb : add byte ptr [rax], al ; mov al, byte ptr [rax + 0x232] ; ret
0x00000200001f63ff : add byte ptr [rax], al ; mov al, cl ; add rsp, 0x28 ; ret
0x00000200001ad35d : add byte ptr [rax], al ; mov al, cl ; ret
0x00000200001e24df : add byte ptr [rax], al ; mov al, dl ; add rsp, 0x28 ; ret
0x0000020000216a23 : add byte ptr [rax], al ; mov al, r11b ; ret
0x000002000011c509 : add byte ptr [rax], al ; mov al, r8b ; ret
0x000002000005034c : add byte ptr [rax], al ; mov al, r9b ; add rsp, 0x28 ; ret
0x00000200000c0735 : add byte ptr [rax], al ; mov byte ptr [r9 + 0x6c8], al ; ret
0x0000020000129cea : add byte ptr [rax], al ; mov byte ptr [r9 + 5], r11b ; ret
0x0000020000066fff : add byte ptr [rax], al ; mov byte ptr [rcx + 0x318], 0x3f ; ret
0x000002000044c6a5 : add byte ptr [rax], al ; mov byte ptr [rdi + 0x18], r15b ; call 0x200000706f5
0x00000200003a4edd : add byte ptr [rax], al ; mov byte ptr [rip - 0x7433a], 1 ; ret
0x00000200001a3f7b : add byte ptr [rax], al ; mov byte ptr [rsp + 0x20], al ; call r8
0x00000200005bc8ed : add byte ptr [rax], al ; mov cl, 0x10 ; call rax
0x00000200005bb533 : add byte ptr [rax], al ; mov cl, 0x11 ; call rax
0x00000200005a1de7 : add byte ptr [rax], al ; mov cl, 0x12 ; call rax
0x000002000058071c : add byte ptr [rax], al ; mov cl, 0x13 ; call r10
0x00000200005806c7 : add byte ptr [rax], al ; mov cl, 0x13 ; call rax
0x00000200005c2d43 : add byte ptr [rax], al ; mov cl, 0x14 ; call rax
0x00000200005a16fb : add byte ptr [rax], al ; mov cl, 0xa ; call r10
0x00000200005a1b70 : add byte ptr [rax], al ; mov cl, 0xb ; call r10
0x00000200005a1aa5 : add byte ptr [rax], al ; mov cl, 0xb ; call rax
0x00000200005bc61c : add byte ptr [rax], al ; mov cl, 0xd ; call rax
0x00000200005b7d57 : add byte ptr [rax], al ; mov cl, 0xe ; call rax
0x000002000055effd : add byte ptr [rax], al ; mov cl, 0xf ; call rax
0x0000020000455668 : add byte ptr [rax], al ; mov cl, 1 ; call 0x20000082373
0x00000200006c49fa : add byte ptr [rax], al ; mov cl, dil ; mov rbx, rax ; call rsi
0x000002000005382b : add byte ptr [rax], al ; mov cr8, rcx ; ret
0x000002000049fca9 : add byte ptr [rax], al ; mov dl, 1 ; call 0x200000c0797
0x000002000010df30 : add byte ptr [rax], al ; mov dword ptr [r8 + 0xc], ecx ; ret
0x000002000004a63c : add byte ptr [rax], al ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x00000200006b79d8 : add byte ptr [rax], al ; mov dword ptr [rax + 4], edx ; add rsp, 0x28 ; ret
0x00000200000464f9 : add byte ptr [rax], al ; mov dword ptr [rbp - 0x10], eax ; call 0x200000b27d7
0x0000020000609eda : add byte ptr [rax], al ; mov dword ptr [rbp - 0x71], eax ; call 0x20000231ce8
0x00000200000f707c : add byte ptr [rax], al ; mov dword ptr [rbx + 0x30], eax ; jmp 0x200000f704c
0x0000020000015dce : add byte ptr [rax], al ; mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001aee36 : add byte ptr [rax], al ; mov dword ptr [rbx], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000546062 : add byte ptr [rax], al ; mov dword ptr [rcx + 0x14], eax ; ret
0x00000200005ed486 : add byte ptr [rax], al ; mov dword ptr [rcx + 0x18], eax ; ret
0x00000200005969c5 : add byte ptr [rax], al ; mov dword ptr [rcx + 0xa0], r8d ; ret
0x00000200006c1f21 : add byte ptr [rax], al ; mov dword ptr [rcx + 0xf8], eax ; ret
0x000002000059e539 : add byte ptr [rax], al ; mov dword ptr [rcx + r8], eax ; inc edx ; jmp 0x2000059e51d
0x00000200001f795b : add byte ptr [rax], al ; mov dword ptr [rdx + 0x194], eax ; ret
0x0000020000019a88 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200006bb93d : add byte ptr [rax], al ; mov dword ptr [rip + 0x2276b], ecx ; ret
0x00000200003d2ac8 : add byte ptr [rax], al ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000206695 : add byte ptr [rax], al ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, rdi ; call rax
0x000002000060e65c : add byte ptr [rax], al ; mov dword ptr [rsp + 0x70], eax ; call 0x20000231ce9
0x00000200001063ae : add byte ptr [rax], al ; mov eax, 0xc0000001 ; ret
0x000002000001c1ef : add byte ptr [rax], al ; mov eax, 0xc0000002 ; ret
0x00000200005208f5 : add byte ptr [rax], al ; mov eax, 0xc000000d ; ret
0x00000200001b8aa4 : add byte ptr [rax], al ; mov eax, 0xc0000022 ; ret
0x00000200005fd125 : add byte ptr [rax], al ; mov eax, 0xc0000032 ; ret
0x00000200001cb94d : add byte ptr [rax], al ; mov eax, 0xc000007b ; ret
0x0000020000506d53 : add byte ptr [rax], al ; mov eax, 0xc00000bb ; ret
0x0000020000413143 : add byte ptr [rax], al ; mov eax, 0xc00000e7 ; ret
0x00000200005fd0b5 : add byte ptr [rax], al ; mov eax, 0xc0000206 ; ret
0x0000020000431318 : add byte ptr [rax], al ; mov eax, 0xc0000225 ; ret
0x00000200000df32e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000200001d77ce : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; and rax, rdx ; ret
0x000002000014aadb : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; add rsp, 0x28 ; ret
0x0000020000106f0e : add byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006321cd : add byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000134bf0 : add byte ptr [rax], al ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000085c3f : add byte ptr [rax], al ; mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003dac6 : add byte ptr [rax], al ; mov eax, ecx ; lea rax, qword ptr [rdx + rax*8] ; ret
0x0000020000131ab2 : add byte ptr [rax], al ; mov eax, ecx ; ret
0x00000200003ad58f : add byte ptr [rax], al ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c721b : add byte ptr [rax], al ; mov eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001be0f0 : add byte ptr [rax], al ; mov eax, edx ; jmp 0x200001be0ae
0x00000200001be23e : add byte ptr [rax], al ; mov eax, edx ; jmp 0x200001be25d
0x000002000015a35f : add byte ptr [rax], al ; mov eax, r10d ; jmp 0x2000015a36c
0x00000200001f6647 : add byte ptr [rax], al ; mov eax, r11d ; add rsp, 0x28 ; ret
0x000002000009912e : add byte ptr [rax], al ; mov eax, r8d ; ret
0x00000200006c35ec : add byte ptr [rax], al ; mov eax, r9d ; add rsp, 0x28 ; ret
0x00000200006b5391 : add byte ptr [rax], al ; mov eax, r9d ; ret
0x00000200006b6eaf : add byte ptr [rax], al ; mov ecx, dword ptr [rip - 0x3e6e9b] ; call rax
0x00000200001a58a8 : add byte ptr [rax], al ; mov ecx, edi ; call 0x20000061bb6
0x00000200004ac703 : add byte ptr [rax], al ; mov ecx, r13d ; call 0x200000cf498
0x00000200004eb89f : add byte ptr [rax], al ; mov ecx, r13d ; call 0x20000117080
0x000002000053e21e : add byte ptr [rax], al ; mov edx, 0x100 ; call r14
0x00000200003ae4b2 : add byte ptr [rax], al ; mov edx, 1 ; cmovne eax, edx ; ret
0x0000020000230bae : add byte ptr [rax], al ; mov edx, 1 ; jmp r8
0x00000200000f0b62 : add byte ptr [rax], al ; mov edx, ebp ; call rax
0x000002000051da38 : add byte ptr [rax], al ; mov edx, edi ; call 0x200001407e7
0x0000020000512cf4 : add byte ptr [rax], al ; mov edx, r12d ; call 0x200001407e8
0x00000200000f0779 : add byte ptr [rax], al ; mov edx, r15d ; call rax
0x0000020000040d65 : add byte ptr [rax], al ; mov qword ptr [r10], r11 ; ret
0x0000020000111472 : add byte ptr [rax], al ; mov qword ptr [r11 - 0x18], rax ; call r10
0x00000200000d5c8d : add byte ptr [rax], al ; mov qword ptr [r8], rax ; ret
0x00000200004644d4 : add byte ptr [rax], al ; mov qword ptr [r8], rcx ; mov eax, r9d ; ret
0x0000020000040570 : add byte ptr [rax], al ; mov qword ptr [r8], rdx ; ret
0x0000020000211afb : add byte ptr [rax], al ; mov qword ptr [r9 + 0x48], rcx ; xor al, al ; ret
0x0000020000408729 : add byte ptr [rax], al ; mov qword ptr [r9], rcx ; ret
0x0000020000438fe0 : add byte ptr [rax], al ; mov qword ptr [rax + 0x10], r9 ; ret
0x000002000052c8f0 : add byte ptr [rax], al ; mov qword ptr [rax + 0x50], rdx ; ret
0x00000200000bc567 : add byte ptr [rax], al ; mov qword ptr [rax + 0x670], rcx ; ret
0x00000200000ebb27 : add byte ptr [rax], al ; mov qword ptr [rax + 0x740], rcx ; ret
0x00000200000ebe89 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; mov eax, r8d ; ret
0x000002000059413c : add byte ptr [rax], al ; mov qword ptr [rbp + 0x10], r13 ; call 0x200001403e8
0x0000020000225f1d : add byte ptr [rax], al ; mov qword ptr [rbp + 0x38], rsi ; jmp 0x200002221d9
0x0000020000517e7b : add byte ptr [rax], al ; mov qword ptr [rbp - 0x58], r14 ; call 0x20000140c49
0x00000200005ed448 : add byte ptr [rax], al ; mov qword ptr [rcx + 0x18], rax ; ret
0x00000200003ea798 : add byte ptr [rax], al ; mov qword ptr [rcx + 0x2e0], rdx ; ret
0x0000020000516f34 : add byte ptr [rax], al ; mov qword ptr [rcx + 0x408], rcx ; ret
0x0000020000413af4 : add byte ptr [rax], al ; mov qword ptr [rcx + 0x410], rax ; ret
0x00000200001c723f : add byte ptr [rax], al ; mov qword ptr [rcx + 0xb0], rax ; ret
0x0000020000646b30 : add byte ptr [rax], al ; mov qword ptr [rcx + 8], rcx ; ret
0x0000020000025ff0 : add byte ptr [rax], al ; mov qword ptr [rcx], rax ; mov eax, edx ; ret
0x0000020000036122 : add byte ptr [rax], al ; mov qword ptr [rcx], rax ; ret
0x00000200001f7b76 : add byte ptr [rax], al ; mov qword ptr [rdx + 0x378], rax ; ret
0x00000200000ebb42 : add byte ptr [rax], al ; mov qword ptr [rdx + 0x740], rcx ; ret
0x00000200000063ea : add byte ptr [rax], al ; mov qword ptr [rdx + 0xf90], rax ; ret
0x0000020000464029 : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; ret
0x00000200001cd8a0 : add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], r12 ; call 0x20000059b89
0x000002000046908b : add byte ptr [rax], al ; mov qword ptr [rsp + 0x20], rax ; call r11
0x000002000011f7f1 : add byte ptr [rax], al ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x0000020000452f09 : add byte ptr [rax], al ; mov r8, rbx ; mov rcx, r13 ; call rax
0x0000020000579aa7 : add byte ptr [rax], al ; mov r8d, esi ; call 0x200001a6b64
0x000002000001e178 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x1c8] ; ret
0x00000200000424a3 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x220] ; ret
0x00000200005f8cbf : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x28] ; ret
0x00000200001f0a73 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000200001f0a63 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; ret
0x0000020000022c4e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x3a8] ; ret
0x00000200001cd11e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x480] ; ret
0x00000200000442e7 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x628] ; ret
0x000002000002f887 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x630] ; ret
0x0000020000022657 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x670] ; ret
0x000002000040703a : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x678] ; ret
0x000002000001aef7 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x740] ; ret
0x0000020000021be7 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0xb8] ; ret
0x0000020000181298 : add byte ptr [rax], al ; mov rax, qword ptr [rax + r9 + 0x30] ; ret
0x00000200000082b7 : add byte ptr [rax], al ; mov rax, qword ptr [rax + rcx] ; ret
0x00000200001c3d33 : add byte ptr [rax], al ; mov rax, qword ptr [rcx + 0x28] ; mov qword ptr [rdx], rax ; ret
0x0000020000070718 : add byte ptr [rax], al ; mov rax, qword ptr [rcx + 0x7b8] ; ret
0x00000200001490fe : add byte ptr [rax], al ; mov rax, qword ptr [rcx + 8] ; and al, 0xf0 ; ret
0x00000200001afb20 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x12294f] ; call rax
0x00000200001ada46 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x124a29] ; call rax
0x00000200001ab3a7 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x1270c8] ; call rax
0x000002000016d658 : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x164e17] ; call rax
0x00000200001400aa : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x23e00d] ; call rax
0x00000200006cac54 : add byte ptr [rax], al ; mov rax, r9 ; add rsp, 0x28 ; ret
0x00000200006cacb0 : add byte ptr [rax], al ; mov rax, rcx ; add rsp, 0x28 ; ret
0x0000020000229480 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000022948d
0x000002000022ad14 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000022ad21
0x000002000022ef0d : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000022ef1a
0x000002000073150d : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000073151a
0x0000020000737994 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x200007379a1
0x0000020000737ee5 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000737ef2
0x0000020000738055 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000738062
0x0000020000738501 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000073850e
0x0000020000738a00 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000738a0d
0x0000020000738bc1 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000738bce
0x0000020000738d70 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000738d7d
0x0000020000738ef1 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x20000738efe
0x000002000073b62f : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000073b63c
0x000002000073b79f : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000073b7ac
0x000002000073bf6d : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000073bf7a
0x000002000073c1c1 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000073c1ce
0x000002000073c3cf : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000073c3dc
0x000002000073c5a5 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000073c5b2
0x000002000073c7f0 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000073c7fd
0x000002000073cbe5 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000073cbf2
0x000002000073cd52 : add byte ptr [rax], al ; mov rax, rdx ; jmp 0x2000073cd5f
0x00000200001bc3d1 : add byte ptr [rax], al ; mov rax, rdx ; ret
0x0000020000015378 : add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200006c418b : add byte ptr [rax], al ; mov rbx, rax ; call rdi
0x0000020000452ed3 : add byte ptr [rax], al ; mov rcx, qword ptr [r13 + 0x3e0] ; call rax
0x00000200004cb95a : add byte ptr [rax], al ; mov rcx, qword ptr [rbx + 0x20] ; call 0x200000f83c5
0x000002000010b2dc : add byte ptr [rax], al ; mov rcx, qword ptr [rcx + 8] ; call rax
0x0000020000401717 : add byte ptr [rax], al ; mov rcx, qword ptr [rdi + 8] ; call rax
0x000002000003a4db : add byte ptr [rax], al ; mov rcx, r12 ; call 0x20000016787
0x00000200004241ce : add byte ptr [rax], al ; mov rcx, r12 ; call 0x20000053798
0x000002000049a242 : add byte ptr [rax], al ; mov rcx, r12 ; call 0x200000c1e28
0x000002000049a15a : add byte ptr [rax], al ; mov rcx, r12 ; call 0x200000c2608
0x00000200004947c1 : add byte ptr [rax], al ; mov rcx, r13 ; call 0x200000c1b38
0x000002000049a2ef : add byte ptr [rax], al ; mov rcx, r13 ; call 0x200000c23c8
0x00000200005b8c23 : add byte ptr [rax], al ; mov rcx, r13 ; call 0x200001dadb8
0x0000020000689695 : add byte ptr [rax], al ; mov rcx, r13 ; call 0x2000068590b
0x00000200004d44e8 : add byte ptr [rax], al ; mov rcx, r13 ; call r12
0x00000200005288c1 : add byte ptr [rax], al ; mov rcx, r13 ; call r15
0x000002000049dced : add byte ptr [rax], al ; mov rcx, r14 ; call 0x200000c1b38
0x000002000050e42e : add byte ptr [rax], al ; mov rcx, r14 ; call 0x20000138128
0x000002000046092e : add byte ptr [rax], al ; mov rcx, r14 ; call r10
0x00000200004ac32b : add byte ptr [rax], al ; mov rcx, r14 ; call rax
0x00000200006909af : add byte ptr [rax], al ; mov rcx, r14 ; call rdi
0x0000020000692612 : add byte ptr [rax], al ; mov rcx, r15 ; call r14
0x00000200004d490a : add byte ptr [rax], al ; mov rcx, r15 ; call rdi
0x000002000066be4c : add byte ptr [rax], al ; mov rcx, rax ; call 0x20000138127
0x00000200004a324c : add byte ptr [rax], al ; mov rcx, rax ; call 0x2000014f4c7
0x000002000052e9b4 : add byte ptr [rax], al ; mov rcx, rax ; call 0x2000014f4c8
0x000002000049b109 : add byte ptr [rax], al ; mov rcx, rbp ; call 0x200000bcd18
0x000002000042e0f6 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x2000005abc0
0x000002000042dc95 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x2000005c790
0x00000200006bc20a : add byte ptr [rax], al ; mov rcx, rbx ; call 0x200000684c7
0x00000200004558bb : add byte ptr [rax], al ; mov rcx, rbx ; call 0x200000c1b37
0x00000200004c41bb : add byte ptr [rax], al ; mov rcx, rbx ; call 0x200000e9468
0x00000200004cc071 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x200000ef378
0x00000200005c04b9 : add byte ptr [rax], al ; mov rcx, rbx ; call 0x200001eca30
0x000002000064a57a : add byte ptr [rax], al ; mov rcx, rbx ; call 0x200001f67d7
0x000002000064a56d : add byte ptr [rax], al ; mov rcx, rbx ; call 0x200001f6847
0x000002000052c1f6 : add byte ptr [rax], al ; mov rcx, rbx ; call rax
0x000002000002a553 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x20000016787
0x00000200004c6d45 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x20000052f7b
0x0000020000475a45 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x2000009a488
0x0000020000497a6c : add byte ptr [rax], al ; mov rcx, rdi ; call 0x200000ba7b4
0x000002000049b2dd : add byte ptr [rax], al ; mov rcx, rdi ; call 0x200000bcd18
0x00000200004c34b5 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x200000ea7c8
0x0000020000507198 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x200001356ac
0x000002000051b333 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x20000140488
0x00000200001bf301 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x200006ab607
0x00000200006b61d9 : add byte ptr [rax], al ; mov rcx, rdi ; call 0x200006c2483
0x00000200006ba24a : add byte ptr [rax], al ; mov rcx, rdi ; call rsi
0x00000200006b9059 : add byte ptr [rax], al ; mov rcx, rdi ; mov rsi, rax ; call rbx
0x00000200004239ac : add byte ptr [rax], al ; mov rcx, rsi ; call 0x200000459b0
0x00000200004972fd : add byte ptr [rax], al ; mov rcx, rsi ; call 0x200000b91e8
0x0000020000497f45 : add byte ptr [rax], al ; mov rcx, rsi ; call 0x200000ba9f8
0x000002000049a683 : add byte ptr [rax], al ; mov rcx, rsi ; call 0x200000bc2a8
0x0000020000499298 : add byte ptr [rax], al ; mov rcx, rsi ; call 0x200000c1b38
0x000002000049bf51 : add byte ptr [rax], al ; mov rcx, rsi ; call 0x200000c2848
0x00000200004c6772 : add byte ptr [rax], al ; mov rcx, rsi ; call 0x200000ec310
0x0000020000521663 : add byte ptr [rax], al ; mov rcx, rsi ; call 0x2000014f4c8
0x00000200004d5178 : add byte ptr [rax], al ; mov rcx, rsi ; call r10
0x00000200004633d1 : add byte ptr [rax], al ; mov rcx, rsi ; call rdi
0x00000200001d1f0a : add byte ptr [rax], al ; mov rdx, r10 ; mov rcx, rsi ; call qword ptr [rsi]
0x00000200004970f2 : add byte ptr [rax], al ; mov rdx, rbx ; call 0x200000b8cec
0x0000020000475a82 : add byte ptr [rax], al ; mov rdx, rdi ; call 0x2000009a2d8
0x00000200004a2527 : add byte ptr [rax], al ; mov rdx, rdi ; call 0x200000c2d18
0x0000020000523b21 : add byte ptr [rax], al ; mov rdx, rdi ; call 0x2000014f188
0x00000200005d00f7 : add byte ptr [rax], al ; mov rdx, rdi ; mov rcx, r14 ; call rax
0x00000200005d014f : add byte ptr [rax], al ; mov rdx, rdi ; mov rcx, r15 ; call rax
0x00000200005d018a : add byte ptr [rax], al ; mov rdx, rdi ; mov rcx, rsi ; call r10
0x000002000060ab44 : add byte ptr [rax], al ; mov rdx, rsi ; call 0x20000231ce8
0x0000020000025e7f : add byte ptr [rax], al ; mov word ptr [r10 + 0x10], r9w ; ret
0x000002000060a0f5 : add byte ptr [rax], al ; mov word ptr [rbp - 0x71], ax ; call 0x20000231ce9
0x00000200000459b6 : add byte ptr [rax], al ; mov word ptr [rcx + 0x36], dx ; ret
0x00000200006ab389 : add byte ptr [rax], al ; mov word ptr [rcx + 0xd6], ax ; ret
0x00000200001fc69a : add byte ptr [rax], al ; mov word ptr [rcx], ax ; xor eax, eax ; ret
0x00000200005ed4c7 : add byte ptr [rax], al ; movdqu xmmword ptr [rcx + 0x20], xmm0 ; ret
0x000002000065f0ee : add byte ptr [rax], al ; movdqu xmmword ptr [rcx], xmm0 ; ret
0x0000020000058152 : add byte ptr [rax], al ; movups xmmword ptr [rdx + 0x4c0], xmm1 ; ret
0x00000200000faddc : add byte ptr [rax], al ; movups xmmword ptr [rsp + 0x60], xmm1 ; call 0x20000067099
0x0000020000082317 : add byte ptr [rax], al ; movzx eax, byte ptr [rax + 0x232] ; ret
0x0000020000649589 : add byte ptr [rax], al ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000002cece : add byte ptr [rax], al ; movzx eax, word ptr [rcx + 0x92] ; ret
0x0000020000688293 : add byte ptr [rax], al ; movzx ecx, word ptr [rbx] ; call 0x2000013455f
0x00000200004a1364 : add byte ptr [rax], al ; movzx edx, bl ; call 0x2000043d583
0x00000200001f322d : add byte ptr [rax], al ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001f3274 : add byte ptr [rax], al ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000148b9e : add byte ptr [rax], al ; nop ; ret
0x000002000006c147 : add byte ptr [rax], al ; or bh, bh ; ret
0x00000200006bd7d3 : add byte ptr [rax], al ; or byte ptr [rax + 3], 1 ; xor eax, eax ; ret
0x00000200000b86b0 : add byte ptr [rax], al ; or byte ptr [rax - 0x75], 0x43 ; or byte ptr [rax + 0xb], cl ; ret 0x3b48
0x0000020000082bbe : add byte ptr [rax], al ; or byte ptr [rax - 0x75], 0x59 ; or byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000166e8c : add byte ptr [rax], al ; or byte ptr [rax - 0x7d], cl ; ret 0xe902
0x000002000017c073 : add byte ptr [rax], al ; or byte ptr [rax - 1], cl ; ret 0x7ae9
0x0000020000166e0f : add byte ptr [rax], al ; or byte ptr [rax - 1], cl ; ret 0x9ceb
0x00000200000de6b4 : add byte ptr [rax], al ; or byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0xb948
0x000002000065e8dc : add byte ptr [rax], al ; or byte ptr [rax], al ; call 0x2000005ab16
0x000002000009a483 : add byte ptr [rax], al ; or byte ptr [rax], al ; jne 0x2000009a494 ; xor eax, eax ; ret
0x000002000064066c : add byte ptr [rax], al ; or byte ptr [rax], al ; ret
0x00000200006910ea : add byte ptr [rax], al ; or byte ptr [rbx + 0x10048dc8], 0x85 ; ret 0x1175
0x0000020000690bb7 : add byte ptr [rax], al ; or byte ptr [rbx + 0x10048dc8], 0x85 ; ret 0x975
0x0000020000075ced : add byte ptr [rax], al ; or byte ptr [rbx + rcx - 8], 0xf6 ; ret
0x000002000002a0c2 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x23], cl ; ret 0x8b4c
0x000002000000dc91 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x000002000007e662 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x0000020000062827 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x8949
0x00000200000dde6e : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x894c
0x000002000009839d : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x8b49
0x00000200000d6958 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0xba48
0x00000200000af60d : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 3], cl ; ret
0x0000020000097d33 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 3], cl ; ret 0x894c
0x0000020000079093 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax + 3], cl ; ret 0xba48
0x0000020000744040 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xbf48
0x0000020000024fa6 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000001f3f3 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rbp + 0x23], cl ; ret 0x2b48
0x00000200001dd8f6 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret
0x000002000008bec1 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x00000200000a8b81 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b4c
0x000002000076cf57 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x8349
0x00000200000ddef9 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx + 3], cl ; ret
0x00000200000decf0 : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx + 3], cl ; ret 0x3b48
0x000002000000a62c : add byte ptr [rax], al ; or byte ptr [rcx], 0 ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x0000020000452dc4 : add byte ptr [rax], al ; or byte ptr [rdi], 0x45 ; ret 0x4589
0x00000200003aa8af : add byte ptr [rax], al ; or byte ptr [rdi], 0x83 ; ret 0xffa3
0x00000200006c80d9 : add byte ptr [rax], al ; or byte ptr [rdi], 0x95 ; ret 0xc141
0x0000020000006db5 : add byte ptr [rax], al ; or byte ptr [rdi], cl ; xchg ah, ch ; unpckhps xmm0, xmmword ptr [rax] ; ret
0x00000200001b8355 : add byte ptr [rax], al ; or byte ptr [rdx + rax - 2], dh ; ret 0xf48
0x000002000009ca93 : add byte ptr [rax], al ; or byte ptr [rdx], 0 ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x00000200000e4f13 : add byte ptr [rax], al ; or byte ptr [rdx], 0 ; add byte ptr [rcx + 3], cl ; ret 0x8b4d
0x0000020000579891 : add byte ptr [rax], al ; or cl, ch ; cmc ; pop rax ; call 0x1ffc21a24a4
0x0000020000680a01 : add byte ptr [rax], al ; or dword ptr [rcx + 0x78], edx ; ret
0x0000020000545f87 : add byte ptr [rax], al ; or dword ptr [rcx + 0x98], 1 ; ret
0x000002000001d346 : add byte ptr [rax], al ; or eax, edx ; add dword ptr [rax], eax ; ret 1
0x00000200000385aa : add byte ptr [rax], al ; or word ptr [rcx + 0xa], r8w ; mov eax, edx ; ret
0x000002000013125a : add byte ptr [rax], al ; out dx, eax ; ret
0x000002000008569a : add byte ptr [rax], al ; pop r12 ; pop rbp ; ret
0x000002000050523d : add byte ptr [rax], al ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000615bdd : add byte ptr [rax], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000091f85 : add byte ptr [rax], al ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000453b7c : add byte ptr [rax], al ; pop r12 ; ret
0x000002000008af83 : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000008980e : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rbx ; ret
0x000002000009bdf5 : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000b7f5b : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200004e5946 : add byte ptr [rax], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000c3c5e : add byte ptr [rax], al ; pop r13 ; pop rbx ; pop rbp ; ret
0x00000200000cd3b6 : add byte ptr [rax], al ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000049693b : add byte ptr [rax], al ; pop r13 ; pop rdi ; ret
0x00000200000ab6d3 : add byte ptr [rax], al ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000d2b37 : add byte ptr [rax], al ; pop r13 ; pop rsi ; pop rbx ; ret
0x0000020000757eeb : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rbp ; ret
0x00000200004bf57d : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003dd40b : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000b847b : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200004be5e1 : add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rsi ; ret
0x0000020000134a67 : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200000583ff : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop r12 ; pop rbx ; ret
0x00000200003f3297 : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rbp ; pop rbx ; ret
0x00000200000621ab : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rbp ; ret
0x00000200000860af : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rbx ; ret
0x0000020000497416 : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200004120ed : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000008c5bd : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000e5569 : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000051097a : add byte ptr [rax], al ; pop r14 ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000fdb1 : add byte ptr [rax], al ; pop r14 ; pop rbp ; pop rbx ; ret
0x000002000001c6f2 : add byte ptr [rax], al ; pop r14 ; pop rbp ; ret
0x00000200004c05bd : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000041e31 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000bf190 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbx ; ret
0x0000020000051ba5 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000012c105 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003d6a3 : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001104ad : add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200003dd898 : add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x00000200000d924b : add byte ptr [rax], al ; pop r14 ; pop rsi ; ret
0x00000200001ef533 : add byte ptr [rax], al ; pop r14 ; ret
0x000002000042139a : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000440179 : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000048f030 : add byte ptr [rax], al ; pop r15 ; pop r12 ; pop rsi ; ret
0x00000200000557b3 : add byte ptr [rax], al ; pop r15 ; pop r12 ; ret
0x00000200000a451b : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop r12 ; pop rbp ; ret
0x0000020000091232 : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000081f52 : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rdi ; ret
0x00000200000caaef : add byte ptr [rax], al ; pop r15 ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000451181 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rbp ; ret
0x000002000068ba29 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000010b016 : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000090a3a : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000065fdee : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rdi ; ret
0x000002000044f17a : add byte ptr [rax], al ; pop r15 ; pop r14 ; pop rsi ; ret
0x0000020000017ecc : add byte ptr [rax], al ; pop r15 ; pop rbp ; ret
0x000002000008db35 : add byte ptr [rax], al ; pop r15 ; pop rbx ; pop rcx ; ret
0x00000200000c80e0 : add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rbx ; ret
0x00000200001f48d3 : add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200005f606f : add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000044e039 : add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000009e44a : add byte ptr [rax], al ; pop r15 ; pop rsi ; pop rbp ; ret
0x0000020000495859 : add byte ptr [rax], al ; pop r15 ; pop rsi ; pop rbx ; ret
0x000002000007a5d3 : add byte ptr [rax], al ; pop r15 ; pop rsi ; ret
0x0000020000026f7e : add byte ptr [rax], al ; pop r15 ; ret
0x000002000001b0eb : add byte ptr [rax], al ; pop rbp ; ret
0x00000200000b0e2c : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000002000003508e : add byte ptr [rax], al ; pop rbx ; ret
0x00000200000a2577 : add byte ptr [rax], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000065b408 : add byte ptr [rax], al ; pop rdi ; pop rbx ; ret
0x0000020000052566 : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000000a568 : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000005a257 : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000100f0c : add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000005644 : add byte ptr [rax], al ; pop rdi ; ret
0x0000020000020d95 : add byte ptr [rax], al ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000cd620 : add byte ptr [rax], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000001d5bd : add byte ptr [rax], al ; pop rsi ; ret
0x0000020000404474 : add byte ptr [rax], al ; push rax ; je 0x20000404477 ; or dword ptr [rdx], eax ; ret
0x0000020000143da9 : add byte ptr [rax], al ; rdmsr ; and eax, 0xfffffffc ; wrmsr ; ret
0x0000020000002a96 : add byte ptr [rax], al ; ret
0x00000200006ad46e : add byte ptr [rax], al ; ret 0
0x00000200006a07c6 : add byte ptr [rax], al ; ret 0x405f
0x0000020000790d32 : add byte ptr [rax], al ; ret 0x7905
0x000002000079122e : add byte ptr [rax], al ; ret 0x7916
0x0000020000769513 : add byte ptr [rax], al ; ret 1
0x000002000064b636 : add byte ptr [rax], al ; rol bl, 0x33 ; leave ; jmp rax
0x000002000064b612 : add byte ptr [rax], al ; rol bl, 0x48 ; jmp rax
0x0000020000123826 : add byte ptr [rax], al ; rol bl, 0x48 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000020000126962 : add byte ptr [rax], al ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000506d3d : add byte ptr [rax], al ; rol bl, 0xb8 ; add eax, dword ptr [rax] ; add al, al ; ret
0x00000200005fd212 : add byte ptr [rax], al ; rol bl, 0xb8 ; and al, byte ptr [rax] ; add al, al ; ret
0x00000200003d9e20 : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x200003d9e30 ; add al, al ; ret
0x000002000043eead : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x2000043eebd ; add al, al ; ret
0x00000200004d6a48 : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x200004d6a58 ; add al, al ; ret
0x00000200004d6aa0 : add byte ptr [rax], al ; rol bl, 0xb8 ; jns 0x200004d6ab0 ; add al, al ; ret
0x00000200005fd135 : add byte ptr [rax], al ; rol bl, 0xb8 ; test dword ptr [rcx], eax ; add al, al ; ret
0x0000020000073403 : add byte ptr [rax], al ; rol bl, 0xb8 ; xor al, 0 ; add al, al ; ret
0x000002000014f5eb : add byte ptr [rax], al ; rol bl, 0xcc ; mov eax, ecx ; ret
0x00000200000f31af : add byte ptr [rax], al ; rol byte ptr [rax + rax], 1 ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x0000020000689826 : add byte ptr [rax], al ; rol byte ptr [rbp - 0x77], 8 ; ret
0x0000020000205941 : add byte ptr [rax], al ; rol byte ptr [rcx + 0xf], 0x95 ; ret 0x8341
0x0000020000198ad3 : add byte ptr [rax], al ; rol byte ptr [rcx + rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000a6b9c : add byte ptr [rax], al ; rol byte ptr [rcx + rcx], 0 ; add byte ptr [rcx + 0x23], cl ; ret 0x3349
0x00000200001bfab5 : add byte ptr [rax], al ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x0000020000203513 : add byte ptr [rax], al ; rol byte ptr [rcx - 0x75], 0xc1 ; ret
0x00000200003c342d : add byte ptr [rax], al ; ror byte ptr [rax + 0x4c582444], 0x8b ; ret 0x8949
0x000002000007400e : add byte ptr [rax], al ; ror byte ptr [rax - 0x73], 0x42 ; dec dword ptr [rcx + 0x3b] ; ret 0xf45
0x0000020000693420 : add byte ptr [rax], al ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200003e5fab : add byte ptr [rax], al ; ror byte ptr [rax - 0x75], 0xcf ; call 0x20000013279
0x0000020000636011 : add byte ptr [rax], al ; ror byte ptr [rax - 0x7b], 0xd2 ; je 0x20000636023 ; call rdx
0x00000200001b5326 : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x00000200001f87a9 : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x0000020000053315 : add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000200001ad371 : add byte ptr [rax], al ; ror byte ptr [rbp - 0x7b], 0xc9 ; je 0x200001ad385 ; call r9
0x00000200000586e2 : add byte ptr [rax], al ; ror byte ptr [rcx + 0x4444247c], 0x8b ; ret
0x0000020000595942 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x44 ; ret
0x0000020000622a1b : add byte ptr [rax], al ; ror byte ptr [rdi], 0x44 ; ret 0x189
0x0000020000461886 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x45 ; ret
0x000002000056cdb4 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret
0x000002000057c6d0 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x84 ; ret 0xf623
0x00000200005c8617 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x85 ; ret 0xf071
0x0000020000432077 : add byte ptr [rax], al ; ror byte ptr [rdi], 0x95 ; ret
0x0000020000199cd8 : add byte ptr [rax], al ; sal byte ptr [rbp + 0x41], 0x81 ; call qword ptr [rdi]
0x0000020000186368 : add byte ptr [rax], al ; sal byte ptr [rbp + 0xa], 0xf6 ; ret
0x0000020000691cdb : add byte ptr [rax], al ; sal byte ptr [rbp + 8], 0xff ; ret
0x000002000014f6b3 : add byte ptr [rax], al ; sal byte ptr [rbx], 0xc0 ; ret
0x000002000047ea2d : add byte ptr [rax], al ; sal byte ptr [rcx + 0x49], 0x8b ; ret
0x0000020000166093 : add byte ptr [rax], al ; sal byte ptr [rcx + rbp + 0x41], 0x81 ; call qword ptr [rdi]
0x000002000020e075 : add byte ptr [rax], al ; sal byte ptr [rcx + rsi - 0x75], 5 ; cwde ; call qword ptr [rsi]
0x00000200000e42e6 : add byte ptr [rax], al ; sal byte ptr [rdi + 0x41], 0x81 ; call qword ptr [rdi]
0x00000200000733f3 : add byte ptr [rax], al ; sal byte ptr [rdi + rcx - 0x75], 0xc1 ; ret
0x000002000002f700 : add byte ptr [rax], al ; sar byte ptr [rbx], 0xc1 ; ja 0x2000002f70f ; ret
0x00000200000503ce : add byte ptr [rax], al ; seta al ; ret
0x00000200001cf18f : add byte ptr [rax], al ; setb al ; add rsp, 0x28 ; ret
0x000002000047b6fb : add byte ptr [rax], al ; setb al ; movzx eax, al ; ret
0x000002000013447a : add byte ptr [rax], al ; setb al ; ret
0x00000200001f6269 : add byte ptr [rax], al ; setbe al ; ret
0x000002000041b1aa : add byte ptr [rax], al ; sete al ; add rsp, 0x28 ; ret
0x0000020000067f85 : add byte ptr [rax], al ; sete al ; ret
0x000002000000bd3f : add byte ptr [rax], al ; setne al ; ret
0x0000020000230a76 : add byte ptr [rax], al ; sgdt ptr [rax] ; add byte ptr [rax + 3], cl ; ret
0x0000020000230b6e : add byte ptr [rax], al ; sgdt ptr [rcx] ; sidt ptr [rdx] ; ret
0x0000020000669453 : add byte ptr [rax], al ; shl byte ptr [rsi + 0x45], 0x3b ; ret 0xf44
0x00000200001f62f0 : add byte ptr [rax], al ; shl eax, 0xa ; add eax, ecx ; ret
0x00000200003a3e6f : add byte ptr [rax], al ; shl rax, cl ; add rsp, 0x28 ; ret
0x000002000003f462 : add byte ptr [rax], al ; shl rax, cl ; mov qword ptr [r8], rax ; ret
0x00000200006ce0b3 : add byte ptr [rax], al ; shr al, 0x21 ; ret 0xff99
0x00000200003e7622 : add byte ptr [rax], al ; shr al, 0x4e ; ret
0x00000200005a4e74 : add byte ptr [rax], al ; shr al, 0xf0 ; ret
0x0000020000042488 : add byte ptr [rax], al ; shr al, 2 ; and al, 1 ; ret
0x0000020000506d04 : add byte ptr [rax], al ; shr al, 3 ; and al, 1 ; ret
0x000002000005c7be : add byte ptr [rax], al ; shr al, 6 ; and al, 1 ; ret
0x00000200006005f9 : add byte ptr [rax], al ; shr al, 7 ; ret
0x000002000065628a : add byte ptr [rax], al ; shr bl, 0 ; add rsp, 0x38 ; ret
0x0000020000640478 : add byte ptr [rax], al ; shr bl, 0x13 ; mov rcx, rbx ; call qword ptr [rax]
0x00000200001ba7e9 : add byte ptr [rax], al ; shr bl, 0x1c ; mov rcx, qword ptr [rbx + 0x38] ; call qword ptr [rax]
0x0000020000467d83 : add byte ptr [rax], al ; shr bl, 0xc ; inc r10d ; jmp 0x20000467d78
0x000002000003b0b9 : add byte ptr [rax], al ; shr bl, 0xc1 ; xor al, al ; ret
0x0000020000123ee1 : add byte ptr [rax], al ; shr bl, 0xe9 ; mov qword ptr [r8], r10 ; ret
0x00000200006db31e : add byte ptr [rax], al ; shr cl, 0 ; ret 0xffff
0x00000200005a9c12 : add byte ptr [rax], al ; shr cl, 0x1c ; ret 0xffeb
0x00000200005ad39c : add byte ptr [rax], al ; shr cl, 0x1f ; ret
0x00000200005a9c08 : add byte ptr [rax], al ; shr cl, 0x26 ; ret 0xffeb
0x000002000057fb82 : add byte ptr [rax], al ; shr cl, 0x2a ; ret
0x000002000015bb7f : add byte ptr [rax], al ; shr cl, 0x40 ; ret
0x0000020000577045 : add byte ptr [rax], al ; shr cl, 0x45 ; ret 0xffe7
0x000002000058ba9a : add byte ptr [rax], al ; shr cl, 0x4a ; ret 0xfff6
0x00000200005b44ff : add byte ptr [rax], al ; shr cl, 0x4f ; ret
0x000002000055d69b : add byte ptr [rax], al ; shr cl, 0x51 ; jo 0x2000055d690 ; push rsi ; ret
0x00000200007781fa : add byte ptr [rax], al ; shr cl, 0x54 ; ret
0x00000200005840ce : add byte ptr [rax], al ; shr cl, 0x8c ; js 0x200005840c7 ; ljmp ptr [rbx] ; ret
0x000002000056c104 : add byte ptr [rax], al ; shr cl, 0x99 ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret
0x00000200007781b2 : add byte ptr [rax], al ; shr cl, 0x9c ; ret
0x00000200006db314 : add byte ptr [rax], al ; shr cl, 0xa ; ret 0xffff
0x00000200001f07ae : add byte ptr [rax], al ; shr cl, 0xa2 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000778327 : add byte ptr [rax], al ; shr cl, 0xa8 ; ret 0xfffd
0x00000200005ad366 : add byte ptr [rax], al ; shr cl, 0xb ; ret 0xffeb
0x000002000056d5d0 : add byte ptr [rax], al ; shr cl, 0xca ; jmp rsi
0x000002000056d5c6 : add byte ptr [rax], al ; shr cl, 0xd2 ; jmp rsi
0x0000020000161bbe : add byte ptr [rax], al ; shr cl, 0xe3 ; ret 0xffec
0x0000020000778257 : add byte ptr [rax], al ; shr cl, 0xf8 ; ret
0x0000020000602cb4 : add byte ptr [rax], al ; shr eax, 0x11 ; and eax, 1 ; ret
0x000002000001a085 : add byte ptr [rax], al ; shr eax, 3 ; and eax, 1 ; ret
0x0000020000131905 : add byte ptr [rax], al ; shr eax, 4 ; and eax, 1 ; ret
0x0000020000148aac : add byte ptr [rax], al ; shr rdx, 0x20 ; wrmsr ; pop rdi ; ret
0x00000200000bd9ba : add byte ptr [rax], al ; sti ; add rsp, 0x28 ; ret
0x000002000074405a : add byte ptr [rax], al ; sti ; idiv bh ; dec dword ptr [rcx + 0x23] ; ret 0xbf49
0x000002000004077b : add byte ptr [rax], al ; sti ; ret
0x00000200001ef2c8 : add byte ptr [rax], al ; sti ; xor eax, eax ; ret
0x00000200000815ab : add byte ptr [rax], al ; str word ptr [rax + 0xb] ; ret
0x00000200000819dc : add byte ptr [rax], al ; str word ptr [rcx + 0x33] ; add ecx, dword ptr [rax + 0x23] ; ret
0x00000200000a9ba0 : add byte ptr [rax], al ; str word ptr [rcx + 0xb] ; ret
0x0000020000697bad : add byte ptr [rax], al ; sub cl, 0x73 ; add al, 0 ; add byte ptr [rdx], ah ; ret 0x450f
0x0000020000120290 : add byte ptr [rax], al ; sub eax, 1 ; jne 0x2000012029f ; ret
0x000002000020e9f5 : add byte ptr [rax], al ; sub edx, eax ; mov dword ptr [rcx], edx ; ret
0x000002000014e115 : add byte ptr [rax], al ; sub r11, rax ; jmp r11
0x000002000044d07e : add byte ptr [rax], al ; sub r8, r10 ; jmp 0x2000044d00b
0x000002000075ef40 : add byte ptr [rax], al ; sub r8, r10 ; jne 0x2000075ef2c ; ret
0x000002000014a8fe : add byte ptr [rax], al ; sub r9, r8 ; jmp r9
0x0000020000013a33 : add byte ptr [rax], al ; sub rax, -0x80 ; ret
0x0000020000121f43 : add byte ptr [rax], al ; sub rcx, 1 ; jne 0x20000121f1a ; ret
0x000002000009b3c9 : add byte ptr [rax], al ; sub rcx, rax ; mov rax, rcx ; ret
0x000002000001a074 : add byte ptr [rax], al ; test al, 0x10 ; jne 0x2000001a085 ; xor al, al ; ret
0x0000020000485e48 : add byte ptr [rax], al ; test al, 0x20 ; jne 0x20000485e59 ; xor al, al ; ret
0x00000200003ba6fc : add byte ptr [rax], al ; test al, 4 ; jne 0x200003ba709 ; ret
0x00000200004f7410 : add byte ptr [rax], al ; test al, 4 ; jne 0x200004f7421 ; xor eax, eax ; ret
0x000002000003c257 : add byte ptr [rax], al ; test al, 8 ; jne 0x2000003c269 ; mov rax, rdx ; ret
0x000002000003c257 : add byte ptr [rax], al ; test al, 8 ; jne 0x2000003c26a ; mov rax, rdx ; ret
0x00000200004848d6 : add byte ptr [rax], al ; test ax, cx ; jne 0x200004848e9 ; mov al, 1 ; ret
0x00000200001da358 : add byte ptr [rax], al ; test cl, r10b ; jne 0x200001da36d ; mov eax, r10d ; jmp 0x200001da394
0x0000020000021d79 : add byte ptr [rax], al ; test eax, eax ; jne 0x20000021d90 ; xor eax, eax ; ret
0x0000020000069f67 : add byte ptr [rax], al ; test eax, eax ; jne 0x20000069f96 ; movzx eax, dl ; ret
0x0000020000069f67 : add byte ptr [rax], al ; test eax, eax ; jne 0x20000069f97 ; movzx eax, dl ; ret
0x0000020000131ca1 : add byte ptr [rax], al ; test r8, r8 ; je 0x20000131cb3 ; jmp r8
0x0000020000640451 : add byte ptr [rax], al ; test r9, r9 ; jne 0x20000640438 ; ret
0x0000020000115bc3 : add byte ptr [rax], al ; test rax, r8 ; je 0x20000115bd2 ; ret
0x000002000060e3e0 : add byte ptr [rax], al ; test rax, rax ; je 0x2000060e3f0 ; call rax
0x00000200000210d5 : add byte ptr [rax], al ; test rax, rax ; jne 0x200000210e8 ; xor eax, eax ; ret
0x000002000002aab5 : add byte ptr [rax], al ; test rax, rax ; jne 0x2000002aac4 ; ret
0x000002000002f525 : add byte ptr [rax], al ; test rax, rax ; jne 0x2000002f534 ; ret
0x00000200000711bb : add byte ptr [rax], al ; test rax, rax ; jne 0x200000711b3 ; ret
0x000002000002ccc4 : add byte ptr [rax], al ; test rcx, rcx ; je 0x2000002ccd7 ; mov al, 1 ; ret
0x0000020000124391 : add byte ptr [rax], al ; test rcx, rcx ; je 0x200001243a1 ; call rcx
0x00000200001b29fd : add byte ptr [rax], al ; test rcx, rcx ; je 0x200001b2a0d ; call rcx
0x00000200001b2a89 : add byte ptr [rax], al ; test rcx, rcx ; je 0x200001b2a9b ; jmp rcx
0x00000200001b2af9 : add byte ptr [rax], al ; test rcx, rcx ; je 0x200001b2b09 ; call rcx
0x0000020000069e9e : add byte ptr [rax], al ; test rcx, rcx ; jne 0x20000069e9b ; xor al, al ; ret
0x0000020000074f29 : add byte ptr [rax], al ; test rcx, rcx ; jne 0x20000074f38 ; ret
0x0000020000127aff : add byte ptr [rax], al ; test rdx, rdx ; je 0x20000127b13 ; xor ecx, ecx ; call rdx
0x00000200001b2aad : add byte ptr [rax], al ; test rdx, rdx ; je 0x200001b2abf ; jmp rdx
0x00000200000342cd : add byte ptr [rax], al ; test rdx, rdx ; jne 0x200000342dc ; ret
0x0000020000069ffa : add byte ptr [rax], al ; test rdx, rdx ; jne 0x20000069ff5 ; ret
0x00000200003fd262 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x200003fd271 ; ret
0x00000200001ba31d : add byte ptr [rax], al ; xchg dword ptr [rip + 0x15fd9f], eax ; ret
0x0000020000113230 : add byte ptr [rax], al ; xchg dword ptr [rip + 0x1cc110], ecx ; ret
0x0000020000042493 : add byte ptr [rax], al ; xchg qword ptr [rcx], rax ; ret
0x00000200006a8016 : add byte ptr [rax], al ; xor al, al ; ret
0x000002000012fefa : add byte ptr [rax], al ; xor bh, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x000002000052d75b : add byte ptr [rax], al ; xor bh, 0xff ; dec dword ptr [rax - 1] ; ret
0x000002000002d9c8 : add byte ptr [rax], al ; xor bh, 0xff ; dec dword ptr [rcx - 0x75] ; ret
0x000002000003bee3 : add byte ptr [rax], al ; xor bh, 0xff ; inc dword ptr [rcx - 0x7c] ; ret
0x00000200004e8d38 : add byte ptr [rax], al ; xor bh, 0xff ; push rax ; inc dword ptr [rax] ; ret
0x00000200000e83b5 : add byte ptr [rax], al ; xor bh, 0xff ; push rsi ; ret
0x00000200003cb934 : add byte ptr [rax], al ; xor byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000b8be1 : add byte ptr [rax], al ; xor byte ptr [rbp + 0x1a], 0x8b ; ret
0x00000200003c3e8d : add byte ptr [rax], al ; xor byte ptr [rcx + rdi + 0x48], 0x83 ; ret 0x4428
0x00000200000acfb8 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rax + 0x3b] ; ret
0x0000020000747812 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rbp + 0x23] ; ret
0x00000200000b62cc : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rcx + 0x23] ; ret 0xbb49
0x00000200000acc68 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rcx + 0x3b] ; ret
0x00000200000ace63 : add byte ptr [rax], al ; xor dh, 0xff ; dec dword ptr [rcx + 0x3b] ; ret 0x830f
0x00000200000ebcd0 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003adf04 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000042a71 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001ca053 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000230cbe : add byte ptr [rax], al ; xor eax, eax ; inc eax ; ret
0x000002000014f6d0 : add byte ptr [rax], al ; xor eax, eax ; mov byte ptr [rcx + 0x58], 1 ; ret
0x0000020000212e3e : add byte ptr [rax], al ; xor eax, eax ; mov dword ptr [r9], ecx ; ret
0x0000020000028216 : add byte ptr [rax], al ; xor eax, eax ; ret
0x0000020000032459 : add byte ptr [rax], al ; xor eax, eax ; test rdx, rdx ; jne 0x2000003246c ; ret
0x00000200003b6ff8 : add byte ptr [rax], al ; xor ebx, ebx ; jmp 0x200003b6fc5
0x00000200003e35f3 : add byte ptr [rax], al ; xor ebx, ebx ; test rax, rax ; je 0x200003e35d0 ; call rax
0x000002000042435e : add byte ptr [rax], al ; xor ecx, ecx ; call 0x20000050277
0x000002000022828b : add byte ptr [rax], al ; xor ecx, ecx ; call r10
0x0000020000221603 : add byte ptr [rax], al ; xor ecx, ecx ; call r9
0x00000200004247e0 : add byte ptr [rax], al ; xor edx, edx ; call 0x20000045783
0x000002000049fa9f : add byte ptr [rax], al ; xor edx, edx ; call 0x200000c0797
0x0000020000498de3 : add byte ptr [rax], al ; xor edx, edx ; call 0x200000c2847
0x000002000052a1e8 : add byte ptr [rax], al ; xor edx, edx ; call 0x2000014f4c7
0x0000020000579cac : add byte ptr [rax], al ; xor edx, edx ; call 0x200001a6b63
0x000002000060f3a5 : add byte ptr [rax], al ; xor edx, edx ; call 0x20000231017
0x0000020000120af7 : add byte ptr [rax], al ; xor edx, edx ; jmp 0x20000120ac5
0x00000200005cfc8a : add byte ptr [rax], al ; xor edx, edx ; mov rcx, r13 ; call r15
0x000002000010b30a : add byte ptr [rax], al ; xor r8d, r8d ; xor edx, edx ; call r9
0x0000020000016e7a : add byte ptr [rax], al ; xor rcx, rsp ; call 0x20000133187
0x00000200005038dc : add byte ptr [rax], al ; xor rcx, rsp ; call 0x20000133188
0x000002000020ca67 : add byte ptr [rax], bh ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8a41
0x000002000020ca37 : add byte ptr [rax], bh ; add al, byte ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xb60f
0x00000200006a35b1 : add byte ptr [rax], bh ; call qword ptr [rdx]
0x000002000013ca3b : add byte ptr [rax], bh ; pop rbp ; ret
0x000002000008ab7b : add byte ptr [rax], bl ; add byte ptr [rbx], dh ; shr al, cl ; ret 0xfaf1
0x0000020000154de1 : add byte ptr [rax], bl ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000788c3f : add byte ptr [rax], ch ; ret
0x000002000064066d : add byte ptr [rax], cl ; add bl, al ; mov eax, 0x100000 ; ret
0x000002000009a484 : add byte ptr [rax], cl ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x0000020000584010 : add byte ptr [rax], cl ; add byte ptr [rbx + 0xfca3bc1], cl ; ret 0x7ce9
0x000002000062a0aa : add byte ptr [rax], cl ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x00000200001a6e86 : add byte ptr [rax], cl ; add rsp, 0x28 ; ret
0x0000020000166e10 : add byte ptr [rax], cl ; inc rdx ; jmp 0x20000166db7
0x0000020000006db6 : add byte ptr [rax], cl ; jbe 0x20000157db2 ; ret
0x00000200003be3bf : add byte ptr [rax], cl ; ret
0x00000200003cb8b7 : add byte ptr [rax], dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004166a0 : add byte ptr [rax], dh ; add byte ptr [rcx + 0x23], cl ; ret 0xbb41
0x00000200000ea0ae : add byte ptr [rax], dh ; add dh, dh ; ret 0xf91
0x00000200006a07a7 : add byte ptr [rax], dh ; ret 0x405f
0x0000020000788b9f : add byte ptr [rax], dh ; ret 0x4078
0x00000200001f247e : add byte ptr [rax], dl ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200003ad1c3 : add byte ptr [rax], dl ; add byte ptr [rax], al ; call rax
0x000002000041cb0a : add byte ptr [rax], dl ; add byte ptr [rax], al ; je 0x2000041cb1b ; xor eax, eax ; ret
0x00000200000b29f2 : add byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x00000200003997f6 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000008616a : add byte ptr [rax], dl ; add byte ptr [rbp + 1], dh ; ret
0x000002000042ef69 : add byte ptr [rax], dl ; add byte ptr [rbx + 0xfca3bc1], cl ; ret 0x8389
0x00000200006bee0f : add byte ptr [rax], dl ; add byte ptr [rbx], bh ; ret 0x676
0x00000200004166a9 : add byte ptr [rax], dl ; add byte ptr [rcx + 0x2b], cl ; ret
0x0000020000675930 : add byte ptr [rax], dl ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005a434e : add byte ptr [rax], dl ; fmul dword ptr [rbx] ; ret 0x8941
0x0000020000641c27 : add byte ptr [rax], dl ; jae 0x20000641de3 ; jmp 0x20000641bfd
0x0000020000131252 : add byte ptr [rax], dl ; ret
0x0000020000589a05 : add byte ptr [rax], r8b ; adc cl, byte ptr [rdi] ; ret 0x4389
0x000002000042099b : add byte ptr [rax], r8b ; add byte ptr [rbx], al ; ret 0x33b
0x0000020000140a75 : add byte ptr [rax], r8b ; add cl, ch ; add dl, ah ; add byte ptr [rax], al ; ret
0x0000020000140b75 : add byte ptr [rax], r8b ; add cl, ch ; add dl, bl ; add byte ptr [rax], al ; ret
0x00000200003a6af5 : add byte ptr [rax], r8b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003a6a28 : add byte ptr [rax], r8b ; mov al, 1 ; ret
0x00000200005b761c : add byte ptr [rbp + 0x1be8504a], cl ; ret
0x000002000009a551 : add byte ptr [rbp + 0x1c], dh ; ret
0x000002000075d633 : add byte ptr [rbp + 0x23880fc0], al ; ret
0x000002000001f3f8 : add byte ptr [rbp + 0x23], cl ; ret 0x2b48
0x00000200000d39af : add byte ptr [rbp + 0x24], dh ; cmp eax, 2 ; jl 0x200000d39c0 ; ret
0x0000020000066c9d : add byte ptr [rbp + 0x25], dh ; xor al, al ; ret
0x0000020000161b9e : add byte ptr [rbp + 0x2880fc0], al ; ret
0x00000200006469f2 : add byte ptr [rbp + 0x2b], al ; ret
0x000002000007aaa7 : add byte ptr [rbp + 0x2b], al ; ret 0x2b41
0x00000200003b774e : add byte ptr [rbp + 0x2b], al ; ror dword ptr [rcx + 0x63], cl ; ret 0x8d48
0x000002000002cc67 : add byte ptr [rbp + 0x2b], cl ; ret
0x000002000044d07f : add byte ptr [rbp + 0x2b], cl ; ret 0x82eb
0x000002000014a9ab : add byte ptr [rbp + 0x2b], cl ; ret 0x8b4d
0x00000200005c493f : add byte ptr [rbp + 0x2b], cl ; ret 0xc149
0x000002000075ef41 : add byte ptr [rbp + 0x2b], cl ; ret 0xde75
0x000002000005d0a9 : add byte ptr [rbp + 0x2b], dh ; ret
0x000002000075d643 : add byte ptr [rbp + 0x2c880fc0], al ; ret
0x00000200004be629 : add byte ptr [rbp + 0x32], al ; in al, 0xf ; mov dh, 0x57 ; add esi, esi ; ret 0xf08
0x0000020000029aac : add byte ptr [rbp + 0x33], al ; fcomi st(6) ; ret 0x751e
0x0000020000119106 : add byte ptr [rbp + 0x33], al ; fild dword ptr [rcx - 0x75] ; ret
0x000002000073cf75 : add byte ptr [rbp + 0x33], al ; fisttp dword ptr [rax - 0x7d] ; ret
0x000002000050c973 : add byte ptr [rbp + 0x33], al ; rol bh, 0x83 ; ret 1
0x000002000010e42e : add byte ptr [rbp + 0x33], al ; rol byte ptr [rbp - 0x75], cl ; ret 0xf45
0x00000200004424e1 : add byte ptr [rbp + 0x33], al ; rol byte ptr [rcx - 0x75], cl ; ret
0x000002000041aeaa : add byte ptr [rbp + 0x33], al ; rol byte ptr [rcx - 0x75], cl ; ret 0x4589
0x000002000063c97e : add byte ptr [rbp + 0x33], al ; rol byte ptr [rcx - 0x76], cl ; ret
0x00000200004065f6 : add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], 0xcb ; call 0x200000c2849
0x0000020000219185 : add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x000002000010b30b : add byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call r9
0x000002000009c056 : add byte ptr [rbp + 0x33], al ; sal dh, cl ; ret 0xf1e
0x00000200003c8d4d : add byte ptr [rbp + 0x341ff46], cl ; ret
0x00000200005b75ff : add byte ptr [rbp + 0x38e85148], cl ; ret
0x000002000008b2b4 : add byte ptr [rbp + 0x3b411104], cl ; ret
0x000002000010ee5f : add byte ptr [rbp + 0x3b44f050], cl ; ret 0x870f
0x000002000003db5b : add byte ptr [rbp + 0x3b], al ; ret
0x0000020000155a22 : add byte ptr [rbp + 0x3b], al ; ret 0x177c
0x0000020000016fbf : add byte ptr [rbp + 0x3b], al ; ret 0x4d74
0x00000200001d73a0 : add byte ptr [rbp + 0x3b], al ; ret 0x5175
0x00000200000188ae : add byte ptr [rbp + 0x3b], al ; ret 0x6a73
0x00000200004c35af : add byte ptr [rbp + 0x3b], al ; ret 0x840f
0x00000200004e5776 : add byte ptr [rbp + 0x3b], al ; ret 0x850f
0x00000200003b7157 : add byte ptr [rbp + 0x3b], al ; ret 0x870f
0x0000020000085a13 : add byte ptr [rbp + 0x3b], al ; ret 0x8c0f
0x000002000020d3d1 : add byte ptr [rbp + 0x3b], al ; ret 0xa75
0x00000200005b7a04 : add byte ptr [rbp + 0x3b], al ; ret 0xe472
0x0000020000021a61 : add byte ptr [rbp + 0x3b], cl ; ret
0x00000200001f335e : add byte ptr [rbp + 0x3b], cl ; ret 0x1775
0x000002000000a9eb : add byte ptr [rbp + 0x3b], cl ; ret 0x4475
0x0000020000003764 : add byte ptr [rbp + 0x3b], cl ; ret 0x4574
0x00000200004c1abc : add byte ptr [rbp + 0x3b], cl ; ret 0x4575
0x00000200000a9ca3 : add byte ptr [rbp + 0x3b], cl ; ret 0x840f
0x00000200001f8a76 : add byte ptr [rbp + 0x3b], cl ; ret 0x860f
0x00000200000643b5 : add byte ptr [rbp + 0x3b], cl ; ret 0xc072
0x00000200007332d4 : add byte ptr [rbp + 0x3b], cl ; ret 0xc73
0x0000020000115fde : add byte ptr [rbp + 0x3b], cl ; ret 0xd875
0x00000200001f0a39 : add byte ptr [rbp + 0x3b], cl ; ret 0xde75
0x000002000075c7f4 : add byte ptr [rbp + 0x3b], cl ; ret 0xed75
0x00000200004790d9 : add byte ptr [rbp + 0x43], dh ; ret
0x0000020000404d08 : add byte ptr [rbp + 0x440f41db], al ; fdivr st(7), st(0) ; ret
0x000002000002adbd : add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x00000200004766c3 : add byte ptr [rbp + 0x470f0250], cl ; ret 0xb983
0x0000020000032dc4 : add byte ptr [rbp + 0x480578c0], al ; add esp, 0x28 ; ret
0x000002000004bc99 : add byte ptr [rbp + 0x480579c0], al ; add esp, 0x58 ; ret
0x000002000002b029 : add byte ptr [rbp + 0x48bfe43], cl ; ret 0x4fe9
0x000002000002acd0 : add byte ptr [rbp + 0x48bff43], cl ; ret 0x2b44
0x000002000020e9bc : add byte ptr [rbp + 0x48f0f042], cl ; cmpxchg dword ptr [rcx], edx ; ret
0x00000200000740ae : add byte ptr [rbp + 0x4d], dh ; xor al, al ; ret
0x000002000068bb8f : add byte ptr [rbp + 0x50], dh ; xor al, al ; ret
0x00000200001d75df : add byte ptr [rbp + 0x58e8b54a], cl ; ret
0x00000200001a705f : add byte ptr [rbp + 0x63], cl ; ret 0x8d49
0x00000200005770a9 : add byte ptr [rbp + 0x68890fc0], al ; ret 0xffe7
0x0000020000032a3c : add byte ptr [rbp + 0x6e880fff], al ; call qword ptr [rdx]
0x00000200000fea13 : add byte ptr [rbp + 0x73840fc0], al ; ret
0x0000020000521d4c : add byte ptr [rbp + 0xa840fd2], al ; ret 0xa
0x00000200000534b6 : add byte ptr [rbp + 0xa], dh ; xor al, al ; ret
0x000002000011c155 : add byte ptr [rbp + 0xb0875c2], al ; ret 0x3345
0x00000200003fa88b : add byte ptr [rbp + 0xd], dh ; mov qword ptr [rcx + 0x70], rdx ; xor eax, eax ; ret
0x0000020000069f68 : add byte ptr [rbp + 0xf2175c0], al ; mov dh, 0xc2 ; ret
0x00000200000db743 : add byte ptr [rbp + 0xf], al ; fiadd dword ptr [r9 - 0x75] ; ret
0x00000200004b05bc : add byte ptr [rbp + 0xf], al ; mov bh, 0x14 ; add dword ptr [rbp + 0x3b], eax ; ret 0x1b75
0x00000200000a335d : add byte ptr [rbp + 0xf], al ; mov dh, 0x56 ; and eax, dword ptr [rcx - 0x75] ; ret 0xe8c1
0x00000200000dcfb6 : add byte ptr [rbp + 0xf], al ; ret
0x000002000017951f : add byte ptr [rbp + 0xf], cl ; ret
0x000002000005ac4c : add byte ptr [rbp + 0xf], dh ; mov qword ptr [r9], rax ; mov eax, r10d ; ret
0x000002000007b9ba : add byte ptr [rbp + 1], dh ; ret
0x0000020000042e59 : add byte ptr [rbp + 2], dh ; xor eax, eax ; ret
0x00000200002259ec : add byte ptr [rbp + 3], al ; fisttp qword ptr [rax + 3] ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4408
0x000002000062d7f4 : add byte ptr [rbp + 3], al ; ret 0x8944
0x0000020000045504 : add byte ptr [rbp + 3], al ; ret 0x8949
0x0000020000617f41 : add byte ptr [rbp + 3], cl ; in eax, -0x75 ; ret 0x8941
0x0000020000223e83 : add byte ptr [rbp + 3], cl ; ret
0x00000200001d743b : add byte ptr [rbp + 3], cl ; ret 0x341
0x00000200001e6371 : add byte ptr [rbp + 3], cl ; ret 0x8348
0x000002000022392d : add byte ptr [rbp + 3], cl ; ret 0xbf49
0x00000200005e0c20 : add byte ptr [rbp + 3], cl ; ret 0xd285
0x00000200000c193b : add byte ptr [rbp + 3], dh ; mov al, 1 ; ret
0x00000200001b9d3f : add byte ptr [rbp + 3], dh ; xor al, al ; ret
0x0000020000084560 : add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x000002000007108a : add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x0000020000012dda : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x00000200004a3419 : add byte ptr [rbp + 5], dh ; call 0x200000d2306
0x00000200001c9756 : add byte ptr [rbp + 5], dh ; mov eax, 1 ; ret
0x000002000003cd24 : add byte ptr [rbp + 5], dh ; shl rax, 0x14 ; ret
0x0000020000012dd9 : add byte ptr [rbp + 5], sil ; add rsp, 0x38 ; ret
0x00000200000302b7 : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000066817 : add byte ptr [rbp + 6], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004bfb99 : add byte ptr [rbp + 6], dh ; add rsp, 0x70 ; pop rbx ; ret
0x00000200006d2e57 : add byte ptr [rbp + 6], dh ; mov eax, 0xc00000bb ; ret
0x000002000006a019 : add byte ptr [rbp + 6], dh ; mov eax, 1 ; ret
0x00000200000ecf59 : add byte ptr [rbp + 6], dh ; mov eax, dword ptr [rip + 0x291386] ; ret
0x000002000005168f : add byte ptr [rbp + 6], dh ; mov eax, dword ptr [rip + 0x32db74] ; ret
0x0000020000022c2a : add byte ptr [rbp + 6], dh ; sub rax, qword ptr [rcx] ; mov qword ptr [r10], rax ; ret
0x000002000046760a : add byte ptr [rbp + 6], r14b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000bb132 : add byte ptr [rbp + 6], sil ; mov eax, 1 ; ret
0x0000020000021b97 : add byte ptr [rbp + 7], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006b78de : add byte ptr [rbp + 7], dh ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000046dfb7 : add byte ptr [rbp + rax + 0x48], dh ; add eax, 0x10 ; ret
0x00000200003a2178 : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x000002000011e7ca : add byte ptr [rbp + rax + 0x48], dh ; mov eax, dword ptr [rax + 0x48] ; ret
0x00000200000ba236 : add byte ptr [rbp + rax - 0x18], dh ; ret 0x180
0x000002000014e8f6 : add byte ptr [rbp + rax - 0x18], dh ; ret 0xff54
0x0000020000169221 : add byte ptr [rbp + rbx - 0x75], dh ; ret 0xe8c1
0x0000020000565ca3 : add byte ptr [rbp + rbx*8 - 0x7b], dh ; ror byte ptr [rdi], 0x88 ; ret 0xe6df
0x000002000005e577 : add byte ptr [rbp + rcx*4 + 0x15], cl ; int1 ; ret
0x000002000014dc2e : add byte ptr [rbp + rcx*4 + 0x1d], cl ; sbb al, byte ptr [rbx] ; add byte ptr [rax], al ; jmp r11
0x000002000050d916 : add byte ptr [rbp + rcx*4 + 0x25], cl ; ret 0x1ec2
0x0000020000769ec1 : add byte ptr [rbp + rcx*4 + 0x35], cl ; ja 0x20000769e52 ; ret 0x48ff
0x00000200004a054f : add byte ptr [rbp + rcx*4 + 0x41], al ; dec dword ptr [rax - 0x7d] ; ret 0xf10
0x00000200006baeb4 : add byte ptr [rbp + rcx*4 + 0x42], al ; call 0x2000020711b
0x000002000040c155 : add byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x40 ; call r10
0x0000020000505af8 : add byte ptr [rbp + rcx*4 + 0x45], cl ; ret
0x0000020000065ff1 : add byte ptr [rbp + rcx*4 + 0x4a], al ; ret 0x8d48
0x000002000066aa58 : add byte ptr [rbp + rcx*4 + 0x55], al ; adc dword ptr [rcx - 0x75], ecx ; ret 0x48f0
0x00000200000046aa : add byte ptr [rbp + rcx*4 + 0x58], al ; add ecx, dword ptr [rcx + 0xf] ; ret
0x0000020000752b0c : add byte ptr [rbp + rcx*4 + 0xd], cl ; in al, dx ; ret 0xffcc
0x00000200007587c0 : add byte ptr [rbp + rcx*4 + 0xd], cl ; pop rax ; pop rax ; ret 0x66ff
0x00000200004dade5 : add byte ptr [rbp + rcx*4 + 0xd], cl ; ret
0x0000020000758311 : add byte ptr [rbp + rcx*4 + 0xd], cl ; scasd eax, dword ptr [rdi] ; pop rsi ; ret 0x83ff
0x000002000074b5f0 : add byte ptr [rbp + rcx*4 + 0xd], cl ; sub byte ptr [rsi], bh ; ret
0x00000200007577c0 : add byte ptr [rbp + rcx*4 + 0xd], cl ; test al, 0x7d ; ret 0xc7ff
0x00000200000627bf : add byte ptr [rbp + rcx*4 + 4], cl ; ret
0x000002000075d1f8 : add byte ptr [rbp + rcx*4 + 5], cl ; adc al, 0x21 ; ret 0x48ff
0x000002000016fcf1 : add byte ptr [rbp + rcx*4 + 5], cl ; ret
0x000002000056a6fe : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x18f0
0x000002000075d927 : add byte ptr [rbp + rcx*4 + 5], cl ; sub dword ptr [rbx], ebx ; ret 0x48ff
0x000002000019ad68 : add byte ptr [rbp + rdx - 0x75], dh ; ret
0x00000200005b754a : add byte ptr [rbp - 0x1217afb6], cl ; ret
0x00000200001d764e : add byte ptr [rbp - 0x16174bb6], cl ; ret 0xfff6
0x00000200006b7306 : add byte ptr [rbp - 0x16], dh ; xor al, al ; ret
0x00000200006b72ba : add byte ptr [rbp - 0x17], dh ; xor al, al ; ret
0x0000020000133adb : add byte ptr [rbp - 0x1a], dh ; mov rax, rcx ; ret
0x00000200004f742f : add byte ptr [rbp - 0x1c], dh ; mov eax, 1 ; ret
0x000002000044d2d9 : add byte ptr [rbp - 0x1d], dh ; xor eax, eax ; ret
0x0000020000134233 : add byte ptr [rbp - 0x21], dh ; mov rax, rcx ; ret
0x000002000075d4d3 : add byte ptr [rbp - 0x2477f040], al ; ret
0x000002000013573b : add byte ptr [rbp - 0x2e], dh ; sub rax, rcx ; sar rax, 1 ; ret
0x000002000020ec84 : add byte ptr [rbp - 0x2e], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200005b7567 : add byte ptr [rbp - 0x2f17afb6], cl ; ret
0x00000200003f39a8 : add byte ptr [rbp - 0x39], dh ; cmp byte ptr [rcx + 0x4c], 0 ; jne 0x200003f397b ; ret
0x00000200005bf937 : add byte ptr [rbp - 0x3d7bf040], al ; jmp 0x200005bf932
0x00000200001242be : add byte ptr [rbp - 0x3d], bl ; mov rcx, rdx ; call r9
0x000002000019fffe : add byte ptr [rbp - 0x3e], dh ; jmp 0x2000019ffbd
0x000002000042c8cc : add byte ptr [rbp - 0x3f60f040], al ; ret
0x00000200001b9d4a : add byte ptr [rbp - 0x3f6af040], al ; ret
0x00000200003f39ae : add byte ptr [rbp - 0x3f], dh ; ret
0x00000200003f39ad : add byte ptr [rbp - 0x3f], r14b ; ret
0x000002000062a9f8 : add byte ptr [rbp - 0x4f], dh ; inc rdx ; jmp 0x2000062aa35
0x00000200000feae3 : add byte ptr [rbp - 0x537bf040], al ; ret 6
0x00000200003e1c86 : add byte ptr [rbp - 0x66f0be40], al ; ret
0x000002000075d812 : add byte ptr [rbp - 0x6877f040], al ; ret
0x000002000046896d : add byte ptr [rbp - 0x73], al ; clc ; call rsi
0x00000200004d39d5 : add byte ptr [rbp - 0x73], al ; cli ; call rsi
0x000002000069143d : add byte ptr [rbp - 0x73], al ; cmc ; call rsi
0x0000020000692af4 : add byte ptr [rbp - 0x73], al ; stc ; call rdi
0x00000200000d08df : add byte ptr [rbp - 0x73], cl ; adc byte ptr gs:[rbp - 0x75], cl ; xchg eax, esp ; ret
0x000002000040c3b4 : add byte ptr [rbp - 0x73], cl ; and byte ptr [r8 - 0x75], cl ; ret 0x8b49
0x000002000003888f : add byte ptr [rbp - 0x73], cl ; mov r8b, 0x8b ; ret 0xd8f7
0x000002000048a712 : add byte ptr [rbp - 0x73], cl ; or al, 0x90 ; jmp 0x200005b6968
0x0000020000148e61 : add byte ptr [rbp - 0x73], cl ; or al, 0x91 ; jmp r9
0x000002000064864c : add byte ptr [rbp - 0x73], cl ; pop rcx ; dec byte ptr [rax + 0x63] ; ret 0x8d4e
0x00000200000903d3 : add byte ptr [rbp - 0x73], cl ; pop rdx ; dec dword ptr [rcx - 0x75] ; ret
0x000002000075d7ea : add byte ptr [rbp - 0x7477f040], al ; ret
0x0000020000029aef : add byte ptr [rbp - 0x74b68b01], al ; ret
0x00000200002291aa : add byte ptr [rbp - 0x74b7d0b8], cl ; ret
0x0000020000580429 : add byte ptr [rbp - 0x74b7feb6], cl ; ret 0x950f
0x00000200001f4516 : add byte ptr [rbp - 0x74bb008e], cl ; ret 0xf003
0x000002000002ad70 : add byte ptr [rbp - 0x74bb00bd], cl ; ret 0x4404
0x00000200004076f4 : add byte ptr [rbp - 0x74bb02aa], cl ; ret 0x8b48
0x00000200004c1068 : add byte ptr [rbp - 0x74bbfbb0], cl ; ret 0x8b48
0x00000200000eb4ac : add byte ptr [rbp - 0x74cd8b40], al ; ret
0x00000200003e897d : add byte ptr [rbp - 0x74cf8a40], al ; ret
0x000002000078627d : add byte ptr [rbp - 0x74d88725], al ; ret
0x0000020000533c8b : add byte ptr [rbp - 0x74dc8725], al ; ret
0x00000200003e74c1 : add byte ptr [rbp - 0x74e58640], al ; ret
0x000002000047e7c8 : add byte ptr [rbp - 0x74e58b2e], al ; ret 0xc2ff
0x000002000047e8fb : add byte ptr [rbp - 0x74e98a40], al ; ret
0x000002000073f0a1 : add byte ptr [rbp - 0x75], al ; or byte ptr [r8 - 0x75], r9b ; ret
0x000002000005c15a : add byte ptr [rbp - 0x75], al ; ret
0x00000200001d0d9e : add byte ptr [rbp - 0x75], al ; ret 0x2b48
0x0000020000085bd9 : add byte ptr [rbp - 0x75], al ; ret 0x3be9
0x0000020000642991 : add byte ptr [rbp - 0x75], al ; ret 0x8949
0x0000020000198119 : add byte ptr [rbp - 0x75], al ; ret 0x894c
0x00000200001623a3 : add byte ptr [rbp - 0x75], al ; ret 0x8b41
0x000002000008eb47 : add byte ptr [rbp - 0x75], al ; ret 0x8b44
0x000002000000952e : add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200004ac6fa : add byte ptr [rbp - 0x75], al ; ret 0x8d48
0x000002000073d487 : add byte ptr [rbp - 0x75], al ; ret 0xc91b
0x00000200004c1497 : add byte ptr [rbp - 0x75], al ; ret 0xdb85
0x00000200004f5d96 : add byte ptr [rbp - 0x75], al ; ret 0xe823
0x00000200000cfa9a : add byte ptr [rbp - 0x75], al ; ret 0xf44
0x00000200001f412a : add byte ptr [rbp - 0x75], cl ; adc dword ptr [rcx - 9], ecx ; rol byte ptr [rbp + 0x3b], cl ; ret
0x000002000075c7f1 : add byte ptr [rbp - 0x75], cl ; add byte ptr [rbp + 0x3b], cl ; ret 0xed75
0x0000020000038c72 : add byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rbp + 0x3b] ; ret 0x7274
0x000002000013649c : add byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rcx - 0x7d] ; ret 0xe908
0x000002000022a058 : add byte ptr [rbp - 0x75], cl ; fimul dword ptr [rcx - 0x75] ; or ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200006c5554 : add byte ptr [rbp - 0x75], cl ; loopne 0x200006c54e9 ; ret
0x00000200000aa249 : add byte ptr [rbp - 0x75], cl ; mov byte ptr [rax - 0xa000000], bh ; ret
0x00000200000dbcb3 : add byte ptr [rbp - 0x75], cl ; push rsi ; adc byte ptr [rcx - 0x75], cl ; ret 0x8948
0x000002000004fb72 : add byte ptr [rbp - 0x75], cl ; ret
0x0000020000156127 : add byte ptr [rbp - 0x75], cl ; ret 0x10e8
0x0000020000074365 : add byte ptr [rbp - 0x75], cl ; ret 0x2b4c
0x0000020000059eec : add byte ptr [rbp - 0x75], cl ; ret 0x3b4d
0x0000020000165551 : add byte ptr [rbp - 0x75], cl ; ret 0x44ba
0x000002000039f298 : add byte ptr [rbp - 0x75], cl ; ret 0x44c7
0x00000200006273b1 : add byte ptr [rbp - 0x75], cl ; ret 0x5ae8
0x00000200001dbd8c : add byte ptr [rbp - 0x75], cl ; ret 0x5ba
0x000002000010a105 : add byte ptr [rbp - 0x75], cl ; ret 0x8348
0x000002000000c1d0 : add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200000f2ce8 : add byte ptr [rbp - 0x75], cl ; ret 0x894c
0x000002000010a698 : add byte ptr [rbp - 0x75], cl ; ret 0x8b44
0x0000020000735af5 : add byte ptr [rbp - 0x75], cl ; ret 0x8b45
0x0000020000076bff : add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200001fab6c : add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000087118 : add byte ptr [rbp - 0x75], cl ; ret 0x8b4c
0x00000200003ce2bb : add byte ptr [rbp - 0x75], cl ; ret 0xace8
0x000002000008ddd6 : add byte ptr [rbp - 0x75], cl ; ret 0xb70f
0x000002000016d973 : add byte ptr [rbp - 0x75], cl ; ret 0xba
0x00000200001dbc95 : add byte ptr [rbp - 0x75], cl ; ret 0xdab9
0x0000020000109fa7 : add byte ptr [rbp - 0x75], cl ; ret 0xe0e8
0x000002000013d33e : add byte ptr [rbp - 0x75], cl ; ror dword ptr [rcx - 0x75], 1 ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x00000200002289e9 : add byte ptr [rbp - 0x75], cl ; ror dword ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x00000200000803be : add byte ptr [rbp - 0x75], cl ; sbb al, byte ptr [rcx - 0xa] ; ret
0x0000020000451429 : add byte ptr [rbp - 0x75cb8740], al ; ret
0x0000020000648f1c : add byte ptr [rbp - 0x7699d2be], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200001e2308 : add byte ptr [rbp - 0x76], al ; ret
0x00000200000ea67c : add byte ptr [rbp - 0x76], al ; ret 0x8b49
0x000002000050070b : add byte ptr [rbp - 0x76], al ; ret 0xaaeb
0x000002000069d11f : add byte ptr [rbp - 0x76], al ; ret 0xf48
0x0000020000535b1a : add byte ptr [rbp - 0x77], cl ; sub bh, dh ; ret 0xf00
0x000002000008550a : add byte ptr [rbp - 0x7b], cl ; dec dword ptr [rdi] ; test bh, cl ; ret
0x0000020000625fa2 : add byte ptr [rbp - 0x7b], cl ; div byte ptr [rsp + rdi - 0xa] ; ret
0x0000020000640452 : add byte ptr [rbp - 0x7b], cl ; leave ; jne 0x20000640437 ; ret
0x00000200005305b1 : add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000002000002141a : add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; test ah, dl ; ret 0x13
0x000002000010b38d : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + rax + 0x33], 0xd2 ; call r8
0x000002000000ab03 : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbx + rdi - 0x75], cl ; ret 0x8b41
0x0000020000408707 : add byte ptr [rbp - 0x7b], cl ; sal byte ptr [rsi + rcx + 0x48], 0x63 ; ret 0x8b4c
0x0000020000435f3f : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x000002000045e1b9 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 0
0x00000200005163c5 : add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 0xb4b
0x00000200004eb6b4 : add byte ptr [rbp - 0x7c], al ; dec dword ptr [rdi] ; test ecx, ebx ; ret 9
0x000002000011f115 : add byte ptr [rbp - 0x7c], al ; in al, 0x74 ; sub dh, dh ; ret 0xf03
0x000002000055f9aa : add byte ptr [rbp - 0x7c], al ; push qword ptr [rbp + rax - 0x18] ; ret
0x00000200000409d9 : add byte ptr [rbp - 0x7c], al ; ret 0x574
0x00000200004a7b2a : add byte ptr [rbp - 0x7c], al ; ret 0xe74
0x00000200000b09f1 : add byte ptr [rbp - 0x7c], al ; test byte ptr [rax - 0x78], 0xb3 ; ret
0x00000200003c2c7b : add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret
0x000002000004f52d : add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x95 ; ret
0x000002000004dbc4 : add byte ptr [rbp - 0x7cb7efa2], cl ; ret
0x00000200003ce858 : add byte ptr [rbp - 0x8858a27], al ; ret
0x000002000049a480 : add byte ptr [rbp - 0x9ae8b37], al ; ret
0x000002000016c7cc : add byte ptr [rbp - 0x9be00b2], cl ; ret
0x0000020000133b90 : add byte ptr [rbp - 0xa], dh ; ret
0x000002000074a92d : add byte ptr [rbp - 0xc08740], al ; ret
0x00000200004ef64a : add byte ptr [rbp - 0xed8b40], al ; ret
0x00000200001a4547 : add byte ptr [rbp - 0xf18740], al ; ret
0x0000020000489d1d : add byte ptr [rbp - 0xf68740], al ; ret
0x0000020000104c6a : add byte ptr [rbp - 0xfd8740], al ; ret
0x000002000048218e : add byte ptr [rbx + 0x17401f8], al ; ret
0x0000020000120291 : add byte ptr [rbx + 0x17501e8], al ; ret
0x00000200004cca44 : add byte ptr [rbx + 0x18c93], cl ; add bh, dh ; ret 0x6000
0x00000200001b6c5b : add byte ptr [rbx + 0x1c73c605], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x00000200000ba542 : add byte ptr [rbx + 0x1c8948c6], cl ; ret 0x8548
0x000002000012cad3 : add byte ptr [rbx + 0x1cdda22d], cl ; add bh, bh ; ret
0x00000200006bb98a : add byte ptr [rbx + 0x2271e25], al ; add byte ptr [rax], al ; ret
0x00000200000e9e9c : add byte ptr [rbx + 0x2368244c], cl ; ror dword ptr [rbx], cl ; ret 0xc741
0x00000200000a4b3b : add byte ptr [rbx + 0x23895], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000530ecd : add byte ptr [rbx + 0x23d8f7c2], cl ; ret 0xc23b
0x00000200000fbecc : add byte ptr [rbx + 0x23e8d1c3], cl ; ret 0x4589
0x000002000020e9e2 : add byte ptr [rbx + 0x28c90], cl ; add byte ptr [rax + 0x6b], cl ; ret 0x3364
0x00000200000d9fb4 : add byte ptr [rbx + 0x2b80c505], cl ; add byte ptr [rbx], ch ; ret 0xe083
0x00000200000324e6 : add byte ptr [rbx + 0x2bd123d3], cl ; ret 0x3b48
0x000002000051da39 : add byte ptr [rbx + 0x2d9fe8d7], cl ; ret 0x8bff
0x00000200000ec2d7 : add byte ptr [rbx + 0x2dc081], cl ; add byte ptr [rbx], cl ; ret 0x675
0x00000200000ae221 : add byte ptr [rbx + 0x2dec90], cl ; add dh, dh ; ret 0xf01
0x0000020000075bbf : add byte ptr [rbx + 0x2dec91], cl ; add dh, dh ; ret 0xf01
0x000002000008f7a5 : add byte ptr [rbx + 0x2efb800d], cl ; add al, ch ; ret
0x000002000006729b : add byte ptr [rbx + 0x316d8605], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x0000020000409658 : add byte ptr [rbx + 0x324e8d8], cl ; ret
0x000002000005e92f : add byte ptr [rbx + 0x3481c40], cl ; ret 0x3b48
0x00000200006bb7b4 : add byte ptr [rbx + 0x3482843], cl ; ret 0x348
0x0000020000529c78 : add byte ptr [rbx + 0x34c0843], cl ; ror dword ptr [rax + 3], 1 ; ret
0x000002000004bc28 : add byte ptr [rbx + 0x34c7843], cl ; ret 0x10a8
0x00000200000ef7f1 : add byte ptr [rbx + 0x37312f9], al ; mov al, 1 ; ret
0x000002000047cd98 : add byte ptr [rbx + 0x37504f9], al ; xor eax, eax ; ret
0x000002000000c9af : add byte ptr [rbx + 0x3856ca05], cl ; add byte ptr [rbx], ch ; ret 0xe083
0x0000020000486c07 : add byte ptr [rbx + 0x3b302444], cl ; ror byte ptr [rdi], 1 ; ret 0x854d
0x000002000046573b : add byte ptr [rbx + 0x3b411441], cl ; ret 0x820f
0x00000200006aac2e : add byte ptr [rbx + 0x3b582444], cl ; ret
0x000002000061ad4a : add byte ptr [rbx + 0x3bc123c5], cl ; ror dword ptr [rdi], -0x7b ; ret 1
0x000002000007c000 : add byte ptr [rbx + 0x3bc323c6], cl ; ret
0x00000200004c02ee : add byte ptr [rbx + 0x42343c2], cl ; xor byte ptr [rbx], bh ; ret 0x840f
0x00000200001283fc : add byte ptr [rbx + 0x43083], cl ; add byte ptr [rcx - 0x7c], al ; ret
0x00000200001207d6 : add byte ptr [rbx + 0x438b7c53], cl ; js 0x20000120811 ; ret 0x8944
0x000002000018ac4a : add byte ptr [rbx + 0x440f18f8], al ; ret 0xcce9
0x000002000021bb59 : add byte ptr [rbx + 0x440f48cf], cl ; ret 0x8d48
0x0000020000046953 : add byte ptr [rbx + 0x440ffff8], al ; ret
0x00000200000b5c56 : add byte ptr [rbx + 0x4589ffc8], al ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200000e68c2 : add byte ptr [rbx + 0x4689ffc8], al ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200000f5213 : add byte ptr [rbx + 0x48302444], cl ; add esp, 0x28 ; ret
0x000002000048bcfb : add byte ptr [rbx + 0x48482444], cl ; add esp, 0x38 ; ret
0x000002000003ea24 : add byte ptr [rbx + 0x48582444], cl ; add esp, 0x38 ; ret
0x000002000017d642 : add byte ptr [rbx + 0x48], dh ; mov eax, ecx ; ret
0x000002000046b17f : add byte ptr [rbx + 0x48c18bc8], cl ; add esp, 0x28 ; ret
0x0000020000117ccc : add byte ptr [rbx + 0x48c28bd0], cl ; add esp, 0x28 ; ret
0x000002000003dac7 : add byte ptr [rbx + 0x48d48c1], cl ; ret 0xccc3
0x00000200004e3dd3 : add byte ptr [rbx + 0x498d48c2], cl ; or byte ptr [rax + 0x3b], cl ; ret
0x000002000062c928 : add byte ptr [rbx + 0x4c8b48c2], cl ; ret
0x00000200004752a9 : add byte ptr [rbx + 0x4f8fe8ce], cl ; ret 0xf0ff
0x0000020000207518 : add byte ptr [rbx + 0x501afd05], cl ; add bh, bh ; ret
0x0000020000476642 : add byte ptr [rbx + 0x51093], cl ; add dh, dh ; ret 0xf01
0x0000020000210188 : add byte ptr [rbx + 0x51c81], cl ; add byte ptr [rcx - 0x7c], al ; ret
0x00000200002167dc : add byte ptr [rbx + 0x538b0843], cl ; sbb byte ptr [rbx], bh ; ret 0x3073
0x00000200003a1c24 : add byte ptr [rbx + 0x538b2843], cl ; xor byte ptr [rbx], ch ; ret 0x394c
0x0000020000749dab : add byte ptr [rbx + 0x58910c8], al ; push rbx ; push rsp ; ret
0x00000200000b0e2d : add byte ptr [rbx + 0x5d], bl ; ret
0x0000020000229c58 : add byte ptr [rbx + 0x68893], cl ; add dh, dh ; ret 0xf04
0x0000020000224140 : add byte ptr [rbx + 0x68896], cl ; add dh, dh ; ret 0xf04
0x000002000022ddaf : add byte ptr [rbx + 0x68897], cl ; add dh, dh ; ret 0xf04
0x00000200004fa26b : add byte ptr [rbx + 0x6bc9ff0b], cl ; rcr dword ptr [rax - 0x7d], 1 ; ret 0x3960
0x0000020000196d96 : add byte ptr [rbx + 0x6c090], cl ; add dh, dh ; ret 0x7504
0x00000200004433a2 : add byte ptr [rbx + 0x6f32e8c8], cl ; ret 0xebff
0x000002000007bf5f : add byte ptr [rbx + 0x9081], cl ; add byte ptr [rbx], bh ; ret 0x2074
0x0000020000545f88 : add byte ptr [rbx + 0x9889], al ; add byte ptr [rcx], al ; ret
0x00000200001ff996 : add byte ptr [rbx + 0xa489], cl ; add byte ptr [rbx], ah ; ret
0x00000200000f1266 : add byte ptr [rbx + 0xa893], cl ; add byte ptr [rcx - 0x75], al ; ret 0xd285
0x00000200006b7ba3 : add byte ptr [rbx + 0xac89], cl ; add bh, bh ; ret
0x00000200000ff441 : add byte ptr [rbx + 0xb4807e0], al ; ret
0x000002000060117a : add byte ptr [rbx + 0xb5ee8e8], cl ; ret
0x0000020000207152 : add byte ptr [rbx + 0xd0deb05], cl ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x0000020000587b05 : add byte ptr [rbx + 0xf4102f8], al ; shr cl, 1 ; ret
0x00000200001d2a00 : add byte ptr [rbx + 0xf484046], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000200005910bf : add byte ptr [rbx + 0xf6c2444], cl ; ret
0x000002000042a864 : add byte ptr [rbx + 0xfc085f8], cl ; mov byte ptr [rcx], dl ; call qword ptr [rsi]
0x00000200003c6b6d : add byte ptr [rbx + 0xfc085f8], cl ; mov byte ptr [rdi], al ; ret
0x0000020000584012 : add byte ptr [rbx + 0xfca3bc1], cl ; ret 0x7ce9
0x000002000042ef6b : add byte ptr [rbx + 0xfca3bc1], cl ; ret 0x8389
0x000002000049f25c : add byte ptr [rbx + 0xfdb85d8], cl ; mov ah, dl ; ret
0x0000020000040d5c : add byte ptr [rbx + 1], dh ; ret
0x000002000003e18e : add byte ptr [rbx + 5], dh ; add rsp, 0x38 ; ret
0x00000200001c61f0 : add byte ptr [rbx + 7], dh ; mov eax, dword ptr [rip + 0x1b7ea7] ; ret
0x0000020000008279 : add byte ptr [rbx + 7], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004f46a1 : add byte ptr [rbx + 9], bl ; add byte ptr [rbx - 0x7bf0fe17], al ; ret
0x0000020000602a87 : add byte ptr [rbx + rax - 0x2f], cl ; jmp r10
0x0000020000209c81 : add byte ptr [rbx + rax - 0x3f], cl ; jmp r8
0x00000200006b39c5 : add byte ptr [rbx + rax - 0x50], bh ; add ebx, eax ; xor al, al ; ret
0x00000200000eef9f : add byte ptr [rbx + rax - 0x50], dh ; add ebx, eax ; xor al, al ; ret
0x000002000063cfab : add byte ptr [rbx + rax - 0x7d], dh ; loopne 0x2000063cfd6 ; ret
0x000002000002c1b2 : add byte ptr [rbx + rax*4], al ; stc ; inc dword ptr [rcx - 0x75] ; ret 0x8941
0x000002000002c1b1 : add byte ptr [rbx + rax*4], r8b ; stc ; inc dword ptr [rcx - 0x75] ; ret 0x8941
0x000002000014e116 : add byte ptr [rbx + rbp - 0x28], cl ; jmp r11
0x000002000074bb44 : add byte ptr [rbx + rcx*4 + 0x35], cl ; je 0x2000074bb87 ; ret
0x0000020000097d1c : add byte ptr [rbx + rcx*4 + 0x41], cl ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000004a5db : add byte ptr [rbx + rcx*4 + 0x41], cl ; or dh, dh ; ret 0xf1f
0x00000200000eb21c : add byte ptr [rbx + rcx*4 + 0x42], al ; xor byte ptr [rbp + 0x23], al ; ret
0x000002000003be3a : add byte ptr [rbx + rcx*4 + 0x43], cl ; or byte ptr [rbp + 0x3b], cl ; ret 0x850f
0x00000200000cccca : add byte ptr [rbx + rcx*4 + 0x44], cl ; and al, 0x38 ; call rax
0x000002000019f9cd : add byte ptr [rbx + rcx*4 + 0x44], cl ; ret
0x000002000006fc44 : add byte ptr [rbx + rcx*4 + 0x45], al ; sbb dh, dh ; ret
0x000002000007226b : add byte ptr [rbx + rcx*4 + 0x46], cl ; sbb byte ptr [rcx - 0x75], al ; adc bh, dh ; ret 0xffc9
0x00000200004f971e : add byte ptr [rbx + rcx*4 + 0x4b], al ; xor al, 0x8b ; ret 0x6b48
0x000002000009795f : add byte ptr [rbx + rcx*4 + 0x4b], cl ; or byte ptr [rcx + 0x23], cl ; ret 0xb4d
0x000002000009d99a : add byte ptr [rbx + rcx*4 + 0x51], cl ; adc byte ptr [rcx - 0x75], cl ; ret 0x8348
0x000002000061184a : add byte ptr [rbx + rcx*4 + 0x55], al ; ret
0x00000200001dfc83 : add byte ptr [rbx + rcx*4 + 0x56], cl ; sub byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200001a7cc8 : add byte ptr [rbx + rcx*4 + 0x61], cl ; sbb byte ptr [rcx - 0x75], al ; ret 0x8b41
0x0000020000682ab5 : add byte ptr [rbx + rcx*4 + 0x75], cl ; out -0xa, eax ; ret
0x000002000045c11b : add byte ptr [rbx + rcx*4 + 0x7d], al ; or al, 0xff ; ret
0x0000020000489f02 : add byte ptr [rbx + rcx*4 + 0x7f], al ; or byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x00000200006db5c2 : add byte ptr [rbx + rcx*4 + 0xd], al ; jle 0x200006db551 ; ret 0x4cff
0x00000200001afe1a : add byte ptr [rbx + rcx*4 + 0xd], cl ; push rsi ; adc al, byte ptr es:[rax] ; call r9
0x0000020000767026 : add byte ptr [rbx + rcx*4 + 0xd], cl ; ret 0xf382
0x00000200001b1e53 : add byte ptr [rbx + rcx*4 + 0xd], cl ; sbb eax, 0x41001206 ; call rcx
0x00000200001ae1c6 : add byte ptr [rbx + rcx*4 + 0xd], cl ; stosb byte ptr [rdi], al ; adc al, byte ptr [rax] ; call r9
0x00000200006da4c1 : add byte ptr [rbx + rcx*4 + 5], al ; xchg eax, edi ; ret
0x00000200007556dc : add byte ptr [rbx + rcx*4 + 5], cl ; cmp al, 0x89 ; ret 0x48ff
0x0000020000743f94 : add byte ptr [rbx + rcx*4 + 5], cl ; je 0x20000743f43 ; ret
0x000002000075d52f : add byte ptr [rbx + rcx*4 + 5], cl ; jmp 0x2004975975b
0x00000200001f1c66 : add byte ptr [rbx + rcx*4 + 5], cl ; ret 0x5073
0x000002000053a42e : add byte ptr [rbx + rcx*4 + 5], cl ; ret 0xdc94
0x0000020000579aa8 : add byte ptr [rbx + rcx*4 - 0x3a], al ; call 0x200001a6b63
0x0000020000452f0a : add byte ptr [rbx + rcx*4 - 0x3d], cl ; mov rcx, r13 ; call rax
0x00000200000c0d8e : add byte ptr [rbx + rcx*4 - 0x5c], cl ; ret
0x00000200002330f4 : add byte ptr [rbx + rcx*4 - 0x6c], cl ; ret 0x2780
0x00000200005b76b0 : add byte ptr [rbx + rcx*4], al ; ret 0x1ba
0x00000200005dfc09 : add byte ptr [rbx + rdi - 0x2f], al ; jae 0x200005dfc1a ; mov al, 1 ; ret
0x0000020000482a49 : add byte ptr [rbx - 0x149fdbac], cl ; jrcxz 0x20000482a58 ; ret 0xb6eb
0x00000200005a328a : add byte ptr [rbx - 0x16], bh ; dec dword ptr [rax - 0x75] ; ret
0x00000200003b592b : add byte ptr [rbx - 0x17bfd7b8], al ; stosd dword ptr [rdi], eax ; ret
0x000002000019b3a5 : add byte ptr [rbx - 0x1f3eb738], cl ; or byte ptr [rax + 3], cl ; ret
0x000002000021028c : add byte ptr [rbx - 0x1f3eb738], cl ; or byte ptr [rax + 3], cl ; ret 0x8d48
0x00000200004f7aa0 : add byte ptr [rbx - 0x255b1728], cl ; ret
0x00000200004f7ac6 : add byte ptr [rbx - 0x25811728], cl ; ret
0x00000200006b90fc : add byte ptr [rbx - 0x3074b72b], cl ; mov rsi, rax ; call rbx
0x000002000042550b : add byte ptr [rbx - 0x3574b62d], cl ; call 0x20000045875
0x00000200004f0831 : add byte ptr [rbx - 0x38b7ee1f], ah ; ret 0x5d00
0x0000020000752cfb : add byte ptr [rbx - 0x3b7cb73d], cl ; jo 0x20000752d66 ; ret
0x00000200001a58a9 : add byte ptr [rbx - 0x3d001731], cl ; jmp 0x200001a58b5
0x00000200001a58cd : add byte ptr [rbx - 0x3d241731], cl ; jmp 0x200001a58d9
0x00000200001d77cf : add byte ptr [rbx - 0x3ddcb7ff], cl ; ret
0x000002000075e33d : add byte ptr [rbx - 0x3e031bfb], cl ; dec dword ptr [rax - 0x7d] ; ret 0x4c50
0x0000020000212e5e : add byte ptr [rbx - 0x3ef00f3e], cl ; sbb byte ptr [r11], al ; ret 0xc23b
0x0000020000051be6 : add byte ptr [rbx - 0x3f7a7efc], cl ; je 0x20000051bfa ; ret
0x00000200005f656e : add byte ptr [rbx - 0x48951723], cl ; ret
0x00000200000d95ea : add byte ptr [rbx - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000164052 : add byte ptr [rbx - 0x48f0ba39], cl ; ret 0x348
0x00000200000c6989 : add byte ptr [rbx - 0x49f00037], al ; ret 0xf44
0x0000020000785a66 : add byte ptr [rbx - 0x4b3f7df3], al ; call qword ptr [rax]
0x000002000011ef21 : add byte ptr [rbx - 0x4b74b23e], cl ; ret 0x4a0
0x000002000060898c : add byte ptr [rbx - 0x68a2762d], cl ; call 0x20000231ce9
0x0000020000474378 : add byte ptr [rbx - 0x6bf0fe03], al ; ret
0x00000200004b2c46 : add byte ptr [rbx - 0x6ddd1735], cl ; ret
0x00000200004b2c78 : add byte ptr [rbx - 0x6e0f1735], cl ; ret
0x000002000042e397 : add byte ptr [rbx - 0x71f0d605], al ; ret
0x0000020000446088 : add byte ptr [rbx - 0x72f0ef05], al ; xchg eax, edx ; ret 0x15
0x0000020000511c55 : add byte ptr [rbx - 0x73], al ; add al, 0 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000020000017230 : add byte ptr [rbx - 0x742e0832], cl ; ret
0x00000200003e2bf5 : add byte ptr [rbx - 0x748fdba4], cl ; ret
0x0000020000138262 : add byte ptr [rbx - 0x749fdbac], cl ; ret 0xd8f7
0x000002000022fd1b : add byte ptr [rbx - 0x74b380bb], cl ; ret
0x00000200003d833a : add byte ptr [rbx - 0x74b383aa], cl ; ret
0x0000020000505c8a : add byte ptr [rbx - 0x74b388bb], cl ; ret
0x0000020000211864 : add byte ptr [rbx - 0x74b3ebad], cl ; ret
0x000002000013ed27 : add byte ptr [rbx - 0x74b3f3c6], al ; ret 0x8b48
0x000002000002ecb1 : add byte ptr [rbx - 0x74b6dbb3], cl ; ret
0x00000200007318f3 : add byte ptr [rbx - 0x74b6efb5], cl ; ret
0x0000020000024e7d : add byte ptr [rbx - 0x74b7bf8b], cl ; ret 0xf48
0x00000200005071ff : add byte ptr [rbx - 0x74ba44b3], cl ; ret
0x000002000041492e : add byte ptr [rbx - 0x74bb031a], al ; ret
0x00000200000da6a7 : add byte ptr [rbx - 0x74bb50bb], cl ; ret
0x00000200003e3f60 : add byte ptr [rbx - 0x74beafb2], cl ; ret
0x000002000009604b : add byte ptr [rbx - 0x74cbdbac], cl ; ret 0x8948
0x00000200000a4b0c : add byte ptr [rbx - 0x74cfdbac], cl ; ret 0x8948
0x00000200003a4e30 : add byte ptr [rbx - 0x79f0c505], al ; ret 0x57
0x0000020000613bd1 : add byte ptr [rbx - 0x79f0fe08], al ; ret 0
0x00000200004a7f76 : add byte ptr [rbx - 0x7a2f083f], cl ; ret 0x870f
0x000002000004c660 : add byte ptr [rbx - 0x7aba0038], al ; test byte ptr [rdi], 0x4f ; ret 0x8388
0x000002000042dbcb : add byte ptr [rbx - 0x7af0fd15], al ; ret
0x00000200000f34b9 : add byte ptr [rbx - 0x7af0fe17], al ; ret
0x000002000066e3ed : add byte ptr [rbx - 0x7af0fec7], al ; ret 0
0x00000200004398a9 : add byte ptr [rbx - 0x7bbe93b9], cl ; ret
0x00000200001cd667 : add byte ptr [rbx - 0x7bbec7b9], cl ; ret
0x00000200001365f3 : add byte ptr [rbx - 0x7bf09117], al ; ret 1
0x000002000013c3a8 : add byte ptr [rbx - 0x7bf0b906], al ; ret 0
0x0000020000136e93 : add byte ptr [rbx - 0x7bf0ef17], al ; ret
0x00000200004679d8 : add byte ptr [rbx - 0x7bf0f116], al ; ret
0x000002000000a87b : add byte ptr [rbx - 0x7bf0f701], al ; ret
0x000002000001b613 : add byte ptr [rbx - 0x7bf0f805], al ; ret
0x0000020000501f9f : add byte ptr [rbx - 0x7bf0fa07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000020000428909 : add byte ptr [rbx - 0x7bf0fc06], al ; ret 0
0x00000200004890fb : add byte ptr [rbx - 0x7bf0fd08], al ; ret 0
0x00000200000a5ec1 : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x00000200004ceae5 : add byte ptr [rbx - 0x7bf0fe15], al ; ret 0xf96
0x00000200004f46a4 : add byte ptr [rbx - 0x7bf0fe17], al ; ret
0x000002000022871d : add byte ptr [rbx - 0x7bf0fe17], al ; ret 0
0x00000200004e6b78 : add byte ptr [rbx - 0x7bf0fe17], al ; ret 0x9ff
0x000002000004162a : add byte ptr [rbx - 0x7bf0fe17], al ; ret 2
0x0000020000644282 : add byte ptr [rbx - 0x7bf0fe18], al ; ret
0x0000020000733d4d : add byte ptr [rbx - 0x7cb75fab], cl ; ret
0x00000200001c7d2b : add byte ptr [rbx - 0x7cb7dba7], cl ; ret
0x00000200003a4405 : add byte ptr [rbx - 0x7cb7ef39], al ; ret
0x00000200001c7d50 : add byte ptr [rbx - 0x7cb7f3ad], cl ; ret 0x4810
0x00000200005241a2 : add byte ptr [rbx - 0x7cb7f7bd], cl ; ret
0x00000200000410f9 : add byte ptr [rbx - 0x7ccfdbac], cl ; ret 0x65fe
0x0000020000748de4 : add byte ptr [rbx - 0x7eb7bfa9], cl ; ret 0xfff
0x000002000039fdc6 : add byte ptr [rbx - 0x88134e3], cl ; push rsi ; ret
0x000002000049323a : add byte ptr [rbx - 0x8a7dbac], cl ; ret 0x600
0x000002000050e202 : add byte ptr [rbx - 0x8b7dbac], cl ; ret 0xffe0
0x00000200005eccb9 : add byte ptr [rbx - 0x8fdbac], cl ; ret 0x5489
0x0000020000627509 : add byte ptr [rbx - 0x987dba4], cl ; ret
0x000002000045274b : add byte ptr [rbx - 0x9bfdb84], cl ; ret
0x000002000045050a : add byte ptr [rbx - 0x9cfdba4], cl ; ret
0x00000200004fdb16 : add byte ptr [rbx - 0x9d7c4ac], cl ; ret 0xf20
0x00000200001243e2 : add byte ptr [rbx - 0xb7ffda], al ; ret
0x000002000039c889 : add byte ptr [rbx - 0xc182feb], cl ; dec dword ptr [rax + 0x63] ; ret 0x8348
0x0000020000128ed5 : add byte ptr [rbx - 0xcbdbb4], cl ; ror dword ptr [rdi], -0x49 ; ret
0x0000020000405727 : add byte ptr [rbx], ah ; fimul word ptr [rbx - 0x10a937fb] ; jmp qword ptr [rbx]
0x00000200001ff99c : add byte ptr [rbx], ah ; ret
0x0000020000424cda : add byte ptr [rbx], ah ; ret 0x2d
0x00000200005973f7 : add byte ptr [rbx], ah ; ret 0x3b41
0x0000020000630a82 : add byte ptr [rbx], ah ; ret 0x4489
0x00000200000e2c44 : add byte ptr [rbx], ah ; ret 0x4789
0x0000020000224e61 : add byte ptr [rbx], ah ; ret 0x8331
0x000002000041335c : add byte ptr [rbx], ah ; ret 0x8941
0x0000020000544ebf : add byte ptr [rbx], ah ; ret 0x8948
0x0000020000544ef2 : add byte ptr [rbx], ah ; ret 0x8b44
0x0000020000221986 : add byte ptr [rbx], ah ; ret 0xc23b
0x0000020000129659 : add byte ptr [rbx], ah ; ret 0xc803
0x00000200003ca6de : add byte ptr [rbx], ah ; ret 0xd833
0x0000020000638046 : add byte ptr [rbx], ah ; ret 0xe9d1
0x00000200003ca6f1 : add byte ptr [rbx], ah ; rol ecx, -0x20 ; adc cl, byte ptr [rbx] ; ret
0x000002000064acef : add byte ptr [rbx], ah ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x8102
0x00000200003cb8da : add byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000416687 : add byte ptr [rbx], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x00000200000d52cf : add byte ptr [rbx], al ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004cb4ea : add byte ptr [rbx], al ; jo 0x200004cb4fb ; mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x200004cb4c1
0x0000020000013000 : add byte ptr [rbx], al ; ret
0x000002000007b74c : add byte ptr [rbx], al ; ret 0x3344
0x000002000042099e : add byte ptr [rbx], al ; ret 0x33b
0x00000200003c0b31 : add byte ptr [rbx], al ; ret 0x4489
0x00000200005d5969 : add byte ptr [rbx], al ; ret 0x6583
0x0000020000084c82 : add byte ptr [rbx], al ; ret 0x813b
0x00000200006b7cc4 : add byte ptr [rbx], al ; ret 0x8445
0x00000200003c4a5f : add byte ptr [rbx], al ; ret 0x8b48
0x00000200004a7fe1 : add byte ptr [rbx], al ; ret 0x9489
0x00000200001f62d7 : add byte ptr [rbx], al ; ret 0xb841
0x0000020000175756 : add byte ptr [rbx], al ; ret 0xc123
0x00000200001e21fa : add byte ptr [rbx], al ; ret 0xc23b
0x000002000064937f : add byte ptr [rbx], al ; ret 0xf799
0x00000200003f0b6b : add byte ptr [rbx], al ; rol byte ptr [rbp - 0x7cfc8b40], 1 ; ret 0xb9f4
0x00000200004018fa : add byte ptr [rbx], al ; ror byte ptr [rcx - 0x74b3dbac], 1 ; ret 0x349
0x0000020000084ca7 : add byte ptr [rbx], bh ; adc al, 0x7f ; xor al, 0x2b ; ret
0x0000020000501fd8 : add byte ptr [rbx], bh ; int 0xf
0x000002000001f055 : add byte ptr [rbx], bh ; ret
0x0000020000609acd : add byte ptr [rbx], bh ; ret 0x1375
0x000002000020ffe5 : add byte ptr [rbx], bh ; ret 0x1b72
0x000002000007bf65 : add byte ptr [rbx], bh ; ret 0x2074
0x00000200006b96d9 : add byte ptr [rbx], bh ; ret 0x2173
0x00000200000e66ed : add byte ptr [rbx], bh ; ret 0x3373
0x00000200000e2cda : add byte ptr [rbx], bh ; ret 0x377
0x000002000060a7f1 : add byte ptr [rbx], bh ; ret 0x3c75
0x0000020000009361 : add byte ptr [rbx], bh ; ret 0x470f
0x0000020000594569 : add byte ptr [rbx], bh ; ret 0x5b73
0x0000020000619883 : add byte ptr [rbx], bh ; ret 0x676
0x0000020000642543 : add byte ptr [rbx], bh ; ret 0x7675
0x00000200000eb632 : add byte ptr [rbx], bh ; ret 0x767d
0x00000200001a8f26 : add byte ptr [rbx], bh ; ret 0x820f
0x00000200001002ee : add byte ptr [rbx], bh ; ret 0x830f
0x00000200004df7ae : add byte ptr [rbx], bh ; ret 0x840f
0x00000200004f2f62 : add byte ptr [rbx], bh ; ret 0x850f
0x00000200006489d7 : add byte ptr [rbx], bh ; ret 0x860f
0x000002000012ef45 : add byte ptr [rbx], bh ; ret 0x870f
0x000002000004839b : add byte ptr [rbx], bh ; ret 0x874
0x00000200003f53fb : add byte ptr [rbx], bh ; ret 0x8b44
0x000002000044c661 : add byte ptr [rbx], bh ; ret 0x8f0f
0x00000200006b4bf2 : add byte ptr [rbx], bh ; ret 0xa73
0x00000200001fdd5f : add byte ptr [rbx], bh ; ret 0xc77
0x00000200000eba72 : add byte ptr [rbx], bh ; ret 0xc7f
0x00000200003be29f : add byte ptr [rbx], bh ; ret 0xdd74
0x00000200003b53cb : add byte ptr [rbx], bh ; ret 0xe475
0x0000020000418d11 : add byte ptr [rbx], bh ; ret 0xe775
0x000002000058321f : add byte ptr [rbx], bh ; ret 0xe875
0x0000020000476ee5 : add byte ptr [rbx], bh ; ret 0xea75
0x000002000021af88 : add byte ptr [rbx], bh ; ret 0xf72
0x00000200001a6ced : add byte ptr [rbx], bh ; ret 0xf73
0x00000200003a2911 : add byte ptr [rbx], bh ; ret 0xf774
0x00000200001e26a7 : add byte ptr [rbx], bh ; rol byte ptr [rax - 0x49], 1 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000200000bbccb : add byte ptr [rbx], bh ; ror byte ptr [rdi], 1 ; ret 0xd08b
0x00000200005981f8 : add byte ptr [rbx], bh ; sal byte ptr [rsp + rcx - 1], 1 ; ret
0x00000200006aa62b : add byte ptr [rbx], bh ; xchg eax, ecx ; push 0 ; xchg eax, esi ; xchg eax, ecx ; push 0 ; ret 0x6a93
0x00000200000f993a : add byte ptr [rbx], bl ; jmp qword ptr [rbx]
0x000002000040124c : add byte ptr [rbx], bl ; ret
0x00000200000df4d6 : add byte ptr [rbx], ch ; ret
0x0000020000401911 : add byte ptr [rbx], ch ; ret 0x4489
0x00000200003db8c0 : add byte ptr [rbx], ch ; ret 0x448b
0x00000200001c1006 : add byte ptr [rbx], ch ; ret 0x8966
0x000002000062244e : add byte ptr [rbx], ch ; ret 0x9848
0x00000200001f855d : add byte ptr [rbx], ch ; ret 0xc803
0x00000200001a8f2e : add byte ptr [rbx], ch ; ret 0xc83b
0x000002000009c95a : add byte ptr [rbx], ch ; ret 0xd08b
0x00000200004980ae : add byte ptr [rbx], ch ; ret 0xd12b
0x000002000000c9b5 : add byte ptr [rbx], ch ; ret 0xe083
0x0000020000016519 : add byte ptr [rbx], ch ; ret 0xe0c1
0x00000200006020cd : add byte ptr [rbx], ch ; ret 0xf803
0x000002000001baca : add byte ptr [rbx], ch ; ret 0xf883
0x00000200000647f7 : add byte ptr [rbx], ch ; ret 0xff48
0x000002000056c10b : add byte ptr [rbx], cl ; ret
0x00000200000ec2dd : add byte ptr [rbx], cl ; ret 0x675
0x00000200006c2ef5 : add byte ptr [rbx], cl ; ret 0x8b48
0x000002000001d347 : add byte ptr [rbx], cl ; ret 1
0x000002000002d625 : add byte ptr [rbx], cl ; ror byte ptr [rcx - 0x3fccefaf], 1 ; ret
0x00000200001f4572 : add byte ptr [rbx], cl ; sal dh, 1 ; ret 0x753f
0x00000200003e527d : add byte ptr [rbx], dh ; dec dword ptr [rax - 0x75] ; int 0xe8
0x00000200001cdd4d : add byte ptr [rbx], dh ; dec dword ptr [rax - 9] ; ret
0x0000020000732eda : add byte ptr [rbx], dh ; dec dword ptr [rbp - 0x74b7d0b8] ; ret 0x598d
0x00000200000fd7ce : add byte ptr [rbx], dh ; div dh ; ret
0x0000020000068a81 : add byte ptr [rbx], dh ; fild dword ptr [rdi + rcx + 0x22] ; ret
0x0000020000452aae : add byte ptr [rbx], dh ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200003f5fc7 : add byte ptr [rbx], dh ; fisttp dword ptr [rax - 0x75] ; ret 0x2b49
0x000002000003ee46 : add byte ptr [rbx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0x1274
0x0000020000058a0a : add byte ptr [rbx], dh ; fisttp dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000200003fd335 : add byte ptr [rbx], dh ; fucomi st(0) ; ret
0x00000200003b6ff9 : add byte ptr [rbx], dh ; fucomi st(3) ; ret 0x3345
0x00000200006b7dee : add byte ptr [rbx], dh ; imul byte ptr [rbx] ; ret 0x4779
0x000002000005891d : add byte ptr [rbx], dh ; jmp qword ptr [rcx]
0x000002000042435f : add byte ptr [rbx], dh ; leave ; call 0x20000050276
0x000002000022828c : add byte ptr [rbx], dh ; leave ; call r10
0x0000020000221604 : add byte ptr [rbx], dh ; leave ; call r9
0x000002000013e93a : add byte ptr [rbx], dh ; leave ; mov qword ptr [rsp + 0x70], rax ; call r11
0x000002000046d0fc : add byte ptr [rbx], dh ; push rsi ; ret 0x750f
0x000002000011cd95 : add byte ptr [rbx], dh ; ret
0x00000200000ad740 : add byte ptr [rbx], dh ; ret 0x4489
0x000002000019f025 : add byte ptr [rbx], dh ; ret 0x589
0x000002000022faf0 : add byte ptr [rbx], dh ; ret 0x8948
0x00000200000e2a5f : add byte ptr [rbx], dh ; ret 0x948a
0x00000200005b78b9 : add byte ptr [rbx], dh ; ret 0xa9
0x00000200004b6ef3 : add byte ptr [rbx], dh ; rol al, 0xe0 ; add al, 0x32 ; ret
0x00000200001ab32e : add byte ptr [rbx], dh ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000036202 : add byte ptr [rbx], dh ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200004b40ec : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret
0x00000200003f92c5 : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x000002000047e68e : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x0000020000212e3f : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x77], 9 ; ret
0x0000020000223167 : add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x80], cl ; ret 0x4101
0x00000200006a8076 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x39], 5 ; and al, 0xae ; ret 0xff
0x0000020000486c57 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x5c ; and al, 0x28 ; pop rdi ; ret
0x00000200005172e2 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200003f5bfc : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; int 0xe8
0x00000200004341dd : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000056fc9
0x000002000066da96 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x0000020000606ec6 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000231019
0x000002000003245a : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x2000003246b ; ret
0x00000200004943f1 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000494443 ; pop rbp ; ret
0x000002000008522b : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x000002000006f171 : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x000002000065014b : add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x000002000050e3ea : add byte ptr [rbx], dh ; ror byte ptr [rbx + 0x77f8e8e8], cl ; ret 0x44ff
0x000002000045e918 : add byte ptr [rbx], dh ; ror byte ptr [rbx + 0xfff85f8], 0x88 ; ret
0x000002000013be88 : add byte ptr [rbx], dh ; sal dh, cl ; ret
0x0000020000230cbf : add byte ptr [rbx], dh ; sar bh, 0xc0 ; ret
0x000002000049faa0 : add byte ptr [rbx], dh ; shr al, cl ; call 0x2006649bcbb
0x000002000003ced6 : add byte ptr [rbx], dh ; shr al, cl ; jb 0x2000003ce75 ; or byte ptr [rax], al ; jmp 0x2000003ceac
0x00000200004915be : add byte ptr [rbx], dh ; shr al, cl ; jp 0x200004915dc ; ret
0x0000020000625849 : add byte ptr [rbx], dh ; shr al, cl ; mov edi, 0x8bffc0b7 ; ret
0x00000200000e7845 : add byte ptr [rbx], dh ; shr al, cl ; ret
0x00000200000e1bf6 : add byte ptr [rbx], dh ; shr al, cl ; ret 0x6d8
0x000002000008ab7e : add byte ptr [rbx], dh ; shr al, cl ; ret 0xfaf1
0x00000200005dd292 : add byte ptr [rbx], dh ; shr bl, 0 ; add rsp, 0x18 ; ret
0x0000020000120af8 : add byte ptr [rbx], dh ; shr bl, cl ; ret
0x0000020000161be5 : add byte ptr [rbx], dh ; shr cl, 0x29 ; ret
0x000002000068aeb4 : add byte ptr [rbx], dh ; test byte ptr [rax - 0x73], 0x15 ; ret 0xeca6
0x000002000039dd53 : add byte ptr [rcx + 0x10824b4], cl ; add byte ptr [rax], al ; call qword ptr [r15]
0x00000200000db73a : add byte ptr [rcx + 0x22], al ; ret
0x000002000016449e : add byte ptr [rcx + 0x23], al ; ret 0x3b41
0x00000200000fd767 : add byte ptr [rcx + 0x23], al ; ret 0x8d45
0x00000200000a07c9 : add byte ptr [rcx + 0x23], cl ; ret
0x00000200000abbed : add byte ptr [rcx + 0x23], cl ; ret 0x2349
0x00000200000a6ba2 : add byte ptr [rcx + 0x23], cl ; ret 0x3349
0x00000200001d0749 : add byte ptr [rcx + 0x23], cl ; ret 0x4ba
0x0000020000105d9b : add byte ptr [rcx + 0x23], cl ; ret 0xb948
0x00000200000ace5b : add byte ptr [rcx + 0x23], cl ; ret 0xba49
0x00000200004166a2 : add byte ptr [rcx + 0x23], cl ; ret 0xbb41
0x000002000018d26a : add byte ptr [rcx + 0x23], cl ; ret 0xe6e9
0x00000200003c5add : add byte ptr [rcx + 0x2a], al ; ret 0x388
0x000002000015239a : add byte ptr [rcx + 0x2b], al ; ret
0x00000200001f7d3f : add byte ptr [rcx + 0x2b], al ; ret 0x344
0x0000020000683e3b : add byte ptr [rcx + 0x2b], al ; ret 0x348d
0x0000020000152fa6 : add byte ptr [rcx + 0x2b], al ; ret 0xf41
0x00000200001de1cf : add byte ptr [rcx + 0x2b], al ; rol byte ptr [rcx - 0x75], cl ; ret
0x00000200001793ba : add byte ptr [rcx + 0x2b], al ; rol dword ptr [rcx - 0x75], 1 ; ret 0xca8b
0x000002000008f3d2 : add byte ptr [rcx + 0x2b], cl ; fsub st(1), st(0) ; ret
0x0000020000053164 : add byte ptr [rcx + 0x2b], cl ; ret
0x000002000008bec6 : add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x00000200000a8b86 : add byte ptr [rcx + 0x2b], cl ; ret 0x3b4c
0x000002000076cf5c : add byte ptr [rcx + 0x2b], cl ; ret 0x8349
0x000002000007e458 : add byte ptr [rcx + 0x31], cl ; adc r14b, r14b ; ret
0x00000200001fdd82 : add byte ptr [rcx + 0x33], al ; leave ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200001f89d0 : add byte ptr [rcx + 0x33], al ; ret
0x00000200000819df : add byte ptr [rcx + 0x33], cl ; add ecx, dword ptr [rax + 0x23] ; ret
0x00000200000b651e : add byte ptr [rcx + 0x33], cl ; fimul dword ptr [rax - 9] ; ret
0x00000200000dac00 : add byte ptr [rcx + 0x33], cl ; ret 0x8948
0x00000200000a4250 : add byte ptr [rcx + 0x33], cl ; ret 0x8949
0x0000020000123554 : add byte ptr [rcx + 0x33], cl ; ret 0xf48
0x00000200001e2315 : add byte ptr [rcx + 0x3a], al ; ret
0x00000200007625ab : add byte ptr [rcx + 0x3a], al ; ret 0x4975
0x00000200001c655a : add byte ptr [rcx + 0x3a], al ; ret 0x57d
0x00000200000ff1aa : add byte ptr [rcx + 0x3a], al ; ret 0x840f
0x000002000013b38b : add byte ptr [rcx + 0x3a], al ; ret 0x9375
0x000002000017b38a : add byte ptr [rcx + 0x3a], al ; ror byte ptr [rdi], 0x85 ; ret 0
0x000002000022ec48 : add byte ptr [rcx + 0x3b], 0x54 ; ret
0x000002000060a0b0 : add byte ptr [rcx + 0x3b], al ; enter 0x1674, -0x75 ; ret
0x00000200006b6fb9 : add byte ptr [rcx + 0x3b], al ; push rax ; add al, 0x73 ; jbe 0x200006b6f54 ; ret 0x3949
0x0000020000163553 : add byte ptr [rcx + 0x3b], al ; ret
0x00000200000cbec0 : add byte ptr [rcx + 0x3b], al ; ret 0x830f
0x0000020000007b4e : add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x000002000042c07c : add byte ptr [rcx + 0x3b], al ; ret 0x850f
0x000002000009223b : add byte ptr [rcx + 0x3b], al ; ret 0x860f
0x000002000022400e : add byte ptr [rcx + 0x3b], al ; ret 0x974
0x000002000072b476 : add byte ptr [rcx + 0x3b], al ; sal dword ptr [rdx + 0xe], 0x3b ; ret 0x1773
0x000002000000731a : add byte ptr [rcx + 0x3b], cl ; dec byte ptr [rdi] ; xchg eax, ebx ; ret
0x0000020000024141 : add byte ptr [rcx + 0x3b], cl ; ret
0x0000020000464139 : add byte ptr [rcx + 0x3b], cl ; ret 0x2873
0x000002000045c1aa : add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x000002000008f661 : add byte ptr [rcx + 0x3b], cl ; ret 0x830f
0x0000020000733366 : add byte ptr [rcx + 0x3b], cl ; ret 0x840f
0x000002000064768f : add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x00000200000a9e3d : add byte ptr [rcx + 0x3b], cl ; ret 0x8b48
0x000002000004d26c : add byte ptr [rcx + 0x3b], cl ; ret 0xa375
0x0000020000416658 : add byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x0000020000648d65 : add byte ptr [rcx + 0x3b], cl ; ret 0xb76
0x0000020000625db9 : add byte ptr [rcx + 0x3b], cl ; ret 0xce75
0x000002000048ec24 : add byte ptr [rcx + 0x3b], cl ; ret 0xe275
0x0000020000524908 : add byte ptr [rcx + 0x3b], cl ; ret 0xeb75
0x000002000004d278 : add byte ptr [rcx + 0x3b], cl ; ret 0xf41
0x00000200001f9c6b : add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x00000200000b81fd : add byte ptr [rcx + 0x3b], cl ; ror byte ptr [rdi], 0x82 ; ret
0x000002000002df07 : add byte ptr [rcx + 0x3b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000200000286a5 : add byte ptr [rcx + 0x3b], cl ; ror byte ptr [rdi], 0x85 ; ret 0
0x00000200003d2ac9 : add byte ptr [rcx + 0x41202444], cl ; call rdx
0x00000200004ab130 : add byte ptr [rcx + 0x42bce801], dh ; ret
0x0000020000206696 : add byte ptr [rcx + 0x4820244c], cl ; mov ecx, edi ; call rax
0x0000020000043967 : add byte ptr [rcx + 0x48c03302], cl ; add esp, 0x28 ; ret
0x00000200003d0cf7 : add byte ptr [rcx + 0x50085], cl ; add byte ptr [rcx - 0x75], al ; ret
0x000002000022c2f2 : add byte ptr [rcx + 0x5989e], cl ; add byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x000002000008569b : add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x000002000050523e : add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000615bde : add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000091f86 : add byte ptr [rcx + 0x5c], al ; pop rsi ; pop rbp ; ret
0x0000020000453b7d : add byte ptr [rcx + 0x5c], al ; ret
0x000002000008af84 : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbx ; pop rbp ; ret
0x000002000008980f : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbx ; ret
0x000002000009bdf6 : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000b7f5c : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200004e5947 : add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000c3c5f : add byte ptr [rcx + 0x5d], al ; pop rbx ; pop rbp ; ret
0x00000200000cd3b7 : add byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; ret
0x000002000049693c : add byte ptr [rcx + 0x5d], al ; pop rdi ; ret
0x00000200000ab6d4 : add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000d2b38 : add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; ret
0x0000020000757eec : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rbp ; ret
0x00000200004bf57e : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003dd40c : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000b847c : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x00000200004be5e2 : add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rsi ; ret
0x0000020000134a68 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rbp ; ret
0x0000020000499d51 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x0000020000058400 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rbx ; ret
0x00000200000610dd : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000002e490 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003f3298 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rbp ; pop rbx ; ret
0x00000200000621ac : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rbp ; ret
0x00000200000860b0 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rbx ; ret
0x0000020000497417 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200004120ee : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000b79e8 : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000008c5be : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200000e556a : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000051097b : add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000fdb2 : add byte ptr [rcx + 0x5e], al ; pop rbp ; pop rbx ; ret
0x000002000001c6f3 : add byte ptr [rcx + 0x5e], al ; pop rbp ; ret
0x00000200004c05be : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000041e32 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200000bf191 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbx ; ret
0x0000020000051ba6 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000012c106 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003d6a4 : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001104ae : add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200003dd899 : add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x00000200000d924c : add byte ptr [rcx + 0x5e], al ; pop rsi ; ret
0x00000200001ef534 : add byte ptr [rcx + 0x5e], al ; ret
0x0000020000092ea6 : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000042139b : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000044017a : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000048f031 : add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rsi ; ret
0x00000200000557b4 : add byte ptr [rcx + 0x5f], al ; pop r12 ; ret
0x00000200000a451c : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200000890a2 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000042cf1d : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200004f425f : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000d6c9d : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000091233 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200004a8e2e : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000081f53 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; ret
0x00000200000caaf0 : add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000450a1d : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000027eac : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000669296 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x000002000011efdd : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200000a2024 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000003d437 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000451182 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x000002000068ba2a : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001f569c : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000010b017 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000f447 : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000090a3b : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000065fdef : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x000002000044f17b : add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; ret
0x0000020000017ecd : add byte ptr [rcx + 0x5f], al ; pop rbp ; ret
0x000002000008db36 : add byte ptr [rcx + 0x5f], al ; pop rbx ; pop rcx ; ret
0x00000200000c80e1 : add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rbx ; ret
0x00000200001f48d4 : add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200005f6070 : add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000044e03a : add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000009e44b : add byte ptr [rcx + 0x5f], al ; pop rsi ; pop rbp ; ret
0x000002000049585a : add byte ptr [rcx + 0x5f], al ; pop rsi ; pop rbx ; ret
0x000002000007a5d4 : add byte ptr [rcx + 0x5f], al ; pop rsi ; ret
0x0000020000026f7f : add byte ptr [rcx + 0x5f], al ; ret
0x00000200000c1553 : add byte ptr [rcx + 0x63], cl ; add dword ptr [rcx + 0x3b], ecx ; ret 0x840f
0x000002000039bfe9 : add byte ptr [rcx + 0x63], cl ; ret
0x0000020000131aae : add byte ptr [rcx + 0x64], bh ; mov eax, ecx ; ret
0x00000200000397c8 : add byte ptr [rcx + 0x64e481], cl ; add bh, bh ; ret
0x0000020000143ba3 : add byte ptr [rcx + 0x72], al ; stmxcsr dword ptr [rcx + 0x74] ; ret
0x00000200003b2379 : add byte ptr [rcx + 0xb], al ; fdecstp ; ret
0x00000200000a9ba3 : add byte ptr [rcx + 0xb], cl ; ret
0x000002000009f610 : add byte ptr [rcx + 0xb], cl ; ret 0x7e9
0x000002000009f773 : add byte ptr [rcx + 0xb], cl ; ret 0xa4e9
0x000002000016fb88 : add byte ptr [rcx + 0xf410442], cl ; mov dh, 0x85 ; ret
0x00000200001e36f3 : add byte ptr [rcx + 0xf42df45], cl ; mov bh, 0x44 ; ret 0x8308
0x000002000044a4c2 : add byte ptr [rcx + 0xf], 0x45 ; ret 0xba0f
0x00000200004ccfbc : add byte ptr [rcx + 0xf], al ; fucompi st(0) ; out 0x24, al ; ret 0x85ff
0x00000200004be12b : add byte ptr [rcx + 0xf], al ; mov bh, 0x42 ; add al, byte ptr [rcx - 1] ; ret
0x00000200006510b1 : add byte ptr [rcx + 0xf], al ; mov bh, 0x46 ; add bh, bh ; ret 0x8b44
0x00000200000c9a1c : add byte ptr [rcx + 0xf], al ; mov bh, 0x47 ; add bh, bh ; ret 0x34c
0x0000020000571837 : add byte ptr [rcx + 0xf], al ; mov bh, 0xc9 ; movzx eax, byte ptr [rcx + rax] ; ret
0x00000200000bf041 : add byte ptr [rcx + 0xf], al ; mov bh, 4 ; ret
0x0000020000115cc4 : add byte ptr [rcx + 0xf], al ; mov dh, 0xc0 ; mov cr8, rax ; ret
0x0000020000039155 : add byte ptr [rcx + 0xf], al ; mov dh, 0xc1 ; mov cr8, rax ; ret
0x00000200004a0abc : add byte ptr [rcx + 0xf], al ; mov dh, 0xc2 ; ret
0x000002000073751e : add byte ptr [rcx + 0xf], al ; ret 0x8944
0x0000020000008125 : add byte ptr [rcx + 0xf], al ; ret 0xc803
0x0000020000491e89 : add byte ptr [rcx + 0xf], cl ; ret
0x00000200000f70c9 : add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x00000200000141e6 : add byte ptr [rcx + 0xfffe2], al ; add byte ptr [rax + 3], cl ; ret 0xc148
0x000002000006c197 : add byte ptr [rcx + 1], cl ; mov ds, word ptr [rax - 0x1000000] ; ret
0x0000020000031dfe : add byte ptr [rcx + 3], al ; enter -0x48f1, 4 ; ret
0x00000200005989b8 : add byte ptr [rcx + 3], al ; pop rdi ; adc al, 0xe9 ; lodsb al, byte ptr [rsi] ; ret 0xffe8
0x000002000019cc84 : add byte ptr [rcx + 3], al ; ret
0x00000200001f4725 : add byte ptr [rcx + 3], al ; ret 0x3eb
0x000002000064c512 : add byte ptr [rcx + 3], al ; ret 0x8589
0x000002000058a66d : add byte ptr [rcx + 3], al ; ret 0x8941
0x000002000002c018 : add byte ptr [rcx + 3], al ; ret 0xb70f
0x0000020000116ccd : add byte ptr [rcx + 3], cl ; enter -0x76b8, 0xa ; ret
0x00000200003d24f8 : add byte ptr [rcx + 3], cl ; int 0xff
0x0000020000020be6 : add byte ptr [rcx + 3], cl ; iretd ; jmp rcx
0x00000200004458ec : add byte ptr [rcx + 3], cl ; leave ; jmp rcx
0x00000200000a2782 : add byte ptr [rcx + 3], cl ; ret
0x00000200000a48eb : add byte ptr [rcx + 3], cl ; ret 0x3b48
0x00000200000e4f6b : add byte ptr [rcx + 3], cl ; ret 0x3b49
0x00000200000e4f18 : add byte ptr [rcx + 3], cl ; ret 0x8b4d
0x00000200000413f5 : add byte ptr [rcx + 3], cl ; ret 0xb849
0x0000020000229632 : add byte ptr [rcx + 3], cl ; ret 0xc183
0x0000020000435288 : add byte ptr [rcx + 3], cl ; ret 0xe0ff
0x000002000010ddcc : add byte ptr [rcx + 3], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0x9948
0x000002000016e63c : add byte ptr [rcx + 3], cl ; xor byte ptr [rax + 0x3b], cl ; ret
0x00000200004458eb : add byte ptr [rcx + 3], r9b ; leave ; jmp rcx
0x0000020000113482 : add byte ptr [rcx + rax + 0x35], al ; ret 0x1cbe
0x000002000006a3a1 : add byte ptr [rcx + rax], ah ; ret
0x00000200003c6b29 : add byte ptr [rcx + rcx + 0x3c], cl ; ret 0x8b44
0x00000200006ab808 : add byte ptr [rcx + rcx*4 + 0x1b], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000632ba6 : add byte ptr [rcx + rcx*4 + 0x1c], cl ; ret
0x00000200000bc1ed : add byte ptr [rcx + rcx*4 + 0x25], cl ; ret
0x00000200003b7771 : add byte ptr [rcx + rcx*4 + 0x42], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4918
0x00000200001cd8a1 : add byte ptr [rcx + rcx*4 + 0x64], cl ; and al, 0x20 ; call 0x20000059b88
0x0000020000422856 : add byte ptr [rcx + rcx*4 + 0x64], cl ; and al, 0x20 ; mov rcx, r14 ; call qword ptr [rsi]
0x00000200000b9b74 : add byte ptr [rcx + rcx*4 + 0x65], al ; ret
0x0000020000513142 : add byte ptr [rcx + rcx*4 + 0x6c], al ; and al, 0x20 ; call 0x20000140489
0x000002000059413d : add byte ptr [rcx + rcx*4 + 0x6d], cl ; adc al, ch ; cdq ; ret 0xffba
0x00000200004727b9 : add byte ptr [rcx + rcx*4 + 0x73], al ; adc byte ptr [rax - 0x75], cl ; ret
0x00000200004139bd : add byte ptr [rcx + rcx*4 + 1], al ; xor eax, eax ; ret
0x00000200006b7331 : add byte ptr [rcx + rcx*4 + 1], cl ; mov al, 1 ; ret
0x000002000003c909 : add byte ptr [rcx + rcx*4 + 8], al ; add rsp, 0x28 ; ret
0x00000200006b72e5 : add byte ptr [rcx + rcx*4 + 8], cl ; mov al, 1 ; ret
0x000002000017094e : add byte ptr [rcx + rcx*4 - 0x5c], cl ; ret
0x00000200000d5ebf : add byte ptr [rcx + rcx*4 - 0x77], al ; mov esp, 0xf6000000 ; ret 0xf01
0x0000020000445489 : add byte ptr [rcx + rcx*8 - 0x74b3e78c], al ; ret 0xc2f6
0x00000200005db356 : add byte ptr [rcx + rdi + 0x25], al ; ret 0xd278
0x000002000022955b : add byte ptr [rcx + rdi*2 - 0x48], dh ; mov rax, rdx ; jmp 0x2000022956c
0x000002000022a206 : add byte ptr [rcx + rdi*2 - 0x48], dh ; mov rax, rdx ; jmp 0x2000022a217
0x0000020000737a6f : add byte ptr [rcx + rdi*2 - 0x48], dh ; mov rax, rdx ; jmp 0x20000737a80
0x0000020000204bd2 : add byte ptr [rcx + rdx - 0x75], dh ; ret
0x000002000060e65d : add byte ptr [rcx - 0x178fdbbc], cl ; jns 0x2000060e6a3 ; ret 0x4cff
0x00000200004fe618 : add byte ptr [rcx - 0x2f], cl ; call 0x1ffc3c1660f
0x00000200004fe5f9 : add byte ptr [rcx - 0x2f], cl ; call 0x1ffc3c184f0
0x00000200004fe5da : add byte ptr [rcx - 0x2f], cl ; call 0x1ffc3c1a3d1
0x0000020000423d59 : add byte ptr [rcx - 0x3174b7e2], cl ; call 0x200000459b1
0x00000200000464fa : add byte ptr [rcx - 0x32170fbb], cl ; ret 6
0x0000020000455669 : add byte ptr [rcx - 0x330417ff], dh ; ret 0x48ff
0x000002000051601d : add byte ptr [rcx - 0x39], cl ; ret
0x00000200003cf67b : add byte ptr [rcx - 0x39], cl ; ret 0
0x0000020000402817 : add byte ptr [rcx - 0x39], cl ; ret 0xf000
0x0000020000063c16 : add byte ptr [rcx - 0x39], cl ; ret 0xfe00
0x000002000002d603 : add byte ptr [rcx - 0x3cfe4fff], cl ; xor al, al ; ret
0x0000020000649379 : add byte ptr [rcx - 0x3d], ch ; std ; xor byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xf799
0x0000020000775df1 : add byte ptr [rcx - 0x3f7d97eb], cl ; dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000020000481a75 : add byte ptr [rcx - 0x3f], cl ; call 0x1ffc27b668d
0x000002000049d515 : add byte ptr [rcx - 0x3f], cl ; call 0x1ffc27d212d
0x000002000000a631 : add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x0000020000055e06 : add byte ptr [rcx - 0x3f], cl ; jmp 0x1ffc290a621
0x00000200000a27fd : add byte ptr [rcx - 0x3f], cl ; sti ; adc byte ptr [rcx + 3], cl ; ret
0x0000020000004916 : add byte ptr [rcx - 0x3f], cl ; sti ; add ecx, dword ptr [rcx - 0x75] ; ret
0x00000200006ca9ca : add byte ptr [rcx - 0x43], al ; add eax, 0xf6000010 ; ret 0x7508
0x00000200001d739a : add byte ptr [rcx - 0x45], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], al ; ret 0x5175
0x00000200005218a5 : add byte ptr [rcx - 0x47], al ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005dc973 : add byte ptr [rcx - 0x47], al ; and eax, 0xff000009 ; ret 0xb841
0x00000200000a5eca : add byte ptr [rcx - 0x47], al ; ret 0
0x000002000065e8d9 : add byte ptr [rcx - 0x48], al ; add byte ptr [rax], al ; or byte ptr [rax], al ; call 0x2000005ab19
0x00000200003b9bd2 : add byte ptr [rcx - 0x48], al ; insd dword ptr [rdi], dx ; jbe 0x200003b9be1 ; ret 0x1b9
0x0000020000626612 : add byte ptr [rcx - 0x48], al ; insd dword ptr [rdi], dx ; push rdx ; ja 0x2000062660a ; ret 0xc0b6
0x00000200001ff539 : add byte ptr [rcx - 0x48], al ; jae 0x200001ff5b3 ; push rbx ; je 0x200001ff4ca ; ret 0x100f
0x0000020000665a43 : add byte ptr [rcx - 0x48], al ; je 0x20000665ac9 ; js 0x20000665a3c ; xchg eax, ecx ; ret 0xffbc
0x00000200004e5ac1 : add byte ptr [rcx - 0x48], al ; outsb dx, byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; call 0x20000231ce9
0x000002000063b512 : add byte ptr [rcx - 0x48], al ; push rbx ; push rax ; jo 0x2000063b50a ; ret 0xbf67
0x000002000056de11 : add byte ptr [rcx - 0x48], al ; push rbx ; push rbx ; jo 0x2000056de09 ; ret
0x0000020000769592 : add byte ptr [rcx - 0x48], al ; ret 0
0x00000200000cd511 : add byte ptr [rcx - 0x4b], al ; add esi, esi ; ret 0xf04
0x0000020000008ee4 : add byte ptr [rcx - 0x4e], al ; add cl, byte ptr [rax - 0x75] ; ret 0x8b48
0x00000200001d3ddc : add byte ptr [rcx - 0x50], al ; adc dword ptr [rax + 0xf], ecx ; ret 0x8b48
0x00000200006bc196 : add byte ptr [rcx - 0x50], al ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x12e8
0x0000020000438c89 : add byte ptr [rcx - 0x73], al ; adc byte ptr [r11], r15b ; ret
0x00000200001f5106 : add byte ptr [rcx - 0x73], al ; add dword ptr [rcx + 0x3b], eax ; ret 0x870f
0x000002000022644c : add byte ptr [rcx - 0x73], al ; add r15d, dword ptr [rdx] ; ret
0x00000200006ab7b1 : add byte ptr [rcx - 0x73], al ; call 0x200452cbb05
0x0000020000411871 : add byte ptr [rcx - 0x73], al ; frstor dword ptr [rsi - 0x7b] ; ret
0x000002000052929a : add byte ptr [rcx - 0x73], al ; inc byte ptr [rcx + 0x3b] ; ret 0x2377
0x00000200000a5213 : add byte ptr [rcx - 0x73], al ; jmp qword ptr [rbx]
0x0000020000606e84 : add byte ptr [rcx - 0x73], al ; outsb dx, byte ptr [rsi] ; ret 0xb841
0x00000200001d5384 : add byte ptr [rcx - 0x73], al ; push rax ; add eax, ebp ; ret 0xef0b
0x0000020000507bd0 : add byte ptr [rcx - 0x73], al ; push rdi ; pop rsp ; call 0x200001356ac
0x00000200004ad068 : add byte ptr [rcx - 0x73], cl ; add al, 0x90 ; ret
0x000002000062e6dd : add byte ptr [rcx - 0x73], cl ; add cl, byte ptr [rcx - 0x75] ; ret 0xf748
0x000002000043afc0 : add byte ptr [rcx - 0x73], cl ; and byte ptr [rdi], r9b ; xchg eax, esp ; ret 0x8948
0x000002000042aac6 : add byte ptr [rcx - 0x73], cl ; or al, r13b ; sbb dl, bl ; ret
0x000002000006d61e : add byte ptr [rcx - 0x74a7dbac], cl ; ret 0x34c
0x00000200006c701a : add byte ptr [rcx - 0x74b3c7b8], cl ; ret
0x00000200001c641c : add byte ptr [rcx - 0x74b727bb], cl ; pushfq ; ret 0xf2c0
0x00000200001c6385 : add byte ptr [rcx - 0x74b72bbb], cl ; pushfq ; ret 0xf2c0
0x000002000022bda3 : add byte ptr [rcx - 0x74b797bb], cl ; add dword ptr [rcx - 0x7d], eax ; ret
0x000002000075fc68 : add byte ptr [rcx - 0x74bbc7ba], cl ; ret
0x00000200007852aa : add byte ptr [rcx - 0x74bbd7b9], cl ; ret
0x0000020000057e7e : add byte ptr [rcx - 0x74befbbd], cl ; ret 0xc123
0x000002000060f8ab : add byte ptr [rcx - 0x74bfdbbc], cl ; ret 0x2b41
0x0000020000450fd7 : add byte ptr [rcx - 0x75], al ; adc al, 0x2b ; ret 0x341
0x0000020000223f22 : add byte ptr [rcx - 0x75], al ; adc byte ptr [rcx - 0x75], cl ; ret
0x000002000022db87 : add byte ptr [rcx - 0x75], al ; adc byte ptr [rcx - 0x75], cl ; ret 0xf748
0x000002000007be06 : add byte ptr [rcx - 0x75], al ; add al, 0x80 ; add rsp, 0x28 ; ret
0x00000200001f89cd : add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x0000020000229b2b : add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x3b], al ; ret
0x000002000022400b : add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x3b], al ; ret 0x974
0x00000200000a7cbc : add byte ptr [rcx - 0x75], al ; call rbx
0x00000200001fa5c7 : add byte ptr [rcx - 0x75], al ; cmp cl, byte ptr [rcx - 0x7d] ; ret 0x8504
0x0000020000049efc : add byte ptr [rcx - 0x75], al ; enter -0x1f2d, 0x3b ; ret 0xef72
0x0000020000498706 : add byte ptr [rcx - 0x75], al ; fisttp qword ptr [rcx - 0x74bbfba3] ; ret
0x00000200004ac704 : add byte ptr [rcx - 0x75], al ; int 0xe8
0x00000200003ca113 : add byte ptr [rcx - 0x75], al ; mov cl, 0xe0 ; rdpmc ; ret
0x000002000040505c : add byte ptr [rcx - 0x75], al ; pop rbx ; or bh, dh ; ret
0x00000200003b49e0 : add byte ptr [rcx - 0x75], al ; push rax ; sub dh, dh ; ret 0xf40
0x000002000064ae02 : add byte ptr [rcx - 0x75], al ; push rcx ; add al, 0x8b ; ret 0x8b41
0x0000020000493bc6 : add byte ptr [rcx - 0x75], al ; push rcx ; cmp dh, dh ; ret 0xf20
0x00000200000bff30 : add byte ptr [rcx - 0x75], al ; push rcx ; or byte ptr [rbx], bh ; ret 0x830f
0x000002000012c3b4 : add byte ptr [rcx - 0x75], al ; push rdx ; add al, 0x83 ; ret 0x2307
0x0000020000495a17 : add byte ptr [rcx - 0x75], al ; push rsi ; cmp byte ptr [rax - 0x7d], cl ; ret
0x0000020000003c0c : add byte ptr [rcx - 0x75], al ; ret
0x0000020000532430 : add byte ptr [rcx - 0x75], al ; ret 0x1b2
0x00000200000fbb4f : add byte ptr [rcx - 0x75], al ; ret 0x2348
0x0000020000731adb : add byte ptr [rcx - 0x75], al ; ret 0x2be
0x000002000015a360 : add byte ptr [rcx - 0x75], al ; ret 0x2eb
0x00000200001b551e : add byte ptr [rcx - 0x75], al ; ret 0x348
0x00000200003f3386 : add byte ptr [rcx - 0x75], al ; ret 0x3948
0x00000200003cfc87 : add byte ptr [rcx - 0x75], al ; ret 0x3b4d
0x00000200004ac865 : add byte ptr [rcx - 0x75], al ; ret 0x48f0
0x00000200006c0a75 : add byte ptr [rcx - 0x75], al ; ret 0x587
0x000002000063be4a : add byte ptr [rcx - 0x75], al ; ret 0x694c
0x000002000022bcf8 : add byte ptr [rcx - 0x75], al ; ret 0x8141
0x00000200000f697a : add byte ptr [rcx - 0x75], al ; ret 0x8348
0x0000020000524222 : add byte ptr [rcx - 0x75], al ; ret 0x840f
0x0000020000643dc6 : add byte ptr [rcx - 0x75], al ; ret 0x8545
0x00000200006b5316 : add byte ptr [rcx - 0x75], al ; ret 0x8946
0x0000020000574c89 : add byte ptr [rcx - 0x75], al ; ret 0x8948
0x0000020000599bef : add byte ptr [rcx - 0x75], al ; ret 0x8b44
0x000002000005328a : add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200000897e5 : add byte ptr [rcx - 0x75], al ; ret 0x8b4c
0x00000200000e92f6 : add byte ptr [rcx - 0x75], al ; ret 0x8d4c
0x00000200003f883c : add byte ptr [rcx - 0x75], al ; ret 0x950f
0x00000200003f2342 : add byte ptr [rcx - 0x75], al ; ret 0xb41
0x000002000022db10 : add byte ptr [rcx - 0x75], al ; ret 0xba49
0x00000200007337fa : add byte ptr [rcx - 0x75], al ; ret 0xbc41
0x000002000022d8cc : add byte ptr [rcx - 0x75], al ; ret 0xbe48
0x000002000073187a : add byte ptr [rcx - 0x75], al ; ret 0xbf41
0x000002000006d6be : add byte ptr [rcx - 0x75], al ; ret 0xc22b
0x00000200000f126c : add byte ptr [rcx - 0x75], al ; ret 0xd285
0x000002000003d7e4 : add byte ptr [rcx - 0x75], al ; ret 0xd9eb
0x0000020000173f57 : add byte ptr [rcx - 0x75], al ; ret 0xe083
0x00000200003f589b : add byte ptr [rcx - 0x75], al ; ret 0xe883
0x0000020000103a0f : add byte ptr [rcx - 0x75], al ; ret 0xe8c1
0x00000200001a1d2b : add byte ptr [rcx - 0x75], al ; ret 0xf41
0x00000200005778c6 : add byte ptr [rcx - 0x75], al ; ret 0xf42
0x0000020000113918 : add byte ptr [rcx - 0x75], al ; ret 0xf741
0x000002000045069b : add byte ptr [rcx - 0x75], al ; ret 0xff25
0x000002000000832f : add byte ptr [rcx - 0x75], al ; ret 0xff41
0x00000200005a7f27 : add byte ptr [rcx - 0x75], al ; ror byte ptr [rax - 0x75], 0x8c ; ret 0xb6e0
0x0000020000193d3c : add byte ptr [rcx - 0x75], al ; ror byte ptr [rbp - 0x75], 0x44 ; ret 0x4c40
0x0000020000019140 : add byte ptr [rcx - 0x75], al ; ror byte ptr [rcx + 0xf], 0xab ; ret 0x894c
0x00000200006cb118 : add byte ptr [rcx - 0x75], al ; ror byte ptr [rcx - 0x75], 0x8c ; ret 0x8068
0x00000200000a91c0 : add byte ptr [rcx - 0x75], al ; ror dword ptr [rax + 0xf], -0x51 ; ret
0x0000020000232100 : add byte ptr [rcx - 0x75], al ; ror dword ptr [rax - 0x75], -0x7c ; ret 0x830
0x0000020000221a87 : add byte ptr [rcx - 0x75], al ; sbb byte ptr [r9 + 3], r8b ; ret
0x000002000023034b : add byte ptr [rcx - 0x75], al ; sbb byte ptr [rbx], al ; ret
0x00000200000f077a : add byte ptr [rcx - 0x75], al ; xlatb ; call rax
0x000002000003e536 : add byte ptr [rcx - 0x75], cl ; adc byte ptr [r8 + 0x23], cl ; ret 0x3b48
0x00000200001ae595 : add byte ptr [rcx - 0x75], cl ; adc r8b, bpl ; ret
0x00000200000247d4 : add byte ptr [rcx - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret 0x7774
0x00000200005dfced : add byte ptr [rcx - 0x75], cl ; call 0x2004920873f
0x0000020000111d5c : add byte ptr [rcx - 0x75], cl ; cmp r8b, bpl ; ret 4
0x00000200000970a5 : add byte ptr [rcx - 0x75], cl ; fild dword ptr [rbp - 0x75] ; ret
0x00000200003e2023 : add byte ptr [rcx - 0x75], cl ; fld1 ; jl 0x200003e2010 ; ret
0x0000020000648cc9 : add byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax + 0x63] ; ret 0x3345
0x0000020000633020 : add byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0x8548
0x000002000049a2f0 : add byte ptr [rcx - 0x75], cl ; int 0xe8
0x0000020000765855 : add byte ptr [rcx - 0x75], cl ; iretd ; call 0x200000c1b36
0x0000020000692613 : add byte ptr [rcx - 0x75], cl ; iretd ; call r14
0x00000200004d490b : add byte ptr [rcx - 0x75], cl ; iretd ; call rdi
0x00000200004195e1 : add byte ptr [rcx - 0x75], cl ; leave ; call 0x2000004200b
0x000002000004b21c : add byte ptr [rcx - 0x75], cl ; nop ; push -0x9ffffff ; ret 0xf01
0x00000200001148fa : add byte ptr [rcx - 0x75], cl ; or byte ptr [r15], r9b ; xchg eax, esp ; ret 0x8844
0x0000020000009fd5 : add byte ptr [rcx - 0x75], cl ; or byte ptr [r9 - 0x75], r9b ; ret 0xc148
0x000002000004e7a7 : add byte ptr [rcx - 0x75], cl ; or byte ptr [rcx + 0x23], cl ; ret
0x000002000006e9c8 : add byte ptr [rcx - 0x75], cl ; or cl, bpl ; ret 0xffef
0x0000020000222840 : add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x00000200001364a8 : add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x000002000077b159 : add byte ptr [rcx - 0x75], cl ; or dword ptr [rax - 0x75], ecx ; ret
0x0000020000400574 : add byte ptr [rcx - 0x75], cl ; or r8b, r13b ; ret 0xc73c
0x00000200004ac647 : add byte ptr [rcx - 0x75], cl ; pop rax ; and dh, dh ; ret
0x0000020000051746 : add byte ptr [rcx - 0x75], cl ; pop rbp ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000010267 : add byte ptr [rcx - 0x75], cl ; ret
0x00000200001fa85f : add byte ptr [rcx - 0x75], cl ; ret 0x148
0x000002000006a255 : add byte ptr [rcx - 0x75], cl ; ret 0x2348
0x0000020000184f75 : add byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x00000200000100d6 : add byte ptr [rcx - 0x75], cl ; ret 0x348
0x000002000072b8a0 : add byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x0000020000177979 : add byte ptr [rcx - 0x75], cl ; ret 0x3ee9
0x0000020000177989 : add byte ptr [rcx - 0x75], cl ; ret 0x3fe9
0x00000200001779a9 : add byte ptr [rcx - 0x75], cl ; ret 0x40e9
0x0000020000099837 : add byte ptr [rcx - 0x75], cl ; ret 0x48f0
0x00000200004947b3 : add byte ptr [rcx - 0x75], cl ; ret 0x49f0
0x000002000011c746 : add byte ptr [rcx - 0x75], cl ; ret 0x7c89
0x000002000011c591 : add byte ptr [rcx - 0x75], cl ; ret 0x7d89
0x000002000003b595 : add byte ptr [rcx - 0x75], cl ; ret 0x8348
0x00000200000acde1 : add byte ptr [rcx - 0x75], cl ; ret 0x8944
0x00000200000acbf9 : add byte ptr [rcx - 0x75], cl ; ret 0x8945
0x00000200003eb862 : add byte ptr [rcx - 0x75], cl ; ret 0x8948
0x0000020000229d3d : add byte ptr [rcx - 0x75], cl ; ret 0x894c
0x00000200000200f3 : add byte ptr [rcx - 0x75], cl ; ret 0x8b44
0x000002000002582c : add byte ptr [rcx - 0x75], cl ; ret 0x8b48
0x000002000001793d : add byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x000002000022588b : add byte ptr [rcx - 0x75], cl ; ret 0x8f8b
0x0000020000010dd1 : add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000002a69 : add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x000002000008d1dd : add byte ptr [rcx - 0x75], cl ; ret 0xf41
0x000002000002dae4 : add byte ptr [rcx - 0x75], cl ; ret 0xf749
0x00000200004d0726 : add byte ptr [rcx - 0x75], cl ; retf ; mov dword ptr [rsp + 0x20], eax ; call r10
0x000002000007de5f : add byte ptr [rcx - 0x75], cl ; ror byte ptr [rax + 0xf], 0xaf ; ret 0x349
0x00000200004c9fd8 : add byte ptr [rcx - 0x75], cl ; salc ; mov rcx, r13 ; call rax
0x00000200000a1608 : add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7b], r9b ; ret
0x00000200000a7c5a : add byte ptr [rcx - 0x75], cl ; sbb byte ptr [rax - 0x7b], r9b ; ret
0x00000200000b6533 : add byte ptr [rcx - 0x75], cl ; sbb dh, dh ; ret
0x00000200000a4adb : add byte ptr [rcx - 0x75], cl ; sub byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x0000020000189d6a : add byte ptr [rcx - 0x75], cl ; xchg eax, edi ; push -0x9ffffff ; ret 0x7501
0x000002000075ea41 : add byte ptr [rcx - 0x75], cl ; xchg eax, esp ; ret
0x0000020000525a93 : add byte ptr [rcx - 0x75], cl ; xlatb ; lea rcx, qword ptr [rbp - 9] ; call r12
0x0000020000424408 : add byte ptr [rcx - 0x76], al ; iretd ; call 0x20000050277
0x00000200004e80af : add byte ptr [rcx - 0x76], al ; mul byte ptr [rsi - 0x7d] ; ret 0xb902
0x000002000011add1 : add byte ptr [rcx - 0x76], al ; push rsi ; and dh, dh ; ret 0xf10
0x0000020000216a24 : add byte ptr [rcx - 0x76], al ; ret
0x00000200003e32d2 : add byte ptr [rcx - 0x76], al ; ret 0x4488
0x00000200004132ca : add byte ptr [rcx - 0x77], al ; cmp dh, dh ; ret
0x0000020000617f69 : add byte ptr [rcx - 0x77], al ; jl 0x20000617f99 ; sbb al, 0x8b ; ret
0x00000200003be6de : add byte ptr [rcx - 0x77], al ; or al, 0x8b ; ret
0x000002000015237d : add byte ptr [rcx - 0x77], cl ; adc dword ptr [rcx - 0x75], eax ; ret
0x0000020000152f89 : add byte ptr [rcx - 0x77], cl ; adc dword ptr [rcx - 0x75], eax ; ret 0xf49
0x000002000000cbb6 : add byte ptr [rcx - 0x77], cl ; adc ecx, dword ptr [rcx - 0x7d] ; ret
0x0000020000424e90 : add byte ptr [rcx - 0x77], cl ; add al, byte ptr [rbp + 0x3b] ; ret
0x000002000003081b : add byte ptr [rcx - 0x77], cl ; add bh, bh ; ret 0x8948
0x000002000003510d : add byte ptr [rcx - 0x77], cl ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000211b12 : add byte ptr [rcx - 0x77], cl ; mov al, 1 ; ret
0x00000200004f129a : add byte ptr [rcx - 0x77], cl ; mov r8d, 0xfe418d45 ; call qword ptr [rbx]
0x000002000003c5a3 : add byte ptr [rcx - 0x77], cl ; or byte ptr [rcx + 3], cl ; ret 0x8948
0x000002000003c738 : add byte ptr [rcx - 0x77], cl ; or dword ptr [rcx + 3], ecx ; ret 0x8949
0x0000020000211afc : add byte ptr [rcx - 0x77], cl ; xor al, al ; ret
0x00000200004b326c : add byte ptr [rcx - 0x79], al ; je 0x200004b3200 ; ror byte ptr [rdi], 0x85 ; ret 4
0x000002000058f38b : add byte ptr [rcx - 0x7b], al ; ret 0x2fe9
0x00000200003b54fe : add byte ptr [rcx - 0x7b], al ; ret 0x4c75
0x00000200005194ba : add byte ptr [rcx - 0x7b], al ; ret 0x850f
0x000002000052eb0f : add byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x00000200003a644b : add byte ptr [rcx - 0x7b], cl ; ret 0xb74
0x00000200003ea4ef : add byte ptr [rcx - 0x7c9fdb84], cl ; call qword ptr [rax]
0x00000200000f61e7 : add byte ptr [rcx - 0x7c], al ; ret
0x0000020000019033 : add byte ptr [rcx - 0x7c], al ; ret 0x574
0x00000200000301c7 : add byte ptr [rcx - 0x7c], al ; ret 0x850f
0x00000200001da359 : add byte ptr [rcx - 0x7c], al ; retf 0x575 ; mov eax, r10d ; jmp 0x200001da393
0x00000200005742ea : add byte ptr [rcx - 0x7c], al ; sal byte ptr [rcx + rdx + 0x44], 0x8b ; ret
0x0000020000634f57 : add byte ptr [rcx - 0x7cb797b5], cl ; ret
0x000002000076840d : add byte ptr [rcx - 0x7cb7e7bd], cl ; ret
0x00000200005cef3e : add byte ptr [rcx - 0x7cb7efbe], cl ; ret 0xff14
0x000002000005dead : add byte ptr [rcx - 0x7d], al ; add byte ptr ds:[rdi], cl ; xchg eax, esp ; ret 0x8d49
0x000002000046404c : add byte ptr [rcx - 0x7d], al ; and byte ptr [rax], al ; ret
0x000002000003abd8 : add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000687bf6 : add byte ptr [rcx - 0x7d], al ; inc dword ptr [rsp + rsi*2] ; add eax, dword ptr [rcx - 0x75] ; ret
0x000002000006d7fa : add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x0000020000419280 : add byte ptr [rcx - 0x7d], al ; ret
0x0000020000438f6f : add byte ptr [rcx - 0x7d], al ; ret 0x4560
0x0000020000643f21 : add byte ptr [rcx - 0x7d], al ; ret 0x49f0
0x00000200004b061c : add byte ptr [rcx - 0x7d], al ; ret 0xebe0
0x0000020000416133 : add byte ptr [rcx - 0x7d], al ; stc ; or byte ptr [rdi], cl ; test ebx, edi ; ret
0x00000200005cb643 : add byte ptr [rcx - 0x7d], cl ; out dx, eax ; add dword ptr [rbp - 0x1a], esi ; jmp 0x200005178fd
0x000002000000a243 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000200001366d0 : add byte ptr [rcx - 0x7d], cl ; ret 0x4008
0x0000020000064aa9 : add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x000002000072b8c2 : add byte ptr [rcx - 0x7d], cl ; ret 0x4108
0x0000020000651e10 : add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000020000430245 : add byte ptr [rcx - 0x7d], cl ; ret 0x41fe
0x00000200000461c0 : add byte ptr [rcx - 0x7d], cl ; ret 0x4504
0x000002000016eb0a : add byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x00000200003c8ed9 : add byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x000002000008039e : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000002000001197f : add byte ptr [rcx - 0x7d], cl ; ret 0x4930
0x00000200001ed630 : add byte ptr [rcx - 0x7d], cl ; ret 0x4a10
0x0000020000097b4e : add byte ptr [rcx - 0x7d], cl ; ret 0x4d08
0x000002000010b093 : add byte ptr [rcx - 0x7d], cl ; ret 0x6607
0x00000200001c3217 : add byte ptr [rcx - 0x7d], cl ; ret 0xeb10
0x00000200003e60c3 : add byte ptr [rcx - 0x7d], cl ; ret 0xebfe
0x0000020000148e22 : add byte ptr [rcx - 0x7d], cl ; ret 0xff02
0x000002000019394a : add byte ptr [rcx - 0x7d], cl ; ror byte ptr [rsp + rcx*2], 3 ; ret
0x000002000022c8d7 : add byte ptr [rcx - 0x7f], al ; ret
0x0000020000016905 : add byte ptr [rcx - 0x7f], al ; ret 0x3039
0x00000200004ef954 : add byte ptr [rcx - 0x7f], cl ; ret
0x00000200000d08eb : add byte ptr [rcx - 0x7f], cl ; ret 0x3600
0x000002000020be87 : add byte ptr [rcx - 0x7f], cl ; ret 0xa00
0x0000020000198cf9 : add byte ptr [rcx - 0x7f], cl ; ret 0xb98
0x00000200000a66a9 : add byte ptr [rcx - 0x7f], cl ; ret 0xc0
0x0000020000098ac7 : add byte ptr [rcx - 0x80], al ; call qword ptr [rcx]
0x000002000007fc70 : add byte ptr [rcx - 0x80], al ; cli ; adc dword ptr [rsp + rbx - 1], esi ; ret 0x5489
0x000002000004100a : add byte ptr [rcx - 0x8cbdb8c], cl ; ret
0x0000020000090c20 : add byte ptr [rcx - 0x9afdbb4], cl ; ret
0x000002000008a549 : add byte ptr [rcx - 0x9c7dba4], cl ; ret
0x0000020000067480 : add byte ptr [rcx - 0x9cfdbbc], cl ; ret
0x0000020000003837 : add byte ptr [rcx - 0xa], al ; ret
0x0000020000125775 : add byte ptr [rcx - 0xa], al ; ret 0x7402
0x0000020000148e15 : add byte ptr [rcx - 0xa], al ; ret 0x7406
0x0000020000148e2e : add byte ptr [rcx - 0xa], al ; ret 0x7506
0x00000200005066b5 : add byte ptr [rcx - 0xa], al ; ret 0xeb03
0x000002000004e795 : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x0000020000207148 : add byte ptr [rcx - 0xa], al ; ret 0xf02
0x000002000020717b : add byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000020000207158 : add byte ptr [rcx - 0xa], al ; ret 0xf08
0x000002000049862d : add byte ptr [rcx - 0xa], al ; ret 0xf0f
0x00000200004fc5c2 : add byte ptr [rcx - 0xcf60bc], cl ; ret
0x000002000013f801 : add byte ptr [rcx - 1], al ; and al, 0xd0 ; mov qword ptr [rcx], rax ; ret
0x00000200004390da : add byte ptr [rcx - 1], al ; or byte ptr [rax + 0x3b], cl ; ret 0xe872
0x000002000008e3ff : add byte ptr [rcx - 1], al ; ret
0x00000200003d3a67 : add byte ptr [rcx - 1], al ; ret 0x3b45
0x000002000013c629 : add byte ptr [rcx - 1], al ; ret 0x4de9
0x000002000013f313 : add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200000ab56a : add byte ptr [rcx - 1], al ; ret 0x8944
0x000002000013b7fb : add byte ptr [rcx - 1], al ; ret 0x95e9
0x00000200005d342e : add byte ptr [rcx - 1], cl ; ret 0x6b45
0x000002000000c197 : add byte ptr [rcx - 9], al ; ret
0x000002000007c0bd : add byte ptr [rcx - 9], al ; ret 0
0x00000200000d456a : add byte ptr [rcx - 9], al ; ret 0x7ffe
0x00000200003f900f : add byte ptr [rcx - 9], al ; ret 0xfff
0x00000200000cb374 : add byte ptr [rcx - 9], al ; rol dword ptr [rcx + 0x23], cl ; ret
0x00000200000cb381 : add byte ptr [rcx - 9], al ; sal edi, cl ; rol byte ptr [rcx + 0x23], 1 ; ret
0x00000200000803b1 : add byte ptr [rcx - 9], cl ; ret 0xfff
0x000002000052e157 : add byte ptr [rcx], 0 ; adc al, 0 ; call 0x2000014f4c8
0x000002000011b77a : add byte ptr [rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200001e9262 : add byte ptr [rcx], 0 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x00000200001ed62d : add byte ptr [rcx], 0 ; add byte ptr [rcx - 0x7d], cl ; ret 0x4a10
0x00000200001431b5 : add byte ptr [rcx], 0 ; add cl, ch ; ret 0xac
0x00000200005fd1ae : add byte ptr [rcx], al ; add al, al ; ret
0x00000200001f8a05 : add byte ptr [rcx], al ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000044d26 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, al ; mov al, cl ; ret
0x000002000062012b : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x830f
0x00000200006256d8 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0xb841
0x000002000008c0a8 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200004c3a89 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000005d0a5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], dh ; ret
0x000002000013f30f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x000002000053e221 : add byte ptr [rcx], al ; add byte ptr [rax], al ; call r14
0x00000200006c7a06 : add byte ptr [rcx], al ; add byte ptr [rax], al ; jb 0x200006c7a17 ; xor eax, eax ; ret
0x0000020000763e1c : add byte ptr [rcx], al ; add byte ptr [rax], al ; jb 0x20000763dd2 ; ret
0x00000200003f1dd3 : add byte ptr [rcx], al ; add byte ptr [rax], al ; jmp 0x200003f1d66
0x00000200005a1de5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x12 ; call rax
0x000002000058071a : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x13 ; call r10
0x00000200005806c5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x13 ; call rax
0x00000200004c24f7 : add byte ptr [rcx], al ; add byte ptr [rax], al ; mov rcx, qword ptr [rdi + 8] ; call rax
0x00000200000c3c5c : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop r13 ; pop rbx ; pop rbp ; ret
0x00000200004be5df : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rsi ; ret
0x00000200004011dd : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200001c492f : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000088322 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200000ec739 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001b01c5 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000062d071 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000002000014e351 : add byte ptr [rcx], al ; add byte ptr [rax], al ; sti ; ret
0x0000020000579caa : add byte ptr [rcx], al ; add byte ptr [rax], al ; xor edx, edx ; call 0x200001a6b65
0x0000020000026f6d : add byte ptr [rcx], al ; add byte ptr [rax], al ; xor rcx, rsp ; call 0x20000133189
0x000002000008455e : add byte ptr [rcx], al ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x000002000003e18c : add byte ptr [rcx], al ; add byte ptr [rbx + 5], dh ; add rsp, 0x38 ; ret
0x00000200003f739a : add byte ptr [rcx], al ; add byte ptr [rbx], ah ; ret 0xc23b
0x00000200006b4bf0 : add byte ptr [rcx], al ; add byte ptr [rbx], bh ; ret 0xa73
0x00000200001f9c69 : add byte ptr [rcx], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x0000020000057e7c : add byte ptr [rcx], al ; add byte ptr [rcx - 0x74befbbd], cl ; ret 0xc123
0x00000200001ae593 : add byte ptr [rcx], al ; add byte ptr [rcx - 0x75], cl ; adc r8b, bpl ; ret
0x000002000009a313 : add byte ptr [rcx], al ; add byte ptr [rdi], cl ; test edi, esp ; ret 0xb
0x000002000040f9f9 : add byte ptr [rcx], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x000002000015ef0c : add byte ptr [rcx], al ; add cl, ch ; ret
0x00000200001efccb : add byte ptr [rcx], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000060b70 : add byte ptr [rcx], al ; add rsp, 0x28 ; ret
0x0000020000104d39 : add byte ptr [rcx], al ; add rsp, 0x38 ; ret
0x0000020000069e87 : add byte ptr [rcx], al ; je 0x20000069e90 ; ret
0x00000200000d39ee : add byte ptr [rcx], al ; je 0x200000d39fb ; xor al, al ; ret
0x0000020000417aa7 : add byte ptr [rcx], al ; je 0x20000417ab8 ; add rsp, 0x28 ; ret
0x00000200001859a2 : add byte ptr [rcx], al ; jmp 0x20000091c70
0x00000200000e79ee : add byte ptr [rcx], al ; jne 0x200000e79ff ; add rsp, 0x38 ; ret
0x00000200001d1c30 : add byte ptr [rcx], al ; jne 0x200001d1c3c ; mov al, 1 ; ret
0x00000200004a0af7 : add byte ptr [rcx], al ; mov al, 1 ; ret
0x00000200001c3d3f : add byte ptr [rcx], al ; mov qword ptr [rdx], r9 ; ret
0x000002000005e4e6 : add byte ptr [rcx], al ; mov r8, r10 ; jmp 0x2000005e4b3
0x00000200000f1ec5 : add byte ptr [rcx], al ; ret
0x000002000001d313 : add byte ptr [rcx], al ; ret 1
0x0000020000604aac : add byte ptr [rcx], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000304a4 : add byte ptr [rcx], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000021af94 : add byte ptr [rcx], bh ; add dword ptr [rdx + 3], esi ; xor al, al ; ret
0x0000020000677a7c : add byte ptr [rcx], bl ; or byte ptr [rax], al ; test rax, rax ; je 0x20000677a94 ; call rax
0x00000200005b44f5 : add byte ptr [rcx], bl ; shr cl, 0x59 ; ret
0x00000200005de3ac : add byte ptr [rcx], bl ; shr cl, 0xf3 ; or byte ptr [rax], al ; add al, ch ; ret
0x000002000051da7c : add byte ptr [rcx], ch ; ret 0x33ff
0x000002000001de00 : add byte ptr [rcx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001e7fb2 : add byte ptr [rcx], cl ; add rsp, 0x28 ; ret
0x0000020000740b6e : add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x0000020000221984 : add byte ptr [rcx], dl ; add byte ptr [rbx], ah ; ret 0xc23b
0x00000200000ef55b : add byte ptr [rdi + 0x18], bh ; mov eax, 1 ; ret
0x000002000041cb97 : add byte ptr [rdi + 0x2f], dh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004037b4 : add byte ptr [rdi + 0x50], dh ; add rsp, 0x38 ; ret
0x00000200000a2578 : add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x000002000065b409 : add byte ptr [rdi + 0x5b], bl ; ret
0x0000020000052567 : add byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000000a569 : add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000005a258 : add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x0000020000100f0d : add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200004766d0 : add byte ptr [rdi + 1], dh ; ret
0x000002000060009a : add byte ptr [rdi + 3], bh ; mov al, 1 ; ret
0x00000200004c8101 : add byte ptr [rdi + 4], dh ; mov al, r8b ; ret
0x000002000000f095 : add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001e2597 : add byte ptr [rdi + rcx + 0x20], al ; ret 0x2b9
0x00000200000094b5 : add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x0000020000031397 : add byte ptr [rdi + rcx + 0x20], al ; ret 0xf44
0x000002000001f84c : add byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200001bc2c4 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x188
0x0000020000085fb3 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x41f0
0x000002000001cd47 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4488
0x0000020000082809 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4865
0x00000200000203c6 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4980
0x000002000005433e : add byte ptr [rdi + rcx + 0x22], al ; ret 0x4c65
0x0000020000063d86 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x5f6
0x00000200000628ca : add byte ptr [rdi + rcx + 0x22], al ; ret 0x8841
0x00000200001c1327 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x8b48
0x00000200003a52e8 : add byte ptr [rdi + rcx + 0x22], al ; ret 0x8ee8
0x00000200001c03fa : add byte ptr [rdi + rcx + 0x22], al ; ret 0xa483
0x0000020000740a5c : add byte ptr [rdi + rcx + 0x22], al ; ror byte ptr [rdi], 0x20 ; ret
0x0000020000020cb7 : add byte ptr [rdi + rcx + 0x22], al ; sal esi, 5 ; ret
0x0000020000517773 : add byte ptr [rdi + rcx + 0x44], al ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200001a9c63 : add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b49
0x000002000039b0da : add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b4c
0x00000200004e3a88 : add byte ptr [rdi + rcx + 0x4f], cl ; ret
0x00000200000b11a3 : add byte ptr [rdi + rcx - 0x42], al ; stosd dword ptr [rdi], eax ; ret
0x00000200005d1747 : add byte ptr [rdi + rcx - 0x43], al ; rol byte ptr [rcx - 0x7d], 1 ; ret 0xe9f2
0x0000020000030c55 : add byte ptr [rdi + rcx - 0x44], al ; ret
0x00000200004596e5 : add byte ptr [rdi + rcx - 0x44], al ; ret 0x8341
0x00000200000b49e5 : add byte ptr [rdi + rcx - 0x44], al ; ret 0x8944
0x0000020000030c54 : add byte ptr [rdi + rcx - 0x44], r8b ; ret
0x000002000073964e : add byte ptr [rdi + rcx - 0x49], al ; fadd dword ptr [rcx - 0x7d] ; ret
0x00000200001f1075 : add byte ptr [rdi + rcx - 0x49], al ; push rbx ; add al, byte ptr [rcx - 0xa] ; ret 0x7501
0x00000200000edb35 : add byte ptr [rdi + rcx - 0x49], al ; push rbx ; add al, byte ptr [rcx - 0xa] ; ret 0xf01
0x0000020000203ad3 : add byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000048d115 : add byte ptr [rdi + rcx - 0x49], al ; ret 0x8b48
0x000002000006fe4c : add byte ptr [rdi + rcx - 0x49], al ; ret 0xd233
0x0000020000070168 : add byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000200006c7971 : add byte ptr [rdi + rcx - 0x4a], al ; ret 0x37ba
0x000002000004a3b3 : add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8341
0x0000020000053d65 : add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8348
0x0000020000028379 : add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8944
0x00000200000cf115 : add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8b45
0x000002000004aa7a : add byte ptr [rdi + rcx - 0x4a], al ; sbb ecx, dword ptr [rax - 1] ; ret
0x00000200004255b8 : add byte ptr [rdi + rcx - 0x51], cl ; ret 0x8b41
0x00000200000a993a : add byte ptr [rdi + rcx - 0x51], cl ; ret 0x8b49
0x00000200005a6cb6 : add byte ptr [rdi + rcx - 0x5d], cl ; ret 0x820f
0x00000200000d39cd : add byte ptr [rdi - 0x48], dh ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000014f578 : add byte ptr [rdi - 0x73], cl ; sbb al, 0x8b ; jmp r11
0x00000200006c2a50 : add byte ptr [rdi - 0x7cb7f7bd], al ; ret
0x00000200005642fb : add byte ptr [rdi], al ; add byte ptr [rax], al ; call 0x200001c05e6
0x000002000009a54e : add byte ptr [rdi], al ; add byte ptr [rax], al ; jne 0x2000009a576 ; ret
0x00000200004cb9d9 : add byte ptr [rdi], al ; mov rcx, rdi ; call 0x200000ef140
0x0000020000067006 : add byte ptr [rdi], bh ; ret
0x0000020000620070 : add byte ptr [rdi], bl ; add byte ptr [rax - 1], cl ; ret 0xc148
0x0000020000044cf1 : add byte ptr [rdi], cl ; adc dword ptr [rcx + 0x70], ecx ; ret
0x0000020000058153 : add byte ptr [rdi], cl ; adc dword ptr [rdx + 0x4c0], ecx ; ret
0x00000200000faddd : add byte ptr [rdi], cl ; adc dword ptr [rsp + 0x60], ecx ; call 0x20000067098
0x00000200005941a0 : add byte ptr [rdi], cl ; add al, ch ; cwde ; ret
0x00000200000815ac : add byte ptr [rdi], cl ; add byte ptr [rax + 0xb], cl ; ret
0x00000200000819dd : add byte ptr [rdi], cl ; add byte ptr [rcx + 0x33], cl ; add ecx, dword ptr [rax + 0x23] ; ret
0x00000200000a9ba1 : add byte ptr [rdi], cl ; add byte ptr [rcx + 0xb], cl ; ret
0x0000020000230a77 : add byte ptr [rdi], cl ; add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret
0x0000020000230b6f : add byte ptr [rdi], cl ; add dword ptr [rcx], eax ; sidt ptr [rdx] ; ret
0x00000200001b31bd : add byte ptr [rdi], cl ; cdq ; ret
0x00000200004bde47 : add byte ptr [rdi], cl ; mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret
0x00000200004bdfec : add byte ptr [rdi], cl ; mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret 0x348
0x00000200006503b0 : add byte ptr [rdi], cl ; mov bh, 0x43 ; add bh, bh ; ret 0x8b4c
0x00000200004be171 : add byte ptr [rdi], cl ; mov bh, 0x46 ; add bh, bh ; ret 0x348
0x0000020000172e48 : add byte ptr [rdi], cl ; mov bh, 0x47 ; add ch, byte ptr [rbx] ; ret
0x00000200004bb363 : add byte ptr [rdi], cl ; mov bh, 0x48 ; add bh, bh ; ret 0x348
0x0000020000672056 : add byte ptr [rdi], cl ; mov bh, 0x55 ; loopne 0x20000672065 ; ret 0xc13b
0x00000200000da5bb : add byte ptr [rdi], cl ; mov bh, 0x56 ; and byte ptr [rax - 0x75], cl ; ret
0x0000020000688294 : add byte ptr [rdi], cl ; mov bh, 0xb ; call 0x2000013455e
0x00000200000b3f57 : add byte ptr [rdi], cl ; mov bh, 0xc9 ; mov rax, qword ptr [rax + rcx*8] ; ret
0x000002000075ed03 : add byte ptr [rdi], cl ; mov bh, 0xcf ; lea r8, qword ptr [rsp + 0x40] ; call rax
0x00000200000b27e0 : add byte ptr [rdi], cl ; mov bh, 0xd1 ; mov rax, qword ptr [rax + rdx*8] ; ret
0x0000020000134514 : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 1 ; ret
0x00000200001344b4 : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 2 ; ret
0x0000020000134494 : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 4 ; ret
0x00000200001344f4 : add byte ptr [rdi], cl ; mov bh, 4 ; and rax, 8 ; ret
0x000002000064958a : add byte ptr [rdi], cl ; mov bh, 4 ; ret
0x000002000074707b : add byte ptr [rdi], cl ; mov bh, 5 ; jge 0x200007470f6 ; ret
0x0000020000021809 : add byte ptr [rdi], cl ; mov dh, 0x53 ; and esi, esi ; ret 0xf10
0x0000020000082318 : add byte ptr [rdi], cl ; mov dh, 0x80 ; xor al, byte ptr [rdx] ; add byte ptr [rax], al ; ret
0x000002000003ffd1 : add byte ptr [rdi], cl ; mov dh, 0x82 ; ret
0x0000020000021199 : add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x00000200000d1294 : add byte ptr [rdi], cl ; mov dh, 0x85 ; ret
0x00000200000d07bb : add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0x00000200000c68ba : add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x00000200000cf5de : add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x0000020000069480 : add byte ptr [rdi], cl ; mov dh, 0x8d ; ret
0x000002000055a504 : add byte ptr [rdi], cl ; mov dh, 0x8d ; ret 0
0x00000200000d0df3 : add byte ptr [rdi], cl ; mov dh, 0x91 ; ret
0x00000200000d40f8 : add byte ptr [rdi], cl ; mov dh, 0xb7 ; ret
0x0000020000061c08 : add byte ptr [rdi], cl ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004a1365 : add byte ptr [rdi], cl ; mov dh, 0xd3 ; call 0x2000043d582
0x0000020000056a23 : add byte ptr [rdi], cl ; mov dh, 4 ; ret 0x1a8
0x00000200006b3a16 : add byte ptr [rdi], cl ; mov edx, 0x37211e0 ; mov al, 1 ; ret
0x00000200001d2e51 : add byte ptr [rdi], cl ; mov edx, 0x820f13e1 ; ret
0x0000020000750307 : add byte ptr [rdi], cl ; mov edx, 0x8b073071 ; ret
0x00000200000c7237 : add byte ptr [rdi], cl ; mov edx, 0x8b4d1ff0 ; lodsb al, byte ptr [rsi] ; ret
0x00000200004c5099 : add byte ptr [rdi], cl ; mov edx, 0xe0c77625 ; call qword ptr [rsi]
0x00000200004a115d : add byte ptr [rdi], cl ; mov edx, 0xf110466 ; xchg eax, ebx ; ret 0xf41
0x00000200000eb62b : add byte ptr [rdi], cl ; mov esi, 0xc381 ; add byte ptr [rbx], bh ; ret 0x767d
0x00000200000a9c52 : add byte ptr [rdi], cl ; or dword ptr [rax + 0x2c], 0xe ; add bh, bh ; ret 0xc28b
0x00000200006aa5b2 : add byte ptr [rdi], cl ; popfq ; ret
0x000002000049673f : add byte ptr [rdi], cl ; ret
0x00000200000cd3ec : add byte ptr [rdi], cl ; ret 0x1ba
0x00000200000ff4bc : add byte ptr [rdi], cl ; ret 0x35e9
0x00000200005efb0e : add byte ptr [rdi], cl ; ret 0x4489
0x00000200001aafb5 : add byte ptr [rdi], cl ; ret 0x521
0x00000200001291f5 : add byte ptr [rdi], cl ; ret 0x8189
0x00000200003ffc50 : add byte ptr [rdi], cl ; ret 0x8789
0x000002000019e4f5 : add byte ptr [rdi], cl ; ret 0x8d49
0x00000200003ae4b8 : add byte ptr [rdi], cl ; ret 0xb0c3
0x00000200005b1cba : add byte ptr [rdi], cl ; ret 0xb60f
0x00000200004a810c : add byte ptr [rdi], cl ; ret 0xbc80
0x00000200001d6d82 : add byte ptr [rdi], cl ; ret 0xc83a
0x00000200005770d4 : add byte ptr [rdi], cl ; ret 0xc933
0x00000200000a36a7 : add byte ptr [rdi], cl ; ret 0xe383
0x000002000019e5c1 : add byte ptr [rdi], cl ; ret 0xff41
0x000002000018d76b : add byte ptr [rdi], cl ; ror dword ptr [r8 + 0x2b], 1 ; ret 0x47e9
0x00000200001885f0 : add byte ptr [rdi], cl ; ror dword ptr [r8 + 0x2b], 1 ; ret 0x50e9
0x000002000018ce74 : add byte ptr [rdi], cl ; ror dword ptr [r8 + 0x2b], 1 ; ret 0xf9e9
0x00000200003be3a8 : add byte ptr [rdi], cl ; ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x200003be3a3 ; ret
0x00000200001028a9 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x12b
0x00000200005ba9bc : add byte ptr [rdi], cl ; shr al, 1 ; ret
0x000002000004f568 : add byte ptr [rdi], cl ; stosd dword ptr [rdi], eax ; ret 0x8a45
0x0000020000446243 : add byte ptr [rdi], cl ; test bh, bl ; ret
0x0000020000598ebc : add byte ptr [rdi], cl ; test bl, ch ; ret
0x0000020000530ec7 : add byte ptr [rdi], cl ; test byte ptr [rax - 0x74fff5ee], bh ; ret 0xd8f7
0x00000200004b6853 : add byte ptr [rdi], cl ; test byte ptr [rbp - 0x74ffffff], bh ; ret
0x0000020000530866 : add byte ptr [rdi], cl ; test byte ptr [rbx - 0x74fff5ea], bl ; ret
0x00000200003fd110 : add byte ptr [rdi], cl ; test byte ptr [rdi], dh ; ret 0x17
0x00000200000dbf2a : add byte ptr [rdi], cl ; test byte ptr [rdi], dl ; ret
0x00000200004941a8 : add byte ptr [rdi], cl ; test byte ptr [rdx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000585e23 : add byte ptr [rdi], cl ; test byte ptr [rdx - 0x2d], dh ; cmc ; dec dword ptr [rax - 0x7d] ; ret 0x4838
0x000002000002201e : add byte ptr [rdi], cl ; test byte ptr [rdx - 0x74ffec47], ah ; ret
0x000002000010ff03 : add byte ptr [rdi], cl ; test byte ptr [rdx - 0xa000000], cl ; ret 0xf08
0x000002000004aa88 : add byte ptr [rdi], cl ; test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000200000c88c5 : add byte ptr [rdi], cl ; test byte ptr [rsi - 0xfff355], dh ; ret
0x0000020000521a79 : add byte ptr [rdi], cl ; test ch, dl ; ret
0x00000200003ca7e7 : add byte ptr [rdi], cl ; test dword ptr [rax - 0x9fffffb], esi ; ret
0x0000020000408774 : add byte ptr [rdi], cl ; test dword ptr [rax - 0xa000000], esi ; ret 0xf01
0x000002000045abdf : add byte ptr [rdi], cl ; test dword ptr [rax], edi ; ret
0x000002000014e199 : add byte ptr [rdi], cl ; test dword ptr [rbp + 2], edx ; add byte ptr [rax], al ; call r10
0x00000200004e910c : add byte ptr [rdi], cl ; test dword ptr [rbp - 0x74fff204], esi ; ret
0x0000020000437bb6 : add byte ptr [rdi], cl ; test dword ptr [rbx - 0x17ffe9a2], ecx ; ret 0xc19a
0x0000020000632b19 : add byte ptr [rdi], cl ; test dword ptr [rbx - 0xffffff], edi ; ret 0x3b41
0x0000020000070ca2 : add byte ptr [rdi], cl ; test dword ptr [rcx - 0x9ffef3a], eax ; ret
0x0000020000085000 : add byte ptr [rdi], cl ; test dword ptr [rcx], edi ; ret
0x00000200004e6964 : add byte ptr [rdi], cl ; test dword ptr [rcx], edx ; add dword ptr [rdx], ecx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004d3d40 : add byte ptr [rdi], cl ; test dword ptr [rdi + 0x5c], ecx ; str word ptr [rax - 0x7d] ; ret 0xeb28
0x00000200000ab874 : add byte ptr [rdi], cl ; test dword ptr [rdi + rsi*8 - 1], ecx ; push rsi ; ret
0x0000020000485984 : add byte ptr [rdi], cl ; test dword ptr [rdi], edx ; call qword ptr [rdx]
0x00000200003cba03 : add byte ptr [rdi], cl ; test dword ptr [rdi], esi ; mov bl, byte ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004b5d3f : add byte ptr [rdi], cl ; test dword ptr [rdx - 0x9ffef3e], ebp ; ret
0x00000200003c6b07 : add byte ptr [rdi], cl ; test dword ptr [rdx], edi ; ret
0x00000200004c18a1 : add byte ptr [rdi], cl ; test dword ptr [rip - 0x9ffefcf], eax ; ret
0x000002000005ee6c : add byte ptr [rdi], cl ; test dword ptr [rip - 0x9fffffd], edx ; ret
0x0000020000450729 : add byte ptr [rdi], cl ; test dword ptr [rsi - 0x75000000], eax ; ret
0x0000020000502119 : add byte ptr [rdi], cl ; test dword ptr [rsi], edi ; ret 8
0x00000200004eb484 : add byte ptr [rdi], cl ; test eax, ecx ; ret
0x0000020000598f14 : add byte ptr [rdi], cl ; test ebp, ecx ; ret
0x0000020000598eaf : add byte ptr [rdi], cl ; test ebp, edx ; ret
0x00000200003f89db : add byte ptr [rdi], cl ; test ebx, ebx ; add byte ptr [rax], al ; add bh, bh ; ret 0xdbeb
0x00000200003fe003 : add byte ptr [rdi], cl ; test edi, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000008e36c : add byte ptr [rdi], cl ; test edi, edx ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret
0x000002000009a315 : add byte ptr [rdi], cl ; test edi, esp ; ret 0xb
0x0000020000030025 : add byte ptr [rdi], cl ; test esp, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200000803ab : add byte ptr [rdi], cl ; xchg ch, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 0xfff
0x00000200003eab8d : add byte ptr [rdi], cl ; xchg dword ptr [rax + 0x18], ebp ; add dh, dh ; ret 0xf03
0x00000200005d2050 : add byte ptr [rdi], cl ; xchg dword ptr [rsi - 0x16], ecx ; cmc ; call rcx
0x0000020000167f62 : add byte ptr [rdi], cl ; xchg dword ptr [rsi], ebp ; ret 0xffed
0x0000020000128cee : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000020000132882 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5338
0x00000200001b3abe : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8948
0x00000200001848fc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc280
0x00000200000c0e17 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf41
0x00000200005a7b8a : add byte ptr [rdi], cl ; xchg eax, ebp ; rol al, 0xe0 ; add esi, dword ptr [rdx] ; ret
0x00000200001f0f0d : add byte ptr [rdi], cl ; xchg eax, ebp ; rol bl, 0xf6 ; ret 0x7407
0x00000200003ca6d1 : add byte ptr [rdi], cl ; xchg eax, ebp ; rol cl, 0xe0 ; adc dh, byte ptr [rbx] ; ret
0x00000200001f2672 : add byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x00000200000ec34a : add byte ptr [rdi], cl ; xchg eax, edi ; ret 0xc28a
0x00000200000d1c81 : add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x00000200001a15ec : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200004ddae0 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x0000020000215ef9 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x6349
0x00000200001d7b39 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8444
0x0000020000215a50 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b41
0x000002000005deb1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8d49
0x0000020000206b9a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x0000020000587b1a : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc2ff
0x00000200001c0585 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc985
0x00000200005b0150 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe3e8
0x0000020000496fd5 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf66
0x00000200000b2fce : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf749
0x00000200000923d4 : add byte ptr [rdi], cl ; xchg edi, ecx ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x0000020000143daa : add byte ptr [rdi], cl ; xor al, byte ptr [rbx + 0x300ffce0] ; ret
0x0000020000148a8b : add byte ptr [rdi], cl ; xor cl, byte ptr [rax - 0x3f] ; loop 0x20000148abb ; or rax, rdx ; pop rdi ; ret
0x0000020000008651 : add byte ptr [rdi], dl ; add byte ptr [rax], al ; ret
0x000002000053e21f : add byte ptr [rdx + 0x100], bh ; call r14
0x00000200000389d9 : add byte ptr [rdx + 0x1242240], cl ; ret
0x0000020000063c4f : add byte ptr [rdx + 0x12], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000062c96e : add byte ptr [rdx + 0x24548801], dh ; cmp byte ptr [rcx - 0x75], al ; ret
0x000002000020d44d : add byte ptr [rdx + 0x2a0f24c2], cl ; ret
0x00000200003be7a9 : add byte ptr [rdx + 0x33a85405], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001c950b : add byte ptr [rdx + 0x3ab9b203], cl ; ret 0x3a75
0x0000020000074649 : add byte ptr [rdx + 0x48322444], cl ; add esp, 0x28 ; ret
0x000002000048cc29 : add byte ptr [rdx + 0x4885004], cl ; or bh, bh ; ret 0xb70f
0x0000020000601479 : add byte ptr [rdx + 0x4b706e50], bh ; call 0x20000231019
0x000002000060e438 : add byte ptr [rdx + 0x51706e50], bh ; call 0x20000231019
0x00000200004f96bf : add byte ptr [rdx + 0x538a3043], cl ; cmp byte ptr [rdx], bh ; ret 0x820f
0x00000200004001b8 : add byte ptr [rdx + 0xa417c47], cl ; ret 0xa40
0x000002000049fcaa : add byte ptr [rdx + 0xadee801], dh ; ret 0x8bff
0x00000200003e15b4 : add byte ptr [rdx + 0xd8d4801], dh ; ret 0xf15f
0x00000200001e3714 : add byte ptr [rdx + 0xf], al ; mov bh, 0x4c ; ret 0x4a08
0x00000200003ae4b3 : add byte ptr [rdx + 1], bh ; cmovne eax, edx ; ret
0x0000020000230baf : add byte ptr [rdx + 1], bh ; jmp r8
0x00000200006c7a09 : add byte ptr [rdx + 3], dh ; xor eax, eax ; ret
0x00000200000262d2 : add byte ptr [rdx + 5], dh ; add rsp, 0x28 ; ret
0x0000020000057886 : add byte ptr [rdx + 7], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000057885 : add byte ptr [rdx + 7], sil ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003b973 : add byte ptr [rdx + 8], dh ; mov al, 1 ; ret
0x000002000006a038 : add byte ptr [rdx + rax], bh ; je 0x2000006a043 ; ret
0x000002000006a038 : add byte ptr [rdx + rax], bh ; je 0x2000006a046 ; ret
0x0000020000085ed5 : add byte ptr [rdx + rbp*8 - 0x48], dh ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000066144e : add byte ptr [rdx + rcx - 0x48], dh ; or eax, 0xe9c00000 ; ret
0x0000020000008af9 : add byte ptr [rdx + rcx - 0x76], dh ; and r14d, dword ptr [r10] ; ret
0x000002000015d119 : add byte ptr [rdx + rcx*4 - 0x40], al ; mov rcx, rsi ; call 0x2000020937d
0x0000020000068eef : add byte ptr [rdx + rcx*4 - 0x7d], al ; ret
0x00000200001b446c : add byte ptr [rdx + rdi - 0x3e], al ; jne 0x200001b44d0 ; mov r8b, dl ; jmp 0x200001b44c6
0x00000200000c01d3 : add byte ptr [rdx + rdi - 0x4d], al ; ret
0x000002000062a0ac : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x00000200004b5c87 : add byte ptr [rdx + rdx*2 - 0xa], dh ; ret
0x0000020000161c11 : add byte ptr [rdx - 0x16fe77ff], cl ; ret
0x000002000007bb7a : add byte ptr [rdx - 0x173ffdbf], cl ; add eax, dword ptr [rcx + 0x22] ; ret 0x8841
0x000002000076a825 : add byte ptr [rdx - 0x1a], dh ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000df02b : add byte ptr [rdx - 0x1e], dh ; ret
0x00000200004819da : add byte ptr [rdx - 0x23a117ff], dh ; ret
0x000002000041ed25 : add byte ptr [rdx - 0x3b7cb73d], cl ; pop rbx ; ret
0x000002000051cd8a : add byte ptr [rdx - 0x3b7cb73d], cl ; push rax ; pop rbx ; ret
0x000002000012777d : add byte ptr [rdx - 0x3c], dh ; add rsp, 0x38 ; ret
0x000002000048383e : add byte ptr [rdx - 0x420517ff], dh ; ret
0x0000020000664d41 : add byte ptr [rdx - 0x48f0bb35], cl ; ret
0x0000020000484387 : add byte ptr [rdx - 0x4a1e17ff], dh ; ret
0x0000020000763e1f : add byte ptr [rdx - 0x56], dh ; ret
0x0000020000181299 : add byte ptr [rdx - 0x75], cl ; or byte ptr [rax], r14b ; ret
0x000002000042fda7 : add byte ptr [rdx - 0x75fedb3d], cl ; ret
0x000002000069097b : add byte ptr [rdx - 0x76bb80bb], cl ; ret
0x000002000059e53a : add byte ptr [rdx - 0x77], al ; add al, 1 ; inc edx ; jmp 0x2000059e51c
0x000002000068409c : add byte ptr [rdx - 0x9afdba4], cl ; ret
0x000002000006c14d : add byte ptr [rdx], 0 ; add bh, bh ; ret
0x000002000008b863 : add byte ptr [rdx], 0 ; add byte ptr [rsi + 0x3b], ah ; ret 0x820f
0x0000020000133d7c : add byte ptr [rdx], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200001d8907 : add byte ptr [rdx], ah ; ret
0x000002000018c70e : add byte ptr [rdx], ah ; ret 0x27b9
0x0000020000697bb4 : add byte ptr [rdx], ah ; ret 0x450f
0x00000200001f8c44 : add byte ptr [rdx], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000454bd0 : add byte ptr [rdx], al ; add byte ptr [rax - 0x3f], cl ; out dx, al ; adc dword ptr [rax - 9], ecx ; ret
0x00000200001e9463 : add byte ptr [rdx], al ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200003a4d7a : add byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xb], cl ; ret 0x8548
0x00000200004d759b : add byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x20000053852
0x0000020000425c79 : add byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x20000053bb7
0x000002000044334f : add byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x20000071477
0x00000200002059d9 : add byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x20000231ce6
0x000002000060dae5 : add byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x20000231ce7
0x0000020000646b2e : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr [rcx + 8], rcx ; ret
0x0000020000108f54 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000020000115bc1 : add byte ptr [rdx], al ; add byte ptr [rax], al ; test rax, r8 ; je 0x20000115bd4 ; ret
0x000002000050c971 : add byte ptr [rdx], al ; add byte ptr [rbp + 0x33], al ; rol bh, 0x83 ; ret 1
0x00000200003cb716 : add byte ptr [rdx], al ; add byte ptr [rbx], ah ; ret 0xc23b
0x000002000040e927 : add byte ptr [rdx], al ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200004ef952 : add byte ptr [rdx], al ; add byte ptr [rcx - 0x7f], cl ; ret
0x000002000008838b : add byte ptr [rdx], al ; mov al, dl ; add rsp, 0x28 ; ret
0x00000200001f6314 : add byte ptr [rdx], al ; ret
0x00000200001b3499 : add byte ptr [rdx], al ; setne al ; ret
0x00000200000d3da7 : add byte ptr [rdx], bh ; lahf ; ret
0x000002000001f1c9 : add byte ptr [rdx], bh ; ret
0x00000200006d30fd : add byte ptr [rdx], bh ; ret 0x3a76
0x0000020000226381 : add byte ptr [rdx], bh ; ret 0x860f
0x00000200001fcf35 : add byte ptr [rdx], bh ; ret 0x973
0x0000020000206d8a : add byte ptr [rdx], bh ; ret 0xa73
0x00000200003adfe1 : add byte ptr [rdx], bh ; ret 0xc75
0x000002000004f6c1 : add byte ptr [rdx], bh ; retf -0x3e75 ; cmovg eax, edx ; jmp 0x2000004f6d5
0x00000200002078a4 : add byte ptr [rdx], bh ; sal dword ptr [rbx + 4], 0x44 ; mov cr0, rcx ; ret
0x00000200000e66cd : add byte ptr [rdx], ch ; ret 0x8488
0x0000020000050678 : add byte ptr [rdx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f625e : add byte ptr [rdx], cl ; je 0x200001f626b ; xor al, al ; ret
0x000002000004f23c : add byte ptr [rdx], cl ; ret
0x00000200000d181a : add byte ptr [rdx], cl ; ret 0xc748
0x0000020000131a8f : add byte ptr [rdx], cl ; setbe al ; ret
0x000002000048ff7c : add byte ptr [rdx], dh ; ret
0x00000200006ac568 : add byte ptr [rdx], dl ; add bh, al ; ret
0x000002000065980f : add byte ptr [rdx], dl ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000041e897 : add byte ptr [rdx], dl ; xor eax, eax ; ret
0x00000200000c2c97 : add byte ptr [rip + 0x10001], ah ; ret
0x00000200001316fd : add byte ptr [rip + 0x234c0000], al ; ret 0xd08a
0x000002000004f866 : add byte ptr [rip + 0x38400000], 0xb3 ; ret
0x00000200005afda2 : add byte ptr [rip + 0x3de80000], al ; ret 0xffc1
0x0000020000619142 : add byte ptr [rip + 0xfc0920f], al ; mov dh, 0xc0 ; ret
0x00000200005965d3 : add byte ptr [rip - 0x16277500], al ; in eax, dx ; ret 0xfff7
0x0000020000515e3a : add byte ptr [rip - 0x18000000], al ; jl 0x20000515de0 ; ret
0x000002000055cdfc : add byte ptr [rip - 0x74b40000], al ; ret
0x000002000002a551 : add byte ptr [rip - 0x74b80000], al ; iretd ; call 0x20000016789
0x00000200003ccce1 : add byte ptr [rip - 0x74b80000], al ; ret 0xa348
0x00000200003d0cfa : add byte ptr [rip - 0x74bf0000], al ; ret
0x000002000069dda5 : add byte ptr [rsi + 0x23], ah ; ret
0x00000200003c5890 : add byte ptr [rsi + 0x23], ah ; ret 0x366
0x000002000052fd89 : add byte ptr [rsi + 0x23], ah ; ret 0xb66
0x0000020000102398 : add byte ptr [rsi + 0x23], ah ; ret 0xc166
0x000002000064af3a : add byte ptr [rsi + 0x23], ah ; ror byte ptr [rcx - 0x7d], 1 ; ret 0xb802
0x00000200005ce207 : add byte ptr [rsi + 0x2b], ah ; ret 0x38e9
0x000002000049ee38 : add byte ptr [rsi + 0x2b], ah ; ret 0xffba
0x000002000042b3a6 : add byte ptr [rsi + 0x33], ah ; sbb byte ptr [rsi + 0x23], r12b ; ret 0x3166
0x00000200000b74f9 : add byte ptr [rsi + 0x3b], ah ; ret
0x0000020000629e4b : add byte ptr [rsi + 0x3b], ah ; ret 0x1d77
0x000002000059741e : add byte ptr [rsi + 0x3b], ah ; ret 0x2174
0x00000200001e620a : add byte ptr [rsi + 0x3b], ah ; ret 0x3272
0x000002000003fbb1 : add byte ptr [rsi + 0x3b], ah ; ret 0x3673
0x0000020000629e65 : add byte ptr [rsi + 0x3b], ah ; ret 0x377
0x000002000005c71e : add byte ptr [rsi + 0x3b], ah ; ret 0x3f74
0x000002000002731d : add byte ptr [rsi + 0x3b], ah ; ret 0x4874
0x00000200006493d4 : add byte ptr [rsi + 0x3b], ah ; ret 0x4d77
0x000002000005c728 : add byte ptr [rsi + 0x3b], ah ; ret 0x5375
0x000002000059743a : add byte ptr [rsi + 0x3b], ah ; ret 0x574
0x00000200004cbec4 : add byte ptr [rsi + 0x3b], ah ; ret 0x5f77
0x00000200005babc0 : add byte ptr [rsi + 0x3b], ah ; ret 0x672
0x000002000008b866 : add byte ptr [rsi + 0x3b], ah ; ret 0x820f
0x000002000068aaf2 : add byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x000002000013d2ba : add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000226817 : add byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x000002000002734c : add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x0000020000648e3d : add byte ptr [rsi + 0x3b], ah ; ret 0x877
0x0000020000665ba3 : add byte ptr [rsi + 0x3b], ah ; ret 0xcb75
0x000002000009242a : add byte ptr [rsi + 0x3b], ah ; ret 0xd75
0x00000200000b02af : add byte ptr [rsi + 0x3b], ah ; ret 0xe74
0x00000200003e278e : add byte ptr [rsi + 0x3b], ah ; ror dword ptr [rdi], -0x7b ; ret
0x0000020000138e23 : add byte ptr [rsi + 0x3b], ah ; sal dword ptr [rsp + rdx + 0x49], -1 ; ret
0x000002000004b184 : add byte ptr [rsi + 0x41], ah ; and ecx, ecx ; jmp qword ptr [r10 + rax*8]
0x00000200006c4d45 : add byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0xa], ecx ; mov rax, r8 ; ret
0x00000200001b9499 : add byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 2], ecx ; mov al, 1 ; ret
0x00000200000385ab : add byte ptr [rsi + 0x44], ah ; or dword ptr [rcx + 0xa], eax ; mov eax, edx ; ret
0x0000020000025e80 : add byte ptr [rsi + 0x45], ah ; mov dword ptr [rdx + 0x10], ecx ; ret
0x000002000052ca85 : add byte ptr [rsi + 0x48], dh ; add ebp, 2 ; jmp 0x2000052ca58
0x00000200000cd621 : add byte ptr [rsi + 0x5b], bl ; pop rbp ; ret
0x0000020000020d96 : add byte ptr [rsi + 0x5d], bl ; pop rbx ; ret
0x000002000069f6f7 : add byte ptr [rsi + 0xb0a716a], dl ; mov ch, 0x49 ; ret
0x00000200000da212 : add byte ptr [rsi + 0xb], ah ; ret 0x8966
0x00000200002172a2 : add byte ptr [rsi + 0xf], ah ; out dx, eax ; ret
0x00000200001c1261 : add byte ptr [rsi + 1], ah ; add eax, 0x141bcf ; ret
0x0000020000535679 : add byte ptr [rsi + 3], ah ; ret 0x8966
0x000002000044841e : add byte ptr [rsi + 3], ah ; ret 0xb70f
0x00000200001b263c : add byte ptr [rsi + 6], dh ; mov eax, 0xc000000d ; ret
0x00000200006c2ec3 : add byte ptr [rsi + 7], dh ; mov dword ptr [rip + 0x1b1f4], eax ; ret
0x0000020000022726 : add byte ptr [rsi + 9], ah ; or cl, byte ptr [r8 - 0x75] ; ret
0x000002000003cc7e : add byte ptr [rsi + rax + 0x48], dh ; add esp, 0x50 ; pop rbx ; ret
0x000002000003b4f0 : add byte ptr [rsi + rax + 0x48], dh ; and dword ptr [rdx + 0x18], 0 ; ret
0x0000020000037b9c : add byte ptr [rsi + rax + 0x48], dh ; mov eax, ecx ; ret
0x00000200000ef514 : add byte ptr [rsi + rax - 0x48], bh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000004b5ad : add byte ptr [rsi + rax - 0x48], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200006198d8 : add byte ptr [rsi + rax - 0x48], dh ; add eax, dword ptr [rbx] ; add al, al ; ret
0x00000200005fc030 : add byte ptr [rsi + rax - 0x48], dh ; and byte ptr [rcx], al ; add al, al ; ret
0x0000020000205dc9 : add byte ptr [rsi + rax - 0x48], dh ; xor byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000020000008b40 : add byte ptr [rsi + rbx*8 - 0x76], dh ; and esi, dword ptr [r10] ; ret 0x724
0x000002000008c843 : add byte ptr [rsi + rdx*4 + 0x48], dh ; lea ecx, dword ptr [rsp + 0x40] ; call rax
0x000002000017d081 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000020000032469 : add byte ptr [rsi + rsi*8 + 0x48], dh ; mov eax, dword ptr [rdx + 0x40] ; ret
0x000002000062519f : add byte ptr [rsi - 0x1a], dh ; xor eax, eax ; ret
0x00000200003c5aa6 : add byte ptr [rsi - 0x39], ah ; add esi, eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003a7939 : add byte ptr [rsi - 0x3d], al ; and ecx, dword ptr [rax + 0x3b] ; ret 0x830f
0x000002000046b591 : add byte ptr [rsi - 0x77], ah ; adc byte ptr [rbp - 0x7cb7a3be], cl ; ret
0x0000020000687386 : add byte ptr [rsi - 0x77], ah ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200003b463e : add byte ptr [rsi - 0x77], ah ; cmp r14b, r14b ; ret
0x000002000062338e : add byte ptr [rsi - 0x77], ah ; or cl, byte ptr [rax - 0x7d] ; ret 0x4830
0x00000200000459b7 : add byte ptr [rsi - 0x77], ah ; push rcx ; ret
0x0000020000086a0d : add byte ptr [rsi - 0x77], ah ; xchg dword ptr [rsi - 0x75000000], edi ; ret 0xe8c1
0x00000200001a0cd5 : add byte ptr [rsi - 0x7b], ah ; ret
0x000002000007bb65 : add byte ptr [rsi - 0x7b], ah ; ret 0x1f74
0x00000200004875d4 : add byte ptr [rsi - 0x7b], ah ; ret 0x2874
0x0000020000126241 : add byte ptr [rsi - 0x7b], ah ; ret 0x840f
0x000002000049ee40 : add byte ptr [rsi - 0x7b], ah ; ret 0xc38b
0x00000200001fbc9d : add byte ptr [rsi - 0x7b], ah ; ret 0xd74
0x00000200003c97fb : add byte ptr [rsi - 0x7b], ah ; ret 0xdb74
0x00000200004992fc : add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200001733d2 : add byte ptr [rsi - 0x7d], ah ; call 0x1ffc29c9a39
0x0000020000530125 : add byte ptr [rsi - 0x7d], ah ; enter 0x6630, 0xb ; ret 0x4166
0x0000020000781253 : add byte ptr [rsi - 0x7d], ah ; ret
0x00000200005bb255 : add byte ptr [rsi - 0x7d], ah ; ret 0x4802
0x000002000041accd : add byte ptr [rsi - 1], ah ; mov ah, ah ; add dword ptr [rax], eax ; add bh, dh ; ret 0xfff0
0x0000020000404a15 : add byte ptr [rsi - 1], ah ; mov fs, esp ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x0000020000042df8 : add byte ptr [rsi - 1], ah ; ret
0x000002000008e2bb : add byte ptr [rsi - 1], ah ; ret 0x3b66
0x00000200000921aa : add byte ptr [rsi - 1], ah ; ret 0x4166
0x00000200003d017a : add byte ptr [rsi - 1], ah ; ret 0x9489
0x0000020000143d25 : add byte ptr [rsi - 9], ah ; ret 0x300
0x0000020000735b96 : add byte ptr [rsi], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000022d7c2 : add byte ptr [rsi], 0 ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000013e782 : add byte ptr [rsi], 0 ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x000002000023097f : add byte ptr [rsi], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000ccda1 : add byte ptr [rsi], al ; mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x000002000001d34b : add byte ptr [rsi], bh ; ret 1
0x0000020000110e01 : add byte ptr [rsi], dh ; add byte ptr [rax], al ; ret
0x00000200005118ea : add byte ptr [rsi], dl ; add al, ch ; scasb al, byte ptr [rdi] ; hlt ; ret 0x8bff
0x00000200001ab693 : add byte ptr [rsp + rax + 0x48], dh ; mov eax, ecx ; ret
0x00000200005f377d : add byte ptr [rsp + rax - 1], dh ; ret 0x15eb
0x00000200000d35ed : add byte ptr [rsp + rax*4 - 0x55], al ; ret 0
0x0000020000438475 : add byte ptr [rsp + rbx - 0x75], dh ; ret
0x00000200001b6c20 : add byte ptr [rsp + rbx - 0x7f], dh ; call rsi
0x000002000044e6c8 : add byte ptr [rsp + rbx*2 - 0x75], dh ; ret
0x000002000011600d : add byte ptr [rsp + rcx*8 - 1], dh ; ret
0x00000200001b6c28 : add byte ptr [rsp + rdx - 0x7f], dh ; call rcx
0x000002000016b2a5 : add byte ptr [rsp + rsi*2], al ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000210e5 : add byte ptr [rsp + rsi*8 + 0x48], dh ; mov eax, dword ptr [rax + 8] ; ret
0x00000200001529f7 : add byte ptr cs:[rax + 0x20c48348], dl ; pop rbp ; ret
0x00000200000123b5 : add byte ptr cs:[rax + 0x3b], cl ; ret 0x850f
0x0000020000011ca6 : add byte ptr cs:[rax + 0xf], cl ; ret 0x8d48
0x0000020000096041 : add byte ptr cs:[rax - 9], cl ; ror byte ptr [rax + 0x23], cl ; ret 0x8949
0x0000020000140775 : add byte ptr cs:[rax], al ; add cl, ch ; add dl, bh ; add byte ptr [rax], al ; ret
0x0000020000033b8b : add byte ptr cs:[rax], al ; add rsp, 0x28 ; ret
0x00000200003fb838 : add byte ptr cs:[rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000014018a : add byte ptr cs:[rax], al ; add rsp, 0x68 ; pop rdi ; pop rsi ; ret
0x00000200003d4b57 : add byte ptr cs:[rax], al ; jmp 0x200003d4b23
0x000002000003dac5 : add byte ptr cs:[rax], al ; mov eax, ecx ; lea rax, qword ptr [rdx + rax*8] ; ret
0x00000200001a92f9 : add byte ptr cs:[rax], al ; ret
0x00000200000903d2 : add byte ptr cs:[rbp - 0x73], cl ; pop rdx ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000409657 : add byte ptr cs:[rbx + 0x324e8d8], cl ; ret
0x0000020000417aa6 : add byte ptr cs:[rcx], al ; je 0x20000417ab9 ; add rsp, 0x28 ; ret
0x000002000002ecae : add byte ptr ds:[rax], al ; add byte ptr [rbx - 0x74b6dbb3], cl ; ret
0x00000200003e0a3e : add byte ptr ds:[rax], al ; add byte ptr [rcx - 1], al ; ret
0x000002000042e03d : add byte ptr ds:[rax], al ; add byte ptr [rsi + 0x3b], ah ; ret
0x0000020000140975 : add byte ptr ds:[rax], al ; add cl, ch ; add dl, ch ; add byte ptr [rax], al ; ret
0x000002000005deb0 : add byte ptr ds:[rdi], cl ; xchg eax, esp ; ret 0x8d49
0x0000020000110dfd : add byte ptr es:[rax + 5], cl ; add byte ptr [rsi], dh ; add byte ptr [rax], al ; ret
0x000002000009b459 : add byte ptr es:[rax - 0x75], cl ; add al, 0xc8 ; ret
0x00000200001243e4 : add byte ptr es:[rax - 1], cl ; ret
0x0000020000140675 : add byte ptr es:[rax], al ; add cl, ch ; add bl, al ; add byte ptr [rax], al ; ret
0x00000200006b9058 : add byte ptr es:[rax], al ; mov rcx, rdi ; mov rsi, rax ; call rbx
0x000002000014be30 : add byte ptr es:[rax], al ; nop ; ret
0x000002000011e7c9 : add byte ptr es:[rbp + rax + 0x48], dh ; mov eax, dword ptr [rax + 0x48] ; ret
0x000002000006f170 : add byte ptr es:[rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x000002000008e3fe : add byte ptr es:[rcx - 1], al ; ret
0x000002000012ef42 : add byte ptr fs:[rax], al ; add byte ptr [rbx], bh ; ret 0x870f
0x0000020000140e55 : add byte ptr gs:[rax], al ; add cl, ch ; and dl, al ; add byte ptr [rax], al ; ret
0x00000200006be9ea : add byte ptr ss:[rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x0000020000140875 : add byte ptr ss:[rax], al ; add cl, ch ; add dl, dh ; add byte ptr [rax], al ; ret
0x000002000000e025 : add byte ptr ss:[rax], al ; add rsp, 0x28 ; ret
0x0000020000110e02 : add byte ptr ss:[rax], al ; ret
0x0000020000512c6e : add ch, al ; in al, dx ; xlatb ; ret 0x8bff
0x0000020000126b53 : add ch, al ; ret
0x00000200003cd788 : add ch, al ; ret 0x879
0x00000200004dfb30 : add ch, al ; ret 2
0x000002000057ab3e : add ch, al ; sbb al, al ; ret 0x90ff
0x000002000002ca53 : add ch, al ; scasd eax, dword ptr [rdi] ; ret
0x000002000042408c : add ch, bh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000017ae4 : add ch, bl ; adc ecx, dword ptr [rax - 1] ; ret
0x00000200003e90ea : add ch, bl ; add eax, dword ptr [rcx - 0x75] ; ret 0x8d4c
0x00000200004f8f87 : add ch, bl ; call 0x20033129146
0x00000200005a598e : add ch, bl ; dec dword ptr [rax - 0x75] ; iretd ; call rax
0x00000200004609b5 : add ch, bl ; in eax, dx ; bts dword ptr [rdx], 0x18 ; ret
0x0000020000416129 : add ch, bl ; js 0x200004160ba ; ror byte ptr [rdi], cl ; test ebx, edi ; ret
0x00000200004d6a43 : add ch, bl ; mov eax, 0xc0000058 ; ret
0x00000200000bd98b : add ch, bl ; ret 0x8b48
0x000002000052ca8b : add ch, bl ; ret 0x8d48
0x0000020000074712 : add ch, bl ; sar dword ptr [rax - 0x3ffffff3], 1 ; ret
0x000002000000f5a7 : add ch, bl ; stosb byte ptr [rdi], al ; xor eax, eax ; ret
0x00000200001969ca : add ch, byte ptr [rax + 0xf097504] ; mov dh, 0x87 ; ret
0x00000200000d52aa : add ch, byte ptr [rax + 0xf397504] ; mov dh, 0x87 ; ret
0x000002000062c451 : add ch, byte ptr [rax] ; ret
0x0000020000172e4c : add ch, byte ptr [rbx] ; ret
0x00000200000cc682 : add ch, byte ptr [rbx] ; ret 0x975
0x00000200007427b3 : add ch, byte ptr [rdx] ; ret
0x00000200001337b9 : add ch, byte ptr [rip - 0x74b22709] ; ret 0xd233
0x000002000021379b : add ch, byte ptr [rsi] ; call r10
0x00000200001387f3 : add ch, byte ptr [rsi] ; inc r10 ; jmp 0x20000138811
0x00000200005b58aa : add ch, ch ; push rsi ; ret 0x7401
0x0000020000162a9f : add ch, ch ; push rsi ; ret 0x7501
0x000002000017c6e2 : add ch, cl ; out dx, al ; jmp 0x2000017c6dc
0x00000200004b6b3a : add ch, cl ; ret 0xfff1
0x0000020000231b9d : add ch, cl ; ret 0xfffe
0x00000200001661fb : add ch, cl ; sub dword ptr [rax + 0x3b], ecx ; ret
0x00000200005bf468 : add ch, cl ; sub dword ptr [rax - 0x75], ecx ; ret 0xc933
0x00000200005a5d92 : add ch, cl ; sub dword ptr [rax - 0x7d], ecx ; ret
0x000002000057d751 : add ch, cl ; sub dword ptr [rax - 0x7fffffec], edi ; ret
0x00000200006876b7 : add cl, 8 ; ret
0x000002000014127a : add cl, ah ; add byte ptr [rax], al ; ret
0x00000200005f50da : add cl, ah ; ret
0x000002000014167a : add cl, al ; add byte ptr [rax], al ; ret
0x0000020000041be5 : add cl, al ; call 0x1ffc2885cf5
0x000002000006ab2a : add cl, al ; call 0x1ffc28aec3a
0x000002000006d782 : add cl, al ; call 0x1ffc28b1892
0x0000020000132545 : add cl, al ; call 0x1ffc314495f
0x00000200001ab23d : add cl, al ; call 0x1ffc31bd65e
0x0000020000134b50 : add cl, al ; clc ; adc byte ptr [rip + 0x7fff], ah ; ret
0x0000020000649817 : add cl, al ; clc ; add eax, dword ptr [rbx] ; ret 0x3b41
0x000002000042e67d : add cl, al ; jmp 0x1ffc9c84c9d
0x0000020000014801 : add cl, al ; loop 0x20000014813 ; or eax, edx ; jmp 0x200000147fc
0x00000200001b13a0 : add cl, al ; loopne 0x200001b13b8 ; mov dword ptr [r8 + 0x28], eax ; ret
0x00000200001b16c3 : add cl, al ; loopne 0x200001b16db ; mov dword ptr [r8 + 0x28], eax ; ret
0x00000200001c1944 : add cl, al ; loopne 0x200001c1957 ; add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200001c1990 : add cl, al ; loopne 0x200001c19a3 ; add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200001f62f1 : add cl, al ; loopne 0x200001f6305 ; add eax, ecx ; ret
0x00000200003d1faf : add cl, al ; ret 0x4105
0x0000020000140f7a : add cl, bh ; add byte ptr [rax], al ; ret
0x00000200003ef19f : add cl, bh ; dec dword ptr [rax + 0x3b] ; ret 0x577
0x000002000014137a : add cl, bl ; add byte ptr [rax], al ; ret
0x000002000041f986 : add cl, bl ; dec dword ptr [rax - 0x75] ; retf ; call 0x20000044dc1
0x00000200001268f9 : add cl, byte ptr [r15] ; mov bh, 0x51 ; add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x000002000059d336 : add cl, byte ptr [r15] ; mov dh, 5 ; loopne 0x2000059d319 ; call rcx
0x0000020000436f89 : add cl, byte ptr [r8 + 0x3b] ; ret 0x4a77
0x00000200005c3ec0 : add cl, byte ptr [r8 + 3] ; ret
0x00000200005f36f9 : add cl, byte ptr [r8 - 0x75] ; ret
0x000002000004a8b9 : add cl, byte ptr [r8 - 0x7d] ; ret
0x000002000040618d : add cl, byte ptr [r8 - 1] ; ret 0x3b4d
0x000002000046245a : add cl, byte ptr [r9 - 0x7d] ; ret
0x0000020000062fa6 : add cl, byte ptr [rax + 0x23] ; ret
0x00000200001ef5dc : add cl, byte ptr [rax + 0x23] ; ret 0x348
0x00000200003efe01 : add cl, byte ptr [rax + 0x2b] ; ret
0x0000020000213651 : add cl, byte ptr [rax + 0x33] ; ret
0x00000200004f10ac : add cl, byte ptr [rax + 0x3b] ; ret
0x000002000003b4ce : add cl, byte ptr [rax + 0x3b] ; ret 0x1f74
0x0000020000681d64 : add cl, byte ptr [rax + 0x3b] ; ret 0x2572
0x0000020000423193 : add cl, byte ptr [rax + 0x3b] ; ret 0x2a74
0x0000020000594a08 : add cl, byte ptr [rax + 0x3b] ; ret 0x3072
0x0000020000679b24 : add cl, byte ptr [rax + 0x3b] ; ret 0x3272
0x000002000039c0ac : add cl, byte ptr [rax + 0x3b] ; ret 0x3374
0x0000020000677a34 : add cl, byte ptr [rax + 0x3b] ; ret 0x3472
0x0000020000524874 : add cl, byte ptr [rax + 0x3b] ; ret 0x3974
0x0000020000436f8a : add cl, byte ptr [rax + 0x3b] ; ret 0x4a77
0x0000020000024856 : add cl, byte ptr [rax + 0x3b] ; ret 0x6675
0x00000200006a98a6 : add cl, byte ptr [rax + 0x3b] ; ret 0x6975
0x000002000050d7f1 : add cl, byte ptr [rax + 0x3b] ; ret 0x820f
0x000002000047017e : add cl, byte ptr [rax + 0x3b] ; ret 0x840f
0x0000020000643535 : add cl, byte ptr [rax + 0x3b] ; ret 0xa76
0x000002000013582b : add cl, byte ptr [rax + 0x3b] ; ret 0xee72
0x000002000066c799 : add cl, byte ptr [rax + 0x3b] ; ret 0xf172
0x000002000012a1b4 : add cl, byte ptr [rax + 0x3b] ; ret 0xf48
0x00000200001f62b0 : add cl, byte ptr [rax + 0x3b] ; sal dword ptr [rbx - 0xf], 0x48 ; mov eax, edx ; ret
0x00000200000125f2 : add cl, byte ptr [rax + 0x3b] ; sal dword ptr [rdx - 0x23], 1 ; ret
0x00000200005b014a : add cl, byte ptr [rax + 0x45f81] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe3e8
0x0000020000686090 : add cl, byte ptr [rax + 0x63] ; ret 0x8348
0x00000200007741ce : add cl, byte ptr [rax + 0x6b] ; ret 0x480d
0x000002000040e631 : add cl, byte ptr [rax + 0x6b] ; ret 0x4825
0x000002000072bb7f : add cl, byte ptr [rax + 0x6b] ; ret 0x4c0d
0x000002000072bb1a : add cl, byte ptr [rax + 0x6b] ; ret 0x8b0d
0x000002000072fd1d : add cl, byte ptr [rax + 0xb] ; ret 0x8b48
0x00000200001ab6bc : add cl, byte ptr [rax + 0xf] ; stosd dword ptr [rdi], eax ; ret 0xd148
0x00000200001fa3b4 : add cl, byte ptr [rax + 1] ; add dword ptr [rax - 0x7d], ecx ; ret 0xeb18
0x00000200003fc077 : add cl, byte ptr [rax + 3] ; fisttp word ptr [rax - 0x75] ; ret
0x0000020000163ca6 : add cl, byte ptr [rax + 3] ; ret
0x0000020000180700 : add cl, byte ptr [rax - 0x3f] ; call 0x1ffc23b501b
0x00000200001561d8 : add cl, byte ptr [rax - 0x3f] ; call 0x1ffc338a9f3
0x000002000076285c : add cl, byte ptr [rax - 0x3f] ; call 0x1ffc3997177
0x00000200000bd3e1 : add cl, byte ptr [rax - 0x73] ; add al, 0x81 ; ret
0x000002000040618a : add cl, byte ptr [rax - 0x73] ; add cl, byte ptr [r8 - 1] ; ret 0x3b4d
0x000002000002374a : add cl, byte ptr [rax - 0x73] ; pop rax ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200001f42d1 : add cl, byte ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x00000200005f36fa : add cl, byte ptr [rax - 0x75] ; ret
0x0000020000046af5 : add cl, byte ptr [rax - 0x75] ; ret 0x8348
0x0000020000008ee7 : add cl, byte ptr [rax - 0x75] ; ret 0x8b48
0x000002000021eaf1 : add cl, byte ptr [rax - 0x75] ; ret 0xc148
0x00000200001f9b10 : add cl, byte ptr [rax - 0x75] ; ror dword ptr [rax - 0x7d], cl ; ret
0x00000200000adf89 : add cl, byte ptr [rax - 0x75] ; sub byte ptr [rax - 0x7b], cl ; ret 0xba48
0x000002000042d725 : add cl, byte ptr [rax - 0x77] ; adc byte ptr [r8 - 0x75], cl ; ret 0xffba
0x0000020000526e16 : add cl, byte ptr [rax - 0x77] ; or byte ptr [r9 - 0x75], al ; ret
0x0000020000093b84 : add cl, byte ptr [rax - 0x7b] ; ret 0x3875
0x000002000010fcee : add cl, byte ptr [rax - 0x7cb7fdb6] ; ret 0x4903
0x0000020000175162 : add cl, byte ptr [rax - 0x7cb7fdbe] ; ret 0x4904
0x00000200000fe665 : add cl, byte ptr [rax - 0x7d] ; or al, dil ; ret
0x000002000004a8ba : add cl, byte ptr [rax - 0x7d] ; ret
0x0000020000643f76 : add cl, byte ptr [rax - 0x7d] ; ret 0x4102
0x000002000011432c : add cl, byte ptr [rax - 0x7d] ; ret 0x4108
0x000002000051d3a1 : add cl, byte ptr [rax - 0x7d] ; ret 0x4120
0x00000200000125ee : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x000002000001ebf0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4804
0x0000020000055ccf : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200001fa41f : add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200001357b8 : add cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x000002000010fcf1 : add cl, byte ptr [rax - 0x7d] ; ret 0x4903
0x0000020000175165 : add cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x000002000077a07b : add cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x000002000052e391 : add cl, byte ptr [rax - 0x7d] ; ret 0x4930
0x000002000021d2b1 : add cl, byte ptr [rax - 0x7d] ; ret 0x4c08
0x000002000010fb4a : add cl, byte ptr [rax - 0x7d] ; ret 0x4d03
0x000002000013422b : add cl, byte ptr [rax - 0x7d] ; ret 0x6602
0x000002000051620f : add cl, byte ptr [rax - 0x7d] ; ret 0x8928
0x000002000021dff4 : add cl, byte ptr [rax - 0x7d] ; ret 0x8b02
0x000002000010fb34 : add cl, byte ptr [rax - 0x7d] ; ret 0xeb02
0x00000200001fa387 : add cl, byte ptr [rax - 0x7d] ; ret 0xeb18
0x00000200000a580a : add cl, byte ptr [rax - 0x7d] ; ret 0xf10
0x00000200007673ce : add cl, byte ptr [rax - 0x7d] ; ret 0xf70c
0x0000020000212b05 : add cl, byte ptr [rax - 0x7f] ; ret
0x00000200006ab751 : add cl, byte ptr [rax - 0xb7eefc] ; ret 0x8341
0x0000020000152ee5 : add cl, byte ptr [rax - 0xd7eab4] ; ret 0x5589
0x000002000049c6f8 : add cl, byte ptr [rax - 1] ; ret
0x000002000023088d : add cl, byte ptr [rax - 1] ; ret 0x188
0x0000020000133ad5 : add cl, byte ptr [rax - 1] ; ret 0x3a80
0x000002000040618e : add cl, byte ptr [rax - 1] ; ret 0x3b4d
0x00000200001c2e2a : add cl, byte ptr [rax - 1] ; ret 0x4166
0x000002000066805d : add cl, byte ptr [rax - 1] ; ret 0x692d
0x00000200002136aa : add cl, byte ptr [rax - 1] ; ret 0x8348
0x0000020000043718 : add cl, byte ptr [rax - 1] ; ret 0x8349
0x000002000060a81b : add cl, byte ptr [rax - 1] ; ret 0xc084
0x000002000022f09b : add cl, byte ptr [rax - 1] ; ret 0xc83a
0x0000020000688f8d : add cl, byte ptr [rax - 1] ; ret 0xc88a
0x000002000044f2bd : add cl, byte ptr [rbp + 0x23660f41] ; ret 0x8d49
0x00000200004e754a : add cl, byte ptr [rbp + 0x3b662455] ; ret 0x6e72
0x00000200001341aa : add cl, byte ptr [rbp + 0x3b] ; enter -0x1c8e, 0x49 ; mov eax, edx ; ret
0x00000200001f7d64 : add cl, byte ptr [rbp + 0x3b] ; enter 0xf49, 0x47 ; ret 0x8548
0x0000020000642cd9 : add cl, byte ptr [rbp + 0x3b] ; ret
0x000002000075c7da : add cl, byte ptr [rbp + 0x3b] ; ret 0x1a74
0x00000200001268fe : add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x0000020000038c75 : add cl, byte ptr [rbp + 0x3b] ; ret 0x7274
0x00000200000aa75b : add cl, byte ptr [rbp + 0x3b] ; ret 0x840f
0x0000020000197555 : add cl, byte ptr [rbp + 0x3b] ; ret 0xd572
0x00000200005fe11f : add cl, byte ptr [rbp + 0x3b] ; ret 0xdb73
0x00000200001338a6 : add cl, byte ptr [rbp + 0x3b] ; ret 0xe372
0x000002000022d9bb : add cl, byte ptr [rbp + 0x48d4004] ; ret 0xfeb
0x00000200001f8fb6 : add cl, byte ptr [rbp + 0x634c880c] ; ror dword ptr [rcx - 0x75], 1 ; ret 0x348
0x00000200002258db : add cl, byte ptr [rbp + 3] ; ror dword ptr [rax + 0x33], cl ; ror byte ptr [rax - 0x2d], 1 ; ret 0x8341
0x00000200001d691c : add cl, byte ptr [rbp - 0x75] ; fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x00000200005a0d4e : add cl, byte ptr [rbp - 0x75] ; ret 0xc18b
0x00000200000cc67c : add cl, byte ptr [rbx + 0x478b000c] ; add ch, byte ptr [rbx] ; ret 0x975
0x0000020000668d99 : add cl, byte ptr [rbx + 0x48c28bd0] ; add esp, 0x18 ; ret
0x000002000003104a : add cl, byte ptr [rbx + 0x48c28bd0] ; add esp, 0x38 ; ret
0x000002000046982b : add cl, byte ptr [rbx + 0x4d8d45c1] ; add dword ptr [rbx], esp ; ret 0xc23b
0x000002000010aa39 : add cl, byte ptr [rbx - 0x153eb736] ; add ecx, dword ptr [rax - 1] ; ret 0xe183
0x000002000057e9fb : add cl, byte ptr [rbx - 0x1d7f0018] ; adc byte ptr [rcx - 0x75], al ; ret
0x000002000052e9ba : add cl, byte ptr [rbx] ; ret 0x48ff
0x00000200000a9f19 : add cl, byte ptr [rcx + 0x23] ; ret
0x00000200000df5ac : add cl, byte ptr [rcx + 0x23] ; ret 0x348
0x000002000042fe6d : add cl, byte ptr [rcx + 0x3b] ; ret
0x00000200000eb4f5 : add cl, byte ptr [rcx + 0x3b] ; ret 0x1574
0x00000200001d0c64 : add cl, byte ptr [rcx + 0x3b] ; ret 0xe476
0x0000020000462a81 : add cl, byte ptr [rcx + 0x3b] ; ret 0xe972
0x00000200004641ff : add cl, byte ptr [rcx + 0x3b] ; ret 0xeb72
0x0000020000462ac3 : add cl, byte ptr [rcx + 0x3b] ; ret 0xed72
0x000002000066e489 : add cl, byte ptr [rcx + 0x3b] ; ret 0xf272
0x000002000051967e : add cl, byte ptr [rcx + 0xc48f] ; add bl, ch ; ret 0x48cc
0x0000020000606137 : add cl, byte ptr [rcx + 0xe493] ; add dh, dh ; ret 0x7501
0x000002000010f0bf : add cl, byte ptr [rcx + 0xf] ; mov edi, 0xf490642 ; scasd eax, dword ptr [rdi] ; ret
0x000002000010f0ae : add cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000200000cdc2c : add cl, byte ptr [rcx + rcx*4 + 0x4a] ; or byte ptr [rax - 0x75], cl ; ret 0xc748
0x00000200001cef66 : add cl, byte ptr [rcx + rcx*4 + 1] ; ret
0x00000200001d9c90 : add cl, byte ptr [rcx - 0x3f] ; call qword ptr [rax]
0x000002000021aa00 : add cl, byte ptr [rcx - 0x48f0bafe] ; ret
0x00000200001e27bf : add cl, byte ptr [rcx - 0x75] ; or byte ptr [rax + 0x49], r10b ; mov dword ptr [rcx], eax ; ret
0x00000200001fa2e5 : add cl, byte ptr [rcx - 0x75] ; ret 0xc148
0x000002000062e6e1 : add cl, byte ptr [rcx - 0x75] ; ret 0xf748
0x00000200001a8844 : add cl, byte ptr [rcx - 0x75] ; ror byte ptr [rax - 0x75], cl ; add eax, dword ptr [rbp + 0x2b] ; ret 0x8348
0x00000200003e548d : add cl, byte ptr [rcx - 0x7b] ; ror byte ptr [rdi], 0x85 ; ret
0x000002000016737e : add cl, byte ptr [rcx - 0x7d] ; and byte ptr [rax], al ; ret
0x00000200001fa627 : add cl, byte ptr [rcx - 0x7d] ; ret
0x0000020000230021 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4102
0x000002000064bdff : add cl, byte ptr [rcx - 0x7d] ; ret 0x4404
0x0000020000138e57 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x00000200001fa4de : add cl, byte ptr [rcx - 0x7d] ; ret 0x4808
0x00000200005b5c93 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4902
0x000002000013653a : add cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x000002000064adf5 : add cl, byte ptr [rcx - 0x7d] ; ret 0x4d04
0x0000020000138e09 : add cl, byte ptr [rcx - 0x7d] ; ret 0x6602
0x0000020000136595 : add cl, byte ptr [rcx - 0x7d] ; ret 0x6608
0x0000020000649f93 : add cl, byte ptr [rcx - 0x7d] ; ret 0x8b02
0x00000200003ef75a : add cl, byte ptr [rcx - 0x7d] ; ret 0xe902
0x000002000013649f : add cl, byte ptr [rcx - 0x7d] ; ret 0xe908
0x0000020000138e8e : add cl, byte ptr [rcx - 0x7d] ; ret 0xeb02
0x0000020000583414 : add cl, byte ptr [rcx - 0x7d] ; ret 0xff02
0x000002000016456f : add cl, byte ptr [rcx - 0x7d] ; rol byte ptr [rax + rcx*2], 0xff ; ret 0x8348
0x0000020000163836 : add cl, byte ptr [rcx - 0x7d] ; rol byte ptr [rcx + rcx*2], 0xff ; ret 0x8348
0x0000020000017ae0 : add cl, byte ptr [rcx - 0x7d] ; rol byte ptr [rdx], 0xeb ; adc ecx, dword ptr [rax - 1] ; ret
0x0000020000491943 : add cl, byte ptr [rcx - 0x9bfdba4] ; ret
0x0000020000073638 : add cl, byte ptr [rcx - 1] ; ret
0x0000020000666651 : add cl, byte ptr [rcx - 1] ; ret 0x692d
0x000002000013878c : add cl, byte ptr [rcx - 1] ; ret 0x8041
0x000002000003e2a0 : add cl, byte ptr [rcx - 1] ; ret 0x8348
0x00000200001fa6bd : add cl, byte ptr [rcx - 1] ; ret 0x8841
0x00000200001396ca : add cl, byte ptr [rcx - 1] ; ret 0x8b41
0x00000200001387c9 : add cl, byte ptr [rcx - 1] ; ret 0xff48
0x000002000042fe7d : add cl, byte ptr [rdi - 0x73] ; or al, 0x53 ; mov rax, r9 ; ret
0x00000200004fab72 : add cl, byte ptr [rdi] ; mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x00000200001268fa : add cl, byte ptr [rdi] ; mov bh, 0x51 ; add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x0000020000688252 : add cl, byte ptr [rdi] ; mov bh, 0xb ; call 0x2000013455e
0x000002000013cd68 : add cl, byte ptr [rdi] ; mov bh, 0xc1 ; add rsp, 0x38 ; ret
0x000002000059d337 : add cl, byte ptr [rdi] ; mov dh, 5 ; loopne 0x2000059d318 ; call rcx
0x00000200005d1c38 : add cl, byte ptr [rdi] ; mov dh, 5 ; ret 0xf75f
0x00000200004766c6 : add cl, byte ptr [rdi] ; ret 0xb983
0x0000020000143d1f : add cl, byte ptr [rdi] ; test byte ptr [rax + rax - 0x89a0000], cl ; ret 0x300
0x00000200000e1a59 : add cl, byte ptr [rdi] ; test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000f3ba2 : add cl, byte ptr [rdi] ; test dword ptr [rbp - 0x74fff54e], esp ; ret 0x87eb
0x00000200004305dd : add cl, byte ptr [rdi] ; test dword ptr [rbp - 0x9ffe946], esi ; ret
0x00000200001f8fe9 : add cl, byte ptr [rdi] ; test dword ptr [rdi], ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000059ed6 : add cl, byte ptr [rdi] ; test ecx, esp ; add al, 0 ; add dh, dh ; ret
0x00000200004b5fdc : add cl, byte ptr [rdi] ; test esi, edx ; ret 0x10
0x00000200003bd9ae : add cl, byte ptr [rdi] ; test esp, edx ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200003fd16f : add cl, byte ptr [rdi] ; xchg dword ptr [rbx], edi ; ret 0x17
0x00000200006b76f4 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x0000020000020793 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x10e9
0x00000200000229a6 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xc3f6
0x00000200000207a3 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0xe9
0x00000200000ea7d1 : add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x4a8
0x000002000006b7e4 : add cl, ch ; adc eax, 0x80fffffb ; jns 0x2000006b7f7 ; ret
0x00000200005ca6a6 : add cl, ch ; adc edi, dword ptr [rax + rsi*8 + 0x344f83ff] ; jmp qword ptr [rcx]
0x0000020000141a78 : add cl, ch ; add al, ah ; add byte ptr [rax], al ; ret
0x0000020000141e78 : add cl, ch ; add al, al ; add byte ptr [rax], al ; ret
0x0000020000141778 : add cl, ch ; add al, bh ; add byte ptr [rax], al ; ret
0x0000020000141b78 : add cl, ch ; add al, bl ; add byte ptr [rax], al ; ret
0x0000020000141978 : add cl, ch ; add al, ch ; add byte ptr [rax], al ; ret
0x0000020000141d78 : add cl, ch ; add al, cl ; add byte ptr [rax], al ; ret
0x0000020000141878 : add cl, ch ; add al, dh ; add byte ptr [rax], al ; ret
0x0000020000141c78 : add cl, ch ; add al, dl ; add byte ptr [rax], al ; ret
0x0000020000140278 : add cl, ch ; add bl, ah ; add byte ptr [rax], al ; ret
0x0000020000140678 : add cl, ch ; add bl, al ; add byte ptr [rax], al ; ret
0x0000020000140378 : add cl, ch ; add bl, bl ; add byte ptr [rax], al ; ret
0x0000020000140578 : add cl, ch ; add bl, cl ; add byte ptr [rax], al ; ret
0x0000020000140478 : add cl, ch ; add bl, dl ; add byte ptr [rax], al ; ret
0x000002000014117a : add cl, ch ; add byte ptr [rax], al ; ret
0x0000020000141278 : add cl, ch ; add cl, ah ; add byte ptr [rax], al ; ret
0x0000020000141678 : add cl, ch ; add cl, al ; add byte ptr [rax], al ; ret
0x0000020000140f78 : add cl, ch ; add cl, bh ; add byte ptr [rax], al ; ret
0x0000020000141378 : add cl, ch ; add cl, bl ; add byte ptr [rax], al ; ret
0x0000020000141178 : add cl, ch ; add cl, ch ; add byte ptr [rax], al ; ret
0x0000020000141578 : add cl, ch ; add cl, cl ; add byte ptr [rax], al ; ret
0x0000020000141078 : add cl, ch ; add cl, dh ; add byte ptr [rax], al ; ret
0x0000020000141478 : add cl, ch ; add cl, dl ; add byte ptr [rax], al ; ret
0x0000020000140a78 : add cl, ch ; add dl, ah ; add byte ptr [rax], al ; ret
0x0000020000140e78 : add cl, ch ; add dl, al ; add byte ptr [rax], al ; ret
0x0000020000140778 : add cl, ch ; add dl, bh ; add byte ptr [rax], al ; ret
0x0000020000140b78 : add cl, ch ; add dl, bl ; add byte ptr [rax], al ; ret
0x0000020000140978 : add cl, ch ; add dl, ch ; add byte ptr [rax], al ; ret
0x0000020000140d78 : add cl, ch ; add dl, cl ; add byte ptr [rax], al ; ret
0x0000020000140878 : add cl, ch ; add dl, dh ; add byte ptr [rax], al ; ret
0x0000020000140c78 : add cl, ch ; add dl, dl ; add byte ptr [rax], al ; ret
0x000002000064f713 : add cl, ch ; add dword ptr [rax], 0 ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000141a58 : add cl, ch ; and al, ah ; add byte ptr [rax], al ; ret
0x0000020000141e58 : add cl, ch ; and al, al ; add byte ptr [rax], al ; ret
0x0000020000141758 : add cl, ch ; and al, bh ; add byte ptr [rax], al ; ret
0x0000020000141b58 : add cl, ch ; and al, bl ; add byte ptr [rax], al ; ret
0x0000020000141958 : add cl, ch ; and al, ch ; add byte ptr [rax], al ; ret
0x0000020000141d58 : add cl, ch ; and al, cl ; add byte ptr [rax], al ; ret
0x0000020000141858 : add cl, ch ; and al, dh ; add byte ptr [rax], al ; ret
0x0000020000141c58 : add cl, ch ; and al, dl ; add byte ptr [rax], al ; ret
0x0000020000140258 : add cl, ch ; and bl, ah ; add byte ptr [rax], al ; ret
0x0000020000140658 : add cl, ch ; and bl, al ; add byte ptr [rax], al ; ret
0x0000020000140358 : add cl, ch ; and bl, bl ; add byte ptr [rax], al ; ret
0x0000020000140558 : add cl, ch ; and bl, cl ; add byte ptr [rax], al ; ret
0x0000020000140458 : add cl, ch ; and bl, dl ; add byte ptr [rax], al ; ret
0x0000020000141258 : add cl, ch ; and cl, ah ; add byte ptr [rax], al ; ret
0x0000020000141658 : add cl, ch ; and cl, al ; add byte ptr [rax], al ; ret
0x0000020000140f58 : add cl, ch ; and cl, bh ; add byte ptr [rax], al ; ret
0x0000020000141358 : add cl, ch ; and cl, bl ; add byte ptr [rax], al ; ret
0x0000020000141158 : add cl, ch ; and cl, ch ; add byte ptr [rax], al ; ret
0x0000020000141558 : add cl, ch ; and cl, cl ; add byte ptr [rax], al ; ret
0x0000020000141058 : add cl, ch ; and cl, dh ; add byte ptr [rax], al ; ret
0x0000020000141458 : add cl, ch ; and cl, dl ; add byte ptr [rax], al ; ret
0x0000020000140a58 : add cl, ch ; and dl, ah ; add byte ptr [rax], al ; ret
0x0000020000140e58 : add cl, ch ; and dl, al ; add byte ptr [rax], al ; ret
0x0000020000140758 : add cl, ch ; and dl, bh ; add byte ptr [rax], al ; ret
0x0000020000140b58 : add cl, ch ; and dl, bl ; add byte ptr [rax], al ; ret
0x0000020000140958 : add cl, ch ; and dl, ch ; add byte ptr [rax], al ; ret
0x0000020000140d58 : add cl, ch ; and dl, cl ; add byte ptr [rax], al ; ret
0x0000020000140858 : add cl, ch ; and dl, dh ; add byte ptr [rax], al ; ret
0x0000020000140c58 : add cl, ch ; and dl, dl ; add byte ptr [rax], al ; ret
0x0000020000197935 : add cl, ch ; cmp ecx, dword ptr [rsi] ; hlt ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x0000020000188757 : add cl, ch ; cmp si, cx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000143838 : add cl, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000018592c : add cl, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff0
0x0000020000143738 : add cl, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000001d054 : add cl, ch ; imul edi, ebp, -1 ; push rsi ; ret
0x000002000018b7a6 : add cl, ch ; inc cl ; int1 ; push rsi ; ret 0x741e
0x000002000019112a : add cl, ch ; jmp rax
0x0000020000141538 : add cl, ch ; leave ; add byte ptr [rax], al ; ret
0x0000020000143238 : add cl, ch ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000020000143138 : add cl, ch ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000058e106 : add cl, ch ; lodsd eax, dword ptr [rsi] ; cmp esi, edi ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000140298 : add cl, ch ; loop 0x2000014027d ; add byte ptr [rax], al ; ret
0x0000020000140398 : add cl, ch ; loop 0x2000014037c ; add byte ptr [rax], al ; ret
0x0000020000140498 : add cl, ch ; loop 0x2000014047b ; add byte ptr [rax], al ; ret
0x0000020000140598 : add cl, ch ; loop 0x2000014057a ; add byte ptr [rax], al ; ret
0x0000020000140698 : add cl, ch ; loop 0x20000140679 ; add byte ptr [rax], al ; ret
0x0000020000140798 : add cl, ch ; loop 0x20000140778 ; add byte ptr [rax], al ; ret
0x0000020000140898 : add cl, ch ; loop 0x20000140877 ; add byte ptr [rax], al ; ret
0x0000020000140998 : add cl, ch ; loop 0x20000140976 ; add byte ptr [rax], al ; ret
0x0000020000140a98 : add cl, ch ; loop 0x20000140a75 ; add byte ptr [rax], al ; ret
0x0000020000140b98 : add cl, ch ; loop 0x20000140b74 ; add byte ptr [rax], al ; ret
0x0000020000140c98 : add cl, ch ; loop 0x20000140c73 ; add byte ptr [rax], al ; ret
0x0000020000140d98 : add cl, ch ; loop 0x20000140d72 ; add byte ptr [rax], al ; ret
0x0000020000140e98 : add cl, ch ; loop 0x20000140e71 ; add byte ptr [rax], al ; ret
0x0000020000140f98 : add cl, ch ; loop 0x20000140f70 ; add byte ptr [rax], al ; ret
0x0000020000141098 : add cl, ch ; loop 0x2000014106f ; add byte ptr [rax], al ; ret
0x0000020000141198 : add cl, ch ; loop 0x2000014116e ; add byte ptr [rax], al ; ret
0x0000020000141298 : add cl, ch ; loop 0x2000014126d ; add byte ptr [rax], al ; ret
0x0000020000141398 : add cl, ch ; loop 0x2000014136c ; add byte ptr [rax], al ; ret
0x0000020000141498 : add cl, ch ; loop 0x2000014146b ; add byte ptr [rax], al ; ret
0x0000020000141598 : add cl, ch ; loop 0x2000014156a ; add byte ptr [rax], al ; ret
0x0000020000141698 : add cl, ch ; loop 0x20000141669 ; add byte ptr [rax], al ; ret
0x0000020000141798 : add cl, ch ; loop 0x20000141768 ; add byte ptr [rax], al ; ret
0x0000020000141898 : add cl, ch ; loop 0x20000141867 ; add byte ptr [rax], al ; ret
0x0000020000141998 : add cl, ch ; loop 0x20000141966 ; add byte ptr [rax], al ; ret
0x0000020000141a98 : add cl, ch ; loop 0x20000141a65 ; add byte ptr [rax], al ; ret
0x0000020000141b98 : add cl, ch ; loop 0x20000141b64 ; add byte ptr [rax], al ; ret
0x0000020000141c98 : add cl, ch ; loop 0x20000141c63 ; add byte ptr [rax], al ; ret
0x0000020000141d98 : add cl, ch ; loop 0x20000141d62 ; add byte ptr [rax], al ; ret
0x0000020000141e98 : add cl, ch ; loop 0x20000141e61 ; add byte ptr [rax], al ; ret
0x0000020000141f98 : add cl, ch ; loop 0x20000141f60 ; add byte ptr [rax], al ; ret
0x0000020000142098 : add cl, ch ; loop 0x2000014205f ; add byte ptr [rax], al ; ret
0x0000020000142198 : add cl, ch ; loop 0x2000014215e ; add byte ptr [rax], al ; ret
0x0000020000142298 : add cl, ch ; loop 0x2000014225d ; add byte ptr [rax], al ; ret
0x0000020000142398 : add cl, ch ; loop 0x2000014235c ; add byte ptr [rax], al ; ret
0x0000020000142498 : add cl, ch ; loop 0x2000014245b ; add byte ptr [rax], al ; ret
0x0000020000142598 : add cl, ch ; loop 0x2000014255a ; add byte ptr [rax], al ; ret
0x0000020000142698 : add cl, ch ; loop 0x20000142659 ; add byte ptr [rax], al ; ret
0x0000020000142798 : add cl, ch ; loop 0x20000142758 ; add byte ptr [rax], al ; ret
0x0000020000142898 : add cl, ch ; loop 0x20000142857 ; add byte ptr [rax], al ; ret
0x0000020000142998 : add cl, ch ; loop 0x20000142956 ; add byte ptr [rax], al ; ret
0x0000020000142a98 : add cl, ch ; loop 0x20000142a55 ; add byte ptr [rax], al ; ret
0x0000020000142b98 : add cl, ch ; loop 0x20000142b54 ; add byte ptr [rax], al ; ret
0x0000020000142c98 : add cl, ch ; loop 0x20000142c53 ; add byte ptr [rax], al ; ret
0x0000020000142d98 : add cl, ch ; loop 0x20000142d52 ; add byte ptr [rax], al ; ret
0x0000020000142e98 : add cl, ch ; loop 0x20000142e51 ; add byte ptr [rax], al ; ret
0x0000020000142f98 : add cl, ch ; loop 0x20000142f50 ; add byte ptr [rax], al ; ret
0x0000020000143098 : add cl, ch ; loop 0x2000014304f ; add byte ptr [rax], al ; ret
0x0000020000143198 : add cl, ch ; loop 0x2000014314e ; add byte ptr [rax], al ; ret
0x0000020000143298 : add cl, ch ; loop 0x2000014324d ; add byte ptr [rax], al ; ret
0x0000020000143398 : add cl, ch ; loop 0x2000014334c ; add byte ptr [rax], al ; ret
0x0000020000143498 : add cl, ch ; loop 0x2000014344b ; add byte ptr [rax], al ; ret
0x0000020000143598 : add cl, ch ; loop 0x2000014354a ; add byte ptr [rax], al ; ret
0x0000020000143698 : add cl, ch ; loop 0x20000143649 ; add byte ptr [rax], al ; ret
0x0000020000143798 : add cl, ch ; loop 0x20000143748 ; add byte ptr [rax], al ; ret
0x0000020000143898 : add cl, ch ; loop 0x20000143847 ; add byte ptr [rax], al ; ret
0x000002000017ebf3 : add cl, ch ; mov bl, byte ptr [rdx - 0x74b70011] ; ret
0x0000020000141838 : add cl, ch ; mov byte ptr [rax], 0 ; ret
0x00000200000cbe91 : add cl, ch ; mov eax, 0x8b000000 ; ret
0x00000200001f456d : add cl, ch ; mov ebx, 0xb000001 ; sal dh, 1 ; ret 0x753f
0x0000020000509606 : add cl, ch ; mov esi, 0xe8fffffd ; outsd dx, dword ptr [rsi] ; insd dword ptr [rdi], dx ; ret
0x000002000018d3c0 : add cl, ch ; mov esi, dr0 ; int1 ; inc dword ptr [rbp - 0x75] ; ret
0x00000200005cb72a : add cl, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000002000005723e : add cl, ch ; or al, 0 ; add byte ptr [rax], al ; ret
0x000002000018bca3 : add cl, ch ; pop rsi ; mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; ret
0x00000200001a3bfe : add cl, ch ; pop rsi ; ret 0xfff8
0x000002000016057c : add cl, ch ; pop rsi ; xchg eax, ebp ; in al, dx ; inc dword ptr [rbp - 0x75] ; ret 0x8b41
0x00000200000c6cd0 : add cl, ch ; psubq mm7, mm7 ; dec dword ptr [rdi] ; mov dh, 0x93 ; ret
0x0000020000199159 : add cl, ch ; push rax ; jo 0x20000199159 ; push rsi ; ret
0x00000200000532c2 : add cl, ch ; ret
0x0000020000040b0e : add cl, ch ; ret 0
0x00000200001438b8 : add cl, ch ; ret 0xa5
0x00000200001437b8 : add cl, ch ; ret 0xa6
0x00000200001436b8 : add cl, ch ; ret 0xa7
0x00000200001435b8 : add cl, ch ; ret 0xa8
0x00000200001434b8 : add cl, ch ; ret 0xa9
0x00000200001433b8 : add cl, ch ; ret 0xaa
0x00000200001432b8 : add cl, ch ; ret 0xab
0x00000200001431b8 : add cl, ch ; ret 0xac
0x00000200001430b8 : add cl, ch ; ret 0xad
0x0000020000142fb8 : add cl, ch ; ret 0xae
0x0000020000142eb8 : add cl, ch ; ret 0xaf
0x0000020000142db8 : add cl, ch ; ret 0xb0
0x0000020000142cb8 : add cl, ch ; ret 0xb1
0x0000020000142bb8 : add cl, ch ; ret 0xb2
0x0000020000142ab8 : add cl, ch ; ret 0xb3
0x00000200001429b8 : add cl, ch ; ret 0xb4
0x00000200001428b8 : add cl, ch ; ret 0xb5
0x00000200001427b8 : add cl, ch ; ret 0xb6
0x00000200001426b8 : add cl, ch ; ret 0xb7
0x00000200001425b8 : add cl, ch ; ret 0xb8
0x00000200001424b8 : add cl, ch ; ret 0xb9
0x00000200001423b8 : add cl, ch ; ret 0xba
0x00000200001422b8 : add cl, ch ; ret 0xbb
0x00000200001421b8 : add cl, ch ; ret 0xbc
0x00000200001420b8 : add cl, ch ; ret 0xbd
0x0000020000141fb8 : add cl, ch ; ret 0xbe
0x0000020000141eb8 : add cl, ch ; ret 0xbf
0x0000020000141db8 : add cl, ch ; ret 0xc0
0x0000020000141cb8 : add cl, ch ; ret 0xc1
0x0000020000141bb8 : add cl, ch ; ret 0xc2
0x0000020000141ab8 : add cl, ch ; ret 0xc3
0x00000200001419b8 : add cl, ch ; ret 0xc4
0x00000200001418b8 : add cl, ch ; ret 0xc5
0x00000200001417b8 : add cl, ch ; ret 0xc6
0x00000200001416b8 : add cl, ch ; ret 0xc7
0x00000200001415b8 : add cl, ch ; ret 0xc8
0x00000200001414b8 : add cl, ch ; ret 0xc9
0x00000200001413b8 : add cl, ch ; ret 0xca
0x00000200001412b8 : add cl, ch ; ret 0xcb
0x00000200001411b8 : add cl, ch ; ret 0xcc
0x00000200001410b8 : add cl, ch ; ret 0xcd
0x0000020000140fb8 : add cl, ch ; ret 0xce
0x0000020000140eb8 : add cl, ch ; ret 0xcf
0x0000020000140db8 : add cl, ch ; ret 0xd0
0x0000020000140cb8 : add cl, ch ; ret 0xd1
0x0000020000140bb8 : add cl, ch ; ret 0xd2
0x0000020000140ab8 : add cl, ch ; ret 0xd3
0x00000200001409b8 : add cl, ch ; ret 0xd4
0x00000200001408b8 : add cl, ch ; ret 0xd5
0x00000200001407b8 : add cl, ch ; ret 0xd6
0x00000200001406b8 : add cl, ch ; ret 0xd7
0x00000200001405b8 : add cl, ch ; ret 0xd8
0x00000200001404b8 : add cl, ch ; ret 0xd9
0x00000200001403b8 : add cl, ch ; ret 0xda
0x00000200001402b8 : add cl, ch ; ret 0xdb
0x00000200001401b8 : add cl, ch ; ret 0xdc
0x0000020000564623 : add cl, ch ; ret 0xe684
0x0000020000565cfe : add cl, ch ; ret 0xe6e0
0x00000200005802c3 : add cl, ch ; ret 0xe8d8
0x00000200005b1856 : add cl, ch ; ret 0xec85
0x0000020000178d5c : add cl, ch ; ret 0xee12
0x000002000018cb46 : add cl, ch ; ret 0xf1dc
0x00000200000aba31 : add cl, ch ; ret 0xfff8
0x000002000016f029 : add cl, ch ; ret 0xfff9
0x00000200003b84d4 : add cl, ch ; ret 0xfffc
0x0000020000543465 : add cl, ch ; ret 0xfffd
0x00000200004c6e09 : add cl, ch ; ret 0xfffe
0x00000200001f1315 : add cl, ch ; ret 2
0x00000200000bf968 : add cl, ch ; ret 3
0x0000020000141e38 : add cl, ch ; rol byte ptr [rax], 0 ; ret
0x0000020000141d38 : add cl, ch ; rol dword ptr [rax], 0 ; ret
0x0000020000140838 : add cl, ch ; salc ; add byte ptr [rax], al ; ret
0x000002000017b713 : add cl, ch ; salc ; ret
0x000002000017e00e : add cl, ch ; sar byte ptr [rsi - 0x11], 1 ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000169198 : add cl, ch ; sbb edi, esi ; clc ; dec dword ptr [rax - 0x75] ; ret
0x0000020000143038 : add cl, ch ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x0000020000142f38 : add cl, ch ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000018e950 : add cl, ch ; scasd eax, dword ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000143438 : add cl, ch ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x0000020000143338 : add cl, ch ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x00000200005be5c5 : add cl, ch ; sub byte ptr [rdx - 0x7cbe0012], bl ; ret 0xc7f0
0x000002000017d24c : add cl, ch ; test byte ptr [rax], dh ; out dx, eax ; dec dword ptr [rbp - 0x75] ; ret
0x00000200001588ec : add cl, ch ; xchg eax, ecx ; add al, 0xeb ; dec dword ptr [rax + 3] ; ret 0x2bb
0x00000200001e2303 : add cl, ch ; xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret
0x0000020000140738 : add cl, ch ; xlatb ; add byte ptr [rax], al ; ret
0x000002000014157a : add cl, cl ; add byte ptr [rax], al ; ret
0x000002000014107a : add cl, dh ; add byte ptr [rax], al ; ret
0x000002000014147a : add cl, dl ; add byte ptr [rax], al ; ret
0x0000020000642a16 : add cx, r9w ; movzx eax, cx ; ret
0x00000200004b9bdf : add dh, al ; add byte ptr [rax], al ; jmp 0x200004b9bad
0x000002000005eca6 : add dh, al ; add eax, 0x29bed2 ; add bl, ch ; ret 0x8948
0x0000020000067000 : add dh, al ; sbb dword ptr [rax], 0x3f000003 ; ret
0x00000200000577b6 : add dh, al ; sub al, byte ptr [rax] ; ret
0x00000200000e7989 : add dh, al ; xor byte ptr [r9], al ; ret
0x00000200000d34ad : add dh, bh ; mov cl, 1 ; call 0x2000002f726
0x0000020000202d83 : add dh, bh ; ret
0x000002000006cc8f : add dh, bh ; ret 0x5688
0x000002000006cbc4 : add dh, bh ; ret 0x8b49
0x000002000064bfaa : add dh, bl ; movq qword ptr [rax + 8], mm0 ; ret
0x00000200004758c7 : add dh, byte ptr [rax + 0x48] ; mov ecx, edi ; call 0x200000c1b38
0x000002000004eb90 : add dh, byte ptr [rax - 0x15] ; ret
0x000002000009a598 : add dh, byte ptr [rbp + 0x14] ; or eax, 0x18 ; ret
0x00000200006b585a : add dh, byte ptr [rbp + 0x48] ; mov ecx, ebx ; call 0x200001d1b2c
0x000002000003e488 : add dh, byte ptr [rbp + 0xe] ; mov byte ptr [rip + 0x2bc632], dl ; ret
0x00000200000bc28d : add dh, byte ptr [rbp + 1] ; ret
0x00000200000bcd15 : add dh, byte ptr [rbp + 3] ; xor al, al ; ret
0x00000200004875c2 : add dh, byte ptr [rbp + 3] ; xor eax, eax ; ret
0x00000200006cbf82 : add dh, byte ptr [rbp + 6] ; mov eax, 1 ; ret
0x00000200000844cb : add dh, byte ptr [rbp + 6] ; mov rax, qword ptr [r8 + rcx + 0x2f] ; ret
0x000002000049914f : add dh, byte ptr [rbp + 8] ; call 0x200000bb1b6
0x000002000004600f : add dh, byte ptr [rbp + rax + 0x48] ; bts dword ptr [rcx], 0xc ; ret
0x0000020000042d8a : add dh, byte ptr [rbp + rax + 0x48] ; mov eax, dword ptr [rcx + 0x28] ; ret
0x000002000006a04b : add dh, byte ptr [rbp - 0x11] ; jmp 0x20000036345
0x000002000001f060 : add dh, byte ptr [rbp - 0x1f] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000068626e : add dh, byte ptr [rbp - 0x38] ; ret
0x00000200000684f7 : add dh, byte ptr [rbx + 1] ; ret
0x000002000021ddd5 : add dh, byte ptr [rbx + 3] ; xor eax, eax ; ret
0x00000200000f1824 : add dh, byte ptr [rbx + rax - 0x75] ; ret 0x41c3
0x0000020000143c47 : add dh, byte ptr [rbx + rax - 0x7d] ; enter 0x6602, -9 ; ret 0x100
0x000002000077500e : add dh, byte ptr [rbx + rax - 0x7d] ; leave ; and dh, dh ; ret 0x7504
0x00000200006bb785 : add dh, byte ptr [rbx] ; leave ; mov rax, rcx ; ret
0x00000200005a65f1 : add dh, byte ptr [rbx] ; ret 0x8941
0x00000200000ff7b9 : add dh, byte ptr [rbx] ; rol bl, 0xb8 ; sbb eax, dword ptr [rdx] ; add al, al ; ret
0x000002000012d627 : add dh, byte ptr [rbx] ; rol byte ptr [rcx - 0x75], 1 ; ret
0x000002000021010d : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000017f74c : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret 0x8b49
0x00000200006775fa : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop rbx ; pop rbp ; ret
0x0000020000401f11 : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x000002000060d504 : add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c28
0x00000200005e3bf4 : add dh, byte ptr [rbx] ; shr al, cl ; pushfq ; ret 0xfff5
0x000002000063dd73 : add dh, byte ptr [rcx + 0x48c18a01] ; add esp, 0x28 ; ret
0x000002000002ccd0 : add dh, byte ptr [rdi - 8] ; xor al, al ; ret
0x000002000051cc7a : add dh, byte ptr [rdi] ; ret 0x40ff
0x00000200001bd6a2 : add dh, byte ptr [rdx + 0x48c28a01] ; add esp, 0x28 ; ret
0x000002000012b533 : add dh, byte ptr [rdx + 3] ; mov al, 1 ; ret
0x00000200005f8caa : add dh, byte ptr [rdx + 6] ; mov eax, 0xc0000189 ; ret
0x000002000042daf8 : add dh, byte ptr [rdx + rax - 0x75] ; ret 0x8545
0x0000020000475b99 : add dh, byte ptr [rdx - 0x10] ; xor eax, eax ; ret
0x000002000011734a : add dh, byte ptr [rdx - 0x13] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000010698a : add dh, byte ptr [rdx - 0x15] ; ret
0x0000020000470462 : add dh, byte ptr [rdx - 0x25] ; mov al, dl ; ret
0x0000020000128593 : add dh, byte ptr [rdx - 0x3e] ; jmp 0x20000128538
0x00000200000d3982 : add dh, byte ptr [rdx - 6] ; mov eax, 2 ; ret
0x000002000055d17c : add dh, byte ptr [rdx] ; ret
0x00000200005f496e : add dh, byte ptr [rdx] ; ret 0xc141
0x000002000066e56e : add dh, byte ptr [rsi + rax - 0x48] ; add al, byte ptr [rax] ; add al, al ; ret
0x000002000006a1c6 : add dh, byte ptr [rsi + rax - 0x48] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000011cf2c : add dh, byte ptr [rsi + rdx - 1] ; ret
0x00000200000b25b3 : add dh, byte ptr [rsp + rdx - 0x75] ; ret 0x45f0
0x0000020000186e2e : add dh, cl ; dec dword ptr [rax - 0x75] ; ret
0x0000020000586b5f : add dh, dh ; dec dword ptr [rax - 0x75] ; ret
0x000002000000310e : add dh, dh ; ret
0x00000200004a046a : add dh, dh ; ret 0x4002
0x0000020000148df5 : add dh, dh ; ret 0x7401
0x00000200000a8094 : add dh, dh ; ret 0x7402
0x0000020000208efa : add dh, dh ; ret 0x7403
0x00000200004ba820 : add dh, dh ; ret 0x7404
0x00000200000a85a6 : add dh, dh ; ret 0x740f
0x000002000007748b : add dh, dh ; ret 0x7410
0x00000200003c5fee : add dh, dh ; ret 0x7420
0x000002000003d6d5 : add dh, dh ; ret 0x7501
0x000002000002f4ba : add dh, dh ; ret 0x7502
0x0000020000041c3e : add dh, dh ; ret 0x7503
0x00000200000eff33 : add dh, dh ; ret 0x7504
0x00000200006ca9d0 : add dh, dh ; ret 0x7508
0x00000200000328e5 : add dh, dh ; ret 0x7510
0x000002000007edbb : add dh, dh ; ret 0x751e
0x0000020000498d24 : add dh, dh ; ret 0xc601
0x0000020000021b78 : add dh, dh ; ret 0xf01
0x0000020000059ed3 : add dh, dh ; ret 0xf02
0x00000200003eab93 : add dh, dh ; ret 0xf03
0x00000200000aa0d0 : add dh, dh ; ret 0xf04
0x0000020000099c68 : add dh, dh ; ret 0xf07
0x000002000007ed33 : add dh, dh ; ret 0xf08
0x00000200000278ce : add dh, dh ; ret 0xf0f
0x000002000019f740 : add dh, dh ; ret 0xf10
0x00000200000ab307 : add dh, dh ; ret 0xf1e
0x000002000064ac24 : add dh, dh ; ret 0xf20
0x00000200003b49ed : add dh, dh ; ret 0xf21
0x00000200003b2320 : add dh, dh ; ret 0xf30
0x0000020000116a3e : add dh, dh ; ret 0xf3f
0x0000020000021816 : add dh, dh ; ret 0xf40
0x00000200000ea0b1 : add dh, dh ; ret 0xf91
0x000002000064a307 : add dh, dh ; ret 0xfbf
0x00000200001ffb5a : add dh, dh ; rol dword ptr [rcx], 0x74 ; sbb cl, byte ptr [rax - 0x75] ; ret
0x00000200000229a3 : add dh, dh ; rol dword ptr [rdx], 0xf ; xchg eax, ebp ; ret 0xc3f6
0x000002000003ffaf : add dh, dh ; sbb dword ptr [r9], eax ; jne 0x2000003ffc6 ; ret
0x0000020000408b5f : add dh, dh ; shl byte ptr [rcx + rax], 1 ; ret
0x0000020000004452 : add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000005a82e : add dil, dil ; ret
0x00000200004bb366 : add dil, dil ; ret 0x348
0x0000020000053a3b : add dil, dil ; ret 0x349
0x000002000057429c : add dil, r15b ; ret
0x00000200006503b3 : add dil, r15b ; ret 0x8b4c
0x0000020000140a7a : add dl, ah ; add byte ptr [rax], al ; ret
0x0000020000140e7a : add dl, al ; add byte ptr [rax], al ; ret
0x00000200006a9e38 : add dl, al ; ret
0x000002000014077a : add dl, bh ; add byte ptr [rax], al ; ret
0x0000020000146f54 : add dl, bh ; add rsp, 8 ; ret
0x0000020000140b7a : add dl, bl ; add byte ptr [rax], al ; ret
0x00000200005ad86c : add dl, byte ptr [rip - 0x17000000] ; ret
0x00000200001858bf : add dl, byte ptr [rsi] ; add byte ptr [rax - 0x75], cl ; clc ; jmp 0x20000091b52
0x00000200001859a0 : add dl, byte ptr [rsi] ; add byte ptr [rcx], al ; jmp 0x20000091c72
0x000002000018592a : add dl, byte ptr [rsi] ; add cl, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff0
0x000002000014097a : add dl, ch ; add byte ptr [rax], al ; ret
0x000002000065d7a3 : add dl, ch ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000140d7a : add dl, cl ; add byte ptr [rax], al ; ret
0x00000200006dcf27 : add dl, cl ; jmp 0x1ffc3765875
0x000002000014087a : add dl, dh ; add byte ptr [rax], al ; ret
0x0000020000608441 : add dl, dh ; movups xmmword ptr [rax], xmm0 ; xor eax, eax ; ret
0x0000020000140c7a : add dl, dl ; add byte ptr [rax], al ; ret
0x000002000004e3d1 : add dl, dl ; loopne 0x2000004e367 ; in al, -0xa ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000a48b7 : add dl, dl ; loopne 0x200000a484d ; loopne 0x200000a48bd ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x0000020000191bb2 : add dl, dl ; loopne 0x20000191b48 ; add r14b, r14b ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x0000020000195720 : add dl, dl ; loopne 0x20000195720 ; shl byte ptr [rdx], 1 ; ret 0x8841
0x00000200003dde12 : add dl, dl ; ret
0x0000020000142e95 : add dword ptr [eax], eax ; add cl, ch ; loop 0x20000142e54 ; add byte ptr [rax], al ; ret
0x000002000011ca59 : add dword ptr [eax], eax ; add rsp, 0x58 ; ret
0x0000020000210005 : add dword ptr [r10 + 0x14], edx ; xor eax, eax ; ret
0x000002000015b787 : add dword ptr [r10], esp ; ret 0x450f
0x00000200007427a5 : add dword ptr [r10], r13d ; ret
0x0000020000654896 : add dword ptr [r11], ebp ; ret 0x8b44
0x000002000076207e : add dword ptr [r11], edi ; ret
0x00000200003daa32 : add dword ptr [r11], r13d ; ret
0x0000020000064bf7 : add dword ptr [r11], r15d ; ret
0x00000200000539ea : add dword ptr [r13 + 0x88504], ecx ; add byte ptr [rax], al ; ret
0x000002000005584b : add dword ptr [r13 + 3], esi ; xor eax, eax ; ret
0x00000200004baa0d : add dword ptr [r8 + 0x3b], ecx ; ret 0x5273
0x0000020000138814 : add dword ptr [r8 + 0x3b], ecx ; ret 0xa76
0x000002000022f7bc : add dword ptr [r8 + 0xb], r9d ; ret 0x8b48
0x0000020000680d1d : add dword ptr [r8 + 3], ecx ; ret 0x3b4c
0x00000200001f98fb : add dword ptr [r8 + r9 + 0x48], r14d ; inc edi ; inc rdx ; jmp 0x200001f993d
0x000002000000f580 : add dword ptr [r8 - 0x77], ecx ; or bl, bpl ; ret
0x00000200001f9a2c : add dword ptr [r8 - 0x7d], ecx ; ret
0x000002000005e92c : add dword ptr [r8], eax ; add byte ptr [rbx + 0x3481c40], cl ; ret 0x3b48
0x0000020000080899 : add dword ptr [r8], eax ; add dh, dh ; ret
0x00000200004eed31 : add dword ptr [r8], eax ; add rsp, 0x28 ; ret
0x00000200000534b4 : add dword ptr [r8], eax ; jne 0x200000534ca ; xor al, al ; ret
0x0000020000636cf8 : add dword ptr [r8], r8d ; add byte ptr [rax - 0x2f], cl ; call 0x20067257054
0x0000020000142a95 : add dword ptr [r8], r8d ; add cl, ch ; loop 0x20000142a58 ; add byte ptr [rax], al ; ret
0x00000200000ff023 : add dword ptr [r9 + 0x3b], eax ; ret 0xe175
0x00000200000fefa6 : add dword ptr [r9 + 0x3b], eax ; ret 0xe775
0x000002000042bf3f : add dword ptr [r9 + 0x3b], ecx ; ret
0x000002000002b4f7 : add dword ptr [r9 + 0x3b], r8d ; ret
0x000002000049b0a9 : add dword ptr [r9 - 0x75], ecx ; leave ; call 0x200000bcd28
0x000002000040fe8c : add dword ptr [r9 - 0x77], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4938
0x0000020000467d77 : add dword ptr [r9 - 0x77], eax ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200003f2682 : add dword ptr [rax + 0x10], ecx ; add rsp, 0x28 ; ret
0x0000020000062fe9 : add dword ptr [rax + 0x23], ecx ; ret
0x00000200001e02e9 : add dword ptr [rax + 0x23], ecx ; ret 0x11b2
0x00000200000aa77c : add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x000002000010fd72 : add dword ptr [rax + 0x23], ecx ; ret 0xc149
0x00000200001d77d1 : add dword ptr [rax + 0x23], ecx ; ret 0xccc3
0x000002000055be72 : add dword ptr [rax + 0x2b], ecx ; ret 0x3b48
0x00000200003edc68 : add dword ptr [rax + 0x2b], ecx ; ret 0xd148
0x0000020000138763 : add dword ptr [rax + 0x2c64101], ecx ; cmp cl, byte ptr [rcx - 1] ; ret 0x854d
0x000002000022cabc : add dword ptr [rax + 0x31], ecx ; sbb dword ptr [rcx + 3], eax ; ror byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000002000022bacb : add dword ptr [rax + 0x33], ecx ; ret 0x8948
0x0000020000740870 : add dword ptr [rax + 0x33], ecx ; ret 0xd233
0x0000020000059e36 : add dword ptr [rax + 0x3b], ecx ; ret
0x00000200000220de : add dword ptr [rax + 0x3b], ecx ; ret 0x1674
0x0000020000063535 : add dword ptr [rax + 0x3b], ecx ; ret 0x1b73
0x00000200004baa0e : add dword ptr [rax + 0x3b], ecx ; ret 0x5273
0x00000200005d0b18 : add dword ptr [rax + 0x3b], ecx ; ret 0x830f
0x000002000009d8c2 : add dword ptr [rax + 0x3b], ecx ; ret 0x850f
0x0000020000061410 : add dword ptr [rax + 0x3b], ecx ; ret 0x8f0f
0x0000020000138815 : add dword ptr [rax + 0x3b], ecx ; ret 0xa76
0x00000200001a3d10 : add dword ptr [rax + 0x3b], ecx ; ret 0xb74
0x00000200006c22d4 : add dword ptr [rax + 0x3b], ecx ; ret 0xf176
0x00000200000bab15 : add dword ptr [rax + 0x3b], ecx ; sal byte ptr [rdi + 5], 1 ; ret
0x0000020000114152 : add dword ptr [rax + 0x3b], ecx ; sal dword ptr [rdx + rcx + 0x48], 0x3b ; ret 0x1c74
0x00000200000ff1a6 : add dword ptr [rax + 0x41000000], 0x3a ; ret 0x840f
0x0000020000213797 : add dword ptr [rax + 0x41], ecx ; mov byte ptr [rdx], 0x2e ; call r10
0x00000200006d737b : add dword ptr [rax + 0x589ffc2], edi ; jnp 0x200006d7342 ; ret 0x41ff
0x00000200005cb7b9 : add dword ptr [rax + 0x63], ecx ; ret
0x00000200000a760b : add dword ptr [rax + 0xb], ecx ; ret 0x8948
0x0000020000004f8d : add dword ptr [rax + 0xb], ecx ; ret 0x8949
0x000002000022f7bd : add dword ptr [rax + 0xb], ecx ; ret 0x8b48
0x000002000039d28f : add dword ptr [rax + 0xb], ecx ; ret 0x8b4c
0x000002000021ecdc : add dword ptr [rax + 0xb], ecx ; ret 0xceb
0x0000020000773bfb : add dword ptr [rax + 0xc], 0xb ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000773d81 : add dword ptr [rax + 0xc], 0xc ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000773ede : add dword ptr [rax + 0xc], 0xe ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000773f9c : add dword ptr [rax + 0xc], 0xf ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000146913 : add dword ptr [rax + 0xf], ecx ; ret
0x000002000052bbf2 : add dword ptr [rax + 1], 0 ; add byte ptr [rbx], bh ; ret
0x00000200003b39d7 : add dword ptr [rax + 1], edi ; ret
0x00000200000b0d81 : add dword ptr [rax + 2], 0 ; add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x0000020000680d1e : add dword ptr [rax + 3], ecx ; ret 0x3b4c
0x00000200003ed551 : add dword ptr [rax + 3], ecx ; rol dword ptr [rbx + 0x34803e3], cl ; ret 0x8b48
0x00000200003a16f3 : add dword ptr [rax + 3], ecx ; ror dword ptr [rax - 0x75], 1 ; ret 0x2b48
0x000002000067a439 : add dword ptr [rax + rax*8 - 0x74b72b8b], eax ; ret 0x8b4c
0x000002000067876c : add dword ptr [rax + rax*8 - 0x74b72e8b], eax ; ret 0x8b4c
0x0000020000679784 : add dword ptr [rax + rax*8 - 0x74b72e8b], eax ; ret 0xc933
0x00000200005c3506 : add dword ptr [rax + rbp - 0x7d], esi ; sal eax, -0x7d ; ret
0x0000020000191f82 : add dword ptr [rax + rbp - 0xa], esi ; ret
0x00000200005196f6 : add dword ptr [rax + rbp*8 - 0xa], esi ; ret
0x000002000022753a : add dword ptr [rax + rbx*2 - 0x7d], esi ; stc ; add dword ptr [rdi + rax*2 - 0xa], esi ; ret
0x00000200001f98fc : add dword ptr [rax + rcx + 0x48], esi ; inc edi ; inc rdx ; jmp 0x200001f993c
0x0000020000682130 : add dword ptr [rax + rcx - 1], esi ; ret
0x00000200005388ce : add dword ptr [rax + rcx*4 + 0x42], eax ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4d04
0x0000020000205982 : add dword ptr [rax + rcx*4], ebx ; add rsp, 0x28 ; ret
0x0000020000205981 : add dword ptr [rax + rcx*4], r11d ; add rsp, 0x28 ; ret
0x000002000063f944 : add dword ptr [rax - 0x17fa8bff], ebp ; ret 0xa052
0x00000200003bafeb : add dword ptr [rax - 0x39], ecx ; ret 0x5d00
0x0000020000035deb : add dword ptr [rax - 0x3f], ecx ; call 0x1ffc226a606
0x00000200005f98e9 : add dword ptr [rax - 0x3fccfcbf], ecx ; ret
0x000002000002d605 : add dword ptr [rax - 0x3fcd3cff], esi ; ret
0x000002000014f5e8 : add dword ptr [rax - 0x3fffff45], edi ; ret
0x00000200000c9409 : add dword ptr [rax - 0x73], ecx ; xor byte ptr [r11], cl ; ret 0x4123
0x000002000062ca52 : add dword ptr [rax - 0x74bbd3bf], ecx ; ret 0x2b44
0x000002000006c208 : add dword ptr [rax - 0x75], ecx ; add bh, bh ; ret
0x0000020000108da0 : add dword ptr [rax - 0x75], ecx ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000040379c : add dword ptr [rax - 0x75], ecx ; add dword ptr [rcx - 0x7c], eax ; ret 0x1774
0x0000020000044782 : add dword ptr [rax - 0x75], ecx ; add eax, 0x33ad1e ; call rax
0x0000020000044725 : add dword ptr [rax - 0x75], ecx ; add eax, 0x33ad7b ; call rax
0x000002000003c12f : add dword ptr [rax - 0x75], ecx ; add eax, 0x343371 ; call rax
0x000002000003c0b4 : add dword ptr [rax - 0x75], ecx ; add eax, 0x3433ec ; call rax
0x0000020000451942 : add dword ptr [rax - 0x75], ecx ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000010f1c4 : add dword ptr [rax - 0x75], ecx ; and al, 0x30 ; mov qword ptr [rax], r10 ; ret
0x00000200005cb153 : add dword ptr [rax - 0x75], ecx ; and al, 0x40 ; call 0x20000637460
0x0000020000475f21 : add dword ptr [rax - 0x75], ecx ; iretd ; call 0x2000009a487
0x00000200005befd3 : add dword ptr [rax - 0x75], ecx ; iretd ; call 0x200001e1b9f
0x00000200000871d6 : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 0x20 ; pop rdi ; ret
0x00000200001a7c71 : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov al, r10b ; ret
0x00000200001fbec2 : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov al, r8b ; ret
0x0000020000122de3 : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r11d ; ret
0x000002000002c1e8 : add dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; ret
0x000002000001f6b1 : add dword ptr [rax - 0x75], ecx ; ret
0x00000200001a56dd : add dword ptr [rax - 0x75], ecx ; ret 0x2b49
0x00000200000ec1e6 : add dword ptr [rax - 0x75], ecx ; ret 0x4808
0x00000200001f77ed : add dword ptr [rax - 0x75], ecx ; ret 0x49f0
0x000002000039a1eb : add dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x00000200000aa57d : add dword ptr [rax - 0x75], ecx ; ret 0x8b49
0x000002000058042c : add dword ptr [rax - 0x75], ecx ; ret 0x950f
0x00000200002240f3 : add dword ptr [rax - 0x75], ecx ; ret 0xc148
0x00000200003ee188 : add dword ptr [rax - 0x75], ecx ; ret 0xf748
0x0000020000462a88 : add dword ptr [rax - 0x75], ecx ; sbb al, 0x24 ; add rsp, 8 ; ret
0x0000020000060c41 : add dword ptr [rax - 0x77], ecx ; add eax, 0x299c9f ; ret
0x000002000062869d : add dword ptr [rax - 0x77], ecx ; add esi, esi ; ret
0x000002000063c21e : add dword ptr [rax - 0x77], ecx ; and byte ptr [r14 - 1], spl ; ret 0xb70f
0x000002000040da87 : add dword ptr [rax - 0x77], ecx ; insb byte ptr [rdi], dx ; and al, 0x20 ; mov rcx, rsi ; call rdi
0x000002000062d352 : add dword ptr [rax - 0x77], ecx ; jl 0x2000062d382 ; sub byte ptr [rbx], dh ; ret 0x6c89
0x000002000000f581 : add dword ptr [rax - 0x77], ecx ; or bl, bpl ; ret
0x00000200001b40f8 : add dword ptr [rax - 0x77], ecx ; or eax, 0x144338 ; ret
0x0000020000031b40 : add dword ptr [rax - 0x77], ecx ; or r14b, sil ; ret 0x7401
0x0000020000050395 : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 1], cl ; ret
0x00000200006b2689 : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + rcx + 0x49], 0x3b ; ret 0x874
0x00000200000df225 : add dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + rdx + 0x48], 0x3b ; ret
0x000002000002d535 : add dword ptr [rax - 0x7d], ecx ; loopne 0x2000002d53b ; ret
0x0000020000545ff0 : add dword ptr [rax - 0x7d], ecx ; loopne 0x20000545ffb ; add rax, r8 ; ret
0x000002000011fa5e : add dword ptr [rax - 0x7d], ecx ; ret
0x00000200004e19b6 : add dword ptr [rax - 0x7d], ecx ; ret 0x4102
0x00000200003bd1e2 : add dword ptr [rax - 0x7d], ecx ; ret 0x4118
0x0000020000230878 : add dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x000002000004550a : add dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00000200001fa3b7 : add dword ptr [rax - 0x7d], ecx ; ret 0xeb18
0x00000200001cf86d : add dword ptr [rax - 0x7d], ecx ; ror dword ptr [rax], -0x75 ; ret 0x3b49
0x00000200000be473 : add dword ptr [rax - 0x7f], ecx ; jmp qword ptr [rax]
0x0000020000138b51 : add dword ptr [rax - 1], ecx ; ret
0x00000200003cef72 : add dword ptr [rax - 1], ecx ; ret 0x8348
0x000002000002da8e : add dword ptr [rax - 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret
0x0000020000149924 : add dword ptr [rax - 1], ecx ; ror dword ptr [rcx - 1], -0x38 ; jne 0x20000149929 ; ret
0x000002000016035d : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 0x3b], 1 ; ret
0x00000200001ff1e8 : add dword ptr [rax - 9], ecx ; ror byte ptr [rcx + 0x3b], 1 ; ret 0xec74
0x0000020000015376 : add dword ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x000002000013fef7 : add dword ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000000ffcc : add dword ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000487021 : add dword ptr [rax], 0 ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x00000200006c7017 : add dword ptr [rax], 0 ; add byte ptr [rcx - 0x74b3c7b8], cl ; ret
0x000002000064f715 : add dword ptr [rax], 0 ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200000200f0 : add dword ptr [rax], 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x8b44
0x00000200003ad1c2 : add dword ptr [rax], 0x10 ; add byte ptr [rax], al ; call rax
0x00000200001b650a : add dword ptr [rax], 0x2b480000 ; ret 0x8b44
0x000002000048dee3 : add dword ptr [rax], 0x8b440000 ; ret
0x0000020000015356 : add dword ptr [rax], 0x8b480000 ; ret 0x3844
0x00000200005a017c : add dword ptr [rax], 0xebe80000 ; ret 0xffe9
0x00000200001f6313 : add dword ptr [rax], 2 ; ret
0x000002000052e158 : add dword ptr [rax], eax ; adc al, 0 ; call 0x2000014f4c7
0x0000020000654d59 : add dword ptr [rax], eax ; add al, 0 ; je 0x20000654d6a ; mov al, 1 ; ret
0x00000200001ab8b8 : add dword ptr [rax], eax ; add al, al ; add rsp, 0x28 ; ret
0x00000200006aa7f1 : add dword ptr [rax], eax ; add al, al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000123f5a : add dword ptr [rax], eax ; add al, al ; add rsp, 0x38 ; ret
0x0000020000437098 : add dword ptr [rax], eax ; add al, al ; jmp 0x20000437066
0x00000200004381fc : add dword ptr [rax], eax ; add al, al ; jmp 0x200004381ca
0x00000200006db31d : add dword ptr [rax], eax ; add al, al ; jmp 0x200006d752c
0x000002000069de7f : add dword ptr [rax], eax ; add al, al ; mov eax, edx ; jmp 0x2000069de91
0x0000020000021d83 : add dword ptr [rax], eax ; add al, al ; ret
0x0000020000490248 : add dword ptr [rax], eax ; add al, ch ; adc byte ptr [rbx], ch ; ret
0x00000200004903f5 : add dword ptr [rax], eax ; add al, ch ; adc ebp, dword ptr [rsi] ; ret
0x000002000048ff78 : add dword ptr [rax], eax ; add al, ch ; add byte ptr [rdx], dh ; ret
0x00000200006704f3 : add dword ptr [rax], eax ; add al, ch ; and eax, 0x8bffa575 ; ret
0x0000020000014343 : add dword ptr [rax], eax ; add al, ch ; call 0x1ffc3f74360
0x0000020000487fea : add dword ptr [rax], eax ; add al, ch ; cli ; ret
0x00000200004b6cc0 : add dword ptr [rax], eax ; add al, ch ; fsubr dword ptr [rax] ; sar edi, 0x32 ; ret
0x00000200005124d3 : add dword ptr [rax], eax ; add al, ch ; in eax, -0x31 ; ret
0x0000020000503867 : add dword ptr [rax], eax ; add al, ch ; in eax, 0x5f ; ret
0x00000200004cb416 : add dword ptr [rax], eax ; add al, ch ; jb 0x200004cb45d ; ret 0x84ff
0x00000200001d4d19 : add dword ptr [rax], eax ; add al, ch ; jmp qword ptr [rax + rbp*8]
0x000002000048ac35 : add dword ptr [rax], eax ; add al, ch ; jrcxz 0x2000048ac0e ; ret
0x00000200005e18bf : add dword ptr [rax], eax ; add al, ch ; loope 0x200005e18a5 ; ret 0x84ff
0x000002000049cb64 : add dword ptr [rax], eax ; add al, ch ; mov ah, 0xae ; ret 0x4cff
0x0000020000496b68 : add dword ptr [rax], eax ; add al, ch ; mov al, 0x1c ; ret 0x83ff
0x0000020000425c48 : add dword ptr [rax], eax ; add al, ch ; mov al, 0x65 ; ret 0xf7ff
0x000002000052c92e : add dword ptr [rax], eax ; add al, ch ; mov ch, byte ptr [rbx] ; ret 0x4cff
0x00000200004afc96 : add dword ptr [rax], eax ; add al, ch ; mov dl, 0x84 ; ret
0x000002000041015b : add dword ptr [rax], eax ; add al, ch ; mov ebp, 0x8bffcb78 ; ret
0x00000200005e455f : add dword ptr [rax], eax ; add al, ch ; mov ecx, 0x8bffae34 ; ret
0x00000200005df859 : add dword ptr [rax], eax ; add al, ch ; mov edi, 0x8bffae81 ; ret
0x00000200003ba45e : add dword ptr [rax], eax ; add al, ch ; mov edx, 0x8affd0d5 ; ret
0x00000200004ba28a : add dword ptr [rax], eax ; add al, ch ; mov ss, edi ; sar bh, 0x8b ; ret
0x000002000048d4c9 : add dword ptr [rax], eax ; add al, ch ; movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x00000200003eb731 : add dword ptr [rax], eax ; add al, ch ; out -0x3e, eax ; int 0xff
0x0000020000750460 : add dword ptr [rax], eax ; add al, ch ; push rsp ; ret
0x000002000012cd55 : add dword ptr [rax], eax ; add al, ch ; ret
0x0000020000578756 : add dword ptr [rax], eax ; add al, ch ; ret 0xb4f2
0x000002000055f356 : add dword ptr [rax], eax ; add al, ch ; ret 0xb686
0x00000200004cc056 : add dword ptr [rax], eax ; add al, ch ; ret 0xbfb9
0x00000200003a8c12 : add dword ptr [rax], eax ; add al, ch ; ret 0xd887
0x00000200001fee76 : add dword ptr [rax], eax ; add al, ch ; ret 0xf44a
0x000002000017d176 : add dword ptr [rax], eax ; add al, ch ; ret 0xfc67
0x000002000058278a : add dword ptr [rax], eax ; add al, ch ; sahf ; xlatb ; ret
0x0000020000407006 : add dword ptr [rax], eax ; add al, ch ; sbb dl, byte ptr [rdi] ; ret
0x00000200005c1494 : add dword ptr [rax], eax ; add al, ch ; test byte ptr [rdx], al ; ret 0x44ff
0x0000020000487ee8 : add dword ptr [rax], eax ; add al, ch ; xor bl, bh ; ret
0x00000200004880e7 : add dword ptr [rax], eax ; add al, ch ; xor ecx, edi ; ret
0x00000200000f31ae : add dword ptr [rax], eax ; add al, dl ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x000002000013db56 : add dword ptr [rax], eax ; add bh, al ; ret
0x000002000006c1d0 : add dword ptr [rax], eax ; add bh, bh ; ret
0x000002000042d39f : add dword ptr [rax], eax ; add bh, bh ; ret 0x3b41
0x00000200000e4f3a : add dword ptr [rax], eax ; add bh, bh ; ret 0x8148
0x0000020000464b7a : add dword ptr [rax], eax ; add bh, bh ; ret 0x8348
0x0000020000699858 : add dword ptr [rax], eax ; add bh, bh ; ret 0x8349
0x00000200000e2023 : add dword ptr [rax], eax ; add bh, bh ; ret 0x894a
0x00000200003f9142 : add dword ptr [rax], eax ; add bh, bh ; ret 0x9489
0x00000200001f75a7 : add dword ptr [rax], eax ; add bh, bh ; ret 0xebe9
0x00000200003b1cbf : add dword ptr [rax], eax ; add bh, bh ; ret 0xfa83
0x00000200003b44ef : add dword ptr [rax], eax ; add bh, dh ; ret
0x0000020000404a1a : add dword ptr [rax], eax ; add bh, dh ; ret 0
0x00000200004cca48 : add dword ptr [rax], eax ; add bh, dh ; ret 0x6000
0x000002000041acd2 : add dword ptr [rax], eax ; add bh, dh ; ret 0xfff0
0x00000200003bfeef : add dword ptr [rax], eax ; add bh, dh ; ret 0xfffe
0x00000200005fd1a9 : add dword ptr [rax], eax ; add bl, al ; mov eax, 0xc0000100 ; ret
0x0000020000146683 : add dword ptr [rax], eax ; add bl, bh ; ret
0x00000200005ebfc1 : add dword ptr [rax], eax ; add bl, ch ; cmp dword ptr [rax - 0x7d], ecx ; ret 0x4c20
0x00000200001c8067 : add dword ptr [rax], eax ; add bl, ch ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200001a134e : add dword ptr [rax], eax ; add bl, ch ; ret
0x00000200001a582d : add dword ptr [rax], eax ; add bl, ch ; sub ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x0000020000402975 : add dword ptr [rax], eax ; add byte ptr [rax + 0x234987eb], al ; ret 0x3b48
0x00000200000adabd : add dword ptr [rax], eax ; add byte ptr [rax + 0x23], cl ; sal dh, 1 ; ret 0xf01
0x00000200000818bb : add dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000074ad5b : add dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0x894c
0x00000200000556fa : add dword ptr [rax], eax ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x000002000003f504 : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004efd97 : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x470f
0x00000200000f4589 : add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200003a9c67 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000200000ad6a2 : add dword ptr [rax], eax ; add byte ptr [rax + 0xb], cl ; ret 0xb48
0x000002000000548f : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret
0x00000200000060ac : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x0000020000226963 : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x3b49
0x000002000049c4af : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x8142
0x000002000073fb65 : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x8948
0x0000020000081cc2 : add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0xb948
0x00000200003b121e : add dword ptr [rax], eax ; add byte ptr [rax + 5], cl ; or byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x00000200001f7c54 : add dword ptr [rax], eax ; add byte ptr [rax + rax*8 - 0x74b3ba8c], al ; ret
0x0000020000157081 : add dword ptr [rax], eax ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x0000020000636cf9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x2f], cl ; call 0x20067257053
0x0000020000107fd7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc213c7ee
0x00000200000e1175 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200000a5a2d : add dword ptr [rax], eax ; add byte ptr [rax - 0x3f], cl ; jmp 0x1ffc395a24c
0x00000200005fd0b4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x3ffffdfa], bh ; ret
0x0000020000434ff7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x47], cl ; ret
0x0000020000505b2b : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rbp ; ret
0x000002000020eab8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax - 0x7d] ; ret
0x0000020000079787 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0x7501
0x00000200001d4b7b : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0xf01
0x00000200000c1c08 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; and byte ptr [r9 + 0x23], cl ; ret
0x00000200003e7ebd : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; enter -0x1f18, -0x80 ; ret
0x00000200003e5398 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; enter 0xde8, -0x60 ; ret
0x000002000049b2dc : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000bcd19
0x00000200004ec4d2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x694c
0x000002000020eb14 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; or dword ptr [rax - 0x7d], ecx ; ret
0x0000020000058e06 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000011b77b : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x48f0
0x000002000045cc65 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x4cf0
0x0000020000528362 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200000d53a9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x894c
0x000002000007df58 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000631eb : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x00000200001072fc : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xb849
0x000002000010b176 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000004019b : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x000002000042e0f5 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; retf ; call 0x2000005abc1
0x000002000042dc94 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; retf ; call 0x2000005c791
0x00000200003bb5b1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x00000200004970f1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; shr eax, cl ; call 0x1ff8c493321
0x0000020000774d47 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; adc byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x0000020000120dc1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000052c8ef : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; push rax ; push rax ; ret
0x0000020000069ff9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], cl ; ret
0x00000200003f9d00 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret
0x00000200006685e3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7c], al ; div byte ptr [rcx + rbx*2 - 0xa] ; ret
0x0000020000017b90 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003e3eb4 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4102
0x0000020000618a9b : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200004b6437 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4520
0x0000020000022878 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200003d1e70 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x00000200001ab02d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000046d049 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0xfb30
0x00000200001f5fa8 : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0x00000200000396cc : add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8d4d
0x00000200001de613 : add dword ptr [rax], eax ; add byte ptr [rax - 9], cl ; ret
0x000002000004e8f2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000200001532c8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000012a7e : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000007384 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000021bca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000155578 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbp ; ret
0x000002000001fc70 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000130050 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000154d83 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbp ; ret
0x000002000046575a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200003d7f35 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x0000020000557274 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000585476 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000005168a
0x0000020000105901 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20000051bfe
0x0000020000434825 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000005ab17
0x000002000049a1fa : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x200000bc567
0x00000200000d5219 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x200000d1506
0x0000020000512e0c : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20000140487
0x000002000052ce8e : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000014f4c7
0x000002000058c72d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x200001ba3df
0x0000020000608133 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20000231ce7
0x0000020000595211 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x200003b14a6
0x00000200003e0ec6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x200004cd17e
0x000002000051e22b : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r8
0x0000020000595a86 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000020000036cb5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmove eax, r8d ; ret
0x00000200001356f5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmovg eax, ecx ; ret
0x00000200003ae4b5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cmovne eax, edx ; ret
0x0000020000788c64 : add dword ptr [rax], eax ; add byte ptr [rax], al ; cwde ; ret
0x00000200000eef9c : add dword ptr [rax], eax ; add byte ptr [rax], al ; je 0x200000eefad ; mov al, 1 ; ret
0x0000020000161ba8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x2000002ddd9
0x000002000003f7d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x2000003f7a3
0x000002000004d5dc : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x2000004d581
0x00000200000825fb : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x20000082590
0x000002000049a3aa : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x2000049a3d4
0x00000200005887c9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x200005887eb
0x000002000077552f : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x20000775541
0x0000020000230bb1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp r8
0x000002000005d0a6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x2000005d0dd ; ret
0x00000200004a3416 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200004a342a ; call 0x200000d2309
0x00000200004a4e6a : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x200004a4e7e ; call 0x200000d2309
0x00000200006921a5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 1] ; call rdi
0x00000200006929cf : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 2] ; call rdi
0x00000200004dd9a1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 + 3] ; call rdi
0x000002000069143a : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 0xb] ; call rsi
0x0000020000691de9 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 1] ; call rdi
0x0000020000690c75 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 2] ; call rdi
0x00000200004d39d2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 6] ; call rsi
0x0000020000692af1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 7] ; call rdi
0x000002000046896a : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 8] ; call rsi
0x0000020000693858 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 9] ; call r14
0x0000020000690ebb : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r8d, dword ptr [r9 - 9] ; call rdi
0x00000200006b0705 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lock xadd qword ptr [rcx], rax ; ret
0x00000200004f4972 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov al, 1 ; ret
0x00000200001ad35b : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov al, cl ; ret
0x000002000011c507 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov al, r8b ; ret
0x00000200007631b5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000200001eed27 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ecx ; ret
0x000002000009912c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r8d ; ret
0x00000200006b538f : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, r9d ; ret
0x000002000011f7ef : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x00000200004c1419 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004d44e6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r13 ; call r12
0x00000200005288bf : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r13 ; call r15
0x000002000046092c : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r14 ; call r10
0x00000200006909ad : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r14 ; call rdi
0x0000020000692610 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r15 ; call r14
0x00000200004d4908 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r15 ; call rdi
0x00000200006bc208 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, rbx ; call 0x200000684c9
0x00000200004d5176 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, rsi ; call r10
0x00000200004633cf : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, rsi ; call rdi
0x00000200001fc698 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov word ptr [rcx], ax ; xor eax, eax ; ret
0x000002000000f579 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200006a07c4 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x405f
0x00000200003fd260 : add dword ptr [rax], eax ; add byte ptr [rax], al ; test rdx, rdx ; jne 0x200003fd273 ; ret
0x0000020000042491 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xchg qword ptr [rcx], rax ; ret
0x000002000041eb6a : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000013ca39 : add dword ptr [rax], eax ; add byte ptr [rax], bh ; pop rbp ; ret
0x000002000007aaa5 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x2b], al ; ret 0x2b41
0x00000200003b774c : add dword ptr [rax], eax ; add byte ptr [rbp + 0x2b], al ; ror dword ptr [rcx + 0x63], cl ; ret 0x8d48
0x000002000010e42c : add dword ptr [rax], eax ; add byte ptr [rbp + 0x33], al ; rol byte ptr [rbp - 0x75], cl ; ret 0xf45
0x0000020000085a11 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x3b], al ; ret 0x8c0f
0x0000020000021a5f : add dword ptr [rax], eax ; add byte ptr [rbp + 0x3b], cl ; ret
0x000002000002adbb : add dword ptr [rax], eax ; add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x000002000002acce : add dword ptr [rax], eax ; add byte ptr [rbp + 0x48bff43], cl ; ret 0x2b44
0x00000200001d7439 : add dword ptr [rax], eax ; add byte ptr [rbp + 3], cl ; ret 0x341
0x000002000003cd22 : add dword ptr [rax], eax ; add byte ptr [rbp + 5], dh ; shl rax, 0x14 ; ret
0x0000020000565ca1 : add dword ptr [rax], eax ; add byte ptr [rbp + rbx*8 - 0x7b], dh ; ror byte ptr [rdi], 0x88 ; ret 0xe6df
0x000002000050d914 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x25], cl ; ret 0x1ec2
0x0000020000769ebf : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x35], cl ; ja 0x20000769e54 ; ret 0x48ff
0x0000020000505af6 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x45], cl ; ret
0x00000200006386c3 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0xd], cl ; ret
0x000002000002ad6e : add dword ptr [rax], eax ; add byte ptr [rbp - 0x74bb00bd], cl ; ret 0x4404
0x00000200003e897b : add dword ptr [rax], eax ; add byte ptr [rbp - 0x74cf8a40], al ; ret
0x000002000022a840 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret
0x000002000073d485 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], al ; ret 0xc91b
0x0000020000583b08 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x000002000059f021 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x000002000045e1b7 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 0
0x00000200003c2c79 : add dword ptr [rax], eax ; add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret
0x000002000049a47e : add dword ptr [rax], eax ; add byte ptr [rbp - 0x9ae8b37], al ; ret
0x00000200000fbeca : add dword ptr [rax], eax ; add byte ptr [rbx + 0x23e8d1c3], cl ; ret 0x4589
0x000002000051da37 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x2d9fe8d7], cl ; ret 0x8bff
0x000002000005e92d : add dword ptr [rax], eax ; add byte ptr [rbx + 0x3481c40], cl ; ret 0x3b48
0x000002000007bffe : add dword ptr [rax], eax ; add byte ptr [rbx + 0x3bc323c6], cl ; ret
0x00000200005910bd : add dword ptr [rax], eax ; add byte ptr [rbx + 0xf6c2444], cl ; ret
0x0000020000611848 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x55], al ; ret
0x00000200001a7cc6 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x61], cl ; sbb byte ptr [rcx - 0x75], al ; ret 0x8b41
0x00000200001f1c64 : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 5], cl ; ret 0x5073
0x000002000053a42c : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 5], cl ; ret 0xdc94
0x00000200004b2c76 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x6e0f1735], cl ; ret
0x0000020000024e7b : add dword ptr [rax], eax ; add byte ptr [rbx - 0x74b7bf8b], cl ; ret 0xf48
0x00000200000f34b7 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7af0fe17], al ; ret
0x00000200004398a7 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bbe93b9], cl ; ret
0x0000020000136e91 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0ef17], al ; ret
0x00000200004679d6 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0f116], al ; ret
0x00000200004ceae3 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe15], al ; ret 0xf96
0x000002000068808c : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe17], al ; ret
0x00000200005241a0 : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7cb7f7bd], cl ; ret
0x00000200000d52cd : add dword ptr [rax], eax ; add byte ptr [rbx], al ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000084c80 : add dword ptr [rax], eax ; add byte ptr [rbx], al ; ret 0x813b
0x00000200003c4a5d : add dword ptr [rax], eax ; add byte ptr [rbx], al ; ret 0x8b48
0x000002000052bbf4 : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret
0x0000020000642541 : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x7675
0x0000020000589bf0 : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x850f
0x00000200003be29d : add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0xdd74
0x0000020000137199 : add dword ptr [rax], eax ; add byte ptr [rbx], ch ; ret
0x00000200001a8f2c : add dword ptr [rax], eax ; add byte ptr [rbx], ch ; ret 0xc83b
0x00000200001f4570 : add dword ptr [rax], eax ; add byte ptr [rbx], cl ; sal dh, 1 ; ret 0x753f
0x00000200001cdd4b : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; dec dword ptr [rax - 9] ; ret
0x000002000022828a : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; leave ; call r10
0x0000020000221602 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; leave ; call r9
0x000002000066da94 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x000002000049fa9e : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; shr al, cl ; call 0x2006649bcbd
0x00000200000e1bf4 : add dword ptr [rax], eax ; add byte ptr [rbx], dh ; shr al, cl ; ret 0x6d8
0x0000020000128069 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], cl ; ret
0x00000200000b651c : add dword ptr [rax], eax ; add byte ptr [rcx + 0x33], cl ; fimul dword ptr [rax - 9] ; ret
0x00000200000a424e : add dword ptr [rax], eax ; add byte ptr [rcx + 0x33], cl ; ret 0x8949
0x000002000022f1cf : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], al ; ret
0x0000020000733364 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x840f
0x000002000064768d : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x000002000063d4bb : add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x0000020000085699 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x000002000050523c : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5c], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000091f84 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5c], al ; pop rsi ; pop rbp ; ret
0x000002000008af82 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbx ; pop rbp ; ret
0x00000200000c3c5d : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5d], al ; pop rbx ; pop rbp ; ret
0x00000200000ab6d2 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5d], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000757eea : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rbp ; ret
0x00000200004be5e0 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rsi ; ret
0x00000200000621aa : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rbp ; ret
0x0000020000497415 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000008e3eb : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rbp ; ret
0x0000020000041e30 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x0000020000535590 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000012c104 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200001affb3 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200000557b2 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r12 ; ret
0x0000020000081f51 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; ret
0x0000020000451180 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x000002000065fded : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x000002000008db34 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop rbx ; pop rcx ; ret
0x000002000009e449 : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; pop rsi ; pop rbp ; ret
0x0000020000026f7d : add dword ptr [rax], eax ; add byte ptr [rcx + 0x5f], al ; ret
0x00000200006510af : add dword ptr [rax], eax ; add byte ptr [rcx + 0xf], al ; mov bh, 0x46 ; add bh, bh ; ret 0x8b44
0x00000200000c9a1a : add dword ptr [rax], eax ; add byte ptr [rcx + 0xf], al ; mov bh, 0x47 ; add bh, bh ; ret 0x34c
0x00000200000bf03f : add dword ptr [rax], eax ; add byte ptr [rcx + 0xf], al ; mov bh, 4 ; ret
0x00000200005989b6 : add dword ptr [rax], eax ; add byte ptr [rcx + 3], al ; pop rdi ; adc al, 0xe9 ; lodsb al, byte ptr [rsi] ; ret 0xffe8
0x000002000006a39f : add dword ptr [rax], eax ; add byte ptr [rcx + rax], ah ; ret
0x000002000017094c : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 - 0x5c], cl ; ret
0x00000200005db354 : add dword ptr [rax], eax ; add byte ptr [rcx + rdi + 0x25], al ; ret 0xd278
0x0000020000455667 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x330417ff], dh ; ret 0x48ff
0x0000020000063c14 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x39], cl ; ret 0xfe00
0x00000200000958c7 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x0000020000438c87 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x73], al ; adc byte ptr [r11], r15b ; ret
0x00000200007852a8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x74bbd7b9], cl ; ret
0x00000200001f8a0e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x00000200001fa5c5 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; cmp cl, byte ptr [rcx - 0x7d] ; ret 0x8504
0x000002000064ae00 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; push rcx ; add al, 0x8b ; ret 0x8b41
0x0000020000495a15 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; push rsi ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000002000002b470 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x000002000053242e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x1b2
0x0000020000731ad9 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x2be
0x0000020000524220 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x840f
0x0000020000599bed : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x8b44
0x000002000022db0e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xba49
0x00000200007337f8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xbc41
0x000002000022d8ca : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xbe48
0x0000020000731878 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xbf41
0x0000020000450699 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xff25
0x00000200005a7f25 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ror byte ptr [rax - 0x75], 0x8c ; ret 0xb6e0
0x00000200000a91be : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ror dword ptr [rax + 0xf], -0x51 ; ret
0x00000200001148f8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; or byte ptr [r15], r9b ; xchg eax, esp ; ret 0x8844
0x0000020000009fd3 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; or byte ptr [r9 - 0x75], r9b ; ret 0xc148
0x0000020000400572 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; or r8b, r13b ; ret 0xc73c
0x00000200003a0d47 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000006329f : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret 0x348
0x00000200004e09dc : add dword ptr [rax], eax ; add byte ptr [rcx - 0x76], al ; ret
0x000002000006d7f8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x00000200002288de : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000200001e9263 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4104
0x000002000008039c : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000200001ed62e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret 0x4a10
0x00000200004c0fc8 : add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x000002000042d4d8 : add dword ptr [rax], eax ; add byte ptr [rcx - 1], al ; ret
0x00000200003f900d : add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret 0xfff
0x00000200006d31a8 : add dword ptr [rax], eax ; add byte ptr [rcx - 9], cl ; ret 0xfff
0x0000020000069e85 : add dword ptr [rax], eax ; add byte ptr [rcx], al ; je 0x20000069e92 ; ret
0x00000200001ea04e : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x00000200000ec73a : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000022f685 : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200001b01c6 : add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200001dfde2 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000094b3 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x00000200001a9c61 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b49
0x00000200004e3a86 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x4f], cl ; ret
0x0000020000070166 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x00000200004be053 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret 0x348
0x0000020000672054 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x55 ; loopne 0x20000672067 ; ret 0xc13b
0x00000200000d1292 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x85 ; ret
0x00000200000d3ddd : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x8d ; ret
0x0000020000056a21 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 4 ; ret 0x1a8
0x0000020000508b85 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret
0x00000200001291f3 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x8189
0x00000200001c9509 : add dword ptr [rax], eax ; add byte ptr [rdx + 0x3ab9b203], cl ; ret 0x3a75
0x000002000049fca8 : add dword ptr [rax], eax ; add byte ptr [rdx + 0xadee801], dh ; ret 0x8bff
0x00000200003e15b2 : add dword ptr [rax], eax ; add byte ptr [rdx + 0xd8d4801], dh ; ret 0xf15f
0x00000200006c7a07 : add dword ptr [rax], eax ; add byte ptr [rdx + 3], dh ; xor eax, eax ; ret
0x0000020000763e1d : add dword ptr [rax], eax ; add byte ptr [rdx - 0x56], dh ; ret
0x0000020000131a8d : add dword ptr [rax], eax ; add byte ptr [rdx], cl ; setbe al ; ret
0x00000200005ce205 : add dword ptr [rax], eax ; add byte ptr [rsi + 0x2b], ah ; ret 0x38e9
0x000002000005c71c : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ret 0x3f74
0x00000200004cbec2 : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ret 0x5f77
0x00000200003cea7f : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200004cd053 : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x00000200003e278c : add dword ptr [rax], eax ; add byte ptr [rsi + 0x3b], ah ; ror dword ptr [rdi], -0x7b ; ret
0x000002000043e91d : add dword ptr [rax], eax ; add byte ptr [rsi + 0x5b], bl ; pop rbp ; ret
0x00000200004992fa : add dword ptr [rax], eax ; add byte ptr [rsi - 0x7b], ah ; ror byte ptr [rdi], 0x84 ; ret 0
0x0000020000143836 : add dword ptr [rax], eax ; add cl, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x0000020000143736 : add dword ptr [rax], eax ; add cl, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x0000020000143236 : add dword ptr [rax], eax ; add cl, ch ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000020000143136 : add dword ptr [rax], eax ; add cl, ch ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000020000142296 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014225f ; add byte ptr [rax], al ; ret
0x0000020000142396 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014235e ; add byte ptr [rax], al ; ret
0x0000020000142496 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014245d ; add byte ptr [rax], al ; ret
0x0000020000142596 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014255c ; add byte ptr [rax], al ; ret
0x0000020000142696 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014265b ; add byte ptr [rax], al ; ret
0x0000020000142796 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014275a ; add byte ptr [rax], al ; ret
0x0000020000142896 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000142859 ; add byte ptr [rax], al ; ret
0x0000020000142996 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000142958 ; add byte ptr [rax], al ; ret
0x0000020000142a96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000142a57 ; add byte ptr [rax], al ; ret
0x0000020000142b96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000142b56 ; add byte ptr [rax], al ; ret
0x0000020000142c96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000142c55 ; add byte ptr [rax], al ; ret
0x0000020000142d96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000142d54 ; add byte ptr [rax], al ; ret
0x0000020000142e96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000142e53 ; add byte ptr [rax], al ; ret
0x0000020000142f96 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000142f52 ; add byte ptr [rax], al ; ret
0x0000020000143096 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000143051 ; add byte ptr [rax], al ; ret
0x0000020000143196 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000143150 ; add byte ptr [rax], al ; ret
0x0000020000143296 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014324f ; add byte ptr [rax], al ; ret
0x0000020000143396 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014334e ; add byte ptr [rax], al ; ret
0x0000020000143496 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014344d ; add byte ptr [rax], al ; ret
0x0000020000143596 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014354c ; add byte ptr [rax], al ; ret
0x0000020000143696 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014364b ; add byte ptr [rax], al ; ret
0x0000020000143796 : add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014374a ; add byte ptr [rax], al ; ret
0x0000020000143896 : add dword ptr [rax], eax ; add cl, ch ; loop 0x20000143849 ; add byte ptr [rax], al ; ret
0x0000020000199157 : add dword ptr [rax], eax ; add cl, ch ; push rax ; jo 0x2000019915b ; push rsi ; ret
0x00000200000a8eb0 : add dword ptr [rax], eax ; add cl, ch ; ret
0x0000020000040b0c : add dword ptr [rax], eax ; add cl, ch ; ret 0
0x00000200001438b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xa5
0x00000200001437b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xa6
0x00000200001436b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xa7
0x00000200001435b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xa8
0x00000200001434b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xa9
0x00000200001433b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xaa
0x00000200001432b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xab
0x00000200001431b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xac
0x00000200001430b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xad
0x0000020000142fb6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xae
0x0000020000142eb6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xaf
0x0000020000142db6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb0
0x0000020000142cb6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb1
0x0000020000142bb6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb2
0x0000020000142ab6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb3
0x00000200001429b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb4
0x00000200001428b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb5
0x00000200001427b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb6
0x00000200001426b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb7
0x00000200001425b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb8
0x00000200001424b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xb9
0x00000200001423b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xba
0x00000200001422b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xbb
0x00000200001421b6 : add dword ptr [rax], eax ; add cl, ch ; ret 0xbc
0x00000200003b84d2 : add dword ptr [rax], eax ; add cl, ch ; ret 0xfffc
0x00000200004c6e07 : add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x00000200000bf966 : add dword ptr [rax], eax ; add cl, ch ; ret 3
0x0000020000143036 : add dword ptr [rax], eax ; add cl, ch ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x0000020000142f36 : add dword ptr [rax], eax ; add cl, ch ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x0000020000143436 : add dword ptr [rax], eax ; add cl, ch ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x0000020000143336 : add dword ptr [rax], eax ; add cl, ch ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x0000020000005c11 : add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200004a0468 : add dword ptr [rax], eax ; add dh, dh ; ret 0x4002
0x0000020000148df3 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7401
0x0000020000668a1d : add dword ptr [rax], eax ; add dh, dh ; ret 0x7403
0x0000020000189d6f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000020000091f9c : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x00000200000eff31 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x000002000004b221 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf01
0x00000200003f9aba : add dword ptr [rax], eax ; add dh, dh ; ret 0xf02
0x0000020000448185 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf03
0x000002000064ac2b : add dword ptr [rax], eax ; add dh, dh ; ret 0xf10
0x000002000064ac22 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf20
0x000002000008455d : add dword ptr [rax], eax ; add dword ptr [rax], eax ; jne 0x2000008456e ; xor eax, eax ; ret
0x00000200000c2c99 : add dword ptr [rax], eax ; add dword ptr [rax], eax ; ret
0x000002000001cc17 : add dword ptr [rax], eax ; add rax, r8 ; jmp rax
0x000002000001cec6 : add dword ptr [rax], eax ; add rax, rdx ; jmp rax
0x0000020000020be5 : add dword ptr [rax], eax ; add rcx, r15 ; jmp rcx
0x000002000001b99d : add dword ptr [rax], eax ; add rcx, rdx ; jmp rcx
0x000002000011fff4 : add dword ptr [rax], eax ; add rsp, 0x178 ; ret
0x0000020000116cba : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c2534 : add dword ptr [rax], eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000040606 : add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200004ec8c3 : add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000003e2e2 : add dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x0000020000201330 : add dword ptr [rax], eax ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000131f18 : add dword ptr [rax], eax ; add rsp, 0x48 ; ret
0x000002000011ca5a : add dword ptr [rax], eax ; add rsp, 0x58 ; ret
0x00000200001146dc : add dword ptr [rax], eax ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000425571 : add dword ptr [rax], eax ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000122e7a : add dword ptr [rax], eax ; add rsp, 0x88 ; ret
0x00000200001380db : add dword ptr [rax], eax ; and eax, 0x3f ; add rsp, 0x28 ; ret
0x000002000003e18d : add dword ptr [rax], eax ; jae 0x2000003e19e ; add rsp, 0x38 ; ret
0x0000020000535f7d : add dword ptr [rax], eax ; jmp 0x20000535f47
0x00000200006c2cef : add dword ptr [rax], eax ; jmp 0x200006c2ce4
0x00000200000534b5 : add dword ptr [rax], eax ; jne 0x200000534c9 ; xor al, al ; ret
0x000002000008455f : add dword ptr [rax], eax ; jne 0x2000008456c ; xor eax, eax ; ret
0x000002000076d9fb : add dword ptr [rax], eax ; mov al, 1 ; add rsp, 0x38 ; ret
0x000002000075c655 : add dword ptr [rax], eax ; mov al, bl ; add rsp, 0x60 ; pop rbx ; ret
0x000002000076d62d : add dword ptr [rax], eax ; mov byte ptr [rip - 0x4919dc], 6 ; ret
0x000002000002d602 : add dword ptr [rax], eax ; mov dword ptr [rcx], eax ; mov al, 1 ; ret
0x00000200006c662a : add dword ptr [rax], eax ; mov dword ptr [rip + 0x17b12], eax ; ret
0x00000200006c2ed1 : add dword ptr [rax], eax ; mov eax, dword ptr [rip + 0x1b1e7] ; ret
0x000002000076d598 : add dword ptr [rax], eax ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000125c0a : add dword ptr [rax], eax ; mov eax, r8d ; ret
0x0000020000426343 : add dword ptr [rax], eax ; mov qword ptr [rbx], rax ; jmp 0x20000426312
0x00000200001c285f : add dword ptr [rax], eax ; mov rax, rdx ; ret
0x0000020000765854 : add dword ptr [rax], eax ; mov rcx, r15 ; call 0x200000c1b37
0x000002000052d284 : add dword ptr [rax], eax ; mov rcx, rbx ; call 0x2000014f188
0x000002000075cbed : add dword ptr [rax], eax ; mov rcx, rbx ; call 0x20000768ee7
0x00000200000ff2a9 : add dword ptr [rax], eax ; mov rdi, qword ptr [rsp + 0x28] ; pop r14 ; ret
0x00000200000c2c9b : add dword ptr [rax], eax ; ret
0x000002000001d34a : add dword ptr [rax], eax ; ret 1
0x00000200005fd1bb : add dword ptr [rax], eax ; rol bl, 0xb8 ; jb 0x200005fd1cd ; add al, al ; ret
0x0000020000481970 : add dword ptr [rax], eax ; sbb eax, eax ; add rsp, 0x28 ; ret
0x00000200006cb6d0 : add dword ptr [rax], eax ; test al, 2 ; je 0x200006cb6e1 ; xor eax, eax ; ret
0x0000020000072ec4 : add dword ptr [rax], eax ; test eax, eax ; jns 0x20000072e91 ; jmp 0x20000072eac
0x0000020000040381 : add dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001392a2 : add dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200002080bc : add dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200006c27cc : add dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200000660cd : add dword ptr [rax], ecx ; add rsp, 0x28 ; ret
0x000002000051c4bb : add dword ptr [rax], esi ; ret
0x00000200001684ba : add dword ptr [rax], r8d ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x00000200003c2c78 : add dword ptr [rax], r8d ; add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret
0x00000200000660cc : add dword ptr [rax], r9d ; add rsp, 0x28 ; ret
0x000002000046331a : add dword ptr [rbp + 0x10], esi ; lea eax, dword ptr [rcx + 4] ; ret
0x000002000000ac73 : add dword ptr [rbp + 0x15], esi ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001f4f78 : add dword ptr [rbp + 0x1a], esi ; inc dword ptr [rcx + 0x24c] ; ret
0x000002000012880e : add dword ptr [rbp + 0x1c], esi ; mov rcx, rdi ; call 0x20000104afc
0x0000020000153c8e : add dword ptr [rbp + 0x20], 0xb ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000c7354 : add dword ptr [rbp + 0x23], ecx ; ret 0x894c
0x0000020000154756 : add dword ptr [rbp + 0x28], 0xa ; add rsp, 0x20 ; pop rbp ; ret
0x00000200006c02c5 : add dword ptr [rbp + 0x29], esi ; bts dword ptr [r8 + 0x20], 0x18 ; ret
0x00000200000f1d1e : add dword ptr [rbp + 0x32], eax ; ror byte ptr [rax + 0x3b], cl ; ret 0x1073
0x00000200006b5362 : add dword ptr [rbp + 0x33], eax ; leave ; test rax, rax ; jne 0x200006b5375 ; ret
0x000002000060ccd4 : add dword ptr [rbp + 0x33], eax ; ror byte ptr [rax - 0x73], 0xd ; add dword ptr [rdi], ecx ; ret
0x0000020000153356 : add dword ptr [rbp + 0x34], 0xc ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000538c4b : add dword ptr [rbp + 0x39], eax ; push rax ; adc byte ptr [rbp + rcx - 1], dh ; ret 0x8349
0x00000200000524f0 : add dword ptr [rbp + 0x3b7874c0], eax ; ret
0x00000200004b05c1 : add dword ptr [rbp + 0x3b], eax ; ret 0x1b75
0x00000200001b6a7d : add dword ptr [rbp + 0x3b], ecx ; ret
0x00000200004c638b : add dword ptr [rbp + 0x41], esi ; mov qword ptr [r9], r10 ; ret
0x00000200004e8d23 : add dword ptr [rbp + 0x63], eax ; jo 0x200004e8d79 ; ret
0x00000200000ef76e : add dword ptr [rbp + 0x71], esi ; mov eax, 2 ; ret
0x00000200000539eb : add dword ptr [rbp + 0x88504], ecx ; add byte ptr [rax], al ; ret
0x00000200000cad3a : add dword ptr [rbp + 0xb], eax ; ret 0x8944
0x00000200000c2d31 : add dword ptr [rbp + 0xf], esi ; add rsp, 0x28 ; ret
0x000002000058b7d2 : add dword ptr [rbp + 0xfcf8bc9], eax ; xchg eax, ebp ; ret 0x91e8
0x0000020000055b9b : add dword ptr [rbp + 1], esi ; ret
0x00000200001d1c31 : add dword ptr [rbp + 2], esi ; mov al, 1 ; ret
0x0000020000739897 : add dword ptr [rbp + 3], eax ; ret 0x8948
0x000002000012fded : add dword ptr [rbp + 3], ecx ; ret
0x00000200001dc057 : add dword ptr [rbp + 3], ecx ; ret 0x3b4c
0x00000200001b9482 : add dword ptr [rbp + 3], esi ; xor al, al ; ret
0x000002000005584c : add dword ptr [rbp + 3], esi ; xor eax, eax ; ret
0x00000200004632fe : add dword ptr [rbp + 4], esi ; lea eax, dword ptr [rcx + 1] ; ret
0x0000020000463307 : add dword ptr [rbp + 4], esi ; lea eax, dword ptr [rcx + 2] ; ret
0x0000020000059811 : add dword ptr [rbp + 5], esi ; add rsp, 0x28 ; ret
0x00000200000e79ef : add dword ptr [rbp + 5], esi ; add rsp, 0x38 ; ret
0x00000200005afeb4 : add dword ptr [rbp + 5], esi ; call 0x200001dd66a
0x00000200002168fb : add dword ptr [rbp + 5], esi ; movzx eax, word ptr [rcx + 0x28] ; ret
0x0000020000467da0 : add dword ptr [rbp + 6], esi ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x00000200001ab2fe : add dword ptr [rbp + 6], esi ; mov eax, 0xc00000bb ; ret
0x0000020000644cb3 : add dword ptr [rbp + 6], esi ; mov eax, 1 ; ret
0x000002000004a61a : add dword ptr [rbp + 6], esi ; mov rdi, qword ptr [rsp + 8] ; ret
0x000002000049a8c4 : add dword ptr [rbp + 8], esi ; mov rcx, r13 ; call 0x200000c23c9
0x000002000003ffb3 : add dword ptr [rbp + 9], esi ; ret
0x000002000005884c : add dword ptr [rbp + rax + 0x48], esi ; add esp, 0x28 ; ret
0x000002000064049e : add dword ptr [rbp + rax + 0x48], esi ; lea eax, dword ptr [rcx + 0x20] ; ret
0x00000200006404b6 : add dword ptr [rbp + rax + 0x48], esi ; lea eax, dword ptr [rcx + 0x24] ; ret
0x0000020000476412 : add dword ptr [rbp + rax + 0x48], esi ; lea eax, dword ptr [rcx + 0x4c] ; ret
0x00000200006be004 : add dword ptr [rbp + rax + 0xf], esi ; mov edx, 0xf6143868 ; ret
0x000002000014e7b5 : add dword ptr [rbp + rax - 0x18], esi ; ret
0x000002000063f946 : add dword ptr [rbp + rax - 0x18], esi ; ret 0xa052
0x0000020000148df8 : add dword ptr [rbp + rcx - 0x76], esi ; and cl, byte ptr [rcx - 1] ; ret 0xc9ff
0x0000020000131c27 : add dword ptr [rbp + rcx - 0x76], esi ; ret
0x000002000045c6d2 : add dword ptr [rbp + rdi + 0xf], esi ; mov dh, 0x5d ; add esi, esi ; ret
0x00000200001129fd : add dword ptr [rbp - 0x10], esi ; mov eax, dword ptr [rip + 0x26b826] ; ret
0x000002000010fe2c : add dword ptr [rbp - 0x10], esi ; mov rax, rcx ; ret
0x0000020000008602 : add dword ptr [rbp - 0x10], esi ; ret
0x000002000003673c : add dword ptr [rbp - 0x11], esi ; ret
0x000002000017b28b : add dword ptr [rbp - 0x11], esi ; sub r9, 1 ; jne 0x2000017b281 ; ret
0x000002000075c055 : add dword ptr [rbp - 0x12], esi ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200000f17f6 : add dword ptr [rbp - 0x14], esi ; ret
0x00000200007492db : add dword ptr [rbp - 0x16], esi ; mov al, 1 ; add rsp, 0x38 ; ret
0x0000020000007ced : add dword ptr [rbp - 0x16], esi ; ret
0x000002000076b4bb : add dword ptr [rbp - 0x18], esi ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000668516 : add dword ptr [rbp - 0x19], esi ; add rsp, 0x28 ; ret
0x00000200000309e2 : add dword ptr [rbp - 0x19], esi ; ret
0x00000200005cb647 : add dword ptr [rbp - 0x1a], esi ; jmp 0x200005178f9
0x00000200001fbe06 : add dword ptr [rbp - 0x1a], esi ; ret
0x0000020000129adc : add dword ptr [rbp - 0x1b], esi ; mov al, dl ; ret
0x000002000067613c : add dword ptr [rbp - 0x1c], esi ; mov eax, r8d ; ret
0x000002000017b291 : add dword ptr [rbp - 0x1c], esi ; ret
0x00000200001a34f2 : add dword ptr [rbp - 0x1e], esi ; jmp 0x2000012e5a2
0x00000200003f0d2d : add dword ptr [rbp - 0x1e], esi ; ret
0x00000200006ab306 : add dword ptr [rbp - 0x20], esi ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000035acd : add dword ptr [rbp - 0x20], esi ; ret
0x000002000012f9ac : add dword ptr [rbp - 0x21], esi ; ret
0x0000020000131512 : add dword ptr [rbp - 0x22], esi ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000017bd4c : add dword ptr [rbp - 0x27], esi ; add rsp, 0x28 ; ret
0x00000200000f60cd : add dword ptr [rbp - 0x27], esi ; not r9d ; mov eax, r9d ; ret
0x0000020000429d6f : add dword ptr [rbp - 0x29], esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000007e961 : add dword ptr [rbp - 0x29], esi ; ret
0x0000020000009e98 : add dword ptr [rbp - 0x2a], esi ; ret
0x00000200001c4aa1 : add dword ptr [rbp - 0x2e], esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000062e3eb : add dword ptr [rbp - 0x2f], esi ; add rsp, 0x20 ; pop rbx ; ret
0x000002000010d3bb : add dword ptr [rbp - 0x31], esi ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x00000200002157a7 : add dword ptr [rbp - 0x32], esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000105074 : add dword ptr [rbp - 0x32], esi ; ret
0x00000200004eaa3f : add dword ptr [rbp - 0x35], esi ; call 0x20000117682
0x00000200004e0023 : add dword ptr [rbp - 0x37], esi ; ret
0x0000020000121f48 : add dword ptr [rbp - 0x39], esi ; ret
0x00000200006c2737 : add dword ptr [rbp - 0x3dbaf037], eax ; ret
0x00000200006dc3c6 : add dword ptr [rbp - 0x4a], esi ; mov eax, edx ; add rsp, 0x28 ; ret
0x00000200001e43fa : add dword ptr [rbp - 0x50], esi ; mov eax, r8d ; ret
0x000002000040fe98 : add dword ptr [rbp - 0x56], esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000420dc9 : add dword ptr [rbp - 0x5a], esi ; add rsp, 0x20 ; pop rbx ; ret
0x000002000012eb01 : add dword ptr [rbp - 0x63], esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001b2c20 : add dword ptr [rbp - 0x6a], esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004ce878 : add dword ptr [rbp - 0x73], eax ; cld ; call rsi
0x00000200001bebe9 : add dword ptr [rbp - 0x73], ecx ; or byte ptr [rcx - 0x7d], al ; ret 0x75ff
0x000002000013b946 : add dword ptr [rbp - 0x75], eax ; mov r8d, edx ; jmp 0x2000013b972
0x00000200000d30a5 : add dword ptr [rbp - 0x75], eax ; ret
0x000002000022bc78 : add dword ptr [rbp - 0x75], eax ; ret 0x8b48
0x00000200000ba5f0 : add dword ptr [rbp - 0x75], eax ; ror dword ptr [rcx + rdi + 0x34], 1 ; ret 0x8d4c
0x000002000047953e : add dword ptr [rbp - 0x75], ecx ; ret
0x000002000005e4e7 : add dword ptr [rbp - 0x75], ecx ; ret 0xc2eb
0x00000200000f1d36 : add dword ptr [rbp - 0x7b], ecx ; sal byte ptr [rbp + 4], 0x41 ; mov al, dl ; ret
0x000002000040b0c7 : add dword ptr [rbp - 0x7c], eax ; div byte ptr [rdi + rbx - 0x75] ; ret
0x0000020000487b8e : add dword ptr [rbp - 0x7c], esi ; call 0x20000443dc5
0x0000020000422938 : add dword ptr [rbp - 0x8a78640], eax ; fdivr dword ptr [rbx] ; ret
0x00000200000092c4 : add dword ptr [rbp - 0xc], esi ; ret
0x00000200000f11fe : add dword ptr [rbp - 0xd], esi ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001df465 : add dword ptr [rbp - 0xd], esi ; mov rax, r10 ; ret
0x000002000053056a : add dword ptr [rbp - 0xe], esi ; add rsp, 0x30 ; pop rbx ; ret
0x000002000014f36b : add dword ptr [rbp - 0xe], esi ; mov rax, r11 ; ret
0x00000200006c1cb9 : add dword ptr [rbp - 0xe], esi ; ret
0x00000200006bbbe4 : add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x000002000010fd83 : add dword ptr [rbx + 0x23480841], ecx ; ret 0xb49
0x0000020000412065 : add dword ptr [rbx + 0x23d0f7c1], ecx ; ret 0xd2f7
0x00000200000b0122 : add dword ptr [rbx + 0x418b3850], ecx ; and al, 0xf6 ; ret 0x7420
0x000002000073bd30 : add dword ptr [rbx + 0x598], edi ; call r12
0x000002000073bd2f : add dword ptr [rbx + 0x598], r15d ; call r12
0x0000020000166e0b : add dword ptr [rbx + 0x98], 8 ; inc rdx ; jmp 0x20000166dbc
0x000002000020077b : add dword ptr [rbx + 0xb4807e0], eax ; ret
0x00000200002004df : add dword ptr [rbx + 0xb4807e0], eax ; ret 0x8948
0x000002000020365d : add dword ptr [rbx + 0xb4907e0], eax ; ret
0x0000020000204aae : add dword ptr [rbx + 0xb4907e0], eax ; ret 0x8948
0x0000020000033db1 : add dword ptr [rbx + 3], esi ; xor eax, eax ; ret
0x00000200000a9b64 : add dword ptr [rbx + 4], 0 ; add bh, bh ; ret 0x8d4c
0x0000020000216ae9 : add dword ptr [rbx + 6], esi ; mov eax, 0xc00001a2 ; ret
0x000002000006f1b5 : add dword ptr [rbx + 7], esi ; xor al, al ; add rsp, 0x28 ; ret
0x00000200003f29c5 : add dword ptr [rbx + rdi*4 - 0x48], esi ; and al, byte ptr [rax] ; add al, al ; ret
0x00000200000b6eee : add dword ptr [rbx + rdx - 0xa], esi ; ret 0x7542
0x00000200003fd279 : add dword ptr [rbx - 0x158bbf07], eax ; xor al, al ; ret
0x000002000062e8e8 : add dword ptr [rbx - 0x2b08e6eb], ecx ; push rsi ; ret 0x7573
0x0000020000025ff4 : add dword ptr [rbx - 0x3fcc3c3e], ecx ; ret
0x0000020000065dd1 : add dword ptr [rbx - 0x54140038], -1 ; ret 0x35e9
0x00000200001e777f : add dword ptr [rbx - 0x74a7dba4], ecx ; ret
0x000002000000946c : add dword ptr [rbx - 0x832dc3b], ecx ; shl byte ptr [rbx], 1 ; ret
0x00000200004df73b : add dword ptr [rbx], eax ; add byte ptr [rax], al ; je 0x200004df74c ; mov al, 1 ; ret
0x0000020000126905 : add dword ptr [rbx], eax ; mov dword ptr [rcx + 0xc], r8d ; xor eax, eax ; ret
0x00000200003cced1 : add dword ptr [rbx], eax ; ret
0x00000200003a1a7a : add dword ptr [rbx], eax ; ret 0x3b41
0x000002000064ebb1 : add dword ptr [rbx], eax ; ret 0x8948
0x00000200003d44c8 : add dword ptr [rbx], ebp ; ret
0x00000200005cbc8a : add dword ptr [rbx], ebp ; ret 0x775
0x0000020000761d3a : add dword ptr [rbx], ebp ; ret 0x840f
0x0000020000636189 : add dword ptr [rbx], ebp ; ret 0x875
0x0000020000654897 : add dword ptr [rbx], ebp ; ret 0x8b44
0x0000020000450209 : add dword ptr [rbx], ecx ; enter -0x36fd, -0x75 ; ret
0x000002000007ae81 : add dword ptr [rbx], ecx ; ret 0x8941
0x00000200001d7872 : add dword ptr [rbx], ecx ; ret 0xccc3
0x0000020000640bdc : add dword ptr [rbx], ecx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000064bf8 : add dword ptr [rbx], edi ; ret
0x00000200000cc7b1 : add dword ptr [rbx], edi ; ret 0x1175
0x00000200000cc7c2 : add dword ptr [rbx], edi ; ret 0x1274
0x00000200000b3d1a : add dword ptr [rbx], esi ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000729e : add dword ptr [rbx], esi ; fisttp dword ptr [rax - 0x7f] ; jmp qword ptr [rax]
0x00000200004331d4 : add dword ptr [rbx], esi ; fnstenv dword ptr [rbx] ; ret
0x000002000002ce41 : add dword ptr [rbx], esi ; rol byte ptr [rcx - 0x75], cl ; ret
0x0000020000401022 : add dword ptr [rbx], esi ; ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], 0x8a ; ret 0x8ac3
0x00000200001c860b : add dword ptr [rbx], esi ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rbx ; ret
0x000002000005340f : add dword ptr [rbx], esp ; ret 0xc22b
0x0000020000469831 : add dword ptr [rbx], esp ; ret 0xc23b
0x0000020000762d1b : add dword ptr [rcx + 0x18], eax ; add rsp, 0x28 ; ret
0x0000020000762bf7 : add dword ptr [rcx + 0x18], eax ; add rsp, 0x38 ; ret
0x000002000011467a : add dword ptr [rcx + 0x22], eax ; ret 0xf41
0x00000200007751ba : add dword ptr [rcx + 0x23], eax ; ret
0x00000200000a9e24 : add dword ptr [rcx + 0x23], ecx ; ret
0x0000020000008563 : add dword ptr [rcx + 0x2f], 0xc12b4800 ; ret
0x00000200000fc44a : add dword ptr [rcx + 0x33], ecx ; ret 0x8948
0x000002000002b4f8 : add dword ptr [rcx + 0x3b], eax ; ret
0x00000200005d4ddc : add dword ptr [rcx + 0x3b], eax ; ret 0x850f
0x00000200001f510a : add dword ptr [rcx + 0x3b], eax ; ret 0x870f
0x00000200000ff024 : add dword ptr [rcx + 0x3b], eax ; ret 0xe175
0x00000200000fefa7 : add dword ptr [rcx + 0x3b], eax ; ret 0xe775
0x000002000042bf40 : add dword ptr [rcx + 0x3b], ecx ; ret
0x000002000004d20f : add dword ptr [rcx + 0x3b], ecx ; ret 0x6474
0x00000200000c1556 : add dword ptr [rcx + 0x3b], ecx ; ret 0x840f
0x0000020000186e8e : add dword ptr [rcx + 0x3b], ecx ; ret 0x860f
0x0000020000157033 : add dword ptr [rcx + 0x40], ebx ; ret
0x0000020000157032 : add dword ptr [rcx + 0x40], r11d ; ret
0x000002000052c804 : add dword ptr [rcx + 0x58], -1 ; je 0x2000052c811 ; ret
0x000002000039ce92 : add dword ptr [rcx + 0x5c], -1 ; je 0x2000039cea4 ; mov al, r10b ; ret
0x000002000039ce92 : add dword ptr [rcx + 0x5c], -1 ; je 0x2000039cea5 ; mov al, r10b ; ret
0x00000200000790ac : add dword ptr [rcx + 0x70], eax ; ret
0x0000020000499f7b : add dword ptr [rcx + 0x74602474], ecx ; adc al, 0xf6 ; ret
0x000002000042d733 : add dword ptr [rcx + 0xa], edx ; ret
0x00000200005461c6 : add dword ptr [rcx + 0xac], eax ; ret
0x00000200003f4346 : add dword ptr [rcx + 0xf], eax ; mov bh, 0x14 ; or byte ptr [rbx], bh ; ret 0x1c75
0x000002000065283a : add dword ptr [rcx + 0xf], eax ; mov bh, 0x14 ; or dword ptr [rbx], edi ; ret 0x1e74
0x000002000018410e : add dword ptr [rcx + 0xf], eax ; mov dh, 0xd6 ; call rax
0x000002000017eb5a : add dword ptr [rcx + 0xf], eax ; ret
0x0000020000029919 : add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret
0x000002000072fd50 : add dword ptr [rcx + 3], eax ; ret
0x00000200005d4e07 : add dword ptr [rcx + 3], eax ; ret 0x3b41
0x000002000064e393 : add dword ptr [rcx + 3], eax ; ret 0x4589
0x000002000064e443 : add dword ptr [rcx + 3], eax ; ret 0x8948
0x000002000022b1a3 : add dword ptr [rcx + 3], ecx ; ret
0x0000020000400f9c : add dword ptr [rcx + 8], edx ; inc dword ptr [rcx + 0xc] ; ret
0x000002000002caff : add dword ptr [rcx + rax + 0x48060000], -0x7f ; ret
0x0000020000069e88 : add dword ptr [rcx + rax - 0x3d], esi ; mov al, 1 ; ret
0x00000200000f117a : add dword ptr [rcx + rbx*8 - 0x15], esi ; out dx, eax ; xor eax, eax ; ret
0x00000200006aaf81 : add dword ptr [rcx + rcx*4 + 0x4d], ecx ; adc byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000013b865 : add dword ptr [rcx + rcx*4 + 0x55], eax ; ret
0x0000020000607171 : add dword ptr [rcx + rcx*4 + 0x64], eax ; and al, 0x60 ; call 0x20000231ce9
0x00000200001c3d40 : add dword ptr [rcx + rcx*4 + 0xa], ecx ; ret
0x0000020000033bab : add dword ptr [rcx + rcx], eax ; ret
0x00000200004f09a8 : add dword ptr [rcx + rdx*2 - 1], esi ; ret
0x00000200001f628e : add dword ptr [rcx - 0x11], edi ; mov eax, edx ; ret
0x00000200001c1926 : add dword ptr [rcx - 0x13], edi ; or eax, 0xffffffff ; ret
0x00000200000f185b : add dword ptr [rcx - 0x3a], eax ; adc byte ptr [rax], al ; ret
0x00000200000f1e9c : add dword ptr [rcx - 0x3a], eax ; adc byte ptr [rcx], al ; ret
0x000002000063aae9 : add dword ptr [rcx - 0x3b7cb701], 0x58 ; ret
0x00000200005059e5 : add dword ptr [rcx - 0x48], eax ; insd dword ptr [rdi], dx ; pop rdx ; outsb dx, byte ptr [rsi] ; call 0x20000231ce9
0x000002000017f3e7 : add dword ptr [rcx - 0x73], ecx ; loopne 0x2000017f3fe ; ret 0x348
0x00000200006c6f53 : add dword ptr [rcx - 0x74b7c7b9], ecx ; ret
0x000002000065bd1b : add dword ptr [rcx - 0x75], eax ; adc byte ptr [rcx + 0x23], al ; ret
0x00000200006d8bf8 : add dword ptr [rcx - 0x75], eax ; fiadd word ptr [rbp - 0x74868725] ; ret
0x000002000009201a : add dword ptr [rcx - 0x75], eax ; fisttp word ptr [rdi] ; xchg eax, ebp ; ret
0x00000200000066cd : add dword ptr [rcx - 0x75], eax ; ret
0x0000020000545b11 : add dword ptr [rcx - 0x75], eax ; ret 0x41c3
0x000002000005ac51 : add dword ptr [rcx - 0x75], eax ; ret 0xb0c3
0x00000200005c3433 : add dword ptr [rcx - 0x75], eax ; ret 0xd8f7
0x0000020000204f63 : add dword ptr [rcx - 0x75], ecx ; adc byte ptr [rax - 0x75], cl ; ret 0xe283
0x0000020000166e6e : add dword ptr [rcx - 0x75], ecx ; add dword ptr [rdx - 0x77], ecx ; ret
0x000002000006c25c : add dword ptr [rcx - 0x75], ecx ; add edi, edi ; ret
0x00000200000cdce7 : add dword ptr [rcx - 0x75], ecx ; leave ; call 0x20000069fb6
0x000002000049b0aa : add dword ptr [rcx - 0x75], ecx ; leave ; call 0x200000bcd27
0x00000200000aa637 : add dword ptr [rcx - 0x75], ecx ; ret 0x8b49
0x00000200000f71dd : add dword ptr [rcx - 0x75], ecx ; ror byte ptr [rcx + 0xf], 0xaf ; ret
0x00000200001fa6d8 : add dword ptr [rcx - 0x76], eax ; add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x000002000040fe8d : add dword ptr [rcx - 0x77], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4938
0x0000020000467d78 : add dword ptr [rcx - 0x77], eax ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200007627c5 : add dword ptr [rcx - 0x77], ecx ; sbb byte ptr [r9 - 0x75], cl ; ret 0xc148
0x00000200001387c6 : add dword ptr [rcx - 0x78], eax ; add cl, byte ptr [rcx - 1] ; ret 0xff48
0x000002000048f17c : add dword ptr [rcx - 0x79], ecx ; sbb byte ptr [rcx - 0x7f], al ; ret 0x1000
0x000002000048f17b : add dword ptr [rcx - 0x79], r9d ; sbb byte ptr [rcx - 0x7f], al ; ret 0x1000
0x000002000040379f : add dword ptr [rcx - 0x7c], eax ; ret 0x1774
0x000002000062c44b : add dword ptr [rcx - 0x7cb6e7af], ecx ; add ch, byte ptr [rax] ; ret
0x000002000062c38c : add dword ptr [rcx - 0x7cb6efaf], ecx ; add bl, byte ptr [rax] ; ret
0x00000200001f9a38 : add dword ptr [rcx - 0x7cb7fcbd], ecx ; ret
0x000002000013e565 : add dword ptr [rcx - 0x7d], eax ; ret
0x00000200001f6ef0 : add dword ptr [rcx - 0x7d], eax ; ret 0x4402
0x000002000073fc36 : add dword ptr [rcx - 0x7d], eax ; ret 0x48f8
0x000002000023065b : add dword ptr [rcx - 0x7d], eax ; ret 0x49f8
0x00000200001fa6dc : add dword ptr [rcx - 0x7d], ecx ; ret 0x4102
0x00000200006b52e7 : add dword ptr [rcx - 0x7f], -0x3e ; ret
0x0000020000221564 : add dword ptr [rcx - 0x7f], ecx ; ret 0xe8
0x00000200001cf825 : add dword ptr [rcx - 1], ecx ; ret
0x0000020000657779 : add dword ptr [rcx - 1], ecx ; ret 0x209
0x0000020000657865 : add dword ptr [rcx - 1], ecx ; ret 0x3141
0x00000200004cb5b8 : add dword ptr [rcx], -1 ; je 0x200004cb5c3 ; ret
0x00000200001431d5 : add dword ptr [rcx], 0xa2e90000 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000200004511a9 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000b0711 : add dword ptr [rcx], eax ; jmp 0x200000b069d
0x0000020000629e6c : add dword ptr [rcx], eax ; mov eax, 1 ; ret
0x0000020000230b71 : add dword ptr [rcx], eax ; sidt ptr [rdx] ; ret
0x0000020000215690 : add dword ptr [rcx], ebx ; ret
0x00000200000304f8 : add dword ptr [rcx], ecx ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200001100f2 : add dword ptr [rcx], edi ; jne 0x200001100ee ; ret
0x00000200000dc715 : add dword ptr [rcx], edi ; ret
0x000002000021568f : add dword ptr [rcx], r11d ; ret
0x00000200000b0710 : add dword ptr [rcx], r8d ; jmp 0x200000b069e
0x0000020000629e6b : add dword ptr [rcx], r8d ; mov eax, 1 ; ret
0x00000200001a134b : add dword ptr [rdi + 0x1e6], eax ; jmp 0x200001a131d
0x00000200005418d1 : add dword ptr [rdi + 7], esi ; mov dword ptr [rip - 0x2666b2], ecx ; ret
0x00000200001129ed : add dword ptr [rdi + rax - 0x75], esi ; add eax, 0x26b682 ; ret
0x000002000022753f : add dword ptr [rdi + rax*2 - 0xa], esi ; ret
0x000002000001401b : add dword ptr [rdi + rbx + 0x49], esi ; mov eax, eax ; ret
0x00000200003e45ca : add dword ptr [rdi + rcx - 0x18], esi ; scasb al, byte ptr [rdi] ; ret
0x00000200000c64e1 : add dword ptr [rdi + rcx - 0x4a], eax ; ret 0x8b41
0x000002000055c51e : add dword ptr [rdi + rcx - 1], esi ; ret
0x0000020000227209 : add dword ptr [rdi + rdx*2 - 0x7d], esi ; stc ; add dword ptr [rsi + rax*2 - 0xa], esi ; ret
0x00000200000ef7ad : add dword ptr [rdi - 0x15], esi ; xor eax, eax ; ret
0x0000020000212513 : add dword ptr [rdi - 0x50], edi ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011bacb : add dword ptr [rdi - 6], ecx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000042d54 : add dword ptr [rdi], ecx ; adc dword ptr [rcx + 0x10], ecx ; add rsp, 0x28 ; ret
0x00000200001f4c49 : add dword ptr [rdi], ecx ; adc dword ptr [rcx + 0x40], eax ; ret
0x00000200001100f0 : add dword ptr [rdi], ecx ; add dword ptr [rcx], edi ; jne 0x200001100f0 ; ret
0x0000020000230b72 : add dword ptr [rdi], ecx ; add dword ptr [rdx], ecx ; ret
0x000002000043fab9 : add dword ptr [rdi], ecx ; ja 0x2000043fac6 ; mov al, cl ; ret
0x00000200001357c5 : add dword ptr [rdi], ecx ; mov bh, 0xa ; sub eax, ecx ; ret
0x00000200000550cd : add dword ptr [rdi], ecx ; mov cs, word ptr [rdx + 0x2e] ; adc al, byte ptr [rax] ; ret
0x00000200003f298e : add dword ptr [rdi], ecx ; mov edx, 0x397209e0 ; xor eax, eax ; ret
0x00000200004c5033 : add dword ptr [rdi], ecx ; mov edx, 0xe0c7dc25 ; call qword ptr [rsi]
0x00000200000c256b : add dword ptr [rdi], ecx ; mov gs, word ptr [rbx + rax*2 + 9] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000483395 : add dword ptr [rdi], ecx ; ret
0x0000020000113ac3 : add dword ptr [rdi], ecx ; ret 0x7d80
0x00000200005f2ecd : add dword ptr [rdi], ecx ; ret 0xd233
0x000002000014990c : add dword ptr [rdi], ecx ; scasb al, byte ptr [rdi] ; clc ; ret
0x000002000005a6ba : add dword ptr [rdi], ecx ; test al, ah ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x000002000018e93b : add dword ptr [rdi], ecx ; test al, bl ; dec dword ptr [rax - 0x75] ; ret
0x00000200001d4b83 : add dword ptr [rdi], ecx ; test bh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x25
0x00000200000e6417 : add dword ptr [rdi], ecx ; test byte ptr [rax - 0xfff4bb], ch ; ret
0x00000200005045e1 : add dword ptr [rdi], ecx ; test byte ptr [rax], ah ; call 0x1ffc3db45fe
0x00000200004b5967 : add dword ptr [rdi], ecx ; test byte ptr [rax], al ; ret 0x10
0x000002000007cf1d : add dword ptr [rdi], ecx ; test byte ptr [rax], ch ; sub dword ptr [rax], edx ; add bh, bh ; ret
0x0000020000070659 : add dword ptr [rdi], ecx ; test byte ptr [rsi - 0x34], cl ; adc byte ptr [rax], al ; ret
0x0000020000067ca5 : add dword ptr [rdi], ecx ; test byte ptr [rsi], bl ; cmp edx, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000018755c : add dword ptr [rdi], ecx ; test dh, cl ; adc ecx, esi ; inc dword ptr [rbp - 0x75] ; ret
0x000002000010e956 : add dword ptr [rdi], ecx ; test dword ptr [rax - 0x75000000], ecx ; ret 0x6b48
0x000002000040420a : add dword ptr [rdi], ecx ; test dword ptr [rax - 0x9ffffff], esi ; ret
0x000002000018be38 : add dword ptr [rdi], ecx ; test dword ptr [rax], ebx ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000003ce97 : add dword ptr [rdi], ecx ; test dword ptr [rax], edi ; mov edx, dword ptr [rdx] ; add dh, dh ; ret
0x000002000040877d : add dword ptr [rdi], ecx ; test dword ptr [rbp - 0xa000000], ebx ; ret 0xf02
0x000002000005b1f3 : add dword ptr [rdi], ecx ; test dword ptr [rbx - 0x9ffee20], ebx ; ret
0x00000200004eb582 : add dword ptr [rdi], ecx ; test dword ptr [rbx], edx ; ret
0x000002000011514e : add dword ptr [rdi], ecx ; test dword ptr [rbx], esi ; ret 5
0x000002000018bef2 : add dword ptr [rdi], ecx ; test dword ptr [rcx - 0x42], ecx ; int1 ; push rsi ; ret
0x00000200005cb5f4 : add dword ptr [rdi], ecx ; test dword ptr [rcx], ebx ; ret
0x000002000001cddf : add dword ptr [rdi], ecx ; test dword ptr [rdi], ebx ; call qword ptr [rbx]
0x000002000009c84c : add dword ptr [rdi], ecx ; test dword ptr [rdx - 0x1000000], eax ; ret
0x00000200000af8da : add dword ptr [rdi], ecx ; test dword ptr [rsi - 0x74b7fff3], esi ; ret 0xc148
0x000002000001cd90 : add dword ptr [rdi], ecx ; test dword ptr [rsi], eax ; call qword ptr [rbx]
0x000002000009811c : add dword ptr [rdi], ecx ; test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000b65ad : add dword ptr [rdi], ecx ; test eax, ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003bd9b7 : add dword ptr [rdi], ecx ; test ebp, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200003e5da6 : add dword ptr [rdi], ecx ; test ebx, ebx ; ret
0x000002000009a045 : add dword ptr [rdi], ecx ; test ebx, esi ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x00000200000ab4d0 : add dword ptr [rdi], ecx ; test edi, esp ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000598f28 : add dword ptr [rdi], ecx ; test edx, ebp ; ret
0x000002000006fc95 : add dword ptr [rdi], ecx ; test edx, ecx ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x0000020000032803 : add dword ptr [rdi], ecx ; test esi, edx ; call qword ptr [rdx]
0x000002000042ddd9 : add dword ptr [rdi], ecx ; test esp, eax ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000005c0d : add dword ptr [rdi], ecx ; test esp, ebp ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200000f175e : add dword ptr [rdi], ecx ; test esp, ebp ; mov ah, 0xa ; add bh, bh ; ret 0xff49
0x000002000010099e : add dword ptr [rdi], ecx ; test esp, ebp ; mov bl, 6 ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x0000020000048d37 : add dword ptr [rdi], ecx ; test esp, edx ; ret
0x00000200000922c1 : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret
0x000002000018624c : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xf640
0x00000200000ecf97 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000200006bc199 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x12e8
0x00000200005978c4 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x1389
0x0000020000584d4c : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd202
0x000002000067155b : add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xf41
0x000002000055881f : add dword ptr [rdi], ecx ; xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x00000200003eea68 : add dword ptr [rdi], ecx ; xchg ebx, ecx ; jb 0x200003eea8f ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000210006 : add dword ptr [rdx + 0x14], edx ; xor eax, eax ; ret
0x0000020000763082 : add dword ptr [rdx + 0x18], eax ; add rsp, 0x28 ; ret
0x00000200003fe6a3 : add dword ptr [rdx + 0x18], eax ; ret
0x00000200004e8537 : add dword ptr [rdx + 0x22c18a03], esi ; ret 0xc23a
0x00000200001c122d : add dword ptr [rdx + 0xad90], ecx ; add dh, dh ; ret 0x7402
0x000002000065d39b : add dword ptr [rdx + 0xf], eax ; mov bh, 0x14 ; adc dword ptr [rbx], ebp ; ret 0x875
0x0000020000636184 : add dword ptr [rdx + 0xf], eax ; mov bh, 0x14 ; add dword ptr [rbx], ebp ; ret 0x875
0x00000200005cbc85 : add dword ptr [rdx + 0xf], eax ; mov dh, 0x14 ; add dword ptr [rbx], ebp ; ret 0x775
0x000002000021af96 : add dword ptr [rdx + 3], esi ; xor al, al ; ret
0x00000200000fe667 : add dword ptr [rdx + 8], -8 ; ret
0x00000200003f5481 : add dword ptr [rdx + rax + 0xf410000], -0x49 ; ret
0x00000200004f47b9 : add dword ptr [rdx + rax*2 - 0x7d], esi ; call 0x1ffc3d456cb
0x00000200004eb314 : add dword ptr [rdx + rcx*8 + 0x10], eax ; mov qword ptr [r10 + 8], rdx ; ret
0x00000200000b29e7 : add dword ptr [rdx + rdi - 0x3f], eax ; jne 0x200000b29f4 ; ret
0x00000200000196c7 : add dword ptr [rdx + rdx*8 - 0x49f0eb8c], eax ; ret 0x2b41
0x0000020000130b58 : add dword ptr [rdx - 0x3b7cb73d], ecx ; push rax ; pop rbx ; ret
0x0000020000037297 : add dword ptr [rdx - 0x3fcd3c3f], ecx ; ret
0x00000200000ad11b : add dword ptr [rdx - 0x77], ecx ; push rsp ; ret
0x0000020000166e71 : add dword ptr [rdx - 0x77], ecx ; ret
0x0000020000021196 : add dword ptr [rdx], 0 ; add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x000002000062c391 : add dword ptr [rdx], 0x18 ; ret
0x000002000062c450 : add dword ptr [rdx], 0x28 ; ret
0x000002000046d363 : add dword ptr [rdx], 0x83480000 ; ret
0x0000020000137c76 : add dword ptr [rdx], 2 ; add rsp, 0x38 ; ret
0x000002000012f313 : add dword ptr [rdx], eax ; add dh, dh ; ret
0x0000020000044241 : add dword ptr [rdx], eax ; ret
0x00000200007427a6 : add dword ptr [rdx], ebp ; ret
0x000002000049987b : add dword ptr [rdx], ebp ; ret 0x48ff
0x00000200004e6968 : add dword ptr [rdx], ecx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001fa864 : add dword ptr [rdx], ecx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000230b74 : add dword ptr [rdx], ecx ; ret
0x000002000043fcac : add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x0000020000022f80 : add dword ptr [rdx], edi ; ret
0x00000200005c1dee : add dword ptr [rdx], esi ; fdiv st(6) ; ret
0x00000200004397c4 : add dword ptr [rdx], esi ; ret 0x8188
0x000002000015b788 : add dword ptr [rdx], esp ; ret 0x450f
0x00000200001c1263 : add dword ptr [rip + 0x141bcf], eax ; ret
0x000002000039ba76 : add dword ptr [rip + 0x19058b00], edx ; ret 0xfff7
0x00000200006a2323 : add dword ptr [rsi + 0x31], edx ; or eax, 0x30dbde31 ; ret 0xc556
0x000002000012b52f : add dword ptr [rsi + 0x39], esp ; add sil, byte ptr [r10 + 3] ; mov al, 1 ; ret
0x000002000068aa9a : add dword ptr [rsi + 0x3b], esp ; ret 0x3f74
0x000002000002730f : add dword ptr [rsi + 0x3b], esp ; ret 0x840f
0x00000200004eec97 : add dword ptr [rsi + 0x58affea], ebp ; pop rdi ; ret
0x00000200000e797d : add dword ptr [rsi + 1], edi ; ret
0x00000200004ecd61 : add dword ptr [rsi + 4], esi ; xor ecx, ecx ; call rax
0x0000020000032480 : add dword ptr [rsi + rax + 0x48], esi ; add esp, 0x20 ; pop rbx ; ret
0x0000020000640662 : add dword ptr [rsi + rax - 0x48], esi ; add byte ptr [rax], al ; add al, 0 ; ret
0x00000200001cf7f0 : add dword ptr [rsi + rax - 0x75], esi ; ret 0x149
0x00000200001cb59f : add dword ptr [rsi + rax - 0x75], esi ; ret 0xe8d1
0x00000200003ef46a : add dword ptr [rsi + rax - 1], esi ; ret
0x000002000022720e : add dword ptr [rsi + rax*2 - 0xa], esi ; ret
0x00000200004ba66d : add dword ptr [rsi - 0x7d], esp ; ret 0x6604
0x00000200000c36ec : add dword ptr [rsi - 0x7d], esp ; rol byte ptr [rdx], 0x66 ; mov dword ptr [rcx + 2], eax ; ret
0x000002000049e928 : add dword ptr [rsi - 1], esp ; ret 0x8949
0x0000020000425472 : add dword ptr [rsi - 1], esp ; ret 0x8d48
0x0000020000031b47 : add dword ptr [rsp + rax + 0x48], esi ; and dword ptr [rcx], eax ; ret
0x00000200001ab561 : add dword ptr [rsp + rbx - 1], esi ; ret
0x00000200001142b4 : add dword ptr [rsp + rdi - 0x7b], esi ; sar byte ptr [rcx + 5], 0x45 ; mov eax, edx ; jmp 0x2000011428e
0x000002000003dc1d : add dword ptr [rsp + rdx*4 - 0x75], esi ; ret
0x0000020000186819 : add dword ptr [rsp - 0xa], esi ; ret
0x000002000009f73a : add dword ptr [rsp - 0xa], esi ; ret 0x7420
0x000002000004019a : add dword ptr cs:[rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x0000020000024e7a : add dword ptr cs:[rax], eax ; add byte ptr [rbx - 0x74b7bf8b], cl ; ret 0xf48
0x00000200000f34b6 : add dword ptr cs:[rax], eax ; add byte ptr [rbx - 0x7af0fe17], al ; ret
0x000002000022db0d : add dword ptr cs:[rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xba49
0x000002000016683c : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x000002000073571b : add dword ptr es:[rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x2be
0x00000200000e1174 : add dword ptr fs:[rax], eax ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000040b0b : add dword ptr fs:[rax], eax ; add cl, ch ; ret 0
0x000002000006c268 : add dword ptr gs:[rax], eax ; add bh, bh ; ret
0x000002000049cd8a : add dx, cx ; movzx eax, dx ; ret
0x00000200004641d3 : add dx, r8w ; movzx r8d, dx ; jmp 0x20000464184
0x0000020000473ab1 : add eax, -0x10 ; ret
0x00000200000441ca : add eax, -0x20 ; ret
0x0000020000222c53 : add eax, -1 ; jmp 0x20000222c44
0x00000200001202a9 : add eax, -1 ; jne 0x200001202a4 ; ret
0x000002000012356f : add eax, -1 ; jne 0x20000123550 ; ret
0x000002000013e0c1 : add eax, -1 ; jne 0x2000013e0b7 ; mov rax, rdx ; jmp 0x2000013e0d4
0x000002000013ee7d : add eax, -1 ; jne 0x2000013ee73 ; mov rax, rdx ; jmp 0x2000013ee90
0x000002000013f193 : add eax, -1 ; jne 0x2000013f189 ; mov rax, rdx ; jmp 0x2000013f1a6
0x000002000013f577 : add eax, -1 ; jne 0x2000013f56d ; mov rax, rdx ; jmp 0x2000013f58a
0x0000020000221cee : add eax, -1 ; jne 0x20000221ce4 ; mov rax, rdx ; jmp 0x20000221d01
0x0000020000222741 : add eax, -1 ; jne 0x20000222737 ; mov rax, rdx ; jmp 0x20000222754
0x000002000022298a : add eax, -1 ; jne 0x20000222980 ; mov rax, rdx ; jmp 0x2000022299d
0x0000020000222d96 : add eax, -1 ; jne 0x20000222d8c ; mov rax, rdx ; jmp 0x20000222da9
0x00000200002230cc : add eax, -1 ; jne 0x200002230c2 ; mov rax, rdx ; jmp 0x200002230df
0x0000020000223361 : add eax, -1 ; jne 0x20000223357 ; mov rax, rdx ; jmp 0x20000223374
0x0000020000223489 : add eax, -1 ; jne 0x2000022347f ; mov rax, rdx ; jmp 0x2000022349c
0x00000200002242fe : add eax, -1 ; jne 0x200002242f4 ; mov rax, rdx ; jmp 0x20000224311
0x0000020000225791 : add eax, -1 ; jne 0x2000022578a ; mov rax, rdx ; jmp 0x200002257a4
0x0000020000225a5a : add eax, -1 ; jne 0x20000225a53 ; mov rax, rdx ; jmp 0x20000225a76
0x0000020000226031 : add eax, -1 ; jne 0x20000226027 ; mov rax, rdx ; jmp 0x20000226044
0x0000020000226beb : add eax, -1 ; jne 0x20000226be1 ; mov rax, rdx ; jmp 0x20000226bfe
0x0000020000226f07 : add eax, -1 ; jne 0x20000226efd ; mov rax, rdx ; jmp 0x20000226f1a
0x0000020000229df8 : add eax, -1 ; jne 0x20000229dee ; mov rax, rdx ; jmp 0x20000229e0b
0x000002000022a7e0 : add eax, -1 ; jne 0x2000022a7d7 ; mov rax, rdx ; jmp 0x2000022a7f3
0x000002000022b22d : add eax, -1 ; jne 0x2000022b226 ; mov rax, rdx ; jmp 0x2000022b240
0x000002000022c15d : add eax, -1 ; jne 0x2000022c153 ; mov rax, rdx ; jmp 0x2000022c170
0x00000200006ab759 : add eax, -1 ; jne 0x200006ab755 ; ret
0x000002000073133f : add eax, -1 ; jne 0x20000731334 ; mov rax, rdx ; jmp 0x20000731352
0x0000020000732982 : add eax, -1 ; jne 0x20000732978 ; mov rax, rdx ; jmp 0x20000732995
0x000002000073a78f : add eax, -1 ; jne 0x2000073a785 ; mov rax, rdx ; jmp 0x2000073a7a2
0x000002000073b99d : add eax, -1 ; jne 0x2000073b996 ; mov rax, rdx ; jmp 0x2000073b9b0
0x000002000048e29d : add eax, -4 ; add rsp, 0x28 ; ret
0x00000200000c1a5f : add eax, -8 ; mov dword ptr [rdx + r8*4], r9d ; ret
0x00000200000c1a3e : add eax, -8 ; mov eax, dword ptr [rdx + r8*4] ; ret
0x00000200006c8ff1 : add eax, -8 ; ret
0x00000200001c4cf2 : add eax, 0 ; add byte ptr [rax], al ; jmp 0x200001c4ce1
0x000002000020c264 : add eax, 0x10 ; add rsp, 0x28 ; ret
0x00000200001f8b20 : add eax, 0x10 ; jmp 0x200001f8b48
0x00000200001f92dc : add eax, 0x10 ; jmp 0x200001f9304
0x000002000046dfbb : add eax, 0x10 ; ret
0x00000200001c9f7f : add eax, 0x104ecc ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200001c9edc : add eax, 0x104f6f ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200001c9e42 : add eax, 0x105009 ; call qword ptr [rax]
0x00000200001c9dd6 : add eax, 0x105075 ; call qword ptr [rax]
0x00000200001c9d88 : add eax, 0x1050c3 ; mov rbx, rcx ; call qword ptr [rax]
0x00000200001c3d55 : add eax, 0x108d6e ; ret
0x00000200001c3d49 : add eax, 0x108d76 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000046dfb9 : add eax, 0x10c08348 ; ret
0x000002000021b9ed : add eax, 0x1152f6 ; ret
0x00000200001c7e62 : add eax, 0x1174d9 ; ret
0x00000200001afb24 : add eax, 0x12294f ; call rax
0x00000200001af835 : add eax, 0x122c3e ; call rax
0x00000200001af1e0 : add eax, 0x123293 ; call rax
0x00000200001aeca0 : add eax, 0x1237d3 ; call rax
0x00000200001ae92a : add eax, 0x123b49 ; call rax
0x00000200001ae39c : add eax, 0x1240d7 ; call rax
0x00000200001ac09d : add eax, 0x1240f6 ; je 0x200001ac0b0 ; mov eax, ecx ; ret
0x00000200001ae2fe : add eax, 0x124175 ; call rax
0x00000200001ae280 : add eax, 0x1241f3 ; call rax
0x00000200001ae139 : add eax, 0x12433a ; call rax
0x00000200001adfaf : add eax, 0x1244c4 ; call rax
0x00000200001add0a : add eax, 0x124769 ; call rax
0x00000200001adb08 : add eax, 0x12496b ; call rax
0x00000200001ada4a : add eax, 0x124a29 ; call rax
0x00000200001ad94a : add eax, 0x124b29 ; call rax
0x00000200001acf7d : add eax, 0x1254f6 ; call rax
0x00000200001bfc29 : add eax, 0x125f52 ; ret
0x00000200001bfc41 : add eax, 0x125faa ; mov dword ptr [rcx], eax ; ret
0x00000200001bfc31 : add eax, 0x125fb2 ; ret
0x00000200001abfd4 : add eax, 0x12649f ; call rax
0x00000200001ab95b : add eax, 0x126b18 ; call rax
0x00000200001ab3ab : add eax, 0x1270c8 ; call rax
0x00000200001ab177 : add eax, 0x1272fc ; call rax
0x00000200001cb946 : add eax, 0x12faa9 ; ret 0
0x0000020000033dad : add eax, 0x139c003 ; jae 0x20000033dc0 ; xor eax, eax ; ret
0x000002000019eca4 : add eax, 0x13a2f7 ; call rax
0x000002000019ec7a : add eax, 0x13a321 ; call rax
0x000002000019ebab : add eax, 0x13a3f0 ; call rax
0x00000200000c71d1 : add eax, 0x13e80000 ; ret 0xfff6
0x00000200001f8b16 : add eax, 0x14 ; jmp 0x200001f8b48
0x00000200001f92d2 : add eax, 0x14 ; jmp 0x200001f9304
0x00000200005b79be : add eax, 0x141855 ; ret
0x00000200001c1264 : add eax, 0x141bcf ; ret
0x000002000065a14b : add eax, 0x14408d41 ; ret
0x00000200001b2361 : add eax, 0x1476ba ; ret
0x0000020000074f19 : add eax, 0x148448a ; ret
0x000002000003cd26 : add eax, 0x14e0c148 ; ret
0x00000200001ba320 : add eax, 0x15fd9f ; ret
0x000002000018599e : add eax, 0x160250 ; add ecx, ebp ; ret
0x000002000016d65c : add eax, 0x164e17 ; call rax
0x000002000020e4f5 : add eax, 0x170d62 ; mov dword ptr [r8], eax ; ret
0x00000200003dbb78 : add eax, 0x1719c3 ; jmp 0x200003dbb47
0x00000200004b07a3 : add eax, 0x173e9 ; add byte ptr [rax + 0x63], cl ; ret
0x00000200001b3225 : add eax, 0x17a846 ; add rsp, 0x28 ; ret
0x00000200006c662d : add eax, 0x17b12 ; ret
0x00000200006c6480 : add eax, 0x17cbb ; add rsp, 0x58 ; ret
0x000002000053cf79 : add eax, 0x18 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f8b0c : add eax, 0x18 ; jmp 0x200001f8b48
0x00000200001f92c8 : add eax, 0x18 ; jmp 0x200001f9304
0x00000200001aba5f : add eax, 0x181fe0 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000082c1a : add eax, 0x18418b48 ; ret
0x00000200000ff099 : add eax, 0x186283 ; ret
0x000002000013764e : add eax, 0x18c9bd ; ret
0x0000020000132605 : add eax, 0x19281e ; xor eax, eax ; ret
0x00000200001325ee : add eax, 0x19283d ; xor eax, eax ; ret
0x00000200000200af : add eax, 0x19894466 ; ret
0x000002000013800d : add eax, 0x1997fa ; and dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000138002 : add eax, 0x199805 ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000132513 : add eax, 0x19a770 ; add rsp, 0x28 ; ret
0x0000020000080904 : add eax, 0x19cb6e8 ; add dh, dh ; ret
0x000002000013223a : add eax, 0x1a7e09 ; add rsp, 0x78 ; ret
0x000002000014f65d : add eax, 0x1aa272 ; ret
0x00000200006c2ed4 : add eax, 0x1b1e7 ; ret
0x00000200006c2ec7 : add eax, 0x1b1f4 ; ret
0x000002000014f641 : add eax, 0x1b3692 ; ret
0x000002000014f639 : add eax, 0x1b3696 ; ret
0x00000200006c2cec : add eax, 0x1b5c3 ; jmp 0x200006c2ce7
0x00000200001c7c93 : add eax, 0x1b6548 ; ret
0x00000200001c6202 : add eax, 0x1b7e91 ; ret
0x00000200001c61fb : add eax, 0x1b7e9c ; ret
0x00000200001c61f4 : add eax, 0x1b7ea7 ; ret
0x00000200000311ba : add eax, 0x1b8 ; add bl, al ; xor eax, eax ; ret
0x0000020000110b3a : add eax, 0x1b800 ; add al, al ; ret
0x000002000011c253 : add eax, 0x1b800 ; add byte ptr [rax], al ; ret
0x00000200004cec75 : add eax, 0x1b9 ; add byte ptr [rax - 0x7d], cl ; ret 0xe850
0x00000200005ccd61 : add eax, 0x1ba ; add dh, dh ; ret 0xf01
0x0000020000059ece : add eax, 0x1bb ; add dh, dh ; ret 0xf02
0x00000200006c27c9 : add eax, 0x1bb66 ; xor eax, eax ; ret
0x00000200001c1178 : add eax, 0x1bce97 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000002c0c2 : add eax, 0x1be ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000072b3ff : add eax, 0x1be ; add byte ptr [rbx], ch ; ret
0x00000200001bff25 : add eax, 0x1be122 ; ret
0x00000200001c0d22 : add eax, 0x1be881 ; ret
0x00000200001f8b02 : add eax, 0x1c ; jmp 0x200001f8b48
0x00000200001f92be : add eax, 0x1c ; jmp 0x200001f9304
0x00000200001bef54 : add eax, 0x1c0310 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000010c4d5 : add eax, 0x1c07ae ; ret
0x0000020000132652 : add eax, 0x1c2041 ; ret
0x00000200001b7da1 : add eax, 0x1c7702 ; call rax
0x000002000013252c : add eax, 0x1c8eb7 ; mov qword ptr [rdx], rax ; ret
0x0000020000130dc0 : add eax, 0x1cadbc ; xor eax, eax ; ret
0x00000200001ab819 : add eax, 0x1d3a8a ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200001aba2f : add eax, 0x1d3af0 ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200001aafba : add eax, 0x1d4279 ; ret
0x00000200001a9fd8 : add eax, 0x1d54cb ; call rax
0x00000200001a9f5f : add eax, 0x1d5544 ; call rax
0x00000200001a9e18 : add eax, 0x1d568b ; call r8
0x000002000012a4f4 : add eax, 0x1d8847 ; je 0x2000012a517 ; call rcx
0x000002000012919f : add eax, 0x1d9d18 ; sete al ; ret
0x00000200001a3bfa : add eax, 0x1da4b1 ; jmp 0x2000012fe69
0x0000020000127b46 : add eax, 0x1db189 ; ret
0x000002000019ebd7 : add eax, 0x1df5bc ; call rax
0x00000200005183ba : add eax, 0x1e13e1 ; ret
0x000002000011ff58 : add eax, 0x1e4177 ; xor eax, eax ; ret
0x00000200000eebf3 : add eax, 0x1ea6b1 ; setne al ; ret
0x00000200000eebe7 : add eax, 0x1ea6bc ; setne al ; ret
0x00000200003d522c : add eax, 0x1f5e9 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000017f7d5 : add eax, 0x1ffcce ; call rax
0x00000200003e0b72 : add eax, 0x20 ; ret
0x00000200000f8909 : add eax, 0x20164a ; xor eax, eax ; ret
0x00000200006404a0 : add eax, 0x20418d48 ; ret
0x000002000017390e : add eax, 0x20bb95 ; call rax
0x00000200004e8bc4 : add eax, 0x210fdb ; mov word ptr [rdx], ax ; ret
0x00000200004cb591 : add eax, 0x21e8 ; add bh, bh ; ret
0x0000020000060c90 : add eax, 0x220f4400 ; ret
0x00000200000d95c8 : add eax, 0x2223b7 ; setne al ; ret
0x000002000014f671 : add eax, 0x22ebea ; ret
0x000002000014f5fb : add eax, 0x22fc38 ; ret
0x00000200001316fe : add eax, 0x234c0000 ; ret 0xd08a
0x000002000006a036 : add eax, 0x23c0000 ; je 0x2000006a045 ; ret
0x00000200001400ae : add eax, 0x23e00d ; call rax
0x00000200006404b8 : add eax, 0x24418d48 ; ret
0x00000200000b27eb : add eax, 0x24a490 ; ret
0x0000020000089260 : add eax, 0x250f5f ; call r8
0x0000020000088b63 : add eax, 0x25165c ; call r8
0x000002000012954d : add eax, 0x255cba ; add rsp, 0x28 ; ret
0x00000200001254d0 : add eax, 0x259e57 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001242cf : add eax, 0x25b17c ; sete al ; ret
0x000002000009b456 : add eax, 0x26070d ; mov rax, qword ptr [rax + rcx*8] ; ret
0x000002000011e6ce : add eax, 0x260dd5 ; call rax
0x000002000011e5c7 : add eax, 0x260edc ; call rax
0x000002000011e2b3 : add eax, 0x2611f0 ; call rax
0x000002000011e15f : add eax, 0x261344 ; call rax
0x000002000011e0b8 : add eax, 0x2613eb ; call rax
0x000002000009b462 : add eax, 0x261819 ; ret
0x000002000009a293 : add eax, 0x264128 ; ret
0x00000200001c9b83 : add eax, 0x26acfbe8 ; add bh, bh ; ret
0x00000200001129f1 : add eax, 0x26b682 ; ret
0x0000020000112a01 : add eax, 0x26b826 ; ret
0x00000200006b689c : add eax, 0x27a7b ; add rsp, 0x58 ; ret
0x000002000054203b : add eax, 0x28408b48 ; ret
0x0000020000042d8c : add eax, 0x28418b48 ; ret
0x00000200002168fd : add eax, 0x2841b70f ; ret
0x0000020000053803 : add eax, 0x2841fff0 ; ret
0x00000200000f30db : add eax, 0x28b0b8 ; call rax
0x00000200000f2fe2 : add eax, 0x28b1b1 ; call rax
0x00000200000f2025 : add eax, 0x28c06a ; ret
0x000002000001a311 : add eax, 0x28c48348 ; ret
0x00000200000f0402 : add eax, 0x28dbf9 ; dec eax ; ret
0x00000200000443bd : add eax, 0x28f36e ; mov qword ptr [rdx], rax ; ret
0x00000200000ecf5d : add eax, 0x291386 ; ret
0x00000200000ecf64 : add eax, 0x291387 ; ret
0x0000020000044d22 : add eax, 0x293a79 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000eaf95 : add eax, 0x29450e ; call r8
0x00000200000eae64 : add eax, 0x29463f ; call rax
0x00000200000ead71 : add eax, 0x294732 ; call rax
0x00000200000ea759 : add eax, 0x294d4a ; call rax
0x00000200000ea616 : add eax, 0x294e8d ; call rax
0x00000200000ea5d9 : add eax, 0x294eca ; call rax
0x00000200000ea43e : add eax, 0x295065 ; call rax
0x00000200000ea3f0 : add eax, 0x2950b3 ; call rax
0x00000200000ea2a9 : add eax, 0x2951fa ; call rax
0x0000020000060c44 : add eax, 0x299c9f ; ret
0x000002000005f904 : add eax, 0x29aecf ; add rsp, 0x28 ; ret
0x000002000005eca8 : add eax, 0x29bed2 ; add bl, ch ; ret 0x8948
0x000002000005e4e2 : add eax, 0x29c820 ; add dword ptr [rbp - 0x75], ecx ; ret 0xc2eb
0x000002000005bd23 : add eax, 0x29f4c0 ; ret
0x00000200003feada : add eax, 0x2a0ad1 ; ret
0x000002000072d8bf : add eax, 0x2b08e1c1 ; fadd dword ptr [rcx - 0x75] ; ret 0xe7f7
0x00000200002267d4 : add eax, 0x2b440000 ; ret 0x96ff
0x00000200003aed01 : add eax, 0x2b4cfffd ; ret 0x20e8
0x00000200003aed25 : add eax, 0x2b4cfffd ; ret 0xfce8
0x000002000004571e : add eax, 0x2b6fbd ; shl rax, 0xc ; ret
0x0000020000044d66 : add eax, 0x2b796d ; ret
0x0000020000587b15 : add eax, 0x2b9 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc2ff
0x000002000001f089 : add eax, 0x2b9692 ; ret
0x0000020000042407 : add eax, 0x2bd2c8 ; add rsp, 0x28 ; ret
0x0000020000044ca2 : add eax, 0x2be191 ; ret
0x000002000001fdd9 : add eax, 0x2bf426 ; add rsp, 0x28 ; ret
0x00000200005cf7d0 : add eax, 0x2bffc883 ; ret 0x8b4c
0x00000200006b071b : add eax, 0x2da1c ; ret
0x000002000041ee55 : add eax, 0x2da3c6 ; ret
0x000002000041e531 : add eax, 0x2dab05 ; ret
0x000002000003ff2d : add eax, 0x2de8 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000009c4fd : add eax, 0x2e2d83 ; and dword ptr [rdi], ecx ; test dword ptr [rcx], esi ; ret
0x000002000001585c : add eax, 0x2e5b43 ; mov dword ptr [r9], eax ; ret
0x0000020000631e7c : add eax, 0x2ebda72 ; xor dl, dl ; mov al, dl ; ret
0x0000020000631eb0 : add eax, 0x2ebe072 ; mov dl, 1 ; mov al, dl ; ret
0x000002000000857e : add eax, 0x2f2f55 ; movdqu xmmword ptr [rcx], xmm0 ; ret
0x0000020000008562 : add eax, 0x2f4181 ; sub rax, rcx ; ret
0x00000200000082c2 : add eax, 0x2f44c9 ; ret
0x00000200000064cc : add eax, 0x2f67af ; ret
0x000002000007d6fc : add eax, 0x301da7 ; call rax
0x000002000007c896 : add eax, 0x302c0d ; call rax
0x000002000007c7e8 : add eax, 0x302cbb ; call rax
0x000002000007c737 : add eax, 0x302d6c ; call rax
0x000002000007c688 : add eax, 0x302e1b ; call rax
0x000002000007c590 : add eax, 0x302f13 ; call rax
0x000002000007c542 : add eax, 0x302f61 ; call rax
0x0000020000067f7a : add eax, 0x316091 ; ret
0x000002000005206b : add eax, 0x32d19c ; ret
0x0000020000051693 : add eax, 0x32db74 ; ret
0x00000200000516b0 : add eax, 0x32dbb7 ; ret
0x0000020000049dfa : add eax, 0x33420d ; ret
0x0000020000730900 : add eax, 0x33480000 ; ret 0xd233
0x0000020000044a40 : add eax, 0x33ac43 ; ret
0x0000020000044785 : add eax, 0x33ad1e ; call rax
0x0000020000044728 : add eax, 0x33ad7b ; call rax
0x000002000003d1d4 : add eax, 0x3422cf ; call rax
0x000002000003c132 : add eax, 0x343371 ; call rax
0x000002000003c0b7 : add eax, 0x3433ec ; call rax
0x00000200003cfc91 : add eax, 0x3480000 ; ret 0x3b49
0x0000020000230b92 : add eax, 0x3480000 ; ret 0x8348
0x0000020000035911 : add eax, 0x349b92 ; call rax
0x0000020000035796 : add eax, 0x349d0d ; call rax
0x000002000062303a : add eax, 0x34c0000 ; ret 0x894c
0x0000020000223e81 : add eax, 0x34d0000 ; ret
0x0000020000020a51 : add eax, 0x35e7c6 ; ret
0x0000020000110e00 : add eax, 0x3600 ; ret
0x000002000001cdda : add eax, 0x3624a6 ; add dword ptr [rdi], ecx ; test dword ptr [rdi], ebx ; call qword ptr [rbx]
0x000002000001aee5 : add eax, 0x36321e ; ret
0x000002000021b768 : add eax, 0x38 ; cmp r8, rdx ; jl 0x2000021b758 ; ret
0x0000020000686c26 : add eax, 0x3841ffbd ; or byte ptr [rbx + rdx - 1], dh ; ret 0x8349
0x00000200006be006 : add eax, 0x3868ba0f ; adc al, 0xf6 ; ret
0x0000020000012ddc : add eax, 0x38c48348 ; ret
0x00000200006b6f94 : add eax, 0x3b000000 ; ret 0x850f
0x0000020000636959 : add eax, 0x3b48ffc0 ; ret 0x1875
0x000002000004d26a : add eax, 0x3b490000 ; ret 0xa375
0x000002000061e7e5 : add eax, 0x3b49ffcc ; ret 0x840f
0x000002000022b0a2 : add eax, 0x3b4d0000 ; ret
0x00000200007332d2 : add eax, 0x3b4d0000 ; ret 0xc73
0x00000200000b74f7 : add eax, 0x3b660000 ; ret
0x0000020000560727 : add eax, 0x3bffcd3c ; ret
0x00000200005afda3 : add eax, 0x3de80000 ; ret 0xffc1
0x0000020000146a4b : add eax, 0x40 ; jne 0x20000146a28 ; sfence ; ret
0x00000200000660f2 : add eax, 0x400 ; add rax, rdx ; ret
0x0000020000058607 : add eax, 0x40408b48 ; ret
0x0000020000419267 : add eax, 0x41800000 ; pop rsi ; ret
0x00000200000e7987 : add eax, 0x41c60009 ; xor byte ptr [rcx], al ; ret
0x00000200004790d7 : add eax, 0x43750000 ; ret
0x000002000010eebc : add eax, 0x48 ; ret
0x00000200001be485 : add eax, 0x48000000 ; add esp, 0x20 ; pop rdi ; ret
0x000002000004ec37 : add eax, 0x48000000 ; add esp, 0x28 ; ret
0x00000200003f1873 : add eax, 0x48000000 ; add esp, 0x38 ; ret
0x00000200000e525b : add eax, 0x48000000 ; add esp, 0x48 ; ret
0x000002000043c273 : add eax, 0x48000000 ; add esp, 0x58 ; ret
0x0000020000044657 : add eax, 0x48000a4e ; add esp, 0x28 ; ret
0x000002000001daee : add eax, 0x4801e083 ; add esp, 0x20 ; pop rbx ; ret
0x000002000011e7cc : add eax, 0x48408b48 ; ret
0x00000200004300ed : add eax, 0x489d08b ; and al, 0x8b ; ret 0x8348
0x000002000011701f : add eax, 0x48c03300 ; add esp, 0x28 ; ret
0x000002000063c377 : add eax, 0x48ffaf6e ; add esp, 0x78 ; ret
0x00000200004ea4a7 : add eax, 0x48ffc043 ; add esp, 0x70 ; pop rbx ; ret
0x00000200004f5477 : add eax, 0x48ffc3dd ; add esp, 0x50 ; pop rbx ; ret
0x00000200004dd077 : add eax, 0x48ffc561 ; add esp, 0x70 ; pop rbx ; ret
0x000002000041e477 : add eax, 0x48ffede0 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000476414 : add eax, 0x4c418d48 ; ret
0x00000200006b62dd : add eax, 0x54176 ; ret
0x000002000011add0 : add eax, 0x568a4100 ; and dh, dh ; ret 0xf10
0x000002000011c521 : add eax, 0x58888e ; ret
0x000002000004bc9d : add eax, 0x58c48348 ; ret
0x000002000014f785 : add eax, 0x5b98b6 ; ret
0x0000020000774d72 : add eax, 0x5c6fffd ; cmp dword ptr [rdi - 0x48], ebp ; call qword ptr [rax]
0x00000200005f02cb : add eax, 0x5e410000 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200001f48d2 : add eax, 0x5f410000 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200003b1222 : add eax, 0x608 ; ret
0x00000200000ef877 : add eax, 0x60c74 ; ret
0x00000200000ef8b1 : add eax, 0x6261a ; ret
0x00000200000ef8a9 : add eax, 0x62642 ; ret
0x00000200000ef8b9 : add eax, 0x62652 ; ret
0x00000200000ef8c1 : add eax, 0x6266a ; ret
0x00000200000ef8ce : add eax, 0x6269d ; ret
0x00000200000ef8a1 : add eax, 0x626aa ; ret
0x00000200004ea4d8 : add eax, 0x62883 ; ret
0x00000200004ea4e8 : add eax, 0x628a3 ; ret
0x00000200004ea4d0 : add eax, 0x628eb ; ret
0x00000200004ea4e0 : add eax, 0x6290b ; ret
0x000002000062c162 : add eax, 0x6bc0b70f ; enter 0xf25, -0x49 ; ret
0x00000200000064b6 : add eax, 0x6f2dc5 ; ret
0x00000200000df708 : add eax, 0x73d13b48 ; cmovno edi, edi ; ret 0x8349
0x000002000062c4a4 : add eax, 0x741a394d ; or ecx, dword ptr [rcx - 0x7d] ; ret 0x8310
0x00000200004adc59 : add eax, 0x7422394c ; or ecx, dword ptr [rax - 0x7d] ; ret 0x8310
0x00000200000461d6 : add eax, 0x74db8545 ; sub eax, dword ptr [rcx - 0x75] ; ret
0x00000200000a3b02 : add eax, 0x74de8549 ; sub dh, dh ; ret
0x00000200000c7170 : add eax, 0x74e80000 ; ret 0xfff6
0x00000200005ca790 : add eax, 0x74e9ffd3 ; ret
0x0000020000017270 : add eax, 0x7503ff83 ; adc dh, dh ; ret
0x000002000013b1b7 : add eax, 0x7520f983 ; cmp esi, esi ; ret
0x000002000007e724 : add eax, 0x7540c1f6 ; and esi, esi ; ret 0x7502
0x0000020000186367 : add eax, 0x75c00000 ; or dh, dh ; ret
0x00000200000f1a16 : add eax, 0x75c08545 ; add al, 0x41 ; mov eax, eax ; ret
0x0000020000645e59 : add eax, 0x75c23b66 ; sub byte ptr [rsi + 0x3b], ah ; ret 0x575
0x000002000011c154 : add eax, 0x75c28500 ; or byte ptr [rbx], cl ; ret 0x3345
0x00000200001d87f4 : add eax, 0x78f68445 ; ret
0x00000200005ca785 : add eax, 0x7fe9ffd3 ; ret
0x0000020000069aad : add eax, 0x81480000 ; ret
0x000002000017b7b4 : add eax, 0x82e99000 ; ret
0x0000020000225bb5 : add eax, 0x83038b48 ; ret 0x48f8
0x000002000022ace0 : add eax, 0x83188948 ; ret 0x48f8
0x000002000073c18f : add eax, 0x8318894c ; ret 0x48f8
0x000002000073c39d : add eax, 0x8330894c ; ret 0x48f8
0x0000020000121f42 : add eax, 0x83480000 ; jmp 0x1ffc3d99456
0x000002000002d78e : add eax, 0x83480000 ; ret
0x00000200006c4f69 : add eax, 0x83480673 ; ret
0x000002000010eb3f : add eax, 0x83482e74 ; ret
0x000002000073ab94 : add eax, 0x83490000 ; ret 0x4804
0x00000200004fd52f : add eax, 0x8376e800 ; ret
0x00000200003f8263 : add eax, 0x840b70f ; ret
0x000002000002d325 : add eax, 0x842894c ; ret
0x000002000021018c : add eax, 0x84410000 ; ret
0x000002000067c448 : add eax, 0x8545db33 ; test byte ptr [rdi], 0x95 ; ret
0x00000200003cff3b : add eax, 0x85ffc477 ; ror byte ptr [rdi], 0x88 ; ret
0x00000200004cc548 : add eax, 0x8840baeb ; jae 0x200004cc55d ; jmp 0x200004cc51b
0x00000200001448b0 : add eax, 0x8941d033 ; adc al, byte ptr [rcx - 0x7d] ; ret
0x00000200000dbc40 : add eax, 0x89480000 ; jl 0x200000dbc74 ; xor dh, dh ; ret 0x7502
0x0000020000225f1c : add eax, 0x89480000 ; jne 0x20000225f64 ; jmp 0x200002221da
0x00000200001172fe : add eax, 0x8a01b300 ; ret
0x00000200001e22c0 : add eax, 0x8a455b75 ; ret
0x00000200001c42aa : add eax, 0x8a45ffe9 ; ret 0x8b48
0x00000200001a58a6 : add eax, 0x8b000000 ; iretd ; call 0x20000061bb8
0x000002000073d2f8 : add eax, 0x8b000000 ; ret
0x00000200003d03d7 : add eax, 0x8b0019aa ; ret 0xc12b
0x0000020000645436 : add eax, 0x8b01b641 ; ret
0x000002000005be66 : add eax, 0x8b138b00 ; ret 0xba0f
0x000002000009b8eb : add eax, 0x8b1fe283 ; ret 0x8b4c
0x000002000009b912 : add eax, 0x8b1fe383 ; ret
0x00000200000bf003 : add eax, 0x8b410000 ; ret
0x00000200003cfc85 : add eax, 0x8b410000 ; ret 0x3b4d
0x000002000022bcf6 : add eax, 0x8b410000 ; ret 0x8141
0x000002000072d8a8 : add eax, 0x8b41c82b ; ret 0xe7f7
0x0000020000199f9e : add eax, 0x8b440000 ; ret
0x00000200003e23fc : add eax, 0x8b440000 ; ret 0xb44
0x00000200000b9531 : add eax, 0x8b443c75 ; ret 0x8b49
0x000002000002a552 : add eax, 0x8b480000 ; iretd ; call 0x20000016788
0x000002000002a224 : add eax, 0x8b480000 ; ret
0x000002000022947f : add eax, 0x8b480000 ; ret 0x2eb
0x000002000022533c : add eax, 0x8b480000 ; ret 0x8948
0x00000200002269cf : add eax, 0x8b480000 ; ret 0x8b48
0x000002000073bfba : add eax, 0x8b480000 ; ret 0x8b4c
0x00000200003ccce2 : add eax, 0x8b480000 ; ret 0xa348
0x00000200000a1bdd : add eax, 0x8b480000 ; ret 0xc148
0x0000020000400a2e : add eax, 0x8b48ffe3 ; jl 0x20000400a62 ; js 0x200004009cb ; ret
0x000002000022283e : add eax, 0x8b490000 ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x0000020000222a8c : add eax, 0x8b490000 ; ret
0x00000200000100d4 : add eax, 0x8b490000 ; ret 0x348
0x0000020000229d3b : add eax, 0x8b490000 ; ret 0x894c
0x000002000022defd : add eax, 0x8b490000 ; ret 0x8b44
0x000002000022342c : add eax, 0x8b490000 ; ret 0x8b48
0x000002000022c2f6 : add eax, 0x8b490000 ; ret 0x8b49
0x0000020000225889 : add eax, 0x8b490000 ; ret 0x8f8b
0x000002000008d1db : add eax, 0x8b490000 ; ret 0xf41
0x000002000055cdfd : add eax, 0x8b4c0000 ; ret
0x00000200001c6256 : add eax, 0x8b4c087c ; ret 0xfbe8
0x000002000075c7ef : add eax, 0x8b4d0000 ; add byte ptr [rbp + 0x3b], cl ; ret 0xed75
0x00000200002268c5 : add eax, 0x8b4d0000 ; ret
0x0000020000735af3 : add eax, 0x8b4d0000 ; ret 0x8b45
0x00000200001c6690 : add eax, 0x8b4d0b7c ; ret
0x000002000076ec5f : add eax, 0x8b8 ; ret
0x00000200001bb2df : add eax, 0x8b800000 ; ret
0x000002000011645f : add eax, 0x8bdb3300 ; ret
0x0000020000675f6e : add eax, 0x8bf38a40 ; ret
0x0000020000660b57 : add eax, 0x8bffa613 ; ret
0x00000200005c28b7 : add eax, 0x8bffaffb ; ret
0x000002000061b463 : add eax, 0x8bffba8b ; ret
0x00000200004f2477 : add eax, 0x8bffc4df ; ret
0x00000200000814d9 : add eax, 0x8c48348 ; ret
0x00000200004baa08 : add eax, 0x8d480000 ; add dword ptr [r8 + 0x3b], ecx ; ret 0x5273
0x00000200000be46d : add eax, 0x8d480000 ; pop rdi ; add dword ptr [rax - 0x7f], ecx ; jmp qword ptr [rax]
0x0000020000518559 : add eax, 0x940fd284 ; ret 0x349
0x00000200006bc228 : add eax, 0x95645ee8 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006707ea : add eax, 0x96ce8 ; add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x0000020000661b51 : add eax, 0x9b93ade8 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005cb5ef : add eax, 0xa8ffd2f1 ; add dword ptr [rdi], ecx ; test dword ptr [rcx], ebx ; ret
0x00000200001a541f : add eax, 0xa953c ; mov qword ptr [rcx], rax ; ret
0x00000200001f6426 : add eax, 0xac00 ; ret
0x00000200000ec2d9 : add eax, 0xb00002d ; ret 0x675
0x00000200000697b2 : add eax, 0xb38a4000 ; ret 0
0x000002000065a141 : add eax, 0xb418d41 ; ret
0x0000020000512217 : add eax, 0xb480000 ; ret 0x1bf
0x000002000073dd17 : add eax, 0xb480000 ; ret 0x8d48
0x000002000022bd4d : add eax, 0xb480000 ; ret 0x8d4c
0x000002000021d482 : add eax, 0xb4ff1 ; mov rcx, rdi ; call rax
0x00000200000cd50f : add eax, 0xb5410000 ; add esi, esi ; ret 0xf04
0x000002000021bdb5 : add eax, 0xb5bfe ; jmp 0x2000021bded
0x000002000039b1cb : add eax, 0xb5e8fff4 ; ret
0x00000200000af685 : add eax, 0xb60f0000 ; ret
0x000002000064e43e : add eax, 0xb70f0000 ; add dword ptr [rcx + 3], eax ; ret 0x8948
0x000002000066debb : add eax, 0xb70fc477 ; ret 0xe883
0x00000200001c959a : add eax, 0xb94775b8 ; jmp rax
0x0000020000030cdb : add eax, 0xbc0f4400 ; ret
0x00000200001d9e56 : add eax, 0xbd7e383 ; fdivrp st(6) ; ret
0x00000200000b12ad : add eax, 0xbe0f0000 ; xchg eax, ebx ; ret
0x000002000021347e : add eax, 0xbeff5 ; call rax
0x00000200001f8b2a : add eax, 0xc ; jmp 0x200001f8b48
0x00000200001f92e6 : add eax, 0xc ; jmp 0x200001f9304
0x00000200000d5c8a : add eax, 0xc0 ; mov qword ptr [r8], rax ; ret
0x0000020000044c92 : add eax, 0xc0000017 ; ret
0x000002000016d5c3 : add eax, 0xc01bdaf7 ; add eax, 3 ; ret
0x00000200001ca052 : add eax, 0xc0330000 ; add rsp, 0x38 ; ret
0x000002000076eb2c : add eax, 0xc0330001 ; ret
0x00000200002063f1 : add eax, 0xc033004b ; add rsp, 0x28 ; ret
0x000002000008029c : add eax, 0xc0330476 ; jmp 0x2000008026b
0x00000200000730e5 : add eax, 0xc0330a89 ; ret
0x0000020000069f66 : add eax, 0xc0850000 ; jne 0x20000069f97 ; movzx eax, dl ; ret
0x000002000011fe1c : add eax, 0xc08b4100 ; ret
0x00000200003f184f : add eax, 0xc18ac932 ; ret
0x00000200001fa815 : add eax, 0xc18b0000 ; ret
0x000002000011e80b : add eax, 0xc18b4800 ; ret
0x0000020000426716 : add eax, 0xc2158d48 ; jmp 0x2000042670b
0x00000200000407fb : add eax, 0xc28a01b2 ; ret
0x0000020000114c2b : add eax, 0xc4814800 ; enter 1, 0 ; ret
0x00000200000dc707 : add eax, 0xc4814800 ; test al, 0 ; add byte ptr [rax], al ; ret
0x00000200000df24e : add eax, 0xc4834800 ; js 0x200000df2bc ; pop rbx ; ret
0x00000200006b0611 : add eax, 0xc4834800 ; pop rax ; ret
0x0000020000065a53 : add eax, 0xc4834800 ; pop rbx ; ret
0x0000020000419eb8 : add eax, 0xc4834800 ; ret
0x0000020000117003 : add eax, 0xc4834800 ; xor byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200004f4f9e : add eax, 0xc4b3dce8 ; dec dword ptr [rax - 0x75] ; ret
0x00000200004a76b8 : add eax, 0xcc0 ; ret
0x0000020000054e74 : add eax, 0xcd034800 ; jmp rcx
0x00000200002070e8 : add eax, 0xd1183 ; mov eax, r11d ; ret
0x0000020000115c7f : add eax, 0xd18b4800 ; mov rcx, rdi ; call rbx
0x00000200006005f6 : add eax, 0xdbb ; shr al, 7 ; ret
0x000002000045f5a4 : add eax, 0xdce9 ; add byte ptr [rax + 0x63], cl ; ret
0x00000200000732d1 : add eax, 0xdd14a ; ret
0x0000020000073318 : add eax, 0xdeac3 ; ret
0x0000020000073281 : add eax, 0xdeafa ; ret
0x0000020000073347 : add eax, 0xdeb14 ; ret
0x000002000007328e : add eax, 0xdeb2d ; ret
0x0000020000073262 : add eax, 0xdeb39 ; ret
0x000002000007329e : add eax, 0xdeb5d ; ret
0x0000020000073296 : add eax, 0xdeb75 ; ret
0x00000200000732e6 : add eax, 0xdeba5 ; ret
0x00000200000732fb : add eax, 0xdebb0 ; ret
0x0000020000073279 : add eax, 0xdebb2 ; ret
0x0000020000073303 : add eax, 0xdebc8 ; ret
0x0000020000073332 : add eax, 0xdebf9 ; ret
0x0000020000073310 : add eax, 0xdebfb ; ret
0x000002000007333a : add eax, 0xdec11 ; ret
0x00000200000732c0 : add eax, 0xdec2b ; ret
0x0000020000073325 : add eax, 0xdec46 ; ret
0x0000020000073358 : add eax, 0xdec73 ; ret
0x00000200000732f3 : add eax, 0xdecf8 ; ret
0x0000020000051a49 : add eax, 0xe0428d48 ; ret
0x00000200005a65ec : add eax, 0xe083c233 ; add dh, byte ptr [rbx] ; ret 0x8941
0x000002000066de17 : add eax, 0xe3c1cd77 ; add al, 0x83 ; ret
0x00000200001859ad : add eax, 0xe3e90016 ; ret 0xfff0
0x0000020000515e3b : add eax, 0xe8000000 ; jl 0x20000515ddf ; ret
0x00000200000e4a54 : add eax, 0xe8000000 ; ret
0x0000020000525336 : add eax, 0xe8cb8b48 ; sahf ; ret 0x8bff
0x000002000048224f : add eax, 0xe8ffe784 ; fdivr st(0) ; ret
0x0000020000140255 : add eax, 0xe9000000 ; and bl, ah ; add byte ptr [rax], al ; ret
0x000002000064b0c3 : add eax, 0xe9800000 ; ret 0
0x0000020000598f05 : add eax, 0xe990ffb5 ; xchg eax, edx ; ret
0x00000200001659fb : add eax, 0xe990fff6 ; ret
0x00000200005965d4 : add eax, 0xe9d88b00 ; in eax, dx ; ret 0xfff7
0x000002000068632e : add eax, 0xeb0002c6 ; salc ; xor al, al ; ret
0x00000200005dfc1a : add eax, 0xeb0100c6 ; out dx, eax ; xor al, al ; ret
0x00000200003fbe08 : add eax, 0xeb144789 ; mov edi, esi ; shl dword ptr [rbx], cl ; ret
0x00000200004ed188 : add eax, 0xeb1b8b48 ; salc ; call 0x20000110ae9
0x000002000018a623 : add eax, 0xebc00000 ; and dword ptr [rax - 0x75], ecx ; ret
0x000002000049a39e : add eax, 0xebd08b41 ; sub esi, esi ; ret
0x000002000049aad8 : add eax, 0xebd08b48 ; ret 0x1b0
0x0000020000135f0d : add eax, 0xebffcf83 ; or al, 0x8a ; ret
0x00000200005b2586 : add eax, 0xec7944e9 ; push rdi ; ret
0x00000200005c0b1b : add eax, 0xef2fd1e9 ; push rsi ; ret
0x0000020000181b0e : add eax, 0xefba0f48 ; or dword ptr [rax - 0x75], ecx ; ret
0x0000020000206b97 : add eax, 0xf000d7c ; xchg eax, esp ; ret 0xba0f
0x0000020000473aaf : add eax, 0xf0c08348 ; ret
0x000002000010cdae : add eax, 0xf1f508d ; ret 0xb8c3
0x0000020000131ce7 : add eax, 0xf1f508d ; ret 0xe8c1
0x0000020000752ac8 : add eax, 0xf410a76 ; mov bh, 0xc0 ; ret
0x00000200006ca9cd : add eax, 0xf6000010 ; ret 0x7508
0x00000200004c18a4 : add eax, 0xf6001031 ; ret
0x00000200000a3697 : add eax, 0xf61fe383 ; ret
0x00000200003b4cb0 : add eax, 0xf6bf0000 ; ret
0x00000200000d9ffc : add eax, 0xf6ffffff ; ret 0x7501
0x0000020000619143 : add eax, 0xfc0920f ; mov dh, 0xc0 ; ret
0x000002000003ff44 : add eax, 0xfcdebae8 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004ee04a : add eax, 0xfdd568e8 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000053f44f : add eax, 0xff008b48 ; ret
0x000002000013b041 : add eax, 0xff088341 ; ret
0x0000020000760645 : add eax, 0xff098b48 ; ret
0x00000200005654f9 : add eax, 0xff410000 ; ret
0x000002000076a99a : add eax, 0xff8ff93d ; ret
0x000002000076a9a2 : add eax, 0xff900699 ; ret
0x000002000076a985 : add eax, 0xff901066 ; ret
0x000002000076a97d : add eax, 0xff988536 ; ret
0x000002000076a9b2 : add eax, 0xff9c87e9 ; ret
0x000002000076a9aa : add eax, 0xff9df031 ; ret
0x000002000076a992 : add eax, 0xff9e3b69 ; ret
0x000002000076e622 : add eax, 0xffb64d19 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000768181 : add eax, 0xffb71c38 ; xor dh, byte ptr [rdx] ; ret
0x000002000077df0e : add eax, 0xffb84d11 ; ret
0x0000020000774da2 : add eax, 0xffb86f0d ; adc byte ptr [rcx - 0x75], cl ; ret 0xeae9
0x00000200007475b9 : add eax, 0xffb8d601 ; or byte ptr [rax - 0x39], cl ; ret 0x7400
0x000002000076d3b6 : add eax, 0xffb8e4fd ; ret
0x000002000076d521 : add eax, 0xffb8ec7a ; add rsp, 0x28 ; ret
0x000002000076e68f : add eax, 0xffb94784 ; add rsp, 0x68 ; ret
0x000002000077e59c : add eax, 0xffbffbaf ; enter 0, 0 ; ret
0x00000200006cb3cc : add eax, 0xffc0cb2f ; add rsp, 0x28 ; ret
0x000002000076e9fa : add eax, 0xffc1080b ; and eax, 1 ; ret
0x00000200006b06eb : add eax, 0xffc27b28 ; add rsp, 0x38 ; ret
0x00000200006b04b5 : add eax, 0xffc27f92 ; ret
0x00000200006b26b5 : add eax, 0xffc2c0e6 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000067318a : add eax, 0xffc5c6a9 ; call rax
0x00000200006534bf : add eax, 0xffc7d82c ; ret
0x00000200006534cd : add eax, 0xffc7d836 ; ret
0x00000200006534e9 : add eax, 0xffc7d85a ; ret
0x00000200006534db : add eax, 0xffc7d8a0 ; ret
0x0000020000653505 : add eax, 0xffc7d8a6 ; ret
0x00000200006534f7 : add eax, 0xffc7d8dc ; ret
0x00000200006359c2 : add eax, 0xffca5de9 ; add rsp, 0x28 ; ret
0x0000020000647231 : add eax, 0xffcb3a4a ; ret
0x0000020000630977 : add eax, 0xffcd20c4 ; add rsp, 0x28 ; ret
0x00000200006c05f0 : add eax, 0xffcf8b48 ; sar bh, 1 ; ret
0x00000200005f1ed5 : add eax, 0xffd07f2e ; ret
0x000002000059b5de : add eax, 0xffd341bd ; call rax
0x000002000059b5cc : add eax, 0xffd341d7 ; call rax
0x000002000059b5b4 : add eax, 0xffd341ff ; call rax
0x0000020000596353 : add eax, 0xffd395f0 ; cmp al, 0 ; add byte ptr [rax], al ; ret
0x0000020000598f23 : add eax, 0xffd69cff ; add dword ptr [rdi], ecx ; test edx, ebp ; ret
0x0000020000571f0c : add eax, 0xffd827a0 ; ret
0x000002000051ac8d : add eax, 0xffdba32e ; add rsp, 0x28 ; ret
0x0000020000503d41 : add eax, 0xffdd72c2 ; add eax, dword ptr [rax] ; add byte ptr [rax], dl ; ret
0x00000200004fa782 : add eax, 0xffdd8b19 ; and eax, 1 ; ret
0x00000200005216c4 : add eax, 0xffde1773 ; call 0x2000014f188
0x00000200005121b2 : add eax, 0xffde82a9 ; add rsp, 0x28 ; ret
0x00000200004e9f9f : add eax, 0xffdeff24 ; add rsp, 0x28 ; ret
0x00000200004eafb5 : add eax, 0xffdf0052 ; or byte ptr [r10], dl ; ret
0x0000020000514d6b : add eax, 0xffe04638 ; call 0x20000140388
0x00000200004ef349 : add eax, 0xffe0aebe ; add rsp, 0x28 ; ret
0x00000200004cd488 : add eax, 0xffe2a993 ; ret
0x00000200004c6343 : add eax, 0xffe2fbf8 ; mov rax, r8 ; ret
0x0000020000546245 : add eax, 0xffe39232 ; mov dword ptr [rcx + 0x1c], eax ; ret
0x0000020000454f85 : add eax, 0xffe6f336 ; jmp 0x20000454f2d
0x000002000045a992 : add eax, 0xffe909e9 ; push rdi ; ret
0x000002000041de64 : add eax, 0xffeaed2f ; inc eax ; ret
0x0000020000438a43 : add eax, 0xffec9d70 ; lea rcx, qword ptr [rbp - 0x69] ; call qword ptr [rax]
0x000002000047adf4 : add eax, 0xfff0d6e9 ; push rdi ; ret
0x00000200003e0b6b : add eax, 0xfff172b0 ; ret
0x00000200003b2439 : add eax, 0xfff268ea ; call rax
0x00000200003bafe6 : add eax, 0xfff3fd49 ; add dword ptr [rax - 0x39], ecx ; ret 0x5d00
0x0000020000399ad9 : add eax, 0xfff41d2a ; add rsp, 0x28 ; ret
0x00000200003a3445 : add eax, 0xfff5f9f0 ; ret
0x000002000047a7b7 : add eax, 0xfff713e9 ; dec dword ptr [rax - 9] ; ret
0x00000200003fa4db : add eax, 0xfff84de8 ; call rax
0x00000200003f940c : add eax, 0xfff85eb7 ; call rax
0x00000200003f8bae : add eax, 0xfff86715 ; call rax
0x00000200003f866c : add eax, 0xfff86c57 ; call rax
0x0000020000763fbb : add eax, 0xfff9507c ; add rsp, 0x28 ; ret
0x000002000019c342 : add eax, 0xfffb5cc9 ; ret
0x000002000017d9a1 : add eax, 0xfffd2b4a ; ret
0x000002000017d9b2 : add eax, 0xfffd45e9 ; ret
0x00000200006abe1c : add eax, 0xfffdfae8 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000511c37 : add eax, 2 ; add rsp, 0x28 ; ret
0x00000200001f8b67 : add eax, 2 ; jmp 0x200001f8b8f
0x000002000022d9b9 : add eax, 2 ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022d9db
0x000002000022dbfd : add eax, 2 ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022dc1f
0x00000200000bd3df : add eax, 2 ; lea rax, qword ptr [rcx + rax*4] ; ret
0x00000200001f64ec : add eax, 2 ; mov qword ptr [rcx + 0x28], rax ; mov al, 1 ; ret
0x00000200000c36ee : add eax, 2 ; mov word ptr [rcx + 2], ax ; ret
0x00000200000730ca : add eax, 2 ; mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x00000200003c97ec : add eax, 2 ; ret
0x00000200004befd5 : add eax, 3 ; and eax, 0xfffffffc ; add eax, edx ; ret
0x000002000016d5c8 : add eax, 3 ; ret
0x000002000063451b : add eax, 8 ; add rax, 2 ; ret
0x000002000012858d : add eax, 8 ; cmp r9d, 2 ; jb 0x20000128560 ; jmp 0x2000012853e
0x0000020000092594 : add eax, 8 ; cmp rax, r8 ; jb 0x20000092578 ; ret
0x00000200001f8b34 : add eax, 8 ; jmp 0x200001f8b48
0x00000200001f92f0 : add eax, 8 ; jmp 0x200001f9304
0x000002000063450d : add eax, 8 ; ret
0x0000020000007ce7 : add eax, 8 ; sub r9, 1 ; jne 0x20000007ce3 ; ret
0x000002000012f9a6 : add eax, 8 ; sub rdx, 1 ; jne 0x2000012f997 ; ret
0x0000020000078358 : add eax, dword ptr [eax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000042d88 : add eax, dword ptr [r10] ; je 0x20000042d9b ; mov rax, qword ptr [rcx + 0x28] ; ret
0x0000020000403c3f : add eax, dword ptr [r11 + 0x3b41fce0] ; ret 0x1b75
0x00000200001c979f : add eax, dword ptr [r8 + rax*8 - 0x74b7f187] ; ret 0x2b9
0x000002000008a9c9 : add eax, dword ptr [r9 + 0x32] ; ret
0x0000020000753532 : add eax, dword ptr [rax + 0x440f03f9] ; ret 0x8348
0x00000200001c97a0 : add eax, dword ptr [rax + rax*8 - 0x74b7f187] ; ret 0x2b9
0x00000200004ac5ac : add eax, dword ptr [rax + rax] ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200001c76ed : add eax, dword ptr [rax - 0x3d75ef36] ; ret
0x000002000078047d : add eax, dword ptr [rax - 0x76] ; fild word ptr [rdi + rcx - 0x4a] ; ret
0x00000200001337ce : add eax, dword ptr [rax - 0x77becf3e] ; adc cl, byte ptr [rcx - 1] ; ret 0xc085
0x000002000046db5b : add eax, dword ptr [rax - 0x78] ; xor dword ptr [rax - 0x7d], ecx ; call qword ptr [rax]
0x0000020000042487 : add eax, dword ptr [rax] ; add al, al ; call 0x1ffc305489a
0x0000020000506d42 : add eax, dword ptr [rax] ; add al, al ; ret
0x0000020000438076 : add eax, dword ptr [rax] ; add al, ch ; jle 0x200004380d5 ; ret 0x48ff
0x00000200004c1c03 : add eax, dword ptr [rax] ; add al, ch ; jne 0x200004c1c6b ; ret 0x48ff
0x000002000048fe5f : add eax, dword ptr [rax] ; add al, ch ; jns 0x2000048fe9a ; ret
0x000002000048ff24 : add eax, dword ptr [rax] ; add al, ch ; mov ah, 0x2e ; ret
0x000002000048f64e : add eax, dword ptr [rax] ; add al, ch ; mov dh, byte ptr [rdi] ; ret
0x000002000043c5f9 : add eax, dword ptr [rax] ; add al, ch ; ret
0x0000020000650d6e : add eax, dword ptr [rax] ; add bh, bh ; ret
0x000002000006b4c8 : add eax, dword ptr [rax] ; add bh, bh ; ret 0x5489
0x000002000006ab85 : add eax, dword ptr [rax] ; add bh, bh ; ret 0x9489
0x0000020000038588 : add eax, dword ptr [rax] ; add bl, al ; mov eax, 0x7d0 ; ret
0x000002000042cb94 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x000002000016cdf6 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8b45
0x00000200006cb34d : add eax, dword ptr [rax] ; add byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x00000200000855cb : add eax, dword ptr [rax] ; add byte ptr [rax + 0x31], cl ; adc r14b, sil ; ret
0x00000200000856be : add eax, dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret
0x00000200000a4310 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x000002000072f957 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x0000020000684ae3 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001b4c29 : add eax, dword ptr [rax] ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200000a1dbc : add eax, dword ptr [rax] ; add byte ptr [rax - 0x3f], cl ; call 0x1ffc22d83f7
0x0000020000038b59 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x72000009], al ; outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000200004ad059 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; add al, 0x90 ; ret
0x00000200001f9dcb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [r8 + 3] ; ret
0x00000200005de984 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rbp ; ret
0x00000200004766fb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; fdecstp ; ret 0x7520
0x00000200000c0fa5 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x7d], r9b ; ret
0x0000020000091709 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000058d87 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000416637 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2349
0x000002000073bf6c : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x0000020000503267 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x4bf
0x000002000011a687 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004cc070 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200000ef379
0x00000200004a2526 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; xlatb ; call 0x200000c2d19
0x00000200000be26f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x75], r9b ; ret 0x49f0
0x00000200000467e1 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; div byte ptr [rbx + rbx - 0xa] ; ret
0x00000200003d4027 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000200001f9ddb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp 0x200001f9dfa
0x0000020000017a79 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000019e43c : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4848
0x00000200001249e7 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x000002000007d1ee : add eax, dword ptr [rax] ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200000e83b4 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x9000009], al ; ret
0x00000200001d7b7a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000046cf8d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], 0 ; je 0x2000046cfa0 ; ret
0x000002000056461d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], ah ; add cl, ch ; ret 0xe684
0x0000020000086166 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rbp + 1], dh ; ret
0x000002000074e297 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006719ee : add eax, dword ptr [rax] ; add byte ptr [rax], al ; call rax
0x0000020000105155 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; cmovne eax, ecx ; ret
0x00000200005a5d8f : add eax, dword ptr [rax] ; add byte ptr [rax], al ; int 0x29
0x00000200004766cd : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ja 0x200004766da ; ret
0x0000020000129ce8 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov byte ptr [r9 + 5], r11b ; ret
0x0000020000030a8a : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200006ad478 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret 0
0x0000020000503d46 : add eax, dword ptr [rax] ; add byte ptr [rax], dl ; ret
0x000002000020d3cf : add eax, dword ptr [rax] ; add byte ptr [rbp + 0x3b], al ; ret 0xa75
0x00000200004766c1 : add eax, dword ptr [rax] ; add byte ptr [rbp + 0x470f0250], cl ; ret 0xb983
0x00000200000627bd : add eax, dword ptr [rax] ; add byte ptr [rbp + rcx*4 + 4], cl ; ret
0x00000200000c9914 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000008eb45 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8b44
0x00000200004a76eb : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200003d87d6 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200001dbc93 : add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], cl ; ret 0xdab9
0x000002000006fc42 : add eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x45], al ; sbb dh, dh ; ret
0x00000200001dfc81 : add eax, dword ptr [rax] ; add byte ptr [rbx + rcx*4 + 0x56], cl ; sub byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200003b5929 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x17bfd7b8], al ; stosd dword ptr [rdi], eax ; ret
0x0000020000211862 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x74b3ebad], cl ; ret
0x00000200003e3f5e : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x74beafb2], cl ; ret
0x0000020000613bcf : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x79f0fe08], al ; ret 0
0x000002000042dbc9 : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x7af0fd15], al ; ret
0x00000200002150cb : add eax, dword ptr [rax] ; add byte ptr [rbx], ah ; ret
0x000002000064aced : add eax, dword ptr [rax] ; add byte ptr [rbx], ah ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x8102
0x000002000000935f : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0x470f
0x00000200001fdd5d : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xc77
0x0000020000418d0f : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe775
0x000002000058321d : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe875
0x0000020000476ee3 : add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xea75
0x00000200003fd333 : add eax, dword ptr [rax] ; add byte ptr [rbx], dh ; fucomi st(0) ; ret
0x000002000007e456 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x31], cl ; adc r14b, r14b ; ret
0x00000200000dabfe : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x33], cl ; ret 0x8948
0x000002000045c1a8 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x00000200004f753e : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003dd897 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x0000020000529298 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x73], al ; inc byte ptr [rcx + 0x3b] ; ret 0x2377
0x00000200003b49de : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; push rax ; sub dh, dh ; ret 0xf40
0x000002000005dfdb : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000193d3a : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ror byte ptr [rbp - 0x75], 0x44 ; ret 0x4c40
0x000002000006e9c6 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; or cl, bpl ; ret 0xffef
0x00000200000acbf7 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0x8945
0x000002000042dddd : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200002150d8 : add eax, dword ptr [rax] ; add byte ptr [rcx - 1], al ; ret
0x000002000013b7f9 : add eax, dword ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0x95e9
0x00000200004bcd2f : add eax, dword ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x0000020000600098 : add eax, dword ptr [rax] ; add byte ptr [rdi + 3], bh ; mov al, 1 ; ret
0x00000200000b11a1 : add eax, dword ptr [rax] ; add byte ptr [rdi + rcx - 0x42], al ; stosd dword ptr [rdi], eax ; ret
0x00000200000b49e3 : add eax, dword ptr [rax] ; add byte ptr [rdi + rcx - 0x44], al ; ret 0x8944
0x00000200000a9938 : add eax, dword ptr [rax] ; add byte ptr [rdi + rcx - 0x51], cl ; ret 0x8b49
0x0000020000067004 : add eax, dword ptr [rax] ; add byte ptr [rdi], bh ; ret
0x00000200004bde45 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret
0x00000200000da5b9 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov bh, 0x56 ; and byte ptr [rax - 0x75], cl ; ret
0x00000200000cfc87 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200004c5097 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov edx, 0xe0c77625 ; call qword ptr [rsi]
0x0000020000502117 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; test dword ptr [rsi], edi ; ret 8
0x00000200001d7b37 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8444
0x000002000068409a : add eax, dword ptr [rax] ; add byte ptr [rdx - 0x9afdba4], cl ; ret
0x0000020000050676 : add eax, dword ptr [rax] ; add byte ptr [rdx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000064af38 : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x23], ah ; ror byte ptr [rcx - 0x7d], 1 ; ret 0xb802
0x0000020000465bff : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x00000200000b02ad : add eax, dword ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0xe74
0x000002000015818b : add eax, dword ptr [rax] ; add cl, ch ; ret
0x000002000005ee70 : add eax, dword ptr [rax] ; add dh, dh ; ret
0x0000020000043250 : add eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001fbb5e : add eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000052ad5 : add eax, dword ptr [rax] ; add rsp, 0x30 ; pop rbx ; ret
0x000002000047c7d3 : add eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000004fbc5 : add eax, dword ptr [rax] ; add rsp, 0x48 ; ret
0x000002000041dc8c : add eax, dword ptr [rax] ; add rsp, 0x50 ; pop rbp ; ret
0x00000200000f5be4 : add eax, dword ptr [rax] ; add rsp, 0x50 ; pop rbx ; ret
0x000002000040bffa : add eax, dword ptr [rax] ; add rsp, 0x58 ; ret
0x000002000040face : add eax, dword ptr [rax] ; add rsp, 0x68 ; ret
0x00000200004098d0 : add eax, dword ptr [rax] ; add rsp, 0x78 ; ret
0x000002000040baa0 : add eax, dword ptr [rax] ; add rsp, 0x88 ; ret
0x00000200000f9b55 : add eax, dword ptr [rax] ; add rsp, 0xa8 ; ret
0x000002000050b8db : add eax, dword ptr [rax] ; call 0x20000133f75
0x0000020000112e82 : add eax, dword ptr [rax] ; jmp 0x20000112e3d
0x00000200004dd73e : add eax, dword ptr [rax] ; jmp 0x200004dd708
0x00000200005154a7 : add eax, dword ptr [rax] ; lea rcx, qword ptr [rbp - 0x40] ; call 0x200001392b5
0x000002000011744c : add eax, dword ptr [rax] ; lea rcx, qword ptr [rbp - 0x50] ; call 0x200000c36c8
0x000002000008398e : add eax, dword ptr [rax] ; or eax, 0xffffffff ; ret
0x000002000058d865 : add eax, dword ptr [rbp + 0x22] ; ret 0x4de9
0x00000200001cc0de : add eax, dword ptr [rbp + 0x2b] ; ret 0x3b4c
0x00000200001a884a : add eax, dword ptr [rbp + 0x2b] ; ret 0x8348
0x00000200005d9151 : add eax, dword ptr [rbp + 0x2b] ; ret 0xe8b8
0x00000200006304a1 : add eax, dword ptr [rbp + 0x32] ; leave ; mov al, r9b ; ret
0x00000200001b6e97 : add eax, dword ptr [rbp + 0x33] ; leave ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x00000200001362b8 : add eax, dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200006c0aac : add eax, dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x40c3
0x000002000013dbfe : add eax, dword ptr [rbp - 0x75] ; ret 0xca6b
0x0000020000667d15 : add eax, dword ptr [rbp - 0x77] ; adc dword ptr [rbp + 0x3b], eax ; ret 0xc01b
0x0000020000545b0e : add eax, dword ptr [rbp - 0x77] ; add dword ptr [rcx - 0x75], eax ; ret 0x41c3
0x0000020000403c40 : add eax, dword ptr [rbx + 0x3b41fce0] ; ret 0x1b75
0x000002000043fca8 : add eax, dword ptr [rbx + 0xa01fce1] ; xor eax, eax ; ret
0x000002000062c0cc : add eax, dword ptr [rbx + 0xf48e0c0] ; lodsb al, byte ptr [rsi] ; ret
0x00000200004befd7 : add eax, dword ptr [rbx - 0x3dfc0320] ; ret
0x00000200004073e4 : add eax, dword ptr [rbx - 0x3fccfbf7] ; ret
0x00000200000418fa : add eax, dword ptr [rbx - 0x74b7f020] ; ret
0x0000020000223c0b : add eax, dword ptr [rbx - 0x76b7073e] ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000200005ab959 : add eax, dword ptr [rbx - 0x7af0e807] ; or dl, al ; jmp 0x200005ab969
0x00000200003c19d2 : add eax, dword ptr [rbx - 0x7bf0fe18] ; ret
0x00000200006488da : add eax, dword ptr [rbx - 0x7cb70037] ; ret 0x4802
0x000002000073452a : add eax, dword ptr [rbx - 0x7cb7073f] ; ret
0x0000020000739422 : add eax, dword ptr [rbx - 0x7cb70740] ; ret
0x0000020000143c49 : add eax, dword ptr [rbx - 0x899fd38] ; ret 0x100
0x00000200006198dc : add eax, dword ptr [rbx] ; add al, al ; ret
0x000002000068c549 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x4566
0x000002000020d253 : add eax, dword ptr [rbx] ; ret
0x000002000064981a : add eax, dword ptr [rbx] ; ret 0x3b41
0x000002000007bb80 : add eax, dword ptr [rcx + 0x22] ; ret 0x8841
0x000002000008a9ca : add eax, dword ptr [rcx + 0x32] ; ret
0x00000200000bc531 : add eax, dword ptr [rcx + 0x32] ; ret 0x4388
0x000002000009d9d8 : add eax, dword ptr [rcx + 0x32] ; ret 0x4688
0x00000200004c130c : add eax, dword ptr [rcx + 0x33] ; ret 0xe083
0x00000200001a475e : add eax, dword ptr [rcx + 0x3b] ; rol byte ptr [rdi + rcx + 0x42], 1 ; ret 0x8d4a
0x00000200000cc83c : add eax, dword ptr [rcx + 0x98] ; ret
0x0000020000137185 : add eax, dword ptr [rcx + 3] ; ret
0x000002000044a4cc : add eax, dword ptr [rcx + 3] ; ret 0xba0f
0x0000020000646a4c : add eax, dword ptr [rcx + 3] ; ror dword ptr [rcx + 3], cl ; ret
0x000002000021568e : add eax, dword ptr [rcx + rax + 0x19] ; ret
0x0000020000629e6a : add eax, dword ptr [rcx + rax + 1] ; mov eax, 1 ; ret
0x0000020000057f75 : add eax, dword ptr [rcx + rcx*4 + 0xa] ; xor eax, eax ; ret
0x0000020000687bfc : add eax, dword ptr [rcx - 0x75] ; ret
0x00000200006971e3 : add eax, dword ptr [rcx - 0x75] ; ret 0x4489
0x00000200003e90ec : add eax, dword ptr [rcx - 0x75] ; ret 0x8d4c
0x00000200005172b4 : add eax, dword ptr [rcx - 0x77] ; sbb byte ptr [rcx - 1], al ; ret 0x8349
0x0000020000041be8 : add eax, dword ptr [rcx - 0x7c] ; ret 0x840f
0x000002000007ad8e : add eax, dword ptr [rcx - 0xa] ; ret 0xf07
0x000002000068ee58 : add eax, dword ptr [rcx - 1] ; ret
0x00000200001fef84 : add eax, dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000043ee50 : add eax, dword ptr [rcx] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000781a72 : add eax, dword ptr [rcx] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006bd7d7 : add eax, dword ptr [rcx] ; xor eax, eax ; ret
0x00000200006d7e29 : add eax, dword ptr [rdi + rcx - 0x51] ; fld qword ptr [rcx - 0x75] ; ret
0x0000020000042d0b : add eax, dword ptr [rdx + 0x268] ; ret
0x00000200000f1153 : add eax, dword ptr [rdx + 0x68] ; ret
0x00000200004f2dd2 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; add al, ch ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000020000042d89 : add eax, dword ptr [rdx] ; je 0x20000042d9a ; mov rax, qword ptr [rcx + 0x28] ; ret
0x0000020000044a3f : add eax, dword ptr [rip + 0x33ac43] ; ret
0x00000200005f1ed4 : add eax, dword ptr [rip - 0x2f80d2] ; ret
0x000002000003449d : add eax, eax ; add rsp, 0x38 ; ret
0x000002000021daaa : add eax, eax ; and qword ptr [rcx + rax*8], 0 ; mov al, 1 ; ret
0x0000020000033dae : add eax, eax ; cmp dword ptr [rcx], eax ; jae 0x20000033dbf ; xor eax, eax ; ret
0x000002000047528c : add eax, eax ; dec dword ptr [rax - 0x75] ; retf ; call 0x2000009b449
0x000002000001cc1a : add eax, eax ; jmp rax
0x0000020000017799 : add eax, eax ; mov qword ptr [r10], rax ; mov eax, ecx ; ret
0x00000200005e4d26 : add eax, eax ; mov qword ptr [rdx + 0x48], rax ; ret
0x000002000067123d : add eax, eax ; mov qword ptr [rsp + 0x50], r8 ; inc edx ; jmp 0x2000067121c
0x00000200000581bc : add eax, eax ; mov word ptr [rdx + 0x14], ax ; ret
0x00000200000844c5 : add eax, eax ; ret
0x0000020000622ec6 : add eax, eax ; shl r8, 3 ; call 0x2000014f188
0x00000200006c4187 : add eax, ebp ; adc ecx, dword ptr [rdi] ; add byte ptr [rax], al ; mov rbx, rax ; call rdi
0x000002000049fcac : add eax, ebp ; fimul word ptr [rdx] ; ret 0x8bff
0x000002000010afc4 : add eax, ebp ; insd dword ptr [rdi], dx ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x000002000039ba73 : add eax, ebp ; jae 0x2000039ba81 ; adc eax, 0x19058b00 ; ret 0xfff7
0x0000020000429e61 : add eax, ebp ; jns 0x20000429e70 ; or al, byte ptr [rax] ; jmp 0x20000429e33
0x000002000073e8fa : add eax, ebp ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073e919
0x0000020000484389 : add eax, ebp ; loope 0x20000484346 ; ret
0x00000200004dfd2c : add eax, ebp ; mov byte ptr [rax], 0 ; add byte ptr [rbx], bh ; ret
0x00000200004293f6 : add eax, ebp ; mov word ptr [rbx], dr0 ; ret
0x00000200004b0b75 : add eax, ebp ; movsd dword ptr [rdi], dword ptr [rsi] ; jmp 0x200004b0b38
0x000002000042acac : add eax, ebp ; out 0x34, al ; ret 0x48ff
0x000002000067ae4e : add eax, ebp ; outsb dx, byte ptr [rsi] ; jmp 0x1ffc3f2f75e
0x00000200003f181d : add eax, ebp ; popfq ; xchg eax, ebx ; ret 0x84ff
0x000002000060d4a0 : add eax, ebp ; push 0x3b ; ret 0x48ff
0x00000200001d00b8 : add eax, ebp ; push rdx ; sbb al, 0xec ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000e5c77 : add eax, ebp ; ret
0x00000200004998b8 : add eax, ebp ; ret 0xc229
0x000002000042b498 : add eax, ebp ; ret 0xc287
0x00000200004572a8 : add eax, ebp ; ret 0xc686
0x00000200001dee48 : add eax, ebp ; ret 0xeace
0x00000200001d5388 : add eax, ebp ; ret 0xef0b
0x000002000043e29d : add eax, ebp ; sbb eax, 0xebffc18d ; ret
0x0000020000074a78 : add eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011bf58 : add eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000221b0b : add eax, ebx ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000221b2b
0x00000200002303ce : add eax, ebx ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x200002303ee
0x000002000013f827 : add eax, ebx ; mov qword ptr [rcx], rax ; mov byte ptr [rcx + 8], al ; ret
0x00000200003a15a7 : add eax, ecx ; add rsp, 0x38 ; ret
0x00000200005a65e9 : add eax, ecx ; call 0x1ff841c98fa
0x0000020000643a93 : add eax, ecx ; cmp rdx, rax ; setae al ; ret
0x0000020000209c83 : add eax, ecx ; jmp r8
0x0000020000491bdf : add eax, ecx ; jmp rax
0x0000020000488e92 : add eax, ecx ; mov dword ptr [r8], edx ; ret
0x00000200001f65c3 : add eax, ecx ; mov qword ptr [rdx], r9 ; mov eax, r8d ; ret
0x00000200000b05f5 : add eax, ecx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000067d0a3 : add eax, ecx ; out dx, eax ; sbb al, 0x83 ; call qword ptr [rax]
0x0000020000016a8b : add eax, ecx ; ret
0x00000200004e001e : add eax, ecx ; sub r10, 1 ; jne 0x200004dfff7 ; ret
0x00000200000085fd : add eax, ecx ; sub r8, 1 ; jne 0x200000085fd ; ret
0x00000200001f5257 : add eax, edi ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000133329 : add eax, edi ; call r8
0x0000020000229ac4 : add eax, edi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000229ae4
0x0000020000731965 : add eax, edi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000731984
0x000002000073eeeb : add eax, edi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073ef0a
0x00000200001350e5 : add eax, edi ; ret
0x00000200000100b2 : add eax, edx ; jmp 0x2000001006b
0x00000200000361b5 : add eax, edx ; jmp 0x2000003617e
0x00000200001f4727 : add eax, edx ; jmp 0x200001f472f
0x00000200004443a5 : add eax, edx ; jmp 0x20000444395
0x000002000044c963 : add eax, edx ; jmp 0x2000044c948
0x000002000044c95e : add eax, edx ; jmp 0x2000044c94e
0x00000200005223a5 : add eax, edx ; jmp 0x2000052233c
0x000002000052bd00 : add eax, edx ; jmp 0x2000052bd13
0x000002000064f62f : add eax, edx ; jmp 0x2000064f638
0x000002000001cec9 : add eax, edx ; jmp rax
0x00000200001c1948 : add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200000660f8 : add eax, edx ; ret
0x00000200003a215e : add eax, edx ; sub rcx, rdx ; mov qword ptr [r11], rcx ; ret
0x0000020000230b96 : add eax, edx ; sub rsp, 0x28 ; call rax
0x0000020000071288 : add eax, esi ; cmpxchg qword ptr [r9], rcx ; jne 0x200000712a1 ; ret
0x000002000004ebe4 : add eax, esi ; cmpxchg qword ptr [rcx], rdx ; jne 0x2000004ebf5 ; ret
0x000002000004ebe3 : add eax, esi ; cmpxchg qword ptr [rcx], rdx ; jne 0x2000004ebf6 ; ret
0x000002000013e002 : add eax, esi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000013e021
0x0000020000223f99 : add eax, esi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000223fb9
0x0000020000731bc3 : add eax, esi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000731be2
0x0000020000735806 : add eax, esi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000735825
0x0000020000229849 : add eax, esp ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000229869
0x00000200007338e5 : add eax, esp ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000733904
0x00000200001f4726 : add eax, r10d ; jmp 0x200001f4730
0x0000020000221b0a : add eax, r11d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000221b2c
0x000002000013f826 : add eax, r11d ; mov qword ptr [rcx], rax ; mov byte ptr [rcx + 8], al ; ret
0x0000020000229848 : add eax, r12d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022986a
0x00000200007338e4 : add eax, r12d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000733905
0x000002000073e8f9 : add eax, r13d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073e91a
0x0000020000223f98 : add eax, r14d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000223fba
0x0000020000731964 : add eax, r15d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000731985
0x000002000073eeea : add eax, r15d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073ef0b
0x00000200001350e4 : add eax, r15d ; ret
0x00000200000581bb : add eax, r8d ; mov word ptr [rdx + 0x14], ax ; ret
0x00000200005a65e8 : add eax, r9d ; call 0x1ff841c98fb
0x00000200001f63c2 : add eax, r9d ; ret
0x000002000052ca89 : add ebp, 2 ; jmp 0x2000052ca54
0x00000200007450b7 : add ebp, 8 ; jmp 0x20000745083
0x00000200001788d2 : add ebp, dword ptr [rbx] ; ret
0x00000200001882e8 : add ebp, eax ; int1 ; call qword ptr [rax - 0xed23d17]
0x00000200005f3af4 : add ebp, eax ; out 0xe1, al ; ret
0x00000200004c316c : add ebp, eax ; ret
0x000002000040abd4 : add ebp, eax ; salc ; ret 5
0x0000020000622ecb : add ebp, eax ; scasd eax, dword ptr [rdi] ; ret 0xffb2
0x000002000053f44d : add ebp, ebx ; add eax, 0xff008b48 ; ret
0x0000020000426347 : add ebp, ebx ; ret 0x8b8
0x000002000015b641 : add ebp, ecx ; mov dh, 0x97 ; jmp 0x2000015b64d
0x000002000058e10f : add ebp, ecx ; ret 0xf73b
0x00000200001350c7 : add ebp, edi ; ret
0x00000200001350c6 : add ebp, r15d ; ret
0x00000200001882e7 : add ebp, r8d ; int1 ; call qword ptr [rax - 0xed23d17]
0x000002000040abd3 : add ebp, r8d ; salc ; ret 5
0x0000020000731f1f : add ebx, -1 ; jne 0x20000731f17 ; mov rax, rdx ; jmp 0x20000731f32
0x0000020000733599 : add ebx, -1 ; jne 0x20000733594 ; mov rax, rdx ; jmp 0x200007335ac
0x0000020000733c44 : add ebx, -1 ; jne 0x20000733c3c ; mov rax, rdx ; jmp 0x20000733c57
0x000002000073404e : add ebx, -1 ; jne 0x20000734046 ; mov rax, rdx ; jmp 0x20000734061
0x0000020000735290 : add ebx, -1 ; jne 0x2000073528b ; mov rax, rdx ; jmp 0x200007352a3
0x0000020000737176 : add ebx, -1 ; jne 0x20000737171 ; mov rax, rdx ; jmp 0x20000737189
0x00000200007374a9 : add ebx, -1 ; jne 0x200007374a0 ; mov rax, rdx ; jmp 0x200007374bc
0x000002000073e115 : add ebx, -1 ; jne 0x2000073e10d ; mov rax, rdx ; jmp 0x2000073e128
0x00000200000eb62e : add ebx, 0x3b000000 ; ret 0x767d
0x0000020000008eb0 : add ebx, 0x48000000 ; add esp, 0x28 ; ret
0x000002000017c6e0 : add ebx, 2 ; jmp 0x2000006b2df
0x0000020000688250 : add ebx, 2 ; movzx ecx, word ptr [rbx] ; call 0x20000134560
0x000002000019d811 : add ebx, 8 ; jmp 0x2000019d851
0x00000200000f17f0 : add ebx, 8 ; sub r10, 1 ; jne 0x200000f17ee ; ret
0x00000200005989b9 : add ebx, dword ptr [r15 + 0x14] ; jmp 0x20000424c74
0x00000200001bef56 : add ebx, dword ptr [rax + rax] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200000344bc : add ebx, dword ptr [rbx] ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200005989ba : add ebx, dword ptr [rdi + 0x14] ; jmp 0x20000424c73
0x000002000051247b : add ebx, eax ; and dword ptr [rip - 0x218164], 0 ; ret
0x000002000046c975 : add ebx, eax ; bts dword ptr [rdx], 7 ; ret
0x0000020000535c41 : add ebx, eax ; call 0x200000539f0
0x00000200000ef7f8 : add ebx, eax ; cmp ecx, 0x14 ; ja 0x200000ef80b ; xor al, al ; ret
0x000002000002cccc : add ebx, eax ; cmp qword ptr [rdx], r8 ; ja 0x2000002ccd4 ; xor al, al ; ret
0x00000200001f3288 : add ebx, eax ; cmp r11, qword ptr [rcx] ; jb 0x200001f329b ; xor eax, eax ; ret
0x00000200001f3324 : add ebx, eax ; cmp r11, qword ptr [rcx] ; jb 0x200001f3337 ; xor al, al ; ret
0x0000020000570d0e : add ebx, eax ; jmp 0x200003e184c
0x000002000062c133 : add ebx, eax ; jmp 0x2000062c141
0x000002000012525c : add ebx, eax ; jmp rax
0x000002000074fb10 : add ebx, eax ; jmp rcx
0x000002000011c51d : add ebx, eax ; lea rax, qword ptr [rip + 0x58888e] ; ret
0x0000020000069e8a : add ebx, eax ; mov al, 1 ; ret
0x0000020000074f1d : add ebx, eax ; mov al, byte ptr [rax + rcx*2] ; ret
0x0000020000082b03 : add ebx, eax ; mov byte ptr [r8], 0 ; ret
0x00000200000f1ebe : add ebx, eax ; mov byte ptr [rcx + 0x88], 1 ; ret
0x000002000013f81b : add ebx, eax ; mov byte ptr [rcx + 4], al ; mov dword ptr [rcx], eax ; ret
0x000002000013f808 : add ebx, eax ; mov byte ptr [rcx], al ; ret
0x000002000013f815 : add ebx, eax ; mov dword ptr [rcx + 2], eax ; mov dword ptr [rcx], eax ; ret
0x000002000013f821 : add ebx, eax ; mov dword ptr [rcx], eax ; mov dword ptr [rcx + 3], eax ; ret
0x00000200006b072e : add ebx, eax ; mov eax, 0xc0000001 ; ret
0x00000200001fc9d6 : add ebx, eax ; mov eax, 2 ; ret
0x00000200000435d3 : add ebx, eax ; mov rax, qword ptr [rax + 0x18] ; ret
0x000002000002aabb : add ebx, eax ; mov rax, qword ptr [rax] ; ret
0x00000200004766d2 : add ebx, eax ; or eax, 1 ; ret
0x0000020000050699 : add ebx, eax ; pause ; xor al, al ; ret
0x00000200000429d5 : add ebx, eax ; ret
0x000002000004c25b : add ebx, eax ; test al, 1 ; je 0x2000004c257 ; xor al, al ; ret
0x00000200000c193f : add ebx, eax ; test eax, eax ; jne 0x200000c1939 ; xor al, al ; ret
0x000002000008616e : add ebx, eax ; test eax, eax ; js 0x20000086177 ; xor eax, eax ; ret
0x00000200003fb88d : add ebx, eax ; test r8d, r8d ; je 0x200003fb878 ; xor al, al ; ret
0x000002000001c35d : add ebx, eax ; xor al, al ; ret
0x000002000005994c : add ebx, eax ; xor eax, eax ; ret
0x000002000017f74a : add ebx, ebp ; add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret 0x8b49
0x00000200005e3bf2 : add ebx, ebp ; add dh, byte ptr [rbx] ; shr al, cl ; pushfq ; ret 0xfff5
0x00000200005dfc1d : add ebx, ebp ; out dx, eax ; xor al, al ; ret
0x0000020000015c22 : add ebx, ebp ; ret
0x00000200003cefab : add ebx, ebp ; ret 0x8349
0x00000200000400f1 : add ebx, ebp ; test al, 0xa ; ret 0xc4eb
0x000002000010aab0 : add ebx, ebx ; jmp 0x2000010aa7a
0x00000200001350d3 : add ebx, edi ; ret
0x000002000060150b : add ebx, edi ; ret 0x48ff
0x000002000053e9c4 : add ebx, edx ; dec dword ptr [rcx + rcx*4 + 0x3d] ; ret 0xda03
0x000002000017f3bd : add ebx, edx ; loop 0x2000017f3d0 ; ret 0x8941
0x00000200006c33f4 : add ebx, esi ; movq qword ptr [rdx], mm0 ; ret
0x0000020000625868 : add ebx, esi ; movq qword ptr [rsi], mm0 ; call 0x20000031b43
0x000002000048e14b : add ebx, esp ; mov rcx, rbx ; call 0x200000bcd28
0x00000200001350d2 : add ebx, r15d ; ret
0x00000200001bb9a9 : add ecx, -0x10 ; mov rax, rcx ; ret
0x000002000022242b : add ecx, -1 ; jne 0x20000222421 ; mov rax, rdx ; jmp 0x2000022243e
0x00000200002231e7 : add ecx, -1 ; jne 0x200002231dd ; mov rax, rdx ; jmp 0x20000223263
0x000002000022b0ec : add ecx, -1 ; jne 0x2000022b0e5 ; mov rax, rdx ; jmp 0x2000022b0ff
0x000002000022b363 : add ecx, -1 ; jne 0x2000022b35c ; mov rax, rdx ; jmp 0x2000022b37f
0x000002000022b96e : add ecx, -1 ; jne 0x2000022b964 ; mov rax, rdx ; jmp 0x2000022b981
0x000002000022f29e : add ecx, -1 ; jne 0x2000022f297 ; mov rax, rdx ; jmp 0x2000022f2b1
0x000002000022f517 : add ecx, -1 ; jne 0x2000022f510 ; mov rax, rdx ; jmp 0x2000022f544
0x0000020000230485 : add ecx, -1 ; jne 0x2000023047c ; mov rax, rdx ; jmp 0x20000230498
0x00000200004858de : add ecx, -1 ; jne 0x200004858da ; ret
0x000002000072c60f : add ecx, -1 ; jne 0x2000072c605 ; mov rax, rdx ; jmp 0x2000072c67d
0x000002000072c9b2 : add ecx, -1 ; jne 0x2000072c9a8 ; mov rax, rdx ; jmp 0x2000072c9c5
0x00000200007311de : add ecx, -1 ; jne 0x200007311d5 ; mov rax, rdx ; jmp 0x200007311f1
0x0000020000737c92 : add ecx, -1 ; jne 0x20000737c8c ; mov rax, rdx ; jmp 0x20000737ca5
0x0000020000036736 : add ecx, 0x10 ; sub rax, 1 ; jne 0x20000036737 ; ret
0x00000200004002ab : add ecx, 0x10 ; sub rax, 1 ; jne 0x200004002ac ; ret
0x00000200005a15ee : add ecx, 0x1c ; xor r9d, r9d ; call r10
0x00000200003bb729 : add ecx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x200003bb73a ; ret
0x00000200003bb765 : add ecx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x200003bb776 ; ret
0x000002000049d9c8 : add ecx, 0x358 ; call 0x200000c2d19
0x00000200004a24e6 : add ecx, 0x358 ; call 0x200000c2de9
0x0000020000149954 : add ecx, 0x40 ; sub rdx, 0x40 ; ja 0x20000149959 ; ret
0x00000200004962f4 : add ecx, 0x48 ; call 0x200000b6c26
0x00000200005373aa : add ecx, 0x4b8d48ff ; adc al, ch ; ret 0xb122
0x00000200003a3d1e : add ecx, 0x5800 ; call 0x2000003fffc
0x00000200003c5d90 : add ecx, 0xb40 ; jmp 0x200003c5d61
0x0000020000135829 : add ecx, 2 ; cmp rax, rdx ; jb 0x20000135827 ; ret
0x000002000053e346 : add ecx, 2 ; mov qword ptr [rdx + 0x28], rcx ; ret
0x00000200003eec47 : add ecx, 2 ; sub rdx, 1 ; jne 0x200003eec49 ; ret
0x00000200001340e1 : add ecx, 2 ; test r8, r8 ; jne 0x200001340dc ; ret
0x0000020000512f61 : add ecx, 8 ; add rcx, r9 ; call 0x2000014f188
0x0000020000676156 : add ecx, 8 ; cmp r9d, edx ; jb 0x20000676155 ; ret
0x0000020000048b11 : add ecx, 8 ; cmp rcx, r8 ; jb 0x20000048b0c ; ret
0x000002000017c5d1 : add ecx, 8 ; mov ecx, r8d ; inc rdx ; jmp 0x2000017c586
0x0000020000015c1d : add ecx, 8 ; mov r8, qword ptr [r9] ; jmp 0x20000015bef
0x0000020000035ac7 : add ecx, 8 ; sub r10, 1 ; jne 0x20000035ab9 ; ret
0x00000200000309dc : add ecx, 8 ; sub rdx, 1 ; jne 0x200000309d5 ; ret
0x00000200001942e4 : add ecx, dword ptr [r8 - 0x75] ; ret
0x00000200001f9a3a : add ecx, dword ptr [r8 - 0x7d] ; ret
0x000002000042c0e8 : add ecx, dword ptr [r9 + 0x3b] ; ret
0x00000200001fa70a : add ecx, dword ptr [r9 - 0x7d] ; rol dword ptr [rcx + rcx*2], -0x7d ; ret 0x4004
0x00000200000819e2 : add ecx, dword ptr [rax + 0x23] ; ret
0x00000200000a291a : add ecx, dword ptr [rax + 0x23] ; ret 0x3148
0x000002000018a37a : add ecx, dword ptr [rax + 0x23] ; ret 0x3348
0x00000200000d84de : add ecx, dword ptr [rax + 0x23] ; ret 0x8b49
0x0000020000167e55 : add ecx, dword ptr [rax + 0x23] ; ret 0x8d49
0x0000020000744542 : add ecx, dword ptr [rax + 0x23] ; ret 0xc148
0x00000200000636b2 : add ecx, dword ptr [rax + 0x2b] ; fmul dword ptr [rcx - 0x75] ; ret 0x2b49
0x00000200000bdbe7 : add ecx, dword ptr [rax + 0x33] ; ret 0x2349
0x00000200002280d5 : add ecx, dword ptr [rax + 0x33] ; ror byte ptr [rax - 0x75], 1 ; ret
0x00000200000235bb : add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200001d6fb4 : add ecx, dword ptr [rax + 0x3b] ; ret 0x840f
0x00000200000a5dd3 : add ecx, dword ptr [rax + 0x3b] ; ret 0x860f
0x000002000063881a : add ecx, dword ptr [rax + 0x3b] ; ret 0x870f
0x00000200005e2e1d : add ecx, dword ptr [rax + 0x63] ; enter 0xf41, -0x49 ; ret 0x8d48
0x00000200001943e4 : add ecx, dword ptr [rax + 0x63] ; ret
0x000002000065229f : add ecx, dword ptr [rax + 0x6b] ; ret
0x00000200000bc487 : add ecx, dword ptr [rax + 0xb] ; ret
0x000002000042cbc9 : add ecx, dword ptr [rax + 0xb] ; ret 0x8948
0x000002000008737b : add ecx, dword ptr [rax + 0xb] ; ret 0x8949
0x000002000002d544 : add ecx, dword ptr [rax + 0xf] ; ret 0xccc3
0x00000200001f9dd1 : add ecx, dword ptr [rax + 3] ; ret
0x00000200003ed557 : add ecx, dword ptr [rax + 3] ; ret 0x8b48
0x00000200003eda30 : add ecx, dword ptr [rax + 3] ; ret 0xe083
0x00000200003edfd2 : add ecx, dword ptr [rax - 0x2f] ; call 0x2004900e328
0x00000200001788ce : add ecx, dword ptr [rax - 0x3f] ; stc ; add ebp, dword ptr [rbx] ; ret
0x0000020000534b93 : add ecx, dword ptr [rax - 0x75] ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [r11], dil ; ret
0x0000020000074540 : add ecx, dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0x1d74
0x000002000013e562 : add ecx, dword ptr [rax - 0x75] ; add dword ptr [rcx - 0x7d], eax ; ret
0x0000020000230658 : add ecx, dword ptr [rax - 0x75] ; add dword ptr [rcx - 0x7d], eax ; ret 0x49f8
0x000002000052513a : add ecx, dword ptr [rax - 0x75] ; enter 0x7de8, -0x5d ; ret 0x41ff
0x000002000045ddd4 : add ecx, dword ptr [rax - 0x75] ; int 0x80
0x00000200005d016f : add ecx, dword ptr [rax - 0x75] ; int 0xff
0x00000200001066bc : add ecx, dword ptr [rax - 0x75] ; je 0x200001066ed ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001072b4 : add ecx, dword ptr [rax - 0x75] ; je 0x200001072e5 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000087141 : add ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 0x20 ; pop rdi ; ret
0x000002000057a076 : add ecx, dword ptr [rax - 0x75] ; push rbx ; or byte ptr [rax - 0x75], cl ; ret 0xe283
0x0000020000009ca5 : add ecx, dword ptr [rax - 0x75] ; ret
0x00000200006821d0 : add ecx, dword ptr [rax - 0x75] ; ret 0x8548
0x00000200004e5c8b : add ecx, dword ptr [rax - 0x75] ; ret 0x8b48
0x000002000000c020 : add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200004f678b : add ecx, dword ptr [rax - 0x75] ; ret 0xf748
0x00000200004097a3 : add ecx, dword ptr [rax - 0x75] ; sbb byte ptr [rax - 0x75], cl ; ret
0x00000200000be74e : add ecx, dword ptr [rax - 0x75] ; sub byte ptr [r8 + 0x23], cl ; ret 0xc148
0x00000200004fda17 : add ecx, dword ptr [rax - 0x77] ; or r11b, bpl ; ret
0x00000200000121eb : add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000072d22f : add ecx, dword ptr [rax - 0x7d] ; ret 0x4808
0x0000020000230c62 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x00000200005388d2 : add ecx, dword ptr [rax - 0x7d] ; ret 0x4d04
0x00000200000920d3 : add ecx, dword ptr [rax - 0x7d] ; ret 0xe808
0x00000200001f991c : add ecx, dword ptr [rax - 0x7d] ; ret 0xeb03
0x0000020000746a7c : add ecx, dword ptr [rax - 0x7f] ; ret 0xfff
0x00000200005f2e9f : add ecx, dword ptr [rax - 1] ; and byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200001b2a8f : add ecx, dword ptr [rax - 1] ; loope 0x200001b2a55 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200006bcfb3 : add ecx, dword ptr [rax - 1] ; loopne 0x200006bd006 ; jmp rax
0x0000020000017f00 : add ecx, dword ptr [rax - 1] ; ret
0x000002000013feeb : add ecx, dword ptr [rax - 1] ; ret 0x334d
0x00000200000daa8f : add ecx, dword ptr [rax - 1] ; ret 0x3b48
0x000002000007b6dd : add ecx, dword ptr [rax - 1] ; ret 0x6b48
0x000002000002daf9 : add ecx, dword ptr [rax - 1] ; ret 0x8d4a
0x0000020000006b97 : add ecx, dword ptr [rax - 1] ; ret 0xc148
0x000002000010aa3f : add ecx, dword ptr [rax - 1] ; ret 0xe183
0x00000200001b6a39 : add ecx, dword ptr [rax - 9] ; ror byte ptr [rax + 0xb], 1 ; ret 0xfeb
0x00000200000219a0 : add ecx, dword ptr [rbp + 0x23] ; ret
0x0000020000062fbe : add ecx, dword ptr [rbp + 0x2b] ; ret
0x00000200004e7fa1 : add ecx, dword ptr [rbp + 0x33] ; ret
0x00000200000d31fd : add ecx, dword ptr [rbp + 0xb] ; ret 0x894c
0x00000200000066c9 : add ecx, dword ptr [rbp + rcx*4 + 0x14] ; add dword ptr [rcx - 0x75], eax ; ret
0x00000200004f4550 : add ecx, dword ptr [rbp - 0x3d74fbbe] ; ret
0x00000200001dc0b6 : add ecx, dword ptr [rbp - 0x75] ; ret
0x000002000019fa28 : add ecx, dword ptr [rbp - 0x75] ; ret 0x8548
0x000002000042572f : add ecx, dword ptr [rbx + 0x3bc123c2] ; ror dword ptr [rdi], -0x7c ; ret
0x00000200001e24c0 : add ecx, dword ptr [rbx - 0x3d74efae] ; ret
0x00000200000d1c15 : add ecx, dword ptr [rcx + 0x1d39045a] ; std ; ret
0x000002000018d15f : add ecx, dword ptr [rcx + 0x23] ; ret 0x8b4d
0x00000200007332f6 : add ecx, dword ptr [rcx + 0x33] ; adc byte ptr [rbx - 0x2cb7073d], al ; ret 0x8349
0x000002000042c0e9 : add ecx, dword ptr [rcx + 0x3b] ; ret
0x0000020000215451 : add ecx, dword ptr [rcx + 0x3b] ; sal byte ptr [rdi + 0x2c], 3 ; ret
0x000002000008741d : add ecx, dword ptr [rcx + 0xb] ; ret 0x8948
0x00000200000d30e0 : add ecx, dword ptr [rcx + 0xb] ; ret 0x8949
0x00000200000046ae : add ecx, dword ptr [rcx + 0xf] ; ret
0x0000020000737c87 : add ecx, dword ptr [rcx + 3] ; fimul dword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0x8341
0x000002000004acdc : add ecx, dword ptr [rcx + 3] ; ret
0x000002000043f086 : add ecx, dword ptr [rcx + rcx*4 + 2] ; mov al, 1 ; ret
0x000002000010f6bc : add ecx, dword ptr [rcx - 0x74dfdbbc] ; ret 0xc133
0x000002000000491a : add ecx, dword ptr [rcx - 0x75] ; ret
0x00000200002307e2 : add ecx, dword ptr [rcx - 0x75] ; ret 0x3348
0x0000020000697194 : add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x0000020000031437 : add ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000000933a : add ecx, dword ptr [rcx - 0x75] ; ret 0xf748
0x000002000052b23d : add ecx, dword ptr [rcx - 0x75] ; ror dword ptr [rax - 0x75], cl ; ret 0xccc3
0x00000200004c0e24 : add ecx, dword ptr [rcx - 0x77] ; sbb byte ptr [rcx - 0x75], cl ; ret 0x8941
0x00000200001f358f : add ecx, dword ptr [rcx - 0x7d] ; ret
0x00000200004bec29 : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4808
0x00000200001fa70b : add ecx, dword ptr [rcx - 0x7d] ; rol dword ptr [rcx + rcx*2], -0x7d ; ret 0x4004
0x000002000010c4f0 : add ecx, dword ptr [rcx - 1] ; loopne 0x2000010c4b6 ; add al, byte ptr [rax] ; add al, al ; ret
0x0000020000131ca7 : add ecx, dword ptr [rcx - 1] ; loopne 0x20000131c6d ; add al, byte ptr [rax] ; add al, al ; ret
0x0000020000029b75 : add ecx, dword ptr [rcx - 1] ; ret
0x0000020000063b0c : add ecx, dword ptr [rcx - 1] ; ret 0xc149
0x0000020000004972 : add ecx, dword ptr [rcx] ; add byte ptr [rax + 0xd], cl ; ret 0
0x0000020000041e7e : add ecx, dword ptr [rcx] ; xor byte ptr [rdx + rcx - 0x75], 0xc2 ; ret
0x00000200000a5806 : add ecx, dword ptr [rdi] ; mov bh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0xf10
0x0000020000753535 : add ecx, dword ptr [rdi] ; ret 0x8348
0x0000020000095fa3 : add ecx, dword ptr [rdi] ; test byte ptr [rax + rcx], ch ; sldt word ptr [rcx + 0x3b] ; ret 0x840f
0x00000200004c1800 : add ecx, dword ptr [rdi] ; test byte ptr [rbx], dl ; xor dword ptr [rax], edx ; add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x00000200003f918f : add ecx, dword ptr [rdi] ; test dword ptr [rbx], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000007ed7f : add ecx, dword ptr [rdi] ; test ebp, eax ; add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x00000200001c574f : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0x44e8
0x00000200005ff969 : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xf741
0x00000200004e7fdb : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x2a8
0x00000200004cadcb : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0x000002000043fabc : add ecx, dword ptr [rdx - 0x3fcd3c3f] ; ret
0x00000200000c1e08 : add ecx, dword ptr [rip + 0x4801b000] ; add esp, 0x28 ; ret
0x00000200005414a1 : add ecx, eax ; call 0x1ff891636bb
0x0000020000539d1d : add ecx, eax ; call 0x200000c5f54
0x0000020000405ccb : add ecx, eax ; cmp r8d, r9d ; jb 0x20000405cba ; mov eax, edx ; ret
0x0000020000405ccb : add ecx, eax ; cmp r8d, r9d ; jb 0x20000405cbb ; mov eax, edx ; ret
0x000002000014a9e2 : add ecx, eax ; jmp r9
0x000002000016716d : add ecx, eax ; jmp rcx
0x0000020000116ccf : add ecx, eax ; mov qword ptr [rdx], rcx ; ret
0x0000020000642eb2 : add ecx, eax ; mov r8, rbx ; call 0x2000014f187
0x0000020000031e00 : add ecx, eax ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200006bafa5 : add ecx, eax ; sub ecx, r10d ; mov dword ptr [r8], ecx ; ret
0x00000200001676a3 : add ecx, ebp ; add bh, byte ptr [rax - 0x9330013] ; ret 0xf0e
0x000002000048c99f : add ecx, ebp ; call 0x200000bab45
0x000002000004aed0 : add ecx, ebp ; jmp rcx
0x00000200001560be : add ecx, ebp ; ret
0x000002000056c659 : add ecx, ebp ; ret 0xe6ce
0x000002000016dd12 : add ecx, ebp ; ret 0xf992
0x000002000077b2f1 : add ecx, ebp ; ret 0xfe7e
0x000002000068d836 : add ecx, ebx ; call 0x2000014f189
0x0000020000512f65 : add ecx, ecx ; call 0x2000014f184
0x00000200004458ee : add ecx, ecx ; jmp rcx
0x00000200006b7234 : add ecx, ecx ; mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x0000020000754df6 : add ecx, ecx ; mov rax, qword ptr [r13 + rcx*8 + 0x18] ; xor ecx, ecx ; call rax
0x0000020000642a18 : add ecx, ecx ; movzx eax, cx ; ret
0x0000020000020be8 : add ecx, edi ; jmp rcx
0x0000020000125a54 : add ecx, edi ; mov edx, edi ; call 0x20000521d26
0x000002000002c23c : add ecx, edi ; mov rdi, qword ptr [rsp + 0x10] ; jmp rcx
0x00000200001350df : add ecx, edi ; ret
0x00000200006c1cb5 : add ecx, edx ; cmp qword ptr [rcx], rax ; jne 0x200006c1cb5 ; ret
0x0000020000076572 : add ecx, edx ; cmp rcx, r8 ; setbe al ; ret
0x00000200005622c1 : add ecx, edx ; jmp 0x200003c2b10
0x000002000001b9a0 : add ecx, edx ; jmp rcx
0x00000200005462b4 : add ecx, edx ; mov al, byte ptr [r9 + rax - 0x80] ; ret
0x00000200003a33ec : add ecx, edx ; mov dword ptr [r8], ecx ; add eax, ecx ; ret
0x0000020000427ce0 : add ecx, esi ; call 0x20000053c65
0x00000200004be217 : add ecx, esi ; jmp rcx
0x00000200003daeaf : add ecx, esi ; ret
0x00000200005cd5c5 : add ecx, esp ; call 0x200000597f4
0x000002000048e24d : add ecx, esp ; call 0x200000bab45
0x000002000065bbba : add ecx, esp ; dec dword ptr [rax - 0x75] ; ret
0x0000020000440d9f : add ecx, esp ; jmp rcx
0x00000200001350de : add ecx, r15d ; ret
0x0000020000031dff : add ecx, r8d ; movzx eax, word ptr [rax + rcx*2] ; ret
0x0000020000642a17 : add ecx, r9d ; movzx eax, cx ; ret
0x000002000073468f : add edi, -1 ; jne 0x20000734686 ; mov rax, rdx ; jmp 0x200007346a2
0x0000020000735b55 : add edi, -1 ; jne 0x20000735b4c ; mov rax, rdx ; jmp 0x20000735b68
0x000002000073659f : add edi, -1 ; jne 0x20000736596 ; mov rax, rdx ; jmp 0x200007365b2
0x0000020000739afe : add edi, -1 ; jne 0x20000739af5 ; mov rax, rdx ; jmp 0x20000739b11
0x000002000073d92f : add edi, -1 ; jne 0x2000073d927 ; mov rax, rdx ; jmp 0x2000073d942
0x0000020000453af1 : add edi, 0x30 ; jmp 0x20000453b10
0x000002000046bcd5 : add edi, dword ptr [r11] ; ret
0x0000020000047a3b : add edi, dword ptr [rbx + rax] ; jne 0x20000047a5a ; mov rcx, rdi ; call rsi
0x000002000046bcd6 : add edi, dword ptr [rbx] ; ret
0x0000020000460c0a : add edi, dword ptr [rdx - 0x7b74b701] ; ret 0xe8e0
0x0000020000226450 : add edi, dword ptr [rdx] ; ret
0x000002000069d00b : add edi, dword ptr [rdx] ; ret 0x1b75
0x00000200004e7fc1 : add edi, dword ptr [rdx] ; ret 0x2975
0x000002000041ea8d : add edi, eax ; or byte ptr [r8 + rax], al ; add byte ptr [rax], al ; ret
0x000002000062d298 : add edi, eax ; rol byte ptr [r9], 1 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x8948
0x0000020000760b06 : add edi, ebx ; mov r13d, ebx ; jmp 0x20000760ae0
0x00000200001445ce : add edi, ecx ; mov rax, rbx ; pop rbx ; ret
0x00000200001445ae : add edi, ecx ; pop rbx ; ret
0x00000200004cb5b9 : add edi, edi ; je 0x200004cb5c2 ; ret
0x0000020000018770 : add edi, edi ; ret
0x00000200001a2d5f : add edi, edi ; ret 0x344
0x0000020000633257 : add edi, edi ; ret 0x8348
0x00000200001cf56e : add edi, edi ; ret 0xb848
0x00000200001d00ff : add edi, edi ; ret 0xc28b
0x000002000059e53e : add edi, edi ; ret 0xd3eb
0x000002000059e378 : add edi, edi ; ret 0xdeeb
0x000002000074291f : add edi, edi ; ret 0xff48
0x00000200004beab6 : add edi, esi ; fisttp dword ptr [rax + 0x63] ; ret
0x00000200006bc3fc : add edi, esi ; mov edx, r15d ; call rdi
0x00000200003ce95c : add edi, esi ; ret
0x0000020000739816 : add edi, esp ; jne 0x2000073980b ; mov rax, rdx ; jmp 0x20000739827
0x0000020000739815 : add edi, r12d ; jne 0x2000073980c ; mov rax, rdx ; jmp 0x20000739828
0x00000200001350ba : add edi, r15d ; ret
0x00000200001bebef : add edx, -1 ; jne 0x200001bebc5 ; ret
0x00000200001cb93d : add edx, -1 ; jne 0x200001cb932 ; xor eax, eax ; ret
0x00000200001e7a31 : add edx, 0x13 ; call r9
0x000002000041f1ea : add edx, 0x20 ; cmp r9d, r11d ; jb 0x2000041f1de ; ret
0x000002000060fb62 : add edx, 0x30 ; call 0x20000231ce6
0x000002000068768a : add edx, 2 ; cmp r8d, 0xa ; jb 0x2000068768a ; ret
0x00000200000125f0 : add edx, 2 ; cmp rdx, rcx ; jb 0x200000125dd ; ret
0x0000020000399e98 : add edx, 8 ; cmp rdx, r8 ; jbe 0x20000399e98 ; ret
0x000002000012e29d : add edx, dword ptr [rax + 0x44] ; cmp edx, dword ptr [r8 + 0x40] ; jb 0x2000012e28a ; ret
0x00000200004af1fb : add edx, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret 0xc933
0x00000200001b9d48 : add edx, dword ptr [rsi] ; add byte ptr [rbp - 0x3f6af040], al ; ret
0x00000200001df924 : add edx, eax ; call 0x2000002bb74
0x00000200000c6baf : add edx, eax ; jmp 0x200000c6891
0x00000200001f394c : add edx, eax ; jmp 0x200001f3916
0x000002000017f589 : add edx, eax ; jmp rdx
0x000002000010f2fb : add edx, eax ; mov eax, r10d ; add rsp, 0x28 ; ret
0x00000200004641d5 : add edx, eax ; movzx r8d, dx ; jmp 0x20000464182
0x00000200000a2596 : add edx, ebx ; jmp rdx
0x000002000001e697 : add edx, ebx ; jne 0x2000001e699 ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x0000020000498239 : add edx, ebx ; shr edx, 3 ; call 0x200000bab48
0x000002000017c680 : add edx, ecx ; jmp 0x2000006b40a
0x000002000006e883 : add edx, ecx ; jmp 0x2000006d627
0x0000020000602a89 : add edx, ecx ; jmp r10
0x000002000049cd8b : add edx, ecx ; movzx eax, dx ; ret
0x0000020000486c72 : add edx, edi ; jmp rdx
0x00000200001350d9 : add edx, edi ; ret
0x00000200001d786e : add edx, edx ; and eax, 1 ; or eax, edx ; ret
0x00000200001350d8 : add edx, r15d ; ret
0x00000200004641d4 : add edx, r8d ; movzx r8d, dx ; jmp 0x20000464183
0x000002000063d774 : add esi, 0x10 ; mov qword ptr [rsp + 0x50], rsi ; inc edx ; jmp 0x2000063d766
0x00000200004577ee : add esi, 0xcb8348ff ; dec dword ptr [rax - 0x75] ; ret
0x00000200004cb4eb : add esi, dword ptr [rax + 4] ; mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x200004cb4c0
0x00000200001f4a53 : add esi, dword ptr [rax - 0x3b7cb7ff] ; pop rbx ; ret
0x000002000001c35b : add esi, dword ptr [rax - 0x3fcd3cff] ; ret
0x0000020000050697 : add esi, dword ptr [rax - 0x6f0c3cff] ; xor al, al ; ret
0x0000020000047a3d : add esi, dword ptr [rbp + 0x12] ; mov rcx, rdi ; call rsi
0x00000200000ebc37 : add esi, dword ptr [rbp + 0x3f] ; mov rcx, rsi ; call r14
0x0000020000072db8 : add esi, dword ptr [rbp + 2] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004860ba : add esi, dword ptr [rbp + 6] ; mov dword ptr [r9], edx ; mov al, 1 ; ret
0x000002000065fe55 : add esi, dword ptr [rbp + rax - 0x18] ; call qword ptr [rdx]
0x000002000017d391 : add esi, dword ptr [rbp + rax - 0x18] ; ret
0x0000020000610692 : add esi, dword ptr [rbp + rax - 0x18] ; ret 0x60a
0x00000200000d9f60 : add esi, dword ptr [rbp + rax - 0xa] ; ret
0x000002000004d63e : add esi, dword ptr [rbp + rcx + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x00000200006c7ca7 : add esi, dword ptr [rbp - 0x36] ; xor eax, eax ; ret
0x00000200005fa83e : add esi, dword ptr [rbx] ; jmp qword ptr [rcx]
0x000002000005b49c : add esi, dword ptr [rbx] ; ret
0x00000200003b4a1a : add esi, dword ptr [rbx] ; ret 0xe083
0x0000020000020a2e : add esi, dword ptr [rbx] ; rol bl, 0x41 ; mov eax, ecx ; ret
0x0000020000419de9 : add esi, dword ptr [rbx] ; rol bl, 0x48 ; mov eax, ecx ; ret
0x000002000007bbb6 : add esi, dword ptr [rbx] ; rol bl, 0x48 ; shr eax, 0x20 ; ret
0x000002000002d3ce : add esi, dword ptr [rbx] ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000407eb0 : add esi, dword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x00000200000ef79d : add esi, dword ptr [rdi + 0x10] ; mov eax, 1 ; ret
0x000002000005c6ea : add esi, dword ptr [rdi + rcx - 0x76] ; ret
0x00000200004cf01a : add esi, dword ptr [rdx - 0x17] ; jmp 0x200004ceef7
0x00000200005a7b90 : add esi, dword ptr [rdx] ; ret
0x000002000012441c : add esi, dword ptr [rdx] ; rol bl, 0x48 ; jmp rcx
0x00000200005e7000 : add esi, dword ptr [rsp - 0xa] ; ret 0x7402
0x00000200000ebc36 : add esi, dword ptr ds:[rbp + 0x3f] ; mov rcx, rsi ; call r14
0x00000200003c5aa9 : add esi, eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003b7890 : add esi, edi ; jmp 0x200003b7681
0x00000200001350c1 : add esi, edi ; ret
0x0000020000764294 : add esi, edi ; ret 0x38e8
0x00000200007475ba : add esi, edx ; mov eax, 0xc74808ff ; ret 0x7400
0x00000200006bf599 : add esi, edx ; sar edi, -0xa ; ret 0x7410
0x000002000005c6e7 : add esi, esi ; ret
0x00000200000b25b0 : add esi, esi ; ret 0x7402
0x000002000006b14e : add esi, esi ; ret 0x740f
0x000002000006bb50 : add esi, esi ; ret 0x750f
0x0000020000520ba3 : add esi, esi ; ret 0xf01
0x000002000010e4a3 : add esi, esi ; ret 0xf02
0x00000200000cd514 : add esi, esi ; ret 0xf04
0x00000200004be630 : add esi, esi ; ret 0xf08
0x000002000006d01f : add esi, esi ; ret 0xf0f
0x0000020000134849 : add esi, esp ; mov rdx, rsi ; call r14
0x00000200001350c0 : add esi, r15d ; ret
0x000002000004e8f7 : add esp, 0x10 ; pop rbx ; ret
0x000002000003f1e5 : add esp, 0x10 ; pop rdi ; ret
0x000002000014aa55 : add esp, 0x10 ; ret
0x00000200001c492d : add esp, 0x100 ; pop rbp ; ret
0x0000020000088320 : add esp, 0x100 ; pop rbx ; ret
0x00000200000ec737 : add esp, 0x100 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001b01c3 : add esp, 0x100 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000043148 : add esp, 0x108 ; ret
0x000002000063785d : add esp, 0x110 ; pop rbp ; ret
0x00000200001ea8dc : add esp, 0x110 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000051f67e : add esp, 0x110 ; pop rdi ; ret
0x0000020000540019 : add esp, 0x120 ; pop rbp ; ret
0x00000200001a828b : add esp, 0x130 ; pop rbp ; ret
0x00000200001f26cf : add esp, 0x130 ; pop rbx ; ret
0x00000200003e7e12 : add esp, 0x130 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000043e91a : add esp, 0x130 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000010b604 : add esp, 0x138 ; ret
0x0000020000146680 : add esp, 0x138 ; sti ; ret
0x0000020000026f7a : add esp, 0x140 ; pop r15 ; ret
0x000002000063c88b : add esp, 0x140 ; pop rbp ; ret
0x00000200005ef643 : add esp, 0x140 ; pop rbx ; ret
0x000002000078444a : add esp, 0x140 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200006a974d : add esp, 0x140 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000067f0e7 : add esp, 0x140 ; pop rdi ; ret
0x000002000008e3e8 : add esp, 0x148 ; pop r14 ; pop rbp ; ret
0x0000020000002a92 : add esp, 0x148 ; ret
0x00000200001ea04b : add esp, 0x150 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000052cf26 : add esp, 0x150 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000043945a : add esp, 0x158 ; pop r14 ; pop rbp ; ret
0x0000020000042c7f : add esp, 0x158 ; ret
0x000002000001ff30 : add esp, 0x160 ; pop rbp ; ret
0x000002000004016a : add esp, 0x160 ; pop rdi ; ret
0x0000020000537b88 : add esp, 0x170 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000618bb4 : add esp, 0x170 ; pop rsi ; ret
0x000002000011fff7 : add esp, 0x178 ; ret
0x00000200000c31f3 : add esp, 0x18 ; ret
0x00000200004d9596 : add esp, 0x180 ; pop rbx ; ret
0x00000200003a92d7 : add esp, 0x190 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001f502a : add esp, 0x190 ; pop rdi ; ret
0x000002000063b7ea : add esp, 0x198 ; ret
0x000002000063edfb : add esp, 0x1a0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000f4f38 : add esp, 0x1a8 ; ret
0x000002000005148b : add esp, 0x1b0 ; pop rbp ; ret
0x0000020000477ddb : add esp, 0x1b0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001ef3d0 : add esp, 0x1c0 ; pop rbx ; ret
0x00000200006414a6 : add esp, 0x1c0 ; pop rdi ; ret
0x0000020000114c2e : add esp, 0x1c8 ; ret
0x00000200000397fc : add esp, 0x1f0 ; pop rdi ; ret
0x0000020000085696 : add esp, 0x1f8 ; pop r12 ; pop rbp ; ret
0x000002000064b007 : add esp, 0x20 ; pop r12 ; ret
0x000002000009b190 : add esp, 0x20 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000475905 : add esp, 0x20 ; pop r14 ; jmp 0x2000009d698
0x000002000049b7a6 : add esp, 0x20 ; pop r14 ; jmp 0x200000c1b38
0x00000200006bc34c : add esp, 0x20 ; pop r14 ; jmp rax
0x00000200000b1f3c : add esp, 0x20 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200000320f4 : add esp, 0x20 ; pop r14 ; pop r13 ; pop r12 ; ret
0x000002000012197d : add esp, 0x20 ; pop r14 ; pop r13 ; pop rdi ; ret
0x0000020000084918 : add esp, 0x20 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000452c6 : add esp, 0x20 ; pop r14 ; pop rdi ; pop rcx ; ret
0x0000020000213c70 : add esp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000002c3ed : add esp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000399f57 : add esp, 0x20 ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000086348 : add esp, 0x20 ; pop r14 ; pop rsi ; pop rbx ; ret
0x0000020000008e83 : add esp, 0x20 ; pop r14 ; ret
0x000002000045f3f9 : add esp, 0x20 ; pop r15 ; pop r12 ; pop rbp ; ret
0x00000200000d2f04 : add esp, 0x20 ; pop r15 ; pop r12 ; pop rbx ; ret
0x00000200000e34e6 : add esp, 0x20 ; pop r15 ; pop r12 ; pop rdi ; ret
0x0000020000538867 : add esp, 0x20 ; pop r15 ; pop r13 ; pop rdi ; ret
0x00000200000072db : add esp, 0x20 ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000001f799 : add esp, 0x20 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200000858dd : add esp, 0x20 ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200003f20a9 : add esp, 0x20 ; pop r15 ; pop r14 ; pop rbx ; ret
0x00000200001112f3 : add esp, 0x20 ; pop r15 ; pop r14 ; pop rcx ; ret
0x0000020000002f60 : add esp, 0x20 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200003b1e1d : add esp, 0x20 ; pop r15 ; pop r14 ; pop rsi ; ret
0x00000200004bb3df : add esp, 0x20 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000000a41a : add esp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000001fa03 : add esp, 0x20 ; pop r15 ; ret
0x0000020000011122 : add esp, 0x20 ; pop rbp ; ret
0x000002000049cdf3 : add esp, 0x20 ; pop rbx ; jmp 0x200000c1b37
0x000002000007b7d7 : add esp, 0x20 ; pop rbx ; jmp 0x200000c7a26
0x00000200004c1b3b : add esp, 0x20 ; pop rbx ; jmp 0x200000e7297
0x00000200004ee8bf : add esp, 0x20 ; pop rbx ; jmp 0x20000117683
0x000002000004dd83 : add esp, 0x20 ; pop rbx ; jmp rax
0x00000200000029c7 : add esp, 0x20 ; pop rbx ; ret
0x0000020000032394 : add esp, 0x20 ; pop rcx ; ret
0x000002000020efa0 : add esp, 0x20 ; pop rdi ; jmp 0x2000007b2aa
0x000002000049991f : add esp, 0x20 ; pop rdi ; jmp 0x200000bc2a7
0x0000020000602a25 : add esp, 0x20 ; pop rdi ; jmp 0x20000231017
0x00000200000f4b8d : add esp, 0x20 ; pop rdi ; jmp rax
0x000002000004c39a : add esp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000054c0b : add esp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000002594 : add esp, 0x20 ; pop rdi ; ret
0x0000020000497993 : add esp, 0x20 ; pop rsi ; jmp 0x200000b9437
0x0000020000037c71 : add esp, 0x20 ; pop rsi ; ret
0x0000020000399291 : add esp, 0x208 ; ret
0x0000020000692577 : add esp, 0x210 ; pop rdi ; ret
0x00000200006642ae : add esp, 0x220 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000744c25 : add esp, 0x230 ; pop rdi ; ret
0x00000200002088d0 : add esp, 0x240 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000039a657 : add esp, 0x240 ; pop rdi ; ret
0x000002000019d3c2 : add esp, 0x248 ; pop r15 ; pop rbp ; ret
0x000002000065ad48 : add esp, 0x250 ; pop rbp ; ret
0x0000020000657f22 : add esp, 0x250 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006582f8 : add esp, 0x260 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000051a196 : add esp, 0x260 ; pop rdi ; ret
0x00000200005defe8 : add esp, 0x270 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005fe563 : add esp, 0x270 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200003f0930 : add esp, 0x270 ; pop rdi ; ret
0x0000020000768ca9 : add esp, 0x28 ; jmp 0x200000ece8b
0x000002000069793e : add esp, 0x28 ; jmp qword ptr [r10]
0x000002000004cb84 : add esp, 0x28 ; pop r14 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000049e6d4 : add esp, 0x28 ; pop r15 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200004b9ea3 : add esp, 0x28 ; pop r15 ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000badb7 : add esp, 0x28 ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000026875 : add esp, 0x28 ; pop r15 ; pop r14 ; ret
0x00000200004451cd : add esp, 0x28 ; pop r15 ; pop rsi ; ret
0x00000200000f0276 : add esp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200000d8e25 : add esp, 0x28 ; pop rdi ; pop rbx ; ret
0x0000020000019d41 : add esp, 0x28 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000011a6ea : add esp, 0x28 ; pop rdi ; pop rsi ; ret
0x00000200003eff5a : add esp, 0x28 ; pop rsi ; pop rbp ; ret
0x00000200000b1712 : add esp, 0x28 ; pop rsi ; pop rbx ; ret
0x00000200000023bf : add esp, 0x28 ; ret
0x000002000076bd5f : add esp, 0x290 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003bc3ef : add esp, 0x2a0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003df8b1 : add esp, 0x2a0 ; pop rdi ; ret
0x0000020000415d36 : add esp, 0x2d0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004d90cf : add esp, 0x2e0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000d0f6c : add esp, 0x30 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000013f6ce : add esp, 0x30 ; pop r13 ; ret
0x00000200000e71b8 : add esp, 0x30 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200007832c6 : add esp, 0x30 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200006ba261 : add esp, 0x30 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000b3dfc : add esp, 0x30 ; pop r14 ; pop rbp ; pop rbx ; ret
0x0000020000012ba4 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004ba6cd : add esp, 0x30 ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200003a00d7 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rcx ; ret
0x00000200000b2996 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200003cd1df : add esp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000001aa61 : add esp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000460559 : add esp, 0x30 ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000000ddfb : add esp, 0x30 ; pop r14 ; ret
0x000002000012431e : add esp, 0x30 ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200000129ae : add esp, 0x30 ; pop r15 ; pop r14 ; pop r12 ; ret
0x00000200000517be : add esp, 0x30 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200000e6fd4 : add esp, 0x30 ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200001bf979 : add esp, 0x30 ; pop r15 ; pop r14 ; pop rcx ; ret
0x000002000000da30 : add esp, 0x30 ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000026151 : add esp, 0x30 ; pop r15 ; pop rdi ; pop rbp ; ret
0x0000020000085b3d : add esp, 0x30 ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000445317 : add esp, 0x30 ; pop r15 ; pop rsi ; pop rbx ; ret
0x0000020000068024 : add esp, 0x30 ; pop r15 ; ret
0x000002000004a5cb : add esp, 0x30 ; pop rbp ; ret
0x00000200006cc79d : add esp, 0x30 ; pop rbx ; jmp r10
0x00000200006cc7a5 : add esp, 0x30 ; pop rbx ; jmp r8
0x000002000001fc75 : add esp, 0x30 ; pop rbx ; ret
0x0000020000230e48 : add esp, 0x30 ; pop rcx ; ret
0x0000020000414daa : add esp, 0x30 ; pop rdi ; jmp 0x20000231016
0x00000200006b8cc2 : add esp, 0x30 ; pop rdi ; jmp rax
0x00000200000c2b31 : add esp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000127ed : add esp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000005757c : add esp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000002b3f : add esp, 0x30 ; pop rdi ; ret
0x000002000002d49a : add esp, 0x30 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000c271c : add esp, 0x30 ; pop rsi ; ret
0x0000020000074b2c : add esp, 0x308 ; ret
0x000002000065dc26 : add esp, 0x320 ; pop rdi ; ret
0x00000200006cc896 : add esp, 0x38 ; jmp r8
0x00000200006cc6ae : add esp, 0x38 ; jmp r9
0x00000200006cc6b5 : add esp, 0x38 ; jmp rax
0x000002000004ab20 : add esp, 0x38 ; pop r12 ; pop rbx ; ret
0x00000200003f1dc3 : add esp, 0x38 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200003a22d8 : add esp, 0x38 ; pop r13 ; pop r12 ; pop rbp ; pop rbx ; ret
0x00000200003a733e : add esp, 0x38 ; pop r13 ; pop rbp ; ret
0x0000020000047848 : add esp, 0x38 ; pop r13 ; pop rdi ; ret
0x000002000010d277 : add esp, 0x38 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000c295d : add esp, 0x38 ; pop r14 ; pop rdi ; ret
0x0000020000004cf5 : add esp, 0x38 ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000053639 : add esp, 0x38 ; pop r15 ; pop r14 ; pop rsi ; pop rbx ; ret
0x00000200000870e7 : add esp, 0x38 ; pop r15 ; pop rbx ; ret
0x00000200000baaa5 : add esp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000647a36 : add esp, 0x38 ; pop rdi ; pop rbp ; ret
0x00000200000b0a2d : add esp, 0x38 ; pop rdi ; pop rbx ; ret
0x0000020000153c4c : add esp, 0x38 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004edf76 : add esp, 0x38 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000e6a3 : add esp, 0x38 ; ret
0x0000020000669aff : add esp, 0x390 ; pop rdi ; ret
0x000002000065fac2 : add esp, 0x3a0 ; pop rbp ; ret
0x0000020000536e82 : add esp, 0x3b8 ; ret
0x00000200000bb195 : add esp, 0x40 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000bafd0 : add esp, 0x40 ; pop r12 ; ret
0x00000200003bb63c : add esp, 0x40 ; pop r13 ; ret
0x0000020000105929 : add esp, 0x40 ; pop r14 ; jmp 0x20000051bff
0x00000200004dff28 : add esp, 0x40 ; pop r14 ; pop r12 ; pop rbp ; ret
0x0000020000004fe7 : add esp, 0x40 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200005fa107 : add esp, 0x40 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200003ebd69 : add esp, 0x40 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200004d1c27 : add esp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000155361 : add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000373e3 : add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000002e8f2 : add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000007f30 : add esp, 0x40 ; pop r14 ; ret
0x00000200004e5d6f : add esp, 0x40 ; pop r15 ; pop r12 ; pop rdi ; ret
0x000002000003560c : add esp, 0x40 ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000001f00c : add esp, 0x40 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200000ff4ad : add esp, 0x40 ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200000992eb : add esp, 0x40 ; pop r15 ; pop r14 ; pop rbx ; ret
0x00000200000070c1 : add esp, 0x40 ; pop r15 ; pop r14 ; pop rdi ; ret
0x000002000044c652 : add esp, 0x40 ; pop r15 ; pop r14 ; pop rsi ; ret
0x0000020000511907 : add esp, 0x40 ; pop r15 ; pop rbx ; pop rbp ; ret
0x00000200000b1beb : add esp, 0x40 ; pop r15 ; pop rdi ; pop rbx ; ret
0x0000020000491145 : add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000074e1eb : add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000039c784 : add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200000ad677 : add esp, 0x40 ; pop r15 ; pop rsi ; pop rbx ; ret
0x000002000001e370 : add esp, 0x40 ; pop r15 ; ret
0x000002000008522f : add esp, 0x40 ; pop rbp ; ret
0x00000200004296c2 : add esp, 0x40 ; pop rbx ; jmp r10
0x00000200000062c8 : add esp, 0x40 ; pop rbx ; ret
0x000002000015541a : add esp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000059af0 : add esp, 0x40 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000020bb6 : add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000027214 : add esp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000008bc4d : add esp, 0x40 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000000648b : add esp, 0x40 ; pop rdi ; ret
0x0000020000086ae0 : add esp, 0x40 ; pop rsi ; ret
0x0000020000781e1a : add esp, 0x460 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000bb206 : add esp, 0x48 ; pop r12 ; pop rbx ; ret
0x000002000005f761 : add esp, 0x48 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000d8167 : add esp, 0x48 ; pop r13 ; pop rbx ; ret
0x0000020000118d37 : add esp, 0x48 ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000008857 : add esp, 0x48 ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000043c525 : add esp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000041d194 : add esp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000c63b1 : add esp, 0x48 ; pop r14 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000047903a : add esp, 0x48 ; pop r15 ; pop r12 ; ret
0x00000200000d6252 : add esp, 0x48 ; pop r15 ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000d954e : add esp, 0x48 ; pop r15 ; pop rbp ; ret
0x000002000005716b : add esp, 0x48 ; pop r15 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000055b6ad : add esp, 0x48 ; pop rbp ; pop rbx ; ret
0x0000020000132200 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000020000152c06 : add esp, 0x48 ; pop rdi ; pop rbp ; ret
0x00000200000c8e8b : add esp, 0x48 ; pop rdi ; pop rbx ; ret
0x00000200003b118f : add esp, 0x48 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000021e1f : add esp, 0x48 ; pop rdi ; pop rsi ; ret
0x00000200001239e8 : add esp, 0x48 ; pop rsi ; pop rbx ; ret
0x000002000000c14d : add esp, 0x48 ; ret
0x0000020000088968 : add esp, 0x4b0 ; pop rbp ; ret
0x00000200001338ed : add esp, 0x4d8 ; ret
0x000002000014e434 : add esp, 0x50 ; call r10
0x0000020000495d10 : add esp, 0x50 ; pop r13 ; pop r12 ; pop rdi ; ret
0x000002000021608a : add esp, 0x50 ; pop r14 ; pop r13 ; pop r12 ; ret
0x000002000005ae46 : add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200002049ad : add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004fecc7 : add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b9188 : add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000043c4cf : add esp, 0x50 ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000040a62 : add esp, 0x50 ; pop r14 ; ret
0x0000020000089990 : add esp, 0x50 ; pop r15 ; pop r14 ; pop r12 ; ret
0x00000200000bc65e : add esp, 0x50 ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000631c5e : add esp, 0x50 ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000002741d : add esp, 0x50 ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003d477a : add esp, 0x50 ; pop r15 ; ret
0x000002000003a9ac : add esp, 0x50 ; pop rbp ; ret
0x000002000001784f : add esp, 0x50 ; pop rbx ; ret
0x0000020000558fc4 : add esp, 0x50 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200004ef4d0 : add esp, 0x50 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000a7e8c : add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001d95f9 : add esp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000016f94 : add esp, 0x50 ; pop rdi ; ret
0x0000020000499315 : add esp, 0x50 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000003037e : add esp, 0x50 ; pop rsi ; ret
0x00000200001f30d7 : add esp, 0x518 ; ret
0x0000020000556e3b : add esp, 0x58 ; pop r13 ; pop rbp ; ret
0x00000200003f51fb : add esp, 0x58 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000045def8 : add esp, 0x58 ; pop r15 ; pop r13 ; pop rdi ; pop rbx ; ret
0x00000200000e69ec : add esp, 0x58 ; pop r15 ; pop r13 ; ret
0x00000200006775fe : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x000002000020980b : add esp, 0x58 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000052871a : add esp, 0x58 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000494a7 : add esp, 0x58 ; ret
0x000002000007934e : add esp, 0x60 ; pop r12 ; ret
0x00000200003c8fa2 : add esp, 0x60 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000267ae : add esp, 0x60 ; pop r13 ; ret
0x0000020000067992 : add esp, 0x60 ; pop r14 ; pop r13 ; pop r12 ; ret
0x00000200001b99d5 : add esp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200003e1597 : add esp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000001c334 : add esp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000062c61f : add esp, 0x60 ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000066fab3 : add esp, 0x60 ; pop r15 ; pop r12 ; pop rdi ; ret
0x0000020000097e89 : add esp, 0x60 ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000504a0d : add esp, 0x60 ; pop r15 ; pop rdi ; pop rbx ; ret
0x00000200000c217e : add esp, 0x60 ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000010ab42 : add esp, 0x60 ; pop r15 ; pop rsi ; pop rbp ; ret
0x000002000000ecf2 : add esp, 0x60 ; pop rbp ; ret
0x00000200000362ed : add esp, 0x60 ; pop rbx ; ret
0x0000020000133a71 : add esp, 0x60 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000021b053 : add esp, 0x60 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000124552 : add esp, 0x60 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000030b69 : add esp, 0x60 ; pop rdi ; ret
0x00000200000569af : add esp, 0x60 ; pop rsi ; ret
0x00000200006556f9 : add esp, 0x630 ; pop rdi ; ret
0x00000200000471f5 : add esp, 0x648 ; ret
0x00000200000879a7 : add esp, 0x68 ; pop r13 ; pop rbp ; ret
0x00000200000d73c8 : add esp, 0x68 ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000133ebe : add esp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000020000109fb1 : add esp, 0x68 ; pop rdi ; pop rbx ; ret
0x00000200005e51fd : add esp, 0x68 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000014018e : add esp, 0x68 ; pop rdi ; pop rsi ; ret
0x0000020000064c85 : add esp, 0x68 ; pop rsi ; pop rbx ; ret
0x0000020000025fb9 : add esp, 0x68 ; ret
0x00000200004e3bad : add esp, 0x70 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000893f : add esp, 0x70 ; pop r13 ; ret
0x000002000008766c : add esp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000020e8dc : add esp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200005e3cfb : add esp, 0x70 ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000491577 : add esp, 0x70 ; pop r15 ; pop r12 ; pop rbp ; ret
0x00000200004ed2e3 : add esp, 0x70 ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000668bb3 : add esp, 0x70 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000000868d : add esp, 0x70 ; pop rbp ; ret
0x0000020000116526 : add esp, 0x70 ; pop rbx ; ret
0x0000020000108a2b : add esp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000049de0 : add esp, 0x70 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000409952 : add esp, 0x70 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000111a7d : add esp, 0x70 ; pop rdi ; ret
0x000002000077ff7c : add esp, 0x70 ; pop rsi ; ret
0x00000200004a5148 : add esp, 0x78 ; pop r15 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000067d57 : add esp, 0x78 ; pop r15 ; pop rbx ; ret
0x000002000008c093 : add esp, 0x78 ; pop rdi ; pop rbp ; ret
0x00000200000b142b : add esp, 0x78 ; pop rdi ; pop rbx ; ret
0x0000020000005951 : add esp, 0x78 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000bdd16 : add esp, 0x78 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000025032 : add esp, 0x78 ; ret
0x00000200001172d7 : add esp, 0x80 ; pop rbp ; ret
0x00000200000f5184 : add esp, 0x80 ; pop rbx ; ret
0x0000020000536333 : add esp, 0x80 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000133010 : add esp, 0x80 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200002072a1 : add esp, 0x80 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000005640 : add esp, 0x80 ; pop rdi ; ret
0x0000020000020d91 : add esp, 0x80 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000065a832 : add esp, 0x840 ; pop rbp ; ret
0x000002000001c6ee : add esp, 0x88 ; pop r14 ; pop rbp ; ret
0x00000200000d9247 : add esp, 0x88 ; pop r14 ; pop rsi ; ret
0x000002000007a5cf : add esp, 0x88 ; pop r15 ; pop rsi ; ret
0x00000200000b0e28 : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000200000c8fba : add esp, 0x88 ; ret
0x0000020000453b78 : add esp, 0x90 ; pop r12 ; ret
0x00000200000b2ac0 : add esp, 0x90 ; pop rbp ; ret
0x000002000046849d : add esp, 0x90 ; pop rbx ; ret
0x00000200001ca6f7 : add esp, 0x90 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001edc57 : add esp, 0x90 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006c0a63 : add esp, 0x90 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000008fc9f : add esp, 0x90 ; pop rdi ; ret
0x000002000001d5b9 : add esp, 0x90 ; pop rsi ; ret
0x0000020000017ec8 : add esp, 0x98 ; pop r15 ; pop rbp ; ret
0x00000200000d17da : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x000002000039c5bf : add esp, 0x98 ; ret
0x000002000001b0e7 : add esp, 0xa0 ; pop rbp ; ret
0x000002000011757d : add esp, 0xa0 ; pop rbx ; ret
0x00000200003ea99f : add esp, 0xa0 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001b2296 : add esp, 0xa0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001b0a75 : add esp, 0xa0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001318b2 : add esp, 0xa0 ; pop rdi ; ret
0x00000200000cd61c : add esp, 0xa0 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200001cae2d : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000002000065b4d3 : add esp, 0xa8 ; pop rdi ; pop rbx ; ret
0x0000020000057b19 : add esp, 0xa8 ; ret
0x000002000046d200 : add esp, 0xa90 ; pop rdi ; ret
0x0000020000115888 : add esp, 0xb0 ; pop rbp ; ret
0x00000200001b0872 : add esp, 0xb0 ; pop rbx ; ret
0x00000200001ea704 : add esp, 0xb0 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000fae3c : add esp, 0xb0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001245ba : add esp, 0xb0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000104ebc : add esp, 0xb0 ; pop rdi ; ret
0x0000020000541443 : add esp, 0xb0 ; pop rsi ; ret
0x0000020000496937 : add esp, 0xb8 ; pop r13 ; pop rdi ; ret
0x00000200001ca376 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000002000065b404 : add esp, 0xb8 ; pop rdi ; pop rbx ; ret
0x00000200001141b2 : add esp, 0xb8 ; ret
0x0000020000050327 : add esp, 0xc0 ; pop rbp ; ret
0x00000200001af940 : add esp, 0xc0 ; pop rbx ; ret
0x00000200000a2573 : add esp, 0xc0 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000231f49 : add esp, 0xc0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000016e8d : add esp, 0xc0 ; pop rdi ; ret
0x000002000002c12d : add esp, 0xc0 ; pop rsi ; ret
0x0000020000493d73 : add esp, 0xc8 ; pop r14 ; pop rbp ; ret
0x000002000051e931 : add esp, 0xc8 ; ret
0x00000200001af2e9 : add esp, 0xce8 ; ret
0x000002000004226c : add esp, 0xd0 ; pop rbp ; ret
0x0000020000143b54 : add esp, 0xd0 ; pop rbx ; ret
0x000002000039cb29 : add esp, 0xd0 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000011b6f5 : add esp, 0xd0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200002073ca : add esp, 0xd0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000060641e : add esp, 0xd0 ; pop rdi ; ret
0x0000020000137d10 : add esp, 0xd8 ; ret
0x00000200001d3f3b : add esp, 0xe0 ; pop rbp ; ret
0x00000200001c1a5a : add esp, 0xe0 ; pop rbx ; ret
0x0000020000203860 : add esp, 0xe0 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200006a994f : add esp, 0xe0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005106eb : add esp, 0xe0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001cf3c8 : add esp, 0xe0 ; pop rdi ; ret
0x0000020000470584 : add esp, 0xe0 ; pop rsi ; ret
0x00000200000ec46a : add esp, 0xe8 ; ret
0x0000020000104e86 : add esp, 0xf0 ; pop rbp ; ret
0x000002000003508a : add esp, 0xf0 ; pop rbx ; ret
0x000002000000a564 : add esp, 0xf0 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000100f08 : add esp, 0xf0 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000325d0 : add esp, 0xf0 ; pop rdi ; ret
0x000002000076dcba : add esp, 0xf8 ; ret
0x0000020000230c90 : add esp, 8 ; jmp r8
0x00000200000814db : add esp, 8 ; ret
0x0000020000683dc1 : add esp, dword ptr [rbx] ; ret 0x3c8d
0x000002000044e399 : add esp, dword ptr [rbx] ; ret 0xd803
0x0000020000407156 : add esp, dword ptr [rcx + rax] ; ret
0x00000200001648fd : add esp, dword ptr [rdx] ; ret
0x0000020000598367 : add esp, dword ptr [rsi + 0x3b] ; ret 0x4c74
0x000002000077a130 : add esp, dword ptr [rsi + 3] ; ret 0x8348
0x00000200006b29cc : add esp, dword ptr [rsi - 0x77] ; or byte ptr [rax - 0x75], cl ; ret
0x00000200001350cd : add esp, edi ; ret
0x00000200001350cc : add esp, r15d ; ret
0x00000200003fe6a2 : add qword ptr [r10 + 0x18], r8 ; ret
0x00000200004eb313 : add qword ptr [r10 + rcx*8 + 0x10], rax ; mov qword ptr [r10 + 8], rdx ; ret
0x000002000062c390 : add qword ptr [r10], 0x18 ; ret
0x000002000062c44f : add qword ptr [r10], 0x28 ; ret
0x000002000000946b : add qword ptr [r11 - 0x832dc3b], rcx ; shl byte ptr [rbx], 1 ; ret
0x0000020000469830 : add qword ptr [r11], r12 ; ret 0xc23b
0x0000020000483689 : add qword ptr [r11], rbp ; ret
0x00000200003f2681 : add qword ptr [r8 + 0x10], r9 ; add rsp, 0x28 ; ret
0x000002000022baca : add qword ptr [r8 + 0x33], rcx ; ret 0x8948
0x000002000074086f : add qword ptr [r8 + 0x33], rcx ; ret 0xd233
0x00000200000e83c2 : add qword ptr [r8 - 0x75], rcx ; ret
0x00000200004e19b5 : add qword ptr [r8 - 0x7d], r9 ; ret 0x4102
0x00000200001f6312 : add qword ptr [r8], 2 ; ret
0x00000200000e29c5 : add qword ptr [r8], r8 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001de612 : add qword ptr [r8], r8 ; add byte ptr [rax - 9], cl ; ret
0x0000020000142b95 : add qword ptr [r8], r8 ; add cl, ch ; loop 0x20000142b57 ; add byte ptr [rax], al ; ret
0x0000020000033baa : add qword ptr [r9 + rcx], rax ; ret
0x00000200001f9a37 : add qword ptr [r9 - 0x7cb7fcbd], rcx ; ret
0x00000200005388cd : add qword ptr [rax + r9*4 + 0x42], rax ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4d04
0x00000200001f77ec : add qword ptr [rax - 0x75], rcx ; ret 0x49f0
0x000002000058042b : add qword ptr [rax - 0x75], rcx ; ret 0x950f
0x00000200003f7b38 : add qword ptr [rax], r8 ; add al, ch ; ret
0x0000020000040380 : add qword ptr [rax], r8 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000631ea : add qword ptr [rax], rax ; add byte ptr [rax - 0x75], cl ; ret 0x8d4c
0x00000200005b154f : add qword ptr [rax], rax ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000008e3ea : add qword ptr [rax], rax ; add byte ptr [rcx + 0x5e], al ; pop rbp ; ret
0x00000200000557b1 : add qword ptr [rax], rax ; add byte ptr [rcx + 0x5f], al ; pop r12 ; ret
0x0000020000142ab5 : add qword ptr [rax], rax ; add cl, ch ; ret 0xb3
0x00000200004ef1d7 : add qword ptr [rax], rax ; add rsp, 0x38 ; ret
0x0000020000762d1a : add qword ptr [rcx + 0x18], rax ; add rsp, 0x28 ; ret
0x0000020000762bf6 : add qword ptr [rcx + 0x18], rax ; add rsp, 0x38 ; ret
0x00000200000790ab : add qword ptr [rcx + 0x70], r8 ; ret
0x00000200001f6eef : add qword ptr [rcx - 0x7d], rax ; ret 0x4402
0x0000020000763081 : add qword ptr [rdx + 0x18], rax ; add rsp, 0x28 ; ret
0x00000200004e8536 : add qword ptr [rdx + 0x22c18a03], r14 ; ret 0xc23a
0x00000200000fe666 : add qword ptr [rdx + 8], -8 ; ret
0x0000020000137c75 : add qword ptr [rdx], 2 ; add rsp, 0x38 ; ret
0x0000020000044240 : add qword ptr [rdx], r8 ; ret
0x00000200001fa863 : add qword ptr [rdx], rcx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000602a88 : add r10, rcx ; jmp r10
0x00000200001bebee : add r10d, -1 ; jne 0x200001bebc6 ; ret
0x000002000068a1db : add r12b, byte ptr [rsi + 0x3b] ; ret
0x00000200000e37b3 : add r12b, byte ptr [rsi - 0x77] ; or cl, byte ptr [r8 - 0x75] ; ret
0x00000200006335df : add r12b, byte ptr [rsi - 9] ; fadd dword ptr [rcx - 0x75] ; ret 0xc91a
0x00000200003cd787 : add r13b, al ; ret 0x879
0x00000200007427b2 : add r13b, byte ptr [r10] ; ret
0x0000020000172e4b : add r13b, byte ptr [r11] ; ret
0x00000200000cc681 : add r13b, byte ptr [r11] ; ret 0x975
0x00000200001969c9 : add r13b, byte ptr [r8 + 0xf097504] ; mov dh, 0x87 ; ret
0x00000200000d52a9 : add r13b, byte ptr [r8 + 0xf397504] ; mov dh, 0x87 ; ret
0x000002000005c6e6 : add r14, r14 ; ret
0x000002000042daf7 : add r14b, byte ptr [rdx + r8 - 0x75] ; ret 0x8545
0x0000020000191bb6 : add r14b, r14b ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x0000020000453af0 : add r15, 0x30 ; jmp 0x20000453b11
0x00000200005de10d : add r15b, dil ; ret
0x00000200000cb076 : add r15b, dil ; ret 0x348
0x00000200006510b5 : add r15b, dil ; ret 0x8b44
0x00000200004c733a : add r15b, r15b ; ret
0x00000200000c9a20 : add r15b, r15b ; ret 0x34c
0x0000020000666f8e : add r15b, r15b ; ret 0x8348
0x0000020000228c32 : add r15b, r15b ; ret 0x8b4c
0x000002000022644f : add r15d, dword ptr [rdx] ; ret
0x00000200006bc3fb : add r15d, r14d ; mov edx, r15d ; call rdi
0x00000200001f8b1f : add r8, 0x10 ; jmp 0x200001f8b49
0x00000200001f92db : add r8, 0x10 ; jmp 0x200001f9305
0x00000200001f8b15 : add r8, 0x14 ; jmp 0x200001f8b49
0x00000200001f92d1 : add r8, 0x14 ; jmp 0x200001f9305
0x00000200001f8b0b : add r8, 0x18 ; jmp 0x200001f8b49
0x00000200001f92c7 : add r8, 0x18 ; jmp 0x200001f9305
0x00000200001f8b01 : add r8, 0x1c ; jmp 0x200001f8b49
0x00000200001f92bd : add r8, 0x1c ; jmp 0x200001f9305
0x000002000021b767 : add r8, 0x38 ; cmp r8, rdx ; jl 0x2000021b759 ; ret
0x00000200001f8b29 : add r8, 0xc ; jmp 0x200001f8b49
0x00000200001f92e5 : add r8, 0xc ; jmp 0x200001f9305
0x00000200001f8b66 : add r8, 2 ; jmp 0x200001f8b90
0x000002000012858c : add r8, 8 ; cmp r9d, 2 ; jb 0x20000128561 ; jmp 0x2000012853f
0x00000200001f8b33 : add r8, 8 ; jmp 0x200001f8b49
0x00000200001f92ef : add r8, 8 ; jmp 0x200001f9305
0x000002000006b4c7 : add r8, qword ptr [r8] ; add bh, bh ; ret 0x5489
0x000002000005dfda : add r8, qword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000361b4 : add r8, r10 ; jmp 0x2000003617f
0x0000020000133328 : add r8, r15 ; call r8
0x000002000067123c : add r8, rax ; mov qword ptr [rsp + 0x50], r8 ; inc edx ; jmp 0x2000067121d
0x0000020000622ec5 : add r8, rax ; shl r8, 3 ; call 0x2000014f189
0x0000020000209c82 : add r8, rcx ; jmp r8
0x00000200004e001d : add r8, rcx ; sub r10, 1 ; jne 0x200004dfff8 ; ret
0x00000200004443a4 : add r8, rdx ; jmp 0x20000444396
0x000002000044c962 : add r8, rdx ; jmp 0x2000044c949
0x000002000044c95d : add r8, rdx ; jmp 0x2000044c94f
0x0000020000507c1b : add r8b, byte ptr [r13 + r9*4 + 0x42] ; adc al, ch ; jbe 0x20000507c0c ; ret 0x33ff
0x00000200004eb57d : add r8b, byte ptr [r13 + r9*4 + 0x6f] ; add dword ptr [rdi], ecx ; test dword ptr [rbx], edx ; ret
0x00000200004941ab : add r8b, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000055ebc : add r8b, byte ptr [rax] ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000065cc46 : add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x2000065cc42
0x0000020000222c52 : add r8d, -1 ; jmp 0x20000222c45
0x000002000012356e : add r8d, -1 ; jne 0x20000123551 ; ret
0x000002000013e0c0 : add r8d, -1 ; jne 0x2000013e0b8 ; mov rax, rdx ; jmp 0x2000013e0d5
0x000002000013ee7c : add r8d, -1 ; jne 0x2000013ee74 ; mov rax, rdx ; jmp 0x2000013ee91
0x000002000013f192 : add r8d, -1 ; jne 0x2000013f18a ; mov rax, rdx ; jmp 0x2000013f1a7
0x000002000013f576 : add r8d, -1 ; jne 0x2000013f56e ; mov rax, rdx ; jmp 0x2000013f58b
0x0000020000221ced : add r8d, -1 ; jne 0x20000221ce5 ; mov rax, rdx ; jmp 0x20000221d02
0x0000020000222740 : add r8d, -1 ; jne 0x20000222738 ; mov rax, rdx ; jmp 0x20000222755
0x0000020000222989 : add r8d, -1 ; jne 0x20000222981 ; mov rax, rdx ; jmp 0x2000022299e
0x0000020000222d95 : add r8d, -1 ; jne 0x20000222d8d ; mov rax, rdx ; jmp 0x20000222daa
0x00000200002230cb : add r8d, -1 ; jne 0x200002230c3 ; mov rax, rdx ; jmp 0x200002230e0
0x0000020000223360 : add r8d, -1 ; jne 0x20000223358 ; mov rax, rdx ; jmp 0x20000223375
0x0000020000223488 : add r8d, -1 ; jne 0x20000223480 ; mov rax, rdx ; jmp 0x2000022349d
0x00000200002242fd : add r8d, -1 ; jne 0x200002242f5 ; mov rax, rdx ; jmp 0x20000224312
0x0000020000225790 : add r8d, -1 ; jne 0x2000022578b ; mov rax, rdx ; jmp 0x200002257a5
0x0000020000225a59 : add r8d, -1 ; jne 0x20000225a54 ; mov rax, rdx ; jmp 0x20000225a77
0x0000020000226030 : add r8d, -1 ; jne 0x20000226028 ; mov rax, rdx ; jmp 0x20000226045
0x0000020000226bea : add r8d, -1 ; jne 0x20000226be2 ; mov rax, rdx ; jmp 0x20000226bff
0x0000020000226f06 : add r8d, -1 ; jne 0x20000226efe ; mov rax, rdx ; jmp 0x20000226f1b
0x0000020000229df7 : add r8d, -1 ; jne 0x20000229def ; mov rax, rdx ; jmp 0x20000229e0c
0x000002000022a7df : add r8d, -1 ; jne 0x2000022a7d8 ; mov rax, rdx ; jmp 0x2000022a7f4
0x000002000022b22c : add r8d, -1 ; jne 0x2000022b227 ; mov rax, rdx ; jmp 0x2000022b241
0x000002000022c15c : add r8d, -1 ; jne 0x2000022c154 ; mov rax, rdx ; jmp 0x2000022c171
0x00000200006ab758 : add r8d, -1 ; jne 0x200006ab756 ; ret
0x000002000073133e : add r8d, -1 ; jne 0x20000731335 ; mov rax, rdx ; jmp 0x20000731353
0x0000020000732981 : add r8d, -1 ; jne 0x20000732979 ; mov rax, rdx ; jmp 0x20000732996
0x000002000073a78e : add r8d, -1 ; jne 0x2000073a786 ; mov rax, rdx ; jmp 0x2000073a7a3
0x000002000073b99c : add r8d, -1 ; jne 0x2000073b997 ; mov rax, rdx ; jmp 0x2000073b9b1
0x00000200000c1a5e : add r8d, -8 ; mov dword ptr [rdx + r8*4], r9d ; ret
0x00000200000c1a3d : add r8d, -8 ; mov eax, dword ptr [rdx + r8*4] ; ret
0x00000200000418f9 : add r8d, dword ptr [rbx - 0x74b7f020] ; ret
0x000002000010afc3 : add r8d, ebp ; insd dword ptr [rdi], dx ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x000002000042acab : add r8d, ebp ; out 0x34, al ; ret 0x48ff
0x00000200001d00b7 : add r8d, ebp ; push rdx ; sbb al, 0xec ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001dee47 : add r8d, ebp ; ret 0xeace
0x00000200001f65c2 : add r8d, ecx ; mov qword ptr [rdx], r9 ; mov eax, r8d ; ret
0x000002000017c5d0 : add r9, 8 ; mov ecx, r8d ; inc rdx ; jmp 0x2000017c587
0x0000020000015c1c : add r9, 8 ; mov r8, qword ptr [r9] ; jmp 0x20000015bf0
0x000002000014a9e1 : add r9, r8 ; jmp r9
0x00000200005462b3 : add r9, rdx ; mov al, byte ptr [r9 + rax - 0x80] ; ret
0x000002000046982a : add r9b, byte ptr [r11 + 0x4d8d45c1] ; add dword ptr [rbx], esp ; ret 0xc23b
0x00000200001d9c8f : add r9b, byte ptr [r9 - 0x3f] ; call qword ptr [rax]
0x000002000021a9ff : add r9b, byte ptr [r9 - 0x48f0bafe] ; ret
0x00000200003efe00 : add r9b, byte ptr [rax + 0x2b] ; ret
0x000002000010fced : add r9b, byte ptr [rax - 0x7cb7fdb6] ; ret 0x4903
0x00000200004e7549 : add r9b, byte ptr [rbp + 0x3b662455] ; ret 0x6e72
0x000002000022242a : add r9d, -1 ; jne 0x20000222422 ; mov rax, rdx ; jmp 0x2000022243f
0x00000200002231e6 : add r9d, -1 ; jne 0x200002231de ; mov rax, rdx ; jmp 0x20000223264
0x000002000022b0eb : add r9d, -1 ; jne 0x2000022b0e6 ; mov rax, rdx ; jmp 0x2000022b100
0x000002000022b362 : add r9d, -1 ; jne 0x2000022b35d ; mov rax, rdx ; jmp 0x2000022b380
0x000002000022b96d : add r9d, -1 ; jne 0x2000022b965 ; mov rax, rdx ; jmp 0x2000022b982
0x000002000022f29d : add r9d, -1 ; jne 0x2000022f298 ; mov rax, rdx ; jmp 0x2000022f2b2
0x000002000022f516 : add r9d, -1 ; jne 0x2000022f511 ; mov rax, rdx ; jmp 0x2000022f545
0x0000020000230484 : add r9d, -1 ; jne 0x2000023047d ; mov rax, rdx ; jmp 0x20000230499
0x000002000072c60e : add r9d, -1 ; jne 0x2000072c606 ; mov rax, rdx ; jmp 0x2000072c67e
0x000002000072c9b1 : add r9d, -1 ; jne 0x2000072c9a9 ; mov rax, rdx ; jmp 0x2000072c9c6
0x00000200007311dd : add r9d, -1 ; jne 0x200007311d6 ; mov rax, rdx ; jmp 0x200007311f2
0x0000020000737c91 : add r9d, -1 ; jne 0x20000737c8d ; mov rax, rdx ; jmp 0x20000737ca6
0x00000200001f9dd0 : add r9d, dword ptr [r8 + 3] ; ret
0x000002000004acdb : add r9d, dword ptr [r9 + 3] ; ret
0x0000020000473ab0 : add rax, -0x10 ; ret
0x00000200000441c9 : add rax, -0x20 ; ret
0x000002000048e29c : add rax, -4 ; add rsp, 0x28 ; ret
0x00000200006c8ff0 : add rax, -8 ; ret
0x000002000020c263 : add rax, 0x10 ; add rsp, 0x28 ; ret
0x000002000046dfba : add rax, 0x10 ; ret
0x000002000053cf78 : add rax, 0x18 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003e0b71 : add rax, 0x20 ; ret
0x0000020000110dff : add rax, 0x3600 ; ret
0x0000020000146a4a : add rax, 0x40 ; jne 0x20000146a29 ; sfence ; ret
0x00000200000660f1 : add rax, 0x400 ; add rax, rdx ; ret
0x00000200003b1221 : add rax, 0x608 ; ret
0x000002000076ec5e : add rax, 0x8b8 ; ret
0x00000200000d5c89 : add rax, 0xc0 ; mov qword ptr [r8], rax ; ret
0x00000200004a76b7 : add rax, 0xcc0 ; ret
0x0000020000511c36 : add rax, 2 ; add rsp, 0x28 ; ret
0x00000200000bd3de : add rax, 2 ; lea rax, qword ptr [rcx + rax*4] ; ret
0x000002000063451e : add rax, 2 ; ret
0x0000020000092593 : add rax, 8 ; cmp rax, r8 ; jb 0x20000092579 ; ret
0x000002000063450c : add rax, 8 ; ret
0x00000200001b07d0 : add rax, qword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000cc83b : add rax, qword ptr [rcx + 0x98] ; ret
0x00000200006bd7d6 : add rax, qword ptr [rcx] ; xor eax, eax ; ret
0x0000020000044a3e : add rax, qword ptr [rip + 0x33ac43] ; ret
0x00000200005f1ed3 : add rax, qword ptr [rip - 0x2f80d2] ; ret
0x0000020000435289 : add rax, r10 ; jmp rax
0x000002000003449c : add rax, r8 ; add rsp, 0x38 ; ret
0x000002000001cc19 : add rax, r8 ; jmp rax
0x00000200005e4d25 : add rax, r8 ; mov qword ptr [rdx + 0x48], rax ; ret
0x00000200000844c4 : add rax, r8 ; ret
0x0000020000488e91 : add rax, r9 ; mov dword ptr [r8], edx ; ret
0x00000200000b05f4 : add rax, r9 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200006b7239 : add rax, r9 ; ret
0x0000020000017798 : add rax, rax ; mov qword ptr [r10], rax ; mov eax, ecx ; ret
0x00000200001dd639 : add rax, rax ; ret
0x000002000067ae4d : add rax, rbp ; outsb dx, byte ptr [rsi] ; jmp 0x1ffc3f2f75f
0x000002000061500e : add rax, rbp ; ret
0x0000020000074a77 : add rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011bf57 : add rax, rbx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200003a15a6 : add rax, rcx ; add rsp, 0x38 ; ret
0x0000020000643a92 : add rax, rcx ; cmp rdx, rax ; setae al ; ret
0x0000020000491bde : add rax, rcx ; jmp rax
0x0000020000016a8a : add rax, rcx ; ret
0x00000200000085fc : add rax, rcx ; sub r8, 1 ; jne 0x200000085fe ; ret
0x00000200001f5256 : add rax, rdi ; add rsp, 0x50 ; pop rdi ; ret
0x00000200000100b1 : add rax, rdx ; jmp 0x2000001006c
0x00000200005223a4 : add rax, rdx ; jmp 0x2000052233d
0x000002000052bcff : add rax, rdx ; jmp 0x2000052bd14
0x000002000064f62e : add rax, rdx ; jmp 0x2000064f639
0x000002000001cec8 : add rax, rdx ; jmp rax
0x00000200000660f7 : add rax, rdx ; ret
0x00000200003a215d : add rax, rdx ; sub rcx, rdx ; mov qword ptr [r11], rcx ; ret
0x0000020000230b95 : add rax, rdx ; sub rsp, 0x28 ; call rax
0x0000020000071287 : add rax, rsi ; cmpxchg qword ptr [r9], rcx ; jne 0x200000712a2 ; ret
0x000002000052ca88 : add rbp, 2 ; jmp 0x2000052ca55
0x000002000052ca87 : add rbp, 2 ; jmp 0x2000052ca56
0x00000200007450b6 : add rbp, 8 ; jmp 0x20000745084
0x000002000068824f : add rbx, 2 ; movzx ecx, word ptr [rbx] ; call 0x20000134561
0x000002000019d810 : add rbx, 8 ; jmp 0x2000019d852
0x000002000048e14a : add rbx, r12 ; mov rcx, rbx ; call 0x200000bcd29
0x0000020000074f1c : add rbx, rax ; mov al, byte ptr [rax + rcx*2] ; ret
0x00000200001bb9a8 : add rcx, -0x10 ; mov rax, rcx ; ret
0x00000200003bb728 : add rcx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x200003bb73b ; ret
0x00000200003bb764 : add rcx, 0x20 ; cmp qword ptr [rcx], rcx ; jne 0x200003bb777 ; ret
0x00000200004962f3 : add rcx, 0x48 ; call 0x200000b6c27
0x00000200003a3d1d : add rcx, 0x5800 ; call 0x2000003fffd
0x00000200003c5d8f : add rcx, 0xb40 ; jmp 0x200003c5d62
0x0000020000135828 : add rcx, 2 ; cmp rax, rdx ; jb 0x20000135828 ; ret
0x000002000053e345 : add rcx, 2 ; mov qword ptr [rdx + 0x28], rcx ; ret
0x00000200001340e0 : add rcx, 2 ; test r8, r8 ; jne 0x200001340dd ; ret
0x0000020000512f60 : add rcx, 8 ; add rcx, r9 ; call 0x2000014f189
0x0000020000676155 : add rcx, 8 ; cmp r9d, edx ; jb 0x20000676156 ; ret
0x0000020000048b10 : add rcx, 8 ; cmp rcx, r8 ; jb 0x20000048b0d ; ret
0x000002000007ee84 : add rcx, r10 ; jmp rcx
0x00000200005cd5c4 : add rcx, r12 ; call 0x200000597f5
0x000002000048e24c : add rcx, r12 ; call 0x200000bab46
0x0000020000440d9e : add rcx, r12 ; jmp rcx
0x00000200003d24f9 : add rcx, r13 ; jmp rcx
0x0000020000427cdf : add rcx, r14 ; call 0x20000053c66
0x0000020000020be7 : add rcx, r15 ; jmp rcx
0x000002000016716c : add rcx, r8 ; jmp rcx
0x0000020000116cce : add rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x0000020000642eb1 : add rcx, r8 ; mov r8, rbx ; call 0x2000014f188
0x0000020000512f64 : add rcx, r9 ; call 0x2000014f185
0x00000200004458ed : add rcx, r9 ; jmp rcx
0x00000200006b7233 : add rcx, r9 ; mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x0000020000539d1c : add rcx, rax ; call 0x200000c5f55
0x0000020000405cca : add rcx, rax ; cmp r8d, r9d ; jb 0x20000405cbb ; mov eax, edx ; ret
0x000002000048c99e : add rcx, rbp ; call 0x200000bab46
0x000002000004aecf : add rcx, rbp ; jmp rcx
0x0000020000125a53 : add rcx, rdi ; mov edx, edi ; call 0x20000521d27
0x000002000002c23b : add rcx, rdi ; mov rdi, qword ptr [rsp + 0x10] ; jmp rcx
0x00000200006c1cb4 : add rcx, rdx ; cmp qword ptr [rcx], rax ; jne 0x200006c1cb6 ; ret
0x0000020000076571 : add rcx, rdx ; cmp rcx, r8 ; setbe al ; ret
0x000002000001b99f : add rcx, rdx ; jmp rcx
0x00000200004be216 : add rcx, rsi ; jmp rcx
0x0000020000760b05 : add rdi, rbx ; mov r13d, ebx ; jmp 0x20000760ae1
0x000002000041f1e9 : add rdx, 0x20 ; cmp r9d, r11d ; jb 0x2000041f1df ; ret
0x00000200000125ef : add rdx, 2 ; cmp rdx, rcx ; jb 0x200000125de ; ret
0x0000020000399e97 : add rdx, 8 ; cmp rdx, r8 ; jbe 0x20000399e99 ; ret
0x00000200000a2595 : add rdx, r11 ; jmp rdx
0x000002000017f588 : add rdx, r8 ; jmp rdx
0x00000200001df923 : add rdx, rax ; call 0x2000002bb75
0x00000200001f394b : add rdx, rax ; jmp 0x200001f3917
0x00000200003e934e : add rdx, rbx ; jmp rdx
0x0000020000486c71 : add rdx, rdi ; jmp rdx
0x0000020000134848 : add rsi, r12 ; mov rdx, rsi ; call r14
0x000002000004e8f6 : add rsp, 0x10 ; pop rbx ; ret
0x000002000003f1e4 : add rsp, 0x10 ; pop rdi ; ret
0x000002000014aa54 : add rsp, 0x10 ; ret
0x00000200001c492c : add rsp, 0x100 ; pop rbp ; ret
0x000002000008831f : add rsp, 0x100 ; pop rbx ; ret
0x0000020000043147 : add rsp, 0x108 ; ret
0x000002000063785c : add rsp, 0x110 ; pop rbp ; ret
0x000002000051f67d : add rsp, 0x110 ; pop rdi ; ret
0x0000020000540018 : add rsp, 0x120 ; pop rbp ; ret
0x00000200001a828a : add rsp, 0x130 ; pop rbp ; ret
0x00000200001f26ce : add rsp, 0x130 ; pop rbx ; ret
0x000002000010b603 : add rsp, 0x138 ; ret
0x000002000014667f : add rsp, 0x138 ; sti ; ret
0x0000020000026f79 : add rsp, 0x140 ; pop r15 ; ret
0x000002000063c88a : add rsp, 0x140 ; pop rbp ; ret
0x00000200005ef642 : add rsp, 0x140 ; pop rbx ; ret
0x000002000067f0e6 : add rsp, 0x140 ; pop rdi ; ret
0x0000020000002a91 : add rsp, 0x148 ; ret
0x0000020000042c7e : add rsp, 0x158 ; ret
0x000002000001ff2f : add rsp, 0x160 ; pop rbp ; ret
0x0000020000040169 : add rsp, 0x160 ; pop rdi ; ret
0x0000020000618bb3 : add rsp, 0x170 ; pop rsi ; ret
0x000002000011fff6 : add rsp, 0x178 ; ret
0x00000200000c31f2 : add rsp, 0x18 ; ret
0x00000200004d9595 : add rsp, 0x180 ; pop rbx ; ret
0x00000200001f5029 : add rsp, 0x190 ; pop rdi ; ret
0x000002000063b7e9 : add rsp, 0x198 ; ret
0x00000200000f4f37 : add rsp, 0x1a8 ; ret
0x000002000005148a : add rsp, 0x1b0 ; pop rbp ; ret
0x00000200001ef3cf : add rsp, 0x1c0 ; pop rbx ; ret
0x00000200006414a5 : add rsp, 0x1c0 ; pop rdi ; ret
0x0000020000114c2d : add rsp, 0x1c8 ; ret
0x00000200000397fb : add rsp, 0x1f0 ; pop rdi ; ret
0x000002000064b006 : add rsp, 0x20 ; pop r12 ; ret
0x0000020000475904 : add rsp, 0x20 ; pop r14 ; jmp 0x2000009d699
0x000002000049b7a5 : add rsp, 0x20 ; pop r14 ; jmp 0x200000c1b39
0x00000200006bc34b : add rsp, 0x20 ; pop r14 ; jmp rax
0x00000200000b1f3b : add rsp, 0x20 ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000012197c : add rsp, 0x20 ; pop r14 ; pop r13 ; pop rdi ; ret
0x0000020000084917 : add rsp, 0x20 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000452c5 : add rsp, 0x20 ; pop r14 ; pop rdi ; pop rcx ; ret
0x000002000002c3ec : add rsp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000399f56 : add rsp, 0x20 ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000086347 : add rsp, 0x20 ; pop r14 ; pop rsi ; pop rbx ; ret
0x0000020000008e82 : add rsp, 0x20 ; pop r14 ; ret
0x000002000045f3f8 : add rsp, 0x20 ; pop r15 ; pop r12 ; pop rbp ; ret
0x00000200000d2f03 : add rsp, 0x20 ; pop r15 ; pop r12 ; pop rbx ; ret
0x00000200000e34e5 : add rsp, 0x20 ; pop r15 ; pop r12 ; pop rdi ; ret
0x0000020000538866 : add rsp, 0x20 ; pop r15 ; pop r13 ; pop rdi ; ret
0x00000200000858dc : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200003f20a8 : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rbx ; ret
0x00000200001112f2 : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rcx ; ret
0x0000020000002f5f : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200003b1e1c : add rsp, 0x20 ; pop r15 ; pop r14 ; pop rsi ; ret
0x00000200004bb3de : add rsp, 0x20 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000000a419 : add rsp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000001fa02 : add rsp, 0x20 ; pop r15 ; ret
0x0000020000011121 : add rsp, 0x20 ; pop rbp ; ret
0x000002000049cdf2 : add rsp, 0x20 ; pop rbx ; jmp 0x200000c1b38
0x000002000007b7d6 : add rsp, 0x20 ; pop rbx ; jmp 0x200000c7a27
0x00000200004c1b3a : add rsp, 0x20 ; pop rbx ; jmp 0x200000e7298
0x00000200004ee8be : add rsp, 0x20 ; pop rbx ; jmp 0x20000117684
0x000002000004dd82 : add rsp, 0x20 ; pop rbx ; jmp rax
0x00000200000029c6 : add rsp, 0x20 ; pop rbx ; ret
0x0000020000032393 : add rsp, 0x20 ; pop rcx ; ret
0x000002000020ef9f : add rsp, 0x20 ; pop rdi ; jmp 0x2000007b2ab
0x000002000020ef9e : add rsp, 0x20 ; pop rdi ; jmp 0x2000007b2ac
0x000002000049991e : add rsp, 0x20 ; pop rdi ; jmp 0x200000bc2a8
0x000002000049991d : add rsp, 0x20 ; pop rdi ; jmp 0x200000bc2a9
0x0000020000602a24 : add rsp, 0x20 ; pop rdi ; jmp 0x20000231018
0x00000200000f4b8c : add rsp, 0x20 ; pop rdi ; jmp rax
0x000002000004c399 : add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000054c0a : add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000002593 : add rsp, 0x20 ; pop rdi ; ret
0x0000020000497992 : add rsp, 0x20 ; pop rsi ; jmp 0x200000b9438
0x0000020000497991 : add rsp, 0x20 ; pop rsi ; jmp 0x200000b9439
0x0000020000037c70 : add rsp, 0x20 ; pop rsi ; ret
0x0000020000399290 : add rsp, 0x208 ; ret
0x0000020000692576 : add rsp, 0x210 ; pop rdi ; ret
0x0000020000744c24 : add rsp, 0x230 ; pop rdi ; ret
0x000002000039a656 : add rsp, 0x240 ; pop rdi ; ret
0x000002000065ad47 : add rsp, 0x250 ; pop rbp ; ret
0x000002000051a195 : add rsp, 0x260 ; pop rdi ; ret
0x00000200003f092f : add rsp, 0x270 ; pop rdi ; ret
0x0000020000768ca8 : add rsp, 0x28 ; jmp 0x200000ece8c
0x000002000069793d : add rsp, 0x28 ; jmp qword ptr [r10]
0x000002000004cb83 : add rsp, 0x28 ; pop r14 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000026874 : add rsp, 0x28 ; pop r15 ; pop r14 ; ret
0x00000200004451cc : add rsp, 0x28 ; pop r15 ; pop rsi ; ret
0x00000200000f0275 : add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200000d8e24 : add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x0000020000019d40 : add rsp, 0x28 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000011a6e9 : add rsp, 0x28 ; pop rdi ; pop rsi ; ret
0x00000200003eff59 : add rsp, 0x28 ; pop rsi ; pop rbp ; ret
0x00000200000b1711 : add rsp, 0x28 ; pop rsi ; pop rbx ; ret
0x00000200000023be : add rsp, 0x28 ; ret
0x00000200003df8b0 : add rsp, 0x2a0 ; pop rdi ; ret
0x000002000013f6cd : add rsp, 0x30 ; pop r13 ; ret
0x00000200000e71b7 : add rsp, 0x30 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200006ba260 : add rsp, 0x30 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000b3dfb : add rsp, 0x30 ; pop r14 ; pop rbp ; pop rbx ; ret
0x0000020000012ba3 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004ba6cc : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200003a00d6 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rcx ; ret
0x000002000001aa60 : add rsp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000460558 : add rsp, 0x30 ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000000ddfa : add rsp, 0x30 ; pop r14 ; ret
0x000002000012431d : add rsp, 0x30 ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200000e6fd3 : add rsp, 0x30 ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200001bf978 : add rsp, 0x30 ; pop r15 ; pop r14 ; pop rcx ; ret
0x000002000000da2f : add rsp, 0x30 ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000026150 : add rsp, 0x30 ; pop r15 ; pop rdi ; pop rbp ; ret
0x0000020000445316 : add rsp, 0x30 ; pop r15 ; pop rsi ; pop rbx ; ret
0x0000020000068023 : add rsp, 0x30 ; pop r15 ; ret
0x000002000004a5ca : add rsp, 0x30 ; pop rbp ; ret
0x00000200006cc79c : add rsp, 0x30 ; pop rbx ; jmp r10
0x00000200006cc7a4 : add rsp, 0x30 ; pop rbx ; jmp r8
0x000002000001fc74 : add rsp, 0x30 ; pop rbx ; ret
0x0000020000230e47 : add rsp, 0x30 ; pop rcx ; ret
0x0000020000414da9 : add rsp, 0x30 ; pop rdi ; jmp 0x20000231017
0x0000020000414da8 : add rsp, 0x30 ; pop rdi ; jmp 0x20000231018
0x00000200006b8cc1 : add rsp, 0x30 ; pop rdi ; jmp rax
0x00000200000c2b30 : add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000127ec : add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000005757b : add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000002b3e : add rsp, 0x30 ; pop rdi ; ret
0x000002000002d499 : add rsp, 0x30 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000c271b : add rsp, 0x30 ; pop rsi ; ret
0x0000020000074b2b : add rsp, 0x308 ; ret
0x000002000065dc25 : add rsp, 0x320 ; pop rdi ; ret
0x00000200006cc895 : add rsp, 0x38 ; jmp r8
0x00000200006cc6ad : add rsp, 0x38 ; jmp r9
0x00000200006cc6b4 : add rsp, 0x38 ; jmp rax
0x000002000004ab1f : add rsp, 0x38 ; pop r12 ; pop rbx ; ret
0x00000200003f1dc2 : add rsp, 0x38 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200003a733d : add rsp, 0x38 ; pop r13 ; pop rbp ; ret
0x0000020000047847 : add rsp, 0x38 ; pop r13 ; pop rdi ; ret
0x000002000010d276 : add rsp, 0x38 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000c295c : add rsp, 0x38 ; pop r14 ; pop rdi ; ret
0x00000200000870e6 : add rsp, 0x38 ; pop r15 ; pop rbx ; ret
0x00000200000baaa4 : add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000647a35 : add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x00000200000b0a2c : add rsp, 0x38 ; pop rdi ; pop rbx ; ret
0x0000020000153c4b : add rsp, 0x38 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004edf75 : add rsp, 0x38 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000e6a2 : add rsp, 0x38 ; ret
0x0000020000669afe : add rsp, 0x390 ; pop rdi ; ret
0x000002000065fac1 : add rsp, 0x3a0 ; pop rbp ; ret
0x0000020000536e81 : add rsp, 0x3b8 ; ret
0x00000200000bb194 : add rsp, 0x40 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000bafcf : add rsp, 0x40 ; pop r12 ; ret
0x00000200003bb63b : add rsp, 0x40 ; pop r13 ; ret
0x0000020000105928 : add rsp, 0x40 ; pop r14 ; jmp 0x20000051c00
0x00000200004dff27 : add rsp, 0x40 ; pop r14 ; pop r12 ; pop rbp ; ret
0x0000020000004fe6 : add rsp, 0x40 ; pop r14 ; pop r12 ; pop rdi ; ret
0x00000200003ebd68 : add rsp, 0x40 ; pop r14 ; pop r13 ; pop rdi ; ret
0x00000200004d1c26 : add rsp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000002e8f1 : add rsp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000007f2f : add rsp, 0x40 ; pop r14 ; ret
0x00000200004e5d6e : add rsp, 0x40 ; pop r15 ; pop r12 ; pop rdi ; ret
0x00000200000ff4ac : add rsp, 0x40 ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200000992ea : add rsp, 0x40 ; pop r15 ; pop r14 ; pop rbx ; ret
0x00000200000070c0 : add rsp, 0x40 ; pop r15 ; pop r14 ; pop rdi ; ret
0x000002000044c651 : add rsp, 0x40 ; pop r15 ; pop r14 ; pop rsi ; ret
0x0000020000511906 : add rsp, 0x40 ; pop r15 ; pop rbx ; pop rbp ; ret
0x00000200000b1bea : add rsp, 0x40 ; pop r15 ; pop rdi ; pop rbx ; ret
0x000002000039c783 : add rsp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200000ad676 : add rsp, 0x40 ; pop r15 ; pop rsi ; pop rbx ; ret
0x000002000001e36f : add rsp, 0x40 ; pop r15 ; ret
0x000002000008522e : add rsp, 0x40 ; pop rbp ; ret
0x00000200004296c1 : add rsp, 0x40 ; pop rbx ; jmp r10
0x00000200000062c7 : add rsp, 0x40 ; pop rbx ; ret
0x0000020000155419 : add rsp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000059aef : add rsp, 0x40 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000020bb5 : add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000027213 : add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000008bc4c : add rsp, 0x40 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000000648a : add rsp, 0x40 ; pop rdi ; ret
0x0000020000086adf : add rsp, 0x40 ; pop rsi ; ret
0x00000200000bb205 : add rsp, 0x48 ; pop r12 ; pop rbx ; ret
0x00000200000d8166 : add rsp, 0x48 ; pop r13 ; pop rbx ; ret
0x000002000043c524 : add rsp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000041d193 : add rsp, 0x48 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000c63b0 : add rsp, 0x48 ; pop r14 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000479039 : add rsp, 0x48 ; pop r15 ; pop r12 ; ret
0x00000200000d954d : add rsp, 0x48 ; pop r15 ; pop rbp ; ret
0x000002000005716a : add rsp, 0x48 ; pop r15 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000055b6ac : add rsp, 0x48 ; pop rbp ; pop rbx ; ret
0x00000200001321ff : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000020000152c05 : add rsp, 0x48 ; pop rdi ; pop rbp ; ret
0x00000200000c8e8a : add rsp, 0x48 ; pop rdi ; pop rbx ; ret
0x00000200003b118e : add rsp, 0x48 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000021e1e : add rsp, 0x48 ; pop rdi ; pop rsi ; ret
0x00000200001239e7 : add rsp, 0x48 ; pop rsi ; pop rbx ; ret
0x000002000000c14c : add rsp, 0x48 ; ret
0x0000020000088967 : add rsp, 0x4b0 ; pop rbp ; ret
0x00000200001338ec : add rsp, 0x4d8 ; ret
0x000002000014e433 : add rsp, 0x50 ; call r10
0x0000020000495d0f : add rsp, 0x50 ; pop r13 ; pop r12 ; pop rdi ; ret
0x000002000005ae45 : add rsp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000b9187 : add rsp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000043c4ce : add rsp, 0x50 ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000040a61 : add rsp, 0x50 ; pop r14 ; ret
0x00000200000bc65d : add rsp, 0x50 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200003d4779 : add rsp, 0x50 ; pop r15 ; ret
0x000002000003a9ab : add rsp, 0x50 ; pop rbp ; ret
0x000002000001784e : add rsp, 0x50 ; pop rbx ; ret
0x0000020000558fc3 : add rsp, 0x50 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200004ef4cf : add rsp, 0x50 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000a7e8b : add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001d95f8 : add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000016f93 : add rsp, 0x50 ; pop rdi ; ret
0x0000020000499314 : add rsp, 0x50 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000003037d : add rsp, 0x50 ; pop rsi ; ret
0x00000200001f30d6 : add rsp, 0x518 ; ret
0x0000020000556e3a : add rsp, 0x58 ; pop r13 ; pop rbp ; ret
0x00000200003f51fa : add rsp, 0x58 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000e69eb : add rsp, 0x58 ; pop r15 ; pop r13 ; ret
0x00000200006775fd : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000002000020980a : add rsp, 0x58 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000528719 : add rsp, 0x58 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000494a6 : add rsp, 0x58 ; ret
0x000002000007934d : add rsp, 0x60 ; pop r12 ; ret
0x00000200003c8fa1 : add rsp, 0x60 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000267ad : add rsp, 0x60 ; pop r13 ; ret
0x000002000001c333 : add rsp, 0x60 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000062c61e : add rsp, 0x60 ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000066fab2 : add rsp, 0x60 ; pop r15 ; pop r12 ; pop rdi ; ret
0x0000020000097e88 : add rsp, 0x60 ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000504a0c : add rsp, 0x60 ; pop r15 ; pop rdi ; pop rbx ; ret
0x000002000010ab41 : add rsp, 0x60 ; pop r15 ; pop rsi ; pop rbp ; ret
0x000002000000ecf1 : add rsp, 0x60 ; pop rbp ; ret
0x00000200000362ec : add rsp, 0x60 ; pop rbx ; ret
0x0000020000133a70 : add rsp, 0x60 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000021b052 : add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000124551 : add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000030b68 : add rsp, 0x60 ; pop rdi ; ret
0x00000200000569ae : add rsp, 0x60 ; pop rsi ; ret
0x00000200006556f8 : add rsp, 0x630 ; pop rdi ; ret
0x00000200000471f4 : add rsp, 0x648 ; ret
0x00000200000879a6 : add rsp, 0x68 ; pop r13 ; pop rbp ; ret
0x00000200000d73c7 : add rsp, 0x68 ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000133ebd : add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x0000020000109fb0 : add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x00000200005e51fc : add rsp, 0x68 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000014018d : add rsp, 0x68 ; pop rdi ; pop rsi ; ret
0x0000020000064c84 : add rsp, 0x68 ; pop rsi ; pop rbx ; ret
0x0000020000025fb8 : add rsp, 0x68 ; ret
0x000002000000893e : add rsp, 0x70 ; pop r13 ; ret
0x000002000020e8db : add rsp, 0x70 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200005e3cfa : add rsp, 0x70 ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000491576 : add rsp, 0x70 ; pop r15 ; pop r12 ; pop rbp ; ret
0x0000020000668bb2 : add rsp, 0x70 ; pop r15 ; pop rdi ; pop rsi ; ret
0x000002000000868c : add rsp, 0x70 ; pop rbp ; ret
0x0000020000116525 : add rsp, 0x70 ; pop rbx ; ret
0x0000020000108a2a : add rsp, 0x70 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000049ddf : add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000409951 : add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000111a7c : add rsp, 0x70 ; pop rdi ; ret
0x000002000077ff7b : add rsp, 0x70 ; pop rsi ; ret
0x0000020000067d56 : add rsp, 0x78 ; pop r15 ; pop rbx ; ret
0x000002000008c092 : add rsp, 0x78 ; pop rdi ; pop rbp ; ret
0x00000200000b142a : add rsp, 0x78 ; pop rdi ; pop rbx ; ret
0x0000020000005950 : add rsp, 0x78 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000bdd15 : add rsp, 0x78 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000025031 : add rsp, 0x78 ; ret
0x00000200001172d6 : add rsp, 0x80 ; pop rbp ; ret
0x00000200000f5183 : add rsp, 0x80 ; pop rbx ; ret
0x000002000000563f : add rsp, 0x80 ; pop rdi ; ret
0x000002000065a831 : add rsp, 0x840 ; pop rbp ; ret
0x00000200000b0e27 : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x00000200000c8fb9 : add rsp, 0x88 ; ret
0x0000020000453b77 : add rsp, 0x90 ; pop r12 ; ret
0x00000200000b2abf : add rsp, 0x90 ; pop rbp ; ret
0x000002000046849c : add rsp, 0x90 ; pop rbx ; ret
0x000002000008fc9e : add rsp, 0x90 ; pop rdi ; ret
0x000002000001d5b8 : add rsp, 0x90 ; pop rsi ; ret
0x00000200000d17d9 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000002000039c5be : add rsp, 0x98 ; ret
0x000002000001b0e6 : add rsp, 0xa0 ; pop rbp ; ret
0x000002000011757c : add rsp, 0xa0 ; pop rbx ; ret
0x00000200001318b1 : add rsp, 0xa0 ; pop rdi ; ret
0x00000200001cae2c : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000002000065b4d2 : add rsp, 0xa8 ; pop rdi ; pop rbx ; ret
0x0000020000057b18 : add rsp, 0xa8 ; ret
0x000002000046d1ff : add rsp, 0xa90 ; pop rdi ; ret
0x0000020000115887 : add rsp, 0xb0 ; pop rbp ; ret
0x00000200001b0871 : add rsp, 0xb0 ; pop rbx ; ret
0x0000020000104ebb : add rsp, 0xb0 ; pop rdi ; ret
0x0000020000541442 : add rsp, 0xb0 ; pop rsi ; ret
0x00000200001ca375 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000002000065b403 : add rsp, 0xb8 ; pop rdi ; pop rbx ; ret
0x00000200001141b1 : add rsp, 0xb8 ; ret
0x0000020000050326 : add rsp, 0xc0 ; pop rbp ; ret
0x00000200001af93f : add rsp, 0xc0 ; pop rbx ; ret
0x0000020000016e8c : add rsp, 0xc0 ; pop rdi ; ret
0x000002000002c12c : add rsp, 0xc0 ; pop rsi ; ret
0x000002000051e930 : add rsp, 0xc8 ; ret
0x00000200001af2e8 : add rsp, 0xce8 ; ret
0x000002000004226b : add rsp, 0xd0 ; pop rbp ; ret
0x0000020000143b53 : add rsp, 0xd0 ; pop rbx ; ret
0x000002000060641d : add rsp, 0xd0 ; pop rdi ; ret
0x0000020000137d0f : add rsp, 0xd8 ; ret
0x00000200001d3f3a : add rsp, 0xe0 ; pop rbp ; ret
0x00000200001c1a59 : add rsp, 0xe0 ; pop rbx ; ret
0x00000200001cf3c7 : add rsp, 0xe0 ; pop rdi ; ret
0x0000020000470583 : add rsp, 0xe0 ; pop rsi ; ret
0x00000200000ec469 : add rsp, 0xe8 ; ret
0x0000020000104e85 : add rsp, 0xf0 ; pop rbp ; ret
0x0000020000035089 : add rsp, 0xf0 ; pop rbx ; ret
0x00000200000325cf : add rsp, 0xf0 ; pop rdi ; ret
0x000002000076dcb9 : add rsp, 0xf8 ; ret
0x0000020000230c8f : add rsp, 8 ; jmp r8
0x00000200000814da : add rsp, 8 ; ret
0x000002000012b532 : add sil, byte ptr [r10 + 3] ; mov al, 1 ; ret
0x0000020000453ada : add sil, sil ; ret
0x00000200003fd16b : add spl, byte ptr [r14 + 0x39] ; add cl, byte ptr [rdi] ; xchg dword ptr [rbx], edi ; ret 0x17
0x0000020000403f38 : add spl, byte ptr [r9 + rax] ; mov byte ptr [r8], al ; xor eax, eax ; ret
0x00000200000866f7 : add spl, byte ptr [rsi + 0x41] ; mov dword ptr [rdx + 2], eax ; ret
0x0000020000085a10 : add word ptr [rax], ax ; add byte ptr [rbp + 0x3b], al ; ret 0x8c0f
0x000002000004d20e : add word ptr [rcx + 0x3b], cx ; ret 0x6474
0x000002000042d732 : add word ptr [rcx + 0xa], dx ; ret
0x00000200001a134a : add word ptr [rdi + 0x1e6], ax ; jmp 0x200001a131e
0x00000200001c1262 : add word ptr [rip + 0x141bcf], ax ; ret
0x00000200003ae48c : and ah, al ; add rsp, 0x28 ; ret
0x000002000039d9cd : and ah, al ; mov cr4, rcx ; add rsp, 0x28 ; ret
0x00000200000dc6c0 : and ah, al ; mov cr4, rcx ; ret
0x0000020000217a29 : and ah, al ; ret 0x7d
0x00000200000389dc : and ah, byte ptr [rcx + rax] ; ret
0x000002000005d0a3 : and ah, byte ptr [rdi] ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], dh ; ret
0x00000200005d20a8 : and ah, byte ptr [rsi + 0x23] ; ret 0xc166
0x000002000077da22 : and ah, byte ptr [rsi + 0x3b] ; ret 0x4172
0x00000200007834be : and ah, byte ptr [rsi + 0x3b] ; ret 0x820f
0x0000020000783310 : and ah, byte ptr [rsi + 0x3b] ; ret 0x9b72
0x00000200001c323d : and ah, ch ; inc dword ptr [rax + rax*8 - 0xbea48c] ; ret
0x000002000039d9d0 : and ah, cl ; add rsp, 0x28 ; ret
0x00000200000dc6c3 : and ah, cl ; ret
0x00000200001bff26 : and ah, cl ; sbb eax, dword ptr [rax] ; ret
0x000002000010af06 : and al, 0 ; add bh, dh ; ret 0xfff
0x0000020000069363 : and al, 0 ; add byte ptr [rax + 0x48], al ; add esp, 0x40 ; pop rbx ; ret
0x00000200000d3a5a : and al, 0 ; add byte ptr [rax - 0x75], al ; ret
0x000002000014e350 : and al, 0 ; add dword ptr [rax], eax ; add bl, bh ; ret
0x000002000062cc90 : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001ab02b : and al, 0 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200004c6e05 : and al, 0 ; add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x0000020000500a4a : and al, 0 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200001f4724 : and al, 0 ; add eax, r10d ; jmp 0x200001f4732
0x0000020000619123 : and al, 0 ; cmp rcx, qword ptr [rcx] ; sete al ; ret
0x00000200000bc0cf : and al, 0 ; dec byte ptr [rax - 0x75] ; ret
0x00000200003a2177 : and al, 0 ; je 0x200003a2188 ; add rsp, 0x28 ; ret
0x00000200003a4e96 : and al, 0 ; je 0x200003a4e9f ; ret
0x0000020000532c0f : and al, 0 ; mov al, 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004230e9 : and al, 0 ; mov byte ptr [rdx], bl ; jmp 0x200004230b6
0x000002000053c220 : and al, 0 ; mov byte ptr [rip - 0x238909], 1 ; ret
0x00000200000b3f56 : and al, 0 ; movzx ecx, cx ; mov rax, qword ptr [rax + rcx*8] ; ret
0x00000200000b27df : and al, 0 ; movzx edx, cx ; mov rax, qword ptr [rax + rdx*8] ; ret
0x00000200000b27ee : and al, 0 ; ret
0x0000020000132544 : and al, 0 ; shr eax, 0xd ; and al, 1 ; ret
0x00000200006732da : and al, 0x10 ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000006d7f6 : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x00000200003f900b : and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret 0xfff
0x000002000002c241 : and al, 0x10 ; jmp rcx
0x000002000002f6c5 : and al, 0x10 ; mov byte ptr [r8 + 4], r9b ; ret
0x000002000021678e : and al, 0x10 ; mov dword ptr [r9], r11d ; ret
0x0000020000463e26 : and al, 0x10 ; mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x000002000048ec80 : and al, 0x10 ; mov dword ptr [rdi], ecx ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x0000020000019907 : and al, 0x10 ; mov eax, ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000046424b : and al, 0x10 ; mov eax, ecx ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000df5d8 : and al, 0x10 ; mov eax, r8d ; add rsp, 8 ; ret
0x00000200006b49cf : and al, 0x10 ; mov qword ptr [rdx], r11 ; ret
0x000002000000af59 : and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000032ec : and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x0000020000029cc8 : and al, 0x10 ; pop rdi ; ret
0x0000020000020171 : and al, 0x10 ; ret
0x00000200003edb8f : and al, 0x10 ; ror r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003ed79b : and al, 0x10 ; shr r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200001c32dc : and al, 0x12 ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x77], 0xd ; jmp qword ptr [rbx]
0x00000200004980ac : and al, 0x12 ; add byte ptr [rbx], ch ; ret 0xd12b
0x00000200000361a5 : and al, 0x18 ; cmova rdx, rax ; mov eax, edx ; ret
0x00000200003ef717 : and al, 0x18 ; mov r14, qword ptr [rsp + 0x20] ; ret
0x000002000003db75 : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x20] ; ret
0x0000020000121c81 : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x28] ; pop r14 ; ret
0x0000020000063110 : and al, 0x18 ; mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x00000200001257d7 : and al, 0x18 ; mov word ptr [rip + 0x1dd658], cx ; ret
0x000002000002cc1a : and al, 0x18 ; pop rsi ; ret
0x00000200000032f1 : and al, 0x18 ; ret
0x00000200003f5966 : and al, 0x18 ; sbb eax, eax ; and eax, 0x80000005 ; ret
0x000002000051db98 : and al, 0x19 ; ret
0x00000200005146ba : and al, 0x20 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; call 0x20000140489
0x000002000046186a : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r12
0x00000200004dee77 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r14
0x00000200005cfe5f : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call r15
0x0000020000463467 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rdi
0x0000020000693bf8 : and al, 0x20 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rsi
0x00000200003dada5 : and al, 0x20 ; add al, ch ; jrcxz 0x200003dada2 ; ret
0x00000200003dada4 : and al, 0x20 ; add al, ch ; jrcxz 0x200003dada3 ; ret
0x00000200004e00c2 : and al, 0x20 ; add al, ch ; ret 0xff09
0x0000020000466e66 : and al, 0x20 ; add al, ch ; ret 0xffc4
0x00000200004e8aca : and al, 0x20 ; add al, ch ; salc ; ret 0xffb9
0x000002000074a7d6 : and al, 0x20 ; add bh, bh ; ret
0x00000200005dcaef : and al, 0x20 ; add bl, byte ptr [rcx] ; push rax ; add bh, bh ; ret 0xb841
0x00000200005b843a : and al, 0x20 ; add bl, byte ptr [rcx] ; push rax ; add bh, bh ; ret 0xb941
0x0000020000752b0a : and al, 0x20 ; add byte ptr [rbp + rcx*4 + 0xd], cl ; in al, dx ; ret 0xffcc
0x00000200004dade3 : and al, 0x20 ; add byte ptr [rbp + rcx*4 + 0xd], cl ; ret
0x00000200006cc7af : and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200001fab6a : and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000016d971 : and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret 0xba
0x000002000048ff76 : and al, 0x20 ; add dword ptr [rax], eax ; add al, ch ; add byte ptr [rdx], dh ; ret
0x00000200006909ab : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r14 ; call rdi
0x00000200004d4906 : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, r15 ; call rdi
0x00000200004633cd : and al, 0x20 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rcx, rsi ; call rdi
0x000002000003f1e2 : and al, 0x20 ; add rsp, 0x10 ; pop rdi ; ret
0x00000200004451ca : and al, 0x20 ; add rsp, 0x28 ; pop r15 ; pop rsi ; ret
0x000002000011a6e7 : and al, 0x20 ; add rsp, 0x28 ; pop rdi ; pop rsi ; ret
0x00000200003eff57 : and al, 0x20 ; add rsp, 0x28 ; pop rsi ; pop rbp ; ret
0x000002000010c916 : and al, 0x20 ; add rsp, 0x28 ; ret
0x00000200001c707d : and al, 0x20 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000004ab1d : and al, 0x20 ; add rsp, 0x38 ; pop r12 ; pop rbx ; ret
0x00000200000b0a2a : and al, 0x20 ; add rsp, 0x38 ; pop rdi ; pop rbx ; ret
0x00000200003e38f2 : and al, 0x20 ; add rsp, 0x38 ; ret
0x00000200000d954b : and al, 0x20 ; add rsp, 0x48 ; pop r15 ; pop rbp ; ret
0x00000200000c8e88 : and al, 0x20 ; add rsp, 0x48 ; pop rdi ; pop rbx ; ret
0x0000020000643fc0 : and al, 0x20 ; and eax, 0x80000005 ; ret
0x0000020000425547 : and al, 0x20 ; call 0x200000459ad
0x0000020000425546 : and al, 0x20 ; call 0x200000459ae
0x000002000042d896 : and al, 0x20 ; call 0x20000053851
0x00000200001cd8a5 : and al, 0x20 ; call 0x20000059b84
0x00000200001cd8a4 : and al, 0x20 ; call 0x20000059b85
0x0000020000105f1f : and al, 0x20 ; call 0x200000628b9
0x000002000040ad0e : and al, 0x20 ; call 0x20000067010
0x0000020000475988 : and al, 0x20 ; call 0x2000009a4a5
0x0000020000475987 : and al, 0x20 ; call 0x2000009a4a6
0x0000020000498c99 : and al, 0x20 ; call 0x200000bcd25
0x0000020000498c98 : and al, 0x20 ; call 0x200000bcd26
0x00000200001b46eb : and al, 0x20 ; call 0x200000c09d4
0x00000200001b46ea : and al, 0x20 ; call 0x200000c09d5
0x0000020000626937 : and al, 0x20 ; call 0x200000c2b94
0x0000020000626936 : and al, 0x20 ; call 0x200000c2b95
0x00000200004c161c : and al, 0x20 ; call 0x200000e5269
0x00000200004c161b : and al, 0x20 ; call 0x200000e526a
0x00000200004c2e57 : and al, 0x20 ; call 0x200000e8b59
0x00000200000efed3 : and al, 0x20 ; call 0x200000ec184
0x00000200000efed2 : and al, 0x20 ; call 0x200000ec185
0x000002000051b0eb : and al, 0x20 ; call 0x20000140405
0x000002000051270b : and al, 0x20 ; call 0x20000140485
0x0000020000514d31 : and al, 0x20 ; call 0x20000140545
0x000002000051b056 : and al, 0x20 ; call 0x200001407e5
0x000002000051cc5c : and al, 0x20 ; call 0x20000140aa5
0x0000020000764b3d : and al, 0x20 ; call 0x20000140da4
0x0000020000513671 : and al, 0x20 ; call 0x20000140da5
0x0000020000513670 : and al, 0x20 ; call 0x20000140da6
0x0000020000412571 : and al, 0x20 ; call 0x20000143726
0x0000020000412570 : and al, 0x20 ; call 0x20000143727
0x00000200006935c9 : and al, 0x20 ; call 0x2000041f808
0x00000200006935c8 : and al, 0x20 ; call 0x2000041f809
0x00000200004f5774 : and al, 0x20 ; call 0x2000042ae7d
0x0000020000652efa : and al, 0x20 ; call 0x2000043f174
0x0000020000652ef9 : and al, 0x20 ; call 0x2000043f175
0x0000020000583b1b : and al, 0x20 ; call 0x2000043fd44
0x000002000060551e : and al, 0x20 ; call 0x20000461754
0x000002000060551d : and al, 0x20 ; call 0x20000461755
0x00000200005a9c39 : and al, 0x20 ; call 0x20000465e88
0x00000200005a9c38 : and al, 0x20 ; call 0x20000465e89
0x0000020000467782 : and al, 0x20 ; call 0x200004678e5
0x00000200005c5dd3 : and al, 0x20 ; call 0x20000602040
0x00000200005c5dd2 : and al, 0x20 ; call 0x20000602041
0x000002000057df6f : and al, 0x20 ; call 0x2000064ec98
0x00000200006c5077 : and al, 0x20 ; call 0x200006c9739
0x000002000064ba04 : and al, 0x20 ; call qword ptr [r10 + 0x18]
0x000002000064b907 : and al, 0x20 ; call qword ptr [r10]
0x00000200005fceed : and al, 0x20 ; call qword ptr [rax]
0x00000200006aa7c5 : and al, 0x20 ; call qword ptr [rip - 0x3db2bd]
0x00000200006aa81d : and al, 0x20 ; call qword ptr [rip - 0x3db30d]
0x0000020000422721 : and al, 0x20 ; call qword ptr [rsi]
0x0000020000074a34 : and al, 0x20 ; call r10
0x00000200004111e0 : and al, 0x20 ; call r11
0x0000020000426b8e : and al, 0x20 ; call r12
0x000002000069267d : and al, 0x20 ; call r14
0x00000200004047d6 : and al, 0x20 ; call r15
0x00000200001a3f7f : and al, 0x20 ; call r8
0x00000200001ad6af : and al, 0x20 ; call r9
0x0000020000182afc : and al, 0x20 ; call rax
0x00000200005efeb0 : and al, 0x20 ; call rbx
0x00000200005037ff : and al, 0x20 ; call rdi
0x00000200004afe2e : and al, 0x20 ; call rsi
0x00000200004b09b3 : and al, 0x20 ; cmp ebx, 4 ; je 0x200004b09c7 ; call r12
0x00000200004b09b2 : and al, 0x20 ; cmp ebx, 4 ; je 0x200004b09c8 ; call r12
0x00000200004dc821 : and al, 0x20 ; enter 0, 0 ; call r10
0x00000200005c9680 : and al, 0x20 ; jmp 0x200004d2da4
0x00000200004bbbde : and al, 0x20 ; lea edx, dword ptr [rax + 3] ; call r10
0x00000200005101e3 : and al, 0x20 ; lea r8d, dword ptr [r9 + 1] ; call rdi
0x000002000050e620 : and al, 0x20 ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x000002000050e919 : and al, 0x20 ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x00000200004dda0e : and al, 0x20 ; lea r8d, dword ptr [r9 + 3] ; call rdi
0x000002000046af0f : and al, 0x20 ; lea r8d, dword ptr [r9 - 1] ; call r12
0x00000200004e1553 : and al, 0x20 ; lea r8d, dword ptr [r9 - 1] ; call rdi
0x00000200004ce60d : and al, 0x20 ; lea r8d, dword ptr [r9 - 3] ; call rsi
0x00000200005134a7 : and al, 0x20 ; lea rcx, qword ptr [rbp + 0x10] ; call 0x200001392b5
0x00000200000d218c : and al, 0x20 ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x000002000010c603 : and al, 0x20 ; lea rdx, qword ptr [rsp + 0x28] ; xor ecx, ecx ; call rax
0x000002000078574e : and al, 0x20 ; mov al, dl ; add rsp, 0x38 ; ret
0x000002000020df0d : and al, 0x20 ; mov al, r9b ; add rsp, 0x38 ; ret
0x000002000049ad64 : and al, 0x20 ; mov dl, 0xfe ; call 0x200000bcbe7
0x000002000049af59 : and al, 0x20 ; mov dl, 0xff ; call 0x200000bcbe7
0x000002000049af58 : and al, 0x20 ; mov dl, 0xff ; call 0x200000bcbe8
0x00000200006db722 : and al, 0x20 ; mov dword ptr [rsp + 0x2c], r15d ; call rax
0x0000020000465043 : and al, 0x20 ; mov dword ptr [rsp + 0x54], r11d ; call r10
0x000002000045b37f : and al, 0x20 ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000046f40b : and al, 0x20 ; mov eax, r9d ; add rsp, 0x38 ; ret
0x00000200004fcef1 : and al, 0x20 ; mov ecx, edi ; call rsi
0x000002000057aae2 : and al, 0x20 ; mov edx, dword ptr [rip - 0x74b40000] ; ret
0x00000200002215ee : and al, 0x20 ; mov edx, esi ; call r11
0x00000200004fce13 : and al, 0x20 ; mov edx, esi ; mov rcx, r14 ; call r9
0x0000020000464493 : and al, 0x20 ; mov qword ptr [rbp - 0x40], rsi ; call r10
0x00000200001e4d0e : and al, 0x20 ; mov qword ptr [rsp + 0x28], r8 ; call rdx
0x00000200004ce564 : and al, 0x20 ; mov qword ptr [rsp + 0x30], rbx ; call r11
0x00000200006b85de : and al, 0x20 ; mov r15, rax ; mov r8d, esi ; call rbx
0x00000200005d3f40 : and al, 0x20 ; mov r8, rbx ; xor edx, edx ; call 0x200001401e9
0x0000020000427ffa : and al, 0x20 ; mov r8b, r11b ; call r12
0x00000200005e1836 : and al, 0x20 ; mov r8d, ebx ; call rax
0x000002000058304d : and al, 0x20 ; mov r8d, ebx ; mov cl, 0x15 ; call r10
0x00000200005830d4 : and al, 0x20 ; mov r8d, ebx ; mov cl, 0x15 ; call rax
0x00000200005b41aa : and al, 0x20 ; mov r8d, ebx ; mov cl, 0xc ; call r10
0x00000200005b43ad : and al, 0x20 ; mov r8d, ebx ; mov cl, 0xc ; call rax
0x00000200005101aa : and al, 0x20 ; mov r8d, r9d ; call rdi
0x00000200006c07c1 : and al, 0x20 ; mov r9, rbx ; call rax
0x000002000050e815 : and al, 0x20 ; mov r9d, 2 ; call rax
0x0000020000694f92 : and al, 0x20 ; mov r9d, 3 ; call rax
0x0000020000679925 : and al, 0x20 ; mov r9d, r14d ; call r10
0x000002000045d059 : and al, 0x20 ; mov r9d, r8d ; mov r8, r12 ; call r10
0x00000200001adfab : and al, 0x20 ; mov rax, qword ptr [rip + 0x1244c4] ; call rax
0x00000200001ad946 : and al, 0x20 ; mov rax, qword ptr [rip + 0x124b29] ; call rax
0x0000020000425535 : and al, 0x20 ; mov rbx, rcx ; call 0x200000459c8
0x0000020000462f2c : and al, 0x20 ; mov rcx, r11 ; call rax
0x00000200004b07cf : and al, 0x20 ; mov rcx, r12 ; call 0x200004aca87
0x00000200004b07ce : and al, 0x20 ; mov rcx, r12 ; call 0x200004aca88
0x0000020000193299 : and al, 0x20 ; mov rcx, r13 ; call 0x2000003f4bb
0x0000020000193298 : and al, 0x20 ; mov rcx, r13 ; call 0x2000003f4bc
0x00000200004617f1 : and al, 0x20 ; mov rcx, r13 ; call r12
0x00000200004616c6 : and al, 0x20 ; mov rcx, r13 ; call r14
0x000002000052842d : and al, 0x20 ; mov rcx, r13 ; call r15
0x00000200006b842d : and al, 0x20 ; mov rcx, r13 ; call rax
0x000002000042285a : and al, 0x20 ; mov rcx, r14 ; call qword ptr [rsi]
0x00000200006b9ed7 : and al, 0x20 ; mov rcx, r14 ; call rax
0x00000200004dede0 : and al, 0x20 ; mov rcx, r15 ; call r14
0x000002000050e5b2 : and al, 0x20 ; mov rcx, r15 ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x000002000050e8ab : and al, 0x20 ; mov rcx, r15 ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x00000200003b631c : and al, 0x20 ; mov rcx, rbx ; call rax
0x0000020000206699 : and al, 0x20 ; mov rcx, rdi ; call rax
0x00000200006b8ff2 : and al, 0x20 ; mov rcx, rsi ; call r12
0x000002000040da8b : and al, 0x20 ; mov rcx, rsi ; call rdi
0x000002000002623b : and al, 0x20 ; mov rdi, qword ptr [rsp + 0x28] ; pop r14 ; ret
0x000002000052bcf8 : and al, 0x20 ; mov rdx, qword ptr [rsp + 0x28] ; add rax, rdx ; jmp 0x2000052bd1b
0x00000200006788ba : and al, 0x20 ; mov rdx, r10 ; mov rcx, r15 ; call r11
0x0000020000693b92 : and al, 0x20 ; mov rdx, r12 ; mov rcx, r14 ; call rsi
0x00000200004e14e6 : and al, 0x20 ; mov rdx, r12 ; mov rcx, r15 ; call rdi
0x00000200003b619b : and al, 0x20 ; mov rdx, rbx ; call r10
0x00000200002114d6 : and al, 0x20 ; mov rdx, rsi ; call r10
0x00000200006c0939 : and al, 0x20 ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x000002000061a86f : and al, 0x20 ; mov rsi, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x00000200004ca13c : and al, 0x20 ; or al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x200000ee7b9
0x0000020000134dad : and al, 0x20 ; or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x20000134d6f
0x0000020000063115 : and al, 0x20 ; pop rdi ; ret
0x000002000003db7a : and al, 0x20 ; ret
0x000002000060efe8 : and al, 0x20 ; ret 0x8bff
0x00000200000635e8 : and al, 0x20 ; xor eax, eax ; mov qword ptr [r9], rdx ; pop rdi ; ret
0x0000020000598003 : and al, 0x20 ; xor ecx, ecx ; call qword ptr [rsi]
0x00000200005dd422 : and al, 0x20 ; xor r8d, r8d ; call 0x20000089717
0x00000200005dd421 : and al, 0x20 ; xor r8d, r8d ; call 0x20000089718
0x0000020000512877 : and al, 0x20 ; xor r8d, r8d ; call 0x20000140da8
0x0000020000512876 : and al, 0x20 ; xor r8d, r8d ; call 0x20000140da9
0x000002000056064b : and al, 0x20 ; xor r8d, r8d ; mov cl, 0x1b ; call rax
0x00000200005dc88a : and al, 0x20 ; xor r8d, r8d ; mov cl, bpl ; call rsi
0x0000020000026ec9 : and al, 0x24 ; add byte ptr [rax - 0x75], cl ; ret 0x1275
0x00000200004cb4f0 : and al, 0x24 ; inc edx ; jmp 0x200004cb4bb
0x00000200006b6f1b : and al, 0x24 ; jmp 0x200006b6ee5
0x000002000041a7b6 : and al, 0x24 ; mov eax, r8d ; add rsp, 0x48 ; ret
0x00000200005cb504 : and al, 0x24 ; mov ecx, dword ptr [rsp + 0x28] ; call 0x20000517754
0x00000200004217e9 : and al, 0x24 ; mov rcx, rbp ; call 0x200000456e8
0x000002000016683b : and al, 0x26 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x0000020000085bd7 : and al, 0x27 ; add byte ptr [rbp - 0x75], al ; ret 0x3be9
0x00000200001a87ac : and al, 0x28 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001e4d6d : and al, 0x28 ; add byte ptr [rbp - 0x75], al ; ret
0x00000200005770d2 : and al, 0x28 ; add byte ptr [rdi], cl ; ret 0xc933
0x000002000052bcfd : and al, 0x28 ; add rax, rdx ; jmp 0x2000052bd16
0x00000200001e721d : and al, 0x28 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004bb53a : and al, 0x28 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004da7a6 : and al, 0x28 ; add rsp, 0x48 ; ret
0x0000020000419264 : and al, 0x28 ; and eax, 0x80000005 ; pop r14 ; ret
0x000002000069829e : and al, 0x28 ; and qword ptr [rsp + 0x20], 0 ; call r10
0x000002000049913d : and al, 0x28 ; call 0x200000bb115
0x000002000052c996 : and al, 0x28 ; call 0x2000014f185
0x000002000052c995 : and al, 0x28 ; call 0x2000014f186
0x00000200005888fc : and al, 0x28 ; call 0x200004d4b84
0x00000200005888fb : and al, 0x28 ; call 0x200004d4b85
0x00000200005cb508 : and al, 0x28 ; call 0x20000517750
0x00000200005cb507 : and al, 0x28 ; call 0x20000517751
0x00000200001e4d13 : and al, 0x28 ; call rdx
0x000002000062c2f9 : and al, 0x28 ; jae 0x2000062c30c ; mov eax, 0xc0000004 ; ret
0x000002000062c3b5 : and al, 0x28 ; jae 0x2000062c3c8 ; mov eax, 0xc0000004 ; ret
0x000002000050dba4 : and al, 0x28 ; jmp 0x2000050dbcc
0x0000020000206fe3 : and al, 0x28 ; jmp rax
0x00000200006b6d97 : and al, 0x28 ; lea rcx, qword ptr [rsp + 0x20] ; call r8
0x000002000064f7ff : and al, 0x28 ; mov byte ptr [rax], 0 ; ret
0x000002000064f7e1 : and al, 0x28 ; mov byte ptr [rax], 1 ; ret
0x00000200001b303c : and al, 0x28 ; mov cl, bl ; call rax
0x000002000050dddd : and al, 0x28 ; mov dword ptr [rdx], ecx ; ret
0x00000200006b8429 : and al, 0x28 ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, r13 ; call rax
0x00000200006b9ed3 : and al, 0x28 ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, r14 ; call rax
0x00000200004afe29 : and al, 0x28 ; mov dword ptr [rsp + 0x20], r13d ; call rsi
0x000002000010d36e : and al, 0x28 ; mov eax, dword ptr [rsp + 0x28] ; pop rdi ; pop rsi ; ret
0x0000020000740d23 : and al, 0x28 ; mov ecx, dword ptr [rax] ; mov dword ptr [r8], ecx ; ret
0x00000200001c6246 : and al, 0x28 ; mov qword ptr [rcx], r8 ; ret
0x000002000044055c : and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000057e0bf : and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r15
0x0000020000026240 : and al, 0x28 ; pop r14 ; ret
0x000002000010d372 : and al, 0x28 ; pop rdi ; pop rsi ; ret
0x000002000000aaeb : and al, 0x28 ; pop rdi ; ret
0x000002000041e25d : and al, 0x28 ; test rax, rax ; jne 0x2000041e271 ; mov eax, r10d ; ret
0x000002000010c608 : and al, 0x28 ; xor ecx, ecx ; call rax
0x0000020000180d5f : and al, 0x29 ; lock dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200006db727 : and al, 0x2c ; call rax
0x0000020000230d20 : and al, 0x2c ; int 0xc3
0x00000200001e7311 : and al, 0x2c ; mov dword ptr [rbx], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000040199 : and al, 0x2e ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200000cdc2a : and al, 0x30 ; add cl, byte ptr [rcx + rcx*4 + 0x4a] ; or byte ptr [rax - 0x75], cl ; ret 0xc748
0x0000020000490246 : and al, 0x30 ; add dword ptr [rax], eax ; add al, ch ; adc byte ptr [rbx], ch ; ret
0x00000200001fb101 : and al, 0x30 ; add rsp, 0x10 ; pop rdi ; ret
0x000002000003654d : and al, 0x30 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000001fa00 : and al, 0x30 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000029ad3 : and al, 0x30 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000032391 : and al, 0x30 ; add rsp, 0x20 ; pop rcx ; ret
0x00000200000f4b8a : and al, 0x30 ; add rsp, 0x20 ; pop rdi ; jmp rax
0x0000020000002649 : and al, 0x30 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000037c6e : and al, 0x30 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000f5216 : and al, 0x30 ; add rsp, 0x28 ; ret
0x00000200000c295a : and al, 0x30 ; add rsp, 0x38 ; pop r14 ; pop rdi ; ret
0x00000200000dbd57 : and al, 0x30 ; add rsp, 0x40 ; pop r14 ; ret
0x00000200000d8164 : and al, 0x30 ; add rsp, 0x48 ; pop r13 ; pop rbx ; ret
0x00000200000c1ce6 : and al, 0x30 ; add rsp, 0x48 ; ret
0x0000020000408d9a : and al, 0x30 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000049887a : and al, 0x30 ; call 0x200000bc285
0x00000200004ecc17 : and al, 0x30 ; call 0x200001178cd
0x000002000050407b : and al, 0x30 ; call 0x20000140384
0x000002000050407a : and al, 0x30 ; call 0x20000140385
0x000002000052db22 : and al, 0x30 ; call 0x2000014f185
0x000002000052db21 : and al, 0x30 ; call 0x2000014f186
0x0000020000524144 : and al, 0x30 ; call 0x2000014f4c5
0x0000020000524143 : and al, 0x30 ; call 0x2000014f4c6
0x00000200001f6ac6 : and al, 0x30 ; call 0x200001f6585
0x0000020000128b1a : and al, 0x30 ; call qword ptr [rbx]
0x00000200004ce569 : and al, 0x30 ; call r11
0x0000020000162de3 : and al, 0x30 ; call r8
0x000002000019e9e9 : and al, 0x30 ; call rax
0x0000020000642e68 : and al, 0x30 ; inc eax ; add rsp, 0x28 ; ret
0x0000020000017dee : and al, 0x30 ; jmp 0x20000017dd0
0x0000020000017ded : and al, 0x30 ; jmp 0x20000017dd1
0x00000200001ee9a9 : and al, 0x30 ; jmp 0x200001ee973
0x00000200001f92b2 : and al, 0x30 ; jmp 0x200001f935a
0x00000200006bede7 : and al, 0x30 ; jmp rax
0x00000200005017b7 : and al, 0x30 ; jne 0x200005017ca ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000781b4b : and al, 0x30 ; lea rcx, qword ptr [rsp + 0x50] ; call r12
0x0000020000405ef5 : and al, 0x30 ; mov al, 1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c077d : and al, 0x30 ; mov byte ptr [rdi], cl ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010d57a : and al, 0x30 ; mov dword ptr [rdi], eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ccf75 : and al, 0x30 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f0169 : and al, 0x30 ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x000002000019d0c7 : and al, 0x30 ; mov ecx, 0xa ; call rax
0x000002000019d0a4 : and al, 0x30 ; mov ecx, 0xd ; call rax
0x0000020000400af1 : and al, 0x30 ; mov ecx, edi ; call 0x2000047cd9a
0x00000200005201c5 : and al, 0x30 ; mov edi, eax ; call 0x20000140387
0x00000200005201c4 : and al, 0x30 ; mov edi, eax ; call 0x20000140388
0x00000200004ecc13 : and al, 0x30 ; mov edx, dword ptr [rsp + 0x30] ; call 0x200001178d1
0x000002000010f1c8 : and al, 0x30 ; mov qword ptr [rax], r10 ; ret
0x00000200001a57c1 : and al, 0x30 ; mov qword ptr [rdx], rcx ; add rsp, 0x48 ; ret
0x0000020000162dde : and al, 0x30 ; mov qword ptr [rsp + 0x30], rax ; call r8
0x00000200001b990f : and al, 0x30 ; mov qword ptr [rsp + 0x38], rdx ; call r9
0x00000200001fb5b3 : and al, 0x30 ; mov rax, rdx ; add rsp, 0x48 ; ret
0x0000020000211b73 : and al, 0x30 ; mov rcx, qword ptr [r8 + 0x30] ; call r9
0x00000200004c9378 : and al, 0x30 ; mov rcx, qword ptr [rbx + 0x50] ; call 0x200000ede6d
0x000002000041d652 : and al, 0x30 ; mov rcx, rax ; call 0x20000043d80
0x0000020000677d8b : and al, 0x30 ; mov rcx, rax ; call r10
0x000002000049b38a : and al, 0x30 ; mov rcx, rbp ; call 0x200000c06f8
0x00000200004243cb : and al, 0x30 ; mov rcx, rbp ; call 0x20000140687
0x000002000006710e : and al, 0x30 ; mov rcx, rdi ; call rsi
0x0000020000133238 : and al, 0x30 ; mov rdx, r12 ; call rax
0x000002000048e0dc : and al, 0x30 ; mov rdx, rax ; call 0x200000bccc8
0x000002000048e0db : and al, 0x30 ; mov rdx, rax ; call 0x200000bccc9
0x000002000052c944 : and al, 0x30 ; mov word ptr [rsp + 0x38], ax ; call 0x200003e8c09
0x0000020000065d94 : and al, 0x30 ; pop r14 ; pop r12 ; ret
0x000002000049cf40 : and al, 0x30 ; pop r14 ; pop rsi ; ret
0x000002000003b187 : and al, 0x30 ; pop r15 ; pop r14 ; ret
0x0000020000033d83 : and al, 0x30 ; test eax, eax ; jne 0x20000033da0 ; ret
0x0000020000033d82 : and al, 0x30 ; test eax, eax ; jne 0x20000033da1 ; ret
0x00000200001b8f7b : and al, 0x30 ; xor al, al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000eec27 : and al, 0x30 ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000007464c : and al, 0x32 ; add rsp, 0x28 ; ret
0x000002000011ad92 : and al, 0x34 ; call 0x200000b7054
0x000002000011ad91 : and al, 0x34 ; call 0x200000b7055
0x0000020000055aff : and al, 0x34 ; jmp 0x20000055b58
0x0000020000055afe : and al, 0x34 ; jmp 0x20000055b59
0x00000200000945ce : and al, 0x34 ; jmp 0x20000093c61
0x0000020000465b99 : and al, 0x34 ; mov byte ptr [rbx], cl ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004b425c : and al, 0x34 ; mov edx, r11d ; mov rcx, rsi ; call rax
0x0000020000503b4e : and al, 0x38 ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x000002000021c311 : and al, 0x38 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000070164 : and al, 0x38 ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x000002000061876d : and al, 0x38 ; add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x00000200005978c2 : and al, 0x38 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0x1389
0x0000020000047d38 : and al, 0x38 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003e9631 : and al, 0x38 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000621a0e : and al, 0x38 ; add rsp, 0x20 ; pop rbp ; ret
0x000002000007186f : and al, 0x38 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000020674f : and al, 0x38 ; add rsp, 0x20 ; pop rdi ; jmp rax
0x0000020000002749 : and al, 0x38 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000053951 : and al, 0x38 ; add rsp, 0x20 ; pop rsi ; ret
0x000002000005abd9 : and al, 0x38 ; add rsp, 0x28 ; ret
0x0000020000098ffe : and al, 0x38 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000021e1c : and al, 0x38 ; add rsp, 0x48 ; pop rdi ; pop rsi ; ret
0x00000200000569ac : and al, 0x38 ; add rsp, 0x60 ; pop rsi ; ret
0x0000020000494319 : and al, 0x38 ; add rsp, 0x70 ; pop r13 ; ret
0x0000020000414e82 : and al, 0x38 ; call 0x2000003feb5
0x000002000049ae19 : and al, 0x38 ; call 0x200000bc8c5
0x000002000049ae18 : and al, 0x38 ; call 0x200000bc8c6
0x000002000049ae0f : and al, 0x38 ; call 0x200000bc8d5
0x000002000049ae0e : and al, 0x38 ; call 0x200000bc8d6
0x000002000049ad7a : and al, 0x38 ; call 0x200000bc945
0x000002000049ad79 : and al, 0x38 ; call 0x200000bc946
0x000002000049d993 : and al, 0x38 ; call 0x200000c2de5
0x0000020000512f90 : and al, 0x38 ; call 0x20000140385
0x0000020000512f8f : and al, 0x38 ; call 0x20000140386
0x000002000052c949 : and al, 0x38 ; call 0x200003e8c04
0x000002000052c948 : and al, 0x38 ; call 0x200003e8c05
0x00000200001ac612 : and al, 0x38 ; call r8
0x00000200001b9914 : and al, 0x38 ; call r9
0x00000200000cccce : and al, 0x38 ; call rax
0x000002000011f182 : and al, 0x38 ; cmp esi, ecx ; jb 0x2000011f1d4 ; inc edx ; jmp 0x2000011f16e
0x0000020000185962 : and al, 0x38 ; jmp 0x20000091c27
0x0000020000688ea0 : and al, 0x38 ; jmp 0x200006891bf
0x0000020000206feb : and al, 0x38 ; jmp rax
0x0000020000498927 : and al, 0x38 ; lea edx, dword ptr [r10 + r10] ; call 0x200000bab49
0x00000200005037fa : and al, 0x38 ; lea rcx, qword ptr [rsp + 0x20] ; call rdi
0x0000020000693326 : and al, 0x38 ; mov byte ptr [rdx], cl ; add rsp, 0x48 ; ret
0x00000200001ad331 : and al, 0x38 ; mov dword ptr [rbx], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001bfa76 : and al, 0x38 ; mov dword ptr [rcx], r11d ; mov eax, r10d ; ret
0x000002000064bed6 : and al, 0x38 ; mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x000002000076d139 : and al, 0x38 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005d3362 : and al, 0x38 ; mov r8d, ebx ; mov rdx, r14 ; call rax
0x00000200006b0620 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x48] ; jmp rax
0x00000200000fcb13 : and al, 0x38 ; mov word ptr [rsp + 0x3c], r15w ; call r9
0x000002000011b136 : and al, 0x38 ; pop r15 ; pop r14 ; pop r12 ; ret
0x00000200001281f6 : and al, 0x38 ; pop r15 ; pop r14 ; pop r13 ; ret
0x00000200003ed4f9 : and al, 0x38 ; ret
0x00000200003ed167 : and al, 0x38 ; sub eax, edx ; xor eax, dword ptr [r8 + rcx*4] ; ret
0x00000200003bb18b : and al, 0x38 ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ac9fe : and al, 0x3b ; ret
0x00000200005c0570 : and al, 0x3c ; call 0x200001ec840
0x00000200005c056f : and al, 0x3c ; call 0x200001ec841
0x00000200000fcb19 : and al, 0x3c ; call r9
0x0000020000012dd8 : and al, 0x40 ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x00000200001958fc : and al, 0x40 ; add byte ptr [rdi + rcx + 0x22], al ; ret 0x4865
0x000002000006daf0 : and al, 0x40 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000059f01f : and al, 0x40 ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000010b08 : and al, 0x40 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003e0dc2 : and al, 0x40 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001200e7 : and al, 0x40 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200003f6a74 : and al, 0x40 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003ac9a3 : and al, 0x40 ; add rsp, 0x20 ; pop rcx ; ret
0x000002000020ef9d : and al, 0x40 ; add rsp, 0x20 ; pop rdi ; jmp 0x2000007b2ad
0x000002000004c397 : and al, 0x40 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000002591 : and al, 0x40 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b814f : and al, 0x40 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000b170f : and al, 0x40 ; add rsp, 0x28 ; pop rsi ; pop rbx ; ret
0x0000020000032684 : and al, 0x40 ; add rsp, 0x28 ; ret
0x0000020000029264 : and al, 0x40 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000004a5c8 : and al, 0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x000002000063f495 : and al, 0x40 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006c4587 : and al, 0x40 ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000414da7 : and al, 0x40 ; add rsp, 0x30 ; pop rdi ; jmp 0x20000231019
0x000002000001a0f4 : and al, 0x40 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f714c : and al, 0x40 ; add rsp, 0x30 ; pop rsi ; ret
0x00000200001b7ce9 : and al, 0x40 ; add rsp, 0x38 ; ret
0x000002000014e431 : and al, 0x40 ; add rsp, 0x50 ; call r10
0x0000020000137765 : and al, 0x40 ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000064c82 : and al, 0x40 ; add rsp, 0x68 ; pop rsi ; pop rbx ; ret
0x000002000000893c : and al, 0x40 ; add rsp, 0x70 ; pop r13 ; ret
0x00000200004ec0e6 : and al, 0x40 ; call 0x20000117ea5
0x00000200004ec0e5 : and al, 0x40 ; call 0x20000117ea6
0x00000200005155c5 : and al, 0x40 ; call 0x20000140385
0x00000200005155c4 : and al, 0x40 ; call 0x20000140386
0x0000020000512e95 : and al, 0x40 ; call 0x20000140485
0x00000200001af7e2 : and al, 0x40 ; call 0x200001aba70
0x00000200001af7e1 : and al, 0x40 ; call 0x200001aba71
0x00000200005a249e : and al, 0x40 ; call 0x200001c51e9
0x00000200005a249d : and al, 0x40 ; call 0x200001c51ea
0x00000200005d3b71 : and al, 0x40 ; call 0x200001fb6f5
0x00000200005d3b70 : and al, 0x40 ; call 0x200001fb6f6
0x0000020000076c0e : and al, 0x40 ; call 0x20000475848
0x0000020000076c0d : and al, 0x40 ; call 0x20000475849
0x00000200005cb157 : and al, 0x40 ; call 0x2000063745c
0x00000200005cb156 : and al, 0x40 ; call 0x2000063745d
0x000002000040c159 : and al, 0x40 ; call r10
0x000002000008c849 : and al, 0x40 ; call rax
0x000002000052239f : and al, 0x40 ; dec rax ; add rax, rdx ; jmp 0x20000522342
0x0000020000070509 : and al, 0x40 ; jmp 0x20000070567
0x0000020000070508 : and al, 0x40 ; jmp 0x20000070568
0x00000200000a88d9 : and al, 0x40 ; jmp 0x200000a835f
0x0000020000781df5 : and al, 0x40 ; jmp 0x20000781dbf
0x0000020000207093 : and al, 0x40 ; jmp rax
0x0000020000006692 : and al, 0x40 ; lea rdx, qword ptr [rbp - 1] ; call 0x200000628b8
0x0000020000006691 : and al, 0x40 ; lea rdx, qword ptr [rbp - 1] ; call 0x200000628b9
0x00000200001ac60d : and al, 0x40 ; lea rdx, qword ptr [rsp + 0x38] ; call r8
0x0000020000066c67 : and al, 0x40 ; mov bl, al ; call rsi
0x000002000052a672 : and al, 0x40 ; mov dword ptr [rdi + 0x24], eax ; jmp 0x2000052a642
0x000002000052a671 : and al, 0x40 ; mov dword ptr [rdi + 0x24], eax ; jmp 0x2000052a643
0x00000200003f389d : and al, 0x40 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004d6014 : and al, 0x40 ; mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000515162 : and al, 0x40 ; mov ebx, eax ; call 0x20000140387
0x0000020000515161 : and al, 0x40 ; mov ebx, eax ; call 0x20000140388
0x0000020000067048 : and al, 0x40 ; mov qword ptr [rcx + 0x38], rax ; mov byte ptr [rcx + 0x52], dl ; ret
0x0000020000206fd4 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x50] ; jmp rax
0x000002000022e9ed : and al, 0x40 ; mov rax, rdx ; jmp 0x2000022e9fa
0x00000200001ad6aa : and al, 0x40 ; mov rcx, qword ptr [rsp + 0x20] ; call r9
0x00000200001ad597 : and al, 0x40 ; mov rcx, qword ptr [rsp + 0x20] ; call rax
0x0000020000513746 : and al, 0x40 ; mov rcx, r14 ; call 0x20000140da8
0x0000020000445e51 : and al, 0x40 ; mov rcx, rbx ; call 0x2000007461c
0x0000020000446229 : and al, 0x40 ; mov rcx, rdi ; call 0x20000074664
0x0000020000445c0f : and al, 0x40 ; mov rcx, rdi ; call 0x200000c1e67
0x000002000063eff2 : and al, 0x40 ; mov rcx, rdi ; call r8
0x000002000060f3f6 : and al, 0x40 ; mov rdx, rbp ; call qword ptr [rip - 0x3db391]
0x00000200002181d2 : and al, 0x40 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000498b7f : and al, 0x40 ; pop r15 ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000007abc1 : and al, 0x40 ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000049e818 : and al, 0x40 ; ret 0x48ff
0x00000200000896f3 : and al, 0x40 ; xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000022e3a3 : and al, 0x40 ; xor ecx, ecx ; mov rax, rdx ; jmp 0x2000022e3b4
0x00000200004991c5 : and al, 0x40 ; xor edx, edx ; call 0x200000c2847
0x00000200004991c4 : and al, 0x40 ; xor edx, edx ; call 0x200000c2848
0x000002000050353b : and al, 0x40 ; xor rcx, rsp ; call 0x20000133188
0x000002000050353a : and al, 0x40 ; xor rcx, rsp ; call 0x20000133189
0x000002000018410b : and al, 0x41 ; mov al, 1 ; movzx edx, r14b ; call rax
0x00000200001c2a17 : and al, 0x41 ; mov al, cl ; add rsp, 0x28 ; ret
0x000002000003244e : and al, 0x41 ; mov dword ptr [rax], eax ; ret
0x000002000041a7b7 : and al, 0x41 ; mov eax, eax ; add rsp, 0x48 ; ret
0x00000200000ea7de : and al, 0x42 ; cmp al, 2 ; je 0x200000ea7f9 ; mov al, 1 ; ret
0x000002000041f870 : and al, 0x44 ; add al, 0x75 ; add eax, 0x58c48348 ; ret
0x00000200001684b9 : and al, 0x44 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x00000200007677d2 : and al, 0x44 ; cmp al, cl ; jae 0x200007677e5 ; or eax, 0xffffffff ; ret
0x000002000050e3d8 : and al, 0x44 ; mov eax, edi ; call 0x20000135bf3
0x00000200004a80cd : and al, 0x44 ; mov rcx, r14 ; call 0x200003f4387
0x00000200004c1903 : and al, 0x44 ; mov rcx, r15 ; call 0x200000e5bac
0x00000200005930d8 : and al, 0x44 ; or dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000050f314
0x00000200005930d7 : and al, 0x44 ; or dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000050f315
0x000002000050ed58 : and al, 0x44 ; ret 0x48ff
0x000002000064ed58 : and al, 0x44 ; sub edx, dword ptr [rbx] ; add byte ptr [rax], al ; jmp 0x2000064ed9a
0x00000200001846c6 : and al, 0x45 ; xor eax, eax ; xor edx, edx ; call rax
0x000002000065c067 : and al, 0x48 ; add byte ptr [rax - 0x75], cl ; ret 0x8348
0x0000020000133652 : and al, 0x48 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x000002000010fcb2 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x00000200003d4f3f : and al, 0x48 ; add esp, 0x18 ; ret
0x000002000014a8ca : and al, 0x48 ; add esp, 8 ; ret
0x000002000064b004 : and al, 0x48 ; add rsp, 0x20 ; pop r12 ; ret
0x00000200006bc349 : and al, 0x48 ; add rsp, 0x20 ; pop r14 ; jmp rax
0x0000020000008e80 : and al, 0x48 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000002b684 : and al, 0x48 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200003df1f7 : and al, 0x48 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200006cd21f : and al, 0x48 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001a62a0 : and al, 0x48 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000009ccf : and al, 0x48 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000009d898 : and al, 0x48 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000f0273 : and al, 0x48 ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000051a1c0 : and al, 0x48 ; add rsp, 0x28 ; ret
0x000002000039ec06 : and al, 0x48 ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000068021 : and al, 0x48 ; add rsp, 0x30 ; pop r15 ; ret
0x000002000039a546 : and al, 0x48 ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000022a2c : and al, 0x48 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000012f4c : and al, 0x48 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003b2165 : and al, 0x48 ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000096ac0 : and al, 0x48 ; add rsp, 0x38 ; ret
0x0000020000496eaa : and al, 0x48 ; call 0x200000b9105
0x0000020000496ea9 : and al, 0x48 ; call 0x200000b9106
0x000002000049afce : and al, 0x48 ; call 0x200000bc8c5
0x000002000049afcd : and al, 0x48 ; call 0x200000bc8c6
0x000002000049afc4 : and al, 0x48 ; call 0x200000bc8d5
0x000002000049afc3 : and al, 0x48 ; call 0x200000bc8d6
0x000002000049af9b : and al, 0x48 ; call 0x200000bc945
0x000002000049af9a : and al, 0x48 ; call 0x200000bc946
0x000002000049206d : and al, 0x48 ; call 0x200000c1e65
0x000002000049206c : and al, 0x48 ; call 0x200000c1e66
0x000002000049f36f : and al, 0x48 ; call 0x200000c23c5
0x000002000049f36e : and al, 0x48 ; call 0x200000c23c6
0x0000020000497877 : and al, 0x48 ; call 0x200000c2b95
0x0000020000497876 : and al, 0x48 ; call 0x200000c2b96
0x00000200005e7485 : and al, 0x48 ; call 0x200000c36c4
0x00000200005e7484 : and al, 0x48 ; call 0x200000c36c5
0x00000200004c9e0a : and al, 0x48 ; call 0x200000ee3ed
0x00000200004c9e09 : and al, 0x48 ; call 0x200000ee3ee
0x00000200005126b8 : and al, 0x48 ; call 0x20000140485
0x000002000052e860 : and al, 0x48 ; call 0x2000014f4c5
0x000002000052e85f : and al, 0x48 ; call 0x2000014f4c6
0x00000200003ec485 : and al, 0x48 ; call r12
0x00000200001ac5ea : and al, 0x48 ; call r9
0x00000200001326e6 : and al, 0x48 ; dec dword ptr [rax - 0x39] ; ret 0xba00
0x00000200003b23f5 : and al, 0x48 ; jmp 0x200003b2447
0x00000200004420dd : and al, 0x48 ; jmp 0x200004420a6
0x00000200006b0625 : and al, 0x48 ; jmp rax
0x0000020000128b15 : and al, 0x48 ; lea r8, qword ptr [rsp + 0x30] ; call qword ptr [rbx]
0x00000200004fceec : and al, 0x48 ; lea rdx, qword ptr [rsp + 0x20] ; mov ecx, edi ; call rsi
0x00000200004d1cb7 : and al, 0x48 ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000230e35 : and al, 0x48 ; mov dword ptr [r10], eax ; call r10
0x00000200004fb60f : and al, 0x48 ; mov dword ptr [rbx], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000512707 : and al, 0x48 ; mov dword ptr [rsp + 0x20], edi ; call 0x20000140489
0x00000200004217ea : and al, 0x48 ; mov ecx, ebp ; call 0x200000456e7
0x0000020000504c7c : and al, 0x48 ; mov qword ptr [rbp - 0x50], rax ; call 0x20000134779
0x00000200005389ba : and al, 0x48 ; mov r8, rbp ; mov rdx, rsi ; call rax
0x00000200003ec3d5 : and al, 0x48 ; mov rax, qword ptr [rsp + 0x70] ; call rax
0x0000020000144629 : and al, 0x48 ; mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x000002000049398e : and al, 0x48 ; mov rcx, rbp ; call 0x200000b5808
0x000002000049398d : and al, 0x48 ; mov rcx, rbp ; call 0x200000b5809
0x00000200001ab09c : and al, 0x48 ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x0000020000497642 : and al, 0x48 ; mov rdx, rbx ; call 0x200000b8098
0x0000020000497641 : and al, 0x48 ; mov rdx, rbx ; call 0x200000b8099
0x00000200005240e9 : and al, 0x48 ; xor edx, edx ; call 0x2000014f4c7
0x00000200005240e8 : and al, 0x48 ; xor edx, edx ; call 0x2000014f4c8
0x0000020000503ee9 : and al, 0x48 ; xor rcx, rsp ; call 0x20000133188
0x0000020000503ee8 : and al, 0x48 ; xor rcx, rsp ; call 0x20000133189
0x0000020000030c53 : and al, 0x4c ; add byte ptr [rdi + rcx - 0x44], al ; ret
0x00000200004086f5 : and al, 0x4c ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004c781c : and al, 0x4f ; ret 0x8bff
0x0000020000115d9b : and al, 0x50 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsi
0x0000020000081cc0 : and al, 0x50 ; add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0xb948
0x0000020000105d7c : and al, 0x50 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000d8e22 : and al, 0x50 ; add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x000002000013f6cb : and al, 0x50 ; add rsp, 0x30 ; pop r13 ; ret
0x00000200000441ae : and al, 0x50 ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003a4422 : and al, 0x50 ; add rsp, 0x30 ; pop r15 ; ret
0x00000200006b8cbf : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; jmp rax
0x00000200000c2b2e : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000002f477 : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009a114 : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000008217 : and al, 0x50 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e7bdb : and al, 0x50 ; add rsp, 0x30 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004c91f1 : and al, 0x50 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000068fb00 : and al, 0x50 ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000451433 : and al, 0x50 ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000006488 : and al, 0x50 ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000130c97 : and al, 0x50 ; add rsp, 0x40 ; pop rsi ; ret
0x0000020000231c23 : and al, 0x50 ; add rsp, 0x70 ; pop rdi ; ret
0x000002000008c090 : and al, 0x50 ; add rsp, 0x78 ; pop rdi ; pop rbp ; ret
0x0000020000421058 : and al, 0x50 ; call 0x20000045311
0x00000200004249aa : and al, 0x50 ; call 0x2000004578d
0x00000200004249a9 : and al, 0x50 ; call 0x2000004578e
0x0000020000035cee : and al, 0x50 ; call 0x20000091f44
0x0000020000035ced : and al, 0x50 ; call 0x20000091f45
0x000002000049b149 : and al, 0x50 ; call 0x200000bccc5
0x000002000049b148 : and al, 0x50 ; call 0x200000bccc6
0x00000200003d61ac : and al, 0x50 ; call 0x200000c23c4
0x00000200003d61ab : and al, 0x50 ; call 0x200000c23c5
0x000002000051a092 : and al, 0x50 ; call 0x20000140385
0x000002000051a091 : and al, 0x50 ; call 0x20000140386
0x0000020000513bad : and al, 0x50 ; call 0x200001403e5
0x0000020000513bac : and al, 0x50 ; call 0x200001403e6
0x00000200007845a6 : and al, 0x50 ; call 0x20000140804
0x00000200007845a5 : and al, 0x50 ; call 0x20000140805
0x0000020000781b50 : and al, 0x50 ; call r12
0x000002000014462e : and al, 0x50 ; call rdx
0x000002000063d77a : and al, 0x50 ; inc edx ; jmp 0x2000063d760
0x0000020000671242 : and al, 0x50 ; inc edx ; jmp 0x20000671217
0x0000020000671241 : and al, 0x50 ; inc edx ; jmp 0x20000671218
0x00000200003e4650 : and al, 0x50 ; jmp 0x200003e4619
0x0000020000206fd9 : and al, 0x50 ; jmp rax
0x00000200005fd2bc : and al, 0x50 ; mov dword ptr [rbx], ecx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000024dc3 : and al, 0x50 ; mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000135cf0 : and al, 0x50 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001afaa5 : and al, 0x50 ; mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004c0ce6 : and al, 0x50 ; mov qword ptr [rax], rcx ; jmp 0x200004c0cb6
0x00000200004c0ce5 : and al, 0x50 ; mov qword ptr [rax], rcx ; jmp 0x200004c0cb7
0x00000200001e2e93 : and al, 0x50 ; mov rcx, qword ptr [r10 + 0x1d8] ; call rax
0x000002000043cab6 : and al, 0x50 ; mov rcx, rdi ; call rsi
0x00000200001b9511 : and al, 0x50 ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005110da : and al, 0x50 ; xor rcx, rsp ; call 0x20000133188
0x00000200005110d9 : and al, 0x50 ; xor rcx, rsp ; call 0x20000133189
0x000002000015707f : and al, 0x52 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x00000200001d03f3 : and al, 0x54 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000465048 : and al, 0x54 ; call r10
0x0000020000693d15 : and al, 0x54 ; mov r8d, edi ; mov rdx, rbp ; call rax
0x000002000052aeff : and al, 0x54 ; mov rcx, rsi ; call 0x2000014f188
0x00000200004906ff : and al, 0x55 ; add ecx, ebp ; ret
0x00000200005dd510 : and al, 0x57 ; sar bh, cl ; call rax
0x00000200005c1492 : and al, 0x58 ; add dword ptr [rax], eax ; add al, ch ; test byte ptr [rdx], al ; ret 0x44ff
0x0000020000583b06 : and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x0000020000091d9a : and al, 0x58 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000018e87 : and al, 0x58 ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000110ab0 : and al, 0x58 ; add rsp, 0x30 ; pop r15 ; ret
0x00000200001effb4 : and al, 0x58 ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000230e45 : and al, 0x58 ; add rsp, 0x30 ; pop rcx ; ret
0x00000200001fd9b0 : and al, 0x58 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000002b3c : and al, 0x58 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c2719 : and al, 0x58 ; add rsp, 0x30 ; pop rsi ; ret
0x00000200000baaa2 : and al, 0x58 ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x000002000003ea27 : and al, 0x58 ; add rsp, 0x38 ; ret
0x0000020000120539 : and al, 0x58 ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000121abb : and al, 0x58 ; add rsp, 0x40 ; pop rbp ; ret
0x000002000000c1e6 : and al, 0x58 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000050a6c9 : and al, 0x58 ; add rsp, 0x40 ; pop rsi ; ret
0x00000200000b1428 : and al, 0x58 ; add rsp, 0x78 ; pop rdi ; pop rbx ; ret
0x0000020000420d2e : and al, 0x58 ; call 0x200000451b9
0x0000020000219f10 : and al, 0x58 ; call 0x2000007b88d
0x00000200004a502f : and al, 0x58 ; call 0x200000c95a5
0x00000200005152d2 : and al, 0x58 ; call 0x20000140da5
0x0000020000085e4c : and al, 0x58 ; call rax
0x00000200001e7782 : and al, 0x58 ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000015a02e : and al, 0x58 ; mov qword ptr [rbp - 0x20], rax ; mov eax, r10d ; jmp 0x2000015a044
0x000002000015a02d : and al, 0x58 ; mov qword ptr [rbp - 0x20], rax ; mov eax, r10d ; jmp 0x2000015a045
0x00000200004b32fb : and al, 0x58 ; mov rcx, rbx ; call r15
0x00000200003f85c1 : and al, 0x58 ; mov rcx, rbx ; call rsi
0x000002000076c48b : and al, 0x58 ; xor eax, eax ; add rsp, 0x30 ; pop rsi ; ret
0x00000200005128b4 : and al, 0x58 ; xor r8d, r8d ; call 0x20000140da8
0x00000200005128b3 : and al, 0x58 ; xor r8d, r8d ; call 0x20000140da9
0x00000200001f6eb6 : and al, 0x58 ; xor rcx, rsp ; call 0x20000133187
0x00000200001f6eb5 : and al, 0x58 ; xor rcx, rsp ; call 0x20000133188
0x00000200006c3d08 : and al, 0x5a ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003cda53 : and al, 0x60 ; add dword ptr [rax], eax ; add al, ch ; ret
0x0000020000450697 : and al, 0x60 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xff25
0x00000200000127ea : and al, 0x60 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000062b0d : and al, 0x60 ; add rsp, 0x30 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000002792f : and al, 0x60 ; add rsp, 0x40 ; pop r14 ; ret
0x000002000010b848 : and al, 0x60 ; add rsp, 0x40 ; pop r15 ; ret
0x00000200004dcbd3 : and al, 0x60 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200003bd766 : and al, 0x60 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000008bc4a : and al, 0x60 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000008dc2 : and al, 0x60 ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000086add : and al, 0x60 ; add rsp, 0x40 ; pop rsi ; ret
0x000002000048cc79 : and al, 0x60 ; add rsp, 0x48 ; ret
0x0000020000108ea3 : and al, 0x60 ; add rsp, 0x50 ; pop rbp ; ret
0x00000200006d9ac5 : and al, 0x60 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200000204be : and al, 0x60 ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000025fb6 : and al, 0x60 ; add rsp, 0x68 ; ret
0x000002000043e5a8 : and al, 0x60 ; add rsp, 0x70 ; pop rbp ; ret
0x00000200000fade1 : and al, 0x60 ; call 0x20000067094
0x00000200000fade0 : and al, 0x60 ; call 0x20000067095
0x0000020000105c8a : and al, 0x60 ; call 0x20000091f44
0x0000020000105c89 : and al, 0x60 ; call 0x20000091f45
0x0000020000499009 : and al, 0x60 ; call 0x200000bc365
0x0000020000499008 : and al, 0x60 ; call 0x200000bc366
0x0000020000607175 : and al, 0x60 ; call 0x20000231ce5
0x0000020000607174 : and al, 0x60 ; call 0x20000231ce6
0x00000200000b2975 : and al, 0x60 ; call qword ptr [rbx]
0x0000020000448fac : and al, 0x60 ; call rax
0x000002000013bf25 : and al, 0x60 ; jmp 0x2000013bdf4
0x000002000013bf24 : and al, 0x60 ; jmp 0x2000013bdf5
0x00000200005dd158 : and al, 0x60 ; mov ch, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000124d56 : and al, 0x60 ; mov dword ptr [rax], edi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001b2b7b : and al, 0x60 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x000002000064fd87 : and al, 0x60 ; mov qword ptr [rcx], rax ; add rsp, 0x28 ; ret
0x00000200005962f3 : and al, 0x60 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000020000475e6d : and al, 0x60 ; mov rbp, rcx ; call 0x2000009db88
0x00000200003ec480 : and al, 0x60 ; mov rcx, qword ptr [rsp + 0x48] ; call r12
0x000002000063eab6 : and al, 0x60 ; mov rcx, rbp ; mov rdx, rdi ; call rax
0x0000020000475e94 : and al, 0x60 ; mov rcx, rbx ; call 0x2000009db88
0x000002000015ce86 : and al, 0x60 ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000496ecb : and al, 0x60 ; sar rbx, 0xc ; call 0x200000b9059
0x00000200003e9df8 : and al, 0x62 ; ret
0x000002000011ca58 : and al, 0x67 ; add dword ptr [rax], eax ; add rsp, 0x58 ; ret
0x0000020000604d04 : and al, 0x68 ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003bb639 : and al, 0x68 ; add rsp, 0x40 ; pop r13 ; ret
0x0000020000007f2d : and al, 0x68 ; add rsp, 0x40 ; pop r14 ; ret
0x000002000001e36d : and al, 0x68 ; add rsp, 0x40 ; pop r15 ; ret
0x00000200000882d9 : and al, 0x68 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200003be372 : and al, 0x68 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001075b9 : and al, 0x68 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004be9cb : and al, 0x68 ; add rsp, 0x48 ; pop rdi ; pop rbx ; ret
0x00000200004e8bb0 : and al, 0x68 ; add rsp, 0x48 ; ret
0x00000200006c1084 : and al, 0x68 ; add rsp, 0x50 ; pop r14 ; ret
0x000002000005c04b : and al, 0x68 ; add rsp, 0x50 ; pop rbp ; ret
0x000002000001c1a4 : and al, 0x68 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200003e75dd : and al, 0x68 ; add rsp, 0x50 ; pop rsi ; ret
0x00000200004c4d76 : and al, 0x68 ; call 0x200000ebb39
0x00000200004c4d75 : and al, 0x68 ; call 0x200000ebb3a
0x00000200001ab0a1 : and al, 0x68 ; call rax
0x0000020000459089 : and al, 0x68 ; jmp 0x20000458da9
0x000002000019bda9 : and al, 0x68 ; mov ecx, 0x10 ; call rax
0x000002000049b19b : and al, 0x68 ; mov rcx, rsi ; call 0x200000c06f8
0x000002000060109f : and al, 0x68 ; xor edx, edx ; call 0x20000231017
0x000002000060109e : and al, 0x68 ; xor edx, edx ; call 0x20000231018
0x0000020000536ef8 : and al, 0x68 ; xor rcx, rsp ; call 0x20000133187
0x0000020000536ef7 : and al, 0x68 ; xor rcx, rsp ; call 0x20000133188
0x000002000051de5c : and al, 0x6a ; int1 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005b2cff : and al, 0x6c ; add dword ptr [rax], eax ; add bh, dh ; ret 0xfffe
0x00000200001af02d : and al, 0x6c ; mov rcx, qword ptr [rsp + 0x68] ; call rax
0x00000200004296bf : and al, 0x70 ; add rsp, 0x40 ; pop rbx ; jmp r10
0x0000020000129db3 : and al, 0x70 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000049d9e0 : and al, 0x70 ; add rsp, 0x48 ; pop rsi ; pop rbx ; ret
0x0000020000040a5f : and al, 0x70 ; add rsp, 0x50 ; pop r14 ; ret
0x000002000003a9a9 : and al, 0x70 ; add rsp, 0x50 ; pop rbp ; ret
0x00000200000a7e89 : and al, 0x70 ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000016f91 : and al, 0x70 ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000499312 : and al, 0x70 ; add rsp, 0x50 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200001b4248 : and al, 0x70 ; add rsp, 0x50 ; pop rsi ; ret
0x0000020000134cfd : and al, 0x70 ; add rsp, 0x58 ; ret
0x0000020000133f66 : and al, 0x70 ; add rsp, 0x60 ; pop rbp ; ret
0x00000200000f75ea : and al, 0x70 ; add rsp, 0x60 ; pop rdi ; ret
0x00000200001d7950 : and al, 0x70 ; add rsp, 0x60 ; pop rsi ; ret
0x0000020000067d54 : and al, 0x70 ; add rsp, 0x78 ; pop r15 ; pop rbx ; ret
0x000002000048f294 : and al, 0x70 ; call 0x200000bccc5
0x000002000048f293 : and al, 0x70 ; call 0x200000bccc6
0x00000200005182a9 : and al, 0x70 ; call 0x20000140385
0x00000200005182a8 : and al, 0x70 ; call 0x20000140386
0x00000200005145d8 : and al, 0x70 ; call 0x200001403e5
0x00000200005145d7 : and al, 0x70 ; call 0x200001403e6
0x000002000060e660 : and al, 0x70 ; call 0x20000231ce5
0x000002000060e65f : and al, 0x70 ; call 0x20000231ce6
0x000002000013e940 : and al, 0x70 ; call r11
0x00000200001fd8c2 : and al, 0x70 ; call r9
0x00000200003ec3da : and al, 0x70 ; call rax
0x00000200005966b2 : and al, 0x70 ; jmp 0x200005128dd
0x00000200005966b2 : and al, 0x70 ; jmp 0x200005128e1
0x00000200000b2970 : and al, 0x70 ; lea r8, qword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x0000020000652ef6 : and al, 0x70 ; mov dword ptr [rsp + 0x20], eax ; call 0x2000043f178
0x0000020000652ef5 : and al, 0x70 ; mov dword ptr [rsp + 0x20], eax ; call 0x2000043f179
0x000002000051523b : and al, 0x70 ; mov ebx, eax ; call 0x20000140387
0x000002000051523a : and al, 0x70 ; mov ebx, eax ; call 0x20000140388
0x000002000040f338 : and al, 0x70 ; mov qword ptr [rdx], rcx ; add rsp, 0x68 ; ret
0x000002000064b902 : and al, 0x70 ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [r10]
0x0000020000467df7 : and al, 0x70 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000047858d : and al, 0x70 ; mov rcx, rbp ; call rdi
0x0000020000499b14 : and al, 0x70 ; mov rcx, rsi ; call 0x200000bc288
0x00000200001fd90f : and al, 0x70 ; xor ecx, ecx ; call r9
0x00000200000fad85 : and al, 0x70 ; xor edx, edx ; call 0x20000056fc6
0x00000200000fad84 : and al, 0x70 ; xor edx, edx ; call 0x20000056fc7
0x0000020000510d62 : and al, 0x70 ; xor rcx, rsp ; call 0x20000133188
0x0000020000510d61 : and al, 0x70 ; xor rcx, rsp ; call 0x20000133189
0x00000200005cb728 : and al, 0x78 ; add cl, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000200004b6435 : and al, 0x78 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4520
0x000002000046d047 : and al, 0x78 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0xfb30
0x00000200006cd99c : and al, 0x78 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000107c42 : and al, 0x78 ; add rsp, 0x50 ; pop r14 ; ret
0x00000200003d4777 : and al, 0x78 ; add rsp, 0x50 ; pop r15 ; ret
0x00000200000f507e : and al, 0x78 ; add rsp, 0x50 ; pop rbp ; ret
0x000002000043f127 : and al, 0x78 ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004f4a10 : and al, 0x78 ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000039b51 : and al, 0x78 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001055dc : and al, 0x78 ; add rsp, 0x60 ; pop rbp ; ret
0x00000200004385f9 : and al, 0x78 ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000030b66 : and al, 0x78 ; add rsp, 0x60 ; pop rdi ; ret
0x00000200003b6837 : and al, 0x78 ; add rsp, 0x60 ; pop rsi ; ret
0x00000200003c959d : and al, 0x78 ; call 0x2000001582c
0x00000200003c959c : and al, 0x78 ; call 0x2000001582d
0x000002000043c49b : and al, 0x78 ; call 0x200000534a8
0x00000200004996a8 : and al, 0x78 ; call 0x200000bc285
0x00000200004996a7 : and al, 0x78 ; call 0x200000bc286
0x0000020000195853 : and al, 0x78 ; call 0x200000c1b34
0x0000020000195852 : and al, 0x78 ; call 0x200000c1b35
0x00000200004997bd : and al, 0x78 ; call 0x200000c23c5
0x00000200004997bc : and al, 0x78 ; call 0x200000c23c6
0x000002000051d7e7 : and al, 0x78 ; call 0x200001403e5
0x000002000051d7e6 : and al, 0x78 ; call 0x200001403e6
0x000002000052db3c : and al, 0x78 ; call 0x2000014f185
0x000002000052db3b : and al, 0x78 ; call 0x2000014f186
0x00000200005a260a : and al, 0x78 ; call 0x200001c46cd
0x00000200000dc64f : and al, 0x78 ; call rax
0x0000020000194192 : and al, 0x78 ; jmp 0x200000ca2c2
0x0000020000194191 : and al, 0x78 ; jmp 0x200000ca2c3
0x0000020000403f0b : and al, 0x78 ; mov dword ptr [rdx], ecx ; add rsp, 0x58 ; ret
0x0000020000513be5 : and al, 0x78 ; mov ebx, eax ; call 0x20000140387
0x0000020000513be4 : and al, 0x78 ; mov ebx, eax ; call 0x20000140388
0x00000200001846ee : and al, 0x78 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000022df78 : and al, 0x78 ; mov rax, rdx ; jmp 0x2000022df85
0x00000200003fa37d : and al, 0x78 ; mov rcx, rdi ; call r12
0x00000200005039ee : and al, 0x78 ; xor rcx, rsp ; call 0x20000133188
0x00000200005039ed : and al, 0x78 ; xor rcx, rsp ; call 0x20000133189
0x0000020000224cbc : and al, 0x7c ; add eax, 0x8b480000 ; ret
0x000002000017dfcf : and al, 0x7c ; out dx, eax ; inc dword ptr [rbp - 0x75] ; ret 0xb60f
0x000002000001319a : and al, 0x7e ; adc al, 0 ; add rsp, 0x28 ; ret
0x00000200004bedd4 : and al, 0x80 ; add byte ptr [rax], al ; add al, ch ; ret 0xc758
0x00000200003b116e : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000002b91 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000fa741 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200001f91ce : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000062a9f4 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x4f], dh ; inc rdx ; jmp 0x2000062aa39
0x0000020000064f1b : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000041f7dc : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x000002000015a35c : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x2eb
0x0000020000177975 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3ee9
0x000002000000c193 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x00000200004ddadc : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x00000200003d0176 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret 0x9489
0x00000200005ad98f : and al, 0x80 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200000673be : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000062d69c : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7410
0x00000200004ba80c : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7510
0x0000020000173505 : and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000f2ce4 : and al, 0x82 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x894c
0x00000200003fbf3c : and al, 0x83 ; ret
0x0000020000736a03 : and al, 0x83 ; ret 0x49f8
0x00000200006238fb : and al, 0x84 ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffe
0x00000200004a3349 : and al, 0x84 ; ret
0x000002000060e7c7 : and al, 0x85 ; adc al, 0 ; add byte ptr [rax], al ; call 0x20000231ce9
0x0000020000697ae0 : and al, 0x86 ; ret
0x0000020000456da8 : and al, 0x86 ; ret 0x45ff
0x000002000066d354 : and al, 0x88 ; add byte ptr [rax], al ; add al, ch ; ret 0xacad
0x0000020000654a78 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000180262 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x000002000045ca51 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000007b223 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000020000625cb3 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x000002000005c156 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x00000200003cfa04 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000044c65d : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x8f0f
0x0000020000177985 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3fe9
0x00000200003e32ce : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret 0x4488
0x00000200001c03f6 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0xa483
0x0000020000521a75 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; test ch, dl ; ret
0x0000020000215ef5 : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x6349
0x000002000043a360 : and al, 0x88 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200000d1cc9 : and al, 0x88 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200004ba81c : and al, 0x88 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000200000dbb0f : and al, 0x88 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000020000173a0e : and al, 0x88 ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000014a8c7 : and al, 0x8b ; add al, 0x24 ; add rsp, 8 ; ret
0x00000200005cb505 : and al, 0x8b ; and al, 0x28 ; call 0x20000517753
0x000002000004bfb1 : and al, 0x8b ; ret
0x000002000067e1e7 : and al, 0x8b ; ret 0x3844
0x00000200004300f2 : and al, 0x8b ; ret 0x8348
0x000002000066ac97 : and al, 0x8b ; ret 0x8d4c
0x000002000009af19 : and al, 0x8b ; ret 0xba0f
0x00000200004e6755 : and al, 0x8b ; ret 0xe8c1
0x00000200001653cb : and al, 0x8f ; add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x0000020000492f97 : and al, 0x90 ; add byte ptr [rax], al ; add al, ch ; out dx, eax ; push rax ; ret 0xe9ff
0x0000020000492e03 : and al, 0x90 ; add byte ptr [rax], al ; add al, ch ; xlatb ; pop rsi ; ret 0x48ff
0x00000200000f9c3b : and al, 0x90 ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000069718e : and al, 0x90 ; add byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x00000200000ed8c0 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000010a101 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8348
0x0000020000076bfb : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000109fa3 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xe0e8
0x0000020000177995 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3fe9
0x0000020000167bcf : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200000d1cb3 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000009dc40 : and al, 0x90 ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000044816c : and al, 0x90 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000529c4 : and al, 0x91 ; adc byte ptr [rax], al ; mov qword ptr [r8], rcx ; ret
0x00000200002087f4 : and al, 0x94 ; add byte ptr [rax], al ; add al, ch ; ret 0xf46c
0x00000200005b287d : and al, 0x94 ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffc
0x000002000006d13e : and al, 0x98 ; add al, byte ptr [rax] ; add bh, bh ; ret
0x000002000048e3bf : and al, 0x98 ; add byte ptr [rax], al ; add al, ch ; imul eax ; ret 0x8aff
0x00000200001009e7 : and al, 0x98 ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000009aae0 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200001942a5 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x0000020000101689 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp 0x1ffc158d929
0x00000200003b5cf6 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003cfb36 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200003994b7 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x0000020000625db5 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xce75
0x00000200001779a5 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x40e9
0x000002000004f564 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; stosd dword ptr [rdi], eax ; ret 0x8a45
0x00000200001a15e8 : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200004b5ee3 : and al, 0x98 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000062d64f : and al, 0x98 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0x00000200004b60bf : and al, 0x9c ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000048f6e3 : and al, 0xa0 ; add byte ptr [rax], al ; add al, ch ; jae 0x2000048f729 ; ret
0x00000200000bd843 : and al, 0xa0 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000020000490049 : and al, 0xa0 ; add byte ptr [rax], al ; add bh, dh ; ret 0x3fc
0x00000200001fca80 : and al, 0xa0 ; add byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax - 0x75] ; ret
0x0000020000065168 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret
0x000002000049378f : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x0000020000434ecf : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000066eb62 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000020000198115 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x894c
0x000002000046b41e : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b44
0x000002000010a694 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b44
0x000002000016eca9 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200003ce10b : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200003ce2b7 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xace8
0x000002000069d11b : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret 0xf48
0x000002000040190d : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x4489
0x00000200000897e1 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8b4c
0x000002000050db47 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x000002000069d0b7 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000078c9b : and al, 0xa0 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200000b8434 : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200003b614e : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000002000009a8a5 : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000003af7f : and al, 0xa7 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200000cee13 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x7c80
0x000002000003de4b : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x000002000003de76 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000003de93 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x000002000003deb0 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000002000003ded0 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x000002000003def0 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x000002000050969f : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000064298d : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8949
0x00000200003c6b25 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx + 0x3c], cl ; ret 0x8b44
0x0000020000208ef6 : and al, 0xa8 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7403
0x000002000006d6ba : and al, 0xac ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xc22b
0x00000200006a807c : and al, 0xae ; ret 0xff
0x00000200003eef8e : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200003b5bcc : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000049333a : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200001fedf3 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x000002000007fd19 : and al, 0xb0 ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000002a65 : and al, 0xb2 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x0000020000497265 : and al, 0xb8 ; add byte ptr [rax], al ; add al, ch ; rcr dword ptr [rcx], 1 ; ret 0xf7ff
0x00000200000cf343 : and al, 0xb8 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000020000648979 : and al, 0xb8 ; add byte ptr [rax], al ; add bh, bh ; ret 0xcbe8
0x000002000021eefc : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8948
0x0000020000017c8c : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8b49
0x000002000000e488 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000454b13 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x00000200000a9e39 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x8b48
0x00000200000a9ef1 : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xb], cl ; ret
0x000002000017403e : and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200000e8186 : and al, 0xb8 ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000042c31 : and al, 0xb9 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x00000200005f52e8 : and al, 0xbd ; ret
0x000002000014f76f : and al, 0xc ; mov rax, qword ptr [rsp + 8] ; ret
0x0000020000401158 : and al, 0xc0 ; add byte ptr [rax], al ; add al, ch ; jp 0x20000401182 ; ret
0x0000020000740730 : and al, 0xc0 ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200005242a8 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006c5550 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; loopne 0x200006c54ed ; ret
0x00000200000cbebc : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x830f
0x000002000045fd74 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000546284 : and al, 0xc0 ; mov byte ptr [r8], cl ; mov byte ptr [r9], al ; ret
0x000002000004b18b : and al, 0xc2 ; mov eax, 0xc000025f ; ret
0x00000200006404bc : and al, 0xc3 ; lea rax, qword ptr [rcx + 0x38] ; ret
0x00000200004b277b : and al, 0xc8 ; add byte ptr [rax], al ; add al, ch ; cmp edi, ebp ; ret 0x48ff
0x0000020000063373 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004acc97 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000a9c9f : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], cl ; ret 0x840f
0x0000020000440a5f : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret
0x00000200003f3382 : and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x3948
0x00000200000d53a7 : and al, 0xc8 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x894c
0x0000020000638024 : and al, 0xca ; inc dword ptr [rbp + rcx*4 + 0x4f] ; adc byte ptr [rbx], ah ; ret 0x8948
0x00000200005d4e98 : and al, 0xd ; ret
0x0000020000544f8f : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200004acc6b : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rcx]
0x0000020000650147 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000020000430241 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x41fe
0x00000200004a9821 : and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x000002000064758e : and al, 0xd0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000020000091f9a : and al, 0xd0 ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000002000013f804 : and al, 0xd0 ; mov qword ptr [rcx], rax ; ret
0x000002000021c794 : and al, 0xd2 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000177de : and al, 0xd3 ; mov eax, 0xc000025f ; ret
0x00000200004905ad : and al, 0xd8 ; add byte ptr [rax], al ; add al, ch ; or dword ptr [rsi], ebx ; ret
0x000002000040606d : and al, 0xd8 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000020000649081 : and al, 0xd8 ; add byte ptr [rax], al ; add bh, bh ; ret 0xc3e8
0x0000020000544fa7 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000017939 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x000002000000cbff : and al, 0xd8 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200006924e0 : and al, 0xdc ; ret
0x000002000075e4ec : and al, 0xe ; ret 0xffff
0x0000020000447473 : and al, 0xe0 ; add byte ptr [rax], al ; add al, ch ; ret
0x0000020000544fbf : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x000002000021c5b2 : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x000002000021c49a : and al, 0xe0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x000002000056299e : and al, 0xe6 ; dec esp ; mov rcx, rbx ; call 0x2000004ec21
0x0000020000673251 : and al, 0xe8 ; add byte ptr [rax], al ; add al, ch ; ret 0xffad
0x000002000061bc02 : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x772
0x0000020000544fed : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200004ab9d1 : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000007c0b9 : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret 0
0x0000020000215a4c : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b41
0x00000200000532be : and al, 0xe8 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000000444e : and al, 0xe8 ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000049d673 : and al, 0xe8 ; rdtsc ; ret 0x48ff
0x000002000018cec3 : and al, 0xea ; int1 ; push rsi ; ret 0x741e
0x00000200004300eb : and al, 0xeb ; add eax, 0x489d08b ; and al, 0x8b ; ret 0x8348
0x000002000010f949 : and al, 0xeb ; ret
0x00000200000cb071 : and al, 0xeb ; sbb al, 0xf ; mov bh, 0x46 ; add bh, bh ; ret 0x348
0x000002000041943b : and al, 0xee ; add bh, bh ; ret
0x000002000010dfc6 : and al, 0xf ; mov bh, 0x47 ; sbb bh, bh ; ret 0xd03b
0x0000020000093e01 : and al, 0xf ; test dword ptr [rbx - 0x9fffffa], esi ; ret
0x0000020000497b88 : and al, 0xf ; test dword ptr [rdx - 0x1000000], edx ; ret
0x00000200000a2517 : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x894c
0x000002000000d316 : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x00000200000cfa96 : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0xf44
0x00000200000c12d7 : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x5c], cl ; ret
0x00000200007625a7 : and al, 0xf0 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret 0x4975
0x000002000006d86c : and al, 0xf0 ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000020000014518 : and al, 0xf0 ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200001491b0 : and al, 0xf0 ; pop rbx ; ret
0x0000020000149104 : and al, 0xf0 ; ret
0x000002000008914d : and al, 0xf6 ; ret
0x00000200005e7002 : and al, 0xf6 ; ret 0x7402
0x00000200000b0128 : and al, 0xf6 ; ret 0x7420
0x000002000008eb96 : and al, 0xf7 ; inc dword ptr [rbp - 0x75] ; ret 0x488b
0x0000020000179544 : and al, 0xf8 ; add byte ptr [rax], al ; add al, ch ; ret 0xf370
0x0000020000232263 : and al, 0xf8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x00000200000342b2 : and al, 0xfd ; mov byte ptr [rcx + 0x1b], al ; ret
0x00000200004e9fa0 : and al, 0xff ; fdivp st(7) ; add rsp, 0x28 ; ret
0x000002000074c9a2 : and al, 0xff ; ret
0x00000200001a6994 : and al, 0xff ; ret 0x894c
0x000002000018bdd9 : and al, 0xff ; ret 0xb70f
0x00000200004cb4f1 : and al, 0xff ; ret 0xc2eb
0x000002000068bbba : and al, 1 ; mov al, r8b ; ret
0x0000020000403f3a : and al, 1 ; mov byte ptr [r8], al ; xor eax, eax ; ret
0x000002000003185e : and al, 1 ; ret
0x000002000019b995 : and al, 1 ; xor byte ptr [rcx + 0x22], al ; ret
0x00000200000ec68e : and al, 1 ; xor byte ptr [rdx + 0x22], al ; ret
0x00000200004041f3 : and al, 2 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x000002000021b221 : and al, 3 ; ret
0x0000020000132620 : and al, 7 ; add byte ptr [rax - 0x3ffffffe], bh ; ret
0x00000200000b2db6 : and al, 7 ; jne 0x200000b2dc9 ; mov eax, 1 ; ret
0x00000200000e85d6 : and al, 8 ; cmp eax, r8d ; jb 0x200000e85c7 ; ret
0x00000200000e85d5 : and al, 8 ; cmp eax, r8d ; jb 0x200000e85c8 ; ret
0x00000200001d947f : and al, 8 ; cmp r8, rcx ; ja 0x200001d9492 ; xor eax, eax ; ret
0x000002000069ad7a : and al, 8 ; jae 0x2000069ad89 ; or eax, 0xffffffff ; ret
0x000002000069ad79 : and al, 8 ; jae 0x2000069ad8a ; or eax, 0xffffffff ; ret
0x00000200001d94d6 : and al, 8 ; jbe 0x200001d948f ; mov eax, 1 ; ret
0x0000020000138102 : and al, 8 ; ldmxcsr dword ptr [rsp + 8] ; ret
0x00000200000f1694 : and al, 8 ; mov al, dl ; ret
0x00000200001a7c75 : and al, 8 ; mov al, r10b ; ret
0x00000200001fbec6 : and al, 8 ; mov al, r8b ; ret
0x0000020000634ba4 : and al, 8 ; mov al, r9b ; ret
0x00000200000299c5 : and al, 8 ; mov dword ptr [r9 + 0x18], eax ; ret
0x0000020000748560 : and al, 8 ; mov eax, 1 ; ret
0x00000200004cf210 : and al, 8 ; mov eax, ecx ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000021e7ef : and al, 8 ; mov eax, ecx ; ret
0x000002000046b941 : and al, 8 ; mov eax, edx ; ret
0x0000020000117dba : and al, 8 ; mov eax, r10d ; ret
0x000002000004decf : and al, 8 ; mov eax, r11d ; ret
0x0000020000052953 : and al, 8 ; mov eax, r8d ; ret
0x0000020000020007 : and al, 8 ; mov eax, r9d ; ret
0x00000200001a779d : and al, 8 ; mov qword ptr [r8], r11 ; ret
0x000002000074dde0 : and al, 8 ; mov rax, r10 ; ret
0x0000020000126bb6 : and al, 8 ; mov rax, r11 ; ret
0x00000200004fc3d3 : and al, 8 ; mov rax, r8 ; ret
0x000002000013580e : and al, 8 ; mov rax, r9 ; ret
0x0000020000031b14 : and al, 8 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000024b8d : and al, 8 ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x000002000003850f : and al, 8 ; mov rsi, qword ptr [rsp + 0x10] ; ret
0x000002000021b9cf : and al, 8 ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x00000200006421ae : and al, 8 ; movzx eax, r9w ; ret
0x0000020000062fdd : and al, 8 ; or rax, rdx ; mov qword ptr [r9 + 8], rax ; ret
0x0000020000009c3f : and al, 8 ; ret
0x00000200003ed46b : and al, 8 ; ror r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003ee024 : and al, 8 ; ror r9d, cl ; lea eax, dword ptr [r9 + r10] ; ret
0x000002000069ad87 : and al, 8 ; seta cl ; mov eax, ecx ; ret
0x0000020000424537 : and al, 8 ; test r8d, r8d ; js 0x2000042454a ; xor eax, eax ; ret
0x00000200004962f8 : and al, 9 ; ret 0x84ff
0x000002000057a901 : and al, ah ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000020000141a5a : and al, ah ; add byte ptr [rax], al ; ret
0x0000020000141e5a : and al, al ; add byte ptr [rax], al ; ret
0x0000020000005f08 : and al, al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000006f1df : and al, al ; add rsp, 0x28 ; ret
0x000002000003a7e4 : and al, al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001bfe44 : and al, al ; add rsp, 0x50 ; pop rbx ; ret
0x000002000021ddd2 : and al, al ; cmp al, 2 ; jae 0x2000021dde3 ; xor eax, eax ; ret
0x000002000005a77c : and al, al ; mov byte ptr [rsi], 0x11 ; xor eax, eax ; jmp 0x2000005a750
0x00000200001c130a : and al, al ; mov eax, r11d ; add rsp, 0x28 ; ret
0x0000020000053842 : and al, al ; movzx ecx, cl ; mov cr8, rcx ; ret
0x000002000003915c : and al, al ; ret
0x00000200001dd616 : and al, al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000014175a : and al, bh ; add byte ptr [rax], al ; ret
0x0000020000141b5a : and al, bl ; add byte ptr [rax], al ; ret
0x000002000001f84f : and al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d8908 : and al, bl ; cmovne ebp, ebx ; xor edx, edx ; call 0x20000064b29
0x00000200006a3551 : and al, bl ; jmp qword ptr [rcx]
0x0000020000037721 : and al, bl ; mov cr3, rax ; ret
0x0000020000512e5a : and al, bl ; ret
0x000002000013b2f6 : and al, bpl ; ret
0x000002000002bb63 : and al, byte ptr [r15] ; xor edi, edi ; jmp 0x2000002bb33
0x00000200000f5137 : and al, byte ptr [r8] ; add byte ptr [rbp + 1], dh ; ret
0x00000200001d05f2 : and al, byte ptr [rax - 0x80] ; call qword ptr [rcx]
0x000002000064185e : and al, byte ptr [rax] ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005f88a1 : and al, byte ptr [rax] ; add al, al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000540c45 : and al, byte ptr [rax] ; add al, al ; add rsp, 0x28 ; ret
0x000002000044d62b : and al, byte ptr [rax] ; add al, al ; jmp 0x2000044d5f8
0x000002000003fe21 : and al, byte ptr [rax] ; add al, al ; ret
0x00000200006c74fd : and al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001e69d1 : and al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200006d7c46 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006d78fe : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000138007 : and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200000f5138 : and al, byte ptr [rax] ; add byte ptr [rbp + 1], dh ; ret
0x000002000062c4da : and al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001f496b : and al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x000002000046404b : and al, byte ptr [rax] ; and dword ptr [r8], 0 ; ret
0x00000200000d95e9 : and al, byte ptr [rax] ; je 0x200000d95d9 ; mov eax, 1 ; ret
0x000002000016f028 : and al, byte ptr [rax] ; jmp 0x2000010b274
0x000002000014f5f8 : and al, byte ptr [rax] ; mov dword ptr [rip + 0x22fc38], eax ; ret
0x0000020000527305 : and al, byte ptr [rax] ; mov eax, 0x8000001a ; ret
0x00000200001f4a11 : and al, byte ptr [rax] ; mov eax, 0xc0000001 ; ret
0x00000200003aafd3 : and al, byte ptr [rax] ; mov eax, 0xc00000bb ; ret
0x00000200001c981e : and al, byte ptr [rax] ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001c7091 : and al, byte ptr [rax] ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000014f5fe : and al, byte ptr [rax] ; ret
0x00000200000d95cb : and al, byte ptr [rax] ; setne al ; ret
0x00000200003e71ae : and al, byte ptr [rax] ; xor eax, eax ; ret
0x000002000059ea1f : and al, byte ptr [rbp - 0x75] ; ret
0x000002000017e58b : and al, byte ptr [rbp - 0x7c] ; ret 0x3075
0x0000020000629e33 : and al, byte ptr [rbx + 0x3740af8] ; xor eax, eax ; ret
0x0000020000229b4c : and al, byte ptr [rbx + 0x3b41dfc0] ; ret
0x00000200002298cd : and al, byte ptr [rbx + 0x3b41dfc0] ; ret 0x677
0x0000020000686677 : and al, byte ptr [rcx - 0x75] ; add al, 3 ; ret 0x4589
0x000002000044fd53 : and al, byte ptr [rcx - 0x75] ; ret 0x8b48
0x00000200004cf1f7 : and al, byte ptr [rcx - 1] ; ret 0x8349
0x00000200001324f0 : and al, byte ptr [rdi] ; add byte ptr [rax - 0x3fffff9f], bh ; jmp 0x200001324c6
0x000002000002bb64 : and al, byte ptr [rdi] ; xor edi, edi ; jmp 0x2000002bb32
0x00000200000b75e5 : and al, byte ptr [rsp + rsi*2] ; idiv dword ptr [rax + 1] ; ret
0x0000020000515486 : and al, ch ; adc al, 0xb9 ; ret 0x48ff
0x000002000010bcc5 : and al, ch ; add byte ptr [r8], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000014195a : and al, ch ; add byte ptr [rax], al ; ret
0x000002000011bac9 : and al, ch ; add dword ptr [rdi - 6], ecx ; dec dword ptr [rax - 0x75] ; ret
0x00000200004eec95 : and al, ch ; add dword ptr [rsi + 0x58affea], ebp ; pop rdi ; ret
0x000002000061b461 : and al, ch ; add eax, 0x8bffba8b ; ret
0x00000200003daead : and al, ch ; add ecx, esi ; ret
0x00000200003e8e5e : and al, ch ; and byte ptr [rdx - 0x74b7fffc], bh ; ret
0x000002000015683b : and al, ch ; call rax
0x00000200006d2ebb : and al, ch ; call rdi
0x0000020000407a1a : and al, ch ; cmp al, 0x10 ; ret
0x00000200005aa09c : and al, ch ; cmp bl, al ; jmp 0x200005aa0a9
0x00000200000efed4 : and al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000020000650d6b : and al, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; add bh, bh ; ret
0x00000200001af71c : and al, ch ; int 0xff
0x00000200005151c8 : and al, ch ; jb 0x20000515183 ; ret 0x48ff
0x0000020000515421 : and al, ch ; jns 0x200005153e2 ; ret 0x48ff
0x0000020000515159 : and al, ch ; loope 0x20000515114 ; ret 0x48ff
0x00000200005136ea : and al, ch ; mov al, 0xd6 ; ret 0x48ff
0x000002000050d4c5 : and al, ch ; mov ch, 0x2f ; ret
0x0000020000504325 : and al, ch ; mov ch, 0xc0 ; ret
0x0000020000105f20 : and al, ch ; mov cl, cl ; cmc ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000182c58 : and al, ch ; mov dl, 0x6a ; lock dec dword ptr [rbx + rcx*4 + 0x15] ; ret
0x00000200001d5a18 : and al, ch ; mov dl, 0xaf ; out dx, al ; dec dword ptr [rax - 0x75] ; ret
0x000002000060afc5 : and al, ch ; mov ecx, 0x8bffe298 ; ret
0x0000020000427d12 : and al, ch ; or ch, dh ; ret 0x48ff
0x00000200005e830f : and al, ch ; out dx, eax ; ret
0x0000020000652efb : and al, ch ; outsd dx, dword ptr [rsi] ; ret 0xffde
0x0000020000764b3e : and al, ch ; pop rsp ; ret 0xff9d
0x00000200000dbd7a : and al, ch ; push rax ; push 0xfd ; dec dword ptr [rbp - 0x75] ; ret 0x44c7
0x00000200004afcf2 : and al, ch ; push rax ; ret
0x0000020000467783 : and al, ch ; push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000504443 : and al, ch ; push rdi ; leave ; ret
0x0000020000626938 : and al, ch ; push rdx ; ret 0xffa9
0x0000020000096747 : and al, ch ; ret
0x00000200005f5ebc : and al, ch ; ret 0x10
0x0000020000042e28 : and al, ch ; ret 0x2d2
0x0000020000074dc8 : and al, ch ; ret 0x4456
0x00000200001dae18 : and al, ch ; ret 0x56e
0x0000020000773f08 : and al, ch ; ret 0x9bf9
0x000002000056aee0 : and al, ch ; ret 0xb19e
0x00000200005c6b78 : and al, ch ; ret 0xb7cd
0x0000020000487478 : and al, ch ; ret 0xbe9b
0x00000200005f89b8 : and al, ch ; ret 0xeb40
0x00000200001b9508 : and al, ch ; ret 0xf074
0x00000200004ee7e0 : and al, ch ; ret 0xf338
0x00000200005362b8 : and al, ch ; ret 0xf767
0x0000020000591ba4 : and al, ch ; ret 0xf77a
0x0000020000595b04 : and al, ch ; ret 0xf7a9
0x00000200000d1bc8 : and al, ch ; ret 0xf7d3
0x00000200001131b8 : and al, ch ; ret 0xfd8f
0x000002000049e198 : and al, ch ; ret 0xffd7
0x00000200005a9c3a : and al, ch ; ret 0xffeb
0x00000200000fa668 : and al, ch ; ret 0xfff9
0x0000020000051428 : and al, ch ; ret 1
0x00000200000ca338 : and al, ch ; ret 5
0x00000200004ccd0e : and al, ch ; sal byte ptr [rcx], 1 ; ret 0x44ff
0x000002000053c4a9 : and al, ch ; sar dword ptr [rsi], 1 ; sar bh, 0x8b ; ret
0x000002000042d897 : and al, ch ; scasd eax, dword ptr [rdi] ; pop rdi ; ret 0xb8ff
0x000002000012bf65 : and al, ch ; stc ; dec dword ptr [rax - 0x75] ; ret
0x00000200004f5775 : and al, ch ; stc ; push rsi ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000513672 : and al, ch ; sub bh, dl ; ret 0x48ff
0x00000200001bf47b : and al, ch ; xchg eax, ebx ; ret
0x00000200005ce343 : and al, ch ; xlatb ; ret 0xffa4
0x00000200003eed76 : and al, ch ; xor al, 0x48 ; ret
0x00000200005771d9 : and al, ch ; xor dword ptr [rsi + rcx], esi ; nop ; jmp 0x200003f34ca
0x0000020000513147 : and al, ch ; xor edx, ebx ; ret 0x85ff
0x0000020000141d5a : and al, cl ; add byte ptr [rax], al ; ret
0x00000200000d325f : and al, cl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000095c1b : and al, cl ; call 0x1ffc2449d2e
0x00000200000a63b5 : and al, cl ; call 0x1ffc345a4c8
0x00000200000a63b4 : and al, cl ; call 0x1ffc345a4c9
0x000002000074b169 : and al, cl ; call 0x2007536ec7b
0x00000200006a35ff : and al, cl ; call qword ptr [rdx]
0x00000200001ef279 : and al, cl ; mov al, dl ; ret
0x00000200001131c9 : and al, cl ; mov byte ptr [rbx], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005d5847 : and al, cl ; push qword ptr [rbx] ; ror byte ptr [rbp - 0x75], cl ; ret
0x000002000005382f : and al, cl ; ret
0x000002000005e4e3 : and al, cl ; sub dword ptr [rax], eax ; add dword ptr [rbp - 0x75], ecx ; ret 0xc2eb
0x000002000014185a : and al, dh ; add byte ptr [rax], al ; ret
0x00000200006169b2 : and al, dh ; ret 0x48ff
0x0000020000141c5a : and al, dl ; add byte ptr [rax], al ; ret
0x00000200001c6af9 : and al, dl ; jmp 0x200001c6b12
0x000002000007bb82 : and al, dl ; mov byte ptr [r9], al ; xor eax, eax ; ret
0x00000200004875bf : and al, dl ; mov byte ptr [rdx], al ; jne 0x200004875d0 ; xor eax, eax ; ret
0x00000200000203c9 : and al, dl ; or byte ptr [rcx + 9], 1 ; mov byte ptr [rcx + 8], al ; ret
0x000002000007bb81 : and al, r10b ; mov byte ptr [r9], al ; xor eax, eax ; ret
0x00000200004875be : and al, r10b ; mov byte ptr [rdx], al ; jne 0x200004875d1 ; xor eax, eax ; ret
0x000002000074b168 : and al, r9b ; call 0x2007536ec7c
0x00000200000167eb : and bh, bh ; ret
0x00000200001a353c : and bh, bh ; ret 0x3b41
0x00000200003fb494 : and bh, bh ; ret 0x513b
0x00000200001a34c2 : and bh, bh ; ret 0x533b
0x0000020000632ac5 : and bh, bh ; ret 0x553b
0x0000020000699f65 : and bh, bh ; ret 0x8349
0x00000200001dfd5c : and bh, bh ; ret 0x9489
0x00000200003cce0e : and bh, byte ptr [rax + 0x19] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000051ba9a : and bh, byte ptr [rdx] ; ret
0x000002000075c89a : and bh, byte ptr [rdx] ; ret 0x48ff
0x0000020000736410 : and bh, dh ; fistp word ptr [rbx] ; jmp qword ptr [rbx]
0x00000200004095ec : and bh, dh ; in al, dx ; dec dword ptr [rbx + 0x38de8d8] ; ret
0x000002000054494f : and bh, dh ; ret
0x000002000014025a : and bl, ah ; add byte ptr [rax], al ; ret
0x000002000014065a : and bl, al ; add byte ptr [rax], al ; ret
0x00000200003e71ab : and bl, al ; and dword ptr [rdx], 0 ; xor eax, eax ; ret
0x00000200006404a4 : and bl, al ; lea rax, qword ptr [rcx + 0x2c] ; ret
0x00000200001d9e99 : and bl, al ; or ebp, 0x28 ; jmp 0x200001d9ed1
0x0000020000037724 : and bl, al ; ret
0x00000200003cbec0 : and bl, al ; xor eax, eax ; ret
0x000002000014035a : and bl, bl ; add byte ptr [rax], al ; ret
0x000002000074f4ea : and bl, byte ptr [rbx] ; scasb al, byte ptr [rdi] ; inc dword ptr [rbx + rcx*4 + 5] ; ret
0x000002000010941a : and bl, byte ptr [rdi] ; add bh, bh ; ret
0x000002000074c5da : and bl, byte ptr [rdx] ; ret
0x000002000007bb8d : and bl, ch ; call 0x20000081454
0x00000200003d9e1b : and bl, ch ; enter 0x58b8, 0 ; add al, al ; ret
0x0000020000203060 : and bl, ch ; jrcxz 0x20000203067 ; ret
0x000002000003445d : and bl, ch ; rol byte ptr [rcx - 0x75], 1 ; ret 0xe8d1
0x00000200004baa63 : and bl, ch ; xor al, 0x48 ; mov eax, edx ; jmp 0x200004baa19
0x000002000014055a : and bl, cl ; add byte ptr [rax], al ; ret
0x000002000014045a : and bl, dl ; add byte ptr [rax], al ; ret
0x00000200004aa72a : and bl, dl ; ret
0x0000020000454758 : and bpl, byte ptr [rbx] ; ret
0x00000200000093d5 : and bpl, byte ptr [rdi] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001f64a6 : and byte ptr [r10 + 3], sil ; xor al, al ; ret
0x00000200003e9a5c : and byte ptr [r11 + 0x63d3e8cf], r9b ; ret
0x00000200005df5c8 : and byte ptr [r11 + 0x9091], r9b ; add dh, dh ; ret 0xf02
0x00000200005f73cb : and byte ptr [r11], r14b ; shr al, cl ; ret
0x0000020000427cf5 : and byte ptr [r11], r14b ; shr al, cl ; ret 0xc2f2
0x00000200003dc09c : and byte ptr [r11], r15b ; ret
0x0000020000153c8f : and byte ptr [r11], r9b ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000153150 : and byte ptr [r11], r9b ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200001d8dac : and byte ptr [r13 + 0x3b], al ; ret 0x675
0x0000020000127734 : and byte ptr [r13 + rcx*4 + 5], cl ; ret
0x000002000017759e : and byte ptr [r13 - 0x75], r9b ; ret
0x000002000005684e : and byte ptr [r13 - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0x121b
0x000002000063c221 : and byte ptr [r14 - 1], spl ; ret 0xb70f
0x00000200005f7237 : and byte ptr [r15], cl ; xchg eax, ebp ; ret 0x3d80
0x00000200002312a3 : and byte ptr [r8 + 0x33], cl ; ret
0x0000020000146926 : and byte ptr [r8 + 0xf], cl ; ret
0x000002000006eded : and byte ptr [r8 + 3], cl ; ret 0x3b48
0x0000020000114217 : and byte ptr [r8 + 3], r9b ; ret
0x0000020000132653 : and byte ptr [r8 + rax], bl ; ret
0x00000200004f8f5d : and byte ptr [r8 - 0x75], cl ; ret
0x00000200004025c7 : and byte ptr [r8 - 0x75], cl ; ret 0x8949
0x000002000040c3b7 : and byte ptr [r8 - 0x75], cl ; ret 0x8b49
0x000002000000eb66 : and byte ptr [r8 - 0x75], cl ; sbb byte ptr [r8 - 0x7b], cl ; ret 0x775
0x00000200001c991f : and byte ptr [r8 - 0x75], cl ; xlatb ; mov rcx, rbp ; call rax
0x0000020000083e74 : and byte ptr [r8 - 0x75], r9b ; ret
0x000002000074bec6 : and byte ptr [r8 - 0x77], cl ; or byte ptr [r8 - 0x7d], cl ; ret
0x000002000053f9f0 : and byte ptr [r8 - 0x77], cl ; or r15b, dil ; ret 0x8948
0x0000020000055b96 : and byte ptr [r8 - 0x7d], cl ; clc ; add dword ptr [rbp + 1], esi ; ret
0x00000200006678ca : and byte ptr [r8 - 0x7d], cl ; ret
0x00000200001c5b9b : and byte ptr [r8], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c1c0d : and byte ptr [r9 + 0x23], cl ; ret
0x0000020000767e92 : and byte ptr [r9 + 3], cl ; ret 0x3b48
0x00000200001cc0d9 : and byte ptr [r9 - 0x3f], cl ; cli ; add eax, dword ptr [rbp + 0x2b] ; ret 0x3b4c
0x000002000050701a : and byte ptr [r9 - 0x75], al ; ret
0x000002000044cb22 : and byte ptr [r9 - 0x75], al ; ror byte ptr [rdi], 0x45 ; ret 0x394c
0x0000020000492ec2 : and byte ptr [r9 - 0x75], r9b ; ret 0xc148
0x0000020000656d1c : and byte ptr [r9 - 0xa], r8b ; ret 0x7401
0x00000200000d2b5d : and byte ptr [rax + 0x23], cl ; ret
0x00000200000a0be1 : and byte ptr [rax + 0x2b], cl ; ror dword ptr [rax - 1], 1 ; ret 0x3b48
0x00000200001dc40e : and byte ptr [rax + 0x33], cl ; ret
0x00000200003bb72b : and byte ptr [rax + 0x39], cl ; or dword ptr [rbp + 1], esi ; ret
0x00000200003bb678 : and byte ptr [rax + 0x3b], cl ; ret
0x00000200000777d7 : and byte ptr [rax + 0x3b], cl ; ret 0x2674
0x000002000077f16c : and byte ptr [rax + 0x3b], cl ; ret 0x267d
0x000002000009e74f : and byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200000935bf : and byte ptr [rax + 0x3b], cl ; ret 0x870f
0x000002000003728b : and byte ptr [rax + 0x3b], cl ; ret 0xa74
0x0000020000648483 : and byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200005eab7e : and byte ptr [rax + 0x63], cl ; ret 0xff41
0x00000200001b2743 : and byte ptr [rax + 0x69], cl ; ret 0x201
0x000002000074b419 : and byte ptr [rax + 0xb4840c9], al ; ret 0x8841
0x00000200003aa952 : and byte ptr [rax + 0xb], cl ; ret 0x10a8
0x0000020000765777 : and byte ptr [rax + 0xb], cl ; ret 0x188
0x000002000020f82c : and byte ptr [rax + 0xb], cl ; ret 0x1c7
0x000002000073c25e : and byte ptr [rax + 0xb], cl ; ret 0x2348
0x00000200001b0e06 : and byte ptr [rax + 0xb], cl ; ret 0x2a8
0x000002000010a1f5 : and byte ptr [rax + 0xb], cl ; ret 0x2b48
0x00000200001272ca : and byte ptr [rax + 0xb], cl ; ret 0x2b49
0x00000200003a191f : and byte ptr [rax + 0xb], cl ; ret 0x3840
0x000002000058dd4f : and byte ptr [rax + 0xb], cl ; ret 0x3843
0x0000020000022c20 : and byte ptr [rax + 0xb], cl ; ret 0x3945
0x000002000014dfc7 : and byte ptr [rax + 0xb], cl ; ret 0x3948
0x000002000014b75a : and byte ptr [rax + 0xb], cl ; ret 0x3949
0x00000200004919c1 : and byte ptr [rax + 0xb], cl ; ret 0x3b48
0x000002000039d8a7 : and byte ptr [rax + 0xb], cl ; ret 0x43f7
0x000002000020bd36 : and byte ptr [rax + 0xb], cl ; ret 0x45c6
0x00000200001c9782 : and byte ptr [rax + 0xb], cl ; ret 0x48c3
0x00000200006c2881 : and byte ptr [rax + 0xb], cl ; ret 0x48f3
0x00000200003a4d96 : and byte ptr [rax + 0xb], cl ; ret 0x524
0x000002000008b293 : and byte ptr [rax + 0xb], cl ; ret 0x558b
0x00000200001b67b7 : and byte ptr [rax + 0xb], cl ; ret 0x589
0x0000020000746f58 : and byte ptr [rax + 0xb], cl ; ret 0x6348
0x00000200001c0a36 : and byte ptr [rax + 0xb], cl ; ret 0x8025
0x000002000020f84c : and byte ptr [rax + 0xb], cl ; ret 0x81f0
0x0000020000209019 : and byte ptr [rax + 0xb], cl ; ret 0x8348
0x000002000074b4c3 : and byte ptr [rax + 0xb], cl ; ret 0x83f0
0x000002000074bf39 : and byte ptr [rax + 0xb], cl ; ret 0x8440
0x00000200003a152a : and byte ptr [rax + 0xb], cl ; ret 0x8844
0x000002000013dd4d : and byte ptr [rax + 0xb], cl ; ret 0x8944
0x00000200000f01ea : and byte ptr [rax + 0xb], cl ; ret 0x8948
0x000002000008ae3e : and byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000008af9e : and byte ptr [rax + 0xb], cl ; ret 0x894a
0x000002000022d2f9 : and byte ptr [rax + 0xb], cl ; ret 0x894c
0x0000020000022b73 : and byte ptr [rax + 0xb], cl ; ret 0x894d
0x00000200000c74e5 : and byte ptr [rax + 0xb], cl ; ret 0x8b48
0x0000020000069ec4 : and byte ptr [rax + 0xb], cl ; ret 0x8b49
0x0000020000221e61 : and byte ptr [rax + 0xb], cl ; ret 0x8b4b
0x000002000008a57f : and byte ptr [rax + 0xb], cl ; ret 0x8b4c
0x000002000039fa41 : and byte ptr [rax + 0xb], cl ; ret 0x8d48
0x00000200003a19ba : and byte ptr [rax + 0xb], cl ; ret 0x8d49
0x000002000014488d : and byte ptr [rax + 0xb], cl ; ret 0x918b
0x00000200003aa76e : and byte ptr [rax + 0xb], cl ; ret 0xb48
0x000002000076dc85 : and byte ptr [rax + 0xb], cl ; ret 0xba48
0x00000200000f2e23 : and byte ptr [rax + 0xb], cl ; ret 0xc148
0x0000020000148a91 : and byte ptr [rax + 0xb], cl ; ret 0xc35f
0x000002000046ca97 : and byte ptr [rax + 0xb], cl ; ret 0xc833
0x00000200001c4a83 : and byte ptr [rax + 0xb], cl ; ret 0xc88b
0x00000200001bf927 : and byte ptr [rax + 0xb], cl ; ret 0xc903
0x000002000012166a : and byte ptr [rax + 0xb], cl ; ret 0xcb8b
0x000002000008b55d : and byte ptr [rax + 0xb], cl ; ret 0xccc3
0x000002000020b877 : and byte ptr [rax + 0xb], cl ; ret 0xd18b
0x0000020000185296 : and byte ptr [rax + 0xb], cl ; ret 0xd233
0x000002000074c437 : and byte ptr [rax + 0xb], cl ; ret 0xf41
0x000002000016f00b : and byte ptr [rax + 0xb], cl ; ret 0xf48
0x00000200000b11eb : and byte ptr [rax + 0xb], cl ; ret 0xffba
0x00000200000596a0 : and byte ptr [rax + 0xb], cl ; ror dword ptr [rbx + rdi - 0x3e], 1 ; ja 0x200000596b3 ; ret
0x0000020000146927 : and byte ptr [rax + 0xf], cl ; ret
0x00000200001380ef : and byte ptr [rax + 0xffff], bh ; ret
0x0000020000114218 : and byte ptr [rax + 3], cl ; ret
0x000002000006edee : and byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000063cd5f : and byte ptr [rax + rax], al ; add byte ptr [rax], al ; setne al ; ret
0x000002000040de28 : and byte ptr [rax + rax], al ; add rsp, 0x38 ; ret
0x0000020000199f71 : and byte ptr [rax + rax], al ; rol byte ptr [rcx - 0x73], 0x49 ; xor al, 0xe8 ; ret 0xfa99
0x000002000017a471 : and byte ptr [rax + rax], al ; rol byte ptr [rcx - 0x73], 0x49 ; xor al, 0xe8 ; ret 0xfc94
0x000002000003b07b : and byte ptr [rax + rax], al ; sal byte ptr [rbp + rdi - 0x50], 1 ; ret
0x0000020000132654 : and byte ptr [rax + rax], bl ; ret
0x00000200006c67db : and byte ptr [rax - 0x39], cl ; ret 0x6980
0x00000200005f2ea2 : and byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200005134a8 : and byte ptr [rax - 0x73], cl ; adc r8b, r13b ; cli ; pop rbp ; ret 0x48ff
0x00000200006594f4 : and byte ptr [rax - 0x73], cl ; fucompi st(0) ; ret 0xaf5f
0x00000200000d218d : and byte ptr [rax - 0x73], cl ; push rbp ; loopne 0x200000d21da ; call rbx
0x000002000010c604 : and byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x28 ; xor ecx, ecx ; call rax
0x00000200005131a3 : and byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x40 ; call 0x20000140489
0x0000020000512746 : and byte ptr [rax - 0x73], cl ; push rsp ; and al, 0x48 ; call 0x20000140489
0x00000200006594f3 : and byte ptr [rax - 0x73], r9b ; fucompi st(0) ; ret 0xaf5f
0x00000200001ae136 : and byte ptr [rax - 0x75], cl ; add eax, 0x12433a ; call rax
0x00000200001adfac : and byte ptr [rax - 0x75], cl ; add eax, 0x1244c4 ; call rax
0x00000200001ad947 : and byte ptr [rax - 0x75], cl ; add eax, 0x124b29 ; call rax
0x000002000074c95f : and byte ptr [rax - 0x75], cl ; cmp dword ptr [rax - 0x75], ecx ; ret 0x8b4d
0x0000020000620d11 : and byte ptr [rax - 0x75], cl ; enter -0x74b8, -0x10 ; call 0x2000045cf99
0x0000020000019879 : and byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x7d] ; ret 0xe804
0x00000200004c96f1 : and byte ptr [rax - 0x75], cl ; fld1 ; jb 0x200004c974e ; ret 0x48ff
0x000002000068b5b9 : and byte ptr [rax - 0x75], cl ; fld1 ; ret 0xa80e
0x000002000020669a : and byte ptr [rax - 0x75], cl ; iretd ; call rax
0x000002000002623c : and byte ptr [rax - 0x75], cl ; jl 0x2000002626d ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000003908d : and byte ptr [rax - 0x75], cl ; jl 0x200000390be ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000003990c : and byte ptr [rax - 0x75], cl ; jl 0x2000003993d ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000004af37 : and byte ptr [rax - 0x75], cl ; jl 0x2000004af68 ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000040751a : and byte ptr [rax - 0x75], cl ; jl 0x2000040754b ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200004382c8 : and byte ptr [rax - 0x75], cl ; jl 0x200004382f8 ; xor cl, ch ; ret
0x000002000053f12e : and byte ptr [rax - 0x75], cl ; jl 0x2000053f15f ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200005f3732 : and byte ptr [rax - 0x75], cl ; jl 0x200005f3763 ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000063bf03 : and byte ptr [rax - 0x75], cl ; jl 0x2000063bf34 ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000649442 : and byte ptr [rax - 0x75], cl ; jl 0x20000649473 ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200001e8aa7 : and byte ptr [rax - 0x75], cl ; jmp 0x1ff83674d3f
0x0000020000076148 : and byte ptr [rax - 0x75], cl ; jmp 0x20048c9ec9e
0x0000020000452aa1 : and byte ptr [rax - 0x75], cl ; pop rcx ; sub dh, dh ; ret
0x000002000009725b : and byte ptr [rax - 0x75], cl ; pop rdi ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000052bcf9 : and byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x28 ; add rax, rdx ; jmp 0x2000052bd1a
0x00000200000067f7 : and byte ptr [rax - 0x75], cl ; ret
0x00000200001a36af : and byte ptr [rax - 0x75], cl ; ret 0x15eb
0x0000020000454e72 : and byte ptr [rax - 0x75], cl ; ret 0x3345
0x00000200004025c8 : and byte ptr [rax - 0x75], cl ; ret 0x8949
0x00000200003de371 : and byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000040c3b8 : and byte ptr [rax - 0x75], cl ; ret 0x8b49
0x000002000004ec45 : and byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x000002000062c3f3 : and byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000021c1fb : and byte ptr [rax - 0x75], cl ; ret 0xffba
0x00000200004cb93f : and byte ptr [rax - 0x75], cl ; retf ; call 0x200000ef377
0x00000200003b631d : and byte ptr [rax - 0x75], cl ; retf ; call rax
0x00000200001c1341 : and byte ptr [rax - 0x75], cl ; rol dword ptr [rdi + rcx + 0x20], 1 ; ret
0x00000200002114d7 : and byte ptr [rax - 0x75], cl ; salc ; call r10
0x00000200006c093a : and byte ptr [rax - 0x75], cl ; salc ; mov rcx, rbp ; call rax
0x000002000000eb67 : and byte ptr [rax - 0x75], cl ; sbb byte ptr [r8 - 0x7b], cl ; ret 0x775
0x00000200001c9920 : and byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, rbp ; call rax
0x00000200005d21d2 : and byte ptr [rax - 0x75], cl ; xlatb ; mov rcx, rbx ; call 0x2000069e451
0x0000020000524140 : and byte ptr [rax - 0x77], cl ; and al, 0x30 ; call 0x2000014f4c9
0x00000200006678c7 : and byte ptr [rax - 0x77], cl ; and byte ptr [r8 - 0x7d], cl ; ret
0x0000020000464494 : and byte ptr [rax - 0x77], cl ; jne 0x2000046445f ; call r10
0x00000200004d1172 : and byte ptr [rax - 0x77], cl ; jne 0x200004d113d ; call r10
0x0000020000694007 : and byte ptr [rax - 0x77], cl ; jne 0x20000693fd2 ; call r10
0x00000200006940cb : and byte ptr [rax - 0x77], cl ; jne 0x20000694096 ; call r10
0x000002000074bec7 : and byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x7d], cl ; ret
0x000002000053f9f1 : and byte ptr [rax - 0x77], cl ; or r15b, dil ; ret 0x8948
0x00000200004ce565 : and byte ptr [rax - 0x77], cl ; pop rsp ; and al, 0x30 ; call r11
0x00000200004a502b : and byte ptr [rax - 0x77], cl ; pop rsp ; and al, 0x58 ; call 0x200000c95a9
0x00000200005fad21 : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 7], 0xe8 ; mov ah, 0x6f ; ret
0x00000200005f7820 : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 7], 0xe8 ; mov ch, 0xa4 ; ret
0x0000020000626c8f : and byte ptr [rax - 0x7b], cl ; sal byte ptr [rbx + rbx*2 + 0x49], 0x3b ; ret 0x830f
0x0000020000419438 : and byte ptr [rax - 0x7d], cl ; and al, 0xee ; add bh, bh ; ret
0x0000020000055b97 : and byte ptr [rax - 0x7d], cl ; clc ; add dword ptr [rbp + 1], esi ; ret
0x000002000004ead1 : and byte ptr [rax - 0x7d], cl ; ret
0x00000200006c11fe : and byte ptr [rax - 0x7d], cl ; ret 0x118
0x00000200003f59d7 : and byte ptr [rax - 0x7d], cl ; ret 0x4210
0x00000200005cb04c : and byte ptr [rax - 0x7d], cl ; ret 0x4408
0x0000020000129d89 : and byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000044d2fe : and byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000020000526908 : and byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000020000582d2c : and byte ptr [rax - 0x7d], cl ; ret 0x4920
0x000002000068d852 : and byte ptr [rax - 0x7d], cl ; ret 0x4c0b
0x0000020000133f99 : and byte ptr [rax - 0x7d], cl ; ret 0x6602
0x0000020000513f5f : and byte ptr [rax - 0x7d], cl ; ret 0x8028
0x00000200005e2a3e : and byte ptr [rax - 0x7d], cl ; ret 0x8b18
0x0000020000427b9b : and byte ptr [rax - 0x7f], cl ; ret
0x000002000060fdc7 : and byte ptr [rax - 0x7f], cl ; ret 0x2988
0x00000200004beab2 : and byte ptr [rax - 0x8fee5b3], al ; fisttp dword ptr [rax + 0x63] ; ret
0x00000200000e0fac : and byte ptr [rax - 1], cl ; ret
0x0000020000216e44 : and byte ptr [rax - 1], cl ; ret 0x3b48
0x000002000013ec65 : and byte ptr [rax - 1], cl ; ret 0x4c89
0x0000020000135270 : and byte ptr [rax - 1], cl ; ret 0xff49
0x0000020000622187 : and byte ptr [rax - 9], cl ; ret 0xfff
0x00000200000424a7 : and byte ptr [rax], 2 ; add byte ptr [rax], al ; ret
0x0000020000603120 : and byte ptr [rax], ah ; call 0x20000231ce5
0x00000200006a35ad : and byte ptr [rax], ah ; call qword ptr [rdx]
0x000002000060564d : and byte ptr [rax], ah ; mov ecx, ebx ; call 0x20000231ce7
0x000002000052b6b6 : and byte ptr [rax], al ; add al, ch ; add bh, byte ptr [rsi] ; ret 0x48ff
0x00000200007856e4 : and byte ptr [rax], al ; add bl, al ; mov eax, 0x1000 ; ret
0x0000020000008255 : and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000021887 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200004c334c : and byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200004ed8e8 : and byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x00000200004caf82 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200000eefaf
0x00000200001ae6b8 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000014a8e6
0x000002000018b2e7 : and byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x200000a74f8
0x00000200000389d6 : and byte ptr [rax], al ; add byte ptr [rax], al ; mov al, byte ptr [rax + 0x22] ; and al, 1 ; ret
0x00000200003b6ff6 : and byte ptr [rax], al ; add byte ptr [rax], al ; xor ebx, ebx ; jmp 0x200003b6fc7
0x00000200001a8f24 : and byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200000a2780 : and byte ptr [rax], al ; add byte ptr [rcx + 3], cl ; ret
0x00000200000a27fb : and byte ptr [rax], al ; add byte ptr [rcx - 0x3f], cl ; sti ; adc byte ptr [rcx + 3], cl ; ret
0x0000020000019031 : and byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret 0x574
0x00000200001aafb3 : and byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x521
0x000002000045abdd : and byte ptr [rax], al ; add byte ptr [rdi], cl ; test dword ptr [rax], edi ; ret
0x00000200003c97f9 : and byte ptr [rax], al ; add byte ptr [rsi - 0x7b], ah ; ret 0xdb74
0x0000020000209c80 : and byte ptr [rax], al ; add r8, rcx ; jmp r8
0x00000200001c5b9c : and byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002d886 : and byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000003037b : and byte ptr [rax], al ; add rsp, 0x50 ; pop rsi ; ret
0x00000200004e8acb : and byte ptr [rax], al ; call 0x20000084dac
0x000002000043af7f : and byte ptr [rax], al ; call r10
0x000002000043ef38 : and byte ptr [rax], al ; call r11
0x0000020000173911 : and byte ptr [rax], al ; call rax
0x0000020000037b9b : and byte ptr [rax], al ; je 0x20000037bac ; mov rax, rcx ; ret
0x000002000042c450 : and byte ptr [rax], al ; jmp 0x2000042c419
0x00000200005ae63f : and byte ptr [rax], al ; jmp 0x2000046f128
0x00000200001b9498 : and byte ptr [rax], al ; mov word ptr [r8 + 2], cx ; mov al, 1 ; ret
0x0000020000167381 : and byte ptr [rax], al ; ret
0x00000200000ec349 : and byte ptr [rax], al ; seta dl ; mov al, dl ; ret
0x00000200000a2be6 : and byte ptr [rax], al ; xor bh, 0xff ; inc dword ptr [rcx - 1] ; ret 0x8149
0x00000200001b9398 : and byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000f890c : and byte ptr [rax], al ; xor eax, eax ; ret
0x00000200006a35bd : and byte ptr [rax], bh ; call qword ptr [rdx]
0x00000200006c02cc : and byte ptr [rax], bl ; ret
0x0000020000134dae : and byte ptr [rax], cl ; add byte ptr [rax], al ; add bl, ch ; mov cl, 0xf7 ; ret 0xffff
0x00000200001c1689 : and byte ptr [rbp + 0x2b], al ; ret
0x00000200001c18fb : and byte ptr [rbp + 0x2b], al ; ret 0x8b48
0x00000200005dc88b : and byte ptr [rbp + 0x33], al ; rol byte ptr [rax - 0x76], 0xcd ; call rsi
0x00000200007855e6 : and byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x73], 0xd ; ret
0x0000020000410938 : and byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x73], 0xd ; std ; ret 0xffeb
0x00000200005dd423 : and byte ptr [rbp + 0x33], al ; shr al, 0xe4 ; ret 0xffaa
0x000002000072bac5 : and byte ptr [rbp + 0x33], cl ; ror dword ptr [rax + 0xb], 1 ; ret 0x7c89
0x00000200001d8dad : and byte ptr [rbp + 0x3b], al ; ret 0x675
0x000002000064a521 : and byte ptr [rbp + 0x63], cl ; ret 0x8b49
0x000002000064a520 : and byte ptr [rbp + 0x63], r9b ; ret 0x8b49
0x00000200000822f3 : and byte ptr [rbp + 1], dh ; ret
0x0000020000039174 : and byte ptr [rbp + 2], dh ; xor eax, eax ; ret
0x000002000022f8d5 : and byte ptr [rbp + 3], al ; fimul dword ptr [rax + 0xb] ; ret 0x8b48
0x000002000022fbb1 : and byte ptr [rbp + 3], al ; ror dword ptr [rax + 0xb], 1 ; ret 0x8b48
0x00000200003a2b9f : and byte ptr [rbp + 3], cl ; ror byte ptr [rax + 0xb], cl ; ret 0x3b4e
0x0000020000485e4b : and byte ptr [rbp + 3], dh ; xor al, al ; ret
0x000002000010190d : and byte ptr [rbp + 4], dh ; mov rax, rcx ; ret
0x000002000010190c : and byte ptr [rbp + 4], sil ; mov rax, rcx ; ret
0x000002000013b03f : and byte ptr [rbp + rax + 0x41], dh ; or dword ptr [rax], 0xffffffff ; ret
0x0000020000082c18 : and byte ptr [rbp + rax + 0x48], dh ; mov eax, dword ptr [rcx + 0x18] ; ret
0x00000200000967cf : and byte ptr [rbp + rbx - 1], dh ; ret
0x00000200004dfb2c : and byte ptr [rbp + rcx*4 + 0x42], al ; add ch, al ; ret 2
0x000002000039d28b : and byte ptr [rbp + rcx*4 + 0x63], al ; add dword ptr [rax + 0xb], ecx ; ret 0x8b4c
0x0000020000127735 : and byte ptr [rbp + rcx*4 + 5], cl ; ret
0x00000200005f3205 : and byte ptr [rbp - 0x17], bl ; push rsp ; ret
0x00000200004d58f7 : and byte ptr [rbp - 0x1f17feb8], cl ; ret
0x000002000022f7b9 : and byte ptr [rbp - 0x73], al ; add dword ptr [r8 + 0xb], r9d ; ret 0x8b48
0x00000200004ce60e : and byte ptr [rbp - 0x73], al ; std ; call rsi
0x000002000045d05a : and byte ptr [rbp - 0x75], al ; enter -0x74b3, -0x3c ; call r10
0x00000200000dcd34 : and byte ptr [rbp - 0x75], al ; ret
0x000002000006e08e : and byte ptr [rbp - 0x75], al ; ret 0x8b49
0x000002000053a4c5 : and byte ptr [rbp - 0x75], cl ; add byte ptr [rbp + 0x3b], cl ; ret
0x000002000075c7d7 : and byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rbp + 0x3b] ; ret 0x1a74
0x0000020000020769 : and byte ptr [rbp - 0x75], cl ; jae 0x2000002079f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000038dcf : and byte ptr [rbp - 0x75], cl ; jae 0x20000038e05 ; mov rsp, r11 ; pop rbp ; ret
0x000002000005590c : and byte ptr [rbp - 0x75], cl ; jae 0x20000055942 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000084040 : and byte ptr [rbp - 0x75], cl ; jae 0x20000084076 ; mov rsp, r11 ; pop rbp ; ret
0x000002000013a6c8 : and byte ptr [rbp - 0x75], cl ; jae 0x2000013a6fe ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c5fce : and byte ptr [rbp - 0x75], cl ; jae 0x200001c6004 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001dcd8a : and byte ptr [rbp - 0x75], cl ; jae 0x200001dcdc0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e17cb : and byte ptr [rbp - 0x75], cl ; jae 0x200001e1801 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e3779 : and byte ptr [rbp - 0x75], cl ; jae 0x200001e37af ; mov rsp, r11 ; pop rbp ; ret
0x00000200001fe452 : and byte ptr [rbp - 0x75], cl ; jae 0x200001fe488 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000205a8a : and byte ptr [rbp - 0x75], cl ; jae 0x20000205ac0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003e735a : and byte ptr [rbp - 0x75], cl ; jae 0x200003e7390 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000405a05 : and byte ptr [rbp - 0x75], cl ; jae 0x20000405a3b ; mov rsp, r11 ; pop rbp ; ret
0x000002000042a773 : and byte ptr [rbp - 0x75], cl ; jae 0x2000042a7a9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004644af : and byte ptr [rbp - 0x75], cl ; jae 0x200004644e5 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000469ac5 : and byte ptr [rbp - 0x75], cl ; jae 0x20000469afb ; mov rsp, r11 ; pop rbp ; ret
0x0000020000469b95 : and byte ptr [rbp - 0x75], cl ; jae 0x20000469bcb ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d03c2 : and byte ptr [rbp - 0x75], cl ; jae 0x200004d03f8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d118d : and byte ptr [rbp - 0x75], cl ; jae 0x200004d11c3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d386a : and byte ptr [rbp - 0x75], cl ; jae 0x200004d38a0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d5b36 : and byte ptr [rbp - 0x75], cl ; jae 0x200004d5b6c ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ec0a0 : and byte ptr [rbp - 0x75], cl ; jae 0x200004ec0d6 ; mov rsp, r11 ; pop rbp ; ret
0x000002000050f302 : and byte ptr [rbp - 0x75], cl ; jae 0x2000050f338 ; mov rsp, r11 ; pop rbp ; ret
0x000002000051a01a : and byte ptr [rbp - 0x75], cl ; jae 0x2000051a050 ; mov rsp, r11 ; pop rbp ; ret
0x000002000052379c : and byte ptr [rbp - 0x75], cl ; jae 0x200005237d2 ; mov rsp, r11 ; pop rbp ; ret
0x000002000053abfc : and byte ptr [rbp - 0x75], cl ; jae 0x2000053ac32 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005422ff : and byte ptr [rbp - 0x75], cl ; jae 0x20000542335 ; mov rsp, r11 ; pop rbp ; ret
0x000002000061314d : and byte ptr [rbp - 0x75], cl ; jae 0x20000613183 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006144e2 : and byte ptr [rbp - 0x75], cl ; jae 0x20000614518 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000637135 : and byte ptr [rbp - 0x75], cl ; jae 0x2000063716b ; mov rsp, r11 ; pop rbp ; ret
0x000002000064a089 : and byte ptr [rbp - 0x75], cl ; jae 0x2000064a0bf ; mov rsp, r11 ; pop rbp ; ret
0x0000020000694022 : and byte ptr [rbp - 0x75], cl ; jae 0x20000694058 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006940e6 : and byte ptr [rbp - 0x75], cl ; jae 0x2000069411c ; mov rsp, r11 ; pop rbp ; ret
0x00000200007463d1 : and byte ptr [rbp - 0x75], cl ; jae 0x20000746407 ; mov rsp, r11 ; pop rbp ; ret
0x000002000075058b : and byte ptr [rbp - 0x75], cl ; jae 0x200007505c1 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000750938 : and byte ptr [rbp - 0x75], cl ; jae 0x2000075096e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000752e86 : and byte ptr [rbp - 0x75], cl ; jae 0x20000752ebc ; mov rsp, r11 ; pop rbp ; ret
0x00000200007589d5 : and byte ptr [rbp - 0x75], cl ; jae 0x20000758a0b ; mov rsp, r11 ; pop rbp ; ret
0x000002000076b7f2 : and byte ptr [rbp - 0x75], cl ; jae 0x2000076b828 ; mov rsp, r11 ; pop rbp ; ret
0x000002000076ca05 : and byte ptr [rbp - 0x75], cl ; jae 0x2000076ca3b ; mov rsp, r11 ; pop rbp ; ret
0x0000020000780fd5 : and byte ptr [rbp - 0x75], cl ; jae 0x2000078100b ; mov rsp, r11 ; pop rbp ; ret
0x00000200007816fa : and byte ptr [rbp - 0x75], cl ; jae 0x20000781730 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f5b6a : and byte ptr [rbp - 0x75], cl ; jnp 0x200004f5ba0 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000514779 : and byte ptr [rbp - 0x75], cl ; jnp 0x200005147af ; mov rsp, r11 ; pop rbp ; ret
0x0000020000612f9d : and byte ptr [rbp - 0x75], cl ; jnp 0x20000612fd3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000666731 : and byte ptr [rbp - 0x75], cl ; jnp 0x20000666767 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007578b7 : and byte ptr [rbp - 0x75], cl ; jnp 0x200007578ed ; mov rsp, r11 ; pop rbp ; ret
0x000002000000e0ac : and byte ptr [rbp - 0x75], cl ; ret
0x000002000015a9f4 : and byte ptr [rbp - 0x75], cl ; ret 0x4bba
0x00000200006d317f : and byte ptr [rbp - 0x75], cl ; ret 0x508d
0x000002000043bed2 : and byte ptr [rbp - 0x75], cl ; ret 0x8b41
0x0000020000647834 : and byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000194e02 : and byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000061e3b9 : and byte ptr [rbp - 0x75], cl ; ret 0xbee8
0x0000020000427ffb : and byte ptr [rbp - 0x76], al ; ret
0x000002000043e732 : and byte ptr [rbp - 0x76], al ; ret 0x8b48
0x000002000005684f : and byte ptr [rbp - 0x7b], al ; ror byte ptr [rdi], 0x84 ; ret 0x121b
0x00000200001e322b : and byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbx + rcx + 0x49], 0x8b ; ret
0x00000200005251f1 : and byte ptr [rbp - 0x7ef68725], al ; jmp qword ptr [rax]
0x00000200003d80a3 : and byte ptr [rbp - 0x9db8b40], al ; ret
0x0000020000603d96 : and byte ptr [rbx + 0x14e8dd3], cl ; call 0x20000231ce9
0x0000020000224028 : and byte ptr [rbx + 0x3b41dfc0], al ; ret 0x677
0x000002000004dd85 : and byte ptr [rbx + 0x48], bl ; jmp rax
0x00000200004b09b4 : and byte ptr [rbx + 0x57404fb], al ; call r12
0x00000200003e9a5d : and byte ptr [rbx + 0x63d3e8cf], cl ; ret
0x00000200005df135 : and byte ptr [rbx + 0x9091], cl ; add dh, dh ; ret 0xf02
0x00000200005df134 : and byte ptr [rbx + 0x9091], r9b ; add dh, dh ; ret 0xf02
0x000002000022394f : and byte ptr [rbx + 0xb48f8c3], al ; ret 0x8b48
0x000002000072da51 : and byte ptr [rbx + 0xb48f8c6], al ; ret 0x8b48
0x000002000072d9ca : and byte ptr [rbx + 0xb48f8c7], al ; ret 0x8b48
0x00000200000fc491 : and byte ptr [rbx + 4], dh ; mov qword ptr [rcx + 0x20], rdx ; ret
0x00000200006c02e8 : and byte ptr [rbx + rax*8], bl ; bts dword ptr [r8 + 0x20], 0x1a ; ret
0x0000020000403742 : and byte ptr [rbx + rcx*4 + 0x49], al ; xor byte ptr [rbp - 0x76], al ; ret 0xc141
0x0000020000425485 : and byte ptr [rbx + rcx*4 - 0x2f], cl ; call 0x2000005168b
0x00000200006c07c2 : and byte ptr [rbx + rcx*4 - 0x35], cl ; call rax
0x00000200005e1837 : and byte ptr [rbx + rcx*4 - 0x3d], al ; call rax
0x000002000058304e : and byte ptr [rbx + rcx*4 - 0x3d], al ; mov cl, 0x15 ; call r10
0x00000200005830d5 : and byte ptr [rbx + rcx*4 - 0x3d], al ; mov cl, 0x15 ; call rax
0x00000200005b41ab : and byte ptr [rbx + rcx*4 - 0x3d], al ; mov cl, 0xc ; call r10
0x00000200005b43ae : and byte ptr [rbx + rcx*4 - 0x3d], al ; mov cl, 0xc ; call rax
0x00000200005d3f41 : and byte ptr [rbx + rcx*4 - 0x3d], cl ; xor edx, edx ; call 0x200001401e8
0x00000200006b85df : and byte ptr [rbx + rcx*4 - 8], cl ; mov r8d, esi ; call rbx
0x000002000013f7ae : and byte ptr [rbx - 0x11], dh ; and edx, 0xf ; jne 0x2000013f7bf ; ret
0x0000020000600025 : and byte ptr [rbx - 0x17], bl ; in al, 0xf ; ret
0x00000200005fff97 : and byte ptr [rbx - 0x17], bl ; jb 0x200005fffb1 ; ret
0x00000200004ee8c1 : and byte ptr [rbx - 0x17], bl ; mov ah, 0x8d ; ret 0x48ff
0x00000200004c1b3d : and byte ptr [rbx - 0x17], bl ; push rdi ; ret 0x48ff
0x00000200004c5747 : and byte ptr [rbx - 0x17], bl ; ret 0xd6b8
0x000002000007b7d9 : and byte ptr [rbx - 0x17], bl ; ret 4
0x000002000049cdf5 : and byte ptr [rbx - 0x17], bl ; xor al, 0x4d ; ret 0x48ff
0x00000200004ccfd5 : and byte ptr [rbx - 0x2674b706], cl ; call 0x200000ef505
0x00000200004fce14 : and byte ptr [rbx - 0x3174b62a], cl ; call r9
0x000002000060564e : and byte ptr [rbx - 0x39751735], cl ; ret 0x48ff
0x000002000045b380 : and byte ptr [rbx - 0x3b7cb73d], cl ; pop rbx ; ret
0x0000020000781e95 : and byte ptr [rbx - 0x3d], bl ; mov rax, qword ptr [rcx + 0x10] ; ret
0x00000200005461fd : and byte ptr [rbx - 0x3d], bl ; xor eax, eax ; xchg dword ptr [rcx + 0x20], eax ; ret
0x0000020000411f41 : and byte ptr [rbx - 0x74b3cfa6], cl ; ret 0xdb85
0x00000200006296ef : and byte ptr [rbx - 0x74b3e7bf], cl ; ret 0xb60f
0x00000200001d2fe4 : and byte ptr [rbx - 0x74b7d78f], cl ; ret 0x8b4c
0x0000020000100881 : and byte ptr [rbx - 0x74bbf7ba], cl ; ret 0xb60f
0x000002000066ac93 : and byte ptr [rbx - 0x74dbdbac], cl ; ret 0x8d4c
0x00000200003a4215 : and byte ptr [rbx - 0x77], al ; ret 0x4c08
0x00000200000cdfad : and byte ptr [rbx - 0x9fe76ff], cl ; ret
0x0000020000101476 : and byte ptr [rbx], ah ; ret 0x8b4d
0x0000020000408727 : and byte ptr [rbx], al ; add byte ptr [rax], al ; mov qword ptr [r9], rcx ; ret
0x000002000065dc28 : and byte ptr [rbx], al ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000065e743 : and byte ptr [rbx], al ; sbb dword ptr [rax + 0x10], edx ; call 0x2000020a9d7
0x00000200003dc09d : and byte ptr [rbx], bh ; ret
0x00000200001c0ffe : and byte ptr [rbx], bh ; ret 0x820f
0x0000020000451028 : and byte ptr [rbx], bh ; sar dword ptr [rsp + rdx + 0x4d], 0x3b ; ret
0x00000200006c02da : and byte ptr [rbx], bl ; ret
0x00000200003c97e9 : and byte ptr [rbx], bl ; rol byte ptr [rbx + 0x33c302c0], 0xc0 ; ret
0x00000200001f52d5 : and byte ptr [rbx], ch ; fdivr st(7) ; ret
0x000002000049df70 : and byte ptr [rbx], cl ; add byte ptr [rax], al ; call 0x200000bf967
0x000002000049df33 : and byte ptr [rbx], cl ; add byte ptr [rax], al ; call 0x200000bf977
0x0000020000153c90 : and byte ptr [rbx], cl ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000153151 : and byte ptr [rbx], cl ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000007c5b4 : and byte ptr [rbx], cl ; ret
0x0000020000598004 : and byte ptr [rbx], dh ; leave ; call qword ptr [rsi]
0x00000200000635e9 : and byte ptr [rbx], dh ; ror byte ptr [rcx - 0x77], 0x11 ; pop rdi ; ret
0x00000200004e8975 : and byte ptr [rbx], dh ; sar byte ptr [rcx], 5 ; ret 0x2106
0x00000200005dbd39 : and byte ptr [rbx], dh ; shr al, cl ; ret
0x0000020000427cf6 : and byte ptr [rbx], dh ; shr al, cl ; ret 0xc2f2
0x00000200005c2db6 : and byte ptr [rbx], dh ; shr al, cl ; ret 0xee9c
0x00000200000c1c0e : and byte ptr [rcx + 0x23], cl ; ret
0x0000020000063126 : and byte ptr [rcx + 0x3b], cl ; ret 0x830f
0x00000200000776bb : and byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x00000200000a2ad1 : and byte ptr [rcx + 0x3b], cl ; ret 0x860f
0x000002000017e616 : and byte ptr [rcx + 0x3b], cl ; ret 0x875
0x000002000017e5af : and byte ptr [rcx + 0x3b], cl ; ret 0xc75
0x0000020000063596 : and byte ptr [rcx + 0x3b], cl ; ret 0xea72
0x000002000006313f : and byte ptr [rcx + 0x3b], cl ; ret 0xeb72
0x000002000064b009 : and byte ptr [rcx + 0x5c], al ; ret
0x0000020000062eb9 : and byte ptr [rcx + 0x5d], al ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009b192 : and byte ptr [rcx + 0x5d], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000475907 : and byte ptr [rcx + 0x5e], al ; jmp 0x2000009d696
0x000002000049b7a8 : and byte ptr [rcx + 0x5e], al ; jmp 0x200000c1b36
0x00000200006bc34e : and byte ptr [rcx + 0x5e], al ; jmp rax
0x00000200000b06f3 : and byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000b1f3e : and byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x0000020000037e19 : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000320f6 : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; ret
0x000002000012197f : and byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; ret
0x000002000008491a : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200000452c8 : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rcx ; ret
0x0000020000213c72 : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000002c3ef : and byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x0000020000399f59 : and byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x000002000008634a : and byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbx ; ret
0x0000020000008e85 : and byte ptr [rcx + 0x5e], al ; ret
0x000002000045f3fb : and byte ptr [rcx + 0x5f], al ; pop r12 ; pop rbp ; ret
0x00000200000d2f06 : and byte ptr [rcx + 0x5f], al ; pop r12 ; pop rbx ; ret
0x0000020000084a8d : and byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000069b0a : and byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000e34e8 : and byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; ret
0x000002000051b52e : and byte ptr [rcx + 0x5f], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000538869 : and byte ptr [rcx + 0x5f], al ; pop r13 ; pop rdi ; ret
0x00000200001abbdb : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x000002000000b0f0 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000072dd : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200003f46d7 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rbx ; ret
0x000002000002ad39 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000001f79b : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; ret
0x0000020000057c2d : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x00000200003f20ab : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbx ; ret
0x00000200001112f5 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rcx ; ret
0x0000020000007647 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004d96b4 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000002f62 : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x00000200003b1e1f : and byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; ret
0x00000200004bb3e1 : and byte ptr [rcx + 0x5f], al ; pop rdi ; pop rbp ; ret
0x000002000000a41c : and byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; ret
0x000002000001fa05 : and byte ptr [rcx + 0x5f], al ; ret
0x00000200003ef582 : and byte ptr [rcx + 0xf], al ; dec byte ptr [r8 - 1] ; ret 0x8d48
0x000002000040e62c : and byte ptr [rcx + 0xf], al ; mov dh, 0x48 ; add cl, byte ptr [rax + 0x6b] ; ret 0x4825
0x00000200004049c6 : and byte ptr [rcx + 0xf], al ; mov edx, 0x127210e0 ; mov eax, edx ; ret
0x0000020000135485 : and byte ptr [rcx + 3], cl ; ret
0x0000020000767e93 : and byte ptr [rcx + 3], cl ; ret 0x3b48
0x00000200000db75b : and byte ptr [rcx + 3], cl ; ret 0x3b4c
0x00000200000f12c0 : and byte ptr [rcx + 3], cl ; ror dword ptr [rbp - 0x75], cl ; ret 0x8b44
0x00000200001e4d0f : and byte ptr [rcx + rcx*4 + 0x44], cl ; and al, 0x28 ; call rdx
0x0000020000465044 : and byte ptr [rcx + rcx*4 + 0x5c], al ; and al, 0x54 ; call r10
0x00000200006db723 : and byte ptr [rcx + rcx*4 + 0x7c], al ; and al, 0x2c ; call rax
0x00000200000192d7 : and byte ptr [rcx - 0x1783dbbc], cl ; ret
0x000002000072b914 : and byte ptr [rcx - 0x39], cl ; ret 0x7400
0x00000200001cc0da : and byte ptr [rcx - 0x3f], cl ; cli ; add eax, dword ptr [rbp + 0x2b] ; ret 0x3b4c
0x000002000043cdd2 : and byte ptr [rcx - 0x3fffff66], bh ; call 0x2000006a2e5
0x000002000050e816 : and byte ptr [rcx - 0x47], al ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x0000020000694f93 : and byte ptr [rcx - 0x47], al ; add eax, dword ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000200001ae5d9 : and byte ptr [rcx - 0x48], al ; or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000014a8e9
0x000002000064e38d : and byte ptr [rcx - 0x48f023bb], cl ; add dword ptr [rcx + 3], eax ; ret 0x4589
0x000002000042d43f : and byte ptr [rcx - 0x72d7dbbc], cl ; push rax ; jmp qword ptr [rbx]
0x00000200000e85a1 : and byte ptr [rcx - 0x73], al ; dec qword ptr [rax + 0xb] ; ret 0x44c7
0x000002000072fd19 : and byte ptr [rcx - 0x73], cl ; pop rax ; add cl, byte ptr [rax + 0xb] ; ret 0x8b48
0x00000200000d2778 : and byte ptr [rcx - 0x75], al ; ret
0x000002000004fa1e : and byte ptr [rcx - 0x75], al ; ret 0x348
0x000002000004fa7b : and byte ptr [rcx - 0x75], al ; ret 0x394c
0x000002000021af5c : and byte ptr [rcx - 0x75], al ; ret 0x4566
0x0000020000176599 : and byte ptr [rcx - 0x75], al ; ret 0x8d48
0x00000200005234d7 : and byte ptr [rcx - 0x75], al ; ret 0xc148
0x000002000012db45 : and byte ptr [rcx - 0x75], al ; ret 0xc8c1
0x000002000044cb23 : and byte ptr [rcx - 0x75], al ; ror byte ptr [rdi], 0x45 ; ret 0x394c
0x000002000000a4f0 : and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x00000200000ed6ae : and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc984
0x00000200005f9719 : and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc985
0x00000200006b842e : and byte ptr [rcx - 0x75], cl ; int 0xff
0x00000200005d20ef : and byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000021e3aa
0x00000200004dede1 : and byte ptr [rcx - 0x75], cl ; iretd ; call r14
0x000002000050e5b3 : and byte ptr [rcx - 0x75], cl ; iretd ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x000002000050e8ac : and byte ptr [rcx - 0x75], cl ; iretd ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x00000200000027eb : and byte ptr [rcx - 0x75], cl ; jae 0x20000002821 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000009e40 : and byte ptr [rcx - 0x75], cl ; jae 0x20000009e76 ; mov rsp, r11 ; pop rdi ; ret
0x000002000002a82b : and byte ptr [rcx - 0x75], cl ; jae 0x2000002a861 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000035f63 : and byte ptr [rcx - 0x75], cl ; jae 0x20000035f99 ; mov rsp, r11 ; pop rdi ; ret
0x000002000006ed0a : and byte ptr [rcx - 0x75], cl ; jae 0x2000006ed40 ; mov rsp, r11 ; pop rdi ; ret
0x000002000008a072 : and byte ptr [rcx - 0x75], cl ; jae 0x2000008a0a8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000e33fa : and byte ptr [rcx - 0x75], cl ; jae 0x200000e3430 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000ee89d : and byte ptr [rcx - 0x75], cl ; jae 0x200000ee8d3 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000efd87 : and byte ptr [rcx - 0x75], cl ; jae 0x200000efdbd ; mov rsp, r11 ; pop rdi ; ret
0x0000020000113dd0 : and byte ptr [rcx - 0x75], cl ; jae 0x20000113e06 ; mov rsp, r11 ; pop rdi ; ret
0x000002000013cddd : and byte ptr [rcx - 0x75], cl ; jae 0x2000013ce13 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c0387 : and byte ptr [rcx - 0x75], cl ; jae 0x200001c03bd ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c9d34 : and byte ptr [rcx - 0x75], cl ; jae 0x200001c9d6a ; mov rsp, r11 ; pop rdi ; ret
0x00000200001cb452 : and byte ptr [rcx - 0x75], cl ; jae 0x200001cb488 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001cd1e9 : and byte ptr [rcx - 0x75], cl ; jae 0x200001cd21f ; mov rsp, r11 ; pop rdi ; ret
0x00000200001cf034 : and byte ptr [rcx - 0x75], cl ; jae 0x200001cf06a ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e4799 : and byte ptr [rcx - 0x75], cl ; jae 0x200001e47cf ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ef165 : and byte ptr [rcx - 0x75], cl ; jae 0x200001ef19b ; mov rsp, r11 ; pop rdi ; ret
0x000002000021c0ca : and byte ptr [rcx - 0x75], cl ; jae 0x2000021c100 ; mov rsp, r11 ; pop rdi ; ret
0x000002000021ea15 : and byte ptr [rcx - 0x75], cl ; jae 0x2000021ea4b ; mov rsp, r11 ; pop rdi ; ret
0x00000200003a65c7 : and byte ptr [rcx - 0x75], cl ; jae 0x200003a65fd ; mov rsp, r11 ; pop rdi ; ret
0x000002000040f895 : and byte ptr [rcx - 0x75], cl ; jae 0x2000040f8cb ; mov rsp, r11 ; pop rdi ; ret
0x000002000041bdd0 : and byte ptr [rcx - 0x75], cl ; jae 0x2000041be06 ; mov rsp, r11 ; pop rdi ; ret
0x000002000042a98b : and byte ptr [rcx - 0x75], cl ; jae 0x2000042a9c1 ; mov rsp, r11 ; pop rdi ; ret
0x000002000045180c : and byte ptr [rcx - 0x75], cl ; jae 0x20000451842 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000461605 : and byte ptr [rcx - 0x75], cl ; jae 0x2000046163b ; mov rsp, r11 ; pop rdi ; ret
0x0000020000479d13 : and byte ptr [rcx - 0x75], cl ; jae 0x20000479d49 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004d0e92 : and byte ptr [rcx - 0x75], cl ; jae 0x200004d0ec8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e31ad : and byte ptr [rcx - 0x75], cl ; jae 0x200004e31e3 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e3ac6 : and byte ptr [rcx - 0x75], cl ; jae 0x200004e3afc ; mov rsp, r11 ; pop rdi ; ret
0x0000020000513c07 : and byte ptr [rcx - 0x75], cl ; jae 0x20000513c3d ; mov rsp, r11 ; pop rdi ; ret
0x000002000052c38b : and byte ptr [rcx - 0x75], cl ; jae 0x2000052c3c1 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000531da3 : and byte ptr [rcx - 0x75], cl ; jae 0x20000531dd9 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000533997 : and byte ptr [rcx - 0x75], cl ; jae 0x200005339cd ; mov rsp, r11 ; pop rdi ; ret
0x0000020000533a56 : and byte ptr [rcx - 0x75], cl ; jae 0x20000533a8c ; mov rsp, r11 ; pop rdi ; ret
0x00000200005e25e8 : and byte ptr [rcx - 0x75], cl ; jae 0x200005e261e ; mov rsp, r11 ; pop rdi ; ret
0x0000020000623559 : and byte ptr [rcx - 0x75], cl ; jae 0x2000062358f ; mov rsp, r11 ; pop rdi ; ret
0x000002000062567d : and byte ptr [rcx - 0x75], cl ; jae 0x200006256b3 ; mov rsp, r11 ; pop rdi ; ret
0x000002000062ff41 : and byte ptr [rcx - 0x75], cl ; jae 0x2000062ff77 ; mov rsp, r11 ; pop rdi ; ret
0x000002000063a8f8 : and byte ptr [rcx - 0x75], cl ; jae 0x2000063a92e ; mov rsp, r11 ; pop rdi ; ret
0x000002000065dfbc : and byte ptr [rcx - 0x75], cl ; jae 0x2000065dff2 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006687c6 : and byte ptr [rcx - 0x75], cl ; jae 0x200006687fc ; mov rsp, r11 ; pop rdi ; ret
0x000002000067ec8c : and byte ptr [rcx - 0x75], cl ; jae 0x2000067ecc2 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006b5e87 : and byte ptr [rcx - 0x75], cl ; jae 0x200006b5ebd ; mov rsp, r11 ; pop rdi ; ret
0x00000200006bf8d7 : and byte ptr [rcx - 0x75], cl ; jae 0x200006bf90d ; mov rsp, r11 ; pop rdi ; ret
0x00000200006c147f : and byte ptr [rcx - 0x75], cl ; jae 0x200006c14b5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006c154f : and byte ptr [rcx - 0x75], cl ; jae 0x200006c1585 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006c3934 : and byte ptr [rcx - 0x75], cl ; jae 0x200006c396a ; mov rsp, r11 ; pop rdi ; ret
0x000002000074ca4c : and byte ptr [rcx - 0x75], cl ; jae 0x2000074ca82 ; mov rsp, r11 ; pop rdi ; ret
0x000002000076b283 : and byte ptr [rcx - 0x75], cl ; jae 0x2000076b2b9 ; mov rsp, r11 ; pop rdi ; ret
0x000002000002970f : and byte ptr [rcx - 0x75], cl ; jnp 0x20000029745 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000041fd5 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000004200b ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f1db8 : and byte ptr [rcx - 0x75], cl ; jnp 0x200000f1dee ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f683c : and byte ptr [rcx - 0x75], cl ; jnp 0x200000f6872 ; mov rsp, r11 ; pop rbp ; ret
0x000002000010502e : and byte ptr [rcx - 0x75], cl ; jnp 0x20000105064 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001121a1 : and byte ptr [rcx - 0x75], cl ; jnp 0x200001121d7 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000117535 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000011756b ; mov rsp, r11 ; pop rbp ; ret
0x0000020000132339 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000013236f ; mov rsp, r11 ; pop rbp ; ret
0x00000200001aaf9e : and byte ptr [rcx - 0x75], cl ; jnp 0x200001aafd4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001aeb3a : and byte ptr [rcx - 0x75], cl ; jnp 0x200001aeb70 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001bcca3 : and byte ptr [rcx - 0x75], cl ; jnp 0x200001bccd9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c2ca6 : and byte ptr [rcx - 0x75], cl ; jnp 0x200001c2cdc ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c7880 : and byte ptr [rcx - 0x75], cl ; jnp 0x200001c78b6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001eb1d6 : and byte ptr [rcx - 0x75], cl ; jnp 0x200001eb20c ; mov rsp, r11 ; pop rbp ; ret
0x00000200001ebd03 : and byte ptr [rcx - 0x75], cl ; jnp 0x200001ebd39 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001edf8f : and byte ptr [rcx - 0x75], cl ; jnp 0x200001edfc5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001f15fb : and byte ptr [rcx - 0x75], cl ; jnp 0x200001f1631 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000214efa : and byte ptr [rcx - 0x75], cl ; jnp 0x20000214f30 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003ac605 : and byte ptr [rcx - 0x75], cl ; jnp 0x200003ac63b ; mov rsp, r11 ; pop rbp ; ret
0x00000200003af60f : and byte ptr [rcx - 0x75], cl ; jnp 0x200003af645 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003dce44 : and byte ptr [rcx - 0x75], cl ; jnp 0x200003dce7a ; mov rsp, r11 ; pop rbp ; ret
0x00000200004009a8 : and byte ptr [rcx - 0x75], cl ; jnp 0x200004009de ; mov rsp, r11 ; pop rbp ; ret
0x000002000041cadb : and byte ptr [rcx - 0x75], cl ; jnp 0x2000041cb11 ; mov rsp, r11 ; pop rbp ; ret
0x000002000041efd0 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000041f006 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000466707 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000046673d ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c4004 : and byte ptr [rcx - 0x75], cl ; jnp 0x200004c403a ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e5e9b : and byte ptr [rcx - 0x75], cl ; jnp 0x200004e5ed1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f76c9 : and byte ptr [rcx - 0x75], cl ; jnp 0x200004f76ff ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f7bfe : and byte ptr [rcx - 0x75], cl ; jnp 0x200004f7c34 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f9695 : and byte ptr [rcx - 0x75], cl ; jnp 0x200004f96cb ; mov rsp, r11 ; pop rbp ; ret
0x00000200005048cb : and byte ptr [rcx - 0x75], cl ; jnp 0x20000504901 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000507aab : and byte ptr [rcx - 0x75], cl ; jnp 0x20000507ae1 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000511a31 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000511a67 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000533871 : and byte ptr [rcx - 0x75], cl ; jnp 0x200005338a7 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000534450 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000534486 ; mov rsp, r11 ; pop rbp ; ret
0x000002000053d15f : and byte ptr [rcx - 0x75], cl ; jnp 0x2000053d195 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000543775 : and byte ptr [rcx - 0x75], cl ; jnp 0x200005437ab ; mov rsp, r11 ; pop rbp ; ret
0x00000200005445eb : and byte ptr [rcx - 0x75], cl ; jnp 0x20000544621 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005d8cbf : and byte ptr [rcx - 0x75], cl ; jnp 0x200005d8cf5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005e3627 : and byte ptr [rcx - 0x75], cl ; jnp 0x200005e365d ; mov rsp, r11 ; pop rbp ; ret
0x00000200005f1223 : and byte ptr [rcx - 0x75], cl ; jnp 0x200005f1259 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005f3402 : and byte ptr [rcx - 0x75], cl ; jnp 0x200005f3438 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005fe48e : and byte ptr [rcx - 0x75], cl ; jnp 0x200005fe4c4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006060f3 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000606129 ; mov rsp, r11 ; pop rbp ; ret
0x000002000061038e : and byte ptr [rcx - 0x75], cl ; jnp 0x200006103c4 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000616153 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000616189 ; mov rsp, r11 ; pop rbp ; ret
0x000002000062295d : and byte ptr [rcx - 0x75], cl ; jnp 0x20000622993 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006372e9 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000063731f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000640248 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000064027e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000658026 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000065805c ; mov rsp, r11 ; pop rbp ; ret
0x000002000065f7e7 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000065f81d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000663e90 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000663ec6 ; mov rsp, r11 ; pop rbp ; ret
0x000002000068cff6 : and byte ptr [rcx - 0x75], cl ; jnp 0x2000068d02c ; mov rsp, r11 ; pop rbp ; ret
0x00000200006b3114 : and byte ptr [rcx - 0x75], cl ; jnp 0x200006b314a ; mov rsp, r11 ; pop rbp ; ret
0x00000200007666f0 : and byte ptr [rcx - 0x75], cl ; jnp 0x20000766726 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000008b8c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000008bf3 ; ret
0x000002000000e58f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000e5f8 ; ret
0x0000020000012e67 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000012ed0 ; ret
0x000002000001d73b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000001d7a4 ; ret
0x000002000001fc23 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000001fc8a ; ret
0x0000020000045261 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000452ca ; ret
0x00000200000485fe : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000048667 ; ret
0x000002000007bab6 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000007bb1d ; ret
0x00000200000ed4fe : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000ed565 ; ret
0x00000200000f00f9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f0162 ; ret
0x00000200000f0584 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f05d0 ; pop rsi ; ret
0x00000200000f0d0f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f0d78 ; ret
0x00000200000f1ab2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f1b1b ; ret
0x00000200000f3580 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f35e9 ; ret
0x00000200000f5387 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f53f0 ; ret
0x000002000010c418 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010c47f ; ret
0x000002000011175c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001117c3 ; ret
0x0000020000112b7c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000112be3 ; ret
0x000002000011361d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000113684 ; ret
0x000002000011483d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001148a4 ; ret
0x000002000011c6d3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011c73a ; ret
0x000002000011c9a7 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011ca0e ; ret
0x00000200001250e7 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000125150 ; ret
0x000002000012afdc : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012b045 ; ret
0x00000200001328ae : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000132917 ; ret
0x00000200001a74e1 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001a7548 ; ret
0x00000200001af21d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001af286 ; ret
0x00000200001b04d0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b0539 ; ret
0x00000200001b05a2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b060b ; ret
0x00000200001b1f60 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b1fc7 ; ret
0x00000200001b2624 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b268d ; ret
0x00000200001ba628 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ba691 ; ret
0x00000200001ba6d2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ba73b ; ret
0x00000200001ba754 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ba7bd ; ret
0x00000200001bb443 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bb4ac ; ret
0x00000200001bd82b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bd892 ; ret
0x00000200001c4867 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c48ce ; ret
0x00000200001d8d71 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d8dd8 ; ret
0x00000200001e3905 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e396e ; ret
0x00000200001e3b54 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e3bbd ; ret
0x00000200001e3eac : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e3f15 ; ret
0x00000200001eb64d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001eb6b4 ; ret
0x00000200001eb712 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001eb779 ; ret
0x00000200001ed296 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ed2fd ; ret
0x00000200001ed4b0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ed517 ; ret
0x00000200001ed688 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ed6f1 ; ret
0x00000200001edb64 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001edbcb ; ret
0x00000200001f0722 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001f0789 ; ret
0x00000200001f31bf : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001f3228 ; ret
0x00000200001f6ecc : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200001f6f35 ; ret
0x00000200002061ee : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000206255 ; ret
0x0000020000209fb5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020a01c ; ret
0x000002000020b706 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020b76d ; ret
0x000002000020c23e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020c2a5 ; ret
0x0000020000211252 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200002112b9 ; ret
0x000002000021d084 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000021d0ed ; ret
0x00000200003a3723 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003a378a ; ret
0x00000200003a66b2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003a6719 ; ret
0x00000200003b2b71 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b2bda ; ret
0x00000200003b970f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b9776 ; ret
0x00000200003bb3b6 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003bb41f ; ret
0x00000200003c20b6 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003c211f ; ret
0x00000200003c8031 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003c807d ; pop rsi ; ret
0x00000200003ce44b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ce497 ; pop rsi ; ret
0x00000200003d5a4a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003d5ab1 ; ret
0x00000200003de82d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003de879 ; pop rsi ; ret
0x00000200003e0323 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e038c ; ret
0x00000200003e260a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e2673 ; ret
0x00000200003e8cc2 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e8d29 ; ret
0x0000020000406346 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004063af ; ret
0x0000020000406faa : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000407013 ; ret
0x0000020000419f51 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000419fba ; ret
0x000002000041e9ae : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041ea15 ; ret
0x000002000042204b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004220b2 ; ret
0x000002000042eb97 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042ec00 ; ret
0x000002000044eaac : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044eaf8 ; pop rsi ; ret
0x0000020000451294 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004512fd ; ret
0x0000020000456d10 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000456d5c ; pop rdi ; ret
0x0000020000465076 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004650df ; ret
0x0000020000466d10 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000466d79 ; ret
0x0000020000466e8e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000466ef7 ; ret
0x0000020000472e18 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000472e64 ; pop rsi ; ret
0x0000020000475ccc : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000475d18 ; pop rsi ; ret
0x000002000047e45c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047e4c5 ; ret
0x00000200004815a6 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000048160d ; ret
0x0000020000483bbd : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000483c09 ; pop rsi ; ret
0x0000020000498f54 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000498fbd ; ret
0x0000020000498f68 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000498fd1 ; ret
0x00000200004c3f89 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c3ff0 ; ret
0x00000200004c798a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c79d6 ; pop rsi ; ret
0x00000200004c998a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c99d6 ; pop rsi ; ret
0x00000200004d37bd : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d3824 ; ret
0x00000200004d6e40 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d6ea9 ; ret
0x00000200004def96 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004defff ; ret
0x00000200004e05d3 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e063c ; ret
0x00000200004e1f3d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e1f89 ; pop rsi ; ret
0x00000200004e23cb : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e2434 ; ret
0x00000200004e5a7c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e5ae5 ; ret
0x00000200004eb509 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004eb572 ; ret
0x00000200004ed829 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ed892 ; ret
0x00000200004edaf5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004edb5c ; ret
0x00000200004edd77 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004eddde ; ret
0x00000200004ede6b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004eded2 ; ret
0x00000200004ee3d7 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ee440 ; ret
0x00000200004ef2ff : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ef368 ; ret
0x00000200004f1531 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f159a ; ret
0x00000200004f70d6 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f713d ; ret
0x00000200004fcd03 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fcd6c ; ret
0x00000200004fd728 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fd78f ; ret
0x00000200004fe371 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fe3d8 ; ret
0x0000020000501594 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005015fb ; ret
0x0000020000502ead : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000502f16 ; ret
0x00000200005038f5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050395c ; ret
0x0000020000504812 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000504879 ; ret
0x000002000050495d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005049c4 ; ret
0x0000020000509c3f : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000509ca6 ; ret
0x00000200005110f0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000511159 ; ret
0x000002000051e4d5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051e53c ; ret
0x000002000051f9c0 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051fa29 ; ret
0x000002000051fc73 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051fcdc ; ret
0x0000020000520a0d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000520a76 ; ret
0x0000020000528bd4 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000528c3d ; ret
0x0000020000533cad : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000533d14 ; ret
0x000002000053a215 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053a261 ; pop rdi ; ret
0x000002000053ff98 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000540001 ; ret
0x000002000054047c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005404e5 ; ret
0x0000020000542505 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054256e ; ret
0x00000200005dd06b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005dd0d2 ; ret
0x00000200005e0768 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e07d1 ; ret
0x00000200005ee903 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ee94f ; pop rsi ; ret
0x00000200005f0b51 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f0bba ; ret
0x00000200005f1401 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f146a ; ret
0x00000200005f643a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f64a1 ; ret
0x00000200005fb7a8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fb811 ; ret
0x00000200005fdafa : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fdb63 ; ret
0x00000200005fec75 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fecdc ; ret
0x00000200006025fe : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000602667 ; ret
0x0000020000607bc8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000607c2f ; ret
0x0000020000608094 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006080fb ; ret
0x0000020000611245 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000611291 ; pop rsi ; ret
0x000002000061132b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000611377 ; pop rsi ; ret
0x00000200006117ac : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006117f8 ; pop rsi ; ret
0x00000200006164f8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061655f ; ret
0x0000020000616600 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000616667 ; ret
0x000002000061f391 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061f3dd ; pop rsi ; ret
0x000002000062416d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006241d6 ; ret
0x000002000062af1c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062af85 ; ret
0x000002000062fe46 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062feaf ; ret
0x0000020000632432 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063249b ; ret
0x0000020000639b3a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000639ba1 ; ret
0x000002000063d573 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063d5bf ; pop rsi ; ret
0x000002000063f1f5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063f241 ; pop rsi ; ret
0x000002000063ff31 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063ff7d ; pop rsi ; ret
0x000002000064dd56 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064ddbd ; ret
0x000002000065174e : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006517b5 ; ret
0x0000020000658b70 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000658bd7 ; ret
0x0000020000668eda : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000668f41 ; ret
0x000002000066f46c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066f4b8 ; pop rsi ; ret
0x0000020000675c7d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000675ce4 ; ret
0x000002000067674c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006767b5 ; ret
0x000002000067b802 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067b869 ; ret
0x000002000068defd : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068df64 ; ret
0x0000020000694ed5 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000694f3e ; ret
0x0000020000694f6c : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000694fd5 ; ret
0x00000200006969b7 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000696a20 ; ret
0x000002000069cadd : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069cb44 ; ret
0x00000200006da590 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200006da5f9 ; ret
0x0000020000742c96 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000742cfd ; ret
0x000002000074a4bf : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000074a526 ; ret
0x000002000074a96b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000074a9d2 ; ret
0x000002000075323d : and byte ptr [rcx - 0x75], cl ; jrcxz 0x200007532a4 ; ret
0x0000020000754b3b : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000754ba4 ; ret
0x000002000076150a : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000761571 ; ret
0x0000020000762bb9 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000762c20 ; ret
0x0000020000763da8 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x20000763e0f ; ret
0x000002000076c220 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000076c287 ; ret
0x000002000076c607 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000076c66e ; ret
0x000002000076d1bc : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000076d225 ; ret
0x000002000077faa7 : and byte ptr [rcx - 0x75], cl ; jrcxz 0x2000077fb0e ; ret
0x00000200001eff44 : and byte ptr [rcx - 0x75], cl ; or al, ch ; ret
0x00000200000d2748 : and byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000e085a : and byte ptr [rcx - 0x75], cl ; ret
0x0000020000492ec3 : and byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000045065f : and byte ptr [rcx - 0x75], cl ; ret 0xff25
0x0000020000462f2d : and byte ptr [rcx - 0x75], cl ; retf ; call rax
0x000002000021ce77 : and byte ptr [rcx - 0x75], cl ; rol dword ptr [rbp - 0x76], cl ; ret 0x11e8
0x000002000021ce99 : and byte ptr [rcx - 0x75], cl ; rol dword ptr [rbp - 0x76], cl ; ret 0x37e8
0x00000200006788bb : and byte ptr [rcx - 0x75], cl ; ror byte ptr [rcx - 0x75], cl ; iretd ; call r11
0x000002000003d78c : and byte ptr [rcx - 0x75], cl ; sbb byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], cl ; ret
0x000002000011a935 : and byte ptr [rcx - 0x77], cl ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000492ebf : and byte ptr [rcx - 0x78], al ; and byte ptr [r9 - 0x75], r9b ; ret 0xc148
0x00000200002238a2 : and byte ptr [rcx - 0x7d], al ; ret 0x48f8
0x00000200001b947e : and byte ptr [rcx - 0x7d], al ; stc ; add dword ptr [rbp + 3], esi ; xor al, al ; ret
0x000002000015daeb : and byte ptr [rcx - 0x7d], cl ; rcl byte ptr [rax], 0xb9 ; ret 0
0x00000200005a8258 : and byte ptr [rcx - 0x7d], cl ; ret
0x00000200003f5749 : and byte ptr [rcx - 0x7d], cl ; ret 0x4210
0x00000200001340a7 : and byte ptr [rcx - 0x7d], cl ; ret 0x4902
0x00000200000364ad : and byte ptr [rcx - 0x7f], cl ; ret 0
0x0000020000656d1d : and byte ptr [rcx - 0xa], al ; ret 0x7401
0x00000200005fc034 : and byte ptr [rcx], al ; add al, al ; ret
0x0000020000468969 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; clc ; call rsi
0x00000200004d39d1 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; cli ; call rsi
0x0000020000691439 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; cmc ; call rsi
0x0000020000692af0 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; stc ; call rdi
0x000002000069260f : and byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; iretd ; call r14
0x00000200004d4907 : and byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; iretd ; call rdi
0x0000020000757ee9 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop r14 ; pop r12 ; pop rbp ; ret
0x000002000054001b : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200006ccfde : and byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000017b711 : and byte ptr [rcx], al ; add cl, ch ; salc ; ret
0x000002000051bbf0 : and byte ptr [rcx], al ; call 0x20000140aa5
0x0000020000176862 : and byte ptr [rcx], al ; inc dword ptr [rcx + 0x3c] ; ret
0x000002000075e080 : and byte ptr [rcx], al ; ret 0x41ff
0x0000020000203146 : and byte ptr [rcx], bh ; adc esi, dword ptr [rdx - 8] ; jmp 0x20000203162
0x00000200005cf79f : and byte ptr [rcx], bh ; and byte ptr [rdi + r9 + 0x4c], cl ; ret 0x8348
0x00000200006c02d3 : and byte ptr [rcx], bl ; ret
0x00000200005cf79e : and byte ptr [rcx], dil ; and byte ptr [rdi + r9 + 0x4c], cl ; ret 0x8348
0x00000200000f4b8f : and byte ptr [rdi + 0x48], bl ; jmp rax
0x000002000014833c : and byte ptr [rdi + 0x48faffed], al ; add esp, 0x28 ; ret
0x000002000004c39c : and byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000054c0d : and byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x0000020000541f64 : and byte ptr [rdi + 7], dh ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200005cf7a1 : and byte ptr [rdi + r9 + 0x4c], cl ; ret 0x8348
0x0000020000061bb5 : and byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000064a86 : and byte ptr [rdi + rcx + 0x47], al ; ret
0x00000200005cf7a2 : and byte ptr [rdi + rcx + 0x4c], cl ; ret 0x8348
0x00000200007464df : and byte ptr [rdi + rcx - 0x51], al ; ret
0x000002000039b407 : and byte ptr [rdi + rcx - 0x51], cl ; ret 0xaf0f
0x00000200004317fa : and byte ptr [rdi + rcx - 0x51], cl ; ret 0xc149
0x0000020000013d0a : and byte ptr [rdi - 0x17], bl ; call rdx
0x0000020000499921 : and byte ptr [rdi - 0x17], bl ; js 0x20000499954 ; ret 0x48ff
0x0000020000602a27 : and byte ptr [rdi - 0x17], bl ; loop 0x20000602a16 ; ret 0xb9ff
0x0000020000607a64 : and byte ptr [rdi - 0x17], bl ; movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; ret 0xccff
0x000002000001c1cf : and byte ptr [rdi - 0x17], bl ; ret 0x15
0x00000200003fdb27 : and byte ptr [rdi - 0x17], bl ; ret 3
0x000002000020efa2 : and byte ptr [rdi - 0x17], bl ; sti ; ret 0xffe6
0x00000200000f11e1 : and byte ptr [rdi - 0x3d], bl ; cmp edx, ecx ; ja 0x200000f11f0 ; ret
0x00000200001066cd : and byte ptr [rdi - 0x3d], bl ; jmp 0x20000106699
0x000002000040f2a4 : and byte ptr [rdi - 0x3d], bl ; lea rcx, qword ptr [rax - 0x10] ; jmp 0x2000040f278
0x00000200000439bd : and byte ptr [rdi - 0x3d], bl ; lock dec dword ptr [r8] ; ret
0x000002000003b2ed : and byte ptr [rdi - 0x3d], bl ; mov eax, 0x58 ; ret
0x0000020000128b3d : and byte ptr [rdi - 0x3d], bl ; mov rdx, r8 ; call qword ptr [rbx]
0x00000200000f3fab : and byte ptr [rdi - 0x3d], bl ; test sil, sil ; jne 0x200000f3f7c ; jmp 0x200000f3f99
0x00000200003a5a66 : and byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000075f08c : and byte ptr [rdi], al ; ret 0x48ff
0x000002000048da4c : and byte ptr [rdi], bl ; ret
0x0000020000740d45 : and byte ptr [rdi], cl ; mov bh, 5 ; mov bl, 0xd2 ; ret
0x0000020000059f9a : and byte ptr [rdi], cl ; mov dh, 0x46 ; and dh, dh ; ret 0x7508
0x00000200000282d4 : and byte ptr [rdi], cl ; test dword ptr [rcx], ebx ; ja 0x200000282f6 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000079429 : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x9000002], esp ; ret
0x00000200004a76e7 : and byte ptr [rdi], cl ; test dword ptr [rsi], edx ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200004b5c0b : and byte ptr [rdi], cl ; test ebx, esi ; or al, 0 ; add dh, dh ; ret
0x000002000059dd8b : and byte ptr [rdi], cl ; test esi, ebp ; mov esp, 0x8b45ffe9 ; ret 0x1ba
0x00000200004999b5 : and byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add bh, dh ; ret
0x00000200001fb723 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200005f67ee : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3d80
0x0000020000622d43 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xe8c1
0x000002000043afc4 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8948
0x00000200004996b9 : and byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf41
0x00000200003a49ab : and byte ptr [rdi], cl ; xor byte ptr [rcx - 0x76], al ; ret 0xf41
0x00000200003a280c : and byte ptr [rdi], cl ; xor byte ptr [rcx - 1], al ; ret
0x0000020000059f99 : and byte ptr [rdi], r9b ; mov dh, 0x46 ; and dh, dh ; ret 0x7508
0x000002000043afc3 : and byte ptr [rdi], r9b ; xchg eax, esp ; ret 0x8948
0x000002000049af5a : and byte ptr [rdx + 0x1c7ee8ff], dh ; ret 0x85ff
0x000002000049ad65 : and byte ptr [rdx + 0x1e73e8fe], dh ; ret 0x4cff
0x00000200001f64a7 : and byte ptr [rdx + 3], dh ; xor al, al ; ret
0x00000200003b1cea : and byte ptr [rdx + rbx - 0x3774b800], 0x41 ; call rax
0x00000200000c1893 : and byte ptr [rdx + rbx - 0xa], dh ; ret
0x00000200001f867d : and byte ptr [rdx - 0x18], dh ; mov rax, r8 ; ret
0x00000200005ad3c9 : and byte ptr [rdx - 0x6166f01], bh ; ret 0xffeb
0x00000200003e8e60 : and byte ptr [rdx - 0x74b7fffc], bh ; ret
0x00000200001332da : and byte ptr [rdx - 0x75], al ; ret
0x00000200004dd6e5 : and byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; clc ; call rsi
0x00000200005c98ed : and byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; cli ; call rsi
0x000002000069148d : and byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; cmc ; call rsi
0x0000020000692b3c : and byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x73], al ; stc ; call rdi
0x00000200006642b0 : and byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000023180 : and byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000002000020c4b8 : and byte ptr [rdx], bh ; ret 0x675
0x00000200006c02ef : and byte ptr [rdx], bl ; ret
0x00000200004dd73c : and byte ptr [rdx], ch ; add eax, dword ptr [rax] ; jmp 0x200004dd70a
0x000002000020c4b7 : and byte ptr [rdx], dil ; ret 0x675
0x00000200007308ff : and byte ptr [rip + 0x33480000], al ; ret 0xd233
0x000002000008d1da : and byte ptr [rip - 0x74b70000], al ; ret 0xf41
0x0000020000643fc1 : and byte ptr [rip - 0x7ffffffb], ah ; ret
0x00000200004a7672 : and byte ptr [rsi + 0x11], ch ; add byte ptr [rcx - 0xa], al ; ret
0x00000200007812a9 : and byte ptr [rsi + 0x2b], ah ; ret
0x000002000004f2cb : and byte ptr [rsi + 0xf], ah ; jae 0x2000004f2b0 ; or byte ptr [rax - 0x75], cl ; ret
0x000002000004f330 : and byte ptr [rsi + 0xf], ah ; jae 0x2000004f315 ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000501cbe : and byte ptr [rsi + rdx - 0x7d], dh ; call qword ptr [rax]
0x0000020000420d7c : and byte ptr [rsi - 0x14170016], bh ; ret 0x41ff
0x00000200000121e8 : and byte ptr [rsi - 0x77], ah ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000134055 : and byte ptr [rsi - 0x77], ah ; or ecx, dword ptr [rax - 0x7d] ; ret
0x000002000063c222 : and byte ptr [rsi - 1], ah ; ret 0xb70f
0x00000200000938f6 : and byte ptr [rsi], ah ; str word ptr [rcx - 0x7d] ; ret
0x00000200000aaf1f : and byte ptr [rsi], cl ; add dh, dh ; ret
0x00000200006a35a9 : and byte ptr [rsi], cl ; call qword ptr [rdx]
0x0000020000057c2c : and byte ptr gs:[rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x00000200003d8f95 : and ch, 0xff ; add rsp, 0x28 ; ret
0x00000200006c5e27 : and ch, bl ; or al, 0x8b ; ret
0x0000020000454759 : and ch, byte ptr [rbx] ; ret
0x00000200000093d6 : and ch, byte ptr [rdi] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000a22a4 : and ch, cl ; ret 0xfffd
0x000002000040deca : and ch, dh ; ret 0xccff
0x0000020000037295 : and cl, 1 ; mov al, cl ; ret
0x000002000002d542 : and cl, 3 ; cmove rax, rdx ; ret
0x0000020000016ab8 : and cl, 7 ; cmp cl, 1 ; sete al ; ret
0x0000020000471982 : and cl, 7 ; jne 0x20000471993 ; mov al, r9b ; ret
0x000002000014125a : and cl, ah ; add byte ptr [rax], al ; ret
0x000002000014165a : and cl, al ; add byte ptr [rax], al ; ret
0x00000200003e5045 : and cl, al ; cmovne eax, r8d ; ret
0x0000020000140f5a : and cl, bh ; add byte ptr [rax], al ; ret
0x000002000014135a : and cl, bl ; add byte ptr [rax], al ; ret
0x0000020000762770 : and cl, byte ptr [r9 - 0x75] ; sub byte ptr [r8 + 0x33], cl ; ret 0x2348
0x00000200000b0556 : and cl, byte ptr [rax + 0x2b] ; ret 0x3d48
0x0000020000180e9e : and cl, byte ptr [rax - 0x73] ; sub byte ptr [r15 + rcx + 0x44], r8b ; ret 0x8948
0x00000200003e720c : and cl, byte ptr [rax - 0x75] ; ret
0x0000020000740f04 : and cl, byte ptr [rax - 0x75] ; ret 0x8d48
0x0000020000744205 : and cl, byte ptr [rax - 0x75] ; ret 0xba49
0x00000200005d70af : and cl, byte ptr [rax - 0x77] ; add edi, edi ; ret
0x000002000002426d : and cl, byte ptr [rax - 0x7d] ; or edi, edi ; ret
0x0000020000686a21 : and cl, byte ptr [rax - 0x7d] ; ret
0x000002000074ed25 : and cl, byte ptr [rax - 0x7d] ; ret 0x4104
0x00000200006cebc3 : and cl, byte ptr [rax - 9] ; ret
0x0000020000185dbd : and cl, byte ptr [rbp + 0x23] ; ret 0x894c
0x0000020000077496 : and cl, byte ptr [rbp + rcx*4 + 0x5f] ; adc byte ptr [rbp - 0x75], al ; ret 0x8b49
0x0000020000118578 : and cl, byte ptr [rbp - 0x73] ; pop rdi ; adc dh, dh ; ret 0xf10
0x00000200005234d3 : and cl, byte ptr [rbp - 0x75] ; and byte ptr [rcx - 0x75], al ; ret 0xc148
0x00000200001d02b2 : and cl, byte ptr [rbp - 0x75] ; ret 0x8948
0x000002000074fc5a : and cl, byte ptr [rbx + 0x3480843] ; ret
0x000002000003d6cf : and cl, byte ptr [rbx + 0xa891] ; add dh, dh ; ret 0x7501
0x00000200000dea48 : and cl, byte ptr [rcx - 0x75] ; sbb byte ptr [r8 + 0x23], r9b ; ret 0x8348
0x0000020000762771 : and cl, byte ptr [rcx - 0x75] ; sub byte ptr [r8 + 0x33], cl ; ret 0x2348
0x00000200003d8430 : and cl, byte ptr [rcx - 0x77] ; push rsi ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x0000020000136aec : and cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x0000020000148dfc : and cl, byte ptr [rcx - 1] ; ret 0xc9ff
0x00000200005fdb5c : and cl, byte ptr [rdx] ; add cl, ch ; ret
0x00000200005c9681 : and cl, ch ; adc eax, 0xf6fff097 ; ret
0x000002000014115a : and cl, ch ; add byte ptr [rax], al ; ret
0x00000200000c6a41 : and cl, ch ; mov esp, 0xf6fffffd ; ret 0x75f0
0x000002000019f7f6 : and cl, ch ; pop rsi ; push 0xf8 ; jmp qword ptr [rbx]
0x000002000059b093 : and cl, ch ; ret 0xe91d
0x00000200005a501d : and cl, ch ; ret 0xeaea
0x000002000014155a : and cl, cl ; add byte ptr [rax], al ; ret
0x000002000014105a : and cl, dh ; add byte ptr [rax], al ; ret
0x000002000051125c : and cl, dh ; ret 0x48ff
0x000002000014145a : and cl, dl ; add byte ptr [rax], al ; ret
0x000002000004b185 : and cx, r9w ; jmp qword ptr [r10 + rax*8]
0x000002000068bc92 : and dh, 0xff ; add rsp, 0x38 ; ret
0x000002000001ab29 : and dh, bh ; ret 0xc933
0x000002000003d1d6 : and dh, byte ptr [rax + rax] ; call rax
0x00000200001abe82 : and dh, byte ptr [rbx + 0x58d4800] ; ret
0x0000020000493f60 : and dh, byte ptr [rbx] ; ret 0x8d4c
0x00000200003e3525 : and dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], 0x74 ; ret
0x000002000018bbc0 : and dh, byte ptr [rcx - 0x9be000f] ; ret 0xf08
0x000002000000bdde : and dh, byte ptr [rdi] ; add byte ptr [rax - 0x7d], cl ; ret 0x4508
0x000002000003cebd : and dh, dh ; ret
0x000002000007e96d : and dh, dh ; ret 0x7402
0x000002000016643c : and dh, dh ; ret 0x7403
0x00000200001b106e : and dh, dh ; ret 0x7504
0x0000020000059f9e : and dh, dh ; ret 0x7508
0x00000200001b83b1 : and dh, dh ; ret 0x750f
0x00000200000344db : and dh, dh ; ret 0xf01
0x000002000018c747 : and dh, dh ; ret 0xf02
0x000002000017210a : and dh, dh ; ret 0xf04
0x0000020000077479 : and dh, dh ; ret 0xf08
0x0000020000042ee9 : and dh, dh ; ret 0xf0f
0x000002000011add5 : and dh, dh ; ret 0xf10
0x00000200001a353b : and dil, dil ; ret 0x3b41
0x00000200001a34c1 : and dil, dil ; ret 0x533b
0x0000020000140a5a : and dl, ah ; add byte ptr [rax], al ; ret
0x0000020000140e5a : and dl, al ; add byte ptr [rax], al ; ret
0x000002000075d44e : and dl, al ; dec dword ptr [rbp + rcx*4 + 5] ; mov byte ptr [rdx], ah ; ret 0x48ff
0x000002000014075a : and dl, bh ; add byte ptr [rax], al ; ret
0x0000020000140b5a : and dl, bl ; add byte ptr [rax], al ; ret
0x000002000017224d : and dl, byte ptr [rax] ; jmp 0x200001185b0
0x00000200005cb5b6 : and dl, byte ptr [rdi + rcx*8 - 0x307af001] ; ret 0xfff4
0x000002000014095a : and dl, ch ; add byte ptr [rax], al ; ret
0x0000020000140d5a : and dl, cl ; add byte ptr [rax], al ; ret
0x000002000014085a : and dl, dh ; add byte ptr [rax], al ; ret
0x00000200003b06d8 : and dl, dh ; call qword ptr [rax]
0x0000020000140c5a : and dl, dl ; add byte ptr [rax], al ; ret
0x00000200001f42cf : and dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000109a34 : and dword ptr [r10], eax ; ret
0x00000200001c8cf2 : and dword ptr [r11], r10d ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000110df3 : and dword ptr [r13 + 1], esi ; ret
0x000002000046404d : and dword ptr [r8], 0 ; ret
0x0000020000004396 : and dword ptr [r8], eax ; jmp 0x20000004361
0x000002000061f564 : and dword ptr [r8], eax ; ret
0x00000200001668ef : and dword ptr [r9 + 0x6c], 0 ; mov qword ptr [r9 + 0x70], rax ; ret
0x0000020000212dc2 : and dword ptr [r9], 0 ; ret
0x00000200006bf1e5 : and dword ptr [rax + 0x10], 0 ; ret
0x0000020000040776 : and dword ptr [rax + 0x586c], 0 ; sti ; ret
0x0000020000773b75 : and dword ptr [rax + 0xc], 0 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005771ef : and dword ptr [rax - 0x4c], eax ; push qword ptr [rbx] ; shr cl, 0xd6 ; ret
0x000002000009f734 : and dword ptr [rax - 0x75], ecx ; adc dh, dh ; ret 0x7401
0x00000200000c06b7 : and dword ptr [rax - 0x75], ecx ; or byte ptr [r8 - 0x75], cl ; ret
0x000002000018a628 : and dword ptr [rax - 0x75], ecx ; ret
0x0000020000189427 : and dword ptr [rax - 0x75], ecx ; ret 0x8348
0x000002000042c44f : and dword ptr [rax], 0 ; jmp 0x2000042c41a
0x0000020000167380 : and dword ptr [rax], 0 ; ret
0x00000200001ef2c5 : and dword ptr [rax], 0xfb00002d ; xor eax, eax ; ret
0x0000020000072e05 : and dword ptr [rax], eax ; add al, al ; add rsp, 0x28 ; ret
0x00000200006c754d : and dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000138012 : and dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000027394 : and dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000074937d : and dword ptr [rax], eax ; and qword ptr [rcx + 0x10], 0 ; ret
0x00000200006b5410 : and dword ptr [rax], eax ; and qword ptr [rcx + 8], 0 ; ret
0x000002000042eeb6 : and dword ptr [rax], eax ; call 0x20000053c65
0x00000200006569a3 : and dword ptr [rax], eax ; call 0x200000684f1
0x0000020000004397 : and dword ptr [rax], eax ; jmp 0x20000004360
0x00000200006b04cb : and dword ptr [rax], eax ; mov eax, 0xc00000bb ; ret
0x0000020000044b0e : and dword ptr [rax], eax ; mov qword ptr [rcx + 8], rcx ; ret
0x00000200001e1745 : and dword ptr [rax], eax ; mov rsi, rcx ; jmp 0x200001e17b3
0x00000200004e8bc7 : and dword ptr [rax], eax ; mov word ptr [rdx], ax ; ret
0x00000200000313f6 : and dword ptr [rax], eax ; ret
0x0000020000498023 : and dword ptr [rax], ebp ; ret 0x4dff
0x00000200005778c4 : and dword ptr [rax], ebx ; add byte ptr [rcx - 0x75], al ; ret 0xf42
0x000002000011f430 : and dword ptr [rax], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001bfa85 : and dword ptr [rax], edx ; mov eax, 0xc0000001 ; ret
0x00000200001b2fdb : and dword ptr [rax], edx ; or byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001bfa84 : and dword ptr [rax], r10d ; mov eax, 0xc0000001 ; ret
0x0000020000110df4 : and dword ptr [rbp + 1], esi ; ret
0x00000200005ad28f : and dword ptr [rbp + 6], eax ; add byte ptr [rax - 0x3fffff45], bh ; ret
0x000002000012ce77 : and dword ptr [rbp + 7], esp ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004f60dc : and dword ptr [rbp + rcx + 0x48], esi ; add esp, 0x20 ; pop rbx ; ret
0x0000020000762c77 : and dword ptr [rbp - 0x10], 0 ; call qword ptr [rdi]
0x0000020000598f5a : and dword ptr [rbp - 0x7f00173d], 0x3d ; ret 0xd69c
0x000002000003bf7e : and dword ptr [rbx + 0x10], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021a53f : and dword ptr [rbx + 0x10], 0 ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000012b5c : and dword ptr [rbx + 0x10], ebp ; mov rcx, rdi ; call 0x200000bee68
0x00000200003c4d81 : and dword ptr [rbx + 0x18], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006c2b50 : and dword ptr [rbx + 0x18], 0 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000443ae : and dword ptr [rbx + 0x18], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000111fcc : and dword ptr [rbx + 0x28], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002f795 : and dword ptr [rbx + 0x30], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c1493 : and dword ptr [rbx + 0x34], 0x10 ; add byte ptr [rbp - 0x75], al ; ret 0xdb85
0x00000200006da68f : and dword ptr [rbx + 0x48c033ff], esp ; add esp, 0x28 ; ret
0x0000020000628544 : and dword ptr [rbx + 0x50], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000047c8c3 : and dword ptr [rbx + 0x58], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006519e5 : and dword ptr [rbx + 0x78], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000651a64 : and dword ptr [rbx + 0x7c], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000012682 : and dword ptr [rbx + 0xc], 0 ; mov eax, edx ; jmp 0x20000012675
0x00000200003df35b : and dword ptr [rbx + 8], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006ac509 : and dword ptr [rbx + rcx - 1], esi ; ret
0x000002000009190a : and dword ptr [rbx + rcx*4 + 0x42], ecx ; or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000475ab8 : and dword ptr [rbx + rcx*4 + 0x47], eax ; sbb al, 0x8b ; ret 0xc148
0x0000020000454e25 : and dword ptr [rbx - 0x10], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000029917 : and dword ptr [rbx - 0x6af0beff], esi ; ret
0x000002000002034d : and dword ptr [rbx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000022bf23 : and dword ptr [rbx], eax ; ror dword ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200001c8cf3 : and dword ptr [rbx], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000078753b : and dword ptr [rbx], esi ; ret
0x0000020000749380 : and dword ptr [rcx + 0x10], 0 ; ret
0x0000020000044d38 : and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x00000200001aad3f : and dword ptr [rcx + 0x18], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000159527 : and dword ptr [rcx + 0x18], eax ; ret
0x00000200003bb022 : and dword ptr [rcx + 0x20], 0 ; ret
0x0000020000019b1b : and dword ptr [rcx + 0x20], 0xff ; ret
0x00000200003bb042 : and dword ptr [rcx + 0x30], 0 ; ret
0x00000200003b56f1 : and dword ptr [rcx + 0x3b8], eax ; ret
0x00000200001a1d65 : and dword ptr [rcx + 0x3b], eax ; or byte ptr [rdx - 0x22], dh ; ret
0x00000200001a2c6f : and dword ptr [rcx + 0x438dfff8], ecx ; add al, 0x3b ; ret
0x00000200001aad5f : and dword ptr [rcx + 0x60], 0 ; ret
0x00000200000441c5 : and dword ptr [rcx + 0x68], 0 ; add rax, -0x20 ; ret
0x0000020000131256 : and dword ptr [rcx + 0x6bc], 0xffffffef ; ret
0x00000200001668f0 : and dword ptr [rcx + 0x6c], 0 ; mov qword ptr [r9 + 0x70], rax ; ret
0x0000020000044d4d : and dword ptr [rcx + 0x70], 0 ; mov qword ptr [rcx + 0x68], rax ; ret
0x00000200001b7b00 : and dword ptr [rcx + 0x70], 0 ; ret
0x0000020000202d7e : and dword ptr [rcx + 0xaa8], 0xfffffffe ; ret
0x000002000063b74e : and dword ptr [rcx + 0xb08], 0 ; ret
0x00000200001a973d : and dword ptr [rcx + 0xc], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000498bcf : and dword ptr [rcx + 0xc], 0 ; and dword ptr [rcx + 8], 0 ; ret
0x00000200000e94f8 : and dword ptr [rcx + 0xf000b1e], 0xffffffb7 ; ret 0x8b4d
0x00000200001cdd49 : and dword ptr [rcx + 1], 0 ; add byte ptr [rbx], dh ; dec dword ptr [rax - 9] ; ret
0x000002000003099a : and dword ptr [rcx + 4], 0 ; mov al, r8b ; ret
0x000002000004360c : and dword ptr [rcx + 4], 0 ; ret
0x00000200003f2d29 : and dword ptr [rcx + 8], 0 ; ret
0x000002000003e4fc : and dword ptr [rcx + 8], eax ; ret
0x000002000050eb0b : and dword ptr [rcx + 8], ebp ; add bh, bh ; ret 0x8349
0x00000200001c1a70 : and dword ptr [rcx + rax*8 + 8], eax ; ret
0x000002000021daad : and dword ptr [rcx + rax*8], 0 ; mov al, 1 ; ret
0x00000200005f1ee8 : and dword ptr [rcx - 0x18], 0xfffffff7 ; ret
0x0000020000674ed6 : and dword ptr [rcx - 0x3a5b2cc3], eax ; call qword ptr [rax]
0x000002000047ea31 : and dword ptr [rcx - 0x75], ecx ; ret
0x0000020000577cc4 : and dword ptr [rcx - 0x78], eax ; or cl, byte ptr [rcx - 1] ; ret 0xc883
0x0000020000052987 : and dword ptr [rcx - 0x7d], ecx ; ret
0x000002000006ecc1 : and dword ptr [rcx - 0xa], eax ; ret
0x0000020000027393 : and dword ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x000002000074937c : and dword ptr [rcx], 0 ; and qword ptr [rcx + 0x10], 0 ; ret
0x00000200006b540f : and dword ptr [rcx], 0 ; and qword ptr [rcx + 8], 0 ; ret
0x000002000042eeb5 : and dword ptr [rcx], 0 ; call 0x20000053c66
0x00000200006b04ca : and dword ptr [rcx], 0 ; mov eax, 0xc00000bb ; ret
0x0000020000044b0d : and dword ptr [rcx], 0 ; mov qword ptr [rcx + 8], rcx ; ret
0x00000200000313f5 : and dword ptr [rcx], 0 ; ret
0x00000200003f4dc7 : and dword ptr [rcx], 0xfffffff ; ret
0x0000020000031b4b : and dword ptr [rcx], eax ; ret
0x000002000075e99b : and dword ptr [rcx], ebx ; ret 0xfff
0x00000200004ad066 : and dword ptr [rcx], edx ; add byte ptr [rcx - 0x73], cl ; add al, 0x90 ; ret
0x00000200001e222f : and dword ptr [rcx], edx ; ret
0x000002000017dbbf : and dword ptr [rdi + rbp*8 - 1], esp ; mov qword ptr [r8], r10 ; ret
0x00000200001d02ad : and dword ptr [rdi + rcx - 0x4a], eax ; and cl, byte ptr [rbp - 0x75] ; ret 0x8948
0x00000200005802bc : and dword ptr [rdi + rdi*8 + 0x28638348], esi ; add cl, ch ; ret 0xe8d8
0x000002000051d59b : and dword ptr [rdi], ebx ; ret
0x0000020000069f6c : and dword ptr [rdi], ecx ; mov dh, 0xc2 ; ret
0x000002000009c502 : and dword ptr [rdi], ecx ; test dword ptr [rcx], esi ; ret
0x000002000003b4f4 : and dword ptr [rdx + 0x18], 0 ; ret
0x00000200003df73e : and dword ptr [rdx + 0x78], 0 ; or dword ptr [rax + 8], 0x20 ; ret
0x00000200005ed46c : and dword ptr [rdx + 0x88], 0 ; ret
0x00000200005ed4b4 : and dword ptr [rdx + 0x90], 0 ; ret
0x00000200000063f5 : and dword ptr [rdx + 0xf90], 0 ; ret
0x00000200000ff0a0 : and dword ptr [rdx + 8], 0 ; ret
0x00000200005319ca : and dword ptr [rdx + 8], ecx ; ret
0x000002000062c4d9 : and dword ptr [rdx], 0 ; add rsp, 0x28 ; ret
0x000002000046404a : and dword ptr [rdx], 0 ; and dword ptr [r8], 0 ; ret
0x0000020000527304 : and dword ptr [rdx], 0 ; mov eax, 0x8000001a ; ret
0x00000200001f4a10 : and dword ptr [rdx], 0 ; mov eax, 0xc0000001 ; ret
0x00000200003aafd2 : and dword ptr [rdx], 0 ; mov eax, 0xc00000bb ; ret
0x00000200003e71ad : and dword ptr [rdx], 0 ; xor eax, eax ; ret
0x00000200001f42d0 : and dword ptr [rdx], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000109a35 : and dword ptr [rdx], eax ; ret
0x00000200001aafb9 : and dword ptr [rip + 0x1d4279], eax ; ret
0x00000200006bb98b : and dword ptr [rip + 0x2271e], 0 ; ret
0x000002000051247d : and dword ptr [rip - 0x218164], 0 ; ret
0x00000200005d8c41 : and dword ptr [rip - 0x2d6768], 0 ; ret
0x0000020000786699 : and dword ptr [rip - 0x46f890], 0 ; ret
0x0000020000058de9 : and dword ptr [rsi + 0x18], eax ; jmp 0x20000058db5
0x000002000076c6b1 : and dword ptr [rsi], 0 ; jmp 0x2000076c67c
0x000002000048ac2b : and dword ptr [rsi], edx ; ret
0x00000200004e8ac8 : and dword ptr [rsp + 0x20], 0 ; call 0x20000084daf
0x000002000043af7c : and dword ptr [rsp + 0x20], 0 ; call r10
0x000002000043ef35 : and dword ptr [rsp + 0x20], 0 ; call r11
0x0000020000420d2c : and dword ptr [rsp + 0x58], esi ; call 0x200000451bb
0x0000020000138114 : and dword ptr [rsp + 8], ecx ; ldmxcsr dword ptr [rsp + 8] ; ret
0x00000200000c2c98 : and eax, 0x10001 ; ret
0x0000020000104d36 : and eax, 0x1001d67 ; add rsp, 0x38 ; ret
0x00000200004511a8 : and eax, 0x101 ; add rsp, 0x28 ; ret
0x00000200001c383b : and eax, 0x128 ; ret
0x00000200001344d9 : and eax, 0x157 ; ret
0x00000200001859ab : and eax, 0x1605b0 ; jmp 0x20000091c9f
0x000002000007b9b8 : and eax, 0x1750000 ; ret
0x00000200003eb72f : and eax, 0x188 ; call 0x200000c7a27
0x000002000049cb62 : and eax, 0x188 ; call 0x200000c7a28
0x00000200004c300f : and eax, 0x188 ; call 0x200000e9de8
0x00000200005f8cbc : and eax, 0x188 ; mov rax, qword ptr [rax + 0x28] ; ret
0x00000200001f0a70 : and eax, 0x188 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000200001f0a60 : and eax, 0x188 ; mov rax, qword ptr [rax + 0x38] ; ret
0x0000020000044b04 : and eax, 0x188 ; ret
0x00000200000f7c00 : and eax, 0x1e305a ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000047e202 : and eax, 0x1f ; ret
0x00000200001d7858 : and eax, 0x20 ; inc eax ; add rsp, 0x28 ; ret
0x00000200000bc0cc : and eax, 0x246716 ; dec byte ptr [rax - 0x75] ; ret
0x00000200001a92f7 : and eax, 0x2e44 ; ret
0x0000020000403bef : and eax, 0x2e48 ; ret
0x0000020000417d7f : and eax, 0x2e4c ; ret
0x0000020000033b89 : and eax, 0x2e70 ; add rsp, 0x28 ; ret
0x00000200006b0727 : and eax, 0x2f6c ; and eax, 1 ; ret
0x00000200006a35ba : and eax, 0x3820125c ; call qword ptr [rdx]
0x00000200001380dd : and eax, 0x3f ; add rsp, 0x28 ; ret
0x000002000068eff6 : and eax, 0x41c00002 ; mov eax, edx ; ret
0x000002000075cf2a : and eax, 0x42e8cb8a ; ret
0x000002000065a1a3 : and eax, 0x46 ; ret
0x00000200000ecc57 : and eax, 0x48000465 ; add esp, 0x50 ; pop rbx ; ret
0x00000200000b56e3 : and eax, 0x48000d95 ; add esp, 0x28 ; ret
0x0000020000107731 : and eax, 0x48800000 ; add esp, 0x20 ; pop rbx ; ret
0x000002000041a6d5 : and eax, 0x48c00002 ; add esp, 0x20 ; pop rdi ; ret
0x00000200000e9bc8 : and eax, 0x48c00002 ; add esp, 0x28 ; ret
0x000002000048eba6 : and eax, 0x48c00002 ; mov ebx, dword ptr [rsp + 8] ; ret
0x00000200006da33b : and eax, 0x48ffa34a ; add esp, 0x40 ; pop rbx ; ret
0x000002000011d8df : and eax, 0x5e04 ; ret
0x00000200001a9303 : and eax, 0x5e40 ; ret
0x00000200004cdd0b : and eax, 0x74c00002 ; ja 0x200004cdca4 ; ret
0x0000020000134b54 : and eax, 0x7fff ; ret
0x0000020000134539 : and eax, 0x80 ; ret
0x0000020000419266 : and eax, 0x80000005 ; pop r14 ; ret
0x00000200003f596a : and eax, 0x80000005 ; ret
0x000002000040749a : and eax, 0x817508a8 ; xor al, al ; jmp 0x2000040746e
0x0000020000407499 : and eax, 0x817508a8 ; xor al, al ; jmp 0x2000040746f
0x00000200000d1c2e : and eax, 0x8b000001 ; ret 0x8b45
0x00000200004657ef : and eax, 0x8b068948 ; ret
0x00000200003bf491 : and eax, 0x8b44001a ; ret
0x0000020000055c1b : and eax, 0x8b4c0012 ; ret
0x00000200003e740e : and eax, 0x8bc00002 ; ret
0x00000200006704f7 : and eax, 0x8bffa575 ; ret
0x0000020000562c13 : and eax, 0x8bffab18 ; ret
0x0000020000742bf7 : and eax, 0x8bffcf70 ; ret
0x000002000039d857 : and eax, 0x8bffda2b ; ret
0x000002000056bb53 : and eax, 0x8bffe6be ; ret
0x00000200001a2c44 : and eax, 0x8bfff886 ; ret 0xf41
0x00000200006a3646 : and eax, 0xbc20125c ; call qword ptr [rdx]
0x000002000002f6fe : and eax, 0xc0000000 ; cmp eax, ecx ; ja 0x2000002f711 ; ret
0x00000200001ae0a3 : and eax, 0xc0000001 ; add rsp, 0x28 ; ret
0x00000200000eb532 : and eax, 0xc0000001 ; ret
0x0000020000506d3b : and eax, 0xc0000004 ; ret
0x0000020000057c6a : and eax, 0xc000000d ; add rsp, 0x28 ; ret
0x00000200005fc585 : and eax, 0xc000000d ; add rsp, 0x48 ; ret
0x0000020000053a23 : and eax, 0xc000000d ; ret
0x0000020000044154 : and eax, 0xc000000e ; add rsp, 0x28 ; ret
0x0000020000072e04 : and eax, 0xc0000021 ; add rsp, 0x28 ; ret
0x000002000003fe20 : and eax, 0xc0000022 ; ret
0x00000200001ab880 : and eax, 0xc0000023 ; mov dword ptr [rcx], edx ; ret
0x00000200004d443a : and eax, 0xc0000033 ; add rsp, 0x28 ; ret
0x000002000041c3a8 : and eax, 0xc0000034 ; ret
0x00000200005fc045 : and eax, 0xc000004b ; ret
0x0000020000417757 : and eax, 0xc0000061 ; jmp 0x20000417727
0x00000200006290e4 : and eax, 0xc0000099 ; add rsp, 0x28 ; ret
0x0000020000053313 : and eax, 0xc00000a4 ; add rsp, 0x48 ; ret
0x000002000044da68 : and eax, 0xc00000a5 ; ret
0x00000200004096bc : and eax, 0xc00000bb ; ret
0x0000020000666435 : and eax, 0xc0000272 ; add rsp, 0x38 ; ret
0x000002000048196f : and eax, 0xc0190001 ; add rsp, 0x28 ; ret
0x000002000051d1cf : and eax, 0xc01c000b ; add rsp, 0x28 ; ret
0x00000200001242d2 : and eax, 0xc0940f00 ; ret
0x000002000008838a : and eax, 0xc28a0200 ; add rsp, 0x28 ; ret
0x00000200000870e4 : and eax, 0xc4834800 ; cmp byte ptr [rcx + 0x5f], al ; pop rbx ; ret
0x00000200006a35a6 : and eax, 0xe20125c ; call qword ptr [rdx]
0x0000020000140655 : and eax, 0xe9000000 ; and bl, al ; add byte ptr [rax], al ; ret
0x000002000057c848 : and eax, 0xe90106c6 ; ret
0x000002000061c5cc : and eax, 0xe9c00002 ; ret 0
0x0000020000764791 : and eax, 0xebc00002 ; ret
0x00000200004d939e : and eax, 0xebc00002 ; ret 0x8d48
0x0000020000437917 : and eax, 0xebffc397 ; ret 0x8348
0x00000200004074c3 : and eax, 0xf45db32 ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000002000018bd15 : and eax, 0xf6000005 ; ret
0x000002000004e52d : and eax, 0xfd00348 ; mov dh, 0x45 ; ret
0x00000200003bd7a7 : and eax, 0xff000000 ; ret
0x00000200005dc976 : and eax, 0xff000009 ; ret 0xb841
0x000002000012e280 : and eax, 0xff118945 ; ret 0x8b41
0x00000200005f74cf : and eax, 0xffd0118c ; call 0x20000053797
0x0000020000016ce9 : and eax, 0xfffff ; ret
0x00000200001fd9e7 : and eax, 0xfffff000 ; ret
0x00000200001a5924 : and eax, 0xfffffff0 ; ret
0x000002000010eeb6 : and eax, 0xfffffff8 ; shr eax, 3 ; add eax, 0x48 ; ret
0x000002000010f153 : and eax, 0xfffffff8 ; shr eax, 3 ; ret
0x000002000002318a : and eax, 0xfffffff9 ; ret
0x00000200004befd8 : and eax, 0xfffffffc ; add eax, edx ; ret
0x000002000003743d : and eax, 0xfffffffc ; jne 0x2000003744e ; mov qword ptr [r9], r8 ; ret
0x0000020000143c65 : and eax, 0xfffffffc ; or eax, r8d ; wrmsr ; ret
0x000002000002d537 : and eax, 0xfffffffc ; ret
0x0000020000143dad : and eax, 0xfffffffc ; wrmsr ; ret
0x0000020000545ff2 : and eax, 0xfffffffe ; add rax, r8 ; ret
0x0000020000202da6 : and eax, 0xfffffffe ; inc eax ; ret
0x0000020000042d08 : and eax, 1 ; add eax, dword ptr [rdx + 0x268] ; ret
0x000002000001daef : and eax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005f98e7 : and eax, 1 ; mov byte ptr [rcx + 3], al ; xor eax, eax ; ret
0x00000200003ed824 : and eax, 1 ; mov eax, dword ptr [rdx + rax*4] ; sub eax, r8d ; ret
0x00000200001d7870 : and eax, 1 ; or eax, edx ; ret
0x000002000006f1f8 : and eax, 1 ; pop rcx ; ret
0x0000020000011461 : and eax, 1 ; ret
0x0000020000116c81 : and eax, 2 ; dec eax ; ret
0x0000020000127b42 : and eax, 2 ; mov dword ptr [rip + 0x1db189], eax ; ret
0x00000200000b2dc4 : and eax, 2 ; ret
0x0000020000030a79 : and eax, 4 ; ret
0x00000200001150fc : and eax, 7 ; mov eax, r8d ; ret
0x0000020000014fc7 : and eax, 7 ; ret
0x00000200001344f9 : and eax, 8 ; ret
0x0000020000212dbe : and eax, dword ptr [rax] ; add al, al ; and dword ptr [r9], 0 ; ret
0x000002000040cab6 : and eax, dword ptr [rax] ; add al, al ; jmp 0x2000040ca83
0x000002000043f05e : and eax, dword ptr [rax] ; add al, al ; jmp 0x2000043f02b
0x00000200001ab881 : and eax, dword ptr [rax] ; add al, al ; mov dword ptr [rcx], edx ; ret
0x000002000069341f : and eax, dword ptr [rax] ; add al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001fc689 : and eax, dword ptr [rax] ; add al, al ; ret
0x0000020000131291 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002034e : and eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051bd14 : and eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001400b1 : and eax, dword ptr [rax] ; call rax
0x000002000014f60c : and eax, dword ptr [rax] ; lea rax, qword ptr [rcx + rax*8] ; ret
0x0000020000521a03 : and eax, dword ptr [rax] ; mov eax, 0xc0000189 ; ret
0x000002000043d7ce : and eax, dword ptr [rax] ; mov rcx, rax ; jmp 0x2000043d79e
0x00000200001f3bfa : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006bc3fa : and eax, dword ptr [rbp + 3] ; inc byte ptr [rcx - 0x75] ; xlatb ; call rdi
0x000002000046347c : and eax, dword ptr [rbp - 0x74db8a40] ; ret
0x000002000007c3e6 : and eax, dword ptr [rbp - 0x75] ; ret 0x8b48
0x000002000022a682 : and eax, dword ptr [rbx - 0x7cb7073f] ; ret
0x00000200000a3362 : and eax, dword ptr [rcx - 0x75] ; ret 0xe8c1
0x00000200000f5a4d : and eax, dword ptr [rsp + 0x40] ; add rsp, 0x28 ; ret
0x000002000048cc77 : and eax, dword ptr [rsp + 0x60] ; add rsp, 0x48 ; ret
0x0000020000015e90 : and eax, eax ; ret
0x00000200000385bf : and eax, eax ; shr eax, 0xe ; ret
0x00000200006da778 : and eax, ebp ; ret 0
0x0000020000003799 : and eax, ecx ; cmp eax, r9d ; sete al ; ret
0x00000200001f33af : and eax, ecx ; cmp rax, r9 ; sete al ; ret
0x0000020000038e9d : and eax, ecx ; ret
0x00000200000e2877 : and eax, ecx ; test r8, r8 ; jne 0x200000e2890 ; ret
0x0000020000009bb8 : and eax, ecx ; xor qword ptr [r9 + 0x18], rax ; ret
0x00000200006a8de3 : and eax, edi ; ret
0x000002000010fd88 : and eax, edx ; or rax, r8 ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000037a1f : and eax, edx ; or rax, r8 ; mov qword ptr [rcx], rax ; ret
0x00000200001d77d3 : and eax, edx ; ret
0x000002000041bb93 : and eax, esi ; ret
0x00000200000385be : and eax, r8d ; shr eax, 0xe ; ret
0x0000020000003798 : and eax, r9d ; cmp eax, r9d ; sete al ; ret
0x00000200004efba6 : and ebp, 0x10 ; call 0x2000011742a
0x0000020000021577 : and ebp, dword ptr [rax + 0xd850f40] ; ret 0x13
0x000002000068138b : and ebp, ebp ; inc dword ptr [rcx - 0x48] ; ret
0x00000200005a6795 : and ebp, ebx ; push rsi ; ret
0x000002000011630f : and ebp, esi ; dec dword ptr [rax - 0x75] ; ret
0x0000020000497779 : and ebx, 0xfffffffc ; mov rcx, rbx ; call 0x200000c2549
0x00000200004cb1b6 : and ebx, 0xffffffff ; je 0x200004cb1c8 ; call 0x200000eec54
0x00000200000247d1 : and ebx, dword ptr [rax - 0x74b6ffed] ; add byte ptr [rax + 0x3b], cl ; ret 0x7774
0x00000200000bff2d : and ebx, dword ptr [rax] ; or eax, 0x518b4100 ; or byte ptr [rbx], bh ; ret 0x830f
0x0000020000762123 : and ebx, dword ptr [rbp + 0x74c085ff] ; or byte ptr [rax - 1], cl ; ret
0x00000200006c4d81 : and ebx, dword ptr [rdx - 0x74b3003f] ; ret 0x5f7
0x0000020000410cd9 : and ebx, esi ; ret
0x000002000043fca9 : and ecx, 0xfffffffc ; add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200004998d6 : and ecx, 0xfffffffc ; call 0x200000c23c6
0x00000200000b29e5 : and ecx, 1 ; cmp r8b, cl ; jne 0x200000b29f6 ; ret
0x00000200006c0032 : and ecx, 1 ; mov eax, ecx ; ret
0x00000200003a793c : and ecx, dword ptr [rax + 0x3b] ; ret 0x830f
0x00000200001abb48 : and ecx, dword ptr [rax - 0x73] ; dec dword ptr [r8 + 0x33] ; ret
0x000002000005c8c0 : and ecx, dword ptr [rax - 0x75] ; ret
0x000002000039a428 : and ecx, dword ptr [rax - 0x75] ; ret 0x8b48
0x00000200001f99d2 : and ecx, dword ptr [rax - 0x7d] ; call 0x1ffc3a2e1e8
0x00000200001f99bf : and ecx, dword ptr [rax - 0x7d] ; ret
0x00000200005ab915 : and ecx, dword ptr [rax] ; jmp 0x20000467b5a
0x00000200000e8ebb : and ecx, dword ptr [rbx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004eaeee : and ecx, dword ptr [rbx] ; ret 0x4389
0x000002000003cf5a : and ecx, dword ptr [rcx - 0x75] ; ret
0x00000200004e3c2e : and ecx, dword ptr [rdx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000f2e45 : and ecx, dword ptr [rsi] ; add byte ptr [r8], al ; add byte ptr [rax + 3], cl ; ret 0x349
0x00000200006cbf65 : and ecx, eax ; cmp edx, ecx ; je 0x200006cbf75 ; xor eax, eax ; ret
0x000002000041a8bb : and ecx, eax ; cmp rcx, r8 ; cmovne eax, edx ; ret
0x00000200001cf5a9 : and ecx, eax ; mov eax, edx ; mov word ptr [r8 + 0xa], cx ; ret
0x0000020000746cb4 : and ecx, eax ; mov rcx, r9 ; call 0x200000a2f57
0x00000200003d9de4 : and ecx, eax ; mov word ptr [r10 + 2], cx ; xor eax, eax ; ret
0x00000200000d8adf : and ecx, eax ; xor qword ptr [rcx + 0x18], r9 ; ret
0x000002000059ba24 : and ecx, ebp ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200000d6cfe : and ecx, ebp ; mov rcx, r9 ; call 0x200000a2f57
0x00000200005a29f4 : and ecx, ecx ; dec dword ptr [rax - 0x7d] ; shr dword ptr [rax], -0x18 ; ret
0x000002000004b187 : and ecx, ecx ; jmp qword ptr [r10 + rax*8]
0x0000020000187e60 : and ecx, esi ; dec dword ptr [rax - 0x75] ; ret 0x2b49
0x00000200004056bd : and ecx, esp ; dec dword ptr [rbx - 0x74afdbac] ; ret 0xc323
0x000002000004b186 : and ecx, r9d ; jmp qword ptr [r10 + rax*8]
0x0000020000521652 : and edi, 0xffffffc0 ; mov r12d, r9d ; call 0x2000014f4c9
0x00000200000b8c05 : and edi, edi ; ret
0x00000200003f3406 : and edi, edi ; ret 0x8349
0x00000200001a8082 : and edi, esi ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000199181 : and edx, 0x77 ; hlt ; push rsi ; ret
0x000002000013f7b1 : and edx, 0xf ; jne 0x2000013f7bc ; ret
0x000002000049a8e0 : and edx, 1 ; call 0x200000bc2a6
0x00000200001e7a2e : and edx, 3 ; add edx, 0x13 ; call r9
0x0000020000018848 : and edx, 8 ; je 0x2000001883b ; mov al, 1 ; ret
0x00000200003a685a : and edx, eax ; mov qword ptr [r8 + 8], r10 ; ret
0x000002000009bbbf : and edx, ebp ; sub rdx, rbx ; mov r8, rdx ; call r14
0x00000200000d4037 : and edx, ecx ; mov eax, r10d ; ret
0x00000200000d939e : and edx, ecx ; xor rdx, r8 ; mov qword ptr [rcx + 0x18], rdx ; ret
0x00000200005f306e : and edx, edi ; shl edx, 0xc ; or r8d, edx ; jmp 0x200005f3097
0x00000200005f306d : and edx, r15d ; shl edx, 0xc ; or r8d, edx ; jmp 0x200005f3098
0x000002000009c600 : and esi, 0x1f ; jmp 0x2000009c2a3
0x0000020000008b44 : and esi, dword ptr [r10] ; ret 0x724
0x00000200003f738a : and esi, dword ptr [rdi + rbp - 0x75] ; ret
0x0000020000008afe : and esi, dword ptr [rdx] ; ret
0x0000020000008b45 : and esi, dword ptr [rdx] ; ret 0x724
0x000002000073c027 : and esi, edi ; call r12
0x00000200005f18e9 : and esi, edi ; ret
0x000002000062507f : and esi, esi ; ret 0x7403
0x000002000062512a : and esi, esi ; ret 0x7407
0x000002000007e729 : and esi, esi ; ret 0x7502
0x00000200001976e7 : and esi, esi ; ret 0xf08
0x000002000002180d : and esi, esi ; ret 0xf10
0x00000200000397ca : and esp, 0xff000064 ; ret
0x000002000020313e : and esp, 0xfffffffe ; jmp 0x2000020314e
0x0000020000194195 : and esp, dword ptr [rcx - 0xd] ; jmp qword ptr [rbx]
0x00000200006c6e49 : and esp, dword ptr [rsi + 0x3b48ff9a] ; ret 0x1675
0x00000200001c33b5 : and esp, eax ; idiv bh ; add rsp, 0x38 ; ret
0x0000020000092fbc : and esp, ecx ; call 0x200000b7058
0x000002000062c4d8 : and qword ptr [r10], 0 ; add rsp, 0x28 ; ret
0x0000020000058de8 : and qword ptr [r14 + 0x18], rax ; jmp 0x20000058db6
0x000002000016737f : and qword ptr [r8], 0 ; ret
0x000002000003e4fb : and qword ptr [r9 + 8], rax ; ret
0x00000200003f2a53 : and qword ptr [r9], 0 ; add rsp, 0x28 ; ret
0x00000200006bf1e4 : and qword ptr [rax + 0x10], 0 ; ret
0x000002000042c44e : and qword ptr [rax], 0 ; jmp 0x2000042c41b
0x000002000011f42f : and qword ptr [rax], rcx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000012b5b : and qword ptr [rbx + 0x10], r13 ; mov rcx, rdi ; call 0x200000bee69
0x00000200000443ad : and qword ptr [rbx + 0x18], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002034c : and qword ptr [rbx], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000074937f : and qword ptr [rcx + 0x10], 0 ; ret
0x0000020000159526 : and qword ptr [rcx + 0x18], rax ; ret
0x00000200003bb021 : and qword ptr [rcx + 0x20], 0 ; ret
0x0000020000019b1a : and qword ptr [rcx + 0x20], 0xff ; ret
0x00000200003bb041 : and qword ptr [rcx + 0x30], 0 ; ret
0x00000200001aad5e : and qword ptr [rcx + 0x60], 0 ; ret
0x00000200000441c4 : and qword ptr [rcx + 0x68], 0 ; add rax, -0x20 ; ret
0x0000020000044d4c : and qword ptr [rcx + 0x70], 0 ; mov qword ptr [rcx + 0x68], rax ; ret
0x00000200001b7aff : and qword ptr [rcx + 0x70], 0 ; ret
0x000002000063b74d : and qword ptr [rcx + 0xb08], 0 ; ret
0x00000200003f2d28 : and qword ptr [rcx + 8], 0 ; ret
0x00000200001c1a6f : and qword ptr [rcx + rax*8 + 8], r8 ; ret
0x000002000021daac : and qword ptr [rcx + rax*8], 0 ; mov al, 1 ; ret
0x0000020000027392 : and qword ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x00000200006b540e : and qword ptr [rcx], 0 ; and qword ptr [rcx + 8], 0 ; ret
0x000002000042eeb4 : and qword ptr [rcx], 0 ; call 0x20000053c67
0x0000020000044b0c : and qword ptr [rcx], 0 ; mov qword ptr [rcx + 8], rcx ; ret
0x00000200000313f4 : and qword ptr [rcx], 0 ; ret
0x0000020000031b4a : and qword ptr [rcx], rax ; ret
0x00000200001e222e : and qword ptr [rcx], rdx ; ret
0x000002000003b4f3 : and qword ptr [rdx + 0x18], 0 ; ret
0x00000200003df73d : and qword ptr [rdx + 0x78], 0 ; or dword ptr [rax + 8], 0x20 ; ret
0x00000200005ed46b : and qword ptr [rdx + 0x88], 0 ; ret
0x00000200005ed4b3 : and qword ptr [rdx + 0x90], 0 ; ret
0x00000200000063f4 : and qword ptr [rdx + 0xf90], 0 ; ret
0x00000200000ff09f : and qword ptr [rdx + 8], 0 ; ret
0x0000020000464049 : and qword ptr [rdx], 0 ; and dword ptr [r8], 0 ; ret
0x0000020000527303 : and qword ptr [rdx], 0 ; mov eax, 0x8000001a ; ret
0x00000200001f4a0f : and qword ptr [rdx], 0 ; mov eax, 0xc0000001 ; ret
0x00000200003aafd1 : and qword ptr [rdx], 0 ; mov eax, 0xc00000bb ; ret
0x00000200005d8c40 : and qword ptr [rip - 0x2d6768], 0 ; ret
0x0000020000786698 : and qword ptr [rip - 0x46f890], 0 ; ret
0x000002000076c6b0 : and qword ptr [rsi], 0 ; jmp 0x2000076c67d
0x00000200004e8ac7 : and qword ptr [rsp + 0x20], 0 ; call 0x20000084db0
0x000002000043af7b : and qword ptr [rsp + 0x20], 0 ; call r10
0x000002000043ef34 : and qword ptr [rsp + 0x20], 0 ; call r11
0x0000020000420d2b : and qword ptr [rsp + 0x58], rsi ; call 0x200000451bc
0x0000020000420d2a : and qword ptr [rsp + 0x58], rsi ; call 0x200000451bd
0x00000200003a6859 : and r10, rax ; mov qword ptr [r8 + 8], r10 ; ret
0x00000200000d4036 : and r10d, ecx ; mov eax, r10d ; ret
0x00000200006404a3 : and r11b, al ; lea rax, qword ptr [rcx + 0x2c] ; ret
0x000002000007bb8c : and r11b, bpl ; call 0x20000081455
0x000002000020313d : and r12, 0xfffffffffffffffe ; jmp 0x2000020314f
0x0000020000092fbb : and r12, r9 ; call 0x200000b7059
0x00000200005d20a7 : and r12b, byte ptr [r14 + 0x23] ; ret 0xc166
0x00000200000a22a3 : and r13b, cl ; ret 0xfffd
0x0000020000021576 : and r13d, dword ptr [r8 + 0xd850f40] ; ret 0x13
0x0000020000493f5f : and r14b, byte ptr [r11] ; ret 0x8d4c
0x0000020000059f9d : and r14b, sil ; ret 0x7508
0x0000020000008afd : and r14d, dword ptr [r10] ; ret
0x000002000018a39e : and r14d, dword ptr [r10] ; ret 0x724
0x000002000073c026 : and r14d, r15d ; call r12
0x000002000021834b : and r15b, r15b ; ret
0x00000200000e2876 : and r8, rcx ; test r8, r8 ; jne 0x200000e2891 ; ret
0x0000020000037a1e : and r8, rdx ; or rax, r8 ; mov qword ptr [rcx], rax ; ret
0x000002000068bbb9 : and r8b, 1 ; mov al, r8b ; ret
0x00000200005f5ebb : and r8b, bpl ; ret 0x10
0x000002000049e197 : and r8b, bpl ; ret 0xffd7
0x00000200004ccd0d : and r8b, bpl ; sal byte ptr [rcx], 1 ; ret 0x44ff
0x00000200005ce342 : and r8b, bpl ; xlatb ; ret 0xffa4
0x0000020000504324 : and r8b, r13b ; mov ch, 0xc0 ; ret
0x0000020000427d11 : and r8b, r13b ; or ch, dh ; ret 0x48ff
0x0000020000504442 : and r8b, r13b ; push rdi ; leave ; ret
0x0000020000773f07 : and r8b, r13b ; ret 0x9bf9
0x000002000053c4a8 : and r8b, r13b ; sar dword ptr [rsi], 1 ; sar bh, 0x8b ; ret
0x0000020000095c1a : and r8b, r9b ; call 0x1ffc2449d2f
0x00000200001150fb : and r8d, 7 ; mov eax, r8d ; ret
0x0000020000746cb3 : and r9, rax ; mov rcx, r9 ; call 0x200000a2f58
0x00000200000d8ade : and r9, rax ; xor qword ptr [rcx + 0x18], r9 ; ret
0x00000200000d6cfd : and r9, rbp ; mov rcx, r9 ; call 0x200000a2f58
0x00000200000dea47 : and r9b, byte ptr [r9 - 0x75] ; sbb byte ptr [r8 + 0x23], r9b ; ret 0x8348
0x0000020000185dbc : and r9b, byte ptr [rbp + 0x23] ; ret 0x894c
0x00000200005a501c : and r9b, r13b ; ret 0xeaea
0x00000200001344d8 : and rax, 0x157 ; ret
0x0000020000134538 : and rax, 0x80 ; ret
0x00000200001fd9e6 : and rax, 0xfffff000 ; ret
0x00000200001a5923 : and rax, 0xfffffffffffffff0 ; ret
0x0000020000023189 : and rax, 0xfffffffffffffff9 ; ret
0x000002000003743c : and rax, 0xfffffffffffffffc ; jne 0x2000003744f ; mov qword ptr [r9], r8 ; ret
0x000002000002d536 : and rax, 0xfffffffffffffffc ; ret
0x0000020000545ff1 : and rax, 0xfffffffffffffffe ; add rax, r8 ; ret
0x0000020000134518 : and rax, 1 ; ret
0x00000200001344b8 : and rax, 2 ; ret
0x0000020000134498 : and rax, 4 ; ret
0x00000200001344f8 : and rax, 8 ; ret
0x00000200000f5a4c : and rax, qword ptr [rsp + 0x40] ; add rsp, 0x28 ; ret
0x000002000048cc76 : and rax, qword ptr [rsp + 0x60] ; add rsp, 0x48 ; ret
0x0000020000015e8f : and rax, r8 ; ret
0x00000200001f33ae : and rax, r9 ; cmp rax, r9 ; sete al ; ret
0x00000200001176a2 : and rax, rcx ; ret
0x0000020000009bb7 : and rax, rcx ; xor qword ptr [r9 + 0x18], rax ; ret
0x00000200001d77d2 : and rax, rdx ; ret
0x00000200004998d5 : and rcx, 0xfffffffffffffffc ; call 0x200000c23c7
0x000002000041a8ba : and rcx, r8 ; cmp rcx, r8 ; cmovne eax, edx ; ret
0x0000020000217a28 : and spl, al ; ret 0x7d
0x00000200000389db : and spl, byte ptr [rcx + rax] ; ret
0x00000200005319c9 : and word ptr [rdx + 8], cx ; ret
0x0000020000439b84 : bsr ecx, ecx ; cmp r8d, ecx ; seta al ; ret
0x000002000004f804 : bsr edx, eax ; inc dl ; jmp 0x2000004f7d7
0x0000020000573832 : bswap eax ; call qword ptr [rax - 0x18b63d17]
0x000002000017171f : bswap eax ; xor rax, r9 ; mov rcx, rax ; call rdx
0x000002000017171e : bswap rax ; xor rax, r9 ; mov rcx, rax ; call rdx
0x000002000001f630 : bt dword ptr [rax], ecx ; setb al ; ret
0x000002000007b877 : bt dword ptr [rax], edx ; setae al ; ret
0x00000200000037a8 : bt dword ptr [rax], edx ; setb al ; ret
0x00000200004049c8 : bt eax, 0x10 ; jb 0x200004049e7 ; mov eax, edx ; ret
0x00000200004049c8 : bt eax, 0x10 ; jb 0x200004049e8 ; mov eax, edx ; ret
0x00000200006b3a17 : bt eax, 0x11 ; jb 0x200006b3a28 ; mov al, 1 ; ret
0x00000200000b75da : bt eax, 0x1e ; jb 0x200000b75f1 ; xor eax, eax ; ret
0x00000200003f298f : bt eax, 9 ; jb 0x200003f29d6 ; xor eax, eax ; ret
0x00000200000f73a6 : bt eax, eax ; jae 0x200000f73b1 ; ret
0x000002000012e3c7 : bt eax, ecx ; setb al ; ret
0x00000200000e9bee : bt eax, edx ; jb 0x200000e9c04 ; mov al, cl ; ret
0x0000020000074bdf : bt ecx, 0x1a ; jb 0x20000074bfe ; mov eax, edx ; ret
0x0000020000074bdf : bt ecx, 0x1a ; jb 0x20000074bff ; mov eax, edx ; ret
0x0000020000413d24 : bt ecx, 0x1b ; jb 0x20000413d39 ; mov eax, edx ; ret
0x0000020000413d24 : bt ecx, 0x1b ; jb 0x20000413d3a ; mov eax, edx ; ret
0x000002000044439a : bt ecx, 0x1b ; jb 0x200004443b8 ; mov rax, r8 ; ret
0x000002000044c953 : bt ecx, 0x1b ; jb 0x2000044c976 ; mov rax, r8 ; ret
0x0000020000050822 : bt ecx, eax ; jae 0x20000050831 ; mov al, 1 ; ret
0x000002000001f62f : bt qword ptr [rax], rcx ; setb al ; ret
0x00000200001f329e : bt qword ptr [rax], rdx ; setae al ; ret
0x00000200001f333a : bt qword ptr [rax], rdx ; setb al ; ret
0x00000200004049c7 : bt r8d, 0x10 ; jb 0x200004049e8 ; mov eax, edx ; ret
0x00000200004049c7 : bt r8d, 0x10 ; jb 0x200004049e9 ; mov eax, edx ; ret
0x00000200000f73a5 : bt r8d, eax ; jae 0x200000f73b2 ; ret
0x0000020000050821 : bt rcx, rax ; jae 0x20000050832 ; mov al, 1 ; ret
0x000002000002ebf1 : btc eax, eax ; mov dword ptr [rcx + 0x5898], eax ; ret
0x000002000002ed19 : btc eax, eax ; mov dword ptr [rcx + 8], eax ; ret
0x000002000002ed18 : btc eax, r8d ; mov dword ptr [rcx + 8], eax ; ret
0x0000020000039b74 : btr dword ptr [rax], edx ; ret
0x00000200001636c7 : btr dword ptr [rcx + 8], 0x19 ; ret
0x00000200000402fe : btr dword ptr [rcx], eax ; ret
0x000002000002f73a : btr dword ptr [rdx + 0x78], 5 ; ret
0x00000200000f4ad0 : btr dword ptr [rdx], 0x14 ; mov byte ptr [rdx + 0x7c], al ; ret
0x0000020000031d31 : btr eax, 0xc ; ret
0x0000020000094e3d : btr eax, 7 ; bts rax, 8 ; ret
0x00000200000defe7 : btr eax, ecx ; mov qword ptr [r8 + rdx*8 + 8], rax ; ret
0x0000020000031dd7 : btr eax, edx ; mov qword ptr [rcx], rax ; ret
0x00000200003a9e97 : btr ecx, 0x12 ; mov cr4, rcx ; ret
0x0000020000602252 : btr edi, edi ; add rsp, 0x60 ; pop rbx ; ret
0x00000200001f33bc : btr qword ptr [rax], rdx ; ret
0x00000200000402fd : btr qword ptr [rcx], rax ; ret
0x0000020000031d30 : btr rax, 0xc ; ret
0x00000200000defe6 : btr rax, rcx ; mov qword ptr [r8 + rdx*8 + 8], rax ; ret
0x0000020000031dd6 : btr rax, rdx ; mov qword ptr [rcx], rax ; ret
0x00000200003a9e96 : btr rcx, 0x12 ; mov cr4, rcx ; ret
0x00000200006c02c8 : bts dword ptr [r8 + 0x20], 0x18 ; ret
0x00000200006c02cf : bts dword ptr [r8 + 0x20], 0x19 ; ret
0x00000200006c02eb : bts dword ptr [r8 + 0x20], 0x1a ; ret
0x00000200006c02d6 : bts dword ptr [r8 + 0x20], 0x1b ; ret
0x00000200006c02e4 : bts dword ptr [r8 + 0x20], 0x1c ; ret
0x00000200006c02dd : bts dword ptr [r8 + 0x20], 0x1d ; ret
0x0000020000405d6e : bts dword ptr [r9], 0x1d ; ret
0x00000200006c02c9 : bts dword ptr [rax + 0x20], 0x18 ; ret
0x00000200006c02d0 : bts dword ptr [rax + 0x20], 0x19 ; ret
0x00000200006c02ec : bts dword ptr [rax + 0x20], 0x1a ; ret
0x00000200006c02d7 : bts dword ptr [rax + 0x20], 0x1b ; ret
0x00000200006c02e5 : bts dword ptr [rax + 0x20], 0x1c ; ret
0x00000200006c02de : bts dword ptr [rax + 0x20], 0x1d ; ret
0x00000200001a53e9 : bts dword ptr [rax + 0x40], 9 ; ret
0x0000020000202089 : bts dword ptr [rax], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000047ce45 : bts dword ptr [rax], ecx ; inc rdx ; jmp 0x2000047ce20
0x000002000003993c : bts dword ptr [rax], edx ; ret
0x000002000047ce44 : bts dword ptr [rax], r9d ; inc rdx ; jmp 0x2000047ce21
0x00000200001636c1 : bts dword ptr [rcx + 8], 0x19 ; ret
0x000002000003b970 : bts dword ptr [rcx], 0 ; jb 0x2000003b986 ; mov al, 1 ; ret
0x0000020000405d6f : bts dword ptr [rcx], 0x1d ; ret
0x0000020000046013 : bts dword ptr [rcx], 0xc ; ret
0x00000200000156b9 : bts dword ptr [rcx], 9 ; ret
0x000002000002f741 : bts dword ptr [rdx + 0x78], 5 ; ret
0x00000200004609b8 : bts dword ptr [rdx], 0x18 ; ret
0x000002000046c977 : bts dword ptr [rdx], 7 ; ret
0x0000020000402d1b : bts dword ptr [rdx], 8 ; mov eax, r9d ; ret
0x000002000044cb3d : bts eax, 0x1c ; ret
0x0000020000094e42 : bts eax, 8 ; ret
0x000002000011f453 : bts eax, edx ; mov qword ptr [rcx], rax ; ret
0x0000020000454d03 : bts ebx, 0xa ; jmp 0x20000454cd1
0x0000020000671ed0 : bts ecx, 0x17 ; or dword ptr [rdx], ecx ; ret
0x0000020000086c1f : bts ecx, eax ; mov qword ptr [rdx + 8], rcx ; ret
0x000002000011caf9 : bts edi, 0x13 ; jmp 0x2000011caef
0x00000200001f4750 : bts qword ptr [rax], rdx ; ret
0x000002000003b96f : bts qword ptr [rcx], 0 ; jb 0x2000003b987 ; mov al, 1 ; ret
0x0000020000046012 : bts qword ptr [rcx], 0xc ; ret
0x0000020000094e41 : bts rax, 8 ; ret
0x000002000011f452 : bts rax, rdx ; mov qword ptr [rcx], rax ; ret
0x0000020000454d02 : bts rbx, 0xa ; jmp 0x20000454cd2
0x0000020000086c1e : bts rcx, rax ; mov qword ptr [rdx + 8], rcx ; ret
0x00000200006489bc : call 0x1ff80aa1709
0x0000020000463f38 : call 0x1ff8356017a
0x00000200000d63f5 : call 0x1ff83566400
0x00000200003c3e4c : call 0x1ff83843e72
0x00000200004eb2ce : call 0x1ff8397b2bd
0x00000200005eab9c : call 0x1ff83a7ab8a
0x00000200005eab9b : call 0x1ff83a7ab8b
0x00000200005ffcf8 : call 0x1ff83a7feb4
0x0000020000673589 : call 0x1ff83b0353a
0x000002000010d3ba : call 0x1ff83e048c8
0x00000200003c430f : call 0x1ff83fece63
0x00000200001c1925 : call 0x1ff84099232
0x00000200005a65eb : call 0x1ff841c98f8
0x000002000050e434 : call 0x1ff8650a6d7
0x00000200005414a3 : call 0x1ff891636b9
0x00000200007551dc : call 0x1ff89be517d
0x0000020000014070 : call 0x1ff89c34b80
0x000002000020c8b4 : call 0x1ff8b6d8b46
0x00000200005cd5ad : call 0x1ff8ba5e42e
0x0000020000671cd4 : call 0x1ff8bac1c9a
0x00000200001c3523 : call 0x1ff8bdec06f
0x00000200001f628d : call 0x1ff8c0edb99
0x00000200004970f8 : call 0x1ff8c49331a
0x0000020000622d48 : call 0x1ff8e243056
0x0000020000560aeb : call 0x1ffb6182adb
0x000002000013c17a : call 0x1ffb723028c
0x000002000048cad0 : call 0x1ffb7580c9e
0x00000200004ae3d2 : call 0x1ffba5aa664
0x00000200000f1e30 : call 0x1ffbad12180
0x00000200003e4463 : call 0x1ffc0c38c73
0x0000020000429d7f : call 0x1ffc18b6011
0x000002000012d631 : call 0x1ffc1d5617a
0x0000020000010065 : call 0x1ffc20448ad
0x0000020000014f9a : call 0x1ffc20497e2
0x000002000003272f : call 0x1ffc2066f3c
0x00000200000fa7c6 : call 0x1ffc212f00e
0x0000020000107349 : call 0x1ffc213bc56
0x0000020000107fdc : call 0x1ffc213c7e9
0x0000020000579897 : call 0x1ffc21a249e
0x000002000018bb5d : call 0x1ffc21c07a5
0x00000200001defd3 : call 0x1ffc221381b
0x00000200001efb16 : call 0x1ffc2224323
0x0000020000005d3d : call 0x1ffc223a54f
0x000002000000dc88 : call 0x1ffc224249a
0x000002000000df8a : call 0x1ffc224279c
0x00000200000104c6 : call 0x1ffc2244dd8
0x000002000001059b : call 0x1ffc2244ead
0x0000020000012701 : call 0x1ffc2246f1c
0x000002000021eaf7 : call 0x1ffc225333f
0x000002000021ee1b : call 0x1ffc2253663
0x000002000021f020 : call 0x1ffc2253868
0x0000020000035dee : call 0x1ffc226a603
0x00000200000561fd : call 0x1ffc228aa0f
0x000002000005620b : call 0x1ffc228aa1d
0x0000020000058cf6 : call 0x1ffc228d50b
0x000002000007bb7f : call 0x1ffc229fc8b
0x00000200000766ce : call 0x1ffc22aaee0
0x00000200000778dc : call 0x1ffc22ac0ee
0x00000200000778eb : call 0x1ffc22ac0fd
0x00000200000778fa : call 0x1ffc22ac10c
0x000002000007cea1 : call 0x1ffc22b17b3
0x000002000007e659 : call 0x1ffc22b2e6b
0x0000020000081093 : call 0x1ffc22b58a8
0x000002000008beb8 : call 0x1ffc22c07ca
0x0000020000099b91 : call 0x1ffc22ce3a3
0x00000200000a1a65 : call 0x1ffc22d627a
0x00000200000a1dc1 : call 0x1ffc22d83f2
0x00000200000a8b78 : call 0x1ffc22dd48a
0x00000200000aba78 : call 0x1ffc22e028a
0x00000200000ac18a : call 0x1ffc22e099f
0x00000200000adf66 : call 0x1ffc22e277b
0x00000200000aeae8 : call 0x1ffc22e32fd
0x00000200000af593 : call 0x1ffc22e3da8
0x00000200000d694f : call 0x1ffc230b161
0x00000200000d9af6 : call 0x1ffc230e308
0x00000200000dadc4 : call 0x1ffc230f5d9
0x00000200000dae6a : call 0x1ffc230f67f
0x00000200000db609 : call 0x1ffc230fe1e
0x00000200000dee60 : call 0x1ffc2313672
0x00000200000dee6f : call 0x1ffc2313681
0x00000200000dee7e : call 0x1ffc2313690
0x00000200000df5ab : call 0x1ffc2313eb6
0x00000200000df90f : call 0x1ffc2314224
0x00000200000f5b1c : call 0x1ffc232a32e
0x00000200000f5b2b : call 0x1ffc232a33d
0x00000200000f5ba4 : call 0x1ffc232a3b9
0x00000200000f86f1 : call 0x1ffc232d006
0x0000020000105d52 : call 0x1ffc233a667
0x000002000010b528 : call 0x1ffc233fe3d
0x000002000012beff : call 0x1ffc2360714
0x000002000015acc1 : call 0x1ffc238f4dc
0x000002000017949c : call 0x1ffc23addb1
0x0000020000180703 : call 0x1ffc23b5018
0x0000020000181552 : call 0x1ffc23b5d67
0x00000200001819d1 : call 0x1ffc23b62e3
0x0000020000181c6c : call 0x1ffc23b657e
0x0000020000187f3e : call 0x1ffc23bc753
0x000002000018d70b : call 0x1ffc23c1f20
0x000002000019927e : call 0x1ffc23cdb93
0x000002000003f1ef : call 0x1ffc23f3b0c
0x00000200001cca09 : call 0x1ffc240121b
0x00000200001d0682 : call 0x1ffc2404e94
0x00000200001d0761 : call 0x1ffc2405073
0x00000200001d2337 : call 0x1ffc2406b49
0x00000200001d679c : call 0x1ffc240afae
0x00000200001dd91d : call 0x1ffc2412238
0x00000200001e08d9 : call 0x1ffc24150ee
0x00000200001ef5db : call 0x1ffc2423de6
0x000002000007675d : call 0x1ffc242af72
0x00000200000776ba : call 0x1ffc242bfe3
0x0000020000095c1d : call 0x1ffc2449d2c
0x000002000009e74e : call 0x1ffc2452f77
0x00000200000f1e3b : call 0x1ffc24a6654
0x000002000012a1b3 : call 0x1ffc24de9be
0x00000200004c13fd : call 0x1ffc24f5d12
0x00000200005ea24f : call 0x1ffc261ea5c
0x000002000049aefd : call 0x1ffc2671cee
0x00000200004875ee : call 0x1ffc26ab6fc
0x000002000049803c : call 0x1ffc2711f2d
0x00000200004ed676 : call 0x1ffc2721e81
0x00000200004f9ca4 : call 0x1ffc272e4af
0x000002000058d864 : call 0x1ffc27b1d70
0x0000020000481a78 : call 0x1ffc27b668a
0x000002000049d518 : call 0x1ffc27d212a
0x000002000058046e : call 0x1ffc2834d76
0x000002000062d718 : call 0x1ffc2861827
0x0000020000041be7 : call 0x1ffc2885cf3
0x000002000006ab2c : call 0x1ffc28aec38
0x000002000006d784 : call 0x1ffc28b1890
0x00000200000773b1 : call 0x1ffc28bb4c6
0x000002000007769a : call 0x1ffc28bb7b0
0x00000200000776aa : call 0x1ffc28bb7bf
0x0000020000614c30 : call 0x1ffc28c8d9f
0x0000020000614c2f : call 0x1ffc28c8da0
0x0000020000621284 : call 0x1ffc28d5e96
0x0000020000532e39 : call 0x1ffc2973d83
0x000002000074581c : call 0x1ffc297a02e
0x0000020000746164 : call 0x1ffc297a979
0x0000020000747e06 : call 0x1ffc297c618
0x0000020000748942 : call 0x1ffc297d157
0x0000020000749b0a : call 0x1ffc297e31c
0x000002000075eaea : call 0x1ffc29932f5
0x000002000017e62b : call 0x1ffc29c2741
0x00000200001733d5 : call 0x1ffc29c9a36
0x00000200001f86eb : call 0x1ffc2a2cef8
0x000002000019f46c : call 0x1ffc2a53ca1
0x00000200004c5027 : call 0x1ffc2b75818
0x00000200004c5026 : call 0x1ffc2b75819
0x000002000050e3ee : call 0x1ffc2c8dcdf
0x0000020000008629 : call 0x1ffc3008649
0x00000200000a76c1 : call 0x1ffc30176c9
0x0000020000038587 : call 0x1ffc3038593
0x000002000003185c : call 0x1ffc3043c6f
0x0000020000045a0f : call 0x1ffc3045a1a
0x0000020000041258 : call 0x1ffc3053679
0x000002000004248b : call 0x1ffc3054896
0x000002000005c7c1 : call 0x1ffc306ebd0
0x00000200000ec46c : call 0x1ffc30ec475
0x00000200000df3ef : call 0x1ffc30fd47b
0x00000200000e797c : call 0x1ffc30ff786
0x0000020000120293 : call 0x1ffc313779d
0x0000020000132547 : call 0x1ffc314495d
0x00000200001af2eb : call 0x1ffc31af300
0x00000200001af31a : call 0x1ffc31af32f
0x00000200001af3ae : call 0x1ffc31af3c3
0x00000200001af44e : call 0x1ffc31af463
0x00000200001ab23f : call 0x1ffc31bd65c
0x00000200001f7ce9 : call 0x1ffc31ec5f6
0x00000200000762ec : call 0x1ffc32aab01
0x00000200000a4565 : call 0x1ffc32d8e7a
0x00000200000a4ab4 : call 0x1ffc32d93c9
0x00000200000aa494 : call 0x1ffc32deda9
0x00000200000aaf30 : call 0x1ffc32df845
0x00000200000f19d7 : call 0x1ffc3325ee2
0x00000200001561db : call 0x1ffc338a9f0
0x00000200001c3515 : call 0x1ffc33c4462
0x00000200001c3514 : call 0x1ffc33c4463
0x00000200001daa88 : call 0x1ffc340f29d
0x00000200001dd8ed : call 0x1ffc34121ff
0x0000020000403bfc : call 0x1ffc3416009
0x0000020000063343 : call 0x1ffc3417b55
0x0000020000407155 : call 0x1ffc3419561
0x000002000041f11f : call 0x1ffc341f128
0x00000200001f6c15 : call 0x1ffc342b022
0x000002000007df8e : call 0x1ffc34327b3
0x000002000041b3f7 : call 0x1ffc3439483
0x00000200000a63b7 : call 0x1ffc345a4c6
0x000002000022bd04 : call 0x1ffc345fe20
0x000002000022bd10 : call 0x1ffc345fe22
0x0000020000478988 : call 0x1ffc3478994
0x000002000060348c : call 0x1ffc348837d
0x00000200004c39c8 : call 0x1ffc34c49e8
0x0000020000491b39 : call 0x1ffc34c684e
0x0000020000407a67 : call 0x1ffc3506a58
0x000002000015a7fe : call 0x1ffc350e90d
0x00000200001dc40d : call 0x1ffc3510c36
0x0000020000506d07 : call 0x1ffc3519113
0x000002000052f0a3 : call 0x1ffc352f0ac
0x00000200005807a6 : call 0x1ffc35b4dae
0x00000200005f1ee0 : call 0x1ffc36042ec
0x00000200005d14ad : call 0x1ffc3629dc1
0x000002000060117c : call 0x1ffc36b706d
0x00000200006b39f2 : call 0x1ffc36c5e0a
0x00000200003bb677 : call 0x1ffc376fea0
0x000002000042fe6c : call 0x1ffc37e4777
0x000002000006e91d : call 0x1ffc38ae925
0x0000020000020d58 : call 0x1ffc38d174c
0x000002000001857c : call 0x1ffc38d7370
0x0000020000216f4e : call 0x1ffc3907ebd
0x0000020000217111 : call 0x1ffc3908080
0x00000200000f5e50 : call 0x1ffc392a661
0x00000200007441f0 : call 0x1ffc3978b02
0x0000020000747835 : call 0x1ffc397c147
0x00000200007625db : call 0x1ffc3996ef0
0x00000200007626a8 : call 0x1ffc3996fbd
0x00000200007628a8 : call 0x1ffc39970ba
0x00000200007628ba : call 0x1ffc39970cc
0x000002000076285f : call 0x1ffc3997174
0x0000020000767d74 : call 0x1ffc399c586
0x0000020000767dc4 : call 0x1ffc399c5d6
0x000002000050b9ee : call 0x1ffc39a46df
0x000002000050b9ed : call 0x1ffc39a46e0
0x00000200003ee7d1 : call 0x1ffc39b8dc2
0x00000200001d7bc0 : call 0x1ffc39ec4c8
0x00000200001382e4 : call 0x1ffc39f82ea
0x00000200001f99d5 : call 0x1ffc3a2e1e5
0x00000200006bb563 : call 0x1ffc3a6f978
0x00000200003e950c : call 0x1ffc3a92bfd
0x00000200001e5472 : call 0x1ffc3a9a099
0x00000200003c19d4 : call 0x1ffc3c028de
0x00000200004fe61b : call 0x1ffc3c1660c
0x0000020000015e8e : call 0x1ffc3c181e0
0x00000200004fe5fc : call 0x1ffc3c184ed
0x00000200004fe5dd : call 0x1ffc3c1a3ce
0x000002000039e510 : call 0x1ffc3c5e4ea
0x000002000042c806 : call 0x1ffc3cdc825
0x00000200004f47bd : call 0x1ffc3d456c7
0x00000200005045e5 : call 0x1ffc3db45fa
0x0000020000620db1 : call 0x1ffc3dbce3f
0x00000200001f867f : call 0x1ffc3e011d1
0x00000200005427c4 : call 0x1ffc3e0279b
0x00000200005427c3 : call 0x1ffc3e0279c
0x000002000057951e : call 0x1ffc3e2e226
0x000002000057951d : call 0x1ffc3e2e227
0x0000020000598855 : call 0x1ffc3e4d55d
0x00000200005990d8 : call 0x1ffc3e4d9e0
0x0000020000599549 : call 0x1ffc3e4e251
0x0000020000661b3c : call 0x1ffc3e76444
0x00000200005dbc91 : call 0x1ffc3e8009a
0x00000200005dbc90 : call 0x1ffc3e8009b
0x0000020000644284 : call 0x1ffc3e8518e
0x00000200005e3b15 : call 0x1ffc3e93acb
0x0000020000019942 : call 0x1ffc3ec0e4c
0x0000020000008601 : call 0x1ffc3f0fb0b
0x0000020000652747 : call 0x1ffc3f1270d
0x000002000003673b : call 0x1ffc3f2dc45
0x0000020000014348 : call 0x1ffc3f7435b
0x0000020000014347 : call 0x1ffc3f7435c
0x00000200001e3ba5 : call 0x1ffc40ab0af
0x0000020000148ef5 : call 0x1ffc40ad00e
0x00000200006496d3 : call 0x1ffc41ba61d
0x00000200004002b0 : call 0x1ffc42f77ba
0x0000020000478a8a : call 0x1ffc436ff94
0x0000020000188324 : call 0x1ffc453cc36
0x00000200000a8afa : call 0x1ffc745d309
0x0000020000094558 : call 0x1ffc80c8da2
0x0000020000122993 : call 0x1ffc81571dd
0x00000200000764ac : call 0x1ffc82acae0
0x00000200004da06e : call 0x1ffc888e886
0x000002000013ced2 : call 0x1ffd017171d
0x00000200003b10fc : call 0x1ffd03e5947
0x000002000072b0b4 : call 0x1ffd172b0bb
0x000002000072b19c : call 0x1ffd172b1a3
0x000002000072b19c : call 0x1ffd172b1a7
0x00000200005010d8 : call 0x1ffd8dbe317
0x00000200005010d7 : call 0x1ffd8dbe318
0x000002000003852c : call 0x1ffe0c60838
0x000002000000d7db : call 0x1ffe8042025
0x000002000011384d : call 0x1ffe8d2fa57
0x000002000050c05c : call 0x1ffe9128266
0x000002000075e0b4 : call 0x1ffe975a2bb
0x00000200001a34f1 : call 0x1ffe9fca9ff
0x000002000058a1ee : call 0x1ffeaff32e2
0x000002000058a1ed : call 0x1ffeaff32e3
0x000002000009a0c5 : call 0x1fff00ce910
0x000002000018593e : call 0x1fff0db0d2f
0x00000200005ce223 : call 0x1fff5a0a513
0x00000200005ce222 : call 0x1fff5a0a514
0x0000020000171251 : call 0x1fff8cd2160
0x0000020000598465 : call 0x1fff91a0870
0x000002000016df58 : call 0x1fff9aea248
0x0000020000453100 : call 0x1ffff45310b
0x000002000045316b : call 0x1ffff453176
0x00000200005a4d43 : call 0x1ffff5a4d4e
0x0000020000005323 : call 0x1fffff87843
0x000002000000534e : call 0x1fffff87877
0x0000020000005d93 : call 0x1fffff882bc
0x000002000000dce4 : call 0x1fffff9020d
0x0000020000056a59 : call 0x1fffffd8f79
0x000002000007e688 : call 0x20000000ba8
0x000002000007e6b5 : call 0x20000000bde
0x00000200003da29b : call 0x20000002293
0x0000020000008253 : call 0x2000000a357
0x000002000003ff45 : call 0x2000000de0b
0x00000200006247b4 : call 0x20000010a0e
0x0000020000774e46 : call 0x20000011102
0x00000200001b1a5a : call 0x200000116d8
0x00000200005859ab : call 0x20000011c62
0x00000200000f789f : call 0x20000011c67
0x00000200006bc229 : call 0x20000012693
0x00000200003e5952 : call 0x20000013273
0x00000200003c959f : call 0x2000001582a
0x000002000002a558 : call 0x20000016782
0x0000020000119731 : call 0x20000016787
0x0000020000010923 : call 0x20000016789
0x00000200003cc8fc : call 0x20000016acb
0x00000200003f472f : call 0x20000018a03
0x00000200004b8a30 : call 0x20000019896
0x00000200005ce344 : call 0x2000001a622
0x00000200006b6800 : call 0x2000001a626
0x00000200003f181e : call 0x2000001abc3
0x0000020000661b52 : call 0x2000001af0b
0x0000020000633f52 : call 0x200000207f4
0x00000200001a8c81 : call 0x2000002081e
0x00000200003bb213 : call 0x20000020857
0x0000020000021749 : call 0x20000021797
0x00000200003fe341 : call 0x20000022123
0x0000020000025e22 : call 0x20000025e4b
0x00000200005ed390 : call 0x200000264e6
0x00000200001bf8f4 : call 0x20000027384
0x00000200001c3e6c : call 0x20000027387
0x00000200000a8ba7 : call 0x2000002b0c7
0x00000200000a8bd8 : call 0x2000002b101
0x00000200000a8ecc : call 0x2000002b3ec
0x00000200000a8efd : call 0x2000002b426
0x00000200001f17aa : call 0x2000002b80c
0x00000200001df926 : call 0x2000002bb72
0x00000200005f9194 : call 0x2000002bc86
0x00000200001c67d4 : call 0x2000002eb90
0x00000200000d34b1 : call 0x2000002f722
0x000002000062586d : call 0x20000031b3e
0x00000200000c7173 : call 0x200000333ee
0x00000200005b9700 : call 0x2000003644e
0x00000200006568a0 : call 0x20000039d47
0x000002000019f9f6 : call 0x2000003bc82
0x000002000040de78 : call 0x2000003cc2b
0x000002000040df09 : call 0x2000003cd1b
0x0000020000060ba1 : call 0x2000003ce86
0x000002000047203a : call 0x2000003e332
0x000002000019329e : call 0x2000003f4b6
0x0000020000414e84 : call 0x2000003feb3
0x000002000003ff2e : call 0x2000003ff67
0x00000200003a3d24 : call 0x2000003fff6
0x0000020000416b6a : call 0x200000407f3
0x00000200004195e5 : call 0x20000042007
0x0000020000042506 : call 0x2000004267e
0x000002000041b27f : call 0x20000042aa3
0x0000020000435527 : call 0x20000042e7b
0x0000020000776fd7 : call 0x200000432be
0x000002000062b061 : call 0x200000438cf
0x000002000041d657 : call 0x20000043d7b
0x0000020000208990 : call 0x20000044c6a
0x000002000041f98c : call 0x20000044dbb
0x000002000041f9ce : call 0x20000044e57
0x000002000041fec4 : call 0x20000045057
0x000002000042180a : call 0x200000450bf
0x0000020000420d30 : call 0x200000451b7
0x0000020000420d80 : call 0x20000045273
0x000002000042105a : call 0x2000004530f
0x00000200004217ee : call 0x200000456e3
0x000002000042559a : call 0x2000004571f
0x00000200004247e4 : call 0x2000004577f
0x00000200004249ac : call 0x2000004578b
0x000002000041e9ce : call 0x20000045857
0x0000020000425511 : call 0x2000004586f
0x00000200004239b1 : call 0x200000459ab
0x00000200004239a4 : call 0x200000459c3
0x000002000004675c : call 0x20000046376
0x000002000042a747 : call 0x20000046a26
0x000002000010136a : call 0x20000047872
0x00000200002014d9 : call 0x200000478c4
0x000002000016b650 : call 0x20000047952
0x0000020000517031 : call 0x2000004967f
0x00000200004309a1 : call 0x2000004c070
0x00000200004241f3 : call 0x2000004c203
0x000002000004bbe0 : call 0x2000004ca08
0x0000020000175f83 : call 0x2000004ca09
0x0000020000471f57 : call 0x2000004e19a
0x000002000042ac39 : call 0x2000004e19b
0x0000020000426eac : call 0x2000004eb03
0x00000200004a14e0 : call 0x2000004eb06
0x000002000056282f : call 0x2000004eb22
0x000002000047296c : call 0x2000004ec1a
0x000002000042675f : call 0x2000004ec1b
0x000002000020f035 : call 0x2000004ec1e
0x0000020000424362 : call 0x20000050273
0x000002000058547a : call 0x20000051686
0x0000020000423b4a : call 0x20000051687
0x00000200004248ba : call 0x2000005169f
0x0000020000105905 : call 0x20000051bfa
0x0000020000429e44 : call 0x20000051bfb
0x000002000076ea61 : call 0x20000051fd5
0x00000200005f5dcd : call 0x20000052062
0x000002000074b830 : call 0x20000052069
0x00000200004c6d4a : call 0x20000052f76
0x000002000042fc61 : call 0x20000052fb3
0x000002000043c49d : call 0x200000534a6
0x0000020000587526 : call 0x20000053792
0x00000200004241d3 : call 0x20000053793
0x000002000043aa00 : call 0x20000053796
0x00000200004d759f : call 0x2000005384e
0x00000200004238aa : call 0x2000005384f
0x0000020000535c43 : call 0x200000539ee
0x00000200001677c0 : call 0x20000053a7a
0x0000020000425c7d : call 0x20000053bb3
0x0000020000427ce2 : call 0x20000053c63
0x00000200005879de : call 0x20000053ca6
0x000002000042fb93 : call 0x20000053ca7
0x000002000049054c : call 0x20000054996
0x000002000076ac59 : call 0x20000054b47
0x00000200000fad89 : call 0x20000056fc2
0x00000200004341e3 : call 0x20000056fc3
0x0000020000427d13 : call 0x20000057223
0x00000200006264fa : call 0x20000057226
0x000002000017bc42 : call 0x20000057868
0x00000200004295ca : call 0x2000005932f
0x00000200000d6f57 : call 0x20000059480
0x00000200005cd5b3 : call 0x200000597f2
0x00000200005a4d4f : call 0x200000597f7
0x0000020000433dac : call 0x20000059933
0x00000200001cd8a7 : call 0x20000059b82
0x000002000065e832 : call 0x2000005ab12
0x0000020000434829 : call 0x2000005ab13
0x000002000042e0fb : call 0x2000005abbb
0x00000200000d92cb : call 0x2000005b7f4
0x000002000042dc9a : call 0x2000005c78b
0x000002000074a210 : call 0x2000005c86d
0x0000020000438079 : call 0x2000005d3ff
0x00000200001a58ac : call 0x20000061bb2
0x00000200001a595f : call 0x20000061c22
0x000002000006004d : call 0x20000061c26
0x000002000000310a : call 0x20000062876
0x0000020000006698 : call 0x200000628b2
0x0000020000105f21 : call 0x200000628b7
0x00000200000040bc : call 0x20000062f5f
0x00000200001785ae : call 0x20000064836
0x00000200001d890f : call 0x20000064b22
0x0000020000438439 : call 0x20000065ccf
0x000002000040ad10 : call 0x2000006700e
0x00000200000fade3 : call 0x20000067092
0x000002000039bd2e : call 0x20000067f5e
0x000002000004c1d6 : call 0x200000684c2
0x00000200006569a5 : call 0x200000684ef
0x00000200000cdceb : call 0x20000069fb2
0x00000200006ce0b6 : call 0x2000006a2de
0x000002000043cdd8 : call 0x2000006a2df
0x000002000044c6ab : call 0x200000706ef
0x00000200005c520a : call 0x20000071472
0x0000020000441867 : call 0x20000071473
0x0000020000445e56 : call 0x20000074617
0x000002000044622e : call 0x2000007465f
0x00000200004cb292 : call 0x20000074899
0x0000020000446ab8 : call 0x20000074c93
0x000002000049858e : call 0x2000007b790
0x000002000049858d : call 0x2000007b791
0x000002000049858c : call 0x2000007b792
0x0000020000219f12 : call 0x2000007b88b
0x00000200005f3128 : call 0x2000007f3d2
0x0000020000456da7 : call 0x2000007f3d3
0x00000200005f32fb : call 0x2000007f562
0x0000020000456f41 : call 0x2000007f563
0x000002000007bb8f : call 0x20000081452
0x00000200006c60e6 : call 0x20000082332
0x000002000045566c : call 0x2000008236f
0x0000020000456f86 : call 0x2000008239b
0x00000200006264e6 : call 0x200000831d6
0x00000200001c7e1b : call 0x200000840a2
0x00000200004e8acd : call 0x20000084daa
0x00000200000b909a : call 0x20000085322
0x000002000003bb86 : call 0x20000086186
0x000002000046029b : call 0x20000087103
0x000002000045de71 : call 0x20000088d43
0x000002000045bb94 : call 0x200000895e3
0x00000200001ed48f : call 0x20000089712
0x0000020000182c59 : call 0x20000089718
0x0000020000622546 : call 0x2000008aff7
0x000002000008bb3d : call 0x2000008c5e6
0x000002000010afc5 : call 0x20000091d17
0x0000020000035cf0 : call 0x20000091f42
0x0000020000748c26 : call 0x20000091f49
0x0000020000004970 : call 0x20000094d47
0x000002000005b7bd : call 0x200000979d2
0x00000200004752f3 : call 0x20000099f93
0x00000200000ba2b1 : call 0x20000099f98
0x00000200004752ac : call 0x2000009a243
0x00000200004756d6 : call 0x2000009a2cb
0x00000200004756ec : call 0x2000009a2d3
0x00000200004756f4 : call 0x2000009a483
0x00000200004756c2 : call 0x2000009a4a3
0x0000020000475fea : call 0x2000009a5c3
0x0000020000080905 : call 0x2000009a5c6
0x00000200003e4dd5 : call 0x2000009b3b6
0x0000020000475292 : call 0x2000009b443
0x00000200004756e1 : call 0x2000009d693
0x0000020000491fd9 : call 0x2000009d696
0x000002000011b421 : call 0x2000009d941
0x000002000011b452 : call 0x2000009d97b
0x0000020000475e72 : call 0x2000009db83
0x0000020000181d62 : call 0x2000009e032
0x0000020000107ed0 : call 0x2000009ebc7
0x0000020000494f62 : call 0x200000a23b7
0x00000200000d6d03 : call 0x200000a2f52
0x0000020000475d30 : call 0x200000a4fb3
0x00000200000d43e7 : call 0x200000b0612
0x000002000075ce88 : call 0x200000b1139
0x00000200000b0cfe : call 0x200000b1828
0x00000200004f6510 : call 0x200000b2772
0x00000200000464fe : call 0x200000b27d2
0x00000200003c66ac : call 0x200000b3e0b
0x0000020000627d01 : call 0x200000b3f32
0x0000020000493993 : call 0x200000b5803
0x00000200004962f7 : call 0x200000b6c23
0x00000200004962f6 : call 0x200000b6c24
0x000002000011ad94 : call 0x200000b7052
0x00000200000784e9 : call 0x200000b7056
0x0000020000492f9c : call 0x200000b8093
0x00000200005a4a82 : call 0x200000b8096
0x0000020000496b6b : call 0x200000b8823
0x000002000049726a : call 0x200000b8c43
0x0000020000492e08 : call 0x200000b8ce7
0x0000020000493bdd : call 0x200000b8ea3
0x0000020000493895 : call 0x200000b9053
0x0000020000496eac : call 0x200000b9103
0x0000020000496eab : call 0x200000b9104
0x0000020000497302 : call 0x200000b91e3
0x0000020000499333 : call 0x200000ba3f3
0x0000020000494dcb : call 0x200000ba7af
0x000002000049803d : call 0x200000ba7e3
0x0000020000497b43 : call 0x200000ba84b
0x0000020000497f4a : call 0x200000ba9f3
0x000002000048c9a1 : call 0x200000bab43
0x0000020000498646 : call 0x200000bab44
0x0000020000498645 : call 0x200000bab45
0x0000020000498d18 : call 0x200000bb113
0x0000020000498d3e : call 0x200000bb143
0x0000020000499152 : call 0x200000bb1b3
0x0000020000497ab1 : call 0x200000bb217
0x000002000050ff84 : call 0x200000bc252
0x000002000048d4be : call 0x200000bc253
0x00000200004924a1 : call 0x200000bc283
0x000002000049a688 : call 0x200000bc2a3
0x000002000049900b : call 0x200000bc363
0x000002000049a1fe : call 0x200000bc563
0x000002000049a225 : call 0x200000bc583
0x0000020000495afd : call 0x200000bc7b3
0x000002000049ae1b : call 0x200000bc8c3
0x000002000049afcf : call 0x200000bc8c4
0x000002000049ae11 : call 0x200000bc8d3
0x000002000049afc5 : call 0x200000bc8d4
0x000002000049ad7c : call 0x200000bc943
0x000002000049af9c : call 0x200000bc944
0x000002000049ad68 : call 0x200000bcbe3
0x000002000049ad0e : call 0x200000bcc73
0x000002000048f279 : call 0x200000bcca7
0x000002000048e0e1 : call 0x200000bccc3
0x0000020000560aec : call 0x200000bcd12
0x000002000048e38d : call 0x200000bcd13
0x000002000048e150 : call 0x200000bcd23
0x00000200004987bc : call 0x200000bcd24
0x00000200004987bb : call 0x200000bcd25
0x0000020000499b3b : call 0x200000bd113
0x000002000049be6d : call 0x200000bd1ef
0x000002000049ac94 : call 0x200000bd243
0x00000200004d7f7c : call 0x200000bd247
0x000002000053fb9e : call 0x200000bd3e0
0x00000200000bff8e : call 0x200000bd9b6
0x0000020000012b62 : call 0x200000bee62
0x000002000019370e : call 0x200000bf962
0x000002000049df74 : call 0x200000bf963
0x000002000049df37 : call 0x200000bf973
0x000002000049b1a0 : call 0x200000c06f3
0x000002000049d674 : call 0x200000c078b
0x000002000049faa3 : call 0x200000c0793
0x00000200001b46ed : call 0x200000c09d2
0x000002000049b9e1 : call 0x200000c1923
0x0000020000195855 : call 0x200000c1b32
0x00000200004947c6 : call 0x200000c1b33
0x00000200004309f7 : call 0x200000c1b36
0x0000020000455c18 : call 0x200000c1e22
0x000002000049a247 : call 0x200000c1e23
0x0000020000405bfd : call 0x200000c1e62
0x000002000049206f : call 0x200000c1e63
0x000002000049206e : call 0x200000c1e64
0x000002000049fc9d : call 0x200000c2103
0x00000200003d61ae : call 0x200000c23c2
0x00000200004997bf : call 0x200000c23c3
0x000002000049f370 : call 0x200000c23c4
0x00000200001b3fb2 : call 0x200000c23c6
0x00000200003aec27 : call 0x200000c23c7
0x0000020000576281 : call 0x200000c2542
0x000002000049777f : call 0x200000c2543
0x00000200001121c9 : call 0x200000c2588
0x000002000049a15f : call 0x200000c2603
0x00000200001e6582 : call 0x200000c2842
0x0000020000494742 : call 0x200000c2843
0x00000200004768d8 : call 0x200000c2b92
0x0000020000497879 : call 0x200000c2b93
0x0000020000497878 : call 0x200000c2b94
0x0000020000014346 : call 0x200000c2b96
0x00000200000697af : call 0x200000c2b98
0x000002000049d9ce : call 0x200000c2d13
0x000002000049d995 : call 0x200000c2de3
0x000002000049ad03 : call 0x200000c3083
0x0000020000117452 : call 0x200000c36c2
0x00000200005e7486 : call 0x200000c36c3
0x000002000010c32f : call 0x200000c36c4
0x000002000076b0c4 : call 0x200000c36c6
0x0000020000616e66 : call 0x200000c36c7
0x00000200006cca75 : call 0x200000c36c8
0x00000200006cca74 : call 0x200000c36c9
0x00000200004299d3 : call 0x200000c5ca2
0x0000020000029d30 : call 0x200000c5f52
0x000002000003ceb4 : call 0x200000c5f56
0x0000020000071dc5 : call 0x200000c5f57
0x00000200003eb734 : call 0x200000c7a22
0x000002000049cb67 : call 0x200000c7a23
0x00000200004a5031 : call 0x200000c95a3
0x0000020000516c02 : call 0x200000ccd97
0x00000200004ac708 : call 0x200000cf493
0x0000020000673978 : call 0x200000cfb92
0x00000200004a4cd4 : call 0x200000cfb93
0x00000200005f67d3 : call 0x200000cfb96
0x0000020000423493 : call 0x200000cfb97
0x00000200000d521d : call 0x200000d1502
0x00000200000c5523 : call 0x200000d17b2
0x0000020000195d87 : call 0x200000d1fa2
0x00000200004a261c : call 0x200000d2303
0x00000200006c6377 : call 0x200000d3248
0x00000200006db393 : call 0x200000d3249
0x00000200004ad8f5 : call 0x200000d39e3
0x00000200005d8c94 : call 0x200000d3a06
0x00000200001ea1a1 : call 0x200000d6402
0x0000020000748b9c : call 0x200000d8b29
0x00000200001dd97d : call 0x200000d9be2
0x0000020000159a90 : call 0x200000dbfb9
0x00000200001c573c : call 0x200000defc8
0x0000020000182dc9 : call 0x200000deff2
0x00000200001e2512 : call 0x200000df3fc
0x00000200004b2780 : call 0x200000e24c3
0x00000200004c0d31 : call 0x200000e264b
0x00000200004c09fc : call 0x200000e2857
0x00000200004c0d77 : call 0x200000e28a7
0x00000200004c134f : call 0x200000e4de3
0x00000200004c161e : call 0x200000e5267
0x00000200004c1908 : call 0x200000e5ba7
0x00000200004c1ae6 : call 0x200000e5c43
0x00000200004c1c4b : call 0x200000e7753
0x00000200004c1c06 : call 0x200000e7883
0x00000200004c1bfa : call 0x200000e7973
0x00000200004c1c7d : call 0x200000e7993
0x000002000044bf29 : call 0x200000e8152
0x00000200004beeb9 : call 0x200000e8153
0x000002000044a351 : call 0x200000e8156
0x000002000015c0d3 : call 0x200000e8382
0x00000200004bbf88 : call 0x200000e8383
0x00000200004c271c : call 0x200000e88cf
0x00000200004c28e6 : call 0x200000e8b57
0x00000200004c304f : call 0x200000e9463
0x00000200004c3014 : call 0x200000e9de3
0x00000200004c3643 : call 0x200000e9fd7
0x00000200004c34ba : call 0x200000ea7c3
0x00000200004c3592 : call 0x200000ea7f7
0x00000200004c37f3 : call 0x200000eb3bb
0x00000200004c3678 : call 0x200000eb3ef
0x00000200004c3ab1 : call 0x200000eb5b3
0x00000200004c4e26 : call 0x200000ebb23
0x00000200004c4d78 : call 0x200000ebb37
0x00000200004c40de : call 0x200000ebe23
0x00000200004c40cc : call 0x200000ebe73
0x0000020000741d13 : call 0x200000ebebd
0x00000200000efed5 : call 0x200000ec182
0x00000200004c6777 : call 0x200000ec30b
0x00000200004c781b : call 0x200000ec747
0x00000200004c804a : call 0x200000ecdcb
0x00000200004c7ba5 : call 0x200000ecde7
0x000002000063b6a4 : call 0x200000ed146
0x000002000052e0ad : call 0x200000ed148
0x00000200004c91bc : call 0x200000ed5a3
0x00000200004bfbb9 : call 0x200000edbd3
0x00000200004c8d5c : call 0x200000edd73
0x00000200004c9273 : call 0x200000edda7
0x00000200004c937e : call 0x200000ede67
0x00000200004c9bc1 : call 0x200000ee10f
0x00000200004c9b22 : call 0x200000ee19b
0x00000200004c9aa7 : call 0x200000ee21f
0x00000200001e21be : call 0x200000ee3ea
0x00000200004c9e0c : call 0x200000ee3eb
0x00000200004c9e0b : call 0x200000ee3ec
0x00000200004c96f5 : call 0x200000ee66f
0x00000200004ca142 : call 0x200000ee7b3
0x0000020000471c05 : call 0x200000ee956
0x0000020000635258 : call 0x200000ee957
0x0000020000631760 : call 0x200000ee959
0x00000200004cadfc : call 0x200000eebe7
0x00000200004cadd6 : call 0x200000eebf3
0x00000200004cb1bb : call 0x200000eec4f
0x00000200004cb1c0 : call 0x200000eef93
0x00000200004caf86 : call 0x200000eefab
0x00000200004cb9de : call 0x200000ef13b
0x00000200004cb943 : call 0x200000ef373
0x00000200004ccf66 : call 0x200000ef4af
0x00000200004ccfdb : call 0x200000ef4ff
0x00000200004cd326 : call 0x200000ef523
0x00000200004cc77b : call 0x200000ef58b
0x00000200004c7de7 : call 0x200000efbbb
0x00000200004ccd0f : call 0x200000efee7
0x00000200004cb9ce : call 0x200000f1a3f
0x0000020000172916 : call 0x200000f4e36
0x000002000017293d : call 0x200000f4e66
0x00000200004e1dde : call 0x200000f5193
0x00000200004ccd51 : call 0x200000f5397
0x00000200004cc23e : call 0x200000f7d4b
0x00000200004cb960 : call 0x200000f83bf
0x00000200000fcbba : call 0x200000f8dde
0x000002000020150b : call 0x200000fd802
0x0000020000181a0b : call 0x20000103f2b
0x0000020000181a38 : call 0x20000103f61
0x0000020000181cc9 : call 0x200001041f2
0x0000020000128814 : call 0x20000104af6
0x0000020000105c40 : call 0x20000105cbf
0x000002000039f388 : call 0x20000109f07
0x000002000039eed8 : call 0x20000109f09
0x0000020000187bac : call 0x2000010a0d5
0x0000020000189bed : call 0x2000010c10d
0x000002000010e293 : call 0x2000010e1ee
0x00000200004ed18e : call 0x20000110ae3
0x00000200004eb8a4 : call 0x2000011707b
0x00000200004efba9 : call 0x20000117427
0x00000200004efe56 : call 0x20000117543
0x00000200004eaa42 : call 0x2000011767f
0x00000200004ecc19 : call 0x200001178cb
0x00000200004ec0e8 : call 0x20000117ea3
0x00000200004ec0e7 : call 0x20000117ea4
0x00000200004ee413 : call 0x20000117eb7
0x00000200001cedcb : call 0x200001188da
0x0000020000197bca : call 0x2000011a0f3
0x000002000013fc5e : call 0x2000011bf62
0x00000200004f5ffb : call 0x200001221ff
0x00000200004f5ff3 : call 0x20000122923
0x00000200006176dd : call 0x2000012398a
0x0000020000500d4a : call 0x2000012f9b3
0x0000020000173e4e : call 0x2000013011a
0x000002000013d882 : call 0x200001313e3
0x00000200001b6105 : call 0x2000013142f
0x00000200006364d6 : call 0x200001327c6
0x0000020000016e7f : call 0x20000133182
0x0000020000503540 : call 0x20000133183
0x000002000050ad33 : call 0x20000133f73
0x0000020000688256 : call 0x2000013455a
0x0000020000504c82 : call 0x20000134773
0x000002000050719d : call 0x200001356a7
0x0000020000507c21 : call 0x20000135b9f
0x000002000050e3dc : call 0x20000135bef
0x000002000066be51 : call 0x20000138122
0x000002000050e433 : call 0x20000138123
0x000002000050fa5a : call 0x200001392af
0x00000200007329e8 : call 0x2000013ec2e
0x00000200005ece41 : call 0x2000013f9ae
0x00000200005d3f47 : call 0x200001401e2
0x000002000050407d : call 0x20000140382
0x000002000051096e : call 0x20000140383
0x00000200005155c6 : call 0x20000140384
0x00000200006996d1 : call 0x20000140386
0x000002000052f1ec : call 0x20000140387
0x0000020000594142 : call 0x200001403e2
0x00000200005107c3 : call 0x200001403e3
0x000002000051b0ed : call 0x20000140403
0x0000020000512c6f : call 0x20000140463
0x00000200005126ba : call 0x20000140483
0x00000200005126b9 : call 0x20000140484
0x00000200005138ac : call 0x20000140543
0x0000020000514e19 : call 0x20000140544
0x0000020000514e18 : call 0x20000140545
0x00000200004243d0 : call 0x20000140682
0x0000020000512cf9 : call 0x200001407e3
0x00000200007845a8 : call 0x20000140802
0x0000020000510baa : call 0x20000140803
0x000002000051b6f4 : call 0x20000140863
0x000002000051bbf2 : call 0x20000140aa3
0x0000020000517e81 : call 0x20000140c43
0x0000020000764b3f : call 0x20000140da2
0x00000200005118ed : call 0x20000140da3
0x00000200005e67d5 : call 0x20000140da8
0x000002000051cbe8 : call 0x20000141503
0x0000020000515530 : call 0x20000141ac3
0x0000020000517d78 : call 0x20000143363
0x0000020000412573 : call 0x20000143724
0x00000200001d7652 : call 0x20000143942
0x00000200003abd53 : call 0x20000143c87
0x00000200003abd52 : call 0x20000143c88
0x00000200003abd51 : call 0x20000143c89
0x000002000069c970 : call 0x200001445a6
0x000002000051be08 : call 0x20000149153
0x00000200000675e8 : call 0x20000149156
0x0000020000112f14 : call 0x20000149157
0x00000200004ecf3c : call 0x20000149192
0x00000200001ae5e0 : call 0x2000014a8e2
0x00000200001cca70 : call 0x2000014ef99
0x00000200004c2f62 : call 0x2000014f182
0x0000020000521699 : call 0x2000014f183
0x000002000052914e : call 0x2000014f184
0x0000020000784895 : call 0x2000014f186
0x0000020000532271 : call 0x2000014f187
0x00000200001c6527 : call 0x2000014f188
0x00000200000b3229 : call 0x2000014f4c2
0x000002000051feea : call 0x2000014f4c3
0x00000200005236a9 : call 0x2000014f4c4
0x00000200005236a8 : call 0x2000014f4c5
0x000002000012f311 : call 0x2000014f4c6
0x000002000012f310 : call 0x2000014f4c7
0x000002000012f30f : call 0x2000014f4c8
0x000002000061829e : call 0x2000014f4c9
0x00000200001d67f9 : call 0x20000158d22
0x00000200005844fc : call 0x200001a6173
0x000002000057a923 : call 0x200001a6b5e
0x00000200005799f0 : call 0x200001a6b5f
0x0000020000579aac : call 0x200001a6b62
0x00000200005797b6 : call 0x200001a7a3b
0x00000200001af7cd : call 0x200001aba6e
0x00000200001af7e3 : call 0x200001aba6f
0x00000200001adc0d : call 0x200001adb47
0x00000200001a4578 : call 0x200001b07f6
0x00000200001b37f8 : call 0x200001b3626
0x000002000058c7a1 : call 0x200001ba37f
0x000002000058c731 : call 0x200001ba3db
0x000002000058e14c : call 0x200001bc7df
0x000002000058fa04 : call 0x200001bd2bf
0x0000020000593cd4 : call 0x200001bd35b
0x0000020000590415 : call 0x200001bd47f
0x000002000059289e : call 0x200001bd4e7
0x00000200006a8b93 : call 0x200001bf819
0x0000020000183c85 : call 0x200001bfe9a
0x00000200005642ff : call 0x200001c05e2
0x000002000059de6e : call 0x200001c126f
0x000002000018549a : call 0x200001c1722
0x0000020000147a00 : call 0x200001c3c36
0x00000200005a260c : call 0x200001c46cb
0x00000200005a24a0 : call 0x200001c51e7
0x00000200005a249f : call 0x200001c51e8
0x00000200005a6bb5 : call 0x200001c9743
0x00000200005a6baa : call 0x200001c9763
0x00000200005a4b42 : call 0x200001cb45f
0x00000200006c1cf0 : call 0x200001cb9af
0x00000200005afda6 : call 0x200001cbfea
0x00000200005a52c2 : call 0x200001d146b
0x00000200006b5860 : call 0x200001d1b26
0x00000200005a4a93 : call 0x200001d380b
0x00000200003a85e8 : call 0x200001d48c2
0x00000200005b8c28 : call 0x200001dadb3
0x00000200005aff77 : call 0x200001dd643
0x00000200005afd6e : call 0x200001dd667
0x00000200005afea5 : call 0x200001dd6eb
0x00000200005ba320 : call 0x200001de4d3
0x00000200005b9604 : call 0x200001de783
0x00000200005c1497 : call 0x200001e1723
0x00000200005befd7 : call 0x200001e1b9b
0x00000200001e69cf : call 0x200001e8c63
0x00000200005c0572 : call 0x200001ec83e
0x00000200005caa19 : call 0x200001ec83f
0x00000200005c0430 : call 0x200001eca2b
0x00000200001f1311 : call 0x200001f172e
0x00000200005cacbf : call 0x200001f1803
0x000002000064a208 : call 0x200001f649a
0x00000200001f6ac8 : call 0x200001f6583
0x000002000064a57f : call 0x200001f67d2
0x000002000064a505 : call 0x200001f67fa
0x000002000064a572 : call 0x200001f6842
0x000002000064a7ea : call 0x200001f6a56
0x00000200005d3b73 : call 0x200001fb6f3
0x00000200005d3b72 : call 0x200001fb6f4
0x0000020000202c57 : call 0x20000202973
0x0000020000659e1c : call 0x20000206032
0x00000200006baeb9 : call 0x20000207116
0x00000200006baeb8 : call 0x20000207117
0x00000200006baeb7 : call 0x20000207118
0x00000200006baeb9 : call 0x2000020711b
0x00000200006baeb8 : call 0x2000020711c
0x00000200006baeb7 : call 0x2000020711d
0x000002000015d120 : call 0x20000209376
0x000002000065e748 : call 0x2000020a9d2
0x000002000020f550 : call 0x2000020b83e
0x000002000020c512 : call 0x2000020c272
0x00000200005e18c2 : call 0x2000020f3ab
0x00000200005d20f3 : call 0x2000021e3a6
0x0000020000084d69 : call 0x20000231012
0x0000020000601092 : call 0x20000231013
0x000002000060147e : call 0x20000231014
0x00000200000c5615 : call 0x20000231016
0x0000020000047399 : call 0x20000231017
0x000002000060cef5 : call 0x20000231018
0x00000200001159e6 : call 0x20000231ce2
0x00000200004e5ac7 : call 0x20000231ce3
0x0000020000604135 : call 0x20000231ce4
0x00000200004e5dda : call 0x20000399aa4
0x000002000076a5ea : call 0x20000399b27
0x000002000039f46b : call 0x2000039f3f7
0x00000200003a5303 : call 0x200003a2cc6
0x000002000074b8cc : call 0x200003a3d05
0x00000200003abec7 : call 0x200003ac78e
0x0000020000595215 : call 0x200003b14a2
0x00000200003b64eb : call 0x200003b6576
0x00000200000136c4 : call 0x200003bc58f
0x000002000063f27d : call 0x200003bd778
0x00000200005ccbf9 : call 0x200003d8e9a
0x0000020000613c08 : call 0x200003dfeaa
0x000002000052c94b : call 0x200003e8c02
0x000002000052cb77 : call 0x200003e8dc6
0x000002000061cbee : call 0x200003e8e86
0x00000200003f0f44 : call 0x200003f0fe8
0x00000200004a80d2 : call 0x200003f4382
0x00000200003fa4dc : call 0x200003f9d32
0x000002000052f802 : call 0x2000040ba1a
0x000002000040e441 : call 0x2000040e463
0x00000200006935cb : call 0x2000041f806
0x000002000042a698 : call 0x2000042a6bf
0x00000200004f5776 : call 0x2000042ae7b
0x0000020000543b28 : call 0x2000042d71f
0x00000200003e64c5 : call 0x2000043488a
0x000002000051de5b : call 0x2000043488b
0x00000200004abd85 : call 0x20000438032
0x00000200005a0180 : call 0x2000043c472
0x00000200004a1369 : call 0x2000043d57e
0x000002000075b951 : call 0x2000043ee00
0x0000020000652efc : call 0x2000043f172
0x0000020000583b1d : call 0x2000043fd42
0x0000020000487b25 : call 0x20000443dc2
0x0000020000517bd6 : call 0x20000443dc7
0x0000020000487c28 : call 0x20000443ed2
0x00000200004b1efa : call 0x2000044e176
0x00000200001d53b4 : call 0x2000045371b
0x000002000062b796 : call 0x2000045386a
0x000002000066aa20 : call 0x2000045386b
0x0000020000620d18 : call 0x2000045cf92
0x0000020000605520 : call 0x20000461752
0x00000200004671f7 : call 0x20000463e9c
0x00000200005a9c3b : call 0x20000465e86
0x00000200003ea2ef : call 0x2000046642e
0x000002000058a3d0 : call 0x2000046662a
0x000002000040abd5 : call 0x20000466eb2
0x00000200004de647 : call 0x20000467347
0x0000020000467784 : call 0x200004678e3
0x0000020000468334 : call 0x2000046836b
0x0000020000075df2 : call 0x20000475846
0x0000020000076c0f : call 0x20000475847
0x00000200005b96f0 : call 0x20000475d16
0x0000020000400af5 : call 0x2000047cd96
0x00000200005e1806 : call 0x2000047daca
0x00000200004a578d : call 0x20000481a0e
0x00000200005e28fc : call 0x20000483b02
0x0000020000750150 : call 0x20000486a9a
0x00000200005de144 : call 0x2000048a43a
0x0000020000495dcf : call 0x20000495e6f
0x000002000055f1c3 : call 0x2000049b4c2
0x00000200004a3bf8 : call 0x2000049fe02
0x0000020000443d77 : call 0x200004a0062
0x00000200003c07b4 : call 0x200004aca82
0x00000200005942ea : call 0x200004b0562
0x000002000044e243 : call 0x200004ba492
0x000002000048736c : call 0x200004ba544
0x00000200004e950f : call 0x200004c5752
0x00000200003e13f2 : call 0x200004c7aef
0x00000200001cd975 : call 0x200004c9c52
0x00000200004ee04b : call 0x200004cb5bf
0x0000020000435ba1 : call 0x200004cc41d
0x00000200003e0eca : call 0x200004cd17a
0x0000020000696f77 : call 0x200004ce4be
0x00000200005888fe : call 0x200004d4b82
0x00000200003dea9f : call 0x200004dad82
0x00000200006160b3 : call 0x200004e22c2
0x0000020000661b39 : call 0x200004ec6a7
0x0000020000435bb8 : call 0x200004edcc5
0x0000020000502751 : call 0x200004ee97a
0x000002000074747d : call 0x200004f6079
0x000002000065d7a1 : call 0x200004fd87b
0x000002000075e161 : call 0x200005033a4
0x0000020000117b23 : call 0x20000503dc2
0x0000020000593043 : call 0x2000050f30e
0x00000200005cb50a : call 0x2000051774e
0x0000020000517ad8 : call 0x200005181cb
0x0000020000755a39 : call 0x2000051bd0d
0x0000020000125a58 : call 0x20000521d22
0x00000200005230eb : call 0x20000523133
0x0000020000523553 : call 0x20000524d0f
0x00000200007664ab : call 0x20000537cf1
0x0000020000754e72 : call 0x2000053a3e5
0x000002000065d735 : call 0x2000053b19f
0x00000200005e3bf7 : call 0x2000053fe9a
0x00000200005dc470 : call 0x200005e520f
0x00000200005ea368 : call 0x200005ea796
0x00000200005ed39d : call 0x200005ed5c2
0x0000020000459660 : call 0x200005f5916
0x00000200001a0bba : call 0x200005fce86
0x00000200001bbad0 : call 0x200006002c5
0x00000200005c5dd5 : call 0x2000060203e
0x0000020000572337 : call 0x200006204ee
0x00000200001dce86 : call 0x200006290c6
0x0000020000581255 : call 0x2000062d4fa
0x0000020000588d1c : call 0x20000634fae
0x0000020000588d82 : call 0x2000063502e
0x00000200005cb159 : call 0x2000063745a
0x00000200005cb158 : call 0x2000063745b
0x00000200005a0649 : call 0x2000063c89e
0x00000200003aef51 : call 0x2000063f9ec
0x00000200005ae884 : call 0x2000064ab06
0x000002000057df71 : call 0x2000064ec96
0x000002000066560b : call 0x200006618ba
0x00000200005a87c9 : call 0x20000664a36
0x00000200003d4deb : call 0x20000671153
0x0000020000654f40 : call 0x2000067115e
0x00000200003d728f : call 0x20000671162
0x000002000068964c : call 0x200006858c2
0x000002000068969a : call 0x20000685906
0x00000200005d21d9 : call 0x2000069e44a
0x00000200001bf306 : call 0x200006ab602
0x00000200006abe1d : call 0x200006abc23
0x00000200006b4b04 : call 0x200006b27e1
0x00000200006a8e2d : call 0x200006b509a
0x00000200006b9aa1 : call 0x200006b79eb
0x00000200006b4314 : call 0x200006be262
0x00000200006b3deb : call 0x200006be263
0x00000200006b4bd7 : call 0x200006bedf5
0x00000200006c1b9c : call 0x200006c1c03
0x00000200006c16a3 : call 0x200006c1c77
0x00000200006c1989 : call 0x200006c1cab
0x00000200006b61de : call 0x200006c247e
0x00000200006b4bc5 : call 0x200006c5ef2
0x00000200007440ab : call 0x200006c65d4
0x0000020000744215 : call 0x200006c6735
0x000002000074423c : call 0x200006c6765
0x00000200006c5079 : call 0x200006c9737
0x00000200006da4ad : call 0x200006da5a9
0x00000200007753d1 : call 0x200006f78fa
0x0000020000775780 : call 0x200006f7ca0
0x00000200007757a3 : call 0x200006f7ccc
0x000002000074ba06 : call 0x2000072b9f1
0x000002000074a29e : call 0x20000749a35
0x000002000051cc8d : call 0x20000758ee6
0x00000200007467f1 : call 0x2000076819c
0x000002000075cbf2 : call 0x20000768ee2
0x0000020000749d96 : call 0x2000076ea0d
0x0000020000598f3c : call 0x200015965e4
0x00000200003c5b04 : call 0x200017fe314
0x0000020000062137 : call 0x200038f694d
0x00000200003c5fb2 : call 0x20003c5a7c8
0x0000020000562c80 : call 0x20003df7496
0x000002000061f0e4 : call 0x2000424e6f0
0x0000020000003751 : call 0x200048d8363
0x00000200000634cc : call 0x20004937dde
0x000002000007b809 : call 0x2000495041b
0x0000020000169640 : call 0x20004a3e252
0x0000020000599059 : call 0x2000d1c8760
0x0000020000094ad4 : call 0x2000fcb85e2
0x000002000009f936 : call 0x2000fcc3444
0x00000200000a604b : call 0x2000fcc9b59
0x00000200000a6763 : call 0x2000fcca271
0x00000200000d5764 : call 0x2000fcf9272
0x00000200000d84b2 : call 0x2000fcfbfc0
0x0000020000446e46 : call 0x2001006a996
0x0000020000446e45 : call 0x2001006a997
0x0000020000449a60 : call 0x2001006d5b0
0x0000020000449a5f : call 0x2001006d5b1
0x000002000044be07 : call 0x2001006f957
0x000002000044be06 : call 0x2001006f958
0x00000200005e7230 : call 0x200101ef73c
0x000002000044cb39 : call 0x2001038b664
0x000002000072b01c : call 0x2001172b01f
0x00000200004646e2 : call 0x20013b90924
0x000002000007b814 : call 0x20014950426
0x0000020000733431 : call 0x20017a67c3f
0x0000020000733575 : call 0x20017a67d83
0x0000020000734fea : call 0x20017a697f8
0x000002000073526c : call 0x20017a69a7a
0x0000020000736ece : call 0x20017a6b6dc
0x000002000073700a : call 0x20017a6b818
0x0000020000737152 : call 0x20017a6b960
0x00000200003c72c7 : call 0x20018fef5df
0x00000200001b5ea4 : call 0x20019075e99
0x000002000059851f : call 0x200211c7c26
0x00000200005df01c : call 0x200225d2369
0x000002000041e6b2 : call 0x200248e7206
0x00000200004f8f89 : call 0x20033129144
0x0000020000439b8f : call 0x200332686a2
0x000002000013014a : call 0x20033d5049e
0x00000200004809d8 : call 0x200340a3ce9
0x000002000049d292 : call 0x200340c05a3
0x00000200004a40a4 : call 0x200340c73b5
0x00000200004a8839 : call 0x200340cbb4a
0x000002000020d6d4 : call 0x2003be2f9e8
0x000002000007c0ba : call 0x2004107c0c5
0x000002000007c1f6 : call 0x2004107c201
0x0000020000089434 : call 0x20041ca9788
0x0000020000089480 : call 0x20041ca97d4
0x000002000014695b : call 0x20041d778b0
0x000002000014695a : call 0x20041d778b1
0x00000200001f639a : call 0x20041e166e6
0x0000020000521dad : call 0x200421508ec
0x00000200005f496d : call 0x20042217b77
0x00000200006cab1d : call 0x200422eae6d
0x0000020000489358 : call 0x2004258559a
0x000002000011c2b0 : call 0x200432e5004
0x0000020000570dac : call 0x20043739b00
0x00000200007863da : call 0x20044df266c
0x0000020000599a27 : call 0x200451c262e
0x00000200006ab7b5 : call 0x200452cbb01
0x00000200006ab7b4 : call 0x200452cbb02
0x00000200000fbed0 : call 0x200459980fa
0x00000200004aea45 : call 0x20047d5ea88
0x00000200000a3d43 : call 0x200480a3d52
0x00000200000101c6 : call 0x20048c38d1b
0x00000200000326ff : call 0x20048c54a4f
0x0000020000048dd9 : call 0x20048c702e2
0x000002000009eb96 : call 0x20048cc76eb
0x000002000009eb95 : call 0x20048cc76ec
0x000002000010a662 : call 0x20048d2a9b2
0x000002000015297d : call 0x20048d734cd
0x000002000015348c : call 0x20048d73fdc
0x0000020000153afb : call 0x20048d7464b
0x0000020000154632 : call 0x20048d75182
0x0000020000154b62 : call 0x20048d756b2
0x00000200000437a1 : call 0x20048e2acad
0x00000200003c9741 : call 0x20048fe9a91
0x00000200003e445d : call 0x200490047ad
0x00000200003ed1ad : call 0x2004900d4fd
0x00000200003ed249 : call 0x2004900d599
0x00000200003ed419 : call 0x2004900d769
0x00000200003ed52c : call 0x2004900d87c
0x00000200003ed5e3 : call 0x2004900d933
0x00000200003ed69d : call 0x2004900d9ed
0x00000200003ed72c : call 0x2004900da7c
0x00000200003ed8d5 : call 0x2004900dc25
0x00000200003ed964 : call 0x2004900dcb4
0x00000200003eda89 : call 0x2004900ddd9
0x00000200003edb18 : call 0x2004900de68
0x00000200003edbd9 : call 0x2004900df29
0x00000200003ede3d : call 0x2004900e18d
0x00000200003edec4 : call 0x2004900e214
0x00000200003edfd5 : call 0x2004900e325
0x00000200004809b0 : call 0x200490a3cc1
0x000002000049d25f : call 0x200490c0570
0x00000200004a4074 : call 0x200490c7385
0x00000200004a88c6 : call 0x200490cbbd7
0x00000200004a8c7b : call 0x200490cbf8c
0x00000200004a8cb6 : call 0x200490cbfc7
0x00000200003af222 : call 0x200490d262e
0x00000200003af221 : call 0x200490d262f
0x00000200004ed65d : call 0x2004910f9ad
0x000002000051c9c1 : call 0x20049145515
0x000002000051c9c0 : call 0x20049145516
0x000002000057e0fc : call 0x200491a6d03
0x00000200005dd279 : call 0x200491fd5c9
0x00000200005dfcf0 : call 0x2004920873c
0x00000200005ea21f : call 0x2004920c56f
0x000002000064610e : call 0x2004926641a
0x00000200006cb341 : call 0x200492eb691
0x00000200006cbc63 : call 0x200492ebfb3
0x00000200006cbdbc : call 0x200492ec10c
0x00000200006cbe51 : call 0x200492ec1a1
0x00000200006cbeea : call 0x200492ec23a
0x000002000072b3d5 : call 0x2004934b725
0x000002000072b776 : call 0x2004934bac6
0x000002000072ec26 : call 0x2004934ef76
0x000002000072eced : call 0x2004934f03d
0x000002000072f15b : call 0x2004934f4ab
0x000002000073ed10 : call 0x2004935f060
0x0000020000740791 : call 0x20049360ae1
0x000002000075ea72 : call 0x20049380dc2
0x000002000075feed : call 0x20049388a41
0x000002000075feec : call 0x20049388a42
0x0000020000774153 : call 0x200493944a3
0x0000020000512094 : call 0x2004950e2ab
0x000002000075715c : call 0x200497533e4
0x0000020000004698 : call 0x20049c249ec
0x00000200000baf84 : call 0x20049cdb2d8
0x00000200002139c2 : call 0x20049feaece
0x0000020000213be7 : call 0x20049feb0f3
0x0000020000230db4 : call 0x2004a0082c0
0x000002000042942f : call 0x2004a049783
0x00000200006cabf1 : call 0x2004a2eaf41
0x0000020000107fab : call 0x2004cd2a2fb
0x0000020000599454 : call 0x20058e6dd5f
0x000002000057419c : call 0x2005919c5b3
0x000002000067a446 : call 0x20064a2e8b9
0x0000020000083b51 : call 0x20065ca3e65
0x000002000049faa4 : call 0x2006649bcb7
0x00000200005332e7 : call 0x2006715360e
0x0000020000636cfe : call 0x2006725704e
0x000002000049d500 : call 0x2006a0c0811
0x00000200001d413d : call 0x200740d7c91
0x000002000012ab33 : call 0x20074d33088
0x00000200004332a1 : call 0x20075096df6
0x000002000074b16b : call 0x2007536ec79
0x00000200007803e9 : call 0x200753b2efd
0x000002000057e6d8 : call 0x200754e6ce3
0x000002000000c97d : call 0x20075c3048b
0x000002000045313a : call 0x2007605b68f
0x000002000064ba06 : call qword ptr [r10 + 0x18]
0x000002000064b909 : call qword ptr [r10]
0x00000200001d2248 : call qword ptr [r11]
0x00000200001d2036 : call qword ptr [r15]
0x000002000016b451 : call qword ptr [r8]
0x00000200003aba14 : call qword ptr [r9]
0x0000020000459431 : call qword ptr [rax + 0x5de30d8b]
0x00000200005c0013 : call qword ptr [rax - 0x10ec3d17]
0x00000200005bfadb : call qword ptr [rax - 0x11153d17]
0x0000020000178375 : call qword ptr [rax - 0x12205d17]
0x00000200005b9e80 : call qword ptr [rax - 0x123d4317]
0x0000020000165148 : call qword ptr [rax - 0x12a93d17]
0x00000200005b3bf4 : call qword ptr [rax - 0x134c3d17]
0x00000200005b2f9b : call qword ptr [rax - 0x13733d17]
0x000002000015e6c3 : call qword ptr [rax - 0x138d3d17]
0x00000200005afbb5 : call qword ptr [rax - 0x13ad3d17]
0x00000200005ad3cb : call qword ptr [rax - 0x143d0617]
0x00000200005a05d5 : call qword ptr [rax - 0x16183d17]
0x0000020000582f8f : call qword ptr [rax - 0x16ab3d17]
0x000002000059aa78 : call qword ptr [rax - 0x16f82417]
0x000002000057fb98 : call qword ptr [rax - 0x173d0317]
0x00000200005743ac : call qword ptr [rax - 0x18a83d17]
0x0000020000573834 : call qword ptr [rax - 0x18b63d17]
0x000002000056d5bd : call qword ptr [rax - 0x1900f817]
0x0000020000564318 : call qword ptr [rax - 0x19913d17]
0x00000200005611e3 : call qword ptr [rax - 0x1a383d17]
0x000002000055cde7 : call qword ptr [rax - 0x1a973d17]
0x0000020000778396 : call qword ptr [rax - 0x23d6d17]
0x000002000077837f : call qword ptr [rax - 0x23d8c17]
0x00000200007783ea : call qword ptr [rax - 0x23d9b17]
0x00000200007757f5 : call qword ptr [rax - 0x2b6a917]
0x00000200006dba33 : call qword ptr [rax - 0x2e3d17]
0x000002000017310f : call qword ptr [rax - 0x5721a17]
0x00000200003a85e1 : call qword ptr [rax - 0x5eda17]
0x00000200001700c1 : call qword ptr [rax - 0x5f05b17]
0x00000200001a4b2a : call qword ptr [rax - 0x7233d17]
0x000002000067f292 : call qword ptr [rax - 0x7cb73c75]
0x00000200005966cd : call qword ptr [rax - 0x83da817]
0x00000200005966bd : call qword ptr [rax - 0x83dcd17]
0x00000200005d8c84 : call qword ptr [rax - 0x9633d17]
0x00000200005d856a : call qword ptr [rax - 0x9743d17]
0x00000200005d7267 : call qword ptr [rax - 0x9863d17]
0x00000200005d0bd8 : call qword ptr [rax - 0xa393d17]
0x00000200005cdf28 : call qword ptr [rax - 0xac33d17]
0x00000200005cd011 : call qword ptr [rax - 0xaef3d17]
0x000002000019acc4 : call qword ptr [rax - 0xb3d0617]
0x00000200003a7b4e : call qword ptr [rax - 0xc87717]
0x00000200001882ed : call qword ptr [rax - 0xed23d17]
0x0000020000186427 : call qword ptr [rax - 0xf194f17]
0x000002000018044a : call qword ptr [rax - 0xffb3d17]
0x00000200000a4113 : call qword ptr [rax]
0x000002000076dc07 : call qword ptr [rbx + rax*8]
0x0000020000011b4d : call qword ptr [rbx]
0x000002000005893b : call qword ptr [rcx]
0x0000020000526629 : call qword ptr [rdi + 0x100]
0x00000200000e42ed : call qword ptr [rdi]
0x000002000064ba07 : call qword ptr [rdx + 0x18]
0x000002000001f27b : call qword ptr [rdx]
0x00000200001b57d2 : call qword ptr [rip + 0x14d5b8]
0x00000200006cd118 : call qword ptr [rip + 0x3c20a]
0x0000020000147ed9 : call qword ptr [rip + 0xec251]
0x00000200006a8c95 : call qword ptr [rip - 0x3d94f3]
0x00000200006a8db6 : call qword ptr [rip - 0x3d9624]
0x00000200006aa3d2 : call qword ptr [rip - 0x3dac50]
0x00000200006aa7c7 : call qword ptr [rip - 0x3db2bd]
0x00000200006aa81f : call qword ptr [rip - 0x3db30d]
0x000002000060f3fb : call qword ptr [rip - 0x3db391]
0x0000020000675247 : call qword ptr [rip - 0x7cef8c]
0x0000020000071c1e : call qword ptr [rsi]
0x000002000042a750 : call qword ptr fs:[rsi]
0x0000020000043802 : call r10
0x00000200000d20d1 : call r11
0x00000200001c41fe : call r12
0x0000020000073899 : call r14
0x000002000004053f : call r15
0x0000020000088b68 : call r8
0x0000020000024dbd : call r9
0x00000200000c64dc : call rax
0x00000200004d7b7e : call rbp
0x000002000001dbc8 : call rbx
0x0000020000024dbe : call rcx
0x0000020000040540 : call rdi
0x0000020000013d0d : call rdx
0x000002000004299c : call rsi
0x00000200001c41ff : call rsp
0x000002000003bc73 : cdq ; adc al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200004790d5 : cdq ; adc byte ptr [rip + 0x43750000], al ; ret
0x00000200001d76b4 : cdq ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001d75dc : cdq ; add byte ptr [rax], al ; add byte ptr [rbp + 0x58e8b54a], cl ; ret
0x000002000056c108 : cdq ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret
0x0000020000503265 : cdq ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x4bf
0x000002000011c743 : cdq ; cmp al, 3 ; add byte ptr [rcx - 0x75], cl ; ret 0x7c89
0x00000200005418d7 : cdq ; fcos ; ret
0x0000020000031b80 : cdq ; fsub dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret
0x00000200001f63bf : cdq ; idiv ecx ; add eax, r9d ; ret
0x000002000010de42 : cdq ; idiv rcx ; ret
0x0000020000621d05 : cdq ; int 0xff
0x00000200007465f5 : cdq ; jmp 0x1ffc2fe6602
0x00000200006734c3 : cdq ; jmp 0x1ffc3f33472
0x000002000011adce : cdq ; jns 0x2000011addf ; add byte ptr [rcx - 0x76], al ; push rsi ; and dh, dh ; ret 0xf10
0x00000200000818b9 : cdq ; lock add dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200004ad8f2 : cdq ; mov edx, 0x60e6e8ff ; ret 0x84ff
0x000002000022bd4b : cdq ; or byte ptr [rip + 0xb480000], al ; ret 0x8d4c
0x00000200001ef531 : cdq ; pop rsi ; add byte ptr [rax], al ; pop r14 ; ret
0x0000020000015793 : cdq ; ret
0x00000200006b61df : cdq ; ret 0
0x00000200003ff0fc : cdq ; ret 0x29e8
0x00000200006d9f91 : cdq ; ret 0x40ff
0x00000200006da01e : cdq ; ret 0x48ff
0x0000020000617423 : cdq ; ret 0xffaa
0x0000020000594143 : cdq ; ret 0xffba
0x00000200003cc57e : cdq ; rol byte ptr [rbx], 0 ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000074e2b2 : cdq ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x00000200004b8a65 : cdq ; sar bh, 0x8b ; ret
0x00000200003ebb48 : cdq ; sar bh, 0xc8 ; ret
0x000002000012284d : cdq ; sbb eax, 0xff477500 ; ret
0x0000020000513d1e : cdq ; sub eax, 0x8a440008 ; ret
0x0000020000115cf8 : cdqe ; or rax, r9 ; or rax, rcx ; ret
0x000002000050fa5b : cdqe ; ret 0x48ff
0x0000020000022b39 : clc ; adc byte ptr [rax - 0x75], cl ; ret 0xf49
0x000002000005b6bb : clc ; adc byte ptr [rax - 0x7f], cl ; ret 0x1000
0x0000020000134b52 : clc ; adc byte ptr [rip + 0x7fff], ah ; ret
0x000002000009b4ab : clc ; add al, 0 ; add byte ptr [rax + 0x3b], cl ; ret 0xe874
0x0000020000663e33 : clc ; add al, 0 ; add byte ptr [rbp - 0x75], al ; ret
0x000002000019a1b8 : clc ; add al, 0x74 ; or al, 0xff ; ret 0xfa83
0x0000020000565057 : clc ; add al, 0x7d ; or al, byte ptr [rcx - 0x3f] ; ret
0x00000200006c7c70 : clc ; add al, 0x7e ; mov eax, 1 ; ret
0x0000020000745529 : clc ; add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000587b07 : clc ; add al, byte ptr [rcx + 0xf] ; shr cl, 1 ; ret
0x0000020000179545 : clc ; add byte ptr [rax], al ; add al, ch ; ret 0xf370
0x000002000004598e : clc ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000200000d62fb : clc ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200006c2258 : clc ; add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000200000082b5 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; add al, 8 ; ret
0x0000020000407c74 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001d4b86 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x25
0x00000200003c3e8b : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7cb7c68c], al ; ret 0x4428
0x00000200006882fe : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000232264 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x00000200004424de : clc ; add byte ptr [rax], al ; add byte ptr [rbp + 0x33], al ; rol byte ptr [rcx - 0x75], cl ; ret
0x00000200006503ad : clc ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x43 ; add bh, bh ; ret 0x8b4c
0x00000200001420b5 : clc ; add byte ptr [rax], al ; add cl, ch ; ret 0xbd
0x000002000001f05f : clc ; add dh, byte ptr [rbp - 0x1f] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000684f6 : clc ; add dh, byte ptr [rbx + 1] ; ret
0x00000200000d3981 : clc ; add dh, byte ptr [rdx - 6] ; mov eax, 2 ; ret
0x0000020000085698 : clc ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x5c], al ; pop rbp ; ret
0x0000020000055b9a : clc ; add dword ptr [rbp + 1], esi ; ret
0x00000200005afeb3 : clc ; add dword ptr [rbp + 5], esi ; call 0x200001dd66b
0x0000020000668515 : clc ; add dword ptr [rbp - 0x19], esi ; add rsp, 0x28 ; ret
0x0000020000420dc8 : clc ; add dword ptr [rbp - 0x5a], esi ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000550cc : clc ; add dword ptr [rdi], ecx ; mov cs, word ptr [rdx + 0x2e] ; adc al, byte ptr [rax] ; ret
0x0000020000070658 : clc ; add dword ptr [rdi], ecx ; test byte ptr [rsi - 0x34], cl ; adc byte ptr [rax], al ; ret
0x00000200004ecd60 : clc ; add dword ptr [rsi + 4], esi ; xor ecx, ecx ; call rax
0x00000200003deb65 : clc ; add dword ptr [rsi + rax + 0x48], esi ; add esp, 0x20 ; pop rbx ; ret
0x00000200002267d3 : clc ; add eax, 0x2b440000 ; ret 0x96ff
0x00000200006c4f68 : clc ; add eax, 0x83480673 ; ret
0x00000200001c6255 : clc ; add eax, 0x8b4c087c ; ret 0xfbe8
0x000002000066deba : clc ; add eax, 0xb70fc477 ; ret 0xe883
0x000002000008029b : clc ; add eax, 0xc0330476 ; jmp 0x2000008026c
0x000002000066de16 : clc ; add eax, 0xe3c1cd77 ; add al, 0x83 ; ret
0x0000020000752ac7 : clc ; add eax, 0xf410a76 ; mov bh, 0xc0 ; ret
0x000002000022d9b8 : clc ; add eax, 2 ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022d9dc
0x000002000022dbfc : clc ; add eax, 2 ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022dc20
0x00000200003d1732 : clc ; add eax, dword ptr [rax] ; add byte ptr [rcx - 1], al ; ret
0x000002000040facd : clc ; add eax, dword ptr [rax] ; add rsp, 0x68 ; ret
0x0000020000649819 : clc ; add eax, dword ptr [rbx] ; ret 0x3b41
0x00000200002303cd : clc ; add eax, ebx ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x200002303ef
0x0000020000229ac3 : clc ; add eax, edi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000229ae5
0x000002000013e001 : clc ; add eax, esi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000013e022
0x0000020000731bc2 : clc ; add eax, esi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000731be3
0x0000020000735805 : clc ; add eax, esi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000735826
0x0000020000221b09 : clc ; add eax, r11d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000221b2d
0x0000020000229847 : clc ; add eax, r12d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022986b
0x00000200007338e3 : clc ; add eax, r12d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000733906
0x000002000073e8f8 : clc ; add eax, r13d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073e91b
0x0000020000223f97 : clc ; add eax, r14d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000223fbb
0x0000020000731963 : clc ; add eax, r15d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000731986
0x000002000073eee9 : clc ; add eax, r15d ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073ef0c
0x000002000007ed7e : clc ; add ecx, dword ptr [rdi] ; test ebp, eax ; add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x00000200006c7ca6 : clc ; add esi, dword ptr [rbp - 0x36] ; xor eax, eax ; ret
0x000002000014013c : clc ; add rsp, 0x138 ; ret
0x000002000014667e : clc ; add rsp, 0x138 ; sti ; ret
0x00000200001242b7 : clc ; add rsp, 0x80 ; pop rbp ; ret
0x0000020000008254 : clc ; and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000ba2b0 : clc ; call 0x20000099f99
0x000002000049a2b3 : clc ; call 0x200000bc564
0x000002000049ad0d : clc ; call 0x200000bcc74
0x00000200005201c8 : clc ; call 0x20000140384
0x00000200005a4b41 : clc ; call 0x200001cb460
0x000002000060d3db : clc ; call 0x20000231014
0x000002000060d3da : clc ; call 0x20000231015
0x000002000068964b : clc ; call 0x200006858c3
0x00000200005a193c : clc ; call qword ptr [rax]
0x00000200005010d1 : clc ; call r15
0x0000020000468971 : clc ; call rsi
0x00000200000b6ee6 : clc ; cmc ; dec dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x00000200003cef6c : clc ; cmp eax, 0xb70f3174 ; add dword ptr [rax - 1], ecx ; ret 0x8348
0x0000020000434f18 : clc ; cmp eax, 0xb9481477 ; ret
0x00000200000e9a3e : clc ; cmp edx, eax ; jl 0x200000e9a4d ; mov al, 1 ; ret
0x00000200003f7c39 : clc ; dec dword ptr [rax + 0x3b] ; ret 0x870f
0x0000020000168340 : clc ; dec dword ptr [rax - 0x39] ; ret 0xfe00
0x000002000019d821 : clc ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000110980 : clc ; dec dword ptr [rax - 0x75] ; ret
0x00000200001a4aaa : clc ; dec dword ptr [rax - 0x77] ; adc eax, 0x18c10d ; ret
0x000002000010afc8 : clc ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000083deb : clc ; dec dword ptr [rax - 1] ; ret
0x000002000019d7fa : clc ; dec dword ptr [rax - 9] ; ret
0x000002000019d1e4 : clc ; dec dword ptr [rbp + rcx*4 + 5] ; ret
0x00000200001c48dc : clc ; dec dword ptr [rbx + 0x1ba92805] ; add byte ptr [rbx], bh ; ret
0x000002000021cee4 : clc ; dec dword ptr [rcx - 0x77] ; adc byte ptr [r9 - 0x75], al ; ret 0x8949
0x0000020000046955 : clc ; dec dword ptr [rdi] ; ret
0x000002000048a688 : clc ; dec dword ptr [rdi] ; test ah, bh ; ret 0x12
0x00000200000dc02d : clc ; dec dword ptr [rdi] ; test dh, ch ; ret 0xb
0x00000200001bab68 : clc ; dec dword ptr [rdx - 0x3b7cb73d] ; push rax ; pop rbx ; ret
0x000002000013575c : clc ; dec rax ; ret
0x0000020000146965 : clc ; dec rdx ; jne 0x20000146919 ; sfence ; ret
0x00000200006429bf : clc ; fcos ; add rsp, 0x68 ; ret
0x00000200001bc984 : clc ; idiv edi ; add rsp, 0x58 ; ret
0x000002000019fff9 : clc ; inc dword ptr [rax + 0x7500817d] ; ret 0xb8eb
0x000002000076e829 : clc ; inc dword ptr [rax] ; ret
0x00000200001c652a : clc ; inc dword ptr [rbp - 0x76] ; xchg eax, edi ; ret
0x000002000040f65b : clc ; inc dword ptr [rcx + 3] ; ret
0x00000200001a1243 : clc ; inc dword ptr [rcx - 0x75] ; ret
0x000002000019d666 : clc ; inc dword ptr [rcx - 0x76] ; or cl, byte ptr [rcx - 1] ; ret 0x8b41
0x00000200003a4ee3 : clc ; inc dword ptr [rcx] ; ret
0x000002000001720e : clc ; jmp 0x2000001741b
0x000002000007e500 : clc ; jmp 0x2000007e46d
0x00000200001858c4 : clc ; jmp 0x20000091b4d
0x000002000018be30 : clc ; jmp 0x200000a7cd8
0x000002000018c334 : clc ; jmp 0x200000a8546
0x000002000019ac76 : clc ; jmp 0x200000e6f49
0x000002000016af76 : clc ; jmp 0x2000016af82
0x000002000016b572 : clc ; jmp 0x2000016b57e
0x000002000016b642 : clc ; jmp 0x2000016b64e
0x000002000016b73c : clc ; jmp 0x2000016b748
0x0000020000174bfb : clc ; jmp 0x20000174c07
0x0000020000174d19 : clc ; jmp 0x20000174d25
0x00000200001fd3ba : clc ; jmp 0x200001fd3c6
0x00000200001fd4d6 : clc ; jmp 0x200001fd4e2
0x000002000020314a : clc ; jmp 0x2000020315e
0x0000020000453f78 : clc ; jmp 0x20000453ed1
0x0000020000491931 : clc ; jmp 0x200004918f8
0x00000200004af3e9 : clc ; jmp 0x200004aef8b
0x000002000019f7fa : clc ; jmp qword ptr [rbx]
0x00000200001a34f8 : clc ; jmp qword ptr [rcx]
0x000002000014ada9 : clc ; jmp rsi
0x00000200001468f4 : clc ; jne 0x200001468d3 ; ret
0x00000200001468f3 : clc ; jne 0x200001468d4 ; ret
0x000002000040446d : clc ; jne 0x20000404474 ; ret
0x0000020000005d96 : clc ; lcall ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000005351 : clc ; lcall ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x00000200007440ae : clc ; lcall ptr [rdi] ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x000002000040b48f : clc ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x00000200000d228a : clc ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x00000200000c1a61 : clc ; mov dword ptr [rdx + r8*4], r9d ; ret
0x000002000044cb0e : clc ; mov eax, 0xc000000d ; ret
0x00000200000d828a : clc ; mov eax, 1 ; ret
0x00000200000c1a40 : clc ; mov eax, dword ptr [rdx + r8*4] ; ret
0x000002000003856c : clc ; mov edx, eax ; test r8d, r8d ; jne 0x2000003857d ; ret
0x000002000018595e : clc ; mov qword ptr [rsp + 0x38], r15 ; jmp 0x20000091c2b
0x000002000018595d : clc ; mov qword ptr [rsp + 0x38], r15 ; jmp 0x20000091c2c
0x00000200006b85e2 : clc ; mov r8d, esi ; call rbx
0x000002000005937c : clc ; mov rax, r9 ; ret
0x000002000010aea4 : clc ; mov rcx, qword ptr [rcx + 8] ; mov rsi, rdx ; call qword ptr [rbx]
0x00000200000d20c9 : clc ; mov rcx, r10 ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x00000200005021be : clc ; mov rcx, rdx ; call 0x200000ee3ee
0x00000200006bf2c1 : clc ; mov rdx, r15 ; mov rcx, qword ptr [rsi + 8] ; call rax
0x0000020000443bc9 : clc ; mov rdx, rdi ; call qword ptr [rax]
0x000002000039fa1b : clc ; or al, 0xff ; ret
0x00000200000daf7c : clc ; or byte ptr [rbp + rcx + 0x41], dh ; mov eax, eax ; ret
0x000002000068768f : clc ; or dh, byte ptr [rdx - 0x12] ; ret
0x00000200006c2ae8 : clc ; or eax, 0x83480673 ; ret
0x00000200001ab772 : clc ; pop rcx ; je 0x200001ab785 ; or eax, 0xc0350000 ; ret
0x00000200003fa178 : clc ; pop rdx ; ret
0x00000200004dbbd8 : clc ; pop rsp ; jne 0x200004dbbd6 ; xor al, al ; ret
0x00000200001ef53a : clc ; push qword ptr [rbp + 3] ; xor eax, eax ; ret
0x000002000013060b : clc ; push qword ptr [rbp + rax + 0x48] ; add esp, 0x28 ; ret
0x0000020000082afb : clc ; push qword ptr [rbx + rcx + 0x4d] ; test eax, eax ; jne 0x20000082b0e ; ret
0x0000020000059949 : clc ; push qword ptr [rcx + rax - 0x3d] ; xor eax, eax ; ret
0x0000020000657493 : clc ; push qword ptr [rdi + rcx + 0x3b] ; ret 0xb75
0x000002000020b5e2 : clc ; push rax ; jmp 0x2000020b5ac
0x000002000005e574 : clc ; ret
0x000002000060b5e4 : clc ; ret 0x48ff
0x00000200005038e3 : clc ; ret 0x4cff
0x000002000055f1c4 : clc ; ret 0xfff3
0x000002000051a414 : clc ; ret 2
0x00000200004eb672 : clc ; ret 9
0x000002000018ac4c : clc ; sbb byte ptr [rdi], cl ; ret 0xcce9
0x00000200003c3674 : clc ; sbb byte ptr [rdi], cl ; test dword ptr [rcx - 0xa000000], ebp ; ret
0x00000200001469c2 : clc ; sfence ; ret
0x00000200001469be : clc ; sfence ; sfence ; ret
0x00000200001f3d04 : clc ; shl al, cl ; inc dword ptr [rcx - 0x7d] ; ret
0x000002000008e3fc : clc ; shl dword ptr [rsi], 1 ; add byte ptr [rcx - 1], al ; ret
0x000002000010eeb8 : clc ; shr eax, 3 ; add eax, 0x48 ; ret
0x000002000010f155 : clc ; shr eax, 3 ; ret
0x00000200005b76ad : clc ; sldt word ptr [rax] ; add al, 0x8b ; ret 0x1ba
0x00000200001f0a86 : clc ; std ; cmova eax, ecx ; ret
0x00000200004c6344 : clc ; sti ; loop 0x200004c634e ; mov rax, r8 ; ret
0x000002000003db58 : clc ; test dword ptr [rdx], edx ; add byte ptr [rbp + 0x3b], al ; ret
0x0000020000511255 : clc ; test rcx, rcx ; je 0x20000511269 ; call 0x20000140389
0x0000020000511e24 : clc ; test rcx, rcx ; je 0x20000511e38 ; call 0x20000140389
0x0000020000525e84 : clc ; xchg eax, edx ; ret 0x4dff
0x000002000039e3d4 : clc ; xlatb ; cmc ; inc dword ptr [rcx - 0x80] ; call qword ptr [rcx]
0x000002000002ccd2 : clc ; xor al, al ; ret
0x0000020000668a18 : clc ; xor byte ptr [rdi], cl ; test dword ptr [rbp - 0x9ffffff], eax ; ret 0x7403
0x00000200001cb99f : clc ; xor dh, byte ptr [rdx - 0x31] ; xor eax, eax ; ret
0x00000200001ce5f9 : cld ; adc al, byte ptr [rax] ; jmp 0x200001ce621
0x000002000049addb : cld ; adc dword ptr [rax], eax ; mov rcx, rbp ; call rax
0x00000200000ab4d3 : cld ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000643c50 : cld ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200004922f0 : cld ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x00000200006b61d7 : cld ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200006c2485
0x000002000006cbc1 : cld ; add byte ptr [rax], al ; add dh, bh ; ret 0x8b49
0x0000020000020be4 : cld ; add dword ptr [rax], eax ; add rcx, r15 ; jmp rcx
0x000002000043fcab : cld ; add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200004befda : cld ; add eax, edx ; ret
0x000002000019d80f : cld ; add rbx, 8 ; jmp 0x2000019d853
0x000002000048e29f : cld ; add rsp, 0x28 ; ret
0x000002000014f5fd : cld ; and al, byte ptr [rax] ; ret
0x00000200004998d8 : cld ; call 0x200000c23c4
0x00000200004ce87c : cld ; call rsi
0x00000200006067c8 : cld ; cli ; ret 0x48ff
0x000002000012e4a3 : cld ; dec dword ptr [rax - 0x75] ; ret
0x0000020000073ccd : cld ; dec dword ptr [rax - 0x77] ; cmp r11b, bpl ; ret 0xc032
0x00000200000dc029 : cld ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rdi] ; test dh, ch ; ret 0xb
0x000002000003ff48 : cld ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001180f5 : cld ; dec dword ptr [rbx + 0x1e388705] ; add byte ptr [rbx], al ; ret
0x000002000012ccb5 : cld ; dec dword ptr [rbx + 0x26c86] ; add bh, bh ; ret
0x0000020000405612 : cld ; dec dword ptr [rcx + 0x23502444] ; ret
0x0000020000588b53 : cld ; dec dword ptr [rdi] ; ret
0x00000200001c34d9 : cld ; idiv bh ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000535676 : cld ; inc dword ptr [rax] ; add byte ptr [rsi + 3], ah ; ret 0x8966
0x000002000045acb8 : cld ; inc dword ptr [rbp + 0x66850fc0] ; ret 0x14
0x0000020000070513 : cld ; jmp 0x20000070494
0x000002000003743f : cld ; jne 0x2000003744c ; mov qword ptr [r9], r8 ; ret
0x000002000011fb2a : cld ; jne 0x2000011fb3b ; mov eax, 1 ; ret
0x000002000011fb29 : cld ; jne 0x2000011fb3c ; mov eax, 1 ; ret
0x0000020000739817 : cld ; jne 0x2000073980a ; mov rax, rdx ; jmp 0x20000739826
0x000002000016767e : cld ; mov ch, 0xed ; dec dword ptr [rax - 0x75] ; ret 0x48f0
0x0000020000763a90 : cld ; mov dh, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x000002000074b79b : cld ; mov edx, 0x48c033ff ; add esp, 0x48 ; ret
0x0000020000190413 : cld ; mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 0x10] ; ret
0x00000200000bc294 : cld ; mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax] ; ret
0x000002000062c2d1 : cld ; mov rax, rcx ; add rsp, 0x28 ; ret
0x000002000049777b : cld ; mov rcx, rbx ; call 0x200000c2547
0x00000200003fe33b : cld ; neg eax ; sbb rdx, rdx ; call 0x20000022129
0x0000020000595291 : cld ; nop ; idiv edi ; xor ecx, ecx ; call 0x200003b14a8
0x00000200000436f9 : cld ; or al, byte ptr [rax + rax] ; or dword ptr [rcx - 0x75], ecx ; ret 0x8b49
0x00000200005871d2 : cld ; or eax, 0x8366fff6 ; ret 0x4002
0x0000020000143c67 : cld ; or eax, r8d ; wrmsr ; ret
0x000002000051aa80 : cld ; pop rax ; ret 0xebff
0x00000200005ed680 : cld ; pop rdx ; mov ah, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x000002000002d539 : cld ; ret
0x0000020000016e80 : cld ; ret 0x11
0x00000200001bbba8 : cld ; ret 0x13
0x0000020000441869 : cld ; ret 0x48ff
0x00000200006ad7fc : cld ; ret 0x4c1f
0x000002000049217d : cld ; ret 0x8bff
0x000002000009a318 : cld ; ret 0xb
0x00000200004921b0 : cld ; ret 0xb8ff
0x00000200004921c7 : cld ; ret 0xe9ff
0x0000020000595830 : cld ; ret 0xffb2
0x000002000057fb9b : cld ; ret 0xffe8
0x000002000074f708 : cld ; ret 0xfff
0x000002000041febe : cld ; retf 0x48ff ; mov ecx, ebx ; call 0x2000004505d
0x000002000060d59c : cld ; stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200005928e4 : cld ; stosd dword ptr [rdi], eax ; ret 0x85ff
0x00000200000d4567 : cld ; sub eax, 0xf7410000 ; ret 0x7ffe
0x0000020000143daf : cld ; wrmsr ; ret
0x00000200001e2312 : cli ; adc al, 0 ; add byte ptr [rcx + 0x3a], al ; ret
0x0000020000008f4b : cli ; adc al, 0 ; test r8d, r8d ; setne al ; ret
0x00000200000396d8 : cli ; adc al, 0x7c ; in al, -1 ; ret
0x00000200001cb948 : cli ; adc al, byte ptr [rax] ; ret 0
0x0000020000081c30 : cli ; adc byte ptr [rbp - 0x75], al ; jmp 0x20048caa788
0x00000200001fc684 : cli ; adc byte ptr [rbx + 6], dh ; mov eax, 0xc0000023 ; ret
0x0000020000181d5e : cli ; adc byte ptr [rbx], dh ; leave ; call 0x2000009e036
0x000002000062e16e : cli ; adc byte ptr [rdx - 0xf], dh ; xor al, al ; ret
0x00000200006198c4 : cli ; adc byte ptr [rsi + 6], dh ; mov eax, 0xc000000d ; ret
0x00000200000492ff : cli ; adc cl, byte ptr [rax - 0x75] ; ret 0xc148
0x000002000065cc42 : cli ; adc dword ptr [rbx + 8], esi ; add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x2000065cc46
0x000002000007fc73 : cli ; adc dword ptr [rsp + rbx - 1], esi ; ret 0x5489
0x0000020000408b66 : cli ; add al, 0 ; or dword ptr [rax], eax ; je 0x20000408b79 ; xor al, al ; ret
0x00000200006344f6 : cli ; add al, 0x75 ; sub byte ptr [rax + 0xc], bh ; ret
0x00000200001f647d : cli ; add al, 0x8b ; ret 0xe8c1
0x00000200000acfc3 : cli ; add al, byte ptr [rax] ; add bh, bh ; ret 0x8b48
0x00000200004eaff2 : cli ; add bh, byte ptr [rdx + rax - 1] ; ret 0xca2b
0x000002000008e36f : cli ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret
0x00000200006c7a05 : cli ; add byte ptr [rcx], al ; add byte ptr [rax], al ; jb 0x200006c7a18 ; xor eax, eax ; ret
0x0000020000409656 : cli ; add byte ptr cs:[rbx + 0x324e8d8], cl ; ret
0x00000200004f10ab : cli ; add cl, byte ptr [rax + 0x3b] ; ret
0x000002000021eaf0 : cli ; add cl, byte ptr [rax - 0x75] ; ret 0xc148
0x00000200001fa2e4 : cli ; add cl, byte ptr [rcx - 0x75] ; ret 0xc148
0x0000020000475b98 : cli ; add dh, byte ptr [rdx - 0x10] ; xor eax, eax ; ret
0x00000200001f8a0d : cli ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; add byte ptr [rcx + 0x33], al ; ret
0x000002000064049d : cli ; add dword ptr [rbp + rax + 0x48], esi ; lea eax, dword ptr [rcx + 0x20] ; ret
0x00000200006404b5 : cli ; add dword ptr [rbp + rax + 0x48], esi ; lea eax, dword ptr [rcx + 0x24] ; ret
0x0000020000476411 : cli ; add dword ptr [rbp + rax + 0x48], esi ; lea eax, dword ptr [rcx + 0x4c] ; ret
0x000002000001401a : cli ; add dword ptr [rdi + rbx + 0x49], esi ; mov eax, eax ; ret
0x000002000003dc1c : cli ; add dword ptr [rsp + rdx*4 - 0x75], esi ; ret
0x0000020000587b14 : cli ; add eax, 0x2b9 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc2ff
0x00000200001cc0dd : cli ; add eax, dword ptr [rbp + 0x2b] ; ret 0x3b4c
0x00000200001d6fb3 : cli ; add ecx, dword ptr [rax + 0x3b] ; ret 0x840f
0x000002000000c01f : cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000762845 : cli ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x00000200000daa8e : cli ; add ecx, dword ptr [rax - 1] ; ret 0x3b48
0x0000020000006b96 : cli ; add ecx, dword ptr [rax - 1] ; ret 0xc148
0x0000020000062fbd : cli ; add ecx, dword ptr [rbp + 0x2b] ; ret
0x0000020000031436 : cli ; add ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200004c0e23 : cli ; add ecx, dword ptr [rcx - 0x77] ; sbb byte ptr [rcx - 0x75], cl ; ret 0x8941
0x0000020000063b0b : cli ; add ecx, dword ptr [rcx - 1] ; ret 0xc149
0x0000020000773605 : cli ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000144b43 : cli ; add rsp, 0x28 ; ret
0x00000200001536da : cli ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000146f55 : cli ; add rsp, 8 ; ret
0x000002000014f79c : cli ; and al, byte ptr [rax] ; ret
0x0000020000040775 : cli ; and dword ptr [rax + 0x586c], 0 ; sti ; ret
0x00000200004d39d9 : cli ; call rsi
0x0000020000453a12 : cli ; cmp byte ptr [rdi], cl ; test dword ptr [rbp - 0x9ffffff], ebx ; ret
0x000002000017226b : cli ; dec dword ptr [rax + 0x23] ; ret 0x8948
0x0000020000170014 : cli ; dec dword ptr [rax + 0x3b] ; ret 0xf49
0x0000020000172252 : cli ; dec dword ptr [rax - 0x39] ; ret 0xdfff
0x0000020000170062 : cli ; dec dword ptr [rax - 0x39] ; ret 0xfffe
0x000002000011bacd : cli ; dec dword ptr [rax - 0x75] ; ret
0x00000200001733b0 : cli ; dec dword ptr [rax - 0x7d] ; ret 0xf4e
0x0000020000758fa7 : cli ; dec dword ptr [rax - 0x7f] ; ret
0x00000200000fe9bc : cli ; dec dword ptr [rdi] ; test ch, dl ; ret
0x00000200004eb4d3 : cli ; fdivp st(7) ; test rax, rax ; je 0x200004eb4e5 ; call rax
0x000002000019b6c0 : cli ; hlt ; dec dword ptr [rbx + 0x23413042] ; ret
0x0000020000173f7f : cli ; inc dword ptr [rcx - 0xa] ; ret 0x7402
0x000002000016fe33 : cli ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000084614 : cli ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200000c6574 : cli ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x000002000018ef93 : cli ; jg 0x2000018f010 ; or al, byte ptr [rcx - 1] ; ret 0x834a
0x0000020000619302 : cli ; jl 0x200006192aa ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0x1440
0x00000200006b3ac2 : cli ; lodsb al, byte ptr [rsi] ; ret 0xc1ff
0x0000020000557f53 : cli ; mov dh, 0xff ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x00000200006bb1fc : cli ; mov dword ptr [r8], r9d ; ret
0x00000200000d3984 : cli ; mov eax, 2 ; ret
0x0000020000042503 : cli ; mov ebx, ecx ; call 0x20000042681
0x00000200004ccfd7 : cli ; mov rbx, rcx ; call 0x200000ef503
0x00000200003de2f8 : cli ; mov rbx, rcx ; mov rdx, qword ptr [rdx + 8] ; call qword ptr [rdi]
0x00000200004c2718 : cli ; mov rdi, rcx ; call 0x200000e88d3
0x00000200001b37c0 : cli ; or al, 0x8b ; ret 0xe8c1
0x0000020000532095 : cli ; or dword ptr [rdx - 0x19], esi ; mov eax, 0xc0000001 ; ret
0x00000200003a3bb6 : cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000021f12e : cli ; out -1, eax ; add rsp, 0x28 ; ret
0x00000200005134ae : cli ; pop rbp ; ret 0x48ff
0x000002000050a9e2 : cli ; pop rcx ; ret
0x0000020000116521 : cli ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000011658e ; ret
0x0000020000096b53 : cli ; push qword ptr [rcx + rbx - 0x75] ; ret 0x41f0
0x000002000009a29a : cli ; push qword ptr [rcx + rsi*8 - 0x75] ; ret 0x41f0
0x00000200003e5019 : cli ; push rax ; je 0x200003e5028 ; ret
0x000002000060ba12 : cli ; push rbp ; ret 0x48ff
0x00000200000ea2aa : cli ; push rcx ; sub dword ptr [rax], eax ; call rax
0x00000200006a294e : cli ; push rsi ; outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x00000200000215d2 : cli ; ret
0x0000020000113e0a : cli ; ret 0x1b
0x00000200006067ad : cli ; ret 0x48ff
0x0000020000504c84 : cli ; ret 0x65ff
0x00000200006067df : cli ; ret 0x89ff
0x0000020000510970 : cli ; ret 0x8bff
0x0000020000492381 : cli ; ret 0x90ff
0x0000020000601548 : cli ; ret 0xccff
0x00000200007664e9 : cli ; ret 0xffb9
0x000002000077910a : cli ; ret 0xfff9
0x00000200005cb15a : cli ; ret 6
0x00000200005d345c : cli ; sbb al, 0x8b ; ret 0xe8c1
0x000002000013cecb : cli ; sbb dword ptr [rax - 0x75], ecx ; ret 0xc148
0x00000200006c06b1 : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x200006c06ce
0x00000200006c077e : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x200006c079b
0x00000200006c0832 : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x200006c084f
0x00000200006c08d5 : cli ; sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x200006c08f2
0x00000200006a8062 : cli ; scasb al, byte ptr [rdi] ; ret 0x48ff
0x000002000013800e : cli ; xchg eax, edi ; sbb dword ptr [rax], eax ; and dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000177fbc : cli ; xlatb ; in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000681bec : cmc ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x00000200003d522e : cmc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000134847 : cmc ; add rsi, r12 ; mov rdx, rsi ; call r14
0x00000200000f5136 : cmc ; and al, byte ptr [r8] ; add byte ptr [rbp + 1], dh ; ret
0x0000020000186426 : cmc ; call qword ptr [rax - 0xf194f17]
0x00000200005d2055 : cmc ; call rcx
0x0000020000691441 : cmc ; call rsi
0x00000200003e5a0f : cmc ; cdq ; ret
0x0000020000423062 : cmc ; dec dword ptr [rax + 0x3b] ; ret 0x6777
0x00000200005e7480 : cmc ; dec dword ptr [rax - 0x73] ; and al, 0x48 ; call 0x200000c36c9
0x00000200000b6ee7 : cmc ; dec dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x0000020000113f55 : cmc ; dec dword ptr [rax - 0x75] ; ret
0x0000020000153c14 : cmc ; dec dword ptr [rax - 0x77] ; jmp 0x20000153be5
0x00000200001761c3 : cmc ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xed72
0x00000200001f2a9c : cmc ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x6c], 0xff ; ret
0x0000020000585e28 : cmc ; dec dword ptr [rax - 0x7d] ; ret 0x4838
0x0000020000105f24 : cmc ; dec dword ptr [rax - 0x7f] ; ret
0x00000200001ce16c : cmc ; dec dword ptr [rax - 1] ; ret
0x000002000019cba1 : cmc ; dec dword ptr [rbp - 0x75] ; ret 0x75e9
0x0000020000109415 : cmc ; dec dword ptr [rbx + 0x1f222f05] ; add bh, bh ; ret
0x00000200005862a5 : cmc ; dec dword ptr [rbx + 0x2b582444] ; ret 0x8941
0x000002000018593a : cmc ; dec dword ptr [rbx + rcx*4 - 0x18] ; jmp 0x20000091bfe
0x00000200005cde0d : cmc ; dec dword ptr [rcx - 0x7d] ; ret
0x00000200005d14a9 : cmc ; dec dword ptr [rdi] ; mov edx, 0x5890be8 ; ret
0x00000200005e6c83 : cmc ; inc dword ptr [rbx] ; ret
0x000002000039e3d6 : cmc ; inc dword ptr [rcx - 0x80] ; call qword ptr [rcx]
0x00000200004c4e27 : cmc ; insb byte ptr [rdi], dx ; ret 0x8bff
0x000002000004fcb1 : cmc ; jmp 0x2000004fc78
0x00000200000fe2dd : cmc ; jmp 0x200000fe2a5
0x0000020000529e88 : cmc ; mov ebx, 0x48c033ff ; add esp, 0x28 ; ret
0x000002000059dd8e : cmc ; mov esp, 0x8b45ffe9 ; ret 0x1ba
0x000002000001e69a : cmc ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x0000020000114c9e : cmc ; mov rcx, r8 ; jmp rdx
0x00000200001b352f : cmc ; or cl, byte ptr [rax] ; add byte ptr [rax - 0x7c], al ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0x0000020000158ec3 : cmc ; or eax, 0xd8bffeb ; ret
0x000002000020a1d2 : cmc ; out -1, eax ; add rsp, 0x38 ; ret
0x000002000021347f : cmc ; out dx, eax ; or eax, dword ptr [rax] ; call rax
0x0000020000579895 : cmc ; pop rax ; call 0x1ffc21a24a0
0x00000200001c0c64 : cmc ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x0000020000012ebf : cmc ; ret
0x00000200001159e7 : cmc ; ret 0x11
0x0000020000427d15 : cmc ; ret 0x48ff
0x00000200004241d5 : cmc ; ret 0x49ff
0x00000200001bf307 : cmc ; ret 0x4e
0x000002000076a5ec : cmc ; ret 0x83ff
0x00000200000dc031 : cmc ; ret 0xb
0x000002000019acb2 : cmc ; ret 0xfff4
0x0000020000667096 : cmc ; sbb byte ptr [rax - 0x75], cl ; ret
0x000002000058e7a6 : cmc ; sbb edx, esp ; call qword ptr [rdi]
0x000002000016a6ea : cmc ; sub eax, 0x8b44fff9 ; ret 0xc933
0x000002000011677a : cmc ; xor eax, eax ; ret
0x0000020000157594 : cmova eax, eax ; dec eax ; jmp 0x20000003852
0x00000200001ab7b5 : cmova eax, ecx ; ret
0x00000200001291f6 : cmova eax, edx ; mov dword ptr [rcx + 0x164], eax ; ret
0x000002000007380c : cmova eax, edx ; ret
0x0000020000157593 : cmova eax, r8d ; dec eax ; jmp 0x20000003853
0x00000200001a99ed : cmova ecx, edx ; mov rax, r9 ; ret
0x00000200000361a8 : cmova edx, eax ; mov eax, edx ; ret
0x00000200001a99ec : cmova r9, r10 ; mov rax, r9 ; ret
0x00000200000361a7 : cmova rdx, rax ; mov eax, edx ; ret
0x00000200001f0587 : cmovae ecx, eax ; mov r8b, cl ; mov al, r8b ; ret
0x00000200000f9815 : cmovb eax, ecx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004c63c7 : cmovb eax, edx ; mov dword ptr [r9 + 4], eax ; ret
0x000002000047cd7e : cmovb edx, eax ; mov eax, edx ; ret
0x00000200000414f7 : cmovb edx, ebx ; mov qword ptr [rcx + 0x20], r10 ; ret
0x00000200003e464a : cmovb edx, ebx ; mov qword ptr [rsp + 0x50], rdx ; jmp 0x200003e461f
0x000002000047fe0a : cmovb esi, edi ; jmp 0x2000047fdd6
0x00000200000414f6 : cmovb r10, r11 ; mov qword ptr [rcx + 0x20], r10 ; ret
0x000002000047fe09 : cmovb r14, rdi ; jmp 0x2000047fdd7
0x00000200000ecddd : cmovbe eax, ecx ; ret
0x00000200001814c8 : cmovbe eax, edx ; mov eax, r8d ; ret
0x00000200001814c7 : cmovbe r8d, edx ; mov eax, r8d ; ret
0x000002000061671d : cmove eax, dword ptr [rdx + rbx*8 - 0x7bbbed8c] ; ret 0xd75
0x00000200000322ef : cmove eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000517775 : cmove eax, eax ; mov eax, r8d ; ret
0x0000020000036cba : cmove eax, eax ; ret
0x00000200000bc79a : cmove eax, ecx ; add rsp, 0x28 ; ret
0x000002000069a505 : cmove eax, ecx ; add rsp, 0x38 ; ret
0x00000200004f4459 : cmove eax, ecx ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000033dd2 : cmove eax, ecx ; mov dword ptr [rdx], eax ; lea eax, dword ptr [rcx - 0x3f] ; ret
0x000002000013544a : cmove eax, ecx ; mov rax, r8 ; ret
0x0000020000400dcc : cmove eax, ecx ; test eax, eax ; cmove eax, r8d ; ret
0x00000200003be3a9 : cmove eax, ecx ; test r8, r8 ; jne 0x200003be3a2 ; ret
0x0000020000773f81 : cmove eax, edx ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000753536 : cmove eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001aafb6 : cmove eax, edx ; and dword ptr [rip + 0x1d4279], eax ; ret
0x000002000002d546 : cmove eax, edx ; ret
0x000002000011ad8d : cmove eax, esp ; mov dword ptr [rsp + 0x34], eax ; call 0x200000b7059
0x0000020000036cb9 : cmove eax, r8d ; ret
0x0000020000065a34 : cmove ebp, dword ptr [rdx] ; ret 0xc041
0x000002000057702e : cmove ebx, ecx ; mov eax, ebx ; jmp 0x200003f3299
0x00000200004ccfbe : cmove ebx, edi ; call 0x200000ef4b2
0x00000200001bf8f1 : cmove ebx, esi ; call 0x20000027387
0x00000200001bf8f0 : cmove ebx, r14d ; call 0x20000027388
0x00000200004ccfbd : cmove ebx, r15d ; call 0x200000ef4b3
0x00000200001c6af6 : cmove ecx, dword ptr [rdi] ; and al, dl ; jmp 0x200001c6b15
0x00000200001e72d1 : cmove ecx, edx ; mov al, cl ; add rsp, 0x48 ; ret
0x00000200001e862c : cmove ecx, edx ; mov dword ptr [r9], r8d ; mov al, cl ; ret
0x00000200000dbbeb : cmove ecx, edx ; mov qword ptr [r9 + 0x18], rcx ; ret
0x00000200001e862b : cmove ecx, r10d ; mov dword ptr [r9], r8d ; mov al, cl ; ret
0x0000020000530c9e : cmove edx, eax ; mov eax, edx ; ret
0x00000200000e2cb1 : cmove edx, eax ; mov eax, r10d ; jmp 0x200000e2c99
0x000002000039cf69 : cmove edx, ebx ; mov al, r10b ; ret
0x00000200006c7a27 : cmove edx, ecx ; mov dword ptr [r8], edx ; ret
0x00000200000234bf : cmove edx, ecx ; mov rax, rdx ; ret
0x00000200006c7a26 : cmove edx, r9d ; mov dword ptr [r8], edx ; ret
0x00000200000e2cb0 : cmove r10d, eax ; mov eax, r10d ; jmp 0x200000e2c9a
0x000002000039cf68 : cmove r10d, r11d ; mov al, r10b ; ret
0x0000020000135449 : cmove r8, rcx ; mov rax, r8 ; ret
0x0000020000517774 : cmove r8d, eax ; mov eax, r8d ; ret
0x00000200000322ee : cmove rax, r8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002d545 : cmove rax, rdx ; ret
0x00000200000dbbea : cmove rcx, rdx ; mov qword ptr [r9 + 0x18], rcx ; ret
0x00000200000234be : cmove rdx, rcx ; mov rax, rdx ; ret
0x000002000064982c : cmovg eax, eax ; ret
0x00000200005256ae : cmovg eax, ecx ; add rsp, 0x28 ; ret
0x00000200001356f9 : cmovg eax, ecx ; ret
0x000002000004f6c6 : cmovg eax, edx ; jmp 0x2000004f6d0
0x000002000004f7f7 : cmovg eax, edx ; mov dl, al ; mov al, dl ; ret
0x000002000064982b : cmovg eax, r8d ; ret
0x000002000003ffea : cmovg ecx, eax ; mov byte ptr [r8], cl ; ret
0x000002000017eb3f : cmovge eax, dword ptr [rbp - 0x7374b640] ; ret 0x1660
0x0000020000545de5 : cmovge eax, dword ptr [rbx] ; ret 0x8b49
0x00000200000ad0bf : cmovge eax, dword ptr [rbx] ; ror byte ptr [rsi - 0x75], 0x4c ; ret
0x00000200000a5015 : cmovge ecx, dword ptr [rbx - 0x74b7f7b8] ; ret 0x2b48
0x0000020000431c9b : cmovl eax, dword ptr [rbx] ; ret 0x8d41
0x00000200004fd719 : cmovl ecx, dword ptr [rbp - 0x749fdba4] ; ret
0x000002000060235a : cmovl ecx, dword ptr [rbp - 0x74b3a7b3] ; ret
0x00000200000d86fe : cmovl ecx, dword ptr [rbx + 0x2348284b] ; ret 0xc148
0x000002000040781d : cmovl ecx, dword ptr [rbx - 0x2d74b63e] ; jmp r11
0x0000020000029b90 : cmovl ecx, dword ptr [rcx - 0x3e74b7fe] ; ret
0x00000200001c7c91 : cmovne eax, dword ptr [rip + 0x1b6548] ; ret
0x00000200003e5048 : cmovne eax, eax ; ret
0x000002000051f3c7 : cmovne eax, ecx ; add rsp, 0x28 ; ret
0x000002000013313b : cmovne eax, ecx ; mov dword ptr [r8 + 0x5c], eax ; ret
0x00000200001b9d7c : cmovne eax, ecx ; mov r8b, al ; mov al, r8b ; ret
0x00000200000328c4 : cmovne eax, ecx ; ret
0x0000020000207f1e : cmovne eax, edx ; jmp 0x20000207f61
0x00000200000a2f8c : cmovne eax, edx ; ret
0x00000200003e5047 : cmovne eax, r8d ; ret
0x00000200001d890a : cmovne ebp, ebx ; xor edx, edx ; call 0x20000064b27
0x00000200004cd330 : cmovne ebx, ecx ; mov rcx, rdi ; call 0x200000ef505
0x0000020000424f6e : cmovne ecx, dword ptr [rbx + 0x452b44c5] ; ret
0x000002000000652d : cmovne ecx, eax ; jmp 0x200000064f9
0x0000020000125465 : cmovne ecx, eax ; mov eax, ecx ; ret
0x0000020000214465 : cmovne ecx, ebx ; call rax
0x0000020000125464 : cmovne ecx, r8d ; mov eax, ecx ; ret
0x00000200005f2f33 : cmovne edx, eax ; mov al, dl ; ret
0x000002000005089d : cmovne edx, eax ; mov eax, edx ; ret
0x00000200005f2f32 : cmovne edx, r8d ; mov al, dl ; ret
0x000002000005089c : cmovne edx, r8d ; mov eax, edx ; ret
0x0000020000424f6d : cmovne r9, qword ptr [r11 + 0x452b44c5] ; ret
0x00000200001c7c90 : cmovne rax, qword ptr [rip + 0x1b6548] ; ret
0x0000020000207f1d : cmovne rax, rdx ; jmp 0x20000207f62
0x0000020000214464 : cmovne rcx, r11 ; call rax
0x000002000000652c : cmovne rcx, r8 ; jmp 0x200000064fa
0x0000020000069f44 : cmovno eax, dword ptr [rdx] ; ret 0xc202
0x00000200005ffb67 : cmovno ecx, dword ptr [rbx + 0x2170e8cf] ; ret
0x0000020000693474 : cmovno edi, edi ; ret
0x00000200000df70d : cmovno edi, edi ; ret 0x8349
0x000002000059f7ec : cmovno esi, esi ; ret 0x7401
0x000002000044439f : cmovns ecx, dword ptr [rbx + 0x34cc3c0] ; ret 0xebeb
0x00000200003f60f2 : cmovns ecx, dword ptr [rbx - 0x173eb800] ; or al, 0x2b ; ret
0x00000200006c5f8e : cmovns ecx, dword ptr [rbx - 0x3774b72a] ; call r15
0x0000020000037213 : cmovns ecx, dword ptr [rcx + 0x58b4806] ; ret 0x2cb9
0x000002000005ac4e : cmovns ecx, dword ptr [rcx - 0x3d74beff] ; ret
0x00000200001387a1 : cmovns edi, edi ; ret
0x00000200001f7e0a : cmovns edi, edi ; ret 0x8941
0x000002000004e75a : cmovns edi, edi ; ret 0x8949
0x000002000046415d : cmovs eax, dword ptr [rbx + 0x3b4902c0] ; ret 0xe972
0x00000200000f17ea : cmovs eax, dword ptr [rbx - 0x7cb6fb3e] ; ret
0x0000020000602471 : cmovs eax, dword ptr [rbx] ; ret 0x3d48
0x00000200006970cb : cmovs eax, ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001f86e8 : cmovs eax, ecx ; call 0x1ffc2a2cefb
0x00000200001f7ce6 : cmovs eax, ecx ; call 0x1ffc31ec5f9
0x00000200001f82a5 : cmovs eax, ecx ; jmp 0x1ffc2a2cab8
0x00000200006d2bcc : cmovs ecx, dword ptr [rbp + 0x3b480b04] ; ret
0x00000200003c9a64 : cmovs ecx, dword ptr [rbp - 0x74b3e7b0] ; ret
0x00000200003a07dd : cmovs ecx, dword ptr [rbp - 0x74bbd1ec] ; ret
0x0000020000127c72 : cmovs ecx, dword ptr [rbx - 0x74a7db94] ; ret
0x0000020000088d9a : cmovs ecx, dword ptr [rbx - 0x74b797ae] ; ret 0x2349
0x00000200006874fd : cmovs ecx, dword ptr [rbx - 0x74c7db8c] ; ret
0x00000200004e7c19 : cmovs ecx, dword ptr [rbx - 0x74c7db94] ; ret
0x000002000044b7a1 : cmovs ecx, dword ptr [rcx - 0x74b7f7bf] ; ret
0x00000200004c104e : cmovs edi, dword ptr [rbx] ; ret 0x870f
0x00000200005beef2 : cmovs edi, dword ptr [rbx] ; ret 0xa77
0x00000200005c4773 : cmovs edi, dword ptr [rbx] ; ret 0xb777
0x00000200001f99ed : cmovs edi, edi ; ret
0x00000200001989a7 : cmovs esp, dword ptr [rbx] ; ret 0xb49
0x0000020000107fea : cmovs esp, dword ptr [rbx] ; ret 0xba48
0x0000020000062812 : cmovs esp, dword ptr [rbx] ; ret 0xc148
0x000002000014f5fc : cmp ah, bh ; and al, byte ptr [rax] ; ret
0x000002000010edd2 : cmp ah, byte ptr [rdx] ; adc al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004495d3 : cmp ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000200004977c3 : cmp ah, dh ; push qword ptr [rbx] ; shr al, cl ; jae 0x20000497783 ; ret 0xf0ff
0x0000020000596358 : cmp al, 0 ; add byte ptr [rax], al ; ret
0x000002000012c634 : cmp al, 0 ; add rsp, 0x38 ; ret
0x0000020000027211 : cmp al, 0 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000039b67 : cmp al, 0 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000407a1c : cmp al, 0x10 ; ret
0x0000020000053800 : cmp al, 0x15 ; je 0x20000053811 ; lock inc dword ptr [rcx + 0x28] ; ret
0x0000020000602338 : cmp al, 0x1d ; ret
0x00000200000e8c4b : cmp al, 0x1f ; add byte ptr [rax - 0x77], cl ; push rcx ; or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x0000020000496f60 : cmp al, 0x1f ; ret 0x44ff
0x00000200006bc3f9 : cmp al, 0x23 ; add r15d, r14d ; mov edx, r15d ; call rdi
0x000002000010fcb1 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; ret
0x000002000049d672 : cmp al, 0x24 ; call 0x200000c078d
0x000002000002f53c : cmp al, 0x2c ; adc eax, dword ptr [rax] ; mov rax, rcx ; ret
0x00000200004255b6 : cmp al, 0x2d ; add byte ptr [rdi + rcx - 0x51], cl ; ret 0x8b41
0x00000200003d24f5 : cmp al, 0x31 ; cmp eax, 0xcd034900 ; jmp rcx
0x000002000052d85b : cmp al, 0x36 ; mov r8, rdi ; call 0x2000014f188
0x000002000044c6ac : cmp al, 0x40 ; ret 0x49ff
0x00000200000fcb1a : cmp al, 0x41 ; call rcx
0x00000200004d31e9 : cmp al, 0x41 ; movups xmmword ptr [rbp + 0x20], xmm1 ; call 0x2000014f4c8
0x00000200004d31e8 : cmp al, 0x41 ; movups xmmword ptr [rbp + 0x20], xmm1 ; call 0x2000014f4c9
0x000002000004eb52 : cmp al, 0x48 ; add esp, 0x28 ; ret
0x000002000007a83c : cmp al, 0x4a ; adc byte ptr [rax], al ; mov eax, r9d ; ret
0x00000200004a3d68 : cmp al, 0x5d ; int1 ; dec dword ptr [rcx - 0x75] ; iretd ; call 0x200004a0069
0x00000200005cacc0 : cmp al, 0x6b ; ret 0x84ff
0x00000200000d1c13 : cmp al, 0x75 ; add ecx, dword ptr [rcx + 0x1d39045a] ; std ; ret
0x000002000011f16e : cmp al, 0x7d ; sbb ecx, dword ptr [rax + 0x63] ; ret 0x348
0x00000200001142b6 : cmp al, 0x85 ; sar byte ptr [rcx + 5], 0x45 ; mov eax, edx ; jmp 0x2000011428c
0x00000200000029c2 : cmp al, 0x89 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007556e0 : cmp al, 0x89 ; ret 0x48ff
0x000002000005ce29 : cmp al, 0x8b ; ret
0x000002000041e23f : cmp al, 0x8b ; ret 0x8d48
0x00000200001a5420 : cmp al, 0x95 ; or al, byte ptr [rax] ; mov qword ptr [rcx], rax ; ret
0x0000020000210a80 : cmp al, 0x96 ; out -1, eax ; add rsp, 0x38 ; ret
0x000002000053cb74 : cmp al, 0x9d ; or dword ptr [rax], eax ; mov eax, 1 ; ret
0x00000200006d9c78 : cmp al, 0x9d ; ret 0x25ff
0x00000200006071d0 : cmp al, 0x9e ; ret 0x44ff
0x000002000011f956 : cmp al, 0xa6 ; and al, 0 ; ret
0x00000200005c17a4 : cmp al, 0xac ; ret
0x00000200006062d0 : cmp al, 0xad ; ret 0x8bff
0x0000020000515240 : cmp al, 0xb1 ; ret 0x85ff
0x000002000076e889 : cmp al, 0xb6 ; inc dword ptr [rcx] ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200004506d0 : cmp al, 0xb6 ; ret
0x00000200005047a0 : cmp al, 0xbc ; ret
0x00000200006b4a8e : cmp al, 0xc2 ; jmp qword ptr [rbx]
0x000002000021ecd8 : cmp al, 0xc3 ; mov rax, qword ptr [rcx] ; or rax, rdx ; jmp 0x2000021ecf5
0x000002000049b9af : cmp al, 0xc8 ; mov rcx, rdi ; call 0x200000c2848
0x0000020000085e40 : cmp al, 0xd3 ; or al, byte ptr [rax] ; add rsp, 0x58 ; ret
0x0000020000011b4b : cmp al, 0xe8 ; call qword ptr [rbx]
0x000002000016e736 : cmp al, 0xe9 ; out -0x2e, eax ; stc ; inc dword ptr [rbp - 0x75] ; ret 0x8b48
0x000002000068052b : cmp al, 0xed ; inc dword ptr [rbp + 0x480f48db] ; ret 0x5c89
0x00000200005248ae : cmp al, 0xf ; ja 0x20000524879 ; xor al, al ; ret
0x000002000067ee3f : cmp al, 0xf ; mov dr0, word ptr [rax - 0x7cffffff] ; call qword ptr [rbx]
0x0000020000181e9b : cmp al, 0xf0 ; dec dword ptr [rcx + 0x3b] ; ret 0x850f
0x000002000001de9e : cmp al, 0xf2 ; adc eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000018e578 : cmp al, 0xf2 ; inc dword ptr [rcx + 0xf] ; mov dh, 0x85 ; ret
0x0000020000625fa7 : cmp al, 0xf6 ; ret
0x0000020000171335 : cmp al, 0xfa ; dec dword ptr [rax - 0x75] ; ret
0x00000200004a8640 : cmp al, 0xfd ; ret
0x0000020000779b29 : cmp al, 0xfe ; dec dword ptr [rax - 0x75] ; ret
0x000002000059e377 : cmp al, 1 ; inc edx ; jmp 0x2000059e35e
0x000002000003247f : cmp al, 1 ; je 0x20000032492 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000513c34 : cmp al, 1 ; je 0x20000596976 ; ret
0x0000020000487b8d : cmp al, 1 ; jne 0x20000487b1b ; call 0x20000443dc6
0x000002000021ddd4 : cmp al, 2 ; jae 0x2000021dde1 ; xor eax, eax ; ret
0x000002000000d9d1 : cmp al, 2 ; je 0x2000000d9de ; mov eax, ecx ; ret
0x000002000006a039 : cmp al, 2 ; je 0x2000006a042 ; ret
0x000002000006a039 : cmp al, 2 ; je 0x2000006a045 ; ret
0x00000200000ea7e0 : cmp al, 2 ; je 0x200000ea7f7 ; mov al, 1 ; ret
0x00000200000ea7df : cmp al, 2 ; je 0x200000ea7f8 ; mov al, 1 ; ret
0x00000200004758c6 : cmp al, 2 ; je 0x20000475933 ; mov rcx, rdi ; call 0x200000c1b39
0x00000200000b2dc0 : cmp al, 2 ; sbb eax, eax ; and eax, 2 ; ret
0x000002000011c744 : cmp al, 3 ; add byte ptr [rcx - 0x75], cl ; ret 0x7c89
0x0000020000047a3c : cmp al, 3 ; jne 0x20000047a59 ; mov rcx, rdi ; call rsi
0x0000020000642f24 : cmp al, 4 ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x0000020000607f17 : cmp al, 8 ; xor edx, edx ; call 0x20000231017
0x0000020000410ac4 : cmp al, ah ; ret
0x000002000053c8f5 : cmp al, al ; dec dword ptr [rax - 0x75] ; jl 0x2000053c929 ; js 0x2000053c892 ; ret
0x00000200006d5f5b : cmp al, bpl ; jnp 0x200006d5f1e ; dec dword ptr [rax - 1] ; ret
0x000002000051d52c : cmp al, bpl ; lea ebx, dword ptr [rdi] ; ret
0x000002000057325d : cmp al, bpl ; pop rsp ; ret 0xffbd
0x00000200001b8df6 : cmp al, bpl ; ret
0x00000200003a6a27 : cmp al, byte ptr [rax + rax] ; mov al, 1 ; ret
0x0000020000133ada : cmp al, byte ptr [rax] ; jne 0x20000133acb ; mov rax, rcx ; ret
0x0000020000134232 : cmp al, byte ptr [rax] ; jne 0x2000013421c ; mov rax, rcx ; ret
0x00000200001b6066 : cmp al, byte ptr [rbp - 0x75] ; ret 0x8141
0x00000200000daf7a : cmp al, byte ptr [rbx + 0xd7408f8] ; mov eax, r8d ; ret
0x0000020000643901 : cmp al, byte ptr [rcx - 0x75] ; ret
0x00000200000e2f78 : cmp al, byte ptr [rdi + rcx + 0x20] ; ret
0x000002000043926a : cmp al, ch ; adc al, 0xc ; add byte ptr [rax], al ; jmp 0x2000043923b
0x00000200003de735 : cmp al, ch ; fnop ; ret
0x0000020000504366 : cmp al, ch ; je 0x2000050432e ; ret
0x0000020000512f91 : cmp al, ch ; jmp 0x2004250f26f
0x00000200006d5f5c : cmp al, ch ; jnp 0x200006d5f1d ; dec dword ptr [rax - 1] ; ret
0x000002000051d52d : cmp al, ch ; lea ebx, dword ptr [rdi] ; ret
0x000002000051d899 : cmp al, ch ; loope 0x2000051d8cb ; ret 0x33ff
0x000002000052c94a : cmp al, ch ; mov al, 0xc2 ; jmp 0x2000052c952
0x00000200003db076 : cmp al, ch ; mov eax, dr0 ; ret
0x00000200005e735c : cmp al, ch ; pop rsi ; ret
0x000002000057325e : cmp al, ch ; pop rsp ; ret 0xffbd
0x000002000049d994 : cmp al, ch ; push rsp ; ret 0x48ff
0x00000200001b8df7 : cmp al, ch ; ret
0x0000020000111d60 : cmp al, ch ; ret 4
0x000002000005be62 : cmp al, ch ; test al, 0x47 ; add eax, 0x8b138b00 ; ret 0xba0f
0x0000020000781e6e : cmp al, ch ; xchg eax, esi ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200002078a5 : cmp al, cl ; jae 0x200002078b5 ; mov cr8, rcx ; ret
0x0000020000649d5b : cmp al, cl ; jae 0x20000649d28 ; ret
0x00000200007677d4 : cmp al, cl ; jae 0x200007677e3 ; or eax, 0xffffffff ; ret
0x00000200000b29e9 : cmp al, cl ; jne 0x200000b29f2 ; ret
0x00000200007677df : cmp al, cl ; seta al ; ret
0x0000020000040262 : cmp al, dl ; je 0x20000040273 ; add rsp, 0x28 ; ret
0x00000200005ab918 : cmp al, dl ; jmp 0x200005ab91c
0x0000020000134f57 : cmp al, dl ; jne 0x20000134f66 ; mov rax, rcx ; ret
0x0000020000134f56 : cmp al, dl ; jne 0x20000134f67 ; mov rax, rcx ; ret
0x00000200001b446e : cmp al, dl ; jne 0x200001b44ce ; mov r8b, dl ; jmp 0x200001b44c4
0x0000020000439269 : cmp al, r13b ; adc al, 0xc ; add byte ptr [rax], al ; jmp 0x2000043923c
0x0000020000649d5a : cmp al, r9b ; jae 0x20000649d29 ; ret
0x00000200004dbbd6 : cmp ax, 0x5c ; jne 0x200004dbbd8 ; xor al, al ; ret
0x00000200001356b7 : cmp ax, dx ; jne 0x200001356c8 ; mov rax, rcx ; ret
0x00000200000df028 : cmp ax, word ptr [r8] ; jb 0x200000df016 ; ret
0x000002000039f46c : cmp bh, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006a35be : cmp bh, bh ; adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x00000200003f51cb : cmp bh, bh ; ret
0x0000020000654bf3 : cmp bh, bh ; ret 0x8349
0x0000020000455c11 : cmp bh, ch ; adc al, 0 ; mov rcx, rdi ; call 0x200000c1e29
0x000002000044473f : cmp bh, dh ; fimul dword ptr [rax + 0x63] ; ret 0x8b48
0x0000020000038bd7 : cmp bh, dh ; ret 0xfffc
0x000002000063cda3 : cmp bh, dh ; ret 0xfffe
0x000002000008f7a8 : cmp bl, 0x2e ; add al, ch ; ret
0x00000200005aa09e : cmp bl, al ; jmp 0x200005aa0a7
0x00000200006404c1 : cmp bl, al ; lea rax, qword ptr [rcx + 0x40] ; ret
0x00000200000520e0 : cmp bl, al ; xor eax, eax ; ret
0x000002000001b832 : cmp bl, byte ptr [rbp + rax] ; add rsp, 0x28 ; ret
0x000002000011dd30 : cmp bl, byte ptr [rbx + 5] ; add dh, dh ; ret 0x7502
0x0000020000647d42 : cmp bl, byte ptr [rip + 0x375000b] ; xor al, al ; ret
0x00000200003e90e8 : cmp bl, ch ; add ch, bl ; add eax, dword ptr [rcx - 0x75] ; ret 0x8d4c
0x0000020000129e48 : cmp bl, ch ; fiadd dword ptr [rbx - 0x75bb0032] ; ret
0x0000020000073cd2 : cmp bl, ch ; ret 0xc032
0x00000200003a783f : cmp bl, dh ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001c344d : cmp byte ptr [r10], al ; call r8
0x0000020000503604 : cmp byte ptr [r13 + 5], sil ; add rsp, 0x38 ; ret
0x00000200004c8bd4 : cmp byte ptr [r14 + rax + 0x48], sil ; add esp, 0x20 ; pop rbx ; ret
0x00000200001f6a8d : cmp byte ptr [r14 - 0x77], spl ; ret
0x0000020000153578 : cmp byte ptr [r15 + rcx - 0x51], r8b ; ret 0x40b9
0x000002000048cf50 : cmp byte ptr [r15], cl ; test dword ptr [rax - 0x75ffed53], esp ; ret
0x00000200000e29d9 : cmp byte ptr [r8 + 0x3b], r9b ; ret 0x187c
0x00000200000893e5 : cmp byte ptr [r8 + 0x63], cl ; ret
0x000002000021ee46 : cmp byte ptr [r8 - 0x75], cl ; ret 0x8b48
0x00000200006c6f55 : cmp byte ptr [r8 - 0x75], r9b ; ret
0x00000200002117cb : cmp byte ptr [r8 - 0x77], r9b ; and al, 0x20 ; call r10
0x00000200005fb992 : cmp byte ptr [r8 - 0x77], r9b ; or r8b, bpl ; ret
0x0000020000531610 : cmp byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x85 ; ret
0x00000200004e8ca1 : cmp byte ptr [r9 + rcx*4 + 0x51], cl ; ret
0x000002000061f937 : cmp byte ptr [r9 - 0x3b7cb701], r14b ; pop rax ; ret
0x00000200001cd669 : cmp byte ptr [r9 - 0x7c], r8b ; ret
0x00000200001bfbf1 : cmp byte ptr [r9], cl ; sete dl ; mov eax, edx ; ret
0x00000200000e0fa6 : cmp byte ptr [rax + 0x2b], cl ; fimul word ptr [rbx - 0xb7dfb6] ; ret
0x0000020000134664 : cmp byte ptr [rax + 0x2b], cl ; ret
0x00000200003ed5da : cmp byte ptr [rax + 0x2b], cl ; ret 0x8b45
0x00000200003ed1a7 : cmp byte ptr [rax + 0x2b], cl ; ret 0xd148
0x00000200000d8bf0 : cmp byte ptr [rax + 0x33], cl ; ror byte ptr [rcx + 0x23], 1 ; ror byte ptr [rax + 0x33], 1 ; ret 0x8948
0x00000200004291e8 : cmp byte ptr [rax + 0x3b], cl ; enter 0x7175, -0x75 ; ret
0x0000020000684ab0 : cmp byte ptr [rax + 0x3b], cl ; ret
0x00000200000e29da : cmp byte ptr [rax + 0x3b], cl ; ret 0x187c
0x000002000003d714 : cmp byte ptr [rax + 0x3b], cl ; ret 0x207d
0x0000020000231798 : cmp byte ptr [rax + 0x3b], cl ; ret 0xf48
0x00000200001bc3ce : cmp byte ptr [rax + 0x48000000], 0x8b ; ret 0xccc3
0x00000200000893e6 : cmp byte ptr [rax + 0x63], cl ; ret
0x000002000043fab7 : cmp byte ptr [rax + 1], 0xf ; ja 0x2000043fac8 ; mov al, cl ; ret
0x00000200004676df : cmp byte ptr [rax + 3], cl ; ret
0x00000200003db67e : cmp byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000073e303 : cmp byte ptr [rax + rax], cl ; add byte ptr [rax + 0xb], cl ; ret 0x20bf
0x000002000077a3f6 : cmp byte ptr [rax + rbp*8], cl ; ret
0x000002000007079a : cmp byte ptr [rax - 0x14fffff9], 0xb8 ; xor al, al ; ret
0x0000020000693327 : cmp byte ptr [rax - 0x3b7cb7f6], cl ; ret
0x00000200000778e8 : cmp byte ptr [rax - 0x3f], cl ; call 0x1ffc22ac100
0x000002000003f8ba : cmp byte ptr [rax - 0x73], cl ; add al, 0x80 ; lea rax, qword ptr [rdx + rax*8] ; ret
0x00000200005037fb : cmp byte ptr [rax - 0x73], cl ; and al, 0x20 ; call rdi
0x00000200004e6bb6 : cmp byte ptr [rax - 0x73], cl ; ret
0x000002000075fdd1 : cmp byte ptr [rax - 0x74b3c0c1], al ; ret
0x0000020000423190 : cmp byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x2a74
0x00000200001c9dd3 : cmp byte ptr [rax - 0x75], cl ; add eax, 0x105075 ; call qword ptr [rax]
0x00000200006b0621 : cmp byte ptr [rax - 0x75], cl ; and al, 0x48 ; jmp rax
0x00000200001539dc : cmp byte ptr [rax - 0x75], cl ; call rax
0x000002000051aadc : cmp byte ptr [rax - 0x75], cl ; enter -0x2418, 0x49 ; ret
0x000002000005aa54 : cmp byte ptr [rax - 0x75], cl ; je 0x2000005aa85 ; xor byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x0000020000103df4 : cmp byte ptr [rax - 0x75], cl ; push rbp ; fisttp word ptr [rax + 0x3b] ; ret 0x850f
0x0000020000010961 : cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000222afd : cmp byte ptr [rax - 0x75], cl ; ret 0x2eb
0x000002000063bbc7 : cmp byte ptr [rax - 0x75], cl ; ret 0x4466
0x000002000072c236 : cmp byte ptr [rax - 0x75], cl ; ret 0x8b45
0x000002000021ee47 : cmp byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000a42c7 : cmp byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000451523 : cmp byte ptr [rax - 0x75], cl ; ret 0xd233
0x000002000051aadb : cmp byte ptr [rax - 0x75], r9b ; enter -0x2418, 0x49 ; ret
0x00000200002117cc : cmp byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x00000200005fb993 : cmp byte ptr [rax - 0x77], cl ; or r8b, bpl ; ret
0x0000020000124417 : cmp byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000124428 ; xor al, al ; ret
0x0000020000124416 : cmp byte ptr [rax - 0x7b], cl ; leave ; jne 0x20000124429 ; xor al, al ; ret
0x00000200006b7002 : cmp byte ptr [rax - 0x7b], cl ; push qword ptr [rdx + rdx - 0x75] ; ret 0x8b49
0x00000200006778ba : cmp byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000200000b13c6 : cmp byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000200006c0464 : cmp byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rdx + 0x48], 0x8b ; iretd ; call rax
0x0000020000017a0c : cmp byte ptr [rax - 0x7d], cl ; ret
0x00000200005ebf01 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4120
0x000002000003e003 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200005a7d5e : cmp byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000019bba3 : cmp byte ptr [rax - 0x7d], cl ; ret 0xb940
0x0000020000779347 : cmp byte ptr [rax - 0x7d], cl ; ret 0xe804
0x00000200003bee0e : cmp byte ptr [rax - 0x7f], cl ; ret
0x0000020000206fec : cmp byte ptr [rax - 1], cl ; loopne 0x2000020703f ; jmp rax
0x0000020000136798 : cmp byte ptr [rax - 1], cl ; ret
0x00000200005e1349 : cmp byte ptr [rax - 9], cl ; fadd dword ptr [rbx + rcx*4 + 0x45] ; ret
0x00000200001ddf31 : cmp byte ptr [rax - 9], cl ; ret 0xffff
0x0000020000230c9e : cmp byte ptr [rax], 2 ; add byte ptr [rax], al ; jmp rax
0x00000200005fd223 : cmp byte ptr [rax], al ; add al, al ; ret
0x0000020000503b4f : cmp byte ptr [rax], al ; je 0x20000503b60 ; add rsp, 0x28 ; ret
0x0000020000487588 : cmp byte ptr [rax], al ; jne 0x2000048759b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006b7305 : cmp byte ptr [rax], al ; jne 0x200006b72f9 ; xor al, al ; ret
0x00000200004ea864 : cmp byte ptr [rbp + 0x3b], cl ; ret 0xd27c
0x00000200000baaa7 : cmp byte ptr [rbp + 0x5b], bl ; ret
0x0000020000503605 : cmp byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000002000022a9d4 : cmp byte ptr [rbp - 0x73], cl ; sbb byte ptr [r9 - 0x75], r8b ; ret 0x8b4c
0x000002000072c460 : cmp byte ptr [rbp - 0x75], al ; fiadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x00000200004b3ad5 : cmp byte ptr [rbp - 0x75], al ; ret
0x0000020000760319 : cmp byte ptr [rbp - 0x75], r8b ; ret
0x000002000019fffb : cmp byte ptr [rbp - 0x7f], 0 ; jne 0x2000019ffc8 ; jmp 0x2000019ffc0
0x00000200001ef33b : cmp byte ptr [rbx + 0x3b44ffca], al ; ret 0x1474
0x000002000052b0d0 : cmp byte ptr [rbx + r9 + 0x41], cl ; sbb byte ptr [rdx], bh ; ret 0x470f
0x000002000052b0d1 : cmp byte ptr [rbx + rcx + 0x41], cl ; sbb byte ptr [rdx], bh ; ret 0x470f
0x00000200005d3363 : cmp byte ptr [rbx + rcx*4 - 0x3d], al ; mov rdx, r14 ; call rax
0x000002000021b76a : cmp byte ptr [rbx + rdi - 0x3e], cl ; jl 0x2000021b756 ; ret
0x0000020000498928 : cmp byte ptr [rbx - 0x73], al ; adc al, 0x12 ; call 0x200000bab48
0x000002000066d1c2 : cmp byte ptr [rbx - 0x7cafdbac], cl ; ret 0x306
0x0000020000589d07 : cmp byte ptr [rbx], al ; ret 0x4489
0x000002000011f183 : cmp byte ptr [rbx], bh ; int1 ; jb 0x2000011f1d3 ; inc edx ; jmp 0x2000011f16d
0x0000020000011794 : cmp byte ptr [rbx], bh ; ret 0x850f
0x000002000021ed3e : cmp byte ptr [rbx], ch ; ret
0x00000200003ed168 : cmp byte ptr [rbx], ch ; ret 0x3341
0x0000020000466731 : cmp byte ptr [rbx], dh ; dec dword ptr [rcx - 0x7d] ; ret
0x000002000051e21f : cmp byte ptr [rbx], dh ; leave ; call rax
0x00000200001f493b : cmp byte ptr [rbx], dh ; ror byte ptr [rbp + rcx*4 + 5], 0xbb ; ret
0x000002000021ed3d : cmp byte ptr [rbx], r13b ; ret
0x00000200001bfa83 : cmp byte ptr [rcx + 0x10], al ; mov eax, 0xc0000001 ; ret
0x0000020000069e82 : cmp byte ptr [rcx + 0x186], 1 ; je 0x20000069e95 ; ret
0x0000020000110df2 : cmp byte ptr [rcx + 0x21], al ; jne 0x20000110dfd ; ret
0x00000200003f5b2f : cmp byte ptr [rcx + 0x232], al ; setne al ; ret
0x0000020000035d1e : cmp byte ptr [rcx + 0x3b], al ; ret
0x00000200000a1de1 : cmp byte ptr [rcx + 0x3b], cl ; ret
0x00000200003f39ab : cmp byte ptr [rcx + 0x4c], 0 ; jne 0x200003f3978 ; ret
0x00000200003fe66f : cmp byte ptr [rcx + 0x4c], cl ; jne 0x200003fe67a ; ret
0x00000200003fe66e : cmp byte ptr [rcx + 0x4c], r9b ; jne 0x200003fe67b ; ret
0x00000200003f399b : cmp byte ptr [rcx + 0x4f], 0 ; je 0x200003f39ba ; dec dword ptr [rdx + 0x18] ; ret
0x000002000004ab22 : cmp byte ptr [rcx + 0x5c], al ; pop rbx ; ret
0x00000200003f1dc5 : cmp byte ptr [rcx + 0x5c], al ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200003a22da : cmp byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbp ; pop rbx ; ret
0x00000200003a7340 : cmp byte ptr [rcx + 0x5d], al ; pop rbp ; ret
0x000002000004784a : cmp byte ptr [rcx + 0x5d], al ; pop rdi ; ret
0x000002000010d279 : cmp byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000c295f : cmp byte ptr [rcx + 0x5e], al ; pop rdi ; ret
0x000002000011b137 : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200001281f7 : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; ret
0x000002000067e88f : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000004cf7 : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000005363b : cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; pop rbx ; ret
0x00000200000870e9 : cmp byte ptr [rcx + 0x5f], al ; pop rbx ; ret
0x00000200006d98da : cmp byte ptr [rcx + 0x7a891442], cl ; sbb byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000045554f : cmp byte ptr [rcx + 0xe0c83], cl ; add byte ptr [rax - 0x75], cl ; ret
0x000002000051e229 : cmp byte ptr [rcx + 1], bh ; call r8
0x00000200006719ca : cmp byte ptr [rcx + 2], bh ; call rax
0x00000200006719ec : cmp byte ptr [rcx + 3], bh ; call rax
0x00000200007328d5 : cmp byte ptr [rcx + 3], cl ; ret
0x000002000022a505 : cmp byte ptr [rcx + 3], cl ; ret 0xc183
0x00000200000534b2 : cmp byte ptr [rcx + rax*2 + 1], 0 ; jne 0x200000534cc ; xor al, al ; ret
0x00000200001bfa77 : cmp byte ptr [rcx + rcx*4 + 0x19], al ; mov eax, r10d ; ret
0x00000200003b280e : cmp byte ptr [rcx + rcx*4 + 0x41], cl ; mov byte ptr [rcx + 0x48], 0 ; ret
0x00000200004e8ca2 : cmp byte ptr [rcx + rcx*4 + 0x51], cl ; ret
0x0000020000607d3a : cmp byte ptr [rcx - 0x2dccc7ab], cl ; call 0x20000231019
0x000002000061f938 : cmp byte ptr [rcx - 0x3b7cb701], dh ; pop rax ; ret
0x00000200005e730a : cmp byte ptr [rcx - 0x521748bb], cl ; ret
0x000002000060b514 : cmp byte ptr [rcx - 0x73], al ; push rsi ; add bh, byte ptr [rbx] ; ret 0x1b76
0x00000200003997ce : cmp byte ptr [rcx - 0x75], al ; ret
0x000002000065ed66 : cmp byte ptr [rcx - 0x75], al ; ret 0x344
0x000002000040fa60 : cmp byte ptr [rcx - 0x75], al ; ror dword ptr [rax - 0x7d], -0x3c ; pop rbx ; ret
0x000002000042bc20 : cmp byte ptr [rcx - 0x75], al ; test byte ptr [rbx + rcx*4 - 0x2d], 0x8b ; ret
0x0000020000002517 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000002566 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000007a9f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000007aee ; pop rsi ; pop r13 ; pop rdi ; ret
0x000002000001db92 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000001dbe1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000029512 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000029561 ; pop rsi ; pop r13 ; pop rdi ; ret
0x0000020000030d00 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000030d4f ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000003d0e1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000003d12f ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000005d241 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000005d290 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000005fa68 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000005fab7 ; pop rsi ; pop r13 ; pop rbp ; ret
0x00000200000f2eae : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f2efd ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000f8453 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f84a2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000104703 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000104752 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000108695 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001086e4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000112446 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000112495 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000113f10 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000113f5f ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000114b30 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000114b7f ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000116fd5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000117024 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011cb9f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011cbee ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011de50 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011de9f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011df20 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011df6f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000012584f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012589e ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000126ad2 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000126b21 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000012c34d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012c39c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001703dc : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000017042b ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001a0d7a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001a0dc9 ; pop rsi ; pop r13 ; pop rdi ; ret
0x00000200001a156b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001a15ba ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001a4b05 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001a4b54 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001a6cc4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001a6d13 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001a92e7 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001a9336 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001b10c5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b1114 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001c2fc9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c3018 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001c589f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c58ee ; pop rdi ; pop r14 ; pop rcx ; ret
0x00000200001c686c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c68ba ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001dc482 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001dc4d1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001e3378 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e33c7 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000201263 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200002012b2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000020bcee : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020bd3c ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000210a1b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000210a6a ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000210c09 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000210c57 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000021139d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200002113eb ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000213042 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000213090 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200002166b1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000216700 ; pop rsi ; pop r13 ; pop rbp ; ret
0x0000020000216cd1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000216d20 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000021d1d1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000021d220 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003a2402 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003a2451 ; pop rdi ; pop r14 ; pop rcx ; ret
0x00000200003cdd23 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003cdd72 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003d8b1b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003d8b69 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200003dcd43 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003dcd91 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200003de680 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003de6cf ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003dfa20 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003dfa6f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003e026c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e02ba ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200003e7949 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e7998 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003e8b0f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e8b5e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003ee6a5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ee6f4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003ef932 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ef981 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003ff31b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ff36a ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000402b99 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000402be8 ; pop rsi ; pop r13 ; pop rbp ; ret
0x000002000040bc09 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040bc58 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004108a9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004108f8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000412bc1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000412c10 ; pop rsi ; pop r12 ; pop rbp ; ret
0x0000020000416d5a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000416da9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000041763a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000417689 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000418c24 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000418c73 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004198e4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000419933 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000420c3e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000420c8c ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000428483 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004284d2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000042c378 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042c3c7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000043ac7c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043acca ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000044f2f9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044f348 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000044f7e5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044f834 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000463aa4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000463af3 ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000468f2b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000468f7a ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000046a290 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046a2df ; pop rdi ; pop r13 ; pop rbp ; ret
0x0000020000475e3d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000475e8c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000047df20 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047df6f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000047f113 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047f161 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004c4953 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c49a2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c74ac : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c74fb ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c983a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c9889 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004cad5c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004cadab ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004cb6ea : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004cb738 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004cb7da : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004cb829 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004d796d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d79bc ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004dbdad : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004dbdfc ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004e8399 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e83e8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004f2c9c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f2ceb ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004f34a6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f34f5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004f4e26 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f4e74 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005034b9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000503508 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000050578f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005057de ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000050b62f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050b67e ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000050c63d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050c68b ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000050caf0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050cb3f ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000050cc3f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050cc8e ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000510b16 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000510b65 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000517ea1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000517eef ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000051b1fb : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051b24a ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000051c2c0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051c30f ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000051d6b3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051d701 ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000526c2a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000526c78 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000052a951 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052a9a0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000052eaa1 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052eaef ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000530f58 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000530fa7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000545739 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000545787 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000059a4da : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000059a529 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005e4ba5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e4bf4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005ecae4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ecb33 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005eeb3c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005eeb8a ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005f0f48 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f0f96 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005f80d2 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f8120 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006007c7 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000600815 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000600bf5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000600c44 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000060290e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060295d ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000603337 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000603386 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000060560a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000605658 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000605859 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006058a7 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000060afea : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060b039 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000060c8b3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060c902 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000611eff : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000611f4e ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000612521 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000612570 ; pop rdi ; pop r13 ; pop rbp ; ret
0x00000200006142f8 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000614346 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000614ba7 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000614bf6 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000614f03 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000614f52 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006208d0 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062091e ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000062d2fb : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062d34a ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000063577e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006357cd ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000641650 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064169f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064bb50 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064bb9f ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000064c875 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064c8c4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064ca05 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064ca54 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064cbc4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064cc13 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064cf75 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064cfc4 ; pop rsi ; pop r13 ; pop rbp ; ret
0x000002000064d4dd : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064d52c ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000655300 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065534f ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000065669a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006566e9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000662fe5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000663033 ; pop rdi ; pop rdi ; pop rsi ; ret
0x0000020000673911 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000673960 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006773ca : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000677418 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000068f57b : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068f5c9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000693c70 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000693cbf ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000697512 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000697561 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000069c4e4 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069c532 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000069ef0c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069ef5b ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006a8f57 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006a8fa6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006aaa8a : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006aaad8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006ac0cb : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ac119 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006ac47c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ac4cb ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006b60b2 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006b6101 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006d85d2 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006d8621 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006dc7cf : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200006dc81e ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000742ec3 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000742f12 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007442d6 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000744325 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000074a2d2 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000074a321 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000074e46f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000074e4be ; pop rdi ; pop r13 ; pop rbp ; ret
0x0000020000750bd5 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000750c23 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007575a2 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007575f0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000075829c : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007582ea ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000759b02 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000759b51 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000764399 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007643e8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000765891 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007658e0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000076927f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007692ce ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000076eb0d : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000076eb5c ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000078110e : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x2000078115d ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200007814f9 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000781547 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000781a48 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000781a97 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007828b7 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000782906 ; pop rsi ; pop r13 ; pop rdi ; ret
0x00000200007851db : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000785229 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000785557 : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x200007855a6 ; pop rsi ; pop r13 ; pop rbp ; ret
0x0000020000785f8f : cmp byte ptr [rcx - 0x75], cl ; jrcxz 0x20000785fdd ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200000959c8 : cmp byte ptr [rcx - 0x75], cl ; push rsi ; sbb byte ptr [rax - 0x75], cl ; ret 0x2348
0x0000020000124e12 : cmp byte ptr [rcx - 0x75], cl ; ret
0x00000200004cd45c : cmp byte ptr [rcx - 0x76], al ; ret
0x000002000010d411 : cmp byte ptr [rcx - 0x77], cl ; pop rbx ; shr al, 0xa5 ; ret
0x00000200001cd66a : cmp byte ptr [rcx - 0x7c], al ; ret
0x00000200003a5c57 : cmp byte ptr [rcx - 0x7d], cl ; ror byte ptr [rcx + rax*2], 0xff ; ret 0x3b44
0x000002000022dce1 : cmp byte ptr [rcx - 0x9cbdba4], cl ; ret 0x7402
0x000002000003fe66 : cmp byte ptr [rcx - 0xa], al ; ret 0x7420
0x00000200004996b5 : cmp byte ptr [rcx - 0xa], al ; shl byte ptr [rax], 0xf ; xchg eax, esp ; ret 0xf41
0x00000200000f2441 : cmp byte ptr [rcx - 1], al ; ret
0x00000200006cc6b0 : cmp byte ptr [rcx - 1], cl ; loope 0x200006cc706 ; add esp, 0x38 ; jmp rax
0x00000200006cc7f3 : cmp byte ptr [rcx - 1], cl ; loope 0x200006cc849 ; add esp, 0x38 ; jmp rax
0x00000200006cc848 : cmp byte ptr [rcx - 1], cl ; loope 0x200006cc89e ; add esp, 0x38 ; jmp rax
0x00000200006cc898 : cmp byte ptr [rcx - 1], cl ; loopne 0x200006cc8ee ; add esp, 0x38 ; jmp rax
0x0000020000133b8e : cmp byte ptr [rcx], 0 ; jne 0x20000133b8e ; ret
0x000002000004321c : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001a53e5 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; bts dword ptr [rax + 0x40], 9 ; ret
0x000002000043425c : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x20000057227
0x000002000052c8ee : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x50], rdx ; ret
0x000002000010b606 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000020000146682 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; sti ; ret
0x000002000017689e : cmp byte ptr [rcx], al ; inc dword ptr [rcx] ; ret
0x000002000041e6fa : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x00000200001bfbf2 : cmp byte ptr [rcx], cl ; sete dl ; mov eax, edx ; ret
0x0000020000135447 : cmp byte ptr [rcx], dl ; cmove r8, rcx ; mov rax, r8 ; ret
0x00000200000b0a2f : cmp byte ptr [rdi + 0x5b], bl ; ret
0x0000020000647a38 : cmp byte ptr [rdi + 0x5d], bl ; ret
0x0000020000153c4e : cmp byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x00000200004edf78 : cmp byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x0000020000097ed6 : cmp byte ptr [rdi + rcx + 0x22], al ; ret 0x4df0
0x000002000006786a : cmp byte ptr [rdi + rcx + 0x22], al ; ret 0x8d49
0x000002000020a01f : cmp byte ptr [rdi + rcx - 0x49], al ; ret 0xab8
0x0000020000153579 : cmp byte ptr [rdi + rcx - 0x51], al ; ret 0x40b9
0x00000200005de073 : cmp byte ptr [rdi + rcx - 1], dh ; ret
0x00000200004ca388 : cmp byte ptr [rdi - 0x3b7cb701], 0x20 ; pop rbx ; ret
0x00000200006db361 : cmp byte ptr [rdi - 0x46166f01], dl ; ret
0x000002000075eb30 : cmp byte ptr [rdi], al ; ret 0xe9ff
0x0000020000470792 : cmp byte ptr [rdi], bl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001abb4 : cmp byte ptr [rdi], cl ; mov bh, 0xc7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005ba0ec : cmp byte ptr [rdi], cl ; ror byte ptr [r8 + 0x63], 1 ; ret 0x8d48
0x00000200005ddef9 : cmp byte ptr [rdi], cl ; test byte ptr [rip - 0xffffff], bh ; ret
0x00000200001240a6 : cmp byte ptr [rdi], cl ; test byte ptr [rsi - 0xfff864], dh ; ret 0x8348
0x000002000048cf51 : cmp byte ptr [rdi], cl ; test dword ptr [rax - 0x75ffed53], esp ; ret
0x0000020000453a13 : cmp byte ptr [rdi], cl ; test dword ptr [rbp - 0x9ffffff], ebx ; ret
0x000002000011adc2 : cmp byte ptr [rdi], cl ; test dword ptr [rcx - 0x9fffa87], eax ; ret
0x00000200006a8d16 : cmp byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200004f6a83 : cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc28b
0x000002000075f3af : cmp byte ptr [rdx + 0x358944ff], bh ; ret
0x00000200006b5a0f : cmp byte ptr [rdx - 0x48], 0xe ; je 0x200006b5a20 ; xor eax, eax ; ret
0x00000200006199d0 : cmp byte ptr [rdx - 0x77], cl ; ret
0x0000020000648167 : cmp byte ptr [rdx - 0xcedbb4], cl ; ret
0x0000020000133ad9 : cmp byte ptr [rdx], 0 ; jne 0x20000133acc ; mov rax, rcx ; ret
0x0000020000230c9f : cmp byte ptr [rdx], al ; add byte ptr [rax], al ; jmp rax
0x00000200001c344e : cmp byte ptr [rdx], al ; call r8
0x00000200004f96c5 : cmp byte ptr [rdx], bh ; ret 0x820f
0x00000200003bd9a9 : cmp byte ptr [rdx], bl ; add dh, dh ; ret
0x0000020000133462 : cmp byte ptr [rdx], bl ; jne 0x20000133471 ; mov rax, rcx ; ret
0x0000020000133461 : cmp byte ptr [rdx], r11b ; jne 0x20000133472 ; mov rax, rcx ; ret
0x000002000012a4f3 : cmp byte ptr [rip + 0x1d8847], al ; je 0x2000012a518 ; call rcx
0x00000200000eebf2 : cmp byte ptr [rip + 0x1ea6b1], al ; setne al ; ret
0x00000200000eebe6 : cmp byte ptr [rip + 0x1ea6bc], al ; setne al ; ret
0x00000200000f5134 : cmp byte ptr [rip + 0x2249f5], 0 ; jne 0x200000f5147 ; ret
0x0000020000623039 : cmp byte ptr [rip + 0x34c0000], al ; ret 0x894c
0x00000200001df3dc : cmp byte ptr [rip - 0x74bc0000], al ; ret
0x00000200000bf002 : cmp byte ptr [rip - 0x74bf0000], al ; ret
0x00000200000e67a6 : cmp byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200000f04be : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax], eax ; ret
0x00000200000fcb14 : cmp byte ptr [rsi + 0x44], ah ; mov dword ptr [rsp + 0x3c], edi ; call r9
0x00000200004c8bd5 : cmp byte ptr [rsi + rax + 0x48], dh ; add esp, 0x20 ; pop rbx ; ret
0x00000200006be00a : cmp byte ptr [rsi + rsi*8], dl ; ret
0x00000200001f6a8e : cmp byte ptr [rsi - 0x77], ah ; ret
0x00000200001180fa : cmp byte ptr [rsi], bl ; add byte ptr [rbx], al ; ret
0x00000200005dde2c : cmp byte ptr [rsp + rcx - 1], dh ; ret
0x00000200000f648b : cmp ch, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x00000200003dc2b2 : cmp ch, ah ; ret
0x000002000004f52a : cmp ch, byte ptr [rdi + 0x12] ; add byte ptr [rbp - 0x7c], al ; test byte ptr [rdi], 0x95 ; ret
0x00000200000ea7ec : cmp cl, 0x42 ; je 0x200000ea7e5 ; xor al, al ; ret
0x00000200000ea7eb : cmp cl, 0x42 ; je 0x200000ea7e6 ; xor al, al ; ret
0x00000200006876b2 : cmp cl, 0x51 ; jbe 0x200006876c5 ; add cl, 8 ; ret
0x00000200003e37c9 : cmp cl, 0x61 ; jge 0x200003e37da ; movzx eax, cl ; ret
0x000002000009b3f4 : cmp cl, 0xc0 ; je 0x2000009b414 ; xor eax, eax ; ret
0x0000020000094475 : cmp cl, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x0000020000016abb : cmp cl, 1 ; sete al ; ret
0x0000020000132d30 : cmp cl, byte ptr [rax + 0xac] ; sete al ; ret
0x000002000021de93 : cmp cl, byte ptr [rax + 3] ; ret 0x8948
0x000002000004a915 : cmp cl, byte ptr [rax - 0x3800b7f9] ; jmp 0x2000004a8e7
0x000002000007328b : cmp cl, byte ptr [rax - 0x73] ; add eax, 0xdeb2d ; ret
0x000002000021c33c : cmp cl, byte ptr [rax - 0x75] ; ret
0x00000200001f8b06 : cmp cl, byte ptr [rax - 0x7d] ; ret
0x000002000069e0ed : cmp cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000020000645c38 : cmp cl, byte ptr [rcx - 0x75] ; add bh, bh ; ret 0x8b48
0x0000020000190bfb : cmp cl, byte ptr [rcx - 0x7d] ; ret 0x4904
0x00000200003ef67e : cmp cl, byte ptr [rcx - 0x7d] ; ret 0x6602
0x00000200001fa5ca : cmp cl, byte ptr [rcx - 0x7d] ; ret 0x8504
0x0000020000138769 : cmp cl, byte ptr [rcx - 1] ; ret 0x854d
0x00000200001f5fb3 : cmp cl, byte ptr [rdi] ; test dword ptr [rdi], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0x000002000010f127 : cmp cl, byte ptr [rdx + 0xf] ; mov edi, 0xf498104 ; scasd eax, dword ptr [rdi] ; ret
0x00000200005a106a : cmp cl, ch ; in eax, -0x13 ; jmp 0x1ffc3e5597a
0x000002000017d68f : cmp cl, ch ; ret
0x000002000004813f : cmp cl, ch ; ret 0xfffd
0x00000200006dd29f : cmp cl, cl ; ret
0x000002000004f7f5 : cmp cl, dl ; cmovg eax, edx ; mov dl, al ; mov al, dl ; ret
0x000002000004f6c2 : cmp cl, dl ; mov eax, ecx ; cmovg eax, edx ; jmp 0x2000004f6d4
0x00000200006429cc : cmp cx, 0x41 ; jae 0x200006429df ; movzx eax, cx ; ret
0x000002000049cd40 : cmp cx, 0x61 ; jae 0x2000049cd53 ; movzx eax, cx ; ret
0x00000200001f6342 : cmp cx, ax ; jae 0x200001f6351 ; xor al, al ; ret
0x0000020000110b38 : cmp dh, ah ; add eax, 0x1b800 ; add al, al ; ret
0x00000200001c3ae6 : cmp dh, ah ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200003f2bb7 : cmp dh, bh ; ret 0x8b48
0x0000020000137a99 : cmp dh, byte ptr [rbx + 6] ; movzx eax, cx ; sub eax, edx ; ret
0x00000200001886f0 : cmp dh, cl ; inc dword ptr [rbp - 0x75] ; ret
0x00000200001886c9 : cmp dh, cl ; push rsi ; ret 0x741e
0x000002000005ee3a : cmp dh, dh ; ret
0x00000200000f7cef : cmp dh, dh ; ret 0x7408
0x0000020000082c15 : cmp dh, dh ; ret 0x7420
0x000002000003bc20 : cmp dh, dh ; ret 0x7520
0x000002000003ca1a : cmp dh, dh ; ret 0xf01
0x00000200000da492 : cmp dh, dh ; ret 0xf10
0x0000020000493bca : cmp dh, dh ; ret 0xf20
0x00000200006c06b0 : cmp dl, 0x1b ; ja 0x200006c06c3 ; movzx eax, r10b ; jmp 0x200006c06cf
0x00000200006c077d : cmp dl, 0x1b ; ja 0x200006c0790 ; movzx eax, r10b ; jmp 0x200006c079c
0x00000200006c0831 : cmp dl, 0x1b ; ja 0x200006c0844 ; movzx eax, r10b ; jmp 0x200006c0850
0x00000200006c08d4 : cmp dl, 0x1b ; ja 0x200006c08e7 ; movzx eax, r10b ; jmp 0x200006c08f3
0x00000200000aa0c9 : cmp dl, 0xff ; dec dword ptr [rcx - 0x75] ; push rbp ; add dh, dh ; ret 0xf04
0x00000200005a9bfa : cmp dl, al ; jmp 0x200005a9bfe
0x00000200006c85dc : cmp dl, al ; jne 0x200006c85e8 ; xor eax, eax ; ret
0x00000200003b3cb0 : cmp dl, byte ptr [rdx - 0x74bbffe6] ; ret
0x0000020000036480 : cmp dl, dl ; adc al, byte ptr [rax] ; ret
0x000002000048d4ba : cmp dl, dl ; out 0xff, al ; call 0x200000bc257
0x00000200000407e1 : cmp dword ptr [r8], r10d ; jne 0x200000407f0 ; xor eax, eax ; ret
0x0000020000003784 : cmp dword ptr [r8], r9d ; je 0x20000003782 ; xor al, al ; ret
0x000002000062fafa : cmp dword ptr [r9], r11d ; ja 0x2000062fab6 ; ret
0x0000020000066c9a : cmp dword ptr [rax + 0x10], 0 ; jne 0x20000066ccd ; xor al, al ; ret
0x000002000001a30d : cmp dword ptr [rax + 0x10], ecx ; jne 0x2000001a320 ; add rsp, 0x28 ; ret
0x000002000002d321 : cmp dword ptr [rax + 0x10], ecx ; jne 0x2000002d334 ; mov qword ptr [rdx + 8], r8 ; ret
0x000002000003ea59 : cmp dword ptr [rax + 0x18], -1 ; je 0x2000003ea55 ; mov rax, r8 ; ret
0x000002000051e3ba : cmp dword ptr [rax + 0x1a], edx ; jne 0x2000051e3ba ; lock inc dword ptr [rax + 0x10] ; ret
0x00000200001a8f22 : cmp dword ptr [rax + 0x20], 0 ; add byte ptr [rbx], bh ; ret 0x820f
0x000002000010190b : cmp dword ptr [rax + 0x20], eax ; jne 0x2000010191c ; mov rax, rcx ; ret
0x000002000000cb9c : cmp dword ptr [rax + 0x2b], ecx ; ret 0x8b48
0x0000020000544e24 : cmp dword ptr [rax + 0x80], eax ; setne al ; ret
0x000002000019959f : cmp dword ptr [rax + 4], ebx ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000223e7f : cmp dword ptr [rax + 5], 0 ; add byte ptr [rbp + 3], cl ; ret
0x000002000041b3e9 : cmp dword ptr [rax + 8], 0 ; je 0x2000041b3fa ; xor eax, eax ; ret
0x000002000007e98d : cmp dword ptr [rax + 8], edx ; jne 0x2000007e998 ; ret
0x0000020000071e08 : cmp dword ptr [rax - 0x75], ecx ; ret
0x000002000074c962 : cmp dword ptr [rax - 0x75], ecx ; ret 0x8b4d
0x00000200001e0237 : cmp dword ptr [rax - 0x75], ecx ; ret 0xb849
0x0000020000081c66 : cmp dword ptr [rax - 0x75], ecx ; ret 0xb948
0x0000020000009aa6 : cmp dword ptr [rax - 0x75], ecx ; ret 0xf748
0x00000200006243e6 : cmp dword ptr [rax - 0x7d], ecx ; ret
0x00000200003c3e91 : cmp dword ptr [rax - 0x7d], ecx ; ret 0x4428
0x00000200005ebfc5 : cmp dword ptr [rax - 0x7d], ecx ; ret 0x4c20
0x00000200001f59b8 : cmp dword ptr [rax - 1], ecx ; ret
0x00000200000ada34 : cmp dword ptr [rax - 1], ecx ; ret 0x8148
0x00000200006b7304 : cmp dword ptr [rax], 0 ; jne 0x200006b72fa ; xor al, al ; ret
0x000002000052c8ed : cmp dword ptr [rax], 0x48000001 ; mov dword ptr [rax + 0x50], edx ; ret
0x00000200001b83aa : cmp dword ptr [rax], 0x8b000001 ; push rax ; and dh, dh ; ret 0x750f
0x00000200003a00a2 : cmp dword ptr [rax], eax ; add rcx, rdx ; jmp rcx
0x000002000003b4ef : cmp dword ptr [rax], eax ; je 0x2000003b502 ; and qword ptr [rdx + 0x18], 0 ; ret
0x0000020000053c9a : cmp dword ptr [rax], eax ; je 0x20000053c95 ; mov al, 1 ; ret
0x00000200000e93fc : cmp dword ptr [rax], eax ; je 0x200000e9409 ; xor al, al ; ret
0x00000200004afa3e : cmp dword ptr [rax], eax ; je 0x200004afa4e ; call 0x200000d2307
0x0000020000042e58 : cmp dword ptr [rax], eax ; jne 0x20000042e64 ; xor eax, eax ; ret
0x0000020000071089 : cmp dword ptr [rax], eax ; jne 0x2000007109a ; add rsp, 0x28 ; ret
0x00000200000bf58a : cmp dword ptr [rax], eax ; jne 0x200000bf59d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c1e41 : cmp dword ptr [rax], eax ; jne 0x200000c1e52 ; add rsp, 0x28 ; ret
0x0000020000133b8f : cmp dword ptr [rax], eax ; jne 0x20000133b8d ; ret
0x00000200004f742e : cmp dword ptr [rax], eax ; jne 0x200004f741f ; mov eax, 1 ; ret
0x00000200006b72b9 : cmp dword ptr [rax], eax ; jne 0x200006b72ac ; xor al, al ; ret
0x00000200001f0f0c : cmp dword ptr [rax], eax ; setne al ; ret
0x0000020000003785 : cmp dword ptr [rax], ecx ; je 0x20000003781 ; xor al, al ; ret
0x0000020000740dba : cmp dword ptr [rax], ecx ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x000002000005089a : cmp dword ptr [rax], edx ; cmovne edx, r8d ; mov eax, edx ; ret
0x0000020000037447 : cmp dword ptr [rax], edx ; jne 0x20000037465 ; mov qword ptr [rax], r8 ; ret
0x00000200000407e2 : cmp dword ptr [rax], edx ; jne 0x200000407ef ; xor eax, eax ; ret
0x00000200003d5870 : cmp dword ptr [rbp + 0x19], ebx ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000c1b39
0x00000200003fc564 : cmp dword ptr [rbp + 0x33], eax ; call rcx
0x00000200001100f3 : cmp dword ptr [rbp - 0xc], esi ; ret
0x000002000004311b : cmp dword ptr [rbp - 1], -1 ; dec dword ptr [rcx - 0x75] ; ret 0xd348
0x0000020000097285 : cmp dword ptr [rbx + rcx*4 + 0x47], ecx ; adc byte ptr [rdi], cl ; xchg eax, edx ; ret 0xf49
0x00000200000635d6 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rcx + 0x3b] ; ret 0xe072
0x0000020000188788 : cmp dword ptr [rbx], -0xf ; push rsi ; ret
0x00000200004b0183 : cmp dword ptr [rbx], ebp ; sar edi, -0x75 ; ret
0x00000200004a3a75 : cmp dword ptr [rbx], edi ; fnstenv dword ptr [rbp + rsi - 1] ; ret 0x8348
0x0000020000064f51 : cmp dword ptr [rbx], edi ; ret 0x820f
0x0000020000203147 : cmp dword ptr [rbx], edx ; jb 0x2000020314b ; jmp 0x20000203161
0x000002000051970d : cmp dword ptr [rbx], esi ; ror byte ptr [rax - 0x75], 0x4c ; ret
0x00000200001f506d : cmp dword ptr [rcx + 0x10], eax ; cmove rdx, rcx ; mov rax, rdx ; ret
0x00000200000bd227 : cmp dword ptr [rcx + 0x10], eax ; jne 0x200000bd20e ; lea rax, qword ptr [r9 - 0x10] ; ret
0x0000020000102647 : cmp dword ptr [rcx + 0x13a0], eax ; sete al ; ret
0x00000200003fb472 : cmp dword ptr [rcx + 0x14], edx ; ja 0x200003fb47d ; ret
0x00000200004fa065 : cmp dword ptr [rcx + 0x18], 0 ; jne 0x200004fa072 ; ret
0x00000200004fa079 : cmp dword ptr [rcx + 0x18], 0 ; jne 0x200004fa086 ; ret
0x0000020000037b99 : cmp dword ptr [rcx + 0x20], 0 ; je 0x20000037bae ; mov rax, rcx ; ret
0x00000200000dbbc3 : cmp dword ptr [rcx + 0x20], eax ; je 0x200000dbbce ; ret
0x00000200003c97e7 : cmp dword ptr [rcx + 0x20], eax ; sbb eax, eax ; add eax, 2 ; ret
0x00000200000fc48f : cmp dword ptr [rcx + 0x20], edx ; jae 0x200000fc4a1 ; mov qword ptr [rcx + 0x20], rdx ; ret
0x00000200003a4e94 : cmp dword ptr [rcx + 0x24], 0 ; je 0x200003a4ea1 ; ret
0x0000020000024269 : cmp dword ptr [rcx + 0x28], eax ; jne 0x20000024299 ; or qword ptr [rcx], 0xffffffffffffffff ; ret
0x000002000007397a : cmp dword ptr [rcx + 0x2c], eax ; sete al ; ret
0x000002000001e152 : cmp dword ptr [rcx + 0x30], eax ; jne 0x2000001e161 ; mov al, 1 ; ret
0x000002000044cb31 : cmp dword ptr [rcx + 0x30], eax ; jne 0x2000044cb42 ; ret
0x00000200001a9985 : cmp dword ptr [rcx + 0x30], eax ; setne al ; ret
0x00000200004766ca : cmp dword ptr [rcx + 0x360], 0 ; ja 0x200004766dd ; ret
0x00000200001bd6bd : cmp dword ptr [rcx + 0xc], 4 ; sete dl ; jmp 0x200001bd6ab
0x000002000012b531 : cmp dword ptr [rcx + 2], eax ; jb 0x2000012b540 ; mov al, 1 ; ret
0x00000200000e9403 : cmp dword ptr [rcx + 4], 0 ; je 0x200000e9414 ; mov al, 1 ; ret
0x00000200006b39c2 : cmp dword ptr [rcx + 4], 0 ; jl 0x200006b39d3 ; mov al, 1 ; ret
0x000002000001c356 : cmp dword ptr [rcx + 8], -1 ; jl 0x2000001c367 ; mov al, 1 ; ret
0x00000200000234bb : cmp dword ptr [rcx + 8], eax ; cmove rdx, rcx ; mov rax, rdx ; ret
0x00000200004d37c8 : cmp dword ptr [rcx + 8], eax ; je 0x200004d37d7 ; xor eax, eax ; ret
0x0000020000686269 : cmp dword ptr [rcx + rax*2], 0x20 ; mov dword ptr [rdx], eax ; jne 0x20000686241 ; ret
0x00000200005399d5 : cmp dword ptr [rcx + rax*8 - 0x377cfff7], -1 ; ret
0x000002000040916a : cmp dword ptr [rcx + rdx + 0xc], eax ; jne 0x20000409140 ; inc r10d ; jmp 0x2000040914a
0x00000200000867d0 : cmp dword ptr [rcx + rdx*8 + 8], 0 ; je 0x200000867e3 ; xor eax, eax ; ret
0x00000200006dc385 : cmp dword ptr [rcx - 0x75], eax ; ret 0xff41
0x0000020000138777 : cmp dword ptr [rcx - 1], ecx ; ret
0x00000200006b72b8 : cmp dword ptr [rcx], 0 ; jne 0x200006b72ad ; xor al, al ; ret
0x00000200001f0f0b : cmp dword ptr [rcx], 0 ; setne al ; ret
0x0000020000033db0 : cmp dword ptr [rcx], eax ; jae 0x20000033dbd ; xor eax, eax ; ret
0x000002000021af95 : cmp dword ptr [rcx], eax ; jb 0x2000021afa2 ; xor al, al ; ret
0x000002000011cc66 : cmp dword ptr [rcx], eax ; je 0x2000011cc79 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001a9c3f : cmp dword ptr [rcx], eax ; jne 0x200001a9c4c ; xor eax, eax ; ret
0x0000020000644cb2 : cmp dword ptr [rcx], eax ; jne 0x20000644cc5 ; mov eax, 1 ; ret
0x00000200006c1cb8 : cmp dword ptr [rcx], eax ; jne 0x200006c1cb2 ; ret
0x0000020000202da2 : cmp dword ptr [rcx], eax ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x0000020000024997 : cmp dword ptr [rcx], eax ; sete al ; ret
0x000002000005930d : cmp dword ptr [rcx], eax ; setne al ; ret
0x000002000062fafb : cmp dword ptr [rcx], ebx ; ja 0x2000062fab5 ; ret
0x0000020000024591 : cmp dword ptr [rcx], ecx ; jne 0x200000245a7 ; mov rax, rcx ; ret
0x00000200003bb72d : cmp dword ptr [rcx], ecx ; jne 0x200003bb736 ; ret
0x00000200003bb769 : cmp dword ptr [rcx], ecx ; jne 0x200003bb772 ; ret
0x0000020000423d0d : cmp dword ptr [rcx], ecx ; jne 0x20000423d1a ; xor eax, eax ; ret
0x0000020000135855 : cmp dword ptr [rcx], edx ; cmove r8, rcx ; mov rax, r8 ; ret
0x000002000020ca0d : cmp dword ptr [rdi + rcx + 0x20], eax ; ret
0x0000020000774d77 : cmp dword ptr [rdi - 0x48], ebp ; call qword ptr [rax]
0x00000200000d52ae : cmp dword ptr [rdi], ecx ; mov dh, 0x87 ; ret
0x00000200004a7212 : cmp dword ptr [rdx + 0x11], esi ; add dh, dh ; ret
0x000002000003b544 : cmp dword ptr [rdx + 0x18], ecx ; seta al ; ret
0x000002000003b543 : cmp dword ptr [rdx + 0x18], r9d ; seta al ; ret
0x000002000003b531 : cmp dword ptr [rdx + 0x1c], eax ; jbe 0x2000003b540 ; xor al, al ; ret
0x000002000003b530 : cmp dword ptr [rdx + 0x1c], r8d ; jbe 0x2000003b541 ; xor al, al ; ret
0x0000020000074759 : cmp dword ptr [rdx + 8], eax ; je 0x20000074764 ; ret
0x0000020000134231 : cmp dword ptr [rdx], 0 ; jne 0x2000013421d ; mov rax, rcx ; ret
0x000002000053eba4 : cmp dword ptr [rdx], eax ; cmove r8d, eax ; mov eax, r8d ; ret
0x000002000002cccf : cmp dword ptr [rdx], eax ; ja 0x2000002ccd1 ; xor al, al ; ret
0x00000200001358b7 : cmp dword ptr [rdx], ebx ; jne 0x200001358c6 ; mov rax, rcx ; ret
0x00000200005f1ea8 : cmp dword ptr [rdx], ecx ; cmove eax, r8d ; ret
0x00000200004965d8 : cmp dword ptr [rdx], edx ; add dh, dh ; ret
0x00000200001358b6 : cmp dword ptr [rdx], r11d ; jne 0x200001358c7 ; mov rax, rcx ; ret
0x0000020000137c2e : cmp dword ptr [rip + 0x199b0c], ecx ; sete al ; ret
0x00000200001ab7af : cmp dword ptr [rip + 0x1d2857], ecx ; cmova eax, ecx ; ret
0x000002000012919e : cmp dword ptr [rip + 0x1d9d18], eax ; sete al ; ret
0x00000200000d95c7 : cmp dword ptr [rip + 0x2223b7], eax ; setne al ; ret
0x00000200001242ce : cmp dword ptr [rip + 0x25b17c], eax ; sete al ; ret
0x000002000007b9b4 : cmp dword ptr [rip + 0x25ca61], 0 ; jne 0x2000007b9c7 ; ret
0x0000020000635aa3 : cmp dword ptr [rip - 0x370c8d], ecx ; cmova eax, ecx ; ret
0x00000200003e934b : cmp dword ptr [rsi], 0 ; add rdx, rbx ; jmp rdx
0x00000200000ebc35 : cmp dword ptr [rsi], 3 ; jne 0x200000ebc82 ; mov rcx, rsi ; call r14
0x0000020000118f64 : cmp dword ptr [rsi], ebx ; add bl, ch ; ret 0x3345
0x000002000051e683 : cmp dword ptr [rsi], ecx ; ret
0x000002000049dcf3 : cmp dword ptr [rsi], edi ; ret 0xf7ff
0x000002000069ad78 : cmp dword ptr [rsp + 8], eax ; jae 0x2000069ad8b ; or eax, 0xffffffff ; ret
0x000002000069ad85 : cmp dword ptr [rsp + 8], eax ; seta cl ; mov eax, ecx ; ret
0x0000020000149834 : cmp eax, 0 ; jne 0x20000149929 ; ret
0x0000020000763e1b : cmp eax, 0x100 ; jb 0x20000763dd3 ; ret
0x0000020000598eaa : cmp eax, 0x160bd3 ; add byte ptr [rdi], cl ; test ebp, edx ; ret
0x0000020000686c38 : cmp eax, 0x17 ; jb 0x20000686c31 ; or eax, 0xffffffff ; ret
0x00000200000f5135 : cmp eax, 0x2249f5 ; add byte ptr [rbp + 1], dh ; ret
0x00000200006b59fc : cmp eax, 0x250 ; setb al ; ret
0x0000020000084ffb : cmp eax, 0x25317f ; add byte ptr [rdi], cl ; test dword ptr [rcx], edi ; ret
0x000002000007b9b5 : cmp eax, 0x25ca61 ; add byte ptr [rbp + 1], dh ; ret
0x000002000003fcf9 : cmp eax, 0x298a21 ; add byte ptr [rax - 0x75], cl ; ret 0x850f
0x0000020000600096 : cmp eax, 0x30d ; jg 0x200006000a9 ; mov al, 1 ; ret
0x00000200001cb99e : cmp eax, 0x32 ; jb 0x200001cb979 ; xor eax, eax ; ret
0x00000200000348c7 : cmp eax, 0x349736 ; add byte ptr [rax - 0x39], cl ; ret
0x000002000062e15f : cmp eax, 0x3bffcaea ; or byte ptr [rbp + rax*8 - 1], dh ; ret 0x8348
0x00000200001e7fb0 : cmp eax, 0x4809000f ; add esp, 0x28 ; ret
0x000002000055b787 : cmp eax, 0x4890ffb2 ; add esp, 0x50 ; pop rbp ; ret
0x00000200005ff5cf : cmp eax, 0x48ffc31a ; add esp, 0x40 ; pop rbx ; ret
0x000002000063b75f : cmp eax, 0x48ffc9f8 ; test eax, eax ; je 0x2000063b773 ; call rax
0x00000200001fb33f : cmp eax, 0x48fff37e ; add esp, 0x78 ; ret
0x000002000020b5e1 : cmp eax, 0x50 ; jmp 0x2000020b5ad
0x00000200004dbbd7 : cmp eax, 0x5c ; jne 0x200004dbbd7 ; xor al, al ; ret
0x0000020000044cce : cmp eax, 0x5d ; ret
0x00000200001ddfcd : cmp eax, 0x8148ffeb ; ret
0x000002000010ee49 : cmp eax, 0x8348001f ; ret
0x0000020000779a2a : cmp eax, 0x8348fffe ; ret
0x000002000060f180 : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x4ba
0x000002000060e5d5 : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x558d
0x000002000060e7e7 : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x568d
0x000002000060eccf : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x5ba
0x000002000060e2eb : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x6ba
0x000002000060dfc1 : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x7ba
0x00000200003acd42 : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8189
0x000002000060f58e : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8ba
0x000002000060e216 : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x9ba
0x00000200001bdcfc : cmp eax, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0xaba
0x000002000048424a : cmp eax, 0x8b00000a ; ret 0xe8c1
0x00000200000f8d1c : cmp eax, 0x8b480020 ; ret
0x0000020000171249 : cmp eax, 0x8b48fffa ; ret
0x00000200006071c9 : cmp eax, 0x8b49d233 ; iretd ; call 0x20000231019
0x0000020000680727 : cmp eax, 0x8bff99f6 ; ret
0x0000020000746a4f : cmp eax, 0x8bffbb4c ; ret
0x00000200005ea76f : cmp eax, 0x8bffe9f5 ; ret
0x000002000018121f : cmp eax, 0x8bfff40c ; ret
0x00000200000295ae : cmp eax, 0x8bfffffe ; ret
0x00000200005813f2 : cmp eax, 0x9ee8ffd5 ; ret
0x000002000068768e : cmp eax, 0xa ; jb 0x20000687686 ; ret
0x0000020000629e34 : cmp eax, 0xa ; je 0x20000629e43 ; xor eax, eax ; ret
0x00000200001f625b : cmp eax, 0xa000000 ; je 0x200001f626e ; xor al, al ; ret
0x0000020000496140 : cmp eax, 0xb60f0012 ; ret
0x00000200003cef6d : cmp eax, 0xb70f3174 ; add dword ptr [rax - 1], ecx ; ret 0x8348
0x0000020000434f19 : cmp eax, 0xb9481477 ; ret
0x00000200000bafcd : cmp eax, 0xc4834800 ; pop r12 ; ret
0x000002000020fb1c : cmp eax, 0xcc8ee ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003d24f7 : cmp eax, 0xcd034900 ; jmp rcx
0x000002000042fb8e : cmp eax, 0xd08bffca ; call 0x20000053cac
0x0000020000140955 : cmp eax, 0xe9000000 ; and dl, ch ; add byte ptr [rax], al ; ret
0x0000020000159369 : cmp eax, 0xe990ffef ; ret
0x000002000003f1f6 : cmp eax, 0xf6001274 ; ret
0x0000020000003835 : cmp eax, 0xf6410015 ; ret
0x00000200001f0a85 : cmp eax, 0xfd ; cmova eax, ecx ; ret
0x0000020000059948 : cmp eax, 0xff ; je 0x20000059953 ; ret
0x00000200000edd98 : cmp eax, 0xff ; je 0x200000edda3 ; ret
0x000002000013060a : cmp eax, 0xff ; je 0x2000013061d ; add rsp, 0x28 ; ret
0x00000200001ef539 : cmp eax, 0xff ; jne 0x200001ef548 ; xor eax, eax ; ret
0x00000200005ddefc : cmp eax, 0xff000001 ; ret
0x000002000077839e : cmp eax, 0xffb8aa9d ; jmp 0x20000754654
0x00000200005cb651 : cmp eax, 0xffcf8ed2 ; jmp 0x2000051791b
0x0000020000598f0f : cmp eax, 0xffd69d13 ; add byte ptr [rdi], cl ; test ebp, ecx ; ret
0x0000020000598eb7 : cmp eax, 0xffd6aa13 ; add byte ptr [rdi], cl ; test bl, ch ; ret
0x0000020000584d47 : cmp eax, 0xffdabe8f ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xd202
0x00000200004cadc6 : cmp eax, 0xffe10235 ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0x00000200004ecd5f : cmp eax, 1 ; jbe 0x200004ecd6f ; xor ecx, ecx ; call rax
0x000002000010542b : cmp eax, 1 ; je 0x2000016d691 ; ret
0x0000020000070657 : cmp eax, 1 ; je 0x2000017d2b7 ; ret
0x000002000042876c : cmp eax, 1 ; je 0x20000428777 ; ret
0x000002000048218f : cmp eax, 1 ; je 0x2000048219a ; ret
0x00000200000550cb : cmp eax, 1 ; jle 0x20000177f27 ; ret
0x0000020000055b99 : cmp eax, 1 ; jne 0x20000055ba4 ; ret
0x000002000039f3f1 : cmp eax, 1 ; jne 0x2000039f3fc ; ret
0x00000200005afeb2 : cmp eax, 1 ; jne 0x200005afec4 ; call 0x200001dd66c
0x0000020000668514 : cmp eax, 1 ; jne 0x20000668509 ; add rsp, 0x28 ; ret
0x00000200000684f5 : cmp eax, 2 ; jae 0x20000068500 ; ret
0x0000020000085ebd : cmp eax, 2 ; jl 0x20000085ec8 ; ret
0x00000200000d39b2 : cmp eax, 2 ; jl 0x200000d39bd ; ret
0x00000200006c7ca5 : cmp eax, 3 ; jne 0x200006c7c7b ; xor eax, eax ; ret
0x00000200001bfbc3 : cmp eax, 4 ; je 0x200001bfbd2 ; xor eax, eax ; ret
0x000002000008029a : cmp eax, 5 ; jbe 0x200000802ab ; xor eax, eax ; jmp 0x2000008026d
0x0000020000752ac6 : cmp eax, 5 ; jbe 0x20000752ade ; movzx eax, r8w ; ret
0x00000200001bc7d1 : cmp eax, 6 ; setbe cl ; mov eax, ecx ; ret
0x00000200000daf7b : cmp eax, 8 ; je 0x200000daf95 ; mov eax, r8d ; ret
0x00000200000df029 : cmp eax, dword ptr [r8] ; jb 0x200000df015 ; ret
0x00000200000ee8f9 : cmp eax, dword ptr [rax + rax*8 - 0xb7e18b] ; ret
0x0000020000018d2f : cmp eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000df02a : cmp eax, dword ptr [rax] ; jb 0x200000df014 ; ret
0x000002000043ebca : cmp eax, dword ptr [rax] ; jne 0x2000043ebdd ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001a97bf : cmp eax, dword ptr [rbp + rcx*4 + 0x43] ; inc dword ptr [rsi - 0x75] ; ret 0x4504
0x00000200003fc484 : cmp eax, dword ptr [rbp - 0x75] ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4102
0x00000200003fc68f : cmp eax, dword ptr [rbx + rbp - 0x3f] ; movzx eax, r8w ; ret
0x0000020000444dc3 : cmp eax, dword ptr [rbx + rcx*4 + 0x53] ; or byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000008960d : cmp eax, dword ptr [rcx + 0x18] ; jne 0x20000089609 ; mov al, 1 ; ret
0x00000200001f64a5 : cmp eax, dword ptr [rcx + 0x20] ; jb 0x200001f64b4 ; xor al, al ; ret
0x0000020000629e82 : cmp eax, dword ptr [rcx + 0x30] ; jb 0x20000629e91 ; xor eax, eax ; ret
0x00000200006b5356 : cmp eax, dword ptr [rcx + 8] ; jbe 0x200006b5368 ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000114c07 : cmp eax, dword ptr [rcx - 0x75] ; ret
0x00000200001381f9 : cmp eax, dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000208064 : cmp eax, dword ptr [rdx + 0x40] ; sbb eax, eax ; ret
0x0000020000649829 : cmp eax, eax ; cmovg eax, r8d ; ret
0x00000200006b53c9 : cmp eax, eax ; ja 0x200006b53dc ; mov eax, 1 ; ret
0x0000020000018839 : cmp eax, eax ; jae 0x2000001882b ; xor al, al ; ret
0x00000200001ac2c0 : cmp eax, eax ; jae 0x200001ac2cf ; or eax, 0xffffffff ; ret
0x0000020000029b9c : cmp eax, eax ; jb 0x20000029b9a ; xor eax, eax ; ret
0x000002000003eaca : cmp eax, eax ; jb 0x2000003eac5 ; mov eax, 1 ; ret
0x00000200000867df : cmp eax, eax ; jb 0x200000867d5 ; mov eax, 1 ; ret
0x0000020000092598 : cmp eax, eax ; jb 0x20000092574 ; ret
0x00000200000e85d9 : cmp eax, eax ; jb 0x200000e85c4 ; ret
0x00000200001ac0c6 : cmp eax, eax ; jb 0x200001ac0c1 ; or eax, 0xffffffff ; ret
0x00000200001f869a : cmp eax, eax ; jb 0x200001f8693 ; mov al, 1 ; ret
0x000002000041bc5e : cmp eax, eax ; jb 0x2000041bc58 ; xor al, al ; ret
0x000002000065a15c : cmp eax, eax ; jbe 0x2000065a16f ; mov eax, 0x1e ; ret
0x00000200000bab29 : cmp eax, eax ; je 0x200000bab24 ; cmp rdx, rax ; ja 0x200000bab29 ; ret
0x000002000002f712 : cmp eax, eax ; jne 0x2000002f6df ; ret
0x0000020000031ded : cmp eax, eax ; jne 0x20000031dfc ; or eax, 0xffffffff ; ret
0x000002000003d4f5 : cmp eax, eax ; jne 0x2000003d4d8 ; mov eax, r9d ; ret
0x00000200000c30ef : cmp eax, eax ; jne 0x200000c30fe ; mov rax, r8 ; ret
0x00000200001e3498 : cmp eax, eax ; jne 0x200001e348c ; shr eax, 0x18 ; ret
0x00000200004193e1 : cmp eax, eax ; jne 0x200004193d0 ; xor eax, eax ; ret
0x000002000065862c : cmp eax, eax ; jne 0x2000065860a ; xor eax, eax ; ret
0x00000200006c8fe9 : cmp eax, eax ; jne 0x200006c8fe5 ; xor eax, eax ; ret
0x00000200001f0ed5 : cmp eax, eax ; sete al ; add rsp, 0x28 ; ret
0x00000200003dc30e : cmp eax, ebp ; pop rsp ; jmp 0x200003dc2da
0x00000200004f10ae : cmp eax, ebx ; jbe 0x200004f1076 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006645ec : cmp eax, ebx ; jl 0x200006645bd ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000235bd : cmp eax, ebx ; jne 0x200000235d0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000062ace6 : cmp eax, ebx ; jne 0x2000062acf5 ; inc rdx ; jmp 0x2000062ad08
0x000002000067dd4d : cmp eax, ebx ; jne 0x2000067dd60 ; sub ecx, 0x10 ; jns 0x2000067dd3c ; ret
0x000002000067dd89 : cmp eax, ebx ; jne 0x2000067dd9c ; sub ecx, 0x10 ; jns 0x2000067dd78 ; ret
0x00000200005256ac : cmp eax, ecx ; cmovg eax, ecx ; add rsp, 0x28 ; ret
0x000002000002f703 : cmp eax, ecx ; ja 0x2000002f70c ; ret
0x000002000012ec8a : cmp eax, ecx ; ja 0x2000012ec97 ; sbb eax, eax ; ret
0x00000200001d9482 : cmp eax, ecx ; ja 0x200001d948f ; xor eax, eax ; ret
0x000002000043f083 : cmp eax, ecx ; ja 0x2000043f093 ; mov qword ptr [rdx], r8 ; mov al, 1 ; ret
0x000002000065a18c : cmp eax, ecx ; ja 0x2000065a19f ; mov eax, 0x3c ; ret
0x000002000004b4d0 : cmp eax, ecx ; jae 0x2000004b4e1 ; add rsp, 0x28 ; ret
0x000002000013e7cb : cmp eax, ecx ; jae 0x2000013e7da ; or eax, 0xffffffff ; ret
0x00000200001b6e85 : cmp eax, ecx ; jae 0x200001b6e92 ; mov al, 1 ; ret
0x00000200001d046b : cmp eax, ecx ; jae 0x200001d047a ; or eax, 0xffffffff ; ret
0x00000200001f62b2 : cmp eax, ecx ; jae 0x200001f62ad ; mov rax, rdx ; ret
0x00000200001f62b2 : cmp eax, ecx ; jae 0x200001f62ae ; mov rax, rdx ; ret
0x0000020000202d8e : cmp eax, ecx ; jae 0x20000202d9d ; or eax, 0xffffffff ; ret
0x00000200005054e3 : cmp eax, ecx ; jae 0x200005054f2 ; or eax, 0xffffffff ; ret
0x0000020000740d9d : cmp eax, ecx ; jae 0x20000740dac ; or eax, 0xffffffff ; ret
0x000002000002cd34 : cmp eax, ecx ; jb 0x2000002cd21 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002cd6e : cmp eax, ecx ; jb 0x2000002cd51 ; ret
0x0000020000202965 : cmp eax, ecx ; jb 0x20000202962 ; xor eax, eax ; ret
0x0000020000401d36 : cmp eax, ecx ; jb 0x20000401d4d ; add rsp, 0x28 ; ret
0x0000020000405cce : cmp eax, ecx ; jb 0x20000405cb7 ; mov eax, edx ; ret
0x0000020000405cce : cmp eax, ecx ; jb 0x20000405cb8 ; mov eax, edx ; ret
0x00000200004bd8e4 : cmp eax, ecx ; jb 0x200004bd883 ; ret
0x000002000066bd52 : cmp eax, ecx ; jb 0x2000066bd1b ; jmp 0x2000066bd5e
0x000002000003ea51 : cmp eax, ecx ; jbe 0x2000003ea45 ; xor eax, eax ; ret
0x00000200000c2c78 : cmp eax, ecx ; jbe 0x200000c2c85 ; xor eax, eax ; ret
0x00000200001eed36 : cmp eax, ecx ; jbe 0x200001eed45 ; or eax, 0xffffffff ; ret
0x0000020000211d3e : cmp eax, ecx ; jl 0x20000211d32 ; xor eax, eax ; ret
0x00000200006bb952 : cmp eax, ecx ; jmp qword ptr [rax]
0x0000020000008411 : cmp eax, ecx ; jne 0x2000000840a ; add rsp, 0x28 ; ret
0x0000020000070770 : cmp eax, ecx ; jne 0x200000707a7 ; mov al, 1 ; ret
0x0000020000206715 : cmp eax, ecx ; jne 0x20000206704 ; ret
0x000002000044b20b : cmp eax, ecx ; jne 0x2000044b218 ; xor eax, eax ; ret
0x00000200004847a8 : cmp eax, ecx ; jne 0x200004847b5 ; xor eax, eax ; ret
0x000002000053528a : cmp eax, ecx ; jne 0x2000053529d ; add rsp, 0x40 ; pop rbp ; ret
0x00000200005d68bb : cmp eax, ecx ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x000002000013475f : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000020000074fcc : cmp eax, ecx ; seta al ; ret
0x00000200001eed41 : cmp eax, ecx ; setb al ; ret
0x000002000000379c : cmp eax, ecx ; sete al ; ret
0x0000020000202d99 : cmp eax, ecx ; setne al ; ret
0x00000200004c81f6 : cmp eax, edi ; je 0x200004c8195 ; jmp 0x200004c81c4
0x00000200004c63c5 : cmp eax, edx ; cmovb eax, edx ; mov dword ptr [r9 + 4], eax ; ret
0x00000200000596a5 : cmp eax, edx ; ja 0x200000596ae ; ret
0x00000200000e2cdb : cmp eax, edx ; ja 0x200000e2ce8 ; mov al, 1 ; ret
0x00000200004f8a84 : cmp eax, edx ; ja 0x200004f8a9d ; mov qword ptr [r10], r9 ; xor eax, eax ; ret
0x000002000053646c : cmp eax, edx ; ja 0x20000536479 ; mov eax, ecx ; ret
0x00000200000643b7 : cmp eax, edx ; jb 0x20000064384 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000d9788 : cmp eax, edx ; jb 0x200000d9788 ; add rsp, 0x28 ; ret
0x00000200001337f5 : cmp eax, edx ; jb 0x200001337e6 ; ret
0x00000200001338a8 : cmp eax, edx ; jb 0x20000133898 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000135427 : cmp eax, edx ; jb 0x2000013541f ; ret
0x000002000013582d : cmp eax, edx ; jb 0x20000135823 ; ret
0x00000200001bf4ec : cmp eax, edx ; jb 0x200001bf4e5 ; mov al, 1 ; ret
0x00000200005e2d97 : cmp eax, edx ; jb 0x200005e2d6d ; movzx eax, r8w ; ret
0x000002000067e381 : cmp eax, edx ; jb 0x2000067e357 ; xor eax, eax ; ret
0x0000020000760ecc : cmp eax, edx ; jb 0x20000760ec4 ; ret
0x00000200000790a7 : cmp eax, edx ; jbe 0x200000790b7 ; add qword ptr [rcx + 0x70], r8 ; ret
0x00000200001d3bf4 : cmp eax, edx ; jbe 0x200001d3c4e ; mov r8, r10 ; jmp 0x200001d3c4e
0x0000020000619884 : cmp eax, edx ; jbe 0x20000619897 ; mov eax, 0xc0000023 ; ret
0x000002000000b3d2 : cmp eax, edx ; je 0x2000000b3f3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000402c0 : cmp eax, edx ; je 0x200000402c9 ; ret
0x00000200001dd635 : cmp eax, edx ; je 0x200001dd643 ; add rax, rax ; ret
0x00000200003a2912 : cmp eax, edx ; je 0x200003a2911 ; ret
0x00000200001c1971 : cmp eax, edx ; jl 0x200001c1965 ; or eax, 0xffffffff ; ret
0x00000200002074d5 : cmp eax, edx ; jl 0x200002074ca ; xor eax, eax ; ret
0x000002000021b76c : cmp eax, edx ; jl 0x2000021b754 ; ret
0x0000020000676505 : cmp eax, edx ; jmp 0x2000067653d
0x000002000003e53f : cmp eax, edx ; jne 0x2000003e508 ; lock or qword ptr [r9 + 8], rdx ; ret
0x000002000008238e : cmp eax, edx ; jne 0x20000082387 ; sub rax, r8 ; ret
0x00000200000cc7b2 : cmp eax, edx ; jne 0x200000cc7ce ; mov rax, r9 ; ret
0x00000200001356b8 : cmp eax, edx ; jne 0x200001356c7 ; mov rax, rcx ; ret
0x000002000040bcbe : cmp eax, edx ; jne 0x2000040bcd2 ; mov r10d, r9d ; mov eax, r10d ; ret
0x00000200004e4ef6 : cmp eax, edx ; setbe al ; ret
0x000002000050397f : cmp eax, edx ; sete al ; ret
0x00000200004a9113 : cmp eax, esi ; ret
0x0000020000649828 : cmp eax, r8d ; cmovg eax, r8d ; ret
0x00000200001ac2bf : cmp eax, r8d ; jae 0x200001ac2d0 ; or eax, 0xffffffff ; ret
0x00000200000e85d8 : cmp eax, r8d ; jb 0x200000e85c5 ; ret
0x00000200001ac0c5 : cmp eax, r8d ; jb 0x200001ac0c2 ; or eax, 0xffffffff ; ret
0x000002000041bc5d : cmp eax, r8d ; jb 0x2000041bc59 ; xor al, al ; ret
0x00000200001e3497 : cmp eax, r8d ; jne 0x200001e348d ; shr eax, 0x18 ; ret
0x00000200004193e0 : cmp eax, r8d ; jne 0x200004193d1 ; xor eax, eax ; ret
0x000002000000379b : cmp eax, r9d ; sete al ; ret
0x00000200000a3aea : cmp ebp, dword ptr [rax - 0x9fa8afe] ; ret
0x00000200006a296c : cmp ebp, dword ptr [rsi] ; ret 0x39
0x00000200005cd5ac : cmp ebp, eax ; je 0x200005cd5c7 ; mov rcx, r14 ; call 0x200000597f9
0x00000200004570ad : cmp ebp, ebp ; adc al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000067d5c4 : cmp ebp, ecx ; ret 0
0x00000200001ce16b : cmp ebp, esi ; dec dword ptr [rax - 1] ; ret
0x00000200004b09b5 : cmp ebx, 4 ; je 0x200004b09c5 ; call r12
0x00000200001f328b : cmp ebx, dword ptr [rcx] ; jb 0x200001f3298 ; xor eax, eax ; ret
0x00000200001f3327 : cmp ebx, dword ptr [rcx] ; jb 0x200001f3334 ; xor al, al ; ret
0x00000200000e8c9c : cmp ebx, dword ptr [rdi] ; add byte ptr [rax + 0x3b], cl ; ret 0xbc74
0x0000020000683a5b : cmp ebx, dword ptr [rdi] ; jne 0x20000683a22 ; jmp 0x20000683a6d
0x000002000053050f : cmp ebx, eax ; sete r9b ; mov eax, r9d ; ret
0x00000200001e33b9 : cmp ebx, ecx ; ja 0x200001e339b ; mov dword ptr [r10 + 4], r9d ; ret
0x0000020000017aa2 : cmp ebx, ecx ; jb 0x20000017a9b ; jmp 0x20000017af5
0x00000200001f6f09 : cmp ebx, ecx ; jb 0x200001f6ef6 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005cb5e3 : cmp ebx, ecx ; je 0x200005cb5d6 ; jmp 0x200005178a5
0x00000200001ac317 : cmp ebx, ecx ; seta al ; ret
0x00000200006649c0 : cmp ebx, edx ; jne 0x200006649bd ; jmp 0x200006649d2
0x0000020000167ece : cmp ebx, esi ; jb 0x20000167e97 ; jmp 0x2000004412e
0x00000200000ef7f2 : cmp ecx, 0x12 ; jae 0x200000ef801 ; mov al, 1 ; ret
0x00000200000ef7fa : cmp ecx, 0x14 ; ja 0x200000ef809 ; xor al, al ; ret
0x0000020000118c3a : cmp ecx, 0x1e ; setb al ; ret
0x00000200001f867b : cmp ecx, 0x20 ; jb 0x200001f8670 ; mov rax, r8 ; ret
0x0000020000137a97 : cmp ecx, 0x3a ; jae 0x20000137aab ; movzx eax, cx ; sub eax, edx ; ret
0x00000200003cb487 : cmp ecx, 0x3c ; jb 0x200003cb464 ; mov rax, r8 ; ret
0x00000200007681ff : cmp ecx, 0x40 ; jb 0x200007681ea ; ret
0x00000200003fd27a : cmp ecx, 0x40 ; je 0x200003fd270 ; xor al, al ; ret
0x00000200006429cd : cmp ecx, 0x41 ; jae 0x200006429de ; movzx eax, cx ; ret
0x000002000049cd41 : cmp ecx, 0x61 ; jae 0x2000049cd52 ; movzx eax, cx ; ret
0x0000020000073806 : cmp ecx, 0x7ffffffe ; cmova eax, edx ; ret
0x0000020000134476 : cmp ecx, 0x80 ; setb al ; ret
0x0000020000041e7b : cmp ecx, 0x8009035d ; je 0x20000041e96 ; mov eax, edx ; ret
0x0000020000131a8b : cmp ecx, 0xa000001 ; setbe al ; ret
0x00000200005248ca : cmp ecx, 0xf ; jne 0x200005248db ; mov rax, r8 ; ret
0x0000020000059a7f : cmp ecx, 0xfd ; ja 0x20000059a8e ; mov al, 1 ; ret
0x00000200003f1419 : cmp ecx, 0xfe ; jne 0x20000576217 ; ret
0x000002000065a13d : cmp ecx, 0xff ; jne 0x2000065a150 ; lea eax, dword ptr [r9 + 0xb] ; ret
0x00000200000ef7ab : cmp ecx, 1 ; ja 0x200000ef7a2 ; xor eax, eax ; ret
0x00000200000dc52c : cmp ecx, 1 ; je 0x200000dc53b ; xor al, al ; ret
0x0000020000408009 : cmp ecx, 1 ; je 0x20000408014 ; ret
0x00000200004735f5 : cmp ecx, 1 ; je 0x20000473620 ; ret
0x00000200001b9480 : cmp ecx, 1 ; jne 0x200001b948f ; xor al, al ; ret
0x0000020000463318 : cmp ecx, 1 ; jne 0x20000463335 ; lea eax, dword ptr [rcx + 4] ; ret
0x00000200001f31e0 : cmp ecx, 1 ; setle al ; ret
0x0000020000128591 : cmp ecx, 2 ; jb 0x2000012855c ; jmp 0x2000012853a
0x0000020000470460 : cmp ecx, 2 ; jb 0x20000470446 ; mov al, dl ; ret
0x0000020000470460 : cmp ecx, 2 ; jb 0x20000470447 ; mov al, dl ; ret
0x00000200001bfc13 : cmp ecx, 4 ; jne 0x200001bfc2d ; mov qword ptr [rcx], rdx ; ret
0x000002000047cd99 : cmp ecx, 4 ; jne 0x2000047cda8 ; xor eax, eax ; ret
0x000002000010cdac : cmp ecx, 5 ; lea edx, dword ptr [rax + 0x1f] ; cmove eax, edx ; ret
0x00000200006763eb : cmp ecx, 7 ; jb 0x200006763dd ; add rsp, 0x28 ; ret
0x00000200001a1d66 : cmp ecx, dword ptr [r8] ; jb 0x200001a1d4e ; ret
0x0000020000524871 : cmp ecx, dword ptr [rax - 0x75] ; add cl, byte ptr [rax + 0x3b] ; ret 0x3974
0x00000200001add07 : cmp ecx, dword ptr [rax - 0x75] ; add eax, 0x124769 ; call rax
0x0000020000058cf0 : cmp ecx, dword ptr [rax - 0x75] ; ret
0x000002000074bdd5 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000002000021a908 : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4502
0x000002000058aed1 : cmp ecx, dword ptr [rax - 0x7d] ; ret 0x4518
0x00000200001a1d67 : cmp ecx, dword ptr [rax] ; jb 0x200001a1d4d ; ret
0x000002000067d374 : cmp ecx, dword ptr [rbp - 0x75] ; ret
0x000002000075824f : cmp ecx, dword ptr [rbx + rcx*4 + 5] ; leave ; pop rbp ; ret 0x48ff
0x00000200006da52e : cmp ecx, dword ptr [rbx - 0x3f94b33e] ; sbb dword ptr [rcx - 0x75], eax ; ret 0xff41
0x00000200001fa0ed : cmp ecx, dword ptr [rcx + 0x3b] ; ret 0x1c77
0x00000200001f9f3f : cmp ecx, dword ptr [rcx + 0x3b] ; ret 0x870f
0x000002000004ba7e : cmp ecx, dword ptr [rcx + 0x63] ; ret
0x0000020000619126 : cmp ecx, dword ptr [rcx] ; sete al ; ret
0x0000020000073d4b : cmp ecx, dword ptr [rdi] ; mov dh, 0x47 ; sbb byte ptr [rdx], bh ; ret 0x3674
0x0000020000683c23 : cmp ecx, dword ptr [rdi] ; test dword ptr [rdi], ebx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006b7224 : cmp ecx, dword ptr [rdx + 0x14] ; jb 0x200006b7233 ; xor eax, eax ; ret
0x00000200006b7223 : cmp ecx, dword ptr [rdx + 0x14] ; jb 0x200006b7234 ; xor eax, eax ; ret
0x000002000020caab : cmp ecx, dword ptr [rdx + rax*4 + 8] ; jne 0x2000020ca9e ; mov al, 1 ; ret
0x0000020000479073 : cmp ecx, dword ptr [rdx] ; jne 0x2000047907c ; ret
0x000002000047908f : cmp ecx, dword ptr [rdx] ; jne 0x20000479098 ; ret
0x0000020000040d57 : cmp ecx, dword ptr [rip + 0x2b9e1f] ; jae 0x20000040d68 ; ret
0x000002000007471d : cmp ecx, dword ptr [rip + 0x30aafd] ; sete al ; ret
0x0000020000197937 : cmp ecx, dword ptr [rsi] ; hlt ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200000ecddb : cmp ecx, eax ; cmovbe eax, ecx ; ret
0x00000200001814c5 : cmp ecx, eax ; cmovbe r8d, edx ; mov eax, r8d ; ret
0x000002000041a8be : cmp ecx, eax ; cmovne eax, edx ; ret
0x0000020000008547 : cmp ecx, eax ; ja 0x20000008556 ; sub rax, rcx ; ret
0x00000200000730e2 : cmp ecx, eax ; ja 0x200000730f3 ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200001f497a : cmp ecx, eax ; ja 0x200001f498d ; mov qword ptr [rdx], rcx ; xor eax, eax ; ret
0x000002000041189b : cmp ecx, eax ; ja 0x200004118ae ; sbb eax, eax ; add eax, 2 ; ret
0x00000200001d06a4 : cmp ecx, eax ; jae 0x200001d066f ; xor eax, eax ; ret
0x00000200001f6343 : cmp ecx, eax ; jae 0x200001f6350 ; xor al, al ; ret
0x0000020000745bfc : cmp ecx, eax ; jae 0x20000745c0f ; mov eax, 1 ; ret
0x000002000004144f : cmp ecx, eax ; jb 0x20000041460 ; add rsp, 0x38 ; ret
0x0000020000048b15 : cmp ecx, eax ; jb 0x20000048b08 ; ret
0x0000020000133b7b : cmp ecx, eax ; jb 0x20000133b6f ; mov rax, r10 ; ret
0x00000200001341ac : cmp ecx, eax ; jb 0x20000134199 ; mov rax, r10 ; ret
0x00000200001341ac : cmp ecx, eax ; jb 0x2000013419a ; mov rax, r10 ; ret
0x000002000047e1fe : cmp ecx, eax ; jb 0x2000047e1f9 ; and eax, 0x1f ; ret
0x00000200005f6313 : cmp ecx, eax ; jbe 0x200005f6320 ; xor eax, eax ; ret
0x000002000044cb0b : cmp ecx, eax ; je 0x2000044cb10 ; mov eax, 0xc000000d ; ret
0x00000200005fd20c : cmp ecx, eax ; je 0x200005fd21f ; mov eax, 0xc0000001 ; ret
0x00000200001f5479 : cmp ecx, eax ; jle 0x200001f5491 ; mov r9d, r11d ; mov r8d, edx ; jmp 0x200001f5491
0x00000200000156e8 : cmp ecx, eax ; jne 0x200000156fb ; mov eax, 1 ; ret
0x00000200001979a2 : cmp ecx, eax ; jne 0x20000197990 ; ret
0x00000200001bfeb0 : cmp ecx, eax ; jne 0x200001bfec3 ; mov eax, 1 ; ret
0x00000200001f6489 : cmp ecx, eax ; jne 0x200001f649c ; mov eax, 1 ; ret
0x00000200003e33cd : cmp ecx, eax ; jne 0x200003e33e0 ; mov eax, edx ; jmp 0x200003e3393
0x00000200005fd1a3 : cmp ecx, eax ; jne 0x200005fd219 ; mov eax, 0x102 ; ret
0x000002000061ec90 : cmp ecx, eax ; jne 0x2000061ec85 ; xor eax, eax ; ret
0x0000020000506d37 : cmp ecx, eax ; sbb eax, eax ; and eax, 0xc0000004 ; ret
0x0000020000076575 : cmp ecx, eax ; setbe al ; ret
0x0000020000071410 : cmp ecx, ebp ; jbe 0x2000007137f ; jmp 0x200000713e6
0x000002000041f1ee : cmp ecx, ebx ; jb 0x2000041f1da ; ret
0x000002000002449f : cmp ecx, ebx ; jne 0x200000244b2 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006574ab : cmp ecx, ecx ; jb 0x20000657499 ; xor ecx, ecx ; mov rax, rcx ; ret
0x000002000068eb1b : cmp ecx, ecx ; jne 0x2000068eb12 ; mov eax, 0xc0000225 ; ret
0x000002000065a17d : cmp ecx, edx ; ja 0x2000065a190 ; mov eax, 0x32 ; ret
0x00000200001468a7 : cmp ecx, edx ; jb 0x20000146864 ; ret
0x00000200001d694d : cmp ecx, edx ; jb 0x200001d694b ; add rsp, 0x38 ; ret
0x0000020000206a01 : cmp ecx, edx ; jb 0x200002069f1 ; xor eax, eax ; ret
0x000002000046068f : cmp ecx, edx ; jb 0x200004606a1 ; jmp 0x200004606b0
0x0000020000652867 : cmp ecx, edx ; jb 0x2000065283e ; mov al, 1 ; ret
0x000002000067615a : cmp ecx, edx ; jb 0x20000676151 ; ret
0x00000200006bb1f1 : cmp ecx, edx ; jb 0x200006bb1ea ; xor eax, eax ; ret
0x0000020000785b91 : cmp ecx, edx ; jb 0x20000785b76 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e2ce5 : cmp ecx, edx ; jbe 0x200000e2ce5 ; xor eax, eax ; ret
0x00000200001e384c : cmp ecx, edx ; je 0x200001e3837 ; shr eax, 0x18 ; ret
0x0000020000230b46 : cmp ecx, edx ; jge 0x20000230b29 ; xor eax, eax ; ret
0x0000020000230b4e : cmp ecx, edx ; jl 0x20000230b53 ; mov eax, 1 ; ret
0x0000020000411f31 : cmp ecx, edx ; jl 0x20000411f43 ; setle al ; inc eax ; ret
0x000002000002c5be : cmp ecx, edx ; jne 0x2000002c5bb ; sub rax, rcx ; ret
0x00000200001cdfe2 : cmp ecx, edx ; jne 0x200001cdfdf ; mov qword ptr [r8], rax ; ret
0x00000200003df529 : cmp ecx, edx ; jne 0x200003df53b ; ret
0x000002000048c3b4 : cmp ecx, edx ; jne 0x2000048c3c1 ; mov al, 1 ; ret
0x00000200004c019f : cmp ecx, edx ; jne 0x200004c0193 ; add rsp, 0x28 ; ret
0x00000200005d5b97 : cmp ecx, edx ; sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x000002000021de14 : cmp ecx, edx ; setb r8b ; mov eax, r8d ; ret
0x0000020000068112 : cmp ecx, edx ; sete al ; ret
0x00000200003fdfb5 : cmp ecx, esp ; dec dword ptr [rax - 0x75] ; ret
0x00000200001e384b : cmp ecx, r10d ; je 0x200001e3838 ; shr eax, 0x18 ; ret
0x00000200001388fd : cmp edi, 0xff ; jne 0x200001388c8 ; jmp 0x200001388e5
0x00000200005a8f2b : cmp edi, dword ptr [rsp + rbx + 0xf] ; mov edx, 0xd288e225 ; call qword ptr [rbx]
0x00000200004b2781 : cmp edi, ebp ; ret 0x48ff
0x000002000016ad1d : cmp edi, ecx ; dec dword ptr [rax + 0x63] ; ret
0x000002000013d884 : cmp edi, edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000200003a7ca0 : cmp edi, edi ; dec dword ptr [rbp - 0x75] ; ret 0x8b49
0x000002000046388a : cmp edi, edi ; ret 0x8348
0x0000020000503541 : cmp edi, esp ; ret 0x48ff
0x000002000062e16d : cmp edx, 0x10 ; jb 0x2000062e16a ; xor al, al ; ret
0x00000200003e5018 : cmp edx, 0x45474150 ; je 0x200003e5029 ; ret
0x00000200000737f3 : cmp edx, 0x7fffffff ; ja 0x20000073818 ; ret
0x000002000001b79b : cmp edx, 0xe ; je 0x2000001b785 ; add rsp, 0x38 ; ret
0x0000020000014019 : cmp edx, 1 ; je 0x20000014045 ; mov rax, r8 ; ret
0x0000020000476410 : cmp edx, 1 ; je 0x20000476423 ; lea rax, qword ptr [rcx + 0x4c] ; ret
0x000002000064049c : cmp edx, 1 ; je 0x200006404af ; lea rax, qword ptr [rcx + 0x20] ; ret
0x00000200006404b4 : cmp edx, 1 ; je 0x200006404c7 ; lea rax, qword ptr [rcx + 0x24] ; ret
0x00000200006c000e : cmp edx, 1 ; je 0x200006c001d ; xor eax, eax ; ret
0x00000200006b6962 : cmp edx, 1 ; setl al ; ret
0x0000020000475b97 : cmp edx, 2 ; jb 0x20000475b93 ; xor eax, eax ; ret
0x0000020000429d14 : cmp edx, 2 ; je 0x2000059a2a3 ; ret
0x0000020000429d20 : cmp edx, 2 ; je 0x2000059a2b5 ; ret
0x00000200000e9bf6 : cmp edx, 2 ; sete al ; ret
0x00000200005035bc : cmp edx, 3 ; je 0x200005035c7 ; ret
0x000002000012e2a0 : cmp edx, dword ptr [r8 + 0x40] ; jb 0x2000012e287 ; ret
0x000002000012e29f : cmp edx, dword ptr [r8 + 0x40] ; jb 0x2000012e288 ; ret
0x00000200006198b6 : cmp edx, dword ptr [r8] ; jb 0x2000061989b ; xor eax, eax ; ret
0x000002000012e2a1 : cmp edx, dword ptr [rax + 0x40] ; jb 0x2000012e286 ; ret
0x00000200006cdab9 : cmp edx, dword ptr [rax - 1] ; dec dword ptr [rax - 0x75] ; ret
0x000002000006cd3b : cmp edx, dword ptr [rax] ; jae 0x2000006cd48 ; mov al, 1 ; ret
0x00000200006198b7 : cmp edx, dword ptr [rax] ; jb 0x2000061989a ; xor eax, eax ; ret
0x00000200001e4639 : cmp edx, dword ptr [rcx + 0x10] ; jbe 0x200001e464b ; mov qword ptr [rcx + 0x10], rdx ; ret
0x00000200001141cf : cmp edx, dword ptr [rcx + 0x434] ; sete al ; ret
0x0000020000051a45 : cmp edx, dword ptr [rcx + 8] ; je 0x20000051a58 ; lea rax, qword ptr [rdx - 0x20] ; ret
0x00000200006aa62c : cmp edx, dword ptr [rcx - 0x6e69ff96] ; push 0 ; ret 0x6a93
0x0000020000067ca9 : cmp edx, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000425431 : cmp edx, dword ptr [rdi] ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000047cd7c : cmp edx, eax ; cmovb edx, eax ; mov eax, edx ; ret
0x00000200000e2cae : cmp edx, eax ; cmove r10d, eax ; mov eax, r10d ; jmp 0x200000e2c9c
0x000002000002220c : cmp edx, eax ; ja 0x2000002223b ; ret
0x00000200000bab17 : cmp edx, eax ; ja 0x200000bab24 ; ret
0x00000200001f7d32 : cmp edx, eax ; ja 0x200001f7d41 ; sub r8d, r10d ; jmp 0x200001f7d4c
0x00000200002160c0 : cmp edx, eax ; jae 0x200002160ee ; xor eax, eax ; ret
0x0000020000038581 : cmp edx, eax ; jb 0x20000038579 ; ret
0x000002000003fb65 : cmp edx, eax ; jb 0x2000003fb55 ; xor eax, eax ; ret
0x00000200001111f7 : cmp edx, eax ; jb 0x20000111206 ; mov al, r8b ; ret
0x00000200001ac0f5 : cmp edx, eax ; jb 0x200001ac0ef ; xor eax, eax ; ret
0x00000200001ac11d : cmp edx, eax ; jb 0x200001ac117 ; xor eax, eax ; ret
0x00000200001f7e16 : cmp edx, eax ; jb 0x200001f7e14 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001f86b6 : cmp edx, eax ; jb 0x200001f86b3 ; mov al, 1 ; ret
0x000002000044f3d3 : cmp edx, eax ; jb 0x2000044f3c2 ; mov dword ptr [rcx + 0x7c], r8d ; ret
0x00000200000b282b : cmp edx, eax ; jbe 0x200000b2838 ; xor eax, eax ; ret
0x0000020000399e9c : cmp edx, eax ; jbe 0x20000399e94 ; ret
0x0000020000438f42 : cmp edx, eax ; jbe 0x20000438f3c ; ret
0x000002000006a212 : cmp edx, eax ; je 0x2000006a26e ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x0000020000652b85 : cmp edx, eax ; je 0x20000652b98 ; mov eax, 0xc0000034 ; ret
0x00000200000e9a3f : cmp edx, eax ; jl 0x200000e9a4c ; mov al, 1 ; ret
0x00000200002160e4 : cmp edx, eax ; jne 0x200002160cd ; mov eax, 1 ; ret
0x00000200004cc57a : cmp edx, eax ; jne 0x200004cc574 ; ret
0x0000020000632d57 : cmp edx, eax ; jne 0x20000632d4a ; ret
0x000002000067653a : cmp edx, eax ; jne 0x2000067654c ; xor eax, eax ; ret
0x0000020000745c25 : cmp edx, eax ; jne 0x20000745c15 ; xor eax, eax ; ret
0x0000020000009b9e : cmp edx, eax ; mov r8, rax ; jne 0x20000009bc6 ; ret
0x000002000050da28 : cmp edx, eax ; sbb eax, eax ; and eax, 0xc0000004 ; ret
0x0000020000643a96 : cmp edx, eax ; setae al ; ret
0x00000200000df716 : cmp edx, ebx ; jb 0x200000df700 ; xor eax, eax ; ret
0x00000200001f7cf6 : cmp edx, ebx ; jb 0x200001f7cdb ; ret
0x0000020000636983 : cmp edx, ecx ; dec dword ptr [rax + 0x3b] ; ret 0x840f
0x00000200000344b9 : cmp edx, ecx ; ja 0x200000344c6 ; sbb eax, eax ; ret
0x00000200000f11e4 : cmp edx, ecx ; ja 0x200000f11ed ; ret
0x00000200000df726 : cmp edx, ecx ; jae 0x200000df715 ; mov rax, r8 ; ret
0x00000200005dfc0b : cmp edx, ecx ; jae 0x200005dfc18 ; mov al, 1 ; ret
0x00000200000125f4 : cmp edx, ecx ; jb 0x200000125d9 ; ret
0x0000020000042d99 : cmp edx, ecx ; jb 0x20000042d8d ; xor eax, eax ; ret
0x0000020000046bc4 : cmp edx, ecx ; jb 0x20000046bba ; mov eax, 0x10 ; ret
0x0000020000090705 : cmp edx, ecx ; jbe 0x20000090716 ; add rsp, 0x38 ; ret
0x000002000012fdf2 : cmp edx, ecx ; jbe 0x2000012fdeb ; mov dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x0000020000218aab : cmp edx, ecx ; jbe 0x20000218abe ; mov eax, 1 ; ret
0x0000020000113200 : cmp edx, ecx ; je 0x20000113234 ; mov eax, 0xc00000bb ; ret
0x00000200006cbf67 : cmp edx, ecx ; je 0x200006cbf73 ; xor eax, eax ; ret
0x0000020000423d2f : cmp edx, ecx ; jne 0x20000423d27 ; lea eax, dword ptr [r8 + 0x48] ; ret
0x00000200000d9c19 : cmp edx, ecx ; seta al ; ret
0x00000200001f4969 : cmp edx, edi ; and al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x000002000001e8de : cmp edx, edx ; jb 0x2000001e8cb ; xor eax, eax ; ret
0x00000200001e7ae9 : cmp edx, edx ; jb 0x200001e7ad9 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f86f9 : cmp edx, edx ; jb 0x200001f86d5 ; mov al, 1 ; ret
0x000002000068981c : cmp edx, edx ; jb 0x2000068982b ; mov dword ptr [r8], edx ; ret
0x0000020000037fa0 : cmp edx, edx ; jne 0x20000037fb3 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000001e8dd : cmp edx, r10d ; jb 0x2000001e8cc ; xor eax, eax ; ret
0x000002000068981b : cmp edx, r10d ; jb 0x2000068982c ; mov dword ptr [r8], edx ; ret
0x0000020000038580 : cmp edx, r8d ; jb 0x2000003857a ; ret
0x00000200001ac0f4 : cmp edx, r8d ; jb 0x200001ac0f0 ; xor eax, eax ; ret
0x00000200001ac11c : cmp edx, r8d ; jb 0x200001ac118 ; xor eax, eax ; ret
0x000002000044f3d2 : cmp edx, r8d ; jb 0x2000044f3c3 ; mov dword ptr [rcx + 0x7c], r8d ; ret
0x0000020000438f41 : cmp edx, r8d ; jbe 0x20000438f3d ; ret
0x0000020000042d98 : cmp edx, r9d ; jb 0x20000042d8e ; xor eax, eax ; ret
0x0000020000042d97 : cmp edx, r9d ; jb 0x20000042d8f ; xor eax, eax ; ret
0x00000200000d5b0b : cmp esi, 0x8b4cffff ; ret
0x000002000051c281 : cmp esi, dword ptr [rdx] ; ret
0x0000020000181da9 : cmp esi, eax ; dec dword ptr [rax - 0x7f] ; ret 0xfff
0x0000020000181e8e : cmp esi, eax ; dec dword ptr [rbx + rcx*4 + 0x44] ; and al, 0x58 ; call rax
0x00000200001cda34 : cmp esi, eax ; jne 0x200001cda49 ; mov rcx, rsi ; call 0x200004c9c59
0x000002000020a1d1 : cmp esi, ebp ; out -1, eax ; add rsp, 0x38 ; ret
0x000002000018875a : cmp esi, ecx ; dec dword ptr [rax - 0x75] ; ret
0x000002000011f184 : cmp esi, ecx ; jb 0x2000011f1d2 ; inc edx ; jmp 0x2000011f16c
0x0000020000188789 : cmp esi, ecx ; push rsi ; ret
0x000002000058e109 : cmp esi, edi ; dec dword ptr [rax - 0x7d] ; ret
0x000002000052914b : cmp esi, esi ; je 0x200005291a0 ; call 0x2000014f187
0x000002000000d83a : cmp esi, esi ; ret
0x00000200003aad95 : cmp esi, esi ; ret 0x7401
0x0000020000450cdc : cmp esi, esi ; ret 0xf3f
0x00000200001bdd12 : cmp esp, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x8189
0x000002000060e301 : cmp esp, 0x85000029 ; ror byte ptr [rdi], 0x44 ; ret 0x9ce9
0x00000200001be23b : cmp esp, 0x8b000029 ; ret 0x16eb
0x00000200001be0ed : cmp esp, 0x8b000029 ; ret 0xb5eb
0x0000020000588b52 : cmp esp, edi ; dec dword ptr [rdi] ; ret
0x00000200000dbbc2 : cmp qword ptr [r9 + 0x20], r8 ; je 0x200000dbbcf ; ret
0x0000020000066c99 : cmp qword ptr [rax + 0x10], 0 ; jne 0x20000066cce ; xor al, al ; ret
0x000002000010190a : cmp qword ptr [rax + 0x20], r8 ; jne 0x2000010191d ; mov rax, rcx ; ret
0x000002000041b3e8 : cmp qword ptr [rax + 8], 0 ; je 0x2000041b3fb ; xor eax, eax ; ret
0x00000200006b7303 : cmp qword ptr [rax], 0 ; jne 0x200006b72fb ; xor al, al ; ret
0x0000020000053c99 : cmp qword ptr [rax], rax ; je 0x20000053c96 ; mov al, 1 ; ret
0x00000200000e93fb : cmp qword ptr [rax], rax ; je 0x200000e940a ; xor al, al ; ret
0x00000200004afa3d : cmp qword ptr [rax], rax ; je 0x200004afa4f ; call 0x200000d2308
0x0000020000042e57 : cmp qword ptr [rax], rax ; jne 0x20000042e65 ; xor eax, eax ; ret
0x0000020000071088 : cmp qword ptr [rax], rax ; jne 0x2000007109b ; add rsp, 0x28 ; ret
0x00000200000c1e40 : cmp qword ptr [rax], rax ; jne 0x200000c1e53 ; add rsp, 0x28 ; ret
0x0000020000050899 : cmp qword ptr [rax], rdx ; cmovne edx, r8d ; mov eax, edx ; ret
0x0000020000037446 : cmp qword ptr [rax], rdx ; jne 0x20000037466 ; mov qword ptr [rax], r8 ; ret
0x00000200004fa064 : cmp qword ptr [rcx + 0x18], 0 ; jne 0x200004fa073 ; ret
0x00000200004fa078 : cmp qword ptr [rcx + 0x18], 0 ; jne 0x200004fa087 ; ret
0x00000200003c97e6 : cmp qword ptr [rcx + 0x20], rax ; sbb eax, eax ; add eax, 2 ; ret
0x000002000044cb30 : cmp qword ptr [rcx + 0x30], r8 ; jne 0x2000044cb43 ; ret
0x000002000001e151 : cmp qword ptr [rcx + 0x30], rax ; jne 0x2000001e162 ; mov al, 1 ; ret
0x00000200001a9984 : cmp qword ptr [rcx + 0x30], rax ; setne al ; ret
0x000002000001c355 : cmp qword ptr [rcx + 8], -1 ; jl 0x2000001c368 ; mov al, 1 ; ret
0x00000200004d37c7 : cmp qword ptr [rcx + 8], rax ; je 0x200004d37d8 ; xor eax, eax ; ret
0x00000200006b72b7 : cmp qword ptr [rcx], 0 ; jne 0x200006b72ae ; xor al, al ; ret
0x00000200001f0f0a : cmp qword ptr [rcx], 0 ; setne al ; ret
0x00000200001a9c3e : cmp qword ptr [rcx], r8 ; jne 0x200001a9c4d ; xor eax, eax ; ret
0x00000200006c1cb7 : cmp qword ptr [rcx], rax ; jne 0x200006c1cb3 ; ret
0x0000020000024996 : cmp qword ptr [rcx], rax ; sete al ; ret
0x000002000005930c : cmp qword ptr [rcx], rax ; setne al ; ret
0x0000020000024590 : cmp qword ptr [rcx], rcx ; jne 0x200000245a8 ; mov rax, rcx ; ret
0x00000200003bb72c : cmp qword ptr [rcx], rcx ; jne 0x200003bb737 ; ret
0x00000200003bb768 : cmp qword ptr [rcx], rcx ; jne 0x200003bb773 ; ret
0x0000020000423d0c : cmp qword ptr [rcx], rcx ; jne 0x20000423d1b ; xor eax, eax ; ret
0x0000020000074758 : cmp qword ptr [rdx + 8], rax ; je 0x20000074765 ; ret
0x000002000002ccce : cmp qword ptr [rdx], r8 ; ja 0x2000002ccd2 ; xor al, al ; ret
0x00000200001f7cf5 : cmp r10, r11 ; jb 0x200001f7cdc ; ret
0x00000200006c06af : cmp r10b, 0x1b ; ja 0x200006c06c4 ; movzx eax, r10b ; jmp 0x200006c06d0
0x00000200006c077c : cmp r10b, 0x1b ; ja 0x200006c0791 ; movzx eax, r10b ; jmp 0x200006c079d
0x00000200006c0830 : cmp r10b, 0x1b ; ja 0x200006c0845 ; movzx eax, r10b ; jmp 0x200006c0851
0x00000200006c08d3 : cmp r10b, 0x1b ; ja 0x200006c08e8 ; movzx eax, r10b ; jmp 0x200006c08f4
0x00000200005dfc0a : cmp r10d, ecx ; jae 0x200005dfc19 ; mov al, 1 ; ret
0x00000200000df715 : cmp r10d, r11d ; jb 0x200000df701 ; xor eax, eax ; ret
0x00000200001f7d31 : cmp r10d, r8d ; ja 0x200001f7d42 ; sub r8d, r10d ; jmp 0x200001f7d4d
0x00000200001f328a : cmp r11, qword ptr [rcx] ; jb 0x200001f3299 ; xor eax, eax ; ret
0x00000200001f3326 : cmp r11, qword ptr [rcx] ; jb 0x200001f3335 ; xor al, al ; ret
0x00000200006404c0 : cmp r11b, al ; lea rax, qword ptr [rcx + 0x40] ; ret
0x0000020000073cd1 : cmp r11b, bpl ; ret 0xc032
0x00000200001e33b8 : cmp r11d, r9d ; ja 0x200001e339c ; mov dword ptr [r10 + 4], r9d ; ret
0x00000200001ac316 : cmp r11d, r9d ; seta al ; ret
0x00000200003b4641 : cmp r14b, r14b ; ret
0x00000200001f64a4 : cmp r8, qword ptr [rcx + 0x20] ; jb 0x200001f64b5 ; xor al, al ; ret
0x0000020000629e81 : cmp r8, qword ptr [rcx + 0x30] ; jb 0x20000629e92 ; xor eax, eax ; ret
0x00000200001337f4 : cmp r8, r10 ; jb 0x200001337e7 ; ret
0x00000200001d3bf3 : cmp r8, r10 ; jbe 0x200001d3c4f ; mov r8, r10 ; jmp 0x200001d3c4f
0x000002000003ea50 : cmp r8, r9 ; jbe 0x2000003ea46 ; xor eax, eax ; ret
0x0000020000029b9b : cmp r8, rax ; jb 0x20000029b9b ; xor eax, eax ; ret
0x00000200001f8699 : cmp r8, rax ; jb 0x200001f8694 ; mov al, 1 ; ret
0x000002000003d4f4 : cmp r8, rax ; jne 0x2000003d4d9 ; mov eax, r9d ; ret
0x00000200001d9481 : cmp r8, rcx ; ja 0x200001d9490 ; xor eax, eax ; ret
0x000002000013e7ca : cmp r8, rcx ; jae 0x2000013e7db ; or eax, 0xffffffff ; ret
0x00000200001d046a : cmp r8, rcx ; jae 0x200001d047b ; or eax, 0xffffffff ; ret
0x00000200005054e2 : cmp r8, rcx ; jae 0x200005054f3 ; or eax, 0xffffffff ; ret
0x0000020000740d9c : cmp r8, rcx ; jae 0x20000740dad ; or eax, 0xffffffff ; ret
0x0000020000206714 : cmp r8, rcx ; jne 0x20000206705 ; ret
0x00000200004847a7 : cmp r8, rcx ; jne 0x200004847b6 ; xor eax, eax ; ret
0x0000020000074fcb : cmp r8, rcx ; seta al ; ret
0x00000200000596a4 : cmp r8, rdx ; ja 0x200000596af ; ret
0x000002000021b76b : cmp r8, rdx ; jl 0x2000021b755 ; ret
0x000002000008238d : cmp r8, rdx ; jne 0x20000082388 ; sub rax, r8 ; ret
0x00000200004e4ef5 : cmp r8, rdx ; setbe al ; ret
0x000002000050397e : cmp r8, rdx ; sete al ; ret
0x00000200005248ad : cmp r8b, 0xf ; ja 0x2000052487a ; xor al, al ; ret
0x0000020000111d5f : cmp r8b, bpl ; ret 4
0x00000200007677d3 : cmp r8b, cl ; jae 0x200007677e4 ; or eax, 0xffffffff ; ret
0x00000200000b29e8 : cmp r8b, cl ; jne 0x200000b29f3 ; ret
0x00000200007677de : cmp r8b, cl ; seta al ; ret
0x00000200001b446d : cmp r8b, dl ; jne 0x200001b44cf ; mov r8b, dl ; jmp 0x200001b44c5
0x0000020000504365 : cmp r8b, r13b ; je 0x2000050432f ; ret
0x00000200001cb99d : cmp r8d, 0x32 ; jb 0x200001cb97a ; xor eax, eax ; ret
0x000002000068768d : cmp r8d, 0xa ; jb 0x20000687687 ; ret
0x00000200001ef538 : cmp r8d, 0xff ; jne 0x200001ef549 ; xor eax, eax ; ret
0x000002000039f3f0 : cmp r8d, 1 ; jne 0x2000039f3fd ; ret
0x00000200001bfbc2 : cmp r8d, 4 ; je 0x200001bfbd3 ; xor eax, eax ; ret
0x000002000002f711 : cmp r8d, eax ; jne 0x2000002f6e0 ; ret
0x0000020000031dec : cmp r8d, eax ; jne 0x20000031dfd ; or eax, 0xffffffff ; ret
0x0000020000202d8d : cmp r8d, ecx ; jae 0x20000202d9e ; or eax, 0xffffffff ; ret
0x000002000002cd6d : cmp r8d, ecx ; jb 0x2000002cd52 ; ret
0x00000200004bd8e3 : cmp r8d, ecx ; jb 0x200004bd884 ; ret
0x00000200001eed35 : cmp r8d, ecx ; jbe 0x200001eed46 ; or eax, 0xffffffff ; ret
0x0000020000439b87 : cmp r8d, ecx ; seta al ; ret
0x00000200001eed40 : cmp r8d, ecx ; setb al ; ret
0x0000020000202d98 : cmp r8d, ecx ; setne al ; ret
0x00000200001bf4eb : cmp r8d, edx ; jb 0x200001bf4e6 ; mov al, 1 ; ret
0x0000020000760ecb : cmp r8d, edx ; jb 0x20000760ec5 ; ret
0x0000020000676504 : cmp r8d, edx ; jmp 0x2000067653e
0x00000200005e2d96 : cmp r8d, r10d ; jb 0x200005e2d6e ; movzx eax, r8w ; ret
0x00000200004c81f5 : cmp r8d, r15d ; je 0x200004c8196 ; jmp 0x200004c81c5
0x00000200001b6e84 : cmp r8d, r9d ; jae 0x200001b6e93 ; mov al, 1 ; ret
0x0000020000405ccd : cmp r8d, r9d ; jb 0x20000405cb8 ; mov eax, edx ; ret
0x0000020000405ccd : cmp r8d, r9d ; jb 0x20000405cb9 ; mov eax, edx ; ret
0x000002000066bd51 : cmp r8d, r9d ; jb 0x2000066bd1c ; jmp 0x2000066bd5f
0x0000020000211d3d : cmp r8d, r9d ; jl 0x20000211d33 ; xor eax, eax ; ret
0x000002000067dd96 : cmp r8d, r9d ; seta al ; ret
0x000002000067dd5a : cmp r8d, r9d ; setb al ; ret
0x00000200001f0f72 : cmp r8d, r9d ; sete al ; ret
0x000002000067dd95 : cmp r8w, r9w ; seta al ; ret
0x000002000067dd59 : cmp r8w, r9w ; setb al ; ret
0x0000020000408008 : cmp r9, 1 ; je 0x20000408015 ; ret
0x0000020000133b7a : cmp r9, r8 ; jb 0x20000133b70 ; mov rax, r10 ; ret
0x00000200001341ab : cmp r9, r8 ; jb 0x2000013419a ; mov rax, r10 ; ret
0x00000200001341ab : cmp r9, r8 ; jb 0x2000013419b ; mov rax, r10 ; ret
0x000002000004813e : cmp r9b, r13b ; ret 0xfffd
0x00000200001b947f : cmp r9d, 1 ; jne 0x200001b9490 ; xor al, al ; ret
0x0000020000128590 : cmp r9d, 2 ; jb 0x2000012855d ; jmp 0x2000012853b
0x000002000047045f : cmp r9d, 2 ; jb 0x20000470447 ; mov al, dl ; ret
0x000002000047045f : cmp r9d, 2 ; jb 0x20000470448 ; mov al, dl ; ret
0x00000200001bfc12 : cmp r9d, 4 ; jne 0x200001bfc2e ; mov qword ptr [rcx], rdx ; ret
0x000002000020caaa : cmp r9d, dword ptr [rdx + rax*4 + 8] ; jne 0x2000020ca9f ; mov al, 1 ; ret
0x0000020000040d56 : cmp r9d, dword ptr [rip + 0x2b9e1f] ; jae 0x20000040d69 ; ret
0x0000020000676159 : cmp r9d, edx ; jb 0x20000676152 ; ret
0x000002000048c3b3 : cmp r9d, edx ; jne 0x2000048c3c2 ; mov al, 1 ; ret
0x00000200006bb1f0 : cmp r9d, r10d ; jb 0x200006bb1eb ; xor eax, eax ; ret
0x0000020000230b45 : cmp r9d, r10d ; jge 0x20000230b2a ; xor eax, eax ; ret
0x000002000041f1ed : cmp r9d, r11d ; jb 0x2000041f1db ; ret
0x0000020000763e1a : cmp rax, 0x100 ; jb 0x20000763dd4 ; ret
0x0000020000686c37 : cmp rax, 0x17 ; jb 0x20000686c32 ; or eax, 0xffffffff ; ret
0x00000200004ecd5e : cmp rax, 1 ; jbe 0x200004ecd70 ; xor ecx, ecx ; call rax
0x0000020000055b98 : cmp rax, 1 ; jne 0x20000055ba5 ; ret
0x00000200000684f4 : cmp rax, 2 ; jae 0x20000068501 ; ret
0x0000020000114c06 : cmp rax, qword ptr [r9 - 0x75] ; ret
0x000002000008960c : cmp rax, qword ptr [rcx + 0x18] ; jne 0x2000008960a ; mov al, 1 ; ret
0x0000020000208063 : cmp rax, qword ptr [rdx + 0x40] ; sbb eax, eax ; ret
0x0000020000018838 : cmp rax, r8 ; jae 0x2000001882c ; xor al, al ; ret
0x0000020000092597 : cmp rax, r8 ; jb 0x20000092575 ; ret
0x00000200000c30ee : cmp rax, r8 ; jne 0x200000c30ff ; mov rax, r8 ; ret
0x000002000065862b : cmp rax, r8 ; jne 0x2000065860b ; xor eax, eax ; ret
0x00000200006c8fe8 : cmp rax, r8 ; jne 0x200006c8fe6 ; xor eax, eax ; ret
0x0000020000008410 : cmp rax, r9 ; jne 0x2000000840b ; add rsp, 0x28 ; ret
0x00000200001f33b1 : cmp rax, r9 ; sete al ; ret
0x000002000062ace5 : cmp rax, rbx ; jne 0x2000062acf6 ; inc rdx ; jmp 0x2000062ad09
0x00000200001f62b1 : cmp rax, rcx ; jae 0x200001f62ae ; mov rax, rdx ; ret
0x00000200001f62b1 : cmp rax, rcx ; jae 0x200001f62af ; mov rax, rdx ; ret
0x0000020000202964 : cmp rax, rcx ; jb 0x20000202963 ; xor eax, eax ; ret
0x0000020000401d35 : cmp rax, rcx ; jb 0x20000401d4e ; add rsp, 0x28 ; ret
0x00000200000c2c77 : cmp rax, rcx ; jbe 0x200000c2c86 ; xor eax, eax ; ret
0x000002000007076f : cmp rax, rcx ; jne 0x200000707a8 ; mov al, 1 ; ret
0x000002000044b20a : cmp rax, rcx ; jne 0x2000044b219 ; xor eax, eax ; ret
0x000002000013475e : cmp rax, rcx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000200000d9787 : cmp rax, rdx ; jb 0x200000d9789 ; add rsp, 0x28 ; ret
0x0000020000135426 : cmp rax, rdx ; jb 0x20000135420 ; ret
0x000002000013582c : cmp rax, rdx ; jb 0x20000135824 ; ret
0x000002000067e380 : cmp rax, rdx ; jb 0x2000067e358 ; xor eax, eax ; ret
0x00000200000790a6 : cmp rax, rdx ; jbe 0x200000790b8 ; add qword ptr [rcx + 0x70], r8 ; ret
0x00000200000402bf : cmp rax, rdx ; je 0x200000402ca ; ret
0x00000200001dd634 : cmp rax, rdx ; je 0x200001dd644 ; add rax, rax ; ret
0x00000200002074d4 : cmp rax, rdx ; jl 0x200002074cb ; xor eax, eax ; ret
0x0000020000683a5a : cmp rbx, qword ptr [r15] ; jne 0x20000683a23 ; jmp 0x20000683a6e
0x0000020000017aa1 : cmp rbx, rcx ; jb 0x20000017a9c ; jmp 0x20000017af6
0x00000200006649bf : cmp rbx, rdx ; jne 0x200006649be ; jmp 0x200006649d3
0x00000200007681fe : cmp rcx, 0x40 ; jb 0x200007681eb ; ret
0x0000020000073805 : cmp rcx, 0x7ffffffe ; cmova eax, edx ; ret
0x0000020000059a7e : cmp rcx, 0xfd ; ja 0x20000059a8f ; mov al, 1 ; ret
0x0000020000619125 : cmp rcx, qword ptr [rcx] ; sete al ; ret
0x0000020000479072 : cmp rcx, qword ptr [rdx] ; jne 0x2000047907d ; ret
0x000002000047908e : cmp rcx, qword ptr [rdx] ; jne 0x20000479099 ; ret
0x0000020000652866 : cmp rcx, r10 ; jb 0x2000065283f ; mov al, 1 ; ret
0x000002000041a8bd : cmp rcx, r8 ; cmovne eax, edx ; ret
0x0000020000048b14 : cmp rcx, r8 ; jb 0x20000048b09 ; ret
0x000002000047e1fd : cmp rcx, r8 ; jb 0x2000047e1fa ; and eax, 0x1f ; ret
0x0000020000076574 : cmp rcx, r8 ; setbe al ; ret
0x00000200000ecdda : cmp rcx, rax ; cmovbe eax, ecx ; ret
0x0000020000008546 : cmp rcx, rax ; ja 0x20000008557 ; sub rax, rcx ; ret
0x00000200000730e1 : cmp rcx, rax ; ja 0x200000730f4 ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200001d06a3 : cmp rcx, rax ; jae 0x200001d0670 ; xor eax, eax ; ret
0x000002000004144e : cmp rcx, rax ; jb 0x20000041461 ; add rsp, 0x38 ; ret
0x00000200005f6312 : cmp rcx, rax ; jbe 0x200005f6321 ; xor eax, eax ; ret
0x00000200001979a1 : cmp rcx, rax ; jne 0x20000197991 ; ret
0x00000200003e33cc : cmp rcx, rax ; jne 0x200003e33e1 ; mov eax, edx ; jmp 0x200003e3394
0x000002000061ec8f : cmp rcx, rax ; jne 0x2000061ec86 ; xor eax, eax ; ret
0x00000200001468a6 : cmp rcx, rdx ; jb 0x20000146865 ; ret
0x00000200001d694c : cmp rcx, rdx ; jb 0x200001d694c ; add rsp, 0x38 ; ret
0x000002000046068e : cmp rcx, rdx ; jb 0x200004606a2 ; jmp 0x200004606b1
0x000002000002c5bd : cmp rcx, rdx ; jne 0x2000002c5bc ; sub rax, rcx ; ret
0x00000200001cdfe1 : cmp rcx, rdx ; jne 0x200001cdfe0 ; mov qword ptr [r8], rax ; ret
0x00000200003df528 : cmp rcx, rdx ; jne 0x200003df53c ; ret
0x00000200004c019e : cmp rcx, rdx ; jne 0x200004c0194 ; add rsp, 0x28 ; ret
0x0000020000068111 : cmp rcx, rdx ; sete al ; ret
0x00000200001388fc : cmp rdi, 0xff ; jne 0x200001388c9 ; jmp 0x200001388e6
0x00000200000737f2 : cmp rdx, 0x7fffffff ; ja 0x20000073819 ; ret
0x000002000006cd3a : cmp rdx, qword ptr [r8] ; jae 0x2000006cd49 ; mov al, 1 ; ret
0x00000200001f86f8 : cmp rdx, r10 ; jb 0x200001f86d6 ; mov al, 1 ; ret
0x00000200000e2cad : cmp rdx, r8 ; cmove r10d, eax ; mov eax, r10d ; jmp 0x200000e2c9d
0x00000200002160bf : cmp rdx, r8 ; jae 0x200002160ef ; xor eax, eax ; ret
0x0000020000399e9b : cmp rdx, r8 ; jbe 0x20000399e95 ; ret
0x00000200004cc579 : cmp rdx, r8 ; jne 0x200004cc575 ; ret
0x0000020000632d56 : cmp rdx, r8 ; jne 0x20000632d4b ; ret
0x0000020000745c24 : cmp rdx, r8 ; jne 0x20000745c16 ; xor eax, eax ; ret
0x0000020000090704 : cmp rdx, r9 ; jbe 0x20000090717 ; add rsp, 0x38 ; ret
0x000002000002220b : cmp rdx, rax ; ja 0x2000002223c ; ret
0x00000200000bab16 : cmp rdx, rax ; ja 0x200000bab25 ; ret
0x000002000003fb64 : cmp rdx, rax ; jb 0x2000003fb56 ; xor eax, eax ; ret
0x00000200001111f6 : cmp rdx, rax ; jb 0x20000111207 ; mov al, r8b ; ret
0x00000200001f86b5 : cmp rdx, rax ; jb 0x200001f86b4 ; mov al, 1 ; ret
0x00000200000b282a : cmp rdx, rax ; jbe 0x200000b2839 ; xor eax, eax ; ret
0x0000020000009b9d : cmp rdx, rax ; mov r8, rax ; jne 0x20000009bc7 ; ret
0x0000020000643a95 : cmp rdx, rax ; setae al ; ret
0x00000200000344b8 : cmp rdx, rcx ; ja 0x200000344c7 ; sbb eax, eax ; ret
0x00000200000df725 : cmp rdx, rcx ; jae 0x200000df716 ; mov rax, r8 ; ret
0x00000200000125f3 : cmp rdx, rcx ; jb 0x200000125da ; ret
0x0000020000423d2e : cmp rdx, rcx ; jne 0x20000423d28 ; lea eax, dword ptr [r8 + 0x48] ; ret
0x00000200000d9c18 : cmp rdx, rcx ; seta al ; ret
0x000002000052914a : cmp rsi, r14 ; je 0x200005291a1 ; call 0x2000014f188
0x0000020000188759 : cmp si, cx ; dec dword ptr [rax - 0x75] ; ret
0x00000200000407e0 : cmp word ptr [r8], r10w ; jne 0x200000407f1 ; xor eax, eax ; ret
0x000002000012b530 : cmp word ptr [rcx + 2], ax ; jb 0x2000012b541 ; mov al, 1 ; ret
0x0000020000686268 : cmp word ptr [rcx + rax*2], 0x20 ; mov dword ptr [rdx], eax ; jne 0x20000686242 ; ret
0x0000020000134230 : cmp word ptr [rdx], 0 ; jne 0x2000013421e ; mov rax, rcx ; ret
0x00000200001358b5 : cmp word ptr [rdx], r11w ; jne 0x200001358c8 ; mov rax, rcx ; ret
0x000002000045d9ba : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; mov al, 1 ; add rsp, 0x38 ; ret
0x000002000004b513 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000017cbf : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000141675 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add cl, ch ; add cl, al ; add byte ptr [rax], al ; ret
0x000002000014379b : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x0000020000420dcb : cmpsb byte ptr [rsi], byte ptr [rdi] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011f957 : cmpsb byte ptr [rsi], byte ptr [rdi] ; and al, 0 ; ret
0x0000020000622549 : cmpsb byte ptr [rsi], byte ptr [rdi] ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006b732e : cmpsb byte ptr [rsi], byte ptr [rdi] ; insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x000002000056ad34 : cmpsb byte ptr [rsi], byte ptr [rdi] ; jae 0x2000056ad25 ; inc dword ptr [rbp + 0x33] ; in al, -0x17 ; ret 0xe673
0x00000200005963d6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; lea edi, dword ptr [rbx + 0x3ae990ff] ; ret
0x0000020000206241 : cmpsb byte ptr [rsi], byte ptr [rdi] ; loope 0x2000020624a ; add rsp, 0x28 ; ret
0x0000020000117d4b : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; xor eax, eax ; ret
0x00000200003e9bd6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; push rbp ; salc ; dec dword ptr [rax - 0x75] ; ret
0x000002000005e5f6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret
0x0000020000592ab6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0x48ff
0x00000200006d9243 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xe8ff
0x00000200006b40dc : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xf7ff
0x00000200006b40e2 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xff
0x00000200006176de : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffb0
0x000002000018592e : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff0
0x00000200003af2f6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff2
0x00000200004abd86 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff8
0x00000200000efed6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffff
0x0000020000515b23 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sar bh, 0x8a ; ret
0x00000200004b7d0d : cmpsb byte ptr [rsi], byte ptr [rdi] ; sar bh, 0x8b ; ret
0x000002000012f766 : cmpsb byte ptr [rsi], byte ptr [rdi] ; sbb al, 0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004beed6 : cmpsb byte ptr [rsi], byte ptr [rdi] ; xchg eax, esp ; ret 0xe9ff
0x00000200006d92be : cmpsb byte ptr fs:[rsi], byte ptr [rdi] ; ret 0xff
0x0000020000626d45 : cmpsd dword ptr [esi], dword ptr [edi] ; dec dword ptr [rax - 0x79] ; sbb dh, dh ; ret
0x00000200003c70e6 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, 0 ; add dh, dh ; ret
0x00000200004e0b65 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add al, 0xd5 ; inc dword ptr [rbp - 0x74838725] ; ret
0x000002000003af80 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200000726c3 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x0000020000141695 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; add cl, ch ; loop 0x2000014166c ; add byte ptr [rax], al ; ret
0x000002000014369b : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000013e781 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rsi], 0 ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200000e4f81 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x3b], cl ; ret
0x0000020000143695 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014364c ; add byte ptr [rax], al ; ret
0x0000020000650d6d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add eax, dword ptr [rax] ; add bh, bh ; ret
0x000002000051087b : cmpsd dword ptr [rsi], dword ptr [rdi] ; call 0x200001403e4
0x000002000051087a : cmpsd dword ptr [rsi], dword ptr [rdi] ; call 0x200001403e5
0x000002000062b29f : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax + 0x3b] ; ret
0x0000020000626d47 : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x79] ; sbb dh, dh ; ret
0x0000020000654dcf : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000200006d32db : cmpsd dword ptr [rsi], dword ptr [rdi] ; dec esp ; add rsp, 0x38 ; ret
0x000002000050ff81 : cmpsd dword ptr [rsi], dword ptr [rdi] ; fdivp st(7) ; call 0x200000bc255
0x00000200001657e5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; in ax, dx ; dec dword ptr [rax - 9] ; ret 0xfffc
0x0000020000435561 : cmpsd dword ptr [rsi], dword ptr [rdi] ; je 0x20000435580 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200003b1d35 : cmpsd dword ptr [rsi], dword ptr [rdi] ; jmp rdi
0x0000020000526aef : cmpsd dword ptr [rsi], dword ptr [rdi] ; lea r8d, dword ptr [rdx + 0x50] ; call 0x2000014f4c8
0x00000200005be419 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov edx, esi ; mov rcx, r9 ; call rax
0x00000200005be443 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov rcx, r10 ; call rax
0x0000020000428219 : cmpsd dword ptr [rsi], dword ptr [rdi] ; mov rcx, rdi ; call 0x2000004eb07
0x00000200001546a4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or al, byte ptr [rax] ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000231d22 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000200000062c4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; or eax, dword ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x000002000039c8b5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; out -0xd, eax ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x000002000069115d : cmpsd dword ptr [rsi], dword ptr [rdi] ; out dx, eax ; ret
0x0000020000638c09 : cmpsd dword ptr [rsi], dword ptr [rdi] ; pop rsi ; out dx, eax ; dec dword ptr [rbx - 0x98fdba4] ; ret
0x00000200005c1daa : cmpsd dword ptr [rsi], dword ptr [rdi] ; push qword ptr [rdx] ; ret
0x00000200005b9703 : cmpsd dword ptr [rsi], dword ptr [rdi] ; push rsi ; ret
0x000002000009eaa5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000200006b4041 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x1ff
0x00000200006b4060 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x33ff
0x0000020000754b4e : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x45ff
0x00000200006b3fa4 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xa8ff
0x00000200006b4090 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xebff
0x000002000047296d : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffbd
0x00000200004b07d5 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xffff
0x00000200004b7c85 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sar bh, 0x8b ; ret
0x0000020000132515 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sbb dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000016e64a : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; dec esp ; mov eax, 1 ; ret
0x0000020000185493 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stosb byte ptr [rdi], al ; lock dec dword ptr [rax - 0x75] ; retf ; call 0x200001c1729
0x00000200004cbb42 : cmpsd dword ptr [rsi], dword ptr [rdi] ; xor edx, edx ; call qword ptr [rdi]
0x0000020000526aee : cmpsq qword ptr [rsi], qword ptr [rdi] ; lea r8d, dword ptr [rdx + 0x50] ; call 0x2000014f4c9
0x00000200004cbb41 : cmpsq qword ptr [rsi], qword ptr [rdi] ; xor edx, edx ; call qword ptr [rdi]
0x000002000063218a : cmpxchg bh, bh ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000064b0f : cmpxchg dword ptr [r9 + 0x318], ecx ; ret
0x000002000004c22f : cmpxchg dword ptr [rax], ecx ; jne 0x2000004c241 ; mov al, 1 ; ret
0x000002000004c255 : cmpxchg dword ptr [rax], ecx ; jne 0x2000004c264 ; mov al, 1 ; ret
0x0000020000018a3d : cmpxchg dword ptr [rax], edx ; jne 0x20000018a2e ; add rsp, 0x28 ; ret
0x000002000040f621 : cmpxchg dword ptr [rcx + 0x1c8], ecx ; ret
0x000002000002f70d : cmpxchg dword ptr [rcx + 0x30], edx ; cmp r8d, eax ; jne 0x2000002f6e4 ; ret
0x0000020000064b10 : cmpxchg dword ptr [rcx + 0x318], ecx ; ret
0x00000200001ab41e : cmpxchg dword ptr [rcx + rax*8], ecx ; ret
0x000002000005980f : cmpxchg dword ptr [rcx], eax ; jne 0x20000059822 ; add rsp, 0x28 ; ret
0x000002000007e95f : cmpxchg dword ptr [rcx], eax ; jne 0x2000007e940 ; ret
0x00000200000c2d2f : cmpxchg dword ptr [rcx], eax ; jne 0x200000c2d4c ; add rsp, 0x28 ; ret
0x000002000007128b : cmpxchg dword ptr [rcx], ecx ; jne 0x2000007129e ; ret
0x00000200000e8631 : cmpxchg dword ptr [rcx], ecx ; jne 0x200000e8644 ; add rsp, 0x28 ; ret
0x00000200000684f1 : cmpxchg dword ptr [rcx], edx ; cmp rax, 2 ; jae 0x20000068504 ; ret
0x0000020000012ebb : cmpxchg dword ptr [rcx], edx ; jne 0x20000012eba ; ret
0x000002000002db14 : cmpxchg dword ptr [rcx], edx ; jne 0x2000002db22 ; ret
0x000002000004ebe7 : cmpxchg dword ptr [rcx], edx ; jne 0x2000004ebf2 ; ret
0x0000020000053b90 : cmpxchg dword ptr [rcx], edx ; jne 0x20000053ba2 ; mov al, 1 ; ret
0x000002000005cb2a : cmpxchg dword ptr [rcx], edx ; jne 0x2000005cb3d ; add rsp, 0x28 ; ret
0x00000200000bc264 : cmpxchg dword ptr [rcx], edx ; jne 0x200000bc277 ; add rsp, 0x28 ; ret
0x00000200003fc9f3 : cmpxchg dword ptr [rcx], edx ; jne 0x200003fc9fe ; ret
0x000002000020e9c2 : cmpxchg dword ptr [rcx], edx ; ret
0x0000020000012557 : cmpxchg dword ptr [rdx], ecx ; jne 0x20000012552 ; ret
0x0000020000029d00 : cmpxchg dword ptr [rdx], ecx ; jne 0x20000029cf7 ; add rsp, 0x28 ; ret
0x000002000004c22e : cmpxchg qword ptr [r8], rcx ; jne 0x2000004c242 ; mov al, 1 ; ret
0x000002000004c254 : cmpxchg qword ptr [r8], rcx ; jne 0x2000004c265 ; mov al, 1 ; ret
0x00000200001ab41d : cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x000002000007128a : cmpxchg qword ptr [r9], rcx ; jne 0x2000007129f ; ret
0x000002000040f620 : cmpxchg qword ptr [rcx + 0x1c8], r9 ; ret
0x000002000007e95e : cmpxchg qword ptr [rcx], r8 ; jne 0x2000007e941 ; ret
0x0000020000012eba : cmpxchg qword ptr [rcx], rdx ; jne 0x20000012ebb ; ret
0x000002000002db13 : cmpxchg qword ptr [rcx], rdx ; jne 0x2000002db23 ; ret
0x000002000004ebe6 : cmpxchg qword ptr [rcx], rdx ; jne 0x2000004ebf3 ; ret
0x0000020000053b8f : cmpxchg qword ptr [rcx], rdx ; jne 0x20000053ba3 ; mov al, 1 ; ret
0x00000200003fc9f2 : cmpxchg qword ptr [rcx], rdx ; jne 0x200003fc9ff ; ret
0x000002000020e9c1 : cmpxchg qword ptr [rcx], rdx ; ret
0x0000020000012556 : cmpxchg qword ptr [rdx], rcx ; jne 0x20000012553 ; ret
0x00000200001491e8 : cmpxchg16b xmmword ptr [r11] ; jne 0x200001491d9 ; mov rax, r10 ; pop rbx ; ret
0x00000200001491e9 : cmpxchg8b qword ptr [rbx] ; jne 0x200001491d8 ; mov rax, r10 ; pop rbx ; ret
0x00000200001491e9 : cmpxchg8b qword ptr [rbx] ; jne 0x200001491da ; mov rax, r10 ; pop rbx ; ret
0x0000020000149132 : cmpxchg8b qword ptr [rdx] ; jne 0x20000149120 ; mov rax, r8 ; pop rbx ; ret
0x0000020000149177 : cmpxchg8b qword ptr [rdx] ; jne 0x2000014916d ; mov rax, r8 ; pop rbx ; ret
0x00000200005418d6 : cqo ; fcos ; ret
0x000002000010de41 : cqo ; idiv rcx ; ret
0x0000020000621d04 : cqo ; int 0xff
0x000002000013feab : cvtpi2ps xmm0, mm1 ; ret
0x000002000005b7b7 : cvtpi2ps xmm0, qword ptr [rax] ; mov rdx, rsi ; call 0x200000979d8
0x000002000005b7b6 : cvtpi2ps xmm0, qword ptr ss:[rax] ; mov rdx, rsi ; call 0x200000979d9
0x000002000013fea6 : cvtps2pi mm1, xmm0 ; cvtsi2sd xmm0, rcx ; ret
0x000002000013fea9 : cvtsi2sd xmm0, rcx ; ret
0x000002000009a01c : cwde ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x0000020000177b30 : cwde ; add al, 0 ; nop ; jmp 0x20000053dfc
0x000002000006d13f : cwde ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200004dfb5c : cwde ; add al, byte ptr [rax] ; add byte ptr [rbx], bh ; ret
0x0000020000127acb : cwde ; add bl, byte ptr [rbx] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000063ab51 : cwde ; add byte ptr [rax + 0x3b], cl ; ret 0x1076
0x0000020000417b1b : cwde ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x0000020000118f87 : cwde ; add byte ptr [rax + rax], al ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200001abbba : cwde ; add byte ptr [rax], ah ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000048e3c0 : cwde ; add byte ptr [rax], al ; add al, ch ; imul eax ; ret 0x8aff
0x000002000052a471 : cwde ; add byte ptr [rax], al ; add al, ch ; push rax ; ret 0x48ff
0x00000200001aa181 : cwde ; add byte ptr [rax], al ; add al, ch ; push rsi ; ret
0x00000200000ea794 : cwde ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000006b2d2 : cwde ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200000cc83e : cwde ; add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x000002000009aae1 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200000aa755 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x31], cl ; add cl, byte ptr [rbp + 0x3b] ; ret 0x840f
0x000002000044de47 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200001942a6 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000002000057df30 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; cmp dh, dh ; ret
0x000002000010168a : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp 0x1ffc158d928
0x00000200003b5cf7 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000064c8f1 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; sbb al, ch ; ret
0x00000200001b29fb : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7b], cl ; leave ; je 0x200001b2a0f ; call rcx
0x00000200001f92b5 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004b85b9 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4410
0x00000200003cfb37 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200004b864a : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x00000200003994b8 : cwde ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x0000020000166e0d : cwde ; add byte ptr [rax], al ; add byte ptr [rax], cl ; inc rdx ; jmp 0x20000166dba
0x00000200000e267d : cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x00000200000d17dc : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000200004a7fde : cwde ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x9489
0x0000020000625db6 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xce75
0x0000020000017eca : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rbp ; ret
0x000002000072b89d : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x00000200001779a6 : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x40e9
0x00000200005cef3b : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7cb7efbe], cl ; ret 0xff14
0x0000020000651e0d : cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4118
0x0000020000545f8b : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x000002000042ade0 : cwde ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000004f565 : cwde ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; stosd dword ptr [rdi], eax ; ret 0x8a45
0x00000200001a15e9 : cwde ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200001414b5 : cwde ; add byte ptr [rax], al ; add cl, ch ; ret 0xc9
0x00000200004b5ee4 : cwde ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000062d650 : cwde ; add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0x00000200000e0a02 : cwde ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000075d926 : cwde ; add byte ptr [rbp + rcx*4 + 5], cl ; sub dword ptr [rbx], ebx ; ret 0x48ff
0x000002000016e63b : cwde ; add byte ptr [rcx + 3], cl ; xor byte ptr [rax + 0x3b], cl ; ret
0x000002000022f684 : cwde ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x00000200001434b5 : cwde ; add dword ptr [rax], eax ; add cl, ch ; ret 0xa9
0x0000020000732728 : cwde ; add eax, 0x83480000 ; ret
0x000002000073ab93 : cwde ; add eax, 0x83490000 ; ret 0x4804
0x000002000022e96f : cwde ; add eax, 0x8b490000 ; ret
0x000002000073ddaf : cwde ; add eax, 0x8b490000 ; ret 0x894c
0x000002000022defc : cwde ; add eax, 0x8b490000 ; ret 0x8b44
0x000002000022c2f5 : cwde ; add eax, 0x8b490000 ; ret 0x8b49
0x0000020000225888 : cwde ; add eax, 0x8b490000 ; ret 0x8f8b
0x000002000072c94d : cwde ; add eax, 0x8b4c0000 ; ret
0x00000200002268c4 : cwde ; add eax, 0x8b4d0000 ; ret
0x0000020000735af2 : cwde ; add eax, 0x8b4d0000 ; ret 0x8b45
0x000002000011bf56 : cwde ; add rax, rbx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200001f5255 : cwde ; add rax, rdi ; add rsp, 0x50 ; pop rdi ; ret
0x000002000014f02d : cwde ; add rsp, 0x68 ; ret
0x00000200005125a5 : cwde ; call 0x200001403e4
0x00000200005125a4 : cwde ; call 0x200001403e5
0x000002000020e07c : cwde ; call qword ptr [rsi]
0x0000020000768caf : cwde ; call rcx
0x000002000019b6bf : cwde ; cli ; hlt ; dec dword ptr [rbx + 0x23413042] ; ret
0x000002000020bf21 : cwde ; fcomp dword ptr [rdi] ; add byte ptr [rax - 0x7f], cl ; ret
0x0000020000677434 : cwde ; in eax, dx ; dec dword ptr [rax - 0x73] ; shr r8b, 0x80 ; ret 0xffa4
0x00000200001669a7 : cwde ; in eax, dx ; push rax ; xadd qword ptr [r9 + 0x40], r8 ; ret
0x00000200006761d9 : cwde ; inc dword ptr [rbp + 0x33] ; fild dword ptr [rbp - 0x75] ; ret
0x000002000075888c : cwde ; insb byte ptr [rdi], dx ; ret 0x66ff
0x00000200004aa774 : cwde ; jmp rsp
0x000002000003ce6a : cwde ; lock add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000007e174 : cwde ; lock add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200001d05cf : cwde ; lock inc dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x00000200004594a5 : cwde ; mov esp, 0x490045a1 ; add eax, eax ; jmp rax
0x000002000051522e : cwde ; mov qword ptr [rbp - 0x60], r14 ; call 0x20000140548
0x00000200001b9d3b : cwde ; not byte ptr [rip + 0x3750000] ; xor al, al ; ret
0x0000020000115cf9 : cwde ; or rax, r9 ; or rax, rcx ; ret
0x00000200001a99a1 : cwde ; out -1, eax ; add rsp, 0x38 ; ret
0x000002000002ebf6 : cwde ; pop rax ; add byte ptr [rax], al ; ret
0x000002000050aae4 : cwde ; pop rax ; ret
0x0000020000176a6a : cwde ; popfq ; in eax, dx ; inc dword ptr [rcx - 1] ; ret 0x8348
0x000002000002f0dc : cwde ; ret
0x0000020000117b24 : cwde ; ret 0x3e
0x00000200006da183 : cwde ; ret 0x40ff
0x00000200006da090 : cwde ; ret 0x44ff
0x00000200004752f4 : cwde ; ret 0x48ff
0x00000200006077e4 : cwde ; ret 0x85ff
0x00000200004beb7a : cwde ; ret 0xe9ff
0x0000020000501f29 : cwde ; ret 8
0x0000020000536b28 : cwde ; sar bh, 0x85 ; ror byte ptr [rdi], 0x88 ; ret 0
0x00000200004b8b1b : cwde ; sar bh, 0x8b ; ret
0x0000020000138004 : cwde ; sbb dword ptr [rax], eax ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200006a8c7c : cwde ; stc ; ret
0x00000200004b7924 : cwde ; stosb byte ptr [rdi], al ; sar bh, 0x8b ; ret
0x0000020000035364 : cwde ; sub eax, 0x8b480008 ; ret
0x00000200004af0e4 : cwde ; xchg eax, edx ; ret
0x000002000020ade4 : cwde ; xor edx, 0xffffffff ; add rsp, 0x60 ; pop rbx ; ret
0x00000200003ef585 : dec byte ptr [r8 - 1] ; ret 0x8d48
0x00000200000dc44f : dec byte ptr [rax + 0x21] ; sub byte ptr [r8 - 0x80], al ; call qword ptr [rcx]
0x000002000015954a : dec byte ptr [rax + 0x23] ; ret 0xba48
0x000002000001cc0d : dec byte ptr [rax + 0x63] ; enter -0x74bf, -0x7c ; mov al, al ; ret 1
0x0000020000648650 : dec byte ptr [rax + 0x63] ; ret 0x8d4e
0x0000020000683665 : dec byte ptr [rax + 0xf] ; ret
0x0000020000681e87 : dec byte ptr [rax + 3] ; ret
0x0000020000739811 : dec byte ptr [rax - 0x2d] ; ret 0x341
0x0000020000224aff : dec byte ptr [rax - 0x2d] ; ret 0x8341
0x000002000073404a : dec byte ptr [rax - 0x2d] ; ret 0xc383
0x00000200000ba059 : dec byte ptr [rax - 0x75] ; ret
0x000002000047fe05 : dec byte ptr [rax - 0x75] ; retf ; cmovb r14, rdi ; jmp 0x2000047fddb
0x00000200001630c9 : dec byte ptr [rax - 0x77] ; jl 0x200001630fb ; and byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000215689 : dec byte ptr [rax - 0x7b] ; leave ; je 0x2000021569b ; add dword ptr [rcx], r11d ; ret
0x000002000073fedf : dec byte ptr [rax - 0x7d] ; ret
0x000002000002f08e : dec byte ptr [rax - 0x7d] ; ret 0xe858
0x00000200003ef586 : dec byte ptr [rax - 1] ; ret 0x8d48
0x00000200004fd074 : dec byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000072ffb6 : dec byte ptr [rbp + 3] ; ret 0x894c
0x000002000072fc79 : dec byte ptr [rbp + 3] ; ret 0xbe48
0x00000200000d7377 : dec byte ptr [rbx] ; add bl, ch ; ret 0xcccc
0x00000200006486ec : dec byte ptr [rcx + 0x3b] ; ret 0x8f0f
0x00000200000a843a : dec byte ptr [rcx - 0x3f] ; call qword ptr [rax]
0x000002000039c1b2 : dec byte ptr [rcx - 0x74b7f7ba] ; ret
0x00000200006b489d : dec byte ptr [rcx - 0x75] ; ret 0x894d
0x000002000007df30 : dec byte ptr [rcx - 0x75] ; ret 0xf48
0x0000020000533c89 : dec byte ptr [rcx] ; add byte ptr [rbp - 0x74dc8725], al ; ret
0x000002000022cccb : dec byte ptr [rdi] ; scasd eax, dword ptr [rdi] ; sar edi, cl ; ret
0x00000200003f141b : dec byte ptr [rdi] ; test ebp, esp ; sbb byte ptr [r8], r8b ; ret
0x000002000000731d : dec byte ptr [rdi] ; xchg eax, ebx ; ret
0x00000200004b6763 : dec byte ptr [rdi] ; xchg eax, esp ; ror dword ptr [rdi], -0x4a ; ret
0x0000020000206263 : dec byte ptr [rdx] ; add rsp, 0x28 ; ret
0x000002000051e5be : dec byte ptr [rsi] ; ret
0x00000200000d7376 : dec byte ptr cs:[rbx] ; add bl, ch ; ret 0xcccc
0x00000200001abb4b : dec dword ptr [r8 + 0x33] ; ret
0x00000200004c13e3 : dec dword ptr [r8 + 0x3b] ; ret
0x0000020000023cc6 : dec dword ptr [r8 + 3] ; ret 0x3b48
0x00000200001a6be2 : dec dword ptr [r8 - 0x73] ; ret
0x0000020000627311 : dec dword ptr [r8 - 0x7b] ; ret 0xde75
0x00000200006869cb : dec dword ptr [r8 - 0x7d] ; ret
0x00000200004a0552 : dec dword ptr [r8 - 0x7d] ; ret 0xf10
0x00000200000439c1 : dec dword ptr [r8] ; ret
0x00000200000c25ea : dec dword ptr [rax + 0x1e4] ; ret
0x00000200000710aa : dec dword ptr [rax + 0x1e6] ; ret
0x00000200001d7c22 : dec dword ptr [rax + 0x1e88] ; ret
0x0000020000076369 : dec dword ptr [rax + 0x23] ; ret
0x00000200000314f4 : dec dword ptr [rax + 0x23] ; ret 0x3348
0x00000200000b6fcd : dec dword ptr [rax + 0x23] ; ret 0x8348
0x000002000017226c : dec dword ptr [rax + 0x23] ; ret 0x8948
0x0000020000746d56 : dec dword ptr [rax + 0x23] ; ret 0xba48
0x0000020000746d3a : dec dword ptr [rax + 0x23] ; ret 0xc148
0x00000200005b9ae3 : dec dword ptr [rax + 0x2b] ; ret
0x00000200003caddd : dec dword ptr [rax + 0x2b] ; ret 0x149
0x000002000016cd57 : dec dword ptr [rax + 0x2b] ; ret 0x8948
0x00000200005b9a9a : dec dword ptr [rax + 0x2b] ; ret 0x8949
0x00000200000ad68e : dec dword ptr [rax + 0x2b] ; ret 0x8b41
0x000002000058046f : dec dword ptr [rax + 0x2b] ; ret 0xc148
0x00000200003da67b : dec dword ptr [rax + 0x33] ; enter -0x72b8, 5 ; jp 0x200003da6f6 ; ret 0x48ff
0x0000020000103f37 : dec dword ptr [rax + 0x33] ; ret
0x0000020000184ee8 : dec dword ptr [rax + 0x33] ; ret 0xb70f
0x0000020000053759 : dec dword ptr [rax + 0x33] ; ret 0xfe25
0x000002000073716f : dec dword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0xc383
0x0000020000475b8b : dec dword ptr [rax + 0x39] ; or byte ptr [rsi + rcx - 1], dh ; ret 0x8348
0x00000200000ecdd9 : dec dword ptr [rax + 0x3b] ; enter 0x460f, -0x3f ; ret
0x000002000003c582 : dec dword ptr [rax + 0x3b] ; ret
0x0000020000401d2f : dec dword ptr [rax + 0x3b] ; ret 0x1077
0x00000200006c6e4c : dec dword ptr [rax + 0x3b] ; ret 0x1675
0x000002000063695b : dec dword ptr [rax + 0x3b] ; ret 0x1875
0x000002000061e6d1 : dec dword ptr [rax + 0x3b] ; ret 0x2274
0x00000200004b9d5e : dec dword ptr [rax + 0x3b] ; ret 0x2377
0x000002000044333a : dec dword ptr [rax + 0x3b] ; ret 0x5577
0x0000020000586ff2 : dec dword ptr [rax + 0x3b] ; ret 0x576
0x00000200003ef1a1 : dec dword ptr [rax + 0x3b] ; ret 0x577
0x0000020000423063 : dec dword ptr [rax + 0x3b] ; ret 0x6777
0x0000020000462be6 : dec dword ptr [rax + 0x3b] ; ret 0x6877
0x000002000040edb8 : dec dword ptr [rax + 0x3b] ; ret 0x6f77
0x0000020000033be2 : dec dword ptr [rax + 0x3b] ; ret 0x820f
0x000002000044e41b : dec dword ptr [rax + 0x3b] ; ret 0x830f
0x0000020000103b66 : dec dword ptr [rax + 0x3b] ; ret 0x840f
0x00000200000f86a5 : dec dword ptr [rax + 0x3b] ; ret 0x850f
0x000002000008f9ac : dec dword ptr [rax + 0x3b] ; ret 0x860f
0x00000200003b3e00 : dec dword ptr [rax + 0x3b] ; ret 0x870f
0x00000200006c6e37 : dec dword ptr [rax + 0x3b] ; ret 0x975
0x00000200004cc5d5 : dec dword ptr [rax + 0x3b] ; ret 0xa74
0x00000200001834f1 : dec dword ptr [rax + 0x3b] ; ret 0xc74
0x0000020000622e89 : dec dword ptr [rax + 0x3b] ; ret 0xd75
0x0000020000170015 : dec dword ptr [rax + 0x3b] ; ret 0xf49
0x000002000003fb63 : dec dword ptr [rax + 0x3b] ; sal byte ptr [rdx - 0x1a], 1 ; xor eax, eax ; ret
0x0000020000170b30 : dec dword ptr [rax + 0x3b] ; sal dword ptr [rcx + rcx + 0x49], 0x3b ; ret
0x000002000015c91d : dec dword ptr [rax + 0x63] ; ret
0x000002000039c88f : dec dword ptr [rax + 0x63] ; ret 0x8348
0x000002000039c8b8 : dec dword ptr [rax + 0x63] ; ret 0x8d48
0x000002000002c228 : dec dword ptr [rax + 0x63] ; ret 0xb60f
0x0000020000022108 : dec dword ptr [rax + 0xb] ; ret
0x00000200000e85a5 : dec dword ptr [rax + 0xb] ; ret 0x44c7
0x0000020000085708 : dec dword ptr [rax + 0xb] ; ret 0x8949
0x00000200003a085d : dec dword ptr [rax + 0xb] ; ret 0x894c
0x00000200002016fb : dec dword ptr [rax + 0xb] ; ret 0x8b45
0x0000020000512247 : dec dword ptr [rax + 0xb] ; ret 0xc148
0x0000020000071295 : dec dword ptr [rax + 0xc] ; ret
0x00000200000a5c43 : dec dword ptr [rax + 0xf] ; mov edx, 0x8b4809f3 ; ret
0x000002000018c4e6 : dec dword ptr [rax + 0xf] ; mov edx, 0xe5e908ef ; ret
0x00000200004ea99f : dec dword ptr [rax + 0xf] ; ret 0x8b48
0x00000200005b1566 : dec dword ptr [rax + 1] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200006b4993 : dec dword ptr [rax + 3] ; enter 0x3b48, 0xd ; push 0x9e ; ret 0x76ff
0x00000200000b2e26 : dec dword ptr [rax + 3] ; ret
0x00000200001588f1 : dec dword ptr [rax + 3] ; ret 0x2bb
0x0000020000023cc7 : dec dword ptr [rax + 3] ; ret 0x3b48
0x000002000042c86a : dec dword ptr [rax + 3] ; ret 0x3b49
0x000002000056b6e9 : dec dword ptr [rax + 3] ; ret 0x8941
0x00000200003f4e4a : dec dword ptr [rax + 3] ; ret 0x8948
0x00000200006bbff2 : dec dword ptr [rax + 3] ; ret 0x8b4c
0x00000200000c8355 : dec dword ptr [rax + 3] ; ret 0x8b4d
0x00000200004f082e : dec dword ptr [rax + 5] ; add byte ptr [rbx - 0x38b7ee1f], ah ; ret 0x5d00
0x000002000073e433 : dec dword ptr [rax - 0x2d] ; ret
0x00000200000a80d8 : dec dword ptr [rax - 0x39] ; ret
0x00000200004ee8a0 : dec dword ptr [rax - 0x39] ; ret 0x1700
0x00000200006aa8d7 : dec dword ptr [rax - 0x39] ; ret 0x2e00
0x0000020000584c37 : dec dword ptr [rax - 0x39] ; ret 0x3c80
0x00000200004eccc1 : dec dword ptr [rax - 0x39] ; ret 0x5d00
0x00000200001326e8 : dec dword ptr [rax - 0x39] ; ret 0xba00
0x0000020000172253 : dec dword ptr [rax - 0x39] ; ret 0xdfff
0x0000020000588c8d : dec dword ptr [rax - 0x39] ; ret 0xf80
0x0000020000168341 : dec dword ptr [rax - 0x39] ; ret 0xfe00
0x0000020000170063 : dec dword ptr [rax - 0x39] ; ret 0xfffe
0x0000020000105d4f : dec dword ptr [rax - 0x3f] ; call 0x1ffc233a66a
0x000002000009e74b : dec dword ptr [rax - 0x3f] ; call 0x1ffc2452f7a
0x00000200000f1e38 : dec dword ptr [rax - 0x3f] ; call 0x1ffc24a6657
0x000002000017f8f1 : dec dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x000002000039fa18 : dec dword ptr [rax - 0x3f] ; clc ; or al, 0xff ; ret
0x00000200001e16ac : dec dword ptr [rax - 0x3f] ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200005664fd : dec dword ptr [rax - 0x3f] ; cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000620973 : dec dword ptr [rax - 0x3f] ; jmp 0x2000062098d
0x0000020000046171 : dec dword ptr [rax - 0x3f] ; jmp 0x20048c6ec84
0x00000200005373ac : dec dword ptr [rax - 0x73] ; adc r8b, bpl ; ret 0xb122
0x0000020000186e8a : dec dword ptr [rax - 0x73] ; add dword ptr [rcx + 0x3b], ecx ; ret 0x860f
0x000002000017d99e : dec dword ptr [rax - 0x73] ; add eax, 0xfffd2b4a ; ret
0x000002000017d9af : dec dword ptr [rax - 0x73] ; add eax, 0xfffd45e9 ; ret
0x000002000049ae15 : dec dword ptr [rax - 0x73] ; and al, 0x38 ; call 0x200000bc8c9
0x00000200005d3b6d : dec dword ptr [rax - 0x73] ; and al, 0x40 ; call 0x200001fb6f9
0x000002000049afca : dec dword ptr [rax - 0x73] ; and al, 0x48 ; call 0x200000bc8c9
0x00000200005e7481 : dec dword ptr [rax - 0x73] ; and al, 0x48 ; call 0x200000c36c8
0x0000020000105c86 : dec dword ptr [rax - 0x73] ; and al, 0x60 ; call 0x20000091f48
0x000002000061741d : dec dword ptr [rax - 0x73] ; call 0x200000c36c7
0x0000020000184ee4 : dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x33] ; ret 0xb70f
0x00000200000bba8f : dec dword ptr [rax - 0x73] ; dec qword ptr [rax - 0x75] ; ret 0x49f0
0x0000020000581265 : dec dword ptr [rax - 0x73] ; fmul dword ptr [r8 + 0x2b] ; ret
0x0000020000592899 : dec dword ptr [rax - 0x73] ; iretq ; call 0x200001bd4ec
0x00000200005437ba : dec dword ptr [rax - 0x73] ; js 0x200005437af ; hlt ; ret
0x00000200006115d4 : dec dword ptr [rax - 0x73] ; mov r15b, 0xe8 ; ret 0xa61a
0x0000020000101f50 : dec dword ptr [rax - 0x73] ; or cl, bpl ; retf -2 ; call rcx
0x0000020000175561 : dec dword ptr [rax - 0x73] ; or dil, dil ; ret
0x000002000018315f : dec dword ptr [rax - 0x73] ; or eax, 0x64a75 ; call rax
0x00000200006c60e1 : dec dword ptr [rax - 0x73] ; or r8b, r13b ; ret 0xff9b
0x00000200005be43f : dec dword ptr [rax - 0x73] ; push rbp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; mov rcx, r10 ; call rax
0x00000200005be18c : dec dword ptr [rax - 0x73] ; push rbp ; mov rcx, r13 ; call r8
0x000002000058f004 : dec dword ptr [rax - 0x73] ; push rbp ; ret
0x0000020000494b3d : dec dword ptr [rax - 0x73] ; push rsi ; add dword ptr [rax - 0x75], ecx ; ret 0xc148
0x00000200001a6be3 : dec dword ptr [rax - 0x73] ; ret
0x0000020000677436 : dec dword ptr [rax - 0x73] ; shr r8b, 0x80 ; ret 0xffa4
0x00000200003a8f9b : dec dword ptr [rax - 0x73] ; shr r8b, 0xeb ; ret
0x00000200001307b9 : dec dword ptr [rax - 0x73] ; sub byte ptr [r8 - 0x7d], r9b ; ret
0x00000200001ab4c3 : dec dword ptr [rax - 0x73] ; sub r8b, bpl ; ret
0x0000020000438a47 : dec dword ptr [rax - 0x73] ; xchg rax, r15 ; call qword ptr [rax]
0x000002000041b1df : dec dword ptr [rax - 0x75] ; adc byte ptr [r8 + 0x2b], cl ; ret
0x000002000020fd2c : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 0x2b] ; ret 0x8d49
0x00000200004eb308 : dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax - 0x75] ; ret 0x2b49
0x00000200000b6ee8 : dec dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x000002000040dafe : dec dword ptr [rax - 0x75] ; add al, 0xc1 ; ret
0x000002000008f09a : dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000003be86 : dec dword ptr [rax - 0x75] ; add byte ptr [rax - 9], cl ; ror byte ptr [rax - 0x7b], 1 ; ret 0x850f
0x000002000055be6f : dec dword ptr [rax - 0x75] ; add dword ptr [rax + 0x2b], ecx ; ret 0x3b48
0x000002000062869a : dec dword ptr [rax - 0x75] ; add dword ptr [rax - 0x77], ecx ; add esi, esi ; ret
0x00000200005a5df8 : dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000019d822 : dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000626933 : dec dword ptr [rax - 0x75] ; and al, 0x20 ; call 0x200000c2b98
0x000002000051327d : dec dword ptr [rax - 0x75] ; and al, 0x38 ; call 0x20000140389
0x00000200005155c1 : dec dword ptr [rax - 0x75] ; and al, 0x40 ; call 0x20000140389
0x0000020000497873 : dec dword ptr [rax - 0x75] ; and al, 0x48 ; call 0x200000c2b99
0x00000200004c9e06 : dec dword ptr [rax - 0x75] ; and al, 0x48 ; call 0x200000ee3f1
0x00000200003d61a8 : dec dword ptr [rax - 0x75] ; and al, 0x50 ; call 0x200000c23c8
0x000002000019584f : dec dword ptr [rax - 0x75] ; and al, 0x78 ; call 0x200000c1b38
0x00000200003dc099 : dec dword ptr [rax - 0x75] ; and byte ptr [r11], r15b ; ret
0x00000200004ccd0a : dec dword ptr [rax - 0x75] ; and r8b, bpl ; sal byte ptr [rcx], 1 ; ret 0x44ff
0x00000200005ce33f : dec dword ptr [rax - 0x75] ; and r8b, bpl ; xlatb ; ret 0xffa4
0x0000020000773f04 : dec dword ptr [rax - 0x75] ; and r8b, r13b ; ret 0x9bf9
0x000002000050b9ea : dec dword ptr [rax - 0x75] ; call 0x1ffc39a46e3
0x00000200005a5094 : dec dword ptr [rax - 0x75] ; enter -0x2418, -0x68 ; ret
0x00000200004f5ff7 : dec dword ptr [rax - 0x75] ; enter -0x318, -0x3f ; ret 0xe9ff
0x0000020000475cf0 : dec dword ptr [rax - 0x75] ; enter -0x6818, 0x42 ; ret 0x48ff
0x0000020000560ae5 : dec dword ptr [rax - 0x75] ; enter -0x74b8, -0x18 ; call 0x200000bcd19
0x000002000049a675 : dec dword ptr [rax - 0x75] ; enter 0x42e8, 0x7d ; ret 0xebff
0x000002000058ae60 : dec dword ptr [rax - 0x75] ; fdiv dword ptr [rbx] ; ror byte ptr [rax - 1], cl ; ret
0x000002000011dd24 : dec dword ptr [rax - 0x75] ; fincstp ; ret 0xfffc
0x000002000066b834 : dec dword ptr [rax - 0x75] ; fisttp qword ptr [rax - 1] ; ret
0x000002000068a3bc : dec dword ptr [rax - 0x75] ; fisttp word ptr [rax - 1] ; ret
0x00000200003ac675 : dec dword ptr [rax - 0x75] ; fmul dword ptr [rax + 0x2b] ; fimul word ptr [rax - 1] ; ret
0x00000200007327b9 : dec dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000200003e714c : dec dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0x18b6
0x0000020000616251 : dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x0000020000431926 : dec dword ptr [rax - 0x75] ; fnstsw dword ptr [rbx] ; ret 0x840f
0x00000200003e527f : dec dword ptr [rax - 0x75] ; int 0xe8
0x0000020000427dcb : dec dword ptr [rax - 0x75] ; iretd ; call 0x2000004eb07
0x0000020000475fe6 : dec dword ptr [rax - 0x75] ; iretd ; call 0x2000009a5c7
0x0000020000495af9 : dec dword ptr [rax - 0x75] ; iretd ; call 0x200000bc7b7
0x00000200005760c5 : dec dword ptr [rax - 0x75] ; iretd ; call 0x200000c23c6
0x000002000057627d : dec dword ptr [rax - 0x75] ; iretd ; call 0x200000c2546
0x000002000049b6cc : dec dword ptr [rax - 0x75] ; iretd ; call 0x200000c2847
0x0000020000613c04 : dec dword ptr [rax - 0x75] ; iretd ; call 0x200003dfeae
0x00000200000298a1 : dec dword ptr [rax - 0x75] ; iretd ; call rax
0x0000020000783fb4 : dec dword ptr [rax - 0x75] ; ja 0x20000783fa8 ; ret 0x9bc3
0x00000200000e5a1b : dec dword ptr [rax - 0x75] ; je 0x200000e5a4c ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001a683b : dec dword ptr [rax - 0x75] ; je 0x200001a686c ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000208469 : dec dword ptr [rax - 0x75] ; je 0x2000020849a ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000039d8f1 : dec dword ptr [rax - 0x75] ; je 0x2000039d922 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000039d8f0 : dec dword ptr [rax - 0x75] ; je 0x2000039d923 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003b1e9e : dec dword ptr [rax - 0x75] ; je 0x200003b1ecf ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000041e8d2 : dec dword ptr [rax - 0x75] ; je 0x2000041e903 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004d1f11 : dec dword ptr [rax - 0x75] ; je 0x200004d1f41 ; js 0x200004d1eaa ; ret
0x00000200004df4a3 : dec dword ptr [rax - 0x75] ; je 0x200004df4d3 ; jo 0x200004df43c ; ret
0x00000200004ee535 : dec dword ptr [rax - 0x75] ; je 0x200004ee565 ; js 0x200004ee4ce ; ret
0x00000200005231fb : dec dword ptr [rax - 0x75] ; je 0x2000052322b ; jo 0x20000523194 ; ret
0x0000020000622ad4 : dec dword ptr [rax - 0x75] ; je 0x20000622b05 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200006a8d11 : dec dword ptr [rax - 0x75] ; je 0x200006a8d42 ; cmp byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000400a30 : dec dword ptr [rax - 0x75] ; jl 0x20000400a60 ; js 0x200004009c9 ; ret
0x000002000043808b : dec dword ptr [rax - 0x75] ; jl 0x200004380bc ; xor byte ptr [rax - 0x75], cl ; ret
0x000002000053c8f7 : dec dword ptr [rax - 0x75] ; jl 0x2000053c927 ; js 0x2000053c890 ; ret
0x000002000051cc6b : dec dword ptr [rax - 0x75] ; lahf ; call 0x20000140388
0x0000020000525d42 : dec dword ptr [rax - 0x75] ; or byte ptr [r11], sil ; shr al, cl ; ret 0xd0b2
0x00000200003cd1a4 : dec dword ptr [rax - 0x75] ; or byte ptr [r8 - 0x75], cl ; ret
0x000002000049cc79 : dec dword ptr [rax - 0x75] ; or byte ptr [r9 + 0x23], cl ; ret
0x00000200000afbf0 : dec dword ptr [rax - 0x75] ; or byte ptr [r9 - 0x7b], r9b ; ret
0x00000200001983ae : dec dword ptr [rax - 0x75] ; or byte ptr [rax + 0x3b], cl ; ret
0x0000020000091725 : dec dword ptr [rax - 0x75] ; or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200005dd50c : dec dword ptr [rax - 0x75] ; or eax, 0xffd25724 ; call rax
0x000002000060a9a0 : dec dword ptr [rax - 0x75] ; or esi, dword ptr [rbx] ; shr al, cl ; ret 0x45ff
0x00000200005bc783 : dec dword ptr [rax - 0x75] ; or r8b, r13b ; ret
0x0000020000781df1 : dec dword ptr [rax - 0x75] ; pop rsp ; and al, 0x40 ; jmp 0x20000781dc3
0x000002000074870d : dec dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x0000020000494da9 : dec dword ptr [rax - 0x75] ; push rax ; adc dh, dh ; ret 0x753f
0x000002000019f7f2 : dec dword ptr [rax - 0x75] ; push rcx ; and cl, ch ; pop rsi ; push 0xf8 ; jmp qword ptr [rbx]
0x00000200004550f1 : dec dword ptr [rax - 0x75] ; push rdi ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000032533 : dec dword ptr [rax - 0x75] ; ret
0x000002000055cefd : dec dword ptr [rax - 0x75] ; ret 0x1ae9
0x000002000007e0cb : dec dword ptr [rax - 0x75] ; ret 0x2348
0x00000200001035ef : dec dword ptr [rax - 0x75] ; ret 0x2349
0x0000020000178eaa : dec dword ptr [rax - 0x75] ; ret 0x2b48
0x0000020000187e62 : dec dword ptr [rax - 0x75] ; ret 0x2b49
0x0000020000683322 : dec dword ptr [rax - 0x75] ; ret 0x2ee9
0x0000020000071751 : dec dword ptr [rax - 0x75] ; ret 0x48f0
0x00000200000a1383 : dec dword ptr [rax - 0x75] ; ret 0x49f0
0x00000200001ab418 : dec dword ptr [rax - 0x75] ; ret 0x4bf0
0x000002000044e4a7 : dec dword ptr [rax - 0x75] ; ret 0x75e9
0x00000200000c049d : dec dword ptr [rax - 0x75] ; ret 0x8349
0x000002000040dcc1 : dec dword ptr [rax - 0x75] ; ret 0x83c3
0x000002000015fa78 : dec dword ptr [rax - 0x75] ; ret 0x854d
0x000002000003022b : dec dword ptr [rax - 0x75] ; ret 0x894d
0x00000200003a9e79 : dec dword ptr [rax - 0x75] ; ret 0xa0b9
0x0000020000180d7f : dec dword ptr [rax - 0x75] ; ret 0xb948
0x0000020000180d62 : dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000b164b : dec dword ptr [rax - 0x75] ; ret 0xc3e9
0x00000200005a369c : dec dword ptr [rax - 0x75] ; ret 0xc933
0x000002000055cef5 : dec dword ptr [rax - 0x75] ; ret 0xce9
0x0000020000002bd1 : dec dword ptr [rax - 0x75] ; ret 0xd348
0x000002000068bf0e : dec dword ptr [rax - 0x75] ; ret 0xff48
0x000002000041f988 : dec dword ptr [rax - 0x75] ; retf ; call 0x20000044dbf
0x000002000041fec0 : dec dword ptr [rax - 0x75] ; retf ; call 0x2000004505b
0x000002000056282b : dec dword ptr [rax - 0x75] ; retf ; call 0x2000004eb26
0x00000200004756f0 : dec dword ptr [rax - 0x75] ; retf ; call 0x2000009a487
0x000002000047528e : dec dword ptr [rax - 0x75] ; retf ; call 0x2000009b447
0x00000200004c1c79 : dec dword ptr [rax - 0x75] ; retf ; call 0x200000e7997
0x00000200004c8046 : dec dword ptr [rax - 0x75] ; retf ; call 0x200000ecdcf
0x00000200004c926f : dec dword ptr [rax - 0x75] ; retf ; call 0x200000eddab
0x00000200004f5fef : dec dword ptr [rax - 0x75] ; retf ; call 0x20000122927
0x0000020000185496 : dec dword ptr [rax - 0x75] ; retf ; call 0x200001c1726
0x000002000064a7e6 : dec dword ptr [rax - 0x75] ; retf ; call 0x200001f6a5a
0x000002000044e23f : dec dword ptr [rax - 0x75] ; retf ; call 0x200004ba496
0x00000200001c7015 : dec dword ptr [rax - 0x75] ; retf ; call rdi
0x00000200004f1b19 : dec dword ptr [rax - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x000002000050274d : dec dword ptr [rax - 0x75] ; salc ; call 0x200004ee97e
0x000002000076ecc2 : dec dword ptr [rax - 0x75] ; sbb al, 0 ; add byte ptr [rax], al ; ret
0x000002000008f072 : dec dword ptr [rax - 0x75] ; sbb dh, dh ; ret
0x000002000077eda8 : dec dword ptr [rax - 0x75] ; sbb ebp, ecx ; ret
0x000002000041fa1a : dec dword ptr [rax - 0x75] ; shr eax, cl ; ret
0x00000200005940ad : dec dword ptr [rax - 0x75] ; sub r8b, 0xc9 ; ret 0xffba
0x0000020000619305 : dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0x1440
0x00000200005b1e5a : dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0xe5a8
0x000002000051cc74 : dec dword ptr [rax - 0x75] ; xchg rax, r15 ; call 0x20000140388
0x0000020000669f79 : dec dword ptr [rax - 0x75] ; xor byte ptr [r8 - 0x7d], cl ; ret
0x00000200001b2550 : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 - 0x75], cl ; ret
0x00000200004048b9 : dec dword ptr [rax - 0x77] ; adc dword ptr [rax - 0x75], ecx ; ret
0x00000200001a4aab : dec dword ptr [rax - 0x77] ; adc eax, 0x18c10d ; ret
0x0000020000769831 : dec dword ptr [rax - 0x77] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000e29d6 : dec dword ptr [rax - 0x77] ; cmp byte ptr [r8 + 0x3b], r9b ; ret 0x187c
0x0000020000073cce : dec dword ptr [rax - 0x77] ; cmp r11b, bpl ; ret 0xc032
0x000002000058c686 : dec dword ptr [rax - 0x77] ; jl 0x2000058c6b6 ; and al, ch ; ret
0x0000020000153c16 : dec dword ptr [rax - 0x77] ; jmp 0x20000153be3
0x0000020000153c15 : dec dword ptr [rax - 0x77] ; jmp 0x20000153be4
0x00000200000be574 : dec dword ptr [rax - 0x77] ; or byte ptr [r8 - 0x75], r9b ; ret 0x49f0
0x000002000042f93b : dec dword ptr [rax - 0x77] ; or byte ptr [r8 - 0x7d], cl ; ret
0x00000200004e20db : dec dword ptr [rax - 0x77] ; or byte ptr [r8 - 1], r9b ; ret
0x000002000076d9db : dec dword ptr [rax - 0x77] ; or eax, 0xffb6c8ad ; ret
0x000002000076e039 : dec dword ptr [rax - 0x77] ; or eax, 0xffb6dbbf ; ret
0x000002000076cefa : dec dword ptr [rax - 0x77] ; or eax, 0xffb6ef1e ; ret
0x0000020000619173 : dec dword ptr [rax - 0x77] ; or eax, 0xffd665fd ; ret
0x000002000065ab0c : dec dword ptr [rax - 0x77] ; pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x0000020000689d87 : dec dword ptr [rax - 0x77] ; ret 0x8b49
0x0000020000745392 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 - 0x75], cl ; ret 0x8b48
0x0000020000527d80 : dec dword ptr [rax - 0x77] ; sbb byte ptr [r8 - 0x7d], cl ; ret
0x0000020000626d48 : dec dword ptr [rax - 0x79] ; sbb dh, dh ; ret
0x000002000004bdf4 : dec dword ptr [rax - 0x7b] ; div byte ptr [rbx + rbx*4 - 0x17] ; ret
0x00000200004f4969 : dec dword ptr [rax - 0x7b] ; leave ; je 0x200004f497f ; ret
0x000002000018d14b : dec dword ptr [rax - 0x7b] ; ret
0x000002000018c6c5 : dec dword ptr [rax - 0x7b] ; ret 0x850f
0x0000020000627312 : dec dword ptr [rax - 0x7b] ; ret 0xde75
0x0000020000188e60 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000200004d93d8 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0
0x00000200001761c4 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xed72
0x00000200001772a3 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xed9d
0x00000200000940fe : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xfffb
0x0000020000061196 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 2
0x000002000075d7d4 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; push rsi ; ret
0x00000200005c850b : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; sahf ; jb 0x200005c850d ; jmp qword ptr [rcx]
0x000002000011b6d3 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x000002000077b399 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x97e9
0x0000020000654dd0 : dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000200006b27b3 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rax + rbx + 0x4c], 0x8b ; ret
0x00000200003e768f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x1a], 0x8b ; ret
0x000002000069963a : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x51], 0x81 ; call qword ptr [rdx]
0x00000200001f2a9d : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + 0x6c], 0xff ; ret
0x00000200006bee43 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rbp + rcx + 0x4c], 0x8b ; ret
0x00000200004ec677 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rax + 0x40], 0x8a ; iretd ; call rax
0x000002000020fb4f : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rax + 0x48], 0x3b ; ret
0x000002000073a1c4 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rax*2 + 0x45], 0x8b ; ret 0x394c
0x00000200004eb282 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rdx + 0x44], 0x8b ; ret
0x000002000063dba5 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rdx + rdx + 0x4c], 0x8b ; ret
0x000002000041d5a2 : dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdi*4 + 0x44], 0x8b ; ret
0x00000200005a11f8 : dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x000002000047263f : dec dword ptr [rax - 0x7b] ; test byte ptr [rdi], 0x85 ; call rcx
0x00000200005cb724 : dec dword ptr [rax - 0x7d] ; and al, 0x78 ; add cl, ch ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000200000dc02a : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rdi] ; test dh, ch ; ret 0xb
0x000002000017d07c : dec dword ptr [rax - 0x7d] ; jle 0x2000017d092 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x00000200000dcfb1 : dec dword ptr [rax - 0x7d] ; jnp 0x200000dcfcf ; add byte ptr [rbp + 0xf], al ; ret
0x0000020000017d2f : dec dword ptr [rax - 0x7d] ; ret
0x0000020000774efc : dec dword ptr [rax - 0x7d] ; ret 0x4108
0x000002000058c3da : dec dword ptr [rax - 0x7d] ; ret 0x4428
0x00000200003a862e : dec dword ptr [rax - 0x7d] ; ret 0x4510
0x00000200004c2f98 : dec dword ptr [rax - 0x7d] ; ret 0x4802
0x0000020000621417 : dec dword ptr [rax - 0x7d] ; ret 0x4803
0x00000200005c141a : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x00000200000bfcd6 : dec dword ptr [rax - 0x7d] ; ret 0x4810
0x0000020000585e29 : dec dword ptr [rax - 0x7d] ; ret 0x4838
0x000002000010fad3 : dec dword ptr [rax - 0x7d] ; ret 0x4903
0x0000020000767f69 : dec dword ptr [rax - 0x7d] ; ret 0x4908
0x00000200001d6c78 : dec dword ptr [rax - 0x7d] ; ret 0x4910
0x000002000075e343 : dec dword ptr [rax - 0x7d] ; ret 0x4c50
0x000002000053695a : dec dword ptr [rax - 0x7d] ; ret 0x6602
0x0000020000176a60 : dec dword ptr [rax - 0x7d] ; ret 0x830c
0x0000020000460118 : dec dword ptr [rax - 0x7d] ; ret 0x8902
0x0000020000764f60 : dec dword ptr [rax - 0x7d] ; ret 0xe80c
0x00000200005f8889 : dec dword ptr [rax - 0x7d] ; ret 0xe84c
0x00000200000fdac7 : dec dword ptr [rax - 0x7d] ; ret 0xe908
0x00000200003b75ed : dec dword ptr [rax - 0x7d] ; ret 0xe910
0x00000200005a3229 : dec dword ptr [rax - 0x7d] ; ret 0xe918
0x000002000002d2e7 : dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000002000074ed3b : dec dword ptr [rax - 0x7d] ; ret 0xf04
0x00000200004a0553 : dec dword ptr [rax - 0x7d] ; ret 0xf10
0x00000200001733b1 : dec dword ptr [rax - 0x7d] ; ret 0xf4e
0x00000200004b6c6f : dec dword ptr [rax - 0x7d] ; ror byte ptr [rsp + rax*2 + 0xf], 0xb6 ; ret
0x00000200000e08b2 : dec dword ptr [rax - 0x7d] ; ror dword ptr [rax], -0x7d ; ret 0x7402
0x00000200005a29f6 : dec dword ptr [rax - 0x7d] ; shr dword ptr [rax], -0x18 ; ret
0x000002000005a3ce : dec dword ptr [rax - 0x7f] ; ret
0x000002000018c8cd : dec dword ptr [rax - 0x7f] ; ret 0
0x00000200003d4d9f : dec dword ptr [rax - 0x7f] ; ret 0x1000
0x00000200000a982b : dec dword ptr [rax - 0x7f] ; ret 0x15f8
0x0000020000106280 : dec dword ptr [rax - 0x7f] ; ret 0x538
0x00000200005ae645 : dec dword ptr [rax - 0x7f] ; ret 0xb8
0x0000020000181dab : dec dword ptr [rax - 0x7f] ; ret 0xfff
0x0000020000083dec : dec dword ptr [rax - 1] ; ret
0x000002000007e13d : dec dword ptr [rax - 1] ; ret 0x10e9
0x00000200001397a1 : dec dword ptr [rax - 1] ; ret 0x3966
0x000002000013934b : dec dword ptr [rax - 1] ; ret 0x3c80
0x00000200003e7660 : dec dword ptr [rax - 1] ; ret 0x4466
0x000002000076073b : dec dword ptr [rax - 1] ; ret 0x8041
0x00000200005d76a8 : dec dword ptr [rax - 1] ; ret 0x8349
0x000002000008deb2 : dec dword ptr [rax - 1] ; ret 0x8948
0x000002000042f5e1 : dec dword ptr [rax - 1] ; ret 0xd2eb
0x0000020000431caa : dec dword ptr [rax - 1] ; ret 0xeceb
0x00000200006b471d : dec dword ptr [rax - 9] ; fisttp dword ptr [rax - 0x75] ; ret
0x000002000047516a : dec dword ptr [rax - 9] ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000058ef6 : dec dword ptr [rax - 9] ; ret
0x00000200000930a6 : dec dword ptr [rax - 9] ; ret 0xfff
0x00000200001657e8 : dec dword ptr [rax - 9] ; ret 0xfffc
0x000002000005e257 : dec dword ptr [rax - 9] ; ret 0xffff
0x0000020000517578 : dec dword ptr [rax - 9] ; ror byte ptr [rax + 0x23], 1 ; rol byte ptr [rcx - 0x7d], 1 ; ret 0x75ff
0x000002000052568c : dec dword ptr [rax - 9] ; ror dword ptr [rax + 0x23], 1 ; ror dword ptr [rax + 0x2b], 1 ; ret 0xd233
0x00000200007410c2 : dec dword ptr [rax] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000439c2 : dec dword ptr [rax] ; ret
0x00000200004549db : dec dword ptr [rbp + 0x21] ; sub byte ptr [rax - 0x75], cl ; ret
0x0000020000747817 : dec dword ptr [rbp + 0x23] ; ret
0x00000200000068a2 : dec dword ptr [rbp + 0x3b] ; ret
0x000002000008d767 : dec dword ptr [rbp + 0x3b] ; ret 0x870f
0x000002000002b014 : dec dword ptr [rbp + 0x448b0143] ; ret 0x4104
0x000002000002afe7 : dec dword ptr [rbp + 0x48bfe43] ; ret 0x38e9
0x000002000002b0a7 : dec dword ptr [rbp + 0x48bfe43] ; ret 0x73e9
0x000002000074b96f : dec dword ptr [rbp + 0x5895204] ; or edi, dword ptr [rbx] ; ret
0x00000200001a5936 : dec dword ptr [rbp + 0x71e8054f] ; ret 0xffeb
0x000002000051872c : dec dword ptr [rbp + 3] ; ret
0x0000020000091e64 : dec dword ptr [rbp + r9*4 + 4] ; ret
0x000002000075ec85 : dec dword ptr [rbp + rcx*4 + 0x25] ; mov bl, 0x37 ; ret
0x00000200006ac39d : dec dword ptr [rbp + rcx*4 + 0x35] ; fcmovnb st(0), st(1) ; ret
0x00000200004309a5 : dec dword ptr [rbp + rcx*4 + 0x3d] ; ret
0x000002000039c764 : dec dword ptr [rbp + rcx*4 + 0x46] ; xor byte ptr [rax - 0x39], cl ; ret 0xd300
0x000002000009eb92 : dec dword ptr [rbp + rcx*4 + 0x4d] ; call 0x20048cc76ef
0x0000020000756b40 : dec dword ptr [rbp + rcx*4 + 0x4d] ; xor byte ptr [rax - 0x7d], cl ; ret 0x4508
0x000002000064f687 : dec dword ptr [rbp + rcx*4 + 0x59] ; ror byte ptr [rcx - 0x75], 1 ; ret
0x00000200000776f9 : dec dword ptr [rbp + rcx*4 + 0x5f] ; adc byte ptr [rbp - 0x75], al ; ret 0x8b49
0x0000020000758888 : dec dword ptr [rbp + rcx*4 + 0xd] ; cwde ; insb byte ptr [rdi], dx ; ret 0x66ff
0x0000020000758b47 : dec dword ptr [rbp + rcx*4 + 0xd] ; jns 0x20000758bbb ; ret 0x45ff
0x0000020000750556 : dec dword ptr [rbp + rcx*4 + 0xd] ; jp 0x20000750550 ; ret 0x45ff
0x000002000075761a : dec dword ptr [rbp + rcx*4 + 0xd] ; mov dh, 0x81 ; ret 0x45ff
0x00000200006ab871 : dec dword ptr [rbp + rcx*4 + 0xd] ; out -0x49, eax ; ret
0x0000020000758a69 : dec dword ptr [rbp + rcx*4 + 0xd] ; pop rdi ; pop rax ; ret 0x45ff
0x0000020000091e65 : dec dword ptr [rbp + rcx*4 + 4] ; ret
0x00000200004aa73b : dec dword ptr [rbp + rcx*4 + 5] ; int 0xff
0x00000200004aa717 : dec dword ptr [rbp + rcx*4 + 5] ; int1 ; jmp rsp
0x00000200006721b9 : dec dword ptr [rbp + rcx*4 + 5] ; jmp rbx
0x000002000075d450 : dec dword ptr [rbp + rcx*4 + 5] ; mov byte ptr [rdx], ah ; ret 0x48ff
0x000002000019d1e5 : dec dword ptr [rbp + rcx*4 + 5] ; ret
0x00000200006c2734 : dec dword ptr [rbp - 0x367afeb0] ; cmovne eax, edx ; ret
0x0000020000732edc : dec dword ptr [rbp - 0x74b7d0b8] ; ret 0x598d
0x00000200001f865c : dec dword ptr [rbp - 0x75] ; add byte ptr [rax + 0xb], cl ; ret 0xc933
0x00000200000a8437 : dec dword ptr [rbp - 0x75] ; dec byte ptr [rcx - 0x3f] ; call qword ptr [rax]
0x0000020000162fa2 : dec dword ptr [rbp - 0x75] ; or byte ptr [rbx], al ; ret
0x00000200006cb110 : dec dword ptr [rbp - 0x75] ; pushfq ; ret 0x8068
0x00000200000a9fab : dec dword ptr [rbp - 0x75] ; ret
0x00000200000dbd7f : dec dword ptr [rbp - 0x75] ; ret 0x44c7
0x000002000019cba2 : dec dword ptr [rbp - 0x75] ; ret 0x75e9
0x00000200001c8803 : dec dword ptr [rbp - 0x75] ; ret 0x8844
0x00000200000a4e32 : dec dword ptr [rbp - 0x75] ; ret 0x8b48
0x00000200003a7ca2 : dec dword ptr [rbp - 0x75] ; ret 0x8b49
0x00000200000ab730 : dec dword ptr [rbp - 0x75] ; ret 0xfe9
0x00000200004b5fb2 : dec dword ptr [rbp - 0x77] ; or dh, dh ; ret
0x00000200003e0f60 : dec dword ptr [rbp - 0x7b] ; leave ; jne 0x200003e0f8b ; mov eax, r10d ; ret
0x00000200003e0f60 : dec dword ptr [rbp - 0x7b] ; leave ; jne 0x200003e0f8c ; mov eax, r10d ; ret
0x000002000018756a : dec dword ptr [rbp - 0x7b] ; rol byte ptr [rbp + 0xf], cl ; ret
0x00000200003b63a2 : dec dword ptr [rbp - 0x7b] ; sal byte ptr [rbx + rax + 0x49], cl ; jmp rdx
0x000002000000a179 : dec dword ptr [rbp - 0x7b] ; sal byte ptr [rdi + rbp + 0x41], 0x8b ; ret 0x20ba
0x00000200006bc68c : dec dword ptr [rbx + 0x110ff2c2] ; add al, 8 ; ret
0x00000200001e0ef2 : dec dword ptr [rbx + 0x11c1c715] ; add bh, bh ; ret 0x8d48
0x00000200001c48dd : dec dword ptr [rbx + 0x1ba92805] ; add byte ptr [rbx], bh ; ret
0x00000200001180f6 : dec dword ptr [rbx + 0x1e388705] ; add byte ptr [rbx], al ; ret
0x0000020000109416 : dec dword ptr [rbx + 0x1f222f05] ; add bh, bh ; ret
0x000002000019b6c2 : dec dword ptr [rbx + 0x23413042] ; ret
0x000002000012ccb6 : dec dword ptr [rbx + 0x26c86] ; add bh, bh ; ret
0x0000020000106270 : dec dword ptr [rbx + 0x277d8d05] ; add bh, bh ; ret
0x00000200005862a6 : dec dword ptr [rbx + 0x2b582444] ; ret 0x8941
0x0000020000748e21 : dec dword ptr [rbx + 0x2c8d48c2] ; ret
0x00000200000e22cc : dec dword ptr [rbx + 0x2c8d4cc5] ; ret
0x00000200001846c3 : dec dword ptr [rbx + 0x3345244f] ; sal byte ptr [rbx], 0xd2 ; call rax
0x0000020000589d03 : dec dword ptr [rbx + 0x3382444] ; ret 0x4489
0x0000020000025dca : dec dword ptr [rbx + 0x35943b05] ; add bh, bh ; ret
0x000002000015d5e9 : dec dword ptr [rbx + 0x3804c6d8] ; add cl, ch ; ret
0x00000200004095ef : dec dword ptr [rbx + 0x38de8d8] ; ret
0x0000020000688c0b : dec dword ptr [rbx + 0x3bc12bc7] ; ret 0x820f
0x000002000042fb90 : dec dword ptr [rbx + 0x410ce8d0] ; ret 0x44ff
0x0000020000502aa2 : dec dword ptr [rbx + 0x48302444] ; add esp, 0x28 ; ret
0x000002000051a1bd : dec dword ptr [rbx + 0x48482444] ; add esp, 0x28 ; ret
0x00000200007543ff : dec dword ptr [rbx + 0x48c28bd0] ; add esp, 0x38 ; ret
0x0000020000230b8e : dec dword ptr [rbx + 0x55882] ; add byte ptr [rax + 3], cl ; ret 0x8348
0x00000200006a805c : dec dword ptr [rbx + 0x58b48d8] ; cli ; scasb al, byte ptr [rdi] ; ret 0x48ff
0x0000020000121773 : dec dword ptr [rbx + 0x58d48c8] ; ret
0x0000020000224bd5 : dec dword ptr [rbx + 0x68893] ; add dh, dh ; ret 0xf04
0x000002000022e831 : dec dword ptr [rbx + 0x68897] ; add dh, dh ; ret 0xf04
0x00000200004b6c0f : dec dword ptr [rbx + 0x7159e838] ; ret
0x0000020000487516 : dec dword ptr [rbx + 0x78c085d8] ; ret 0x8b48
0x00000200004e5d99 : dec dword ptr [rbx + 0x78c085d8] ; ret 0x8b4c
0x00000200006b67c0 : dec dword ptr [rbx + 0x78c085e8] ; sbb bh, bh ; ret
0x0000020000580f31 : dec dword ptr [rbx + 0x78c085f0] ; adc byte ptr [rax - 1], cl ; ret
0x00000200003e39e7 : dec dword ptr [rbx + 0x79c085d8] ; ret 0x73e9
0x0000020000620daf : dec dword ptr [rbx + 0x79c085e8] ; ret
0x0000020000423ab8 : dec dword ptr [rbx + 0x8896] ; add bh, dh ; ret 0x402
0x00000200003daee5 : dec dword ptr [rbx + 0x8e8c100] ; and eax, 1 ; ret
0x00000200001028a3 : dec dword ptr [rbx + 0xa885] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x12b
0x00000200003ad9f1 : dec dword ptr [rbx + 0xb490] ; add al, ch ; ret
0x000002000052f683 : dec dword ptr [rbx + 0xd8b48f0] ; ret
0x000002000060611d : dec dword ptr [rbx + 0xe493] ; add dh, dh ; ret 0x7502
0x000002000004598c : dec dword ptr [rbx + 0xf8] ; jmp 0x2000004595e
0x00000200004eb6aa : dec dword ptr [rbx + 0xfc085d8] ; mov ah, dl ; ret 9
0x0000020000628e4d : dec dword ptr [rbx + 4] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000182c5d : dec dword ptr [rbx + rcx*4 + 0x15] ; ret
0x000002000056cb9c : dec dword ptr [rbx + rcx*4 + 0x35] ; insb byte ptr [rdi], dx ; ret 0xffd6
0x00000200006a8049 : dec dword ptr [rbx + rcx*4 + 0x35] ; push rdi ; scasb al, byte ptr [rdi] ; ret 0x44ff
0x000002000056cb27 : dec dword ptr [rbx + rcx*4 + 0x35] ; stc ; ret 0xffd6
0x0000020000181e90 : dec dword ptr [rbx + rcx*4 + 0x44] ; and al, 0x58 ; call rax
0x00000200005c2fe1 : dec dword ptr [rbx + rcx*4 + 5] ; ret 0xffdb
0x000002000018593b : dec dword ptr [rbx + rcx*4 - 0x18] ; jmp 0x20000091bfd
0x0000020000568ffb : dec dword ptr [rbx + rcx*4 - 0x73] ; rol byte ptr [rsi], 0 ; add bh, bh ; ret
0x0000020000096251 : dec dword ptr [rbx + rcx*4 - 0x7c] ; ret 0xd300
0x000002000050397d : dec dword ptr [rbx + rdi - 0x3e] ; sete al ; ret
0x000002000076a88b : dec dword ptr [rbx - 0x17047435] ; ret
0x000002000053cff2 : dec dword ptr [rbx - 0x3b7cb73d] ; jo 0x2000053d05d ; ret
0x00000200006b5642 : dec dword ptr [rbx - 0x3b7cb73d] ; jo 0x200006b56ad ; ret
0x000002000052a054 : dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; pop rbp ; ret
0x00000200001af721 : dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x000002000041a921 : dec dword ptr [rbx - 0x3b7cb73d] ; push rax ; pop rbx ; ret
0x00000200006d2ed7 : dec dword ptr [rbx - 0x3fa74deb] ; jmp qword ptr [rbx]
0x0000020000517d97 : dec dword ptr [rbx - 0x4a3e172a] ; ret 0x48ff
0x0000020000517db1 : dec dword ptr [rbx - 0x4a58172a] ; ret 0x48ff
0x00000200006b3abd : dec dword ptr [rbx - 0x5fa0021] ; lodsb al, byte ptr [rsi] ; ret 0xc1ff
0x0000020000410c52 : dec dword ptr [rbx - 0x6e78f015] ; call qword ptr [rsi]
0x00000200005de5be : dec dword ptr [rbx - 0x72b3efad] ; ret
0x00000200006d2eed : dec dword ptr [rbx - 0x7405f407] ; ret
0x000002000021f2cb : dec dword ptr [rbx - 0x7421d428] ; ret
0x00000200004056bf : dec dword ptr [rbx - 0x74afdbac] ; ret 0xc323
0x0000020000228c2c : dec dword ptr [rbx - 0x74b7f7ab] ; add r15b, r15b ; ret 0x8b4c
0x000002000007757b : dec dword ptr [rbx - 0x74ba9fab] ; ret 0x8b48
0x00000200001e0534 : dec dword ptr [rbx - 0x74bba3a9] ; ret 0xc141
0x00000200005c5cd6 : dec dword ptr [rbx - 0x74bbafab] ; ret
0x0000020000441a91 : dec dword ptr [rbx - 0x74bbdba4] ; ret
0x00000200003c4634 : dec dword ptr [rbx - 0x74cfdba4] ; ret
0x00000200006199b1 : dec dword ptr [rbx - 0x76bd6ffc] ; ret
0x000002000013c47c : dec dword ptr [rbx - 0x77bb3883] ; insd dword ptr [rdi], dx ; ret
0x00000200000c7785 : dec dword ptr [rbx - 0x7b74b23e] ; ret
0x000002000045fa67 : dec dword ptr [rbx - 0x7ecbdb84] ; call qword ptr [rax]
0x0000020000638c0c : dec dword ptr [rbx - 0x98fdba4] ; ret
0x000002000019722e : dec dword ptr [rbx - 0x9bebfc0] ; ret 0xf04
0x00000200005c4a32 : dec dword ptr [rbx - 0x9bfdbbc] ; ret
0x000002000051299e : dec dword ptr [rbx - 0xbbdbac] ; ret 0x5489
0x0000020000664049 : dec dword ptr [rbx - 0xcbdbbc] ; ret
0x0000020000663f1b : dec dword ptr [rbx - 0xcfdbbc] ; ret
0x0000020000405784 : dec dword ptr [rbx] ; ret
0x00000200001d7dbd : dec dword ptr [rcx + 0x1390] ; ret
0x00000200001d7ddb : dec dword ptr [rcx + 0x1394] ; ret
0x0000020000185926 : dec dword ptr [rcx + 0x1602bf1d] ; add cl, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff0
0x00000200000c2601 : dec dword ptr [rcx + 0x1e4] ; ret
0x0000020000405613 : dec dword ptr [rcx + 0x23502444] ; ret
0x000002000018d11b : dec dword ptr [rcx + 0x23] ; ret 0x17e9
0x00000200004166bd : dec dword ptr [rcx + 0x23] ; ret 0x3d48
0x000002000040281e : dec dword ptr [rcx + 0x23] ; ret 0x8148
0x00000200000b62d1 : dec dword ptr [rcx + 0x23] ; ret 0xbb49
0x0000020000744060 : dec dword ptr [rcx + 0x23] ; ret 0xbf49
0x000002000041ae21 : dec dword ptr [rcx + 0x364] ; xor eax, eax ; ret
0x00000200006409e9 : dec dword ptr [rcx + 0x36c] ; xor eax, eax ; ret
0x000002000009a6fa : dec dword ptr [rcx + 0x3b302444] ; ret 0x840f
0x0000020000481d67 : dec dword ptr [rcx + 0x3b442444] ; ret
0x000002000009c5d2 : dec dword ptr [rcx + 0x3b] ; fmul dword ptr [rdi] ; xchg dword ptr [rdx], ebx ; ret 0xe
0x00000200000acc6d : dec dword ptr [rcx + 0x3b] ; ret
0x00000200000ace68 : dec dword ptr [rcx + 0x3b] ; ret 0x830f
0x000002000061e7e7 : dec dword ptr [rcx + 0x3b] ; ret 0x840f
0x00000200000b759f : dec dword ptr [rcx + 0x3b] ; ret 0x850f
0x00000200000ad262 : dec dword ptr [rcx + 0x3b] ; ret 0x860f
0x0000020000010754 : dec dword ptr [rcx + 0x3b] ; ret 0x870f
0x00000200000635da : dec dword ptr [rcx + 0x3b] ; ret 0xe072
0x0000020000074014 : dec dword ptr [rcx + 0x3b] ; ret 0xf45
0x0000020000755e34 : dec dword ptr [rcx + 0x3b] ; ret 0xf49
0x0000020000231cd4 : dec dword ptr [rcx + 0x4c] ; add rsp, 0x70 ; pop rdi ; ret
0x00000200005aa6e0 : dec dword ptr [rcx + 0x63] ; or ch, cl ; ret
0x000002000039ce7f : dec dword ptr [rcx + 0x64] ; ret
0x00000200003a33a9 : dec dword ptr [rcx + 0x80bb] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000f1906 : dec dword ptr [rcx + 0x8c] ; ret
0x00000200000ad209 : dec dword ptr [rcx + 0xb] ; ret
0x00000200000ad3c5 : dec dword ptr [rcx + 0xb] ; ret 0x91e9
0x00000200000ad255 : dec dword ptr [rcx + 0xb] ; ret 0xba49
0x00000200000ad2b8 : dec dword ptr [rcx + 0xb] ; ret 0xe2e9
0x00000200001731f8 : dec dword ptr [rcx + 0xf] ; ret
0x0000020000685323 : dec dword ptr [rcx + 3] ; fisttp word ptr [rax - 0x75] ; ret
0x00000200004133b2 : dec dword ptr [rcx + 3] ; ret 0x59e9
0x00000200001041e2 : dec dword ptr [rcx + 3] ; ret 0xb948
0x000002000016a96b : dec dword ptr [rcx + 3] ; ret 0xc148
0x000002000074dca2 : dec dword ptr [rcx + 3] ; ror byte ptr [rbx - 0x49f0ba3b], 1 ; ret 0x3b44
0x00000200001e4bbd : dec dword ptr [rcx + 8] ; ret
0x0000020000755403 : dec dword ptr [rcx + rcx*4 + 0x35] ; jne 0x200007553dc ; ret
0x00000200005812ca : dec dword ptr [rcx + rcx*4 + 0x35] ; mov esi, 0xe9ffd430 ; call qword ptr [rax]
0x0000020000757435 : dec dword ptr [rcx + rcx*4 + 0x35] ; ret
0x0000020000755567 : dec dword ptr [rcx + rcx*4 + 0x35] ; ror ebx, 1 ; ret
0x00000200007551c7 : dec dword ptr [rcx + rcx*4 + 0x35] ; xor eax, ebx ; ret
0x00000200006a8a49 : dec dword ptr [rcx + rcx*4 + 0x3d] ; call qword ptr [rsi]
0x000002000053e9c6 : dec dword ptr [rcx + rcx*4 + 0x3d] ; ret 0xda03
0x00000200003fdf91 : dec dword ptr [rcx + rcx*4 + 0x6d] ; xor byte ptr [rax - 0x75], cl ; ret
0x0000020000766bf3 : dec dword ptr [rcx + rcx*4 + 0x7b] ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200006d7c0d : dec dword ptr [rcx + rcx*4 + 5] ; jae 0x200006d7bc8 ; ret 0x4dff
0x00000200007551fc : dec dword ptr [rcx + rdi + 0x35] ; in al, -0x5e ; ret 0x75ff
0x0000020000404fbf : dec dword ptr [rcx - 0x10a1d9c3] ; push rsi ; ret
0x00000200005b6093 : dec dword ptr [rcx - 0x17b7dbbc] ; ret
0x00000200006b4a8a : dec dword ptr [rcx - 0x3dc350c3] ; jmp qword ptr [rbx]
0x0000020000621281 : dec dword ptr [rcx - 0x3f] ; call 0x1ffc28d5e99
0x00000200004025c4 : dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x75], cl ; ret 0x8949
0x00000200003a7951 : dec dword ptr [rcx - 0x73] ; test dword ptr [rax], eax ; ret
0x0000020000505284 : dec dword ptr [rcx - 0x73] ; xor r8b, r13b ; ret 0xc164
0x00000200001ed103 : dec dword ptr [rcx - 0x74b3f7ba] ; ret
0x00000200001bcf66 : dec dword ptr [rcx - 0x74b65c83] ; ret 0xf49
0x00000200000a48fc : dec dword ptr [rcx - 0x74b6d7b9] ; ret 0xb948
0x00000200000b4a56 : dec dword ptr [rcx - 0x74b7d7b9] ; ret
0x00000200000e68c5 : dec dword ptr [rcx - 0x74b7d7ba] ; ret
0x00000200000b5c59 : dec dword ptr [rcx - 0x74b7d7bb] ; ret
0x00000200006341ae : dec dword ptr [rcx - 0x74b7ef85] ; ret
0x0000020000176db8 : dec dword ptr [rcx - 0x74bef68c] ; ret
0x00000200004b574f : dec dword ptr [rcx - 0x74f814ff] ; fsubr st(1) ; ret
0x00000200004c13c6 : dec dword ptr [rcx - 0x75] ; add dword ptr [rax + 0x3b], ecx ; ret
0x0000020000760316 : dec dword ptr [rcx - 0x75] ; cmp byte ptr [rbp - 0x75], r8b ; ret
0x00000200004fd01a : dec dword ptr [rcx - 0x75] ; fimul word ptr [rax - 1] ; ret
0x0000020000682801 : dec dword ptr [rcx - 0x75] ; fmul qword ptr [rax - 1] ; ret
0x000002000049a276 : dec dword ptr [rcx - 0x75] ; int 0xe8
0x00000200006247b0 : dec dword ptr [rcx - 0x75] ; iretd ; call 0x20000010a12
0x000002000059582b : dec dword ptr [rcx - 0x75] ; iretd ; call 0x200000c1b36
0x00000200004c7de3 : dec dword ptr [rcx - 0x75] ; iretd ; call 0x200000efbbf
0x00000200004a3d6b : dec dword ptr [rcx - 0x75] ; iretd ; call 0x200004a0066
0x00000200003a1955 : dec dword ptr [rcx - 0x75] ; iretd ; call rax
0x000002000048b890 : dec dword ptr [rcx - 0x75] ; lea esp, dword ptr [rax] ; or eax, dword ptr [rax] ; add al, ch ; ret
0x0000020000183c81 : dec dword ptr [rcx - 0x75] ; leave ; call 0x200001bfe9e
0x00000200003fee90 : dec dword ptr [rcx - 0x75] ; mov fs, word ptr [rax] ; or eax, dword ptr [rax] ; add al, ch ; ret
0x000002000068722f : dec dword ptr [rcx - 0x75] ; or byte ptr [rax + 3], cl ; ret
0x0000020000058ee9 : dec dword ptr [rcx - 0x75] ; pop rsi ; adc dh, dh ; ret
0x00000200005a12e6 : dec dword ptr [rcx - 0x75] ; pop rsi ; and byte ptr [rax - 0x7f], cl ; ret
0x000002000057da30 : dec dword ptr [rcx - 0x75] ; push rax ; sbb cl, ch ; ret
0x00000200000aa0cc : dec dword ptr [rcx - 0x75] ; push rbp ; add dh, dh ; ret 0xf04
0x000002000074e743 : dec dword ptr [rcx - 0x75] ; push rdi ; xor byte ptr [rax - 0x7d], cl ; ret 0x4c18
0x000002000002d9cd : dec dword ptr [rcx - 0x75] ; ret
0x00000200000d72d6 : dec dword ptr [rcx - 0x75] ; ret 0x48f0
0x00000200000cc9ff : dec dword ptr [rcx - 0x75] ; ret 0x4cf0
0x00000200001bd745 : dec dword ptr [rcx - 0x75] ; ret 0x7d89
0x00000200000a3538 : dec dword ptr [rcx - 0x75] ; ret 0x8348
0x00000200000819ca : dec dword ptr [rcx - 0x75] ; ret 0x8945
0x0000020000187b68 : dec dword ptr [rcx - 0x75] ; ret 0xb948
0x00000200000ded01 : dec dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200003e3031 : dec dword ptr [rcx - 0x75] ; ret 0xcde9
0x000002000004311f : dec dword ptr [rcx - 0x75] ; ret 0xd348
0x00000200007628f3 : dec dword ptr [rcx - 0x75] ; ret 0xd5eb
0x000002000066a0ec : dec dword ptr [rcx - 0x75] ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x0000020000743fea : dec dword ptr [rcx - 0x75] ; ror dword ptr [rax - 0x75], 0xd ; jnp 0x20000743fae ; ret
0x00000200000d5be9 : dec dword ptr [rcx - 0x75] ; sbb byte ptr [r8 - 0x7b], r9b ; ret
0x00000200000b65a7 : dec dword ptr [rcx - 0x75] ; sbb dh, dh ; ret
0x0000020000179a03 : dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x75], r9b ; ret 0xc148
0x00000200005a1935 : dec dword ptr [rcx - 0x75] ; xlatb ; mov rcx, qword ptr [r15 - 8] ; call qword ptr [rax]
0x00000200000d4491 : dec dword ptr [rcx - 0x76bb90ab] ; ret
0x000002000021cee5 : dec dword ptr [rcx - 0x77] ; adc byte ptr [r9 - 0x75], al ; ret 0x8949
0x00000200003d3485 : dec dword ptr [rcx - 0x7aafdbbc] ; ror byte ptr [rdi], 0x88 ; ret 0x1921
0x000002000011500a : dec dword ptr [rcx - 0x7b] ; fisttp qword ptr [rdi] ; test byte ptr [rax], bh ; ret 5
0x00000200001c6f71 : dec dword ptr [rcx - 0x7cb7efba] ; ret
0x0000020000177693 : dec dword ptr [rcx - 0x7d] ; ret
0x00000200003c5b11 : dec dword ptr [rcx - 0x7d] ; ret 0x4102
0x00000200001f4417 : dec dword ptr [rcx - 0x7d] ; ret 0x4804
0x000002000015a286 : dec dword ptr [rcx - 0x7d] ; ret 0x4904
0x0000020000521b31 : dec dword ptr [rcx - 0x7d] ; ret 0x4908
0x0000020000515a3c : dec dword ptr [rcx - 0x7d] ; ret 0x4ce8
0x000002000008d976 : dec dword ptr [rcx - 0x7d] ; ret 0xe908
0x0000020000015c1b : dec dword ptr [rcx - 0x7d] ; ror dword ptr [rax], 0x4d ; mov eax, dword ptr [rcx] ; jmp 0x20000015bf1
0x000002000008abc1 : dec dword ptr [rcx - 0x7f] ; ret 0
0x0000020000095a84 : dec dword ptr [rcx - 0x9b7db84] ; ret
0x000002000005e2f2 : dec dword ptr [rcx - 1] ; ret
0x00000200004e6b76 : dec dword ptr [rcx] ; add byte ptr [rbx - 0x7bf0fe17], al ; ret 0x9ff
0x0000020000086199 : dec dword ptr [rcx] ; add rsp, 0x28 ; ret
0x000002000077839c : dec dword ptr [rcx] ; cmp eax, 0xffb8aa9d ; jmp 0x20000754656
0x0000020000041371 : dec dword ptr [rcx] ; ret
0x0000020000500d0c : dec dword ptr [rdi + rcx + 0x48] ; ret
0x0000020000746616 : dec dword ptr [rdi - 0x45] ; call rbx
0x000002000046da6b : dec dword ptr [rdi] ; adc dword ptr [rbp + 0xf000000], -0x49 ; ret 0x8d48
0x0000020000627895 : dec dword ptr [rdi] ; add byte ptr [rax - 0x7b], cl ; ret 0x2574
0x0000020000106050 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x1c7
0x000002000017fa5a : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x348
0x00000200001d2399 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x000002000009c931 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x3b49
0x00000200001e08ac : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8948
0x00000200001d4efe : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8b49
0x00000200001cb7c0 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x00000200000aa144 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0xba48
0x00000200000ab032 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x8b48
0x0000020000009baf : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret 0x2348
0x000002000000e7ff : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000009b83 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x234c
0x00000200000589a0 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xb949
0x0000020000064020 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000000ffb3 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000105d97 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0x23], cl ; ret 0xb948
0x00000200000f70c5 : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x000002000007bcdf : dec dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200001035eb : dec dword ptr [rdi] ; add byte ptr [rax], al ; dec dword ptr [rax - 0x75] ; ret 0x2349
0x000002000068bb8d : dec dword ptr [rdi] ; add byte ptr [rbp + 0x50], dh ; xor al, al ; ret
0x0000020000598f58 : dec dword ptr [rdi] ; and dword ptr [rbp - 0x7f00173d], 0x3d ; ret 0xd69c
0x00000200000635d4 : dec dword ptr [rdi] ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rcx + 0x3b] ; ret 0xe072
0x000002000068aaed : dec dword ptr [rdi] ; mov bh, 0x44 ; std ; add byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x00000200005de10a : dec dword ptr [rdi] ; mov bh, 0x46 ; add bh, bh ; ret
0x00000200005a0d4a : dec dword ptr [rdi] ; mov bh, 0x4a ; add cl, byte ptr [rbp - 0x75] ; ret 0xc18b
0x000002000059e3ae : dec dword ptr [rdi] ; mov bh, 0x56 ; add dh, dh ; ret 0xf10
0x00000200006ce341 : dec dword ptr [rdi] ; mov bh, 0x5f ; or dh, dh ; ret
0x000002000062c12f : dec dword ptr [rdi] ; mov bh, 0xc0 ; add ebx, eax ; jmp 0x2000062c145
0x00000200005d778d : dec dword ptr [rdi] ; mov bh, dh ; jnp 0x200005d7792 ; dec dword ptr [rax - 0x75] ; ret
0x00000200003bd9a5 : dec dword ptr [rdi] ; mov byte ptr [rbx], bl ; cmp byte ptr [rdx], bl ; add dh, dh ; ret
0x0000020000032a60 : dec dword ptr [rdi] ; mov ch, al ; call qword ptr [rdx]
0x00000200001976e3 : dec dword ptr [rdi] ; mov dh, 0x53 ; and esi, esi ; ret 0xf08
0x0000020000069bd1 : dec dword ptr [rdi] ; mov dh, 0x56 ; jo 0x20000069bd3 ; ret 0xf04
0x00000200000d0a7b : dec dword ptr [rdi] ; mov dh, 0x56 ; jo 0x200000d0a7d ; ret 0xf04
0x00000200005a7b48 : dec dword ptr [rdi] ; mov dh, 0x5d ; add esi, esi ; ret
0x00000200000c6c29 : dec dword ptr [rdi] ; mov dh, 0x85 ; ret
0x00000200000c6cd5 : dec dword ptr [rdi] ; mov dh, 0x93 ; ret
0x00000200000c027b : dec dword ptr [rdi] ; mov dh, 0xbb ; ret
0x000002000021f051 : dec dword ptr [rdi] ; mov dh, 0xc0 ; add rsp, 0x28 ; ret
0x00000200001e0604 : dec dword ptr [rdi] ; mov dh, 0xc0 ; mov cr8, rax ; ret
0x0000020000207fa3 : dec dword ptr [rdi] ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005d14aa : dec dword ptr [rdi] ; mov edx, 0x5890be8 ; ret
0x00000200005306e6 : dec dword ptr [rdi] ; mov edx, 0x8b480a2b ; ret
0x00000200007867b8 : dec dword ptr [rdi] ; mov edx, 0xb4b32f2d ; call qword ptr [rcx]
0x00000200006dc81a : dec dword ptr [rdi] ; mov edx, 0xbea04535 ; call qword ptr [rax]
0x00000200006dc408 : dec dword ptr [rdi] ; mov edx, 0xbea45735 ; call qword ptr [rax]
0x0000020000046956 : dec dword ptr [rdi] ; ret
0x0000020000775df7 : dec dword ptr [rdi] ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x000002000048a689 : dec dword ptr [rdi] ; test ah, bh ; ret 0x12
0x000002000008550d : dec dword ptr [rdi] ; test bh, cl ; ret
0x000002000007ed2d : dec dword ptr [rdi] ; test byte ptr [rax - 0xa000000], cl ; ret 0xf08
0x00000200005a9bf7 : dec dword ptr [rdi] ; test byte ptr [rax], bh ; ret 0xffeb
0x00000200005a2a7d : dec dword ptr [rdi] ; test byte ptr [rbp - 0x75000000], ch ; ret 0xe8c1
0x00000200004e0988 : dec dword ptr [rdi] ; test byte ptr [rbx], dh ; ret
0x0000020000181636 : dec dword ptr [rdi] ; test byte ptr [rsi - 0x9ffffff], bh ; ret
0x00000200003fc6cc : dec dword ptr [rdi] ; test byte ptr [rsi], al ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf01
0x00000200000a7e7c : dec dword ptr [rdi] ; test byte ptr [rsi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000039002 : dec dword ptr [rdi] ; test ch, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000177216 : dec dword ptr [rdi] ; test ch, dh ; wait ; in eax, dx ; inc dword ptr [rcx - 0x75] ; ret
0x00000200000fe9bd : dec dword ptr [rdi] ; test ch, dl ; ret
0x0000020000521a94 : dec dword ptr [rdi] ; test cl, bh ; ret
0x00000200000dc02e : dec dword ptr [rdi] ; test dh, ch ; ret 0xb
0x000002000075d6c1 : dec dword ptr [rdi] ; test dword ptr [rax], edi ; ret
0x00000200000938f3 : dec dword ptr [rdi] ; test dword ptr [rax], esp ; str word ptr es:[rcx - 0x7d] ; ret
0x0000020000528d64 : dec dword ptr [rdi] ; test dword ptr [rbx - 0x74fff58f], eax ; ret
0x000002000002f4b4 : dec dword ptr [rdi] ; test dword ptr [rcx - 0x9ffecd4], ebp ; ret 0x7502
0x00000200004acd6c : dec dword ptr [rdi] ; test dword ptr [rcx], ebp ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x000002000051fd95 : dec dword ptr [rdi] ; test dword ptr [rdx - 0xfff52a], ecx ; ret 0x3b44
0x00000200004eb58f : dec dword ptr [rdi] ; test dword ptr [rsi], eax ; ret
0x0000020000445f53 : dec dword ptr [rdi] ; test eax, eax ; ret
0x00000200001a123e : dec dword ptr [rdi] ; test eax, edi ; jno 0x200001a1245 ; inc dword ptr [rcx - 0x75] ; ret
0x00000200000855f5 : dec dword ptr [rdi] ; test ebp, ebp ; ret 0xf
0x00000200004eb6b7 : dec dword ptr [rdi] ; test ecx, ebx ; ret 9
0x00000200005cb5b9 : dec dword ptr [rdi] ; test ecx, edi ; ret 0xfff4
0x00000200004e3c2a : dec dword ptr [rdi] ; test esi, ebx ; and ecx, dword ptr [rdx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001cdde2 : dec dword ptr [rdi] ; test esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000045c1a4 : dec dword ptr [rdi] ; xchg dword ptr [rdi], eax ; add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x00000200003aad0c : dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000200004792f5 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x7ee8
0x000002000052199a : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc933
0x00000200001b3535 : dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000002000058e635 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc933
0x00000200006c355a : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xff33
0x0000020000413fe3 : dec dword ptr [rdx + 0x10] ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000200003f39a1 : dec dword ptr [rdx + 0x18] ; ret
0x000002000019f9b7 : dec dword ptr [rdx + 0x3345844d] ; rol byte ptr [rcx - 0x75], cl ; ret 0x4589
0x00000200001cb78e : dec dword ptr [rdx + 0xd0] ; ret
0x0000020000114d63 : dec dword ptr [rdx + 0xd8d48d3] ; ret
0x00000200001a1954 : dec dword ptr [rdx - 0x1730742d] ; ret 0xec02
0x00000200006cb4ef : dec dword ptr [rdx - 0x179fdbb4] ; xchg eax, ebx ; ret
0x00000200001fb72b : dec dword ptr [rdx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200001bab69 : dec dword ptr [rdx - 0x3b7cb73d] ; push rax ; pop rbx ; ret
0x00000200001771a9 : dec dword ptr [rdx - 0x74bef68c] ; ret
0x0000020000206293 : dec dword ptr [rdx] ; add rsp, 0x28 ; ret
0x000002000049a7a6 : dec dword ptr [rsi + 0x5c] ; mov rcx, r13 ; call 0x200000c23c9
0x00000200005223a2 : dec eax ; add rax, rdx ; jmp 0x2000052233f
0x000002000013767a : dec eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000085ebb : dec eax ; cmp eax, 2 ; jl 0x20000085eca ; ret
0x0000020000157597 : dec eax ; jmp 0x2000000384f
0x00000200001346db : dec eax ; jne 0x200001346d7 ; xor rax, rax ; ret
0x0000020000149929 : dec eax ; jne 0x20000149924 ; ret
0x000002000014f506 : dec eax ; jne 0x2000014f504 ; ret
0x000002000014f5b4 : dec eax ; jne 0x2000014f5b2 ; ret
0x00000200001f4431 : dec eax ; lock or dword ptr [r10], eax ; ret
0x000002000014f368 : dec eax ; mov byte ptr [rcx], al ; jne 0x2000014f369 ; mov rax, r11 ; ret
0x00000200000d1f20 : dec eax ; mov dword ptr [rbx + 0x10], eax ; jmp 0x200000d1ef0
0x0000020000030ae3 : dec eax ; mov qword ptr [rdi], rax ; mov al, 1 ; pop rdi ; ret
0x000002000061f55f : dec eax ; not eax ; lock and dword ptr [r8], eax ; ret
0x00000200000f0407 : dec eax ; ret
0x0000020000074224 : dec eax ; test eax, 0xffffff ; je 0x20000074237 ; ret
0x00000200001b6c1c : dec ebp ; add byte ptr [rax], al ; add byte ptr [rsp + rbx - 0x7f], dh ; call rsi
0x00000200001c57ae : dec ebx ; jmp 0x200001c579b
0x000002000063abaa : dec ecx ; inc dword ptr [rax] ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000146967 : dec edx ; jne 0x20000146917 ; sfence ; ret
0x000002000003ce29 : dec edx ; mov dword ptr [r8 + 4], r10d ; ret
0x00000200000376a4 : dec edx ; mov dword ptr [rax + 4], edx ; ret
0x00000200001c6ed6 : dec esp ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001a9b67 : dec esp ; add rsp, 0x28 ; ret
0x00000200006d32dc : dec esp ; add rsp, 0x38 ; ret
0x00000200001e728b : dec esp ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005cb5ac : dec esp ; jmp 0x20000517832
0x0000020000172076 : dec esp ; lea rcx, qword ptr [rip + 0x75b5d] ; call rax
0x000002000041e5a6 : dec esp ; lock inc dword ptr [rcx + 0x758] ; ret
0x00000200005462c6 : dec esp ; mov eax, 0x1c ; ret
0x00000200001627ee : dec esp ; mov eax, 0xc00000ef ; ret
0x000002000016e64c : dec esp ; mov eax, 1 ; ret
0x000002000016752a : dec esp ; mov eax, 3 ; ret
0x000002000014f782 : dec esp ; mov eax, dword ptr [rip + 0x5b98b6] ; ret
0x000002000058ba96 : dec esp ; mov edi, 0xc000009a ; jmp 0x200004f7cf5
0x000002000010c666 : dec esp ; mov rax, cr8 ; ret
0x000002000077c460 : dec esp ; mov rcx, r11 ; call rbx
0x00000200005629a0 : dec esp ; mov rcx, rbx ; call 0x2000004ec1f
0x0000020000571f08 : dec esp ; movzx eax, byte ptr [rip - 0x27d860] ; ret
0x0000020000545fbe : dec esp ; nop ; ret
0x0000020000089e4e : dec esp ; test rcx, rcx ; jne 0x20000089e61 ; mov al, 1 ; ret
0x000002000054242e : dec esp ; xchg qword ptr [rip + 0x1b6d69], rcx ; ret
0x00000200001b1659 : dec esp ; xor al, al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001fee7d : dec esp ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000011787e : dec esp ; xor eax, eax ; xchg qword ptr [rcx], rax ; ret
0x0000020000776fd0 : dec esp ; xor edx, edx ; lea ecx, dword ptr [rdx + 3] ; call 0x200000432c5
0x000002000019bde8 : dec esp ; xor edx, edx ; mov eax, r8d ; div ecx ; ret
0x00000200004eb307 : dec qword ptr [r8 - 0x75] ; adc cl, byte ptr [rax - 0x75] ; ret 0x2b49
0x0000020000071330 : dec qword ptr [r8 - 0x75] ; ret
0x00000200000e85a4 : dec qword ptr [rax + 0xb] ; ret 0x44c7
0x00000200001326e7 : dec qword ptr [rax - 0x39] ; ret 0xba00
0x0000020000046170 : dec qword ptr [rax - 0x3f] ; jmp 0x20048c6ec85
0x00000200000a8458 : dec qword ptr [rax - 0x75] ; ret 0x48f0
0x00000200000a1382 : dec qword ptr [rax - 0x75] ; ret 0x49f0
0x00000200001cb78d : dec qword ptr [rdx + 0xd0] ; ret
0x000002000003ce28 : dec r10d ; mov dword ptr [r8 + 4], r10d ; ret
0x00000200001346da : dec r8 ; jne 0x200001346d8 ; xor rax, rax ; ret
0x0000020000149928 : dec r8 ; jne 0x20000149925 ; ret
0x000002000014f505 : dec r8 ; jne 0x2000014f505 ; ret
0x000002000014f5b3 : dec r8 ; jne 0x2000014f5b3 ; ret
0x00000200005223a1 : dec rax ; add rax, rdx ; jmp 0x20000522340
0x00000200005223a0 : dec rax ; add rax, rdx ; jmp 0x20000522341
0x0000020000137679 : dec rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013575d : dec rax ; ret
0x0000020000146966 : dec rdx ; jne 0x20000146918 ; sfence ; ret
0x00000200000c25e9 : dec word ptr [rax + 0x1e4] ; ret
0x00000200000710a9 : dec word ptr [rax + 0x1e6] ; ret
0x00000200000c2600 : dec word ptr [rcx + 0x1e4] ; ret
0x0000020000206292 : dec word ptr [rdx] ; add rsp, 0x28 ; ret
0x000002000019722c : div bl ; dec dword ptr [rbx - 0x9bebfc0] ; ret 0xf04
0x00000200006c66e8 : div bl ; ret 0x75ff
0x00000200003b68e0 : div byte ptr [rax + rcx + 0x48] ; mov ecx, esi ; call r14
0x000002000002cc14 : div byte ptr [rbp + 0x42] ; mov rbx, qword ptr [rsp + 0x18] ; pop rsi ; ret
0x000002000063615b : div byte ptr [rbp + 0xd] ; mov rcx, rax ; call 0x200000c23c8
0x00000200000f3fb0 : div byte ptr [rbp - 0x3e] ; jmp 0x200000f3f94
0x00000200001350b5 : div byte ptr [rbp - 0x47] ; lea rax, qword ptr [rcx + rax - 1] ; ret
0x0000020000135022 : div byte ptr [rbp - 0x75] ; xor eax, eax ; ret
0x000002000013344e : div byte ptr [rbp - 0x78] ; xor rax, rax ; ret
0x00000200000467e6 : div byte ptr [rbx + rbx - 0xa] ; ret
0x000002000004bdf7 : div byte ptr [rbx + rbx*4 - 0x17] ; ret
0x00000200005ef135 : div byte ptr [rbx] ; fisttp dword ptr [rax - 0x73] ; sbb r8b, r13b ; jmp rax
0x00000200005f6491 : div byte ptr [rbx] ; jmp qword ptr [rcx]
0x00000200006685e8 : div byte ptr [rcx + rbx*2 - 0xa] ; ret
0x000002000040b0ca : div byte ptr [rdi + rbx - 0x75] ; ret
0x000002000062646f : div byte ptr [rdi + rbx*2 - 0xa] ; ret
0x000002000052914c : div byte ptr [rdx + rcx*2 - 0x18] ; sub al, 0x60 ; ret 0x41ff
0x0000020000115c0d : div byte ptr [rdx - 0x75] ; ret
0x000002000062d8fd : div byte ptr [rdx - 0xa] ; ret
0x000002000014603b : div byte ptr [rsi + rax + 0x48] ; mov ecx, dword ptr [rsi + 0x50] ; jmp rcx
0x000002000057e6db : div byte ptr [rsi + rax - 1] ; ret 0xeed1
0x000002000013b1fd : div byte ptr [rsi + rsi - 0xa] ; ret
0x000002000059521b : div byte ptr [rsi - 0x75] ; ret
0x00000200001b4635 : div byte ptr [rsp + rax + 0xb] ; ret
0x0000020000625fa5 : div byte ptr [rsp + rdi - 0xa] ; ret
0x000002000018d3c3 : div cl ; inc dword ptr [rbp - 0x75] ; ret
0x000002000018d39c : div cl ; push rsi ; ret 0x741e
0x00000200000fd7d0 : div dh ; ret
0x0000020000527e78 : div dword ptr [rcx + 8] ; ret
0x00000200000efe85 : div dword ptr [rdx] ; add al, 0 ; add rsp, 0x40 ; pop rbx ; ret
0x000002000053c224 : div dword ptr [rsi - 0x24] ; inc dword ptr [rcx] ; ret
0x00000200001ea161 : div eax ; ret
0x00000200004255df : div ecx ; add rsp, 0x28 ; ret
0x00000200004ec552 : div ecx ; mov dword ptr [r8 + 0xc], eax ; ret
0x000002000015d3b8 : div ecx ; mov rax, rdx ; ret
0x000002000019bdef : div ecx ; ret
0x000002000001f700 : div esi ; ret
0x00000200001ea160 : div r8 ; ret
0x00000200004255de : div rcx ; add rsp, 0x28 ; ret
0x00000200004ec551 : div rcx ; mov dword ptr [r8 + 0xc], eax ; ret
0x000002000015d3b7 : div rcx ; mov rax, rdx ; ret
0x000002000043faba : emms ; add ecx, dword ptr [rdx - 0x3fcd3c3f] ; ret
0x00000200001445cd : encls ; mov rax, rbx ; pop rbx ; ret
0x00000200001445ad : encls ; pop rbx ; ret
0x000002000040db51 : enter -0x14e0, -0x16 ; mov eax, 0xc000000d ; ret
0x000002000009a5ab : enter -0x14f8, -0x23 ; or eax, 0xffffffff ; ret
0x000002000018b3b4 : enter -0x168b, -0x17 ; ret 0xf1ac
0x0000020000133b7c : enter -0x168e, 0x49 ; mov eax, edx ; ret
0x00000200004c9800 : enter -0x1701, 0x69 ; ret 0x89ff
0x00000200004543f7 : enter -0x1818, 0x6c ; sar bh, 0x8b ; ret
0x00000200006938d8 : enter -0x19, -0x75 ; ret
0x00000200001341ad : enter -0x1c8e, 0x49 ; mov eax, edx ; ret
0x0000020000437458 : enter -0x1d18, -0x65 ; ret
0x0000020000471981 : enter -0x1e80, 7 ; jne 0x20000471994 ; mov al, r9b ; ret
0x00000200003e7ec2 : enter -0x1f18, -0x80 ; ret
0x0000020000109a2e : enter -0x1f2d, -9 ; sal al, 1 ; and dword ptr [r10], eax ; ret
0x0000020000049eff : enter -0x1f2d, 0x3b ; ret 0xef72
0x000002000060b82b : enter -0x2018, 0x57 ; ret 0x4dff
0x000002000050fcde : enter -0x2318, -9 ; ret
0x00000200005a5097 : enter -0x2418, -0x68 ; ret
0x000002000051aadf : enter -0x2418, 0x49 ; ret
0x000002000041da6c : enter -0x2518, 0x5d ; ret
0x000002000052b65d : enter -0x26, -0x18 ; pop rbx ; ret 0x48ff
0x000002000014bf24 : enter -0x2918, 0x25 ; add byte ptr [rax], al ; nop ; ret
0x00000200005d2d6a : enter -0x298d, -0x17 ; ret
0x000002000012d5af : enter -0x2c75, -0x75 ; ret
0x000002000051cde9 : enter -0x2e18, 0x26 ; ret
0x000002000061f560 : enter -0x2f09, -0x10 ; and dword ptr [r8], eax ; ret
0x0000020000499b3a : enter -0x2f18, 0x35 ; ret 0x48ff
0x000002000049d9eb : enter -0x3018, 0x49 ; ret 0xebff
0x00000200003b0730 : enter -0x3075, 0x4c ; mov eax, dword ptr [rbx + 0x38] ; call rax
0x00000200001f6c4f : enter -0x30dd, 0x23 ; ret
0x00000200004f5ffa : enter -0x318, -0x3f ; ret 0xe9ff
0x00000200006858ef : enter -0x3418, -0x65 ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x000002000045020b : enter -0x36fd, -0x75 ; ret
0x0000020000030ae2 : enter -0x3701, 0x48 ; mov dword ptr [rdi], eax ; mov al, 1 ; pop rdi ; ret
0x00000200005577fa : enter -0x3b, -0x70 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200007856df : enter -0x3c01, -0x48 ; add byte ptr [rax], ah ; add byte ptr [rax], al ; ret
0x00000200000235a0 : enter -0x3c01, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000686c3e : enter -0x3c01, -0x75 ; ret 0x4cc3
0x0000020000503b25 : enter -0x3d, 0x48 ; add esp, 0x60 ; pop rbx ; ret
0x0000020000033ba7 : enter -0x3d75, 0x49 ; add dword ptr [rcx + rcx], eax ; ret
0x00000200001cf5aa : enter -0x3d75, 0x66 ; mov dword ptr [r8 + 0xa], ecx ; ret
0x0000020000006c92 : enter -0x3e75, -0x77 ; fisttp word ptr [r9 + 0x3b] ; ret 0x830f
0x000002000007aa39 : enter -0x3e75, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000046b181 : enter -0x3e75, 0x48 ; add esp, 0x28 ; ret
0x0000020000223914 : enter -0x3eb8, -0x16 ; or byte ptr [rcx - 0x7d], al ; ret 0x75ff
0x000002000019b3a7 : enter -0x3eb8, -0x20 ; or byte ptr [rax + 3], cl ; ret
0x000002000021028e : enter -0x3eb8, -0x20 ; or byte ptr [rax + 3], cl ; ret 0x8d48
0x00000200000fc4e6 : enter -0x3eb8, -6 ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200004e5c87 : enter -0x3fcd, -0x15 ; add ecx, dword ptr [rax - 0x75] ; ret 0x8b48
0x0000020000506d38 : enter -0x3fe5, 0x25 ; add al, 0 ; add al, al ; ret
0x00000200003de943 : enter -0x4018, -0x36 ; ret
0x00000200005240bf : enter -0x418, -0x4d ; ret 0x48ff
0x00000200003f5387 : enter -0x41f1, 4 ; or al, byte ptr [rcx + 0x3b] ; ret
0x000002000055707c : enter -0x42, -0x70 ; add rsp, 0x30 ; pop rbp ; ret
0x00000200000f789e : enter -0x4318, -0x5d ; int1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000499332 : enter -0x4718, 0x10 ; ret 0x48ff
0x0000020000090f7b : enter -0x47bf, 1 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000031e01 : enter -0x48f1, 4 ; ret
0x00000200003f6860 : enter -0x4918, 0x76 ; ret
0x000002000076c804 : enter -0x499b, -1 ; add rsp, 0x28 ; ret
0x000002000004e525 : enter -0x49f1, 0x45 ; ret 0x6b48
0x000002000049b456 : enter -0x4a15, -0x75 ; ret
0x000002000051100a : enter -0x4f18, -0x1c ; ret
0x00000200005281ca : enter -0x4f18, 0x6f ; ret 0x4cff
0x000002000051dc2b : enter -0x5018, 0x27 ; ret 0x85ff
0x000002000040de77 : enter -0x5418, -0x13 ; ret 0xb0ff
0x0000020000074225 : enter -0x57, -1 ; inc dword ptr [rax] ; je 0x20000074236 ; ret
0x000002000044b5a4 : enter -0x5918, -0x18 ; ret
0x0000020000681714 : enter -0x5918, -0x23 ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x00000200003e9bd4 : enter -0x5918, 0x55 ; salc ; dec dword ptr [rax - 0x75] ; ret
0x000002000049d3a3 : enter -0x5a8c, -0x15 ; ret
0x0000020000521b19 : enter -0x5e18, -0x27 ; ret 0x33ff
0x000002000051a719 : enter -0x5e18, 0x4d ; ret
0x0000020000122004 : enter -0x617, -1 ; add rsp, 0x40 ; pop rbx ; ret
0x000002000052b922 : enter -0x6718, 0x3b ; ret 0x4cff
0x0000020000475cf3 : enter -0x6818, 0x42 ; ret 0x48ff
0x000002000045d8a4 : enter -0x6918, 0x37 ; sar edi, -0x75 ; ret
0x0000020000076576 : enter -0x69f1, -0x40 ; ret
0x0000020000510a25 : enter -0x6a18, -0x16 ; ret
0x00000200000e9b55 : enter -0x6af1, -0x40 ; ret
0x00000200003f6582 : enter -0x6b18, 0x79 ; ret
0x00000200000156d3 : enter -0x6bf1, -0x40 ; ret
0x000002000012e3c9 : enter -0x6df1, -0x40 ; ret
0x00000200005cacfd : enter -0x6e18, 0x6b ; ret 0x90ff
0x000002000055e7b2 : enter -0x6f01, -0x17 ; ret
0x000002000055cde6 : enter -0x6f01, -0x17 ; ret 0xe568
0x0000020000573833 : enter -0x6f01, -0x17 ; ret 0xe749
0x00000200005743ab : enter -0x6f01, -0x17 ; ret 0xe757
0x000002000052952a : enter -0x6f18, 0x5f ; ret 0x8bff
0x00000200003ec250 : enter -0x6fd, -1 ; ret
0x0000020000528e2b : enter -0x7018, 0x66 ; ret 0x48ff
0x0000020000525e82 : enter -0x718, -0x6e ; ret 0x4dff
0x0000020000175642 : enter -0x72b3, 0x24 ; ret
0x0000020000200bc4 : enter -0x72b3, 0x2c ; ret
0x000002000010975b : enter -0x72b3, 0x34 ; ret
0x000002000016c821 : enter -0x72b3, 0x3c ; ret
0x0000020000109886 : enter -0x72b7, 0x2c ; ret
0x0000020000160342 : enter -0x72b7, 0x34 ; ret 0x8b48
0x00000200005360c9 : enter -0x72b8, 0x4f ; pop rcx ; call rax
0x00000200001ac5e6 : enter -0x72b8, 0x54 ; and al, 0x48 ; call r9
0x000002000015580d : enter -0x72b8, 4 ; or byte ptr [rax - 0x73], 0x1c ; ret 0x3c7
0x00000200003da67e : enter -0x72b8, 5 ; jp 0x200003da6f3 ; ret 0x48ff
0x0000020000616d59 : enter -0x72b8, 5 ; pop qword ptr [rsi] ; ret 0x49ff
0x000002000051b4d2 : enter -0x72b8, 5 ; pop rbx ; scasb al, byte ptr [rdi] ; jmp qword ptr [rcx]
0x0000020000121775 : enter -0x72b8, 5 ; ret
0x000002000052b1c2 : enter -0x72bc, 0x42 ; push rax ; call 0x2000014f4c8
0x000002000019c5f4 : enter -0x72bc, 0x42 ; sub al, ch ; ret 0xfb2e
0x000002000052ad20 : enter -0x72bc, 0x42 ; xor al, ch ; xchg eax, esi ; ret 0x48ff
0x000002000017f3ab : enter -0x72bf, 0x42 ; call rbx
0x000002000052e22e : enter -0x7318, 0x12 ; ret 0x8bff
0x000002000045d05d : enter -0x74b3, -0x3c ; call r10
0x0000020000642eb3 : enter -0x74b4, -0x3d ; call 0x2000014f186
0x00000200004ae254 : enter -0x74b4, 0x7d ; fmul dword ptr [rcx - 0x75] ; ret
0x00000200001445a9 : enter -0x74b7, -0x2f ; encls ; pop rbx ; ret
0x0000020000746cb5 : enter -0x74b7, -0x37 ; call 0x200000a2f56
0x0000020000620d14 : enter -0x74b8, -0x10 ; call 0x2000045cf96
0x0000020000560ae8 : enter -0x74b8, -0x18 ; call 0x200000bcd16
0x000002000049b9b0 : enter -0x74b8, -0x31 ; call 0x200000c2847
0x000002000049d2a9 : enter -0x74b8, -0x33 ; call 0x200000c2847
0x00000200001f44a7 : enter -0x74b8, -0x3f ; add rsp, 0x20 ; pop rbx ; ret
0x000002000063da37 : enter -0x74b8, -0x3f ; add rsp, 0x28 ; ret
0x00000200001f4f60 : enter -0x74b8, -0x3f ; add rsp, 0x40 ; pop rbx ; ret
0x000002000001f41e : enter -0x74b8, -0x3f ; ret
0x00000200000dd13f : enter -0x74b8, 0x41 ; or byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200000b36b5 : enter -0x74b8, 0x41 ; sbb byte ptr [rax + 0x23], cl ; ret 0x8348
0x00000200006c18f0 : enter -0x74b8, 0x5c ; and al, 8 ; mov rax, r9 ; ret
0x0000020000149904 : enter -0x74b8, 4 ; adc dword ptr [rax + 0xf], ecx ; ret
0x000002000009f7f3 : enter -0x74b8, 5 ; insd dword ptr [rdi], dx ; ret
0x00000200000af8bb : enter -0x74b8, 5 ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x24
0x0000020000631029 : enter -0x74b8, 5 ; outsd dx, dword ptr [rsi] ; mov ecx, esi ; jmp qword ptr [rbx]
0x00000200004ce8a2 : enter -0x74bc, -0x40 ; call rsi
0x0000020000689648 : enter -0x74bc, -8 ; call 0x200006858c6
0x00000200004c6ceb : enter -0x74bc, 0x44 ; enter 0x4c08, 3 ; ret 0x3b49
0x00000200001a97df : enter -0x74be, 4 ; ret 0x488d
0x000002000041ef27 : enter -0x74bf, -0x3f ; add rsp, 0x28 ; ret
0x000002000002788e : enter -0x74bf, -0x3f ; add rsp, 0x38 ; ret
0x000002000046f2d1 : enter -0x74bf, -0x3f ; add rsp, 0x48 ; ret
0x00000200001340c5 : enter -0x74bf, -0x3f ; ret
0x000002000001cc10 : enter -0x74bf, -0x7c ; mov al, al ; ret 1
0x00000200004397d0 : enter -0x7501, -0x3d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f0589 : enter -0x75bc, -0x3f ; mov al, r8b ; ret
0x0000020000062df7 : enter -0x75bf, -0x3e ; add rsp, 0x28 ; ret
0x00000200001e7509 : enter -0x75bf, -0x3f ; add rsp, 0x48 ; ret
0x00000200000b5c58 : enter -0x7601, 0x45 ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200000e68c4 : enter -0x7601, 0x46 ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200004f7abd : enter -0x7618, -0x26 ; ret
0x00000200004c6921 : enter -0x76b4, 0x28 ; call 0x200000e9467
0x0000020000638896 : enter -0x76b6, 0xc ; ret
0x000002000006c1c4 : enter -0x76b7, -0x72 ; cwde ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200006b48ec : enter -0x76b7, 0x43 ; adc dh, dh ; ret
0x00000200000defe9 : enter -0x76b7, 0x44 ; ror byte ptr [rax], 1 ; ret
0x00000200004ac8fa : enter -0x76b8, 0x4d ; sbb al, ch ; lodsb al, byte ptr [rsi] ; in al, dx ; ret
0x0000020000116cd0 : enter -0x76b8, 0xa ; ret
0x0000020000030ae4 : enter -0x76b8, 7 ; mov al, 1 ; pop rdi ; ret
0x0000020000667092 : enter -0x76bf, 0x44 ; cmc ; sbb byte ptr [rax - 0x75], cl ; ret
0x0000020000749dad : enter -0x76f0, 5 ; push rbx ; push rsp ; ret
0x00000200006c6f52 : enter -0x76ff, 0x47 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000746612 : enter -0x77bc, 5 ; dec dword ptr [rdi - 0x45] ; call rbx
0x000002000003ffec : enter -0x77bf, 8 ; ret
0x0000020000085ebc : enter -0x77d, 2 ; jl 0x20000085ec9 ; ret
0x0000020000215002 : enter -0x78f1, 0x7a ; add al, 0 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000662eea : enter -0x7ab8, -0x37 ; jne 0x20000662edc ; mov rax, rcx ; ret
0x00000200007628c4 : enter -0x7af1, -0x2f ; xchg byte ptr [rcx], al ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000001cbc7 : enter -0x7af1, -0x3c ; call qword ptr [rbx]
0x0000020000096a0b : enter -0x7af1, -9 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], cl ; ret
0x0000020000774ef6 : enter -0x7af1, 0x68 ; adc ch, bh ; dec dword ptr [rax - 0x7d] ; ret 0x4108
0x00000200000328c0 : enter -0x7b01, -0x2e ; cmovne eax, ecx ; ret
0x00000200004036ae : enter -0x7b18, 7 ; ret
0x00000200003a6a24 : enter -0x7bf1, 0x3a ; add byte ptr [rax], r8b ; mov al, 1 ; ret
0x00000200003f2b06 : enter -0x7cb7, -0x40 ; adc byte ptr [rcx - 0x7d], al ; ret
0x00000200004a6551 : enter -0x7cb8, -0x3f ; add al, 0x8b ; ret 0x3b48
0x000002000003e29c : enter -0x7cb8, -0x3f ; add cl, byte ptr [rcx - 1] ; ret 0x8348
0x00000200000b8a84 : enter -0x7cb8, -0x40 ; or byte ptr [rax + 0x3b], cl ; ret 0x1374
0x00000200001fab66 : enter -0x7cb8, 0x64 ; and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x000002000000a4b6 : enter -0x7cbf, -0x1f ; add al, byte ptr [rcx - 0xa] ; ret 0x7404
0x0000020000120075 : enter -0x7cf1, -0x72 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x000002000042c802 : enter -0x7cf1, 0x2c ; call 0x1ffc3cdc829
0x000002000050d6fa : enter -0x7df1, -0x33 ; jb 0x2000050d710 ; add bh, bh ; ret 0xfa83
0x000002000022ec6b : enter -0x7df1, -0x52 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x870f
0x000002000067a3ee : enter -0x7df1, -0x70 ; add byte ptr [rax], al ; add bh, bh ; ret 0xfa83
0x000002000067871e : enter -0x7df1, -0x77 ; add byte ptr [rax], al ; add bh, bh ; ret 0xfa83
0x0000020000679736 : enter -0x7df1, -0x78 ; add byte ptr [rax], al ; add bh, bh ; ret 0xfa83
0x000002000008ddd0 : enter -0x7df1, -0x79 ; str word ptr fs:[rbp - 0x75] ; ret 0xb70f
0x0000020000679f0b : enter -0x7df1, 0x10 ; add dword ptr [rax], eax ; add bh, bh ; ret 0xfa83
0x0000020000516606 : enter -0x7df1, 0x1b ; add dword ptr [rax], eax ; add bh, bh ; ret 0x8348
0x0000020000677d53 : enter -0x7df1, 0x28 ; add dword ptr [rax], eax ; add bh, bh ; ret 0xfa83
0x00000200006798dd : enter -0x7df1, 0x40 ; add dword ptr [rax], eax ; add bh, bh ; ret 0xfa83
0x0000020000411189 : enter -0x7df1, 0x50 ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x00000200003b1cbb : enter -0x7df1, 0x6b ; add dword ptr [rax], eax ; add bh, bh ; ret 0xfa83
0x0000020000416b69 : enter -0x7e18, -0x64 ; ret 0xf6ff
0x0000020000489b1d : enter -0x7e18, 0x31 ; ret
0x000002000012d4a4 : enter -0x7ef5, -0x3f ; ret
0x000002000060ef8a : enter -0x7f18, 0x20 ; ret 0xebff
0x00000200000c64d4 : enter -0x98d, -1 ; jmp 0x200000c63a1
0x00000200001f2e14 : enter -0xa9e, -1 ; add rsp, 0x48 ; ret
0x000002000017c5d6 : enter -0xb8, -0x3e ; jmp 0x2000017c581
0x00000200001ed3b4 : enter -0xba3, -1 ; add rsp, 0x58 ; ret
0x000002000040916f : enter -0xbf, -0x3e ; jmp 0x20000409145
0x00000200001346dc : enter -0xe8b, 0x48 ; xor eax, eax ; ret
0x000002000047e1ff : enter -0xf8e, -0x7d ; loopne 0x2000047e22a ; ret
0x00000200006dcedb : enter -1, -0x75 ; ret
0x00000200001c6f6f : enter -1, -0x77 ; adc byte ptr [rax - 0x7d], r9b ; ret
0x0000020000061161 : enter -1, -0x7c ; ror byte ptr [rdi], 0x84 ; ret 1
0x000002000039aeb2 : enter 0, -0x18 ; ret 0x154b
0x000002000000f091 : enter 0, 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200004b277c : enter 0, 0 ; call 0x200000e24c7
0x00000200004dc823 : enter 0, 0 ; call r10
0x00000200003b7275 : enter 0, 0 ; inc rdx ; jmp 0x200003b7259
0x000002000059e537 : enter 0, 0 ; mov dword ptr [rcx + r8], eax ; inc edx ; jmp 0x2000059e51f
0x00000200004c6d43 : enter 0, 0 ; mov rcx, rdi ; call 0x20000052f7d
0x0000020000493d75 : enter 0, 0 ; pop r14 ; pop rbp ; ret
0x0000020000446d4b : enter 0, 0 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000051e933 : enter 0, 0 ; ret
0x00000200001ab3ac : enter 0x1270, 0 ; call rax
0x0000020000498d38 : enter 0x1574, 0x48 ; mov ecx, edi ; call 0x200000bb149
0x000002000051a8a5 : enter 0x15e8, 0x4c ; ret
0x0000020000171f53 : enter 0x16, -0x7b ; ror byte ptr [rdi], 0x89 ; ret
0x000002000060a0b3 : enter 0x1674, -0x75 ; ret
0x000002000014f369 : enter 0x188, 0x75 ; mov rax, r11 ; ret
0x00000200003c6459 : enter 0x19, -0x7d ; ret
0x00000200005298a1 : enter 0x19e8, 0x5c ; ret 0x8bff
0x000002000006329d : enter 0x1a0, 0 ; add byte ptr [rcx - 0x75], cl ; ret 0x348
0x00000200005211a0 : enter 0x1ae8, -0x1d ; ret 0x40ff
0x0000020000595a84 : enter 0x1b9, 0 ; add byte ptr [rax], al ; call rax
0x000002000041d656 : enter 0x1ce8, 0x67 ; ret 0x8bff
0x00000200003f6415 : enter 0x1e8, 0x7b ; ret
0x000002000052859c : enter 0x1ee8, 0x6f ; ret 0x8dff
0x000002000013ef52 : enter 0x2275, -0x7d ; ret 0x83f8
0x0000020000512e58 : enter 0x22e8, -0x3d ; ret
0x000002000051ba98 : enter 0x22e8, 0x3a ; ret
0x000002000013d352 : enter 0x2375, -0x7d ; ret 0x83f8
0x0000020000020791 : enter 0x23c, 0xf ; xchg eax, ebp ; ret 0x10e9
0x00000200007321a6 : enter 0x2575, -0x7d ; ret
0x0000020000173f75 : enter 0x2774, -0xa ; ret 0xf04
0x000002000005e4e4 : enter 0x29, 1 ; mov r8, r10 ; jmp 0x2000005e4b5
0x0000020000762a41 : enter 0x29e8, 0x46 ; pushfq ; dec dword ptr [rax - 0x75] ; ret
0x00000200006bafa6 : enter 0x2b41, -0x36 ; mov dword ptr [r8], ecx ; ret
0x00000200003ed6f3 : enter 0x2b45, -0x38 ; mov eax, r9d ; ret
0x0000020000586af6 : enter 0x2b48, 0xd ; ret 0xcb63
0x0000020000146986 : enter 0x2b49, -0x30 ; jne 0x20000146989 ; sfence ; ret
0x0000020000042408 : enter 0x2bd2, 0 ; add rsp, 0x28 ; ret
0x00000200003e9476 : enter 0x2ce8, 0x6b ; ret
0x000002000052e9b8 : enter 0x2e8, 0xb ; ret 0x48ff
0x00000200004433a4 : enter 0x32e8, 0x6f ; ret 0xebff
0x00000200003ed203 : enter 0x3345, -0x38 ; mov eax, r9d ; ret
0x00000200004a4cce : enter 0x3345, -0x40 ; xor edx, edx ; call 0x200000cfb99
0x0000020000171720 : enter 0x3349, -0x3f ; mov rcx, rax ; call rdx
0x0000020000116c85 : enter 0x33c3, -0x40 ; ret
0x00000200004c3ad3 : enter 0x33ff, -0x40 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005223a3 : enter 0x348, -0x3e ; jmp 0x2000052233e
0x00000200006aacab : enter 0x348, 0xd ; ret 0xebff
0x0000020000510286 : enter 0x34e8, -0xe ; ret
0x0000020000524a85 : enter 0x35e8, -0x56 ; ret 0x33ff
0x0000020000516681 : enter 0x39e8, -0x72 ; ret
0x00000200004c7ba4 : enter 0x3ae8, 0x52 ; ret 0x8bff
0x0000020000405ccc : enter 0x3b45, -0x3f ; jb 0x20000405cb9 ; mov eax, edx ; ret
0x0000020000405ccc : enter 0x3b45, -0x3f ; jb 0x20000405cba ; mov eax, edx ; ret
0x00000200006b4996 : enter 0x3b48, 0xd ; push 0x9e ; ret 0x76ff
0x000002000041a8bc : enter 0x3b49, -0x38 ; cmovne eax, edx ; ret
0x0000020000133b79 : enter 0x3b4d, -0x38 ; jb 0x20000133b71 ; mov rax, r10 ; ret
0x00000200001249e5 : enter 0x3e0, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x00000200001138cc : enter 0x4119, -0x75 ; ret 0xeac1
0x00000200000905bf : enter 0x4166, -1 ; ret
0x000002000010eefd : enter 0x4166, 0x3b ; ret
0x00000200002175f5 : enter 0x4166, 0xf ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000002000014f1c8 : enter 0x4188, -1 ; jne 0x2000014f1c9 ; mov rax, r11 ; ret
0x00000200001142cf : enter 0x41ff, 0x2b ; ret 0x344
0x000002000049a678 : enter 0x42e8, 0x7d ; ret 0xebff
0x00000200000d1f21 : enter 0x4389, 0x10 ; jmp 0x200000d1eef
0x000002000012d8bb : enter 0x448b, 0x24 ; jo 0x2000012d8ca ; ret 0xc803
0x00000200000a2f8b : enter 0x450f, -0x3e ; ret
0x000002000004c662 : enter 0x45ff, -0x7b ; test byte ptr [rdi], 0x4f ; ret 0x8388
0x00000200000ecddc : enter 0x460f, -0x3f ; ret
0x00000200001fddaf : enter 0x473, 0x4c ; mov dword ptr [rdx + 0x38], eax ; xor eax, eax ; ret
0x00000200001dd976 : enter 0x477, 0x48 ; or ebx, 4 ; call 0x200000d9be9
0x0000020000008548 : enter 0x477, 0x48 ; sub eax, ecx ; ret
0x00000200000220dd : enter 0x4801, 0x3b ; ret 0x1674
0x00000200002280d4 : enter 0x4803, 0x33 ; ror byte ptr [rax - 0x75], 1 ; ret
0x0000020000106585 : enter 0x4808, -0x75 ; adc byte ptr [rax - 0x7d], r9b ; ret 0x4408
0x0000020000213174 : enter 0x4808, -1 ; ret
0x00000200001a6fb5 : enter 0x4828, -0x75 ; pop rsp ; and al, 8 ; ret
0x000002000009b45e : enter 0x48c3, -0x73 ; add eax, 0x261819 ; ret
0x000002000013fea8 : enter 0x48f2, 0xf ; sub al, cl ; ret
0x00000200001e16ab : enter 0x48ff, -0x3f ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000058ae5f : enter 0x48ff, -0x75 ; fdiv dword ptr [rbx] ; ror byte ptr [rax - 1], cl ; ret
0x0000020000765675 : enter 0x48ff, -0x75 ; ret
0x00000200004f1b18 : enter 0x48ff, -0x75 ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200003e768e : enter 0x48ff, -0x7b ; sal byte ptr [rbp + 0x1a], 0x8b ; ret
0x00000200007627c4 : enter 0x4901, -0x77 ; sbb byte ptr [r9 - 0x75], cl ; ret 0xc148
0x000002000066a0eb : enter 0x49ff, -0x75 ; ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200004aa8a5 : enter 0x4a9f, 0 ; add rcx, rdx ; jmp rcx
0x00000200004be255 : enter 0x4bd2, 0 ; add rcx, r13 ; jmp rcx
0x000002000051ae6f : enter 0x4be8, 0x46 ; ret
0x0000020000205a0c : enter 0x4c03, -0x75 ; ret
0x00000200004c6cef : enter 0x4c08, 3 ; ret 0x3b49
0x0000020000072e4b : enter 0x4d08, -0x7b ; sal byte ptr [rbp + 4], 0x48 ; mov eax, edx ; ret
0x0000020000061c3b : enter 0x4fe8, -0x16 ; add eax, 0x220f4400 ; ret
0x00000200004849e2 : enter 0x50ff, 0x10 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000041450 : enter 0x572, 0x48 ; add esp, 0x38 ; ret
0x00000200006da4f8 : enter 0x58b, -0x6b ; ret
0x00000200003d9e1d : enter 0x58b8, 0 ; add al, al ; ret
0x0000020000521c62 : enter 0x58e8, -0x28 ; ret 0x89ff
0x0000020000434a5a : enter 0x58e8, 0x61 ; ret 0x48ff
0x00000200003e9560 : enter 0x5ae8, 0x5f ; salc ; dec dword ptr [rax - 0x75] ; ret
0x000002000041e07c : enter 0x5b7, 0 ; add rsp, 0x48 ; ret
0x000002000060aeaf : enter 0x5be8, 0x61 ; ret 0x4cff
0x000002000017c779 : enter 0x5be9, -0x10 ; out dx, al ; push rsi ; ret 0xf03
0x000002000051bd5e : enter 0x5ce8, 0x37 ; ret
0x000002000052055d : enter 0x5de8, -0x11 ; ret 0x48ff
0x000002000003251e : enter 0x5f, 0 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000046687b : enter 0x5fff, 0x5e ; pop rbx ; ret
0x0000020000602ca7 : enter 0x601c, 0 ; add rdx, r8 ; jmp rdx
0x0000020000143c4b : enter 0x6602, -9 ; ret 0x100
0x000002000012b89d : enter 0x6608, -0x77 ; push rbp ; add bh, bh ; ret 0x8341
0x0000020000148eff : enter 0x6608, 3 ; ret
0x0000020000530128 : enter 0x6630, 0xb ; ret 0x4166
0x0000020000227ca7 : enter 0x6674, -0x75 ; ret 0xe083
0x000002000052a854 : enter 0x66e8, 0x4c ; ret 0x40ff
0x0000020000745bfd : enter 0x673, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200005fd20d : enter 0x674, -0x48 ; add dword ptr [rax], eax ; add al, al ; ret
0x00000200000328fa : enter 0x674, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000156e9 : enter 0x675, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001f497b : enter 0x677, 0x48 ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200005fd1a4 : enter 0x6975, -0x48 ; add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x00000200003db001 : enter 0x69e8, -0x10 ; ret
0x00000200004fd0b1 : enter 0x69e8, -0x50 ; ret
0x00000200003fb0ec : enter 0x6ae8, 0x59 ; ret
0x00000200004676db : enter 0x6b48, -0x40 ; cmp byte ptr [rax + 3], cl ; ret
0x00000200004291eb : enter 0x7175, -0x75 ; ret
0x000002000051c646 : enter 0x74e8, 0x2e ; ret
0x00000200001351ac : enter 0x774, -0xa ; ret 0x7507
0x0000020000052067 : enter 0x775, -0x75 ; add eax, 0x32d19c ; ret
0x000002000013ef6d : enter 0x775, -0x7d ; ret 0x75ff
0x000002000001e71b : enter 0x788b, 0x40 ; jmp 0x2000001e6e9
0x000002000012523c : enter 0x796, 0 ; mov al, 1 ; jmp 0x2000012520e
0x00000200003fa673 : enter 0x7be8, 0x56 ; ret
0x0000020000528a3f : enter 0x7be8, 0x6a ; ret 0x8bff
0x000002000052513d : enter 0x7de8, -0x5d ; ret 0x41ff
0x0000020000512cb3 : enter 0x7e8, -0x38 ; ret
0x000002000048e38c : enter 0x7ee8, -0x17 ; ret 0x84ff
0x0000020000485980 : enter 0x88, 0 ; add byte ptr [rdi], cl ; test dword ptr [rdi], edx ; call qword ptr [rdx]
0x000002000077d24b : enter 0xa75, -0x75 ; ret 0x8341
0x00000200003e33ce : enter 0xa75, -0x75 ; ret 0xb9eb
0x00000200001f547a : enter 0xb7e, 0x45 ; mov ecx, ebx ; mov r8d, edx ; jmp 0x200001f5490
0x00000200000516ac : enter 0xc75, -0x75 ; add eax, 0x32dbb7 ; ret
0x00000200003ce8c7 : enter 0xd75, -0x75 ; ret
0x00000200003e539d : enter 0xde8, -0x60 ; ret
0x000002000021aa88 : enter 0xdeb, -0xa ; ret 0x7440
0x0000020000073304 : enter 0xdeb, 0 ; ret
0x00000200003d49ce : enter 0xf08, -0x7b ; sbb dword ptr cs:[eax], eax ; inc edx ; jmp 0x200003d49c5
0x0000020000004e0a : enter 0xf24, 0xa ; ret
0x000002000062c167 : enter 0xf25, -0x49 ; ret
0x0000020000132ec3 : enter 0xf41, -0x45 ; ret 0xc149
0x00000200003ef6ec : enter 0xf41, -0x49 ; add cl, byte ptr [rcx - 0x7d] ; ret 0x6602
0x00000200003ef756 : enter 0xf41, -0x49 ; add cl, byte ptr [rcx - 0x7d] ; ret 0xe902
0x00000200003ef67a : enter 0xf41, -0x49 ; cmp cl, byte ptr [rcx - 0x7d] ; ret 0x6602
0x00000200001f6da6 : enter 0xf41, -0x49 ; ret 0x4166
0x00000200001fafb4 : enter 0xf41, -0x49 ; ret 0x6b48
0x00000200005e2e20 : enter 0xf41, -0x49 ; ret 0x8d48
0x000002000066664d : enter 0xf41, -0x4a ; add cl, byte ptr [rcx - 1] ; ret 0x692d
0x0000020000666f49 : enter 0xf41, -0x4a ; or cl, byte ptr [rcx - 1] ; ret 0x2b41
0x0000020000666e3b : enter 0xf41, -0x4a ; or ecx, dword ptr [rcx - 1] ; ret
0x0000020000135d91 : enter 0xf41, 0x44 ; fisttp qword ptr [rax + 0x63] ; ret
0x000002000077e44f : enter 0xf44, -0x49 ; ret
0x00000200001814c6 : enter 0xf44, 0x46 ; ret 0x8b41
0x0000020000412c91 : enter 0xf44, 0x47 ; ret 0x8b49
0x0000020000146947 : enter 0xf48, -0x3d ; ror byte ptr [r8 + 0xf], 1 ; ret
0x00000200006d94a2 : enter 0xf48, 0x4f ; ror dword ptr [rax + 1], 0xd ; ret 0xc2a4
0x00000200001f7d67 : enter 0xf49, 0x47 ; ret 0x8548
0x00000200001a3c38 : enter 0xf4c, 0x47 ; shr ecx, -0x6c ; ret
0x000002000021705b : enter 0xf66, 0x6a ; fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000002000021778a : enter 0xf66, 0x6f ; ret
0x00000200000405db : enter 1, 0 ; add rsp, 0x28 ; ret
0x000002000001e17d : enter 1, 0 ; ret
0x00000200001d1c2d : enter 6, 0 ; add dword ptr [rbp + 2], esi ; mov al, 1 ; ret
0x00000200000c073a : enter 6, 0 ; ret
0x00000200005212e3 : fabs ; ret 0x8bff
0x00000200005dcade : fadd dword ptr [r9 + rcx*4 + 0x45] ; in al, -0x75 ; ret 0x8d48
0x000002000064c50f : fadd dword ptr [rax + rax] ; add byte ptr [rcx + 3], al ; ret 0x8589
0x0000020000061713 : fadd dword ptr [rax] ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000020000451fe7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200007419e0 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000698068 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000137d12 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000042435c : fadd dword ptr [rax] ; add byte ptr [rax], al ; xor ecx, ecx ; call 0x20000050279
0x00000200001a62e4 : fadd dword ptr [rbp + 0x15] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000067e20b : fadd dword ptr [rbp + 0x3b] ; sal dword ptr [rbp + rcx + 0x41], -1 ; ret
0x000002000049f25e : fadd dword ptr [rbp - 0x2b77f025] ; ret
0x00000200004eb6ac : fadd dword ptr [rbp - 0x2b77f040] ; ret 9
0x000002000049f27c : fadd dword ptr [rbp - 0x6677f040] ; ret
0x000002000052d92d : fadd dword ptr [rbp - 0x74598a40] ; ret
0x000002000041ce3b : fadd dword ptr [rbp - 0x74b28740] ; ret
0x00000200000efdf1 : fadd dword ptr [rbp - 0x74c68a13] ; ret
0x0000020000535f52 : fadd dword ptr [rbp - 0x74d58640] ; ret
0x000002000041e696 : fadd dword ptr [rbp - 0x74f78640] ; ret
0x000002000064b187 : fadd dword ptr [rbp - 0x74fd8740] ; ret
0x00000200000f1990 : fadd dword ptr [rbp - 0x7b] ; sal byte ptr [rbp + 8], 0x8b ; ret
0x000002000047d9bc : fadd dword ptr [rbp - 0x7c878a01] ; ret
0x00000200005e134c : fadd dword ptr [rbx + rcx*4 + 0x45] ; ret
0x000002000013b910 : fadd dword ptr [rbx + rcx*4 + 0x75] ; ret
0x0000020000211798 : fadd dword ptr [rbx - 0x74b3fb20] ; ret
0x000002000003b4bf : fadd dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000020000083e72 : fadd dword ptr [rbx] ; and byte ptr [r8 - 0x75], r9b ; ret
0x0000020000170fec : fadd dword ptr [rbx] ; ret 0x4589
0x000002000050d46f : fadd dword ptr [rbx] ; ret 0xc285
0x00000200005c78ab : fadd dword ptr [rbx] ; ret 0xe89
0x000002000043e719 : fadd dword ptr [rcx + 0x3b] ; ret 0x870f
0x0000020000231ef4 : fadd dword ptr [rcx + 0x3b] ; ret 0xd675
0x000002000008a9c5 : fadd dword ptr [rcx + 0xf] ; mov dh, 0x41 ; add eax, dword ptr [rcx + 0x32] ; ret
0x000002000056fdac : fadd dword ptr [rcx + 0xf] ; ret
0x0000020000530510 : fadd dword ptr [rcx + 0xf] ; xchg eax, esp ; rol dword ptr [rcx - 0x75], -0x3f ; ret
0x00000200005dcadf : fadd dword ptr [rcx + rcx*4 + 0x45] ; in al, -0x75 ; ret 0x8d48
0x0000020000014ff9 : fadd dword ptr [rcx - 0x48] ; ret 0
0x00000200001f6eec : fadd dword ptr [rcx - 0x73] ; add qword ptr [rcx - 0x7d], rax ; ret 0x4402
0x00000200000beff5 : fadd dword ptr [rcx - 0x75] ; ret
0x00000200001d691f : fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x00000200006335e3 : fadd dword ptr [rcx - 0x75] ; ret 0xc91a
0x000002000072d8c4 : fadd dword ptr [rcx - 0x75] ; ret 0xe7f7
0x0000020000739652 : fadd dword ptr [rcx - 0x7d] ; ret
0x00000200005babf3 : fadd dword ptr [rcx - 0x7d] ; ret 0xeb08
0x000002000010d702 : fadd dword ptr [rcx - 1] ; ret
0x000002000063157a : fadd dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000108e11 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001e2e98 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; call rax
0x00000200000ab6d1 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000203bce : fadd dword ptr [rdi + rcx + 0x42] ; ret
0x000002000012b1ea : fadd dword ptr [rdi + rcx - 0x49] ; mov byte ptr [rcx + 0xf], 0xb7 ; ret
0x000002000040f34f : fadd qword ptr [rax + rax] ; add rsp, 0x38 ; ret
0x0000020000174a15 : fadd qword ptr [rbp + 0x2b] ; ret 0x3b44
0x0000020000466879 : fadd qword ptr [rbx + 0x5e5fffc8] ; pop rbx ; ret
0x00000200003b36ac : fadd qword ptr [rcx + 0xb] ; fiadd word ptr [rcx - 0x48] ; ret 0
0x000002000074972d : fadd qword ptr [rcx - 0x75] ; ret 0x8949
0x000002000010d1df : fadd qword ptr [rcx - 1] ; rol dword ptr [rbx + rdi - 0x32], 0x72 ; ret 0x8b41
0x000002000040f34e : fadd qword ptr ds:[rax + rax] ; add rsp, 0x38 ; ret
0x000002000042a748 : fadd st(2) ; sar edi, -0x7c ; ror byte ptr [rdi], 0x85 ; call qword ptr fs:[rsi]
0x000002000015d5eb : fadd st(6) ; add al, 0x38 ; add cl, ch ; ret
0x00000200000b070e : fadd st(6) ; add dword ptr [rcx], r8d ; jmp 0x200000b06a0
0x000002000061741b : faddp st(1) ; dec dword ptr [rax - 0x73] ; call 0x200000c36c9
0x00000200000a24a6 : fbld dword ptr [r14 + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000020000521a02 : fbld dword ptr [rbx] ; add byte ptr [rax - 0x3ffffe77], bh ; ret
0x00000200000a24a7 : fbld dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000020000467d91 : fbstp dword ptr [rbx] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000075dcdb : fbstp dword ptr [rdi + 0xd8948ff] ; ret
0x00000200001c33fa : fbstp dword ptr [rdx + rsi*2 - 0xa] ; ret
0x000002000049a320 : fbstp dword ptr [rsi + rdx + 0x33] ; leave ; call 0x200000bc568
0x00000200006ac3a1 : fcmovnb st(0), st(1) ; ret
0x00000200001a58d1 : fcmovnb st(0), st(2) ; jmp 0x200001a58d5
0x0000020000513101 : fcmovnbe st(0), st(2) ; ret 0x8bff
0x0000020000604301 : fcmovnu st(0), st(1) ; ret 0x33ff
0x000002000019cc81 : fcom qword ptr [r11] ; add byte ptr [rcx + 3], al ; ret
0x000002000019cc82 : fcom qword ptr [rbx] ; add byte ptr [rcx + 3], al ; ret
0x0000020000029aaf : fcomi st(6) ; ret 0x751e
0x00000200000a610a : fcomi st(6) ; ret 0xf1e
0x0000020000032756 : fcomi st(6) ; rol dword ptr [rdx], 0x74 ; xor al, byte ptr [rcx - 0xa] ; ret 0x7502
0x0000020000490c64 : fcomp dword ptr [rax] ; ret
0x00000200001c5660 : fcomp dword ptr [rbx] ; jmp qword ptr [rbx]
0x00000200000d4033 : fcomp dword ptr [rbx] ; leave ; and r10d, ecx ; mov eax, r10d ; ret
0x0000020000636084 : fcomp dword ptr [rbx] ; ror byte ptr [rcx + 0x48c3ff02], 0x83 ; ret 0x8304
0x00000200001a4849 : fcomp dword ptr [rbx] ; sal bh, 0xd8 ; inc eax ; ret
0x000002000020bf22 : fcomp dword ptr [rdi] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000020be84 : fcomp dword ptr [rdi] ; add byte ptr [rcx - 0x7f], cl ; ret 0xa00
0x000002000050bc22 : fcompi st(7) ; ret
0x00000200003a2c49 : fcos ; add rsp, 0x20 ; pop rcx ; ret
0x000002000076e743 : fcos ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006467ae : fcos ; add rsp, 0x38 ; ret
0x000002000039c43f : fcos ; add rsp, 0x40 ; pop rbx ; ret
0x00000200006429c0 : fcos ; add rsp, 0x68 ; ret
0x00000200003da171 : fcos ; ret
0x000002000053d276 : fcos ; test rax, rax ; je 0x2000053d286 ; call rax
0x00000200003b237c : fdecstp ; ret
0x00000200004f1a91 : fdecstp ; ret 0x7404
0x0000020000049882 : fdecstp ; ret 0x7502
0x0000020000476700 : fdecstp ; ret 0x7520
0x00000200003c81e2 : fdiv dword ptr [r10 - 0x3174b7ff] ; call rax
0x000002000051ead0 : fdiv dword ptr [r11] ; ror byte ptr [rax - 0x77], 0x45 ; ret 0x8948
0x000002000001f248 : fdiv dword ptr [rbx + rsi + 0x2b] ; ret
0x000002000051ead1 : fdiv dword ptr [rbx] ; ror byte ptr [rax - 0x77], 0x45 ; ret 0x8948
0x000002000058ae63 : fdiv dword ptr [rbx] ; ror byte ptr [rax - 1], cl ; ret
0x00000200003c81e3 : fdiv dword ptr [rdx - 0x3174b7ff] ; call rax
0x000002000050d5ce : fdiv qword ptr [rbx + 8] ; add bh, bh ; ret 0xfa83
0x00000200004f4fa0 : fdiv qword ptr [rbx - 0x74b7003c] ; ret
0x00000200003e84cc : fdiv qword ptr [rbx - 0x7cb7ffe8] ; ret
0x0000020000492380 : fdiv st(2), st(0) ; ret 0x90ff
0x0000020000005baa : fdiv st(6) ; ret
0x0000020000172102 : fdiv st(6) ; ret 0x7402
0x0000020000534fe0 : fdiv st(7), st(0) ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000465d47 : fdiv st(7), st(0) ; add rsp, 0x28 ; ret
0x0000020000667723 : fdiv st(7), st(0) ; add rsp, 0x38 ; ret
0x0000020000752b61 : fdiv st(7), st(0) ; add rsp, 0x48 ; ret
0x000002000053e9fe : fdiv st(7), st(0) ; jne 0x2000053ea0f ; add rsp, 0x58 ; ret
0x000002000053e9fd : fdiv st(7), st(0) ; jne 0x2000053ea10 ; add rsp, 0x58 ; ret
0x000002000075c6b3 : fdiv st(7), st(0) ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000003ff47 : fdivp st(4) ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004e9fa2 : fdivp st(7) ; add rsp, 0x28 ; ret
0x0000020000652eff : fdivp st(7) ; add rsp, 0x48 ; ret
0x000002000064fedc : fdivp st(7) ; add rsp, 0x98 ; ret
0x00000200004efba4 : fdivp st(7) ; and ebp, 0x10 ; call 0x2000011742c
0x000002000050ff82 : fdivp st(7) ; call 0x200000bc254
0x00000200005216c7 : fdivp st(7) ; call 0x2000014f185
0x00000200006b9da4 : fdivp st(7) ; dec dword ptr [rax - 0x75] ; ret
0x0000020000512435 : fdivp st(7) ; ja 0x2000059635a ; ret
0x00000200004ea552 : fdivp st(7) ; jne 0x200005cd7a8 ; ret
0x00000200004e9f79 : fdivp st(7) ; mov dword ptr [rdi], eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000634ab2 : fdivp st(7) ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000517d96 : fdivp st(7) ; mov edx, esi ; call 0x20000143367
0x0000020000106d30 : fdivp st(7) ; ret
0x00000200004eed44 : fdivp st(7) ; test al, 3 ; sete al ; ret
0x00000200004eb4d4 : fdivp st(7) ; test rax, rax ; je 0x200004eb4e4 ; call rax
0x00000200004eb8d9 : fdivp st(7) ; test rax, rax ; je 0x200004eb8e9 ; call rax
0x000002000074b9e3 : fdivr dword ptr [rax] ; ret
0x000002000042293e : fdivr dword ptr [rbx] ; ret
0x00000200001e9fdd : fdivr dword ptr [rbx] ; ret 0x470f
0x00000200004ced84 : fdivr dword ptr [rbx] ; ret 0x830f
0x0000020000191f24 : fdivr dword ptr [rbx] ; ret 0x850f
0x000002000049a1f8 : fdivr dword ptr [rcx + 1] ; call 0x200000bc569
0x00000200002160e7 : fdivr qword ptr [rax + 1] ; ret
0x00000200000bafcc : fdivr qword ptr [rip - 0x3b7cb800] ; pop r12 ; ret
0x0000020000482254 : fdivr st(0) ; ret
0x00000200003ae792 : fdivr st(7) ; add rsp, 0x18 ; ret
0x00000200003a4f8d : fdivr st(7) ; add rsp, 0x40 ; pop rbx ; ret
0x00000200003ae3eb : fdivr st(7) ; add rsp, 0x48 ; ret
0x00000200003af867 : fdivr st(7) ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000646856 : fdivr st(7) ; add rsp, 0x58 ; ret
0x00000200003b29c2 : fdivr st(7) ; add rsp, 0x60 ; pop rbx ; ret
0x00000200006513b7 : fdivr st(7) ; add rsp, 0x98 ; ret
0x00000200005f78a7 : fdivr st(7) ; call r10
0x0000020000133423 : fdivr st(7) ; ret
0x00000200006ab89b : fdivr st(7) ; ret 0x8348
0x0000020000010dbf : fdivr st(7) ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x0000020000539d18 : fdivr st(7) ; xor edx, edx ; add rcx, rax ; call 0x200000c5f59
0x0000020000404d0e : fdivr st(7), st(0) ; ret
0x00000200001d9e5b : fdivrp st(6) ; ret
0x00000200000db746 : fiadd dword ptr [r9 - 0x75] ; ret
0x000002000067e1d5 : fiadd dword ptr [rbp - 0x75] ; ret 0x8b41
0x0000020000129e4a : fiadd dword ptr [rbx - 0x75bb0032] ; ret
0x000002000072c22d : fiadd dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret
0x000002000061670e : fiadd dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0x8444
0x000002000012fda9 : fiadd dword ptr [rcx + 0xf] ; xchg eax, esp ; ret 0xf641
0x000002000047a0b4 : fiadd dword ptr [rcx - 0x3d00ffed] ; jmp 0x2000047a0a3
0x000002000068eff3 : fiadd dword ptr [rcx - 0x46] ; and eax, 0x41c00002 ; mov eax, edx ; ret
0x00000200000db747 : fiadd dword ptr [rcx - 0x75] ; ret
0x0000020000543dbf : fiadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x000002000003cdb4 : fiadd dword ptr [rcx - 0x76] ; ret 0xc985
0x00000200001b180e : fiadd dword ptr [rdi + rcx + 0x42] ; ret
0x00000200003ec2d7 : fiadd dword ptr [rdi + rcx - 0x49] ; ret 0x8b48
0x000002000006a035 : fiadd dword ptr [rip + 0x23c0000] ; je 0x2000006a046 ; ret
0x00000200006d8bfb : fiadd word ptr [rbp - 0x74868725] ; ret
0x0000020000033c44 : fiadd word ptr [rcx + 0xf] ; pushfq ; ret 0x8341
0x00000200003b36af : fiadd word ptr [rcx - 0x48] ; ret 0
0x000002000075eb2a : fiadd word ptr [rsi] ; ret 0x89ff
0x000002000074dee2 : ficom dword ptr [rbx] ; ret
0x0000020000046790 : ficom word ptr [rdx] ; add dh, dh ; ret
0x0000020000133d7a : ficomp dword ptr [rcx] ; add byte ptr [rdx], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200006b780a : ficomp dword ptr [rcx] ; add eax, 0xc4834800 ; ret
0x00000200001c542a : ficomp dword ptr [rsi + 0x3b49001b] ; ret
0x00000200000eceae : ficomp word ptr [rbp + rdi*8 - 1] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000044cef : ficomp word ptr [rdi] ; add byte ptr [rdi], cl ; adc dword ptr [rcx + 0x70], ecx ; ret
0x0000020000027ef4 : fidiv dword ptr [rax - 0x75] ; push rcx ; jl 0x20000027e8d ; ret 0xb60f
0x00000200006649c1 : fidiv dword ptr [rbp - 0xf] ; jmp 0x200006649d1
0x00000200001387ee : fidiv dword ptr [rbx + 0x2a] ; mov byte ptr [r10], 0x2e ; inc r10 ; jmp 0x20000138816
0x000002000012d120 : fidiv dword ptr [rbx] ; rol byte ptr [rcx - 0x75], 1 ; ret 0xc8c1
0x0000020000744812 : fidiv dword ptr [rbx] ; ror byte ptr [rax - 0x3f], cl ; sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000045585a : fidiv dword ptr [rbx] ; ror byte ptr [rax - 1], cl ; ret
0x00000200004397ba : fidiv dword ptr [rdx] ; ret 0xebc0
0x00000200000a3b05 : fidiv word ptr [rax + rbp - 0xa] ; ret
0x0000020000071601 : fidiv word ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x3348
0x0000020000167ecf : fidiv word ptr [rdx - 0x41] ; jmp 0x2000004412d
0x0000020000442e96 : fidivr dword ptr [rcx - 0x3ffffff3] ; call 0x2000006a2e5
0x000002000067ddc9 : fidivr word ptr [rax + 1] ; ret
0x00000200003f89de : fild dword ptr [rax] ; add byte ptr [rax], al ; inc edx ; jmp 0x200003f89c6
0x0000020000220000 : fild dword ptr [rax] ; ret
0x0000020000631ec4 : fild dword ptr [rbp + 0x32] ; rol byte ptr [rcx + rdi + 0x1d], cl ; popfq ; ret 0xffd4
0x00000200004074c5 : fild dword ptr [rbp + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x000002000013b2f3 : fild dword ptr [rbp + rcx*4 + 0x42] ; and al, ch ; ret
0x0000020000050e03 : fild dword ptr [rbp - 0x75] ; ret
0x000002000067c44a : fild dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x95 ; ret
0x000002000045e818 : fild dword ptr [rbp] ; add rcx, rdx ; jmp rcx
0x0000020000404d0a : fild dword ptr [rcx + 0xf] ; fdivr st(7), st(0) ; ret
0x0000020000119109 : fild dword ptr [rcx - 0x75] ; ret
0x0000020000003aff : fild dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200000b8895 : fild dword ptr [rcx - 1] ; ret
0x000002000016f023 : fild dword ptr [rdi + 0x222fd61d] ; add cl, ch ; ret 0xfff9
0x00000200003f8e30 : fild dword ptr [rdi + rcx + 0x20] ; ret 0xf45
0x0000020000068a83 : fild dword ptr [rdi + rcx + 0x22] ; ret
0x0000020000046aa1 : fild dword ptr [rsi - 0x74b7fff0] ; ret
0x0000020000762b49 : fild dword ptr [rsi - 0x74b7ffff] ; ret
0x0000020000092d13 : fild qword ptr [rdi] ; str word ptr [rax - 0x75] ; ret 0xc148
0x00000200001e36f5 : fild word ptr [r10 + 0xf] ; mov bh, 0x44 ; ret 0x8308
0x0000020000118cc7 : fild word ptr [rbx - 0x7cb7f01d] ; ret
0x0000020000229b4f : fild word ptr [rcx + 0x3b] ; ret
0x000002000022402b : fild word ptr [rcx + 0x3b] ; ret 0x677
0x0000020000064f67 : fild word ptr [rcx + 1] ; xor al, 0xff ; ret
0x0000020000657514 : fild word ptr [rcx - 0x75] ; ret 0x8d48
0x000002000072d887 : fild word ptr [rcx - 0x75] ; ret 0xeac1
0x000002000013c177 : fild word ptr [rcx - 0x7d] ; call 0x1ffb723028f
0x000002000046fa19 : fild word ptr [rcx - 0xa] ; ret 0x7501
0x00000200003fbf65 : fild word ptr [rdi + rcx + 0x42] ; ret
0x0000020000780480 : fild word ptr [rdi + rcx - 0x4a] ; ret
0x00000200004a252d : fild word ptr [rdi] ; ret 0x4cff
0x00000200001e36f6 : fild word ptr [rdx + 0xf] ; mov bh, 0x44 ; ret 0x8308
0x0000020000759034 : fild word ptr [rdx] ; add byte ptr [rax + 3], cl ; ret
0x0000020000737c8a : fimul dword ptr [rax + 0x33] ; ror byte ptr [rax - 0x2d], 1 ; ret 0x8341
0x0000020000444741 : fimul dword ptr [rax + 0x63] ; ret 0x8b48
0x000002000022f8d8 : fimul dword ptr [rax + 0xb] ; ret 0x8b48
0x00000200003f42ba : fimul dword ptr [rax + 0xf] ; ret 0x7c80
0x000002000000a59f : fimul dword ptr [rax - 0x3f] ; jmp 0x2000000a5b4
0x0000020000009ca1 : fimul dword ptr [rax - 0x3f] ; sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200003cc552 : fimul dword ptr [rax - 0x75] ; ret
0x000002000077f7ea : fimul dword ptr [rax - 0x75] ; ret 0x8d48
0x0000020000115219 : fimul dword ptr [rax - 0x75] ; ret 0xe683
0x0000020000040117 : fimul dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], 1 ; ret
0x0000020000475ce8 : fimul dword ptr [rax - 0x75] ; stc ; call 0x2000009b447
0x0000020000498d14 : fimul dword ptr [rax - 0x75] ; stc ; call 0x200000bb117
0x0000020000218424 : fimul dword ptr [rax - 0x7d] ; ret 0x4160
0x000002000001987c : fimul dword ptr [rax - 0x7d] ; ret 0xe804
0x0000020000121f3d : fimul dword ptr [rax - 0x7f] ; ret 0x538
0x00000200000e0eaf : fimul dword ptr [rax - 1] ; ret
0x00000200000b6521 : fimul dword ptr [rax - 9] ; ret
0x00000200000a5550 : fimul dword ptr [rax - 9] ; ret 0xfff
0x00000200001f0a09 : fimul dword ptr [rbp + 0x3b] ; ret 0x3c74
0x000002000073e1ba : fimul dword ptr [rcx + 0x2b] ; ret
0x0000020000491b36 : fimul dword ptr [rcx - 0x3f] ; call 0x1ffc34c6851
0x0000020000009ab4 : fimul dword ptr [rcx - 0x3f] ; sti ; add ecx, dword ptr [rcx - 0x75] ; ret
0x00000200005a05d2 : fimul dword ptr [rcx - 0x50] ; call qword ptr [rax - 0x16183d17]
0x00000200001329ba : fimul dword ptr [rcx - 0x74b7000f] ; ret
0x000002000022a05b : fimul dword ptr [rcx - 0x75] ; or ecx, dword ptr [rcx - 0x7d] ; ret
0x0000020000168bce : fimul dword ptr [rcx - 0x75] ; rol dword ptr [rcx - 0x75], 1 ; ret
0x000002000013eaa0 : fimul dword ptr [rcx - 0x77] ; nop ; or byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000020000657521 : fimul dword ptr [rcx - 0x7d] ; ret
0x00000200001dfd58 : fimul dword ptr [rcx - 0xdfdbac] ; ret 0x9489
0x00000200003f1895 : fimul dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000020000134362 : fimul word ptr [r8 - 0x75] ; ret
0x0000020000748dcc : fimul word ptr [rax + 0x2b] ; fmul dword ptr [rax - 0x75] ; ret
0x00000200004b5c0e : fimul word ptr [rax + rax] ; add dh, dh ; ret
0x000002000022be8f : fimul word ptr [rax - 0x2d] ; ret 0x8341
0x00000200000b692f : fimul word ptr [rax - 0x3f] ; sti ; add ecx, dword ptr [rax - 1] ; ret
0x0000020000059870 : fimul word ptr [rax - 0x73] ; push rbx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000134363 : fimul word ptr [rax - 0x75] ; ret
0x00000200000437a4 : fimul word ptr [rax - 0x7d] ; ret
0x0000020000218228 : fimul word ptr [rax - 1] ; ret
0x00000200005185e4 : fimul word ptr [rax - 1] ; ret 0xd148
0x000002000076286e : fimul word ptr [rax - 9] ; ret 0xfff
0x000002000008d3cc : fimul word ptr [rax - 9] ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x0000020000616b6e : fimul word ptr [rax] ; ret 0x48ff
0x000002000052f2b9 : fimul word ptr [rbp - 0x75] ; or dword ptr [rcx - 0x75], eax ; ret
0x0000020000405729 : fimul word ptr [rbx - 0x10a937fb] ; jmp qword ptr [rbx]
0x00000200000e0fa9 : fimul word ptr [rbx - 0xb7dfb6] ; ret
0x00000200005201be : fimul word ptr [rbx] ; ret 0x48ff
0x0000020000120c87 : fimul word ptr [rcx - 0x3f] ; call qword ptr [rax]
0x00000200000636dd : fimul word ptr [rcx - 1] ; ret
0x0000020000537122 : fimul word ptr [rcx] ; add bh, bh ; ret
0x0000020000430600 : fimul word ptr [rdi] ; test dword ptr [rax - 0xa000000], eax ; ret
0x00000200003ca39e : fimul word ptr [rdi] ; test dword ptr [rbp - 0x9fffff9], edi ; ret
0x000002000019d7f5 : fimul word ptr [rdi] ; xchg edi, ebp ; clc ; dec dword ptr [rax - 9] ; ret
0x000002000049fcae : fimul word ptr [rdx] ; ret 0x8bff
0x0000020000028ee4 : fincstp ; ret 0
0x000002000002d55e : fincstp ; ret 0xfffc
0x00000200006196c3 : fincstp ; ret 0xfffe
0x00000200005266a0 : fist dword ptr [rax - 0x7cb7fff6] ; ret
0x0000020000221ac1 : fistp qword ptr [r11] ; ret
0x0000020000221ac2 : fistp qword ptr [rbx] ; ret
0x0000020000736412 : fistp word ptr [rbx] ; jmp qword ptr [rbx]
0x0000020000587ce8 : fisttp dword ptr [r15] ; ret 0xc133
0x000002000073ed04 : fisttp dword ptr [rax + 0x2b] ; ret 0xbc41
0x00000200004beab8 : fisttp dword ptr [rax + 0x63] ; ret
0x000002000068052f : fisttp dword ptr [rax + 0xf] ; ret 0x5c89
0x000002000022e759 : fisttp dword ptr [rax - 0x2d] ; ret 0x8341
0x00000200005ef137 : fisttp dword ptr [rax - 0x73] ; sbb r8b, r13b ; jmp rax
0x000002000051b18d : fisttp dword ptr [rax - 0x75] ; iretq ; call 0x20000140388
0x0000020000024b81 : fisttp dword ptr [rax - 0x75] ; je 0x20000024bb2 ; adc byte ptr [rax - 0x75], cl ; ret
0x00000200001fdb6c : fisttp dword ptr [rax - 0x75] ; je 0x200001fdb9d ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000439a8d : fisttp dword ptr [rax - 0x75] ; or byte ptr [r13 - 0x75], al ; ret 0x8948
0x00000200001df414 : fisttp dword ptr [rax - 0x75] ; ret
0x00000200003f5fc9 : fisttp dword ptr [rax - 0x75] ; ret 0x2b49
0x00000200006b7050 : fisttp dword ptr [rax - 0x75dedba4] ; ret
0x00000200006b6f36 : fisttp dword ptr [rax - 0x75dfdba4] ; ret
0x00000200003d45c6 : fisttp dword ptr [rax - 0x77] ; jl 0x200003d45f7 ; cmp byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000003ee48 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0x1274
0x000002000066ff5e : fisttp dword ptr [rax - 0x7d] ; ret
0x00000200005097fb : fisttp dword ptr [rax - 0x7d] ; ret 0x4402
0x0000020000463cbd : fisttp dword ptr [rax - 0x7d] ; ret 0x4808
0x00000200000072a0 : fisttp dword ptr [rax - 0x7f] ; jmp qword ptr [rax]
0x000002000052d86e : fisttp dword ptr [rbp + rcx*4 + 4] ; sbb ebp, eax ; or byte ptr [rcx], bl ; ret 0x48ff
0x00000200004ea480 : fisttp dword ptr [rbp - 0x74bbb7a6] ; ret
0x000002000022dcae : fisttp dword ptr [rbp - 0x75] ; ret
0x0000020000020076 : fisttp dword ptr [rbp - 0x75] ; rol dword ptr [rcx - 0x75], 1 ; ret
0x0000020000058a0c : fisttp dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x00000200000364a9 : fisttp dword ptr [rbx + rcx*4 + 0x59] ; and byte ptr [rcx - 0x7f], cl ; ret 0
0x0000020000213e95 : fisttp dword ptr [rcx + 0xf] ; ret
0x00000200000ae2b7 : fisttp dword ptr [rcx - 0x3f] ; jmp 0x200000ae2d0
0x0000020000604c83 : fisttp dword ptr [rcx - 0x75] ; jmp 0x2004922d7d9
0x0000020000678205 : fisttp dword ptr [rcx - 0x75] ; ret
0x000002000009914e : fisttp dword ptr [rcx - 0x7b] ; sal byte ptr [rdx + rsi*4 + 0x33], 0xc0 ; ret
0x0000020000610631 : fisttp dword ptr [rcx] ; ret 0x39ff
0x00000200004e8bc5 : fisttp dword ptr [rdi] ; and dword ptr [rax], eax ; mov word ptr [rdx], ax ; ret
0x000002000049f260 : fisttp dword ptr [rdi] ; mov ah, dl ; ret
0x000002000049afd6 : fisttp dword ptr [rdi] ; mov byte ptr [rbp - 0x74ffee05], bl ; ret
0x0000020000440570 : fisttp dword ptr [rdi] ; mov byte ptr [rbx - 0x74ffe9f5], ch ; ret
0x0000020000450fa4 : fisttp dword ptr [rdi] ; mov byte ptr [rbx], dl ; xor al, 0x15 ; add byte ptr [rbp + 0x3b], cl ; ret
0x000002000001a602 : fisttp dword ptr [rdi] ; mov byte ptr [rcx - 0x74ffebe5], dl ; ret
0x000002000040cc76 : fisttp dword ptr [rdi] ; mov byte ptr [rip - 0x74ffe8ce], dl ; ret
0x00000200006776a3 : fisttp dword ptr [rdi] ; mov dl, ah ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x00000200000295ab : fisttp dword ptr [rdi] ; mov dword ptr [rip - 0x74000002], edi ; ret
0x000002000007baa6 : fisttp dword ptr [rdi] ; ret
0x0000020000587ce9 : fisttp dword ptr [rdi] ; ret 0xc133
0x00000200000aded0 : fisttp dword ptr [rdi] ; test byte ptr [rbp - 0x9fffff9], dh ; ret
0x0000020000076e49 : fisttp dword ptr [rdi] ; test byte ptr [rbx - 0xa000000], ah ; ret
0x000002000049613c : fisttp dword ptr [rdi] ; test byte ptr [rbx], ch ; cmp eax, 0xb60f0012 ; ret
0x0000020000055632 : fisttp dword ptr [rdi] ; test byte ptr [rcx - 0x9ffffff], al ; ret
0x0000020000231d37 : fisttp dword ptr [rdi] ; test byte ptr [rcx], ah ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x0000020000196440 : fisttp dword ptr [rdi] ; test byte ptr [rcx], dl ; ret
0x0000020000058e02 : fisttp dword ptr [rdi] ; test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000789c9 : fisttp dword ptr [rdi] ; test byte ptr [rdx - 0xa000000], al ; ret
0x00000200000bcf32 : fisttp dword ptr [rdi] ; test dl, ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000b8591 : fisttp dword ptr [rdi] ; test dl, ch ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000068ea43 : fisttp dword ptr [rdi] ; test dword ptr [rax - 0x1000000], eax ; ret
0x00000200001cb383 : fisttp dword ptr [rdi] ; test dword ptr [rcx - 0xa000000], ecx ; ret 0x7401
0x00000200003b4a14 : fisttp dword ptr [rdi] ; xchg eax, ebp ; rol cl, 0xe0 ; add esi, dword ptr [rbx] ; ret 0xe083
0x000002000075d769 : fisttp dword ptr [rdx] ; ret 0x88ff
0x0000020000135d95 : fisttp qword ptr [rax + 0x63] ; ret
0x00000200002259ef : fisttp qword ptr [rax + 3] ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4408
0x000002000073d92b : fisttp qword ptr [rax - 0x2d] ; ret 0xc783
0x00000200000af590 : fisttp qword ptr [rax - 0x3f] ; call 0x1ffc22e3dab
0x000002000077e44c : fisttp qword ptr [rax - 0x75] ; enter 0xf44, -0x49 ; ret
0x000002000000f703 : fisttp qword ptr [rax - 0x75] ; ret
0x000002000042f054 : fisttp qword ptr [rax - 0x7d] ; ret
0x000002000044506a : fisttp qword ptr [rax - 1] ; ret
0x00000200001595de : fisttp qword ptr [rax - 9] ; ret
0x00000200000969e3 : fisttp qword ptr [rbp + 0x3b] ; ret
0x0000020000498709 : fisttp qword ptr [rcx - 0x74bbfba3] ; ret
0x00000200002139c5 : fisttp qword ptr [rcx - 0x7d] ; ret
0x000002000022cf7a : fisttp qword ptr [rcx - 0x7d] ; ret 0x4f05
0x0000020000052e0a : fisttp qword ptr [rcx - 0x7d] ; ret 0xbd04
0x0000020000532e7c : fisttp qword ptr [rcx - 1] ; ret 0x894c
0x00000200001f8909 : fisttp qword ptr [rdi] ; or dword ptr [rax + 4], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000011500d : fisttp qword ptr [rdi] ; test byte ptr [rax], bh ; ret 5
0x00000200001d2ab6 : fisttp qword ptr [rdi] ; xchg byte ptr [rdi + rdi*8 - 1], al ; inc dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x00000200001f8986 : fisttp qword ptr [rdi] ; xor dword ptr [rdi + 0x4c000003], 0xffffff8b ; ret
0x0000020000503788 : fisttp word ptr [r11 - 0x34101728] ; ret
0x00000200001edccd : fisttp word ptr [r8 - 0x77] ; out -0x75, eax ; ret 0x6948
0x0000020000006c96 : fisttp word ptr [r9 + 0x3b] ; ret 0x830f
0x00000200001bd045 : fisttp word ptr [r9 - 0x75] ; ret 0x7d89
0x00000200003b384e : fisttp word ptr [r9 - 0x7d] ; ret 0x4808
0x0000020000103df8 : fisttp word ptr [rax + 0x3b] ; ret 0x850f
0x0000020000081639 : fisttp word ptr [rax + 0xb] ; ret
0x000002000010dce4 : fisttp word ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000002000012a565 : fisttp word ptr [rax - 0x75] ; je 0x2000012a596 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000de75a : fisttp word ptr [rax - 0x75] ; ret
0x0000020000133ff4 : fisttp word ptr [rax - 0x75] ; ret 0x8348
0x00000200003e9795 : fisttp word ptr [rax - 0x77] ; or byte ptr [rax - 1], r9b ; ret
0x00000200001edcce : fisttp word ptr [rax - 0x77] ; out -0x75, eax ; ret 0x6948
0x00000200000026d8 : fisttp word ptr [rax - 0x7d] ; ret
0x0000020000218555 : fisttp word ptr [rax - 1] ; ret
0x000002000018c480 : fisttp word ptr [rax - 9] ; ret
0x000002000017595b : fisttp word ptr [rbp + rbp*8 - 1] ; mov eax, 0xc00000bb ; ret
0x00000200003ad1bf : fisttp word ptr [rbp + rcx*4 - 0x7d] ; add byte ptr [rax], dl ; add byte ptr [rax], al ; call rax
0x0000020000437c28 : fisttp word ptr [rbp - 0x75] ; ret
0x000002000012d0eb : fisttp word ptr [rbx + 0x3449045] ; ret 0xcf05
0x0000020000503789 : fisttp word ptr [rbx - 0x34101728] ; ret
0x0000020000006c97 : fisttp word ptr [rcx + 0x3b] ; ret 0x830f
0x00000200001bd046 : fisttp word ptr [rcx - 0x75] ; ret 0x7d89
0x00000200003b384f : fisttp word ptr [rcx - 0x7d] ; ret 0x4808
0x0000020000091466 : fisttp word ptr [rcx - 9] ; ror byte ptr [rcx - 0x75], cl ; ret 0x8b41
0x00000200006020f5 : fisttp word ptr [rdi] ; ret 0x8b48
0x0000020000417167 : fisttp word ptr [rdi] ; test ebp, edi ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000009201d : fisttp word ptr [rdi] ; xchg eax, ebp ; ret
0x000002000051f2e3 : fisttp word ptr [rdx] ; add bh, bh ; ret
0x00000200005d3994 : fisub word ptr [rsi + 0x2b] ; fsub dword ptr [rsi - 0x7d] ; ret
0x000002000001f228 : fisubr dword ptr [rdx] ; add byte ptr [rbx], bh ; ret
0x00000200005f8421 : fld dword ptr [rax + 0x38] ; jl 0x200005f8453 ; xor byte ptr [rbx + rax - 0x7d], dh ; ret
0x00000200000df32c : fld dword ptr [rax] ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000020000731871 : fld dword ptr [rbp + 0x3b] ; ret 0x840f
0x0000020000032ac7 : fld dword ptr [rbp + 0x6a850fc0] ; call qword ptr [rdx]
0x0000020000177166 : fld dword ptr [rbp - 0x75] ; ret
0x0000020000016fb2 : fld dword ptr [rbp - 0x75] ; ret 0x3b45
0x0000020000063123 : fld dword ptr [rbx + 0x3b4920c3] ; ret 0x830f
0x000002000063c611 : fld dword ptr [rcx + 0xf] ; xchg eax, ebp ; ret 0x3d83
0x0000020000462cab : fld dword ptr [rcx - 0x7d] ; stc ; or dword ptr [rcx - 0x75], esi ; ret 0x8b48
0x00000200006438f7 : fld dword ptr [rcx - 1] ; ret
0x00000200006d7e2d : fld qword ptr [rcx - 0x75] ; ret
0x00000200006350e2 : fld qword ptr [rcx - 0x7d] ; ret 0x75ff
0x0000020000602212 : fld1 ; clc ; ret
0x0000020000042505 : fld1 ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200004c96f4 : fld1 ; jb 0x200004c974b ; ret 0x48ff
0x00000200003e2026 : fld1 ; jl 0x200003e200d ; ret
0x000002000041c1b7 : fld1 ; ret
0x000002000068b5bc : fld1 ; ret 0xa80e
0x00000200006628f8 : fld1 ; ret 0xaecb
0x00000200004ccfda : fld1 ; sbb al, 0x25 ; ret 0x85ff
0x000002000060d12c : fld1 ; scasb al, byte ptr [rdi] ; ret 0x48ff
0x0000020000143fb0 : fldcw word ptr [rcx] ; ret
0x00000200006c3a04 : fldenv dword ptr [rax] ; ret
0x00000200001faf49 : fldenv dword ptr [rsi + 0x33] ; ret 0x1274
0x00000200004cc6df : fldenv dword ptr [rsi + 0x3b] ; ret 0x870f
0x000002000067f5c3 : fldenv dword ptr [rsi] ; jmp 0x1ffc3f386cf
0x000002000016ad1a : fldl2t ; or dword ptr [rbx], edi ; stc ; dec dword ptr [rax + 0x63] ; ret
0x000002000039ea06 : fldpi ; mov rcx, rbx ; jmp 0x2000039e9d8
0x00000200000f117c : fldpi ; out dx, eax ; xor eax, eax ; ret
0x0000020000581268 : fmul dword ptr [r8 + 0x2b] ; ret
0x0000020000146950 : fmul dword ptr [r8 + 0xf] ; ret
0x000002000062230c : fmul dword ptr [r8 - 0x39] ; ret 0xfff8
0x000002000005e6cc : fmul dword ptr [r8 - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x00000200001c641e : fmul dword ptr [r8 - 0x75] ; pushfq ; ret 0xf2c0
0x000002000013655d : fmul dword ptr [r8 - 0x75] ; ret
0x00000200006ab4d5 : fmul dword ptr [r8 - 0x7d] ; ret 0x4440
0x000002000011c90b : fmul dword ptr [r9 - 0x75] ; ret 0x7d89
0x0000020000134688 : fmul dword ptr [rax + 0x1b] ; ror byte ptr [rax + 0x23], 0xc1 ; ret
0x0000020000104765 : fmul dword ptr [rax + 0x2b] ; fimul word ptr [rax - 0x7d] ; ret
0x00000200003ac678 : fmul dword ptr [rax + 0x2b] ; fimul word ptr [rax - 1] ; ret
0x0000020000581269 : fmul dword ptr [rax + 0x2b] ; ret
0x0000020000648ccc : fmul dword ptr [rax + 0x63] ; ret 0x3345
0x000002000063b661 : fmul dword ptr [rax + 0x69] ; ret 0x570
0x0000020000146951 : fmul dword ptr [rax + 0xf] ; ret
0x0000020000096fee : fmul dword ptr [rax + 3] ; and byte ptr [r8 - 0x75], r9b ; ret
0x000002000062230d : fmul dword ptr [rax - 0x39] ; ret 0xfff8
0x000002000003f1ec : fmul dword ptr [rax - 0x3f] ; call 0x1ffc23f3b0f
0x000002000000a4f3 : fmul dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x00000200001af7de : fmul dword ptr [rax - 0x73] ; and al, 0x40 ; call 0x200001aba74
0x00000200003ac65c : fmul dword ptr [rax - 0x73] ; dec dword ptr [rax + 3] ; ret
0x00000200003a84ec : fmul dword ptr [rax - 0x73] ; shr r8b, 1 ; ret 0xc9be
0x00000200003ee7c5 : fmul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000005e6cd : fmul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0x840f
0x0000020000499b37 : fmul dword ptr [rax - 0x75] ; enter -0x2f18, 0x35 ; ret 0x48ff
0x00000200006b868b : fmul dword ptr [rax - 0x75] ; je 0x200006b86bc ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200006b868a : fmul dword ptr [rax - 0x75] ; je 0x200006b86bd ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003b23f1 : fmul dword ptr [rax - 0x75] ; jl 0x200003b2423 ; jmp 0x200003b244b
0x00000200001c641f : fmul dword ptr [rax - 0x75] ; pushfq ; ret 0xf2c0
0x0000020000005626 : fmul dword ptr [rax - 0x75] ; ret
0x000002000046321c : fmul dword ptr [rax - 0x75] ; ret 0x1b48
0x0000020000633023 : fmul dword ptr [rax - 0x75] ; ret 0x8548
0x00000200003fb7e0 : fmul dword ptr [rax - 0x75] ; ret 0x8b45
0x00000200000ed6b1 : fmul dword ptr [rax - 0x75] ; ret 0xc984
0x00000200005f971c : fmul dword ptr [rax - 0x75] ; ret 0xc985
0x00000200006cd114 : fmul dword ptr [rax - 0x75] ; stc ; call qword ptr [rip + 0x3c20a]
0x00000200004b898e : fmul dword ptr [rax - 0x77] ; pop rsi ; sub byte ptr [rcx - 0x75], al ; ret
0x00000200003e5fd3 : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; pop rbx ; ret 0x18
0x000002000022523b : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x00000200003e714f : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0x18b6
0x0000020000521b56 : fmul dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xa
0x0000020000487b1f : fmul dword ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x19], 0xe8 ; xchg eax, esi ; ret 0xfffb
0x0000020000017df1 : fmul dword ptr [rax - 0x7d] ; ret
0x000002000023062b : fmul dword ptr [rax - 0x7d] ; ret 0x4110
0x00000200006ab4d6 : fmul dword ptr [rax - 0x7d] ; ret 0x4440
0x000002000064be06 : fmul dword ptr [rax - 0x7d] ; ret 0x4902
0x0000020000453483 : fmul dword ptr [rax - 0x7d] ; ret 0xf02
0x00000200000b5723 : fmul dword ptr [rax - 0x7f] ; ret
0x000002000053852b : fmul dword ptr [rax] ; movq rax, xmm0 ; call rax
0x00000200003c9599 : fmul dword ptr [rbp + rcx*4 + 0x44] ; and al, 0x78 ; call 0x20000015830
0x00000200001f0a36 : fmul dword ptr [rbp - 0x75] ; add byte ptr [rbp + 0x3b], cl ; ret 0xde75
0x00000200001337bc : fmul dword ptr [rbp - 0x75] ; ret 0xd233
0x00000200006aaca9 : fmul dword ptr [rbx + 0xd0348c8] ; ret 0xebff
0x00000200005ba31c : fmul dword ptr [rbx + rcx*4 - 0x3d] ; call 0x200001de4d7
0x00000200001f3289 : fmul dword ptr [rbx + rdi + 0x19] ; jb 0x200001f329a ; xor eax, eax ; ret
0x00000200001f3325 : fmul dword ptr [rbx + rdi + 0x19] ; jb 0x200001f3336 ; xor al, al ; ret
0x000002000060a84d : fmul dword ptr [rbx - 0x2b77210] ; call 0x20000231ce9
0x0000020000028fe5 : fmul dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x000002000020a9f5 : fmul dword ptr [rbx - 0x43f0bb16] ; ret
0x0000020000014ff7 : fmul dword ptr [rbx] ; fadd dword ptr [rcx - 0x48] ; ret 0
0x00000200005a4350 : fmul dword ptr [rbx] ; ret 0x8941
0x0000020000523deb : fmul dword ptr [rcx + 0x3b] ; ret
0x00000200001a882b : fmul dword ptr [rcx + 0x3b] ; ret 0x1172
0x000002000073e430 : fmul dword ptr [rcx + 3] ; dec dword ptr [rax - 0x2d] ; ret
0x000002000072f822 : fmul dword ptr [rcx + 3] ; ror dword ptr [rax - 0x2d], 1 ; ret
0x000002000054499b : fmul dword ptr [rcx - 0x242aa9e3] ; push rsi ; ret
0x000002000001e9c1 : fmul dword ptr [rcx - 0x7497dbbc] ; ret
0x00000200003cb6aa : fmul dword ptr [rcx - 0x74beffbb] ; ret
0x00000200003d02c1 : fmul dword ptr [rcx - 0x74bfdbbc] ; ret
0x000002000002e8e5 : fmul dword ptr [rcx - 0x74cfdbbc] ; ret
0x000002000042d4f3 : fmul dword ptr [rcx - 0x74d3dbb4] ; ret 0xf983
0x00000200003cd571 : fmul dword ptr [rcx - 0x74dfdbbc] ; ret
0x00000200004ae258 : fmul dword ptr [rcx - 0x75] ; ret
0x00000200000636b5 : fmul dword ptr [rcx - 0x75] ; ret 0x2b49
0x000002000011c90c : fmul dword ptr [rcx - 0x75] ; ret 0x7d89
0x00000200001e75aa : fmul dword ptr [rcx - 0x77] ; pop rbx ; loopne 0x200001e7542 ; pop rsp ; and al, 0x40 ; call rax
0x00000200003ca7d3 : fmul dword ptr [rcx - 0x99fdba4] ; ret
0x0000020000450216 : fmul dword ptr [rcx - 0x9cfdba4] ; ret
0x00000200001b786c : fmul dword ptr [rcx - 1] ; ret
0x0000020000122b3e : fmul dword ptr [rcx - 9] ; ret
0x0000020000037722 : fmul dword ptr [rdi] ; and bl, al ; ret
0x000002000074b165 : fmul dword ptr [rdi] ; mov dh, 0x41 ; and al, cl ; call 0x2007536ec7f
0x000002000041cabe : fmul dword ptr [rdi] ; test dword ptr [rdx - 0x74ffe983], edi ; ret
0x0000020000055c17 : fmul dword ptr [rdi] ; xchg dword ptr [0xffffffff8b4c0012], ebx ; ret
0x000002000005315e : fmul dword ptr [rdi] ; xchg dword ptr [rdi + rax*2 + 0x2b490012], edi ; ret
0x000002000009c5d5 : fmul dword ptr [rdi] ; xchg dword ptr [rdx], ebx ; ret 0xe
0x00000200003cb89a : fmul dword ptr [rdx - 0x74b7ffe7] ; ret
0x00000200000714ea : fmul dword ptr [rsi + 0xe] ; add dh, dh ; ret
0x00000200003dd697 : fmul qword ptr [r11 + 0x58d4cd6] ; sahf ; call qword ptr [rsi]
0x000002000048e14c : fmul qword ptr [rax - 0x75] ; retf ; call 0x200000bcd27
0x0000020000682804 : fmul qword ptr [rax - 1] ; ret
0x00000200003dd698 : fmul qword ptr [rbx + 0x58d4cd6] ; sahf ; call qword ptr [rsi]
0x0000020000787535 : fmul qword ptr [rcx] ; imul esi, dword ptr [rcx - 0x7d], -0x2e ; and dword ptr [rbx], esi ; ret
0x00000200001de60f : fmul qword ptr [rdi] ; or dword ptr [rbp + 1], 0 ; add byte ptr [rax - 9], cl ; ret
0x0000020000143fa0 : fnclex ; wait ; fnstcw word ptr [rcx] ; ret
0x0000020000143f90 : fninit ; ret
0x00000200003de737 : fnop ; ret
0x00000200005132a3 : fnop ; ret 0x48ff
0x00000200001980af : fnsave dword ptr [rax] ; hlt ; push rsi ; ret
0x000002000013fc58 : fnsave dword ptr [rbp + 0x10] ; mov rcx, r9 ; call 0x2000011bf68
0x00000200006037a0 : fnsave dword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000231019
0x00000200000d792e : fnstcw word ptr [rbx] ; ret 0x1775
0x00000200003efbc1 : fnstcw word ptr [rbx] ; ret 0xea72
0x0000020000143fa3 : fnstcw word ptr [rcx] ; ret
0x000002000074a217 : fnstcw word ptr [rsi] ; ret
0x00000200004a3a77 : fnstenv dword ptr [rbp + rsi - 1] ; ret 0x8348
0x00000200001a5934 : fnstenv dword ptr [rbx] ; dec dword ptr [rbp + 0x71e8054f] ; ret 0xffeb
0x000002000041e9cb : fnstenv dword ptr [rbx] ; leave ; call 0x2000004585a
0x00000200004331d6 : fnstenv dword ptr [rbx] ; ret
0x00000200001c7e63 : fnstenv dword ptr [rcx + rdx] ; ret
0x00000200001e33ba : fnstenv dword ptr [rdi - 0x2a] ; mov dword ptr [r10 + 4], r9d ; ret
0x0000020000017aa3 : fnstenv dword ptr [rdx - 0x13] ; jmp 0x20000017af4
0x00000200001f6f0a : fnstenv dword ptr [rdx - 0x20] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003e89e9 : fnstenv dword ptr [rdx - 0x74b7ffe8] ; ret
0x000002000061faa3 : fnstenv dword ptr [rsi] ; mov cl, 0xff ; add rsp, 0x58 ; ret
0x00000200004e11bb : fnstsw dword ptr [rax - 0x3fffffdd] ; ret
0x0000020000431929 : fnstsw dword ptr [rbx] ; ret 0x840f
0x0000020000411875 : frstor dword ptr [rsi - 0x7b] ; ret
0x0000020000106bbb : frstor dword ptr [rsi] ; lock inc dword ptr [rcx + 0x3b] ; ret
0x000002000012aea9 : fst dword ptr [rax] ; add al, ch ; ret
0x000002000040739b : fst dword ptr [rbx] ; ret
0x00000200004aae6f : fst st(2) ; ret
0x00000200003a6834 : fstp dword ptr [rbx + rdi] ; ret 0x420f
0x0000020000038e9a : fstp dword ptr [rbx] ; leave ; and eax, ecx ; ret
0x00000200000ef0d3 : fstp dword ptr [rdx + 0x14] ; add byte ptr [rax - 0x7d], cl ; ret 0xe828
0x0000020000497303 : fstp dword ptr [rsi] ; ret 0x48ff
0x000002000009f85a : fstp qword ptr [rsi - 0x7eb7fff2] ; ret 0xc0
0x000002000061263f : fstp st(5) ; ret
0x00000200004da5c6 : fstp xword ptr [r11] ; ret 0x4374
0x00000200003c9800 : fstp xword ptr [rax + 3] ; ret
0x00000200004da5c7 : fstp xword ptr [rbx] ; ret 0x4374
0x00000200006857ca : fstp xword ptr [rcx + 0x14] ; jmp 0x200006857df
0x0000020000685856 : fstp xword ptr [rcx + 0x31] ; jmp 0x2000068586b
0x0000020000508b81 : fstp xword ptr [rcx] ; popfq ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret
0x0000020000031b81 : fsub dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret
0x0000020000128d7b : fsub dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xd148
0x0000020000530eb9 : fsub dword ptr [rbx] ; ret 0xc23b
0x0000020000689e29 : fsub dword ptr [rsi + 0x2b] ; pop rbp ; shl byte ptr [rsi - 0x7d], 1 ; ret
0x000002000021705f : fsub dword ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000020000202eae : fsub dword ptr [rsi - 0x7d] ; ret
0x0000020000113953 : fsub dword ptr [rsi - 1] ; ret
0x00000200006b0634 : fsub qword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200005ce33d : fsub qword ptr [rdi + rdi*8 + 0x204b8b48] ; call 0x2000001a629
0x0000020000112e80 : fsub qword ptr [rdx] ; add eax, dword ptr [rax] ; jmp 0x20000112e3f
0x00000200004dbbd5 : fsub qword ptr [rsi - 0x7d] ; clc ; pop rsp ; jne 0x200004dbbd9 ; xor al, al ; ret
0x00000200001886c6 : fsub st(1), st(0) ; push rsi ; cmp dh, cl ; push rsi ; ret 0x741e
0x000002000008f3d5 : fsub st(1), st(0) ; ret
0x00000200006857b2 : fsub st(3), st(0) ; and dh, dh ; ret
0x000002000020f622 : fsub st(4) ; dec dword ptr [rax - 0x75] ; ret
0x0000020000431924 : fsub st(4), st(0) ; dec dword ptr [rax - 0x75] ; fnstsw dword ptr [rbx] ; ret 0x840f
0x0000020000431903 : fsub st(4), st(0) ; push qword ptr [rbx] ; idiv byte ptr [rbx] ; ret 0xb841
0x0000020000521998 : fsub st(5) ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xc933
0x00000200001834ef : fsub st(6), st(0) ; dec dword ptr [rax + 0x3b] ; ret 0xc74
0x00000200005ff682 : fsubp st(0) ; pop rax ; ret
0x00000200001bf8f3 : fsubp st(0) ; xchg dword ptr [rdx - 0x1a], edi ; jmp qword ptr [rdx]
0x00000200003cbc4a : fsubp st(1) ; adc cl, byte ptr [rax + 0x6b00019] ; ret
0x00000200003d2527 : fsubp st(1) ; ret 0xfffd
0x00000200004c13c4 : fsubp st(3) ; dec dword ptr [rcx - 0x75] ; add dword ptr [rax + 0x3b], ecx ; ret
0x000002000020a2f9 : fsubp st(3) ; or dword ptr [rcx + 0x3b], eax ; ret 0x976
0x000002000016ff4e : fsubp st(4) ; dec dword ptr [rax - 0x75] ; ret
0x00000200004b6cc4 : fsubr dword ptr [rax] ; sar edi, 0x32 ; ret
0x00000200006358bf : fsubr dword ptr [rdi - 0x3b7cb701] ; push rax ; pop rbx ; ret
0x0000020000517d94 : fsubr dword ptr [rsi - 0x29740022] ; call 0x20000143369
0x000002000012c178 : fsubr qword ptr [rbp + 7] ; add byte ptr [rbp - 0x75], cl ; ret
0x00000200005ecf00 : fsubr qword ptr [rdi + rdi*8 - 0x7cb73801] ; ret
0x00000200005ff200 : fsubr qword ptr [rdx] ; ret
0x000002000040965a : fsubr st(0) ; and al, 3 ; ret
0x00000200005010dc : fsubr st(0) ; call rdx
0x000002000051523e : fsubr st(0) ; cmp al, 0xb1 ; ret 0x85ff
0x00000200005d883d : fsubr st(0) ; int 0x87
0x00000200004f7ac8 : fsubr st(0) ; jle 0x200004f7aaa ; ret
0x00000200006d9293 : fsubr st(0) ; jmp 0x200006d92d3
0x0000020000464e9b : fsubr st(0) ; jmp rcx
0x0000020000503705 : fsubr st(0) ; jne 0x200005036d9 ; ret
0x00000200004095f1 : fsubr st(0) ; lea eax, dword ptr [rbx] ; ret
0x00000200004821fd : fsubr st(0) ; mov ebp, 0x8affc401 ; ret
0x00000200006dc234 : fsubr st(0) ; mov edx, 0x8bffad70 ; ret
0x00000200006dc134 : fsubr st(0) ; mov edx, 0x8bffad71 ; ret
0x0000020000590713 : fsubr st(0) ; movsxd rcx, ebp ; ret 0x8bff
0x00000200001a6d7d : fsubr st(0) ; or eax, 0x8a003137 ; ret
0x000002000040d9aa : fsubr st(0) ; rcl byte ptr [rsi - 0x35], 1 ; dec dword ptr [rax + 0x3b] ; ret
0x00000200003fcb57 : fsubr st(0) ; ret
0x0000020000583c48 : fsubr st(0) ; ret 0xcad3
0x0000020000513362 : fsubr st(0) ; sbb al, dl ; ret 0x85ff
0x00000200006b066d : fsubr st(0) ; sub eax, 0x8bffa156 ; ret
0x0000020000180d5d : fsubr st(1) ; and al, 0x29 ; lock dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200005965d7 : fsubr st(1) ; in eax, dx ; ret 0xfff7
0x0000020000184f0c : fsubr st(1) ; mov al, 0xa2 ; lock dec dword ptr [rax - 0x75] ; ret 0xc148
0x000002000009e5cc : fsubr st(1) ; ret
0x000002000066a68f : fsubr st(3) ; add al, 0xb ; fdivr st(7) ; ret
0x00000200005aa09f : fsubr st(3) ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000437831 : fsubr st(3) ; mov esp, 0xe8cb8b48 ; add al, 0x98 ; ret
0x000002000067cb4b : fucomi st(0) ; call rsi
0x000002000058046d : fucomi st(0) ; dec dword ptr [rax + 0x2b] ; ret 0xc148
0x00000200003fd337 : fucomi st(0) ; ret
0x00000200005f7fc8 : fucomi st(0) ; ret 0xad4d
0x0000020000186e2b : fucomi st(1) ; push rdx ; add dh, cl ; dec dword ptr [rax - 0x75] ; ret
0x000002000077a99d : fucomi st(1) ; ret
0x00000200005cc5d6 : fucomi st(1) ; ret 0xf4ec
0x000002000008b517 : fucomi st(1) ; ret 0xfffc
0x000002000047c7d1 : fucomi st(2) ; add eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000059920 : fucomi st(3) ; fxch st(4) ; mov rax, qword ptr [rcx + 8] ; ret
0x00000200006213e1 : fucomi st(3) ; or al, 0x8b ; sbb cl, byte ptr [rax - 1] ; ret
0x000002000010aab1 : fucomi st(3) ; ret
0x00000200003b6ffb : fucomi st(3) ; ret 0x3345
0x00000200000efd92 : fucomi st(3) ; ret 0xeb8
0x00000200001d2e08 : fucomi st(6) ; dec dword ptr [rax - 0x75] ; ret
0x000002000068f185 : fucomp st(0) ; in eax, -0x5b ; stosd dword ptr [rdi], eax ; dec dword ptr [rax + 0x3b] ; ret
0x00000200005f6570 : fucomp st(0) ; push 0xb7 ; ret
0x000002000011dbe7 : fucomp st(0) ; ret
0x0000020000197c47 : fucomp st(1) ; jmp qword ptr [rdx]
0x000002000004fcac : fucomp st(3) ; mov edx, 0xebf58b41 ; ret 0x8b48
0x000002000050fa59 : fucompi st(0) ; cdqe ; ret 0x48ff
0x00000200004ccfc0 : fucompi st(0) ; out 0x24, al ; ret 0x85ff
0x00000200003d59d8 : fucompi st(0) ; ret 0x691
0x00000200006594f8 : fucompi st(0) ; ret 0xaf5f
0x000002000067977a : fucompi st(1) ; test eax, 0x8b000002 ; ret 0xe083
0x000002000053f13d : fucompi st(3) ; lahf ; movzx eax, dx ; jmp 0x2000053f125
0x0000020000053a49 : fucompi st(3) ; leave ; mov eax, 0xc000000d ; ret
0x000002000003771d : fucompi st(3) ; mov ebx, 0xfd8200f ; and bl, al ; ret
0x00000200006873a9 : fucompi st(4) ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005ba70c : fucompi st(5) ; inc dword ptr [rcx - 0x75] ; ret 0x8948
0x00000200004a341d : fucompi st(6) ; ret 0x48ff
0x000002000018cec1 : fucompp ; and al, 0xea ; int1 ; push rsi ; ret 0x741e
0x000002000018d885 : fucompp ; jno 0x2000018d89e ; push rsi ; ret 0x741e
0x000002000018d399 : fucompp ; mov bl, 0xf6 ; int1 ; push rsi ; ret 0x741e
0x000002000018d32c : fucompp ; push rcx ; push rsi ; ret 0x741e
0x00000200000069c4 : fucompp ; ret 0xfffe
0x00000200005643f5 : fucompp ; sahf ; jne 0x200005643e8 ; dec dword ptr [rax - 0x75] ; ret
0x00000200004248bb : fxch st(0), st(5) ; ret 0x83ff
0x0000020000059922 : fxch st(4) ; mov rax, qword ptr [rcx + 8] ; ret
0x0000020000144588 : fxsave ptr [rcx] ; add rsp, 0x28 ; ret
0x000002000001dbc2 : hlt ; adc eax, dword ptr [rax] ; mov rcx, rdi ; call rbx
0x000002000051fee6 : hlt ; add byte ptr [rax], al ; add al, ch ; sal ebp, 1 ; ret 0x48ff
0x00000200002150ea : hlt ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000110dfc : hlt ; add byte ptr es:[rax + 5], cl ; add byte ptr [rsi], dh ; add byte ptr [rax], al ; ret
0x0000020000162a9e : hlt ; add ch, ch ; push rsi ; ret 0x7501
0x00000200007852a7 : hlt ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x74bbd7b9], cl ; ret
0x0000020000110b39 : hlt ; add eax, 0x1b800 ; add al, al ; ret
0x00000200000d978b : hlt ; add rsp, 0x28 ; ret
0x00000200005ad3c8 : hlt ; and byte ptr [rdx - 0x6166f01], bh ; ret 0xffeb
0x000002000073c025 : hlt ; and r14d, r15d ; call r12
0x000002000063f284 : hlt ; call rbx
0x00000200003b67f3 : hlt ; dec dword ptr [rax + 3] ; ret
0x0000020000208468 : hlt ; dec dword ptr [rax - 0x75] ; je 0x2000020849b ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001983ad : hlt ; dec dword ptr [rax - 0x75] ; or byte ptr [rax + 0x3b], cl ; ret
0x0000020000118d77 : hlt ; dec dword ptr [rax - 0x75] ; ret
0x0000020000197939 : hlt ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200001b254f : hlt ; dec dword ptr [rax - 0x77] ; adc byte ptr [r8 - 0x75], cl ; ret
0x000002000011bb02 : hlt ; dec dword ptr [rax - 0x7f] ; ret
0x000002000019b6c1 : hlt ; dec dword ptr [rbx + 0x23413042] ; ret
0x00000200003ad9f0 : hlt ; dec dword ptr [rbx + 0xb490] ; add al, ch ; ret
0x00000200001976e2 : hlt ; dec dword ptr [rdi] ; mov dh, 0x53 ; and esi, esi ; ret 0xf08
0x00000200005cb5ab : hlt ; dec esp ; jmp 0x20000517833
0x00000200001fee7c : hlt ; dec esp ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000197c40 : hlt ; inc dword ptr [rbx + 0xb41fbe3] ; fucomp st(1) ; jmp qword ptr [rdx]
0x00000200001997c9 : hlt ; inc dword ptr [rbx] ; ret
0x00000200001985ce : hlt ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000051857c : hlt ; jg 0x20000518584 ; inc dword ptr [rcx + 0x3b] ; ret
0x00000200005fe6bb : hlt ; jmp qword ptr [rcx]
0x000002000066a836 : hlt ; lea rax, qword ptr [rcx + r9*4] ; add rsp, 0x28 ; ret
0x00000200005035cc : hlt ; mov byte ptr [rip - 0x22e18b], 0 ; ret
0x0000020000074769 : hlt ; mov eax, 0xc000000d ; ret
0x00000200003c71e6 : hlt ; mov esi, 0x8b480019 ; ret 0xc148
0x00000200000210e7 : hlt ; mov rax, qword ptr [rax + 8] ; ret
0x00000200000234d7 : hlt ; mov rax, rcx ; ret
0x000002000072b3fa : hlt ; mov rax, rdx ; jmp 0x2000072b408
0x0000020000074213 : hlt ; mov rax, rdx ; ret
0x000002000013484a : hlt ; mov rdx, rsi ; call r14
0x000002000076c3a4 : hlt ; out 0xb6, al ; call qword ptr [rbx]
0x000002000049ce48 : hlt ; pop rcx ; ret 0xf0ff
0x00000200004458e9 : hlt ; push rbx ; add byte ptr [rcx + 3], r9b ; leave ; jmp rcx
0x00000200006aa910 : hlt ; push rdi ; ret 0x48ff
0x00000200001980b1 : hlt ; push rsi ; ret
0x00000200000092c6 : hlt ; ret
0x00000200000cca08 : hlt ; ret 0x20
0x00000200005118ef : hlt ; ret 0x8bff
0x0000020000601b4c : hlt ; ret 0xebff
0x000002000052b1c8 : hlt ; ret 0xfff
0x000002000001cea0 : hlt ; ret 1
0x0000020000134b5f : hlt ; sbb byte ptr [rax], al ; ret
0x000002000014698b : hlt ; sfence ; ret
0x000002000016b26a : hlt ; stc ; inc dword ptr [rcx - 0x75] ; ret
0x000002000005bd25 : hlt ; sub dword ptr [rax], eax ; ret
0x000002000001fddb : hlt ; sub eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200000d8310 : hlt ; xor ah, byte ptr [rdx] ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200004dbbdb : hlt ; xor al, al ; ret
0x0000020000029b9f : hlt ; xor eax, eax ; ret
0x0000020000450fd4 : hlt ; xor edx, dword ptr [rip + 0x428b4100] ; adc al, 0x2b ; ret 0x341
0x00000200003acaea : idiv bh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f87ad : idiv bh ; add rsp, 0x38 ; ret
0x00000200001c34da : idiv bh ; add rsp, 0x50 ; pop rbp ; ret
0x00000200001c777d : idiv bh ; add rsp, 0x58 ; ret
0x00000200001ca84b : idiv bh ; add rsp, 0x60 ; pop rbx ; ret
0x00000200001cfcc2 : idiv bh ; add rsp, 0x68 ; ret
0x00000200000acfbb : idiv bh ; dec dword ptr [rax + 0x3b] ; ret
0x00000200004a85dd : idiv bh ; dec dword ptr [rax - 0x75] ; ret
0x00000200000945d2 : idiv bh ; dec dword ptr [rax - 9] ; ret
0x0000020000747815 : idiv bh ; dec dword ptr [rbp + 0x23] ; ret
0x000002000021f2c9 : idiv bh ; dec dword ptr [rbx - 0x7421d428] ; ret
0x00000200000b62cf : idiv bh ; dec dword ptr [rcx + 0x23] ; ret 0xbb49
0x000002000074405e : idiv bh ; dec dword ptr [rcx + 0x23] ; ret 0xbf49
0x00000200000acc6b : idiv bh ; dec dword ptr [rcx + 0x3b] ; ret
0x00000200000ace66 : idiv bh ; dec dword ptr [rcx + 0x3b] ; ret 0x830f
0x00000200000ad260 : idiv bh ; dec dword ptr [rcx + 0x3b] ; ret 0x860f
0x00000200005d68b2 : idiv bh ; jae 0x200005d68c1 ; or eax, 0xffffffff ; ret
0x00000200000c64d6 : idiv bh ; jmp 0x200000c639f
0x00000200004ca6d0 : idiv bh ; jmp 0x200004ca69a
0x000002000058c79b : idiv bh ; lea rcx, qword ptr [rdi + 8] ; call 0x200001ba385
0x00000200000ecfa5 : idiv bh ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000587f97 : idiv bh ; mov dword ptr [r8 + 0xc], r11d ; ret
0x0000020000152c30 : idiv bh ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000152c02 : idiv bh ; nop ; add rsp, 0x48 ; pop rdi ; pop rbp ; ret
0x0000020000557bcf : idiv bh ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x00000200004e1020 : idiv bh ; ret
0x00000200001e925c : idiv bh ; ret 0x8149
0x00000200004e77b5 : idiv bh ; xor eax, eax ; add rsp, 0x50 ; pop rbp ; ret
0x00000200005d69e8 : idiv bh ; xor eax, eax ; ret
0x00000200003be3ca : idiv byte ptr [rax + 0x2000000] ; ret
0x0000020000431907 : idiv byte ptr [rbx] ; ret 0xb841
0x00000200001cf092 : idiv dil ; add rsp, 0x58 ; ret
0x00000200000b75e8 : idiv dword ptr [rax + 1] ; ret
0x00000200004f8a93 : idiv dword ptr [rax - 0x3ffffff3] ; ret
0x00000200005d7790 : idiv dword ptr [rbx - 0xa] ; dec dword ptr [rax - 0x75] ; ret
0x00000200005e28e5 : idiv dword ptr [rcx - 0x2f] ; dec dword ptr [rax - 0x39] ; ret 0x5d00
0x000002000017dfe9 : idiv dword ptr [rsi - 0x11] ; push rsi ; ret 0x741e
0x00000200001f63c0 : idiv ecx ; add eax, r9d ; ret
0x000002000010de44 : idiv ecx ; ret
0x0000020000510985 : idiv ecx ; ret 0xebff
0x0000020000408160 : idiv edi ; add byte ptr [rbp + 5], dh ; add rsp, 0x28 ; ret
0x0000020000114c87 : idiv edi ; add rsp, 0x38 ; ret
0x00000200001c00a7 : idiv edi ; add rsp, 0x48 ; ret
0x00000200001ba0e3 : idiv edi ; add rsp, 0x58 ; ret
0x00000200001b9b08 : idiv edi ; add rsp, 0x68 ; ret
0x00000200001b9a9d : idiv edi ; add rsp, 0x70 ; pop rbp ; ret
0x00000200001be88e : idiv edi ; add rsp, 0x70 ; pop rbx ; ret
0x00000200001be69c : idiv edi ; add rsp, 0x78 ; ret
0x00000200001c0200 : idiv edi ; add rsp, 0xa8 ; ret
0x000002000020fd2a : idiv edi ; dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 0x2b] ; ret 0x8d49
0x000002000008f098 : idiv edi ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000012fefd : idiv edi ; dec dword ptr [rax - 0x75] ; ret
0x000002000008f070 : idiv edi ; dec dword ptr [rax - 0x75] ; sbb dh, dh ; ret
0x000002000052d75e : idiv edi ; dec dword ptr [rax - 1] ; ret
0x000002000047a7ba : idiv edi ; dec dword ptr [rax - 9] ; ret
0x000002000009eb90 : idiv edi ; dec dword ptr [rbp + rcx*4 + 0x4d] ; call 0x20048cc76f1
0x00000200001041e0 : idiv edi ; dec dword ptr [rcx + 3] ; ret 0xb948
0x000002000002d9cb : idiv edi ; dec dword ptr [rcx - 0x75] ; ret
0x000002000003bee6 : idiv edi ; inc dword ptr [rcx - 0x7c] ; ret
0x000002000059d2b1 : idiv edi ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200000a2be9 : idiv edi ; inc dword ptr [rcx - 1] ; ret 0x8149
0x00000200004cfcf8 : idiv edi ; jmp qword ptr [rcx]
0x0000020000112cce : idiv edi ; jmp rax
0x000002000058e62a : idiv edi ; mov al, 2 ; ret
0x00000200001a23e6 : idiv edi ; mov eax, 1 ; ret
0x00000200000ef4f2 : idiv edi ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000059520e : idiv edi ; mov ecx, 1 ; call 0x200003b14a9
0x000002000059525f : idiv edi ; mov ecx, 2 ; call 0x200003b14a9
0x00000200007857e5 : idiv edi ; mov edx, 0xffc6c6c6 ; call qword ptr [rax]
0x000002000040dafd : idiv edi ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200005940ac : idiv edi ; mov rcx, qword ptr [rbp - 0x80] ; call 0x20000140388
0x0000020000152a91 : idiv edi ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000153276 : idiv edi ; nop ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x00000200004e8d3b : idiv edi ; push rax ; inc dword ptr [rax] ; ret
0x00000200000ab878 : idiv edi ; push rsi ; ret
0x00000200001ff7ce : idiv edi ; ret
0x00000200000f182f : idiv edi ; ret 0x8348
0x0000020000452aff : idiv edi ; test eax, eax ; je 0x20000452af4 ; jmp 0x20000452ad1
0x0000020000113635 : idiv edi ; xor al, al ; ret
0x0000020000129f32 : idiv edi ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000595293 : idiv edi ; xor ecx, ecx ; call 0x200003b14a6
0x00000200001be7a9 : idiv r15 ; add rsp, 0x68 ; ret
0x000002000058e629 : idiv r15 ; mov al, 2 ; ret
0x0000020000152c95 : idiv r15 ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000587f96 : idiv r15b ; mov dword ptr [r8 + 0xc], r11d ; ret
0x000002000010de43 : idiv rcx ; ret
0x00000200001be6fa : idiv rdi ; add rsp, 0x58 ; ret
0x00000200001be93a : idiv rdi ; add rsp, 0x68 ; ret
0x00000200001be88d : idiv rdi ; add rsp, 0x70 ; pop rbx ; ret
0x00000200001be69b : idiv rdi ; add rsp, 0x78 ; ret
0x00000200000ab877 : idiv rdi ; push rsi ; ret
0x00000200004309a0 : imul al ; ret 0xc1b6
0x000002000074c9a0 : imul bl ; and al, 0xff ; ret
0x00000200006bd1c3 : imul bl ; or cl, byte ptr [rbx] ; ret 0x1be
0x0000020000489de8 : imul bl ; ret 0xb841
0x0000020000754c1d : imul byte ptr [rbp - 0x19fa7401] ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x41ff
0x000002000058f001 : imul byte ptr [rbp - 9] ; dec dword ptr [rax - 0x73] ; push rbp ; ret
0x00000200006b7df0 : imul byte ptr [rbx] ; ret 0x4779
0x00000200004cb091 : imul byte ptr [rbx] ; ret 0x53b
0x000002000016508e : imul cl ; xchg eax, ebx ; push rsp ; in eax, dx ; jmp qword ptr [rcx]
0x00000200006ad7f5 : imul dword ptr [rdx - 0x78f17dba] ; xor al, 0xfc ; ret 0x4c1f
0x000002000060af8e : imul eax ; insd dword ptr [rdi], dx ; ret 0x48ff
0x000002000048e3c5 : imul eax ; ret 0x8aff
0x00000200000ec664 : imul eax, dword ptr [rax + rax], 0x48 ; add esp, 0x60 ; pop rbp ; ret
0x00000200000ec873 : imul eax, dword ptr [rax + rax], 0x48c48348 ; ret
0x000002000001e7d5 : imul eax, dword ptr [rbp + 0xf], -0x49 ; rol byte ptr [rbx - 0x75], 0x4c ; ret 0x8578
0x0000020000684ae2 : imul eax, dword ptr [rbx], 0 ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000211861 : imul eax, dword ptr [rbx], 0 ; add byte ptr [rbx - 0x74b3ebad], cl ; ret
0x0000020000735de7 : imul eax, dword ptr [rcx + 0xf], -0x4a ; adc byte ptr [rbp + 3], cl ; ret 0xb60f
0x000002000022e1fe : imul eax, dword ptr [rcx + 0xf], -0x4a ; adc ecx, dword ptr [rcx - 1] ; ret
0x00000200003b1cbe : imul eax, dword ptr [rcx], 0 ; add bh, bh ; ret 0xfa83
0x0000020000142ed5 : imul eax, dword ptr [rcx], 0xa2e90000 ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000200003a2ad1 : imul eax, dword ptr [rdx], 0 ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003a29d4 : imul eax, dword ptr [rdx], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000010c5ba : imul eax, dword ptr [rdx], 0 ; add rsp, 0x60 ; pop rbx ; ret
0x00000200003a29b0 : imul eax, dword ptr [rdx], 0x8b480000 ; ret 0xc148
0x00000200003a2aad : imul eax, dword ptr [rdx], 0xb480000 ; ret 0x8949
0x00000200004ca143 : imul eax, dword ptr [rsi - 0x3e], 0xc48348ff ; jo 0x200004ca1b0 ; ret
0x000002000061e703 : imul eax, dword ptr [rsi], 0x3b48ffcc ; ret 0x840f
0x00000200005f9cb7 : imul eax, dword ptr [rsi], 0x8bf08b49 ; ret 0x8b4c
0x00000200001f6423 : imul eax, eax, 0x1c ; add eax, 0xac00 ; ret
0x00000200003ed804 : imul eax, ecx ; add eax, r9d ; ret
0x00000200001ea15d : imul eax, ecx ; div r8 ; ret
0x00000200003ed3d6 : imul eax, ecx ; ret
0x0000020000032742 : imul eax, ecx ; shr rax, 0x38 ; ret
0x00000200003eda44 : imul eax, ecx ; sub eax, r8d ; ret
0x00000200003ed308 : imul eax, ecx ; xor eax, r9d ; ret
0x00000200001318f6 : imul eax, ecx, 0x989680 ; mov qword ptr [rdx], rax ; ret
0x00000200003eddfb : imul eax, edx ; ret
0x00000200004c3645 : imul eax, edx, 0x8bd88bff ; ret
0x000002000040df06 : imul eax, esi ; call 0x2000003cd1e
0x00000200003eddfa : imul eax, r10d ; ret
0x00000200003ed3d5 : imul eax, r9d ; ret
0x00000200003edf8e : imul eax, r9d ; sub eax, r8d ; ret
0x000002000019ea0b : imul ebp, dword ptr [rax - 8], -1 ; call rdx
0x00000200001ac3f4 : imul ebp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200001d9035 : imul ebp, edi, -1 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000535b17 : imul ebp, esi, 9 ; add byte ptr [rbp - 0x77], cl ; sub bh, dh ; ret 0xf00
0x00000200000daf90 : imul ebx ; in eax, dx ; mov eax, 0x18 ; ret
0x000002000047fe0c : imul ebx ; ret
0x000002000013ff76 : imul ebx, dword ptr [rax], 0x10618b48 ; jmp rdx
0x00000200004d8fcc : imul ebx, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rsi ; ret
0x00000200004ba797 : imul ebx, dword ptr [rbx], 0xd08b4800 ; jmp 0x200004ba768
0x00000200004f2407 : imul ebx, dword ptr [rsp + rax*8], 0x74c085ff ; jl 0x200004f2418 ; ret
0x00000200000c18e3 : imul ebx, ecx, 0x374002b ; xor al, al ; ret
0x0000020000436f86 : imul ecx, dword ptr [rax - 0x73], 0x3b480243 ; ret 0x4a77
0x00000200001ae926 : imul ecx, dword ptr [rax], 0x48 ; mov eax, dword ptr [rip + 0x123b49] ; call rax
0x0000020000782719 : imul ecx, dword ptr [rax], 0xa ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005af7c0 : imul ecx, dword ptr [rbp - 0x73], 0x8b486875 ; ret
0x00000200001adb09 : imul ecx, dword ptr [rcx + 0x12], 0 ; call rax
0x0000020000749d97 : imul ecx, dword ptr [rdx + rax], 0x5467058b ; ret
0x000002000041d054 : imul ecx, edx, 0x48c033ff ; add esp, 0x28 ; ret
0x00000200000efbae : imul ecx, edx, 0xd ; sub r8, rcx ; mov eax, r8d ; ret
0x000002000077c56d : imul ecx, esp, -9 ; dec dword ptr [rax - 0x75] ; ret
0x000002000041d7bb : imul edi, dword ptr [rax + 1], 0xfc0920f ; mov dh, 0xc0 ; ret
0x00000200001d8877 : imul edi, dword ptr [rax], -0x75 ; ret
0x000002000003d0e0 : imul edi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000662fe4 : imul edi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000627d83 : imul edi, dword ptr [rax], 0x8b4cffbb ; ret
0x00000200006ce367 : imul edi, dword ptr [rdi + 0x1e7203ff], -0xa ; ret
0x000002000001d056 : imul edi, ebp, -1 ; push rsi ; ret
0x00000200000b80f3 : imul edi, ecx, -1 ; jmp 0x200000b80be
0x0000020000003d67 : imul edi, edi, 0x8341ffff ; ret 0xfc0
0x00000200000e0bec : imul edi, esi, -1 ; inc dword ptr [rcx - 0x75] ; ret 0x8386
0x00000200001af831 : imul edx, dword ptr [rax + 0x48], -0x75 ; add eax, 0x122c3e ; call rax
0x0000020000407b9b : imul edx, dword ptr [rax], -0x78 ; adc byte ptr [r8 - 0x7d], cl ; ret
0x0000020000012b5d : imul edx, dword ptr [rax], 0x48 ; mov ecx, edi ; call 0x200000bee67
0x000002000002906e : imul edx, dword ptr [rbx], 0 ; mov r8, r14 ; mov rcx, rbx ; call rax
0x000002000017d883 : imul edx, dword ptr [rdi - 0x11], 0x10894dff ; ret
0x0000020000420ce2 : imul edx, dword ptr [rdi], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ab95d : imul edx, dword ptr [rdx], 0 ; call rax
0x000002000003fd05 : imul edx, dword ptr [rdx], 0 ; ret
0x000002000001ede9 : imul esi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000003d59c : imul esi, dword ptr [rax], 0x49 ; mov esp, ebx ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200005c2fde : imul esi, dword ptr [rcx - 0x11], 0x58b4cff ; ret 0xffdb
0x0000020000787537 : imul esi, dword ptr [rcx - 0x7d], -0x2e ; and dword ptr [rbx], esi ; ret
0x00000200001e8a85 : imul esi, ebx, -1 ; add rsp, 0x28 ; ret
0x00000200004095ed : imul esp ; dec dword ptr [rbx + 0x38de8d8] ; ret
0x0000020000466d0f : imul esp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x0000020000601b45 : imul esp, dword ptr [rdx + 0x48], 0xc1e8cb8b ; hlt ; ret 0xebff
0x000002000040df05 : imul r8, rsi ; call 0x2000003cd1f
0x00000200001ea15c : imul rax, rcx ; div r8 ; ret
0x0000020000032741 : imul rax, rcx ; shr rax, 0x38 ; ret
0x000002000056ad3a : in al, -0x17 ; ret 0xe673
0x00000200003d2f4b : in al, -0x17 ; ret 0xffeb
0x000002000049ad02 : in al, -0x18 ; js 0x2000049ac8d ; ret 0x48ff
0x00000200003dc43c : in al, -0x1a ; ret
0x0000020000512e98 : in al, -0x2b ; ret 0x85ff
0x0000020000460cee : in al, -0x32 ; dec dword ptr [rax - 0x75] ; ret
0x000002000068c547 : in al, -0x39 ; add eax, dword ptr [rbx] ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0x4566
0x00000200004f7431 : in al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000075e198 : in al, -0x49 ; call qword ptr [rbx]
0x00000200005240d8 : in al, -0x4d ; ret 0x48ff
0x0000020000755200 : in al, -0x5e ; ret 0x75ff
0x00000200005158d8 : in al, -0x65 ; ret
0x0000020000621414 : in al, -0x73 ; push rax ; dec dword ptr [rax - 0x7d] ; ret 0x4803
0x000002000068373c : in al, -0x75 ; ret
0x00000200005dcae3 : in al, -0x75 ; ret 0x8d48
0x000002000039b620 : in al, -0x76 ; ret 0x824
0x0000020000698ea8 : in al, -0x79 ; ret
0x0000020000203a53 : in al, -0xa ; ret
0x000002000004e3d6 : in al, -0xa ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x0000020000202e1d : in al, -1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003e8e17 : in al, -1 ; add rsp, 0x28 ; ret
0x00000200005da335 : in al, -1 ; add rsp, 0x48 ; ret
0x00000200003a7b4d : in al, -1 ; nop ; jmp 0x2000039b2e6
0x00000200000396db : in al, -1 ; ret
0x000002000020313f : in al, -2 ; jmp 0x2000020314d
0x0000020000768064 : in al, 0x2d ; salc ; dec dword ptr [rax - 1] ; ret
0x0000020000764292 : in al, 0x2e ; add esi, edi ; ret 0x38e8
0x000002000055cde4 : in al, 0x35 ; enter -0x6f01, -0x17 ; ret 0xe568
0x000002000067613e : in al, 0x41 ; mov eax, eax ; ret
0x00000200001e304c : in al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200006763ef : in al, 0x48 ; add esp, 0x28 ; ret
0x000002000073ab70 : in al, 0x48 ; mov eax, edx ; jmp 0x2000073ab7b
0x00000200000df729 : in al, 0x49 ; mov eax, eax ; ret
0x00000200005a32ae : in al, 0x74 ; and ecx, dword ptr [rax - 0x75] ; ret
0x000002000011f118 : in al, 0x74 ; sub dh, dh ; ret 0xf03
0x0000020000646e25 : in al, 0x75 ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000007c3e4 : in al, 0x75 ; and eax, dword ptr [rbp - 0x75] ; ret 0x8b48
0x00000200003caa3b : in al, 0x75 ; or esi, esi ; ret
0x000002000078040b : in al, 0x75 ; ret 0x94e9
0x000002000007c8eb : in al, 0x75 ; xor al, byte ptr [rbp - 0x75] ; ret 0x8b48
0x00000200004fb398 : in al, 0x7d ; ret
0x000002000044e418 : in al, 0xd ; dec dword ptr [rax + 0x3b] ; ret 0x830f
0x0000020000099835 : in al, 0xe ; add byte ptr [rcx - 0x75], cl ; ret 0x48f0
0x00000200004be62c : in al, 0xf ; mov dh, 0x57 ; add esi, esi ; ret 0xf08
0x0000020000600028 : in al, 0xf ; ret
0x00000200004659e2 : in al, 0xf ; test dword ptr [rax - 0x74ffebbf], esi ; ret
0x00000200004d936d : in al, 0xf ; test dword ptr [rax - 0x75000000], ecx ; ret
0x00000200004c8ccd : in al, 1 ; add byte ptr [rax], al ; call rdi
0x00000200000c25ec : in al, 1 ; add byte ptr [rax], al ; ret
0x0000020000047b19 : in al, 7 ; add dh, dh ; ret
0x0000020000491bda : in al, dx ; adc dword ptr [rcx], ecx ; add rax, rcx ; jmp rax
0x0000020000114d60 : in al, dx ; adc ebx, edi ; dec dword ptr [rdx + 0xd8d48d3] ; ret
0x0000020000618abb : in al, dx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x00000200003f2680 : in al, dx ; add qword ptr [r8 + 0x10], r9 ; add rsp, 0x28 ; ret
0x000002000039ffde : in al, dx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003a002a : in al, dx ; add rsp, 0x80 ; pop rbx ; ret
0x0000020000648482 : in al, dx ; and byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000002000074c95e : in al, dx ; and byte ptr [rax - 0x75], cl ; cmp dword ptr [rax - 0x75], ecx ; ret 0x8b4d
0x0000020000019878 : in al, dx ; and byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 0x7d] ; ret 0xe804
0x00000200004c96f0 : in al, dx ; and byte ptr [rax - 0x75], cl ; fld1 ; jb 0x200004c974f ; ret 0x48ff
0x000002000068b5b8 : in al, dx ; and byte ptr [rax - 0x75], cl ; fld1 ; ret 0xa80e
0x00000200001e8aa6 : in al, dx ; and byte ptr [rax - 0x75], cl ; jmp 0x1ff83674d40
0x0000020000076147 : in al, dx ; and byte ptr [rax - 0x75], cl ; jmp 0x20048c9ec9f
0x0000020000452aa0 : in al, dx ; and byte ptr [rax - 0x75], cl ; pop rcx ; sub dh, dh ; ret
0x0000020000454e71 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x3345
0x00000200004082a8 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000502142 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x8b49
0x000002000004ec44 : in al, dx ; and byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x00000200001c1340 : in al, dx ; and byte ptr [rax - 0x75], cl ; rol dword ptr [rdi + rcx + 0x20], 1 ; ret
0x000002000044d2fd : in al, dx ; and byte ptr [rax - 0x7d], cl ; ret 0x4830
0x0000020000622186 : in al, dx ; and byte ptr [rax - 9], cl ; ret 0xfff
0x0000020000425484 : in al, dx ; and byte ptr [rbx + rcx*4 - 0x2f], cl ; call 0x2000005168c
0x0000020000411f40 : in al, dx ; and byte ptr [rbx - 0x74b3cfa6], cl ; ret 0xdb85
0x00000200006296ee : in al, dx ; and byte ptr [rbx - 0x74b3e7bf], cl ; ret 0xb60f
0x00000200001d2fe3 : in al, dx ; and byte ptr [rbx - 0x74b7d78f], cl ; ret 0x8b4c
0x00000200004e8974 : in al, dx ; and byte ptr [rbx], dh ; sar byte ptr [rcx], 5 ; ret 0x2106
0x00000200000ed6ad : in al, dx ; and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc984
0x00000200005f9718 : in al, dx ; and byte ptr [rcx - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0xc985
0x00000200000d2747 : in al, dx ; and byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000061bb4 : in al, dx ; and byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000740d44 : in al, dx ; and byte ptr [rdi], cl ; mov bh, 5 ; mov bl, 0xd2 ; ret
0x000002000001ab28 : in al, dx ; and dh, bh ; ret 0xc933
0x000002000049ba85 : in al, dx ; call 0x200000bd244
0x00000200000a3d42 : in al, dx ; call 0x200480a3d53
0x00000200003dd580 : in al, dx ; call qword ptr [rsi]
0x000002000019e25b : in al, dx ; clc ; dec dword ptr [rax - 0x75] ; ret
0x000002000044473e : in al, dx ; cmp bh, dh ; fimul dword ptr [rax + 0x63] ; ret 0x8b48
0x0000020000038bd6 : in al, dx ; cmp bh, dh ; ret 0xfffc
0x0000020000451522 : in al, dx ; cmp byte ptr [rax - 0x75], cl ; ret 0xd233
0x00000200001ef33a : in al, dx ; cmp byte ptr [rbx + 0x3b44ffca], al ; ret 0x1474
0x00000200001f493a : in al, dx ; cmp byte ptr [rbx], dh ; ror byte ptr [rbp + rcx*4 + 5], 0xbb ; ret
0x000002000020a01e : in al, dx ; cmp byte ptr [rdi + rcx - 0x49], al ; ret 0xab8
0x00000200004b9d5d : in al, dx ; dec dword ptr [rax + 0x3b] ; ret 0x2377
0x0000020000438a46 : in al, dx ; dec dword ptr [rax - 0x73] ; xchg rax, r15 ; call qword ptr [rax]
0x0000020000431925 : in al, dx ; dec dword ptr [rax - 0x75] ; fnstsw dword ptr [rbx] ; ret 0x840f
0x000002000015ea59 : in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x000002000015fa77 : in al, dx ; dec dword ptr [rax - 0x75] ; ret 0x854d
0x000002000041d5a1 : in al, dx ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rsp + rdi*4 + 0x44], 0x8b ; ret
0x00000200001d00bc : in al, dx ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004b6c6e : in al, dx ; dec dword ptr [rax - 0x7d] ; ror byte ptr [rsp + rax*2 + 0xf], 0xb6 ; ret
0x00000200005ae644 : in al, dx ; dec dword ptr [rax - 0x7f] ; ret 0xb8
0x00000200001d09d1 : in al, dx ; dec dword ptr [rax - 9] ; ret
0x00000200004095ee : in al, dx ; dec dword ptr [rbx + 0x38de8d8] ; ret
0x0000020000410c51 : in al, dx ; dec dword ptr [rbx - 0x6e78f015] ; call qword ptr [rsi]
0x00000200001a1953 : in al, dx ; dec dword ptr [rdx - 0x1730742d] ; ret 0xec02
0x00000200001fb72a : in al, dx ; dec dword ptr [rdx - 0x3b7cb73d] ; pop rbx ; ret
0x00000200001a9b66 : in al, dx ; dec esp ; add rsp, 0x28 ; ret
0x00000200001627ed : in al, dx ; dec esp ; mov eax, 0xc00000ef ; ret
0x00000200003ae790 : in al, dx ; fdivr st(7) ; add rsp, 0x18 ; ret
0x00000200001b65d5 : in al, dx ; in al, dx ; inc dword ptr [rax + rax*8 + 0x3451774] ; ret
0x00000200001b65d6 : in al, dx ; inc dword ptr [rax + rax*8 + 0x3451774] ; ret
0x00000200001c2a72 : in al, dx ; inc dword ptr [rax + rax*8 - 0x7eb7b58c] ; ret
0x00000200001c323e : in al, dx ; inc dword ptr [rax + rax*8 - 0xbea48c] ; ret
0x0000020000410c43 : in al, dx ; inc dword ptr [rbp + 0x2d850fff] ; call qword ptr [rsi]
0x0000020000160580 : in al, dx ; inc dword ptr [rbp - 0x75] ; ret 0x8b41
0x00000200005b28af : in al, dx ; inc dword ptr [rbp - 0x9e58a37] ; ret 0x7502
0x00000200005ae9c3 : in al, dx ; inc dword ptr [rbx - 0x7cf0f008] ; ret
0x00000200001ceeb5 : in al, dx ; inc dword ptr [rcx - 0x80] ; call qword ptr [rcx]
0x00000200003f90f4 : in al, dx ; insd dword ptr [rdi], dx ; ret
0x000002000018d149 : in al, dx ; int1 ; dec dword ptr [rax - 0x7b] ; ret
0x00000200003c9acd : in al, dx ; jmp 0x200003c9a94
0x000002000047ae55 : in al, dx ; jnp 0x2000047ae70 ; add dh, dh ; ret
0x00000200001ad4f2 : in al, dx ; jo 0x200001ad483 ; ret 0x8b44
0x00000200004e4522 : in al, dx ; jo 0x200004e44b3 ; ret 0x8b48
0x000002000050d012 : in al, dx ; jo 0x2000050cfa3 ; ret 0x8b48
0x0000020000423d32 : in al, dx ; lea eax, dword ptr [r8 + 0x48] ; ret
0x0000020000161ffb : in al, dx ; ljmp ptr [rcx + 0xd] ; push rcx ; ret 0x21
0x000002000012fdf5 : in al, dx ; mov dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x00000200004736a7 : in al, dx ; mov eax, 0xc000000d ; ret
0x0000020000403f47 : in al, dx ; mov eax, 0xc0000058 ; ret
0x00000200000bc8bf : in al, dx ; mov eax, dword ptr [rcx + 0x40] ; test al, 1 ; jne 0x200000bc8d0 ; ret
0x0000020000735f71 : in al, dx ; mov r14, qword ptr [rbp - 0x80] ; mov rax, rdx ; jmp 0x20000735f84
0x0000020000731f23 : in al, dx ; mov rax, rdx ; jmp 0x20000731f2e
0x0000020000733c48 : in al, dx ; mov rax, rdx ; jmp 0x20000733c53
0x0000020000734052 : in al, dx ; mov rax, rdx ; jmp 0x2000073405d
0x000002000073d933 : in al, dx ; mov rax, rdx ; jmp 0x2000073d93e
0x000002000073e119 : in al, dx ; mov rax, rdx ; jmp 0x2000073e124
0x00000200000ed13c : in al, dx ; or al, byte ptr [rax] ; ret
0x000002000007335a : in al, dx ; or eax, 0xc033c300 ; ret
0x0000020000686c3c : in al, dx ; or eax, 0xffffffff ; ret
0x00000200005a13fb : in al, dx ; out dx, eax ; dec dword ptr [rcx - 0x75] ; pop rsi ; and byte ptr [rax - 0x7f], cl ; ret
0x00000200001df9e0 : in al, dx ; pmaxsw mm7, mm7 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000746636 : in al, dx ; pop rbx ; add byte ptr [rax], al ; ret
0x00000200004c2d5e : in al, dx ; push -0x7400ccbb ; ret 0x348
0x0000020000431904 : in al, dx ; push qword ptr [rbx] ; idiv byte ptr [rbx] ; ret 0xb841
0x000002000018924f : in al, dx ; push rax ; int1 ; dec dword ptr [rax - 9] ; ret
0x00000200005b258a : in al, dx ; push rdi ; ret
0x0000020000160559 : in al, dx ; push rsi ; ret 0x741e
0x00000200005b28f1 : in al, dx ; push rsi ; ret 0xf02
0x00000200000f17f8 : in al, dx ; ret
0x000002000060764c : in al, dx ; ret 0x48ff
0x000002000048d5ea : in al, dx ; ret 0x65ff
0x00000200000b2272 : in al, dx ; ret 0xd
0x0000020000500d4c : in al, dx ; ret 0xe9ff
0x0000020000562830 : in al, dx ; ret 0xffae
0x0000020000752b10 : in al, dx ; ret 0xffcc
0x00000200004a3d70 : in al, dx ; ret 0xffff
0x00000200003f141e : in al, dx ; sbb byte ptr [r8], r8b ; ret
0x00000200001c05cd : in al, dx ; sbb eax, dword ptr [rax] ; mov al, dl ; ret
0x0000020000492070 : in al, dx ; std ; ret 0xe9ff
0x0000020000081a4f : in al, dx ; str word ptr [rax - 0x75] ; sbb esi, esi ; ret
0x00000200000df928 : in al, dx ; sub al, 0xfd ; inc dword ptr [rax - 0x9dfddb1] ; ret
0x00000200004ec622 : in al, dx ; sub al, ch ; ret
0x000002000021347a : in al, dx ; sub byte ptr [rax - 0x75], cl ; add eax, 0xbeff5 ; call rax
0x000002000040369e : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8349
0x00000200000700ba : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8445
0x00000200003e8e02 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200003b1aa6 : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000e85ee : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x0000020000033b6a : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0xb941
0x00000200003fd21c : in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0xf44
0x0000020000116b3e : in al, dx ; sub byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200006290c6 : in al, dx ; sub byte ptr [rax - 0x7f], cl ; ret 0x7fff
0x00000200000f83d9 : in al, dx ; test edx, edx ; jne 0x200000f83e4 ; ret
0x0000020000006dba : in al, dx ; unpckhps xmm0, xmmword ptr [rax] ; ret
0x0000020000509590 : in al, dx ; wait ; ret 0x48ff
0x00000200006086f0 : in al, dx ; xchg eax, ebp ; ret 0x48ff
0x00000200006030bc : in al, dx ; xchg eax, edi ; mov ebx, 0xc48348ff ; pop rbx ; ret
0x0000020000512c70 : in al, dx ; xlatb ; ret 0x8bff
0x00000200000c1944 : in al, dx ; xor al, al ; ret
0x00000200003fb7dc : in al, dx ; xor byte ptr [rbp - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0x8b45
0x000002000011dd21 : in al, dx ; xor byte ptr [rbx], dh ; dec dword ptr [rax - 0x75] ; fincstp ; ret 0xfffc
0x00000200006cc560 : in al, dx ; xor byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000003c0b8 : in al, dx ; xor esi, dword ptr [rax + rax] ; call rax
0x00000200001657e6 : in ax, dx ; dec dword ptr [rax - 9] ; ret 0xfffc
0x00000200005a106c : in eax, -0x13 ; jmp 0x1ffc3e55978
0x00000200003db3a7 : in eax, -0x14 ; ret
0x000002000052a211 : in eax, -0x15 ; adc al, 0x8b ; ret 0x348
0x00000200000d4e97 : in eax, -0x17 ; ret
0x00000200005124d7 : in eax, -0x31 ; ret
0x00000200006264e7 : in eax, -0x34 ; movsd dword ptr [rdi], dword ptr [rsi] ; push rsi ; ret
0x000002000063b8ef : in eax, -0x37 ; call qword ptr [rax]
0x000002000056471b : in eax, -0x39 ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x7b] ; ret
0x00000200006c2abb : in eax, -0x4a ; dec dword ptr [rax - 0x75] ; ret
0x000002000020cab0 : in eax, -0x50 ; add ebx, eax ; xor al, al ; ret
0x000002000068f187 : in eax, -0x5b ; stosd dword ptr [rdi], eax ; dec dword ptr [rax + 0x3b] ; ret
0x00000200000346be : in eax, -0x75 ; add al, 0xb ; ret
0x000002000001876a : in eax, -0x75 ; ret
0x0000020000617f44 : in eax, -0x75 ; ret 0x8941
0x000002000041bdb2 : in eax, -0x75 ; ret 0x8b48
0x0000020000129ade : in eax, -0x76 ; ret 0xccc3
0x0000020000746921 : in eax, -0x78 ; ret
0x00000200006db54b : in eax, -0x7d ; ret 0x4cff
0x0000020000417157 : in eax, -0xa ; ret
0x00000200001c9c68 : in eax, -1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c998a : in eax, -1 ; add rsp, 0x28 ; ret
0x00000200004a14de : in eax, -1 ; call 0x2000004eb08
0x000002000049cfc5 : in eax, -1 ; call 0x200000bd245
0x000002000049c440 : in eax, -1 ; call 0x200000c1b35
0x00000200004c3aaf : in eax, -1 ; call 0x200000eb5b5
0x00000200001f0b26 : in eax, -1 ; mov byte ptr [rcx + 0x45f], dl ; ret
0x000002000049ba81 : in eax, -1 ; mov ebp, r12d ; call 0x200000bd248
0x000002000049b6cb : in eax, -1 ; mov rcx, rdi ; call 0x200000c2848
0x00000200005e1770 : in eax, -1 ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000049b8bb : in eax, -1 ; xor dil, dil ; call 0x200000bd248
0x000002000049c37c : in eax, -1 ; xor edx, edx ; call 0x200000c2847
0x000002000069909e : in eax, 0 ; add al, al ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004efba7 : in eax, 0x10 ; call 0x20000117429
0x00000200004a1657 : in eax, 0x11 ; ret 0x48ff
0x0000020000034c15 : in eax, 0x12 ; add dh, dh ; ret
0x00000200007783e7 : in eax, 0x17 ; movsd dword ptr [rdi], dword ptr [rsi] ; call qword ptr [rax - 0x23d9b17]
0x0000020000226d04 : in eax, 0x33 ; ror byte ptr [rax - 0x7d], cl ; ret
0x0000020000210004 : in eax, 0x41 ; add dword ptr [rdx + 0x14], edx ; xor eax, eax ; ret
0x000002000012ed97 : in eax, 0x43 ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x000002000044ee5e : in eax, 0x48 ; inc eax ; add rsp, 0x38 ; ret
0x00000200004c2be3 : in eax, 0x5c ; ret 0xe9ff
0x000002000050386b : in eax, 0x5f ; ret
0x0000020000135796 : in eax, 0x66 ; mov dword ptr [rcx], r10d ; mov rax, r9 ; ret
0x000002000049bf57 : in eax, 0x68 ; ret 0x4cff
0x00000200007487b7 : in eax, 0x6a ; ret
0x0000020000609c27 : in eax, 0x73 ; ret 0x45ff
0x00000200004efe57 : in eax, 0x76 ; ret 0xa8ff
0x00000200000ed938 : in eax, 0xa ; add bh, bh ; ret
0x0000020000082286 : in eax, 0xf ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200001357c2 : in eax, 0xf ; mov bh, 1 ; movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x00000200004570ae : in eax, dx ; adc al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000803ae : in eax, dx ; add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 0xfff
0x00000200003bd9ba : in eax, dx ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000010e42b : in eax, dx ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x33], al ; rol byte ptr [rbp - 0x75], cl ; ret 0xf45
0x000002000007ad8d : in eax, dx ; add eax, dword ptr [rcx - 0xa] ; ret 0xf07
0x00000200006d7e28 : in eax, dx ; add eax, dword ptr [rdi + rcx - 0x51] ; fld qword ptr [rcx - 0x75] ; ret
0x00000200000b1e64 : in eax, dx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000044031a : in eax, dx ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000008414 : in eax, dx ; add rsp, 0x28 ; ret
0x00000200004609b7 : in eax, dx ; bts dword ptr [rdx], 0x18 ; ret
0x00000200005807a5 : in eax, dx ; call 0x1ffc35b4daf
0x0000020000180449 : in eax, dx ; call qword ptr [rax - 0xffb3d17]
0x00000200005b9a99 : in eax, dx ; dec dword ptr [rax + 0x2b] ; ret 0x8949
0x00000200001648c0 : in eax, dx ; dec dword ptr [rax + 0x3b] ; ret 0x860f
0x00000200003f4e49 : in eax, dx ; dec dword ptr [rax + 3] ; ret 0x8948
0x0000020000175560 : in eax, dx ; dec dword ptr [rax - 0x73] ; or dil, dil ; ret
0x0000020000677435 : in eax, dx ; dec dword ptr [rax - 0x73] ; shr r8b, 0x80 ; ret 0xffa4
0x00000200001307b8 : in eax, dx ; dec dword ptr [rax - 0x73] ; sub byte ptr [r8 - 0x7d], r9b ; ret
0x00000200001638b9 : in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000167680 : in eax, dx ; dec dword ptr [rax - 0x75] ; ret 0x48f0
0x0000020000188e5f : in eax, dx ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x000002000065d738 : in eax, dx ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000176a5f : in eax, dx ; dec dword ptr [rax - 0x7d] ; ret 0x830c
0x00000200004309ab : in eax, dx ; dec dword ptr [rax - 1] ; ret
0x00000200001657e7 : in eax, dx ; dec dword ptr [rax - 9] ; ret 0xfffc
0x00000200005ba9e4 : in eax, dx ; dec dword ptr [rbp + rcx*4 + 5] ; ret
0x0000020000162fa1 : in eax, dx ; dec dword ptr [rbp - 0x75] ; or byte ptr [rbx], al ; ret
0x00000200004025c3 : in eax, dx ; dec dword ptr [rcx - 0x73] ; and byte ptr [r8 - 0x75], cl ; ret 0x8949
0x0000020000177692 : in eax, dx ; dec dword ptr [rcx - 0x7d] ; ret
0x000002000007ed2c : in eax, dx ; dec dword ptr [rdi] ; test byte ptr [rax - 0xa000000], cl ; ret 0xf08
0x00000200004acd6b : in eax, dx ; dec dword ptr [rdi] ; test dword ptr [rcx], ebp ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x0000020000167529 : in eax, dx ; dec esp ; mov eax, 3 ; ret
0x000002000041e04e : in eax, dx ; inc dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000016613b : in eax, dx ; inc dword ptr [rbp + 0x3b] ; ret
0x0000020000166144 : in eax, dx ; inc dword ptr [rbp + 0x3b] ; ret 0x840f
0x000002000068052c : in eax, dx ; inc dword ptr [rbp + 0x480f48db] ; ret 0x5c89
0x000002000068138c : in eax, dx ; inc dword ptr [rcx - 0x48] ; ret
0x000002000067f64d : in eax, dx ; inc dword ptr [rcx - 0x48] ; ret 0xe
0x000002000017721b : in eax, dx ; inc dword ptr [rcx - 0x75] ; ret
0x00000200005ba70d : in eax, dx ; inc dword ptr [rcx - 0x75] ; ret 0x8948
0x00000200005ba76d : in eax, dx ; inc dword ptr [rcx - 0x75] ; ret 0x8d4c
0x00000200001639b2 : in eax, dx ; inc dword ptr [rcx - 0x75] ; sub byte ptr [rax + 0x6b], cl ; ret
0x000002000043099c : in eax, dx ; inc dword ptr [rcx - 0x76] ; imul al ; ret 0xc1b6
0x0000020000176a6c : in eax, dx ; inc dword ptr [rcx - 1] ; ret 0x8348
0x00000200006dbe6e : in eax, dx ; insb byte ptr [rdi], dx ; ret 0xff
0x00000200003e1ef9 : in eax, dx ; int1 ; sbb byte ptr [rax], al ; mov al, 1 ; ret
0x000002000045ae71 : in eax, dx ; je 0x20000459e1e ; jmp 0x200005a7169
0x00000200005a106d : in eax, dx ; jmp 0x1ffc3e55977
0x0000020000017aa5 : in eax, dx ; jmp 0x20000017af2
0x000002000016c13d : in eax, dx ; jmp 0x2000010171b
0x0000020000165092 : in eax, dx ; jmp qword ptr [rcx]
0x00000200005e49fb : in eax, dx ; jmp rsi
0x00000200001d09cf : in eax, dx ; loope 0x200001d09c4 ; dec dword ptr [rax - 9] ; ret
0x000002000012537a : in eax, dx ; mov dword ptr [r8], eax ; ret
0x0000020000619905 : in eax, dx ; mov dword ptr [rip - 0x2e8d64], edx ; xor eax, eax ; ret
0x00000200000daf92 : in eax, dx ; mov eax, 0x18 ; ret
0x00000200003d826e : in eax, dx ; mov eax, 1 ; ret
0x000002000003ea5e : in eax, dx ; mov rax, r8 ; ret
0x0000020000225795 : in eax, dx ; mov rax, rdx ; jmp 0x200002257a0
0x0000020000225a5e : in eax, dx ; mov rax, rdx ; jmp 0x20000225a72
0x000002000022b0f0 : in eax, dx ; mov rax, rdx ; jmp 0x2000022b0fb
0x000002000022b231 : in eax, dx ; mov rax, rdx ; jmp 0x2000022b23c
0x000002000022b367 : in eax, dx ; mov rax, rdx ; jmp 0x2000022b37b
0x000002000022f2a2 : in eax, dx ; mov rax, rdx ; jmp 0x2000022f2ad
0x000002000022f51b : in eax, dx ; mov rax, rdx ; jmp 0x2000022f540
0x000002000073b9a1 : in eax, dx ; mov rax, rdx ; jmp 0x2000073b9ac
0x00000200000ee4ee : in eax, dx ; mov rax, rdx ; ret
0x0000020000020fc5 : in eax, dx ; or eax, 0x1c8b4d04 ; ret
0x00000200001c1928 : in eax, dx ; or eax, 0xffffffff ; ret
0x00000200005a12e4 : in eax, dx ; out dx, eax ; dec dword ptr [rcx - 0x75] ; pop rsi ; and byte ptr [rax - 0x7f], cl ; ret
0x0000020000430ca9 : in eax, dx ; push qword ptr [rbp + 0x44] ; mov dword ptr [rdx], eax ; mov eax, ecx ; ret
0x00000200004252b3 : in eax, dx ; push qword ptr [rdi + 0x36] ; xor ecx, ecx ; call 0x2000004585d
0x00000200001669a8 : in eax, dx ; push rax ; xadd qword ptr [r9 + 0x40], r8 ; ret
0x00000200005b58ab : in eax, dx ; push rsi ; ret 0x7401
0x0000020000162aa0 : in eax, dx ; push rsi ; ret 0x7501
0x00000200001783db : in eax, dx ; push rsi ; ret 0xf08
0x000002000004774a : in eax, dx ; rcl dword ptr [rdx], 1 ; add bh, bh ; ret
0x000002000006a000 : in eax, dx ; ret
0x000002000049f382 : in eax, dx ; ret 0x11
0x00000200004756d7 : in eax, dx ; ret 0x48ff
0x000002000048d4c0 : in eax, dx ; ret 0x65ff
0x00000200004217ef : in eax, dx ; ret 0x84ff
0x0000020000521b69 : in eax, dx ; ret 0xa
0x000002000040de7a : in eax, dx ; ret 0xb0ff
0x00000200000855f8 : in eax, dx ; ret 0xf
0x00000200005965d9 : in eax, dx ; ret 0xfff7
0x000002000006a04f : in eax, dx ; ret 0xfffc
0x00000200005306e4 : in eax, dx ; sar edi, 0xf ; mov edx, 0x8b480a2b ; ret
0x00000200005c1417 : in eax, dx ; sbb eax, 0x8348ffd1 ; ret 0x4804
0x00000200005b9335 : in eax, dx ; scasd eax, dword ptr [rdi] ; push rsi ; ret
0x000002000017adf3 : in eax, dx ; test ch, dh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000069ea4 : in eax, dx ; xor al, al ; ret
0x00000200006077dc : in eax, dx ; xor edx, edx ; mov rcx, r15 ; call 0x20000231019
0x000002000021a0b4 : inc al ; shr ecx, 1 ; jne 0x2000021a0ba ; ret
0x000002000003643e : inc ax ; mov word ptr [rcx + 2], ax ; ret
0x0000020000120147 : inc ax ; mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x00000200001350c2 : inc bl ; lea rax, qword ptr [rcx + rax - 3] ; ret
0x000002000048693c : inc byte ptr [r13 + 3] ; ret 0xf41
0x0000020000193242 : inc byte ptr [rax + 0x4b8806c9] ; jo 0x2000019323b ; ret
0x000002000058ec56 : inc byte ptr [rbp + 0x3b] ; ret
0x000002000009720c : inc byte ptr [rbp + 0xf] ; ret
0x000002000048693d : inc byte ptr [rbp + 3] ; ret 0xf41
0x0000020000039552 : inc byte ptr [rbp - 0x76] ; ret 0x8b44
0x0000020000440dc0 : inc byte ptr [rbx] ; add rcx, r12 ; jmp rcx
0x000002000052929e : inc byte ptr [rcx + 0x3b] ; ret 0x2377
0x00000200001f6a58 : inc byte ptr [rcx - 0x48] ; jmp qword ptr [rbx]
0x0000020000018a54 : inc byte ptr [rcx - 0x75] ; ret
0x000002000007ae5c : inc byte ptr [rcx - 0x75] ; ret 0x2b49
0x00000200006bc3fd : inc byte ptr [rcx - 0x75] ; xlatb ; call rdi
0x000002000045a9ae : inc byte ptr [rdi + rcx] ; test dword ptr [rbx], edx ; ret
0x000002000011f2e1 : inc byte ptr [rdx] ; add bl, ch ; ret
0x000002000013ca2f : inc byte ptr [rsi + 0xf] ; ret
0x000002000018b7a8 : inc cl ; int1 ; push rsi ; ret 0x741e
0x000002000004f807 : inc dl ; jmp 0x2000004f7d4
0x000002000050407e : inc dl ; ret
0x00000200001a92f5 : inc dword ptr [0x2e44] ; ret
0x0000020000403bed : inc dword ptr [0x2e48] ; ret
0x0000020000417d7d : inc dword ptr [0x2e4c] ; ret
0x000002000011d8dd : inc dword ptr [0x5e04] ; ret
0x00000200001a9301 : inc dword ptr [0x5e40] ; ret
0x000002000002ad72 : inc dword ptr [r11 + r9*4 + 0x44] ; ret 0x4404
0x000002000002ae10 : inc dword ptr [r11 + r9*4 + 0x4c] ; ret 0x4404
0x00000200001a97c2 : inc dword ptr [r14 - 0x75] ; ret 0x4504
0x0000020000432fad : inc dword ptr [r8 + 0x10] ; xor eax, eax ; ret
0x000002000013b047 : inc dword ptr [r8] ; ret
0x00000200001edd63 : inc dword ptr [r9] ; add byte ptr [rax], al ; add al, ch ; ret 0xe945
0x000002000051e3c0 : inc dword ptr [rax + 0x10] ; ret
0x0000020000432fae : inc dword ptr [rax + 0x10] ; xor eax, eax ; ret
0x00000200006c6fea : inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x00000200001d7c1b : inc dword ptr [rax + 0x1e88] ; ret
0x0000020000108f52 : inc dword ptr [rax + 0x200] ; ret
0x000002000020e005 : inc dword ptr [rax + 0x72000002] ; ret 0xff33
0x000002000019fffa : inc dword ptr [rax + 0x7500817d] ; ret 0xb8eb
0x00000200001bc3cd : inc dword ptr [rax + 0xb8] ; mov rax, rdx ; ret
0x00000200003e0f0b : inc dword ptr [rax + 8] ; mov eax, edx ; add rsp, 0x28 ; ret
0x00000200001b65d7 : inc dword ptr [rax + rax*8 + 0x3451774] ; ret
0x0000020000618414 : inc dword ptr [rax + rax*8 + 0x58a0a75] ; ret 0xcdd6
0x00000200004a3c6b : inc dword ptr [rax + rax*8 + 0x58b0974] ; ret 0xe20d
0x00000200004a3b6b : inc dword ptr [rax + rax*8 + 0x58b0974] ; ret 0xe20e
0x00000200005e7231 : inc dword ptr [rax + rax*8 - 0x7421bbf1] ; ret
0x00000200005069ac : inc dword ptr [rax + rax*8 - 0x74b7868c] ; ret
0x000002000074fd91 : inc dword ptr [rax + rax*8 - 0x74b7e78c] ; ret
0x0000020000652aec : inc dword ptr [rax + rax*8 - 0x7cb6e48b] ; ret
0x00000200006880d9 : inc dword ptr [rax + rax*8 - 0x7cb7e88c] ; ret
0x00000200001c2a73 : inc dword ptr [rax + rax*8 - 0x7eb7b58c] ; ret
0x00000200001c323f : inc dword ptr [rax + rax*8 - 0xbea48c] ; ret
0x00000200006a8a86 : inc dword ptr [rax + rcx*4 + 0x3d] ; mov al, 0xd5 ; ret
0x0000020000108d9d : inc dword ptr [rax - 0x4a] ; add dword ptr [rax - 0x75], ecx ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000057e9fe : inc dword ptr [rax - 0x74beef1e] ; ret
0x0000020000185943 : inc dword ptr [rax - 0x7c] ; test byte ptr [rdi], 0x85 ; salc ; ret 0xfff0
0x000002000007d4fd : inc dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x00000200000df92b : inc dword ptr [rax - 0x9dfddb1] ; ret
0x00000200004248b7 : inc dword ptr [rax] ; add al, ch ; fxch st(0), st(5) ; ret 0x83ff
0x00000200001c47d1 : inc dword ptr [rax] ; add al, ch ; ret
0x00000200000acfae : inc dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret
0x0000020000120d24 : inc dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3349
0x000002000018d0a9 : inc dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8348
0x000002000040d1fc : inc dword ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8b48
0x00000200001ddc63 : inc dword ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret
0x000002000018a189 : inc dword ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ror dword ptr [rax + 0xf], 0x43 ; ret 0xba48
0x0000020000036434 : inc dword ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x8966
0x0000020000024e6f : inc dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0xf01
0x00000200004a98cb : inc dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006c5edf : inc dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000019b1e : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000062a0a8 : inc dword ptr [rax] ; add byte ptr [rax], cl ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x00000200000d9813 : inc dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret
0x000002000040981a : inc dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0x870f
0x00000200000acc5e : inc dword ptr [rax] ; add byte ptr [rcx + 0x23], cl ; ret
0x00000200000ace59 : inc dword ptr [rax] ; add byte ptr [rcx + 0x23], cl ; ret 0xba49
0x000002000018d268 : inc dword ptr [rax] ; add byte ptr [rcx + 0x23], cl ; ret 0xe6e9
0x00000200000b81fb : inc dword ptr [rax] ; add byte ptr [rcx + 0x3b], cl ; ror byte ptr [rdi], 0x82 ; ret
0x00000200003b776f : inc dword ptr [rax] ; add byte ptr [rcx + rcx*4 + 0x42], cl ; or byte ptr [rax - 0x7d], cl ; ret 0x4918
0x000002000041186f : inc dword ptr [rax] ; add byte ptr [rcx - 0x73], al ; frstor dword ptr [rsi - 0x7b] ; ret
0x000002000054409a : inc dword ptr [rax] ; add byte ptr [rcx - 0x7b], al ; ret 0x850f
0x00000200005d1745 : inc dword ptr [rax] ; add byte ptr [rdi + rcx - 0x43], al ; rol byte ptr [rcx - 0x7d], 1 ; ret 0xe9f2
0x0000020000167f60 : inc dword ptr [rax] ; add byte ptr [rdi], cl ; xchg dword ptr [rsi], ebp ; ret 0xffed
0x0000020000664d3f : inc dword ptr [rax] ; add byte ptr [rdx - 0x48f0bb35], cl ; ret
0x000002000002734a : inc dword ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x0000020000535677 : inc dword ptr [rax] ; add byte ptr [rsi + 3], ah ; ret 0x8966
0x00000200001733d0 : inc dword ptr [rax] ; add byte ptr [rsi - 0x7d], ah ; call 0x1ffc29c9a3b
0x000002000018cb44 : inc dword ptr [rax] ; add cl, ch ; ret 0xf1dc
0x00000200000abbc9 : inc dword ptr [rax] ; add dh, dh ; ret 0xf01
0x00000200007735a0 : inc dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200006d7981 : inc dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007735d9 : inc dword ptr [rax] ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000039d936 : inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000041e04f : inc dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000039c846 : inc dword ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x000002000063abac : inc dword ptr [rax] ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000074229 : inc dword ptr [rax] ; je 0x20000074232 ; ret
0x00000200006198d7 : inc dword ptr [rax] ; je 0x200006198ea ; mov eax, 0xc0000303 ; ret
0x00000200006dc092 : inc dword ptr [rax] ; jmp 0x200006dc0af
0x00000200003beb4e : inc dword ptr [rax] ; jne 0x200003beb61 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000408161 : inc dword ptr [rax] ; jne 0x20000408172 ; add rsp, 0x28 ; ret
0x000002000054241d : inc dword ptr [rax] ; jne 0x200005d8c48 ; ret
0x00000200006d2e56 : inc dword ptr [rax] ; jne 0x200006d2e69 ; mov eax, 0xc00000bb ; ret
0x00000200006d7c91 : inc dword ptr [rax] ; jne 0x200006d7ca4 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000076e823 : inc dword ptr [rax] ; mov byte ptr [rip - 0x75779], 0 ; ret
0x0000020000541bf4 : inc dword ptr [rax] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006bf1a6 : inc dword ptr [rax] ; mov rdx, rcx ; jne 0x200006bf1b9 ; xor eax, eax ; ret
0x000002000013b048 : inc dword ptr [rax] ; ret
0x000002000069f6f6 : inc dword ptr [rax] ; xchg eax, esi ; push 0x71 ; or cl, byte ptr [rbx] ; mov ch, 0x49 ; ret
0x00000200006da6df : inc dword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000501af0 : inc dword ptr [rbp + 0x11850fc0] ; ret
0x0000020000410c44 : inc dword ptr [rbp + 0x2d850fff] ; call qword ptr [rsi]
0x00000200006761da : inc dword ptr [rbp + 0x33] ; fild dword ptr [rbp - 0x75] ; ret
0x0000020000003afc : inc dword ptr [rbp + 0x33] ; fild dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000022dcab : inc dword ptr [rbp + 0x33] ; fisttp dword ptr [rbp - 0x75] ; ret
0x000002000056ad37 : inc dword ptr [rbp + 0x33] ; in al, -0x17 ; ret 0xe673
0x0000020000203a50 : inc dword ptr [rbp + 0x33] ; in al, -0xa ; ret
0x000002000016c13a : inc dword ptr [rbp + 0x33] ; in eax, dx ; jmp 0x2000010171e
0x00000200005ca298 : inc dword ptr [rbp + 0x33] ; inc dword ptr [rcx - 1] ; ret 0x8348
0x000002000057b770 : inc dword ptr [rbp + 0x33] ; inc dword ptr [rcx - 1] ; ret 0x8349
0x0000020000511ec9 : inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x8348
0x000002000060a96a : inc dword ptr [rbp + 0x33] ; ror byte ptr [rax - 0x7d], cl ; ret
0x000002000018c41e : inc dword ptr [rbp + 0x33] ; shr cl, 0x8c ; ret
0x00000200006ac792 : inc dword ptr [rbp + 0x391275c0] ; ret
0x00000200000fed02 : inc dword ptr [rbp + 0x3b] ; ret
0x0000020000166145 : inc dword ptr [rbp + 0x3b] ; ret 0x840f
0x0000020000697929 : inc dword ptr [rbp + 0x480575c0] ; add esp, 0x28 ; ret
0x000002000068052d : inc dword ptr [rbp + 0x480f48db] ; ret 0x5c89
0x0000020000539921 : inc dword ptr [rbp + 0x53880fdb] ; ret 9
0x000002000045acb9 : inc dword ptr [rbp + 0x66850fc0] ; ret 0x14
0x000002000075d590 : inc dword ptr [rbp + 0x71880fc0] ; ret
0x000002000075d56c : inc dword ptr [rbp + 0x7d880fdb] ; ret
0x00000200005807a7 : inc dword ptr [rbp + 3] ; ret
0x000002000052437a : inc dword ptr [rbp + 3] ; ret 0x8944
0x0000020000638026 : inc dword ptr [rbp + rcx*4 + 0x4f] ; adc byte ptr [rbx], ah ; ret 0x8948
0x00000200005025ef : inc dword ptr [rbp + rcx*4 + 0x5b] ; add dword ptr [rcx + 0x3b], eax ; ret
0x000002000072b22b : inc dword ptr [rbp + rdi*8 - 1] ; call qword ptr [rax]
0x0000020000452b00 : inc dword ptr [rbp - 0x14178b40] ; ret
0x000002000052e888 : inc dword ptr [rbp - 0x17ad8b40] ; ret 0xbfa2
0x000002000075d4c3 : inc dword ptr [rbp - 0x2077f040] ; ret
0x000002000075d3e4 : inc dword ptr [rbp - 0x2177f040] ; ret
0x00000200005219b7 : inc dword ptr [rbp - 0x2976f040] ; ret 0xa
0x00000200005219c7 : inc dword ptr [rbp - 0x3976f040] ; ret 0xa
0x000002000075d527 : inc dword ptr [rbp - 0x5577f040] ; ret
0x00000200005965aa : inc dword ptr [rbp - 0x6e76f040] ; ret 0xfff7
0x00000200004e0b68 : inc dword ptr [rbp - 0x74838725] ; ret
0x00000200004cd11a : inc dword ptr [rbp - 0x74c48725] ; ret
0x0000020000595219 : inc dword ptr [rbp - 0x74d98b0a] ; ret
0x00000200005f7526 : inc dword ptr [rbp - 0x74eb8b25] ; ret
0x00000200004c9167 : inc dword ptr [rbp - 0x74f28725] ; ret
0x00000200004d3d79 : inc dword ptr [rbp - 0x74f28b40] ; ret
0x00000200006ab68a : inc dword ptr [rbp - 0x74f38740] ; ret
0x000002000055c653 : inc dword ptr [rbp - 0x74f88625] ; ret
0x000002000040c1d9 : inc dword ptr [rbp - 0x74fb8b13] ; ret
0x00000200000fbad8 : inc dword ptr [rbp - 0x75] ; ret
0x000002000059dd91 : inc dword ptr [rbp - 0x75] ; ret 0x1ba
0x000002000073a217 : inc dword ptr [rbp - 0x75] ; ret 0x3b76
0x000002000008eb98 : inc dword ptr [rbp - 0x75] ; ret 0x488b
0x000002000017f21b : inc dword ptr [rbp - 0x75] ; ret 0x5e9
0x0000020000085b98 : inc dword ptr [rbp - 0x75] ; ret 0x73e9
0x00000200000fdaea : inc dword ptr [rbp - 0x75] ; ret 0x8b41
0x00000200000b274d : inc dword ptr [rbp - 0x75] ; ret 0x8b48
0x000002000046a702 : inc dword ptr [rbp - 0x75] ; ret 0x8b4c
0x0000020000572ab1 : inc dword ptr [rbp - 0x75] ; ret 0x8d48
0x000002000017dfd2 : inc dword ptr [rbp - 0x75] ; ret 0xb60f
0x0000020000758c09 : inc dword ptr [rbp - 0x75ec8740] ; ret
0x000002000043771a : inc dword ptr [rbp - 0x76] ; loopne 0x2000043770e ; popfq ; cdq ; ret
0x00000200001c42ac : inc dword ptr [rbp - 0x76] ; ret 0x8b48
0x00000200001c652b : inc dword ptr [rbp - 0x76] ; xchg eax, edi ; ret
0x00000200004eb5a0 : inc dword ptr [rbp - 0x7b7bf040] ; ret
0x00000200005a32ab : inc dword ptr [rbp - 0x7b] ; in al, 0x74 ; and ecx, dword ptr [rax - 0x75] ; ret
0x0000020000676533 : inc dword ptr [rbp - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret 0xd03b
0x000002000004c663 : inc dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x4f ; ret 0x8388
0x0000020000414e88 : inc dword ptr [rbp - 0x7c] ; test byte ptr [rdi], 0x84 ; ret 0x16d0
0x00000200004f240a : inc dword ptr [rbp - 0x838b40] ; ret
0x00000200001c0333 : inc dword ptr [rbp - 0x9cb8740] ; ret
0x00000200005b28b0 : inc dword ptr [rbp - 0x9e58a37] ; ret 0x7502
0x000002000060b185 : inc dword ptr [rbp - 0xbc8b40] ; ret
0x00000200007589ad : inc dword ptr [rbp - 0xd28740] ; ret
0x000002000061d76d : inc dword ptr [rbp - 0xde8b40] ; ret
0x000002000076cb5e : inc dword ptr [rbp - 0xf68740] ; ret
0x0000020000760e2a : inc dword ptr [rbp - 0xf68b40] ; ret
0x00000200007636bb : inc dword ptr [rbp - 0xf88740] ; ret
0x000002000057e6d9 : inc dword ptr [rbp - 0xf98b0a] ; ret 0xeed1
0x0000020000177b39 : inc dword ptr [rbx + 0x14] ; jmp 0x20000053e1e
0x00000200000539dd : inc dword ptr [rbx + 0x18] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000527a55 : inc dword ptr [rbx + 0x18] ; xor r8d, r8d ; jmp 0x20000527a27
0x0000020000080299 : inc dword ptr [rbx + 0x47605f8] ; xor eax, eax ; jmp 0x2000008026e
0x00000200006c6f50 : inc dword ptr [rbx + 0x478901c8] ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200005afeb1 : inc dword ptr [rbx + 0x57501f8] ; call 0x200001dd66d
0x00000200000c716d : inc dword ptr [rbx + 0x588] ; call 0x200000333f4
0x00000200005c5206 : inc dword ptr [rbx + 0x61e808c9] ; ret 0xffaa
0x0000020000197c41 : inc dword ptr [rbx + 0xb41fbe3] ; fucomp st(1) ; jmp qword ptr [rdx]
0x000002000044fdbb : inc dword ptr [rbx + 0xc8a07e0] ; or dh, dh ; ret 0x7401
0x000002000002ad73 : inc dword ptr [rbx + rcx*4 + 0x44] ; ret 0x4404
0x000002000002ae11 : inc dword ptr [rbx + rcx*4 + 0x4c] ; ret 0x4404
0x000002000039eedc : inc dword ptr [rbx + rcx*4 + 0xd] ; pushfq ; ret
0x000002000074f4ed : inc dword ptr [rbx + rcx*4 + 5] ; ret
0x000002000039c541 : inc dword ptr [rbx + rcx*4 - 0x40] ; mov eax, r8d ; ret
0x0000020000231639 : inc dword ptr [rbx + rdi + 0x2d] ; ret
0x000002000058e7a3 : inc dword ptr [rbx - 0x2be40ac3] ; call qword ptr [rdi]
0x00000200005d6b78 : inc dword ptr [rbx - 0x2fb857f3] ; jmp qword ptr [rax]
0x00000200005d6bc2 : inc dword ptr [rbx - 0x2fb8a1f3] ; call qword ptr [rax]
0x0000020000778578 : inc dword ptr [rbx - 0x4a5e7bf3] ; jmp qword ptr [rax]
0x00000200005441bb : inc dword ptr [rbx - 0x74bae01f] ; ret 0xd349
0x000002000041075c : inc dword ptr [rbx - 0x74ffc799] ; ret
0x0000020000661ba1 : inc dword ptr [rbx - 0x78f0fc08] ; ret
0x00000200007449e1 : inc dword ptr [rbx - 0x7af0e708] ; ret
0x000002000055c1f6 : inc dword ptr [rbx - 0x7af0ef08] ; ret
0x00000200004b40d0 : inc dword ptr [rbx - 0x7af0f705] ; xchg eax, ecx ; ret 0x10
0x0000020000446063 : inc dword ptr [rbx - 0x7af0fb01] ; lodsd eax, dword ptr [rsi] ; ret 0x15
0x0000020000232b26 : inc dword ptr [rbx - 0x7af0fe08] ; jmp rsp
0x0000020000687b27 : inc dword ptr [rbx - 0x7bf0fd01] ; ret
0x00000200004ce0eb : inc dword ptr [rbx - 0x7bf0fe16] ; ret
0x0000020000598466 : inc dword ptr [rbx - 0x7cb70740] ; ret
0x00000200005ae9c4 : inc dword ptr [rbx - 0x7cf0f008] ; ret
0x000002000059a446 : inc dword ptr [rbx - 0x7cff139b] ; ret
0x000002000058a54d : inc dword ptr [rbx - 0x7df0dd07] ; ret
0x00000200004ad058 : inc dword ptr [rbx] ; add byte ptr [rax], al ; lea rax, qword ptr [rax + rdx*4] ; ret
0x000002000013a54c : inc dword ptr [rbx] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005e2f0 : inc dword ptr [rbx] ; dec dword ptr [rcx - 1] ; ret
0x000002000010aaaf : inc dword ptr [rbx] ; fucomi st(3) ; ret
0x000002000058449d : inc dword ptr [rbx] ; or byte ptr [rbx + 0x44d80bd9], 0x8b ; ret
0x00000200001997ca : inc dword ptr [rbx] ; ret
0x00000200001c8a1c : inc dword ptr [rbx] ; ret 0x9489
0x000002000010549c : inc dword ptr [rcx + 0x10] ; mov rcx, qword ptr [rcx] ; inc edx ; jmp 0x20000105495
0x0000020000044d6d : inc dword ptr [rcx + 0x10] ; ret
0x00000200000db919 : inc dword ptr [rcx + 0x23] ; ret
0x00000200001f4f8f : inc dword ptr [rcx + 0x244] ; ret
0x00000200001f4f82 : inc dword ptr [rcx + 0x248] ; ret
0x000002000009a2c9 : inc dword ptr [rcx + 0x24] ; ret
0x00000200001f4f7b : inc dword ptr [rcx + 0x24c] ; ret
0x0000020000053805 : inc dword ptr [rcx + 0x28] ; ret
0x00000200001142d0 : inc dword ptr [rcx + 0x2b] ; ret 0x344
0x0000020000686c28 : inc dword ptr [rcx + 0x38] ; or byte ptr [rbx + rdx - 1], dh ; ret 0x8349
0x000002000058d854 : inc dword ptr [rcx + 0x3a] ; ret 0x850f
0x0000020000106bbe : inc dword ptr [rcx + 0x3b] ; ret
0x0000020000648f5e : inc dword ptr [rcx + 0x3b] ; ret 0x77c
0x0000020000176864 : inc dword ptr [rcx + 0x3c] ; ret
0x00000200006002bc : inc dword ptr [rcx + 0x58] ; ret
0x000002000041e5a9 : inc dword ptr [rcx + 0x758] ; ret
0x00000200004c80b5 : inc dword ptr [rcx + 0x80] ; ret
0x000002000057c6cc : inc dword ptr [rcx + 0x9afb] ; ror byte ptr [rdi], 0x84 ; ret 0xf623
0x000002000077cb7f : inc dword ptr [rcx + 0xb] ; ret
0x0000020000400f9f : inc dword ptr [rcx + 0xc] ; ret
0x000002000018e57a : inc dword ptr [rcx + 0xf] ; mov dh, 0x85 ; ret
0x0000020000188ff1 : inc dword ptr [rcx + 0xf] ; mov edx, 0xf1a3867 ; xchg eax, edx ; ret 0xf640
0x000002000074625b : inc dword ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b45
0x0000020000189a4e : inc dword ptr [rcx + 3] ; ret
0x00000200001e4bcd : inc dword ptr [rcx + 4] ; lock inc dword ptr [rcx + 8] ; ret
0x00000200001e4bc5 : inc dword ptr [rcx + 4] ; ret
0x00000200001e4bd1 : inc dword ptr [rcx + 8] ; ret
0x000002000005381b : inc dword ptr [rcx + r8*4 + 0x218] ; ret
0x0000020000157031 : inc dword ptr [rcx + rax + 0x59] ; ret
0x000002000005381c : inc dword ptr [rcx + rax*4 + 0x218] ; ret
0x00000200001f3dfb : inc dword ptr [rcx + rcx*4 + 0x1f] ; mov eax, r10d ; jmp 0x200001f3e29
0x000002000075f3b1 : inc dword ptr [rcx + rcx*4 + 0x35] ; ret
0x00000200005a9bfd : inc dword ptr [rcx + rcx*4 + 0x3f] ; jmp 0x20000465e3c
0x00000200005e8b7d : inc dword ptr [rcx + rcx*4 + 0x7c] ; ret
0x00000200000af16a : inc dword ptr [rcx + rcx*8 - 0x49f0f08b] ; ret 0xe083
0x000002000048ad90 : inc dword ptr [rcx - 0x48] ; add al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x20000067015
0x000002000042ed5a : inc dword ptr [rcx - 0x48] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000485a51 : inc dword ptr [rcx - 0x48] ; outsb dx, byte ptr [rsi] ; call 0x20000231ce9
0x0000020000573f19 : inc dword ptr [rcx - 0x48] ; ret
0x000002000067f64e : inc dword ptr [rcx - 0x48] ; ret 0xe
0x00000200000f6a75 : inc dword ptr [rcx - 0x68] ; ret
0x0000020000544c9d : inc dword ptr [rcx - 0x73] ; push r14 ; ret 0x413f
0x000002000006d9bd : inc dword ptr [rcx - 0x75] ; add al, 0x2b ; ret 0xd08b
0x0000020000578201 : inc dword ptr [rcx - 0x75] ; add al, byte ptr [rcx + 0xb] ; ret
0x00000200000b5720 : inc dword ptr [rcx - 0x75] ; fmul dword ptr [rax - 0x7f] ; ret
0x000002000049ba82 : inc dword ptr [rcx - 0x75] ; in al, dx ; call 0x200000bd247
0x0000020000406c9b : inc dword ptr [rcx - 0x75] ; or byte ptr [r11], r14b ; call rbx
0x000002000002b515 : inc dword ptr [rcx - 0x75] ; ret
0x0000020000194412 : inc dword ptr [rcx - 0x75] ; ret 0x2b4d
0x00000200005d53a9 : inc dword ptr [rcx - 0x75] ; ret 0x3b45
0x00000200000e0bef : inc dword ptr [rcx - 0x75] ; ret 0x8386
0x00000200003f5975 : inc dword ptr [rcx - 0x75] ; ret 0x8545
0x000002000017d97e : inc dword ptr [rcx - 0x75] ; ret 0x8548
0x00000200000d45e1 : inc dword ptr [rcx - 0x75] ; ret 0x862b
0x000002000009afc5 : inc dword ptr [rcx - 0x75] ; ret 0x8686
0x0000020000003d85 : inc dword ptr [rcx - 0x75] ; ret 0x8786
0x000002000002c1b6 : inc dword ptr [rcx - 0x75] ; ret 0x8941
0x00000200005ba70e : inc dword ptr [rcx - 0x75] ; ret 0x8948
0x000002000020048e : inc dword ptr [rcx - 0x75] ; ret 0x8b4d
0x0000020000737793 : inc dword ptr [rcx - 0x75] ; ret 0x8d45
0x00000200005ba76e : inc dword ptr [rcx - 0x75] ; ret 0x8d4c
0x00000200006602ce : inc dword ptr [rcx - 0x75] ; ret 0xc148
0x00000200004aca6f : inc dword ptr [rcx - 0x75] ; ret 0xfce9
0x00000200005d4e00 : inc dword ptr [rcx - 0x75] ; ret 0xff0
0x000002000052b21a : inc dword ptr [rcx - 0x75] ; ror byte ptr [rbp - 0x75], 0x1c ; ret
0x00000200004fc3a3 : inc dword ptr [rcx - 0x75] ; ror dword ptr [rax - 0x75], 0x14 ; ret 0x2b48
0x0000020000008065 : inc dword ptr [rcx - 0x75] ; ror dword ptr [rdi], 1 ; xchg eax, ebp ; ret 0xfa2b
0x00000200001639b3 : inc dword ptr [rcx - 0x75] ; sub byte ptr [rax + 0x6b], cl ; ret
0x000002000043099d : inc dword ptr [rcx - 0x76] ; imul al ; ret 0xc1b6
0x0000020000121c38 : inc dword ptr [rcx - 0x76] ; or cl, byte ptr [rcx - 1] ; ret 0x8b41
0x00000200004e4e17 : inc dword ptr [rcx - 0x76] ; ret 0x2fe9
0x00000200003f91e5 : inc dword ptr [rcx - 0x7b] ; ret 0x850f
0x000002000003bee8 : inc dword ptr [rcx - 0x7c] ; ret
0x00000200001d6982 : inc dword ptr [rcx - 0x7c] ; ret 0x1775
0x00000200000c847a : inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x000002000018ef90 : inc dword ptr [rcx - 0x7d] ; cli ; jg 0x2000018f013 ; or al, byte ptr [rcx - 1] ; ret 0x834a
0x000002000045a9ab : inc dword ptr [rcx - 0x7d] ; inc byte ptr [rdi + rcx] ; test dword ptr [rbx], edx ; ret
0x00000200005ac9ae : inc dword ptr [rcx - 0x7d] ; jmp 0x1ffc3ded8bf
0x000002000059b9ae : inc dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x00000200001f3d07 : inc dword ptr [rcx - 0x7d] ; ret
0x00000200005be5ca : inc dword ptr [rcx - 0x7d] ; ret 0xc7f0
0x0000020000003d6a : inc dword ptr [rcx - 0x7d] ; ret 0xfc0
0x0000020000219f16 : inc dword ptr [rcx - 0x7f] ; call qword ptr [rcx]
0x00000200001ceeb6 : inc dword ptr [rcx - 0x80] ; call qword ptr [rcx]
0x00000200004041ef : inc dword ptr [rcx - 0xa] ; and al, 2 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x0000020000063a0e : inc dword ptr [rcx - 0xa] ; ret
0x0000020000173f80 : inc dword ptr [rcx - 0xa] ; ret 0x7402
0x00000200000e9898 : inc dword ptr [rcx - 0xa] ; ret 0x7502
0x00000200000e984e : inc dword ptr [rcx - 0xa] ; ret 0xf01
0x00000200000fb50b : inc dword ptr [rcx - 0xa] ; ret 0xf04
0x00000200000a7ae0 : inc dword ptr [rcx - 0xa] ; ret 0xf08
0x000002000009d630 : inc dword ptr [rcx - 0xa] ; ret 0xf10
0x000002000042beb4 : inc dword ptr [rcx - 0xa] ; ret 0xffe
0x0000020000494353 : inc dword ptr [rcx - 1] ; ret
0x00000200000a2beb : inc dword ptr [rcx - 1] ; ret 0x8149
0x0000020000176a6d : inc dword ptr [rcx - 1] ; ret 0x8348
0x000002000057b773 : inc dword ptr [rcx - 1] ; ret 0x8349
0x000002000007c37c : inc dword ptr [rcx - 9] ; ret 0
0x000002000058f35b : inc dword ptr [rcx - 9] ; rol byte ptr [rcx - 0xa], cl ; ret 0xe902
0x000002000058f34f : inc dword ptr [rcx - 9] ; rol byte ptr [rcx - 0xa], cl ; ret 0xe908
0x000002000005375f : inc dword ptr [rcx] ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x000002000076e88b : inc dword ptr [rcx] ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200001edd64 : inc dword ptr [rcx] ; add byte ptr [rax], al ; add al, ch ; ret 0xe945
0x0000020000773dc8 : inc dword ptr [rcx] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005208d4 : inc dword ptr [rcx] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000052b6fb : inc dword ptr [rcx] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051acc6 : inc dword ptr [rcx] ; add rsp, 0x28 ; ret
0x00000200007580aa : inc dword ptr [rcx] ; add rsp, 0x38 ; ret
0x0000020000749dc3 : inc dword ptr [rcx] ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000062c38b : inc dword ptr [rcx] ; mov dword ptr [rcx + 0x10], edx ; add qword ptr [r10], 0x18 ; ret
0x000002000062c44a : inc dword ptr [rcx] ; mov dword ptr [rcx + 0x18], edx ; add qword ptr [r10], 0x28 ; ret
0x0000020000529dee : inc dword ptr [rcx] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001768a0 : inc dword ptr [rcx] ; ret
0x000002000040b1b9 : inc dword ptr [rcx] ; xor eax, eax ; ret
0x000002000016fe34 : inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200005c22de : inc dword ptr [rdi + rcx + 0x20] ; ret 0x1b8
0x000002000074cdd5 : inc dword ptr [rdi + rcx + 0x20] ; ret 0x2b8
0x00000200000d65de : inc dword ptr [rdi + rcx + 0x20] ; ret 0xf44
0x0000020000084615 : inc dword ptr [rdi + rcx + 0x22] ; ret
0x000002000063545c : inc dword ptr [rdi + rcx + 0x44] ; ret 0x8944
0x000002000020aa28 : inc dword ptr [rdi + rcx - 0x44] ; ret
0x00000200005ebe0d : inc dword ptr [rdi + rcx - 0x49] ; ret 0xb70f
0x00000200000c6575 : inc dword ptr [rdi + rcx - 0x4a] ; ret
0x00000200004eccbb : inc dword ptr [rdi - 0x211901fb] ; dec dword ptr [rax - 0x39] ; ret 0x5d00
0x00000200005ba9ba : inc dword ptr [rdi] ; add byte ptr [rdi], cl ; shr al, 1 ; ret
0x0000020000188e5d : inc dword ptr [rdi] ; in eax, dx ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000778323 : inc dword ptr [rdi] ; mov ebx, 0xc00000bb ; jmp 0x200007545e0
0x000002000048829d : inc dword ptr [rdx + 0x6c] ; ret
0x00000200006ca966 : inc dword ptr [rdx + 0x8060] ; ret
0x0000020000124ad8 : inc dword ptr [rdx + rax*8] ; ret
0x00000200006a8050 : inc dword ptr [rdx + rcx*4 + 0x3d] ; xor cl, dl ; ret 0xe8ff
0x00000200005f8ca9 : inc dword ptr [rdx] ; jb 0x200005f8cbc ; mov eax, 0xc0000189 ; ret
0x000002000066e56d : inc dword ptr [rdx] ; je 0x2000066e580 ; mov eax, 0xc0000002 ; ret
0x000002000066e58d : inc dword ptr [rdx] ; je 0x2000066e5a0 ; mov eax, 0xc0000002 ; ret
0x000002000066f595 : inc dword ptr [rdx] ; je 0x2000066f5a8 ; mov eax, 0xc0000002 ; ret
0x000002000066f5b1 : inc dword ptr [rdx] ; je 0x2000066f5c4 ; mov eax, 0xc0000002 ; ret
0x00000200001bfc28 : inc dword ptr [rip + 0x125f52] ; ret
0x00000200006c27c8 : inc dword ptr [rip + 0x1bb66] ; xor eax, eax ; ret
0x00000200002070e7 : inc dword ptr [rip + 0xd1183] ; mov eax, r11d ; ret
0x00000200001a97c3 : inc dword ptr [rsi - 0x75] ; ret 0x4504
0x0000020000768ae7 : inc dword ptr [rsi] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000076b075 : inc dword ptr [rsi] ; mov dword ptr [rip - 0x4732a1], ecx ; ret
0x000002000076d634 : inc dword ptr [rsi] ; ret
0x0000020000687bf9 : inc dword ptr [rsp + rsi*2] ; add eax, dword ptr [rcx - 0x75] ; ret
0x00000200001a92f4 : inc dword ptr gs:[0x2e44] ; ret
0x0000020000403bec : inc dword ptr gs:[0x2e48] ; ret
0x0000020000417d7c : inc dword ptr gs:[0x2e4c] ; ret
0x000002000011d8dc : inc dword ptr gs:[0x5e04] ; ret
0x00000200001a9300 : inc dword ptr gs:[0x5e40] ; ret
0x00000200000d5dcf : inc eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000039928e : inc eax ; add rsp, 0x208 ; ret
0x00000200001d785b : inc eax ; add rsp, 0x28 ; ret
0x000002000044ee60 : inc eax ; add rsp, 0x38 ; ret
0x00000200001337f2 : inc eax ; cmp r8, r10 ; jb 0x200001337e9 ; ret
0x0000020000760ec9 : inc eax ; cmp r8d, edx ; jb 0x20000760ec7 ; ret
0x0000020000211d3b : inc eax ; cmp r8d, r9d ; jl 0x20000211d35 ; xor eax, eax ; ret
0x000002000067e37e : inc eax ; cmp rax, rdx ; jb 0x2000067e35a ; xor eax, eax ; ret
0x000002000008fb26 : inc eax ; jmp 0x2000008faef
0x00000200006da2fb : inc eax ; mov dword ptr [rcx + 0x34], eax ; add rsp, 0x28 ; ret
0x00000200001bc7fe : inc eax ; mov dword ptr [rcx + 8], eax ; mov qword ptr [rcx], r8 ; ret
0x000002000008925d : inc eax ; mov dword ptr [rip + 0x250f5f], eax ; call r8
0x0000020000088b60 : inc eax ; mov dword ptr [rip + 0x25165c], eax ; call r8
0x000002000002da90 : inc eax ; mov qword ptr [rcx], rax ; ret
0x0000020000010dc0 : inc eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000003643f : inc eax ; mov word ptr [rcx + 2], ax ; ret
0x0000020000120148 : inc eax ; mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x0000020000521694 : inc eax ; movsxd r8, eax ; call 0x2000014f188
0x000002000010de56 : inc eax ; ret
0x00000200005f4a0d : inc ebp ; ret
0x00000200003e0b6f : inc ebx ; add rax, 0x20 ; ret
0x0000020000167ecc : inc ebx ; cmp ebx, esi ; jb 0x20000167e99 ; jmp 0x20000044130
0x000002000013b045 : inc ebx ; inc dword ptr [r8] ; ret
0x00000200001ac2c6 : inc ebx ; jbe 0x200001ac2d9 ; mov eax, 1 ; ret
0x000002000006c26e : inc ebx ; jmp 0x2000006c3d9
0x00000200001350bc : inc ebx ; lea rax, qword ptr [rcx + rax - 2] ; ret
0x0000020000044d62 : inc ebx ; lea rax, qword ptr [rip + 0x2b796d] ; ret
0x000002000076a9a6 : inc ebx ; lea rax, qword ptr [rip - 0x620fcf] ; ret
0x000002000076a9ae : inc ebx ; lea rax, qword ptr [rip - 0x637817] ; ret
0x000002000076a981 : inc ebx ; lea rax, qword ptr [rip - 0x6fef9a] ; ret
0x000002000076a99e : inc ebx ; lea rax, qword ptr [rip - 0x6ff967] ; ret
0x000002000076a996 : inc ebx ; lea rax, qword ptr [rip - 0x7006c3] ; ret
0x000002000014f796 : inc ebx ; lock or dword ptr [rip + 0x22fadd], ecx ; ret
0x00000200006b6f16 : inc ebx ; mov dword ptr [rsp + 0x24], r11d ; jmp 0x200006b6eea
0x00000200001ee9a5 : inc ebx ; mov dword ptr [rsp + 0x30], ebx ; jmp 0x200001ee977
0x00000200007856e0 : inc ebx ; mov eax, 0x2000 ; ret
0x00000200005418d9 : inc ebx ; mov eax, 0xc000000d ; ret
0x00000200000235a1 : inc ebx ; mov eax, 1 ; ret
0x00000200001ac0cc : inc ebx ; mov eax, dword ptr [rcx + 4] ; ret
0x00000200001e7f60 : inc ebx ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000686c3f : inc ebx ; mov eax, edx ; ret
0x000002000014f5c6 : inc ebx ; or qword ptr [rcx + 8], 4 ; ret
0x000002000061917a : inc ebx ; xor al, al ; ret
0x000002000002bd35 : inc ebx ; xor eax, eax ; ret
0x000002000022bd02 : inc ecx ; call 0x1ffc345fe22
0x0000020000133b8c : inc ecx ; cmp byte ptr [rcx], 0 ; jne 0x20000133b90 ; ret
0x00000200002069ff : inc ecx ; cmp ecx, edx ; jb 0x200002069f3 ; xor eax, eax ; ret
0x00000200006bb1ee : inc ecx ; cmp r9d, r10d ; jb 0x200006bb1ed ; xor eax, eax ; ret
0x0000020000135424 : inc ecx ; cmp rax, rdx ; jb 0x20000135422 ; ret
0x00000200007681fc : inc ecx ; cmp rcx, 0x40 ; jb 0x200007681ed ; ret
0x0000020000149926 : inc ecx ; dec r8 ; jne 0x20000149927 ; ret
0x000002000004002b : inc ecx ; mov eax, ecx ; ret
0x0000020000133b44 : inc ecx ; test r8, r8 ; jne 0x20000133b40 ; ret
0x00000200005ad86a : inc edi ; add dl, byte ptr [rip - 0x17000000] ; ret
0x00000200001f9900 : inc edi ; inc rdx ; jmp 0x200001f9938
0x000002000001746e : inc edi ; jmp 0x200000172b8
0x000002000004a919 : inc edi ; jmp 0x2000004a8e3
0x00000200007505f1 : inc edi ; ret
0x00000200003a33ea : inc edx ; add ecx, edx ; mov dword ptr [r8], ecx ; add eax, ecx ; ret
0x00000200006ab756 : inc edx ; add r8d, -1 ; jne 0x200006ab758 ; ret
0x000002000001e8db : inc edx ; cmp edx, r10d ; jb 0x2000001e8ce ; xor eax, eax ; ret
0x000002000003857e : inc edx ; cmp edx, r8d ; jb 0x2000003857c ; ret
0x0000020000438f3f : inc edx ; cmp edx, r8d ; jbe 0x20000438f3f ; ret
0x000002000001a5ed : inc edx ; jmp 0x2000001a5de
0x00000200001054a2 : inc edx ; jmp 0x2000010548f
0x000002000011f188 : inc edx ; jmp 0x2000011f168
0x00000200001387f6 : inc edx ; jmp 0x2000013880e
0x0000020000166e13 : inc edx ; jmp 0x20000166db4
0x000002000017c5d8 : inc edx ; jmp 0x2000017c57f
0x00000200001a58ad : inc edx ; jmp 0x200001a58b1
0x00000200001f9903 : inc edx ; jmp 0x200001f9935
0x00000200003b727a : inc edx ; jmp 0x200003b7254
0x00000200003d49d6 : inc edx ; jmp 0x200003d49bd
0x00000200003f89e2 : inc edx ; jmp 0x200003f89c2
0x0000020000409171 : inc edx ; jmp 0x20000409143
0x000002000042f5e3 : inc edx ; jmp 0x2000042f5ba
0x0000020000431cac : inc edx ; jmp 0x20000431c9d
0x0000020000467d89 : inc edx ; jmp 0x20000467d72
0x000002000047a0b8 : inc edx ; jmp 0x2000047a09f
0x000002000047ce49 : inc edx ; jmp 0x2000047ce1c
0x0000020000482a50 : inc edx ; jmp 0x20000482a0b
0x00000200004cb4f2 : inc edx ; jmp 0x200004cb4b9
0x00000200005264e8 : inc edx ; jmp 0x200005264cc
0x000002000053884d : inc edx ; jmp 0x20000538838
0x000002000059e379 : inc edx ; jmp 0x2000059e35c
0x000002000059e53f : inc edx ; jmp 0x2000059e517
0x00000200005f3780 : inc edx ; jmp 0x200005f379a
0x000002000062a9fc : inc edx ; jmp 0x2000062aa31
0x000002000062aceb : inc edx ; jmp 0x2000062ad03
0x000002000063d77c : inc edx ; jmp 0x2000063d75e
0x000002000065cc4a : inc edx ; jmp 0x2000065cc3e
0x0000020000661bf8 : inc edx ; jmp 0x20000661bea
0x0000020000671244 : inc edx ; jmp 0x20000671215
0x000002000002dafb : inc edx ; lea rax, qword ptr [rdx + r9] ; ret
0x00000200004eaff6 : inc edx ; sub ecx, edx ; mov eax, ecx ; ret
0x000002000018599c : inc esi ; add eax, 0x160250 ; add ecx, ebp ; ret
0x00000200004906fc : inc esi ; and al, 0x55 ; add ecx, ebp ; ret
0x000002000000c377 : inc esi ; jmp 0x2000000c2f4
0x0000020000688307 : inc esp ; movzx ecx, word ptr [rbx] ; call 0x2000013455f
0x00000200005ebe0c : inc qword ptr [r15 + rcx - 0x49] ; ret 0xb70f
0x00000200001092f4 : inc qword ptr [r9 - 0xa] ; ret
0x00000200000fb50a : inc qword ptr [r9 - 0xa] ; ret 0xf04
0x000002000016c7ce : inc qword ptr [rcx - 0xa] ; ret
0x0000020000124ad7 : inc qword ptr [rdx + rax*8] ; ret
0x00000200001387f5 : inc r10 ; jmp 0x2000013880f
0x00000200001387f4 : inc r10 ; jmp 0x20000138810
0x000002000011f187 : inc r10d ; jmp 0x2000011f169
0x0000020000409170 : inc r10d ; jmp 0x20000409144
0x0000020000467d88 : inc r10d ; jmp 0x20000467d73
0x00000200006b6f15 : inc r11d ; mov dword ptr [rsp + 0x24], r11d ; jmp 0x200006b6eeb
0x0000020000688306 : inc r12d ; movzx ecx, word ptr [rbx] ; call 0x20000134560
0x000002000001746d : inc r15d ; jmp 0x200000172b9
0x00000200001337f1 : inc r8 ; cmp r8, r10 ; jb 0x200001337ea ; ret
0x0000020000760ec8 : inc r8d ; cmp r8d, edx ; jb 0x20000760ec8 ; ret
0x000002000044ee5f : inc rax ; add rsp, 0x38 ; ret
0x000002000002da8f : inc rax ; mov qword ptr [rcx], rax ; ret
0x0000020000133b8b : inc rcx ; cmp byte ptr [rcx], 0 ; jne 0x20000133b91 ; ret
0x0000020000135423 : inc rcx ; cmp rax, rdx ; jb 0x20000135423 ; ret
0x00000200007681fb : inc rcx ; cmp rcx, 0x40 ; jb 0x200007681ee ; ret
0x0000020000149925 : inc rcx ; dec r8 ; jne 0x20000149928 ; ret
0x0000020000133b43 : inc rcx ; test r8, r8 ; jne 0x20000133b41 ; ret
0x00000200001f98ff : inc rdi ; inc rdx ; jmp 0x200001f9939
0x000002000004a918 : inc rdi ; jmp 0x2000004a8e4
0x00000200006ab755 : inc rdx ; add r8d, -1 ; jne 0x200006ab759 ; ret
0x0000020000166e12 : inc rdx ; jmp 0x20000166db5
0x000002000017c5d7 : inc rdx ; jmp 0x2000017c580
0x00000200001f9902 : inc rdx ; jmp 0x200001f9936
0x00000200003b7279 : inc rdx ; jmp 0x200003b7255
0x000002000042f5e2 : inc rdx ; jmp 0x2000042f5bb
0x0000020000431cab : inc rdx ; jmp 0x20000431c9e
0x000002000047ce48 : inc rdx ; jmp 0x2000047ce1d
0x00000200005264e7 : inc rdx ; jmp 0x200005264cd
0x000002000053884c : inc rdx ; jmp 0x20000538839
0x000002000062a9fb : inc rdx ; jmp 0x2000062aa32
0x000002000062acea : inc rdx ; jmp 0x2000062ad04
0x000002000002dafa : inc rdx ; lea rax, qword ptr [rdx + r9] ; ret
0x00000200000401f2 : insb byte ptr [rdi], dx ; adc al, byte ptr [rax] ; ret
0x000002000012ccb9 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200003a2ae3 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003a29e6 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200005b2d00 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add bh, dh ; ret 0xfffe
0x0000020000735057 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x840f
0x0000020000142f35 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add cl, ch ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x0000020000040605 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200003f18c8 : insb byte ptr [rdi], dx ; and al, 0x10 ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000032eb : insb byte ptr [rdi], dx ; and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x000002000051b0ea : insb byte ptr [rdi], dx ; and al, 0x20 ; call 0x20000140406
0x0000020000513145 : insb byte ptr [rdi], dx ; and al, 0x20 ; call 0x20000140486
0x000002000051b055 : insb byte ptr [rdi], dx ; and al, 0x20 ; call 0x200001407e6
0x00000200006c07e6 : insb byte ptr [rdi], dx ; and al, 0x20 ; call rax
0x00000200006907e6 : insb byte ptr [rdi], dx ; and al, 0x20 ; call rdi
0x00000200004afe2d : insb byte ptr [rdi], dx ; and al, 0x20 ; call rsi
0x000002000049ad63 : insb byte ptr [rdi], dx ; and al, 0x20 ; mov dl, 0xfe ; call 0x200000bcbe8
0x00000200005b41a9 : insb byte ptr [rdi], dx ; and al, 0x20 ; mov r8d, ebx ; mov cl, 0xc ; call r10
0x000002000040da8a : insb byte ptr [rdi], dx ; and al, 0x20 ; mov rcx, rsi ; call rdi
0x000002000061a86e : insb byte ptr [rdi], dx ; and al, 0x20 ; mov rsi, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x000002000044055b : insb byte ptr [rdi], dx ; and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000057e0be : insb byte ptr [rdi], dx ; and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r15
0x000002000000aaea : insb byte ptr [rdi], dx ; and al, 0x28 ; pop rdi ; ret
0x000002000049d4b5 : insb byte ptr [rdi], dx ; and al, 0x30 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000061bad8 : insb byte ptr [rdi], dx ; and al, 0x38 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000015069 : insb byte ptr [rdi], dx ; and al, 0x38 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bab88 : insb byte ptr [rdi], dx ; and al, 0x38 ; add rsp, 0x20 ; pop rsi ; ret
0x000002000005aaa7 : insb byte ptr [rdi], dx ; and al, 0x40 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f2a83 : insb byte ptr [rdi], dx ; and al, 0x40 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000b170e : insb byte ptr [rdi], dx ; and al, 0x40 ; add rsp, 0x28 ; pop rsi ; pop rbx ; ret
0x000002000007abc0 : insb byte ptr [rdi], dx ; and al, 0x40 ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000068c10c : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000009d897 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x20 ; pop rsi ; ret
0x000002000012a092 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003b2164 : insb byte ptr [rdi], dx ; and al, 0x48 ; add rsp, 0x30 ; pop rsi ; ret
0x00000200004ee7f7 : insb byte ptr [rdi], dx ; and al, 0x50 ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000bc8b3 : insb byte ptr [rdi], dx ; and al, 0x50 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c3558 : insb byte ptr [rdi], dx ; and al, 0x58 ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000ee663 : insb byte ptr [rdi], dx ; and al, 0x68 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200003e75dc : insb byte ptr [rdi], dx ; and al, 0x68 ; add rsp, 0x50 ; pop rsi ; ret
0x000002000051a64f : insb byte ptr [rdi], dx ; and al, 0x70 ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001b4247 : insb byte ptr [rdi], dx ; and al, 0x70 ; add rsp, 0x50 ; pop rsi ; ret
0x0000020000752b60 : insb byte ptr [rdi], dx ; fdiv st(7), st(0) ; add rsp, 0x48 ; ret
0x0000020000452afe : insb byte ptr [rdi], dx ; idiv edi ; test eax, eax ; je 0x20000452af5 ; jmp 0x20000452ad2
0x0000020000036237 : insb byte ptr [rdi], dx ; je 0x20000036226 ; ret
0x0000020000036236 : insb byte ptr [rdi], dx ; je 0x20000036227 ; ret
0x0000020000036235 : insb byte ptr [rdi], dx ; je 0x20000036228 ; ret
0x0000020000571aac : insb byte ptr [rdi], dx ; loope 0x20000571a7a ; dec dword ptr [rax - 0x75] ; ret
0x000002000002268c : insb byte ptr [rdi], dx ; mov ah, 0x13 ; add byte ptr [rax - 0x3ffffddb], bh ; ret
0x000002000058c810 : insb byte ptr [rdi], dx ; mov ebx, 0xe990ffb5 ; ret
0x00000200000ebbc7 : insb byte ptr [rdi], dx ; mov r8, rbx ; mov rcx, rsi ; call r14
0x00000200001af02e : insb byte ptr [rdi], dx ; mov rcx, qword ptr [rsp + 0x68] ; call rax
0x00000200006d9430 : insb byte ptr [rdi], dx ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x85ff
0x00000200006707ec : insb byte ptr [rdi], dx ; or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x0000020000040778 : insb byte ptr [rdi], dx ; pop rax ; add byte ptr [rax], al ; add bl, bh ; ret
0x0000020000217074 : insb byte ptr [rdi], dx ; ret
0x0000020000216ef4 : insb byte ptr [rdi], dx ; ret 0x4166
0x00000200001a4122 : insb byte ptr [rdi], dx ; ret 0x4878
0x000002000050c560 : insb byte ptr [rdi], dx ; ret 0x48ff
0x00000200006a95d4 : insb byte ptr [rdi], dx ; ret 0x66ff
0x0000020000495aff : insb byte ptr [rdi], dx ; ret 0x89ff
0x00000200004c4e28 : insb byte ptr [rdi], dx ; ret 0x8bff
0x00000200004c31b5 : insb byte ptr [rdi], dx ; ret 0xb9ff
0x00000200002177a5 : insb byte ptr [rdi], dx ; ret 0xf66
0x00000200006dbe6f : insb byte ptr [rdi], dx ; ret 0xff
0x00000200006b252c : insb byte ptr [rdi], dx ; ret 0xffc2
0x000002000056cba0 : insb byte ptr [rdi], dx ; ret 0xffd6
0x0000020000167f31 : insb byte ptr [rdi], dx ; ret 0xffed
0x00000200006b4b70 : insb byte ptr [rdi], dx ; sal dword ptr [rdi + 0x58948ff], 1 ; lea edi, dword ptr [rax] ; ret 0x41ff
0x00000200004543fa : insb byte ptr [rdi], dx ; sar bh, 0x8b ; ret
0x0000020000107ed2 : insb byte ptr [rdi], dx ; stc ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000630610 : insb byte ptr [rdi], dx ; std ; mov al, 0xff ; add rsp, 0x48 ; ret
0x0000020000540670 : insb byte ptr [rdi], dx ; std ; mov edi, 0xc48348ff ; pop rax ; ret
0x00000200001277a8 : insb byte ptr [rdi], dx ; xor byte ptr [rip - 0x3b1500], bl ; ret 0x8348
0x00000200003e35c6 : insb byte ptr [rdi], dx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000594140 : insd dword ptr [rdi], dx ; adc al, ch ; cdq ; ret 0xffba
0x00000200003a2af5 : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003a29f8 : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200006b72e3 : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; mov qword ptr [rax], r9 ; mov al, 1 ; ret
0x00000200006b732f : insd dword ptr [rdi], dx ; add al, byte ptr [rax] ; mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x00000200001e9fe4 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x0000020000140f55 : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; add cl, ch ; and cl, bh ; add byte ptr [rax], al ; ret
0x000002000013ca38 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax], bh ; pop rbp ; ret
0x0000020000736f3b : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x840f
0x0000020000042507 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000765853 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; mov rcx, r15 ; call 0x200000c1b38
0x00000200003cfc84 : insd dword ptr [rdi], dx ; add eax, 0x8b410000 ; ret 0x3b4d
0x000002000049217a : insd dword ptr [rdi], dx ; call 0x200000c1e64
0x000002000010afc7 : insd dword ptr [rdi], dx ; clc ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005cf5db : insd dword ptr [rdi], dx ; cmc ; dec dword ptr [rax - 0x75] ; ret
0x000002000039c43e : insd dword ptr [rdi], dx ; fcos ; add rsp, 0x40 ; pop rbx ; ret
0x00000200001983ac : insd dword ptr [rdi], dx ; hlt ; dec dword ptr [rax - 0x75] ; or byte ptr [rax + 0x3b], cl ; ret
0x000002000011bb01 : insd dword ptr [rdi], dx ; hlt ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000410c42 : insd dword ptr [rdi], dx ; in al, dx ; inc dword ptr [rbp + 0x2d850fff] ; call qword ptr [rsi]
0x0000020000180448 : insd dword ptr [rdi], dx ; in eax, dx ; call qword ptr [rax - 0xffb3d17]
0x00000200003b9bd6 : insd dword ptr [rdi], dx ; jbe 0x200003b9bdd ; ret 0x1b9
0x00000200003b9bd5 : insd dword ptr [rdi], dx ; jbe 0x200003b9bde ; ret 0x1b9
0x0000020000044d67 : insd dword ptr [rdi], dx ; jns 0x20000044d9e ; add bl, al ; lock inc dword ptr [rcx + 0x10] ; ret
0x00000200005fc1d3 : insd dword ptr [rdi], dx ; jo 0x200005fc1c3 ; ret
0x00000200005fc1d2 : insd dword ptr [rdi], dx ; jo 0x200005fc1c4 ; ret
0x00000200005fc1d1 : insd dword ptr [rdi], dx ; jo 0x200005fc1c5 ; ret
0x00000200005fc411 : insd dword ptr [rdi], dx ; jo 0x200005fc401 ; clc ; ret
0x00000200005fc410 : insd dword ptr [rdi], dx ; jo 0x200005fc402 ; clc ; ret
0x00000200005fc40f : insd dword ptr [rdi], dx ; jo 0x200005fc403 ; clc ; ret
0x00000200005fc46b : insd dword ptr [rdi], dx ; jo 0x200005fc45b ; sahf ; ret
0x00000200005fc46a : insd dword ptr [rdi], dx ; jo 0x200005fc45c ; sahf ; ret
0x00000200005fc469 : insd dword ptr [rdi], dx ; jo 0x200005fc45d ; sahf ; ret
0x000002000065b12c : insd dword ptr [rdi], dx ; mov byte ptr [rcx + 0x41], 0x69 ; ret 0xdcd
0x00000200001a4b27 : insd dword ptr [rdi], dx ; mov edi, fs ; call qword ptr [rax - 0x7233d17]
0x000002000046cf1a : insd dword ptr [rdi], dx ; mov esi, 0x74c084ff ; ret
0x0000020000205ac8 : insd dword ptr [rdi], dx ; mov r12d, r9d ; call 0x20000231ce6
0x0000020000492069 : insd dword ptr [rdi], dx ; mov rcx, qword ptr [rsp + 0x48] ; call 0x200000c1e69
0x000002000049300d : insd dword ptr [rdi], dx ; mov rcx, r12 ; call 0x200000c1e67
0x00000200004921aa : insd dword ptr [rdi], dx ; mov rcx, rsi ; call 0x200000c1e67
0x000002000060b09f : insd dword ptr [rdi], dx ; pop rdi ; ret 0xebff
0x00000200005059e9 : insd dword ptr [rdi], dx ; pop rdx ; outsb dx, byte ptr [rsi] ; call 0x20000231ce5
0x00000200005059e8 : insd dword ptr [rdi], dx ; pop rdx ; outsb dx, byte ptr [rsi] ; call 0x20000231ce6
0x00000200003b7024 : insd dword ptr [rdi], dx ; push rax ; push -0x742774b8 ; adc bh, bh ; ret 0xe2c1
0x00000200001ff53d : insd dword ptr [rdi], dx ; push rbx ; je 0x200001ff4c6 ; ret 0x100f
0x0000020000626616 : insd dword ptr [rdi], dx ; push rdx ; ja 0x20000626606 ; ret 0xc0b6
0x0000020000626615 : insd dword ptr [rdi], dx ; push rdx ; ja 0x20000626607 ; ret 0xc0b6
0x0000020000492178 : insd dword ptr [rdi], dx ; push rsi ; insd dword ptr [rdi], dx ; call 0x200000c1e66
0x0000020000492177 : insd dword ptr [rdi], dx ; push rsi ; insd dword ptr [rdi], dx ; call 0x200000c1e67
0x000002000049300b : insd dword ptr [rdi], dx ; push rsi ; insd dword ptr [rdi], dx ; mov rcx, r12 ; call 0x200000c1e69
0x00000200004921a8 : insd dword ptr [rdi], dx ; push rsi ; insd dword ptr [rdi], dx ; mov rcx, rsi ; call 0x200000c1e69
0x0000020000205ac6 : insd dword ptr [rdi], dx ; push rsp ; insd dword ptr [rdi], dx ; mov r12d, r9d ; call 0x20000231ce8
0x000002000009f7f7 : insd dword ptr [rdi], dx ; ret
0x000002000060af91 : insd dword ptr [rdi], dx ; ret 0x48ff
0x00000200004c4d7a : insd dword ptr [rdi], dx ; ret 0x4cff
0x00000200004c3016 : insd dword ptr [rdi], dx ; ret 0x8bff
0x00000200000f283a : insd dword ptr [rdi], dx ; ret 0xa
0x0000020000427dd1 : insd dword ptr [rdi], dx ; ret 0xe9ff
0x0000020000542434 : insd dword ptr [rdi], dx ; sbb eax, dword ptr [rax] ; ret
0x0000020000219f13 : insd dword ptr [rdi], dx ; sbb esi, esp ; inc dword ptr [rcx - 0x7f] ; call qword ptr [rcx]
0x0000020000217805 : insd dword ptr [rdi], dx ; shl dword ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret
0x0000020000170eac : insd dword ptr [rdi], dx ; xor al, 0x89 ; ret
0x00000200003fdf94 : insd dword ptr [rdi], dx ; xor byte ptr [rax - 0x75], cl ; ret
0x0000020000191129 : int 0
0x00000200005a5d93 : int 0x29
0x0000020000077d1f : int 0x48
0x0000020000603887 : int 0x72
0x000002000075e9d9 : int 0x76
0x000002000055cb5f : int 0x79
0x0000020000183fa0 : int 0x80
0x00000200005d883f : int 0x87
0x0000020000520864 : int 0xa
0x00000200006155ea : int 0xaa
0x00000200005e3607 : int 0xb5
0x00000200006c258b : int 0xbc
0x00000200000464ff : int 0xc2
0x0000020000035f1f : int 0xc3
0x0000020000218110 : int 0xc5
0x0000020000471c07 : int 0xc7
0x00000200003c52fe : int 0xcf
0x00000200000b16ba : int 0xd
0x00000200000784e8 : int 0xe8
0x0000020000097b8c : int 0xf
0x00000200001018ab : int 0xfe
0x00000200001af71f : int 0xff
0x00000200003a9e99 : int1 ; adc cl, byte ptr [rdi] ; and ah, cl ; ret
0x000002000018755f : int1 ; adc ecx, esi ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000066773 : int1 ; adc qword ptr [rax], rax ; ret
0x000002000003af12 : int1 ; add al, 0 ; add rsp, 0x38 ; ret
0x0000020000152ee4 : int1 ; add cl, byte ptr [rax - 0xd7eab4] ; ret 0x5589
0x000002000009d8c1 : int1 ; add dword ptr [rax + 0x3b], ecx ; ret 0x850f
0x00000200006c0ae2 : int1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b4720 : int1 ; add rsp, 0x28 ; ret
0x0000020000627d00 : int1 ; call 0x200000b3f33
0x0000020000603bc2 : int1 ; call 0x20000231ce4
0x0000020000603bc1 : int1 ; call 0x20000231ce5
0x00000200005611e2 : int1 ; call qword ptr [rax - 0x1a383d17]
0x00000200001882ec : int1 ; call qword ptr [rax - 0xed23d17]
0x00000200001882c7 : int1 ; call rcx
0x0000020000073ccc : int1 ; cld ; dec dword ptr [rax - 0x77] ; cmp r11b, bpl ; ret 0xc032
0x0000020000177b2f : int1 ; cwde ; add al, 0 ; nop ; jmp 0x20000053dfd
0x00000200002098b0 : int1 ; dec dword ptr [rax + 0x3b] ; ret 0xc74
0x000002000018c4e5 : int1 ; dec dword ptr [rax + 0xf] ; mov edx, 0xe5e908ef ; ret
0x0000020000186e89 : int1 ; dec dword ptr [rax - 0x73] ; add dword ptr [rcx + 0x3b], ecx ; ret 0x860f
0x000002000051cc6a : int1 ; dec dword ptr [rax - 0x75] ; lahf ; call 0x20000140389
0x00000200001329bc : int1 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000187e61 : int1 ; dec dword ptr [rax - 0x75] ; ret 0x2b49
0x000002000018a167 : int1 ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x000002000050274c : int1 ; dec dword ptr [rax - 0x75] ; salc ; call 0x200004ee97f
0x000002000018d14a : int1 ; dec dword ptr [rax - 0x7b] ; ret
0x000002000018c6c4 : int1 ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x00000200000f78a2 : int1 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000018c8cc : int1 ; dec dword ptr [rax - 0x7f] ; ret 0
0x0000020000189251 : int1 ; dec dword ptr [rax - 9] ; ret
0x000002000018a535 : int1 ; dec dword ptr [rbp + 0x3b] ; ret
0x0000020000758887 : int1 ; dec dword ptr [rbp + rcx*4 + 0xd] ; cwde ; insb byte ptr [rdi], dx ; ret 0x66ff
0x000002000018c86f : int1 ; dec dword ptr [rbp - 0x75] ; ret
0x0000020000187569 : int1 ; dec dword ptr [rbp - 0x7b] ; rol byte ptr [rbp + 0xf], cl ; ret
0x0000020000121772 : int1 ; dec dword ptr [rbx + 0x58d48c8] ; ret
0x000002000018d11a : int1 ; dec dword ptr [rcx + 0x23] ; ret 0x17e9
0x000002000018c3af : int1 ; dec dword ptr [rcx + 0x3b] ; ret 0x850f
0x00000200004a3d6a : int1 ; dec dword ptr [rcx - 0x75] ; iretd ; call 0x200004a0067
0x00000200001875dd : int1 ; dec dword ptr [rcx - 0x75] ; ret
0x0000020000187b67 : int1 ; dec dword ptr [rcx - 0x75] ; ret 0xb948
0x000002000067f64b : int1 ; in eax, dx ; inc dword ptr [rcx - 0x48] ; ret 0xe
0x000002000018c41d : int1 ; inc dword ptr [rbp + 0x33] ; shr cl, 0x8c ; ret
0x0000020000187535 : int1 ; inc dword ptr [rbp - 0x75] ; ret
0x000002000018bbc2 : int1 ; inc dword ptr [rcx - 0xa] ; ret 0xf08
0x00000200003e0b6e : int1 ; inc ebx ; add rax, 0x20 ; ret
0x000002000011f185 : int1 ; jb 0x2000011f1d1 ; inc edx ; jmp 0x2000011f16b
0x00000200003df2b9 : int1 ; jmp 0x1ff8385f2e0
0x00000200001e1749 : int1 ; jmp 0x200001e17af
0x00000200006649c3 : int1 ; jmp 0x200006649cf
0x00000200004aa71b : int1 ; jmp rsp
0x000002000049a8cb : int1 ; jp 0x2000049a895 ; push rsi ; ret
0x00000200005283da : int1 ; lea r8d, dword ptr [rdx + 0x50] ; call 0x2000014f4c8
0x00000200004b581b : int1 ; mov al, 1 ; add rsp, 0x38 ; ret
0x0000020000053c9d : int1 ; mov al, 1 ; ret
0x0000020000614018 : int1 ; mov cl, 0xff ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004ec553 : int1 ; mov dword ptr [r8 + 0xc], eax ; ret
0x00000200001ab7d8 : int1 ; mov eax, dword ptr [rax + 4] ; add rsp, 0x28 ; ret
0x00000200005219b5 : int1 ; mov esi, 0xfc085ff ; mov esi, edx ; ret 0xa
0x00000200001491ac : int1 ; mov rax, rdx ; and al, 0xf0 ; pop rbx ; ret
0x0000020000044e4f : int1 ; mov rax, rdx ; ret
0x00000200001f7e19 : int1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000013d0be : int1 ; mov rdx, rdi ; mov rcx, r11 ; call r8
0x00000200005b1e58 : int1 ; movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0xe5a8
0x00000200006d946b : int1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48ff
0x0000020000754fc3 : int1 ; nop ; ret 0xc7ff
0x0000020000153ebc : int1 ; or byte ptr [rax - 0xcfeab4], cl ; ret 0x5589
0x0000020000152518 : int1 ; or dword ptr [rax - 0xcfeab4], ecx ; ret 0x5589
0x000002000021d483 : int1 ; or r8, qword ptr [r8] ; mov rcx, rdi ; call rax
0x000002000017b74e : int1 ; push qword ptr [rbx] ; shr cl, 0x1e ; ret 0xffee
0x00000200004b6b7b : int1 ; push rdx ; ret
0x0000020000188573 : int1 ; push rsi ; ret
0x000002000018a7f4 : int1 ; push rsi ; ret 0x7401
0x00000200001886ca : int1 ; push rsi ; ret 0x741e
0x00000200006b4aab : int1 ; pushfq ; ret 0x48ff
0x000002000001255b : int1 ; ret
0x000002000051125d : int1 ; ret 0x48ff
0x000002000051126b : int1 ; ret 0x85ff
0x000002000047203b : int1 ; ret 0xffbc
0x00000200001c6e8b : int1 ; ret 0xfff6
0x00000200003e1efa : int1 ; sbb byte ptr [rax], al ; mov al, 1 ; ret
0x00000200006b9a3a : int1 ; test rax, rax ; je 0x200006b9abe ; mov r8d, edi ; call rax
0x000002000075a1db : int1 ; xchg eax, esp ; mov edx, 0x1d8948ff ; ret 0xba95
0x000002000062e171 : int1 ; xor al, al ; ret
0x00000200004cc5e4 : int1 ; xor eax, eax ; ret
0x000002000042ac36 : int1 ; xor esi, esi ; call 0x2000004e19e
0x00000200001346de : int1 ; xor rax, rax ; ret
0x00000200001100f1 : invlpg byte ptr [rcx] ; jne 0x200001100ef ; ret
0x00000200000dc714 : invlpg byte ptr [rcx] ; ret
0x0000020000498238 : iretd ; add edx, ebx ; shr edx, 3 ; call 0x200000bab49
0x000002000003d1d5 : iretd ; and dh, byte ptr [rax + rax] ; call rax
0x00000200005990d7 : iretd ; call 0x1ffc3e4d9e1
0x00000200006247b3 : iretd ; call 0x20000010a0f
0x0000020000774e45 : iretd ; call 0x20000011103
0x00000200003e5fb0 : iretd ; call 0x20000013274
0x000002000002a557 : iretd ; call 0x20000016783
0x0000020000119730 : iretd ; call 0x20000016788
0x00000200005b96ff : iretd ; call 0x2000003644f
0x00000200004239a3 : iretd ; call 0x200000459c4
0x000002000016b64f : iretd ; call 0x20000047953
0x0000020000427dce : iretd ; call 0x2000004eb04
0x000002000042440b : iretd ; call 0x20000050274
0x0000020000423b49 : iretd ; call 0x20000051688
0x00000200004c6d49 : iretd ; call 0x20000052f77
0x00000200004238a9 : iretd ; call 0x20000053850
0x0000020000535e77 : iretd ; call 0x200000539ef
0x00000200004341e2 : iretd ; call 0x20000056fc4
0x00000200001a58ab : iretd ; call 0x20000061bb3
0x000002000044622d : iretd ; call 0x20000074660
0x00000200001c7e1a : iretd ; call 0x200000840a3
0x00000200000b9099 : iretd ; call 0x20000085323
0x0000020000475eee : iretd ; call 0x2000009a2d4
0x0000020000475a49 : iretd ; call 0x2000009a484
0x0000020000475fe9 : iretd ; call 0x2000009a5c4
0x0000020000491b52 : iretd ; call 0x2000009a5c7
0x0000020000497a70 : iretd ; call 0x200000ba7b0
0x0000020000498021 : iretd ; call 0x200000ba84c
0x0000020000498d3d : iretd ; call 0x200000bb144
0x0000020000495afc : iretd ; call 0x200000bc7b4
0x000002000049b2e1 : iretd ; call 0x200000bcd14
0x0000020000012b61 : iretd ; call 0x200000bee63
0x00000200003d5876 : iretd ; call 0x200000c1b33
0x0000020000455c17 : iretd ; call 0x200000c1e23
0x0000020000445c13 : iretd ; call 0x200000c1e63
0x00000200005760c8 : iretd ; call 0x200000c23c3
0x000002000049ab8c : iretd ; call 0x200000c23c4
0x0000020000576280 : iretd ; call 0x200000c2543
0x000002000049b6cf : iretd ; call 0x200000c2844
0x00000200004c0d30 : iretd ; call 0x200000e264c
0x00000200004c09fb : iretd ; call 0x200000e2858
0x00000200004c0d76 : iretd ; call 0x200000e28a8
0x00000200004c1907 : iretd ; call 0x200000e5ba8
0x00000200004beeb8 : iretd ; call 0x200000e8154
0x000002000015c0d2 : iretd ; call 0x200000e8383
0x00000200004beed4 : iretd ; call 0x200000e8384
0x00000200004c2be1 : iretd ; call 0x200000e88d0
0x00000200004c3642 : iretd ; call 0x200000e9fd8
0x00000200004c34b9 : iretd ; call 0x200000ea7c4
0x00000200004c3591 : iretd ; call 0x200000ea7f8
0x00000200004c9aa6 : iretd ; call 0x200000ee220
0x00000200004cb9dd : iretd ; call 0x200000ef13c
0x00000200004cd335 : iretd ; call 0x200000ef500
0x00000200004c7de6 : iretd ; call 0x200000efbbc
0x0000020000128813 : iretd ; call 0x20000104af7
0x00000200001cedca : iretd ; call 0x200001188db
0x000002000050719c : iretd ; call 0x200001356a8
0x000002000051b191 : iretd ; call 0x20000140384
0x000002000051b337 : iretd ; call 0x20000140484
0x000002000051cbe7 : iretd ; call 0x20000141504
0x000002000052dc59 : iretd ; call 0x2000014f184
0x0000020000173297 : iretd ; call 0x2000014f4c3
0x000002000057ac70 : iretd ; call 0x200001a6b60
0x000002000058fa03 : iretd ; call 0x200001bd2c0
0x000002000059289d : iretd ; call 0x200001bd4e8
0x00000200005a4c13 : iretd ; call 0x200001cb460
0x00000200005befd6 : iretd ; call 0x200001e1b9c
0x0000020000202c56 : iretd ; call 0x20000202974
0x000002000020c511 : iretd ; call 0x2000020c273
0x00000200005d20f2 : iretd ; call 0x2000021e3a7
0x0000020000494dd4 : iretd ; call 0x20000231013
0x00000200006028f6 : iretd ; call 0x20000231014
0x00000200000c5614 : iretd ; call 0x20000231017
0x000002000060e8c8 : iretd ; call 0x20000231ce4
0x00000200003abec6 : iretd ; call 0x200003ac78f
0x0000020000613c07 : iretd ; call 0x200003dfeab
0x00000200003f0f43 : iretd ; call 0x200003f0fe9
0x00000200003ea2ee : iretd ; call 0x2000046642f
0x0000020000076aef : iretd ; call 0x20000475847
0x00000200005b96ef : iretd ; call 0x20000475d17
0x0000020000400af4 : iretd ; call 0x2000047cd97
0x00000200005de143 : iretd ; call 0x2000048a43b
0x00000200004a3d6e : iretd ; call 0x200004a0063
0x0000020000117b99 : iretd ; call 0x20000503dc3
0x0000020000517ad7 : iretd ; call 0x200005181cc
0x00000200005230ea : iretd ; call 0x20000523134
0x00000200005ed39c : iretd ; call 0x200005ed5c3
0x00000200001bf305 : iretd ; call 0x200006ab603
0x00000200006b4313 : iretd ; call 0x200006be263
0x00000200006b61dd : iretd ; call 0x200006c247f
0x00000200001d2793 : iretd ; call qword ptr [rbx]
0x0000020000526628 : iretd ; call qword ptr [rdi + 0x100]
0x00000200001b57d1 : iretd ; call qword ptr [rip + 0x14d5b8]
0x00000200004152eb : iretd ; call r10
0x00000200006788c1 : iretd ; call r11
0x00000200003fa381 : iretd ; call r12
0x0000020000073898 : iretd ; call r14
0x00000200005127a1 : iretd ; call r15
0x000002000063eff6 : iretd ; call r8
0x00000200000298a4 : iretd ; call rax
0x000002000001dbc7 : iretd ; call rbx
0x00000200004d490e : iretd ; call rdi
0x000002000004299b : iretd ; call rsi
0x000002000042fb8d : iretd ; cmp eax, 0xd08bffca ; call 0x20000053cad
0x00000200003d61a7 : iretd ; dec dword ptr [rax - 0x75] ; and al, 0x50 ; call 0x200000c23c9
0x00000200000b16b9 : iretd ; int 0xd
0x000002000017005e : iretd ; jmp 0x200001110da
0x0000020000020be9 : iretd ; jmp rcx
0x000002000075ed06 : iretd ; lea r8, qword ptr [rsp + 0x40] ; call rax
0x000002000050e5b6 : iretd ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x000002000050e8af : iretd ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x00000200001d2031 : iretd ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r15]
0x00000200004f3208 : iretd ; lea r8d, dword ptr [rdx + 0x28] ; call 0x2000014f4c7
0x000002000057ab15 : iretd ; lea r8d, dword ptr [rdx + 0xb] ; call 0x200001a6b64
0x00000200005ea94e : iretd ; lea r8d, dword ptr [rdx + 2] ; call 0x200001a6b63
0x00000200005ea89a : iretd ; lea r8d, dword ptr [rdx + 3] ; call 0x200001a6b63
0x00000200005c8147 : iretd ; lea r8d, dword ptr [rdx + 3] ; call rsi
0x00000200005c8123 : iretd ; lea r8d, dword ptr [rdx + 5] ; call rsi
0x0000020000446abf : iretd ; lea rdx, qword ptr [rbp - 0x41] ; call 0x20000074c98
0x0000020000421054 : iretd ; lea rdx, qword ptr [rsp + 0x50] ; call 0x20000045315
0x000002000016e80a : iretd ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x000002000051cc58 : iretd ; mov byte ptr [rsp + 0x20], r15b ; call 0x20000140aa9
0x00000200005c9e8b : iretd ; mov dword ptr [rsp + 0x20], 2 ; call rdi
0x000002000069267a : iretd ; mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200006907e3 : iretd ; mov dword ptr [rsp + 0x20], r13d ; call rdi
0x0000020000115d98 : iretd ; mov dword ptr [rsp + 0x50], 0 ; call rsi
0x000002000049803a : iretd ; mov ebp, eax ; call 0x200000ba7e6
0x0000020000125a55 : iretd ; mov edx, edi ; call 0x20000521d25
0x000002000049d2d6 : iretd ; mov qword ptr [rsi + 8], rax ; call 0x200000c1928
0x0000020000074a30 : iretd ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000042d892 : iretd ; mov qword ptr [rsp + 0x20], rdi ; call 0x20000053855
0x00000200005fcee9 : iretd ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rax]
0x000002000060d49d : iretd ; mov r12b, 1 ; call 0x20000231017
0x00000200004ce875 : iretd ; mov r14b, 1 ; lea r8d, dword ptr [r9 - 4] ; call rsi
0x00000200004756a1 : iretd ; mov r14d, eax ; call 0x2000009b447
0x00000200003b0732 : iretd ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x00000200006c03fc : iretd ; mov r8, rsi ; mov edx, ebp ; mov rcx, rbx ; call rax
0x00000200004fcce7 : iretd ; mov r8d, ebx ; mov rdx, rbp ; call rax
0x00000200004ce89f : iretd ; mov r9d, eax ; mov r8d, eax ; call rsi
0x000002000011e6cb : iretd ; mov rax, qword ptr [rip + 0x260dd5] ; call rax
0x000002000011e5c4 : iretd ; mov rax, qword ptr [rip + 0x260edc] ; call rax
0x000002000011e2b0 : iretd ; mov rax, qword ptr [rip + 0x2611f0] ; call rax
0x000002000011e15c : iretd ; mov rax, qword ptr [rip + 0x261344] ; call rax
0x000002000011e0b5 : iretd ; mov rax, qword ptr [rip + 0x2613eb] ; call rax
0x0000020000035793 : iretd ; mov rax, qword ptr [rip + 0x349d0d] ; call rax
0x000002000060f574 : iretd ; mov rax, qword ptr [rsi + 0x38] ; call rax
0x00000200006c49fe : iretd ; mov rbx, rax ; call rsi
0x0000020000446ab4 : iretd ; mov rcx, rsi ; call 0x20000074c97
0x000002000002c23d : iretd ; mov rdi, qword ptr [rsp + 0x10] ; jmp rcx
0x00000200001fd8be : iretd ; mov rdx, qword ptr [rsp + 0x70] ; call r9
0x0000020000203d80 : iretd ; mov rdx, rbx ; call rsi
0x00000200006b905d : iretd ; mov rsi, rax ; call rbx
0x00000200004752ef : iretd ; sub rdx, rbp ; call 0x20000099f97
0x0000020000616c3f : iretd ; xor ebx, ebx ; call 0x20000231017
0x00000200004365a4 : iretd ; xor edx, edx ; call 0x200000c2845
0x000002000051b190 : iretq ; call 0x20000140385
0x000002000059289c : iretq ; call 0x200001bd4e9
0x0000020000008549 : ja 0x20000008554 ; sub rax, rcx ; ret
0x000002000002222d : ja 0x20000022219 ; mov qword ptr [rcx + 0x168], r8 ; ret
0x000002000002223e : ja 0x20000022219 ; mov qword ptr [rcx + 0x168], rax ; ret
0x000002000002220e : ja 0x20000022239 ; ret
0x00000200000282d8 : ja 0x200000282f2 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000002ccd1 : ja 0x2000002cccf ; xor al, al ; ret
0x000002000002f705 : ja 0x2000002f70a ; ret
0x00000200000344bb : ja 0x200000344c4 ; sbb eax, eax ; ret
0x0000020000041e51 : ja 0x20000041e5d ; add bl, bh ; add rsp, 0x28 ; ret
0x00000200000596a7 : ja 0x200000596ac ; ret
0x0000020000059a82 : ja 0x20000059a8b ; mov al, 1 ; ret
0x00000200000730e4 : ja 0x200000730f1 ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200000737f9 : ja 0x20000073812 ; ret
0x0000020000074756 : ja 0x20000074772 ; cmp qword ptr [rdx + 8], rax ; je 0x20000074767 ; ret
0x0000020000087d22 : ja 0x20000087d35 ; mov al, 1 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000bab19 : ja 0x200000bab22 ; ret
0x00000200000e2cdd : ja 0x200000e2ce6 ; mov al, 1 ; ret
0x00000200000e807d : ja 0x200000e8085 ; mov al, dl ; ret
0x00000200000e807d : ja 0x200000e8086 ; mov al, dl ; ret
0x00000200000ef788 : ja 0x200000ef797 ; mov eax, 4 ; ret
0x00000200000ef7ae : ja 0x200000ef79f ; xor eax, eax ; ret
0x00000200000ef79e : ja 0x200000ef7b7 ; mov eax, 1 ; ret
0x00000200000ef793 : ja 0x200000ef7b7 ; mov eax, 8 ; ret
0x00000200000ef7fd : ja 0x200000ef806 ; xor al, al ; ret
0x00000200000f11e6 : ja 0x200000f11eb ; ret
0x000002000010b342 : ja 0x2000010b36b ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000010b3de : ja 0x2000010b407 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000125905 : ja 0x200001258e7 ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000002000012ec8c : ja 0x2000012ec95 ; sbb eax, eax ; ret
0x0000020000134936 : ja 0x2000013494e ; mov rdx, rsi ; mov rcx, rbx ; call r14
0x000002000013d2b8 : ja 0x2000013d2bf ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000014995b : ja 0x20000149952 ; ret
0x000002000014995a : ja 0x20000149953 ; ret
0x0000020000166139 : ja 0x200001661bb ; in eax, dx ; inc dword ptr [rbp + 0x3b] ; ret
0x0000020000199183 : ja 0x2000019917d ; push rsi ; ret
0x00000200001d9484 : ja 0x200001d948d ; xor eax, eax ; ret
0x00000200001dd977 : ja 0x200001dd985 ; or rbx, 4 ; call 0x200000d9be8
0x00000200001e33bb : ja 0x200001e3399 ; mov dword ptr [r10 + 4], r9d ; ret
0x00000200001f0f70 : ja 0x200001f0f1f ; cmp r8d, r9d ; sete al ; ret
0x00000200001f497c : ja 0x200001f498b ; mov qword ptr [rdx], rcx ; xor eax, eax ; ret
0x00000200001f7d34 : ja 0x200001f7d3f ; sub r8d, r10d ; jmp 0x200001f7d4a
0x00000200002244bb : ja 0x200002244c2 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200002254e5 : ja 0x200002254ec ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000022893a : ja 0x20000228941 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000229fac : ja 0x20000229fb3 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000022ae52 : ja 0x2000022ae59 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000022f023 : ja 0x2000022f02a ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000399466 : ja 0x2000039949f ; mov rdx, r12 ; mov rcx, rbx ; call r8
0x00000200003d81a2 : ja 0x200003d81b5 ; lea eax, dword ptr [rcx*4 + 8] ; ret
0x00000200003ea850 : ja 0x200003ea85a ; xor edi, edi ; call 0x200000c36c8
0x00000200003ea84f : ja 0x200003ea85b ; xor edi, edi ; call 0x200000c36c9
0x00000200003fb475 : ja 0x200003fb47a ; ret
0x00000200004037b5 : ja 0x2000040380d ; add rsp, 0x38 ; ret
0x000002000041189d : ja 0x200004118ac ; sbb eax, eax ; add eax, 2 ; ret
0x000002000041cb98 : ja 0x2000041cbd0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004252b5 : ja 0x200004252f4 ; xor ecx, ecx ; call 0x2000004585b
0x000002000043f085 : ja 0x2000043f091 ; mov qword ptr [rdx], r8 ; mov al, 1 ; ret
0x000002000043fabb : ja 0x2000043fac4 ; mov al, cl ; ret
0x000002000044cb00 : ja 0x2000044cb18 ; mov word ptr [r8 + 2], r9w ; xor eax, eax ; ret
0x000002000047368e : ja 0x200004736b0 ; test edx, edx ; jne 0x200004736a4 ; xor eax, eax ; ret
0x00000200004766d1 : ja 0x200004766d6 ; ret
0x000002000048dfe5 : ja 0x2000048e002 ; ret
0x000002000049cd4e : ja 0x2000049cd5f ; movzx eax, cx ; sub eax, 0x20 ; ret
0x00000200004a10b5 : ja 0x200004a10c3 ; ret 0x8bff
0x00000200004c8102 : ja 0x200004c810d ; mov al, r8b ; ret
0x00000200004cdd10 : ja 0x200004cdc9f ; ret
0x00000200004e4ef3 : ja 0x200004e4f04 ; cmp r8, rdx ; setbe al ; ret
0x00000200004f8a86 : ja 0x200004f8a9b ; mov qword ptr [r10], r9 ; xor eax, eax ; ret
0x000002000050108a : ja 0x20000501078 ; adc al, 0x46 ; ret
0x00000200005108bf : ja 0x200005108bd ; movq qword ptr [rbp - 0x59], mm0 ; call 0x200001403e9
0x0000020000513205 : ja 0x200005131db ; ret 0x8bff
0x00000200005248b1 : ja 0x20000524876 ; xor al, al ; ret
0x000002000052af05 : ja 0x2000052af4b ; ret 0x41ff
0x000002000053646e : ja 0x20000536477 ; mov eax, ecx ; ret
0x0000020000538847 : ja 0x200005387d2 ; mov byte ptr [rdx], r10b ; inc rdx ; jmp 0x2000053883e
0x00000200005418d2 : ja 0x200005418e3 ; mov dword ptr [rip - 0x2666b2], ecx ; ret
0x0000020000541f65 : ja 0x20000541f76 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200003c3df0 : ja 0x200005626d8 ; xor eax, eax ; ret
0x00000200005797b5 : ja 0x200005797a3 ; jge 0x2000057979f ; ret 0x8bff
0x0000020000512437 : ja 0x20000596358 ; ret
0x00000200005af7b2 : ja 0x200005af741 ; ret
0x00000200005b9605 : ja 0x200005b965a ; ret 0x48ff
0x00000200005bc781 : ja 0x200005bc773 ; dec dword ptr [rax - 0x75] ; or r8b, r13b ; ret
0x00000200005bc780 : ja 0x200005bc774 ; dec dword ptr [rax - 0x75] ; or r8b, r13b ; ret
0x00000200005c1e6e : ja 0x200005c1e24 ; push qword ptr [rdx] ; ret
0x00000200005cdabd : ja 0x200005cdadb ; ret 0x48ff
0x0000020000626618 : ja 0x20000626604 ; ret 0xc0b6
0x000002000062fafd : ja 0x2000062fab3 ; ret
0x00000200006429db : ja 0x200006429ee ; movzx eax, r9w ; add eax, 0x20 ; ret
0x000002000065a17f : ja 0x2000065a18e ; mov eax, 0x32 ; ret
0x000002000065a18e : ja 0x2000065a19d ; mov eax, 0x3c ; ret
0x0000020000665a48 : ja 0x20000665ac6 ; call 0x20000231ce4
0x0000020000686303 : ja 0x20000686316 ; sub cl, 0x30 ; mov byte ptr [rdx], cl ; mov al, 1 ; ret
0x000002000068633f : ja 0x20000686352 ; sub cl, 0x30 ; mov byte ptr [rdx], cl ; mov al, 1 ; ret
0x00000200006a2322 : ja 0x200006a232e ; push rsi ; xor dword ptr [rip + 0x30dbde31], ecx ; ret 0xc556
0x00000200006b53cb : ja 0x200006b53da ; mov eax, 1 ; ret
0x00000200006baf79 : ja 0x200006baf8a ; sub r9d, r10d ; mov dword ptr [r8], r9d ; ret
0x00000200006c06b3 : ja 0x200006c06c0 ; movzx eax, r10b ; jmp 0x200006c06cc
0x00000200006c0780 : ja 0x200006c078d ; movzx eax, r10b ; jmp 0x200006c0799
0x00000200006c0834 : ja 0x200006c0841 ; movzx eax, r10b ; jmp 0x200006c084d
0x00000200006c08d7 : ja 0x200006c08e4 ; movzx eax, r10b ; jmp 0x200006c08f0
0x000002000072c2b2 : ja 0x2000072c2b9 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200007320de : ja 0x200007320e5 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000733080 : ja 0x20000733087 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000733e06 : ja 0x20000733e0d ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000734d74 : ja 0x20000734d7b ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000735d18 : ja 0x20000735d1f ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000736c5a : ja 0x20000736c61 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000748e8e : ja 0x20000748ef5 ; ret
0x0000020000756791 : ja 0x2000075671f ; ret 0x48ff
0x0000020000769ec5 : ja 0x20000769e4e ; ret 0x48ff
0x0000020000783fb8 : ja 0x20000783fa4 ; ret 0x9bc3
0x0000020000783fb7 : ja 0x20000783fa5 ; ret 0x9bc3
0x00000200000027ee : jae 0x2000000281e ; mov rsp, r11 ; pop rdi ; ret
0x000002000000827a : jae 0x2000000828b ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000009e43 : jae 0x20000009e73 ; mov rsp, r11 ; pop rdi ; ret
0x000002000000e58e : jae 0x2000000e5b6 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000012e66 : jae 0x20000012e8e ; mov rsp, r11 ; pop rdi ; ret
0x000002000001883b : jae 0x20000018829 ; xor al, al ; ret
0x000002000001a257 : jae 0x2000001a28a ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000001d73a : jae 0x2000001d762 ; mov rsp, r11 ; pop rdi ; ret
0x000002000002076c : jae 0x2000002079c ; mov rsp, r11 ; pop rbp ; ret
0x00000200000272e5 : jae 0x20000027320 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000029b8f : jae 0x20000029ba8 ; mov qword ptr [rdx], r8 ; mov rax, rcx ; ret
0x000002000002a82e : jae 0x2000002a85e ; mov rsp, r11 ; pop rdi ; ret
0x000002000002daf8 : jae 0x2000002db06 ; inc rdx ; lea rax, qword ptr [rdx + r9] ; ret
0x000002000002e293 : jae 0x2000002e2b3 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000033db2 : jae 0x20000033dbb ; xor eax, eax ; ret
0x0000020000034901 : jae 0x2000003493c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000035f66 : jae 0x20000035f96 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000363f1 : jae 0x20000036404 ; xor eax, eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000038dd2 : jae 0x20000038e02 ; mov rsp, r11 ; pop rbp ; ret
0x000002000003bc65 : jae 0x2000003bc74 ; mov eax, 1 ; ret
0x000002000003e18f : jae 0x2000003e19c ; add rsp, 0x38 ; ret
0x0000020000040d5d : jae 0x20000040d62 ; ret
0x0000020000045260 : jae 0x20000045288 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000485fd : jae 0x20000048625 ; mov rsp, r11 ; pop rdi ; ret
0x000002000004b4d2 : jae 0x2000004b4df ; add rsp, 0x28 ; ret
0x000002000004d84c : jae 0x2000004d887 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000004e8af : jae 0x2000004e88e ; or byte ptr [rax - 0x75], cl ; ret
0x000002000004f2ce : jae 0x2000004f2ad ; or byte ptr [rax - 0x75], cl ; ret
0x000002000004f333 : jae 0x2000004f312 ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000050825 : jae 0x2000005082e ; mov al, 1 ; ret
0x0000020000052ccb : jae 0x20000052cde ; xor al, al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000005590f : jae 0x2000005593f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000064345 : jae 0x20000064356 ; mov eax, edx ; add rsp, 0x38 ; ret
0x000002000006599e : jae 0x200000659d3 ; xor al, al ; add rsp, 0x28 ; ret
0x000002000006599d : jae 0x200000659d4 ; xor al, al ; add rsp, 0x28 ; ret
0x00000200000684f8 : jae 0x200000684fd ; ret
0x000002000006cd3d : jae 0x2000006cd46 ; mov al, 1 ; ret
0x000002000006ed0d : jae 0x2000006ed3d ; mov rsp, r11 ; pop rdi ; ret
0x000002000006f1b6 : jae 0x2000006f1c7 ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000073359 : jae 0x2000007334e ; or eax, 0xc033c300 ; ret
0x0000020000074fc9 : jae 0x20000074fd9 ; cmp r8, rcx ; seta al ; ret
0x0000020000084043 : jae 0x20000084073 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000086238 : jae 0x2000008628f ; jb 0x20000086229 ; ret
0x000002000008a075 : jae 0x2000008a0a5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000008fb20 : jae 0x2000008f98b ; inc eax ; jmp 0x2000008faf5
0x00000200000c1a34 : jae 0x200000c1a45 ; mov eax, r8d ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200000c1a54 : jae 0x200000c1a67 ; mov eax, r8d ; mov dword ptr [rcx + rax*4], r9d ; ret
0x00000200000d46ab : jae 0x200000d46c6 ; jmp 0x200000d43b3
0x00000200000df4c5 : jae 0x200000df4e5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000df728 : jae 0x200000df713 ; mov rax, r8 ; ret
0x00000200000e1753 : jae 0x200000e1773 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000e33fd : jae 0x200000e342d ; mov rsp, r11 ; pop rdi ; ret
0x00000200000ee8a0 : jae 0x200000ee8d0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000ef7a9 : jae 0x200000ef77a ; cmp ecx, 1 ; ja 0x200000ef7a4 ; xor eax, eax ; ret
0x00000200000ef7f5 : jae 0x200000ef7fe ; mov al, 1 ; ret
0x00000200000efd8a : jae 0x200000efdba ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f00f8 : jae 0x200000f0120 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f0d0e : jae 0x200000f0d36 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f1ab1 : jae 0x200000f1ad9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f2588 : jae 0x200000f25a8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f357f : jae 0x200000f35a7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f5386 : jae 0x200000f53ae ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f73a9 : jae 0x200000f73ae ; ret
0x00000200000fc492 : jae 0x200000fc49e ; mov qword ptr [rcx + 0x20], rdx ; ret
0x000002000010539f : jae 0x200001053bf ; mov rsp, r11 ; pop rdi ; ret
0x0000020000106ca0 : jae 0x20000106cc0 ; mov rsp, r11 ; pop rdi ; ret
0x000002000010c331 : jae 0x2000010c330 ; jmp qword ptr [rcx]
0x000002000010c417 : jae 0x2000010c43f ; mov rsp, r11 ; pop rbp ; ret
0x000002000010ff86 : jae 0x2000010ffb6 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011190e : jae 0x20000111949 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000113b1d : jae 0x20000113b58 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000113c41 : jae 0x20000113c7c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000113dd3 : jae 0x20000113e03 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000114431 : jae 0x20000114484 ; lea eax, dword ptr [rdi + rcx] ; xor edx, edx ; xor ecx, ecx ; call rax
0x0000020000117fa1 : jae 0x20000117fd4 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001250e6 : jae 0x2000012510e ; mov rsp, r11 ; pop rdi ; ret
0x0000020000127ecd : jae 0x20000127f00 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000012a3c5 : jae 0x2000012a3e5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000012afdb : jae 0x2000012b003 ; mov rsp, r11 ; pop rdi ; ret
0x000002000012ec49 : jae 0x2000012ec41 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001325b3 : jae 0x200001325ee ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001328ad : jae 0x200001328d5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000013491b : jae 0x20000134939 ; mov rdx, rsi ; mov rcx, rbx ; call r14
0x0000020000137a9a : jae 0x20000137aa8 ; movzx eax, cx ; sub eax, edx ; ret
0x0000020000137a9a : jae 0x20000137aa9 ; movzx eax, cx ; sub eax, edx ; ret
0x00000200001387ef : jae 0x20000138823 ; mov byte ptr [r10], 0x2e ; inc r10 ; jmp 0x20000138815
0x000002000013a6cb : jae 0x2000013a6fb ; mov rsp, r11 ; pop rbp ; ret
0x000002000013cde0 : jae 0x2000013ce10 ; mov rsp, r11 ; pop rdi ; ret
0x000002000013e7cd : jae 0x2000013e7d8 ; or eax, 0xffffffff ; ret
0x000002000013f7af : jae 0x2000013f7a7 ; and edx, 0xf ; jne 0x2000013f7be ; ret
0x000002000002f53a : jae 0x20000162185 ; mov rax, rcx ; ret
0x000002000019d81f : jae 0x2000019d875 ; clc ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200001ab3f0 : jae 0x200001ab410 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001abfd0 : jae 0x200001abfdf ; mov rax, qword ptr [rip + 0x12649f] ; call rax
0x00000200001ac2c2 : jae 0x200001ac2cd ; or eax, 0xffffffff ; ret
0x00000200001ad3dd : jae 0x200001ad3fd ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ae3d8 : jae 0x200001ae3f8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ae708 : jae 0x200001ae738 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001af21c : jae 0x200001af244 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b0325 : jae 0x200001b0345 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b04cf : jae 0x200001b04f7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b05a1 : jae 0x200001b05c9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b2623 : jae 0x200001b264b ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b6c5f : jae 0x200001b6c82 ; add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x00000200001b6e87 : jae 0x200001b6e90 ; mov al, 1 ; ret
0x00000200001b8ca6 : jae 0x200001b8cd9 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001ba627 : jae 0x200001ba64f ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ba6d1 : jae 0x200001ba6f9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ba753 : jae 0x200001ba77b ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ba7c0 : jae 0x200001ba7e0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001bb442 : jae 0x200001bb46a ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c038a : jae 0x200001c03ba ; mov rsp, r11 ; pop rdi ; ret
0x00000200001c5fd1 : jae 0x200001c6001 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c61f1 : jae 0x200001c6202 ; mov eax, dword ptr [rip + 0x1b7ea7] ; ret
0x00000200001c686b : jae 0x200001c68ae ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001c9bed : jae 0x200001c9c59 ; in eax, -1 ; add rsp, 0x28 ; ret
0x00000200001c9d37 : jae 0x200001c9d67 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001cb455 : jae 0x200001cb485 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001cd1ec : jae 0x200001cd21c ; mov rsp, r11 ; pop rdi ; ret
0x00000200001cf037 : jae 0x200001cf067 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001d046d : jae 0x200001d0478 ; or eax, 0xffffffff ; ret
0x00000200001d06a6 : jae 0x200001d066d ; xor eax, eax ; ret
0x00000200001d690b : jae 0x200001d693b ; mov rsp, r11 ; pop rdi ; ret
0x00000200001d8033 : jae 0x200001d806e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001dcd8d : jae 0x200001dcdbd ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e17ce : jae 0x200001e17fe ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e377c : jae 0x200001e37ac ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e3904 : jae 0x200001e392c ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e3b53 : jae 0x200001e3b7b ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e3eab : jae 0x200001e3ed3 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e479c : jae 0x200001e47cc ; mov rsp, r11 ; pop rdi ; ret
0x00000200001eb480 : jae 0x200001eb4b3 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001eb575 : jae 0x200001eb5b0 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001ec042 : jae 0x200001ec07d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001ec65a : jae 0x200001ec695 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001ed687 : jae 0x200001ed6af ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ede42 : jae 0x200001ede7d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001ee0f9 : jae 0x200001ee12c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001ef168 : jae 0x200001ef198 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001f31be : jae 0x200001f31e6 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001f62b4 : jae 0x200001f62ab ; mov rax, rdx ; ret
0x00000200001f62b4 : jae 0x200001f62ac ; mov rax, rdx ; ret
0x00000200001f630d : jae 0x200001f6306 ; mov word ptr [rdx], cx ; add qword ptr [r8], 2 ; ret
0x00000200001f6345 : jae 0x200001f634e ; xor al, al ; ret
0x00000200001f6ecb : jae 0x200001f6ef3 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fac6a : jae 0x200001fac8a ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fad97 : jae 0x200001fadb7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fae43 : jae 0x200001fae63 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001fc686 : jae 0x200001fc695 ; mov eax, 0xc0000023 ; ret
0x00000200001fddb0 : jae 0x200001fddbe ; mov qword ptr [rdx + 0x38], r8 ; xor eax, eax ; ret
0x00000200001fe355 : jae 0x200001fe390 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200001fe455 : jae 0x200001fe485 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001ff53c : jae 0x200001ff5b0 ; push rbx ; je 0x200001ff4c7 ; ret 0x100f
0x0000020000202d90 : jae 0x20000202d9b ; or eax, 0xffffffff ; ret
0x0000020000205a8d : jae 0x20000205abd ; mov rsp, r11 ; pop rbp ; ret
0x0000020000205ac5 : jae 0x20000205b3d ; push rsp ; insd dword ptr [rdi], dx ; mov r12d, r9d ; call 0x20000231ce9
0x0000020000207892 : jae 0x200002078a4 ; movzx eax, cl ; mov cr8, rax ; ret
0x00000200002078a7 : jae 0x200002078b3 ; mov cr8, rcx ; ret
0x000002000020bced : jae 0x2000020bd30 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000211052 : jae 0x2000021104a ; mov rsp, r11 ; pop rdi ; ret
0x000002000021139c : jae 0x200002113df ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000211445 : jae 0x20000211465 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000213041 : jae 0x20000213084 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200002160c2 : jae 0x200002160ec ; xor eax, eax ; ret
0x0000020000216aea : jae 0x20000216af9 ; mov eax, 0xc00001a2 ; ret
0x000002000021c0cd : jae 0x2000021c0fd ; mov rsp, r11 ; pop rdi ; ret
0x000002000021cf86 : jae 0x2000021cfa6 ; mov rsp, r11 ; pop rdi ; ret
0x000002000021d083 : jae 0x2000021d0ab ; mov rsp, r11 ; pop rdi ; ret
0x000002000021ddd6 : jae 0x2000021dddf ; xor eax, eax ; ret
0x000002000021ea18 : jae 0x2000021ea48 ; mov rsp, r11 ; pop rdi ; ret
0x000002000039ba75 : jae 0x2000039ba7f ; adc eax, 0x19058b00 ; ret 0xfff7
0x000002000039d877 : jae 0x2000039d8b2 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000039e6f6 : jae 0x2000039e731 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000039f389 : jae 0x2000039f33c ; salc ; dec dword ptr [rax - 0x7d] ; ret
0x00000200003a65ca : jae 0x200003a65fa ; mov rsp, r11 ; pop rdi ; ret
0x00000200003ab413 : jae 0x200003ab433 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003abb0b : jae 0x200003abb46 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003b2b70 : jae 0x200003b2b98 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003b61c0 : jae 0x200003b61e0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003b939d : jae 0x200003b93d8 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003bb3b5 : jae 0x200003bb3dd ; mov rsp, r11 ; pop rdi ; ret
0x00000200003c20b5 : jae 0x200003c20dd ; mov rsp, r11 ; pop rdi ; ret
0x00000200003d8b1a : jae 0x200003d8b5d ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200003d9e39 : jae 0x200003d9e4c ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003da999 : jae 0x200003da992 ; ret
0x00000200003dcd42 : jae 0x200003dcd85 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200003e0322 : jae 0x200003e034a ; mov rsp, r11 ; pop rdi ; ret
0x00000200003e2609 : jae 0x200003e2631 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003e735d : jae 0x200003e738d ; mov rsp, r11 ; pop rbp ; ret
0x00000200003f63b5 : jae 0x200003f63f0 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200003f69d6 : jae 0x200003f6a07 ; mov rsp, r11 ; pop r15 ; ret
0x00000200003fea70 : jae 0x200003fea90 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000402d19 : jae 0x20000402d28 ; bts dword ptr [rdx], 8 ; mov eax, r9d ; ret
0x0000020000405781 : jae 0x200004057de ; out dx, eax ; dec dword ptr [rbx] ; ret
0x0000020000405a08 : jae 0x20000405a38 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000406345 : jae 0x2000040636d ; mov rsp, r11 ; pop rdi ; ret
0x0000020000406fa9 : jae 0x20000406fd1 ; mov rsp, r11 ; pop rdi ; ret
0x000002000040f898 : jae 0x2000040f8c8 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000417c72 : jae 0x20000417cad ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x0000020000419f50 : jae 0x20000419f78 ; mov rsp, r11 ; pop rdi ; ret
0x000002000041bdd3 : jae 0x2000041be03 ; mov rsp, r11 ; pop rdi ; ret
0x000002000041c850 : jae 0x2000041c88b ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000041ec49 : jae 0x2000041eccb ; add al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000420c3d : jae 0x20000420c80 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000422bec : jae 0x20000422bfd ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000424a05 : jae 0x20000424a36 ; mov rsp, r11 ; pop r15 ; ret
0x000002000042a776 : jae 0x2000042a7a6 ; mov rsp, r11 ; pop rbp ; ret
0x000002000042a98e : jae 0x2000042a9be ; mov rsp, r11 ; pop rdi ; ret
0x000002000042eb96 : jae 0x2000042ebbe ; mov rsp, r11 ; pop rdi ; ret
0x00000200004383d4 : jae 0x20000438404 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004425f6 : jae 0x20000442616 ; mov rsp, r11 ; pop rdi ; ret
0x000002000044d4af : jae 0x2000044d4cf ; mov rsp, r11 ; pop rdi ; ret
0x000002000044e218 : jae 0x2000044e24b ; setne al ; mov rsp, r11 ; pop rdi ; ret
0x0000020000451293 : jae 0x200004512bb ; mov rsp, r11 ; pop rdi ; ret
0x000002000045180f : jae 0x2000045183f ; mov rsp, r11 ; pop rdi ; ret
0x0000020000454dc3 : jae 0x20000454df3 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000456d0f : jae 0x20000456d38 ; mov rsp, r11 ; pop r15 ; ret
0x000002000045e52c : jae 0x2000045e54c ; mov rsp, r11 ; pop rdi ; ret
0x0000020000461608 : jae 0x20000461638 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004644b2 : jae 0x200004644e2 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000465075 : jae 0x2000046509d ; mov rsp, r11 ; pop rdi ; ret
0x0000020000465d00 : jae 0x20000465d3b ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000466e8d : jae 0x20000466eb5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004674ff : jae 0x2000046751f ; mov rsp, r11 ; pop rdi ; ret
0x0000020000469ac8 : jae 0x20000469af8 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000469b98 : jae 0x20000469bc8 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000472401 : jae 0x20000472432 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000479d16 : jae 0x20000479d46 ; mov rsp, r11 ; pop rdi ; ret
0x000002000047e45b : jae 0x2000047e483 ; mov rsp, r11 ; pop rdi ; ret
0x000002000048f6e9 : jae 0x2000048f723 ; ret
0x00000200004977c9 : jae 0x2000049777d ; ret 0xf0ff
0x0000020000498cb9 : jae 0x20000498c4b ; ret 0x48ff
0x0000020000498eb9 : jae 0x20000498e49 ; ret 0x48ff
0x000002000049a39d : jae 0x2000049a3ac ; mov edx, r8d ; jmp 0x2000049a3d5
0x000002000049ad69 : jae 0x2000049ad8b ; ret 0x4cff
0x000002000049cd44 : jae 0x2000049cd4f ; movzx eax, cx ; ret
0x00000200004b5809 : jae 0x200004b57ec ; sar bh, 0x48 ; add esp, 0x38 ; ret
0x00000200004bc8a8 : jae 0x200004bc8bf ; add byte ptr [rcx - 0x75], al ; ret
0x00000200004bf319 : jae 0x200004bf34a ; mov rsp, r11 ; pop r15 ; ret
0x00000200004c41d5 : jae 0x200004c4210 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004c759c : jae 0x200004c75d7 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004c8e48 : jae 0x200004c8e83 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004cb6e9 : jae 0x200004cb72c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004cc54d : jae 0x200004cc558 ; jmp 0x200004cc516
0x00000200004d03c5 : jae 0x200004d03f5 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d0e95 : jae 0x200004d0ec5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004d1190 : jae 0x200004d11c0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d2f00 : jae 0x200004d2f3b ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004d386d : jae 0x200004d389d ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d5b39 : jae 0x200004d5b69 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d6e3f : jae 0x200004d6e67 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004deb2a : jae 0x200004deb4a ; mov rsp, r11 ; pop rdi ; ret
0x00000200004def95 : jae 0x200004defbd ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e05d2 : jae 0x200004e05fa ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e17ff : jae 0x200004e181f ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e23ca : jae 0x200004e23f2 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e31b0 : jae 0x200004e31e0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e3ac9 : jae 0x200004e3af9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e45c9 : jae 0x200004e45e9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e5a7b : jae 0x200004e5aa3 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004eb508 : jae 0x200004eb530 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004eb605 : jae 0x200004eb5c9 ; ret 0x40ff
0x00000200004ec0a3 : jae 0x200004ec0d3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ec991 : jae 0x200004ec9b1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ed828 : jae 0x200004ed850 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ee3d6 : jae 0x200004ee3fe ; mov rsp, r11 ; pop rdi ; ret
0x00000200004eeef2 : jae 0x200004eef2d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004ef2fe : jae 0x200004ef326 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ef61b : jae 0x200004ef656 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004f102b : jae 0x200004f104b ; mov rsp, r11 ; pop rdi ; ret
0x00000200004f1530 : jae 0x200004f1558 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004f2322 : jae 0x200004f2355 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004f31da : jae 0x200004f320d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004f4e25 : jae 0x200004f4e68 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004fcd02 : jae 0x200004fcd2a ; mov rsp, r11 ; pop rdi ; ret
0x00000200004fd2e3 : jae 0x200004fd316 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000501593 : jae 0x200005015bb ; mov rsp, r11 ; pop rbp ; ret
0x0000020000502eac : jae 0x20000502ed4 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000503009 : jae 0x2000050300e ; ret
0x00000200005030e1 : jae 0x2000050311c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000503823 : jae 0x20000503843 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005054e5 : jae 0x200005054f0 ; or eax, 0xffffffff ; ret
0x0000020000507b92 : jae 0x20000507bb2 ; mov rsp, r11 ; pop rdi ; ret
0x000002000050c366 : jae 0x2000050c3a1 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000050c63c : jae 0x2000050c67f ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000050d0b1 : jae 0x2000050d0d1 ; mov rsp, r11 ; pop rdi ; ret
0x000002000050d5cf : jae 0x2000050d5dd ; add bh, bh ; ret 0xfa83
0x000002000050d63f : jae 0x2000050d64d ; add bh, bh ; ret 0xfa83
0x000002000050e332 : jae 0x2000050e362 ; mov rsp, r11 ; pop rdi ; ret
0x000002000050f305 : jae 0x2000050f335 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005110ef : jae 0x20000511117 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000511aa2 : jae 0x20000511ad5 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000513c0a : jae 0x20000513c3a ; mov rsp, r11 ; pop rdi ; ret
0x0000020000517ea0 : jae 0x20000517ee3 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000051a01d : jae 0x2000051a04d ; mov rsp, r11 ; pop rbp ; ret
0x000002000051a9c7 : jae 0x2000051a9fa ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000051d6b2 : jae 0x2000051d6f5 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000051e4d4 : jae 0x2000051e4fc ; mov rsp, r11 ; pop rbp ; ret
0x000002000051f7d0 : jae 0x2000051f7f0 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051f9bf : jae 0x2000051f9e7 ; mov rsp, r11 ; pop rdi ; ret
0x000002000051fc72 : jae 0x2000051fc9a ; mov rsp, r11 ; pop rdi ; ret
0x0000020000520a0c : jae 0x20000520a34 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005216c5 : jae 0x200005216e5 ; fdivp st(7) ; call 0x2000014f187
0x000002000052379f : jae 0x200005237cf ; mov rsp, r11 ; pop rbp ; ret
0x0000020000526c29 : jae 0x20000526c6c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000527075 : jae 0x20000527095 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000528bd3 : jae 0x20000528bfb ; mov rsp, r11 ; pop rdi ; ret
0x000002000052c38e : jae 0x2000052c3be ; mov rsp, r11 ; pop rdi ; ret
0x0000020000531da6 : jae 0x20000531dd6 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005337a9 : jae 0x200005337e4 ; mov rsp, r11 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000053399a : jae 0x200005339ca ; mov rsp, r11 ; pop rdi ; ret
0x0000020000533a59 : jae 0x20000533a89 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005376d0 : jae 0x2000053770b ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000053852a : jae 0x2000053850c ; or byte ptr [rsi + 0x48], ah ; movd eax, mm0 ; call rax
0x000002000053abff : jae 0x2000053ac2f ; mov rsp, r11 ; pop rbp ; ret
0x000002000053e961 : jae 0x2000053e981 ; mov rsp, r11 ; pop rbp ; ret
0x000002000053ff97 : jae 0x2000053ffbf ; mov rsp, r11 ; pop rdi ; ret
0x000002000054047b : jae 0x200005404a3 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000542302 : jae 0x20000542332 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000542504 : jae 0x2000054252c ; mov rsp, r11 ; pop rdi ; ret
0x0000020000545a8d : jae 0x20000545aad ; mov rsp, r11 ; pop rdi ; ret
0x0000020000545cd1 : jae 0x20000545d04 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000056ad35 : jae 0x2000056ad24 ; inc dword ptr [rbp + 0x33] ; in al, -0x17 ; ret 0xe673
0x00000200003e1ef7 : jae 0x200005710f2 ; mov al, 1 ; ret
0x000002000058f34d : jae 0x2000058f34e ; inc dword ptr [rcx - 9] ; rol byte ptr [rcx - 0xa], cl ; ret 0xe908
0x000002000058f359 : jae 0x2000058f35a ; inc dword ptr [rcx - 9] ; rol byte ptr [rcx - 0xa], cl ; ret 0xe902
0x000002000058f358 : jae 0x2000058f35b ; inc dword ptr [rcx - 9] ; rol byte ptr [rcx - 0xa], cl ; ret 0xe902
0x00000200005a5bc9 : jae 0x200005a5c16 ; jb 0x200005a5c1e ; mov ecx, edi ; call 0x200000c1e68
0x0000020000485e89 : jae 0x200005b59b4 ; mov al, 1 ; ret
0x00000200005399d4 : jae 0x200005d5b9f ; or eax, 0xffffffff ; ret
0x00000200005d68b4 : jae 0x200005d68bf ; or eax, 0xffffffff ; ret
0x00000200005daaed : jae 0x200005dab0d ; mov rsp, r11 ; pop rdi ; ret
0x00000200005dadb3 : jae 0x200005dade4 ; mov rsp, r11 ; pop r15 ; ret
0x00000200005dfc0d : jae 0x200005dfc16 ; mov al, 1 ; ret
0x00000200005e0767 : jae 0x200005e078f ; mov rsp, r11 ; pop rdi ; ret
0x00000200005e25eb : jae 0x200005e261b ; mov rsp, r11 ; pop rdi ; ret
0x00000200005e49a9 : jae 0x200005e49dc ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005e5b9f : jae 0x200005e5bda ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005e927b : jae 0x200005e92ab ; mov rsp, r11 ; pop rdi ; ret
0x00000200005ef8bb : jae 0x200005ef8eb ; mov rsp, r11 ; pop rdi ; ret
0x00000200005f0b50 : jae 0x200005f0b78 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005f0f47 : jae 0x200005f0f8a ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005f1400 : jae 0x200005f1428 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005f35e9 : jae 0x200005f361a ; mov rsp, r11 ; pop r15 ; ret
0x00000200005f98b6 : jae 0x200005f98c5 ; mov eax, 0xc000000d ; ret
0x00000200005f9899 : jae 0x200005f9914 ; ret
0x00000200005fb7a7 : jae 0x200005fb7cf ; mov rsp, r11 ; pop rdi ; ret
0x00000200005fdaf9 : jae 0x200005fdb21 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005fe2c4 : jae 0x200005fe2ff ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006025fd : jae 0x20000602625 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000603c69 : jae 0x20000603c4d ; ret 0x33ff
0x0000020000605609 : jae 0x2000060564c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000060bc98 : jae 0x2000060bcb8 ; mov rsp, r11 ; pop rdi ; ret
0x000002000060e699 : jae 0x2000060e6c6 ; ret 0x49ff
0x00000200006117ab : jae 0x200006117d4 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000612e19 : jae 0x20000612e4c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000613150 : jae 0x20000613180 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006144e5 : jae 0x20000614515 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006208cf : jae 0x20000620912 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000062355c : jae 0x2000062358c ; mov rsp, r11 ; pop rdi ; ret
0x000002000062416c : jae 0x20000624194 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000625680 : jae 0x200006256b0 ; mov rsp, r11 ; pop rdi ; ret
0x000002000062aa99 : jae 0x2000062ab05 ; sar bh, 0x8b ; ret
0x000002000062af1b : jae 0x2000062af43 ; mov rsp, r11 ; pop rdi ; ret
0x000002000062c2ef : jae 0x2000062c2fe ; mov eax, 0xc0000095 ; ret
0x000002000062c2fb : jae 0x2000062c30a ; mov eax, 0xc0000004 ; ret
0x000002000062c3ab : jae 0x2000062c3ba ; mov eax, 0xc0000095 ; ret
0x000002000062c3b7 : jae 0x2000062c3c6 ; mov eax, 0xc0000004 ; ret
0x000002000062fe45 : jae 0x2000062fe6d ; mov rsp, r11 ; pop rdi ; ret
0x000002000062ff44 : jae 0x2000062ff74 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000632431 : jae 0x20000632459 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006347ed : jae 0x20000634779 ; fdivp st(7) ; add rsp, 0x28 ; ret
0x0000020000637138 : jae 0x20000637168 ; mov rsp, r11 ; pop rbp ; ret
0x000002000063a8fb : jae 0x2000063a92b ; mov rsp, r11 ; pop rdi ; ret
0x000002000063c5ae : jae 0x2000063c5e9 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000641c29 : jae 0x20000641de1 ; jmp 0x20000641bfb
0x00000200006429d0 : jae 0x200006429db ; movzx eax, cx ; ret
0x00000200006429cf : jae 0x200006429dc ; movzx eax, cx ; ret
0x0000020000649d5d : jae 0x20000649d26 ; ret
0x000002000064a08c : jae 0x2000064a0bc ; mov rsp, r11 ; pop rbp ; ret
0x000002000064d0ea : jae 0x2000064d125 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000064dc64 : jae 0x2000064dc9f ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000065163b : jae 0x2000065165b ; mov rsp, r11 ; pop rdi ; ret
0x000002000065b064 : jae 0x2000065b09f ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000065cc44 : jae 0x2000065cc55 ; add r8b, byte ptr [rdx + rcx] ; inc edx ; jmp 0x2000065cc44
0x000002000065dfbf : jae 0x2000065dfef ; mov rsp, r11 ; pop rdi ; ret
0x0000020000661bf0 : jae 0x20000661c05 ; mov eax, dword ptr [rdi + rdx*4] ; mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x20000661bf2
0x00000200006628e0 : jae 0x20000662900 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000662a2d : jae 0x20000662a68 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006640cd : jae 0x20000664108 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006676d6 : jae 0x20000667709 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006687c9 : jae 0x200006687f9 ; mov rsp, r11 ; pop rdi ; ret
0x000002000066c114 : jae 0x2000066c147 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000066c7a2 : jae 0x2000066c7b3 ; sub rax, rcx ; sar rax, 1 ; ret
0x0000020000670a36 : jae 0x20000670a56 ; mov rsp, r11 ; pop rdi ; ret
0x000002000067674b : jae 0x20000676773 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006773c9 : jae 0x2000067740c ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000067ec8f : jae 0x2000067ecbf ; mov rsp, r11 ; pop rdi ; ret
0x00000200006816dc : jae 0x200006816ee ; mov rax, qword ptr [r9 + 0x18] ; add rax, rdx ; ret
0x00000200006816dc : jae 0x200006816ef ; mov rax, qword ptr [r9 + 0x18] ; add rax, rdx ; ret
0x0000020000681688 : jae 0x200006816ef ; mov rax, qword ptr [rdx + 0x18] ; add rax, rcx ; ret
0x000002000068c702 : jae 0x2000068c735 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000068f57a : jae 0x2000068f5bd ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000068f901 : jae 0x2000068f934 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000694025 : jae 0x20000694055 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006940e9 : jae 0x20000694119 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000694ed4 : jae 0x20000694efc ; mov rsp, r11 ; pop rdi ; ret
0x0000020000694f6b : jae 0x20000694f93 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006969b6 : jae 0x200006969de ; mov rsp, r11 ; pop rdi ; ret
0x000002000069ad7c : jae 0x2000069ad87 ; or eax, 0xffffffff ; ret
0x000002000069c4e3 : jae 0x2000069c526 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000069cfc4 : jae 0x2000069cfc7 ; ret 0xb70f
0x00000200006aaa89 : jae 0x200006aaacc ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200006ac0ca : jae 0x200006ac10d ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200006b59bf : jae 0x200006b59ce ; mov eax, 1 ; ret
0x00000200006b5e8a : jae 0x200006b5eba ; mov rsp, r11 ; pop rdi ; ret
0x00000200006b6c94 : jae 0x200006b6ca3 ; mov eax, 1 ; ret
0x00000200006bf8da : jae 0x200006bf90a ; mov rsp, r11 ; pop rdi ; ret
0x00000200006c1482 : jae 0x200006c14b2 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006c1552 : jae 0x200006c1582 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006c3937 : jae 0x200006c3967 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006d7c11 : jae 0x200006d7bc4 ; ret 0x4dff
0x00000200006da58f : jae 0x200006da5b7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006dbe59 : jae 0x200006dbecb ; ret 0xff
0x000002000072b3f6 : jae 0x2000072b407 ; mov esi, r12d ; mov rax, rdx ; jmp 0x2000072b40c
0x0000020000740d9f : jae 0x20000740daa ; or eax, 0xffffffff ; ret
0x0000020000742c95 : jae 0x20000742cbd ; mov rsp, r11 ; pop rbp ; ret
0x0000020000745bfe : jae 0x20000745c0d ; mov eax, 1 ; ret
0x00000200007463d4 : jae 0x20000746404 ; mov rsp, r11 ; pop rbp ; ret
0x000002000074ca4f : jae 0x2000074ca7f ; mov rsp, r11 ; pop rdi ; ret
0x000002000075058e : jae 0x200007505be ; mov rsp, r11 ; pop rbp ; ret
0x000002000075070a : jae 0x2000075072a ; mov rsp, r11 ; pop rbp ; ret
0x000002000075093b : jae 0x2000075096b ; mov rsp, r11 ; pop rbp ; ret
0x0000020000750bd4 : jae 0x20000750c17 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200007515ae : jae 0x200007515e9 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000752e89 : jae 0x20000752eb9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000075323c : jae 0x20000753264 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000754b3a : jae 0x20000754b62 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000756f79 : jae 0x20000756fef ; ret 0xfff
0x00000200007575a1 : jae 0x200007575e4 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000075829b : jae 0x200007582de ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200007589d8 : jae 0x20000758a08 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000759398 : jae 0x200007593d3 ; mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200007677d6 : jae 0x200007677e1 ; or eax, 0xffffffff ; ret
0x000002000076b286 : jae 0x2000076b2b6 ; mov rsp, r11 ; pop rdi ; ret
0x000002000076b7f5 : jae 0x2000076b825 ; mov rsp, r11 ; pop rbp ; ret
0x000002000076ca08 : jae 0x2000076ca38 ; mov rsp, r11 ; pop rbp ; ret
0x000002000076d1bb : jae 0x2000076d1e3 ; mov rsp, r11 ; pop rdi ; ret
0x000002000076e7d5 : jae 0x2000076e810 ; mov rsp, r11 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000076eb9b : jae 0x2000076ebd6 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000780fd8 : jae 0x20000781008 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007814f8 : jae 0x2000078153b ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200007816fd : jae 0x2000078172d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000784fe3 : jae 0x2000078501e ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200007851da : jae 0x2000078521d ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000785f8e : jae 0x20000785fd1 ; mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000463317 : jae 0x20010bb351f ; lea eax, dword ptr [rcx + 4] ; ret
0x00000200000125f6 : jb 0x200000125d7 ; ret
0x0000020000017aa4 : jb 0x20000017a99 ; jmp 0x20000017af3
0x000002000001e8e0 : jb 0x2000001e8c9 ; xor eax, eax ; ret
0x00000200000262d3 : jb 0x200000262e0 ; add rsp, 0x28 ; ret
0x0000020000029b9e : jb 0x20000029b98 ; xor eax, eax ; ret
0x000002000002bd29 : jb 0x2000002bd3c ; jbe 0x2000002bd40 ; mov eax, 1 ; ret
0x000002000002cd36 : jb 0x2000002cd1f ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002cd70 : jb 0x2000002cd4f ; ret
0x0000020000038583 : jb 0x20000038577 ; ret
0x000002000003b974 : jb 0x2000003b982 ; mov al, 1 ; ret
0x000002000003ceda : jb 0x2000003ce71 ; or byte ptr [rax], al ; jmp 0x2000003cea8
0x000002000003eacc : jb 0x2000003eac3 ; mov eax, 1 ; ret
0x000002000003fb67 : jb 0x2000003fb53 ; xor eax, eax ; ret
0x0000020000041451 : jb 0x2000004145e ; add rsp, 0x38 ; ret
0x0000020000042d9b : jb 0x20000042d8b ; xor eax, eax ; ret
0x0000020000046bc6 : jb 0x20000046bb8 ; mov eax, 0x10 ; ret
0x0000020000048b17 : jb 0x20000048b06 ; ret
0x0000020000057887 : jb 0x20000057897 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000063c50 : jb 0x20000063c6c ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000643b9 : jb 0x20000064382 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000006cd38 : jb 0x2000006cd4b ; cmp rdx, qword ptr [r8] ; jae 0x2000006cd4b ; mov al, 1 ; ret
0x0000020000074bdd : jb 0x20000074bf1 ; bt ecx, 0x1a ; jb 0x20000074c00 ; mov eax, edx ; ret
0x0000020000074be3 : jb 0x20000074bfa ; mov eax, edx ; ret
0x0000020000074be3 : jb 0x20000074bfb ; mov eax, edx ; ret
0x000002000007907d : jb 0x2000007908d ; shr rcx, 0xd ; and eax, ecx ; ret
0x000002000008623a : jb 0x20000086227 ; ret
0x00000200000867e1 : jb 0x200000867d3 ; mov eax, 1 ; ret
0x000002000009259a : jb 0x20000092572 ; ret
0x00000200000b29f0 : jb 0x200000b2a70 ; add byte ptr [rax], dl ; add byte ptr [rax], al ; ret
0x00000200000b34d1 : jb 0x200000b34e0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b7068 : jb 0x200000b7077 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b75de : jb 0x200000b75ed ; xor eax, eax ; ret
0x00000200000d3983 : jb 0x200000d3986 ; mov eax, 2 ; ret
0x00000200000d5fe6 : jb 0x200000d5ffd ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d978a : jb 0x200000d9786 ; add rsp, 0x28 ; ret
0x00000200000df02c : jb 0x200000df012 ; ret
0x00000200000df718 : jb 0x200000df6fe ; xor eax, eax ; ret
0x00000200000e85db : jb 0x200000e85c2 ; ret
0x00000200000e9bf1 : jb 0x200000e9c01 ; mov al, cl ; ret
0x000002000010f143 : jb 0x2000010f113 ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000110b11 : jb 0x20000110b25 ; test rdx, rdx ; je 0x20000110b30 ; mov rax, rdx ; ret
0x00000200001111f9 : jb 0x20000111204 ; mov al, r8b ; ret
0x000002000011734b : jb 0x20000117341 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011f186 : jb 0x2000011f1d0 ; inc edx ; jmp 0x2000011f16a
0x0000020000121771 : jb 0x2000012176c ; dec dword ptr [rbx + 0x58d48c8] ; ret
0x000002000012777e : jb 0x2000012774a ; add rsp, 0x38 ; ret
0x0000020000128594 : jb 0x20000128559 ; jmp 0x20000128537
0x000002000012b534 : jb 0x2000012b53d ; mov al, 1 ; ret
0x000002000012e2a4 : jb 0x2000012e283 ; ret
0x000002000012e2a3 : jb 0x2000012e284 ; ret
0x0000020000132eb2 : jb 0x20000132efb ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001337f7 : jb 0x200001337e4 ; ret
0x00000200001338aa : jb 0x20000133896 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000133b7d : jb 0x20000133b6d ; mov rax, r10 ; ret
0x00000200001341ae : jb 0x20000134197 ; mov rax, r10 ; ret
0x00000200001341ae : jb 0x20000134198 ; mov rax, r10 ; ret
0x0000020000135429 : jb 0x2000013541d ; ret
0x000002000013582f : jb 0x20000135821 ; ret
0x0000020000137c13 : jb 0x20000137aa5 ; or eax, 0xffffffff ; ret
0x000002000013d2c6 : jb 0x2000013d2cd ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000013fde0 : jb 0x2000013fdcb ; mov eax, 1 ; ret
0x00000200001468a9 : jb 0x20000146862 ; ret
0x000002000014f65e : jb 0x2000014f606 ; sbb al, byte ptr [rax] ; ret
0x0000020000012571 : jb 0x2000015abb4 ; xor eax, eax ; ret
0x000002000015cf8f : jb 0x2000015cf77 ; mov esi, 0x33487e35 ; ret 0xf48
0x0000020000167ed0 : jb 0x20000167e95 ; jmp 0x2000004412c
0x000002000011fe18 : jb 0x20000173f47 ; mov eax, r8d ; ret
0x0000020000196067 : jb 0x20000196054 ; ret 0xf3a5
0x0000020000196060 : jb 0x200001960df ; or al, byte ptr [rax + rcx*4 + 0x64] ; sbb byte ptr [rdx - 0x17], dh ; ret 0xf3a5
0x00000200001a1d69 : jb 0x200001a1d4b ; ret
0x0000020000132556 : jb 0x200001a484e ; xor eax, eax ; ret
0x00000200001ac0c8 : jb 0x200001ac0bf ; or eax, 0xffffffff ; ret
0x00000200001ac0f7 : jb 0x200001ac0ed ; xor eax, eax ; ret
0x00000200001ac11f : jb 0x200001ac115 ; xor eax, eax ; ret
0x00000200001b662a : jb 0x200001b661e ; mov eax, r8d ; add rsp, 0x28 ; ret
0x00000200001bf4ee : jb 0x200001bf4e3 ; mov al, 1 ; ret
0x00000200001c33fc : jb 0x200001c33f6 ; ret
0x00000200001c7e16 : jb 0x200001c7e80 ; mov rcx, rdi ; call 0x200000840a7
0x00000200001cb9a1 : jb 0x200001cb976 ; xor eax, eax ; ret
0x00000200001cec75 : jb 0x200001cec3d ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001d694f : jb 0x200001d6949 ; add rsp, 0x38 ; ret
0x00000200001e304b : jb 0x200001e3038 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001e7804 : jb 0x200001e7827 ; mov rcx, rsi ; lea edx, dword ptr [rbx + 3] ; call r9
0x00000200001e7aeb : jb 0x200001e7ad7 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f328d : jb 0x200001f3296 ; xor eax, eax ; ret
0x00000200001f3329 : jb 0x200001f3332 ; xor al, al ; ret
0x00000200001f4aad : jb 0x200001f4a80 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001f64a8 : jb 0x200001f64b1 ; xor al, al ; ret
0x00000200001f6f0b : jb 0x200001f6ef4 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001f7cf8 : jb 0x200001f7cd9 ; ret
0x00000200001f7e18 : jb 0x200001f7e12 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001f867e : jb 0x200001f866d ; mov rax, r8 ; ret
0x00000200001f869c : jb 0x200001f8691 ; mov al, 1 ; ret
0x00000200001f86b8 : jb 0x200001f86b1 ; mov al, 1 ; ret
0x00000200001f86fb : jb 0x200001f86d3 ; mov al, 1 ; ret
0x00000200001f8af6 : jb 0x200001f8aa3 ; jmp 0x200001f8b8c
0x0000020000202967 : jb 0x20000202960 ; xor eax, eax ; ret
0x0000020000203149 : jb 0x20000203149 ; jmp 0x2000020315f
0x0000020000206a03 : jb 0x200002069ef ; xor eax, eax ; ret
0x00000200002078da : jb 0x200002078e6 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200002157f6 : jb 0x200002157cb ; xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000021af97 : jb 0x2000021afa0 ; xor al, al ; ret
0x00000200002244c9 : jb 0x200002244d0 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200002254f3 : jb 0x200002254fa ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000228948 : jb 0x2000022894f ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000229fba : jb 0x20000229fc1 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000022ae60 : jb 0x2000022ae67 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000022f031 : jb 0x2000022f038 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200003cb48a : jb 0x200003cb461 ; mov rax, r8 ; ret
0x00000200003d826d : jb 0x200003d8263 ; mov eax, 1 ; ret
0x00000200003e0b6d : jb 0x200003e0b68 ; inc ebx ; add rax, 0x20 ; ret
0x00000200003eea6c : jb 0x200003eea8b ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003f2993 : jb 0x200003f29d2 ; xor eax, eax ; ret
0x00000200003f4dc5 : jb 0x200003f4dd6 ; and dword ptr [rcx], 0xfffffff ; ret
0x00000200003f7ad6 : jb 0x200003f7b54 ; ret
0x0000020000401d38 : jb 0x20000401d4b ; add rsp, 0x28 ; ret
0x00000200004049cc : jb 0x200004049e3 ; mov eax, edx ; ret
0x00000200004049cc : jb 0x200004049e4 ; mov eax, edx ; ret
0x0000020000405cd0 : jb 0x20000405cb5 ; mov eax, edx ; ret
0x0000020000405cd0 : jb 0x20000405cb6 ; mov eax, edx ; ret
0x0000020000413d28 : jb 0x20000413d35 ; mov eax, edx ; ret
0x0000020000413d22 : jb 0x20000413d36 ; bt ecx, 0x1b ; jb 0x20000413d3b ; mov eax, edx ; ret
0x0000020000413d28 : jb 0x20000413d36 ; mov eax, edx ; ret
0x000002000041bc60 : jb 0x2000041bc56 ; xor al, al ; ret
0x000002000041f1f0 : jb 0x2000041f1d8 ; ret
0x000002000044439e : jb 0x200004443b4 ; mov rax, r8 ; ret
0x000002000044c957 : jb 0x2000044c972 ; mov rax, r8 ; ret
0x000002000044f3d5 : jb 0x2000044f3c0 ; mov dword ptr [rcx + 0x7c], r8d ; ret
0x0000020000460691 : jb 0x2000046069f ; jmp 0x200004606ae
0x0000020000470463 : jb 0x20000470443 ; mov al, dl ; ret
0x0000020000470463 : jb 0x20000470444 ; mov al, dl ; ret
0x0000020000474b0a : jb 0x20000474b5d ; add esp, 0x48 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000475b9a : jb 0x20000475b90 ; xor eax, eax ; ret
0x000002000047e200 : jb 0x2000047e1f7 ; and eax, 0x1f ; ret
0x000002000048cac9 : jb 0x2000048cabe ; mov rax, r8 ; shr rax, 1 ; ret
0x00000200004991ca : jb 0x20000499164 ; ret 0x48ff
0x00000200004a7213 : jb 0x200004a722a ; add dh, dh ; ret
0x00000200004a860a : jb 0x200004a860b ; ret
0x00000200004bc912 : jb 0x200004bc929 ; add byte ptr [rbp - 0x75], al ; ret
0x00000200004bc92e : jb 0x200004bc945 ; add byte ptr [rcx - 0x75], al ; ret
0x00000200004bd8e6 : jb 0x200004bd881 ; ret
0x00000200004c96f6 : jb 0x200004c9749 ; ret 0x48ff
0x00000200004cb41a : jb 0x200004cb459 ; ret 0x84ff
0x00000200004cf01b : jb 0x200004cf00e ; jmp 0x200004ceef6
0x000002000058e626 : jb 0x2000050334d ; mov al, 2 ; ret
0x00000200005053c9 : jb 0x200005053dc ; jbe 0x200005053e0 ; mov eax, 1 ; ret
0x000002000050d6fe : jb 0x2000050d70c ; add bh, bh ; ret 0xfa83
0x00000200005151ca : jb 0x20000515181 ; ret 0x48ff
0x0000020000532097 : jb 0x20000532087 ; mov eax, 0xc0000001 ; ret
0x0000020000564365 : jb 0x20000564352 ; dec dword ptr [rax + 0x3b] ; ret 0x840f
0x000002000057b1e6 : jb 0x2000057b1a3 ; ret 0x44ff
0x0000020000585e26 : jb 0x20000585e01 ; cmc ; dec dword ptr [rax - 0x7d] ; ret 0x4838
0x00000200005a5bcb : jb 0x200005a5c1c ; mov ecx, edi ; call 0x200000c1e66
0x00000200005a5bca : jb 0x200005a5c1d ; mov ecx, edi ; call 0x200000c1e67
0x00000200005c8512 : jb 0x200005c8506 ; jmp qword ptr [rcx]
0x00000200005e2d99 : jb 0x200005e2d6b ; movzx eax, r8w ; ret
0x00000200005f150a : jb 0x200005f14fa ; xor al, al ; add rsp, 0x28 ; ret
0x00000200005f19ea : jb 0x200005f19d8 ; and dh, dh ; ret
0x00000200005f1ac0 : jb 0x200005f1aae ; cmc ; ret
0x00000200005f379e : jb 0x200005f376b ; xor al, al ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x00000200005f47e2 : jb 0x200005f4843 ; loop 0x200005f47ed ; add rsp, 0x68 ; ret
0x00000200005f8cab : jb 0x200005f8cba ; mov eax, 0xc0000189 ; ret
0x00000200005fd1c0 : jb 0x200005fd1c8 ; add al, al ; ret
0x00000200005fff9a : jb 0x200005fffae ; ret
0x00000200006198b9 : jb 0x20000619898 ; xor eax, eax ; ret
0x0000020000629e85 : jb 0x20000629e8e ; xor eax, eax ; ret
0x000002000062ad82 : jb 0x2000062ad66 ; mov rax, r9 ; add rsp, 0x28 ; ret
0x000002000062e170 : jb 0x2000062e167 ; xor al, al ; ret
0x0000020000652869 : jb 0x2000065283c ; mov al, 1 ; ret
0x00000200006574ad : jb 0x20000657497 ; xor ecx, ecx ; mov rax, rcx ; ret
0x000002000066346c : jb 0x200006633fb ; ret
0x0000020000666436 : jb 0x20000666442 ; add al, al ; add rsp, 0x38 ; ret
0x000002000066bae4 : jb 0x2000066ba76 ; ror byte ptr [rax - 0x7d], 1 ; ret 0x8902
0x000002000066bd54 : jb 0x2000066bd19 ; jmp 0x2000066bd5c
0x0000020000672543 : jb 0x20000672557 ; ret
0x000002000067615c : jb 0x2000067614f ; ret
0x00000200006763ee : jb 0x200006763da ; add rsp, 0x28 ; ret
0x00000200006763fe : jb 0x2000067640d ; mov eax, 0xc000000d ; ret
0x000002000067e383 : jb 0x2000067e355 ; xor eax, eax ; ret
0x0000020000686c3b : jb 0x20000686c2e ; or eax, 0xffffffff ; ret
0x0000020000687691 : jb 0x20000687683 ; ret
0x000002000068981e : jb 0x20000689829 ; mov dword ptr [r8], edx ; ret
0x0000020000691d92 : jb 0x20000691d79 ; ret
0x00000200006ab29f : jb 0x200006ab290 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006b39ef : jb 0x200006b39fe ; shr eax, 0xf ; and al, 1 ; ret
0x00000200006b3a1b : jb 0x200006b3a24 ; mov al, 1 ; ret
0x00000200006b6f12 : jb 0x200006b6f1b ; add byte ptr [rcx - 1], al ; ret
0x00000200006b7227 : jb 0x200006b7230 ; xor eax, eax ; ret
0x00000200006bb1f3 : jb 0x200006bb1e8 ; xor eax, eax ; ret
0x00000200006c0ae1 : jb 0x200006c0adb ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006c7a0a : jb 0x200006c7a13 ; xor eax, eax ; ret
0x00000200006ca954 : jb 0x200006ca967 ; or dword ptr [rip + 0x136b7], 0x10 ; ret
0x00000200006d7c0a : jb 0x200006d7bbd ; ret 0x4cff
0x000002000072c2c0 : jb 0x2000072c2c7 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200007320ec : jb 0x200007320f3 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000073308e : jb 0x20000733095 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000733e14 : jb 0x20000733e1b ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000734d82 : jb 0x20000734d89 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000735d26 : jb 0x20000735d2d ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000736c68 : jb 0x20000736c6f ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000748553 : jb 0x2000074853e ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200007547b2 : jb 0x20000754762 ; ret 0x44ff
0x0000020000760ece : jb 0x20000760ec2 ; ret
0x00000200007636c5 : jb 0x200007636bc ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000763e20 : jb 0x20000763dce ; ret
0x0000020000768202 : jb 0x200007681e7 ; ret
0x0000020000768201 : jb 0x200007681e8 ; ret
0x000002000076a826 : jb 0x2000076a815 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000785b93 : jb 0x20000785b74 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000028377 : jbe 0x20000028392 ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8944
0x000002000002bd2b : jbe 0x2000002bd3e ; mov eax, 1 ; ret
0x000002000003b534 : jbe 0x2000003b53d ; xor al, al ; ret
0x000002000003ea53 : jbe 0x2000003ea43 ; xor eax, eax ; ret
0x0000020000071412 : jbe 0x2000007137d ; jmp 0x200000713e4
0x00000200000790a9 : jbe 0x200000790b5 ; add qword ptr [rcx + 0x70], r8 ; ret
0x000002000008029d : jbe 0x200000802a8 ; xor eax, eax ; jmp 0x2000008026a
0x0000020000090707 : jbe 0x20000090714 ; add rsp, 0x38 ; ret
0x00000200000a8fc5 : jbe 0x200000a8fd0 ; add byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7b], r9b ; ret
0x00000200000b282d : jbe 0x200000b2836 ; xor eax, eax ; ret
0x00000200000c2c7a : jbe 0x200000c2c83 ; xor eax, eax ; ret
0x00000200000e2ce7 : jbe 0x200000e2ce3 ; xor eax, eax ; ret
0x00000200001202a7 : jbe 0x2000012029e ; add eax, -1 ; jne 0x200001202a6 ; ret
0x0000020000125376 : jbe 0x20000125386 ; lea eax, dword ptr [rcx - 0x13] ; mov dword ptr [r8], eax ; ret
0x000002000012c632 : jbe 0x2000012c623 ; cmp al, 0 ; add rsp, 0x38 ; ret
0x000002000012fdf4 : jbe 0x2000012fde9 ; mov dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x000002000013494b : jbe 0x20000134963 ; mov rdx, rsi ; mov rcx, rdi ; call r14
0x00000200001349a6 : jbe 0x200001349c9 ; mov rdx, rsi ; mov rcx, rdi ; call r14
0x00000200001349c6 : jbe 0x200001349de ; mov rdx, rsi ; mov rcx, rdi ; call r14
0x0000020000138486 : jbe 0x20000138491 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000006db8 : jbe 0x20000157db0 ; ret
0x000002000017d083 : jbe 0x2000017d07d ; ret
0x00000200001834ee : jbe 0x200001834d2 ; out dx, al ; dec dword ptr [rax + 0x3b] ; ret 0xc74
0x00000200001ac2c8 : jbe 0x200001ac2d7 ; mov eax, 1 ; ret
0x00000200001b263d : jbe 0x200001b264c ; mov eax, 0xc000000d ; ret
0x00000200001b9b06 : jbe 0x200001b9aa6 ; idiv edi ; add rsp, 0x68 ; ret
0x00000200001c3d4a : jbe 0x200001c3ce1 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200001c7d29 : jbe 0x200001c7d4e ; add byte ptr [rbx - 0x7cb7dba7], cl ; ret
0x00000200001cf106 : jbe 0x200001cf150 ; idiv bh ; add rsp, 0x58 ; ret
0x00000200001d3bf6 : jbe 0x200001d3c4c ; mov r8, r10 ; jmp 0x200001d3c4c
0x00000200001d94d8 : jbe 0x200001d948d ; mov eax, 1 ; ret
0x00000200001e463c : jbe 0x200001e4648 ; mov qword ptr [rcx + 0x10], rdx ; ret
0x00000200001eed38 : jbe 0x200001eed43 ; or eax, 0xffffffff ; ret
0x000002000020805b : jbe 0x2000020806a ; mov eax, 1 ; ret
0x000002000020805a : jbe 0x2000020806b ; mov eax, 1 ; ret
0x0000020000208059 : jbe 0x2000020806c ; mov eax, 1 ; ret
0x0000020000210003 : jbe 0x2000020fff2 ; add dword ptr [r10 + 0x14], edx ; xor eax, eax ; ret
0x0000020000216aa8 : jbe 0x20000216a2d ; xor al, al ; ret
0x0000020000218aad : jbe 0x20000218abc ; mov eax, 1 ; ret
0x000002000021bb57 : jbe 0x2000021bb6f ; add byte ptr [rbx + 0x440f48cf], cl ; ret 0x8d48
0x0000020000399e9e : jbe 0x20000399e92 ; ret
0x00000200003b9bd8 : jbe 0x200003b9bdb ; ret 0x1b9
0x00000200003b9bd7 : jbe 0x200003b9bdc ; ret 0x1b9
0x00000200003e167e : jbe 0x200003e162a ; ret
0x0000020000401878 : jbe 0x2000040187b ; ret 0x5489
0x000002000042d6cb : jbe 0x2000042d6de ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000438f44 : jbe 0x20000438f3a ; ret
0x0000020000477b19 : jbe 0x20000477b13 ; ret 0x7502
0x0000020000477b1e : jbe 0x20000477b18 ; ret 0x7520
0x000002000048a708 : jbe 0x2000048a66d ; jmp 0x200005b6956
0x000002000049a6a6 : jbe 0x2000049a721 ; ret 0x48ff
0x000002000049a986 : jbe 0x2000049a9a2 ; mov rcx, rsi ; call 0x200000c23c8
0x000002000049ae86 : jbe 0x2000049aefe ; ret
0x00000200004c40da : jbe 0x200004c40f5 ; adc byte ptr [rax], al ; call 0x200000ebe27
0x00000200004ecd62 : jbe 0x200004ecd6c ; xor ecx, ecx ; call rax
0x00000200004efbaa : jbe 0x200004efc26 ; ret 0x44ff
0x00000200004f10b0 : jbe 0x200004f1074 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004f454f : jbe 0x200004f455a ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x00000200004f454f : jbe 0x200004f455b ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x00000200004fd532 : jbe 0x200004fd4b9 ; ret
0x000002000050274a : jbe 0x20000502706 ; int1 ; dec dword ptr [rax - 0x75] ; salc ; call 0x200004ee981
0x00000200005053cb : jbe 0x200005053de ; mov eax, 1 ; ret
0x0000020000507c22 : jbe 0x20000507c05 ; ret 0x33ff
0x0000020000508206 : jbe 0x2000050818b ; ret
0x0000020000508206 : jbe 0x2000050818e ; ret
0x0000020000517d74 : jbe 0x20000517d81 ; mov edx, esi ; call 0x20000143367
0x000002000051b206 : jbe 0x2000051b25b ; ret 0xebff
0x000002000052aa46 : jbe 0x2000052aa94 ; ret 0x44ff
0x000002000053991f : jbe 0x200005398f8 ; inc dword ptr [rbp + 0x53880fdb] ; ret 9
0x000002000053c225 : jbe 0x2000053c207 ; inc dword ptr [rcx] ; ret
0x000002000058f6c8 : jbe 0x2000058f6c6 ; dec dword ptr [rax - 0x75] ; ret
0x00000200005ecea9 : jbe 0x200005ecebc ; test edx, edx ; sete cl ; mov eax, ecx ; ret
0x00000200005f6315 : jbe 0x200005f631e ; xor eax, eax ; ret
0x000002000060fb66 : jbe 0x2000060fb8b ; ret 0x48ff
0x0000020000613f65 : jbe 0x20000613f78 ; lea eax, dword ptr [r9 - 2] ; sub ax, dx ; jmp 0x20000613f8d
0x0000020000619886 : jbe 0x20000619895 ; mov eax, 0xc0000023 ; ret
0x00000200006198c6 : jbe 0x200006198d5 ; mov eax, 0xc000000d ; ret
0x00000200006251a0 : jbe 0x2000062518c ; xor eax, eax ; ret
0x0000020000625fcb : jbe 0x20000625f78 ; push rsi ; ret
0x0000020000626996 : jbe 0x20000626943 ; sar bh, 0x8b ; ret
0x000002000064a201 : jbe 0x2000064a1c0 ; mov edx, edi ; mov rcx, rbx ; call 0x200001f64a1
0x000002000065a15e : jbe 0x2000065a16d ; mov eax, 0x1e ; ret
0x00000200006876b5 : jbe 0x200006876c2 ; add cl, 8 ; ret
0x00000200006b5359 : jbe 0x200006b5365 ; mov qword ptr [rcx + 8], rax ; ret
0x00000200006b6fbf : jbe 0x200006b6f4e ; ret 0x3949
0x00000200006c2ec4 : jbe 0x200006c2ed5 ; mov dword ptr [rip + 0x1b1f4], eax ; ret
0x00000200006d76b6 : jbe 0x200006d7676 ; ret 0x45ff
0x00000200006d7bfe : jbe 0x200006d7bb1 ; ret 0x89ff
0x0000020000745196 : jbe 0x2000074512b ; ret
0x0000020000752ac9 : jbe 0x20000752adb ; movzx eax, r8w ; ret
0x0000020000002590 : je 0x200000025be ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000002a03 : je 0x20000002a31 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000002b3b : je 0x20000002b69 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000000368e : je 0x200000036bc ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000003787 : je 0x2000000377f ; xor al, al ; ret
0x0000020000003782 : je 0x20000003795 ; cmp dword ptr [r8], r9d ; je 0x20000003784 ; xor al, al ; ret
0x00000200000040dd : je 0x2000000410b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000004e26 : je 0x20000004e54 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000005736 : je 0x20000005764 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000006e21 : je 0x20000006e4f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000000722b : je 0x20000007259 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000075a3 : je 0x200000075b6 ; sub qword ptr [rip + 0x2f3c04], rdx ; ret
0x00000200000076f4 : je 0x20000007722 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000008216 : je 0x20000008244 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000008b32 : je 0x20000008b60 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000009cce : je 0x20000009cfc ; add rsp, 0x20 ; pop rdi ; ret
0x000002000000ab70 : je 0x2000000ab9b ; sbb byte ptr [rcx - 0x75], al ; ret
0x000002000000b3d4 : je 0x2000000b3f1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000000c1e5 : je 0x2000000c213 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000000d9d3 : je 0x2000000d9dc ; mov eax, ecx ; ret
0x000002000000d9cf : je 0x2000000d9e5 ; cmp al, 2 ; je 0x2000000d9e0 ; mov eax, ecx ; ret
0x000002000000f8e1 : je 0x2000000f8ab ; adc byte ptr [rax - 0x75], cl ; push rsp ; ret 0x4518
0x000002000001096c : je 0x2000001099a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000109ce : je 0x200000109e6 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000012d92 : je 0x20000012dc0 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000012f4b : je 0x20000012f79 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000132bc : je 0x200000132e7 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000013d9e : je 0x20000013dcc ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000013fca : je 0x20000013ff8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001401c : je 0x20000014042 ; mov rax, r8 ; ret
0x0000020000014fab : je 0x20000014fd9 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000001575a : je 0x20000015788 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001580e : je 0x2000001583c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000015d99 : je 0x20000015dc7 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000016770 : je 0x2000001679e ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000016a2d : je 0x20000016a5b ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000016f90 : je 0x20000016fbe ; jo 0x20000016fe4 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000018165 : je 0x20000018191 ; js 0x2000001815a ; xchg bh, bh ; ret 0x5489
0x0000020000018313 : je 0x20000018341 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000001884b : je 0x20000018838 ; mov al, 1 ; ret
0x000002000001892d : je 0x2000001895b ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000019ffe : je 0x2000001a02c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001a612 : je 0x2000001a640 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000001a6c8 : je 0x2000001a6f6 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001a99d : je 0x2000001a9cb ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001ac22 : je 0x2000001ac50 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001aed0 : je 0x2000001aefe ; add rsp, 0x30 ; pop rdi ; ret
0x000002000001b155 : je 0x2000001b183 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000001b2ee : je 0x2000001b31c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001b497 : je 0x2000001b4c5 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000001b79e : je 0x2000001b782 ; add rsp, 0x38 ; ret
0x000002000001bfb1 : je 0x2000001bfdf ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001c0a3 : je 0x2000001c0d1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001c1a3 : je 0x2000001c1d1 ; push 0x50c48348 ; pop rdi ; ret
0x000002000001e36c : je 0x2000001e39b ; push 0x40c48348 ; pop r15 ; ret
0x000002000001e5c7 : je 0x2000001e5f5 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000200ae : je 0x200000200bb ; mov word ptr [rcx], r11w ; ret
0x0000020000020255 : je 0x20000020283 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000020564 : je 0x20000020592 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000020844 : je 0x2000002084e ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200000210e6 : je 0x200000210e2 ; mov rax, qword ptr [rax + 8] ; ret
0x00000200000221dc : je 0x2000002220a ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000022420 : je 0x2000002244e ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000022e57 : je 0x20000022e85 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000023013 : je 0x20000023041 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000241f3 : je 0x20000024221 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000024a09 : je 0x20000024a37 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000024b84 : je 0x20000024baf ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000002533b : je 0x20000025369 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000026432 : je 0x20000026441 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000028da1 : je 0x20000028dcf ; add rsp, 0x30 ; pop rdi ; ret
0x000002000002ab9a : je 0x2000002abc8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002b683 : je 0x2000002b6b2 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000002bb58 : je 0x2000002bb87 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000002ccc9 : je 0x2000002ccd2 ; mov al, 1 ; ret
0x000002000002d531 : je 0x2000002d544 ; mov rax, qword ptr [rcx] ; and rax, 0xfffffffffffffffc ; ret
0x000002000002f0ac : je 0x2000002f0da ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002f36e : je 0x2000002f2fd ; ret 0x412b
0x000002000002f860 : je 0x2000002f88e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000311b9 : je 0x200000311c7 ; mov eax, 1 ; ret
0x000002000003185a : je 0x20000031823 ; call 0x1ffc3043c71
0x0000020000031859 : je 0x20000031824 ; call 0x1ffc3043c72
0x0000020000031b48 : je 0x20000031b53 ; and qword ptr [rcx], rax ; ret
0x0000020000031d19 : je 0x20000031d0e ; ret
0x0000020000031ff3 : je 0x20000032021 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000032246 : je 0x20000032274 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003246a : je 0x20000032468 ; mov rax, qword ptr [rdx + 0x40] ; ret
0x0000020000032481 : je 0x20000032490 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000328fb : je 0x2000003290a ; mov eax, 1 ; ret
0x0000020000032956 : je 0x20000032984 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000032da2 : je 0x20000032dd0 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000033e91 : je 0x20000033ebf ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000341e7 : je 0x20000034215 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000343eb : je 0x20000034419 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000036238 : je 0x20000036225 ; ret
0x000002000003733a : je 0x20000037368 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000037b9d : je 0x20000037baa ; mov rax, rcx ; ret
0x0000020000038ad4 : je 0x20000038b02 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000038f58 : je 0x20000038f86 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000039b50 : je 0x20000039b7e ; js 0x20000039ba4 ; add esp, 0x50 ; pop rdi ; ret
0x000002000003a934 : je 0x2000003a962 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003b07f : je 0x2000003b0c2 ; mov al, 1 ; ret
0x000002000003b3a0 : je 0x2000003b3ce ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003b405 : je 0x2000003b433 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003b4f1 : je 0x2000003b500 ; and qword ptr [rdx + 0x18], 0 ; ret
0x000002000003b7c8 : je 0x2000003b7f6 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003cc7f : je 0x2000003cc8e ; add rsp, 0x50 ; pop rbx ; ret
0x000002000003daac : je 0x2000003dada ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003e256 : je 0x2000003e284 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000003e36c : je 0x2000003e39a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003e444 : je 0x2000003e473 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003ea5d : je 0x2000003ea51 ; mov rax, r8 ; ret
0x000002000003f1f7 : je 0x2000003f20f ; add dh, dh ; ret
0x000002000003f422 : je 0x2000003f451 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003f8ab : je 0x2000003f8be ; lea rax, qword ptr [rdx + 0x880] ; ret
0x000002000003fd49 : je 0x2000003fd77 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003ff2c : je 0x2000003ff3c ; call 0x2000003ff69
0x000002000003ff43 : je 0x2000003ff53 ; call 0x2000000de0d
0x00000200000400e5 : je 0x20000040113 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000040264 : je 0x20000040271 ; add rsp, 0x28 ; ret
0x00000200000402c2 : je 0x200000402c7 ; ret
0x000002000004068c : je 0x200000406ba ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000407fa : je 0x20000040806 ; mov dl, 1 ; mov al, dl ; ret
0x00000200000407fa : je 0x20000040807 ; mov dl, 1 ; mov al, dl ; ret
0x0000020000040f10 : je 0x20000040f3e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004100c : je 0x20000041036 ; xor al, 0xf7 ; ret
0x000002000004133e : je 0x2000004136d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000041364 : je 0x20000041373 ; mov eax, 1 ; ret
0x0000020000041dce : je 0x20000041dfc ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000041e81 : je 0x20000041e90 ; mov eax, edx ; ret
0x0000020000041e81 : je 0x20000041e91 ; mov eax, edx ; ret
0x00000200000420af : je 0x200000420dd ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000425a7 : je 0x200000425d5 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000042a49 : je 0x20000042a77 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000042d8b : je 0x20000042d98 ; mov rax, qword ptr [rcx + 0x28] ; ret
0x000002000004330f : je 0x2000004333d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000043a84 : je 0x20000043ab2 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000043e41 : je 0x20000043e53 ; mov rdx, rbx ; mov rcx, r15 ; call rax
0x0000020000044074 : je 0x200000440a2 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000044134 : je 0x20000044162 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000442cd : je 0x200000442fc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000445ff : je 0x2000004460c ; add rsp, 0x28 ; ret
0x0000020000044c06 : je 0x20000044c34 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000046010 : je 0x2000004601e ; bts qword ptr [rcx], 0xc ; ret
0x0000020000046354 : je 0x20000046382 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000046d33 : je 0x20000046d61 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000047371 : je 0x2000004739f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000048265 : je 0x20000048293 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000048de4 : je 0x20000048e12 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000004a7ff : je 0x2000004a82d ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000004b47b : je 0x2000004b4a9 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000004b5ae : je 0x2000004b5bd ; mov eax, 1 ; ret
0x000002000004b65c : je 0x2000004b68b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000004c25f : je 0x2000004c253 ; xor al, al ; ret
0x000002000004d63f : je 0x2000004d655 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000004eb91 : je 0x2000004eb36 ; jmp 0x2000004eb5b
0x000002000004faf3 : je 0x2000004fb21 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004fd14 : je 0x2000004fd42 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000050181 : je 0x200000501af ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000005025e : je 0x20000050289 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000050f6a : je 0x20000050f98 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000051694 : je 0x20000051675 ; xor al, byte ptr [rax] ; ret
0x0000020000051a48 : je 0x20000051a55 ; lea rax, qword ptr [rdx - 0x20] ; ret
0x0000020000051bec : je 0x20000051bf4 ; ret
0x0000020000052a49 : je 0x20000052a77 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000534be : je 0x200000534b6 ; mov al, 1 ; ret
0x0000020000053738 : je 0x20000053766 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000537d8 : je 0x20000053806 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000053802 : je 0x2000005380f ; lock inc dword ptr [rcx + 0x28] ; ret
0x0000020000053c9c : je 0x20000053c93 ; mov al, 1 ; ret
0x000002000005487a : je 0x200000548c3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000054879 : je 0x200000548c4 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000056fa5 : je 0x20000056fd3 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000057ad0 : je 0x20000057afe ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000057dff : je 0x20000057e09 ; mov dword ptr [r8], eax ; ret
0x0000020000057f74 : je 0x20000057f80 ; mov dword ptr [rdx], r9d ; xor eax, eax ; ret
0x0000020000058552 : je 0x20000058580 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000058589 : je 0x200000585b7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000058606 : je 0x20000058613 ; mov rax, qword ptr [rax + 0x40] ; ret
0x00000200000585f1 : je 0x2000005861f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000005884d : je 0x2000005885a ; add rsp, 0x28 ; ret
0x000002000005937b : je 0x2000005937a ; mov rax, r9 ; ret
0x00000200000596fa : je 0x200000596f7 ; mov qword ptr [r9 + 0x618], rax ; ret
0x000002000005994b : je 0x20000059950 ; ret
0x000002000005a91d : je 0x2000005a94b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000005aa57 : je 0x2000005aa82 ; xor byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x000002000005b04b : je 0x2000005b079 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005bee9 : je 0x2000005bf17 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000005bf63 : je 0x2000005bf91 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005bffa : je 0x2000005c028 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005ca1d : je 0x2000005ca4b ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000005ccd4 : je 0x2000005cd02 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005d6c5 : je 0x2000005d6f3 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000005d73e : je 0x2000005d76c ; add rsp, 0x30 ; pop rdi ; ret
0x000002000005f966 : je 0x2000005f994 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000060ca7 : je 0x20000060cd5 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000061c93 : je 0x20000061cc1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000061ec0 : je 0x20000061ecd ; add rsp, 0x28 ; ret
0x00000200000635e7 : je 0x20000063616 ; and byte ptr [rbx], dh ; ror byte ptr [rcx - 0x77], 0x11 ; pop rdi ; ret
0x00000200000647dd : je 0x2000006480b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000064a84 : je 0x20000064ab0 ; and byte ptr [rdi + rcx + 0x47], al ; ret
0x000002000006663f : je 0x2000006666d ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000670d7 : je 0x20000067106 ; push 0x40c48348 ; pop r15 ; ret
0x000002000006710d : je 0x20000067139 ; xor byte ptr [rax - 0x75], cl ; iretd ; call rsi
0x0000020000068020 : je 0x2000006804f ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000068483 : je 0x200000684b1 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000068a58 : je 0x20000068a86 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000068b21 : je 0x20000068b4f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000069023 : je 0x20000069052 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000069585 : je 0x200000695b0 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000069e89 : je 0x20000069e8e ; ret
0x000002000006a024 : je 0x20000069fd5 ; or byte ptr [rbp - 0xd], dh ; xor eax, eax ; ret
0x000002000006a023 : je 0x20000069fd6 ; or byte ptr [rbp - 0xd], dh ; xor eax, eax ; ret
0x000002000006a03b : je 0x2000006a040 ; ret
0x000002000006a03b : je 0x2000006a043 ; ret
0x000002000006a1c7 : je 0x2000006a1d6 ; mov eax, 1 ; ret
0x000002000006a214 : je 0x2000006a26c ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x000002000006b009 : je 0x2000006b037 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000007145f : je 0x20000071458 ; jmp 0x2000017d746
0x0000020000072a72 : je 0x20000072aa0 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000017d881 : je 0x20000072ff9 ; mov qword ptr [r8], r10 ; ret
0x00000200000733f6 : je 0x2000007340b ; mov eax, ecx ; ret
0x00000200000734a2 : je 0x200000734d1 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000073f93 : je 0x20000073fc1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000017dbbd : je 0x20000073fed ; mov qword ptr [r8], r10 ; ret
0x00000200000740df : je 0x200000740b5 ; mov al, 1 ; ret
0x000002000007422b : je 0x20000074230 ; ret
0x00000200000742ea : je 0x20000074318 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000074583 : je 0x200000745b1 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000007475c : je 0x20000074761 ; ret
0x0000020000074768 : je 0x20000074765 ; mov eax, 0xc000000d ; ret
0x0000020000074ba0 : je 0x20000074bce ; add rsp, 0x20 ; pop rdi ; ret
0x000002000007501e : je 0x2000007504c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000075147 : je 0x20000075172 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000777fa : je 0x20000077828 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000077bd0 : je 0x20000077bfe ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000077c1b : je 0x20000077c49 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000077c38 : je 0x20000077c66 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000078ea4 : je 0x20000078ed2 ; jo 0x20000078ef8 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000079b89 : je 0x20000079bb7 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000079de5 : je 0x20000079e13 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000007af88 : je 0x2000007afb6 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000007b3f4 : je 0x2000007b422 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000007e746 : je 0x2000007e74f ; xor eax, eax ; ret
0x000002000007e741 : je 0x2000007e751 ; test rcx, rax ; je 0x2000007e754 ; xor eax, eax ; ret
0x000002000007e98b : je 0x2000007e999 ; cmp dword ptr [rax + 8], edx ; jne 0x2000007e99a ; ret
0x000002000007f4e3 : je 0x2000007f511 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000080495 : je 0x200000804c4 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000080903 : je 0x20000080912 ; call 0x2000009a5c8
0x00000200000814d8 : je 0x200000814e5 ; add rsp, 8 ; ret
0x00000200000818a8 : je 0x200000818b5 ; add rsp, 8 ; ret
0x0000020000081bf7 : je 0x20000081c25 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000822b5 : je 0x200000822c2 ; add rsp, 0x28 ; ret
0x0000020000082afd : je 0x20000082b11 ; test r8, r8 ; jne 0x20000082b0c ; ret
0x0000020000082c19 : je 0x20000082c26 ; mov rax, qword ptr [rcx + 0x18] ; ret
0x00000200000846a9 : je 0x200000846d7 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000085119 : je 0x20000085147 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000112cca : je 0x20000085e5b ; jmp rax
0x0000020000085ed6 : je 0x20000085ec9 ; mov eax, 2 ; ret
0x0000020000085eb9 : je 0x20000085ee1 ; dec eax ; cmp eax, 2 ; jl 0x20000085ecc ; ret
0x00000200000867d5 : je 0x200000867de ; xor eax, eax ; ret
0x0000020000087e9e : je 0x20000087ecc ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000088ea3 : je 0x20000088ed1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000008c844 : je 0x2000008c7e3 ; lea rcx, qword ptr [rsp + 0x40] ; call rax
0x000002000009052c : je 0x200000904f7 ; or byte ptr [rax - 0x73], cl ; pop rsi ; dec dword ptr [rax - 0x75] ; ret
0x0000020000099152 : je 0x2000009910a ; xor eax, eax ; ret
0x000002000009a4f9 : je 0x2000009a527 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000009a595 : je 0x2000009a5b8 ; test al, 2 ; jne 0x2000009a5b8 ; or eax, 0x18 ; ret
0x000002000009a649 : je 0x2000009a677 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000009b3f7 : je 0x2000009b411 ; xor eax, eax ; ret
0x000002000009b6bf : je 0x2000009b6ed ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000a240c : je 0x200000a243a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000a54ba : je 0x200000a54ca ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000200000b01aa : je 0x200000b01d8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b0b7a : je 0x200000b0ba8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b1427 : je 0x200000b1456 ; pop rax ; add rsp, 0x78 ; pop rdi ; pop rbx ; ret
0x00000200000b2121 : je 0x200000b214f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b2da4 : je 0x200000b2dd2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b3efa : je 0x200000b3f28 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b3fa7 : je 0x200000b3fd5 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b6ece : je 0x200000b6edd ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b6ecd : je 0x200000b6ede ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b75e7 : je 0x200000b75e7 ; mov eax, 1 ; ret
0x00000200000b814e : je 0x200000b817c ; add rsp, 0x20 ; pop rsi ; ret
0x00000200000b87e2 : je 0x200000b8810 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b8cbd : je 0x200000b8ceb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ba95b : je 0x200000ba989 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000baaa1 : je 0x200000baad0 ; pop rax ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x00000200000bab2b : je 0x200000bab22 ; cmp rdx, rax ; ja 0x200000bab27 ; ret
0x00000200000bc7c3 : je 0x200000bc7ce ; mov eax, dword ptr [rax + 8] ; ret
0x00000200000bca6f : je 0x200000bcae1 ; lea rdx, qword ptr [rdi + 0x10] ; call r8
0x00000200000bcc80 : je 0x200000bcc85 ; ret
0x00000200000bcc62 : je 0x200000bcc90 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bd986 : je 0x200000bd94f ; or cl, al ; out dx, al ; add ch, bl ; ret 0x8b48
0x00000200000bf60e : je 0x200000bf61b ; add rsp, 0x28 ; ret
0x00000200000c190e : je 0x200000c18ed ; mov al, 1 ; ret
0x00000200000c18e7 : je 0x200000c18f0 ; xor al, al ; ret
0x00000200000c1e99 : je 0x200000c1ec7 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c2052 : je 0x200000c2080 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c2120 : je 0x200000c212d ; add rsp, 0x28 ; ret
0x00000200000c23f9 : je 0x200000c2427 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c2ba7 : je 0x200000c2bb4 ; add rsp, 0x28 ; ret
0x00000200000c2c4b : je 0x200000c2c5a ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000c7a37 : je 0x200000c7a44 ; add rsp, 0x28 ; ret
0x00000200000c8553 : je 0x200000c8581 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c8da2 : je 0x200000c8dd0 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c8dd0 : je 0x200000c8dfe ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000cc6d5 : je 0x200000cc703 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000ccc23 : je 0x200000ccc52 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000ccd70 : je 0x200000ccd9e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000d3086 : je 0x200000d30b1 ; sbb byte ptr [rcx + 0x3b], al ; ret
0x00000200000d39ce : je 0x200000d39be ; mov eax, 2 ; ret
0x00000200000d39f0 : je 0x200000d39f9 ; xor al, al ; ret
0x00000200000d5e38 : je 0x200000d5e66 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000d65b2 : je 0x200000d65e0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000d8289 : je 0x200000d828a ; mov eax, 1 ; ret
0x00000200000d8e21 : je 0x200000d8e50 ; push rax ; add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x00000200000d95eb : je 0x200000d95d7 ; mov eax, 1 ; ret
0x00000200000daf7e : je 0x200000daf92 ; mov eax, r8d ; ret
0x00000200000dbbc6 : je 0x200000dbbcb ; ret
0x00000200000dc54c : je 0x200000dc535 ; mov al, 1 ; ret
0x00000200000dc52f : je 0x200000dc538 ; xor al, al ; ret
0x00000200000dc5de : je 0x200000dc60c ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000dc64a : je 0x200000dc65a ; mov rcx, qword ptr [rsp + 0x78] ; call rax
0x00000200000dc6a3 : je 0x200000dc681 ; mov rcx, qword ptr [rsp + 0x78] ; call rax
0x00000200000dc686 : je 0x200000dc6b4 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000dc998 : je 0x200000dc9c6 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000df6b7 : je 0x200000df6e5 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000df856 : je 0x200000df884 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000df953 : je 0x200000df981 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e27ab : je 0x200000e27d9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e3c2e : je 0x200000e3c5c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e4542 : je 0x200000e454b ; mov al, 1 ; ret
0x00000200000e4a0d : je 0x200000e4a1b ; mov rcx, qword ptr [r14 + 8] ; call rax
0x00000200000e4afd : je 0x200000e4b2b ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e5a1e : je 0x200000e5a49 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000e5b40 : je 0x200000e5b6e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e5c0d : je 0x200000e5c3b ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e656a : je 0x200000e6598 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e6680 : je 0x200000e66ae ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e72bc : je 0x200000e72cf ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000e7829 : je 0x200000e7857 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e7a9c : je 0x200000e7aca ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e7d05 : je 0x200000e7d33 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e7e56 : je 0x200000e7e84 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e7e7f : je 0x200000e7ead ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e80dd : je 0x200000e810b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e87db : je 0x200000e8809 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e93be : je 0x200000e93ec ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e93fe : je 0x200000e9407 ; xor al, al ; ret
0x00000200000e9407 : je 0x200000e9410 ; mov al, 1 ; ret
0x00000200000e9b04 : je 0x200000e9b32 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000e9dee : je 0x200000e9e01 ; movsx eax, byte ptr [rcx + 0xc3] ; ret
0x00000200000ea7ef : je 0x200000ea7e2 ; xor al, al ; ret
0x00000200000ea7ee : je 0x200000ea7e3 ; xor al, al ; ret
0x00000200000ea7e2 : je 0x200000ea7f5 ; mov al, 1 ; ret
0x00000200000eb2ef : je 0x200000eb31d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000eb50b : je 0x200000eb518 ; mov qword ptr [r8], rcx ; mov al, r9b ; ret
0x00000200000eb5c4 : je 0x200000eb5d3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000eb7b6 : je 0x200000eb7e4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ebbc6 : je 0x200000ebc3d ; mov r8, rbx ; mov rcx, rsi ; call r14
0x00000200000ebd1c : je 0x200000ebd4a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ec3f9 : je 0x200000ec427 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000edaa8 : je 0x200000edad6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000edd9b : je 0x200000edda0 ; ret
0x00000200000ede52 : je 0x200000ede80 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ee567 : je 0x200000ee595 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000ee78c : je 0x200000ee7ba ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000ee913 : je 0x200000ee941 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000eea79 : je 0x200000eeaa7 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000eef3e : je 0x200000eef46 ; call rcx
0x00000200000eefa0 : je 0x200000eefa9 ; mov al, 1 ; ret
0x00000200000ef2be : je 0x200000ef2ec ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f0e82 : je 0x200000f0eb0 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f0eda : je 0x200000f0f08 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f0fd4 : je 0x200000f1002 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f1151 : je 0x200000f115b ; add eax, dword ptr [rdx + 0x68] ; ret
0x00000200000f1825 : je 0x200000f182d ; mov eax, edx ; ret
0x00000200000f1825 : je 0x200000f182e ; mov eax, edx ; ret
0x00000200000f3a28 : je 0x200000f3a56 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f3fa5 : je 0x200000f3fd3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f4eb6 : je 0x200000f4ee4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f507d : je 0x200000f50ab ; js 0x200000f50d1 ; add esp, 0x50 ; pop rbp ; ret
0x00000200000f52e2 : je 0x200000f5310 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f6a4b : je 0x200000f6a79 ; push 0x50c48348 ; pop rdi ; ret
0x00000200000f6b2c : je 0x200000f6b5a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f7980 : je 0x200000f79ae ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f7c6e : je 0x200000f7c78 ; mov dword ptr [r8], r9d ; ret
0x00000200000f8c43 : je 0x200000f8c71 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f8d2e : je 0x200000f8d5c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f97fd : je 0x200000f9828 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000fa9f8 : je 0x200000faa26 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000feff8 : je 0x200000ff026 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000ff098 : je 0x200000ff0a5 ; and dword ptr [rdx + 0x18], 0 ; ret
0x0000020000102432 : je 0x20000102460 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000102cc9 : je 0x20000102cf7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000102e8f : je 0x20000102ebd ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000103738 : je 0x20000103767 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000010533e : je 0x2000010536c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000105415 : je 0x20000105443 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001054c6 : je 0x200001054f4 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000106349 : je 0x20000106377 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001066bf : je 0x200001066ea ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000010698b : je 0x20000106972 ; jmp 0x20000106955
0x000002000010697e : je 0x200001069ac ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001072b7 : je 0x200001072e2 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001075b8 : je 0x200001075e6 ; push 0x40c48348 ; pop rdi ; ret
0x00000200001080a7 : je 0x200001080d5 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000108552 : je 0x20000108580 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000109eee : je 0x20000109f1c ; add rsp, 0x30 ; pop rdi ; ret
0x000002000010b113 : je 0x2000010b141 ; push 0x50c48348 ; pop rdi ; ret
0x000002000010b36a : je 0x2000010b376 ; mov dword ptr [r8], ecx ; mov eax, edx ; ret
0x000002000010b391 : je 0x2000010b39d ; xor edx, edx ; call r8
0x000002000010b3b9 : je 0x2000010b3bf ; call rdx
0x000002000010babd : je 0x2000010baeb ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010bb52 : je 0x2000010bb80 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010bc69 : je 0x2000010bc97 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000010c267 : je 0x2000010c295 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000010c4d1 : je 0x2000010c4e3 ; xchg qword ptr [rip + 0x1c07ae], rax ; ret
0x000002000010c4ef : je 0x2000010c4f7 ; jmp r8
0x000002000010de54 : je 0x2000010de5c ; inc eax ; ret
0x000002000010de6c : je 0x2000010de74 ; inc eax ; ret
0x000002000010dfe2 : je 0x2000010e010 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010e1da : je 0x2000010e208 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000010f8d4 : je 0x2000010f902 ; jo 0x2000010f928 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000110b16 : je 0x20000110b2b ; mov rax, rdx ; ret
0x0000020000110b16 : je 0x20000110b2c ; mov rax, rdx ; ret
0x0000020000110df0 : je 0x20000110dff ; cmp byte ptr [rcx + 0x21], al ; jne 0x20000110dff ; ret
0x00000200001129ee : je 0x200001129ff ; mov eax, dword ptr [rip + 0x26b682] ; ret
0x0000020000113202 : je 0x20000113232 ; mov eax, 0xc00000bb ; ret
0x0000020000113fea : je 0x20000114018 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000114064 : je 0x20000114092 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000114258 : je 0x20000114286 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001142b5 : je 0x200001142fb ; test eax, eax ; jns 0x200001142c8 ; mov r8d, r10d ; jmp 0x2000011428d
0x000002000011596b : je 0x20000115999 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000115b95 : je 0x20000115bc3 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000115bc8 : je 0x20000115bcd ; ret
0x0000020000115c4b : je 0x20000115c79 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000115c95 : je 0x20000115cc3 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000115ea7 : je 0x20000115ed5 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000115f15 : je 0x20000115f43 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011634d : je 0x2000011635e ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001165a8 : je 0x200001165d6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000116be7 : je 0x20000116c15 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000116c7d : je 0x20000116c90 ; sbb eax, eax ; and eax, 2 ; dec eax ; ret
0x000002000011714e : je 0x2000011717c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001177ef : je 0x2000011781d ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000117e91 : je 0x20000117ebf ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011b796 : je 0x2000011b7c4 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011b88a : je 0x2000011b8b8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011bad9 : je 0x2000011bb07 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000011bba9 : je 0x2000011bbd7 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011bffc : je 0x2000011c02a ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011c07f : je 0x2000011c0ad ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011c1f3 : je 0x2000011c221 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011c4df : je 0x2000011c4f2 ; mov al, r9b ; add rsp, 0x28 ; ret
0x000002000011c51c : je 0x2000011c521 ; ret
0x000002000011cc68 : je 0x2000011cc77 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011cda9 : je 0x2000011cdd7 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011ce60 : je 0x2000011ce8e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011dd82 : je 0x2000011ddb0 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011e7cb : je 0x2000011e7d8 ; mov rax, qword ptr [rax + 0x48] ; ret
0x000002000011ec5c : je 0x2000011ec8a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011f181 : je 0x2000011f1af ; cmp byte ptr [rbx], bh ; int1 ; jb 0x2000011f1d5 ; inc edx ; jmp 0x2000011f16f
0x000002000011f98c : je 0x2000011f9ba ; mov rcx, qword ptr [rbx + 0xa8] ; call rax
0x000002000011fc1d : je 0x2000011fc4b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000011fcfc : je 0x2000011fd2a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011ff42 : je 0x2000011ff70 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000120538 : je 0x20000120567 ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000120af3 : je 0x20000120bf5 ; xor edx, edx ; jmp 0x20000120ac9
0x0000020000122f4d : je 0x20000122f7b ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000123b39 : je 0x20000123b67 ; js 0x20000123b8d ; add esp, 0x50 ; pop rdi ; ret
0x000002000012401a : je 0x20000124048 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000124396 : je 0x2000012439c ; call rcx
0x0000020000124686 : je 0x200001246b4 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000124e18 : je 0x20000124e46 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000125213 : je 0x20000125241 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000019ea09 : je 0x20000125280 ; call rdx
0x000002000012532a : je 0x20000125358 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000125c07 : je 0x20000125c18 ; mov byte ptr [rcx], 0 ; mov eax, r8d ; ret
0x0000020000127b04 : je 0x20000127b0e ; xor ecx, ecx ; call rdx
0x00000200001286c4 : je 0x200001286f2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000012914c : je 0x20000129159 ; add rsp, 0x28 ; ret
0x000002000012a3df : je 0x2000012a3f0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000012a4f9 : je 0x2000012a512 ; call rcx
0x000002000012a568 : je 0x2000012a593 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000012a7c6 : je 0x2000012a7f4 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013060d : je 0x2000013061a ; add rsp, 0x28 ; ret
0x00000200001a3fbb : je 0x20000130fb7 ; call rax
0x0000020000130f91 : je 0x20000130fbf ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001314bc : je 0x200001314ea ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000131b38 : je 0x20000131b66 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000131ca6 : je 0x20000131cae ; jmp r8
0x0000020000132154 : je 0x20000132182 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013344b : je 0x2000013345a ; test dh, dh ; jne 0x200001333e2 ; xor rax, rax ; ret
0x0000020000133aa8 : je 0x20000133a83 ; sub r8d, ecx ; mov eax, r8d ; ret
0x0000020000133b1f : je 0x20000133af4 ; sub r9d, ecx ; mov eax, r9d ; ret
0x000002000013406b : je 0x20000134099 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013461a : je 0x20000134648 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013501f : je 0x2000013502d ; test dh, dh ; jne 0x20000134fb8 ; xor eax, eax ; ret
0x00000200001356e8 : je 0x200001356dc ; test eax, eax ; jns 0x200001356fb ; or eax, 0xffffffff ; ret
0x0000020000136ca0 : je 0x20000136cce ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001375c0 : je 0x200001375ee ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000137fbd : je 0x20000137feb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001380ab : je 0x200001380d9 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000013832e : je 0x2000013835c ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000138439 : je 0x20000138467 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001385f6 : je 0x20000138624 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000138719 : je 0x20000138747 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001389dd : je 0x20000138a0b ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001391e8 : je 0x20000139216 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013a42a : je 0x2000013a458 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013a500 : je 0x2000013a52e ; js 0x2000013a554 ; add esp, 0x60 ; pop rdi ; ret
0x000002000013b040 : je 0x2000013b04d ; or dword ptr [r8], 0xffffffff ; ret
0x000002000013fa1b : je 0x2000013f9cf ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000014603c : je 0x2000014604a ; mov rcx, qword ptr [rsi + 0x50] ; jmp rcx
0x00000200001479fe : je 0x20000147a09 ; call 0x200001c3c38
0x00000200001553c4 : je 0x200001553d3 ; mov rcx, qword ptr [rcx + 8] ; call rax
0x0000020000156839 : je 0x20000156863 ; and al, ch ; call rax
0x000002000015a9f2 : je 0x2000015aa1d ; and byte ptr [rbp - 0x75], cl ; ret 0x4bba
0x00000200001636bf : je 0x200001636ce ; bts dword ptr [rcx + 8], 0x19 ; ret
0x0000020000167dd4 : je 0x20000167de3 ; mov eax, 0xc00000bb ; ret
0x000002000016d464 : je 0x2000016d46a ; call rax
0x000002000010542e : je 0x2000016d68e ; ret
0x00000200001099c8 : je 0x2000016ea92 ; call rax
0x000002000016ff79 : je 0x2000016ff85 ; mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x000002000011e807 : je 0x20000173937 ; mov rax, rcx ; ret
0x000002000007065a : je 0x2000017d2b4 ; ret
0x000002000017d643 : je 0x2000017d62d ; mov rax, rcx ; ret
0x00000200000875a3 : je 0x200001821b2 ; mov al, 1 ; ret
0x0000020000192542 : je 0x20000192548 ; call rax
0x0000020000193708 : je 0x20000193722 ; mov rcx, qword ptr [rbx + 0x30] ; call 0x200000bf968
0x000002000019bdfa : je 0x2000019be09 ; mov eax, 0xc00000bb ; ret
0x000002000019e9e4 : je 0x2000019e9f9 ; lea rcx, qword ptr [rsp + 0x30] ; call rax
0x00000200001256ac : je 0x2000019f1b6 ; mov ecx, esi ; call rax
0x0000020000117d48 : je 0x200001a23e6 ; xor eax, eax ; ret
0x00000200001a54e7 : je 0x200001a5515 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001a5757 : je 0x200001a5786 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001a5b51 : je 0x200001a5b7f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001a6127 : je 0x200001a6155 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001a6674 : je 0x200001a66a2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001a683e : je 0x200001a6869 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001a7654 : je 0x200001a7682 ; push 0x50c48348 ; pop rdi ; ret
0x00000200001a7736 : je 0x200001a7744 ; mov eax, 0xc000000d ; ret
0x00000200001a8e3a : je 0x200001a8e46 ; mov qword ptr [r9], r10 ; xor al, al ; ret
0x00000200001a8e45 : je 0x200001a8e51 ; mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x00000200001a9522 : je 0x200001a9550 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001a967a : je 0x200001a96a8 ; push 0x50c48348 ; pop rdi ; ret
0x00000200001a9700 : je 0x200001a972e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001a9922 : je 0x200001a9950 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001a996c : je 0x200001a9976 ; mov dl, 1 ; mov al, dl ; ret
0x00000200001a9982 : je 0x200001a9994 ; cmp qword ptr [rcx + 0x30], rax ; setne al ; ret
0x00000200001a9b64 : je 0x200001a9b76 ; in al, dx ; dec esp ; add rsp, 0x28 ; ret
0x00000200001aa538 : je 0x200001aa566 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001aaaad : je 0x200001aaadb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ab2eb : je 0x200001ab319 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001ab694 : je 0x200001ab69f ; mov rax, rcx ; ret
0x00000200001ab754 : je 0x200001ab782 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001ab774 : je 0x200001ab783 ; or eax, 0xc0350000 ; ret
0x00000200001ab7d7 : je 0x200001ab7d3 ; mov eax, dword ptr [rax + 4] ; add rsp, 0x28 ; ret
0x00000200001ac0a2 : je 0x200001ac0ab ; mov eax, ecx ; ret
0x00000200001ac42a : je 0x200001ac432 ; call rax
0x00000200001ac4c8 : je 0x200001ac4ce ; sti ; ret
0x00000200001acf32 : je 0x200001acf60 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001ad358 : je 0x200001ad368 ; mov ecx, 1 ; mov al, cl ; ret
0x00000200001ad377 : je 0x200001ad37f ; call r9
0x00000200001af05a : je 0x200001af088 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001af102 : je 0x200001af130 ; jo 0x200001af156 ; add esp, 0x50 ; pop rdi ; ret
0x00000200001afb76 : je 0x200001afba4 ; js 0x200001afbca ; add esp, 0x60 ; pop rdi ; ret
0x00000200001b1a23 : je 0x200001b1a51 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001b29df : je 0x200001b29e5 ; call rcx
0x00000200001b2a02 : je 0x200001b2a08 ; call rcx
0x00000200001b2a23 : je 0x200001b2a29 ; call rax
0x00000200001b2a3f : je 0x200001b2a47 ; jmp rcx
0x00000200001b2a5f : je 0x200001b2a65 ; call rax
0x00000200001b2a8e : je 0x200001b2a96 ; jmp rcx
0x00000200001b2ab2 : je 0x200001b2aba ; jmp rdx
0x00000200001b2ada : je 0x200001b2ae0 ; call rax
0x00000200001b2afe : je 0x200001b2b04 ; call rcx
0x00000200001b2b1b : je 0x200001b2b23 ; jmp rcx
0x00000200001b2b3b : je 0x200001b2b41 ; call rax
0x00000200001b2b57 : je 0x200001b2b5f ; jmp rdx
0x00000200001b3122 : je 0x200001b3150 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001b4593 : je 0x200001b45c2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001b46f9 : je 0x200001b4727 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001b5df8 : je 0x200001b5e26 ; js 0x200001b5e4c ; add esp, 0x60 ; pop rdi ; ret
0x00000200001b694f : je 0x200001b697d ; js 0x200001b69a3 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001b72b6 : je 0x200001b72e4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001b7bd4 : je 0x200001b7c03 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001b7c8b : je 0x200001b7cb9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001b830e : je 0x200001b8320 ; mov qword ptr [rax + 0x678], rdx ; ret
0x00000200001b879f : je 0x200001b87cd ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001b8a5c : je 0x200001b8a8a ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001b9660 : je 0x200001b968e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001baf0e : je 0x200001baf3d ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001baff6 : je 0x200001bb024 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001bb25a : je 0x200001bb288 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001bb385 : je 0x200001bb3b3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001bb5f8 : je 0x200001bb627 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001bb756 : je 0x200001bb784 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001bb9a6 : je 0x200001bb9b5 ; add rcx, -0x10 ; mov rax, rcx ; ret
0x00000200001bbb55 : je 0x200001bbb83 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001bc2b2 : je 0x200001bc2e0 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001bc454 : je 0x200001bc482 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001bc76d : je 0x200001bc79b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001be357 : je 0x200001be3ab ; mov rcx, qword ptr [rcx + 0x2990] ; call rax
0x00000200001beb8b : je 0x200001bebb9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001bed6c : je 0x200001bed9a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001bee25 : je 0x200001bee53 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001beeee : je 0x200001beefd ; mov eax, 0xc0000354 ; ret
0x00000200001bef36 : je 0x200001bef46 ; mov dword ptr [rcx], r10d ; ret
0x00000200001bf21b : je 0x200001bf249 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001bf317 : je 0x200001bf345 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001bfbc6 : je 0x200001bfbcf ; xor eax, eax ; ret
0x00000200001c0883 : je 0x200001c08b1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c0b3c : je 0x200001c0b67 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001c0cea : je 0x200001c0d09 ; mov rax, qword ptr [rax + 8] ; call rax
0x00000200001c116f : je 0x200001c117e ; mov eax, 0xc0000225 ; ret
0x00000200001c3285 : je 0x200001c32b3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c3efb : je 0x200001c3f29 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c4589 : je 0x200001c45b7 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001c4a39 : je 0x200001c4a67 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c53b0 : je 0x200001c53de ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c5479 : je 0x200001c548c ; lea rax, qword ptr [rcx + 0x778] ; ret
0x00000200001c5497 : je 0x200001c54aa ; mov rax, qword ptr [rcx + 0x778] ; ret
0x00000200001c5a68 : je 0x200001c5a96 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c5af0 : je 0x200001c5b1e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c72c2 : je 0x200001c72f0 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c76ec : je 0x200001c76f7 ; or dl, 0x10 ; mov al, dl ; ret
0x00000200001c76ec : je 0x200001c76f8 ; or dl, 0x10 ; mov al, dl ; ret
0x00000200001c98ac : je 0x200001c98da ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001c98e3 : je 0x200001c98f7 ; mov r8, qword ptr [r8 + 0x10] ; mov rcx, qword ptr [rbx] ; call rax
0x00000200001c9e0d : je 0x200001c9e3b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c9e81 : je 0x200001c9eaf ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c9f17 : je 0x200001c9f45 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001ca10b : je 0x200001ca139 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001ca264 : je 0x200001ca292 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001cb90d : je 0x200001cb93b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001cbc6a : je 0x200001cbc98 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001cc099 : je 0x200001cc0c7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001cff99 : je 0x200001cffc7 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001d0267 : je 0x200001d0295 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001d1b10 : je 0x200001d1b3e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d1f58 : je 0x200001d1f86 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001d7315 : je 0x200001d7326 ; mov r14, rbx ; mov r8d, r10d ; jmp 0x200001d7330
0x00000200001d7a76 : je 0x200001d7aa4 ; js 0x200001d7aca ; add esp, 0x60 ; pop rdi ; ret
0x00000200001d7c19 : je 0x200001d7c2a ; inc dword ptr [rax + 0x1e88] ; ret
0x00000200001d7c9e : je 0x200001d7ccc ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001d7d8f : je 0x200001d7dbd ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001d7efa : je 0x200001d7f28 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001d8456 : je 0x200001d8484 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001d8fcd : je 0x200001d8ffb ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001db361 : je 0x200001db362 ; mov eax, 1 ; ret
0x00000200001dd637 : je 0x200001dd641 ; add rax, rax ; ret
0x00000200001de7de : je 0x200001de80c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001df3af : je 0x200001df3dd ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001df424 : je 0x200001df452 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e1132 : je 0x200001e1161 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001e11d5 : je 0x200001e1203 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e1716 : je 0x200001e1745 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001e1b8c : je 0x200001e1bba ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e222c : je 0x200001e2242 ; and qword ptr [rcx], rdx ; ret
0x00000200001e2235 : je 0x200001e2245 ; mov eax, dword ptr [rdx + 4] ; mov qword ptr [rcx], rax ; ret
0x00000200001e2495 : je 0x200001e24c3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e26e4 : je 0x200001e26ed ; dec eax ; ret
0x00000200001e26c9 : je 0x200001e26f8 ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x00000200001e384e : je 0x200001e3835 ; shr eax, 0x18 ; ret
0x00000200001e3984 : je 0x200001e39b2 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e55fa : je 0x200001e5628 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e5f70 : je 0x200001e5f9e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e66e7 : je 0x200001e66f6 ; mov eax, 0xc00000bb ; ret
0x00000200001e7978 : je 0x200001e79a6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001e79a7 : je 0x200001e79dc ; mov r8, rdx ; lea edx, dword ptr [rbx + 0x1e] ; call r9
0x00000200001e7e78 : je 0x200001e7ea6 ; js 0x200001e7ecc ; add esp, 0x50 ; pop rdi ; ret
0x00000200001e8794 : je 0x200001e87c2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001e8cd6 : je 0x200001e8ca7 ; adc byte ptr [rdi + rax - 1], dh ; ret 0x3b41
0x00000200001eed24 : je 0x200001eed34 ; mov ecx, 1 ; mov eax, ecx ; ret
0x00000200001f0049 : je 0x200001f0078 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001f04b6 : je 0x200001f04e4 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001f09ec : je 0x200001f0a1a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f0b0b : je 0x200001f0b1a ; mov eax, 0xc000000d ; ret
0x00000200001f0cb6 : je 0x200001f0ce4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f0e88 : je 0x200001f0e94 ; mov rcx, rbp ; call rax
0x00000200001f0ef9 : je 0x200001f0eee ; test rcx, rcx ; jne 0x200001f0ef1 ; xor al, al ; ret
0x00000200001f0f15 : je 0x200001f0f1e ; xor al, al ; ret
0x00000200001f110c : je 0x200001f113a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001f1946 : je 0x200001f1974 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f19c2 : je 0x200001f19f0 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001f2986 : je 0x200001f29b4 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001f2a56 : je 0x200001f2a84 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f2b06 : je 0x200001f2b34 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f3028 : je 0x200001f3056 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f31ce : je 0x200001f31d7 ; xor al, al ; ret
0x00000200001f31de : je 0x200001f31e1 ; cmp ecx, 1 ; setle al ; ret
0x00000200001f4cb4 : je 0x200001f4cc3 ; ret 0x1a8
0x00000200001f4cb3 : je 0x200001f4cc4 ; ret 0x1a8
0x00000200001f6260 : je 0x200001f6269 ; xor al, al ; ret
0x00000200001f6719 : je 0x200001f6747 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f6a49 : je 0x200001f6a77 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f6b30 : je 0x200001f6b5e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f6e0c : je 0x200001f6e3a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f6f60 : je 0x200001f6f8e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f7227 : je 0x200001f7255 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f7802 : je 0x200001f77ee ; xor al, al ; ret
0x00000200001f98fd : je 0x200001f990e ; inc rdi ; inc rdx ; jmp 0x200001f993b
0x00000200001fbce2 : je 0x200001fbd10 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fc670 : je 0x200001fc69e ; js 0x200001fc6c4 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001fc76b : je 0x200001fc79a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001fd2f1 : je 0x200001fd31f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fd639 : je 0x200001fd668 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001fdb16 : je 0x200001fdb44 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fdb6f : je 0x200001fdb9a ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001fdbe6 : je 0x200001fdc14 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fdc7e : je 0x200001fdcac ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fdd37 : je 0x200001fdd66 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001fe53d : je 0x200001fe56b ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001fe5f5 : je 0x200001fe623 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ff53f : je 0x200001ff4c4 ; ret 0x100f
0x00000200001fff20 : je 0x200001fff4e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200002024e6 : je 0x20000202514 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200002034b4 : je 0x200002034e2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000203fa9 : je 0x20000203fd7 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000204e58 : je 0x20000204e86 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200002051bb : je 0x200002051e9 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000205dca : je 0x20000205dd9 ; mov eax, 0x30 ; ret
0x00000200002063bd : je 0x200002063eb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200002065d9 : je 0x200002065ff ; mov ecx, 2 ; call rax
0x00000200002068e8 : je 0x20000206916 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000206d41 : je 0x20000206d6f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000207ae2 : je 0x20000207b10 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000207b45 : je 0x20000207b73 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020846c : je 0x20000208497 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000208594 : je 0x200002085c2 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000209e9f : je 0x20000209ecd ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020a530 : je 0x2000020a55e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000020a8a1 : je 0x2000020a8cf ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000020cb47 : je 0x2000020cb75 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020e0b9 : je 0x2000020e0e7 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020e5af : je 0x2000020e5dd ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020eefe : je 0x2000020ef2c ; add rsp, 0x30 ; pop rdi ; ret
0x000002000020f009 : je 0x2000020f037 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000020f18e : je 0x2000020f1bc ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000020f224 : je 0x2000020f252 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200002114f8 : je 0x20000211526 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000021158e : je 0x200002115bc ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000211631 : je 0x2000021165f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000211cfd : je 0x20000211d0c ; xor eax, eax ; xchg dword ptr [rcx + 0x1c], eax ; ret
0x0000020000212c9c : je 0x20000212cca ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200002131a5 : je 0x200002131d3 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200002149b9 : je 0x200002149c9 ; mov rcx, r14 ; call rax
0x000002000021568d : je 0x20000215697 ; add dword ptr [rcx], r11d ; ret
0x000002000021575e : je 0x2000021578d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000215dfa : je 0x20000215e28 ; push rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200002168eb : je 0x200002168fa ; mov eax, 0xc00000bb ; ret
0x000002000021a06f : je 0x2000021a09d ; js 0x2000021a0c3 ; add esp, 0x50 ; pop rdi ; ret
0x000002000021bea7 : je 0x2000021be6e ; mov eax, r10d ; jmp 0x2000021beb4
0x000002000021d882 : je 0x2000021d8b0 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000021e69e : je 0x2000021e6cc ; add rsp, 0x20 ; pop rdi ; ret
0x000002000021f105 : je 0x2000021f133 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000039a545 : je 0x2000039a573 ; add rsp, 0x30 ; pop rbp ; ret
0x000002000039ba81 : je 0x2000039b985 ; jmp 0x200003a7ce7
0x000002000039c8ea : je 0x2000039c918 ; js 0x2000039c93e ; add esp, 0x50 ; pop rdi ; ret
0x000002000039ce96 : je 0x2000039cea0 ; mov al, r10b ; ret
0x000002000039ce96 : je 0x2000039cea1 ; mov al, r10b ; ret
0x000002000039d8f4 : je 0x2000039d91f ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000039ea31 : je 0x2000039ea5f ; js 0x2000039ea85 ; add esp, 0x60 ; pop rdi ; ret
0x000002000039f277 : je 0x2000039f2a5 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000039f485 : je 0x2000039f4b3 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000039f8bf : je 0x2000039f8ed ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003a07c6 : je 0x200003a07f4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003a0d79 : je 0x200003a0da7 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003a13e8 : je 0x200003a13ee ; call rcx
0x00000200003a2179 : je 0x200003a2186 ; add rsp, 0x28 ; ret
0x00000200003a28db : je 0x200003a28e1 ; add bh, bh ; ret 0x8348
0x00000200003a2914 : je 0x200003a290f ; ret
0x00000200003a4e98 : je 0x200003a4e9d ; ret
0x00000200003a5ac3 : je 0x200003a5af1 ; jo 0x200003a5b17 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003a6333 : je 0x200003a6361 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003a6a7c : je 0x200003a6aaa ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003a2a30 : je 0x200003a9dea ; ret
0x00000200003a2b38 : je 0x200003a9e4f ; ret
0x00000200003a6a25 : je 0x200003aae6d ; mov al, 1 ; ret
0x00000200003ab2df : je 0x200003ab30e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003ac2a9 : je 0x200003ac2d7 ; jo 0x200003ac2fd ; add esp, 0x50 ; pop rdi ; ret
0x00000200003ad11e : je 0x200003ad14c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003af3af : je 0x200003af3b5 ; call rcx
0x00000200003af3ba : je 0x200003af3e8 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003af91e : je 0x200003af92c ; mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x00000200003b0758 : je 0x200003b0786 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003b138f : je 0x200003b13bd ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003b19bd : je 0x200003b19eb ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003b1ea1 : je 0x200003b1ecc ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003b2534 : je 0x200003b24c3 ; ret
0x00000200003b254e : je 0x200003b257c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003b2969 : je 0x200003b2997 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003b30f6 : je 0x200003b3125 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200003b41b7 : je 0x200003b41e6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003b5489 : je 0x200003b54b7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003b63a6 : je 0x200003b63ae ; jmp r10
0x00000200003b68e1 : je 0x200003b68f1 ; mov rcx, rsi ; call r14
0x00000200003b8f1d : je 0x200003b8f4b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003b967b : je 0x200003b96a9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003ba53d : je 0x200003ba56b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003bec3f : je 0x200003bec6a ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003bf437 : je 0x200003bf465 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200003bfc32 : je 0x200003bfc60 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003c26e6 : je 0x200003c2714 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003c275b : je 0x200003c2789 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003c2a84 : je 0x200003c2a90 ; mov rcx, rsi ; call rdx
0x00000200003c77c0 : je 0x200003c77ef ; push 0x40c48348 ; pop r15 ; ret
0x00000200003c83f5 : je 0x200003c8423 ; jo 0x200003c8449 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003c8787 : je 0x200003c87b5 ; jo 0x200003c87db ; add esp, 0x50 ; pop rdi ; ret
0x00000200003c97ff : je 0x200003c97e3 ; mov eax, 3 ; ret
0x00000200003cbceb : je 0x200003cbd19 ; push 0x40c48348 ; pop rdi ; ret
0x00000200003cce1c : je 0x200003cce4a ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003cef97 : je 0x200003cefbd ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200003d44e8 : je 0x200003d4516 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003d45a3 : je 0x200003d45d1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003d45f3 : je 0x200003d4621 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003d4776 : je 0x200003d47a5 ; js 0x200003d47cb ; add esp, 0x50 ; pop r15 ; ret
0x00000200003d6ae0 : je 0x200003d6b0e ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200003d7c26 : je 0x200003d7c54 ; push 0x50c48348 ; pop rdi ; ret
0x00000200003da957 : je 0x200003da985 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003dadce : je 0x200003dadfc ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003db5a3 : je 0x200003db5d1 ; js 0x200003db5f7 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003dc0b0 : je 0x200003dc0de ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003dd075 : je 0x200003dd086 ; xor al, al ; add rsp, 0x28 ; ret
0x00000200003dd074 : je 0x200003dd087 ; xor al, al ; add rsp, 0x28 ; ret
0x00000200003dd47d : je 0x200003dd4ab ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003de001 : je 0x200003de00e ; add rsp, 0x28 ; ret
0x00000200003de09d : je 0x200003de0cb ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003de117 : je 0x200003de145 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003de3e4 : je 0x200003de412 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003de87a : je 0x200003de8a8 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200003deb67 : je 0x200003deb76 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003dec0a : je 0x200003dec38 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003df44e : je 0x200003df47c ; push 0x40c48348 ; pop rdi ; ret
0x00000200003dfeed : je 0x200003dff1b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003e1d4b : je 0x200003e1d76 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003e1e44 : je 0x200003e1e72 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003e1eb5 : je 0x200003e1ee3 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003e354f : je 0x200003e357d ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003e35fa : je 0x200003e35c9 ; call rax
0x00000200003e501e : je 0x200003e5023 ; ret
0x00000200003e501d : je 0x200003e5024 ; ret
0x00000200003e501c : je 0x200003e5025 ; ret
0x00000200003e501b : je 0x200003e5026 ; ret
0x00000200003e514a : je 0x200003e5178 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003e5311 : je 0x200003e533f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003e6cd5 : je 0x200003e6d03 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003e6e89 : je 0x200003e6eb7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003e71a3 : je 0x200003e71b9 ; mov rax, qword ptr [rcx] ; mov rax, qword ptr [rax + 0x20] ; ret
0x00000200003e8242 : je 0x200003e8270 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003e8656 : je 0x200003e8684 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003e8f43 : je 0x200003e8f71 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003e9703 : je 0x200003e9731 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003e9fa7 : je 0x200003e9fd5 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003ea04c : je 0x200003ea07a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003ea0b6 : je 0x200003ea0e4 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003ea2b3 : je 0x200003ea2e2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003ea37b : je 0x200003ea3a9 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003ea620 : je 0x200003ea64e ; push 0x50c48348 ; pop rdi ; ret
0x00000200003ec89a : je 0x200003ec8c9 ; push 0x40c48348 ; pop r15 ; ret
0x00000200003ee773 : je 0x200003ee7a1 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003ef4bb : je 0x200003ef4e9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003ef8d3 : je 0x200003ef8fe ; cmp byte ptr [rax - 0x7f], cl ; ret
0x00000200003f0366 : je 0x200003f0395 ; js 0x200003f03bb ; add esp, 0x50 ; pop r15 ; ret
0x00000200003f0f5a : je 0x200003f0f88 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003f29c6 : je 0x200003f298a ; mov eax, 0xc0000022 ; ret
0x00000200003f2ad2 : je 0x200003f2b00 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003f2ba1 : je 0x200003f2bcf ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003f35dc : je 0x200003f360a ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003f37ab : je 0x200003f37d6 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200003f399f : je 0x200003f39b6 ; dec dword ptr [rdx + 0x18] ; ret
0x00000200003f3de9 : je 0x200003f3e17 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200003f5d28 : je 0x200003f5cac ; ret
0x00000200003f8262 : je 0x200003f826f ; movzx eax, word ptr [rax + 8] ; ret
0x00000200003fa840 : je 0x200003fa86e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003fb892 : je 0x200003fb873 ; xor al, al ; ret
0x00000200003fb888 : je 0x200003fb892 ; mov dword ptr [rcx], edx ; mov al, 1 ; ret
0x00000200003fbda3 : je 0x200003fbdd1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003fd207 : je 0x200003fd235 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003fd27d : je 0x200003fd26d ; xor al, al ; ret
0x00000200003fd27c : je 0x200003fd26e ; xor al, al ; ret
0x0000020000400b43 : je 0x20000400b71 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000400d2f : je 0x20000400d5e ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000040173c : je 0x20000401754 ; mov rdx, rcx ; mov rcx, qword ptr [rdi + 8] ; call rax
0x0000020000401d09 : je 0x20000401d38 ; push 0x40c48348 ; pop r15 ; ret
0x0000020000403d42 : je 0x20000403d70 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000404477 : je 0x20000404474 ; or dword ptr [rdx], eax ; ret
0x0000020000404939 : je 0x20000404967 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000404ac5 : je 0x20000404af3 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000405d6c : je 0x20000405d7a ; bts dword ptr [r9], 0x1d ; ret
0x0000020000406ff0 : je 0x2000040701e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004073e3 : je 0x200004073ef ; or dword ptr [rcx], 4 ; xor eax, eax ; ret
0x000002000040781c : je 0x20000407836 ; mov r8, rdx ; mov rdx, r10 ; jmp r11
0x000002000040792e : je 0x2000040795c ; js 0x20000407982 ; add esp, 0x50 ; pop rdi ; ret
0x000002000040800c : je 0x20000408011 ; ret
0x0000020000408b6b : je 0x20000408b74 ; xor al, al ; ret
0x0000020000408e2c : je 0x20000408e5a ; add rsp, 0x30 ; pop rdi ; ret
0x000002000040966e : je 0x2000040969c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000409854 : je 0x20000409882 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000040a220 : je 0x2000040a249 ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000040ab73 : je 0x2000040aba1 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000040abf4 : je 0x2000040ac22 ; js 0x2000040ac48 ; add esp, 0x50 ; pop rdi ; ret
0x000002000040b6f2 : je 0x2000040b721 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000040b7c1 : je 0x2000040b7f0 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000040c0a9 : je 0x2000040c0d7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000040c2fd : je 0x2000040c32b ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000040c4a9 : je 0x2000040c4d7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000040d01b : je 0x2000040d049 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000040dd6f : je 0x2000040dd9d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000040e106 : je 0x2000040e134 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000040f5e9 : je 0x2000040f617 ; push 0x40c48348 ; pop rdi ; ret
0x000002000040ff48 : je 0x2000040ff76 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000041076a : je 0x20000410798 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000410ab1 : je 0x20000410adf ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000411948 : je 0x20000411976 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004127f9 : je 0x20000412827 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004130cb : je 0x200004130fa ; jo 0x20000413120 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000414bc3 : je 0x20000414bf1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000415fb7 : je 0x20000415fe6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004162e1 : je 0x2000041630f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000417aa9 : je 0x20000417ab6 ; add rsp, 0x28 ; ret
0x0000020000417b5b : je 0x20000417b89 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000418059 : je 0x20000418087 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004189db : je 0x20000418a0a ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000418d2c : je 0x20000418d5a ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000418fb5 : je 0x20000418fe3 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000041927a : je 0x20000419251 ; jmp 0x2000058338f
0x00000200004199a6 : je 0x200004199d5 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000041b071 : je 0x2000041b09f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000041b3ed : je 0x2000041b3f6 ; xor eax, eax ; ret
0x000002000041b4a6 : je 0x2000041b4d4 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000041caf5 : je 0x2000041cb01 ; mov rax, qword ptr [rdx + 0x38] ; ret
0x000002000041cb0e : je 0x2000041cb17 ; xor eax, eax ; ret
0x000002000041d673 : je 0x2000041d686 ; mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041e15e : je 0x2000041e18d ; add rsp, 0x20 ; pop r15 ; ret
0x000002000041e8d5 : je 0x2000041e900 ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000041ebc2 : je 0x2000041ebca ; jmp rax
0x000002000041f9e1 : je 0x2000041fa0f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000041fe01 : je 0x2000041fe2f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000041ff7e : je 0x2000041ffac ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042001b : je 0x20000420049 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000420d2d : je 0x20000420d59 ; pop rax ; call 0x200000451ba
0x0000020000421846 : je 0x2000042181e ; mov rdx, qword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x0000020000421a86 : je 0x20000421ab4 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000422121 : je 0x2000042214f ; push 0x50c48348 ; pop rdi ; ret
0x0000020000422f33 : je 0x20000422f61 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042313f : je 0x2000042316e ; js 0x20000423194 ; add esp, 0x50 ; pop r15 ; ret
0x0000020000423229 : je 0x20000423257 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000423431 : je 0x2000042345f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004244e7 : je 0x20000424515 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042529e : je 0x200004252af ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000425302 : je 0x2000042530f ; add rsp, 0x28 ; ret
0x000002000042558a : je 0x20000425603 ; xor ecx, ecx ; call 0x2000004585b
0x0000020000426244 : je 0x20000426272 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004282ad : je 0x200004282db ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042876f : je 0x20000428774 ; ret
0x00000200004289a9 : je 0x200004289d7 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000429e57 : je 0x20000429e85 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000042a00a : je 0x2000042a038 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042a80a : je 0x2000042a838 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042c4f5 : je 0x2000042c523 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042f462 : je 0x2000042f490 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042f6df : je 0x2000042f70d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000042fedf : je 0x2000042ff0d ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000430cab : je 0x20000430cd9 ; mov dword ptr [rdx], r8d ; mov eax, ecx ; ret
0x00000200004311ea : je 0x20000431218 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004312de : je 0x2000043130c ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004319b2 : je 0x200004319e0 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000433044 : je 0x20000433072 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004330fe : je 0x2000043312c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004334b4 : je 0x200004334e2 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000434a56 : je 0x20000434a7a ; mov rcx, rax ; call 0x2000005abc0
0x00000200004358fa : je 0x20000435425 ; call rax
0x0000020000435562 : je 0x2000043557f ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000435a2b : je 0x200004357af ; mov ecx, eax ; call r9
0x0000020000435b74 : je 0x20000435b23 ; ret
0x000002000043658f : je 0x200004365bd ; add rsp, 0x20 ; pop rdi ; ret
0x000002000043781a : je 0x20000437848 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000439bff : je 0x20000439c2e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043ad37 : je 0x2000043ad66 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000043c21e : je 0x2000043c24c ; jo 0x2000043c272 ; add esp, 0x50 ; pop rdi ; ret
0x000002000043d263 : je 0x2000043d291 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000043d32f : je 0x2000043d35d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000043e616 : je 0x2000043e644 ; jo 0x2000043e66a ; add esp, 0x50 ; pop rdi ; ret
0x000002000044006f : je 0x2000044009d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004431e5 : je 0x200004431f9 ; lea rdx, qword ptr [r15 - 0x30] ; mov rcx, r15 ; call rax
0x0000020000443b64 : je 0x20000443b72 ; lea rdx, qword ptr [rcx - 0x30] ; call rax
0x0000020000443bc4 : je 0x20000443b7c ; mov rcx, qword ptr [rdi - 8] ; mov rdx, rdi ; call qword ptr [rax]
0x0000020000443e19 : je 0x20000443e28 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000443ea7 : je 0x20000443ed5 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000044442e : je 0x2000044445c ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004453d8 : je 0x200004453e2 ; call rax
0x000002000044623f : je 0x20000446249 ; add al, 0 ; add byte ptr [rdi], cl ; test bh, bl ; ret
0x000002000044623e : je 0x2000044624a ; add al, 0 ; add byte ptr [rdi], cl ; test bh, bl ; ret
0x0000020000447d1c : je 0x20000447d30 ; mov rcx, qword ptr [rsp + 0x40] ; call rax
0x0000020000448fa7 : je 0x20000448fbb ; mov rcx, qword ptr [rsp + 0x60] ; call rax
0x000002000044c9d2 : je 0x2000044c9e4 ; or dword ptr [r9], 0x20000000 ; ret
0x000002000044cb0d : je 0x2000044cb0e ; mov eax, 0xc000000d ; ret
0x000002000044e7ac : je 0x2000044e7da ; add rsp, 0x20 ; pop rdi ; ret
0x000002000044e923 : je 0x2000044e951 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000452b03 : je 0x20000452af0 ; jmp 0x20000452acd
0x0000020000452fcc : je 0x20000452ffa ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000453038 : je 0x20000453066 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000453178 : je 0x200004531e5 ; sar bh, 0xeb ; ret 0x10a8
0x0000020000454c88 : je 0x20000454cb6 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000455811 : je 0x2000045583f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004558cc : je 0x200004558fa ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005a598b : je 0x20000455c78 ; mov rcx, rdi ; call rax
0x0000020000456d67 : je 0x20000456d95 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000045713d : je 0x2000045714a ; call rax
0x0000020000457123 : je 0x20000457151 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004571b6 : je 0x200004571e4 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000458038 : je 0x20000458066 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000045ae72 : je 0x20000459e1d ; jmp 0x200005a7168
0x000002000045b605 : je 0x2000045b633 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000046109f : je 0x200004610c9 ; xor cl, ch ; ret 0xfffe
0x00000200004629fe : je 0x20000462a29 ; mov qword ptr [r8], rax ; mov eax, r9d ; ret
0x0000020000463b7a : je 0x20000463ba8 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000463d67 : je 0x20000463d95 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000464651 : je 0x2000046467f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000466295 : je 0x200004662c3 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000466db6 : je 0x20000466de4 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000467076 : je 0x200004670a4 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000467196 : je 0x200004671c4 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000468562 : je 0x20000468590 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000468652 : je 0x20000468680 ; jo 0x200004686a6 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000468fb8 : je 0x20000468fe6 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000469582 : je 0x200004695b0 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000469f92 : je 0x20000469fc0 ; push 0x50c48348 ; pop rdi ; ret
0x000002000046a69e : je 0x2000046a6cc ; push 0x50c48348 ; pop rdi ; ret
0x000002000046abc8 : je 0x2000046abf6 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000046b3a0 : je 0x2000046b3ce ; add rsp, 0x30 ; pop rdi ; ret
0x000002000046b93c : je 0x2000046b94e ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x000002000046b93c : je 0x2000046b94f ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x000002000046bde8 : je 0x2000046be16 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000046be1c : je 0x2000046be28 ; mov rcx, rbx ; call rax
0x000002000046cf94 : je 0x2000046cf99 ; ret
0x000002000046dfb8 : je 0x2000046dfc5 ; add rax, 0x10 ; ret
0x000002000046e02b : je 0x2000046e05a ; add rsp, 0x30 ; pop r14 ; ret
0x000002000046fcf0 : je 0x2000046fcf8 ; call r8
0x000002000046fd77 : je 0x2000046fda5 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004704c7 : je 0x20000470500 ; mov eax, r10d ; ret
0x00000200004704c7 : je 0x20000470501 ; mov eax, r10d ; ret
0x000002000047211b : je 0x20000472149 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004735f3 : je 0x20000473602 ; cmp ecx, 1 ; je 0x20000473622 ; ret
0x00000200004735f8 : je 0x2000047361d ; ret
0x0000020000473aae : je 0x20000473abb ; add rax, -0x10 ; ret
0x0000020000473f62 : je 0x20000473f90 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004756d1 : je 0x2000047571c ; mov rcx, rbx ; call 0x2000009a2d0
0x00000200004758c8 : je 0x20000475931 ; mov rcx, rdi ; call 0x200000c1b37
0x0000020000476413 : je 0x20000476420 ; lea rax, qword ptr [rcx + 0x4c] ; ret
0x000002000047679f : je 0x200004767cd ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000479944 : je 0x20000479972 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000479b35 : je 0x20000479b60 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000479b89 : je 0x20000479bb7 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000047da2f : je 0x2000047da5e ; js 0x2000047da84 ; add esp, 0x50 ; pop r15 ; ret
0x000002000047edfb : je 0x2000047ee29 ; js 0x2000047ee4f ; add esp, 0x50 ; pop rdi ; ret
0x000002000047fbc3 : je 0x2000047fbf1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000047fc52 : je 0x2000047fc7c ; jo 0x2000047fccc ; ret
0x00000200004808ae : je 0x200004808dc ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004819fd : je 0x20000481a2b ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000482192 : je 0x20000482197 ; ret
0x0000020000483283 : je 0x200004832b1 ; js 0x200004832d7 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000483323 : je 0x20000483351 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004837a1 : je 0x200004837d0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004842cb : je 0x200004842f9 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000048475c : je 0x2000048478a ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000484975 : je 0x200004849a3 ; js 0x200004849c9 ; add esp, 0x50 ; pop rdi ; ret
0x000002000048590b : je 0x20000485939 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000485dca : je 0x20000485df8 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000485e61 : je 0x20000485e52 ; mov al, 1 ; ret
0x0000020000486be5 : je 0x20000486c13 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000048765c : je 0x2000048768a ; push 0x40c48348 ; pop rdi ; ret
0x00000200004878b5 : je 0x2000048789b ; ret
0x00000200004878f8 : je 0x20000487926 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000487c22 : je 0x20000487d00 ; call 0x20000443ed8
0x0000020000487c21 : je 0x20000487d01 ; call 0x20000443ed9
0x0000020000488235 : je 0x20000488263 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000488daa : je 0x20000488dd8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000048c218 : je 0x2000048c246 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000048c29e : je 0x2000048c2cd ; add rsp, 0x20 ; pop r15 ; ret
0x00000200004905e8 : je 0x20000490604 ; ret
0x0000020000490726 : je 0x20000490750 ; jo 0x20000490717 ; ret
0x000002000049158b : je 0x200004915a4 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000049158a : je 0x200004915a5 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000049192d : je 0x2000049194e ; mov rdi, rax ; jmp 0x200004918fc
0x0000020000492839 : je 0x20000492864 ; and byte ptr [rbp - 0x75], cl ; ret
0x00000200004940b2 : je 0x200004940e0 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004951fc : je 0x2000049522a ; js 0x20000495250 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000498d39 : je 0x20000498d58 ; mov rcx, rdi ; call 0x200000bb148
0x00000200004998d3 : je 0x200004998e7 ; and rcx, 0xfffffffffffffffc ; call 0x200000c23c9
0x0000020000499b13 : je 0x20000499b42 ; jo 0x20000499b68 ; mov ecx, esi ; call 0x200000bc289
0x000002000049a321 : je 0x2000049a340 ; xor ecx, ecx ; call 0x200000bc567
0x000002000049ac8e : je 0x2000049ac5b ; mov rcx, qword ptr [rbx + 0x30] ; call 0x200000bd249
0x000002000049b821 : je 0x2000049b84f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000049b9fa : je 0x2000049ba28 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000049cfc8 : je 0x2000049cfce ; ret 0x48ff
0x000002000049d3a4 : je 0x2000049d34e ; jmp 0x2000049d36e
0x000002000049fdef : je 0x2000049fdb6 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200004afa40 : je 0x200004afa4c ; call 0x200000d2305
0x00000200004b09b8 : je 0x200004b09c2 ; call r12
0x00000200004b3270 : je 0x200004b31fc ; ror byte ptr [rdi], 0x85 ; ret 4
0x00000200004b326f : je 0x200004b31fd ; ror byte ptr [rdi], 0x85 ; ret 4
0x00000200004b9bd4 : je 0x200004b9bfe ; xor bh, bh ; ret
0x00000200003d8d3f : je 0x200004bb418 ; xor al, al ; ret
0x00000200004be9ca : je 0x200004be9f9 ; push 0x48c48348 ; pop rdi ; pop rbx ; ret
0x00000200004c1bf8 : je 0x200004c1c04 ; call 0x200000e7975
0x00000200004c1c49 : je 0x200004c1c60 ; call 0x200000e7755
0x00000200004c26e2 : je 0x200004c2710 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004c3673 : je 0x200004c3652 ; mov rcx, rdx ; call 0x200000eb3f4
0x00000200004c407f : je 0x200004c40ad ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004c4e21 : je 0x200004c4e33 ; mov rcx, r13 ; call 0x200000ebb28
0x00000200004c50ac : je 0x200004c50be ; mov rcx, r13 ; call 0x200000ebb28
0x00000200004c5e33 : je 0x200004c5e42 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c6006 : je 0x200004c6034 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004c79b8 : je 0x200004c79c9 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200004c801d : je 0x200004c804b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004c81f8 : je 0x200004c8193 ; jmp 0x200004c81c2
0x00000200004c81f3 : je 0x200004c8198 ; cmp r8d, r15d ; je 0x200004c8198 ; jmp 0x200004c81c7
0x00000200004c8bd6 : je 0x200004c8be5 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c9100 : je 0x200004c912e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004ca477 : je 0x200004ca4a5 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004cadd1 : je 0x200004cae2f ; mov dl, r11b ; call 0x200000eebf8
0x00000200004cb1b9 : je 0x200004cb1c5 ; call 0x200000eec51
0x00000200004cb232 : je 0x200004cb24b ; mov ecx, dword ptr [rcx + 8] ; call rax
0x00000200004cb462 : je 0x200004cb490 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004cb4ef : je 0x200004cb519 ; and al, 0xff ; ret 0xc2eb
0x00000200004cb5bb : je 0x200004cb5c0 ; ret
0x00000200005c74f3 : je 0x200004cb91a ; mov al, 1 ; ret
0x00000200004cc0d9 : je 0x200004cc107 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004cc52b : je 0x200004cc53e ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004ccc55 : je 0x200004ccc71 ; mov rcx, qword ptr [rbx + 0x20] ; call 0x200000f1a45
0x00000200004cd47f : je 0x200004cd48c ; add rax, 0x10 ; ret
0x00000200004cd462 : je 0x200004cd490 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004cd7bf : je 0x200004cd7ed ; jo 0x200004cd813 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004ce438 : je 0x200004ce466 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004ce4af : je 0x200004ce4dd ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004d02d5 : je 0x200004d0303 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004d0745 : je 0x200004d0773 ; push 0x50c48348 ; pop rdi ; ret
0x00000200004d1f14 : je 0x200004d1f3e ; js 0x200004d1ea7 ; ret
0x00000200004d259c : je 0x200004d25ca ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004d37cb : je 0x200004d37d4 ; xor eax, eax ; ret
0x00000200004d3d1a : je 0x200004d3d48 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004d4c7c : je 0x200004d4caa ; jo 0x200004d4cd0 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004d6dd2 : je 0x200004d6e00 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004d85cc : je 0x200004d85fa ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004d9194 : je 0x200004d91c2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004d9968 : je 0x200004d9996 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004da446 : je 0x200004da475 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004dac5a : je 0x200004dac88 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004dad77 : je 0x200004dada5 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004db62d : je 0x200004db65b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004dbc73 : je 0x200004dbca1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004dc83e : je 0x200004dc86c ; push 0x50c48348 ; pop rdi ; ret
0x00000200004ddaf8 : je 0x200004ddb26 ; jo 0x200004ddb4c ; add esp, 0x50 ; pop rdi ; ret
0x00000200004de645 : je 0x200004de655 ; call 0x20000467349
0x00000200004deddf : je 0x200004dee0c ; and byte ptr [rcx - 0x75], cl ; iretd ; call r14
0x00000200004df4a6 : je 0x200004df4d0 ; jo 0x200004df439 ; ret
0x00000200004df73f : je 0x200004df748 ; mov al, 1 ; ret
0x00000200004e00d1 : je 0x200004e00ff ; push 0x50c48348 ; pop rdi ; ret
0x00000200004e02db : je 0x200004e0309 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004e08d4 : je 0x200004e08e5 ; mov rcx, qword ptr [rbp - 0x11] ; call rax
0x00000200004e134a : je 0x200004e1378 ; js 0x200004e139e ; add esp, 0x60 ; pop rdi ; ret
0x00000200004e1641 : je 0x200004e166f ; jo 0x200004e1695 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004e1d6a : je 0x200004e1d99 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e22a2 : je 0x200004e22d0 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004e2449 : je 0x200004e2478 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004e5443 : je 0x200004e5471 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004e6a63 : je 0x200004e6a91 ; push 0x40c48348 ; pop rdi ; ret
0x00000200004e7c28 : je 0x200004e7c56 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004e88ca : je 0x200004e88f9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e8c67 : je 0x200004e8c95 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004e8d03 : je 0x200004e8d31 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004ea238 : je 0x200004ea266 ; push 0x50c48348 ; pop rdi ; ret
0x00000200004ea91f : je 0x200004ea8ae ; ret
0x00000200004ea91e : je 0x200004ea8af ; ret
0x00000200004eb4d9 : je 0x200004eb4df ; call rax
0x00000200004eb8de : je 0x200004eb8e4 ; call rax
0x00000200004ebc8e : je 0x200004ebcbc ; jo 0x200004ebce2 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004ec67b : je 0x200004ec689 ; mov cl, dil ; call rax
0x00000200004ecf9e : je 0x200004ecfcc ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004edeec : je 0x200004edf1a ; pop rax ; add rsp, 0x30 ; pop rbp ; ret
0x00000200004ee049 : je 0x200004ee059 ; call 0x200004cb5c1
0x00000200004ee1eb : je 0x200004ee219 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004ee2de : je 0x200004ee30c ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004ee538 : je 0x200004ee562 ; js 0x200004ee4cb ; ret
0x00000200004ef099 : je 0x200004ef09f ; call rax
0x00000200004ef14c : je 0x200004ef17a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004efa73 : je 0x200004efaa1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f12bb : je 0x200004f12e9 ; js 0x200004f130f ; add esp, 0x60 ; pop rdi ; ret
0x00000200004f32a0 : je 0x200004f32ce ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f3e9d : je 0x200004f3ec7 ; and al, ch ; ret
0x00000200004f454d : je 0x200004f455f ; jbe 0x200004f455c ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x00000200004f454d : je 0x200004f4560 ; jbe 0x200004f455d ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x00000200004f496d : je 0x200004f497b ; ret
0x00000200004f60dd : je 0x200004f60f3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004f713d : je 0x200004f716b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f75b8 : je 0x200004f75e7 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f779e : je 0x200004f7807 ; mov rdx, r13 ; mov rcx, rdi ; call r12
0x00000200004f7ae7 : je 0x200004f7b15 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f8b46 : je 0x200004f8b74 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004f8ecf : je 0x200004f8efd ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004fa28c : je 0x200004fa2ba ; push 0x40c48348 ; pop rdi ; ret
0x00000200004fb11f : je 0x200004fb14a ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004fb3fd : je 0x200004fb40c ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004fb5b8 : je 0x200004fb5e6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004fc165 : je 0x200004fc194 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004fc7a6 : je 0x200004fc7d4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004fd4e4 : je 0x200004fd512 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004fe76f : je 0x200004fe79d ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004fea98 : je 0x200004feac6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004fef84 : je 0x200004fefb2 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004ff0d2 : je 0x200004ff100 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000500f6c : je 0x20000500f9b ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000501478 : je 0x2000050148b ; xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x0000020000501810 : je 0x200005017bd ; call rax
0x00000200005020e2 : je 0x20000502110 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000502198 : je 0x200005021c6 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000050253a : je 0x20000502568 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000502630 : je 0x2000050265e ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000502898 : je 0x200005028c6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005035bf : je 0x200005035c4 ; ret
0x0000020000503b51 : je 0x20000503b5e ; add rsp, 0x28 ; ret
0x0000020000504368 : je 0x2000050432c ; ret
0x000002000050656b : je 0x20000506599 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000050b121 : je 0x2000050b14f ; js 0x2000050b175 ; add esp, 0x60 ; pop rdi ; ret
0x000002000050b237 : je 0x2000050b206 ; jmp 0x2000050b213
0x000002000050d3e0 : je 0x2000050d40e ; add rsp, 0x30 ; pop rdi ; ret
0x000002000050d9f3 : je 0x2000050da02 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000050d9f2 : je 0x2000050da03 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000050ddd9 : je 0x2000050dde9 ; mov ecx, dword ptr [rsp + 0x28] ; mov dword ptr [rdx], ecx ; ret
0x000002000050ea0a : je 0x2000050ea38 ; jo 0x2000050ea5e ; add esp, 0x50 ; pop rdi ; ret
0x000002000050f6ec : je 0x2000050f71a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000050ff80 : je 0x2000050ff2f ; fdivp st(7) ; call 0x200000bc256
0x000002000050ffaa : je 0x2000050ffd9 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000051034a : je 0x20000510378 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051082e : je 0x2000051085a ; sub al, ch ; mov dl, byte ptr [rdx] ; ret
0x000002000051096c : je 0x20000510978 ; call 0x20000140385
0x0000020000511259 : je 0x20000511265 ; call 0x20000140385
0x0000020000511267 : je 0x20000511273 ; call 0x20000140385
0x00000200005118f9 : je 0x2000051190d ; mov rcx, qword ptr [rbp + 0x28] ; call 0x20000140389
0x0000020000511b5c : je 0x20000511b8b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000511e28 : je 0x20000511e34 ; call 0x20000140385
0x0000020000512157 : je 0x20000512185 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005128fe : je 0x2000051290a ; call 0x20000140385
0x000002000051290d : je 0x20000512919 ; call 0x20000140385
0x000002000051291b : je 0x20000512927 ; call 0x20000140385
0x00000200005132a0 : je 0x200005132ac ; call 0x20000140385
0x00000200005132af : je 0x200005132bb ; call 0x20000140385
0x0000020000513b08 : je 0x20000513ac2 ; ret
0x00000200005152d1 : je 0x200005152fd ; pop rax ; call 0x20000140da6
0x000002000051727a : je 0x200005172a9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005189d5 : je 0x20000518a03 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000518b7b : je 0x20000518ba9 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005191ca : je 0x200005191d6 ; mov dword ptr [r8], eax ; mov al, 1 ; ret
0x0000020000519422 : je 0x20000519450 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005196ea : je 0x20000519718 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000519fe9 : je 0x20000519ffd ; mov rcx, qword ptr [rbp + 7] ; call 0x20000140389
0x000002000051ade5 : je 0x2000051ae13 ; push 0x40c48348 ; pop rdi ; ret
0x000002000051b1b4 : je 0x2000051b1c0 ; call 0x20000140385
0x000002000051b2ad : je 0x2000051b2db ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051b734 : je 0x2000051b762 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051bce1 : je 0x2000051bd0f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051bf75 : je 0x2000051bfa3 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000051c648 : je 0x2000051c67a ; ret
0x000002000051ca49 : je 0x2000051ca77 ; js 0x2000051ca9d ; add esp, 0x60 ; pop rdi ; ret
0x000002000051ce2e : je 0x2000051ce5c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000051d48a : je 0x2000051d4b8 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000051de39 : je 0x2000051de45 ; call 0x20000140385
0x000002000051ec85 : je 0x2000051ec94 ; add rsp, 0x70 ; pop rbx ; ret
0x000002000051f4a9 : je 0x2000051f4d7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005207a4 : je 0x200005207d2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000520f7d : je 0x20000520fab ; push 0x40c48348 ; pop rdi ; ret
0x0000020000521265 : je 0x20000521294 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005219b4 : je 0x200005219b0 ; mov esi, 0xfc085ff ; mov esi, edx ; ret 0xa
0x00000200005219df : je 0x20000521a0d ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000522f86 : je 0x20000522fb4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005231fe : je 0x20000523228 ; jo 0x20000523191 ; ret
0x0000020000523256 : je 0x20000523284 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000523507 : je 0x20000523535 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000052356e : je 0x2000052359c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000523e86 : je 0x20000523e95 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000524867 : je 0x20000524870 ; mov al, 1 ; ret
0x0000020000524c32 : je 0x20000524c60 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000524cfd : je 0x20000524d2b ; jo 0x20000524d51 ; add esp, 0x50 ; pop rdi ; ret
0x000002000052548a : je 0x200005254b8 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000525be2 : je 0x20000525c10 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000525c5a : je 0x20000525c88 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000526dae : je 0x20000526ddc ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000526eea : je 0x20000526f18 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005277d8 : je 0x20000527807 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000052791b : je 0x20000527949 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005279d1 : je 0x200005279ff ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000528390 : je 0x200005283be ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000052914d : je 0x2000052919e ; call 0x2000014f185
0x0000020000529b0a : je 0x20000529b38 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000529f08 : je 0x20000529ea4 ; sar bh, 0x48 ; add esp, 0x68 ; ret
0x000002000052a1d8 : je 0x2000052a224 ; js 0x2000052a1ca ; loopne 0x2000052a236 ; ret 0x44ff
0x000002000052b3c3 : je 0x2000052b3f2 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000052c1f2 : je 0x2000052c2bf ; mov rcx, rbx ; call rax
0x000002000052c808 : je 0x2000052c80d ; ret
0x000002000052c8d3 : je 0x2000052c8fe ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000052ca86 : je 0x2000052cab5 ; add rbp, 2 ; jmp 0x2000052ca57
0x000002000052cabc : je 0x2000052caea ; add rsp, 0x20 ; pop rdi ; ret
0x000002000052d940 : je 0x2000052d96e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000052ef84 : je 0x2000052efb2 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000053049f : je 0x200005304cd ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000530c55 : je 0x20000530c83 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000534d0b : je 0x20000534d20 ; xor edx, edx ; mov rcx, rdi ; call 0x20000231019
0x0000020000535240 : je 0x2000053526e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005361f7 : je 0x20000536225 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000537406 : je 0x20000537434 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000538adf : je 0x20000538b0d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000538ee6 : je 0x20000538f14 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000053bad9 : je 0x2000053bb07 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000053cca8 : je 0x2000053ccd6 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000053cee8 : je 0x2000053cf16 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005d69e4 : je 0x2000053d00c ; xor eax, eax ; ret
0x000002000053d27b : je 0x2000053d281 ; call rax
0x000002000053d293 : je 0x2000053d2c1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000053f4c1 : je 0x2000053f4f0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005406cd : je 0x200005406fb ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000540779 : je 0x200005407a7 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000540ba4 : je 0x20000540bd2 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005410f6 : je 0x20000541124 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005412ab : je 0x200005412d9 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000541967 : je 0x20000541995 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000541d01 : je 0x20000541d2f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000054203a : je 0x20000542047 ; mov rax, qword ptr [rax + 0x28] ; ret
0x0000020000542113 : je 0x20000542141 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005423ca : je 0x200005423cf ; ret
0x0000020000542a3b : je 0x20000542a69 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000542ebc : je 0x20000542eea ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000543383 : je 0x200005433ae ; sub byte ptr [rbp - 0x76], al ; ret
0x000002000054348d : je 0x200005434bb ; sub byte ptr [rcx - 0x78], al ; or dword ptr [rbp - 0x76], eax ; ret
0x0000020000543567 : je 0x20000543595 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000544a8c : je 0x20000544aba ; add rsp, 0x20 ; pop rdi ; ret
0x000002000054564e : je 0x2000054567c ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005457d0 : je 0x200005457fe ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000545870 : je 0x2000054589e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005458dd : je 0x2000054590b ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000545b0d : je 0x20000545b19 ; mov dword ptr [r9], r8d ; mov eax, r10d ; ret
0x0000020000545b0d : je 0x20000545b1a ; mov dword ptr [r9], r8d ; mov eax, r10d ; ret
0x0000020000562828 : je 0x20000562851 ; out 0xff, al ; mov rcx, rbx ; call 0x2000004eb29
0x0000020000564de2 : je 0x20000564dfb ; mov edx, 0x20534c53 ; call 0x20000231019
0x0000020000564df9 : je 0x20000564e12 ; mov edx, 0x20534c53 ; call 0x20000231019
0x00000200005653af : je 0x200005653d9 ; jo 0x20000565342 ; ret
0x00000200005712ef : je 0x200005712fd ; mov rcx, qword ptr [rbp + 0x30] ; call rdx
0x000002000057482d : je 0x200005747fc ; jmp 0x200005747f7
0x00000200005760d7 : je 0x200005760e8 ; mov rcx, rdi ; call 0x200000c23c7
0x000002000041b24d : je 0x20000583fd6 ; xor eax, eax ; ret
0x00000200005844f6 : je 0x2000058451f ; mov rcx, qword ptr [rdi + 0x10] ; call 0x200001a6179
0x00000200004eb05f : je 0x20000587796 ; xor al, al ; ret
0x00000200004efe50 : je 0x2000058b27c ; call 0x20000117549
0x000002000058ffa6 : je 0x2000058ff35 ; ret 0x8d48
0x0000020000594865 : je 0x20000594874 ; mov eax, 0xc00000bb ; ret
0x0000020000513c36 : je 0x20000596974 ; ret
0x0000020000429d17 : je 0x2000059a2a0 ; ret
0x0000020000429d23 : je 0x2000059a2b2 ; ret
0x00000200005a3227 : je 0x200005a3218 ; dec dword ptr [rax - 0x7d] ; ret 0xe918
0x00000200005a3230 : je 0x200005a3221 ; dec dword ptr [rax - 0x7d] ; ret 0xe918
0x000002000048f273 : je 0x200005b84b9 ; call 0x200000bccad
0x000002000049add8 : je 0x200005baa49 ; mov rcx, rbp ; call rax
0x00000200005bab28 : je 0x200005bab36 ; mov rcx, r12 ; call rax
0x00000200004c39c6 : je 0x200005c51ba ; ret
0x00000200004c8d56 : je 0x200005c6aa9 ; call 0x200000edd79
0x00000200005cacba : je 0x200005cacd8 ; mov rcx, rsi ; call 0x200001f1808
0x00000200005cb5e5 : je 0x200005cb5d4 ; jmp 0x200005178a3
0x00000200005191be : je 0x200005cbcc0 ; xor al, al ; ret
0x00000200005cd5ae : je 0x200005cd5c5 ; mov rcx, r14 ; call 0x200000597f7
0x00000200005d3361 : je 0x200005d3390 ; cmp byte ptr [rbx + rcx*4 - 0x3d], al ; mov rdx, r14 ; call rax
0x00000200005da85e : je 0x200005da88c ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005dbeab : je 0x200005dbeb3 ; mov dword ptr [rdx], eax ; ret
0x00000200005dbec4 : je 0x200005dbed3 ; mov eax, 0xc00000f4 ; ret
0x00000200005dfaca : je 0x200005dfaf8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005dfbe9 : je 0x200005dfc17 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005e1696 : je 0x200005e16c4 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005e1c2b : je 0x200005e1c59 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005e2ab0 : je 0x200005e2ade ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005e478d : je 0x200005e47bb ; push 0x50c48348 ; pop rdi ; ret
0x00000200005e9ae2 : je 0x200005e9b10 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005ea424 : je 0x200005ea452 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005eac11 : je 0x200005eac3f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005ecf19 : je 0x200005ecf47 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005ed814 : je 0x200005ed842 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005eefa1 : je 0x200005eefcf ; push 0x50c48348 ; pop rdi ; ret
0x00000200005f2e9e : je 0x200005f2ea6 ; jmp qword ptr [rax]
0x00000200005f3309 : je 0x200005f3337 ; jo 0x200005f335d ; add esp, 0x50 ; pop rdi ; ret
0x00000200005f377e : je 0x200005f3787 ; inc edx ; jmp 0x200005f379c
0x00000200005f402b : je 0x200005f4059 ; js 0x200005f407f ; add esp, 0x50 ; pop rdi ; ret
0x00000200005f4761 : je 0x200005f478f ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005f4f93 : je 0x200005f4fc1 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005f5093 : je 0x200005f50c1 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005f539a : je 0x200005f53c8 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005f556b : je 0x200005f5599 ; js 0x200005f55bf ; add esp, 0x50 ; pop rdi ; ret
0x00000200005f55ba : je 0x200005f55c9 ; mov eax, 0xc0000001 ; ret
0x00000200005f5712 : je 0x200005f5740 ; push 0x40c48348 ; pop rdi ; ret
0x00000200005f57ce : je 0x200005f57fc ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005f6300 : je 0x200005f632e ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005f886b : je 0x200005f8899 ; push 0x50c48348 ; pop rdi ; ret
0x00000200005f9708 : je 0x200005f9736 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005fa72e : je 0x200005fa75c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005fa809 : je 0x200005fa837 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005fbf35 : je 0x200005fbf64 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200005fc031 : je 0x200005fc040 ; mov eax, 0xc0000120 ; ret
0x00000200005fcfa3 : je 0x200005fcfd2 ; jo 0x200005fcff8 ; add esp, 0x50 ; pop r14 ; ret
0x00000200005fd20e : je 0x200005fd21d ; mov eax, 0xc0000001 ; ret
0x00000200005fedb5 : je 0x200005fede3 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200005ff0a6 : je 0x200005ff0d4 ; jo 0x200005ff0fa ; add esp, 0x50 ; pop rdi ; ret
0x00000200005ff5ad : je 0x200005ff5c1 ; mov rdx, qword ptr [rbx + 8] ; mov ecx, eax ; call r8
0x00000200005ffffc : je 0x2000060002a ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000601b64 : je 0x20000601b92 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006026a8 : je 0x200006026cc ; xor edx, edx ; call 0x20000231017
0x0000020000602bf0 : je 0x20000602c08 ; xor edx, edx ; call 0x20000231017
0x0000020000602c0b : je 0x20000602c23 ; xor edx, edx ; call 0x20000231017
0x0000020000602c73 : je 0x20000602c8b ; xor edx, edx ; call 0x20000231017
0x00000200006037b9 : je 0x200006037e7 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000603c43 : je 0x20000603c71 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000060414e : je 0x2000060415e ; xor edx, edx ; call 0x20000231017
0x0000020000604316 : je 0x20000604322 ; call 0x20000231015
0x0000020000606f70 : je 0x20000606f9f ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000060a8aa : je 0x2000060a8ba ; xor edx, edx ; call 0x20000231017
0x000002000060a958 : je 0x2000060a968 ; xor edx, edx ; call 0x20000231017
0x000002000060a998 : je 0x2000060a9a8 ; xor edx, edx ; call 0x20000231017
0x000002000060aed1 : je 0x2000060aee1 ; xor edx, edx ; call 0x20000231017
0x000002000060b0c5 : je 0x2000060b0f3 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000060cd3a : je 0x2000060cd52 ; xor edx, edx ; call 0x20000231017
0x000002000060cef1 : je 0x2000060cf01 ; xor edx, edx ; call 0x20000231017
0x000002000060d36f : je 0x2000060d39d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000060d7ed : je 0x2000060d81b ; add rsp, 0x20 ; pop rdi ; ret
0x000002000060d89a : je 0x2000060d8c8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000060e3e5 : je 0x2000060e3eb ; call rax
0x000002000060e580 : je 0x2000060e5ae ; add rsp, 0x20 ; pop rdi ; ret
0x000002000060eb68 : je 0x2000060eb9d ; ret 0x48ff
0x000002000060ed4a : je 0x2000060ed5c ; mov edx, r14d ; call 0x20000231018
0x000002000060ed6c : je 0x2000060ed83 ; mov edx, r14d ; call 0x20000231018
0x000002000060ed82 : je 0x2000060ed99 ; mov edx, r14d ; call 0x20000231018
0x000002000060ed98 : je 0x2000060edaf ; mov edx, r14d ; call 0x20000231018
0x000002000060f136 : je 0x2000060f1af ; mov rcx, qword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x000002000060f45b : je 0x2000060f489 ; js 0x2000060f4af ; add esp, 0x50 ; pop rdi ; ret
0x000002000060f49d : je 0x2000060f4ad ; xor edx, edx ; call 0x20000231017
0x000002000060fd2b : je 0x2000060fd5a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000061062c : je 0x2000061063c ; xor edx, edx ; call 0x20000231017
0x0000020000610647 : je 0x20000610657 ; xor edx, edx ; call 0x20000231017
0x0000020000610a9f : je 0x20000610aaf ; xor edx, edx ; call 0x20000231017
0x0000020000610aba : je 0x20000610aca ; xor edx, edx ; call 0x20000231017
0x0000020000610c3c : je 0x20000610c4c ; xor edx, edx ; call 0x20000231017
0x0000020000610c51 : je 0x20000610c61 ; xor edx, edx ; call 0x20000231017
0x0000020000614d72 : je 0x20000614d87 ; xor edx, edx ; mov rcx, rsi ; call 0x20000231019
0x0000020000614d85 : je 0x20000614d94 ; xor edx, edx ; call 0x20000231016
0x0000020000614faf : je 0x20000614fdd ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006156db : je 0x20000615709 ; jo 0x2000061572f ; add esp, 0x50 ; pop rdi ; ret
0x0000020000615cd6 : je 0x20000615d04 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000615e2e : je 0x20000615e5c ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000617b1b : je 0x20000617b49 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000619697 : je 0x200006196c5 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006198d9 : je 0x200006198e8 ; mov eax, 0xc0000303 ; ret
0x0000020000619a07 : je 0x20000619a35 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000061af53 : je 0x2000061af81 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000061b366 : je 0x2000061b394 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000061e668 : je 0x2000061e696 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000061ed9b : je 0x2000061edc9 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000061f4e4 : je 0x2000061f512 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000621e1e : je 0x20000621e4c ; jo 0x20000621e72 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000622ad7 : je 0x20000622b02 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000622be6 : je 0x20000622c14 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000624397 : je 0x200006243c5 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000624423 : je 0x20000624452 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000625bca : je 0x20000625bc4 ; ret
0x000002000062829e : je 0x200006282cc ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000629270 : je 0x2000062929e ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006293ca : je 0x200006293f8 ; js 0x2000062941e ; add esp, 0x50 ; pop rdi ; ret
0x0000020000629d99 : je 0x20000629dc7 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000629e37 : je 0x20000629e40 ; xor eax, eax ; ret
0x0000020000629e1c : je 0x20000629e4a ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000629e32 : je 0x20000629e5f ; cmp eax, 0xa ; je 0x20000629e45 ; xor eax, eax ; ret
0x000002000062ad28 : je 0x2000062ad56 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000062b15a : je 0x2000062b188 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000062b217 : je 0x2000062b245 ; js 0x2000062b26b ; add esp, 0x60 ; pop rdi ; ret
0x000002000062d243 : je 0x2000062d271 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000062d944 : je 0x2000062d972 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000630949 : je 0x20000630977 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000631870 : je 0x2000063189e ; push 0x50c48348 ; pop rdi ; ret
0x0000020000631a0a : je 0x20000631a38 ; jo 0x20000631a5e ; add esp, 0x50 ; pop rdi ; ret
0x0000020000633662 : je 0x20000633690 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006339e3 : je 0x20000633a11 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006344d5 : je 0x20000634503 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000634507 : je 0x2000063451a ; mov rax, qword ptr [rcx] ; add rax, 8 ; ret
0x000002000063461c : je 0x2000063464a ; push 0x40c48348 ; pop rdi ; ret
0x0000020000634716 : je 0x20000634744 ; push 0x40c48348 ; pop rdi ; ret
0x000002000063519f : je 0x200006351cd ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000063521d : je 0x2000063524b ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000636017 : je 0x2000063601d ; call rdx
0x0000020000636699 : je 0x200006366c7 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000637efa : je 0x20000637f28 ; js 0x20000637f4e ; add esp, 0x60 ; pop rdi ; ret
0x0000020000639260 : je 0x2000063928e ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000639be4 : je 0x20000639c12 ; js 0x20000639c38 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000639d32 : je 0x20000639d38 ; call rax
0x000002000063ad84 : je 0x2000063adb2 ; push 0x50c48348 ; pop rdi ; ret
0x000002000063b766 : je 0x2000063b76c ; call rax
0x000002000063b9fc : je 0x2000063ba2a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000063c263 : je 0x2000063c291 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000063cfac : je 0x2000063cfb6 ; and eax, 0x1f ; ret
0x000002000063d779 : je 0x2000063d7a3 ; push rax ; inc edx ; jmp 0x2000063d761
0x000002000063db4c : je 0x2000063db7b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000063de1f : je 0x2000063de4d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000063e455 : je 0x2000063e483 ; jo 0x2000063e4a9 ; add esp, 0x50 ; pop rdi ; ret
0x000002000063e59c : je 0x2000063e5ca ; add rsp, 0x20 ; pop rdi ; ret
0x000002000063ec2b : je 0x2000063ec59 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000063ef20 : je 0x2000063ef32 ; mov rdx, rbx ; xor ecx, ecx ; call r8
0x000002000063f708 : je 0x2000063f736 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000063fa51 : je 0x2000063fa7f ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000063fb69 : je 0x2000063fb97 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000064049f : je 0x200006404ac ; lea rax, qword ptr [rcx + 0x20] ; ret
0x00000200006404b7 : je 0x200006404c4 ; lea rax, qword ptr [rcx + 0x24] ; ret
0x0000020000640663 : je 0x20000640672 ; mov eax, 0x40000 ; ret
0x000002000064129d : je 0x200006412ad ; mov rdx, qword ptr [rdx + 0x10] ; call r8
0x0000020000641944 : je 0x20000641972 ; push 0x50c48348 ; pop rdi ; ret
0x000002000064224b : je 0x20000642279 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000642369 : je 0x20000642397 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000064279c : je 0x200006427ca ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006438cf : je 0x200006438e9 ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000643d5e : je 0x20000643d8c ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006441e7 : je 0x20000644215 ; and byte ptr [rip - 0x7ffffffb], ah ; ret
0x0000020000649edd : je 0x20000649f0b ; add rsp, 0x20 ; pop rdi ; ret
0x000002000064a9ae : je 0x2000064a9dc ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000064bbd4 : je 0x2000064bc02 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000064f4d6 : je 0x2000064f504 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000064f605 : je 0x2000064f633 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000064f62c : je 0x2000064f664 ; add rax, rdx ; jmp 0x2000064f63b
0x000002000064f657 : je 0x2000064f668 ; test cl, cl ; jne 0x2000064f668 ; mov al, 1 ; ret
0x000002000064fa85 : je 0x2000064faaf ; sub bh, bh ; ret
0x0000020000650060 : je 0x2000065008e ; push 0x50c48348 ; pop rdi ; ret
0x0000020000651274 : je 0x200006512a3 ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000651bb4 : je 0x20000651be2 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000652b87 : je 0x20000652b96 ; mov eax, 0xc0000034 ; ret
0x0000020000652f82 : je 0x20000652fb0 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000653b46 : je 0x20000653b74 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000653cdf : je 0x20000653d0d ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000654d05 : je 0x20000654d39 ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000654d5d : je 0x20000654d66 ; mov al, 1 ; ret
0x0000020000654d74 : je 0x20000654d93 ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000654f3e : je 0x20000654f49 ; call 0x20000671160
0x0000020000654f39 : je 0x20000654f62 ; test dl, 3 ; je 0x20000654f4e ; call 0x20000671165
0x00000200006575da : je 0x20000657609 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000658cda : je 0x20000658d08 ; jo 0x20000658d2e ; add esp, 0x50 ; pop rdi ; ret
0x0000020000659465 : je 0x20000659493 ; push 0x40c48348 ; pop rdi ; ret
0x000002000065abfa : je 0x2000065ac28 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000065ccaf : je 0x2000065ccdd ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000661b50 : je 0x20000661b60 ; call 0x2000001af0d
0x0000020000661c84 : je 0x20000661cb3 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000661d2a : je 0x20000661d58 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000662b54 : je 0x20000662b82 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000662f06 : je 0x20000662ef8 ; xchg dword ptr [rcx + 0x2c], r8d ; xor eax, eax ; ret
0x000002000066317a : je 0x200006631a8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000066561e : je 0x2000066564c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000665a47 : je 0x20000665ac5 ; js 0x20000665a38 ; xchg eax, ecx ; ret 0xffbc
0x0000020000665a46 : je 0x20000665ac6 ; js 0x20000665a39 ; xchg eax, ecx ; ret 0xffbc
0x0000020000667eb5 : je 0x20000667ee3 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000668467 : je 0x20000668474 ; mov dword ptr [r8], eax ; mov eax, r9d ; ret
0x0000020000668d73 : je 0x20000668da1 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000669400 : je 0x20000669465 ; lea rdx, qword ptr [rsp + 0x58] ; call rax
0x0000020000669495 : je 0x200006694c3 ; push 0x40c48348 ; pop rdi ; ret
0x00000200006697fc : je 0x2000066982a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000066a5d9 : je 0x2000066a5e8 ; mov eax, 0xc000000d ; ret
0x000002000066a8e7 : je 0x2000066a915 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000066ac91 : je 0x2000066acbf ; and byte ptr [rbx - 0x74dbdbac], cl ; ret 0x8d4c
0x000002000066b035 : je 0x2000066b063 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066bffd : je 0x2000066c02b ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000066d6bc : je 0x2000066d6ea ; js 0x2000066d710 ; add esp, 0x50 ; pop rdi ; ret
0x000002000066de45 : je 0x2000066de74 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000066e3a3 : je 0x2000066e3d1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000066e56f : je 0x2000066e57e ; mov eax, 0xc0000002 ; ret
0x000002000066e58f : je 0x2000066e59e ; mov eax, 0xc0000002 ; ret
0x000002000066f597 : je 0x2000066f5a6 ; mov eax, 0xc0000002 ; ret
0x000002000066f586 : je 0x2000066f5b4 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000066f5b3 : je 0x2000066f5c2 ; mov eax, 0xc0000002 ; ret
0x000002000066f7be : je 0x2000066f7ec ; js 0x2000066f812 ; add esp, 0x60 ; pop rdi ; ret
0x000002000066fd1b : je 0x2000066fd49 ; js 0x2000066fd6f ; add esp, 0x60 ; pop rdi ; ret
0x000002000066fe2a : je 0x2000066fe58 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000067050d : je 0x2000067053b ; push 0x50c48348 ; pop rdi ; ret
0x0000020000671ece : je 0x20000671edc ; bts ecx, 0x17 ; or dword ptr [rdx], ecx ; ret
0x0000020000672673 : je 0x200006726a1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000672ea0 : je 0x20000672ecf ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000675ec0 : je 0x20000675eee ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000677137 : je 0x20000677165 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000677a83 : je 0x20000677a8d ; call rax
0x0000020000678223 : je 0x20000678252 ; sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x0000020000679f38 : je 0x20000679f4a ; mov rcx, rax ; call r8
0x000002000067a1a0 : je 0x2000067a1b2 ; mov rcx, rax ; call r8
0x000002000067a577 : je 0x2000067a63d ; mov rcx, r14 ; call rax
0x000002000067b6d8 : je 0x2000067b706 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000067cb21 : je 0x2000067cb4f ; add rsp, 0x20 ; pop rdi ; ret
0x000002000067d050 : je 0x2000067d07e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000067e5ed : je 0x2000067e61b ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000067e6cc : je 0x2000067e6fa ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000680028 : je 0x2000068004c ; jmp 0x1ffc3f39134
0x0000020000680040 : je 0x2000068006f ; js 0x20000680095 ; add esp, 0x50 ; pop r15 ; ret
0x00000200006809ce : je 0x200006809fc ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000680dad : je 0x20000680ddb ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000680ec8 : je 0x20000680ef6 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006810a1 : je 0x200006810cf ; push 0x40c48348 ; pop rdi ; ret
0x000002000068166e : je 0x2000068169c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000681788 : je 0x200006817b6 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000681d9b : je 0x20000681dc9 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000681ee3 : je 0x20000681f12 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006830c8 : je 0x200006830f6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000068599d : je 0x200006859cb ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000685ea8 : je 0x20000685ed6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006863e6 : je 0x20000686414 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000686458 : je 0x20000686486 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006873a8 : je 0x2000068738f ; in al, dx ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000687511 : je 0x20000687540 ; add rsp, 0x20 ; pop r15 ; ret
0x000002000068a7ca : je 0x2000068a7f8 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000068ac07 : je 0x2000068ac35 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000068b318 : je 0x2000068b346 ; jo 0x2000068b36c ; add esp, 0x50 ; pop rdi ; ret
0x000002000068c067 : je 0x2000068c095 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000068c27b : je 0x2000068c2aa ; add rsp, 0x20 ; pop r15 ; ret
0x000002000068cf0d : je 0x2000068cf3c ; add rsp, 0x20 ; pop r14 ; ret
0x000002000069090b : je 0x20000690939 ; jo 0x2000069095f ; add esp, 0x50 ; pop rdi ; ret
0x0000020000694809 : je 0x20000694837 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000694e3b : je 0x20000694e69 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000695433 : je 0x20000695461 ; jo 0x20000695487 ; add esp, 0x50 ; pop rdi ; ret
0x000002000069790c : je 0x2000069793a ; push 0x40c48348 ; pop rdi ; ret
0x00000200006979c8 : je 0x200006979f6 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000699d1a : je 0x20000699d48 ; jo 0x20000699d6e ; add esp, 0x50 ; pop rdi ; ret
0x0000020000699e32 : je 0x20000699e60 ; jo 0x20000699e86 ; add esp, 0x50 ; pop rdi ; ret
0x000002000069bc1b : je 0x2000069bc49 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000069cc92 : je 0x2000069ccc1 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000069d713 : je 0x2000069d741 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000069d7e6 : je 0x2000069d814 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000069dcc8 : je 0x2000069dcf7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000069e985 : je 0x2000069e9b3 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006a86a3 : je 0x200006a8020 ; mov al, 1 ; ret
0x00000200006a8012 : je 0x200006a869c ; xor al, al ; ret
0x00000200006a8011 : je 0x200006a869d ; xor al, al ; ret
0x00000200006a8d14 : je 0x200006a8d3f ; cmp byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200006a8e26 : je 0x200006a8e3b ; mov ecx, 4 ; call 0x200006b50a1
0x00000200006a93b4 : je 0x200006a93e2 ; push 0x40c48348 ; pop rdi ; ret
0x00000200006a951e : je 0x200006a954c ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006a9dd3 : je 0x200006a9e01 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006ab584 : je 0x200006ab5b2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006abe4a : je 0x200006abe78 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006abf90 : je 0x200006abfd5 ; ret 0x48ff
0x00000200006b00e1 : je 0x200006b010f ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b01b3 : je 0x200006b01e1 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b05e0 : je 0x200006b0565 ; ret 0x89ff
0x00000200006b05be : je 0x200006b05ec ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b0668 : je 0x200006b06e7 ; ret 0x8bff
0x00000200006b2a1c : je 0x200006b2a4a ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b33f8 : je 0x200006b3426 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006b3ede : je 0x200006b3f0c ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b4377 : je 0x200006b43a5 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b4468 : je 0x200006b4496 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b44ca : je 0x200006b44f8 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b4534 : je 0x200006b4562 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b49ce : je 0x200006b49fa ; adc byte ptr [rcx + rcx*4 + 0x1a], cl ; ret
0x00000200006b52a6 : je 0x200006b52d4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006b585b : je 0x200006b5889 ; mov rcx, rbx ; call 0x200001d1b2b
0x00000200006b59a3 : je 0x200006b59d1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006b5a13 : je 0x200006b5a1c ; xor eax, eax ; ret
0x00000200006b6153 : je 0x200006b6181 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b61f1 : je 0x200006b621f ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b62b8 : je 0x200006b62e6 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b683f : je 0x200006b686d ; push 0x40c48348 ; pop rdi ; ret
0x00000200006b729a : je 0x200006b72a6 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200006b738c : je 0x200006b73ba ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006b77db : je 0x200006b7809 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b7b79 : je 0x200006b7ba7 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b7c08 : je 0x200006b7c36 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b7c96 : je 0x200006b7cc4 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b7d25 : je 0x200006b7d53 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b7dc0 : je 0x200006b7dee ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b7f33 : je 0x200006b7f61 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b7fa8 : je 0x200006b7fd6 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006b868e : je 0x200006b86b9 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200006b8cbe : je 0x200006b8ced ; push rax ; add rsp, 0x30 ; pop rdi ; jmp rax
0x00000200006b8d7b : je 0x200006b8daa ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006b9546 : je 0x200006b9575 ; push rax ; add rsp, 0x30 ; pop rdi ; jmp rax
0x00000200006b9a3e : je 0x200006b9aba ; mov r8d, edi ; call rax
0x00000200006b9f9a : je 0x200006b9fa6 ; mov cl, r9b ; call rax
0x00000200006bb1c9 : je 0x200006bb1f7 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006bb1fb : je 0x200006bb1fc ; mov dword ptr [r8], r9d ; ret
0x00000200006bb639 : je 0x200006bb667 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006bb705 : je 0x200006bb733 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006bb784 : je 0x200006bb78f ; xor ecx, ecx ; mov rax, rcx ; ret
0x00000200006bb925 : je 0x200006bb953 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006bbb19 : je 0x200006bbb47 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006bc227 : je 0x200006bc237 ; call 0x20000012695
0x00000200006bcfb2 : je 0x200006bcfba ; jmp rax
0x00000200006bd5fd : je 0x200006bd62b ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006bde14 : je 0x200006bde42 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006bfda4 : je 0x200006bfdd2 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006c0011 : je 0x200006c001a ; xor eax, eax ; ret
0x00000200006c000c : je 0x200006c0024 ; cmp edx, 1 ; je 0x200006c001f ; xor eax, eax ; ret
0x00000200006c0299 : je 0x200006c02c7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c0354 : je 0x200006c036b ; mov rcx, rbx ; call rax
0x00000200006c03bc : je 0x200006c03c5 ; call rax
0x00000200006c0419 : je 0x200006c0447 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c0468 : je 0x200006c047f ; mov rcx, rdi ; call rax
0x00000200006c0484 : je 0x200006c0496 ; mov rdx, rbx ; mov rcx, rdi ; call rax
0x00000200006c04df : je 0x200006c04ef ; mov rcx, rbx ; call rax
0x00000200006c04f4 : je 0x200006c0506 ; mov edx, edi ; mov rcx, rbx ; call rax
0x00000200006c05ef : je 0x200006c05fb ; mov rcx, rdi ; call rax
0x00000200006c0607 : je 0x200006c0613 ; mov rcx, rdi ; call rax
0x00000200006c0660 : je 0x200006c066c ; mov rcx, rdi ; call rax
0x00000200006c0671 : je 0x200006c0683 ; mov rdx, rbx ; mov rcx, rdi ; call rax
0x00000200006c1245 : je 0x200006c1273 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c13b1 : je 0x200006c13df ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c1634 : je 0x200006c1663 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006c2038 : je 0x200006c2066 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006c2107 : je 0x200006c2135 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006c22eb : je 0x200006c2319 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006c2e8b : je 0x200006c2e9a ; mov eax, 1 ; ret
0x00000200006c2f98 : je 0x200006c2fc6 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c3117 : je 0x200006c3145 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c31c3 : je 0x200006c31f1 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c3526 : je 0x200006c3554 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c5094 : je 0x200006c50c2 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006c5142 : je 0x200006c5170 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006c53aa : je 0x200006c53d8 ; push 0x40c48348 ; pop rdi ; ret
0x00000200006c61db : je 0x200006c6209 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006c74bf : je 0x200006c74ed ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006c78e9 : je 0x200006c7917 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006c7993 : je 0x200006c79c1 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006c85da : je 0x200006c85ea ; cmp dl, al ; jne 0x200006c85ea ; xor eax, eax ; ret
0x00000200006c9134 : je 0x200006c9162 ; js 0x200006c9188 ; add esp, 0x60 ; pop rdi ; ret
0x00000200006c94a3 : je 0x200006c94d1 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006c9653 : je 0x200006c9681 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006cb6d4 : je 0x200006cb6dd ; xor eax, eax ; ret
0x00000200006cb9d3 : je 0x200006cba01 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006cbf69 : je 0x200006cbf71 ; xor eax, eax ; ret
0x00000200006cc79a : je 0x200006cc7ac ; add rsp, 0x30 ; pop rbx ; jmp r10
0x00000200006ccb88 : je 0x200006ccbb6 ; push 0x50c48348 ; pop rdi ; ret
0x00000200006ccebe : je 0x200006cceec ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006ce1ee : je 0x200006ce21c ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006ce2cc : je 0x200006ce2fa ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006cec0f : je 0x200006cec3d ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006d2c10 : je 0x200006d2c3e ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006d2f55 : je 0x200006d2f84 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200006d7537 : je 0x200006d7566 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200006d7a16 : je 0x200006d7a44 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006d7d70 : je 0x200006d7d9e ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006d9500 : je 0x200006d94a8 ; ret 0x48ff
0x00000200006d95bf : je 0x200006d95ed ; push rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200006d9770 : je 0x200006d979f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006d98eb : je 0x200006d9919 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006db721 : je 0x200006db74f ; and byte ptr [rcx + rcx*4 + 0x7c], al ; and al, 0x2c ; call rax
0x00000200006dc148 : je 0x200006dc176 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006dcc7a : je 0x200006dcca8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200006dcf0d : je 0x200006dcf1e ; mov eax, dword ptr [rcx + 0x44] ; mov dword ptr [r8], eax ; ret
0x00000200007417cf : je 0x200007417fd ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007429bf : je 0x200007429ed ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200007435fe : je 0x2000074362c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000743ed4 : je 0x20000743f02 ; push 0x50c48348 ; pop rdi ; ret
0x0000020000743f98 : je 0x20000743f3f ; ret
0x0000020000744190 : je 0x20000744135 ; ret
0x0000020000744b00 : je 0x20000744b2e ; jo 0x20000744b54 ; add esp, 0x50 ; pop rdi ; ret
0x00000200007450b4 : je 0x200007450f8 ; add rbp, 8 ; jmp 0x20000745086
0x00000200007455f7 : je 0x20000745625 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000074580e : je 0x2000074583c ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007467d8 : je 0x2000074676a ; ret
0x000002000074828a : je 0x200007482b8 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000749479 : je 0x200007494a7 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000074a5df : je 0x2000074a60d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000074b9c5 : je 0x2000074b9f4 ; js 0x2000074ba1a ; add esp, 0x50 ; pop r15 ; ret
0x000002000074bb0b : je 0x2000074bb39 ; pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000074bb48 : je 0x2000074bb83 ; ret
0x000002000074dddb : je 0x2000074ddef ; mov rbx, qword ptr [rsp + 8] ; mov rax, r10 ; ret
0x000002000074fda5 : je 0x2000074fdd3 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000751440 : je 0x2000075146e ; add rsp, 0x20 ; pop rdi ; ret
0x000002000075163a : je 0x20000751668 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000075edca : je 0x2000075edf8 ; xor byte ptr [rbp + rcx*4 + 0x25], cl ; insb byte ptr [rdi], dx ; ret
0x000002000075f74f : je 0x2000075f77d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000075f837 : je 0x2000075f865 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000760d55 : je 0x20000760d83 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000760f32 : je 0x20000760f60 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000761031 : je 0x2000076105f ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000761c85 : je 0x20000761cb3 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007633eb : je 0x20000763419 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200007635fe : je 0x2000076362c ; add rsp, 0x20 ; pop rdi ; ret
0x000002000076390b : je 0x20000763939 ; js 0x2000076395f ; add esp, 0x60 ; pop rdi ; ret
0x0000020000764766 : je 0x20000764794 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000766a0e : je 0x20000766a3c ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000768462 : je 0x20000768490 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007686bb : je 0x200007686e9 ; jo 0x2000076870f ; add esp, 0x50 ; pop rdi ; ret
0x000002000076943a : je 0x20000769469 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000769bdc : je 0x20000769c0a ; add rsp, 0x20 ; pop rdi ; ret
0x000002000076a92f : je 0x2000076a95d ; add rsp, 0x20 ; pop rdi ; ret
0x000002000077a3f5 : je 0x2000077a433 ; or al, 0xe8 ; ret
0x000002000077a996 : je 0x2000077a989 ; je 0x2000077aa09 ; stosd dword ptr [rdi], eax ; push qword ptr [rbx] ; fucomi st(1) ; ret
0x000002000077a998 : je 0x2000077aa07 ; stosd dword ptr [rdi], eax ; push qword ptr [rbx] ; fucomi st(1) ; ret
0x000002000077c45e : je 0x2000077c403 ; dec esp ; mov rcx, r11 ; call rbx
0x000002000076de0f : je 0x2000077e5a1 ; ret
0x000002000076eb29 : je 0x2000077f0be ; xor eax, eax ; ret
0x000002000077f8d2 : je 0x2000077f900 ; push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200007800d5 : je 0x20000780103 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000780157 : je 0x20000780185 ; pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200007812e0 : je 0x2000078130e ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000784ce7 : je 0x20000784d15 ; js 0x20000784d3b ; add esp, 0x60 ; pop rdi ; ret
0x00000200007856dc : je 0x200007856ed ; or eax, 0xffffffff ; ret
0x0000020000785c85 : je 0x20000785cb3 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000008585 : jg 0x2000000858a ; ret
0x0000020000058de6 : jg 0x20000058ddf ; and qword ptr [r14 + 0x18], rax ; jmp 0x20000058db8
0x000002000005b1de : jg 0x2000005b1d8 ; ret
0x000002000005c2d8 : jg 0x2000005c2ff ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000007380b : jg 0x2000007381f ; ret 0xb8c3
0x0000020000074141 : jg 0x20000074154 ; test eax, eax ; js 0x20000074153 ; mov dword ptr [r10], ecx ; ret
0x00000200000bff8d : jg 0x200000bff7e ; sbb eax, 0x81ffffda ; jmp qword ptr [rdx]
0x00000200000bff8c : jg 0x200000bff7f ; sbb eax, 0x81ffffda ; jmp qword ptr [rdx]
0x00000200000ef55c : jg 0x200000ef57d ; mov eax, 1 ; ret
0x00000200000fe664 : jg 0x200000fe66f ; add qword ptr [rdx + 8], -8 ; ret
0x00000200001057ba : jg 0x200001057ca ; add byte ptr [rax - 0x75], cl ; int 0xe8
0x000002000010d881 : jg 0x2000010d89b ; test dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000124ebc : jg 0x20000124ed0 ; ret 0xccc3
0x0000020000132641 : jg 0x2000013265a ; add byte ptr [rax], al ; ret
0x0000020000132eb1 : jg 0x20000132f2c ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000133771 : jg 0x200001337c3 ; sub eax, ecx ; shr rax, 0x3f ; ret
0x0000020000133d4d : jg 0x20000133d47 ; ret
0x0000020000135ed3 : jg 0x20000135ecd ; ret
0x000002000018ef94 : jg 0x2000018f00f ; or al, byte ptr [rcx - 1] ; ret 0x834a
0x00000200001a9b3d : jg 0x200001a9aea ; out -1, eax ; add rsp, 0x58 ; ret
0x00000200001ab690 : jg 0x200001ab6c4 ; sbb eax, 0x48047400 ; mov eax, ecx ; ret
0x00000200001e2bd1 : jg 0x200001e2b66 ; mov r11b, 0x89 ; add dword ptr [rax - 0x75], ecx ; ret
0x00000200001e2bd0 : jg 0x200001e2b67 ; mov r11b, 0x89 ; add dword ptr [rax - 0x75], ecx ; ret
0x0000020000212514 : jg 0x200002124cd ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000217823 : jg 0x20000217894 ; adc byte ptr [rcx - 0x75], cl ; jrcxz 0x20000217890 ; ret
0x0000020000227ca0 : jg 0x20000227c2f ; ret 0xe083
0x0000020000227ca5 : jg 0x20000227ce8 ; enter 0x6674, -0x75 ; ret 0xe083
0x00000200003abd55 : jg 0x200003abd35 ; dec dword ptr [rax - 0x7f] ; ret
0x00000200003ee14d : jg 0x200003ee155 ; mov eax, r10d ; ret
0x00000200003ee14d : jg 0x200003ee156 ; mov eax, r10d ; ret
0x00000200003f7912 : jg 0x200003f78a8 ; mov esp, 0x8b000001 ; adc esi, edi ; ret 0
0x0000020000405875 : jg 0x200004058cf ; out dx, eax ; jmp qword ptr [rbx]
0x0000020000412853 : jg 0x20000412858 ; mov eax, edx ; ret
0x0000020000412853 : jg 0x20000412859 ; mov eax, edx ; ret
0x0000020000420d31 : jg 0x20000420d79 ; ret 0x8bff
0x0000020000433dad : jg 0x20000433e0c ; ret 0x89ff
0x0000020000435069 : jg 0x20000435023 ; ret
0x000002000044c6a9 : jg 0x2000044c6c8 ; call 0x200000706f1
0x000002000045fa65 : jg 0x2000045fa35 ; dec dword ptr [rbx - 0x7ecbdb84] ; call qword ptr [rax]
0x0000020000475986 : jg 0x200004759d3 ; and al, 0x20 ; call 0x2000009a4a7
0x00000200004b803d : jg 0x200004b7fe7 ; sar bh, 0x8b ; ret
0x00000200004bb361 : jg 0x200004bb37b ; add byte ptr [rdi], cl ; mov bh, 0x48 ; add bh, bh ; ret 0x348
0x00000200004c5025 : jg 0x200004c5072 ; call 0x1ffc2b7581a
0x00000200004e1da1 : jg 0x200004e1da9 ; ret 0xa4eb
0x00000200004fe61d : jg 0x200004fe692 ; ret
0x000002000050a9de : jg 0x2000050aa2b ; psubsb mm7, mm2 ; pop rcx ; ret
0x000002000050ac17 : jg 0x2000050ac64 ; shr al, 0xc1 ; push rdi ; ret
0x000002000050acbb : jg 0x2000050ad08 ; shr al, 0x1d ; push rdi ; ret
0x000002000050af2c : jg 0x2000050af79 ; mov al, ch ; lodsb al, byte ptr [rsi] ; push rsp ; ret
0x000002000050b6c7 : jg 0x2000050b714 ; psubsb mm2, qword ptr [rcx] ; ret
0x000002000050c8ee : jg 0x2000050c8fd ; add byte ptr [rax - 0x7d], cl ; ret 0xe904
0x0000020000510879 : jg 0x200005108c6 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call 0x200001403e6
0x00000200005108c2 : jg 0x2000051090f ; cmpsd dword ptr [rsi], dword ptr [rdi] ; call 0x200001403e6
0x0000020000510ba7 : jg 0x20000510bf4 ; out dx, eax ; call 0x20000140806
0x00000200005125a3 : jg 0x200005125f0 ; cwde ; call 0x200001403e6
0x000002000051261c : jg 0x20000512669 ; cwde ; call 0x200001403e6
0x0000020000512674 : jg 0x200005126c1 ; cwde ; call 0x200001403e6
0x00000200005127fa : jg 0x20000512847 ; cwde ; call 0x200001403e6
0x0000020000512c43 : jg 0x20000512c90 ; xchg eax, edi ; call 0x200001403e6
0x0000020000512d63 : jg 0x20000512db0 ; xchg eax, edi ; call 0x200001403e6
0x0000020000512fef : jg 0x2000051303c ; xchg eax, edi ; call 0x200001403e6
0x00000200005130fd : jg 0x2000051314a ; xchg eax, edi ; call 0x200001403e6
0x0000020000513bab : jg 0x20000513bf8 ; and al, 0x50 ; call 0x200001403e7
0x00000200005145d6 : jg 0x20000514623 ; and al, 0x70 ; call 0x200001403e7
0x0000020000514670 : jg 0x200005146bd ; and al, 0x70 ; call 0x200001403e7
0x0000020000514749 : jg 0x20000514796 ; and al, 0x70 ; call 0x200001403e7
0x0000020000514e17 : jg 0x20000514e64 ; call 0x20000140546
0x000002000051857d : jg 0x20000518583 ; inc dword ptr [rcx + 0x3b] ; ret
0x000002000051b0bf : jg 0x2000051b10c ; psubsb mm3, qword ptr [rcx] ; push rbx ; ret 0x8bff
0x000002000051d7e5 : jg 0x2000051d832 ; and al, 0x78 ; call 0x200001403e7
0x000002000051dc29 : jg 0x2000051dc76 ; enter -0x5018, 0x27 ; ret 0x85ff
0x000002000052e886 : jg 0x2000052e845 ; inc dword ptr [rbp - 0x17ad8b40] ; ret 0xbfa2
0x000002000057fb95 : jg 0x2000057fb8e ; lodsb al, byte ptr [rsi] ; call qword ptr [rax - 0x173d0317]
0x0000020000593cd5 : jg 0x20000593c6f ; ret 0x33ff
0x00000200004cb90c : jg 0x200005c74d6 ; xor al, al ; ret
0x00000200005d7948 : jg 0x200005d7945 ; dec dword ptr [rax - 0x75] ; ret
0x00000200005e6915 : jg 0x200005e6960 ; mov al, 0xe8 ; ret
0x00000200005f8c99 : jg 0x200005f8ca8 ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200005fd146 : jg 0x200005fd14c ; add al, al ; ret
0x000002000060009b : jg 0x200006000a4 ; mov al, 1 ; ret
0x0000020000603b8d : jg 0x20000603b65 ; ret 0x48ff
0x0000020000616bcd : jg 0x20000616bd9 ; ret 0x48ff
0x000002000062586b : jg 0x20000625877 ; call 0x20000031b40
0x0000020000641386 : jg 0x20000641399 ; sub rax, r8 ; mov qword ptr [rcx + 0x48], rax ; ret
0x000002000065f0f2 : jg 0x2000065f0f7 ; ret
0x000002000068ee00 : jg 0x2000068ee0a ; add rsp, 0x28 ; ret
0x00000200006ac790 : jg 0x200006ac753 ; inc dword ptr [rbp + 0x391275c0] ; ret
0x00000200006b49ed : jg 0x200006b4a28 ; ret 0xfff
0x00000200006b6a6d : jg 0x200006b69f3 ; ret 0x48ff
0x00000200006c33f7 : jg 0x200006c33fd ; ret
0x00000200006d7395 : jg 0x200006d7350 ; ret 0x8bff
0x00000200006d735e : jg 0x200006d7369 ; sbb al, 0xb8 ; ret 0x89ff
0x000002000073bd07 : jg 0x2000073bd5d ; mov rax, rdx ; jmp 0x2000073bd14
0x000002000074986b : jg 0x20000749840 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007840d7 : jg 0x20000784065 ; sar byte ptr [rax + 0x7a], 0xe8 ; lahf ; ret 0xff9b
0x00000200007840d6 : jg 0x20000784066 ; sar byte ptr [rax + 0x7a], 0xe8 ; lahf ; ret 0xff9b
0x0000020000784248 : jg 0x20000784298 ; xor byte ptr [rbx + 0x3480843], cl ; ret
0x0000020000004914 : jge 0x2000000494e ; add byte ptr [rcx - 0x3f], cl ; sti ; add ecx, dword ptr [rcx - 0x75] ; ret
0x00000200000278cc : jge 0x200000278e5 ; add dh, dh ; ret 0xf0f
0x000002000002a74f : jge 0x2000002a7bc ; or dword ptr [rax], eax ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000047920 : jge 0x20000047989 ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x00000200000479b0 : jge 0x20000047a19 ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x0000020000106274 : jge 0x200001062a1 ; add bh, bh ; ret
0x00000200001546d7 : jge 0x20000154743 ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x000002000019fffc : jge 0x2000019ff83 ; add byte ptr [rbp - 0x3e], dh ; jmp 0x2000019ffbf
0x00000200001c6253 : jge 0x200001c61e0 ; clc ; add eax, 0x8b4c087c ; ret 0xfbe8
0x00000200001c6252 : jge 0x200001c61e1 ; clc ; add eax, 0x8b4c087c ; ret 0xfbe8
0x00000200001c7951 : jge 0x200001c7973 ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x00000200001f4cb1 : jge 0x200001f4c43 ; je 0x200001f4cc6 ; ret 0x1a8
0x0000020000230b48 : jge 0x20000230b27 ; xor eax, eax ; ret
0x00000200003aa453 : jge 0x200003aa440 ; ret 0xfef5
0x00000200003aa452 : jge 0x200003aa441 ; ret 0xfef5
0x00000200003b4a9d : jge 0x200003b4ab7 ; jmp 0x200003b46c5
0x00000200003b7155 : jge 0x200003b7176 ; add byte ptr [rbp + 0x3b], al ; ret 0x870f
0x0000020000571120 : jge 0x200003e1f05 ; xor al, al ; ret
0x00000200003e37cc : jge 0x200003e37d7 ; movzx eax, cl ; ret
0x000002000042559b : jge 0x200004255a0 ; ret 0x48ff
0x00000200004671f5 : jge 0x20000467184 ; call 0x20000463e9e
0x000002000047956e : jge 0x20000479588 ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ac883 : jge 0x200004ac89d ; jmp 0x200004ac5c4
0x00000200004b753f : jge 0x200004b74f4 ; sar bh, 0x8b ; ret
0x00000200004c7ba0 : jge 0x200004c7b6a ; mov rcx, rax ; call 0x200000ecdec
0x00000200004facff : jge 0x200004fac87 ; ret
0x00000200005047ff : jge 0x200005047ec ; ret 0x4cff
0x0000020000510aff : jge 0x20000510b29 ; ret 0x4cff
0x000002000051522d : jge 0x200005151d0 ; mov qword ptr [rbp - 0x60], r14 ; call 0x20000140549
0x000002000051cbe6 : jge 0x2000051cbbc ; call 0x20000141505
0x0000020000521f2f : jge 0x20000521f46 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000052513f : jge 0x200005250e6 ; ret 0x41ff
0x000002000052ca84 : jge 0x2000052ca8f ; je 0x2000052cab7 ; add rbp, 2 ; jmp 0x2000052ca59
0x00000200005797b7 : jge 0x2000057979d ; ret 0x8bff
0x000002000058e1a9 : jge 0x2000058e187 ; call 0x200001bc7e1
0x000002000058e200 : jge 0x2000058e1e2 ; call 0x200001bc7e1
0x00000200005de972 : jge 0x200005de92c ; add dword ptr [rax - 0x75], ecx ; ret
0x000002000061faff : jge 0x2000061fb3f ; mov cl, 0xff ; add rsp, 0x58 ; ret
0x00000200006a294c : jge 0x200006a2917 ; cli ; push rsi ; outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x00000200006a2b2c : jge 0x200006a2af7 ; cli ; push rsi ; outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x00000200006aaef0 : jge 0x200006aaf41 ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x00000200006c6392 : jge 0x200006c6399 ; add dh, dh ; ret
0x00000200006d7b37 : jge 0x200006d7af9 ; ret 0x48ff
0x00000200006d7b37 : jge 0x200006d7b00 ; ret 0x48ff
0x00000200006db5bb : jge 0x200006db542 ; ret 0x40ff
0x0000020000746259 : jge 0x20000746224 ; inc dword ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b45
0x00000200007470bf : jge 0x2000074706c ; ret
0x000002000074707f : jge 0x200007470f2 ; ret
0x0000020000750757 : jge 0x200007507b0 ; mov eax, 0xc48348ff ; pop rbx ; ret
0x00000200007653e1 : jge 0x2000076545c ; add dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000007f2c : jl 0x20000007f5b ; push 0x40c48348 ; pop r14 ; ret
0x000002000000893b : jl 0x2000000896a ; add rsp, 0x70 ; pop r13 ; ret
0x0000020000008e7f : jl 0x20000008eae ; add rsp, 0x20 ; pop r14 ; ret
0x000002000000ae7f : jl 0x2000000aeae ; add rsp, 0x20 ; pop r14 ; ret
0x000002000000d624 : jl 0x2000000d653 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000010a97 : jl 0x20000010ac6 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000010b07 : jl 0x20000010b36 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000010c5e : jl 0x20000010c8d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000012cdc : jl 0x20000012d0b ; push 0x40c48348 ; pop r14 ; ret
0x0000020000015cba : jl 0x20000015ce9 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000018e86 : jl 0x20000018eb5 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000192db : jl 0x200000192c7 ; ret
0x00000200000192d5 : jl 0x20000019303 ; and byte ptr [rcx - 0x1783dbbc], cl ; ret
0x000002000001a3d0 : jl 0x2000001a3ff ; push 0x40c48348 ; pop r14 ; ret
0x000002000001c35a : jl 0x2000001c363 ; mov al, 1 ; ret
0x000002000001c8dd : jl 0x2000001c90c ; push 0x40c48348 ; pop r14 ; ret
0x000002000001d052 : jl 0x2000001d068 ; add cl, ch ; imul edi, ebp, -1 ; push rsi ; ret
0x000002000001e105 : jl 0x2000001e134 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000001e6f5 : jl 0x2000001e724 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000001f19d : jl 0x2000001f1cc ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000021cf3 : jl 0x20000021d22 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000022a2b : jl 0x20000022a59 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000023af8 : jl 0x20000023b27 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000024962 : jl 0x20000024991 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000025df2 : jl 0x20000025e21 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000002623f : jl 0x2000002626a ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000027ef9 : jl 0x20000027e88 ; ret 0xb60f
0x0000020000028d24 : jl 0x20000028d53 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000002ab1e : jl 0x2000002ab4d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000002cf16 : jl 0x2000002cf45 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000031ec3 : jl 0x20000031ef2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000333ba : jl 0x200000333e9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000339df : jl 0x20000033a0e ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000035e74 : jl 0x20000035ea3 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000037b27 : jl 0x20000037b56 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000039090 : jl 0x200000390bb ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000003990f : jl 0x2000003993a ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000003a9a8 : jl 0x2000003a9d6 ; jo 0x2000003a9fc ; add esp, 0x50 ; pop rbp ; ret
0x000002000003b186 : jl 0x2000003b1b3 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x000002000003b694 : jl 0x2000003b6c3 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003cbca : jl 0x2000003cbf9 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003d7d4 : jl 0x2000003d803 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003e5fe : jl 0x2000003e62d ; push 0x40c48348 ; pop r14 ; ret
0x000002000003f7ca : jl 0x2000003f7f9 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000003f87e : jl 0x2000003f8ad ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000040a5e : jl 0x20000040a8d ; jo 0x20000040ab3 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000040ccf : jl 0x20000040cfe ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000004235f : jl 0x2000004238e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000441ad : jl 0x200000441dc ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000445d9 : jl 0x20000044608 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000044bab : jl 0x20000044bda ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000046083 : jl 0x200000460b2 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000004af3a : jl 0x2000004af65 ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000004b34c : jl 0x2000004b37b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000004b8c5 : jl 0x2000004b8f4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000004bac9 : jl 0x2000004baf8 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000004bb4c : jl 0x2000004bb7b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000004c04f : jl 0x2000004c07e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000004c13c : jl 0x2000004c16b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000004d6eb : jl 0x2000004d71a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000004db7e : jl 0x2000004dbad ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000004eeec : jl 0x2000004ef1b ; push 0x40c48348 ; pop r15 ; ret
0x000002000004feb1 : jl 0x2000004fee0 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000052cad : jl 0x20000052cda ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x0000020000052dd1 : jl 0x20000052dfe ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200000534b3 : jl 0x200000534fe ; add dword ptr [rax], eax ; jne 0x200000534cb ; xor al, al ; ret
0x000002000005c04a : jl 0x2000005c078 ; push 0x50c48348 ; pop rbp ; ret
0x000002000005cbc7 : jl 0x2000005cbf6 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000005e6b7 : jl 0x2000005e6e6 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000064c81 : jl 0x20000064cb0 ; add rsp, 0x68 ; pop rsi ; pop rbx ; ret
0x0000020000065d93 : jl 0x20000065dc0 ; xor byte ptr [rcx + 0x5e], al ; pop r12 ; ret
0x0000020000068381 : jl 0x200000683b0 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000006a514 : jl 0x2000006a543 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000006a5bd : jl 0x2000006a5ec ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000072c12 : jl 0x20000072c41 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000073d80 : jl 0x20000073daf ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000073f16 : jl 0x20000073f45 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000073f29 : jl 0x20000073f58 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000744da : jl 0x20000074509 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000075405 : jl 0x20000075433 ; jo 0x20000075459 ; add esp, 0x50 ; pop rbp ; ret
0x000002000007998e : jl 0x200000799bd ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000079ebe : jl 0x20000079eed ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000007acec : jl 0x2000007ad1b ; push 0x40c48348 ; pop r14 ; ret
0x000002000007b905 : jl 0x2000007b934 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000007f269 : jl 0x2000007f298 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000085ec0 : jl 0x20000085ec5 ; ret
0x00000200000867d1 : jl 0x200000867ac ; or byte ptr [rax], al ; je 0x200000867e2 ; xor eax, eax ; ret
0x00000200000882d8 : jl 0x20000088306 ; push 0x40c48348 ; pop rbp ; ret
0x000002000008c08f : jl 0x2000008c0be ; push rax ; add rsp, 0x78 ; pop rdi ; pop rbp ; ret
0x0000020000096dfd : jl 0x20000096e2c ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000096eec : jl 0x20000096f1b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000009a3ea : jl 0x2000009a419 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000009b0e1 : jl 0x2000009b110 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000a1d91 : jl 0x200000a1dbc ; xor byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200000a42c5 : jl 0x200000a42f0 ; cmp byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000b2720 : jl 0x200000b274f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000b3e44 : jl 0x200000b3e73 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000b90ea : jl 0x200000b9115 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200000b9424 : jl 0x200000b9453 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000bee56 : jl 0x200000bee85 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000bf526 : jl 0x200000bf555 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000c868b : jl 0x200000c86ba ; push 0x40c48348 ; pop r14 ; ret
0x00000200000d39b5 : jl 0x200000d39ba ; ret
0x00000200000d9678 : jl 0x200000d96a7 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000da3c6 : jl 0x200000da3f5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000db1a1 : jl 0x200000db1d0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000dbc45 : jl 0x200000dbc6f ; xor dh, dh ; ret 0x7502
0x00000200000e1656 : jl 0x200000e1667 ; add dh, dh ; ret
0x00000200000e2725 : jl 0x200000e2754 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000e47f0 : jl 0x200000e481f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000e892e : jl 0x200000e895d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000e9a41 : jl 0x200000e9a4a ; mov al, 1 ; ret
0x00000200000eb865 : jl 0x200000eb894 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000eb998 : jl 0x200000eb9c7 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000ed605 : jl 0x200000ed634 ; jo 0x200000ed65a ; add esp, 0x50 ; pop r14 ; ret
0x00000200000ee18c : jl 0x200000ee1bb ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000ef469 : jl 0x200000ef498 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000ef515 : jl 0x200000ef524 ; mov eax, 1 ; ret
0x00000200000eff6b : jl 0x200000eff9a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000f0272 : jl 0x200000f02a1 ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200000f12e9 : jl 0x200000f1318 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000f1345 : jl 0x200000f1370 ; sub byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200000f14eb : jl 0x200000f151a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f407c : jl 0x200000f40ab ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000f4196 : jl 0x200000f41c5 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200000f808d : jl 0x200000f80bc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000f8bdd : jl 0x200000f8c0c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000fcb18 : jl 0x200000fcb42 ; cmp al, 0x41 ; call rcx
0x00000200000fd5e8 : jl 0x200000fd617 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000fe2d1 : jl 0x200000fe300 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200000ff2ad : jl 0x200000ff2d8 ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000101205 : jl 0x20000101234 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000010186a : jl 0x20000101899 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000101d37 : jl 0x20000101d66 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001055db : jl 0x20000105609 ; js 0x2000010562f ; add esp, 0x60 ; pop rbp ; ret
0x00000200001062be : jl 0x200001062eb ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x0000020000107c41 : jl 0x20000107c70 ; js 0x20000107c96 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000108777 : jl 0x200001087a6 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000109977 : jl 0x200001099a6 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000010c79d : jl 0x2000010c7cc ; add rsp, 0x20 ; pop r14 ; ret
0x000002000010ded8 : jl 0x2000010df07 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000110aaf : jl 0x20000110ade ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200001114af : jl 0x200001114de ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000111622 : jl 0x20000111651 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000112e4f : jl 0x20000112e7e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000112ee6 : jl 0x20000112f15 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000116243 : jl 0x20000116272 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011683b : jl 0x2000011686a ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000116902 : jl 0x20000116931 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000116b2e : jl 0x20000116b5d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011b135 : jl 0x2000011b164 ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x000002000011cad9 : jl 0x2000011cb08 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011cee3 : jl 0x2000011cf12 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000011d975 : jl 0x2000011d9a4 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001200e6 : jl 0x20000120114 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001207d9 : jl 0x2000012076b ; js 0x2000012080e ; ret 0x8944
0x0000020000121a43 : jl 0x20000121a72 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000121aba : jl 0x20000121ae8 ; pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000121c85 : jl 0x20000121cb0 ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200001229cf : jl 0x200001229fe ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012312c : jl 0x2000012315a ; js 0x20000123180 ; add esp, 0x60 ; pop rbp ; ret
0x000002000012370c : jl 0x2000012373b ; push 0x40c48348 ; pop r14 ; ret
0x00000200001242d0 : jl 0x2000012428a ; and eax, 0xc0940f00 ; ret
0x0000020000125650 : jl 0x2000012567f ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000125a70 : jl 0x20000125a9f ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000127838 : jl 0x20000127867 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012a169 : jl 0x2000012a198 ; push 0x40c48348 ; pop r14 ; ret
0x000002000012a2da : jl 0x2000012a309 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012e3b2 : jl 0x2000012e3e0 ; js 0x2000012e406 ; add esp, 0x50 ; pop rbp ; ret
0x000002000012e849 : jl 0x2000012e878 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012f073 : jl 0x2000012f0a0 ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x0000020000130ecf : jl 0x20000130efe ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001335e0 : jl 0x2000013360e ; js 0x20000133634 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000136d27 : jl 0x20000136d56 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000137642 : jl 0x20000137671 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000013a5b4 : jl 0x2000013a5e3 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000013f6ca : jl 0x2000013f6f9 ; push rax ; add rsp, 0x30 ; pop r13 ; ret
0x000002000013fe7f : jl 0x2000013feae ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000156484 : jl 0x2000015647d ; dec dword ptr [rcx - 0x7f] ; ret 0
0x0000020000161c9c : jl 0x20000161cc7 ; xor cl, ch ; xchg eax, esi ; ret
0x00000200001630cc : jl 0x200001630f8 ; and byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000017dfd0 : jl 0x2000017dfc6 ; inc dword ptr [rbp - 0x75] ; ret 0xb60f
0x00000200001a5dd1 : jl 0x200001a5e00 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001a670a : jl 0x200001a6739 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001a7568 : jl 0x200001a7596 ; push 0x50c48348 ; pop rbp ; ret
0x00000200001a7aac : jl 0x200001a7adb ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001a93cb : jl 0x200001a93fa ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001a94b3 : jl 0x200001a94e2 ; push 0x40c48348 ; pop r14 ; ret
0x00000200001a95a2 : jl 0x200001a95d1 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001aad1b : jl 0x200001aad4a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001ae54e : jl 0x200001ae57d ; push 0x40c48348 ; pop r14 ; ret
0x00000200001aed8d : jl 0x200001aedbb ; js 0x200001aede1 ; add esp, 0x60 ; pop rbp ; ret
0x00000200001b134d : jl 0x200001b137c ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001b2741 : jl 0x200001b276c ; and byte ptr [rax + 0x69], cl ; ret 0x201
0x00000200001b36c0 : jl 0x200001b36d4 ; or byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001b3e90 : jl 0x200001b3ebf ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001b5149 : jl 0x200001b5178 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001b51e0 : jl 0x200001b520f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001b560d : jl 0x200001b563c ; push 0x40c48348 ; pop r14 ; ret
0x00000200001b6129 : jl 0x200001b6158 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001b6b1f : jl 0x200001b6b22 ; ret 0x8348
0x00000200001b6b1e : jl 0x200001b6b23 ; ret 0x8348
0x00000200001b7a24 : jl 0x200001b7a53 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001bcb45 : jl 0x200001bcb74 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001bd34b : jl 0x200001bd37a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001be0b7 : jl 0x200001be0e6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001beed9 : jl 0x200001bef08 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c1973 : jl 0x200001c1963 ; or eax, 0xffffffff ; ret
0x00000200001c39c5 : jl 0x200001c39f4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c4b67 : jl 0x200001c4b96 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c51d8 : jl 0x200001c5207 ; push 0x40c48348 ; pop r14 ; ret
0x00000200001c5452 : jl 0x200001c5481 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c7120 : jl 0x200001c714f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001c71c5 : jl 0x200001c71f4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001cb899 : jl 0x200001cb8c8 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001ce07b : jl 0x200001ce0aa ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001cf502 : jl 0x200001cf531 ; js 0x200001cf557 ; add esp, 0x50 ; pop r14 ; ret
0x00000200001cf95c : jl 0x200001cf98b ; push 0x40c48348 ; pop r14 ; ret
0x00000200001d2ae3 : jl 0x200001d2b12 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d2f40 : jl 0x200001d2f6f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d309e : jl 0x200001d30cd ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001d63a6 : jl 0x200001d63d5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001dc13a : jl 0x200001dc169 ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200001dc263 : jl 0x200001dc292 ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200001dc686 : jl 0x200001dc6b5 ; js 0x200001dc6db ; add esp, 0x50 ; pop r14 ; ret
0x00000200001de5c3 : jl 0x200001de5f2 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001e2f65 : jl 0x200001e2f7a ; add al, ch ; ret
0x00000200001e3a81 : jl 0x200001e3ab0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001e4acf : jl 0x200001e4afe ; add rsp, 0x20 ; pop r15 ; ret
0x00000200001e7697 : jl 0x200001e76c6 ; push 0x40c48348 ; pop r14 ; ret
0x00000200001e7854 : jl 0x200001e7883 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001e7a90 : jl 0x200001e7abf ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200001e8bd5 : jl 0x200001e8c04 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001e8c52 : jl 0x200001e8c81 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001efe17 : jl 0x200001efe46 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001effb3 : jl 0x200001effe1 ; pop rax ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001f0eae : jl 0x200001f0edd ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001f2dc3 : jl 0x200001f2df2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001f346e : jl 0x200001f349d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001f35fc : jl 0x200001f362b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001f473f : jl 0x200001f476e ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200001f7507 : jl 0x200001f7536 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001fb7db : jl 0x200001fb80a ; js 0x200001fb830 ; add esp, 0x50 ; pop r14 ; ret
0x00000200001fb8d7 : jl 0x200001fb906 ; js 0x200001fb92c ; add esp, 0x50 ; pop r14 ; ret
0x00000200001fbb22 : jl 0x200001fbb51 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001fbd93 : jl 0x200001fbdc2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001fc025 : jl 0x200001fc054 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200001fd26d : jl 0x200001fd29c ; push 0x40c48348 ; pop r14 ; ret
0x0000020000200adb : jl 0x20000200b0a ; js 0x20000200b30 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000201e7b : jl 0x20000201eaa ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000202a75 : jl 0x20000202aa4 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000202c7b : jl 0x20000202caa ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000202d5a : jl 0x20000202d89 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000202ee2 : jl 0x20000202f11 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000203dae : jl 0x20000203ddd ; js 0x20000203e03 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000206b98 : jl 0x20000206bac ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x00000200002074d7 : jl 0x200002074c8 ; xor eax, eax ; ret
0x0000020000207e95 : jl 0x20000207ec4 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000207f81 : jl 0x20000207fb0 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020aa40 : jl 0x2000020aa6f ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000020b177 : jl 0x2000020b1a6 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000020de69 : jl 0x2000020de92 ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x000002000020de7f : jl 0x2000020dea8 ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x000002000020de95 : jl 0x2000020debe ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x000002000020deab : jl 0x2000020ded4 ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x000002000020dec1 : jl 0x2000020deea ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x0000020000210072 : jl 0x200002100a1 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000021050e : jl 0x2000021053d ; push 0x40c48348 ; pop r14 ; ret
0x0000020000211d40 : jl 0x20000211d30 ; xor eax, eax ; ret
0x0000020000215976 : jl 0x200002159a5 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000021637c : jl 0x200002163ab ; add rsp, 0x20 ; pop r14 ; ret
0x00000200002181d1 : jl 0x200002181fe ; mov rsp, r11 ; pop rbp ; ret
0x0000020000218241 : jl 0x20000218270 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000021a2ef : jl 0x2000021a31e ; add rsp, 0x20 ; pop r14 ; ret
0x000002000021af5a : jl 0x2000021af85 ; and byte ptr [rcx - 0x75], al ; ret 0x4566
0x000002000021b76e : jl 0x2000021b752 ; ret
0x000002000021da4d : jl 0x2000021da7c ; add rsp, 0x20 ; pop r14 ; ret
0x000002000021e964 : jl 0x2000021e993 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000230b50 : jl 0x20000230b51 ; mov eax, 1 ; ret
0x0000020000230e44 : jl 0x20000230e72 ; pop rax ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000231c22 : jl 0x20000231c50 ; push rax ; add rsp, 0x70 ; pop rdi ; ret
0x000002000039b474 : jl 0x2000039b4a3 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000039ec05 : jl 0x2000039ec34 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000039f18b : jl 0x2000039f1ba ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000039f59d : jl 0x2000039f5cc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003a1ada : jl 0x200003a1b09 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003a3d95 : jl 0x200003a3dc4 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003a4421 : jl 0x200003a4450 ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200003a5c86 : jl 0x200003a5cb5 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003ac12e : jl 0x200003ac15d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003ac9a2 : jl 0x200003ac9d0 ; add rsp, 0x20 ; pop rcx ; ret
0x00000200003aed80 : jl 0x200003aedaf ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003b1fc4 : jl 0x200003b1ff3 ; js 0x200003b2019 ; add esp, 0x50 ; pop r14 ; ret
0x00000200003b23f4 : jl 0x200003b2420 ; jmp 0x200003b2448
0x00000200003b6418 : jl 0x200003b6447 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003b6a67 : jl 0x200003b6a96 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003b7abd : jl 0x200003b7aec ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003b8552 : jl 0x200003b8581 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003b98c7 : jl 0x200003b98f1 ; xor bh, bh ; ret
0x00000200003b9b9c : jl 0x200003b9bcb ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003ba6ec : jl 0x200003ba71a ; add rsp, 0x30 ; pop rbp ; ret
0x00000200003bb638 : jl 0x200003bb667 ; push 0x40c48348 ; pop r13 ; ret
0x00000200003bd676 : jl 0x200003bd640 ; or dh, al ; ret
0x00000200003bdbec : jl 0x200003bdc1b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003bf9ea : jl 0x200003bfa19 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003c087a : jl 0x200003c08a9 ; jo 0x200003c08cf ; add esp, 0x50 ; pop r14 ; ret
0x00000200003c53c3 : jl 0x200003c53f2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003c6cc4 : jl 0x200003c6cee ; xor dh, dh ; ret
0x00000200003c86aa : jl 0x200003c86d9 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003c87e3 : jl 0x200003c8812 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003c9aad : jl 0x200003c9adc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003cbf1e : jl 0x200003cbf4d ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003d45c9 : jl 0x200003d45f4 ; cmp byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200003d8147 : jl 0x200003d8176 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003d8d1b : jl 0x200003d8d4a ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003d8f6a : jl 0x200003d8f99 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003dba3e : jl 0x200003dba6d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003dbac7 : jl 0x200003dbaf6 ; push 0x40c48348 ; pop r14 ; ret
0x00000200003dd0eb : jl 0x200003dd11a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003dee49 : jl 0x200003dee78 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003df1f6 : jl 0x200003df224 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200003df726 : jl 0x200003df755 ; push 0x40c48348 ; pop r14 ; ret
0x00000200003df7e8 : jl 0x200003df817 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003e0a74 : jl 0x200003e0aa3 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003e0dc1 : jl 0x200003e0df0 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200003e2028 : jl 0x200003e200b ; ret
0x00000200003e371d : jl 0x200003e374c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003e5ced : jl 0x200003e5d1c ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003e86e0 : jl 0x200003e870f ; push 0x40c48348 ; pop r14 ; ret
0x00000200003ea244 : jl 0x200003ea273 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003ea3f0 : jl 0x200003ea41f ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003ea46c : jl 0x200003ea49b ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003ed1cc : jl 0x200003ed1f7 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003ed268 : jl 0x200003ed293 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003ed438 : jl 0x200003ed463 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003ed6bc : jl 0x200003ed6e7 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003ed8f4 : jl 0x200003ed91f ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003edaa8 : jl 0x200003edad3 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003edbf8 : jl 0x200003edc23 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003ede5c : jl 0x200003ede87 ; adc byte ptr [rcx - 1], al ; ret 0x8a41
0x00000200003eeb89 : jl 0x200003eebb8 ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200003ef716 : jl 0x200003ef744 ; sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x00000200003f0197 : jl 0x200003f01c6 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003f0412 : jl 0x200003f0441 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003f2f93 : jl 0x200003f2fc2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003f3939 : jl 0x200003f3968 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003f53b1 : jl 0x200003f53e0 ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200003f6515 : jl 0x200003f6544 ; jo 0x200003f656a ; add esp, 0x50 ; pop r14 ; ret
0x00000200003f6a73 : jl 0x200003f6aa1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f7945 : jl 0x200003f7974 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003fb3d4 : jl 0x200003fb403 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003fbacd : jl 0x200003fbafc ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003fbbb7 : jl 0x200003fbbe6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003fc973 : jl 0x200003fc9a2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003fe63f : jl 0x200003fe66e ; js 0x200003fe694 ; add esp, 0x50 ; pop r14 ; ret
0x00000200003ff1c2 : jl 0x200003ff1f1 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000400a33 : jl 0x20000400a5d ; js 0x200004009c6 ; ret
0x0000020000401270 : jl 0x2000040129f ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000401e63 : jl 0x20000401e92 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000404c5b : jl 0x20000404c8a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000040751d : jl 0x20000407548 ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000408392 : jl 0x200004083c1 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000409099 : jl 0x200004090c8 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004106d3 : jl 0x20000410702 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000410b94 : jl 0x20000410bc3 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000411f33 : jl 0x20000411f41 ; setle al ; inc eax ; ret
0x0000020000412a93 : jl 0x20000412ac2 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000414ac2 : jl 0x20000414af1 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000414c64 : jl 0x20000414c93 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004153bd : jl 0x200004153ec ; push 0x40c48348 ; pop r14 ; ret
0x000002000041673d : jl 0x2000041676c ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000416809 : jl 0x20000416838 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000419453 : jl 0x20000419482 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000041dab8 : jl 0x2000041dae7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000041de46 : jl 0x2000041de74 ; jo 0x2000041de9a ; add esp, 0x50 ; pop rbp ; ret
0x000002000041eef1 : jl 0x2000041ef04 ; xor eax, eax ; add rsp, 0x70 ; pop rbx ; ret
0x000002000041f8ef : jl 0x2000041f91e ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000041faf3 : jl 0x2000041fb22 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004225f9 : jl 0x20000422628 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000422e12 : jl 0x20000422e40 ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000427e7f : jl 0x20000427eae ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000428892 : jl 0x200004288c1 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000042a558 : jl 0x2000042a587 ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000042d895 : jl 0x2000042d8c1 ; and al, ch ; scasd eax, dword ptr [rdi] ; pop rdi ; ret 0xb8ff
0x0000020000430519 : jl 0x20000430548 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000430deb : jl 0x20000430e1a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043633b : jl 0x2000043636a ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000043676f : jl 0x2000043679e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000436d9a : jl 0x20000436dc9 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000437f59 : jl 0x20000437f88 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043808e : jl 0x200004380b9 ; xor byte ptr [rax - 0x75], cl ; ret
0x00000200004382cb : jl 0x200004382f5 ; xor cl, ch ; ret
0x00000200004390fc : jl 0x2000043912b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043ae5d : jl 0x2000043ae8c ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043c186 : jl 0x2000043c1b5 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000043edec : jl 0x2000043ee1b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000442c53 : jl 0x20000442c82 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000445c0e : jl 0x20000445c3c ; mov rcx, rdi ; call 0x200000c1e68
0x0000020000446228 : jl 0x20000446257 ; mov rcx, rdi ; call 0x20000074665
0x00000200004495d1 : jl 0x200004495fd ; cmp ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000002000044a744 : jl 0x2000044a773 ; jo 0x2000044a760 ; mov edx, 0x820f1ee6 ; ret
0x000002000045e3cb : jl 0x2000045e3fa ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000045fa69 : jl 0x2000045fa93 ; xor al, 0x81 ; call qword ptr [rax]
0x00000200004606c9 : jl 0x200004606f8 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000463e25 : jl 0x20000463e53 ; adc byte ptr [rcx + 0x5bc03303], cl ; ret
0x0000020000465717 : jl 0x20000465746 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000046f94d : jl 0x2000046f97c ; add rsp, 0x20 ; pop r14 ; ret
0x000002000046fa07 : jl 0x2000046fa36 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000047441b : jl 0x2000047444a ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000474935 : jl 0x20000474949 ; xchg eax, ebp ; ret 0x8445
0x000002000047533b : jl 0x2000047536a ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000475815 : jl 0x20000475844 ; js 0x2000047586a ; add esp, 0x50 ; pop r14 ; ret
0x0000020000479416 : jl 0x20000479445 ; push 0x40c48348 ; pop r14 ; ret
0x000002000047c5e3 : jl 0x2000047c612 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000047c9f3 : jl 0x2000047ca22 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000047cc05 : jl 0x2000047cc34 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000483f1f : jl 0x20000483f4e ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000485742 : jl 0x20000485771 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000489a88 : jl 0x20000489ab7 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000489d37 : jl 0x20000489d66 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000048a6c3 : jl 0x2000048a6f2 ; push 0x40c48348 ; pop r14 ; ret
0x000002000048b0b6 : jl 0x2000048b0e5 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000048ca91 : jl 0x2000048cac0 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000048f19e : jl 0x2000048f1cd ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000495a22 : jl 0x20000495a4c ; jo 0x20000495a29 ; ret 0x8b48
0x000002000049cf3f : jl 0x2000049cf6b ; xor byte ptr [rcx + 0x5e], al ; pop rsi ; ret
0x000002000049d2f9 : jl 0x2000049d328 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000049d992 : jl 0x2000049d9be ; cmp al, ch ; push rsp ; ret 0x48ff
0x000002000049e8df : jl 0x2000049e90d ; add rsp, 0x20 ; pop rbx ; ret
0x000002000049ee5d : jl 0x2000049ee8c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004acf63 : jl 0x200004acf8e ; xor byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200004b9bdc : jl 0x200004b9c5b ; sbb eax, dword ptr [rax] ; mov byte ptr [rax], 0 ; jmp 0x200004b9bb0
0x00000200004ba531 : jl 0x200004ba55b ; xor bl, ch ; ret 0x1b0
0x00000200004c1eef : jl 0x200004c1f1e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004c630e : jl 0x200004c633d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004cb54b : jl 0x200004cb575 ; sub bh, bh ; ret
0x00000200004cc68d : jl 0x200004cc6bb ; js 0x200004cc6e1 ; add esp, 0x50 ; pop rbp ; ret
0x00000200004ccf82 : jl 0x200004ccfb1 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200004d5755 : jl 0x200004d5784 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004d57ce : jl 0x200004d57fd ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200004d84fd : jl 0x200004d852c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004d9257 : jl 0x200004d9286 ; jo 0x200004d92ac ; add esp, 0x50 ; pop r14 ; ret
0x00000200004dc91c : jl 0x200004dc94b ; js 0x200004dc971 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004e0b6c : jl 0x200004e0afb ; ret
0x00000200004e185d : jl 0x200004e188c ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e213b : jl 0x200004e216a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e35f5 : jl 0x200004e3623 ; jo 0x200004e3649 ; add esp, 0x50 ; pop rbp ; ret
0x00000200004e3e87 : jl 0x200004e3eb5 ; pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x00000200004e4681 : jl 0x200004e46b0 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e690e : jl 0x200004e693d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004e8825 : jl 0x200004e8854 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004eaff4 : jl 0x200004eb000 ; inc edx ; sub ecx, edx ; mov eax, ecx ; ret
0x00000200004ed13a : jl 0x200004ed168 ; js 0x200004ed18e ; add esp, 0x50 ; pop rbp ; ret
0x00000200004eeac3 : jl 0x200004eeaf2 ; jo 0x200004eeb18 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004eeb97 : jl 0x200004eebc6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004ef6d7 : jl 0x200004ef706 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f1962 : jl 0x200004f1991 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f1f98 : jl 0x200004f1fc7 ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x00000200004f240e : jl 0x200004f2411 ; ret
0x00000200004f3393 : jl 0x200004f33c2 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f38a3 : jl 0x200004f38d2 ; push 0x40c48348 ; pop r14 ; ret
0x00000200004f7999 : jl 0x200004f79c8 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004f7a22 : jl 0x200004f7a51 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200004fa0c7 : jl 0x200004fa0f6 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004fb507 : jl 0x200004fb536 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004fc5df : jl 0x200004fc60e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200004fcba8 : jl 0x200004fcba1 ; mov byte ptr [rdx + 8], 0 ; mov rax, rdx ; ret
0x0000020000501aee : jl 0x20000501ae3 ; inc dword ptr [rbp + 0x11850fc0] ; ret
0x0000020000501fca : jl 0x20000501ff9 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005053aa : jl 0x200005053d9 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000050582d : jl 0x2000050585c ; push 0x40c48348 ; pop r14 ; ret
0x000002000050aa64 : jl 0x2000050aa93 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000050c8c8 : jl 0x2000050c8f7 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000050d500 : jl 0x2000050d532 ; ret
0x000002000050f985 : jl 0x2000050f9b4 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000510206 : jl 0x20000510235 ; js 0x2000051025b ; add esp, 0x50 ; pop r14 ; ret
0x000002000051166e : jl 0x2000051169d ; js 0x200005116c3 ; add esp, 0x50 ; pop r14 ; ret
0x00000200005116ef : jl 0x2000051171d ; pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000511900 : jl 0x200005118ee ; ret 0x8bff
0x0000020000511ec7 : jl 0x20000511eb9 ; inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x8348
0x0000020000514497 : jl 0x200005144c5 ; push 0x50c48348 ; pop rbp ; ret
0x0000020000515e40 : jl 0x20000515dda ; ret
0x0000020000518afa : jl 0x20000518b29 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000518bf2 : jl 0x20000518c21 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000051930b : jl 0x2000051933a ; pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x000002000051a542 : jl 0x2000051a571 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000051d182 : jl 0x2000051d1b1 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000520b6f : jl 0x20000520b9e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000521541 : jl 0x20000521570 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005220a0 : jl 0x200005220cf ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000523029 : jl 0x20000523058 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005234a1 : jl 0x200005234d0 ; js 0x200005234f6 ; add esp, 0x50 ; pop r14 ; ret
0x00000200005249bb : jl 0x200005249e9 ; jo 0x20000524a0f ; add esp, 0x50 ; pop rbp ; ret
0x0000020000526cc2 : jl 0x20000526cf1 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000527272 : jl 0x200005272a1 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000527466 : jl 0x20000527495 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000052e1f8 : jl 0x2000052e222 ; xor al, 0x81 ; ret
0x000002000052edbb : jl 0x2000052edea ; add rsp, 0x20 ; pop r15 ; ret
0x00000200005319a0 : jl 0x200005319cf ; push 0x40c48348 ; pop r14 ; ret
0x0000020000531be9 : jl 0x20000531c18 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000532155 : jl 0x20000532184 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000532217 : jl 0x20000532246 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005327a6 : jl 0x200005327d5 ; push 0x40c48348 ; pop r14 ; ret
0x0000020000535f65 : jl 0x20000535f94 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000053640b : jl 0x2000053643a ; push 0x40c48348 ; pop r14 ; ret
0x0000020000536764 : jl 0x20000536793 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000537370 : jl 0x2000053739e ; js 0x200005373c4 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000537cdc : jl 0x20000537d0b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005383ab : jl 0x200005383da ; push 0x40c48348 ; pop r14 ; ret
0x000002000053c8fa : jl 0x2000053c924 ; js 0x2000053c88d ; ret
0x000002000053e1ba : jl 0x2000053e1e9 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000053e24c : jl 0x2000053e27b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000053f0a0 : jl 0x2000053f0cf ; add rsp, 0x20 ; pop r14 ; ret
0x000002000053f131 : jl 0x2000053f15c ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000053f5c0 : jl 0x2000053f5ef ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000540a15 : jl 0x20000540a44 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000544235 : jl 0x20000544264 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000054475b : jl 0x2000054478a ; push 0x40c48348 ; pop r14 ; ret
0x0000020000545e83 : jl 0x20000545eb2 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000545ed3 : jl 0x20000545f02 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000545f23 : jl 0x20000545f52 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000545f73 : jl 0x20000545fa2 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000546046 : jl 0x2000054606c ; add byte ptr [rax], al ; ret
0x0000020000546060 : jl 0x20000546089 ; add byte ptr [rax], al ; mov dword ptr [rcx + 0x14], eax ; ret
0x00000200005830d3 : jl 0x20000583101 ; and byte ptr [rbx + rcx*4 - 0x3d], al ; mov cl, 0x15 ; call rax
0x000002000058c689 : jl 0x2000058c6b3 ; and al, ch ; ret
0x0000020000598002 : jl 0x2000059802d ; and byte ptr [rbx], dh ; leave ; call qword ptr [rsi]
0x000002000059bb16 : jl 0x2000059bb53 ; ror byte ptr [rbp - 0x74bbe0b5], cl ; ret
0x00000200005a0644 : jl 0x200005a05f0 ; mov rcx, rbx ; call 0x2000063c8a3
0x00000200005b9e7e : jl 0x200005b9e76 ; call qword ptr [rax - 0x123d4317]
0x00000200005d5d6e : jl 0x200005d5d98 ; jo 0x200005d5cf9 ; ret 0x8b04
0x00000200005d7097 : jl 0x200005d706e ; dec dword ptr [rax - 0x75] ; ret
0x00000200005dc566 : jl 0x200005dc594 ; add rsp, 0x30 ; pop rbp ; ret
0x00000200005dc889 : jl 0x200005dc8b8 ; and byte ptr [rbp + 0x33], al ; rol byte ptr [rax - 0x76], 0xcd ; call rsi
0x00000200005e0f67 : jl 0x200005e0f96 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005e1835 : jl 0x200005e1861 ; and byte ptr [rbx + rcx*4 - 0x3d], al ; call rax
0x00000200005e1a38 : jl 0x200005e1a64 ; and byte ptr [rbx + rcx*4 - 0x3d], al ; call rax
0x00000200005e34ec : jl 0x200005e351b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005e5366 : jl 0x200005e5395 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005e5414 : jl 0x200005e5443 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005e938e : jl 0x200005e93bd ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005efdb0 : jl 0x200005efddf ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005f0168 : jl 0x200005f0197 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005f15b5 : jl 0x200005f15e4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005f31e4 : jl 0x200005f3213 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005f3735 : jl 0x200005f3760 ; sub byte ptr [rcx + 0x5e], al ; ret
0x00000200005f4940 : jl 0x200005f496e ; sub byte ptr [rax - 0x74befabf], cl ; ret 0xe8c1
0x00000200005f616e : jl 0x200005f619d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005f73ec : jl 0x200005f741a ; js 0x200005f7440 ; add esp, 0x50 ; pop rbp ; ret
0x00000200005f8424 : jl 0x200005f8450 ; xor byte ptr [rbx + rax - 0x7d], dh ; ret
0x00000200005f8951 : jl 0x200005f8980 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005f8aa5 : jl 0x200005f8ad4 ; js 0x200005f8afa ; add esp, 0x50 ; pop r14 ; ret
0x00000200005f8e08 : jl 0x200005f8e37 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005fa24a : jl 0x200005fa279 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005fc3cb : jl 0x200005fc3fa ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005fd690 : jl 0x200005fd6cd ; ret
0x00000200005fe73f : jl 0x200005fe76d ; push 0x40c48348 ; pop rbp ; ret
0x00000200005ff838 : jl 0x200005ff867 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005ffe7d : jl 0x200005ffeac ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000600dd3 : jl 0x20000600e02 ; js 0x20000600e28 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000600fb5 : jl 0x20000600fe4 ; js 0x2000060100a ; add esp, 0x50 ; pop r14 ; ret
0x00000200006011fd : jl 0x2000060122c ; add rsp, 0x20 ; pop r14 ; ret
0x000002000060318f : jl 0x200006031be ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000604c59 : jl 0x20000604c88 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000060b460 : jl 0x2000060b4cc ; ret 0x48ff
0x000002000060d00b : jl 0x2000060d03a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000060d1db : jl 0x2000060d20a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000060d75a : jl 0x2000060d789 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000061012d : jl 0x2000061015c ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000612c53 : jl 0x20000612c82 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006141f8 : jl 0x20000614227 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000617f6c : jl 0x20000617f96 ; sbb al, 0x8b ; ret
0x0000020000619303 : jl 0x200006192a9 ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0x1440
0x000002000061976b : jl 0x2000061979a ; add rsp, 0x20 ; pop r14 ; ret
0x000002000061b5e3 : jl 0x2000061b612 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000061de67 : jl 0x2000061de96 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000061e14d : jl 0x2000061e17c ; add rsp, 0x20 ; pop r14 ; ret
0x000002000061e219 : jl 0x2000061e248 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000061e2e5 : jl 0x2000061e314 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000061e49b : jl 0x2000061e4ca ; jo 0x2000061e4f0 ; add esp, 0x50 ; pop r14 ; ret
0x000002000061f734 : jl 0x2000061f763 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000622169 : jl 0x20000622198 ; pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x000002000062277a : jl 0x200006227a9 ; cmp byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x0000020000624abf : jl 0x20000624aee ; add rsp, 0x20 ; pop r14 ; ret
0x000002000062b762 : jl 0x2000062b791 ; push 0x40c48348 ; pop r14 ; ret
0x000002000062d355 : jl 0x2000062d37f ; sub byte ptr [rbx], dh ; ret 0x6c89
0x000002000062dac5 : jl 0x2000062daf4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000063163c : jl 0x2000063166b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006316e2 : jl 0x20000631711 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006363f8 : jl 0x20000636427 ; js 0x2000063644d ; add esp, 0x50 ; pop r14 ; ret
0x000002000063bf06 : jl 0x2000063bf31 ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000063dcc3 : jl 0x2000063dcf2 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000063e876 : jl 0x2000063e8a5 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000640569 : jl 0x20000640598 ; js 0x200006405be ; add esp, 0x50 ; pop r14 ; ret
0x0000020000643a1e : jl 0x20000643a4d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000643fbf : jl 0x20000643fed ; and byte ptr [rip - 0x7ffffffb], ah ; ret
0x000002000064638f : jl 0x200006463be ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000646fe2 : jl 0x2000064700c ; sub bh, bh ; ret
0x0000020000649445 : jl 0x20000649470 ; sub byte ptr [rcx + 0x5e], al ; ret
0x000002000064b003 : jl 0x2000064b032 ; add rsp, 0x20 ; pop r12 ; ret
0x000002000064b829 : jl 0x2000064b858 ; push 0x40c48348 ; pop r14 ; ret
0x000002000064b92d : jl 0x2000064b95c ; push 0x40c48348 ; pop r14 ; ret
0x000002000064be21 : jl 0x2000064be4e ; xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x000002000064fc5f : jl 0x2000064fc89 ; sub bh, bh ; ret
0x0000020000650995 : jl 0x200006509c3 ; sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x0000020000651552 : jl 0x20000651581 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065184c : jl 0x2000065187b ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000651a66 : jl 0x20000651a6f ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000655fd4 : jl 0x20000656003 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065a56c : jl 0x2000065a59b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065a652 : jl 0x2000065a681 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065a6b5 : jl 0x2000065a6e4 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065b1fc : jl 0x2000065b22b ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065b342 : jl 0x2000065b371 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000065dcf2 : jl 0x2000065dd21 ; push 0x40c48348 ; pop r14 ; ret
0x000002000065e481 : jl 0x2000065e4b0 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000065e4fe : jl 0x2000065e52d ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000660046 : jl 0x20000660075 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006645ee : jl 0x200006645bb ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006647b8 : jl 0x200006647e7 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006651ce : jl 0x200006651fd ; add rsp, 0x20 ; pop r14 ; ret
0x000002000066a5bd : jl 0x2000066a5ec ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000066a7e8 : jl 0x2000066a817 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000067507b : jl 0x200006750aa ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006763ac : jl 0x200006763db ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000676899 : jl 0x200006768c8 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000067b617 : jl 0x2000067b646 ; push 0x40c48348 ; pop r14 ; ret
0x000002000067d3ac : jl 0x2000067d379 ; or byte ptr [rcx + 0x63487f7d], cl ; ret 0x8348
0x000002000067e07c : jl 0x2000067e0ab ; js 0x2000067e0d1 ; add esp, 0x50 ; pop r14 ; ret
0x000002000067e1a0 : jl 0x2000067e1cf ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000067eb82 : jl 0x2000067ebb1 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000067f5d6 : jl 0x2000067f605 ; push 0x40c48348 ; pop r14 ; ret
0x000002000067f97d : jl 0x2000067f9ac ; push 0x40c48348 ; pop r14 ; ret
0x0000020000687622 : jl 0x20000687651 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000068b5a3 : jl 0x2000068b5d2 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000068bd63 : jl 0x2000068bd92 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000068c41e : jl 0x2000068c44d ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000069720e : jl 0x2000069723d ; js 0x20000697263 ; add esp, 0x50 ; pop r14 ; ret
0x000002000069764c : jl 0x2000069767b ; push 0x40c48348 ; pop r14 ; ret
0x0000020000697abf : jl 0x20000697aee ; add rsp, 0x20 ; pop r14 ; ret
0x000002000069836f : jl 0x2000069839e ; push 0x40c48348 ; pop r14 ; ret
0x000002000069c972 : jl 0x2000069c922 ; push rsi ; ret
0x000002000069cb62 : jl 0x2000069cb91 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000069cbe5 : jl 0x2000069cc14 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006a8014 : jl 0x200006a8022 ; add byte ptr [rax], al ; xor al, al ; ret
0x00000200006ab462 : jl 0x200006ab491 ; push 0x40c48348 ; pop r14 ; ret
0x00000200006ab4fe : jl 0x200006ab52d ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006ac500 : jl 0x200006ac4c4 ; ret
0x00000200006b005c : jl 0x200006b008b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006b39c6 : jl 0x200006b39cf ; mov al, 1 ; ret
0x00000200006b3cf2 : jl 0x200006b3d21 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006b5d7c : jl 0x200006b5dab ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006b5fbc : jl 0x200006b5f48 ; ret 0x4cff
0x00000200006b66f0 : jl 0x200006b671f ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006b6f49 : jl 0x200006b6f78 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006b7063 : jl 0x200006b7092 ; push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006b7712 : jl 0x200006b7741 ; push 0x40c48348 ; pop r14 ; ret
0x00000200006b7ae0 : jl 0x200006b7b0f ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006b9164 : jl 0x200006b9193 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006b9acb : jl 0x200006b9afa ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006ba569 : jl 0x200006ba598 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006ba71c : jl 0x200006ba74b ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006bac11 : jl 0x200006bac40 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006bb0d6 : jl 0x200006bb105 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006bb519 : jl 0x200006bb548 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006bb5de : jl 0x200006bb60d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006bbd48 : jl 0x200006bbd77 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006bc65f : jl 0x200006bc68e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006bd537 : jl 0x200006bd566 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006bf088 : jl 0x200006bf0b7 ; push 0x40c48348 ; pop r14 ; ret
0x00000200006bfb23 : jl 0x200006bfb52 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006c0156 : jl 0x200006c0185 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006c07fc : jl 0x200006c082b ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006c08a2 : jl 0x200006c08d1 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006c0938 : jl 0x200006c0967 ; and byte ptr [rax - 0x75], cl ; salc ; mov rcx, rbp ; call rax
0x00000200006c1083 : jl 0x200006c10b2 ; push 0x50c48348 ; pop r14 ; ret
0x00000200006c17f4 : jl 0x200006c1823 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006c189f : jl 0x200006c18ce ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006c19a5 : jl 0x200006c19d4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006c2719 : jl 0x200006c2748 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006c32d4 : jl 0x200006c3303 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006c490a : jl 0x200006c4939 ; js 0x200006c495f ; add esp, 0x50 ; pop r14 ; ret
0x00000200006c6f6f : jl 0x200006c6f9e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006c773d : jl 0x200006c776c ; push 0x40c48348 ; pop r14 ; ret
0x00000200006c84fb : jl 0x200006c852a ; add rsp, 0x20 ; pop r15 ; ret
0x00000200006c95a8 : jl 0x200006c95d7 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006c9726 : jl 0x200006c9755 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006c9f65 : jl 0x200006c9f94 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006ca00b : jl 0x200006ca03a ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006cb22f : jl 0x200006cb25e ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006cb2b5 : jl 0x200006cb2e4 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006cc4dd : jl 0x200006cc50c ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006ccc3e : jl 0x200006ccc6d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006cd573 : jl 0x200006cd5a2 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006ce699 : jl 0x200006ce6c8 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200006d5712 : jl 0x200006d5741 ; add rsp, 0x20 ; pop r15 ; ret
0x00000200006d7618 : jl 0x200006d75df ; ret 0x48ff
0x00000200006d7618 : jl 0x200006d75e5 ; ret 0x48ff
0x00000200006d9831 : jl 0x200006d9860 ; add rsp, 0x20 ; pop r14 ; ret
0x00000200006da996 : jl 0x200006da9c5 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000074459b : jl 0x200007445ca ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000748ec0 : jl 0x20000748eef ; add rsp, 0x20 ; pop r14 ; ret
0x000002000074a812 : jl 0x2000074a841 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000074b7e7 : jl 0x2000074b816 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000074dd8a : jl 0x2000074ddb9 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000754f4f : jl 0x20000754f7d ; add rsp, 0x30 ; pop rbp ; ret
0x000002000075a14e : jl 0x2000075a17d ; add rsp, 0x20 ; pop r14 ; ret
0x000002000075c3a2 : jl 0x2000075c3d1 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000075d788 : jl 0x2000075d796 ; ret 0x48ff
0x00000200007623dc : jl 0x2000076240b ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000762ce5 : jl 0x20000762d13 ; js 0x20000762d39 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000763f68 : jl 0x20000763f97 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000764842 : jl 0x20000764871 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000764b3c : jl 0x20000764b67 ; and al, ch ; pop rsp ; ret 0xff9d
0x0000020000764bc3 : jl 0x20000764bf1 ; push 0x50c48348 ; pop rbp ; ret
0x0000020000768081 : jl 0x200007680b0 ; push rax ; add rsp, 0x30 ; pop r15 ; ret
0x0000020000768fbb : jl 0x20000768fea ; add rsp, 0x20 ; pop r14 ; ret
0x000002000076b54f : jl 0x2000076b57e ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000077fd2f : jl 0x2000077fd5e ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000780034 : jl 0x20000780063 ; pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000781225 : jl 0x20000781253 ; js 0x20000781279 ; add esp, 0x60 ; pop rbp ; ret
0x0000020000781b4a : jl 0x20000781b79 ; xor byte ptr [rax - 0x73], cl ; and al, 0x50 ; call r12
0x0000020000782e8d : jl 0x20000782ebc ; add rsp, 0x20 ; pop r14 ; ret
0x000002000078316a : jl 0x20000783199 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000785677 : jl 0x200007856a6 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000000f60f : jle 0x2000000f64e ; ret 0x850f
0x00000200000e797e : jle 0x200000e7983 ; ret
0x000002000017498b : jle 0x2000017491a ; ret 0xc148
0x00000200000550ce : jle 0x20000177f24 ; ret
0x000002000017d07f : jle 0x2000017d08f ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x000002000017dfea : jle 0x2000017dfdf ; push rsi ; ret 0x741e
0x000002000017e011 : jle 0x2000017e007 ; inc dword ptr [rbp - 0x75] ; ret
0x00000200001d7dba : jle 0x200001d7dcd ; lock dec dword ptr [rcx + 0x1390] ; ret
0x00000200001d7dd8 : jle 0x200001d7deb ; lock dec dword ptr [rcx + 0x1394] ; ret
0x00000200001f547b : jle 0x200001f548f ; mov r9d, r11d ; mov r8d, edx ; jmp 0x200001f548f
0x0000020000217c96 : jle 0x20000217d0c ; push rax ; loopne 0x20000217c64 ; ret 0x187d
0x0000020000217c95 : jle 0x20000217d0d ; push rax ; loopne 0x20000217c65 ; ret 0x187d
0x0000020000219183 : jle 0x2000021918e ; add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x000002000021ce0a : jle 0x2000021ce17 ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x000002000039fdca : jle 0x2000039fdc7 ; push rsi ; ret
0x00000200003f7388 : jle 0x200003f73c8 ; and esi, dword ptr [rdi + rbp - 0x75] ; ret
0x00000200003f92c3 : jle 0x200003f92f3 ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x00000200004098ce : jle 0x200004098de ; add eax, dword ptr [rax] ; add rsp, 0x78 ; ret
0x000002000040dcbe : jle 0x2000040dc48 ; out dx, al ; dec dword ptr [rax - 0x75] ; ret 0x83c3
0x000002000043807a : jle 0x200004380d1 ; ret 0x48ff
0x0000020000444754 : jle 0x20000444761 ; add rsp, 0x38 ; ret
0x000002000048e38e : jle 0x2000048e37b ; ret 0x84ff
0x000002000049af5e : jle 0x2000049af7e ; ret 0x85ff
0x00000200004b5965 : jle 0x200004b598d ; add dword ptr [rdi], ecx ; test byte ptr [rax], al ; ret 0x10
0x00000200004f7aca : jle 0x200004f7aa8 ; ret
0x00000200004fe0fe : jle 0x200004fe152 ; ret
0x000002000050e3d7 : jle 0x2000050e405 ; mov r8d, edi ; call 0x20000135bf4
0x0000020000512480 : jle 0x20000512464 ; inc dword ptr [rax] ; ret
0x0000020000538530 : jle 0x200005384f4 ; call rax
0x0000020000406f5b : jle 0x2000057e722 ; ret
0x00000200005940ab : jle 0x200005940ad ; dec dword ptr [rax - 0x75] ; sub r8b, 0xc9 ; ret 0xffba
0x00000200005cb40e : jle 0x200005cb3ca ; ret 0x90ff
0x000002000061015e : jle 0x2000061017d ; ret 0x48ff
0x00000200006b6b5e : jle 0x200006b6b78 ; ret 0xe8ff
0x00000200006b6c5e : jle 0x200006b6c77 ; ret 0xe8ff
0x00000200006c74a3 : jle 0x200006c7475 ; dec dword ptr [rax - 1] ; ret
0x00000200006c7ca3 : jle 0x200006c7c7d ; cmp eax, 3 ; jne 0x200006c7c7d ; xor eax, eax ; ret
0x00000200006c7c72 : jle 0x200006c7cb1 ; mov eax, 1 ; ret
0x00000200006cc017 : jle 0x200006cc029 ; mov dword ptr [rax + 0x8168], r8d ; ret
0x00000200006db5c6 : jle 0x200006db54d ; ret 0x4cff
0x000002000075d3e2 : jle 0x2000075d388 ; inc dword ptr [rbp - 0x2177f040] ; ret
0x000002000076a779 : jle 0x2000076a733 ; call qword ptr [rbx]
0x000002000076a778 : jle 0x2000076a734 ; call qword ptr [rbx]
0x0000020000122005 : jmp 0x1ff835b200b
0x00000200001e8aaa : jmp 0x1ff83674d3c
0x00000200003df2ba : jmp 0x1ff8385f2df
0x000002000049654f : jmp 0x1ff8392258f
0x0000020000522415 : jmp 0x1ff839b23e3
0x0000020000512ff3 : jmp 0x1ff8650f2cd
0x0000020000129adb : jmp 0x1ff8af80fe7
0x000002000056e9e3 : jmp 0x1ff8b9fe9e5
0x00000200006bbbb9 : jmp 0x1ff8bb4cdaf
0x0000020000489206 : jmp 0x1ffba0abd74
0x000002000043d9a3 : jmp 0x1ffbdaac2af
0x0000020000101690 : jmp 0x1ffc158d922
0x00000200000092f1 : jmp 0x1ffc16bdb01
0x00000200006385e8 : jmp 0x1ffc17feced
0x0000020000638613 : jmp 0x1ffc17fed18
0x00000200006386d4 : jmp 0x1ffc1afedd9
0x00000200006386ff : jmp 0x1ffc1afee04
0x0000020000485e7a : jmp 0x1ffc26b9f98
0x0000020000018468 : jmp 0x1ffc284c5d7
0x0000020000009339 : jmp 0x1ffc28bdc45
0x0000020000022930 : jmp 0x1ffc28d7145
0x0000020000055e09 : jmp 0x1ffc290a61e
0x00000200001f82a8 : jmp 0x1ffc2a2cab5
0x00000200001c42ab : jmp 0x1ffc2a688b3
0x000002000060d17b : jmp 0x1ffc2ac316c
0x000002000060d17a : jmp 0x1ffc2ac316d
0x0000020000475e71 : jmp 0x1ffc2c46862
0x000002000011cdcc : jmp 0x1ffc2c7dd19
0x00000200004986d6 : jmp 0x1ffc2d4cfe3
0x00000200001f6d77 : jmp 0x1ffc2d67cc1
0x000002000059dd90 : jmp 0x1ffc2e52398
0x00000200007465f6 : jmp 0x1ffc2fe6601
0x00000200005a0711 : jmp 0x1ffc3111719
0x0000020000123ee5 : jmp 0x1ffc322c83b
0x00000200000219a9 : jmp 0x1ffc32562be
0x00000200001e349b : jmp 0x1ffc3371d65
0x00000200001cdd3c : jmp 0x1ffc3416a91
0x0000020000671ed2 : jmp 0x1ffc37127f2
0x00000200006dcf29 : jmp 0x1ffc3765873
0x00000200000f34bb : jmp 0x1ffc39443c5
0x00000200000a5a32 : jmp 0x1ffc395a247
0x0000020000136e95 : jmp 0x1ffc3977dae
0x00000200000c6c1d : jmp 0x1ffc3982a35
0x000002000074609c : jmp 0x1ffc39fadb7
0x0000020000172176 : jmp 0x1ffc3a22182
0x0000020000782284 : jmp 0x1ffc3b366f3
0x0000020000079081 : jmp 0x1ffc3c8b397
0x0000020000464166 : jmp 0x1ffc3d2209a
0x00000200004f46a6 : jmp 0x1ffc3d355b0
0x00000200004fb848 : jmp 0x1ffc3d3c752
0x0000020000133b7e : jmp 0x1ffc3d5c6d0
0x0000020000525435 : jmp 0x1ffc3d6633f
0x00000200004d26e3 : jmp 0x1ffc3d926c1
0x0000020000121f47 : jmp 0x1ffc3d99451
0x00000200005ac9b1 : jmp 0x1ffc3ded8bc
0x0000020000544df8 : jmp 0x1ffc3e04df1
0x000002000059ab68 : jmp 0x1ffc3e4f470
0x000002000059d64f : jmp 0x1ffc3e52357
0x000002000059db6c : jmp 0x1ffc3e52874
0x000002000059eae9 : jmp 0x1ffc3e52cf1
0x00000200005a106e : jmp 0x1ffc3e55976
0x0000020000007cec : jmp 0x1ffc3eaf1f6
0x0000020000688090 : jmp 0x1ffc3ec8f9a
0x00000200006239ca : jmp 0x1ffc3ee397c
0x00000200006239c9 : jmp 0x1ffc3ee397d
0x000002000066338c : jmp 0x1ffc3f07894
0x00000200006da514 : jmp 0x1ffc3f2b2a6
0x000002000067ae52 : jmp 0x1ffc3f2f75a
0x00000200006734c4 : jmp 0x1ffc3f33471
0x000002000067f291 : jmp 0x1ffc3f38399
0x000002000067f5c5 : jmp 0x1ffc3f386cd
0x000002000067f5c4 : jmp 0x1ffc3f386ce
0x000002000067f7f6 : jmp 0x1ffc3f388fe
0x000002000067f96c : jmp 0x1ffc3f38a74
0x000002000067feeb : jmp 0x1ffc3f38ff3
0x000002000068002a : jmp 0x1ffc3f39132
0x0000020000680da1 : jmp 0x1ffc3f39ea9
0x0000020000680ebc : jmp 0x1ffc3f39fc4
0x0000020000681095 : jmp 0x1ffc3f3a19d
0x000002000017b290 : jmp 0x1ffc3fc279a
0x0000020000121faa : jmp 0x1ffc3fe94b4
0x00000200006da500 : jmp 0x1ffc402b292
0x00000200001fbe05 : jmp 0x1ffc406330f
0x000002000017d9b3 : jmp 0x1ffc417d701
0x00000200001c1974 : jmp 0x1ffc41be200
0x00000200003f0d2c : jmp 0x1ffc4218236
0x000002000045a995 : jmp 0x1ffc43da99d
0x000002000067dd52 : jmp 0x1ffc445566b
0x000002000067dd8e : jmp 0x1ffc44556a7
0x0000020000520511 : jmp 0x1ffc4467a1b
0x000002000076a9b3 : jmp 0x1ffc4764643
0x0000020000582c8c : jmp 0x1ffc7576e96
0x0000020000424799 : jmp 0x1ffc97d88b9
0x000002000042e67f : jmp 0x1ffc9c84c9b
0x0000020000583f94 : jmp 0x1ffcbe3889f
0x0000020000205de7 : jmp 0x1ffcd24eb01
0x000002000065b0e4 : jmp 0x1ffce2819fc
0x00000200004e72cf : jmp 0x1ffd34db4d6
0x00000200000a1e5b : jmp 0x1ffe18d5f6d
0x0000020000014fc1 : jmp 0x1ffe8c24fda
0x0000020000141ed5 : jmp 0x1ffe9141ee3
0x000002000063c294 : jmp 0x1ffe94cc26b
0x00000200000ebc73 : jmp 0x1ffec0eb9e2
0x0000020000731343 : jmp 0x1ffec359e93
0x0000020000096487 : jmp 0x1fff0cbefad
0x000002000049c443 : jmp 0x1fff14986a0
0x000002000018b3b6 : jmp 0x1fff1c576a6
0x00000200005cb5e6 : jmp 0x1fff51f69d7
0x00000200005a11f7 : jmp 0x1fff6df5b02
0x000002000046ee53 : jmp 0x1fff809736a
0x00000200006b40db : jmp 0x1fff86b0388
0x000002000010d35b : jmp 0x1fffad2a46a
0x000002000066348f : jmp 0x1ffff66bddc
0x000002000066348e : jmp 0x1ffff66bddd
0x000002000047f8eb : jmp 0x1ffffafe219
0x00000200000804b5 : jmp 0x1ffffcafc06
0x000002000059b362 : jmp 0x1ffffdcf56a
0x000002000059b446 : jmp 0x1ffffdcf64e
0x000002000059ba25 : jmp 0x1ffffdcfc2d
0x000002000059bbaa : jmp 0x1ffffdcfdb2
0x0000020000003182 : jmp 0x20000003120
0x000002000015756e : jmp 0x2000000384a
0x0000020000157599 : jmp 0x2000000384d
0x0000020000004399 : jmp 0x2000000435e
0x0000020000157866 : jmp 0x20000004b2c
0x00000200000059c4 : jmp 0x200000058a2
0x0000020000006530 : jmp 0x200000064f6
0x00000200000076bb : jmp 0x20000007681
0x000002000000a5a2 : jmp 0x2000000a5b1
0x000002000000b3ff : jmp 0x2000000b3da
0x00000200001593c6 : jmp 0x2000000c1b2
0x000002000000c379 : jmp 0x2000000c2f2
0x000002000000f586 : jmp 0x2000000f54c
0x000002000015a3c2 : jmp 0x2000000fb5e
0x0000020000013a16 : jmp 0x20000013793
0x000002000001407c : jmp 0x2000001408c
0x000002000015b642 : jmp 0x20000014e03
0x0000020000015c23 : jmp 0x20000015be9
0x0000020000017470 : jmp 0x200000172b6
0x000002000001720f : jmp 0x2000001741a
0x0000020000017d2b : jmp 0x200000179df
0x0000020000017dfa : jmp 0x20000017ab7
0x0000020000017aa6 : jmp 0x20000017af1
0x0000020000017df0 : jmp 0x20000017dce
0x000002000001cd8f : jmp 0x2000001cd97
0x000002000001d055 : jmp 0x2000001cdcb
0x000002000001e71f : jmp 0x2000001e6e5
0x000002000001e71e : jmp 0x2000001e6e6
0x0000020000022033 : jmp 0x20000021ea1
0x0000020000026267 : jmp 0x2000002622d
0x0000020000028ee3 : jmp 0x20000028ec1
0x000002000002bb68 : jmp 0x2000002bb2e
0x0000020000161b22 : jmp 0x2000002dd7d
0x0000020000161bac : jmp 0x2000002ddd5
0x0000020000161bcf : jmp 0x2000002dea9
0x0000020000161bc1 : jmp 0x2000002deab
0x00000200001c60c7 : jmp 0x2000002f0d5
0x000002000006a04e : jmp 0x20000036342
0x0000020000039922 : jmp 0x200000398e8
0x000002000016508f : jmp 0x2000003a52b
0x00000200001657e4 : jmp 0x2000003be97
0x000002000003cede : jmp 0x2000003cea4
0x000002000003f7da : jmp 0x2000003f79f
0x0000020000167ed2 : jmp 0x2000004412a
0x0000020000045992 : jmp 0x20000045958
0x00000200000488a8 : jmp 0x2000004886d
0x0000020000048b18 : jmp 0x20000048ade
0x000002000004a91b : jmp 0x2000004a8e1
0x000002000004cc41 : jmp 0x2000004cb3f
0x000002000004cc1d : jmp 0x2000004cb59
0x000002000004d5e0 : jmp 0x2000004d57d
0x000002000004e991 : jmp 0x2000004e957
0x000002000004eb93 : jmp 0x2000004eb59
0x000002000004fcb2 : jmp 0x2000004fc77
0x000002000005064d : jmp 0x20000050612
0x000002000010592e : jmp 0x20000051bfa
0x0000020000177b34 : jmp 0x20000053df8
0x0000020000177b3c : jmp 0x20000053e1b
0x0000020000054864 : jmp 0x2000005479f
0x0000020000055b01 : jmp 0x20000055b56
0x0000020000178377 : jmp 0x20000056325
0x000002000041c34b : jmp 0x20000058612
0x0000020000058dec : jmp 0x20000058db2
0x000002000005a783 : jmp 0x2000005a749
0x000002000005c786 : jmp 0x2000005c74b
0x000002000005e4c3 : jmp 0x2000005e488
0x000002000005e5f1 : jmp 0x2000005e5d9
0x000002000005ecae : jmp 0x2000005ec73
0x0000020000063a0a : jmp 0x20000063921
0x000002000017b709 : jmp 0x20000067947
0x000002000017b752 : jmp 0x20000067977
0x0000020000209033 : jmp 0x2000006804d
0x0000020000025c79 : jmp 0x200000684c6
0x000002000017c6db : jmp 0x2000006b2dc
0x000002000017c682 : jmp 0x2000006b408
0x000002000006c213 : jmp 0x2000006c3d7
0x000002000006e91b : jmp 0x2000006d149
0x000002000006e885 : jmp 0x2000006d625
0x000002000006e935 : jmp 0x2000006e256
0x0000020000070514 : jmp 0x20000070493
0x000002000007050b : jmp 0x20000070565
0x000002000007050a : jmp 0x20000070566
0x0000020000071418 : jmp 0x200000713de
0x000002000020efa4 : jmp 0x2000007b2a6
0x000002000007c378 : jmp 0x2000007c0a8
0x0000020000156482 : jmp 0x2000007e0c5
0x000002000007e501 : jmp 0x2000007e46c
0x000002000007ed10 : jmp 0x2000007edda
0x00000200000802a1 : jmp 0x20000080266
0x00000200000825ff : jmp 0x2000008258c
0x0000020000181da7 : jmp 0x200000858e3
0x0000020000085b9c : jmp 0x20000085a1a
0x000002000008f64f : jmp 0x2000008f56d
0x000002000008fb28 : jmp 0x2000008faed
0x00000200000c0af7 : jmp 0x20000090bb7
0x0000020000091627 : jmp 0x200000910e7
0x00000200000916f4 : jmp 0x20000091657
0x00000200001858c5 : jmp 0x20000091b4c
0x000002000018592d : jmp 0x20000091bda
0x000002000018593f : jmp 0x20000091bf9
0x0000020000185964 : jmp 0x20000091c25
0x00000200001859a4 : jmp 0x20000091c6e
0x0000020000185998 : jmp 0x20000091c9a
0x00000200000945d0 : jmp 0x20000093c5f
0x000002000018623b : jmp 0x20000094a9e
0x0000020000186429 : jmp 0x20000094ae4
0x00000200001882c4 : jmp 0x2000009b091
0x000002000009c603 : jmp 0x2000009c2a0
0x000002000018887d : jmp 0x2000009cb50
0x000002000009cdcd : jmp 0x2000009cc78
0x000002000047590a : jmp 0x2000009d693
0x000002000018b2eb : jmp 0x200000a74f4
0x000002000018be31 : jmp 0x200000a7cd7
0x00000200000a80d4 : jmp 0x200000a800b
0x00000200000a88db : jmp 0x200000a835d
0x00000200000a88da : jmp 0x200000a835e
0x000002000018c335 : jmp 0x200000a8545
0x000002000018c3ce : jmp 0x200000a8640
0x000002000018c8c9 : jmp 0x200000a9c60
0x00000200000ae2ba : jmp 0x200000ae2cd
0x00000200000b0713 : jmp 0x200000b069b
0x000002000018e576 : jmp 0x200000b227f
0x00000200000b5f4f : jmp 0x200000b5cfd
0x00000200000b66eb : jmp 0x200000b63c6
0x00000200000b80f6 : jmp 0x200000b80bb
0x00000200000b8a26 : jmp 0x200000b894e
0x00000200000b8b9f : jmp 0x200000b8b2a
0x0000020000497997 : jmp 0x200000b9433
0x0000020000497bcd : jmp 0x200000ba7e3
0x000002000018fb42 : jmp 0x200000baeaa
0x00000200000bb7b9 : jmp 0x200000bb7cc
0x0000020000499923 : jmp 0x200000bc2a3
0x00000200000bd98c : jmp 0x200000bd951
0x00000200000c0277 : jmp 0x200000bfda6
0x000002000010587d : jmp 0x200000c1b32
0x000002000049b7ab : jmp 0x200000c1b33
0x00000200000c36b3 : jmp 0x200000c3679
0x00000200000c64d8 : jmp 0x200000c639d
0x00000200000c6cd1 : jmp 0x200000c67ed
0x00000200000c6bb1 : jmp 0x200000c688f
0x00000200000c6c25 : jmp 0x200000c68ca
0x00000200000c7178 : jmp 0x200000c6d4e
0x000002000007b7db : jmp 0x200000c7a22
0x0000020000194194 : jmp 0x200000ca2c0
0x00000200000d1f25 : jmp 0x200000d1eeb
0x0000020000196879 : jmp 0x200000d4040
0x00000200000d46ad : jmp 0x200000d43b1
0x00000200000d4b7e : jmp 0x200000d4a05
0x00000200000da391 : jmp 0x200000da357
0x00000200001980ae : jmp 0x200000db196
0x000002000019915a : jmp 0x200000e01b5
0x00000200000e167c : jmp 0x200000e1552
0x00000200000e4c6a : jmp 0x200000e4c30
0x000002000019ac77 : jmp 0x200000e6f48
0x000002000019acb1 : jmp 0x200000e6fad
0x000002000019acc6 : jmp 0x200000e6fc6
0x00000200004c1b3f : jmp 0x200000e7293
0x00000200000ea1f6 : jmp 0x200000ea792
0x0000020000768cac : jmp 0x200000ece88
0x00000200000ef7af : jmp 0x200000ef7e7
0x00000200000efd93 : jmp 0x200000efd58
0x00000200000f045d : jmp 0x200000f0423
0x00000200000f1614 : jmp 0x200000f15d9
0x00000200000f3c2e : jmp 0x200000f3bf4
0x000002000016833d : jmp 0x200000f4846
0x00000200000f7081 : jmp 0x200000f7047
0x00000200000f7db7 : jmp 0x200000f7d7d
0x000002000019e9d5 : jmp 0x200000f8963
0x00000200000fe2de : jmp 0x200000fe2a4
0x000002000016c13e : jmp 0x2000010171a
0x0000020000101f55 : jmp 0x20000101e28
0x00000200001066d0 : jmp 0x20000106696
0x000002000010698d : jmp 0x20000106953
0x000002000010aab2 : jmp 0x2000010aa78
0x000002000016f02a : jmp 0x2000010b272
0x000002000010dea8 : jmp 0x2000010deb0
0x000002000010f94a : jmp 0x2000010f910
0x000002000010faec : jmp 0x2000010fab2
0x0000020000110ad7 : jmp 0x20000110a9d
0x0000020000110db6 : jmp 0x20000110d06
0x00000200001700c3 : jmp 0x20000111073
0x000002000017005f : jmp 0x200001110d9
0x0000020000112e84 : jmp 0x20000112e3b
0x00000200004ee8c3 : jmp 0x2000011767f
0x000002000017224f : jmp 0x200001185ae
0x0000020000118f67 : jmp 0x20000118f2c
0x000002000011cafd : jmp 0x2000011caeb
0x000002000011f2e4 : jmp 0x2000011f2aa
0x0000020000120afb : jmp 0x20000120ac1
0x000002000019d1e1 : jmp 0x20000121278
0x0000020000122f2d : jmp 0x20000122ef2
0x0000020000125242 : jmp 0x20000125208
0x000002000019f7f7 : jmp 0x2000012625e
0x0000020000127d5e : jmp 0x20000127d23
0x0000020000127fe9 : jmp 0x20000127faf
0x00000200001a34f5 : jmp 0x2000012e59f
0x00000200001a3bf3 : jmp 0x2000012fe42
0x00000200001a3bff : jmp 0x2000012fe64
0x00000200001324f8 : jmp 0x200001324be
0x00000200001327b7 : jmp 0x2000013277c
0x00000200001340e8 : jmp 0x200001340ae
0x0000020000134db3 : jmp 0x20000134d69
0x000002000013b231 : jmp 0x2000013b173
0x000002000013bf27 : jmp 0x2000013bdf2
0x000002000013db54 : jmp 0x2000013dc81
0x0000020000141b99 : jmp 0x2000014de82
0x0000020000153c1a : jmp 0x20000153bdf
0x0000020000153c19 : jmp 0x20000153be0
0x0000020000158ec5 : jmp 0x20000158eca
0x00000200001593c9 : jmp 0x200001593ce
0x000002000015a3c5 : jmp 0x2000015a3ca
0x000002000015b645 : jmp 0x2000015b649
0x000002000015eac5 : jmp 0x2000015eae0
0x000002000016af77 : jmp 0x2000016af81
0x000002000016b573 : jmp 0x2000016b57d
0x000002000016b643 : jmp 0x2000016b64d
0x000002000016b73d : jmp 0x2000016b747
0x00000200001e805e : jmp 0x2000017435c
0x0000020000174bfc : jmp 0x20000174c06
0x0000020000174d1a : jmp 0x20000174d24
0x000002000017c6dd : jmp 0x2000017c6d1
0x000002000017c6e5 : jmp 0x2000017c6d9
0x000002000006fc37 : jmp 0x2000017cdb7
0x0000020000071461 : jmp 0x2000017d744
0x0000020000071460 : jmp 0x2000017d745
0x00000200000cf287 : jmp 0x20000195eb5
0x000002000019d814 : jmp 0x2000019d84e
0x00000200001a1351 : jmp 0x200001a1317
0x00000200001b5ea7 : jmp 0x200001b5ec4
0x00000200001b6a40 : jmp 0x200001b6a55
0x00000200001b817c : jmp 0x200001b8101
0x000002000015c7d1 : jmp 0x200001bc8b5
0x00000200001c4cf7 : jmp 0x200001c4cdc
0x00000200001c57b0 : jmp 0x200001c5799
0x00000200001c67c0 : jmp 0x200001c67f2
0x00000200001cbe51 : jmp 0x200001cbf5b
0x00000200001ce5fc : jmp 0x200001ce61e
0x00000200001d09be : jmp 0x200001d0b97
0x00000200001d5297 : jmp 0x200001d52a9
0x00000200001d9e9e : jmp 0x200001d9ecc
0x00000200001dc170 : jmp 0x200001dc25a
0x00000200001dc1fe : jmp 0x200001dc27a
0x00000200001ddfce : jmp 0x200001ddfd3
0x00000200001e174a : jmp 0x200001e17ae
0x00000200001e228d : jmp 0x200001e2327
0x00000200001e3d19 : jmp 0x200001e3cdf
0x00000200001ee9ab : jmp 0x200001ee971
0x00000200001f07b1 : jmp 0x200001f095e
0x00000200001f394e : jmp 0x200001f3914
0x00000200001f3ded : jmp 0x200001f3dde
0x00000200001f6394 : jmp 0x200001f633f
0x00000200001f8b05 : jmp 0x200001f8b45
0x00000200001f8af8 : jmp 0x200001f8b8a
0x00000200001f8b6a : jmp 0x200001f8b8c
0x00000200001f8cc3 : jmp 0x200001f8cb5
0x00000200001f9332 : jmp 0x200001f91fb
0x00000200001f92c1 : jmp 0x200001f9301
0x00000200001f92b4 : jmp 0x200001f9358
0x00000200001f937c : jmp 0x200001f938f
0x00000200001f9de0 : jmp 0x200001f9df5
0x00000200001fa08a : jmp 0x200001fa09f
0x00000200001fd3bb : jmp 0x200001fd3c5
0x00000200001fd4d7 : jmp 0x200001fd4e1
0x00000200002030c5 : jmp 0x200002030cf
0x0000020000203141 : jmp 0x2000020314b
0x000002000020314b : jmp 0x2000020315d
0x000002000020329f : jmp 0x200002032d0
0x00000200002074d8 : jmp 0x20000207510
0x00000200002084cf : jmp 0x2000020858f
0x000002000020b5e4 : jmp 0x2000020b5aa
0x000002000021a39b : jmp 0x2000021a32d
0x000002000021bdba : jmp 0x2000021bde8
0x000002000021ebdf : jmp 0x2000021ebf4
0x0000020000225f23 : jmp 0x200002221d3
0x0000020000222c56 : jmp 0x20000222c41
0x0000020000414dae : jmp 0x20000231012
0x0000020000602a29 : jmp 0x20000231013
0x00000200003a7b50 : jmp 0x2000039b2e3
0x000002000039b9c5 : jmp 0x2000039b873
0x000002000039ea0c : jmp 0x2000039e9d2
0x000002000039ba87 : jmp 0x200003a7ce1
0x00000200003a8fa1 : jmp 0x200003a8f67
0x00000200003b2451 : jmp 0x200003b243e
0x00000200003b23f7 : jmp 0x200003b2445
0x00000200003b23f6 : jmp 0x200003b2446
0x00000200003b4a9f : jmp 0x200003b46c3
0x000002000055d69e : jmp 0x200003b46fa
0x00000200003b602a : jmp 0x200003b6097
0x00000200003b69d6 : jmp 0x200003b69e3
0x00000200003b6ffc : jmp 0x200003b6fc1
0x00000200003b7892 : jmp 0x200003b767f
0x00000200003b8f52 : jmp 0x200003b8f17
0x0000020000560e3f : jmp 0x200003bd051
0x00000200005622c3 : jmp 0x200003c2b0e
0x00000200003c5d96 : jmp 0x200003c5d5b
0x00000200003c6d17 : jmp 0x200003c6cdc
0x00000200003c9ace : jmp 0x200003c9a93
0x000002000056487e : jmp 0x200003cdf97
0x0000020000564a1b : jmp 0x200003ce85a
0x00000200003ce871 : jmp 0x200003ce882
0x00000200003cefac : jmp 0x200003cef71
0x00000200003d4b5a : jmp 0x200003d4b20
0x00000200003d7ee4 : jmp 0x200003d7eaa
0x00000200003dbb7d : jmp 0x200003dbb42
0x00000200003dc311 : jmp 0x200003dc2d7
0x00000200003dd52d : jmp 0x200003dd4f2
0x00000200003dd537 : jmp 0x200003dd4fd
0x0000020000570d10 : jmp 0x200003e184a
0x00000200003e4652 : jmp 0x200003e4617
0x00000200003e5b36 : jmp 0x200003e5afb
0x0000020000573dc8 : jmp 0x200003e8d33
0x00000200003ec773 : jmp 0x200003ec6b1
0x00000200003f1dd7 : jmp 0x200003f1d62
0x0000020000577033 : jmp 0x200003f3294
0x00000200005770e1 : jmp 0x200003f3344
0x00000200005771e0 : jmp 0x200003f34c3
0x0000020000577285 : jmp 0x200003f3c83
0x00000200003f4b06 : jmp 0x200003f4acc
0x00000200003f4e2c : jmp 0x200003f4e3c
0x00000200003f837c : jmp 0x200003f8342
0x0000020000402813 : jmp 0x20000402909
0x000002000057e22c : jmp 0x20000404d9b
0x0000020000404f9f : jmp 0x20000404df8
0x0000020000405d7a : jmp 0x20000405d40
0x00000200004074a1 : jmp 0x20000407467
0x000002000057fb9a : jmp 0x2000040be9d
0x000002000040c4b4 : jmp 0x2000040c47a
0x000002000040caba : jmp 0x2000040ca7f
0x000002000040f2ab : jmp 0x2000040f271
0x0000020000410941 : jmp 0x20000410947
0x0000020000410c54 : jmp 0x20000410c69
0x00000200004119de : jmp 0x200004119e4
0x0000020000413e00 : jmp 0x20000413d94
0x000002000041775c : jmp 0x20000417722
0x0000020000417c1d : jmp 0x20000417c23
0x0000020000417d6e : jmp 0x20000417d74
0x0000020000417d6d : jmp 0x20000417d75
0x000002000041fad6 : jmp 0x2000041fada
0x000002000042076f : jmp 0x20000420773
0x000002000042076e : jmp 0x20000420774
0x00000200004230ed : jmp 0x200004230b2
0x00000200005989bd : jmp 0x20000424c70
0x0000020000426348 : jmp 0x2000042630d
0x00000200004270d1 : jmp 0x20000427066
0x00000200004270d0 : jmp 0x20000427067
0x0000020000429e67 : jmp 0x20000429e2d
0x000002000059ae1c : jmp 0x2000042bda6
0x000002000042c452 : jmp 0x2000042c417
0x000002000042dbcd : jmp 0x2000042dbd5
0x000002000059c598 : jmp 0x200004320f3
0x0000020000435063 : jmp 0x20000434f90
0x0000020000435b6e : jmp 0x2000043549d
0x000002000043709c : jmp 0x20000437062
0x000002000043791b : jmp 0x200004378e0
0x0000020000438200 : jmp 0x200004381c6
0x0000020000439270 : jmp 0x20000439235
0x000002000043d7d3 : jmp 0x2000043d799
0x000002000043e2a3 : jmp 0x2000043e269
0x000002000043f062 : jmp 0x2000043f027
0x00000200004414e7 : jmp 0x200004414ed
0x000002000044182b : jmp 0x20000441916
0x00000200004420df : jmp 0x200004420a4
0x00000200004420de : jmp 0x200004420a5
0x0000020000444b9a : jmp 0x20000444a86
0x000002000044d62f : jmp 0x2000044d5f4
0x000002000044e7db : jmp 0x2000044e7a1
0x000002000044f427 : jmp 0x2000044f3ed
0x00000200004506f4 : jmp 0x200004505d4
0x0000020000452b05 : jmp 0x20000452acb
0x0000020000453bb2 : jmp 0x200004539cd
0x0000020000453af4 : jmp 0x20000453b0d
0x0000020000453f79 : jmp 0x20000453ed0
0x00000200005a5163 : jmp 0x20000454ba7
0x0000020000454d07 : jmp 0x20000454ccd
0x00000200005a538f : jmp 0x20000454ee4
0x0000020000454f8a : jmp 0x20000454f28
0x00000200005a6793 : jmp 0x20000458af8
0x000002000045908b : jmp 0x20000458da7
0x000002000045a993 : jmp 0x200004592a7
0x000002000045a5d5 : jmp 0x200004595b3
0x0000020000460693 : jmp 0x200004606ac
0x0000020000462723 : jmp 0x200004626e9
0x0000020000464204 : jmp 0x20000464235
0x00000200005a9c01 : jmp 0x20000465e38
0x00000200005ab917 : jmp 0x20000467b58
0x00000200005ad369 : jmp 0x2000046957b
0x00000200005ad3cd : jmp 0x200004696cd
0x00000200005ae641 : jmp 0x2000046f126
0x00000200004792d9 : jmp 0x20000479259
0x000002000047adf5 : jmp 0x20000479ed6
0x000002000047a7b8 : jmp 0x20000479ed7
0x000002000047f8ed : jmp 0x2000047f860
0x000002000047fe0d : jmp 0x2000047fdd3
0x0000020000487cbc : jmp 0x20000487c82
0x0000020000489de9 : jmp 0x20000489dae
0x000002000048a5f3 : jmp 0x2000048a5b8
0x000002000048a5fd : jmp 0x2000048a5c3
0x000002000048a868 : jmp 0x2000048a82d
0x000002000048c2aa : jmp 0x2000048c270
0x000002000048e0e3 : jmp 0x2000048e0a8
0x000002000048e152 : jmp 0x2000048e117
0x000002000048e8a9 : jmp 0x2000048e86e
0x000002000048f7cc : jmp 0x2000048f64d
0x000002000048faca : jmp 0x2000048f941
0x0000020000490551 : jmp 0x2000048ff20
0x000002000049044d : jmp 0x2000048ffbe
0x0000020000491932 : jmp 0x200004918f7
0x00000200004921e7 : jmp 0x20000491ba6
0x0000020000494a07 : jmp 0x20000494665
0x0000020000494a06 : jmp 0x20000494666
0x00000200005b9e82 : jmp 0x20000496145
0x00000200005ba9e1 : jmp 0x20000499917
0x000002000049a3a2 : jmp 0x2000049a3d0
0x000002000049a362 : jmp 0x2000049a8cd
0x000002000049d3a6 : jmp 0x2000049d36c
0x00000200004a98fe : jmp 0x200004a954f
0x00000200004aa713 : jmp 0x200004aa279
0x00000200004aa737 : jmp 0x200004aa313
0x00000200004aa76c : jmp 0x200004aa32a
0x00000200004aa75b : jmp 0x200004aa4ea
0x00000200004ac885 : jmp 0x200004ac5c2
0x00000200004ae735 : jmp 0x200004ae419
0x00000200004aeefb : jmp 0x200004aed6f
0x00000200004af3ea : jmp 0x200004aef8a
0x00000200004b0b78 : jmp 0x200004b0b35
0x00000200005c0b1c : jmp 0x200004b3af8
0x00000200005c0625 : jmp 0x200004b3da2
0x00000200004b6bee : jmp 0x200004b6af5
0x00000200004b9be3 : jmp 0x200004b9ba9
0x00000200004ba79d : jmp 0x200004ba762
0x00000200004ba793 : jmp 0x200004ba7a7
0x00000200004cf01c : jmp 0x200004bbd11
0x00000200004c0ceb : jmp 0x200004c0cb1
0x00000200004c64a2 : jmp 0x200004c6467
0x00000200004c81fa : jmp 0x200004c81c0
0x00000200004ca6d2 : jmp 0x200004ca698
0x00000200004cae49 : jmp 0x200004cae0f
0x00000200004cc54f : jmp 0x200004cc514
0x00000200004ceae7 : jmp 0x200004ceaee
0x00000200004cf01d : jmp 0x200004ceef4
0x00000200004d181e : jmp 0x200004d17ea
0x00000200005c9682 : jmp 0x200004d2da2
0x00000200005c97a3 : jmp 0x200004d3484
0x00000200005ca76e : jmp 0x200004d69cd
0x00000200004d93a2 : jmp 0x200004d9367
0x00000200004dd740 : jmp 0x200004dd706
0x00000200004e1158 : jmp 0x200004e111d
0x00000200004e43b2 : jmp 0x200004e4377
0x00000200004e5ddd : jmp 0x200004e5de3
0x00000200004ea4d1 : jmp 0x200004ea4ff
0x00000200004ef6f9 : jmp 0x200004ef6bf
0x00000200004f1124 : jmp 0x200004f10e9
0x000002000058b62c : jmp 0x200004f6661
0x000002000058ba9d : jmp 0x200004f7cee
0x00000200004f81a6 : jmp 0x200004f8199
0x00000200004f81a5 : jmp 0x200004f819a
0x00000200004f8d3e : jmp 0x200004f8d04
0x00000200004fa5c6 : jmp 0x200004fa45f
0x00000200004fda1c : jmp 0x200004fd9e2
0x00000200004ff132 : jmp 0x200004ff090
0x000002000058e107 : jmp 0x20000501cc0
0x00000200005045f6 : jmp 0x200005045bb
0x00000200005079c6 : jmp 0x20000507964
0x00000200005079cd : jmp 0x2000050796e
0x0000020000509607 : jmp 0x200005093d2
0x000002000050a79f : jmp 0x2000050a760
0x000002000050a7a6 : jmp 0x2000050a76a
0x000002000050a7ad : jmp 0x2000050a773
0x000002000050aae1 : jmp 0x2000050aa78
0x000002000050ae61 : jmp 0x2000050ac34
0x000002000050b239 : jmp 0x2000050b211
0x000002000050b240 : jmp 0x2000050b21a
0x000002000050b71e : jmp 0x2000050b6f8
0x000002000050be02 : jmp 0x2000050bdc8
0x000002000050c375 : jmp 0x2000050c352
0x000002000050dba6 : jmp 0x2000050dbca
0x000002000050e09f : jmp 0x2000050e018
0x000002000050f4ab : jmp 0x2000050f46b
0x000002000050f4b2 : jmp 0x2000050f482
0x00000200005110f8 : jmp 0x200005110be
0x00000200005965d8 : jmp 0x200005128cc
0x000002000059669b : jmp 0x200005128d7
0x00000200005966b4 : jmp 0x200005128db
0x00000200005966b4 : jmp 0x200005128df
0x00000200005966bf : jmp 0x200005128f8
0x00000200005966cf : jmp 0x2000051292d
0x00000200005cb5ae : jmp 0x20000517830
0x00000200005cb5e7 : jmp 0x200005178a1
0x00000200005cb64a : jmp 0x200005178f6
0x00000200005cb656 : jmp 0x20000517916
0x000002000051e23b : jmp 0x2000051e201
0x00000200005cde0a : jmp 0x20000521c9b
0x0000020000521daf : jmp 0x20000521d74
0x0000020000527a5b : jmp 0x20000527a21
0x000002000052a677 : jmp 0x2000052a63d
0x000002000052ca8c : jmp 0x2000052ca51
0x00000200005d08ee : jmp 0x2000052cb1e
0x000002000052e91c : jmp 0x2000052e8fe
0x000002000052f024 : jmp 0x2000052efea
0x0000020000532b43 : jmp 0x20000532b09
0x0000020000532b42 : jmp 0x20000532b0a
0x0000020000532b41 : jmp 0x20000532b0b
0x0000020000535f7f : jmp 0x20000535f45
0x000002000054494e : jmp 0x20000544973
0x00000200005614fd : jmp 0x200005614c3
0x0000020000563080 : jmp 0x20000563093
0x0000020000563863 : jmp 0x20000563876
0x000002000056aca9 : jmp 0x2000056acb6
0x000002000056aca8 : jmp 0x2000056acb7
0x000002000057482f : jmp 0x200005747f5
0x000002000041927c : jmp 0x2000058338d
0x0000020000586c54 : jmp 0x20000586c71
0x00000200005884f3 : jmp 0x200005884b8
0x00000200005887cd : jmp 0x200005887e7
0x00000200005a0181 : jmp 0x200005a0146
0x00000200005a4c22 : jmp 0x200005a4be7
0x00000200005a6796 : jmp 0x200005a679a
0x000002000045ae78 : jmp 0x200005a7162
0x00000200005aa0a0 : jmp 0x200005aa0a5
0x00000200005ab413 : jmp 0x200005ab412
0x000002000048a70e : jmp 0x200005b6950
0x000002000048a717 : jmp 0x200005b6963
0x00000200005b96f3 : jmp 0x200005b96f7
0x00000200005bd502 : jmp 0x200005be0a5
0x00000200005c2f11 : jmp 0x200005c2ed6
0x00000200005de3af : jmp 0x200005decad
0x00000200005e8b79 : jmp 0x200005e8a00
0x00000200005effd7 : jmp 0x200005f0036
0x00000200005ff8c9 : jmp 0x200005ff88e
0x0000020000603124 : jmp 0x200006030e9
0x00000200006042e1 : jmp 0x200006043cf
0x0000020000609bc4 : jmp 0x20000609bb2
0x0000020000609bc3 : jmp 0x20000609bb3
0x000002000061e799 : jmp 0x2000061e75f
0x000002000061e877 : jmp 0x2000061e83d
0x000002000061ec93 : jmp 0x2000061eccb
0x0000020000620976 : jmp 0x2000062098a
0x0000020000627371 : jmp 0x20000627336
0x000002000062c135 : jmp 0x2000062c13f
0x00000200006324ff : jmp 0x2000063277d
0x0000020000632d5a : jmp 0x20000632d20
0x000002000063f2be : jmp 0x2000063f23d
0x0000020000641c2f : jmp 0x20000641bf5
0x000002000064ed5e : jmp 0x2000064ed94
0x00000200006649c4 : jmp 0x200006649ce
0x000002000067d785 : jmp 0x2000067d7c9
0x0000020000683a0c : jmp 0x20000683a16
0x0000020000683a5f : jmp 0x20000683a69
0x0000020000683aec : jmp 0x20000683af6
0x0000020000683b94 : jmp 0x20000683b9e
0x00000200006857b3 : jmp 0x200006857da
0x00000200006857d1 : jmp 0x200006857db
0x00000200006857cd : jmp 0x200006857dc
0x000002000068583f : jmp 0x20000685866
0x000002000068585d : jmp 0x20000685867
0x0000020000685859 : jmp 0x20000685868
0x0000020000686dfa : jmp 0x20000686dff
0x00000200006880b7 : jmp 0x200006880c9
0x00000200006881b3 : jmp 0x200006881bd
0x000002000068846c : jmp 0x2000068847e
0x0000020000688ead : jmp 0x20000688eda
0x0000020000688ea2 : jmp 0x200006891bd
0x0000020000688ea2 : jmp 0x200006891be
0x000002000069150a : jmp 0x200006914d0
0x00000200006924a6 : jmp 0x20000692465
0x00000200006924a5 : jmp 0x20000692466
0x0000020000694c56 : jmp 0x20000694d4c
0x000002000069b654 : jmp 0x2000069b662
0x00000200006a8c80 : jmp 0x200006a8c90
0x00000200006ac7c5 : jmp 0x200006ac7d2
0x00000200006b6f1d : jmp 0x200006b6ee3
0x00000200006c2cf2 : jmp 0x200006c2c7a
0x00000200006c2cf1 : jmp 0x200006c2ce2
0x00000200006c2f39 : jmp 0x200006c2f56
0x00000200006c39ff : jmp 0x200006c3a6d
0x00000200006d4f75 : jmp 0x200006d4f95
0x00000200006db317 : jmp 0x200006d7528
0x00000200006d9295 : jmp 0x200006d92d1
0x00000200006dc094 : jmp 0x200006dc0ad
0x000002000072b55b : jmp 0x2000072b6dc
0x0000020000744bbf : jmp 0x20000744b9b
0x00000200007450ba : jmp 0x20000745080
0x0000020000747459 : jmp 0x200007473eb
0x000002000074751a : jmp 0x2000074749d
0x00000200007511e7 : jmp 0x200007511cd
0x000002000077832a : jmp 0x200007545d9
0x0000020000778381 : jmp 0x200007545fb
0x0000020000778398 : jmp 0x20000754631
0x00000200007783a3 : jmp 0x2000075464f
0x00000200007783ec : jmp 0x20000754657
0x0000020000779163 : jmp 0x2000075c7dd
0x0000020000779a28 : jmp 0x2000075d7b5
0x0000020000779d61 : jmp 0x2000075e4cb
0x0000020000760b0b : jmp 0x20000760adb
0x0000020000764795 : jmp 0x2000076475b
0x00000200007664f1 : jmp 0x200007664b6
0x000002000077cdf5 : jmp 0x20000767e46
0x000002000077d030 : jmp 0x2000076925f
0x000002000076c6b4 : jmp 0x2000076c679
0x00000200007750e9 : jmp 0x200007750f2
0x0000020000775533 : jmp 0x2000077553d
0x000002000077861a : jmp 0x200007785c4
0x0000020000781df7 : jmp 0x20000781dbd
0x0000020000781df6 : jmp 0x20000781dbe
0x0000020000782bec : jmp 0x20000782c05
0x00000200007664e2 : jmp 0x20001761eb1
0x0000020000083f86 : jmp 0x20001e9bf94
0x00000200000c9d39 : jmp 0x20002061d52
0x0000020000580d9b : jmp 0x200021b04a2
0x00000200000fee95 : jmp 0x2000358b02d
0x0000020000466370 : jmp 0x2000908e6c0
0x0000020000746329 : jmp 0x2000dfdab41
0x0000020000636320 : jmp 0x2000f65261d
0x0000020000115947 : jmp 0x2000fd35c9c
0x00000200001ec1f1 : jmp 0x20017744b46
0x00000200003b3427 : jmp 0x2001c142b3c
0x000002000001a7a4 : jmp 0x200247632f8
0x0000020000485e1e : jmp 0x20024bce972
0x00000200004a9535 : jmp 0x200264a0061
0x0000020000686361 : jmp 0x20033484ec3
0x00000200006802e1 : jmp 0x200336aeeec
0x0000020000101429 : jmp 0x20033b8ff44
0x0000020000087b40 : jmp 0x20033cb068c
0x00000200000faab2 : jmp 0x20033d795cd
0x00000200001f6361 : jmp 0x20041e1eead
0x00000200004ccf63 : jmp 0x2004235aaa1
0x0000020000512f93 : jmp 0x2004250f26d
0x000002000048c57c : jmp 0x200428487ae
0x0000020000030dfe : jmp 0x20048c59926
0x0000020000046174 : jmp 0x20048c6ec81
0x000002000007614b : jmp 0x20048c9ec9b
0x0000020000081c34 : jmp 0x20048caa784
0x00000200000dde97 : jmp 0x20048d0dda8
0x0000020000121f3a : jmp 0x20048ec9446
0x000002000047e69b : jmp 0x200490a71a5
0x0000020000604c86 : jmp 0x2004922d7d6
0x000002000042dc9b : jmp 0x20049429f8c
0x000002000051b193 : jmp 0x200495173eb
0x000002000075d533 : jmp 0x20049759757
0x00000200003a7932 : jmp 0x2004a3a7876
0x00000200006b5033 : jmp 0x2004a6b1270
0x00000200006d738b : jmp 0x2004a6d3649
0x00000200006dc1d3 : jmp 0x2004d6d8444
0x000002000000a4a7 : jmp 0x2004dc32ef0
0x0000020000504c83 : jmp 0x20066500f84
0x0000020000130f02 : jmp 0x20072d54a52
0x00000200004538bb : jmp 0x2007446fbb8
0x0000020000474883 : jmp 0x200750983d4
0x0000020000576e02 : jmp 0x2007520f216
0x00000200006441a5 : jmp 0x200752dc5b9
0x00000200000af156 : jmp 0x20075d31366
0x00000200007804ee : jmp 0x2007677fe7d
0x000002000004b189 : jmp qword ptr [r10 + rax*8]
0x0000020000697941 : jmp qword ptr [r10]
0x00000200000e665a : jmp qword ptr [r11]
0x0000020000602fbb : jmp qword ptr [r8]
0x0000020000530203 : jmp qword ptr [r9]
0x00000200001daf0d : jmp qword ptr [rax + 5]
0x00000200001d4d1d : jmp qword ptr [rax + rbp*8]
0x00000200000072a3 : jmp qword ptr [rax]
0x0000020000089ea1 : jmp qword ptr [rbx]
0x00000200000e42e4 : jmp qword ptr [rcx + 0x74c00000]
0x000002000005891f : jmp qword ptr [rcx]
0x0000020000057f2c : jmp qword ptr [rdi]
0x000002000004b18a : jmp qword ptr [rdx + rax*8]
0x00000200000185ae : jmp qword ptr [rdx]
0x00000200006cd1a9 : jmp qword ptr [rip + 0x3c201]
0x00000200006cd14d : jmp qword ptr [rip + 0x3c23d]
0x00000200001e1ed7 : jmp qword ptr [rip + 0xfff]
0x0000020000092289 : jmp qword ptr [rsi + 0xf]
0x00000200004a9fed : jmp qword ptr [rsi - 0x70]
0x00000200000d62a9 : jmp qword ptr [rsi]
0x00000200003b63a8 : jmp r10
0x000002000014dc36 : jmp r11
0x000002000010c4f1 : jmp r8
0x0000020000148e66 : jmp r9
0x000002000001cc1c : jmp rax
0x000002000014dc37 : jmp rbx
0x000002000001b9a2 : jmp rcx
0x00000200001e8549 : jmp rdi
0x00000200000a2598 : jmp rdx
0x000002000014adaa : jmp rsi
0x00000200001feb94 : jmp rsp
0x0000020000007cee : jne 0x20000007cdc ; ret
0x0000020000008413 : jne 0x20000008408 ; add rsp, 0x28 ; ret
0x0000020000008603 : jne 0x200000085f7 ; ret
0x00000200000092c5 : jne 0x200000092bd ; ret
0x0000020000009ba3 : jne 0x20000009bc1 ; ret
0x0000020000009e99 : jne 0x20000009e73 ; ret
0x000002000000ac74 : jne 0x2000000ac93 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000000c981 : jne 0x2000000c992 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000000f576 : jne 0x2000000f58f ; mov eax, 1 ; ret
0x000002000001255a : jne 0x2000001254f ; ret
0x0000020000012ddb : jne 0x20000012de8 ; add rsp, 0x38 ; ret
0x0000020000012ebe : jne 0x20000012eb7 ; ret
0x00000200000156ea : jne 0x200000156f9 ; mov eax, 1 ; ret
0x0000020000018a40 : jne 0x20000018a2b ; add rsp, 0x28 ; ret
0x0000020000018cbe : jne 0x20000018cb1 ; add rsp, 0x28 ; ret
0x0000020000019944 : jne 0x20000019932 ; ret
0x000002000001a078 : jne 0x2000001a081 ; xor al, al ; ret
0x000002000001a310 : jne 0x2000001a31d ; add rsp, 0x28 ; ret
0x000002000001e155 : jne 0x2000001e15e ; mov al, 1 ; ret
0x000002000001e67e : jne 0x2000001e672 ; mov eax, 0xc0000109 ; ret
0x000002000001e699 : jne 0x2000001e697 ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x000002000001f061 : jne 0x2000001f04b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000203f3 : jne 0x200000203ff ; or byte ptr [rcx + 9], 4 ; ret
0x0000020000020a2d : jne 0x20000020a36 ; xor eax, eax ; ret
0x00000200000210da : jne 0x200000210e3 ; xor eax, eax ; ret
0x0000020000021b98 : jne 0x20000021ba9 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000021d7d : jne 0x20000021d8c ; xor eax, eax ; ret
0x0000020000021dcc : jne 0x20000021dd7 ; mov eax, dword ptr [rax + 0x24] ; ret
0x0000020000022284 : jne 0x20000022291 ; add rsp, 0x28 ; ret
0x0000020000022b4f : jne 0x20000022b87 ; add rsp, 0x48 ; ret
0x0000020000022c2b : jne 0x20000022c3b ; sub rax, qword ptr [rcx] ; mov qword ptr [r10], rax ; ret
0x000002000002317b : jne 0x20000023197 ; mov rax, qword ptr [rdx + 0x220] ; ret
0x0000020000023190 : jne 0x200000231a3 ; mov rax, qword ptr [rdx + 0xb8] ; ret
0x00000200000234d6 : jne 0x200000234d1 ; mov rax, rcx ; ret
0x00000200000235bf : jne 0x200000235ce ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002426c : jne 0x20000024296 ; or qword ptr [rcx], 0xffffffffffffffff ; ret
0x00000200000244a1 : jne 0x200000244b0 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000024593 : jne 0x200000245a5 ; mov rax, rcx ; ret
0x0000020000024901 : jne 0x200000248f9 ; ret
0x00000200000258a7 : jne 0x200000258c5 ; add rsp, 0x38 ; ret
0x000002000002649f : jne 0x200000264d8 ; add rsp, 0x28 ; ret
0x0000020000029324 : jne 0x20000029337 ; mov rax, rcx ; add rsp, 0x38 ; ret
0x0000020000029956 : jne 0x20000029950 ; ret 0xf01
0x0000020000029a60 : jne 0x20000029a71 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000029d03 : jne 0x20000029cf4 ; add rsp, 0x28 ; ret
0x000002000002aaba : jne 0x2000002aabf ; ret
0x000002000002bf7e : jne 0x2000002bf91 ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000002c5c0 : jne 0x2000002c5b9 ; sub rax, rcx ; ret
0x000002000002cc15 : jne 0x2000002cc61 ; mov rbx, qword ptr [rsp + 0x18] ; pop rsi ; ret
0x000002000002ce6b : jne 0x2000002ce7a ; add rsp, 0x60 ; pop rbp ; ret
0x000002000002d324 : jne 0x2000002d331 ; mov qword ptr [rdx + 8], r8 ; ret
0x000002000002d3cd : jne 0x2000002d3d6 ; xor eax, eax ; ret
0x000002000002db17 : jne 0x2000002db1f ; ret
0x000002000002db10 : jne 0x2000002db23 ; lock cmpxchg qword ptr [rcx], rdx ; jne 0x2000002db26 ; ret
0x0000020000161b1c : jne 0x2000002dd7c ; jmp 0x2000002dd83
0x000002000002f52a : jne 0x2000002f52f ; ret
0x000002000002f714 : jne 0x2000002f6dd ; ret
0x000002000002f737 : jne 0x2000002f748 ; lock btr dword ptr [rdx + 0x78], 5 ; ret
0x00000200000302b8 : jne 0x200000302c7 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000030998 : jne 0x200000309ab ; and dword ptr [rcx + 4], 0 ; mov al, r8b ; ret
0x00000200000309e3 : jne 0x200000309ce ; ret
0x0000020000031c02 : jne 0x20000031c0f ; add rsp, 0x28 ; ret
0x0000020000031d0a : jne 0x20000031d13 ; xor eax, eax ; ret
0x0000020000031d2e : jne 0x20000031d15 ; btr rax, 0xc ; ret
0x0000020000031d05 : jne 0x20000031d25 ; test r8d, r8d ; jne 0x20000031d18 ; xor eax, eax ; ret
0x0000020000031d9d : jne 0x20000031db2 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000031def : jne 0x20000031dfa ; or eax, 0xffffffff ; ret
0x0000020000032460 : jne 0x20000032465 ; ret
0x0000020000033a64 : jne 0x20000033a12 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000033d87 : jne 0x20000033d9c ; ret
0x00000200000342d2 : jne 0x200000342d7 ; ret
0x000002000003441c : jne 0x2000003442f ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000035ace : jne 0x20000035ab2 ; ret
0x000002000003627f : jne 0x20000036290 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000003673d : jne 0x20000036730 ; ret
0x0000020000037440 : jne 0x2000003744b ; mov qword ptr [r9], r8 ; ret
0x0000020000037449 : jne 0x20000037463 ; mov qword ptr [rax], r8 ; ret
0x0000020000037fa2 : jne 0x20000037fb1 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000038572 : jne 0x20000038577 ; ret
0x0000020000039175 : jne 0x2000003917d ; xor eax, eax ; ret
0x000002000003b541 : jne 0x2000003b554 ; cmp dword ptr [rdx + 0x18], r9d ; seta al ; ret
0x000002000003c233 : jne 0x2000003c246 ; mov rax, qword ptr [rcx + 0x680] ; ret
0x000002000003c25b : jne 0x2000003c265 ; mov rax, rdx ; ret
0x000002000003c25b : jne 0x2000003c266 ; mov rax, rdx ; ret
0x000002000003cd12 : jne 0x2000003ccf8 ; ret
0x000002000003cd01 : jne 0x2000003cd14 ; mov rax, qword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x000002000003cd25 : jne 0x2000003cd32 ; shl rax, 0x14 ; ret
0x000002000003d4f7 : jne 0x2000003d4d6 ; mov eax, r9d ; ret
0x000002000003d732 : jne 0x2000003d767 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003e489 : jne 0x2000003e4a1 ; mov byte ptr [rip + 0x2bc632], dl ; ret
0x000002000003e541 : jne 0x2000003e506 ; lock or qword ptr [r9 + 8], rdx ; ret
0x000002000003ffb4 : jne 0x2000003ffc1 ; ret
0x00000200000403aa : jne 0x200000403bd ; mov qword ptr [rdx + 0x20], r9 ; mov al, r8b ; ret
0x00000200000407e4 : jne 0x200000407ed ; xor eax, eax ; ret
0x0000020000040f3b : jne 0x20000040f4c ; mov r8, rax ; mov rax, r8 ; ret
0x0000020000042014 : jne 0x2000004200f ; mov rax, rcx ; ret
0x0000020000042e5a : jne 0x20000042e62 ; xor eax, eax ; ret
0x0000020000042e55 : jne 0x20000042e65 ; cmp qword ptr [rax], rax ; jne 0x20000042e67 ; xor eax, eax ; ret
0x00000200000435d2 : jne 0x200000435d7 ; ret
0x0000020000045084 : jne 0x200000450ac ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000473de : jne 0x200000473d5 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000047a3e : jne 0x20000047a57 ; mov rcx, rdi ; call rsi
0x000002000004a61b : jne 0x2000004a62a ; mov rdi, qword ptr [rsp + 8] ; ret
0x000002000004c232 : jne 0x2000004c23e ; mov al, 1 ; ret
0x000002000004c258 : jne 0x2000004c261 ; mov al, 1 ; ret
0x000002000004eb51 : jne 0x2000004eb95 ; add rsp, 0x28 ; ret
0x000002000004ebea : jne 0x2000004ebef ; ret
0x0000020000050364 : jne 0x2000005036f ; mov al, r8b ; ret
0x0000020000050399 : jne 0x2000005039e ; ret
0x0000020000050696 : jne 0x2000005069f ; mov al, 1 ; ret
0x0000020000051690 : jne 0x200000516a0 ; mov eax, dword ptr [rip + 0x32db74] ; ret
0x00000200000516ad : jne 0x200000516c3 ; mov eax, dword ptr [rip + 0x32dbb7] ; ret
0x0000020000051fa4 : jne 0x20000051faf ; mov rax, r9 ; ret
0x0000020000052068 : jne 0x20000052079 ; mov eax, dword ptr [rip + 0x32d19c] ; ret
0x0000020000052f9c : jne 0x20000052fa5 ; xor eax, eax ; ret
0x00000200000534b7 : jne 0x200000534c7 ; xor al, al ; ret
0x0000020000053b93 : jne 0x20000053b9f ; mov al, 1 ; ret
0x0000020000053bda : jne 0x20000053bed ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000053c77 : jne 0x20000053c88 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000053c8d : jne 0x20000053c96 ; xor al, al ; ret
0x0000020000053c8c : jne 0x20000053c97 ; xor al, al ; ret
0x0000020000054281 : jne 0x200000542b9 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005584d : jne 0x20000055856 ; xor eax, eax ; ret
0x0000020000055b9c : jne 0x20000055ba1 ; ret
0x00000200000596ec : jne 0x200000596c4 ; xor eax, eax ; ret
0x0000020000059812 : jne 0x2000005981f ; add rsp, 0x28 ; ret
0x000002000005a895 : jne 0x2000005a8b1 ; add rsp, 0x28 ; ret
0x000002000005a894 : jne 0x2000005a8b2 ; add rsp, 0x28 ; ret
0x000002000005a893 : jne 0x2000005a8b3 ; add rsp, 0x28 ; ret
0x000002000005ac4d : jne 0x2000005ac65 ; mov qword ptr [r9], rax ; mov eax, r10d ; ret
0x000002000005ac4d : jne 0x2000005ac66 ; mov qword ptr [r9], rax ; mov eax, r10d ; ret
0x000002000005ad7d : jne 0x2000005ad88 ; mov rax, r9 ; ret
0x000002000005b0e7 : jne 0x2000005b0ec ; ret
0x000002000005b106 : jne 0x2000005b0f6 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005be43 : jne 0x2000005be5f ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005cb2d : jne 0x2000005cb3a ; add rsp, 0x28 ; ret
0x000002000005d0aa : jne 0x2000005d0d9 ; ret
0x0000020000060b19 : jne 0x20000060b26 ; add rsp, 0x28 ; ret
0x0000020000062895 : jne 0x200000628a2 ; add rsp, 0x28 ; ret
0x00000200000628e5 : jne 0x200000628f2 ; add rsp, 0x28 ; ret
0x00000200000660ca : jne 0x200000660dd ; add dword ptr [rax], r9d ; add rsp, 0x28 ; ret
0x0000020000066818 : jne 0x20000066827 ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000066c9e : jne 0x20000066cc9 ; xor al, al ; ret
0x000002000006811f : jne 0x20000068124 ; ret
0x00000200000681df : jne 0x20000068203 ; lea rax, qword ptr [rcx + 0x7b0] ; ret
0x0000020000069ea3 : jne 0x20000069e96 ; xor al, al ; ret
0x0000020000069efe : jne 0x20000069f0d ; sti ; add rsp, 0x28 ; ret
0x0000020000069f6b : jne 0x20000069f92 ; movzx eax, dl ; ret
0x0000020000069f6b : jne 0x20000069f93 ; movzx eax, dl ; ret
0x0000020000069fff : jne 0x20000069ff0 ; ret
0x000002000006a027 : jne 0x2000006a020 ; xor eax, eax ; ret
0x000002000006a01a : jne 0x2000006a029 ; mov eax, 1 ; ret
0x000002000006a04c : jne 0x2000006a041 ; jmp 0x20000036344
0x000002000006a56e : jne 0x2000006a56f ; lea rax, qword ptr [rdx - 0x190] ; ret
0x0000020000070772 : jne 0x200000707a5 ; mov al, 1 ; ret
0x000002000007108b : jne 0x20000071098 ; add rsp, 0x28 ; ret
0x000002000007116d : jne 0x20000071178 ; mov rax, rcx ; ret
0x00000200000711c0 : jne 0x200000711ae ; ret
0x000002000007128e : jne 0x2000007129b ; ret
0x0000020000071452 : jne 0x20000071463 ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000072db9 : jne 0x20000072dc5 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000072e50 : jne 0x20000072e5a ; mov rax, rdx ; ret
0x0000020000072e50 : jne 0x20000072e5b ; mov rax, rdx ; ret
0x0000020000072e5e : jne 0x20000072e67 ; xor eax, eax ; ret
0x000002000007325e : jne 0x20000073290 ; lea rax, qword ptr [rip + 0xdeb39] ; ret
0x000002000007328a : jne 0x200000732cf ; lea rax, qword ptr [rip + 0xdeb2d] ; ret
0x0000020000073275 : jne 0x200000732e0 ; lea rax, qword ptr [rip + 0xdebb2] ; ret
0x00000200000732bc : jne 0x20000073312 ; lea rax, qword ptr [rip + 0xdec2b] ; ret
0x00000200000732ef : jne 0x20000073327 ; lea rax, qword ptr [rip + 0xdecf8] ; ret
0x000002000007330c : jne 0x20000073334 ; lea rax, qword ptr [rip + 0xdebfb] ; ret
0x00000200000732da : jne 0x20000073349 ; lea rax, qword ptr [rip + 0xdeb5d] ; ret
0x0000020000073321 : jne 0x20000073356 ; lea rax, qword ptr [rip + 0xdec46] ; ret
0x0000020000073343 : jne 0x20000073367 ; lea rax, qword ptr [rip + 0xdeb14] ; ret
0x000002000007332e : jne 0x20000073367 ; lea rax, qword ptr [rip + 0xdebf9] ; ret
0x00000200000739c2 : jne 0x200000739bd ; mov rax, rcx ; ret
0x0000020000073c40 : jne 0x20000073c53 ; mov qword ptr [rdx + 8], rcx ; mov qword ptr [rcx], rdx ; ret
0x00000200000740af : jne 0x20000074102 ; xor al, al ; ret
0x00000200000746e1 : jne 0x200000746f0 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x0000020000074f18 : jne 0x20000074f25 ; mov al, byte ptr [rax + rcx*2 + 1] ; ret
0x0000020000074f2e : jne 0x20000074f33 ; ret
0x000002000007904e : jne 0x20000079053 ; ret
0x000002000007b9bb : jne 0x2000007b9c0 ; ret
0x000002000007bbb5 : jne 0x2000007bbbe ; xor eax, eax ; ret
0x000002000007bdd6 : jne 0x2000007bde9 ; mov eax, r8d ; add rsp, 0x28 ; ret
0x000002000007dda7 : jne 0x2000007ddba ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000007e962 : jne 0x2000007e93d ; ret
0x000002000007e990 : jne 0x2000007e995 ; ret
0x000002000007f59d : jne 0x2000007f5ae ; movzx eax, al ; and eax, 7 ; ret
0x00000200000822f4 : jne 0x200000822f9 ; ret
0x0000020000082390 : jne 0x20000082385 ; sub rax, r8 ; ret
0x000002000018080e : jne 0x2000008263e ; xor eax, eax ; ret
0x0000020000082b02 : jne 0x20000082b07 ; ret
0x0000020000082b0d : jne 0x20000082b20 ; mov rax, -2 ; ret
0x00000200000844cc : jne 0x200000844db ; mov rax, qword ptr [r8 + rcx + 0x2f] ; ret
0x0000020000084561 : jne 0x2000008456a ; xor eax, eax ; ret
0x000002000008616d : jne 0x20000086172 ; ret
0x0000020000088252 : jne 0x20000088265 ; mov al, 1 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000113631 : jne 0x20000088d48 ; xor al, al ; ret
0x0000020000088d7a : jne 0x20000088d8b ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000089610 : jne 0x20000089606 ; mov al, 1 ; ret
0x0000020000089600 : jne 0x20000089609 ; xor al, al ; ret
0x0000020000089e53 : jne 0x20000089e5c ; mov al, 1 ; ret
0x000002000009a487 : jne 0x2000009a490 ; xor eax, eax ; ret
0x000002000009a552 : jne 0x2000009a572 ; ret
0x000002000009a599 : jne 0x2000009a5b4 ; or eax, 0x18 ; ret
0x000002000009b405 : jne 0x2000009b400 ; mov eax, 1 ; ret
0x000002000018c3c8 : jne 0x200000a8756 ; jmp 0x200000a8646
0x00000200000b25c3 : jne 0x200000b25d8 ; add rsp, 0x38 ; ret
0x00000200000b29eb : jne 0x200000b29f0 ; ret
0x00000200000b2db8 : jne 0x200000b2dc7 ; mov eax, 1 ; ret
0x00000200000bb134 : jne 0x200000bb143 ; mov eax, 1 ; ret
0x00000200000bc267 : jne 0x200000bc274 ; add rsp, 0x28 ; ret
0x00000200000bc28e : jne 0x200000bc293 ; ret
0x00000200000bc8c5 : jne 0x200000bc8ca ; ret
0x00000200000bccaf : jne 0x200000bccc0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000bcd16 : jne 0x200000bcd1f ; xor al, al ; ret
0x00000200000bd22a : jne 0x200000bd20b ; lea rax, qword ptr [r9 - 0x10] ; ret
0x00000200000bd88d : jne 0x200000bd8a0 ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000bf58c : jne 0x200000bf59b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c1943 : jne 0x200000c1935 ; xor al, al ; ret
0x00000200000c193c : jne 0x200000c1945 ; mov al, 1 ; ret
0x00000200000c1e43 : jne 0x200000c1e50 ; add rsp, 0x28 ; ret
0x00000200000c2d32 : jne 0x200000c2d49 ; add rsp, 0x28 ; ret
0x00000200000c30b1 : jne 0x200000c30a9 ; ret
0x00000200000c30f1 : jne 0x200000c30fc ; mov rax, r8 ; ret
0x00000200000c31ee : jne 0x200000c31ff ; mov al, 1 ; add rsp, 0x18 ; ret
0x00000200000c322f : jne 0x200000c3244 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200000cc793 : jne 0x200000cc79c ; xor eax, eax ; ret
0x00000200000cc7b4 : jne 0x200000cc7cc ; mov rax, r9 ; ret
0x00000200000cdc58 : jne 0x200000cdc76 ; add rsp, 0x28 ; ret
0x00000200000d397d : jne 0x200000d3982 ; ret
0x00000200000d39b0 : jne 0x200000d39dd ; cmp eax, 2 ; jl 0x200000d39bf ; ret
0x00000200000d5238 : jne 0x200000d5250 ; mov rdx, rbx ; xor ecx, ecx ; call 0x200000d1509
0x00000200000d827c : jne 0x200000d828f ; test rax, rcx ; jne 0x200000d8294 ; xor eax, eax ; ret
0x00000200000d8281 : jne 0x200000d828f ; xor eax, eax ; ret
0x00000200000df2d8 : jne 0x200000df2e7 ; mov eax, 1 ; ret
0x00000200000e2681 : jne 0x200000e2686 ; ret
0x00000200000e287c : jne 0x200000e288b ; ret
0x00000200000e79f0 : jne 0x200000e79fd ; add rsp, 0x38 ; ret
0x00000200000e8634 : jne 0x200000e8641 ; add rsp, 0x28 ; ret
0x00000200000ebc38 : jne 0x200000ebc7f ; mov rcx, rsi ; call r14
0x00000200000ec2e0 : jne 0x200000ec2ef ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ecf5a : jne 0x200000ecf6a ; mov eax, dword ptr [rip + 0x291386] ; ret
0x00000200000edbe3 : jne 0x200000edbde ; mov rax, rcx ; ret
0x00000200000ee4ed : jne 0x200000ee4e1 ; mov rax, rdx ; ret
0x00000200000eefe6 : jne 0x200000eeff5 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ef76f : jne 0x200000ef7e9 ; mov eax, 2 ; ret
0x00000200000ef873 : jne 0x200000ef886 ; lea rax, qword ptr [rip + 0x60c74] ; ret
0x00000200000ef89d : jne 0x200000ef8d0 ; lea rax, qword ptr [rip + 0x626aa] ; ret
0x00000200000ef8ca : jne 0x200000ef8dd ; lea rax, qword ptr [rip + 0x6269d] ; ret
0x00000200000f0456 : jne 0x200000f0461 ; ret
0x00000200000f11ff : jne 0x200000f11fb ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f17f7 : jne 0x200000f17e7 ; ret
0x00000200000f1994 : jne 0x200000f19a7 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f1a1a : jne 0x200000f1a25 ; mov eax, r8d ; ret
0x00000200000f1d3a : jne 0x200000f1d44 ; mov al, r10b ; ret
0x00000200000f1d3a : jne 0x200000f1d45 ; mov al, r10b ; ret
0x00000200000f3fb1 : jne 0x200000f3f76 ; jmp 0x200000f3f93
0x00000200000f5116 : jne 0x200000f511f ; mov eax, ecx ; ret
0x00000200000f513b : jne 0x200000f5140 ; ret
0x00000200000f60ce : jne 0x200000f60b1 ; not r9d ; mov eax, r9d ; ret
0x00000200000f7386 : jne 0x200000f7399 ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f83d8 : jne 0x200000f83cc ; test edx, edx ; jne 0x200000f83e5 ; ret
0x00000200000f83dc : jne 0x200000f83e1 ; ret
0x00000200000fd0a5 : jne 0x200000fd0c4 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ff34b : jne 0x200000ff3ac ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x00000200000ffdff : jne 0x200000ffe60 ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x000002000010190e : jne 0x20000101919 ; mov rax, rcx ; ret
0x0000020000105075 : jne 0x20000105047 ; ret
0x00000200001080df : jne 0x200001080ee ; add rsp, 0x20 ; pop rbx ; ret
0x000002000010badd : jne 0x2000010baec ; add rsp, 0x20 ; pop rbx ; ret
0x000002000010d3bc : jne 0x2000010d393 ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x000002000010fe2d : jne 0x2000010fe24 ; mov rax, rcx ; ret
0x00000200001100f4 : jne 0x200001100ec ; ret
0x0000020000110df5 : jne 0x20000110dfa ; ret
0x00000200001129fe : jne 0x200001129f8 ; mov eax, dword ptr [rip + 0x26b826] ; ret
0x000002000011380f : jne 0x20000113818 ; mov al, 1 ; ret
0x000002000011761e : jne 0x20000117630 ; mov al, byte ptr [r8 + 0xf0] ; ret
0x0000020000117635 : jne 0x20000117644 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011b743 : jne 0x2000011b752 ; mov eax, 1 ; ret
0x000002000011c336 : jne 0x2000011c345 ; mov eax, 1 ; ret
0x000002000011c9ba : jne 0x2000011c9cb ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000011fb2b : jne 0x2000011fb3a ; mov eax, 1 ; ret
0x0000020000120295 : jne 0x2000012029a ; ret
0x00000200001202ac : jne 0x200001202a1 ; ret
0x000002000012085e : jne 0x2000012086d ; mov rdi, qword ptr [rsp + 8] ; ret
0x0000020000121f49 : jne 0x20000121f14 ; ret
0x0000020000121fac : jne 0x20000121f9c ; ret
0x00000200001221f9 : jne 0x20000122192 ; ret
0x0000020000123572 : jne 0x2000012354d ; ret
0x0000020000123822 : jne 0x20000123831 ; mov eax, 0xc0000001 ; ret
0x000002000012441b : jne 0x20000124424 ; xor al, al ; ret
0x000002000012525b : jne 0x20000125260 ; ret
0x0000020000125809 : jne 0x200001257fd ; mov qword ptr [rip + 0x1c006e], rdx ; ret
0x000002000012880f : jne 0x20000128834 ; mov rcx, rdi ; call 0x20000104afb
0x0000020000129add : jne 0x20000129ac8 ; mov al, dl ; ret
0x000002000012eb02 : jne 0x2000012eaa8 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000012f43b : jne 0x2000012f44a ; add rsp, 0x20 ; pop rbx ; ret
0x000002000012f9ad : jne 0x2000012f990 ; ret
0x0000020000131513 : jne 0x200001314fb ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000133192 : jne 0x20000133197 ; ret
0x000002000013344f : jne 0x200001333de ; xor rax, rax ; ret
0x0000020000133464 : jne 0x2000013346f ; mov rax, rcx ; ret
0x00000200001334a8 : jne 0x2000013347a ; xor eax, eax ; ret
0x00000200001334ec : jne 0x200001334dd ; mov rax, rdx ; add rsp, 0x38 ; ret
0x00000200001336af : jne 0x200001336b8 ; xor eax, eax ; ret
0x00000200001336e3 : jne 0x200001336ec ; xor eax, eax ; ret
0x0000020000133adc : jne 0x20000133ac9 ; mov rax, rcx ; ret
0x0000020000133b49 : jne 0x20000133b3b ; ret
0x0000020000133b91 : jne 0x20000133b8b ; ret
0x0000020000133ff3 : jne 0x20000133fdd ; mov rax, rdx ; add rsp, 0x38 ; ret
0x00000200001340e7 : jne 0x200001340d6 ; ret
0x0000020000134234 : jne 0x2000013421a ; mov rax, rcx ; ret
0x000002000013425f : jne 0x20000134268 ; xor eax, eax ; ret
0x00000200001346dd : jne 0x200001346d5 ; xor rax, rax ; ret
0x0000020000134886 : jne 0x20000134879 ; mov rdx, r15 ; mov rcx, r12 ; call r14
0x00000200001348c6 : jne 0x200001348b9 ; mov rdx, r15 ; mov rcx, rsi ; call r14
0x0000020000134f55 : jne 0x20000134f53 ; cmp al, dl ; jne 0x20000134f68 ; mov rax, rcx ; ret
0x0000020000134f59 : jne 0x20000134f64 ; mov rax, rcx ; ret
0x0000020000135023 : jne 0x20000134fb4 ; xor eax, eax ; ret
0x00000200001350b6 : jne 0x20000135078 ; lea rax, qword ptr [rcx + rax - 1] ; ret
0x00000200001353a6 : jne 0x200001352f1 ; mov rax, r11 ; ret
0x0000020000135682 : jne 0x20000135678 ; mov rax, rcx ; ret
0x000002000013569d : jne 0x20000135693 ; mov rax, rcx ; ret
0x00000200001356ba : jne 0x200001356c5 ; mov rax, rcx ; ret
0x000002000013573c : jne 0x20000135718 ; sub rax, rcx ; sar rax, 1 ; ret
0x0000020000135795 : jne 0x20000135785 ; mov word ptr [rcx], r10w ; mov rax, r9 ; ret
0x00000200001357a3 : jne 0x200001357c1 ; xor eax, eax ; ret
0x00000200001358a0 : jne 0x2000013587c ; sub rax, rcx ; sar rax, 1 ; ret
0x00000200001358b9 : jne 0x200001358c4 ; mov rax, rcx ; ret
0x0000020000135909 : jne 0x200001358d1 ; xor eax, eax ; ret
0x0000020000135ffc : jne 0x20000135fd7 ; xor eax, eax ; ret
0x0000020000138900 : jne 0x200001388c5 ; jmp 0x200001388e2
0x00000200001388fa : jne 0x200001388c7 ; cmp rdi, 0xff ; jne 0x200001388cb ; jmp 0x200001388e8
0x000002000013d0bd : jne 0x2000013d0b9 ; mov rdx, rdi ; mov rcx, r11 ; call r8
0x000002000013e0c4 : jne 0x2000013e0b4 ; mov rax, rdx ; jmp 0x2000013e0d1
0x000002000013ee80 : jne 0x2000013ee70 ; mov rax, rdx ; jmp 0x2000013ee8d
0x000002000013f196 : jne 0x2000013f186 ; mov rax, rdx ; jmp 0x2000013f1a3
0x000002000013f57a : jne 0x2000013f56a ; mov rax, rdx ; jmp 0x2000013f587
0x000002000013f7b4 : jne 0x2000013f7b9 ; ret
0x000002000013f8b7 : jne 0x2000013f887 ; sub r9d, eax ; mov eax, r9d ; ret
0x000002000013fc59 : jne 0x2000013fc72 ; mov rcx, r9 ; call 0x2000011bf67
0x00000200001468f5 : jne 0x200001468d2 ; ret
0x0000020000146969 : jne 0x20000146915 ; sfence ; ret
0x000002000014698a : jne 0x20000146985 ; sfence ; ret
0x0000020000146a4e : jne 0x20000146a25 ; sfence ; ret
0x0000020000146a4d : jne 0x20000146a26 ; sfence ; ret
0x0000020000149135 : jne 0x2000014911d ; mov rax, r8 ; pop rbx ; ret
0x000002000014917a : jne 0x2000014916a ; mov rax, r8 ; pop rbx ; ret
0x00000200001491ab : jne 0x200001491a6 ; mov rax, rdx ; and al, 0xf0 ; pop rbx ; ret
0x00000200001491ec : jne 0x200001491d5 ; mov rax, r10 ; pop rbx ; ret
0x00000200001491ec : jne 0x200001491d7 ; mov rax, r10 ; pop rbx ; ret
0x000002000014992b : jne 0x20000149922 ; ret
0x0000020000149837 : jne 0x20000149926 ; ret
0x000002000014e19a : jne 0x2000014e3fc ; call r10
0x000002000014f1cc : jne 0x2000014f1c5 ; mov rax, r11 ; ret
0x000002000014f36c : jne 0x2000014f365 ; mov rax, r11 ; ret
0x000002000014f508 : jne 0x2000014f502 ; ret
0x000002000014f5b6 : jne 0x2000014f5b0 ; ret
0x0000020000002ad4 : jne 0x20000156ff8 ; ret
0x0000020000157864 : jne 0x20000157806 ; jmp 0x20000004b2e
0x000002000000c968 : jne 0x2000015956a ; ret
0x00000200000529c2 : jne 0x2000015baf5 ; mov qword ptr [r8], rcx ; ret
0x000002000001dbbf : jne 0x2000015d035 ; mov rcx, rdi ; call rbx
0x00000200000203dd : jne 0x2000015d3b6 ; xor eax, eax ; ret
0x000002000002484d : jne 0x2000015e009 ; ret
0x000002000002e767 : jne 0x20000161f25 ; mov al, r8b ; ret
0x0000020000032814 : jne 0x2000016282f ; xor eax, eax ; ret
0x00000200000361fd : jne 0x200001636a8 ; xor eax, eax ; ret
0x000002000003647e : jne 0x200001636c2 ; ret
0x000002000016508b : jne 0x20000165080 ; xor esi, esi ; jmp 0x2000003a52f
0x000002000003bc70 : jne 0x200001655ec ; xor eax, eax ; ret
0x000002000003fd02 : jne 0x20000166820 ; ret
0x00000200000401f0 : jne 0x20000166868 ; ret
0x00000200000432c6 : jne 0x20000167c62 ; ret
0x00000200000435f4 : jne 0x20000167df8 ; xor al, al ; ret
0x0000020000044c77 : jne 0x20000168146 ; ret
0x00000200000f83aa : jne 0x20000168d44 ; xor eax, eax ; ret
0x0000020000102a8f : jne 0x2000016c8f7 ; ret
0x0000020000102d13 : jne 0x2000016c9bb ; mov rax, rcx ; ret
0x0000020000103605 : jne 0x2000016cc4a ; ret
0x000002000010508d : jne 0x2000016d53a ; ret
0x00000200001090e3 : jne 0x2000016e682 ; ret
0x00000200001137c3 : jne 0x20000170d3e ; xor al, al ; ret
0x000002000011f814 : jne 0x20000173dee ; mov al, dl ; ret
0x00000200000500e0 : jne 0x20000176839 ; ret
0x0000020000050124 : jne 0x20000176875 ; ret
0x0000020000053427 : jne 0x20000177a10 ; ret
0x000002000005d7c4 : jne 0x200001799a6 ; ret
0x000002000017abcc : jne 0x2000017ac4f ; out dx, al ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000066771 : jne 0x2000017b26e ; ret
0x000002000017b292 : jne 0x2000017b27a ; ret
0x000002000017b28c : jne 0x2000017b285 ; sub r9, 1 ; jne 0x2000017b280 ; ret
0x000002000017bd4d : jne 0x2000017bd2e ; add rsp, 0x28 ; ret
0x0000020000071193 : jne 0x2000017d63c ; xor eax, eax ; ret
0x000002000007a83a : jne 0x2000017f285 ; mov eax, r9d ; ret
0x000002000009a27f : jne 0x20000187f8e ; ret
0x00000200001979a4 : jne 0x2000019798e ; ret
0x00000200000e87c2 : jne 0x2000019b103 ; call rdi
0x00000200000ed139 : jne 0x2000019bdf0 ; ret
0x000002000012523a : jne 0x2000019e911 ; mov al, 1 ; jmp 0x20000125210
0x00000200000f3ba3 : jne 0x2000019ee55 ; mov eax, edx ; jmp 0x200000f3b3b
0x00000200000f3d9e : jne 0x2000019eefa ; ret
0x0000020000125476 : jne 0x2000019ef8a ; mov al, cl ; ret
0x000002000019ffff : jne 0x2000019ffc4 ; jmp 0x2000019ffbc
0x0000020000129565 : jne 0x200001a1d10 ; ret
0x00000200001a34f3 : jne 0x200001a34dd ; jmp 0x2000012e5a1
0x00000200001320df : jne 0x200001a430c ; mov al, 1 ; ret
0x000002000013315f : jne 0x200001a53e8 ; ret
0x00000200001a5991 : jne 0x200001a599f ; or al, 4 ; mov byte ptr [rcx + 4], al ; ret
0x00000200001a5d48 : jne 0x200001a5d5c ; mov rdx, rbx ; mov rcx, rdi ; call rsi
0x00000200001a686f : jne 0x200001a685d ; ret
0x00000200001a99e0 : jne 0x200001a99be ; xor eax, eax ; ret
0x00000200001a9c41 : jne 0x200001a9c4a ; xor eax, eax ; ret
0x00000200001ab2ff : jne 0x200001ab30e ; mov eax, 0xc00000bb ; ret
0x00000200001ab810 : jne 0x200001ab81f ; mov eax, 0xc0000001 ; ret
0x00000200001ab82f : jne 0x200001ab83e ; mov eax, 0xc0000022 ; ret
0x00000200001ab83c : jne 0x200001ab84b ; mov eax, 0xc000000d ; ret
0x00000200001aba14 : jne 0x200001aba23 ; mov eax, 0xc0000022 ; ret
0x00000200001aba44 : jne 0x200001aba53 ; mov eax, 0xc0000022 ; ret
0x00000200001acc6e : jne 0x200001acc60 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ae2ff : jne 0x200001ae346 ; adc al, byte ptr [rax] ; call rax
0x00000200001b235d : jne 0x200001b236f ; lea rax, qword ptr [rip + 0x1476ba] ; ret
0x00000200001b2c21 : jne 0x200001b2bc0 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001b4470 : jne 0x200001b44cc ; mov r8b, dl ; jmp 0x200001b44c2
0x00000200001b46e6 : jne 0x200001b46fb ; lea rcx, qword ptr [rsp + 0x20] ; call 0x200000c09d9
0x00000200001b471f : jne 0x200001b4718 ; add rsp, 0x28 ; ret
0x00000200001b9483 : jne 0x200001b948c ; xor al, al ; ret
0x00000200001b9d40 : jne 0x200001b9d49 ; xor al, al ; ret
0x00000200001bc693 : jne 0x200001bc65c ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001bc7ba : jne 0x200001bc78c ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001bebf2 : jne 0x200001bebc2 ; ret
0x00000200001bfc16 : jne 0x200001bfc2a ; mov qword ptr [rcx], rdx ; ret
0x00000200001bfeb2 : jne 0x200001bfec1 ; mov eax, 1 ; ret
0x00000200001bff22 : jne 0x200001bff37 ; mov eax, dword ptr [rip + 0x1be122] ; ret
0x00000200001c118e : jne 0x200001c1199 ; mov dword ptr [r8], eax ; ret
0x00000200001c285c : jne 0x200001c2854 ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x00000200001c344a : jne 0x200001c346e ; mov byte ptr [rbx + 0x38], 2 ; call r8
0x00000200001c4aa2 : jne 0x200001c4a7d ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001c67be : jne 0x200001c6798 ; jmp 0x200001c67f4
0x00000200001c6af2 : jne 0x200001c6b05 ; lea edx, dword ptr [rax + 0xf] ; mov cr8, rdx ; jmp 0x200001c6b19
0x00000200001c9757 : jne 0x200001c9765 ; mov eax, 1 ; ret
0x00000200001c9dd7 : jne 0x200001c9e2d ; adc byte ptr [rax], al ; call qword ptr [rax]
0x00000200001cb940 : jne 0x200001cb92f ; xor eax, eax ; ret
0x00000200001cd970 : jne 0x200001cd981 ; mov rcx, rsi ; call 0x200004c9c57
0x00000200001cda36 : jne 0x200001cda47 ; mov rcx, rsi ; call 0x200004c9c57
0x00000200001cdfe4 : jne 0x200001cdfdd ; mov qword ptr [r8], rax ; ret
0x00000200001d0667 : jne 0x200001d0676 ; mov eax, 1 ; ret
0x00000200001d1c32 : jne 0x200001d1c3a ; mov al, 1 ; ret
0x00000200001d37ff : jne 0x200001d37f6 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001da387 : jne 0x200001da367 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001da35d : jne 0x200001da368 ; mov eax, r10d ; jmp 0x200001da38f
0x00000200001dad86 : jne 0x200001dad51 ; mov rax, r8 ; ret
0x00000200001db359 : jne 0x200001db33c ; xor eax, eax ; ret
0x00000200001de972 : jne 0x200001de97a ; xor eax, eax ; ret
0x00000200001df466 : jne 0x200001df45f ; mov rax, r10 ; ret
0x00000200001df466 : jne 0x200001df460 ; mov rax, r10 ; ret
0x00000200001e21ac : jne 0x200001e21be ; mov byte ptr [rax + 0xf0], 1 ; ret
0x00000200001e3189 : jne 0x200001e3164 ; xor r9d, r9d ; mov eax, r9d ; ret
0x00000200001e349a : jne 0x200001e348a ; shr eax, 0x18 ; ret
0x00000200001e3ba7 : jne 0x200001e3b97 ; ret
0x00000200001e43fb : jne 0x200001e43b2 ; mov eax, r8d ; ret
0x00000200001ea14e : jne 0x200001ea157 ; xor eax, eax ; ret
0x00000200001ef308 : jne 0x200001ef318 ; mov ecx, 1 ; mov al, cl ; ret
0x00000200001ef53c : jne 0x200001ef545 ; xor eax, eax ; ret
0x00000200001f0ab5 : jne 0x200001f0ac8 ; mov rax, qword ptr [r8 + 0x430] ; ret
0x00000200001f0efe : jne 0x200001f0eec ; xor al, al ; ret
0x00000200001f0ee3 : jne 0x200001f0eff ; mov al, 1 ; ret
0x00000200001f0f08 : jne 0x200001f0f1b ; cmp qword ptr [rcx], 0 ; setne al ; ret
0x00000200001f2ea7 : jne 0x200001f2eb6 ; mov eax, 0xc000000d ; ret
0x00000200001f43b2 : jne 0x200001f43c5 ; mov dword ptr [r10], 0xffffffff ; ret
0x00000200001f4491 : jne 0x200001f4452 ; ret
0x00000200001f4f79 : jne 0x200001f4f9d ; inc dword ptr [rcx + 0x24c] ; ret
0x00000200001f5052 : jne 0x200001f504d ; mov rax, rcx ; ret
0x00000200001f5091 : jne 0x200001f5089 ; ret
0x00000200001f648b : jne 0x200001f649a ; mov eax, 1 ; ret
0x00000200001fbdd2 : jne 0x200001fbdb5 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001fbe07 : jne 0x200001fbdf1 ; ret
0x0000020000202d7c : jne 0x20000202d8e ; and dword ptr [rcx + 0xaa8], 0xfffffffe ; ret
0x0000020000206717 : jne 0x20000206702 ; ret
0x0000020000207f18 : jne 0x20000207ef9 ; test rdx, rdx ; cmovne rax, rdx ; jmp 0x20000207f67
0x000002000020caaf : jne 0x2000020ca9a ; mov al, 1 ; ret
0x000002000020e498 : jne 0x2000020e4a3 ; mov byte ptr [rdx + 2], cl ; ret
0x000002000020ec85 : jne 0x2000020ec61 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200002157a8 : jne 0x2000021577f ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200002160e6 : jne 0x200002160cb ; mov eax, 1 ; ret
0x00000200002160bd : jne 0x200002160cd ; cmp rdx, r8 ; jae 0x200002160f1 ; xor eax, eax ; ret
0x00000200002168fc : jne 0x20000216909 ; movzx eax, word ptr [rcx + 0x28] ; ret
0x0000020000216a1f : jne 0x20000216ab7 ; mov al, r11b ; ret
0x000002000021a0b8 : jne 0x2000021a0b6 ; ret
0x0000020000221cf1 : jne 0x20000221ce1 ; mov rax, rdx ; jmp 0x20000221cfe
0x000002000022242e : jne 0x2000022241e ; mov rax, rdx ; jmp 0x2000022243b
0x0000020000222744 : jne 0x20000222734 ; mov rax, rdx ; jmp 0x20000222751
0x000002000022298d : jne 0x2000022297d ; mov rax, rdx ; jmp 0x2000022299a
0x0000020000222af8 : jne 0x20000222aed ; mov rsi, qword ptr [rbp + 0x38] ; mov rax, rdx ; jmp 0x20000222b0d
0x0000020000222afc : jne 0x20000222b3a ; mov rax, rdx ; jmp 0x20000222b09
0x0000020000222d99 : jne 0x20000222d89 ; mov rax, rdx ; jmp 0x20000222da6
0x00000200002230cf : jne 0x200002230bf ; mov rax, rdx ; jmp 0x200002230dc
0x00000200002231ea : jne 0x200002231da ; mov rax, rdx ; jmp 0x20000223260
0x0000020000223364 : jne 0x20000223354 ; mov rax, rdx ; jmp 0x20000223371
0x000002000022348c : jne 0x2000022347c ; mov rax, rdx ; jmp 0x20000223499
0x0000020000224301 : jne 0x200002242f1 ; mov rax, rdx ; jmp 0x2000022430e
0x0000020000224da2 : jne 0x20000224d96 ; mov rsi, qword ptr [rbp + 0x38] ; mov rax, rdx ; jmp 0x20000224db7
0x0000020000224da6 : jne 0x20000224de4 ; mov rax, rdx ; jmp 0x20000224db3
0x0000020000225794 : jne 0x20000225787 ; mov rax, rdx ; jmp 0x200002257a1
0x0000020000225a5d : jne 0x20000225a50 ; mov rax, rdx ; jmp 0x20000225a73
0x0000020000225f21 : jne 0x20000225f5f ; jmp 0x200002221d5
0x0000020000226034 : jne 0x20000226024 ; mov rax, rdx ; jmp 0x20000226041
0x0000020000226bee : jne 0x20000226bde ; mov rax, rdx ; jmp 0x20000226bfb
0x0000020000226f0a : jne 0x20000226efa ; mov rax, rdx ; jmp 0x20000226f17
0x0000020000227e68 : jne 0x20000227e5d ; mov rsi, qword ptr [rbp + 0x38] ; mov rax, rdx ; jmp 0x20000227e7d
0x0000020000227e6c : jne 0x20000227eaa ; mov rax, rdx ; jmp 0x20000227e79
0x0000020000229dfb : jne 0x20000229deb ; mov rax, rdx ; jmp 0x20000229e08
0x000002000022a59a : jne 0x2000022a58d ; mov esi, dword ptr [rbp + 0x68] ; mov rax, rdx ; jmp 0x2000022a5ad
0x000002000022a59d : jne 0x2000022a60b ; mov rax, rdx ; jmp 0x2000022a5aa
0x000002000022a7e3 : jne 0x2000022a7d4 ; mov rax, rdx ; jmp 0x2000022a7f0
0x000002000022b0ef : jne 0x2000022b0e2 ; mov rax, rdx ; jmp 0x2000022b0fc
0x000002000022b230 : jne 0x2000022b223 ; mov rax, rdx ; jmp 0x2000022b23d
0x000002000022b366 : jne 0x2000022b359 ; mov rax, rdx ; jmp 0x2000022b37c
0x000002000022b971 : jne 0x2000022b961 ; mov rax, rdx ; jmp 0x2000022b97e
0x000002000022c160 : jne 0x2000022c150 ; mov rax, rdx ; jmp 0x2000022c16d
0x000002000022df73 : jne 0x2000022df68 ; mov rbx, qword ptr [rsp + 0x78] ; mov rax, rdx ; jmp 0x2000022df8a
0x000002000022e9e8 : jne 0x2000022e9dd ; mov r11, qword ptr [rsp + 0x40] ; mov rax, rdx ; jmp 0x2000022e9ff
0x000002000022f2a1 : jne 0x2000022f294 ; mov rax, rdx ; jmp 0x2000022f2ae
0x000002000022f51a : jne 0x2000022f50d ; mov rax, rdx ; jmp 0x2000022f541
0x0000020000230488 : jne 0x20000230479 ; mov rax, rdx ; jmp 0x20000230495
0x000002000039f3f4 : jne 0x2000039f3f9 ; ret
0x00000200003a26e9 : jne 0x200003a26db ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003ae44c : jne 0x200003ae44e ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003ba700 : jne 0x200003ba705 ; ret
0x00000200003bb703 : jne 0x200003bb708 ; ret
0x00000200003bb72f : jne 0x200003bb734 ; ret
0x00000200003bb76b : jne 0x200003bb770 ; ret
0x00000200003bd5b5 : jne 0x200003bd5c6 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200003be27f : jne 0x200003be290 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200003be3af : jne 0x200003be39c ; ret
0x00000200003be3c9 : jne 0x200003be3c8 ; mov eax, 0x2000000 ; ret
0x00000200003be3ba : jne 0x200003be3d8 ; mov eax, 0x8000000 ; ret
0x00000200003beae6 : jne 0x200003beaf7 ; mov r9b, 1 ; mov al, r9b ; ret
0x00000200003beb50 : jne 0x200003beb5f ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003c4d18 : jne 0x200003c4d27 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003c6d0f : jne 0x200003c6820 ; xor eax, eax ; jmp 0x200003c6ce4
0x00000200003c9acc : jne 0x200003c9abd ; jmp 0x200003c9a95
0x00000200003cbb23 : jne 0x200003cbb32 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003cefa7 : jne 0x200003cef76 ; mov r10b, 1 ; jmp 0x200003cef76
0x00000200003d4de9 : jne 0x200003d4db7 ; call 0x20000671155
0x00000200003df52b : jne 0x200003df539 ; ret
0x00000200003df57d : jne 0x200003df58a ; add rsp, 0x28 ; ret
0x00000200003e0b67 : jne 0x200003e0b7a ; lea rax, qword ptr [rip - 0xe8d50] ; ret
0x00000200003e0f64 : jne 0x200003e0f87 ; mov eax, r10d ; ret
0x00000200003e0f64 : jne 0x200003e0f88 ; mov eax, r10d ; ret
0x00000200003e33cf : jne 0x200003e33de ; mov eax, edx ; jmp 0x200003e3391
0x00000200003e933a : jne 0x200003e925a ; xor eax, eax ; pop rbx ; ret
0x00000200003e971b : jne 0x200003e9728 ; add rsp, 0x28 ; ret
0x00000200003eec4e : jne 0x200003eec42 ; ret
0x00000200003efff0 : jne 0x200003f0001 ; xor al, al ; add rsp, 0x28 ; ret
0x00000200003f0d2e : jne 0x200003f0d14 ; ret
0x00000200003f184e : jne 0x200003f185b ; xor cl, cl ; mov al, cl ; ret
0x00000200003f39af : jne 0x200003f3974 ; ret
0x00000200003f39a9 : jne 0x200003f397a ; cmp byte ptr [rcx + 0x4c], 0 ; jne 0x200003f397a ; ret
0x00000200003f7c38 : jne 0x200003f7c37 ; dec dword ptr [rax + 0x3b] ; ret 0x870f
0x00000200003f7bcb : jne 0x200003f7c48 ; ret
0x00000200003f89dc : jne 0x200003f8ac4 ; inc edx ; jmp 0x200003f89c8
0x00000200003fa88c : jne 0x200003fa8a3 ; mov qword ptr [rcx + 0x70], rdx ; xor eax, eax ; ret
0x00000200003fc15e : jne 0x200003fc16f ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200003fc9f6 : jne 0x200003fc9fb ; ret
0x00000200003fd267 : jne 0x200003fd26c ; ret
0x00000200003fe672 : jne 0x200003fe677 ; ret
0x00000200003fe671 : jne 0x200003fe678 ; ret
0x00000200003fe670 : jne 0x200003fe679 ; ret
0x00000200003fe66c : jne 0x200003fe67d ; cmp byte ptr [rcx + 0x4c], r9b ; jne 0x200003fe67d ; ret
0x00000200003fe66b : jne 0x200003fe67e ; cmp byte ptr [rcx + 0x4c], r9b ; jne 0x200003fe67e ; ret
0x00000200003fe978 : jne 0x200003fe967 ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200004002b2 : jne 0x200004002a5 ; ret
0x0000020000401028 : jne 0x20000401030 ; mov al, dl ; ret
0x0000020000401028 : jne 0x20000401031 ; mov al, dl ; ret
0x0000020000403c38 : jne 0x20000403c41 ; xor eax, eax ; ret
0x000002000040446e : jne 0x20000404473 ; ret
0x0000020000404469 : jne 0x20000404487 ; test cl, 0xf8 ; jne 0x20000404478 ; ret
0x000002000040713e : jne 0x20000407147 ; mov al, 1 ; ret
0x000002000040749d : jne 0x20000407425 ; xor al, al ; jmp 0x2000040746b
0x0000020000408163 : jne 0x20000408170 ; add rsp, 0x28 ; ret
0x000002000040916e : jne 0x2000040913c ; inc r10d ; jmp 0x20000409146
0x0000020000409f57 : jne 0x20000409f5d ; ret
0x000002000040bcc0 : jne 0x2000040bcd0 ; mov r10d, r9d ; mov eax, r10d ; ret
0x000002000040bcc0 : jne 0x2000040bcd1 ; mov r10d, r9d ; mov eax, r10d ; ret
0x000002000040db41 : jne 0x2000040db68 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x000002000040db40 : jne 0x2000040db69 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x000002000040fe99 : jne 0x2000040fe4c ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000414ce7 : jne 0x20000414cda ; ret
0x0000020000416b66 : jne 0x20000416bcf ; mov ecx, eax ; call 0x200000407f7
0x0000020000418a18 : jne 0x20000418a27 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004193e3 : jne 0x200004193ce ; xor eax, eax ; ret
0x0000020000419b89 : jne 0x20000419b9b ; mov rcx, r13 ; call 0x2000004200c
0x0000020000419de8 : jne 0x20000419df1 ; xor eax, eax ; ret
0x000002000041b27d : jne 0x2000041b290 ; call 0x20000042aa5
0x000002000041b3c4 : jne 0x2000041b3d3 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041b6db : jne 0x2000041b6d1 ; ret
0x000002000041d7e0 : jne 0x2000041d7ef ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041e262 : jne 0x2000041e26c ; mov eax, r10d ; ret
0x000002000041e262 : jne 0x2000041e26d ; mov eax, r10d ; ret
0x000002000041e8f8 : jne 0x2000041e90b ; xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041f873 : jne 0x2000041f880 ; add rsp, 0x58 ; ret
0x0000020000420dca : jne 0x20000420d79 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000423d0f : jne 0x20000423d18 ; xor eax, eax ; ret
0x0000020000423d31 : jne 0x20000423d25 ; lea eax, dword ptr [r8 + 0x48] ; ret
0x0000020000427edc : jne 0x20000427eef ; xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004296a0 : jne 0x200004296b4 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000429d70 : jne 0x20000429d50 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000042a9cb : jne 0x2000042a9f6 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000434894 : jne 0x200004348a3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000438023 : jne 0x20000438015 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000059de68 : jne 0x20000439cf8 ; call 0x200001c1275
0x000002000043ebcc : jne 0x2000043ebdb ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043ec21 : jne 0x2000043ec30 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043eea6 : jne 0x2000043eebb ; xor eax, eax ; ret
0x0000020000440319 : jne 0x20000440311 ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000442847 : jne 0x20000442856 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000044b20d : jne 0x2000044b216 ; xor eax, eax ; ret
0x000002000044cb2e : jne 0x2000044cb3f ; cmp qword ptr [rcx + 0x30], r8 ; jne 0x2000044cb45 ; ret
0x000002000044cb34 : jne 0x2000044cb3f ; ret
0x000002000044cfbf : jne 0x2000044cfce ; add rsp, 0x20 ; pop rbx ; ret
0x000002000044d2da : jne 0x2000044d2c3 ; xor eax, eax ; ret
0x000002000044ee5d : jne 0x2000044ee4d ; inc rax ; add rsp, 0x38 ; ret
0x0000020000450eac : jne 0x20000450eed ; xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x000002000045a5d3 : jne 0x2000045a5dd ; jmp 0x200004595b5
0x00000200004609b1 : jne 0x200004609ba ; ret
0x00000200004632ff : jne 0x2000046330a ; lea eax, dword ptr [rcx + 1] ; ret
0x0000020000463308 : jne 0x20000463313 ; lea eax, dword ptr [rcx + 2] ; ret
0x000002000046331b : jne 0x20000463332 ; lea eax, dword ptr [rcx + 4] ; ret
0x0000020000464497 : jne 0x2000046445c ; call r10
0x0000020000466854 : jne 0x20000466875 ; mov eax, edi ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000046760c : jne 0x2000046761b ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000467da1 : jne 0x20000467daf ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x0000020000467da1 : jne 0x20000467db0 ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x00000200004694fd : jne 0x2000046950e ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000469973 : jne 0x20000469984 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000469b79 : jne 0x20000469b4a ; mov dword ptr [rbp - 0x18], r11d ; call r10
0x000002000046c974 : jne 0x2000046c979 ; ret
0x000002000046c96f : jne 0x2000046c988 ; test cl, 0x10 ; jne 0x2000046c97e ; ret
0x0000020000470334 : jne 0x20000470347 ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000471985 : jne 0x20000471990 ; mov al, r9b ; ret
0x00000200004736a6 : jne 0x2000047369b ; mov eax, 0xc000000d ; ret
0x0000020000473692 : jne 0x200004736a0 ; xor eax, eax ; ret
0x00000200004763fa : jne 0x2000047640d ; mov qword ptr [rcx], rdx ; mov qword ptr [rdx + 8], rcx ; ret
0x000002000047897b : jne 0x2000047898e ; lea rax, qword ptr [rcx + 0x508] ; ret
0x0000020000478a8c : jne 0x20000478a7f ; ret
0x0000020000479075 : jne 0x2000047907a ; ret
0x0000020000479091 : jne 0x20000479096 ; ret
0x00000200004790da : jne 0x20000479121 ; ret
0x000002000047cd9c : jne 0x2000047cda5 ; xor eax, eax ; ret
0x000002000047e7e5 : jne 0x2000047e7d1 ; xor eax, eax ; ret
0x000002000047e7db : jne 0x2000047e7ea ; mov eax, 1 ; ret
0x0000020000480aa6 : jne 0x20000480a9a ; mov al, 1 ; add rsp, 0x38 ; ret
0x00000200004847aa : jne 0x200004847b3 ; xor eax, eax ; ret
0x00000200004848db : jne 0x200004848e4 ; mov al, 1 ; ret
0x00000200004858e1 : jne 0x200004858d7 ; ret
0x0000020000485e4c : jne 0x20000485e55 ; xor al, al ; ret
0x00000200004860bb : jne 0x200004860ca ; mov dword ptr [r9], edx ; mov al, 1 ; ret
0x000002000048758a : jne 0x20000487599 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004875c3 : jne 0x200004875cc ; xor eax, eax ; ret
0x0000020000487897 : jne 0x200004878a7 ; mov eax, dword ptr [rcx + 0x60] ; ret
0x0000020000487b23 : jne 0x20000487b10 ; call 0x20000443dc4
0x0000020000487b8f : jne 0x20000487b19 ; call 0x20000443dc4
0x000002000048827a : jne 0x2000048827f ; ret
0x00000200004894cb : jne 0x200004894bb ; ret
0x000002000048acd7 : jne 0x2000048acf0 ; ret
0x000002000048c3b6 : jne 0x2000048c3bf ; mov al, 1 ; ret
0x000002000048c3b1 : jne 0x2000048c3c4 ; cmp r9d, edx ; jne 0x2000048c3c4 ; mov al, 1 ; ret
0x000002000048ebc8 : jne 0x2000048ebdb ; mov eax, ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004909c7 : jne 0x200004909e6 ; ret
0x000002000049654e : jne 0x20000496542 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000496b65 : jne 0x20000496ce2 ; call 0x200000b8829
0x0000020000499150 : jne 0x2000049915f ; call 0x200000bb1b5
0x000002000049a0b1 : jne 0x2000049a0c7 ; call 0x200000c23c5
0x000002000049a5c1 : jne 0x2000049a5de ; mov rcx, r13 ; call 0x200000c23c8
0x000002000049a5c0 : jne 0x2000049a5df ; mov rcx, r13 ; call 0x200000c23c9
0x000002000049a8c5 : jne 0x2000049a8d7 ; mov rcx, r13 ; call 0x200000c23c8
0x000002000049c545 : jne 0x2000049c56e ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000049d552 : jne 0x2000049d585 ; mov rcx, rbx ; call 0x200000c1b38
0x000002000049f96d : jne 0x2000049f9f2 ; lea rcx, qword ptr [rbx + 0x30] ; call 0x200000c1b39
0x000002000049fdac : jne 0x2000049fdbd ; xor al, al ; add rsp, 0x28 ; ret
0x00000200004a00a1 : jne 0x200004a00ec ; lea rcx, qword ptr [rbx + 0x30] ; call 0x200000c1b39
0x00000200004a2616 : jne 0x200004a2464 ; call 0x200000d2309
0x00000200004a2fa9 : jne 0x200004a2e0e ; call 0x200000d2309
0x00000200004a341a : jne 0x200004a3426 ; call 0x200000d2305
0x00000200004a4e6e : jne 0x200004a4e7a ; call 0x200000d2305
0x00000200004a5746 : jne 0x200004a5535 ; call 0x200000d2309
0x00000200004aca13 : jne 0x200004ac6c2 ; call 0x200000d2309
0x00000200004b0e8d : jne 0x200004b0917 ; call 0x200000d2309
0x00000200004b9bdd : jne 0x200004b9c01 ; add dh, al ; add byte ptr [rax], al ; jmp 0x200004b9baf
0x00000200004ba4f4 : jne 0x200004ba507 ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ba791 : jne 0x200004ba7a4 ; jmp 0x200004ba7a9
0x00000200004bfb9a : jne 0x200004bfba9 ; add rsp, 0x70 ; pop rbx ; ret
0x00000200004c01a1 : jne 0x200004c0191 ; add rsp, 0x28 ; ret
0x00000200004c1c07 : jne 0x200004c1c67 ; ret 0x48ff
0x00000200004c1c65 : jne 0x200004c1ca5 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c2d33 : jne 0x200004c2d46 ; lea r8, qword ptr [rax - 0x20] ; mov rax, r8 ; ret
0x00000200004c3bd0 : jne 0x200004c3c2d ; call 0x200000eb5b5
0x00000200004c638c : jne 0x200004c63d4 ; mov qword ptr [r9], r10 ; ret
0x00000200004ca39f : jne 0x200004ca3a4 ; ret
0x00000200004cadf7 : jne 0x200004cae46 ; mov cl, r11b ; call 0x200000eebec
0x00000200004cc57c : jne 0x200004cc572 ; ret
0x00000200004cc590 : jne 0x200004cc59d ; add rsp, 0x28 ; ret
0x00000200004d1175 : jne 0x200004d113a ; call r10
0x00000200004d37d4 : jne 0x200004d37d4 ; mov eax, 1 ; ret
0x00000200004d6a36 : jne 0x200004d6a3f ; xor eax, eax ; ret
0x00000200004d6a8e : jne 0x200004d6a97 ; xor eax, eax ; ret
0x00000200004dbbda : jne 0x200004dbbd4 ; xor al, al ; ret
0x00000200004e0024 : jne 0x200004dfff1 ; ret
0x00000200004e4ea2 : jne 0x200004e4eab ; mov al, 1 ; ret
0x00000200004ea4cc : jne 0x200004ea4e7 ; lea rax, qword ptr [rip + 0x628eb] ; ret
0x00000200004eaa40 : jne 0x200004eaa12 ; call 0x20000117681
0x00000200004eef7d : jne 0x200004eef46 ; fdivp st(7) ; add rsp, 0x28 ; ret
0x00000200004f7430 : jne 0x200004f741d ; mov eax, 1 ; ret
0x00000200004f7414 : jne 0x200004f741d ; xor eax, eax ; ret
0x00000200004fa069 : jne 0x200004fa06e ; ret
0x00000200004fa07d : jne 0x200004fa082 ; ret
0x00000200004fa5c4 : jne 0x200004fa59f ; jmp 0x200004fa461
0x00000200004fc1b6 : jne 0x200004fc1c7 ; mov r8, rdx ; mov rax, r8 ; ret
0x00000200005017b9 : jne 0x200005017c8 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005025ed : jne 0x200005025d9 ; inc dword ptr [rbp + rcx*4 + 0x5b] ; add dword ptr [rcx + 0x3b], eax ; ret
0x00000200005035cb : jne 0x200005035ca ; mov byte ptr [rip - 0x22e18b], 0 ; ret
0x0000020000503606 : jne 0x20000503613 ; add rsp, 0x38 ; ret
0x0000020000503707 : jne 0x200005036d7 ; ret
0x0000020000503c47 : jne 0x20000503c58 ; mov eax, dword ptr [rax + 0x1f10] ; ret
0x000002000050bdfc : jne 0x2000050bc3c ; jmp 0x2000050bdce
0x000002000051247a : jne 0x2000051247f ; ret
0x0000020000512d67 : jne 0x20000512d41 ; ret 0x85ff
0x0000020000515231 : jne 0x200005151d8 ; call 0x20000140545
0x0000020000517ca7 : jne 0x2000051791c ; call 0x20000443ed8
0x0000020000517e7f : jne 0x20000517e2e ; call 0x20000140c45
0x000002000051d19c : jne 0x2000051d1ab ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051d647 : jne 0x2000051d669 ; ret
0x000002000051e3bd : jne 0x2000051e3b7 ; lock inc dword ptr [rax + 0x10] ; ret
0x0000020000520513 : jne 0x2000052050b ; ret
0x0000020000524147 : jne 0x200005240fe ; ret 0x45ff
0x00000200005248cd : jne 0x200005248d8 ; mov rax, r8 ; ret
0x0000020000529f51 : jne 0x20000529f64 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000052b0c2 : jne 0x2000052b0c7 ; ret
0x000002000052eb13 : jne 0x2000052ebad ; ret
0x000002000053056b : jne 0x20000530566 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000053528c : jne 0x2000053529b ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000538b22 : jne 0x20000538afc ; add rsp, 0x20 ; pop rbx ; ret
0x000002000053d002 : jne 0x2000053d011 ; mov eax, 1 ; ret
0x000002000053d63e : jne 0x2000053d651 ; mov al, r8b ; add rsp, 0x28 ; ret
0x000002000053ea00 : jne 0x2000053ea0d ; add rsp, 0x58 ; ret
0x00000200005643f8 : jne 0x200005643e5 ; dec dword ptr [rax - 0x75] ; ret
0x00000200003d49d0 : jne 0x2000056b10b ; inc edx ; jmp 0x200003d49c3
0x00000200003f141c : jne 0x20000576214 ; ret
0x0000020000401018 : jne 0x2000057b250 ; ret
0x000002000040bc30 : jne 0x2000057fb57 ; mov eax, r9d ; ret
0x00000200004eb021 : jne 0x20000587727 ; ret
0x0000020000500706 : jne 0x2000058d85d ; mov r8b, r10b ; jmp 0x200005006c3
0x000002000051552a : jne 0x20000597487 ; call 0x20000141ac9
0x0000020000420a40 : jne 0x200005978b4 ; xor eax, eax ; ret
0x000002000059c7a8 : jne 0x2000059c7c0 ; mov edx, r14d ; mov rcx, rbx ; call rax
0x00000200004379b9 : jne 0x2000059d914 ; ret
0x00000200005ab910 : jne 0x200005ab925 ; mov ecx, dword ptr [r10] ; and ecx, dword ptr [rax] ; jmp 0x20000467b5f
0x00000200005afeb5 : jne 0x200005afec1 ; call 0x200001dd669
0x000002000047a0b2 : jne 0x200005b2299 ; inc edx ; jmp 0x2000047a0a5
0x000002000048c381 : jne 0x200005b795c ; ret
0x00000200004c40d8 : jne 0x200005c535d ; call 0x200000ebe29
0x00000200005cb648 : jne 0x200005cb634 ; jmp 0x200005178f8
0x00000200005207ca : jne 0x200005cd588 ; ret
0x00000200004ea554 : jne 0x200005cd7a6 ; ret
0x0000020000525df8 : jne 0x200005cf595 ; xor al, al ; ret
0x000002000054241f : jne 0x200005d8c46 ; ret
0x00000200005dbeb6 : jne 0x200005dbec5 ; mov eax, 0xc00000f1 ; ret
0x00000200005f16c3 : jne 0x200005f16d2 ; mov eax, 0xc000000d ; ret
0x00000200005f1e95 : jne 0x200005f1ea0 ; lea eax, dword ptr [rdx + 1] ; ret
0x00000200005fc4e6 : jne 0x200005fc4ef ; xor eax, eax ; ret
0x00000200005fd1a5 : jne 0x200005fd217 ; mov eax, 0x102 ; ret
0x00000200005ff8c2 : jne 0x200005ff8d6 ; mov ebx, 0xc000009a ; jmp 0x200005ff895
0x00000200005ffcf7 : jne 0x200005ffce9 ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000604b66 : jne 0x20000604b5f ; add rsp, 0x20 ; pop rbx ; ret
0x000002000060d197 : jne 0x2000060d1d9 ; ret 0xebff
0x000002000061ec92 : jne 0x2000061ec83 ; xor eax, eax ; ret
0x000002000062a9f9 : jne 0x2000062a9b0 ; inc rdx ; jmp 0x2000062aa34
0x000002000062ace8 : jne 0x2000062acf3 ; inc rdx ; jmp 0x2000062ad06
0x000002000062bef1 : jne 0x2000062bec4 ; add rsp, 0x38 ; ret
0x000002000062e12a : jne 0x2000062e133 ; mov al, 1 ; ret
0x000002000062e3ec : jne 0x2000062e3c6 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000063230b : jne 0x2000063231a ; mov eax, 0xc000000d ; ret
0x000002000063231e : jne 0x2000063232d ; mov eax, 0xc00000bb ; ret
0x0000020000632d59 : jne 0x20000632d48 ; ret
0x0000020000633a1b : jne 0x20000633a2a ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006344f8 : jne 0x20000634529 ; mov eax, 0xc ; ret
0x000002000063615c : jne 0x20000636172 ; mov rcx, rax ; call 0x200000c23c7
0x0000020000640456 : jne 0x20000640433 ; ret
0x0000020000643a2b : jne 0x20000643a34 ; xor al, al ; ret
0x0000020000644cb4 : jne 0x20000644cc3 ; mov eax, 1 ; ret
0x0000020000646a56 : jne 0x20000646a50 ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000646a56 : jne 0x20000646a51 ; mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000647d46 : jne 0x20000647d4f ; xor al, al ; ret
0x000002000064a4ff : jne 0x2000064a57e ; jp 0x2000064a553 ; mov ecx, ebx ; call 0x200001f6800
0x000002000064a500 : jne 0x2000064a583 ; mov rcx, rbx ; call 0x200001f67ff
0x000002000064b5f8 : jne 0x2000064b603 ; mov qword ptr [rdx], rax ; ret
0x000002000064b60e : jne 0x2000064b61d ; mov eax, 0xc00000bb ; ret
0x000002000064b632 : jne 0x2000064b641 ; mov eax, 0xc00000bb ; ret
0x000002000064f518 : jne 0x2000064f526 ; mov eax, 1 ; ret
0x000002000064f65b : jne 0x2000064f664 ; mov al, 1 ; ret
0x000002000065862e : jne 0x20000658608 ; xor eax, eax ; ret
0x000002000065a140 : jne 0x2000065a14d ; lea eax, dword ptr [r9 + 0xb] ; ret
0x000002000065a14a : jne 0x2000065a157 ; lea eax, dword ptr [r8 + 0x14] ; ret
0x000002000065d303 : jne 0x2000065d2e3 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000662eee : jne 0x20000662ed8 ; mov rax, rcx ; ret
0x00000200006649c2 : jne 0x200006649bb ; jmp 0x200006649d0
0x0000020000668517 : jne 0x20000668506 ; add rsp, 0x28 ; ret
0x000002000067613d : jne 0x20000676128 ; mov eax, r8d ; ret
0x000002000067653c : jne 0x2000067654a ; xor eax, eax ; ret
0x000002000067dd4f : jne 0x2000067dd5e ; sub ecx, 0x10 ; jns 0x2000067dd3a ; ret
0x000002000067dd8b : jne 0x2000067dd9a ; sub ecx, 0x10 ; jns 0x2000067dd76 ; ret
0x000002000067e326 : jne 0x2000067e335 ; mov eax, 0xc000000d ; ret
0x000002000067e3be : jne 0x2000067e3a1 ; not r9d ; mov eax, r9d ; ret
0x000002000067eb03 : jne 0x2000067eb0c ; xor eax, eax ; ret
0x0000020000683a5d : jne 0x20000683a20 ; jmp 0x20000683a6b
0x00000200006857c7 : jne 0x200006857b9 ; test bl, bl ; jns 0x200006857ea ; jmp 0x200006857e2
0x0000020000685853 : jne 0x20000685845 ; test bl, bl ; jns 0x20000685893 ; jmp 0x2000068586e
0x000002000068626f : jne 0x2000068623b ; ret
0x000002000068bb53 : jne 0x2000068bb60 ; mov r8b, 1 ; mov al, r8b ; ret
0x000002000068bbe0 : jne 0x2000068bb96 ; mov al, 1 ; ret
0x000002000068bb90 : jne 0x2000068bbe6 ; xor al, al ; ret
0x000002000068bbb7 : jne 0x2000068bbeb ; and r8b, 1 ; mov al, r8b ; ret
0x000002000068eb1d : jne 0x2000068eb10 ; mov eax, 0xc0000225 ; ret
0x000002000069400a : jne 0x20000693fcf ; call r10
0x00000200006940ce : jne 0x20000694093 ; call r10
0x000002000069792c : jne 0x20000697939 ; add rsp, 0x28 ; ret
0x000002000069bca3 : jne 0x2000069bc53 ; xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200006ab307 : jne 0x200006ab2f0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006ab75c : jne 0x200006ab752 ; ret
0x00000200006abae7 : jne 0x200006abaa0 ; ret
0x00000200006b0632 : jne 0x200006b271a ; ret
0x00000200006b4cdf : jne 0x200006b4d1d ; ret 0x45ff
0x00000200006b5369 : jne 0x200006b536e ; ret
0x00000200006b53f1 : jne 0x200006b5403 ; sub r9, r8 ; mov qword ptr [rcx + 8], r9 ; ret
0x00000200006b6e68 : jne 0x200006b6e42 ; ret
0x00000200006b72bb : jne 0x200006b72aa ; xor al, al ; ret
0x00000200006b7307 : jne 0x200006b72f7 ; xor al, al ; ret
0x00000200006b78df : jne 0x200006b78f0 ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200006b9a3f : jne 0x200006b9a89 ; mov eax, edi ; call rax
0x00000200006bac22 : jne 0x200006bac2b ; xor eax, eax ; ret
0x00000200006bbbe5 : jne 0x200006bbbdc ; xor eax, eax ; ret
0x00000200006bf1ab : jne 0x200006bf1b4 ; xor eax, eax ; ret
0x00000200006bf621 : jne 0x200006bf633 ; mov rax, qword ptr [rdx + 0x18] ; mov qword ptr [rcx], rax ; ret
0x00000200006bfef6 : jne 0x200006bfee3 ; ret
0x00000200006c02c6 : jne 0x200006c02f9 ; bts dword ptr [r8 + 0x20], 0x18 ; ret
0x00000200006c0b68 : jne 0x200006c0bbb ; ret
0x00000200006c0de1 : jne 0x200006c0df0 ; mov eax, 0xc000042a ; ret
0x00000200006c0e65 : jne 0x200006c0e74 ; mov eax, 0xc000042a ; ret
0x00000200006c1cba : jne 0x200006c1cb0 ; ret
0x00000200006c2438 : jne 0x200006c2434 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006c297a : jne 0x200006c296b ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006c33f0 : jne 0x200006c3403 ; movups xmm0, xmmword ptr [rcx] ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x00000200006c6341 : jne 0x200006c633d ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006c6fe7 : jne 0x200006c6ff6 ; lock inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x00000200006c7ca8 : jne 0x200006c7c78 ; xor eax, eax ; ret
0x00000200006c85de : jne 0x200006c85e6 ; xor eax, eax ; ret
0x00000200006c8feb : jne 0x200006c8fe3 ; xor eax, eax ; ret
0x00000200006cbf46 : jne 0x200006cbf40 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006cbf83 : jne 0x200006cbf92 ; mov eax, 1 ; ret
0x00000200006cd08f : jne 0x200006cd037 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006d2e58 : jne 0x200006d2e67 ; mov eax, 0xc00000bb ; ret
0x00000200006d5f69 : jne 0x200006d5f58 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006d7c93 : jne 0x200006d7ca2 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006dc3c7 : jne 0x200006dc387 ; mov eax, edx ; add rsp, 0x28 ; ret
0x000002000072c612 : jne 0x2000072c602 ; mov rax, rdx ; jmp 0x2000072c67a
0x000002000072c9b5 : jne 0x2000072c9a5 ; mov rax, rdx ; jmp 0x2000072c9c2
0x00000200007311e1 : jne 0x200007311d2 ; mov rax, rdx ; jmp 0x200007311ee
0x0000020000731342 : jne 0x20000731331 ; mov rax, rdx ; jmp 0x2000073134f
0x0000020000731f22 : jne 0x20000731f14 ; mov rax, rdx ; jmp 0x20000731f2f
0x0000020000732985 : jne 0x20000732975 ; mov rax, rdx ; jmp 0x20000732992
0x000002000073359c : jne 0x20000733591 ; mov rax, rdx ; jmp 0x200007335a9
0x0000020000733c47 : jne 0x20000733c39 ; mov rax, rdx ; jmp 0x20000733c54
0x0000020000734051 : jne 0x20000734043 ; mov rax, rdx ; jmp 0x2000073405e
0x0000020000734692 : jne 0x20000734683 ; mov rax, rdx ; jmp 0x2000073469f
0x0000020000735293 : jne 0x20000735288 ; mov rax, rdx ; jmp 0x200007352a0
0x0000020000735b58 : jne 0x20000735b49 ; mov rax, rdx ; jmp 0x20000735b65
0x0000020000735f74 : jne 0x20000735efa ; mov rax, rdx ; jmp 0x20000735f81
0x0000020000735f70 : jne 0x20000735f66 ; mov r14, qword ptr [rbp - 0x80] ; mov rax, rdx ; jmp 0x20000735f85
0x00000200007365a2 : jne 0x20000736593 ; mov rax, rdx ; jmp 0x200007365af
0x0000020000737179 : jne 0x2000073716e ; mov rax, rdx ; jmp 0x20000737186
0x00000200007374ac : jne 0x2000073749d ; mov rax, rdx ; jmp 0x200007374b9
0x0000020000737c95 : jne 0x20000737c89 ; mov rax, rdx ; jmp 0x20000737ca2
0x0000020000739818 : jne 0x20000739809 ; mov rax, rdx ; jmp 0x20000739825
0x0000020000739b01 : jne 0x20000739af2 ; mov rax, rdx ; jmp 0x20000739b0e
0x000002000073a792 : jne 0x2000073a782 ; mov rax, rdx ; jmp 0x2000073a79f
0x000002000073ab6c : jne 0x2000073ab60 ; xor r12d, r12d ; mov rax, rdx ; jmp 0x2000073ab7f
0x000002000073b9a0 : jne 0x2000073b993 ; mov rax, rdx ; jmp 0x2000073b9ad
0x000002000073bd03 : jne 0x2000073bcf8 ; lea r15d, dword ptr [rdi + 0x50] ; mov rax, rdx ; jmp 0x2000073bd18
0x000002000073c024 : jne 0x2000073c020 ; and r14d, r15d ; call r12
0x000002000073d932 : jne 0x2000073d924 ; mov rax, rdx ; jmp 0x2000073d93f
0x000002000073e118 : jne 0x2000073e10a ; mov rax, rdx ; jmp 0x2000073e125
0x0000020000745c27 : jne 0x20000745c13 ; xor eax, eax ; ret
0x0000020000774f04 : jne 0x20000745f59 ; xor eax, eax ; ret
0x00000200007492dc : jne 0x200007492d0 ; mov al, 1 ; add rsp, 0x38 ; ret
0x000002000074fb0f : jne 0x2000074fb14 ; ret
0x0000020000752bda : jne 0x20000752bed ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000752c5e : jne 0x20000752c71 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200007543e7 : jne 0x20000754426 ; mov edx, 0x58d48ff ; ret 0xcb6d
0x0000020000755407 : jne 0x200007553d8 ; ret
0x000002000075c056 : jne 0x2000075c04c ; shl edx, 0x18 ; or eax, edx ; ret
0x000002000075c056 : jne 0x2000075c04d ; shl edx, 0x18 ; or eax, edx ; ret
0x000002000075ef45 : jne 0x2000075ef27 ; ret
0x0000020000767dd9 : jne 0x20000767da1 ; dec dword ptr [rbp + 0x23] ; ret
0x000002000076a979 : jne 0x2000076a994 ; lea rax, qword ptr [rip - 0x677aca] ; ret
0x000002000076a98e : jne 0x2000076a9c1 ; lea rax, qword ptr [rip - 0x61c497] ; ret
0x000002000076b4bc : jne 0x2000076b4ad ; add rsp, 0x20 ; pop rbx ; ret
0x000002000076c857 : jne 0x2000076c843 ; ret
0x000002000077f822 : jne 0x2000077f7fe ; sub r11, rax ; mov rax, r11 ; ret
0x000002000003c133 : jno 0x2000003c16c ; xor al, 0 ; call rax
0x00000200000ef770 : jno 0x200000ef730 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x000002000012c88e : jno 0x2000012c891 ; ret 0xbf
0x0000020000149215 : jno 0x2000014921b ; add byte ptr [rax], al ; jmp rdx
0x000002000015a882 : jno 0x2000015a874 ; dec dword ptr [rcx - 0x75] ; ret
0x000002000018d887 : jno 0x2000018d89c ; push rsi ; ret 0x741e
0x00000200001983ab : jno 0x20000198423 ; hlt ; dec dword ptr [rax - 0x75] ; or byte ptr [rax + 0x3b], cl ; ret
0x00000200001a1242 : jno 0x200001a1241 ; inc dword ptr [rcx - 0x75] ; ret
0x00000200001a593b : jno 0x200001a5900 ; jmp 0x200001a593f
0x00000200003e2409 : jno 0x200003e2398 ; ret 0x44f0
0x00000200003ee72b : jno 0x200003ee77c ; ret
0x0000020000410c50 : jno 0x20000410c46 ; dec dword ptr [rbx - 0x6e78f015] ; call qword ptr [rsi]
0x0000020000416176 : jno 0x20000416184 ; mov r15d, dword ptr [rcx + 0x18] ; call 0x200000c23c8
0x0000020000419b8f : jno 0x20000419b17 ; ret 0xfff
0x00000200004230e7 : jno 0x200004230d0 ; and al, 0 ; mov byte ptr [rdx], bl ; jmp 0x200004230b8
0x00000200004291ed : jno 0x2000042917c ; ret
0x000002000049786b : jno 0x200004978ad ; out 0xff, al ; call 0x200000c1b37
0x000002000049d0cb : jno 0x2000049d0d0 ; ret 0x48ff
0x00000200004c1bfb : jno 0x200004c1c5c ; ret 0x48ff
0x00000200004c9b23 : jno 0x200004c9b6d ; ret 0x85ff
0x0000020000527e79 : jno 0x20000527e85 ; ret
0x0000020000538a64 : jno 0x20000538a24 ; dec dword ptr [rax + 0x63] ; ret
0x00000200005c2fdf : jno 0x200005c2fd7 ; dec dword ptr [rbx + rcx*4 + 5] ; ret 0xffdb
0x00000200005ca295 : jno 0x200005ca24d ; lock inc dword ptr [rbp + 0x33] ; inc dword ptr [rcx - 1] ; ret 0x8348
0x00000200005f4e6b : jno 0x200005f4e3d ; ret
0x00000200005f9a6b : jno 0x200005f99f1 ; ret
0x0000020000614f9b : jno 0x20000614f62 ; sar edi, -0x75 ; ret
0x00000200006aab87 : jno 0x200006aabd9 ; ret 0xb9ff
0x00000200006b7017 : jno 0x200006b7020 ; add byte ptr [rcx - 1], al ; ret
0x0000020000746e5b : jno 0x20000746de5 ; ret
0x000002000075eacb : jno 0x2000075eb08 ; ret
0x0000020000406575 : jnp 0x1ff8b8089cd ; ret
0x00000200000b9666 : jnp 0x1ffff2e0c42 ; ret
0x00000200000026f8 : jnp 0x20000002729 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000008b8b : jnp 0x20000008bb3 ; mov rsp, r11 ; pop rbp ; ret
0x000002000001fc22 : jnp 0x2000001fc4a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000029712 : jnp 0x20000029742 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000041fd8 : jnp 0x20000042008 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000044729 : jnp 0x200000446dc ; xor eax, dword ptr [rax] ; call rax
0x0000020000047adb : jnp 0x20000047b0c ; mov rsp, r11 ; pop r14 ; ret
0x0000020000065a51 : jnp 0x20000065a0b ; add eax, 0xc4834800 ; pop rbx ; ret
0x000002000007bab5 : jnp 0x2000007badd ; mov rsp, r11 ; pop rbp ; ret
0x00000200000c02e8 : jnp 0x200000c0312 ; call 0x200000bd9b8
0x00000200000dcfb4 : jnp 0x200000dcfcc ; add byte ptr [rbp + 0xf], al ; ret
0x00000200000ed4fd : jnp 0x200000ed525 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f0583 : jnp 0x200000f05ac ; mov rsp, r11 ; pop r14 ; ret
0x00000200000f1dbb : jnp 0x200000f1deb ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f683f : jnp 0x200000f686f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000105031 : jnp 0x20000105061 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000107f62 : jnp 0x20000107f93 ; mov rsp, r11 ; pop r14 ; ret
0x000002000010bdc8 : jnp 0x2000010bde8 ; mov rsp, r11 ; pop rbp ; ret
0x000002000010eb3d : jnp 0x2000010eb4e ; add eax, 0x83482e74 ; ret
0x0000020000110c09 : jnp 0x20000110c29 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011175b : jnp 0x20000111783 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001121a4 : jnp 0x200001121d4 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000112b7b : jnp 0x20000112ba3 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011361c : jnp 0x20000113644 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011483c : jnp 0x20000114864 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000114a85 : jnp 0x20000114aa5 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000116e88 : jnp 0x20000116ea8 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000117538 : jnp 0x20000117568 ; mov rsp, r11 ; pop rbp ; ret
0x000002000011c6d2 : jnp 0x2000011c6fa ; mov rsp, r11 ; pop rbp ; ret
0x000002000011c9a6 : jnp 0x2000011c9ce ; mov rsp, r11 ; pop rbp ; ret
0x000002000013072b : jnp 0x2000013074b ; mov rsp, r11 ; pop rbp ; ret
0x000002000013233c : jnp 0x2000013236c ; mov rsp, r11 ; pop rbp ; ret
0x000002000013b826 : jnp 0x2000013b8a5 ; sub al, byte ptr [rcx + 0xf] ; mov dh, 0x45 ; add byte ptr [rbx], bh ; ret
0x00000200000fbb49 : jnp 0x2000013eff0 ; add byte ptr [rcx - 0x75], al ; ret 0x2348
0x000002000017d97b : jnp 0x2000017d9db ; out dx, eax ; inc dword ptr [rcx - 0x75] ; ret 0x8548
0x0000020000183c7f : jnp 0x20000183c79 ; dec dword ptr [rcx - 0x75] ; leave ; call 0x200001bfea0
0x00000200001a74e0 : jnp 0x200001a7508 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001aafa1 : jnp 0x200001aafd1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001aeaf4 : jnp 0x200001aeb39 ; call rcx
0x00000200001aeaf3 : jnp 0x200001aeb3a ; call rcx
0x00000200001aeb3d : jnp 0x200001aeb6d ; mov rsp, r11 ; pop rbp ; ret
0x00000200001b0caa : jnp 0x200001b0cdb ; mov rsp, r11 ; pop r14 ; ret
0x00000200001b1f5f : jnp 0x200001b1f87 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001bc578 : jnp 0x200001bc5a9 ; mov rsp, r11 ; pop r15 ; ret
0x00000200001bcca6 : jnp 0x200001bccd6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001bd0f3 : jnp 0x200001bd113 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001bd82a : jnp 0x200001bd852 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c2ca9 : jnp 0x200001c2cd9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c4866 : jnp 0x200001c488e ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c7883 : jnp 0x200001c78b3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001cb950 : jnp 0x200001cb956 ; add al, al ; ret
0x00000200001d2cf8 : jnp 0x200001d2d18 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d8d70 : jnp 0x200001d8d98 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e0d97 : jnp 0x200001e0db7 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e0eb3 : jnp 0x200001e0ed3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001e1ca0 : jnp 0x200001e1cd1 ; mov rsp, r11 ; pop r14 ; ret
0x00000200001e3140 : jnp 0x200001e3160 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001eaa16 : jnp 0x200001eaa47 ; mov rsp, r11 ; pop r14 ; ret
0x00000200001eae17 : jnp 0x200001eae47 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001eb1d9 : jnp 0x200001eb209 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001eb64c : jnp 0x200001eb674 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001eb711 : jnp 0x200001eb739 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001ebd06 : jnp 0x200001ebd36 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001ed295 : jnp 0x200001ed2bd ; mov rsp, r11 ; pop rbp ; ret
0x00000200001ed4af : jnp 0x200001ed4d7 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001edb63 : jnp 0x200001edb8b ; mov rsp, r11 ; pop rbp ; ret
0x00000200001edf92 : jnp 0x200001edfc2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001ee1db : jnp 0x200001ee20b ; mov rsp, r11 ; pop rbp ; ret
0x00000200001f0721 : jnp 0x200001f0749 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001f15fe : jnp 0x200001f162e ; mov rsp, r11 ; pop rbp ; ret
0x00000200001f171d : jnp 0x200001f174e ; mov rsp, r11 ; pop r14 ; ret
0x00000200001f17f7 : jnp 0x200001f1817 ; mov rsp, r11 ; pop rbp ; ret
0x00000200002061ed : jnp 0x20000206215 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000209fb4 : jnp 0x20000209fdc ; mov rsp, r11 ; pop rbp ; ret
0x000002000020b705 : jnp 0x2000020b72d ; mov rsp, r11 ; pop rbp ; ret
0x000002000020c23d : jnp 0x2000020c265 ; mov rsp, r11 ; pop rbp ; ret
0x000002000020df22 : jnp 0x2000020df4b ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x000002000020df89 : jnp 0x2000020dfb2 ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x0000020000211251 : jnp 0x20000211279 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000213a91 : jnp 0x20000213ac2 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000214efd : jnp 0x20000214f2d ; mov rsp, r11 ; pop rbp ; ret
0x000002000039bcd0 : jnp 0x2000039bd01 ; mov rsp, r11 ; pop r14 ; ret
0x000002000039c935 : jnp 0x2000039c9a5 ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000039d596 : jnp 0x2000039d5b6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003a3722 : jnp 0x200003a374a ; mov rsp, r11 ; pop rbp ; ret
0x00000200003a66b1 : jnp 0x200003a66d9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003ac608 : jnp 0x200003ac638 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003af612 : jnp 0x200003af642 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003b970e : jnp 0x200003b9736 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003c8030 : jnp 0x200003c8059 ; mov rsp, r11 ; pop r14 ; ret
0x00000200003cb6bf : jnp 0x200003cb6df ; mov rsp, r11 ; pop rbp ; ret
0x00000200003ce05b : jnp 0x200003ce08c ; mov rsp, r11 ; pop r14 ; ret
0x00000200003ce44a : jnp 0x200003ce473 ; mov rsp, r11 ; pop r14 ; ret
0x00000200003d5a49 : jnp 0x200003d5a71 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003dce47 : jnp 0x200003dce77 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003dd213 : jnp 0x200003dd244 ; mov rsp, r11 ; pop r14 ; ret
0x00000200003de82c : jnp 0x200003de855 ; mov rsp, r11 ; pop r14 ; ret
0x00000200003e8cc1 : jnp 0x200003e8ce9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003f9715 : jnp 0x200003f977a ; ret
0x00000200003fa69a : jnp 0x200003fa6cb ; mov rsp, r11 ; pop r14 ; ret
0x00000200003fa675 : jnp 0x200003fa6cf ; ret
0x00000200004009ab : jnp 0x200004009db ; mov rsp, r11 ; pop rbp ; ret
0x000002000040dfa0 : jnp 0x2000040dfd1 ; mov rsp, r11 ; pop r15 ; ret
0x00000200004115a3 : jnp 0x20000411535 ; push rcx ; add al, 0xf7 ; ret 0xfff8
0x00000200004126ed : jnp 0x2000041271d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000416557 : jnp 0x20000416588 ; mov rsp, r11 ; pop r14 ; ret
0x000002000041cade : jnp 0x2000041cb0e ; mov rsp, r11 ; pop rbp ; ret
0x000002000041ccfb : jnp 0x2000041cd18 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000041ccfa : jnp 0x2000041cd19 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000041d94f : jnp 0x2000041d96f ; mov rsp, r11 ; pop rbp ; ret
0x000002000041e9ad : jnp 0x2000041e9d5 ; mov rsp, r11 ; pop rbp ; ret
0x000002000041efd3 : jnp 0x2000041f003 ; mov rsp, r11 ; pop rbp ; ret
0x000002000042204a : jnp 0x20000422072 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000443fc0 : jnp 0x20000443ff1 ; mov rsp, r11 ; pop r14 ; ret
0x000002000044cac2 : jnp 0x2000044caf3 ; mov rsp, r11 ; pop r14 ; ret
0x000002000044eaab : jnp 0x2000044ead4 ; mov rsp, r11 ; pop r14 ; ret
0x000002000046670a : jnp 0x2000046673a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000472e17 : jnp 0x20000472e40 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000475ccb : jnp 0x20000475cf4 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000475d31 : jnp 0x20000475d27 ; ret 0x48ff
0x000002000047ae56 : jnp 0x2000047ae6f ; add dh, dh ; ret
0x000002000047ef23 : jnp 0x2000047ef54 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004815a5 : jnp 0x200004815cd ; mov rsp, r11 ; pop rbp ; ret
0x0000020000483bbc : jnp 0x20000483be5 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000490e40 : jnp 0x20000490e59 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000493893 : jnp 0x2000049385a ; call 0x200000b9055
0x000002000049b8c1 : jnp 0x2000049b8de ; ret 0x83ff
0x000002000049efcc : jnp 0x2000049effd ; mov rsp, r11 ; pop r14 ; ret
0x00000200004b9e71 : jnp 0x200004b9e8c ; add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200004c3f88 : jnp 0x200004c3fb0 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c4007 : jnp 0x200004c4037 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c7989 : jnp 0x200004c79b2 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004c9989 : jnp 0x200004c99b2 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004ca069 : jnp 0x200004ca0b0 ; ret 0x4cff
0x00000200004cb1f5 : jnp 0x200004cb226 ; mov rsp, r11 ; pop r15 ; ret
0x00000200004d37bc : jnp 0x200004d37e4 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d86e2 : jnp 0x200004d8702 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004e0d1b : jnp 0x200004e0d4c ; mov rsp, r11 ; pop r14 ; ret
0x00000200004e1f3c : jnp 0x200004e1f65 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004e5e9e : jnp 0x200004e5ece ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ea19b : jnp 0x200004ea1a7 ; add byte ptr [rax - 0x75], cl ; ret 0xf49
0x00000200004ebd61 : jnp 0x200004ebd91 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ed751 : jnp 0x200004ed782 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004edaf4 : jnp 0x200004edb1c ; mov rsp, r11 ; pop rbp ; ret
0x00000200004edd76 : jnp 0x200004edd9e ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ede6a : jnp 0x200004ede92 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f505e : jnp 0x200004f507e ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f5b6d : jnp 0x200004f5b9d ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f5f01 : jnp 0x200004f5ed7 ; ret
0x00000200004f70d5 : jnp 0x200004f70fd ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f76cc : jnp 0x200004f76fc ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f7c01 : jnp 0x200004f7c31 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f9124 : jnp 0x200004f9155 ; mov rsp, r11 ; pop r14 ; ret
0x00000200004f9698 : jnp 0x200004f96c8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004fcc69 : jnp 0x200004fcc9a ; mov rsp, r11 ; pop r14 ; ret
0x00000200004fd481 : jnp 0x200004fd4a1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004fd727 : jnp 0x200004fd74f ; mov rsp, r11 ; pop rbp ; ret
0x00000200004fd901 : jnp 0x200004fd95d ; ret
0x00000200004fe370 : jnp 0x200004fe398 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ff2e8 : jnp 0x200004ff308 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005038f4 : jnp 0x2000050391c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000504811 : jnp 0x20000504839 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005048ce : jnp 0x200005048fe ; mov rsp, r11 ; pop rbp ; ret
0x000002000050495c : jnp 0x20000504984 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000507aae : jnp 0x20000507ade ; mov rsp, r11 ; pop rbp ; ret
0x0000020000509c3e : jnp 0x20000509c66 ; mov rsp, r11 ; pop rbp ; ret
0x000002000050b9db : jnp 0x2000050ba0b ; mov rsp, r11 ; pop rbp ; ret
0x0000020000511a34 : jnp 0x20000511a64 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000512901 : jnp 0x200005128df ; ret 0x48ff
0x000002000051477c : jnp 0x200005147ac ; mov rsp, r11 ; pop rbp ; ret
0x00000200005243db : jnp 0x200005243e4 ; test byte ptr [rcx + 0xf], al ; ret 0x8489
0x0000020000528a41 : jnp 0x20000528aaf ; ret 0x8bff
0x0000020000533874 : jnp 0x200005338a4 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000533cac : jnp 0x20000533cd4 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000534453 : jnp 0x20000534483 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000535f01 : jnp 0x20000535ede ; mov edi, 0xc48348ff ; push rax ; pop rbx ; ret
0x000002000053a578 : jnp 0x2000053a598 ; mov rsp, r11 ; pop rbp ; ret
0x000002000053d162 : jnp 0x2000053d192 ; mov rsp, r11 ; pop rbp ; ret
0x000002000053ec4a : jnp 0x2000053ec6a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000543778 : jnp 0x200005437a8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005445ee : jnp 0x2000054461e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000544814 : jnp 0x20000544845 ; mov rsp, r11 ; pop r14 ; ret
0x00000200005459ec : jnp 0x20000545a1c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000563868 : jnp 0x20000563845 ; call qword ptr [rcx]
0x00000200005891f3 : jnp 0x200005891f0 ; dec dword ptr [rax - 1] ; ret
0x000002000059ba1d : jnp 0x2000059ba70 ; ret 0x90ff
0x00000200005a328b : jnp 0x200005a327c ; dec dword ptr [rax - 0x75] ; ret
0x00000200005d7791 : jnp 0x200005d778e ; dec dword ptr [rax - 0x75] ; ret
0x00000200005d8c81 : jnp 0x200005d8c36 ; scasd eax, dword ptr [rdi] ; call qword ptr [rax - 0x9633d17]
0x00000200005d8cc2 : jnp 0x200005d8cf2 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005dd06a : jnp 0x200005dd092 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005e362a : jnp 0x200005e365a ; mov rsp, r11 ; pop rbp ; ret
0x00000200005ee902 : jnp 0x200005ee92b ; mov rsp, r11 ; pop r14 ; ret
0x00000200005f0457 : jnp 0x200005f0477 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005f1226 : jnp 0x200005f1256 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005f3405 : jnp 0x200005f3435 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005f6439 : jnp 0x200005f6461 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005fcf15 : jnp 0x200005fcf46 ; mov rsp, r11 ; pop r14 ; ret
0x00000200005fd03f : jnp 0x200005fd070 ; mov rsp, r11 ; pop r14 ; ret
0x00000200005fe491 : jnp 0x200005fe4c1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005fe9a6 : jnp 0x200005fe9d7 ; mov rsp, r11 ; pop r15 ; ret
0x00000200005fec74 : jnp 0x200005fec9c ; mov rsp, r11 ; pop rbp ; ret
0x0000020000600825 : jnp 0x200006007ff ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000601c45 : jnp 0x20000601c75 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006060f6 : jnp 0x20000606126 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000607bc7 : jnp 0x20000607bef ; mov rsp, r11 ; pop rbp ; ret
0x0000020000608093 : jnp 0x200006080bb ; mov rsp, r11 ; pop rbp ; ret
0x000002000060915e : jnp 0x2000060918e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000610391 : jnp 0x200006103c1 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000611244 : jnp 0x2000061126d ; mov rsp, r11 ; pop r14 ; ret
0x000002000061132a : jnp 0x20000611353 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000612fa0 : jnp 0x20000612fd0 ; mov rsp, r11 ; pop rbp ; ret
0x000002000061381b : jnp 0x2000061383b ; mov rsp, r11 ; pop rbp ; ret
0x000002000061397e : jnp 0x2000061399e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000616156 : jnp 0x20000616186 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006164f7 : jnp 0x2000061651f ; mov rsp, r11 ; pop rbp ; ret
0x00000200006165ff : jnp 0x20000616627 ; mov rsp, r11 ; pop rbp ; ret
0x000002000061f390 : jnp 0x2000061f3b9 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000622960 : jnp 0x20000622990 ; mov rsp, r11 ; pop rbp ; ret
0x000002000062efb2 : jnp 0x2000062efd2 ; mov rsp, r11 ; pop rbp ; ret
0x000002000062f0e7 : jnp 0x2000062f118 ; mov rsp, r11 ; pop r14 ; ret
0x00000200006372ec : jnp 0x2000063731c ; mov rsp, r11 ; pop rbp ; ret
0x00000200006381a9 : jnp 0x200006381c9 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006384f1 : jnp 0x20000638511 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000639329 : jnp 0x20000639349 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000639411 : jnp 0x20000639431 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000639b39 : jnp 0x20000639b61 ; mov rsp, r11 ; pop rbp ; ret
0x000002000063c6e8 : jnp 0x2000063c708 ; mov rsp, r11 ; pop rbp ; ret
0x000002000063d572 : jnp 0x2000063d59b ; mov rsp, r11 ; pop r14 ; ret
0x000002000063f1f4 : jnp 0x2000063f21d ; mov rsp, r11 ; pop r14 ; ret
0x000002000063f425 : jnp 0x2000063f456 ; mov rsp, r11 ; pop r15 ; ret
0x000002000063ff30 : jnp 0x2000063ff59 ; mov rsp, r11 ; pop r14 ; ret
0x000002000064024b : jnp 0x2000064027b ; mov rsp, r11 ; pop rbp ; ret
0x000002000064ba2d : jnp 0x2000064ba5e ; mov rsp, r11 ; pop r14 ; ret
0x000002000064dd55 : jnp 0x2000064dd7d ; mov rsp, r11 ; pop rbp ; ret
0x000002000064df45 : jnp 0x2000064df65 ; mov rsp, r11 ; pop rbp ; ret
0x000002000065174d : jnp 0x20000651775 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006557ee : jnp 0x2000065580e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000658029 : jnp 0x20000658059 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000658b6f : jnp 0x20000658b97 ; mov rsp, r11 ; pop rbp ; ret
0x000002000065ee49 : jnp 0x2000065ee69 ; mov rsp, r11 ; pop rbp ; ret
0x000002000065f7ea : jnp 0x2000065f81a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000663e93 : jnp 0x20000663ec3 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000666734 : jnp 0x20000666764 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000668ed9 : jnp 0x20000668f01 ; mov rsp, r11 ; pop rbp ; ret
0x000002000066bf31 : jnp 0x2000066bf61 ; mov rsp, r11 ; pop rbp ; ret
0x000002000066f46b : jnp 0x2000066f494 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000675c7c : jnp 0x20000675ca4 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000676fe5 : jnp 0x20000677016 ; mov rsp, r11 ; pop r14 ; ret
0x000002000067b801 : jnp 0x2000067b829 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067f41a : jnp 0x2000067f44a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000685b52 : jnp 0x20000685b83 ; mov rsp, r11 ; pop r14 ; ret
0x000002000068cff9 : jnp 0x2000068d029 ; mov rsp, r11 ; pop rbp ; ret
0x000002000068defc : jnp 0x2000068df24 ; mov rsp, r11 ; pop rbp ; ret
0x000002000068fa5e : jnp 0x2000068fa7e ; mov rsp, r11 ; pop rbp ; ret
0x000002000069043d : jnp 0x2000069045d ; mov rsp, r11 ; pop rbp ; ret
0x0000020000693d75 : jnp 0x20000693da6 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000693e74 : jnp 0x20000693ea5 ; mov rsp, r11 ; pop r14 ; ret
0x0000020000693f5c : jnp 0x20000693f8d ; mov rsp, r11 ; pop r14 ; ret
0x0000020000694f1d : jnp 0x20000694f0d ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x000002000069c677 : jnp 0x2000069c6a8 ; mov rsp, r11 ; pop r15 ; ret
0x000002000069cadc : jnp 0x2000069cb04 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006abca1 : jnp 0x200006abc6e ; ret
0x00000200006b3117 : jnp 0x200006b3147 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006b689d : jnp 0x200006b6921 ; add al, byte ptr [rax] ; add rsp, 0x58 ; ret
0x00000200006ca477 : jnp 0x200006ca4a8 ; mov rsp, r11 ; pop r14 ; ret
0x00000200006d5f5f : jnp 0x200006d5f1a ; dec dword ptr [rax - 1] ; ret
0x00000200006d5f5e : jnp 0x200006d5f1b ; dec dword ptr [rax - 1] ; ret
0x00000200006d7381 : jnp 0x200006d733c ; ret 0x41ff
0x00000200006d73a1 : jnp 0x200006d735c ; ret 0xf3ff
0x0000020000743ff1 : jnp 0x20000743fa7 ; ret
0x0000020000746789 : jnp 0x20000746806 ; ret
0x00000200007473ba : jnp 0x200007473da ; mov rsp, r11 ; pop rbp ; ret
0x000002000074a4be : jnp 0x2000074a4e6 ; mov rsp, r11 ; pop rbp ; ret
0x000002000074a96a : jnp 0x2000074a992 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000755060 : jnp 0x20000755080 ; mov rsp, r11 ; pop rbp ; ret
0x00000200007573d1 : jnp 0x20000757454 ; ret 0x4cff
0x00000200007578ba : jnp 0x200007578ea ; mov rsp, r11 ; pop rbp ; ret
0x0000020000757c70 : jnp 0x20000757c90 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000758df9 : jnp 0x20000758e19 ; mov rsp, r11 ; pop rbp ; ret
0x000002000075c0c5 : jnp 0x2000075c0e5 ; mov rsp, r11 ; pop rbp ; ret
0x000002000075d781 : jnp 0x2000075d7a0 ; ret 0x48ff
0x0000020000761509 : jnp 0x20000761531 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000762bb8 : jnp 0x20000762be0 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000765e6d : jnp 0x20000765e9e ; mov rsp, r11 ; pop r14 ; ret
0x00000200007666f3 : jnp 0x20000766723 ; mov rsp, r11 ; pop rbp ; ret
0x000002000076c21f : jnp 0x2000076c247 ; mov rsp, r11 ; pop rbp ; ret
0x000002000076c606 : jnp 0x2000076c62e ; mov rsp, r11 ; pop rbp ; ret
0x000002000076ec47 : jnp 0x2000076ec78 ; mov rsp, r11 ; pop r12 ; ret
0x000002000076ecb5 : jnp 0x2000076ecd5 ; mov rsp, r11 ; pop rbp ; ret
0x000002000077faa6 : jnp 0x2000077face ; mov rsp, r11 ; pop rbp ; ret
0x0000020000782b54 : jnp 0x20000782b84 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000028e47 : jnp 0x2002b439699 ; ret
0x000002000001f6fa : jns 0x2000001f70d ; add byte ptr [rax - 0x908dc9a], al ; ret
0x0000020000037b9a : jns 0x20000037bc4 ; add byte ptr [rsi + rax + 0x48], dh ; mov eax, ecx ; ret
0x0000020000041a8f : jns 0x20000041a94 ; ret
0x0000020000044d23 : jns 0x20000044d67 ; sub dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000044d68 : jns 0x20000044d9d ; add bl, al ; lock inc dword ptr [rcx + 0x10] ; ret
0x000002000004a914 : jns 0x2000004a958 ; mov byte ptr [rdi], al ; inc rdi ; jmp 0x2000004a8e8
0x000002000004bc9c : jns 0x2000004bca9 ; add rsp, 0x58 ; ret
0x0000020000053409 : jns 0x2000005341b ; add byte ptr [rax + rdx - 0x75], dh ; add dword ptr [rbx], esp ; ret 0xc22b
0x000002000006ae10 : jns 0x2000006ae15 ; ret
0x000002000006b7eb : jns 0x2000006b7f0 ; ret
0x000002000006bcd5 : jns 0x2000006bcda ; ret
0x000002000006bcd5 : jns 0x2000006bcdd ; ret
0x000002000006dc76 : jns 0x2000006dc7b ; ret
0x0000020000072ec8 : jns 0x20000072e8d ; jmp 0x20000072ea8
0x00000200000814d5 : jns 0x20000081520 ; adc byte ptr [rbp + rax + 0x48], dh ; add esp, 8 ; ret
0x00000200000818a5 : jns 0x200000818f0 ; adc byte ptr [rbp + rax + 0x48], dh ; add esp, 8 ; ret
0x00000200000b9095 : jns 0x200000b90e6 ; mov rcx, rdi ; call 0x20000085327
0x00000200000d3029 : jns 0x200000d303e ; pop rdi ; ret
0x00000200001142b9 : jns 0x200001142c4 ; mov r8d, r10d ; jmp 0x20000114289
0x000002000011adc6 : jns 0x2000011add1 ; add dh, dh ; ret
0x000002000011adcf : jns 0x2000011adde ; add byte ptr [rcx - 0x76], al ; push rsi ; and dh, dh ; ret 0xf10
0x00000200001356ec : jns 0x200001356f7 ; or eax, 0xffffffff ; ret
0x0000020000144481 : jns 0x200001444bc ; add rsp, 0x138 ; ret
0x0000020000146d26 : jns 0x20000146d61 ; add rsp, 0x138 ; ret
0x000002000014842c : jns 0x20000148467 ; add rsp, 0x138 ; ret
0x0000020000148648 : jns 0x20000148683 ; add rsp, 0x138 ; ret
0x000002000014bd18 : jns 0x2000014bd53 ; add rsp, 0x138 ; ret
0x000002000014d4d1 : jns 0x2000014d50c ; add rsp, 0x138 ; ret
0x000002000014e113 : jns 0x2000014e11d ; add byte ptr [rax], al ; sub r11, rax ; jmp r11
0x000002000015acb9 : jns 0x2000015acab ; dec dword ptr [rax - 0x75] ; ret
0x00000200001acbd4 : jns 0x200001acc2b ; mov ecx, dword ptr [rip + 0x12589c] ; call r9
0x00000200001b7afd : jns 0x200001b7b0b ; and qword ptr [rcx + 0x70], 0 ; ret
0x00000200001bcf63 : jns 0x200001bcfa2 ; stc ; dec dword ptr [rcx - 0x74b65c83] ; ret 0xf49
0x00000200001bd6be : jns 0x200001bd6d1 ; add al, 0xf ; xchg eax, esp ; ret 0xdfeb
0x00000200001bef1a : jns 0x200001bef29 ; mov eax, 0xc0000022 ; ret
0x00000200001c1927 : jns 0x200001c191b ; or eax, 0xffffffff ; ret
0x00000200001f628f : jns 0x200001f6283 ; mov eax, edx ; ret
0x00000200001f628f : jns 0x200001f6284 ; mov eax, edx ; ret
0x00000200002168f9 : jns 0x20000216910 ; add dword ptr [rbp + 5], esi ; movzx eax, word ptr [rcx + 0x28] ; ret
0x000002000022955d : jns 0x2000022951b ; mov rax, rdx ; jmp 0x2000022956a
0x000002000022a208 : jns 0x2000022a1c6 ; mov rax, rdx ; jmp 0x2000022a215
0x00000200003d9e25 : jns 0x200003d9e2b ; add al, al ; ret
0x00000200003f39ac : jns 0x200003f39ff ; add byte ptr [rbp - 0x3f], dh ; ret
0x00000200003f8e2c : jns 0x200003f8e34 ; push qword ptr [rdx] ; fild dword ptr [rdi + rcx + 0x20] ; ret 0xf45
0x000002000040f1fa : jns 0x2000040f207 ; add rsp, 0x28 ; ret
0x000002000041617a : jns 0x20000416198 ; call 0x200000c23c4
0x000002000041e699 : jns 0x2000041e6ac ; mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x000002000042208b : jns 0x2000042209a ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000427ce3 : jns 0x20000427ca6 ; ret 0x84ff
0x0000020000429e63 : jns 0x20000429e6e ; or al, byte ptr [rax] ; jmp 0x20000429e31
0x000002000043d573 : jns 0x2000043d57e ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000043eeb2 : jns 0x2000043eeb8 ; add al, al ; ret
0x000002000048fe63 : jns 0x2000048fe96 ; ret
0x000002000049a0c3 : jns 0x2000049a04b ; ret 0x33ff
0x000002000049ab88 : jns 0x2000049ab9c ; mov rcx, rdi ; call 0x200000c23c8
0x00000200004b7e43 : jns 0x200004b7def ; sar bh, 0x8b ; ret
0x00000200004c804b : jns 0x200004c809c ; ret 0x48ff
0x00000200004d6a4d : jns 0x200004d6a53 ; add al, al ; ret
0x00000200004d6aa5 : jns 0x200004d6aab ; add al, al ; ret
0x00000200004fa066 : jns 0x200004fa085 ; add byte ptr [rbp + 1], dh ; ret
0x00000200004fa07a : jns 0x200004fa099 ; add byte ptr [rbp + 1], dh ; ret
0x0000020000504003 : jns 0x20000503fcb ; ret
0x0000020000515423 : jns 0x200005153e0 ; ret 0x48ff
0x000002000051da75 : jns 0x2000051da28 ; mov rcx, qword ptr [rbp - 0x48] ; call 0x20000140389
0x00000200005a3254 : jns 0x200005a3245 ; dec dword ptr [rax - 0x75] ; ret
0x00000200005b2589 : jns 0x200005b257b ; push rdi ; ret
0x00000200005b2588 : jns 0x200005b257c ; push rdi ; ret
0x00000200005e28e6 : jns 0x200005e28be ; dec dword ptr [rax - 0x39] ; ret 0x5d00
0x00000200005e297f : jns 0x200005e2957 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005e29d9 : jns 0x200005e29b1 ; dec dword ptr [rax - 0x39] ; ret 0x5d00
0x00000200005f1c69 : jns 0x200005f1c6c ; ret 0x3b41
0x00000200005f4593 : jns 0x200005f4561 ; ret
0x0000020000601093 : jns 0x20000601096 ; ret 0x45ff
0x000002000060e663 : jns 0x2000060e69d ; ret 0x4cff
0x00000200006296b5 : jns 0x2000062967c ; dec dword ptr [rax - 0x75] ; ret
0x00000200006305cb : jns 0x200006305d4 ; ret 0x48ff
0x0000020000654dce : jns 0x20000654d7f ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x95 ; ret
0x000002000067d858 : jns 0x2000067d8d8 ; test byte ptr [rbp - 0x27fcfda1], 0x8b ; ret
0x000002000067dd54 : jns 0x2000067dd35 ; ret
0x000002000067dd90 : jns 0x2000067dd71 ; ret
0x000002000067ddc8 : jns 0x2000067ddaf ; mov eax, 1 ; ret
0x00000200006857cb : jns 0x200006857e6 ; jmp 0x200006857de
0x0000020000685857 : jns 0x2000068588f ; jmp 0x2000068586a
0x00000200006ba8af : jns 0x200006ba84d ; dec dword ptr [rax - 0x75] ; ret
0x00000200006d72d3 : jns 0x200006d728f ; ret 0x48ff
0x00000200006d8bff : jns 0x200006d8b8e ; ret
0x0000020000737a71 : jns 0x20000737a2f ; mov rax, rdx ; jmp 0x20000737a7e
0x000002000074ac83 : jns 0x2000074acba ; ret
0x000002000074c3b7 : jns 0x2000074c3e9 ; ret
0x0000020000758b4b : jns 0x20000758bb7 ; ret 0x45ff
0x000002000075e167 : jns 0x2000075e124 ; ret
0x0000020000002922 : jo 0x200000028b0 ; ret
0x00000200000034f2 : jo 0x20000003531 ; ret 0x850f
0x000002000000868f : jo 0x200000086f0 ; ret
0x0000020000008941 : jo 0x20000008987 ; pop rbp ; ret
0x00000200000095e5 : jo 0x20000009631 ; pop rdi ; pop r14 ; pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000016f92 : jo 0x20000016fe2 ; add esp, 0x50 ; pop rdi ; ret
0x000002000002265c : jo 0x20000022668 ; add byte ptr [rax], al ; ret
0x00000200000304f5 : jo 0x200000304e8 ; xchg eax, ebp ; add dword ptr [rcx], ecx ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x0000020000033b8a : jo 0x20000033bc2 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000038302 : jo 0x2000003834e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000003a9aa : jo 0x2000003a9fa ; add esp, 0x50 ; pop rbp ; ret
0x000002000003e2e0 : jo 0x2000003e2b5 ; add dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x0000020000040a60 : jo 0x20000040ab1 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000044d4f : jo 0x20000044d57 ; mov qword ptr [rcx + 0x68], rax ; ret
0x000002000004675a : jo 0x2000004677c ; call 0x20000046378
0x0000020000049de2 : jo 0x20000049e47 ; pop rsi ; pop rbp ; ret
0x000002000005477e : jo 0x200000547a7 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005477d : jo 0x200000547a8 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005e4c2 : jo 0x2000005e4b1 ; ret 0x8b44
0x0000020000066c89 : jo 0x20000066cee ; pop rsi ; pop rbp ; ret
0x0000020000067d55 : jo 0x20000067da7 ; add esp, 0x78 ; pop r15 ; pop rbx ; ret
0x0000020000069bd5 : jo 0x20000069bcf ; ret 0xf04
0x000002000006a39e : jo 0x2000006a3a7 ; add byte ptr [rax], al ; and al, 1 ; ret
0x0000020000075407 : jo 0x20000075457 ; add esp, 0x50 ; pop rbp ; ret
0x0000020000077489 : jo 0x2000007749f ; add dh, dh ; ret 0x7410
0x0000020000078ea6 : jo 0x20000078ef6 ; add esp, 0x50 ; pop rdi ; ret
0x000002000007d3e8 : jo 0x2000007d3e2 ; ret 0x7501
0x000002000008766e : jo 0x200000876b8 ; pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000089f1a : jo 0x20000089f6d ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000967cd : jo 0x2000009677d ; and byte ptr [rbp + rbx - 1], dh ; ret
0x00000200000a4711 : jo 0x200000a46fe ; ret
0x00000200000a7e8a : jo 0x200000a7edc ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000b2971 : jo 0x200000b29c5 ; lea eax, dword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x00000200000bc56c : jo 0x200000bc578 ; add byte ptr [rax], al ; ret
0x00000200000c88f3 : jo 0x200000c8882 ; ret
0x00000200000cccaf : jo 0x200000cccfe ; add esp, 0x38 ; ret
0x00000200000d0a7f : jo 0x200000d0a79 ; ret 0xf04
0x00000200000d49ff : jo 0x200000d49f9 ; ret 0xf04
0x00000200000e453e : jo 0x200000e454c ; add al, al ; je 0x200000e454f ; mov al, 1 ; ret
0x00000200000e689a : jo 0x200000e6896 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000ea0af : jo 0x200000ea0b5 ; add dh, dh ; ret 0xf91
0x00000200000ed607 : jo 0x200000ed658 ; add esp, 0x50 ; pop r14 ; ret
0x00000200000f238c : jo 0x200000f23f1 ; pop rsi ; pop rbp ; ret
0x00000200000f4c34 : jo 0x200000f4c30 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000f63ea : jo 0x200000f644f ; pop rsi ; pop rbp ; ret
0x00000200000f75eb : jo 0x200000f763b ; add esp, 0x60 ; pop rdi ; ret
0x0000020000108a2d : jo 0x20000108a92 ; pop rbx ; pop rbp ; ret
0x0000020000109030 : jo 0x20000109080 ; add esp, 0x50 ; pop rdi ; ret
0x000002000010f8d6 : jo 0x2000010f926 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000111a7f : jo 0x20000111ae2 ; ret
0x00000200001146e1 : jo 0x20000114742 ; ret
0x00000200001159e5 : jo 0x200001159d2 ; cmc ; ret 0x11
0x0000020000115f5b : jo 0x20000115fc3 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000116528 : jo 0x20000116587 ; ret
0x0000020000117070 : jo 0x200001170c0 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000123c89 : jo 0x20000123cee ; pop rbx ; pop rbp ; ret
0x0000020000125257 : jo 0x200001252a7 ; test eax, eax ; jne 0x20000125264 ; ret
0x0000020000125256 : jo 0x200001252a8 ; test eax, eax ; jne 0x20000125265 ; ret
0x0000020000129db4 : jo 0x20000129e06 ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000012d8bf : jo 0x2000012d8c6 ; ret 0xc803
0x000002000012ed9e : jo 0x2000012edff ; ret
0x0000020000132514 : jo 0x200001324c5 ; sbb dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200001336a3 : jo 0x200001336f3 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000133f67 : jo 0x20000133fb7 ; add esp, 0x60 ; pop rbp ; ret
0x000002000013435d : jo 0x200001342ed ; ror byte ptr [rcx + 0xf], 0x45 ; fimul word ptr [rax - 0x75] ; ret
0x0000020000134465 : jo 0x200001343f5 ; ror byte ptr [rcx + 0xf], 0x45 ; fimul word ptr [rax - 0x75] ; ret
0x0000020000134cfe : jo 0x20000134d4d ; add esp, 0x58 ; ret
0x0000020000134dda : jo 0x20000134e29 ; add esp, 0x58 ; ret
0x000002000013e941 : jo 0x2000013e986 ; call rbx
0x0000020000143ba1 : jo 0x20000143bbb ; add byte ptr [rcx + 0x72], al ; stmxcsr dword ptr [rcx + 0x74] ; ret
0x00000200001600a7 : jo 0x200001600a3 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200001783d9 : jo 0x200001783c3 ; in eax, dx ; push rsi ; ret 0xf08
0x0000020000188571 : jo 0x200001885ab ; int1 ; push rsi ; ret
0x0000020000193248 : jo 0x20000193235 ; ret
0x0000020000193247 : jo 0x20000193236 ; ret
0x000002000019915c : jo 0x20000199156 ; push rsi ; ret
0x00000200001a6d90 : jo 0x200001a6df3 ; ret
0x00000200001abe6c : jo 0x200001abebc ; add esp, 0x60 ; pop rdi ; ret
0x00000200001ad4f3 : jo 0x200001ad482 ; ret 0x8b44
0x00000200001ae398 : jo 0x200001ae3b0 ; mov rax, qword ptr [rip + 0x1240d7] ; call rax
0x00000200001af104 : jo 0x200001af154 ; add esp, 0x50 ; pop rdi ; ret
0x00000200001af6c8 : jo 0x200001af71b ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200001b4249 : jo 0x200001b4299 ; add esp, 0x50 ; pop rsi ; ret
0x00000200001b7b02 : jo 0x200001b7b06 ; ret
0x00000200001b9aa2 : jo 0x200001b9b03 ; ret
0x00000200001bb6b4 : jo 0x200001bb715 ; ret
0x00000200001bdf2b : jo 0x200001bdf8e ; ret
0x00000200001be893 : jo 0x200001be8f2 ; ret
0x00000200001c5e41 : jo 0x200001c5e94 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200001ca7b4 : jo 0x200001ca815 ; ret
0x00000200001cad44 : jo 0x200001cada5 ; ret
0x00000200001d2468 : jo 0x200001d24cd ; pop rsi ; pop rbp ; ret
0x00000200001d7951 : jo 0x200001d79a1 ; add esp, 0x60 ; pop rsi ; ret
0x00000200001dd6e0 : jo 0x200001dd730 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001e0f47 : jo 0x200001e0fa8 ; ret
0x00000200001e5358 : jo 0x200001e53a3 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001e842d : jo 0x200001e847f ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001eab79 : jo 0x200001eabde ; pop rsi ; pop rbp ; ret
0x00000200001eb057 : jo 0x200001eb0b8 ; ret
0x00000200001eb113 : jo 0x200001eb174 ; ret
0x00000200001eb297 : jo 0x200001eb2f8 ; ret
0x00000200001eb35a : jo 0x200001eb3bf ; pop rsi ; pop rbp ; ret
0x00000200001ebe73 : jo 0x200001ebed8 ; pop rbx ; pop rbp ; ret
0x00000200001ec14f : jo 0x200001ec1b0 ; ret
0x00000200001facf0 : jo 0x200001fad4f ; ret
0x00000200001fb1ed : jo 0x200001fb24e ; ret
0x00000200001fb3b9 : jo 0x200001fb41a ; ret
0x00000200001fc3de : jo 0x200001fc441 ; ret
0x00000200001fd8c3 : jo 0x200001fd908 ; call rcx
0x00000200001fd910 : jo 0x200001fd949 ; leave ; call r9
0x00000200001fd98a : jo 0x200001fd9cf ; call rcx
0x0000020000201f9f : jo 0x20000201fe9 ; pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000204bf8 : jo 0x20000204c4a ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000020e8de : jo 0x2000020e926 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200002126d0 : jo 0x20000212731 ; ret
0x000002000021669f : jo 0x2000021662e ; ret 0x8b49
0x000002000021a5d1 : jo 0x2000021a558 ; ret
0x000002000021e89a : jo 0x2000021e8fd ; ret
0x0000020000231c28 : jo 0x20000231c8b ; ret
0x0000020000231cda : jo 0x20000231d3d ; ret
0x000002000039c782 : jo 0x2000039c7d5 ; add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200003a5ac5 : jo 0x200003a5b15 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003a8f99 : jo 0x200003a8fa3 ; dec dword ptr [rax - 0x73] ; shr r8b, 0xeb ; ret
0x00000200003ab1cf : jo 0x200003ab232 ; ret
0x00000200003ac2ab : jo 0x200003ac2fb ; add esp, 0x50 ; pop rdi ; ret
0x00000200003b1498 : jo 0x200003b14e8 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003b61b7 : jo 0x200003b6146 ; ret
0x00000200003bb672 : jo 0x200003bb695 ; adc byte ptr [rax - 0x7d], cl ; call 0x1ffc376fea5
0x00000200003c087c : jo 0x200003c08cd ; add esp, 0x50 ; pop r14 ; ret
0x00000200003c4f9f : jo 0x200003c5002 ; ret
0x00000200003c83f7 : jo 0x200003c8447 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003c8789 : jo 0x200003c87d9 ; add esp, 0x50 ; pop rdi ; ret
0x00000200003cc061 : jo 0x200003cc0c6 ; pop rsi ; pop rbp ; ret
0x00000200003d464e : jo 0x200003d46b1 ; ret
0x00000200003dce90 : jo 0x200003dce74 ; ret
0x00000200003e07c2 : jo 0x200003e0814 ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200003e2bf9 : jo 0x200003e2b88 ; ret
0x00000200003ec616 : jo 0x200003ec661 ; pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200003f0932 : jo 0x200003f093b ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200003f0a07 : jo 0x200003f0996 ; ret
0x00000200003f094a : jo 0x200003f099a ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200003f0949 : jo 0x200003f099b ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200003f6517 : jo 0x200003f6568 ; add esp, 0x50 ; pop r14 ; ret
0x00000200003fcb94 : jo 0x200003fcbe4 ; add esp, 0x20 ; pop rbx ; ret
0x00000200003fcb93 : jo 0x200003fcbe5 ; add esp, 0x20 ; pop rbx ; ret
0x00000200003fe48d : jo 0x200003fe4f0 ; ret
0x00000200003ff22d : jo 0x200003ff28e ; ret
0x0000020000400a3c : jo 0x20000400a8c ; add esp, 0x60 ; pop rbp ; ret
0x0000020000401715 : jo 0x20000401720 ; add byte ptr [rax], al ; mov rcx, qword ptr [rdi + 8] ; call rax
0x0000020000406064 : jo 0x20000406051 ; push rsi ; ret
0x0000020000406853 : jo 0x200004068b2 ; ret
0x0000020000407e78 : jo 0x20000407ec8 ; add esp, 0x60 ; pop rdi ; ret
0x000002000040868c : jo 0x200004086d8 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000409954 : jo 0x200004099b9 ; pop rsi ; pop rbx ; ret
0x0000020000409954 : jo 0x200004099bb ; pop rsi ; pop rbx ; ret
0x000002000040bfa6 : jo 0x2000040c007 ; ret
0x000002000040f339 : jo 0x2000040f38b ; mov dword ptr [rdx], ecx ; add rsp, 0x68 ; ret
0x000002000040f533 : jo 0x2000040f562 ; ret
0x00000200004115ae : jo 0x2000041153d ; ret 0xb841
0x0000020000411a88 : jo 0x20000411ad3 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004130cd : jo 0x2000041311e ; add esp, 0x50 ; pop r14 ; ret
0x000002000041772c : jo 0x2000041778f ; ret
0x0000020000418b01 : jo 0x20000418b64 ; ret
0x000002000041938d : jo 0x200004193f0 ; ret
0x000002000041aaa2 : jo 0x2000041ab07 ; pop rsi ; pop rbp ; ret
0x000002000041dd46 : jo 0x2000041dda9 ; ret
0x000002000041de48 : jo 0x2000041de98 ; add esp, 0x50 ; pop rbp ; ret
0x000002000041eef8 : jo 0x2000041ef57 ; ret
0x000002000042558b : jo 0x200004255c6 ; leave ; call 0x2000004585a
0x0000020000425576 : jo 0x200004255d5 ; ret
0x000002000042920b : jo 0x20000429216 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004296c0 : jo 0x20000429711 ; add esp, 0x40 ; pop rbx ; jmp r10
0x000002000042b60e : jo 0x2000042b661 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000042badf : jo 0x2000042bad9 ; ret 0xf03
0x0000020000430027 : jo 0x20000430073 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004314b8 : jo 0x2000043150c ; ret
0x0000020000438a44 : jo 0x200004389eb ; in al, dx ; dec dword ptr [rax - 0x73] ; xchg rax, r15 ; call qword ptr [rax]
0x000002000043970d : jo 0x20000439707 ; ret 0xf7f
0x000002000043c220 : jo 0x2000043c270 ; add esp, 0x50 ; pop rdi ; ret
0x000002000043c507 : jo 0x2000043c490 ; ret 0x2e75
0x000002000043e5ad : jo 0x2000043e60e ; ret
0x000002000043e618 : jo 0x2000043e668 ; add esp, 0x50 ; pop rdi ; ret
0x000002000044281d : jo 0x20000442829 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000442ac0 : jo 0x20000442acc ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000044a746 : jo 0x2000044a75e ; mov edx, 0x820f1ee6 ; ret
0x000002000044c8b3 : jo 0x2000044c906 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000454458 : jo 0x200004544ab ; add esp, 0x40 ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000460968 : jo 0x200004609b0 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000462f28 : jo 0x20000462f7b ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, r11 ; call rax
0x000002000046432d : jo 0x200004642bc ; ret
0x0000020000464d1e : jo 0x20000464d7d ; ret
0x0000020000467df8 : jo 0x20000467e49 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000468654 : jo 0x200004686a4 ; add esp, 0x50 ; pop rdi ; ret
0x000002000046cf71 : jo 0x2000046cfc1 ; add esp, 0x20 ; pop rbx ; ret
0x000002000046cf70 : jo 0x2000046cfc2 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000470984 : jo 0x200004709d7 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000047410a : jo 0x2000047416d ; ret
0x0000020000478574 : jo 0x200004785c7 ; lea ecx, dword ptr [rdi - 0x470] ; call r15
0x000002000047858e : jo 0x200004785dc ; mov ecx, ebp ; call rdi
0x0000020000479384 : jo 0x200004793e7 ; ret
0x000002000047c92d : jo 0x2000047c97d ; add esp, 0x60 ; pop rdi ; ret
0x000002000047efd4 : jo 0x2000047f035 ; ret
0x000002000047fc54 : jo 0x2000047fcca ; ret
0x0000020000483025 : jo 0x20000483013 ; xchg eax, ebp ; ret
0x0000020000483025 : jo 0x20000483016 ; xchg eax, ebp ; ret
0x000002000048496b : jo 0x200004848f9 ; ret
0x00000200004869f5 : jo 0x20000486a45 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000487d9e : jo 0x20000487e03 ; pop rsi ; pop rbp ; ret
0x000002000048829c : jo 0x200004882a1 ; insb byte ptr [rdi], dx ; ret
0x0000020000490728 : jo 0x20000490715 ; ret
0x0000020000491579 : jo 0x200004915c2 ; pop rdi ; pop r12 ; pop rbp ; ret
0x000002000049431e : jo 0x20000494364 ; pop rbp ; ret
0x00000200004943f7 : jo 0x2000049443d ; pop rbp ; ret
0x0000020000495a24 : jo 0x20000495a27 ; ret 0x8b48
0x0000020000499313 : jo 0x20000499365 ; add esp, 0x50 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000499b15 : jo 0x20000499b66 ; mov ecx, esi ; call 0x200000bc287
0x000002000049a292 : jo 0x2000049a28c ; ret
0x000002000049aaec : jo 0x2000049ab08 ; ret 0x48ff
0x000002000049b14c : jo 0x2000049b16b ; ret 0x8bff
0x000002000049d9e1 : jo 0x2000049da32 ; add esp, 0x48 ; pop rsi ; pop rbx ; ret
0x00000200004bfb9f : jo 0x200004bfbfe ; ret
0x00000200004c1618 : jo 0x200004c166b ; mov dword ptr [rsp + 0x20], eax ; call 0x200000e526d
0x00000200004c2bdc : jo 0x200004c2c1a ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x200000e88d5
0x00000200004c8769 : jo 0x200004c87b4 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004c9aa8 : jo 0x200004c9af3 ; ret 0xbaff
0x00000200004ca14a : jo 0x200004ca1a9 ; ret
0x00000200004cb4ec : jo 0x200004cb4f9 ; mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x200004cb4bf
0x00000200004cb5ae : jo 0x200004cb601 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004cd7c1 : jo 0x200004cd811 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004d03b4 : jo 0x200004d0343 ; ret
0x00000200004d4c7e : jo 0x200004d4cce ; add esp, 0x50 ; pop rdi ; ret
0x00000200004d58f5 : jo 0x200004d591f ; and byte ptr [rbp - 0x1f17feb8], cl ; ret
0x00000200004d6588 : jo 0x200004d6517 ; ret
0x00000200004d9259 : jo 0x200004d92aa ; add esp, 0x50 ; pop r14 ; ret
0x00000200004da8a1 : jo 0x200004da906 ; pop rsi ; pop rbp ; ret
0x00000200004dd07e : jo 0x200004dd0dd ; ret
0x00000200004dd8a0 : jo 0x200004dd82f ; ret
0x00000200004ddafa : jo 0x200004ddb4a ; add esp, 0x50 ; pop rdi ; ret
0x00000200004df4a8 : jo 0x200004df437 ; ret
0x00000200004e1643 : jo 0x200004e1693 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004e35f7 : jo 0x200004e3647 ; add esp, 0x50 ; pop rbp ; ret
0x00000200004e3baf : jo 0x200004e3bf9 ; pop rsp ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004e3e09 : jo 0x200004e3e6c ; ret
0x00000200004e4523 : jo 0x200004e44b2 ; ret 0x8b48
0x00000200004e8d26 : jo 0x200004e8d76 ; ret
0x00000200004e8e98 : jo 0x200004e8efd ; pop rsi ; pop rbp ; ret
0x00000200004ea2a9 : jo 0x200004ea30a ; ret
0x00000200004ea311 : jo 0x200004ea372 ; ret
0x00000200004ea4ae : jo 0x200004ea50d ; ret
0x00000200004eb3e2 : jo 0x200004eb441 ; ret
0x00000200004ebc90 : jo 0x200004ebce0 ; add esp, 0x50 ; pop rdi ; ret
0x00000200004ed2e5 : jo 0x200004ed32f ; pop rdi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004ee3c9 : jo 0x200004ee358 ; ret
0x00000200004eeac5 : jo 0x200004eeb16 ; add esp, 0x50 ; pop r14 ; ret
0x00000200004f1022 : jo 0x200004f0fb1 ; ret 0x8b49
0x00000200004f186f : jo 0x200004f18ba ; pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004f3732 : jo 0x200004f36c1 ; ret
0x00000200004f6b1c : jo 0x200004f6b6c ; add esp, 0x50 ; pop rdi ; ret
0x00000200004fa69f : jo 0x200004fa702 ; ret
0x00000200005006f5 : jo 0x20000500758 ; ret
0x0000020000503018 : jo 0x2000050307d ; pop rsi ; pop rbp ; ret
0x0000020000507b89 : jo 0x20000507b18 ; ret
0x000002000050d013 : jo 0x2000050cfa2 ; ret 0x8b48
0x000002000050ea0c : jo 0x2000050ea5c ; add esp, 0x50 ; pop rdi ; ret
0x000002000050f12c : jo 0x2000050f18b ; ret
0x0000020000510d63 : jo 0x20000510db4 ; xor ecx, esp ; call 0x20000133187
0x0000020000514cb7 : jo 0x20000514cf1 ; shr al, cl ; push rcx ; ret
0x000002000051523c : jo 0x200005151cf ; fsubr st(0) ; cmp al, 0xb1 ; ret 0x85ff
0x000002000051a651 : jo 0x2000051a6a1 ; add esp, 0x50 ; pop rdi ; ret
0x000002000051b355 : jo 0x2000051b3a0 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000051e498 : jo 0x2000051e4e8 ; add esp, 0x60 ; pop rbp ; ret
0x000002000051ec8a : jo 0x2000051ece9 ; ret
0x0000020000523200 : jo 0x2000052318f ; ret
0x00000200005249bd : jo 0x20000524a0d ; add esp, 0x50 ; pop rbp ; ret
0x0000020000524cff : jo 0x20000524d4f ; add esp, 0x50 ; pop rdi ; ret
0x00000200005269dd : jo 0x20000526a1b ; rol byte ptr [rbx + rcx*4 - 0x3d], cl ; call 0x2000014f4c9
0x000002000052afa1 : jo 0x2000052aff1 ; add esp, 0x60 ; pop rdi ; ret
0x000002000052c443 : jo 0x2000052c496 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000052f3f4 : jo 0x2000052f447 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000537b8a : jo 0x20000537b94 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005381f0 : jo 0x200005381ea ; ret 0x4801
0x000002000053bbb9 : jo 0x2000053bc0c ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000053c903 : jo 0x2000053c953 ; add esp, 0x60 ; pop rbp ; ret
0x000002000053ca14 : jo 0x2000053ca77 ; ret
0x000002000053cff8 : jo 0x2000053d057 ; ret
0x000002000053f70a : jo 0x2000053f75a ; add esp, 0x60 ; pop rdi ; ret
0x00000200005403bb : jo 0x2000054041e ; ret
0x0000020000541781 : jo 0x200005417e4 ; ret
0x0000020000541b74 : jo 0x20000541bc4 ; add esp, 0x60 ; pop rdi ; ret
0x00000200005423fd : jo 0x20000542450 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200005445e1 : jo 0x20000544570 ; ret
0x0000020000544803 : jo 0x20000544792 ; ret
0x0000020000557f12 : jo 0x20000557f73 ; ret
0x000002000055d6a0 : jo 0x2000055d68b ; push rsi ; ret
0x00000200005653b1 : jo 0x20000565340 ; ret
0x000002000056de17 : jo 0x2000056de03 ; ret
0x00000200005a4a94 : jo 0x200005a4a85 ; ret 0x48ff
0x00000200005ab8f7 : jo 0x200005ab8bc ; jmp 0x200005ab8fb
0x00000200005c4b8b : jo 0x200005c4bc8 ; ror byte ptr [rbx - 0x7d581733], cl ; ret
0x00000200005d5d70 : jo 0x200005d5cf7 ; ret 0x8b04
0x00000200005dcb25 : jo 0x200005dcb86 ; ret
0x00000200005dcd44 : jo 0x200005dcda5 ; ret
0x00000200005defea : jo 0x200005deff5 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005e3cfd : jo 0x200005e3d45 ; pop rsi ; pop rsi ; pop rbp ; ret
0x00000200005e65eb : jo 0x200005e6650 ; pop rsi ; pop rbp ; ret
0x00000200005e8e98 : jo 0x200005e8ee3 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005eccbd : jo 0x200005eccc0 ; ret 0x5489
0x00000200005f09e5 : jo 0x200005f0a38 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200005f330b : jo 0x200005f335b ; add esp, 0x50 ; pop rdi ; ret
0x00000200005f8764 : jo 0x200005f87c9 ; pop rsi ; pop rbp ; ret
0x00000200005f943d : jo 0x200005f948d ; add esp, 0x60 ; pop rdi ; ret
0x00000200005fc1d4 : jo 0x200005fc1c2 ; ret
0x00000200005fc412 : jo 0x200005fc400 ; clc ; ret
0x00000200005fc46c : jo 0x200005fc45a ; sahf ; ret
0x00000200005fc6b3 : jo 0x200005fc703 ; add esp, 0x60 ; pop rdi ; ret
0x00000200005fcfa5 : jo 0x200005fcff6 ; add esp, 0x50 ; pop r14 ; ret
0x00000200005fe565 : jo 0x200005fe570 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200005ff0a8 : jo 0x200005ff0f8 ; add esp, 0x50 ; pop rdi ; ret
0x00000200005ffb6c : jo 0x200005ffb91 ; ret
0x000002000060147d : jo 0x200006014cf ; call 0x20000231015
0x0000020000601508 : jo 0x2000060155a ; call 0x20000231015
0x000002000060161b : jo 0x2000060167e ; ret
0x00000200006028f2 : jo 0x20000602947 ; mov rcx, rdi ; call 0x20000231018
0x0000020000603b17 : jo 0x20000603b68 ; mov rcx, rbx ; call 0x20000231018
0x0000020000603b34 : jo 0x20000603b82 ; call 0x20000231015
0x0000020000603b87 : jo 0x20000603bd8 ; mov rcx, rbx ; call 0x20000231018
0x0000020000603bbe : jo 0x20000603c0f ; lea ecx, dword ptr [rdx - 0xf] ; call 0x20000231ce8
0x0000020000603c63 : jo 0x20000603cb4 ; lea ecx, dword ptr [rdx - 0x53] ; call 0x20000231ce8
0x0000020000603fc8 : jo 0x20000604019 ; mov rcx, rsi ; call 0x20000231018
0x0000020000604134 : jo 0x20000604182 ; call 0x20000231ce5
0x00000200006042fe : jo 0x2000060434c ; call 0x20000231ce5
0x0000020000604fbc : jo 0x20000604ff3 ; call 0x20000231ce5
0x00000200006050ae : jo 0x200006050e8 ; mov rcx, rdi ; call 0x20000231018
0x0000020000605310 : jo 0x2000060535e ; call 0x20000231ce5
0x00000200006053c3 : jo 0x20000605411 ; call 0x20000231ce5
0x0000020000605413 : jo 0x20000605464 ; mov rcx, rbx ; call 0x20000231018
0x0000020000605425 : jo 0x20000605476 ; mov rcx, rdi ; call 0x20000231018
0x00000200006055da : jo 0x2000060562b ; mov rcx, rbx ; call 0x20000231018
0x000002000060564c : jo 0x20000605676 ; and byte ptr [rbx - 0x39751735], cl ; ret 0x48ff
0x00000200006058f2 : jo 0x20000605953 ; ret
0x0000020000605aa1 : jo 0x20000605b03 ; mov rcx, rdi ; call 0x20000231018
0x0000020000605b45 : jo 0x20000605ba7 ; mov rcx, r14 ; call 0x20000231018
0x0000020000605b57 : jo 0x20000605bb9 ; mov rcx, rdi ; call 0x20000231018
0x0000020000605cb0 : jo 0x20000605d12 ; mov rcx, rbx ; call 0x20000231018
0x0000020000605f9e : jo 0x20000605ffd ; call 0x20000231015
0x00000200006061c4 : jo 0x20000606223 ; call 0x20000231015
0x00000200006061d6 : jo 0x20000606235 ; call 0x20000231ce5
0x0000020000606264 : jo 0x200006062c3 ; call 0x20000231015
0x00000200006062cd : jo 0x2000060632c ; call 0x20000231015
0x00000200006062e4 : jo 0x20000606343 ; call 0x20000231ce5
0x0000020000606368 : jo 0x200006063c7 ; call 0x20000231015
0x0000020000607026 : jo 0x20000607092 ; movsxd rbp, eax ; mov dl, 0xac ; ret 0x48ff
0x0000020000608086 : jo 0x20000608015 ; ret
0x00000200006089cc : jo 0x20000608a38 ; movsxd rbp, eax ; or al, 0x93 ; ret 0x48ff
0x0000020000608c96 : jo 0x20000608c25 ; ret
0x000002000060acd4 : jo 0x2000060ad40 ; movsxd rbp, eax ; add al, 0x70 ; ret 0x45ff
0x000002000060bc8f : jo 0x2000060bc1e ; ret
0x000002000060cbcc : jo 0x2000060cc31 ; pop rsi ; pop rbp ; ret
0x000002000060d128 : jo 0x2000060d181 ; lea ecx, dword ptr [rdx - 0x27] ; call 0x20000231ce8
0x000002000060d177 : jo 0x2000060d1d1 ; lea ecx, dword ptr [rdx - 0x17] ; call 0x20000231ce8
0x000002000060d191 : jo 0x2000060d1ea ; mov rcx, rbx ; call 0x20000231018
0x000002000060d3d6 : jo 0x2000060d431 ; lea rcx, qword ptr [rbx - 8] ; call 0x20000231019
0x000002000060d3e6 : jo 0x2000060d43f ; mov rcx, rsi ; call 0x20000231018
0x000002000060d5d1 : jo 0x2000060d626 ; mov rcx, rbx ; call 0x20000231018
0x000002000060e43c : jo 0x2000060e494 ; call 0x20000231015
0x000002000060e44d : jo 0x2000060e4a5 ; call 0x20000231015
0x000002000060e46c : jo 0x2000060e4c4 ; call 0x20000231015
0x000002000060e483 : jo 0x2000060e4db ; call 0x20000231015
0x000002000060e49a : jo 0x2000060e4f2 ; call 0x20000231015
0x000002000060e4b1 : jo 0x2000060e509 ; call 0x20000231015
0x000002000060e4bf : jo 0x2000060e51a ; mov rcx, rbx ; call 0x20000231018
0x000002000060e661 : jo 0x2000060e64f ; jns 0x2000060e69f ; ret 0x4cff
0x000002000060e693 : jo 0x2000060e6ee ; mov rcx, rbx ; call 0x20000231018
0x000002000060e70e : jo 0x2000060e766 ; call 0x20000231015
0x000002000060e823 : jo 0x2000060e87e ; mov rcx, rbx ; call 0x20000231018
0x000002000060e8c5 : jo 0x2000060e91f ; mov ecx, edi ; call 0x20000231ce7
0x000002000060ea24 : jo 0x2000060ea7f ; mov rcx, rsi ; call 0x20000231018
0x000002000060ea36 : jo 0x2000060ea91 ; mov rcx, rdi ; call 0x20000231018
0x000002000060eeff : jo 0x2000060ef57 ; call 0x20000231ce5
0x000002000060ef86 : jo 0x2000060efe1 ; mov rcx, rax ; call 0x20000231018
0x000002000060efe2 : jo 0x2000060f03d ; mov rcx, rdi ; call 0x20000231018
0x000002000060f451 : jo 0x2000060f3df ; ret
0x000002000060f616 : jo 0x2000060f66e ; call 0x20000231015
0x000002000060fd5e : jo 0x2000060fdbb ; mov qword ptr [rax + 8], rbx ; call 0x20000231019
0x000002000061005d : jo 0x200006100bb ; call 0x20000231015
0x00000200006101be : jo 0x2000061021c ; call 0x20000231ce5
0x000002000061024c : jo 0x200006102aa ; call 0x20000231015
0x000002000061026c : jo 0x200006102ca ; call 0x20000231015
0x0000020000610c04 : jo 0x20000610c42 ; mov rcx, rdi ; call 0x20000231018
0x0000020000610c16 : jo 0x20000610c54 ; mov rcx, r13 ; call 0x20000231018
0x0000020000610cbd : jo 0x20000610cf8 ; call 0x20000231ce5
0x0000020000611237 : jo 0x200006111c6 ; ret
0x000002000061179e : jo 0x2000061172d ; ret
0x00000200006156dd : jo 0x2000061572d ; add esp, 0x50 ; pop rdi ; ret
0x0000020000618bb6 : jo 0x20000618bbe ; add byte ptr [rax], al ; pop rsi ; ret
0x000002000061c199 : jo 0x2000061c1eb ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000061e49d : jo 0x2000061e4ee ; add esp, 0x50 ; pop r14 ; ret
0x0000020000621e20 : jo 0x20000621e70 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006226bf : jo 0x20000622720 ; ret
0x00000200006317cc : jo 0x200006317bf ; add al, 0xa2 ; dec dword ptr [rax - 0x75] ; retf ; call rdi
0x0000020000631a0c : jo 0x20000631a5c ; add esp, 0x50 ; pop rdi ; ret
0x00000200006347d4 : jo 0x20000634837 ; ret
0x0000020000634a6c : jo 0x20000634a3d ; dec dword ptr [rax - 0x39] ; ret 0x3c80
0x0000020000636bf0 : jo 0x20000636c53 ; ret
0x0000020000636ca7 : jo 0x20000636d0a ; ret
0x000002000063771c : jo 0x2000063777d ; ret
0x0000020000637a56 : jo 0x20000637ab7 ; ret
0x0000020000637fc1 : jo 0x20000638020 ; ret
0x0000020000638268 : jo 0x200006382cb ; ret
0x000002000063831f : jo 0x20000638382 ; ret
0x0000020000638c10 : jo 0x20000638c0a ; ret
0x0000020000638ed2 : jo 0x20000638f25 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000639ccb : jo 0x20000639d1b ; add esp, 0x60 ; pop rdi ; ret
0x000002000063a61b : jo 0x2000063a67e ; ret
0x000002000063b518 : jo 0x2000063b504 ; ret 0xbf67
0x000002000063b517 : jo 0x2000063b505 ; ret 0xbf67
0x000002000063cd50 : jo 0x2000063cdb1 ; ret
0x000002000063e457 : jo 0x2000063e4a7 ; add esp, 0x50 ; pop rdi ; ret
0x000002000064034f : jo 0x2000064039f ; add esp, 0x60 ; pop rdi ; ret
0x000002000064071e : jo 0x2000064076e ; add esp, 0x60 ; pop rdi ; ret
0x0000020000646466 : jo 0x200006464b6 ; add esp, 0x60 ; pop rdi ; ret
0x000002000064b903 : jo 0x2000064b954 ; mov dword ptr [rsp + 0x20], eax ; call qword ptr [r10]
0x000002000064ba1c : jo 0x2000064b9ab ; ret
0x0000020000652ef7 : jo 0x20000652e89 ; and al, 0x20 ; call 0x2000043f177
0x0000020000655ed7 : jo 0x20000655f27 ; add esp, 0x60 ; pop rbp ; ret
0x00000200006583e5 : jo 0x20000658374 ; ret
0x0000020000658cdc : jo 0x20000658d2c ; add esp, 0x50 ; pop rdi ; ret
0x0000020000659ee8 : jo 0x20000659f3b ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000065a8c1 : jo 0x2000065a922 ; ret
0x000002000065aa32 : jo 0x2000065aa93 ; ret
0x000002000065b918 : jo 0x2000065b904 ; ret 0xbd63
0x000002000065ddd2 : jo 0x2000065de35 ; ret
0x000002000065e8f5 : jo 0x2000065e954 ; ret
0x00000200006618b2 : jo 0x20000661913 ; ret
0x0000020000661e2a : jo 0x20000661e7a ; add esp, 0x50 ; pop rdi ; ret
0x000002000066359d : jo 0x200006635ed ; add esp, 0x60 ; pop rdi ; ret
0x00000200006664be : jo 0x2000066651d ; ret
0x0000020000668bb5 : jo 0x20000668bfd ; pop rdi ; pop rdi ; pop rsi ; ret
0x000002000066937c : jo 0x200006693cf ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000066f1b7 : jo 0x2000066f1a3 ; ret
0x00000200006759f9 : jo 0x20000675a44 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000067b48b : jo 0x2000067b4d6 ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000067df2f : jo 0x2000067debe ; ret
0x000002000067f40d : jo 0x2000067f39c ; ret
0x0000020000680ada : jo 0x20000680b29 ; mov dword ptr [rcx + 0x60], eax ; mov qword ptr [rcx + 0x68], rdx ; ret
0x000002000068573b : jo 0x2000068578e ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000068b31a : jo 0x2000068b36a ; add esp, 0x50 ; pop rdi ; ret
0x000002000068be89 : jo 0x2000068be1b ; push rdx ; sbb al, 0x8b ; ret 0x25
0x000002000069090d : jo 0x2000069095d ; add esp, 0x50 ; pop rdi ; ret
0x0000020000692130 : jo 0x2000069217c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000692294 : jo 0x20000692276 ; ret
0x00000200006924c3 : jo 0x2000069250f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006933a1 : jo 0x20000693404 ; ret
0x0000020000693af3 : jo 0x20000693a82 ; ret
0x00000200006953b3 : jo 0x20000695406 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000695435 : jo 0x20000695485 ; add esp, 0x50 ; pop rdi ; ret
0x00000200006959b3 : jo 0x20000695a06 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006977e5 : jo 0x20000697838 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006997f4 : jo 0x20000699849 ; ret
0x0000020000699d1c : jo 0x20000699d6c ; add esp, 0x50 ; pop rdi ; ret
0x0000020000699e34 : jo 0x20000699e84 ; add esp, 0x50 ; pop rdi ; ret
0x0000020000699f83 : jo 0x20000699fe8 ; pop rsi ; pop rbp ; ret
0x000002000069bfc8 : jo 0x2000069bf57 ; ret
0x000002000069de95 : jo 0x2000069dee8 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006aa7e7 : jo 0x200006aa776 ; add dword ptr [rbx], ebp ; ret
0x00000200006aa83f : jo 0x200006aa7ce ; add dword ptr [rbx], ebp ; ret
0x00000200006abf72 : jo 0x200006abfd3 ; ret
0x00000200006b2bd9 : jo 0x200006b2c38 ; ret
0x00000200006b5581 : jo 0x200006b55e2 ; ret
0x00000200006b5648 : jo 0x200006b56a7 ; ret
0x00000200006bef7f : jo 0x200006befc7 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006c2a73 : jo 0x200006c2ad6 ; ret
0x00000200006c91d9 : jo 0x200006c923c ; ret
0x00000200006d7088 : jo 0x200006d70db ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200006d7648 : jo 0x200006d760f ; ret 0x89ff
0x00000200006d7648 : jo 0x200006d7614 ; ret 0x89ff
0x00000200006da649 : jo 0x200006da69c ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000074190b : jo 0x2000074196c ; ret
0x0000020000743a3b : jo 0x20000743a8d ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000744b02 : jo 0x20000744b52 ; add esp, 0x50 ; pop rdi ; ret
0x000002000074c77d : jo 0x2000074c7cd ; add esp, 0x60 ; pop rdi ; ret
0x0000020000750249 : jo 0x200007502ac ; ret
0x0000020000752d01 : jo 0x20000752d60 ; ret
0x0000020000755f54 : jo 0x20000755f57 ; ret 0x8b41
0x00000200007618b9 : jo 0x20000761848 ; ret
0x0000020000763c0c : jo 0x20000763c5c ; add esp, 0x60 ; pop rdi ; ret
0x00000200007642b7 : jo 0x20000764307 ; add esp, 0x60 ; pop rbp ; ret
0x00000200007686bd : jo 0x2000076870d ; add esp, 0x50 ; pop rdi ; ret
0x0000020000768799 : jo 0x200007687fa ; ret
0x000002000076886b : jo 0x200007688ce ; ret
0x000002000076a5ae : jo 0x2000076a611 ; ret
0x000002000076e109 : jo 0x2000076e159 ; add esp, 0x60 ; pop rbp ; ret
0x000002000077ff7e : jo 0x2000077ffe0 ; ret
0x000002000078090e : jo 0x2000078096f ; ret
0x00000200007816ec : jo 0x2000078167b ; ret
0x0000020000782941 : jo 0x20000782991 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000785f85 : jo 0x20000785f14 ; ret 0x8b49
0x00000200001381ae : jp 0x200001381b8 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000013845e : jp 0x20000138468 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000015756c : jp 0x20000157591 ; jmp 0x2000000384c
0x000002000016613a : jp 0x2000016612e ; inc dword ptr [rbp + 0x3b] ; ret
0x0000020000166143 : jp 0x20000166137 ; inc dword ptr [rbp + 0x3b] ; ret 0x840f
0x00000200001761c2 : jp 0x200001761c1 ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xed72
0x000002000017abcd : jp 0x2000017abc3 ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200001bf8f6 : jp 0x200001bf8e0 ; jmp qword ptr [rdx]
0x00000200001c7012 : jp 0x200001c6fa6 ; lock dec dword ptr [rax - 0x75] ; retf ; call rdi
0x00000200001d4769 : jp 0x200001d4781 ; add al, ch ; jmp rax
0x00000200003ce85c : jp 0x200003ce857 ; ret
0x00000200003da682 : jp 0x200003da6ef ; ret 0x48ff
0x000002000040115e : jp 0x2000040117c ; ret
0x00000200004915c2 : jp 0x200004915d8 ; ret
0x0000020000495682 : jp 0x20000495687 ; ret 0x48ff
0x0000020000496ed2 : jp 0x20000496ef7 ; ret 0x48ff
0x000002000049a8cc : jp 0x2000049a894 ; push rsi ; ret
0x000002000049be6e : jp 0x2000049be85 ; ret 0x48ff
0x000002000049f96e : jp 0x2000049f9c0 ; lea ecx, dword ptr [rbx + 0x30] ; call 0x200000c1b38
0x00000200004b0616 : jp 0x200004b0630 ; xchg edi, ebp ; mov bh, 0xa ; add byte ptr [rcx - 0x7d], al ; ret 0xebe0
0x00000200005639d4 : jp 0x200005639b1 ; jmp qword ptr [rcx]
0x00000200005639e8 : jp 0x200005639c5 ; jmp qword ptr [rdx]
0x00000200005d76a6 : jp 0x200005d76a3 ; dec dword ptr [rax - 1] ; ret 0x8349
0x0000020000603ec2 : jp 0x20000603ef1 ; ret
0x000002000060bb92 : jp 0x2000060bbea ; ret 0x8bff
0x000002000062a0ae : jp 0x2000062a0a8 ; ret
0x000002000064a501 : jp 0x2000064a551 ; mov ecx, ebx ; call 0x200001f67fe
0x00000200006c46b2 : jp 0x200006c470b ; add al, 0 ; add rsp, 0x28 ; ret
0x00000200007462f2 : jp 0x20000746285 ; ret
0x000002000075055a : jp 0x2000075054c ; ret 0x45ff
0x000002000075e2ba : jp 0x2000075e2cf ; ret 0x8bff
0x00000200007840db : jp 0x200007840c8 ; lahf ; ret 0xff9b
0x000002000000251a : jrcxz 0x20000002563 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000026fc : jrcxz 0x20000002742 ; pop rsi ; ret
0x00000200000027f2 : jrcxz 0x20000002855 ; ret
0x0000020000002e63 : jrcxz 0x20000002eac ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000007aa2 : jrcxz 0x20000007aeb ; pop rsi ; pop r13 ; pop rdi ; ret
0x0000020000008b8f : jrcxz 0x20000008bf0 ; ret
0x0000020000009e47 : jrcxz 0x20000009eaa ; ret
0x000002000000d73f : jrcxz 0x2000000d788 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000000e592 : jrcxz 0x2000000e5f5 ; ret
0x00000200000115db : jrcxz 0x20000011627 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000125bf : jrcxz 0x20000012608 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000012e6a : jrcxz 0x20000012ecd ; ret
0x0000020000013cab : jrcxz 0x20000013cf7 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000147ff : jrcxz 0x20000014812 ; add cl, al ; loop 0x20000014815 ; or eax, edx ; jmp 0x200000147fe
0x000002000001522b : jrcxz 0x20000015277 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200000183ff : jrcxz 0x2000001844b ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000018a41 : jrcxz 0x20000018a90 ; add esp, 0x28 ; ret
0x0000020000018c88 : jrcxz 0x20000018cd4 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000001a25b : jrcxz 0x2000001a2a3 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000001a57a : jrcxz 0x2000001a5c6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000001d73e : jrcxz 0x2000001d7a1 ; ret
0x000002000001db95 : jrcxz 0x2000001dbde ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000001e51b : jrcxz 0x2000001e565 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000001e8e1 : jrcxz 0x2000001e91d ; rol bl, 0x49 ; mov eax, ecx ; ret
0x000002000001eded : jrcxz 0x2000001ee35 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000001fb4c : jrcxz 0x2000001fb96 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000001fc26 : jrcxz 0x2000001fc87 ; ret
0x0000020000020770 : jrcxz 0x200000207d1 ; ret
0x0000020000022375 : jrcxz 0x200000223c1 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000022dc0 : jrcxz 0x20000022e0c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000022f3f : jrcxz 0x20000022f8b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000023d56 : jrcxz 0x20000023da0 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000025488 : jrcxz 0x200000254d1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000272e9 : jrcxz 0x20000027331 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000029515 : jrcxz 0x2000002955e ; pop rsi ; pop r13 ; pop rdi ; ret
0x0000020000029716 : jrcxz 0x20000029777 ; ret
0x0000020000029cc4 : jrcxz 0x20000029d15 ; mov ebx, dword ptr [rsp + 0x10] ; pop rdi ; ret
0x000002000002a521 : jrcxz 0x2000002a56d ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000002a832 : jrcxz 0x2000002a895 ; ret
0x000002000002c93a : jrcxz 0x2000002c986 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000002e297 : jrcxz 0x2000002e2fa ; ret
0x0000020000030d03 : jrcxz 0x20000030d4c ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000032fe5 : jrcxz 0x2000003302f ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000034905 : jrcxz 0x2000003494d ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000035f6a : jrcxz 0x20000035fcd ; ret
0x0000020000038956 : jrcxz 0x2000003899e ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000038dd6 : jrcxz 0x20000038e37 ; ret
0x000002000003a02e : jrcxz 0x2000003a07a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000003b927 : jrcxz 0x2000003b971 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000003c1e5 : jrcxz 0x2000003c22f ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000003d0e4 : jrcxz 0x2000003d12c ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000003d4be : jrcxz 0x2000003d507 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000003d5a0 : jrcxz 0x2000003d5e8 ; pop rdi ; pop rdi ; pop rsi ; ret
0x000002000003f0d9 : jrcxz 0x2000003f122 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000003fcf0 : jrcxz 0x2000003fd39 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000041fdc : jrcxz 0x2000004203d ; ret
0x0000020000045264 : jrcxz 0x200000452c7 ; ret
0x000002000004698b : jrcxz 0x200000469d7 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000047adf : jrcxz 0x20000047b25 ; pop rsi ; ret
0x0000020000047c1e : jrcxz 0x20000047c68 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000048601 : jrcxz 0x20000048664 ; ret
0x000002000004ce9a : jrcxz 0x2000004cee6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000004d850 : jrcxz 0x2000004d898 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000004e073 : jrcxz 0x2000004e0bb ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000004f39a : jrcxz 0x2000004f3e6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000055913 : jrcxz 0x20000055974 ; ret
0x000002000005d244 : jrcxz 0x2000005d28d ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000005fa6b : jrcxz 0x2000005fab4 ; pop rsi ; pop r13 ; pop rbp ; ret
0x0000020000063208 : jrcxz 0x20000063252 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000006ed11 : jrcxz 0x2000006ed74 ; ret
0x000002000007a940 : jrcxz 0x2000007a988 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000007b6ac : jrcxz 0x2000007b63b ; ret
0x000002000007bab9 : jrcxz 0x2000007bb1a ; ret
0x000002000007bd67 : jrcxz 0x2000007bdb1 ; pop rsi ; pop r13 ; pop r12 ; ret
0x0000020000084047 : jrcxz 0x200000840a8 ; ret
0x00000200000842bf : jrcxz 0x20000084309 ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000088d98 : jrcxz 0x20000088d8e ; cmovs ecx, dword ptr [rbx - 0x74b797ae] ; ret 0x2349
0x000002000008a079 : jrcxz 0x2000008a0dc ; ret
0x00000200000b59e5 : jrcxz 0x200000b5a31 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000b6cfc : jrcxz 0x200000b6d48 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000bf73e : jrcxz 0x200000bf78a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000bfa4c : jrcxz 0x200000bfa98 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000d1f18 : jrcxz 0x200000d1f62 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200000d95ec : jrcxz 0x200000d95ac ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000d9772 : jrcxz 0x200000d9784 ; add byte ptr [rax + 0x3b], cl ; ret 0x1273
0x00000200000dc7f6 : jrcxz 0x200000dc83e ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200000df4c9 : jrcxz 0x200000df52c ; ret
0x00000200000e1757 : jrcxz 0x200000e17ba ; ret
0x00000200000e3401 : jrcxz 0x200000e3464 ; ret
0x00000200000e57e2 : jrcxz 0x200000e582c ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200000e6d1e : jrcxz 0x200000e6d6a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000ed501 : jrcxz 0x200000ed562 ; ret
0x00000200000ee8a4 : jrcxz 0x200000ee907 ; ret
0x00000200000efd8e : jrcxz 0x200000efdf1 ; ret
0x00000200000efe14 : jrcxz 0x200000efe5c ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200000f00fc : jrcxz 0x200000f015f ; ret
0x00000200000f0587 : jrcxz 0x200000f05cd ; pop rsi ; ret
0x00000200000f0d12 : jrcxz 0x200000f0d75 ; ret
0x00000200000f1ab5 : jrcxz 0x200000f1b18 ; ret
0x00000200000f1dbf : jrcxz 0x200000f1e20 ; ret
0x00000200000f258c : jrcxz 0x200000f25ef ; ret
0x00000200000f2eb1 : jrcxz 0x200000f2efa ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000f3583 : jrcxz 0x200000f35e6 ; ret
0x00000200000f538a : jrcxz 0x200000f53ed ; ret
0x00000200000f54c4 : jrcxz 0x200000f5510 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000f6843 : jrcxz 0x200000f68a4 ; ret
0x00000200000f6ed0 : jrcxz 0x200000f6f1a ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200000f74e6 : jrcxz 0x200000f752f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000f8456 : jrcxz 0x200000f849f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000f885d : jrcxz 0x200000f88a6 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000fcab8 : jrcxz 0x200000fcb01 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000fe01c : jrcxz 0x200000fe066 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000102619 : jrcxz 0x20000102662 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000102741 : jrcxz 0x2000010278d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000102872 : jrcxz 0x200001028be ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000104706 : jrcxz 0x2000010474f ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000105035 : jrcxz 0x20000105096 ; ret
0x00000200001053a3 : jrcxz 0x20000105406 ; ret
0x0000020000106ca4 : jrcxz 0x20000106d07 ; ret
0x0000020000107f66 : jrcxz 0x20000107fac ; pop rsi ; ret
0x0000020000108698 : jrcxz 0x200001086e1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000010bdcc : jrcxz 0x2000010be2d ; ret
0x000002000010c41b : jrcxz 0x2000010c47c ; ret
0x000002000010ff8a : jrcxz 0x2000010ffeb ; ret
0x00000200001100b3 : jrcxz 0x200001100ff ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000110c0d : jrcxz 0x20000110c6e ; ret
0x0000020000110d63 : jrcxz 0x20000110daf ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000111404 : jrcxz 0x2000011144d ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000011175f : jrcxz 0x200001117c0 ; ret
0x0000020000111912 : jrcxz 0x2000011195a ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001121a8 : jrcxz 0x20000112209 ; ret
0x0000020000112449 : jrcxz 0x20000112492 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000112b7f : jrcxz 0x20000112be0 ; ret
0x000002000011315e : jrcxz 0x200001131a6 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000113620 : jrcxz 0x20000113681 ; ret
0x0000020000113b21 : jrcxz 0x20000113b69 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000113c45 : jrcxz 0x20000113c8d ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000113dd7 : jrcxz 0x20000113e3a ; ret
0x0000020000113f13 : jrcxz 0x20000113f5c ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000114840 : jrcxz 0x200001148a1 ; ret
0x0000020000114a89 : jrcxz 0x20000114aea ; ret
0x0000020000114b33 : jrcxz 0x20000114b7c ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000116e8c : jrcxz 0x20000116eed ; ret
0x0000020000116fd8 : jrcxz 0x20000117021 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011753c : jrcxz 0x2000011759d ; ret
0x0000020000117fa5 : jrcxz 0x20000117fed ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011c6d6 : jrcxz 0x2000011c737 ; ret
0x000002000011c9aa : jrcxz 0x2000011ca0b ; ret
0x000002000011cba2 : jrcxz 0x2000011cbeb ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011da21 : jrcxz 0x2000011da69 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000011de53 : jrcxz 0x2000011de9c ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000011df23 : jrcxz 0x2000011df6c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001215df : jrcxz 0x2000012162b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001250ea : jrcxz 0x2000012514d ; ret
0x0000020000125852 : jrcxz 0x2000012589b ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000126ad5 : jrcxz 0x20000126b1e ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000012729f : jrcxz 0x200001272e8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000127ed1 : jrcxz 0x20000127f19 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000128ae4 : jrcxz 0x20000128b2f ; pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000012a3c9 : jrcxz 0x2000012a42c ; ret
0x000002000012a72b : jrcxz 0x2000012a777 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000012afdf : jrcxz 0x2000012b042 ; ret
0x000002000012c350 : jrcxz 0x2000012c399 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000012cd9b : jrcxz 0x2000012cde7 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000012ec4d : jrcxz 0x2000012ecae ; ret
0x000002000012f2e3 : jrcxz 0x2000012f32c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000013072f : jrcxz 0x20000130790 ; ret
0x00000200001309f0 : jrcxz 0x20000130a3c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000132340 : jrcxz 0x200001323a1 ; ret
0x00000200001325b7 : jrcxz 0x200001325ff ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001328b1 : jrcxz 0x20000132914 ; ret
0x0000020000132c0a : jrcxz 0x20000132c56 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001338ab : jrcxz 0x200001338fb ; mov ebx, dword ptr [rsp + 8] ; ret
0x00000200001341af : jrcxz 0x200001341fd ; mov eax, edx ; ret
0x00000200001341af : jrcxz 0x200001341fe ; mov eax, edx ; ret
0x000002000013a6cf : jrcxz 0x2000013a730 ; ret
0x000002000013b3fd : jrcxz 0x2000013b449 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000013cde4 : jrcxz 0x2000013ce47 ; ret
0x00000200001491ed : jrcxz 0x2000014923b ; mov eax, edx ; pop rbx ; ret
0x00000200001491ed : jrcxz 0x2000014923d ; mov eax, edx ; pop rbx ; ret
0x0000020000149839 : jrcxz 0x2000014983f ; add byte ptr [rax], al ; ret
0x00000200001703df : jrcxz 0x20000170428 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001783da : jrcxz 0x200001783cd ; push rsi ; ret 0xf08
0x000002000017d644 : jrcxz 0x2000017d692 ; mov eax, ecx ; ret
0x00000200001a0d7d : jrcxz 0x200001a0dc6 ; pop rsi ; pop r13 ; pop rdi ; ret
0x00000200001a156e : jrcxz 0x200001a15b7 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001a4b08 : jrcxz 0x200001a4b51 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001a6cc7 : jrcxz 0x200001a6d10 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001a74e4 : jrcxz 0x200001a7545 ; ret
0x00000200001a92ea : jrcxz 0x200001a9333 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001aafa5 : jrcxz 0x200001ab006 ; ret
0x00000200001ab0f1 : jrcxz 0x200001ab13d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001ab3f4 : jrcxz 0x200001ab457 ; ret
0x00000200001ab9a1 : jrcxz 0x200001ab9ea ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ac08f : jrcxz 0x200001ac0d8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ac1dc : jrcxz 0x200001ac225 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ac3f8 : jrcxz 0x200001ac440 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001ace42 : jrcxz 0x200001ace8b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ad3e1 : jrcxz 0x200001ad444 ; ret
0x00000200001ad4ce : jrcxz 0x200001ad51a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001ad6de : jrcxz 0x200001ad727 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001add69 : jrcxz 0x200001addb2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ae3dc : jrcxz 0x200001ae43f ; ret
0x00000200001ae70c : jrcxz 0x200001ae76f ; ret
0x00000200001ae9b5 : jrcxz 0x200001ae9fd ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001aeb41 : jrcxz 0x200001aeba2 ; ret
0x00000200001af220 : jrcxz 0x200001af283 ; ret
0x00000200001af899 : jrcxz 0x200001af8e3 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200001b0329 : jrcxz 0x200001b038c ; ret
0x00000200001b04d3 : jrcxz 0x200001b0536 ; ret
0x00000200001b05a5 : jrcxz 0x200001b0608 ; ret
0x00000200001b0cae : jrcxz 0x200001b0cf4 ; pop rsi ; ret
0x00000200001b10c8 : jrcxz 0x200001b1111 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001b1f63 : jrcxz 0x200001b1fc4 ; ret
0x00000200001b2463 : jrcxz 0x200001b24af ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001b2627 : jrcxz 0x200001b268a ; ret
0x00000200001b3df5 : jrcxz 0x200001b3e18 ; add al, ch ; ret
0x00000200001b3df4 : jrcxz 0x200001b3e19 ; add al, ch ; ret
0x00000200001b440a : jrcxz 0x200001b4453 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001b8caa : jrcxz 0x200001b8cf2 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001b988d : jrcxz 0x200001b98d9 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200001ba62b : jrcxz 0x200001ba68e ; ret
0x00000200001ba6d5 : jrcxz 0x200001ba738 ; ret
0x00000200001ba757 : jrcxz 0x200001ba7ba ; ret
0x00000200001ba7c4 : jrcxz 0x200001ba827 ; ret
0x00000200001bb446 : jrcxz 0x200001bb4a9 ; ret
0x00000200001bc57c : jrcxz 0x200001bc5c2 ; pop rdi ; ret
0x00000200001bccaa : jrcxz 0x200001bcd0b ; ret
0x00000200001bd0f7 : jrcxz 0x200001bd158 ; ret
0x00000200001bd82e : jrcxz 0x200001bd88f ; ret
0x00000200001c038e : jrcxz 0x200001c03f1 ; ret
0x00000200001c2cad : jrcxz 0x200001c2d0e ; ret
0x00000200001c2fcc : jrcxz 0x200001c3015 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001c42a9 : jrcxz 0x200001c42b6 ; jmp 0x1ffc2a688b5
0x00000200001c486a : jrcxz 0x200001c48cb ; ret
0x00000200001c4d77 : jrcxz 0x200001c4dc3 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001c58a2 : jrcxz 0x200001c58eb ; pop rdi ; pop r14 ; pop rcx ; ret
0x00000200001c5d90 : jrcxz 0x200001c5ddb ; pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x00000200001c5fd5 : jrcxz 0x200001c6036 ; ret
0x00000200001c65e2 : jrcxz 0x200001c662e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001c686f : jrcxz 0x200001c68b7 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001c7887 : jrcxz 0x200001c78e8 ; ret
0x00000200001c7a0a : jrcxz 0x200001c7a56 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001c9d3b : jrcxz 0x200001c9d9e ; ret
0x00000200001cb459 : jrcxz 0x200001cb4bc ; ret
0x00000200001cccec : jrcxz 0x200001ccd34 ; pop rdi ; pop rdi ; pop rsi ; ret
0x00000200001cd1f0 : jrcxz 0x200001cd253 ; ret
0x00000200001cf03b : jrcxz 0x200001cf09e ; ret
0x00000200001cf1b2 : jrcxz 0x200001cf1b9 ; add rsp, 0x48 ; ret
0x00000200001cf1b1 : jrcxz 0x200001cf1ba ; add rsp, 0x48 ; ret
0x00000200001cfcfe : jrcxz 0x200001cfd05 ; add rsp, 0x48 ; ret
0x00000200001d045d : jrcxz 0x200001d04a5 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001d167c : jrcxz 0x200001d16c8 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200001d2cfc : jrcxz 0x200001d2d5d ; ret
0x00000200001d53b6 : jrcxz 0x200001d53e4 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001d5613 : jrcxz 0x200001d565c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001d690f : jrcxz 0x200001d6972 ; ret
0x00000200001d6d1f : jrcxz 0x200001d6d6b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001d8037 : jrcxz 0x200001d807f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001d8d74 : jrcxz 0x200001d8dd5 ; ret
0x00000200001da607 : jrcxz 0x200001da653 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001dc485 : jrcxz 0x200001dc4ce ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001dcd91 : jrcxz 0x200001dcdf2 ; ret
0x00000200001e04de : jrcxz 0x200001e0527 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001e0d9b : jrcxz 0x200001e0dfc ; ret
0x00000200001e0eb7 : jrcxz 0x200001e0f18 ; ret
0x00000200001e17d2 : jrcxz 0x200001e1833 ; ret
0x00000200001e1a24 : jrcxz 0x200001e1a6d ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001e1ca4 : jrcxz 0x200001e1cea ; pop rsi ; ret
0x00000200001e23c4 : jrcxz 0x200001e240c ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001e291d : jrcxz 0x200001e2969 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200001e3144 : jrcxz 0x200001e31a5 ; ret
0x00000200001e337b : jrcxz 0x200001e33c4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001e3780 : jrcxz 0x200001e37e1 ; ret
0x00000200001e3908 : jrcxz 0x200001e396b ; ret
0x00000200001e3b57 : jrcxz 0x200001e3bba ; ret
0x00000200001e3eaf : jrcxz 0x200001e3f12 ; ret
0x00000200001e415d : jrcxz 0x200001e41a6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001e42db : jrcxz 0x200001e4327 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001e47a0 : jrcxz 0x200001e4803 ; ret
0x00000200001e4842 : jrcxz 0x200001e488a ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001e7aec : jrcxz 0x200001e7b3c ; add esp, 0x20 ; pop rbx ; ret
0x00000200001eaa1a : jrcxz 0x200001eaa60 ; pop rsi ; ret
0x00000200001eae1b : jrcxz 0x200001eae7c ; ret
0x00000200001eb1dd : jrcxz 0x200001eb23e ; ret
0x00000200001eb484 : jrcxz 0x200001eb4cc ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001eb579 : jrcxz 0x200001eb5c1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001eb650 : jrcxz 0x200001eb6b1 ; ret
0x00000200001eb715 : jrcxz 0x200001eb776 ; ret
0x00000200001ebd0a : jrcxz 0x200001ebd6b ; ret
0x00000200001ec046 : jrcxz 0x200001ec08e ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001ec65e : jrcxz 0x200001ec6a6 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001ecca3 : jrcxz 0x200001eccef ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200001ed299 : jrcxz 0x200001ed2fa ; ret
0x00000200001ed4b3 : jrcxz 0x200001ed514 ; ret
0x00000200001ed68b : jrcxz 0x200001ed6ee ; ret
0x00000200001edb67 : jrcxz 0x200001edbc8 ; ret
0x00000200001ede46 : jrcxz 0x200001ede8e ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001edf96 : jrcxz 0x200001edff7 ; ret
0x00000200001ee0fd : jrcxz 0x200001ee145 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001ee1df : jrcxz 0x200001ee240 ; ret
0x00000200001ee378 : jrcxz 0x200001ee3c4 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001ee623 : jrcxz 0x200001ee66f ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200001ef16c : jrcxz 0x200001ef1cf ; ret
0x00000200001f03fa : jrcxz 0x200001f0443 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001f0725 : jrcxz 0x200001f0786 ; ret
0x00000200001f1602 : jrcxz 0x200001f1663 ; ret
0x00000200001f1721 : jrcxz 0x200001f1767 ; pop rsi ; ret
0x00000200001f17fb : jrcxz 0x200001f185c ; ret
0x00000200001f31c2 : jrcxz 0x200001f3225 ; ret
0x00000200001f6ecf : jrcxz 0x200001f6f32 ; ret
0x00000200001fac6e : jrcxz 0x200001facd1 ; ret
0x00000200001fad9b : jrcxz 0x200001fadfe ; ret
0x00000200001fae47 : jrcxz 0x200001faeaa ; ret
0x00000200001fc220 : jrcxz 0x200001fc26a ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200001fe359 : jrcxz 0x200001fe3a1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001fe459 : jrcxz 0x200001fe4ba ; ret
0x0000020000201266 : jrcxz 0x200002012af ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200002025b2 : jrcxz 0x200002025fe ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000203062 : jrcxz 0x20000203065 ; ret
0x0000020000204174 : jrcxz 0x200002041c0 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200002045e8 : jrcxz 0x20000204634 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000204d64 : jrcxz 0x20000204d6b ; add rsp, 0x38 ; ret
0x0000020000205a91 : jrcxz 0x20000205af2 ; ret
0x00000200002061f1 : jrcxz 0x20000206252 ; ret
0x00000200002066d6 : jrcxz 0x2000020671f ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000206f61 : jrcxz 0x20000206faa ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000208420 : jrcxz 0x2000020846c ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000208e2a : jrcxz 0x20000208e76 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000209c32 : jrcxz 0x20000209c7c ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000209fb8 : jrcxz 0x2000020a019 ; ret
0x000002000020b709 : jrcxz 0x2000020b76a ; ret
0x000002000020bcf1 : jrcxz 0x2000020bd39 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000020c0f0 : jrcxz 0x2000020c139 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000020c241 : jrcxz 0x2000020c2a2 ; ret
0x000002000020c9ea : jrcxz 0x2000020ca34 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000020cc27 : jrcxz 0x2000020cc73 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000020de56 : jrcxz 0x2000020dea0 ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000210a1e : jrcxz 0x20000210a67 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000210c0c : jrcxz 0x20000210c54 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000210df9 : jrcxz 0x20000210e42 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000211056 : jrcxz 0x200002110b9 ; ret
0x0000020000211255 : jrcxz 0x200002112b6 ; ret
0x00000200002113a0 : jrcxz 0x200002113e8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000211449 : jrcxz 0x200002114ac ; ret
0x0000020000213045 : jrcxz 0x2000021308d ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000213a95 : jrcxz 0x20000213adb ; pop rsi ; ret
0x0000020000214f01 : jrcxz 0x20000214f62 ; ret
0x00000200002161fb : jrcxz 0x20000216247 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200002166b4 : jrcxz 0x200002166fd ; pop rsi ; pop r13 ; pop rbp ; ret
0x0000020000216b43 : jrcxz 0x20000216b4a ; add rsp, 0x28 ; ret
0x0000020000216cd4 : jrcxz 0x20000216d1d ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000217828 : jrcxz 0x2000021788b ; ret
0x0000020000218116 : jrcxz 0x20000218148 ; ret 0xc520
0x000002000021814a : jrcxz 0x2000021817c ; ret 0xc531
0x00000200002181d6 : jrcxz 0x20000218237 ; ret
0x000002000021c0d1 : jrcxz 0x2000021c134 ; ret
0x000002000021c1c5 : jrcxz 0x2000021c211 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000021c415 : jrcxz 0x2000021c45f ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000021cf8a : jrcxz 0x2000021cfed ; ret
0x000002000021d087 : jrcxz 0x2000021d0ea ; ret
0x000002000021d1d4 : jrcxz 0x2000021d21d ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000021d39d : jrcxz 0x2000021d3e9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000021ddc5 : jrcxz 0x2000021de0f ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000021ea1c : jrcxz 0x2000021ea7f ; ret
0x000002000021f14f : jrcxz 0x2000021f156 ; add rsp, 0x28 ; ret
0x000002000039aa8b : jrcxz 0x2000039aaec ; ret
0x000002000039bcd4 : jrcxz 0x2000039bd1a ; pop rsi ; ret
0x000002000039be8e : jrcxz 0x2000039bed7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000039d41a : jrcxz 0x2000039d463 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000039d59a : jrcxz 0x2000039d5fb ; ret
0x000002000039d6e8 : jrcxz 0x2000039d731 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000039d87b : jrcxz 0x2000039d8c3 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000039e6fa : jrcxz 0x2000039e742 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003a2405 : jrcxz 0x200003a244e ; pop rdi ; pop r14 ; pop rcx ; ret
0x00000200003a28b8 : jrcxz 0x200003a2904 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x00000200003a3273 : jrcxz 0x200003a32bf ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200003a3726 : jrcxz 0x200003a3787 ; ret
0x00000200003a65ce : jrcxz 0x200003a6631 ; ret
0x00000200003a66b5 : jrcxz 0x200003a6716 ; ret
0x00000200003ab417 : jrcxz 0x200003ab47a ; ret
0x00000200003abb0f : jrcxz 0x200003abb57 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003ac60c : jrcxz 0x200003ac66d ; ret
0x00000200003ace47 : jrcxz 0x200003ace90 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003add76 : jrcxz 0x200003addbf ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003aebc1 : jrcxz 0x200003aec0a ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003af616 : jrcxz 0x200003af677 ; ret
0x00000200003af7e0 : jrcxz 0x200003af829 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003b1a92 : jrcxz 0x200003b1adc ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003b246d : jrcxz 0x200003b24b7 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003b27f2 : jrcxz 0x200003b283b ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003b2b24 : jrcxz 0x200003b2b6d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003b2b74 : jrcxz 0x200003b2bd7 ; ret
0x00000200003b61c4 : jrcxz 0x200003b6227 ; ret
0x00000200003b6784 : jrcxz 0x200003b67cc ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200003b93a1 : jrcxz 0x200003b93e9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003b9712 : jrcxz 0x200003b9773 ; ret
0x00000200003bb3b9 : jrcxz 0x200003bb41c ; ret
0x00000200003bd4cf : jrcxz 0x200003bd51b ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003beaa5 : jrcxz 0x200003beaf1 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003c0679 : jrcxz 0x200003c06c3 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003c20b9 : jrcxz 0x200003c211c ; ret
0x00000200003c2de3 : jrcxz 0x200003c2e2d ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003c5158 : jrcxz 0x200003c51a4 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200003c5312 : jrcxz 0x200003c535b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003c79ad : jrcxz 0x200003c79f9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200003c7bd7 : jrcxz 0x200003c7c21 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003c7f2d : jrcxz 0x200003c7f77 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003c8034 : jrcxz 0x200003c807a ; pop rsi ; ret
0x00000200003c8160 : jrcxz 0x200003c81a9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003c8583 : jrcxz 0x200003c85cc ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003cb6c3 : jrcxz 0x200003cb724 ; ret
0x00000200003cdd26 : jrcxz 0x200003cdd6f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003cde16 : jrcxz 0x200003cde5e ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200003ce05f : jrcxz 0x200003ce0a5 ; pop rsi ; ret
0x00000200003ce44e : jrcxz 0x200003ce494 ; pop rsi ; ret
0x00000200003d58c6 : jrcxz 0x200003d5910 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003d5a4d : jrcxz 0x200003d5aae ; ret
0x00000200003d5d9a : jrcxz 0x200003d5de4 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003d7b41 : jrcxz 0x200003d7b8b ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003d8b1e : jrcxz 0x200003d8b66 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200003da497 : jrcxz 0x200003da4e1 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003dada9 : jrcxz 0x200003dad9e ; ret
0x00000200003dcd46 : jrcxz 0x200003dcd8e ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200003dce4b : jrcxz 0x200003dceac ; ret
0x00000200003dd217 : jrcxz 0x200003dd25d ; pop rsi ; ret
0x00000200003de683 : jrcxz 0x200003de6cc ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003de830 : jrcxz 0x200003de876 ; pop rsi ; ret
0x00000200003dfa23 : jrcxz 0x200003dfa6c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003e026f : jrcxz 0x200003e02b7 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200003e0326 : jrcxz 0x200003e0389 ; ret
0x00000200003e1a7b : jrcxz 0x200003e1ac7 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200003e260d : jrcxz 0x200003e2670 ; ret
0x00000200003e3a6b : jrcxz 0x200003e3ab7 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003e63e6 : jrcxz 0x200003e642f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003e64c7 : jrcxz 0x200003e64d1 ; add dh, dh ; ret
0x00000200003e7361 : jrcxz 0x200003e73c2 ; ret
0x00000200003e794c : jrcxz 0x200003e7995 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003e8b12 : jrcxz 0x200003e8b5b ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003e8cc5 : jrcxz 0x200003e8d26 ; ret
0x00000200003e9926 : jrcxz 0x200003e9972 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003ed0bd : jrcxz 0x200003ed109 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200003ee6a8 : jrcxz 0x200003ee6f1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003ef2e6 : jrcxz 0x200003ef32f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003ef935 : jrcxz 0x200003ef97e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003f0a18 : jrcxz 0x200003f0a61 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003f63b9 : jrcxz 0x200003f6401 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003f67fc : jrcxz 0x200003f6846 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003f69da : jrcxz 0x200003f6a20 ; pop rdi ; ret
0x00000200003f861b : jrcxz 0x200003f8665 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200003fa69e : jrcxz 0x200003fa6e4 ; pop rsi ; ret
0x00000200003fb33a : jrcxz 0x200003fb341 ; add rsp, 0x28 ; ret
0x00000200003fcdc2 : jrcxz 0x200003fce0c ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200003fd12f : jrcxz 0x200003fd178 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003fea74 : jrcxz 0x200003fead7 ; ret
0x00000200003ff31e : jrcxz 0x200003ff367 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200004009af : jrcxz 0x20000400a10 ; ret
0x0000020000402b9c : jrcxz 0x20000402be5 ; pop rsi ; pop r13 ; pop rbp ; ret
0x00000200004039c6 : jrcxz 0x20000403a0f ; pop rdi ; pop r14 ; pop rsi ; ret
0x0000020000404bc2 : jrcxz 0x20000404c0a ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000405a0c : jrcxz 0x20000405a6d ; ret
0x0000020000406349 : jrcxz 0x200004063ac ; ret
0x0000020000406fad : jrcxz 0x20000407010 ; ret
0x0000020000407826 : jrcxz 0x200004077e6 ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000407ffc : jrcxz 0x20000408048 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000040ad53 : jrcxz 0x2000040ad9c ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000040b670 : jrcxz 0x2000040b6ba ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000040bc0c : jrcxz 0x2000040bc55 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000040c808 : jrcxz 0x2000040c84e ; pop rsi ; ret
0x000002000040cc8e : jrcxz 0x2000040ccda ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000040dfa4 : jrcxz 0x2000040dfea ; pop rdi ; ret
0x000002000040e4fd : jrcxz 0x2000040e547 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000040f659 : jrcxz 0x2000040f68e ; clc ; inc dword ptr [rcx + 3] ; ret
0x000002000040f89c : jrcxz 0x2000040f8ff ; ret
0x00000200004108ac : jrcxz 0x200004108f5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004113cb : jrcxz 0x20000411417 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000411e70 : jrcxz 0x20000411eb9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004126f1 : jrcxz 0x20000412752 ; ret
0x0000020000412bc4 : jrcxz 0x20000412c0d ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000041312b : jrcxz 0x20000413173 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004148b6 : jrcxz 0x20000414900 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000414ec7 : jrcxz 0x20000414f10 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000415e23 : jrcxz 0x20000415e6c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000041655b : jrcxz 0x200004165a1 ; pop rsi ; ret
0x0000020000416d5d : jrcxz 0x20000416da6 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004171fe : jrcxz 0x2000041724a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000041763d : jrcxz 0x20000417686 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000417a91 : jrcxz 0x20000417adb ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000417c76 : jrcxz 0x20000417cbe ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200004187bf : jrcxz 0x2000041880b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000418c27 : jrcxz 0x20000418c70 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004198e7 : jrcxz 0x20000419930 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000419f54 : jrcxz 0x20000419fb7 ; ret
0x000002000041bdd7 : jrcxz 0x2000041be3a ; ret
0x000002000041c854 : jrcxz 0x2000041c89c ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000041cae2 : jrcxz 0x2000041cb43 ; ret
0x000002000041cfe7 : jrcxz 0x2000041d033 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000041d48f : jrcxz 0x2000041d4d8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000041d953 : jrcxz 0x2000041d9b4 ; ret
0x000002000041d953 : jrcxz 0x2000041d9b8 ; ret
0x000002000041e9b1 : jrcxz 0x2000041ea12 ; ret
0x000002000041efd7 : jrcxz 0x2000041f038 ; ret
0x00000200004201a3 : jrcxz 0x200004201ef ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000420c41 : jrcxz 0x20000420c89 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000420d62 : jrcxz 0x20000420dae ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000421be1 : jrcxz 0x20000421c2d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000042204e : jrcxz 0x200004220af ; ret
0x0000020000423688 : jrcxz 0x200004236d4 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004237e7 : jrcxz 0x20000423830 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000424a09 : jrcxz 0x20000424a4f ; pop rdi ; ret
0x0000020000428486 : jrcxz 0x200004284cf ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000429c72 : jrcxz 0x20000429cbe ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000042a3ce : jrcxz 0x2000042a417 ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000042a77a : jrcxz 0x2000042a7db ; ret
0x000002000042a992 : jrcxz 0x2000042a9f5 ; ret
0x000002000042c37b : jrcxz 0x2000042c3c4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000042e537 : jrcxz 0x2000042e580 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000042eb9a : jrcxz 0x2000042ebfd ; ret
0x000002000043022f : jrcxz 0x2000043027b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000043154d : jrcxz 0x20000431599 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000436389 : jrcxz 0x200004363d5 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004383d8 : jrcxz 0x2000043843b ; ret
0x000002000043a9da : jrcxz 0x2000043aa26 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000043ac7f : jrcxz 0x2000043acc7 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000043e249 : jrcxz 0x2000043e295 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000043eadc : jrcxz 0x2000043eb26 ; pop rsi ; pop r13 ; pop r12 ; ret
0x00000200004425fa : jrcxz 0x2000044265d ; ret
0x0000020000443fc4 : jrcxz 0x2000044400a ; pop rsi ; ret
0x00000200004445e0 : jrcxz 0x20000444629 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000447f95 : jrcxz 0x20000447fdf ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000044cac6 : jrcxz 0x2000044cb0c ; pop rsi ; ret
0x000002000044cf49 : jrcxz 0x2000044cf93 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000044d4b3 : jrcxz 0x2000044d516 ; ret
0x000002000044d602 : jrcxz 0x2000044d64a ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000044e21f : jrcxz 0x2000044e282 ; ret
0x000002000044e2ea : jrcxz 0x2000044e332 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000044eaaf : jrcxz 0x2000044eaf5 ; pop rsi ; ret
0x000002000044f2fc : jrcxz 0x2000044f345 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000044f3d6 : jrcxz 0x2000044f421 ; mov dword ptr [rcx + 0x7c], eax ; ret
0x000002000044f7e8 : jrcxz 0x2000044f831 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000450084 : jrcxz 0x200004500ce ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000045085e : jrcxz 0x200004508aa ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000451297 : jrcxz 0x200004512fa ; ret
0x0000020000451813 : jrcxz 0x20000451876 ; ret
0x0000020000454dc7 : jrcxz 0x20000454e2a ; ret
0x0000020000456d13 : jrcxz 0x20000456d59 ; pop rdi ; ret
0x000002000045cb3b : jrcxz 0x2000045cb85 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000045e1e1 : jrcxz 0x2000045e22b ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000045e530 : jrcxz 0x2000045e593 ; ret
0x000002000045f37c : jrcxz 0x2000045f3c6 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000045f6a0 : jrcxz 0x2000045f6ea ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004607fb : jrcxz 0x20000460844 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000046160c : jrcxz 0x2000046166f ; ret
0x00000200004626f9 : jrcxz 0x20000462745 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004627bb : jrcxz 0x20000462807 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000463499 : jrcxz 0x200004634e2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000463629 : jrcxz 0x20000463675 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000463aa7 : jrcxz 0x20000463af0 ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200004644b6 : jrcxz 0x20000464517 ; ret
0x0000020000464544 : jrcxz 0x2000046458d ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000465079 : jrcxz 0x200004650dc ; ret
0x0000020000465176 : jrcxz 0x200004651bf ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000465d04 : jrcxz 0x20000465d4c ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000046670e : jrcxz 0x2000046676f ; ret
0x0000020000466d13 : jrcxz 0x20000466d76 ; ret
0x0000020000466e91 : jrcxz 0x20000466ef4 ; ret
0x0000020000467503 : jrcxz 0x20000467566 ; ret
0x0000020000467c5b : jrcxz 0x20000467ca5 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000468f2e : jrcxz 0x20000468f77 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004694cb : jrcxz 0x20000469514 ; pop rdi ; pop r13 ; pop rbp ; ret
0x0000020000469acc : jrcxz 0x20000469b2d ; ret
0x0000020000469b9c : jrcxz 0x20000469bfd ; ret
0x000002000046a293 : jrcxz 0x2000046a2dc ; pop rdi ; pop r13 ; pop rbp ; ret
0x000002000046aabd : jrcxz 0x2000046ab09 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000046b741 : jrcxz 0x2000046b78d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000046e357 : jrcxz 0x2000046e3a0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004708c6 : jrcxz 0x20000470910 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000471ff4 : jrcxz 0x20000472040 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000472405 : jrcxz 0x2000047244b ; pop rsi ; ret
0x0000020000472e1b : jrcxz 0x20000472e61 ; pop rsi ; ret
0x0000020000475620 : jrcxz 0x20000475668 ; pop rdi ; pop rdi ; pop rsi ; ret
0x0000020000475ccf : jrcxz 0x20000475d15 ; pop rsi ; ret
0x0000020000475e40 : jrcxz 0x20000475e89 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000478796 : jrcxz 0x200004787e2 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000478d33 : jrcxz 0x20000478d7d ; pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000479d1a : jrcxz 0x20000479d7d ; ret
0x000002000047df23 : jrcxz 0x2000047df6c ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000047e45f : jrcxz 0x2000047e4c2 ; ret
0x000002000047e70c : jrcxz 0x2000047e755 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000047ef27 : jrcxz 0x2000047ef6d ; pop rsi ; ret
0x000002000047f116 : jrcxz 0x2000047f15e ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004815a9 : jrcxz 0x2000048160a ; ret
0x0000020000482a4f : jrcxz 0x20000482a52 ; ret 0xb6eb
0x0000020000483bc0 : jrcxz 0x20000483c06 ; pop rsi ; ret
0x0000020000486f9c : jrcxz 0x20000486fe5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004883c7 : jrcxz 0x20000488413 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000048ac39 : jrcxz 0x2000048ac0a ; ret
0x000002000048b2dd : jrcxz 0x2000048b329 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000048f348 : jrcxz 0x2000048f394 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000494d2b : jrcxz 0x20000494d75 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000049777a : jrcxz 0x20000497780 ; mov rcx, rbx ; call 0x200000c2548
0x0000020000498f57 : jrcxz 0x20000498fba ; ret
0x0000020000498f6b : jrcxz 0x20000498fce ; ret
0x0000020000499ba6 : jrcxz 0x20000499bf0 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000049efd0 : jrcxz 0x2000049f016 ; pop rsi ; ret
0x000002000049f6d0 : jrcxz 0x2000049f71c ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004ba356 : jrcxz 0x200004ba3a2 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200004bf147 : jrcxz 0x200004bf191 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004bf31d : jrcxz 0x200004bf363 ; pop rdi ; ret
0x00000200004bf98a : jrcxz 0x200004bf9d4 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004c15a2 : jrcxz 0x200004c15ec ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004c2076 : jrcxz 0x200004c207c ; call 0x200000e8155
0x00000200004c307f : jrcxz 0x200004c30c8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004c3f8c : jrcxz 0x200004c3fed ; ret
0x00000200004c400b : jrcxz 0x200004c406c ; ret
0x00000200004c41d9 : jrcxz 0x200004c4221 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c4956 : jrcxz 0x200004c499f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c74af : jrcxz 0x200004c74f8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004c75a0 : jrcxz 0x200004c75e8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c798d : jrcxz 0x200004c79d3 ; pop rsi ; ret
0x00000200004c8e4c : jrcxz 0x200004c8e94 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c932a : jrcxz 0x200004c9376 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004c983d : jrcxz 0x200004c9886 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004c998d : jrcxz 0x200004c99d3 ; pop rsi ; ret
0x00000200004cad5f : jrcxz 0x200004cada8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004cadfd : jrcxz 0x200004cae3e ; ret 0x3aff
0x00000200004cb1b7 : jrcxz 0x200004cb1bf ; je 0x200004cb1c7 ; call 0x200000eec53
0x00000200004cb1f9 : jrcxz 0x200004cb23f ; pop rdi ; ret
0x00000200004cb6ed : jrcxz 0x200004cb735 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004cb7dd : jrcxz 0x200004cb826 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004cbbac : jrcxz 0x200004cbbf8 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004cd130 : jrcxz 0x200004cd17c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004d020f : jrcxz 0x200004d0258 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004d03c9 : jrcxz 0x200004d042a ; ret
0x00000200004d0669 : jrcxz 0x200004d06b2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004d083e : jrcxz 0x200004d0887 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004d0b53 : jrcxz 0x200004d0b9c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004d0e99 : jrcxz 0x200004d0efc ; ret
0x00000200004d1194 : jrcxz 0x200004d11f5 ; ret
0x00000200004d1b46 : jrcxz 0x200004d1b8f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004d2f04 : jrcxz 0x200004d2f4c ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004d37c0 : jrcxz 0x200004d3821 ; ret
0x00000200004d3871 : jrcxz 0x200004d38d2 ; ret
0x00000200004d3be0 : jrcxz 0x200004d3c2c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004d5b3d : jrcxz 0x200004d5b9e ; ret
0x00000200004d69f1 : jrcxz 0x200004d6a3b ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004d6e43 : jrcxz 0x200004d6ea6 ; ret
0x00000200004d7970 : jrcxz 0x200004d79b9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004d7fe2 : jrcxz 0x200004d802b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004d8217 : jrcxz 0x200004d8263 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004d86e6 : jrcxz 0x200004d8747 ; ret
0x00000200004d8926 : jrcxz 0x200004d8972 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004d8fd0 : jrcxz 0x200004d9032 ; ret
0x00000200004dbdb0 : jrcxz 0x200004dbdf9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004deb2e : jrcxz 0x200004deb91 ; ret
0x00000200004def99 : jrcxz 0x200004deffc ; ret
0x00000200004e03c4 : jrcxz 0x200004e0410 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004e05d6 : jrcxz 0x200004e0639 ; ret
0x00000200004e0d1f : jrcxz 0x200004e0d65 ; pop rsi ; ret
0x00000200004e1803 : jrcxz 0x200004e1866 ; ret
0x00000200004e1f40 : jrcxz 0x200004e1f86 ; pop rsi ; ret
0x00000200004e23ce : jrcxz 0x200004e2431 ; ret
0x00000200004e31b4 : jrcxz 0x200004e3217 ; ret
0x00000200004e3728 : jrcxz 0x200004e3774 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004e39c5 : jrcxz 0x200004e3a0e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004e3acd : jrcxz 0x200004e3b30 ; ret
0x00000200004e45cd : jrcxz 0x200004e4630 ; ret
0x00000200004e4812 : jrcxz 0x200004e485e ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200004e5a7f : jrcxz 0x200004e5ae2 ; ret
0x00000200004e5ea2 : jrcxz 0x200004e5f03 ; ret
0x00000200004e75bb : jrcxz 0x200004e7603 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004e7b64 : jrcxz 0x200004e7bb0 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004e839c : jrcxz 0x200004e83e5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004e8fbd : jrcxz 0x200004e9006 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004eb50c : jrcxz 0x200004eb56f ; ret
0x00000200004ebbe1 : jrcxz 0x200004ebc2b ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200004ebd65 : jrcxz 0x200004ebdc6 ; ret
0x00000200004ec0a7 : jrcxz 0x200004ec108 ; ret
0x00000200004ec767 : jrcxz 0x200004ec7b0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004ec995 : jrcxz 0x200004ec9f6 ; ret
0x00000200004ecf07 : jrcxz 0x200004ecf50 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004ed755 : jrcxz 0x200004ed79b ; pop rsi ; ret
0x00000200004ed82c : jrcxz 0x200004ed88f ; ret
0x00000200004edaf8 : jrcxz 0x200004edb59 ; ret
0x00000200004edd7a : jrcxz 0x200004edddb ; ret
0x00000200004ede6e : jrcxz 0x200004edecf ; ret
0x00000200004ee3da : jrcxz 0x200004ee43d ; ret
0x00000200004eeef6 : jrcxz 0x200004eef3e ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004ef302 : jrcxz 0x200004ef365 ; ret
0x00000200004ef61f : jrcxz 0x200004ef667 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004f102f : jrcxz 0x200004f1092 ; ret
0x00000200004f1534 : jrcxz 0x200004f1597 ; ret
0x00000200004f15e6 : jrcxz 0x200004f162f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004f172b : jrcxz 0x200004f1777 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004f1e30 : jrcxz 0x200004f1e7c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004f2326 : jrcxz 0x200004f236e ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004f2c9f : jrcxz 0x200004f2ce8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004f31de : jrcxz 0x200004f3226 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004f34a9 : jrcxz 0x200004f34f2 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004f373f : jrcxz 0x200004f378b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004f39a9 : jrcxz 0x200004f39f2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004f4e29 : jrcxz 0x200004f4e71 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004f5062 : jrcxz 0x200004f50c3 ; ret
0x00000200004f5193 : jrcxz 0x200004f51df ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200004f5b71 : jrcxz 0x200004f5bd2 ; ret
0x00000200004f70d9 : jrcxz 0x200004f713a ; ret
0x00000200004f76d0 : jrcxz 0x200004f7731 ; ret
0x00000200004f7c05 : jrcxz 0x200004f7c66 ; ret
0x00000200004f7cfd : jrcxz 0x200004f7d49 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004f9128 : jrcxz 0x200004f916e ; pop rsi ; ret
0x00000200004f932d : jrcxz 0x200004f9379 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200004f969c : jrcxz 0x200004f96fd ; ret
0x00000200004f9fad : jrcxz 0x200004f9ff6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004fbe07 : jrcxz 0x200004fbe51 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200004fcc6d : jrcxz 0x200004fccb3 ; pop rsi ; ret
0x00000200004fcd06 : jrcxz 0x200004fcd69 ; ret
0x00000200004fd2e7 : jrcxz 0x200004fd32f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004fd485 : jrcxz 0x200004fd4e6 ; ret
0x00000200004fd72b : jrcxz 0x200004fd78c ; ret
0x00000200004fe374 : jrcxz 0x200004fe3d5 ; ret
0x00000200004ff2ec : jrcxz 0x200004ff34d ; ret
0x0000020000501597 : jrcxz 0x200005015f8 ; ret
0x0000020000502eb0 : jrcxz 0x20000502f13 ; ret
0x00000200005030e5 : jrcxz 0x2000050312d ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005034bc : jrcxz 0x20000503505 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000503827 : jrcxz 0x2000050388a ; ret
0x00000200005038f8 : jrcxz 0x20000503959 ; ret
0x00000200005040c8 : jrcxz 0x20000504111 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000504815 : jrcxz 0x20000504876 ; ret
0x00000200005048d2 : jrcxz 0x20000504933 ; ret
0x0000020000504960 : jrcxz 0x200005049c1 ; ret
0x0000020000504bd2 : jrcxz 0x20000504c1b ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000505792 : jrcxz 0x200005057db ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000505938 : jrcxz 0x20000505984 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000507a99 : jrcxz 0x20000507a25 ; ret
0x0000020000507ab2 : jrcxz 0x20000507b13 ; ret
0x0000020000507b96 : jrcxz 0x20000507bf9 ; ret
0x0000020000508338 : jrcxz 0x20000508381 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000509c42 : jrcxz 0x20000509ca3 ; ret
0x000002000050b632 : jrcxz 0x2000050b67b ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000050b9df : jrcxz 0x2000050ba40 ; ret
0x000002000050c36a : jrcxz 0x2000050c3b2 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000050c36a : jrcxz 0x2000050c3b6 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000050c640 : jrcxz 0x2000050c688 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000050c640 : jrcxz 0x2000050c68c ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000050caf3 : jrcxz 0x2000050cb3c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000050cc42 : jrcxz 0x2000050cc8b ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000050d0b5 : jrcxz 0x2000050d118 ; ret
0x000002000050e336 : jrcxz 0x2000050e399 ; ret
0x000002000050eeff : jrcxz 0x2000050ef48 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000050f309 : jrcxz 0x2000050f36a ; ret
0x000002000050f49b : jrcxz 0x2000050f4e4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000510b19 : jrcxz 0x20000510b62 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000510f62 : jrcxz 0x20000510fae ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200005110f3 : jrcxz 0x20000511156 ; ret
0x0000020000511a38 : jrcxz 0x20000511a99 ; ret
0x0000020000511aa6 : jrcxz 0x20000511aee ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000513c0e : jrcxz 0x20000513c71 ; ret
0x0000020000514780 : jrcxz 0x200005147e1 ; ret
0x0000020000516857 : jrcxz 0x2000051689f ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000517d79 : jrcxz 0x20000517d32 ; ret 0x85ff
0x0000020000517ea4 : jrcxz 0x20000517eec ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000051a021 : jrcxz 0x2000051a082 ; ret
0x000002000051a9cb : jrcxz 0x2000051aa13 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000051b1fe : jrcxz 0x2000051b247 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000051bc64 : jrcxz 0x2000051bcad ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000051c2c3 : jrcxz 0x2000051c30c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000051cd0c : jrcxz 0x2000051cd55 ; pop rdi ; pop r12 ; pop rbp ; ret
0x000002000051d6b6 : jrcxz 0x2000051d6fe ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000051e4d8 : jrcxz 0x2000051e539 ; ret
0x000002000051f7d4 : jrcxz 0x2000051f837 ; ret
0x000002000051f9c3 : jrcxz 0x2000051fa26 ; ret
0x000002000051fc76 : jrcxz 0x2000051fcd9 ; ret
0x00000200005201f1 : jrcxz 0x2000052023d ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000520a10 : jrcxz 0x20000520a73 ; ret
0x00000200005237a3 : jrcxz 0x20000523804 ; ret
0x0000020000526c2d : jrcxz 0x20000526c75 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000527079 : jrcxz 0x200005270dc ; ret
0x0000020000528260 : jrcxz 0x200005282ac ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000528bd7 : jrcxz 0x20000528c3a ; ret
0x000002000052a954 : jrcxz 0x2000052a99d ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000052c2af : jrcxz 0x2000052c2f8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000052c392 : jrcxz 0x2000052c3f5 ; ret
0x000002000052c62b : jrcxz 0x2000052c674 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000052c999 : jrcxz 0x2000052c9c4 ; ret 0x8bff
0x000002000052cdd9 : jrcxz 0x2000052ce22 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000052eaa4 : jrcxz 0x2000052eaec ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000052ee6b : jrcxz 0x2000052eeb4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000052f224 : jrcxz 0x2000052f270 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200005306aa : jrcxz 0x200005306f6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000530f5b : jrcxz 0x20000530fa4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000531daa : jrcxz 0x20000531e0d ; ret
0x000002000053201b : jrcxz 0x20000532067 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000053269a : jrcxz 0x200005326e4 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000533435 : jrcxz 0x2000053347e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005337ad : jrcxz 0x200005337f5 ; pop rbp ; pop rdi ; pop rbp ; ret
0x0000020000533878 : jrcxz 0x200005338d9 ; ret
0x000002000053399e : jrcxz 0x20000533a01 ; ret
0x0000020000533a5d : jrcxz 0x20000533ac0 ; ret
0x0000020000533cb0 : jrcxz 0x20000533d11 ; ret
0x00000200005342e2 : jrcxz 0x2000053432e ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000534457 : jrcxz 0x200005344b8 ; ret
0x0000020000534921 : jrcxz 0x2000053496d ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005356ec : jrcxz 0x20000535738 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005376d4 : jrcxz 0x2000053771c ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000537ef5 : jrcxz 0x20000537f41 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000053a218 : jrcxz 0x2000053a25e ; pop rdi ; ret
0x000002000053a57c : jrcxz 0x2000053a5dd ; ret
0x000002000053a92a : jrcxz 0x2000053a976 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000053ac03 : jrcxz 0x2000053ac64 ; ret
0x000002000053b7b4 : jrcxz 0x2000053b7fd ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000053b9b6 : jrcxz 0x2000053ba02 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000053c082 : jrcxz 0x2000053c0ce ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000053ce68 : jrcxz 0x2000053ceb4 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000053d166 : jrcxz 0x2000053d1c7 ; ret
0x000002000053d4e2 : jrcxz 0x2000053d4eb ; add al, ah ; dec dword ptr [rax - 0x75] ; ret
0x000002000053d76c : jrcxz 0x2000053d7b4 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000053dfd6 : jrcxz 0x2000053e01f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000053e965 : jrcxz 0x2000053e9c6 ; ret
0x000002000053ec4e : jrcxz 0x2000053ecaf ; ret
0x000002000053ef80 : jrcxz 0x2000053efca ; pop rsi ; pop r13 ; pop r12 ; ret
0x000002000053ff9b : jrcxz 0x2000053fffe ; ret
0x000002000054047f : jrcxz 0x200005404e2 ; ret
0x00000200005405b6 : jrcxz 0x200005405ff ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000540ae1 : jrcxz 0x20000540b2d ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000542306 : jrcxz 0x20000542367 ; ret
0x0000020000542508 : jrcxz 0x2000054256b ; ret
0x000002000054377c : jrcxz 0x200005437dd ; ret
0x0000020000543a8c : jrcxz 0x20000543ad4 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005445f2 : jrcxz 0x20000544653 ; ret
0x0000020000544818 : jrcxz 0x2000054485e ; pop rsi ; ret
0x000002000054573c : jrcxz 0x20000545784 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005459f0 : jrcxz 0x20000545a51 ; ret
0x0000020000545a91 : jrcxz 0x20000545af4 ; ret
0x0000020000545cd5 : jrcxz 0x20000545d1d ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000546248 : jrcxz 0x2000054624e ; mov dword ptr [rcx + 0x1c], eax ; ret
0x000002000059a4dd : jrcxz 0x2000059a526 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005a4c21 : jrcxz 0x200005a4c10 ; ret 0x83ff
0x00000200005ba70b : jrcxz 0x200005ba6f2 ; in eax, dx ; inc dword ptr [rcx - 0x75] ; ret 0x8948
0x00000200005d3c9b : jrcxz 0x200005d3ce4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005d8cc6 : jrcxz 0x200005d8d27 ; ret
0x00000200005daaf1 : jrcxz 0x200005dab54 ; ret
0x00000200005dadb7 : jrcxz 0x200005dadfd ; pop rdi ; ret
0x00000200005dbdba : jrcxz 0x200005dbe06 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200005dd06e : jrcxz 0x200005dd0cf ; ret
0x00000200005dda3a : jrcxz 0x200005dda83 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005e076b : jrcxz 0x200005e07ce ; ret
0x00000200005e0a11 : jrcxz 0x200005e0a5a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005e2396 : jrcxz 0x200005e23e2 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005e25ef : jrcxz 0x200005e2652 ; ret
0x00000200005e362e : jrcxz 0x200005e368f ; ret
0x00000200005e49ad : jrcxz 0x200005e49f5 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005e4ba8 : jrcxz 0x200005e4bf1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005e568d : jrcxz 0x200005e56d5 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005e5ba3 : jrcxz 0x200005e5beb ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005e6840 : jrcxz 0x200005e688c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005e927f : jrcxz 0x200005e92e2 ; ret
0x00000200005ea788 : jrcxz 0x200005ea7d2 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200005ec420 : jrcxz 0x200005ec46c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005eca06 : jrcxz 0x200005eca50 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200005ecae7 : jrcxz 0x200005ecb30 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005ee906 : jrcxz 0x200005ee94c ; pop rsi ; ret
0x00000200005eeb3f : jrcxz 0x200005eeb87 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005eecee : jrcxz 0x200005eed38 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200005ef8bf : jrcxz 0x200005ef922 ; ret
0x00000200005f0041 : jrcxz 0x200005f008a ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005f045b : jrcxz 0x200005f04bc ; ret
0x00000200005f0b54 : jrcxz 0x200005f0bb7 ; ret
0x00000200005f0f4b : jrcxz 0x200005f0f93 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005f122a : jrcxz 0x200005f128b ; ret
0x00000200005f1404 : jrcxz 0x200005f1467 ; ret
0x00000200005f212e : jrcxz 0x200005f2178 ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200005f29c2 : jrcxz 0x200005f2a0c ; pop rdi ; pop r14 ; pop r13 ; ret
0x00000200005f3409 : jrcxz 0x200005f346a ; ret
0x00000200005f35ed : jrcxz 0x200005f3633 ; pop rdi ; ret
0x00000200005f45d5 : jrcxz 0x200005f4621 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005f643d : jrcxz 0x200005f649e ; ret
0x00000200005f80d5 : jrcxz 0x200005f811d ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005f8fa0 : jrcxz 0x200005f8fec ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200005f95d2 : jrcxz 0x200005f961b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005f9aa4 : jrcxz 0x200005f9aed ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005fb7ab : jrcxz 0x200005fb80e ; ret
0x00000200005fcf19 : jrcxz 0x200005fcf5f ; pop rsi ; ret
0x00000200005fd043 : jrcxz 0x200005fd089 ; pop rsi ; ret
0x00000200005fd821 : jrcxz 0x200005fd86b ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200005fdafd : jrcxz 0x200005fdb60 ; ret
0x00000200005fe2c8 : jrcxz 0x200005fe310 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005fe495 : jrcxz 0x200005fe4f6 ; ret
0x00000200005fe9aa : jrcxz 0x200005fe9f0 ; pop rdi ; ret
0x00000200005fec78 : jrcxz 0x200005fecd9 ; ret
0x00000200006007ca : jrcxz 0x20000600812 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000600bf8 : jrcxz 0x20000600c41 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006013ad : jrcxz 0x200006013f6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000601759 : jrcxz 0x200006017a2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000601c49 : jrcxz 0x20000601caa ; ret
0x0000020000602601 : jrcxz 0x20000602664 ; ret
0x0000020000602911 : jrcxz 0x2000060295a ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000060333a : jrcxz 0x20000603383 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000060460c : jrcxz 0x20000604658 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000060560d : jrcxz 0x20000605655 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000060585c : jrcxz 0x200006058a4 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006060fa : jrcxz 0x2000060615b ; ret
0x0000020000606284 : jrcxz 0x200006062cd ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000606388 : jrcxz 0x200006063d1 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000606cdf : jrcxz 0x20000606d2b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000607bcb : jrcxz 0x20000607c2c ; ret
0x0000020000608097 : jrcxz 0x200006080f8 ; ret
0x0000020000608ca7 : jrcxz 0x20000608cf0 ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000609162 : jrcxz 0x200006091c3 ; ret
0x000002000060afed : jrcxz 0x2000060b036 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000060bc9c : jrcxz 0x2000060bcff ; ret
0x000002000060bfb4 : jrcxz 0x2000060c000 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000060c8b6 : jrcxz 0x2000060c8ff ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000060e829 : jrcxz 0x2000060e854 ; ret 0x48ff
0x000002000060f1db : jrcxz 0x2000060f224 ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000060faf9 : jrcxz 0x2000060fb42 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000610395 : jrcxz 0x200006103f6 ; ret
0x0000020000611248 : jrcxz 0x2000061128e ; pop rsi ; ret
0x000002000061132e : jrcxz 0x20000611374 ; pop rsi ; ret
0x0000020000611660 : jrcxz 0x200006116a9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006117af : jrcxz 0x200006117f5 ; pop rsi ; ret
0x0000020000611b54 : jrcxz 0x20000611b9e ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000611f02 : jrcxz 0x20000611f4b ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000061238f : jrcxz 0x200006123d8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000612524 : jrcxz 0x2000061256d ; pop rdi ; pop r13 ; pop rbp ; ret
0x0000020000612e1d : jrcxz 0x20000612e65 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000612fa4 : jrcxz 0x20000613005 ; ret
0x0000020000613154 : jrcxz 0x200006131b5 ; ret
0x000002000061381f : jrcxz 0x20000613880 ; ret
0x0000020000613982 : jrcxz 0x200006139e3 ; ret
0x00000200006142fb : jrcxz 0x20000614343 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006144e9 : jrcxz 0x2000061454a ; ret
0x0000020000614baa : jrcxz 0x20000614bf3 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000614dbd : jrcxz 0x20000614e09 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000614f06 : jrcxz 0x20000614f4f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000061615a : jrcxz 0x200006161bb ; ret
0x00000200006164fb : jrcxz 0x2000061655c ; ret
0x0000020000616603 : jrcxz 0x20000616664 ; ret
0x000002000061927a : jrcxz 0x200006192c2 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000619516 : jrcxz 0x20000619562 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000061bff7 : jrcxz 0x2000061c040 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000061d68c : jrcxz 0x2000061d6d6 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000061e0cd : jrcxz 0x2000061e119 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x000002000061f03c : jrcxz 0x2000061f086 ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000061f394 : jrcxz 0x2000061f3da ; pop rsi ; ret
0x000002000061fe01 : jrcxz 0x2000061fe49 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200006208d3 : jrcxz 0x2000062091b ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000622964 : jrcxz 0x200006229c5 ; ret
0x0000020000623560 : jrcxz 0x200006235c3 ; ret
0x0000020000623b98 : jrcxz 0x20000623be2 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000624170 : jrcxz 0x200006241d3 ; ret
0x0000020000625525 : jrcxz 0x20000625571 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000625684 : jrcxz 0x200006256e7 ; ret
0x000002000062701b : jrcxz 0x20000627067 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000628d87 : jrcxz 0x20000628dd1 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000629000 : jrcxz 0x2000062904c ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000062ac93 : jrcxz 0x2000062acdc ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000062af1f : jrcxz 0x2000062af82 ; ret
0x000002000062c14b : jrcxz 0x2000062c0da ; ret
0x000002000062d2fe : jrcxz 0x2000062d347 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000062d3b6 : jrcxz 0x2000062d3fe ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000062efb6 : jrcxz 0x2000062f017 ; ret
0x000002000062f0eb : jrcxz 0x2000062f131 ; pop rsi ; ret
0x000002000062fe49 : jrcxz 0x2000062feac ; ret
0x000002000062ff48 : jrcxz 0x2000062ffab ; ret
0x0000020000630227 : jrcxz 0x2000063026f ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000063044d : jrcxz 0x20000630496 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000632435 : jrcxz 0x20000632498 ; ret
0x0000020000632949 : jrcxz 0x20000632995 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000635781 : jrcxz 0x200006357ca ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000063713c : jrcxz 0x2000063719d ; ret
0x00000200006372f0 : jrcxz 0x20000637351 ; ret
0x00000200006381ad : jrcxz 0x2000063820e ; ret
0x00000200006384f5 : jrcxz 0x20000638556 ; ret
0x000002000063894c : jrcxz 0x20000638996 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000063932d : jrcxz 0x2000063938e ; ret
0x0000020000639415 : jrcxz 0x20000639476 ; ret
0x0000020000639b3d : jrcxz 0x20000639b9e ; ret
0x000002000063a8ff : jrcxz 0x2000063a962 ; ret
0x000002000063c5b2 : jrcxz 0x2000063c5fa ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000063c6ec : jrcxz 0x2000063c74d ; ret
0x000002000063d576 : jrcxz 0x2000063d5bc ; pop rsi ; ret
0x000002000063f1f8 : jrcxz 0x2000063f23e ; pop rsi ; ret
0x000002000063f429 : jrcxz 0x2000063f46f ; pop rdi ; ret
0x000002000063f9cd : jrcxz 0x2000063fa17 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000063ff34 : jrcxz 0x2000063ff7a ; pop rsi ; ret
0x000002000064024f : jrcxz 0x200006402b0 ; ret
0x0000020000641653 : jrcxz 0x2000064169c ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000641aa3 : jrcxz 0x20000641aeb ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000064711e : jrcxz 0x20000647167 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000064a090 : jrcxz 0x2000064a0f1 ; ret
0x000002000064ba31 : jrcxz 0x2000064ba77 ; pop rsi ; ret
0x000002000064bb53 : jrcxz 0x2000064bb9c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000064c878 : jrcxz 0x2000064c8c1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064ca08 : jrcxz 0x2000064ca51 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064cbc7 : jrcxz 0x2000064cc10 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064cf78 : jrcxz 0x2000064cfc1 ; pop rsi ; pop r13 ; pop rbp ; ret
0x000002000064d0ee : jrcxz 0x2000064d136 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000064d4e0 : jrcxz 0x2000064d529 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000064dc68 : jrcxz 0x2000064dcb0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000064dd59 : jrcxz 0x2000064ddba ; ret
0x000002000064df49 : jrcxz 0x2000064dfaa ; ret
0x000002000064ec83 : jrcxz 0x2000064eccf ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000065163f : jrcxz 0x200006516a2 ; ret
0x0000020000651751 : jrcxz 0x200006517b2 ; ret
0x0000020000653949 : jrcxz 0x20000653995 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000653c47 : jrcxz 0x20000653c90 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000065451d : jrcxz 0x20000654566 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000655303 : jrcxz 0x2000065534c ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006557f2 : jrcxz 0x20000655853 ; ret
0x000002000065669d : jrcxz 0x200006566e6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000656b3f : jrcxz 0x20000656b8b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000065802d : jrcxz 0x2000065808e ; ret
0x0000020000658b73 : jrcxz 0x20000658bd4 ; ret
0x0000020000659cd0 : jrcxz 0x20000659d1c ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000065a135 : jrcxz 0x2000065a17e ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000065a3c8 : jrcxz 0x2000065a414 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000065b068 : jrcxz 0x2000065b0b0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000065b5dc : jrcxz 0x2000065b625 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000065b6f8 : jrcxz 0x2000065b742 ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000065dfc3 : jrcxz 0x2000065e026 ; ret
0x000002000065ee4d : jrcxz 0x2000065eeae ; ret
0x000002000065f7ee : jrcxz 0x2000065f84f ; ret
0x000002000065ff39 : jrcxz 0x2000065ff82 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006628e4 : jrcxz 0x20000662945 ; ret
0x0000020000662a31 : jrcxz 0x20000662a79 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000662eef : jrcxz 0x20000662f3d ; mov eax, ecx ; ret
0x0000020000662fe8 : jrcxz 0x20000663030 ; pop rdi ; pop rdi ; pop rsi ; ret
0x0000020000663972 : jrcxz 0x200006639be ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000663e97 : jrcxz 0x20000663ef8 ; ret
0x00000200006640d1 : jrcxz 0x20000664119 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000666738 : jrcxz 0x20000666799 ; ret
0x00000200006669b6 : jrcxz 0x20000666a02 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000667390 : jrcxz 0x200006673da ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200006674ee : jrcxz 0x20000667537 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006676da : jrcxz 0x20000667722 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000668180 : jrcxz 0x200006681c9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000668370 : jrcxz 0x200006683b9 ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200006687cd : jrcxz 0x20000668830 ; ret
0x0000020000668edd : jrcxz 0x20000668f3e ; ret
0x0000020000669f4c : jrcxz 0x20000669f95 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000066a41a : jrcxz 0x2000066a466 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000066bf35 : jrcxz 0x2000066bf96 ; ret
0x000002000066c118 : jrcxz 0x2000066c160 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000066e339 : jrcxz 0x2000066e385 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000066f46f : jrcxz 0x2000066f4b5 ; pop rsi ; ret
0x00000200006700f1 : jrcxz 0x2000067013b ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000670a3a : jrcxz 0x20000670a9d ; ret
0x0000020000672241 : jrcxz 0x2000067228a ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006730b8 : jrcxz 0x20000673101 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000673914 : jrcxz 0x2000067395d ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000673d14 : jrcxz 0x20000673d60 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000067451e : jrcxz 0x20000674568 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000675c80 : jrcxz 0x20000675ce1 ; ret
0x000002000067674f : jrcxz 0x200006767b2 ; ret
0x0000020000676fe9 : jrcxz 0x2000067702f ; pop rsi ; ret
0x00000200006773cd : jrcxz 0x20000677415 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000677ead : jrcxz 0x20000677ef6 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000067b805 : jrcxz 0x2000067b866 ; ret
0x000002000067bd7d : jrcxz 0x2000067bdc6 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000067d884 : jrcxz 0x2000067d8cc ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000067df44 : jrcxz 0x2000067df8e ; pop rdi ; pop r14 ; pop r12 ; ret
0x000002000067ec93 : jrcxz 0x2000067ecf6 ; ret
0x000002000067f41e : jrcxz 0x2000067f47f ; ret
0x000002000068482e : jrcxz 0x2000068487a ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000685b56 : jrcxz 0x20000685b9c ; pop rsi ; ret
0x000002000068bfe4 : jrcxz 0x2000068c030 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000068c706 : jrcxz 0x2000068c74e ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000068c87a : jrcxz 0x2000068c8c6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000068ce47 : jrcxz 0x2000068ce90 ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000068cffd : jrcxz 0x2000068d05e ; ret
0x000002000068df00 : jrcxz 0x2000068df61 ; ret
0x000002000068e3b6 : jrcxz 0x2000068e402 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x000002000068f57e : jrcxz 0x2000068f5c6 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000068f905 : jrcxz 0x2000068f94d ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000068fa62 : jrcxz 0x2000068fac3 ; ret
0x0000020000690441 : jrcxz 0x200006904a2 ; ret
0x00000200006913b5 : jrcxz 0x20000691401 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000069295f : jrcxz 0x200006929a9 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000692d54 : jrcxz 0x20000692da0 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000693c73 : jrcxz 0x20000693cbc ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000693d79 : jrcxz 0x20000693dbf ; pop rsi ; ret
0x0000020000693e78 : jrcxz 0x20000693ebe ; pop rsi ; ret
0x0000020000693f60 : jrcxz 0x20000693fa6 ; pop rsi ; ret
0x0000020000694029 : jrcxz 0x2000069408a ; ret
0x00000200006940ed : jrcxz 0x2000069414e ; ret
0x0000020000694236 : jrcxz 0x2000069427f ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000694500 : jrcxz 0x20000694549 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000694ed8 : jrcxz 0x20000694f3b ; ret
0x0000020000694f6f : jrcxz 0x20000694fd2 ; ret
0x0000020000695653 : jrcxz 0x2000069569c ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000695849 : jrcxz 0x20000695892 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006969ba : jrcxz 0x20000696a1d ; ret
0x0000020000696e2c : jrcxz 0x20000696e76 ; pop rdi ; pop r14 ; pop r12 ; ret
0x0000020000697515 : jrcxz 0x2000069755e ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000698c8e : jrcxz 0x20000698cd7 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000699ca2 : jrcxz 0x20000699cee ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000069aef1 : jrcxz 0x2000069af3a ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000069bee5 : jrcxz 0x2000069bf2f ; pop rdi ; pop r14 ; pop r13 ; ret
0x000002000069bfd5 : jrcxz 0x2000069c021 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000069c4e7 : jrcxz 0x2000069c52f ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000069c67b : jrcxz 0x2000069c6c1 ; pop rdi ; ret
0x000002000069c7de : jrcxz 0x2000069c827 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000069cae0 : jrcxz 0x2000069cb41 ; ret
0x000002000069d481 : jrcxz 0x2000069d4cd ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000069ef0f : jrcxz 0x2000069ef58 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006a810b : jrcxz 0x200006a8154 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006a8f5a : jrcxz 0x200006a8fa3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006aaa8d : jrcxz 0x200006aaad5 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006ac0ce : jrcxz 0x200006ac116 ; pop rdi ; pop rdi ; pop rbp ; ret
0x00000200006ac47f : jrcxz 0x200006ac4c8 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006b311b : jrcxz 0x200006b317c ; ret
0x00000200006b42b9 : jrcxz 0x200006b4261 ; ret 0xa8ff
0x00000200006b5e8e : jrcxz 0x200006b5ef1 ; ret
0x00000200006b60b5 : jrcxz 0x200006b60fe ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006bdfe7 : jrcxz 0x200006be031 ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200006bf8de : jrcxz 0x200006bf941 ; ret
0x00000200006c1486 : jrcxz 0x200006c14e9 ; ret
0x00000200006c1556 : jrcxz 0x200006c15b9 ; ret
0x00000200006c393b : jrcxz 0x200006c399e ; ret
0x00000200006c4949 : jrcxz 0x200006c495b ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200006c69e0 : jrcxz 0x200006c6a2a ; pop rdi ; pop r14 ; pop r12 ; ret
0x00000200006c7ed0 : jrcxz 0x200006c7f1c ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006ca47b : jrcxz 0x200006ca4c1 ; pop rsi ; ret
0x00000200006d596d : jrcxz 0x200006d59b9 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006d5b9a : jrcxz 0x200006d5be6 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200006d85d5 : jrcxz 0x200006d861e ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006da593 : jrcxz 0x200006da5f6 ; ret
0x00000200006dc4ca : jrcxz 0x200006dc516 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200006dc7d2 : jrcxz 0x200006dc81b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006dcbda : jrcxz 0x200006dcc26 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000073d09d : jrcxz 0x2000073d0d4 ; ret 0x8948
0x000002000073d3f8 : jrcxz 0x2000073d42f ; ret 0x8948
0x0000020000740d80 : jrcxz 0x20000740d27 ; dec dword ptr [rax - 0x75] ; ret
0x000002000074269b : jrcxz 0x200007426e7 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000742c99 : jrcxz 0x20000742cfa ; ret
0x0000020000742ec6 : jrcxz 0x20000742f0f ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000743599 : jrcxz 0x200007435e5 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200007442d9 : jrcxz 0x20000744322 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007463d8 : jrcxz 0x20000746439 ; ret
0x00000200007473be : jrcxz 0x2000074741f ; ret
0x0000020000747f4a : jrcxz 0x20000747f96 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000074a2d5 : jrcxz 0x2000074a31e ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000074a4c2 : jrcxz 0x2000074a523 ; ret
0x000002000074a96e : jrcxz 0x2000074a9cf ; ret
0x000002000074ca53 : jrcxz 0x2000074cab6 ; ret
0x000002000074df6d : jrcxz 0x2000074dfb6 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000074e472 : jrcxz 0x2000074e4bb ; pop rdi ; pop r13 ; pop rbp ; ret
0x000002000074e7c9 : jrcxz 0x2000074e815 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000074f6a8 : jrcxz 0x2000074f6f1 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000750592 : jrcxz 0x200007505f3 ; ret
0x000002000075070e : jrcxz 0x2000075076f ; ret
0x000002000075093f : jrcxz 0x200007509a0 ; ret
0x0000020000750bd8 : jrcxz 0x20000750c20 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000750e7b : jrcxz 0x20000750ec7 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200007515b2 : jrcxz 0x200007515fa ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000751d5a : jrcxz 0x20000751da6 ; pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000752e8d : jrcxz 0x20000752eee ; ret
0x0000020000753240 : jrcxz 0x200007532a1 ; ret
0x0000020000754b3e : jrcxz 0x20000754ba1 ; ret
0x0000020000755064 : jrcxz 0x200007550c5 ; ret
0x0000020000755b37 : jrcxz 0x20000755b83 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000756e54 : jrcxz 0x20000756e9d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007575a5 : jrcxz 0x200007575ed ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007578be : jrcxz 0x2000075791f ; ret
0x0000020000757c74 : jrcxz 0x20000757cd5 ; ret
0x000002000075829f : jrcxz 0x200007582e7 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000075858a : jrcxz 0x200007585d6 ; pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200007589dc : jrcxz 0x20000758a3d ; ret
0x0000020000758dfd : jrcxz 0x20000758e5e ; ret
0x000002000075939c : jrcxz 0x200007593e4 ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000759b05 : jrcxz 0x20000759b4e ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000759d56 : jrcxz 0x20000759d9f ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000075c0c9 : jrcxz 0x2000075c12a ; ret
0x000002000075d8ef : jrcxz 0x2000075d93b ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000075ec40 : jrcxz 0x2000075ec88 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000075f98d : jrcxz 0x2000075f9d5 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000075fd08 : jrcxz 0x2000075fd54 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000076150d : jrcxz 0x2000076156e ; ret
0x00000200007618c6 : jrcxz 0x20000761912 ; pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x0000020000762bbc : jrcxz 0x20000762c1d ; ret
0x0000020000763dab : jrcxz 0x20000763e0c ; ret
0x000002000076439c : jrcxz 0x200007643e5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000765894 : jrcxz 0x200007658dd ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000765e71 : jrcxz 0x20000765eb7 ; pop rsi ; ret
0x00000200007666f7 : jrcxz 0x20000766758 ; ret
0x0000020000766cd5 : jrcxz 0x20000766d1e ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000769282 : jrcxz 0x200007692cb ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000076a814 : jrcxz 0x2000076a79b ; ret
0x000002000076b28a : jrcxz 0x2000076b2ed ; ret
0x000002000076b7f9 : jrcxz 0x2000076b85a ; ret
0x000002000076c223 : jrcxz 0x2000076c284 ; ret
0x000002000076c60a : jrcxz 0x2000076c66b ; ret
0x000002000076ca0c : jrcxz 0x2000076ca6d ; ret
0x000002000076d1bf : jrcxz 0x2000076d222 ; ret
0x000002000076e7d9 : jrcxz 0x2000076e821 ; pop rsp ; pop rdi ; pop rbp ; ret
0x000002000076e9f1 : jrcxz 0x2000076ea3a ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000076eb10 : jrcxz 0x2000076eb59 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000076eb9f : jrcxz 0x2000076ebe7 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000076ec4b : jrcxz 0x2000076ec91 ; pop rsp ; ret
0x000002000076ecb9 : jrcxz 0x2000076ed1a ; ret
0x000002000077db50 : jrcxz 0x2000077db3c ; ret 0x8a2c
0x000002000077faaa : jrcxz 0x2000077fb0b ; ret
0x000002000077fe8c : jrcxz 0x2000077fed8 ; pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000078047b : jrcxz 0x20000780471 ; add eax, dword ptr [rax - 0x76] ; fild word ptr [rdi + rcx - 0x4a] ; ret
0x00000200007805b0 : jrcxz 0x200007805f9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000780fdc : jrcxz 0x2000078103d ; ret
0x0000020000781111 : jrcxz 0x2000078115a ; pop rsi ; pop r12 ; pop rbp ; ret
0x00000200007814fc : jrcxz 0x20000781544 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000781701 : jrcxz 0x20000781762 ; ret
0x0000020000781a4b : jrcxz 0x20000781a94 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007828ba : jrcxz 0x20000782903 ; pop rsi ; pop r13 ; pop rdi ; ret
0x0000020000782b58 : jrcxz 0x20000782bb9 ; ret
0x0000020000784fe7 : jrcxz 0x2000078502f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007851de : jrcxz 0x20000785226 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000078555a : jrcxz 0x200007855a3 ; pop rsi ; pop r13 ; pop rbp ; ret
0x0000020000785f92 : jrcxz 0x20000785fda ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000005953 : js 0x200000059b9 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000018167 : js 0x20000018158 ; xchg bh, bh ; ret 0x5489
0x000002000001e71d : js 0x2000001e762 ; jmp 0x2000001e6e7
0x000002000002f73d : js 0x2000002f746 ; ret
0x000002000002f744 : js 0x2000002f74d ; ret
0x0000020000030b67 : js 0x20000030bb7 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000032dc7 : js 0x20000032dd4 ; add rsp, 0x28 ; ret
0x00000200000344d7 : js 0x200000344ee ; mov bh, 0x53 ; and dh, dh ; ret 0xf01
0x0000020000039b52 : js 0x20000039ba2 ; add esp, 0x50 ; pop rdi ; ret
0x000002000003ea5a : js 0x2000003ea7c ; push qword ptr [rbp + rbp*8 + 0x49] ; mov eax, eax ; ret
0x0000020000044e4e : js 0x20000044e45 ; mov rax, rdx ; ret
0x0000020000044e4e : js 0x20000044e46 ; mov rax, rdx ; ret
0x000002000004898d : js 0x20000048989 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000524f4 : js 0x20000052533 ; ret
0x0000020000059e77 : js 0x20000059e90 ; test ah, dl ; add al, 0 ; add dh, dh ; ret
0x0000020000059f71 : js 0x20000059f6b ; ret 0x7504
0x000002000005ae44 : js 0x2000005ae97 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000641e4 : js 0x200000641ed ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000066c9b : js 0x20000066cb4 ; add byte ptr [rbp + 0x25], dh ; xor al, al ; ret
0x0000020000067d59 : js 0x20000067da0 ; pop rdi ; pop rbx ; ret
0x000002000006a049 : js 0x20000069ffa ; add dh, byte ptr [rbp - 0x11] ; jmp 0x20000036347
0x000002000006a048 : js 0x20000069ffb ; add dh, byte ptr [rbp - 0x11] ; jmp 0x20000036348
0x000002000006c212 : js 0x2000006c204 ; mov ecx, 0x83000001 ; ret
0x000002000006c266 : js 0x2000006c258 ; add dword ptr gs:[rax], eax ; add bh, bh ; ret
0x000002000006f05f : js 0x2000006f0ab ; pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000074145 : js 0x2000007414f ; mov dword ptr [r10], ecx ; ret
0x0000020000074212 : js 0x2000007420c ; mov rax, rdx ; ret
0x0000020000074212 : js 0x2000007420d ; mov rax, rdx ; ret
0x00000200000844be : js 0x20000084500 ; lea rax, qword ptr [rcx + 0x30] ; add rax, r8 ; ret
0x0000020000086172 : js 0x20000086173 ; xor eax, eax ; ret
0x000002000008c095 : js 0x2000008c0f9 ; pop rbp ; ret
0x00000200000b142d : js 0x200000b1491 ; pop rbx ; ret
0x00000200000bdd18 : js 0x200000bdd7e ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000c1938 : js 0x200000c1957 ; add byte ptr [rax], al ; jne 0x200000c1949 ; mov al, 1 ; ret
0x00000200000d0856 : js 0x200000d08a2 ; pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000df253 : js 0x200000df2b7 ; pop rbx ; ret
0x00000200000e56b9 : js 0x200000e56e8 ; ret
0x00000200000e6be4 : js 0x200000e6be0 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000ec31b : js 0x200000ec35a ; ret 0x3174
0x00000200000ec31a : js 0x200000ec35b ; ret 0x3174
0x00000200000ef68d : js 0x200000ef619 ; ror byte ptr [rdi], 0x88 ; ret
0x00000200000f507f : js 0x200000f50cf ; add esp, 0x50 ; pop rbp ; ret
0x00000200000f5535 : js 0x200000f5588 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000f8927 : js 0x200000f8933 ; add byte ptr [rax], al ; ret
0x00000200001055dd : js 0x2000010562d ; add esp, 0x60 ; pop rbp ; ret
0x0000020000107c43 : js 0x20000107c94 ; add esp, 0x50 ; pop r14 ; ret
0x000002000010aaaa : js 0x2000010aa1d ; add ebx, ebx ; jmp 0x2000010aa80
0x000002000010de4f : js 0x2000010de62 ; test cl, 0x3f ; je 0x2000010de61 ; inc eax ; ret
0x000002000010de67 : js 0x2000010de7a ; test cl, 0x20 ; je 0x2000010de79 ; inc eax ; ret
0x000002000010e733 : js 0x2000010e786 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000113a3b : js 0x20000113a4d ; mov rax, rdx ; ret
0x0000020000113a3b : js 0x20000113a4e ; mov rax, rdx ; ret
0x000002000011600b : js 0x20000116023 ; add byte ptr [rsp + rcx*8 - 1], dh ; ret
0x00000200001172fc : js 0x200001172b2 ; add eax, 0x8a01b300 ; ret
0x000002000011fe7b : js 0x2000011fe87 ; add byte ptr [rax], al ; ret
0x000002000011fff9 : js 0x20000120000 ; add byte ptr [rax], al ; ret
0x00000200001207dc : js 0x2000012080b ; ret 0x8944
0x00000200001207db : js 0x2000012080c ; ret 0x8944
0x000002000012284c : js 0x200001227ee ; sbb eax, 0xff477500 ; ret
0x000002000012312e : js 0x2000012317e ; add esp, 0x60 ; pop rbp ; ret
0x0000020000123b3b : js 0x20000123b8b ; add esp, 0x50 ; pop rdi ; ret
0x0000020000123ed6 : js 0x20000123eee ; sub r9, rdx ; mov qword ptr [r8], r9 ; ret
0x000002000012e3b4 : js 0x2000012e404 ; add esp, 0x50 ; pop rbp ; ret
0x00000200001335e2 : js 0x20000133632 ; add esp, 0x60 ; pop rbp ; ret
0x000002000013a502 : js 0x2000013a552 ; add esp, 0x60 ; pop rdi ; ret
0x000002000013d2d4 : js 0x2000013d2db ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000013e9b4 : js 0x2000013e943 ; adc ecx, dword ptr [rax - 1] ; ret
0x000002000013e9b3 : js 0x2000013e944 ; adc ecx, dword ptr [rax - 1] ; ret
0x000002000014aa50 : js 0x2000014aa5c ; nop ; nop ; add rsp, 0x10 ; ret
0x0000020000160200 : js 0x200001601fc ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x0000020000072fea : js 0x2000017d884 ; ret
0x0000020000073fde : js 0x2000017dbc0 ; ret
0x00000200001846ef : js 0x20000184740 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000194193 : js 0x20000194183 ; and esp, dword ptr [rcx - 0xd] ; jmp qword ptr [rbx]
0x0000020000195854 : js 0x20000195841 ; salc ; ret 0xfff2
0x00000200001a578e : js 0x200001a579f ; sub rdx, r9 ; mov qword ptr [r8], rdx ; ret
0x00000200001ab958 : js 0x200001ab9aa ; mov eax, dword ptr [rip + 0x126b18] ; call rax
0x00000200001ab957 : js 0x200001ab9ab ; mov eax, dword ptr [rip + 0x126b18] ; call rax
0x00000200001ae135 : js 0x200001ae160 ; mov rax, qword ptr [rip + 0x12433a] ; call rax
0x00000200001aed8f : js 0x200001aeddf ; add esp, 0x60 ; pop rbp ; ret
0x00000200001afb78 : js 0x200001afbc8 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001afca4 : js 0x200001afcb7 ; mov dword ptr [rax], edi ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001b5dfa : js 0x200001b5e4a ; add esp, 0x60 ; pop rdi ; ret
0x00000200001b6951 : js 0x200001b69a1 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001b8313 : js 0x200001b831f ; add byte ptr [rax], al ; ret
0x00000200001c547e : js 0x200001c548b ; add byte ptr [rax], al ; ret
0x00000200001c549c : js 0x200001c54a9 ; add byte ptr [rax], al ; ret
0x00000200001c8dff : js 0x200001c8e16 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200001cf504 : js 0x200001cf555 ; add esp, 0x50 ; pop r14 ; ret
0x00000200001d7a78 : js 0x200001d7ac8 ; add esp, 0x60 ; pop rdi ; ret
0x00000200001dc688 : js 0x200001dc6d9 ; add esp, 0x50 ; pop r14 ; ret
0x00000200001e7e7a : js 0x200001e7eca ; add esp, 0x50 ; pop rdi ; ret
0x00000200001ece37 : js 0x200001ece87 ; add esp, 0x60 ; pop rbp ; ret
0x00000200001ef045 : js 0x200001ef095 ; add esp, 0x50 ; pop rbp ; ret
0x00000200001f0e2a : js 0x200001f0e39 ; mov eax, 0xc00000bb ; ret
0x00000200001f7b7b : js 0x200001f7b84 ; add byte ptr [rax], al ; ret
0x00000200001fb7dd : js 0x200001fb82e ; add esp, 0x50 ; pop r14 ; ret
0x00000200001fb8d9 : js 0x200001fb92a ; add esp, 0x50 ; pop r14 ; ret
0x00000200001fc672 : js 0x200001fc6c2 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000200add : js 0x20000200b2e ; add esp, 0x50 ; pop r14 ; ret
0x0000020000203db0 : js 0x20000203e01 ; add esp, 0x50 ; pop r14 ; ret
0x000002000021a071 : js 0x2000021a0c1 ; add esp, 0x50 ; pop rdi ; ret
0x000002000021c17b : js 0x2000021c167 ; ret
0x00000200002244d7 : js 0x200002244de ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000225501 : js 0x20000225508 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000228956 : js 0x2000022895d ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000229fc8 : js 0x20000229fcf ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000022ae6e : js 0x2000022ae75 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000022df79 : js 0x2000022dfc6 ; mov eax, edx ; jmp 0x2000022df84
0x000002000022f03f : js 0x2000022f046 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000039bb4a : js 0x2000039bb9a ; add esp, 0x60 ; pop rdi ; ret
0x000002000039c8ec : js 0x2000039c93c ; add esp, 0x50 ; pop rdi ; ret
0x000002000039d4b5 : js 0x2000039d508 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000039ea33 : js 0x2000039ea83 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003a2176 : js 0x200003a21a5 ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x28 ; ret
0x00000200003a2f88 : js 0x200003a2fd8 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003b1420 : js 0x200003b1470 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003b1fc6 : js 0x200003b2017 ; add esp, 0x50 ; pop r14 ; ret
0x00000200003b6838 : js 0x200003b6888 ; add esp, 0x60 ; pop rsi ; ret
0x00000200003cce0f : js 0x200003cce2f ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003cdeb2 : js 0x200003cdec5 ; mov eax, ecx ; add rsp, 0x60 ; pop rbx ; ret
0x00000200003d4778 : js 0x200003d47c9 ; add esp, 0x50 ; pop r15 ; ret
0x00000200003d8f94 : js 0x200003d8f1e ; in eax, -1 ; add rsp, 0x28 ; ret
0x00000200003db5a5 : js 0x200003db5f5 ; add esp, 0x60 ; pop rdi ; ret
0x00000200003df740 : js 0x200003df748 ; or dword ptr [rax + 8], 0x20 ; ret
0x00000200003f0368 : js 0x200003f03b9 ; add esp, 0x50 ; pop r15 ; ret
0x00000200003fa37e : js 0x200003fa3cd ; mov ecx, edi ; call r12
0x00000200003fe641 : js 0x200003fe692 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000400a35 : js 0x200004009c4 ; ret
0x000002000040703f : js 0x2000040704b ; add byte ptr [rax], al ; ret
0x0000020000407930 : js 0x20000407980 ; add esp, 0x50 ; pop rdi ; ret
0x000002000040abf6 : js 0x2000040ac46 ; add esp, 0x50 ; pop rdi ; ret
0x000002000040f933 : js 0x2000040f8c0 ; sar byte ptr [rcx + 0xd], 0x8b ; ret 0x8b48
0x000002000041612b : js 0x200004160b8 ; ror byte ptr [rdi], cl ; test ebx, edi ; ret
0x000002000041d7bc : js 0x2000041d7c7 ; setb al ; movzx eax, al ; ret
0x0000020000423141 : js 0x20000423192 ; add esp, 0x50 ; pop r15 ; ret
0x000002000042453c : js 0x20000424545 ; xor eax, eax ; ret
0x000002000042544d : js 0x20000425456 ; xor eax, eax ; ret
0x000002000042a1c8 : js 0x2000042a157 ; ret
0x00000200004385fa : js 0x2000043864a ; add esp, 0x60 ; pop rbx ; ret
0x0000020000439477 : js 0x20000439409 ; push rdi ; adc al, 0xf6 ; ret 0xf01
0x000002000043d603 : js 0x2000043d653 ; add esp, 0x60 ; pop rdi ; ret
0x000002000043f128 : js 0x2000043f178 ; add esp, 0x50 ; pop rbx ; ret
0x000002000043ff67 : js 0x2000043fef4 ; sar byte ptr [rcx + 0xd], 0x8b ; ret 0x8b48
0x0000020000441b67 : js 0x20000441af4 ; sar byte ptr [rcx + 0xd], 0x8b ; ret 0x8b48
0x0000020000441cf4 : js 0x20000441d44 ; add esp, 0x50 ; pop rbx ; ret
0x0000020000441d74 : js 0x20000441dc4 ; add esp, 0x50 ; pop rbx ; ret
0x0000020000444863 : js 0x2000044485d ; ret
0x000002000044da1d : js 0x2000044da29 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004506ce : js 0x200004506bc ; cmp al, 0xb6 ; ret
0x00000200004609ac : js 0x200004609cc ; test cl, 8 ; jne 0x200004609bf ; ret
0x000002000046a812 : js 0x2000046a878 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000046dfb5 : js 0x2000046dfe8 ; add byte ptr [rbp + rax + 0x48], dh ; add eax, 0x10 ; ret
0x000002000046fade : js 0x2000046fb31 ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x0000020000474b17 : js 0x20000474b3e ; ret
0x0000020000475817 : js 0x20000475868 ; add esp, 0x50 ; pop r14 ; ret
0x000002000047d9c0 : js 0x2000047d947 ; ret
0x000002000047da31 : js 0x2000047da82 ; add esp, 0x50 ; pop r15 ; ret
0x000002000047da31 : js 0x2000047da84 ; add esp, 0x50 ; pop r15 ; ret
0x000002000047edfd : js 0x2000047ee4d ; add esp, 0x50 ; pop rdi ; ret
0x000002000048218b : js 0x200004821ab ; add byte ptr [rax], al ; cmp eax, 1 ; je 0x2000048219e ; ret
0x00000200004826d2 : js 0x20000482660 ; ret
0x0000020000483285 : js 0x200004832d5 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000484977 : js 0x200004849c7 ; add esp, 0x50 ; pop rdi ; ret
0x000002000048f7e4 : js 0x2000048f80e ; ret
0x00000200004951fe : js 0x2000049524e ; add esp, 0x50 ; pop rdi ; ret
0x00000200004996a9 : js 0x20000499697 ; shr dword ptr [rbx], 1 ; ret 0x48ff
0x0000020000499924 : js 0x20000499951 ; ret 0x48ff
0x000002000049ad04 : js 0x2000049ac8b ; ret 0x48ff
0x00000200004a514a : js 0x200004a5194 ; pop rdi ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200004b5c85 : js 0x200004b5cc5 ; add byte ptr [rdx + rdx*2 - 0xa], dh ; ret
0x00000200004b6bf4 : js 0x200004b6c69 ; ret
0x00000200004c09a3 : js 0x200004c09f6 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004cb61d : js 0x200004cb66d ; add esp, 0x60 ; pop rdi ; ret
0x00000200004cc68f : js 0x200004cc6df ; add esp, 0x50 ; pop rbp ; ret
0x00000200004ce4f4 : js 0x200004ce4ff ; add byte ptr [rax], al ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004d1c25 : js 0x200004d1c78 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004d1f16 : js 0x200004d1ea5 ; ret
0x00000200004db4b7 : js 0x200004db50a ; add esp, 0x50 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200004dc91e : js 0x200004dc96f ; add esp, 0x50 ; pop r14 ; ret
0x00000200004ded2a : js 0x200004ded7d ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200004e134c : js 0x200004e139c ; add esp, 0x60 ; pop rdi ; ret
0x00000200004e5d97 : js 0x200004e5d61 ; dec dword ptr [rbx + 0x78c085d8] ; ret 0x8b4c
0x00000200004ed13c : js 0x200004ed18c ; add esp, 0x50 ; pop rbp ; ret
0x00000200004ee53a : js 0x200004ee4c9 ; ret
0x00000200004f12bd : js 0x200004f130d ; add esp, 0x60 ; pop rdi ; ret
0x00000200004f2e12 : js 0x200004f2e78 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004f4a11 : js 0x200004f4a63 ; add esp, 0x50 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200005007f3 : js 0x20000500843 ; add esp, 0x60 ; pop rsi ; ret
0x00000200005039ef : js 0x20000503a40 ; xor ecx, esp ; call 0x20000133187
0x00000200005041f7 : js 0x200005041e3 ; ret
0x00000200005041f6 : js 0x200005041e4 ; ret
0x000002000050b123 : js 0x2000050b173 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000510208 : js 0x20000510259 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000511670 : js 0x200005116c1 ; add esp, 0x50 ; pop r14 ; ret
0x00000200005182b6 : js 0x20000518306 ; add esp, 0x60 ; pop rdi ; ret
0x000002000051ca4b : js 0x2000051ca9b ; add esp, 0x60 ; pop rdi ; ret
0x00000200005234a3 : js 0x200005234f4 ; add esp, 0x50 ; pop r14 ; ret
0x000002000052a1da : js 0x2000052a1c8 ; loopne 0x2000052a234 ; ret 0x44ff
0x000002000052a1d9 : js 0x2000052a1c9 ; loopne 0x2000052a235 ; ret 0x44ff
0x000002000052b897 : js 0x2000052b8ea ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200005d08e8 : js 0x2000052cb73 ; jmp 0x2000052cb24
0x000002000052cc8b : js 0x2000052cc1a ; ret
0x000002000052d826 : js 0x2000052d8a6 ; test byte ptr [rcx - 0x75], 0x46 ; sub byte ptr [rax - 1], cl ; ret
0x0000020000537372 : js 0x200005373c2 ; add esp, 0x50 ; pop rbp ; ret
0x000002000053a6ee : js 0x2000053a67d ; ret 0xd148
0x000002000053c8fc : js 0x2000053c88b ; ret
0x00000200005402af : js 0x200005402ff ; add esp, 0x60 ; pop rdi ; ret
0x00000200005437be : js 0x200005437ab ; hlt ; ret
0x00000200005437bd : js 0x200005437ac ; hlt ; ret
0x00000200005840d3 : js 0x200005840c2 ; ljmp ptr [rbx] ; ret
0x00000200004f791b : js 0x2000058ba39 ; mov al, r8b ; ret
0x000002000058d8ce : js 0x2000058d8bf ; mov esp, 0x8bfff2cb ; ret
0x00000200005a260b : js 0x200005a25f9 ; mov bh, 0x20 ; ret 0x8bff
0x0000020000487cb1 : js 0x200005b5fb2 ; call 0x20000443ed8
0x0000020000519a20 : js 0x200005cbe89 ; call 0x20000140389
0x00000200005d3b74 : js 0x200005d3bf3 ; ret 0x65ff
0x00000200005f12f7 : js 0x200005f1347 ; add esp, 0x60 ; pop rdi ; ret
0x00000200005f346c : js 0x200005f3479 ; xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005f402d : js 0x200005f407d ; add esp, 0x50 ; pop rdi ; ret
0x00000200005f556d : js 0x200005f55bd ; add esp, 0x50 ; pop rdi ; ret
0x00000200005f73ee : js 0x200005f743e ; add esp, 0x50 ; pop rbp ; ret
0x00000200005f8aa7 : js 0x200005f8af8 ; add esp, 0x50 ; pop r14 ; ret
0x00000200005fd1ba : js 0x200005fd1c1 ; add al, al ; ret
0x0000020000600dd5 : js 0x20000600e26 ; add esp, 0x50 ; pop r14 ; ret
0x0000020000600fb7 : js 0x20000601008 ; add esp, 0x50 ; pop r14 ; ret
0x000002000060f45d : js 0x2000060f4ad ; add esp, 0x50 ; pop rdi ; ret
0x0000020000617fac : js 0x20000617faf ; ret 0x5c03
0x000002000061a746 : js 0x2000061a799 ; add esp, 0x40 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000061af7d : js 0x2000061af0c ; ret
0x000002000062750d : js 0x20000627507 ; ret
0x00000200006293cc : js 0x2000062941c ; add esp, 0x50 ; pop rdi ; ret
0x000002000062b219 : js 0x2000062b269 ; add esp, 0x60 ; pop rdi ; ret
0x00000200006363fa : js 0x2000063644b ; add esp, 0x50 ; pop r14 ; ret
0x0000020000636a94 : js 0x20000636ae4 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000637efc : js 0x20000637f4c ; add esp, 0x60 ; pop rdi ; ret
0x0000020000639be6 : js 0x20000639c36 ; add esp, 0x60 ; pop rdi ; ret
0x000002000064056b : js 0x200006405bc ; add esp, 0x50 ; pop r14 ; ret
0x00000200006519e7 : js 0x200006519f0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000065dd58 : js 0x2000065dd64 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x0000020000665a49 : js 0x20000665a36 ; xchg eax, ecx ; ret 0xffbc
0x000002000066d6be : js 0x2000066d70e ; add esp, 0x50 ; pop rdi ; ret
0x000002000066e721 : js 0x2000066e771 ; add esp, 0x60 ; pop rdi ; ret
0x000002000066e8a1 : js 0x2000066e8f1 ; add esp, 0x60 ; pop rdi ; ret
0x000002000066f7c0 : js 0x2000066f810 ; add esp, 0x60 ; pop rdi ; ret
0x000002000066fd1d : js 0x2000066fd6d ; add esp, 0x60 ; pop rdi ; ret
0x00000200006738fd : js 0x200006738ee ; mov ebp, 0x8bffa4ea ; ret
0x000002000067e07e : js 0x2000067e0cf ; add esp, 0x50 ; pop r14 ; ret
0x0000020000680042 : js 0x20000680093 ; add esp, 0x50 ; pop r15 ; ret
0x0000020000680725 : js 0x20000680716 ; cmp eax, 0x8bff99f6 ; ret
0x00000200006953ac : js 0x2000069533b ; ret
0x00000200006959ac : js 0x2000069593b ; ret
0x0000020000697210 : js 0x20000697261 ; add esp, 0x50 ; pop r14 ; ret
0x00000200006977de : js 0x2000069776d ; ret
0x00000200006b6a74 : js 0x200006b69fa ; ret 0x8dff
0x00000200006ba248 : js 0x200006ba270 ; add byte ptr [rax], al ; mov rcx, rdi ; call rsi
0x00000200006c490c : js 0x200006c495d ; add esp, 0x50 ; pop r14 ; ret
0x00000200006c9136 : js 0x200006c9186 ; add esp, 0x60 ; pop rdi ; ret
0x00000200006ca300 : js 0x200006ca351 ; add esp, 0x50 ; pop r14 ; ret
0x00000200006cd99d : js 0x200006cd9ef ; add esp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006d9534 : js 0x200006d94dc ; ret 0xe9ff
0x000002000072c2ce : js 0x2000072c2d5 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x00000200007320fa : js 0x20000732101 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000073309c : js 0x200007330a3 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000733e22 : js 0x20000733e29 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000734d90 : js 0x20000734d97 ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000735d34 : js 0x20000735d3b ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x0000020000736c76 : js 0x20000736c7d ; add byte ptr [rsi + 0x3b], ah ; ret 0x840f
0x000002000074b9c7 : js 0x2000074ba18 ; add esp, 0x50 ; pop r15 ; ret
0x000002000074fb0b : js 0x2000074fb5b ; test ecx, ecx ; jne 0x2000074fb18 ; ret
0x000002000074fb0a : js 0x2000074fb5c ; test ecx, ecx ; jne 0x2000074fb19 ; ret
0x0000020000758624 : js 0x20000758610 ; ret 0xdc3c
0x0000020000758b44 : js 0x20000758afa ; xchg eax, esi ; dec dword ptr [rbp + rcx*4 + 0xd] ; jns 0x20000758bbe ; ret 0x45ff
0x0000020000762ce7 : js 0x20000762d37 ; add esp, 0x50 ; pop rbp ; ret
0x000002000076390d : js 0x2000076395d ; add esp, 0x60 ; pop rdi ; ret
0x0000020000781227 : js 0x20000781277 ; add esp, 0x60 ; pop rbp ; ret
0x00000200007840da : js 0x2000078415a ; call 0x20000140384
0x0000020000784ce9 : js 0x20000784d39 ; add esp, 0x60 ; pop rdi ; ret
0x0000020000785da4 : js 0x20000785d33 ; ret
0x0000020000788c62 : js 0x20000788cab ; add dword ptr [rax], eax ; add byte ptr [rax], al ; cwde ; ret
0x000002000048e387 : lahf ; adc al, byte ptr [rax] ; mov rcx, rax ; call 0x200000bcd19
0x00000200001abfd5 : lahf ; adc al, byte ptr fs:[rax] ; call rax
0x00000200004da5f8 : lahf ; add byte ptr [rax], al ; add bh, bh ; ret 0x8349
0x00000200007495f8 : lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x0000020000141595 : lahf ; add byte ptr [rax], al ; add cl, ch ; loop 0x2000014156d ; add byte ptr [rax], al ; ret
0x000002000011fb4d : lahf ; add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000672053 : lahf ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov bh, 0x55 ; loopne 0x20000672068 ; ret 0xc13b
0x0000020000143595 : lahf ; add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014354d ; add byte ptr [rax], al ; ret
0x000002000007d1ed : lahf ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200004af2ea : lahf ; add edx, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret 0xc933
0x000002000051cc6f : lahf ; call 0x20000140384
0x000002000051cc6e : lahf ; call 0x20000140385
0x0000020000626932 : lahf ; dec dword ptr [rax - 0x75] ; and al, 0x20 ; call 0x200000c2b99
0x000002000074fe6f : lahf ; dec dword ptr [rax - 0x75] ; ret
0x0000020000557bce : lahf ; idiv bh ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000504a7d : lahf ; in eax, dx ; ret
0x00000200005b9e7d : lahf ; jl 0x200005b9e77 ; call qword ptr [rax - 0x123d4317]
0x000002000075d3e1 : lahf ; jle 0x2000075d389 ; inc dword ptr [rbp - 0x2177f040] ; ret
0x000002000057830a : lahf ; jmp rdi
0x000002000051cbe3 : lahf ; mov qword ptr [rbp - 0x31], r15 ; call 0x20000141508
0x000002000051cbe2 : lahf ; mov qword ptr [rbp - 0x31], r15 ; call 0x20000141509
0x000002000053f13f : lahf ; movzx eax, dx ; jmp 0x2000053f123
0x000002000062736d : lahf ; pushfq ; sar bh, 0xeb ; ret 0x438b
0x0000020000060c45 : lahf ; pushfq ; sub dword ptr [rax], eax ; ret
0x00000200004ee89d : lahf ; rcr esi, 1 ; dec dword ptr [rax - 0x39] ; ret 0x1700
0x000002000004d5e4 : lahf ; ret
0x00000200005aa1f7 : lahf ; ret 0x20e9
0x00000200007840dd : lahf ; ret 0xff9b
0x0000020000636c0f : lahf ; ret 0xffcc
0x000002000057490d : lahf ; ret 0xffdb
0x0000020000114fa1 : lahf ; ret 5
0x00000200004b83ea : lahf ; sar bh, 0x8b ; ret
0x00000200006a8a61 : lahf ; sti ; ret
0x00000200004fc5c5 : lahf ; xor bh, bh ; ret
0x000002000016f371 : lahf ; xor r8d, r8d ; mov rdx, rsi ; call rax
0x00000200004e5773 : lar eax, word ptr [rax] ; add byte ptr [rbp + 0x3b], al ; ret 0x850f
0x0000020000213650 : lar ecx, word ptr [rax + 0x33] ; ret
0x0000020000748b9e : lcall ptr [rax + 0x6205f6ff] ; ret
0x000002000050157d : lcall ptr [rbx] ; ret
0x000002000046687c : lcall ptr [rdi + 0x5e] ; pop rbx ; ret
0x0000020000005d97 : lcall ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x0000020000005352 : lcall ptr [rdi] ; add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x0000020000649587 : lcall ptr [rdi] ; add byte ptr [rax], al ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200007440af : lcall ptr [rdi] ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x0000020000496fd3 : lcall ptr [rdi] ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf66
0x00000200006b5f3d : lcall ptr [rdi] ; ret 0xff
0x0000020000138104 : ldmxcsr dword ptr [rsp + 8] ; ret
0x0000020000043d6d : lds r14, ptr [r11] ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x00000200003f4015 : lds r9d, ptr [r13 + 0x3b] ; ret 0xc076
0x00000200000e2c90 : lea eax, dword ptr [r10 + 2] ; add rsp, 0x28 ; ret
0x00000200006b532e : lea eax, dword ptr [r11 + rdx] ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000065a14c : lea eax, dword ptr [r8 + 0x14] ; ret
0x0000020000423d33 : lea eax, dword ptr [r8 + 0x48] ; ret
0x00000200001f6294 : lea eax, dword ptr [r8 + 1] ; ret
0x0000020000511c56 : lea eax, dword ptr [r8 + r8] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200003ed470 : lea eax, dword ptr [r8 + r9] ; ret
0x00000200001ab328 : lea eax, dword ptr [r9 + 0x30] ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x000002000065a142 : lea eax, dword ptr [r9 + 0xb] ; ret
0x00000200003ee029 : lea eax, dword ptr [r9 + r10] ; ret
0x0000020000613f67 : lea eax, dword ptr [r9 - 2] ; sub ax, dx ; jmp 0x20000613f8b
0x000002000065a14d : lea eax, dword ptr [rax + 0x14] ; ret
0x000002000044c96e : lea eax, dword ptr [rax + 0x18] ; ret
0x000002000052050c : lea eax, dword ptr [rax + 0x18] ; sub rcx, 1 ; jne 0x20000520512 ; ret
0x0000020000423d34 : lea eax, dword ptr [rax + 0x48] ; ret
0x00000200003f0d27 : lea eax, dword ptr [rax + 0xc] ; sub r9, 1 ; jne 0x200003f0d1b ; ret
0x00000200004980b7 : lea eax, dword ptr [rax + 1] ; call 0x200000bab46
0x00000200001f6295 : lea eax, dword ptr [rax + 1] ; ret
0x0000020000092fbf : lea eax, dword ptr [rax + 2] ; add dh, dh ; ret
0x00000200001bebeb : lea eax, dword ptr [rax + 8] ; add r10d, -1 ; jne 0x200001bebc9 ; ret
0x000002000002425e : lea eax, dword ptr [rax + 8] ; mov rax, qword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x0000020000009e92 : lea eax, dword ptr [rax + 8] ; sub r11, 1 ; jne 0x20000009e7a ; ret
0x000002000013e004 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000013e01f
0x0000020000221b0d : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000221b29
0x0000020000223f9b : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000223fb7
0x000002000022984b : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000229867
0x0000020000229ac6 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000229ae2
0x000002000022d9bc : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022d9d8
0x000002000022dc00 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022dc1c
0x00000200002303d0 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x200002303ec
0x0000020000731967 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000731982
0x0000020000731bc5 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000731be0
0x00000200007338e7 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000733902
0x0000020000735808 : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000735823
0x000002000073e8fc : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073e917
0x000002000073eeed : lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073ef08
0x000002000003f8bc : lea eax, dword ptr [rax + rax*4] ; lea rax, qword ptr [rdx + rax*8] ; ret
0x0000020000511c57 : lea eax, dword ptr [rax + rax] ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000011cf81 : lea eax, dword ptr [rax + rbx*8] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000694334 : lea eax, dword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x20000694348
0x000002000048f20c : lea eax, dword ptr [rax + rcx*8] ; ret
0x00000200003ed471 : lea eax, dword ptr [rax + rcx] ; ret
0x00000200004ad05d : lea eax, dword ptr [rax + rdx*4] ; ret
0x000002000007bec9 : lea eax, dword ptr [rax + rdx*8] ; ret
0x00000200004c2d36 : lea eax, dword ptr [rax - 0x20] ; mov rax, r8 ; ret
0x00000200000539ec : lea eax, dword ptr [rax*4 + 8] ; ret
0x00000200000df6d9 : lea eax, dword ptr [rax*8 + 0x30] ; ret
0x00000200005dc472 : lea eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000049d1af : lea eax, dword ptr [rax] ; ret 0xe9ff
0x00000200002215ff : lea eax, dword ptr [rbp + 0x1b8] ; xor ecx, ecx ; call r9
0x0000020000228287 : lea eax, dword ptr [rbp + 0x1c0] ; xor ecx, ecx ; call r10
0x00000200005be16c : lea eax, dword ptr [rbp + 0x4f] ; mov edx, r15d ; mov rcx, r13 ; call rax
0x0000020000735afb : lea eax, dword ptr [rbp + rax - 0x74b70000] ; ret 0x8b49
0x000002000046aeb7 : lea eax, dword ptr [rbp - 0x10] ; mov qword ptr [rsp + 0x20], rax ; call r12
0x00000200003c81e1 : lea eax, dword ptr [rbp - 0x28] ; mov dl, 1 ; mov rcx, rsi ; call rax
0x0000020000513016 : lea eax, dword ptr [rbp - 0x29] ; mov r9d, ebx ; call 0x20000140469
0x00000200005a924f : lea eax, dword ptr [rbp - 0x30] ; mov edx, r14d ; call rax
0x00000200004a3bf2 : lea eax, dword ptr [rbp - 0x30] ; mov rcx, rbx ; call 0x2000049fe08
0x00000200004af3dd : lea eax, dword ptr [rbp - 0x40] ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005be417 : lea eax, dword ptr [rbp - 0x59] ; mov edx, esi ; mov rcx, r9 ; call rax
0x00000200000d2288 : lea eax, dword ptr [rbp - 8] ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x00000200003ad1c1 : lea eax, dword ptr [rbx + 0x1000] ; call rax
0x00000200003c07ad : lea eax, dword ptr [rbx + 0x20] ; mov qword ptr [r11 - 0x38], rax ; call 0x200004aca89
0x000002000006f163 : lea eax, dword ptr [rbx + 1] ; add rsp, 0x50 ; pop rbx ; ret
0x000002000049b0a8 : lea eax, dword ptr [rbx + 1] ; mov rcx, r9 ; call 0x200000bcd29
0x000002000052d870 : lea eax, dword ptr [rbx + rbx] ; call 0x2000014f186
0x0000020000108f21 : lea eax, dword ptr [rbx + rcx*2] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200006b532f : lea eax, dword ptr [rbx + rdx] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004095f3 : lea eax, dword ptr [rbx] ; ret
0x0000020000125461 : lea eax, dword ptr [rcx + 0x10] ; cmovne ecx, r8d ; mov eax, ecx ; ret
0x00000200006404a2 : lea eax, dword ptr [rcx + 0x20] ; ret
0x00000200006404ba : lea eax, dword ptr [rcx + 0x24] ; ret
0x00000200006404a7 : lea eax, dword ptr [rcx + 0x2c] ; ret
0x00000200000844c1 : lea eax, dword ptr [rcx + 0x30] ; add rax, r8 ; ret
0x00000200001ab329 : lea eax, dword ptr [rcx + 0x30] ; mov dword ptr [r8], eax ; xor eax, eax ; ret
0x0000020000110e07 : lea eax, dword ptr [rcx + 0x3600] ; ret
0x0000020000044b31 : lea eax, dword ptr [rcx + 0x38] ; ret
0x00000200006404ac : lea eax, dword ptr [rcx + 0x3c] ; ret
0x0000020000478986 : lea eax, dword ptr [rcx + 0x3e8] ; ret
0x00000200006404c4 : lea eax, dword ptr [rcx + 0x40] ; ret
0x0000020000038595 : lea eax, dword ptr [rcx + 0x450] ; ret
0x0000020000476416 : lea eax, dword ptr [rcx + 0x4c] ; ret
0x000002000047898e : lea eax, dword ptr [rcx + 0x500] ; ret
0x000002000047897e : lea eax, dword ptr [rcx + 0x508] ; ret
0x0000020000211659 : lea eax, dword ptr [rcx + 0x59] ; add rsp, 0x28 ; ret
0x000002000047641b : lea eax, dword ptr [rcx + 0x5c] ; ret
0x0000020000476420 : lea eax, dword ptr [rcx + 0x64] ; ret
0x00000200001c547c : lea eax, dword ptr [rcx + 0x778] ; ret
0x00000200001c5484 : lea eax, dword ptr [rcx + 0x780] ; ret
0x00000200000681e2 : lea eax, dword ptr [rcx + 0x7b0] ; ret
0x000002000065a143 : lea eax, dword ptr [rcx + 0xb] ; ret
0x000002000042acaa : lea eax, dword ptr [rcx + 1] ; call 0x2000004e19e
0x00000200005101e6 : lea eax, dword ptr [rcx + 1] ; call rdi
0x000002000050e5b8 : lea eax, dword ptr [rcx + 1] ; call rsi
0x00000200006d2c8e : lea eax, dword ptr [rcx + 1] ; cmovne ecx, eax ; mov eax, ecx ; ret
0x000002000000f57f : lea eax, dword ptr [rcx + 1] ; mov qword ptr [rdx + 8], rax ; jmp 0x2000000f553
0x00000200000bd3e9 : lea eax, dword ptr [rcx + 1] ; ret
0x0000020000471f54 : lea eax, dword ptr [rcx + 2] ; call 0x2000004e19d
0x00000200006929d4 : lea eax, dword ptr [rcx + 2] ; call rdi
0x000002000050e8b1 : lea eax, dword ptr [rcx + 2] ; call rsi
0x00000200003d79a1 : lea eax, dword ptr [rcx + 2] ; ret
0x000002000040abd2 : lea eax, dword ptr [rcx + 3] ; call 0x20000466eb5
0x00000200004dd9a6 : lea eax, dword ptr [rcx + 3] ; call rdi
0x00000200006da389 : lea eax, dword ptr [rcx + 4] ; add rsp, 0x38 ; ret
0x000002000046331d : lea eax, dword ptr [rcx + 4] ; ret
0x000002000010f150 : lea eax, dword ptr [rcx + 7] ; and eax, 0xfffffff8 ; shr eax, 3 ; ret
0x00000200001350b9 : lea eax, dword ptr [rcx + rax - 1] ; ret
0x00000200001350bf : lea eax, dword ptr [rcx + rax - 2] ; ret
0x00000200001350c5 : lea eax, dword ptr [rcx + rax - 3] ; ret
0x00000200001350cb : lea eax, dword ptr [rcx + rax - 4] ; ret
0x00000200001350d1 : lea eax, dword ptr [rcx + rax - 5] ; ret
0x00000200001350d7 : lea eax, dword ptr [rcx + rax - 6] ; ret
0x00000200001350dd : lea eax, dword ptr [rcx + rax - 7] ; ret
0x00000200001350e3 : lea eax, dword ptr [rcx + rax - 8] ; ret
0x00000200000bd3e3 : lea eax, dword ptr [rcx + rax*4] ; ret
0x000002000014f60f : lea eax, dword ptr [rcx + rax*8] ; ret
0x000002000041ee30 : lea eax, dword ptr [rcx + rcx*2] ; shl rax, 3 ; ret
0x000002000066a838 : lea eax, dword ptr [rcx + rcx*4] ; add rsp, 0x28 ; ret
0x0000020000536469 : lea eax, dword ptr [rcx + rdx] ; cmp eax, edx ; ja 0x2000053647c ; mov eax, ecx ; ret
0x00000200003ee02a : lea eax, dword ptr [rcx + rdx] ; ret
0x00000200001d7acb : lea eax, dword ptr [rcx + rdx] ; shr rax, 0xc ; ret
0x00000200000bd22d : lea eax, dword ptr [rcx - 0x10] ; ret
0x0000020000125378 : lea eax, dword ptr [rcx - 0x13] ; mov dword ptr [r8], eax ; ret
0x00000200000e9b6f : lea eax, dword ptr [rcx - 0x20] ; ret
0x0000020000033dd7 : lea eax, dword ptr [rcx - 0x3f] ; ret
0x0000020000041ff7 : lea eax, dword ptr [rcx - 0xb0] ; mov qword ptr [r8], rax ; ret
0x000002000069143f : lea eax, dword ptr [rcx - 0xb] ; call rsi
0x00000200006857ad : lea eax, dword ptr [rcx - 0xd] ; test bl, r12b ; jmp 0x200006857e0
0x0000020000685839 : lea eax, dword ptr [rcx - 0xd] ; test bl, r12b ; jmp 0x2000068586c
0x00000200001d23d7 : lea eax, dword ptr [rcx - 1] ; call qword ptr [r11]
0x00000200001d2033 : lea eax, dword ptr [rcx - 1] ; call qword ptr [r15]
0x000002000046af12 : lea eax, dword ptr [rcx - 1] ; call r12
0x0000020000419f05 : lea eax, dword ptr [rcx - 1] ; call rbx
0x00000200004e1556 : lea eax, dword ptr [rcx - 1] ; call rdi
0x00000200004f12a0 : lea eax, dword ptr [rcx - 2] ; call qword ptr [rbx]
0x0000020000694e89 : lea eax, dword ptr [rcx - 2] ; call rbx
0x0000020000690c7a : lea eax, dword ptr [rcx - 2] ; call rdi
0x0000020000613f68 : lea eax, dword ptr [rcx - 2] ; sub ax, dx ; jmp 0x20000613f8a
0x00000200004ce610 : lea eax, dword ptr [rcx - 3] ; call rsi
0x00000200004ce87a : lea eax, dword ptr [rcx - 4] ; call rsi
0x00000200004d39d7 : lea eax, dword ptr [rcx - 6] ; call rsi
0x0000020000692af6 : lea eax, dword ptr [rcx - 7] ; call rdi
0x000002000046896f : lea eax, dword ptr [rcx - 8] ; call rsi
0x000002000069385d : lea eax, dword ptr [rcx - 9] ; call r14
0x0000020000690ec0 : lea eax, dword ptr [rcx - 9] ; call rdi
0x00000200003d81a4 : lea eax, dword ptr [rcx*4 + 8] ; ret
0x0000020000205de9 : lea eax, dword ptr [rcx*8 + 0x60] ; ret
0x00000200001b8365 : lea eax, dword ptr [rcx*8 + 0xd0] ; ret
0x00000200001f5704 : lea eax, dword ptr [rdi + rcx*2] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000114433 : lea eax, dword ptr [rdi + rcx] ; xor edx, edx ; xor ecx, ecx ; call rax
0x00000200004d31b6 : lea eax, dword ptr [rdi - 0x28] ; lea rcx, qword ptr [r13 + 0x10] ; call 0x2000014f4c9
0x0000020000507c1e : lea eax, dword ptr [rdx + 0x10] ; call 0x20000135ba2
0x000002000057b1e2 : lea eax, dword ptr [rdx + 0x10] ; call 0x200001a6b62
0x00000200006d9855 : lea eax, dword ptr [rdx + 0x20] ; add rsp, 0x28 ; ret
0x00000200004f320a : lea eax, dword ptr [rdx + 0x28] ; call 0x2000014f4c5
0x000002000052ad22 : lea eax, dword ptr [rdx + 0x30] ; call 0x2000014f4c6
0x00000200003ff90e : lea eax, dword ptr [rdx + 0x30] ; call 0x2000014f4c9
0x000002000057325c : lea eax, dword ptr [rdx + 0x38] ; call 0x2000014f4c5
0x00000200005e4d01 : lea eax, dword ptr [rdx + 0x38] ; mov qword ptr [rdx + 0x28], rax ; ret
0x00000200005236a7 : lea eax, dword ptr [rdx + 0x40] ; call 0x2000014f4c6
0x0000020000524a95 : lea eax, dword ptr [rdx + 0x48] ; call 0x2000014f4c6
0x000002000012f30e : lea eax, dword ptr [rdx + 0x48] ; call 0x2000014f4c9
0x0000020000526af1 : lea eax, dword ptr [rdx + 0x50] ; call 0x2000014f4c6
0x000002000052caff : lea eax, dword ptr [rdx + 0x58] ; call 0x2000014f4c6
0x000002000052cb23 : lea eax, dword ptr [rdx + 0x60] ; call 0x2000014f4c6
0x000002000003f8ae : lea eax, dword ptr [rdx + 0x880] ; ret
0x000002000057ab17 : lea eax, dword ptr [rdx + 0xb] ; call 0x200001a6b62
0x00000200003f181b : lea eax, dword ptr [rdx + 1] ; call 0x2000001abc6
0x00000200001f4c47 : lea eax, dword ptr [rdx + 1] ; movups xmmword ptr [rcx + 0x40], xmm0 ; ret
0x00000200005f1e97 : lea eax, dword ptr [rdx + 1] ; ret
0x00000200000e2c91 : lea eax, dword ptr [rdx + 2] ; add rsp, 0x28 ; ret
0x00000200005ea950 : lea eax, dword ptr [rdx + 2] ; call 0x200001a6b61
0x00000200005ea89c : lea eax, dword ptr [rdx + 3] ; call 0x200001a6b61
0x00000200005c8149 : lea eax, dword ptr [rdx + 3] ; call rsi
0x00000200004f4551 : lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x0000020000581de7 : lea eax, dword ptr [rdx + 5] ; call 0x200001a6b62
0x00000200005c8125 : lea eax, dword ptr [rdx + 5] ; call rsi
0x0000020000101f52 : lea eax, dword ptr [rdx + 8] ; jmp 0x20000101e2b
0x000002000013e007 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000013e01c
0x000002000013e006 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000013e01d
0x0000020000221b10 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000221b26
0x0000020000221b0f : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000221b27
0x0000020000223f9e : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000223fb4
0x0000020000223f9d : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000223fb5
0x000002000022984e : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000229864
0x000002000022984d : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000229865
0x0000020000229ac9 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000229adf
0x0000020000229ac8 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000229ae0
0x000002000022d9bf : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022d9d5
0x000002000022d9be : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022d9d6
0x000002000022dc03 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022dc19
0x000002000022dc02 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022dc1a
0x00000200002303d3 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x200002303e9
0x00000200002303d2 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x200002303ea
0x000002000073196a : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073197f
0x0000020000731969 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000731980
0x0000020000731bc8 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000731bdd
0x0000020000731bc7 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000731bde
0x00000200007338ea : lea eax, dword ptr [rdx + rax*8] ; jmp 0x200007338ff
0x00000200007338e9 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000733900
0x000002000073580b : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000735820
0x000002000073580a : lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000735821
0x000002000073e8ff : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073e914
0x000002000073e8fe : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073e915
0x000002000073eef0 : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073ef05
0x000002000073eeef : lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000073ef06
0x000002000003dacb : lea eax, dword ptr [rdx + rax*8] ; ret
0x000002000002dafe : lea eax, dword ptr [rdx + rcx] ; ret
0x000002000020e9bd : lea eax, dword ptr [rdx - 0x10] ; lock cmpxchg qword ptr [rcx], rdx ; ret
0x000002000006a571 : lea eax, dword ptr [rdx - 0x190] ; ret
0x0000020000051a4b : lea eax, dword ptr [rdx - 0x20] ; ret
0x00000200006baeb6 : lea eax, dword ptr [rdx - 0xe] ; call 0x20000207119
0x000002000014980b : lea eax, dword ptr [rdx*4] ; pop rdi ; ret
0x00000200001b2360 : lea eax, dword ptr [rip + 0x1476ba] ; ret
0x00000200003dbb77 : lea eax, dword ptr [rip + 0x1719c3] ; jmp 0x200003dbb48
0x0000020000132651 : lea eax, dword ptr [rip + 0x1c2041] ; ret
0x000002000013252b : lea eax, dword ptr [rip + 0x1c8eb7] ; mov qword ptr [rdx], rax ; ret
0x00000200005183b9 : lea eax, dword ptr [rip + 0x1e13e1] ; ret
0x00000200000b27ea : lea eax, dword ptr [rip + 0x24a490] ; ret
0x000002000009b461 : lea eax, dword ptr [rip + 0x261819] ; ret
0x00000200003fead9 : lea eax, dword ptr [rip + 0x2a0ad1] ; ret
0x0000020000044d65 : lea eax, dword ptr [rip + 0x2b796d] ; ret
0x00000200000064cb : lea eax, dword ptr [rip + 0x2f67af] ; ret
0x000002000011c520 : lea eax, dword ptr [rip + 0x58888e] ; ret
0x00000200000ef876 : lea eax, dword ptr [rip + 0x60c74] ; ret
0x00000200000ef8b0 : lea eax, dword ptr [rip + 0x6261a] ; ret
0x00000200000ef8a8 : lea eax, dword ptr [rip + 0x62642] ; ret
0x00000200000ef8b8 : lea eax, dword ptr [rip + 0x62652] ; ret
0x00000200000ef8c0 : lea eax, dword ptr [rip + 0x6266a] ; ret
0x00000200000ef8cd : lea eax, dword ptr [rip + 0x6269d] ; ret
0x00000200000ef8a0 : lea eax, dword ptr [rip + 0x626aa] ; ret
0x00000200004ea4d7 : lea eax, dword ptr [rip + 0x62883] ; ret
0x00000200004ea4e7 : lea eax, dword ptr [rip + 0x628a3] ; ret
0x00000200004ea4cf : lea eax, dword ptr [rip + 0x628eb] ; ret
0x00000200004ea4df : lea eax, dword ptr [rip + 0x6290b] ; ret
0x00000200001a541e : lea eax, dword ptr [rip + 0xa953c] ; mov qword ptr [rcx], rax ; ret
0x00000200000732d0 : lea eax, dword ptr [rip + 0xdd14a] ; ret
0x0000020000073317 : lea eax, dword ptr [rip + 0xdeac3] ; ret
0x0000020000073280 : lea eax, dword ptr [rip + 0xdeafa] ; ret
0x0000020000073346 : lea eax, dword ptr [rip + 0xdeb14] ; ret
0x000002000007328d : lea eax, dword ptr [rip + 0xdeb2d] ; ret
0x0000020000073261 : lea eax, dword ptr [rip + 0xdeb39] ; ret
0x000002000007329d : lea eax, dword ptr [rip + 0xdeb5d] ; ret
0x0000020000073295 : lea eax, dword ptr [rip + 0xdeb75] ; ret
0x00000200000732e5 : lea eax, dword ptr [rip + 0xdeba5] ; ret
0x00000200000732fa : lea eax, dword ptr [rip + 0xdebb0] ; ret
0x0000020000073278 : lea eax, dword ptr [rip + 0xdebb2] ; ret
0x0000020000073302 : lea eax, dword ptr [rip + 0xdebc8] ; ret
0x0000020000073331 : lea eax, dword ptr [rip + 0xdebf9] ; ret
0x000002000007330f : lea eax, dword ptr [rip + 0xdebfb] ; ret
0x0000020000073339 : lea eax, dword ptr [rip + 0xdec11] ; ret
0x00000200000732bf : lea eax, dword ptr [rip + 0xdec2b] ; ret
0x0000020000073324 : lea eax, dword ptr [rip + 0xdec46] ; ret
0x0000020000073357 : lea eax, dword ptr [rip + 0xdec73] ; ret
0x00000200000732f2 : lea eax, dword ptr [rip + 0xdecf8] ; ret
0x00000200004c6342 : lea eax, dword ptr [rip - 0x1d0408] ; mov rax, r8 ; ret
0x00000200004cd487 : lea eax, dword ptr [rip - 0x1d566d] ; ret
0x000002000017d9b1 : lea eax, dword ptr [rip - 0x2ba17] ; ret
0x000002000017d9a0 : lea eax, dword ptr [rip - 0x2d4b6] ; ret
0x00000200006534f6 : lea eax, dword ptr [rip - 0x382724] ; ret
0x0000020000653504 : lea eax, dword ptr [rip - 0x38275a] ; ret
0x00000200006534da : lea eax, dword ptr [rip - 0x382760] ; ret
0x00000200006534e8 : lea eax, dword ptr [rip - 0x3827a6] ; ret
0x00000200006534cc : lea eax, dword ptr [rip - 0x3827ca] ; ret
0x00000200006534be : lea eax, dword ptr [rip - 0x3827d4] ; ret
0x000002000019c341 : lea eax, dword ptr [rip - 0x4a337] ; ret
0x000002000076a991 : lea eax, dword ptr [rip - 0x61c497] ; ret
0x000002000076a9a9 : lea eax, dword ptr [rip - 0x620fcf] ; ret
0x000002000076a9b1 : lea eax, dword ptr [rip - 0x637817] ; ret
0x000002000076a97c : lea eax, dword ptr [rip - 0x677aca] ; ret
0x000002000076a984 : lea eax, dword ptr [rip - 0x6fef9a] ; ret
0x000002000076a9a1 : lea eax, dword ptr [rip - 0x6ff967] ; ret
0x000002000076a999 : lea eax, dword ptr [rip - 0x7006c3] ; ret
0x00000200003e0b6a : lea eax, dword ptr [rip - 0xe8d50] ; ret
0x000002000048f07f : lea eax, dword ptr [rsi + rbp] ; mov dword ptr [rsi + 0x58], eax ; call 0x200000bab49
0x0000020000193297 : lea eax, dword ptr [rsp + 0x20] ; mov rcx, r13 ; call 0x2000003f4bd
0x0000020000128b18 : lea eax, dword ptr [rsp + 0x30] ; call qword ptr [rbx]
0x0000020000677d89 : lea eax, dword ptr [rsp + 0x30] ; mov rcx, rax ; call r10
0x000002000040c157 : lea eax, dword ptr [rsp + 0x40] ; call r10
0x000002000075ed08 : lea eax, dword ptr [rsp + 0x40] ; call rax
0x000002000049b147 : lea eax, dword ptr [rsp + 0x50] ; call 0x200000bccc7
0x0000020000465312 : lea eax, dword ptr [rsp + 0x58] ; call rax
0x00000200000b2973 : lea eax, dword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x000002000048f292 : lea eax, dword ptr [rsp + 0x70] ; call 0x200000bccc7
0x00000200000fad83 : lea eax, dword ptr [rsp + 0x70] ; xor edx, edx ; call 0x20000056fc8
0x00000200003c959b : lea eax, dword ptr [rsp + 0x78] ; call 0x2000001582e
0x00000200001abd03 : lea eax, dword ptr [rsp + 0x88] ; call r9
0x0000020000143f81 : lea eax, dword ptr [rsp + 8] ; ret
0x000002000010f947 : lea eax, dword ptr [rsp] ; jmp 0x2000010f913
0x000002000049d2a7 : lea ebp, dword ptr [rax + rcx*8] ; mov rcx, rbp ; call 0x200000c2849
0x000002000042556f : lea ebp, dword ptr [rbx] ; add dword ptr [rax], eax ; add rsp, 0x70 ; pop rbx ; ret
0x00000200004f650a : lea ebp, dword ptr [rdi + 7] ; mov rdx, r13 ; call 0x200000b2778
0x0000020000127d5b : lea ebp, dword ptr [rdi - 1] ; jmp 0x20000127d26
0x000002000019d9db : lea ebp, dword ptr [rdi] ; ret
0x000002000006b2d1 : lea ebx, dword ptr [rax - 0x1000000] ; ret
0x00000200003f4b03 : lea ebx, dword ptr [rax - 0x10] ; jmp 0x200003f4acf
0x000002000048a5f0 : lea ebx, dword ptr [rax - 0x10] ; jmp 0x2000048a5bb
0x00000200000e0a01 : lea ebx, dword ptr [rax - 0xa000000] ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000014f57a : lea ebx, dword ptr [rbx + rcx*4] ; jmp r11
0x000002000016af74 : lea ebx, dword ptr [rcx - 8] ; jmp 0x2000016af84
0x000002000016b570 : lea ebx, dword ptr [rcx - 8] ; jmp 0x2000016b580
0x000002000016b640 : lea ebx, dword ptr [rcx - 8] ; jmp 0x2000016b650
0x000002000016b73a : lea ebx, dword ptr [rcx - 8] ; jmp 0x2000016b74a
0x0000020000174bf9 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000174c09
0x0000020000174d17 : lea ebx, dword ptr [rcx - 8] ; jmp 0x20000174d27
0x00000200001fd3b8 : lea ebx, dword ptr [rcx - 8] ; jmp 0x200001fd3c8
0x00000200001fd4d4 : lea ebx, dword ptr [rcx - 8] ; jmp 0x200001fd4e4
0x00000200004420d7 : lea ebx, dword ptr [rdi + 8] ; mov qword ptr [rsp + 0x48], rbx ; jmp 0x200004420ac
0x000002000051d52f : lea ebx, dword ptr [rdi] ; ret
0x00000200006bff8f : lea ebx, dword ptr [rdx + rbx*4] ; dec dword ptr [rax - 0x75] ; ret
0x000002000003c39d : lea ebx, dword ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000014dedb : lea ebx, dword ptr [rip + 0x14f] ; jmp r11
0x0000020000118f61 : lea ebx, dword ptr [rip + 0x1e3951] ; jmp 0x20000118f32
0x000002000014dc30 : lea ebx, dword ptr [rip + 0x31a] ; jmp r11
0x0000020000050842 : lea ecx, dword ptr [r9 + 1] ; mov dword ptr [rdx], ecx ; ret
0x00000200001221f3 : lea ecx, dword ptr [r9 + 2] ; test ecx, ecx ; jne 0x20000122198 ; ret
0x00000200004ee40e : lea ecx, dword ptr [rax + 0x18] ; xor edi, edi ; call 0x20000117ebc
0x00000200005a125b : lea ecx, dword ptr [rax + 0x1c] ; call r10
0x00000200001f63bc : lea ecx, dword ptr [rax + 0x26] ; cdq ; idiv ecx ; add eax, r9d ; ret
0x00000200001fa812 : lea ecx, dword ptr [rax + 0x55f] ; mov eax, ecx ; ret
0x00000200001aeaf2 : lea ecx, dword ptr [rax + 0x7b] ; call r9
0x0000020000507bfa : lea ecx, dword ptr [rax + 2] ; call 0x200001356aa
0x000002000048a714 : lea ecx, dword ptr [rax + rdx*4] ; jmp 0x200005b6966
0x00000200003dd52a : lea ecx, dword ptr [rax - 0x10] ; jmp 0x200003dd4f5
0x000002000040f2a8 : lea ecx, dword ptr [rax - 0x10] ; jmp 0x2000040f274
0x0000020000609bc2 : lea ecx, dword ptr [rax - 0x15] ; call 0x20000231ce6
0x00000200004903f3 : lea ecx, dword ptr [rax - 0x17ffffff] ; adc ebp, dword ptr [rsi] ; ret
0x000002000060a850 : lea ecx, dword ptr [rax - 3] ; call 0x20000231ce6
0x00000200003d81a6 : lea ecx, dword ptr [rax] ; add byte ptr [rax], al ; add bl, al ; or eax, 0xffffffff ; ret
0x00000200004ad6c3 : lea ecx, dword ptr [rbp + 0x10] ; call 0x2000004eb09
0x00000200005134aa : lea ecx, dword ptr [rbp + 0x10] ; call 0x200001392b2
0x00000200004d31ba : lea ecx, dword ptr [rbp + 0x10] ; call 0x2000014f4c5
0x000002000015d66e : lea ecx, dword ptr [rbp + 0x10] ; call rbx
0x000002000052aa4e : lea ecx, dword ptr [rbp + 0x10] ; xor edx, edx ; call 0x2000014f4c8
0x000002000043425a : lea ecx, dword ptr [rbp + 0x138] ; call 0x20000057229
0x00000200004d7599 : lea ecx, dword ptr [rbp + 0x200] ; call 0x20000053854
0x0000020000427d10 : lea ecx, dword ptr [rbp + 0x20] ; call 0x20000057226
0x000002000049858b : lea ecx, dword ptr [rbp + 0x40] ; call 0x2000007b793
0x0000020000498644 : lea ecx, dword ptr [rbp + 0x40] ; call 0x200000bab46
0x00000200004987ba : lea ecx, dword ptr [rbp + 0x40] ; call 0x200000bcd26
0x000002000061741f : lea ecx, dword ptr [rbp + 0x40] ; call 0x200000c36c5
0x00000200001af7c7 : lea ecx, dword ptr [rbp + 0x58] ; lea edx, dword ptr [rbp + 1] ; call 0x200001aba74
0x00000200001ea19e : lea ecx, dword ptr [rbp + 0x68] ; call 0x200000d6405
0x000002000043320d : lea ecx, dword ptr [rbp + 0x6a0] ; call 0x20000053c69
0x00000200004992e2 : lea ecx, dword ptr [rbp + 0x760] ; call 0x200000c1b39
0x000002000039bd29 : lea ecx, dword ptr [rbp + 0xf] ; mov edx, esi ; call 0x20000067f63
0x000002000010c32a : lea ecx, dword ptr [rbp + 0xf] ; xor edi, edi ; call 0x200000c36c9
0x000002000058e149 : lea ecx, dword ptr [rbp + 7] ; call 0x200001bc7e2
0x000002000058e1fc : lea ecx, dword ptr [rbp + 7] ; mov dword ptr [rbp - 0x25], edi ; call 0x200001bc7e5
0x000002000058e1a5 : lea ecx, dword ptr [rbp + 7] ; mov dword ptr [rbp - 0x29], edi ; call 0x200001bc7e5
0x00000200006176da : lea ecx, dword ptr [rbp + 8] ; call 0x2000012398d
0x000002000052f7ff : lea ecx, dword ptr [rbp + 8] ; call 0x2000040ba1d
0x000002000058a3cd : lea ecx, dword ptr [rbp - 0x10] ; call 0x2000046662d
0x000002000039bd37 : lea ecx, dword ptr [rbp - 0x11] ; xor edx, edx ; call 0x20000067f63
0x00000200000d43e4 : lea ecx, dword ptr [rbp - 0x15] ; call 0x200000b0615
0x0000020000762c74 : lea ecx, dword ptr [rbp - 0x20] ; and dword ptr [rbp - 0x10], 0 ; call qword ptr [rdi]
0x000002000076b0c1 : lea ecx, dword ptr [rbp - 0x20] ; call 0x200000c36c9
0x00000200004bbf85 : lea ecx, dword ptr [rbp - 0x20] ; call 0x200000e8386
0x00000200004c28e3 : lea ecx, dword ptr [rbp - 0x20] ; call 0x200000e8b5a
0x00000200005010cd : lea ecx, dword ptr [rbp - 0x20] ; mov edi, eax ; call r15
0x000002000050fa57 : lea ecx, dword ptr [rbp - 0x21] ; call 0x200001392b2
0x0000020000590412 : lea ecx, dword ptr [rbp - 0x28] ; call 0x200001bd482
0x00000200005942e4 : lea ecx, dword ptr [rbp - 0x29] ; mov rdi, rsi ; call 0x200004b0568
0x000002000059289b : lea ecx, dword ptr [rbp - 0x31] ; call 0x200001bd4ea
0x00000200003ec99a : lea ecx, dword ptr [rbp - 0x38] ; call rax
0x0000020000677438 : lea ecx, dword ptr [rbp - 0x40] ; call 0x200000c36c5
0x00000200004ec909 : lea ecx, dword ptr [rbp - 0x40] ; call 0x20000117ea6
0x00000200005152f3 : lea ecx, dword ptr [rbp - 0x40] ; call 0x200001392b2
0x0000020000593cd1 : lea ecx, dword ptr [rbp - 0x40] ; call 0x200001bd35e
0x00000200004edcf6 : lea ecx, dword ptr [rbp - 0x48] ; call 0x20000117ea6
0x000002000011744f : lea ecx, dword ptr [rbp - 0x50] ; call 0x200000c36c5
0x000002000059476d : lea ecx, dword ptr [rbp - 0x50] ; call 0x200001bd4ea
0x00000200004e950c : lea ecx, dword ptr [rbp - 0x50] ; call 0x200004c5755
0x00000200006773f0 : lea ecx, dword ptr [rbp - 0x50] ; xor esi, esi ; call 0x200000c36c7
0x00000200005caa16 : lea ecx, dword ptr [rbp - 0x51] ; call 0x200001ec842
0x00000200004cbb40 : lea ecx, dword ptr [rbp - 0x59] ; xor edx, edx ; call qword ptr [rdi]
0x000002000060748e : lea ecx, dword ptr [rbp - 0x60] ; call 0x200000c36c5
0x000002000016f36f : lea ecx, dword ptr [rbp - 0x61] ; xor r8d, r8d ; mov rdx, rsi ; call rax
0x0000020000438a49 : lea ecx, dword ptr [rbp - 0x69] ; call qword ptr [rax]
0x00000200003e64c2 : lea ecx, dword ptr [rbp - 0x71] ; call 0x2000043488d
0x0000020000606e91 : lea ecx, dword ptr [rbp - 0xf] ; call 0x20000231ce6
0x0000020000606d91 : lea ecx, dword ptr [rbp - 1] ; call 0x20000231ce6
0x0000020000606e0a : lea ecx, dword ptr [rbp - 7] ; call 0x20000231ce6
0x0000020000525a38 : lea ecx, dword ptr [rbp - 9] ; call r12
0x000002000049f970 : lea ecx, dword ptr [rbx + 0x30] ; call 0x200000c1b36
0x000002000049d458 : lea ecx, dword ptr [rbx + 0x30] ; xor edx, edx ; call 0x200000c2848
0x000002000052d271 : lea ecx, dword ptr [rbx + 8] ; call 0x2000014f186
0x00000200000b3285 : lea ecx, dword ptr [rbx + rax] ; call 0x2000014f4c5
0x000002000042fe7f : lea ecx, dword ptr [rbx + rdx*2] ; mov rax, r9 ; ret
0x00000200004c00af : lea ecx, dword ptr [rbx - 0x10] ; call 0x200000e8386
0x000002000061015a : lea ecx, dword ptr [rbx - 0x4f] ; call 0x20000231ce6
0x000002000060d3d9 : lea ecx, dword ptr [rbx - 8] ; call 0x20000231016
0x00000200001fbe00 : lea ecx, dword ptr [rcx + 0x30] ; sub rcx, 1 ; jne 0x200001fbdf8 ; ret
0x0000020000050843 : lea ecx, dword ptr [rcx + 1] ; mov dword ptr [rdx], ecx ; ret
0x00000200004894c4 : lea ecx, dword ptr [rcx + 2] ; sub rdx, 1 ; jne 0x200004894c2 ; ret
0x00000200001221f4 : lea ecx, dword ptr [rcx + 2] ; test ecx, ecx ; jne 0x20000122197 ; ret
0x000002000010506e : lea ecx, dword ptr [rcx + 4] ; sub r10, 1 ; jne 0x2000010504e ; ret
0x00000200000092be : lea ecx, dword ptr [rcx + 4] ; sub rdx, 1 ; jne 0x200000092c4 ; ret
0x00000200001e3ba0 : lea ecx, dword ptr [rcx + 8] ; sub r8, 1 ; jne 0x200001e3b9e ; ret
0x0000020000478a85 : lea ecx, dword ptr [rcx + 8] ; sub r8, 1 ; jne 0x20000478a86 ; ret
0x000002000048f208 : lea ecx, dword ptr [rcx + rcx*4] ; lea rax, qword ptr [rax + rcx*8] ; ret
0x0000020000148e63 : lea ecx, dword ptr [rcx + rdx*4] ; jmp r9
0x000002000049be6a : lea ecx, dword ptr [rdi + 0x10] ; call 0x200000bd1f2
0x000002000049cb56 : lea ecx, dword ptr [rdi + 0x30] ; call 0x200000c1b36
0x000002000049b4e3 : lea ecx, dword ptr [rdi + 0x30] ; xor edx, edx ; call 0x200000c2848
0x00000200005afda0 : lea ecx, dword ptr [rdi + 0x500] ; call 0x200001cbff0
0x000002000051be05 : lea ecx, dword ptr [rdi + 0x50] ; call 0x20000149156
0x00000200005360cb : lea ecx, dword ptr [rdi + 0x59] ; call rax
0x00000200001a5937 : lea ecx, dword ptr [rdi + 5] ; call 0x20000061bb5
0x00000200006c60e3 : lea ecx, dword ptr [rdi + 8] ; call 0x20000082335
0x000002000058c79e : lea ecx, dword ptr [rdi + 8] ; call 0x200001ba382
0x0000020000588d17 : lea ecx, dword ptr [rdi - 0x40] ; mov edx, esi ; call 0x20000634fb3
0x0000020000588d7d : lea ecx, dword ptr [rdi - 0x40] ; xor edx, edx ; call 0x20000635033
0x0000020000478576 : lea ecx, dword ptr [rdi - 0x470] ; call r15
0x00000200001b3339 : lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x0000020000438436 : lea ecx, dword ptr [rdx + 0x60] ; call 0x20000065cd2
0x000002000060a20c : lea ecx, dword ptr [rdx + 1] ; mov dword ptr [rbp - 0x71], eax ; call 0x20000231ce9
0x0000020000776fd4 : lea ecx, dword ptr [rdx + 3] ; call 0x200000432c1
0x0000020000496583 : lea ecx, dword ptr [rdx + rax*8] ; jmp 0x20000496540
0x000002000060d179 : lea ecx, dword ptr [rdx - 0x17] ; call 0x20000231ce6
0x000002000060d04f : lea ecx, dword ptr [rdx - 0x1f] ; call 0x20000231ce6
0x000002000060d12a : lea ecx, dword ptr [rdx - 0x27] ; call 0x20000231ce6
0x0000020000609b07 : lea ecx, dword ptr [rdx - 0x2f] ; call 0x20000231ce6
0x0000020000685ab2 : lea ecx, dword ptr [rdx - 0x49] ; call 0x20000231ce5
0x00000200001d764f : lea ecx, dword ptr [rdx - 0x4c] ; call 0x20000143945
0x0000020000603c65 : lea ecx, dword ptr [rdx - 0x53] ; call 0x20000231ce6
0x0000020000603bc0 : lea ecx, dword ptr [rdx - 0xf] ; call 0x20000231ce6
0x0000020000182dc3 : lea ecx, dword ptr [rip + 0x14d697] ; call 0x200000deff8
0x00000200000e9b65 : lea ecx, dword ptr [rip + 0x154a65] ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000015c246 : lea ecx, dword ptr [rip + 0x17ed64] ; call 0x200000684c8
0x00000200001677ba : lea ecx, dword ptr [rip + 0x19cbc0] ; call 0x20000053a80
0x00000200000f03f1 : lea ecx, dword ptr [rip + 0x292959] ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000004c1d0 : lea ecx, dword ptr [rip + 0x2b663a] ; call 0x200000684c8
0x0000020000038a75 : lea ecx, dword ptr [rip + 0x34a2d5] ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000020000183161 : lea ecx, dword ptr [rip + 0x64a75] ; call rax
0x0000020000172079 : lea ecx, dword ptr [rip + 0x75b5d] ; call rax
0x000002000014643c : lea ecx, dword ptr [rip + 0x7d69] ; jmp rcx
0x00000200005ccc1e : lea ecx, dword ptr [rip + 0xd262c] ; call 0x200003d8ea0
0x0000020000429e3e : lea ecx, dword ptr [rip - 0x14d9f4] ; call 0x20000051c01
0x0000020000420d7a : lea ecx, dword ptr [rip - 0x1541e0] ; call 0x20000045279
0x0000020000456da1 : lea ecx, dword ptr [rip - 0x15c787] ; call 0x2000007f3d9
0x0000020000456f3b : lea ecx, dword ptr [rip - 0x15c921] ; call 0x2000007f569
0x000002000048d4b8 : lea ecx, dword ptr [rip - 0x192dc6] ; call 0x200000bc259
0x000002000048d5e2 : lea ecx, dword ptr [rip - 0x192ef0] ; call 0x200000bc259
0x000002000048d828 : lea ecx, dword ptr [rip - 0x193136] ; call 0x200000bc259
0x0000020000497869 : lea ecx, dword ptr [rip - 0x19c68f] ; call 0x200000c1b39
0x000002000049aa44 : lea ecx, dword ptr [rip - 0x19f86a] ; call 0x200000c1b39
0x000002000049aae5 : lea ecx, dword ptr [rip - 0x19f913] ; call 0x200000bc369
0x000002000049ab0f : lea ecx, dword ptr [rip - 0x19f935] ; call 0x200000c1b39
0x000002000049c43c : lea ecx, dword ptr [rip - 0x1a1e62] ; call 0x200000c1b39
0x000002000049cfc1 : lea ecx, dword ptr [rip - 0x1a2ba7] ; call 0x200000bd249
0x000002000049d054 : lea ecx, dword ptr [rip - 0x1a2c3a] ; call 0x200000c1b39
0x000002000049d0c4 : lea ecx, dword ptr [rip - 0x1a2c4a] ; call 0x200000bd249
0x000002000049d174 : lea ecx, dword ptr [rip - 0x1a2cfa] ; call 0x200000c1b39
0x000002000049d1a8 : lea ecx, dword ptr [rip - 0x1a2d2e] ; call 0x200000bd249
0x000002000049e8cd : lea ecx, dword ptr [rip - 0x1a42f3] ; call 0x200000c1b39
0x00000200004a10ae : lea ecx, dword ptr [rip - 0x1a6964] ; call 0x200000c1b39
0x00000200004c3aab : lea ecx, dword ptr [rip - 0x1af3b1] ; call 0x200000eb5b9
0x00000200004c2072 : lea ecx, dword ptr [rip - 0x1c7960] ; call 0x200000e8159
0x000002000050ff7e : lea ecx, dword ptr [rip - 0x21588c] ; call 0x200000bc258
0x00000200005974b3 : lea ecx, dword ptr [rip - 0x29c849] ; call 0x200000c36c8
0x0000020000587520 : lea ecx, dword ptr [rip - 0x2ab906] ; call 0x20000053798
0x00000200001a0bb4 : lea ecx, dword ptr [rip - 0x50c8a] ; call 0x200005fce8c
0x000002000076a5e4 : lea ecx, dword ptr [rip - 0x52d952] ; call 0x20000399b2d
0x00000200006be89d : lea ecx, dword ptr [rip - 0x5abbe3] ; jmp rax
0x00000200006beaf9 : lea ecx, dword ptr [rip - 0x5abe3f] ; jmp rax
0x000002000044bf26 : lea ecx, dword ptr [rsi + 0x10] ; call 0x200000e8155
0x0000020000498eb5 : lea ecx, dword ptr [rsi + 0x28] ; call 0x200000c1b36
0x000002000049dbba : lea ecx, dword ptr [rsi + 0x30] ; call 0x200000c1b36
0x0000020000438073 : lea ecx, dword ptr [rsi + 0x358] ; call 0x2000005d405
0x000002000045bb91 : lea ecx, dword ptr [rsi + 0x70] ; call 0x200000895e6
0x00000200000675e5 : lea ecx, dword ptr [rsi + 0x70] ; call 0x20000149159
0x0000020000498efd : lea ecx, dword ptr [rsi + 0x760] ; call 0x200000c1b39
0x00000200004c40c9 : lea ecx, dword ptr [rsi + 1] ; call 0x200000ebe76
0x0000020000603d99 : lea ecx, dword ptr [rsi + 1] ; call 0x20000231ce6
0x000002000048c99b : lea ecx, dword ptr [rsi + rax*8] ; add rcx, rbp ; call 0x200000bab49
0x00000200000b3226 : lea ecx, dword ptr [rsi + rax] ; call 0x2000014f4c5
0x00000200004b1ef3 : lea ecx, dword ptr [rsp + 0x140] ; call 0x2000044e17d
0x0000020000425545 : lea ecx, dword ptr [rsp + 0x20] ; call 0x200000459af
0x00000200001b46e9 : lea ecx, dword ptr [rsp + 0x20] ; call 0x200000c09d6
0x00000200000efed1 : lea ecx, dword ptr [rsp + 0x20] ; call 0x200000ec186
0x000002000041256f : lea ecx, dword ptr [rsp + 0x20] ; call 0x20000143728
0x00000200006b6d9a : lea ecx, dword ptr [rsp + 0x20] ; call r8
0x00000200005037fd : lea ecx, dword ptr [rsp + 0x20] ; call rdi
0x00000200004299cc : lea ecx, dword ptr [rsp + 0x288] ; call 0x200000c5ca9
0x000002000052c994 : lea ecx, dword ptr [rsp + 0x28] ; call 0x2000014f187
0x000002000052db20 : lea ecx, dword ptr [rsp + 0x30] ; call 0x2000014f187
0x000002000019e9e7 : lea ecx, dword ptr [rsp + 0x30] ; call rax
0x0000020000133236 : lea ecx, dword ptr [rsp + 0x30] ; mov rdx, r12 ; call rax
0x000002000049ae17 : lea ecx, dword ptr [rsp + 0x38] ; call 0x200000bc8c7
0x000002000049ae0d : lea ecx, dword ptr [rsp + 0x38] ; call 0x200000bc8d7
0x000002000049ad78 : lea ecx, dword ptr [rsp + 0x38] ; call 0x200000bc947
0x00000200005c056e : lea ecx, dword ptr [rsp + 0x3c] ; call 0x200001ec842
0x00000200004ec0e4 : lea ecx, dword ptr [rsp + 0x40] ; call 0x20000117ea7
0x00000200001af7e0 : lea ecx, dword ptr [rsp + 0x40] ; call 0x200001aba72
0x00000200005d3b6f : lea ecx, dword ptr [rsp + 0x40] ; call 0x200001fb6f7
0x000002000008c847 : lea ecx, dword ptr [rsp + 0x40] ; call rax
0x000002000049afcc : lea ecx, dword ptr [rsp + 0x48] ; call 0x200000bc8c7
0x000002000049afc2 : lea ecx, dword ptr [rsp + 0x48] ; call 0x200000bc8d7
0x000002000049af99 : lea ecx, dword ptr [rsp + 0x48] ; call 0x200000bc947
0x00000200005e7483 : lea ecx, dword ptr [rsp + 0x48] ; call 0x200000c36c6
0x000002000052e85e : lea ecx, dword ptr [rsp + 0x48] ; call 0x2000014f4c7
0x0000020000128b13 : lea ecx, dword ptr [rsp + 0x48] ; lea r8, qword ptr [rsp + 0x30] ; call qword ptr [rbx]
0x0000020000035cec : lea ecx, dword ptr [rsp + 0x50] ; call 0x20000091f46
0x00000200007845a4 : lea ecx, dword ptr [rsp + 0x50] ; call 0x20000140806
0x0000020000781b4e : lea ecx, dword ptr [rsp + 0x50] ; call r12
0x0000020000105c88 : lea ecx, dword ptr [rsp + 0x60] ; call 0x20000091f46
0x00000200004c4d74 : lea ecx, dword ptr [rsp + 0x68] ; call 0x200000ebb3b
0x00000200000b296e : lea ecx, dword ptr [rsp + 0x70] ; lea r8, qword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x000002000052db3a : lea ecx, dword ptr [rsp + 0x78] ; call 0x2000014f187
0x000002000067324f : lea ecx, dword ptr [rsp + 0xe8] ; call 0x2000014f4c9
0x0000020000685ab1 : lea ecx, dword ptr fs:[rdx - 0x49] ; call 0x20000231ce6
0x000002000049b9ae : lea edi, dword ptr [rax + rcx*8] ; mov rcx, rdi ; call 0x200000c2849
0x00000200006b4b77 : lea edi, dword ptr [rax] ; ret 0x41ff
0x0000020000106273 : lea edi, dword ptr [rbp + 0x27] ; add bh, bh ; ret
0x00000200005963d7 : lea edi, dword ptr [rbx + 0x3ae990ff] ; ret
0x000002000021ecd7 : lea edi, dword ptr [rbx + rax*8] ; mov rax, qword ptr [rcx] ; or rax, rdx ; jmp 0x2000021ecf6
0x00000200006bc3f8 : lea edi, dword ptr [rbx] ; add r15d, r14d ; mov edx, r15d ; call rdi
0x00000200000b9094 : lea edi, dword ptr [rcx + 0x48] ; mov rcx, rdi ; call 0x20000085328
0x000002000073bd06 : lea edi, dword ptr [rdi + 0x50] ; mov rax, rdx ; jmp 0x2000073bd15
0x000002000015756b : lea edi, dword ptr [rdx + 0x1f] ; jmp 0x2000000384d
0x0000020000655b2c : lea edi, dword ptr [rdx + 0x4800ebff] ; add esp, 0x38 ; ret
0x000002000050e3d6 : lea edi, dword ptr [rsi + 0x24] ; mov r8d, edi ; call 0x20000135bf5
0x000002000052d85a : lea edi, dword ptr [rsi + rsi] ; mov r8, rdi ; call 0x2000014f189
0x0000020000498929 : lea edx, dword ptr [r10 + r10] ; call 0x200000bab47
0x0000020000507bd1 : lea edx, dword ptr [r15 + 0x5c] ; call 0x200001356ab
0x0000020000512c6b : lea edx, dword ptr [r15 + 2] ; call 0x20000140467
0x00000200003f3951 : lea edx, dword ptr [r8 + 1] ; call 0x2000001abc7
0x00000200005c764f : lea edx, dword ptr [r9 + 4] ; call 0x20000143946
0x00000200001fb6a2 : lea edx, dword ptr [rax + 0x18] ; mov rax, rdx ; ret
0x000002000010cdaf : lea edx, dword ptr [rax + 0x1f] ; cmove eax, edx ; ret
0x00000200001c6af4 : lea edx, dword ptr [rax + 0xf] ; mov cr8, rdx ; jmp 0x200001c6b17
0x00000200003f3952 : lea edx, dword ptr [rax + 1] ; call 0x2000001abc6
0x000002000040b490 : lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x00000200006c2735 : lea edx, dword ptr [rax + 1] ; test ecx, ecx ; cmovne eax, edx ; ret
0x00000200004bbbe0 : lea edx, dword ptr [rax + 3] ; call r10
0x000002000003cd0c : lea edx, dword ptr [rax + 8] ; test rdx, rdx ; jne 0x2000003ccfe ; ret
0x000002000069c96d : lea edx, dword ptr [rbp + 0x20] ; call 0x200001445a9
0x00000200005d20ed : lea edx, dword ptr [rbp + 0x20] ; mov rcx, r15 ; call 0x2000021e3ac
0x00000200000fcbb4 : lea edx, dword ptr [rbp + 0x28] ; mov rcx, rbx ; call 0x200000f8de4
0x00000200004aebf2 : lea edx, dword ptr [rbp + 0x38] ; mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200005be18e : lea edx, dword ptr [rbp + 0x4f] ; mov rcx, r13 ; call r8
0x00000200001af7ca : lea edx, dword ptr [rbp + 1] ; call 0x200001aba71
0x0000020000625866 : lea edx, dword ptr [rbp + 1] ; movdqu xmmword ptr [rsi], xmm0 ; call 0x20000031b45
0x00000200004c40c6 : lea edx, dword ptr [rbp + 8] ; lea ecx, dword ptr [rsi + 1] ; call 0x200000ebe79
0x00000200005a4a8d : lea edx, dword ptr [rbp - 0x10] ; mov rcx, rsi ; call 0x200001d3811
0x00000200005143c3 : lea edx, dword ptr [rbp - 0x11] ; call 0x20000140486
0x00000200000d20ce : lea edx, dword ptr [rbp - 0x20] ; call r11
0x0000020000446ab2 : lea edx, dword ptr [rbp - 0x31] ; mov rcx, rsi ; call 0x20000074c99
0x0000020000446ac1 : lea edx, dword ptr [rbp - 0x41] ; call 0x20000074c96
0x000002000051279c : lea edx, dword ptr [rbp - 0x48] ; mov rcx, rdi ; call r15
0x00000200004e075c : lea edx, dword ptr [rbp - 0x51] ; mov qword ptr [rbp - 0x51], r11 ; call rax
0x000002000060427b : lea edx, dword ptr [rbp - 0x51] ; mov r8b, 1 ; call 0x200004b0568
0x000002000019f9f3 : lea edx, dword ptr [rbp - 0x58] ; call 0x2000003bc85
0x00000200005be441 : lea edx, dword ptr [rbp - 0x59] ; mov rcx, r10 ; call rax
0x0000020000514609 : lea edx, dword ptr [rbp - 0x80] ; call 0x20000140486
0x0000020000006695 : lea edx, dword ptr [rbp - 1] ; call 0x200000628b5
0x000002000016b64a : lea edx, dword ptr [rbp] ; mov rcx, rdi ; call 0x20000047958
0x000002000016b744 : lea edx, dword ptr [rbp] ; mov rcx, rsi ; call 0x20000047958
0x000002000019e27a : lea edx, dword ptr [rbx + 0x1e0] ; call rax
0x00000200001e79ac : lea edx, dword ptr [rbx + 0x1e] ; call r9
0x000002000010e290 : lea edx, dword ptr [rbx + 2] ; call 0x2000010e1f1
0x00000200001e7809 : lea edx, dword ptr [rbx + 3] ; call r9
0x0000020000467da3 : lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x00000200005c7650 : lea edx, dword ptr [rcx + 4] ; call 0x20000143945
0x0000020000443b67 : lea edx, dword ptr [rcx - 0x30] ; call rax
0x00000200000bca72 : lea edx, dword ptr [rdi + 0x10] ; call r8
0x00000200004c3049 : lea edx, dword ptr [rdi + 0x20] ; mov rcx, r14 ; call 0x200000e9469
0x0000020000507bd2 : lea edx, dword ptr [rdi + 0x5c] ; call 0x200001356aa
0x0000020000512c6c : lea edx, dword ptr [rdi + 2] ; call 0x20000140466
0x00000200004431e8 : lea edx, dword ptr [rdi - 0x30] ; mov rcx, r15 ; call rax
0x0000020000121fa5 : lea edx, dword ptr [rdx + 0x10] ; sub rcx, 1 ; jne 0x20000121fa3 ; ret
0x00000200004858db : lea edx, dword ptr [rdx + 4] ; add ecx, -1 ; jne 0x200004858dd ; ret
0x000002000012356b : lea edx, dword ptr [rdx + 8] ; add r8d, -1 ; jne 0x20000123554 ; ret
0x000002000049892a : lea edx, dword ptr [rdx + rdx] ; call 0x200000bab46
0x0000020000535f79 : lea edx, dword ptr [rip + 0x12b61] ; jmp 0x20000535f4b
0x0000020000182df9 : lea edx, dword ptr [rip + 0x14b9b1] ; call rax
0x000002000050b8d7 : lea edx, dword ptr [rip + 0x3e683] ; call 0x20000133f79
0x00000200001ed489 : lea edx, dword ptr [rip + 0x617d1] ; call 0x20000089718
0x0000020000149213 : lea edx, dword ptr [rip + 0x71] ; jmp rdx
0x000002000040dcbc : lea edx, dword ptr [rip - 0x117d82] ; mov rax, rdx ; ret
0x0000020000463ea0 : lea edx, dword ptr [rip - 0x16d9e6] ; mov rax, rdx ; ret
0x000002000045de6b : lea edx, dword ptr [rip - 0x227629] ; call 0x20000088d49
0x0000020000665605 : lea edx, dword ptr [rip - 0x415ceb] ; call 0x200006618c0
0x000002000060ef69 : lea edx, dword ptr [rsi + rsi] ; call 0x20000231ce6
0x00000200005a1de2 : lea edx, dword ptr [rsp + 0x100] ; mov cl, 0x12 ; call rax
0x00000200005806c2 : lea edx, dword ptr [rsp + 0x100] ; mov cl, 0x13 ; call rax
0x00000200005b7d52 : lea edx, dword ptr [rsp + 0x110] ; mov cl, 0xe ; call rax
0x00000200005bb52e : lea edx, dword ptr [rsp + 0x128] ; mov cl, 0x11 ; call rax
0x00000200005a1aa0 : lea edx, dword ptr [rsp + 0x150] ; mov cl, 0xb ; call rax
0x00000200005bc617 : lea edx, dword ptr [rsp + 0x1f0] ; mov cl, 0xd ; call rax
0x00000200004fceef : lea edx, dword ptr [rsp + 0x20] ; mov ecx, edi ; call rsi
0x00000200005bc8e8 : lea edx, dword ptr [rsp + 0x230] ; mov cl, 0x10 ; call rax
0x00000200001b303a : lea edx, dword ptr [rsp + 0x28] ; mov cl, bl ; call rax
0x000002000010c606 : lea edx, dword ptr [rsp + 0x28] ; xor ecx, ecx ; call rax
0x0000020000403cf9 : lea edx, dword ptr [rsp + 0x30] ; call rax
0x000002000019d0c5 : lea edx, dword ptr [rsp + 0x30] ; mov ecx, 0xa ; call rax
0x000002000019d0a2 : lea edx, dword ptr [rsp + 0x30] ; mov ecx, 0xd ; call rax
0x00000200004243c9 : lea edx, dword ptr [rsp + 0x30] ; mov rcx, rbp ; call 0x20000140689
0x0000020000414e80 : lea edx, dword ptr [rsp + 0x38] ; call 0x2000003feb7
0x00000200001ac610 : lea edx, dword ptr [rsp + 0x38] ; call r8
0x0000020000512e93 : lea edx, dword ptr [rsp + 0x40] ; call 0x20000140487
0x0000020000066c65 : lea edx, dword ptr [rsp + 0x40] ; mov bl, al ; call rsi
0x00000200005126b6 : lea edx, dword ptr [rsp + 0x48] ; call 0x20000140487
0x00000200001ac5e8 : lea edx, dword ptr [rsp + 0x48] ; call r9
0x0000020000421056 : lea edx, dword ptr [rsp + 0x50] ; call 0x20000045313
0x000002000043cab4 : lea edx, dword ptr [rsp + 0x50] ; mov rcx, rdi ; call rsi
0x0000020000669403 : lea edx, dword ptr [rsp + 0x58] ; call rax
0x00000200004b32f9 : lea edx, dword ptr [rsp + 0x58] ; mov rcx, rbx ; call r15
0x00000200003f85bf : lea edx, dword ptr [rsp + 0x58] ; mov rcx, rbx ; call rsi
0x00000200005962f1 : lea edx, dword ptr [rsp + 0x60] ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000200003fa37b : lea edx, dword ptr [rsp + 0x78] ; mov rcx, rdi ; call r12
0x00000200005c2d3e : lea edx, dword ptr [rsp + 0xe8] ; mov cl, 0x14 ; call rax
0x000002000055eff8 : lea edx, dword ptr [rsp + 0xf0] ; mov cl, 0xf ; call rax
0x0000020000517d72 : lea esi, dword ptr [r14 + 4] ; mov edx, esi ; call 0x20000143369
0x0000020000568d31 : lea esi, dword ptr [rax - 0xfffffa] ; ret
0x00000200002288dc : lea esi, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x000002000053cfef : lea esi, dword ptr [rbx] ; sar bh, 0x8b ; ret
0x000002000061f9ef : lea esi, dword ptr [rdi] ; mov cl, 0xff ; add rsp, 0x58 ; ret
0x000002000076428d : lea esi, dword ptr [rip - 0x1bba3831] ; add esi, edi ; ret 0x38e8
0x0000020000517d73 : lea esi, dword ptr [rsi + 4] ; mov edx, esi ; call 0x20000143368
0x000002000008e2b8 : lea esp, dword ptr [rax + 0xf] ; add byte ptr [rsi - 1], ah ; ret 0x3b66
0x00000200004992e3 : lea esp, dword ptr [rax + 7] ; add byte ptr [rax], al ; call 0x200000c1b38
0x0000020000209c7f : lea esp, dword ptr [rax] ; add byte ptr [rbx + rax - 0x3f], cl ; jmp r8
0x000002000048b893 : lea esp, dword ptr [rax] ; or eax, dword ptr [rax] ; add al, ch ; ret
0x0000020000057c2b : lea esp, dword ptr [rbp + 0x20] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200006aaef3 : lea esp, dword ptr [rbp + 0x20] ; pop rbp ; ret
0x00000200000ffd92 : lea esp, dword ptr [rbp + 0x30] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200000ff34e : lea esp, dword ptr [rbp + 0x30] ; pop rbp ; ret
0x0000020000201bb9 : lea esp, dword ptr [rbp + 0x40] ; pop r15 ; pop r14 ; pop rbp ; ret
0x0000020000047923 : lea esp, dword ptr [rbp + 0x40] ; pop rbp ; ret
0x000002000014f579 : lea r11, qword ptr [r11 + r9*4] ; jmp r11
0x000002000014deda : lea r11, qword ptr [rip + 0x14f] ; jmp r11
0x000002000014dc2f : lea r11, qword ptr [rip + 0x31a] ; jmp r11
0x00000200004f6509 : lea r13, qword ptr [r15 + 7] ; mov rdx, r13 ; call 0x200000b2779
0x000002000021ecd6 : lea r15, qword ptr [r11 + rax*8] ; mov rax, qword ptr [rcx] ; or rax, rdx ; jmp 0x2000021ecf7
0x000002000073bd05 : lea r15d, dword ptr [rdi + 0x50] ; mov rax, rdx ; jmp 0x2000073bd16
0x000002000015756a : lea r15d, dword ptr [rdx + 0x1f] ; jmp 0x2000000384e
0x0000020000694333 : lea r8, qword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x20000694349
0x00000200004c2d35 : lea r8, qword ptr [rax - 0x20] ; mov rax, r8 ; ret
0x00000200003c81e0 : lea r8, qword ptr [rbp - 0x28] ; mov dl, 1 ; mov rcx, rsi ; call rax
0x00000200005a924e : lea r8, qword ptr [rbp - 0x30] ; mov edx, r14d ; call rax
0x00000200004a3bf1 : lea r8, qword ptr [rbp - 0x30] ; mov rcx, rbx ; call 0x2000049fe09
0x00000200005be416 : lea r8, qword ptr [rbp - 0x59] ; mov edx, esi ; mov rcx, r9 ; call rax
0x00000200000d2287 : lea r8, qword ptr [rbp - 8] ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x00000200003ad1c0 : lea r8, qword ptr [rbx + 0x1000] ; call rax
0x000002000052d86f : lea r8, qword ptr [rbx + rbx] ; call 0x2000014f187
0x00000200003dbb76 : lea r8, qword ptr [rip + 0x1719c3] ; jmp 0x200003dbb49
0x0000020000128b17 : lea r8, qword ptr [rsp + 0x30] ; call qword ptr [rbx]
0x0000020000677d88 : lea r8, qword ptr [rsp + 0x30] ; mov rcx, rax ; call r10
0x000002000040c156 : lea r8, qword ptr [rsp + 0x40] ; call r10
0x000002000075ed07 : lea r8, qword ptr [rsp + 0x40] ; call rax
0x000002000049b146 : lea r8, qword ptr [rsp + 0x50] ; call 0x200000bccc8
0x0000020000465311 : lea r8, qword ptr [rsp + 0x58] ; call rax
0x00000200000b2972 : lea r8, qword ptr [rsp + 0x60] ; call qword ptr [rbx]
0x000002000048f291 : lea r8, qword ptr [rsp + 0x70] ; call 0x200000bccc8
0x00000200000fad82 : lea r8, qword ptr [rsp + 0x70] ; xor edx, edx ; call 0x20000056fc9
0x00000200003c959a : lea r8, qword ptr [rsp + 0x78] ; call 0x2000001582f
0x00000200001abd02 : lea r8, qword ptr [rsp + 0x88] ; call r9
0x000002000010f946 : lea r8, qword ptr [rsp] ; jmp 0x2000010f914
0x000002000042aca9 : lea r8d, dword ptr [r9 + 1] ; call 0x2000004e19f
0x00000200005101e5 : lea r8d, dword ptr [r9 + 1] ; call rdi
0x000002000050e5b7 : lea r8d, dword ptr [r9 + 1] ; call rsi
0x0000020000471f53 : lea r8d, dword ptr [r9 + 2] ; call 0x2000004e19e
0x00000200006929d3 : lea r8d, dword ptr [r9 + 2] ; call rdi
0x000002000050e8b0 : lea r8d, dword ptr [r9 + 2] ; call rsi
0x000002000040abd1 : lea r8d, dword ptr [r9 + 3] ; call 0x20000466eb6
0x00000200004dd9a5 : lea r8d, dword ptr [r9 + 3] ; call rdi
0x000002000069143e : lea r8d, dword ptr [r9 - 0xb] ; call rsi
0x00000200001d23d6 : lea r8d, dword ptr [r9 - 1] ; call qword ptr [r11]
0x00000200001d2032 : lea r8d, dword ptr [r9 - 1] ; call qword ptr [r15]
0x000002000046af11 : lea r8d, dword ptr [r9 - 1] ; call r12
0x0000020000419f04 : lea r8d, dword ptr [r9 - 1] ; call rbx
0x00000200004e1555 : lea r8d, dword ptr [r9 - 1] ; call rdi
0x00000200004f129f : lea r8d, dword ptr [r9 - 2] ; call qword ptr [rbx]
0x0000020000694e88 : lea r8d, dword ptr [r9 - 2] ; call rbx
0x0000020000690c79 : lea r8d, dword ptr [r9 - 2] ; call rdi
0x00000200004ce60f : lea r8d, dword ptr [r9 - 3] ; call rsi
0x00000200004ce879 : lea r8d, dword ptr [r9 - 4] ; call rsi
0x00000200004d39d6 : lea r8d, dword ptr [r9 - 6] ; call rsi
0x0000020000692af5 : lea r8d, dword ptr [r9 - 7] ; call rdi
0x000002000046896e : lea r8d, dword ptr [r9 - 8] ; call rsi
0x000002000069385c : lea r8d, dword ptr [r9 - 9] ; call r14
0x0000020000690ebf : lea r8d, dword ptr [r9 - 9] ; call rdi
0x00000200004980b6 : lea r8d, dword ptr [rax + 1] ; call 0x200000bab47
0x0000020000507c1d : lea r8d, dword ptr [rdx + 0x10] ; call 0x20000135ba3
0x000002000057b1e1 : lea r8d, dword ptr [rdx + 0x10] ; call 0x200001a6b63
0x00000200004f3209 : lea r8d, dword ptr [rdx + 0x28] ; call 0x2000014f4c6
0x000002000052ad21 : lea r8d, dword ptr [rdx + 0x30] ; call 0x2000014f4c7
0x000002000057325b : lea r8d, dword ptr [rdx + 0x38] ; call 0x2000014f4c6
0x00000200005236a6 : lea r8d, dword ptr [rdx + 0x40] ; call 0x2000014f4c7
0x0000020000524a94 : lea r8d, dword ptr [rdx + 0x48] ; call 0x2000014f4c7
0x0000020000526af0 : lea r8d, dword ptr [rdx + 0x50] ; call 0x2000014f4c7
0x000002000052cafe : lea r8d, dword ptr [rdx + 0x58] ; call 0x2000014f4c7
0x000002000052cb22 : lea r8d, dword ptr [rdx + 0x60] ; call 0x2000014f4c7
0x000002000057ab16 : lea r8d, dword ptr [rdx + 0xb] ; call 0x200001a6b63
0x00000200003f181a : lea r8d, dword ptr [rdx + 1] ; call 0x2000001abc7
0x00000200005ea94f : lea r8d, dword ptr [rdx + 2] ; call 0x200001a6b62
0x00000200005ea89b : lea r8d, dword ptr [rdx + 3] ; call 0x200001a6b62
0x00000200005c8148 : lea r8d, dword ptr [rdx + 3] ; call rsi
0x0000020000581de6 : lea r8d, dword ptr [rdx + 5] ; call 0x200001a6b63
0x00000200005c8124 : lea r8d, dword ptr [rdx + 5] ; call rsi
0x00000200006baeb5 : lea r8d, dword ptr [rdx - 0xe] ; call 0x2000020711a
0x000002000060d129 : lea r9, qword ptr [r10 - 0x27] ; call 0x20000231ce7
0x000002000042fe7e : lea r9, qword ptr [r11 + r10*2] ; mov rax, r9 ; ret
0x000002000048a713 : lea r9, qword ptr [r8 + rdx*4] ; jmp 0x200005b6967
0x0000020000148e62 : lea r9, qword ptr [r9 + rdx*4] ; jmp r9
0x0000020000496582 : lea r9, qword ptr [rdx + rax*8] ; jmp 0x20000496541
0x00000200006be89c : lea r9, qword ptr [rip - 0x5abbe3] ; jmp rax
0x00000200006beaf8 : lea r9, qword ptr [rip - 0x5abe3f] ; jmp rax
0x0000020000603c64 : lea r9d, dword ptr [r10 - 0x53] ; call 0x20000231ce7
0x0000020000603bbf : lea r9d, dword ptr [r10 - 0xf] ; call 0x20000231ce7
0x00000200001af7c6 : lea r9d, dword ptr [rbp + 0x58] ; lea edx, dword ptr [rbp + 1] ; call 0x200001aba75
0x000002000044c96d : lea rax, qword ptr [r8 + 0x18] ; ret
0x00000200004ad069 : lea rax, qword ptr [r8 + rdx*4] ; ret
0x00000200000bd22c : lea rax, qword ptr [r9 - 0x10] ; ret
0x000002000003f8bb : lea rax, qword ptr [rax + rax*4] ; lea rax, qword ptr [rdx + rax*8] ; ret
0x000002000011cf80 : lea rax, qword ptr [rax + rbx*8] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000048f20b : lea rax, qword ptr [rax + rcx*8] ; ret
0x00000200004ad05c : lea rax, qword ptr [rax + rdx*4] ; ret
0x000002000007bec8 : lea rax, qword ptr [rax + rdx*8] ; ret
0x00000200000df6d8 : lea rax, qword ptr [rax*8 + 0x30] ; ret
0x0000020000108f20 : lea rax, qword ptr [rbx + rcx*2] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200006404a1 : lea rax, qword ptr [rcx + 0x20] ; ret
0x00000200006404b9 : lea rax, qword ptr [rcx + 0x24] ; ret
0x00000200006404a6 : lea rax, qword ptr [rcx + 0x2c] ; ret
0x00000200000844c0 : lea rax, qword ptr [rcx + 0x30] ; add rax, r8 ; ret
0x0000020000110e06 : lea rax, qword ptr [rcx + 0x3600] ; ret
0x0000020000044b30 : lea rax, qword ptr [rcx + 0x38] ; ret
0x00000200006404ab : lea rax, qword ptr [rcx + 0x3c] ; ret
0x0000020000478985 : lea rax, qword ptr [rcx + 0x3e8] ; ret
0x00000200006404c3 : lea rax, qword ptr [rcx + 0x40] ; ret
0x0000020000038594 : lea rax, qword ptr [rcx + 0x450] ; ret
0x0000020000476415 : lea rax, qword ptr [rcx + 0x4c] ; ret
0x000002000047898d : lea rax, qword ptr [rcx + 0x500] ; ret
0x000002000047897d : lea rax, qword ptr [rcx + 0x508] ; ret
0x0000020000211658 : lea rax, qword ptr [rcx + 0x59] ; add rsp, 0x28 ; ret
0x000002000047641a : lea rax, qword ptr [rcx + 0x5c] ; ret
0x000002000047641f : lea rax, qword ptr [rcx + 0x64] ; ret
0x00000200001c547b : lea rax, qword ptr [rcx + 0x778] ; ret
0x00000200001c5483 : lea rax, qword ptr [rcx + 0x780] ; ret
0x00000200000681e1 : lea rax, qword ptr [rcx + 0x7b0] ; ret
0x000002000000f57e : lea rax, qword ptr [rcx + 1] ; mov qword ptr [rdx + 8], rax ; jmp 0x2000000f554
0x00000200000bd3e8 : lea rax, qword ptr [rcx + 1] ; ret
0x00000200003d79a0 : lea rax, qword ptr [rcx + 2] ; ret
0x00000200006da388 : lea rax, qword ptr [rcx + 4] ; add rsp, 0x38 ; ret
0x000002000066a837 : lea rax, qword ptr [rcx + r9*4] ; add rsp, 0x28 ; ret
0x00000200001350b8 : lea rax, qword ptr [rcx + rax - 1] ; ret
0x00000200001350be : lea rax, qword ptr [rcx + rax - 2] ; ret
0x00000200001350c4 : lea rax, qword ptr [rcx + rax - 3] ; ret
0x00000200001350ca : lea rax, qword ptr [rcx + rax - 4] ; ret
0x00000200001350d0 : lea rax, qword ptr [rcx + rax - 5] ; ret
0x00000200001350d6 : lea rax, qword ptr [rcx + rax - 6] ; ret
0x00000200001350dc : lea rax, qword ptr [rcx + rax - 7] ; ret
0x00000200001350e2 : lea rax, qword ptr [rcx + rax - 8] ; ret
0x00000200000bd3e2 : lea rax, qword ptr [rcx + rax*4] ; ret
0x000002000014f60e : lea rax, qword ptr [rcx + rax*8] ; ret
0x000002000041ee2f : lea rax, qword ptr [rcx + rcx*2] ; shl rax, 3 ; ret
0x00000200001d7aca : lea rax, qword ptr [rcx + rdx] ; shr rax, 0xc ; ret
0x000002000061ec97 : lea rax, qword ptr [rcx - 0x10] ; ret
0x00000200001b8364 : lea rax, qword ptr [rcx*8 + 0xd0] ; ret
0x00000200001f5703 : lea rax, qword ptr [rdi + rcx*2] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000114432 : lea rax, qword ptr [rdi + rcx] ; xor edx, edx ; xor ecx, ecx ; call rax
0x00000200006d9854 : lea rax, qword ptr [rdx + 0x20] ; add rsp, 0x28 ; ret
0x00000200005e4d00 : lea rax, qword ptr [rdx + 0x38] ; mov qword ptr [rdx + 0x28], rax ; ret
0x000002000003f8ad : lea rax, qword ptr [rdx + 0x880] ; ret
0x0000020000101f51 : lea rax, qword ptr [rdx + 8] ; jmp 0x20000101e2c
0x000002000002dafd : lea rax, qword ptr [rdx + r9] ; ret
0x000002000003daca : lea rax, qword ptr [rdx + rax*8] ; ret
0x000002000006a570 : lea rax, qword ptr [rdx - 0x190] ; ret
0x0000020000051a4a : lea rax, qword ptr [rdx - 0x20] ; ret
0x000002000014980a : lea rax, qword ptr [rdx*4] ; pop rdi ; ret
0x00000200001b235f : lea rax, qword ptr [rip + 0x1476ba] ; ret
0x0000020000132650 : lea rax, qword ptr [rip + 0x1c2041] ; ret
0x00000200005183b8 : lea rax, qword ptr [rip + 0x1e13e1] ; ret
0x00000200000b27e9 : lea rax, qword ptr [rip + 0x24a490] ; ret
0x000002000009b460 : lea rax, qword ptr [rip + 0x261819] ; ret
0x00000200003fead8 : lea rax, qword ptr [rip + 0x2a0ad1] ; ret
0x0000020000044d64 : lea rax, qword ptr [rip + 0x2b796d] ; ret
0x00000200000064ca : lea rax, qword ptr [rip + 0x2f67af] ; ret
0x000002000011c51f : lea rax, qword ptr [rip + 0x58888e] ; ret
0x00000200000ef875 : lea rax, qword ptr [rip + 0x60c74] ; ret
0x00000200000ef8af : lea rax, qword ptr [rip + 0x6261a] ; ret
0x00000200000ef8a7 : lea rax, qword ptr [rip + 0x62642] ; ret
0x00000200000ef8b7 : lea rax, qword ptr [rip + 0x62652] ; ret
0x00000200000ef8bf : lea rax, qword ptr [rip + 0x6266a] ; ret
0x00000200000ef8cc : lea rax, qword ptr [rip + 0x6269d] ; ret
0x00000200000ef89f : lea rax, qword ptr [rip + 0x626aa] ; ret
0x00000200004ea4d6 : lea rax, qword ptr [rip + 0x62883] ; ret
0x00000200004ea4e6 : lea rax, qword ptr [rip + 0x628a3] ; ret
0x00000200004ea4ce : lea rax, qword ptr [rip + 0x628eb] ; ret
0x00000200004ea4de : lea rax, qword ptr [rip + 0x6290b] ; ret
0x00000200000732cf : lea rax, qword ptr [rip + 0xdd14a] ; ret
0x0000020000073316 : lea rax, qword ptr [rip + 0xdeac3] ; ret
0x000002000007327f : lea rax, qword ptr [rip + 0xdeafa] ; ret
0x0000020000073345 : lea rax, qword ptr [rip + 0xdeb14] ; ret
0x000002000007328c : lea rax, qword ptr [rip + 0xdeb2d] ; ret
0x0000020000073260 : lea rax, qword ptr [rip + 0xdeb39] ; ret
0x000002000007329c : lea rax, qword ptr [rip + 0xdeb5d] ; ret
0x0000020000073294 : lea rax, qword ptr [rip + 0xdeb75] ; ret
0x00000200000732e4 : lea rax, qword ptr [rip + 0xdeba5] ; ret
0x00000200000732f9 : lea rax, qword ptr [rip + 0xdebb0] ; ret
0x0000020000073277 : lea rax, qword ptr [rip + 0xdebb2] ; ret
0x0000020000073301 : lea rax, qword ptr [rip + 0xdebc8] ; ret
0x0000020000073330 : lea rax, qword ptr [rip + 0xdebf9] ; ret
0x000002000007330e : lea rax, qword ptr [rip + 0xdebfb] ; ret
0x0000020000073338 : lea rax, qword ptr [rip + 0xdec11] ; ret
0x00000200000732be : lea rax, qword ptr [rip + 0xdec2b] ; ret
0x0000020000073323 : lea rax, qword ptr [rip + 0xdec46] ; ret
0x0000020000073356 : lea rax, qword ptr [rip + 0xdec73] ; ret
0x00000200000732f1 : lea rax, qword ptr [rip + 0xdecf8] ; ret
0x00000200004cd486 : lea rax, qword ptr [rip - 0x1d566d] ; ret
0x000002000017d9b0 : lea rax, qword ptr [rip - 0x2ba17] ; ret
0x000002000017d99f : lea rax, qword ptr [rip - 0x2d4b6] ; ret
0x00000200006534f5 : lea rax, qword ptr [rip - 0x382724] ; ret
0x0000020000653503 : lea rax, qword ptr [rip - 0x38275a] ; ret
0x00000200006534d9 : lea rax, qword ptr [rip - 0x382760] ; ret
0x00000200006534e7 : lea rax, qword ptr [rip - 0x3827a6] ; ret
0x00000200006534cb : lea rax, qword ptr [rip - 0x3827ca] ; ret
0x00000200006534bd : lea rax, qword ptr [rip - 0x3827d4] ; ret
0x000002000019c340 : lea rax, qword ptr [rip - 0x4a337] ; ret
0x000002000076a990 : lea rax, qword ptr [rip - 0x61c497] ; ret
0x000002000076a9a8 : lea rax, qword ptr [rip - 0x620fcf] ; ret
0x000002000076a9b0 : lea rax, qword ptr [rip - 0x637817] ; ret
0x000002000076a97b : lea rax, qword ptr [rip - 0x677aca] ; ret
0x000002000076a983 : lea rax, qword ptr [rip - 0x6fef9a] ; ret
0x000002000076a9a0 : lea rax, qword ptr [rip - 0x6ff967] ; ret
0x000002000076a998 : lea rax, qword ptr [rip - 0x7006c3] ; ret
0x00000200003e0b69 : lea rax, qword ptr [rip - 0xe8d50] ; ret
0x0000020000143f80 : lea rax, qword ptr [rsp + 8] ; ret
0x000002000007332f : lea rax, qword ptr cs:[rip + 0xdebf9] ; ret
0x00000200000732db : lea rax, qword ptr fs:[rip + 0xdeb5d] ; ret
0x00000200003f4b02 : lea rbx, qword ptr [rax - 0x10] ; jmp 0x200003f4ad0
0x000002000048a5ef : lea rbx, qword ptr [rax - 0x10] ; jmp 0x2000048a5bc
0x000002000016af73 : lea rbx, qword ptr [rcx - 8] ; jmp 0x2000016af85
0x000002000016b56f : lea rbx, qword ptr [rcx - 8] ; jmp 0x2000016b581
0x000002000016b63f : lea rbx, qword ptr [rcx - 8] ; jmp 0x2000016b651
0x000002000016b739 : lea rbx, qword ptr [rcx - 8] ; jmp 0x2000016b74b
0x0000020000174bf8 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000174c0a
0x0000020000174d16 : lea rbx, qword ptr [rcx - 8] ; jmp 0x20000174d28
0x00000200001fd3b7 : lea rbx, qword ptr [rcx - 8] ; jmp 0x200001fd3c9
0x00000200001fd4d3 : lea rbx, qword ptr [rcx - 8] ; jmp 0x200001fd4e5
0x0000020000118f60 : lea rbx, qword ptr [rip + 0x1e3951] ; jmp 0x20000118f33
0x00000200004d31b9 : lea rcx, qword ptr [r13 + 0x10] ; call 0x2000014f4c6
0x00000200004bbf84 : lea rcx, qword ptr [r13 - 0x20] ; call 0x200000e8387
0x00000200004a0e2f : lea rcx, qword ptr [r14 + 0x30] ; call 0x200000c1b37
0x000002000049cb55 : lea rcx, qword ptr [r15 + 0x30] ; call 0x200000c1b37
0x00000200004a0e6f : lea rcx, qword ptr [r15 + 0x30] ; xor edx, edx ; call 0x200000c2849
0x00000200004ee40d : lea rcx, qword ptr [rax + 0x18] ; xor edi, edi ; call 0x20000117ebd
0x0000020000507bf9 : lea rcx, qword ptr [rax + 2] ; call 0x200001356ab
0x00000200003dd529 : lea rcx, qword ptr [rax - 0x10] ; jmp 0x200003dd4f6
0x000002000040f2a7 : lea rcx, qword ptr [rax - 0x10] ; jmp 0x2000040f275
0x00000200005134a9 : lea rcx, qword ptr [rbp + 0x10] ; call 0x200001392b3
0x000002000015d66d : lea rcx, qword ptr [rbp + 0x10] ; call rbx
0x000002000052aa4d : lea rcx, qword ptr [rbp + 0x10] ; xor edx, edx ; call 0x2000014f4c9
0x00000200004d7598 : lea rcx, qword ptr [rbp + 0x200] ; call 0x20000053855
0x0000020000427d0f : lea rcx, qword ptr [rbp + 0x20] ; call 0x20000057227
0x000002000049858a : lea rcx, qword ptr [rbp + 0x40] ; call 0x2000007b794
0x0000020000498589 : lea rcx, qword ptr [rbp + 0x40] ; call 0x2000007b795
0x0000020000498643 : lea rcx, qword ptr [rbp + 0x40] ; call 0x200000bab47
0x00000200004987b9 : lea rcx, qword ptr [rbp + 0x40] ; call 0x200000bcd27
0x000002000061741e : lea rcx, qword ptr [rbp + 0x40] ; call 0x200000c36c6
0x00000200001ea19d : lea rcx, qword ptr [rbp + 0x68] ; call 0x200000d6406
0x000002000039bd28 : lea rcx, qword ptr [rbp + 0xf] ; mov edx, esi ; call 0x20000067f64
0x000002000058e148 : lea rcx, qword ptr [rbp + 7] ; call 0x200001bc7e3
0x00000200006176d9 : lea rcx, qword ptr [rbp + 8] ; call 0x2000012398e
0x000002000052f7fe : lea rcx, qword ptr [rbp + 8] ; call 0x2000040ba1e
0x000002000058a3cc : lea rcx, qword ptr [rbp - 0x10] ; call 0x2000046662e
0x000002000039bd36 : lea rcx, qword ptr [rbp - 0x11] ; xor edx, edx ; call 0x20000067f64
0x00000200000d43e3 : lea rcx, qword ptr [rbp - 0x15] ; call 0x200000b0616
0x0000020000762c73 : lea rcx, qword ptr [rbp - 0x20] ; and dword ptr [rbp - 0x10], 0 ; call qword ptr [rdi]
0x00000200004c28e2 : lea rcx, qword ptr [rbp - 0x20] ; call 0x200000e8b5b
0x00000200005010cc : lea rcx, qword ptr [rbp - 0x20] ; mov edi, eax ; call r15
0x000002000050fa56 : lea rcx, qword ptr [rbp - 0x21] ; call 0x200001392b3
0x0000020000590411 : lea rcx, qword ptr [rbp - 0x28] ; call 0x200001bd483
0x00000200005942e3 : lea rcx, qword ptr [rbp - 0x29] ; mov rdi, rsi ; call 0x200004b0569
0x000002000059289a : lea rcx, qword ptr [rbp - 0x31] ; call 0x200001bd4eb
0x00000200003ec999 : lea rcx, qword ptr [rbp - 0x38] ; call rax
0x0000020000677437 : lea rcx, qword ptr [rbp - 0x40] ; call 0x200000c36c6
0x00000200004ec908 : lea rcx, qword ptr [rbp - 0x40] ; call 0x20000117ea7
0x00000200005152f2 : lea rcx, qword ptr [rbp - 0x40] ; call 0x200001392b3
0x0000020000593cd0 : lea rcx, qword ptr [rbp - 0x40] ; call 0x200001bd35f
0x00000200004edcf5 : lea rcx, qword ptr [rbp - 0x48] ; call 0x20000117ea7
0x000002000011744e : lea rcx, qword ptr [rbp - 0x50] ; call 0x200000c36c6
0x000002000059476c : lea rcx, qword ptr [rbp - 0x50] ; call 0x200001bd4eb
0x00000200004e950b : lea rcx, qword ptr [rbp - 0x50] ; call 0x200004c5756
0x00000200006773ef : lea rcx, qword ptr [rbp - 0x50] ; xor esi, esi ; call 0x200000c36c8
0x00000200005caa15 : lea rcx, qword ptr [rbp - 0x51] ; call 0x200001ec843
0x00000200004cbb3f : lea rcx, qword ptr [rbp - 0x59] ; xor edx, edx ; call qword ptr [rdi]
0x000002000060748d : lea rcx, qword ptr [rbp - 0x60] ; call 0x200000c36c6
0x0000020000438a48 : lea rcx, qword ptr [rbp - 0x69] ; call qword ptr [rax]
0x0000020000525a37 : lea rcx, qword ptr [rbp - 9] ; call r12
0x000002000049f96f : lea rcx, qword ptr [rbx + 0x30] ; call 0x200000c1b37
0x00000200004a00a2 : lea rcx, qword ptr [rbx + 0x30] ; call 0x200000c1b38
0x000002000049d457 : lea rcx, qword ptr [rbx + 0x30] ; xor edx, edx ; call 0x200000c2849
0x000002000052d270 : lea rcx, qword ptr [rbx + 8] ; call 0x2000014f187
0x00000200000b3284 : lea rcx, qword ptr [rbx + rax] ; call 0x2000014f4c6
0x00000200004c00ae : lea rcx, qword ptr [rbx - 0x10] ; call 0x200000e8387
0x000002000060d3d8 : lea rcx, qword ptr [rbx - 8] ; call 0x20000231017
0x000002000048f207 : lea rcx, qword ptr [rcx + rcx*4] ; lea rax, qword ptr [rax + rcx*8] ; ret
0x000002000049be69 : lea rcx, qword ptr [rdi + 0x10] ; call 0x200000bd1f3
0x000002000049b4e2 : lea rcx, qword ptr [rdi + 0x30] ; xor edx, edx ; call 0x200000c2849
0x00000200005afd9f : lea rcx, qword ptr [rdi + 0x500] ; call 0x200001cbff1
0x000002000051be04 : lea rcx, qword ptr [rdi + 0x50] ; call 0x20000149157
0x00000200005360ca : lea rcx, qword ptr [rdi + 0x59] ; call rax
0x00000200006c60e2 : lea rcx, qword ptr [rdi + 8] ; call 0x20000082336
0x000002000058c79d : lea rcx, qword ptr [rdi + 8] ; call 0x200001ba383
0x0000020000588d16 : lea rcx, qword ptr [rdi - 0x40] ; mov edx, esi ; call 0x20000634fb4
0x0000020000588d7c : lea rcx, qword ptr [rdi - 0x40] ; xor edx, edx ; call 0x20000635034
0x0000020000478575 : lea rcx, qword ptr [rdi - 0x470] ; call r15
0x0000020000438435 : lea rcx, qword ptr [rdx + 0x60] ; call 0x20000065cd3
0x0000020000182dc2 : lea rcx, qword ptr [rip + 0x14d697] ; call 0x200000deff9
0x000002000015c245 : lea rcx, qword ptr [rip + 0x17ed64] ; call 0x200000684c9
0x00000200001677b9 : lea rcx, qword ptr [rip + 0x19cbc0] ; call 0x20000053a81
0x000002000004c1cf : lea rcx, qword ptr [rip + 0x2b663a] ; call 0x200000684c9
0x0000020000183160 : lea rcx, qword ptr [rip + 0x64a75] ; call rax
0x0000020000172078 : lea rcx, qword ptr [rip + 0x75b5d] ; call rax
0x000002000014643b : lea rcx, qword ptr [rip + 0x7d69] ; jmp rcx
0x00000200005ccc1d : lea rcx, qword ptr [rip + 0xd262c] ; call 0x200003d8ea1
0x000002000050ff7d : lea rcx, qword ptr [rip - 0x21588c] ; call 0x200000bc259
0x00000200005974b2 : lea rcx, qword ptr [rip - 0x29c849] ; call 0x200000c36c9
0x000002000058751f : lea rcx, qword ptr [rip - 0x2ab906] ; call 0x20000053799
0x00000200001a0bb3 : lea rcx, qword ptr [rip - 0x50c8a] ; call 0x200005fce8d
0x000002000044bf25 : lea rcx, qword ptr [rsi + 0x10] ; call 0x200000e8156
0x0000020000498eb4 : lea rcx, qword ptr [rsi + 0x28] ; call 0x200000c1b37
0x000002000049dbb9 : lea rcx, qword ptr [rsi + 0x30] ; call 0x200000c1b37
0x000002000045bb90 : lea rcx, qword ptr [rsi + 0x70] ; call 0x200000895e7
0x00000200000b3225 : lea rcx, qword ptr [rsi + rax] ; call 0x2000014f4c6
0x0000020000425544 : lea rcx, qword ptr [rsp + 0x20] ; call 0x200000459b0
0x00000200001b46e8 : lea rcx, qword ptr [rsp + 0x20] ; call 0x200000c09d7
0x00000200000efed0 : lea rcx, qword ptr [rsp + 0x20] ; call 0x200000ec187
0x000002000041256e : lea rcx, qword ptr [rsp + 0x20] ; call 0x20000143729
0x00000200006b6d99 : lea rcx, qword ptr [rsp + 0x20] ; call r8
0x00000200005037fc : lea rcx, qword ptr [rsp + 0x20] ; call rdi
0x000002000052c993 : lea rcx, qword ptr [rsp + 0x28] ; call 0x2000014f188
0x000002000052db1f : lea rcx, qword ptr [rsp + 0x30] ; call 0x2000014f188
0x000002000019e9e6 : lea rcx, qword ptr [rsp + 0x30] ; call rax
0x0000020000133235 : lea rcx, qword ptr [rsp + 0x30] ; mov rdx, r12 ; call rax
0x000002000049ae16 : lea rcx, qword ptr [rsp + 0x38] ; call 0x200000bc8c8
0x000002000049ae0c : lea rcx, qword ptr [rsp + 0x38] ; call 0x200000bc8d8
0x000002000049ad77 : lea rcx, qword ptr [rsp + 0x38] ; call 0x200000bc948
0x00000200005c056d : lea rcx, qword ptr [rsp + 0x3c] ; call 0x200001ec843
0x00000200004ec0e3 : lea rcx, qword ptr [rsp + 0x40] ; call 0x20000117ea8
0x00000200001af7df : lea rcx, qword ptr [rsp + 0x40] ; call 0x200001aba73
0x00000200005d3b6e : lea rcx, qword ptr [rsp + 0x40] ; call 0x200001fb6f8
0x000002000008c846 : lea rcx, qword ptr [rsp + 0x40] ; call rax
0x000002000049afcb : lea rcx, qword ptr [rsp + 0x48] ; call 0x200000bc8c8
0x000002000049afc1 : lea rcx, qword ptr [rsp + 0x48] ; call 0x200000bc8d8
0x000002000049af98 : lea rcx, qword ptr [rsp + 0x48] ; call 0x200000bc948
0x00000200005e7482 : lea rcx, qword ptr [rsp + 0x48] ; call 0x200000c36c7
0x000002000052e85d : lea rcx, qword ptr [rsp + 0x48] ; call 0x2000014f4c8
0x0000020000035ceb : lea rcx, qword ptr [rsp + 0x50] ; call 0x20000091f47
0x00000200007845a3 : lea rcx, qword ptr [rsp + 0x50] ; call 0x20000140807
0x0000020000781b4d : lea rcx, qword ptr [rsp + 0x50] ; call r12
0x0000020000105c87 : lea rcx, qword ptr [rsp + 0x60] ; call 0x20000091f47
0x00000200004c4d73 : lea rcx, qword ptr [rsp + 0x68] ; call 0x200000ebb3c
0x000002000052db39 : lea rcx, qword ptr [rsp + 0x78] ; call 0x2000014f188
0x00000200000b9093 : lea rdi, qword ptr [rcx + 0x48] ; mov rcx, rdi ; call 0x20000085329
0x000002000060ef68 : lea rdx, qword ptr [r14 + r14] ; call 0x20000231ce7
0x00000200004431e7 : lea rdx, qword ptr [r15 - 0x30] ; mov rcx, r15 ; call rax
0x00000200001fb6a1 : lea rdx, qword ptr [rax + 0x18] ; mov rax, rdx ; ret
0x000002000003cd0b : lea rdx, qword ptr [rax + 8] ; test rdx, rdx ; jne 0x2000003ccff ; ret
0x00000200005d20ec : lea rdx, qword ptr [rbp + 0x20] ; mov rcx, r15 ; call 0x2000021e3ad
0x00000200000fcbb3 : lea rdx, qword ptr [rbp + 0x28] ; mov rcx, rbx ; call 0x200000f8de5
0x00000200004aebf1 : lea rdx, qword ptr [rbp + 0x38] ; mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200005be18d : lea rdx, qword ptr [rbp + 0x4f] ; mov rcx, r13 ; call r8
0x00000200005143c2 : lea rdx, qword ptr [rbp - 0x11] ; call 0x20000140487
0x00000200000d20cd : lea rdx, qword ptr [rbp - 0x20] ; call r11
0x0000020000446ac0 : lea rdx, qword ptr [rbp - 0x41] ; call 0x20000074c97
0x000002000051279b : lea rdx, qword ptr [rbp - 0x48] ; mov rcx, rdi ; call r15
0x00000200004e075b : lea rdx, qword ptr [rbp - 0x51] ; mov qword ptr [rbp - 0x51], r11 ; call rax
0x000002000060427a : lea rdx, qword ptr [rbp - 0x51] ; mov r8b, 1 ; call 0x200004b0569
0x000002000019f9f2 : lea rdx, qword ptr [rbp - 0x58] ; call 0x2000003bc86
0x00000200005be440 : lea rdx, qword ptr [rbp - 0x59] ; mov rcx, r10 ; call rax
0x0000020000514608 : lea rdx, qword ptr [rbp - 0x80] ; call 0x20000140487
0x0000020000006694 : lea rdx, qword ptr [rbp - 1] ; call 0x200000628b6
0x0000020000006693 : lea rdx, qword ptr [rbp - 1] ; call 0x200000628b7
0x000002000016b649 : lea rdx, qword ptr [rbp] ; mov rcx, rdi ; call 0x20000047959
0x000002000016b743 : lea rdx, qword ptr [rbp] ; mov rcx, rsi ; call 0x20000047959
0x000002000019e279 : lea rdx, qword ptr [rbx + 0x1e0] ; call rax
0x0000020000443b66 : lea rdx, qword ptr [rcx - 0x30] ; call rax
0x00000200000bca71 : lea rdx, qword ptr [rdi + 0x10] ; call r8
0x00000200004858da : lea rdx, qword ptr [rdx + 4] ; add ecx, -1 ; jne 0x200004858de ; ret
0x0000020000535f78 : lea rdx, qword ptr [rip + 0x12b61] ; jmp 0x20000535f4c
0x0000020000182df8 : lea rdx, qword ptr [rip + 0x14b9b1] ; call rax
0x00000200001ed488 : lea rdx, qword ptr [rip + 0x617d1] ; call 0x20000089719
0x0000020000149212 : lea rdx, qword ptr [rip + 0x71] ; jmp rdx
0x000002000040dcbb : lea rdx, qword ptr [rip - 0x117d82] ; mov rax, rdx ; ret
0x0000020000463e9f : lea rdx, qword ptr [rip - 0x16d9e6] ; mov rax, rdx ; ret
0x0000020000665604 : lea rdx, qword ptr [rip - 0x415ceb] ; call 0x200006618c1
0x00000200004fceee : lea rdx, qword ptr [rsp + 0x20] ; mov ecx, edi ; call rsi
0x00000200001b3039 : lea rdx, qword ptr [rsp + 0x28] ; mov cl, bl ; call rax
0x000002000010c605 : lea rdx, qword ptr [rsp + 0x28] ; xor ecx, ecx ; call rax
0x0000020000403cf8 : lea rdx, qword ptr [rsp + 0x30] ; call rax
0x0000020000414e7f : lea rdx, qword ptr [rsp + 0x38] ; call 0x2000003feb8
0x00000200001ac60f : lea rdx, qword ptr [rsp + 0x38] ; call r8
0x0000020000512e92 : lea rdx, qword ptr [rsp + 0x40] ; call 0x20000140488
0x0000020000066c64 : lea rdx, qword ptr [rsp + 0x40] ; mov bl, al ; call rsi
0x00000200005126b5 : lea rdx, qword ptr [rsp + 0x48] ; call 0x20000140488
0x00000200001ac5e7 : lea rdx, qword ptr [rsp + 0x48] ; call r9
0x0000020000421055 : lea rdx, qword ptr [rsp + 0x50] ; call 0x20000045314
0x000002000043cab3 : lea rdx, qword ptr [rsp + 0x50] ; mov rcx, rdi ; call rsi
0x0000020000669402 : lea rdx, qword ptr [rsp + 0x58] ; call rax
0x00000200004b32f8 : lea rdx, qword ptr [rsp + 0x58] ; mov rcx, rbx ; call r15
0x00000200003f85be : lea rdx, qword ptr [rsp + 0x58] ; mov rcx, rbx ; call rsi
0x00000200003fa37a : lea rdx, qword ptr [rsp + 0x78] ; mov rcx, rdi ; call r12
0x0000020000057c2a : lea rsp, qword ptr [rbp + 0x20] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200006aaef2 : lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x00000200000ffd91 : lea rsp, qword ptr [rbp + 0x30] ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200000ff34d : lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x0000020000201bb8 : lea rsp, qword ptr [rbp + 0x40] ; pop r15 ; pop r14 ; pop rbp ; ret
0x0000020000047922 : lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x0000020000148ef0 : leave ; adc byte ptr [rbx], al ; rol ecx, -0x18 ; adc byte ptr [rcx - 0xa], al ; ret
0x00000200001e8cd7 : leave ; adc byte ptr [rdi + rax - 1], dh ; ret 0x3b41
0x0000020000587745 : leave ; adc byte ptr [rsi - 0x7e17ff68], 0x94 ; ret
0x00000200005dc82a : leave ; adc dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000013be85 : leave ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; sal dh, cl ; ret
0x000002000049cebe : leave ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret
0x0000020000606e81 : leave ; add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; outsb dx, byte ptr [rsi] ; ret 0xb841
0x0000020000148e12 : leave ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7406
0x000002000014149b : leave ; add byte ptr [rax], al ; ret
0x000002000051967d : leave ; add cl, byte ptr [rcx + 0xc48f] ; add bl, ch ; ret 0x48cc
0x000002000039ce91 : leave ; add dword ptr [rcx + 0x5c], -1 ; je 0x2000039cea5 ; mov al, r10b ; ret
0x00000200005ca78f : leave ; add eax, 0x74e9ffd3 ; ret
0x000002000072cfea : leave ; add ecx, dword ptr [rax - 0x75] ; ret
0x0000020000230c61 : leave ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x000002000072d9d9 : leave ; add ecx, dword ptr [rcx - 0x75] ; ret
0x00000200002307e1 : leave ; add ecx, dword ptr [rcx - 0x75] ; ret 0x3348
0x00000200000e8195 : leave ; add esi, esi ; ret
0x00000200001bc7bb : leave ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003d9e1a : leave ; and bl, ch ; enter 0x58b8, 0 ; add al, al ; ret
0x0000020000205fca : leave ; and byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000018a7fd : leave ; and dh, dh ; ret 0x7402
0x0000020000775012 : leave ; and dh, dh ; ret 0x7504
0x000002000018c746 : leave ; and dh, dh ; ret 0xf02
0x0000020000038e9c : leave ; and eax, ecx ; ret
0x00000200000d4035 : leave ; and r10d, ecx ; mov eax, r10d ; ret
0x00000200000e2875 : leave ; and r8, rcx ; test r8, r8 ; jne 0x200000e2892 ; ret
0x0000020000671cd3 : leave ; call 0x1ff8bac1c9b
0x00000200004195e4 : leave ; call 0x20000042008
0x000002000041e9cd : leave ; call 0x20000045858
0x0000020000424361 : leave ; call 0x20000050274
0x00000200000cdcea : leave ; call 0x20000069fb3
0x00000200001ddfca : leave ; call 0x20000091d18
0x0000020000181d61 : leave ; call 0x2000009e033
0x00000200000d6d02 : leave ; call 0x200000a2f53
0x0000020000496f5e : leave ; call 0x200000b8ea4
0x000002000049a324 : leave ; call 0x200000bc564
0x000002000049b0ad : leave ; call 0x200000bcd24
0x00000200000d523e : leave ; call 0x200000d1503
0x0000020000195d86 : leave ; call 0x200000d1fa3
0x00000200005d8c93 : leave ; call 0x200000d3a07
0x000002000039f387 : leave ; call 0x20000109f08
0x000002000013fc5d : leave ; call 0x2000011bf63
0x00000200006364d5 : leave ; call 0x200001327c7
0x0000020000512f66 : leave ; call 0x2000014f183
0x00000200001adc0c : leave ; call 0x200001adb48
0x0000020000183c84 : leave ; call 0x200001bfe9b
0x00000200005b9603 : leave ; call 0x200001de784
0x00000200005c042f : leave ; call 0x200001eca2c
0x000002000060885d : leave ; call 0x20000231014
0x0000020000595296 : leave ; call 0x200003b14a3
0x00000200005966cc : leave ; call qword ptr [rax - 0x83da817]
0x000002000016f04a : leave ; call qword ptr [rax]
0x00000200006aa3d1 : leave ; call qword ptr [rip - 0x3dac50]
0x0000020000598006 : leave ; call qword ptr [rsi]
0x000002000022828e : leave ; call r10
0x00000200000ebc7a : leave ; call r14
0x000002000063ef26 : leave ; call r8
0x00000200001fd912 : leave ; call r9
0x000002000010c60b : leave ; call rax
0x0000020000127b07 : leave ; call rdx
0x0000020000105f23 : leave ; cmc ; dec dword ptr [rax - 0x7f] ; ret
0x000002000013313a : leave ; cmovne eax, ecx ; mov dword ptr [r8 + 0x5c], eax ; ret
0x00000200006c2739 : leave ; cmovne eax, edx ; ret
0x00000200006970ca : leave ; cmovs eax, ecx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000439b86 : leave ; cmp r8d, ecx ; seta al ; ret
0x000002000013475d : leave ; cmp rax, rcx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000200006488dc : leave ; dec dword ptr [rax - 0x7d] ; ret 0x4802
0x00000200005a29f5 : leave ; dec dword ptr [rax - 0x7d] ; shr dword ptr [rax], -0x18 ; ret
0x00000200003e39e6 : leave ; dec dword ptr [rbx + 0x79c085d8] ; ret 0x73e9
0x00000200003edf8d : leave ; imul eax, r9d ; sub eax, r8d ; ret
0x000002000063abab : leave ; inc dword ptr [rax] ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000437719 : leave ; inc dword ptr [rbp - 0x76] ; loopne 0x2000043770f ; popfq ; cdq ; ret
0x0000020000438f3e : leave ; inc edx ; cmp edx, r8d ; jbe 0x20000438f40 ; ret
0x0000020000074755 : leave ; ja 0x20000074773 ; cmp qword ptr [rdx + 8], rax ; je 0x20000074768 ; ret
0x00000200006574ac : leave ; jb 0x20000657498 ; xor ecx, ecx ; mov rax, rcx ; ret
0x000002000002ccc8 : leave ; je 0x2000002ccd3 ; mov al, 1 ; ret
0x000002000005937a : leave ; je 0x2000005937b ; mov rax, r9 ; ret
0x0000020000074767 : leave ; je 0x20000074766 ; mov eax, 0xc000000d ; ret
0x0000020000080902 : leave ; je 0x20000080913 ; call 0x2000009a5c9
0x00000200000bf60d : leave ; je 0x200000bf61c ; add rsp, 0x28 ; ret
0x00000200000c211f : leave ; je 0x200000c212e ; add rsp, 0x28 ; ret
0x00000200000c2c4a : leave ; je 0x200000c2c5b ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000eef3d : leave ; je 0x200000eef47 ; call rcx
0x0000020000124395 : leave ; je 0x2000012439d ; call rcx
0x0000020000133b1e : leave ; je 0x20000133af5 ; sub r9d, ecx ; mov eax, r9d ; ret
0x000002000013fa1a : leave ; je 0x2000013f9d0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000016ff78 : leave ; je 0x2000016ff86 ; mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x00000200001a8e39 : leave ; je 0x200001a8e47 ; mov qword ptr [r9], r10 ; xor al, al ; ret
0x00000200001a8e44 : leave ; je 0x200001a8e52 ; mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x00000200001ad376 : leave ; je 0x200001ad380 ; call r9
0x00000200001b29de : leave ; je 0x200001b29e6 ; call rcx
0x00000200001b2a01 : leave ; je 0x200001b2a09 ; call rcx
0x00000200001b2a3e : leave ; je 0x200001b2a48 ; jmp rcx
0x00000200001b2a8d : leave ; je 0x200001b2a97 ; jmp rcx
0x00000200001b2afd : leave ; je 0x200001b2b05 ; call rcx
0x00000200001b2b1a : leave ; je 0x200001b2b24 ; jmp rcx
0x00000200001bef35 : leave ; je 0x200001bef47 ; mov dword ptr [rcx], r10d ; ret
0x00000200001c116e : leave ; je 0x200001c117f ; mov eax, 0xc0000225 ; ret
0x00000200001e222b : leave ; je 0x200001e2243 ; and qword ptr [rcx], rdx ; ret
0x00000200001e2234 : leave ; je 0x200001e2246 ; mov eax, dword ptr [rdx + 4] ; mov qword ptr [rcx], rax ; ret
0x000002000021568c : leave ; je 0x20000215698 ; add dword ptr [rcx], r11d ; ret
0x00000200003a13e7 : leave ; je 0x200003a13ef ; call rcx
0x00000200003af3ae : leave ; je 0x200003af3b6 ; call rcx
0x000002000041caf4 : leave ; je 0x2000041cb02 ; mov rax, qword ptr [rdx + 0x38] ; ret
0x0000020000425589 : leave ; je 0x20000425604 ; xor ecx, ecx ; call 0x2000004585c
0x00000200004704c6 : leave ; je 0x20000470501 ; mov eax, r10d ; ret
0x00000200004704c6 : leave ; je 0x20000470502 ; mov eax, r10d ; ret
0x00000200004c1bf7 : leave ; je 0x200004c1c05 ; call 0x200000e7976
0x00000200004c1c48 : leave ; je 0x200004c1c61 ; call 0x200000e7756
0x00000200004f496c : leave ; je 0x200004f497c ; ret
0x000002000051096b : leave ; je 0x20000510979 ; call 0x20000140386
0x0000020000511258 : leave ; je 0x20000511266 ; call 0x20000140386
0x0000020000511266 : leave ; je 0x20000511274 ; call 0x20000140386
0x0000020000511e27 : leave ; je 0x20000511e35 ; call 0x20000140386
0x00000200005128fd : leave ; je 0x2000051290b ; call 0x20000140386
0x000002000051290c : leave ; je 0x2000051291a ; call 0x20000140386
0x000002000051291a : leave ; je 0x20000512928 ; call 0x20000140386
0x000002000051329f : leave ; je 0x200005132ad ; call 0x20000140386
0x00000200005132ae : leave ; je 0x200005132bc ; call 0x20000140386
0x000002000051b1b3 : leave ; je 0x2000051b1c1 ; call 0x20000140386
0x000002000051de38 : leave ; je 0x2000051de46 ; call 0x20000140386
0x0000020000545b0c : leave ; je 0x20000545b1a ; mov dword ptr [r9], r8d ; mov eax, r10d ; ret
0x0000020000545b0c : leave ; je 0x20000545b1b ; mov dword ptr [r9], r8d ; mov eax, r10d ; ret
0x000002000057482c : leave ; je 0x200005747fd ; jmp 0x200005747f8
0x00000200006026a7 : leave ; je 0x200006026cd ; xor edx, edx ; call 0x20000231018
0x0000020000602bef : leave ; je 0x20000602c09 ; xor edx, edx ; call 0x20000231018
0x0000020000602c0a : leave ; je 0x20000602c24 ; xor edx, edx ; call 0x20000231018
0x0000020000602c72 : leave ; je 0x20000602c8c ; xor edx, edx ; call 0x20000231018
0x000002000060414d : leave ; je 0x2000060415f ; xor edx, edx ; call 0x20000231018
0x0000020000604315 : leave ; je 0x20000604323 ; call 0x20000231016
0x000002000060a8a9 : leave ; je 0x2000060a8bb ; xor edx, edx ; call 0x20000231018
0x000002000060a957 : leave ; je 0x2000060a969 ; xor edx, edx ; call 0x20000231018
0x000002000060a997 : leave ; je 0x2000060a9a9 ; xor edx, edx ; call 0x20000231018
0x000002000060aed0 : leave ; je 0x2000060aee2 ; xor edx, edx ; call 0x20000231018
0x000002000060cd39 : leave ; je 0x2000060cd53 ; xor edx, edx ; call 0x20000231018
0x000002000060cef0 : leave ; je 0x2000060cf02 ; xor edx, edx ; call 0x20000231018
0x000002000060ed49 : leave ; je 0x2000060ed5d ; mov edx, r14d ; call 0x20000231019
0x000002000060ed6b : leave ; je 0x2000060ed84 ; mov edx, r14d ; call 0x20000231019
0x000002000060ed81 : leave ; je 0x2000060ed9a ; mov edx, r14d ; call 0x20000231019
0x000002000060ed97 : leave ; je 0x2000060edb0 ; mov edx, r14d ; call 0x20000231019
0x000002000060f49c : leave ; je 0x2000060f4ae ; xor edx, edx ; call 0x20000231018
0x000002000061062b : leave ; je 0x2000061063d ; xor edx, edx ; call 0x20000231018
0x0000020000610646 : leave ; je 0x20000610658 ; xor edx, edx ; call 0x20000231018
0x0000020000610a9e : leave ; je 0x20000610ab0 ; xor edx, edx ; call 0x20000231018
0x0000020000610ab9 : leave ; je 0x20000610acb ; xor edx, edx ; call 0x20000231018
0x0000020000614d84 : leave ; je 0x20000614d95 ; xor edx, edx ; call 0x20000231017
0x000002000074986a : leave ; jg 0x20000749841 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041c34a : leave ; jmp 0x20000058613
0x000002000004b188 : leave ; jmp qword ptr [r10 + rax*8]
0x000002000064b63b : leave ; jmp rax
0x00000200004458ef : leave ; jmp rcx
0x000002000001e67d : leave ; jne 0x2000001e673 ; mov eax, 0xc0000109 ; ret
0x0000020000021dcb : leave ; jne 0x20000021dd8 ; mov eax, dword ptr [rax + 0x24] ; ret
0x0000020000024900 : leave ; jne 0x200000248fa ; ret
0x000002000002ce6a : leave ; jne 0x2000002ce7b ; add rsp, 0x60 ; pop rbp ; ret
0x000002000002f736 : leave ; jne 0x2000002f749 ; lock btr dword ptr [rdx + 0x78], 5 ; ret
0x0000020000051fa3 : leave ; jne 0x20000051fb0 ; mov rax, r9 ; ret
0x000002000005ad7c : leave ; jne 0x2000005ad89 ; mov rax, r9 ; ret
0x000002000005b0e6 : leave ; jne 0x2000005b0ed ; ret
0x0000020000069ea2 : leave ; jne 0x20000069e97 ; xor al, al ; ret
0x000002000007116c : leave ; jne 0x20000071179 ; mov rax, rcx ; ret
0x00000200000746e0 : leave ; jne 0x200000746f1 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x0000020000074f2d : leave ; jne 0x20000074f34 ; ret
0x0000020000113630 : leave ; jne 0x20000088d49 ; xor al, al ; ret
0x0000020000089e52 : leave ; jne 0x20000089e5d ; mov al, 1 ; ret
0x00000200000b25c2 : leave ; jne 0x200000b25d9 ; add rsp, 0x38 ; ret
0x00000200000cc792 : leave ; jne 0x200000cc79d ; xor eax, eax ; ret
0x00000200000cdc57 : leave ; jne 0x200000cdc77 ; add rsp, 0x28 ; ret
0x00000200000ee4ec : leave ; jne 0x200000ee4e2 ; mov rax, rdx ; ret
0x00000200000f83e8 : leave ; jne 0x200000f83e2 ; ret
0x00000200001221f8 : leave ; jne 0x20000122193 ; ret
0x000002000012441a : leave ; jne 0x20000124425 ; xor al, al ; ret
0x00000200001336ae : leave ; jne 0x200001336b9 ; xor eax, eax ; ret
0x00000200001336e2 : leave ; jne 0x200001336ed ; xor eax, eax ; ret
0x000002000013425e : leave ; jne 0x20000134269 ; xor eax, eax ; ret
0x000002000000c967 : leave ; jne 0x2000015956b ; ret
0x000002000003bc6f : leave ; jne 0x200001655ed ; xor eax, eax ; ret
0x00000200000401ef : leave ; jne 0x20000166869 ; ret
0x00000200000435f3 : leave ; jne 0x20000167df9 ; xor al, al ; ret
0x00000200001090e2 : leave ; jne 0x2000016e683 ; ret
0x0000020000053426 : leave ; jne 0x20000177a11 ; ret
0x0000020000071192 : leave ; jne 0x2000017d63d ; xor eax, eax ; ret
0x00000200000ed138 : leave ; jne 0x2000019bdf1 ; ret
0x00000200001a99df : leave ; jne 0x200001a99bf ; xor eax, eax ; ret
0x00000200001ab83b : leave ; jne 0x200001ab84c ; mov eax, 0xc000000d ; ret
0x00000200001d0666 : leave ; jne 0x200001d0677 ; mov eax, 1 ; ret
0x00000200001f0efd : leave ; jne 0x200001f0eed ; xor al, al ; ret
0x00000200001f2ea6 : leave ; jne 0x200001f2eb7 ; mov eax, 0xc000000d ; ret
0x00000200001f5090 : leave ; jne 0x200001f508a ; ret
0x0000020000207f17 : leave ; jne 0x20000207efa ; test rdx, rdx ; cmovne rax, rdx ; jmp 0x20000207f68
0x00000200003c4d17 : leave ; jne 0x200003c4d28 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003cbb22 : leave ; jne 0x200003cbb33 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003df57c : leave ; jne 0x200003df58b ; add rsp, 0x28 ; ret
0x00000200003e0f63 : leave ; jne 0x200003e0f88 ; mov eax, r10d ; ret
0x00000200003e0f63 : leave ; jne 0x200003e0f89 ; mov eax, r10d ; ret
0x00000200003e971a : leave ; jne 0x200003e9729 ; add rsp, 0x28 ; ret
0x00000200003fe977 : leave ; jne 0x200003fe968 ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000041b3c3 : leave ; jne 0x2000041b3d4 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041d7df : leave ; jne 0x2000041d7f0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000042a9ca : leave ; jne 0x2000042a9f7 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000434893 : leave ; jne 0x200004348a4 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043ec20 : leave ; jne 0x2000043ec31 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043eea5 : leave ; jne 0x2000043eebc ; xor eax, eax ; ret
0x0000020000442846 : leave ; jne 0x20000442857 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000466853 : leave ; jne 0x20000466876 ; mov eax, edi ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000469972 : leave ; jne 0x20000469985 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000488279 : leave ; jne 0x20000488280 ; ret
0x00000200004c1c64 : leave ; jne 0x200004c1ca6 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ca39e : leave ; jne 0x200004ca3a5 ; ret
0x00000200004e4ea1 : leave ; jne 0x200004e4eac ; mov al, 1 ; ret
0x00000200004fc1b5 : leave ; jne 0x200004fc1c8 ; mov r8, rdx ; mov rax, r8 ; ret
0x00000200005f16c2 : leave ; jne 0x200005f16d3 ; mov eax, 0xc000000d ; ret
0x00000200005fc4e5 : leave ; jne 0x200005fc4f0 ; xor eax, eax ; ret
0x000002000063230a : leave ; jne 0x2000063231b ; mov eax, 0xc000000d ; ret
0x0000020000640455 : leave ; jne 0x20000640434 ; ret
0x0000020000643a2a : leave ; jne 0x20000643a35 ; xor al, al ; ret
0x000002000064f517 : leave ; jne 0x2000064f527 ; mov eax, 1 ; ret
0x000002000064f65a : leave ; jne 0x2000064f665 ; mov al, 1 ; ret
0x0000020000662eed : leave ; jne 0x20000662ed9 ; mov rax, rcx ; ret
0x000002000067e325 : leave ; jne 0x2000067e336 ; mov eax, 0xc000000d ; ret
0x000002000067eb02 : leave ; jne 0x2000067eb0d ; xor eax, eax ; ret
0x000002000068eb1c : leave ; jne 0x2000068eb11 ; mov eax, 0xc0000225 ; ret
0x000002000074fb0e : leave ; jne 0x2000074fb15 ; ret
0x000002000076c856 : leave ; jne 0x2000076c844 ; ret
0x000002000040f1f9 : leave ; jns 0x2000040f208 ; add rsp, 0x28 ; ret
0x0000020000077488 : leave ; jo 0x200000774a0 ; add dh, dh ; ret 0x7410
0x0000020000113a3a : leave ; js 0x20000113a4e ; mov rax, rdx ; ret
0x0000020000113a3a : leave ; js 0x20000113a4f ; mov rax, rdx ; ret
0x00000200004609ab : leave ; js 0x200004609cd ; test cl, 8 ; jne 0x200004609c0 ; ret
0x00000200003ee028 : leave ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200005a125a : leave ; lea ecx, dword ptr [rax + 0x1c] ; call r10
0x00000200001d7ac9 : leave ; lea rax, qword ptr [rcx + rdx] ; shr rax, 0xc ; ret
0x000002000049be68 : leave ; lea rcx, qword ptr [rdi + 0x10] ; call 0x200000bd1f4
0x0000020000605313 : leave ; leave ; ret 0x48ff
0x00000200003f1851 : leave ; mov al, cl ; ret
0x00000200006304a4 : leave ; mov al, r9b ; ret
0x00000200004671f2 : leave ; mov byte ptr [rbp - 0x79], dil ; call 0x20000463ea1
0x0000020000053846 : leave ; mov cr8, rcx ; ret
0x00000200001fdd85 : leave ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200004d5df9 : leave ; mov dword ptr [r8], r9d ; mov eax, 1 ; ret
0x00000200001b6e9a : leave ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x00000200001a3bec : leave ; mov dword ptr [rip + 0x1da491], ecx ; jmp 0x2000012fe49
0x000002000005c780 : leave ; mov eax, 0xc000000d ; jmp 0x2000005c751
0x0000020000053a4b : leave ; mov eax, 0xc000000d ; ret
0x00000200006b7235 : leave ; mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x00000200000402f8 : leave ; mov eax, r8d ; lock btr qword ptr [rcx], rax ; ret
0x0000020000133b23 : leave ; mov eax, r9d ; ret
0x000002000016f043 : leave ; mov edx, 0xffc6c6c6 ; xor ecx, ecx ; call qword ptr [rax]
0x000002000013e93c : leave ; mov qword ptr [rsp + 0x70], rax ; call r11
0x000002000003991e : leave ; mov r14, rax ; jmp 0x200000398ec
0x000002000049a2b0 : leave ; mov r15d, eax ; call 0x200000bc567
0x0000020000754df7 : leave ; mov rax, qword ptr [r13 + rcx*8 + 0x18] ; xor ecx, ecx ; call rax
0x000002000014f7b8 : leave ; mov rax, qword ptr [rax + r8*8 + 8] ; ret
0x00000200000b3f5a : leave ; mov rax, qword ptr [rax + rcx*8] ; ret
0x00000200000ea5d6 : leave ; mov rax, qword ptr [rip + 0x294eca] ; call rax
0x00000200006574b0 : leave ; mov rax, rcx ; ret
0x000002000022e3a6 : leave ; mov rax, rdx ; jmp 0x2000022e3b1
0x0000020000634ba0 : leave ; mov rbx, qword ptr [rsp + 8] ; mov al, r9b ; ret
0x0000020000499876 : leave ; mov rcx, rdx ; call 0x200000bc287
0x00000200004c0d80 : leave ; mov rdx, r14 ; call 0x200000e28ab
0x000002000049946a : leave ; mov rdx, r8 ; call 0x200000bc287
0x000002000057183b : leave ; movzx eax, byte ptr [rcx + rax] ; ret
0x0000020000642a19 : leave ; movzx eax, cx ; ret
0x0000020000133fac : leave ; movzx eax, r8w ; sub eax, ecx ; ret
0x000002000064979d : leave ; movzx eax, word ptr [rax + rcx*2] ; ret
0x0000020000040028 : leave ; neg ecx ; inc ecx ; mov eax, ecx ; ret
0x00000200006198b4 : leave ; or byte ptr [rcx + 0x3b], al ; adc byte ptr [rdx - 0x27], dh ; xor eax, eax ; ret
0x00000200001e1373 : leave ; or ebp, ebx ; dec dword ptr [rax - 0x75] ; ret
0x0000020000758253 : leave ; pop rbp ; ret 0x48ff
0x000002000076922d : leave ; pushfq ; inc dword ptr [rbx] ; ret
0x00000200004e0025 : leave ; ret
0x00000200004b3f81 : leave ; ret 0x10
0x00000200004f5ff5 : leave ; ret 0x48ff
0x000002000060465e : leave ; ret 0xccff
0x00000200005940b3 : leave ; ret 0xffba
0x0000020000181d63 : leave ; ret 0xfff1
0x000002000020e4b6 : leave ; ror byte ptr [rax + 0x4a880242], 1 ; ret
0x000002000040684d : leave ; sar bh, cl ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000137650 : leave ; sbb byte ptr [rax], al ; ret
0x0000020000040026 : leave ; sbb ecx, ecx ; neg ecx ; inc ecx ; mov eax, ecx ; ret
0x000002000005028a : leave ; sete al ; ret
0x000002000055716b : leave ; setne al ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005574ce : leave ; setne al ; add rsp, 0x30 ; pop rbp ; ret
0x00000200005579b3 : leave ; setne al ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000556eaf : leave ; setne al ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000558c3f : leave ; setne al ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000557f0b : leave ; setne al ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000557d77 : leave ; setne al ; pop rbp ; ret
0x000002000001bef1 : leave ; setne al ; ret
0x00000200003ebb46 : leave ; setns al ; dec eax ; ret
0x000002000057b76d : leave ; stc ; inc dword ptr [rbp + 0x33] ; inc dword ptr [rcx - 1] ; ret 0x8349
0x00000200001a7009 : leave ; sub byte ptr [rax + 0x3b], cl ; ret
0x0000020000513d07 : leave ; sub eax, 0x8a440008 ; ret
0x00000200003edd84 : leave ; sub r10d, r9d ; mov eax, r10d ; ret
0x00000200001340c2 : leave ; sub r9d, eax ; mov eax, r9d ; ret
0x0000020000557ba9 : leave ; test al, al ; setne cl ; mov eax, ecx ; pop rbp ; ret
0x00000200006bac1e : leave ; test r8d, r8d ; jne 0x200006bac2f ; xor eax, eax ; ret
0x00000200006b5365 : leave ; test rax, rax ; jne 0x200006b5372 ; ret
0x0000020000051fa0 : leave ; test rcx, rcx ; jne 0x20000051fb3 ; mov rax, r9 ; ret
0x000002000061a8aa : leave ; xchg qword ptr [rdx + r8*8], rcx ; mov eax, r9d ; ret
0x00000200001f4aae : leave ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200003edcc8 : leave ; xor r10d, r9d ; mov eax, r10d ; ret
0x00000200001f7cf1 : leave ; xor r8, rax ; cmp r10, r11 ; jb 0x200001f7ce0 ; ret
0x00000200004c7817 : leave ; xor r8d, r8d ; call 0x200000ec74b
0x0000020000152e1c : leave ; xor r8d, r8d ; mov rcx, r10 ; call r10
0x000002000015305c : leave ; xor r8d, r8d ; mov rcx, r11 ; call r11
0x00000200006b3981 : leave ; xor r8d, r8d ; xor edx, edx ; call 0x200000cfb98
0x00000200000e8453 : les r9d, ptr [rcx - 0x74b70fbb] ; ret
0x00000200004746fa : les r9d, ptr [rcx - 0x74b71fbb] ; ret
0x00000200002074f2 : les rcx, ptr [rbx] ; add rsp, 0x28 ; ret
0x000002000074279c : ljmp ptr [r10] ; ret
0x0000020000064f64 : ljmp ptr [r11] ; fild word ptr [rcx + 1] ; xor al, 0xff ; ret
0x00000200005cb5f2 : ljmp ptr [rax + 0x19850f01] ; ret
0x000002000039b9b1 : ljmp ptr [rax + 0x55850f08] ; ret
0x00000200004eed45 : ljmp ptr [rax - 0x3f6bf0fd] ; ret
0x0000020000064f65 : ljmp ptr [rbx] ; fild word ptr [rcx + 1] ; xor al, 0xff ; ret
0x000002000048def7 : ljmp ptr [rbx] ; ret
0x00000200005cf7d3 : ljmp ptr [rbx] ; ret 0x8b4c
0x0000020000161ffc : ljmp ptr [rcx + 0xd] ; push rcx ; ret 0x21
0x000002000076aa4b : ljmp ptr [rcx + 5] ; ret 0xb5a3
0x000002000074279d : ljmp ptr [rdx] ; ret
0x00000200000aa778 : lock add byte ptr [rax + 0x33], cl ; add dword ptr [rax + 0x23], ecx ; ret 0x3148
0x00000200003c5aaa : lock add byte ptr [rax - 0x7d], cl ; ret
0x00000200000feab4 : lock add byte ptr [rax], al ; add al, ch ; ret
0x00000200000a2518 : lock add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x894c
0x000002000003ce6b : lock add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000000d317 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x00000200000cfa97 : lock add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0xf44
0x0000020000543221 : lock add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret
0x000002000074bb41 : lock add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x35], cl ; je 0x2000074bb8a ; ret
0x00000200000c12d8 : lock add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x5c], cl ; ret
0x00000200007625a8 : lock add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret 0x4975
0x00000200003ae385 : lock add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x00000200001e21b0 : lock add byte ptr [rax], al ; add byte ptr [rcx], al ; ret
0x000002000000a566 : lock add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000100f0a : lock add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x000002000006d86d : lock add byte ptr [rax], al ; add cl, ch ; ret
0x0000020000141fb5 : lock add byte ptr [rax], al ; add cl, ch ; ret 0xbe
0x0000020000014519 : lock add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000040c3b3 : lock add byte ptr [rbp - 0x73], cl ; and byte ptr [r8 - 0x75], cl ; ret 0x8b49
0x00000200000818ba : lock add dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200000556f9 : lock add dword ptr [rax], eax ; add byte ptr [rax + 0x33], cl ; ret 0x8948
0x0000020000079786 : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0x7501
0x00000200001d4b7a : lock add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0xf01
0x00000200003b774b : lock add dword ptr [rax], eax ; add byte ptr [rbp + 0x2b], al ; ror dword ptr [rcx + 0x63], cl ; ret 0x8d48
0x00000200000a424d : lock add dword ptr [rax], eax ; add byte ptr [rcx + 0x33], cl ; ret 0x8949
0x000002000007e175 : lock add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000d1291 : lock add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x85 ; ret
0x00000200000d30a4 : lock add dword ptr [rbp - 0x75], eax ; ret
0x00000200000ba5ef : lock add dword ptr [rbp - 0x75], eax ; ror dword ptr [rcx + rdi + 0x34], 1 ; ret 0x8d4c
0x00000200003fd278 : lock add dword ptr [rbx - 0x158bbf07], eax ; xor al, al ; ret
0x00000200004dc9f7 : lock and byte ptr [rax - 0x7d], cl ; ret
0x00000200001f42ce : lock and dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000109a33 : lock and dword ptr [r10], eax ; ret
0x0000020000004395 : lock and dword ptr [r8], eax ; jmp 0x20000004362
0x000002000061f563 : lock and dword ptr [r8], eax ; ret
0x0000020000131255 : lock and dword ptr [rcx + 0x6bc], 0xffffffef ; ret
0x0000020000058de7 : lock and qword ptr [r14 + 0x18], rax ; jmp 0x20000058db7
0x000002000003e4fa : lock and qword ptr [r9 + 8], rax ; ret
0x0000020000027391 : lock and qword ptr [rcx], 0 ; add rsp, 0x28 ; ret
0x000002000002f739 : lock btr dword ptr [rdx + 0x78], 5 ; ret
0x00000200000f4acf : lock btr dword ptr [rdx], 0x14 ; mov byte ptr [rdx + 0x7c], al ; ret
0x00000200000402fc : lock btr qword ptr [rcx], rax ; ret
0x00000200000156b8 : lock bts dword ptr [rcx], 9 ; ret
0x000002000002f740 : lock bts dword ptr [rdx + 0x78], 5 ; ret
0x0000020000064b0e : lock cmpxchg dword ptr [r9 + 0x318], ecx ; ret
0x000002000004c22d : lock cmpxchg qword ptr [r8], rcx ; jne 0x2000004c243 ; mov al, 1 ; ret
0x000002000004c253 : lock cmpxchg qword ptr [r8], rcx ; jne 0x2000004c266 ; mov al, 1 ; ret
0x00000200001ab41c : lock cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x0000020000071289 : lock cmpxchg qword ptr [r9], rcx ; jne 0x200000712a0 ; ret
0x000002000040f61f : lock cmpxchg qword ptr [rcx + 0x1c8], r9 ; ret
0x000002000007e95d : lock cmpxchg qword ptr [rcx], r8 ; jne 0x2000007e942 ; ret
0x0000020000012eb9 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x20000012ebc ; ret
0x000002000002db12 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x2000002db24 ; ret
0x000002000004ebe5 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x2000004ebf4 ; ret
0x0000020000053b8e : lock cmpxchg qword ptr [rcx], rdx ; jne 0x20000053ba4 ; mov al, 1 ; ret
0x00000200003fc9f1 : lock cmpxchg qword ptr [rcx], rdx ; jne 0x200003fca00 ; ret
0x000002000020e9c0 : lock cmpxchg qword ptr [rcx], rdx ; ret
0x0000020000012555 : lock cmpxchg qword ptr [rdx], rcx ; jne 0x20000012554 ; ret
0x00000200001491e7 : lock cmpxchg16b xmmword ptr [r11] ; jne 0x200001491da ; mov rax, r10 ; pop rbx ; ret
0x00000200000439c0 : lock dec dword ptr [r8] ; ret
0x0000020000071294 : lock dec dword ptr [rax + 0xc] ; ret
0x0000020000184ee3 : lock dec dword ptr [rax - 0x73] ; dec dword ptr [rax + 0x33] ; ret 0xb70f
0x000002000018315e : lock dec dword ptr [rax - 0x73] ; or eax, 0x64a75 ; call rax
0x0000020000616250 : lock dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x0000020000180d7e : lock dec dword ptr [rax - 0x75] ; ret 0xb948
0x0000020000180d61 : lock dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000185495 : lock dec dword ptr [rax - 0x75] ; retf ; call 0x200001c1727
0x00000200001c7014 : lock dec dword ptr [rax - 0x75] ; retf ; call rdi
0x0000020000532b6e : lock dec dword ptr [rax - 0x7d] ; ret
0x0000020000181daa : lock dec dword ptr [rax - 0x7f] ; ret 0xfff
0x000002000004598b : lock dec dword ptr [rbx + 0xf8] ; jmp 0x2000004595f
0x0000020000628e4c : lock dec dword ptr [rbx + 4] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000182c5c : lock dec dword ptr [rbx + rcx*4 + 0x15] ; ret
0x0000020000181e8f : lock dec dword ptr [rbx + rcx*4 + 0x44] ; and al, 0x58 ; call rax
0x00000200001d7dbc : lock dec dword ptr [rcx + 0x1390] ; ret
0x00000200001d7dda : lock dec dword ptr [rcx + 0x1394] ; ret
0x0000020000181e9c : lock dec dword ptr [rcx + 0x3b] ; ret 0x850f
0x0000020000231cd3 : lock dec dword ptr [rcx + 0x4c] ; add rsp, 0x70 ; pop rdi ; ret
0x00000200000f1905 : lock dec dword ptr [rcx + 0x8c] ; ret
0x00000200001e4bbc : lock dec dword ptr [rcx + 8] ; ret
0x0000020000183c80 : lock dec dword ptr [rcx - 0x75] ; leave ; call 0x200001bfe9f
0x0000020000086198 : lock dec dword ptr [rcx] ; add rsp, 0x28 ; ret
0x0000020000041370 : lock dec dword ptr [rcx] ; ret
0x00000200003a2928 : lock inc dword ptr [r8] ; ret
0x000002000051e3bf : lock inc dword ptr [rax + 0x10] ; ret
0x00000200006c6fe9 : lock inc dword ptr [rax + 0x14] ; inc dword ptr [rcx + 8] ; ret
0x0000020000108f51 : lock inc dword ptr [rax + 0x200] ; ret
0x0000020000185942 : lock inc dword ptr [rax - 0x7c] ; test byte ptr [rdi], 0x85 ; salc ; ret 0xfff0
0x00000200001d05d0 : lock inc dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x00000200004e8d3e : lock inc dword ptr [rax] ; ret
0x00000200005ca297 : lock inc dword ptr [rbp + 0x33] ; inc dword ptr [rcx - 1] ; ret 0x8348
0x00000200000539dc : lock inc dword ptr [rbx + 0x18] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c716c : lock inc dword ptr [rbx + 0x588] ; call 0x200000333f5
0x000002000010549b : lock inc dword ptr [rcx + 0x10] ; mov rcx, qword ptr [rcx] ; inc edx ; jmp 0x20000105496
0x0000020000044d6c : lock inc dword ptr [rcx + 0x10] ; ret
0x000002000009a2c8 : lock inc dword ptr [rcx + 0x24] ; ret
0x0000020000053804 : lock inc dword ptr [rcx + 0x28] ; ret
0x0000020000106bbd : lock inc dword ptr [rcx + 0x3b] ; ret
0x000002000041e5a8 : lock inc dword ptr [rcx + 0x758] ; ret
0x00000200001e4bcc : lock inc dword ptr [rcx + 4] ; lock inc dword ptr [rcx + 8] ; ret
0x00000200001e4bc4 : lock inc dword ptr [rcx + 4] ; ret
0x00000200001e4bd0 : lock inc dword ptr [rcx + 8] ; ret
0x000002000005381a : lock inc dword ptr [rcx + r8*4 + 0x218] ; ret
0x00000200000f6a74 : lock inc dword ptr [rcx - 0x68] ; ret
0x0000020000185aac : lock inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200001c91e5 : lock inc dword ptr [rdi + rcx + 0x22] ; ret
0x0000020000106bbc : lock inc dword ptr es:[rcx + 0x3b] ; ret
0x0000020000731f62 : lock or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001f437e : lock or dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001f4433 : lock or dword ptr [r10], eax ; ret
0x000002000063e921 : lock or dword ptr [rax + rcx*8], 1 ; mov rcx, rsi ; call rdx
0x000002000013124c : lock or dword ptr [rcx + 0x6bc], 0x10 ; ret
0x000002000076bdb5 : lock or dword ptr [rcx], eax ; add rsp, 0x38 ; ret
0x000002000014f798 : lock or dword ptr [rip + 0x22fadd], ecx ; ret
0x0000020000044d40 : lock or dword ptr [rip + 0x287f39], ecx ; ret
0x000002000014f7ea : lock or dword ptr [rsp], 0 ; ret
0x000002000003e543 : lock or qword ptr [r9 + 8], rdx ; ret
0x000002000005bd20 : lock sub qword ptr [rip + 0x29f4c0], rax ; ret
0x0000020000033d9a : lock xadd qword ptr [r10 + 0x20], rax ; ret
0x00000200001669aa : lock xadd qword ptr [r9 + 0x40], r8 ; ret
0x000002000016699a : lock xadd qword ptr [r9 + 0x58], rax ; ret
0x000002000016697a : lock xadd qword ptr [r9 + 0x60], rax ; ret
0x00000200000342d5 : lock xadd qword ptr [rax + 0x6250], rdx ; ret
0x0000020000033bb4 : lock xadd qword ptr [rax + r10], rcx ; ret
0x000002000014f720 : lock xadd qword ptr [rcx + 0x1740], rdx ; ret
0x000002000003644b : lock xadd qword ptr [rcx + 0x4f0], rdx ; ret
0x00000200004518f3 : lock xadd qword ptr [rcx + 0x650], rdx ; ret
0x00000200006b0709 : lock xadd qword ptr [rcx], rax ; ret
0x000002000009a28f : lock xadd qword ptr [rip + 0x264128], r8 ; ret
0x00000200000b29ee : lock xor dword ptr [rdx + 0x78], 0x1000 ; ret
0x000002000004238c : lodsb al, byte ptr [rsi] ; adc eax, dword ptr [rax + rax] ; add rcx, rdx ; jmp rcx
0x00000200001c9b86 : lodsb al, byte ptr [rsi] ; add bh, bh ; ret
0x00000200006b7ba6 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200001318d6 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x000002000041ccb2 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000006d6bb : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xc22b
0x000002000014319b : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000002000042d39e : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; add bh, bh ; ret 0x3b41
0x0000020000143735 : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; add cl, ch ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000001b99c : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; add rcx, rdx ; jmp rcx
0x00000200004ce97d : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005ad98e : lodsb al, byte ptr [rsi] ; and al, 0x80 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000018beea : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200004ba81b : lodsb al, byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000200003b5cf5 : lodsb al, byte ptr [rsi] ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000064758d : lodsb al, byte ptr [rsi] ; and al, 0xd0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200001d7bbf : lodsb al, byte ptr [rsi] ; call 0x1ffc39ec4c9
0x000002000057fb97 : lodsb al, byte ptr [rsi] ; call qword ptr [rax - 0x173d0317]
0x0000020000032961 : lodsb al, byte ptr [rsi] ; call qword ptr [rdx]
0x00000200006da0c8 : lodsb al, byte ptr [rsi] ; cwde ; ret 0x48ff
0x000002000066b833 : lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; fisttp qword ptr [rax - 1] ; ret
0x0000020000681718 : lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000669f78 : lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; xor byte ptr [r8 - 0x7d], cl ; ret
0x000002000056471d : lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x7b] ; ret
0x000002000068d83b : lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000487514 : lodsb al, byte ptr [rsi] ; dec dword ptr [rbx + 0x78c085d8] ; ret 0x8b48
0x00000200004ac900 : lodsb al, byte ptr [rsi] ; in al, dx ; ret
0x00000200001d9c3a : lodsb al, byte ptr [rsi] ; in eax, -1 ; add rsp, 0x28 ; ret
0x00000200005f7525 : lodsb al, byte ptr [rsi] ; inc dword ptr [rbp - 0x74eb8b25] ; ret
0x000002000011bb00 : lodsb al, byte ptr [rsi] ; insd dword ptr [rdi], dx ; hlt ; dec dword ptr [rax - 0x7f] ; ret
0x00000200006bb783 : lodsb al, byte ptr [rsi] ; je 0x200006bb790 ; xor ecx, ecx ; mov rax, rcx ; ret
0x0000020000572338 : lodsb al, byte ptr [rsi] ; loope 0x2000057234a ; add dh, dh ; ret
0x00000200005384ea : lodsb al, byte ptr [rsi] ; mov bl, 0xff ; add rsp, 0x58 ; ret
0x00000200001d94d9 : lodsb al, byte ptr [rsi] ; mov eax, 1 ; ret
0x0000020000046340 : lodsb al, byte ptr [rsi] ; out 1, al ; add byte ptr [rbx], bh ; ret
0x00000200006b27b0 : lodsb al, byte ptr [rsi] ; pop rcx ; ret 0x48ff
0x00000200005611e0 : lodsb al, byte ptr [rsi] ; pop rdx ; int1 ; call qword ptr [rax - 0x1a383d17]
0x00000200006889f4 : lodsb al, byte ptr [rsi] ; push qword ptr [rbx] ; ror byte ptr [rax - 0x73], 0x4d ; ret 0xd233
0x000002000050af30 : lodsb al, byte ptr [rsi] ; push rsp ; ret
0x000002000008e75a : lodsb al, byte ptr [rsi] ; ret
0x000002000005d6a0 : lodsb al, byte ptr [rsi] ; ret 0x11
0x00000200006b3ae0 : lodsb al, byte ptr [rsi] ; ret 0x40ff
0x00000200007547b3 : lodsb al, byte ptr [rsi] ; ret 0x44ff
0x00000200004ecc1b : lodsb al, byte ptr [rsi] ; ret 0x48ff
0x00000200005928a0 : lodsb al, byte ptr [rsi] ; ret 0x85ff
0x00000200006b3ac3 : lodsb al, byte ptr [rsi] ; ret 0xc1ff
0x00000200006bc210 : lodsb al, byte ptr [rsi] ; ret 0xff9a
0x00000200005d20f4 : lodsb al, byte ptr [rsi] ; ret 0xffc4
0x0000020000672f50 : lodsb al, byte ptr [rsi] ; ret 0xffd0
0x00000200005989be : lodsb al, byte ptr [rsi] ; ret 0xffe8
0x00000200000feae8 : lodsb al, byte ptr [rsi] ; ret 6
0x00000200004b7730 : lodsb al, byte ptr [rsi] ; sar bh, 0x8b ; ret
0x00000200003b1257 : lodsb al, byte ptr [rsi] ; sbb al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200004a85d0 : lodsb al, byte ptr [rsi] ; std ; ret
0x00000200006b4aa6 : lodsb al, byte ptr [rsi] ; test eax, 0xf10d8bff ; pushfq ; ret 0x48ff
0x0000020000758a67 : lodsb al, byte ptr [rsi] ; xchg eax, esi ; dec dword ptr [rbp + rcx*4 + 0xd] ; pop rdi ; pop rax ; ret 0x45ff
0x0000020000044a42 : lodsb al, byte ptr [rsi] ; xor eax, dword ptr [rax] ; ret
0x00000200000b65c4 : lodsd eax, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000125795 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x0000020000125772 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7402
0x0000020000141755 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add cl, ch ; and al, bh ; add byte ptr [rax], al ; ret
0x00000200001c1230 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x000002000014309b : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x00000200001d7438 : lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbp + 3], cl ; ret 0x341
0x00000200001172fd : lodsd eax, dword ptr [rsi] ; add eax, 0x8a01b300 ; ret
0x00000200004ad065 : lodsd eax, dword ptr [rsi] ; and dword ptr [rcx], edx ; add byte ptr [rcx - 0x73], cl ; add al, 0x90 ; ret
0x0000020000603c67 : lodsd eax, dword ptr [rsi] ; call 0x20000231ce4
0x00000200005b3bf3 : lodsd eax, dword ptr [rsi] ; call qword ptr [rax - 0x134c3d17]
0x00000200004921af : lodsd eax, dword ptr [rsi] ; cld ; ret 0xb8ff
0x000002000058e108 : lodsd eax, dword ptr [rsi] ; cmp esi, edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005ddbb6 : lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x0000020000767f68 : lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret 0x4908
0x0000020000669c87 : lodsd eax, dword ptr [rsi] ; dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x0000020000503b0f : lodsd eax, dword ptr [rsi] ; int 0xc3
0x00000200005ca296 : lodsd eax, dword ptr [rsi] ; lock inc dword ptr [rbp + 0x33] ; inc dword ptr [rcx - 1] ; ret 0x8348
0x0000020000443bc5 : lodsd eax, dword ptr [rsi] ; mov rcx, qword ptr [rdi - 8] ; mov rdx, rdi ; call qword ptr [rax]
0x000002000042a62d : lodsd eax, dword ptr [rsi] ; mov rcx, rdi ; call 0x2000004eb07
0x0000020000541ad8 : lodsd eax, dword ptr [rsi] ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x0000020000114fcf : lodsd eax, dword ptr [rsi] ; ret
0x0000020000446069 : lodsd eax, dword ptr [rsi] ; ret 0x15
0x00000200005155c9 : lodsd eax, dword ptr [rsi] ; ret 0x48ff
0x00000200006062d1 : lodsd eax, dword ptr [rsi] ; ret 0x8bff
0x000002000042105b : lodsd eax, dword ptr [rsi] ; ret 0xe9ff
0x000002000015759a : lodsd eax, dword ptr [rsi] ; ret 0xffea
0x00000200004b7627 : lodsd eax, dword ptr [rsi] ; sar bh, 0x8b ; ret
0x0000020000130dc2 : lodsd eax, dword ptr [rsi] ; sbb al, 0 ; xor eax, eax ; ret
0x00000200005d8c82 : lodsd eax, dword ptr [rsi] ; scasd eax, dword ptr [rdi] ; call qword ptr [rax - 0x9633d17]
0x0000020000129655 : lodsd eax, dword ptr [rsi] ; sldt word ptr [rax] ; add byte ptr [rbx], ah ; ret 0xc803
0x00000200005f4784 : lodsd eax, dword ptr [rsi] ; test al, 0xff ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000661b53 : lodsd eax, dword ptr [rsi] ; xchg eax, ebx ; wait ; dec dword ptr [rax - 0x7d] ; ret
0x00000200000a936b : lodsd eax, dword ptr [rsi] ; xor al, 0xe ; add byte ptr [rax - 0x75], cl ; ret
0x000002000004472a : lodsd eax, dword ptr [rsi] ; xor eax, dword ptr [rax] ; call rax
0x0000020000603c66 : lodsq rax, qword ptr [rsi] ; call 0x20000231ce5
0x0000020000767f67 : lodsq rax, qword ptr [rsi] ; dec dword ptr [rax - 0x7d] ; ret 0x4908
0x0000020000003774 : loop 0x2000000379b ; ret 0xc23b
0x000002000000ad3f : loop 0x2000000ad72 ; add byte ptr [rax + 0x3b], cl ; ret 0xe875
0x0000020000014803 : loop 0x20000014811 ; or eax, edx ; jmp 0x200000147fa
0x0000020000018849 : loop 0x20000018859 ; je 0x2000001883a ; mov al, 1 ; ret
0x000002000001eff1 : loop 0x2000001f00b ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000020fc3 : loop 0x20000020f72 ; in eax, dx ; or eax, 0x1c8b4d04 ; ret
0x0000020000031dd4 : loop 0x20000031e1e ; btr rax, rdx ; mov qword ptr [rcx], rax ; ret
0x0000020000046675 : loop 0x2000004666f ; ret 0x7455
0x00000200000760a3 : loop 0x2000007609d ; ret 0xf15
0x0000020000076a8c : loop 0x20000076a86 ; ret 0xf15
0x000002000008b55c : loop 0x2000008b583 ; or rax, rdx ; ret
0x00000200000a00f4 : loop 0x200000a012b ; add byte ptr [rax - 9], cl ; ror byte ptr [rax + 0x23], 1 ; ret 0x234c
0x00000200000ad73c : loop 0x200000ad744 ; add al, 0 ; add byte ptr [rbx], dh ; ret 0x4489
0x00000200000f27a0 : loop 0x200000f27aa ; add byte ptr [rax - 0x707bf100], al ; ret 0xa
0x000002000010698c : loop 0x2000010697b ; ret
0x000002000011097f : loop 0x2000011097e ; dec dword ptr [rax - 0x75] ; ret
0x000002000011097e : loop 0x2000011097f ; dec dword ptr [rax - 0x75] ; ret
0x000002000011912d : loop 0x20000119127 ; ret 0xf55
0x0000020000119634 : loop 0x2000011962e ; ret 0xf55
0x000002000011da77 : loop 0x2000011da71 ; ret 0x7455
0x000002000011f450 : loop 0x2000011f49a ; bts rax, rdx ; mov qword ptr [rcx], rax ; ret
0x00000200001272c9 : loop 0x200001272f3 ; or rax, rdx ; sub rax, r8 ; ret
0x000002000013e000 : loop 0x2000013e003 ; add eax, esi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000013e023
0x000002000013f7b2 : loop 0x2000013f7c7 ; jne 0x2000013f7bb ; ret
0x000002000013fde1 : loop 0x2000013fda1 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000014029a : loop 0x2000014027b ; add byte ptr [rax], al ; ret
0x000002000014039a : loop 0x2000014037a ; add byte ptr [rax], al ; ret
0x000002000014049a : loop 0x20000140479 ; add byte ptr [rax], al ; ret
0x000002000014059a : loop 0x20000140578 ; add byte ptr [rax], al ; ret
0x000002000014069a : loop 0x20000140677 ; add byte ptr [rax], al ; ret
0x000002000014079a : loop 0x20000140776 ; add byte ptr [rax], al ; ret
0x000002000014089a : loop 0x20000140875 ; add byte ptr [rax], al ; ret
0x000002000014099a : loop 0x20000140974 ; add byte ptr [rax], al ; ret
0x0000020000140a9a : loop 0x20000140a73 ; add byte ptr [rax], al ; ret
0x0000020000140b9a : loop 0x20000140b72 ; add byte ptr [rax], al ; ret
0x0000020000140c9a : loop 0x20000140c71 ; add byte ptr [rax], al ; ret
0x0000020000140d9a : loop 0x20000140d70 ; add byte ptr [rax], al ; ret
0x0000020000140e9a : loop 0x20000140e6f ; add byte ptr [rax], al ; ret
0x0000020000140f9a : loop 0x20000140f6e ; add byte ptr [rax], al ; ret
0x000002000014109a : loop 0x2000014106d ; add byte ptr [rax], al ; ret
0x000002000014119a : loop 0x2000014116c ; add byte ptr [rax], al ; ret
0x000002000014129a : loop 0x2000014126b ; add byte ptr [rax], al ; ret
0x000002000014139a : loop 0x2000014136a ; add byte ptr [rax], al ; ret
0x000002000014149a : loop 0x20000141469 ; add byte ptr [rax], al ; ret
0x000002000014159a : loop 0x20000141568 ; add byte ptr [rax], al ; ret
0x000002000014169a : loop 0x20000141667 ; add byte ptr [rax], al ; ret
0x000002000014179a : loop 0x20000141766 ; add byte ptr [rax], al ; ret
0x000002000014189a : loop 0x20000141865 ; add byte ptr [rax], al ; ret
0x000002000014199a : loop 0x20000141964 ; add byte ptr [rax], al ; ret
0x0000020000141a9a : loop 0x20000141a63 ; add byte ptr [rax], al ; ret
0x0000020000141b9a : loop 0x20000141b62 ; add byte ptr [rax], al ; ret
0x0000020000141c9a : loop 0x20000141c61 ; add byte ptr [rax], al ; ret
0x0000020000141d9a : loop 0x20000141d60 ; add byte ptr [rax], al ; ret
0x0000020000141e9a : loop 0x20000141e5f ; add byte ptr [rax], al ; ret
0x0000020000141f9a : loop 0x20000141f5e ; add byte ptr [rax], al ; ret
0x000002000014209a : loop 0x2000014205d ; add byte ptr [rax], al ; ret
0x000002000014219a : loop 0x2000014215c ; add byte ptr [rax], al ; ret
0x000002000014229a : loop 0x2000014225b ; add byte ptr [rax], al ; ret
0x000002000014239a : loop 0x2000014235a ; add byte ptr [rax], al ; ret
0x000002000014249a : loop 0x20000142459 ; add byte ptr [rax], al ; ret
0x000002000014259a : loop 0x20000142558 ; add byte ptr [rax], al ; ret
0x000002000014269a : loop 0x20000142657 ; add byte ptr [rax], al ; ret
0x000002000014279a : loop 0x20000142756 ; add byte ptr [rax], al ; ret
0x000002000014289a : loop 0x20000142855 ; add byte ptr [rax], al ; ret
0x000002000014299a : loop 0x20000142954 ; add byte ptr [rax], al ; ret
0x0000020000142a9a : loop 0x20000142a53 ; add byte ptr [rax], al ; ret
0x0000020000142b9a : loop 0x20000142b52 ; add byte ptr [rax], al ; ret
0x0000020000142c9a : loop 0x20000142c51 ; add byte ptr [rax], al ; ret
0x0000020000142d9a : loop 0x20000142d50 ; add byte ptr [rax], al ; ret
0x0000020000142e9a : loop 0x20000142e4f ; add byte ptr [rax], al ; ret
0x0000020000142f9a : loop 0x20000142f4e ; add byte ptr [rax], al ; ret
0x000002000014309a : loop 0x2000014304d ; add byte ptr [rax], al ; ret
0x000002000014319a : loop 0x2000014314c ; add byte ptr [rax], al ; ret
0x000002000014329a : loop 0x2000014324b ; add byte ptr [rax], al ; ret
0x000002000014339a : loop 0x2000014334a ; add byte ptr [rax], al ; ret
0x000002000014349a : loop 0x20000143449 ; add byte ptr [rax], al ; ret
0x000002000014359a : loop 0x20000143548 ; add byte ptr [rax], al ; ret
0x000002000014369a : loop 0x20000143647 ; add byte ptr [rax], al ; ret
0x000002000014379a : loop 0x20000143746 ; add byte ptr [rax], al ; ret
0x000002000014389a : loop 0x20000143845 ; add byte ptr [rax], al ; ret
0x0000020000143fa1 : loop 0x20000143f42 ; fnstcw word ptr [rcx] ; ret
0x0000020000148a90 : loop 0x20000148ab6 ; or rax, rdx ; pop rdi ; ret
0x0000020000148a90 : loop 0x20000148ab8 ; or rax, rdx ; pop rdi ; ret
0x000002000014921a : loop 0x20000149277 ; ret
0x0000020000157592 : loop 0x200001575de ; cmova eax, eax ; dec eax ; jmp 0x20000003854
0x00000200001634fd : loop 0x200001634ea ; ret
0x000002000017f3bf : loop 0x2000017f3ce ; ret 0x8941
0x0000020000199182 : loop 0x20000199200 ; hlt ; push rsi ; ret
0x00000200001b2175 : loop 0x200001b219f ; or rax, rdx ; mov qword ptr [r8], rax ; ret
0x00000200001b9466 : loop 0x200001b9460 ; ret 0x7432
0x00000200001be69a : loop 0x200001be6ee ; idiv edi ; add rsp, 0x78 ; ret
0x00000200001c9781 : loop 0x200001c97a7 ; or rax, rdx ; ret
0x00000200001c9781 : loop 0x200001c97a8 ; or rax, rdx ; ret
0x00000200001cc137 : loop 0x200001cc131 ; ret 0x7455
0x00000200001d786c : loop 0x200001d7886 ; add edx, edx ; and eax, 1 ; or eax, edx ; ret
0x00000200001e7a2f : loop 0x200001e7a3a ; add edx, 0x13 ; call r9
0x00000200001f2e58 : loop 0x200001f2e5f ; add rsp, 0x38 ; ret
0x00000200001f3949 : loop 0x200001f3957 ; add rdx, rax ; jmp 0x200001f3919
0x00000200001f7544 : loop 0x200001f754d ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000209018 : loop 0x20000209043 ; or rax, rdx ; add rsp, 0x28 ; ret
0x00000200002091e8 : loop 0x200002091ef ; add rsp, 0x58 ; ret
0x000002000020a925 : loop 0x2000020a92c ; add rsp, 0x38 ; ret
0x000002000020af59 : loop 0x2000020af60 ; add rsp, 0x48 ; ret
0x0000020000229ac2 : loop 0x20000229ac5 ; add eax, edi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000229ae6
0x000002000022f80a : loop 0x2000022f841 ; ret 0x8948
0x00000200002303cc : loop 0x200002303cf ; add eax, ebx ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x200002303f0
0x00000200003e27ba : loop 0x200003e277e ; ret
0x00000200003e39e5 : loop 0x200003e39b8 ; dec dword ptr [rbx + 0x79c085d8] ; ret 0x73e9
0x00000200003e6f8e : loop 0x200003e6f1c ; ret
0x00000200003fa0e6 : loop 0x200003fa145 ; ret
0x00000200004139bb : loop 0x200004139db ; add byte ptr [rcx + rcx*4 + 1], al ; xor eax, eax ; ret
0x0000020000419eb6 : loop 0x20000419e4a ; add eax, 0xc4834800 ; ret
0x000002000041dc8a : loop 0x2000041dce7 ; add eax, dword ptr [rax] ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000425598 : loop 0x200004255ab ; call 0x20000045721
0x000002000043482a : loop 0x20000434890 ; ret 0x48ff
0x000002000043745a : loop 0x200004373f9 ; ret
0x00000200004414ea : loop 0x200004414cc ; ret
0x0000020000447739 : loop 0x20000447741 ; add byte ptr [rax], al ; loopne 0x200004476d0 ; ret 0x8b49
0x0000020000452796 : loop 0x20000452783 ; ret 0xfffb
0x0000020000475e9a : loop 0x20000475f1a ; ret 0x48ff
0x000002000048296a : loop 0x20000482906 ; ret
0x0000020000490ada : loop 0x20000490af6 ; ret
0x00000200004962f1 : loop 0x200004962fd ; add rcx, 0x48 ; call 0x200000b6c29
0x00000200004998da : loop 0x20000499868 ; ret 0xfff
0x000002000049a8e1 : loop 0x2000049a8e9 ; call 0x200000bc2a5
0x00000200004aca1a : loop 0x200004aca76 ; ret 0xe9ff
0x00000200004ad057 : loop 0x200004ad061 ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; add al, 0x90 ; ret
0x00000200004c6346 : loop 0x200004c634c ; mov rax, r8 ; ret
0x00000200004cd48b : loop 0x200004cd48e ; ret
0x00000200004eb2cf : loop 0x200004eb2d7 ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000502e9a : loop 0x20000502ea0 ; ret
0x00000200005128ba : loop 0x200005128a2 ; ret 0x8bff
0x0000020000512cfa : loop 0x20000512cd8 ; ret 0x85ff
0x000002000051723f : loop 0x2000051723a ; ret 0x3a0
0x000002000052169a : loop 0x20000521678 ; ret 0xfff
0x000002000052919a : loop 0x200005291fd ; ret 0xebff
0x000002000055959e : loop 0x200005595be ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x00000200005621ae : loop 0x2000056219b ; ret 0xe5fc
0x000002000056cb25 : loop 0x2000056cb14 ; dec dword ptr [rbx + rcx*4 + 0x35] ; stc ; ret 0xffd6
0x000002000056cb9a : loop 0x2000056cb89 ; dec dword ptr [rbx + rcx*4 + 0x35] ; insb byte ptr [rdi], dx ; ret 0xffd6
0x00000200005ba76c : loop 0x200005ba760 ; inc dword ptr [rcx - 0x75] ; ret 0x8d4c
0x00000200005ba76b : loop 0x200005ba761 ; inc dword ptr [rcx - 0x75] ; ret 0x8d4c
0x00000200005de108 : loop 0x200005de0fc ; dec dword ptr [rdi] ; mov bh, 0x46 ; add bh, bh ; ret
0x00000200005eab9d : loop 0x200005eaba4 ; add rsp, 0x28 ; ret
0x00000200005f3071 : loop 0x200005f3083 ; or r8d, edx ; jmp 0x200005f3094
0x00000200005f46cb : loop 0x200005f46d2 ; add rsp, 0x68 ; ret
0x00000200005f47e4 : loop 0x200005f47eb ; add rsp, 0x68 ; ret
0x0000020000602a2a : loop 0x20000602a13 ; ret 0xb9ff
0x000002000060a819 : loop 0x2000060a7aa ; add cl, byte ptr [rax - 1] ; ret 0xc084
0x000002000060ea2a : loop 0x2000060ea53 ; ret 0x48ff
0x000002000063100e : loop 0x20000631035 ; ret 0x4489
0x000002000065dff7 : loop 0x2000065dfe3 ; ret
0x0000020000680eba : loop 0x20000680ecf ; jmp 0x1ffc3f39fc6
0x00000200006880d7 : loop 0x200006880e1 ; inc dword ptr [rax + rax*8 - 0x7cb7e88c] ; ret
0x0000020000691c84 : loop 0x20000691c13 ; ret
0x00000200006ba8ae : loop 0x200006ba92f ; xchg eax, edi ; dec dword ptr [rax - 0x75] ; ret
0x00000200006cc7a3 : loop 0x200006cc7f4 ; add esp, 0x30 ; pop rbx ; jmp r8
0x00000200006d7332 : loop 0x200006d72ed ; ret 0xfff
0x00000200006d7642 : loop 0x200006d760d ; ret 0x89ff
0x00000200006dc166 : loop 0x200006dc171 ; add byte ptr [rax], al ; mov eax, 0xc0000001 ; ret
0x0000020000731bc1 : loop 0x20000731bc4 ; add eax, esi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000731be4
0x0000020000735804 : loop 0x20000735807 ; add eax, esi ; lea eax, dword ptr [rax + rax*2] ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x20000735827
0x0000020000746501 : loop 0x20000746504 ; ret
0x0000020000757432 : loop 0x20000757457 ; mov eax, 0x35894cff ; ret
0x000002000075c059 : loop 0x2000075c076 ; or eax, edx ; ret
0x000002000075c059 : loop 0x2000075c077 ; or eax, edx ; ret
0x000002000076328b : loop 0x200007632db ; add esp, 0x50 ; pop rbx ; ret
0x0000020000016ab9 : loope 0x20000016aca ; cmp cl, 1 ; sete al ; ret
0x000002000001f062 : loope 0x2000001f0b2 ; add esp, 0x20 ; pop rbx ; ret
0x000002000002222e : loope 0x20000022284 ; mov dword ptr [rcx + 0x168], eax ; ret
0x000002000002d543 : loope 0x2000002d54e ; cmove rax, rdx ; ret
0x000002000002eb18 : loope 0x2000002eb6b ; mov dword ptr [rdx], ecx ; ret
0x0000020000037296 : loope 0x2000003729d ; mov al, cl ; ret
0x000002000003856b : loope 0x2000003856e ; mov edx, eax ; test r8d, r8d ; jne 0x2000003857e ; ret
0x000002000003bc63 : loope 0x2000003bc78 ; jae 0x2000003bc76 ; mov eax, 1 ; ret
0x0000020000042394 : loope 0x20000042354 ; add al, 0 ; add byte ptr [rax], al ; ret
0x000002000006b2aa : loope 0x2000006b2ad ; ret
0x000002000006d0e6 : loope 0x2000006d0e9 ; ret
0x0000020000074be1 : loope 0x20000074c02 ; jb 0x20000074bfc ; mov eax, edx ; ret
0x0000020000074be1 : loope 0x20000074c03 ; jb 0x20000074bfd ; mov eax, edx ; ret
0x0000020000082633 : loope 0x2000008264c ; add byte ptr [rax + 1], bh ; ret
0x0000020000092fbd : loope 0x20000092fae ; lea eax, dword ptr [rax + 2] ; add dh, dh ; ret
0x00000200000b29e6 : loope 0x200000b29f0 ; cmp r8b, cl ; jne 0x200000b29f5 ; ret
0x00000200000dc6c4 : loope 0x200000dc691 ; mov rax, cr3 ; mov cr3, rax ; ret
0x00000200000ea7ea : loope 0x200000ea837 ; cmp cl, 0x42 ; je 0x200000ea7e7 ; xor al, al ; ret
0x000002000011efa3 : loope 0x2000011efa6 ; ret
0x000002000013cd8a : loope 0x2000013cd5f ; mov eax, 0xffff ; ret
0x0000020000171622 : loope 0x20000171681 ; add byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call rbx
0x00000200001b2a92 : loope 0x200001b2a52 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200001b9a9b : loope 0x200001b9a3c ; idiv edi ; add rsp, 0x70 ; pop rbp ; ret
0x00000200001bff27 : loope 0x200001bff4c ; add bl, al ; movzx eax, byte ptr [rcx + 0x7d] ; ret
0x00000200001c3c8a : loope 0x200001c3c57 ; mov rax, cr3 ; mov cr3, rax ; ret
0x00000200001d09d0 : loope 0x200001d09c3 ; dec dword ptr [rax - 9] ; ret
0x0000020000206242 : loope 0x20000206249 ; add rsp, 0x28 ; ret
0x000002000022bac8 : loope 0x2000022ba5d ; add qword ptr [r8 + 0x33], rcx ; ret 0x8948
0x0000020000231397 : loope 0x200002313b2 ; add byte ptr [rax + 0x33], cl ; ret
0x0000020000231396 : loope 0x200002313b3 ; add byte ptr [rax + 0x33], cl ; ret
0x000002000039d9d1 : loope 0x2000039da20 ; add esp, 0x28 ; ret
0x00000200003adff0 : loope 0x200003adff7 ; add rsp, 0x28 ; ret
0x00000200003eb860 : loope 0x200003eb897 ; add byte ptr [rcx - 0x75], cl ; ret 0x8948
0x00000200003f9a8f : loope 0x200003f9af4 ; ret
0x000002000040dafb : loope 0x2000040db22 ; idiv edi ; mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000413d26 : loope 0x20000413d48 ; jb 0x20000413d37 ; mov eax, edx ; ret
0x0000020000413d26 : loope 0x20000413d49 ; jb 0x20000413d38 ; mov eax, edx ; ret
0x0000020000414db1 : loope 0x20000414db8 ; xor edx, edx ; call 0x20000231016
0x000002000041eb2c : loope 0x2000041eb33 ; add rsp, 0x28 ; ret
0x000002000043fcaa : loope 0x2000043fcae ; add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x000002000044439c : loope 0x200004443c0 ; jb 0x200004443b6 ; mov rax, r8 ; ret
0x000002000044a4be : loope 0x2000044a4c8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xf], 0x45 ; ret 0xba0f
0x000002000044c955 : loope 0x2000044c979 ; jb 0x2000044c974 ; mov rax, r8 ; ret
0x0000020000471983 : loope 0x20000471993 ; jne 0x20000471992 ; mov al, r9b ; ret
0x000002000048438b : loope 0x20000484344 ; ret
0x00000200004998d7 : loope 0x200004998da ; call 0x200000c23c5
0x000002000049aa4b : loope 0x2000049aabf ; ret 0x49ff
0x000002000049aeef : loope 0x2000049af3d ; xor bh, bh ; call 0x200000c3087
0x000002000049c3d8 : loope 0x2000049c3c4 ; dec dword ptr [rax + 0x3b] ; ret
0x00000200004c9235 : loope 0x200004c9238 ; ret
0x00000200004c937f : loope 0x200004c93cd ; ret 0x48ff
0x00000200004cadc9 : loope 0x200004cadcf ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xc084
0x00000200004e1d9c : loope 0x200004e1da4 ; movdqu xmmword ptr [rdx + r8*8], xmm0 ; jmp 0x200004e1d51
0x00000200004ef094 : loope 0x200004ef09c ; test rax, rax ; je 0x200004ef0a4 ; call rax
0x0000020000505998 : loope 0x200005059ac ; xchg eax, esi ; ret 0x4d89
0x000002000050a39b : loope 0x2000050a32c ; ret 0x48ff
0x000002000050a79b : loope 0x2000050a7fa ; ret
0x000002000050a79b : loope 0x2000050a801 ; ret
0x000002000051515b : loope 0x20000515112 ; ret 0x48ff
0x000002000051d89b : loope 0x2000051d8c9 ; ret 0x33ff
0x0000020000521657 : loope 0x20000521645 ; movsxd rbx, esi ; ret 0x33ff
0x0000020000524862 : loope 0x200005248d3 ; test r9d, r10d ; je 0x20000524875 ; mov al, 1 ; ret
0x0000020000571aad : loope 0x20000571a79 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000572339 : loope 0x20000572349 ; add dh, dh ; ret
0x0000020000599743 : loope 0x20000599733 ; push qword ptr [rbx] ; shr al, cl ; ret
0x00000200005a1048 : loope 0x200005a101d ; mov eax, 0xc0000058 ; ret
0x00000200005cb152 : loope 0x200005cb15e ; mov rcx, qword ptr [rsp + 0x40] ; call 0x20000637461
0x00000200005cd5c2 : loope 0x200005cd5cf ; add rcx, r12 ; call 0x200000597f7
0x00000200005e18c3 : loope 0x200005e18a1 ; ret 0x84ff
0x00000200005f5dc6 : loope 0x200005f5dd0 ; mov ecx, 0xffff ; call 0x20000052069
0x00000200005f862b : loope 0x200005f85b8 ; ret
0x000002000060542b : loope 0x200006053ea ; ret 0x33ff
0x000002000062c2d0 : loope 0x2000062c2d7 ; mov rax, rcx ; add rsp, 0x28 ; ret
0x000002000063593c : loope 0x20000635944 ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000635998 : loope 0x200006359a0 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000063aaeb : loope 0x2000063aaf2 ; add rsp, 0x58 ; ret
0x000002000063fddb : loope 0x2000063fde2 ; add rsp, 0x38 ; ret
0x000002000063fdf3 : loope 0x2000063fdfa ; add rsp, 0x38 ; ret
0x00000200006574ae : loope 0x200006574e9 ; leave ; mov rax, rcx ; ret
0x000002000069e223 : loope 0x2000069e245 ; ret
0x00000200006abc9b : loope 0x200006abc52 ; ret
0x00000200006b3adf : loope 0x200006b3a8f ; ret 0x40ff
0x00000200006b59bd : loope 0x200006b59e5 ; jae 0x200006b59d0 ; mov eax, 1 ; ret
0x00000200006c0033 : loope 0x200006c003a ; mov eax, ecx ; ret
0x00000200006cc6b3 : loope 0x200006cc703 ; add esp, 0x38 ; jmp rax
0x00000200006cc7f6 : loope 0x200006cc846 ; add esp, 0x38 ; jmp rax
0x00000200006cc84b : loope 0x200006cc89b ; add esp, 0x38 ; jmp rax
0x0000020000743c2c : loope 0x20000743c7b ; add esp, 0x28 ; ret
0x0000020000745f7a : loope 0x20000745f9e ; sar rcx, 0x10 ; mov rax, rcx ; ret
0x000002000074b837 : loope 0x2000074b874 ; ret
0x00000200007511e8 : loope 0x200007511d4 ; ret 0xffff
0x0000020000755823 : loope 0x200007557af ; ret 0x74ff
0x000002000075d913 : loope 0x2000075d932 ; ret 0x48ff
0x0000020000764f5e : loope 0x20000764f1b ; dec dword ptr [rax - 0x7d] ; ret 0xe80c
0x000002000076d08f : loope 0x2000076d0a5 ; mov dword ptr [rip - 0x46a473], ecx ; ret
0x0000020000004392 : loopne 0x20000004393 ; sal al, 1 ; and dword ptr [r8], eax ; jmp 0x20000004365
0x000002000000fdaf : loopne 0x2000000fdb9 ; add byte ptr [rax], al ; pop r14 ; pop rbp ; pop rbx ; ret
0x0000020000011462 : loopne 0x20000011467 ; ret
0x0000020000014fc8 : loopne 0x20000014fd3 ; ret
0x0000020000016a88 : loopne 0x20000016a93 ; add rax, rcx ; ret
0x0000020000018faf : loopne 0x20000018f3e ; ret
0x000002000001a08b : loopne 0x2000001a090 ; ret
0x000002000001daf0 : loopne 0x2000001dafa ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002318b : loopne 0x20000023188 ; ret
0x000002000002cd37 : loopne 0x2000002cd87 ; add esp, 0x20 ; pop rbx ; ret
0x000002000002d538 : loopne 0x2000002d538 ; ret
0x0000020000030a7a : loopne 0x20000030a82 ; ret
0x0000020000036c79 : loopne 0x20000036c83 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003743e : loopne 0x20000037443 ; jne 0x2000003744d ; mov qword ptr [r9], r8 ; ret
0x000002000003872f : loopne 0x20000038734 ; ret
0x000002000003cd2e : loopne 0x2000003cd3c ; ret
0x000002000003cd29 : loopne 0x2000003cd41 ; ret
0x000002000003f466 : loopne 0x2000003f4b5 ; mov dword ptr [rax], eax ; ret
0x000002000003fb57 : loopne 0x2000003fb5c ; ret
0x0000020000040cdf : loopne 0x20000040ce8 ; add byte ptr [rax], al ; ret
0x0000020000041a30 : loopne 0x200000419bf ; ret 0x8341
0x00000200000429d4 : loopne 0x200000429d9 ; ret
0x0000020000042d09 : loopne 0x20000042d14 ; add eax, dword ptr [rdx + 0x268] ; ret
0x0000020000044a3c : loopne 0x20000044a4b ; add rax, qword ptr [rip + 0x33ac43] ; ret
0x0000020000045725 : loopne 0x20000045735 ; ret
0x0000020000047a3a : loopne 0x20000047a48 ; cmp al, 3 ; jne 0x20000047a5b ; mov rcx, rdi ; call rsi
0x0000020000049f01 : loopne 0x20000049f40 ; ret 0xef72
0x000002000004e3d3 : loopne 0x2000004e365 ; in al, -0xa ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000005b1f7 : loopne 0x2000005b20e ; add dh, dh ; ret
0x000002000005bd1f : loopne 0x2000005bd1a ; sub qword ptr [rip + 0x29f4c0], rax ; ret
0x000002000006ae33 : loopne 0x2000006adc2 ; ret 0x8341
0x000002000006f1f9 : loopne 0x2000006f1ff ; pop rcx ; ret
0x0000020000077986 : loopne 0x200000779c2 ; shr bl, 0xca ; mov rax, rdx ; jmp 0x20000077957
0x000002000007dd88 : loopne 0x2000007dd8d ; ret
0x000002000007dd91 : loopne 0x2000007dd96 ; ret
0x000002000007f5a3 : loopne 0x2000007f5ae ; ret
0x0000020000090b9e : loopne 0x20000090b2d ; ret
0x0000020000091f83 : loopne 0x20000091f8e ; add byte ptr [rax], al ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000a48b9 : loopne 0x200000a484b ; loopne 0x200000a48bb ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000a48bc : loopne 0x200000a48b8 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000a48bb : loopne 0x200000a48b9 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000b2849 : loopne 0x200000b284e ; ret
0x00000200000b2dc5 : loopne 0x200000b2dcb ; ret
0x00000200000b468b : loopne 0x200000b4687 ; shl byte ptr [rdx], 1 ; ret 0x8388
0x00000200000b75dc : loopne 0x200000b7602 ; jb 0x200000b75ef ; xor eax, eax ; ret
0x00000200000b9a6d : loopne 0x200000b99ff ; adc r14, r14 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200000bc293 : loopne 0x200000bc29a ; mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax] ; ret
0x00000200000c1a0b : loopne 0x200000c1a16 ; add rax, rcx ; ret
0x00000200000c1a1e : loopne 0x200000c1a29 ; add rax, rdx ; ret
0x00000200000cc839 : loopne 0x200000cc848 ; add rax, qword ptr [rcx + 0x98] ; ret
0x00000200000d20d0 : loopne 0x200000d2115 ; call rbx
0x00000200000d2191 : loopne 0x200000d21d6 ; call rbx
0x00000200000d228e : loopne 0x200000d22d3 ; call rbx
0x00000200000da6f8 : loopne 0x200000da702 ; add byte ptr [rax], al ; pop r13 ; pop rbx ; pop rbp ; ret
0x00000200000dc6c1 : loopne 0x200000dc6d6 ; and ah, cl ; ret
0x00000200000df3f1 : loopne 0x200000df3f6 ; ret
0x00000200000f2819 : loopne 0x200000f2823 ; add byte ptr [rax + 0x7a840f00], al ; ret 0xa
0x00000200000f7db0 : loopne 0x200000f7d43 ; or eax, 0x1ff835 ; jmp 0x200000f7d84
0x00000200000ff7b3 : loopne 0x200000ff7da ; xor eax, r8d ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000109a30 : loopne 0x20000109a30 ; sal al, 1 ; and dword ptr [r10], eax ; ret
0x000002000010c488 : loopne 0x2000010c48d ; ret
0x000002000010c4f3 : loopne 0x2000010c4b3 ; add al, byte ptr [rax] ; add al, al ; ret
0x000002000010eeb7 : loopne 0x2000010eeb9 ; shr eax, 3 ; add eax, 0x48 ; ret
0x000002000010f154 : loopne 0x2000010f153 ; shr eax, 3 ; ret
0x00000200001150fd : loopne 0x2000011510b ; mov eax, r8d ; ret
0x0000020000116c82 : loopne 0x20000116c8a ; dec eax ; ret
0x000002000011eebc : loopne 0x2000011ee46 ; sar esi, 0x33 ; ret 0xd18b
0x0000020000123dcb : loopne 0x20000123e1d ; mov edx, esi ; mov rcx, r15 ; call r14
0x0000020000123dca : loopne 0x20000123e1e ; mov edx, esi ; mov rcx, r15 ; call r14
0x0000020000127b43 : loopne 0x20000127b4f ; mov dword ptr [rip + 0x1db189], eax ; ret
0x000002000013190b : loopne 0x20000131910 ; ret
0x0000020000131caa : loopne 0x20000131c6a ; add al, byte ptr [rax] ; add al, al ; ret
0x000002000013449a : loopne 0x200001344a2 ; ret
0x00000200001344ba : loopne 0x200001344c0 ; ret
0x00000200001344fa : loopne 0x20000134506 ; ret
0x000002000013451a : loopne 0x2000013451f ; ret
0x000002000013559f : loopne 0x200001355b2 ; or eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x00000200001380de : loopne 0x20000138125 ; add rsp, 0x28 ; ret
0x0000020000143c66 : loopne 0x20000143c6b ; or eax, r8d ; wrmsr ; ret
0x0000020000143dae : loopne 0x20000143db0 ; wrmsr ; ret
0x0000020000143e1e : loopne 0x20000143e23 ; or eax, r8d ; wrmsr ; ret
0x0000020000143f64 : loopne 0x20000143f69 ; or eax, r8d ; wrmsr ; ret
0x0000020000149136 : loopne 0x20000149186 ; mov eax, eax ; pop rbx ; ret
0x00000200001593c7 : loopne 0x200001593fc ; jmp 0x200001593d0
0x000002000015a033 : loopne 0x2000015a079 ; mov eax, edx ; jmp 0x2000015a03f
0x000002000015a032 : loopne 0x2000015a07a ; mov eax, edx ; jmp 0x2000015a040
0x00000200001615f3 : loopne 0x2000016157d ; sar ecx, 0x33 ; ret 0x4a75
0x000002000017f3eb : loopne 0x2000017f3fa ; ret 0x348
0x000002000017f3ea : loopne 0x2000017f3fb ; ret 0x348
0x0000020000191bb4 : loopne 0x20000191b46 ; add r14b, r14b ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x0000020000195722 : loopne 0x2000019571e ; shl byte ptr [rdx], 1 ; ret 0x8841
0x000002000019e27c : loopne 0x2000019e283 ; add byte ptr [rax], al ; call rax
0x00000200001a5925 : loopne 0x200001a5919 ; ret
0x00000200001aba60 : loopne 0x200001aba89 ; sbb byte ptr [rax], al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200001b13a2 : loopne 0x200001b13b6 ; mov dword ptr [r8 + 0x28], eax ; ret
0x00000200001b16c5 : loopne 0x200001b16d9 ; mov dword ptr [r8 + 0x28], eax ; ret
0x00000200001b2675 : loopne 0x200001b268a ; mov qword ptr [r9], rax ; xor eax, eax ; ret
0x00000200001c1946 : loopne 0x200001c1955 ; add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200001c1992 : loopne 0x200001c19a1 ; add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200001c1a5c : loopne 0x200001c1a63 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200001c3c87 : loopne 0x200001c3c9c ; and ah, cl ; ret
0x00000200001cef61 : loopne 0x200001cef6a ; or r8, 2 ; mov qword ptr [rcx], r8 ; ret
0x00000200001cf3ca : loopne 0x200001cf3d1 ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200001d0324 : loopne 0x200001d0348 ; sar rax, 0x10 ; add rax, rcx ; ret
0x00000200001d3f3d : loopne 0x200001d3f44 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200001d7871 : loopne 0x200001d7878 ; or eax, edx ; ret
0x00000200001d7859 : loopne 0x200001d7883 ; inc eax ; add rsp, 0x28 ; ret
0x00000200001dbc1f : loopne 0x200001dbc4e ; ret
0x00000200001dd633 : loopne 0x200001dd686 ; cmp eax, edx ; je 0x200001dd645 ; add rax, rax ; ret
0x00000200001e75ae : loopne 0x200001e753e ; pop rsp ; and al, 0x40 ; call rax
0x00000200001e8bbc : loopne 0x200001e8bbf ; ret 0x963b
0x00000200001f0fb6 : loopne 0x200001f0fc1 ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200001f62f3 : loopne 0x200001f6303 ; add eax, ecx ; ret
0x00000200001f6f0c : loopne 0x200001f6f5c ; mov ebx, dword ptr [rsp + 8] ; ret
0x00000200001fc9d5 : loopne 0x200001fc9da ; ret
0x0000020000202da7 : loopne 0x20000202dab ; inc eax ; ret
0x0000020000203862 : loopne 0x2000020386b ; add byte ptr [rax], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000206a0c : loopne 0x20000206a18 ; add rax, r8 ; ret
0x0000020000206fe7 : loopne 0x20000207038 ; mov eax, dword ptr [rsp + 0x38] ; jmp rax
0x0000020000206fef : loopne 0x2000020703c ; jmp rax
0x0000020000208489 : loopne 0x2000020848e ; ret
0x000002000020f360 : loopne 0x2000020f367 ; add rsp, 0x38 ; ret
0x000002000020f35f : loopne 0x2000020f368 ; add rsp, 0x38 ; ret
0x000002000020f35e : loopne 0x2000020f369 ; add rsp, 0x38 ; ret
0x0000020000217c99 : loopne 0x20000217c61 ; ret 0x187d
0x000002000021c2a5 : loopne 0x2000021c2ac ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000230ca4 : loopne 0x20000230cf3 ; add esp, 0x48 ; ret
0x000002000039d9ce : loopne 0x2000039d9e7 ; and ah, cl ; add rsp, 0x28 ; ret
0x00000200003a3601 : loopne 0x200003a3608 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200003a3e73 : loopne 0x200003a3ec2 ; add esp, 0x28 ; ret
0x00000200003ac9b3 : loopne 0x200003ac9bc ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200003ae48d : loopne 0x200003ae4dc ; add esp, 0x28 ; ret
0x00000200003d2ac6 : loopne 0x200003d2ad7 ; add byte ptr [rax], al ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200003daeec : loopne 0x200003daef1 ; ret
0x00000200003e7ec4 : loopne 0x200003e7e48 ; ret
0x00000200003ea79d : loopne 0x200003ea7a5 ; add byte ptr [rax], al ; ret
0x00000200003ed825 : loopne 0x200003ed830 ; mov eax, dword ptr [rdx + rax*4] ; sub eax, r8d ; ret
0x00000200003f2991 : loopne 0x200003f29a2 ; jb 0x200003f29d4 ; xor eax, eax ; ret
0x00000200003fb837 : loopne 0x200003fb870 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004049ca : loopne 0x200004049e1 ; jb 0x200004049e5 ; mov eax, edx ; ret
0x00000200004049ca : loopne 0x200004049e2 ; jb 0x200004049e6 ; mov eax, edx ; ret
0x0000020000405cd1 : loopne 0x20000405c60 ; ret 0x48c3
0x000002000040dbc6 : loopne 0x2000040dc01 ; or rax, qword ptr [rcx + 0x728] ; ret
0x000002000040e813 : loopne 0x2000040e81d ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000041807c : loopne 0x2000041803b ; ret
0x000002000041b3f9 : loopne 0x2000041b3fe ; ret
0x000002000041b552 : loopne 0x2000041b529 ; mov qword ptr [rcx + 0x3d8], rdx ; ret
0x000002000041ee35 : loopne 0x2000041ee3c ; ret
0x0000020000430ac0 : loopne 0x20000430aca ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043771d : loopne 0x2000043770b ; popfq ; cdq ; ret
0x000002000043e060 : loopne 0x2000043e03e ; ret
0x000002000044773d : loopne 0x200004476cc ; ret 0x8b49
0x0000020000452ed8 : loopne 0x20000452ee1 ; add byte ptr [rax], al ; call rax
0x0000020000470586 : loopne 0x2000047058d ; add byte ptr [rax], al ; pop rsi ; ret
0x000002000047e203 : loopne 0x2000047e226 ; ret
0x000002000048386c : loopne 0x200004837f9 ; ret
0x00000200004847b2 : loopne 0x20000484804 ; mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000200004847b1 : loopne 0x20000484805 ; mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x000002000049217c : loopne 0x2000049217c ; ret 0x8bff
0x00000200004add9c : loopne 0x200004add45 ; ret
0x00000200004bbf87 : loopne 0x200004bbf74 ; ret
0x00000200004bbf86 : loopne 0x200004bbf75 ; ret
0x00000200004befd9 : loopne 0x200004befda ; add eax, edx ; ret
0x00000200004befd9 : loopne 0x200004befdb ; add eax, edx ; ret
0x00000200004c0333 : loopne 0x200004c0383 ; add esp, 0x20 ; pop rbx ; ret
0x00000200004c2d38 : loopne 0x200004c2d87 ; mov eax, eax ; ret
0x00000200004c2d37 : loopne 0x200004c2d88 ; mov eax, eax ; ret
0x00000200004d7f7a : loopne 0x200004d7f84 ; call 0x200000bd249
0x00000200004d90d1 : loopne 0x200004d90dc ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004ef34c : loopne 0x200004ef353 ; add rsp, 0x28 ; ret
0x00000200004fa788 : loopne 0x200004fa78d ; ret
0x00000200005010cf : loopne 0x20000501060 ; clc ; call r15
0x00000200005010ce : loopne 0x20000501061 ; clc ; call r15
0x0000020000501e9c : loopne 0x20000501eb2 ; ret
0x00000200005026b3 : loopne 0x200005026bb ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000503b1c : loopne 0x20000503aef ; ret
0x000002000050b9e5 : loopne 0x2000050b9d3 ; xchg eax, ebp ; ret
0x000002000050b9e4 : loopne 0x2000050b9d4 ; xchg eax, ebp ; ret
0x000002000050bb9c : loopne 0x2000050bc15 ; ret 0x48ff
0x00000200005106ed : loopne 0x200005106f6 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000514d6e : loopne 0x20000514d74 ; call 0x20000140385
0x0000020000514d6d : loopne 0x20000514d75 ; call 0x20000140386
0x000002000052134c : loopne 0x20000521353 ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000521953 : loopne 0x2000052195d ; call 0x2000014f4c5
0x0000020000525139 : loopne 0x20000525146 ; mov rcx, rax ; call 0x2000014f4c8
0x0000020000525170 : loopne 0x20000525179 ; call 0x2000014f4c5
0x0000020000525335 : loopne 0x20000525344 ; mov rcx, rbx ; call 0x2000014f188
0x0000020000525d3c : loopne 0x20000525d47 ; call 0x2000014f185
0x0000020000527d38 : loopne 0x20000527d43 ; call 0x2000014f185
0x000002000052a1dc : loopne 0x2000052a232 ; ret 0x44ff
0x00000200005399e7 : loopne 0x200005399ef ; dec eax ; ret
0x000002000053c297 : loopne 0x2000053c29e ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000053cb81 : loopne 0x2000053cb89 ; dec eax ; ret
0x000002000053d274 : loopne 0x2000053d25b ; fcos ; test rax, rax ; je 0x2000053d288 ; call rax
0x0000020000545ff3 : loopne 0x20000545ff8 ; add rax, r8 ; ret
0x000002000057c586 : loopne 0x2000057c512 ; test byte ptr [rdi], 0x84 ; ret 0xf61d
0x000002000059d33c : loopne 0x2000059d313 ; call rcx
0x000002000059d33b : loopne 0x2000059d314 ; call rcx
0x00000200005b2f99 : loopne 0x200005b2f67 ; call qword ptr [rax - 0x13733d17]
0x00000200005d5b9c : loopne 0x200005d5ba0 ; inc eax ; ret
0x00000200005d68c0 : loopne 0x200005d68c4 ; inc eax ; ret
0x00000200005dcc9c : loopne 0x200005dcd0b ; mov ch, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005f377a : loopne 0x200005f3723 ; outsd dx, dword ptr [rsi] ; add byte ptr [rsp + rax - 1], dh ; ret 0x15eb
0x00000200005f3779 : loopne 0x200005f3724 ; outsd dx, dword ptr [rsi] ; add byte ptr [rsp + rax - 1], dh ; ret 0x15eb
0x00000200005f4835 : loopne 0x200005f483c ; add rsp, 0x58 ; ret
0x00000200005f4874 : loopne 0x200005f487b ; add rsp, 0x58 ; ret
0x00000200005f5381 : loopne 0x200005f53bf ; ror byte ptr [rax - 0x75], cl ; int 0xe8
0x00000200005f98e8 : loopne 0x200005f98f2 ; mov byte ptr [rcx + 3], al ; xor eax, eax ; ret
0x00000200005fe607 : loopne 0x200005fe60e ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200005ff22c : loopne 0x200005ff24d ; ret
0x0000020000602cba : loopne 0x20000602cbf ; ret
0x000002000060a0fc : loopne 0x2000060a17b ; ret 0x45ff
0x000002000061f55e : loopne 0x2000061f568 ; enter -0x2f09, -0x10 ; and dword ptr [r8], eax ; ret
0x0000020000622eca : loopne 0x20000622ed3 ; call 0x2000014f184
0x00000200006322a3 : loopne 0x200006322aa ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000063cfaf : loopne 0x2000063cfd2 ; ret
0x0000020000642f80 : loopne 0x20000642f8d ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x0000020000647ba3 : loopne 0x20000647baa ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000065285d : loopne 0x2000065289c ; ret 0xc75
0x000002000065a1a4 : loopne 0x2000065a1ee ; ret
0x000002000066a7fc : loopne 0x2000066a801 ; ret
0x000002000066b832 : loopne 0x2000066b7e8 ; dec dword ptr [rax - 0x75] ; fisttp qword ptr [rax - 1] ; ret
0x000002000067205a : loopne 0x20000672061 ; ret 0xc13b
0x0000020000689693 : loopne 0x2000068969e ; add byte ptr [rax], al ; mov rcx, r13 ; call 0x2000068590d
0x000002000068bbbb : loopne 0x2000068bbc3 ; mov al, r8b ; ret
0x000002000068d79c : loopne 0x2000068d723 ; ret
0x0000020000690724 : loopne 0x20000690721 ; ret
0x00000200006935c5 : loopne 0x20000693617 ; mov dword ptr [rsp + 0x20], eax ; call 0x2000041f80c
0x00000200006935c4 : loopne 0x20000693618 ; mov dword ptr [rsp + 0x20], eax ; call 0x2000041f80d
0x00000200006a9951 : loopne 0x200006a995a ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006ab308 : loopne 0x200006ab358 ; add esp, 0x20 ; pop rbx ; ret
0x00000200006abc11 : loopne 0x200006abc1b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006b072d : loopne 0x200006b0732 ; ret
0x00000200006b39ed : loopne 0x200006b3a09 ; jb 0x200006b3a00 ; shr eax, 0xf ; and al, 1 ; ret
0x00000200006b3a19 : loopne 0x200006b3a32 ; jb 0x200006b3a26 ; mov al, 1 ; ret
0x00000200006b512c : loopne 0x200006b5165 ; ret 0x48ff
0x00000200006b5641 : loopne 0x200006b564b ; mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x00000200006bcfb6 : loopne 0x200006bd003 ; jmp rax
0x00000200006c1e89 : loopne 0x200006c1edc ; mov eax, dword ptr [rax + 0x30] ; add rsp, 0x28 ; ret
0x00000200006c3c4c : loopne 0x200006c3cb1 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006c5557 : loopne 0x200006c54e6 ; ret
0x00000200006cc89b : loopne 0x200006cc8eb ; add esp, 0x38 ; jmp rax
0x00000200006d9242 : loopne 0x200006d91ec ; ret 0xe8ff
0x0000020000735ec3 : loopne 0x20000735f02 ; ret
0x0000020000735ec2 : loopne 0x20000735f03 ; ret
0x0000020000740dbf : loopne 0x20000740dc3 ; inc eax ; ret
0x0000020000743c29 : loopne 0x20000743c42 ; and ah, cl ; add rsp, 0x28 ; ret
0x0000020000745f26 : loopne 0x20000745f47 ; sar rax, 0x10 ; ret
0x0000020000748554 : loopne 0x20000748591 ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x0000020000769d5c : loopne 0x20000769ce6 ; ret 0x4cff
0x000002000076ea00 : loopne 0x2000076ea05 ; ret
0x000002000077df0b : loopne 0x2000077df29 ; mov dword ptr [rip - 0x47b2ef], eax ; ret
0x0000020000782b9f : loopne 0x20000782b63 ; inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001d786d : lsl edx, edx ; and eax, 1 ; or eax, edx ; ret
0x00000200004b6ef1 : mov ah, 0x10 ; add byte ptr [rbx], dh ; rol al, 0xe0 ; add al, 0x32 ; ret
0x000002000002268d : mov ah, 0x13 ; add byte ptr [rax - 0x3ffffddb], bh ; ret
0x00000200003e7c5e : mov ah, 0x18 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000fa740 : mov ah, 0x24 ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000673bd : mov ah, 0x24 ; add byte ptr [rax], 0 ; add dh, dh ; ret
0x000002000004f563 : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; stosd dword ptr [rdi], eax ; ret 0x8a45
0x00000200000a2516 : mov ah, 0x24 ; lock add byte ptr [rax], al ; add byte ptr [rax + 0x23], cl ; ret 0x894c
0x00000200000d1cb2 : mov ah, 0x24 ; nop ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000039dd55 : mov ah, 0x24 ; or byte ptr [rcx], al ; add byte ptr [rax], al ; call qword ptr [r15]
0x0000020000081cbf : mov ah, 0x24 ; push rax ; add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0xb948
0x000002000048ff28 : mov ah, 0x2e ; ret
0x00000200004eed8c : mov ah, 0x42 ; add dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200003e9b0c : mov ah, 0x62 ; ret
0x00000200005fad28 : mov ah, 0x6f ; ret
0x0000020000426760 : mov ah, 0x84 ; ret 0xe9ff
0x000002000064a202 : mov ah, 0x8b ; xlatb ; mov rcx, rbx ; call 0x200001f64a0
0x00000200004ee8c4 : mov ah, 0x8d ; ret 0x48ff
0x00000200006d93b8 : mov ah, 0x97 ; ret 0xe8ff
0x0000020000758c07 : mov ah, 0x9c ; inc dword ptr [rbp - 0x75ec8740] ; ret
0x00000200000f1762 : mov ah, 0xa ; add bh, bh ; ret 0xff49
0x00000200004b8008 : mov ah, 0xa3 ; sar bh, 0x8b ; ret
0x00000200005155c8 : mov ah, 0xad ; ret 0x48ff
0x000002000049cb68 : mov ah, 0xae ; ret 0x4cff
0x00000200000076b8 : mov ah, 0xb ; add bl, ch ; ret
0x00000200000c7f24 : mov ah, 0xc ; add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x000002000049218f : mov ah, 0xc0 ; push rsi ; ret
0x00000200004b4048 : mov ah, 0xe0 ; sar bh, 0x8b ; ret
0x00000200004a9f98 : mov ah, 0xe1 ; ret
0x00000200004703e0 : mov ah, 0xe6 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000086c81 : mov ah, 0xf ; add byte ptr [rax - 0x3ffffddb], bh ; ret
0x00000200003dadb8 : mov ah, 0xf2 ; ret
0x00000200005ef6bd : mov ah, 0xff ; add rsp, 0x148 ; ret
0x00000200005ed682 : mov ah, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x00000200005e6480 : mov ah, 0xff ; add rsp, 0x98 ; ret
0x00000200006c60e0 : mov ah, 0xff ; lea rcx, qword ptr [rdi + 8] ; call 0x20000082338
0x00000200004e13ab : mov ah, 0xff ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005f8c5a : mov ah, 0xff ; mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004ecf37 : mov ah, 0xff ; mov rcx, rsi ; call 0x20000149197
0x000002000060d49f : mov ah, 1 ; call 0x20000231015
0x0000020000418267 : mov ah, 2 ; add byte ptr [rbx], bh ; ret
0x000002000012d95e : mov ah, 3 ; ret 0xc803
0x00000200000464f7 : mov ah, 5 ; add byte ptr [rax], al ; mov dword ptr [rbp - 0x10], eax ; call 0x200000b27d9
0x0000020000100648 : mov ah, 6 ; add dh, dh ; ret
0x0000020000409dfc : mov ah, 7 ; ret
0x00000200004efe53 : mov ah, 9 ; add al, ch ; in eax, 0x76 ; ret 0xa8ff
0x000002000041acd0 : mov ah, ah ; add dword ptr [rax], eax ; add bh, dh ; ret 0xfff0
0x00000200003bfeed : mov ah, ah ; add dword ptr [rax], eax ; add bh, dh ; ret 0xfffe
0x000002000050d912 : mov ah, ah ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 0x25], cl ; ret 0x1ec2
0x00000200005db352 : mov ah, ah ; add dword ptr [rax], eax ; add byte ptr [rcx + rdi + 0x25], al ; ret 0xd278
0x000002000053242c : mov ah, ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x1b2
0x0000020000405611 : mov ah, bh ; dec dword ptr [rcx + 0x23502444] ; ret
0x0000020000595290 : mov ah, bh ; nop ; idiv edi ; xor ecx, ecx ; call 0x200003b14a9
0x00000200003e5602 : mov ah, byte ptr [rbp - 0x74b70032] ; ret
0x000002000068aca9 : mov ah, byte ptr [rbx - 0x163fcc01] ; ret
0x00000200003ca810 : mov ah, cl ; or dword ptr [rax], eax ; add dh, dh ; ret
0x000002000049f262 : mov ah, dl ; ret
0x00000200004eb6b0 : mov ah, dl ; ret 9
0x0000020000207044 : mov al, 0 ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200000bf18e : mov al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200001104ab : mov al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200005e3c2e : mov al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rsi ; pop rbp ; ret
0x000002000011588a : mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200001b0874 : mov al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200001ea706 : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000fae3e : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001245bc : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000104ebe : mov al, 0 ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000541445 : mov al, 0 ; add byte ptr [rax], al ; pop rsi ; ret
0x00000200001c7244 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000020000016e78 : mov al, 0 ; add byte ptr [rax], al ; xor rcx, rsp ; call 0x20000133189
0x00000200004b6cdc : mov al, 0x10 ; add dh, dh ; ret
0x00000200003ae4bd : mov al, 0x10 ; ret
0x0000020000102f2f : mov al, 0x13 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000075e2d4 : mov al, 0x13 ; ret 0x8bff
0x0000020000496b6c : mov al, 0x1c ; ret 0x83ff
0x000002000060ed5c : mov al, 0x22 ; ret 0x48ff
0x00000200001f4722 : mov al, 0x28 ; and al, 0 ; add eax, r10d ; jmp 0x200001f4734
0x0000020000446dbd : mov al, 0x32 ; add al, byte ptr [rax] ; add bh, dh ; ret
0x00000200003c7689 : mov al, 0x32 ; add al, byte ptr [rax] ; add bh, dh ; ret 0xffff
0x00000200001ac313 : mov al, 0x33 ; rol byte ptr [rbp + 0x3b], 0xd9 ; seta al ; ret
0x0000020000013cf2 : mov al, 0x3a ; add bh, bh ; ret
0x0000020000683e58 : mov al, 0x3b ; ret 0x6876
0x00000200001e43fc : mov al, 0x41 ; mov eax, eax ; ret
0x0000020000212515 : mov al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000035cea : mov al, 0x48 ; lea ecx, dword ptr [rsp + 0x50] ; call 0x20000091f48
0x00000200006aa3d4 : mov al, 0x53 ; ret 0xb9ff
0x00000200001fbb5c : mov al, 0x54 ; add eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000425c4c : mov al, 0x65 ; ret 0xf7ff
0x00000200005281cc : mov al, 0x6f ; ret 0x4cff
0x00000200003e0b6c : mov al, 0x72 ; int1 ; inc ebx ; add rax, 0x20 ; ret
0x00000200001e2f64 : mov al, 0x7c ; verw ax ; ret
0x00000200004bcfde : mov al, 0x8b ; ret 0xc883
0x0000020000038893 : mov al, 0x8b ; ret 0xd8f7
0x0000020000122f7f : mov al, 0x8d ; outsd dx, dword ptr [rsi] ; add bh, bh ; ret
0x000002000002484f : mov al, 0x97 ; adc eax, dword ptr [rax] ; ret
0x0000020000184f0e : mov al, 0xa2 ; lock dec dword ptr [rax - 0x75] ; ret 0xc148
0x00000200004b7d0c : mov al, 0xa6 ; sar bh, 0x8b ; ret
0x00000200005a5df6 : mov al, 0xa9 ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x00000200005f665c : mov al, 0xa9 ; ret
0x00000200004b7a0c : mov al, 0xa9 ; sar bh, 0x8b ; ret
0x000002000048139c : mov al, 0xae ; ret
0x00000200006ab9ac : mov al, 0xb6 ; ret
0x000002000062af43 : mov al, 0xb8 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0x00000200006168fc : mov al, 0xc ; ret 0x48ff
0x0000020000414e86 : mov al, 0xc2 ; inc dword ptr [rbp - 0x7c] ; test byte ptr [rdi], 0x84 ; ret 0x16d0
0x000002000052c94c : mov al, 0xc2 ; jmp 0x2000052c950
0x00000200007441e8 : mov al, 0xc3 ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x000002000056b6db : mov al, 0xce ; dec dword ptr [rax - 0x75] ; ret 0x48f0
0x00000200006a8a8a : mov al, 0xd5 ; ret
0x000002000039eeda : mov al, 0xd6 ; inc dword ptr [rbx + rcx*4 + 0xd] ; pushfq ; ret
0x00000200005136ec : mov al, 0xd6 ; ret 0x48ff
0x0000020000510ecc : mov al, 0xe2 ; ret
0x000002000051100c : mov al, 0xe4 ; ret
0x00000200006db630 : mov al, 0xe5 ; ret
0x0000020000504c81 : mov al, 0xe8 ; jmp 0x20066500f86
0x00000200005e6917 : mov al, 0xe8 ; ret
0x000002000006f1e6 : mov al, 0xf ; add rsp, 0x28 ; ret
0x000002000040fbc0 : mov al, 0xf7 ; ret
0x00000200001a34f7 : mov al, 0xf8 ; jmp qword ptr [rcx]
0x000002000077cdf7 : mov al, 0xfe ; dec dword ptr [rax - 9] ; ret
0x0000020000512395 : mov al, 0xff ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005e2b23 : mov al, 0xff ; add rsp, 0x28 ; ret
0x000002000063218b : mov al, 0xff ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000630612 : mov al, 0xff ; add rsp, 0x48 ; ret
0x00000200005dd2e2 : mov al, 0xff ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005148d : mov al, 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000477ddd : mov al, 1 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000c31f0 : mov al, 1 ; add rsp, 0x18 ; ret
0x00000200000d5fe8 : mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000405ef7 : mov al, 1 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000000ad5d : mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000079be1 : mov al, 1 ; add rsp, 0x38 ; ret
0x0000020000087d24 : mov al, 1 ; add rsp, 0x40 ; pop rbx ; ret
0x000002000076d943 : mov al, 1 ; add rsp, 0x60 ; pop rbp ; ret
0x00000200000879a4 : mov al, 1 ; add rsp, 0x68 ; pop r13 ; pop rbp ; ret
0x0000020000664979 : mov al, 1 ; add rsp, 0x68 ; ret
0x00000200004b060c : mov al, 1 ; add rsp, 8 ; ret
0x000002000060427f : mov al, 1 ; call 0x200004b0564
0x0000020000125240 : mov al, 1 ; jmp 0x2000012520a
0x00000200001a6765 : mov al, 1 ; mov al, r8b ; ret
0x00000200000f185a : mov al, 1 ; mov byte ptr [r8 + 0x10], 0 ; ret
0x00000200000f1e9b : mov al, 1 ; mov byte ptr [r8 + 0x10], 1 ; ret
0x00000200000078d1 : mov al, 1 ; mov qword ptr [r10], rcx ; add rsp, 0x28 ; ret
0x000002000002c1e7 : mov al, 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000cdce6 : mov al, 1 ; mov rcx, r9 ; call 0x20000069fb7
0x000002000018410d : mov al, 1 ; movzx edx, r14b ; call rax
0x0000020000030ae8 : mov al, 1 ; pop rdi ; ret
0x000002000001884d : mov al, 1 ; ret
0x00000200000f0317 : mov al, 2 ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200003ae4c6 : mov al, 2 ; ret
0x0000020000038e07 : mov al, 3 ; add byte ptr [rax], al ; ret
0x000002000008896a : mov al, 4 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200003ae4c3 : mov al, 4 ; ret
0x000002000005d08f : mov al, 6 ; add byte ptr [rax], al ; ret
0x00000200003cbc50 : mov al, 6 ; ret
0x00000200000681e4 : mov al, 7 ; add byte ptr [rax], al ; ret
0x00000200003ae4c0 : mov al, 8 ; ret
0x00000200003be29b : mov al, ah ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0xdd74
0x000002000053d641 : mov al, al ; add rsp, 0x28 ; ret
0x00000200000f1e6d : mov al, al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001b9d80 : mov al, al ; mov al, r8b ; ret
0x000002000015d11b : mov al, al ; mov rcx, rsi ; call 0x2000020937b
0x000002000003b4a7 : mov al, al ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000491b55 : mov al, al ; push rsi ; ret
0x000002000002e76e : mov al, al ; ret
0x000002000057aad0 : mov al, al ; ret 0x8bff
0x000002000001cc14 : mov al, al ; ret 1
0x000002000041405a : mov al, bh ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004234c4 : mov al, bh ; add rsp, 0x30 ; pop rdi ; ret
0x000002000060f34a : mov al, bh ; add rsp, 0x50 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200005b76ac : mov al, bh ; sldt word ptr [rax] ; add al, 0x8b ; ret 0x1ba
0x000002000001da61 : mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000392ec : mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001fb72c : mov al, bl ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000130b59 : mov al, bl ; add rsp, 0x50 ; pop rbx ; ret
0x000002000075c657 : mov al, bl ; add rsp, 0x60 ; pop rbx ; ret
0x00000200004cc779 : mov al, bl ; call 0x200000ef58d
0x0000020000427ffd : mov al, bl ; call r12
0x00000200003cb899 : mov al, bl ; mov bl, byte ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000057d760 : mov al, bl ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200001ef22e : mov al, bl ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000216a26 : mov al, bl ; ret
0x0000020000117620 : mov al, byte ptr [r8 + 0xf0] ; ret
0x000002000054629b : mov al, byte ptr [r8 + rax] ; ret
0x0000020000649d57 : mov al, byte ptr [r8] ; cmp al, r9b ; jae 0x20000649d2c ; ret
0x00000200001334a3 : mov al, byte ptr [r8] ; test al, al ; jne 0x2000013347f ; xor eax, eax ; ret
0x00000200005462b6 : mov al, byte ptr [r9 + rax - 0x80] ; ret
0x00000200000389da : mov al, byte ptr [rax + 0x22] ; and al, 1 ; ret
0x00000200000421fd : mov al, byte ptr [rax + 0x232] ; ret
0x0000020000117621 : mov al, byte ptr [rax + 0xf0] ; ret
0x00000200000ebb46 : mov al, byte ptr [rax + 7] ; add byte ptr [rax], al ; ret
0x000002000054629c : mov al, byte ptr [rax + rax] ; ret
0x0000020000407150 : mov al, byte ptr [rax + rcx + 8] ; shr al, 3 ; and al, 1 ; ret
0x0000020000074f1a : mov al, byte ptr [rax + rcx*2 + 1] ; ret
0x0000020000074f1f : mov al, byte ptr [rax + rcx*2] ; ret
0x0000020000117899 : mov al, byte ptr [rax + rcx] ; ret
0x000002000056447a : mov al, byte ptr [rax + rdx + 0x69e500] ; ret
0x00000200003cbc3a : mov al, byte ptr [rax + rdx + 0x6f8d28] ; ret
0x000002000019d1e2 : mov al, byte ptr [rax - 8] ; dec dword ptr [rbp + rcx*4 + 5] ; ret
0x00000200000a7b67 : mov al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7b], r9b ; ret
0x0000020000649d58 : mov al, byte ptr [rax] ; cmp al, r9b ; jae 0x20000649d2b ; ret
0x00000200001334a4 : mov al, byte ptr [rax] ; test al, al ; jne 0x2000013347e ; xor eax, eax ; ret
0x0000020000514caa : mov al, byte ptr [rbx + 0x1e] ; add al, ch ; pop rbp ; ret
0x000002000006a39c : mov al, byte ptr [rcx + 0x170] ; and al, 1 ; ret
0x00000200000342af : mov al, byte ptr [rcx + 0x1b] ; and al, 0xfd ; mov byte ptr [rcx + 0x1b], al ; ret
0x000002000004f6cb : mov al, byte ptr [rcx + 0x30] ; ret
0x0000020000053c88 : mov al, byte ptr [rcx + 0x42] ; test al, 0x40 ; jne 0x20000053c9b ; xor al, al ; ret
0x00000200001f0ac4 : mov al, byte ptr [rcx + 0x45f] ; ret
0x000002000005d08d : mov al, byte ptr [rcx + 0x6b0] ; ret
0x000002000003fd0c : mov al, byte ptr [rcx + 0x6b2] ; ret
0x00000200005462b7 : mov al, byte ptr [rcx + rax - 0x80] ; ret
0x00000200005f1edc : mov al, byte ptr [rcx - 0x18] ; shr al, 3 ; and al, 1 ; ret
0x0000020000403bf8 : mov al, byte ptr [rcx - 0x18] ; shr al, 4 ; and al, 1 ; ret
0x000002000014f7dc : mov al, byte ptr [rcx] ; ret
0x00000200005a9a12 : mov al, byte ptr [rdx - 0x48f0000a] ; ret
0x000002000014f640 : mov al, byte ptr [rip + 0x1b3692] ; ret
0x000002000014f670 : mov al, byte ptr [rip + 0x22ebea] ; ret
0x000002000041e530 : mov al, byte ptr [rip + 0x2dab05] ; ret
0x000002000001aee4 : mov al, byte ptr [rip + 0x36321e] ; ret
0x0000020000419eb7 : mov al, byte ptr [rip - 0x3b7cb800] ; ret
0x00000200003a3444 : mov al, byte ptr [rip - 0xa0610] ; ret
0x00000200001e721b : mov al, byte ptr [rsp + 0x28] ; add rsp, 0x30 ; pop rbx ; ret
0x000002000007464a : mov al, byte ptr [rsp + 0x32] ; add rsp, 0x28 ; ret
0x000002000052aa44 : mov al, ch ; jbe 0x2000052aa96 ; ret 0x44ff
0x000002000050af2e : mov al, ch ; lodsb al, byte ptr [rsi] ; push rsp ; ret
0x0000020000046a4f : mov al, cl ; add rsp, 0x28 ; ret
0x000002000020df10 : mov al, cl ; add rsp, 0x38 ; ret
0x00000200001e72d4 : mov al, cl ; add rsp, 0x48 ; ret
0x00000200001f058b : mov al, cl ; mov al, r8b ; ret
0x0000020000037298 : mov al, cl ; ret
0x0000020000144646 : mov al, dh ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000605652 : mov al, dh ; ret 0x48ff
0x0000020000414059 : mov al, dil ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004234c3 : mov al, dil ; add rsp, 0x30 ; pop rdi ; ret
0x000002000020ca6f : mov al, dl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000062df9 : mov al, dl ; add rsp, 0x28 ; ret
0x0000020000785750 : mov al, dl ; add rsp, 0x38 ; ret
0x0000020000469099 : mov al, dl ; add rsp, 0x58 ; ret
0x00000200001b4473 : mov al, dl ; jmp 0x200001b44bf
0x000002000050070d : mov al, dl ; jmp 0x200005006bc
0x000002000014f7e0 : mov al, dl ; movzx edx, cx ; out dx, al ; ret
0x00000200000407fe : mov al, dl ; ret
0x000002000020ca6e : mov al, r10b ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000062df8 : mov al, r10b ; add rsp, 0x28 ; ret
0x0000020000469098 : mov al, r10b ; add rsp, 0x58 ; ret
0x00000200000f1d3c : mov al, r10b ; ret
0x000002000001da60 : mov al, r11b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ef22d : mov al, r11b ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000216a25 : mov al, r11b ; ret
0x000002000053d640 : mov al, r8b ; add rsp, 0x28 ; ret
0x00000200000f1e6c : mov al, r8b ; add rsp, 0x30 ; pop rbx ; ret
0x000002000003b4a6 : mov al, r8b ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000002e76d : mov al, r8b ; ret
0x0000020000046a4e : mov al, r9b ; add rsp, 0x28 ; ret
0x000002000020df0f : mov al, r9b ; add rsp, 0x38 ; ret
0x00000200001e750a : mov al, r9b ; add rsp, 0x48 ; ret
0x00000200000eb510 : mov al, r9b ; ret
0x0000020000144645 : mov al, sil ; add rsp, 0x30 ; pop rsi ; ret
0x000002000067a579 : mov bh, 0 ; add byte ptr [rax], al ; mov rcx, r14 ; call rax
0x0000020000135904 : mov bh, 0 ; test ax, ax ; jne 0x200001358d6 ; xor eax, eax ; ret
0x000002000048bfb8 : mov bh, 0x12 ; add dh, dh ; ret
0x00000200001b2d55 : mov bh, 0x12 ; or byte ptr [rax], al ; add rsp, 0x30 ; pop rsi ; ret
0x000002000065d39e : mov bh, 0x14 ; adc dword ptr [rbx], ebp ; ret 0x875
0x00000200004b05bf : mov bh, 0x14 ; add dword ptr [rbp + 0x3b], eax ; ret 0x1b75
0x0000020000636187 : mov bh, 0x14 ; add dword ptr [rbx], ebp ; ret 0x875
0x00000200003f4349 : mov bh, 0x14 ; or byte ptr [rbx], bh ; ret 0x1c75
0x000002000065283d : mov bh, 0x14 ; or dword ptr [rbx], edi ; ret 0x1e74
0x000002000049cd87 : mov bh, 0x14 ; push rax ; add dx, cx ; movzx eax, dx ; ret
0x000002000012b202 : mov bh, 0x14 ; ret 0x8b49
0x000002000074c444 : mov bh, 0x15 ; mov dh, 0x1b ; ret
0x0000020000746256 : mov bh, 0x15 ; movsb byte ptr [rdi], byte ptr [rsi] ; jge 0x20000746227 ; inc dword ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b45
0x0000020000490d05 : mov bh, 0x16 ; ret
0x00000200005a260d : mov bh, 0x20 ; ret 0x8bff
0x00000200000d95c9 : mov bh, 0x23 ; and al, byte ptr [rax] ; setne al ; ret
0x0000020000758fa3 : mov bh, 0x35 ; or eax, 0x8148fffa ; ret
0x000002000004fa26 : mov bh, 0x3c ; ret 0x8566
0x0000020000086c79 : mov bh, 0x40 ; adc byte ptr [rbx], bh ; ret 0x820f
0x00000200007683df : mov bh, 0x40 ; adc byte ptr [rsi - 0x77], ah ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000200003a5c48 : mov bh, 0x40 ; add al, byte ptr [rcx + 0x3b] ; ret
0x00000200003f8265 : mov bh, 0x40 ; or bl, al ; mov eax, 0x8664 ; ret
0x00000200007683a5 : mov bh, 0x40 ; or byte ptr [rsi - 0x77], ah ; or byte ptr [r8 - 0x7d], cl ; ret
0x000002000050a035 : mov bh, 0x40 ; sub byte ptr [rbx], al ; ret 0x518d
0x00000200003fd16a : mov bh, 0x41 ; add ah, byte ptr [rsi + 0x39] ; add cl, byte ptr [rdi] ; xchg dword ptr [rbx], edi ; ret 0x17
0x00000200000cc7c9 : mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret
0x00000200004bdfee : mov bh, 0x41 ; add al, byte ptr [rcx - 1] ; ret 0x348
0x00000200002168ff : mov bh, 0x41 ; sub bl, al ; movzx eax, word ptr [rcx] ; ret
0x00000200000866f6 : mov bh, 0x42 ; add ah, byte ptr [rsi + 0x41] ; mov dword ptr [rdx + 2], eax ; ret
0x00000200003d58ef : mov bh, 0x42 ; add al, 0x66 ; mov dword ptr [rcx + 6], eax ; xor eax, eax ; ret
0x00000200004be12e : mov bh, 0x42 ; add al, byte ptr [rcx - 1] ; ret
0x0000020000053a3a : mov bh, 0x42 ; add bh, bh ; ret 0x349
0x00000200003ec859 : mov bh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200000a5808 : mov bh, 0x42 ; add cl, byte ptr [rax - 0x7d] ; ret 0xf10
0x00000200005d6175 : mov bh, 0x42 ; sbb byte ptr [rax - 0x7d], cl ; ret 0xe81a
0x00000200005fa04d : mov bh, 0x43 ; adc byte ptr [rbx], ch ; ret 0x348
0x00000200006503b2 : mov bh, 0x43 ; add bh, bh ; ret 0x8b4c
0x00000200005c3ebf : mov bh, 0x43 ; add cl, byte ptr [rax + 3] ; ret
0x000002000004a8b8 : mov bh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000020000462459 : mov bh, 0x43 ; add cl, byte ptr [rcx - 0x7d] ; ret
0x00000200000ec1e1 : mov bh, 0x43 ; or byte ptr [rax - 0x4a], al ; add dword ptr [rax - 0x75], ecx ; ret 0x4808
0x0000020000211c76 : mov bh, 0x43 ; or cl, byte ptr [rbp + 0x3c8dc00c] ; int 0x80
0x0000020000465660 : mov bh, 0x44 ; and al, 0x40 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000052cafd : mov bh, 0x44 ; lea eax, dword ptr [rdx + 0x58] ; call 0x2000014f4c8
0x00000200001621b6 : mov bh, 0x44 ; ret
0x00000200001faa05 : mov bh, 0x44 ; ret 0x410c
0x00000200003a41c0 : mov bh, 0x44 ; ret 0x6604
0x00000200001e36f9 : mov bh, 0x44 ; ret 0x8308
0x00000200001f4f0e : mov bh, 0x44 ; ret 0xeb0c
0x000002000069d4e6 : mov bh, 0x44 ; sbb byte ptr [rbx + rdi], al ; ret
0x000002000068aaef : mov bh, 0x44 ; std ; add byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x00000200004c7339 : mov bh, 0x45 ; add bh, bh ; ret
0x000002000059f39d : mov bh, 0x45 ; add byte ptr [rcx + 3], al ; ret
0x00000200005d20a6 : mov bh, 0x45 ; and ah, byte ptr [rsi + 0x23] ; ret 0xc166
0x00000200005d5fd9 : mov bh, 0x45 ; call qword ptr [rax]
0x000002000068a1da : mov bh, 0x46 ; add ah, byte ptr [rsi + 0x3b] ; ret
0x00000200005de10c : mov bh, 0x46 ; add bh, bh ; ret
0x00000200000cb075 : mov bh, 0x46 ; add bh, bh ; ret 0x348
0x00000200006510b4 : mov bh, 0x46 ; add bh, bh ; ret 0x8b44
0x00000200003efdff : mov bh, 0x46 ; add cl, byte ptr [rax + 0x2b] ; ret
0x00000200004e7548 : mov bh, 0x46 ; add cl, byte ptr [rbp + 0x3b662455] ; ret 0x6e72
0x00000200000c9a1f : mov bh, 0x47 ; add bh, bh ; ret 0x34c
0x0000020000172e4a : mov bh, 0x47 ; add ch, byte ptr [rbx] ; ret
0x000002000010dfc8 : mov bh, 0x47 ; sbb bh, bh ; ret 0xd03b
0x00000200000c8d0d : mov bh, 0x48 ; add al, byte ptr [rcx - 1] ; ret
0x00000200004bb365 : mov bh, 0x48 ; add bh, bh ; ret 0x348
0x00000200005caa14 : mov bh, 0x48 ; lea ecx, dword ptr [rbp - 0x51] ; call 0x200001ec844
0x00000200004bd8e0 : mov bh, 0x49 ; add al, 0x44 ; cmp eax, ecx ; jb 0x200004bd887 ; ret
0x0000020000652bf9 : mov bh, 0x4a ; add al, byte ptr [rcx - 0x77] ; or dword ptr [rcx - 0x75], eax ; ret
0x00000200005a0d4c : mov bh, 0x4a ; add cl, byte ptr [rbp - 0x75] ; ret 0xc18b
0x00000200004fab74 : mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x00000200001e3717 : mov bh, 0x4c ; ret 0x4a08
0x00000200006335de : mov bh, 0x4e ; add ah, byte ptr [rsi - 9] ; fadd dword ptr [rcx - 0x75] ; ret 0xc91a
0x00000200005a0db9 : mov bh, 0x50 ; add dh, dh ; ret 0x7504
0x000002000040aaa8 : mov bh, 0x51 ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4909
0x00000200001268fc : mov bh, 0x51 ; add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x0000020000123a26 : mov bh, 0x51 ; add dh, dh ; ret 0x7501
0x000002000019f73e : mov bh, 0x51 ; add dh, dh ; ret 0xf10
0x00000200001f1078 : mov bh, 0x53 ; add al, byte ptr [rcx - 0xa] ; ret 0x7501
0x00000200000edb38 : mov bh, 0x53 ; add al, byte ptr [rcx - 0xa] ; ret 0xf01
0x00000200004fab70 : mov bh, 0x53 ; add cl, byte ptr [rdi] ; mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x00000200000344d9 : mov bh, 0x53 ; and dh, dh ; ret 0xf01
0x000002000060244b : mov bh, 0x55 ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000020000672058 : mov bh, 0x55 ; loopne 0x20000672063 ; ret 0xc13b
0x00000200005320e6 : mov bh, 0x56 ; add bh, bh ; ret
0x000002000059e3b0 : mov bh, 0x56 ; add dh, dh ; ret 0xf10
0x00000200000da5bd : mov bh, 0x56 ; and byte ptr [rax - 0x75], cl ; ret
0x0000020000681932 : mov bh, 0x56 ; sub byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x00000200006818b3 : mov bh, 0x56 ; xor byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x00000200004409a2 : mov bh, 0x57 ; add al, byte ptr [rcx - 0x7d] ; ret 0x4503
0x00000200001bd8c5 : mov bh, 0x58 ; idiv edi ; add rsp, 0x68 ; ret
0x000002000002f67e : mov bh, 0x5a ; or byte ptr [rax - 0x7d], cl ; ret 0xf21c
0x000002000004fa2f : mov bh, 0x5c ; ret 0x6602
0x00000200006ce343 : mov bh, 0x5f ; or dh, dh ; ret
0x00000200004c4d79 : mov bh, 0x6d ; ret 0x4cff
0x00000200003f8db9 : mov bh, 0x6e ; ret
0x0000020000599beb : mov bh, 0x70 ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x8b44
0x0000020000135a85 : mov bh, 0x73 ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000200003a6478 : mov bh, 0x81 ; nop ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x0000020000454b11 : mov bh, 0x84 ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x000002000010cd2f : mov bh, 0x8b ; ret 0x8b44
0x000002000069d119 : mov bh, 0x8c ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret 0xf48
0x000002000013252d : mov bh, 0x8e ; sbb al, 0 ; mov qword ptr [rdx], rax ; ret
0x00000200003a6446 : mov bh, 0x9b ; xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; ret 0xb74
0x00000200004b061a : mov bh, 0xa ; add byte ptr [rcx - 0x7d], al ; ret 0xebe0
0x00000200001357c7 : mov bh, 0xa ; sub eax, ecx ; ret
0x00000200006b40e1 : mov bh, 0xa6 ; ret 0xff
0x00000200004a4cd5 : mov bh, 0xae ; ret 0x41ff
0x0000020000688254 : mov bh, 0xb ; call 0x2000013455c
0x00000200006d71cd : mov bh, 0xb8 ; ret 0xe8ff
0x0000020000407d15 : mov bh, 0xbb ; or al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x00000200003ed801 : mov bh, 0xc ; pop rdx ; imul eax, ecx ; add eax, r9d ; ret
0x00000200003ed305 : mov bh, 0xc ; pop rdx ; imul eax, ecx ; xor eax, r9d ; ret
0x00000200003eda41 : mov bh, 0xc ; push rcx ; imul eax, ecx ; sub eax, r8d ; ret
0x00000200003edcea : mov bh, 0xc ; sub eax, dword ptr [rdx + r8*4] ; sub eax, ecx ; ret
0x000002000062c131 : mov bh, 0xc0 ; add ebx, eax ; jmp 0x2000062c143
0x000002000020b5df : mov bh, 0xc0 ; cmp eax, 0x50 ; jmp 0x2000020b5af
0x000002000013c17e : mov bh, 0xc0 ; ret
0x000002000004f800 : mov bh, 0xc0 ; shr eax, 1 ; bsr edx, eax ; inc dl ; jmp 0x2000004f7db
0x0000020000133faf : mov bh, 0xc0 ; sub eax, ecx ; ret
0x00000200006429df : mov bh, 0xc1 ; add eax, 0x20 ; ret
0x000002000013cd6a : mov bh, 0xc1 ; add rsp, 0x38 ; ret
0x000002000049cd47 : mov bh, 0xc1 ; ret
0x000002000049cd51 : mov bh, 0xc1 ; sub eax, 0x20 ; ret
0x0000020000137a9d : mov bh, 0xc1 ; sub eax, edx ; ret
0x00000200004641d9 : mov bh, 0xc2 ; jmp 0x2000046417e
0x000002000053f141 : mov bh, 0xc2 ; jmp 0x2000053f121
0x000002000003105a : mov bh, 0xc2 ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000016676 : mov bh, 0xc2 ; or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x000002000049cd8e : mov bh, 0xc2 ; ret
0x0000020000215e47 : mov bh, 0xc2 ; sub eax, ecx ; ret
0x0000020000425449 : mov bh, 0xc2 ; test eax, eax ; js 0x2000042545a ; xor eax, eax ; ret
0x00000200001355c8 : mov bh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000053226f : mov bh, 0xc3 ; call 0x2000014f189
0x0000020000527d34 : mov bh, 0xc3 ; shl r8, 4 ; call 0x2000014f189
0x000002000001abb6 : mov bh, 0xc7 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005986e8 : mov bh, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001ac5e5 : mov bh, 0xc8 ; lea rdx, qword ptr [rsp + 0x48] ; call r9
0x00000200000b3f59 : mov bh, 0xc9 ; mov rax, qword ptr [rax + rcx*8] ; ret
0x000002000057183a : mov bh, 0xc9 ; movzx eax, byte ptr [rcx + rax] ; ret
0x0000020000133fab : mov bh, 0xc9 ; movzx eax, r8w ; sub eax, ecx ; ret
0x000002000064979c : mov bh, 0xc9 ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200001340c1 : mov bh, 0xc9 ; sub r9d, eax ; mov eax, r9d ; ret
0x00000200001362d9 : mov bh, 0xca ; and eax, ecx ; ret
0x000002000067da5b : mov bh, 0xcb ; call rax
0x0000020000215e43 : mov bh, 0xcb ; movzx eax, r10w ; sub eax, ecx ; ret
0x000002000048e096 : mov bh, 0xcc ; or dword ptr [rcx - 0x18], 8 ; ret
0x000002000075ed05 : mov bh, 0xcf ; lea r8, qword ptr [rsp + 0x40] ; call rax
0x000002000074ac81 : mov bh, 0xd ; jns 0x2000074acbc ; ret
0x000002000014f7d5 : mov bh, 0xd1 ; in al, dx ; ret
0x00000200000b27e2 : mov bh, 0xd1 ; mov rax, qword ptr [rax + rdx*8] ; ret
0x000002000014f7e3 : mov bh, 0xd1 ; out dx, al ; ret
0x0000020000519dc3 : mov bh, 0xdb ; push qword ptr [rbx] ; shr al, cl ; ret
0x00000200000516b1 : mov bh, 0xdb ; xor al, byte ptr [rax] ; ret
0x00000200005e730d : mov bh, 0xe8 ; lodsd eax, dword ptr [rsi] ; ret
0x000002000051a9de : mov bh, 0xe8 ; pushfq ; pop rcx ; ret 0xebff
0x00000200006115d8 : mov bh, 0xe8 ; ret 0xa61a
0x0000020000685ab4 : mov bh, 0xe8 ; ret 0xffba
0x000002000017b735 : mov bh, 0xf ; sbb byte ptr [rax], al ; mov rdx, rdi ; call 0x200000979d9
0x00000200001ab416 : mov bh, 0xf6 ; dec dword ptr [rax - 0x75] ; ret 0x4bf0
0x00000200006b74f9 : mov bh, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006b5063 : mov bh, 0xff ; add rsp, 0x28 ; ret
0x000002000063c031 : mov bh, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004ef6f7 : mov bh, 0xff ; jmp 0x200004ef6c1
0x000002000055740c : mov bh, 0xff ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200005572c0 : mov bh, 0xff ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x00000200005579df : mov bh, 0xff ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x00000200001c9aee : mov bh, 0xff ; ret
0x0000020000768184 : mov bh, 0xff ; xor dh, byte ptr [rdx] ; ret
0x00000200001a86c7 : mov bh, 1 ; add bh, bh ; ret
0x000002000013b945 : mov bh, 1 ; mov r14d, r10d ; mov r8d, edx ; jmp 0x2000013b973
0x00000200001357c4 : mov bh, 1 ; movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x0000020000216904 : mov bh, 1 ; ret
0x0000020000135ff7 : mov bh, 1 ; test ax, ax ; jne 0x20000135fdc ; xor eax, eax ; ret
0x00000200004e11ab : mov bh, 2 ; mov word ptr [r8], ax ; xor eax, eax ; ret
0x00000200001344d6 : mov bh, 4 ; and rax, 0x157 ; ret
0x0000020000134536 : mov bh, 4 ; and rax, 0x80 ; ret
0x0000020000134516 : mov bh, 4 ; and rax, 1 ; ret
0x00000200001344b6 : mov bh, 4 ; and rax, 2 ; ret
0x0000020000134496 : mov bh, 4 ; and rax, 4 ; ret
0x00000200001344f6 : mov bh, 4 ; and rax, 8 ; ret
0x00000200003eddf7 : mov bh, 4 ; imul eax, r10d ; ret
0x00000200003ed3d2 : mov bh, 4 ; imul eax, r9d ; ret
0x00000200001362d5 : mov bh, 4 ; movzx rcx, dx ; and eax, ecx ; ret
0x0000020000031e03 : mov bh, 4 ; ret
0x000002000020348a : mov bh, 4 ; sbb byte ptr [rsi - 0x77], ah ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000115e95 : mov bh, 5 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000074c5d8 : mov bh, 5 ; and bl, byte ptr [rdx] ; ret
0x00000200004e8bc3 : mov bh, 5 ; fisttp dword ptr [rdi] ; and dword ptr [rax], eax ; mov word ptr [rdx], ax ; ret
0x000002000074707d : mov bh, 5 ; jge 0x200007470f4 ; ret
0x0000020000740d47 : mov bh, 5 ; mov bl, 0xd2 ; ret
0x000002000015ac5e : mov bh, 5 ; pushfq ; xor esp, dword ptr [rdx] ; add bh, bh ; ret
0x00000200001fc619 : mov bh, 5 ; ret
0x000002000074c473 : mov bh, 5 ; xchg dword ptr [rbx], ebx ; ret
0x00000200003e33ca : mov bh, 7 ; cmp rcx, rax ; jne 0x200003e33e3 ; mov eax, edx ; jmp 0x200003e3396
0x000002000010f9e8 : mov bh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x0000020000018e5c : mov bh, bh ; ret
0x000002000075d4c7 : mov bh, bl ; ret
0x000002000074ba0d : mov bh, byte ptr [rcx] ; ret
0x000002000050397a : mov bh, byte ptr [rdx + 0x3b4cffe7] ; ret 0x940f
0x0000020000219182 : mov bh, byte ptr [rsi + 1] ; add byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200000efc93 : mov bh, dh ; dec dword ptr [rax - 0x75] ; ret
0x00000200005d778f : mov bh, dh ; jnp 0x200005d7790 ; dec dword ptr [rax - 0x75] ; ret
0x00000200005039f4 : mov bh, dh ; ret 0x48ff
0x000002000047fed2 : mov bh, dl ; ret
0x0000020000039b75 : mov bl, 0x10 ; ret
0x0000020000178ea7 : mov bl, 0x12 ; out dx, al ; dec dword ptr [rax - 0x75] ; ret 0x2b48
0x0000020000162f9f : mov bl, 0x14 ; in eax, dx ; dec dword ptr [rbp - 0x75] ; or byte ptr [rbx], al ; ret
0x00000200003e84cd : mov bl, 0x18 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000067fee9 : mov bl, 0x1d ; jmp 0x1ffc3f38ff5
0x000002000074b88d : mov bl, 0x27 ; ret
0x0000020000667721 : mov bl, 0x2c ; fdiv st(7), st(0) ; add rsp, 0x38 ; ret
0x00000200006322f5 : mov bl, 0x2c ; mov ebx, 0x8b4dccff ; ret 0x8348
0x000002000075ec89 : mov bl, 0x37 ; ret
0x00000200000ea3f1 : mov bl, 0x50 ; sub dword ptr [rax], eax ; call rax
0x00000200006b065d : mov bl, 0x7b ; ret 0xff
0x0000020000736ab6 : mov bl, 0x7c ; add eax, 0x8b480000 ; ret 0x8948
0x000002000042ee4d : mov bl, 0x7e ; ret
0x00000200004fd0f5 : mov bl, 0x87 ; ret
0x00000200001e2bd4 : mov bl, 0x89 ; add dword ptr [rax - 0x75], ecx ; ret
0x00000200005079c9 : mov bl, 0x89 ; ret
0x000002000008718e : mov bl, 0x8b ; ret
0x000002000043bb21 : mov bl, 0x8b ; ret 0x8d48
0x0000020000148817 : mov bl, 0x8c ; ret 0x118
0x00000200004b8d09 : mov bl, 0x96 ; sar bh, 0x8b ; ret
0x00000200003e5451 : mov bl, 0x9f ; ret
0x00000200006b4739 : mov bl, 0xa0 ; ret 0xf0ff
0x00000200006341ac : mov bl, 0xb1 ; dec dword ptr [rcx - 0x74b7ef85] ; ret
0x00000200007867bd : mov bl, 0xb4 ; call qword ptr [rcx]
0x00000200001c8065 : mov bl, 0xb8 ; add dword ptr [rax], eax ; add bl, ch ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x00000200004ec0e9 : mov bl, 0xbd ; ret 0x48ff
0x00000200004f4fa1 : mov bl, 0xc4 ; dec dword ptr [rax - 0x75] ; ret
0x00000200005c5cd4 : mov bl, 0xc6 ; dec dword ptr [rbx - 0x74bbafab] ; ret
0x00000200000defe8 : mov bl, 0xc8 ; mov qword ptr [r8 + rdx*8 + 8], rax ; ret
0x000002000062127f : mov bl, 0xcd ; dec dword ptr [rcx - 0x3f] ; call 0x1ffc28d5e9b
0x0000020000031dd8 : mov bl, 0xd0 ; mov qword ptr [rcx], rax ; ret
0x0000020000020191 : mov bl, 0xd1 ; adc eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000740d49 : mov bl, 0xd2 ; ret
0x0000020000633ec3 : mov bl, 0xd4 ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0x000002000058fa05 : mov bl, 0xd8 ; ret 0x45ff
0x00000200004fc3a1 : mov bl, 0xdd ; inc dword ptr [rcx - 0x75] ; ror dword ptr [rax - 0x75], 0x14 ; ret 0x2b48
0x0000020000484289 : mov bl, 0xe5 ; ret
0x0000020000598464 : mov bl, 0xe8 ; inc dword ptr [rbx - 0x7cb70740] ; ret
0x0000020000177691 : mov bl, 0xed ; dec dword ptr [rcx - 0x7d] ; ret
0x000002000017f219 : mov bl, 0xef ; inc dword ptr [rbp - 0x75] ; ret 0x5e9
0x000002000018fb44 : mov bl, 0xf2 ; push rsi ; ret
0x0000020000121aad : mov bl, 0xf3 ; dec dword ptr [rax - 0x75] ; ret
0x000002000018d39b : mov bl, 0xf6 ; int1 ; push rsi ; ret 0x741e
0x00000200001b6107 : mov bl, 0xf7 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000516f10 : mov bl, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006c8763 : mov bl, 0xff ; add rsp, 0x28 ; ret
0x00000200006dc932 : mov bl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005384eb : mov bl, 0xff ; add rsp, 0x58 ; ret
0x0000020000602253 : mov bl, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x00000200006017ec : mov bl, 0xff ; add rsp, 0x68 ; ret
0x00000200005f5813 : mov bl, 0xff ; add rsp, 0xa8 ; ret
0x00000200005f5cfa : mov bl, 0xff ; add rsp, 0xd8 ; ret
0x00000200006107ee : mov bl, 0xff ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004d11c9 : mov bl, 1 ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x0000020000088df8 : mov bl, 1 ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000130b57 : mov bl, 1 ; mov al, bl ; add rsp, 0x50 ; pop rbx ; ret
0x00000200000402ff : mov bl, 1 ; ret
0x00000200001009a2 : mov bl, 6 ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x00000200005030ce : mov bl, 8 ; add al, ch ; or ch, bh ; ret
0x0000020000066c69 : mov bl, al ; call rsi
0x00000200006c0ea4 : mov bl, al ; mov eax, 0xc0000002 ; ret
0x00000200006cd113 : mov bl, al ; mov rdi, rcx ; call qword ptr [rip + 0x3c20a]
0x000002000075d4d7 : mov bl, bl ; ret
0x00000200003cb89b : mov bl, byte ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003cb94f : mov bl, byte ptr [rcx] ; add dh, dh ; ret
0x000002000017ebf5 : mov bl, byte ptr [rdx - 0x74b70011] ; ret
0x00000200001bf9ce : mov bl, cl ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006102e2 : mov bl, cl ; ret 0x48ff
0x00000200006cd112 : mov bl, r8b ; mov rdi, rcx ; call qword ptr [rip + 0x3c20a]
0x00000200001d75e1 : mov bpl, 0xe8 ; pop rax ; ret
0x00000200006c27ca : mov bx, 1 ; xor eax, eax ; ret
0x000002000052b0bc : mov byte ptr [r10 + 0x10], r8b ; test dl, dl ; jne 0x2000052b0cd ; ret
0x000002000052b0eb : mov byte ptr [r10 + 0x30], dl ; ret
0x000002000050337e : mov byte ptr [r10 + rcx*2 + 0x2d3cb8], r11b ; mov al, dl ; ret
0x0000020000213799 : mov byte ptr [r10], 0x2e ; call r10
0x00000200001387f1 : mov byte ptr [r10], 0x2e ; inc r10 ; jmp 0x20000138813
0x000002000003d7e1 : mov byte ptr [r10], dl ; add byte ptr [rcx - 0x75], al ; ret 0xd9eb
0x000002000040b7a3 : mov byte ptr [r14], bl ; mov rcx, rsi ; call 0x200000c7a28
0x00000200000f185c : mov byte ptr [r8 + 0x10], 0 ; ret
0x00000200000f1e9d : mov byte ptr [r8 + 0x10], 1 ; ret
0x000002000002f6c7 : mov byte ptr [r8 + 4], r9b ; ret
0x000002000077a3f1 : mov byte ptr [r8 + rcx*4 + 0x74], r8b ; cmp byte ptr [rax + rbp*8], cl ; ret
0x0000020000082b05 : mov byte ptr [r8], 0 ; ret
0x00000200004a0af5 : mov byte ptr [r8], 1 ; mov al, 1 ; ret
0x00000200001c3d3d : mov byte ptr [r8], 1 ; mov qword ptr [rdx], r9 ; ret
0x00000200004a0aba : mov byte ptr [r8], al ; movzx eax, r10b ; ret
0x000002000003ffad : mov byte ptr [r8], al ; test byte ptr [rcx + 0x19], 1 ; jne 0x2000003ffc8 ; ret
0x0000020000403f3c : mov byte ptr [r8], al ; xor eax, eax ; ret
0x0000020000546286 : mov byte ptr [r8], cl ; mov byte ptr [r9], al ; ret
0x000002000003ffed : mov byte ptr [r8], cl ; ret
0x00000200001ef52e : mov byte ptr [r9 + 0x5e99], r8b ; pop r14 ; ret
0x00000200000c0737 : mov byte ptr [r9 + 0x6c8], al ; ret
0x0000020000129cec : mov byte ptr [r9 + 5], r11b ; ret
0x000002000043f1b5 : mov byte ptr [r9 - 0x75], r8b ; ret
0x000002000011c83a : mov byte ptr [r9 - 0x75], r9b ; ret 0x7d89
0x0000020000546289 : mov byte ptr [r9], al ; ret
0x0000020000053cdd : mov byte ptr [r9], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000007bb84 : mov byte ptr [r9], al ; xor eax, eax ; ret
0x00000200000f185d : mov byte ptr [rax + 0x10], 0 ; ret
0x00000200000f1e9e : mov byte ptr [rax + 0x10], 1 ; ret
0x0000020000546147 : mov byte ptr [rax + 0xd0], 0 ; xor eax, eax ; ret
0x00000200001e21ae : mov byte ptr [rax + 0xf0], 1 ; ret
0x00000200001e23fb : mov byte ptr [rax + 3], cl ; mov qword ptr [rax + 0x28], r9 ; ret
0x00000200001e23fa : mov byte ptr [rax + 3], r9b ; mov qword ptr [rax + 0x28], r9 ; ret
0x000002000002f6c8 : mov byte ptr [rax + 4], cl ; ret
0x00000200000bc56b : mov byte ptr [rax + 6], dh ; add byte ptr [rax], al ; ret
0x00000200000ebb2b : mov byte ptr [rax + 7], al ; add byte ptr [rax], al ; ret
0x00000200005b249c : mov byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000014f501 : mov byte ptr [rax + rcx - 1], dl ; dec r8 ; jne 0x2000014f509 ; ret
0x000002000014f5af : mov byte ptr [rax + rcx - 1], dl ; dec r8 ; jne 0x2000014f5b7 ; ret
0x000002000077a3f2 : mov byte ptr [rax + rcx*4 + 0x74], al ; cmp byte ptr [rax + rbp*8], cl ; ret
0x0000020000499abf : mov byte ptr [rax - 0x18000000], bh ; out 0x2c, eax ; ret 0x89ff
0x00000200001c9ae7 : mov byte ptr [rax - 0x75000000], al ; mov r15b, 0xff ; ret
0x0000020000003f5a : mov byte ptr [rax - 0x75000000], bh ; ret
0x000002000049c409 : mov byte ptr [rax - 0x75], cl ; ret
0x00000200000aa24c : mov byte ptr [rax - 0xa000000], bh ; ret
0x00000200004dfd2e : mov byte ptr [rax], 0 ; add byte ptr [rbx], bh ; ret
0x0000020000141a75 : mov byte ptr [rax], 0 ; add cl, ch ; add al, ah ; add byte ptr [rax], al ; ret
0x00000200004b9be0 : mov byte ptr [rax], 0 ; jmp 0x200004b9bac
0x0000020000082b06 : mov byte ptr [rax], 0 ; ret
0x0000020000737a6e : mov byte ptr [rax], 0x74 ; jns 0x20000737a32 ; mov rax, rdx ; jmp 0x20000737a81
0x00000200004a0af6 : mov byte ptr [rax], 1 ; mov al, 1 ; ret
0x00000200001c3d3e : mov byte ptr [rax], 1 ; mov qword ptr [rdx], r9 ; ret
0x000002000064f7e3 : mov byte ptr [rax], 1 ; ret
0x00000200000304a3 : mov byte ptr [rax], 1 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000683a09 : mov byte ptr [rax], 4 ; jmp 0x20000683a19
0x00000200000ed936 : mov byte ptr [rax], ah ; in eax, 0xa ; add bh, bh ; ret
0x00000200004e76e7 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rbx ; ret
0x000002000041e605 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x60 ; pop rdi ; ret
0x00000200006abf6b : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000111a78 : mov byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x70 ; pop rdi ; ret
0x0000020000497b3f : mov byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200000ba84f
0x00000200001abd06 : mov byte ptr [rax], al ; add byte ptr [rax], al ; call r9
0x00000200005ed484 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx + 0x18], eax ; ret
0x00000200005ed446 : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx + 0x18], rax ; ret
0x00000200004a324a : mov byte ptr [rax], al ; add byte ptr [rax], al ; mov rcx, rax ; call 0x2000014f4c9
0x00000200005ed4c5 : mov byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rcx + 0x20], xmm0 ; ret
0x000002000001c6f0 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop r14 ; pop rbp ; ret
0x00000200000d9249 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop r14 ; pop rsi ; ret
0x000002000007a5d1 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop r15 ; pop rsi ; ret
0x00000200000b0e2a : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000200000c8fbc : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200004a0abb : mov byte ptr [rax], al ; movzx eax, r10b ; ret
0x000002000003ffae : mov byte ptr [rax], al ; test byte ptr [rcx + 0x19], 1 ; jne 0x2000003ffc7 ; ret
0x0000020000403f3d : mov byte ptr [rax], al ; xor eax, eax ; ret
0x000002000011c523 : mov byte ptr [rax], bl ; ret
0x0000020000507015 : mov byte ptr [rax], cl ; add byte ptr [rax - 0x73], cl ; and byte ptr [r9 - 0x75], al ; ret
0x0000020000546287 : mov byte ptr [rax], cl ; mov byte ptr [r9], al ; ret
0x000002000003ffee : mov byte ptr [rax], cl ; ret
0x00000200000d40f4 : mov byte ptr [rbp + 0xf000c27], al ; mov dh, 0xb7 ; ret
0x0000020000008791 : mov byte ptr [rbp + 0xf], 0x22 ; ret
0x000002000065a8bb : mov byte ptr [rbp - 0x3b7cb701], ch ; jo 0x2000065a928 ; ret
0x000002000065a91e : mov byte ptr [rbp - 0x3b7cb701], ch ; pop rax ; ret
0x000002000049afd8 : mov byte ptr [rbp - 0x74ffee05], bl ; ret
0x00000200004671f4 : mov byte ptr [rbp - 0x79], bh ; call 0x20000463e9f
0x00000200004671f3 : mov byte ptr [rbp - 0x79], dil ; call 0x20000463ea0
0x00000200005f5df8 : mov byte ptr [rbp - 0x7cb80000], bl ; ret 0x3b08
0x00000200001c5b9a : mov byte ptr [rbx + 0x20], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000e8358 : mov byte ptr [rbx + 0x20], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003125c : mov byte ptr [rbx + 0x23], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c344c : mov byte ptr [rbx + 0x38], 2 ; call r8
0x000002000016e80b : mov byte ptr [rbx + 0x45], bpl ; call rsi
0x000002000016e80c : mov byte ptr [rbx + 0x45], ch ; call rsi
0x0000020000039315 : mov byte ptr [rbx + 0x50], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013ec86 : mov byte ptr [rbx + 0xf], cl ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004cc54c : mov byte ptr [rbx + 6], dh ; jmp 0x200004cc517
0x00000200004cc54b : mov byte ptr [rbx + 6], sil ; jmp 0x200004cc518
0x0000020000020291 : mov byte ptr [rbx + 8], 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013f8b8 : mov byte ptr [rbx + rbp - 0x38], 0x41 ; mov eax, ecx ; ret
0x000002000012d340 : mov byte ptr [rbx + rcx - 8], 0x8b ; ret
0x0000020000692eac : mov byte ptr [rbx + rdi - 0xb], 0x72 ; ret
0x00000200003da16c : mov byte ptr [rbx + rdi - 0xd], 0x72 ; fcos ; ret
0x00000200001d27e5 : mov byte ptr [rbx - 0x73], 0x14 ; or ch, byte ptr [rbx] ; ret 0x341
0x000002000010972f : mov byte ptr [rbx - 0x73], 0x14 ; or ch, byte ptr [rbx] ; ret 0xc0ff
0x000002000077efe2 : mov byte ptr [rbx - 0x73], 0x14 ; or ebp, dword ptr [rbx] ; ret 0x341
0x0000020000440572 : mov byte ptr [rbx - 0x74ffe9f5], ch ; ret
0x000002000043ee4f : mov byte ptr [rbx], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000075d637 : mov byte ptr [rbx], ah ; ret
0x000002000001ae67 : mov byte ptr [rbx], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001131cb : mov byte ptr [rbx], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004653ae : mov byte ptr [rbx], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003bd9a7 : mov byte ptr [rbx], bl ; cmp byte ptr [rdx], bl ; add dh, dh ; ret
0x000002000009de8f : mov byte ptr [rbx], cl ; add byte ptr [rax - 0x75], cl ; ret
0x000002000012ff5a : mov byte ptr [rbx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000465b9b : mov byte ptr [rbx], cl ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000450fa6 : mov byte ptr [rbx], dl ; xor al, 0x15 ; add byte ptr [rbp + 0x3b], cl ; ret
0x00000200000342b4 : mov byte ptr [rcx + 0x1b], al ; ret
0x000002000044d0b5 : mov byte ptr [rcx + 0x27], al ; add rsp, 0x28 ; ret
0x00000200000e798a : mov byte ptr [rcx + 0x30], 1 ; ret
0x0000020000067001 : mov byte ptr [rcx + 0x318], 0x3f ; ret
0x000002000065b12e : mov byte ptr [rcx + 0x41], 0x69 ; ret 0xdcd
0x00000200001f0b28 : mov byte ptr [rcx + 0x45f], dl ; ret
0x00000200003b2813 : mov byte ptr [rcx + 0x48], 0 ; ret
0x00000200001f6572 : mov byte ptr [rcx + 0x49], bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f6571 : mov byte ptr [rcx + 0x49], r11b ; add rsp, 0x20 ; pop rbx ; ret
0x000002000006704e : mov byte ptr [rcx + 0x52], dl ; ret
0x000002000014f6d4 : mov byte ptr [rcx + 0x58], 1 ; ret
0x0000020000044d04 : mov byte ptr [rcx + 0x5df0], 0 ; xor eax, eax ; ret
0x0000020000044ccd : mov byte ptr [rcx + 0x5df8], 0 ; ret
0x00000200001ef52f : mov byte ptr [rcx + 0x5e99], al ; pop r14 ; ret
0x00000200000c0738 : mov byte ptr [rcx + 0x6c8], al ; ret
0x00000200000f1ec0 : mov byte ptr [rcx + 0x88], 1 ; ret
0x00000200000df10e : mov byte ptr [rcx + 0xbe], al ; ret
0x000002000012b1ee : mov byte ptr [rcx + 0xf], 0xb7 ; ret
0x00000200001154a0 : mov byte ptr [rcx + 1], dl ; ret
0x000002000013f810 : mov byte ptr [rcx + 2], al ; mov word ptr [rcx], ax ; ret
0x00000200005f98ea : mov byte ptr [rcx + 3], al ; xor eax, eax ; ret
0x000002000013f81d : mov byte ptr [rcx + 4], al ; mov dword ptr [rcx], eax ; ret
0x00000200001a5995 : mov byte ptr [rcx + 4], al ; ret
0x0000020000129ced : mov byte ptr [rcx + 5], bl ; ret
0x000002000002d8b8 : mov byte ptr [rcx + 6], 1 ; add rsp, 0x28 ; ret
0x00000200005f4984 : mov byte ptr [rcx + 6], al ; pop r14 ; ret
0x00000200000203cf : mov byte ptr [rcx + 8], al ; ret
0x000002000005e382 : mov byte ptr [rcx + rcx*2], 0x83 ; ret
0x00000200001351b8 : mov byte ptr [rcx + rdx], al ; mov rax, r11 ; ret
0x00000200005f495a : mov byte ptr [rcx - 0x3f], 0xea ; add al, byte ptr [rcx + 0x32] ; ret 0x8844
0x0000020000483391 : mov byte ptr [rcx - 0x73], 0x5e ; add dword ptr [rdi], ecx ; ret
0x000002000001a604 : mov byte ptr [rcx - 0x74ffebe5], dl ; ret
0x000002000060ea76 : mov byte ptr [rcx - 0x75], 0xd7 ; mov ecx, ebx ; call 0x20000231ce9
0x000002000043f1b6 : mov byte ptr [rcx - 0x75], al ; ret
0x000002000011c83b : mov byte ptr [rcx - 0x75], cl ; ret 0x7d89
0x0000020000040c64 : mov byte ptr [rcx - 0x7d], 0xc2 ; add al, 0xff ; ret 0x5489
0x000002000014f1c9 : mov byte ptr [rcx - 1], al ; jne 0x2000014f1c8 ; mov rax, r11 ; ret
0x000002000045e1b6 : mov byte ptr [rcx], 0 ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x85 ; ret 0
0x0000020000125c09 : mov byte ptr [rcx], 0 ; mov eax, r8d ; ret
0x00000200001c285e : mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x0000020000126904 : mov byte ptr [rcx], 3 ; mov dword ptr [rcx + 0xc], r8d ; xor eax, eax ; ret
0x00000200003eb730 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200000c7a26
0x000002000049cb63 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200000c7a27
0x00000200004c3010 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200000e9de7
0x000002000049fca7 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov dl, 1 ; call 0x200000c0799
0x00000200005f8cbd : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x28] ; ret
0x00000200001f0a71 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000200001f0a61 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x38] ; ret
0x0000020000044b05 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000020000069ff8 : mov byte ptr [rcx], al ; add byte ptr [rax], al ; test rdx, rdx ; jne 0x20000069ff7 ; ret
0x000002000049fa9d : mov byte ptr [rcx], al ; add byte ptr [rax], al ; xor edx, edx ; call 0x200000c0799
0x000002000000b3fd : mov byte ptr [rcx], al ; jmp 0x2000000b3dc
0x000002000014f36a : mov byte ptr [rcx], al ; jne 0x2000014f367 ; mov rax, r11 ; ret
0x000002000013f80a : mov byte ptr [rcx], al ; ret
0x00000200000304bc : mov byte ptr [rcx], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000007bb85 : mov byte ptr [rcx], al ; xor eax, eax ; ret
0x000002000042a86a : mov byte ptr [rcx], dl ; call qword ptr [rsi]
0x000002000014f7e8 : mov byte ptr [rcx], dl ; lock or dword ptr [rsp], 0 ; ret
0x00000200001bfc23 : mov byte ptr [rcx], dl ; ret
0x000002000044c6a8 : mov byte ptr [rdi + 0x18], bh ; call 0x200000706f2
0x000002000044c6a7 : mov byte ptr [rdi + 0x18], r15b ; call 0x200000706f3
0x00000200001058fe : mov byte ptr [rdi + 0x1e8], 0 ; call 0x20000051c01
0x00000200001dfc40 : mov byte ptr [rdi + 0x22], dl ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001fa813 : mov byte ptr [rdi + 5], bl ; add byte ptr [rax], al ; mov eax, ecx ; ret
0x000002000010aaab : mov byte ptr [rdi + rdi*8 - 1], ah ; inc dword ptr [rbx] ; fucomi st(3) ; ret
0x000002000046e6b9 : mov byte ptr [rdi - 0x74fffffa], al ; ret
0x0000020000676530 : mov byte ptr [rdi - 0x7aba0035], ah ; ror byte ptr [rdi], 0x95 ; ret 0xd03b
0x000002000051edb1 : mov byte ptr [rdi - 0x7cfffffd], bh ; ret
0x000002000001a3ae : mov byte ptr [rdi - 0xffebe3], ah ; ret
0x000002000004a916 : mov byte ptr [rdi], al ; inc rdi ; jmp 0x2000004a8e6
0x00000200003c6b73 : mov byte ptr [rdi], al ; ret
0x00000200000c077f : mov byte ptr [rdi], cl ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f791c : mov byte ptr [rdi], cl ; or dword ptr [r8], eax ; mov al, r8b ; ret
0x00000200003a4e2d : mov byte ptr [rdi], dl ; add byte ptr [rbx - 0x79f0c505], al ; ret 0x57
0x000002000052b0bd : mov byte ptr [rdx + 0x10], al ; test dl, dl ; jne 0x2000052b0cc ; ret
0x0000020000519a21 : mov byte ptr [rdx + 0x24], bl ; or eax, dword ptr [rax] ; call 0x20000140388
0x00000200000577b7 : mov byte ptr [rdx + 0x2a], 0 ; ret
0x000002000052b0ec : mov byte ptr [rdx + 0x30], dl ; ret
0x00000200000f4ad4 : mov byte ptr [rdx + 0x7c], al ; ret
0x0000020000213795 : mov byte ptr [rdx + 1], 0x48 ; mov byte ptr [r10], 0x2e ; call r10
0x000002000020e4db : mov byte ptr [rdx + 1], al ; mov byte ptr [rdx], cl ; ret
0x000002000020e4bb : mov byte ptr [rdx + 1], cl ; ret
0x000002000020e4b8 : mov byte ptr [rdx + 2], al ; mov byte ptr [rdx + 1], cl ; ret
0x000002000020e49a : mov byte ptr [rdx + 2], cl ; ret
0x00000200003f4e29 : mov byte ptr [rdx + 7], al ; jmp 0x200003f4e3f
0x00000200004fcbaa : mov byte ptr [rdx + 8], 0 ; mov rax, rdx ; ret
0x000002000050337f : mov byte ptr [rdx + rcx*2 + 0x2d3cb8], bl ; mov al, dl ; ret
0x000002000077eede : mov byte ptr [rdx - 0x73], 0x14 ; sbb ebp, dword ptr [rbx] ; ret 0x341
0x000002000059b4e5 : mov byte ptr [rdx - 0x740016da], dl ; ret
0x00000200005866d0 : mov byte ptr [rdx - 0x74bbfff2], ch ; ret 0x34c
0x00000200003f7601 : mov byte ptr [rdx - 0x75000000], dl ; ret
0x000002000021379a : mov byte ptr [rdx], 0x2e ; call r10
0x00000200001387f2 : mov byte ptr [rdx], 0x2e ; inc r10 ; jmp 0x20000138812
0x0000020000684db1 : mov byte ptr [rdx], 0xff ; ret
0x00000200003a2d28 : mov byte ptr [rdx], ah ; add byte ptr [rax], al ; adc byte ptr [rax], al ; ret
0x000002000075d454 : mov byte ptr [rdx], ah ; ret 0x48ff
0x00000200004299cf : mov byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x200000c5ca6
0x0000020000074f27 : mov byte ptr [rdx], al ; add byte ptr [rax], al ; test rcx, rcx ; jne 0x20000074f3a ; ret
0x00000200004247de : mov byte ptr [rdx], al ; add byte ptr [rax], al ; xor edx, edx ; call 0x20000045785
0x00000200004875c1 : mov byte ptr [rdx], al ; jne 0x200004875ce ; xor eax, eax ; ret
0x000002000005d08b : mov byte ptr [rdx], al ; mov al, byte ptr [rcx + 0x6b0] ; ret
0x0000020000161ba2 : mov byte ptr [rdx], al ; ret
0x0000020000411f18 : mov byte ptr [rdx], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004230eb : mov byte ptr [rdx], bl ; jmp 0x200004230b4
0x0000020000693328 : mov byte ptr [rdx], cl ; add rsp, 0x48 ; ret
0x0000020000686308 : mov byte ptr [rdx], cl ; mov al, 1 ; ret
0x000002000020e4de : mov byte ptr [rdx], cl ; ret
0x00000200003dafc3 : mov byte ptr [rdx], dh ; add al, byte ptr [rax] ; add al, ch ; ret
0x000002000003d7e2 : mov byte ptr [rdx], dl ; add byte ptr [rcx - 0x75], al ; ret 0xd9eb
0x000002000053884a : mov byte ptr [rdx], dl ; inc rdx ; jmp 0x2000053883b
0x0000020000538849 : mov byte ptr [rdx], r10b ; inc rdx ; jmp 0x2000053883c
0x00000200000c71d0 : mov byte ptr [rip + 0x13e80000], al ; ret 0xfff6
0x00000200001b2a6e : mov byte ptr [rip + 0x1482dc], cl ; ret
0x000002000018599d : mov byte ptr [rip + 0x160250], 1 ; jmp 0x20000091c75
0x00000200001859aa : mov byte ptr [rip + 0x1605b0], ah ; jmp 0x20000091ca0
0x00000200001859a9 : mov byte ptr [rip + 0x1605b0], r12b ; jmp 0x20000091ca1
0x000002000014f73c : mov byte ptr [rip + 0x174b89], 0 ; xor eax, eax ; ret
0x00000200001661e9 : mov byte ptr [rip + 0x1948d7], dl ; ret
0x00000200001c05ca : mov byte ptr [rip + 0x1bec9a], cl ; mov al, dl ; ret
0x00000200001c05c9 : mov byte ptr [rip + 0x1bec9a], r9b ; mov al, dl ; ret
0x00000200001320ab : mov byte ptr [rip + 0x1d1617], cl ; ret
0x00000200001320aa : mov byte ptr [rip + 0x1d1617], r9b ; ret
0x000002000005eca7 : mov byte ptr [rip + 0x29bed2], 0 ; jmp 0x2000005ec7a
0x000002000005e4e1 : mov byte ptr [rip + 0x29c820], 1 ; mov r8, r10 ; jmp 0x2000005e4b8
0x000002000003e4a9 : mov byte ptr [rip + 0x2bc615], dl ; ret
0x000002000003e4a2 : mov byte ptr [rip + 0x2bc61a], dl ; ret
0x000002000003e492 : mov byte ptr [rip + 0x2bc62d], dl ; ret
0x000002000003e48b : mov byte ptr [rip + 0x2bc632], dl ; ret
0x000002000004d269 : mov byte ptr [rip + 0x3b490000], al ; ret 0xa375
0x000002000061e7e4 : mov byte ptr [rip + 0x3b49ffcc], al ; ret 0x840f
0x000002000022b0a1 : mov byte ptr [rip + 0x3b4d0000], al ; ret
0x00000200007332d1 : mov byte ptr [rip + 0x3b4d0000], al ; ret 0xc73
0x00000200000c716f : mov byte ptr [rip + 0x74e80000], al ; ret 0xfff6
0x000002000040b1b4 : mov byte ptr [rip - 0x110457], 1 ; xor eax, eax ; ret
0x000002000039aeb0 : mov byte ptr [rip - 0x17ffff38], dl ; ret 0x154b
0x00000200005035cd : mov byte ptr [rip - 0x22e18b], 0 ; ret
0x00000200005035d5 : mov byte ptr [rip - 0x22e193], 1 ; ret
0x000002000053c222 : mov byte ptr [rip - 0x238909], 1 ; ret
0x00000200006a8f64 : mov byte ptr [rip - 0x3b48b5], cl ; ret
0x000002000076ecd4 : mov byte ptr [rip - 0x3f0cab], cl ; ret
0x000002000076e22b : mov byte ptr [rip - 0x46b389], 1 ; ret
0x000002000076d62f : mov byte ptr [rip - 0x4919dc], 6 ; ret
0x000002000076dc02 : mov byte ptr [rip - 0x494366], 0x14 ; ret
0x00000200003a4edf : mov byte ptr [rip - 0x7433a], 1 ; ret
0x000002000013e698 : mov byte ptr [rip - 0x74b80000], al ; ret
0x000002000022947e : mov byte ptr [rip - 0x74b80000], al ; ret 0x2eb
0x00000200007381c4 : mov byte ptr [rip - 0x74b80000], al ; ret 0xc148
0x000002000040cc78 : mov byte ptr [rip - 0x74ffe8ce], dl ; ret
0x000002000076e825 : mov byte ptr [rip - 0x75779], 0 ; ret
0x00000200000b070f : mov byte ptr [rsi + 1], 1 ; jmp 0x200000b069f
0x000002000076d595 : mov byte ptr [rsi - 0x74fffef6], bh ; ret
0x000002000005a77e : mov byte ptr [rsi], 0x11 ; xor eax, eax ; jmp 0x2000005a74e
0x00000200002183a0 : mov byte ptr [rsi], 1 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000048e064 : mov byte ptr [rsi], ah ; ret
0x000002000056aca7 : mov byte ptr [rsi], bh ; jmp 0x2000056acb8
0x00000200001d7c1d : mov byte ptr [rsi], bl ; add byte ptr [rax], al ; ret
0x000002000040b7a4 : mov byte ptr [rsi], bl ; mov rcx, rsi ; call 0x200000c7a27
0x000002000056aca6 : mov byte ptr [rsi], r15b ; jmp 0x2000056acb9
0x000002000051bbed : mov byte ptr [rsp + 0x20], 1 ; call 0x20000140aa8
0x00000200001a3f7d : mov byte ptr [rsp + 0x20], al ; call r8
0x000002000051cc5a : mov byte ptr [rsp + 0x20], bh ; call 0x20000140aa7
0x00000200006bc597 : mov byte ptr [rsp + 0x20], bh ; call r12
0x000002000051cc59 : mov byte ptr [rsp + 0x20], r15b ; call 0x20000140aa8
0x00000200006bc596 : mov byte ptr [rsp + 0x20], r15b ; call r12
0x000002000006710c : mov byte ptr [rsp + 0x30], dh ; mov rcx, rdi ; call rsi
0x000002000006710b : mov byte ptr [rsp + 0x30], r14b ; mov rcx, rdi ; call rsi
0x0000020000515cdb : mov ch, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000049ba87 : mov ch, 0x17 ; ret 0x44ff
0x000002000050d4c7 : mov ch, 0x2f ; ret
0x00000200006b4ac7 : mov ch, 0x3c ; ret 0x48ff
0x0000020000015e5e : mov ch, 0x41 ; mov eax, edx ; jmp 0x20000015e41
0x000002000051ac20 : mov ch, 0x48 ; mov ebx, dword ptr [rsp + 8] ; mov eax, r8d ; ret
0x000002000069f6fd : mov ch, 0x49 ; ret
0x00000200003fa6e7 : mov ch, 0x56 ; ret
0x000002000016c934 : mov ch, 0x61 ; stc ; dec dword ptr [rax - 0x75] ; ret
0x000002000012bac7 : mov ch, 0x76 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007576af : mov ch, 0x7e ; ret 0x89ff
0x00000200001dfda4 : mov ch, 0x80 ; or byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000756c53 : mov ch, 0x85 ; ret 0x8bff
0x000002000049b458 : mov ch, 0x8b ; ret
0x00000200005f7827 : mov ch, 0xa4 ; ret
0x00000200000dd4ed : mov ch, 0xb ; add dh, dh ; ret 0xf07
0x00000200005b9a97 : mov ch, 0xb2 ; in eax, dx ; dec dword ptr [rax + 0x2b] ; ret 0x8949
0x0000020000504327 : mov ch, 0xc0 ; ret
0x00000200005143c7 : mov ch, 0xc0 ; ret 0x8bff
0x000002000009d998 : mov ch, 0xe ; add byte ptr [rbx + rcx*4 + 0x51], cl ; adc byte ptr [rcx - 0x75], cl ; ret 0x8348
0x00000200001d75e2 : mov ch, 0xe8 ; pop rax ; ret
0x000002000059851e : mov ch, 0xe8 ; push rsi ; ret 0x7420
0x00000200000684b0 : mov ch, 0xeb ; ret 0xcccc
0x000002000016767f : mov ch, 0xed ; dec dword ptr [rax - 0x75] ; ret 0x48f0
0x0000020000731f61 : mov ch, 0xf0 ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000069064f : mov ch, 0xfa ; ret
0x00000200006b51b7 : mov ch, 0xff ; add rsp, 0x28 ; ret
0x00000200005e2470 : mov ch, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005dcc9e : mov ch, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005dced7 : mov ch, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x00000200005dcb20 : mov ch, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x000002000067318c : mov ch, 0xff ; call rax
0x000002000052f022 : mov ch, 0xff ; jmp 0x2000052efec
0x00000200005f5d8b : mov ch, 0xff ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051d4ee : mov ch, 0xff ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000046202 : mov ch, 0xff ; ret
0x00000200006c2cee : mov ch, 1 ; add bl, ch ; jmp 0x200006c2c7e
0x0000020000048399 : mov ch, 8 ; add byte ptr [rbx], bh ; ret 0x874
0x0000020000032a62 : mov ch, al ; call qword ptr [rdx]
0x000002000001cec3 : mov ch, byte ptr [rax] ; ret
0x000002000052c932 : mov ch, byte ptr [rbx] ; ret 0x4cff
0x00000200003b5fd0 : mov ch, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005a369a : mov ch, dl ; dec dword ptr [rax - 0x75] ; ret 0xc933
0x00000200005bc8ef : mov cl, 0x10 ; call rax
0x0000020000018a3e : mov cl, 0x10 ; jne 0x20000018a2d ; add rsp, 0x28 ; ret
0x00000200005bb535 : mov cl, 0x11 ; call rax
0x00000200000684f2 : mov cl, 0x11 ; cmp rax, 2 ; jae 0x20000068503 ; ret
0x0000020000012ebc : mov cl, 0x11 ; jne 0x20000012eb9 ; ret
0x000002000002db15 : mov cl, 0x11 ; jne 0x2000002db21 ; ret
0x000002000004ebe8 : mov cl, 0x11 ; jne 0x2000004ebf1 ; ret
0x0000020000053b91 : mov cl, 0x11 ; jne 0x20000053ba1 ; mov al, 1 ; ret
0x000002000005cb2b : mov cl, 0x11 ; jne 0x2000005cb3c ; add rsp, 0x28 ; ret
0x00000200000bc265 : mov cl, 0x11 ; jne 0x200000bc276 ; add rsp, 0x28 ; ret
0x00000200003fc9f4 : mov cl, 0x11 ; jne 0x200003fc9fd ; ret
0x000002000020e9c3 : mov cl, 0x11 ; ret
0x0000020000038bef : mov cl, 0x11 ; sete al ; add rsp, 0x38 ; ret
0x00000200005a1de9 : mov cl, 0x12 ; call rax
0x00000200000229a1 : mov cl, 0x13 ; add dh, dh ; rol dword ptr [rdx], 0xf ; xchg eax, ebp ; ret 0xc3f6
0x000002000058071e : mov cl, 0x13 ; call r10
0x00000200005806c9 : mov cl, 0x13 ; call rax
0x00000200005c2d45 : mov cl, 0x14 ; call rax
0x0000020000583052 : mov cl, 0x15 ; call r10
0x00000200005830d9 : mov cl, 0x15 ; call rax
0x00000200006aabae : mov cl, 0x15 ; push rsp ; ret 0x44ff
0x000002000059da18 : mov cl, 0x15 ; ret 0xd375
0x0000020000560650 : mov cl, 0x1b ; call rax
0x0000020000155a20 : mov cl, 0x1d ; add byte ptr [rbp + 0x3b], al ; ret 0x177c
0x0000020000180d7c : mov cl, 0x29 ; lock dec dword ptr [rax - 0x75] ; ret 0xb948
0x00000200005a6bab : mov cl, 0x2b ; ret 0x48ff
0x00000200006b2f2f : mov cl, 0x32 ; add dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003ecf2f : mov cl, 0x35 ; ret
0x00000200006b5153 : mov cl, 0x35 ; ret 0x41ff
0x000002000050d98d : mov cl, 0x3d ; ret 0x1e
0x00000200005152f7 : mov cl, 0x3f ; ret 0x48ff
0x000002000005a892 : mov cl, 0x41 ; jne 0x2000005a8b4 ; add rsp, 0x28 ; ret
0x000002000062a9fa : mov cl, 0x48 ; inc edx ; jmp 0x2000062aa33
0x000002000049d17b : mov cl, 0x49 ; ret 0x40ff
0x0000020000018cbb : mov cl, 0x4a ; sbb byte ptr [rbp - 0x15], dh ; add rsp, 0x28 ; ret
0x0000020000446e44 : mov cl, 0x4b ; call 0x2001006a998
0x0000020000449a5e : mov cl, 0x4b ; call 0x2001006d5b2
0x000002000044be05 : mov cl, 0x4b ; call 0x2001006f959
0x000002000002f70e : mov cl, 0x51 ; xor byte ptr [rbx + rdi - 0x40], al ; jne 0x2000002f6e3 ; ret
0x0000020000620117 : mov cl, 0x52 ; sbb byte ptr [rcx - 0x77], cl ; add dword ptr [rax - 0x75], ecx ; ret 0x49f0
0x00000200004c380b : mov cl, 0x6f ; ret 0x84ff
0x000002000009b4a9 : mov cl, 0x81 ; clc ; add al, 0 ; add byte ptr [rax + 0x3b], cl ; ret 0xe874
0x00000200000e4b52 : mov cl, 0x82 ; mov esp, 0x3b000006 ; ret
0x00000200000e4bad : mov cl, 0x86 ; mov esp, 0x3b000006 ; ret
0x000002000040f622 : mov cl, 0x89 ; enter 1, 0 ; ret
0x0000020000064b11 : mov cl, 0x89 ; sbb byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000200005a16fd : mov cl, 0xa ; call r10
0x0000020000012558 : mov cl, 0xa ; jne 0x20000012551 ; ret
0x0000020000029d01 : mov cl, 0xa ; jne 0x20000029cf6 ; add rsp, 0x28 ; ret
0x00000200000df2d6 : mov cl, 0xa ; jne 0x200000df2e9 ; mov eax, 1 ; ret
0x00000200006bc81e : mov cl, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200005a1b72 : mov cl, 0xb ; call r10
0x00000200005a1aa7 : mov cl, 0xb ; call rax
0x00000200005cd00f : mov cl, 0xb1 ; call qword ptr [rax - 0xaef3d17]
0x00000200000f2fe3 : mov cl, 0xb1 ; sub byte ptr [rax], al ; call rax
0x000002000003d556 : mov cl, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xf749
0x0000020000182dfb : mov cl, 0xb9 ; adc al, 0 ; call rax
0x00000200005b41af : mov cl, 0xc ; call r10
0x00000200005b43b2 : mov cl, 0xc ; call rax
0x00000200005c5e98 : mov cl, 0xc6 ; dec dword ptr [rbx - 0x74bbafab] ; ret
0x00000200005bc61e : mov cl, 0xd ; call rax
0x00000200000cca06 : mov cl, 0xd ; hlt ; ret 0x20
0x0000020000431923 : mov cl, 0xdc ; in al, dx ; dec dword ptr [rax - 0x75] ; fnstsw dword ptr [rbx] ; ret 0x840f
0x00000200005b7d59 : mov cl, 0xe ; call rax
0x00000200003ca116 : mov cl, 0xe0 ; rdpmc ; ret
0x000002000057627b : mov cl, 0xe7 ; dec dword ptr [rax - 0x75] ; iretd ; call 0x200000c2548
0x000002000061015c : mov cl, 0xe8 ; jle 0x2000061017f ; ret 0x48ff
0x00000200005ac9ac : mov cl, 0xeb ; inc dword ptr [rcx - 0x7d] ; jmp 0x1ffc3ded8c1
0x000002000055efff : mov cl, 0xf ; call rax
0x000002000018bcc7 : mov cl, 0xf1 ; dec dword ptr [rax - 0x75] ; ret
0x000002000050274b : mov cl, 0xf1 ; dec dword ptr [rax - 0x75] ; salc ; call 0x200004ee980
0x000002000018bca6 : mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; ret
0x000002000018bbc1 : mov cl, 0xf1 ; inc dword ptr [rcx - 0xa] ; ret 0xf08
0x000002000074e89b : mov cl, 0xf6 ; ret 0x7503
0x0000020000134db4 : mov cl, 0xf7 ; ret 0xffff
0x00000200004a3c69 : mov cl, 0xfe ; inc dword ptr [rax + rax*8 + 0x58b0974] ; ret 0xe20d
0x00000200006340dc : mov cl, 0xff ; add rsp, 0x28 ; ret
0x0000020000614019 : mov cl, 0xff ; add rsp, 0x40 ; pop rbx ; ret
0x000002000061f939 : mov cl, 0xff ; add rsp, 0x58 ; ret
0x0000020000622862 : mov cl, 0xff ; add rsp, 0xa8 ; ret
0x00000200006a8c90 : mov cl, 0xff ; mov sil, al ; call qword ptr [rip - 0x3d94f3]
0x0000020000133326 : mov cl, 1 ; add r8, r15 ; call r8
0x00000200000d34af : mov cl, 1 ; call 0x2000002f724
0x000002000045566a : mov cl, 1 ; call 0x20000082371
0x000002000008f64d : mov cl, 1 ; jmp 0x2000008f56f
0x0000020000059810 : mov cl, 1 ; jne 0x20000059821 ; add rsp, 0x28 ; ret
0x000002000007e960 : mov cl, 1 ; jne 0x2000007e93f ; ret
0x00000200000c2d30 : mov cl, 1 ; jne 0x200000c2d4b ; add rsp, 0x28 ; ret
0x000002000063dd74 : mov cl, 1 ; mov al, cl ; add rsp, 0x28 ; ret
0x00000200003beae9 : mov cl, 1 ; mov al, r9b ; ret
0x00000200007547ab : mov cl, 6 ; mov eax, 0x58b48ff ; jb 0x20000754769 ; ret 0x44ff
0x00000200005186ab : mov cl, 7 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000004c230 : mov cl, 8 ; jne 0x2000004c240 ; mov al, 1 ; ret
0x000002000004c256 : mov cl, 8 ; jne 0x2000004c263 ; mov al, 1 ; ret
0x000002000007128c : mov cl, 9 ; jne 0x2000007129d ; ret
0x00000200000e8632 : mov cl, 9 ; jne 0x200000e8643 ; add rsp, 0x28 ; ret
0x00000200005600f8 : mov cl, ah ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200001e7508 : mov cl, al ; mov al, r9b ; add rsp, 0x48 ; ret
0x000002000042440a : mov cl, bh ; call 0x20000050275
0x00000200004ec67e : mov cl, bh ; call rax
0x00000200006c49fd : mov cl, bh ; mov rbx, rax ; call rsi
0x00000200005f1684 : mov cl, bh ; ret
0x00000200004cadfa : mov cl, bl ; call 0x200000eebe9
0x00000200001b303e : mov cl, bl ; call rax
0x00000200005dc88f : mov cl, bpl ; call rsi
0x000002000020192f : mov cl, byte ptr [rax + rax - 0x7af10000] ; ret 0
0x00000200005ce0e0 : mov cl, byte ptr [rax - 0x75] ; ret
0x00000200004076f2 : mov cl, byte ptr [rbx] ; add byte ptr [rbp - 0x74bb02aa], cl ; ret 0x8b48
0x0000020000435706 : mov cl, byte ptr [rsi] ; call rax
0x00000200005dc890 : mov cl, ch ; call rsi
0x000002000059b5b0 : mov cl, ch ; mov rax, qword ptr [rip - 0x2cbe01] ; call rax
0x0000020000522414 : mov cl, ch ; sar edi, 0x48 ; add esp, 0x50 ; pop rbx ; ret
0x000002000049cebd : mov cl, cl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200006b9f9d : mov cl, cl ; call rax
0x0000020000105f22 : mov cl, cl ; cmc ; dec dword ptr [rax - 0x7f] ; ret
0x00000200004ec67d : mov cl, dil ; call rax
0x00000200006c49fc : mov cl, dil ; mov rbx, rax ; call rsi
0x000002000002d540 : mov cl, dl ; and cl, 3 ; cmove rax, rdx ; ret
0x00000200004cadf9 : mov cl, r11b ; call 0x200000eebea
0x00000200004cadf8 : mov cl, r11b ; call 0x200000eebeb
0x00000200005600f7 : mov cl, r12b ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000424409 : mov cl, r15b ; call 0x20000050276
0x00000200006b9f9c : mov cl, r9b ; call rax
0x0000020000005f07 : mov cr0, rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d2324 : mov cr0, rax ; add rsp, 0x28 ; ret
0x000002000003a7e3 : mov cr0, rax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001bfe43 : mov cr0, rax ; add rsp, 0x50 ; pop rbx ; ret
0x000002000005a77b : mov cr0, rax ; mov byte ptr [rsi], 0x11 ; xor eax, eax ; jmp 0x2000005a751
0x000002000003915b : mov cr0, rax ; ret
0x000002000001f84e : mov cr0, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d325e : mov cr0, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ef278 : mov cr0, rcx ; mov al, dl ; ret
0x000002000005382e : mov cr0, rcx ; ret
0x00000200001c6af8 : mov cr0, rdx ; jmp 0x200001c6b13
0x00000200001d9e98 : mov cr3, rax ; or ebp, 0x28 ; jmp 0x200001d9ed2
0x0000020000037723 : mov cr3, rax ; ret
0x00000200003ae48b : mov cr4, rax ; add rsp, 0x28 ; ret
0x00000200000dc6bf : mov cr4, rax ; mov cr4, rcx ; ret
0x000002000039d9cf : mov cr4, rcx ; add rsp, 0x28 ; ret
0x00000200000dc6c2 : mov cr4, rcx ; ret
0x0000020000005f06 : mov cr8, rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d2323 : mov cr8, rax ; add rsp, 0x28 ; ret
0x000002000003a7e2 : mov cr8, rax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001bfe42 : mov cr8, rax ; add rsp, 0x50 ; pop rbx ; ret
0x000002000003915a : mov cr8, rax ; ret
0x000002000001f84d : mov cr8, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d325d : mov cr8, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ef277 : mov cr8, rcx ; mov al, dl ; ret
0x000002000005382d : mov cr8, rcx ; ret
0x00000200001c6af7 : mov cr8, rdx ; jmp 0x200001c6b14
0x00000200003ea856 : mov cs, ebp ; jmp qword ptr [rcx]
0x000002000052db38 : mov cs, word ptr [rax - 0x73] ; and al, 0x78 ; call 0x2000014f189
0x000002000009178e : mov cs, word ptr [rax - 0x7d] ; ret 0x4908
0x0000020000403512 : mov cs, word ptr [rax] ; ret
0x00000200000c25d6 : mov cs, word ptr [rbx + 0x43] ; or dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x00000200000550cf : mov cs, word ptr [rdx + 0x2e] ; adc al, byte ptr [rax] ; ret
0x0000020000181296 : mov dh, 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + r9 + 0x30] ; ret
0x00000200000392d5 : mov dh, 0x12 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x000002000000e440 : mov dh, 0x14 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005cbc88 : mov dh, 0x14 ; add dword ptr [rbx], ebp ; ret 0x775
0x00000200000aee77 : mov dh, 0x14 ; or dh, dh ; ret 0x7408
0x000002000074c446 : mov dh, 0x1b ; ret
0x00000200003e6944 : mov dh, 0x1c ; adc byte ptr [rbp + 0x2b], al ; ret
0x0000020000153fb4 : mov dh, 0x22 ; add byte ptr [rcx - 0x77], cl ; adc dword ptr [rcx - 0x75], eax ; ret 0xf49
0x00000200001c9e3e : mov dh, 0x28 ; mov rax, qword ptr [rip + 0x105009] ; call qword ptr [rax]
0x000002000049f486 : mov dh, 0x33 ; ret 0x48ff
0x00000200001c9dd2 : mov dh, 0x38 ; mov rax, qword ptr [rip + 0x105075] ; call qword ptr [rax]
0x00000200006b4ace : mov dh, 0x3c ; ret 0x48ff
0x00000200001ab6ba : mov dh, 0x40 ; add cl, byte ptr [rax + 0xf] ; stosd dword ptr [rdi], eax ; ret 0xd148
0x000002000041b3f3 : mov dh, 0x41 ; adc cl, dl ; call 0x1ffc3439487
0x0000020000231b97 : mov dh, 0x41 ; add al, byte ptr [rcx] ; add bpl, cl ; ret 0xfffe
0x0000020000654895 : mov dh, 0x41 ; add dword ptr [rbx], ebp ; ret 0x8b44
0x000002000008a9c8 : mov dh, 0x41 ; add eax, dword ptr [rcx + 0x32] ; ret
0x00000200005a65e7 : mov dh, 0x41 ; add eax, ecx ; call 0x1ff841c98fc
0x00000200003fe6a0 : mov dh, 0x41 ; add qword ptr [r10 + 0x18], r8 ; ret
0x000002000074b167 : mov dh, 0x41 ; and al, cl ; call 0x2007536ec7d
0x0000020000232ea5 : mov dh, 0x41 ; sbb byte ptr [rax + 0x33], cl ; ror byte ptr [rdi], 1 ; mov dh, 5 ; ret 0x14c5
0x00000200000a63b3 : mov dh, 0x42 ; and al, cl ; call 0x1ffc345a4ca
0x00000200001f0f5c : mov dh, 0x44 ; ror dword ptr [rcx], -1 ; ret 0xff41
0x000002000013b82b : mov dh, 0x45 ; add byte ptr [rbx], bh ; ret
0x000002000018a39d : mov dh, 0x45 ; and esi, dword ptr [rdx] ; ret 0x724
0x000002000004e532 : mov dh, 0x45 ; ret
0x000002000004e527 : mov dh, 0x45 ; ret 0x6b48
0x00000200000418f8 : mov dh, 0x46 ; add eax, dword ptr [rbx - 0x74b7f020] ; ret
0x0000020000059f9c : mov dh, 0x46 ; and dh, dh ; ret 0x7508
0x00000200003daa31 : mov dh, 0x47 ; add dword ptr [rbx], ebp ; ret
0x0000020000095c19 : mov dh, 0x47 ; and al, cl ; call 0x1ffc2449d30
0x0000020000021575 : mov dh, 0x47 ; and ebp, dword ptr [rax + 0xd850f40] ; ret 0x13
0x0000020000073d4d : mov dh, 0x47 ; sbb byte ptr [rdx], bh ; ret 0x3674
0x0000020000453601 : mov dh, 0x47 ; sub byte ptr [rbx], bh ; ret
0x00000200000ba735 : mov dh, 0x48 ; adc byte ptr [rbx - 0x41f0bb3f], cl ; ret
0x000002000040e62f : mov dh, 0x48 ; add cl, byte ptr [rax + 0x6b] ; ret 0x4825
0x000002000020c4b6 : mov dh, 0x48 ; and byte ptr [rdx], bh ; ret 0x675
0x00000200001d02b0 : mov dh, 0x48 ; and cl, byte ptr [rbp - 0x75] ; ret 0x8948
0x0000020000114c05 : mov dh, 0x49 ; cmp eax, dword ptr [rcx - 0x75] ; ret
0x000002000010fcec : mov dh, 0x4e ; add cl, byte ptr [rax - 0x7cb7fdb6] ; ret 0x4903
0x0000020000185dbb : mov dh, 0x4e ; and cl, byte ptr [rbp + 0x23] ; ret 0x894c
0x00000200001d691a : mov dh, 0x50 ; add cl, byte ptr [rbp - 0x75] ; fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x00000200005d1c36 : mov dh, 0x51 ; add cl, byte ptr [rdi] ; mov dh, 5 ; ret 0xf75f
0x00000200004ba66b : mov dh, 0x53 ; add dword ptr [rsi - 0x7d], esp ; ret 0x6604
0x000002000006b14c : mov dh, 0x53 ; add esi, esi ; ret 0x740f
0x000002000006bb4e : mov dh, 0x53 ; add esi, esi ; ret 0x750f
0x00000200001976e5 : mov dh, 0x53 ; and esi, esi ; ret 0xf08
0x000002000002180b : mov dh, 0x53 ; and esi, esi ; ret 0xf10
0x0000020000171bc1 : mov dh, 0x54 ; push 0x84f8b48 ; call r8
0x000002000010087f : mov dh, 0x55 ; and byte ptr [rbx - 0x74bbf7ba], cl ; ret 0xb60f
0x00000200000c43a8 : mov dh, 0x56 ; adc edi, edi ; ret 0x5688
0x00000200000a3360 : mov dh, 0x56 ; and eax, dword ptr [rcx - 0x75] ; ret 0xe8c1
0x0000020000069bd3 : mov dh, 0x56 ; jo 0x20000069bd1 ; ret 0xf04
0x00000200000d0a7d : mov dh, 0x56 ; jo 0x200000d0a7b ; ret 0xf04
0x0000020000053f6d : mov dh, 0x57 ; adc edi, edi ; ret 0x5788
0x00000200004be62e : mov dh, 0x57 ; add esi, esi ; ret 0xf08
0x000002000006d01d : mov dh, 0x57 ; add esi, esi ; ret 0xf0f
0x0000020000475ab6 : mov dh, 0x57 ; and dword ptr [rbx + rcx*4 + 0x47], eax ; sbb al, 0x8b ; ret 0xc148
0x00000200000d49fd : mov dh, 0x57 ; jo 0x200000d49fb ; ret 0xf04
0x0000020000493896 : mov dh, 0x57 ; ret 0x48ff
0x000002000045c6d6 : mov dh, 0x5d ; add esi, esi ; ret
0x00000200005fb926 : mov dh, 0x63 ; ret
0x00000200004eea16 : mov dh, 0x69 ; mov dl, 0xff ; add rsp, 0x48 ; ret
0x00000200003f6862 : mov dh, 0x76 ; ret
0x00000200001318d4 : mov dh, 0x80 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x000002000004f626 : mov dh, 0x80 ; ret
0x000002000008231a : mov dh, 0x80 ; xor al, byte ptr [rdx] ; add byte ptr [rax], al ; ret
0x000002000075761e : mov dh, 0x81 ; ret 0x45ff
0x000002000003ffd3 : mov dh, 0x82 ; ret
0x000002000002119b : mov dh, 0x83 ; ret
0x00000200006db5ea : mov dh, 0x83 ; ret 0x40ff
0x00000200000f74ba : mov dh, 0x83 ; ret 1
0x000002000011f953 : mov dh, 0x84 ; add bh, byte ptr [rsi] ; and al, 0 ; ret
0x0000020000017c8a : mov dh, 0x84 ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8b49
0x00000200001f471f : mov dh, 0x84 ; sbb byte ptr [rax + 0x41002428], dh ; add eax, edx ; jmp 0x200001f4737
0x00000200000c6c2b : mov dh, 0x85 ; ret
0x000002000015ea57 : mov dh, 0x86 ; in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x00000200000b1f75 : mov dh, 0x86 ; ret
0x00000200000d52b0 : mov dh, 0x87 ; ret
0x00000200000d19b2 : mov dh, 0x88 ; ret
0x0000020000069f22 : mov dh, 0x89 ; ret
0x000002000004f6b7 : mov dh, 0x8a ; ret
0x00000200000c68bc : mov dh, 0x8b ; ret
0x00000200000cef94 : mov dh, 0x8b ; ret 0
0x00000200006dc3c8 : mov dh, 0x8b ; ret 0x8348
0x000002000023150c : mov dh, 0x8c ; ret
0x0000020000069482 : mov dh, 0x8d ; ret
0x000002000055a506 : mov dh, 0x8d ; ret 0
0x0000020000099c63 : mov dh, 0x8f ; mov edi, 0xf6000000 ; ret 0xf07
0x00000200000d0df5 : mov dh, 0x91 ; ret
0x00000200000c6cd7 : mov dh, 0x93 ; ret
0x00000200004b8e06 : mov dh, 0x95 ; sar bh, 0x8b ; ret
0x000002000015b643 : mov dh, 0x97 ; jmp 0x2000015b64b
0x000002000022c98c : mov dh, 0x98 ; add eax, 0x8b490000 ; ret 0x8b49
0x0000020000503264 : mov dh, 0x99 ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x4bf
0x00000200005f6556 : mov dh, 0xaa ; ret
0x0000020000021194 : mov dh, 0xab ; add dword ptr [rdx], 0 ; add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x0000020000418cea : mov dh, 0xaf ; ret
0x00000200000d40fa : mov dh, 0xb7 ; ret
0x000002000048f086 : mov dh, 0xba ; ret 0x45ff
0x00000200000c027d : mov dh, 0xbb ; ret
0x00000200003f2a98 : mov dh, 0xc ; or byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x000002000047e1f4 : mov dh, 0xc ; or edi, edi ; ret 0xc103
0x000002000021f053 : mov dh, 0xc0 ; add rsp, 0x28 ; ret
0x000002000007f5a0 : mov dh, 0xc0 ; and eax, 7 ; ret
0x00000200004c1639 : mov dh, 0xc0 ; dec dword ptr [rax - 0x75] ; ret
0x000002000040e316 : mov dh, 0xc0 ; inc dword ptr [rcx + 0x3b] ; ret
0x0000020000115cc7 : mov dh, 0xc0 ; mov cr8, rax ; ret
0x0000020000491fdb : mov dh, 0xc0 ; push rsi ; ret
0x000002000041d7c2 : mov dh, 0xc0 ; ret
0x0000020000030a74 : mov dh, 0xc0 ; shr eax, 3 ; and eax, 4 ; ret
0x000002000010c485 : mov dh, 0xc1 ; and eax, 1 ; ret
0x00000200004309a3 : mov dh, 0xc1 ; dec dword ptr [rbp + rcx*4 + 0x3d] ; ret
0x0000020000039158 : mov dh, 0xc1 ; mov cr8, rax ; ret
0x0000020000069f9f : mov dh, 0xc1 ; ret
0x000002000003ffe8 : mov dh, 0xc2 ; cmovg ecx, eax ; mov byte ptr [r8], cl ; ret
0x00000200006c06b7 : mov dh, 0xc2 ; jmp 0x200006c06c8
0x00000200006c0784 : mov dh, 0xc2 ; jmp 0x200006c0795
0x00000200006c0838 : mov dh, 0xc2 ; jmp 0x200006c0849
0x00000200006c08db : mov dh, 0xc2 ; jmp 0x200006c08ec
0x00000200001db80c : mov dh, 0xc2 ; mov cr8, rax ; ret
0x0000020000069f6e : mov dh, 0xc2 ; ret
0x0000020000061bec : mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b61c0 : mov dh, 0xc6 ; add rsp, 0x50 ; pop r14 ; ret
0x00000200004530fb : mov dh, 0xc6 ; mov rcx, qword ptr [rdi + 0x2e8] ; call rax
0x000002000016f045 : mov dh, 0xc6 ; push qword ptr [rbx] ; leave ; call qword ptr [rax]
0x0000020000026d30 : mov dh, 0xc7 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200001ef275 : mov dh, 0xc8 ; mov cr8, rcx ; mov al, dl ; ret
0x0000020000053845 : mov dh, 0xc9 ; mov cr8, rcx ; ret
0x000002000046c020 : mov dh, 0xcb ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x0000020000182af7 : mov dh, 0xcc ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x00000200000093d3 : mov dh, 0xd ; and bpl, byte ptr [rdi] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000d5c5f : mov dh, 0xd ; ret
0x000002000015c7d8 : mov dh, 0xd ; ret 0x181f
0x000002000039cf66 : mov dh, 0xd2 ; cmove r10d, r11d ; mov al, r10b ; ret
0x00000200005f2f30 : mov dh, 0xd2 ; cmovne edx, r8d ; mov al, dl ; ret
0x000002000049a8de : mov dh, 0xd3 ; and edx, 1 ; call 0x200000bc2a8
0x00000200005bf093 : mov dh, 0xd3 ; call 0x200001e1b9d
0x00000200004a1367 : mov dh, 0xd3 ; call 0x2000043d580
0x000002000049d0c6 : mov dh, 0xd3 ; in eax, -1 ; call 0x200000bd247
0x00000200005a0179 : mov dh, 0xd3 ; mov ecx, 0x81 ; call 0x2000043c479
0x0000020000173293 : mov dh, 0xd4 ; mov rcx, r15 ; call 0x2000014f4c7
0x0000020000184111 : mov dh, 0xd6 ; call rax
0x000002000069214e : mov dh, 0xdf ; ret
0x00000200005d7945 : mov dh, 0xe9 ; push rdx ; jg 0x200005d7948 ; dec dword ptr [rax - 0x75] ; ret
0x00000200005a070f : mov dh, 0xeb ; jmp 0x1ffc311171b
0x00000200007498aa : mov dh, 0xf ; mov edx, 0x5890ae8 ; push rbx ; pop rcx ; ret
0x000002000076e625 : mov dh, 0xff ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000076ac36 : mov dh, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005e2e34 : mov dh, 0xff ; add rsp, 0x28 ; ret
0x0000020000763a91 : mov dh, 0xff ; add rsp, 0x30 ; pop rbx ; ret
0x00000200007857e9 : mov dh, 0xff ; call qword ptr [rax]
0x000002000076e229 : mov dh, 0xff ; mov byte ptr [rip - 0x46b389], 1 ; ret
0x000002000076cef9 : mov dh, 0xff ; mov qword ptr [rip - 0x4910e2], rcx ; ret
0x000002000076e038 : mov dh, 0xff ; mov qword ptr [rip - 0x492441], rcx ; ret
0x000002000076d9da : mov dh, 0xff ; mov qword ptr [rip - 0x493753], rcx ; ret
0x0000020000557a6b : mov dh, 0xff ; nop ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x0000020000557ce0 : mov dh, 0xff ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000557772 : mov dh, 0xff ; nop ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000557f54 : mov dh, 0xff ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x000002000076cf00 : mov dh, 0xff ; ret
0x000002000016f046 : mov dh, 0xff ; xor ecx, ecx ; call qword ptr [rax]
0x00000200000cc7b0 : mov dh, 1 ; cmp eax, edx ; jne 0x200000cc7d0 ; mov rax, r9 ; ret
0x00000200004ce877 : mov dh, 1 ; lea r8d, dword ptr [r9 - 4] ; call rsi
0x0000020000610c56 : mov dh, 3 ; ret 0x48ff
0x00000200000298f6 : mov dh, 4 ; adc byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x00000200005041f1 : mov dh, 4 ; add byte ptr [rax - 0x73], cl ; js 0x200005041e9 ; ret
0x000002000000f60d : mov dh, 4 ; jle 0x2000000f650 ; ret 0x850f
0x0000020000056a25 : mov dh, 4 ; ret 0x1a8
0x0000020000083579 : mov dh, 4 ; ret 0x3ba
0x0000020000187f55 : mov dh, 4 ; ret 0xf024
0x0000020000168650 : mov dh, 4 ; sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x0000020000081c60 : mov dh, 4 ; shr dword ptr [rax + 0x48397401], -0x75 ; ret 0xb948
0x00000200001983fd : mov dh, 4 ; shr dword ptr [rax + 0x48577401], -0x75 ; ret 0xb948
0x000002000059d339 : mov dh, 5 ; loopne 0x2000059d316 ; call rcx
0x000002000076e9f9 : mov dh, 5 ; or ecx, dword ptr [rax] ; sar edi, -0x7d ; loopne 0x2000076ea0c ; ret
0x0000020000232eac : mov dh, 5 ; ret 0x14c5
0x00000200005d1c3a : mov dh, 5 ; ret 0xf75f
0x00000200005129c6 : mov dh, 7 ; ret 0x48ff
0x0000020000405a6b : mov dh, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200006a8c93 : mov dh, al ; call qword ptr [rip - 0x3d94f3]
0x000002000075d3e8 : mov dh, bl ; ret
0x0000020000072ec2 : mov dh, byte ptr [rbx] ; add dword ptr [rax], eax ; test eax, eax ; jns 0x20000072e93 ; jmp 0x20000072eae
0x000002000048f652 : mov dh, byte ptr [rdi] ; ret
0x00000200005ddbb4 : mov dh, dh ; lodsd eax, dword ptr [rsi] ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x0000020000073fdf : mov dh, dl ; wait ; adc byte ptr [rax], al ; ret
0x0000020000685ab3 : mov dil, 0xe8 ; ret 0xffba
0x00000200004d2a42 : mov dl, 0 ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x00000200003e89ea : mov dl, 0x18 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000014c94a : mov dl, 0x1b ; add byte ptr [rax], al ; nop ; ret
0x00000200001bfc32 : mov dl, 0x5f ; adc al, byte ptr [rax] ; ret
0x000002000074924a : mov dl, 0x64 ; ret
0x0000020000182c5a : mov dl, 0x6a ; lock dec dword ptr [rbx + rcx*4 + 0x15] ; ret
0x00000200006b78ea : mov dl, 0x6e ; ret 0xa8ff
0x00000200004afc9a : mov dl, 0x84 ; ret
0x00000200004ca6ce : mov dl, 0xa1 ; idiv bh ; jmp 0x200004ca69c
0x00000200006d9571 : mov dl, 0xa3 ; ret 0x44ff
0x00000200006a2968 : mov dl, 0xa9 ; test edx, edx ; cmp ebp, dword ptr [rsi] ; ret 0x39
0x000002000060702a : mov dl, 0xac ; ret 0x48ff
0x00000200001d5a1a : mov dl, 0xaf ; out dx, al ; dec dword ptr [rax - 0x75] ; ret
0x0000020000767cb5 : mov dl, 0xb6 ; call qword ptr [rbx]
0x0000020000491fda : mov dl, 0xb6 ; sar bh, 0xf6 ; ret
0x00000200004ac19a : mov dl, 0xbf ; ret
0x000002000075e588 : mov dl, 0xc ; ret 0xfff
0x00000200005c5def : mov dl, 0xc6 ; dec dword ptr [rbx - 0x74bbafab] ; ret
0x00000200005207cc : mov dl, 0xcd ; or al, byte ptr [rax] ; ret
0x0000020000561b82 : mov dl, 0xd2 ; out dx, al ; dec dword ptr [rax - 0x75] ; ret
0x0000020000495e00 : mov dl, 0xd9 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005216ca : mov dl, 0xda ; ret 0x8bff
0x00000200005b9a98 : mov dl, 0xed ; dec dword ptr [rax + 0x2b] ; ret 0x8949
0x00000200001776ec : mov dl, 0xed ; dec dword ptr [rcx - 0x7d] ; ret
0x000002000049ad66 : mov dl, 0xfe ; call 0x200000bcbe5
0x00000200004a3b69 : mov dl, 0xfe ; inc dword ptr [rax + rax*8 + 0x58b0974] ; ret 0xe20e
0x00000200004eea18 : mov dl, 0xff ; add rsp, 0x48 ; ret
0x000002000049af5b : mov dl, 0xff ; call 0x200000bcbe5
0x000002000055b5c9 : mov dl, 0xff ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000557980 : mov dl, 0xff ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x000002000055b6a9 : mov dl, 0xff ; nop ; add rsp, 0x48 ; pop rbp ; pop rbx ; ret
0x0000020000557f7e : mov dl, 0xff ; nop ; add rsp, 0x50 ; pop rbp ; ret
0x000002000049fcab : mov dl, 1 ; call 0x200000c0795
0x00000200003cefaa : mov dl, 1 ; jmp 0x200003cef73
0x00000200001bd6a3 : mov dl, 1 ; mov al, dl ; add rsp, 0x28 ; ret
0x00000200000407fc : mov dl, 1 ; mov al, dl ; ret
0x0000020000044781 : mov dl, 1 ; mov rax, qword ptr [rip + 0x33ad1e] ; call rax
0x0000020000044724 : mov dl, 1 ; mov rax, qword ptr [rip + 0x33ad7b] ; call rax
0x000002000003c12e : mov dl, 1 ; mov rax, qword ptr [rip + 0x343371] ; call rax
0x000002000003c0b3 : mov dl, 1 ; mov rax, qword ptr [rip + 0x3433ec] ; call rax
0x000002000006170e : mov dl, 1 ; mov rcx, qword ptr [rdi + 0xd8] ; call qword ptr [rax]
0x00000200004b6983 : mov dl, 1 ; mov rcx, r12 ; call r15
0x00000200004b64f2 : mov dl, 1 ; mov rcx, r12 ; call rsi
0x00000200005befd2 : mov dl, 1 ; mov rcx, rdi ; call 0x200001e1ba0
0x00000200003c81e4 : mov dl, 1 ; mov rcx, rsi ; call rax
0x00000200005201ca : mov dl, 1 ; ret 0x8bff
0x00000200000f1d35 : mov dl, 1 ; test r8, r8 ; jne 0x200000f1d49 ; mov al, r10b ; ret
0x00000200004095da : mov dl, 3 ; ret
0x000002000003fd0e : mov dl, 6 ; add byte ptr [rax], al ; ret
0x000002000014dd4a : mov dl, 7 ; add byte ptr [rax], al ; nop ; ret
0x00000200006776a5 : mov dl, ah ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x000002000004f7fa : mov dl, al ; mov al, dl ; ret
0x0000020000469096 : mov dl, al ; mov al, r10b ; add rsp, 0x58 ; ret
0x00000200001a5958 : mov dl, al ; mov ecx, 5 ; call 0x20000061c29
0x000002000069297a : mov dl, bh ; ret
0x00000200004cadd4 : mov dl, bl ; call 0x200000eebf5
0x000002000007c892 : mov dl, bl ; mov rax, qword ptr [rip + 0x302c0d] ; call rax
0x000002000007c7e4 : mov dl, bl ; mov rax, qword ptr [rip + 0x302cbb] ; call rax
0x000002000007c733 : mov dl, bl ; mov rax, qword ptr [rip + 0x302d6c] ; call rax
0x000002000007c684 : mov dl, bl ; mov rax, qword ptr [rip + 0x302e1b] ; call rax
0x000002000007c58c : mov dl, bl ; mov rax, qword ptr [rip + 0x302f13] ; call rax
0x000002000007c53e : mov dl, bl ; mov rax, qword ptr [rip + 0x302f61] ; call rax
0x00000200003a0d45 : mov dl, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000510832 : mov dl, byte ptr [rdx] ; ret
0x0000020000435703 : mov dl, byte ptr [rsi + 1] ; mov cl, byte ptr [rsi] ; call rax
0x000002000007d6f8 : mov dl, ch ; mov rax, qword ptr [rip + 0x301da7] ; call rax
0x00000200005ae6c2 : mov dl, dh ; call 0x2000045371d
0x00000200005a8f32 : mov dl, dl ; call qword ptr [rbx]
0x0000020000600964 : mov dl, dl ; ret
0x00000200004cadd3 : mov dl, r11b ; call 0x200000eebf6
0x0000020000543220 : mov dr0, eax ; add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret
0x000002000052e0ae : mov dr0, eax ; mov ebx, 0x903d3bff ; jmp rsp
0x000002000018a566 : mov dr0, ecx ; dec dword ptr [rbp + 0x3b] ; ret
0x000002000067ee41 : mov dr0, word ptr [rax - 0x7cffffff] ; call qword ptr [rbx]
0x000002000074bffb : mov dr0, word ptr [rdi - 0x1d3eb701] ; and byte ptr [rax + 0xb], cl ; ret 0x8b48
0x00000200002267d2 : mov dr1, eax ; add eax, 0x2b440000 ; ret 0x96ff
0x00000200000a9a23 : mov dr1, word ptr [rax - 0xa000000] ; ret
0x00000200000136c6 : mov dr1, word ptr [rdx] ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000043843a : mov ds, eax ; ret 0x44ff
0x00000200004b02de : mov ds, edx ; ret
0x000002000066aa22 : mov ds, esi ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000438074 : mov ds, word ptr [rax + 3] ; add byte ptr [rax], al ; call 0x2000005d404
0x000002000013252e : mov ds, word ptr [rax + rax] ; mov qword ptr [rdx], rax ; ret
0x000002000006c19a : mov ds, word ptr [rax - 0x1000000] ; ret
0x00000200000ea793 : mov ds, word ptr [rax - 0x18000000] ; ret
0x0000020000222274 : mov ds, word ptr [rax] ; add al, 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000441a8e : mov ds, word ptr [rdi - 0x38] ; dec dword ptr [rbx - 0x74bbdba4] ; ret
0x0000020000025e82 : mov dword ptr [r10 + 0x10], r9d ; ret
0x00000200000f3c26 : mov dword ptr [r10 + 0x28], eax ; mov dword ptr [r10 + 0x2c], ecx ; jmp 0x200000f3bfc
0x00000200000f3c2a : mov dword ptr [r10 + 0x2c], ecx ; jmp 0x200000f3bf8
0x00000200001f6643 : mov dword ptr [r10 + 0x48], 0x8b410000 ; ret
0x00000200000866fa : mov dword ptr [r10 + 2], eax ; ret
0x0000020000488df5 : mov dword ptr [r10 + 2], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003d9de7 : mov dword ptr [r10 + 2], ecx ; xor eax, eax ; ret
0x00000200001e33bd : mov dword ptr [r10 + 4], r9d ; ret
0x0000020000109a38 : mov dword ptr [r10], 0 ; ret
0x00000200001f43b4 : mov dword ptr [r10], 0xffffffff ; ret
0x00000200000437ff : mov dword ptr [r10], eax ; call r10
0x00000200001f2cbb : mov dword ptr [r10], eax ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000086c68 : mov dword ptr [r10], eax ; xor eax, eax ; mov qword ptr [r8 + 8], rcx ; ret
0x000002000005164c : mov dword ptr [r10], eax ; xor eax, eax ; ret
0x0000020000740c85 : mov dword ptr [r10], ecx ; mov rcx, r10 ; jmp rcx
0x0000020000074147 : mov dword ptr [r10], ecx ; ret
0x0000020000647d4c : mov dword ptr [r10], r9d ; mov al, 1 ; ret
0x0000020000057dab : mov dword ptr [r11], eax ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000049d670 : mov dword ptr [r12], edi ; call 0x200000c078f
0x000002000044339f : mov dword ptr [r13], eax ; mov ecx, eax ; call 0x2000006a2e5
0x0000020000523b10 : mov dword ptr [r14 + 2], eax ; call 0x2000014f187
0x0000020000106f95 : mov dword ptr [r14], eax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200005c0622 : mov dword ptr [r14], ecx ; jmp 0x200004b3da5
0x000002000042c88d : mov dword ptr [r14], r9d ; add rsp, 0x20 ; pop r14 ; ret
0x00000200003b69d2 : mov dword ptr [r15 + 0xc], eax ; jmp 0x200003b69e7
0x000002000040cab2 : mov dword ptr [r15], eax ; mov edi, 0xc0000023 ; jmp 0x2000040ca87
0x00000200000f1eb9 : mov dword ptr [r8 + 0x10], eax ; mov al, 1 ; ret
0x00000200001b13a4 : mov dword ptr [r8 + 0x28], eax ; ret
0x0000020000024db6 : mov dword ptr [r8 + 0x30], ebx ; mov rcx, r10 ; call r9
0x0000020000212dea : mov dword ptr [r8 + 0x30], ecx ; xor eax, eax ; mov dword ptr [r9], ecx ; ret
0x000002000013313e : mov dword ptr [r8 + 0x5c], eax ; ret
0x00000200006c4d47 : mov dword ptr [r8 + 0xa], ecx ; mov rax, r8 ; ret
0x00000200001cf5ae : mov dword ptr [r8 + 0xa], ecx ; ret
0x00000200004ec554 : mov dword ptr [r8 + 0xc], eax ; ret
0x000002000041dbd5 : mov dword ptr [r8 + 0xc], eax ; xor eax, eax ; ret
0x000002000010df32 : mov dword ptr [r8 + 0xc], ecx ; ret
0x00000200001b20d2 : mov dword ptr [r8 + 0xc], edx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000587f99 : mov dword ptr [r8 + 0xc], r11d ; ret
0x00000200001b949b : mov dword ptr [r8 + 2], ecx ; mov al, 1 ; ret
0x000002000044cb03 : mov dword ptr [r8 + 2], r9d ; xor eax, eax ; ret
0x0000020000416851 : mov dword ptr [r8 + 4], edx ; ret
0x0000020000528075 : mov dword ptr [r8 + 4], edx ; xor eax, eax ; ret
0x000002000003ce2b : mov dword ptr [r8 + 4], r10d ; ret
0x00000200000f1610 : mov dword ptr [r8 + 8], eax ; jmp 0x200000f15dd
0x000002000041eb8f : mov dword ptr [r8 + 8], eax ; xor eax, eax ; ret
0x000002000041684c : mov dword ptr [r8 + 8], edx ; mov word ptr [r8 + 4], dx ; ret
0x00000200001a6869 : mov dword ptr [r8 + 8], edx ; test edx, edx ; jne 0x200001a6863 ; ret
0x00000200006c0e37 : mov dword ptr [r8 + rcx*4], 1 ; ret
0x00000200006c0ea1 : mov dword ptr [r8 + rcx*4], edx ; ret
0x00000200003997f3 : mov dword ptr [r8], 0x1000 ; xor eax, eax ; ret
0x000002000004b1a7 : mov dword ptr [r8], 0x1429 ; xor eax, eax ; ret
0x00000200003fce7b : mov dword ptr [r8], eax ; add rsp, 0x28 ; ret
0x00000200005191cc : mov dword ptr [r8], eax ; mov al, 1 ; ret
0x0000020000668469 : mov dword ptr [r8], eax ; mov eax, r9d ; ret
0x000002000003244f : mov dword ptr [r8], eax ; ret
0x0000020000017743 : mov dword ptr [r8], eax ; xor eax, eax ; ret
0x00000200003a33ee : mov dword ptr [r8], ecx ; add eax, ecx ; ret
0x000002000010b36c : mov dword ptr [r8], ecx ; mov eax, edx ; ret
0x00000200006bafaa : mov dword ptr [r8], ecx ; ret
0x00000200001fdd86 : mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x0000020000216afa : mov dword ptr [r8], edx ; ret
0x000002000049cf99 : mov dword ptr [r8], esi ; xor al, al ; pop r14 ; pop rsi ; ret
0x00000200000f045a : mov dword ptr [r8], r9d ; jmp 0x200000f0426
0x00000200004d5dfa : mov dword ptr [r8], r9d ; mov eax, 1 ; ret
0x00000200000f7c70 : mov dword ptr [r8], r9d ; ret
0x000002000004a63e : mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x00000200006106f2 : mov dword ptr [r9 + 0x10], ecx ; add rsp, 0x38 ; ret
0x00000200000299c7 : mov dword ptr [r9 + 0x18], eax ; ret
0x00000200000f3d6a : mov dword ptr [r9 + 0x18], r8d ; mov dword ptr [r9 + 0x1c], ecx ; ret
0x00000200000f3d6e : mov dword ptr [r9 + 0x1c], ecx ; ret
0x0000020000149a46 : mov dword ptr [r9 + 0x48], r10d ; mov eax, 3 ; ret
0x000002000041e700 : mov dword ptr [r9 + 0x938], eax ; ret
0x000002000041e6f7 : mov dword ptr [r9 + 0x938], r8d ; ret
0x00000200004c63d6 : mov dword ptr [r9 + 4], 0x10 ; ret
0x00000200004c63ca : mov dword ptr [r9 + 4], eax ; ret
0x000002000007b783 : mov dword ptr [r9 + 4], r10d ; mov dword ptr [r9], eax ; ret
0x0000020000634078 : mov dword ptr [r9 + 8], edx ; add rsp, 0x28 ; ret
0x00000200006340b6 : mov dword ptr [r9 + 8], r8d ; add rsp, 0x28 ; ret
0x00000200005f8d35 : mov dword ptr [r9], 0x28 ; mov eax, ecx ; ret
0x00000200006a8db3 : mov dword ptr [r9], eax ; call qword ptr [rip - 0x3d9624]
0x00000200004192e8 : mov dword ptr [r9], eax ; mov eax, 1 ; ret
0x0000020000015861 : mov dword ptr [r9], eax ; ret
0x00000200001ab9ff : mov dword ptr [r9], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000652b74 : mov dword ptr [r9], ecx ; mov eax, edx ; ret
0x0000020000652bfc : mov dword ptr [r9], ecx ; mov eax, r11d ; ret
0x0000020000212df0 : mov dword ptr [r9], ecx ; ret
0x00000200004860bd : mov dword ptr [r9], edx ; mov al, 1 ; ret
0x0000020000216790 : mov dword ptr [r9], r11d ; ret
0x00000200001e862f : mov dword ptr [r9], r8d ; mov al, cl ; ret
0x0000020000545b0f : mov dword ptr [r9], r8d ; mov eax, r10d ; ret
0x0000020000545f8a : mov dword ptr [rax + 0x1000000], ebx ; ret
0x00000200000f1eba : mov dword ptr [rax + 0x10], eax ; mov al, 1 ; ret
0x00000200002032e9 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [r8], rax ; ret
0x00000200000872ae : mov dword ptr [rax + 0x10], ecx ; mov rbx, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x0000020000438fe3 : mov dword ptr [rax + 0x10], ecx ; ret
0x00000200006b68d5 : mov dword ptr [rax + 0x10], edx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002fed9 : mov dword ptr [rax + 0x18], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006b2a74 : mov dword ptr [rax + 0x18], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000002c25f : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rax + 0x1c], r11d ; mov eax, r10d ; pop rbx ; ret
0x0000020000784892 : mov dword ptr [rax + 0x1c], ebx ; call 0x2000014f189
0x000002000002c263 : mov dword ptr [rax + 0x1c], ebx ; mov eax, r10d ; pop rbx ; ret
0x000002000002c262 : mov dword ptr [rax + 0x1c], r11d ; mov eax, r10d ; pop rbx ; ret
0x0000020000159583 : mov dword ptr [rax + 0x28], eax ; ret
0x00000200001e23ff : mov dword ptr [rax + 0x28], ecx ; ret
0x0000020000024db7 : mov dword ptr [rax + 0x30], ebx ; mov rcx, r10 ; call r9
0x0000020000212deb : mov dword ptr [rax + 0x30], ecx ; xor eax, eax ; mov dword ptr [r9], ecx ; ret
0x000002000052c8f3 : mov dword ptr [rax + 0x50], edx ; ret
0x000002000013313f : mov dword ptr [rax + 0x5c], eax ; ret
0x000002000013eaa2 : mov dword ptr [rax + 0x608], edx ; ret
0x00000200000bc56a : mov dword ptr [rax + 0x670], ecx ; ret
0x00000200001b8311 : mov dword ptr [rax + 0x678], edx ; ret
0x00000200000ebb2a : mov dword ptr [rax + 0x740], ecx ; ret
0x00000200006cc01a : mov dword ptr [rax + 0x8168], eax ; ret
0x00000200006cc019 : mov dword ptr [rax + 0x8168], r8d ; ret
0x00000200006c4d48 : mov dword ptr [rax + 0xa], ecx ; mov rax, r8 ; ret
0x00000200001cf5af : mov dword ptr [rax + 0xa], ecx ; ret
0x00000200004ec555 : mov dword ptr [rax + 0xc], eax ; ret
0x000002000041dbd6 : mov dword ptr [rax + 0xc], eax ; xor eax, eax ; ret
0x0000020000587f9a : mov dword ptr [rax + 0xc], ebx ; ret
0x000002000010df33 : mov dword ptr [rax + 0xc], ecx ; ret
0x00000200001b20d3 : mov dword ptr [rax + 0xc], edx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000060eae7 : mov dword ptr [rax + 0xc], esp ; call 0x20000231ce6
0x000002000060eae6 : mov dword ptr [rax + 0xc], r12d ; call 0x20000231ce7
0x000002000009cce7 : mov dword ptr [rax + 0xf], 0x4ca85 ; add dh, dh ; ret
0x00000200001b949c : mov dword ptr [rax + 2], ecx ; mov al, 1 ; ret
0x000002000044cb04 : mov dword ptr [rax + 2], ecx ; xor eax, eax ; ret
0x00000200006b79da : mov dword ptr [rax + 4], edx ; add rsp, 0x28 ; ret
0x00000200000376a6 : mov dword ptr [rax + 4], edx ; ret
0x0000020000528076 : mov dword ptr [rax + 4], edx ; xor eax, eax ; ret
0x000002000062faf7 : mov dword ptr [rax + 8], eax ; cmp dword ptr [r9], r11d ; ja 0x2000062fab9 ; ret
0x00000200000f1611 : mov dword ptr [rax + 8], eax ; jmp 0x200000f15dc
0x00000200000faaa7 : mov dword ptr [rax + 8], eax ; mov eax, 1 ; ret
0x0000020000015d25 : mov dword ptr [rax + 8], eax ; mov qword ptr [rax], rax ; ret
0x000002000003745f : mov dword ptr [rax + 8], eax ; ret
0x000002000041eb90 : mov dword ptr [rax + 8], eax ; xor eax, eax ; ret
0x000002000060fd61 : mov dword ptr [rax + 8], ebx ; call 0x20000231016
0x000002000002939b : mov dword ptr [rax + 8], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006bf1e1 : mov dword ptr [rax + 8], ecx ; and qword ptr [rax + 0x10], 0 ; ret
0x00000200002032e6 : mov dword ptr [rax + 8], ecx ; mov dword ptr [rax + 0x10], ecx ; mov qword ptr [r8], rax ; ret
0x000002000010cbaf : mov dword ptr [rax + 8], ecx ; mov qword ptr [rcx], r9 ; mov rax, r10 ; ret
0x000002000002362e : mov dword ptr [rax + 8], ecx ; mov qword ptr [rdx], rcx ; ret
0x0000020000086c6e : mov dword ptr [rax + 8], ecx ; ret
0x000002000046f539 : mov dword ptr [rax + 8], ecx ; xor eax, eax ; ret
0x00000200004c80b2 : mov dword ptr [rax + 8], edx ; inc dword ptr [rcx + 0x80] ; ret
0x000002000011b7e5 : mov dword ptr [rax + 8], edx ; mov qword ptr [rcx], rdx ; ret
0x000002000041684d : mov dword ptr [rax + 8], edx ; mov word ptr [r8 + 4], dx ; ret
0x0000020000176899 : mov dword ptr [rax + 8], edx ; or dword ptr [rdx + 0x38], 1 ; inc dword ptr [rcx] ; ret
0x00000200001bbce4 : mov dword ptr [rax + 8], edx ; ret
0x00000200001a686a : mov dword ptr [rax + 8], edx ; test edx, edx ; jne 0x200001a6862 ; ret
0x00000200001a1d62 : mov dword ptr [rax + rax*8 + 0x21], edx ; cmp ecx, dword ptr [r8] ; jb 0x200001a1d52 ; ret
0x00000200006c0e38 : mov dword ptr [rax + rcx*4], 1 ; ret
0x00000200006c0ea2 : mov dword ptr [rax + rcx*4], edx ; ret
0x00000200001a6fb3 : mov dword ptr [rax + rcx*8 + 0x28], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000defeb : mov dword ptr [rax + rdx*8 + 8], eax ; ret
0x000002000001a5ea : mov dword ptr [rax + rdx*8], eax ; inc edx ; jmp 0x2000001a5e1
0x000002000010ee9c : mov dword ptr [rax - 0x10], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043c5f7 : mov dword ptr [rax - 0x17fffffd], esi ; ret
0x000002000075045e : mov dword ptr [rax - 0x17ffffff], ecx ; push rsp ; ret
0x00000200004c1ae1 : mov dword ptr [rax - 0x18000000], edi ; push rbp ; ret 0x48ff
0x000002000048f20a : mov dword ptr [rax - 0x73], ecx ; add al, 0xc8 ; ret
0x0000020000407145 : mov dword ptr [rax - 0x75000000], ebx ; ret 0xc148
0x00000200006b7cb2 : mov dword ptr [rax - 0x75000000], esp ; ret 0xc141
0x000002000060ac22 : mov dword ptr [rax - 0x7d], ecx ; ret
0x0000020000122f7e : mov dword ptr [rax - 0xff9073], esi ; ret
0x00000200003997f4 : mov dword ptr [rax], 0x1000 ; xor eax, eax ; ret
0x000002000004b1a8 : mov dword ptr [rax], 0x1429 ; xor eax, eax ; ret
0x000002000022955a : mov dword ptr [rax], 0x48b87974 ; mov eax, edx ; jmp 0x2000022956d
0x000002000022a205 : mov dword ptr [rax], 0x48b87974 ; mov eax, edx ; jmp 0x2000022a218
0x000002000014f6b0 : mov dword ptr [rax], 0xc000001d ; xor eax, eax ; ret
0x000002000014f6e4 : mov dword ptr [rax], 0xc0000096 ; xor eax, eax ; ret
0x0000020000141a95 : mov dword ptr [rax], 0xe2e90000 ; ret
0x0000020000117be3 : mov dword ptr [rax], 1 ; ret
0x000002000041eb68 : mov dword ptr [rax], 1 ; xor eax, eax ; ret
0x0000020000117c57 : mov dword ptr [rax], 3 ; ret
0x00000200000f1f35 : mov dword ptr [rax], 4 ; ret
0x0000020000464025 : mov dword ptr [rax], 9 ; mov qword ptr [rdx], rax ; ret
0x0000020000216a21 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; mov al, r11b ; ret
0x00000200000a7c58 : mov dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; sbb byte ptr [rax - 0x7b], r9b ; ret
0x000002000054417a : mov dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000024503 : mov dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000032bd1 : mov dword ptr [rax], eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003fce7c : mov dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200005191cd : mov dword ptr [rax], eax ; mov al, 1 ; ret
0x00000200000577b5 : mov dword ptr [rax], eax ; mov byte ptr [rdx + 0x2a], 0 ; ret
0x0000020000067f6f : mov dword ptr [rax], eax ; mov dword ptr [rcx + 0x18], r8d ; ret
0x00000200006c1cc2 : mov dword ptr [rax], eax ; mov eax, 1 ; ret
0x000002000011a937 : mov dword ptr [rax], eax ; mov eax, r11d ; add rsp, 0x38 ; ret
0x0000020000462a01 : mov dword ptr [rax], eax ; mov eax, r9d ; ret
0x0000020000015d29 : mov dword ptr [rax], eax ; ret
0x0000020000017652 : mov dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200004c6923 : mov dword ptr [rax], ebp ; call 0x200000e9465
0x000002000019ac71 : mov dword ptr [rax], ebx ; mov qword ptr [rbp - 8], rbx ; jmp 0x200000e6f4e
0x00000200001acf79 : mov dword ptr [rax], ebx ; mov rax, qword ptr [rip + 0x1254f6] ; call rax
0x00000200001a77a0 : mov dword ptr [rax], ebx ; ret
0x000002000063d4b9 : mov dword ptr [rax], ecx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x00000200003a33ef : mov dword ptr [rax], ecx ; add eax, ecx ; ret
0x000002000003c90b : mov dword ptr [rax], ecx ; add rsp, 0x28 ; ret
0x00000200000f045b : mov dword ptr [rax], ecx ; jmp 0x200000f0425
0x00000200004c0ce9 : mov dword ptr [rax], ecx ; jmp 0x200004c0cb3
0x00000200006b72e7 : mov dword ptr [rax], ecx ; mov al, 1 ; ret
0x00000200000eb50e : mov dword ptr [rax], ecx ; mov al, r9b ; ret
0x00000200004d5dfb : mov dword ptr [rax], ecx ; mov eax, 1 ; ret
0x000002000010b36d : mov dword ptr [rax], ecx ; mov eax, edx ; ret
0x00000200004644d7 : mov dword ptr [rax], ecx ; mov eax, r9d ; ret
0x00000200001bbce1 : mov dword ptr [rax], ecx ; mov qword ptr [r8 + 8], rdx ; ret
0x000002000039ce79 : mov dword ptr [rax], ecx ; mov qword ptr [rdx + 8], rcx ; dec dword ptr [rcx + 0x64] ; ret
0x00000200000548eb : mov dword ptr [rax], ecx ; mov qword ptr [rdx + 8], rcx ; ret
0x00000200001fb616 : mov dword ptr [rax], ecx ; mov qword ptr [rip + 0xd56a9], rcx ; ret
0x00000200004c922e : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x1ecc9f], rcx ; ret
0x00000200004fa2c7 : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x202628], rcx ; ret
0x00000200005c6eb6 : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x2ea8f7], rcx ; ret
0x00000200006c5766 : mov dword ptr [rax], ecx ; mov qword ptr [rip - 0x3ed037], rcx ; ret
0x00000200000529c9 : mov dword ptr [rax], ecx ; ret
0x000002000075e9df : mov dword ptr [rax], ecx ; ret 0x33ff
0x000002000005c819 : mov dword ptr [rax], ecx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f2bd1 : mov dword ptr [rax], ecx ; xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000001e69c : mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x00000200001c2ad5 : mov dword ptr [rax], edi ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001afca6 : mov dword ptr [rax], edi ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000124d58 : mov dword ptr [rax], edi ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000212d8f : mov dword ptr [rax], edi ; mov eax, ecx ; add rsp, 0x30 ; pop rdi ; ret
0x000002000002c1e5 : mov dword ptr [rax], edx ; mov al, 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000ebe8c : mov dword ptr [rax], edx ; mov eax, r8d ; ret
0x0000020000169184 : mov dword ptr [rax], edx ; mov qword ptr [r9 + 0x48], rdx ; ret
0x0000020000040573 : mov dword ptr [rax], edx ; ret
0x000002000001beed : mov dword ptr [rax], edx ; test r9d, r9d ; setne al ; ret
0x000002000049cf9a : mov dword ptr [rax], esi ; xor al, al ; pop r14 ; pop rsi ; ret
0x00000200001072fa : mov dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xb849
0x000002000048da46 : mov dword ptr [rax], esp ; or eax, dword ptr [rax] ; add al, ch ; and byte ptr [rdi], bl ; ret
0x000002000048dfdf : mov dword ptr [rax], esp ; or eax, dword ptr [rax] ; add al, ch ; ja 0x2000048e008 ; ret
0x000002000049df6f : mov dword ptr [rax], esp ; or eax, dword ptr [rax] ; add al, ch ; out 0x19, eax ; ret 0x48ff
0x00000200004807fc : mov dword ptr [rax], esp ; or eax, dword ptr [rax] ; add al, ch ; pop rdx ; int1 ; ret
0x0000020000480583 : mov dword ptr [rax], esp ; or eax, dword ptr [rax] ; add al, ch ; sal ebx, cl ; ret
0x000002000047febb : mov dword ptr [rax], esp ; or eax, dword ptr [rax] ; add al, ch ; wait ; cli ; ret
0x000002000049df32 : mov dword ptr [rax], esp ; or eax, dword ptr [rax] ; add al, ch ; xor al, 0x1a ; ret 0x48ff
0x000002000048db34 : mov dword ptr [rax], esp ; or eax, dword ptr [rax] ; add al, ch ; xor bl, byte ptr [rsi] ; ret
0x000002000003c90a : mov dword ptr [rax], r9d ; add rsp, 0x28 ; ret
0x000002000059413f : mov dword ptr [rbp + 0x10], ebp ; call 0x200001403e5
0x000002000055b7f0 : mov dword ptr [rbp + 0x20], ebx ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200005dd4cf : mov dword ptr [rbp + 0x2f], ecx ; mov qword ptr [rbp + 0x3f], r9 ; call 0x20000089719
0x00000200005b4bd5 : mov dword ptr [rbp + 0x33], 0x24894ce4 ; ret
0x0000020000607d3b : mov dword ptr [rbp + 0x38], edx ; xor edx, edx ; call 0x20000231018
0x0000020000225f20 : mov dword ptr [rbp + 0x38], esi ; jmp 0x200002221d6
0x00000200005dd4d3 : mov dword ptr [rbp + 0x3f], ecx ; call 0x20000089715
0x0000020000532b40 : mov dword ptr [rbp + 0x67], eax ; jmp 0x20000532b0c
0x00000200000bff8b : mov dword ptr [rbp + 0x7f], eax ; call 0x200000bd9b9
0x000002000052aa41 : mov dword ptr [rbp + rax*2 - 0x78], esp ; call 0x2000014f4c7
0x000002000052aa40 : mov dword ptr [rbp + rax*2 - 0x78], r12d ; call 0x2000014f4c8
0x0000020000524a93 : mov dword ptr [rbp + rcx*4 + 0x42], 0xaa23e848 ; ret 0x45ff
0x000002000017eb56 : mov dword ptr [rbp + rcx*4 + 0x58], 0x450f4101 ; ret
0x00000200000464fb : mov dword ptr [rbp - 0x10], eax ; call 0x200000b27d5
0x0000020000469b7c : mov dword ptr [rbp - 0x18], ebx ; call r10
0x0000020000469b7b : mov dword ptr [rbp - 0x18], r11d ; call r10
0x000002000015a031 : mov dword ptr [rbp - 0x20], eax ; mov eax, r10d ; jmp 0x2000015a041
0x000002000058e1ff : mov dword ptr [rbp - 0x25], edi ; call 0x200001bc7e2
0x000002000058e1a8 : mov dword ptr [rbp - 0x29], edi ; call 0x200001bc7e2
0x000002000051cbe5 : mov dword ptr [rbp - 0x31], edi ; call 0x20000141506
0x0000020000469b78 : mov dword ptr [rbp - 0x38], esi ; mov dword ptr [rbp - 0x18], r11d ; call r10
0x00000200004c7b9f : mov dword ptr [rbp - 0x40], edi ; mov rcx, rax ; call 0x200000ecded
0x0000020000464496 : mov dword ptr [rbp - 0x40], esi ; call r10
0x00000200003dd9e3 : mov dword ptr [rbp - 0x48], ebx ; call r14
0x0000020000504c7f : mov dword ptr [rbp - 0x50], eax ; call 0x20000134776
0x00000200004e0760 : mov dword ptr [rbp - 0x51], ebx ; call rax
0x0000020000517e7e : mov dword ptr [rbp - 0x58], esi ; call 0x20000140c46
0x0000020000515230 : mov dword ptr [rbp - 0x60], esi ; call 0x20000140546
0x000002000060898f : mov dword ptr [rbp - 0x69], ebx ; call 0x20000231ce6
0x000002000060b5e0 : mov dword ptr [rbp - 0x70], eax ; call 0x20000231ce6
0x0000020000609edc : mov dword ptr [rbp - 0x71], eax ; call 0x20000231ce6
0x0000020000510bb4 : mov dword ptr [rbp - 0x74fff7b0], edi ; ret
0x0000020000585473 : mov dword ptr [rbp - 1], 1 ; call 0x2000005168d
0x0000020000636cee : mov dword ptr [rbp - 3], 0x2b480000 ; ret 0xc766
0x000002000019ac74 : mov dword ptr [rbp - 8], ebx ; jmp 0x200000e6f4b
0x00000200004433a0 : mov dword ptr [rbp], eax ; mov ecx, eax ; call 0x2000006a2e4
0x000002000045a5d2 : mov dword ptr [rbp], esi ; jmp 0x200004595b6
0x0000020000052aa7 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000d1f22 : mov dword ptr [rbx + 0x10], eax ; jmp 0x200000d1eee
0x000002000054187c : mov dword ptr [rbx + 0x14], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000424785 : mov dword ptr [rbx + 0x150], esi ; call 0x2000004585d
0x000002000014f73e : mov dword ptr [rbx + 0x17], ecx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200000b4074 : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003d42b5 : mov dword ptr [rbx + 0x1c], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000540ebe : mov dword ptr [rbx + 0x1c], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000540ebd : mov dword ptr [rbx + 0x1c], r9d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c02e7 : mov dword ptr [rbx + 0x20], edi ; call 0x200000bd9b9
0x0000020000415e46 : mov dword ptr [rbx + 0x28], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000530751 : mov dword ptr [rbx + 0x28], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000774e40 : mov dword ptr [rbx + 0x28], ecx ; mov rcx, rdi ; call 0x20000011108
0x000002000001527b : mov dword ptr [rbx + 0x2c], edx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001129cd : mov dword ptr [rbx + 0x30], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f707e : mov dword ptr [rbx + 0x30], eax ; jmp 0x200000f704a
0x0000020000527c4d : mov dword ptr [rbx + 0x30], edx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000044c59d : mov dword ptr [rbx + 0x38], ecx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000029c3 : mov dword ptr [rbx + 0x40], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000075476 : mov dword ptr [rbx + 0x58], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003fcb92 : mov dword ptr [rbx + 0x70], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006464f6 : mov dword ptr [rbx + 0xa], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006464f5 : mov dword ptr [rbx + 0xa], r9d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004247b3 : mov dword ptr [rbx + 4], eax ; mov rcx, rbx ; call 0x2000005168d
0x00000200003de4cb : mov dword ptr [rbx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004fda19 : mov dword ptr [rbx + 8], eax ; jmp 0x200004fd9e5
0x000002000007bb10 : mov dword ptr [rbx + 8], eax ; mov qword ptr [rcx + rdx*8 + 0x10], r11 ; ret
0x000002000002f621 : mov dword ptr [rbx + 8], eax ; pop r15 ; pop r14 ; pop r12 ; ret
0x0000020000022cf5 : mov dword ptr [rbx + 8], ecx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000041ee41 : mov dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dword ptr [rax], eax ; ret
0x0000020000111475 : mov dword ptr [rbx - 0x18], eax ; call r10
0x0000020000694f1c : mov dword ptr [rbx - 0x18], edi ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x00000200001e75ac : mov dword ptr [rbx - 0x20], ebx ; mov dword ptr [rsp + 0x40], ebx ; call rax
0x0000020000563867 : mov dword ptr [rbx - 0x27], edi ; call qword ptr [rcx]
0x00000200003c07b1 : mov dword ptr [rbx - 0x38], eax ; call 0x200004aca85
0x0000020000493892 : mov dword ptr [rbx - 0x40], edi ; call 0x200000b9056
0x0000020000694f20 : mov dword ptr [rbx - 0x48], eax ; call rbx
0x0000020000419f01 : mov dword ptr [rbx - 0x48], eax ; lea r8d, dword ptr [r9 - 1] ; call rbx
0x00000200004f129c : mov dword ptr [rbx - 0x48], eax ; lea r8d, dword ptr [r9 - 2] ; call qword ptr [rbx]
0x0000020000694e85 : mov dword ptr [rbx - 0x48], eax ; lea r8d, dword ptr [r9 - 2] ; call rbx
0x0000020000104247 : mov dword ptr [rbx - 0x74b7fffa], ecx ; ret
0x00000200004dff11 : mov dword ptr [rbx - 0x75000000], ecx ; ret
0x00000200003c5aa8 : mov dword ptr [rbx], 0x834800f0 ; ret
0x0000020000015dd0 : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ed17a : mov dword ptr [rbx], eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000042299 : mov dword ptr [rbx], eax ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000426346 : mov dword ptr [rbx], eax ; jmp 0x2000042630f
0x00000200001f4a52 : mov dword ptr [rbx], eax ; mov al, 1 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200006904be : mov dword ptr [rbx], eax ; mov eax, ecx ; add rsp, 0x60 ; pop rbx ; ret
0x00000200004fda16 : mov dword ptr [rbx], eax ; mov qword ptr [rbx + 8], rax ; jmp 0x200004fd9e8
0x0000020000087140 : mov dword ptr [rbx], eax ; mov rbx, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x000002000010e20b : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000135cb5 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000057dac : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000407eaf : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000463e28 : mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x00000200001ab173 : mov dword ptr [rbx], ebp ; mov rax, qword ptr [rip + 0x1272fc] ; call rax
0x000002000021cef2 : mov dword ptr [rbx], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006ab80a : mov dword ptr [rbx], ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001ad333 : mov dword ptr [rbx], ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003876f : mov dword ptr [rbx], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005f8c06 : mov dword ptr [rbx], ecx ; add rsp, 0x60 ; pop rbx ; ret
0x00000200003a2164 : mov dword ptr [rbx], ecx ; ret
0x0000020000132cb8 : mov dword ptr [rbx], ecx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001add06 : mov dword ptr [rbx], edi ; mov rax, qword ptr [rip + 0x124769] ; call rax
0x0000020000113a1c : mov dword ptr [rbx], edx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001a76f6 : mov dword ptr [rbx], edx ; add rsp, 0x28 ; ret
0x0000020000123a54 : mov dword ptr [rbx], edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001af1dc : mov dword ptr [rbx], esi ; mov rax, qword ptr [rip + 0x123293] ; call rax
0x0000020000113a1b : mov dword ptr [rbx], r10d ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021af75 : mov dword ptr [rbx], r10d ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200006ab809 : mov dword ptr [rbx], r11d ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000522f9a : mov dword ptr [rcx + 0x10], eax ; mov dword ptr [rcx + 0x18], eax ; ret
0x0000020000115f74 : mov dword ptr [rcx + 0x10], eax ; mov qword ptr [rcx + 8], r8 ; ret
0x0000020000541455 : mov dword ptr [rcx + 0x10], eax ; mov qword ptr [rcx + 8], rcx ; ret
0x000002000014f719 : mov dword ptr [rcx + 0x10], eax ; ret
0x00000200004188d2 : mov dword ptr [rcx + 0x10], eax ; xor eax, eax ; ret
0x0000020000016942 : mov dword ptr [rcx + 0x10], ebx ; add rsp, 0x28 ; ret
0x00000200006106f3 : mov dword ptr [rcx + 0x10], ecx ; add rsp, 0x38 ; ret
0x00000200006c0596 : mov dword ptr [rcx + 0x10], ecx ; mov qword ptr [rcx], rdx ; ret
0x00000200000d3028 : mov dword ptr [rcx + 0x10], edi ; pop rdi ; ret
0x000002000062c38d : mov dword ptr [rcx + 0x10], edx ; add qword ptr [r10], 0x18 ; ret
0x0000020000641ac2 : mov dword ptr [rcx + 0x10], edx ; and qword ptr [rcx + 8], 0 ; ret
0x00000200001c1c25 : mov dword ptr [rcx + 0x10], edx ; mov qword ptr [rcx + 8], r8 ; ret
0x00000200001e463f : mov dword ptr [rcx + 0x10], edx ; ret
0x000002000002d628 : mov dword ptr [rcx + 0x10], edx ; xor eax, eax ; ret
0x0000020000740cd2 : mov dword ptr [rcx + 0x128], eax ; xor eax, eax ; ret
0x0000020000546064 : mov dword ptr [rcx + 0x14], eax ; ret
0x000002000012fdf6 : mov dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x00000200001291f9 : mov dword ptr [rcx + 0x164], eax ; ret
0x0000020000022230 : mov dword ptr [rcx + 0x168], eax ; ret
0x00000200000f3d6b : mov dword ptr [rcx + 0x18], eax ; mov dword ptr [r9 + 0x1c], ecx ; ret
0x0000020000121f64 : mov dword ptr [rcx + 0x18], eax ; mov dword ptr [rcx + 8], edx ; ret
0x00000200001499c7 : mov dword ptr [rcx + 0x18], eax ; mov eax, 2 ; ret
0x000002000065bd52 : mov dword ptr [rcx + 0x18], eax ; mov eax, dword ptr [rdx + 0x7c] ; mov dword ptr [rcx + 0x1c], eax ; ret
0x0000020000066d1b : mov dword ptr [rcx + 0x18], eax ; mov qword ptr [rcx + 0x38], r8 ; ret
0x0000020000002fc4 : mov dword ptr [rcx + 0x18], eax ; ret
0x000002000003bddb : mov dword ptr [rcx + 0x18], ecx ; mov dword ptr [rcx], 2 ; ret
0x000002000004385b : mov dword ptr [rcx + 0x18], ecx ; mov dword ptr [rcx], 3 ; ret
0x00000200000dbbef : mov dword ptr [rcx + 0x18], ecx ; ret
0x000002000062c44c : mov dword ptr [rcx + 0x18], edx ; add qword ptr [r10], 0x28 ; ret
0x00000200000153a1 : mov dword ptr [rcx + 0x18], edx ; mov qword ptr [rcx + 0x20], r8 ; ret
0x0000020000066cfc : mov dword ptr [rcx + 0x18], edx ; mov qword ptr [rcx + 0x38], rdx ; ret
0x00000200000d93a4 : mov dword ptr [rcx + 0x18], edx ; ret
0x000002000003bf3d : mov dword ptr [rcx + 0x18], r8d ; ret
0x000002000054624a : mov dword ptr [rcx + 0x1c], eax ; ret
0x00000200000f3d6f : mov dword ptr [rcx + 0x1c], ecx ; ret
0x00000200000153a5 : mov dword ptr [rcx + 0x20], eax ; ret
0x00000200006b5a5d : mov dword ptr [rcx + 0x20], ecx ; ret
0x00000200000414fb : mov dword ptr [rcx + 0x20], edx ; ret
0x00000200001f64f0 : mov dword ptr [rcx + 0x28], eax ; mov al, 1 ; ret
0x0000020000117c54 : mov dword ptr [rcx + 0x28], eax ; mov dword ptr [rax], 3 ; ret
0x00000200001c815e : mov dword ptr [rcx + 0x298], edx ; ret
0x00000200001be0ec : mov dword ptr [rcx + 0x29fc], eax ; mov eax, edx ; jmp 0x200001be0b2
0x00000200001be23a : mov dword ptr [rcx + 0x29fc], eax ; mov eax, edx ; jmp 0x200001be261
0x00000200001ef2c4 : mov dword ptr [rcx + 0x2d20], eax ; sti ; xor eax, eax ; ret
0x00000200003ea79b : mov dword ptr [rcx + 0x2e0], edx ; ret
0x000002000003f22b : mov dword ptr [rcx + 0x30], eax ; mov qword ptr [rcx + 0x38], r9 ; ret
0x00000200006da2fd : mov dword ptr [rcx + 0x34], eax ; add rsp, 0x28 ; ret
0x00000200000459b9 : mov dword ptr [rcx + 0x36], edx ; ret
0x00000200003fb46f : mov dword ptr [rcx + 0x38], eax ; cmp dword ptr [rcx + 0x14], edx ; ja 0x200003fb480 ; ret
0x000002000006704b : mov dword ptr [rcx + 0x38], eax ; mov byte ptr [rcx + 0x52], dl ; ret
0x00000200004e8ca0 : mov dword ptr [rcx + 0x38], eax ; mov qword ptr [rcx + 0x40], r10 ; ret
0x00000200001f6a8c : mov dword ptr [rcx + 0x38], eax ; mov word ptr [rcx + 0x48], ax ; ret
0x0000020000066d1f : mov dword ptr [rcx + 0x38], eax ; ret
0x000002000003f22f : mov dword ptr [rcx + 0x38], ecx ; ret
0x0000020000066d00 : mov dword ptr [rcx + 0x38], edx ; ret
0x0000020000063049 : mov dword ptr [rcx + 0x3b], ecx ; ret 0x1274
0x000002000041b555 : mov dword ptr [rcx + 0x3d8], edx ; ret
0x000002000041b76d : mov dword ptr [rcx + 0x3f0], eax ; xor eax, eax ; ret
0x0000020000516f37 : mov dword ptr [rcx + 0x408], ecx ; ret
0x00000200003b2810 : mov dword ptr [rcx + 0x40], eax ; mov byte ptr [rcx + 0x48], 0 ; ret
0x00000200004e8ca4 : mov dword ptr [rcx + 0x40], edx ; ret
0x0000020000413af7 : mov dword ptr [rcx + 0x410], eax ; ret
0x000002000063cf41 : mov dword ptr [rcx + 0x460], edx ; xor eax, eax ; ret
0x00000200001f6a90 : mov dword ptr [rcx + 0x48], eax ; ret
0x0000020000211b14 : mov dword ptr [rcx + 0x48], ecx ; mov al, 1 ; ret
0x0000020000641391 : mov dword ptr [rcx + 0x48], ecx ; ret
0x0000020000211afe : mov dword ptr [rcx + 0x48], ecx ; xor al, al ; ret
0x00000200001b8342 : mov dword ptr [rcx + 0x48], edx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000149a47 : mov dword ptr [rcx + 0x48], edx ; mov eax, 3 ; ret
0x0000020000169187 : mov dword ptr [rcx + 0x48], edx ; ret
0x000002000011c15f : mov dword ptr [rcx + 0x50], eax ; mov eax, r8d ; ret
0x000002000002ebf4 : mov dword ptr [rcx + 0x5898], eax ; ret
0x00000200000153be : mov dword ptr [rcx + 0x58], eax ; mov qword ptr [rcx + 0x60], rax ; ret
0x0000020000042be0 : mov dword ptr [rcx + 0x58], eax ; ret
0x000002000014f69e : mov dword ptr [rcx + 0x5b58], eax ; ret
0x0000020000746634 : mov dword ptr [rcx + 0x5bec], eax ; ret
0x0000020000680adc : mov dword ptr [rcx + 0x60], eax ; mov qword ptr [rcx + 0x68], rdx ; ret
0x00000200000153c2 : mov dword ptr [rcx + 0x60], eax ; ret
0x0000020000680adb : mov dword ptr [rcx + 0x60], r8d ; mov qword ptr [rcx + 0x68], rdx ; ret
0x00000200000596fd : mov dword ptr [rcx + 0x618], eax ; ret
0x000002000011fe79 : mov dword ptr [rcx + 0x678], edx ; ret
0x0000020000044d52 : mov dword ptr [rcx + 0x68], eax ; ret
0x0000020000680ae0 : mov dword ptr [rcx + 0x68], edx ; ret
0x000002000007bb3a : mov dword ptr [rcx + 0x6c0], edx ; ret
0x00000200003a6d9f : mov dword ptr [rcx + 0x70], eax ; mov dword ptr [rcx + 0x78], eax ; ret
0x00000200001668f5 : mov dword ptr [rcx + 0x70], eax ; ret
0x000002000005e4c0 : mov dword ptr [rcx + 0x70], edx ; jmp 0x2000005e48b
0x0000020000044cbd : mov dword ptr [rcx + 0x70], edx ; ret
0x00000200003fa88f : mov dword ptr [rcx + 0x70], edx ; xor eax, eax ; ret
0x00000200003a6da2 : mov dword ptr [rcx + 0x78], eax ; ret
0x000002000044f3d8 : mov dword ptr [rcx + 0x7c], eax ; ret
0x000002000044f3d7 : mov dword ptr [rcx + 0x7c], r8d ; ret
0x000002000016695a : mov dword ptr [rcx + 0x80], eax ; ret
0x000002000041e6f8 : mov dword ptr [rcx + 0x938], eax ; ret
0x00000200005969c8 : mov dword ptr [rcx + 0xa0], eax ; ret
0x00000200005969c7 : mov dword ptr [rcx + 0xa0], r8d ; ret
0x0000020000533b05 : mov dword ptr [rcx + 0xa4], eax ; ret
0x000002000041ee65 : mov dword ptr [rcx + 0xb08], edx ; ret
0x00000200001c7242 : mov dword ptr [rcx + 0xb0], eax ; ret
0x00000200007738a0 : mov dword ptr [rcx + 0xc], eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000126908 : mov dword ptr [rcx + 0xc], eax ; xor eax, eax ; ret
0x000002000012e929 : mov dword ptr [rcx + 0xc], ecx ; mov dword ptr [rcx + 8], r8d ; xor eax, eax ; ret
0x00000200000502cd : mov dword ptr [rcx + 0xc], ecx ; ret
0x0000020000126907 : mov dword ptr [rcx + 0xc], r8d ; xor eax, eax ; ret
0x00000200000502cc : mov dword ptr [rcx + 0xc], r9d ; ret
0x00000200006ab38c : mov dword ptr [rcx + 0xd6], eax ; ret
0x00000200006c1f23 : mov dword ptr [rcx + 0xf8], eax ; ret
0x000002000013f817 : mov dword ptr [rcx + 2], eax ; mov dword ptr [rcx], eax ; ret
0x0000020000036442 : mov dword ptr [rcx + 2], eax ; ret
0x00000200000730ce : mov dword ptr [rcx + 2], eax ; xor eax, eax ; ret
0x000002000043ee1e : mov dword ptr [rcx + 2], edx ; mov dword ptr [rcx + 4], eax ; ret
0x00000200004e85bc : mov dword ptr [rcx + 2], edx ; xor eax, eax ; ret
0x000002000013f825 : mov dword ptr [rcx + 3], eax ; ret
0x00000200004c63d7 : mov dword ptr [rcx + 4], 0x10 ; ret
0x000002000043ee21 : mov dword ptr [rcx + 4], eax ; ret
0x000002000007b784 : mov dword ptr [rcx + 4], edx ; mov dword ptr [r9], eax ; ret
0x00000200004d06bb : mov dword ptr [rcx + 4], edx ; mov word ptr [rcx], dx ; mov word ptr [rax], dx ; ret
0x000002000013f849 : mov dword ptr [rcx + 5], eax ; ret
0x000002000013f833 : mov dword ptr [rcx + 6], eax ; ret
0x00000200003d58f3 : mov dword ptr [rcx + 6], eax ; xor eax, eax ; ret
0x000002000013f83a : mov dword ptr [rcx + 7], eax ; ret
0x00000200006b811a : mov dword ptr [rcx + 8], 0xdeadf00d ; ret
0x000002000041ea8e : mov dword ptr [rcx + 8], 4 ; ret
0x000002000004968b : mov dword ptr [rcx + 8], eax ; add rsp, 0x28 ; ret
0x0000020000117be0 : mov dword ptr [rcx + 8], eax ; mov dword ptr [rax], 1 ; ret
0x0000020000042bdd : mov dword ptr [rcx + 8], eax ; mov dword ptr [rcx + 0x58], eax ; ret
0x00000200000502c9 : mov dword ptr [rcx + 8], eax ; mov dword ptr [rcx + 0xc], r9d ; ret
0x00000200000577df : mov dword ptr [rcx + 8], eax ; mov qword ptr [r8], rax ; ret
0x0000020000002fc0 : mov dword ptr [rcx + 8], eax ; mov qword ptr [rcx + 0x18], rax ; ret
0x00000200001bc800 : mov dword ptr [rcx + 8], eax ; mov qword ptr [rcx], r8 ; ret
0x000002000005167b : mov dword ptr [rcx + 8], eax ; mov qword ptr [rcx], rdx ; ret
0x0000020000044aeb : mov dword ptr [rcx + 8], eax ; mov rax, rcx ; ret
0x000002000002ed1c : mov dword ptr [rcx + 8], eax ; ret
0x000002000012e92d : mov dword ptr [rcx + 8], eax ; xor eax, eax ; ret
0x00000200000d3024 : mov dword ptr [rcx + 8], ecx ; mov qword ptr [r9 + 0x10], rdi ; pop rdi ; ret
0x0000020000044b11 : mov dword ptr [rcx + 8], ecx ; ret
0x0000020000634079 : mov dword ptr [rcx + 8], edx ; add rsp, 0x28 ; ret
0x000002000014f750 : mov dword ptr [rcx + 8], edx ; mov dword ptr [rcx], 1 ; ret
0x000002000014f715 : mov dword ptr [rcx + 8], edx ; mov qword ptr [rcx + 0x10], r8 ; ret
0x000002000003769c : mov dword ptr [rcx + 8], edx ; ret
0x00000200000bd20f : mov dword ptr [rcx + 8], edx ; xor eax, eax ; mov qword ptr [rdx + 0x10], rcx ; ret
0x0000020000002fbf : mov dword ptr [rcx + 8], r8d ; mov qword ptr [rcx + 0x18], rax ; ret
0x000002000012e92c : mov dword ptr [rcx + 8], r8d ; xor eax, eax ; ret
0x000002000059e371 : mov dword ptr [rcx + r10], eax ; mov dword ptr [rcx + r8], edi ; inc edx ; jmp 0x2000059e364
0x000002000059e53b : mov dword ptr [rcx + r8], eax ; inc edx ; jmp 0x2000059e51b
0x000002000059e375 : mov dword ptr [rcx + r8], edi ; inc edx ; jmp 0x2000059e360
0x000002000019d9d6 : mov dword ptr [rcx + r9*4 + 0x6f8db0], eax ; ret
0x00000200000c1a5a : mov dword ptr [rcx + rax*4], ecx ; ret
0x00000200000c1a59 : mov dword ptr [rcx + rax*4], r9d ; ret
0x000002000059e53c : mov dword ptr [rcx + rax], eax ; inc edx ; jmp 0x2000059e51a
0x000002000059e376 : mov dword ptr [rcx + rax], edi ; inc edx ; jmp 0x2000059e35f
0x000002000063c687 : mov dword ptr [rcx + rcx*4 + 0x4d], 0x558944bf ; ret
0x000002000019d9d7 : mov dword ptr [rcx + rcx*4 + 0x6f8db0], eax ; ret
0x000002000005083f : mov dword ptr [rcx + rcx*4], eax ; lea ecx, dword ptr [r9 + 1] ; mov dword ptr [rdx], ecx ; ret
0x000002000020bed9 : mov dword ptr [rcx + rdx + 0x10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000007bb14 : mov dword ptr [rcx + rdx*8 + 0x10], ebx ; ret
0x000002000059e372 : mov dword ptr [rcx + rdx], eax ; mov dword ptr [rcx + r8], edi ; inc edx ; jmp 0x2000059e363
0x00000200003b7272 : mov dword ptr [rcx + rsi + 0xc8], eax ; inc rdx ; jmp 0x200003b725c
0x00000200001468ee : mov dword ptr [rcx - 0x10], eax ; mov qword ptr [rcx - 8], rax ; jne 0x200001468d9 ; ret
0x0000020000545fbb : mov dword ptr [rcx - 0x44], esp ; dec esp ; nop ; ret
0x0000020000516c03 : mov dword ptr [rcx - 0x45], esp ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001d6dda : mov dword ptr [rcx - 0x73], 0x2341024a ; ret
0x0000020000420d3a : mov dword ptr [rcx - 0x74ffe895], edx ; ret
0x000002000023001d : mov dword ptr [rcx - 0x76], 0x8349020c ; ret 0x4102
0x00000200001468f2 : mov dword ptr [rcx - 8], eax ; jne 0x200001468d5 ; ret
0x00000200005f8d36 : mov dword ptr [rcx], 0x28 ; mov eax, ecx ; ret
0x000002000063ad13 : mov dword ptr [rcx], 0x3d806674 ; ret
0x00000200004e8d22 : mov dword ptr [rcx], 0x4c706345 ; ret
0x000002000014f753 : mov dword ptr [rcx], 1 ; ret
0x000002000003bdde : mov dword ptr [rcx], 2 ; ret
0x000002000004385e : mov dword ptr [rcx], 3 ; ret
0x000002000060d613 : mov dword ptr [rcx], eax ; add al, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000521a06 : mov dword ptr [rcx], eax ; add al, al ; ret
0x0000020000024dc5 : mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000064fd8a : mov dword ptr [rcx], eax ; add rsp, 0x28 ; ret
0x00000200001e73ae : mov dword ptr [rcx], eax ; add rsp, 0x50 ; pop rdi ; ret
0x00000200006a8db4 : mov dword ptr [rcx], eax ; call qword ptr [rip - 0x3d9624]
0x000002000003643c : mov dword ptr [rcx], eax ; inc ax ; mov word ptr [rcx + 2], ax ; ret
0x0000020000026265 : mov dword ptr [rcx], eax ; jmp 0x2000002622f
0x000002000051e239 : mov dword ptr [rcx], eax ; jmp 0x2000051e203
0x000002000002d604 : mov dword ptr [rcx], eax ; mov al, 1 ; ret
0x00000200001e8630 : mov dword ptr [rcx], eax ; mov al, cl ; ret
0x000002000013f82a : mov dword ptr [rcx], eax ; mov byte ptr [rcx + 8], al ; ret
0x000002000013f823 : mov dword ptr [rcx], eax ; mov dword ptr [rcx + 3], eax ; ret
0x000002000013f831 : mov dword ptr [rcx], eax ; mov dword ptr [rcx + 6], eax ; ret
0x000002000013f838 : mov dword ptr [rcx], eax ; mov dword ptr [rcx + 7], eax ; ret
0x000002000041ea8c : mov dword ptr [rcx], eax ; mov dword ptr [rcx + 8], 4 ; ret
0x00000200000502c7 : mov dword ptr [rcx], eax ; mov dword ptr [rcx + 8], eax ; mov dword ptr [rcx + 0xc], r9d ; ret
0x000002000013f83f : mov dword ptr [rcx], eax ; mov dword ptr [rcx + 8], eax ; ret
0x000002000014f5e7 : mov dword ptr [rcx], eax ; mov eax, 0xc00000bb ; ret
0x00000200003b39d6 : mov dword ptr [rcx], eax ; mov eax, 1 ; ret
0x0000020000541eab : mov dword ptr [rcx], eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000025ff3 : mov dword ptr [rcx], eax ; mov eax, edx ; ret
0x000002000005ac50 : mov dword ptr [rcx], eax ; mov eax, r10d ; ret
0x000002000013f846 : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 5], rax ; ret
0x000002000013f851 : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 6], rax ; ret
0x000002000013f859 : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 7], rax ; ret
0x000002000065f0f8 : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000037699 : mov dword ptr [rcx], eax ; mov qword ptr [rcx + 8], rdx ; ret
0x00000200001b40f7 : mov dword ptr [rcx], eax ; mov qword ptr [rip + 0x144338], rcx ; ret
0x0000020000060c40 : mov dword ptr [rcx], eax ; mov qword ptr [rip + 0x299c9f], rax ; ret
0x00000200003b6f1f : mov dword ptr [rcx], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000020898b : mov dword ptr [rcx], eax ; mov rcx, rbp ; call 0x20000044c6f
0x00000200000c078a : mov dword ptr [rcx], eax ; or dword ptr [rcx], 0xffffffff ; ret
0x0000020000015862 : mov dword ptr [rcx], eax ; ret
0x00000200005dbea6 : mov dword ptr [rcx], eax ; test rdx, rdx ; je 0x200005dbeb8 ; mov dword ptr [rdx], eax ; ret
0x0000020000050394 : mov dword ptr [rcx], eax ; test rdx, rdx ; jne 0x200000503a3 ; ret
0x00000200001aba00 : mov dword ptr [rcx], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000038e51 : mov dword ptr [rcx], eax ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000004213f : mov dword ptr [rcx], eax ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000014f5be : mov dword ptr [rcx], eax ; xor eax, eax ; mov dword ptr [rdx], eax ; or dword ptr [rdx], 0xffffffff ; ret
0x000002000012382b : mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200000bc3fa : mov dword ptr [rcx], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001bfa79 : mov dword ptr [rcx], ebx ; mov eax, r10d ; ret
0x0000020000117db5 : mov dword ptr [rcx], ebx ; mov rbx, qword ptr [rsp + 8] ; mov eax, r10d ; ret
0x000002000001707e : mov dword ptr [rcx], ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000200b2 : mov dword ptr [rcx], ebx ; ret
0x0000020000652b75 : mov dword ptr [rcx], ecx ; mov eax, edx ; ret
0x0000020000652bfd : mov dword ptr [rcx], ecx ; mov eax, r11d ; ret
0x0000020000546103 : mov dword ptr [rcx], ecx ; mov qword ptr [rax], rcx ; xor eax, eax ; ret
0x0000020000522f97 : mov dword ptr [rcx], ecx ; mov qword ptr [rcx + 0x10], rax ; mov dword ptr [rcx + 0x18], eax ; ret
0x000002000010cbb3 : mov dword ptr [rcx], ecx ; mov rax, r10 ; ret
0x000002000003cc1c : mov dword ptr [rcx], ecx ; ret
0x0000020000405d21 : mov dword ptr [rcx], ecx ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000200001313cc : mov dword ptr [rcx], ecx ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001a8e48 : mov dword ptr [rcx], edx ; mov al, 1 ; ret
0x00000200004166d5 : mov dword ptr [rcx], edx ; mov eax, r8d ; ret
0x00000200004763fd : mov dword ptr [rcx], edx ; mov qword ptr [rdx + 8], rcx ; ret
0x0000020000135799 : mov dword ptr [rcx], edx ; mov rax, r9 ; ret
0x00000200004d06bf : mov dword ptr [rcx], edx ; mov word ptr [rax], dx ; ret
0x00000200000635ed : mov dword ptr [rcx], edx ; pop rdi ; ret
0x000002000005167f : mov dword ptr [rcx], edx ; ret
0x00000200001a8e3d : mov dword ptr [rcx], edx ; xor al, al ; ret
0x0000020000135798 : mov dword ptr [rcx], r10d ; mov rax, r9 ; ret
0x00000200001bef38 : mov dword ptr [rcx], r10d ; ret
0x00000200001bfa78 : mov dword ptr [rcx], r11d ; mov eax, r10d ; ret
0x00000200000200b1 : mov dword ptr [rcx], r11d ; ret
0x0000020000037698 : mov dword ptr [rcx], r8d ; mov qword ptr [rcx + 8], rdx ; ret
0x00000200003b6f1e : mov dword ptr [rcx], r8d ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000050393 : mov dword ptr [rcx], r8d ; test rdx, rdx ; jne 0x200000503a4 ; ret
0x00000200004139be : mov dword ptr [rcx], r8d ; xor eax, eax ; ret
0x00000200005ea850 : mov dword ptr [rdi + 0x10], eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001bef27 : mov dword ptr [rdi + 0x13], edx ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000052a674 : mov dword ptr [rdi + 0x24], eax ; jmp 0x2000052a640
0x000002000052a673 : mov dword ptr [rdi + 0x24], eax ; jmp 0x2000052a641
0x00000200000c2823 : mov dword ptr [rdi + 0x30], eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bd363 : mov dword ptr [rdi + 0x30], eax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000049b51a : mov dword ptr [rdi + 0x38], eax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000041b228 : mov dword ptr [rdi + 0x50], eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000132eb0 : mov dword ptr [rdi + 0x72], edi ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000132eaf : mov dword ptr [rdi + 0x72], r15d ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200001139d3 : mov dword ptr [rdi + 0xa], ecx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001139d2 : mov dword ptr [rdi + 0xa], r9d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003b69d3 : mov dword ptr [rdi + 0xc], eax ; jmp 0x200003b69e6
0x000002000049b9de : mov dword ptr [rdi + 8], eax ; call 0x200000c1926
0x000002000016498e : mov dword ptr [rdi - 0x73], 0x8348bf3c ; ret
0x000002000003f7d4 : mov dword ptr [rdi], 1 ; jmp 0x2000003f7a5
0x000002000010d57c : mov dword ptr [rdi], eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000030ae6 : mov dword ptr [rdi], eax ; mov al, 1 ; pop rdi ; ret
0x000002000049d66e : mov dword ptr [rdi], eax ; mov dword ptr [r12], edi ; call 0x200000c0791
0x000002000040cab3 : mov dword ptr [rdi], eax ; mov edi, 0xc0000023 ; jmp 0x2000040ca86
0x00000200001f3dfd : mov dword ptr [rdi], ebx ; mov eax, r10d ; jmp 0x200001f3e27
0x000002000060f570 : mov dword ptr [rdi], ebx ; mov rcx, rdi ; mov rax, qword ptr [rsi + 0x38] ; call rax
0x00000200000236cf : mov dword ptr [rdi], ecx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f492d : mov dword ptr [rdi], ecx ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001f77cb : mov dword ptr [rdi], ecx ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200005a9bff : mov dword ptr [rdi], edi ; jmp 0x20000465e3a
0x00000200000f47cc : mov dword ptr [rdi], edx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f3dfc : mov dword ptr [rdi], r11d ; mov eax, r10d ; jmp 0x200001f3e28
0x00000200005a9bfe : mov dword ptr [rdi], r15d ; jmp 0x20000465e3b
0x00000200001ac4c5 : mov dword ptr [rdx + 0x10], eax ; je 0x200001ac4d1 ; sti ; ret
0x00000200000b03d6 : mov dword ptr [rdx + 0x10], eax ; ret
0x000002000002bf0a : mov dword ptr [rdx + 0x10], ecx ; pop rsi ; ret
0x0000020000025e83 : mov dword ptr [rdx + 0x10], ecx ; ret
0x00000200006ccfdc : mov dword ptr [rdx + 0x120], eax ; xor eax, eax ; ret
0x00000200000581bf : mov dword ptr [rdx + 0x14], eax ; ret
0x0000020000066cbf : mov dword ptr [rdx + 0x18], eax ; mov al, 1 ; ret
0x00000200000d24f2 : mov dword ptr [rdx + 0x18], ecx ; add rsp, 0x28 ; ret
0x000002000003997c : mov dword ptr [rdx + 0x18], edx ; add rsp, 0x38 ; ret
0x00000200001f795d : mov dword ptr [rdx + 0x194], eax ; ret
0x0000020000546044 : mov dword ptr [rdx + 0x207c], eax ; ret
0x00000200000403ad : mov dword ptr [rdx + 0x20], ecx ; mov al, r8b ; ret
0x00000200000f3c27 : mov dword ptr [rdx + 0x28], eax ; mov dword ptr [r10 + 0x2c], ecx ; jmp 0x200000f3bfb
0x00000200005e4d05 : mov dword ptr [rdx + 0x28], eax ; ret
0x00000200005e4cf8 : mov dword ptr [rdx + 0x28], ecx ; mov qword ptr [rdx + 0x38], rax ; ret
0x000002000053e34a : mov dword ptr [rdx + 0x28], ecx ; ret
0x00000200000f3c2b : mov dword ptr [rdx + 0x2c], ecx ; jmp 0x200000f3bf7
0x0000020000148a67 : mov dword ptr [rdx + 0x2cc0], eax ; ret
0x00000200000f73b9 : mov dword ptr [rdx + 0x30], eax ; ret
0x00000200001f7b79 : mov dword ptr [rdx + 0x378], eax ; ret
0x000002000052b0e8 : mov dword ptr [rdx + 0x38], eax ; mov byte ptr [r10 + 0x30], dl ; ret
0x00000200005e4cfc : mov dword ptr [rdx + 0x38], eax ; ret
0x00000200001fddb3 : mov dword ptr [rdx + 0x38], eax ; xor eax, eax ; ret
0x00000200001f6644 : mov dword ptr [rdx + 0x48], 0x8b410000 ; ret
0x00000200005e4d29 : mov dword ptr [rdx + 0x48], eax ; ret
0x0000020000106438 : mov dword ptr [rdx + 0x58], ecx ; mov dword ptr [rdx], eax ; add rsp, 0x38 ; ret
0x00000200000ebb45 : mov dword ptr [rdx + 0x740], ecx ; ret
0x00000200005319c6 : mov dword ptr [rdx + 0xa], eax ; and word ptr [rdx + 8], cx ; ret
0x0000020000773add : mov dword ptr [rdx + 0xc], eax ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000063ed : mov dword ptr [rdx + 0xf90], eax ; ret
0x00000200000866fb : mov dword ptr [rdx + 2], eax ; ret
0x0000020000488df6 : mov dword ptr [rdx + 2], ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003d9de8 : mov dword ptr [rdx + 2], ecx ; xor eax, eax ; ret
0x00000200006c3432 : mov dword ptr [rdx + 2], r8d ; ret
0x000002000040dbaa : mov dword ptr [rdx + 4], 4 ; ret
0x00000200001e33be : mov dword ptr [rdx + 4], ecx ; ret
0x0000020000074cae : mov dword ptr [rdx + 8], eax ; add rsp, 0x28 ; ret
0x00000200003bb71e : mov dword ptr [rdx + 8], eax ; and qword ptr [rcx + 0x30], 0 ; ret
0x00000200000402bc : mov dword ptr [rdx + 8], eax ; cmp rax, rdx ; je 0x200000402cd ; ret
0x000002000000f583 : mov dword ptr [rdx + 8], eax ; jmp 0x2000000f54f
0x000002000002d327 : mov dword ptr [rdx + 8], eax ; ret
0x0000020000030a40 : mov dword ptr [rdx + 8], ecx ; add rsp, 0x28 ; ret
0x000002000039ce7c : mov dword ptr [rdx + 8], ecx ; dec dword ptr [rcx + 0x64] ; ret
0x000002000005495e : mov dword ptr [rdx + 8], ecx ; mov qword ptr [rax], rcx ; ret
0x0000020000073c43 : mov dword ptr [rdx + 8], ecx ; mov qword ptr [rcx], rdx ; ret
0x00000200000548ee : mov dword ptr [rdx + 8], ecx ; ret
0x000002000005e4a9 : mov dword ptr [rdx + 8], edx ; mov qword ptr [rdx], r10 ; mov rax, r8 ; ret
0x00000200004eb319 : mov dword ptr [rdx + 8], edx ; ret
0x00000200000c1a62 : mov dword ptr [rdx + r8*4], r9d ; ret
0x00000200000c1a63 : mov dword ptr [rdx + rax*4], ecx ; ret
0x00000200001259c7 : mov dword ptr [rdx + rcx + 0x1c], eax ; ret
0x000002000013f7bb : mov dword ptr [rdx + rcx - 0x10], eax ; mov qword ptr [rdx + rcx - 8], rax ; ret
0x000002000013f7c0 : mov dword ptr [rdx + rcx - 8], eax ; ret
0x00000200006be2db : mov dword ptr [rdx + rcx*8 + 0x18], ecx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000488299 : mov dword ptr [rdx + rcx*8 + 0x70], ecx ; inc dword ptr [rdx + 0x6c] ; ret
0x00000200005d68b0 : mov dword ptr [rdx - 0xa], esp ; push qword ptr [rbx + 4] ; or eax, 0xffffffff ; ret
0x0000020000109a39 : mov dword ptr [rdx], 0 ; ret
0x00000200006b3f9d : mov dword ptr [rdx], 0x58b6975 ; stc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xa8ff
0x000002000009cd4d : mov dword ptr [rdx], 0x8b481275 ; ret
0x00000200001f43b5 : mov dword ptr [rdx], 0xffffffff ; ret
0x00000200004f4970 : mov dword ptr [rdx], 1 ; mov al, 1 ; ret
0x000002000046a333 : mov dword ptr [rdx], 2 ; mov eax, r8d ; ret
0x000002000002585e : mov dword ptr [rdx], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002537e : mov dword ptr [rdx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000010643b : mov dword ptr [rdx], eax ; add rsp, 0x38 ; ret
0x000002000016737d : mov dword ptr [rdx], eax ; and qword ptr [r8], 0 ; ret
0x0000020000043800 : mov dword ptr [rdx], eax ; call r10
0x000002000068626d : mov dword ptr [rdx], eax ; jne 0x2000068623d ; ret
0x0000020000033dd5 : mov dword ptr [rdx], eax ; lea eax, dword ptr [rcx - 0x3f] ; ret
0x000002000042fe7c : mov dword ptr [rdx], eax ; lea r9, qword ptr [r11 + r10*2] ; mov rax, r9 ; ret
0x00000200001f2cbc : mov dword ptr [rdx], eax ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000043f088 : mov dword ptr [rdx], eax ; mov al, 1 ; ret
0x00000200004a0af3 : mov dword ptr [rdx], eax ; mov byte ptr [r8], 1 ; mov al, 1 ; ret
0x000002000040dba8 : mov dword ptr [rdx], eax ; mov dword ptr [rdx + 4], 4 ; ret
0x00000200000730eb : mov dword ptr [rdx], eax ; mov eax, 0xc0000095 ; ret
0x00000200001a5cda : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000020000032449 : mov dword ptr [rdx], eax ; mov eax, dword ptr [r10 + 0x24] ; mov dword ptr [r8], eax ; ret
0x00000200001323fe : mov dword ptr [rdx], eax ; mov eax, dword ptr [rcx + 0x28c] ; ret
0x000002000001779c : mov dword ptr [rdx], eax ; mov eax, ecx ; ret
0x0000020000605d6e : mov dword ptr [rdx], eax ; mov eax, r8d ; ret
0x00000200001c690b : mov dword ptr [rdx], eax ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000029b92 : mov dword ptr [rdx], eax ; mov rax, rcx ; ret
0x00000200006c342f : mov dword ptr [rdx], eax ; mov word ptr [rdx + 2], r8w ; ret
0x000002000013cd67 : mov dword ptr [rdx], eax ; movzx eax, cx ; add rsp, 0x38 ; ret
0x000002000014f5c2 : mov dword ptr [rdx], eax ; or dword ptr [rdx], 0xffffffff ; ret
0x0000020000022c31 : mov dword ptr [rdx], eax ; ret
0x00000200000f0451 : mov dword ptr [rdx], eax ; test r8, r8 ; jne 0x200000f0466 ; ret
0x0000020000043968 : mov dword ptr [rdx], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000086c69 : mov dword ptr [rdx], eax ; xor eax, eax ; mov qword ptr [r8 + 8], rcx ; ret
0x000002000051b69d : mov dword ptr [rdx], eax ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000019a8a : mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x0000020000040d68 : mov dword ptr [rdx], ebx ; ret
0x00000200001f6310 : mov dword ptr [rdx], ecx ; add qword ptr [r8], 2 ; ret
0x00000200000078d4 : mov dword ptr [rdx], ecx ; add rsp, 0x28 ; ret
0x000002000013ccd8 : mov dword ptr [rdx], ecx ; add rsp, 0x38 ; ret
0x00000200001a57c4 : mov dword ptr [rdx], ecx ; add rsp, 0x48 ; ret
0x0000020000403f0d : mov dword ptr [rdx], ecx ; add rsp, 0x58 ; ret
0x000002000040f33b : mov dword ptr [rdx], ecx ; add rsp, 0x68 ; ret
0x0000020000647d4d : mov dword ptr [rdx], ecx ; mov al, 1 ; ret
0x00000200001f65c6 : mov dword ptr [rdx], ecx ; mov eax, r8d ; ret
0x0000020000216af4 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [r9 + rcx*4] ; mov dword ptr [r8], edx ; ret
0x00000200001a76f3 : mov dword ptr [rdx], ecx ; mov qword ptr [r11], rdx ; add rsp, 0x28 ; ret
0x000002000046f536 : mov dword ptr [rdx], ecx ; mov qword ptr [rax + 8], rcx ; xor eax, eax ; ret
0x000002000004079d : mov dword ptr [rdx], ecx ; mov rax, r8 ; ret
0x0000020000479622 : mov dword ptr [rdx], ecx ; mov rax, rdx ; add rsp, 0x28 ; ret
0x0000020000740c86 : mov dword ptr [rdx], ecx ; mov rcx, r10 ; jmp rcx
0x0000020000023632 : mov dword ptr [rdx], ecx ; ret
0x00000200001b6e9c : mov dword ptr [rdx], ecx ; xor al, al ; ret
0x0000020000057f77 : mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x000002000005e4ad : mov dword ptr [rdx], edx ; mov rax, r8 ; ret
0x00000200003f7142 : mov dword ptr [rdx], edx ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200003ebda3 : mov dword ptr [rdx], esp ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000430cad : mov dword ptr [rdx], r8d ; mov eax, ecx ; ret
0x00000200006c342e : mov dword ptr [rdx], r8d ; mov word ptr [rdx + 2], r8w ; ret
0x00000200000746e3 : mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x00000200001b6e9b : mov dword ptr [rdx], r9d ; xor al, al ; ret
0x0000020000057f76 : mov dword ptr [rdx], r9d ; xor eax, eax ; ret
0x000002000021b9ec : mov dword ptr [rip + 0x1152f6], eax ; ret
0x00000200001c7e61 : mov dword ptr [rip + 0x1174d9], eax ; ret
0x00000200005dc827 : mov dword ptr [rip + 0x11c9fb], edx ; xor eax, eax ; ret
0x00000200005b79bd : mov dword ptr [rip + 0x141855], eax ; ret
0x00000200001b40fa : mov dword ptr [rip + 0x144338], ecx ; ret
0x00000200001b2abd : mov dword ptr [rip + 0x148285], ecx ; ret
0x0000020000185927 : mov dword ptr [rip + 0x1602bf], ebx ; jmp 0x20000091be0
0x00000200006c662c : mov dword ptr [rip + 0x17b12], eax ; ret
0x00000200001a4aad : mov dword ptr [rip + 0x18c10d], edx ; ret
0x000002000014f734 : mov dword ptr [rip + 0x18cf86], edx ; ret
0x0000020000134b5c : mov dword ptr [rip + 0x18f49e], ecx ; ret
0x0000020000132604 : mov dword ptr [rip + 0x19281e], eax ; xor eax, eax ; ret
0x00000200001325ed : mov dword ptr [rip + 0x19283d], eax ; xor eax, eax ; ret
0x000002000014f65c : mov dword ptr [rip + 0x1aa272], eax ; ret
0x00000200006c2ec6 : mov dword ptr [rip + 0x1b1f4], eax ; ret
0x000002000012580c : mov dword ptr [rip + 0x1c006e], edx ; ret
0x00000200001a3bed : mov dword ptr [rip + 0x1da491], ecx ; jmp 0x2000012fe48
0x00000200001a3bf9 : mov dword ptr [rip + 0x1da4b1], eax ; jmp 0x2000012fe6a
0x0000020000127b45 : mov dword ptr [rip + 0x1db189], eax ; ret
0x00000200001257da : mov dword ptr [rip + 0x1dd658], ecx ; ret
0x000002000011ff57 : mov dword ptr [rip + 0x1e4177], eax ; xor eax, eax ; ret
0x00000200000f7db1 : mov dword ptr [rip + 0x1ff835], ecx ; jmp 0x200000f7d83
0x00000200006bb93f : mov dword ptr [rip + 0x2276b], ecx ; ret
0x000002000014f5fa : mov dword ptr [rip + 0x22fc38], eax ; ret
0x000002000008925f : mov dword ptr [rip + 0x250f5f], eax ; call r8
0x0000020000088b62 : mov dword ptr [rip + 0x25165c], eax ; call r8
0x0000020000060c43 : mov dword ptr [rip + 0x299c9f], eax ; ret
0x000002000041ee54 : mov dword ptr [rip + 0x2da3c6], eax ; ret
0x00000200006b62dc : mov dword ptr [rip + 0x54176], eax ; ret
0x000002000021bdb4 : mov dword ptr [rip + 0xb5bfe], eax ; jmp 0x2000021bdee
0x00000200002070f1 : mov dword ptr [rip + 0xd130d], edx ; mov eax, r8d ; ret
0x00000200001fb619 : mov dword ptr [rip + 0xd56a9], ecx ; ret
0x000002000041ee6c : mov dword ptr [rip - 0x122d46], ecx ; ret
0x0000020000454f84 : mov dword ptr [rip - 0x190cca], eax ; jmp 0x20000454f2e
0x00000200004c9231 : mov dword ptr [rip - 0x1ecc9f], ecx ; ret
0x0000020000514d6a : mov dword ptr [rip - 0x1fb9c8], eax ; call 0x20000140389
0x00000200004fa2ca : mov dword ptr [rip - 0x202628], ecx ; ret
0x00000200004eafb4 : mov dword ptr [rip - 0x20ffae], eax ; or byte ptr [r10], dl ; ret
0x000002000052b65a : mov dword ptr [rip - 0x25376c], esi ; call 0x2000014f4c9
0x00000200005418d4 : mov dword ptr [rip - 0x2666b2], ecx ; ret
0x0000020000619175 : mov dword ptr [rip - 0x299a03], ecx ; ret
0x0000020000619906 : mov dword ptr [rip - 0x2e8d64], edx ; xor eax, eax ; ret
0x00000200005c6eb9 : mov dword ptr [rip - 0x2ea8f7], ecx ; ret
0x00000200005f74ce : mov dword ptr [rip - 0x2fee74], esp ; call 0x20000053798
0x00000200005cb650 : mov dword ptr [rip - 0x30712e], edi ; jmp 0x2000051791c
0x00000200005cb64f : mov dword ptr [rip - 0x30712e], r15d ; jmp 0x2000051791d
0x000002000061e793 : mov dword ptr [rip - 0x33fa01], ecx ; jmp 0x2000061e765
0x000002000061e871 : mov dword ptr [rip - 0x33fadf], ecx ; jmp 0x2000061e843
0x00000200006c1da8 : mov dword ptr [rip - 0x3e3592], ecx ; ret
0x00000200006c5769 : mov dword ptr [rip - 0x3ed037], ecx ; ret
0x00000200006d7001 : mov dword ptr [rip - 0x4053e7], ecx ; ret
0x0000020000782c75 : mov dword ptr [rip - 0x452063], ecx ; xor eax, eax ; ret
0x000002000077d02a : mov dword ptr [rip - 0x464630], esi ; jmp 0x20000769265
0x000002000076d091 : mov dword ptr [rip - 0x46a473], ecx ; ret
0x000002000076d3b5 : mov dword ptr [rip - 0x471b03], eax ; ret
0x000002000076b077 : mov dword ptr [rip - 0x4732a1], ecx ; ret
0x000002000076e3b7 : mov dword ptr [rip - 0x478505], edx ; ret
0x000002000077df0d : mov dword ptr [rip - 0x47b2ef], eax ; ret
0x000002000076cefc : mov dword ptr [rip - 0x4910e2], ecx ; ret
0x000002000076e03b : mov dword ptr [rip - 0x492441], ecx ; ret
0x000002000076d9dd : mov dword ptr [rip - 0x493753], ecx ; ret
0x00000200000295ad : mov dword ptr [rip - 0x74000002], edi ; ret
0x000002000048f082 : mov dword ptr [rsi + 0x58], eax ; call 0x200000bab46
0x0000020000523b11 : mov dword ptr [rsi + 2], eax ; call 0x2000014f186
0x000002000049d2d8 : mov dword ptr [rsi + 8], eax ; call 0x200000c1926
0x00000200005770de : mov dword ptr [rsi + 8], ecx ; jmp 0x200003f3347
0x000002000056cfef : mov dword ptr [rsi + 8], esp ; call 0x2000007b793
0x000002000050ad2f : mov dword ptr [rsi + rax*2 + 0x10], edi ; call 0x20000133f77
0x0000020000661bf5 : mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x20000661bed
0x0000020000106f96 : mov dword ptr [rsi], eax ; add rsp, 0x30 ; pop r14 ; ret
0x000002000075f0d3 : mov dword ptr [rsi], eax ; ret 0xfff
0x000002000051be02 : mov dword ptr [rsi], ebx ; lea rcx, qword ptr [rdi + 0x50] ; call 0x20000149159
0x0000020000577041 : mov dword ptr [rsi], ebx ; mov eax, 0xc000009a ; jmp 0x200003f329b
0x0000020000423d5a : mov dword ptr [rsi], ebx ; mov rcx, rsi ; call 0x200000459b0
0x000002000042c88e : mov dword ptr [rsi], ecx ; add rsp, 0x20 ; pop r14 ; ret
0x00000200005c0623 : mov dword ptr [rsi], ecx ; jmp 0x200004b3da4
0x00000200005770db : mov dword ptr [rsi], ecx ; mov qword ptr [rsi + 8], rcx ; jmp 0x200003f334a
0x0000020000153c18 : mov dword ptr [rsi], edi ; jmp 0x20000153be1
0x000002000039dd54 : mov dword ptr [rsp + 0x108], esi ; call qword ptr [r15]
0x00000200004dc81f : mov dword ptr [rsp + 0x20], 0xc8 ; call r10
0x0000020000461868 : mov dword ptr [rsp + 0x20], 2 ; call r12
0x00000200004dee75 : mov dword ptr [rsp + 0x20], 2 ; call r14
0x00000200005cfe5d : mov dword ptr [rsp + 0x20], 2 ; call r15
0x0000020000463465 : mov dword ptr [rsp + 0x20], 2 ; call rdi
0x0000020000693bf6 : mov dword ptr [rsp + 0x20], 2 ; call rsi
0x00000200001c707b : mov dword ptr [rsp + 0x20], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000043014c : mov dword ptr [rsp + 0x20], eax ; add rsp, 0x38 ; ret
0x00000200004c161a : mov dword ptr [rsp + 0x20], eax ; call 0x200000e526b
0x000002000051366f : mov dword ptr [rsp + 0x20], eax ; call 0x20000140da7
0x00000200006935c7 : mov dword ptr [rsp + 0x20], eax ; call 0x2000041f80a
0x0000020000652ef8 : mov dword ptr [rsp + 0x20], eax ; call 0x2000043f176
0x000002000060551c : mov dword ptr [rsp + 0x20], eax ; call 0x20000461756
0x00000200005a9c37 : mov dword ptr [rsp + 0x20], eax ; call 0x20000465e8a
0x00000200005c5dd1 : mov dword ptr [rsp + 0x20], eax ; call 0x20000602042
0x000002000064b905 : mov dword ptr [rsp + 0x20], eax ; call qword ptr [r10]
0x000002000042271f : mov dword ptr [rsp + 0x20], eax ; call qword ptr [rsi]
0x0000020000074a32 : mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200004111de : mov dword ptr [rsp + 0x20], eax ; call r11
0x0000020000426b8c : mov dword ptr [rsp + 0x20], eax ; call r12
0x00000200004047d4 : mov dword ptr [rsp + 0x20], eax ; call r15
0x00000200005efeae : mov dword ptr [rsp + 0x20], eax ; call rbx
0x00000200006b8e70 : mov dword ptr [rsp + 0x20], eax ; call rdi
0x00000200004bbbdc : mov dword ptr [rsp + 0x20], eax ; lea edx, dword ptr [rax + 3] ; call r10
0x00000200005101e1 : mov dword ptr [rsp + 0x20], eax ; lea r8d, dword ptr [r9 + 1] ; call rdi
0x000002000046af0d : mov dword ptr [rsp + 0x20], eax ; lea r8d, dword ptr [r9 - 1] ; call r12
0x00000200004ce60b : mov dword ptr [rsp + 0x20], eax ; lea r8d, dword ptr [r9 - 3] ; call rsi
0x00000200000d218a : mov dword ptr [rsp + 0x20], eax ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x0000020000464491 : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rbp - 0x40], rsi ; call r10
0x00000200001e4d0c : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rsp + 0x28], r8 ; call rdx
0x0000020000427ff8 : mov dword ptr [rsp + 0x20], eax ; mov r8b, r11b ; call r12
0x00000200005101a8 : mov dword ptr [rsp + 0x20], eax ; mov r8d, r9d ; call rdi
0x00000200004b07cd : mov dword ptr [rsp + 0x20], eax ; mov rcx, r12 ; call 0x200004aca89
0x00000200005dd420 : mov dword ptr [rsp + 0x20], eax ; xor r8d, r8d ; call 0x20000089719
0x000002000051b0e9 : mov dword ptr [rsp + 0x20], ebp ; call 0x20000140407
0x0000020000513144 : mov dword ptr [rsp + 0x20], ebp ; call 0x20000140487
0x000002000051b054 : mov dword ptr [rsp + 0x20], ebp ; call 0x200001407e7
0x00000200006c07e5 : mov dword ptr [rsp + 0x20], ebp ; call rax
0x00000200006907e5 : mov dword ptr [rsp + 0x20], ebp ; call rdi
0x00000200004afe2c : mov dword ptr [rsp + 0x20], ebp ; call rsi
0x000002000049ad62 : mov dword ptr [rsp + 0x20], ebp ; mov dl, 0xfe ; call 0x200000bcbe9
0x000002000040da89 : mov dword ptr [rsp + 0x20], ebp ; mov rcx, rsi ; call rdi
0x0000020000514d2f : mov dword ptr [rsp + 0x20], ebx ; call 0x20000140547
0x0000020000513aa3 : mov dword ptr [rsp + 0x20], ebx ; call 0x20000140da7
0x00000200006aa7c3 : mov dword ptr [rsp + 0x20], ebx ; call qword ptr [rip - 0x3db2bd]
0x00000200006aa81b : mov dword ptr [rsp + 0x20], ebx ; call qword ptr [rip - 0x3db30d]
0x000002000052cd87 : mov dword ptr [rsp + 0x20], ebx ; call r10
0x000002000050e61e : mov dword ptr [rsp + 0x20], ecx ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x000002000050e917 : mov dword ptr [rsp + 0x20], ecx ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x00000200004dda0c : mov dword ptr [rsp + 0x20], ecx ; lea r8d, dword ptr [r9 + 3] ; call rdi
0x00000200004e1551 : mov dword ptr [rsp + 0x20], ecx ; lea r8d, dword ptr [r9 - 1] ; call rdi
0x00000200006c07bf : mov dword ptr [rsp + 0x20], ecx ; mov r9, rbx ; call rax
0x0000020000679923 : mov dword ptr [rsp + 0x20], ecx ; mov r9d, r14d ; call r10
0x0000020000462f2a : mov dword ptr [rsp + 0x20], ecx ; mov rcx, r11 ; call rax
0x00000200006b842b : mov dword ptr [rsp + 0x20], ecx ; mov rcx, r13 ; call rax
0x00000200006b9ed5 : mov dword ptr [rsp + 0x20], ecx ; mov rcx, r14 ; call rax
0x00000200003b631a : mov dword ptr [rsp + 0x20], ecx ; mov rcx, rbx ; call rax
0x0000020000206697 : mov dword ptr [rsp + 0x20], ecx ; mov rcx, rdi ; call rax
0x00000200006b8ff0 : mov dword ptr [rsp + 0x20], ecx ; mov rcx, rsi ; call r12
0x000002000042d894 : mov dword ptr [rsp + 0x20], edi ; call 0x20000053853
0x00000200004c2e55 : mov dword ptr [rsp + 0x20], edi ; call 0x200000e8b5b
0x0000020000512709 : mov dword ptr [rsp + 0x20], edi ; call 0x20000140487
0x0000020000764b3b : mov dword ptr [rsp + 0x20], edi ; call 0x20000140da6
0x0000020000583b19 : mov dword ptr [rsp + 0x20], edi ; call 0x2000043fd46
0x0000020000182afa : mov dword ptr [rsp + 0x20], edi ; call rax
0x000002000066aa11 : mov dword ptr [rsp + 0x20], edi ; call rdi
0x00000200005e1834 : mov dword ptr [rsp + 0x20], edi ; mov r8d, ebx ; call rax
0x00000200005830d2 : mov dword ptr [rsp + 0x20], edi ; mov r8d, ebx ; mov cl, 0x15 ; call rax
0x0000020000598001 : mov dword ptr [rsp + 0x20], edi ; xor ecx, ecx ; call qword ptr [rsi]
0x00000200005962f6 : mov dword ptr [rsp + 0x20], edx ; call rax
0x00000200002215ec : mov dword ptr [rsp + 0x20], edx ; mov edx, esi ; call r11
0x00000200003b6199 : mov dword ptr [rsp + 0x20], edx ; mov rdx, rbx ; call r10
0x00000200002114d4 : mov dword ptr [rsp + 0x20], edx ; mov rdx, rsi ; call r10
0x000002000040ad0c : mov dword ptr [rsp + 0x20], esi ; call 0x20000067012
0x00000200005fceeb : mov dword ptr [rsp + 0x20], esi ; call qword ptr [rax]
0x000002000046c023 : mov dword ptr [rsp + 0x20], esi ; call qword ptr [rsi]
0x0000020000678e6a : mov dword ptr [rsp + 0x20], esi ; call r10
0x00000200004d4560 : mov dword ptr [rsp + 0x20], esi ; call r12
0x000002000069267b : mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200006db720 : mov dword ptr [rsp + 0x20], esi ; mov dword ptr [rsp + 0x2c], r15d ; call rax
0x00000200004617ef : mov dword ptr [rsp + 0x20], esi ; mov rcx, r13 ; call r12
0x00000200004616c4 : mov dword ptr [rsp + 0x20], esi ; mov rcx, r13 ; call r14
0x000002000052842b : mov dword ptr [rsp + 0x20], esi ; mov rcx, r13 ; call r15
0x00000200004dedde : mov dword ptr [rsp + 0x20], esi ; mov rcx, r15 ; call r14
0x0000020000560649 : mov dword ptr [rsp + 0x20], esi ; xor r8d, r8d ; mov cl, 0x1b ; call rax
0x00000200001cd8a3 : mov dword ptr [rsp + 0x20], esp ; call 0x20000059b86
0x000002000049af57 : mov dword ptr [rsp + 0x20], esp ; mov dl, 0xff ; call 0x200000bcbe9
0x00000200005b43ab : mov dword ptr [rsp + 0x20], esp ; mov r8d, ebx ; mov cl, 0xc ; call rax
0x0000020000422858 : mov dword ptr [rsp + 0x20], esp ; mov rcx, r14 ; call qword ptr [rsi]
0x000002000051b0e8 : mov dword ptr [rsp + 0x20], r13d ; call 0x20000140408
0x0000020000513143 : mov dword ptr [rsp + 0x20], r13d ; call 0x20000140488
0x000002000051b053 : mov dword ptr [rsp + 0x20], r13d ; call 0x200001407e8
0x00000200006907e4 : mov dword ptr [rsp + 0x20], r13d ; call rdi
0x00000200004afe2b : mov dword ptr [rsp + 0x20], r13d ; call rsi
0x00000200004d455f : mov dword ptr [rsp + 0x20], r14d ; call r12
0x00000200004617ee : mov dword ptr [rsp + 0x20], r14d ; mov rcx, r13 ; call r12
0x000002000066aa10 : mov dword ptr [rsp + 0x20], r15d ; call rdi
0x000002000050e61d : mov dword ptr [rsp + 0x20], r9d ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x000002000050e916 : mov dword ptr [rsp + 0x20], r9d ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x00000200004dda0b : mov dword ptr [rsp + 0x20], r9d ; lea r8d, dword ptr [r9 + 3] ; call rdi
0x00000200004e1550 : mov dword ptr [rsp + 0x20], r9d ; lea r8d, dword ptr [r9 - 1] ; call rdi
0x00000200006c07be : mov dword ptr [rsp + 0x20], r9d ; mov r9, rbx ; call rax
0x00000200006b6f19 : mov dword ptr [rsp + 0x24], ebx ; jmp 0x200006b6ee7
0x00000200004cb4ee : mov dword ptr [rsp + 0x24], esi ; inc edx ; jmp 0x200004cb4bd
0x00000200006b6f18 : mov dword ptr [rsp + 0x24], r11d ; jmp 0x200006b6ee8
0x00000200005888fa : mov dword ptr [rsp + 0x28], eax ; call 0x200004d4b86
0x00000200001e4d11 : mov dword ptr [rsp + 0x28], eax ; call rdx
0x00000200004afe27 : mov dword ptr [rsp + 0x28], eax ; mov dword ptr [rsp + 0x20], r13d ; call rsi
0x000002000049913b : mov dword ptr [rsp + 0x28], edx ; call 0x200000bb117
0x00000200006db725 : mov dword ptr [rsp + 0x2c], edi ; call rax
0x00000200006db724 : mov dword ptr [rsp + 0x2c], r15d ; call rax
0x00000200004deaf9 : mov dword ptr [rsp + 0x30], 0x8b44131b ; ret
0x000002000041ca57 : mov dword ptr [rsp + 0x30], eax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000408d98 : mov dword ptr [rsp + 0x30], eax ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000524142 : mov dword ptr [rsp + 0x30], eax ; call 0x2000014f4c7
0x0000020000162de1 : mov dword ptr [rsp + 0x30], eax ; call r8
0x0000020000017dec : mov dword ptr [rsp + 0x30], eax ; jmp 0x20000017dd2
0x0000020000211b71 : mov dword ptr [rsp + 0x30], eax ; mov rcx, qword ptr [r8 + 0x30] ; call r9
0x00000200004ce567 : mov dword ptr [rsp + 0x30], ebx ; call r11
0x00000200001ee9a7 : mov dword ptr [rsp + 0x30], ebx ; jmp 0x200001ee975
0x000002000011ad90 : mov dword ptr [rsp + 0x34], eax ; call 0x200000b7056
0x0000020000055afd : mov dword ptr [rsp + 0x34], eax ; jmp 0x20000055b5a
0x000002000052c947 : mov dword ptr [rsp + 0x38], eax ; call 0x200003e8c06
0x00000200005037f8 : mov dword ptr [rsp + 0x38], ebx ; lea rcx, qword ptr [rsp + 0x20] ; call rdi
0x000002000049d991 : mov dword ptr [rsp + 0x38], edi ; call 0x200000c2de7
0x0000020000185960 : mov dword ptr [rsp + 0x38], edi ; jmp 0x20000091c29
0x00000200001b9912 : mov dword ptr [rsp + 0x38], edx ; call r9
0x000002000011f180 : mov dword ptr [rsp + 0x38], esi ; cmp esi, ecx ; jb 0x2000011f1d6 ; inc edx ; jmp 0x2000011f170
0x00000200000fcb17 : mov dword ptr [rsp + 0x3c], edi ; call r9
0x00000200000fcb16 : mov dword ptr [rsp + 0x3c], r15d ; call r9
0x00000200004991c3 : mov dword ptr [rsp + 0x40], eax ; xor edx, edx ; call 0x200000c2849
0x00000200001e75af : mov dword ptr [rsp + 0x40], ebx ; call rax
0x000002000005fb09 : mov dword ptr [rsp + 0x44], 0xc1480000 ; call qword ptr [rax]
0x0000020000496ea8 : mov dword ptr [rsp + 0x48], eax ; call 0x200000b9107
0x00000200005240e7 : mov dword ptr [rsp + 0x48], eax ; xor edx, edx ; call 0x2000014f4c9
0x00000200004420db : mov dword ptr [rsp + 0x48], ebx ; jmp 0x200004420a8
0x0000020000115d99 : mov dword ptr [rsp + 0x50], 0 ; call rsi
0x0000020000671240 : mov dword ptr [rsp + 0x50], eax ; inc edx ; jmp 0x20000671219
0x00000200003e464e : mov dword ptr [rsp + 0x50], edx ; jmp 0x200003e461b
0x000002000063d778 : mov dword ptr [rsp + 0x50], esi ; inc edx ; jmp 0x2000063d762
0x0000020000465046 : mov dword ptr [rsp + 0x54], ebx ; call r10
0x0000020000465045 : mov dword ptr [rsp + 0x54], r11d ; call r10
0x00000200004a502d : mov dword ptr [rsp + 0x58], ebx ; call 0x200000c95a7
0x00000200005152d0 : mov dword ptr [rsp + 0x58], esi ; call 0x20000140da7
0x00000200005152cf : mov dword ptr [rsp + 0x58], r14d ; call 0x20000140da8
0x0000020000607173 : mov dword ptr [rsp + 0x60], esp ; call 0x20000231ce7
0x0000020000607172 : mov dword ptr [rsp + 0x60], r12d ; call 0x20000231ce8
0x000002000019bda7 : mov dword ptr [rsp + 0x68], esi ; mov ecx, 0x10 ; call rax
0x00000200001af02b : mov dword ptr [rsp + 0x6c], ebx ; mov rcx, qword ptr [rsp + 0x68] ; call rax
0x000002000060e65e : mov dword ptr [rsp + 0x70], eax ; call 0x20000231ce7
0x000002000013e93e : mov dword ptr [rsp + 0x70], eax ; call r11
0x0000020000194190 : mov dword ptr [rsp + 0x78], ecx ; jmp 0x200000ca2c4
0x000002000015a35a : mov dword ptr [rsp + 0x80], eax ; mov eax, r10d ; jmp 0x2000015a371
0x0000020000201504 : mov dword ptr [rsp + 0x80], esi ; call 0x200000fd809
0x000002000014f76d : mov dword ptr [rsp + 0xc], eax ; mov rax, qword ptr [rsp + 8] ; ret
0x00000200000e85d4 : mov dword ptr [rsp + 8], eax ; cmp eax, r8d ; jb 0x200000e85c9 ; ret
0x0000020000138100 : mov dword ptr [rsp + 8], ecx ; ldmxcsr dword ptr [rsp + 8] ; ret
0x000002000052a1d7 : mov dword ptr [rsp + rax*2 + 0x78], esi ; call 0x2000014f4c7
0x000002000052a1d6 : mov dword ptr [rsp + rax*2 + 0x78], r14d ; call 0x2000014f4c8
0x0000020000752b5f : mov dword ptr [rsp + rbx*8 - 1], ebp ; add rsp, 0x48 ; ret
0x00000200003d4f3d : mov dword ptr [rsp], eax ; add rsp, 0x18 ; ret
0x00000200004300f0 : mov dword ptr [rsp], eax ; mov eax, edx ; add rsp, 0x18 ; ret
0x00000200005a52bf : mov dword ptr [rsp], ebx ; call 0x200001d146e
0x000002000049d671 : mov dword ptr [rsp], edi ; call 0x200000c078e
0x000002000048f081 : mov dword ptr cs:[rsi + 0x58], eax ; call 0x200000bab47
0x000002000019d9d5 : mov dword ptr fs:[rcx + r9*4 + 0x6f8db0], eax ; ret
0x00000200000503cb : mov eax, 0 ; seta al ; ret
0x000002000000bd3c : mov eax, 0 ; setne al ; ret
0x0000020000046bc8 : mov eax, 0x10 ; ret
0x000002000062d070 : mov eax, 0x100 ; ret
0x00000200007856e8 : mov eax, 0x1000 ; ret
0x00000200003f7f17 : mov eax, 0x10000 ; mov eax, r8d ; ret
0x0000020000640671 : mov eax, 0x100000 ; ret
0x00000200003be3d1 : mov eax, 0x10000000 ; ret
0x00000200005fd1a7 : mov eax, 0x102 ; ret
0x00000200001fef83 : mov eax, 0x103 ; add rsp, 0x28 ; ret
0x000002000052c92c : mov eax, 0x104 ; call 0x2000014f4c8
0x0000020000132640 : mov eax, 0x137f ; ret
0x000002000019c33a : mov eax, 0x14 ; ret
0x0000020000134169 : mov eax, 0x16 ; add rsp, 0x38 ; ret
0x00000200000daf93 : mov eax, 0x18 ; ret
0x00000200005462c8 : mov eax, 0x1c ; ret
0x000002000075f130 : mov eax, 0x1d8906ff ; ret
0x000002000065a160 : mov eax, 0x1e ; ret
0x00000200001ae6b7 : mov eax, 0x20 ; call 0x2000014a8e7
0x00000200007856e2 : mov eax, 0x2000 ; ret
0x00000200003be3cb : mov eax, 0x2000000 ; ret
0x000002000052b6b4 : mov eax, 0x2010 ; call 0x2000014f4c8
0x000002000060311d : mov eax, 0x20207050 ; call 0x20000231ce8
0x000002000052b6a0 : mov eax, 0x208 ; call 0x2000014f4c8
0x0000020000224e5e : mov eax, 0x23000000 ; ret 0x8331
0x000002000065a1a7 : mov eax, 0x28 ; ret
0x000002000063f71b : mov eax, 0x2d0 ; ret
0x0000020000775307 : mov eax, 0x2df2e8ff ; xchg eax, esp ; dec dword ptr [rax - 0x75] ; ret
0x0000020000205dcc : mov eax, 0x30 ; ret
0x0000020000604fb9 : mov eax, 0x30706e50 ; call 0x20000231ce8
0x000002000065a181 : mov eax, 0x32 ; ret
0x0000020000221601 : mov eax, 0x33000001 ; leave ; call r9
0x0000020000610cba : mov eax, 0x34706e50 ; call 0x20000231ce8
0x00000200001ab77c : mov eax, 0x350059 ; ret
0x0000020000757434 : mov eax, 0x35894cff ; ret
0x000002000065a190 : mov eax, 0x3c ; ret
0x0000020000038586 : mov eax, 0x3e8 ; ret
0x0000020000640665 : mov eax, 0x40000 ; ret
0x000002000065e82d : mov eax, 0x40000002 ; call 0x2000005ab17
0x0000020000546214 : mov eax, 0x4000001 ; xor eax, eax ; ret
0x00000200005c43da : mov eax, 0x41000000 ; call rsi
0x0000020000496939 : mov eax, 0x41000000 ; pop rbp ; pop rdi ; ret
0x000002000064dfcb : mov eax, 0x418 ; call 0x2000014f4c9
0x000002000051279e : mov eax, 0x41cf8b48 ; call rdi
0x000002000050acb8 : mov eax, 0x457f0ff3 ; shr al, 0x1d ; push rdi ; ret
0x0000020000604131 : mov eax, 0x47706e50 ; call 0x20000231ce8
0x000002000064bd5d : mov eax, 0x48000000 ; add esp, 0x20 ; pop rbx ; ret
0x000002000053ed95 : mov eax, 0x48000000 ; add esp, 0x20 ; pop rdi ; ret
0x00000200001bc3cf : mov eax, 0x48000000 ; mov eax, edx ; ret
0x0000020000541a57 : mov eax, 0x48c38bff ; add esp, 0x20 ; pop rbx ; ret
0x0000020000768bb8 : mov eax, 0x48ffcc22 ; add esp, 0x50 ; pop rbx ; ret
0x000002000020a9c4 : mov eax, 0x48fff287 ; add esp, 0x68 ; ret
0x00000200002094c4 : mov eax, 0x48fff29c ; add esp, 0x68 ; ret
0x00000200006c2eee : mov eax, 0x4baffc1 ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret 0x8b48
0x0000020000756b3f : mov eax, 0x4d8d4cff ; xor byte ptr [rax - 0x7d], cl ; ret 0x4508
0x000002000060eefc : mov eax, 0x51706e50 ; call 0x20000231ce8
0x000002000075f0ce : mov eax, 0x5290fff ; mov dword ptr [rsi], eax ; ret 0xfff
0x00000200006101bb : mov eax, 0x57706e50 ; call 0x20000231ce8
0x000002000003b2f0 : mov eax, 0x58 ; ret
0x00000200006061d3 : mov eax, 0x58706e50 ; call 0x20000231ce8
0x00000200006d737c : mov eax, 0x589ffc2 ; jnp 0x200006d7341 ; ret 0x41ff
0x000002000075e503 : mov eax, 0x58b0001 ; mov word ptr [rsi], cs ; ret 0x85ff
0x00000200007547ad : mov eax, 0x58b48ff ; jb 0x20000754767 ; ret 0x44ff
0x000002000075f004 : mov eax, 0x58d48ff ; ret
0x00000200001ca378 : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000200002032a9 : mov eax, 0x5d7bea7 ; ret 0x109e
0x000002000065b406 : mov eax, 0x5f000000 ; pop rbx ; ret
0x000002000020732e : mov eax, 0x5f000000 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000509fe7 : mov eax, 0x5f000001 ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000607024 : mov eax, 0x63647050 ; call 0x20000231ce8
0x00000200004e5ac3 : mov eax, 0x646f6e44 ; call 0x20000231ce7
0x0000020000649376 : mov eax, 0x69000000 ; ret
0x0000020000485a53 : mov eax, 0x6e494d43 ; call 0x20000231ce7
0x00000200005059e7 : mov eax, 0x6e5a6d43 ; call 0x20000231ce7
0x0000020000117509 : mov eax, 0x7001e ; add byte ptr [rax], al ; call rdi
0x00000200001159e1 : mov eax, 0x70696d57 ; call 0x20000231ce7
0x00000200006ac791 : mov eax, 0x75c085ff ; adc bh, byte ptr [rcx] ; ret
0x0000020000665a45 : mov eax, 0x78777445 ; call 0x20000231ce7
0x000002000003858c : mov eax, 0x7d0 ; ret
0x000002000042a742 : mov eax, 0x80 ; call 0x20000046a2b
0x000002000065e8db : mov eax, 0x80000 ; call 0x2000005ab17
0x000002000064066b : mov eax, 0x80000 ; ret
0x00000200003be3bc : mov eax, 0x8000000 ; ret
0x000002000057d754 : mov eax, 0x80000014 ; ret
0x0000020000527307 : mov eax, 0x8000001a ; ret
0x00000200005fd1b3 : mov eax, 0x8000001c ; ret
0x0000020000203410 : mov eax, 0x8007007a ; mov word ptr [rcx], r11w ; ret
0x000002000075d524 : mov eax, 0x85ff9e35 ; ror byte ptr [rdi], 0x88 ; stosb byte ptr [rdi], al ; ret
0x00000200003f8269 : mov eax, 0x8664 ; ret
0x0000020000503382 : mov eax, 0x8a002d3c ; ret 0x48c3
0x0000020000003f5b : mov eax, 0x8b000000 ; ret
0x0000020000530eca : mov eax, 0x8b000a12 ; ret 0xd8f7
0x000002000041e76e : mov eax, 0x8b001668 ; ret
0x0000020000774da5 : mov eax, 0x8b4910ff ; ret 0xeae9
0x00000200001ab30b : mov eax, 0x8b49fff6 ; ret
0x00000200005f6064 : mov eax, 0x8bffad19 ; ret
0x000002000055ea44 : mov eax, 0x8bffb64f ; ret
0x0000020000691854 : mov eax, 0x8bffb9f7 ; ret
0x000002000045fa64 : mov eax, 0x8bffc67f ; jl 0x2000045fa98 ; xor al, 0x81 ; call qword ptr [rax]
0x000002000052a17e : mov eax, 0x98 ; call 0x2000014f4c8
0x00000200005212dd : mov eax, 0xa0 ; call 0x2000014f4c8
0x00000200001c1f6c : mov eax, 0xb8001237 ; ret
0x00000200003a5304 : mov eax, 0xb8ffffd9 ; ret
0x00000200006344fa : mov eax, 0xc ; ret
0x00000200001ab8b7 : mov eax, 0xc0000001 ; add rsp, 0x28 ; ret
0x0000020000123f59 : mov eax, 0xc0000001 ; add rsp, 0x38 ; ret
0x00000200004381fb : mov eax, 0xc0000001 ; jmp 0x200004381cb
0x00000200006db31c : mov eax, 0xc0000001 ; jmp 0x200006d752d
0x0000020000021d82 : mov eax, 0xc0000001 ; ret
0x0000020000130fb1 : mov eax, 0xc0000002 ; add rsp, 0x28 ; ret
0x000002000001c1f1 : mov eax, 0xc0000002 ; ret
0x0000020000506d41 : mov eax, 0xc0000003 ; ret
0x000002000062c2fd : mov eax, 0xc0000004 ; ret
0x000002000021ae11 : mov eax, 0xc000000d ; add rsp, 0x28 ; ret
0x00000200001afba6 : mov eax, 0xc000000d ; add rsp, 0x38 ; ret
0x0000020000530c99 : mov eax, 0xc000000d ; cmove edx, eax ; mov eax, edx ; ret
0x000002000005c781 : mov eax, 0xc000000d ; jmp 0x2000005c750
0x00000200004921e2 : mov eax, 0xc000000d ; jmp 0x20000491bab
0x00000200006db312 : mov eax, 0xc000000d ; jmp 0x200006d752d
0x00000200005fc537 : mov eax, 0xc000000d ; mov eax, r8d ; ret
0x00000200000177e6 : mov eax, 0xc000000d ; ret
0x0000020000615e54 : mov eax, 0xc000000e ; add rsp, 0x28 ; ret
0x00000200001bfab3 : mov eax, 0xc000000e ; mov eax, r8d ; ret
0x0000020000210e00 : mov eax, 0xc000000e ; ret
0x000002000003773e : mov eax, 0xc0000010 ; add rsp, 0x28 ; ret
0x000002000003b309 : mov eax, 0xc0000016 ; add rsp, 0x28 ; ret
0x0000020000577280 : mov eax, 0xc0000017 ; jmp 0x200003f3c88
0x0000020000540c44 : mov eax, 0xc0000022 ; add rsp, 0x28 ; ret
0x000002000044d62a : mov eax, 0xc0000022 ; jmp 0x2000044d5f9
0x00000200001ab831 : mov eax, 0xc0000022 ; ret
0x0000020000212dbd : mov eax, 0xc0000023 ; and dword ptr [r9], 0 ; ret
0x000002000043f05d : mov eax, 0xc0000023 ; jmp 0x2000043f02c
0x00000200001fc688 : mov eax, 0xc0000023 ; ret
0x00000200005fd127 : mov eax, 0xc0000032 ; ret
0x0000020000073401 : mov eax, 0xc0000033 ; ret
0x0000020000073407 : mov eax, 0xc0000034 ; ret
0x00000200005fd222 : mov eax, 0xc0000038 ; ret
0x00000200000304c5 : mov eax, 0xc0000054 ; add rsp, 0x28 ; ret
0x0000020000161bbc : mov eax, 0xc0000054 ; jmp 0x2000002deb0
0x0000020000613b8e : mov eax, 0xc0000056 ; add rsp, 0x38 ; ret
0x0000020000613a14 : mov eax, 0xc0000056 ; ret
0x000002000007bb90 : mov eax, 0xc0000058 ; ret
0x000002000021a0a7 : mov eax, 0xc0000060 ; mov eax, r8d ; ret
0x000002000011f750 : mov eax, 0xc0000061 ; add rsp, 0x28 ; ret
0x00000200001324f3 : mov eax, 0xc0000061 ; jmp 0x200001324c3
0x00000200003d9e24 : mov eax, 0xc0000079 ; ret
0x00000200001cb94f : mov eax, 0xc000007b ; ret
0x00000200005fd145 : mov eax, 0xc000007f ; ret
0x0000020000689824 : mov eax, 0xc0000095 ; mov dword ptr [r8], r9d ; ret
0x0000020000044c98 : mov eax, 0xc0000095 ; ret
0x000002000060c8ff : mov eax, 0xc000009a ; add rsp, 0x28 ; ret
0x00000200001ae601 : mov eax, 0xc000009a ; add rsp, 0x38 ; ret
0x0000020000577043 : mov eax, 0xc000009a ; jmp 0x200003f3299
0x000002000044e7d6 : mov eax, 0xc000009a ; jmp 0x2000044e7a6
0x000002000010df37 : mov eax, 0xc000009a ; ret
0x00000200005fd133 : mov eax, 0xc00000a2 ; ret
0x00000200005fd228 : mov eax, 0xc00000a3 ; ret
0x00000200001b140a : mov eax, 0xc00000bb ; add rsp, 0x28 ; ret
0x000002000004b1c3 : mov eax, 0xc00000bb ; ret
0x0000020000413145 : mov eax, 0xc00000e7 ; ret
0x000002000041161f : mov eax, 0xc00000ef ; add rsp, 0x28 ; ret
0x00000200001d02f5 : mov eax, 0xc00000ef ; add rsp, 0x38 ; ret
0x00000200001627f0 : mov eax, 0xc00000ef ; ret
0x00000200001b7a74 : mov eax, 0xc00000f0 ; add rsp, 0x38 ; ret
0x00000200001627f6 : mov eax, 0xc00000f0 ; ret
0x000002000003cab2 : mov eax, 0xc00000f1 ; ret
0x000002000003caac : mov eax, 0xc00000f2 ; ret
0x00000200005dbec6 : mov eax, 0xc00000f4 ; ret
0x00000200005fd1ad : mov eax, 0xc0000100 ; ret
0x00000200000730d4 : mov eax, 0xc0000106 ; ret
0x000002000001e680 : mov eax, 0xc0000109 ; ret
0x00000200005fc033 : mov eax, 0xc0000120 ; ret
0x0000020000546080 : mov eax, 0xc0000148 ; ret
0x00000200005fd1b9 : mov eax, 0xc0000178 ; ret
0x00000200005fd139 : mov eax, 0xc0000185 ; ret
0x0000020000521a05 : mov eax, 0xc0000189 ; ret
0x0000020000216aec : mov eax, 0xc00001a2 ; ret
0x00000200000f83b3 : mov eax, 0xc00001af ; ret
0x000002000042637b : mov eax, 0xc0000206 ; ret
0x00000200000ff7bd : mov eax, 0xc000021b ; ret
0x00000200000e9bc7 : mov eax, 0xc0000225 ; add rsp, 0x28 ; ret
0x0000020000764790 : mov eax, 0xc0000225 ; jmp 0x20000764760
0x0000020000022690 : mov eax, 0xc0000225 ; ret
0x00000200005fd21c : mov eax, 0xc0000240 ; ret
0x0000020000146688 : mov eax, 0xc0000258 ; ret
0x00000200000177e0 : mov eax, 0xc000025f ; ret
0x00000200005195e6 : mov eax, 0xc0000263 ; add rsp, 0x28 ; ret
0x00000200005fd0c9 : mov eax, 0xc000026c ; ret
0x00000200005fd1bf : mov eax, 0xc0000272 ; ret
0x000002000059892e : mov eax, 0xc00002c5 ; ret
0x00000200006198db : mov eax, 0xc0000303 ; ret
0x00000200001beef0 : mov eax, 0xc0000354 ; ret
0x0000020000050849 : mov eax, 0xc0000409 ; ret
0x00000200003b63ab : mov eax, 0xc0000428 ; ret
0x00000200006c0de3 : mov eax, 0xc000042a ; ret
0x00000200005fd12d : mov eax, 0xc0000454 ; ret
0x0000020000023195 : mov eax, 0xc3000000 ; xor eax, eax ; ret
0x00000200004e3d33 : mov eax, 0xc48348ff ; pop rax ; ret
0x00000200006aab15 : mov eax, 0xc48348ff ; pop rbx ; ret
0x00000200007475bc : mov eax, 0xc74808ff ; ret 0x7400
0x0000020000141b94 : mov eax, 0xcf ; jmp 0x2000014de87
0x0000020000141bd4 : mov eax, 0xd1 ; jmp 0x2000014de87
0x0000020000141bf4 : mov eax, 0xd2 ; jmp 0x2000014de87
0x0000020000141c14 : mov eax, 0xd3 ; jmp 0x2000014de87
0x0000020000141c34 : mov eax, 0xd4 ; jmp 0x2000014de87
0x0000020000141c54 : mov eax, 0xd5 ; jmp 0x2000014de87
0x0000020000141c74 : mov eax, 0xd6 ; jmp 0x2000014de87
0x000002000075e4e7 : mov eax, 0xd8b0001 ; and al, 0xe ; ret 0xffff
0x0000020000758310 : mov eax, 0xd8d4c00 ; scasd eax, dword ptr [rdi] ; pop rsi ; ret 0x83ff
0x0000020000499ac0 : mov eax, 0xe8000000 ; out 0x2c, eax ; ret 0x89ff
0x00000200004c1ae2 : mov eax, 0xe8000000 ; push rbp ; ret 0x48ff
0x0000020000497266 : mov eax, 0xe8000000 ; rcr dword ptr [rcx], 1 ; ret 0xf7ff
0x00000200000cf344 : mov eax, 0xe8000000 ; ret
0x00000200005f67d4 : mov eax, 0xe8ffad93 ; ret
0x0000020000631c84 : mov eax, 0xe8ffca9c ; ret
0x00000200001418b5 : mov eax, 0xe9000000 ; ret 0xc5
0x00000200001438b5 : mov eax, 0xe9000001 ; ret 0xa5
0x000002000019acc2 : mov eax, 0xe990ffe8 ; stc ; ret 0xfff4
0x00000200003b00e8 : mov eax, 0xeb000000 ; sub al, 0x8b ; ret
0x00000200001c8066 : mov eax, 0xeb000001 ; or byte ptr [rax + 0xb], cl ; ret 0x8948
0x0000020000747078 : mov eax, 0xf000000 ; mov bh, 5 ; jge 0x200007470f9 ; ret
0x000002000017403f : mov eax, 0xf000000 ; xchg eax, ebp ; ret
0x00000200001b3abb : mov eax, 0xf000000 ; xchg eax, ebp ; ret 0x8948
0x00000200000cf5db : mov eax, 0xf000002 ; mov dh, 0x8b ; ret 0
0x000002000051fee5 : mov eax, 0xf4 ; call 0x2000014f4c8
0x00000200000a9a24 : mov eax, 0xf6000000 ; ret
0x000002000062af44 : mov eax, 0xf6000000 ; ret 0x7401
0x0000020000429f22 : mov eax, 0xf6000000 ; ret 0x7501
0x00000200000d4a12 : mov eax, 0xf6000001 ; ret 0xf01
0x00000200001676a6 : mov eax, 0xf6ccffed ; ret 0xf0e
0x000002000019808c : mov eax, 0xf6ccfffa ; ret
0x00000200004ace4d : mov eax, 0xf7000000 ; ret 0
0x00000200004f129e : mov eax, 0xfe418d45 ; call qword ptr [rbx]
0x0000020000694e87 : mov eax, 0xfe418d45 ; call rbx
0x0000020000786a5a : mov eax, 0xff000000 ; or edx, 0xffffffff ; call qword ptr [rax]
0x0000020000630b9e : mov eax, 0xff000000 ; ret 0x163b
0x000002000064897a : mov eax, 0xff000000 ; ret 0xcbe8
0x0000020000544b1d : mov eax, 0xff00094f ; ret
0x00000200006d7359 : mov eax, 0xff3ffc2 ; jg 0x200006d736e ; sbb al, 0xb8 ; ret 0x89ff
0x0000020000419f03 : mov eax, 0xff418d45 ; call rbx
0x0000020000137c53 : mov eax, 0xffff ; add rsp, 0x38 ; ret
0x00000200001380f0 : mov eax, 0xffff ; ret
0x0000020000777195 : mov eax, 0xfffffd96 ; ret 0x8349
0x0000020000082b10 : mov eax, 0xfffffffe ; ret
0x0000020000021bc9 : mov eax, 1 ; add rsp, 0x28 ; ret
0x000002000014ddfc : mov eax, 1 ; add rsp, 0x38 ; ret
0x0000020000465759 : mov eax, 1 ; add rsp, 0x48 ; ret
0x00000200003d7f34 : mov eax, 1 ; add rsp, 0x58 ; ret
0x0000020000434824 : mov eax, 1 ; call 0x2000005ab18
0x0000020000512e0b : mov eax, 1 ; call 0x20000140488
0x0000020000036cb4 : mov eax, 1 ; cmove eax, r8d ; ret
0x000002000011c506 : mov eax, 1 ; mov al, r8b ; ret
0x000002000009912b : mov eax, 1 ; mov eax, r8d ; ret
0x000002000000f578 : mov eax, 1 ; ret
0x0000020000042490 : mov eax, 1 ; xchg qword ptr [rcx], rax ; ret
0x0000020000096be1 : mov eax, 2 ; add rsp, 0x38 ; ret
0x000002000048ad92 : mov eax, 2 ; call 0x20000067013
0x0000020000475d2b : mov eax, 2 ; call 0x200000a4fb8
0x0000020000030a83 : mov eax, 2 ; ret
0x0000020000105154 : mov eax, 3 ; cmovne eax, ecx ; ret
0x0000020000030a89 : mov eax, 3 ; ret
0x0000020000042395 : mov eax, 4 ; ret
0x0000020000053ca4 : mov eax, 5 ; ret
0x00000200005ad711 : mov eax, 6 ; call rax
0x00000200000423a1 : mov eax, 7 ; ret
0x00000200001ae5db : mov eax, 8 ; call 0x2000014a8e7
0x00000200000ef795 : mov eax, 8 ; ret
0x00000200003db078 : mov eax, dr0 ; ret
0x00000200001c6529 : mov eax, dr1 ; inc dword ptr [rbp - 0x76] ; xchg eax, edi ; ret
0x0000020000044b02 : mov eax, dword ptr [0x188] ; ret
0x000002000003244b : mov eax, dword ptr [r10 + 0x24] ; mov dword ptr [r8], eax ; ret
0x000002000049657e : mov eax, dword ptr [r10 + 0x2c] ; lea r9, qword ptr [rdx + rax*8] ; jmp 0x20000496545
0x00000200000f160c : mov eax, dword ptr [r8 + 4] ; mov dword ptr [r8 + 8], eax ; jmp 0x200000f15e1
0x000002000007be07 : mov eax, dword ptr [r8 + rax*4] ; add rsp, 0x28 ; ret
0x00000200003a290f : mov eax, dword ptr [r8] ; cmp eax, edx ; je 0x200003a2914 ; ret
0x000002000021b9e9 : mov eax, dword ptr [r8] ; mov dword ptr [rip + 0x1152f6], eax ; ret
0x000002000007b867 : mov eax, dword ptr [r8] ; test eax, r9d ; sete al ; ret
0x00000200001259c3 : mov eax, dword ptr [r9 + 0x18] ; mov dword ptr [rdx + rcx + 0x1c], eax ; ret
0x00000200001c98e6 : mov eax, dword ptr [rax + 0x10] ; mov rcx, qword ptr [rbx] ; call rax
0x0000020000190419 : mov eax, dword ptr [rax + 0x10] ; ret
0x000002000010c4e9 : mov eax, dword ptr [rax + 0x10] ; test r8, r8 ; je 0x2000010c4fd ; jmp r8
0x000002000041b6d5 : mov eax, dword ptr [rax + 0x10] ; test rax, rax ; jne 0x2000041b6d7 ; ret
0x0000020000008613 : mov eax, dword ptr [rax + 0x1380] ; ret
0x0000020000012cfe : mov eax, dword ptr [rax + 0x1648] ; ret
0x0000020000045862 : mov eax, dword ptr [rax + 0x1650] ; ret
0x000002000000864f : mov eax, dword ptr [rax + 0x1700] ; ret
0x00000200000082d3 : mov eax, dword ptr [rax + 0x1740] ; ret
0x000002000000863b : mov eax, dword ptr [rax + 0x1748] ; ret
0x0000020000008627 : mov eax, dword ptr [rax + 0x17e8] ; ret
0x00000200000435d6 : mov eax, dword ptr [rax + 0x18] ; ret
0x000002000001e17b : mov eax, dword ptr [rax + 0x1c8] ; ret
0x0000020000503c49 : mov eax, dword ptr [rax + 0x1f10] ; ret
0x000002000041a2e0 : mov eax, dword ptr [rax + 0x20] ; add rsp, 0x38 ; ret
0x00000200003cbebe : mov eax, dword ptr [rax + 0x20] ; ret
0x00000200000424a6 : mov eax, dword ptr [rax + 0x220] ; ret
0x0000020000230c9d : mov eax, dword ptr [rax + 0x238] ; jmp rax
0x0000020000021dce : mov eax, dword ptr [rax + 0x24] ; ret
0x0000020000190415 : mov eax, dword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 0x10] ; ret
0x00000200000bc296 : mov eax, dword ptr [rax + 0x28] ; mov rax, qword ptr [rax] ; ret
0x000002000054203d : mov eax, dword ptr [rax + 0x28] ; ret
0x00000200006c1e8b : mov eax, dword ptr [rax + 0x30] ; add rsp, 0x28 ; ret
0x00000200001f0a76 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000200001b2a59 : mov eax, dword ptr [rax + 0x30] ; test rax, rax ; je 0x200001b2a6b ; call rax
0x000002000014f6f5 : mov eax, dword ptr [rax + 0x38] ; ret
0x0000020000022c51 : mov eax, dword ptr [rax + 0x3a8] ; ret
0x0000020000058609 : mov eax, dword ptr [rax + 0x40] ; ret
0x00000200001f0ab8 : mov eax, dword ptr [rax + 0x430] ; ret
0x0000020000052f97 : mov eax, dword ptr [rax + 0x44] ; test al, 4 ; jne 0x20000052faa ; xor eax, eax ; ret
0x00000200001cd121 : mov eax, dword ptr [rax + 0x480] ; ret
0x00000200003cbeba : mov eax, dword ptr [rax + 0x48] ; mov rax, qword ptr [rax + 0x20] ; ret
0x000002000011e7ce : mov eax, dword ptr [rax + 0x48] ; ret
0x00000200001b2b35 : mov eax, dword ptr [rax + 0x48] ; test rax, rax ; je 0x200001b2b47 ; call rax
0x00000200001a5920 : mov eax, dword ptr [rax + 0x60] ; and rax, 0xfffffffffffffff0 ; ret
0x00000200001b2a1d : mov eax, dword ptr [rax + 0x60] ; test rax, rax ; je 0x200001b2a2f ; call rax
0x00000200000442ea : mov eax, dword ptr [rax + 0x628] ; ret
0x000002000002f88a : mov eax, dword ptr [rax + 0x630] ; ret
0x000002000002265a : mov eax, dword ptr [rax + 0x670] ; ret
0x000002000040703d : mov eax, dword ptr [rax + 0x678] ; ret
0x00000200000429cd : mov eax, dword ptr [rax + 0x68] ; shr eax, 0x19 ; and eax, 1 ; ret
0x0000020000125255 : mov eax, dword ptr [rax + 0x70] ; test rax, rax ; jne 0x20000125266 ; ret
0x000002000001aefa : mov eax, dword ptr [rax + 0x740] ; ret
0x0000020000021bea : mov eax, dword ptr [rax + 0xb8] ; ret
0x000002000076ecc4 : mov eax, dword ptr [rax + 0xd8] ; ret
0x00000200001ab7d9 : mov eax, dword ptr [rax + 4] ; add rsp, 0x28 ; ret
0x00000200000f160d : mov eax, dword ptr [rax + 4] ; mov dword ptr [r8 + 8], eax ; jmp 0x200000f15e0
0x0000020000760e9b : mov eax, dword ptr [rax + 8] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c0ced : mov eax, dword ptr [rax + 8] ; call rax
0x0000020000059945 : mov eax, dword ptr [rax + 8] ; cmp eax, 0xff ; je 0x20000059956 ; ret
0x00000200000edd95 : mov eax, dword ptr [rax + 8] ; cmp eax, 0xff ; je 0x200000edda6 ; ret
0x000002000003cd04 : mov eax, dword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x00000200000210e9 : mov eax, dword ptr [rax + 8] ; ret
0x00000200000bcc7a : mov eax, dword ptr [rax + 8] ; test rax, rax ; je 0x200000bcc8b ; ret
0x0000020000546024 : mov eax, dword ptr [rax + r9 + 0x18] ; sub eax, edx ; ret
0x000002000007be08 : mov eax, dword ptr [rax + rax*4] ; add rsp, 0x28 ; ret
0x000002000014f7ba : mov eax, dword ptr [rax + rax*8 + 8] ; ret
0x0000020000546021 : mov eax, dword ptr [rax + rax*8] ; mov eax, dword ptr [rax + r9 + 0x18] ; sub eax, edx ; ret
0x0000020000648d62 : mov eax, dword ptr [rax + rax] ; add byte ptr [rcx + 0x3b], cl ; ret 0xb76
0x0000020000546025 : mov eax, dword ptr [rax + rcx + 0x18] ; sub eax, edx ; ret
0x00000200000844cf : mov eax, dword ptr [rax + rcx + 0x2f] ; ret
0x000002000018129b : mov eax, dword ptr [rax + rcx + 0x30] ; ret
0x00000200001e27c1 : mov eax, dword ptr [rax + rcx + 0x50] ; mov qword ptr [r9], rax ; ret
0x00000200005360c7 : mov eax, dword ptr [rax + rcx*8] ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x0000020000595a82 : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; call rax
0x00000200003b072e : mov eax, dword ptr [rax + rcx*8] ; mov ecx, edi ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x000002000009b45c : mov eax, dword ptr [rax + rcx*8] ; ret
0x00000200000082ba : mov eax, dword ptr [rax + rcx] ; ret
0x00000200003ed4f2 : mov eax, dword ptr [rax + rdx*4] ; xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x00000200000b27e5 : mov eax, dword ptr [rax + rdx*8] ; ret
0x00000200001316fc : mov eax, dword ptr [rax] ; add eax, 0x234c0000 ; ret 0xd08a
0x00000200003ccce0 : mov eax, dword ptr [rax] ; add eax, 0x8b480000 ; ret 0xa348
0x0000020000503d71 : mov eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200003a2910 : mov eax, dword ptr [rax] ; cmp eax, edx ; je 0x200003a2913 ; ret
0x0000020000658629 : mov eax, dword ptr [rax] ; cmp rax, r8 ; jne 0x2000065860d ; xor eax, eax ; ret
0x00000200006c8fe6 : mov eax, dword ptr [rax] ; cmp rax, r8 ; jne 0x200006c8fe8 ; xor eax, eax ; ret
0x000002000077359e : mov eax, dword ptr [rax] ; inc dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000071292 : mov eax, dword ptr [rax] ; lock dec dword ptr [rax + 0xc] ; ret
0x000002000021b9ea : mov eax, dword ptr [rax] ; mov dword ptr [rip + 0x1152f6], eax ; ret
0x00000200000b03d3 : mov eax, dword ptr [rax] ; mov qword ptr [rdx + 0x10], rax ; ret
0x0000020000024262 : mov eax, dword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x0000020000008610 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x1380] ; ret
0x000002000000864c : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x1700] ; ret
0x00000200000082d0 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x1740] ; ret
0x0000020000008638 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x1748] ; ret
0x0000020000008624 : mov eax, dword ptr [rax] ; mov rax, qword ptr [rax + 0x17e8] ; ret
0x000002000002aabe : mov eax, dword ptr [rax] ; ret
0x00000200003daee6 : mov eax, dword ptr [rax] ; shr eax, 8 ; and eax, 1 ; ret
0x000002000007145b : mov eax, dword ptr [rax] ; test al, 4 ; je 0x2000007145c ; jmp 0x2000017d74a
0x00000200001e26e0 : mov eax, dword ptr [rax] ; test eax, eax ; je 0x200001e26f1 ; dec eax ; ret
0x000002000007b868 : mov eax, dword ptr [rax] ; test eax, r9d ; sete al ; ret
0x00000200001db354 : mov eax, dword ptr [rax] ; test r8, r8 ; jne 0x200001db341 ; xor eax, eax ; ret
0x00000200000f181f : mov eax, dword ptr [rax] ; test r8b, 2 ; je 0x200000f1833 ; mov eax, edx ; ret
0x00000200001f3313 : mov eax, dword ptr [rax] ; test rax, r9 ; sete al ; ret
0x00000200001b2ad5 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x200001b2ae5 ; call rax
0x00000200000596e7 : mov eax, dword ptr [rax] ; test rax, rax ; jne 0x200000596c9 ; xor eax, eax ; ret
0x00000200003c9ac7 : mov eax, dword ptr [rax] ; test rax, rax ; jne 0x200003c9ac2 ; jmp 0x200003c9a9a
0x00000200006779d8 : mov eax, dword ptr [rbp + 0x28] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005575df : mov eax, dword ptr [rbp + 0x40] ; add rsp, 0x30 ; pop rbp ; ret
0x00000200004c2f5c : mov eax, dword ptr [rbp + 0x60] ; mov rcx, rsi ; call 0x2000014f188
0x0000020000754df9 : mov eax, dword ptr [rbp + rcx*8 + 0x18] ; xor ecx, ecx ; call rax
0x0000020000426b88 : mov eax, dword ptr [rbp - 0x19] ; mov qword ptr [rsp + 0x20], rax ; call r12
0x00000200005797b0 : mov eax, dword ptr [rbp - 0x21] ; mov edx, dword ptr [rbp + 0x77] ; call 0x200001a7a41
0x0000020000437683 : mov eax, dword ptr [rbp - 0x41] ; mov qword ptr [rsp + 0x20], rax ; call r12
0x000002000014ed96 : mov eax, dword ptr [rbp - 0x78] ; add rsp, 0x28 ; ret
0x0000020000117b94 : mov eax, dword ptr [rbp - 9] ; mov rcx, rdi ; call 0x20000503dc8
0x0000020000117b1d : mov eax, dword ptr [rbp - 9] ; mov rcx, rsi ; call 0x20000503dc8
0x00000200001c991e : mov eax, dword ptr [rbx + 0x20] ; mov rdx, rdi ; mov rcx, rbp ; call rax
0x00000200004453d2 : mov eax, dword ptr [rbx + 0x20] ; test rax, rax ; je 0x200004453e8 ; call rax
0x00000200000eb5da : mov eax, dword ptr [rbx + 0x30] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000200006413b2 : mov eax, dword ptr [rbx + 0x30] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011f7f4 : mov eax, dword ptr [rbx + 0x38] ; call rax
0x00000200000399ac : mov eax, dword ptr [rbx + 0x50] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006bd84c : mov eax, dword ptr [rbx + 0x58] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000004dd7f : mov eax, dword ptr [rbx + 0x60] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000200001f67ee : mov eax, dword ptr [rbx + 0x60] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000046cf6f : mov eax, dword ptr [rbx + 0x70] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000315ae : mov eax, dword ptr [rbx + 8] ; mov r8, r14 ; call rax
0x000002000040f67c : mov eax, dword ptr [rbx + rax*8] ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000003991b : mov eax, dword ptr [rbx + rcx*4 - 0x37] ; mov r14, rax ; jmp 0x200000398ef
0x00000200005d016e : mov eax, dword ptr [rbx] ; mov rcx, rbp ; call rax
0x00000200001b6a38 : mov eax, dword ptr [rbx] ; not rax ; or rax, rdx ; jmp 0x200001b6a58
0x00000200005272f5 : mov eax, dword ptr [rcx + 0x10] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x0000020000059a8d : mov eax, dword ptr [rcx + 0x10] ; ret
0x00000200005b5df1 : mov eax, dword ptr [rcx + 0x110] ; ret
0x0000020000546041 : mov eax, dword ptr [rcx + 0x14] ; mov dword ptr [rdx + 0x207c], eax ; ret
0x000002000014f7c8 : mov eax, dword ptr [rcx + 0x14] ; mov edx, dword ptr [rdx + 0x14] ; sub eax, edx ; ret
0x00000200006816df : mov eax, dword ptr [rcx + 0x18] ; add rax, rdx ; ret
0x00000200001259c4 : mov eax, dword ptr [rcx + 0x18] ; mov dword ptr [rdx + rcx + 0x1c], eax ; ret
0x0000020000407db5 : mov eax, dword ptr [rcx + 0x18] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x0000020000082c1c : mov eax, dword ptr [rcx + 0x18] ; ret
0x0000020000042110 : mov eax, dword ptr [rcx + 0x1c0] ; ret
0x0000020000026471 : mov eax, dword ptr [rcx + 0x1c8] ; ret
0x00000200003bb01e : mov eax, dword ptr [rcx + 0x20] ; and qword ptr [rcx + 0x20], 0 ; ret
0x0000020000055b95 : mov eax, dword ptr [rcx + 0x20] ; cmp rax, 1 ; jne 0x20000055ba8 ; ret
0x00000200005461d1 : mov eax, dword ptr [rcx + 0x20] ; ret
0x0000020000036489 : mov eax, dword ptr [rcx + 0x220] ; ret
0x000002000003bc7c : mov eax, dword ptr [rcx + 0x24] ; ret
0x0000020000066cbb : mov eax, dword ptr [rcx + 0x28] ; mov qword ptr [rdx + 0x18], rax ; mov al, 1 ; ret
0x00000200001c3d36 : mov eax, dword ptr [rcx + 0x28] ; mov qword ptr [rdx], rax ; ret
0x000002000013ea3d : mov eax, dword ptr [rcx + 0x28] ; mov rdx, qword ptr [rcx + 0x20] ; call rax
0x0000020000042d8e : mov eax, dword ptr [rcx + 0x28] ; ret
0x000002000042fe11 : mov eax, dword ptr [rcx + 0x28] ; shr rax, 0xc ; ret
0x0000020000457137 : mov eax, dword ptr [rcx + 0x28] ; test rax, rax ; je 0x20000457150 ; call rax
0x0000020000132400 : mov eax, dword ptr [rcx + 0x28c] ; ret
0x0000020000106bd4 : mov eax, dword ptr [rcx + 0x2b] ; ret
0x000002000001fb54 : mov eax, dword ptr [rcx + 0x2c] ; ret
0x0000020000045a0d : mov eax, dword ptr [rcx + 0x2e8] ; ret
0x000002000003620d : mov eax, dword ptr [rcx + 0x308] ; ret
0x00000200003bb03e : mov eax, dword ptr [rcx + 0x30] ; and qword ptr [rcx + 0x30], 0 ; ret
0x00000200000376a1 : mov eax, dword ptr [rcx + 0x30] ; dec edx ; mov dword ptr [rax + 4], edx ; ret
0x000002000014f6f1 : mov eax, dword ptr [rcx + 0x30] ; mov rax, qword ptr [rax + 0x38] ; ret
0x00000200003bb6fd : mov eax, dword ptr [rcx + 0x30] ; test rax, rax ; jne 0x200003bb70e ; ret
0x000002000014f75c : mov eax, dword ptr [rcx + 0x360] ; ret
0x00000200000313fd : mov eax, dword ptr [rcx + 0x3a8] ; ret
0x0000020000038e05 : mov eax, dword ptr [rcx + 0x3b0] ; ret
0x0000020000050385 : mov eax, dword ptr [rcx + 0x3c0] ; ret
0x000002000003b4bd : mov eax, dword ptr [rcx + 0x3d8] ; ret
0x0000020000040cdd : mov eax, dword ptr [rcx + 0x3e0] ; ret
0x00000200000376ad : mov eax, dword ptr [rcx + 0x3f8] ; ret
0x00000200000bc8c0 : mov eax, dword ptr [rcx + 0x40] ; test al, 1 ; jne 0x200000bc8cf ; ret
0x000002000003f165 : mov eax, dword ptr [rcx + 0x420] ; ret
0x00000200006dcf0f : mov eax, dword ptr [rcx + 0x44] ; mov dword ptr [r8], eax ; ret
0x0000020000041cd9 : mov eax, dword ptr [rcx + 0x450] ; ret
0x0000020000029b45 : mov eax, dword ptr [rcx + 0x458] ; ret
0x000002000041b1b9 : mov eax, dword ptr [rcx + 0x460] ; ret
0x000002000020f3a4 : mov eax, dword ptr [rcx + 0x48] ; ret
0x000002000020f3a0 : mov eax, dword ptr [rcx + 0x4c] ; ret
0x0000020000041254 : mov eax, dword ptr [rcx + 0x50] ; shr eax, 0x18 ; and al, 1 ; ret
0x0000020000023186 : mov eax, dword ptr [rcx + 0x58] ; and rax, 0xfffffffffffffff9 ; ret
0x00000200001f0acd : mov eax, dword ptr [rcx + 0x5d8] ; ret
0x00000200000226b4 : mov eax, dword ptr [rcx + 0x60] ; add rsp, 0x28 ; ret
0x00000200001aad5b : mov eax, dword ptr [rcx + 0x60] ; and qword ptr [rcx + 0x60], 0 ; ret
0x0000020000487899 : mov eax, dword ptr [rcx + 0x60] ; ret
0x000002000063cd54 : mov eax, dword ptr [rcx + 0x60c] ; ret
0x0000020000038735 : mov eax, dword ptr [rcx + 0x628] ; ret
0x0000020000033d49 : mov eax, dword ptr [rcx + 0x630] ; ret
0x00000200000f8925 : mov eax, dword ptr [rcx + 0x678] ; ret
0x000002000003c236 : mov eax, dword ptr [rcx + 0x680] ; ret
0x00000200000746d0 : mov eax, dword ptr [rcx + 0x6bc] ; and al, 1 ; ret
0x00000200003f0948 : mov eax, dword ptr [rcx + 0x70] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x0000020000031858 : mov eax, dword ptr [rcx + 0x74] ; shr eax, 0xa ; and al, 1 ; ret
0x000002000006a022 : mov eax, dword ptr [rcx + 0x74] ; test al, 8 ; jne 0x2000006a025 ; xor eax, eax ; ret
0x00000200001c549a : mov eax, dword ptr [rcx + 0x778] ; ret
0x00000200001c54a2 : mov eax, dword ptr [rcx + 0x780] ; ret
0x0000020000038728 : mov eax, dword ptr [rcx + 0x78] ; shr eax, 0x11 ; and eax, 1 ; ret
0x000002000006a047 : mov eax, dword ptr [rcx + 0x78] ; test al, 2 ; jne 0x2000006a046 ; jmp 0x20000036349
0x00000200000681f3 : mov eax, dword ptr [rcx + 0x7b0] ; ret
0x000002000007071b : mov eax, dword ptr [rcx + 0x7b8] ; ret
0x000002000041188c : mov eax, dword ptr [rcx + 0xc0] ; ret
0x0000020000529b60 : mov eax, dword ptr [rcx + 0xc4] ; ret
0x000002000014f664 : mov eax, dword ptr [rcx + 0xc] ; mov edx, dword ptr [rdx + 0xc] ; sub eax, edx ; ret
0x000002000041bc34 : mov eax, dword ptr [rcx + 0xc] ; sub eax, dword ptr [rcx + 8] ; inc eax ; ret
0x00000200005460e4 : mov eax, dword ptr [rcx + 0xc] ; sub eax, dword ptr [rcx + 8] ; ret
0x000002000002f545 : mov eax, dword ptr [rcx + 0xf0] ; ret
0x000002000002c420 : mov eax, dword ptr [rcx + 4] ; ret
0x0000020000149101 : mov eax, dword ptr [rcx + 8] ; and al, 0xf0 ; ret
0x000002000007b874 : mov eax, dword ptr [rcx + 8] ; bt dword ptr [rax], edx ; setae al ; ret
0x00000200000037a5 : mov eax, dword ptr [rcx + 8] ; bt dword ptr [rax], edx ; setb al ; ret
0x0000020000039b71 : mov eax, dword ptr [rcx + 8] ; btr dword ptr [rax], edx ; ret
0x00000200001f33b9 : mov eax, dword ptr [rcx + 8] ; btr qword ptr [rax], rdx ; ret
0x0000020000039939 : mov eax, dword ptr [rcx + 8] ; bts dword ptr [rax], edx ; ret
0x00000200001f474d : mov eax, dword ptr [rcx + 8] ; bts qword ptr [rax], rdx ; ret
0x000002000041dbd2 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [r8 + 0xc], eax ; xor eax, eax ; ret
0x000002000041eb8c : mov eax, dword ptr [rcx + 8] ; mov dword ptr [r8 + 8], eax ; xor eax, eax ; ret
0x0000020000546132 : mov eax, dword ptr [rcx + 8] ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x0000020000059925 : mov eax, dword ptr [rcx + 8] ; ret
0x000002000011c516 : mov eax, dword ptr [rcx + 8] ; test rax, rax ; je 0x2000011c527 ; ret
0x00000200003cbbdb : mov eax, dword ptr [rcx + rax*4] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000051649 : mov eax, dword ptr [rcx + rax*4] ; mov dword ptr [r10], eax ; xor eax, eax ; ret
0x0000020000038a7b : mov eax, dword ptr [rcx + rax*4] ; ret
0x0000020000051be7 : mov eax, dword ptr [rcx + rax*4] ; test eax, eax ; je 0x20000051bf9 ; ret
0x000002000003105d : mov eax, dword ptr [rcx + rax*8 + 8] ; ret
0x0000020000030f18 : mov eax, dword ptr [rcx + rax*8] ; ret
0x0000020000020a28 : mov eax, dword ptr [rcx + rax*8] ; test dword ptr [rax], edx ; jne 0x20000020a3b ; xor eax, eax ; ret
0x000002000005204a : mov eax, dword ptr [rcx + rbx*8] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000014f7b6 : mov eax, dword ptr [rcx + rcx*8] ; mov rax, qword ptr [rax + r8*8 + 8] ; ret
0x00000200006b7236 : mov eax, dword ptr [rcx + rdx*4] ; add rax, r9 ; ret
0x000002000063450a : mov eax, dword ptr [rcx] ; add rax, 8 ; ret
0x000002000002d534 : mov eax, dword ptr [rcx] ; and rax, 0xfffffffffffffffc ; ret
0x00000200001d77d0 : mov eax, dword ptr [rcx] ; and rax, rdx ; ret
0x000002000044b208 : mov eax, dword ptr [rcx] ; cmp rax, rcx ; jne 0x2000044b21b ; xor eax, eax ; ret
0x00000200000bab14 : mov eax, dword ptr [rcx] ; cmp rdx, rax ; ja 0x200000bab27 ; ret
0x0000020000773bbb : mov eax, dword ptr [rcx] ; inc dword ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000002da8d : mov eax, dword ptr [rcx] ; inc rax ; mov qword ptr [rcx], rax ; ret
0x0000020000015c21 : mov eax, dword ptr [rcx] ; jmp 0x20000015beb
0x00000200001c7e5f : mov eax, dword ptr [rcx] ; mov dword ptr [rip + 0x1174d9], eax ; ret
0x0000020000546208 : mov eax, dword ptr [rcx] ; mov edx, dword ptr [rdx] ; sub eax, edx ; ret
0x00000200003e71a6 : mov eax, dword ptr [rcx] ; mov rax, qword ptr [rax + 0x20] ; ret
0x000002000021ecdb : mov eax, dword ptr [rcx] ; or rax, rdx ; jmp 0x2000021ecf2
0x0000020000026000 : mov eax, dword ptr [rcx] ; ret
0x000002000006811b : mov eax, dword ptr [rcx] ; test al, 1 ; jne 0x20000068128 ; ret
0x00000200000435cd : mov eax, dword ptr [rcx] ; test rax, rax ; jne 0x200000435dc ; ret
0x0000020000050691 : mov eax, dword ptr [rcx] ; test rax, rax ; jne 0x200000506a4 ; mov al, 1 ; ret
0x00000200006b6e63 : mov eax, dword ptr [rcx] ; test rax, rax ; jne 0x200006b6e47 ; ret
0x000002000051e235 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rcx], rax ; jmp 0x2000051e207
0x00000200002117ca : mov eax, dword ptr [rdi + 0x38] ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000047ce41 : mov eax, dword ptr [rdi + 8] ; bts dword ptr [rax], r9d ; inc rdx ; jmp 0x2000047ce24
0x0000020000661bf2 : mov eax, dword ptr [rdi + rdx*4] ; mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x20000661bf0
0x00000200004188cf : mov eax, dword ptr [rdx + 0x10] ; mov dword ptr [rcx + 0x10], eax ; xor eax, eax ; ret
0x00000200005969ff : mov eax, dword ptr [rdx + 0x10] ; mov dword ptr [rcx + 0xa0], eax ; ret
0x0000020000527387 : mov eax, dword ptr [rdx + 0x10] ; mov qword ptr [r8], rax ; mov eax, r9d ; ret
0x0000020000051546 : mov eax, dword ptr [rdx + 0x10] ; mov rdx, qword ptr [rdx + 8] ; call qword ptr [rbx]
0x000002000068168b : mov eax, dword ptr [rdx + 0x18] ; add rax, rcx ; ret
0x00000200006bf624 : mov eax, dword ptr [rdx + 0x18] ; mov qword ptr [rcx], rax ; ret
0x000002000054605e : mov eax, dword ptr [rdx + 0x207c] ; mov dword ptr [rcx + 0x14], eax ; ret
0x000002000002317e : mov eax, dword ptr [rdx + 0x220] ; ret
0x000002000003244c : mov eax, dword ptr [rdx + 0x24] ; mov dword ptr [r8], eax ; ret
0x000002000052b5fa : mov eax, dword ptr [rdx + 0x24] ; or dword ptr [rcx + 0x24], eax ; ret
0x000002000049657f : mov eax, dword ptr [rdx + 0x2c] ; lea r9, qword ptr [rdx + rax*8] ; jmp 0x20000496544
0x00000200006b8134 : mov eax, dword ptr [rdx + 0x30] ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000044e49 : mov eax, dword ptr [rdx + 0x30] ; test eax, eax ; js 0x20000044e4a ; mov rax, rdx ; ret
0x000002000007420d : mov eax, dword ptr [rdx + 0x30] ; test eax, eax ; js 0x20000074211 ; mov rax, rdx ; ret
0x000002000041caf8 : mov eax, dword ptr [rdx + 0x38] ; ret
0x000002000003246d : mov eax, dword ptr [rdx + 0x40] ; ret
0x000002000003611e : mov eax, dword ptr [rdx + 0x440] ; mov qword ptr [rcx], rax ; ret
0x00000200000f1f32 : mov eax, dword ptr [rdx + 0x50] ; mov dword ptr [rax], 4 ; ret
0x000002000065bd55 : mov eax, dword ptr [rdx + 0x7c] ; mov dword ptr [rcx + 0x1c], eax ; ret
0x0000020000405d74 : mov eax, dword ptr [rdx + 0x80] ; jmp 0x20000405d46
0x00000200005ed482 : mov eax, dword ptr [rdx + 0x88] ; mov dword ptr [rcx + 0x18], eax ; ret
0x0000020000023193 : mov eax, dword ptr [rdx + 0xb8] ; ret
0x000002000064f627 : mov eax, dword ptr [rdx + 0xc] ; test eax, eax ; je 0x2000064f669 ; add rax, rdx ; jmp 0x2000064f640
0x00000200001e2237 : mov eax, dword ptr [rdx + 4] ; mov qword ptr [rcx], rax ; ret
0x00000200000f1eb6 : mov eax, dword ptr [rdx + 8] ; mov dword ptr [r8 + 0x10], eax ; mov al, 1 ; ret
0x000002000003b031 : mov eax, dword ptr [rdx + 8] ; mov qword ptr [rcx + 8], rax ; ret
0x00000200000f73b5 : mov eax, dword ptr [rdx + 8] ; mov qword ptr [rdx + 0x30], rax ; ret
0x00000200000c1a41 : mov eax, dword ptr [rdx + r8*4] ; ret
0x00000200000c1a42 : mov eax, dword ptr [rdx + rax*4] ; ret
0x00000200003ed827 : mov eax, dword ptr [rdx + rax*4] ; sub eax, r8d ; ret
0x0000020000435282 : mov eax, dword ptr [rdx + rbp*4 + 0x4350a8] ; add rax, r10 ; jmp rax
0x000002000001cec1 : mov eax, dword ptr [rdx + rcx*4 + 0x1c328] ; add rax, rdx ; jmp rax
0x0000020000152cf3 : mov eax, dword ptr [rdx] ; add rsp, 0x20 ; pop rbp ; ret
0x000002000015254a : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x000002000014aadd : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; ret
0x00000200001525bc : mov eax, dword ptr [rdx] ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001fd9e4 : mov eax, dword ptr [rdx] ; and rax, 0xfffff000 ; ret
0x000002000040bf39 : mov eax, dword ptr [rdx] ; mov qword ptr [rcx], rax ; ret
0x00000200001c9e41 : mov eax, dword ptr [rip + 0x105009] ; call qword ptr [rax]
0x00000200001c9dd5 : mov eax, dword ptr [rip + 0x105075] ; call qword ptr [rax]
0x00000200001c9d87 : mov eax, dword ptr [rip + 0x1050c3] ; mov rbx, rcx ; call qword ptr [rax]
0x00000200001c3d54 : mov eax, dword ptr [rip + 0x108d6e] ; ret
0x00000200001afb23 : mov eax, dword ptr [rip + 0x12294f] ; call rax
0x00000200001af834 : mov eax, dword ptr [rip + 0x122c3e] ; call rax
0x00000200001af1df : mov eax, dword ptr [rip + 0x123293] ; call rax
0x00000200001aec9f : mov eax, dword ptr [rip + 0x1237d3] ; call rax
0x00000200001ae929 : mov eax, dword ptr [rip + 0x123b49] ; call rax
0x00000200001ae39b : mov eax, dword ptr [rip + 0x1240d7] ; call rax
0x00000200001ae2fd : mov eax, dword ptr [rip + 0x124175] ; call rax
0x00000200001ae27f : mov eax, dword ptr [rip + 0x1241f3] ; call rax
0x00000200001ae138 : mov eax, dword ptr [rip + 0x12433a] ; call rax
0x00000200001adfae : mov eax, dword ptr [rip + 0x1244c4] ; call rax
0x00000200001add09 : mov eax, dword ptr [rip + 0x124769] ; call rax
0x00000200001adb07 : mov eax, dword ptr [rip + 0x12496b] ; call rax
0x00000200001ada49 : mov eax, dword ptr [rip + 0x124a29] ; call rax
0x00000200001ad949 : mov eax, dword ptr [rip + 0x124b29] ; call rax
0x00000200001acf7c : mov eax, dword ptr [rip + 0x1254f6] ; call rax
0x00000200001bfc40 : mov eax, dword ptr [rip + 0x125faa] ; mov dword ptr [rcx], eax ; ret
0x00000200001bfc30 : mov eax, dword ptr [rip + 0x125fb2] ; ret
0x00000200001abfd3 : mov eax, dword ptr [rip + 0x12649f] ; call rax
0x00000200001ab95a : mov eax, dword ptr [rip + 0x126b18] ; call rax
0x00000200001ab3aa : mov eax, dword ptr [rip + 0x1270c8] ; call rax
0x00000200001ab176 : mov eax, dword ptr [rip + 0x1272fc] ; call rax
0x000002000019eca3 : mov eax, dword ptr [rip + 0x13a2f7] ; call rax
0x000002000019ec79 : mov eax, dword ptr [rip + 0x13a321] ; call rax
0x000002000019ebaa : mov eax, dword ptr [rip + 0x13a3f0] ; call rax
0x000002000016d65b : mov eax, dword ptr [rip + 0x164e17] ; call rax
0x000002000020e4f4 : mov eax, dword ptr [rip + 0x170d62] ; mov dword ptr [r8], eax ; ret
0x000002000013764d : mov eax, dword ptr [rip + 0x18c9bd] ; ret
0x00000200006c2ed3 : mov eax, dword ptr [rip + 0x1b1e7] ; ret
0x000002000014f638 : mov eax, dword ptr [rip + 0x1b3696] ; ret
0x00000200001c6201 : mov eax, dword ptr [rip + 0x1b7e91] ; ret
0x00000200001c61fa : mov eax, dword ptr [rip + 0x1b7e9c] ; ret
0x00000200001c61f3 : mov eax, dword ptr [rip + 0x1b7ea7] ; ret
0x00000200001bff24 : mov eax, dword ptr [rip + 0x1be122] ; ret
0x00000200001c0d21 : mov eax, dword ptr [rip + 0x1be881] ; ret
0x00000200001b7da0 : mov eax, dword ptr [rip + 0x1c7702] ; call rax
0x00000200001a9fd7 : mov eax, dword ptr [rip + 0x1d54cb] ; call rax
0x00000200001a9f5e : mov eax, dword ptr [rip + 0x1d5544] ; call rax
0x00000200001a9e17 : mov eax, dword ptr [rip + 0x1d568b] ; call r8
0x000002000019ebd6 : mov eax, dword ptr [rip + 0x1df5bc] ; call rax
0x000002000017f7d4 : mov eax, dword ptr [rip + 0x1ffcce] ; call rax
0x000002000017390d : mov eax, dword ptr [rip + 0x20bb95] ; call rax
0x00000200001400ad : mov eax, dword ptr [rip + 0x23e00d] ; call rax
0x000002000011e6cd : mov eax, dword ptr [rip + 0x260dd5] ; call rax
0x000002000011e5c6 : mov eax, dword ptr [rip + 0x260edc] ; call rax
0x000002000011e2b2 : mov eax, dword ptr [rip + 0x2611f0] ; call rax
0x000002000011e15e : mov eax, dword ptr [rip + 0x261344] ; call rax
0x000002000011e0b7 : mov eax, dword ptr [rip + 0x2613eb] ; call rax
0x00000200001129f0 : mov eax, dword ptr [rip + 0x26b682] ; ret
0x0000020000112a00 : mov eax, dword ptr [rip + 0x26b826] ; ret
0x00000200000f30da : mov eax, dword ptr [rip + 0x28b0b8] ; call rax
0x00000200000f2fe1 : mov eax, dword ptr [rip + 0x28b1b1] ; call rax
0x00000200000f2024 : mov eax, dword ptr [rip + 0x28c06a] ; ret
0x00000200000ecf5c : mov eax, dword ptr [rip + 0x291386] ; ret
0x00000200000ecf63 : mov eax, dword ptr [rip + 0x291387] ; ret
0x00000200000eaf94 : mov eax, dword ptr [rip + 0x29450e] ; call r8
0x00000200000eae63 : mov eax, dword ptr [rip + 0x29463f] ; call rax
0x00000200000ead70 : mov eax, dword ptr [rip + 0x294732] ; call rax
0x00000200000ea758 : mov eax, dword ptr [rip + 0x294d4a] ; call rax
0x00000200000ea615 : mov eax, dword ptr [rip + 0x294e8d] ; call rax
0x00000200000ea5d8 : mov eax, dword ptr [rip + 0x294eca] ; call rax
0x00000200000ea43d : mov eax, dword ptr [rip + 0x295065] ; call rax
0x00000200000ea3ef : mov eax, dword ptr [rip + 0x2950b3] ; call rax
0x00000200000ea2a8 : mov eax, dword ptr [rip + 0x2951fa] ; call rax
0x000002000001f088 : mov eax, dword ptr [rip + 0x2b9692] ; ret
0x000002000001585b : mov eax, dword ptr [rip + 0x2e5b43] ; mov dword ptr [r9], eax ; ret
0x0000020000008561 : mov eax, dword ptr [rip + 0x2f4181] ; sub rax, rcx ; ret
0x00000200000082c1 : mov eax, dword ptr [rip + 0x2f44c9] ; ret
0x000002000007d6fb : mov eax, dword ptr [rip + 0x301da7] ; call rax
0x000002000007c895 : mov eax, dword ptr [rip + 0x302c0d] ; call rax
0x000002000007c7e7 : mov eax, dword ptr [rip + 0x302cbb] ; call rax
0x000002000007c736 : mov eax, dword ptr [rip + 0x302d6c] ; call rax
0x000002000007c687 : mov eax, dword ptr [rip + 0x302e1b] ; call rax
0x000002000007c58f : mov eax, dword ptr [rip + 0x302f13] ; call rax
0x000002000007c541 : mov eax, dword ptr [rip + 0x302f61] ; call rax
0x000002000005206a : mov eax, dword ptr [rip + 0x32d19c] ; ret
0x0000020000051692 : mov eax, dword ptr [rip + 0x32db74] ; ret
0x00000200000516af : mov eax, dword ptr [rip + 0x32dbb7] ; ret
0x0000020000044784 : mov eax, dword ptr [rip + 0x33ad1e] ; call rax
0x0000020000044727 : mov eax, dword ptr [rip + 0x33ad7b] ; call rax
0x000002000003d1d3 : mov eax, dword ptr [rip + 0x3422cf] ; call rax
0x000002000003c131 : mov eax, dword ptr [rip + 0x343371] ; call rax
0x000002000003c0b6 : mov eax, dword ptr [rip + 0x3433ec] ; call rax
0x0000020000035910 : mov eax, dword ptr [rip + 0x349b92] ; call rax
0x0000020000035795 : mov eax, dword ptr [rip + 0x349d0d] ; call rax
0x0000020000020a50 : mov eax, dword ptr [rip + 0x35e7c6] ; ret
0x000002000014f784 : mov eax, dword ptr [rip + 0x5b98b6] ; ret
0x00000200000064b5 : mov eax, dword ptr [rip + 0x6f2dc5] ; ret
0x000002000021d481 : mov eax, dword ptr [rip + 0xb4ff1] ; mov rcx, rdi ; call rax
0x000002000021347d : mov eax, dword ptr [rip + 0xbeff5] ; call rax
0x0000020000546244 : mov eax, dword ptr [rip - 0x1c6dce] ; mov dword ptr [rcx + 0x1c], eax ; ret
0x00000200005216c3 : mov eax, dword ptr [rip - 0x21e88d] ; call 0x2000014f189
0x000002000059b5b3 : mov eax, dword ptr [rip - 0x2cbe01] ; call rax
0x000002000059b5cb : mov eax, dword ptr [rip - 0x2cbe29] ; call rax
0x000002000059b5dd : mov eax, dword ptr [rip - 0x2cbe43] ; call rax
0x0000020000647230 : mov eax, dword ptr [rip - 0x34c5b6] ; ret
0x0000020000673189 : mov eax, dword ptr [rip - 0x3a3957] ; call rax
0x00000200006b0610 : mov eax, dword ptr [rip - 0x3b7cb800] ; pop rax ; ret
0x00000200006b04b4 : mov eax, dword ptr [rip - 0x3d806e] ; ret
0x00000200003f866b : mov eax, dword ptr [rip - 0x793a9] ; call rax
0x00000200003f8bad : mov eax, dword ptr [rip - 0x798eb] ; call rax
0x00000200003f940b : mov eax, dword ptr [rip - 0x7a149] ; call rax
0x00000200003fa4da : mov eax, dword ptr [rip - 0x7b218] ; call rax
0x00000200003b2438 : mov eax, dword ptr [rip - 0xd9716] ; call rax
0x0000020000633ff0 : mov eax, dword ptr [rsi + 0x28] ; mov rdx, rsi ; mov rcx, rdi ; call rax
0x000002000060f576 : mov eax, dword ptr [rsi + 0x38] ; call rax
0x00000200004b64ef : mov eax, dword ptr [rsi + 0x60] ; mov dl, 1 ; mov rcx, r12 ; call rsi
0x00000200004b6980 : mov eax, dword ptr [rsi + 0x68] ; mov dl, 1 ; mov rcx, r12 ; call r15
0x0000020000435700 : mov eax, dword ptr [rsi + 4] ; mov dl, byte ptr [rsi + 1] ; mov cl, byte ptr [rsi] ; call rax
0x000002000001a5e6 : mov eax, dword ptr [rsi + rdx*8] ; mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x2000001a5e5
0x0000020000104248 : mov eax, dword ptr [rsi] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003e38f0 : mov eax, dword ptr [rsp + 0x20] ; add rsp, 0x38 ; ret
0x00000200004da7a4 : mov eax, dword ptr [rsp + 0x28] ; add rsp, 0x48 ; ret
0x0000020000206fe1 : mov eax, dword ptr [rsp + 0x28] ; jmp rax
0x000002000064f7fd : mov eax, dword ptr [rsp + 0x28] ; mov byte ptr [rax], 0 ; ret
0x000002000064f7df : mov eax, dword ptr [rsp + 0x28] ; mov byte ptr [rax], 1 ; ret
0x0000020000740d21 : mov eax, dword ptr [rsp + 0x28] ; mov ecx, dword ptr [rax] ; mov dword ptr [r8], ecx ; ret
0x000002000010d370 : mov eax, dword ptr [rsp + 0x28] ; pop rdi ; pop rsi ; ret
0x00000200000f5214 : mov eax, dword ptr [rsp + 0x30] ; add rsp, 0x28 ; ret
0x00000200001c0137 : mov eax, dword ptr [rsp + 0x30] ; add rsp, 0x48 ; ret
0x00000200006bede5 : mov eax, dword ptr [rsp + 0x30] ; jmp rax
0x000002000010f1c6 : mov eax, dword ptr [rsp + 0x30] ; mov qword ptr [rax], r10 ; ret
0x0000020000033d81 : mov eax, dword ptr [rsp + 0x30] ; test eax, eax ; jne 0x20000033da2 ; ret
0x00000200000ec80f : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005abd7 : mov eax, dword ptr [rsp + 0x38] ; add rsp, 0x28 ; ret
0x00000200000ccccc : mov eax, dword ptr [rsp + 0x38] ; call rax
0x0000020000206fe9 : mov eax, dword ptr [rsp + 0x38] ; jmp rax
0x0000020000032682 : mov eax, dword ptr [rsp + 0x40] ; add rsp, 0x28 ; ret
0x000002000063f493 : mov eax, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001b7ce7 : mov eax, dword ptr [rsp + 0x40] ; add rsp, 0x38 ; ret
0x0000020000070507 : mov eax, dword ptr [rsp + 0x40] ; jmp 0x20000070569
0x0000020000207091 : mov eax, dword ptr [rsp + 0x40] ; jmp rax
0x000002000052a670 : mov eax, dword ptr [rsp + 0x40] ; mov dword ptr [rdi + 0x24], eax ; jmp 0x2000052a644
0x00000200006cd21d : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051a1be : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x28 ; ret
0x000002000048bcfc : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x38 ; ret
0x00000200006b0623 : mov eax, dword ptr [rsp + 0x48] ; jmp rax
0x00000200001ab09a : mov eax, dword ptr [rsp + 0x48] ; mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000200004086f3 : mov eax, dword ptr [rsp + 0x4c] ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000206fd7 : mov eax, dword ptr [rsp + 0x50] ; jmp rax
0x000002000003ea25 : mov eax, dword ptr [rsp + 0x58] ; add rsp, 0x38 ; ret
0x0000020000085e4a : mov eax, dword ptr [rsp + 0x58] ; call rax
0x00000200004d802a : mov eax, dword ptr [rsp + 0x60] ; add rsp, 0x48 ; ret
0x00000200006d9ac3 : mov eax, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001b2b79 : mov eax, dword ptr [rsp + 0x60] ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200004e8bae : mov eax, dword ptr [rsp + 0x68] ; add rsp, 0x48 ; ret
0x00000200003ec3d8 : mov eax, dword ptr [rsp + 0x70] ; call rax
0x000002000043f125 : mov eax, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbx ; ret
0x00000200004385f7 : mov eax, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rbx ; ret
0x000002000014f772 : mov eax, dword ptr [rsp + 8] ; ret
0x00000200005ef915 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x000002000014a8c8 : mov eax, dword ptr [rsp] ; add rsp, 8 ; ret
0x000002000014f6fd : mov eax, dword ptr [rsp] ; ret
0x000002000040ed7b : mov eax, eax ; add rsp, 0x18 ; ret
0x000002000010125c : mov eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b7520 : mov eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000385f4 : mov eax, eax ; add rsp, 0x28 ; ret
0x0000020000124e93 : mov eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000010a204 : mov eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200006cc6ab : mov eax, eax ; add rsp, 0x38 ; jmp r9
0x0000020000030efd : mov eax, eax ; add rsp, 0x38 ; ret
0x000002000069db70 : mov eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x000002000041a7b9 : mov eax, eax ; add rsp, 0x48 ; ret
0x00000200000df5db : mov eax, eax ; add rsp, 8 ; ret
0x0000020000572335 : mov eax, eax ; call 0x200006204f0
0x00000200004ce8a4 : mov eax, eax ; call rsi
0x000002000019799f : mov eax, eax ; cmp rcx, rax ; jne 0x20000197993 ; ret
0x000002000019bded : mov eax, eax ; div ecx ; ret
0x0000020000124ad5 : mov eax, eax ; inc qword ptr [rdx + rax*8] ; ret
0x0000020000009ba1 : mov eax, eax ; jne 0x20000009bc3 ; ret
0x000002000002649d : mov eax, eax ; jne 0x200000264da ; add rsp, 0x28 ; ret
0x000002000004eb4f : mov eax, eax ; jne 0x2000004eb97 ; add rsp, 0x28 ; ret
0x0000020000103603 : mov eax, eax ; jne 0x2000016cc4c ; ret
0x00000200000402fa : mov eax, eax ; lock btr qword ptr [rcx], rax ; ret
0x0000020000166998 : mov eax, eax ; lock xadd qword ptr [r9 + 0x58], rax ; ret
0x0000020000166978 : mov eax, eax ; lock xadd qword ptr [r9 + 0x60], rax ; ret
0x00000200000c1a57 : mov eax, eax ; mov dword ptr [rcx + rax*4], r9d ; ret
0x00000200000c1a37 : mov eax, eax ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000040ed78 : mov eax, eax ; mov eax, r8d ; add rsp, 0x18 ; ret
0x0000020000030efa : mov eax, eax ; mov eax, r8d ; add rsp, 0x38 ; ret
0x000002000039c543 : mov eax, eax ; mov eax, r8d ; ret
0x00000200002065f6 : mov eax, eax ; mov rax, r8 ; add rsp, 0x28 ; ret
0x0000020000040f3e : mov eax, eax ; mov rax, r8 ; ret
0x000002000012ffea : mov eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004152e4 : mov eax, eax ; mov rdx, rbx ; mov rcx, rdi ; call r10
0x00000200001a9344 : mov eax, eax ; mov rdx, rdi ; mov rcx, rbx ; call r10
0x0000020000149138 : mov eax, eax ; pop rbx ; ret
0x00000200001497e5 : mov eax, eax ; pop rsi ; pop rdi ; ret
0x0000020000491c63 : mov eax, eax ; push rsi ; ret
0x000002000001401f : mov eax, eax ; ret
0x00000200000c1a07 : mov eax, eax ; shl rax, 4 ; add rax, rcx ; ret
0x000002000048cacc : mov eax, eax ; shr rax, 1 ; ret
0x000002000014f629 : mov eax, eax ; shr rdx, 0x20 ; wrmsr ; ret
0x0000020000058dd3 : mov eax, ebp ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000523551 : mov eax, ebp ; call 0x20000524d11
0x0000020000066c62 : mov eax, ebp ; lea rdx, qword ptr [rsp + 0x40] ; mov bl, al ; call rsi
0x000002000066aa0e : mov eax, ebp ; mov dword ptr [rsp + 0x20], r15d ; call rdi
0x00000200005efeab : mov eax, ebp ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x00000200000e3ddd : mov eax, ebp ; mov rcx, r15 ; call rax
0x00000200004c9bbc : mov eax, ebp ; mov rdx, r15 ; call 0x200000ee114
0x00000200004f7588 : mov eax, ebp ; mov rdx, rax ; mov rcx, rsi ; call r14
0x00000200005389bd : mov eax, ebp ; mov rdx, rsi ; call rax
0x0000020000515531 : mov eax, ebp ; ret 0x44ff
0x000002000057a91c : mov eax, ebp ; xor edx, edx ; mov rcx, r14 ; call 0x200001a6b65
0x0000020000633209 : mov eax, ebp ; xor edx, edx ; mov rcx, rsi ; call 0x2000014f4c9
0x0000020000007520 : mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c130d : mov eax, ebx ; add rsp, 0x28 ; ret
0x000002000003c94d : mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004dae5c : mov eax, ebx ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000064b6cb : mov eax, ebx ; add rsp, 0x38 ; pop rdi ; pop rbx ; ret
0x000002000011a93a : mov eax, ebx ; add rsp, 0x38 ; ret
0x00000200004514ee : mov eax, ebx ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000028fe6 : mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004f0431 : mov eax, ebx ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000052a055 : mov eax, ebx ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000200001239e5 : mov eax, ebx ; add rsp, 0x48 ; pop rsi ; pop rbx ; ret
0x000002000041a922 : mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000134bf2 : mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000133ebb : mov eax, ebx ; add rsp, 0x68 ; pop rbx ; pop rbp ; ret
0x000002000013399c : mov eax, ebx ; add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x000002000050f127 : mov eax, ebx ; add rsp, 0x70 ; pop rbx ; ret
0x0000020000642eb5 : mov eax, ebx ; call 0x2000014f184
0x00000200005269e1 : mov eax, ebx ; call 0x2000014f4c5
0x00000200005ba31e : mov eax, ebx ; call 0x200001de4d5
0x00000200005ea366 : mov eax, ebx ; call 0x200005ea798
0x00000200005e1839 : mov eax, ebx ; call rax
0x0000020000577031 : mov eax, ebx ; jmp 0x200003f3296
0x0000020000444b98 : mov eax, ebx ; jmp 0x20000444a88
0x000002000048c2a8 : mov eax, ebx ; jmp 0x2000048c272
0x00000200006176d7 : mov eax, ebx ; lea rcx, qword ptr [rbp + 8] ; call 0x20000123990
0x0000020000583050 : mov eax, ebx ; mov cl, 0x15 ; call r10
0x00000200005830d7 : mov eax, ebx ; mov cl, 0x15 ; call rax
0x00000200005b41ad : mov eax, ebx ; mov cl, 0xc ; call r10
0x00000200005b43b0 : mov eax, ebx ; mov cl, 0xc ; call rax
0x00000200001f77c9 : mov eax, ebx ; mov dword ptr [rdi], ecx ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x000002000000aae6 : mov eax, ebx ; mov rbp, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x0000020000019909 : mov eax, ebx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001bddcf : mov eax, ebx ; mov rcx, qword ptr [r10 + 0x2990] ; call rdi
0x0000020000452f0c : mov eax, ebx ; mov rcx, r13 ; call rax
0x000002000052d77d : mov eax, ebx ; mov rcx, r14 ; call 0x2000014f188
0x00000200000ebbc9 : mov eax, ebx ; mov rcx, rsi ; call r14
0x000002000003e2c4 : mov eax, ebx ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200005d3365 : mov eax, ebx ; mov rdx, r14 ; call rax
0x000002000009bb43 : mov eax, ebx ; mov rdx, rax ; mov rcx, rbp ; call r14
0x00000200004fcce9 : mov eax, ebx ; mov rdx, rbp ; call rax
0x00000200006c0887 : mov eax, ebx ; mov rdx, rbp ; mov rcx, r14 ; call rax
0x0000020000465b4a : mov eax, ebx ; mov rdx, rbx ; mov rcx, r10 ; call rax
0x00000200004794d3 : mov eax, ebx ; mov rdx, rdi ; mov rcx, rbp ; call r15
0x00000200004b443f : mov eax, ebx ; mov rdx, rsi ; mov ecx, ebx ; call rax
0x00000200005bf090 : mov eax, ebx ; movzx edx, bl ; call 0x200001e1ba0
0x00000200001445d1 : mov eax, ebx ; pop rbx ; ret
0x000002000004ded2 : mov eax, ebx ; ret
0x00000200005d3f43 : mov eax, ebx ; xor edx, edx ; call 0x200001401e6
0x00000200006531c1 : mov eax, ebx ; xor edx, edx ; mov rcx, rax ; call 0x2000014f4c9
0x0000020000557e13 : mov eax, ecx ; add rsp, 0x20 ; pop rbp ; ret
0x000002000007aa3a : mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000004499a : mov eax, ecx ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002d815 : mov eax, ecx ; add rsp, 0x28 ; ret
0x0000020000153223 : mov eax, ecx ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001e4d23 : mov eax, ecx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000740ad2 : mov eax, ecx ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000212d91 : mov eax, ecx ; add rsp, 0x30 ; pop rdi ; ret
0x000002000000e6a0 : mov eax, ecx ; add rsp, 0x38 ; ret
0x0000020000557959 : mov eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x00000200001f4f62 : mov eax, ecx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000005c7a9 : mov eax, ecx ; add rsp, 0x48 ; ret
0x00000200004ef4cd : mov eax, ecx ; add rsp, 0x50 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003cdeb4 : mov eax, ecx ; add rsp, 0x60 ; pop rbx ; ret
0x00000200001141af : mov eax, ecx ; add rsp, 0xb8 ; ret
0x00000200004c1dbb : mov eax, ecx ; call 0x200000e8385
0x00000200005101ad : mov eax, ecx ; call rdi
0x000002000004f6c4 : mov eax, ecx ; cmovg eax, edx ; jmp 0x2000004f6d2
0x000002000003dac8 : mov eax, ecx ; lea rax, qword ptr [rdx + rax*8] ; ret
0x0000020000033bb2 : mov eax, ecx ; lock xadd qword ptr [rax + r10], rcx ; ret
0x00000200001b65f9 : mov eax, ecx ; mov eax, r8d ; add rsp, 0x28 ; ret
0x00000200000220fb : mov eax, ecx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000002016c : mov eax, ecx ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000046424d : mov eax, ecx ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x0000020000063569 : mov eax, ecx ; mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x0000020000557baf : mov eax, ecx ; pop rbp ; ret
0x000002000000d9d5 : mov eax, ecx ; ret
0x0000020000206a08 : mov eax, ecx ; shl rax, 5 ; add rax, r8 ; ret
0x00000200000361af : mov eax, ecx ; sub r8, r11 ; add r8, r10 ; jmp 0x20000036184
0x00000200004131cc : mov eax, ecx ; xor edx, edx ; mov rcx, rdi ; call 0x2000014f4c9
0x0000020000123bc3 : mov eax, edi ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000001b35f : mov eax, edi ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f28a9 : mov eax, edi ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004d6016 : mov eax, edi ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003f4efe : mov eax, edi ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000011bb36 : mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000133a6e : mov eax, edi ; add rsp, 0x60 ; pop rdi ; pop rbx ; pop rbp ; ret
0x0000020000603d4f : mov eax, edi ; add rsp, 0x60 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000050e3da : mov eax, edi ; call 0x20000135bf1
0x000002000052d85e : mov eax, edi ; call 0x2000014f185
0x00000200006b9a41 : mov eax, edi ; call rax
0x0000020000532b3e : mov eax, edi ; mov dword ptr [rbp + 0x67], eax ; jmp 0x20000532b0e
0x00000200001c41f7 : mov eax, edi ; mov edx, 0x58 ; call r12
0x00000200006c0373 : mov eax, edi ; mov edx, esi ; mov rcx, rbx ; call rax
0x000002000015d668 : mov eax, edi ; mov edx, r12d ; lea rcx, qword ptr [rbp + 0x10] ; call rbx
0x00000200005c5dce : mov eax, edi ; mov qword ptr [rsp + 0x20], rax ; call 0x20000602045
0x0000020000604435 : mov eax, edi ; mov rdx, r12 ; mov rcx, r14 ; call rax
0x0000020000694746 : mov eax, edi ; mov rdx, r14 ; mov rcx, rsi ; call rax
0x0000020000693d18 : mov eax, edi ; mov rdx, rbp ; call rax
0x00000200006b873d : mov eax, edi ; mov rdx, rbp ; mov rcx, r12 ; call rax
0x000002000046f958 : mov eax, edi ; mov rdx, rbp ; mov rcx, rsi ; call r14
0x000002000020f549 : mov eax, edi ; mov rdx, rbx ; mov ecx, ebp ; call 0x2000020b845
0x00000200006b930c : mov eax, edi ; mov rdx, rbx ; mov rcx, r14 ; call r12
0x000002000004887b : mov eax, edi ; mov rdx, rbx ; mov rcx, rsi ; call r9
0x0000020000694e2d : mov eax, edi ; mov rdx, rsi ; call rax
0x000002000041d297 : mov eax, edi ; mov rdx, rsi ; mov rcx, rbx ; call r11
0x0000020000466856 : mov eax, edi ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001497cd : mov eax, edi ; pop rsi ; pop rdi ; ret
0x0000020000694337 : mov eax, edi ; sub eax, edx ; jmp 0x20000694345
0x00000200005b329b : mov eax, edi ; xor edx, edx ; call 0x2000014f4c6
0x00000200005c042a : mov eax, edi ; xor edx, edx ; xor ecx, ecx ; call 0x200001eca31
0x000002000044f421 : mov eax, edx ; add byte ptr [rax], al ; add bh, bh ; jmp 0x2000044f3f3
0x0000020000033ba8 : mov eax, edx ; add qword ptr [r9 + rcx], rax ; ret
0x00000200004300f3 : mov eax, edx ; add rsp, 0x18 ; ret
0x0000020000046af7 : mov eax, edx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000085d1 : mov eax, edx ; add rsp, 0x28 ; ret
0x0000020000020062 : mov eax, edx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000003104d : mov eax, edx ; add rsp, 0x38 ; ret
0x00000200004d2b42 : mov eax, edx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200001fb5b6 : mov eax, edx ; add rsp, 0x48 ; ret
0x00000200001491ae : mov eax, edx ; and al, 0xf0 ; pop rbx ; ret
0x00000200006160b1 : mov eax, edx ; call 0x200004e22c4
0x000002000009bbc5 : mov eax, edx ; call r14
0x000002000010de3f : mov eax, edx ; cqo ; idiv rcx ; ret
0x00000200004ec54f : mov eax, edx ; div rcx ; mov dword ptr [r8 + 0xc], eax ; ret
0x0000020000012686 : mov eax, edx ; jmp 0x20000012671
0x0000020000015e60 : mov eax, edx ; jmp 0x20000015e3f
0x0000020000039918 : mov eax, edx ; jmp 0x200000398a8
0x000002000003d7e6 : mov eax, edx ; jmp 0x2000003d7c4
0x000002000005e4e9 : mov eax, edx ; jmp 0x2000005e4b0
0x000002000007798c : mov eax, edx ; jmp 0x20000077951
0x0000020000085b9a : mov eax, edx ; jmp 0x20000085a1c
0x00000200000e2cb5 : mov eax, edx ; jmp 0x200000e2c95
0x00000200000f3ba9 : mov eax, edx ; jmp 0x200000f3b35
0x00000200000fee87 : mov eax, edx ; jmp 0x200000fee24
0x00000200001142bc : mov eax, edx ; jmp 0x20000114286
0x000002000013b94b : mov eax, edx ; jmp 0x2000013b96d
0x000002000013e0c7 : mov eax, edx ; jmp 0x2000013e0ce
0x000002000013ee83 : mov eax, edx ; jmp 0x2000013ee8a
0x000002000013f199 : mov eax, edx ; jmp 0x2000013f1a0
0x000002000013f57d : mov eax, edx ; jmp 0x2000013f584
0x000002000015a035 : mov eax, edx ; jmp 0x2000015a03d
0x000002000015a362 : mov eax, edx ; jmp 0x2000015a369
0x00000200001a35d6 : mov eax, edx ; jmp 0x200001a35f5
0x00000200001a3658 : mov eax, edx ; jmp 0x200001a3673
0x00000200001a36b1 : mov eax, edx ; jmp 0x200001a36cb
0x00000200001be0f2 : mov eax, edx ; jmp 0x200001be0ac
0x00000200001be240 : mov eax, edx ; jmp 0x200001be25b
0x00000200001d3bf9 : mov eax, edx ; jmp 0x200001d3c49
0x00000200001d731b : mov eax, edx ; jmp 0x200001d732a
0x00000200001da360 : mov eax, edx ; jmp 0x200001da38c
0x00000200001f3e00 : mov eax, edx ; jmp 0x200001f3e24
0x00000200001f5481 : mov eax, edx ; jmp 0x200001f5489
0x000002000021beaa : mov eax, edx ; jmp 0x2000021beb1
0x0000020000221cf4 : mov eax, edx ; jmp 0x20000221cfb
0x0000020000222431 : mov eax, edx ; jmp 0x20000222438
0x0000020000222747 : mov eax, edx ; jmp 0x2000022274e
0x0000020000222990 : mov eax, edx ; jmp 0x20000222997
0x0000020000222aff : mov eax, edx ; jmp 0x20000222b06
0x0000020000222d9c : mov eax, edx ; jmp 0x20000222da3
0x00000200002230d2 : mov eax, edx ; jmp 0x200002230d9
0x00000200002231ed : mov eax, edx ; jmp 0x2000022325d
0x0000020000223367 : mov eax, edx ; jmp 0x2000022336e
0x000002000022348f : mov eax, edx ; jmp 0x20000223496
0x0000020000224304 : mov eax, edx ; jmp 0x2000022430b
0x0000020000224da9 : mov eax, edx ; jmp 0x20000224db0
0x0000020000225797 : mov eax, edx ; jmp 0x2000022579e
0x0000020000225a60 : mov eax, edx ; jmp 0x20000225a70
0x0000020000226037 : mov eax, edx ; jmp 0x2000022603e
0x0000020000226bf1 : mov eax, edx ; jmp 0x20000226bf8
0x0000020000226f0d : mov eax, edx ; jmp 0x20000226f14
0x0000020000227e6f : mov eax, edx ; jmp 0x20000227e76
0x0000020000229483 : mov eax, edx ; jmp 0x2000022948a
0x0000020000229560 : mov eax, edx ; jmp 0x20000229567
0x0000020000229dfe : mov eax, edx ; jmp 0x20000229e05
0x000002000022a20b : mov eax, edx ; jmp 0x2000022a212
0x000002000022a5a0 : mov eax, edx ; jmp 0x2000022a5a7
0x000002000022a7e6 : mov eax, edx ; jmp 0x2000022a7ed
0x000002000022ad17 : mov eax, edx ; jmp 0x2000022ad1e
0x000002000022b0f2 : mov eax, edx ; jmp 0x2000022b0f9
0x000002000022b233 : mov eax, edx ; jmp 0x2000022b23a
0x000002000022b369 : mov eax, edx ; jmp 0x2000022b379
0x000002000022b974 : mov eax, edx ; jmp 0x2000022b97b
0x000002000022c163 : mov eax, edx ; jmp 0x2000022c16a
0x000002000022df7b : mov eax, edx ; jmp 0x2000022df82
0x000002000022e3a8 : mov eax, edx ; jmp 0x2000022e3af
0x000002000022e9f0 : mov eax, edx ; jmp 0x2000022e9f7
0x000002000022ef10 : mov eax, edx ; jmp 0x2000022ef17
0x000002000022f2a4 : mov eax, edx ; jmp 0x2000022f2ab
0x000002000022f51d : mov eax, edx ; jmp 0x2000022f53e
0x000002000023048b : mov eax, edx ; jmp 0x20000230492
0x00000200003e33d1 : mov eax, edx ; jmp 0x200003e338f
0x00000200004baa67 : mov eax, edx ; jmp 0x200004baa15
0x000002000064622f : mov eax, edx ; jmp 0x20000646239
0x000002000066553e : mov eax, edx ; jmp 0x20000665520
0x000002000069de83 : mov eax, edx ; jmp 0x2000069de8d
0x000002000072b3fc : mov eax, edx ; jmp 0x2000072b406
0x000002000072c615 : mov eax, edx ; jmp 0x2000072c677
0x000002000072c9b8 : mov eax, edx ; jmp 0x2000072c9bf
0x00000200007311e4 : mov eax, edx ; jmp 0x200007311eb
0x0000020000731345 : mov eax, edx ; jmp 0x2000073134c
0x0000020000731510 : mov eax, edx ; jmp 0x20000731517
0x0000020000731f25 : mov eax, edx ; jmp 0x20000731f2c
0x0000020000732988 : mov eax, edx ; jmp 0x2000073298f
0x000002000073359f : mov eax, edx ; jmp 0x200007335a6
0x0000020000733c4a : mov eax, edx ; jmp 0x20000733c51
0x0000020000734054 : mov eax, edx ; jmp 0x2000073405b
0x0000020000734695 : mov eax, edx ; jmp 0x2000073469c
0x0000020000735296 : mov eax, edx ; jmp 0x2000073529d
0x0000020000735b5b : mov eax, edx ; jmp 0x20000735b62
0x0000020000735f77 : mov eax, edx ; jmp 0x20000735f7e
0x00000200007365a5 : mov eax, edx ; jmp 0x200007365ac
0x000002000073717c : mov eax, edx ; jmp 0x20000737183
0x00000200007374af : mov eax, edx ; jmp 0x200007374b6
0x0000020000737997 : mov eax, edx ; jmp 0x2000073799e
0x0000020000737a74 : mov eax, edx ; jmp 0x20000737a7b
0x0000020000737c98 : mov eax, edx ; jmp 0x20000737c9f
0x0000020000737ee8 : mov eax, edx ; jmp 0x20000737eef
0x0000020000738058 : mov eax, edx ; jmp 0x2000073805f
0x0000020000738504 : mov eax, edx ; jmp 0x2000073850b
0x0000020000738a03 : mov eax, edx ; jmp 0x20000738a0a
0x0000020000738bc4 : mov eax, edx ; jmp 0x20000738bcb
0x0000020000738d73 : mov eax, edx ; jmp 0x20000738d7a
0x0000020000738ef4 : mov eax, edx ; jmp 0x20000738efb
0x000002000073981b : mov eax, edx ; jmp 0x20000739822
0x0000020000739b04 : mov eax, edx ; jmp 0x20000739b0b
0x000002000073a795 : mov eax, edx ; jmp 0x2000073a79c
0x000002000073ab72 : mov eax, edx ; jmp 0x2000073ab79
0x000002000073b632 : mov eax, edx ; jmp 0x2000073b639
0x000002000073b7a2 : mov eax, edx ; jmp 0x2000073b7a9
0x000002000073b9a3 : mov eax, edx ; jmp 0x2000073b9aa
0x000002000073bd0a : mov eax, edx ; jmp 0x2000073bd11
0x000002000073bf70 : mov eax, edx ; jmp 0x2000073bf77
0x000002000073c1c4 : mov eax, edx ; jmp 0x2000073c1cb
0x000002000073c3d2 : mov eax, edx ; jmp 0x2000073c3d9
0x000002000073c5a8 : mov eax, edx ; jmp 0x2000073c5af
0x000002000073c7f3 : mov eax, edx ; jmp 0x2000073c7fa
0x000002000073cbe8 : mov eax, edx ; jmp 0x2000073cbef
0x000002000073cd55 : mov eax, edx ; jmp 0x2000073cd5c
0x000002000073d935 : mov eax, edx ; jmp 0x2000073d93c
0x000002000073e11b : mov eax, edx ; jmp 0x2000073e122
0x00000200007628f5 : mov eax, edx ; jmp 0x200007628cf
0x000002000003fd00 : mov eax, edx ; jne 0x20000166822 ; ret
0x00000200001e79aa : mov eax, edx ; lea edx, dword ptr [rbx + 0x1e] ; call r9
0x00000200001ab41a : mov eax, edx ; lock cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x00000200004111db : mov eax, edx ; mov qword ptr [rsp + 0x20], rax ; call r11
0x00000200004fc1b9 : mov eax, edx ; mov rax, r8 ; ret
0x000002000001f909 : mov eax, edx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001f263f : mov eax, edx ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000040781f : mov eax, edx ; mov rdx, r10 ; jmp r11
0x00000200001cf5ab : mov eax, edx ; mov word ptr [r8 + 0xa], cx ; ret
0x00000200006bc68d : mov eax, edx ; movsd qword ptr [rax + rcx], xmm0 ; ret
0x000002000002c267 : mov eax, edx ; pop rbx ; ret
0x00000200000234c3 : mov eax, edx ; ret
0x0000020000016a84 : mov eax, edx ; shl rax, 4 ; add rax, rcx ; ret
0x00000200000100ab : mov eax, edx ; shr rax, 0x3f ; add rax, rdx ; jmp 0x20000010072
0x00000200006281f6 : mov eax, edx ; shr rax, 0x3f ; add rax, rdx ; ret
0x00000200001b21e6 : mov eax, edx ; shr rdx, 0x20 ; wrmsr ; ret
0x000002000003bf43 : mov eax, edx ; shr rdx, 0x20 ; xrstor ptr [rcx] ; ret
0x00000200001ea149 : mov eax, edx ; test rdx, rdx ; jne 0x200001ea15c ; xor eax, eax ; ret
0x000002000015f948 : mov eax, edx ; xor edx, edx ; call r10
0x0000020000125a51 : mov eax, esi ; add rcx, rdi ; mov edx, edi ; call 0x20000521d29
0x0000020000579aaa : mov eax, esi ; call 0x200001a6b61
0x0000020000579aaa : mov eax, esi ; call 0x200001a6b64
0x00000200000315b2 : mov eax, esi ; call rax
0x00000200006b85e4 : mov eax, esi ; call rbx
0x0000020000438433 : mov eax, esi ; lea rcx, qword ptr [rdx + 0x60] ; call 0x20000065cd5
0x00000200006b8553 : mov eax, esi ; mov edx, ebp ; mov rcx, r15 ; call r14
0x00000200006c03fe : mov eax, esi ; mov edx, ebp ; mov rcx, rbx ; call rax
0x000002000057af92 : mov eax, esi ; mov rcx, r15 ; call 0x200001a6b64
0x00000200005b95ff : mov eax, esi ; mov rcx, r9 ; call 0x200001de788
0x0000020000029072 : mov eax, esi ; mov rcx, rbx ; call rax
0x00000200000e4683 : mov eax, esi ; mov rdx, r12 ; mov rcx, r13 ; call rax
0x00000200004532a9 : mov eax, esi ; mov rdx, r12 ; mov rcx, r15 ; call rax
0x000002000067da55 : mov eax, esi ; mov rdx, r15 ; movzx ecx, bx ; call rax
0x0000020000160eac : mov eax, esi ; mov rdx, rax ; call r9
0x00000200005953a7 : mov eax, esi ; mov rdx, rbp ; call rax
0x00000200006b3721 : mov eax, esi ; mov rdx, rbp ; mov rcx, r13 ; call rbx
0x00000200004091c8 : mov eax, esi ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x000002000045d05f : mov eax, esp ; call r10
0x0000020000073894 : mov eax, esp ; mov rcx, rdi ; call r14
0x000002000046546a : mov eax, esp ; mov rdx, r14 ; mov rcx, r15 ; call rax
0x00000200001d2736 : mov eax, esp ; mov rdx, rax ; mov rcx, rbx ; call qword ptr [rbx]
0x0000020000689eb0 : mov eax, gs ; ret 0xb901
0x00000200000f697b : mov eax, r10d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000085d0 : mov eax, r10d ; add rsp, 0x28 ; ret
0x0000020000020061 : mov eax, r10d ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001fc446 : mov eax, r10d ; add rsp, 0x38 ; ret
0x00000200004d2b41 : mov eax, r10d ; add rsp, 0x40 ; pop rbx ; ret
0x000002000040e7aa : mov eax, r10d ; add rsp, 0x48 ; ret
0x0000020000015e5f : mov eax, r10d ; jmp 0x20000015e40
0x000002000003d7e5 : mov eax, r10d ; jmp 0x2000003d7c5
0x00000200000e2cb4 : mov eax, r10d ; jmp 0x200000e2c96
0x000002000015a034 : mov eax, r10d ; jmp 0x2000015a03e
0x000002000015a361 : mov eax, r10d ; jmp 0x2000015a36a
0x00000200001da35f : mov eax, r10d ; jmp 0x200001da38d
0x00000200001f3dff : mov eax, r10d ; jmp 0x200001f3e25
0x000002000021bea9 : mov eax, r10d ; jmp 0x2000021beb2
0x00000200001a77f8 : mov eax, r10d ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001f6c86 : mov eax, r10d ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000002c266 : mov eax, r10d ; pop rbx ; ret
0x000002000005ac52 : mov eax, r10d ; ret
0x00000200001c130c : mov eax, r11d ; add rsp, 0x28 ; ret
0x000002000011a939 : mov eax, r11d ; add rsp, 0x38 ; ret
0x00000200004514ed : mov eax, r11d ; add rsp, 0x40 ; pop rbp ; ret
0x000002000000aae5 : mov eax, r11d ; mov rbp, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x000002000003e2c3 : mov eax, r11d ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000004ded1 : mov eax, r11d ; ret
0x000002000040ed7a : mov eax, r8d ; add rsp, 0x18 ; ret
0x000002000010125b : mov eax, r8d ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b751f : mov eax, r8d ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000385f3 : mov eax, r8d ; add rsp, 0x28 ; ret
0x0000020000124e92 : mov eax, r8d ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000030efc : mov eax, r8d ; add rsp, 0x38 ; ret
0x000002000041a7b8 : mov eax, r8d ; add rsp, 0x48 ; ret
0x00000200000df5da : mov eax, r8d ; add rsp, 8 ; ret
0x000002000019bdec : mov eax, r8d ; div ecx ; ret
0x0000020000124ad4 : mov eax, r8d ; inc qword ptr [rdx + rax*8] ; ret
0x00000200000402f9 : mov eax, r8d ; lock btr qword ptr [rcx], rax ; ret
0x0000020000166997 : mov eax, r8d ; lock xadd qword ptr [r9 + 0x58], rax ; ret
0x0000020000166977 : mov eax, r8d ; lock xadd qword ptr [r9 + 0x60], rax ; ret
0x00000200000c1a56 : mov eax, r8d ; mov dword ptr [rcx + rax*4], r9d ; ret
0x00000200000c1a36 : mov eax, r8d ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000020000052955 : mov eax, r8d ; ret
0x00000200000851fa : mov eax, r9d ; add rsp, 0x28 ; ret
0x00000200005f8b29 : mov eax, r9d ; add rsp, 0x30 ; pop rbx ; ret
0x000002000002788f : mov eax, r9d ; add rsp, 0x38 ; ret
0x000002000040fa61 : mov eax, r9d ; add rsp, 0x40 ; pop rbx ; ret
0x000002000046f2d2 : mov eax, r9d ; add rsp, 0x48 ; ret
0x0000020000033bb1 : mov eax, r9d ; lock xadd qword ptr [rax + r10], rcx ; ret
0x000002000002016b : mov eax, r9d ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000020009 : mov eax, r9d ; ret
0x000002000006a230 : mov ebp, 0x244489c2 ; or byte ptr [rcx + 3], al ; ret
0x00000200000109bf : mov ebp, 0x29e8002e ; ret
0x00000200001f0f59 : mov ebp, 0x44b60f42 ; ror dword ptr [rcx], -1 ; ret 0xff41
0x00000200000ef14f : mov ebp, 0x4800141e ; add esp, 0x28 ; ret
0x000002000004571f : mov ebp, 0x48002b6f ; shl eax, 0xc ; ret
0x000002000063c02f : mov ebp, 0x48ffb732 ; add esp, 0x30 ; pop rbx ; ret
0x000002000020af57 : mov ebp, 0x48ffe25c ; add esp, 0x48 ; ret
0x000002000013010f : mov ebp, 0x48fff908 ; add esp, 0x48 ; ret
0x00000200000d2773 : mov ebp, 0x738d48d8 ; and byte ptr [rcx - 0x75], al ; ret
0x000002000014e8f1 : mov ebp, 0x80 ; add byte ptr [rbp + rax - 0x18], dh ; ret 0xff54
0x00000200001615f0 : mov ebp, 0x83e0d3ca ; sar ecx, 0x33 ; ret 0x4a75
0x000002000011eeb9 : mov ebp, 0x83e0d3ca ; sar esi, 0x33 ; ret 0xd18b
0x00000200004821ff : mov ebp, 0x8affc401 ; ret
0x000002000052c96f : mov ebp, 0x8b000000 ; pop rdi ; adc bh, bh ; ret
0x00000200004c832c : mov ebp, 0x8b000000 ; ret
0x000002000006a935 : mov ebp, 0x8b000001 ; ret
0x0000020000510bb5 : mov ebp, 0x8b000850 ; ret
0x000002000050d722 : mov ebp, 0x8b000872 ; ret 0xe083
0x000002000007cd4f : mov ebp, 0x8b001b42 ; ret
0x00000200001cec76 : mov ebp, 0x8b48c033 ; pop rsp ; and al, 8 ; ret
0x00000200006738ff : mov ebp, 0x8bffa4ea ; ret
0x00000200005eba43 : mov ebp, 0x8bffa640 ; ret
0x000002000074df4f : mov ebp, 0x8bffae30 ; ret
0x000002000054217f : mov ebp, 0x8bffb2ee ; ret
0x000002000041015f : mov ebp, 0x8bffcb78 ; ret
0x000002000076655f : mov ebp, 0xc033ff9d ; add rsp, 0x58 ; ret
0x0000020000439b85 : mov ebp, 0xc13b44c9 ; seta al ; ret
0x00000200004ebb53 : mov ebp, 0xcb8348ff ; dec dword ptr [rax - 0x75] ; ret
0x000002000049e812 : mov ebp, 0xd233ffe5 ; call 0x200000c2848
0x00000200004e5ddb : mov ebp, 0xe8ffeb3c ; rcr byte ptr [rdx], 1 ; ret
0x0000020000141955 : mov ebp, 0xe9000000 ; and al, ch ; add byte ptr [rax], al ; ret
0x00000200000835c4 : mov ebp, 0xf6000001 ; ret
0x00000200003ca3a1 : mov ebp, 0xf6000007 ; ret
0x0000020000622e87 : mov ebp, cs ; dec dword ptr [rax + 0x3b] ; ret 0xd75
0x000002000004b75b : mov ebp, dword ptr [rax - 0x74fffffc] ; ret 0x8b48
0x00000200001fa85b : mov ebp, dword ptr [rax] ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0x148
0x00000200004d8fcb : mov ebp, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rsi ; ret
0x0000020000466d0e : mov ebp, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x000002000013ff75 : mov ebp, dword ptr [rcx + 0x18] ; mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x00000200005760c2 : mov ebp, dword ptr [rdi - 0x74b70019] ; iretd ; call 0x200000c23c9
0x00000200000867a8 : mov ebp, dword ptr [rdi] ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000086746 : mov ebp, dword ptr [rdi] ; add dh, dh ; ret
0x00000200003f18c7 : mov ebp, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x00000200000032ea : mov ebp, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x000002000000aae9 : mov ebp, dword ptr [rsp + 0x28] ; pop rdi ; ret
0x000002000049d4b4 : mov ebp, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000015068 : mov ebp, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000bab87 : mov ebp, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rsi ; ret
0x000002000005aaa6 : mov ebp, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004f2a82 : mov ebp, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rsi ; ret
0x000002000068c10b : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000009d896 : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rsi ; ret
0x000002000012a091 : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003b2163 : mov ebp, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rsi ; ret
0x00000200000bc8b2 : mov ebp, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200001c3557 : mov ebp, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000ee662 : mov ebp, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rdi ; ret
0x00000200003e75db : mov ebp, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rsi ; ret
0x000002000051a64e : mov ebp, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rdi ; ret
0x00000200001b4246 : mov ebp, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rsi ; ret
0x000002000049803b : mov ebp, eax ; call 0x200000ba7e5
0x000002000049aefc : mov ebp, eax ; call 0x200000bcc75
0x0000020000560aea : mov ebp, eax ; call 0x200000bcd14
0x000002000050e3ed : mov ebp, eax ; call 0x20000135bf1
0x000002000060348b : mov ebp, eax ; call 0x20000231ce5
0x00000200006b8d0f : mov ebp, eax ; call rbx
0x000002000057e9fc : mov ebp, eax ; inc dword ptr [rax - 0x74beef1e] ; ret
0x000002000018593d : mov ebp, eax ; jmp 0x20000091bfb
0x000002000014ada2 : mov ebp, eax ; mov r14, rax ; mov r15, rax ; jmp rsi
0x00000200004c8acd : mov ebp, ebx ; call 0x200000ecde9
0x000002000060572b : mov ebp, ebx ; call 0x20000231ce5
0x0000020000760b09 : mov ebp, ebx ; jmp 0x20000760add
0x0000020000475e70 : mov ebp, ecx ; call 0x2000009db85
0x00000200004ccf62 : mov ebp, ecx ; xor ebx, ebx ; call 0x200000ef4b3
0x00000200004ccf61 : mov ebp, ecx ; xor ebx, ebx ; call 0x200000ef4b4
0x000002000049acfe : mov ebp, ecx ; xor r12b, r12b ; call 0x200000c3088
0x000002000017e3a5 : mov ebp, edi ; dec dword ptr [rax - 0x75] ; ret
0x0000020000510531 : mov ebp, edi ; ret
0x00000200001531f3 : mov ebp, edx ; add rsp, 0x40 ; pop rbp ; ret
0x000002000049ba84 : mov ebp, esp ; call 0x200000bd245
0x000002000049ba83 : mov ebp, r12d ; call 0x200000bd246
0x000002000013287d : mov ebx, 0x164 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x5338
0x00000200004cd321 : mov ebx, 0x1800000 ; call 0x200000ef528
0x000002000074cdd4 : mov ebx, 0x200f44ff ; ret 0x2b8
0x00000200004f10b1 : mov ebx, 0x30c48348 ; pop rbx ; ret
0x00000200005963d8 : mov ebx, 0x3ae990ff ; ret
0x00000200005e6c81 : mov ebx, 0x3fff5ff ; ret
0x0000020000587cfa : mov ebx, 0x470fc23b ; ret 0xd233
0x00000200005256cd : mov ebx, 0x4800000d ; add esp, 0x38 ; ret
0x00000200006c6481 : mov ebx, 0x4800017c ; add esp, 0x58 ; ret
0x000002000010b1c1 : mov ebx, 0x4800027f ; add esp, 0x40 ; pop rbx ; ret
0x000002000004c2c1 : mov ebx, 0x48000e6e ; add esp, 0x58 ; ret
0x00000200001bde69 : mov ebx, 0x48001ef2 ; add esp, 0x20 ; pop rbx ; ret
0x000002000063bf22 : mov ebx, 0x48c00000 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001b140b : mov ebx, 0x48c00000 ; add esp, 0x28 ; ret
0x00000200001f87a8 : mov ebx, 0x48c00000 ; add esp, 0x50 ; pop rbx ; ret
0x0000020000529e89 : mov ebx, 0x48c033ff ; add esp, 0x28 ; ret
0x00000200005f4277 : mov ebx, 0x48c033ff ; add esp, 0x58 ; ret
0x000002000050330d : mov ebx, 0x48c38bff ; add esp, 0x30 ; pop rbx ; ret
0x000002000050f8ee : mov ebx, 0x48c38bff ; add esp, 0x40 ; pop rbx ; ret
0x0000020000531421 : mov ebx, 0x48ffc0ef ; add esp, 0x58 ; ret
0x00000200004ba551 : mov ebx, 0x48ffd76a ; add esp, 0x28 ; ret
0x000002000020afc1 : mov ebx, 0x48fff281 ; add esp, 0x50 ; pop rbx ; ret
0x00000200001d59c1 : mov ebx, 0x48fff5d7 ; add esp, 0x60 ; pop rbx ; ret
0x00000200001b1dc1 : mov ebx, 0x48fff813 ; add esp, 0x78 ; ret
0x000002000073bd31 : mov ebx, 0x598 ; call r12
0x0000020000691cda : mov ebx, 0x75c00000 ; or bh, bh ; ret
0x0000020000033d46 : mov ebx, 0x818b48cc ; xor byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x00000200000cdcf3 : mov ebx, 0x81be0f45 ; ret
0x0000020000683a5e : mov ebx, 0x834804eb ; ret
0x000002000002ed1a : mov ebx, 0x84189c0 ; ret
0x00000200005028f9 : mov ebx, 0x89c03345 ; ret
0x0000020000437645 : mov ebx, 0x89f38b48 ; ret
0x00000200005de184 : mov ebx, 0x89f88b41 ; ret
0x0000020000475fe4 : mov ebx, 0x8b48ffc4 ; iretd ; call 0x2000009a5c9
0x00000200006322f7 : mov ebx, 0x8b4dccff ; ret 0x8348
0x0000020000632af6 : mov ebx, 0x8baabbaa ; ret 0x6948
0x00000200001e7552 : mov ebx, 0x8bc00000 ; ret
0x000002000053e941 : mov ebx, 0x8bffb837 ; ret
0x000002000050c551 : mov ebx, 0x8bffd24a ; ret
0x000002000056499b : mov ebx, 0x8bffe69b ; ret
0x000002000052e0b0 : mov ebx, 0x903d3bff ; jmp rsp
0x000002000002ebf2 : mov ebx, 0x988189c0 ; pop rax ; add byte ptr [rax], al ; ret
0x00000200001f456f : mov ebx, 0xb000001 ; sal dh, 1 ; ret 0x753f
0x0000020000437097 : mov ebx, 0xc0000001 ; jmp 0x20000437067
0x00000200005a9c10 : mov ebx, 0xc000000d ; jmp 0x20000465e3d
0x00000200005ad364 : mov ebx, 0xc000000d ; jmp 0x20000469580
0x00000200004e43ad : mov ebx, 0xc000000d ; jmp 0x200004e437c
0x00000200000c36ae : mov ebx, 0xc000000e ; jmp 0x200000c367e
0x00000200004e1153 : mov ebx, 0xc0000034 ; jmp 0x200004e1122
0x00000200005a9c06 : mov ebx, 0xc000009a ; jmp 0x20000465e3d
0x00000200005ff8c4 : mov ebx, 0xc000009a ; jmp 0x200005ff893
0x0000020000778325 : mov ebx, 0xc00000bb ; jmp 0x200007545de
0x00000200004d939d : mov ebx, 0xc0000225 ; jmp 0x200004d936c
0x00000200004cb90f : mov ebx, 0xc032000f ; ret
0x00000200006c27cb : mov ebx, 0xc0330001 ; ret
0x000002000064b611 : mov ebx, 0xc3c00000 ; jmp rax
0x00000200002168ee : mov ebx, 0xc3c00000 ; xor eax, eax ; ret
0x000002000064b635 : mov ebx, 0xc3c00000 ; xor ecx, ecx ; jmp rax
0x00000200006030be : mov ebx, 0xc48348ff ; pop rbx ; ret
0x000002000074a6c4 : mov ebx, 0xc48348ff ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000516b88 : mov ebx, 0xc58348ff ; sub byte ptr [rax - 0x7d], cl ; ret
0x000002000040de73 : mov ebx, 0xc88b4800 ; call 0x2000003cc30
0x0000020000748145 : mov ebx, 0xd8d48ff ; ret 0xbb36
0x00000200004efba3 : mov ebx, 0xe583ffde ; adc al, ch ; jbe 0x200004efc2d ; ret 0x44ff
0x000002000058c811 : mov ebx, 0xe990ffb5 ; ret
0x0000020000746632 : mov ebx, 0xec8189ff ; pop rbx ; add byte ptr [rax], al ; ret
0x00000200006a294a : mov ebx, 0xfac27d0d ; push rsi ; outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x0000020000595941 : mov ebx, 0xfc00000 ; ret
0x000002000003771f : mov ebx, 0xfd8200f ; and bl, al ; ret
0x0000020000632b1c : mov ebx, 0xff000001 ; ret 0x3b41
0x000002000052ce8d : mov ebx, 1 ; call 0x2000014f4c8
0x00000200000825fa : mov ebx, 1 ; jmp 0x20000082591
0x0000020000601480 : mov ebx, dr1 ; ret 0x48ff
0x000002000014f02b : mov ebx, dword ptr [rbp - 0x68] ; add rsp, 0x68 ; ret
0x00000200002030c1 : mov ebx, dword ptr [rcx + rax*8 + 0x10] ; jmp 0x200002030d3
0x000002000003bb84 : mov ebx, dword ptr [rdi] ; call 0x20000086188
0x0000020000028ee1 : mov ebx, dword ptr [rdi] ; jmp 0x20000028ec3
0x0000020000437bb9 : mov ebx, dword ptr [rsi + 0x16] ; add al, ch ; ret 0xc19a
0x00000200005264e5 : mov ebx, dword ptr [rsi] ; inc rdx ; jmp 0x200005264cf
0x0000020000029cc6 : mov ebx, dword ptr [rsp + 0x10] ; pop rdi ; ret
0x000002000006a217 : mov ebx, dword ptr [rsp + 0x10] ; ret
0x000002000002cc18 : mov ebx, dword ptr [rsp + 0x18] ; pop rsi ; ret
0x000002000003f1e0 : mov ebx, dword ptr [rsp + 0x20] ; add rsp, 0x10 ; pop rdi ; ret
0x000002000010c914 : mov ebx, dword ptr [rsp + 0x20] ; add rsp, 0x28 ; ret
0x0000020000087143 : mov ebx, dword ptr [rsp + 0x20] ; pop rdi ; ret
0x0000020000486c5b : mov ebx, dword ptr [rsp + 0x28] ; pop rdi ; ret
0x000002000003238f : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rcx ; ret
0x0000020000002647 : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000037c6c : mov ebx, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rsi ; ret
0x000002000000851c : mov ebx, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000005394f : mov ebx, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rsi ; ret
0x000002000006a418 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000004a5c6 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rbp ; ret
0x00000200006c4585 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rcx ; ret
0x000002000001a0f2 : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f714a : mov ebx, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000781df3 : mov ebx, dword ptr [rsp + 0x40] ; jmp 0x20000781dc1
0x000002000022e9eb : mov ebx, dword ptr [rsp + 0x40] ; mov rax, rdx ; jmp 0x2000022e9fc
0x000002000022e3a1 : mov ebx, dword ptr [rsp + 0x40] ; xor ecx, ecx ; mov rax, rdx ; jmp 0x2000022e3b6
0x0000020000085d20 : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000003e97e : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004a75eb : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000096abe : mov ebx, dword ptr [rsp + 0x48] ; add rsp, 0x38 ; ret
0x0000020000024add : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004c91ef : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000451431 : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000006486 : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000130c95 : mov ebx, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rsi ; ret
0x00000200000c0ae3 : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c2717 : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rsi ; ret
0x000002000012a4ce : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000513c4 : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000050a6c7 : mov ebx, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rsi ; ret
0x00000200004dcbd1 : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000b048d : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000086adb : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rsi ; ret
0x0000020000108ea1 : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rbp ; ret
0x00000200000204bc : mov ebx, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000132458 : mov ebx, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000750310 : mov ebx, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rsi ; ret
0x000002000010902d : mov ebx, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000133f64 : mov ebx, dword ptr [rsp + 0x70] ; add rsp, 0x60 ; pop rbp ; ret
0x00000200000f75e8 : mov ebx, dword ptr [rsp + 0x70] ; add rsp, 0x60 ; pop rdi ; ret
0x00000200001d794e : mov ebx, dword ptr [rsp + 0x70] ; add rsp, 0x60 ; pop rsi ; ret
0x00000200001ef042 : mov ebx, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbp ; ret
0x00000200001ece34 : mov ebx, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000030b64 : mov ebx, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rdi ; ret
0x00000200003b6835 : mov ebx, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rsi ; ret
0x000002000022df76 : mov ebx, dword ptr [rsp + 0x78] ; mov rax, rdx ; jmp 0x2000022df87
0x00000200000f1692 : mov ebx, dword ptr [rsp + 8] ; mov al, dl ; ret
0x00000200001a7c73 : mov ebx, dword ptr [rsp + 8] ; mov al, r10b ; ret
0x00000200001fbec4 : mov ebx, dword ptr [rsp + 8] ; mov al, r8b ; ret
0x0000020000634ba2 : mov ebx, dword ptr [rsp + 8] ; mov al, r9b ; ret
0x00000200000299c3 : mov ebx, dword ptr [rsp + 8] ; mov dword ptr [r9 + 0x18], eax ; ret
0x000002000074855e : mov ebx, dword ptr [rsp + 8] ; mov eax, 1 ; ret
0x000002000021e7ed : mov ebx, dword ptr [rsp + 8] ; mov eax, ecx ; ret
0x000002000046b93f : mov ebx, dword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000117db8 : mov ebx, dword ptr [rsp + 8] ; mov eax, r10d ; ret
0x000002000004decd : mov ebx, dword ptr [rsp + 8] ; mov eax, r11d ; ret
0x0000020000052951 : mov ebx, dword ptr [rsp + 8] ; mov eax, r8d ; ret
0x0000020000020005 : mov ebx, dword ptr [rsp + 8] ; mov eax, r9d ; ret
0x00000200001a779b : mov ebx, dword ptr [rsp + 8] ; mov qword ptr [r8], r11 ; ret
0x000002000074ddde : mov ebx, dword ptr [rsp + 8] ; mov rax, r10 ; ret
0x0000020000126bb4 : mov ebx, dword ptr [rsp + 8] ; mov rax, r11 ; ret
0x00000200004fc3d1 : mov ebx, dword ptr [rsp + 8] ; mov rax, r8 ; ret
0x00000200006c18f2 : mov ebx, dword ptr [rsp + 8] ; mov rax, r9 ; ret
0x0000020000031b12 : mov ebx, dword ptr [rsp + 8] ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000024b8b : mov ebx, dword ptr [rsp + 8] ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x000002000003850d : mov ebx, dword ptr [rsp + 8] ; mov rsi, qword ptr [rsp + 0x10] ; ret
0x000002000021b9cd : mov ebx, dword ptr [rsp + 8] ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x00000200006421ac : mov ebx, dword ptr [rsp + 8] ; movzx eax, r9w ; ret
0x0000020000009c3d : mov ebx, dword ptr [rsp + 8] ; ret
0x0000020000462a8a : mov ebx, dword ptr [rsp] ; add rsp, 8 ; ret
0x000002000049a65b : mov ebx, eax ; call 0x200000c23c5
0x0000020000513361 : mov ebx, eax ; call 0x20000140385
0x0000020000515163 : mov ebx, eax ; call 0x20000140386
0x00000200006c418e : mov ebx, eax ; call rdi
0x00000200006c4a00 : mov ebx, eax ; call rsi
0x000002000050f4a9 : mov ebx, eax ; jmp 0x2000050f46d
0x00000200005965d6 : mov ebx, eax ; jmp 0x200005128ce
0x0000020000596699 : mov ebx, eax ; jmp 0x200005128d9
0x00000200003c9598 : mov ebx, eax ; lea r8, qword ptr [rsp + 0x78] ; call 0x20000015831
0x00000200001af7dd : mov ebx, eax ; lea rcx, qword ptr [rsp + 0x40] ; call 0x200001aba75
0x00000200000497ab : mov ebx, eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000625156 : mov ebx, eax ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000499b36 : mov ebx, eax ; mov rcx, rax ; call 0x200000bd118
0x0000020000483866 : mov ebx, eax ; or al, byte ptr [rax] ; add al, ch ; loopne 0x200004837ff ; ret
0x00000200001ac425 : mov ebx, eax ; test rax, rax ; je 0x200001ac437 ; call rax
0x0000020000487b1e : mov ebx, eax ; test rax, rax ; jne 0x20000487b15 ; call 0x20000443dc9
0x0000020000410d91 : mov ebx, ebp ; ret
0x000002000052d86d : mov ebx, ebx ; lea r8, qword ptr [rbx + rbx] ; call 0x2000014f189
0x00000200005d71a2 : mov ebx, ebx ; push -0x53e1609 ; or al, 0x8b ; ret 0xe8c1
0x0000020000042504 : mov ebx, ecx ; call 0x20000042680
0x0000020000425538 : mov ebx, ecx ; call 0x200000459c5
0x00000200004c96f3 : mov ebx, ecx ; call 0x200000ee671
0x00000200004ccfd9 : mov ebx, ecx ; call 0x200000ef501
0x0000020000581e2c : mov ebx, ecx ; call 0x200001a6b61
0x00000200001c9c9f : mov ebx, ecx ; call qword ptr [rax]
0x0000020000186239 : mov ebx, ecx ; jmp 0x20000094aa0
0x0000020000581e49 : mov ebx, ecx ; lea r8d, dword ptr [rdx + 5] ; call 0x200001a6b65
0x00000200004e24fb : mov ebx, ecx ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200003de2fa : mov ebx, ecx ; mov rdx, qword ptr [rdx + 8] ; call qword ptr [rdi]
0x00000200006c03b7 : mov ebx, ecx ; test rax, rax ; je 0x200006c03ca ; call rax
0x000002000041e9ca : mov ebx, ecx ; xor ecx, ecx ; call 0x2000004585b
0x00000200001a5933 : mov ebx, ecx ; xor edi, edi ; lea ecx, dword ptr [rdi + 5] ; call 0x20000061bb9
0x0000020000779a26 : mov ebx, edi ; jmp 0x2000075d7b7
0x00000200001c9d59 : mov ebx, edx ; call qword ptr [rax]
0x0000020000475ce7 : mov ebx, edx ; mov rdi, rcx ; call 0x2000009b448
0x0000020000498d13 : mov ebx, edx ; mov rdi, rcx ; call 0x200000bb118
0x000002000016833b : mov ebx, esi ; jmp 0x200000f4848
0x0000020000581e2b : mov ebx, r9d ; call 0x200001a6b62
0x000002000019bdab : mov ecx, 0x10 ; call rax
0x00000200004caf81 : mov ecx, 0x20 ; call 0x200000eefb0
0x000002000044334e : mov ecx, 0x200 ; call 0x20000071478
0x00000200002059d8 : mov ecx, 0x200 ; call 0x20000231ce7
0x000002000060dae4 : mov ecx, 0x200 ; call 0x20000231ce8
0x0000020000441862 : mov ecx, 0x208 ; call 0x20000071478
0x000002000077d02d : mov ecx, 0x28e9ffb9 ; ret 0xfffe
0x00000200004766cb : mov ecx, 0x360 ; add byte ptr [rdi + 1], dh ; ret
0x0000020000586ff0 : mov ecx, 0x3b48ffd7 ; ret 0x576
0x000002000002aa93 : mov ecx, 0x48002d1c ; add esp, 0x20 ; pop rbx ; ret
0x00000200005586af : mov ecx, 0x4890ffc5 ; add esp, 0x40 ; pop rbp ; ret
0x0000020000697847 : mov ecx, 0x48c033ff ; add esp, 0x20 ; pop rbx ; ret
0x00000200004f78ed : mov ecx, 0x48c033ff ; add esp, 0x38 ; ret
0x0000020000534fa3 : mov ecx, 0x48c38bff ; add esp, 0x20 ; pop rbx ; ret
0x00000200006b7553 : mov ecx, 0x48ffb79a ; add esp, 0x20 ; pop rbx ; ret
0x00000200006aab13 : mov ecx, 0x48ffb89b ; add esp, 0x40 ; pop rbx ; ret
0x00000200005f6457 : mov ecx, 0x48ffbbdf ; add esp, 0x28 ; ret
0x0000020000153c13 : mov ecx, 0x48fff2f5 ; mov dword ptr [rsi], edi ; jmp 0x20000153be6
0x0000020000491bd9 : mov ecx, 0x4911ec ; add rax, rcx ; jmp rax
0x000002000061e8d3 : mov ecx, 0x4cffcc04 ; mov dword ptr [rcx + 8], ecx ; ret
0x000002000076674d : mov ecx, 0x58948ff ; ret 0xb9c0
0x0000020000749fe1 : mov ecx, 0x5f708e0 ; stc ; ret
0x0000020000131aaf : mov ecx, 0x64 ; mov eax, ecx ; ret
0x00000200000c30ed : mov ecx, 0x75c03b49 ; add al, 0x49 ; mov eax, eax ; ret
0x00000200005a017b : mov ecx, 0x81 ; call 0x2000043c477
0x000002000006c214 : mov ecx, 0x83000001 ; ret
0x00000200001f2f4d : mov ecx, 0x8348000d ; ret
0x000002000042c657 : mov ecx, 0x834804e0 ; ret 0x4418
0x0000020000153d03 : mov ecx, 0x89490022 ; adc dword ptr [rcx - 0x75], eax ; ret 0xf49
0x0000020000496784 : mov ecx, 0x8b001237 ; ret 0xd12b
0x0000020000101255 : mov ecx, 0x8b44ffff ; ret
0x0000020000115c7e : mov ecx, 0x8b480005 ; ror dword ptr [rax - 0x75], 1 ; iretd ; call rbx
0x00000200006bb76e : mov ecx, 0x8b48ffb4 ; ret
0x0000020000598854 : mov ecx, 0x8b4cffe8 ; ret
0x00000200005e4563 : mov ecx, 0x8bffae34 ; ret
0x0000020000698053 : mov ecx, 0x8bffb98f ; ret
0x000002000060afc7 : mov ecx, 0x8bffe298 ; ret
0x000002000019d0c9 : mov ecx, 0xa ; call rax
0x000002000051b6ef : mov ecx, 0xb ; call 0x20000140868
0x0000020000442e97 : mov ecx, 0xc000000d ; call 0x2000006a2e4
0x0000020000203511 : mov ecx, 0xc000000d ; mov eax, r9d ; ret
0x00000200006ce0b1 : mov ecx, 0xc000009a ; call 0x2000006a2e3
0x000002000043cdd3 : mov ecx, 0xc000009a ; call 0x2000006a2e4
0x00000200006caef5 : mov ecx, 0xc4 ; call 0x2000020711b
0x0000020000765499 : mov ecx, 0xc48348ff ; pop rdi ; ret
0x00000200004f5fee : mov ecx, 0xcb8b48ff ; call 0x20000122928
0x00000200004a5788 : mov ecx, 0xce8b49ff ; call 0x20000481a13
0x000002000019d0a6 : mov ecx, 0xd ; call rax
0x00000200007664e4 : mov ecx, 0xd8300ff ; cli ; ret 0xffb9
0x000002000058ca17 : mov ecx, 0xe990ffb5 ; ret
0x00000200004a5193 : mov ecx, 0xe9ffc42f ; ret 0xfffd
0x000002000014a7e5 : mov ecx, 0xf0 ; xor eax, eax ; ret
0x000002000006b3a7 : mov ecx, 0xff001114 ; ret
0x0000020000495f2d : mov ecx, 0xff48ffc4 ; ret
0x00000200004248b5 : mov ecx, 0xffff ; call 0x200000516a4
0x00000200005f5dc8 : mov ecx, 0xffff ; call 0x20000052067
0x000002000049a1f9 : mov ecx, 1 ; call 0x200000bc568
0x00000200000d5218 : mov ecx, 1 ; call 0x200000d1507
0x000002000058c72c : mov ecx, 1 ; call 0x200001ba3e0
0x000002000058c72b : mov ecx, 1 ; call 0x200001ba3e1
0x0000020000608132 : mov ecx, 1 ; call 0x20000231ce8
0x0000020000595210 : mov ecx, 1 ; call 0x200003b14a7
0x00000200003e0ec5 : mov ecx, 1 ; call 0x200004cd17f
0x000002000051e22a : mov ecx, 1 ; call r8
0x0000020000595a85 : mov ecx, 1 ; call rax
0x00000200001356f4 : mov ecx, 1 ; cmovg eax, ecx ; ret
0x00000200005887c8 : mov ecx, 1 ; jmp 0x200005887ec
0x00000200001ad35a : mov ecx, 1 ; mov al, cl ; ret
0x00000200001eed26 : mov ecx, 1 ; mov eax, ecx ; ret
0x00000200006b538e : mov ecx, 1 ; mov eax, r9d ; ret
0x000002000011f7ee : mov ecx, 1 ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x00000200004c49d0 : mov ecx, 2 ; call 0x200000ebe78
0x00000200004ec688 : mov ecx, 2 ; call 0x20000117080
0x0000020000595261 : mov ecx, 2 ; call 0x200003b14a7
0x0000020000147ed4 : mov ecx, 2 ; call qword ptr [rip + 0xec251]
0x00000200002065db : mov ecx, 2 ; call rax
0x0000020000053828 : mov ecx, 2 ; mov cr8, rcx ; ret
0x00000200006719ed : mov ecx, 3 ; call rax
0x00000200005a5d8e : mov ecx, 3 ; int 0x29
0x00000200006a8e28 : mov ecx, 4 ; call 0x200006b509f
0x00000200001a595a : mov ecx, 5 ; call 0x20000061c27
0x00000200003eb72d : mov ecx, dword ptr [0x188] ; call 0x200000c7a29
0x00000200005ab912 : mov ecx, dword ptr [r10] ; and ecx, dword ptr [rax] ; jmp 0x20000467b5d
0x000002000002cd69 : mov ecx, dword ptr [r9 + 0x14] ; cmp r8d, ecx ; jb 0x2000002cd56 ; ret
0x00000200003df525 : mov ecx, dword ptr [rax + 0x10] ; cmp rcx, rdx ; jne 0x200003df53f ; ret
0x00000200001b2b15 : mov ecx, dword ptr [rax + 0x18] ; test rcx, rcx ; je 0x200001b2b29 ; jmp rcx
0x00000200006c0e9c : mov ecx, dword ptr [rax + 0x24] ; xor eax, eax ; mov dword ptr [r8 + rcx*4], edx ; ret
0x0000020000211b76 : mov ecx, dword ptr [rax + 0x30] ; call r9
0x000002000005e4bc : mov ecx, dword ptr [rax + 0x30] ; mov qword ptr [rcx + 0x70], r10 ; jmp 0x2000005e48f
0x00000200001b2a39 : mov ecx, dword ptr [rax + 0x40] ; test rcx, rcx ; je 0x200001b2a4d ; jmp rcx
0x00000200003a13e2 : mov ecx, dword ptr [rax + 0x48] ; test rcx, rcx ; je 0x200003a13f4 ; call rcx
0x00000200003af3a9 : mov ecx, dword ptr [rax + 0x48] ; test rcx, rcx ; je 0x200003af3bb ; call rcx
0x000002000074fb09 : mov ecx, dword ptr [rax + 0x78] ; test rcx, rcx ; jne 0x2000074fb1a ; ret
0x0000020000499abe : mov ecx, dword ptr [rax + 0xb8] ; call 0x200000bc7b9
0x00000200003af921 : mov ecx, dword ptr [rax + 8] ; call qword ptr [rax]
0x00000200001b29d9 : mov ecx, dword ptr [rax + 8] ; test rcx, rcx ; je 0x200001b29eb ; call rcx
0x0000020000058e19 : mov ecx, dword ptr [rax - 0x75] ; ret
0x0000020000769d85 : mov ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x00000200005067ce : mov ecx, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x00000200004c1c01 : mov ecx, dword ptr [rax] ; add eax, dword ptr [rax] ; add al, ch ; jne 0x200004c1c6d ; ret 0x48ff
0x00000200005f6310 : mov ecx, dword ptr [rax] ; cmp rcx, rax ; jbe 0x200005f6323 ; xor eax, eax ; ret
0x0000020000773dc6 : mov ecx, dword ptr [rax] ; inc dword ptr [rcx] ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000740d25 : mov ecx, dword ptr [rax] ; mov dword ptr [r8], ecx ; ret
0x00000200006bc593 : mov ecx, dword ptr [rbp + 0x10] ; mov byte ptr [rsp + 0x20], r15b ; call r12
0x000002000050af67 : mov ecx, dword ptr [rbp + 0x10] ; xor rcx, rsp ; call 0x20000133189
0x000002000060f139 : mov ecx, dword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x0000020000656ed9 : mov ecx, dword ptr [rbp + 0x17] ; xor rcx, rsp ; call 0x20000133188
0x000002000050fd8a : mov ecx, dword ptr [rbp + 0x17] ; xor rcx, rsp ; call 0x20000133189
0x000002000050c558 : mov ecx, dword ptr [rbp + 0x1f] ; xor rcx, rsp ; call 0x20000133189
0x000002000050a273 : mov ecx, dword ptr [rbp + 0x20] ; xor rcx, rsp ; call 0x20000133189
0x00000200005118fc : mov ecx, dword ptr [rbp + 0x28] ; call 0x20000140386
0x000002000051335e : mov ecx, dword ptr [rbp + 0x28] ; mov ebx, eax ; call 0x20000140388
0x000002000051501f : mov ecx, dword ptr [rbp + 0x30] ; call 0x20000140386
0x00000200005712f2 : mov ecx, dword ptr [rbp + 0x30] ; call rdx
0x0000020000614d65 : mov ecx, dword ptr [rbp + 0x38] ; xor edx, edx ; call 0x20000231017
0x0000020000452ed6 : mov ecx, dword ptr [rbp + 0x3e0] ; call rax
0x00000200001539de : mov ecx, dword ptr [rbp + 0x40] ; call rax
0x00000200003b6e96 : mov ecx, dword ptr [rbp + 0x40] ; xor rcx, rsp ; call 0x20000133188
0x0000020000510cbc : mov ecx, dword ptr [rbp + 0x47] ; xor rcx, rsp ; call 0x20000133189
0x00000200005037a5 : mov ecx, dword ptr [rbp + 0x4f] ; xor rcx, rsp ; call 0x20000133189
0x0000020000152851 : mov ecx, dword ptr [rbp + 0x50] ; call rax
0x000002000056d637 : mov ecx, dword ptr [rbp + 0x68] ; call r14
0x0000020000784153 : mov ecx, dword ptr [rbp + 0x77] ; call 0x20000140385
0x0000020000514e81 : mov ecx, dword ptr [rbp + 0x7f] ; call 0x20000140386
0x0000020000514e60 : mov ecx, dword ptr [rbp + 0x7f] ; mov ebx, eax ; call 0x20000140388
0x00000200007840d5 : mov ecx, dword ptr [rbp + 0x7f] ; test eax, eax ; js 0x2000078415f ; call 0x20000140389
0x0000020000519fec : mov ecx, dword ptr [rbp + 7] ; call 0x20000140386
0x000002000050a77b : mov ecx, dword ptr [rbp + 7] ; xor rcx, rsp ; call 0x20000133189
0x000002000050a394 : mov ecx, dword ptr [rbp - 0x10] ; xor rcx, rsp ; call 0x20000133189
0x00000200004e08d7 : mov ecx, dword ptr [rbp - 0x11] ; call rax
0x000002000050fb1b : mov ecx, dword ptr [rbp - 0x11] ; xor rcx, rsp ; call 0x20000133189
0x00000200006034a0 : mov ecx, dword ptr [rbp - 0x18] ; xor edx, edx ; call 0x20000231018
0x0000020000514385 : mov ecx, dword ptr [rbp - 0x19] ; mov ebx, eax ; call 0x20000140388
0x00000200005143e6 : mov ecx, dword ptr [rbp - 0x21] ; call 0x20000140386
0x000002000019f9ef : mov ecx, dword ptr [rbp - 0x28] ; lea rdx, qword ptr [rbp - 0x58] ; call 0x2000003bc89
0x000002000051b18f : mov ecx, dword ptr [rbp - 0x31] ; call 0x20000140386
0x000002000051da78 : mov ecx, dword ptr [rbp - 0x48] ; call 0x20000140386
0x000002000051cc6d : mov ecx, dword ptr [rbp - 0x61] ; call 0x20000140386
0x000002000051cc76 : mov ecx, dword ptr [rbp - 0x69] ; call 0x20000140386
0x00000200004aef6a : mov ecx, dword ptr [rbp - 0x70] ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000694db0 : mov ecx, dword ptr [rbp - 0x71] ; call rax
0x000002000049aa58 : mov ecx, dword ptr [rbp - 0x80] ; call 0x200000c23c6
0x00000200005940af : mov ecx, dword ptr [rbp - 0x80] ; call 0x20000140385
0x000002000050ceee : mov ecx, dword ptr [rbp - 9] ; xor rcx, rsp ; call 0x20000133189
0x000002000050c110 : mov ecx, dword ptr [rbp] ; mov rdx, rax ; call 0x20000133f79
0x000002000050522d : mov ecx, dword ptr [rbp] ; xor rcx, rsp ; call 0x20000133189
0x00000200005ce341 : mov ecx, dword ptr [rbx + 0x20] ; call 0x2000001a625
0x00000200004ccd0c : mov ecx, dword ptr [rbx + 0x20] ; call 0x200000efeea
0x00000200004cb9cb : mov ecx, dword ptr [rbx + 0x20] ; call 0x200000f1a42
0x00000200004cb95d : mov ecx, dword ptr [rbx + 0x20] ; call 0x200000f83c2
0x0000020000663275 : mov ecx, dword ptr [rbx + 0x28] ; call 0x2000014f4c5
0x00000200005c5fd4 : mov ecx, dword ptr [rbx + 0x28] ; call rax
0x00000200004c1c00 : mov ecx, dword ptr [rbx + 0x308] ; call 0x200000e7889
0x000002000049ac91 : mov ecx, dword ptr [rbx + 0x30] ; call 0x200000bd246
0x000002000019370b : mov ecx, dword ptr [rbx + 0x30] ; call 0x200000bf965
0x00000200001ba7ef : mov ecx, dword ptr [rbx + 0x38] ; call qword ptr [rax]
0x000002000000b3fa : mov ecx, dword ptr [rbx + 0x38] ; mov byte ptr [rcx], al ; jmp 0x2000000b3df
0x0000020000602681 : mov ecx, dword ptr [rbx + 0x40] ; xor edx, edx ; call 0x20000231018
0x00000200004c937b : mov ecx, dword ptr [rbx + 0x50] ; call 0x200000ede6a
0x00000200005f32f5 : mov ecx, dword ptr [rbx + 0x98] ; call 0x2000007f568
0x000002000011f98f : mov ecx, dword ptr [rbx + 0xa8] ; call rax
0x00000200004bfe3b : mov ecx, dword ptr [rbx + 8] ; call 0x200000edbd6
0x0000020000574827 : mov ecx, dword ptr [rbx + 8] ; test rcx, rcx ; je 0x20000574802 ; jmp 0x200005747fd
0x0000020000101368 : mov ecx, dword ptr [rbx] ; call 0x20000047874
0x0000020000495dcd : mov ecx, dword ptr [rbx] ; call 0x20000495e71
0x000002000065d79f : mov ecx, dword ptr [rbx] ; call 0x200004fd87d
0x00000200001c98ea : mov ecx, dword ptr [rbx] ; call rax
0x000002000060a9a2 : mov ecx, dword ptr [rbx] ; xor edx, edx ; call 0x20000231017
0x000002000054004b : mov ecx, dword ptr [rcx + 0x10] ; mov rdx, qword ptr [r9 + 8] ; call r8
0x00000200000248fb : mov ecx, dword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0x200000248ff ; ret
0x000002000002cd6a : mov ecx, dword ptr [rcx + 0x14] ; cmp r8d, ecx ; jb 0x2000002cd55 ; ret
0x00000200000f83e3 : mov ecx, dword ptr [rcx + 0x18] ; test rcx, rcx ; jne 0x200000f83e7 ; ret
0x00000200000e87bf : mov ecx, dword ptr [rcx + 0x28] ; jne 0x2000019b106 ; call rdi
0x00000200001be35a : mov ecx, dword ptr [rcx + 0x2990] ; call rax
0x00000200004c93b9 : mov ecx, dword ptr [rcx + 0x50] ; call 0x200000ede6a
0x00000200005f3122 : mov ecx, dword ptr [rcx + 0x98] ; call 0x2000007f3d8
0x00000200005f3326 : mov ecx, dword ptr [rcx + 0x98] ; call 0x2000007f568
0x000002000049df6e : mov ecx, dword ptr [rcx + 0xb20] ; call 0x200000bf969
0x000002000049df31 : mov ecx, dword ptr [rcx + 0xb20] ; call 0x200000bf979
0x00000200004c1ae0 : mov ecx, dword ptr [rcx + 0xb8] ; call 0x200000e5c49
0x0000020000652c64 : mov ecx, dword ptr [rcx + 2] ; mov qword ptr [rdx], rcx ; mov eax, r8d ; ret
0x0000020000040799 : mov ecx, dword ptr [rcx + 4] ; mov qword ptr [rdx], rcx ; mov rax, r8 ; ret
0x000002000010b2df : mov ecx, dword ptr [rcx + 8] ; call rax
0x00000200004847b4 : mov ecx, dword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000200001c9d55 : mov ecx, dword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x000002000010aea6 : mov ecx, dword ptr [rcx + 8] ; mov rsi, rdx ; call qword ptr [rbx]
0x00000200001f508b : mov ecx, dword ptr [rcx + 8] ; test rcx, rcx ; jne 0x200001f508f ; ret
0x0000020000529ab9 : mov ecx, dword ptr [rcx + 8] ; xor r8d, r8d ; mov rdx, rsi ; call rax
0x00000200000eef38 : mov ecx, dword ptr [rcx + rbx*8] ; test rcx, rcx ; je 0x200000eef4c ; call rcx
0x0000020000206712 : mov ecx, dword ptr [rcx] ; cmp r8, rcx ; jne 0x20000206707 ; ret
0x00000200001054a0 : mov ecx, dword ptr [rcx] ; inc edx ; jmp 0x20000105491
0x00000200003cd5dd : mov ecx, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rcx ; ret
0x000002000048826a : mov ecx, dword ptr [rcx] ; mov qword ptr [rdx], rcx ; ret
0x00000200005ad70e : mov ecx, dword ptr [rcx] ; mov r8d, 6 ; call rax
0x00000200001a99db : mov ecx, dword ptr [rcx] ; test r9, r9 ; jne 0x200001a99c3 ; xor eax, eax ; ret
0x000002000076c852 : mov ecx, dword ptr [rcx] ; test rcx, rcx ; jne 0x2000076c848 ; ret
0x00000200005844f9 : mov ecx, dword ptr [rdi + 0x10] ; call 0x200001a6176
0x000002000060ed55 : mov ecx, dword ptr [rdi + 0x10] ; mov edx, r14d ; call 0x20000231019
0x00000200001846c4 : mov ecx, dword ptr [rdi + 0x24] ; xor r8d, r8d ; xor edx, edx ; call rax
0x00000200004530fe : mov ecx, dword ptr [rdi + 0x2e8] ; call rax
0x0000020000061711 : mov ecx, dword ptr [rdi + 0xd8] ; call qword ptr [rax]
0x00000200001f130e : mov ecx, dword ptr [rdi + 8] ; call 0x200001f1731
0x0000020000116918 : mov ecx, dword ptr [rdi + 8] ; call r8
0x000002000040171a : mov ecx, dword ptr [rdi + 8] ; call rax
0x00000200006b67fd : mov ecx, dword ptr [rdi + rcx] ; call 0x2000001a629
0x00000200005a193a : mov ecx, dword ptr [rdi - 8] ; call qword ptr [rax]
0x0000020000443bc7 : mov ecx, dword ptr [rdi - 8] ; mov rdx, rdi ; call qword ptr [rax]
0x000002000013d880 : mov ecx, dword ptr [rdi] ; call 0x200001313e5
0x000002000050c149 : mov ecx, dword ptr [rdi] ; call 0x20000133f75
0x00000200001e2e96 : mov ecx, dword ptr [rdx + 0x1d8] ; call rax
0x00000200001bddd2 : mov ecx, dword ptr [rdx + 0x2990] ; call rdi
0x000002000012ec87 : mov ecx, dword ptr [rdx + 0xc] ; cmp eax, ecx ; ja 0x2000012ec9a ; sbb eax, eax ; ret
0x000002000003cc15 : mov ecx, dword ptr [rdx + rax*8 + 8] ; xor eax, eax ; mov qword ptr [r9], rcx ; ret
0x00000200006b5a59 : mov ecx, dword ptr [rdx - 0x28] ; mov qword ptr [r9 + 0x20], rcx ; ret
0x00000200005ab913 : mov ecx, dword ptr [rdx] ; and ecx, dword ptr [rax] ; jmp 0x20000467b5c
0x00000200004847a5 : mov ecx, dword ptr [rdx] ; cmp r8, rcx ; jne 0x200004847b8 ; xor eax, eax ; ret
0x000002000014017c : mov ecx, dword ptr [rdx] ; mov rdx, qword ptr [rdx + 8] ; call r10
0x00000200001b1e55 : mov ecx, dword ptr [rip + 0x12061d] ; call r9
0x00000200001b1514 : mov ecx, dword ptr [rip + 0x120f5e] ; call r9
0x00000200001afe1c : mov ecx, dword ptr [rip + 0x122656] ; call r9
0x00000200001afa84 : mov ecx, dword ptr [rip + 0x1229ee] ; call r9
0x00000200001af704 : mov ecx, dword ptr [rip + 0x122d6e] ; call r9
0x00000200001ae1c8 : mov ecx, dword ptr [rip + 0x1242aa] ; call r9
0x00000200001ad742 : mov ecx, dword ptr [rip + 0x124d30] ; call r9
0x00000200001ad46a : mov ecx, dword ptr [rip + 0x125008] ; call r9
0x00000200001acf0b : mov ecx, dword ptr [rip + 0x125567] ; call r9
0x00000200001acdd2 : mov ecx, dword ptr [rip + 0x1256a0] ; call r9
0x00000200001acbd6 : mov ecx, dword ptr [rip + 0x12589c] ; call r9
0x00000200001ac3a2 : mov ecx, dword ptr [rip + 0x1260d0] ; call r9
0x0000020000183152 : mov ecx, dword ptr [rip + 0x158d30] ; call rax
0x00000200004653a6 : mov ecx, dword ptr [rip - 0x14bfa4] ; call rax
0x00000200005dd50e : mov ecx, dword ptr [rip - 0x2da8dc] ; call rax
0x0000020000604a9e : mov ecx, dword ptr [rip - 0x2eb69c] ; call rax
0x00000200006b6eb1 : mov ecx, dword ptr [rip - 0x3e6e9b] ; call rax
0x00000200003a00be : mov ecx, dword ptr [rsi + 0x28] ; call rax
0x000002000014603f : mov ecx, dword ptr [rsi + 0x50] ; jmp rcx
0x00000200000f0b5e : mov ecx, dword ptr [rsi + 0xa8] ; mov edx, ebp ; call rax
0x00000200000f0775 : mov ecx, dword ptr [rsi + 0xa8] ; mov edx, r15d ; call rax
0x00000200001c9ee2 : mov ecx, dword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200000e4a10 : mov ecx, dword ptr [rsi + 8] ; call rax
0x0000020000498c97 : mov ecx, dword ptr [rsp + 0x20] ; call 0x200000bcd27
0x0000020000626935 : mov ecx, dword ptr [rsp + 0x20] ; call 0x200000c2b96
0x00000200001ad6ad : mov ecx, dword ptr [rsp + 0x20] ; call r9
0x00000200001ad59a : mov ecx, dword ptr [rsp + 0x20] ; call rax
0x000002000046e715 : mov ecx, dword ptr [rsp + 0x250] ; call rax
0x00000200005cb506 : mov ecx, dword ptr [rsp + 0x28] ; call 0x20000517752
0x000002000050dddb : mov ecx, dword ptr [rsp + 0x28] ; mov dword ptr [rdx], ecx ; ret
0x00000200001c6244 : mov ecx, dword ptr [rsp + 0x28] ; mov qword ptr [rcx], r8 ; ret
0x0000020000504079 : mov ecx, dword ptr [rsp + 0x30] ; call 0x20000140386
0x00000200005201c3 : mov ecx, dword ptr [rsp + 0x30] ; mov edi, eax ; call 0x20000140389
0x0000020000512f8e : mov ecx, dword ptr [rsp + 0x38] ; call 0x20000140387
0x00000200001bfa74 : mov ecx, dword ptr [rsp + 0x38] ; mov dword ptr [rcx], r11d ; mov eax, r10d ; ret
0x00000200005155c3 : mov ecx, dword ptr [rsp + 0x40] ; call 0x20000140387
0x00000200005a249c : mov ecx, dword ptr [rsp + 0x40] ; call 0x200001c51eb
0x00000200005cb155 : mov ecx, dword ptr [rsp + 0x40] ; call 0x2000063745e
0x0000020000447d1f : mov ecx, dword ptr [rsp + 0x40] ; call rax
0x0000020000515160 : mov ecx, dword ptr [rsp + 0x40] ; mov ebx, eax ; call 0x20000140389
0x000002000049206b : mov ecx, dword ptr [rsp + 0x48] ; call 0x200000c1e67
0x000002000049f36d : mov ecx, dword ptr [rsp + 0x48] ; call 0x200000c23c7
0x0000020000497875 : mov ecx, dword ptr [rsp + 0x48] ; call 0x200000c2b97
0x00000200004c9e08 : mov ecx, dword ptr [rsp + 0x48] ; call 0x200000ee3ef
0x00000200003ec483 : mov ecx, dword ptr [rsp + 0x48] ; call r12
0x00000200003ec3d3 : mov ecx, dword ptr [rsp + 0x48] ; mov rax, qword ptr [rsp + 0x70] ; call rax
0x00000200004249a8 : mov ecx, dword ptr [rsp + 0x50] ; call 0x2000004578f
0x00000200003d61aa : mov ecx, dword ptr [rsp + 0x50] ; call 0x200000c23c6
0x000002000051a090 : mov ecx, dword ptr [rsp + 0x50] ; call 0x20000140387
0x000002000014462c : mov ecx, dword ptr [rsp + 0x50] ; call rdx
0x00000200004c0ce4 : mov ecx, dword ptr [rsp + 0x50] ; mov qword ptr [rax], rcx ; jmp 0x200004c0cb8
0x00000200001f6eb4 : mov ecx, dword ptr [rsp + 0x58] ; xor rcx, rsp ; call 0x20000133189
0x0000020000499007 : mov ecx, dword ptr [rsp + 0x60] ; call 0x200000bc367
0x0000020000448faa : mov ecx, dword ptr [rsp + 0x60] ; call rax
0x00000200001af030 : mov ecx, dword ptr [rsp + 0x68] ; call rax
0x000002000060109d : mov ecx, dword ptr [rsp + 0x68] ; xor edx, edx ; call 0x20000231019
0x0000020000536ef6 : mov ecx, dword ptr [rsp + 0x68] ; xor rcx, rsp ; call 0x20000133189
0x00000200005182a7 : mov ecx, dword ptr [rsp + 0x70] ; call 0x20000140387
0x0000020000515239 : mov ecx, dword ptr [rsp + 0x70] ; mov ebx, eax ; call 0x20000140389
0x00000200004996a6 : mov ecx, dword ptr [rsp + 0x78] ; call 0x200000bc287
0x0000020000195851 : mov ecx, dword ptr [rsp + 0x78] ; call 0x200000c1b36
0x00000200004997bb : mov ecx, dword ptr [rsp + 0x78] ; call 0x200000c23c7
0x00000200000dc64d : mov ecx, dword ptr [rsp + 0x78] ; call rax
0x0000020000513be3 : mov ecx, dword ptr [rsp + 0x78] ; mov ebx, eax ; call 0x20000140389
0x00000200001ac19c : mov ecx, dword ptr [rsp + 0x90] ; call rax
0x000002000008f46b : mov ecx, eax ; add byte ptr es:[rcx - 1], al ; ret
0x00000200005859a9 : mov ecx, eax ; call 0x20000011c64
0x00000200000f789d : mov ecx, eax ; call 0x20000011c69
0x000002000040de76 : mov ecx, eax ; call 0x2000003cc2d
0x0000020000416b68 : mov ecx, eax ; call 0x200000407f5
0x000002000041d655 : mov ecx, eax ; call 0x20000043d7d
0x000002000020f033 : mov ecx, eax ; call 0x2000004ec20
0x0000020000434a59 : mov ecx, eax ; call 0x2000005abbd
0x00000200004433a3 : mov ecx, eax ; call 0x2000006a2e1
0x0000020000475cf2 : mov ecx, eax ; call 0x20000099f95
0x0000020000499331 : mov ecx, eax ; call 0x200000ba3f5
0x000002000048e38b : mov ecx, eax ; call 0x200000bcd15
0x0000020000499b39 : mov ecx, eax ; call 0x200000bd115
0x000002000063615f : mov ecx, eax ; call 0x200000c23c4
0x000002000049a677 : mov ecx, eax ; call 0x200000c23c5
0x00000200004c7ba3 : mov ecx, eax ; call 0x200000ecde9
0x00000200004f5ff9 : mov ecx, eax ; call 0x20000122201
0x000002000066be4f : mov ecx, eax ; call 0x20000138124
0x0000020000525e81 : mov ecx, eax ; call 0x2000014f185
0x00000200004a324f : mov ecx, eax ; call 0x2000014f4c4
0x000002000052055c : mov ecx, eax ; call 0x2000014f4c5
0x000002000077489f : mov ecx, eax ; call 0x2000014f4c8
0x0000020000494d8e : mov ecx, eax ; call 0x20000231014
0x000002000060aeae : mov ecx, eax ; call 0x20000231015
0x00000200005ae882 : mov ecx, eax ; call 0x2000064ab08
0x0000020000677d8e : mov ecx, eax ; call r10
0x00000200006c5f93 : mov ecx, eax ; call r15
0x00000200003b1cef : mov ecx, eax ; call r8
0x0000020000435a31 : mov ecx, eax ; call r9
0x0000020000171725 : mov ecx, eax ; call rdx
0x000002000017c5d5 : mov ecx, eax ; inc rdx ; jmp 0x2000017c582
0x000002000006e933 : mov ecx, eax ; jmp 0x2000006e258
0x00000200003f837a : mov ecx, eax ; jmp 0x200003f8344
0x000002000043d7d1 : mov ecx, eax ; jmp 0x2000043d79b
0x0000020000114ca0 : mov ecx, eax ; jmp rdx
0x000002000052ad1f : mov ecx, eax ; lea r8d, dword ptr [rdx + 0x30] ; call 0x2000014f4c9
0x000002000052b1c1 : mov ecx, eax ; lea r8d, dword ptr [rdx + 0x50] ; call 0x2000014f4c9
0x000002000046b180 : mov ecx, eax ; mov eax, ecx ; add rsp, 0x28 ; ret
0x0000020000033ba6 : mov ecx, eax ; mov eax, edx ; add qword ptr [r9 + rcx], rax ; ret
0x000002000041ef26 : mov ecx, eax ; mov eax, r9d ; add rsp, 0x28 ; ret
0x000002000002788d : mov ecx, eax ; mov eax, r9d ; add rsp, 0x38 ; ret
0x000002000046f2d0 : mov ecx, eax ; mov eax, r9d ; add rsp, 0x48 ; ret
0x00000200004c6920 : mov ecx, eax ; mov qword ptr [rax], r13 ; call 0x200000e9468
0x0000020000689647 : mov ecx, eax ; mov r15d, eax ; call 0x200006858c7
0x000002000045d05c : mov ecx, eax ; mov r8, r12 ; call r10
0x00000200004ce8a1 : mov ecx, eax ; mov r8d, eax ; call rsi
0x000002000017f7d1 : mov ecx, eax ; mov rax, qword ptr [rip + 0x1ffcce] ; call rax
0x000002000017390a : mov ecx, eax ; mov rax, qword ptr [rip + 0x20bb95] ; call rax
0x00000200003f8baa : mov ecx, eax ; mov rax, qword ptr [rip - 0x798eb] ; call rax
0x00000200003f9408 : mov ecx, eax ; mov rax, qword ptr [rip - 0x7a149] ; call rax
0x000002000069d8fb : mov ecx, eax ; mov rax, rcx ; add rsp, 0x28 ; ret
0x0000020000560ae7 : mov ecx, eax ; mov rbp, rax ; call 0x200000bcd17
0x00000200001445a8 : mov ecx, eax ; mov rdx, r9 ; encls ; pop rbx ; ret
0x0000020000620d13 : mov ecx, eax ; mov rsi, rax ; call 0x2000045cf97
0x000002000052516c : mov ecx, eax ; shl r8, 2 ; call 0x2000014f4c9
0x000002000052194f : mov ecx, eax ; shl r8, 3 ; call 0x2000014f4c9
0x0000020000525d38 : mov ecx, eax ; shl r8, 4 ; call 0x2000014f189
0x00000200004c91b8 : mov ecx, eax ; xor edx, edx ; call 0x200000ed5a7
0x000002000019329c : mov ecx, ebp ; call 0x2000003f4b8
0x0000020000419b8c : mov ecx, ebp ; call 0x20000042009
0x000002000020898e : mov ecx, ebp ; call 0x20000044c6c
0x0000020000421808 : mov ecx, ebp ; call 0x200000450c1
0x00000200004217ec : mov ecx, ebp ; call 0x200000456e5
0x0000020000562951 : mov ecx, ebp ; call 0x2000004ec1c
0x00000200004295c8 : mov ecx, ebp ; call 0x20000059331
0x0000020000493991 : mov ecx, ebp ; call 0x200000b5805
0x00000200000784e7 : mov ecx, ebp ; call 0x200000b7058
0x0000020000495873 : mov ecx, ebp ; call 0x200000b8ea5
0x000002000049b10c : mov ecx, ebp ; call 0x200000bcd15
0x000002000049b38d : mov ecx, ebp ; call 0x200000c06f5
0x00000200004947c4 : mov ecx, ebp ; call 0x200000c1b35
0x000002000049a278 : mov ecx, ebp ; call 0x200000c23c5
0x000002000049a8c8 : mov ecx, ebp ; call 0x200000c23c8
0x0000020000494740 : mov ecx, ebp ; call 0x200000c2845
0x0000020000498cbe : mov ecx, ebp ; call 0x200000c2b95
0x00000200004ac706 : mov ecx, ebp ; call 0x200000cf495
0x00000200004c134d : mov ecx, ebp ; call 0x200000e4de5
0x00000200004a5190 : mov ecx, ebp ; call 0x200000e8158
0x00000200004c4e24 : mov ecx, ebp ; call 0x200000ebb25
0x00000200004eb8a2 : mov ecx, ebp ; call 0x2000011707d
0x0000020000500d48 : mov ecx, ebp ; call 0x2000012f9b5
0x0000020000505099 : mov ecx, ebp ; call 0x20000134775
0x00000200004243ce : mov ecx, ebp ; call 0x20000140684
0x0000020000112f12 : mov ecx, ebp ; call 0x20000149159
0x00000200005b8c26 : mov ecx, ebp ; call 0x200001dadb5
0x000002000020f54e : mov ecx, ebp ; call 0x2000020b840
0x0000020000609c24 : mov ecx, ebp ; call 0x20000231015
0x0000020000696f75 : mov ecx, ebp ; call 0x200004ce4c0
0x0000020000689698 : mov ecx, ebp ; call 0x20000685908
0x00000200004617f4 : mov ecx, ebp ; call r12
0x000002000009bb49 : mov ecx, ebp ; call r14
0x00000200004794d9 : mov ecx, ebp ; call r15
0x00000200005be192 : mov ecx, ebp ; call r8
0x00000200000e4689 : mov ecx, ebp ; call rax
0x00000200006b3727 : mov ecx, ebp ; call rbx
0x0000020000478590 : mov ecx, ebp ; call rdi
0x000002000049a0af : mov ecx, ebp ; jne 0x2000049a0c9 ; call 0x200000c23c7
0x000002000040abcf : mov ecx, ebp ; lea r8d, dword ptr [r9 + 3] ; call 0x20000466eb8
0x0000020000581de4 : mov ecx, ebp ; lea r8d, dword ptr [rdx + 5] ; call 0x200001a6b65
0x0000020000583b17 : mov ecx, ebp ; mov dword ptr [rsp + 0x20], edi ; call 0x2000043fd48
0x00000200004d455d : mov ecx, ebp ; mov dword ptr [rsp + 0x20], r14d ; call r12
0x0000020000581e29 : mov ecx, ebp ; mov ebx, r9d ; call 0x200001a6b64
0x00000200005a52bc : mov ecx, ebp ; mov qword ptr [r12], rbx ; call 0x200001d1471
0x00000200006c0916 : mov ecx, ebp ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x00000200004047d1 : mov ecx, ebp ; mov qword ptr [rsp + 0x20], rax ; call r15
0x000002000049ad09 : mov ecx, ebp ; mov r15, rax ; call 0x200000bcc78
0x000002000003d1d0 : mov ecx, ebp ; mov rax, qword ptr [rip + 0x3422cf] ; call rax
0x000002000059b5da : mov ecx, ebp ; mov rax, qword ptr [rip - 0x2cbe43] ; call rax
0x00000200003f8668 : mov ecx, ebp ; mov rax, qword ptr [rip - 0x793a9] ; call rax
0x00000200003fa4d7 : mov ecx, ebp ; mov rax, qword ptr [rip - 0x7b218] ; call rax
0x00000200004c8aca : mov ecx, ebp ; mov rbp, rbx ; call 0x200000ecdec
0x000002000049a658 : mov ecx, ebp ; mov rbx, rax ; call 0x200000c23c8
0x00000200005c8143 : mov ecx, ebp ; mov rcx, rdi ; lea r8d, dword ptr [rdx + 3] ; call rsi
0x00000200005c811f : mov ecx, ebp ; mov rcx, rdi ; lea r8d, dword ptr [rdx + 5] ; call rsi
0x00000200005a87c2 : mov ecx, ebp ; mov rdx, qword ptr [rdx + r14 + 0x18] ; call 0x20000664a3d
0x000002000063eab9 : mov ecx, ebp ; mov rdx, rdi ; call rax
0x00000200001e657e : mov ecx, ebp ; xor edx, edx ; call 0x200000c2846
0x000002000007b7d4 : mov ecx, ebx ; add rsp, 0x20 ; pop rbx ; jmp 0x200000c7a29
0x0000020000206770 : mov ecx, ebx ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000002000069793b : mov ecx, ebx ; add rsp, 0x28 ; jmp qword ptr [r10]
0x00000200003cc8fa : mov ecx, ebx ; call 0x20000016acd
0x00000200001c3e6a : mov ecx, ebx ; call 0x20000027389
0x000002000041d2bd : mov ecx, ebx ; call 0x20000042aa5
0x000002000041f98a : mov ecx, ebx ; call 0x20000044dbd
0x000002000041fec2 : mov ecx, ebx ; call 0x20000045059
0x000002000051702f : mov ecx, ebx ; call 0x20000049681
0x000002000056282d : mov ecx, ebx ; call 0x2000004eb24
0x00000200005629a3 : mov ecx, ebx ; call 0x2000004ec1c
0x00000200004247b7 : mov ecx, ebx ; call 0x20000051689
0x000002000076ac57 : mov ecx, ebx ; call 0x20000054b49
0x00000200005a4d4d : mov ecx, ebx ; call 0x200000597f9
0x000002000042e0f9 : mov ecx, ebx ; call 0x2000005abbd
0x000002000042dc98 : mov ecx, ebx ; call 0x2000005c78d
0x00000200006bc20d : mov ecx, ebx ; call 0x200000684c4
0x0000020000445e54 : mov ecx, ebx ; call 0x20000074619
0x0000020000456f84 : mov ecx, ebx ; call 0x2000008239d
0x00000200004757d0 : mov ecx, ebx ; call 0x2000009a245
0x00000200004756d4 : mov ecx, ebx ; call 0x2000009a2cd
0x00000200004756f2 : mov ecx, ebx ; call 0x2000009a485
0x00000200003e4dd3 : mov ecx, ebx ; call 0x2000009b3b8
0x0000020000475290 : mov ecx, ebx ; call 0x2000009b445
0x0000020000475e97 : mov ecx, ebx ; call 0x2000009db85
0x00000200004973dd : mov ecx, ebx ; call 0x200000b8095
0x000002000048e14e : mov ecx, ebx ; call 0x200000bcd25
0x00000200004558be : mov ecx, ebx ; call 0x200000c1b34
0x000002000049d555 : mov ecx, ebx ; call 0x200000c1b35
0x00000200001b3fb0 : mov ecx, ebx ; call 0x200000c23c8
0x000002000049777d : mov ecx, ebx ; call 0x200000c2545
0x00000200004065fb : mov ecx, ebx ; call 0x200000c2844
0x0000020000616e64 : mov ecx, ebx ; call 0x200000c36c9
0x0000020000516c00 : mov ecx, ebx ; call 0x200000ccd99
0x00000200004c1c7b : mov ecx, ebx ; call 0x200000e7995
0x00000200004c3223 : mov ecx, ebx ; call 0x200000e9465
0x00000200004c8048 : mov ecx, ebx ; call 0x200000ecdcd
0x00000200004c9271 : mov ecx, ebx ; call 0x200000edda9
0x00000200004cb941 : mov ecx, ebx ; call 0x200000ef375
0x00000200004ccd4f : mov ecx, ebx ; call 0x200000f5399
0x00000200000fcbb8 : mov ecx, ebx ; call 0x200000f8de0
0x0000020000105c3e : mov ecx, ebx ; call 0x20000105cc1
0x00000200004f5ff1 : mov ecx, ebx ; call 0x20000122925
0x000002000051301a : mov ecx, ebx ; call 0x20000140465
0x0000020000525338 : mov ecx, ebx ; call 0x2000014f185
0x000002000052ea6c : mov ecx, ebx ; call 0x2000014f4c5
0x0000020000460cb4 : mov ecx, ebx ; call 0x2000014f4c9
0x000002000058fb99 : mov ecx, ebx ; call 0x200001bd2c1
0x0000020000185498 : mov ecx, ebx ; call 0x200001c1724
0x00000200006b585e : mov ecx, ebx ; call 0x200001d1b28
0x00000200005afea3 : mov ecx, ebx ; call 0x200001dd6ed
0x00000200005c04bc : mov ecx, ebx ; call 0x200001eca2d
0x000002000064a206 : mov ecx, ebx ; call 0x200001f649c
0x000002000064a57d : mov ecx, ebx ; call 0x200001f67d4
0x000002000064a503 : mov ecx, ebx ; call 0x200001f67fc
0x000002000064a570 : mov ecx, ebx ; call 0x200001f6844
0x000002000064a7e8 : mov ecx, ebx ; call 0x200001f6a58
0x00000200005c4d34 : mov ecx, ebx ; call 0x20000231014
0x0000020000601b48 : mov ecx, ebx ; call 0x20000231015
0x000002000066c0ca : mov ecx, ebx ; call 0x20000231018
0x000002000060564f : mov ecx, ebx ; call 0x20000231ce5
0x000002000061cbec : mov ecx, ebx ; call 0x200003e8e88
0x000002000040e43f : mov ecx, ebx ; call 0x2000040e465
0x0000020000543b26 : mov ecx, ebx ; call 0x2000042d721
0x000002000051de59 : mov ecx, ebx ; call 0x2000043488d
0x0000020000468332 : mov ecx, ebx ; call 0x2000046836d
0x00000200004a3bf6 : mov ecx, ebx ; call 0x2000049fe04
0x0000020000443d75 : mov ecx, ebx ; call 0x200004a0064
0x000002000044e241 : mov ecx, ebx ; call 0x200004ba494
0x00000200005a0647 : mov ecx, ebx ; call 0x2000063c8a0
0x00000200005d21d7 : mov ecx, ebx ; call 0x2000069e44c
0x00000200006c16a1 : mov ecx, ebx ; call 0x200006c1c79
0x00000200006b4bc3 : mov ecx, ebx ; call 0x200006c5ef4
0x000002000075cbf0 : mov ecx, ebx ; call 0x20000768ee4
0x00000200001d2246 : mov ecx, ebx ; call qword ptr [r11]
0x000002000051e6f5 : mov ecx, ebx ; call qword ptr [rax]
0x00000200001d273c : mov ecx, ebx ; call qword ptr [rbx]
0x00000200001a934a : mov ecx, ebx ; call r10
0x0000020000153061 : mov ecx, ebx ; call r11
0x0000020000134921 : mov ecx, ebx ; call r14
0x00000200004b32fe : mov ecx, ebx ; call r15
0x000002000013d0c3 : mov ecx, ebx ; call r8
0x0000020000029075 : mov ecx, ebx ; call rax
0x000002000077c463 : mov ecx, ebx ; call rbx
0x00000200001c7017 : mov ecx, ebx ; call rdi
0x00000200003f85c4 : mov ecx, ebx ; call rsi
0x000002000047fe07 : mov ecx, ebx ; cmovb r14, rdi ; jmp 0x2000047fdd9
0x000002000039ea0a : mov ecx, ebx ; jmp 0x2000039e9d4
0x00000200003f394f : mov ecx, ebx ; lea edx, dword ptr [r8 + 1] ; call 0x2000001abc9
0x00000200001d23d4 : mov ecx, ebx ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r11]
0x00000200004980b4 : mov ecx, ebx ; lea r8d, dword ptr [rax + 1] ; call 0x200000bab49
0x000002000057b1df : mov ecx, ebx ; lea r8d, dword ptr [rdx + 0x10] ; call 0x200001a6b65
0x00000200003f1818 : mov ecx, ebx ; lea r8d, dword ptr [rdx + 1] ; call 0x2000001abc9
0x000002000060eae4 : mov ecx, ebx ; mov dword ptr [rax + 0xc], r12d ; call 0x20000231ce9
0x00000200004d0728 : mov ecx, ebx ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200001e4d21 : mov ecx, ebx ; mov eax, ecx ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000403ef7 : mov ecx, ebx ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000040ad09 : mov ecx, ebx ; mov qword ptr [rsp + 0x20], rsi ; call 0x20000067015
0x0000020000694e2a : mov ecx, ebx ; mov r8d, edi ; mov rdx, rsi ; call rax
0x00000200006160ae : mov ecx, ebx ; mov r8d, edx ; call 0x200004e22c7
0x00000200001f547e : mov ecx, ebx ; mov r8d, edx ; jmp 0x200001f548c
0x00000200005953a4 : mov ecx, ebx ; mov r8d, esi ; mov rdx, rbp ; call rax
0x000002000019eca0 : mov ecx, ebx ; mov rax, qword ptr [rip + 0x13a2f7] ; call rax
0x000002000019ec76 : mov ecx, ebx ; mov rax, qword ptr [rip + 0x13a321] ; call rax
0x000002000019eba7 : mov ecx, ebx ; mov rax, qword ptr [rip + 0x13a3f0] ; call rax
0x00000200001b7d9d : mov ecx, ebx ; mov rax, qword ptr [rip + 0x1c7702] ; call rax
0x00000200001a9fd4 : mov ecx, ebx ; mov rax, qword ptr [rip + 0x1d54cb] ; call rax
0x00000200001a9f5b : mov ecx, ebx ; mov rax, qword ptr [rip + 0x1d5544] ; call rax
0x00000200003b2435 : mov ecx, ebx ; mov rax, qword ptr [rip - 0xd9716] ; call rax
0x00000200006c95d3 : mov ecx, ebx ; mov rsi, rax ; call qword ptr [rdi]
0x00000200004c3bcc : mov ecx, ebx ; test edx, edx ; jne 0x200004c3c31 ; call 0x200000eb5b9
0x00000200005799ec : mov ecx, ebx ; xor edx, edx ; call 0x200001a6b63
0x00000200004195e3 : mov ecx, ecx ; call 0x20000042009
0x00000200000cdce9 : mov ecx, ecx ; call 0x20000069fb4
0x00000200000d6d01 : mov ecx, ecx ; call 0x200000a2f54
0x0000020000496f5d : mov ecx, ecx ; call 0x200000b8ea5
0x000002000049b0ac : mov ecx, ecx ; call 0x200000bcd25
0x000002000013fc5c : mov ecx, ecx ; call 0x2000011bf64
0x0000020000183c83 : mov ecx, ecx ; call 0x200001bfe9c
0x00000200005b9602 : mov ecx, ecx ; call 0x200001de785
0x000002000060885c : mov ecx, ecx ; call 0x20000231015
0x00000200005be41d : mov ecx, ecx ; call rax
0x0000020000425588 : mov ecx, ecx ; je 0x20000425605 ; xor ecx, ecx ; call 0x2000004585d
0x00000200004e4ea0 : mov ecx, ecx ; jne 0x200004e4ead ; mov al, 1 ; ret
0x000002000003991d : mov ecx, ecx ; mov r14, rax ; jmp 0x200000398ed
0x00000200000ea5d5 : mov ecx, ecx ; mov rax, qword ptr [rip + 0x294eca] ; call rax
0x0000020000499875 : mov ecx, ecx ; mov rcx, rdx ; call 0x200000bc288
0x0000020000499469 : mov ecx, ecx ; mov rdx, r8 ; call 0x200000bc288
0x00000200006bac1d : mov ecx, ecx ; test r8d, r8d ; jne 0x200006bac30 ; xor eax, eax ; ret
0x000002000061a8a9 : mov ecx, ecx ; xchg qword ptr [rdx + r8*8], rcx ; mov eax, r9d ; ret
0x00000200006247b2 : mov ecx, edi ; call 0x20000010a10
0x0000020000774e44 : mov ecx, edi ; call 0x20000011104
0x00000200003e5faf : mov ecx, edi ; call 0x20000013275
0x000002000002a556 : mov ecx, edi ; call 0x20000016784
0x000002000011972f : mov ecx, edi ; call 0x20000016789
0x00000200005b96fe : mov ecx, edi ; call 0x20000036450
0x00000200004239a2 : mov ecx, edi ; call 0x200000459c5
0x000002000016b64e : mov ecx, edi ; call 0x20000047954
0x0000020000427dcd : mov ecx, edi ; call 0x2000004eb05
0x0000020000423b48 : mov ecx, edi ; call 0x20000051689
0x00000200004c6d48 : mov ecx, edi ; call 0x20000052f78
0x00000200004238a8 : mov ecx, edi ; call 0x20000053851
0x0000020000535e76 : mov ecx, edi ; call 0x200000539f0
0x00000200004341e1 : mov ecx, edi ; call 0x20000056fc5
0x00000200001a58aa : mov ecx, edi ; call 0x20000061bb4
0x000002000044622c : mov ecx, edi ; call 0x20000074661
0x00000200001c7e19 : mov ecx, edi ; call 0x200000840a4
0x00000200000b9098 : mov ecx, edi ; call 0x20000085324
0x0000020000475eed : mov ecx, edi ; call 0x2000009a2d5
0x0000020000475a48 : mov ecx, edi ; call 0x2000009a485
0x0000020000475fe8 : mov ecx, edi ; call 0x2000009a5c5
0x0000020000491b51 : mov ecx, edi ; call 0x2000009a5c8
0x0000020000497a6f : mov ecx, edi ; call 0x200000ba7b1
0x0000020000498020 : mov ecx, edi ; call 0x200000ba84d
0x0000020000498d3c : mov ecx, edi ; call 0x200000bb145
0x0000020000495afb : mov ecx, edi ; call 0x200000bc7b5
0x000002000049b2e0 : mov ecx, edi ; call 0x200000bcd15
0x0000020000012b60 : mov ecx, edi ; call 0x200000bee64
0x00000200003d5875 : mov ecx, edi ; call 0x200000c1b34
0x0000020000455c16 : mov ecx, edi ; call 0x200000c1e24
0x0000020000445c12 : mov ecx, edi ; call 0x200000c1e64
0x00000200005760c7 : mov ecx, edi ; call 0x200000c23c4
0x000002000049ab8b : mov ecx, edi ; call 0x200000c23c5
0x000002000057627f : mov ecx, edi ; call 0x200000c2544
0x000002000049b6ce : mov ecx, edi ; call 0x200000c2845
0x00000200004c0d2f : mov ecx, edi ; call 0x200000e264d
0x00000200004c09fa : mov ecx, edi ; call 0x200000e2859
0x00000200004c0d75 : mov ecx, edi ; call 0x200000e28a9
0x00000200004c1906 : mov ecx, edi ; call 0x200000e5ba9
0x00000200004beeb7 : mov ecx, edi ; call 0x200000e8155
0x000002000015c0d1 : mov ecx, edi ; call 0x200000e8384
0x00000200004beed3 : mov ecx, edi ; call 0x200000e8385
0x00000200004c2be0 : mov ecx, edi ; call 0x200000e88d1
0x00000200004c3641 : mov ecx, edi ; call 0x200000e9fd9
0x00000200004c34b8 : mov ecx, edi ; call 0x200000ea7c5
0x00000200004c3590 : mov ecx, edi ; call 0x200000ea7f9
0x00000200004c9aa5 : mov ecx, edi ; call 0x200000ee221
0x00000200004cb9dc : mov ecx, edi ; call 0x200000ef13d
0x00000200004cd334 : mov ecx, edi ; call 0x200000ef501
0x00000200004c7de5 : mov ecx, edi ; call 0x200000efbbd
0x0000020000128812 : mov ecx, edi ; call 0x20000104af8
0x00000200001cedc9 : mov ecx, edi ; call 0x200001188dc
0x000002000050719b : mov ecx, edi ; call 0x200001356a9
0x000002000051b336 : mov ecx, edi ; call 0x20000140485
0x000002000052dc58 : mov ecx, edi ; call 0x2000014f185
0x0000020000173296 : mov ecx, edi ; call 0x2000014f4c4
0x000002000057ac6f : mov ecx, edi ; call 0x200001a6b61
0x000002000058fa02 : mov ecx, edi ; call 0x200001bd2c1
0x00000200005a4c12 : mov ecx, edi ; call 0x200001cb461
0x00000200005befd5 : mov ecx, edi ; call 0x200001e1b9d
0x0000020000202c55 : mov ecx, edi ; call 0x20000202975
0x000002000020c510 : mov ecx, edi ; call 0x2000020c274
0x00000200005d20f1 : mov ecx, edi ; call 0x2000021e3a8
0x0000020000494dd3 : mov ecx, edi ; call 0x20000231014
0x00000200006028f5 : mov ecx, edi ; call 0x20000231015
0x00000200000c5613 : mov ecx, edi ; call 0x20000231018
0x000002000060e8c7 : mov ecx, edi ; call 0x20000231ce5
0x00000200003abec5 : mov ecx, edi ; call 0x200003ac790
0x0000020000613c06 : mov ecx, edi ; call 0x200003dfeac
0x00000200003ea2ed : mov ecx, edi ; call 0x20000466430
0x0000020000076aee : mov ecx, edi ; call 0x20000475848
0x00000200005b96ee : mov ecx, edi ; call 0x20000475d18
0x0000020000400af3 : mov ecx, edi ; call 0x2000047cd98
0x00000200005de142 : mov ecx, edi ; call 0x2000048a43c
0x00000200004a3d6d : mov ecx, edi ; call 0x200004a0064
0x0000020000117b98 : mov ecx, edi ; call 0x20000503dc4
0x0000020000517ad6 : mov ecx, edi ; call 0x200005181cd
0x00000200005230e9 : mov ecx, edi ; call 0x20000523135
0x00000200005ed39b : mov ecx, edi ; call 0x200005ed5c4
0x00000200001bf304 : mov ecx, edi ; call 0x200006ab604
0x00000200006b4312 : mov ecx, edi ; call 0x200006be264
0x00000200006b61dc : mov ecx, edi ; call 0x200006c2480
0x00000200001d2792 : mov ecx, edi ; call qword ptr [rbx]
0x00000200004152ea : mov ecx, edi ; call r10
0x00000200006788c0 : mov ecx, edi ; call r11
0x00000200003fa380 : mov ecx, edi ; call r12
0x0000020000073897 : mov ecx, edi ; call r14
0x00000200005127a0 : mov ecx, edi ; call r15
0x000002000063eff5 : mov ecx, edi ; call r8
0x00000200000298a3 : mov ecx, edi ; call rax
0x000002000001dbc6 : mov ecx, edi ; call rbx
0x00000200004d490d : mov ecx, edi ; call rdi
0x000002000004299a : mov ecx, edi ; call rsi
0x000002000017005d : mov ecx, edi ; jmp 0x200001110db
0x000002000050e5b5 : mov ecx, edi ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x000002000050e8ae : mov ecx, edi ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x00000200001d2030 : mov ecx, edi ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r15]
0x00000200004f3207 : mov ecx, edi ; lea r8d, dword ptr [rdx + 0x28] ; call 0x2000014f4c8
0x000002000057ab14 : mov ecx, edi ; lea r8d, dword ptr [rdx + 0xb] ; call 0x200001a6b65
0x00000200005ea94d : mov ecx, edi ; lea r8d, dword ptr [rdx + 2] ; call 0x200001a6b64
0x00000200005ea899 : mov ecx, edi ; lea r8d, dword ptr [rdx + 3] ; call 0x200001a6b64
0x00000200005c8146 : mov ecx, edi ; lea r8d, dword ptr [rdx + 3] ; call rsi
0x00000200005c8122 : mov ecx, edi ; lea r8d, dword ptr [rdx + 5] ; call rsi
0x0000020000446abe : mov ecx, edi ; lea rdx, qword ptr [rbp - 0x41] ; call 0x20000074c99
0x000002000016e809 : mov ecx, edi ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x0000020000692679 : mov ecx, edi ; mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200006907e2 : mov ecx, edi ; mov dword ptr [rsp + 0x20], r13d ; call rdi
0x0000020000498039 : mov ecx, edi ; mov ebp, eax ; call 0x200000ba7e7
0x000002000049d2d5 : mov ecx, edi ; mov qword ptr [rsi + 8], rax ; call 0x200000c1929
0x0000020000074a2f : mov ecx, edi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005fcee8 : mov ecx, edi ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rax]
0x000002000060d49c : mov ecx, edi ; mov r12b, 1 ; call 0x20000231018
0x00000200004ce874 : mov ecx, edi ; mov r14b, 1 ; lea r8d, dword ptr [r9 - 4] ; call rsi
0x00000200004756a0 : mov ecx, edi ; mov r14d, eax ; call 0x2000009b448
0x00000200003b0731 : mov ecx, edi ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x00000200004fcce6 : mov ecx, edi ; mov r8d, ebx ; mov rdx, rbp ; call rax
0x00000200004ce89e : mov ecx, edi ; mov r9d, eax ; mov r8d, eax ; call rsi
0x000002000011e6ca : mov ecx, edi ; mov rax, qword ptr [rip + 0x260dd5] ; call rax
0x000002000011e5c3 : mov ecx, edi ; mov rax, qword ptr [rip + 0x260edc] ; call rax
0x000002000011e2af : mov ecx, edi ; mov rax, qword ptr [rip + 0x2611f0] ; call rax
0x000002000011e15b : mov ecx, edi ; mov rax, qword ptr [rip + 0x261344] ; call rax
0x000002000011e0b4 : mov ecx, edi ; mov rax, qword ptr [rip + 0x2613eb] ; call rax
0x0000020000035792 : mov ecx, edi ; mov rax, qword ptr [rip + 0x349d0d] ; call rax
0x000002000060f573 : mov ecx, edi ; mov rax, qword ptr [rsi + 0x38] ; call rax
0x00000200001fd8bd : mov ecx, edi ; mov rdx, qword ptr [rsp + 0x70] ; call r9
0x0000020000203d7f : mov ecx, edi ; mov rdx, rbx ; call rsi
0x00000200006b905c : mov ecx, edi ; mov rsi, rax ; call rbx
0x00000200006da257 : mov ecx, edi ; ret
0x00000200004752ee : mov ecx, edi ; sub rdx, rbp ; call 0x20000099f98
0x0000020000616c3e : mov ecx, edi ; xor ebx, ebx ; call 0x20000231018
0x00000200004365a3 : mov ecx, edi ; xor edx, edx ; call 0x200000c2846
0x0000020000488e8f : mov ecx, edx ; add rax, r9 ; mov dword ptr [r8], edx ; ret
0x000002000042c44c : mov ecx, edx ; and qword ptr [rax], 0 ; jmp 0x2000042c41d
0x000002000001f62d : mov ecx, edx ; bt qword ptr [rax], rcx ; setb al ; ret
0x000002000042550f : mov ecx, edx ; call 0x20000045871
0x000002000008bb3b : mov ecx, edx ; call 0x2000008c5e8
0x0000020000499878 : mov ecx, edx ; call 0x200000bc285
0x00000200004c377b : mov ecx, edx ; call 0x200000ea7c5
0x00000200004c3676 : mov ecx, edx ; call 0x200000eb3f1
0x00000200005021c0 : mov ecx, edx ; call 0x200000ee3ec
0x00000200006996cf : mov ecx, edx ; call 0x20000140388
0x000002000060aec2 : mov ecx, edx ; call 0x20000231015
0x0000020000606dd6 : mov ecx, edx ; call 0x20000231ce5
0x00000200003dea9d : mov ecx, edx ; call 0x200004dad84
0x0000020000152452 : mov ecx, edx ; call r10
0x0000020000024dbb : mov ecx, edx ; call r9
0x0000020000465b50 : mov ecx, edx ; call rax
0x0000020000425300 : mov ecx, edx ; je 0x20000425311 ; add rsp, 0x28 ; ret
0x0000020000740c89 : mov ecx, edx ; jmp rcx
0x00000200000d20cb : mov ecx, edx ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x000002000049388f : mov ecx, edx ; mov qword ptr [r11 - 0x40], r15 ; call 0x200000b9059
0x000002000014ebb6 : mov ecx, edx ; mov rdx, qword ptr [rcx + 0x38] ; jmp rdx
0x0000020000408725 : mov ecx, es ; and byte ptr [rbx], al ; add byte ptr [rax], al ; mov qword ptr [r9], rcx ; ret
0x00000200003e5950 : mov ecx, esi ; call 0x20000013275
0x00000200004b8a2e : mov ecx, esi ; call 0x20000019898
0x0000020000021747 : mov ecx, esi ; call 0x20000021799
0x00000200005f9192 : mov ecx, esi ; call 0x2000002bc88
0x000002000041f9cc : mov ecx, esi ; call 0x20000044e59
0x00000200004239af : mov ecx, esi ; call 0x200000459ad
0x000002000016b748 : mov ecx, esi ; call 0x20000047954
0x0000020000426eaa : mov ecx, esi ; call 0x2000004eb05
0x000002000047296a : mov ecx, esi ; call 0x2000004ec1c
0x000002000042675d : mov ecx, esi ; call 0x2000004ec1d
0x000002000049054a : mov ecx, esi ; call 0x20000054998
0x00000200005cd5b1 : mov ecx, esi ; call 0x200000597f4
0x0000020000446ab6 : mov ecx, esi ; call 0x20000074c95
0x0000020000460299 : mov ecx, esi ; call 0x20000087105
0x00000200004752aa : mov ecx, esi ; call 0x2000009a245
0x00000200004756ea : mov ecx, esi ; call 0x2000009a2d5
0x0000020000475f33 : mov ecx, esi ; call 0x2000009a485
0x00000200004756c0 : mov ecx, esi ; call 0x2000009a4a5
0x0000020000475ffb : mov ecx, esi ; call 0x2000009a5c5
0x00000200004c9b30 : mov ecx, esi ; call 0x2000009a5c8
0x00000200004756df : mov ecx, esi ; call 0x2000009d695
0x0000020000107ece : mov ecx, esi ; call 0x2000009ebc9
0x00000200003c66aa : mov ecx, esi ; call 0x200000b3e0d
0x0000020000493bdb : mov ecx, esi ; call 0x200000b8ea5
0x0000020000497300 : mov ecx, esi ; call 0x200000b91e5
0x0000020000497f48 : mov ecx, esi ; call 0x200000ba9f5
0x0000020000499b17 : mov ecx, esi ; call 0x200000bc285
0x000002000049a686 : mov ecx, esi ; call 0x200000bc2a5
0x000002000049a223 : mov ecx, esi ; call 0x200000bc585
0x000002000053fb9c : mov ecx, esi ; call 0x200000bd3e2
0x000002000049b19e : mov ecx, esi ; call 0x200000c06f5
0x0000020000498cb6 : mov ecx, esi ; call 0x200000c1b35
0x00000200004921ac : mov ecx, esi ; call 0x200000c1e65
0x000002000049a989 : mov ecx, esi ; call 0x200000c23c5
0x000002000063f957 : mov ecx, esi ; call 0x200000c23c9
0x000002000049bf54 : mov ecx, esi ; call 0x200000c2845
0x000002000040b7a7 : mov ecx, esi ; call 0x200000c7a24
0x00000200004beb76 : mov ecx, esi ; call 0x200000e8385
0x00000200004c304d : mov ecx, esi ; call 0x200000e9465
0x00000200004c37f1 : mov ecx, esi ; call 0x200000eb3bd
0x00000200004c6775 : mov ecx, esi ; call 0x200000ec30d
0x00000200004c9b20 : mov ecx, esi ; call 0x200000ee19d
0x00000200004cc23c : mov ecx, esi ; call 0x200000f7d4d
0x000002000021a7e4 : mov ecx, esi ; call 0x2000010e1f0
0x00000200001b6103 : mov ecx, esi ; call 0x20000131431
0x000002000050e431 : mov ecx, esi ; call 0x20000138125
0x00000200007329e6 : mov ecx, esi ; call 0x2000013ec30
0x0000020000513749 : mov ecx, esi ; call 0x20000140da5
0x00000200004ecf3a : mov ecx, esi ; call 0x20000149194
0x00000200004c2f60 : mov ecx, esi ; call 0x2000014f184
0x000002000052af02 : mov ecx, esi ; call 0x2000014f185
0x000002000063320e : mov ecx, esi ; call 0x2000014f4c4
0x0000020000521666 : mov ecx, esi ; call 0x2000014f4c5
0x000002000077e52a : mov ecx, esi ; call 0x2000014f4c8
0x000002000057a921 : mov ecx, esi ; call 0x200001a6b60
0x0000020000579ac7 : mov ecx, esi ; call 0x200001a6b61
0x00000200005a6bb3 : mov ecx, esi ; call 0x200001c9745
0x00000200005a6ba8 : mov ecx, esi ; call 0x200001c9765
0x00000200005a4a91 : mov ecx, esi ; call 0x200001d380d
0x00000200005cacbd : mov ecx, esi ; call 0x200001f1805
0x000002000015d11e : mov ecx, esi ; call 0x20000209378
0x0000020000084d67 : mov ecx, esi ; call 0x20000231014
0x0000020000601090 : mov ecx, esi ; call 0x20000231015
0x000002000052cb75 : mov ecx, esi ; call 0x200003e8dc8
0x00000200004a80d0 : mov ecx, esi ; call 0x200003f4384
0x000002000042a696 : mov ecx, esi ; call 0x2000042a6c1
0x00000200004abd83 : mov ecx, esi ; call 0x20000438034
0x00000200001d53b2 : mov ecx, esi ; call 0x2000045371d
0x0000020000075df0 : mov ecx, esi ; call 0x20000475848
0x00000200005e1804 : mov ecx, esi ; call 0x2000047dacc
0x00000200004a578b : mov ecx, esi ; call 0x20000481a10
0x000002000055f1c1 : mov ecx, esi ; call 0x2000049b4c4
0x00000200001cd973 : mov ecx, esi ; call 0x200004c9c54
0x0000020000117b21 : mov ecx, esi ; call 0x20000503dc4
0x000002000045965e : mov ecx, esi ; call 0x200005f5918
0x00000200006b9a9f : mov ecx, esi ; call 0x200006b79ed
0x00000200006ce384 : mov ecx, esi ; call 0x200006be264
0x00000200001d1f10 : mov ecx, esi ; call qword ptr [rsi]
0x0000020000460931 : mov ecx, esi ; call r10
0x00000200006b8ff5 : mov ecx, esi ; call r12
0x00000200000ebbcc : mov ecx, esi ; call r14
0x0000020000048881 : mov ecx, esi ; call r9
0x00000200001256b2 : mov ecx, esi ; call rax
0x000002000040da8e : mov ecx, esi ; call rdi
0x00000200003c2a87 : mov ecx, esi ; call rdx
0x0000020000693b98 : mov ecx, esi ; call rsi
0x00000200001329bb : mov ecx, esi ; dec dword ptr [rax - 0x75] ; ret
0x000002000018a166 : mov ecx, esi ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x000002000063102e : mov ecx, esi ; jmp qword ptr [rbx]
0x00000200001e7807 : mov ecx, esi ; lea edx, dword ptr [rbx + 3] ; call r9
0x0000020000403cf6 : mov ecx, esi ; lea rdx, qword ptr [rsp + 0x30] ; call rax
0x00000200006c07e3 : mov ecx, esi ; mov dword ptr [rsp + 0x20], ebp ; call rax
0x0000020000213f05 : mov ecx, esi ; mov edx, r15d ; call rax
0x000002000049b9db : mov ecx, esi ; mov qword ptr [rdi + 8], rax ; call 0x200000c1929
0x000002000042271c : mov ecx, esi ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [rsi]
0x00000200006c072f : mov ecx, esi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200006c0869 : mov ecx, esi ; mov qword ptr [rsp + 0x20], rdi ; call rax
0x000002000015f72d : mov ecx, esi ; mov r10, qword ptr [r10 + rax*8] ; call r10
0x00000200000e3dda : mov ecx, esi ; mov r8, r13 ; mov rcx, r15 ; call rax
0x0000020000693f21 : mov ecx, esi ; mov r8d, edi ; mov rdx, rbp ; call rax
0x0000020000213f02 : mov ecx, esi ; mov r9d, esi ; mov edx, r15d ; call rax
0x000002000019ebd3 : mov ecx, esi ; mov rax, qword ptr [rip + 0x1df5bc] ; call rax
0x00000200000f30d7 : mov ecx, esi ; mov rax, qword ptr [rip + 0x28b0b8] ; call rax
0x00000200000f2fde : mov ecx, esi ; mov rax, qword ptr [rip + 0x28b1b1] ; call rax
0x00000200000eae60 : mov ecx, esi ; mov rax, qword ptr [rip + 0x29463f] ; call rax
0x00000200000ead6d : mov ecx, esi ; mov rax, qword ptr [rip + 0x294732] ; call rax
0x00000200000ea755 : mov ecx, esi ; mov rax, qword ptr [rip + 0x294d4a] ; call rax
0x00000200000ea612 : mov ecx, esi ; mov rax, qword ptr [rip + 0x294e8d] ; call rax
0x00000200000ea43a : mov ecx, esi ; mov rax, qword ptr [rip + 0x295065] ; call rax
0x00000200000ea3ec : mov ecx, esi ; mov rax, qword ptr [rip + 0x2950b3] ; call rax
0x00000200000ea2a5 : mov ecx, esi ; mov rax, qword ptr [rip + 0x2951fa] ; call rax
0x000002000003590d : mov ecx, esi ; mov rax, qword ptr [rip + 0x349b92] ; call rax
0x00000200006b8d0c : mov ecx, esi ; mov rbp, rax ; call rbx
0x0000020000472034 : mov ecx, esi ; mov rdx, qword ptr [rbx + rsi] ; call 0x2000003e338
0x000002000047573a : mov ecx, esi ; setne bl ; call 0x2000009d698
0x0000020000498c61 : mov ecx, esi ; xor edx, edx ; call 0x200000c2847
0x00000200005240d3 : mov ecx, esi ; xor edx, edx ; call 0x2000014f4c7
0x000002000003a4de : mov ecx, esp ; call 0x20000016784
0x00000200005a299b : mov ecx, esp ; call 0x2000004ec1c
0x00000200004241d1 : mov ecx, esp ; call 0x20000053795
0x00000200001785ac : mov ecx, esp ; call 0x20000064838
0x00000200006264e4 : mov ecx, esp ; call 0x200000831d8
0x0000020000491fd7 : mov ecx, esp ; call 0x2000009d698
0x000002000049a245 : mov ecx, esp ; call 0x200000c1e25
0x000002000049300f : mov ecx, esp ; call 0x200000c1e65
0x000002000049a15d : mov ecx, esp ; call 0x200000c2605
0x00000200004265c3 : mov ecx, esp ; call 0x200000c2844
0x00000200004768d6 : mov ecx, esp ; call 0x200000c2b94
0x000002000049aa50 : mov ecx, esp ; call 0x200000c2b95
0x00000200004b3689 : mov ecx, esp ; call 0x200000e24c5
0x000002000050dc36 : mov ecx, esp ; call 0x20000133f75
0x000002000060a9ce : mov ecx, esp ; call 0x20000231015
0x00000200004b07d2 : mov ecx, esp ; call 0x200004aca84
0x00000200001dce84 : mov ecx, esp ; call 0x200006290c8
0x00000200006896a0 : mov ecx, esp ; call 0x20000685908
0x000002000013488c : mov ecx, esp ; call r14
0x000002000004053d : mov ecx, esp ; call r15
0x00000200005bab2b : mov ecx, esp ; call rax
0x00000200004b64f5 : mov ecx, esp ; call rsi
0x00000200006b8e6e : mov ecx, esp ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x0000020000214460 : mov ecx, esp ; mov edx, esi ; cmovne rcx, r11 ; call rax
0x0000020000603488 : mov ecx, esp ; mov r13d, eax ; call 0x20000231ce8
0x0000020000754cf0 : mov ecx, esp ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x000002000049aef9 : mov ecx, esp ; mov rbp, rax ; call 0x200000bcc78
0x0000020000603487 : mov ecx, r12d ; mov r13d, eax ; call 0x20000231ce9
0x0000020000754cef : mov ecx, r12d ; mov r8, qword ptr [rbx + 0x38] ; call rax
0x00000200004ac705 : mov ecx, r13d ; call 0x200000cf496
0x00000200004eb8a1 : mov ecx, r13d ; call 0x2000011707e
0x000002000049a222 : mov ecx, r14d ; call 0x200000bc586
0x00000200005859a8 : mov ecx, r8d ; call 0x20000011c65
0x000002000017c5d4 : mov ecx, r8d ; inc rdx ; jmp 0x2000017c583
0x0000020000033ba5 : mov ecx, r8d ; mov eax, edx ; add qword ptr [r9 + rcx], rax ; ret
0x0000020000648e38 : mov edi, 0x19ba ; add byte ptr [rsi + 0x3b], ah ; ret 0x877
0x000002000018b2e6 : mov edi, 0x20 ; jmp 0x200000a74f9
0x00000200004a074e : mov edi, 0x24448948 ; sub byte ptr [rax - 0x73], cl ; ret
0x0000020000761129 : mov edi, 0x2b000001 ; ret
0x0000020000086197 : mov edi, 0x4809fff0 ; add esp, 0x28 ; ret
0x0000020000154d33 : mov edi, 0x48900006 ; add esp, 0x30 ; pop rbp ; ret
0x0000020000542143 : mov edi, 0x48c033ff ; add esp, 0x20 ; pop rbx ; ret
0x00000200004c3f09 : mov edi, 0x48c38bff ; add esp, 0x30 ; pop rbx ; ret
0x000002000052f34f : mov edi, 0x48daebff ; add esp, 0x40 ; pop rbx ; ret
0x000002000042ae9d : mov edi, 0x48ffc1e4 ; add esp, 0x48 ; ret
0x00000200003df5ad : mov edi, 0x48ffc93d ; add esp, 0x48 ; ret
0x000002000041eccd : mov edi, 0x48ffcb0e ; add esp, 0x50 ; pop rbx ; ret
0x00000200001ef09d : mov edi, 0x48ffefa3 ; add esp, 0x28 ; ret
0x00000200003a6858 : mov edi, 0x4dd0234c ; mov dword ptr [rax + 8], edx ; ret
0x00000200006d84b4 : mov edi, 0x58800ff ; ret
0x00000200006d944b : mov edi, 0x58b48ff ; or al, 0xa5 ; ret 0x48ff
0x00000200006d94e0 : mov edi, 0x58b48ff ; scasd eax, dword ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48ff
0x00000200006d794c : mov edi, 0x598948ff ; or byte ptr [rax + 0x3b], cl ; ret
0x00000200001c196f : mov edi, 0x7cc23bc0 ; jmp 0x1ffc41be205
0x000002000051edb2 : mov edi, 0x83000003 ; ret
0x0000020000190c9c : mov edi, 0x83480016 ; jmp qword ptr [rax]
0x00000200003e38ad : mov edi, 0x85ffccee ; ror byte ptr [rdi], 0x84 ; jmp rcx
0x00000200004534c9 : mov edi, 0x870f0000 ; ret
0x000002000050598c : mov edi, 0x8901f883 ; ret
0x0000020000486115 : mov edi, 0x89ce8b48 ; ret
0x000002000045c081 : mov edi, 0x8b000000 ; ret
0x00000200004689ca : mov edi, 0x8b068941 ; ret
0x000002000013b962 : mov edi, 0x8b4491eb ; ret 0x8b44
0x00000200004f5fed : mov edi, 0x8b48ffb9 ; retf ; call 0x20000122929
0x00000200005df85d : mov edi, 0x8bffae81 ; ret
0x000002000062584d : mov edi, 0x8bffc0b7 ; ret
0x000002000051894d : mov edi, 0x8bffd186 ; ret
0x0000020000209549 : mov edi, 0x8d000000 ; jmp qword ptr [r11]
0x000002000014d8bd : mov edi, 0x9000000b ; ret
0x000002000021aaf0 : mov edi, 0xaf0f4906 ; ret 0x9948
0x00000200001dd60e : mov edi, 0xb60fffef ; ret
0x0000020000229559 : mov edi, 0xb8797400 ; mov rax, rdx ; jmp 0x2000022956e
0x000002000022a204 : mov edi, 0xb8797400 ; mov rax, rdx ; jmp 0x2000022a219
0x00000200003d7edf : mov edi, 0xc000000d ; jmp 0x200003d7eaf
0x000002000040cab5 : mov edi, 0xc0000023 ; jmp 0x2000040ca84
0x000002000058ba98 : mov edi, 0xc000009a ; jmp 0x200004f7cf3
0x000002000049a58d : mov edi, 0xc0000428 ; call 0x200000c23c8
0x00000200006da6de : mov edi, 0xc03300ff ; add rsp, 0x28 ; ret
0x00000200005664fb : mov edi, 0xc148ffd6 ; cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000540672 : mov edi, 0xc48348ff ; pop rax ; ret
0x0000020000541fd4 : mov edi, 0xc48348ff ; pop rbx ; ret
0x0000020000535f03 : mov edi, 0xc48348ff ; push rax ; pop rbx ; ret
0x00000200004c8045 : mov edi, 0xcb8b48ff ; call 0x200000ecdd0
0x00000200004c7de2 : mov edi, 0xcf8b49ff ; call 0x200000efbc0
0x00000200004d7b7d : mov edi, 0xe8ffd5ff ; ret 0xc184
0x0000020000141995 : mov edi, 0xe9000000 ; loop 0x20000141969 ; add byte ptr [rax], al ; ret
0x0000020000185929 : mov edi, 0xe9001602 ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xfff0
0x00000200004ca104 : mov edi, 0xe9cccccc ; pop rdi ; ret 0xccff
0x00000200000bf94d : mov edi, 0xeb001716 ; ret 0xcccc
0x000002000018a163 : mov edi, 0xf18908e9 ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x000002000010f0ac : mov edi, 0xf490242 ; scasd eax, dword ptr [rdi] ; ret
0x000002000010f0c2 : mov edi, 0xf490642 ; scasd eax, dword ptr [rdi] ; ret
0x000002000010f0d4 : mov edi, 0xf490a42 ; scasd eax, dword ptr [rdi] ; ret
0x000002000010f0e6 : mov edi, 0xf490e42 ; scasd eax, dword ptr [rdi] ; ret
0x000002000010f0f8 : mov edi, 0xf491242 ; scasd eax, dword ptr [rdi] ; ret
0x000002000010f114 : mov edi, 0xf498104 ; scasd eax, dword ptr [rdi] ; ret
0x0000020000099c65 : mov edi, 0xf6000000 ; ret 0xf07
0x0000020000086745 : mov edi, 0xf6002f8b ; ret
0x000002000007ed11 : mov edi, 0xf7000000 ; ret 0x7000
0x0000020000161ba7 : mov edi, 1 ; jmp 0x2000002ddda
0x00000200001a58a5 : mov edi, 5 ; mov ecx, edi ; call 0x20000061bb9
0x00000200007536b4 : mov edi, dr1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001e71c : mov edi, dword ptr [rax + 0x40] ; jmp 0x2000001e6e8
0x00000200001b3aba : mov edi, dword ptr [rax + 0xf000000] ; xchg eax, ebp ; ret 0x8948
0x0000020000607f16 : mov edi, dword ptr [rax + rcx] ; xor edx, edx ; call 0x20000231018
0x0000020000494d89 : mov edi, dword ptr [rax] ; xor edx, edx ; mov rcx, rax ; call 0x20000231019
0x00000200003b4a9c : mov edi, dword ptr [rbp + 0x10] ; jmp 0x200003b46c6
0x00000200004ac882 : mov edi, dword ptr [rbp + 0x10] ; jmp 0x200004ac5c5
0x00000200006aaeef : mov edi, dword ptr [rbp + 0x48] ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x000002000004791f : mov edi, dword ptr [rbp + 0x60] ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x000002000010bdc7 : mov edi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f0582 : mov edi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x0000020000008b8a : mov edi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x000002000076ec46 : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r12 ; ret
0x00000200000026f7 : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x00000200001bc577 : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000029711 : mov edi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000416179 : mov edi, dword ptr [rcx + 0x18] ; call 0x200000c23c5
0x0000020000610ffc : mov edi, dword ptr [rcx + 1] ; call 0x20000231ce9
0x0000020000588b51 : mov edi, dword ptr [rcx] ; cld ; dec dword ptr [rdi] ; ret
0x00000200005fd681 : mov edi, dword ptr [rcx] ; ret
0x000002000004e98f : mov edi, dword ptr [rdi] ; jmp 0x2000004e959
0x000002000002c23f : mov edi, dword ptr [rsp + 0x10] ; jmp rcx
0x000002000002f6c3 : mov edi, dword ptr [rsp + 0x10] ; mov byte ptr [r8 + 4], r9b ; ret
0x000002000021678c : mov edi, dword ptr [rsp + 0x10] ; mov dword ptr [r9], r11d ; ret
0x0000020000463e24 : mov edi, dword ptr [rsp + 0x10] ; mov dword ptr [rbx], eax ; xor eax, eax ; pop rbx ; ret
0x000002000002016f : mov edi, dword ptr [rsp + 0x10] ; ret
0x00000200000361a3 : mov edi, dword ptr [rsp + 0x18] ; cmova rdx, rax ; mov eax, edx ; ret
0x00000200003ef715 : mov edi, dword ptr [rsp + 0x18] ; mov r14, qword ptr [rsp + 0x20] ; ret
0x000002000000af5c : mov edi, dword ptr [rsp + 0x18] ; ret
0x0000020000643fbe : mov edi, dword ptr [rsp + 0x20] ; and eax, 0x80000005 ; ret
0x000002000003db78 : mov edi, dword ptr [rsp + 0x20] ; ret
0x000002000002623e : mov edi, dword ptr [rsp + 0x28] ; pop r14 ; ret
0x0000020000029ad1 : mov edi, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000065d92 : mov edi, dword ptr [rsp + 0x30] ; pop r14 ; pop r12 ; ret
0x000002000049cf3e : mov edi, dword ptr [rsp + 0x30] ; pop r14 ; pop rsi ; ret
0x000002000003b185 : mov edi, dword ptr [rsp + 0x30] ; pop r15 ; pop r14 ; ret
0x0000020000621a0c : mov edi, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000bc3ef : mov edi, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000098ffc : mov edi, dword ptr [rsp + 0x38] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200001200e5 : mov edi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200003f6a72 : mov edi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003ac9a1 : mov edi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rcx ; ret
0x0000020000445c0d : mov edi, dword ptr [rsp + 0x40] ; mov rcx, rdi ; call 0x200000c1e69
0x00000200003df1f5 : mov edi, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200003ba6eb : mov edi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000022a2a : mov edi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003b23f3 : mov edi, dword ptr [rsp + 0x48] ; jmp 0x200003b2449
0x0000020000231c21 : mov edi, dword ptr [rsp + 0x50] ; add rsp, 0x70 ; pop rdi ; ret
0x00000200001effb2 : mov edi, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000230e43 : mov edi, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rcx ; ret
0x0000020000121ab9 : mov edi, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000758f6d : mov edi, dword ptr [rsp + 0x60] ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000025fb4 : mov edi, dword ptr [rsp + 0x60] ; add rsp, 0x68 ; ret
0x000002000043e5a6 : mov edi, dword ptr [rsp + 0x60] ; add rsp, 0x70 ; pop rbp ; ret
0x00000200000882d7 : mov edi, dword ptr [rsp + 0x68] ; add rsp, 0x40 ; pop rbp ; ret
0x000002000005c049 : mov edi, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rbp ; ret
0x000002000003a9a7 : mov edi, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rbp ; ret
0x00000200005966b0 : mov edi, dword ptr [rsp + 0x70] ; jmp 0x200005128df
0x000002000012e3b1 : mov edi, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbp ; ret
0x00000200001055da : mov edi, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rbp ; ret
0x000002000013580c : mov edi, dword ptr [rsp + 8] ; mov rax, r9 ; ret
0x000002000004a61e : mov edi, dword ptr [rsp + 8] ; ret
0x000002000010fcb0 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; ret
0x000002000004598d : mov edi, eax ; add byte ptr [rax], al ; add bl, ch ; ret
0x000002000049a2b2 : mov edi, eax ; call 0x200000bc565
0x000002000049ad0c : mov edi, eax ; call 0x200000bcc75
0x00000200005201c7 : mov edi, eax ; call 0x20000140385
0x000002000068964a : mov edi, eax ; call 0x200006858c4
0x00000200005010d0 : mov edi, eax ; call r15
0x000002000001720d : mov edi, eax ; jmp 0x2000001741c
0x000002000007e4ff : mov edi, eax ; jmp 0x2000007e46e
0x00000200001858c3 : mov edi, eax ; jmp 0x20000091b4e
0x0000020000453f77 : mov edi, eax ; jmp 0x20000453ed2
0x0000020000491930 : mov edi, eax ; jmp 0x200004918f9
0x000002000014ada8 : mov edi, eax ; jmp rsi
0x00000200006b85e1 : mov edi, eax ; mov r8d, esi ; call rbx
0x000002000010aea3 : mov edi, eax ; mov rcx, qword ptr [rcx + 8] ; mov rsi, rdx ; call qword ptr [rbx]
0x00000200005021bd : mov edi, eax ; mov rcx, rdx ; call 0x200000ee3ef
0x0000020000423d4e : mov edi, ecx ; call 0x200000459c5
0x0000020000475cea : mov edi, ecx ; call 0x2000009b445
0x0000020000498d16 : mov edi, ecx ; call 0x200000bb115
0x00000200004c271a : mov edi, ecx ; call 0x200000e88d1
0x00000200006cd116 : mov edi, ecx ; call qword ptr [rip + 0x3c20a]
0x000002000060d04d : mov edi, ecx ; lea ecx, dword ptr [rdx - 0x1f] ; call 0x20000231ce8
0x00000200001c9d52 : mov edi, ecx ; mov rcx, qword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x0000020000782efd : mov edi, edi ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ccfd6 : mov edi, edx ; mov rbx, rcx ; call 0x200000ef504
0x00000200003de2f7 : mov edi, edx ; mov rbx, rcx ; mov rdx, qword ptr [rdx + 8] ; call qword ptr [rdi]
0x00000200004c2717 : mov edi, edx ; mov rdi, rcx ; call 0x200000e88d4
0x0000020000064047 : mov edi, esi ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x00000200005942e8 : mov edi, esi ; call 0x200004b0564
0x0000020000683aea : mov edi, esi ; jmp 0x20000683af8
0x00000200003fbe0d : mov edi, esi ; shl dword ptr [rbx], cl ; ret
0x0000020000481d65 : mov edi, esp ; dec dword ptr [rcx + 0x3b442444] ; ret
0x00000200001a4b28 : mov edi, fs ; call qword ptr [rax - 0x7233d17]
0x000002000017e706 : mov edi, gs ; inc dword ptr [rbp - 0x75] ; ret 0x8b48
0x0000020000425c45 : mov edi, gs ; nop ; add dword ptr [rax], eax ; add al, ch ; mov al, 0x65 ; ret 0xf7ff
0x0000020000683ae9 : mov edi, r14d ; jmp 0x20000683af9
0x000002000053e220 : mov edx, 0x100 ; call r14
0x00000200004049c9 : mov edx, 0x127210e0 ; mov eax, edx ; ret
0x0000020000074be0 : mov edx, 0x12721ae1 ; mov eax, edx ; ret
0x000002000015702f : mov edx, 0x144ffea ; pop rcx ; ret
0x000002000044c954 : mov edx, 0x14721be1 ; mov rax, r8 ; ret
0x00000200004cb295 : mov edx, 0x1d6348ff ; outsb dx, byte ptr [rsi] ; jmp rax
0x000002000075a1dd : mov edx, 0x1d8948ff ; ret 0xba95
0x0000020000564de4 : mov edx, 0x20534c53 ; call 0x20000231017
0x00000200000dc6bc : mov edx, 0x220f07f0 ; loopne 0x200000dc6db ; and ah, cl ; ret
0x00000200001c3c82 : mov edx, 0x220f07f0 ; loopne 0x200001c3ca1 ; and ah, cl ; ret
0x00000200001b3334 : mov edx, 0x32 ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x00000200005966bc : mov edx, 0x32e990ff ; ret 0xfff7
0x00000200004cae41 : mov edx, 0x33e8b5eb ; movhps qword ptr [rax], xmm0 ; jmp 0x200004cae17
0x000002000075f3b0 : mov edx, 0x358944ff ; ret
0x0000020000755402 : mov edx, 0x35894cff ; jne 0x200007553dd ; ret
0x00000200007551c6 : mov edx, 0x35894cff ; xor eax, ebx ; ret
0x00000200006b3a18 : mov edx, 0x37211e0 ; mov al, 1 ; ret
0x00000200003f2990 : mov edx, 0x397209e0 ; xor eax, eax ; ret
0x000002000050397b : mov edx, 0x3b4cffe7 ; ret 0x940f
0x0000020000603b31 : mov edx, 0x47706e50 ; call 0x20000231018
0x00000200006be572 : mov edx, 0x480004b7 ; add esp, 0x68 ; ret
0x0000020000104d14 : mov edx, 0x48000685 ; add esp, 0x38 ; ret
0x000002000012954e : mov edx, 0x4800255c ; add esp, 0x28 ; ret
0x00000200002081f2 : mov edx, 0x4800451f ; add esp, 0x28 ; ret
0x0000020000655b2d : mov edx, 0x4800ebff ; add esp, 0x38 ; ret
0x0000020000782718 : mov edx, 0x480a086b ; add esp, 0x20 ; pop rbx ; ret
0x00000200006c879a : mov edx, 0x48190468 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000690556 : mov edx, 0x48c033ff ; add esp, 0x20 ; pop rbx ; ret
0x000002000074b79c : mov edx, 0x48c033ff ; add esp, 0x48 ; ret
0x000002000068c195 : mov edx, 0x48c38aff ; add esp, 0x30 ; pop rbx ; ret
0x00000200001c8002 : mov edx, 0x48ffec20 ; add esp, 0x38 ; ret
0x000002000060147a : mov edx, 0x4b706e50 ; call 0x20000231018
0x000002000041e892 : mov edx, 0x510a9 ; add byte ptr [rdx], dl ; xor eax, eax ; ret
0x000002000060e439 : mov edx, 0x51706e50 ; call 0x20000231018
0x00000200000262d0 : mov edx, 0x5720029 ; add rsp, 0x28 ; ret
0x000002000061005a : mov edx, 0x57706e50 ; call 0x20000231018
0x00000200001c41f9 : mov edx, 0x58 ; call r12
0x0000020000605f9b : mov edx, 0x58706e50 ; call 0x20000231018
0x00000200007498ac : mov edx, 0x5890ae8 ; push rbx ; pop rcx ; ret
0x00000200005d14ac : mov edx, 0x5890be8 ; ret
0x0000020000755be5 : mov edx, 0x58948ff ; ret 0xba4c
0x00000200007555ac : mov edx, 0x58d48ff ; call qword ptr [rcx]
0x0000020000755cc4 : mov edx, 0x58d48ff ; ret
0x00000200007543e9 : mov edx, 0x58d48ff ; ret 0xcb6d
0x000002000076cceb : mov edx, 0x5c748ff ; xor byte ptr [rax - 0x4a], ah ; jmp qword ptr [rax]
0x00000200004ad8f3 : mov edx, 0x60e6e8ff ; ret 0x84ff
0x0000020000405bf8 : mov edx, 0x6243624f ; call 0x200000c1e67
0x000002000020e9f2 : mov edx, 0x64 ; sub edx, eax ; mov dword ptr [rcx], edx ; ret
0x00000200004cc54a : mov edx, 0x6738840 ; jmp 0x200004cc519
0x0000020000492176 : mov edx, 0x6d566d4d ; call 0x200000c1e68
0x00000200001d9cf2 : mov edx, 0x733f186e ; xor dh, dh ; ret
0x0000020000756184 : mov edx, 0x80058bff ; nop ; ret 0x85ff
0x00000200000c6e39 : mov edx, 0x820f002f ; ret 2
0x000002000010848b : mov edx, 0x820f09e3 ; ret 0x65f
0x00000200001d2e53 : mov edx, 0x820f13e1 ; ret
0x00000200004b5a29 : mov edx, 0x820f1ce1 ; nop ; ret 0x10
0x00000200004b59e9 : mov edx, 0x820f1ce1 ; pushfq ; ret 0x10
0x00000200004b5a1c : mov edx, 0x820f1de1 ; nop ; ret 0x10
0x00000200004b59dc : mov edx, 0x820f1de1 ; pushfq ; ret 0x10
0x00000200004b5a0f : mov edx, 0x820f1ee1 ; nop ; ret 0x10
0x00000200004b59cf : mov edx, 0x820f1ee1 ; pushfq ; ret 0x10
0x000002000022c19e : mov edx, 0x820f1ee1 ; ret
0x000002000044a748 : mov edx, 0x820f1ee6 ; ret
0x000002000044765d : mov edx, 0x830f1de4 ; ret
0x000002000000d5cc : mov edx, 0x830f1ee6 ; ret 0x14
0x000002000011cae4 : mov edx, 0x834811ef ; ret
0x0000020000224b21 : mov edx, 0x83491ff2 ; ret
0x00000200004af422 : mov edx, 0x84000063 ; ror byte ptr [rdi], 0x84 ; sahf ; call qword ptr [rax]
0x0000020000460c0b : mov edx, 0x848b48ff ; ret 0xe8e0
0x000002000045acb6 : mov edx, 0x85fffc41 ; ror byte ptr [rdi], 0x85 ; ret 0x14
0x000002000003b971 : mov edx, 0x8720029 ; mov al, 1 ; ret
0x0000020000413d25 : mov edx, 0x8721be1 ; mov eax, edx ; ret
0x0000020000493f5a : mov edx, 0x88441ff0 ; and r14b, byte ptr [r11] ; ret 0x8d4c
0x0000020000755b8b : mov edx, 0x8935f7ff ; xchg eax, esi ; ret 0x44ff
0x00000200000c31cd : mov edx, 0x89441fe9 ; or byte ptr [rcx - 1], al ; ret 0x8348
0x0000020000062136 : mov edx, 0x89480ae8 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000021d2ac : mov edx, 0x89480bf0 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4c08
0x0000020000624f80 : mov edx, 0x8a4401b2 ; ret 0x8d48
0x00000200003ba462 : mov edx, 0x8affd0d5 ; ret
0x00000200001b82ee : mov edx, 0x8b000010 ; ret
0x000002000041cac1 : mov edx, 0x8b00167d ; ret
0x0000020000411340 : mov edx, 0x8b0016f9 ; adc ecx, dword ptr [rbp - 0x75] ; ret 0x8b41
0x0000020000750309 : mov edx, 0x8b073071 ; ret
0x0000020000496735 : mov edx, 0x8b411fe0 ; ret
0x00000200003e8e61 : mov edx, 0x8b480004 ; ret
0x000002000012e44b : mov edx, 0x8b48001c ; ret
0x00000200001ef8d5 : mov edx, 0x8b48092e ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000181b11 : mov edx, 0x8b4809ef ; ret
0x00000200000a5c46 : mov edx, 0x8b4809f3 ; ret
0x00000200005306e8 : mov edx, 0x8b480a2b ; ret
0x00000200001ef8e6 : mov edx, 0x8b480a2e ; fmul dword ptr [rax - 0x75] ; ret
0x00000200001ef8f5 : mov edx, 0x8b480b2e ; fmul dword ptr [rax - 0x75] ; ret
0x00000200003a27af : mov edx, 0x8b480bf3 ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200000c7239 : mov edx, 0x8b4d1ff0 ; lodsb al, byte ptr [rsi] ; ret
0x00000200007748c4 : mov edx, 0x8bcbffff ; ror dword ptr [rax - 0x7d], cl ; ret 0x4802
0x00000200005a17be : mov edx, 0x8bffa71a ; ret
0x00000200006dc236 : mov edx, 0x8bffad70 ; ret
0x00000200006dc136 : mov edx, 0x8bffad71 ; ret
0x00000200004e0d02 : mov edx, 0x8bffbe16 ; ret
0x00000200004b8802 : mov edx, 0x8bffc09b ; ret
0x00000200003e5fb2 : mov edx, 0x8bffc2d2 ; ret
0x00000200000c7782 : mov edx, 0x8bfffffe ; ret 0x8b4d
0x00000200000822c9 : mov edx, 0x930f0a21 ; ret 0x2244
0x00000200000b75db : mov edx, 0x9721ee0 ; xor eax, eax ; ret
0x0000020000671ed1 : mov edx, 0xa0917e9 ; ret
0x00000200007867ba : mov edx, 0xb4b32f2d ; call qword ptr [rcx]
0x000002000013ffc2 : mov edx, 0xb7ebfff2 ; ret
0x00000200006dc81c : mov edx, 0xbea04535 ; call qword ptr [rax]
0x00000200006dc40a : mov edx, 0xbea45735 ; call qword ptr [rax]
0x000002000069de7e : mov edx, 0xc0000001 ; mov eax, edx ; jmp 0x2000069de92
0x000002000068eff5 : mov edx, 0xc0000225 ; mov eax, r10d ; ret
0x00000200003a6cae : mov edx, 0xc033ffff ; add rsp, 0x28 ; ret
0x0000020000622421 : mov edx, 0xc48348ff ; pop rax ; ret
0x00000200006229af : mov edx, 0xc48348ff ; ret
0x000002000049a275 : mov edx, 0xcd8b49ff ; call 0x200000c23c8
0x0000020000613d85 : mov edx, 0xce830df3 ; add al, 0xf7 ; ret
0x00000200005a8f2f : mov edx, 0xd288e225 ; call qword ptr [rbx]
0x00000200004c509b : mov edx, 0xe0c77625 ; call qword ptr [rsi]
0x00000200004c5035 : mov edx, 0xe0c7dc25 ; call qword ptr [rsi]
0x000002000018c4e9 : mov edx, 0xe5e908ef ; ret
0x00000200006b67b8 : mov edx, 0xe8073076 ; ret
0x00000200000e2b68 : mov edx, 0xe9fffffe ; ret
0x000002000004fcae : mov edx, 0xebf58b41 ; ret 0x8b48
0x000002000002a047 : mov edx, 0xf0a1063 ; xchg eax, edx ; ret 0xf48
0x00000200004a115f : mov edx, 0xf110466 ; xchg eax, ebx ; ret 0xf41
0x0000020000188ff4 : mov edx, 0xf1a3867 ; xchg eax, edx ; ret 0xf640
0x000002000044cb38 : mov edx, 0xf3eb1ee8 ; bts eax, 0x1c ; ret
0x000002000020c4b1 : mov edx, 0xf410cf3 ; mov dh, 0x48 ; and byte ptr [rdx], bh ; ret 0x675
0x000002000042ce9a : mov edx, 0xf4c0ee9 ; scasd eax, dword ptr [rdi] ; ret 0xc88b
0x00000200003e64c6 : mov edx, 0xf60004e3 ; ret
0x00000200006be008 : mov edx, 0xf6143868 ; ret
0x0000020000178580 : mov edx, 0xf6410a21 ; ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0x2244
0x000002000044439b : mov edx, 0xf721be1 ; mov rax, r8 ; ret
0x00000200005ad3ca : mov edx, 0xf9e990ff ; ret 0xffeb
0x00000200004ceb70 : mov edx, 0xff000000 ; ret
0x000002000013f1a9 : mov edx, 0xff411ff2 ; ret
0x00000200000ff66a : mov edx, 0xff480006 ; ret
0x00000200007857e7 : mov edx, 0xffc6c6c6 ; call qword ptr [rax]
0x000002000016f044 : mov edx, 0xffc6c6c6 ; xor ecx, ecx ; call qword ptr [rax]
0x000002000042d72d : mov edx, 0xffff ; add word ptr [rcx + 0xa], dx ; ret
0x00000200003ae4b4 : mov edx, 1 ; cmovne eax, edx ; ret
0x000002000049a3a9 : mov edx, 1 ; jmp 0x2000049a3d5
0x0000020000230bb0 : mov edx, 1 ; jmp r8
0x000002000046092b : mov edx, 1 ; mov rcx, r14 ; call r10
0x0000020000609645 : mov edx, dword ptr [r15 + 0xc] ; call 0x20000231ce7
0x0000020000216af6 : mov edx, dword ptr [r9 + rcx*4] ; mov dword ptr [r8], edx ; ret
0x00000200001d26d7 : mov edx, dword ptr [rax + 0x28] ; shr rdx, 0xc ; call qword ptr [rbx]
0x00000200003aecd5 : mov edx, dword ptr [rax + 0x28] ; shr rdx, 0xc ; call qword ptr [rsi]
0x00000200001b2b51 : mov edx, dword ptr [rax + 0x50] ; test rdx, rdx ; je 0x200001b2b65 ; jmp rdx
0x00000200005c43d8 : mov edx, dword ptr [rax + 0xb8] ; call r14
0x000002000015f944 : mov edx, dword ptr [rax + rax*8] ; mov r8d, edx ; xor edx, edx ; call r10
0x000002000015244e : mov edx, dword ptr [rbp + 0x28] ; mov rcx, r10 ; call r10
0x000002000061cced : mov edx, dword ptr [rbp + 0x30] ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200001539da : mov edx, dword ptr [rbp + 0x38] ; mov rcx, qword ptr [rbp + 0x40] ; call rax
0x0000020000153def : mov edx, dword ptr [rbp + 0x40] ; mov rcx, r11 ; call r11
0x000002000015284d : mov edx, dword ptr [rbp + 0x48] ; mov rcx, qword ptr [rbp + 0x50] ; call rax
0x00000200001540a0 : mov edx, dword ptr [rbp + 0x48] ; mov rcx, r11 ; call r11
0x0000020000421849 : mov edx, dword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x000002000050c145 : mov edx, dword ptr [rbp + 0x6f] ; mov rcx, qword ptr [r15] ; call 0x20000133f79
0x00000200005797b3 : mov edx, dword ptr [rbp + 0x77] ; call 0x200001a7a3e
0x0000020000641275 : mov edx, dword ptr [rbx + 0x10] ; mov rcx, rdi ; call r8
0x0000020000731509 : mov edx, dword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x2000073151e
0x0000020000737ee1 : mov edx, dword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x20000737ef6
0x00000200007384fd : mov edx, dword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x20000738512
0x0000020000738bbd : mov edx, dword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x20000738bd2
0x000002000073b62b : mov edx, dword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x2000073b640
0x000002000073c7ec : mov edx, dword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x2000073c801
0x000002000073cbe1 : mov edx, dword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x2000073cbf6
0x00000200005ff5b0 : mov edx, dword ptr [rbx + 8] ; mov ecx, eax ; call r8
0x00000200005264e1 : mov edx, dword ptr [rbx + 8] ; mov rbx, qword ptr [rsi] ; inc rdx ; jmp 0x200005264d3
0x0000020000472037 : mov edx, dword ptr [rbx + rsi] ; call 0x2000003e335
0x000002000013ea41 : mov edx, dword ptr [rcx + 0x20] ; call rax
0x000002000019f7f4 : mov edx, dword ptr [rcx + 0x20] ; jmp 0x20000126261
0x00000200004cb93d : mov edx, dword ptr [rcx + 0x20] ; mov rcx, rbx ; call 0x200000ef379
0x000002000014ebb9 : mov edx, dword ptr [rcx + 0x38] ; jmp rdx
0x00000200004c0329 : mov edx, dword ptr [rcx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000002000054004f : mov edx, dword ptr [rcx + 8] ; call r8
0x0000020000216af7 : mov edx, dword ptr [rcx + rcx*4] ; mov dword ptr [r8], edx ; ret
0x0000020000403c33 : mov edx, dword ptr [rcx] ; test r10d, r10d ; jne 0x20000403c46 ; xor eax, eax ; ret
0x0000020000456f80 : mov edx, dword ptr [rdi + 0x10] ; mov rcx, rbx ; call 0x200000823a1
0x000002000051e227 : mov edx, dword ptr [rdi + 0x38] ; mov ecx, 1 ; call r8
0x00000200006719c8 : mov edx, dword ptr [rdi + 0x38] ; mov ecx, 2 ; call rax
0x00000200006719ea : mov edx, dword ptr [rdi + 0x38] ; mov ecx, 3 ; call rax
0x000002000019253c : mov edx, dword ptr [rdi + 0x38] ; test rdx, rdx ; je 0x2000019254e ; call rax
0x000002000051e21d : mov edx, dword ptr [rdi + 0x38] ; xor ecx, ecx ; call rax
0x000002000022ef09 : mov edx, dword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x2000022ef1e
0x0000020000737990 : mov edx, dword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x200007379a5
0x0000020000738051 : mov edx, dword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x20000738066
0x00000200007389fc : mov edx, dword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x20000738a11
0x0000020000738d6c : mov edx, dword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x20000738d81
0x000002000073c3cb : mov edx, dword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x2000073c3e0
0x000002000073c5a1 : mov edx, dword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x2000073c5b6
0x000002000073cd4e : mov edx, dword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x2000073cd63
0x00000200005642f9 : mov edx, dword ptr [rdi + 0x700] ; call 0x200001c05e8
0x0000020000609646 : mov edx, dword ptr [rdi + 0xc] ; call 0x20000231ce6
0x000002000061cbe8 : mov edx, dword ptr [rdi + 8] ; mov rcx, rbx ; call 0x200003e8e8c
0x00000200006c95cf : mov edx, dword ptr [rdi + 8] ; mov rcx, rbx ; mov rsi, rax ; call qword ptr [rdi]
0x00000200006412a0 : mov edx, dword ptr [rdx + 0x10] ; call r8
0x00000200001e24c1 : mov edx, dword ptr [rdx + 0x10] ; mov eax, edx ; ret
0x000002000014f7cb : mov edx, dword ptr [rdx + 0x14] ; sub eax, edx ; ret
0x00000200000c30ab : mov edx, dword ptr [rdx + 0x18] ; test rdx, rdx ; jne 0x200000c30af ; ret
0x00000200006bfef0 : mov edx, dword ptr [rdx + 0x18] ; test rdx, rdx ; jne 0x200006bfee9 ; ret
0x000002000014f667 : mov edx, dword ptr [rdx + 0xc] ; sub eax, edx ; ret
0x000002000044d07a : mov edx, dword ptr [rdx + 0xd0] ; sub r8, r10 ; jmp 0x2000044d00f
0x000002000005154a : mov edx, dword ptr [rdx + 8] ; call qword ptr [rbx]
0x00000200003de2fd : mov edx, dword ptr [rdx + 8] ; call qword ptr [rdi]
0x000002000014017f : mov edx, dword ptr [rdx + 8] ; call r10
0x000002000046530e : mov edx, dword ptr [rdx + 8] ; lea r8, qword ptr [rsp + 0x58] ; call rax
0x00000200003a00bb : mov edx, dword ptr [rdx + 8] ; mov ecx, dword ptr [rsi + 0x28] ; call rax
0x000002000015f730 : mov edx, dword ptr [rdx + rax*8] ; call r10
0x00000200005a87c5 : mov edx, dword ptr [rdx + rsi + 0x18] ; call 0x20000664a3a
0x000002000003ce9b : mov edx, dword ptr [rdx] ; add dh, dh ; ret
0x00000200004cc577 : mov edx, dword ptr [rdx] ; cmp rdx, r8 ; jne 0x200004cc577 ; ret
0x0000020000632d54 : mov edx, dword ptr [rdx] ; cmp rdx, r8 ; jne 0x20000632d4d ; ret
0x0000020000745c22 : mov edx, dword ptr [rdx] ; cmp rdx, r8 ; jne 0x20000745c18 ; xor eax, eax ; ret
0x000002000054620a : mov edx, dword ptr [rdx] ; sub eax, edx ; ret
0x00000200004e72cb : mov edx, dword ptr [rip - 0x168009] ; call r10
0x00000200005f78a3 : mov edx, dword ptr [rip - 0x2785e1] ; call r10
0x00000200005fa4b0 : mov edx, dword ptr [rip - 0x27b1ee] ; call r10
0x00000200005fadb1 : mov edx, dword ptr [rip - 0x27baef] ; call r10
0x000002000057aae4 : mov edx, dword ptr [rip - 0x74b40000] ; ret
0x00000200003f98ae : mov edx, dword ptr [rip - 0x7a5ec] ; call r10
0x00000200003f9b22 : mov edx, dword ptr [rip - 0x7a860] ; call r10
0x00000200003f9f87 : mov edx, dword ptr [rip - 0x7acc5] ; call r10
0x000002000022947c : mov edx, dword ptr [rsi + 0x588] ; mov rax, rdx ; jmp 0x20000229491
0x000002000022ad10 : mov edx, dword ptr [rsi + 0x588] ; mov rax, rdx ; jmp 0x2000022ad25
0x0000020000738eed : mov edx, dword ptr [rsi + 0x588] ; mov rax, rdx ; jmp 0x20000738f02
0x000002000073b79b : mov edx, dword ptr [rsi + 0x588] ; mov rax, rdx ; jmp 0x2000073b7b0
0x000002000073c1bd : mov edx, dword ptr [rsi + 0x588] ; mov rax, rdx ; jmp 0x2000073c1d2
0x0000020000116913 : mov edx, dword ptr [rsi + rbp + 0x54] ; mov rcx, qword ptr [rdi + 8] ; call r8
0x0000020000116929 : mov edx, dword ptr [rsi + rbp + 0x58] ; mov rcx, qword ptr [rdi + 8] ; call r8
0x0000020000171b75 : mov edx, dword ptr [rsi + rbp + 0x60] ; mov rcx, qword ptr [rdi + 8] ; call r8
0x0000020000171b97 : mov edx, dword ptr [rsi + rbp + 0x64] ; mov rcx, qword ptr [rdi + 8] ; call r8
0x000002000050dc33 : mov edx, dword ptr [rsi] ; mov rcx, r12 ; call 0x20000133f78
0x000002000052bcfb : mov edx, dword ptr [rsp + 0x28] ; add rax, rdx ; jmp 0x2000052bd18
0x00000200004ecc15 : mov edx, dword ptr [rsp + 0x30] ; call 0x200001178cf
0x0000020000400aef : mov edx, dword ptr [rsp + 0x30] ; mov ecx, edi ; call 0x2000047cd9c
0x000002000014e42f : mov edx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; call r10
0x000002000052239d : mov edx, dword ptr [rsp + 0x40] ; dec rax ; add rax, rdx ; jmp 0x20000522344
0x00000200001ad595 : mov edx, dword ptr [rsp + 0x40] ; mov rcx, qword ptr [rsp + 0x20] ; call rax
0x000002000063eff0 : mov edx, dword ptr [rsp + 0x40] ; mov rcx, rdi ; call r8
0x00000200004a80cb : mov edx, dword ptr [rsp + 0x44] ; mov rcx, r14 ; call 0x200003f4389
0x0000020000230e33 : mov edx, dword ptr [rsp + 0x48] ; mov dword ptr [r10], eax ; call r10
0x0000020000144627 : mov edx, dword ptr [rsp + 0x48] ; mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x00000200001ab09f : mov edx, dword ptr [rsp + 0x68] ; call rax
0x00000200001fd8c0 : mov edx, dword ptr [rsp + 0x70] ; call r9
0x000002000047858b : mov edx, dword ptr [rsp + 0x70] ; mov rcx, rbp ; call rdi
0x00000200001fd90d : mov edx, dword ptr [rsp + 0x70] ; xor ecx, ecx ; call r9
0x00000200005a2608 : mov edx, dword ptr [rsp + 0x78] ; call 0x200001c46cf
0x00000200006cc893 : mov edx, eax ; add rsp, 0x38 ; jmp r8
0x000002000042fb91 : mov edx, eax ; call 0x20000053ca9
0x000002000049946c : mov edx, eax ; call 0x200000bc285
0x000002000048e0df : mov edx, eax ; call 0x200000bccc5
0x000002000050c114 : mov edx, eax ; call 0x20000133f75
0x0000020000128b41 : mov edx, eax ; call qword ptr [rbx]
0x0000020000160eaf : mov edx, eax ; call r9
0x000002000049a3a0 : mov edx, eax ; jmp 0x2000049a3d2
0x00000200004ba79b : mov edx, eax ; jmp 0x200004ba764
0x000002000047e7d9 : mov edx, eax ; jne 0x2000047e7ec ; mov eax, 1 ; ret
0x0000020000609bc0 : mov edx, eax ; lea ecx, dword ptr [rax - 0x15] ; call 0x20000231ce8
0x00000200004bbf82 : mov edx, eax ; lea rcx, qword ptr [r13 - 0x20] ; call 0x200000e8389
0x00000200004c00ac : mov edx, eax ; lea rcx, qword ptr [rbx - 0x10] ; call 0x200000e8389
0x0000020000668d9a : mov edx, eax ; mov eax, edx ; add rsp, 0x18 ; ret
0x0000020000117ccd : mov edx, eax ; mov eax, edx ; add rsp, 0x28 ; ret
0x00000200001063fc : mov edx, eax ; mov eax, edx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000003104b : mov edx, eax ; mov eax, edx ; add rsp, 0x38 ; ret
0x000002000064622d : mov edx, eax ; mov eax, edx ; jmp 0x2000064623b
0x0000020000503df5 : mov edx, eax ; mov eax, r10d ; add rsp, 0x28 ; ret
0x00000200001fc444 : mov edx, eax ; mov eax, r10d ; add rsp, 0x38 ; ret
0x000002000040e7a8 : mov edx, eax ; mov eax, r10d ; add rsp, 0x48 ; ret
0x0000020000039915 : mov edx, eax ; mov r8, r10 ; jmp 0x200000398ab
0x00000200004c1db8 : mov edx, eax ; mov r8, rcx ; call 0x200000e8388
0x00000200004e4e9d : mov edx, eax ; mov r9, rcx ; jne 0x200004e4eb0 ; mov al, 1 ; ret
0x00000200004c93b6 : mov edx, eax ; mov rcx, qword ptr [rcx + 0x50] ; call 0x200000ede6d
0x00000200001785a9 : mov edx, eax ; mov rcx, r12 ; call 0x2000006483b
0x00000200004beb73 : mov edx, eax ; mov rcx, r14 ; call 0x200000e8388
0x00000200004beed0 : mov edx, eax ; mov rcx, r15 ; call 0x200000e8388
0x0000020000496f5a : mov edx, eax ; mov rcx, r9 ; call 0x200000b8ea8
0x000002000009bb46 : mov edx, eax ; mov rcx, rbp ; call r14
0x00000200001d2739 : mov edx, eax ; mov rcx, rbx ; call qword ptr [rbx]
0x000002000015c0ce : mov edx, eax ; mov rcx, rdi ; call 0x200000e8387
0x00000200004c1f45 : mov edx, eax ; mov rcx, rdi ; call 0x200000e8388
0x00000200005a6bb0 : mov edx, eax ; mov rcx, rsi ; call 0x200001c9748
0x00000200004f758b : mov edx, eax ; mov rcx, rsi ; call r14
0x0000020000425594 : mov edx, eax ; shl rdx, 0xc ; call 0x20000045725
0x000002000003856d : mov edx, eax ; test r8d, r8d ; jne 0x2000003857c ; ret
0x000002000013fffa : mov edx, eax ; wrmsr ; pop rdx ; pop rax ; pop rcx ; ret
0x00000200004f650e : mov edx, ebp ; call 0x200000b2774
0x00000200005a4a80 : mov edx, ebp ; call 0x200000b8098
0x000002000060f3f9 : mov edx, ebp ; call qword ptr [rip - 0x3db391]
0x00000200000f0b64 : mov edx, ebp ; call rax
0x0000020000606e8f : mov edx, ebp ; lea ecx, dword ptr [rbp - 0xf] ; call 0x20000231ce8
0x0000020000606d8f : mov edx, ebp ; lea ecx, dword ptr [rbp - 1] ; call 0x20000231ce8
0x000002000052cd85 : mov edx, ebp ; mov dword ptr [rsp + 0x20], ebx ; call r10
0x00000200006caef3 : mov edx, ebp ; mov ecx, 0xc4 ; call 0x2000020711d
0x0000020000606dd4 : mov edx, ebp ; mov ecx, edx ; call 0x20000231ce7
0x000002000049a220 : mov edx, ebp ; mov ecx, r14d ; call 0x200000bc588
0x00000200005a9c34 : mov edx, ebp ; mov qword ptr [rsp + 0x20], rax ; call 0x20000465e8d
0x00000200006b8740 : mov edx, ebp ; mov rcx, r12 ; call rax
0x00000200006b3724 : mov edx, ebp ; mov rcx, r13 ; call rbx
0x00000200007329e3 : mov edx, ebp ; mov rcx, r14 ; call 0x2000013ec33
0x00000200006c088a : mov edx, ebp ; mov rcx, r14 ; call rax
0x00000200004c9aa2 : mov edx, ebp ; mov rcx, r15 ; call 0x200000ee224
0x00000200006b8555 : mov edx, ebp ; mov rcx, r15 ; call r14
0x00000200005afea0 : mov edx, ebp ; mov rcx, rbx ; call 0x200001dd6f0
0x00000200006c0400 : mov edx, ebp ; mov rcx, rbx ; call rax
0x00000200004f77a1 : mov edx, ebp ; mov rcx, rdi ; call r12
0x00000200006b90fd : mov edx, ebp ; mov rcx, rdi ; mov rsi, rax ; call rbx
0x000002000046f95b : mov edx, ebp ; mov rcx, rsi ; call r14
0x0000020000512ef1 : mov edx, ebp ; ret 0xb9ff
0x0000020000494f60 : mov edx, ebx ; call 0x200000a23b9
0x0000020000497645 : mov edx, ebx ; call 0x200000b8095
0x00000200004970f5 : mov edx, ebx ; call 0x200000b8ce9
0x000002000060b45d : mov edx, ebx ; call 0x20000231ce5
0x00000200003b619e : mov edx, ebx ; call r10
0x0000020000203d82 : mov edx, ebx ; call rsi
0x000002000018c8ca : mov edx, ebx ; int1 ; dec dword ptr [rax - 0x7f] ; ret 0
0x0000020000610158 : mov edx, ebx ; lea ecx, dword ptr [rbx - 0x4f] ; call 0x20000231ce8
0x0000020000603d97 : mov edx, ebx ; lea ecx, dword ptr [rsi + 1] ; call 0x20000231ce8
0x000002000059070e : mov edx, ebx ; lea rcx, qword ptr [rbp - 0x28] ; call 0x200001bd485
0x000002000051554d : mov edx, ebx ; lea rcx, qword ptr [rbp - 0x40] ; call 0x200001392b5
0x000002000052d26e : mov edx, ebx ; lea rcx, qword ptr [rbx + 8] ; call 0x2000014f189
0x000002000044bf23 : mov edx, ebx ; lea rcx, qword ptr [rsi + 0x10] ; call 0x200000e8158
0x00000200000efece : mov edx, ebx ; lea rcx, qword ptr [rsp + 0x20] ; call 0x200000ec189
0x000002000060898d : mov edx, ebx ; mov dword ptr [rbp - 0x69], ebx ; call 0x20000231ce8
0x000002000066553c : mov edx, ebx ; mov eax, edx ; jmp 0x20000665522
0x0000020000605729 : mov edx, ebx ; mov ebp, ebx ; call 0x20000231ce7
0x0000020000605728 : mov edx, ebx ; mov ebp, ebx ; call 0x20000231ce8
0x00000200000d5216 : mov edx, ebx ; mov ecx, 1 ; call 0x200000d1509
0x000002000020f54c : mov edx, ebx ; mov ecx, ebp ; call 0x2000020b842
0x000002000060e8e7 : mov edx, ebx ; mov ecx, edi ; call 0x20000231ce7
0x000002000052b23f : mov edx, ebx ; mov rax, rdx ; ret
0x000002000042550c : mov edx, ebx ; mov rcx, r10 ; call 0x20000045874
0x0000020000465b4d : mov edx, ebx ; mov rcx, r10 ; call rax
0x00000200006b930f : mov edx, ebx ; mov rcx, r14 ; call r12
0x0000020000043e44 : mov edx, ebx ; mov rcx, r15 ; call rax
0x0000020000421805 : mov edx, ebx ; mov rcx, rbp ; call 0x200000450c4
0x00000200004152e7 : mov edx, ebx ; mov rcx, rdi ; call r10
0x00000200006c0487 : mov edx, ebx ; mov rcx, rdi ; call rax
0x0000020000042997 : mov edx, ebx ; mov rcx, rdi ; call rsi
0x000002000016e806 : mov edx, ebx ; mov rcx, rdi ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x0000020000460296 : mov edx, ebx ; mov rcx, rsi ; call 0x20000087108
0x00000200004756e7 : mov edx, ebx ; mov rcx, rsi ; call 0x2000009a2d8
0x000002000004887e : mov edx, ebx ; mov rcx, rsi ; call r9
0x00000200004b425f : mov edx, ebx ; mov rcx, rsi ; call rax
0x0000020000230c8c : mov edx, ebx ; pop rbx ; add rsp, 8 ; jmp r8
0x00000200004f7abf : mov edx, ebx ; ret
0x0000020000603583 : mov edx, ebx ; ret 0x83ff
0x00000200000d523b : mov edx, ebx ; xor ecx, ecx ; call 0x200000d1506
0x000002000063ef23 : mov edx, ebx ; xor ecx, ecx ; call r8
0x0000020000425487 : mov edx, ecx ; call 0x20000051689
0x00000200001445cb : mov edx, ecx ; encls ; mov rax, rbx ; pop rbx ; ret
0x00000200001445ab : mov edx, ecx ; encls ; pop rbx ; ret
0x00000200006bf1a9 : mov edx, ecx ; jne 0x200006bf1b6 ; xor eax, eax ; ret
0x000002000040bcc3 : mov edx, ecx ; mov eax, r10d ; ret
0x00000200005859a6 : mov edx, ecx ; mov ecx, r8d ; call 0x20000011c67
0x000002000040173f : mov edx, ecx ; mov rcx, qword ptr [rdi + 8] ; call rax
0x00000200004b3686 : mov edx, ecx ; mov rcx, r12 ; call 0x200000e24c8
0x000002000049567c : mov edx, ecx ; mov rcx, r13 ; call 0x200000b5808
0x0000020000115c82 : mov edx, ecx ; mov rcx, rdi ; call rbx
0x00000200001a3652 : mov edx, ecx ; shr rdx, 0x10 ; mov eax, edx ; jmp 0x200001a3679
0x00000200001a36aa : mov edx, ecx ; shr rdx, 0x20 ; mov rax, rdx ; jmp 0x200001a36d2
0x00000200001a35d0 : mov edx, ecx ; shr rdx, 8 ; mov eax, edx ; jmp 0x200001a35fb
0x00000200002014d7 : mov edx, edi ; call 0x200000478c6
0x000002000017b73a : mov edx, edi ; call 0x200000979d4
0x0000020000475a85 : mov edx, edi ; call 0x2000009a2d5
0x00000200004a252a : mov edx, edi ; call 0x200000c2d15
0x00000200004c9bbf : mov edx, edi ; call 0x200000ee111
0x00000200005ece3f : mov edx, edi ; call 0x2000013f9b0
0x000002000051da3a : mov edx, edi ; call 0x200001407e5
0x0000020000523b24 : mov edx, edi ; call 0x2000014f185
0x00000200005ccbf7 : mov edx, edi ; call 0x200003d8e9c
0x0000020000125a56 : mov edx, edi ; call 0x20000521d24
0x0000020000443bcb : mov edx, edi ; call qword ptr [rax]
0x00000200000f077c : mov edx, edi ; call rax
0x00000200006bc3ff : mov edx, edi ; call rdi
0x00000200000b8b9d : mov edx, edi ; jmp 0x200000b8b2c
0x000002000015eac3 : mov edx, edi ; jmp 0x2000015eae2
0x000002000059040f : mov edx, edi ; lea rcx, qword ptr [rbp - 0x28] ; call 0x200001bd485
0x0000020000525a35 : mov edx, edi ; lea rcx, qword ptr [rbp - 9] ; call r12
0x00000200002059d6 : mov edx, edi ; mov ecx, 0x200 ; call 0x20000231ce9
0x000002000060ea78 : mov edx, edi ; mov ecx, ebx ; call 0x20000231ce7
0x00000200005888f7 : mov edx, edi ; mov qword ptr [rsp + 0x28], rax ; call 0x200004d4b89
0x000002000060af8a : mov edx, edi ; mov r14d, edi ; call 0x20000231ce8
0x00000200004cc776 : mov edx, edi ; mov r8b, bl ; call 0x200000ef590
0x00000200005a1937 : mov edx, edi ; mov rcx, qword ptr [r15 - 8] ; call qword ptr [rax]
0x00000200006bf2c3 : mov edx, edi ; mov rcx, qword ptr [rsi + 8] ; call rax
0x000002000013d0c0 : mov edx, edi ; mov rcx, r11 ; call r8
0x0000020000134889 : mov edx, edi ; mov rcx, r12 ; call r14
0x00000200006b8e6b : mov edx, edi ; mov rcx, r12 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x00000200004c134a : mov edx, edi ; mov rcx, r13 ; call 0x200000e4de8
0x0000020000505096 : mov edx, edi ; mov rcx, r13 ; call 0x20000134778
0x00000200005be170 : mov edx, edi ; mov rcx, r13 ; call rax
0x00000200004c9b1d : mov edx, edi ; mov rcx, r14 ; call 0x200000ee1a0
0x00000200005d00fa : mov edx, edi ; mov rcx, r14 ; call rax
0x00000200006c07e0 : mov edx, edi ; mov rcx, r14 ; mov dword ptr [rsp + 0x20], ebp ; call rax
0x0000020000475eea : mov edx, edi ; mov rcx, r15 ; call 0x2000009a2d8
0x00000200005d0152 : mov edx, edi ; mov rcx, r15 ; call rax
0x000002000049932e : mov edx, edi ; mov rcx, rax ; call 0x200000ba3f8
0x0000020000525e7e : mov edx, edi ; mov rcx, rax ; call 0x2000014f188
0x00000200004794d6 : mov edx, edi ; mov rcx, rbp ; call r15
0x00000200001c9922 : mov edx, edi ; mov rcx, rbp ; call rax
0x000002000058fb96 : mov edx, edi ; mov rcx, rbx ; call 0x200001bd2c4
0x000002000064a203 : mov edx, edi ; mov rcx, rbx ; call 0x200001f649f
0x00000200005d21d4 : mov edx, edi ; mov rcx, rbx ; call 0x2000069e44f
0x000002000051e6f2 : mov edx, edi ; mov rcx, rbx ; call qword ptr [rax]
0x00000200001a9347 : mov edx, edi ; mov rcx, rbx ; call r10
0x0000020000467294 : mov edx, edi ; mov rcx, rbx ; call r14
0x00000200006c04f6 : mov edx, edi ; mov rcx, rbx ; call rax
0x000002000058f9ff : mov edx, edi ; mov rcx, rdi ; call 0x200001bd2c4
0x00000200005de13f : mov edx, edi ; mov rcx, rdi ; call 0x2000048a43f
0x00000200004756bd : mov edx, edi ; mov rcx, rsi ; call 0x2000009a4a8
0x00000200004756dc : mov edx, edi ; mov rcx, rsi ; call 0x2000009d698
0x00000200005d018d : mov edx, edi ; mov rcx, rsi ; call r10
0x00000200001348c9 : mov edx, edi ; mov rcx, rsi ; call r14
0x00000200006b8d09 : mov edx, edi ; mov rcx, rsi ; mov rbp, rax ; call rbx
0x000002000067da58 : mov edx, edi ; movzx ecx, bx ; call rax
0x0000020000407822 : mov edx, edx ; jmp r11
0x00000200006788bd : mov edx, edx ; mov rcx, r15 ; call r11
0x00000200001d1f0d : mov edx, edx ; mov rcx, rsi ; call qword ptr [rsi]
0x00000200005a9bd3 : mov edx, es ; jmp 0x200005a9bd7
0x000002000039bd2c : mov edx, esi ; call 0x20000067f60
0x000002000005b7bb : mov edx, esi ; call 0x200000979d4
0x00000200004c0d82 : mov edx, esi ; call 0x200000e28a9
0x0000020000517d76 : mov edx, esi ; call 0x20000143365
0x0000020000659e1a : mov edx, esi ; call 0x20000206034
0x000002000060ed4d : mov edx, esi ; call 0x20000231015
0x000002000060ab47 : mov edx, esi ; call 0x20000231ce5
0x000002000050274f : mov edx, esi ; call 0x200004ee97c
0x0000020000588d1a : mov edx, esi ; call 0x20000634fb0
0x00000200002114d9 : mov edx, esi ; call r10
0x00000200002215f0 : mov edx, esi ; call r11
0x000002000013484c : mov edx, esi ; call r14
0x000002000016f376 : mov edx, esi ; call rax
0x0000020000214462 : mov edx, esi ; cmovne rcx, r11 ; call rax
0x00000200003e1d83 : mov edx, esi ; in al, -1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000156480 : mov edx, esi ; jmp 0x2000007e0c7
0x00000200004c28e0 : mov edx, esi ; lea rcx, qword ptr [rbp - 0x20] ; call 0x200000e8b5d
0x00000200004b4442 : mov edx, esi ; mov ecx, ebx ; call rax
0x0000020000605519 : mov edx, esi ; mov qword ptr [rsp + 0x20], rax ; call 0x20000461759
0x00000200003e5549 : mov edx, esi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005d016b : mov edx, esi ; mov r8d, dword ptr [rbx] ; mov rcx, rbp ; call rax
0x0000020000405b3d : mov edx, esi ; mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200001dce81 : mov edx, esi ; mov rcx, r12 ; call 0x200006290cb
0x000002000004053a : mov edx, esi ; mov rcx, r12 ; call r15
0x00000200004c9fda : mov edx, esi ; mov rcx, r13 ; call rax
0x00000200004cc239 : mov edx, esi ; mov rcx, r14 ; call 0x200000f7d50
0x00000200004fce15 : mov edx, esi ; mov rcx, r14 ; call r9
0x0000020000475ff0 : mov edx, esi ; mov rcx, r15 ; call 0x2000009a2d8
0x00000200004beeb4 : mov edx, esi ; mov rcx, r15 ; call 0x200000e8158
0x00000200004c363e : mov edx, esi ; mov rcx, r15 ; call 0x200000e9fdc
0x00000200004c358d : mov edx, esi ; mov rcx, r15 ; call 0x200000ea7fc
0x000002000052dc55 : mov edx, esi ; mov rcx, r15 ; call 0x2000014f188
0x00000200005a4c0f : mov edx, esi ; mov rcx, r15 ; call 0x200001cb464
0x0000020000123dcd : mov edx, esi ; mov rcx, r15 ; call r14
0x000002000046546d : mov edx, esi ; mov rcx, r15 ; call rax
0x00000200005be41a : mov edx, esi ; mov rcx, r9 ; call rax
0x00000200005281c6 : mov edx, esi ; mov rcx, rax ; call 0x2000014f188
0x00000200005ae87f : mov edx, esi ; mov rcx, rax ; call 0x2000064ab0b
0x00000200006c5f90 : mov edx, esi ; mov rcx, rax ; call r15
0x00000200004295c5 : mov edx, esi ; mov rcx, rbp ; call 0x20000059334
0x00000200004091cb : mov edx, esi ; mov rcx, rbp ; call rax
0x000002000041d2ba : mov edx, esi ; mov rcx, rbx ; call 0x20000042aa8
0x00000200004973da : mov edx, esi ; mov rcx, rbx ; call 0x200000b8098
0x000002000041d29a : mov edx, esi ; mov rcx, rbx ; call r11
0x000002000013491e : mov edx, esi ; mov rcx, rbx ; call r14
0x000002000059c7ab : mov edx, esi ; mov rcx, rbx ; call rax
0x000002000042399f : mov edx, esi ; mov rcx, rdi ; call 0x200000459c8
0x00000200004238a5 : mov edx, esi ; mov rcx, rdi ; call 0x20000053854
0x000002000049801d : mov edx, esi ; mov rcx, rdi ; call 0x200000ba850
0x00000200004c0d2c : mov edx, esi ; mov rcx, rdi ; call 0x200000e2650
0x00000200004c09f7 : mov edx, esi ; mov rcx, rdi ; call 0x200000e285c
0x00000200004c0d72 : mov edx, esi ; mov rcx, rdi ; call 0x200000e28ac
0x00000200004c00fc : mov edx, esi ; mov rcx, rdi ; call 0x200000e8158
0x000002000013494e : mov edx, esi ; mov rcx, rdi ; call r14
0x0000020000633ff4 : mov edx, esi ; mov rcx, rdi ; call rax
0x0000020000171626 : mov edx, esi ; mov rcx, rdi ; call rbx
0x0000020000694749 : mov edx, esi ; mov rcx, rsi ; call rax
0x0000020000512cf7 : mov edx, esp ; call 0x200001407e5
0x0000020000128c49 : mov edx, esp ; call 0x20000231019
0x000002000013323b : mov edx, esp ; call rax
0x000002000015d66b : mov edx, esp ; lea rcx, qword ptr [rbp + 0x10] ; call rbx
0x000002000058a3ca : mov edx, esp ; lea rcx, qword ptr [rbp - 0x10] ; call 0x20000466630
0x00000200003b6318 : mov edx, esp ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, rbx ; call rax
0x0000020000678e67 : mov edx, esp ; mov qword ptr [rsp + 0x20], r14 ; call r10
0x0000020000694dad : mov edx, esp ; mov rcx, qword ptr [rbp - 0x71] ; call rax
0x00000200000e4686 : mov edx, esp ; mov rcx, r13 ; call rax
0x0000020000604438 : mov edx, esp ; mov rcx, r14 ; call rax
0x0000020000693b95 : mov edx, esp ; mov rcx, r14 ; call rsi
0x00000200004532ac : mov edx, esp ; mov rcx, r15 ; call rax
0x00000200004e14e9 : mov edx, esp ; mov rcx, r15 ; call rdi
0x00000200004c3220 : mov edx, esp ; mov rcx, rbx ; call 0x200000e9468
0x0000020000399469 : mov edx, esp ; mov rcx, rbx ; call r8
0x00000200004c37ee : mov edx, esp ; mov rcx, rsi ; call 0x200000eb3c0
0x00000200004a4e71 : mov edx, esp ; ret 0x41ff
0x00000200004b425e : mov edx, r11d ; mov rcx, rsi ; call rax
0x0000020000512cf6 : mov edx, r12d ; call 0x200001407e6
0x000002000015d66a : mov edx, r12d ; lea rcx, qword ptr [rbp + 0x10] ; call rbx
0x00000200004c321f : mov edx, r12d ; mov rcx, rbx ; call 0x200000e9469
0x000002000060ed4c : mov edx, r14d ; call 0x20000231016
0x00000200005a9252 : mov edx, r14d ; call rax
0x000002000059c7aa : mov edx, r14d ; mov rcx, rbx ; call rax
0x00000200004c09f6 : mov edx, r14d ; mov rcx, rdi ; call 0x200000e285d
0x00000200000f077b : mov edx, r15d ; call rax
0x00000200006bc3fe : mov edx, r15d ; call rdi
0x000002000060ea77 : mov edx, r15d ; mov ecx, ebx ; call 0x20000231ce8
0x00000200004cc775 : mov edx, r15d ; mov r8b, bl ; call 0x200000ef591
0x00000200005be16f : mov edx, r15d ; mov rcx, r13 ; call rax
0x00000200005de13e : mov edx, r15d ; mov rcx, rdi ; call 0x2000048a440
0x000002000049a39f : mov edx, r8d ; jmp 0x2000049a3d3
0x000002000016239f : mov es, word ptr [rax] ; adc byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b41
0x000002000052eb15 : mov es, word ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000418d0d : mov es, word ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe775
0x00000200002268cd : mov es, word ptr [rbp + rax - 0x74b70000] ; ret
0x00000200001fbe4b : mov es, word ptr [rbp] ; add rsp, 0x28 ; ret
0x00000200006cded2 : mov es, word ptr [rbx - 1] ; dec dword ptr [rax - 0x75] ; ret
0x00000200004af1f9 : mov es, word ptr [rcx] ; add edx, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret 0xc933
0x00000200006b5314 : mov es, word ptr [rdx] ; add byte ptr [rcx - 0x75], al ; ret 0x8946
0x00000200006b5313 : mov es, word ptr gs:[rdx] ; add byte ptr [rcx - 0x75], al ; ret 0x8946
0x00000200006d93b3 : mov esi, 0x1d8948ff ; mov ah, 0x97 ; ret 0xe8ff
0x00000200003e37d3 : mov esi, 0x20f083c1 ; ret
0x000002000015cf92 : mov esi, 0x33487e35 ; ret 0xf48
0x000002000073bf6a : mov esi, 0x350 ; mov rax, rdx ; jmp 0x2000073bf7d
0x0000020000521daa : mov esi, 0x37e883c0 ; jmp 0x20000521d79
0x00000200003f5389 : mov esi, 0x3b410a04 ; ret
0x0000020000443338 : mov esi, 0x3b48fff3 ; ret 0x5577
0x000002000052c1f4 : mov esi, 0x48000000 ; mov ecx, ebx ; call rax
0x000002000013247c : mov esi, 0x48000722 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000503d6f : mov esi, 0x48008bff ; add esp, 0x28 ; ret
0x00000200004eb3db : mov esi, 0x48c033ff ; add esp, 0x70 ; pop rbx ; ret
0x00000200005f5e2e : mov esi, 0x48ffacec ; add esp, 0x38 ; ret
0x00000200006358be : mov esi, 0x48ffafd8 ; add esp, 0x50 ; pop rbx ; ret
0x00000200004ef34a : mov esi, 0x48ffe0ae ; add esp, 0x28 ; ret
0x000002000001d3cf : mov esi, 0x4c8b49c1 ; ret
0x00000200006da505 : mov esi, 0x6b0d8bff ; ret
0x000002000046cf1b : mov esi, 0x74c084ff ; ret
0x0000020000133489 : mov esi, 0x75c83bc0 ; or dword ptr [rax - 1], ecx ; ret 0x3845
0x00000200001e62ff : mov esi, 0x79890802 ; ret
0x00000200004397ce : mov esi, 0x8affc893 ; ret
0x0000020000086a11 : mov esi, 0x8b000000 ; ret 0xe8c1
0x000002000076d596 : mov esi, 0x8b00010a ; ret
0x00000200003c71e7 : mov esi, 0x8b480019 ; ret 0xc148
0x000002000056bbfe : mov esi, 0x8bffb567 ; ret
0x00000200004b94fe : mov esi, 0x8bffc08e ; ret
0x0000020000517dae : mov esi, 0x8bffdeae ; salc ; call 0x20000143369
0x000002000065eee1 : mov esi, 0x8d000000 ; jmp qword ptr [rbx]
0x000002000014ab0e : mov esi, 0x90ffffff ; add rsp, 0x28 ; ret
0x00000200006da4cf : mov esi, 0x9d0d8bff ; ret
0x0000020000737a6d : mov esi, 0xb8797400 ; mov rax, rdx ; jmp 0x20000737a82
0x00000200000a34df : mov esi, 0xbe0f080c ; ret 0xc82b
0x00000200000eb62d : mov esi, 0xc381 ; add byte ptr [rbx], bh ; ret 0x767d
0x000002000041cc41 : mov esi, 0xc48148ff ; mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200006da4dc : mov esi, 0xc72583ff ; ret
0x00000200004f7abc : mov esi, 0xda89e8c8 ; ret
0x00000200004f7a96 : mov esi, 0xdaafe8c9 ; ret
0x00000200004b6145 : mov esi, 0xe8cc8b49 ; ret
0x0000020000509608 : mov esi, 0xe8fffffd ; outsd dx, dword ptr [rsi] ; insd dword ptr [rdi], dx ; ret
0x0000020000141975 : mov esi, 0xe9000000 ; add al, ch ; add byte ptr [rax], al ; ret
0x000002000019cf7e : mov esi, 0xe90013ef ; ret
0x00000200005812ce : mov esi, 0xe9ffd430 ; call qword ptr [rax]
0x000002000005ecaa : mov esi, 0xeb000029 ; ret 0x8948
0x0000020000420d7d : mov esi, 0xebe8ffea ; ret 0x41ff
0x0000020000584d49 : mov esi, 0xf01ffda ; xchg eax, esp ; ret 0xd202
0x0000020000685eee : mov esi, 0xf6000000 ; ret 0x7401
0x0000020000181639 : mov esi, 0xf6000001 ; ret
0x0000020000173f7e : mov esi, 0xf641fffa ; ret 0x7402
0x00000200005219b6 : mov esi, 0xfc085ff ; mov esi, edx ; ret 0xa
0x00000200006da47a : mov esi, 0xfe0589ff ; ret
0x000002000052f0ee : mov esi, 1 ; call 0x2000014f4c8
0x000002000018d3c2 : mov esi, dr0 ; int1 ; inc dword ptr [rbp - 0x75] ; ret
0x0000020000046759 : mov esi, dword ptr [rax + 0x18] ; call 0x20000046379
0x00000200000bd984 : mov esi, dword ptr [rax + r8*8 + 8] ; shr esi, 2 ; jmp 0x200000bd959
0x00000200000bd985 : mov esi, dword ptr [rax + rax*8 + 8] ; shr esi, 2 ; jmp 0x200000bd958
0x00000200006088db : mov esi, dword ptr [rax + rcx] ; xor edx, edx ; call 0x20000231018
0x0000020000222afb : mov esi, dword ptr [rbp + 0x38] ; mov rax, rdx ; jmp 0x20000222b0a
0x0000020000224da5 : mov esi, dword ptr [rbp + 0x38] ; mov rax, rdx ; jmp 0x20000224db4
0x0000020000227e6b : mov esi, dword ptr [rbp + 0x38] ; mov rax, rdx ; jmp 0x20000227e7a
0x00000200000ff34a : mov esi, dword ptr [rbp + 0x58] ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x000002000022a59c : mov esi, dword ptr [rbp + 0x68] ; mov rax, rdx ; jmp 0x2000022a5ab
0x00000200001c67bd : mov esi, dword ptr [rbp - 0x30] ; jmp 0x200001c67f5
0x0000020000735f73 : mov esi, dword ptr [rbp - 0x80] ; mov rax, rdx ; jmp 0x20000735f82
0x00000200004ec990 : mov esi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x000002000002e292 : mov esi, dword ptr [rbx + 0x18] ; mov rsp, r11 ; pop rdi ; ret
0x00000200006117aa : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x0000020000456d0e : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x000002000010c416 : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x000002000000e58d : mov esi, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x0000020000472400 : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x00000200003f69d5 : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x000002000002076b : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x00000200000027ed : mov esi, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rdi ; ret
0x000002000060b3be : mov esi, dword ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; iretd ; call 0x20000231019
0x0000020000416175 : mov esi, dword ptr [rcx + 4] ; mov r15d, dword ptr [rcx + 0x18] ; call 0x200000c23c9
0x00000200004270cf : mov esi, dword ptr [rsi] ; jmp 0x20000427068
0x00000200006b49cd : mov esi, dword ptr [rsp + 0x10] ; mov qword ptr [rdx], r11 ; ret
0x000002000000af57 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x0000020000038512 : mov esi, dword ptr [rsp + 0x10] ; ret
0x000002000003db73 : mov esi, dword ptr [rsp + 0x18] ; mov rdi, qword ptr [rsp + 0x20] ; ret
0x00000200000032ef : mov esi, dword ptr [rsp + 0x18] ; ret
0x00000200006441e6 : mov esi, dword ptr [rsp + 0x20] ; and eax, 0x80000005 ; ret
0x0000020000063113 : mov esi, dword ptr [rsp + 0x20] ; pop rdi ; ret
0x00000200003ef71a : mov esi, dword ptr [rsp + 0x20] ; ret
0x00000200004bb538 : mov esi, dword ptr [rsp + 0x28] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000050dba2 : mov esi, dword ptr [rsp + 0x28] ; jmp 0x2000050dbce
0x000002000061a872 : mov esi, dword ptr [rsp + 0x28] ; pop rdi ; ret
0x00000200001fb0ff : mov esi, dword ptr [rsp + 0x30] ; add rsp, 0x10 ; pop rdi ; ret
0x000002000004ecc9 : mov esi, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001be016 : mov esi, dword ptr [rsp + 0x30] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000c1ce4 : mov esi, dword ptr [rsp + 0x30] ; add rsp, 0x48 ; ret
0x000002000007186d : mov esi, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000002747 : mov esi, dword ptr [rsp + 0x38] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000569aa : mov esi, dword ptr [rsp + 0x38] ; add rsp, 0x60 ; pop rsi ; ret
0x000002000000258f : mov esi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000b814d : mov esi, dword ptr [rsp + 0x40] ; add rsp, 0x20 ; pop rsi ; ret
0x00000200001ab753 : mov esi, dword ptr [rsp + 0x40] ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000009ccd : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x20 ; pop rdi ; ret
0x000002000039a544 : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000012f4a : mov esi, dword ptr [rsp + 0x48] ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000008215 : mov esi, dword ptr [rsp + 0x50] ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000215df9 : mov esi, dword ptr [rsp + 0x50] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200004edeeb : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000002b3a : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x30 ; pop rdi ; ret
0x000002000000c1e4 : mov esi, dword ptr [rsp + 0x58] ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000008dc0 : mov esi, dword ptr [rsp + 0x60] ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001075b7 : mov esi, dword ptr [rsp + 0x68] ; add rsp, 0x40 ; pop rdi ; ret
0x000002000001c1a2 : mov esi, dword ptr [rsp + 0x68] ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000016f8f : mov esi, dword ptr [rsp + 0x70] ; add rsp, 0x50 ; pop rdi ; ret
0x00000200003c83f4 : mov esi, dword ptr [rsp + 0x70] ; add rsp, 0x60 ; pop rdi ; ret
0x00000200000f507c : mov esi, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000039b4f : mov esi, dword ptr [rsp + 0x78] ; add rsp, 0x50 ; pop rdi ; ret
0x000002000013a4ff : mov esi, dword ptr [rsp + 0x78] ; add rsp, 0x60 ; pop rdi ; ret
0x00000200004756a3 : mov esi, eax ; call 0x2000009b445
0x00000200000136c2 : mov esi, eax ; call 0x200003bc591
0x0000020000620d16 : mov esi, eax ; call 0x2000045cf94
0x0000020000661b37 : mov esi, eax ; call 0x200004ec6a9
0x00000200006c95d6 : mov esi, eax ; call qword ptr [rdi]
0x00000200006b905f : mov esi, eax ; call rbx
0x00000200001c7013 : mov esi, eax ; dec dword ptr [rax - 0x75] ; retf ; call rdi
0x0000020000039920 : mov esi, eax ; jmp 0x200000398ea
0x000002000060a84e : mov esi, eax ; lea ecx, dword ptr [rax - 3] ; call 0x20000231ce8
0x000002000014ada5 : mov esi, eax ; mov r15, rax ; jmp rsi
0x00000200005219cb : mov esi, eax ; ret 0xa
0x000002000004fcb0 : mov esi, ebp ; jmp 0x2000004fc79
0x00000200000fe2dc : mov esi, ebp ; jmp 0x200000fe2a6
0x00000200004803e1 : mov esi, ebp ; ret
0x00000200001d7318 : mov esi, ebx ; mov r8d, r10d ; jmp 0x200001d732d
0x00000200001e1748 : mov esi, ecx ; jmp 0x200001e17b0
0x00000200005283d9 : mov esi, ecx ; lea r8d, dword ptr [rdx + 0x50] ; call 0x2000014f4c9
0x000002000042ac35 : mov esi, ecx ; xor esi, esi ; call 0x2000004e19f
0x000002000060af8d : mov esi, edi ; call 0x20000231ce5
0x000002000010aeaa : mov esi, edx ; call qword ptr [rbx]
0x00000200004ccf60 : mov esi, edx ; mov ebp, ecx ; xor ebx, ebx ; call 0x200000ef4b5
0x000002000013b948 : mov esi, edx ; mov r8d, edx ; jmp 0x2000013b970
0x00000200001c9c9c : mov esi, edx ; mov rbx, rcx ; call qword ptr [rax]
0x0000020000423d4b : mov esi, edx ; mov rdi, rcx ; call 0x200000459c8
0x00000200005219bb : mov esi, edx ; ret 0xa
0x000002000060ef66 : mov esi, esi ; lea rdx, qword ptr [r14 + r14] ; call 0x20000231ce9
0x000002000072b3f9 : mov esi, esp ; mov rax, rdx ; jmp 0x2000072b409
0x000002000072b3f8 : mov esi, r12d ; mov rax, rdx ; jmp 0x2000072b40a
0x000002000004fcaf : mov esi, r13d ; jmp 0x2000004fc7a
0x000002000013124f : mov esp, 0x10000006 ; ret
0x000002000006d7f5 : mov esp, 0x11024 ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x00000200004b6434 : mov esp, 0x17824 ; add byte ptr [rax - 0x7d], cl ; ret 0x4520
0x00000200000d53a6 : mov esp, 0x1c824 ; add byte ptr [rax - 0x75], cl ; ret 0x894c
0x0000020000091f99 : mov esp, 0x1d024 ; add dh, dh ; ret 0x7502
0x00000200006b7cc1 : mov esp, 0x3000000 ; ret 0x8445
0x00000200000e4b54 : mov esp, 0x3b000006 ; ret
0x000002000076922c : mov esp, 0x3ff9cc9 ; ret
0x00000200000437fe : mov esp, 0x41028941 ; call rdx
0x000002000006b2a2 : mov esp, 0x480006a9 ; add ecx, edx ; jmp rcx
0x00000200000426c0 : mov esp, 0x48000f0a ; add esp, 0x50 ; pop rbx ; ret
0x00000200005dd1c0 : mov esp, 0x48ffb55f ; add esp, 0x50 ; pop rbx ; ret
0x0000020000671a50 : mov esp, 0x48ffbbf5 ; add esp, 0x28 ; ret
0x00000200003b29c0 : mov esp, 0x48ffd807 ; add esp, 0x60 ; pop rbx ; ret
0x000002000020a4a0 : mov esp, 0x48ffedef ; add esp, 0x20 ; pop rbx ; ret
0x00000200001cfcc0 : mov esp, 0x48fff634 ; add esp, 0x68 ; ret
0x00000200004594a6 : mov esp, 0x490045a1 ; add eax, eax ; jmp rax
0x00000200005d4ecf : mov esp, 0x6301c ; add bh, bh ; ret
0x0000020000002b90 : mov esp, 0x8024 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000062d69b : mov esp, 0x8024 ; add dh, dh ; ret 0x7410
0x00000200004ba80b : mov esp, 0x8024 ; add dh, dh ; ret 0x7510
0x000002000012028e : mov esp, 0x83000000 ; call 0x1ffc31377a2
0x00000200006c258c : mov esp, 0x8348ffff ; ret
0x00000200006340b5 : mov esp, 0x8418945 ; add rsp, 0x28 ; ret
0x00000200000f7380 : mov esp, 0x84fff919 ; sal byte ptr [rbp + 8], 0x8a ; ret
0x0000020000061160 : mov esp, 0x84ffffc8 ; ror byte ptr [rdi], 0x84 ; ret 1
0x00000200003e768d : mov esp, 0x8548ffc8 ; sal byte ptr [rbp + 0x1a], 0x8b ; ret
0x000002000043a35f : mov esp, 0x8824 ; add cl, ch ; ret
0x0000020000752a60 : mov esp, 0x8afffc55 ; ret
0x000002000044a5e2 : mov esp, 0x8b000000 ; ret
0x00000200003f7914 : mov esp, 0x8b000001 ; adc esi, edi ; ret 0
0x00000200001fe850 : mov esp, 0x8b000327 ; ret
0x00000200004f2928 : mov esp, 0x8b00096c ; ret
0x00000200004ca710 : mov esp, 0x8b000fcb ; ret
0x000002000066b88b : mov esp, 0x8b34ebff ; ret
0x0000020000669372 : mov esp, 0x8b3e89ff ; ret
0x000002000059dd8f : mov esp, 0x8b45ffe9 ; ret 0x1ba
0x0000020000021c9a : mov esp, 0x8b480013 ; ret
0x00000200003aaf63 : mov esp, 0x8b4cffff ; ret
0x0000020000757c50 : mov esp, 0x8bffad93 ; ret
0x000002000050a6c0 : mov esp, 0x8bffc35c ; ret
0x00000200003bcc50 : mov esp, 0x8bffe743 ; ret
0x00000200003b2450 : mov esp, 0x8bffe7eb ; ret
0x000002000058d8d0 : mov esp, 0x8bfff2cb ; ret
0x00000200006b8c54 : mov esp, 0x8bffffef ; ret
0x0000020000545fbd : mov esp, 0x9066ccff ; ret
0x00000200004b60be : mov esp, 0x9c24 ; add dh, dh ; ret
0x00000200005ba302 : mov esp, 0xa024 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000897e0 : mov esp, 0xa024 ; add byte ptr [rcx - 0x75], al ; ret 0x8b4c
0x00000200000b8433 : mov esp, 0xa024 ; add dh, dh ; ret
0x000002000008783f : mov esp, 0xb70f45d1 ; ror dword ptr [rdi], -0x4a ; ret 0xf48
0x000002000000e487 : mov esp, 0xb824 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000e8185 : mov esp, 0xb824 ; add dh, dh ; ret
0x0000020000506d02 : mov esp, 0xc0000006 ; call 0x1ffc3519118
0x000002000045fd73 : mov esp, 0xc024 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x000002000068bbdb : mov esp, 0xc08548ff ; jne 0x2000068bb9b ; mov al, 1 ; ret
0x0000020000173e4b : mov esp, 0xc5e8fffa ; ret 0xfffb
0x000002000049a674 : mov esp, 0xc88b48ff ; call 0x200000c23c8
0x000002000049a693 : mov esp, 0xcc8b49ff ; call 0x200000c1e28
0x0000020000017938 : mov esp, 0xd824 ; add byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x00000200003abec8 : mov esp, 0xe8000008 ; ret
0x00000200006705b0 : mov esp, 0xe8000894 ; ret
0x000002000066fbb0 : mov esp, 0xe800089e ; ret
0x0000020000437833 : mov esp, 0xe8cb8b48 ; add al, 0x98 ; ret
0x00000200001620e7 : mov esp, 0xe9ffecd2 ; call rcx
0x000002000051e050 : mov esp, 0xebffd12f ; stosb byte ptr [rdi], al ; call 0x20000140389
0x0000020000131258 : mov esp, 0xef000006 ; ret
0x00000200000d5ec3 : mov esp, 0xf6000000 ; ret 0xf01
0x00000200000c6a43 : mov esp, 0xf6fffffd ; ret 0x75f0
0x0000020000643c90 : mov esp, 0xff000000 ; ret
0x00000200004c8ccb : mov esp, dword ptr [rax + 0x1e4] ; call rdi
0x000002000047fecc : mov esp, dword ptr [rax] ; or eax, dword ptr [rax] ; add al, ch ; mov bh, dl ; ret
0x000002000053a213 : mov esp, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000763da6 : mov esp, dword ptr [rbx + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x000002000040c803 : mov esp, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x000002000039aa86 : mov esp, dword ptr [rbx + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x000002000013ff79 : mov esp, dword ptr [rcx + 0x10] ; jmp rdx
0x000002000014e34e : mov esp, dword ptr [rsp + 0x100] ; sti ; ret
0x00000200004217e8 : mov esp, dword ptr [rsp] ; mov rcx, rbp ; call 0x200000456e9
0x000002000066aa1e : mov esp, eax ; call 0x2000045386d
0x000002000076e7d8 : mov esp, ebx ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000076ec4a : mov esp, ebx ; pop r12 ; ret
0x00000200005337ac : mov esp, ebx ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000412bc3 : mov esp, ebx ; pop r14 ; pop r12 ; pop rbp ; ret
0x00000200001c5d8f : mov esp, ebx ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000125851 : mov esp, ebx ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000007bd66 : mov esp, ebx ; pop r14 ; pop r13 ; pop r12 ; ret
0x000002000005fa6a : mov esp, ebx ; pop r14 ; pop r13 ; pop rbp ; ret
0x0000020000007aa1 : mov esp, ebx ; pop r14 ; pop r13 ; pop rdi ; ret
0x000002000001a25a : mov esp, ebx ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000001edec : mov esp, ebx ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000026fb : mov esp, ebx ; pop r14 ; ret
0x000002000051cd0b : mov esp, ebx ; pop r15 ; pop r12 ; pop rbp ; ret
0x00000200004694ca : mov esp, ebx ; pop r15 ; pop r13 ; pop rbp ; ret
0x000002000001e51a : mov esp, ebx ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000003b926 : mov esp, ebx ; pop r15 ; pop r14 ; pop r13 ; ret
0x0000020000002e62 : mov esp, ebx ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200001c58a1 : mov esp, ebx ; pop r15 ; pop r14 ; pop rcx ; ret
0x0000020000128ae3 : mov esp, ebx ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000002519 : mov esp, ebx ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200004039c5 : mov esp, ebx ; pop r15 ; pop r14 ; pop rsi ; ret
0x0000020000213044 : mov esp, ebx ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000003d59f : mov esp, ebx ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200001bc57b : mov esp, ebx ; pop r15 ; ret
0x0000020000008b8e : mov esp, ebx ; pop rbp ; ret
0x00000200000027f1 : mov esp, ebx ; pop rdi ; ret
0x00000200004d8fcf : mov esp, ebx ; pop rsi ; ret
0x0000020000419333 : mov esp, ebx ; ret
0x0000020000521656 : mov esp, ecx ; call 0x2000014f4c5
0x0000020000205aca : mov esp, ecx ; call 0x20000231ce4
0x000002000049aeee : mov esp, ecx ; xor r15b, r15b ; call 0x200000c3088
0x000002000058e14d : mov esp, esi ; ret 0x48ff
0x00000200000147fe : mov fs, ebx ; or al, byte ptr [rax] ; shl edx, 9 ; or eax, edx ; jmp 0x200000147ff
0x0000020000404a18 : mov fs, esp ; add dword ptr [rax], eax ; add bh, dh ; ret 0
0x0000020000498efe : mov fs, word ptr [rax + 7] ; add byte ptr [rax], al ; call 0x200000c1b38
0x00000200004803db : mov fs, word ptr [rax] ; or eax, dword ptr [rax] ; add al, ch ; mov esi, ebp ; ret
0x00000200003fee93 : mov fs, word ptr [rax] ; or eax, dword ptr [rax] ; add al, ch ; ret
0x00000200006b4afa : mov fs, word ptr [rbx + 0xd8b0000] ; pushfq ; pushfq ; ret 0xe8ff
0x00000200000f0776 : mov gs, word ptr [rax + 0x41000000] ; mov edx, edi ; call rax
0x00000200004afc94 : mov gs, word ptr [rax] ; add dword ptr [rax], eax ; add al, ch ; mov dl, 0x84 ; ret
0x00000200000c256d : mov gs, word ptr [rbx + rax*2 + 9] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000048faae : mov gs, word ptr [rdx] ; ret
0x000002000052b0e7 : mov qword ptr [r10 + 0x38], r8 ; mov byte ptr [r10 + 0x30], dl ; ret
0x00000200004eb318 : mov qword ptr [r10 + 8], rdx ; ret
0x0000020000040d67 : mov qword ptr [r10], r11 ; ret
0x000002000002eb19 : mov qword ptr [r10], r9 ; ret
0x00000200004f8a88 : mov qword ptr [r10], r9 ; xor eax, eax ; ret
0x000002000001779b : mov qword ptr [r10], rax ; mov eax, ecx ; ret
0x0000020000022c30 : mov qword ptr [r10], rax ; ret
0x00000200000078d3 : mov qword ptr [r10], rcx ; add rsp, 0x28 ; ret
0x00000200003f7141 : mov qword ptr [r10], rdx ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000b4073 : mov qword ptr [r11 + 0x18], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000007bb0f : mov qword ptr [r11 + 8], rax ; mov qword ptr [rcx + rdx*8 + 0x10], r11 ; ret
0x0000020000111474 : mov qword ptr [r11 - 0x18], rax ; call r10
0x0000020000694f1b : mov qword ptr [r11 - 0x18], rdi ; mov qword ptr [r11 - 0x48], rax ; call rbx
0x00000200001e75ab : mov qword ptr [r11 - 0x20], rbx ; mov dword ptr [rsp + 0x40], ebx ; call rax
0x00000200003c07b0 : mov qword ptr [r11 - 0x38], rax ; call 0x200004aca86
0x0000020000493891 : mov qword ptr [r11 - 0x40], r15 ; call 0x200000b9057
0x0000020000694f1f : mov qword ptr [r11 - 0x48], rax ; call rbx
0x0000020000419f00 : mov qword ptr [r11 - 0x48], rax ; lea r8d, dword ptr [r9 - 1] ; call rbx
0x00000200004f129b : mov qword ptr [r11 - 0x48], rax ; lea r8d, dword ptr [r9 - 2] ; call qword ptr [rbx]
0x0000020000694e84 : mov qword ptr [r11 - 0x48], rax ; lea r8d, dword ptr [r9 - 2] ; call rbx
0x000002000008713f : mov qword ptr [r11], r8 ; mov rbx, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x00000200001d2fc3 : mov qword ptr [r11], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021cef1 : mov qword ptr [r11], rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003a2163 : mov qword ptr [r11], rcx ; ret
0x00000200001a76f5 : mov qword ptr [r11], rdx ; add rsp, 0x28 ; ret
0x00000200005a52be : mov qword ptr [r12], rbx ; call 0x200001d146f
0x0000020000524a92 : mov qword ptr [r13 + rcx*4 + 0x42], -0x55dc17b8 ; ret 0x45ff
0x000002000017eb55 : mov qword ptr [r13 + rcx*4 + 0x58], 0x450f4101 ; ret
0x000002000056cfee : mov qword ptr [r14 + 8], r12 ; call 0x2000007b794
0x00000200006cb862 : mov qword ptr [r14], r9 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000159582 : mov qword ptr [r8 + 0x28], rax ; ret
0x000002000013eaa1 : mov qword ptr [r8 + 0x608], rdx ; ret
0x00000200003a685c : mov qword ptr [r8 + 8], r10 ; ret
0x000002000062faf6 : mov qword ptr [r8 + 8], rax ; cmp dword ptr [r9], r11d ; ja 0x2000062faba ; ret
0x00000200000faaa6 : mov qword ptr [r8 + 8], rax ; mov eax, 1 ; ret
0x0000020000086c6d : mov qword ptr [r8 + 8], rcx ; ret
0x00000200001bbce3 : mov qword ptr [r8 + 8], rdx ; ret
0x00000200000defea : mov qword ptr [r8 + rdx*8 + 8], rax ; ret
0x000002000001a5e9 : mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x2000001a5e2
0x0000020000546114 : mov qword ptr [r8], 1 ; ret
0x0000020000123ee6 : mov qword ptr [r8], r10 ; ret
0x00000200001a779f : mov qword ptr [r8], r11 ; ret
0x0000020000123edb : mov qword ptr [r8], r9 ; ret
0x000002000068eb25 : mov qword ptr [r8], r9 ; xor eax, eax ; ret
0x00000200005cf5a0 : mov qword ptr [r8], rax ; mov al, 1 ; ret
0x00000200006c1cc1 : mov qword ptr [r8], rax ; mov eax, 1 ; ret
0x0000020000462a00 : mov qword ptr [r8], rax ; mov eax, r9d ; ret
0x000002000003f467 : mov qword ptr [r8], rax ; ret
0x0000020000017651 : mov qword ptr [r8], rax ; xor eax, eax ; ret
0x00000200000eb50d : mov qword ptr [r8], rcx ; mov al, r9b ; ret
0x00000200004644d6 : mov qword ptr [r8], rcx ; mov eax, r9d ; ret
0x00000200000529c8 : mov qword ptr [r8], rcx ; ret
0x000002000001e69b : mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x00000200001c2ad4 : mov qword ptr [r8], rdi ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000040572 : mov qword ptr [r8], rdx ; ret
0x000002000001beec : mov qword ptr [r8], rdx ; test r9d, r9d ; setne al ; ret
0x0000020000016941 : mov qword ptr [r9 + 0x10], r11 ; add rsp, 0x28 ; ret
0x00000200000d3027 : mov qword ptr [r9 + 0x10], rdi ; pop rdi ; ret
0x00000200001499c6 : mov qword ptr [r9 + 0x18], rax ; mov eax, 2 ; ret
0x00000200000dbbee : mov qword ptr [r9 + 0x18], rcx ; ret
0x00000200006b5a5c : mov qword ptr [r9 + 0x20], rcx ; ret
0x0000020000211b13 : mov qword ptr [r9 + 0x48], rcx ; mov al, 1 ; ret
0x0000020000211afd : mov qword ptr [r9 + 0x48], rcx ; xor al, al ; ret
0x0000020000169186 : mov qword ptr [r9 + 0x48], rdx ; ret
0x00000200000596fc : mov qword ptr [r9 + 0x618], rax ; ret
0x00000200001668f4 : mov qword ptr [r9 + 0x70], rax ; ret
0x0000020000166959 : mov qword ptr [r9 + 0x80], rax ; ret
0x00000200006340a2 : mov qword ptr [r9 + 8], r8 ; add rsp, 0x28 ; ret
0x0000020000062fe2 : mov qword ptr [r9 + 8], rax ; ret
0x00000200001a8e47 : mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x00000200004c638e : mov qword ptr [r9], r10 ; ret
0x00000200001a8e3c : mov qword ptr [r9], r10 ; xor al, al ; ret
0x00000200003b39d5 : mov qword ptr [r9], r8 ; mov eax, 1 ; ret
0x0000020000037442 : mov qword ptr [r9], r8 ; ret
0x000002000005ac4f : mov qword ptr [r9], rax ; mov eax, r10d ; ret
0x00000200001e27c5 : mov qword ptr [r9], rax ; ret
0x00000200001b2677 : mov qword ptr [r9], rax ; xor eax, eax ; ret
0x0000020000546102 : mov qword ptr [r9], rcx ; mov qword ptr [rax], rcx ; xor eax, eax ; ret
0x000002000003cc1b : mov qword ptr [r9], rcx ; ret
0x0000020000405d20 : mov qword ptr [r9], rcx ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000200001313cb : mov qword ptr [r9], rcx ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200000635ec : mov qword ptr [r9], rdx ; pop rdi ; ret
0x0000020000438fe2 : mov qword ptr [rax + 0x10], r9 ; ret
0x00000200006b68d4 : mov qword ptr [rax + 0x10], rdx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002fed8 : mov qword ptr [rax + 0x18], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006b2a73 : mov qword ptr [rax + 0x18], rax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001e23fe : mov qword ptr [rax + 0x28], r9 ; ret
0x000002000052c8f2 : mov qword ptr [rax + 0x50], rdx ; ret
0x00000200000bc569 : mov qword ptr [rax + 0x670], rcx ; ret
0x00000200001b8310 : mov qword ptr [rax + 0x678], rdx ; ret
0x00000200000ebb29 : mov qword ptr [rax + 0x740], rcx ; ret
0x000002000003745e : mov qword ptr [rax + 8], r8 ; ret
0x000002000010cbae : mov qword ptr [rax + 8], r9 ; mov qword ptr [rcx], r9 ; mov rax, r10 ; ret
0x0000020000015d24 : mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x000002000060fd60 : mov qword ptr [rax + 8], rbx ; call 0x20000231017
0x000002000002939a : mov qword ptr [rax + 8], rcx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200006bf1e0 : mov qword ptr [rax + 8], rcx ; and qword ptr [rax + 0x10], 0 ; ret
0x000002000002362d : mov qword ptr [rax + 8], rcx ; mov qword ptr [rdx], rcx ; ret
0x000002000046f538 : mov qword ptr [rax + 8], rcx ; xor eax, eax ; ret
0x000002000011b7e4 : mov qword ptr [rax + 8], rdx ; mov qword ptr [rcx], rdx ; ret
0x000002000010ee9b : mov qword ptr [rax - 0x10], rbx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041eb67 : mov qword ptr [rax], 1 ; xor eax, eax ; ret
0x000002000010f1ca : mov qword ptr [rax], r10 ; ret
0x00000200004c6922 : mov qword ptr [rax], r13 ; call 0x200000e9466
0x000002000003744b : mov qword ptr [rax], r8 ; ret
0x00000200006b72e6 : mov qword ptr [rax], r9 ; mov al, 1 ; ret
0x0000020000024502 : mov qword ptr [rax], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000032bd0 : mov qword ptr [rax], rax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000577b4 : mov qword ptr [rax], rax ; mov byte ptr [rdx + 0x2a], 0 ; ret
0x0000020000067f6e : mov qword ptr [rax], rax ; mov dword ptr [rcx + 0x18], r8d ; ret
0x0000020000015d28 : mov qword ptr [rax], rax ; ret
0x000002000019ac70 : mov qword ptr [rax], rbx ; mov qword ptr [rbp - 8], rbx ; jmp 0x200000e6f4f
0x00000200004c0ce8 : mov qword ptr [rax], rcx ; jmp 0x200004c0cb4
0x00000200001bbce0 : mov qword ptr [rax], rcx ; mov qword ptr [r8 + 8], rdx ; ret
0x00000200000548ea : mov qword ptr [rax], rcx ; mov qword ptr [rdx + 8], rcx ; ret
0x0000020000054961 : mov qword ptr [rax], rcx ; ret
0x0000020000546105 : mov qword ptr [rax], rcx ; xor eax, eax ; ret
0x00000200000ebe8b : mov qword ptr [rax], rdx ; mov eax, r8d ; ret
0x0000020000169183 : mov qword ptr [rax], rdx ; mov qword ptr [r9 + 0x48], rdx ; ret
0x000002000015e003 : mov qword ptr [rax], rdx ; ret
0x000002000059413e : mov qword ptr [rbp + 0x10], r13 ; call 0x200001403e6
0x0000020000225f1f : mov qword ptr [rbp + 0x38], rsi ; jmp 0x200002221d7
0x00000200005dd4d2 : mov qword ptr [rbp + 0x3f], r9 ; call 0x20000089716
0x000002000015a030 : mov qword ptr [rbp - 0x20], rax ; mov eax, r10d ; jmp 0x2000015a042
0x000002000051cbe4 : mov qword ptr [rbp - 0x31], r15 ; call 0x20000141507
0x0000020000469b77 : mov qword ptr [rbp - 0x38], rsi ; mov dword ptr [rbp - 0x18], r11d ; call r10
0x0000020000464495 : mov qword ptr [rbp - 0x40], rsi ; call r10
0x00000200003dd9e2 : mov qword ptr [rbp - 0x48], rbx ; call r14
0x0000020000504c7e : mov qword ptr [rbp - 0x50], rax ; call 0x20000134777
0x0000020000504c7d : mov qword ptr [rbp - 0x50], rax ; call 0x20000134778
0x00000200004e075f : mov qword ptr [rbp - 0x51], r11 ; call rax
0x0000020000517e7d : mov qword ptr [rbp - 0x58], r14 ; call 0x20000140c47
0x000002000051522f : mov qword ptr [rbp - 0x60], r14 ; call 0x20000140547
0x000002000019ac73 : mov qword ptr [rbp - 8], rbx ; jmp 0x200000e6f4c
0x0000020000052aa6 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000530750 : mov qword ptr [rbx + 0x28], rcx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000774e3f : mov qword ptr [rbx + 0x28], rcx ; mov rcx, rdi ; call 0x20000011109
0x00000200001129cc : mov qword ptr [rbx + 0x30], rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000527c4c : mov qword ptr [rbx + 0x30], rdx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000044c59c : mov qword ptr [rbx + 0x38], rcx ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000075475 : mov qword ptr [rbx + 0x58], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003de4ca : mov qword ptr [rbx + 8], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004fda18 : mov qword ptr [rbx + 8], rax ; jmp 0x200004fd9e6
0x0000020000022cf4 : mov qword ptr [rbx + 8], rcx ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000123a53 : mov qword ptr [rbx], r10 ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000001f891 : mov qword ptr [rbx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ed179 : mov qword ptr [rbx], rax ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000042298 : mov qword ptr [rbx], rax ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000426345 : mov qword ptr [rbx], rax ; jmp 0x20000426310
0x00000200004fda15 : mov qword ptr [rbx], rax ; mov qword ptr [rbx + 8], rax ; jmp 0x200004fd9e9
0x00000200001ef32c : mov qword ptr [rbx], rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003876e : mov qword ptr [rbx], rcx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005f8c05 : mov qword ptr [rbx], rcx ; add rsp, 0x60 ; pop rbx ; ret
0x000002000014f718 : mov qword ptr [rcx + 0x10], r8 ; ret
0x00000200006c0595 : mov qword ptr [rcx + 0x10], r9 ; mov qword ptr [rcx], rdx ; ret
0x0000020000522f99 : mov qword ptr [rcx + 0x10], rax ; mov dword ptr [rcx + 0x18], eax ; ret
0x0000020000541454 : mov qword ptr [rcx + 0x10], rax ; mov qword ptr [rcx + 8], rcx ; ret
0x0000020000641ac1 : mov qword ptr [rcx + 0x10], rdx ; and qword ptr [rcx + 8], 0 ; ret
0x00000200001e463e : mov qword ptr [rcx + 0x10], rdx ; ret
0x0000020000740cd1 : mov qword ptr [rcx + 0x128], rax ; xor eax, eax ; ret
0x000002000002222f : mov qword ptr [rcx + 0x168], r8 ; ret
0x0000020000022240 : mov qword ptr [rcx + 0x168], rax ; ret
0x0000020000066d1a : mov qword ptr [rcx + 0x18], r8 ; mov qword ptr [rcx + 0x38], r8 ; ret
0x0000020000121f63 : mov qword ptr [rcx + 0x18], rax ; mov dword ptr [rcx + 8], edx ; ret
0x0000020000002fc3 : mov qword ptr [rcx + 0x18], rax ; ret
0x00000200000153a0 : mov qword ptr [rcx + 0x18], rdx ; mov qword ptr [rcx + 0x20], r8 ; ret
0x0000020000066cfb : mov qword ptr [rcx + 0x18], rdx ; mov qword ptr [rcx + 0x38], rdx ; ret
0x00000200000d93a3 : mov qword ptr [rcx + 0x18], rdx ; ret
0x00000200000414fa : mov qword ptr [rcx + 0x20], r10 ; ret
0x00000200000153a4 : mov qword ptr [rcx + 0x20], r8 ; ret
0x00000200000fc494 : mov qword ptr [rcx + 0x20], rdx ; ret
0x00000200001f64ef : mov qword ptr [rcx + 0x28], rax ; mov al, 1 ; ret
0x00000200003ea79a : mov qword ptr [rcx + 0x2e0], rdx ; ret
0x000002000003f22a : mov qword ptr [rcx + 0x30], r8 ; mov qword ptr [rcx + 0x38], r9 ; ret
0x0000020000066d1e : mov qword ptr [rcx + 0x38], r8 ; ret
0x000002000003f22e : mov qword ptr [rcx + 0x38], r9 ; ret
0x00000200003fb46e : mov qword ptr [rcx + 0x38], rax ; cmp dword ptr [rcx + 0x14], edx ; ja 0x200003fb481 ; ret
0x000002000006704a : mov qword ptr [rcx + 0x38], rax ; mov byte ptr [rcx + 0x52], dl ; ret
0x00000200004e8c9f : mov qword ptr [rcx + 0x38], rax ; mov qword ptr [rcx + 0x40], r10 ; ret
0x0000020000066cff : mov qword ptr [rcx + 0x38], rdx ; ret
0x000002000041b554 : mov qword ptr [rcx + 0x3d8], rdx ; ret
0x000002000041b76c : mov qword ptr [rcx + 0x3f0], rax ; xor eax, eax ; ret
0x0000020000516f36 : mov qword ptr [rcx + 0x408], rcx ; ret
0x00000200004e8ca3 : mov qword ptr [rcx + 0x40], r10 ; ret
0x00000200003b280f : mov qword ptr [rcx + 0x40], r8 ; mov byte ptr [rcx + 0x48], 0 ; ret
0x0000020000413af6 : mov qword ptr [rcx + 0x410], rax ; ret
0x000002000063cf40 : mov qword ptr [rcx + 0x460], rdx ; xor eax, eax ; ret
0x0000020000641390 : mov qword ptr [rcx + 0x48], r9 ; ret
0x000002000064138b : mov qword ptr [rcx + 0x48], rax ; ret
0x00000200000153bd : mov qword ptr [rcx + 0x58], rax ; mov qword ptr [rcx + 0x60], rax ; ret
0x000002000014f69d : mov qword ptr [rcx + 0x5b58], rax ; ret
0x00000200000153c1 : mov qword ptr [rcx + 0x60], rax ; ret
0x000002000011fe78 : mov qword ptr [rcx + 0x678], rdx ; ret
0x0000020000044d51 : mov qword ptr [rcx + 0x68], rax ; ret
0x0000020000680adf : mov qword ptr [rcx + 0x68], rdx ; ret
0x000002000005e4bf : mov qword ptr [rcx + 0x70], r10 ; jmp 0x2000005e48c
0x00000200003a6d9e : mov qword ptr [rcx + 0x70], rax ; mov dword ptr [rcx + 0x78], eax ; ret
0x0000020000044cbc : mov qword ptr [rcx + 0x70], rdx ; ret
0x00000200003fa88e : mov qword ptr [rcx + 0x70], rdx ; xor eax, eax ; ret
0x000002000041ee64 : mov qword ptr [rcx + 0xb08], rdx ; ret
0x00000200001c7241 : mov qword ptr [rcx + 0xb0], rax ; ret
0x000002000013f848 : mov qword ptr [rcx + 5], rax ; ret
0x000002000013f853 : mov qword ptr [rcx + 6], rax ; ret
0x000002000013f85b : mov qword ptr [rcx + 7], rax ; ret
0x00000200006b8119 : mov qword ptr [rcx + 8], -0x21520ff3 ; ret
0x0000020000042bdc : mov qword ptr [rcx + 8], r8 ; mov dword ptr [rcx + 0x58], eax ; ret
0x0000020000115f77 : mov qword ptr [rcx + 8], r8 ; ret
0x00000200000d3023 : mov qword ptr [rcx + 8], r9 ; mov qword ptr [r9 + 0x10], rdi ; pop rdi ; ret
0x000002000061e8d7 : mov qword ptr [rcx + 8], r9 ; ret
0x000002000004968a : mov qword ptr [rcx + 8], rax ; add rsp, 0x28 ; ret
0x00000200000577de : mov qword ptr [rcx + 8], rax ; mov qword ptr [r8], rax ; ret
0x000002000005167a : mov qword ptr [rcx + 8], rax ; mov qword ptr [rcx], rdx ; ret
0x000002000003b034 : mov qword ptr [rcx + 8], rax ; ret
0x0000020000044b10 : mov qword ptr [rcx + 8], rcx ; ret
0x000002000014f714 : mov qword ptr [rcx + 8], rdx ; mov qword ptr [rcx + 0x10], r8 ; ret
0x000002000003769b : mov qword ptr [rcx + 8], rdx ; ret
0x000002000007bb13 : mov qword ptr [rcx + rdx*8 + 0x10], r11 ; ret
0x00000200001468f1 : mov qword ptr [rcx - 8], rax ; jne 0x200001468d6 ; ret
0x00000200000d989c : mov qword ptr [rcx], r8 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006b7332 : mov qword ptr [rcx], r8 ; mov al, 1 ; ret
0x00000200001f421c : mov qword ptr [rcx], r8 ; mov qword ptr [rcx + 8], rdx ; ret
0x00000200001bc803 : mov qword ptr [rcx], r8 ; ret
0x000002000010cbb2 : mov qword ptr [rcx], r9 ; mov rax, r10 ; ret
0x000002000064fd89 : mov qword ptr [rcx], rax ; add rsp, 0x28 ; ret
0x00000200001e73ad : mov qword ptr [rcx], rax ; add rsp, 0x50 ; pop rdi ; ret
0x000002000051e238 : mov qword ptr [rcx], rax ; jmp 0x2000051e204
0x000002000013f829 : mov qword ptr [rcx], rax ; mov byte ptr [rcx + 8], al ; ret
0x000002000013f830 : mov qword ptr [rcx], rax ; mov dword ptr [rcx + 6], eax ; ret
0x000002000013f837 : mov qword ptr [rcx], rax ; mov dword ptr [rcx + 7], eax ; ret
0x000002000013f83e : mov qword ptr [rcx], rax ; mov dword ptr [rcx + 8], eax ; ret
0x000002000014f5e6 : mov qword ptr [rcx], rax ; mov eax, 0xc00000bb ; ret
0x0000020000025ff2 : mov qword ptr [rcx], rax ; mov eax, edx ; ret
0x000002000013f845 : mov qword ptr [rcx], rax ; mov qword ptr [rcx + 5], rax ; ret
0x000002000013f850 : mov qword ptr [rcx], rax ; mov qword ptr [rcx + 6], rax ; ret
0x000002000013f858 : mov qword ptr [rcx], rax ; mov qword ptr [rcx + 7], rax ; ret
0x000002000065f0f7 : mov qword ptr [rcx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x000002000002da92 : mov qword ptr [rcx], rax ; ret
0x0000020000668580 : mov qword ptr [rcx], rax ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000004213e : mov qword ptr [rcx], rax ; xor eax, eax ; add rsp, 0x38 ; ret
0x000002000012382a : mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x00000200000bc3f9 : mov qword ptr [rcx], rbx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001707d : mov qword ptr [rcx], rbx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200004166d4 : mov qword ptr [rcx], rdx ; mov eax, r8d ; ret
0x00000200004763fc : mov qword ptr [rcx], rdx ; mov qword ptr [rdx + 8], rcx ; ret
0x000002000005167e : mov qword ptr [rcx], rdx ; ret
0x00000200005462d0 : mov qword ptr [rcx], rdx ; xor al, al ; ret
0x00000200005ea84f : mov qword ptr [rdi + 0x10], rax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000049b519 : mov qword ptr [rdi + 0x38], rax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000041b227 : mov qword ptr [rdi + 0x50], rax ; add rsp, 0x20 ; pop rdi ; ret
0x000002000049b9dd : mov qword ptr [rdi + 8], rax ; call 0x200000c1927
0x00000200001cc114 : mov qword ptr [rdi], r8 ; add rsp, 0x20 ; pop rdi ; ret
0x000002000006f39d : mov qword ptr [rdi], r9 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f492c : mov qword ptr [rdi], r9 ; add rsp, 0x30 ; pop rdi ; ret
0x000002000047862f : mov qword ptr [rdi], rax ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000030ae5 : mov qword ptr [rdi], rax ; mov al, 1 ; pop rdi ; ret
0x00000200000236ce : mov qword ptr [rdi], rcx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000f47cb : mov qword ptr [rdi], rdx ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001ac4c4 : mov qword ptr [rdx + 0x10], rax ; je 0x200001ac4d2 ; sti ; ret
0x00000200000b03d5 : mov qword ptr [rdx + 0x10], rax ; ret
0x000002000002bf09 : mov qword ptr [rdx + 0x10], rcx ; pop rsi ; ret
0x00000200000bd214 : mov qword ptr [rdx + 0x10], rcx ; ret
0x00000200006ccfdb : mov qword ptr [rdx + 0x120], rax ; xor eax, eax ; ret
0x0000020000066cbe : mov qword ptr [rdx + 0x18], rax ; mov al, 1 ; ret
0x00000200000d24f1 : mov qword ptr [rdx + 0x18], rcx ; add rsp, 0x28 ; ret
0x000002000003997b : mov qword ptr [rdx + 0x18], rdx ; add rsp, 0x38 ; ret
0x00000200000403ac : mov qword ptr [rdx + 0x20], r9 ; mov al, r8b ; ret
0x00000200005e4d04 : mov qword ptr [rdx + 0x28], rax ; ret
0x00000200005e4cf7 : mov qword ptr [rdx + 0x28], rcx ; mov qword ptr [rdx + 0x38], rax ; ret
0x000002000053e349 : mov qword ptr [rdx + 0x28], rcx ; ret
0x00000200000f73b8 : mov qword ptr [rdx + 0x30], rax ; ret
0x00000200001f7b78 : mov qword ptr [rdx + 0x378], rax ; ret
0x00000200001fddb2 : mov qword ptr [rdx + 0x38], r8 ; xor eax, eax ; ret
0x00000200005e4cfb : mov qword ptr [rdx + 0x38], rax ; ret
0x00000200005e4d28 : mov qword ptr [rdx + 0x48], rax ; ret
0x00000200000ebb44 : mov qword ptr [rdx + 0x740], rcx ; ret
0x00000200000063ec : mov qword ptr [rdx + 0xf90], rax ; ret
0x000002000002d326 : mov qword ptr [rdx + 8], r8 ; ret
0x00000200003bb71d : mov qword ptr [rdx + 8], rax ; and qword ptr [rcx + 0x30], 0 ; ret
0x00000200000402bb : mov qword ptr [rdx + 8], rax ; cmp rax, rdx ; je 0x200000402ce ; ret
0x000002000000f582 : mov qword ptr [rdx + 8], rax ; jmp 0x2000000f550
0x0000020000030a3f : mov qword ptr [rdx + 8], rcx ; add rsp, 0x28 ; ret
0x000002000039ce7b : mov qword ptr [rdx + 8], rcx ; dec dword ptr [rcx + 0x64] ; ret
0x000002000005495d : mov qword ptr [rdx + 8], rcx ; mov qword ptr [rax], rcx ; ret
0x0000020000073c42 : mov qword ptr [rdx + 8], rcx ; mov qword ptr [rcx], rdx ; ret
0x00000200000548ed : mov qword ptr [rdx + 8], rcx ; ret
0x0000020000488298 : mov qword ptr [rdx + r9*8 + 0x70], rcx ; inc dword ptr [rdx + 0x6c] ; ret
0x000002000013f7bf : mov qword ptr [rdx + rcx - 8], rax ; ret
0x000002000005e4ac : mov qword ptr [rdx], r10 ; mov rax, r8 ; ret
0x00000200006b49d1 : mov qword ptr [rdx], r11 ; ret
0x000002000043f087 : mov qword ptr [rdx], r8 ; mov al, 1 ; ret
0x0000020000029b91 : mov qword ptr [rdx], r8 ; mov rax, rcx ; ret
0x00000200001f65c5 : mov qword ptr [rdx], r9 ; mov eax, r8d ; ret
0x00000200001c3d41 : mov qword ptr [rdx], r9 ; ret
0x0000020000605d6d : mov qword ptr [rdx], rax ; mov eax, r8d ; ret
0x00000200001c690a : mov qword ptr [rdx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x00000200003cd5df : mov qword ptr [rdx], rax ; mov rax, rcx ; ret
0x0000020000024264 : mov qword ptr [rdx], rax ; ret
0x00000200000f0450 : mov qword ptr [rdx], rax ; test r8, r8 ; jne 0x200000f0467 ; ret
0x00000200001f0fb8 : mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000013ccd7 : mov qword ptr [rdx], rcx ; add rsp, 0x38 ; ret
0x00000200001a57c3 : mov qword ptr [rdx], rcx ; add rsp, 0x48 ; ret
0x000002000040f33a : mov qword ptr [rdx], rcx ; add rsp, 0x68 ; ret
0x0000020000652c67 : mov qword ptr [rdx], rcx ; mov eax, r8d ; ret
0x000002000046f535 : mov qword ptr [rdx], rcx ; mov qword ptr [rax + 8], rcx ; xor eax, eax ; ret
0x000002000004079c : mov qword ptr [rdx], rcx ; mov rax, r8 ; ret
0x0000020000023631 : mov qword ptr [rdx], rcx ; ret
0x00000200001f497e : mov qword ptr [rdx], rcx ; xor eax, eax ; ret
0x00000200005dc826 : mov qword ptr [rip + 0x11c9fb], rdx ; xor eax, eax ; ret
0x00000200005b79bc : mov qword ptr [rip + 0x141855], rax ; ret
0x00000200001b40f9 : mov qword ptr [rip + 0x144338], rcx ; ret
0x00000200001b2abc : mov qword ptr [rip + 0x148285], rcx ; ret
0x00000200001a4aac : mov qword ptr [rip + 0x18c10d], rdx ; ret
0x000002000014f733 : mov qword ptr [rip + 0x18cf86], rdx ; ret
0x00000200001325ec : mov qword ptr [rip + 0x19283d], rax ; xor eax, eax ; ret
0x000002000012580b : mov qword ptr [rip + 0x1c006e], rdx ; ret
0x00000200001a3bf8 : mov qword ptr [rip + 0x1da4b1], r8 ; jmp 0x2000012fe6b
0x0000020000060c42 : mov qword ptr [rip + 0x299c9f], rax ; ret
0x000002000041ee53 : mov qword ptr [rip + 0x2da3c6], rax ; ret
0x00000200001fb618 : mov qword ptr [rip + 0xd56a9], rcx ; ret
0x00000200004c9230 : mov qword ptr [rip - 0x1ecc9f], rcx ; ret
0x00000200004fa2c9 : mov qword ptr [rip - 0x202628], rcx ; ret
0x0000020000619174 : mov qword ptr [rip - 0x299a03], rcx ; ret
0x00000200005c6eb8 : mov qword ptr [rip - 0x2ea8f7], rcx ; ret
0x00000200005f74cd : mov qword ptr [rip - 0x2fee74], r12 ; call 0x20000053799
0x000002000061e792 : mov qword ptr [rip - 0x33fa01], rcx ; jmp 0x2000061e766
0x000002000061e870 : mov qword ptr [rip - 0x33fadf], rcx ; jmp 0x2000061e844
0x00000200006c5768 : mov qword ptr [rip - 0x3ed037], rcx ; ret
0x00000200006d7000 : mov qword ptr [rip - 0x4053e7], rcx ; ret
0x0000020000782c74 : mov qword ptr [rip - 0x452063], rcx ; xor eax, eax ; ret
0x000002000077d029 : mov qword ptr [rip - 0x464630], r14 ; jmp 0x20000769266
0x000002000076d3b4 : mov qword ptr [rip - 0x471b03], rax ; ret
0x000002000076cefb : mov qword ptr [rip - 0x4910e2], rcx ; ret
0x000002000076e03a : mov qword ptr [rip - 0x492441], rcx ; ret
0x000002000076d9dc : mov qword ptr [rip - 0x493753], rcx ; ret
0x000002000049d2d7 : mov qword ptr [rsi + 8], rax ; call 0x200000c1927
0x00000200005770dd : mov qword ptr [rsi + 8], rcx ; jmp 0x200003f3348
0x00000200005770da : mov qword ptr [rsi], rcx ; mov qword ptr [rsi + 8], rcx ; jmp 0x200003f334b
0x0000020000153c17 : mov qword ptr [rsi], rdi ; jmp 0x20000153be2
0x00000200005962f5 : mov qword ptr [rsp + 0x20], r10 ; call rax
0x00000200002215eb : mov qword ptr [rsp + 0x20], r10 ; mov edx, esi ; call r11
0x00000200001cd8a2 : mov qword ptr [rsp + 0x20], r12 ; call 0x20000059b87
0x0000020000422857 : mov qword ptr [rsp + 0x20], r12 ; mov rcx, r14 ; call qword ptr [rsi]
0x0000020000678e69 : mov qword ptr [rsp + 0x20], r14 ; call r10
0x00000200004c2e54 : mov qword ptr [rsp + 0x20], r15 ; call 0x200000e8b5c
0x0000020000182af9 : mov qword ptr [rsp + 0x20], r15 ; call rax
0x00000200005e1833 : mov qword ptr [rsp + 0x20], r15 ; mov r8d, ebx ; call rax
0x0000020000598000 : mov qword ptr [rsp + 0x20], r15 ; xor ecx, ecx ; call qword ptr [rsi]
0x0000020000427ff7 : mov qword ptr [rsp + 0x20], r8 ; mov r8b, r11b ; call r12
0x0000020000679922 : mov qword ptr [rsp + 0x20], r9 ; mov r9d, r14d ; call r10
0x000002000043014b : mov qword ptr [rsp + 0x20], rax ; add rsp, 0x38 ; ret
0x00000200004c1619 : mov qword ptr [rsp + 0x20], rax ; call 0x200000e526c
0x000002000051366e : mov qword ptr [rsp + 0x20], rax ; call 0x20000140da8
0x00000200006935c6 : mov qword ptr [rsp + 0x20], rax ; call 0x2000041f80b
0x000002000060551b : mov qword ptr [rsp + 0x20], rax ; call 0x20000461757
0x00000200005a9c36 : mov qword ptr [rsp + 0x20], rax ; call 0x20000465e8b
0x00000200005c5dd0 : mov qword ptr [rsp + 0x20], rax ; call 0x20000602043
0x00000200005c5e1f : mov qword ptr [rsp + 0x20], rax ; call 0x20000602044
0x00000200005c5e1e : mov qword ptr [rsp + 0x20], rax ; call 0x20000602045
0x000002000064b904 : mov qword ptr [rsp + 0x20], rax ; call qword ptr [r10]
0x000002000042271e : mov qword ptr [rsp + 0x20], rax ; call qword ptr [rsi]
0x0000020000074a31 : mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200004111dd : mov qword ptr [rsp + 0x20], rax ; call r11
0x0000020000426b8b : mov qword ptr [rsp + 0x20], rax ; call r12
0x00000200004047d3 : mov qword ptr [rsp + 0x20], rax ; call r15
0x00000200005efead : mov qword ptr [rsp + 0x20], rax ; call rbx
0x00000200004bbbdb : mov qword ptr [rsp + 0x20], rax ; lea edx, dword ptr [rax + 3] ; call r10
0x00000200005101e0 : mov qword ptr [rsp + 0x20], rax ; lea r8d, dword ptr [r9 + 1] ; call rdi
0x00000200004ce60a : mov qword ptr [rsp + 0x20], rax ; lea r8d, dword ptr [r9 - 3] ; call rsi
0x00000200005101a7 : mov qword ptr [rsp + 0x20], rax ; mov r8d, r9d ; call rdi
0x000002000040da88 : mov qword ptr [rsp + 0x20], rbp ; mov rcx, rsi ; call rdi
0x0000020000514d2e : mov qword ptr [rsp + 0x20], rbx ; call 0x20000140548
0x0000020000513aa2 : mov qword ptr [rsp + 0x20], rbx ; call 0x20000140da8
0x0000020000462f29 : mov qword ptr [rsp + 0x20], rcx ; mov rcx, r11 ; call rax
0x000002000042d893 : mov qword ptr [rsp + 0x20], rdi ; call 0x20000053854
0x0000020000512708 : mov qword ptr [rsp + 0x20], rdi ; call 0x20000140488
0x0000020000764b3a : mov qword ptr [rsp + 0x20], rdi ; call 0x20000140da7
0x00000200006c086b : mov qword ptr [rsp + 0x20], rdi ; call rax
0x00000200002114d3 : mov qword ptr [rsp + 0x20], rdx ; mov rdx, rsi ; call r10
0x000002000040ad0b : mov qword ptr [rsp + 0x20], rsi ; call 0x20000067013
0x00000200005fceea : mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rax]
0x000002000046c022 : mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x00000200001e4d10 : mov qword ptr [rsp + 0x28], r8 ; call rdx
0x00000200005888f9 : mov qword ptr [rsp + 0x28], rax ; call 0x200004d4b87
0x000002000049913a : mov qword ptr [rsp + 0x28], rdx ; call 0x200000bb118
0x0000020000524141 : mov qword ptr [rsp + 0x30], rax ; call 0x2000014f4c8
0x0000020000162de0 : mov qword ptr [rsp + 0x30], rax ; call r8
0x0000020000017deb : mov qword ptr [rsp + 0x30], rax ; jmp 0x20000017dd3
0x00000200004ce566 : mov qword ptr [rsp + 0x30], rbx ; call r11
0x000002000018595f : mov qword ptr [rsp + 0x38], r15 ; jmp 0x20000091c2a
0x000002000049d990 : mov qword ptr [rsp + 0x38], rdi ; call 0x200000c2de8
0x00000200001b9911 : mov qword ptr [rsp + 0x38], rdx ; call r9
0x0000020000496ea7 : mov qword ptr [rsp + 0x48], rax ; call 0x200000b9108
0x00000200004420da : mov qword ptr [rsp + 0x48], rbx ; jmp 0x200004420a9
0x000002000067123f : mov qword ptr [rsp + 0x50], r8 ; inc edx ; jmp 0x2000067121a
0x00000200003e464d : mov qword ptr [rsp + 0x50], rdx ; jmp 0x200003e461c
0x000002000063d777 : mov qword ptr [rsp + 0x50], rsi ; inc edx ; jmp 0x2000063d763
0x00000200004a502c : mov qword ptr [rsp + 0x58], rbx ; call 0x200000c95a8
0x000002000013e93d : mov qword ptr [rsp + 0x70], rax ; call r11
0x000002000056cfed : mov qword ptr ss:[r14 + 8], r12 ; call 0x2000007b795
0x000002000015f72f : mov r10, qword ptr [r10 + rax*8] ; call r10
0x00000200004e72ca : mov r10, qword ptr [rip - 0x168009] ; call r10
0x00000200005f78a2 : mov r10, qword ptr [rip - 0x2785e1] ; call r10
0x00000200005fa4af : mov r10, qword ptr [rip - 0x27b1ee] ; call r10
0x00000200005fadb0 : mov r10, qword ptr [rip - 0x27baef] ; call r10
0x00000200003f98ad : mov r10, qword ptr [rip - 0x7a5ec] ; call r10
0x00000200003f9b21 : mov r10, qword ptr [rip - 0x7a860] ; call r10
0x00000200003f9f86 : mov r10, qword ptr [rip - 0x7acc5] ; call r10
0x0000020000425486 : mov r10, rcx ; call 0x2000005168a
0x00000200003cefa9 : mov r10b, 1 ; jmp 0x200003cef74
0x000002000068eff4 : mov r10d, 0xc0000225 ; mov eax, r10d ; ret
0x000002000040bcc2 : mov r10d, r9d ; mov eax, r10d ; ret
0x000002000014f02a : mov r11, qword ptr [rbp - 0x68] ; add rsp, 0x68 ; ret
0x000002000022e9ea : mov r11, qword ptr [rsp + 0x40] ; mov rax, rdx ; jmp 0x2000022e9fd
0x000002000022e3a0 : mov r11, qword ptr [rsp + 0x40] ; xor ecx, ecx ; mov rax, rdx ; jmp 0x2000022e3b7
0x00000200001e2bd3 : mov r11b, 0x89 ; add dword ptr [rax - 0x75], ecx ; ret
0x0000020000587cf9 : mov r11d, 0x470fc23b ; ret 0xd233
0x00000200005028f8 : mov r11d, 0x89c03345 ; ret
0x0000020000437644 : mov r11d, 0x89f38b48 ; ret
0x00000200005de183 : mov r11d, 0x89f88b41 ; ret
0x000002000040de72 : mov r11d, 0xc88b4800 ; call 0x2000003cc31
0x000002000053a212 : mov r12, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000763da5 : mov r12, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x000002000040c802 : mov r12, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x000002000039aa85 : mov r12, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x000002000049aeed : mov r12, rcx ; xor r15b, r15b ; call 0x200000c3089
0x000002000060d49e : mov r12b, 1 ; call 0x20000231016
0x000002000012d95d : mov r12b, 3 ; ret 0xc803
0x00000200004c8cca : mov r12d, dword ptr [rax + 0x1e4] ; call rdi
0x0000020000521655 : mov r12d, r9d ; call 0x2000014f4c6
0x0000020000205ac9 : mov r12d, r9d ; call 0x20000231ce5
0x000002000018593c : mov r13, rax ; jmp 0x20000091bfc
0x000002000014ada1 : mov r13, rax ; mov r14, rax ; mov r15, rax ; jmp rsi
0x000002000060348a : mov r13d, eax ; call 0x20000231ce6
0x0000020000760b08 : mov r13d, ebx ; jmp 0x20000760ade
0x000002000053e95f : mov r14, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000456d0d : mov r14, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r15 ; ret
0x000002000010c415 : mov r14, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x00000200003f69d4 : mov r14, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x000002000002076a : mov r14, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x00000200000ff349 : mov r14, qword ptr [rbp + 0x58] ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x0000020000735f72 : mov r14, qword ptr [rbp - 0x80] ; mov rax, rdx ; jmp 0x20000735f83
0x00000200003ef719 : mov r14, qword ptr [rsp + 0x20] ; ret
0x00000200000c1ce3 : mov r14, qword ptr [rsp + 0x30] ; add rsp, 0x48 ; ret
0x000002000003991f : mov r14, rax ; jmp 0x200000398eb
0x000002000014ada4 : mov r14, rax ; mov r15, rax ; jmp rsi
0x00000200000fe2db : mov r14, rbp ; jmp 0x200000fe2a7
0x00000200001d7317 : mov r14, rbx ; mov r8d, r10d ; jmp 0x200001d732e
0x000002000042ac34 : mov r14, rcx ; xor esi, esi ; call 0x2000004e1a0
0x000002000076e624 : mov r14b, 0xff ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200004ce876 : mov r14b, 1 ; lea r8d, dword ptr [r9 - 4] ; call rsi
0x000002000073bf69 : mov r14d, 0x350 ; mov rax, rdx ; jmp 0x2000073bf7e
0x00000200001e62fe : mov r14d, 0x79890802 ; ret
0x000002000052f0ed : mov r14d, 1 ; call 0x2000014f4c9
0x00000200004756a2 : mov r14d, eax ; call 0x2000009b446
0x000002000060af8c : mov r14d, edi ; call 0x20000231ce6
0x000002000013b947 : mov r14d, r10d ; mov r8d, edx ; jmp 0x2000013b971
0x00000200004f5b6b : mov r15, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x000002000049cf3d : mov r15, qword ptr [rsp + 0x30] ; pop r14 ; pop rsi ; ret
0x000002000010fcaf : mov r15, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; ret
0x000002000049ad0b : mov r15, rax ; call 0x200000bcc76
0x000002000014ada7 : mov r15, rax ; jmp rsi
0x00000200006b85e0 : mov r15, rax ; mov r8d, esi ; call rbx
0x00000200004c2716 : mov r15, rdx ; mov rdi, rcx ; call 0x200000e88d5
0x000002000052cafc : mov r15b, 0x44 ; lea eax, dword ptr [rdx + 0x58] ; call 0x2000014f4c9
0x00000200005e730c : mov r15b, 0xe8 ; lodsd eax, dword ptr [rsi] ; ret
0x00000200006115d7 : mov r15b, 0xe8 ; ret 0xa61a
0x00000200001c9aed : mov r15b, 0xff ; ret
0x000002000013b944 : mov r15b, 1 ; mov r14d, r10d ; mov r8d, edx ; jmp 0x2000013b974
0x0000020000648e37 : mov r15d, 0x19ba ; add byte ptr [rsi + 0x3b], ah ; ret 0x877
0x00000200006d84b3 : mov r15d, 0x58800ff ; ret
0x0000020000486114 : mov r15d, 0x89ce8b48 ; ret
0x00000200004689c9 : mov r15d, 0x8b068941 ; ret
0x000002000013b961 : mov r15d, 0x8b4491eb ; ret 0x8b44
0x000002000049a58c : mov r15d, 0xc0000428 ; call 0x200000c23c9
0x0000020000416178 : mov r15d, dword ptr [rcx + 0x18] ; call 0x200000c23c6
0x000002000049a2b1 : mov r15d, eax ; call 0x200000bc566
0x0000020000689649 : mov r15d, eax ; call 0x200006858c5
0x00000200004b64ee : mov r8, qword ptr [r14 + 0x60] ; mov dl, 1 ; mov rcx, r12 ; call rsi
0x00000200001c98e5 : mov r8, qword ptr [r8 + 0x10] ; mov rcx, qword ptr [rbx] ; call rax
0x0000020000015c20 : mov r8, qword ptr [r9] ; jmp 0x20000015bec
0x0000020000117b93 : mov r8, qword ptr [rbp - 9] ; mov rcx, rdi ; call 0x20000503dc9
0x0000020000117b1c : mov r8, qword ptr [rbp - 9] ; mov rcx, rsi ; call 0x20000503dc9
0x000002000011f7f3 : mov r8, qword ptr [rbx + 0x38] ; call rax
0x000002000013ea3c : mov r8, qword ptr [rcx + 0x28] ; mov rdx, qword ptr [rcx + 0x20] ; call rax
0x0000020000051545 : mov r8, qword ptr [rdx + 0x10] ; mov rdx, qword ptr [rdx + 8] ; call qword ptr [rbx]
0x00000200001a9e16 : mov r8, qword ptr [rip + 0x1d568b] ; call r8
0x00000200000eaf93 : mov r8, qword ptr [rip + 0x29450e] ; call r8
0x00000200000ccccb : mov r8, qword ptr [rsp + 0x38] ; call rax
0x0000020000070506 : mov r8, qword ptr [rsp + 0x40] ; jmp 0x2000007056a
0x0000020000085e49 : mov r8, qword ptr [rsp + 0x58] ; call rax
0x0000020000039917 : mov r8, r10 ; jmp 0x200000398a9
0x000002000005e4e8 : mov r8, r10 ; jmp 0x2000005e4b1
0x00000200001d3bf8 : mov r8, r10 ; jmp 0x200001d3c4a
0x00000200004111da : mov r8, r10 ; mov qword ptr [rsp + 0x20], rax ; call r11
0x0000020000465b49 : mov r8, r11 ; mov rdx, rbx ; mov rcx, r10 ; call rax
0x000002000045d05e : mov r8, r12 ; call r10
0x0000020000073893 : mov r8, r12 ; mov rcx, rdi ; call r14
0x00000200001d2735 : mov r8, r12 ; mov rdx, rax ; mov rcx, rbx ; call qword ptr [rbx]
0x00000200005efeaa : mov r8, r13 ; mov qword ptr [rsp + 0x20], rax ; call rbx
0x00000200000e3ddc : mov r8, r13 ; mov rcx, r15 ; call rax
0x00000200000315b1 : mov r8, r14 ; call rax
0x0000020000029071 : mov r8, r14 ; mov rcx, rbx ; call rax
0x00000200004532a8 : mov r8, r14 ; mov rdx, r12 ; mov rcx, r15 ; call rax
0x0000020000160eab : mov r8, r14 ; mov rdx, rax ; call r9
0x00000200006b3720 : mov r8, r14 ; mov rdx, rbp ; mov rcx, r13 ; call rbx
0x00000200001c41f6 : mov r8, r15 ; mov edx, 0x58 ; call r12
0x00000200006b873c : mov r8, r15 ; mov rdx, rbp ; mov rcx, r12 ; call rax
0x00000200006cc6aa : mov r8, rax ; add rsp, 0x38 ; jmp r9
0x0000020000572334 : mov r8, rax ; call 0x200006204f1
0x000002000019799e : mov r8, rax ; cmp rcx, rax ; jne 0x20000197994 ; ret
0x0000020000009ba0 : mov r8, rax ; jne 0x20000009bc4 ; ret
0x000002000002649c : mov r8, rax ; jne 0x200000264db ; add rsp, 0x28 ; ret
0x000002000004eb4e : mov r8, rax ; jne 0x2000004eb98 ; add rsp, 0x28 ; ret
0x0000020000103602 : mov r8, rax ; jne 0x2000016cc4d ; ret
0x0000020000040f3d : mov r8, rax ; mov rax, r8 ; ret
0x000002000066aa0d : mov r8, rbp ; mov dword ptr [rsp + 0x20], r15d ; call rdi
0x00000200004c9bbb : mov r8, rbp ; mov rdx, r15 ; call 0x200000ee115
0x00000200005389bc : mov r8, rbp ; mov rdx, rsi ; call rax
0x0000020000642eb4 : mov r8, rbx ; call 0x2000014f185
0x00000200005ba31d : mov r8, rbx ; call 0x200001de4d6
0x00000200006176d6 : mov r8, rbx ; lea rcx, qword ptr [rbp + 8] ; call 0x20000123991
0x0000020000452f0b : mov r8, rbx ; mov rcx, r13 ; call rax
0x000002000052d77c : mov r8, rbx ; mov rcx, r14 ; call 0x2000014f189
0x00000200000ebbc8 : mov r8, rbx ; mov rcx, rsi ; call r14
0x00000200006c0886 : mov r8, rbx ; mov rdx, rbp ; mov rcx, r14 ; call rax
0x00000200005d3f42 : mov r8, rbx ; xor edx, edx ; call 0x200001401e7
0x00000200004c1dba : mov r8, rcx ; call 0x200000e8386
0x00000200000361ae : mov r8, rcx ; sub r8, r11 ; add r8, r10 ; jmp 0x20000036185
0x000002000052d85d : mov r8, rdi ; call 0x2000014f186
0x000002000052d85c : mov r8, rdi ; call 0x2000014f187
0x00000200006c0372 : mov r8, rdi ; mov edx, esi ; mov rcx, rbx ; call rax
0x000002000009bbc4 : mov r8, rdx ; call r14
0x00000200001e79a9 : mov r8, rdx ; lea edx, dword ptr [rbx + 0x1e] ; call r9
0x00000200004fc1b8 : mov r8, rdx ; mov rax, r8 ; ret
0x000002000040781e : mov r8, rdx ; mov rdx, r10 ; jmp r11
0x00000200006b8552 : mov r8, rsi ; mov edx, ebp ; mov rcx, r15 ; call r14
0x00000200006c03fd : mov r8, rsi ; mov edx, ebp ; mov rcx, rbx ; call rax
0x00000200005b95fe : mov r8, rsi ; mov rcx, r9 ; call 0x200001de789
0x00000200000e4682 : mov r8, rsi ; mov rdx, r12 ; mov rcx, r13 ; call rax
0x00000200004bcfdd : mov r8b, 0x8b ; ret 0xc883
0x0000020000038892 : mov r8b, 0x8b ; ret 0xd8f7
0x0000020000504c80 : mov r8b, 0xe8 ; jmp 0x20066500f87
0x00000200005e6916 : mov r8b, 0xe8 ; ret
0x000002000077cdf6 : mov r8b, 0xfe ; dec dword ptr [rax - 9] ; ret
0x000002000060427e : mov r8b, 1 ; call 0x200004b0565
0x00000200001a6764 : mov r8b, 1 ; mov al, r8b ; ret
0x00000200000cdce5 : mov r8b, 1 ; mov rcx, r9 ; call 0x20000069fb8
0x000002000018410c : mov r8b, 1 ; movzx edx, r14b ; call rax
0x00000200001b9d7f : mov r8b, al ; mov al, r8b ; ret
0x000002000015d11a : mov r8b, al ; mov rcx, rsi ; call 0x2000020937c
0x00000200004cc778 : mov r8b, bl ; call 0x200000ef58e
0x000002000057d75f : mov r8b, bl ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200001f058a : mov r8b, cl ; mov al, r8b ; ret
0x00000200001b4472 : mov r8b, dl ; jmp 0x200001b44c0
0x000002000050070c : mov r8b, r10b ; jmp 0x200005006bd
0x0000020000427ffc : mov r8b, r11b ; call r12
0x000002000052aa43 : mov r8b, r13b ; jbe 0x2000052aa97 ; ret 0x44ff
0x000002000052aa42 : mov r8b, r13b ; jbe 0x2000052aa98 ; ret 0x44ff
0x000002000050af2d : mov r8b, r13b ; lodsb al, byte ptr [rsi] ; push rsp ; ret
0x00000200003f7f16 : mov r8d, 0x10000 ; mov eax, r8d ; ret
0x000002000052c92b : mov r8d, 0x104 ; call 0x2000014f4c9
0x00000200001ae6b6 : mov r8d, 0x20 ; call 0x2000014a8e8
0x000002000052b6b3 : mov r8d, 0x2010 ; call 0x2000014f4c9
0x000002000060311c : mov r8d, 0x20207050 ; call 0x20000231ce9
0x000002000052b69f : mov r8d, 0x208 ; call 0x2000014f4c9
0x0000020000604fb8 : mov r8d, 0x30706e50 ; call 0x20000231ce9
0x0000020000610cb9 : mov r8d, 0x34706e50 ; call 0x20000231ce9
0x000002000065e82c : mov r8d, 0x40000002 ; call 0x2000005ab18
0x0000020000604130 : mov r8d, 0x47706e50 ; call 0x20000231ce9
0x000002000060eefb : mov r8d, 0x51706e50 ; call 0x20000231ce9
0x00000200006101ba : mov r8d, 0x57706e50 ; call 0x20000231ce9
0x00000200006061d2 : mov r8d, 0x58706e50 ; call 0x20000231ce9
0x0000020000607023 : mov r8d, 0x63647050 ; call 0x20000231ce9
0x00000200004e5ac2 : mov r8d, 0x646f6e44 ; call 0x20000231ce8
0x0000020000485a52 : mov r8d, 0x6e494d43 ; call 0x20000231ce8
0x00000200005059e6 : mov r8d, 0x6e5a6d43 ; call 0x20000231ce8
0x00000200001159e0 : mov r8d, 0x70696d57 ; call 0x20000231ce8
0x0000020000665a44 : mov r8d, 0x78777445 ; call 0x20000231ce8
0x000002000042a741 : mov r8d, 0x80 ; call 0x20000046a2c
0x000002000065e8da : mov r8d, 0x80000 ; call 0x2000005ab18
0x000002000052a17d : mov r8d, 0x98 ; call 0x2000014f4c9
0x00000200005212dc : mov r8d, 0xa0 ; call 0x2000014f4c9
0x00000200005fc536 : mov r8d, 0xc000000d ; mov eax, r8d ; ret
0x00000200001bfab2 : mov r8d, 0xc000000e ; mov eax, r8d ; ret
0x000002000021a0a6 : mov r8d, 0xc0000060 ; mov eax, r8d ; ret
0x000002000051fee4 : mov r8d, 0xf4 ; call 0x2000014f4c9
0x00000200004f129d : mov r8d, 0xfe418d45 ; call qword ptr [rbx]
0x0000020000694e86 : mov r8d, 0xfe418d45 ; call rbx
0x0000020000786a59 : mov r8d, 0xff000000 ; or edx, 0xffffffff ; call qword ptr [rax]
0x0000020000419f02 : mov r8d, 0xff418d45 ; call rbx
0x0000020000434823 : mov r8d, 1 ; call 0x2000005ab19
0x0000020000512e0a : mov r8d, 1 ; call 0x20000140489
0x000002000011c505 : mov r8d, 1 ; mov al, r8b ; ret
0x000002000009912a : mov r8d, 1 ; mov eax, r8d ; ret
0x000002000048ad91 : mov r8d, 2 ; call 0x20000067014
0x0000020000475d2a : mov r8d, 2 ; call 0x200000a4fb9
0x00000200005ad710 : mov r8d, 6 ; call rax
0x00000200001ae5da : mov r8d, 8 ; call 0x2000014a8e8
0x00000200004c2f5b : mov r8d, dword ptr [rbp + 0x60] ; mov rcx, rsi ; call 0x2000014f189
0x00000200005d016d : mov r8d, dword ptr [rbx] ; mov rcx, rbp ; call rax
0x00000200004356ff : mov r8d, dword ptr [rsi + 4] ; mov dl, byte ptr [rsi + 1] ; mov cl, byte ptr [rsi] ; call rax
0x00000200004ce8a3 : mov r8d, eax ; call rsi
0x000002000039c542 : mov r8d, eax ; mov eax, r8d ; ret
0x00000200005269e0 : mov r8d, ebx ; call 0x2000014f4c6
0x00000200005ea365 : mov r8d, ebx ; call 0x200005ea799
0x00000200005e1838 : mov r8d, ebx ; call rax
0x000002000058304f : mov r8d, ebx ; mov cl, 0x15 ; call r10
0x00000200005830d6 : mov r8d, ebx ; mov cl, 0x15 ; call rax
0x00000200005b41ac : mov r8d, ebx ; mov cl, 0xc ; call r10
0x00000200005b43af : mov r8d, ebx ; mov cl, 0xc ; call rax
0x00000200005d3364 : mov r8d, ebx ; mov rdx, r14 ; call rax
0x00000200004fcce8 : mov r8d, ebx ; mov rdx, rbp ; call rax
0x00000200005bf08f : mov r8d, ebx ; movzx edx, bl ; call 0x200001e1ba1
0x000002000050e3d9 : mov r8d, edi ; call 0x20000135bf2
0x00000200006b9a40 : mov r8d, edi ; call rax
0x0000020000604434 : mov r8d, edi ; mov rdx, r12 ; mov rcx, r14 ; call rax
0x0000020000693d17 : mov r8d, edi ; mov rdx, rbp ; call rax
0x0000020000694e2c : mov r8d, edi ; mov rdx, rsi ; call rax
0x00000200005b329a : mov r8d, edi ; xor edx, edx ; call 0x2000014f4c7
0x00000200006160b0 : mov r8d, edx ; call 0x200004e22c5
0x000002000013b94a : mov r8d, edx ; jmp 0x2000013b96e
0x000002000013b949 : mov r8d, edx ; jmp 0x2000013b96f
0x00000200001f5480 : mov r8d, edx ; jmp 0x200001f548a
0x000002000015f947 : mov r8d, edx ; xor edx, edx ; call r10
0x0000020000579aa9 : mov r8d, esi ; call 0x200001a6b62
0x0000020000579aa9 : mov r8d, esi ; call 0x200001a6b65
0x00000200006b85e3 : mov r8d, esi ; call rbx
0x00000200005953a6 : mov r8d, esi ; mov rdx, rbp ; call rax
0x0000020000085b99 : mov r8d, r10d ; jmp 0x20000085a1d
0x00000200000fee86 : mov r8d, r10d ; jmp 0x200000fee25
0x00000200001142bb : mov r8d, r10d ; jmp 0x20000114287
0x00000200001d731a : mov r8d, r10d ; jmp 0x200001d732b
0x00000200001d7319 : mov r8d, r10d ; jmp 0x200001d732c
0x00000200004b443e : mov r8d, r11d ; mov rdx, rsi ; mov ecx, ebx ; call rax
0x0000020000465469 : mov r8d, r12d ; mov rdx, r14 ; mov rcx, r15 ; call rax
0x000002000057af91 : mov r8d, r14d ; mov rcx, r15 ; call 0x200001a6b65
0x000002000067da54 : mov r8d, r14d ; mov rdx, r15 ; movzx ecx, bx ; call rax
0x00000200004091c7 : mov r8d, r14d ; mov rdx, rsi ; mov rcx, rbp ; call rax
0x0000020000694745 : mov r8d, r15d ; mov rdx, r14 ; mov rcx, rsi ; call rax
0x00000200005101ac : mov r8d, r9d ; call rdi
0x00000200001b1e54 : mov r9, qword ptr [rip + 0x12061d] ; call r9
0x00000200001b1513 : mov r9, qword ptr [rip + 0x120f5e] ; call r9
0x00000200001afe1b : mov r9, qword ptr [rip + 0x122656] ; call r9
0x00000200001afa83 : mov r9, qword ptr [rip + 0x1229ee] ; call r9
0x00000200001af703 : mov r9, qword ptr [rip + 0x122d6e] ; call r9
0x00000200001ae1c7 : mov r9, qword ptr [rip + 0x1242aa] ; call r9
0x00000200001ad741 : mov r9, qword ptr [rip + 0x124d30] ; call r9
0x00000200001ad469 : mov r9, qword ptr [rip + 0x125008] ; call r9
0x00000200001acf0a : mov r9, qword ptr [rip + 0x125567] ; call r9
0x00000200001acdd1 : mov r9, qword ptr [rip + 0x1256a0] ; call r9
0x00000200001acbd5 : mov r9, qword ptr [rip + 0x12589c] ; call r9
0x00000200001ac3a1 : mov r9, qword ptr [rip + 0x1260d0] ; call r9
0x00000200000e3dd9 : mov r9, r14 ; mov r8, r13 ; mov rcx, r15 ; call rax
0x00000200006c07c3 : mov r9, rbx ; call rax
0x00000200004e4e9f : mov r9, rcx ; jne 0x200004e4eae ; mov al, 1 ; ret
0x0000020000499874 : mov r9, rcx ; mov rcx, rdx ; call 0x200000bc289
0x000002000061015b : mov r9b, 0xe8 ; jle 0x20000610180 ; ret 0x48ff
0x00000200003beae8 : mov r9b, 1 ; mov al, r9b ; ret
0x0000020000203510 : mov r9d, 0xc000000d ; mov eax, r9d ; ret
0x00000200006b538d : mov r9d, 1 ; mov eax, r9d ; ret
0x000002000050e817 : mov r9d, 2 ; call rax
0x0000020000694f94 : mov r9d, 3 ; call rax
0x00000200004ce8a0 : mov r9d, eax ; mov r8d, eax ; call rsi
0x0000020000513019 : mov r9d, ebx ; call 0x20000140466
0x00000200005799eb : mov r9d, ebx ; xor edx, edx ; call 0x200001a6b64
0x000002000003991c : mov r9d, ecx ; mov r14, rax ; jmp 0x200000398ee
0x0000020000488e8e : mov r9d, edx ; add rax, r9 ; mov dword ptr [r8], edx ; ret
0x00000200004252ff : mov r9d, edx ; je 0x20000425312 ; add rsp, 0x28 ; ret
0x0000020000213f04 : mov r9d, esi ; mov edx, r15d ; call rax
0x00000200001f547d : mov r9d, r11d ; mov r8d, edx ; jmp 0x200001f548d
0x0000020000679927 : mov r9d, r14d ; call r10
0x00000200001d2791 : mov r9d, r15d ; call qword ptr [rbx]
0x000002000045d05b : mov r9d, r8d ; mov r8, r12 ; call r10
0x0000020000082b0f : mov rax, -2 ; ret
0x000002000006f1de : mov rax, cr0 ; add rsp, 0x28 ; ret
0x000002000021ddd1 : mov rax, cr0 ; cmp al, 2 ; jae 0x2000021dde4 ; xor eax, eax ; ret
0x000002000010c669 : mov rax, cr0 ; ret
0x0000020000037720 : mov rax, cr3 ; mov cr3, rax ; ret
0x000002000006f1dd : mov rax, cr8 ; add rsp, 0x28 ; ret
0x000002000010c668 : mov rax, cr8 ; ret
0x00000200004e8bc6 : mov rax, dr0 ; mov word ptr [rdx], ax ; ret
0x0000020000044b01 : mov rax, qword ptr [0x188] ; ret
0x0000020000754df8 : mov rax, qword ptr [r13 + rcx*8 + 0x18] ; xor ecx, ecx ; call rax
0x00000200001f0ab7 : mov rax, qword ptr [r8 + 0x430] ; ret
0x00000200000844ce : mov rax, qword ptr [r8 + rcx + 0x2f] ; ret
0x00000200001e27c0 : mov rax, qword ptr [r8 + rcx + 0x50] ; mov qword ptr [r9], rax ; ret
0x0000020000071291 : mov rax, qword ptr [r8] ; lock dec dword ptr [rax + 0xc] ; ret
0x00000200001f3312 : mov rax, qword ptr [r8] ; test rax, r9 ; sete al ; ret
0x00000200005272f4 : mov rax, qword ptr [r9 + 0x10] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200006816de : mov rax, qword ptr [r9 + 0x18] ; add rax, rdx ; ret
0x000002000014f7b5 : mov rax, qword ptr [r9 + rcx*8] ; mov rax, qword ptr [rax + r8*8 + 8] ; ret
0x0000020000190418 : mov rax, qword ptr [rax + 0x10] ; ret
0x000002000041b6d4 : mov rax, qword ptr [rax + 0x10] ; test rax, rax ; jne 0x2000041b6d8 ; ret
0x0000020000008612 : mov rax, qword ptr [rax + 0x1380] ; ret
0x0000020000012cfd : mov rax, qword ptr [rax + 0x1648] ; ret
0x0000020000045861 : mov rax, qword ptr [rax + 0x1650] ; ret
0x000002000000864e : mov rax, qword ptr [rax + 0x1700] ; ret
0x00000200000082d2 : mov rax, qword ptr [rax + 0x1740] ; ret
0x000002000000863a : mov rax, qword ptr [rax + 0x1748] ; ret
0x0000020000008626 : mov rax, qword ptr [rax + 0x17e8] ; ret
0x00000200000435d5 : mov rax, qword ptr [rax + 0x18] ; ret
0x000002000001e17a : mov rax, qword ptr [rax + 0x1c8] ; ret
0x00000200003cbebd : mov rax, qword ptr [rax + 0x20] ; ret
0x00000200000424a5 : mov rax, qword ptr [rax + 0x220] ; ret
0x0000020000230c9c : mov rax, qword ptr [rax + 0x238] ; jmp rax
0x0000020000190414 : mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax + 0x10] ; ret
0x00000200000bc295 : mov rax, qword ptr [rax + 0x28] ; mov rax, qword ptr [rax] ; ret
0x000002000054203c : mov rax, qword ptr [rax + 0x28] ; ret
0x00000200006c1e8a : mov rax, qword ptr [rax + 0x30] ; add rsp, 0x28 ; ret
0x00000200001f0a75 : mov rax, qword ptr [rax + 0x30] ; ret
0x00000200001b2a58 : mov rax, qword ptr [rax + 0x30] ; test rax, rax ; je 0x200001b2a6c ; call rax
0x000002000014f6f4 : mov rax, qword ptr [rax + 0x38] ; ret
0x0000020000022c50 : mov rax, qword ptr [rax + 0x3a8] ; ret
0x0000020000058608 : mov rax, qword ptr [rax + 0x40] ; ret
0x00000200001cd120 : mov rax, qword ptr [rax + 0x480] ; ret
0x00000200003cbeb9 : mov rax, qword ptr [rax + 0x48] ; mov rax, qword ptr [rax + 0x20] ; ret
0x000002000011e7cd : mov rax, qword ptr [rax + 0x48] ; ret
0x00000200001b2b34 : mov rax, qword ptr [rax + 0x48] ; test rax, rax ; je 0x200001b2b48 ; call rax
0x00000200001a591f : mov rax, qword ptr [rax + 0x60] ; and rax, 0xfffffffffffffff0 ; ret
0x00000200001b2a1c : mov rax, qword ptr [rax + 0x60] ; test rax, rax ; je 0x200001b2a30 ; call rax
0x00000200000442e9 : mov rax, qword ptr [rax + 0x628] ; ret
0x000002000002f889 : mov rax, qword ptr [rax + 0x630] ; ret
0x0000020000022659 : mov rax, qword ptr [rax + 0x670] ; ret
0x000002000040703c : mov rax, qword ptr [rax + 0x678] ; ret
0x0000020000125254 : mov rax, qword ptr [rax + 0x70] ; test rax, rax ; jne 0x20000125267 ; ret
0x000002000001aef9 : mov rax, qword ptr [rax + 0x740] ; ret
0x0000020000021be9 : mov rax, qword ptr [rax + 0xb8] ; ret
0x000002000076ecc3 : mov rax, qword ptr [rax + 0xd8] ; ret
0x0000020000760e9a : mov rax, qword ptr [rax + 8] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c0cec : mov rax, qword ptr [rax + 8] ; call rax
0x000002000003cd03 : mov rax, qword ptr [rax + 8] ; mov qword ptr [rdx], rax ; ret
0x00000200000210e8 : mov rax, qword ptr [rax + 8] ; ret
0x00000200000bcc79 : mov rax, qword ptr [rax + 8] ; test rax, rax ; je 0x200000bcc8c ; ret
0x000002000014f7b9 : mov rax, qword ptr [rax + r8*8 + 8] ; ret
0x000002000018129a : mov rax, qword ptr [rax + r9 + 0x30] ; ret
0x00000200005360c6 : mov rax, qword ptr [rax + rcx*8] ; lea rcx, qword ptr [rdi + 0x59] ; call rax
0x0000020000595a81 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; call rax
0x000002000009b45b : mov rax, qword ptr [rax + rcx*8] ; ret
0x00000200000082b9 : mov rax, qword ptr [rax + rcx] ; ret
0x00000200000b27e4 : mov rax, qword ptr [rax + rdx*8] ; ret
0x00000200000b03d2 : mov rax, qword ptr [rax] ; mov qword ptr [rdx + 0x10], rax ; ret
0x0000020000024261 : mov rax, qword ptr [rax] ; mov qword ptr [rdx], rax ; ret
0x000002000002aabd : mov rax, qword ptr [rax] ; ret
0x00000200001b2ad4 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x200001b2ae6 ; call rax
0x00000200003c9ac6 : mov rax, qword ptr [rax] ; test rax, rax ; jne 0x200003c9ac3 ; jmp 0x200003c9a9b
0x000002000014ed95 : mov rax, qword ptr [rbp - 0x78] ; add rsp, 0x28 ; ret
0x00000200004453d1 : mov rax, qword ptr [rbx + 0x20] ; test rax, rax ; je 0x200004453e9 ; call rax
0x00000200006413b1 : mov rax, qword ptr [rbx + 0x30] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000399ab : mov rax, qword ptr [rbx + 0x50] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006bd84b : mov rax, qword ptr [rbx + 0x58] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000315ad : mov rax, qword ptr [rbx + 8] ; mov r8, r14 ; call rax
0x000002000040f67b : mov rax, qword ptr [rbx + rax*8] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001b6a37 : mov rax, qword ptr [rbx] ; not rax ; or rax, rdx ; jmp 0x200001b6a59
0x0000020000059a8c : mov rax, qword ptr [rcx + 0x10] ; ret
0x0000020000407db4 : mov rax, qword ptr [rcx + 0x18] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x0000020000082c1b : mov rax, qword ptr [rcx + 0x18] ; ret
0x0000020000026470 : mov rax, qword ptr [rcx + 0x1c8] ; ret
0x00000200003bb01d : mov rax, qword ptr [rcx + 0x20] ; and qword ptr [rcx + 0x20], 0 ; ret
0x00000200005461d0 : mov rax, qword ptr [rcx + 0x20] ; ret
0x0000020000036488 : mov rax, qword ptr [rcx + 0x220] ; ret
0x00000200001c3d35 : mov rax, qword ptr [rcx + 0x28] ; mov qword ptr [rdx], rax ; ret
0x0000020000042d8d : mov rax, qword ptr [rcx + 0x28] ; ret
0x000002000042fe10 : mov rax, qword ptr [rcx + 0x28] ; shr rax, 0xc ; ret
0x0000020000457136 : mov rax, qword ptr [rcx + 0x28] ; test rax, rax ; je 0x20000457151 ; call rax
0x0000020000045a0c : mov rax, qword ptr [rcx + 0x2e8] ; ret
0x000002000003620c : mov rax, qword ptr [rcx + 0x308] ; ret
0x00000200003bb03d : mov rax, qword ptr [rcx + 0x30] ; and qword ptr [rcx + 0x30], 0 ; ret
0x00000200000376a0 : mov rax, qword ptr [rcx + 0x30] ; dec edx ; mov dword ptr [rax + 4], edx ; ret
0x000002000014f6f0 : mov rax, qword ptr [rcx + 0x30] ; mov rax, qword ptr [rax + 0x38] ; ret
0x00000200003bb6fc : mov rax, qword ptr [rcx + 0x30] ; test rax, rax ; jne 0x200003bb70f ; ret
0x00000200000313fc : mov rax, qword ptr [rcx + 0x3a8] ; ret
0x0000020000038e04 : mov rax, qword ptr [rcx + 0x3b0] ; ret
0x0000020000050384 : mov rax, qword ptr [rcx + 0x3c0] ; ret
0x000002000003b4bc : mov rax, qword ptr [rcx + 0x3d8] ; ret
0x0000020000040cdc : mov rax, qword ptr [rcx + 0x3e0] ; ret
0x00000200000376ac : mov rax, qword ptr [rcx + 0x3f8] ; ret
0x000002000003f164 : mov rax, qword ptr [rcx + 0x420] ; ret
0x0000020000041cd8 : mov rax, qword ptr [rcx + 0x450] ; ret
0x0000020000029b44 : mov rax, qword ptr [rcx + 0x458] ; ret
0x000002000041b1b8 : mov rax, qword ptr [rcx + 0x460] ; ret
0x0000020000023185 : mov rax, qword ptr [rcx + 0x58] ; and rax, 0xfffffffffffffff9 ; ret
0x00000200001f0acc : mov rax, qword ptr [rcx + 0x5d8] ; ret
0x00000200000226b3 : mov rax, qword ptr [rcx + 0x60] ; add rsp, 0x28 ; ret
0x00000200001aad5a : mov rax, qword ptr [rcx + 0x60] ; and qword ptr [rcx + 0x60], 0 ; ret
0x0000020000038734 : mov rax, qword ptr [rcx + 0x628] ; ret
0x0000020000033d48 : mov rax, qword ptr [rcx + 0x630] ; ret
0x00000200000f8924 : mov rax, qword ptr [rcx + 0x678] ; ret
0x000002000003c235 : mov rax, qword ptr [rcx + 0x680] ; ret
0x00000200003f0947 : mov rax, qword ptr [rcx + 0x70] ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x00000200001c5499 : mov rax, qword ptr [rcx + 0x778] ; ret
0x00000200001c54a1 : mov rax, qword ptr [rcx + 0x780] ; ret
0x00000200000681f2 : mov rax, qword ptr [rcx + 0x7b0] ; ret
0x000002000007071a : mov rax, qword ptr [rcx + 0x7b8] ; ret
0x000002000002f544 : mov rax, qword ptr [rcx + 0xf0] ; ret
0x0000020000149100 : mov rax, qword ptr [rcx + 8] ; and al, 0xf0 ; ret
0x0000020000039b70 : mov rax, qword ptr [rcx + 8] ; btr dword ptr [rax], edx ; ret
0x00000200001f33b8 : mov rax, qword ptr [rcx + 8] ; btr qword ptr [rax], rdx ; ret
0x0000020000039938 : mov rax, qword ptr [rcx + 8] ; bts dword ptr [rax], edx ; ret
0x00000200001f474c : mov rax, qword ptr [rcx + 8] ; bts qword ptr [rax], rdx ; ret
0x0000020000059924 : mov rax, qword ptr [rcx + 8] ; ret
0x000002000011c515 : mov rax, qword ptr [rcx + 8] ; test rax, rax ; je 0x2000011c528 ; ret
0x000002000003105c : mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000030f17 : mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000052049 : mov rax, qword ptr [rcx + rbx*8] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000634509 : mov rax, qword ptr [rcx] ; add rax, 8 ; ret
0x000002000002d533 : mov rax, qword ptr [rcx] ; and rax, 0xfffffffffffffffc ; ret
0x00000200000bab13 : mov rax, qword ptr [rcx] ; cmp rdx, rax ; ja 0x200000bab28 ; ret
0x000002000002da8c : mov rax, qword ptr [rcx] ; inc rax ; mov qword ptr [rcx], rax ; ret
0x00000200003e71a5 : mov rax, qword ptr [rcx] ; mov rax, qword ptr [rax + 0x20] ; ret
0x000002000021ecda : mov rax, qword ptr [rcx] ; or rax, rdx ; jmp 0x2000021ecf3
0x000002000006811a : mov rax, qword ptr [rcx] ; test al, 1 ; jne 0x20000068129 ; ret
0x00000200000435cc : mov rax, qword ptr [rcx] ; test rax, rax ; jne 0x200000435dd ; ret
0x00000200006b6e62 : mov rax, qword ptr [rcx] ; test rax, rax ; jne 0x200006b6e48 ; ret
0x000002000051e234 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rcx], rax ; jmp 0x2000051e208
0x000002000068168a : mov rax, qword ptr [rdx + 0x18] ; add rax, rcx ; ret
0x00000200006bf623 : mov rax, qword ptr [rdx + 0x18] ; mov qword ptr [rcx], rax ; ret
0x000002000002317d : mov rax, qword ptr [rdx + 0x220] ; ret
0x00000200006b8133 : mov rax, qword ptr [rdx + 0x30] ; mov qword ptr [rcx + 8], rax ; ret
0x000002000041caf7 : mov rax, qword ptr [rdx + 0x38] ; ret
0x000002000003246c : mov rax, qword ptr [rdx + 0x40] ; ret
0x0000020000023192 : mov rax, qword ptr [rdx + 0xb8] ; ret
0x000002000003b030 : mov rax, qword ptr [rdx + 8] ; mov qword ptr [rcx + 8], rax ; ret
0x00000200000f73b4 : mov rax, qword ptr [rdx + 8] ; mov qword ptr [rdx + 0x30], rax ; ret
0x00000200001fd9e3 : mov rax, qword ptr [rdx] ; and rax, 0xfffff000 ; ret
0x000002000040bf38 : mov rax, qword ptr [rdx] ; mov qword ptr [rcx], rax ; ret
0x00000200001c9e40 : mov rax, qword ptr [rip + 0x105009] ; call qword ptr [rax]
0x00000200001c9dd4 : mov rax, qword ptr [rip + 0x105075] ; call qword ptr [rax]
0x00000200001afb22 : mov rax, qword ptr [rip + 0x12294f] ; call rax
0x00000200001af833 : mov rax, qword ptr [rip + 0x122c3e] ; call rax
0x00000200001af1de : mov rax, qword ptr [rip + 0x123293] ; call rax
0x00000200001aec9e : mov rax, qword ptr [rip + 0x1237d3] ; call rax
0x00000200001ae928 : mov rax, qword ptr [rip + 0x123b49] ; call rax
0x00000200001ae39a : mov rax, qword ptr [rip + 0x1240d7] ; call rax
0x00000200001ae2fc : mov rax, qword ptr [rip + 0x124175] ; call rax
0x00000200001ae27e : mov rax, qword ptr [rip + 0x1241f3] ; call rax
0x00000200001ae137 : mov rax, qword ptr [rip + 0x12433a] ; call rax
0x00000200001adfad : mov rax, qword ptr [rip + 0x1244c4] ; call rax
0x00000200001add08 : mov rax, qword ptr [rip + 0x124769] ; call rax
0x00000200001adb06 : mov rax, qword ptr [rip + 0x12496b] ; call rax
0x00000200001ada48 : mov rax, qword ptr [rip + 0x124a29] ; call rax
0x00000200001ad948 : mov rax, qword ptr [rip + 0x124b29] ; call rax
0x00000200001acf7b : mov rax, qword ptr [rip + 0x1254f6] ; call rax
0x00000200001abfd2 : mov rax, qword ptr [rip + 0x12649f] ; call rax
0x00000200001ab959 : mov rax, qword ptr [rip + 0x126b18] ; call rax
0x00000200001ab3a9 : mov rax, qword ptr [rip + 0x1270c8] ; call rax
0x00000200001ab175 : mov rax, qword ptr [rip + 0x1272fc] ; call rax
0x000002000019eca2 : mov rax, qword ptr [rip + 0x13a2f7] ; call rax
0x000002000019ec78 : mov rax, qword ptr [rip + 0x13a321] ; call rax
0x000002000019eba9 : mov rax, qword ptr [rip + 0x13a3f0] ; call rax
0x000002000016d65a : mov rax, qword ptr [rip + 0x164e17] ; call rax
0x000002000013764c : mov rax, qword ptr [rip + 0x18c9bd] ; ret
0x00000200001c0d20 : mov rax, qword ptr [rip + 0x1be881] ; ret
0x00000200001b7d9f : mov rax, qword ptr [rip + 0x1c7702] ; call rax
0x00000200001a9fd6 : mov rax, qword ptr [rip + 0x1d54cb] ; call rax
0x00000200001a9f5d : mov rax, qword ptr [rip + 0x1d5544] ; call rax
0x000002000019ebd5 : mov rax, qword ptr [rip + 0x1df5bc] ; call rax
0x000002000017f7d3 : mov rax, qword ptr [rip + 0x1ffcce] ; call rax
0x000002000017390c : mov rax, qword ptr [rip + 0x20bb95] ; call rax
0x00000200001400ac : mov rax, qword ptr [rip + 0x23e00d] ; call rax
0x000002000011e6cc : mov rax, qword ptr [rip + 0x260dd5] ; call rax
0x000002000011e5c5 : mov rax, qword ptr [rip + 0x260edc] ; call rax
0x000002000011e2b1 : mov rax, qword ptr [rip + 0x2611f0] ; call rax
0x000002000011e15d : mov rax, qword ptr [rip + 0x261344] ; call rax
0x000002000011e0b6 : mov rax, qword ptr [rip + 0x2613eb] ; call rax
0x00000200000f30d9 : mov rax, qword ptr [rip + 0x28b0b8] ; call rax
0x00000200000f2fe0 : mov rax, qword ptr [rip + 0x28b1b1] ; call rax
0x00000200000eae62 : mov rax, qword ptr [rip + 0x29463f] ; call rax
0x00000200000ead6f : mov rax, qword ptr [rip + 0x294732] ; call rax
0x00000200000ea757 : mov rax, qword ptr [rip + 0x294d4a] ; call rax
0x00000200000ea614 : mov rax, qword ptr [rip + 0x294e8d] ; call rax
0x00000200000ea5d7 : mov rax, qword ptr [rip + 0x294eca] ; call rax
0x00000200000ea43c : mov rax, qword ptr [rip + 0x295065] ; call rax
0x00000200000ea3ee : mov rax, qword ptr [rip + 0x2950b3] ; call rax
0x00000200000ea2a7 : mov rax, qword ptr [rip + 0x2951fa] ; call rax
0x00000200000082c0 : mov rax, qword ptr [rip + 0x2f44c9] ; ret
0x000002000007d6fa : mov rax, qword ptr [rip + 0x301da7] ; call rax
0x000002000007c894 : mov rax, qword ptr [rip + 0x302c0d] ; call rax
0x000002000007c7e6 : mov rax, qword ptr [rip + 0x302cbb] ; call rax
0x000002000007c735 : mov rax, qword ptr [rip + 0x302d6c] ; call rax
0x000002000007c686 : mov rax, qword ptr [rip + 0x302e1b] ; call rax
0x000002000007c58e : mov rax, qword ptr [rip + 0x302f13] ; call rax
0x000002000007c540 : mov rax, qword ptr [rip + 0x302f61] ; call rax
0x0000020000044783 : mov rax, qword ptr [rip + 0x33ad1e] ; call rax
0x0000020000044726 : mov rax, qword ptr [rip + 0x33ad7b] ; call rax
0x000002000003d1d2 : mov rax, qword ptr [rip + 0x3422cf] ; call rax
0x000002000003c130 : mov rax, qword ptr [rip + 0x343371] ; call rax
0x000002000003c0b5 : mov rax, qword ptr [rip + 0x3433ec] ; call rax
0x000002000003590f : mov rax, qword ptr [rip + 0x349b92] ; call rax
0x0000020000035794 : mov rax, qword ptr [rip + 0x349d0d] ; call rax
0x00000200000064b4 : mov rax, qword ptr [rip + 0x6f2dc5] ; ret
0x000002000021347c : mov rax, qword ptr [rip + 0xbeff5] ; call rax
0x000002000059b5b2 : mov rax, qword ptr [rip - 0x2cbe01] ; call rax
0x000002000059b5ca : mov rax, qword ptr [rip - 0x2cbe29] ; call rax
0x000002000059b5dc : mov rax, qword ptr [rip - 0x2cbe43] ; call rax
0x0000020000673188 : mov rax, qword ptr [rip - 0x3a3957] ; call rax
0x00000200003f866a : mov rax, qword ptr [rip - 0x793a9] ; call rax
0x00000200003f8bac : mov rax, qword ptr [rip - 0x798eb] ; call rax
0x00000200003f940a : mov rax, qword ptr [rip - 0x7a149] ; call rax
0x00000200003fa4d9 : mov rax, qword ptr [rip - 0x7b218] ; call rax
0x00000200003b2437 : mov rax, qword ptr [rip - 0xd9716] ; call rax
0x000002000060f575 : mov rax, qword ptr [rsi + 0x38] ; call rax
0x000002000001a5e5 : mov rax, qword ptr [rsi + rdx*8] ; mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x2000001a5e6
0x00000200003e38ef : mov rax, qword ptr [rsp + 0x20] ; add rsp, 0x38 ; ret
0x0000020000206fe0 : mov rax, qword ptr [rsp + 0x28] ; jmp rax
0x000002000064f7fc : mov rax, qword ptr [rsp + 0x28] ; mov byte ptr [rax], 0 ; ret
0x000002000064f7de : mov rax, qword ptr [rsp + 0x28] ; mov byte ptr [rax], 1 ; ret
0x00000200001ad2a8 : mov rax, qword ptr [rsp + 0x30] ; add rsp, 0x28 ; ret
0x00000200001c0136 : mov rax, qword ptr [rsp + 0x30] ; add rsp, 0x48 ; ret
0x00000200006bede4 : mov rax, qword ptr [rsp + 0x30] ; jmp rax
0x000002000010f1c5 : mov rax, qword ptr [rsp + 0x30] ; mov qword ptr [rax], r10 ; ret
0x000002000005abd6 : mov rax, qword ptr [rsp + 0x38] ; add rsp, 0x28 ; ret
0x0000020000206fe8 : mov rax, qword ptr [rsp + 0x38] ; jmp rax
0x0000020000032681 : mov rax, qword ptr [rsp + 0x40] ; add rsp, 0x28 ; ret
0x00000200001b7ce6 : mov rax, qword ptr [rsp + 0x40] ; add rsp, 0x38 ; ret
0x0000020000207090 : mov rax, qword ptr [rsp + 0x40] ; jmp rax
0x00000200006b0622 : mov rax, qword ptr [rsp + 0x48] ; jmp rax
0x0000020000206fd6 : mov rax, qword ptr [rsp + 0x50] ; jmp rax
0x0000020000045b21 : mov rax, qword ptr [rsp + 0x58] ; add rsp, 0x38 ; ret
0x00000200004d8029 : mov rax, qword ptr [rsp + 0x60] ; add rsp, 0x48 ; ret
0x00000200004e8bad : mov rax, qword ptr [rsp + 0x68] ; add rsp, 0x48 ; ret
0x00000200003ec3d7 : mov rax, qword ptr [rsp + 0x70] ; call rax
0x000002000014f771 : mov rax, qword ptr [rsp + 8] ; ret
0x000002000014f6fc : mov rax, qword ptr [rsp] ; ret
0x0000020000044b00 : mov rax, qword ptr gs:[0x188] ; ret
0x000002000003b596 : mov rax, r10 ; add rsp, 0x28 ; ret
0x00000200007628f4 : mov rax, r10 ; jmp 0x200007628d0
0x00000200001491ee : mov rax, r10 ; pop rbx ; ret
0x000002000010cbb5 : mov rax, r10 ; ret
0x0000020000126bb8 : mov rax, r11 ; ret
0x0000020000073950 : mov rax, r8 ; add rsp, 0x28 ; ret
0x000002000010a203 : mov rax, r8 ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000062dc5 : mov rax, r8 ; add rsp, 0x38 ; ret
0x000002000069db6f : mov rax, r8 ; add rsp, 0x40 ; pop rbx ; ret
0x000002000012ffe9 : mov rax, r8 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000149137 : mov rax, r8 ; pop rbx ; ret
0x00000200001497e4 : mov rax, r8 ; pop rsi ; pop rdi ; ret
0x000002000001401e : mov rax, r8 ; ret
0x000002000048cacb : mov rax, r8 ; shr rax, 1 ; ret
0x000002000014f628 : mov rax, r8 ; shr rdx, 0x20 ; wrmsr ; ret
0x00000200000b75ad : mov rax, r9 ; add rsp, 0x28 ; ret
0x0000020000167e80 : mov rax, r9 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000063568 : mov rax, r9 ; mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x000002000001e8e5 : mov rax, r9 ; ret
0x000002000001ab73 : mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003c94c : mov rax, rbx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001d2e0b : mov rax, rbx ; add rsp, 0x40 ; pop rbx ; ret
0x00000200001445d0 : mov rax, rbx ; pop rbx ; ret
0x00000200001f44a8 : mov rax, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011bc89 : mov rax, rcx ; add rsp, 0x20 ; pop rdi ; ret
0x000002000002d814 : mov rax, rcx ; add rsp, 0x28 ; ret
0x0000020000027363 : mov rax, rcx ; add rsp, 0x38 ; ret
0x00000200001f4f61 : mov rax, rcx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000005c7a8 : mov rax, rcx ; add rsp, 0x48 ; ret
0x00000200000220fa : mov rax, rcx ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000001f41f : mov rax, rcx ; ret
0x000002000001b35e : mov rax, rdi ; add rsp, 0x20 ; pop rdi ; ret
0x000002000011bb35 : mov rax, rdi ; add rsp, 0x40 ; pop rdi ; ret
0x00000200001497cc : mov rax, rdi ; pop rsi ; pop rdi ; ret
0x0000020000046af6 : mov rax, rdx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000479624 : mov rax, rdx ; add rsp, 0x28 ; ret
0x00000200001334ee : mov rax, rdx ; add rsp, 0x38 ; ret
0x00000200001fb5b5 : mov rax, rdx ; add rsp, 0x48 ; ret
0x00000200001491ad : mov rax, rdx ; and al, 0xf0 ; pop rbx ; ret
0x000002000010de3e : mov rax, rdx ; cqo ; idiv rcx ; ret
0x000002000007798b : mov rax, rdx ; jmp 0x20000077952
0x000002000013e0c6 : mov rax, rdx ; jmp 0x2000013e0cf
0x000002000013ee82 : mov rax, rdx ; jmp 0x2000013ee8b
0x000002000013f198 : mov rax, rdx ; jmp 0x2000013f1a1
0x000002000013f57c : mov rax, rdx ; jmp 0x2000013f585
0x00000200001a36b0 : mov rax, rdx ; jmp 0x200001a36cc
0x0000020000221cf3 : mov rax, rdx ; jmp 0x20000221cfc
0x0000020000222430 : mov rax, rdx ; jmp 0x20000222439
0x0000020000222746 : mov rax, rdx ; jmp 0x2000022274f
0x000002000022298f : mov rax, rdx ; jmp 0x20000222998
0x0000020000222afe : mov rax, rdx ; jmp 0x20000222b07
0x0000020000222d9b : mov rax, rdx ; jmp 0x20000222da4
0x00000200002230d1 : mov rax, rdx ; jmp 0x200002230da
0x00000200002231ec : mov rax, rdx ; jmp 0x2000022325e
0x0000020000223366 : mov rax, rdx ; jmp 0x2000022336f
0x000002000022348e : mov rax, rdx ; jmp 0x20000223497
0x0000020000224303 : mov rax, rdx ; jmp 0x2000022430c
0x0000020000224da8 : mov rax, rdx ; jmp 0x20000224db1
0x0000020000225796 : mov rax, rdx ; jmp 0x2000022579f
0x0000020000225a5f : mov rax, rdx ; jmp 0x20000225a71
0x0000020000226036 : mov rax, rdx ; jmp 0x2000022603f
0x0000020000226bf0 : mov rax, rdx ; jmp 0x20000226bf9
0x0000020000226f0c : mov rax, rdx ; jmp 0x20000226f15
0x0000020000227e6e : mov rax, rdx ; jmp 0x20000227e77
0x0000020000229482 : mov rax, rdx ; jmp 0x2000022948b
0x000002000022955f : mov rax, rdx ; jmp 0x20000229568
0x0000020000229dfd : mov rax, rdx ; jmp 0x20000229e06
0x000002000022a20a : mov rax, rdx ; jmp 0x2000022a213
0x000002000022a59f : mov rax, rdx ; jmp 0x2000022a5a8
0x000002000022a7e5 : mov rax, rdx ; jmp 0x2000022a7ee
0x000002000022ad16 : mov rax, rdx ; jmp 0x2000022ad1f
0x000002000022b0f1 : mov rax, rdx ; jmp 0x2000022b0fa
0x000002000022b232 : mov rax, rdx ; jmp 0x2000022b23b
0x000002000022b368 : mov rax, rdx ; jmp 0x2000022b37a
0x000002000022b973 : mov rax, rdx ; jmp 0x2000022b97c
0x000002000022c162 : mov rax, rdx ; jmp 0x2000022c16b
0x000002000022df7a : mov rax, rdx ; jmp 0x2000022df83
0x000002000022e3a7 : mov rax, rdx ; jmp 0x2000022e3b0
0x000002000022e9ef : mov rax, rdx ; jmp 0x2000022e9f8
0x000002000022e9ee : mov rax, rdx ; jmp 0x2000022e9f9
0x000002000022ef0f : mov rax, rdx ; jmp 0x2000022ef18
0x000002000022f2a3 : mov rax, rdx ; jmp 0x2000022f2ac
0x000002000022f51c : mov rax, rdx ; jmp 0x2000022f53f
0x000002000023048a : mov rax, rdx ; jmp 0x20000230493
0x00000200004baa66 : mov rax, rdx ; jmp 0x200004baa16
0x000002000072b3fb : mov rax, rdx ; jmp 0x2000072b407
0x000002000072c614 : mov rax, rdx ; jmp 0x2000072c678
0x000002000072c9b7 : mov rax, rdx ; jmp 0x2000072c9c0
0x00000200007311e3 : mov rax, rdx ; jmp 0x200007311ec
0x0000020000731344 : mov rax, rdx ; jmp 0x2000073134d
0x000002000073150f : mov rax, rdx ; jmp 0x20000731518
0x0000020000731f24 : mov rax, rdx ; jmp 0x20000731f2d
0x0000020000732987 : mov rax, rdx ; jmp 0x20000732990
0x000002000073359e : mov rax, rdx ; jmp 0x200007335a7
0x0000020000733c49 : mov rax, rdx ; jmp 0x20000733c52
0x0000020000734053 : mov rax, rdx ; jmp 0x2000073405c
0x0000020000734694 : mov rax, rdx ; jmp 0x2000073469d
0x0000020000735295 : mov rax, rdx ; jmp 0x2000073529e
0x0000020000735b5a : mov rax, rdx ; jmp 0x20000735b63
0x0000020000735f76 : mov rax, rdx ; jmp 0x20000735f7f
0x00000200007365a4 : mov rax, rdx ; jmp 0x200007365ad
0x000002000073717b : mov rax, rdx ; jmp 0x20000737184
0x00000200007374ae : mov rax, rdx ; jmp 0x200007374b7
0x0000020000737996 : mov rax, rdx ; jmp 0x2000073799f
0x0000020000737a73 : mov rax, rdx ; jmp 0x20000737a7c
0x0000020000737c97 : mov rax, rdx ; jmp 0x20000737ca0
0x0000020000737ee7 : mov rax, rdx ; jmp 0x20000737ef0
0x0000020000738057 : mov rax, rdx ; jmp 0x20000738060
0x0000020000738503 : mov rax, rdx ; jmp 0x2000073850c
0x0000020000738a02 : mov rax, rdx ; jmp 0x20000738a0b
0x0000020000738bc3 : mov rax, rdx ; jmp 0x20000738bcc
0x0000020000738d72 : mov rax, rdx ; jmp 0x20000738d7b
0x0000020000738ef3 : mov rax, rdx ; jmp 0x20000738efc
0x000002000073981a : mov rax, rdx ; jmp 0x20000739823
0x0000020000739b03 : mov rax, rdx ; jmp 0x20000739b0c
0x000002000073a794 : mov rax, rdx ; jmp 0x2000073a79d
0x000002000073ab71 : mov rax, rdx ; jmp 0x2000073ab7a
0x000002000073b631 : mov rax, rdx ; jmp 0x2000073b63a
0x000002000073b7a1 : mov rax, rdx ; jmp 0x2000073b7aa
0x000002000073b9a2 : mov rax, rdx ; jmp 0x2000073b9ab
0x000002000073bd09 : mov rax, rdx ; jmp 0x2000073bd12
0x000002000073bf6f : mov rax, rdx ; jmp 0x2000073bf78
0x000002000073c1c3 : mov rax, rdx ; jmp 0x2000073c1cc
0x000002000073c3d1 : mov rax, rdx ; jmp 0x2000073c3da
0x000002000073c5a7 : mov rax, rdx ; jmp 0x2000073c5b0
0x000002000073c7f2 : mov rax, rdx ; jmp 0x2000073c7fb
0x000002000073cbe7 : mov rax, rdx ; jmp 0x2000073cbf0
0x000002000073cd54 : mov rax, rdx ; jmp 0x2000073cd5d
0x000002000073d934 : mov rax, rdx ; jmp 0x2000073d93d
0x000002000073e11a : mov rax, rdx ; jmp 0x2000073e123
0x000002000003fcff : mov rax, rdx ; jne 0x20000166823 ; ret
0x00000200001ab419 : mov rax, rdx ; lock cmpxchg qword ptr [r9 + r8*8], rcx ; ret
0x000002000001f908 : mov rax, rdx ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001f263e : mov rax, rdx ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x00000200000234c2 : mov rax, rdx ; ret
0x00000200000100aa : mov rax, rdx ; shr rax, 0x3f ; add rax, rdx ; jmp 0x20000010073
0x00000200006281f5 : mov rax, rdx ; shr rax, 0x3f ; add rax, rdx ; ret
0x00000200001b21e5 : mov rax, rdx ; shr rdx, 0x20 ; wrmsr ; ret
0x00000200004d8fca : mov rbp, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rsi ; ret
0x0000020000466d0d : mov rbp, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x000002000013ff74 : mov rbp, qword ptr [rcx + 0x18] ; mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x000002000000aae8 : mov rbp, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x000002000049aefb : mov rbp, rax ; call 0x200000bcc76
0x0000020000560ae9 : mov rbp, rax ; call 0x200000bcd15
0x00000200006b8d0e : mov rbp, rax ; call rbx
0x00000200004c8acc : mov rbp, rbx ; call 0x200000ecdea
0x0000020000475e6f : mov rbp, rcx ; call 0x2000009db86
0x000002000049acfd : mov rbp, rcx ; xor r12b, r12b ; call 0x200000c3089
0x00000200001531f2 : mov rbp, rdx ; add rsp, 0x40 ; pop rbp ; ret
0x000002000003bb83 : mov rbx, qword ptr [r15] ; call 0x20000086189
0x00000200002030c0 : mov rbx, qword ptr [rcx + rax*8 + 0x10] ; jmp 0x200002030d4
0x0000020000028ee0 : mov rbx, qword ptr [rdi] ; jmp 0x20000028ec4
0x00000200005264e4 : mov rbx, qword ptr [rsi] ; inc rdx ; jmp 0x200005264d0
0x0000020000029cc5 : mov rbx, qword ptr [rsp + 0x10] ; pop rdi ; ret
0x000002000006a216 : mov rbx, qword ptr [rsp + 0x10] ; ret
0x000002000002cc17 : mov rbx, qword ptr [rsp + 0x18] ; pop rsi ; ret
0x000002000010c913 : mov rbx, qword ptr [rsp + 0x20] ; add rsp, 0x28 ; ret
0x0000020000087142 : mov rbx, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x0000020000486c5a : mov rbx, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x0000020000781df2 : mov rbx, qword ptr [rsp + 0x40] ; jmp 0x20000781dc2
0x0000020000096abd : mov rbx, qword ptr [rsp + 0x48] ; add rsp, 0x38 ; ret
0x000002000022df75 : mov rbx, qword ptr [rsp + 0x78] ; mov rax, rdx ; jmp 0x2000022df88
0x00000200000f1691 : mov rbx, qword ptr [rsp + 8] ; mov al, dl ; ret
0x00000200001a7c72 : mov rbx, qword ptr [rsp + 8] ; mov al, r10b ; ret
0x00000200001fbec3 : mov rbx, qword ptr [rsp + 8] ; mov al, r8b ; ret
0x0000020000634ba1 : mov rbx, qword ptr [rsp + 8] ; mov al, r9b ; ret
0x00000200000299c2 : mov rbx, qword ptr [rsp + 8] ; mov dword ptr [r9 + 0x18], eax ; ret
0x000002000021e7ec : mov rbx, qword ptr [rsp + 8] ; mov eax, ecx ; ret
0x000002000046b93e : mov rbx, qword ptr [rsp + 8] ; mov eax, edx ; ret
0x0000020000117db7 : mov rbx, qword ptr [rsp + 8] ; mov eax, r10d ; ret
0x000002000004decc : mov rbx, qword ptr [rsp + 8] ; mov eax, r11d ; ret
0x0000020000052950 : mov rbx, qword ptr [rsp + 8] ; mov eax, r8d ; ret
0x0000020000020004 : mov rbx, qword ptr [rsp + 8] ; mov eax, r9d ; ret
0x00000200001a779a : mov rbx, qword ptr [rsp + 8] ; mov qword ptr [r8], r11 ; ret
0x000002000074dddd : mov rbx, qword ptr [rsp + 8] ; mov rax, r10 ; ret
0x0000020000126bb3 : mov rbx, qword ptr [rsp + 8] ; mov rax, r11 ; ret
0x00000200004fc3d0 : mov rbx, qword ptr [rsp + 8] ; mov rax, r8 ; ret
0x00000200006c18f1 : mov rbx, qword ptr [rsp + 8] ; mov rax, r9 ; ret
0x00000200006421ab : mov rbx, qword ptr [rsp + 8] ; movzx eax, r9w ; ret
0x0000020000009c3c : mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000462a89 : mov rbx, qword ptr [rsp] ; add rsp, 8 ; ret
0x00000200001ac424 : mov rbx, r8 ; test rax, rax ; je 0x200001ac438 ; call rax
0x000002000049a65a : mov rbx, rax ; call 0x200000c23c6
0x00000200006c418d : mov rbx, rax ; call rdi
0x00000200006c49ff : mov rbx, rax ; call rsi
0x0000020000499b35 : mov rbx, rax ; mov rcx, rax ; call 0x200000bd119
0x0000020000425537 : mov rbx, rcx ; call 0x200000459c6
0x00000200004c96f2 : mov rbx, rcx ; call 0x200000ee672
0x00000200004ccfd8 : mov rbx, rcx ; call 0x200000ef502
0x00000200001c9c9e : mov rbx, rcx ; call qword ptr [rax]
0x00000200003de2f9 : mov rbx, rcx ; mov rdx, qword ptr [rdx + 8] ; call qword ptr [rdi]
0x00000200006c03b6 : mov rbx, rcx ; test rax, rax ; je 0x200006c03cb ; call rax
0x000002000041e9c9 : mov rbx, rcx ; xor ecx, ecx ; call 0x2000004585c
0x000002000041e9c8 : mov rbx, rcx ; xor ecx, ecx ; call 0x2000004585d
0x00000200001c9d58 : mov rbx, rdx ; call qword ptr [rax]
0x0000020000475ce6 : mov rbx, rdx ; mov rdi, rcx ; call 0x2000009b449
0x0000020000498d12 : mov rbx, rdx ; mov rdi, rcx ; call 0x200000bb119
0x00000200001e2e95 : mov rcx, qword ptr [r10 + 0x1d8] ; call rax
0x00000200001bddd1 : mov rcx, qword ptr [r10 + 0x2990] ; call rdi
0x0000020000452ed5 : mov rcx, qword ptr [r13 + 0x3e0] ; call rax
0x00000200000f0b5d : mov rcx, qword ptr [r14 + 0xa8] ; mov edx, ebp ; call rax
0x00000200000e4a0f : mov rcx, qword ptr [r14 + 8] ; call rax
0x00000200005a1939 : mov rcx, qword ptr [r15 - 8] ; call qword ptr [rax]
0x000002000050c148 : mov rcx, qword ptr [r15] ; call 0x20000133f76
0x0000020000211b75 : mov rcx, qword ptr [r8 + 0x30] ; call r9
0x0000020000488269 : mov rcx, qword ptr [r9] ; mov qword ptr [rdx], rcx ; ret
0x00000200003df524 : mov rcx, qword ptr [rax + 0x10] ; cmp rcx, rdx ; jne 0x200003df540 ; ret
0x000002000005e4bb : mov rcx, qword ptr [rax + 0x30] ; mov qword ptr [rcx + 0x70], r10 ; jmp 0x2000005e490
0x00000200003a13e1 : mov rcx, qword ptr [rax + 0x48] ; test rcx, rcx ; je 0x200003a13f5 ; call rcx
0x00000200003af3a8 : mov rcx, qword ptr [rax + 0x48] ; test rcx, rcx ; je 0x200003af3bc ; call rcx
0x000002000074fb08 : mov rcx, qword ptr [rax + 0x78] ; test rcx, rcx ; jne 0x2000074fb1b ; ret
0x00000200003af920 : mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x00000200001b29d8 : mov rcx, qword ptr [rax + 8] ; test rcx, rcx ; je 0x200001b29ec ; call rcx
0x000002000060f138 : mov rcx, qword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x0000020000656ed8 : mov rcx, qword ptr [rbp + 0x17] ; xor rcx, rsp ; call 0x20000133189
0x00000200005118fb : mov rcx, qword ptr [rbp + 0x28] ; call 0x20000140387
0x000002000051335d : mov rcx, qword ptr [rbp + 0x28] ; mov ebx, eax ; call 0x20000140389
0x000002000051501e : mov rcx, qword ptr [rbp + 0x30] ; call 0x20000140387
0x00000200005712f1 : mov rcx, qword ptr [rbp + 0x30] ; call rdx
0x0000020000614d64 : mov rcx, qword ptr [rbp + 0x38] ; xor edx, edx ; call 0x20000231018
0x00000200001539dd : mov rcx, qword ptr [rbp + 0x40] ; call rax
0x00000200003b6e95 : mov rcx, qword ptr [rbp + 0x40] ; xor rcx, rsp ; call 0x20000133189
0x0000020000152850 : mov rcx, qword ptr [rbp + 0x50] ; call rax
0x000002000056d636 : mov rcx, qword ptr [rbp + 0x68] ; call r14
0x0000020000784152 : mov rcx, qword ptr [rbp + 0x77] ; call 0x20000140386
0x0000020000514e80 : mov rcx, qword ptr [rbp + 0x7f] ; call 0x20000140387
0x0000020000514e5f : mov rcx, qword ptr [rbp + 0x7f] ; mov ebx, eax ; call 0x20000140389
0x0000020000519feb : mov rcx, qword ptr [rbp + 7] ; call 0x20000140387
0x00000200004e08d6 : mov rcx, qword ptr [rbp - 0x11] ; call rax
0x000002000060349f : mov rcx, qword ptr [rbp - 0x18] ; xor edx, edx ; call 0x20000231019
0x0000020000514384 : mov rcx, qword ptr [rbp - 0x19] ; mov ebx, eax ; call 0x20000140389
0x00000200005143e5 : mov rcx, qword ptr [rbp - 0x21] ; call 0x20000140387
0x000002000051b18e : mov rcx, qword ptr [rbp - 0x31] ; call 0x20000140387
0x000002000051da77 : mov rcx, qword ptr [rbp - 0x48] ; call 0x20000140387
0x000002000051cc6c : mov rcx, qword ptr [rbp - 0x61] ; call 0x20000140387
0x000002000051cc75 : mov rcx, qword ptr [rbp - 0x69] ; call 0x20000140387
0x0000020000694daf : mov rcx, qword ptr [rbp - 0x71] ; call rax
0x000002000049aa57 : mov rcx, qword ptr [rbp - 0x80] ; call 0x200000c23c7
0x00000200005940ae : mov rcx, qword ptr [rbp - 0x80] ; call 0x20000140386
0x00000200005ce340 : mov rcx, qword ptr [rbx + 0x20] ; call 0x2000001a626
0x00000200004ccd0b : mov rcx, qword ptr [rbx + 0x20] ; call 0x200000efeeb
0x00000200004cb9ca : mov rcx, qword ptr [rbx + 0x20] ; call 0x200000f1a43
0x00000200004cb95c : mov rcx, qword ptr [rbx + 0x20] ; call 0x200000f83c3
0x0000020000663274 : mov rcx, qword ptr [rbx + 0x28] ; call 0x2000014f4c6
0x00000200005c5fd3 : mov rcx, qword ptr [rbx + 0x28] ; call rax
0x000002000049ac90 : mov rcx, qword ptr [rbx + 0x30] ; call 0x200000bd247
0x000002000019370a : mov rcx, qword ptr [rbx + 0x30] ; call 0x200000bf966
0x00000200001ba7ee : mov rcx, qword ptr [rbx + 0x38] ; call qword ptr [rax]
0x0000020000602680 : mov rcx, qword ptr [rbx + 0x40] ; xor edx, edx ; call 0x20000231019
0x00000200004c937a : mov rcx, qword ptr [rbx + 0x50] ; call 0x200000ede6b
0x00000200005f32f4 : mov rcx, qword ptr [rbx + 0x98] ; call 0x2000007f569
0x000002000011f98e : mov rcx, qword ptr [rbx + 0xa8] ; call rax
0x00000200004bfe3a : mov rcx, qword ptr [rbx + 8] ; call 0x200000edbd7
0x0000020000101367 : mov rcx, qword ptr [rbx] ; call 0x20000047875
0x00000200001c98e9 : mov rcx, qword ptr [rbx] ; call rax
0x000002000060a9a1 : mov rcx, qword ptr [rbx] ; xor edx, edx ; call 0x20000231018
0x000002000054004a : mov rcx, qword ptr [rcx + 0x10] ; mov rdx, qword ptr [r9 + 8] ; call r8
0x00000200000248fa : mov rcx, qword ptr [rcx + 0x10] ; test rcx, rcx ; jne 0x20000024900 ; ret
0x00000200000f83e2 : mov rcx, qword ptr [rcx + 0x18] ; test rcx, rcx ; jne 0x200000f83e8 ; ret
0x00000200001be359 : mov rcx, qword ptr [rcx + 0x2990] ; call rax
0x00000200004c93b8 : mov rcx, qword ptr [rcx + 0x50] ; call 0x200000ede6b
0x00000200005f3121 : mov rcx, qword ptr [rcx + 0x98] ; call 0x2000007f3d9
0x00000200005f3325 : mov rcx, qword ptr [rcx + 0x98] ; call 0x2000007f569
0x000002000010b2de : mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200004847b3 : mov rcx, qword ptr [rcx + 8] ; mov qword ptr [rdx], rcx ; ret
0x00000200001c9d54 : mov rcx, qword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x000002000010aea5 : mov rcx, qword ptr [rcx + 8] ; mov rsi, rdx ; call qword ptr [rbx]
0x00000200001f508a : mov rcx, qword ptr [rcx + 8] ; test rcx, rcx ; jne 0x200001f5090 ; ret
0x00000200000eef37 : mov rcx, qword ptr [rcx + rbx*8] ; test rcx, rcx ; je 0x200000eef4d ; call rcx
0x0000020000206711 : mov rcx, qword ptr [rcx] ; cmp r8, rcx ; jne 0x20000206708 ; ret
0x000002000010549f : mov rcx, qword ptr [rcx] ; inc edx ; jmp 0x20000105492
0x00000200003cd5dc : mov rcx, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rcx ; ret
0x00000200005ad70d : mov rcx, qword ptr [rcx] ; mov r8d, 6 ; call rax
0x000002000076c851 : mov rcx, qword ptr [rcx] ; test rcx, rcx ; jne 0x2000076c849 ; ret
0x00000200005844f8 : mov rcx, qword ptr [rdi + 0x10] ; call 0x200001a6177
0x00000200004530fd : mov rcx, qword ptr [rdi + 0x2e8] ; call rax
0x0000020000061710 : mov rcx, qword ptr [rdi + 0xd8] ; call qword ptr [rax]
0x0000020000116917 : mov rcx, qword ptr [rdi + 8] ; call r8
0x0000020000401719 : mov rcx, qword ptr [rdi + 8] ; call rax
0x0000020000443bc6 : mov rcx, qword ptr [rdi - 8] ; mov rdx, rdi ; call qword ptr [rax]
0x00000200006b5a58 : mov rcx, qword ptr [rdx - 0x28] ; mov qword ptr [r9 + 0x20], rcx ; ret
0x000002000014017b : mov rcx, qword ptr [rdx] ; mov rdx, qword ptr [rdx + 8] ; call r10
0x0000020000183151 : mov rcx, qword ptr [rip + 0x158d30] ; call rax
0x00000200004653a5 : mov rcx, qword ptr [rip - 0x14bfa4] ; call rax
0x00000200005dd50d : mov rcx, qword ptr [rip - 0x2da8dc] ; call rax
0x0000020000604a9d : mov rcx, qword ptr [rip - 0x2eb69c] ; call rax
0x000002000014603e : mov rcx, qword ptr [rsi + 0x50] ; jmp rcx
0x000002000019c6ad : mov rcx, qword ptr [rsi + 0xa8] ; mov edx, ebp ; call rax
0x00000200001c9ee1 : mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x00000200006bf2c5 : mov rcx, qword ptr [rsi + 8] ; call rax
0x0000020000498c96 : mov rcx, qword ptr [rsp + 0x20] ; call 0x200000bcd28
0x0000020000626934 : mov rcx, qword ptr [rsp + 0x20] ; call 0x200000c2b97
0x00000200001ad6ac : mov rcx, qword ptr [rsp + 0x20] ; call r9
0x00000200001ad599 : mov rcx, qword ptr [rsp + 0x20] ; call rax
0x000002000046e714 : mov rcx, qword ptr [rsp + 0x250] ; call rax
0x00000200001c6243 : mov rcx, qword ptr [rsp + 0x28] ; mov qword ptr [rcx], r8 ; ret
0x0000020000504078 : mov rcx, qword ptr [rsp + 0x30] ; call 0x20000140387
0x0000020000512f8d : mov rcx, qword ptr [rsp + 0x38] ; call 0x20000140388
0x00000200005155c2 : mov rcx, qword ptr [rsp + 0x40] ; call 0x20000140388
0x00000200005a249b : mov rcx, qword ptr [rsp + 0x40] ; call 0x200001c51ec
0x00000200005cb154 : mov rcx, qword ptr [rsp + 0x40] ; call 0x2000063745f
0x0000020000447d1e : mov rcx, qword ptr [rsp + 0x40] ; call rax
0x000002000049206a : mov rcx, qword ptr [rsp + 0x48] ; call 0x200000c1e68
0x000002000049f36c : mov rcx, qword ptr [rsp + 0x48] ; call 0x200000c23c8
0x0000020000497874 : mov rcx, qword ptr [rsp + 0x48] ; call 0x200000c2b98
0x00000200004c9e07 : mov rcx, qword ptr [rsp + 0x48] ; call 0x200000ee3f0
0x00000200003ec482 : mov rcx, qword ptr [rsp + 0x48] ; call r12
0x00000200004249a7 : mov rcx, qword ptr [rsp + 0x50] ; call 0x20000045790
0x00000200003d61a9 : mov rcx, qword ptr [rsp + 0x50] ; call 0x200000c23c7
0x000002000051a08f : mov rcx, qword ptr [rsp + 0x50] ; call 0x20000140388
0x000002000014462b : mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x00000200004c0ce3 : mov rcx, qword ptr [rsp + 0x50] ; mov qword ptr [rax], rcx ; jmp 0x200004c0cb9
0x0000020000499006 : mov rcx, qword ptr [rsp + 0x60] ; call 0x200000bc368
0x0000020000448fa9 : mov rcx, qword ptr [rsp + 0x60] ; call rax
0x00000200001af02f : mov rcx, qword ptr [rsp + 0x68] ; call rax
0x00000200005182a6 : mov rcx, qword ptr [rsp + 0x70] ; call 0x20000140388
0x00000200004996a5 : mov rcx, qword ptr [rsp + 0x78] ; call 0x200000bc288
0x0000020000195850 : mov rcx, qword ptr [rsp + 0x78] ; call 0x200000c1b37
0x00000200004997ba : mov rcx, qword ptr [rsp + 0x78] ; call 0x200000c23c8
0x00000200000dc64c : mov rcx, qword ptr [rsp + 0x78] ; call rax
0x00000200001ac19b : mov rcx, qword ptr [rsp + 0x90] ; call rax
0x0000020000171b9a : mov rcx, qword ptr fs:[rdi + 8] ; call r8
0x000002000042550e : mov rcx, r10 ; call 0x20000045872
0x00000200006996ce : mov rcx, r10 ; call 0x20000140389
0x000002000060aec1 : mov rcx, r10 ; call 0x20000231016
0x0000020000152451 : mov rcx, r10 ; call r10
0x0000020000024dba : mov rcx, r10 ; call r9
0x0000020000465b4f : mov rcx, r10 ; call rax
0x0000020000740c88 : mov rcx, r10 ; jmp rcx
0x00000200000d20ca : mov rcx, r10 ; lea rdx, qword ptr [rbp - 0x20] ; call r11
0x000002000069793a : mov rcx, r11 ; add rsp, 0x28 ; jmp qword ptr [r10]
0x00000200001d2245 : mov rcx, r11 ; call qword ptr [r11]
0x0000020000153060 : mov rcx, r11 ; call r11
0x000002000013d0c2 : mov rcx, r11 ; call r8
0x0000020000462f2e : mov rcx, r11 ; call rax
0x000002000077c462 : mov rcx, r11 ; call rbx
0x00000200001d23d3 : mov rcx, r11 ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r11]
0x00000200004d0727 : mov rcx, r11 ; mov dword ptr [rsp + 0x20], eax ; call r10
0x0000020000403ef6 : mov rcx, r11 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000003a4dd : mov rcx, r12 ; call 0x20000016785
0x00000200005a299a : mov rcx, r12 ; call 0x2000004ec1d
0x00000200004241d0 : mov rcx, r12 ; call 0x20000053796
0x00000200001785ab : mov rcx, r12 ; call 0x20000064839
0x00000200006264e3 : mov rcx, r12 ; call 0x200000831d9
0x0000020000491fd6 : mov rcx, r12 ; call 0x2000009d699
0x000002000049a244 : mov rcx, r12 ; call 0x200000c1e26
0x000002000049300e : mov rcx, r12 ; call 0x200000c1e66
0x000002000049a15c : mov rcx, r12 ; call 0x200000c2606
0x00000200004265c2 : mov rcx, r12 ; call 0x200000c2845
0x00000200004768d5 : mov rcx, r12 ; call 0x200000c2b95
0x000002000049aa4f : mov rcx, r12 ; call 0x200000c2b96
0x00000200004b3688 : mov rcx, r12 ; call 0x200000e24c6
0x000002000050dc35 : mov rcx, r12 ; call 0x20000133f76
0x000002000060a9cd : mov rcx, r12 ; call 0x20000231016
0x00000200004b07d1 : mov rcx, r12 ; call 0x200004aca85
0x00000200001dce83 : mov rcx, r12 ; call 0x200006290c9
0x000002000068969f : mov rcx, r12 ; call 0x20000685909
0x000002000013488b : mov rcx, r12 ; call r14
0x000002000004053c : mov rcx, r12 ; call r15
0x00000200005bab2a : mov rcx, r12 ; call rax
0x00000200004b64f4 : mov rcx, r12 ; call rsi
0x00000200006b8e6d : mov rcx, r12 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x000002000021445f : mov rcx, r12 ; mov edx, esi ; cmovne rcx, r11 ; call rax
0x000002000049aef8 : mov rcx, r12 ; mov rbp, rax ; call 0x200000bcc79
0x000002000019329b : mov rcx, r13 ; call 0x2000003f4b9
0x0000020000419b8b : mov rcx, r13 ; call 0x2000004200a
0x000002000049567e : mov rcx, r13 ; call 0x200000b5806
0x00000200000784e6 : mov rcx, r13 ; call 0x200000b7059
0x00000200004947c3 : mov rcx, r13 ; call 0x200000c1b36
0x000002000049a277 : mov rcx, r13 ; call 0x200000c23c6
0x000002000049a8c7 : mov rcx, r13 ; call 0x200000c23c9
0x000002000049473f : mov rcx, r13 ; call 0x200000c2846
0x00000200004c134c : mov rcx, r13 ; call 0x200000e4de6
0x00000200004c4e23 : mov rcx, r13 ; call 0x200000ebb26
0x0000020000500d47 : mov rcx, r13 ; call 0x2000012f9b6
0x0000020000505098 : mov rcx, r13 ; call 0x20000134776
0x00000200005b8c25 : mov rcx, r13 ; call 0x200001dadb6
0x0000020000609c23 : mov rcx, r13 ; call 0x20000231016
0x0000020000689697 : mov rcx, r13 ; call 0x20000685909
0x00000200004617f3 : mov rcx, r13 ; call r12
0x00000200004616c8 : mov rcx, r13 ; call r14
0x000002000052842f : mov rcx, r13 ; call r15
0x00000200005be191 : mov rcx, r13 ; call r8
0x00000200000e4688 : mov rcx, r13 ; call rax
0x00000200006b3726 : mov rcx, r13 ; call rbx
0x000002000049a0ae : mov rcx, r13 ; jne 0x2000049a0ca ; call 0x200000c23c8
0x00000200004d455c : mov rcx, r13 ; mov dword ptr [rsp + 0x20], r14d ; call r12
0x0000020000581e28 : mov rcx, r13 ; mov ebx, r9d ; call 0x200001a6b65
0x00000200004c8ac9 : mov rcx, r13 ; mov rbp, rbx ; call 0x200000ecded
0x000002000049a657 : mov rcx, r13 ; mov rbx, rax ; call 0x200000c23c9
0x00000200003e594f : mov rcx, r14 ; call 0x20000013276
0x00000200004b8a2d : mov rcx, r14 ; call 0x20000019899
0x00000200005f9191 : mov rcx, r14 ; call 0x2000002bc89
0x00000200004275b7 : mov rcx, r14 ; call 0x2000004eb06
0x00000200005a2948 : mov rcx, r14 ; call 0x2000004ec1d
0x000002000042675c : mov rcx, r14 ; call 0x2000004ec1e
0x00000200005cd5b0 : mov rcx, r14 ; call 0x200000597f5
0x0000020000498cb5 : mov rcx, r14 ; call 0x200000c1b36
0x00000200004beb75 : mov rcx, r14 ; call 0x200000e8386
0x00000200004c304c : mov rcx, r14 ; call 0x200000e9466
0x00000200004c9b1f : mov rcx, r14 ; call 0x200000ee19e
0x00000200004cc23b : mov rcx, r14 ; call 0x200000f7d4e
0x000002000021a7e3 : mov rcx, r14 ; call 0x2000010e1f1
0x000002000050e430 : mov rcx, r14 ; call 0x20000138126
0x00000200007329e5 : mov rcx, r14 ; call 0x2000013ec31
0x0000020000513748 : mov rcx, r14 ; call 0x20000140da6
0x0000020000513747 : mov rcx, r14 ; call 0x20000140da7
0x000002000052d77f : mov rcx, r14 ; call 0x2000014f186
0x000002000077e529 : mov rcx, r14 ; call 0x2000014f4c9
0x000002000057a920 : mov rcx, r14 ; call 0x200001a6b61
0x0000020000579ac6 : mov rcx, r14 ; call 0x200001a6b62
0x0000020000084d66 : mov rcx, r14 ; call 0x20000231015
0x0000020000605b47 : mov rcx, r14 ; call 0x20000231016
0x00000200004a80cf : mov rcx, r14 ; call 0x200003f4385
0x00000200004a80ce : mov rcx, r14 ; call 0x200003f4386
0x00000200004abd82 : mov rcx, r14 ; call 0x20000438035
0x00000200004a578a : mov rcx, r14 ; call 0x20000481a11
0x000002000045965d : mov rcx, r14 ; call 0x200005f5919
0x000002000042285c : mov rcx, r14 ; call qword ptr [rsi]
0x0000020000460930 : mov rcx, r14 ; call r10
0x00000200006b9311 : mov rcx, r14 ; call r12
0x00000200004fce17 : mov rcx, r14 ; call r9
0x00000200002149bb : mov rcx, r14 ; call rax
0x00000200006909b1 : mov rcx, r14 ; call rdi
0x0000020000693b97 : mov rcx, r14 ; call rsi
0x00000200006c07e2 : mov rcx, r14 ; mov dword ptr [rsp + 0x20], ebp ; call rax
0x000002000042271b : mov rcx, r14 ; mov qword ptr [rsp + 0x20], rax ; call qword ptr [rsi]
0x00000200006c072e : mov rcx, r14 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200006c0868 : mov rcx, r14 ; mov qword ptr [rsp + 0x20], rdi ; call rax
0x0000020000213f01 : mov rcx, r14 ; mov r9d, esi ; mov edx, r15d ; call rax
0x0000020000498c60 : mov rcx, r14 ; xor edx, edx ; call 0x200000c2848
0x00000200006247b1 : mov rcx, r15 ; call 0x20000010a11
0x0000020000535e75 : mov rcx, r15 ; call 0x200000539f1
0x0000020000475eec : mov rcx, r15 ; call 0x2000009a2d6
0x000002000059582c : mov rcx, r15 ; call 0x200000c1b35
0x00000200005a5bcc : mov rcx, r15 ; call 0x200000c1e65
0x00000200004c1905 : mov rcx, r15 ; call 0x200000e5baa
0x00000200004c1904 : mov rcx, r15 ; call 0x200000e5bab
0x00000200004beeb6 : mov rcx, r15 ; call 0x200000e8156
0x00000200004beed2 : mov rcx, r15 ; call 0x200000e8386
0x00000200004c3640 : mov rcx, r15 ; call 0x200000e9fda
0x00000200004c358f : mov rcx, r15 ; call 0x200000ea7fa
0x00000200004c9aa4 : mov rcx, r15 ; call 0x200000ee222
0x00000200004c7de4 : mov rcx, r15 ; call 0x200000efbbe
0x000002000052dc57 : mov rcx, r15 ; call 0x2000014f186
0x0000020000173295 : mov rcx, r15 ; call 0x2000014f4c5
0x000002000057ac6e : mov rcx, r15 ; call 0x200001a6b62
0x00000200005a4c11 : mov rcx, r15 ; call 0x200001cb462
0x00000200005d20f0 : mov rcx, r15 ; call 0x2000021e3a9
0x00000200006071cc : mov rcx, r15 ; call 0x20000231016
0x00000200004a3d6c : mov rcx, r15 ; call 0x200004a0065
0x00000200006788bf : mov rcx, r15 ; call r11
0x0000020000123dcf : mov rcx, r15 ; call r14
0x0000020000043e46 : mov rcx, r15 ; call rax
0x00000200004d490c : mov rcx, r15 ; call rdi
0x000002000050e5b4 : mov rcx, r15 ; lea r8d, dword ptr [r9 + 1] ; call rsi
0x000002000050e8ad : mov rcx, r15 ; lea r8d, dword ptr [r9 + 2] ; call rsi
0x00000200001d202f : mov rcx, r15 ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r15]
0x0000020000692678 : mov rcx, r15 ; mov dword ptr [rsp + 0x20], esi ; call r14
0x00000200006907e1 : mov rcx, r15 ; mov dword ptr [rsp + 0x20], r13d ; call rdi
0x0000020000114c9f : mov rcx, r8 ; jmp rdx
0x00000200004195e2 : mov rcx, r9 ; call 0x2000004200a
0x00000200000cdce8 : mov rcx, r9 ; call 0x20000069fb5
0x00000200000d6d00 : mov rcx, r9 ; call 0x200000a2f55
0x0000020000496f5c : mov rcx, r9 ; call 0x200000b8ea6
0x000002000049b0ab : mov rcx, r9 ; call 0x200000bcd26
0x000002000013fc5b : mov rcx, r9 ; call 0x2000011bf65
0x0000020000183c82 : mov rcx, r9 ; call 0x200001bfe9d
0x00000200005b9601 : mov rcx, r9 ; call 0x200001de786
0x000002000060885b : mov rcx, r9 ; call 0x20000231016
0x00000200005be41c : mov rcx, r9 ; call rax
0x0000020000499468 : mov rcx, r9 ; mov rdx, r8 ; call 0x200000bc289
0x000002000040de75 : mov rcx, rax ; call 0x2000003cc2e
0x000002000041d654 : mov rcx, rax ; call 0x20000043d7e
0x000002000020f032 : mov rcx, rax ; call 0x2000004ec21
0x0000020000434a58 : mov rcx, rax ; call 0x2000005abbe
0x0000020000475cf1 : mov rcx, rax ; call 0x20000099f96
0x0000020000499330 : mov rcx, rax ; call 0x200000ba3f6
0x000002000048e38a : mov rcx, rax ; call 0x200000bcd16
0x0000020000499b38 : mov rcx, rax ; call 0x200000bd116
0x000002000063615e : mov rcx, rax ; call 0x200000c23c5
0x000002000049a676 : mov rcx, rax ; call 0x200000c23c6
0x00000200004c7ba2 : mov rcx, rax ; call 0x200000ecdea
0x00000200004f5ff8 : mov rcx, rax ; call 0x20000122202
0x000002000066be4e : mov rcx, rax ; call 0x20000138125
0x0000020000525e80 : mov rcx, rax ; call 0x2000014f186
0x00000200004a324e : mov rcx, rax ; call 0x2000014f4c5
0x000002000052055b : mov rcx, rax ; call 0x2000014f4c6
0x000002000077489e : mov rcx, rax ; call 0x2000014f4c9
0x0000020000494d8d : mov rcx, rax ; call 0x20000231015
0x000002000060aead : mov rcx, rax ; call 0x20000231016
0x00000200005ae881 : mov rcx, rax ; call 0x2000064ab09
0x0000020000677d8d : mov rcx, rax ; call r10
0x00000200006c5f92 : mov rcx, rax ; call r15
0x00000200003b1cee : mov rcx, rax ; call r8
0x0000020000171724 : mov rcx, rax ; call rdx
0x000002000006e932 : mov rcx, rax ; jmp 0x2000006e259
0x00000200003f8379 : mov rcx, rax ; jmp 0x200003f8345
0x000002000043d7d0 : mov rcx, rax ; jmp 0x2000043d79c
0x00000200004c691f : mov rcx, rax ; mov qword ptr [rax], r13 ; call 0x200000e9469
0x0000020000560ae6 : mov rcx, rax ; mov rbp, rax ; call 0x200000bcd18
0x0000020000620d12 : mov rcx, rax ; mov rsi, rax ; call 0x2000045cf98
0x00000200004c91b7 : mov rcx, rax ; xor edx, edx ; call 0x200000ed5a8
0x000002000020898d : mov rcx, rbp ; call 0x20000044c6d
0x0000020000421807 : mov rcx, rbp ; call 0x200000450c2
0x00000200004217eb : mov rcx, rbp ; call 0x200000456e6
0x0000020000562950 : mov rcx, rbp ; call 0x2000004ec1d
0x00000200004295c7 : mov rcx, rbp ; call 0x20000059332
0x0000020000493990 : mov rcx, rbp ; call 0x200000b5806
0x000002000049398f : mov rcx, rbp ; call 0x200000b5807
0x0000020000495872 : mov rcx, rbp ; call 0x200000b8ea6
0x000002000049b10b : mov rcx, rbp ; call 0x200000bcd16
0x000002000049b38c : mov rcx, rbp ; call 0x200000c06f6
0x000002000049d2aa : mov rcx, rbp ; call 0x200000c2846
0x0000020000498cbd : mov rcx, rbp ; call 0x200000c2b96
0x00000200004a518f : mov rcx, rbp ; call 0x200000e8159
0x00000200004243cd : mov rcx, rbp ; call 0x20000140685
0x0000020000696f74 : mov rcx, rbp ; call 0x200004ce4c1
0x000002000009bb48 : mov rcx, rbp ; call r14
0x00000200004794d8 : mov rcx, rbp ; call r15
0x00000200001c9924 : mov rcx, rbp ; call rax
0x000002000047858f : mov rcx, rbp ; call rdi
0x000002000040abce : mov rcx, rbp ; lea r8d, dword ptr [r9 + 3] ; call 0x20000466eb9
0x0000020000583b16 : mov rcx, rbp ; mov dword ptr [rsp + 0x20], edi ; call 0x2000043fd49
0x00000200006c0915 : mov rcx, rbp ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x00000200004047d0 : mov rcx, rbp ; mov qword ptr [rsp + 0x20], rax ; call r15
0x000002000049ad08 : mov rcx, rbp ; mov r15, rax ; call 0x200000bcc79
0x000002000063eab8 : mov rcx, rbp ; mov rdx, rdi ; call rax
0x00000200001e657d : mov rcx, rbp ; xor edx, edx ; call 0x200000c2847
0x000002000020676f : mov rcx, rbx ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000002000041d2bc : mov rcx, rbx ; call 0x20000042aa6
0x000002000041f989 : mov rcx, rbx ; call 0x20000044dbe
0x000002000041fec1 : mov rcx, rbx ; call 0x2000004505a
0x000002000056282c : mov rcx, rbx ; call 0x2000004eb25
0x00000200005629a2 : mov rcx, rbx ; call 0x2000004ec1d
0x00000200004247b6 : mov rcx, rbx ; call 0x2000005168a
0x000002000042e0f8 : mov rcx, rbx ; call 0x2000005abbe
0x000002000042dc97 : mov rcx, rbx ; call 0x2000005c78e
0x00000200006bc20c : mov rcx, rbx ; call 0x200000684c5
0x0000020000445e53 : mov rcx, rbx ; call 0x2000007461a
0x0000020000445e52 : mov rcx, rbx ; call 0x2000007461b
0x0000020000456f83 : mov rcx, rbx ; call 0x2000008239e
0x00000200004757cf : mov rcx, rbx ; call 0x2000009a246
0x00000200004756d3 : mov rcx, rbx ; call 0x2000009a2ce
0x00000200004756d2 : mov rcx, rbx ; call 0x2000009a2cf
0x00000200004756f1 : mov rcx, rbx ; call 0x2000009a486
0x00000200003e4dd2 : mov rcx, rbx ; call 0x2000009b3b9
0x000002000047528f : mov rcx, rbx ; call 0x2000009b446
0x0000020000475e96 : mov rcx, rbx ; call 0x2000009db86
0x00000200004973dc : mov rcx, rbx ; call 0x200000b8096
0x000002000048e14d : mov rcx, rbx ; call 0x200000bcd26
0x00000200004558bd : mov rcx, rbx ; call 0x200000c1b35
0x000002000049d554 : mov rcx, rbx ; call 0x200000c1b36
0x00000200001b3faf : mov rcx, rbx ; call 0x200000c23c9
0x000002000049777c : mov rcx, rbx ; call 0x200000c2546
0x00000200004065fa : mov rcx, rbx ; call 0x200000c2845
0x00000200004c1c7a : mov rcx, rbx ; call 0x200000e7996
0x00000200004c3222 : mov rcx, rbx ; call 0x200000e9466
0x00000200004c8047 : mov rcx, rbx ; call 0x200000ecdce
0x00000200004c9270 : mov rcx, rbx ; call 0x200000eddaa
0x00000200004cb940 : mov rcx, rbx ; call 0x200000ef376
0x00000200004ccd4e : mov rcx, rbx ; call 0x200000f539a
0x00000200000fcbb7 : mov rcx, rbx ; call 0x200000f8de1
0x00000200004f5ff0 : mov rcx, rbx ; call 0x20000122926
0x0000020000525337 : mov rcx, rbx ; call 0x2000014f186
0x000002000052ea6b : mov rcx, rbx ; call 0x2000014f4c6
0x000002000058fb98 : mov rcx, rbx ; call 0x200001bd2c2
0x0000020000185497 : mov rcx, rbx ; call 0x200001c1725
0x00000200006b585d : mov rcx, rbx ; call 0x200001d1b29
0x00000200005afea2 : mov rcx, rbx ; call 0x200001dd6ee
0x00000200005c04bb : mov rcx, rbx ; call 0x200001eca2e
0x000002000064a205 : mov rcx, rbx ; call 0x200001f649d
0x000002000064a57c : mov rcx, rbx ; call 0x200001f67d5
0x000002000064a502 : mov rcx, rbx ; call 0x200001f67fd
0x000002000064a56f : mov rcx, rbx ; call 0x200001f6845
0x000002000064a7e7 : mov rcx, rbx ; call 0x200001f6a59
0x00000200005c4d33 : mov rcx, rbx ; call 0x20000231015
0x0000020000601b47 : mov rcx, rbx ; call 0x20000231016
0x0000020000603b18 : mov rcx, rbx ; call 0x20000231017
0x000002000066c0c9 : mov rcx, rbx ; call 0x20000231019
0x000002000061cbeb : mov rcx, rbx ; call 0x200003e8e89
0x00000200004a3bf5 : mov rcx, rbx ; call 0x2000049fe05
0x0000020000443d74 : mov rcx, rbx ; call 0x200004a0065
0x000002000044e240 : mov rcx, rbx ; call 0x200004ba495
0x00000200005a0646 : mov rcx, rbx ; call 0x2000063c8a1
0x00000200005d21d6 : mov rcx, rbx ; call 0x2000069e44d
0x000002000075cbef : mov rcx, rbx ; call 0x20000768ee5
0x000002000051e6f4 : mov rcx, rbx ; call qword ptr [rax]
0x00000200001d273b : mov rcx, rbx ; call qword ptr [rbx]
0x00000200001a9349 : mov rcx, rbx ; call r10
0x000002000041d29c : mov rcx, rbx ; call r11
0x0000020000134920 : mov rcx, rbx ; call r14
0x00000200004b32fd : mov rcx, rbx ; call r15
0x000002000039946b : mov rcx, rbx ; call r8
0x0000020000029074 : mov rcx, rbx ; call rax
0x00000200001c7016 : mov rcx, rbx ; call rdi
0x00000200003f85c3 : mov rcx, rbx ; call rsi
0x000002000047fe06 : mov rcx, rbx ; cmovb r14, rdi ; jmp 0x2000047fdda
0x000002000039ea09 : mov rcx, rbx ; jmp 0x2000039e9d5
0x000002000039ea08 : mov rcx, rbx ; jmp 0x2000039e9d6
0x000002000041c108 : mov rcx, rbx ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000694e29 : mov rcx, rbx ; mov r8d, edi ; mov rdx, rsi ; call rax
0x00000200006160ad : mov rcx, rbx ; mov r8d, edx ; call 0x200004e22c8
0x00000200005953a3 : mov rcx, rbx ; mov r8d, esi ; mov rdx, rbp ; call rax
0x00000200006c95d2 : mov rcx, rbx ; mov rsi, rax ; call qword ptr [rdi]
0x0000020000774e43 : mov rcx, rdi ; call 0x20000011105
0x00000200003e5fae : mov rcx, rdi ; call 0x20000013276
0x000002000002a555 : mov rcx, rdi ; call 0x20000016785
0x00000200005b96fd : mov rcx, rdi ; call 0x20000036451
0x00000200004239a1 : mov rcx, rdi ; call 0x200000459c6
0x000002000016b64d : mov rcx, rdi ; call 0x20000047955
0x0000020000427dcc : mov rcx, rdi ; call 0x2000004eb06
0x0000020000423b47 : mov rcx, rdi ; call 0x2000005168a
0x00000200004c6d47 : mov rcx, rdi ; call 0x20000052f79
0x00000200004238a7 : mov rcx, rdi ; call 0x20000053852
0x00000200004341e0 : mov rcx, rdi ; call 0x20000056fc6
0x000002000044622b : mov rcx, rdi ; call 0x20000074662
0x000002000044622a : mov rcx, rdi ; call 0x20000074663
0x00000200001c7e18 : mov rcx, rdi ; call 0x200000840a5
0x00000200000b9097 : mov rcx, rdi ; call 0x20000085325
0x00000200000b9096 : mov rcx, rdi ; call 0x20000085326
0x0000020000475a47 : mov rcx, rdi ; call 0x2000009a486
0x0000020000475fe7 : mov rcx, rdi ; call 0x2000009a5c6
0x0000020000491b50 : mov rcx, rdi ; call 0x2000009a5c9
0x0000020000497a6e : mov rcx, rdi ; call 0x200000ba7b2
0x000002000049801f : mov rcx, rdi ; call 0x200000ba84e
0x0000020000498d3b : mov rcx, rdi ; call 0x200000bb146
0x0000020000495afa : mov rcx, rdi ; call 0x200000bc7b6
0x000002000049b2df : mov rcx, rdi ; call 0x200000bcd16
0x0000020000012b5f : mov rcx, rdi ; call 0x200000bee65
0x00000200003d5874 : mov rcx, rdi ; call 0x200000c1b35
0x0000020000455c15 : mov rcx, rdi ; call 0x200000c1e25
0x0000020000445c11 : mov rcx, rdi ; call 0x200000c1e65
0x0000020000445c10 : mov rcx, rdi ; call 0x200000c1e66
0x00000200005760c6 : mov rcx, rdi ; call 0x200000c23c5
0x000002000049ab8a : mov rcx, rdi ; call 0x200000c23c6
0x000002000057627e : mov rcx, rdi ; call 0x200000c2545
0x000002000049b6cd : mov rcx, rdi ; call 0x200000c2846
0x00000200004c0d2e : mov rcx, rdi ; call 0x200000e264e
0x00000200004c09f9 : mov rcx, rdi ; call 0x200000e285a
0x00000200004c0d74 : mov rcx, rdi ; call 0x200000e28aa
0x00000200004c00fe : mov rcx, rdi ; call 0x200000e8156
0x000002000015c0d0 : mov rcx, rdi ; call 0x200000e8385
0x00000200004c1f47 : mov rcx, rdi ; call 0x200000e8386
0x00000200004c2bdf : mov rcx, rdi ; call 0x200000e88d2
0x00000200004c34b7 : mov rcx, rdi ; call 0x200000ea7c6
0x00000200004cb9db : mov rcx, rdi ; call 0x200000ef13e
0x00000200004cd333 : mov rcx, rdi ; call 0x200000ef502
0x0000020000128811 : mov rcx, rdi ; call 0x20000104af9
0x00000200001cedc8 : mov rcx, rdi ; call 0x200001188dd
0x000002000050719a : mov rcx, rdi ; call 0x200001356aa
0x000002000051b335 : mov rcx, rdi ; call 0x20000140486
0x00000200004131d0 : mov rcx, rdi ; call 0x2000014f4c5
0x000002000058fa01 : mov rcx, rdi ; call 0x200001bd2c2
0x00000200005befd4 : mov rcx, rdi ; call 0x200001e1b9e
0x000002000020c50f : mov rcx, rdi ; call 0x2000020c275
0x0000020000494dd2 : mov rcx, rdi ; call 0x20000231015
0x00000200006028f4 : mov rcx, rdi ; call 0x20000231016
0x00000200006028f3 : mov rcx, rdi ; call 0x20000231017
0x00000200000c5612 : mov rcx, rdi ; call 0x20000231019
0x00000200003abec4 : mov rcx, rdi ; call 0x200003ac791
0x0000020000613c05 : mov rcx, rdi ; call 0x200003dfead
0x00000200003ea2ec : mov rcx, rdi ; call 0x20000466431
0x0000020000076aed : mov rcx, rdi ; call 0x20000475849
0x00000200005b96ed : mov rcx, rdi ; call 0x20000475d19
0x00000200005de141 : mov rcx, rdi ; call 0x2000048a43d
0x0000020000117b97 : mov rcx, rdi ; call 0x20000503dc5
0x00000200005ed39a : mov rcx, rdi ; call 0x200005ed5c5
0x00000200001bf303 : mov rcx, rdi ; call 0x200006ab605
0x00000200006b61db : mov rcx, rdi ; call 0x200006c2481
0x00000200004152e9 : mov rcx, rdi ; call r10
0x00000200003fa37f : mov rcx, rdi ; call r12
0x0000020000073896 : mov rcx, rdi ; call r14
0x000002000051279f : mov rcx, rdi ; call r15
0x000002000063eff4 : mov rcx, rdi ; call r8
0x00000200000298a2 : mov rcx, rdi ; call rax
0x000002000001dbc5 : mov rcx, rdi ; call rbx
0x0000020000042999 : mov rcx, rdi ; call rsi
0x00000200004f3206 : mov rcx, rdi ; lea r8d, dword ptr [rdx + 0x28] ; call 0x2000014f4c9
0x00000200005ea94c : mov rcx, rdi ; lea r8d, dword ptr [rdx + 2] ; call 0x200001a6b65
0x00000200005ea898 : mov rcx, rdi ; lea r8d, dword ptr [rdx + 3] ; call 0x200001a6b65
0x00000200005c8145 : mov rcx, rdi ; lea r8d, dword ptr [rdx + 3] ; call rsi
0x00000200005c8121 : mov rcx, rdi ; lea r8d, dword ptr [rdx + 5] ; call rsi
0x000002000016e808 : mov rcx, rdi ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x0000020000498038 : mov rcx, rdi ; mov ebp, eax ; call 0x200000ba7e8
0x0000020000074a2e : mov rcx, rdi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005fcee7 : mov rcx, rdi ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rax]
0x000002000060d49b : mov rcx, rdi ; mov r12b, 1 ; call 0x20000231019
0x000002000047569f : mov rcx, rdi ; mov r14d, eax ; call 0x2000009b449
0x00000200004fcce5 : mov rcx, rdi ; mov r8d, ebx ; mov rdx, rbp ; call rax
0x00000200004ce89d : mov rcx, rdi ; mov r9d, eax ; mov r8d, eax ; call rsi
0x000002000060f572 : mov rcx, rdi ; mov rax, qword ptr [rsi + 0x38] ; call rax
0x00000200001fd8bc : mov rcx, rdi ; mov rdx, qword ptr [rsp + 0x70] ; call r9
0x0000020000203d7e : mov rcx, rdi ; mov rdx, rbx ; call rsi
0x00000200006b905b : mov rcx, rdi ; mov rsi, rax ; call rbx
0x00000200004752ed : mov rcx, rdi ; sub rdx, rbp ; call 0x20000099f99
0x0000020000616c3d : mov rcx, rdi ; xor ebx, ebx ; call 0x20000231019
0x00000200004365a2 : mov rcx, rdi ; xor edx, edx ; call 0x200000c2847
0x000002000042c44b : mov rcx, rdx ; and qword ptr [rax], 0 ; jmp 0x2000042c41e
0x000002000008bb3a : mov rcx, rdx ; call 0x2000008c5e9
0x0000020000499877 : mov rcx, rdx ; call 0x200000bc286
0x00000200004c377a : mov rcx, rdx ; call 0x200000ea7c6
0x00000200004c3675 : mov rcx, rdx ; call 0x200000eb3f2
0x00000200005021bf : mov rcx, rdx ; call 0x200000ee3ed
0x00000200003dea9c : mov rcx, rdx ; call 0x200004dad85
0x00000200001242c1 : mov rcx, rdx ; call r9
0x000002000014ebb5 : mov rcx, rdx ; mov rdx, qword ptr [rcx + 0x38] ; jmp rdx
0x000002000041f9cb : mov rcx, rsi ; call 0x20000044e5a
0x00000200004239ae : mov rcx, rsi ; call 0x200000459ae
0x000002000016b747 : mov rcx, rsi ; call 0x20000047955
0x0000020000426ea9 : mov rcx, rsi ; call 0x2000004eb06
0x0000020000472969 : mov rcx, rsi ; call 0x2000004ec1d
0x0000020000490549 : mov rcx, rsi ; call 0x20000054999
0x0000020000446ab5 : mov rcx, rsi ; call 0x20000074c96
0x0000020000460298 : mov rcx, rsi ; call 0x20000087106
0x00000200004756e9 : mov rcx, rsi ; call 0x2000009a2d6
0x0000020000475f32 : mov rcx, rsi ; call 0x2000009a486
0x00000200004756bf : mov rcx, rsi ; call 0x2000009a4a6
0x0000020000475ffa : mov rcx, rsi ; call 0x2000009a5c6
0x00000200004c9b2f : mov rcx, rsi ; call 0x2000009a5c9
0x00000200004756de : mov rcx, rsi ; call 0x2000009d696
0x0000020000493bda : mov rcx, rsi ; call 0x200000b8ea6
0x00000200004972ff : mov rcx, rsi ; call 0x200000b91e6
0x0000020000497f47 : mov rcx, rsi ; call 0x200000ba9f6
0x0000020000499b16 : mov rcx, rsi ; call 0x200000bc286
0x000002000049a685 : mov rcx, rsi ; call 0x200000bc2a6
0x000002000053fb9b : mov rcx, rsi ; call 0x200000bd3e3
0x000002000049b19d : mov rcx, rsi ; call 0x200000c06f6
0x000002000049929a : mov rcx, rsi ; call 0x200000c1b36
0x00000200004921ab : mov rcx, rsi ; call 0x200000c1e66
0x000002000049a988 : mov rcx, rsi ; call 0x200000c23c6
0x000002000049bf53 : mov rcx, rsi ; call 0x200000c2846
0x000002000040b7a6 : mov rcx, rsi ; call 0x200000c7a25
0x00000200004c37f0 : mov rcx, rsi ; call 0x200000eb3be
0x00000200004c6774 : mov rcx, rsi ; call 0x200000ec30e
0x00000200004ecf39 : mov rcx, rsi ; call 0x20000149195
0x00000200004c2f5f : mov rcx, rsi ; call 0x2000014f185
0x000002000052af01 : mov rcx, rsi ; call 0x2000014f186
0x000002000063320d : mov rcx, rsi ; call 0x2000014f4c5
0x0000020000521665 : mov rcx, rsi ; call 0x2000014f4c6
0x00000200005a6bb2 : mov rcx, rsi ; call 0x200001c9746
0x00000200005a6ba7 : mov rcx, rsi ; call 0x200001c9766
0x00000200005a4a90 : mov rcx, rsi ; call 0x200001d380e
0x00000200005cacbc : mov rcx, rsi ; call 0x200001f1806
0x000002000015d11d : mov rcx, rsi ; call 0x20000209379
0x0000020000614d76 : mov rcx, rsi ; call 0x20000231015
0x000002000060108f : mov rcx, rsi ; call 0x20000231016
0x0000020000603fc9 : mov rcx, rsi ; call 0x20000231017
0x000002000052cb74 : mov rcx, rsi ; call 0x200003e8dc9
0x0000020000075def : mov rcx, rsi ; call 0x20000475849
0x00000200005e1803 : mov rcx, rsi ; call 0x2000047dacd
0x000002000055f1c0 : mov rcx, rsi ; call 0x2000049b4c5
0x00000200001cd972 : mov rcx, rsi ; call 0x200004c9c55
0x0000020000117b20 : mov rcx, rsi ; call 0x20000503dc5
0x00000200001d1f0f : mov rcx, rsi ; call qword ptr [rsi]
0x00000200004d517a : mov rcx, rsi ; call r10
0x00000200006b8ff4 : mov rcx, rsi ; call r12
0x00000200000ebbcb : mov rcx, rsi ; call r14
0x0000020000048880 : mov rcx, rsi ; call r9
0x00000200003c81e6 : mov rcx, rsi ; call rax
0x000002000040da8d : mov rcx, rsi ; call rdi
0x00000200003c2a86 : mov rcx, rsi ; call rdx
0x00000200001e7806 : mov rcx, rsi ; lea edx, dword ptr [rbx + 3] ; call r9
0x0000020000403cf5 : mov rcx, rsi ; lea rdx, qword ptr [rsp + 0x30] ; call rax
0x000002000015f72c : mov rcx, rsi ; mov r10, qword ptr [r10 + rax*8] ; call r10
0x0000020000693f20 : mov rcx, rsi ; mov r8d, edi ; mov rdx, rbp ; call rax
0x00000200006b8d0b : mov rcx, rsi ; mov rbp, rax ; call rbx
0x0000020000472033 : mov rcx, rsi ; mov rdx, qword ptr [rbx + rsi] ; call 0x2000003e339
0x0000020000475739 : mov rcx, rsi ; setne bl ; call 0x2000009d699
0x00000200005240d2 : mov rcx, rsi ; xor edx, edx ; call 0x2000014f4c8
0x0000020000229558 : mov rdi, -0x47868c00 ; mov rax, rdx ; jmp 0x2000022956f
0x000002000022a203 : mov rdi, -0x47868c00 ; mov rax, rdx ; jmp 0x2000022a21a
0x000002000010bdc6 : mov rdi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x00000200000f0581 : mov rdi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x0000020000008b89 : mov rdi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rbp ; ret
0x000002000076ec45 : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r12 ; ret
0x00000200000026f6 : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x00000200001bc576 : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r15 ; ret
0x0000020000029710 : mov rdi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rbp ; ret
0x00000200006aaeee : mov rdi, qword ptr [rbp + 0x48] ; lea rsp, qword ptr [rbp + 0x20] ; pop rbp ; ret
0x000002000004791e : mov rdi, qword ptr [rbp + 0x60] ; lea rsp, qword ptr [rbp + 0x40] ; pop rbp ; ret
0x000002000004e98e : mov rdi, qword ptr [rdi] ; jmp 0x2000004e95a
0x000002000002c23e : mov rdi, qword ptr [rsp + 0x10] ; jmp rcx
0x000002000002f6c2 : mov rdi, qword ptr [rsp + 0x10] ; mov byte ptr [r8 + 4], r9b ; ret
0x000002000021678b : mov rdi, qword ptr [rsp + 0x10] ; mov dword ptr [r9], r11d ; ret
0x000002000002016e : mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000000af5b : mov rdi, qword ptr [rsp + 0x18] ; ret
0x000002000003db77 : mov rdi, qword ptr [rsp + 0x20] ; ret
0x000002000002623d : mov rdi, qword ptr [rsp + 0x28] ; pop r14 ; ret
0x0000020000065d91 : mov rdi, qword ptr [rsp + 0x30] ; pop r14 ; pop r12 ; ret
0x000002000003b184 : mov rdi, qword ptr [rsp + 0x30] ; pop r15 ; pop r14 ; ret
0x00000200003b23f2 : mov rdi, qword ptr [rsp + 0x48] ; jmp 0x200003b244a
0x0000020000025fb3 : mov rdi, qword ptr [rsp + 0x60] ; add rsp, 0x68 ; ret
0x00000200005966af : mov rdi, qword ptr [rsp + 0x70] ; jmp 0x200005128e0
0x000002000013580b : mov rdi, qword ptr [rsp + 8] ; mov rax, r9 ; ret
0x000002000004a61d : mov rdi, qword ptr [rsp + 8] ; ret
0x00000200005021bc : mov rdi, r8 ; mov rcx, rdx ; call 0x200000ee3f0
0x000002000060d04c : mov rdi, r9 ; lea ecx, dword ptr [rdx - 0x1f] ; call 0x20000231ce9
0x000002000007e4fe : mov rdi, rax ; jmp 0x2000007e46f
0x00000200001858c2 : mov rdi, rax ; jmp 0x20000091b4f
0x0000020000453f76 : mov rdi, rax ; jmp 0x20000453ed3
0x000002000049192f : mov rdi, rax ; jmp 0x200004918fa
0x0000020000423d4d : mov rdi, rcx ; call 0x200000459c6
0x0000020000423d4c : mov rdi, rcx ; call 0x200000459c7
0x0000020000475ce9 : mov rdi, rcx ; call 0x2000009b446
0x0000020000498d15 : mov rdi, rcx ; call 0x200000bb116
0x00000200004c2719 : mov rdi, rcx ; call 0x200000e88d2
0x00000200006cd115 : mov rdi, rcx ; call qword ptr [rip + 0x3c20a]
0x00000200005942e7 : mov rdi, rsi ; call 0x200004b0565
0x000002000022ad0f : mov rdx, qword ptr [r14 + 0x588] ; mov rax, rdx ; jmp 0x2000022ad26
0x0000020000738eec : mov rdx, qword ptr [r14 + 0x588] ; mov rax, rdx ; jmp 0x20000738f03
0x000002000073b79a : mov rdx, qword ptr [r14 + 0x588] ; mov rax, rdx ; jmp 0x2000073b7b1
0x000002000073c1bc : mov rdx, qword ptr [r14 + 0x588] ; mov rax, rdx ; jmp 0x2000073c1d3
0x000002000050dc32 : mov rdx, qword ptr [r14] ; mov rcx, r12 ; call 0x20000133f79
0x000002000073c3ca : mov rdx, qword ptr [r15 + 0x588] ; mov rax, rdx ; jmp 0x2000073c3e1
0x00000200005642f8 : mov rdx, qword ptr [r15 + 0x700] ; call 0x200001c05e9
0x000002000054004e : mov rdx, qword ptr [r9 + 8] ; call r8
0x00000200001d26d6 : mov rdx, qword ptr [rax + 0x28] ; shr rdx, 0xc ; call qword ptr [rbx]
0x00000200003aecd4 : mov rdx, qword ptr [rax + 0x28] ; shr rdx, 0xc ; call qword ptr [rsi]
0x00000200005c43d7 : mov rdx, qword ptr [rax + 0xb8] ; call r14
0x000002000015244d : mov rdx, qword ptr [rbp + 0x28] ; mov rcx, r10 ; call r10
0x000002000061ccec : mov rdx, qword ptr [rbp + 0x30] ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200001539d9 : mov rdx, qword ptr [rbp + 0x38] ; mov rcx, qword ptr [rbp + 0x40] ; call rax
0x0000020000153dee : mov rdx, qword ptr [rbp + 0x40] ; mov rcx, r11 ; call r11
0x000002000015284c : mov rdx, qword ptr [rbp + 0x48] ; mov rcx, qword ptr [rbp + 0x50] ; call rax
0x000002000015409f : mov rdx, qword ptr [rbp + 0x48] ; mov rcx, r11 ; call r11
0x0000020000421848 : mov rdx, qword ptr [rbp + 0x50] ; mov rcx, rbx ; call rax
0x0000020000641274 : mov rdx, qword ptr [rbx + 0x10] ; mov rcx, rdi ; call r8
0x0000020000731508 : mov rdx, qword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x2000073151f
0x0000020000737ee0 : mov rdx, qword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x20000737ef7
0x00000200007384fc : mov rdx, qword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x20000738513
0x0000020000738bbc : mov rdx, qword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x20000738bd3
0x000002000073b62a : mov rdx, qword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x2000073b641
0x000002000073c7eb : mov rdx, qword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x2000073c802
0x000002000073cbe0 : mov rdx, qword ptr [rbx + 0x588] ; mov rax, rdx ; jmp 0x2000073cbf7
0x00000200005ff5af : mov rdx, qword ptr [rbx + 8] ; mov ecx, eax ; call r8
0x00000200005264e0 : mov rdx, qword ptr [rbx + 8] ; mov rbx, qword ptr [rsi] ; inc rdx ; jmp 0x200005264d4
0x0000020000472036 : mov rdx, qword ptr [rbx + rsi] ; call 0x2000003e336
0x000002000013ea40 : mov rdx, qword ptr [rcx + 0x20] ; call rax
0x000002000019f7f3 : mov rdx, qword ptr [rcx + 0x20] ; jmp 0x20000126262
0x000002000014ebb8 : mov rdx, qword ptr [rcx + 0x38] ; jmp rdx
0x00000200006719c7 : mov rdx, qword ptr [rdi + 0x38] ; mov ecx, 2 ; call rax
0x00000200006719e9 : mov rdx, qword ptr [rdi + 0x38] ; mov ecx, 3 ; call rax
0x000002000019253b : mov rdx, qword ptr [rdi + 0x38] ; test rdx, rdx ; je 0x2000019254f ; call rax
0x000002000051e21c : mov rdx, qword ptr [rdi + 0x38] ; xor ecx, ecx ; call rax
0x000002000022ef08 : mov rdx, qword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x2000022ef1f
0x000002000073798f : mov rdx, qword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x200007379a6
0x0000020000738050 : mov rdx, qword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x20000738067
0x00000200007389fb : mov rdx, qword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x20000738a12
0x0000020000738d6b : mov rdx, qword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x20000738d82
0x000002000073c5a0 : mov rdx, qword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x2000073c5b7
0x000002000073cd4d : mov rdx, qword ptr [rdi + 0x588] ; mov rax, rdx ; jmp 0x2000073cd64
0x000002000061cbe7 : mov rdx, qword ptr [rdi + 8] ; mov rcx, rbx ; call 0x200003e8e8d
0x000002000064129f : mov rdx, qword ptr [rdx + 0x10] ; call r8
0x00000200000c30aa : mov rdx, qword ptr [rdx + 0x18] ; test rdx, rdx ; jne 0x200000c30b0 ; ret
0x00000200006bfeef : mov rdx, qword ptr [rdx + 0x18] ; test rdx, rdx ; jne 0x200006bfeea ; ret
0x000002000044d079 : mov rdx, qword ptr [rdx + 0xd0] ; sub r8, r10 ; jmp 0x2000044d010
0x0000020000051549 : mov rdx, qword ptr [rdx + 8] ; call qword ptr [rbx]
0x00000200003de2fc : mov rdx, qword ptr [rdx + 8] ; call qword ptr [rdi]
0x000002000014017e : mov rdx, qword ptr [rdx + 8] ; call r10
0x000002000046530d : mov rdx, qword ptr [rdx + 8] ; lea r8, qword ptr [rsp + 0x58] ; call rax
0x00000200003a00ba : mov rdx, qword ptr [rdx + 8] ; mov ecx, dword ptr [rsi + 0x28] ; call rax
0x00000200005a87c4 : mov rdx, qword ptr [rdx + r14 + 0x18] ; call 0x20000664a3b
0x00000200004cc576 : mov rdx, qword ptr [rdx] ; cmp rdx, r8 ; jne 0x200004cc578 ; ret
0x0000020000632d53 : mov rdx, qword ptr [rdx] ; cmp rdx, r8 ; jne 0x20000632d4e ; ret
0x000002000022947b : mov rdx, qword ptr [rsi + 0x588] ; mov rax, rdx ; jmp 0x20000229492
0x000002000052bcfa : mov rdx, qword ptr [rsp + 0x28] ; add rax, rdx ; jmp 0x2000052bd19
0x0000020000400aee : mov rdx, qword ptr [rsp + 0x30] ; mov ecx, edi ; call 0x2000047cd9d
0x000002000063efef : mov rdx, qword ptr [rsp + 0x40] ; mov rcx, rdi ; call r8
0x0000020000230e32 : mov rdx, qword ptr [rsp + 0x48] ; mov dword ptr [r10], eax ; call r10
0x00000200001ab09e : mov rdx, qword ptr [rsp + 0x68] ; call rax
0x00000200001fd8bf : mov rdx, qword ptr [rsp + 0x70] ; call r9
0x000002000047858a : mov rdx, qword ptr [rsp + 0x70] ; mov rcx, rbp ; call rdi
0x00000200001fd90c : mov rdx, qword ptr [rsp + 0x70] ; xor ecx, ecx ; call r9
0x00000200005a2607 : mov rdx, qword ptr [rsp + 0x78] ; call 0x200001c46d0
0x0000020000407821 : mov rdx, r10 ; jmp r11
0x00000200006788bc : mov rdx, r10 ; mov rcx, r15 ; call r11
0x00000200001d1f0c : mov rdx, r10 ; mov rcx, rsi ; call qword ptr [rsi]
0x000002000052b23e : mov rdx, r11 ; mov rax, rdx ; ret
0x000002000013323a : mov rdx, r12 ; call rax
0x000002000058a3c9 : mov rdx, r12 ; lea rcx, qword ptr [rbp - 0x10] ; call 0x20000466631
0x0000020000678e66 : mov rdx, r12 ; mov qword ptr [rsp + 0x20], r14 ; call r10
0x0000020000694dac : mov rdx, r12 ; mov rcx, qword ptr [rbp - 0x71] ; call rax
0x00000200000e4685 : mov rdx, r12 ; mov rcx, r13 ; call rax
0x0000020000604437 : mov rdx, r12 ; mov rcx, r14 ; call rax
0x0000020000693b94 : mov rdx, r12 ; mov rcx, r14 ; call rsi
0x00000200004532ab : mov rdx, r12 ; mov rcx, r15 ; call rax
0x00000200004e14e8 : mov rdx, r12 ; mov rcx, r15 ; call rdi
0x0000020000399468 : mov rdx, r12 ; mov rcx, rbx ; call r8
0x00000200004c37ed : mov rdx, r12 ; mov rcx, rsi ; call 0x200000eb3c1
0x00000200004f650d : mov rdx, r13 ; call 0x200000b2775
0x00000200005a4a7f : mov rdx, r13 ; call 0x200000b8099
0x000002000049a21f : mov rdx, r13 ; mov ecx, r14d ; call 0x200000bc589
0x00000200007329e2 : mov rdx, r13 ; mov rcx, r14 ; call 0x2000013ec34
0x00000200005afe9f : mov rdx, r13 ; mov rcx, rbx ; call 0x200001dd6f1
0x00000200004f77a0 : mov rdx, r13 ; mov rcx, rdi ; call r12
0x00000200004c0d81 : mov rdx, r14 ; call 0x200000e28aa
0x00000200005d3367 : mov rdx, r14 ; call rax
0x0000020000040539 : mov rdx, r14 ; mov rcx, r12 ; call r15
0x00000200004c9fd9 : mov rdx, r14 ; mov rcx, r13 ; call rax
0x00000200004c363d : mov rdx, r14 ; mov rcx, r15 ; call 0x200000e9fdd
0x00000200004c358c : mov rdx, r14 ; mov rcx, r15 ; call 0x200000ea7fd
0x000002000052dc54 : mov rdx, r14 ; mov rcx, r15 ; call 0x2000014f189
0x000002000046546c : mov rdx, r14 ; mov rcx, r15 ; call rax
0x00000200006c5f8f : mov rdx, r14 ; mov rcx, rax ; call r15
0x00000200004973d9 : mov rdx, r14 ; mov rcx, rbx ; call 0x200000b8099
0x00000200004c0d2b : mov rdx, r14 ; mov rcx, rdi ; call 0x200000e2651
0x00000200004c0d71 : mov rdx, r14 ; mov rcx, rdi ; call 0x200000e28ad
0x0000020000694748 : mov rdx, r14 ; mov rcx, rsi ; call rax
0x00000200004c9bbe : mov rdx, r15 ; call 0x200000ee112
0x0000020000525a34 : mov rdx, r15 ; lea rcx, qword ptr [rbp - 9] ; call r12
0x000002000060eb82 : mov rdx, r15 ; mov ecx, ebx ; call 0x20000231ce8
0x00000200005a1936 : mov rdx, r15 ; mov rcx, qword ptr [r15 - 8] ; call qword ptr [rax]
0x00000200006bf2c2 : mov rdx, r15 ; mov rcx, qword ptr [rsi + 8] ; call rax
0x0000020000134888 : mov rdx, r15 ; mov rcx, r12 ; call r14
0x0000020000505095 : mov rdx, r15 ; mov rcx, r13 ; call 0x20000134779
0x00000200004c9b1c : mov rdx, r15 ; mov rcx, r14 ; call 0x200000ee1a1
0x0000020000467293 : mov rdx, r15 ; mov rcx, rbx ; call r14
0x000002000058f9fe : mov rdx, r15 ; mov rcx, rdi ; call 0x200001bd2c5
0x00000200001348c8 : mov rdx, r15 ; mov rcx, rsi ; call r14
0x000002000067da57 : mov rdx, r15 ; movzx ecx, bx ; call rax
0x000002000049946b : mov rdx, r8 ; call 0x200000bc286
0x0000020000128b40 : mov rdx, r8 ; call qword ptr [rbx]
0x00000200001445aa : mov rdx, r9 ; encls ; pop rbx ; ret
0x00000200005859a5 : mov rdx, r9 ; mov ecx, r8d ; call 0x20000011c68
0x000002000049567b : mov rdx, r9 ; mov rcx, r13 ; call 0x200000b5809
0x00000200001a3651 : mov rdx, r9 ; shr rdx, 0x10 ; mov eax, edx ; jmp 0x200001a367a
0x00000200001a36a9 : mov rdx, r9 ; shr rdx, 0x20 ; mov rax, rdx ; jmp 0x200001a36d3
0x00000200001a35cf : mov rdx, r9 ; shr rdx, 8 ; mov eax, edx ; jmp 0x200001a35fc
0x00000200006cc892 : mov rdx, rax ; add rsp, 0x38 ; jmp r8
0x000002000048e0de : mov rdx, rax ; call 0x200000bccc6
0x000002000050c113 : mov rdx, rax ; call 0x20000133f76
0x0000020000160eae : mov rdx, rax ; call r9
0x00000200004ba79a : mov rdx, rax ; jmp 0x200004ba765
0x00000200004c1db7 : mov rdx, rax ; mov r8, rcx ; call 0x200000e8389
0x00000200001785a8 : mov rdx, rax ; mov rcx, r12 ; call 0x2000006483c
0x00000200004beb72 : mov rdx, rax ; mov rcx, r14 ; call 0x200000e8389
0x00000200004beecf : mov rdx, rax ; mov rcx, r15 ; call 0x200000e8389
0x0000020000496f59 : mov rdx, rax ; mov rcx, r9 ; call 0x200000b8ea9
0x000002000009bb45 : mov rdx, rax ; mov rcx, rbp ; call r14
0x00000200001d2738 : mov rdx, rax ; mov rcx, rbx ; call qword ptr [rbx]
0x000002000015c0cd : mov rdx, rax ; mov rcx, rdi ; call 0x200000e8388
0x00000200004c1f44 : mov rdx, rax ; mov rcx, rdi ; call 0x200000e8389
0x00000200005a6baf : mov rdx, rax ; mov rcx, rsi ; call 0x200001c9749
0x00000200004f758a : mov rdx, rax ; mov rcx, rsi ; call r14
0x000002000060f3f8 : mov rdx, rbp ; call qword ptr [rip - 0x3db391]
0x00000200004fcceb : mov rdx, rbp ; call rax
0x000002000052cd84 : mov rdx, rbp ; mov dword ptr [rsp + 0x20], ebx ; call r10
0x00000200006b873f : mov rdx, rbp ; mov rcx, r12 ; call rax
0x00000200006b3723 : mov rdx, rbp ; mov rcx, r13 ; call rbx
0x00000200006c0889 : mov rdx, rbp ; mov rcx, r14 ; call rax
0x00000200004c9aa1 : mov rdx, rbp ; mov rcx, r15 ; call 0x200000ee225
0x000002000046f95a : mov rdx, rbp ; mov rcx, rsi ; call r14
0x0000020000497644 : mov rdx, rbx ; call 0x200000b8096
0x0000020000497643 : mov rdx, rbx ; call 0x200000b8097
0x00000200004970f4 : mov rdx, rbx ; call 0x200000b8cea
0x000002000060b45c : mov rdx, rbx ; call 0x20000231ce6
0x00000200003b619d : mov rdx, rbx ; call r10
0x0000020000203d81 : mov rdx, rbx ; call rsi
0x000002000044bf22 : mov rdx, rbx ; lea rcx, qword ptr [rsi + 0x10] ; call 0x200000e8159
0x000002000020f54b : mov rdx, rbx ; mov ecx, ebp ; call 0x2000020b843
0x000002000060e8e6 : mov rdx, rbx ; mov ecx, edi ; call 0x20000231ce8
0x0000020000465b4c : mov rdx, rbx ; mov rcx, r10 ; call rax
0x00000200006b930e : mov rdx, rbx ; mov rcx, r14 ; call r12
0x0000020000043e43 : mov rdx, rbx ; mov rcx, r15 ; call rax
0x0000020000421804 : mov rdx, rbx ; mov rcx, rbp ; call 0x200000450c5
0x00000200004152e6 : mov rdx, rbx ; mov rcx, rdi ; call r10
0x00000200006c0486 : mov rdx, rbx ; mov rcx, rdi ; call rax
0x0000020000042996 : mov rdx, rbx ; mov rcx, rdi ; call rsi
0x0000020000460295 : mov rdx, rbx ; mov rcx, rsi ; call 0x20000087109
0x00000200004756e6 : mov rdx, rbx ; mov rcx, rsi ; call 0x2000009a2d9
0x000002000004887d : mov rdx, rbx ; mov rcx, rsi ; call r9
0x0000020000230c8b : mov rdx, rbx ; pop rbx ; add rsp, 8 ; jmp r8
0x00000200000d523a : mov rdx, rbx ; xor ecx, ecx ; call 0x200000d1507
0x000002000063ef22 : mov rdx, rbx ; xor ecx, ecx ; call r8
0x00000200006bf1a8 : mov rdx, rcx ; jne 0x200006bf1b7 ; xor eax, eax ; ret
0x000002000040173e : mov rdx, rcx ; mov rcx, qword ptr [rdi + 8] ; call rax
0x0000020000115c81 : mov rdx, rcx ; mov rcx, rdi ; call rbx
0x00000200002014d6 : mov rdx, rdi ; call 0x200000478c7
0x00000200002014d5 : mov rdx, rdi ; call 0x200000478c8
0x00000200002014d4 : mov rdx, rdi ; call 0x200000478c9
0x000002000017b739 : mov rdx, rdi ; call 0x200000979d5
0x0000020000475a84 : mov rdx, rdi ; call 0x2000009a2d6
0x00000200004a2529 : mov rdx, rdi ; call 0x200000c2d16
0x00000200005ece3e : mov rdx, rdi ; call 0x2000013f9b1
0x0000020000523b23 : mov rdx, rdi ; call 0x2000014f186
0x00000200005ccbf6 : mov rdx, rdi ; call 0x200003d8e9d
0x0000020000443bca : mov rdx, rdi ; call qword ptr [rax]
0x000002000060f13c : mov rdx, rdi ; call rax
0x000002000015eac2 : mov rdx, rdi ; jmp 0x2000015eae3
0x000002000013d0bf : mov rdx, rdi ; mov rcx, r11 ; call r8
0x00000200004c1349 : mov rdx, rdi ; mov rcx, r13 ; call 0x200000e4de9
0x00000200005d00f9 : mov rdx, rdi ; mov rcx, r14 ; call rax
0x0000020000475ee9 : mov rdx, rdi ; mov rcx, r15 ; call 0x2000009a2d9
0x00000200005d0151 : mov rdx, rdi ; mov rcx, r15 ; call rax
0x000002000049932d : mov rdx, rdi ; mov rcx, rax ; call 0x200000ba3f9
0x0000020000525e7d : mov rdx, rdi ; mov rcx, rax ; call 0x2000014f189
0x00000200004794d5 : mov rdx, rdi ; mov rcx, rbp ; call r15
0x00000200001c9921 : mov rdx, rdi ; mov rcx, rbp ; call rax
0x000002000058fb95 : mov rdx, rdi ; mov rcx, rbx ; call 0x200001bd2c5
0x00000200005d21d3 : mov rdx, rdi ; mov rcx, rbx ; call 0x2000069e450
0x000002000051e6f1 : mov rdx, rdi ; mov rcx, rbx ; call qword ptr [rax]
0x00000200001a9346 : mov rdx, rdi ; mov rcx, rbx ; call r10
0x00000200004756bc : mov rdx, rdi ; mov rcx, rsi ; call 0x2000009a4a9
0x00000200004756db : mov rdx, rdi ; mov rcx, rsi ; call 0x2000009d699
0x00000200005d018c : mov rdx, rdi ; mov rcx, rsi ; call r10
0x00000200006b8d08 : mov rdx, rdi ; mov rcx, rsi ; mov rbp, rax ; call rbx
0x000002000005b7ba : mov rdx, rsi ; call 0x200000979d5
0x000002000060ab46 : mov rdx, rsi ; call 0x20000231ce6
0x000002000050274e : mov rdx, rsi ; call 0x200004ee97d
0x00000200002114d8 : mov rdx, rsi ; call r10
0x000002000013484b : mov rdx, rsi ; call r14
0x000002000016f375 : mov rdx, rsi ; call rax
0x00000200004b4441 : mov rdx, rsi ; mov ecx, ebx ; call rax
0x00000200003e5548 : mov rdx, rsi ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005d016a : mov rdx, rsi ; mov r8d, dword ptr [rbx] ; mov rcx, rbp ; call rax
0x0000020000405b3c : mov rdx, rsi ; mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200001dce80 : mov rdx, rsi ; mov rcx, r12 ; call 0x200006290cc
0x00000200004cc238 : mov rdx, rsi ; mov rcx, r14 ; call 0x200000f7d51
0x0000020000475fef : mov rdx, rsi ; mov rcx, r15 ; call 0x2000009a2d9
0x00000200004beeb3 : mov rdx, rsi ; mov rcx, r15 ; call 0x200000e8159
0x00000200005a4c0e : mov rdx, rsi ; mov rcx, r15 ; call 0x200001cb465
0x0000020000123dcc : mov rdx, rsi ; mov rcx, r15 ; call r14
0x00000200004c9d81 : mov rdx, rsi ; mov rcx, r15 ; call rax
0x00000200005281c5 : mov rdx, rsi ; mov rcx, rax ; call 0x2000014f189
0x00000200005ae87e : mov rdx, rsi ; mov rcx, rax ; call 0x2000064ab0c
0x00000200004295c4 : mov rdx, rsi ; mov rcx, rbp ; call 0x20000059335
0x00000200004091ca : mov rdx, rsi ; mov rcx, rbp ; call rax
0x000002000041d2b9 : mov rdx, rsi ; mov rcx, rbx ; call 0x20000042aa9
0x000002000041d299 : mov rdx, rsi ; mov rcx, rbx ; call r11
0x000002000013491d : mov rdx, rsi ; mov rcx, rbx ; call r14
0x000002000042399e : mov rdx, rsi ; mov rcx, rdi ; call 0x200000459c9
0x00000200004238a4 : mov rdx, rsi ; mov rcx, rdi ; call 0x20000053855
0x000002000049801c : mov rdx, rsi ; mov rcx, rdi ; call 0x200000ba851
0x00000200004c00fb : mov rdx, rsi ; mov rcx, rdi ; call 0x200000e8159
0x000002000013494d : mov rdx, rsi ; mov rcx, rdi ; call r14
0x0000020000633ff3 : mov rdx, rsi ; mov rcx, rdi ; call rax
0x0000020000171625 : mov rdx, rsi ; mov rcx, rdi ; call rbx
0x0000020000737a6c : mov rsi, -0x47868c00 ; mov rax, rdx ; jmp 0x20000737a83
0x00000200004ec98f : mov rsi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rbp ; ret
0x000002000002e291 : mov rsi, qword ptr [r11 + 0x18] ; mov rsp, r11 ; pop rdi ; ret
0x00000200006117a9 : mov rsi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop r14 ; ret
0x000002000000e58c : mov rsi, qword ptr [r11 + 0x20] ; mov rsp, r11 ; pop rdi ; ret
0x00000200004723ff : mov rsi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop r14 ; ret
0x00000200000027ec : mov rsi, qword ptr [r11 + 0x28] ; mov rsp, r11 ; pop rdi ; ret
0x00000200004270ce : mov rsi, qword ptr [r14] ; jmp 0x20000427069
0x0000020000222afa : mov rsi, qword ptr [rbp + 0x38] ; mov rax, rdx ; jmp 0x20000222b0b
0x0000020000224da4 : mov rsi, qword ptr [rbp + 0x38] ; mov rax, rdx ; jmp 0x20000224db5
0x0000020000227e6a : mov rsi, qword ptr [rbp + 0x38] ; mov rax, rdx ; jmp 0x20000227e7b
0x00000200006b49cc : mov rsi, qword ptr [rsp + 0x10] ; mov qword ptr [rdx], r11 ; ret
0x0000020000038511 : mov rsi, qword ptr [rsp + 0x10] ; ret
0x00000200000032ee : mov rsi, qword ptr [rsp + 0x18] ; ret
0x0000020000063112 : mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x000002000061a871 : mov rsi, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x0000020000620d15 : mov rsi, rax ; call 0x2000045cf95
0x00000200006c95d5 : mov rsi, rax ; call qword ptr [rdi]
0x00000200006b905e : mov rsi, rax ; call rbx
0x00000200001e1747 : mov rsi, rcx ; jmp 0x200001e17b1
0x000002000010aea9 : mov rsi, rdx ; call qword ptr [rbx]
0x00000200001c9c9b : mov rsi, rdx ; mov rbx, rcx ; call qword ptr [rax]
0x0000020000423d4a : mov rsi, rdx ; mov rdi, rcx ; call 0x200000459c9
0x000002000013ff78 : mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x000002000014e34d : mov rsp, qword ptr [rsp + 0x100] ; sti ; ret
0x000002000076e7d7 : mov rsp, r11 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000076ec49 : mov rsp, r11 ; pop r12 ; ret
0x00000200005337ab : mov rsp, r11 ; pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000412bc2 : mov rsp, r11 ; pop r14 ; pop r12 ; pop rbp ; ret
0x0000020000125850 : mov rsp, r11 ; pop r14 ; pop r12 ; pop rdi ; ret
0x000002000007bd65 : mov rsp, r11 ; pop r14 ; pop r13 ; pop r12 ; ret
0x000002000005fa69 : mov rsp, r11 ; pop r14 ; pop r13 ; pop rbp ; ret
0x0000020000007aa0 : mov rsp, r11 ; pop r14 ; pop r13 ; pop rdi ; ret
0x000002000001a259 : mov rsp, r11 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000001edeb : mov rsp, r11 ; pop r14 ; pop rdi ; pop rsi ; ret
0x00000200000026fa : mov rsp, r11 ; pop r14 ; ret
0x000002000051cd0a : mov rsp, r11 ; pop r15 ; pop r12 ; pop rbp ; ret
0x00000200004694c9 : mov rsp, r11 ; pop r15 ; pop r13 ; pop rbp ; ret
0x000002000001e519 : mov rsp, r11 ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000003b925 : mov rsp, r11 ; pop r15 ; pop r14 ; pop r13 ; ret
0x0000020000002e61 : mov rsp, r11 ; pop r15 ; pop r14 ; pop rbp ; ret
0x00000200001c58a0 : mov rsp, r11 ; pop r15 ; pop r14 ; pop rcx ; ret
0x0000020000002518 : mov rsp, r11 ; pop r15 ; pop r14 ; pop rdi ; ret
0x00000200004039c4 : mov rsp, r11 ; pop r15 ; pop r14 ; pop rsi ; ret
0x0000020000213043 : mov rsp, r11 ; pop r15 ; pop rdi ; pop rbp ; ret
0x000002000003d59e : mov rsp, r11 ; pop r15 ; pop rdi ; pop rsi ; ret
0x00000200001bc57a : mov rsp, r11 ; pop r15 ; ret
0x0000020000008b8d : mov rsp, r11 ; pop rbp ; ret
0x00000200000027f0 : mov rsp, r11 ; pop rdi ; ret
0x00000200004d8fce : mov rsp, r11 ; pop rsi ; ret
0x00000200006a8c92 : mov sil, al ; call qword ptr [rip - 0x3d94f3]
0x0000020000086c80 : mov spl, 0xf ; add byte ptr [rax - 0x3ffffddb], bh ; ret
0x0000020000579aca : mov ss, eax ; ret 0x8bff
0x00000200004ba28e : mov ss, edi ; sar bh, 0x8b ; ret
0x00000200004f647e : mov ss, word ptr [rax + 9] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000421cf0 : mov ss, word ptr [rcx + 0x48001762] ; add esp, 0x38 ; ret
0x00000200004119ee : mov ss, word ptr [rdi] ; sar bh, cl ; add rsp, 0x78 ; ret
0x00000200007783d6 : mov ss, word ptr [rip - 0x74bb005b] ; ret
0x0000020000025e81 : mov word ptr [r10 + 0x10], r9w ; ret
0x00000200000866f9 : mov word ptr [r10 + 2], ax ; ret
0x00000200003d9de6 : mov word ptr [r10 + 2], cx ; xor eax, eax ; ret
0x0000020000647d4b : mov word ptr [r10], r9w ; mov al, 1 ; ret
0x000002000049a3f3 : mov word ptr [r13 + rbx*2 - 0xa], dr0 ; ret
0x0000020000523b0f : mov word ptr [r14 + 2], ax ; call 0x2000014f188
0x00000200006c4d46 : mov word ptr [r8 + 0xa], cx ; mov rax, r8 ; ret
0x00000200001cf5ad : mov word ptr [r8 + 0xa], cx ; ret
0x00000200001b949a : mov word ptr [r8 + 2], cx ; mov al, 1 ; ret
0x000002000044cb02 : mov word ptr [r8 + 2], r9w ; xor eax, eax ; ret
0x0000020000416850 : mov word ptr [r8 + 4], dx ; ret
0x00000200000f04bf : mov word ptr [r8], ax ; ret
0x00000200004e11ad : mov word ptr [r8], ax ; xor eax, eax ; ret
0x00000200000f0459 : mov word ptr [r8], r9w ; jmp 0x200000f0427
0x000002000041e6ff : mov word ptr [r9 + 0x938], ax ; ret
0x000002000041e6f6 : mov word ptr [r9 + 0x938], r8w ; ret
0x0000020000634077 : mov word ptr [r9 + 8], dx ; add rsp, 0x28 ; ret
0x0000020000167166 : mov word ptr [rax + 0x1661e2], es ; add rcx, r8 ; jmp rcx
0x0000020000459d1d : mov word ptr [rax + 0x45a2dc], es ; add rcx, r8 ; jmp rcx
0x000002000045eeb0 : mov word ptr [rax + 0x45e1a0], es ; add rcx, r8 ; jmp rcx
0x000002000059f01e : mov word ptr [rax + rax*2], fs ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200004bedd3 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add al, ch ; ret 0xc758
0x00000200001f91cd : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000a8115 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x00000200004ddadb : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x1188
0x0000020000173504 : mov word ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x0000020000401157 : mov word ptr [rax + rax*8], fs ; add byte ptr [rax], al ; add al, ch ; jp 0x20000401183 ; ret
0x000002000074072f : mov word ptr [rax + rax*8], fs ; add byte ptr [rax], al ; add al, ch ; ret
0x0000020000673250 : mov word ptr [rax + rbp*8], fs ; add byte ptr [rax], al ; add al, ch ; ret 0xffad
0x0000020000215a4b : mov word ptr [rax + rbp*8], fs ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8b41
0x000002000000444d : mov word ptr [rax + rbp*8], fs ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200005c1491 : mov word ptr [rax + rbx*2], fs ; add dword ptr [rax], eax ; add al, ch ; test byte ptr [rdx], al ; ret 0x44ff
0x00000200001942a4 : mov word ptr [rax + rbx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x00000200004905ac : mov word ptr [rax + rbx*8], fs ; add byte ptr [rax], al ; add al, ch ; or dword ptr [rsi], ebx ; ret
0x000002000040606c : mov word ptr [rax + rbx*8], fs ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000066d353 : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add al, ch ; ret 0xacad
0x0000020000654a77 : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200003cfa03 : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200000d1cc8 : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000173a0d : mov word ptr [rax + rcx*4], fs ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200004b277a : mov word ptr [rax + rcx*8], fs ; add byte ptr [rax], al ; add al, ch ; cmp edi, ebp ; ret 0x48ff
0x00000200000a9c9e : mov word ptr [rax + rcx*8], fs ; add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], cl ; ret 0x840f
0x0000020000440dbd : mov word ptr [rax + rdi + 0x490043fe], es ; add ecx, esp ; jmp rcx
0x00000200000cf342 : mov word ptr [rax + rdi*4], fs ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200000a9e38 : mov word ptr [rax + rdi*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0x8b48
0x0000020000179543 : mov word ptr [rax + rdi*8], fs ; add byte ptr [rax], al ; add al, ch ; ret 0xf370
0x0000020000070163 : mov word ptr [rax + rdi], fs ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x000002000061876c : mov word ptr [rax + rdi], fs ; add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x0000020000492f96 : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add al, ch ; out dx, eax ; push rax ; ret 0xe9ff
0x0000020000492e02 : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add al, ch ; xlatb ; pop rsi ; ret 0x48ff
0x000002000009dc3f : mov word ptr [rax + rdx*4], fs ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000000d315 : mov word ptr [rax + rsi*8], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8948
0x00000200000c12d6 : mov word ptr [rax + rsi*8], fs ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 - 0x5c], cl ; ret
0x000002000006d86b : mov word ptr [rax + rsi*8], fs ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000020000014517 : mov word ptr [rax + rsi*8], fs ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x0000020000490245 : mov word ptr [rax + rsi], fs ; add dword ptr [rax], eax ; add al, ch ; adc byte ptr [rbx], ch ; ret
0x00000200005840d2 : mov word ptr [rax - 0x17], dr1 ; ljmp ptr [rbx] ; ret
0x0000020000215189 : mov word ptr [rax - 0x75], cs ; ret 0xc148
0x00000200006dcba5 : mov word ptr [rax - 1], ss ; ret
0x00000200004d06c1 : mov word ptr [rax], dx ; ret
0x00000200000f1908 : mov word ptr [rax], es ; add byte ptr [rax], al ; ret
0x000002000048f6e2 : mov word ptr [rax], fs ; add byte ptr [rax], al ; add al, ch ; jae 0x2000048f72a ; ret
0x00000200000bd842 : mov word ptr [rax], fs ; add byte ptr [rax], al ; add al, ch ; ret
0x0000020000065167 : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret
0x0000020000434ece : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000016eca8 : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200003ce10a : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x00000200003ce2b6 : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xace8
0x000002000069d11a : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret 0xf48
0x000002000009a8a4 : mov word ptr [rax], fs ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x00000200003cda52 : mov word ptr [rax], fs ; add dword ptr [rax], eax ; add al, ch ; ret
0x0000020000630b9c : mov word ptr [rax], gs ; mov eax, 0xff000000 ; ret 0x163b
0x00000200003d24f3 : mov word ptr [rbp + 0x3d313c], es ; add rcx, r13 ; jmp rcx
0x000002000004aec9 : mov word ptr [rbp + 0x4a134], es ; add rcx, rbp ; jmp rcx
0x00000200004be253 : mov word ptr [rbp + 0x4bd2c8], es ; add rcx, r13 ; jmp rcx
0x0000020000054e70 : mov word ptr [rbp + 0x53f14], es ; add rcx, rbp ; jmp rcx
0x000002000052aa3f : mov word ptr [rbp + rax*2 - 0x78], r12w ; call 0x2000014f4c9
0x000002000049a3f4 : mov word ptr [rbp + rbx*2 - 0xa], dr0 ; ret
0x000002000060b5df : mov word ptr [rbp - 0x70], ax ; call 0x20000231ce7
0x000002000060a0f7 : mov word ptr [rbp - 0x71], ax ; call 0x20000231ce7
0x000002000066291d : mov word ptr [rbx + 8], ax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005dfd9 : mov word ptr [rbx + rax], cs ; add byte ptr [rcx - 0x75], al ; ret
0x000002000010c330 : mov word ptr [rbx - 5], dr0 ; jmp qword ptr [rcx]
0x0000020000646cea : mov word ptr [rbx], ax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001638b7 : mov word ptr [rbx], dr0 ; in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x00000200004293f8 : mov word ptr [rbx], dr0 ; ret
0x000002000021af74 : mov word ptr [rbx], r10w ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000115f73 : mov word ptr [rcx + 0x10], ax ; mov qword ptr [rcx + 8], r8 ; ret
0x00000200001c1c24 : mov word ptr [rcx + 0x10], dx ; mov qword ptr [rcx + 8], r8 ; ret
0x00000200003dffb0 : mov word ptr [rcx + 0x1d2], 0 ; ret
0x00000200000459b8 : mov word ptr [rcx + 0x36], dx ; ret
0x00000200004458e7 : mov word ptr [rcx + 0x4453f4], es ; add rcx, r9 ; jmp rcx
0x0000020000445b26 : mov word ptr [rcx + 0x445428], es ; add rcx, r9 ; jmp rcx
0x00000200001f6a8f : mov word ptr [rcx + 0x48], ax ; ret
0x0000020000533b04 : mov word ptr [rcx + 0xa4], ax ; ret
0x00000200006ab38b : mov word ptr [rcx + 0xd6], ax ; ret
0x0000020000036441 : mov word ptr [rcx + 2], ax ; ret
0x00000200000730cd : mov word ptr [rcx + 2], ax ; xor eax, eax ; ret
0x000002000043ee1d : mov word ptr [rcx + 2], dx ; mov dword ptr [rcx + 4], eax ; ret
0x00000200004e85bb : mov word ptr [rcx + 2], dx ; xor eax, eax ; ret
0x00000200003d58f2 : mov word ptr [rcx + 6], ax ; xor eax, eax ; ret
0x00000200005b6090 : mov word ptr [rcx - 0x2c], es ; dec dword ptr [rcx - 0x17b7dbbc] ; ret
0x00000200000c376f : mov word ptr [rcx], ax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000013f813 : mov word ptr [rcx], ax ; ret
0x00000200001fc69c : mov word ptr [rcx], ax ; xor eax, eax ; ret
0x000002000043d7cc : mov word ptr [rcx], dr1 ; and eax, dword ptr [rax] ; mov rcx, rax ; jmp 0x2000043d7a0
0x00000200004d06be : mov word ptr [rcx], dx ; mov word ptr [rax], dx ; ret
0x00000200001bfc1f : mov word ptr [rcx], dx ; ret
0x0000020000135797 : mov word ptr [rcx], r10w ; mov rax, r9 ; ret
0x00000200000200b0 : mov word ptr [rcx], r11w ; ret
0x00000200005f74d0 : mov word ptr [rcx], ss ; sar bh, 1 ; call 0x20000053796
0x00000200006d7c04 : mov word ptr [rdi + 0x1589ffc2], gs ; jb 0x200006d7bc3 ; ret 0x4cff
0x0000020000020be1 : mov word ptr [rdi + 0x1fc58], cs ; add rcx, r15 ; jmp rcx
0x00000200005767bd : mov word ptr [rdi + 0x575e4a], es ; add rcx, r15 ; jmp rcx
0x0000020000505b29 : mov word ptr [rdi], cs ; add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rbp ; ret
0x00000200000581be : mov word ptr [rdx + 0x14], ax ; ret
0x000002000001b999 : mov word ptr [rdx + 0x1ac5c], es ; add rcx, rdx ; jmp rcx
0x0000020000148a66 : mov word ptr [rdx + 0x2cc0], ax ; ret
0x00000200003a009e : mov word ptr [rdx + 0x39f294], es ; add rcx, rdx ; jmp rcx
0x000002000004238a : mov word ptr [rdx + 0x413ac], es ; add rcx, rdx ; jmp rcx
0x00000200004583d5 : mov word ptr [rdx + 0x457b48], es ; add rcx, rdx ; jmp rcx
0x000002000045e815 : mov word ptr [rdx + 0x45db58], es ; add rcx, rdx ; jmp rcx
0x000002000076e971 : mov word ptr [rdx + 0x4801b0ff], ds ; add esp, 0x28 ; ret
0x00000200004a018e : mov word ptr [rdx + 0x49f988], es ; add rcx, rdx ; jmp rcx
0x00000200004a2041 : mov word ptr [rdx + 0x4a1734], dr0 ; add rcx, rdx ; jmp rcx
0x00000200004aa6cb : mov word ptr [rdx + 0x4a97e0], es ; add rcx, rdx ; jmp rcx
0x00000200004aa8a3 : mov word ptr [rdx + 0x4a9fc8], es ; add rcx, rdx ; jmp rcx
0x00000200004b3b22 : mov word ptr [rdx + 0x4b3d98], ds ; add rcx, rdx ; jmp rcx
0x00000200004b3b69 : mov word ptr [rdx + 0x4b4064], es ; add rcx, rdx ; jmp rcx
0x00000200004b5472 : mov word ptr [rdx + 0x4b4768], es ; add rcx, rdx ; jmp rcx
0x00000200004b73d0 : mov word ptr [rdx + 0x4b86d8], es ; add rcx, rdx ; jmp rcx
0x0000020000613e8d : mov word ptr [rdx + 0x612ef8], es ; add rcx, rdx ; jmp rcx
0x000002000069b239 : mov word ptr [rdx + 0x69a570], es ; add rcx, r10 ; jmp rcx
0x00000200006a9edf : mov word ptr [rdx + 0x6a9608], es ; add rcx, rdx ; jmp rcx
0x000002000006b2a0 : mov word ptr [rdx + 0x6a9bc], cs ; add rcx, rdx ; jmp rcx
0x000002000006c0d2 : mov word ptr [rdx + 0x6b834], cs ; add rcx, rdx ; jmp rcx
0x000002000006d0dc : mov word ptr [rdx + 0x6db84], cs ; add rcx, rdx ; jmp rcx
0x000002000007ee7e : mov word ptr [rdx + 0x7e188], es ; add rcx, r10 ; jmp rcx
0x000002000007ef12 : mov word ptr [rdx + 0x7e1d8], es ; add rcx, r10 ; jmp rcx
0x00000200005319c5 : mov word ptr [rdx + 0xa], ax ; and word ptr [rdx + 8], cx ; ret
0x00000200000bbac3 : mov word ptr [rdx + 0xbb210], es ; add rcx, rdx ; jmp rcx
0x00000200006c3431 : mov word ptr [rdx + 2], r8w ; ret
0x00000200004a0af2 : mov word ptr [rdx], ax ; mov byte ptr [r8], 1 ; mov al, 1 ; ret
0x00000200004e8bc9 : mov word ptr [rdx], ax ; ret
0x0000020000417d97 : mov word ptr [rdx], ax ; xor eax, eax ; ret
0x00000200001f630f : mov word ptr [rdx], cx ; add qword ptr [r8], 2 ; ret
0x00000200004c1350 : mov word ptr [rdx], dr1 ; ret 0x8bff
0x00000200004cb1bc : mov word ptr [rdx], dr1 ; ret 0xe8ff
0x0000020000132402 : mov word ptr [rdx], es ; add byte ptr [rax], al ; ret
0x00000200006c342d : mov word ptr [rdx], r8w ; mov word ptr [rdx + 2], r8w ; ret
0x000002000052e230 : mov word ptr [rdx], ss ; ret 0x8bff
0x00000200001257d9 : mov word ptr [rip + 0x1dd658], cx ; ret
0x000002000076817f : mov word ptr [rip - 0x48e3c8], 0x3232 ; ret
0x000002000051df30 : mov word ptr [rip - 0x74b7fffd], ss ; ror dword ptr [rax - 1], 1 ; ret 0x4566
0x00000200004be210 : mov word ptr [rsi + 0x4bd28c], es ; add rcx, rsi ; jmp rcx
0x000002000050ad2e : mov word ptr [rsi + rax*2 + 0x10], di ; call 0x20000133f78
0x000002000075e508 : mov word ptr [rsi], cs ; ret 0x85ff
0x00000200005fd980 : mov word ptr [rsi], dr0 ; ret
0x00000200006b4ae0 : mov word ptr [rsi], dr0 ; ret 0x8bff
0x000002000052c946 : mov word ptr [rsp + 0x38], ax ; call 0x200003e8c07
0x00000200000fcb15 : mov word ptr [rsp + 0x3c], r15w ; call r9
0x000002000052a1d5 : mov word ptr [rsp + rax*2 + 0x78], r14w ; call 0x2000014f4c9
0x0000020000440d98 : mov word ptr [rsp + rbp*8 + 0x490043fd], es ; add ecx, esp ; jmp rcx
0x000002000069ed2f : movabs al, byte ptr [0x13ce058b48000000] ; ret
0x00000200006b6c4c : movabs al, byte ptr [0x15bd05c748d233ff] ; ret 0xff
0x00000200006b6b4c : movabs al, byte ptr [0x16bd05c748d233ff] ; ret 0xff
0x00000200005cdab6 : movabs al, byte ptr [0x1a77058d48000000] ; ret 0x48ff
0x00000200001b2af7 : movabs al, byte ptr [0x274c98548000000] ; call rcx
0x00000200001b5191 : movabs al, byte ptr [0x2fe8ca8b49000000] ; ret
0x00000200006ba743 : movabs al, byte ptr [0x344f98b48000000] ; ret 0xf28b
0x000002000022dc5a : movabs al, byte ptr [0x3b419c5589d18b41] ; ret
0x00000200006d794b : movabs al, byte ptr [0x3b4808598948ffbf] ; ret
0x00000200004b6eb5 : movabs al, byte ptr [0x3b4880000019bf41] ; ret 0x850f
0x0000020000733360 : movabs al, byte ptr [0x3b490000016a870f] ; ret 0x840f
0x00000200004ab12d : movabs al, byte ptr [0x42bce801b1000000] ; ret
0x0000020000475f2f : movabs al, byte ptr [0x4546e8ce8b480013] ; ret 0x85ff
0x0000020000216e70 : movabs al, byte ptr [0x4e8cc3348000000] ; ret
0x00000200006d797f : movabs al, byte ptr [0x5b20c4834800ffbf] ; ret
0x00000200006c1103 : movabs al, byte ptr [0x5b20c48348c033ff] ; ret
0x00000200006c017f : movabs al, byte ptr [0x5b20c48348c38bff] ; ret
0x000002000015548d : movabs al, byte ptr [0x5d40c4834890fff2] ; ret
0x0000020000154cc1 : movabs al, byte ptr [0x5d50c48348000000] ; ret
0x000002000045117f : movabs al, byte ptr [0x5d5e415f41000001] ; ret
0x000002000053c503 : movabs al, byte ptr [0x5f20c48348000000] ; ret
0x0000020000170713 : movabs al, byte ptr [0x6348c3950f000000] ; ret
0x0000020000184cf6 : movabs al, byte ptr [0x748b4cc6b70ffff0] ; ret 0x4d08
0x000002000046c528 : movabs al, byte ptr [0x850fc98548000000] ; ret 0
0x0000020000497e1f : movabs al, byte ptr [0x850fc9854d000000] ; ret
0x0000020000616fc7 : movabs al, byte ptr [0x8b40245c8d4cffc1] ; ret
0x00000200003b6aa4 : movabs al, byte ptr [0x8b44d08b48003425] ; ret
0x00000200006be19f : movabs al, byte ptr [0x8b4858246c8b48ff] ; ret
0x00000200004fa8ed : movabs al, byte ptr [0x8b4ce9d149000000] ; ret
0x000002000053c7e2 : movabs al, byte ptr [0x8b6024748b480009] ; ret
0x000002000050d9ac : movabs al, byte ptr [0x8b68246c8b48ffbb] ; ret
0x00000200001435b5 : movabs al, byte ptr [0xa8c2e9000001] ; ret
0x00000200005151c3 : movabs al, byte ptr [0xb372e820245c8948] ; ret 0x48ff
0x0000020000515154 : movabs al, byte ptr [0xb3e1e820245c8948] ; ret 0x48ff
0x00000200005150ea : movabs al, byte ptr [0xb44be820245c8948] ; ret 0x85ff
0x00000200001415b5 : movabs al, byte ptr [0xc8c2e9000000] ; ret
0x0000020000692f2f : movabs al, byte ptr [0xd1ce058b48000000] ; ret
0x0000020000692a93 : movabs al, byte ptr [0xd66a058b48000000] ; ret
0x0000020000692973 : movabs al, byte ptr [0xd78a058b48000000] ; ret
0x0000020000191ed0 : movabs al, byte ptr [0xd8d484024548d48] ; ret
0x00000200005639e1 : movabs al, byte ptr [0xd97a0905c7ffe655] ; jmp qword ptr [rdx]
0x0000020000692147 : movabs al, byte ptr [0xdfb6058b48000000] ; ret
0x0000020000691d8b : movabs al, byte ptr [0xe372058b48000000] ; ret
0x00000200001e9460 : movabs al, byte ptr [0xe800000002000000] ; ret
0x000002000006e9c5 : movabs al, byte ptr [0xe908408b49000003] ; ret 0xffef
0x0000020000690e57 : movabs al, byte ptr [0xf2a6058b48000000] ; ret
0x0000020000690d37 : movabs al, byte ptr [0xf3c6058b48000000] ; ret
0x0000020000690c17 : movabs al, byte ptr [0xf4e6058b48000000] ; ret
0x0000020000690927 : movabs al, byte ptr [0xf7d6058b48000000] ; ret
0x000002000018b61d : movabs al, byte ptr [0xff48c1440fd28548] ; ret 0x4489
0x0000020000536e75 : movabs al, byte ptr [0xffe8cc3348000003] ; ret 0xffbf
0x000002000014f659 : movabs byte ptr [0x1aa2720589001a], al ; ret
0x0000020000438c86 : movabs byte ptr [0x3b10458d41000001], al ; ret
0x00000200001850a5 : movabs byte ptr [0x488d50458b41fff0], al ; jmp qword ptr [rbx]
0x00000200006dc9e0 : movabs byte ptr [0x5b20c48348c033ff], al ; ret
0x0000020000016c2a : movabs byte ptr [0x5b40c48348000a9d], al ; ret
0x00000200006349da : movabs byte ptr [0x5b50c48348ffafe7], al ; ret
0x0000020000154c1c : movabs byte ptr [0x5d20c4834890000a], al ; ret
0x00000200001146da : movabs byte ptr [0x5d70c483480001ea], al ; ret
0x00000200005d76c5 : movabs byte ptr [0x7fe8cb8b48fff67b], al ; jmp rbx
0x00000200001435f5 : movabs byte ptr [0xa882e9000001], al ; ret
0x000002000003b14d : movabs byte ptr [0xb70fc1b70f450012], al ; ret 0x4166
0x00000200006d760a : movabs byte ptr [0xc32b0d8948ffc2c3], al ; ret 0x48ff
0x00000200001415f5 : movabs byte ptr [0xc882e9000000], al ; ret
0x000002000074bbe1 : movabs byte ptr [0xd8d481f89490002], al ; ret 0xbb0d
0x00000200006c0f6e : movabs byte ptr [0xffffcbe296058bff], al ; ret
0x0000020000088a36 : movabs dword ptr [0x28c4834801b0000f], eax ; ret
0x000002000051a9d9 : movabs dword ptr [0x599ce8b7ebffc259], eax ; ret 0xebff
0x00000200001b3435 : movabs dword ptr [0x5b20c48348001464], eax ; ret
0x00000200006d7567 : movabs dword ptr [0x5b20c48348c38bff], eax ; ret
0x00000200006dc2ab : movabs dword ptr [0x5b30c48348c38bff], eax ; ret
0x000002000053f99e : movabs dword ptr [0x5e4120c48348001b], eax ; ret
0x0000020000436d74 : movabs dword ptr [0x8348ca03412c72c7], eax ; ret
0x000002000069c639 : movabs dword ptr [0x8348ce8b48ffc7d5], eax ; ret 0xe802
0x00000200004025c2 : movabs dword ptr [0x8b48204b8d49ffed], eax ; ret 0x8949
0x000002000063dba4 : movabs dword ptr [0x8b4c1274c08548ff], eax ; ret
0x000002000055ff83 : movabs dword ptr [0x8b4cffe5], eax ; ret
0x0000020000418fa4 : movabs dword ptr [0x8b80430006bb0016], eax ; ret
0x00000200006d5355 : movabs dword ptr [0x8bbf3061830472ed], eax ; ret
0x00000200000c777e : movabs dword ptr [0x8bfffffeba830fc8], eax ; ret 0x8b4d
0x00000200006d952d : movabs dword ptr [0xa4780d8948000027], eax ; ret 0xe9ff
0x0000020000143615 : movabs dword ptr [0xa862e9000001], eax ; ret
0x0000020000050823 : movabs dword ptr [0xc032c301b00373c1], eax ; ret
0x0000020000141615 : movabs dword ptr [0xc862e9000000], eax ; ret
0x00000200004f9db1 : movabs dword ptr [0xfe000000cb820fc6], eax ; ret
0x0000020000684dab : movabs dword ptr [0xff02c683493e73c8], eax ; ret
0x000002000039f4a5 : movabs dword ptr [0xff49c1ff41147310], eax ; ret 0x3b45
0x0000020000042a70 : movabs eax, dword ptr [0x28c48348c0330000] ; ret
0x0000020000184ee2 : movabs eax, dword ptr [0x3348ff428d48fff0] ; ret 0xb70f
0x000002000060d59b : movabs eax, dword ptr [0x3b48038b48ffaafc] ; ret
0x00000200005d902b : movabs eax, dword ptr [0x3b4860460348fff6] ; ret
0x000002000041ebbc : movabs eax, dword ptr [0x480374c08548ffeb] ; jmp rax
0x00000200006b0671 : movabs eax, dword ptr [0x5b20c48348c38bff] ; ret
0x00000200005096e7 : movabs eax, dword ptr [0x5b50c48348fffc73] ; ret
0x0000020000736845 : movabs eax, dword ptr [0x8348805d8b4cffaf] ; ret
0x000002000054163f : movabs eax, dword ptr [0x8b41d23345ffe584] ; ret 0x8348
0x00000200006416b4 : movabs eax, dword ptr [0x8b4c1175c63b49ff] ; ret
0x00000200001435d5 : movabs eax, dword ptr [0xa8a2e9000001] ; ret
0x000002000076ccea : movabs eax, dword ptr [0xb6603005c748ffba] ; jmp qword ptr [rax]
0x00000200003e5042 : movabs eax, dword ptr [0xc0450f41c822fff9] ; ret
0x00000200000ff589 : movabs eax, dword ptr [0xc7480974c085fff4] ; ret
0x00000200001415d5 : movabs eax, dword ptr [0xc8a2e9000000] ; ret
0x0000020000625fc1 : movabs eax, dword ptr [0xe8cc8b49d68b48ff] ; ret 0xa776
0x0000020000479131 : movabs eax, dword ptr [0xffbfffff00000510] ; ret
0x0000020000765725 : movabs eax, dword ptr [0xffe8cf8b4900016e] ; ret
0x000002000012ec46 : movaps xmm6, xmmword ptr [r11 - 0x10] ; mov rsp, r11 ; pop rbp ; ret
0x000002000021104f : movaps xmm6, xmmword ptr [r11 - 0x10] ; mov rsp, r11 ; pop rdi ; ret
0x000002000012ec47 : movaps xmm6, xmmword ptr [rbx - 0x10] ; mov rsp, r11 ; pop rbp ; ret
0x0000020000211050 : movaps xmm6, xmmword ptr [rbx - 0x10] ; mov rsp, r11 ; pop rdi ; ret
0x00000200002181cf : movaps xmm7, xmmword ptr [rsp + 0x40] ; mov rsp, r11 ; pop rbp ; ret
0x000002000053852f : movd eax, mm0 ; call rax
0x000002000053852e : movd rax, mm0 ; call rax
0x000002000068edfd : movdqu xmmword ptr [r10], xmm0 ; add rsp, 0x28 ; ret
0x0000020000412850 : movdqu xmmword ptr [r8], xmm0 ; mov eax, edx ; ret
0x0000020000217821 : movdqu xmmword ptr [rax + 0x10], xmm5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000064bfab : movdqu xmmword ptr [rax + 8], xmm0 ; ret
0x00000200005107be : movdqu xmmword ptr [rbp + 0x1f], xmm0 ; call 0x200001403e8
0x0000020000514e15 : movdqu xmmword ptr [rbp + 0x47], xmm0 ; call 0x20000140548
0x000002000051b01c : movdqu xmmword ptr [rbp + 0xf], xmm0 ; call 0x200001403e8
0x0000020000513327 : movdqu xmmword ptr [rbp - 0x10], xmm0 ; call 0x200001403e8
0x0000020000510ba5 : movdqu xmmword ptr [rbp - 0x11], xmm0 ; call 0x20000140808
0x00000200004c5023 : movdqu xmmword ptr [rbp - 0x18], xmm0 ; call 0x200000ebb3c
0x00000200004c4a2b : movdqu xmmword ptr [rbp - 0x20], xmm0 ; call 0x200000ebe78
0x000002000051dc27 : movdqu xmmword ptr [rbp - 0x38], xmm0 ; call 0x200001403e8
0x000002000051dfe1 : movdqu xmmword ptr [rbp - 0x58], xmm0 ; call 0x200001403e8
0x000002000051dfe0 : movdqu xmmword ptr [rbp - 0x58], xmm0 ; call 0x200001403e9
0x0000020000510877 : movdqu xmmword ptr [rbp - 0x59], xmm0 ; call 0x200001403e8
0x00000200005125a1 : movdqu xmmword ptr [rbp - 0x68], xmm0 ; call 0x200001403e8
0x0000020000512c41 : movdqu xmmword ptr [rbp - 0x69], xmm0 ; call 0x200001403e8
0x0000020000426b0a : movdqu xmmword ptr [rbp - 1], xmm0 ; call r12
0x00000200005ed4c9 : movdqu xmmword ptr [rcx + 0x20], xmm0 ; ret
0x0000020000008583 : movdqu xmmword ptr [rcx], xmm0 ; ret
0x00000200004e1d9e : movdqu xmmword ptr [rdx + r8*8], xmm0 ; jmp 0x200004e1d4f
0x00000200000fe662 : movdqu xmmword ptr [rdx], xmm0 ; add qword ptr [rdx + 8], -8 ; ret
0x00000200003ee14b : movdqu xmmword ptr [rdx], xmm0 ; mov eax, r10d ; ret
0x00000200006c33f5 : movdqu xmmword ptr [rdx], xmm0 ; ret
0x0000020000625869 : movdqu xmmword ptr [rsi], xmm0 ; call 0x20000031b42
0x0000020000475984 : movdqu xmmword ptr [rsp + 0x20], xmm0 ; call 0x2000009a4a9
0x0000020000513ba9 : movdqu xmmword ptr [rsp + 0x50], xmm0 ; call 0x200001403e9
0x00000200005145d4 : movdqu xmmword ptr [rsp + 0x70], xmm0 ; call 0x200001403e9
0x000002000051d7e3 : movdqu xmmword ptr [rsp + 0x78], xmm0 ; call 0x200001403e9
0x00000200004cae46 : movhps qword ptr [rax], xmm0 ; jmp 0x200004cae12
0x00000200001bef69 : movhps xmm0, qword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret 0x8348
0x00000200001b1517 : movlps xmm0, qword ptr [rax] ; call r9
0x00000200003f4dcc : movnti dword ptr [rcx - 0x75], eax ; or al, 0xb ; ret 0x189
0x000002000014990a : movnti dword ptr [rcx], eax ; sfence ; ret
0x0000020000149909 : movnti qword ptr [rcx], rax ; sfence ; ret
0x000002000011c251 : movq mm0, qword ptr [rip + 0x1b800] ; add byte ptr [rax], al ; ret
0x000002000068edfe : movq qword ptr [r10], mm0 ; add rsp, 0x28 ; ret
0x0000020000412851 : movq qword ptr [r8], mm0 ; mov eax, edx ; ret
0x0000020000217822 : movq qword ptr [rax + 0x10], mm5 ; mov rsp, r11 ; pop rdi ; ret
0x000002000064bfac : movq qword ptr [rax + 8], mm0 ; ret
0x0000020000412852 : movq qword ptr [rax], mm0 ; mov eax, edx ; ret
0x00000200005107bf : movq qword ptr [rbp + 0x1f], mm0 ; call 0x200001403e7
0x0000020000514e16 : movq qword ptr [rbp + 0x47], mm0 ; call 0x20000140547
0x000002000051b01d : movq qword ptr [rbp + 0xf], mm0 ; call 0x200001403e7
0x0000020000513328 : movq qword ptr [rbp - 0x10], mm0 ; call 0x200001403e7
0x0000020000510ba6 : movq qword ptr [rbp - 0x11], mm0 ; call 0x20000140807
0x00000200004c5024 : movq qword ptr [rbp - 0x18], mm0 ; call 0x200000ebb3b
0x00000200004c4a2c : movq qword ptr [rbp - 0x20], mm0 ; call 0x200000ebe77
0x000002000051dc28 : movq qword ptr [rbp - 0x38], mm0 ; call 0x200001403e7
0x000002000051dfe2 : movq qword ptr [rbp - 0x58], mm0 ; call 0x200001403e7
0x0000020000510878 : movq qword ptr [rbp - 0x59], mm0 ; call 0x200001403e7
0x00000200005125a2 : movq qword ptr [rbp - 0x68], mm0 ; call 0x200001403e7
0x0000020000512c42 : movq qword ptr [rbp - 0x69], mm0 ; call 0x200001403e7
0x0000020000426b0b : movq qword ptr [rbp - 1], mm0 ; call r12
0x00000200005ed4ca : movq qword ptr [rcx + 0x20], mm0 ; ret
0x000002000014a7e3 : movq qword ptr [rcx + 0xf0], mm7 ; xor eax, eax ; ret
0x0000020000008584 : movq qword ptr [rcx], mm0 ; ret
0x0000020000560e38 : movq qword ptr [rdx + 0x80], mm0 ; jmp 0x200003bd058
0x00000200004e1d9f : movq qword ptr [rdx + r8*8], mm0 ; jmp 0x200004e1d4e
0x00000200004e1da0 : movq qword ptr [rdx + rax*8], mm0 ; jmp 0x200004e1d4d
0x00000200000fe663 : movq qword ptr [rdx], mm0 ; add qword ptr [rdx + 8], -8 ; ret
0x000002000068edff : movq qword ptr [rdx], mm0 ; add rsp, 0x28 ; ret
0x00000200003ee14c : movq qword ptr [rdx], mm0 ; mov eax, r10d ; ret
0x00000200006c33f6 : movq qword ptr [rdx], mm0 ; ret
0x000002000062586a : movq qword ptr [rsi], mm0 ; call 0x20000031b41
0x0000020000475985 : movq qword ptr [rsp + 0x20], mm0 ; call 0x2000009a4a8
0x0000020000513baa : movq qword ptr [rsp + 0x50], mm0 ; call 0x200001403e8
0x00000200005145d5 : movq qword ptr [rsp + 0x70], mm0 ; call 0x200001403e8
0x000002000051d7e4 : movq qword ptr [rsp + 0x78], mm0 ; call 0x200001403e8
0x000002000053852d : movq rax, xmm0 ; call rax
0x00000200000ec2f8 : movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, 0xb60ffff4 ; ret
0x00000200001ff999 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret
0x00000200003fd9b3 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret
0x00000200006967de : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x0000020000053314 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax], al ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x0000020000011ca5 : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr cs:[rax + 0xf], cl ; ret 0x8d48
0x000002000021b830 : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add bh, bh ; ret
0x00000200004e09db : movsb byte ptr [rdi], byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x76], al ; ret
0x000002000014e34f : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0 ; add dword ptr [rax], eax ; add bl, bh ; ret
0x00000200000b27ed : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0 ; ret
0x000002000006d13d : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x98 ; add al, byte ptr [rax] ; add bh, bh ; ret
0x00000200004b5ee2 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x98 ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000021c793 : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0xd2 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200007757f4 : movsb byte ptr [rdi], byte ptr [rsi] ; call qword ptr [rax - 0x2b6a917]
0x00000200003e56e8 : movsb byte ptr [rdi], byte ptr [rsi] ; cdq ; ret
0x00000200001c34d8 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; idiv bh ; add rsp, 0x50 ; pop rbp ; ret
0x00000200005ce33e : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; and r8b, bpl ; xlatb ; ret 0xffa4
0x00000200005b1e59 : movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0xe5a8
0x000002000021f2c8 : movsb byte ptr [rdi], byte ptr [rsi] ; idiv bh ; dec dword ptr [rbx - 0x7421d428] ; ret
0x000002000018d148 : movsb byte ptr [rdi], byte ptr [rsi] ; in al, dx ; int1 ; dec dword ptr [rax - 0x7b] ; ret
0x0000020000746258 : movsb byte ptr [rdi], byte ptr [rsi] ; jge 0x20000746225 ; inc dword ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x8b45
0x0000020000216b42 : movsb byte ptr [rdi], byte ptr [rsi] ; jrcxz 0x20000216b4b ; add rsp, 0x28 ; ret
0x0000020000216b41 : movsb byte ptr [rdi], byte ptr [rsi] ; jrcxz 0x20000216b4c ; add rsp, 0x28 ; ret
0x0000020000209c7e : movsb byte ptr [rdi], byte ptr [rsi] ; lea esp, dword ptr [rax] ; add byte ptr [rbx + rax - 0x3f], cl ; jmp r8
0x00000200000229a0 : movsb byte ptr [rdi], byte ptr [rsi] ; mov cl, 0x13 ; add dh, dh ; rol dword ptr [rdx], 0xf ; xchg eax, ebp ; ret 0xc3f6
0x00000200004c1638 : movsb byte ptr [rdi], byte ptr [rsi] ; mov dh, 0xc0 ; dec dword ptr [rax - 0x75] ; ret
0x00000200004381fa : movsb byte ptr [rdi], byte ptr [rsi] ; mov eax, 0xc0000001 ; jmp 0x200004381cc
0x0000020000101254 : movsb byte ptr [rdi], byte ptr [rsi] ; mov ecx, 0x8b44ffff ; ret
0x0000020000088cbd : movsb byte ptr [rdi], byte ptr [rsi] ; or al, byte ptr [rax] ; add rsp, 0x78 ; ret
0x0000020000494e04 : movsb byte ptr [rdi], byte ptr [rsi] ; pop rcx ; ret 0x33ff
0x00000200004b8618 : movsb byte ptr [rdi], byte ptr [rsi] ; popfq ; sar bh, 0x8b ; ret
0x00000200005ca768 : movsb byte ptr [rdi], byte ptr [rsi] ; push -0xcc003a ; jmp 0x200004d69d3
0x00000200005c271a : movsb byte ptr [rdi], byte ptr [rsi] ; push rax ; out dx, eax ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200000c0d91 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000200006d946c : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48ff
0x00000200006b42ba : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xa8ff
0x00000200000c0c67 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xe4b8
0x00000200006d9508 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xe9ff
0x000002000075de08 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffb7
0x0000020000672f58 : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffd0
0x00000200006d94fb : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x00000200004b7ef2 : movsb byte ptr [rdi], byte ptr [rsi] ; sar bh, 0x8b ; ret
0x00000200003b1ceb : movsb byte ptr [rdi], byte ptr [rsi] ; sbb al, byte ptr [rax] ; mov rcx, rax ; call r8
0x0000020000608138 : movsb byte ptr [rdi], byte ptr [rsi] ; wait ; ret 0x48ff
0x0000020000045009 : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, dword ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004b7f58 : movsb byte ptr [rdi], byte ptr fs:[rsi] ; sar bh, 0x8b ; ret
0x00000200004757cc : movsd dword ptr [rdi], dword ptr [rsi] ; adc eax, dword ptr [rax] ; mov rcx, rbx ; call 0x2000009a249
0x00000200005428fe : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000141655 : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add cl, ch ; and cl, al ; add byte ptr [rax], al ; ret
0x000002000014389b : movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000020000778395 : movsd dword ptr [rdi], dword ptr [rsi] ; call qword ptr [rax - 0x23d6d17]
0x000002000077837e : movsd dword ptr [rdi], dword ptr [rsi] ; call qword ptr [rax - 0x23d8c17]
0x00000200007783e9 : movsd dword ptr [rdi], dword ptr [rsi] ; call qword ptr [rax - 0x23d9b17]
0x0000020000501815 : movsd dword ptr [rdi], dword ptr [rsi] ; call rax
0x00000200001f0f71 : movsd dword ptr [rdi], dword ptr [rsi] ; cmp r8d, r9d ; sete al ; ret
0x00000200006da08f : movsd dword ptr [rdi], dword ptr [rsi] ; cwde ; ret 0x44ff
0x000002000001f227 : movsd dword ptr [rdi], dword ptr [rsi] ; fisubr dword ptr [rdx] ; add byte ptr [rbx], bh ; ret
0x0000020000020fc4 : movsd dword ptr [rdi], dword ptr [rsi] ; in eax, dx ; or eax, 0x1c8b4d04 ; ret
0x00000200005b1e57 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; movsb byte ptr [rdi], byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0xe5a8
0x000002000049d3a5 : movsd dword ptr [rdi], dword ptr [rsi] ; jmp 0x2000049d36d
0x00000200004b0b77 : movsd dword ptr [rdi], dword ptr [rsi] ; jmp 0x200004b0b36
0x0000020000606267 : movsd dword ptr [rdi], dword ptr [rsi] ; lodsd eax, dword ptr [rsi] ; ret 0x48ff
0x000002000056cb99 : movsd dword ptr [rdi], dword ptr [rsi] ; loop 0x2000056cb8a ; dec dword ptr [rbx + rcx*4 + 0x35] ; insb byte ptr [rdi], dx ; ret 0xffd6
0x0000020000586fef : movsd dword ptr [rdi], dword ptr [rsi] ; mov ecx, 0x3b48ffd7 ; ret 0x576
0x000002000039b0d6 : movsd dword ptr [rdi], dword ptr [rsi] ; nop ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b4c
0x00000200003ee7d3 : movsd dword ptr [rdi], dword ptr [rsi] ; pop rsp ; ret
0x00000200005cc5d3 : movsd dword ptr [rdi], dword ptr [rsi] ; push qword ptr [rbx] ; fucomi st(1) ; ret 0xf4ec
0x00000200003b4cae : movsd dword ptr [rdi], dword ptr [rsi] ; push rax ; add eax, 0xf6bf0000 ; ret
0x00000200006264e9 : movsd dword ptr [rdi], dword ptr [rsi] ; push rsi ; ret
0x000002000010d417 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000200000af8bf : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x24
0x0000020000754c69 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x3bff
0x0000020000754c23 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x41ff
0x000002000060a967 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x45ff
0x00000200006d9451 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x48ff
0x00000200006d93fb : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x85ff
0x00000200006b42b4 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0x8bff
0x0000020000588d83 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xa
0x00000200006d947a : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xebff
0x00000200006b4233 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xf7ff
0x00000200006b4239 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xff
0x00000200005cb64b : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfff4
0x00000200007783a4 : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfffd
0x00000200006d945f : movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffff
0x00000200004b7dde : movsd dword ptr [rdi], dword ptr [rsi] ; sar bh, 0x8b ; ret
0x00000200003b1ab8 : movsd dword ptr [rdi], dword ptr [rsi] ; sbb al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000014696a : movsd dword ptr [rdi], dword ptr [rsi] ; sfence ; ret
0x000002000068f188 : movsd dword ptr [rdi], dword ptr [rsi] ; stosd dword ptr [rdi], eax ; dec dword ptr [rax + 0x3b] ; ret
0x0000020000607a67 : movsd dword ptr [rdi], dword ptr [rsi] ; xchg eax, ebp ; ret 0xccff
0x000002000069bca4 : movsd dword ptr [rdi], dword ptr [rsi] ; xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x00000200006bc68f : movsd qword ptr [rax + rcx], xmm0 ; ret
0x0000020000608442 : movsd qword ptr [rax], xmm0 ; xor eax, eax ; ret
0x00000200006a8451 : movsd qword ptr [rcx + 0x20], xmm0 ; ret
0x00000200003c438a : movsd qword ptr [rdx + 0x20], xmm0 ; add rsp, 0x28 ; ret
0x0000020000487e71 : movsq qword ptr [rdi], qword ptr [rsi] ; ret
0x0000020000521da9 : movsx eax, al ; sub eax, 0x37 ; jmp 0x20000521d7a
0x00000200000e9df0 : movsx eax, byte ptr [rcx + 0xc3] ; ret
0x00000200003e37d2 : movsx eax, cl ; xor eax, 0x20 ; ret
0x0000020000521da8 : movsx eax, r8b ; sub eax, 0x37 ; jmp 0x20000521d7b
0x00000200005f1673 : movsxd r13, dword ptr [r8 + rbp*8 - 0x6b] ; stc ; ret
0x0000020000521696 : movsxd r8, eax ; call 0x2000014f186
0x0000020000521697 : movsxd rax, eax ; call 0x2000014f185
0x000002000014f7c1 : movsxd rax, ecx ; mov qword ptr [rdx], rax ; ret
0x000002000060acd6 : movsxd rbp, eax ; add al, 0x70 ; ret 0x45ff
0x0000020000607028 : movsxd rbp, eax ; mov dl, 0xac ; ret 0x48ff
0x00000200006089ce : movsxd rbp, eax ; or al, 0x93 ; ret 0x48ff
0x000002000041b747 : movsxd rbp, eax ; ret
0x000002000062b118 : movsxd rbp, eax ; ret 0xc06b
0x000002000048d5e9 : movsxd rbp, esp ; ret 0x65ff
0x0000020000521659 : movsxd rbx, esi ; ret 0x33ff
0x00000200001f937a : movsxd rcx, eax ; jmp 0x200001f9391
0x00000200001f9379 : movsxd rcx, eax ; jmp 0x200001f9392
0x0000020000590715 : movsxd rcx, ebp ; ret 0x8bff
0x000002000019fff8 : movsxd rdi, eax ; inc dword ptr [rax + 0x7500817d] ; ret 0xb8eb
0x0000020000172251 : movsxd rdi, edx ; dec dword ptr [rax - 0x39] ; ret 0xdfff
0x000002000009a27d : movsxd rdx, eax ; jne 0x20000187f90 ; ret
0x000002000009a27c : movsxd rdx, eax ; jne 0x20000187f91 ; ret
0x0000020000489a5d : movsxd rsi, eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000040c3b2 : movsxd rsi, eax ; add byte ptr [rbp - 0x73], cl ; and byte ptr [r8 - 0x75], cl ; ret 0x8b49
0x000002000009a54b : movsxd rsi, edi ; rol dword ptr [rax], 7 ; add byte ptr [rax], al ; jne 0x2000009a579 ; ret
0x00000200002014db : movsxd rsp, esp ; jmp qword ptr [rcx]
0x000002000015db03 : movups xmm0, xmmword ptr [rax + 0x10] ; xor eax, eax ; movups xmmword ptr [rdx], xmm0 ; ret
0x0000020000175753 : movups xmm0, xmmword ptr [rax] ; add byte ptr [rbx], al ; ret 0xc123
0x000002000060843f : movups xmm0, xmmword ptr [rax] ; movsd qword ptr [rax], xmm0 ; xor eax, eax ; ret
0x00000200006c33f2 : movups xmm0, xmmword ptr [rcx] ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x000002000064bfa8 : movups xmm0, xmmword ptr [rdx] ; movdqu xmmword ptr [rax + 8], xmm0 ; ret
0x0000020000134cfa : movups xmm0, xmmword ptr [rsp + 0x70] ; add rsp, 0x58 ; ret
0x0000020000037963 : movups xmm1, xmmword ptr [r9 + 0x10] ; movups xmmword ptr [rdx + 0x10], xmm1 ; ret
0x00000200001bec88 : movups xmm1, xmmword ptr [rax + 0x50] ; movups xmmword ptr [r9 + 0x50], xmm1 ; ret
0x0000020000037964 : movups xmm1, xmmword ptr [rcx + 0x10] ; movups xmmword ptr [rdx + 0x10], xmm1 ; ret
0x00000200000fa98b : movups xmmword ptr [r10 + r11 + 0x1898], xmm1 ; ret
0x00000200004d31ea : movups xmmword ptr [r13 + 0x20], xmm1 ; call 0x2000014f4c7
0x00000200001bec8c : movups xmmword ptr [r9 + 0x50], xmm1 ; ret
0x00000200005ed555 : movups xmmword ptr [rax + rcx + 0x10], xmm0 ; ret
0x00000200006bc690 : movups xmmword ptr [rax + rcx], xmm0 ; ret
0x0000020000608443 : movups xmmword ptr [rax], xmm0 ; xor eax, eax ; ret
0x00000200004d31eb : movups xmmword ptr [rbp + 0x20], xmm1 ; call 0x2000014f4c6
0x0000020000042d55 : movups xmmword ptr [rcx + 0x10], xmm1 ; add rsp, 0x28 ; ret
0x00000200006a844d : movups xmmword ptr [rcx + 0x10], xmm1 ; movsd qword ptr [rcx + 0x20], xmm0 ; ret
0x00000200000d8c10 : movups xmmword ptr [rcx + 0x20], xmm0 ; add rsp, 0x38 ; ret
0x00000200006a8452 : movups xmmword ptr [rcx + 0x20], xmm0 ; ret
0x00000200001f4c4a : movups xmmword ptr [rcx + 0x40], xmm0 ; ret
0x00000200001bec8d : movups xmmword ptr [rcx + 0x50], xmm1 ; ret
0x0000020000044cf2 : movups xmmword ptr [rcx + 0x70], xmm1 ; ret
0x000002000006ca08 : movups xmmword ptr [rcx + rdx + 0x10], xmm0 ; ret
0x0000020000037968 : movups xmmword ptr [rdx + 0x10], xmm1 ; ret
0x00000200003c438b : movups xmmword ptr [rdx + 0x20], xmm0 ; add rsp, 0x28 ; ret
0x0000020000058154 : movups xmmword ptr [rdx + 0x4c0], xmm1 ; ret
0x00000200000fa98c : movups xmmword ptr [rdx + rbx + 0x1898], xmm1 ; ret
0x000002000015db09 : movups xmmword ptr [rdx], xmm0 ; ret
0x00000200000fadde : movups xmmword ptr [rsp + 0x60], xmm1 ; call 0x20000067097
0x000002000021f052 : movzx eax, al ; add rsp, 0x28 ; ret
0x000002000007f59f : movzx eax, al ; and eax, 7 ; ret
0x0000020000115cc6 : movzx eax, al ; mov cr8, rax ; ret
0x000002000041d7c1 : movzx eax, al ; ret
0x0000020000030a73 : movzx eax, al ; shr eax, 3 ; and eax, 4 ; ret
0x000002000062c130 : movzx eax, ax ; add ebx, eax ; jmp 0x2000062c144
0x000002000020b5de : movzx eax, ax ; cmp eax, 0x50 ; jmp 0x2000020b5b0
0x000002000013c17d : movzx eax, ax ; ret
0x000002000004f7ff : movzx eax, ax ; shr eax, 1 ; bsr edx, eax ; inc dl ; jmp 0x2000004f7dc
0x0000020000133fae : movzx eax, ax ; sub eax, ecx ; ret
0x0000020000026d2f : movzx eax, bh ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000061beb : movzx eax, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001355c7 : movzx eax, bx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000082319 : movzx eax, byte ptr [rax + 0x232] ; ret
0x00000200001318d3 : movzx eax, byte ptr [rax + 0xac] ; ret
0x000002000041b3f2 : movzx eax, byte ptr [rcx + 0x10] ; shr eax, 1 ; and eax, 1 ; ret
0x00000200003fe69f : movzx eax, byte ptr [rcx + 0x4f] ; add dword ptr [rdx + 0x18], eax ; ret
0x00000200001bff2b : movzx eax, byte ptr [rcx + 0x7d] ; ret
0x00000200001c4238 : movzx eax, byte ptr [rcx + 0xc0] ; ret
0x000002000007dd8c : movzx eax, byte ptr [rcx + 8] ; and eax, 1 ; ret
0x000002000057183c : movzx eax, byte ptr [rcx + rax] ; ret
0x000002000011f951 : movzx eax, byte ptr [rdx + r8 + 0x24a63c] ; ret
0x000002000011f952 : movzx eax, byte ptr [rdx + rax + 0x24a63c] ; ret
0x0000020000571f0a : movzx eax, byte ptr [rip - 0x27d860] ; ret
0x000002000010c484 : movzx eax, cl ; and eax, 1 ; ret
0x0000020000039157 : movzx eax, cl ; mov cr8, rax ; ret
0x0000020000069f9e : movzx eax, cl ; ret
0x00000200006429de : movzx eax, cx ; add eax, 0x20 ; ret
0x000002000013cd69 : movzx eax, cx ; add rsp, 0x38 ; ret
0x000002000049cd46 : movzx eax, cx ; ret
0x000002000049cd50 : movzx eax, cx ; sub eax, 0x20 ; ret
0x0000020000137a9c : movzx eax, cx ; sub eax, edx ; ret
0x00000200000b61bf : movzx eax, dh ; add rsp, 0x50 ; pop r14 ; ret
0x000002000001abb5 : movzx eax, di ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000026d2e : movzx eax, dil ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x000002000003ffe7 : movzx eax, dl ; cmovg ecx, eax ; mov byte ptr [r8], cl ; ret
0x00000200006c06b6 : movzx eax, dl ; jmp 0x200006c06c9
0x00000200006c0783 : movzx eax, dl ; jmp 0x200006c0796
0x00000200006c0837 : movzx eax, dl ; jmp 0x200006c084a
0x00000200006c08da : movzx eax, dl ; jmp 0x200006c08ed
0x00000200001db80b : movzx eax, dl ; mov cr8, rax ; ret
0x0000020000069f6d : movzx eax, dl ; ret
0x00000200004641d8 : movzx eax, dx ; jmp 0x2000046417f
0x000002000053f140 : movzx eax, dx ; jmp 0x2000053f122
0x0000020000031059 : movzx eax, dx ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000016675 : movzx eax, dx ; or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x000002000049cd8d : movzx eax, dx ; ret
0x0000020000215e46 : movzx eax, dx ; sub eax, ecx ; ret
0x0000020000425448 : movzx eax, dx ; test eax, eax ; js 0x2000042545b ; xor eax, eax ; ret
0x00000200006c06b5 : movzx eax, r10b ; jmp 0x200006c06ca
0x00000200006c0782 : movzx eax, r10b ; jmp 0x200006c0797
0x00000200006c0836 : movzx eax, r10b ; jmp 0x200006c084b
0x00000200006c08d9 : movzx eax, r10b ; jmp 0x200006c08ee
0x00000200004a0abd : movzx eax, r10b ; ret
0x0000020000215e45 : movzx eax, r10w ; sub eax, ecx ; ret
0x0000020000115cc5 : movzx eax, r8b ; mov cr8, rax ; ret
0x000002000020b5dd : movzx eax, r8w ; cmp eax, 0x50 ; jmp 0x2000020b5b1
0x000002000013c17c : movzx eax, r8w ; ret
0x0000020000133fad : movzx eax, r8w ; sub eax, ecx ; ret
0x0000020000039156 : movzx eax, r9b ; mov cr8, rax ; ret
0x0000020000069f9d : movzx eax, r9b ; ret
0x00000200006429dd : movzx eax, r9w ; add eax, 0x20 ; ret
0x00000200006421b0 : movzx eax, r9w ; ret
0x00000200003eddf5 : movzx eax, word ptr [r8 + rcx*2] ; imul eax, r10d ; ret
0x00000200003ed3d0 : movzx eax, word ptr [r8 + rcx*2] ; imul eax, r9d ; ret
0x00000200003f8264 : movzx eax, word ptr [rax + 8] ; ret
0x00000200001344d5 : movzx eax, word ptr [rax + rcx*2] ; and eax, 0x157 ; ret
0x0000020000134535 : movzx eax, word ptr [rax + rcx*2] ; and eax, 0x80 ; ret
0x0000020000134515 : movzx eax, word ptr [rax + rcx*2] ; and eax, 1 ; ret
0x00000200001344b5 : movzx eax, word ptr [rax + rcx*2] ; and eax, 2 ; ret
0x0000020000134495 : movzx eax, word ptr [rax + rcx*2] ; and eax, 4 ; ret
0x00000200001344f5 : movzx eax, word ptr [rax + rcx*2] ; and eax, 8 ; ret
0x00000200003eddf6 : movzx eax, word ptr [rax + rcx*2] ; imul eax, r10d ; ret
0x00000200003ed3d1 : movzx eax, word ptr [rax + rcx*2] ; imul eax, r9d ; ret
0x00000200001362d4 : movzx eax, word ptr [rax + rcx*2] ; movzx ecx, dx ; and eax, ecx ; ret
0x0000020000031e02 : movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200002168fe : movzx eax, word ptr [rcx + 0x28] ; ret
0x000002000002ced0 : movzx eax, word ptr [rcx + 0x92] ; ret
0x0000020000417d93 : movzx eax, word ptr [rcx + 2] ; mov word ptr [rdx], ax ; xor eax, eax ; ret
0x00000200001357c3 : movzx eax, word ptr [rcx] ; movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x0000020000216903 : movzx eax, word ptr [rcx] ; ret
0x00000200003e33c9 : movzx eax, word ptr [rdi] ; cmp rcx, rax ; jne 0x200003e33e4 ; mov eax, edx ; jmp 0x200003e3397
0x00000200000866f5 : movzx eax, word ptr [rdx + 2] ; mov word ptr [r10 + 2], ax ; ret
0x00000200004e11aa : movzx eax, word ptr [rdx] ; mov word ptr [r8], ax ; xor eax, eax ; ret
0x00000200000f0400 : movzx eax, word ptr [rip + 0x28dbf9] ; dec eax ; ret
0x0000020000044ca0 : movzx eax, word ptr [rip + 0x2be191] ; ret
0x0000020000067f78 : movzx eax, word ptr [rip + 0x316091] ; ret
0x0000020000049df8 : movzx eax, word ptr [rip + 0x33420d] ; ret
0x0000020000182af6 : movzx ecx, ah ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x00000200001ef274 : movzx ecx, al ; mov cr8, rcx ; mov al, dl ; ret
0x00000200001ac5e4 : movzx ecx, ax ; lea rdx, qword ptr [rsp + 0x48] ; call r9
0x000002000046c01f : movzx ecx, bl ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x000002000067da5a : movzx ecx, bx ; call rax
0x0000020000215e42 : movzx ecx, bx ; movzx eax, r10w ; sub eax, ecx ; ret
0x0000020000053844 : movzx ecx, cl ; mov cr8, rcx ; ret
0x00000200000b3f58 : movzx ecx, cx ; mov rax, qword ptr [rax + rcx*8] ; ret
0x0000020000571839 : movzx ecx, cx ; movzx eax, byte ptr [rcx + rax] ; ret
0x0000020000133faa : movzx ecx, cx ; movzx eax, r8w ; sub eax, ecx ; ret
0x000002000064979b : movzx ecx, cx ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200001340c0 : movzx ecx, cx ; sub r9d, eax ; mov eax, r9d ; ret
0x000002000075ed04 : movzx ecx, di ; lea r8, qword ptr [rsp + 0x40] ; call rax
0x00000200001362d8 : movzx ecx, dx ; and eax, ecx ; ret
0x0000020000182af5 : movzx ecx, r12b ; mov qword ptr [rsp + 0x20], r15 ; call rax
0x0000020000571838 : movzx ecx, r9w ; movzx eax, byte ptr [rcx + rax] ; ret
0x000002000064979a : movzx ecx, r9w ; movzx eax, word ptr [rax + rcx*2] ; ret
0x0000020000688253 : movzx ecx, word ptr [rbx] ; call 0x2000013455d
0x00000200004bd8df : movzx ecx, word ptr [rcx + 4] ; cmp r8d, ecx ; jb 0x200004bd888 ; ret
0x0000020000652b70 : movzx ecx, word ptr [rdx + 2] ; mov dword ptr [r9], ecx ; mov eax, edx ; ret
0x00000200001357c6 : movzx ecx, word ptr [rdx] ; sub eax, ecx ; ret
0x0000020000173292 : movzx edx, ah ; mov rcx, r15 ; call 0x2000014f4c8
0x000002000049a8dd : movzx edx, bl ; and edx, 1 ; call 0x200000bc2a9
0x00000200005bf092 : movzx edx, bl ; call 0x200001e1b9e
0x00000200004a1366 : movzx edx, bl ; call 0x2000043d581
0x000002000014f7d4 : movzx edx, cx ; in al, dx ; ret
0x00000200000b27e1 : movzx edx, cx ; mov rax, qword ptr [rax + rdx*8] ; ret
0x000002000014f7e2 : movzx edx, cx ; out dx, al ; ret
0x0000020000184110 : movzx edx, dh ; call rax
0x000002000039cf65 : movzx edx, dl ; cmove r10d, r11d ; mov al, r10b ; ret
0x00000200005f2f2f : movzx edx, dl ; cmovne edx, r8d ; mov al, dl ; ret
0x0000020000173291 : movzx edx, r12b ; mov rcx, r15 ; call 0x2000014f4c9
0x000002000018410f : movzx edx, r14b ; call rax
0x00000200004641d7 : movzx r8d, dx ; jmp 0x20000464180
0x00000200001362d7 : movzx rcx, dx ; and eax, ecx ; ret
0x000002000051e726 : mul byte ptr [rbp - 0x74bb0025] ; ret
0x000002000068bf26 : mul byte ptr [rsi + 3] ; ret 0xb841
0x0000020000417153 : mul byte ptr [rsi - 0x77] ; in eax, -0xa ; ret
0x00000200004e80b2 : mul byte ptr [rsi - 0x7d] ; ret 0xb902
0x00000200005f10d5 : mul dword ptr [rdx + 0x48c033ff] ; add esp, 0x28 ; ret
0x00000200005fe915 : mul dword ptr [rsi] ; ret
0x00000200005fc041 : neg al ; sbb eax, eax ; and eax, 0xc000004b ; ret
0x00000200001a4848 : neg al ; sbb eax, eax ; neg eax ; inc eax ; ret
0x00000200000d4032 : neg al ; sbb ecx, ecx ; and r10d, ecx ; mov eax, r10d ; ret
0x0000020000010dbe : neg eax ; inc eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001a484c : neg eax ; inc eax ; ret
0x00000200000eb52e : neg eax ; sbb eax, eax ; and eax, 0xc0000001 ; ret
0x00000200000533fa : neg eax ; sbb eax, eax ; and eax, 0xc0000022 ; ret
0x0000020000134687 : neg eax ; sbb rax, rax ; and rax, rcx ; ret
0x00000200003fe33c : neg eax ; sbb rdx, rdx ; call 0x20000022128
0x0000020000040029 : neg ecx ; inc ecx ; mov eax, ecx ; ret
0x000002000003fe1c : neg ecx ; sbb eax, eax ; and eax, 0xc0000022 ; ret
0x00000200004096b8 : neg ecx ; sbb eax, eax ; and eax, 0xc00000bb ; ret
0x0000020000038e99 : neg ecx ; sbb ecx, ecx ; and eax, ecx ; ret
0x000002000013ea9f : neg edx ; mov qword ptr [r8 + 0x608], rdx ; ret
0x000002000016d5c4 : neg edx ; sbb eax, eax ; add eax, 3 ; ret
0x00000200004245d1 : neg edx ; sbb eax, eax ; and eax, 0xc000000d ; ret
0x0000020000134686 : neg r8 ; sbb rax, rax ; and rax, rcx ; ret
0x00000200001c76c0 : neg rax ; sbb rax, rax ; and rax, rcx ; ret
0x0000020000038e98 : neg rcx ; sbb ecx, ecx ; and eax, ecx ; ret
0x00000200000432c8 : nop ; adc al, byte ptr [r8] ; ret
0x00000200005981f5 : nop ; adc eax, dword ptr [rax] ; add byte ptr [rbx], bh ; sal byte ptr [rsp + rcx - 1], 1 ; ret
0x0000020000063e04 : nop ; add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x000002000072d97c : nop ; add al, byte ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000076bd61 : nop ; add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200001ac4b0 : nop ; add byte ptr [rax], ah ; add byte ptr [rax - 0x7f], cl ; ret 0x1000
0x0000020000492f98 : nop ; add byte ptr [rax], al ; add al, ch ; out dx, eax ; push rax ; ret 0xe9ff
0x0000020000492e04 : nop ; add byte ptr [rax], al ; add al, ch ; xlatb ; pop rsi ; ret 0x48ff
0x00000200000f9c3c : nop ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000067a3f1 : nop ; add byte ptr [rax], al ; add bh, bh ; ret 0xfa83
0x000002000069718f : nop ; add byte ptr [rax], al ; add bl, ch ; add ecx, dword ptr [rcx - 0x75] ; ret 0x8944
0x00000200000ed8c1 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200005c3ec9 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; or byte ptr [r11], bpl ; ret 0x8b44
0x00000200000eb163 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x0000020000521870 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001c1124 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6608
0x00000200005ed4b6 : nop ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200004c1065 : nop ; add byte ptr [rax], al ; add byte ptr [rbp - 0x74bbfbb0], cl ; ret 0x8b48
0x000002000010a102 : nop ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8348
0x0000020000076bfc : nop ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000109fa4 : nop ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xe0e8
0x0000020000046950 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x440ffff8], al ; ret
0x000002000045c118 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x7d], al ; or al, 0xff ; ret
0x000002000013ed24 : nop ; add byte ptr [rax], al ; add byte ptr [rbx - 0x74b3f3c6], al ; ret 0x8b48
0x00000200003a647a : nop ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x000002000007bf62 : nop ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x2074
0x0000020000453b7a : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x00000200001c8414 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x000002000044f178 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop r14 ; pop rsi ; ret
0x00000200000c80de : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; pop rdi ; pop rbx ; ret
0x0000020000177996 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3fe9
0x0000020000167bd0 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200001ca6f9 : nop ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x00000200001edc59 : nop ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200006c0a65 : nop ; add byte ptr [rax], al ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x000002000039b0d7 : nop ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x45], al ; ret 0x8b4c
0x00000200001413b5 : nop ; add byte ptr [rax], al ; add cl, ch ; ret 0xca
0x00000200000d1cb4 : nop ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000041ce16 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0x00000200001088d2 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0x00000200005df138 : nop ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x000002000009dc41 : nop ; add byte ptr [rax], al ; add dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x0000020000425c47 : nop ; add dword ptr [rax], eax ; add al, ch ; mov al, 0x65 ; ret 0xf7ff
0x00000200003c4a5c : nop ; add dword ptr [rax], eax ; add byte ptr [rbx], al ; ret 0x8b48
0x000002000044816d : nop ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x00000200003a92d9 : nop ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x00000200004e3a85 : nop ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x4f], cl ; ret
0x00000200005ce204 : nop ; add dword ptr [rax], eax ; add byte ptr [rsi + 0x2b], ah ; ret 0x38e9
0x00000200001433b5 : nop ; add dword ptr [rax], eax ; add cl, ch ; ret 0xaa
0x0000020000069aac : nop ; add eax, 0x81480000 ; ret
0x000002000014aa53 : nop ; add rsp, 0x10 ; ret
0x0000020000043146 : nop ; add rsp, 0x108 ; ret
0x0000020000002a90 : nop ; add rsp, 0x148 ; ret
0x0000020000042c7d : nop ; add rsp, 0x158 ; ret
0x00000200000f4f36 : nop ; add rsp, 0x1a8 ; ret
0x000002000013faeb : nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005570f8 : nop ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x00000200000b0625 : nop ; add rsp, 0x28 ; ret
0x0000020000152a42 : nop ; add rsp, 0x30 ; pop rbp ; ret
0x00000200001e37a7 : nop ; add rsp, 0x30 ; pop rbx ; ret
0x000002000015502c : nop ; add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200003a733c : nop ; add rsp, 0x38 ; pop r13 ; pop rbp ; ret
0x0000020000153278 : nop ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000647a34 : nop ; add rsp, 0x38 ; pop rdi ; pop rbp ; ret
0x0000020000153c4a : nop ; add rsp, 0x38 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000152c32 : nop ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000155418 : nop ; add rsp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000055b6ab : nop ; add rsp, 0x48 ; pop rbp ; pop rbx ; ret
0x0000020000152c04 : nop ; add rsp, 0x48 ; pop rdi ; pop rbp ; ret
0x000002000072b28e : nop ; add rsp, 0x48 ; ret
0x0000020000154715 : nop ; add rsp, 0x50 ; pop rbp ; ret
0x00000200006b2b28 : nop ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000558fc2 : nop ; add rsp, 0x50 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200006b2c64 : nop ; add rsp, 0x60 ; pop rbx ; ret
0x00000200006b2bd5 : nop ; add rsp, 0x70 ; pop rbx ; ret
0x00000200006c759c : nop ; and dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000060b5e2 : nop ; call 0x20000231ce4
0x00000200001e1edf : nop ; call qword ptr [rcx]
0x0000020000117d4a : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; xor eax, eax ; ret
0x0000020000766bf2 : nop ; dec dword ptr [rcx + rcx*4 + 0x7b] ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000020be83 : nop ; fcomp dword ptr [rdi] ; add byte ptr [rcx - 0x7f], cl ; ret 0xa00
0x0000020000128d7a : nop ; fsub dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xd148
0x00000200001ba0e2 : nop ; idiv edi ; add rsp, 0x58 ; ret
0x0000020000595292 : nop ; idiv edi ; xor ecx, ecx ; call 0x200003b14a7
0x000002000015a3c1 : nop ; jmp 0x2000000fb5f
0x0000020000161bce : nop ; jmp 0x2000002deaa
0x0000020000177b33 : nop ; jmp 0x20000053df9
0x0000020000178376 : nop ; jmp 0x20000056326
0x0000020000181da6 : nop ; jmp 0x200000858e4
0x0000020000185997 : nop ; jmp 0x20000091c9b
0x0000020000186428 : nop ; jmp 0x20000094ae5
0x00000200001882c3 : nop ; jmp 0x2000009b092
0x000002000018fb41 : nop ; jmp 0x200000baeab
0x000002000019acb0 : nop ; jmp 0x200000e6fae
0x000002000019acc5 : nop ; jmp 0x200000e6fc7
0x00000200001700c2 : nop ; jmp 0x20000111074
0x000002000019d1e0 : nop ; jmp 0x20000121279
0x00000200003a7b4f : nop ; jmp 0x2000039b2e4
0x000002000056487d : nop ; jmp 0x200003cdf98
0x00000200005771df : nop ; jmp 0x200003f34c4
0x000002000057fb99 : nop ; jmp 0x2000040be9e
0x00000200005ad3cc : nop ; jmp 0x200004696ce
0x00000200005b9e81 : nop ; jmp 0x20000496146
0x00000200005ba9e0 : nop ; jmp 0x20000499918
0x00000200005966be : nop ; jmp 0x200005128f9
0x00000200005966ce : nop ; jmp 0x2000051292e
0x00000200005cde09 : nop ; jmp 0x20000521c9c
0x000002000048a716 : nop ; jmp 0x200005b6964
0x0000020000778380 : nop ; jmp 0x200007545fc
0x0000020000778397 : nop ; jmp 0x20000754632
0x00000200007783eb : nop ; jmp 0x20000754658
0x000002000052e0b4 : nop ; jmp rsp
0x00000200001b8312 : nop ; js 0x200001b8320 ; add byte ptr [rax], al ; ret
0x00000200001c122f : nop ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x00000200005c43d9 : nop ; mov eax, 0x41000000 ; call rsi
0x00000200003a290e : nop ; mov eax, dword ptr [r8] ; cmp eax, edx ; je 0x200003a2915 ; ret
0x00000200007631db : nop ; mov eax, dword ptr [rsp + 0x20] ; add rsp, 0x38 ; ret
0x000002000067feed : nop ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000067f293 : nop ; mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000503d6e : nop ; mov esi, 0x48008bff ; add esp, 0x28 ; ret
0x00000200004aef6c : nop ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000014f029 : nop ; mov r11, qword ptr [rbp - 0x68] ; add rsp, 0x68 ; ret
0x0000020000068119 : nop ; mov rax, qword ptr [rcx] ; test al, 1 ; jne 0x2000006812a ; ret
0x0000020000068118 : nop ; mov rax, qword ptr [rcx] ; test al, 1 ; jne 0x2000006812b ; ret
0x00000200000b27ec : nop ; movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0 ; ret
0x000002000041ce15 : nop ; nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x7401
0x00000200001088d1 : nop ; nop ; add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0x000002000014aa52 : nop ; nop ; add rsp, 0x10 ; ret
0x000002000072b28d : nop ; nop ; add rsp, 0x48 ; ret
0x000002000076610e : nop ; or bh, bh ; ret 0x3b41
0x000002000003cedb : nop ; or byte ptr [rax], al ; jmp 0x2000003cea7
0x000002000013eaa3 : nop ; or byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000020000471c02 : nop ; out 0xff, al ; call 0x200000ee959
0x00000200001e37a5 : nop ; pause ; add rsp, 0x30 ; pop rbx ; ret
0x000002000052952c : nop ; pop rdi ; ret 0x8bff
0x000002000004b21f : nop ; push -0x9ffffff ; ret 0xf01
0x000002000015a3c3 : nop ; push rdi ; jmp 0x2000015a3cc
0x000002000013372f : nop ; ret
0x00000200004b5a07 : nop ; ret 0x10
0x00000200006b56cd : nop ; ret 0x33ff
0x0000020000607f1d : nop ; ret 0x40ff
0x00000200007561a5 : nop ; ret 0x41ff
0x000002000075644c : nop ; ret 0x4cff
0x0000020000756189 : nop ; ret 0x85ff
0x0000020000754fc4 : nop ; ret 0xc7ff
0x0000020000173f53 : nop ; rol byte ptr [rsi], 0 ; add byte ptr [rcx - 0x75], al ; ret 0xe083
0x000002000039cf8b : nop ; rol byte ptr [rsi], 0 ; add dh, dh ; ret 0x7401
0x0000020000196d98 : nop ; rol byte ptr [rsi], 0 ; add dh, dh ; ret 0x7504
0x00000200000063ef : nop ; sldt word ptr [rax] ; ret
0x00000200001f77ff : nop ; test al, 1 ; je 0x200001f77f1 ; xor al, al ; ret
0x0000020000071169 : nop ; test rcx, rcx ; jne 0x2000007117c ; mov rax, rcx ; ret
0x00000200006da210 : nop ; xchg eax, edi ; ret 0x40ff
0x00000200000444fd : nop ; xor al, al ; ret
0x00000200001c16a0 : nop ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003ed4f4 : nop ; xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x000002000013feb8 : nop dword ptr [rax + rax] ; jmp rax
0x0000020000148b98 : nop dword ptr [rax + rax] ; nop ; ret
0x0000020000133738 : nop dword ptr [rax + rax] ; ret
0x0000020000143fac : nop dword ptr [rax] ; fldcw word ptr [rcx] ; ret
0x0000020000143f8c : nop dword ptr [rax] ; fninit ; ret
0x000002000013f80d : nop dword ptr [rax] ; mov byte ptr [rcx + 2], al ; mov word ptr [rcx], ax ; ret
0x000002000013feb7 : nop word ptr [rax + rax] ; jmp rax
0x0000020000133737 : nop word ptr [rax + rax] ; ret
0x0000020000408b60 : not al ; and al, 1 ; ret
0x00000200006bd5a2 : not byte ptr [rcx] ; ret 0xff
0x00000200001acf7e : not byte ptr [rdx + rdx] ; call rax
0x000002000001fe1d : not byte ptr [rdx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001b9d3c : not byte ptr [rip + 0x3750000] ; xor al, al ; ret
0x000002000010494f : not dword ptr [rdx] ; add byte ptr [rax + 0x2b], cl ; ret
0x00000200003b56ef : not eax ; and dword ptr [rcx + 0x3b8], eax ; ret
0x0000020000053a21 : not eax ; and eax, 0xc000000d ; ret
0x000002000041c3a6 : not eax ; and eax, 0xc0000034 ; ret
0x0000020000417755 : not eax ; and eax, 0xc0000061 ; jmp 0x20000417729
0x0000020000208486 : not eax ; and eax, 1 ; ret
0x00000200001c1a6d : not eax ; and qword ptr [rcx + rax*8 + 8], r8 ; ret
0x0000020000109a31 : not eax ; lock and dword ptr [r10], eax ; ret
0x0000020000004393 : not eax ; lock and dword ptr [r8], eax ; jmp 0x20000004364
0x000002000061f561 : not eax ; lock and dword ptr [r8], eax ; ret
0x000002000003e4f8 : not eax ; lock and qword ptr [r9 + 8], rax ; ret
0x000002000021ebda : not eax ; or rax, r8 ; jmp 0x2000021ebf9
0x00000200001b6a3b : not eax ; or rax, rdx ; jmp 0x200001b6a55
0x00000200001b6a3b : not eax ; or rax, rdx ; jmp 0x200001b6a5a
0x00000200001f31ca : not eax ; test eax, ecx ; je 0x200001f31db ; xor al, al ; ret
0x00000200000f60d1 : not ecx ; mov eax, r9d ; ret
0x00000200003fea84 : not ecx ; test ecx, edx ; sete al ; ret
0x00000200001f62ee : not edi ; add byte ptr [rax], al ; shl eax, 0xa ; add eax, ecx ; ret
0x000002000062e8ec : not esp ; push rsi ; ret 0x7573
0x00000200001c1a6c : not r8 ; and qword ptr [rcx + rax*8 + 8], r8 ; ret
0x00000200000f60d0 : not r9d ; mov eax, r9d ; ret
0x000002000003e4f7 : not rax ; lock and qword ptr [r9 + 8], rax ; ret
0x00000200001b6a3a : not rax ; or rax, rdx ; jmp 0x200001b6a56
0x000002000074cdd2 : or ah, byte ptr [rax - 0x45] ; inc dword ptr [rdi + rcx + 0x20] ; ret 0x2b8
0x00000200005ab914 : or ah, byte ptr [rbx] ; or cl, ch ; cmp al, dl ; jmp 0x200005ab920
0x000002000003185d : or ah, byte ptr [rcx + rax] ; ret
0x00000200001f9a29 : or ah, byte ptr [rsi - 0x77] ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000200000926c2 : or ah, byte ptr [rsi - 1] ; ret 0x3b66
0x000002000011e7c8 : or ah, byte ptr [rsi] ; add byte ptr [rbp + rax + 0x48], dh ; mov eax, dword ptr [rax + 0x48] ; ret
0x000002000043926d : or al, 0 ; add bl, ch ; ret 0x4865
0x000002000073e304 : or al, 0 ; add byte ptr [rax + 0xb], cl ; ret 0x20bf
0x000002000020fb1f : or al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000a83f9 : or al, 0 ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000002000076d6ae : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000048fce0 : or al, 0 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000057240 : or al, 0 ; add byte ptr [rax], al ; ret
0x00000200003ce856 : or al, 0 ; add byte ptr [rbp - 0x8858a27], al ; ret
0x00000200000b470f : or al, 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000b2fcc : or al, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xf749
0x000002000012777b : or al, 0 ; add byte ptr [rdx - 0x3c], dh ; add rsp, 0x38 ; ret
0x00000200004b5c0f : or al, 0 ; add dh, dh ; ret
0x0000020000773b77 : or al, 0 ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001a973f : or al, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000c2cf7 : or al, 0 ; add rsp, 0x28 ; ret
0x00000200000d5c25 : or al, 0 ; add rsp, 0x38 ; ret
0x00000200000c2cb4 : or al, 0 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000498bd1 : or al, 0 ; and dword ptr [rcx + 8], 0 ; ret
0x00000200003b8f50 : or al, 0 ; jmp 0x200003b8f19
0x0000020000012684 : or al, 0 ; mov eax, edx ; jmp 0x20000012673
0x0000020000504076 : or al, 0 ; mov rcx, qword ptr [rsp + 0x30] ; call 0x20000140389
0x0000020000491e50 : or al, 0 ; ret
0x0000020000033bb8 : or al, 0x10 ; ret
0x000002000066ec49 : or al, 0x22 ; ret 0x450f
0x000002000020d6d5 : or al, 0x23 ; ret 0xc63b
0x000002000074b4c9 : or al, 0x24 ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000059e039 : or al, 0x24 ; add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0x7401
0x00000200005a3ccc : or al, 0x24 ; add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0xf01
0x00000200006c11f8 : or al, 0x24 ; add byte ptr [rax - 0x75], cl ; and byte ptr [rax - 0x7d], cl ; ret 0x118
0x0000020000016d77 : or al, 0x24 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001c2a16 : or al, 0x24 ; mov al, r9b ; add rsp, 0x28 ; ret
0x00000200003eb72e : or al, 0x25 ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200000c7a28
0x000002000049cb61 : or al, 0x25 ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200000c7a29
0x00000200004c300e : or al, 0x25 ; mov byte ptr [rcx], al ; add byte ptr [rax], al ; call 0x200000e9de9
0x0000020000154e6b : or al, 0x2a ; add byte ptr [rax + 0x40c48348], dl ; pop rbp ; ret
0x000002000062b05f : or al, 0x2b ; call 0x200000438d1
0x00000200003f60f9 : or al, 0x2b ; ret
0x000002000014f669 : or al, 0x2b ; ret 0xccc3
0x0000020000048bea : or al, 0x33 ; ret 0x8941
0x000002000015d3b4 : or al, 0x33 ; ror byte ptr [rax - 9], cl ; int1 ; mov rax, rdx ; ret
0x0000020000453e7b : or al, 0x3c ; or byte ptr [rdi], 0x84 ; ret
0x00000200000379e0 : or al, 0x3c ; or dword ptr [rax], eax ; add rsp, 0x68 ; ret
0x00000200001e7faf : or al, 0x3d ; str word ptr [rcx] ; add rsp, 0x28 ; ret
0x00000200006b7222 : or al, 0x40 ; cmp ecx, dword ptr [rdx + 0x14] ; jb 0x200006b7235 ; xor eax, eax ; ret
0x00000200005b41b0 : or al, 0x41 ; call rdx
0x0000020000467d87 : or al, 0x41 ; inc edx ; jmp 0x20000467d74
0x00000200001b13a3 : or al, 0x41 ; mov dword ptr [rax + 0x28], eax ; ret
0x00000200003b69d1 : or al, 0x41 ; mov dword ptr [rdi + 0xc], eax ; jmp 0x200003b69e8
0x00000200003b69d0 : or al, 0x41 ; mov dword ptr [rdi + 0xc], eax ; jmp 0x200003b69e9
0x000002000042fb94 : or al, 0x41 ; ret 0x44ff
0x000002000012e92b : or al, 0x44 ; mov dword ptr [rcx + 8], eax ; xor eax, eax ; ret
0x00000200005f3072 : or al, 0x44 ; or eax, edx ; jmp 0x200005f3093
0x0000020000762d19 : or al, 0x48 ; add dword ptr [rcx + 0x18], eax ; add rsp, 0x28 ; ret
0x0000020000762bf5 : or al, 0x48 ; add dword ptr [rcx + 0x18], eax ; add rsp, 0x38 ; ret
0x0000020000763080 : or al, 0x48 ; add dword ptr [rdx + 0x18], eax ; add rsp, 0x28 ; ret
0x00000200007738a2 : or al, 0x48 ; add esp, 0x20 ; pop rbp ; ret
0x00000200001b20d5 : or al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000153359 : or al, 0x48 ; add esp, 0x30 ; pop rbp ; ret
0x000002000046068d : or al, 0x48 ; cmp ecx, edx ; jb 0x200004606a3 ; jmp 0x200004606b2
0x000002000007bec7 : or al, 0x48 ; lea eax, dword ptr [rax + rdx*8] ; ret
0x00000200000df6d7 : or al, 0x48 ; lea eax, dword ptr [rax*8 + 0x30] ; ret
0x000002000019e9e5 : or al, 0x48 ; lea ecx, dword ptr [rsp + 0x30] ; call rax
0x0000020000042104 : or al, 0x48 ; mov dword ptr [rax + 8], eax ; mov qword ptr [rax], rax ; ret
0x000002000014f770 : or al, 0x48 ; mov eax, dword ptr [rsp + 8] ; ret
0x0000020000113a3c : or al, 0x48 ; mov eax, edx ; ret
0x000002000046e713 : or al, 0x48 ; mov ecx, dword ptr [rsp + 0x250] ; call rax
0x0000020000133419 : or al, 0x48 ; xor eax, eax ; ret
0x00000200001f8b28 : or al, 0x49 ; add eax, 0xc ; jmp 0x200001f8b4a
0x00000200001f92e4 : or al, 0x49 ; add eax, 0xc ; jmp 0x200001f9306
0x000002000048e24b : or al, 0x49 ; add ecx, esp ; call 0x200000bab47
0x00000200001b2676 : or al, 0x49 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000020000134ead : or al, 0x49 ; mov eax, ebx ; ret
0x00000200001d2244 : or al, 0x49 ; mov ecx, ebx ; call qword ptr [r11]
0x0000020000627cfd : or al, 0x49 ; or esi, ecx ; call 0x200000b3f36
0x00000200003f0d29 : or al, 0x49 ; sub ecx, 1 ; jne 0x200003f0d19 ; ret
0x00000200003f0d28 : or al, 0x49 ; sub ecx, 1 ; jne 0x200003f0d1a ; ret
0x0000020000642a14 : or al, 0x4a ; add cx, r9w ; movzx eax, cx ; ret
0x00000200003edceb : or al, 0x4a ; sub eax, dword ptr [rdx + r8*4] ; sub eax, ecx ; ret
0x0000020000746cb2 : or al, 0x4c ; and ecx, eax ; mov rcx, r9 ; call 0x200000a2f59
0x00000200000d6cfc : or al, 0x4c ; and ecx, ebp ; mov rcx, r9 ; call 0x200000a2f59
0x00000200006c0371 : or al, 0x4c ; mov eax, edi ; mov edx, esi ; mov rcx, rbx ; call rax
0x00000200001ad468 : or al, 0x4c ; mov ecx, dword ptr [rip + 0x125008] ; call r9
0x00000200000dbbc1 : or al, 0x4d ; cmp dword ptr [rcx + 0x20], eax ; je 0x200000dbbd0 ; ret
0x00000200003b39d4 : or al, 0x4d ; mov dword ptr [rcx], eax ; mov eax, 1 ; ret
0x00000200004f8a87 : or al, 0x4d ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x0000020000487340 : or al, 0x4f ; ret
0x00000200003eda42 : or al, 0x51 ; imul eax, ecx ; sub eax, r8d ; ret
0x000002000042fe80 : or al, 0x53 ; mov rax, r9 ; ret
0x00000200003ed802 : or al, 0x5a ; imul eax, ecx ; add eax, r9d ; ret
0x00000200003ed306 : or al, 0x5a ; imul eax, ecx ; xor eax, r9d ; ret
0x00000200004c3050 : or al, 0x64 ; ret 0x49ff
0x000002000000ac60 : or al, 0x72 ; sbb dh, dh ; ret 0x7502
0x00000200002157ed : or al, 0x74 ; adc byte ptr [rcx - 1], al ; ret 0x3b45
0x000002000040916d : or al, 0x75 ; enter -0xbf, -0x3e ; jmp 0x20000409147
0x000002000003ea6e : or al, 0x78 ; adc al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x00000200000c1a5b : or al, 0x81 ; ret
0x00000200000c1a64 : or al, 0x82 ; ret
0x00000200000b29e4 : or al, 0x83 ; loope 0x200000b29f2 ; cmp r8b, cl ; jne 0x200000b29f7 ; ret
0x000002000049ea2a : or al, 0x83 ; ret 0x3bf0
0x0000020000746fb8 : or al, 0x85 ; ret
0x000002000041e912 : or al, 0x85 ; sal byte ptr [rbx + 0x48], 3 ; ret 0x8548
0x000002000064f629 : or al, 0x85 ; sal byte ptr [rdx + rsi + 0x48], 3 ; ret 0x4eb
0x00000200000cb040 : or al, 0x85 ; sal byte ptr [rsp + rdi + 0x48], 3 ; ret 0x8548
0x000002000048f209 : or al, 0x89 ; lea rax, qword ptr [rax + rcx*8] ; ret
0x0000020000524fc4 : or al, 0x89 ; or byte ptr [r8 - 0x7d], cl ; ret
0x000002000076d090 : or al, 0x89 ; or eax, 0xffb95b8d ; ret
0x0000020000135f12 : or al, 0x8a ; ret
0x00000200000516ae : or al, 0x8b ; add eax, 0x32dbb7 ; ret
0x0000020000477462 : or al, 0x8b ; push rax ; sub dh, dh ; ret 0xf40
0x000002000014f666 : or al, 0x8b ; push rdx ; or al, 0x2b ; ret 0xccc3
0x00000200004c6e02 : or al, 0x8b ; pushfq ; and al, 0 ; add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x000002000000be22 : or al, 0x8b ; ret
0x0000020000133cfc : or al, 0x8b ; ret 0x3b48
0x0000020000399102 : or al, 0x8b ; ret 0xc148
0x000002000006b01f : or al, 0x8b ; ret 0xc2ff
0x000002000064043f : or al, 0x8b ; ret 0xd0f7
0x00000200001b37c1 : or al, 0x8b ; ret 0xe8c1
0x00000200007486a8 : or al, 0x8b ; ror byte ptr [rcx - 0x73], 0xc ; ret 0x8b4c
0x00000200006213e3 : or al, 0x8b ; sbb cl, byte ptr [rax - 1] ; ret
0x000002000048a715 : or al, 0x90 ; jmp 0x200005b6965
0x0000020000745300 : or al, 0x90 ; ret
0x0000020000148e64 : or al, 0x91 ; jmp r9
0x0000020000694331 : or al, 0x92 ; lea r8, qword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x2000069434b
0x00000200006089d0 : or al, 0x93 ; ret 0x48ff
0x0000020000137c30 : or al, 0x9b ; sbb dword ptr [rax], eax ; sete al ; ret
0x00000200006d9450 : or al, 0xa5 ; ret 0x48ff
0x00000200003b1256 : or al, 0xac ; sbb al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000129654 : or al, 0xad ; sldt word ptr [rax] ; add byte ptr [rbx], ah ; ret 0xc803
0x0000020000773bfd : or al, 0xb ; add rsp, 0x20 ; pop rbp ; ret
0x00000200003f4dd1 : or al, 0xb ; ret 0x189
0x0000020000413cec : or al, 0xb9 ; add eax, dword ptr [rax] ; add rsp, 0x48 ; ret
0x0000020000773d83 : or al, 0xc ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001ab420 : or al, 0xc1 ; ret
0x00000200000a2f85 : or al, 0xc1 ; xor eax, eax ; test rcx, r8 ; cmovne eax, edx ; ret
0x0000020000496584 : or al, 0xc2 ; jmp 0x2000049653f
0x000002000061a8ad : or al, 0xc2 ; mov eax, r9d ; ret
0x000002000010df35 : or al, 0xc3 ; mov eax, 0xc000009a ; ret
0x0000020000503fd0 : or al, 0xc4 ; ret
0x0000020000753018 : or al, 0xc4 ; ret 0x44ff
0x00000200005a50bc : or al, 0xc4 ; ret 0x90ff
0x000002000048c99c : or al, 0xc6 ; add rcx, rbp ; call 0x200000bab48
0x00000200006ac6e2 : or al, 0xc7 ; ret
0x000002000057dfb2 : or al, 0xd ; add dh, dh ; ret
0x000002000051723d : or al, 0xd3 ; loop 0x2000051723c ; ret 0x3a0
0x0000020000513790 : or al, 0xd6 ; ret 0x8bff
0x00000200000eef39 : or al, 0xd9 ; test rcx, rcx ; je 0x200000eef4b ; call rcx
0x0000020000773ee0 : or al, 0xe ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000425599 : or al, 0xe8 ; jge 0x200004255a2 ; ret 0x48ff
0x0000020000496ed0 : or al, 0xe8 ; jp 0x20000496ef9 ; ret 0x48ff
0x0000020000418ce8 : or al, 0xe8 ; mov dh, 0xaf ; ret
0x000002000077a3f7 : or al, 0xe8 ; ret
0x000002000041b27e : or al, 0xe8 ; sbb al, 0x78 ; ret 0xb0ff
0x00000200001f8b2c : or al, 0xeb ; adc cl, byte ptr [rax - 0x7d] ; ret
0x00000200005ab957 : or al, 0xeb ; add eax, dword ptr [rbx - 0x7af0e807] ; or dl, al ; jmp 0x200005ab96b
0x00000200006821ce : or al, 0xeb ; add ecx, dword ptr [rax - 0x75] ; ret 0x8548
0x0000020000763289 : or al, 0xeb ; loop 0x200007632dd ; add esp, 0x50 ; pop rbx ; ret
0x000002000012695d : or al, 0xeb ; stosd dword ptr [rdi], eax ; mov eax, 0xc000000d ; ret
0x00000200005175e0 : or al, 0xf ; adc byte ptr [rax + 3], r9b ; ret
0x0000020000095e17 : or al, 0xf ; add dh, dh ; ret
0x0000020000773f9e : or al, 0xf ; add rsp, 0x20 ; pop rbp ; ret
0x00000200006b67fe : or al, 0xf ; call 0x2000001a628
0x000002000065e6c1 : or al, 0xf ; mov bh, 0x45 ; add bh, bh ; ret
0x000002000050f470 : or al, 0xf ; ret
0x0000020000782933 : or al, 0xf ; xchg eax, ebp ; ret
0x0000020000450f70 : or al, 0xf ; xchg edx, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000067664 : or al, 0xf6 ; ret
0x0000020000031d15 : or al, 0xf6 ; rol dword ptr [rcx], 0x74 ; int1 ; ret
0x0000020000527e77 : or al, 0xf7 ; jno 0x20000527e87 ; ret
0x0000020000527e76 : or al, 0xf7 ; jno 0x20000527e88 ; ret
0x000002000039ed97 : or al, 0xf7 ; ret
0x00000200005cb43c : or al, 0xf7 ; ret 0xff80
0x000002000039fa1c : or al, 0xff ; ret
0x000002000044f3cf : or al, 0xff ; ret 0x3b41
0x000002000019a1bb : or al, 0xff ; ret 0xfa83
0x00000200001aca52 : or al, 0xff ; ror byte ptr [rax - 0x7d], 0xc1 ; and al, 0x3b ; ret
0x00000200000405da : or al, 1 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000001e17c : or al, 1 ; add byte ptr [rax], al ; ret
0x00000200002168fa : or al, 1 ; jne 0x2000021690b ; movzx eax, word ptr [rcx + 0x28] ; ret
0x00000200000b3286 : or al, 3 ; call 0x2000014f4c4
0x00000200006bafa4 : or al, 3 ; enter 0x2b41, -0x36 ; mov dword ptr [r8], ecx ; ret
0x000002000015b640 : or al, 3 ; jmp 0x20000014e05
0x0000020000413106 : or al, 3 ; ret
0x0000020000083b52 : or al, 3 ; ret 0x165
0x000002000011c334 : or al, 4 ; jne 0x2000011c347 ; mov eax, 1 ; ret
0x00000200001a5993 : or al, 4 ; mov byte ptr [rcx + 4], al ; ret
0x00000200001bd6bf : or al, 4 ; sete dl ; jmp 0x200001bd6a9
0x000002000063cd56 : or al, 6 ; add byte ptr [rax], al ; ret
0x00000200000b3227 : or al, 6 ; call 0x2000014f4c4
0x0000020000407153 : or al, al ; call 0x1ffc3419563
0x00000200000df10c : or al, al ; mov byte ptr [rcx + 0xbe], al ; ret
0x00000200000fe669 : or al, bh ; ret
0x000002000050dde0 : or al, bl ; mov eax, 0xc0000023 ; ret
0x0000020000050847 : or al, bl ; mov eax, 0xc0000409 ; ret
0x00000200003df52c : or al, bl ; xor eax, eax ; ret
0x00000200006cdecf : or al, bpl ; mov es, word ptr [rbx - 1] ; dec dword ptr [rax - 0x75] ; ret
0x00000200000436fa : or al, byte ptr [rax + rax] ; or dword ptr [rcx - 0x75], ecx ; ret 0x8b49
0x0000020000196062 : or al, byte ptr [rax + rcx*4 + 0x64] ; sbb byte ptr [rdx - 0x17], dh ; ret 0xf3a5
0x0000020000483868 : or al, byte ptr [rax] ; add al, ch ; loopne 0x200004837fd ; ret
0x0000020000076818 : or al, byte ptr [rax] ; add byte ptr [rax + 0x2b], cl ; ret 0x8948
0x00000200003f3c32 : or al, byte ptr [rax] ; add byte ptr [rax + 0x2b], cl ; ret 0x8b48
0x000002000009ca64 : or al, byte ptr [rax] ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x000002000039e8d7 : or al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000020000523de6 : or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x000002000004ea52 : or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200006839f1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004415a2 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x00000200004ca13e : or al, byte ptr [rax] ; add byte ptr [rax], al ; call 0x200000ee7b7
0x000002000019d0ca : or al, byte ptr [rax] ; add byte ptr [rax], al ; call rax
0x00000200004a7b28 : or al, byte ptr [rax] ; add byte ptr [rbp - 0x7c], al ; ret 0xe74
0x0000020000733d4b : or al, byte ptr [rax] ; add byte ptr [rbx - 0x7cb75fab], cl ; ret
0x000002000073751c : or al, byte ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0x8944
0x00000200000e4f16 : or al, byte ptr [rax] ; add byte ptr [rcx + 3], cl ; ret 0x8b4d
0x000002000049d513 : or al, byte ptr [rax] ; add byte ptr [rcx - 0x3f], cl ; call 0x1ffc27d212f
0x0000020000665ba1 : or al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0xcb75
0x0000020000202d81 : or al, byte ptr [rax] ; add dh, bh ; ret
0x000002000008bb3f : or al, byte ptr [rax] ; add dh, dh ; ret
0x00000200000a2593 : or al, byte ptr [rax] ; add rdx, r11 ; jmp rdx
0x000002000002a64d : or al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000044659 : or al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200000f069e : or al, byte ptr [rax] ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000852e3 : or al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000016c2c : or al, byte ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000085e42 : or al, byte ptr [rax] ; add rsp, 0x58 ; ret
0x0000020000088cbe : or al, byte ptr [rax] ; add rsp, 0x78 ; ret
0x0000020000429e65 : or al, byte ptr [rax] ; jmp 0x20000429e2f
0x000002000001f3c7 : or al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000051cd89 : or al, byte ptr [rax] ; mov al, bl ; add rsp, 0x50 ; pop rbx ; ret
0x00000200000ef7da : or al, byte ptr [rax] ; mov eax, 0x10 ; ret
0x000002000001407d : or al, byte ptr [rax] ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f3ba7 : or al, byte ptr [rax] ; mov eax, edx ; jmp 0x200000f3b37
0x00000200001a5422 : or al, byte ptr [rax] ; mov qword ptr [rcx], rax ; ret
0x000002000051e6ef : or al, byte ptr [rax] ; mov rdx, rdi ; mov rcx, rbx ; call qword ptr [rax]
0x00000200001546a5 : or al, byte ptr [rax] ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000b0622 : or al, byte ptr [rax] ; pause ; add rsp, 0x28 ; ret
0x00000200000ed13d : or al, byte ptr [rax] ; ret
0x0000020000014800 : or al, byte ptr [rax] ; shl edx, 9 ; or eax, edx ; jmp 0x200000147fd
0x0000020000525dfc : or al, byte ptr [rax] ; xor al, al ; ret
0x000002000073217c : or al, byte ptr [rbp + 3] ; ret
0x0000020000733ea0 : or al, byte ptr [rbp + 3] ; ret 0xec75
0x000002000007dfad : or al, byte ptr [rbp - 0x74b7fff3] ; ret 0xf48
0x0000020000202d8c : or al, byte ptr [rbx + rdi - 0x3f] ; jae 0x20000202d9f ; or eax, 0xffffffff ; ret
0x00000200001eed34 : or al, byte ptr [rbx + rdi - 0x3f] ; jbe 0x200001eed47 ; or eax, 0xffffffff ; ret
0x00000200001f660a : or al, byte ptr [rbx] ; ret 0x8941
0x0000020000014ff4 : or al, byte ptr [rcx + 0x23] ; fmul dword ptr [rbx] ; fadd dword ptr [rcx - 0x48] ; ret 0
0x00000200003ae194 : or al, byte ptr [rcx + 0x3b] ; ret
0x0000020000752aca : or al, byte ptr [rcx + 0xf] ; mov bh, 0xc0 ; ret
0x0000020000513618 : or al, byte ptr [rcx + 3] ; int 0x80
0x000002000056505a : or al, byte ptr [rcx - 0x3f] ; ret
0x0000020000216af5 : or al, byte ptr [rcx - 0x75] ; adc al, 0x89 ; mov dword ptr [r8], edx ; ret
0x00000200001d27e2 : or al, byte ptr [rcx - 0x75] ; mov byte ptr [rbx - 0x73], 0x14 ; or ch, byte ptr [rbx] ; ret 0x341
0x0000020000200b93 : or al, byte ptr [rcx - 0x75] ; mov byte ptr [rbx - 0x73], 0x14 ; or ch, byte ptr [rbx] ; ret 0xc0ff
0x00000200005ab911 : or al, byte ptr [rcx - 0x75] ; or ah, byte ptr [rbx] ; or cl, ch ; cmp al, dl ; jmp 0x200005ab923
0x00000200005d536e : or al, byte ptr [rcx - 0x7f] ; ret 0x2400
0x000002000042456c : or al, byte ptr [rcx - 0xa] ; ret 0xf01
0x0000020000178582 : or al, byte ptr [rcx - 0xa] ; ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0x2244
0x0000020000692ea9 : or al, byte ptr [rcx - 1] ; mov byte ptr [rbx + rdi - 0xb], 0x72 ; ret
0x0000020000698934 : or al, byte ptr [rcx - 1] ; ret
0x00000200007842da : or al, byte ptr [rcx - 1] ; ret 0x3b44
0x000002000018ef96 : or al, byte ptr [rcx - 1] ; ret 0x834a
0x000002000021577b : or al, byte ptr [rcx - 9] ; ret
0x0000020000455666 : or al, byte ptr [rcx] ; add byte ptr [rax], al ; mov cl, 1 ; call 0x20000082375
0x00000200001a9bce : or al, byte ptr [rdi] ; in al, dx ; dec esp ; add rsp, 0x28 ; ret
0x000002000075eafe : or al, byte ptr [rdi] ; ret 0x49ff
0x0000020000529e11 : or al, byte ptr fs:[rax] ; add rsp, 0x28 ; ret
0x00000200001f1310 : or al, ch ; adc al, byte ptr [rax + rax] ; add cl, ch ; ret 2
0x00000200006c75ea : or al, ch ; and dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006176dc : or al, ch ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffb0
0x0000020000513b06 : or al, ch ; je 0x20000513ac4 ; ret
0x00000200001fd07b : or al, ch ; jmp qword ptr [rax]
0x0000020000414ce5 : or al, ch ; jne 0x20000414cdc ; ret
0x000002000051d645 : or al, ch ; jne 0x2000051d66b ; ret
0x00000200005f4e69 : or al, ch ; jno 0x200005f4e3f ; ret
0x0000020000510eca : or al, ch ; mov al, 0xe2 ; ret
0x00000200006cded0 : or al, ch ; mov es, word ptr [rbx - 1] ; dec dword ptr [rax - 0x75] ; ret
0x00000200006c759a : or al, ch ; nop ; and dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000048733e : or al, ch ; or al, 0x4f ; ret
0x0000020000503abd : or al, ch ; pop rbp ; std ; ret
0x00000200001c54d9 : or al, ch ; ret
0x000002000049d2da : or al, ch ; ret 0x84ff
0x00000200005d3958 : or al, ch ; ret 0xb6fe
0x0000020000400578 : or al, ch ; ret 0xc73c
0x0000020000579658 : or al, ch ; ret 0xf23c
0x00000200006c60e5 : or al, ch ; ret 0xff9b
0x000002000042aaca : or al, ch ; sbb dl, bl ; ret
0x0000020000487351 : or al, ch ; stc ; ret
0x000002000065689f : or al, ch ; wait ; xor al, 0x9e ; dec dword ptr [rax - 0x7d] ; ret
0x000002000056cff1 : or al, ch ; xchg eax, ebp ; out -0x50, eax ; call rcx
0x000002000002db11 : or al, dh ; cmpxchg qword ptr [rcx], rdx ; jne 0x2000002db25 ; ret
0x00000200001d7dbb : or al, dh ; dec dword ptr [rcx + 0x1390] ; ret
0x00000200001d7dd9 : or al, dh ; dec dword ptr [rcx + 0x1394] ; ret
0x0000020000686a0d : or al, dh ; pop r15 ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000200000fe668 : or al, dil ; ret
0x00000200000400f4 : or al, dl ; jmp 0x200000400bd
0x000002000049d2d9 : or al, r13b ; ret 0x84ff
0x000002000042aac9 : or al, r13b ; sbb dl, bl ; ret
0x00000200000df10b : or al, r8b ; mov byte ptr [rcx + 0xbe], al ; ret
0x000002000013f7c2 : or bh, al ; ret
0x000002000014f503 : or bh, bh ; dec r8 ; jne 0x2000014f507 ; ret
0x000002000014f5b1 : or bh, bh ; dec r8 ; jne 0x2000014f5b5 ; ret
0x000002000001c358 : or bh, bh ; jl 0x2000001c365 ; mov al, 1 ; ret
0x00000200001556c8 : or bh, bh ; mov eax, 0xc0000095 ; ret
0x00000200000198f5 : or bh, bh ; ret
0x000002000003857d : or bh, bh ; ret 0x3b41
0x00000200004018e6 : or bh, bh ; ret 0x5489
0x000002000021cd69 : or bh, bh ; ret 0x8349
0x000002000053f9f5 : or bh, bh ; ret 0x8948
0x0000020000525d96 : or bh, bh ; ret 0x8b48
0x000002000048cc2f : or bh, bh ; ret 0xb70f
0x00000200003e726b : or bh, bh ; ret 0xc1ff
0x000002000065cc49 : or bh, bh ; ret 0xefeb
0x000002000012b0ff : or bh, bh ; rol byte ptr [rbp + 0xf], 0xb7 ; ret
0x00000200001ac9f8 : or bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; and al, 0x3b ; ret
0x000002000002bd2c : or bh, byte ptr [rax + 1] ; ret
0x00000200005ff8c3 : or bh, byte ptr [rbx - 0x3fffff66] ; jmp 0x200005ff894
0x0000020000213fb7 : or bh, byte ptr [rbx] ; ret 0xdb1b
0x00000200004caf80 : or bh, byte ptr [rcx + 0x20] ; call 0x200000eefb1
0x00000200004ec687 : or bh, byte ptr [rcx + 2] ; call 0x20000117081
0x00000200006a8e27 : or bh, byte ptr [rcx + 4] ; call 0x200006b50a0
0x0000020000782930 : or bh, byte ptr [rcx] ; pop rcx ; or al, 0xf ; xchg eax, ebp ; ret
0x00000200001b33e4 : or bh, byte ptr [rdx + 0x32] ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x0000020000603b30 : or bh, byte ptr [rdx + 0x47706e50] ; call 0x20000231019
0x000002000060f612 : or bh, byte ptr [rdx + 0x51706e50] ; call 0x20000231019
0x0000020000610059 : or bh, byte ptr [rdx + 0x57706e50] ; call 0x20000231019
0x00000200006061c0 : or bh, byte ptr [rdx + 0x58706e50] ; call 0x20000231019
0x0000020000492175 : or bh, byte ptr [rdx + 0x6d566d4d] ; call 0x200000c1e69
0x0000020000405060 : or bh, dh ; ret
0x00000200003e4022 : or bh, dh ; ret 0xfff
0x000002000009a2c6 : or bl, al ; lock inc dword ptr [rcx + 0x24] ; ret
0x00000200004b060a : or bl, al ; mov al, 1 ; add rsp, 8 ; ret
0x00000200006876b9 : or bl, al ; mov al, 1 ; ret
0x00000200003ae4c1 : or bl, al ; mov al, 4 ; ret
0x000002000063450f : or bl, al ; mov eax, 0x30 ; ret
0x00000200003f8267 : or bl, al ; mov eax, 0x8664 ; ret
0x00000200005319cc : or bl, al ; mov eax, 0xc000000d ; ret
0x000002000013f82e : or bl, al ; mov qword ptr [rcx], rax ; mov dword ptr [rcx + 6], eax ; ret
0x000002000013f843 : or bl, al ; mov qword ptr [rcx], rax ; mov qword ptr [rcx + 5], rax ; ret
0x00000200000bc7c7 : or bl, al ; or eax, 0xffffffff ; ret
0x00000200004b05d9 : or bl, al ; xor al, al ; add rsp, 8 ; ret
0x000002000011789b : or bl, al ; xor al, al ; ret
0x000002000002d329 : or bl, al ; xor eax, eax ; ret
0x000002000000f584 : or bl, bpl ; ret
0x00000200000f1612 : or bl, bpl ; ret 0xfe83
0x00000200001dd8d5 : or bl, byte ptr [rdx] ; add byte ptr [rax - 9], cl ; ror byte ptr [rax + 0x23], 1 ; ret 0x2348
0x0000020000116778 : or bl, ch ; cmc ; xor eax, eax ; ret
0x0000020000403f45 : or bl, ch ; in al, dx ; mov eax, 0xc0000058 ; ret
0x00000200001f8b36 : or bl, ch ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000021ed38 : or bl, ch ; or dword ptr [rcx - 0x75], eax ; cmp byte ptr [rbx], r13b ; ret
0x000002000000f585 : or bl, ch ; ret
0x00000200005babf7 : or bl, ch ; ret 0xdb33
0x00000200000f1613 : or bl, ch ; ret 0xfe83
0x00000200005611dd : or bpl, al ; lodsb al, byte ptr [rsi] ; pop rdx ; int1 ; call qword ptr [rax - 0x1a383d17]
0x00000200001cf7ed : or bpl, byte ptr [rax - 0x74f98bff] ; ret 0x149
0x00000200004eafba : or byte ptr [r10], dl ; ret
0x000002000042876a : or byte ptr [r11 + 0x17401f8], al ; ret
0x00000200005fd5aa : or byte ptr [r11 + 0x41890846], cl ; or al, 0x8b ; ret
0x00000200005c3ecf : or byte ptr [r11], bpl ; ret 0x8b44
0x00000200003f4de4 : or byte ptr [r11], cl ; ret 0x189
0x0000020000406c9e : or byte ptr [r11], r14b ; call rbx
0x0000020000525d45 : or byte ptr [r11], sil ; shr al, cl ; ret 0xd0b2
0x0000020000529aba : or byte ptr [r13 + 0x33], al ; ror byte ptr [rax - 0x75], 0xd6 ; call rax
0x000002000003be3d : or byte ptr [r13 + 0x3b], cl ; ret 0x850f
0x0000020000501fea : or byte ptr [r13 + 0x79840fc9], r8b ; ret 8
0x00000200001af6e6 : or byte ptr [r13 + 0x7ce80153], cl ; ret
0x0000020000439a90 : or byte ptr [r13 - 0x75], al ; ret 0x8948
0x000002000000a040 : or byte ptr [r13 - 0x75], r9b ; ret 0x8341
0x00000200006b5357 : or byte ptr [r14 + 4], sil ; mov qword ptr [rcx + 8], rax ; ret
0x00000200001f2761 : or byte ptr [r14 - 0x7b], spl ; ret 0x1975
0x000002000047ce42 : or byte ptr [r15 + r9 - 0x55], r8b ; or byte ptr [rax - 1], cl ; ret 0xceeb
0x00000200001bb286 : or byte ptr [r15 + rcx - 0x49], al ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4907
0x00000200003b4517 : or byte ptr [r15 - 0xa], r14b ; ret
0x0000020000039b72 : or byte ptr [r15], cl ; mov bl, 0x10 ; ret
0x000002000018b7c1 : or byte ptr [r15], cl ; test bh, bl ; ret
0x000002000020dd07 : or byte ptr [r15], cl ; xchg eax, ebx ; ret
0x000002000020dd29 : or byte ptr [r15], cl ; xchg eax, edi ; ret
0x000002000020dd18 : or byte ptr [r15], cl ; xchg eax, edx ; ret
0x000002000020dd3a : or byte ptr [r15], cl ; xchg eax, esi ; ret
0x00000200006c62bc : or byte ptr [r15], r9b ; xchg eax, esp ; ret
0x00000200001148fd : or byte ptr [r15], r9b ; xchg eax, esp ; ret 0x8844
0x0000020000062fd5 : or byte ptr [r8 + 0x23], cl ; ret
0x000002000010fd85 : or byte ptr [r8 + 0x23], cl ; ret 0xb49
0x00000200005af338 : or byte ptr [r8 + 0x23], r9b ; ret
0x00000200006241f9 : or byte ptr [r8 + 0x2b], cl ; ret 0x3b48
0x000002000041f547 : or byte ptr [r8 + 0x2b], cl ; ret 0x8548
0x00000200003c546d : or byte ptr [r8 + 0x2b], r9b ; ret
0x00000200004e3dd8 : or byte ptr [r8 + 0x3b], cl ; ret
0x00000200004230a5 : or byte ptr [r8 + 0x3b], cl ; ret 0x3f77
0x00000200001c3980 : or byte ptr [r8 + 0x3b], cl ; ret 0xec75
0x0000020000203256 : or byte ptr [r8 + 0x3b], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3983
0x0000020000114164 : or byte ptr [r8 + 0x3b], cl ; sal dword ptr [rbx + rcx + 0x48], 0x3b ; ret 0x974
0x00000200000b86b5 : or byte ptr [r8 + 0xb], cl ; ret 0x3b48
0x00000200000dd142 : or byte ptr [r8 + 0xb], cl ; ret 0x8949
0x00000200001f33ba : or byte ptr [r8 + 0xf], cl ; mov bl, 0x10 ; ret
0x0000020000146917 : or byte ptr [r8 + 0xf], cl ; ret
0x00000200000234bc : or byte ptr [r8 + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x000002000074fc5c : or byte ptr [r8 + 3], cl ; ret
0x000002000051b671 : or byte ptr [r8 + 3], cl ; ret 0x3b48
0x000002000041ea8f : or byte ptr [r8 + rax], al ; add byte ptr [rax], al ; ret
0x0000020000433da6 : or byte ptr [r8 + rax], r8b ; add byte ptr [rax], al ; call 0x20000059939
0x0000020000149102 : or byte ptr [r8 + rsi*8], spl ; ret
0x000002000007ce9d : or byte ptr [r8 - 0x3f], cl ; call 0x1ffc22b17b7
0x00000200001d075d : or byte ptr [r8 - 0x3f], cl ; call 0x1ffc2405077
0x00000200000ec1e2 : or byte ptr [r8 - 0x4a], al ; add dword ptr [rax - 0x75], ecx ; ret 0x4808
0x0000020000025a5e : or byte ptr [r8 - 0x74178aff], r13b ; ret
0x000002000010aea7 : or byte ptr [r8 - 0x75], cl ; call qword ptr [rbx]
0x00000200000a554c : or byte ptr [r8 - 0x75], cl ; fimul dword ptr [rax - 9] ; ret 0xfff
0x00000200003a2158 : or byte ptr [r8 - 0x75], cl ; or dword ptr [rax + 3], ecx ; ret 0x2b48
0x000002000062d127 : or byte ptr [r8 - 0x75], cl ; pop rbx ; and byte ptr [rax - 0x7f], cl ; ret
0x0000020000022cf6 : or byte ptr [r8 - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x000002000001c8b4 : or byte ptr [r8 - 0x75], cl ; ret
0x000002000003cc12 : or byte ptr [r8 - 0x75], cl ; ret 0x3308
0x00000200001f32a8 : or byte ptr [r8 - 0x75], cl ; ret 0xc148
0x00000200000df595 : or byte ptr [r8 - 0x75], cl ; ret 0xd148
0x00000200003eec01 : or byte ptr [r8 - 0x75], r9b ; push rdx ; or byte ptr [rcx - 0x75], al ; ret 0xf44
0x000002000073f0a4 : or byte ptr [r8 - 0x75], r9b ; ret
0x00000200000be274 : or byte ptr [r8 - 0x75], r9b ; ret 0x49f0
0x00000200001fa41b : or byte ptr [r8 - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000002000044aad3 : or byte ptr [r8 - 0x77], cl ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004704c2 : or byte ptr [r8 - 0x7b], cl ; leave ; je 0x20000470505 ; mov eax, r10d ; ret
0x0000020000574828 : or byte ptr [r8 - 0x7b], cl ; leave ; je 0x20000574801 ; jmp 0x200005747fc
0x00000200001f508c : or byte ptr [r8 - 0x7b], cl ; leave ; jne 0x200001f508e ; ret
0x00000200004d6a71 : or byte ptr [r8 - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x000002000008505a : or byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; stc ; ret 0xf
0x000002000042f93e : or byte ptr [r8 - 0x7d], cl ; ret
0x000002000040930c : or byte ptr [r8 - 0x7d], cl ; ret 0xe8d0
0x00000200000495fc : or byte ptr [r8 - 0x7d], r9b ; ret
0x00000200004e20de : or byte ptr [r8 - 1], r9b ; ret
0x00000200006c9379 : or byte ptr [r8 - 9], cl ; ret 0xfffc
0x0000020000020292 : or byte ptr [r8], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000049cc7c : or byte ptr [r9 + 0x23], cl ; ret
0x0000020000097962 : or byte ptr [r9 + 0x23], cl ; ret 0xb4d
0x000002000076cf4e : or byte ptr [r9 + 0x23], cl ; ret 0xba49
0x00000200005d964f : or byte ptr [r9 + 0x23], r9b ; ret
0x000002000016df52 : or byte ptr [r9 + 0x3b], cl ; sal byte ptr [rbp - 0x18], 0xe9 ; ret 0xf997
0x000002000002f622 : or byte ptr [r9 + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200000d7bc5 : or byte ptr [r9 + 0xb], cl ; ret
0x000002000007bb11 : or byte ptr [r9 + r9*4 + 0x5c], cl ; rcl dword ptr [rax], 1 ; ret
0x00000200001bc801 : or byte ptr [r9 + rcx*4 + 1], cl ; ret
0x0000020000453ad4 : or byte ptr [r9 - 0x42], r8b ; add byte ptr [rax], ah ; add sil, sil ; ret
0x0000020000526e19 : or byte ptr [r9 - 0x75], al ; ret
0x00000200003a1cac : or byte ptr [r9 - 0x75], cl ; ret 0xf748
0x0000020000009fd8 : or byte ptr [r9 - 0x75], r9b ; ret 0xc148
0x00000200006baaad : or byte ptr [r9 - 0x76], al ; ret 0xd8f6
0x0000020000215d52 : or byte ptr [r9 - 0x77], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x00000200000d3025 : or byte ptr [r9 - 0x77], cl ; jns 0x200000d3042 ; pop rdi ; ret
0x0000020000619bc7 : or byte ptr [r9 - 0x77], r9b ; sbb byte ptr [r9 - 1], al ; ret 0x8944
0x00000200000afbf3 : or byte ptr [r9 - 0x7b], r9b ; ret
0x00000200001e3ba1 : or byte ptr [r9 - 0x7d], cl ; call 0x1ffc40ab0b3
0x0000020000478a86 : or byte ptr [r9 - 0x7d], cl ; call 0x1ffc436ff98
0x000002000016c8e6 : or byte ptr [r9 - 0x7d], cl ; ret
0x000002000000ac5c : or byte ptr [r9], dil ; or al, 0x72 ; sbb dh, dh ; ret 0x7502
0x00000200000d5f85 : or byte ptr [rax + 0x1a], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000062fd6 : or byte ptr [rax + 0x23], cl ; ret
0x000002000010fd86 : or byte ptr [rax + 0x23], cl ; ret 0xb49
0x00000200000075a4 : or byte ptr [rax + 0x29], cl ; adc eax, 0x2f3c04 ; ret
0x00000200003c546e : or byte ptr [rax + 0x2b], cl ; ret
0x00000200006241fa : or byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x000002000041f548 : or byte ptr [rax + 0x2b], cl ; ret 0x8548
0x00000200004e4d6a : or byte ptr [rax + 0x2b], cl ; ret 0x9948
0x00000200005fe129 : or byte ptr [rax + 0x2b], cl ; ret 0xd148
0x0000020000224976 : or byte ptr [rax + 0x2b], cl ; ret 0xf075
0x0000020000224c1c : or byte ptr [rax + 0x2b], cl ; ret 0xf175
0x0000020000122b35 : or byte ptr [rax + 0x33], cl ; ret
0x00000200000db479 : or byte ptr [rax + 0x33], cl ; sub byte ptr [r8 + 0x23], r9b ; ret 0x3148
0x0000020000423d0b : or byte ptr [rax + 0x39], 9 ; jne 0x20000423d1c ; xor eax, eax ; ret
0x000002000013ef4f : or byte ptr [rax + 0x3b], cl ; enter 0x2275, -0x7d ; ret 0x83f8
0x000002000013d34f : or byte ptr [rax + 0x3b], cl ; enter 0x2375, -0x7d ; ret 0x83f8
0x00000200007321a3 : or byte ptr [rax + 0x3b], cl ; enter 0x2575, -0x7d ; ret
0x0000020000024cc2 : or byte ptr [rax + 0x3b], cl ; ret
0x00000200000b8a88 : or byte ptr [rax + 0x3b], cl ; ret 0x1374
0x00000200000402be : or byte ptr [rax + 0x3b], cl ; ret 0x174
0x000002000005493f : or byte ptr [rax + 0x3b], cl ; ret 0x2075
0x00000200004230a6 : or byte ptr [rax + 0x3b], cl ; ret 0x3f77
0x000002000008a954 : or byte ptr [rax + 0x3b], cl ; ret 0x4475
0x00000200001f3068 : or byte ptr [rax + 0x3b], cl ; ret 0x775
0x00000200001b6504 : or byte ptr [rax + 0x3b], cl ; ret 0x820f
0x000002000002ed0f : or byte ptr [rax + 0x3b], cl ; ret 0xa75
0x000002000005496f : or byte ptr [rax + 0x3b], cl ; ret 0xd074
0x00000200004390de : or byte ptr [rax + 0x3b], cl ; ret 0xe872
0x00000200002076b2 : or byte ptr [rax + 0x3b], cl ; ret 0xeb72
0x00000200001c3981 : or byte ptr [rax + 0x3b], cl ; ret 0xec75
0x00000200000b8a9b : or byte ptr [rax + 0x3b], cl ; ret 0xef75
0x00000200000f9866 : or byte ptr [rax + 0x3b], cl ; ret 0xf48
0x0000020000203257 : or byte ptr [rax + 0x3b], cl ; ror byte ptr [rax + 0xf], 1 ; ret 0x3983
0x0000020000114165 : or byte ptr [rax + 0x3b], cl ; sal dword ptr [rbx + rcx + 0x48], 0x3b ; ret 0x974
0x0000020000024cc1 : or byte ptr [rax + 0x3b], r9b ; ret
0x00000200002076b1 : or byte ptr [rax + 0x3b], r9b ; ret 0xeb72
0x00000200000f1859 : or byte ptr [rax + 0x40c64101], dh ; adc byte ptr [rax], al ; ret
0x00000200000f1e9a : or byte ptr [rax + 0x40c64101], dh ; adc byte ptr [rcx], al ; ret
0x00000200000f1858 : or byte ptr [rax + 0x40c64101], sil ; adc byte ptr [rax], al ; ret
0x00000200000f1e99 : or byte ptr [rax + 0x40c64101], sil ; adc byte ptr [rcx], al ; ret
0x00000200001e27c3 : or byte ptr [rax + 0x49], dl ; mov dword ptr [rcx], eax ; ret
0x00000200001e27c2 : or byte ptr [rax + 0x49], r10b ; mov dword ptr [rcx], eax ; ret
0x00000200005a5cf9 : or byte ptr [rax + 0x4c000000], 0x2b ; ret
0x00000200000f1634 : or byte ptr [rax + 0x63], cl ; ret 0x8b41
0x0000020000763e13 : or byte ptr [rax + 0x63], cl ; ret 0xff49
0x00000200000f0f3b : or byte ptr [rax + 0x69], cl ; ret
0x0000020000440342 : or byte ptr [rax + 0x69], cl ; ret 0x101
0x0000020000686304 : or byte ptr [rax + 0xa8830e9], al ; mov al, 1 ; ret
0x00000200000b86b6 : or byte ptr [rax + 0xb], cl ; ret 0x3b48
0x00000200001c806b : or byte ptr [rax + 0xb], cl ; ret 0x8948
0x0000020000062fde : or byte ptr [rax + 0xb], cl ; ret 0x8949
0x000002000010b1ab : or byte ptr [rax + 0xb], cl ; ror byte ptr [rax - 0x75], 1 ; ret 0xc148
0x00000200001f33bb : or byte ptr [rax + 0xf], cl ; mov bl, 0x10 ; ret
0x0000020000146918 : or byte ptr [rax + 0xf], cl ; ret
0x00000200000234bd : or byte ptr [rax + 0xf], cl ; ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x00000200000faaa9 : or byte ptr [rax + 1], bh ; ret
0x000002000074bdd2 : or byte ptr [rax + 1], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x00000200000faaa8 : or byte ptr [rax + 1], dil ; ret
0x00000200006bd7d5 : or byte ptr [rax + 3], 1 ; xor eax, eax ; ret
0x00000200000e950b : or byte ptr [rax + 3], cl ; ret
0x0000020000042dd0 : or byte ptr [rax + 3], cl ; ret 0x3b48
0x0000020000210292 : or byte ptr [rax + 3], cl ; ret 0x8d48
0x000002000062537a : or byte ptr [rax + rax], al ; add byte ptr [rax - 0x75], cl ; adc esi, esi ; ret 0xf3f
0x0000020000433da7 : or byte ptr [rax + rax], al ; add byte ptr [rax], al ; call 0x20000059938
0x000002000041ea90 : or byte ptr [rax + rax], al ; add byte ptr [rax], al ; ret
0x00000200003d1822 : or byte ptr [rax + rax], al ; add byte ptr [rcx - 1], al ; ret
0x000002000060eb62 : or byte ptr [rax + rax], dl ; add byte ptr [rax], al ; call 0x20000231ce8
0x000002000060eb61 : or byte ptr [rax + rax], dl ; add byte ptr [rax], al ; call 0x20000231ce9
0x000002000005ad88 : or byte ptr [rax + rbx - 0xa], dh ; ret 0x7504
0x000002000056aca5 : or byte ptr [rax + rcx*4 + 0x3e], al ; jmp 0x2000056acba
0x0000020000149103 : or byte ptr [rax + rsi*8], ah ; ret
0x00000200000df3ec : or byte ptr [rax - 0x2d], cl ; call 0x1ffc30fd47e
0x0000020000108c8a : or byte ptr [rax - 0x39], cl ; ret 0x3e00
0x00000200007475be : or byte ptr [rax - 0x39], cl ; ret 0x7400
0x0000020000087d23 : or byte ptr [rax - 0x3b7cb7ff], dh ; pop rbx ; ret
0x000002000007ce9e : or byte ptr [rax - 0x3f], cl ; call 0x1ffc22b17b6
0x00000200000dadc1 : or byte ptr [rax - 0x3f], cl ; call 0x1ffc230f5dc
0x00000200000dee6c : or byte ptr [rax - 0x3f], cl ; call 0x1ffc2313684
0x000002000012befc : or byte ptr [rax - 0x3f], cl ; call 0x1ffc2360717
0x00000200001d075e : or byte ptr [rax - 0x3f], cl ; call 0x1ffc2405076
0x00000200000f5e4d : or byte ptr [rax - 0x3f], cl ; call 0x1ffc392a664
0x00000200007625d8 : or byte ptr [rax - 0x3f], cl ; call 0x1ffc3996ef3
0x0000020000082bc4 : or byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200005f2e8b : or byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200000ec1e3 : or byte ptr [rax - 0x4a], al ; add dword ptr [rax - 0x75], ecx ; ret 0x4808
0x0000020000115cf7 : or byte ptr [rax - 0x68], 0x49 ; or eax, ecx ; or rax, rcx ; ret
0x0000020000155811 : or byte ptr [rax - 0x73], 0x1c ; ret 0x3c7
0x0000020000504362 : or byte ptr [rax - 0x73], 0x4d ; cmp al, ch ; je 0x20000504332 ; ret
0x0000020000218348 : or byte ptr [rax - 0x73], 0x4f ; and bh, bh ; ret
0x000002000040201d : or byte ptr [rax - 0x73], 0xc ; ret
0x000002000003f8be : or byte ptr [rax - 0x73], 4 ; ret 0x8bc3
0x00000200000ef874 : or byte ptr [rax - 0x73], cl ; add eax, 0x60c74 ; ret
0x00000200000ef8cb : or byte ptr [rax - 0x73], cl ; add eax, 0x6269d ; ret
0x00000200003e0b68 : or byte ptr [rax - 0x73], cl ; add eax, 0xfff172b0 ; ret
0x000002000049c405 : or byte ptr [rax - 0x73], cl ; pop rax ; mov byte ptr [rax - 0x75], cl ; ret
0x00000200004e771d : or byte ptr [rax - 0x73], cl ; pop rdx ; adc byte ptr [rax - 0x75], cl ; ret 0x8948
0x000002000009052e : or byte ptr [rax - 0x73], cl ; pop rsi ; dec dword ptr [rax - 0x75] ; ret
0x0000020000025a5f : or byte ptr [rax - 0x74178aff], ch ; ret
0x00000200000b86b2 : or byte ptr [rax - 0x75], 0x43 ; or byte ptr [rax + 0xb], cl ; ret 0x3b48
0x0000020000082bc0 : or byte ptr [rax - 0x75], 0x59 ; or byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200001a7799 : or byte ptr [rax - 0x75], 0x5c ; and al, 8 ; mov qword ptr [r8], r11 ; ret
0x0000020000735f75 : or byte ptr [rax - 0x75], 0xc2 ; jmp 0x20000735f80
0x00000200004286f4 : or byte ptr [rax - 0x75], 0xcf ; call 0x2000004eb07
0x00000200003b9428 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000106586 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], r9b ; ret 0x4408
0x0000020000632d52 : or byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0x15], 1 ; ret
0x00000200002179f3 : or byte ptr [rax - 0x75], cl ; adc spl, al ; ret 0x7d
0x00000200001fa384 : or byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0xeb18
0x00000200006c22d1 : or byte ptr [rax - 0x75], cl ; add dword ptr [rax + 0x3b], ecx ; ret 0xf176
0x000002000002d532 : or byte ptr [rax - 0x75], cl ; add dword ptr [rax - 0x7d], ecx ; loopne 0x2000002d53e ; ret
0x00000200001ae927 : or byte ptr [rax - 0x75], cl ; add eax, 0x123b49 ; call rax
0x0000020000228c2f : or byte ptr [rax - 0x75], cl ; add r15b, r15b ; ret 0x8b4c
0x000002000064f7fb : or byte ptr [rax - 0x75], cl ; and al, 0x28 ; mov byte ptr [rax], 0 ; ret
0x00000200001c6242 : or byte ptr [rax - 0x75], cl ; and al, 0x28 ; mov qword ptr [rcx], r8 ; ret
0x000002000010aea8 : or byte ptr [rax - 0x75], cl ; call qword ptr [rbx]
0x0000020000437455 : or byte ptr [rax - 0x75], cl ; enter -0x1d18, -0x65 ; ret
0x0000020000657511 : or byte ptr [rax - 0x75], cl ; fild word ptr [rcx - 0x75] ; ret 0x8d48
0x00000200000a554d : or byte ptr [rax - 0x75], cl ; fimul dword ptr [rax - 9] ; ret 0xfff
0x00000200005760d8 : or byte ptr [rax - 0x75], cl ; iretd ; call 0x200000c23c6
0x0000020000495a1f : or byte ptr [rax - 0x75], cl ; jl 0x20000495a4f ; jo 0x20000495a2c ; ret 0x8b48
0x00000200003a2159 : or byte ptr [rax - 0x75], cl ; or dword ptr [rax + 3], ecx ; ret 0x2b48
0x0000020000206710 : or byte ptr [rax - 0x75], cl ; or dword ptr [rbx + rdi - 0x3f], ecx ; jne 0x20000206709 ; ret
0x000002000062d128 : or byte ptr [rax - 0x75], cl ; pop rbx ; and byte ptr [rax - 0x7f], cl ; ret
0x000002000046b93d : or byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov eax, edx ; ret
0x0000020000022cf7 : or byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200003eec02 : or byte ptr [rax - 0x75], cl ; push rdx ; or byte ptr [rcx - 0x75], al ; ret 0xf44
0x00000200001fd90b : or byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x70 ; xor ecx, ecx ; call r9
0x000002000000a3c8 : or byte ptr [rax - 0x75], cl ; ret
0x00000200000a5019 : or byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000003cc13 : or byte ptr [rax - 0x75], cl ; ret 0x3308
0x00000200000a9ed1 : or byte ptr [rax - 0x75], cl ; ret 0x43c7
0x00000200000ace8c : or byte ptr [rax - 0x75], cl ; ret 0x47c7
0x00000200000e8c51 : or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200000be275 : or byte ptr [rax - 0x75], cl ; ret 0x49f0
0x00000200001f469a : or byte ptr [rax - 0x75], cl ; ret 0x8349
0x0000020000475885 : or byte ptr [rax - 0x75], cl ; ret 0x8548
0x000002000039a25f : or byte ptr [rax - 0x75], cl ; ret 0x854d
0x00000200003f5f45 : or byte ptr [rax - 0x75], cl ; ret 0x8948
0x00000200000d274c : or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200001c396f : or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200001f32a9 : or byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000cdc30 : or byte ptr [rax - 0x75], cl ; ret 0xc748
0x0000020000088714 : or byte ptr [rax - 0x75], cl ; ret 0xd148
0x000002000057a07a : or byte ptr [rax - 0x75], cl ; ret 0xe283
0x000002000061cbea : or byte ptr [rax - 0x75], cl ; retf ; call 0x200003e8e8a
0x00000200006c95d1 : or byte ptr [rax - 0x75], cl ; retf ; mov rsi, rax ; call qword ptr [rdi]
0x00000200006c0485 : or byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x0000020000043e42 : or byte ptr [rax - 0x75], cl ; ror dword ptr [rcx - 0x75], cl ; iretd ; call rax
0x000002000063ef21 : or byte ptr [rax - 0x75], cl ; sal dword ptr [rbx], cl ; leave ; call r8
0x00000200005a5e65 : or byte ptr [rax - 0x75], cl ; xchg eax, esp ; ret
0x0000020000657510 : or byte ptr [rax - 0x75], r9b ; fild word ptr [rcx - 0x75] ; ret 0x8d48
0x000002000000a3c7 : or byte ptr [rax - 0x75], r9b ; ret
0x0000020000415047 : or byte ptr [rax - 0x77], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001fa41c : or byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200000577b3 : or byte ptr [rax - 0x77], cl ; add dh, al ; sub al, byte ptr [rax] ; ret
0x000002000044aad4 : or byte ptr [rax - 0x77], cl ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200001603e3 : or byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000456df4 : or byte ptr [rax - 0x77], cl ; or byte ptr [r8 - 0x7d], cl ; ret
0x000002000039ce7a : or byte ptr [rax - 0x77], cl ; or dil, dil ; ret
0x00000200001fb617 : or byte ptr [rax - 0x77], cl ; or eax, 0xd56a9 ; ret
0x00000200006c5767 : or byte ptr [rax - 0x77], cl ; or eax, 0xffc12fc9 ; ret
0x000002000061e86f : or byte ptr [rax - 0x77], cl ; or eax, 0xffcc0521 ; jmp 0x2000061e845
0x000002000061e791 : or byte ptr [rax - 0x77], cl ; or eax, 0xffcc05ff ; jmp 0x2000061e767
0x00000200005c6eb7 : or byte ptr [rax - 0x77], cl ; or eax, 0xffd15709 ; ret
0x00000200004fa2c8 : or byte ptr [rax - 0x77], cl ; or eax, 0xffdfd9d8 ; ret
0x00000200004c922f : or byte ptr [rax - 0x77], cl ; or eax, 0xffe13361 ; ret
0x00000200003f0c6a : or byte ptr [rax - 0x77], cl ; pop rsi ; or byte ptr [rax - 0x7f], cl ; ret
0x00000200004420d9 : or byte ptr [rax - 0x77], cl ; pop rsp ; and al, 0x48 ; jmp 0x200004420aa
0x000002000004e50d : or byte ptr [rax - 0x77], cl ; push rbp ; ror byte ptr [rdi], 0xb6 ; ret 0x548
0x000002000011bab8 : or byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0x0000020000115c0a : or byte ptr [rax - 0x7b], cl ; div byte ptr [rdx - 0x75] ; ret
0x00000200001b29db : or byte ptr [rax - 0x7b], cl ; leave ; je 0x200001b29e9 ; call rcx
0x00000200001b29da : or byte ptr [rax - 0x7b], cl ; leave ; je 0x200001b29ea ; call rcx
0x00000200004704c3 : or byte ptr [rax - 0x7b], cl ; leave ; je 0x20000470504 ; mov eax, r10d ; ret
0x00000200004704c3 : or byte ptr [rax - 0x7b], cl ; leave ; je 0x20000470505 ; mov eax, r10d ; ret
0x0000020000574829 : or byte ptr [rax - 0x7b], cl ; leave ; je 0x20000574800 ; jmp 0x200005747fb
0x00000200001f508d : or byte ptr [rax - 0x7b], cl ; leave ; jne 0x200001f508d ; ret
0x00000200004d6a72 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x00000200000407ab : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi + rcx + 0x45], cl ; ret 0xf41
0x00000200003db8c6 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x44 ; ret 0xccc3
0x000002000008505b : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; stc ; ret 0xf
0x000002000003cd0e : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x1e], cl ; ret
0x00000200000234d2 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x00000200005c3504 : or byte ptr [rax - 0x7cd78bff], ch ; sal eax, -0x7d ; ret
0x000002000051bda7 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000200001f0f09 : or byte ptr [rax - 0x7d], cl ; cmp dword ptr [rax], eax ; setne al ; ret
0x00000200003fd219 : or byte ptr [rax - 0x7d], cl ; in al, dx ; sub byte ptr [rax - 0x75], cl ; ret 0xf44
0x0000020000681183 : or byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000200000495fd : or byte ptr [rax - 0x7d], cl ; ret
0x00000200003b706d : or byte ptr [rax - 0x7d], cl ; ret 0x4410
0x000002000006e7bb : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000009170f : or byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000002000003c742 : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000020e2d6 : or byte ptr [rax - 0x7d], cl ; ret 0x4818
0x000002000052784a : or byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000006c356 : or byte ptr [rax - 0x7d], cl ; ret 0x4908
0x00000200003b7775 : or byte ptr [rax - 0x7d], cl ; ret 0x4918
0x00000200005cdebe : or byte ptr [rax - 0x7d], cl ; ret 0x4920
0x000002000073fb9f : or byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x0000020000221185 : or byte ptr [rax - 0x7d], cl ; ret 0x4d08
0x0000020000421ddb : or byte ptr [rax - 0x7d], cl ; ret 0xe812
0x000002000040930d : or byte ptr [rax - 0x7d], cl ; ret 0xe8d0
0x0000020000166e8e : or byte ptr [rax - 0x7d], cl ; ret 0xe902
0x000002000006b689 : or byte ptr [rax - 0x7d], cl ; ret 0xe908
0x0000020000019ae2 : or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000002000002f680 : or byte ptr [rax - 0x7d], cl ; ret 0xf21c
0x0000020000527849 : or byte ptr [rax - 0x7d], r9b ; ret 0x4828
0x0000020000057a3f : or byte ptr [rax - 0x7f], cl ; ret
0x00000200005159b3 : or byte ptr [rax - 0x7f], cl ; ret 0x88
0x0000020000153ebd : or byte ptr [rax - 0xcfeab4], cl ; ret 0x5589
0x000002000044f3cb : or byte ptr [rax - 0xf38bcc], ch ; ret 0x3b41
0x00000200001d2ab0 : or byte ptr [rax - 1], cl ; ret
0x00000200000a735c : or byte ptr [rax - 1], cl ; ret 0x3b48
0x0000020000082460 : or byte ptr [rax - 1], cl ; ret 0x3b49
0x0000020000134f3a : or byte ptr [rax - 1], cl ; ret 0x77e9
0x000002000017c075 : or byte ptr [rax - 1], cl ; ret 0x7ae9
0x000002000013f8b0 : or byte ptr [rax - 1], cl ; ret 0x854d
0x0000020000166e11 : or byte ptr [rax - 1], cl ; ret 0x9ceb
0x000002000006e709 : or byte ptr [rax - 1], cl ; ret 0xaee9
0x000002000047ce47 : or byte ptr [rax - 1], cl ; ret 0xceeb
0x00000200003e9798 : or byte ptr [rax - 1], r9b ; ret
0x000002000002d0ab : or byte ptr [rax - 9], cl ; ret
0x00000200006c937a : or byte ptr [rax - 9], cl ; ret 0xfffc
0x0000020000231fa9 : or byte ptr [rax], 0 ; add byte ptr [rax + 3], cl ; ret 0x8b48
0x00000200001610c1 : or byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; sbb eax, ebp ; ret
0x00000200001dfda5 : or byte ptr [rax], 0 ; add byte ptr [rcx - 0x75], al ; ret
0x00000200003df744 : or byte ptr [rax], ah ; ret
0x00000200003abec9 : or byte ptr [rax], al ; add al, ch ; ret
0x00000200007302e3 : or byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200003b3ab2 : or byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x0000020000231faa : or byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8b48
0x00000200000de6b6 : or byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0xb948
0x0000020000491861 : or byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2548
0x0000020000158a6f : or byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200001610c2 : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; sbb eax, ebp ; ret
0x0000020000683b82 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003a2923 : or byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; inc dword ptr [r8] ; ret
0x0000020000129b10 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001fe58 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000047e80c : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000136028 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000000c148 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000002000046b3f0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x000002000048a8d0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x0000020000497aad : or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x200000bb21b
0x00000200001ae5dc : or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000014a8e6
0x000002000060cb1e : or byte ptr [rax], al ; add byte ptr [rax], al ; call 0x20000231ce7
0x0000020000134daf : or byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x20000134d6d
0x000002000010df2e : or byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [r8 + 0xc], ecx ; ret
0x00000200001063ac : or byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xc0000001 ; ret
0x00000200000539ef : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200001dfda6 : or byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x000002000042b3a4 : or byte ptr [rax], al ; add byte ptr [rsi + 0x33], ah ; sbb byte ptr [rsi + 0x23], r12b ; ret 0x3166
0x0000020000597438 : or byte ptr [rax], al ; add byte ptr [rsi + 0x3b], ah ; ret 0x574
0x00000200001a0d11 : or byte ptr [rax], al ; add byte ptr [rsi - 0x7b], ah ; ret
0x000002000005b1ee : or byte ptr [rax], al ; add dh, dh ; ret
0x000002000003af4e : or byte ptr [rax], al ; add rsp, 0x148 ; ret
0x0000020000020293 : or byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000152a2a : or byte ptr [rax], al ; add rsp, 0x28 ; pop rbp ; pop rbx ; ret
0x0000020000010a03 : or byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200001b2fdd : or byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001b2d57 : or byte ptr [rax], al ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000557653 : or byte ptr [rax], al ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000511cb7 : or byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000503432 : or byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x000002000065e8de : or byte ptr [rax], al ; call 0x2000005ab14
0x000002000051552e : or byte ptr [rax], al ; call 0x20000141ac5
0x00000200001b37f6 : or byte ptr [rax], al ; call 0x200001b3628
0x00000200000867d3 : or byte ptr [rax], al ; je 0x200000867e0 ; xor eax, eax ; ret
0x000002000041b3eb : or byte ptr [rax], al ; je 0x2000041b3f8 ; xor eax, eax ; ret
0x000002000003cedc : or byte ptr [rax], al ; jmp 0x2000003cea6
0x000002000005e5ef : or byte ptr [rax], al ; jmp 0x2000005e5db
0x000002000009a485 : or byte ptr [rax], al ; jne 0x2000009a492 ; xor eax, eax ; ret
0x0000020000418a16 : or byte ptr [rax], al ; jne 0x20000418a29 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003c29f9 : or byte ptr [rax], al ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003623c : or byte ptr [rax], al ; mov al, 1 ; add rsp, 0x28 ; ret
0x0000020000528073 : or byte ptr [rax], al ; mov dword ptr [r8 + 4], edx ; xor eax, eax ; ret
0x000002000050070a : or byte ptr [rax], al ; mov r8b, r10b ; jmp 0x200005006bf
0x00000200004fcbac : or byte ptr [rax], al ; mov rax, rdx ; ret
0x00000200005143e3 : or byte ptr [rax], al ; mov rcx, qword ptr [rbp - 0x21] ; call 0x20000140389
0x0000020000559274 : or byte ptr [rax], al ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000ff0a2 : or byte ptr [rax], al ; ret
0x00000200001adbdf : or byte ptr [rax], al ; sti ; add rsp, 0x28 ; ret
0x0000020000677a7e : or byte ptr [rax], al ; test rax, rax ; je 0x20000677a92 ; call rax
0x00000200001b33c0 : or byte ptr [rax], al ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000117d4c : or byte ptr [rax], al ; xor eax, eax ; ret
0x00000200005fd804 : or byte ptr [rax], bh ; ret
0x0000020000546027 : or byte ptr [rax], bl ; sub eax, edx ; ret
0x00000200000459b3 : or byte ptr [rax], cl ; add byte ptr [rax], al ; mov word ptr [rcx + 0x36], dx ; ret
0x0000020000407152 : or byte ptr [rax], cl ; shr al, 3 ; and al, 1 ; ret
0x000002000018129d : or byte ptr [rax], dh ; ret
0x0000020000632bae : or byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xff41
0x00000200005ed558 : or byte ptr [rax], dl ; ret
0x00000200005ed557 : or byte ptr [rax], r10b ; ret
0x0000020000546026 : or byte ptr [rax], r11b ; sub eax, edx ; ret
0x000002000018129c : or byte ptr [rax], r14b ; ret
0x0000020000511cb6 : or byte ptr [rax], r8b ; add rsp, 0x38 ; ret
0x0000020000407151 : or byte ptr [rax], r9b ; shr al, 3 ; and al, 1 ; ret
0x00000200003df743 : or byte ptr [rax], spl ; ret
0x0000020000404468 : or byte ptr [rbp + 0x15], dh ; test cl, 0xf8 ; jne 0x20000404479 ; ret
0x000002000022d031 : or byte ptr [rbp + 0x2b], cl ; ret
0x0000020000007cb5 : or byte ptr [rbp + 0x2b], cl ; ret 0x840f
0x000002000072d9f4 : or byte ptr [rbp + 0x2b], cl ; ret 0xcb75
0x00000200002273c2 : or byte ptr [rbp + 0x2b], cl ; ret 0xe975
0x0000020000227a64 : or byte ptr [rbp + 0x2b], cl ; ret 0xea75
0x000002000022e921 : or byte ptr [rbp + 0x2b], cl ; ret 0xf175
0x00000200004151eb : or byte ptr [rbp + 0x33], al ; dec dword ptr [rax - 0x75] ; ret
0x000002000040f638 : or byte ptr [rbp + 0x33], al ; rol byte ptr [rbp - 0x75], cl ; ret 0x8d45
0x0000020000529abb : or byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], 0xd6 ; call rax
0x0000020000463884 : or byte ptr [rbp + 0x39], al ; adc byte ptr [rbx + rdi - 1], sil ; ret 0x8348
0x000002000062faf9 : or byte ptr [rbp + 0x39], al ; sbb dword ptr [rdi - 0x4e], esi ; ret
0x00000200006337f3 : or byte ptr [rbp + 0x3b], al ; ret
0x00000200000df714 : or byte ptr [rbp + 0x3b], al ; sal dword ptr [rdx - 0x20], cl ; xor eax, eax ; ret
0x00000200001f7d83 : or byte ptr [rbp + 0x3b], cl ; ret
0x00000200001f32f1 : or byte ptr [rbp + 0x3b], cl ; ret 0x1074
0x000002000000aa4d : or byte ptr [rbp + 0x3b], cl ; ret 0x2175
0x000002000008d46a : or byte ptr [rbp + 0x3b], cl ; ret 0x2877
0x000002000003be3e : or byte ptr [rbp + 0x3b], cl ; ret 0x850f
0x000002000008d343 : or byte ptr [rbp + 0x3b], cl ; ret 0x870f
0x00000200001f3301 : or byte ptr [rbp + 0x3b], cl ; ret 0xf275
0x0000020000074142 : or byte ptr [rbp + 0x410378c0], al ; mov dword ptr [rdx], ecx ; ret
0x0000020000501feb : or byte ptr [rbp + 0x79840fc9], al ; ret 8
0x00000200001af6e7 : or byte ptr [rbp + 0x7ce80153], cl ; ret
0x00000200003d81a3 : or byte ptr [rbp + 0x88d04], cl ; add byte ptr [rax], al ; ret
0x00000200001bff21 : or byte ptr [rbp + 0xb], dh ; mov eax, dword ptr [rip + 0x1be122] ; ret
0x000002000059c7a7 : or byte ptr [rbp + 0xe], dh ; mov edx, r14d ; mov rcx, rbx ; call rax
0x000002000004d80f : or byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc149
0x000002000007e98f : or byte ptr [rbp + 1], dh ; ret
0x0000020000732218 : or byte ptr [rbp + 3], al ; ret
0x000002000004c257 : or byte ptr [rbp + 3], dh ; mov al, 1 ; ret
0x000002000002d3cc : or byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x000002000003c25a : or byte ptr [rbp + 4], dh ; mov rax, rdx ; ret
0x00000200004609b0 : or byte ptr [rbp + 5], dh ; ret
0x000002000004c231 : or byte ptr [rbp + 6], dh ; mov al, 1 ; ret
0x000002000007f59c : or byte ptr [rbp + 7], dh ; movzx eax, al ; and eax, 7 ; ret
0x0000020000051a47 : or byte ptr [rbp + rax + 0x48], dh ; lea eax, dword ptr [rdx - 0x20] ; ret
0x00000200001c9b81 : or byte ptr [rbp + rax - 0x18], dh ; sti ; lodsb al, byte ptr [rsi] ; add bh, bh ; ret
0x000002000062e164 : or byte ptr [rbp + rax*8 - 1], dh ; ret 0x8348
0x00000200000daf7d : or byte ptr [rbp + rcx + 0x41], dh ; mov eax, eax ; ret
0x00000200001ac0eb : or byte ptr [rbp + rcx - 1], dh ; ret 0x8348
0x00000200001ac0ea : or byte ptr [rbp + rcx - 1], sil ; ret 0x8348
0x00000200004c2d34 : or byte ptr [rbp + rcx*4 + 0x40], cl ; loopne 0x200004c2d8b ; mov eax, eax ; ret
0x0000020000465310 : or byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x58 ; call rax
0x000002000009028b : or byte ptr [rbp + rcx*4 + 0x5b], cl ; dec dword ptr [rcx - 0x75] ; ret
0x000002000020caae : or byte ptr [rbp - 0x1b], dh ; mov al, 1 ; ret
0x00000200001da386 : or byte ptr [rbp - 0x2a], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000075d61e : or byte ptr [rbp - 0x357aeff4], 0xf ; test byte ptr [rdi], cl ; ret
0x000002000075d46f : or byte ptr [rbp - 0x357aeff4], 0xf ; test ch, ah ; ret
0x00000200005eceaa : or byte ptr [rbp - 0x3e6bf02e], al ; mov eax, ecx ; ret
0x0000020000486939 : or byte ptr [rbp - 0x73], cl ; inc byte ptr [r13 + 3] ; ret 0xf41
0x000002000023041e : or byte ptr [rbp - 0x75], al ; adc byte ptr [rcx - 0x75], cl ; ret
0x0000020000650c75 : or byte ptr [rbp - 0x75], al ; add al, 0x8b ; ret 0xe083
0x00000200000c8d20 : or byte ptr [rbp - 0x75], al ; ret
0x0000020000525f79 : or byte ptr [rbp - 0x75], al ; ret 0x4166
0x0000020000439a91 : or byte ptr [rbp - 0x75], al ; ret 0x8948
0x000002000007ae28 : or byte ptr [rbp - 0x75], al ; ret 0xc149
0x0000020000015c1f : or byte ptr [rbp - 0x75], cl ; add ebx, ebp ; ret
0x000002000016663b : or byte ptr [rbp - 0x75], cl ; ret
0x000002000000a041 : or byte ptr [rbp - 0x75], cl ; ret 0x8341
0x000002000007ad39 : or byte ptr [rbp - 0x75], cl ; ret 0xc148
0x0000020000525f78 : or byte ptr [rbp - 0x75], r8b ; ret 0x4166
0x0000020000072e4c : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp + 4], 0x48 ; mov eax, edx ; ret
0x00000200001dad82 : or byte ptr [rbp - 0x7b], cl ; sal byte ptr [rbp - 0x3c], 0x49 ; mov eax, eax ; ret
0x0000020000462a53 : or byte ptr [rbp - 0x7c], al ; sal byte ptr [rbp + rdx*2 + 0x49], 0x3b ; ret 0x2973
0x000002000040749c : or byte ptr [rbp - 0x7f], dh ; xor al, al ; jmp 0x2000040746c
0x000002000006a026 : or byte ptr [rbp - 0xd], dh ; xor eax, eax ; ret
0x00000200006910ec : or byte ptr [rbx + 0x10048dc8], 0x85 ; ret 0x1175
0x0000020000690bb9 : or byte ptr [rbx + 0x10048dc8], 0x85 ; ret 0x975
0x00000200006ca955 : or byte ptr [rbx + 0x136b70d], al ; add byte ptr [rax], dl ; ret
0x000002000042876b : or byte ptr [rbx + 0x17401f8], al ; ret
0x0000020000059947 : or byte ptr [rbx + 0x174fff8], al ; ret
0x000002000004de1c : or byte ptr [rbx + 0x1a], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002bb62 : or byte ptr [rbx + 0x22], 7 ; xor edi, edi ; jmp 0x2000002bb34
0x000002000073e0f9 : or byte ptr [rbx + 0x2b49f8c3], al ; ret
0x0000020000733c28 : or byte ptr [rbx + 0x2b49f8c3], al ; ret 0xeb75
0x0000020000739578 : or byte ptr [rbx + 0x2b49f8c7], al ; ret
0x0000020000228530 : or byte ptr [rbx + 0x2b4df8c2], al ; ret
0x000002000073bff4 : or byte ptr [rbx + 0x2b4df8c3], al ; ret 0xeb75
0x00000200007390d5 : or byte ptr [rbx + 0x2b4df8c7], al ; ret
0x0000020000497c75 : or byte ptr [rbx + 0x2bc6ffc7], cl ; ret
0x0000020000030999 : or byte ptr [rbx + 0x41000461], al ; mov al, al ; ret
0x00000200005fd5ab : or byte ptr [rbx + 0x41890846], cl ; or al, 0x8b ; ret
0x000002000058449f : or byte ptr [rbx + 0x44d80bd9], 0x8b ; ret
0x000002000048ebc9 : or byte ptr [rbx + 0x5c8b48c3], cl ; and al, 8 ; ret
0x000002000042a667 : or byte ptr [rbx + 0x62], 0x40 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000005477c : or byte ptr [rbx + 0x70], 0x20 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004cf211 : or byte ptr [rbx + 0x7c8b48c1], cl ; and al, 0x10 ; ret
0x00000200005863fc : or byte ptr [rbx + 0xf481345], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x000002000069ad7b : or byte ptr [rbx + 4], dh ; or eax, 0xffffffff ; ret
0x000002000049a39c : or byte ptr [rbx + 5], dh ; mov edx, r8d ; jmp 0x2000049a3d6
0x0000020000064344 : or byte ptr [rbx + 7], dh ; mov eax, edx ; add rsp, 0x38 ; ret
0x00000200000c1a33 : or byte ptr [rbx + 7], dh ; mov eax, r8d ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000020000422beb : or byte ptr [rbx + 7], dh ; xor eax, eax ; add rsp, 0x38 ; ret
0x0000020000075cef : or byte ptr [rbx + rcx - 8], 0xf6 ; ret
0x0000020000203e1b : or byte ptr [rbx + rcx*4 + 0x47], al ; adc byte ptr [rax - 0x75], cl ; ret 0x2349
0x000002000078368d : or byte ptr [rbx + rcx*4 + 0x58], cl ; and byte ptr [rcx - 0x75], cl ; ret
0x00000200001acdd0 : or byte ptr [rbx + rcx*4 + 0xd], 0xa0 ; push rsi ; adc al, byte ptr [rax] ; call r9
0x00000200001d7316 : or byte ptr [rbx + rcx*4 - 0xd], cl ; mov r8d, r10d ; jmp 0x200001d732f
0x0000020000676158 : or byte ptr [rbx + rdi - 0x36], al ; jb 0x20000676153 ; ret
0x000002000048c3b2 : or byte ptr [rbx + rdi - 0x36], al ; jne 0x2000048c3c3 ; mov al, 1 ; ret
0x00000200001d9480 : or byte ptr [rbx + rdi - 0x3f], cl ; ja 0x200001d9491 ; xor eax, eax ; ret
0x0000020000740d9b : or byte ptr [rbx + rdi - 0x3f], cl ; jae 0x20000740dae ; or eax, 0xffffffff ; ret
0x0000020000686c2b : or byte ptr [rbx + rdx - 1], dh ; ret 0x8349
0x0000020000762c9e : or byte ptr [rbx - 0x2cb7c01f], al ; ret 0x8948
0x0000020000607f15 : or byte ptr [rbx - 0x2dccf7c4], cl ; call 0x20000231019
0x00000200006088da : or byte ptr [rbx - 0x2dccf7cc], cl ; call 0x20000231019
0x00000200001bb2e2 : or byte ptr [rbx - 0x3b7cb73d], 0x20 ; pop rbx ; ret
0x000002000041e69a : or byte ptr [rbx - 0x3b7cb73d], cl ; push rax ; pop rbx ; ret
0x000002000021e74c : or byte ptr [rbx - 0x74b3d7a6], cl ; ret 0x8b4c
0x00000200006c8e85 : or byte ptr [rbx - 0x7cb7ebbe], cl ; ret 0x4120
0x0000020000422835 : or byte ptr [rbx - 0x914d411], cl ; ret 0xf20
0x0000020000454b09 : or byte ptr [rbx - 0xb6d3b6], cl ; ret 0xb70f
0x000002000046b066 : or byte ptr [rbx], ah ; ret 0xc83b
0x00000200007443a4 : or byte ptr [rbx], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004c1c02 : or byte ptr [rbx], al ; add byte ptr [rax], al ; call 0x200000e7887
0x00000200004bcd2e : or byte ptr [rbx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003620f : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000002000012da32 : or byte ptr [rbx], al ; or al, 0x8b ; ret
0x000002000012d994 : or byte ptr [rbx], al ; or byte ptr [rcx - 0x75], al ; ret
0x0000020000162fa6 : or byte ptr [rbx], al ; ret
0x0000020000201211 : or byte ptr [rbx], al ; ret 0x3075
0x00000200000ff1a0 : or byte ptr [rbx], al ; ret 0x6675
0x0000020000200f98 : or byte ptr [rbx], al ; ret 0x850f
0x000002000012df0d : or byte ptr [rbx], al ; sub al, 0x8b ; ret
0x000002000012de6d : or byte ptr [rbx], al ; sub byte ptr [rcx - 0x75], al ; ret
0x00000200003f434b : or byte ptr [rbx], bh ; ret 0x1c75
0x00000200000bff34 : or byte ptr [rbx], bh ; ret 0x830f
0x00000200005c901f : or byte ptr [rbx], bh ; ret 0x850f
0x0000020000130438 : or byte ptr [rbx], bh ; ret 0xe872
0x00000200005e89d1 : or byte ptr [rbx], bh ; ret 0xed72
0x000002000061d016 : or byte ptr [rbx], bh ; ret 0xf172
0x0000020000501674 : or byte ptr [rbx], bl ; ret
0x000002000072d8c2 : or byte ptr [rbx], ch ; fadd dword ptr [rcx - 0x75] ; ret 0xe7f7
0x00000200007803ea : or byte ptr [rbx], ch ; ret
0x00000200005c3ed0 : or byte ptr [rbx], ch ; ret 0x8b44
0x00000200003f4370 : or byte ptr [rbx], ch ; ret 0x8b48
0x000002000041ee67 : or byte ptr [rbx], cl ; add byte ptr [rax], al ; ret
0x00000200003f4de5 : or byte ptr [rbx], cl ; ret 0x189
0x000002000011c159 : or byte ptr [rbx], cl ; ret 0x3345
0x0000020000014071 : or byte ptr [rbx], cl ; ret 0x8189
0x000002000022fd13 : or byte ptr [rbx], cl ; ret 0x8789
0x00000200001355a0 : or byte ptr [rbx], cl ; ror dword ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x0000020000406c9f : or byte ptr [rbx], dh ; call rbx
0x00000200000fabd4 : or byte ptr [rbx], dh ; fdiv st(6) ; ret
0x0000020000604c81 : or byte ptr [rbx], dh ; fisttp dword ptr [rcx - 0x75] ; jmp 0x2004922d7db
0x000002000077f313 : or byte ptr [rbx], dh ; ret 0x25
0x00000200003b4a1f : or byte ptr [rbx], dh ; ret 0x8941
0x0000020000029d2a : or byte ptr [rbx], dh ; rol byte ptr [rbp + 0x33], cl ; shr al, 0x1b ; ret 9
0x000002000002bf7f : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x0000020000501479 : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], 0x7c ; and al, 8 ; ret
0x000002000041eef2 : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000041ef5d ; ret
0x0000020000427edd : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x00000200000bd88e : or byte ptr [rbx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; ret
0x000002000003cc18 : or byte ptr [rbx], dh ; ror byte ptr [rcx - 0x77], 9 ; ret
0x0000020000769228 : or byte ptr [rbx], dh ; shr al, cl ; mov esp, 0x3ff9cc9 ; ret
0x0000020000525d46 : or byte ptr [rbx], dh ; shr al, cl ; ret 0xd0b2
0x000002000046b065 : or byte ptr [rbx], r12b ; ret 0xc83b
0x0000020000029d29 : or byte ptr [rbx], sil ; rol byte ptr [rbp + 0x33], cl ; shr al, 0x1b ; ret 9
0x00000200000d830d : or byte ptr [rcx + 0x2232f415], cl ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x0000020000439abe : or byte ptr [rcx + 0x23], al ; ret 0x7fa8
0x000002000004e365 : or byte ptr [rcx + 0x23], cl ; ret
0x000002000049ca43 : or byte ptr [rcx + 0x23], cl ; ret 0x3b4c
0x0000020000097963 : or byte ptr [rcx + 0x23], cl ; ret 0xb4d
0x000002000076cf4f : or byte ptr [rcx + 0x23], cl ; ret 0xba49
0x000002000004e364 : or byte ptr [rcx + 0x23], r9b ; ret
0x0000020000028e4a : or byte ptr [rcx + 0x2b], al ; ret
0x0000020000225775 : or byte ptr [rcx + 0x2b], cl ; ret
0x0000020000737c7a : or byte ptr [rcx + 0x2b], cl ; ret 0xee75
0x0000020000641387 : or byte ptr [rcx + 0x2b], cl ; ror byte ptr [rax - 0x77], 0x41 ; ret
0x0000020000028e49 : or byte ptr [rcx + 0x2b], r8b ; ret
0x00000200000ad118 : or byte ptr [rcx + 0x31], cl ; add dword ptr [rdx - 0x77], ecx ; push rsp ; ret
0x0000020000134fe0 : or byte ptr [rcx + 0x33], cl ; ret 0x8549
0x00000200005ab60c : or byte ptr [rcx + 0x39], al ; or ch, cl ; ret 0xfff0
0x00000200006198b5 : or byte ptr [rcx + 0x3b], al ; adc byte ptr [rdx - 0x27], dh ; xor eax, eax ; ret
0x000002000049b181 : or byte ptr [rcx + 0x3b], al ; ret 0x3977
0x000002000049b365 : or byte ptr [rcx + 0x3b], al ; ret 0x870f
0x0000020000065b85 : or byte ptr [rcx + 0x3b], al ; ret 0x8a41
0x000002000068981a : or byte ptr [rcx + 0x3b], al ; sal byte ptr [rdx + 4], cl ; mov dword ptr [r8], edx ; ret
0x000002000006cd39 : or byte ptr [rcx + 0x3b], cl ; adc byte ptr [rbx + 3], dh ; mov al, 1 ; ret
0x0000020000161f4b : or byte ptr [rcx + 0x3b], cl ; ret 0x850f
0x000002000016df53 : or byte ptr [rcx + 0x3b], cl ; sal byte ptr [rbp - 0x18], 0xe9 ; ret 0xf997
0x00000200006796d0 : or byte ptr [rcx + 0x3b], cl ; sal byte ptr [rdx + 0x2a], 0xff ; ret 0xfa83
0x00000200006786ac : or byte ptr [rcx + 0x3b], cl ; sal byte ptr [rdx + 0x36], 0xff ; ret 0xfa83
0x0000020000399e9a : or byte ptr [rcx + 0x3b], cl ; sal byte ptr [rsi - 0x10], 1 ; ret
0x0000020000524fc1 : or byte ptr [rcx + 0x43890c43], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000002f623 : or byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x000002000067d3ae : or byte ptr [rcx + 0x63487f7d], cl ; ret 0x8348
0x00000200000d7bc6 : or byte ptr [rcx + 0xb], cl ; ret
0x00000200006429dc : or byte ptr [rcx + 0xf], al ; mov bh, 0xc1 ; add eax, 0x20 ; ret
0x00000200006421af : or byte ptr [rcx + 0xf], al ; mov bh, 0xc1 ; ret
0x000002000016fb96 : or byte ptr [rcx + 0xf], al ; mov dh, 0x87 ; ret
0x000002000001915d : or byte ptr [rcx + 0xf], cl ; stosd dword ptr [rdi], eax ; ret
0x0000020000107a88 : or byte ptr [rcx + 0xfffe1], al ; add byte ptr [rax - 0x7f], cl ; ret 0xfff
0x000002000073e1b7 : or byte ptr [rcx + 3], al ; fimul dword ptr [rcx + 0x2b] ; ret
0x000002000006a235 : or byte ptr [rcx + 3], al ; ret
0x000002000007b70d : or byte ptr [rcx + 3], al ; ret 0xc141
0x0000020000642eb0 : or byte ptr [rcx + 3], cl ; enter -0x74b4, -0x3d ; call 0x2000014f189
0x0000020000512f63 : or byte ptr [rcx + 3], cl ; leave ; call 0x2000014f186
0x0000020000735aa7 : or byte ptr [rcx + 3], cl ; ret
0x00000200000803a2 : or byte ptr [rcx + 3], cl ; ret 0x3d48
0x000002000003c5a7 : or byte ptr [rcx + 3], cl ; ret 0x8948
0x00000200004390c3 : or byte ptr [rcx + 3], cl ; ror byte ptr [rax + 0x3b], cl ; ret 0x1873
0x00000200000203cb : or byte ptr [rcx + 9], 1 ; mov byte ptr [rcx + 8], al ; ret
0x00000200000203f5 : or byte ptr [rcx + 9], 4 ; ret
0x00000200000660cb : or byte ptr [rcx + rax + 8], al ; add rsp, 0x28 ; ret
0x0000020000015eef : or byte ptr [rcx + rcx + 0x4c], cl ; ret
0x000002000005e4ab : or byte ptr [rcx + rcx*4 + 0x12], cl ; mov rax, r8 ; ret
0x000002000006ecfa : or byte ptr [rcx + rcx*4 + 0x59], al ; adc byte ptr [rcx - 0x75], cl ; ret
0x000002000007bb12 : or byte ptr [rcx + rcx*4 + 0x5c], cl ; rcl dword ptr [rax], 1 ; ret
0x0000020000050392 : or byte ptr [rcx + rcx*4 + 1], al ; test rdx, rdx ; jne 0x200000503a5 ; ret
0x00000200001bc802 : or byte ptr [rcx + rcx*4 + 1], cl ; ret
0x000002000010cbb1 : or byte ptr [rcx + rcx*4 + 9], cl ; mov rax, r10 ; ret
0x000002000006b2ce : or byte ptr [rcx + rcx*4 - 0x73], cl ; cwde ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200003ee025 : or byte ptr [rcx - 0x2d], al ; leave ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200003edd81 : or byte ptr [rcx - 0x2d], al ; leave ; sub r10d, r9d ; mov eax, r10d ; ret
0x00000200003edcc5 : or byte ptr [rcx - 0x2d], al ; leave ; xor r10d, r9d ; mov eax, r10d ; ret
0x0000020000453ad5 : or byte ptr [rcx - 0x42], al ; add byte ptr [rax], ah ; add sil, sil ; ret
0x000002000018a165 : or byte ptr [rcx - 0x74b7000f], cl ; ret 0xb948
0x000002000003bf2f : or byte ptr [rcx - 0x74b7e7bf], cl ; ret 0xc148
0x000002000019f59e : or byte ptr [rcx - 0x75], al ; adc byte ptr [r9 + 0x23], r8b ; ret
0x000002000017c5d3 : or byte ptr [rcx - 0x75], al ; enter -0xb8, -0x3e ; jmp 0x2000017c584
0x000002000072b3f7 : or byte ptr [rcx - 0x75], al ; hlt ; mov rax, rdx ; jmp 0x2000072b40b
0x0000020000618aa1 : or byte ptr [rcx - 0x75], al ; or ch, al ; ret 0xba70
0x000002000003e2c2 : or byte ptr [rcx - 0x75], al ; ret
0x000002000074ed0f : or byte ptr [rcx - 0x75], al ; ret 0x349
0x00000200000dd6a2 : or byte ptr [rcx - 0x75], al ; ret 0x3b49
0x0000020000117dbb : or byte ptr [rcx - 0x75], al ; ret 0x44c3
0x000002000061809f : or byte ptr [rcx - 0x75], al ; ret 0x4566
0x000002000010f05f : or byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000050eb1e : or byte ptr [rcx - 0x75], al ; ret 0xccc3
0x00000200003eec06 : or byte ptr [rcx - 0x75], al ; ret 0xf44
0x00000200000ff032 : or byte ptr [rcx - 0x75], al ; ret 0xff48
0x00000200000c1a55 : or byte ptr [rcx - 0x75], al ; rol byte ptr [rcx + rcx*4 + 0xc], 0x81 ; ret
0x000002000002016a : or byte ptr [rcx - 0x75], al ; ror dword ptr [rax - 0x75], 0x7c ; and al, 0x10 ; ret
0x000002000060ed4b : or byte ptr [rcx - 0x75], al ; salc ; call 0x20000231017
0x000002000049657d : or byte ptr [rcx - 0x75], al ; sub al, 0x4c ; lea ecx, dword ptr [rdx + rax*8] ; jmp 0x20000496546
0x00000200001f77e1 : or byte ptr [rcx - 0x75], cl ; adc dh, dh ; ret 0x7501
0x00000200001a8828 : or byte ptr [rcx - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret 0x1172
0x0000020000126bb7 : or byte ptr [rcx - 0x75], cl ; ret
0x00000200003f2a9a : or byte ptr [rcx - 0x75], cl ; ret 0x2b49
0x000002000074dde1 : or byte ptr [rcx - 0x75], cl ; ret 0x41c3
0x000002000076284a : or byte ptr [rcx - 0x75], cl ; ret 0x8948
0x000002000067e228 : or byte ptr [rcx - 0x75], cl ; ret 0x8b48
0x000002000007ad32 : or byte ptr [rcx - 0x75], cl ; ret 0x8b4d
0x0000020000009fd9 : or byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200003a1cad : or byte ptr [rcx - 0x75], cl ; ret 0xf748
0x0000020000167e7f : or byte ptr [rcx - 0x75], cl ; ror dword ptr [rax - 0x75], 0x7c ; and al, 0x10 ; ret
0x00000200006816dd : or byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 + 3], cl ; ret 0x33c3
0x00000200001f0ab6 : or byte ptr [rcx - 0x75], cl ; xor byte ptr [rax], 4 ; add byte ptr [rax], al ; ret
0x000002000019f59d : or byte ptr [rcx - 0x75], r8b ; adc byte ptr [r9 + 0x23], r8b ; ret
0x00000200001ef22c : or byte ptr [rcx - 0x76], al ; ret
0x00000200001a7c76 : or byte ptr [rcx - 0x76], al ; ret 0xccc3
0x00000200006baaae : or byte ptr [rcx - 0x76], al ; ret 0xd8f6
0x000002000003b4a5 : or byte ptr [rcx - 0x76], al ; ror byte ptr [rax - 0x75], 0x7c ; and al, 0x10 ; ret
0x0000020000450e95 : or byte ptr [rcx - 0x77], al ; add al, byte ptr [rcx - 0x75] ; ret
0x0000020000215d53 : or byte ptr [rcx - 0x77], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4928
0x00000200004192e7 : or byte ptr [rcx - 0x77], al ; add dword ptr [rax + 1], edi ; ret
0x000002000049ea26 : or byte ptr [rcx - 0x77], al ; or al, 0x83 ; ret 0x3bf0
0x00000200001cf56b : or byte ptr [rcx - 0x77], cl ; add edi, edi ; ret 0xb848
0x00000200000d3026 : or byte ptr [rcx - 0x77], cl ; jns 0x200000d3041 ; pop rdi ; ret
0x0000020000515a71 : or byte ptr [rcx - 0x77], cl ; or byte ptr [r9 - 0x7d], cl ; ret
0x00000200005166fc : or byte ptr [rcx - 0x77], cl ; or byte ptr [rcx - 0x7d], cl ; ret 0x4518
0x0000020000619bc8 : or byte ptr [rcx - 0x77], cl ; sbb byte ptr [r9 - 1], al ; ret 0x8944
0x00000200000afbf4 : or byte ptr [rcx - 0x7b], cl ; ret
0x000002000022465b : or byte ptr [rcx - 0x7c], al ; ret
0x00000200001f2f4c : or byte ptr [rcx - 0x7cb7fff3], bh ; ret
0x000002000022a0bc : or byte ptr [rcx - 0x7d], al ; ret
0x000002000051227d : or byte ptr [rcx - 0x7d], al ; ret 0x48f8
0x000002000022a569 : or byte ptr [rcx - 0x7d], al ; ret 0x4cf8
0x00000200001bebed : or byte ptr [rcx - 0x7d], al ; ret 0x75ff
0x000002000012356d : or byte ptr [rcx - 0x7d], al ; sar bh, 0x75 ; xlatb ; ret
0x000002000047045e : or byte ptr [rcx - 0x7d], al ; stc ; add dh, byte ptr [rdx - 0x25] ; mov al, dl ; ret
0x000002000012858f : or byte ptr [rcx - 0x7d], al ; stc ; add dh, byte ptr [rdx - 0x3e] ; jmp 0x2000012853c
0x00000200001e3ba2 : or byte ptr [rcx - 0x7d], cl ; call 0x1ffc40ab0b2
0x0000020000478a87 : or byte ptr [rcx - 0x7d], cl ; call 0x1ffc436ff97
0x0000020000007ce9 : or byte ptr [rcx - 0x7d], cl ; jmp 0x1ffc3eaf1f9
0x0000020000115a98 : or byte ptr [rcx - 0x7d], cl ; rcl byte ptr [rax], 0xff ; ret
0x00000200000306bb : or byte ptr [rcx - 0x7d], cl ; ret
0x0000020000521cdd : or byte ptr [rcx - 0x7d], cl ; ret 0x4418
0x0000020000516700 : or byte ptr [rcx - 0x7d], cl ; ret 0x4518
0x000002000076689b : or byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x000002000013e570 : or byte ptr [rcx - 0x7d], cl ; ret 0x4808
0x000002000022c3dd : or byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000020000521b85 : or byte ptr [rcx - 0x7d], cl ; ret 0x4918
0x000002000073de9d : or byte ptr [rcx - 0x7d], cl ; ret 0x4d08
0x00000200001f8b32 : or byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax], 0xeb ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200002034cc : or byte ptr [rcx - 0xa], al ; ret 0x7501
0x00000200000437a8 : or byte ptr [rcx - 1], al ; ret
0x00000200003c8bd2 : or byte ptr [rcx - 1], al ; ret 0x3b44
0x0000020000629fb9 : or byte ptr [rcx - 1], al ; ret 0x3b45
0x0000020000202646 : or byte ptr [rcx - 1], al ; ret 0x5e9
0x00000200004ef94a : or byte ptr [rcx - 1], al ; ret 0x8149
0x00000200000c31d2 : or byte ptr [rcx - 1], al ; ret 0x8348
0x000002000020281c : or byte ptr [rcx - 1], al ; ret 0xdbe9
0x00000200001337b4 : or byte ptr [rcx - 1], cl ; ret 0x2c6
0x00000200001027f6 : or byte ptr [rcx - 1], cl ; ret 0x3b4c
0x00000200006232b3 : or byte ptr [rcx - 1], cl ; ret 0x3b4d
0x000002000008c74b : or byte ptr [rcx - 1], cl ; ret 0x8348
0x00000200001337f0 : or byte ptr [rcx - 1], cl ; ror byte ptr [rbp + 0x3b], 0xc2 ; jb 0x200001337eb ; ret
0x00000200000dbf58 : or byte ptr [rcx - 9], cl ; ret 0xfff
0x000002000002a0c4 : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x23], cl ; ret 0x8b4c
0x000002000000dc93 : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x000002000007e664 : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x0000020000062829 : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x8949
0x00000200000dde70 : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x894c
0x000002000009839f : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0x8b49
0x00000200000d695a : or byte ptr [rcx], 0 ; add byte ptr [rax + 0x2b], cl ; ret 0xba48
0x00000200000af60f : or byte ptr [rcx], 0 ; add byte ptr [rax + 3], cl ; ret
0x0000020000097d35 : or byte ptr [rcx], 0 ; add byte ptr [rax + 3], cl ; ret 0x894c
0x0000020000079095 : or byte ptr [rcx], 0 ; add byte ptr [rax + 3], cl ; ret 0xba48
0x0000020000744042 : or byte ptr [rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xbf48
0x0000020000024fa8 : or byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000001f3f5 : or byte ptr [rcx], 0 ; add byte ptr [rbp + 0x23], cl ; ret 0x2b48
0x00000200001dd8f8 : or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret
0x000002000008bec3 : or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x00000200000a8b83 : or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b4c
0x000002000076cf59 : or byte ptr [rcx], 0 ; add byte ptr [rcx + 0x2b], cl ; ret 0x8349
0x00000200000ddefb : or byte ptr [rcx], 0 ; add byte ptr [rcx + 3], cl ; ret
0x00000200000decf2 : or byte ptr [rcx], 0 ; add byte ptr [rcx + 3], cl ; ret 0x3b48
0x000002000000a62e : or byte ptr [rcx], 0 ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x0000020000497827 : or byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000039dd57 : or byte ptr [rcx], al ; add byte ptr [rax], al ; call qword ptr [r15]
0x00000200004fe5c3 : or byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000004314a : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000002000000ac5d : or byte ptr [rcx], bh ; or al, 0x72 ; sbb dh, dh ; ret 0x7502
0x00000200001636c4 : or byte ptr [rcx], bl ; ret
0x000002000052d874 : or byte ptr [rcx], bl ; ret 0x48ff
0x00000200004ca1f1 : or byte ptr [rdi + 0x1a], 1 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000098ac4 : or byte ptr [rdi + 2], cl ; add byte ptr [rcx - 0x80], al ; call qword ptr [rcx]
0x0000020000056f7b : or byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200001bb287 : or byte ptr [rdi + rcx - 0x49], al ; ror byte ptr [rcx - 0x7d], 1 ; ret 0x4907
0x000002000047ce43 : or byte ptr [rdi + rcx - 0x55], al ; or byte ptr [rax - 1], cl ; ret 0xceeb
0x0000020000584c34 : or byte ptr [rdi - 0x2b], ch ; dec dword ptr [rax - 0x39] ; ret 0x3c80
0x00000200003b4518 : or byte ptr [rdi - 0xa], dh ; ret
0x0000020000452dc6 : or byte ptr [rdi], 0x45 ; ret 0x4589
0x00000200003aa8b1 : or byte ptr [rdi], 0x83 ; ret 0xffa3
0x0000020000453e7d : or byte ptr [rdi], 0x84 ; ret
0x00000200006c80db : or byte ptr [rdi], 0x95 ; ret 0xc141
0x0000020000466782 : or byte ptr [rdi], 0xb7 ; ret 0x48d
0x00000200000844d1 : or byte ptr [rdi], ch ; ret
0x00000200006c33f1 : or byte ptr [rdi], cl ; adc byte ptr [rcx], al ; movdqu xmmword ptr [rdx], xmm0 ; ret
0x0000020000095fa7 : or byte ptr [rdi], cl ; add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x000002000019f73c : or byte ptr [rdi], cl ; mov bh, 0x51 ; add dh, dh ; ret 0xf10
0x0000020000602449 : or byte ptr [rdi], cl ; mov bh, 0x55 ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000020000135a83 : or byte ptr [rdi], cl ; mov bh, 0x73 ; add cl, byte ptr [rax - 0x7d] ; ret
0x0000020000039b73 : or byte ptr [rdi], cl ; mov bl, 0x10 ; ret
0x00000200005a65e5 : or byte ptr [rdi], cl ; mov dh, 0x41 ; add eax, ecx ; call 0x1ff841c98fe
0x000002000016864e : or byte ptr [rdi], cl ; mov dh, 4 ; sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x00000200005ecc59 : or byte ptr [rdi], cl ; ret
0x0000020000138103 : or byte ptr [rdi], cl ; scasb al, byte ptr [rdi] ; push rsp ; and al, 8 ; ret
0x000002000018b7c2 : or byte ptr [rdi], cl ; test bh, bl ; ret
0x0000020000083a4e : or byte ptr [rdi], cl ; test bl, bh ; ror dword ptr [rdi], cl ; add dh, dh ; ret
0x00000200003e89e6 : or byte ptr [rdi], cl ; test bl, cl ; mov dl, 0x18 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000a39e4 : or byte ptr [rdi], cl ; test byte ptr [rbp - 0x9fff193], al ; ret
0x000002000017b75a : or byte ptr [rdi], cl ; test byte ptr [rcx], dl ; ret 0xffee
0x00000200003c6af2 : or byte ptr [rdi], cl ; test byte ptr [rdi], bh ; ret
0x00000200004ceb6d : or byte ptr [rdi], cl ; test byte ptr [rdx - 0x1000000], bh ; ret
0x00000200003b4614 : or byte ptr [rdi], cl ; test byte ptr [rdx], cl ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200001fa9b1 : or byte ptr [rdi], cl ; test dword ptr [rbx], edx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x00000200003a28d7 : or byte ptr [rdi], cl ; test dword ptr [rcx - 0xffff8c], ebp ; ret 0x8348
0x0000020000021581 : or byte ptr [rdi], cl ; test dword ptr [rcx], esi ; ret 0x13
0x00000200003b4645 : or byte ptr [rdi], cl ; test dword ptr [rdi - 0x9ffe570], edx ; ret
0x00000200003d49cf : or byte ptr [rdi], cl ; test dword ptr [rsi], ebp ; sbb dword ptr [eax], eax ; inc edx ; jmp 0x200003d49c4
0x0000020000416137 : or byte ptr [rdi], cl ; test ebx, edi ; ret
0x00000200004bc90e : or byte ptr [rdi], cl ; test edx, esi ; jb 0x200004bc92d ; add byte ptr [rbp - 0x75], al ; ret
0x00000200001fa9dd : or byte ptr [rdi], cl ; test esp, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x3474
0x000002000010198b : or byte ptr [rdi], cl ; test esp, esi ; test al, 6 ; add dh, dh ; ret
0x0000020000006db7 : or byte ptr [rdi], cl ; xchg ah, ch ; unpckhps xmm0, xmmword ptr [rax] ; ret
0x00000200003f5895 : or byte ptr [rdi], cl ; xchg ah, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x000002000041913d : or byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x000002000020dd08 : or byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x000002000020dd2a : or byte ptr [rdi], cl ; xchg eax, edi ; ret
0x000002000020dd19 : or byte ptr [rdi], cl ; xchg eax, edx ; ret
0x000002000020dd3b : or byte ptr [rdi], cl ; xchg eax, esi ; ret
0x0000020000013d4c : or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200001148fe : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8844
0x000002000042817b : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0x8948
0x000002000020715c : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x00000200000844d0 : or byte ptr [rdi], r13b ; ret
0x00000200006bd718 : or byte ptr [rdi], r9b ; xchg eax, esp ; ret
0x0000020000405bf7 : or byte ptr [rdx + 0x6243624f], bh ; call 0x200000c1e68
0x0000020000405bf6 : or byte ptr [rdx + 0x6243624f], r15b ; call 0x200000c1e69
0x000002000065cc45 : or byte ptr [rdx + rax + 4], al ; or bh, bh ; ret 0xefeb
0x00000200001b8357 : or byte ptr [rdx + rax - 2], dh ; ret 0xf48
0x0000020000506d2e : or byte ptr [rdx + rdx*8 - 0x41f0f18c], al ; ret 0x3b44
0x00000200001a1d68 : or byte ptr [rdx - 0x22], dh ; ret
0x00000200001f4aac : or byte ptr [rdx - 0x37], dh ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000075671c : or byte ptr [rdx - 0x48], ah ; jmp qword ptr [rcx]
0x00000200004a6c44 : or byte ptr [rdx - 0x75], 4 ; ret 0x8d4c
0x000002000064fa67 : or byte ptr [rdx - 0x75], cl ; push rsp ; call qword ptr [rax]
0x00000200001e371a : or byte ptr [rdx - 0x75], cl ; ret 0x4810
0x000002000009ca95 : or byte ptr [rdx], 0 ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x00000200000e4f15 : or byte ptr [rdx], 0 ; add byte ptr [rcx + 3], cl ; ret 0x8b4d
0x0000020000441863 : or byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x20000071477
0x000002000052b6a1 : or byte ptr [rdx], al ; add byte ptr [rax], al ; call 0x2000014f4c7
0x000002000005a255 : or byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000399293 : or byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000002000015522b : or byte ptr [rdx], ch ; add byte ptr [rax + 0x40c48348], dl ; pop rbp ; ret
0x000002000078271a : or byte ptr [rdx], cl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000408ccd : or byte ptr [rdx], cl ; ret
0x0000020000663628 : or byte ptr [rdx], dh ; sbb byte ptr [r10], sil ; ret 0xb60f
0x0000020000057f8c : or byte ptr [rdx], dl ; add byte ptr [rax - 0x3fffff45], bh ; ret
0x00000200004eafbb : or byte ptr [rdx], dl ; ret
0x00000200006a35b9 : or byte ptr [rip + 0x3820125c], ah ; call qword ptr [rdx]
0x000002000073dd16 : or byte ptr [rip + 0xb480000], al ; ret 0x8d48
0x000002000022bd4c : or byte ptr [rip + 0xb480000], al ; ret 0x8d4c
0x00000200006a35a5 : or byte ptr [rip + 0xe20125c], ah ; call qword ptr [rdx]
0x0000020000016ce8 : or byte ptr [rip + 0xfffff], ah ; ret
0x00000200006a3645 : or byte ptr [rip - 0x43dfeda4], ah ; call qword ptr [rdx]
0x000002000010eb3e : or byte ptr [rip - 0x7cb7d18c], al ; ret
0x0000020000489f06 : or byte ptr [rsi + 0x3b], ah ; ret 0x850f
0x00000200000df027 : or byte ptr [rsi + 0x41], ah ; cmp eax, dword ptr [rax] ; jb 0x200000df017 ; ret
0x000002000041684f : or byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 4], edx ; ret
0x000002000053852c : or byte ptr [rsi + 0x48], ah ; movd eax, mm0 ; call rax
0x000002000002bd2a : or byte ptr [rsi + 0xa], dh ; mov eax, 1 ; ret
0x0000020000148f00 : or byte ptr [rsi + 3], ah ; ret
0x00000200004f454e : or byte ptr [rsi + 3], dh ; lea eax, dword ptr [rdx + 4] ; mov eax, edx ; ret
0x00000200006b5358 : or byte ptr [rsi + 4], dh ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000475b8e : or byte ptr [rsi + rcx - 1], dh ; ret 0x8348
0x00000200001d94d7 : or byte ptr [rsi - 0x54], dh ; mov eax, 1 ; ret
0x00000200000125eb : or byte ptr [rsi - 0x77], ah ; add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x00000200007683a7 : or byte ptr [rsi - 0x77], ah ; or byte ptr [r8 - 0x7d], cl ; ret
0x000002000010fac3 : or byte ptr [rsi - 0x77], ah ; or cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x000002000012b89e : or byte ptr [rsi - 0x77], ah ; push rbp ; add bh, bh ; ret 0x8341
0x00000200007683a6 : or byte ptr [rsi - 0x77], spl ; or byte ptr [r8 - 0x7d], cl ; ret
0x00000200001f2762 : or byte ptr [rsi - 0x7b], ah ; ret 0x1975
0x000002000073cf72 : or byte ptr [rsi], 0 ; add byte ptr [rbp + 0x33], al ; fisttp dword ptr [rax - 0x7d] ; ret
0x000002000041c292 : or byte ptr [rsi], al ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000013eaa4 : or byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x00000200004cc77c : or byte ptr [rsi], ch ; ret 0x8bff
0x000002000068212a : or byte ptr ds:[rax], al ; add dh, dh ; ret
0x00000200001adbde : or byte ptr fs:[rax], al ; sti ; add rsp, 0x28 ; ret
0x00000200005ae643 : or ch, ah ; dec dword ptr [rax - 0x7f] ; ret 0xb8
0x00000200005611de : or ch, al ; lodsb al, byte ptr [rsi] ; pop rdx ; int1 ; call qword ptr [rax - 0x1a383d17]
0x0000020000618aa4 : or ch, al ; ret 0xba70
0x00000200005030d2 : or ch, bh ; ret
0x0000020000454d06 : or ch, bl ; ret
0x00000200001cf7ee : or ch, byte ptr [rax - 0x74f98bff] ; ret 0x149
0x0000020000109315 : or ch, byte ptr [rbx] ; ret 0x341
0x0000020000109733 : or ch, byte ptr [rbx] ; ret 0xc0ff
0x00000200000e2cd3 : or ch, byte ptr [rbx] ; sar dword ptr [rdx + 0x200], 0x3b ; ret 0x377
0x000002000059db6a : or ch, byte ptr [rcx - 0x74b30017] ; ret
0x000002000000c1ce : or ch, byte ptr [rdi] ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200005aa6e3 : or ch, cl ; ret
0x00000200005ab60f : or ch, cl ; ret 0xfff0
0x000002000040df0a : or ch, dh ; ret 0x48ff
0x0000020000511fb4 : or ch, dl ; ret
0x000002000020e4b5 : or cl, 0xc0 ; mov byte ptr [rdx + 2], al ; mov byte ptr [rdx + 1], cl ; ret
0x000002000020e4d8 : or cl, 0xe0 ; mov byte ptr [rdx + 1], al ; mov byte ptr [rdx], cl ; ret
0x00000200000bd988 : or cl, al ; out dx, al ; add ch, bl ; ret 0x8b48
0x000002000072d8a5 : or cl, al ; out dx, eax ; add eax, 0x8b41c82b ; ret 0xe7f7
0x0000020000577224 : or cl, bpl ; ret
0x000002000006e9cb : or cl, bpl ; ret 0xffef
0x0000020000101f53 : or cl, bpl ; retf -2 ; call rcx
0x0000020000211c77 : or cl, byte ptr [r13 + 0x3c8dc00c] ; int 0x80
0x0000020000022729 : or cl, byte ptr [r8 - 0x75] ; ret
0x000002000062ace4 : or cl, byte ptr [rax + 0x3b] ; ret
0x0000020000114157 : or cl, byte ptr [rax + 0x3b] ; ret 0x1c74
0x0000020000678b2b : or cl, byte ptr [rax + 0x3b] ; ret 0x2772
0x0000020000679335 : or cl, byte ptr [rax + 0x3b] ; ret 0x2872
0x000002000005ac24 : or cl, byte ptr [rax + 0x3b] ; ret 0x3472
0x0000020000678ac0 : or cl, byte ptr [rax + 0x3b] ; ret 0x3772
0x000002000011118e : or cl, byte ptr [rax + 0x3b] ; ret 0x4072
0x0000020000213e29 : or cl, byte ptr [rax + 0x3b] ; ret 0x820f
0x00000200000de88e : or cl, byte ptr [rax + 0x3b] ; ret 0x870f
0x000002000044deff : or cl, byte ptr [rax + 3] ; ret
0x00000200001b46e7 : or cl, byte ptr [rax - 0x73] ; and al, 0x20 ; call 0x200000c09d8
0x00000200005debd1 : or cl, byte ptr [rax - 0x73] ; push rbp ; ret
0x00000200001e5923 : or cl, byte ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0xec75
0x00000200001aaa29 : or cl, byte ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret 0xf275
0x000002000051a08e : or cl, byte ptr [rax - 0x75] ; and al, 0x50 ; call 0x20000140389
0x00000200001ef8e8 : or cl, byte ptr [rax - 0x75] ; fmul dword ptr [rax - 0x75] ; ret
0x000002000049ab89 : or cl, byte ptr [rax - 0x75] ; iretd ; call 0x200000c23c7
0x0000020000626fcb : or cl, byte ptr [rax - 0x75] ; pop rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200001fa865 : or cl, byte ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x000002000002272a : or cl, byte ptr [rax - 0x75] ; ret
0x0000020000479623 : or cl, byte ptr [rax - 0x75] ; ret 0x8348
0x00000200001a5d49 : or cl, byte ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], cl ; iretd ; call rsi
0x0000020000062138 : or cl, byte ptr [rax - 0x77] ; add ecx, dword ptr [rax - 0x7d] ; ret
0x000002000043a60f : or cl, byte ptr [rax - 0x77] ; or byte ptr [rax - 0x75], cl ; ret
0x000002000005ad79 : or cl, byte ptr [rax - 0x7b] ; leave ; jne 0x2000005ad8c ; mov rax, r9 ; ret
0x0000020000157fc4 : or cl, byte ptr [rax - 0x7d] ; jmp qword ptr [rcx]
0x0000020000138fae : or cl, byte ptr [rax - 0x7d] ; ret
0x00000200002120e3 : or cl, byte ptr [rax - 0x7d] ; ret 0x3848
0x0000020000052c56 : or cl, byte ptr [rax - 0x7d] ; ret 0x4404
0x0000020000052c8c : or cl, byte ptr [rax - 0x7d] ; ret 0x4408
0x000002000076a140 : or cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000020000623392 : or cl, byte ptr [rax - 0x7d] ; ret 0x4830
0x000002000010fac6 : or cl, byte ptr [rax - 0x7d] ; ret 0x4902
0x0000020000399e96 : or cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x000002000021e0a1 : or cl, byte ptr [rax - 0x7d] ; ret 0x8102
0x0000020000133a91 : or cl, byte ptr [rax - 1] ; ret 0x418d
0x0000020000538892 : or cl, byte ptr [rax - 1] ; ret 0x8445
0x00000200006441b5 : or cl, byte ptr [rax - 1] ; ret 0x8844
0x00000200005d540b : or cl, byte ptr [rax - 1] ; ret 0x8be9
0x00000200005d5420 : or cl, byte ptr [rax - 1] ; ret 0xb3e9
0x0000020000134ea3 : or cl, byte ptr [rax - 1] ; ret 0xc2f6
0x000002000010fa02 : or cl, byte ptr [rax - 1] ; ret 0xff49
0x00000200001b3530 : or cl, byte ptr [rax] ; add byte ptr [rax - 0x7c], al ; dec dword ptr [rdi] ; xchg eax, esp ; ret
0x00000200000df026 : or cl, byte ptr [rax] ; cmp ax, word ptr [r8] ; jb 0x200000df018 ; ret
0x0000020000211c78 : or cl, byte ptr [rbp + 0x3c8dc00c] ; int 0x80
0x000002000011ef1e : or cl, byte ptr [rbp + 5] ; add byte ptr [rbx - 0x4b74b23e], cl ; ret 0x4a0
0x00000200006beaf7 : or cl, byte ptr [rbp + rcx*4 + 0xd] ; rol dword ptr [rcx - 0x5b], -1 ; jmp rax
0x00000200006be89b : or cl, byte ptr [rbp + rcx*4 + 0xd] ; sbb eax, 0x48ffa544 ; jmp rax
0x00000200006c35dd : or cl, byte ptr [rbp - 0x75] ; add byte ptr [rbp + 0x3b], cl ; ret
0x00000200002034c9 : or cl, byte ptr [rbp - 0x77] ; or byte ptr [rcx - 0xa], al ; ret 0x7501
0x000002000016c7f2 : or cl, byte ptr [rbx + 0x148d43c5] ; or ch, byte ptr [rbx] ; ret 0xc0ff
0x000002000010972d : or cl, byte ptr [rbx + 0x148d43c6] ; or ch, byte ptr [rbx] ; ret 0xc0ff
0x000002000010930f : or cl, byte ptr [rbx + 0x148d43c7] ; or ch, byte ptr [rbx] ; ret 0x341
0x0000020000661bf1 : or cl, byte ptr [rbx + 0x4899704] ; xchg eax, esi ; inc edx ; jmp 0x20000661bf1
0x00000200004834b8 : or cl, byte ptr [rbx + 0xbe087] ; add byte ptr [rbx], bh ; ret
0x00000200006cc6a9 : or cl, byte ptr [rbx + rcx*4 - 0x40] ; add rsp, 0x38 ; jmp r9
0x000002000013e7c9 : or cl, byte ptr [rbx + rdi - 0x3f] ; jae 0x2000013e7dc ; or eax, 0xffffffff ; ret
0x00000200001d0469 : or cl, byte ptr [rbx + rdi - 0x3f] ; jae 0x200001d047c ; or eax, 0xffffffff ; ret
0x00000200005054e1 : or cl, byte ptr [rbx + rdi - 0x3f] ; jae 0x200005054f4 ; or eax, 0xffffffff ; ret
0x00000200004847a6 : or cl, byte ptr [rbx + rdi - 0x3f] ; jne 0x200004847b7 ; xor eax, eax ; ret
0x0000020000689646 : or cl, byte ptr [rbx - 0x774bb38] ; call 0x200006858c8
0x000002000069f6fb : or cl, byte ptr [rbx] ; mov ch, 0x49 ; ret
0x00000200006bd1c5 : or cl, byte ptr [rbx] ; ret 0x1be
0x00000200000971db : or cl, byte ptr [rcx + 0x3b] ; ret 0x3b77
0x00000200000971ca : or cl, byte ptr [rcx + 0x3b] ; ret 0x4c77
0x00000200000ddf5e : or cl, byte ptr [rcx + 0x3b] ; ret 0x870f
0x000002000010f0e3 : or cl, byte ptr [rcx + 0xf] ; mov edi, 0xf490e42 ; scasd eax, dword ptr [rdi] ; ret
0x000002000010f0d6 : or cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x0000020000230c5e : or cl, byte ptr [rcx - 0x3f] ; leave ; add ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x0000020000645c2b : or cl, byte ptr [rcx - 0x75] ; add bh, bh ; ret 0x34d
0x0000020000586af3 : or cl, byte ptr [rcx - 0x75] ; enter 0x2b48, 0xd ; ret 0xcb63
0x000002000045068a : or cl, byte ptr [rcx - 0x75] ; ret 0x2548
0x00000200001f6311 : or cl, byte ptr [rcx - 0x7d] ; add byte ptr [rdx], al ; ret
0x000002000064ada2 : or cl, byte ptr [rcx - 0x7d] ; ret 0x4102
0x0000020000138e38 : or cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x000002000013d344 : or cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x00000200001364ab : or cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x000002000064ae97 : or cl, byte ptr [rcx - 0x7d] ; ret 0xe902
0x0000020000052c1d : or cl, byte ptr [rcx - 0x7d] ; rol byte ptr [rax + rcx*2], 0x83 ; ret 0x4508
0x0000020000499dd2 : or cl, byte ptr [rcx - 0x9afdba4] ; ret
0x0000020000666f4d : or cl, byte ptr [rcx - 1] ; ret 0x2b41
0x0000020000121c3b : or cl, byte ptr [rcx - 1] ; ret 0x8b41
0x0000020000133aef : or cl, byte ptr [rcx - 1] ; ret 0x8d41
0x0000020000577cc7 : or cl, byte ptr [rcx - 1] ; ret 0xc883
0x00000200006449a6 : or cl, byte ptr [rcx - 1] ; ret 0xc983
0x0000020000666c49 : or cl, byte ptr [rcx - 1] ; ret 0xe981
0x000002000021364e : or cl, byte ptr [rcx] ; lar ecx, word ptr [rax + 0x33] ; ret
0x0000020000187530 : or cl, byte ptr [rdi] ; adc dword ptr [rdx + rdx], -0xf ; inc dword ptr [rbp - 0x75] ; ret
0x00000200001e9cd7 : or cl, byte ptr [rdi] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000019917f : or cl, byte ptr [rdi] ; and edx, 0x77 ; hlt ; push rsi ; ret
0x000002000010f9e6 : or cl, byte ptr [rdi] ; mov bh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000200000d5c5d : or cl, byte ptr [rdi] ; mov dh, 0xd ; ret
0x0000020000080c11 : or cl, byte ptr [rdi] ; sub dword ptr [rip + 0x48000002], -0x3f ; call qword ptr [rax]
0x00000200000822cb : or cl, byte ptr [rdi] ; xchg eax, ebx ; ret 0x2244
0x000002000002a04a : or cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf48
0x00000200001ef8e7 : or cl, byte ptr cs:[rax - 0x75] ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000579893 : or cl, ch ; cmc ; pop rax ; call 0x1ffc21a24a2
0x00000200005ab916 : or cl, ch ; cmp al, dl ; jmp 0x200005ab91e
0x00000200005a070d : or cl, ch ; mov dh, 0xeb ; jmp 0x1ffc311171d
0x00000200005770e0 : or cl, ch ; pop rsp ; ret 0xffe7
0x0000020000580d9a : or cl, ch ; push rsi ; ret 0xf01
0x000002000014a04c : or cl, ch ; ret
0x000002000006e9cc : or cl, ch ; ret 0xffef
0x00000200005ab12c : or cl, ch ; ret 0xfff0
0x0000020000101f54 : or cl, ch ; retf -2 ; call rcx
0x000002000077c4be : or cl, ch ; sub dl, byte ptr [rax - 0x74b70002] ; ret 0x2b49
0x00000200006937fc : or cl, cl ; ret
0x00000200005770df : or cl, r13b ; pop rsp ; ret 0xffe7
0x000002000011380a : or cx, word ptr [r8 + 0xa] ; jne 0x2000011381d ; mov al, 1 ; ret
0x00000200003b9998 : or dh, ah ; dec dword ptr [rax - 0x7f] ; ret
0x00000200005622c5 : or dh, ah ; push rdi ; ret
0x000002000013f7bd : or dh, al ; mov qword ptr [rdx + rcx - 8], rax ; ret
0x00000200003bd678 : or dh, al ; ret
0x0000020000133861 : or dh, bh ; fmul dword ptr [rbp - 0x75] ; ret 0xd233
0x0000020000479074 : or dh, byte ptr [rbp + 1] ; ret
0x000002000011380e : or dh, byte ptr [rbp + 3] ; mov al, 1 ; ret
0x00000200000df2d7 : or dh, byte ptr [rbp + 6] ; mov eax, 1 ; ret
0x0000020000029d02 : or dh, byte ptr [rbp - 0x17] ; add rsp, 0x28 ; ret
0x0000020000149179 : or dh, byte ptr [rbp - 0x18] ; mov rax, r8 ; pop rbx ; ret
0x0000020000149134 : or dh, byte ptr [rbp - 0x20] ; mov rax, r8 ; pop rbx ; ret
0x00000200001491aa : or dh, byte ptr [rbp - 0xf] ; mov rax, rdx ; and al, 0xf0 ; pop rbx ; ret
0x0000020000012559 : or dh, byte ptr [rbp - 0xf] ; ret
0x000002000003bc64 : or dh, byte ptr [rbx + 6] ; mov eax, 1 ; ret
0x000002000012d8b9 : or dh, byte ptr [rbx] ; enter 0x448b, 0x24 ; jo 0x2000012d8cc ; ret 0xc803
0x00000200004cd02c : or dh, byte ptr [rbx] ; jmp qword ptr [rcx]
0x000002000060b826 : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; enter -0x2018, 0x57 ; ret 0x4dff
0x000002000060aeaa : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; enter 0x5be8, 0x61 ; ret 0x4cff
0x0000020000534d0c : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000231018
0x0000020000607e79 : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000231019
0x0000020000644d63 : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000231018
0x0000020000609838 : or dh, byte ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000231019
0x000002000060976c : or dh, byte ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; iretd ; call 0x20000231019
0x0000020000608858 : or dh, byte ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; leave ; call 0x20000231019
0x00000200005b5ca0 : or dh, byte ptr [rbx] ; shl byte ptr [rsi + 0x41], 0x89 ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x0000020000687690 : or dh, byte ptr [rdx - 0x12] ; ret
0x0000020000185939 : or dh, ch ; dec dword ptr [rbx + rcx*4 - 0x18] ; jmp 0x20000091bff
0x00000200000fabab : or dh, dh ; ret
0x0000020000031b44 : or dh, dh ; ret 0x7401
0x000002000012a915 : or dh, dh ; ret 0x7403
0x00000200000aee79 : or dh, dh ; ret 0x7408
0x000002000056e732 : or dh, dh ; ret 0x7502
0x000002000056e486 : or dh, dh ; ret 0x7520
0x000002000004a5df : or dh, dh ; ret 0xf1f
0x0000020000496540 : or dh, dh ; rol dword ptr [rcx], 0x74 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000020000029914 : or dh, dh ; shl dword ptr [rcx], -0x4d ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret
0x0000020000175564 : or dil, dil ; ret
0x00000200001c76ee : or dl, 0x10 ; mov al, dl ; ret
0x00000200005ab95f : or dl, al ; jmp 0x200005ab963
0x00000200002098ae : or dl, bl ; int1 ; dec dword ptr [rax + 0x3b] ; ret 0xc74
0x00000200004aae42 : or dl, bl ; ret
0x00000200005ed553 : or dl, byte ptr [rax] ; movups xmmword ptr [rax + rcx + 0x10], xmm0 ; ret
0x000002000052eba8 : or dl, byte ptr [rax] ; ret
0x0000020000544948 : or dl, byte ptr [rcx + 9] ; add byte ptr [rax - 0x3f], cl ; jmp 0x20000544979
0x00000200004792f3 : or dl, ch ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x7ee8
0x00000200005420ce : or dword ptr [eax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000541f2b : or dword ptr [eax], eax ; add rsp, 0x28 ; ret
0x00000200001f437f : or dword ptr [r10], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001f4434 : or dword ptr [r10], eax ; ret
0x00000200001556c6 : or dword ptr [r8], 0xffffffff ; mov eax, 0xc0000095 ; ret
0x000002000013b042 : or dword ptr [r8], 0xffffffff ; ret
0x00000200000c25d8 : or dword ptr [r8], eax ; add rsp, 0x38 ; ret
0x00000200004f791e : or dword ptr [r8], eax ; mov al, r8b ; ret
0x000002000044c9d4 : or dword ptr [r9], 0x20000000 ; ret
0x00000200003e17a6 : or dword ptr [rax + 0x1000002], 0x74 ; ret 0x8b48
0x0000020000762495 : or dword ptr [rax + 0x23], ecx ; ret
0x00000200000561fe : or dword ptr [rax + 0x23], ecx ; ret 0x2b48
0x0000020000005d3e : or dword ptr [rax + 0x23], ecx ; ret 0x2b49
0x00000200000aba79 : or dword ptr [rax + 0x23], ecx ; ret 0x8b49
0x000002000074581d : or dword ptr [rax + 0x23], ecx ; ret 0x8b4a
0x000002000000dc89 : or dword ptr [rax + 0x23], ecx ; ret 0xba48
0x00000200005ae705 : or dword ptr [rax + 0x28], 4 ; mov eax, 0xc000000d ; ret
0x000002000018c331 : or dword ptr [rax + 0x2b], ecx ; clc ; jmp 0x200000a8549
0x0000020000626f32 : or dword ptr [rax + 0x2b], ecx ; fmul dword ptr [rax - 0x7d] ; ret
0x00000200000bb4b4 : or dword ptr [rax + 0x2b], ecx ; ret 0x4b8b
0x00000200000a9c54 : or dword ptr [rax + 0x2c], 0xe ; add bh, bh ; ret 0xc28b
0x00000200000a2917 : or dword ptr [rax + 0x33], ecx ; add ecx, dword ptr [rax + 0x23] ; ret 0x3148
0x000002000018a377 : or dword ptr [rax + 0x33], ecx ; add ecx, dword ptr [rax + 0x23] ; ret 0x3348
0x00000200000df724 : or dword ptr [rax + 0x3b], 0x49e473d1 ; mov eax, eax ; ret
0x0000020000010624 : or dword ptr [rax + 0x3b], 0xff6072f9 ; ret 0x8349
0x0000020000063344 : or dword ptr [rax + 0x3b], ecx ; ret
0x000002000009751c : or dword ptr [rax + 0x3b], ecx ; ret 0x870f
0x0000020000134fc6 : or dword ptr [rax + 0x3b], ecx ; ret 0xbf75
0x00000200001333ef : or dword ptr [rax + 0x3b], ecx ; ret 0xc575
0x0000020000097531 : or dword ptr [rax + 0x3b], ecx ; ret 0xf45
0x00000200000ad652 : or dword ptr [rax + 0xb], ecx ; ret
0x00000200004ec4d7 : or dword ptr [rax + 0xf], ecx ; scasd eax, dword ptr [rdi] ; ret 0x694c
0x00000200005b154e : or dword ptr [rax + 1], 0 ; add byte ptr [rax - 0x7f], cl ; ret
0x00000200000b0266 : or dword ptr [rax + 3], ecx ; ret
0x00000200003a215c : or dword ptr [rax + 3], ecx ; ret 0x2b48
0x00000200000bf24d : or dword ptr [rax + 3], ecx ; rol byte ptr [rcx - 0xa], 1 ; ret 0xf02
0x00000200001f890b : or dword ptr [rax + 4], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001a886f : or dword ptr [rax + 4], 2 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003df742 : or dword ptr [rax + 8], 0x20 ; ret
0x00000200000f0f5f : or dword ptr [rax + rcx*2], eax ; add esp, 0x20 ; pop rdi ; ret
0x000002000063e922 : or dword ptr [rax + rcx*8], 1 ; mov rcx, rsi ; call rdx
0x00000200000c71cf : or dword ptr [rax - 0x17fffffb], 0x13 ; ret 0xfff6
0x00000200000c716e : or dword ptr [rax - 0x17fffffb], 0x74 ; ret 0xfff6
0x00000200000ff58f : or dword ptr [rax - 0x39], ecx ; ret
0x000002000000a5a3 : or dword ptr [rax - 0x39], ecx ; ret 0xf000
0x0000020000041e7f : or dword ptr [rax - 0x3d74f58c], eax ; ret
0x0000020000037294 : or dword ptr [rax - 0x3e75fe1f], eax ; ret
0x0000020000745f23 : or dword ptr [rax - 0x3f], ecx ; loopne 0x20000745f4a ; sar rax, 0x10 ; ret
0x00000200006da387 : or dword ptr [rax - 0x73], ecx ; add al, 0x48 ; add esp, 0x38 ; ret
0x000002000076cf4b : or dword ptr [rax - 0x73], ecx ; or byte ptr [r9 + 0x23], cl ; ret 0xba49
0x0000020000118f5f : or dword ptr [rax - 0x73], ecx ; sbb eax, 0x1e3951 ; jmp 0x20000118f34
0x00000200004cc575 : or dword ptr [rax - 0x75], ecx ; adc cl, byte ptr [rcx + 0x3b] ; sal byte ptr [rbp - 0xe], 1 ; ret
0x00000200000bab12 : or dword ptr [rax - 0x75], ecx ; add dword ptr [rax + 0x3b], ecx ; sal byte ptr [rdi + 5], 1 ; ret
0x000002000064f7dd : or dword ptr [rax - 0x75], ecx ; and al, 0x28 ; mov byte ptr [rax], 1 ; ret
0x00000200001ef8d7 : or dword ptr [rax - 0x75], ecx ; fmul dword ptr [rax - 0x75] ; ret
0x00000200003cbeb8 : or dword ptr [rax - 0x75], ecx ; mov rax, qword ptr [rax + 0x20] ; ret
0x000002000076c850 : or dword ptr [rax - 0x75], ecx ; or dword ptr [rax - 0x7b], ecx ; leave ; jne 0x2000076c84a ; ret
0x00000200004e08d5 : or dword ptr [rax - 0x75], ecx ; out dx, eax ; call rax
0x000002000004decb : or dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r11d ; ret
0x000002000074dddc : or dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov rax, r10 ; ret
0x0000020000126bb2 : or dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov rax, r11 ; ret
0x00000200000a5c48 : or dword ptr [rax - 0x75], ecx ; ret
0x000002000001f907 : or dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x00000200006c04e0 : or dword ptr [rax - 0x75], ecx ; retf ; call rax
0x000002000005983f : or dword ptr [rax - 0x75], ecx ; sbb esi, esi ; ret
0x00000200005118fa : or dword ptr [rax - 0x75], ecx ; sub r8b, r13b ; jl 0x200005118f4 ; ret 0x8bff
0x000002000048826b : or dword ptr [rax - 0x77], ecx ; or al, bl ; xor eax, eax ; ret
0x00000200001e2228 : or dword ptr [rax - 0x7b], ecx ; leave ; je 0x200001e2246 ; and qword ptr [rcx], rdx ; ret
0x000002000076c853 : or dword ptr [rax - 0x7b], ecx ; leave ; jne 0x2000076c847 ; ret
0x00000200005f1e91 : or dword ptr [rax - 0x7b], ecx ; sal byte ptr [rbp + 4], cl ; lea eax, dword ptr [rdx + 1] ; ret
0x0000020000110b12 : or dword ptr [rax - 0x7b], ecx ; sal byte ptr [rdi + rcx + 0x48], cl ; mov eax, edx ; ret
0x0000020000464048 : or dword ptr [rax - 0x7d], ecx ; and al, byte ptr [rax] ; and dword ptr [r8], 0 ; ret
0x00000200004998d4 : or dword ptr [rax - 0x7d], ecx ; loope 0x200004998dd ; call 0x200000c23c8
0x000002000016b4d7 : or dword ptr [rax - 0x7d], ecx ; ret
0x00000200004f8cb6 : or dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x00000200004c96ad : or dword ptr [rax - 0x7d], ecx ; ret 0x4902
0x000002000048734d : or dword ptr [rax - 0x7d], ecx ; ror dword ptr [rax], -0x18 ; stc ; ret
0x000002000048e29b : or dword ptr [rax - 0x7d], ecx ; sar ah, 0x48 ; add esp, 0x28 ; ret
0x0000020000407df8 : or dword ptr [rax - 0x7d], ecx ; sar dh, 0x83 ; ret 0x75fe
0x0000020000059a7d : or dword ptr [rax - 0x7d], ecx ; stc ; std ; ja 0x20000059a90 ; mov al, 1 ; ret
0x000002000016167f : or dword ptr [rax - 0x7f], ecx ; ret
0x00000200004c6d19 : or dword ptr [rax - 0x7f], ecx ; ret 0x1000
0x0000020000152519 : or dword ptr [rax - 0xcfeab4], ecx ; ret 0x5589
0x0000020000138aed : or dword ptr [rax - 1], ecx ; ret
0x000002000013348e : or dword ptr [rax - 1], ecx ; ret 0x3845
0x00000200007460dc : or dword ptr [rax - 1], ecx ; ror byte ptr [rcx + 0xf], 0xaf ; ret 0x234d
0x00000200000e81d0 : or dword ptr [rax - 9], ecx ; ret
0x000002000011522f : or dword ptr [rax - 9], ecx ; ret 0x1ff
0x00000200003db8c5 : or dword ptr [rax], 0xfc08548 ; ret 0xccc3
0x00000200001556c7 : or dword ptr [rax], 0xffffffff ; mov eax, 0xc0000095 ; ret
0x000002000013b043 : or dword ptr [rax], 0xffffffff ; ret
0x00000200005dc977 : or dword ptr [rax], eax ; add bh, bh ; ret 0xb841
0x000002000002a0c5 : or dword ptr [rax], eax ; add byte ptr [rax + 0x23], cl ; ret 0x8b4c
0x000002000009b3c8 : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; enter -0x74b8, -0x3f ; ret
0x000002000000dc94 : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x000002000007e665 : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0x3b4c
0x000002000006282a : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0x8949
0x00000200000dde71 : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0x894c
0x00000200000983a0 : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0x8b49
0x00000200000d695b : or dword ptr [rax], eax ; add byte ptr [rax + 0x2b], cl ; ret 0xba48
0x0000020000730108 : or dword ptr [rax], eax ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x0000020000231d23 : or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x00000200000af610 : or dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret
0x000002000009ca7d : or dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x3d48
0x00000200000b79a7 : or dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x8948
0x0000020000097d36 : or dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x894c
0x0000020000079096 : or dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0xba48
0x000002000018d1cf : or dword ptr [rax], eax ; add byte ptr [rax - 0x16b7dbbc], cl ; ret
0x00000200006707ed : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x3b48
0x0000020000744043 : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xbf48
0x0000020000198ad7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000004a00a : or dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000020000024fa9 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000005d34f : or dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000084df3 : or dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x58 ; ret
0x00000200005930da : or dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x2000050f312
0x0000020000464027 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdx], rax ; ret
0x000002000001f3f6 : or dword ptr [rax], eax ; add byte ptr [rbp + 0x23], cl ; ret 0x2b48
0x00000200006aac2c : or dword ptr [rax], eax ; add byte ptr [rbx + 0x3b582444], cl ; ret
0x00000200000a6ba0 : or dword ptr [rax], eax ; add byte ptr [rcx + 0x23], cl ; ret 0x3349
0x00000200001dd8f9 : or dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], cl ; ret
0x000002000008bec4 : or dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b48
0x00000200000a8b84 : or dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], cl ; ret 0x3b4c
0x000002000076cf5a : or dword ptr [rax], eax ; add byte ptr [rcx + 0x2b], cl ; ret 0x8349
0x00000200000ddefc : or dword ptr [rax], eax ; add byte ptr [rcx + 3], cl ; ret
0x00000200000decf3 : or dword ptr [rax], eax ; add byte ptr [rcx + 3], cl ; ret 0x3b48
0x00000200000b9b72 : or dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 + 0x65], al ; ret
0x000002000000a62f : or dword ptr [rax], eax ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x00000200003ca812 : or dword ptr [rax], eax ; add dh, dh ; ret
0x00000200000aafbb : or dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000200004eed70 : or dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000483a6 : or dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000002bc0a : or dword ptr [rax], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000002000003c21e : or dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x000002000002a751 : or dword ptr [rax], eax ; add rsp, 0x40 ; pop rbx ; ret
0x000002000003262d : or dword ptr [rax], eax ; add rsp, 0x68 ; ret
0x00000200004efe54 : or dword ptr [rax], eax ; call 0x20000117545
0x0000020000408b69 : or dword ptr [rax], eax ; je 0x20000408b76 ; xor al, al ; ret
0x000002000002fb2c : or dword ptr [rax], eax ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000041ed24 : or dword ptr [rax], eax ; mov al, bl ; add rsp, 0x40 ; pop rbx ; ret
0x00000200004f791f : or dword ptr [rax], eax ; mov al, r8b ; ret
0x00000200000e7988 : or dword ptr [rax], eax ; mov byte ptr [rcx + 0x30], 1 ; ret
0x000002000053cb76 : or dword ptr [rax], eax ; mov eax, 1 ; ret
0x00000200004f58c1 : or dword ptr [rax], eax ; mov rcx, rdi ; call 0x200000c1b37
0x000002000004e98c : or dword ptr [rax], eax ; mov rdi, qword ptr [rdi] ; jmp 0x2000004e95c
0x000002000019acae : or dword ptr [rax], eax ; nop ; jmp 0x200000e6fb0
0x00000200005399d8 : or dword ptr [rax], eax ; or eax, 0xffffffff ; ret
0x00000200004eb025 : or dword ptr [rax], eax ; ret
0x000002000042408b : or dword ptr [rax], eax ; std ; dec dword ptr [rax - 0x75] ; ret
0x00000200004eb063 : or dword ptr [rax], eax ; xor al, al ; ret
0x00000200004e7fce : or dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000064af : or dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200005930d9 : or dword ptr [rax], r8d ; add byte ptr [rax], al ; call 0x2000050f313
0x00000200001f7d49 : or dword ptr [rbp + 0x3b], 0x470f4dc3 ; ret
0x0000020000024592 : or dword ptr [rbp + 0xb], esi ; mov rax, rcx ; ret
0x00000200001c6af3 : or dword ptr [rbp + 0xf440f50], ecx ; and al, dl ; jmp 0x200001c6b18
0x00000200001de611 : or dword ptr [rbp + 1], 0 ; add byte ptr [rax - 9], cl ; ret
0x00000200003bb72e : or dword ptr [rbp + 1], esi ; ret
0x00000200005e0c6e : or dword ptr [rbp + 3], ecx ; ret 0x4166
0x0000020000423d0e : or dword ptr [rbp + 3], esi ; xor eax, eax ; ret
0x00000200000e8633 : or dword ptr [rbp + 5], esi ; add rsp, 0x28 ; ret
0x000002000011c9b9 : or dword ptr [rbp + 7], esi ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000007128d : or dword ptr [rbp + 9], esi ; ret
0x00000200003dbb75 : or dword ptr [rbp + rcx*4 + 5], ecx ; ret
0x0000020000063045 : or dword ptr [rbp - 0x73], 0x3b498914 ; ret 0x1274
0x0000020000224013 : or dword ptr [rbp - 0x73], eax ; pop rdx ; or eax, dword ptr [rcx + 0x3b] ; ret
0x0000020000229b33 : or dword ptr [rbp - 0x73], eax ; push rbx ; or eax, dword ptr [rcx + 0x3b] ; ret 0x1075
0x0000020000543492 : or dword ptr [rbp - 0x76], eax ; ret
0x0000020000521a91 : or dword ptr [rbp - 0x7b], ecx ; dec dword ptr [rdi] ; test cl, bh ; ret
0x00000200001a99dc : or dword ptr [rbp - 0x7b], ecx ; leave ; jne 0x200001a99c2 ; xor eax, eax ; ret
0x0000020000779a49 : or dword ptr [rbp - 0x7cb7fe88], ecx ; ret
0x00000200005461f7 : or dword ptr [rbx + 0x18], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004391eb : or dword ptr [rbx + 0x18], eax ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000014018 : or dword ptr [rbx + 0x1f7401fa], eax ; mov rax, r8 ; ret
0x0000020000054878 : or dword ptr [rbx + 0x74], 0x40 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000acd7e : or dword ptr [rbx + 6], 0 ; add bh, bh ; ret 0x8b48
0x0000020000629e80 : or dword ptr [rbx + rdi + 0x41], ecx ; xor byte ptr [rdx + 3], dh ; xor eax, eax ; ret
0x0000020000206713 : or dword ptr [rbx + rdi - 0x3f], ecx ; jne 0x20000206706 ; ret
0x0000020000018847 : or dword ptr [rbx - 0x188bf71e], eax ; mov al, 1 ; ret
0x00000200006c04f5 : or dword ptr [rbx - 0x3474b729], ecx ; call rax
0x000002000063b8eb : or dword ptr [rbx - 0x361af6f3], eax ; call qword ptr [rax]
0x00000200000ac230 : or dword ptr [rbx - 0x49f0f81f], eax ; ret 0x3b48
0x0000020000014804 : or dword ptr [rbx], ecx ; ret 0xeeeb
0x000002000065283f : or dword ptr [rbx], edi ; ret 0x1e74
0x00000200001e3841 : or dword ptr [rbx], edi ; ret 0xa74
0x000002000016ad1c : or dword ptr [rbx], edi ; stc ; dec dword ptr [rax + 0x63] ; ret
0x000002000040c4b2 : or dword ptr [rbx], esi ; jmp 0x2000040c47c
0x00000200004809b1 : or dword ptr [rbx], esi ; ret 0x2348
0x00000200004a97d2 : or dword ptr [rbx], esi ; ret 0x9489
0x000002000049d501 : or dword ptr [rbx], esi ; ret 0xc069
0x00000200004809d9 : or dword ptr [rbx], esi ; ret 0xd233
0x0000020000021d7e : or dword ptr [rbx], esi ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000118c37 : or dword ptr [rbx], esi ; rol byte ptr [rbx - 0x6df0e107], 0xc0 ; ret
0x000002000006810e : or dword ptr [rbx], esi ; ror byte ptr [rax + 0x3b], 0xca ; sete al ; ret
0x0000020000104a05 : or dword ptr [rbx], esi ; ror byte ptr [rax + 0x3b], 0xd1 ; seta al ; ret
0x000002000052b5f7 : or dword ptr [rcx + 0x18], eax ; mov eax, dword ptr [rdx + 0x24] ; or dword ptr [rcx + 0x24], eax ; ret
0x000002000022bd11 : or dword ptr [rcx + 0x23], eax ; ret
0x0000020000748dc9 : or dword ptr [rcx + 0x23], ecx ; fimul word ptr [rax + 0x2b] ; fmul dword ptr [rax - 0x75] ; ret
0x00000200001dd8ee : or dword ptr [rcx + 0x23], ecx ; ret
0x00000200000104c7 : or dword ptr [rcx + 0x23], ecx ; ret 0x2b48
0x000002000001059c : or dword ptr [rcx + 0x23], ecx ; ret 0x2b49
0x000002000008beb9 : or dword ptr [rcx + 0x23], ecx ; ret 0xba49
0x0000020000010324 : or dword ptr [rcx + 0x23], ecx ; ror byte ptr [rcx + 0x23], cl ; ret 0x2b49
0x000002000052b5fd : or dword ptr [rcx + 0x24], eax ; ret
0x00000200005fa79a : or dword ptr [rcx + 0x38], eax ; pop rcx ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000077a03c : or dword ptr [rcx + 0x3b], eax ; ret
0x000002000020a2fb : or dword ptr [rcx + 0x3b], eax ; ret 0x976
0x0000020000170b35 : or dword ptr [rcx + 0x3b], ecx ; ret
0x000002000013124d : or dword ptr [rcx + 0x6bc], 0x10 ; ret
0x0000020000680a03 : or dword ptr [rcx + 0x78], edx ; ret
0x0000020000545f89 : or dword ptr [rcx + 0x98], 1 ; ret
0x00000200006809fd : or dword ptr [rcx + 0x98], edx ; or dword ptr [rcx + 0x78], edx ; ret
0x00000200000385ae : or dword ptr [rcx + 0xa], eax ; mov eax, edx ; ret
0x00000200000385ad : or dword ptr [rcx + 0xa], r8d ; mov eax, edx ; ret
0x000002000044f420 : or dword ptr [rcx + 0xd0], 0xffffffff ; jmp 0x2000044f3f4
0x00000200001ab6b7 : or dword ptr [rcx + 0xf], eax ; mov dh, 0x40 ; add cl, byte ptr [rax + 0xf] ; stosd dword ptr [rdi], eax ; ret 0xd148
0x0000020000521da7 : or dword ptr [rcx + 0xf], eax ; mov esi, 0x37e883c0 ; jmp 0x20000521d7c
0x000002000003c73b : or dword ptr [rcx + 3], ecx ; ret 0x8949
0x000002000014f5c9 : or dword ptr [rcx + 8], 4 ; ret
0x000002000003e545 : or dword ptr [rcx + 8], edx ; ret
0x0000020000122f7b : or dword ptr [rcx + r9*4 + 0x6f8db0], 0xffffffff ; ret
0x0000020000016679 : or dword ptr [rcx + rax*8 + 8], eax ; ret
0x00000200001bef37 : or dword ptr [rcx + rcx*4 + 0x11], eax ; ret
0x0000020000482a86 : or dword ptr [rcx + rcx*4 + 0x24], ecx ; ret
0x0000020000122f7c : or dword ptr [rcx + rcx*4 + 0x6f8db0], 0xffffffff ; ret
0x000002000048e098 : or dword ptr [rcx - 0x18], 8 ; ret
0x0000020000777215 : or dword ptr [rcx - 0x45d9f3fb], ecx ; push rsi ; ret 0xf02
0x00000200006821ca : or dword ptr [rcx - 0x73], ecx ; or al, 0xeb ; add ecx, dword ptr [rax - 0x75] ; ret 0x8548
0x00000200004431e6 : or dword ptr [rcx - 0x73], ecx ; push rdi ; ror byte ptr [rcx - 0x75], 1 ; iretd ; call rax
0x000002000021ed3a : or dword ptr [rcx - 0x75], eax ; cmp byte ptr [rbx], r13b ; ret
0x0000020000176dbb : or dword ptr [rcx - 0x75], eax ; ret
0x000002000005217d : or dword ptr [rcx - 0x75], eax ; ret 0x3b48
0x00000200000436fd : or dword ptr [rcx - 0x75], ecx ; ret 0x8b49
0x000002000010cbb4 : or dword ptr [rcx - 0x75], ecx ; ret 0xb9c3
0x0000020000462caf : or dword ptr [rcx - 0x75], esi ; ret 0x8b48
0x000002000001da5f : or dword ptr [rcx - 0x76], eax ; ret
0x0000020000038529 : or dword ptr [rcx - 0x7d], 0xffffffe8 ; add al, 0x83 ; ret 0xebe0
0x0000020000225620 : or dword ptr [rcx - 0x7d], eax ; ret 0x75ff
0x00000200004e119c : or dword ptr [rcx - 0x7d], ecx ; ret 0x4802
0x00000200001a37da : or dword ptr [rcx - 1], eax ; ret 0x8d48
0x0000020000090312 : or dword ptr [rcx - 1], eax ; ret 0xc88b
0x000002000015a082 : or dword ptr [rcx - 1], ecx ; ret
0x000002000053f71a : or dword ptr [rcx], 0x1b800 ; add byte ptr [rax], al ; ret
0x000002000044c9d5 : or dword ptr [rcx], 0x20000000 ; ret
0x00000200005d6261 : or dword ptr [rcx], 0xffffffff ; mov eax, 0xc000000d ; ret
0x000002000002426f : or dword ptr [rcx], 0xffffffff ; ret
0x00000200000f0f5e : or dword ptr [rcx], 4 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004073e5 : or dword ptr [rcx], 4 ; xor eax, eax ; ret
0x000002000001e681 : or dword ptr [rcx], eax ; add al, al ; ret
0x000002000076bdb6 : or dword ptr [rcx], eax ; add rsp, 0x38 ; ret
0x00000200000203cd : or dword ptr [rcx], eax ; mov byte ptr [rcx + 8], al ; ret
0x0000020000082b98 : or dword ptr [rcx], ebx ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000ef792 : or dword ptr [rdi + 0x1b], esi ; mov eax, 8 ; ret
0x000002000009085a : or dword ptr [rdi + 0xf000002], 0xffffffb7 ; ret 0x3948
0x000002000018a255 : or dword ptr [rdi - 0x74b6000f], eax ; ret
0x00000200000dd6e4 : or dword ptr [rdi], 0xffffffb7 ; ret
0x000002000021364f : or dword ptr [rdi], ecx ; add cl, byte ptr [rax + 0x33] ; ret
0x0000020000031058 : or dword ptr [rdi], ecx ; mov bh, 0xc2 ; mov rax, qword ptr [rcx + rax*8 + 8] ; ret
0x0000020000016674 : or dword ptr [rdi], ecx ; mov bh, 0xc2 ; or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x00000200001969ce : or dword ptr [rdi], ecx ; mov dh, 0x87 ; ret
0x0000020000061bea : or dword ptr [rdi], ecx ; mov dh, 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000074bde : or dword ptr [rdi], ecx ; mov edx, 0x12721ae1 ; mov eax, edx ; ret
0x0000020000413d23 : or dword ptr [rdi], ecx ; mov edx, 0x8721be1 ; mov eax, edx ; ret
0x00000200000b75d9 : or dword ptr [rdi], ecx ; mov edx, 0x9721ee0 ; xor eax, eax ; ret
0x00000200003e1ef6 : or dword ptr [rdi], ecx ; sub ebp, -0xf ; sbb byte ptr [rax], al ; mov al, 1 ; ret
0x0000020000459d11 : or dword ptr [rdi], ecx ; xchg dword ptr [rax + rbx*8 + 0x63480014], edx ; ret
0x00000200001bfbf3 : or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc28b
0x00000200006b403a : or dword ptr [rdi], ecx ; xchg eax, esp ; sal esi, 5 ; pop rbx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x1ff
0x00000200000581e7 : or dword ptr [rdx + 0x16], eax ; ret
0x00000200000581e6 : or dword ptr [rdx + 0x16], r8d ; ret
0x00000200001380ec : or dword ptr [rdx + 0x18], 0x20 ; mov eax, 0xffff ; ret
0x00000200001362e4 : or dword ptr [rdx + 0x18], 0x20 ; or eax, 0xffffffff ; ret
0x0000020000176860 : or dword ptr [rdx + 0x20], 1 ; inc dword ptr [rcx + 0x3c] ; ret
0x000002000017689c : or dword ptr [rdx + 0x38], 1 ; inc dword ptr [rcx] ; ret
0x00000200003f2992 : or dword ptr [rdx + 0x39], esi ; xor eax, eax ; ret
0x00000200000ea7dd : or dword ptr [rdx + rax*2], esp ; cmp al, 2 ; je 0x200000ea7fa ; mov al, 1 ; ret
0x0000020000532096 : or dword ptr [rdx - 0x19], esi ; mov eax, 0xc0000001 ; ret
0x00000200005639e7 : or dword ptr [rdx - 0x27], edi ; jmp qword ptr [rdx]
0x00000200001be6f9 : or dword ptr [rdx - 9], 0xffffffff ; add rsp, 0x58 ; ret
0x000002000052eba7 : or dword ptr [rdx], 0x10 ; ret
0x000002000014f5c4 : or dword ptr [rdx], 0xffffffff ; ret
0x00000200001f4380 : or dword ptr [rdx], eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200001f4435 : or dword ptr [rdx], eax ; ret
0x0000020000671ed4 : or dword ptr [rdx], ecx ; ret
0x0000020000134f90 : or dword ptr [rdx], edi ; ret 0x5675
0x00000200006ca956 : or dword ptr [rip + 0x136b7], 0x10 ; ret
0x000002000014f799 : or dword ptr [rip + 0x22fadd], ecx ; ret
0x0000020000044d41 : or dword ptr [rip + 0x287f39], ecx ; ret
0x000002000077839d : or dword ptr [rip - 0x475563], edi ; jmp 0x20000754655
0x000002000039d5a0 : or dword ptr [rip - 0xc19b2], ecx ; ret
0x000002000060791a : or dword ptr [rsi + 0x10], 2 ; xor edx, edx ; call 0x20000231019
0x00000200000ab7b7 : or dword ptr [rsi + 0x16], 0xe ; add bh, bh ; ret 0x8d4c
0x00000200006159b4 : or dword ptr [rsi + 0x2b], esp ; ret 0xb70f
0x00000200001356a5 : or dword ptr [rsi + 0x3b], esp ; ret 0x1174
0x0000020000120077 : or dword ptr [rsi + 0x41000000], 0xffffffff ; ret
0x00000200001ff9d7 : or dword ptr [rsi + 0xb], esp ; ret 0x8966
0x0000020000455551 : or dword ptr [rsi + rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001c118a : or dword ptr [rsi - 0x7b], esp ; sal byte ptr [rbp + 4], cl ; mov dword ptr [r8], eax ; ret
0x00000200004905b3 : or dword ptr [rsi], ebx ; ret
0x000002000014f7eb : or dword ptr [rsp], 0 ; ret
0x00000200001ef8d6 : or dword ptr cs:[rax - 0x75], ecx ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000641273 : or eax, 0x10538b48 ; mov rcx, rdi ; call r8
0x00000200001c6023 : or eax, 0x1194d8 ; ret
0x00000200001b1e56 : or eax, 0x12061d ; call r9
0x00000200001b1515 : or eax, 0x120f5e ; call r9
0x00000200001afe1d : or eax, 0x122656 ; call r9
0x00000200001afa85 : or eax, 0x1229ee ; call r9
0x00000200001af705 : or eax, 0x122d6e ; call r9
0x00000200001aeaed : or eax, 0x123986 ; lea ecx, dword ptr [rax + 0x7b] ; call r9
0x00000200001ae1c9 : or eax, 0x1242aa ; call r9
0x00000200001ad743 : or eax, 0x124d30 ; call r9
0x00000200001ad46b : or eax, 0x125008 ; call r9
0x00000200001acf0c : or eax, 0x125567 ; call r9
0x00000200001acdd3 : or eax, 0x1256a0 ; call r9
0x00000200001acbd7 : or eax, 0x12589c ; call r9
0x00000200001ac3a3 : or eax, 0x1260d0 ; call r9
0x00000200001b40fb : or eax, 0x144338 ; ret
0x00000200001b356d : or eax, 0x1462ee ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200001b2abe : or eax, 0x148285 ; ret
0x00000200001b2a6f : or eax, 0x1482dc ; ret
0x0000020000182dc4 : or eax, 0x14d697 ; call 0x200000deff7
0x00000200000e9b66 : or eax, 0x154a65 ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000020000183153 : or eax, 0x158d30 ; call rax
0x000002000015c247 : or eax, 0x17ed64 ; call 0x200000684c7
0x000002000009a59b : or eax, 0x18 ; ret
0x0000020000134b5d : or eax, 0x18f49e ; ret
0x0000020000137c2f : or eax, 0x199b0c ; sete al ; ret
0x00000200001677bb : or eax, 0x19cbc0 ; call 0x20000053a7f
0x0000020000542432 : or eax, 0x1b6d69 ; ret
0x00000200001c0bdf : or eax, 0x1bd4cc ; ret
0x00000200001c05cb : or eax, 0x1bec9a ; mov al, dl ; ret
0x000002000013141e : or eax, 0x1c738d ; add rsp, 0x48 ; ret
0x0000020000020fc6 : or eax, 0x1c8b4d04 ; ret
0x0000020000113233 : or eax, 0x1cc110 ; ret
0x00000200001320ac : or eax, 0x1d1617 ; ret
0x00000200001ab7b0 : or eax, 0x1d2857 ; cmova eax, ecx ; ret
0x00000200001a3bee : or eax, 0x1da491 ; jmp 0x2000012fe47
0x00000200001257db : or eax, 0x1dd658 ; ret
0x000002000014a8fb : or eax, 0x1e ; sub r9, r8 ; jmp r9
0x0000020000044ced : or eax, 0x1fde86 ; movups xmmword ptr [rcx + 0x70], xmm1 ; ret
0x00000200000f7db2 : or eax, 0x1ff835 ; jmp 0x200000f7d82
0x000002000004d640 : or eax, 0x20c48348 ; pop rbx ; ret
0x00000200006bb940 : or eax, 0x2276b ; ret
0x000002000066c35f : or eax, 0x22c00000 ; ret
0x000002000014f79a : or eax, 0x22fadd ; ret
0x000002000014f609 : or eax, 0x232b32 ; lea rax, qword ptr [rcx + rax*8] ; ret
0x000002000006747f : or eax, 0x24448900 ; xor dh, dh ; ret
0x0000020000435baf : or eax, 0x248c8d48 ; ret 0
0x0000020000489cc8 : or eax, 0x26fffb ; add rsp, 0x38 ; ret
0x0000020000044d42 : or eax, 0x287f39 ; ret
0x00000200006b5167 : or eax, 0x28f50 ; add rsp, 0x28 ; ret
0x00000200000f03f2 : or eax, 0x292959 ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000004c1d1 : or eax, 0x2b663a ; call 0x200000684c7
0x0000020000040d58 : or eax, 0x2b9e1f ; jae 0x20000040d67 ; ret
0x00000200000c18e2 : or eax, 0x2bd969 ; je 0x200000c18f5 ; xor al, al ; ret
0x000002000007471e : or eax, 0x30aafd ; sete al ; ret
0x00000200006a2326 : or eax, 0x30dbde31 ; ret 0xc556
0x0000020000043d6c : or eax, 0x33c54f ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200000d5239 : or eax, 0x33d38b48 ; leave ; call 0x200000d1508
0x0000020000038a76 : or eax, 0x34a2d5 ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000020000030f12 : or eax, 0x34e691 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200000b25c4 : or eax, 0x38c48348 ; ret
0x000002000044e419 : or eax, 0x3b48fff3 ; ret 0x830f
0x00000200002070f3 : or eax, 0x41000d13 ; mov eax, eax ; ret
0x00000200005fc538 : or eax, 0x41c00000 ; mov eax, eax ; ret
0x0000020000203512 : or eax, 0x41c00000 ; mov eax, ecx ; ret
0x00000200000efbb0 : or eax, 0x41c12b4c ; mov eax, eax ; ret
0x00000200004436cf : or eax, 0x48000000 ; add esp, 0x38 ; ret
0x000002000075918f : or eax, 0x48000000 ; add esp, 0x68 ; ret
0x000002000004b7ef : or eax, 0x4800000a ; add esp, 0x28 ; ret
0x00000200006905bb : or eax, 0x48000075 ; add esp, 0x40 ; pop rbx ; ret
0x000002000009b457 : or eax, 0x48002607 ; mov eax, dword ptr [rax + rcx*8] ; ret
0x000002000000ad5b : or eax, 0x4801b000 ; add esp, 0x28 ; ret
0x0000020000154ec6 : or eax, 0x48900005 ; add esp, 0x30 ; pop rbp ; ret
0x00000200006b2bd2 : or eax, 0x4890ffa9 ; add esp, 0x70 ; pop rbx ; ret
0x000002000001e81f : or eax, 0x48c00000 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000117d38 : or eax, 0x48c00000 ; add esp, 0x20 ; pop rdi ; ret
0x0000020000057c6b : or eax, 0x48c00000 ; add esp, 0x28 ; ret
0x00000200001bbd88 : or eax, 0x48c00000 ; add esp, 0x30 ; pop rbx ; ret
0x00000200001afba7 : or eax, 0x48c00000 ; add esp, 0x38 ; ret
0x00000200001b5325 : or eax, 0x48c00000 ; add esp, 0x40 ; pop rbx ; ret
0x00000200005fc586 : or eax, 0x48c00000 ; add esp, 0x48 ; ret
0x0000020000773e46 : or eax, 0x48c0940f ; add esp, 0x20 ; pop rbp ; ret
0x000002000040173d : or eax, 0x48d18b48 ; mov ecx, dword ptr [rdi + 8] ; call rax
0x00000200000b386b : or eax, 0x48d4800 ; sbb dword ptr [rax + 0x3b], ecx ; ret 0xbd76
0x0000020000134937 : or eax, 0x48d68b48 ; mov ecx, ebx ; call r14
0x000002000013494c : or eax, 0x48d68b48 ; mov ecx, edi ; call r14
0x00000200001c6047 : or eax, 0x48ffea35 ; add esp, 0x28 ; ret
0x00000200001ba1ff : or eax, 0x48ffecf5 ; add esp, 0x38 ; ret
0x000002000041f7f7 : or eax, 0x48ffff43 ; add esp, 0x40 ; pop rbx ; ret
0x0000020000135d07 : or eax, 0x48ffffff ; add esp, 0x38 ; ret
0x00000200000bff2f : or eax, 0x518b4100 ; or byte ptr [rbx], bh ; ret 0x830f
0x00000200006a294b : or eax, 0x56fac27d ; outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x000002000011cd5f : or eax, 0x598b0849 ; or dh, dh ; ret
0x0000020000183162 : or eax, 0x64a75 ; call rax
0x000002000077f135 : or eax, 0x6b000001 ; ret
0x00000200006dc15c : or eax, 0x6b6d3d80 ; ret 0xff
0x00000200003fa88d : or eax, 0x70518948 ; xor eax, eax ; ret
0x000002000047ea2c : or eax, 0x74c00000 ; and dword ptr [rcx - 0x75], ecx ; ret
0x000002000017207a : or eax, 0x75b5d ; call rax
0x000002000061809a : or eax, 0x76ea3b41 ; or byte ptr [rcx - 0x75], al ; ret 0x4566
0x000002000014643d : or eax, 0x7d69 ; jmp rcx
0x0000020000016903 : or eax, 0x81410001 ; ret 0x3039
0x0000020000758fa6 : or eax, 0x8148fffa ; ret
0x00000200000a66a7 : or eax, 0x81490000 ; ret 0xc0
0x000002000057be7c : or eax, 0x81c00000 ; jmp qword ptr [rbx]
0x0000020000468700 : or eax, 0x83000000 ; call qword ptr [rax]
0x000002000072cea6 : or eax, 0x83480000 ; ret
0x00000200006c2ae9 : or eax, 0x83480673 ; ret
0x00000200001b02ad : or eax, 0x8348c1ff ; ret 0x8308
0x000002000063b852 : or eax, 0x8348c7ff ; ret
0x00000200005871d3 : or eax, 0x8366fff6 ; ret 0x4002
0x00000200000b0cda : or eax, 0x83be0f00 ; ret
0x00000200000db3e8 : or eax, 0x840f0022 ; ret 1
0x00000200004f4967 : or eax, 0x8548ffd4 ; leave ; je 0x200004f4981 ; ret
0x000002000042fda4 : or eax, 0x8a000000 ; ret
0x00000200001a6d7f : or eax, 0x8a003137 ; ret
0x0000020000645f53 : or eax, 0x8b000000 ; ret
0x00000200004f3edf : or eax, 0x8b000005 ; ret
0x00000200006103ff : or eax, 0x8b440006 ; ret 0x34c
0x0000020000592578 : or eax, 0x8b44ffed ; sar byte ptr [rbx], 1 ; ret
0x0000020000090d54 : or eax, 0x8b480000 ; ret 0x8b4d
0x000002000012e76b : or eax, 0x8b480002 ; ret
0x00000200004ae7d9 : or eax, 0x8b48284f ; push rdi ; sub dh, dh ; ret 0x740f
0x00000200004ae1e8 : or eax, 0x8b48284f ; push rdi ; sub dh, dh ; ret 0xf0f
0x000002000012e4a2 : or eax, 0x8b48fffc ; ret
0x0000020000051744 : or eax, 0x8b49004d ; pop rbp ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004ae308 : or eax, 0x8b49284e ; push rsi ; sub dh, dh ; ret 0xf0f
0x0000020000531668 : or eax, 0x8b4c000a ; ret 0x8b49
0x00000200003b2531 : or eax, 0x8b74568b ; ret
0x0000020000680ebb : or eax, 0x8b90ffe9 ; ret
0x00000200001e4baa : or eax, 0x8bc00000 ; ret
0x000002000065b3ed : or eax, 0x8bc00000 ; ret 0x8b48
0x00000200001dbc18 : or eax, 0x8bca8b48 ; ret
0x000002000065876f : or eax, 0x8bffae7c ; ret
0x000002000051096f : or eax, 0x8bffc2fa ; ret
0x000002000039e50f : or eax, 0x8bffd1e8 ; ret
0x00000200004030ff : or eax, 0x8bffe2df ; ret
0x0000020000410c4f : or eax, 0x8bffec71 ; jmp 0x20000410c6e
0x000002000014c56f : or eax, 0x9000001f ; ret
0x000002000002157c : or eax, 0xa80013c2 ; or byte ptr [rdi], cl ; test dword ptr [rcx], esi ; ret 0x13
0x0000020000647d41 : or eax, 0xb1d3a ; jne 0x20000647d54 ; xor al, al ; ret
0x00000200000c01df : or eax, 0xb3884400 ; ret
0x000002000006b5fa : or eax, 0xb60f0011 ; ret 0xfe24
0x00000200003ce86c : or eax, 0xba0f0472 ; jmp 0x200003ce887
0x0000020000216daa : or eax, 0xc0070000 ; add rsp, 0x38 ; ret
0x0000020000571123 : or eax, 0xc032ffe7 ; ret
0x000002000007335b : or eax, 0xc033c300 ; ret
0x00000200001ab776 : or eax, 0xc0350000 ; ret
0x00000200002070f5 : or eax, 0xc08b4100 ; ret
0x0000020000207157 : or eax, 0xc2f64100 ; or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xba0f
0x00000200001bfc17 : or eax, 0xc3118948 ; mov dword ptr [rcx], edx ; ret
0x00000200002070eb : or eax, 0xc38b4100 ; ret
0x0000020000057b16 : or eax, 0xc4814800 ; test al, 0 ; add byte ptr [rax], al ; ret
0x00000200000bb203 : or eax, 0xc4834800 ; pop r12 ; pop rbx ; ret
0x00000200002075fb : or eax, 0xd0900 ; add rsp, 0x28 ; ret
0x00000200005ccc1f : or eax, 0xd262c ; call 0x200003d8e9f
0x00000200001fb61a : or eax, 0xd56a9 ; ret
0x00000200001ae399 : or eax, 0xd7058b48 ; adc al, byte ptr [rax] ; call rax
0x00000200005ccbf4 : or eax, 0xd78b4800 ; call 0x200003d8e9f
0x00000200005ccbf3 : or eax, 0xd78b4800 ; call 0x200003d8ea0
0x0000020000158ec4 : or eax, 0xd8bffeb ; ret
0x000002000063615d : or eax, 0xe8c88b48 ; pop rdx ; ret 0xffa8
0x000002000060ed83 : or eax, 0xe8d68b41 ; test byte ptr [rdx], ah ; ret 0x48ff
0x0000020000140355 : or eax, 0xe9000000 ; and bl, bl ; add byte ptr [rax], al ; ret
0x00000200005ad365 : or eax, 0xe9c00000 ; or eax, edx ; jmp 0x200005ad373
0x0000020000586069 : or eax, 0xe9c00000 ; ret
0x000002000067043b : or eax, 0xe9c00000 ; ret 0
0x00000200005c5a91 : or eax, 0xe9c00000 ; ret 0xf002
0x000002000056e8cf : or eax, 0xe9c00000 ; ret 0xf6cb
0x00000200005a9c11 : or eax, 0xe9c00000 ; sbb al, 0xc2 ; jmp 0x200005a9c1f
0x00000200001a08ba : or eax, 0xe9fff85f ; ret
0x000002000068eec3 : or eax, 0xeb800000 ; add bh, bh ; ret
0x000002000068ee53 : or eax, 0xeb800000 ; add eax, dword ptr [rcx - 1] ; ret
0x00000200005651fa : or eax, 0xebc00000 ; adc byte ptr [rcx - 0x75], cl ; ret
0x0000020000123ee0 : or eax, 0xebc00000 ; jmp 0x1ffc322c840
0x0000020000467d82 : or eax, 0xebc00000 ; or al, 0x41 ; inc edx ; jmp 0x20000467d79
0x00000200003d7ee0 : or eax, 0xebc00000 ; ret
0x000002000005c782 : or eax, 0xebc00000 ; ret 0x8348
0x00000200004e43ae : or eax, 0xebc00000 ; ret 0xbbbb
0x0000020000649821 : or eax, 0xf18418b ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x0000020000041c3b : or eax, 0xf6001253 ; ret 0x7503
0x0000020000207156 : or eax, 0xf641000d ; ret 0xf08
0x0000020000613d87 : or eax, 0xf704ce83 ; ret
0x000002000010de59 : or eax, 0xfc000000 ; ret
0x0000020000148dfa : or eax, 0xff49228a ; ret 0xc9ff
0x00000200006beafa : or eax, 0xffa541c1 ; jmp rax
0x00000200006be89e : or eax, 0xffa5441d ; jmp rax
0x000002000076a5e5 : or eax, 0xffad26ae ; call 0x20000399b2c
0x000002000076d242 : or eax, 0xffb6be19 ; add rsp, 0x28 ; ret
0x000002000076d9de : or eax, 0xffb6c8ad ; ret
0x000002000076e03c : or eax, 0xffb6dbbf ; ret
0x000002000076cefd : or eax, 0xffb6ef1e ; ret
0x000002000076e2ae : or eax, 0xffb89969 ; add rsp, 0x28 ; ret
0x000002000076b078 : or eax, 0xffb8cd5f ; ret
0x000002000076d092 : or eax, 0xffb95b8d ; ret
0x0000020000782c76 : or eax, 0xffbadf9d ; xor eax, eax ; ret
0x00000200006d7365 : or eax, 0xffbed1c6 ; add rsp, 0x28 ; ret
0x00000200006d7002 : or eax, 0xffbfac19 ; ret
0x000002000076ecd5 : or eax, 0xffc0f355 ; ret
0x00000200006c576a : or eax, 0xffc12fc9 ; ret
0x00000200006b6eb2 : or eax, 0xffc19165 ; call rax
0x00000200006c1da9 : or eax, 0xffc1ca6e ; ret
0x00000200006a8f65 : or eax, 0xffc4b74b ; ret
0x0000020000673971 : or eax, 0xffc5edea ; xor edx, edx ; call 0x200000cfb99
0x0000020000635aa4 : or eax, 0xffc8f373 ; cmova eax, ecx ; ret
0x000002000061e8d2 : or eax, 0xffcc04b9 ; mov qword ptr [rcx + 8], r9 ; ret
0x000002000061e872 : or eax, 0xffcc0521 ; jmp 0x2000061e842
0x000002000061e794 : or eax, 0xffcc05ff ; jmp 0x2000061e764
0x000002000061e6e8 : or eax, 0xffcc06b3 ; mov qword ptr [rcx + 8], rdx ; ret
0x0000020000604a9f : or eax, 0xffd14964 ; call rax
0x00000200005c6eba : or eax, 0xffd15709 ; ret
0x00000200005f55a2 : or eax, 0xffd24ad1 ; add rsp, 0x28 ; ret
0x00000200005dd50f : or eax, 0xffd25724 ; call rax
0x0000020000587521 : or eax, 0xffd546fa ; call 0x20000053797
0x00000200005974b4 : or eax, 0xffd637b7 ; call 0x200000c36c7
0x0000020000619176 : or eax, 0xffd665fd ; ret
0x00000200005418d5 : or eax, 0xffd9994e ; ret
0x000002000054243a : or eax, 0xffdd6f71 ; ret
0x000002000050ff7f : or eax, 0xffdea774 ; call 0x200000bc257
0x00000200004eef7c : or eax, 0xffdebf75 ; add rsp, 0x28 ; ret
0x00000200004fa2cb : or eax, 0xffdfd9d8 ; ret
0x00000200004c9232 : or eax, 0xffe13361 ; ret
0x00000200004c2073 : or eax, 0xffe386a0 ; call 0x200000e8158
0x00000200004c3aac : or eax, 0xffe50c4f ; call 0x200000eb5b8
0x00000200004a10af : or eax, 0xffe5969c ; call 0x200000c1b38
0x000002000049e8ce : or eax, 0xffe5bd0d ; call 0x200000c1b38
0x000002000049d1a9 : or eax, 0xffe5d2d2 ; call 0x200000bd248
0x000002000049d175 : or eax, 0xffe5d306 ; call 0x200000c1b38
0x000002000049d0c5 : or eax, 0xffe5d3b6 ; call 0x200000bd248
0x000002000049d055 : or eax, 0xffe5d3c6 ; call 0x200000c1b38
0x000002000049cfc2 : or eax, 0xffe5d459 ; call 0x200000bd248
0x000002000049c43d : or eax, 0xffe5e19e ; call 0x200000c1b38
0x000002000049ab10 : or eax, 0xffe606cb ; call 0x200000c1b38
0x000002000049aae6 : or eax, 0xffe606ed ; call 0x200000bc368
0x000002000049aa45 : or eax, 0xffe60796 ; call 0x200000c1b38
0x000002000049786a : or eax, 0xffe63971 ; call 0x200000c1b38
0x000002000048d829 : or eax, 0xffe6ceca ; call 0x200000bc258
0x000002000048d5e3 : or eax, 0xffe6d110 ; call 0x200000bc258
0x000002000048d4b9 : or eax, 0xffe6d23a ; call 0x200000bc258
0x0000020000456f3c : or eax, 0xffea36df ; call 0x2000007f568
0x0000020000456da2 : or eax, 0xffea3879 ; call 0x2000007f3d8
0x0000020000420d7b : or eax, 0xffeabe20 ; call 0x20000045278
0x0000020000429e3f : or eax, 0xffeb260c ; call 0x20000051c00
0x00000200004653a7 : or eax, 0xffeb405c ; call rax
0x000002000041ee6d : or eax, 0xffedd2ba ; ret
0x000002000039d5a1 : or eax, 0xfff3e64e ; ret
0x000002000040dafa : or eax, 0xfff71de1 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x000002000050e27d : or eax, 0xfff8545 ; xchg eax, ebp ; ret
0x00000200001a0bb5 : or eax, 0xfffaf376 ; call 0x200005fce8b
0x0000020000025fed : or eax, 0xfffe ; mov qword ptr [rcx], rax ; mov eax, edx ; ret
0x000002000013930a : or eax, 0xffffffff ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000135987 : or eax, 0xffffffff ; add rsp, 0x30 ; pop rdi ; ret
0x000002000013cc28 : or eax, 0xffffffff ; add rsp, 0x38 ; ret
0x0000020000127fe6 : or eax, 0xffffffff ; jmp 0x20000127fb2
0x000002000046687a : or eax, 0xffffffff ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002359f : or eax, 0xffffffff ; ret
0x00000200000328bf : or eax, 0xffffffff ; test dl, dl ; cmovne eax, ecx ; ret
0x00000200004766d4 : or eax, 1 ; ret
0x00000200001cef64 : or eax, 2 ; mov qword ptr [rcx], r8 ; ret
0x000002000014a9dc : or eax, 7 ; add r9, r8 ; jmp r9
0x00000200006876b1 : or eax, dword ptr [rax + 0x67651f9] ; add cl, 8 ; ret
0x000002000010e636 : or eax, dword ptr [rax + rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000020a2f5 : or eax, dword ptr [rax + rcx + 0x55] ; fsubp st(3) ; or dword ptr [rcx + 0x3b], eax ; ret 0x976
0x0000020000144e27 : or eax, dword ptr [rax - 0x17ffdf9f] ; jmp qword ptr [rax]
0x0000020000146163 : or eax, dword ptr [rax - 0x17ffdf9f] ; ret
0x00000200007328d2 : or eax, dword ptr [rax - 0x78] ; cmp byte ptr [rcx + 3], cl ; ret
0x000002000022a502 : or eax, dword ptr [rax - 0x78] ; cmp byte ptr [rcx + 3], cl ; ret 0xc183
0x000002000048da48 : or eax, dword ptr [rax] ; add al, ch ; and byte ptr [rdi], bl ; ret
0x000002000048dfe1 : or eax, dword ptr [rax] ; add al, ch ; ja 0x2000048e006 ; ret
0x000002000049a0bf : or eax, dword ptr [rax] ; add al, ch ; jns 0x2000049a04f ; ret 0x33ff
0x000002000047fece : or eax, dword ptr [rax] ; add al, ch ; mov bh, dl ; ret
0x00000200004803dd : or eax, dword ptr [rax] ; add al, ch ; mov esi, ebp ; ret
0x000002000049df71 : or eax, dword ptr [rax] ; add al, ch ; out 0x19, eax ; ret 0x48ff
0x00000200004807fe : or eax, dword ptr [rax] ; add al, ch ; pop rdx ; int1 ; ret
0x00000200003fee95 : or eax, dword ptr [rax] ; add al, ch ; ret
0x0000020000480585 : or eax, dword ptr [rax] ; add al, ch ; sal ebx, cl ; ret
0x000002000047febd : or eax, dword ptr [rax] ; add al, ch ; wait ; cli ; ret
0x000002000049df34 : or eax, dword ptr [rax] ; add al, ch ; xor al, 0x1a ; ret 0x48ff
0x000002000048db36 : or eax, dword ptr [rax] ; add al, ch ; xor bl, byte ptr [rsi] ; ret
0x00000200003c5d93 : or eax, dword ptr [rax] ; add bl, ch ; ret 0x19b8
0x000002000051bd59 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; enter 0x5ce8, 0x37 ; ret
0x000002000009827b : or eax, dword ptr [rax] ; add byte ptr [rax - 9], cl ; ret
0x0000020000773b90 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbp ; ret
0x00000200003bc52c : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000490821 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200004acaa1 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x000002000051b6f0 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; call 0x20000140867
0x000002000063b751 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000200004834bc : or eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret
0x0000020000481a73 : or eax, dword ptr [rax] ; add byte ptr [rcx - 0x3f], cl ; call 0x1ffc27b668f
0x00000200004819d8 : or eax, dword ptr [rax] ; add byte ptr [rdx - 0x23a117ff], dh ; ret
0x000002000048383c : or eax, dword ptr [rax] ; add byte ptr [rdx - 0x420517ff], dh ; ret
0x0000020000484385 : or eax, dword ptr [rax] ; add byte ptr [rdx - 0x4a1e17ff], dh ; ret
0x00000200000bbac7 : or eax, dword ptr [rax] ; add rcx, rdx ; jmp rcx
0x000002000002a083 : or eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000074b29 : or eax, dword ptr [rax] ; add rsp, 0x308 ; ret
0x00000200000e9608 : or eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x00000200000062c5 : or eax, dword ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000e959e : or eax, dword ptr [rax] ; add rsp, 0x48 ; pop rdi ; pop rsi ; ret
0x0000020000077960 : or eax, dword ptr [rax] ; add rsp, 0x68 ; ret
0x0000020000519a24 : or eax, dword ptr [rax] ; call 0x20000140385
0x0000020000213481 : or eax, dword ptr [rax] ; call rax
0x00000200000e87c6 : or eax, dword ptr [rax] ; call rdi
0x000002000021af93 : or eax, dword ptr [rax] ; cmp dword ptr [rcx], eax ; jb 0x2000021afa4 ; xor al, al ; ret
0x00000200000076b9 : or eax, dword ptr [rax] ; jmp 0x20000007683
0x000002000001d053 : or eax, dword ptr [rax] ; jmp 0x2000001cdcd
0x000002000021bdb8 : or eax, dword ptr [rax] ; jmp 0x2000021bdea
0x0000020000647d44 : or eax, dword ptr [rax] ; jne 0x20000647d51 ; xor al, al ; ret
0x000002000063f719 : or eax, dword ptr [rax] ; mov eax, 0x2d0 ; ret
0x00000200000e4b70 : or eax, dword ptr [rax] ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000021d485 : or eax, dword ptr [rax] ; mov rcx, rdi ; call rax
0x000002000013fae9 : or eax, dword ptr [rax] ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x000002000051d1d0 : or eax, dword ptr [rax] ; sbb al, 0xc0 ; add rsp, 0x28 ; ret
0x0000020000014fc2 : or eax, dword ptr [rax] ; shr eax, 9 ; and eax, 7 ; ret
0x00000200005191c2 : or eax, dword ptr [rax] ; xor al, al ; ret
0x00000200000dc520 : or eax, dword ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200005172e1 : or eax, dword ptr [rax] ; xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000058ec9e : or eax, dword ptr [rbp + 0x3b] ; ret
0x00000200001a7c66 : or eax, dword ptr [rbp + 3] ; ret
0x00000200001f547c : or eax, dword ptr [rbp - 0x75] ; retf ; mov r8d, edx ; jmp 0x200001f548e
0x0000020000683739 : or eax, dword ptr [rbp - 0x7b] ; in al, -0x75 ; ret
0x000002000073642a : or eax, dword ptr [rbx - 0x7cb7073e] ; ret
0x0000020000739995 : or eax, dword ptr [rbx - 0x7cb7073f] ; ret
0x0000020000224017 : or eax, dword ptr [rcx + 0x3b] ; ret
0x0000020000229b37 : or eax, dword ptr [rcx + 0x3b] ; ret 0x1075
0x000002000040dbc9 : or eax, dword ptr [rcx + 0x728] ; ret
0x000002000064bdbb : or eax, dword ptr [rcx + 3] ; ret
0x000002000013b943 : or eax, dword ptr [rcx - 0x49] ; add dword ptr [rbp - 0x75], eax ; mov r8d, edx ; jmp 0x2000013b975
0x000002000077eedb : or eax, dword ptr [rcx - 0x75] ; mov byte ptr [rdx - 0x73], 0x14 ; sbb ebp, dword ptr [rbx] ; ret 0x341
0x00000200000fb524 : or eax, dword ptr [rcx - 0x75] ; ret
0x000002000022a040 : or eax, dword ptr [rcx - 0x7d] ; ret
0x0000020000224552 : or eax, dword ptr [rcx - 0x7d] ; ret 0x75ff
0x00000200005b31ec : or eax, dword ptr [rcx - 0xa] ; ret 0xf04
0x00000200003997a2 : or eax, dword ptr [rcx - 1] ; ret
0x000002000003ad71 : or eax, dword ptr [rdi + rcx - 0x3b7cb800] ; push rax ; pop rbx ; ret
0x000002000021ebdd : or eax, eax ; jmp 0x2000021ebf6
0x000002000010fd8b : or eax, eax ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000037a22 : or eax, eax ; mov qword ptr [rcx], rax ; ret
0x0000020000143c69 : or eax, eax ; wrmsr ; ret
0x000002000040f4cb : or eax, ebp ; out dx, eax ; call rbx
0x000002000013ffbf : or eax, ebp ; sub edi, dword ptr [rdx - 0x4814000e] ; ret
0x00000200001f4c77 : or eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b907b : or eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001355a1 : or eax, ecx ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000159580 : or eax, ecx ; mov qword ptr [r8 + 0x28], rax ; ret
0x0000020000115cfb : or eax, ecx ; or rax, rcx ; ret
0x0000020000115cfe : or eax, ecx ; ret
0x000002000001d348 : or eax, edx ; add dword ptr [rax], eax ; ret 1
0x000002000020901b : or eax, edx ; add rsp, 0x28 ; ret
0x0000020000014805 : or eax, edx ; jmp 0x200000147f8
0x00000200001b6a3e : or eax, edx ; jmp 0x200001b6a52
0x00000200001b6a3e : or eax, edx ; jmp 0x200001b6a57
0x000002000021ecde : or eax, edx ; jmp 0x2000021ecef
0x00000200005ad36a : or eax, edx ; jmp 0x200005ad36e
0x00000200005f3074 : or eax, edx ; jmp 0x200005f3091
0x00000200000ec2de : or eax, edx ; jne 0x200000ec2f1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b2178 : or eax, edx ; mov qword ptr [r8], rax ; ret
0x0000020000062fe0 : or eax, edx ; mov qword ptr [r9 + 8], rax ; ret
0x0000020000148a93 : or eax, edx ; pop rdi ; ret
0x000002000008b55f : or eax, edx ; ret
0x00000200001272cc : or eax, edx ; sub rax, r8 ; ret
0x00000200000f4ace : or eax, esi ; btr dword ptr [rdx], 0x14 ; mov byte ptr [rdx + 0x7c], al ; ret
0x0000020000012554 : or eax, esi ; cmpxchg qword ptr [rdx], rcx ; jne 0x20000012555 ; ret
0x000002000013124b : or eax, esi ; or dword ptr [rcx + 0x6bc], 0x10 ; ret
0x0000020000143c68 : or eax, r8d ; wrmsr ; ret
0x00000200001d9e9b : or ebp, 0x28 ; jmp 0x200001d9ecf
0x00000200000fb52b : or ebp, dword ptr [rbx] ; ret 0x341
0x000002000075cad1 : or ebp, dword ptr [rcx] ; ret 0x41ff
0x00000200000c1909 : or ebp, dword ptr [rdi + 0x21] ; add byte ptr [rax], al ; je 0x200000c18f2 ; mov al, 1 ; ret
0x000002000068830b : or ebp, eax ; ret 0xffaa
0x0000020000688255 : or ebp, eax ; std ; ret 0xffaa
0x00000200006882a7 : or ebp, eax ; stosd dword ptr [rdi], eax ; ret 0xffaa
0x00000200006881bb : or ebp, eax ; xchg eax, edi ; ret
0x0000020000495dce : or ebp, eax ; xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001e1374 : or ebp, ebx ; dec dword ptr [rax - 0x75] ; ret
0x000002000063b8ee : or ebp, esp ; leave ; call qword ptr [rax]
0x00000200001dd97a : or ebx, 4 ; call 0x200000d9be5
0x000002000062b793 : or ebx, 8 ; call 0x2000045386d
0x000002000019d49b : or ebx, dword ptr [rsi] ; add byte ptr [rbx], ch ; ret
0x000002000003cc1d : or ebx, eax ; mov eax, 0xc0000225 ; ret
0x000002000007128f : or ebx, eax ; mov rax, qword ptr [r8] ; lock dec dword ptr [rax + 0xc] ; ret
0x00000200001f0a82 : or ecx, 0xffffffff ; cmp eax, 0xfd ; cmova eax, ecx ; ret
0x00000200005c5207 : or ecx, 8 ; call 0x20000071475
0x000002000011380b : or ecx, dword ptr [r8 + 0xa] ; jne 0x2000011381c ; mov al, 1 ; ret
0x0000020000007a68 : or ecx, dword ptr [rax + 0x2b] ; ret 0x3d48
0x00000200006d2bd0 : or ecx, dword ptr [rax + 0x3b] ; ret
0x00000200000ddeeb : or ecx, dword ptr [rax + 0x3b] ; ret 0x860f
0x000002000011416a : or ecx, dword ptr [rax + 0x3b] ; ret 0x974
0x000002000001e83b : or ecx, dword ptr [rax + 0x3b] ; ret 0xae72
0x000002000005c826 : or ecx, dword ptr [rax + 0x3b] ; ret 0xd572
0x000002000022d335 : or ecx, dword ptr [rax + 0x69] ; ret 0x2710
0x00000200001a8df7 : or ecx, dword ptr [rax + 0x69] ; ret 0xdf3
0x000002000011380c : or ecx, dword ptr [rax + 0xa] ; jne 0x2000011381b ; mov al, 1 ; ret
0x00000200000a844d : or ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x740f
0x00000200001789fc : or ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7501
0x0000020000447d1d : or ecx, dword ptr [rax - 0x75] ; and al, 0x40 ; call rax
0x0000020000448fa8 : or ecx, dword ptr [rax - 0x75] ; and al, 0x60 ; call rax
0x00000200006b48e9 : or ecx, dword ptr [rax - 0x75] ; enter -0x76b7, 0x43 ; adc dh, dh ; ret
0x00000200003ee7c2 : or ecx, dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001ef8f7 : or ecx, dword ptr [rax - 0x75] ; fmul dword ptr [rax - 0x75] ; ret
0x000002000005294f : or ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; mov eax, r8d ; ret
0x00000200001fca86 : or ecx, dword ptr [rax - 0x75] ; ret
0x00000200003a3bb7 : or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200003a27b1 : or ecx, dword ptr [rax - 0x75] ; ror dword ptr [rax - 0x75], cl ; ret
0x000002000021d2ae : or ecx, dword ptr [rax - 0x77] ; add cl, byte ptr [rax - 0x7d] ; ret 0x4c08
0x0000020000675ab9 : or ecx, dword ptr [rax - 0x77] ; pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x0000020000097a85 : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000200006c1c83 : or ecx, dword ptr [rax - 0x7d] ; ret 0x4828
0x00000200001358e8 : or ecx, dword ptr [rax - 0x7d] ; ret 0x6602
0x00000200004adc5e : or ecx, dword ptr [rax - 0x7d] ; ret 0x8310
0x00000200005702b9 : or ecx, dword ptr [rax - 0x7d] ; ret 0xe838
0x00000200001f8b7c : or ecx, dword ptr [rax - 1] ; ret
0x0000020000105c54 : or ecx, dword ptr [rax - 9] ; ret
0x000002000076e9fb : or ecx, dword ptr [rax] ; sar edi, -0x7d ; loopne 0x2000076ea0a ; ret
0x000002000050cfe5 : or ecx, dword ptr [rbp + 3] ; ret 0x16e8
0x00000200001c6692 : or ecx, dword ptr [rbp - 0x75] ; ret
0x00000200001dbdd9 : or ecx, dword ptr [rbp - 0x75] ; ret 0x8149
0x000002000077efe0 : or ecx, dword ptr [rbx + 0x148d43c6] ; or ebp, dword ptr [rbx] ; ret 0x341
0x000002000051b66f : or ecx, dword ptr [rbx + 0x3480841] ; ret 0x3b48
0x00000200001c3265 : or ecx, dword ptr [rbx + 0x3484041] ; ret 0x3b48
0x00000200001dc1ec : or ecx, dword ptr [rbx + 0x3484042] ; ret
0x0000020000123a52 : or ecx, dword ptr [rcx + rcx*4 + 0x13] ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005af335 : or ecx, dword ptr [rcx - 0x75] ; or byte ptr [r8 + 0x23], r9b ; ret
0x00000200001e3230 : or ecx, dword ptr [rcx - 0x75] ; ret
0x000002000016834e : or ecx, dword ptr [rcx - 0x75] ; ret 0x2348
0x000002000012ffe8 : or ecx, dword ptr [rcx - 0x75] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000022a05e : or ecx, dword ptr [rcx - 0x7d] ; ret
0x000002000062c4a9 : or ecx, dword ptr [rcx - 0x7d] ; ret 0x8310
0x0000020000200351 : or ecx, dword ptr [rcx - 0x7d] ; ret 0x8b10
0x0000020000666e3f : or ecx, dword ptr [rcx - 1] ; ret
0x0000020000139752 : or ecx, dword ptr [rdi + rcx + 0x44] ; ror dword ptr [rcx - 0x75], cl ; ret 0x2ce9
0x000002000004a8b6 : or ecx, dword ptr [rdi] ; mov bh, 0x43 ; add cl, byte ptr [rax - 0x7d] ; ret
0x00000200006882bb : or ecx, dword ptr [rdi] ; test dword ptr [rax], edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006882fb : or ecx, dword ptr [rdi] ; test edi, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000532b5c : or ecx, dword ptr [rdx] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001ef8f6 : or ecx, dword ptr cs:[rax - 0x75] ; fmul dword ptr [rax - 0x75] ; ret
0x000002000002bf07 : or ecx, eax ; mov qword ptr [rdx + 0x10], rcx ; pop rsi ; ret
0x000002000059ab67 : or ecx, ebp ; dec dword ptr [rax - 0x75] ; ret
0x0000020000186e88 : or ecx, esi ; dec dword ptr [rax - 0x73] ; add dword ptr [rcx + 0x3b], ecx ; ret 0x860f
0x000002000067e217 : or edi, dword ptr [rbx] ; ret
0x00000200004bb360 : or edi, dword ptr [rdi + 0x10] ; add byte ptr [rdi], cl ; mov bh, 0x48 ; add bh, bh ; ret 0x348
0x00000200005813f1 : or edi, dword ptr [rip - 0x6117002b] ; ret
0x0000020000498878 : or edi, dword ptr [rsp + 0x30] ; call 0x200000bc287
0x00000200005a4b40 : or edi, eax ; call 0x200001cb461
0x000002000018be2f : or edi, eax ; jmp 0x200000a7cd9
0x00000200000754a1 : or edi, ebx ; add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000002000077b2ef : or edi, edi ; add ecx, ebp ; ret 0xfe7e
0x00000200005d6262 : or edi, edi ; mov eax, 0xc000000d ; ret
0x0000020000020d4f : or edi, edi ; ret
0x00000200000dde98 : or edi, edi ; ret 0x2348
0x00000200001e323b : or edi, edi ; ret 0x3b41
0x00000200005d5876 : or edi, edi ; ret 0x8349
0x000002000059eb77 : or edi, edi ; ret 0x8b44
0x000002000043bb6b : or edi, edi ; ret 0x9489
0x000002000047e1f6 : or edi, edi ; ret 0xc103
0x00000200001054a1 : or edi, edi ; ret 0xe8eb
0x0000020000629e96 : or edi, edi ; ret 0xfa83
0x00000200001f0f5f : or edi, edi ; ret 0xff41
0x00000200002069fe : or edi, edi ; sar dword ptr [rbx], -0x36 ; jb 0x200002069f4 ; xor eax, eax ; ret
0x00000200006852b1 : or edi, esp ; ret
0x000002000004056c : or edx, 0x500 ; mov qword ptr [r8], rdx ; ret
0x0000020000786a5f : or edx, 0xffffffff ; call qword ptr [rax]
0x000002000001ee8e : or edx, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000426341 : or edx, dword ptr [rip - 0x76b7ffff] ; add ebp, ebx ; ret 0x8b8
0x00000200001b955c : or edx, dword ptr [rsi] ; add dh, dh ; ret
0x000002000002d626 : or edx, eax ; mov dword ptr [rcx + 0x10], edx ; xor eax, eax ; ret
0x00000200004e85b9 : or edx, eax ; mov word ptr [rcx + 2], dx ; xor eax, eax ; ret
0x00000200003df279 : or edx, ebp ; sbb byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004166d2 : or edx, ebx ; mov qword ptr [rcx], rdx ; mov eax, r8d ; ret
0x00000200000596a2 : or edx, ecx ; cmp r8, rdx ; ja 0x200000596b1 ; ret
0x00000200004e85b8 : or edx, r8d ; mov word ptr [rcx + 2], dx ; xor eax, eax ; ret
0x000002000049d551 : or esi, dword ptr [rbp + 0x29] ; mov rcx, rbx ; call 0x200000c1b39
0x00000200001491eb : or esi, dword ptr [rbp - 0x1d] ; mov rax, r10 ; pop rbx ; ret
0x000002000010d1ea : or esi, dword ptr [rbx] ; rol byte ptr [rcx + 0x69], cl ; ret 0xff
0x000002000060a9a3 : or esi, dword ptr [rbx] ; shr al, cl ; ret 0x45ff
0x000002000051cc71 : or esi, dword ptr [rdi] ; ret 0x48ff
0x000002000007907c : or esi, dword ptr [rdx + 6] ; shr rcx, 0xd ; and eax, ecx ; ret
0x00000200004145c1 : or esi, ebx ; ret
0x0000020000627cff : or esi, ecx ; call 0x200000b3f34
0x0000020000039ba5 : or esi, edi ; ret
0x0000020000419de3 : or esi, esi ; add al, byte ptr [r9] ; jne 0x20000419df6 ; xor eax, eax ; ret
0x000002000019722b : or esi, esi ; dec dword ptr [rbx - 0x9bebfc0] ; ret 0xf04
0x0000020000093bb8 : or esi, esi ; ret
0x00000200006d53b4 : or esi, esi ; ret 0xf02
0x000002000066cb7d : or esp, dword ptr [rdx] ; ret 0x450f
0x000002000015baec : or qword ptr [r8], 0xffffffffffffffff ; mov eax, 0xc0000095 ; ret
0x000002000003e544 : or qword ptr [r9 + 8], rdx ; ret
0x00000200005d6260 : or qword ptr [r9], 0xffffffffffffffff ; mov eax, 0xc000000d ; ret
0x00000200000203cc : or qword ptr [r9], rax ; mov byte ptr [rcx + 8], al ; ret
0x00000200005461f6 : or qword ptr [rbx + 0x18], rax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004391ea : or qword ptr [rbx + 0x18], rax ; add rsp, 0x40 ; pop rbx ; ret
0x000002000014f5c8 : or qword ptr [rcx + 8], 4 ; ret
0x0000020000016678 : or qword ptr [rcx + rax*8 + 8], r8 ; ret
0x000002000002426e : or qword ptr [rcx], 0xffffffffffffffff ; ret
0x00000200005ed552 : or r10b, byte ptr [rax] ; movups xmmword ptr [rax + rcx + 0x10], xmm0 ; ret
0x000002000013f82d : or r11b, al ; mov qword ptr [rcx], rax ; mov dword ptr [rcx + 6], eax ; ret
0x0000020000403f44 : or r11b, bpl ; in al, dx ; mov eax, 0xc0000058 ; ret
0x00000200004fda1a : or r11b, bpl ; ret
0x000002000021ed37 : or r11b, r13b ; or dword ptr [rcx - 0x75], eax ; cmp byte ptr [rbx], r13b ; ret
0x000002000013f7bc : or r14b, al ; mov qword ptr [rdx + rcx - 8], rax ; ret
0x00000200005e251c : or r14b, r14b ; ret
0x0000020000031b43 : or r14b, sil ; ret 0x7401
0x000002000004a5de : or r14b, sil ; ret 0xf1f
0x0000020000498877 : or r15, qword ptr [rsp + 0x30] ; call 0x200000bc288
0x000002000013f7c1 : or r15b, al ; ret
0x00000200000198f4 : or r15b, dil ; ret
0x000002000053f9f4 : or r15b, dil ; ret 0x8948
0x0000020000525d95 : or r15b, dil ; ret 0x8b48
0x000002000018be2e : or r15d, eax ; jmp 0x200000a7cda
0x00000200001cef63 : or r8, 2 ; mov qword ptr [rcx], r8 ; ret
0x000002000021d484 : or r8, qword ptr [r8] ; mov rcx, rdi ; call rax
0x0000020000513b05 : or r8b, bpl ; je 0x20000513ac5 ; ret
0x0000020000503abc : or r8b, bpl ; pop rbp ; std ; ret
0x00000200005fb996 : or r8b, bpl ; ret
0x00000200005d3957 : or r8b, bpl ; ret 0xb6fe
0x000002000065689e : or r8b, bpl ; wait ; xor al, 0x9e ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000044658 : or r8b, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001f130f : or r8b, r13b ; adc al, byte ptr [rax + rax] ; add cl, ch ; ret 2
0x00000200006176db : or r8b, r13b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; ret 0xffb0
0x000002000051d644 : or r8b, r13b ; jne 0x2000051d66c ; ret
0x00000200004343c2 : or r8b, r13b ; ret
0x0000020000400577 : or r8b, r13b ; ret 0xc73c
0x0000020000579657 : or r8b, r13b ; ret 0xf23c
0x00000200006c60e4 : or r8b, r13b ; ret 0xff9b
0x00000200005f3073 : or r8d, edx ; jmp 0x200005f3092
0x0000020000169a06 : or r9b, bpl ; ret
0x000002000077c4bd : or r9b, bpl ; sub dl, byte ptr [rax - 0x74b70002] ; ret 0x2b49
0x00000200000df025 : or r9b, byte ptr [rax] ; cmp ax, word ptr [r8] ; jb 0x200000df019 ; ret
0x000002000059ab66 : or r9d, r13d ; dec dword ptr [rax - 0x75] ; ret
0x0000020000135986 : or rax, 0xffffffffffffffff ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000127fe5 : or rax, 0xffffffffffffffff ; jmp 0x20000127fb3
0x000002000040dbc8 : or rax, qword ptr [rcx + 0x728] ; ret
0x000002000021ebdc : or rax, r8 ; jmp 0x2000021ebf7
0x000002000010fd8a : or rax, r8 ; mov qword ptr [rcx + 8], rax ; ret
0x0000020000037a21 : or rax, r8 ; mov qword ptr [rcx], rax ; ret
0x0000020000115cfa : or rax, r9 ; or rax, rcx ; ret
0x00000200001f4c76 : or rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b907a : or rax, rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000015957f : or rax, rcx ; mov qword ptr [r8 + 0x28], rax ; ret
0x0000020000115cfd : or rax, rcx ; ret
0x000002000020901a : or rax, rdx ; add rsp, 0x28 ; ret
0x00000200001b6a3d : or rax, rdx ; jmp 0x200001b6a53
0x00000200001b6a3d : or rax, rdx ; jmp 0x200001b6a58
0x000002000021ecdd : or rax, rdx ; jmp 0x2000021ecf0
0x00000200001b2177 : or rax, rdx ; mov qword ptr [r8], rax ; ret
0x0000020000062fdf : or rax, rdx ; mov qword ptr [r9 + 8], rax ; ret
0x0000020000148a92 : or rax, rdx ; pop rdi ; ret
0x000002000008b55e : or rax, rdx ; ret
0x00000200001272cb : or rax, rdx ; sub rax, r8 ; ret
0x00000200001dd979 : or rbx, 4 ; call 0x200000d9be6
0x000002000002bf06 : or rcx, rax ; mov qword ptr [rdx + 0x10], rcx ; pop rsi ; ret
0x00000200005a4b3f : or rdi, rax ; call 0x200001cb462
0x00000200004166d1 : or rdx, r11 ; mov qword ptr [rcx], rdx ; mov eax, r8d ; ret
0x00000200000596a1 : or rdx, rcx ; cmp r8, rdx ; ja 0x200000596b2 ; ret
0x0000020000627cfe : or rsi, r9 ; call 0x200000b3f35
0x000002000011380d : or sil, byte ptr [rbp + 3] ; mov al, 1 ; ret
0x00000200005622c4 : or sil, spl ; push rdi ; ret
0x00000200000385ac : or word ptr [rcx + 0xa], r8w ; mov eax, edx ; ret
0x00000200000581e5 : or word ptr [rdx + 0x16], r8w ; ret
0x0000020000033d99 : out -0x10, eax ; xadd qword ptr [r10 + 0x20], rax ; ret
0x000002000017fd77 : out -0x11, eax ; dec dword ptr [rax - 0x75] ; ret
0x0000020000643921 : out -0x15, eax ; sbb byte ptr [rbp - 0x75], al ; ret
0x0000020000611dd7 : out -0x18, eax ; ret
0x0000020000487b24 : out -0x18, eax ; xchg eax, esi ; ret 0xfffb
0x000002000016e738 : out -0x2e, eax ; stc ; inc dword ptr [rbp - 0x75] ; ret 0x8b48
0x0000020000489356 : out -0x2f, eax ; call 0x2004258559c
0x0000020000440a56 : out -0x30, eax ; dec dword ptr [rax - 0x75] ; ret
0x00000200003eb735 : out -0x3e, eax ; int 0xff
0x0000020000521653 : out -0x40, eax ; mov r12d, r9d ; call 0x2000014f4c8
0x000002000065b3eb : out -0x46, eax ; or eax, 0x8bc00000 ; ret 0x8b48
0x00000200000d39cf : out -0x48, eax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000532098 : out -0x48, eax ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000629e9f : out -0x48, eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200006ab875 : out -0x49, eax ; ret
0x00000200006c2ed5 : out -0x4f, eax ; add dword ptr [rax], eax ; ret
0x000002000056cff4 : out -0x50, eax ; call rcx
0x0000020000165145 : out -0x66, eax ; call qword ptr [rax - 0x12a93d17]
0x000002000072d885 : out -0x75, eax ; fild word ptr [rcx - 0x75] ; ret 0xeac1
0x0000020000503703 : out -0x75, eax ; fsubr st(0) ; jne 0x200005036db ; ret
0x0000020000503702 : out -0x75, eax ; fsubr st(0) ; jne 0x200005036dc ; ret
0x00000200001edcd2 : out -0x75, eax ; ret 0x6948
0x0000020000065e68 : out -0x75, eax ; ret 0x8948
0x00000200001c6953 : out -0x75, eax ; ret 0x8b44
0x00000200000927d8 : out -0x75, eax ; ret 0x8b49
0x00000200004e6ae8 : out -0x77, eax ; xchg dword ptr [r8 - 0x75], r9d ; ret
0x00000200006857c8 : out -0x7c, eax ; fstp xword ptr [rcx + 0x14] ; jmp 0x200006857e1
0x0000020000685854 : out -0x7c, eax ; fstp xword ptr [rcx + 0x31] ; jmp 0x2000068586d
0x000002000072d16f : out -0x7d, eax ; ret
0x0000020000736a1a : out -0x7d, eax ; ret 0x75ff
0x000002000074708d : out -0x7f, eax ; ret
0x0000020000682ab9 : out -0xa, eax ; ret
0x000002000039c88d : out -0xd, eax ; dec dword ptr [rax + 0x63] ; ret 0x8348
0x000002000039c8b6 : out -0xd, eax ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x000002000051433a : out -0xd, eax ; movq qword ptr [rbp + 0x1f], mm0 ; call 0x200001403e9
0x00000200001d7e26 : out -1, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021f12f : out -1, eax ; add rsp, 0x28 ; ret
0x0000020000212e96 : out -1, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001a99a2 : out -1, eax ; add rsp, 0x38 ; ret
0x00000200001a9b3f : out -1, eax ; add rsp, 0x58 ; ret
0x000002000050397c : out -1, eax ; cmp r8, rdx ; sete al ; ret
0x00000200002075a7 : out -1, eax ; mov byte ptr [rbx], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001e854a : out -1, eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005760c4 : out -1, eax ; mov rcx, rdi ; call 0x200000c23c7
0x000002000057627c : out -1, eax ; mov rcx, rdi ; call 0x200000c2547
0x00000200001aa106 : out -1, eax ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000688649 : out -1, eax ; ret
0x00000200006888a1 : out -1, eax ; ret 0x5589
0x0000020000571124 : out -1, eax ; xor al, al ; ret
0x000002000021cee3 : out -8, eax ; dec dword ptr [rcx - 0x77] ; adc byte ptr [r9 - 0x75], al ; ret 0x8949
0x00000200000c2cf5 : out -9, eax ; or al, 0 ; add rsp, 0x28 ; ret
0x0000020000413146 : out 0, eax ; add al, al ; ret
0x000002000073640c : out 0, eax ; add byte ptr [rax], al ; and bh, dh ; fistp word ptr [rbx] ; jmp qword ptr [rbx]
0x00000200004583c7 : out 0x14, al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000002000042c8ca : out 0x16, eax ; add byte ptr [rbp - 0x3f60f040], al ; ret
0x000002000049df75 : out 0x19, eax ; ret 0x48ff
0x000002000009c601 : out 0x1f, al ; jmp 0x2000009c2a2
0x00000200005a4b3d : out 0x1f, eax ; or rdi, rax ; call 0x200001cb464
0x00000200004ccfc2 : out 0x24, al ; ret 0x85ff
0x0000020000499ac5 : out 0x2c, eax ; ret 0x89ff
0x000002000013cebf : out 0x30, eax ; ret 0x3b88
0x000002000049f555 : out 0x32, eax ; ret 0x48ff
0x0000020000030f14 : out 0x34, al ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x000002000042acae : out 0x34, al ; ret 0x48ff
0x000002000053e082 : out 0x37, eax ; add dh, dh ; ret 0x7502
0x0000020000122f6f : out 0x37, eax ; add dh, dh ; ret 0xf02
0x00000200005600f6 : out 0x41, eax ; mov cl, ah ; mov dword ptr [rsp + 0x20], eax ; call r10
0x00000200006d5f6a : out 0x48, al ; add esp, 0x20 ; pop rbx ; ret
0x000002000076a827 : out 0x48, al ; add esp, 0x30 ; pop rbx ; ret
0x0000020000133add : out 0x48, al ; mov eax, ecx ; ret
0x00000200001334ed : out 0x48, al ; mov eax, edx ; add rsp, 0x38 ; ret
0x000002000005b107 : out 0x48, eax ; add esp, 0x20 ; pop rbx ; ret
0x0000020000668518 : out 0x48, eax ; add esp, 0x28 ; ret
0x0000020000426b8a : out 0x48, eax ; mov dword ptr [rsp + 0x20], eax ; call r12
0x000002000042547b : out 0x48, eax ; mov eax, ecx ; ret
0x000002000044c96c : out 0x49, al ; lea eax, dword ptr [rax + 0x18] ; ret
0x00000200005bc3ad : out 0x57, eax ; ret 0x90ff
0x00000200004ad8f6 : out 0x60, al ; ret 0x84ff
0x000002000050c756 : out 0x62, al ; ret
0x000002000051a095 : out 0x62, eax ; ret 0x8bff
0x00000200003ca416 : out 0x6b, al ; ret
0x00000200004543f9 : out 0x6c, eax ; sar bh, 0x8b ; ret
0x00000200001d6d5f : out 0x75, eax ; adc dword ptr [rbp - 0x7b], eax ; ret
0x0000020000757536 : out 0x7c, al ; ret 0x48ff
0x00000200006b0485 : out 0x7c, al ; ret 0xff
0x00000200006885b6 : out 0x8b, al ; ret
0x00000200001d05ce : out 0x98, al ; lock inc dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x0000020000754c22 : out 0xa5, al ; ret 0x41ff
0x00000200004ec68e : out 0xa9, al ; ret 0x48ff
0x000002000077e400 : out 0xb5, al ; dec dword ptr [rax - 0x75] ; fisttp word ptr [rax - 1] ; ret
0x000002000077e500 : out 0xb5, al ; push rsi ; ret
0x000002000076c3a5 : out 0xb6, al ; call qword ptr [rbx]
0x000002000076d632 : out 0xb6, al ; inc dword ptr [rsi] ; ret
0x00000200006abd7e : out 0xb7, al ; ret
0x00000200006d7b6a : out 0xbd, al ; ret 0x40ff
0x000002000057ac72 : out 0xbe, al ; ret 0x48ff
0x0000020000627cfc : out 0xc, al ; or rsi, r9 ; call 0x200000b3f37
0x00000200006b26b6 : out 0xc0, al ; ret 0x89ff
0x000002000004360a : out 0xcc, al ; and dword ptr [rcx + 4], 0 ; ret
0x00000200000af8de : out 0xd, al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000440ab5 : out 0xd0, al ; dec dword ptr [rax - 0x75] ; ret
0x000002000051299c : out 0xd1, al ; dec dword ptr [rbx - 0xbbdbac] ; ret 0x5489
0x00000200004eccbf : out 0xde, al ; dec dword ptr [rax - 0x39] ; ret 0x5d00
0x0000020000483b46 : out 0xdf, al ; ret
0x00000200005f3af6 : out 0xe1, al ; ret
0x00000200003dc626 : out 0xe2, al ; ret
0x00000200005cb649 : out 0xe9, al ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xfff4
0x00000200001352d9 : out 0xeb, al ; or al, 0x49 ; mov eax, ebx ; ret
0x00000200003db186 : out 0xee, al ; ret
0x000002000061624f : out 0xf0, al ; dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x0000020000690c1e : out 0xf4, al ; ret
0x00000200004f3496 : out 0xfc, al ; ret
0x0000020000209066 : out 0xff, al ; add rsp, 0x38 ; ret
0x000002000048d4bc : out 0xff, al ; call 0x200000bc255
0x000002000049aae9 : out 0xff, al ; call 0x200000bc365
0x000002000049786d : out 0xff, al ; call 0x200000c1b35
0x0000020000471c03 : out 0xff, al ; call 0x200000ee958
0x0000020000454f88 : out 0xff, al ; jmp 0x20000454f2a
0x0000020000454f87 : out 0xff, al ; jmp 0x20000454f2b
0x0000020000454f86 : out 0xff, al ; jmp 0x20000454f2c
0x00000200001c16d5 : out 0xff, al ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001bc5d8 : out 0xff, al ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000056294e : out 0xff, al ; mov rcx, rbp ; call 0x2000004ec1f
0x000002000056282a : out 0xff, al ; mov rcx, rbx ; call 0x2000004eb27
0x000002000021f074 : out 0xff, al ; movzx eax, al ; add rsp, 0x28 ; ret
0x00000200001bb477 : out 0xff, al ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200004977c4 : out 0xff, al ; xor edx, edx ; call 0x200000c2847
0x00000200001a134d : out 1, al ; add byte ptr [rax], al ; jmp 0x200001a131b
0x00000200000710ac : out 1, al ; add byte ptr [rax], al ; ret
0x000002000004632b : out 1, al ; add byte ptr [rbx], bh ; ret
0x000002000074693e : out 2, eax ; add al, ch ; ret 0x179
0x00000200005ecd36 : out 3, eax ; idiv edi ; ret
0x000002000066aa56 : out 8, al ; add byte ptr [rbp + rcx*4 + 0x55], al ; adc dword ptr [rcx - 0x75], ecx ; ret 0x48f0
0x000002000018c330 : out 9, eax ; sub rdi, rax ; jmp 0x200000a854a
0x0000020000454bd5 : out dx, al ; adc dword ptr [rax - 9], ecx ; ret
0x000002000041943c : out dx, al ; add bh, bh ; ret
0x00000200000d1c7e : out dx, al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x00000200000bd98a : out dx, al ; add ch, bl ; ret 0x8b48
0x000002000050d6af : out dx, al ; add dword ptr [rax], eax ; add bh, bh ; ret 0xfa83
0x00000200000b651b : out dx, al ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x33], cl ; fimul dword ptr [rax - 9] ; ret
0x00000200001202a8 : out dx, al ; add eax, -1 ; jne 0x200001202a5 ; ret
0x000002000053f44c : out dx, al ; add ebp, ebx ; add eax, 0xff008b48 ; ret
0x00000200005fa83d : out dx, al ; add esi, dword ptr [rbx] ; jmp qword ptr [rcx]
0x00000200000473df : out dx, al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000012681 : out dx, al ; and dword ptr [rbx + 0xc], 0 ; mov eax, edx ; jmp 0x20000012676
0x000002000011caf8 : out dx, al ; bts edi, 0x13 ; jmp 0x2000011caf0
0x000002000017310e : out dx, al ; call qword ptr [rax - 0x5721a17]
0x00000200000bab2c : out dx, al ; cmp rdx, rax ; ja 0x200000bab26 ; ret
0x00000200001834f0 : out dx, al ; dec dword ptr [rax + 0x3b] ; ret 0xc74
0x00000200005be43e : out dx, al ; dec dword ptr [rax - 0x73] ; push rbp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; mov rcx, r10 ; call rax
0x000002000017adf5 : out dx, al ; dec dword ptr [rax - 0x75] ; ret
0x0000020000178ea9 : out dx, al ; dec dword ptr [rax - 0x75] ; ret 0x2b48
0x000002000040dcc0 : out dx, al ; dec dword ptr [rax - 0x75] ; ret 0x83c3
0x0000020000543b2b : out dx, al ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000179a02 : out dx, al ; dec dword ptr [rcx - 0x75] ; sub byte ptr [r8 - 0x75], r9b ; ret 0xc148
0x00000200005be5c9 : out dx, al ; inc dword ptr [rcx - 0x7d] ; ret 0xc7f0
0x000002000040b1b8 : out dx, al ; inc dword ptr [rcx] ; xor eax, eax ; ret
0x000002000017abce : out dx, al ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x000002000053991e : out dx, al ; jbe 0x200005398f9 ; inc dword ptr [rbp + 0x53880fdb] ; ret 9
0x000002000017c6e4 : out dx, al ; jmp 0x2000017c6da
0x00000200001d7bbe : out dx, al ; lodsb al, byte ptr [rsi] ; call 0x1ffc39ec4ca
0x00000200001c285d : out dx, al ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x00000200004fcba9 : out dx, al ; mov byte ptr [rdx + 8], 0 ; mov rax, rdx ; ret
0x000002000003eacd : out dx, al ; mov eax, 1 ; ret
0x0000020000488297 : out dx, al ; mov qword ptr [rdx + r9*8 + 0x70], rcx ; inc dword ptr [rdx + 0x6c] ; ret
0x0000020000737c96 : out dx, al ; mov rax, rdx ; jmp 0x20000737ca1
0x00000200001f630e : out dx, al ; mov word ptr [rdx], cx ; add qword ptr [r8], 2 ; ret
0x00000200003a1f75 : out dx, al ; or al, 0x8b ; ret
0x00000200005fbd1e : out dx, al ; push rdx ; ret
0x000002000017b791 : out dx, al ; push rsi ; ret 0xba01
0x000002000017c77d : out dx, al ; push rsi ; ret 0xf03
0x00000200000bab31 : out dx, al ; ret
0x00000200001e2f4e : out dx, al ; ret 0x19
0x000002000075055b : out dx, al ; ret 0x45ff
0x000002000040df0b : out dx, al ; ret 0x48ff
0x000002000040decb : out dx, al ; ret 0xccff
0x0000020000493013 : out dx, al ; ret 0xe9ff
0x000002000064a506 : out dx, al ; ret 0xffba
0x00000200005ab879 : out dx, al ; ret 0xffeb
0x0000020000105906 : out dx, al ; ret 0xfff4
0x000002000075c057 : out dx, al ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200005a21a6 : out dx, al ; stc ; ret
0x0000020000082391 : out dx, al ; sub rax, r8 ; ret
0x0000020000177219 : out dx, al ; wait ; in eax, dx ; inc dword ptr [rcx - 0x75] ; ret
0x00000200006a884c : out dx, al ; xlatb ; ret
0x000002000004c260 : out dx, al ; xor al, al ; ret
0x00000200001f22e3 : out dx, al ; xor eax, eax ; add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x000002000011cae5 : out dx, eax ; adc dword ptr [rax - 0x7d], ecx ; ret
0x00000200003c5ada : out dx, eax ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2a], al ; ret 0x388
0x0000020000141f95 : out dx, eax ; add byte ptr [rax], al ; add cl, ch ; loop 0x20000141f63 ; add byte ptr [rax], al ; ret
0x000002000041716a : out dx, eax ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000004a63b : out dx, eax ; add byte ptr [rax], al ; mov dword ptr [r8], r9d ; xor eax, eax ; ret
0x000002000056d5c5 : out dx, eax ; add byte ptr [rax], al ; shr cl, 0xd2 ; jmp rsi
0x00000200005cb646 : out dx, eax ; add dword ptr [rbp - 0x1a], esi ; jmp 0x200005178fa
0x000002000011514d : out dx, eax ; add dword ptr [rdi], ecx ; test dword ptr [rbx], esi ; ret 5
0x000002000072d8be : out dx, eax ; add eax, 0x2b08e1c1 ; fadd dword ptr [rcx - 0x75] ; ret 0xe7f7
0x000002000072d8a7 : out dx, eax ; add eax, 0x8b41c82b ; ret 0xe7f7
0x0000020000465bfe : out dx, eax ; add eax, dword ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x870f
0x000002000013e561 : out dx, eax ; add ecx, dword ptr [rax - 0x75] ; add dword ptr [rcx - 0x7d], eax ; ret
0x00000200004cb1b5 : out dx, eax ; and ebx, 0xffffffff ; je 0x200004cb1c9 ; call 0x200000eec55
0x000002000013f7b0 : out dx, eax ; and edx, 0xf ; jne 0x2000013f7bd ; ret
0x0000020000217110 : out dx, eax ; call 0x1ffc3908081
0x00000200005143c5 : out dx, eax ; call 0x20000140484
0x0000020000510ba9 : out dx, eax ; call 0x20000140804
0x0000020000510ba8 : out dx, eax ; call 0x20000140805
0x00000200004e08d9 : out dx, eax ; call rax
0x000002000040f4cd : out dx, eax ; call rbx
0x000002000019d7f8 : out dx, eax ; clc ; dec dword ptr [rax - 9] ; ret
0x00000200001356b6 : out dx, eax ; cmp ax, dx ; jne 0x200001356c9 ; mov rax, rcx ; ret
0x000002000017f8f0 : out dx, eax ; dec dword ptr [rax - 0x3f] ; call qword ptr [rax]
0x000002000017d99d : out dx, eax ; dec dword ptr [rax - 0x73] ; add eax, 0xfffd2b4a ; ret
0x000002000017d9ae : out dx, eax ; dec dword ptr [rax - 0x73] ; add eax, 0xfffd45e9 ; ret
0x000002000017e3a6 : out dx, eax ; dec dword ptr [rax - 0x75] ; ret
0x0000020000119734 : out dx, eax ; dec dword ptr [rax - 0x7d] ; ret
0x000002000017d250 : out dx, eax ; dec dword ptr [rbp - 0x75] ; ret
0x00000200005c2fe0 : out dx, eax ; dec dword ptr [rbx + rcx*4 + 5] ; ret 0xffdb
0x0000020000638c0b : out dx, eax ; dec dword ptr [rbx - 0x98fdba4] ; ret
0x0000020000405783 : out dx, eax ; dec dword ptr [rbx] ; ret
0x0000020000404fbe : out dx, eax ; dec dword ptr [rcx - 0x10a1d9c3] ; push rsi ; ret
0x00000200005a12e5 : out dx, eax ; dec dword ptr [rcx - 0x75] ; pop rsi ; and byte ptr [rax - 0x7f], cl ; ret
0x00000200002175f4 : out dx, eax ; enter 0x4166, 0xf ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000002000049b6ca : out dx, eax ; in eax, -1 ; mov rcx, rdi ; call 0x200000c2849
0x00000200005ba9e3 : out dx, eax ; in eax, dx ; dec dword ptr [rbp + rcx*4 + 5] ; ret
0x00000200003ea81a : out dx, eax ; inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000017e012 : out dx, eax ; inc dword ptr [rbp - 0x75] ; ret
0x000002000017f21a : out dx, eax ; inc dword ptr [rbp - 0x75] ; ret 0x5e9
0x000002000017e707 : out dx, eax ; inc dword ptr [rbp - 0x75] ; ret 0x8b48
0x000002000017dfd1 : out dx, eax ; inc dword ptr [rbp - 0x75] ; ret 0xb60f
0x00000200005c5205 : out dx, eax ; inc dword ptr [rbx + 0x61e808c9] ; ret 0xffaa
0x000002000017d97d : out dx, eax ; inc dword ptr [rcx - 0x75] ; ret 0x8548
0x00000200005c271c : out dx, eax ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200005c22dd : out dx, eax ; inc dword ptr [rdi + rcx + 0x20] ; ret 0x1b8
0x000002000006a04d : out dx, eax ; jmp 0x20000036343
0x000002000040572e : out dx, eax ; jmp qword ptr [rbx]
0x00000200005183b7 : out dx, eax ; lea rax, qword ptr [rip + 0x1e13e1] ; ret
0x00000200004e075a : out dx, eax ; lea rdx, qword ptr [rbp - 0x51] ; mov qword ptr [rbp - 0x51], r11 ; call rax
0x00000200006bb782 : out dx, eax ; lodsb al, byte ptr [rsi] ; je 0x200006bb791 ; xor ecx, ecx ; mov rax, rcx ; ret
0x00000200005f6fed : out dx, eax ; lodsb al, byte ptr [rsi] ; ret
0x00000200006b4aa5 : out dx, eax ; lodsb al, byte ptr [rsi] ; test eax, 0xf10d8bff ; pushfq ; ret 0x48ff
0x00000200001f7543 : out dx, eax ; loop 0x200001f754e ; mov al, 1 ; add rsp, 0x28 ; ret
0x00000200001bf4ef : out dx, eax ; mov al, 1 ; ret
0x00000200004b0619 : out dx, eax ; mov bh, 0xa ; add byte ptr [rcx - 0x7d], al ; ret 0xebe0
0x000002000057627a : out dx, eax ; mov cl, 0xe7 ; dec dword ptr [rax - 0x75] ; iretd ; call 0x200000c2549
0x000002000076ceff : out dx, eax ; mov dh, 0xff ; ret
0x00000200001f6290 : out dx, eax ; mov eax, edx ; ret
0x0000020000135683 : out dx, eax ; mov rax, rcx ; ret
0x000002000073359d : out dx, eax ; mov rax, rdx ; jmp 0x200007335a8
0x0000020000735294 : out dx, eax ; mov rax, rdx ; jmp 0x2000073529f
0x000002000073717a : out dx, eax ; mov rax, rdx ; jmp 0x20000737185
0x0000020000425c46 : out dx, eax ; nop ; add dword ptr [rax], eax ; add al, ch ; mov al, 0x65 ; ret 0xf7ff
0x0000020000181b12 : out dx, eax ; or dword ptr [rax - 0x75], ecx ; ret
0x000002000006747e : out dx, eax ; or eax, 0x24448900 ; xor dh, dh ; ret
0x0000020000213480 : out dx, eax ; or eax, dword ptr [rax] ; call rax
0x00000200006c3e3d : out dx, eax ; pop rax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000050a38d : out dx, eax ; pop rdi ; ret
0x00000200005c4d2f : out dx, eax ; push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000231019
0x0000020000492f9d : out dx, eax ; push rax ; ret 0xe9ff
0x0000020000404fc4 : out dx, eax ; push rsi ; ret
0x000002000017dfeb : out dx, eax ; push rsi ; ret 0x741e
0x000002000003673e : out dx, eax ; ret
0x0000020000520560 : out dx, eax ; ret 0x48ff
0x0000020000750480 : out dx, eax ; ret 0x8dff
0x00000200003d0a6f : out dx, eax ; ret 0xf66
0x00000200005059ed : out dx, eax ; ret 0xffd2
0x00000200005de145 : out dx, eax ; ret 0xffea
0x0000020000531422 : out dx, eax ; sar bh, 0x48 ; add esp, 0x58 ; ret
0x000002000067d0a5 : out dx, eax ; sbb al, 0x83 ; call qword ptr [rax]
0x000002000051418d : out dx, eax ; scasd eax, dword ptr [rdi] ; ret
0x0000020000217573 : out dx, eax ; shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000020000217137 : out dx, eax ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000020000217577 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000002000076570f : out dx, eax ; stc ; dec dword ptr [rax - 0x75] ; ret
0x000002000017b28d : out dx, eax ; sub r9, 1 ; jne 0x2000017b27f ; ret
0x000002000057d1e5 : out dx, eax ; test eax, 0x8b44ffd7 ; ret
0x00000200005dfc1f : out dx, eax ; xor al, al ; ret
0x00000200006cf629 : out dx, eax ; xor eax, 0x8b4c0000 ; ret
0x00000200006cbf47 : out dx, eax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f117e : out dx, eax ; xor eax, eax ; ret
0x000002000039bd39 : out dx, eax ; xor edx, edx ; call 0x20000067f61
0x000002000039bd38 : out dx, eax ; xor edx, edx ; call 0x20000067f62
0x000002000050fb1d : out dx, eax ; xor rcx, rsp ; call 0x20000133187
0x000002000050fb1c : out dx, eax ; xor rcx, rsp ; call 0x20000133188
0x00000200000ac29d : outsb dx, byte ptr [rsi] ; adc byte ptr [rsi], cl ; add byte ptr [rbp + 0x33], al ; sal dh, cl ; ret 0xf1e
0x0000020000170060 : outsb dx, byte ptr [rsi] ; adc dl, bh ; dec dword ptr [rax - 0x39] ; ret 0xfffe
0x00000200003a2b07 : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003a2a0a : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000069be8 : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf01
0x000002000004d20a : outsb dx, byte ptr [rsi] ; add al, byte ptr [rbp - 0x73] ; add word ptr [rcx + 0x3b], cx ; ret 0x6474
0x000002000012580e : outsb dx, byte ptr [rsi] ; add byte ptr [rax + rax], bl ; ret
0x0000020000140f75 : outsb dx, byte ptr [rsi] ; add byte ptr [rax], al ; add cl, ch ; add cl, bh ; add byte ptr [rax], al ; ret
0x00000200000188ad : outsb dx, byte ptr [rsi] ; add byte ptr [rbp + 0x3b], al ; ret 0x6a73
0x0000020000496b67 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add al, ch ; mov al, 0x1c ; ret 0x83ff
0x0000020000589bef : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x850f
0x0000020000485a57 : outsb dx, byte ptr [rsi] ; call 0x20000231ce3
0x0000020000485a56 : outsb dx, byte ptr [rsi] ; call 0x20000231ce4
0x0000020000485a55 : outsb dx, byte ptr [rsi] ; call 0x20000231ce5
0x0000020000485a54 : outsb dx, byte ptr [rsi] ; call 0x20000231ce6
0x000002000005893a : outsb dx, byte ptr [rsi] ; call qword ptr [rcx]
0x0000020000032a41 : outsb dx, byte ptr [rsi] ; call qword ptr [rdx]
0x000002000003bc72 : outsb dx, byte ptr [rsi] ; cdq ; adc al, byte ptr [rax] ; xor eax, eax ; ret
0x000002000067ae51 : outsb dx, byte ptr [rsi] ; jmp 0x1ffc3f2f75b
0x000002000067ae50 : outsb dx, byte ptr [rsi] ; jmp 0x1ffc3f2f75c
0x00000200004cb29a : outsb dx, byte ptr [rsi] ; jmp rax
0x000002000064a4fe : outsb dx, byte ptr [rsi] ; jne 0x2000064a57f ; jp 0x2000064a554 ; mov ecx, ebx ; call 0x200001f6801
0x000002000060147c : outsb dx, byte ptr [rsi] ; jo 0x200006014d0 ; call 0x20000231016
0x0000020000601507 : outsb dx, byte ptr [rsi] ; jo 0x2000060155b ; call 0x20000231016
0x00000200006028f1 : outsb dx, byte ptr [rsi] ; jo 0x20000602948 ; mov rcx, rdi ; call 0x20000231019
0x0000020000603b16 : outsb dx, byte ptr [rsi] ; jo 0x20000603b69 ; mov rcx, rbx ; call 0x20000231019
0x0000020000603b33 : outsb dx, byte ptr [rsi] ; jo 0x20000603b83 ; call 0x20000231016
0x0000020000603b86 : outsb dx, byte ptr [rsi] ; jo 0x20000603bd9 ; mov rcx, rbx ; call 0x20000231019
0x0000020000603bbd : outsb dx, byte ptr [rsi] ; jo 0x20000603c10 ; lea ecx, dword ptr [rdx - 0xf] ; call 0x20000231ce9
0x0000020000603c62 : outsb dx, byte ptr [rsi] ; jo 0x20000603cb5 ; lea ecx, dword ptr [rdx - 0x53] ; call 0x20000231ce9
0x0000020000603fc7 : outsb dx, byte ptr [rsi] ; jo 0x2000060401a ; mov rcx, rsi ; call 0x20000231019
0x0000020000604133 : outsb dx, byte ptr [rsi] ; jo 0x20000604183 ; call 0x20000231ce6
0x00000200006042fd : outsb dx, byte ptr [rsi] ; jo 0x2000060434d ; call 0x20000231ce6
0x0000020000604fbb : outsb dx, byte ptr [rsi] ; jo 0x20000604ff4 ; call 0x20000231ce6
0x00000200006050ad : outsb dx, byte ptr [rsi] ; jo 0x200006050e9 ; mov rcx, rdi ; call 0x20000231019
0x000002000060530f : outsb dx, byte ptr [rsi] ; jo 0x2000060535f ; call 0x20000231ce6
0x00000200006053c2 : outsb dx, byte ptr [rsi] ; jo 0x20000605412 ; call 0x20000231ce6
0x0000020000605412 : outsb dx, byte ptr [rsi] ; jo 0x20000605465 ; mov rcx, rbx ; call 0x20000231019
0x0000020000605424 : outsb dx, byte ptr [rsi] ; jo 0x20000605477 ; mov rcx, rdi ; call 0x20000231019
0x00000200006055d9 : outsb dx, byte ptr [rsi] ; jo 0x2000060562c ; mov rcx, rbx ; call 0x20000231019
0x0000020000605aa0 : outsb dx, byte ptr [rsi] ; jo 0x20000605b04 ; mov rcx, rdi ; call 0x20000231019
0x0000020000605b44 : outsb dx, byte ptr [rsi] ; jo 0x20000605ba8 ; mov rcx, r14 ; call 0x20000231019
0x0000020000605b56 : outsb dx, byte ptr [rsi] ; jo 0x20000605bba ; mov rcx, rdi ; call 0x20000231019
0x0000020000605caf : outsb dx, byte ptr [rsi] ; jo 0x20000605d13 ; mov rcx, rbx ; call 0x20000231019
0x0000020000605f9d : outsb dx, byte ptr [rsi] ; jo 0x20000605ffe ; call 0x20000231016
0x00000200006061c3 : outsb dx, byte ptr [rsi] ; jo 0x20000606224 ; call 0x20000231016
0x00000200006061d5 : outsb dx, byte ptr [rsi] ; jo 0x20000606236 ; call 0x20000231ce6
0x0000020000606263 : outsb dx, byte ptr [rsi] ; jo 0x200006062c4 ; call 0x20000231016
0x00000200006062cc : outsb dx, byte ptr [rsi] ; jo 0x2000060632d ; call 0x20000231016
0x00000200006062e3 : outsb dx, byte ptr [rsi] ; jo 0x20000606344 ; call 0x20000231ce6
0x0000020000606367 : outsb dx, byte ptr [rsi] ; jo 0x200006063c8 ; call 0x20000231016
0x000002000060d127 : outsb dx, byte ptr [rsi] ; jo 0x2000060d182 ; lea ecx, dword ptr [rdx - 0x27] ; call 0x20000231ce9
0x000002000060d176 : outsb dx, byte ptr [rsi] ; jo 0x2000060d1d2 ; lea ecx, dword ptr [rdx - 0x17] ; call 0x20000231ce9
0x000002000060d190 : outsb dx, byte ptr [rsi] ; jo 0x2000060d1eb ; mov rcx, rbx ; call 0x20000231019
0x000002000060d3e5 : outsb dx, byte ptr [rsi] ; jo 0x2000060d440 ; mov rcx, rsi ; call 0x20000231019
0x000002000060d5d0 : outsb dx, byte ptr [rsi] ; jo 0x2000060d627 ; mov rcx, rbx ; call 0x20000231019
0x000002000060e43b : outsb dx, byte ptr [rsi] ; jo 0x2000060e495 ; call 0x20000231016
0x000002000060e44c : outsb dx, byte ptr [rsi] ; jo 0x2000060e4a6 ; call 0x20000231016
0x000002000060e46b : outsb dx, byte ptr [rsi] ; jo 0x2000060e4c5 ; call 0x20000231016
0x000002000060e482 : outsb dx, byte ptr [rsi] ; jo 0x2000060e4dc ; call 0x20000231016
0x000002000060e499 : outsb dx, byte ptr [rsi] ; jo 0x2000060e4f3 ; call 0x20000231016
0x000002000060e4b0 : outsb dx, byte ptr [rsi] ; jo 0x2000060e50a ; call 0x20000231016
0x000002000060e4be : outsb dx, byte ptr [rsi] ; jo 0x2000060e51b ; mov rcx, rbx ; call 0x20000231019
0x000002000060e692 : outsb dx, byte ptr [rsi] ; jo 0x2000060e6ef ; mov rcx, rbx ; call 0x20000231019
0x000002000060e70d : outsb dx, byte ptr [rsi] ; jo 0x2000060e767 ; call 0x20000231016
0x000002000060e822 : outsb dx, byte ptr [rsi] ; jo 0x2000060e87f ; mov rcx, rbx ; call 0x20000231019
0x000002000060e8c4 : outsb dx, byte ptr [rsi] ; jo 0x2000060e920 ; mov ecx, edi ; call 0x20000231ce8
0x000002000060ea23 : outsb dx, byte ptr [rsi] ; jo 0x2000060ea80 ; mov rcx, rsi ; call 0x20000231019
0x000002000060ea35 : outsb dx, byte ptr [rsi] ; jo 0x2000060ea92 ; mov rcx, rdi ; call 0x20000231019
0x000002000060eefe : outsb dx, byte ptr [rsi] ; jo 0x2000060ef58 ; call 0x20000231ce6
0x000002000060ef85 : outsb dx, byte ptr [rsi] ; jo 0x2000060efe2 ; mov rcx, rax ; call 0x20000231019
0x000002000060efe1 : outsb dx, byte ptr [rsi] ; jo 0x2000060f03e ; mov rcx, rdi ; call 0x20000231019
0x000002000060f615 : outsb dx, byte ptr [rsi] ; jo 0x2000060f66f ; call 0x20000231016
0x000002000061005c : outsb dx, byte ptr [rsi] ; jo 0x200006100bc ; call 0x20000231016
0x00000200006101bd : outsb dx, byte ptr [rsi] ; jo 0x2000061021d ; call 0x20000231ce6
0x000002000061024b : outsb dx, byte ptr [rsi] ; jo 0x200006102ab ; call 0x20000231016
0x000002000061026b : outsb dx, byte ptr [rsi] ; jo 0x200006102cb ; call 0x20000231016
0x0000020000610c03 : outsb dx, byte ptr [rsi] ; jo 0x20000610c43 ; mov rcx, rdi ; call 0x20000231019
0x0000020000610c15 : outsb dx, byte ptr [rsi] ; jo 0x20000610c55 ; mov rcx, r13 ; call 0x20000231019
0x0000020000610cbc : outsb dx, byte ptr [rsi] ; jo 0x20000610cf9 ; call 0x20000231ce6
0x0000020000166142 : outsb dx, byte ptr [rsi] ; jp 0x20000166138 ; inc dword ptr [rbp + 0x3b] ; ret 0x840f
0x000002000060f137 : outsb dx, byte ptr [rsi] ; mov rcx, qword ptr [rbp + 0x17] ; mov rdx, rdi ; call rax
0x000002000061624e : outsb dx, byte ptr [rsi] ; out 0xf0, al ; dec dword ptr [rax - 0x75] ; fmul dword ptr [rcx + 0x3b] ; ret
0x00000200004e5ac5 : outsb dx, byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; call 0x20000231ce5
0x00000200004e5ac4 : outsb dx, byte ptr [rsi] ; outsd dx, dword ptr [rsi] ; call 0x20000231ce6
0x000002000048a816 : outsb dx, byte ptr [rsi] ; pop rdi ; ret
0x00000200006a2951 : outsb dx, byte ptr [rsi] ; push rsp ; ret
0x00000200001bf3ee : outsb dx, byte ptr [rsi] ; ret
0x000002000041e9d0 : outsb dx, byte ptr [rsi] ; ret 0x48ff
0x00000200006b78eb : outsb dx, byte ptr [rsi] ; ret 0xa8ff
0x0000020000606e87 : outsb dx, byte ptr [rsi] ; ret 0xb841
0x00000200006a9490 : outsb dx, byte ptr [rsi] ; ret 0xbeff
0x00000200006dbe7c : outsb dx, byte ptr [rsi] ; ret 0xc6ff
0x000002000046029d : outsb dx, byte ptr [rsi] ; ret 0xebff
0x000002000049b9b6 : outsb dx, byte ptr [rsi] ; ret 0xf0ff
0x00000200006dbe5a : outsb dx, byte ptr [rsi] ; ret 0xff
0x00000200005629a6 : outsb dx, byte ptr [rsi] ; ret 0xffae
0x00000200004a5e80 : outsb dx, byte ptr [rsi] ; sar edi, -0x75 ; ret
0x00000200003f16ae : outsb dx, byte ptr [rsi] ; sbb byte ptr [r8], r8b ; add rsp, 0x28 ; ret
0x00000200000443be : outsb dx, byte ptr [rsi] ; sub byte ptr [rax], al ; mov qword ptr [rdx], rax ; ret
0x00000200004b914e : outsb dx, byte ptr [rsi] ; xchg eax, edx ; sar bh, 0x8b ; ret
0x00000200006a2950 : outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x00000200001c9edd : outsd dx, dword ptr [rsi] ; adc byte ptr [r8], r8b ; mov rcx, qword ptr [rsi + 8] ; call qword ptr [rax]
0x0000020000217a31 : outsd dx, dword ptr [rsi] ; add ah, al ; ret 0x7d
0x000002000040bfa0 : outsd dx, dword ptr [rsi] ; add al, 0 ; add rsp, 0x70 ; pop rbp ; ret
0x00000200003a2b19 : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003a2a1c : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000010c1ad : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; add rsp, 0x48 ; ret
0x0000020000122f81 : outsd dx, dword ptr [rsi] ; add bh, bh ; ret
0x0000020000140f95 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add cl, ch ; loop 0x20000140f73 ; add byte ptr [rax], al ; ret
0x00000200005f377c : outsd dx, dword ptr [rsi] ; add byte ptr [rsp + rax - 1], dh ; ret 0x15eb
0x0000020000137198 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbx], ch ; ret
0x000002000052421f : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x840f
0x0000020000142f95 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add cl, ch ; loop 0x20000142f53 ; add byte ptr [rax], al ; ret
0x000002000000729d : outsd dx, dword ptr [rsi] ; add dword ptr [rbx], esi ; fisttp dword ptr [rax - 0x7f] ; jmp qword ptr [rax]
0x00000200004eb581 : outsd dx, dword ptr [rsi] ; add dword ptr [rdi], ecx ; test dword ptr [rbx], edx ; ret
0x000002000011c252 : outsd dx, dword ptr [rsi] ; add eax, 0x1b800 ; add byte ptr [rax], al ; ret
0x000002000011c153 : outsd dx, dword ptr [rsi] ; add eax, 0x75c28500 ; or byte ptr [rbx], cl ; ret 0x3345
0x0000020000058d86 : outsd dx, dword ptr [rsi] ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004eb2cd : outsd dx, dword ptr [rsi] ; call 0x1ff8397b2be
0x00000200004e5ac6 : outsd dx, dword ptr [rsi] ; call 0x20000231ce4
0x00000200005e722f : outsd dx, dword ptr [rsi] ; call 0x200101ef73d
0x00000200001c9989 : outsd dx, dword ptr [rsi] ; in eax, -1 ; add rsp, 0x28 ; ret
0x00000200001307b7 : outsd dx, dword ptr [rsi] ; in eax, dx ; dec dword ptr [rax - 0x73] ; sub byte ptr [r8 - 0x7d], r9b ; ret
0x0000020000121c37 : outsd dx, dword ptr [rsi] ; inc dword ptr [rcx - 0x76] ; or cl, byte ptr [rcx - 1] ; ret 0x8b41
0x000002000050960d : outsd dx, dword ptr [rsi] ; insd dword ptr [rdi], dx ; ret
0x0000020000520863 : outsd dx, dword ptr [rsi] ; int 0xa
0x00000200005f7d6d : outsd dx, dword ptr [rsi] ; lahf ; ret
0x0000020000774da4 : outsd dx, dword ptr [rsi] ; mov eax, 0x8b4910ff ; ret 0xeae9
0x000002000063102d : outsd dx, dword ptr [rsi] ; mov ecx, esi ; jmp qword ptr [rbx]
0x00000200001ae2fb : outsd dx, dword ptr [rsi] ; mov rax, qword ptr [rip + 0x124175] ; call rax
0x00000200001adb05 : outsd dx, dword ptr [rsi] ; mov rax, qword ptr [rip + 0x12496b] ; call rax
0x000002000050c147 : outsd dx, dword ptr [rsi] ; mov rcx, qword ptr [r15] ; call 0x20000133f77
0x0000020000510876 : outsd dx, dword ptr [rsi] ; movdqu xmmword ptr [rbp - 0x59], xmm0 ; call 0x200001403e9
0x0000020000010a02 : outsd dx, dword ptr [rsi] ; or byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200001d6548 : outsd dx, dword ptr [rsi] ; or byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000217c97 : outsd dx, dword ptr [rsi] ; push rax ; loopne 0x20000217c63 ; ret 0x187d
0x000002000065a19d : outsd dx, dword ptr [rsi] ; push rax ; sar bh, cl ; sbb eax, eax ; and eax, 0x46 ; ret
0x000002000009c4b4 : outsd dx, dword ptr [rsi] ; ret
0x00000200002175d0 : outsd dx, dword ptr [rsi] ; ret 0x4166
0x000002000060a99d : outsd dx, dword ptr [rsi] ; ret 0x48ff
0x00000200005281cd : outsd dx, dword ptr [rsi] ; ret 0x4cff
0x00000200004c380c : outsd dx, dword ptr [rsi] ; ret 0x84ff
0x000002000060f3fd : outsd dx, dword ptr [rsi] ; ret 0x85ff
0x0000020000038b61 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000002000052859f : outsd dx, dword ptr [rsi] ; ret 0x8dff
0x00000200004433a7 : outsd dx, dword ptr [rsi] ; ret 0xebff
0x00000200000a24aa : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000020000652efd : outsd dx, dword ptr [rsi] ; ret 0xffde
0x00000200005ccc25 : outsd dx, dword ptr [rsi] ; ret 0xffe0
0x000002000015c24d : outsd dx, dword ptr [rsi] ; ret 0xfff0
0x000002000068964d : outsd dx, dword ptr [rsi] ; ret 0xffff
0x000002000043c49f : outsd dx, dword ptr [rsi] ; sar edi, -0x7d ; ret
0x000002000077b055 : outsd dx, dword ptr [rsi] ; sbb byte ptr [rdi + rcx + 0x22], al ; ret
0x0000020000045720 : outsd dx, dword ptr [rsi] ; sub eax, dword ptr [rax] ; shl rax, 0xc ; ret
0x00000200006da1c9 : outsd dx, dword ptr [rsi] ; xchg eax, edi ; ret 0x40ff
0x000002000004675d : paddb mm7, mm7 ; push rsi ; ret
0x00000200000b0624 : pause ; add rsp, 0x28 ; ret
0x00000200001e37a6 : pause ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003a290d : pause ; mov eax, dword ptr [r8] ; cmp eax, edx ; je 0x200003a2916 ; ret
0x00000200001e37a4 : pause ; pause ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001f77fe : pause ; test al, 1 ; je 0x200001f77f2 ; xor al, al ; ret
0x00000200000444fc : pause ; xor al, al ; ret
0x00000200001c169f : pause ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005248cc : pcmpeqw mm0, qword ptr [rcx + rcx*2] ; mov eax, eax ; ret
0x000002000013f7b3 : pcmpeqw mm0, qword ptr [rcx] ; ret
0x000002000044f2bf : pcmpgtd mm4, qword ptr [r11] ; ret 0x8d49
0x000002000044f2c0 : pcmpgtd mm4, qword ptr [rbx] ; ret 0x8d49
0x00000200005f0029 : pinsrw mm7, edi, -0x75 ; ret
0x00000200001df9e1 : pmaxsw mm7, mm7 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005fbf76 : pop bp ; ret
0x00000200001a23e4 : pop cx ; idiv edi ; mov eax, 1 ; ret
0x00000200005afda1 : pop qword ptr [rax] ; add eax, 0x3de80000 ; ret 0xffc1
0x000002000063d18b : pop qword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xe875
0x0000020000476ee1 : pop qword ptr [rax] ; add eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret 0xea75
0x000002000073bfb8 : pop qword ptr [rbp + rax - 0x74b80000] ; ret 0x8b4c
0x0000020000616d5d : pop qword ptr [rsi] ; ret 0x49ff
0x000002000049bfe1 : pop r11 ; ret 0x45ff
0x00000200001449f6 : pop r12 ; add rsp, 8 ; ret
0x0000020000149053 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000200000095ea : pop r12 ; pop rbp ; pop rbx ; ret
0x000002000000c4af : pop r12 ; pop rbp ; ret
0x000002000008af87 : pop r12 ; pop rbx ; pop rbp ; ret
0x000002000004ab23 : pop r12 ; pop rbx ; ret
0x000002000010587a : pop r12 ; pop rdi ; jmp 0x200000c1b35
0x000002000001225a : pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000018089 : pop r12 ; pop rdi ; pop rbp ; ret
0x000002000007e4f0 : pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000b7f5f : pop r12 ; pop rdi ; pop rbx ; ret
0x00000200001abbe0 : pop r12 ; pop rdi ; pop rcx ; ret
0x0000020000497bc7 : pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; jmp 0x200000ba7e9
0x00000200003ad911 : pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x0000020000008c80 : pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009011b : pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000003152 : pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000003abf : pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000017433 : pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002ce16 : pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000002932 : pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000002c2c : pop r12 ; pop rdi ; ret
0x0000020000062ebc : pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000008a2cd : pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000c9bf6 : pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cca65 : pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000073226 : pop r12 ; pop rsi ; ret
0x000002000039ce93 : pop r12 ; push qword ptr [rsp + rax + 0x41] ; mov al, dl ; ret
0x00000200000072e2 : pop r12 ; ret
0x000002000060b3c5 : pop r12 ; ret 0x4cff
0x00000200004d3d43 : pop r12 ; str word ptr [rax - 0x7d] ; ret 0xeb28
0x00000200003a22db : pop r13 ; pop r12 ; pop rbp ; pop rbx ; ret
0x000002000000c4ad : pop r13 ; pop r12 ; pop rbp ; ret
0x000002000008af85 : pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x0000020000058403 : pop r13 ; pop r12 ; pop rbx ; ret
0x0000020000105878 : pop r13 ; pop r12 ; pop rdi ; jmp 0x200000c1b37
0x0000020000012258 : pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000018087 : pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000007e4ee : pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000b7f5d : pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200003ad90f : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x0000020000008c7e : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000090119 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000003150 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000003abd : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000017431 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002ce14 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000018402 : pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000002c2a : pop r13 ; pop r12 ; pop rdi ; ret
0x0000020000062eba : pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000008a2cb : pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000c9bf4 : pop r13 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cca63 : pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000073224 : pop r13 ; pop r12 ; pop rsi ; ret
0x00000200000228a2 : pop r13 ; pop r12 ; ret
0x0000020000149055 : pop r13 ; pop r14 ; pop r15 ; ret
0x00000200003f329b : pop r13 ; pop rbp ; pop rbx ; ret
0x000002000005fa6e : pop r13 ; pop rbp ; ret
0x00000200000c3c60 : pop r13 ; pop rbx ; pop rbp ; ret
0x00000200000860b3 : pop r13 ; pop rbx ; ret
0x00000200000211e7 : pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000000885c : pop r13 ; pop rdi ; pop rbp ; ret
0x0000020000091236 : pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003f46dc : pop r13 ; pop rdi ; pop rbx ; ret
0x000002000008ee94 : pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000004bd30 : pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000005e8ee : pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000032aa6 : pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000009a4b : pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000008c5c1 : pop r13 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000002a526 : pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000007aa5 : pop r13 ; pop rdi ; ret
0x00000200000c6066 : pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000ab6d5 : pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000d2b39 : pop r13 ; pop rsi ; pop rbx ; ret
0x0000020000008942 : pop r13 ; ret
0x000002000010592c : pop r14 ; jmp 0x20000051bfc
0x000002000010592b : pop r14 ; jmp 0x20000051bfd
0x0000020000475908 : pop r14 ; jmp 0x2000009d695
0x000002000049b7a9 : pop r14 ; jmp 0x200000c1b35
0x00000200006bc34f : pop r14 ; jmp rax
0x00000200000095e8 : pop r14 ; pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000412bc5 : pop r14 ; pop r12 ; pop rbp ; ret
0x0000020000018c8b : pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000008b3d8 : pop r14 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001abbde : pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x000002000001f59a : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000093562 : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000005444 : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cde3b : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001c5d91 : pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000002930 : pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000004fea : pop r14 ; pop r12 ; pop rdi ; ret
0x0000020000508217 : pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000669299 : pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200004be5e3 : pop r14 ; pop r12 ; pop rsi ; ret
0x00000200000072e0 : pop r14 ; pop r12 ; ret
0x000002000000c4ab : pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x0000020000499d52 : pop r14 ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x0000020000058401 : pop r14 ; pop r13 ; pop r12 ; pop rbx ; ret
0x0000020000105876 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; jmp 0x200000c1b39
0x0000020000012256 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000018085 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000007e4ec : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000db0b3 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x000002000000314e : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000001742f : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002ce12 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000002e491 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000002c28 : pop r14 ; pop r13 ; pop r12 ; pop rdi ; ret
0x000002000017b9db : pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000043d06c : pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000c9bf2 : pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cca61 : pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200001b7f98 : pop r14 ; pop r13 ; pop r12 ; pop rsi ; ret
0x00000200000228a0 : pop r14 ; pop r13 ; pop r12 ; ret
0x00000200003f3299 : pop r14 ; pop r13 ; pop rbp ; pop rbx ; ret
0x000002000005fa6c : pop r14 ; pop r13 ; pop rbp ; ret
0x00000200000860b1 : pop r14 ; pop r13 ; pop rbx ; ret
0x000002000006192d : pop r14 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000000885a : pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200003f46da : pop r14 ; pop r13 ; pop rdi ; pop rbx ; ret
0x000002000008ee92 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000004bd2e : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004120ef : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000032aa4 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000009a49 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000008c5bf : pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000002a524 : pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000007aa3 : pop r14 ; pop r13 ; pop rdi ; ret
0x00000200000c6064 : pop r14 ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000462082 : pop r14 ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000001f011 : pop r14 ; pop r13 ; ret
0x0000020000149057 : pop r14 ; pop r15 ; ret
0x000002000000fdb3 : pop r14 ; pop rbp ; pop rbx ; ret
0x0000020000002e66 : pop r14 ; pop rbp ; ret
0x00000200000992f0 : pop r14 ; pop rbx ; ret
0x00000200001112f8 : pop r14 ; pop rcx ; ret
0x000002000005abb1 : pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000012ba7 : pop r14 ; pop rdi ; pop rbp ; ret
0x000002000068ba2d : pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000bf192 : pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000452c9 : pop r14 ; pop rdi ; pop rcx ; ret
0x0000020000051ba7 : pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000000764a : pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000f44a : pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003d6a5 : pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000128ae7 : pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000004cfa : pop r14 ; pop rdi ; pop rsi ; ret
0x000002000000251d : pop r14 ; pop rdi ; ret
0x000002000004cb87 : pop r14 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000399f5a : pop r14 ; pop rsi ; pop rbp ; ret
0x000002000005363e : pop r14 ; pop rsi ; pop rbx ; ret
0x00000200000d924d : pop r14 ; pop rsi ; ret
0x00000200000026fd : pop r14 ; ret
0x0000020000686a0f : pop r15 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000002000045f3fc : pop r15 ; pop r12 ; pop rbp ; ret
0x00000200000d2f07 : pop r15 ; pop r12 ; pop rbx ; ret
0x000002000049e6d7 : pop r15 ; pop r12 ; pop rdi ; pop rbx ; ret
0x000002000007164a : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000084a8e : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000753644 : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000069b0b : pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000e34e9 : pop r15 ; pop r12 ; pop rdi ; ret
0x000002000049d69c : pop r15 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000044017b : pop r15 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000485c2d : pop r15 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000048f032 : pop r15 ; pop r12 ; pop rsi ; ret
0x00000200000557b5 : pop r15 ; pop r12 ; ret
0x00000200000a451d : pop r15 ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200000827e9 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000890a3 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000cb251 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000654e2 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009f4f1 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000018400 : pop r15 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000008a2c9 : pop r15 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000d6c9e : pop r15 ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000073222 : pop r15 ; pop r13 ; pop r12 ; pop rsi ; ret
0x00000200004694cc : pop r15 ; pop r13 ; pop rbp ; ret
0x00000200000211e5 : pop r15 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000091234 : pop r15 ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000045defb : pop r15 ; pop r13 ; pop rdi ; pop rbx ; ret
0x00000200003a9822 : pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x0000020000053d91 : pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000005e8ec : pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004a514b : pop r15 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000081f54 : pop r15 ; pop r13 ; pop rdi ; ret
0x00000200000caaf1 : pop r15 ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000e69ef : pop r15 ; pop r13 ; ret
0x00000200000095e6 : pop r15 ; pop r14 ; pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000018c89 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000008b3d6 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001abbdc : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x0000020000093560 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000cde39 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000292e : pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000498b81 : pop r15 ; pop r14 ; pop r12 ; pop rdi ; ret
0x0000020000508215 : pop r15 ; pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000669297 : pop r15 ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000072de : pop r15 ; pop r14 ; pop r12 ; ret
0x000002000000c4a9 : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x0000020000002c26 : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; ret
0x00000200001b7f96 : pop r15 ; pop r14 ; pop r13 ; pop r12 ; pop rsi ; ret
0x000002000002289e : pop r15 ; pop r14 ; pop r13 ; pop r12 ; ret
0x0000020000096726 : pop r15 ; pop r14 ; pop r13 ; pop rbp ; ret
0x000002000006192b : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000115dc : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200003f46d8 : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rbx ; ret
0x0000020000009a47 : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002a522 : pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000462080 : pop r15 ; pop r14 ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000001f00f : pop r15 ; pop r14 ; pop r13 ; ret
0x0000020000002e64 : pop r15 ; pop r14 ; pop rbp ; ret
0x00000200000992ee : pop r15 ; pop r14 ; pop rbx ; ret
0x00000200001112f6 : pop r15 ; pop r14 ; pop rcx ; ret
0x000002000005abaf : pop r15 ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000068ba2b : pop r15 ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000d6255 : pop r15 ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000b39ab : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000007648 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000f448 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000090a3c : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000128ae5 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000004cf8 : pop r15 ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000000251b : pop r15 ; pop r14 ; pop rdi ; ret
0x000002000005363c : pop r15 ; pop r14 ; pop rsi ; pop rbx ; ret
0x00000200003b1e20 : pop r15 ; pop r14 ; pop rsi ; ret
0x0000020000026878 : pop r15 ; pop r14 ; ret
0x0000020000017ece : pop r15 ; pop rbp ; ret
0x000002000051190a : pop r15 ; pop rbx ; pop rbp ; ret
0x000002000008db37 : pop r15 ; pop rbx ; pop rcx ; ret
0x0000020000067d5a : pop r15 ; pop rbx ; ret
0x0000020000026154 : pop r15 ; pop rdi ; pop rbp ; ret
0x00000200000b1bee : pop r15 ; pop rdi ; pop rbx ; ret
0x0000020000085b40 : pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000027420 : pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000044e03b : pop r15 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000a41d : pop r15 ; pop rdi ; pop rsi ; ret
0x000002000005716e : pop r15 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009e44c : pop r15 ; pop rsi ; pop rbp ; ret
0x00000200000ad67a : pop r15 ; pop rsi ; pop rbx ; ret
0x000002000007a5d5 : pop r15 ; pop rsi ; ret
0x000002000001e373 : pop r15 ; ret
0x0000020000075477 : pop r8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000023187 : pop r8 ; and rax, 0xfffffffffffffff9 ; ret
0x00000200001af7c8 : pop r8 ; lea edx, dword ptr [rbp + 1] ; call 0x200001aba73
0x000002000019ef0b : pop r8 ; mov qword ptr [rcx + 0x168], r8 ; ret
0x00000200000153bf : pop r8 ; mov qword ptr [rcx + 0x60], rax ; ret
0x0000020000042be1 : pop r8 ; ret
0x0000020000429ea2 : pop r8 ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021165a : pop r9 ; add rsp, 0x28 ; ret
0x00000200005360cc : pop r9 ; call rax
0x000002000043adbb : pop r9 ; ret
0x00000200001acbd9 : pop rax ; adc al, byte ptr [rax] ; call r9
0x00000200004ce99f : pop rax ; adc byte ptr [rax + rsi - 1], dh ; ret 0x3b41
0x00000200001ae27c : pop rax ; adc byte ptr [rax - 0x75], cl ; add eax, 0x1241f3 ; call rax
0x0000020000086c75 : pop rax ; adc byte ptr [rcx + 0xf], al ; mov bh, 0x40 ; adc byte ptr [rbx], bh ; ret 0x820f
0x000002000051b5e5 : pop rax ; adc byte ptr [rcx - 0x75], cl ; ret
0x000002000059c4c6 : pop rax ; adc eax, 0x8b440000 ; ret
0x000002000019fa23 : pop rax ; add al, byte ptr [rax] ; add bl, ch ; add ecx, dword ptr [rbp - 0x75] ; ret 0x8548
0x00000200003a2a78 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003a297a : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004ccbd5 : pop rax ; add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x000002000005723b : pop rax ; add al, byte ptr [rax] ; add cl, ch ; or al, 0 ; add byte ptr [rax], al ; ret
0x0000020000040779 : pop rax ; add byte ptr [rax], al ; add bl, bh ; ret
0x0000020000140cb5 : pop rax ; add byte ptr [rax], al ; add cl, ch ; ret 0xd1
0x00000200006c3e3e : pop rax ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003a3d21 : pop rax ; add byte ptr [rax], al ; call 0x2000003fff9
0x00000200003a5300 : pop rax ; add byte ptr [rax], al ; call 0x200003a2cc9
0x000002000002ebf7 : pop rax ; add byte ptr [rax], al ; ret
0x0000020000021d78 : pop rax ; add byte ptr [rax], al ; test eax, eax ; jne 0x20000021d91 ; xor eax, eax ; ret
0x00000200005a7b89 : pop rax ; add byte ptr [rdi], cl ; xchg eax, ebp ; rol al, 0xe0 ; add esi, dword ptr [rdx] ; ret
0x000002000072fd1c : pop rax ; add cl, byte ptr [rax + 0xb] ; ret 0x8b48
0x00000200005c1493 : pop rax ; add dword ptr [rax], eax ; add al, ch ; test byte ptr [rdx], al ; ret 0x44ff
0x0000020000583b07 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x0000020000084c7f : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx], al ; ret 0x813b
0x000002000066da93 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; ret
0x000002000043945c : pop rax ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rbp ; ret
0x00000200004a32cf : pop rax ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x0000020000142cb5 : pop rax ; add dword ptr [rax], eax ; add cl, ch ; ret 0xb1
0x000002000017eb59 : pop rax ; add dword ptr [rcx + 0xf], eax ; ret
0x0000020000230b91 : pop rax ; add eax, 0x3480000 ; ret 0x8348
0x0000020000598f04 : pop rax ; add eax, 0xe990ffb5 ; xchg eax, edx ; ret
0x0000020000438075 : pop rax ; add eax, dword ptr [rax] ; add al, ch ; jle 0x200004380d6 ; ret 0x48ff
0x000002000048fe5e : pop rax ; add eax, dword ptr [rax] ; add al, ch ; jns 0x2000048fe9b ; ret
0x000002000048ff23 : pop rax ; add eax, dword ptr [rax] ; add al, ch ; mov ah, 0x2e ; ret
0x000002000048f64d : pop rax ; add eax, dword ptr [rax] ; add al, ch ; mov dh, byte ptr [rdi] ; ret
0x0000020000739a39 : pop rax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000046ad : pop rax ; add ecx, dword ptr [rcx + 0xf] ; ret
0x000002000044ee0a : pop rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000002c9f4 : pop rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000086346 : pop rax ; add rsp, 0x20 ; pop r14 ; pop rsi ; pop rbx ; ret
0x000002000000a418 : pop rax ; add rsp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000075478 : pop rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000091d9b : pop rax ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000001dc77 : pop rax ; add rsp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000018e88 : pop rax ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000110ab1 : pop rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200001effb5 : pop rax ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000230e46 : pop rax ; add rsp, 0x30 ; pop rcx ; ret
0x00000200001fd9b1 : pop rax ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000002b3d : pop rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c271a : pop rax ; add rsp, 0x30 ; pop rsi ; ret
0x00000200000baaa3 : pop rax ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x000002000003ea28 : pop rax ; add rsp, 0x38 ; ret
0x000002000012053a : pop rax ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000121abc : pop rax ; add rsp, 0x40 ; pop rbp ; ret
0x000002000000c1e7 : pop rax ; add rsp, 0x40 ; pop rdi ; ret
0x000002000050a6ca : pop rax ; add rsp, 0x40 ; pop rsi ; ret
0x00000200000b1429 : pop rax ; add rsp, 0x78 ; pop rdi ; pop rbx ; ret
0x0000020000783690 : pop rax ; and byte ptr [rcx - 0x75], cl ; ret
0x00000200004ac64a : pop rax ; and dh, dh ; ret
0x0000020000023188 : pop rax ; and rax, 0xfffffffffffffff9 ; ret
0x0000020000579896 : pop rax ; call 0x1ffc21a249f
0x0000020000420d2f : pop rax ; call 0x200000451b8
0x0000020000219f11 : pop rax ; call 0x2000007b88c
0x000002000048f084 : pop rax ; call 0x200000bab44
0x000002000048f083 : pop rax ; call 0x200000bab45
0x00000200004a5030 : pop rax ; call 0x200000c95a4
0x00000200005152d3 : pop rax ; call 0x20000140da4
0x000002000052cb01 : pop rax ; call 0x2000014f4c4
0x000002000052cb00 : pop rax ; call 0x2000014f4c5
0x0000020000605f9f : pop rax ; call 0x20000231014
0x00000200006061d7 : pop rax ; call 0x20000231ce4
0x0000020000085e4d : pop rax ; call rax
0x00000200004b8a64 : pop rax ; cdq ; sar bh, 0x8b ; ret
0x0000020000020be3 : pop rax ; cld ; add dword ptr [rax], eax ; add rcx, r15 ; jmp rcx
0x00000200004f6a82 : pop rax ; cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc28b
0x0000020000503b24 : pop rax ; enter -0x3d, 0x48 ; add esp, 0x60 ; pop rbx ; ret
0x000002000045e817 : pop rax ; fild dword ptr [rbp] ; add rcx, rdx ; jmp rcx
0x00000200001bd8c6 : pop rax ; idiv edi ; add rsp, 0x68 ; ret
0x000002000059d2b0 : pop rax ; idiv edi ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200001d9034 : pop rax ; imul ebp, edi, -1 ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005b9334 : pop rax ; in eax, dx ; scasd eax, dword ptr [rdi] ; push rsi ; ret
0x00000200006296b4 : pop rax ; jns 0x2000062967d ; dec dword ptr [rax - 0x75] ; ret
0x00000200001af7c9 : pop rax ; lea edx, dword ptr [rbp + 1] ; call 0x200001aba72
0x0000020000414e7e : pop rax ; lea rdx, qword ptr [rsp + 0x38] ; call 0x2000003feb9
0x00000200000ff34c : pop rax ; lea rsp, qword ptr [rbp + 0x30] ; pop rbp ; ret
0x00000200005f46ca : pop rax ; loop 0x200005f46d3 ; add rsp, 0x68 ; ret
0x00000200004b6cdb : pop rax ; mov al, 0x10 ; add dh, dh ; ret
0x000002000049c408 : pop rax ; mov byte ptr [rax - 0x75], cl ; ret
0x000002000010643a : pop rax ; mov dword ptr [rdx], eax ; add rsp, 0x38 ; ret
0x00000200001e7783 : pop rax ; mov eax, ebx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000605f9a : pop rax ; mov edx, 0x58706e50 ; call 0x20000231019
0x000002000015a02f : pop rax ; mov qword ptr [rbp - 0x20], rax ; mov eax, r10d ; jmp 0x2000015a043
0x000002000003876d : pop rax ; mov qword ptr [rbx], rcx ; add rsp, 0x30 ; pop rbx ; ret
0x000002000019ef0c : pop rax ; mov qword ptr [rcx + 0x168], r8 ; ret
0x00000200000153c0 : pop rax ; mov qword ptr [rcx + 0x60], rax ; ret
0x00000200000391f1 : pop rax ; mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000011692c : pop rax ; mov rcx, qword ptr [rdi + 8] ; call r8
0x0000020000605b46 : pop rax ; mov rcx, r14 ; call 0x20000231017
0x0000020000605cb1 : pop rax ; mov rcx, rbx ; call 0x20000231017
0x00000200004b32fc : pop rax ; mov rcx, rbx ; call r15
0x00000200003f85c2 : pop rax ; mov rcx, rbx ; call rsi
0x0000020000605aa2 : pop rax ; mov rcx, rdi ; call 0x20000231017
0x0000020000512c40 : pop rax ; movdqu xmmword ptr [rbp - 0x69], xmm0 ; call 0x200001403e9
0x00000200000d274b : pop rax ; or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000023041d : pop rax ; or byte ptr [rbp - 0x75], al ; adc byte ptr [rcx - 0x75], cl ; ret
0x000002000017d97c : pop rax ; out dx, eax ; inc dword ptr [rcx - 0x75] ; ret 0x8548
0x0000020000556e3d : pop rax ; pop r13 ; pop rbp ; ret
0x0000020000399541 : pop rax ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200003f51fd : pop rax ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000071649 : pop rax ; pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000045defa : pop rax ; pop r15 ; pop r13 ; pop rdi ; pop rbx ; ret
0x00000200000e69ee : pop rax ; pop r15 ; pop r13 ; ret
0x00000200007587c4 : pop rax ; pop rax ; ret 0x66ff
0x000002000014f6a0 : pop rax ; pop rbx ; add byte ptr [rax], al ; ret
0x0000020000677600 : pop rax ; pop rbx ; pop rbp ; ret
0x000002000013ffff : pop rax ; pop rcx ; ret
0x000002000020980d : pop rax ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000052871c : pop rax ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000042be2 : pop rax ; ret
0x0000020000758a6e : pop rax ; ret 0x45ff
0x00000200007587c5 : pop rax ; ret 0x66ff
0x00000200004aca1b : pop rax ; ret 0xe9ff
0x000002000051aa81 : pop rax ; ret 0xebff
0x00000200005ca76f : pop rax ; ret 0xfff0
0x000002000041ea24 : pop rax ; sar r15d, 1 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000002c264 : pop rax ; sbb al, 0x41 ; mov eax, edx ; pop rbx ; ret
0x00000200003b2285 : pop rax ; sbb byte ptr [rax - 0x7d], cl ; ret
0x000002000022ebdd : pop rax ; sbb byte ptr [rcx - 0x75], al ; ret 0x8b49
0x000002000012ff2b : pop rax ; sbb eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005f64b4 : pop rax ; stosd dword ptr [rdi], eax ; ret
0x0000020000106bb8 : pop rax ; sub al, 0xe8 ; frstor dword ptr [rsi] ; lock inc dword ptr [rcx + 0x3b] ; ret
0x000002000002374d : pop rax ; sub byte ptr [rax - 0x75], cl ; ret
0x00000200005dbfda : pop rax ; sub byte ptr [rax - 0x7d], cl ; ret
0x00000200001a9969 : pop rax ; test eax, eax ; je 0x200001a9979 ; mov dl, 1 ; mov al, dl ; ret
0x00000200005bab24 : pop rax ; test rax, rax ; je 0x200005bab3a ; mov rcx, r12 ; call rax
0x0000020000511263 : pop rax ; test rcx, rcx ; je 0x20000511277 ; call 0x20000140389
0x0000020000512909 : pop rax ; test rcx, rcx ; je 0x2000051291d ; call 0x20000140389
0x00000200005132ab : pop rax ; test rcx, rcx ; je 0x200005132bf ; call 0x20000140389
0x0000020000487467 : pop rax ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000020000429ea3 : pop rax ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000076c48c : pop rax ; xor eax, eax ; add rsp, 0x30 ; pop rsi ; ret
0x00000200005128b5 : pop rax ; xor r8d, r8d ; call 0x20000140da7
0x00000200001f6eb7 : pop rax ; xor rcx, rsp ; call 0x20000133186
0x0000020000051749 : pop rbp ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000140d55 : pop rbp ; add byte ptr [rax], al ; add cl, ch ; and dl, cl ; add byte ptr [rax], al ; ret
0x0000020000115f5c : pop rbp ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000073f0a0 : pop rbp ; add byte ptr [rbp - 0x75], al ; or byte ptr [r8 - 0x75], r9b ; ret
0x0000020000041e7d : pop rbp ; add ecx, dword ptr [rcx] ; xor byte ptr [rdx + rcx - 0x75], 0xc2 ; ret
0x000002000045c6d7 : pop rbp ; add esi, esi ; ret
0x0000020000638023 : pop rbp ; and al, 0xca ; inc dword ptr [rbp + rcx*4 + 0x4f] ; adc byte ptr [rbx], ah ; ret 0x8948
0x000002000006f974 : pop rbp ; and bh, bh ; ret
0x00000200003bf490 : pop rbp ; and eax, 0x8b44001a ; ret
0x000002000019ac75 : pop rbp ; clc ; jmp 0x200000e6f4a
0x000002000014f02c : pop rbp ; cwde ; add rsp, 0x68 ; ret
0x000002000008b516 : pop rbp ; fucomi st(1) ; ret 0xfffc
0x00000200001ff7cd : pop rbp ; idiv edi ; ret
0x00000200001648be : pop rbp ; in eax, dx ; dec dword ptr [rax + 0x3b] ; ret 0x860f
0x00000200004a3d69 : pop rbp ; int1 ; dec dword ptr [rcx - 0x75] ; iretd ; call 0x200004a0068
0x000002000068d79b : pop rbp ; loopne 0x2000068d724 ; ret
0x0000020000782b9e : pop rbp ; loopne 0x20000782b64 ; inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000018fb43 : pop rbp ; mov bl, 0xf2 ; push rsi ; ret
0x000002000063c686 : pop rbp ; mov dword ptr [rcx + rcx*4 + 0x4d], 0x558944bf ; ret
0x0000020000756b3e : pop rbp ; mov eax, 0x4d8d4cff ; xor byte ptr [rax - 0x7d], cl ; ret 0x4508
0x00000200000867a7 : pop rbp ; mov ebp, dword ptr [rdi] ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004bd557 : pop rbp ; or cl, ch ; ret 0xffef
0x000002000052055f : pop rbp ; out dx, eax ; ret 0x48ff
0x00000200003a22dc : pop rbp ; pop r12 ; pop rbp ; pop rbx ; ret
0x000002000000c4ae : pop rbp ; pop r12 ; pop rbp ; ret
0x000002000008af86 : pop rbp ; pop r12 ; pop rbx ; pop rbp ; ret
0x0000020000058404 : pop rbp ; pop r12 ; pop rbx ; ret
0x0000020000105879 : pop rbp ; pop r12 ; pop rdi ; jmp 0x200000c1b36
0x0000020000012259 : pop rbp ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000018088 : pop rbp ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000007e4ef : pop rbp ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000b7f5e : pop rbp ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200003ad910 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x0000020000008c7f : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009011a : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000003151 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000003abe : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000017432 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002ce15 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000018403 : pop rbp ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000002c2b : pop rbp ; pop r12 ; pop rdi ; ret
0x0000020000062ebb : pop rbp ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000008a2cc : pop rbp ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000c9bf5 : pop rbp ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cca64 : pop rbp ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000073225 : pop rbp ; pop r12 ; pop rsi ; ret
0x00000200000228a3 : pop rbp ; pop r12 ; ret
0x0000020000149056 : pop rbp ; pop r14 ; pop r15 ; ret
0x00000200003f329c : pop rbp ; pop rbp ; pop rbx ; ret
0x000002000005fa6f : pop rbp ; pop rbp ; ret
0x0000020000497bcb : pop rbp ; pop rbx ; jmp 0x200000ba7e5
0x00000200000c3c61 : pop rbp ; pop rbx ; pop rbp ; ret
0x000002000008ee98 : pop rbp ; pop rbx ; pop rcx ; ret
0x0000020000005956 : pop rbp ; pop rbx ; ret
0x000002000009011f : pop rbp ; pop rcx ; ret
0x00000200000211e8 : pop rbp ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000000885d : pop rbp ; pop rdi ; pop rbp ; ret
0x0000020000091237 : pop rbp ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200003f46dd : pop rbp ; pop rdi ; pop rbx ; ret
0x000002000008ee95 : pop rbp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000004bd31 : pop rbp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000005e8ef : pop rbp ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000032aa7 : pop rbp ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000009a4c : pop rbp ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000008c5c2 : pop rbp ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000002a527 : pop rbp ; pop rdi ; pop rsi ; ret
0x0000020000007aa6 : pop rbp ; pop rdi ; ret
0x00000200000c6067 : pop rbp ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000ab6d6 : pop rbp ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000d2b3a : pop rbp ; pop rsi ; pop rbx ; ret
0x0000020000002e68 : pop rbp ; ret
0x000002000060a8af : pop rbp ; ret 0x33ff
0x00000200004756a7 : pop rbp ; ret 0x48ff
0x0000020000689e93 : pop rbp ; ret 0x8b49
0x00000200006b243d : pop rbp ; ret 0xe8ff
0x00000200004c1c7f : pop rbp ; ret 0xebff
0x0000020000414daf : pop rbp ; ret 0xffe1
0x00000200006896a3 : pop rbp ; ret 0xffff
0x000002000073366c : pop rbp ; sar byte ptr [rcx - 0x7ffffffc], 0x8b ; ret
0x000002000052a648 : pop rbp ; sar edi, -0x75 ; ret
0x00000200003d5871 : pop rbp ; sbb dword ptr [rax], eax ; mov rcx, rdi ; call 0x200000c1b38
0x00000200004e0761 : pop rbp ; scasd eax, dword ptr [rdi] ; call rax
0x00000200005c4a2f : pop rbp ; scasd eax, dword ptr [rdi] ; dec dword ptr [rbx - 0x9bfdbbc] ; ret
0x0000020000689e2c : pop rbp ; shl byte ptr [rsi - 0x7d], 1 ; ret
0x0000020000503abf : pop rbp ; std ; ret
0x00000200004295cb : pop rbp ; std ; ret 0x4cff
0x00000200000bc7bf : pop rbp ; sub ch, byte ptr [rax + rax] ; je 0x200000bc7d2 ; mov eax, dword ptr [rax + 8] ; ret
0x000002000076e43b : pop rbp ; test bl, 0xff ; add rsp, 0x48 ; ret
0x0000020000608990 : pop rbp ; xchg eax, edi ; call 0x20000231ce5
0x0000020000079138 : pop rbx ; adc byte ptr [rax], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006c1b9d : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000082985 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsi
0x000002000014f6a1 : pop rbx ; add byte ptr [rax], al ; ret
0x00000200002240f2 : pop rbx ; add dword ptr [rax - 0x75], ecx ; ret 0xc148
0x0000020000642540 : pop rbx ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x7675
0x00000200005025f2 : pop rbx ; add dword ptr [rcx + 0x3b], eax ; ret
0x0000020000230c8e : pop rbx ; add rsp, 8 ; jmp r8
0x0000020000427b9a : pop rbx ; and byte ptr [rax - 0x7f], cl ; ret
0x0000020000032a6d : pop rbx ; call qword ptr [rdx]
0x00000200006b4040 : pop rbx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x1ff
0x000002000009028e : pop rbx ; dec dword ptr [rcx - 0x75] ; ret
0x000002000020f621 : pop rbx ; fsub st(4) ; dec dword ptr [rax - 0x75] ; ret
0x000002000017555e : pop rbx ; in eax, dx ; dec dword ptr [rax - 0x73] ; or dil, dil ; ret
0x00000200006b6f11 : pop rbx ; jb 0x200006b6f1c ; add byte ptr [rcx - 1], al ; ret
0x0000020000497bcc : pop rbx ; jmp 0x200000ba7e4
0x000002000049cdf6 : pop rbx ; jmp 0x200000c1b34
0x000002000007b7da : pop rbx ; jmp 0x200000c7a23
0x00000200004c1b3e : pop rbx ; jmp 0x200000e7294
0x00000200004ee8c2 : pop rbx ; jmp 0x20000117680
0x00000200004296c5 : pop rbx ; jmp r10
0x00000200006cc7a8 : pop rbx ; jmp r8
0x000002000004dd86 : pop rbx ; jmp rax
0x00000200001d53b5 : pop rbx ; jrcxz 0x200001d53e5 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005b3bf2 : pop rbx ; lodsd eax, dword ptr [rsi] ; call qword ptr [rax - 0x134c3d17]
0x00000200001e75ad : pop rbx ; loopne 0x200001e753f ; pop rsp ; and al, 0x40 ; call rax
0x00000200003cb9cd : pop rbx ; mov bl, byte ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004076f1 : pop rbx ; mov cl, byte ptr [rbx] ; add byte ptr [rbp - 0x74bb02aa], cl ; ret 0x8b48
0x000002000040505f : pop rbx ; or bh, dh ; ret
0x0000020000683b81 : pop rbx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004f58c0 : pop rbx ; or dword ptr [rax], eax ; mov rcx, rdi ; call 0x200000c1b38
0x000002000021bdb7 : pop rbx ; or eax, dword ptr [rax] ; jmp 0x2000021bdeb
0x000002000014a651 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000020000003ac3 : pop rbx ; pop rbp ; ret
0x000002000008db39 : pop rbx ; pop rcx ; ret
0x00000200001449f4 : pop rbx ; pop rdi ; pop r12 ; add rsp, 8 ; ret
0x00000200001464cd : pop rbx ; pop rdi ; pop rsi ; ret
0x00000200000029ca : pop rbx ; ret
0x00000200003e5fd9 : pop rbx ; ret 0x18
0x00000200003c6ccc : pop rbx ; ret 0x19
0x000002000012d1c5 : pop rbx ; ret 0x3956
0x000002000049bfe2 : pop rbx ; ret 0x45ff
0x00000200004c1c4d : pop rbx ; ret 0x48ff
0x00000200004c6779 : pop rbx ; ret 0x84ff
0x0000020000433dae : pop rbx ; ret 0x89ff
0x00000200007586a5 : pop rbx ; ret 0xc7ff
0x00000200004f6511 : pop rbx ; ret 0xffbb
0x0000020000422fa1 : pop rbx ; ret 0xfff5
0x00000200006a8a83 : pop rbx ; rol ah, 1 ; inc dword ptr [rax + rcx*4 + 0x3d] ; mov al, 0xd5 ; ret
0x00000200003aff82 : pop rbx ; sbb byte ptr [rcx - 0x73], al ; push rax ; add eax, ebp ; ret
0x000002000004dbc1 : pop rbx ; sbb dword ptr [rbx], ebp ; add byte ptr [rbp - 0x7cb7efa2], cl ; ret
0x000002000051b4d7 : pop rbx ; scasb al, byte ptr [rdi] ; jmp qword ptr [rcx]
0x000002000010d414 : pop rbx ; shr al, 0xa5 ; ret
0x00000200004970d2 : pop rbx ; sub dh, dh ; ret
0x00000200000ba631 : pop rcx ; adc byte ptr [rax - 0x75], cl ; ret
0x0000020000206195 : pop rcx ; adc byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000006ecfd : pop rcx ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200003a2a89 : pop rcx ; add al, byte ptr [rax] ; add byte ptr [rax + 0xb], cl ; ret 0x8949
0x00000200003a298c : pop rcx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000ba53f : pop rcx ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x1c8948c6], cl ; ret 0x8548
0x00000200005fd0b3 : pop rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x3ffffdfa], bh ; ret
0x000002000010e791 : pop rcx ; add dword ptr [rbp - 0x75], eax ; ret
0x000002000022168b : pop rcx ; add dword ptr [rcx - 0x7f], ecx ; ret 0xe8
0x00000200001f6573 : pop rcx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000021165b : pop rcx ; add rsp, 0x28 ; ret
0x000002000003445c : pop rcx ; and bl, ch ; rol byte ptr [rcx - 0x75], 1 ; ret 0xe8d1
0x00000200000364ac : pop rcx ; and byte ptr [rcx - 0x7f], cl ; ret 0
0x00000200005360cd : pop rcx ; call rax
0x000002000016af75 : pop rcx ; clc ; jmp 0x2000016af83
0x000002000016b571 : pop rcx ; clc ; jmp 0x2000016b57f
0x000002000016b641 : pop rcx ; clc ; jmp 0x2000016b64f
0x000002000016b73b : pop rcx ; clc ; jmp 0x2000016b749
0x0000020000174bfa : pop rcx ; clc ; jmp 0x20000174c08
0x0000020000174d18 : pop rcx ; clc ; jmp 0x20000174d26
0x00000200001fd3b9 : pop rcx ; clc ; jmp 0x200001fd3c7
0x00000200001fd4d5 : pop rcx ; clc ; jmp 0x200001fd4e3
0x000002000064864f : pop rcx ; dec byte ptr [rax + 0x63] ; ret 0x8d4e
0x00000200001a23e5 : pop rcx ; idiv edi ; mov eax, 1 ; ret
0x0000020000082285 : pop rcx ; in eax, 0xf ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200001ab773 : pop rcx ; je 0x200001ab784 ; or eax, 0xc0350000 ; ret
0x00000200000344d6 : pop rcx ; js 0x200000344ef ; mov bh, 0x53 ; and dh, dh ; ret 0xf01
0x0000020000782932 : pop rcx ; or al, 0xf ; xchg eax, ebp ; ret
0x000002000065ab0f : pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x0000020000082bc3 : pop rcx ; or byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000049c404 : pop rcx ; or byte ptr [rax - 0x73], cl ; pop rax ; mov byte ptr [rax - 0x75], cl ; ret
0x000002000011bab7 : pop rcx ; or byte ptr [rax - 0x77], cl ; sbb byte ptr [rax - 0x7d], cl ; ret
0x000002000006ecf9 : pop rcx ; or byte ptr [rcx + rcx*4 + 0x59], al ; adc byte ptr [rcx - 0x75], cl ; ret
0x00000200005fa79d : pop rcx ; or byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000011cd63 : pop rcx ; or dh, dh ; ret
0x00000200001b955b : pop rcx ; or edx, dword ptr [rsi] ; add dh, dh ; ret
0x0000020000440b23 : pop rcx ; out 0xd0, al ; dec dword ptr [rax - 0x75] ; ret
0x000002000050ae23 : pop rcx ; push rbp ; ret
0x000002000074f425 : pop rcx ; pushfq ; dec dword ptr [rcx - 0x75] ; push rdi ; xor byte ptr [rax - 0x7d], cl ; ret 0x4c18
0x000002000002ce1a : pop rcx ; ret
0x0000020000494dcd : pop rcx ; ret 0x33ff
0x00000200006b27b1 : pop rcx ; ret 0x48ff
0x000002000051a9d3 : pop rcx ; ret 0xebff
0x000002000049ce49 : pop rcx ; ret 0xf0ff
0x00000200006b2766 : pop rcx ; ret 0xff
0x0000020000501f11 : pop rcx ; ret 8
0x000002000064f68a : pop rcx ; ror byte ptr [rcx - 0x75], 1 ; ret
0x000002000056b6e7 : pop rcx ; salc ; dec dword ptr [rax + 3] ; ret 0x8941
0x00000200000855f1 : pop rcx ; sbb byte ptr [rax - 0x7b], cl ; dec dword ptr [rdi] ; test ebp, ebp ; ret 0xf
0x00000200003e4973 : pop rcx ; stosb byte ptr [rdi], al ; ret
0x000002000003218f : pop rcx ; sub al, 0xf7 ; ret
0x0000020000452aa4 : pop rcx ; sub dh, dh ; ret
0x0000020000756c63 : pop rcx ; xchg eax, esi ; ret 0x8bff
0x00000200006b692b : pop rcx ; xor byte ptr [rax - 0x7d], cl ; ret
0x000002000061af78 : pop rcx ; xor byte ptr [rcx - 0x7487dba4], cl ; ret
0x00000200005989bb : pop rdi ; adc al, 0xe9 ; lodsb al, byte ptr [rsi] ; ret 0xffe8
0x00000200001bfc43 : pop rdi ; adc al, byte ptr [rax] ; mov dword ptr [rcx], eax ; ret
0x00000200001bfc2b : pop rdi ; adc al, byte ptr [rax] ; ret
0x000002000052c974 : pop rdi ; adc bh, bh ; ret
0x000002000007e054 : pop rdi ; adc byte ptr [rax + 0x3b], cl ; ret
0x00000200000270ed : pop rdi ; adc byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rax + 0x3b] ; ret
0x000002000005c300 : pop rdi ; adc byte ptr [rax - 0x75], cl ; ret
0x0000020000077499 : pop rdi ; adc byte ptr [rbp - 0x75], al ; ret 0x8b49
0x000002000050d3ce : pop rdi ; adc byte ptr [rbx], bh ; ret
0x00000200000b2f87 : pop rdi ; adc byte ptr [rcx - 0x73], cl ; push rdi ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000011857b : pop rdi ; adc dh, dh ; ret 0xf10
0x00000200005b014d : pop rdi ; add al, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xe3e8
0x00000200000eb28e : pop rdi ; add al, 0xb ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x0000020000588234 : pop rdi ; add al, 0xf ; xchg byte ptr [rdi - 0x740009ad], bl ; ret
0x0000020000140d95 : pop rdi ; add byte ptr [rax], al ; add cl, ch ; loop 0x20000140d75 ; add byte ptr [rax], al ; ret
0x0000020000123f1d : pop rdi ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000003251f : pop rdi ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000686a10 : pop rdi ; add dword ptr [rax - 0x7d], ecx ; ret
0x00000200000be472 : pop rdi ; add dword ptr [rax - 0x7f], ecx ; jmp qword ptr [rax]
0x00000200006a07c2 : pop rdi ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret 0x405f
0x0000020000142d95 : pop rdi ; add dword ptr [rax], eax ; add cl, ch ; loop 0x20000142d55 ; add byte ptr [rax], al ; ret
0x000002000073c18e : pop rdi ; add eax, 0x8318894c ; ret 0x48f8
0x000002000073c39c : pop rdi ; add eax, 0x8330894c ; ret 0x48f8
0x00000200001fa814 : pop rdi ; add eax, 0xc18b0000 ; ret
0x000002000075d44d : pop rdi ; and dl, al ; dec dword ptr [rbp + rcx*4 + 5] ; mov byte ptr [rdx], ah ; ret 0x48ff
0x00000200006873cd : pop rdi ; fucompi st(4) ; dec dword ptr [rax - 0x7d] ; ret
0x00000200003dc281 : pop rdi ; in al, dx ; ret
0x0000020000194410 : pop rdi ; inc dword ptr [rcx - 0x75] ; ret 0x2b4d
0x0000020000025c78 : pop rdi ; jmp 0x200000684c7
0x000002000020efa3 : pop rdi ; jmp 0x2000007b2a7
0x00000200000c0af6 : pop rdi ; jmp 0x20000090bb8
0x0000020000499922 : pop rdi ; jmp 0x200000bc2a4
0x000002000010587c : pop rdi ; jmp 0x200000c1b33
0x0000020000414dad : pop rdi ; jmp 0x20000231013
0x0000020000602a28 : pop rdi ; jmp 0x20000231014
0x000002000042076d : pop rdi ; jmp 0x20000420775
0x00000200004d181d : pop rdi ; jmp 0x200004d17eb
0x00000200000f4b90 : pop rdi ; jmp rax
0x00000200005621ad : pop rdi ; loop 0x2000056219c ; ret 0xe5fc
0x000002000065a91d : pop rdi ; mov byte ptr [rbp - 0x3b7cb701], ch ; pop rax ; ret
0x00000200005dd1c1 : pop rdi ; mov ch, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x00000200005b79bb : pop rdi ; mov qword ptr [rip + 0x141855], rax ; ret
0x00000200004b0524 : pop rdi ; or byte ptr [rax - 0x75], cl ; ret
0x00000200004420d8 : pop rdi ; or byte ptr [rax - 0x77], cl ; pop rsp ; and al, 0x48 ; jmp 0x200004420ab
0x0000020000626fce : pop rdi ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200006ce344 : pop rdi ; or dh, dh ; ret
0x00000200001449f5 : pop rdi ; pop r12 ; add rsp, 8 ; ret
0x0000020000149052 : pop rdi ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000002000045f3fd : pop rdi ; pop r12 ; pop rbp ; ret
0x00000200000d2f08 : pop rdi ; pop r12 ; pop rbx ; ret
0x000002000049e6d8 : pop rdi ; pop r12 ; pop rdi ; pop rbx ; ret
0x000002000007164b : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000084a8f : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000753645 : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000069b0c : pop rdi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000e34ea : pop rdi ; pop r12 ; pop rdi ; ret
0x000002000049d69d : pop rdi ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000044017c : pop rdi ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000485c2e : pop rdi ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000048f033 : pop rdi ; pop r12 ; pop rsi ; ret
0x00000200000557b6 : pop rdi ; pop r12 ; ret
0x00000200000a451e : pop rdi ; pop r13 ; pop r12 ; pop rbp ; ret
0x00000200000827ea : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000890a4 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000cb252 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x0000020000008c7d : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000090118 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x00000200000654e3 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000022ff72 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000009f4f2 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000018401 : pop rdi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x000002000008a2ca : pop rdi ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000d6c9f : pop rdi ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x0000020000073223 : pop rdi ; pop r13 ; pop r12 ; pop rsi ; ret
0x00000200004694cd : pop rdi ; pop r13 ; pop rbp ; ret
0x00000200000211e6 : pop rdi ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000091235 : pop rdi ; pop r13 ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000045defc : pop rdi ; pop r13 ; pop rdi ; pop rbx ; ret
0x00000200003a9823 : pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x0000020000053d92 : pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000005e8ed : pop rdi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200004a514c : pop rdi ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000081f55 : pop rdi ; pop r13 ; pop rdi ; ret
0x00000200000caaf2 : pop rdi ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200000e69f0 : pop rdi ; pop r13 ; ret
0x00000200000095e7 : pop rdi ; pop r14 ; pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000018c8a : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000008b3d7 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001abbdd : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rcx ; ret
0x000002000001f599 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000093561 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000005443 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cde3a : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000292f : pop rdi ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000498b82 : pop rdi ; pop r14 ; pop r12 ; pop rdi ; ret
0x0000020000508216 : pop rdi ; pop r14 ; pop r12 ; pop rsi ; pop rbp ; ret
0x0000020000669298 : pop rdi ; pop r14 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200000072df : pop rdi ; pop r14 ; pop r12 ; ret
0x000002000000c4aa : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rbp ; ret
0x0000020000018084 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x00000200000db0b2 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x000002000007daeb : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000002c27 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rdi ; ret
0x00000200000cca60 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200001b7f97 : pop rdi ; pop r14 ; pop r13 ; pop r12 ; pop rsi ; ret
0x000002000002289f : pop rdi ; pop r14 ; pop r13 ; pop r12 ; ret
0x0000020000096727 : pop rdi ; pop r14 ; pop r13 ; pop rbp ; ret
0x000002000006192c : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000115dd : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200003f46d9 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rbx ; ret
0x000002000004bd2d : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000032aa3 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000009a48 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002a523 : pop rdi ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000462081 : pop rdi ; pop r14 ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000001f010 : pop rdi ; pop r14 ; pop r13 ; ret
0x0000020000002e65 : pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000992ef : pop rdi ; pop r14 ; pop rbx ; ret
0x00000200001112f7 : pop rdi ; pop r14 ; pop rcx ; ret
0x000002000005abb0 : pop rdi ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000068ba2c : pop rdi ; pop r14 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000d6256 : pop rdi ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000b39ac : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000007649 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000f449 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000090a3d : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000128ae6 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000004cf9 : pop rdi ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000000251c : pop rdi ; pop r14 ; pop rdi ; ret
0x000002000005363d : pop rdi ; pop r14 ; pop rsi ; pop rbx ; ret
0x00000200003b1e21 : pop rdi ; pop r14 ; pop rsi ; ret
0x0000020000026879 : pop rdi ; pop r14 ; ret
0x0000020000758a6d : pop rdi ; pop rax ; ret 0x45ff
0x000002000001225c : pop rdi ; pop rbp ; pop rbx ; ret
0x000002000000885e : pop rdi ; pop rbp ; ret
0x000002000014a650 : pop rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000020000059af3 : pop rdi ; pop rbx ; pop rbp ; ret
0x000002000008db38 : pop rdi ; pop rbx ; pop rcx ; ret
0x0000020000067d5b : pop rdi ; pop rbx ; ret
0x00000200000452cb : pop rdi ; pop rcx ; ret
0x0000020000026155 : pop rdi ; pop rdi ; pop rbp ; ret
0x00000200000b1bef : pop rdi ; pop rdi ; pop rbx ; ret
0x0000020000085b41 : pop rdi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000027421 : pop rdi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000044e03c : pop rdi ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000a41e : pop rdi ; pop rdi ; pop rsi ; ret
0x0000020000497bc9 : pop rdi ; pop rsi ; pop rbp ; pop rbx ; jmp 0x200000ba7e7
0x000002000008ee96 : pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x0000020000005954 : pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009011d : pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000003154 : pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000003ac1 : pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000009a4d : pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002ce18 : pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000002934 : pop rdi ; pop rsi ; ret
0x0000020000748599 : pop rdi ; pop rsp ; stc ; jmp qword ptr [rax]
0x000002000000251f : pop rdi ; ret
0x000002000060d17d : pop rdi ; ret 0x48ff
0x000002000049b9e3 : pop rdi ; ret 0x84ff
0x000002000052952d : pop rdi ; ret 0x8bff
0x000002000042d89a : pop rdi ; ret 0xb8ff
0x00000200004ca109 : pop rdi ; ret 0xccff
0x000002000052919b : pop rdi ; ret 0xebff
0x000002000061745d : pop rdi ; ret 0xffaa
0x00000200000742af : pop rdi ; ror byte ptr [rax - 1], 1 ; ret
0x00000200003e9563 : pop rdi ; salc ; dec dword ptr [rax - 0x75] ; ret
0x000002000052a3d5 : pop rdi ; sar edi, -0x75 ; ret
0x0000020000465352 : pop rdi ; sbb al, 0x3b ; ret
0x0000020000529ac9 : pop rdi ; sbb al, 0x8b ; sbb byte ptr [r11], r15b ; ret
0x00000200005fd5d1 : pop rdi ; sbb byte ptr [rax - 0x7d], cl ; ret
0x0000020000004c3e : pop rdi ; sbb byte ptr [rbx], ch ; ret 0x894c
0x00000200001c3838 : pop rdi ; sbb eax, eax ; and eax, 0x128 ; ret
0x00000200006d7c1d : pop rdi ; scasd eax, dword ptr [rdi] ; ret 0xe8ff
0x000002000051087d : pop rdi ; sti ; ret 0x85ff
0x0000020000112d94 : pop rdi ; xor byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000200004e7720 : pop rdx ; adc byte ptr [rax - 0x75], cl ; ret 0x8948
0x0000020000519758 : pop rdx ; adc byte ptr [rbx + 0x39], cl ; ret
0x00000200004ea587 : pop rdx ; adc byte ptr [rcx - 0x75], al ; adc byte ptr [rbx], bpl ; ret
0x00000200001e3d01 : pop rdx ; adc eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001364a5 : pop rdx ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x0000020000053d62 : pop rdx ; add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8348
0x00000200006c3c4d : pop rdx ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000007c750 : pop rdx ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x3bc323c6], cl ; ret
0x00000200000524ef : pop rdx ; add dword ptr [rbp + 0x3b7874c0], eax ; ret
0x000002000040f641 : pop rdx ; add dword ptr [rcx - 0x75], eax ; ret
0x0000020000492a59 : pop rdx ; add eax, 0x8b490000 ; ret
0x00000200005a6794 : pop rdx ; and ebp, ebx ; push rsi ; ret
0x00000200000903d6 : pop rdx ; dec dword ptr [rcx - 0x75] ; ret
0x00000200003ed803 : pop rdx ; imul eax, ecx ; add eax, r9d ; ret
0x00000200003ed307 : pop rdx ; imul eax, ecx ; xor eax, r9d ; ret
0x00000200005611e1 : pop rdx ; int1 ; call qword ptr [rax - 0x1a383d17]
0x0000020000480802 : pop rdx ; int1 ; ret
0x000002000041fad5 : pop rdx ; jmp 0x2000041fadb
0x00000200004e94aa : pop rdx ; jmp rdx
0x00000200004ad622 : pop rdx ; lodsd eax, dword ptr [rsi] ; ret
0x00000200005ed681 : pop rdx ; mov ah, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x00000200000342ae : pop rdx ; mov al, byte ptr [rcx + 0x1b] ; and al, 0xfd ; mov byte ptr [rcx + 0x1b], al ; ret
0x0000020000491c62 : pop rdx ; mov eax, eax ; push rsi ; ret
0x0000020000153d02 : pop rdx ; mov ecx, 0x89490022 ; adc dword ptr [rcx - 0x75], eax ; ret 0xf49
0x00000200000cdce4 : pop rdx ; mov r8b, 1 ; mov rcx, r9 ; call 0x20000069fb9
0x00000200004145a2 : pop rdx ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x0000020000042103 : pop rdx ; or al, 0x48 ; mov dword ptr [rax + 8], eax ; mov qword ptr [rax], rax ; ret
0x000002000040aa7e : pop rdx ; or al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000475884 : pop rdx ; or byte ptr [rax - 0x75], cl ; ret 0x8548
0x000002000002f67f : pop rdx ; or byte ptr [rax - 0x7d], cl ; ret 0xf21c
0x00000200006103fe : pop rdx ; or eax, 0x8b440006 ; ret 0x34c
0x0000020000224016 : pop rdx ; or eax, dword ptr [rcx + 0x3b] ; ret
0x00000200005059ea : pop rdx ; outsb dx, byte ptr [rsi] ; call 0x20000231ce4
0x000002000013fffe : pop rdx ; pop rax ; pop rcx ; ret
0x00000200003e9562 : pop rdx ; pop rdi ; salc ; dec dword ptr [rax - 0x75] ; ret
0x000002000020804a : pop rdx ; push rbx ; add dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x00000200003fa179 : pop rdx ; ret
0x000002000050fb22 : pop rdx ; ret 0x48ff
0x00000200004361e0 : pop rdx ; ret 0x59
0x0000020000758735 : pop rdx ; ret 0x66ff
0x0000020000636162 : pop rdx ; ret 0xffa8
0x000002000075de7e : pop rdx ; ret 0xffb7
0x00000200004e3eaa : pop rdx ; ret 0xffde
0x0000020000577034 : pop rdx ; ret 0xffe7
0x00000200001ea1a2 : pop rdx ; ret 0xffee
0x00000200006679a3 : pop rdx ; sub byte ptr [rbx - 0x74bbd33d], al ; ret
0x00000200004206f5 : pop rdx ; sub dword ptr [rax], eax ; add al, ch ; xchg byte ptr [rdi], cl ; ret
0x00000200004b2c12 : pop rdx ; xchg eax, edx ; ret
0x00000200000c6572 : pop rdx ; xor al, 0xfa ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x000002000068eb3e : pop rdx ; xor byte ptr [rcx - 0xa], al ; ret
0x0000020000454b58 : pop rsi ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000004dbc6 : pop rsi ; adc byte ptr [rax - 0x7d], cl ; ret
0x000002000042aca7 : pop rsi ; adc byte ptr [rbp - 0x73], al ; add r8d, ebp ; out 0x34, al ; ret 0x48ff
0x0000020000058d69 : pop rsi ; adc dh, dh ; ret
0x000002000041a4af : pop rsi ; add al, byte ptr [rax] ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000486c6e : pop rsi ; add byte ptr [rax + 3], cl ; xlatb ; jmp rdx
0x0000020000140d75 : pop rsi ; add byte ptr [rax], al ; add cl, ch ; add dl, cl ; add byte ptr [rax], al ; ret
0x00000200001ef532 : pop rsi ; add byte ptr [rax], al ; pop r14 ; ret
0x000002000011d8e1 : pop rsi ; add byte ptr [rax], al ; ret
0x00000200003ef19e : pop rsi ; add cl, bh ; dec dword ptr [rax + 0x3b] ; ret 0x577
0x00000200003f9141 : pop rsi ; add dword ptr [rax], eax ; add bh, bh ; ret 0x9489
0x0000020000483394 : pop rsi ; add dword ptr [rdi], ecx ; ret
0x00000200005a12e9 : pop rsi ; and byte ptr [rax - 0x7f], cl ; ret
0x000002000005aa53 : pop rsi ; cmp byte ptr [rax - 0x75], cl ; je 0x2000005aa86 ; xor byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x0000020000090531 : pop rsi ; dec dword ptr [rax - 0x75] ; ret
0x000002000010592d : pop rsi ; jmp 0x20000051bfb
0x0000020000475909 : pop rsi ; jmp 0x2000009d694
0x0000020000497996 : pop rsi ; jmp 0x200000b9434
0x000002000049b7aa : pop rsi ; jmp 0x200000c1b34
0x00000200006bc350 : pop rsi ; jmp rax
0x00000200006b7016 : pop rsi ; jno 0x200006b7021 ; add byte ptr [rcx - 1], al ; ret
0x00000200004e1d9b : pop rsi ; loope 0x200004e1da5 ; movdqu xmmword ptr [rdx + r8*8], xmm0 ; jmp 0x200004e1d52
0x00000200004e1d9a : pop rsi ; loope 0x200004e1da6 ; movdqu xmmword ptr [rdx + r8*8], xmm0 ; jmp 0x200004e1d53
0x00000200005dcb1e : pop rsi ; mov ch, 0xff ; add rsp, 0x70 ; pop rbp ; ret
0x000002000018bca5 : pop rsi ; mov cl, 0xf1 ; dec dword ptr [rcx - 0x75] ; ret
0x00000200006229ad : pop rsi ; mov edx, 0xc48348ff ; ret
0x00000200004f779f : pop rsi ; mov rdx, r13 ; mov rcx, rdi ; call r12
0x00000200001b1516 : pop rsi ; movlps xmm0, qword ptr [rax] ; call r9
0x00000200006d945e : pop rsi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffff
0x00000200003f0c6d : pop rsi ; or byte ptr [rax - 0x7f], cl ; ret
0x000002000007ad38 : pop rsi ; or byte ptr [rbp - 0x75], cl ; ret 0xc148
0x0000020000638c0a : pop rsi ; out dx, eax ; dec dword ptr [rbx - 0x98fdba4] ; ret
0x0000020000404fc3 : pop rsi ; out dx, eax ; push rsi ; ret
0x00000200000095e9 : pop rsi ; pop r12 ; pop rbp ; pop rbx ; ret
0x0000020000412bc6 : pop rsi ; pop r12 ; pop rbp ; ret
0x0000020000018c8c : pop rsi ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000008b3d9 : pop rsi ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001abbdf : pop rsi ; pop r12 ; pop rdi ; pop rcx ; ret
0x000002000001f59b : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000093563 : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000005445 : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cde3c : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001c5d92 : pop rsi ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000002931 : pop rsi ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000004feb : pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000508218 : pop rsi ; pop r12 ; pop rsi ; pop rbp ; ret
0x000002000066929a : pop rsi ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200004be5e4 : pop rsi ; pop r12 ; pop rsi ; ret
0x00000200000072e1 : pop rsi ; pop r12 ; ret
0x000002000000c4ac : pop rsi ; pop r13 ; pop r12 ; pop rbp ; ret
0x0000020000499d53 : pop rsi ; pop r13 ; pop r12 ; pop rbx ; pop rbp ; ret
0x0000020000058402 : pop rsi ; pop r13 ; pop r12 ; pop rbx ; ret
0x0000020000105877 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; jmp 0x200000c1b38
0x0000020000012257 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000018086 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000007e4ed : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000db0b4 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rbx ; ret
0x000002000000c6e3 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000000314f : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000003abc : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000017430 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002ce13 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000002e492 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000002c29 : pop rsi ; pop r13 ; pop r12 ; pop rdi ; ret
0x000002000017b9dc : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000043d06d : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000c9bf3 : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cca62 : pop rsi ; pop r13 ; pop r12 ; pop rsi ; pop rbx ; ret
0x00000200001b7f99 : pop rsi ; pop r13 ; pop r12 ; pop rsi ; ret
0x00000200000228a1 : pop rsi ; pop r13 ; pop r12 ; ret
0x00000200003f329a : pop rsi ; pop r13 ; pop rbp ; pop rbx ; ret
0x000002000005fa6d : pop rsi ; pop r13 ; pop rbp ; ret
0x00000200000860b2 : pop rsi ; pop r13 ; pop rbx ; ret
0x000002000006192e : pop rsi ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000000885b : pop rsi ; pop r13 ; pop rdi ; pop rbp ; ret
0x00000200003f46db : pop rsi ; pop r13 ; pop rdi ; pop rbx ; ret
0x000002000008ee93 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x000002000004bd2f : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004120f0 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000032aa5 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000009a4a : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000008c5c0 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; pop rcx ; ret
0x000002000002a525 : pop rsi ; pop r13 ; pop rdi ; pop rsi ; ret
0x0000020000007aa4 : pop rsi ; pop r13 ; pop rdi ; ret
0x00000200000c6065 : pop rsi ; pop r13 ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000462083 : pop rsi ; pop r13 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000001f012 : pop rsi ; pop r13 ; ret
0x0000020000149058 : pop rsi ; pop r15 ; ret
0x0000020000497bca : pop rsi ; pop rbp ; pop rbx ; jmp 0x200000ba7e6
0x000002000008ee97 : pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x0000020000005955 : pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009011e : pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000002e67 : pop rsi ; pop rbp ; ret
0x0000020000003ac2 : pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000009a4e : pop rsi ; pop rbx ; ret
0x000002000002ce19 : pop rsi ; pop rcx ; ret
0x000002000005abb2 : pop rsi ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000012ba8 : pop rsi ; pop rdi ; pop rbp ; ret
0x000002000014a64f : pop rsi ; pop rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000002000068ba2e : pop rsi ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000bf193 : pop rsi ; pop rdi ; pop rbx ; ret
0x00000200000452ca : pop rsi ; pop rdi ; pop rcx ; ret
0x0000020000051ba8 : pop rsi ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000000764b : pop rsi ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000000f44b : pop rsi ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000003d6a6 : pop rsi ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000128ae8 : pop rsi ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000004cfb : pop rsi ; pop rdi ; pop rsi ; ret
0x000002000000251e : pop rsi ; pop rdi ; ret
0x000002000004cb88 : pop rsi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000399f5b : pop rsi ; pop rsi ; pop rbp ; ret
0x000002000005363f : pop rsi ; pop rsi ; pop rbx ; ret
0x00000200000d924e : pop rsi ; pop rsi ; ret
0x000002000019f7f8 : pop rsi ; push 0xf8 ; jmp qword ptr [rbx]
0x000002000062bf9e : pop rsi ; push rax ; popfq ; jmp qword ptr [rbx]
0x00000200005767c0 : pop rsi ; push rdi ; add byte ptr [rcx + 3], cl ; iretd ; jmp rcx
0x00000200000026fe : pop rsi ; ret
0x0000020000492e0a : pop rsi ; ret 0x48ff
0x0000020000758316 : pop rsi ; ret 0x83ff
0x00000200000f2802 : pop rsi ; ret 0xa
0x00000200004987be : pop rsi ; ret 0xebff
0x0000020000766e8e : pop rsi ; ret 0xffb6
0x00000200004758ce : pop rsi ; ret 0xffc4
0x0000020000405bfe : pop rsi ; ret 0xffcb
0x00000200001dd97e : pop rsi ; ret 0xffef
0x00000200001a3c00 : pop rsi ; ret 0xfff8
0x00000200000260df : pop rsi ; ror byte ptr [rax - 1], 1 ; ret
0x00000200000e2f75 : pop rsi ; sbb byte ptr [rcx + 0x200f443a], cl ; ret
0x00000200003a1f71 : pop rsi ; sbb byte ptr [rcx - 0x3f], cl ; out dx, al ; or al, 0x8b ; ret
0x00000200005ad372 : pop rsi ; sbb cl, ch ; ret
0x00000200004b8991 : pop rsi ; sub byte ptr [rcx - 0x75], al ; ret
0x00000200006bc22a : pop rsi ; xchg eax, ebp ; dec dword ptr [rax - 0x7d] ; ret
0x000002000016057e : pop rsi ; xchg eax, ebp ; in al, dx ; inc dword ptr [rbp - 0x75] ; ret 0x8b41
0x00000200000350f0 : pop rsi ; xor byte ptr [rbp - 0x75], cl ; ret
0x00000200000ebd74 : pop rsi ; xor byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200006a35bb : pop rsp ; adc ah, byte ptr [rax] ; cmp bh, bh ; adc ah, byte ptr [rax] ; xchg eax, edx ; call qword ptr [rdx]
0x00000200006a369f : pop rsp ; adc ah, byte ptr [rax] ; ret 0xff
0x00000200006a35b7 : pop rsp ; adc cl, byte ptr [rax] ; and eax, 0x3820125c ; call qword ptr [rdx]
0x00000200006a35a3 : pop rsp ; adc cl, byte ptr [rax] ; and eax, 0xe20125c ; call qword ptr [rdx]
0x0000020000519680 : pop rsp ; add byte ptr [rax], al ; add bl, ch ; ret 0x48cc
0x00000200006c3aad : pop rsp ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001291f2 : pop rsp ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x8189
0x00000200001449f7 : pop rsp ; add rsp, 8 ; ret
0x0000020000029cc7 : pop rsp ; and al, 0x10 ; pop rdi ; ret
0x000002000006a218 : pop rsp ; and al, 0x10 ; ret
0x000002000006310f : pop rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 0x20] ; pop rdi ; ret
0x000002000002cc19 : pop rsp ; and al, 0x18 ; pop rsi ; ret
0x000002000003f1e1 : pop rsp ; and al, 0x20 ; add rsp, 0x10 ; pop rdi ; ret
0x000002000010c915 : pop rsp ; and al, 0x20 ; add rsp, 0x28 ; ret
0x0000020000514d30 : pop rsp ; and al, 0x20 ; call 0x20000140546
0x0000020000513aa4 : pop rsp ; and al, 0x20 ; call 0x20000140da6
0x00000200006aa7c4 : pop rsp ; and al, 0x20 ; call qword ptr [rip - 0x3db2bd]
0x00000200006aa81c : pop rsp ; and al, 0x20 ; call qword ptr [rip - 0x3db30d]
0x000002000052cd88 : pop rsp ; and al, 0x20 ; call r10
0x00000200005c967f : pop rsp ; and al, 0x20 ; jmp 0x200004d2da5
0x0000020000087144 : pop rsp ; and al, 0x20 ; pop rdi ; ret
0x00000200006b6f1a : pop rsp ; and al, 0x24 ; jmp 0x200006b6ee6
0x00000200006c0700 : pop rsp ; and al, 0x28 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x0000020000486c5c : pop rsp ; and al, 0x28 ; pop rdi ; ret
0x000002000003654c : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000001f9ff : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop r15 ; ret
0x0000020000032390 : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rcx ; ret
0x00000200000f4b89 : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rdi ; jmp rax
0x0000020000002648 : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000037c6d : pop rsp ; and al, 0x30 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200004ce568 : pop rsp ; and al, 0x30 ; call r11
0x00000200001ee9a8 : pop rsp ; and al, 0x30 ; jmp 0x200001ee974
0x000002000000851d : pop rsp ; and al, 0x38 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000053950 : pop rsp ; and al, 0x38 ; add rsp, 0x20 ; pop rsi ; ret
0x00000200005037f9 : pop rsp ; and al, 0x38 ; lea rcx, qword ptr [rsp + 0x20] ; call rdi
0x000002000043c66f : pop rsp ; and al, 0x40 ; add rsp, 0x20 ; pop r14 ; ret
0x000002000006a419 : pop rsp ; and al, 0x40 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000029263 : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000004a5c7 : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rbp ; ret
0x00000200006c4586 : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rcx ; ret
0x000002000001a0f3 : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000f714b : pop rsp ; and al, 0x40 ; add rsp, 0x30 ; pop rsi ; ret
0x00000200001e75b0 : pop rsp ; and al, 0x40 ; call rax
0x0000020000781df4 : pop rsp ; and al, 0x40 ; jmp 0x20000781dc0
0x000002000022e9ec : pop rsp ; and al, 0x40 ; mov rax, rdx ; jmp 0x2000022e9fb
0x0000020000445e50 : pop rsp ; and al, 0x40 ; mov rcx, rbx ; call 0x2000007461d
0x000002000022e3a2 : pop rsp ; and al, 0x40 ; xor ecx, ecx ; mov rax, rdx ; jmp 0x2000022e3b5
0x0000020000085d21 : pop rsp ; and al, 0x48 ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000544529 : pop rsp ; and al, 0x48 ; add rsp, 0x30 ; pop r14 ; ret
0x000002000003e97f : pop rsp ; and al, 0x48 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004a75ec : pop rsp ; and al, 0x48 ; add rsp, 0x30 ; pop rsi ; ret
0x0000020000096abf : pop rsp ; and al, 0x48 ; add rsp, 0x38 ; ret
0x00000200004420dc : pop rsp ; and al, 0x48 ; jmp 0x200004420a7
0x0000020000024ade : pop rsp ; and al, 0x50 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200004c91f0 : pop rsp ; and al, 0x50 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000068faff : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000451432 : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000006487 : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000130c96 : pop rsp ; and al, 0x50 ; add rsp, 0x40 ; pop rsi ; ret
0x0000020000465047 : pop rsp ; and al, 0x54 ; call r10
0x00000200000c0ae4 : pop rsp ; and al, 0x58 ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000c2718 : pop rsp ; and al, 0x58 ; add rsp, 0x30 ; pop rsi ; ret
0x000002000012a4cf : pop rsp ; and al, 0x58 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000513c5 : pop rsp ; and al, 0x58 ; add rsp, 0x40 ; pop rdi ; ret
0x000002000050a6c8 : pop rsp ; and al, 0x58 ; add rsp, 0x40 ; pop rsi ; ret
0x00000200004a502e : pop rsp ; and al, 0x58 ; call 0x200000c95a6
0x00000200004dcbd2 : pop rsp ; and al, 0x60 ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000b048e : pop rsp ; and al, 0x60 ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000086adc : pop rsp ; and al, 0x60 ; add rsp, 0x40 ; pop rsi ; ret
0x0000020000108ea2 : pop rsp ; and al, 0x60 ; add rsp, 0x50 ; pop rbp ; ret
0x00000200000204bd : pop rsp ; and al, 0x60 ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000132459 : pop rsp ; and al, 0x68 ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000750311 : pop rsp ; and al, 0x68 ; add rsp, 0x50 ; pop rsi ; ret
0x00000200001af02c : pop rsp ; and al, 0x6c ; mov rcx, qword ptr [rsp + 0x68] ; call rax
0x00000200004296be : pop rsp ; and al, 0x70 ; add rsp, 0x40 ; pop rbx ; jmp r10
0x000002000010902e : pop rsp ; and al, 0x70 ; add rsp, 0x50 ; pop rdi ; ret
0x0000020000133f65 : pop rsp ; and al, 0x70 ; add rsp, 0x60 ; pop rbp ; ret
0x00000200000f75e9 : pop rsp ; and al, 0x70 ; add rsp, 0x60 ; pop rdi ; ret
0x00000200001d794f : pop rsp ; and al, 0x70 ; add rsp, 0x60 ; pop rsi ; ret
0x00000200001ef043 : pop rsp ; and al, 0x78 ; add rsp, 0x50 ; pop rbp ; ret
0x00000200001ece35 : pop rsp ; and al, 0x78 ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000030b65 : pop rsp ; and al, 0x78 ; add rsp, 0x60 ; pop rdi ; ret
0x00000200003b6836 : pop rsp ; and al, 0x78 ; add rsp, 0x60 ; pop rsi ; ret
0x000002000022df77 : pop rsp ; and al, 0x78 ; mov rax, rdx ; jmp 0x2000022df86
0x00000200000f1693 : pop rsp ; and al, 8 ; mov al, dl ; ret
0x00000200001a7c74 : pop rsp ; and al, 8 ; mov al, r10b ; ret
0x00000200001fbec5 : pop rsp ; and al, 8 ; mov al, r8b ; ret
0x0000020000634ba3 : pop rsp ; and al, 8 ; mov al, r9b ; ret
0x00000200000299c4 : pop rsp ; and al, 8 ; mov dword ptr [r9 + 0x18], eax ; ret
0x000002000074855f : pop rsp ; and al, 8 ; mov eax, 1 ; ret
0x000002000021e7ee : pop rsp ; and al, 8 ; mov eax, ecx ; ret
0x000002000046b940 : pop rsp ; and al, 8 ; mov eax, edx ; ret
0x0000020000117db9 : pop rsp ; and al, 8 ; mov eax, r10d ; ret
0x000002000004dece : pop rsp ; and al, 8 ; mov eax, r11d ; ret
0x0000020000052952 : pop rsp ; and al, 8 ; mov eax, r8d ; ret
0x0000020000020006 : pop rsp ; and al, 8 ; mov eax, r9d ; ret
0x00000200001a779c : pop rsp ; and al, 8 ; mov qword ptr [r8], r11 ; ret
0x000002000074dddf : pop rsp ; and al, 8 ; mov rax, r10 ; ret
0x0000020000126bb5 : pop rsp ; and al, 8 ; mov rax, r11 ; ret
0x00000200004fc3d2 : pop rsp ; and al, 8 ; mov rax, r8 ; ret
0x00000200006c18f3 : pop rsp ; and al, 8 ; mov rax, r9 ; ret
0x0000020000031b13 : pop rsp ; and al, 8 ; mov rdi, qword ptr [rsp + 0x10] ; ret
0x0000020000024b8c : pop rsp ; and al, 8 ; mov rdi, qword ptr [rsp + 0x18] ; ret
0x000002000003850e : pop rsp ; and al, 8 ; mov rsi, qword ptr [rsp + 0x10] ; ret
0x000002000021b9ce : pop rsp ; and al, 8 ; mov rsi, qword ptr [rsp + 0x18] ; ret
0x00000200006421ad : pop rsp ; and al, 8 ; movzx eax, r9w ; ret
0x0000020000009c3e : pop rsp ; and al, 8 ; ret
0x0000020000507bd4 : pop rsp ; call 0x200001356a8
0x00000200004c97ff : pop rsp ; enter -0x1701, 0x69 ; ret 0x89ff
0x0000020000202e1c : pop rsp ; in al, -1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003dc310 : pop rsp ; jmp 0x200003dc2d8
0x00000200004dbbd9 : pop rsp ; jne 0x200004dbbd5 ; xor al, al ; ret
0x00000200003fb339 : pop rsp ; jrcxz 0x200003fb342 ; add rsp, 0x28 ; ret
0x0000020000507bf8 : pop rsp ; lea rcx, qword ptr [rax + 2] ; call 0x200001356ac
0x0000020000669401 : pop rsp ; lea rdx, qword ptr [rsp + 0x58] ; call rax
0x000002000001b99b : pop rsp ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; add rcx, rdx ; jmp rcx
0x000002000020af58 : pop rsp ; loop 0x2000020af61 ; add rsp, 0x48 ; ret
0x0000020000681689 : pop rsp ; mov rax, qword ptr [rdx + 0x18] ; add rax, rcx ; ret
0x000002000049a7a8 : pop rsp ; mov rcx, r13 ; call 0x200000c23c7
0x000002000049a7a7 : pop rsp ; mov rcx, r13 ; call 0x200000c23c8
0x00000200003f014c : pop rsp ; outsd dx, dword ptr [rsi] ; ret
0x0000020000149054 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000200000095eb : pop rsp ; pop rbp ; pop rbx ; ret
0x000002000000c4b0 : pop rsp ; pop rbp ; ret
0x000002000008af88 : pop rsp ; pop rbx ; pop rbp ; ret
0x000002000004ab24 : pop rsp ; pop rbx ; ret
0x000002000010587b : pop rsp ; pop rdi ; jmp 0x200000c1b34
0x000002000001225b : pop rsp ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000001808a : pop rsp ; pop rdi ; pop rbp ; ret
0x000002000007e4f1 : pop rsp ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000b7f60 : pop rsp ; pop rdi ; pop rbx ; ret
0x00000200001abbe1 : pop rsp ; pop rdi ; pop rcx ; ret
0x0000020000497bc8 : pop rsp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; jmp 0x200000ba7e8
0x00000200003ad912 : pop rsp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; pop rcx ; ret
0x0000020000008c81 : pop rsp ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000009011c : pop rsp ; pop rdi ; pop rsi ; pop rbp ; pop rcx ; ret
0x0000020000003153 : pop rsp ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000003ac0 : pop rsp ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000017434 : pop rsp ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000002ce17 : pop rsp ; pop rdi ; pop rsi ; pop rcx ; ret
0x0000020000002933 : pop rsp ; pop rdi ; pop rsi ; ret
0x0000020000002c2d : pop rsp ; pop rdi ; ret
0x0000020000062ebd : pop rsp ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000008a2ce : pop rsp ; pop rsi ; pop rbp ; ret
0x00000200000c9bf7 : pop rsp ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000cca66 : pop rsp ; pop rsi ; pop rbx ; ret
0x0000020000073227 : pop rsp ; pop rsi ; ret
0x000002000075d7d2 : pop rsp ; popfq ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; push rsi ; ret
0x0000020000176a5d : pop rsp ; popfq ; in eax, dx ; dec dword ptr [rax - 0x7d] ; ret 0x830c
0x000002000039ce94 : pop rsp ; push qword ptr [rsp + rax + 0x41] ; mov al, dl ; ret
0x000002000049b390 : pop rsp ; push rbx ; ret 0x40ff
0x000002000007bb15 : pop rsp ; rcl dword ptr [rax], 1 ; ret
0x00000200000072e3 : pop rsp ; ret
0x00000200003a41b2 : pop rsp ; ret 0x4102
0x00000200004a6d4f : pop rsp ; ret 0x4804
0x000002000002ef86 : pop rsp ; ret 0x4878
0x00000200004c1c08 : pop rsp ; ret 0x48ff
0x000002000060b3c6 : pop rsp ; ret 0x4cff
0x000002000004fa30 : pop rsp ; ret 0x6602
0x0000020000643917 : pop rsp ; ret 0x7408
0x00000200004c2e5b : pop rsp ; ret 0x8bff
0x00000200007585ea : pop rsp ; ret 0xc7ff
0x00000200004c2be4 : pop rsp ; ret 0xe9ff
0x0000020000764b40 : pop rsp ; ret 0xff9d
0x000002000075de78 : pop rsp ; ret 0xffb7
0x0000020000573260 : pop rsp ; ret 0xffbd
0x00000200005770e2 : pop rsp ; ret 0xffe7
0x0000020000225f6c : pop rsp ; ret 0xffff
0x00000200007494bd : pop rsp ; ret 2
0x00000200007697bf : pop rsp ; sar edi, -0x48 ; push rax ; ret
0x00000200004c045b : pop rsp ; sar edi, 0x48 ; add esp, 0x28 ; ret
0x0000020000602a84 : pop rsp ; sbb esp, dword ptr [rax] ; add r10, rcx ; jmp r10
0x000002000074859a : pop rsp ; stc ; jmp qword ptr [rax]
0x0000020000748576 : pop rsp ; stc ; jmp rax
0x00000200004d3d44 : pop rsp ; str word ptr [rax - 0x7d] ; ret 0xeb28
0x000002000058e7a0 : pop rsp ; xlatb ; inc dword ptr [rbx - 0x2be40ac3] ; call qword ptr [rdi]
0x0000020000464b9c : popfq ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200000ba419 : popfq ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000056042 : popfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000141555 : popfq ; add byte ptr [rax], al ; add cl, ch ; and cl, cl ; add byte ptr [rax], al ; ret
0x0000020000408780 : popfq ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x00000200000123b4 : popfq ; add byte ptr cs:[rax + 0x3b], cl ; ret 0x850f
0x0000020000508b83 : popfq ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret
0x0000020000453a16 : popfq ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000013b7f8 : popfq ; add eax, dword ptr [rax] ; add byte ptr [rcx - 1], al ; ret 0x95e9
0x00000200001dc067 : popfq ; call qword ptr [rcx]
0x000002000043771f : popfq ; cdq ; ret
0x000002000073e302 : popfq ; cmp byte ptr [rax + rax], cl ; add byte ptr [rax + 0xb], cl ; ret 0x20bf
0x000002000075d7d3 : popfq ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x85 ; push rsi ; ret
0x00000200001997c8 : popfq ; hlt ; inc dword ptr [rbx] ; ret
0x0000020000438a45 : popfq ; in al, dx ; dec dword ptr [rax - 0x73] ; xchg rax, r15 ; call qword ptr [rax]
0x0000020000176a5e : popfq ; in eax, dx ; dec dword ptr [rax - 0x7d] ; ret 0x830c
0x0000020000176a6b : popfq ; in eax, dx ; inc dword ptr [rcx - 1] ; ret 0x8348
0x0000020000760e29 : popfq ; inc dword ptr [rbp - 0xf68b40] ; ret
0x000002000062bfa0 : popfq ; jmp qword ptr [rbx]
0x0000020000173f7d : popfq ; mov esi, 0xf641fffa ; ret 0x7402
0x000002000012eb03 : popfq ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000016c2b : popfq ; or al, byte ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000057f8b : popfq ; or byte ptr [rdx], dl ; add byte ptr [rax - 0x3fffff45], bh ; ret
0x000002000053cb75 : popfq ; or dword ptr [rax], eax ; mov eax, 1 ; ret
0x00000200000db3e7 : popfq ; or eax, 0x840f0022 ; ret 1
0x000002000077e4ff : popfq ; out 0xb5, al ; push rsi ; ret
0x00000200004a5e7f : popfq ; outsb dx, byte ptr [rsi] ; sar edi, -0x75 ; ret
0x00000200004a32ce : popfq ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x4a], al ; ret
0x0000020000739a38 : popfq ; pop rax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000766560 : popfq ; push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000200000cccc7 : popfq ; push rcx ; add al, 0 ; mov r8, qword ptr [rsp + 0x38] ; call rax
0x000002000077e52f : popfq ; push rsi ; ret
0x000002000020ddff : popfq ; ret
0x00000200006d9c79 : popfq ; ret 0x25ff
0x00000200004924a3 : popfq ; ret 0x4cff
0x00000200005aa1bb : popfq ; ret 0x5ce9
0x00000200006b4a7e : popfq ; ret 0x83ff
0x00000200006b4a98 : popfq ; ret 0x8dff
0x0000020000747497 : popfq ; ret 0xffb8
0x0000020000631ecb : popfq ; ret 0xffd4
0x00000200004b8619 : popfq ; sar bh, 0x8b ; ret
0x000002000073abf8 : popfq ; sbb byte ptr [rax + rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000073c203 : popfq ; sbb byte ptr [rip - 0x7cb80000], al ; ret
0x00000200001291a1 : popfq ; sbb eax, 0xc0940f00 ; ret
0x00000200003f181f : popfq ; xchg eax, ebx ; ret 0x84ff
0x0000020000035798 : popfq ; xor al, 0 ; call rax
0x00000200006cd090 : popfq ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000017b736 : prefetchnta byte ptr [rax] ; mov rdx, rdi ; call 0x200000979d8
0x0000020000230caa : prefetchw byte ptr [rcx] ; ret
0x00000200000c6cd2 : psubq mm7, mm7 ; dec dword ptr [rdi] ; mov dh, 0x93 ; ret
0x000002000050b6c8 : psubsb mm2, qword ptr [r9] ; ret
0x0000020000424f62 : psubsb mm2, qword ptr [rax - 0x74003aa3] ; push rbp ; ret
0x000002000050b6c9 : psubsb mm2, qword ptr [rcx] ; ret
0x000002000051b0c0 : psubsb mm3, qword ptr [r9] ; push rbx ; ret 0x8bff
0x000002000051b0c1 : psubsb mm3, qword ptr [rcx] ; push rbx ; ret 0x8bff
0x00000200003e45cc : psubsb mm6, qword ptr [rsi] ; scasb al, byte ptr [rdi] ; ret
0x000002000050a9e0 : psubsb mm7, mm2 ; pop rcx ; ret
0x00000200004e5dd9 : psubsb mm7, qword ptr [rbp - 0x170014c4] ; rcr byte ptr [rdx], 1 ; ret
0x00000200000488a4 : push -0x14ffe179 ; ret 0x8a80
0x0000020000142eb5 : push -0x16ffffff ; ret 0xaf
0x0000020000140eb5 : push -0x17000000 ; ret 0xcf
0x000002000061bf1c : push -0x17003191 ; ret
0x000002000049b19c : push -0x173174b8 ; push r13 ; ret 0x41ff
0x0000020000503004 : push -0x1733ccb8 ; jae 0x20000503013 ; ret
0x00000200004f6ded : push -0x1733ccb8 ; mov al, bl ; ret
0x0000020000217824 : push -0x1c74b6f0 ; pop rdi ; ret
0x000002000045908a : push -0x2ef17 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005d71a4 : push -0x53e1609 ; or al, 0x8b ; ret 0xe8c1
0x000002000068531c : push -0x63c272b4 ; sti ; ret
0x000002000016a931 : push -0x6d0 ; ret
0x00000200004766c0 : push -0x72fffffd ; push rax ; add cl, byte ptr [rdi] ; ret 0xb983
0x00000200004dd5d4 : push -0x74000763 ; ret
0x000002000055eb57 : push -0x74001a7e ; ret
0x00000200004c2d5f : push -0x7400ccbb ; ret 0x348
0x00000200003b7026 : push -0x742774b8 ; adc bh, bh ; ret 0xe2c1
0x00000200006ceb23 : push -0x74b30002 ; ret
0x000002000075284a : push -0x74b62975 ; int 0xff
0x00000200000b373b : push -0x74b70002 ; ret
0x00000200001e8059 : push -0x74b70d75 ; jmp 0x20000174361
0x00000200000f039b : push -0x74bb0007 ; ret
0x00000200005b031b : push -0x74bb0014 ; ret
0x00000200005fdcf3 : push -0x74fc76b8 ; ret 0x8b48
0x000002000008f3a0 : push -0x74fe76b8 ; ret
0x00000200004f5397 : push -0x74fff6a5 ; ret
0x0000020000117566 : push -0x74fffa55 ; ret
0x000002000004cd63 : push -0x7841f0bc ; ret
0x00000200007636b8 : push -0x7a002380 ; sar byte ptr [rax + 7], 0xff ; ret
0x000002000059b810 : push -0x7b0015e3 ; ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x000002000058ec50 : push -0x7cbe0009 ; ret
0x00000200000429cf : push -0x7ce6173f ; loopne 0x200000429de ; ret
0x00000200000429ce : push -0x7ce6173f ; loopne 0x200000429df ; ret
0x0000020000491b54 : push -0x9003f76 ; ret
0x0000020000189d6e : push -0x9ffffff ; ret 0x7501
0x000002000004b220 : push -0x9ffffff ; ret 0xf01
0x00000200005ca769 : push -0xcc003a ; jmp 0x200004d69d2
0x00000200004ce8f6 : push -0xda8bf0 ; ret 0xd33b
0x00000200006a9ee3 : push 0 ; add rcx, rdx ; jmp rcx
0x00000200006aa632 : push 0 ; ret 0x6a93
0x00000200006aa62e : push 0 ; xchg eax, esi ; xchg eax, ecx ; push 0 ; ret 0x6a93
0x0000020000029aaa : push 0x13 ; add byte ptr [rbp + 0x33], al ; fcomi st(6) ; ret 0x751e
0x0000020000029aed : push 0x13 ; add byte ptr [rbp - 0x74b68b01], al ; ret
0x0000020000788cb0 : push 0x14078c3 ; add byte ptr [rax], al ; add al, bl ; ret
0x0000020000435f3d : push 0x16 ; add byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x0000020000126dc0 : push 0x1abf ; add byte ptr [rax], al ; add al, ch ; ret
0x000002000060f4a2 : push 0x1b ; ret 0x8aff
0x0000020000595aff : push 0x24448948 ; and al, ch ; ret 0xf7a9
0x000002000046300f : push 0x24448948 ; sub byte ptr [rbp + 0xf], cl ; ret 0x8d48
0x0000020000129d84 : push 0x244c8948 ; and byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000779342 : push 0x244c8d48 ; cmp byte ptr [rax - 0x7d], cl ; ret 0xe804
0x000002000049a28d : push 0x2464894c ; jo 0x2000049a291 ; ret
0x0000020000084612 : push 0x2d ; cli ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200006bb932 : push 0x2e ; ret 0x84ff
0x00000200000519cb : push 0x30c48348 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000604d05 : push 0x30c48348 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000013b1f3 : push 0x33 ; sal dh, cl ; ret
0x0000020000483bec : push 0x33ffe76b ; shr al, cl ; in al, dx ; ret
0x00000200006b5192 : push 0x35 ; ret 0xe8ff
0x000002000060d4a2 : push 0x3b ; ret 0x48ff
0x00000200000384ac : push 0x3b ; sal dword ptr [rcx + rdx - 0x75], cl ; ret 0xf49
0x000002000042e03b : push 0x3ebb ; add byte ptr [rsi + 0x3b], ah ; ret
0x00000200003bb63a : push 0x40c48348 ; pop r13 ; ret
0x0000020000785b04 : push 0x40c48348 ; pop r14 ; pop rdi ; pop rbp ; ret
0x000002000021f22c : push 0x40c48348 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000007f2e : push 0x40c48348 ; pop r14 ; ret
0x000002000001e36e : push 0x40c48348 ; pop r15 ; ret
0x00000200000882da : push 0x40c48348 ; pop rbp ; ret
0x00000200003be373 : push 0x40c48348 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001075ba : push 0x40c48348 ; pop rdi ; ret
0x00000200004a5032 : push 0x45 ; ret 0xfff
0x0000020000512619 : push 0x457f0ff3 ; cwde ; call 0x200001403e9
0x000002000051dc26 : push 0x457f0ff3 ; enter -0x5018, 0x27 ; ret 0x85ff
0x00000200004b5474 : push 0x48004b47 ; add ecx, edx ; jmp rcx
0x000002000065454f : push 0x4800ffca ; add esp, 0x40 ; pop rbx ; ret
0x00000200004be9cc : push 0x48c48348 ; pop rdi ; pop rbx ; ret
0x00000200004e8bb1 : push 0x48c48348 ; ret
0x000002000076ac34 : push 0x48ffb6fd ; add esp, 0x20 ; pop rbx ; ret
0x0000020000511414 : push 0x48ffc21d ; add esp, 0x58 ; ret
0x0000020000206024 : push 0x48ffec9b ; add esp, 0x38 ; ret
0x00000200001fbc40 : push 0x48fff2a0 ; add esp, 0x48 ; ret
0x0000020000131ee4 : push 0x48fff940 ; add esp, 0x28 ; ret
0x00000200000d63f4 : push 0x48ffffe8 ; add esp, 0x48 ; ret
0x00000200003cd783 : push 0x4e8dd233 ; add ch, al ; ret 0x879
0x00000200006c0b74 : push 0x4f ; ret
0x00000200006c1085 : push 0x50c48348 ; pop r14 ; ret
0x000002000005c04c : push 0x50c48348 ; pop rbp ; ret
0x000002000001c1a5 : push 0x50c48348 ; pop rdi ; ret
0x00000200003e75de : push 0x50c48348 ; pop rsi ; ret
0x000002000075678c : push 0x58bffdc ; ja 0x20000756724 ; ret 0x48ff
0x00000200003fb0ee : push 0x59 ; ret
0x000002000010d97e : push 0x5c415d41 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000073221 : push 0x5d415f41 ; pop r12 ; pop rsi ; ret
0x0000020000053d90 : push 0x5d415f41 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200005e51ff : push 0x5d5b5e5f ; ret
0x00000200000d73ca : push 0x5d5f5e41 ; pop rbx ; ret
0x00000200000b39aa : push 0x5e415f41 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000048050 : push 0x5e415f41 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004c50b2 : push 0x6a ; ret 0x49ff
0x000002000069f6f9 : push 0x71 ; or cl, byte ptr [rbx] ; mov ch, 0x49 ; ret
0x0000020000052c2f : push 0x74d28548 ; sub eax, dword ptr [rbp - 0x75] ; ret 0xdb85
0x00000200007572da : push 0x7f ; ret 0x8bff
0x0000020000171bc4 : push 0x84f8b48 ; call r8
0x00000200006b612e : push 0x86 ; ret 0xff
0x00000200004cc839 : push 0x8b ; ret
0x00000200006d9d4e : push 0x9c ; ret 0x48ff
0x00000200006b4839 : push 0x9e ; ret 0x1ff
0x00000200006b499a : push 0x9e ; ret 0x76ff
0x000002000045a990 : push 0x9e905eb ; jmp 0x1ffc43da9a2
0x00000200004f9112 : push 0xa0 ; ret
0x00000200006889f3 : push 0xac ; push qword ptr [rbx] ; ror byte ptr [rax - 0x73], 0x4d ; ret 0xd233
0x000002000021af86 : push 0xb ; add byte ptr [rbx], bh ; ret 0xf72
0x000002000021af92 : push 0xb ; add byte ptr [rcx], bh ; add dword ptr [rdx + 3], esi ; xor al, al ; ret
0x00000200005f6572 : push 0xb7 ; ret
0x000002000075d6be : push 0xb9 ; stc ; dec dword ptr [rdi] ; test dword ptr [rax], edi ; ret
0x00000200006d7b3e : push 0xbe ; ret 0x40ff
0x00000200000f2026 : push 0xc0 ; sub byte ptr [rax], al ; ret
0x0000020000692a9a : push 0xd6 ; ret
0x000002000074b832 : push 0xd8bff90 ; loope 0x2000074b879 ; ret
0x000002000069259a : push 0xdb ; ret
0x0000020000182c5b : push 0xf0 ; dec dword ptr [rbx + rcx*4 + 0x15] ; ret
0x000002000051de5d : push 0xf1 ; dec dword ptr [rax - 0x7d] ; ret
0x000002000019f7f9 : push 0xf8 ; jmp qword ptr [rbx]
0x000002000016cd55 : push 0xf9 ; dec dword ptr [rax + 0x2b] ; ret 0x8948
0x00000200004eb4d2 : push 0xfa ; fdivp st(7) ; test rax, rax ; je 0x200004eb4e6 ; call rax
0x00000200000dbd7d : push 0xfd ; dec dword ptr [rbp - 0x75] ; ret 0x44c7
0x0000020000775df4 : push 0xfffc082 ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000200006226b8 : push 2 ; add al, al ; add rsp, 0x70 ; pop rbp ; ret
0x00000200000e83b3 : push 3 ; add byte ptr [rax], al ; xor bh, 0xff ; push rsi ; ret
0x00000200000800d7 : push qword ptr [r11] ; ret
0x000002000014f1ca : push qword ptr [r13 - 0xe] ; mov rax, r11 ; ret
0x00000200005760d6 : push qword ptr [rax + rcx + 0x48] ; mov ecx, edi ; call 0x200000c23c8
0x000002000066e6c8 : push qword ptr [rax + rcx - 0x7f] ; jmp qword ptr [rbx]
0x000002000072b11f : push qword ptr [rax] ; sar bh, cl ; call qword ptr [rsi]
0x0000020000430caa : push qword ptr [rbp + 0x44] ; mov dword ptr [rdx], eax ; mov eax, ecx ; ret
0x0000020000416b65 : push qword ptr [rbp + 0x60] ; mov ecx, eax ; call 0x200000407f8
0x0000020000031d9c : push qword ptr [rbp + 0xb] ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000004fa2b : push qword ptr [rbp + 0xf] ; mov bh, 0x5c ; ret 0x6602
0x00000200004535fd : push qword ptr [rbp + 0xf] ; mov dh, 0x47 ; sub byte ptr [rbx], bh ; ret
0x0000020000133191 : push qword ptr [rbp + 1] ; ret
0x00000200001ef53b : push qword ptr [rbp + 3] ; xor eax, eax ; ret
0x000002000053e9ff : push qword ptr [rbp + 5] ; add rsp, 0x58 ; ret
0x000002000065a13f : push qword ptr [rbp + 5] ; lea eax, dword ptr [r9 + 0xb] ; ret
0x0000020000061ebf : push qword ptr [rbp + rax + 0x48] ; add esp, 0x28 ; ret
0x00000200004cb1b8 : push qword ptr [rbp + rax - 0x18] ; mov word ptr [rdx], dr1 ; ret 0xe8ff
0x000002000055f9ad : push qword ptr [rbp + rax - 0x18] ; ret
0x000002000003ea5c : push qword ptr [rbp + rbp*8 + 0x49] ; mov eax, eax ; ret
0x0000020000748e02 : push qword ptr [rbp + rbx - 0x75] ; ret 0xff0
0x0000020000226d00 : push qword ptr [rbp + rcx - 0x15] ; in eax, 0x33 ; ror byte ptr [rax - 0x7d], cl ; ret
0x00000200000d49f9 : push qword ptr [rbp + rcx*8 + 0xf] ; mov dh, 0x57 ; jo 0x200000d49ff ; ret 0xf04
0x000002000075e90c : push qword ptr [rbp + rsi - 0x75] ; ret
0x000002000073359b : push qword ptr [rbp - 0x11] ; mov rax, rdx ; jmp 0x200007335aa
0x0000020000735292 : push qword ptr [rbp - 0x11] ; mov rax, rdx ; jmp 0x200007352a1
0x0000020000737178 : push qword ptr [rbp - 0x11] ; mov rax, rdx ; jmp 0x20000737187
0x00000200001c285b : push qword ptr [rbp - 0x12] ; mov byte ptr [rcx], 0 ; mov rax, rdx ; ret
0x0000020000737c94 : push qword ptr [rbp - 0x12] ; mov rax, rdx ; jmp 0x20000737ca3
0x0000020000225793 : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x200002257a2
0x0000020000225a5c : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x20000225a74
0x000002000022b0ee : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x2000022b0fd
0x000002000022b22f : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x2000022b23e
0x000002000022b365 : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x2000022b37d
0x000002000022f2a0 : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x2000022f2af
0x000002000022f519 : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x2000022f542
0x000002000073b99f : push qword ptr [rbp - 0x13] ; mov rax, rdx ; jmp 0x2000073b9ae
0x0000020000735f6f : push qword ptr [rbp - 0x14] ; mov r14, qword ptr [rbp - 0x80] ; mov rax, rdx ; jmp 0x20000735f86
0x0000020000731f21 : push qword ptr [rbp - 0x14] ; mov rax, rdx ; jmp 0x20000731f30
0x0000020000733c46 : push qword ptr [rbp - 0x14] ; mov rax, rdx ; jmp 0x20000733c55
0x0000020000734050 : push qword ptr [rbp - 0x14] ; mov rax, rdx ; jmp 0x2000073405f
0x000002000073d931 : push qword ptr [rbp - 0x14] ; mov rax, rdx ; jmp 0x2000073d940
0x000002000073e117 : push qword ptr [rbp - 0x14] ; mov rax, rdx ; jmp 0x2000073e126
0x000002000073bd02 : push qword ptr [rbp - 0x15] ; lea r15d, dword ptr [rdi + 0x50] ; mov rax, rdx ; jmp 0x2000073bd19
0x000002000022a7e2 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x2000022a7f1
0x0000020000230487 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x20000230496
0x00000200007311e0 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x200007311ef
0x0000020000734691 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x200007346a0
0x0000020000735b57 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x20000735b66
0x00000200007365a1 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x200007365b0
0x00000200007374ab : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x200007374ba
0x0000020000739b00 : push qword ptr [rbp - 0x15] ; mov rax, rdx ; jmp 0x20000739b0f
0x0000020000222af7 : push qword ptr [rbp - 0x15] ; mov rsi, qword ptr [rbp + 0x38] ; mov rax, rdx ; jmp 0x20000222b0e
0x0000020000227e67 : push qword ptr [rbp - 0x15] ; mov rsi, qword ptr [rbp + 0x38] ; mov rax, rdx ; jmp 0x20000227e7e
0x000002000073ab6b : push qword ptr [rbp - 0x15] ; xor r12d, r12d ; mov rax, rdx ; jmp 0x2000073ab80
0x000002000022a599 : push qword ptr [rbp - 0x16] ; mov esi, dword ptr [rbp + 0x68] ; mov rax, rdx ; jmp 0x2000022a5ae
0x000002000013e0c3 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000013e0d2
0x000002000013ee7f : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000013ee8e
0x000002000013f195 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000013f1a4
0x000002000013f579 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000013f588
0x0000020000221cf0 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000221cff
0x000002000022242d : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000022243c
0x0000020000222743 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000222752
0x000002000022298c : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000022299b
0x0000020000222d98 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000222da7
0x00000200002230ce : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x200002230dd
0x00000200002231e9 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000223261
0x0000020000223363 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000223372
0x000002000022348b : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000022349a
0x0000020000224300 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000022430f
0x0000020000226033 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000226042
0x0000020000226bed : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000226bfc
0x0000020000226f09 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000226f18
0x0000020000229dfa : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000229e09
0x000002000022b970 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000022b97f
0x000002000022c15f : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000022c16e
0x000002000072c611 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000072c67b
0x000002000072c9b4 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000072c9c3
0x0000020000732984 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x20000732993
0x000002000073a791 : push qword ptr [rbp - 0x16] ; mov rax, rdx ; jmp 0x2000073a7a0
0x0000020000224da1 : push qword ptr [rbp - 0x16] ; mov rsi, qword ptr [rbp + 0x38] ; mov rax, rdx ; jmp 0x20000224db8
0x0000020000731341 : push qword ptr [rbp - 0x17] ; mov rax, rdx ; jmp 0x20000731350
0x00000200001cb93f : push qword ptr [rbp - 0x17] ; xor eax, eax ; ret
0x0000020000123571 : push qword ptr [rbp - 0x29] ; ret
0x00000200001bebf1 : push qword ptr [rbp - 0x34] ; ret
0x00000200001388ff : push qword ptr [rbp - 0x3e] ; jmp 0x200001388e3
0x000002000014f1cb : push qword ptr [rbp - 0xe] ; mov rax, r11 ; ret
0x00000200004858e0 : push qword ptr [rbp - 0xe] ; ret
0x00000200001202ab : push qword ptr [rbp - 0xf] ; ret
0x00000200005d68b3 : push qword ptr [rbx + 4] ; or eax, 0xffffffff ; ret
0x00000200006b6c93 : push qword ptr [rbx + 6] ; mov eax, 1 ; ret
0x0000020000082afc : push qword ptr [rbx + rcx + 0x4d] ; test eax, eax ; jne 0x20000082b0d ; ret
0x0000020000784cda : push qword ptr [rbx] ; fisttp dword ptr [rax - 0x75] ; ret
0x000002000077a99b : push qword ptr [rbx] ; fucomi st(1) ; ret
0x00000200005cc5d4 : push qword ptr [rbx] ; fucomi st(1) ; ret 0xf4ec
0x0000020000431905 : push qword ptr [rbx] ; idiv byte ptr [rbx] ; ret 0xb841
0x00000200006364d3 : push qword ptr [rbx] ; leave ; call 0x200001327c9
0x0000020000595294 : push qword ptr [rbx] ; leave ; call 0x200003b14a5
0x000002000016f048 : push qword ptr [rbx] ; leave ; call qword ptr [rax]
0x00000200006aa3cf : push qword ptr [rbx] ; leave ; call qword ptr [rip - 0x3dac50]
0x000002000049a2ae : push qword ptr [rbx] ; leave ; mov r15d, eax ; call 0x200000bc569
0x00000200000800d8 : push qword ptr [rbx] ; ret
0x0000020000573258 : push qword ptr [rbx] ; rol byte ptr [rbp + rcx*4 + 0x42], cl ; cmp al, ch ; pop rsp ; ret 0xffbd
0x000002000047908b : push qword ptr [rbx] ; ror byte ptr [rax + 0x3b], 0xa ; jne 0x2000047909c ; ret
0x00000200004f6a7d : push qword ptr [rbx] ; ror byte ptr [rax + 0x3b], cl ; pop rax ; cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc28b
0x00000200006889f5 : push qword ptr [rbx] ; ror byte ptr [rax - 0x73], 0x4d ; ret 0xd233
0x000002000000ab94 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], 0x6c ; and al, 0x28 ; pop rdi ; ret
0x00000200004c0a05 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x200000e285d
0x0000020000494dcf : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000231018
0x000002000060cba1 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000231019
0x0000020000519a7b : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; iretd ; call r14
0x00000200003a24d0 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret
0x00000200004ccd4b : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x200000f539d
0x00000200005c4d30 : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000231018
0x000002000060357c : push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000231019
0x000002000076904d : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; ret
0x0000020000116522 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000011658d ; ret
0x00000200004eb3dc : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200004eb447 ; ret
0x00000200005f4278 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x00000200001b958c : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x00000200000c8f18 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rbx ; ret
0x00000200004e77b6 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbp ; ret
0x00000200001b7973 : push qword ptr [rbx] ; ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000200005d5849 : push qword ptr [rbx] ; ror byte ptr [rbp - 0x75], cl ; ret
0x000002000046fcea : push qword ptr [rbx] ; ror byte ptr [rbp - 0x7b], 0xc0 ; je 0x2000046fcfe ; call r8
0x00000200006c1da5 : push qword ptr [rbx] ; ror byte ptr [rcx - 0x3e3591f3], 0xff ; ret
0x000002000077dfef : push qword ptr [rbx] ; ror byte ptr [rcx - 0x75], cl ; ret 0xf749
0x000002000068764e : push qword ptr [rbx] ; shl byte ptr [rsi + 0x39], cl ; sbb dword ptr [rbp + rcx - 1], esi ; ret 0x8348
0x00000200004a1024 : push qword ptr [rbx] ; shr al, cl ; adc al, 0x18 ; ret 0x48ff
0x000002000049e814 : push qword ptr [rbx] ; shr al, cl ; and al, 0x40 ; ret 0x48ff
0x0000020000483bef : push qword ptr [rbx] ; shr al, cl ; in al, dx ; ret
0x00000200004977c5 : push qword ptr [rbx] ; shr al, cl ; jae 0x20000497781 ; ret 0xf0ff
0x00000200000bf949 : push qword ptr [rbx] ; shr al, cl ; mov edi, 0xeb001716 ; ret 0xcccc
0x0000020000414db2 : push qword ptr [rbx] ; shr al, cl ; push rsi ; ret 0xffe1
0x00000200004d30d9 : push qword ptr [rbx] ; shr al, cl ; ret
0x00000200004cd146 : push qword ptr [rbx] ; shr al, cl ; ret 0xd63e
0x000002000017b74f : push qword ptr [rbx] ; shr cl, 0x1e ; ret 0xffee
0x00000200005771f2 : push qword ptr [rbx] ; shr cl, 0xd6 ; ret
0x00000200001980ab : push qword ptr [rbx] ; shr cl, 0xdd ; xor ah, dh ; push rsi ; ret
0x000002000005994a : push qword ptr [rcx + rax - 0x3d] ; xor eax, eax ; ret
0x00000200000bca6e : push qword ptr [rcx + rbp*2 + 0x48] ; lea edx, dword ptr [rdi + 0x10] ; call r8
0x0000020000096b54 : push qword ptr [rcx + rbx - 0x75] ; ret 0x41f0
0x0000020000029af1 : push qword ptr [rcx + rcx*2 - 0x75] ; ret
0x00000200003dc2ae : push qword ptr [rcx + rsi - 0x18] ; cmp ch, ah ; ret
0x000002000009a29b : push qword ptr [rcx + rsi*8 - 0x75] ; ret 0x41f0
0x00000200004252b4 : push qword ptr [rdi + 0x36] ; xor ecx, ecx ; call 0x2000004585c
0x00000200000e807c : push qword ptr [rdi + 3] ; mov al, dl ; ret
0x0000020000610c50 : push qword ptr [rdi + rax + 0x33] ; shr al, cl ; mov dh, 3 ; ret 0x48ff
0x000002000064f656 : push qword ptr [rdi + rax - 0x7c] ; leave ; jne 0x2000064f669 ; mov al, 1 ; ret
0x0000020000605e94 : push qword ptr [rdi + rbp - 0x7d] ; ret
0x0000020000657494 : push qword ptr [rdi + rcx + 0x3b] ; ret 0xb75
0x00000200005e49f7 : push qword ptr [rdi + rdx + 5] ; in eax, dx ; jmp rsi
0x00000200001e2099 : push qword ptr [rdx + 0x48c28a01] ; add esp, 0x28 ; ret
0x00000200006481ae : push qword ptr [rdx + rax - 1] ; ret
0x0000020000452c2f : push qword ptr [rdx + rbx - 0xa] ; ret
0x00000200006b7005 : push qword ptr [rdx + rdx - 0x75] ; ret 0x8b49
0x00000200003f8e2e : push qword ptr [rdx] ; fild dword ptr [rdi + rcx + 0x20] ; ret 0xf45
0x00000200004b6cc7 : push qword ptr [rdx] ; ret
0x000002000013528b : push qword ptr [rdx] ; ror byte ptr [rax - 0x74b6eefc], 0xc3 ; ret
0x0000020000162a9a : push qword ptr [rdx] ; shr cl, 0xf4 ; add ch, ch ; push rsi ; ret 0x7501
0x000002000049a985 : push qword ptr [rsi + 0x12] ; mov rcx, rsi ; call 0x200000c23c9
0x0000020000443e18 : push qword ptr [rsi + rax + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x00000200005f55b9 : push qword ptr [rsi + rax - 0x48] ; add dword ptr [rax], eax ; add al, al ; ret
0x000002000039ce95 : push qword ptr [rsp + rax + 0x41] ; mov al, dl ; ret
0x0000020000025e20 : push r12 ; call 0x20000025e4d
0x000002000049b1a1 : push r13 ; ret 0x41ff
0x0000020000544ca0 : push r14 ; ret 0x413f
0x0000020000475ced : push r15 ; ret 0x48ff
0x0000020000039316 : push r8 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041b229 : push r8 ; add rsp, 0x20 ; pop rdi ; ret
0x00000200004c937c : push r8 ; call 0x200000ede69
0x000002000051be06 : push r8 ; call 0x20000149155
0x0000020000152852 : push r8 ; call rax
0x0000020000069efc : push r8 ; jne 0x20000069f0f ; sti ; add rsp, 0x28 ; ret
0x00000200001cd96e : push r8 ; jne 0x200001cd983 ; mov rcx, rsi ; call 0x200004c9c59
0x00000200005a924c : push r8 ; lea r8, qword ptr [rbp - 0x30] ; mov edx, r14d ; call rax
0x000002000011c160 : push r8 ; mov eax, r8d ; ret
0x00000200001bec8f : push r8 ; ret
0x0000020000041255 : push r8 ; shr eax, 0x18 ; and al, 1 ; ret
0x000002000041b279 : push r8 ; test al, 0x10 ; jne 0x2000041b294 ; call 0x20000042aa9
0x000002000051b339 : push r9 ; ret 0x85ff
0x000002000012c2e0 : push rax ; adc al, 0xf6 ; ret 0xf02
0x00000200001ad46d : push rax ; adc al, byte ptr [rax] ; call r9
0x00000200001c9dd8 : push rax ; adc byte ptr [rax], al ; call qword ptr [rax]
0x00000200001c9d8a : push rax ; adc byte ptr [rax], al ; mov rbx, rcx ; call qword ptr [rax]
0x0000020000538c4e : push rax ; adc byte ptr [rbp + rcx - 1], dh ; ret 0x8349
0x00000200006c18d4 : push rax ; adc byte ptr [rbx + 0x14394dc1], cl ; ret
0x0000020000494dac : push rax ; adc dh, dh ; ret 0x753f
0x0000020000050c63 : push rax ; adc dh, dh ; ret 0xf01
0x0000020000222bd2 : push rax ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006b79db : push rax ; add al, 0x48 ; add esp, 0x28 ; ret
0x00000200006b6fbc : push rax ; add al, 0x73 ; jbe 0x200006b6f51 ; ret 0x3949
0x00000200003b54f8 : push rax ; add al, 0x75 ; sbb al, byte ptr [rcx - 0x75] ; add byte ptr [rcx - 0x7b], al ; ret 0x4c75
0x00000200004a8b1d : push rax ; add al, 0x8b ; ret 0xc10b
0x000002000056e4a9 : push rax ; add al, 0xf6 ; ret 0xf01
0x000002000041118c : push rax ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x00000200003a2968 : push rax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000657f24 : push rax ; add al, byte ptr [rax] ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000079bde : push rax ; add al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x38 ; ret
0x0000020000773f7c : push rax ; add al, byte ptr [rbx + 0x440f0ff9] ; ret 0x8348
0x000002000020751d : push rax ; add bh, bh ; ret
0x00000200005dcaf3 : push rax ; add bh, bh ; ret 0xb841
0x00000200005b843e : push rax ; add bh, bh ; ret 0xb941
0x0000020000435286 : push rax ; add byte ptr [r9 + 3], cl ; ret 0xe0ff
0x0000020000115d9c : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsi
0x0000020000140bb5 : push rax ; add byte ptr [rax], al ; add cl, ch ; ret 0xd2
0x00000200004c39c3 : push rax ; add byte ptr [rax], al ; je 0x200005c51bd ; ret
0x00000200005dc972 : push rax ; add byte ptr [rcx - 0x47], al ; and eax, 0xff000009 ; ret 0xb841
0x0000020000211b11 : push rax ; add byte ptr [rcx - 0x77], cl ; mov al, 1 ; ret
0x00000200000ab873 : push rax ; add byte ptr [rdi], cl ; test dword ptr [rdi + rsi*8 - 1], ecx ; push rsi ; ret
0x0000020000126b52 : push rax ; add ch, al ; ret
0x00000200001d691b : push rax ; add cl, byte ptr [rbp - 0x75] ; fadd dword ptr [rcx - 0x75] ; ret 0x8b45
0x00000200004766c5 : push rax ; add cl, byte ptr [rdi] ; ret 0xb983
0x00000200000ea7d0 : push rax ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x4a8
0x00000200005a0dba : push rax ; add dh, dh ; ret 0x7504
0x000002000018599f : push rax ; add dl, byte ptr [rsi] ; add byte ptr [rcx], al ; jmp 0x20000091c73
0x00000200003a16f2 : push rax ; add dword ptr [rax + 3], ecx ; ror dword ptr [rax - 0x75], 1 ; ret 0x2b48
0x000002000040379b : push rax ; add dword ptr [rax - 0x75], ecx ; add dword ptr [rcx - 0x7c], eax ; ret 0x1774
0x00000200000e2022 : push rax ; add dword ptr [rax], eax ; add bh, bh ; ret 0x894a
0x0000020000081cc1 : push rax ; add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0xb948
0x00000200001f5fa7 : push rax ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0x00000200000e1bf3 : push rax ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; shr al, cl ; ret 0x6d8
0x000002000067f777 : push rax ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200001ea04d : push rax ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x000002000052cf28 : push rax ; add dword ptr [rax], eax ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x0000020000142bb5 : push rax ; add dword ptr [rax], eax ; add cl, ch ; ret 0xb2
0x00000200006c2736 : push rax ; add dword ptr [rbp - 0x3dbaf037], eax ; ret
0x0000020000761d39 : push rax ; add dword ptr [rbx], ebp ; ret 0x840f
0x0000020000113ac2 : push rax ; add dword ptr [rdi], ecx ; ret 0x7d80
0x00000200005f2ecc : push rax ; add dword ptr [rdi], ecx ; ret 0xd233
0x000002000049cd89 : push rax ; add dx, cx ; movzx eax, dx ; ret
0x00000200003b4caf : push rax ; add eax, 0xf6bf0000 ; ret
0x000002000073bf6b : push rax ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x2eb
0x00000200003aff86 : push rax ; add eax, ebp ; ret
0x00000200001d5387 : push rax ; add eax, ebp ; ret 0xef0b
0x0000020000084916 : push rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200000452c4 : push rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rcx ; ret
0x000002000002c3eb : push rax ; add rsp, 0x20 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000399f55 : push rax ; add rsp, 0x20 ; pop r14 ; pop rsi ; pop rbp ; ret
0x00000200004bb3dd : push rax ; add rsp, 0x20 ; pop r15 ; pop rdi ; pop rbp ; ret
0x00000200000ba489 : push rax ; add rsp, 0x20 ; pop r15 ; pop rdi ; pop rsi ; ret
0x0000020000039317 : push rax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000105d7d : push rax ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000041b22a : push rax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000d8e23 : push rax ; add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x000002000021035b : push rax ; add rsp, 0x28 ; ret
0x000002000013f6cc : push rax ; add rsp, 0x30 ; pop r13 ; ret
0x00000200000b3dfa : push rax ; add rsp, 0x30 ; pop r14 ; pop rbp ; pop rbx ; ret
0x000002000006cdee : push rax ; add rsp, 0x30 ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000460557 : push rax ; add rsp, 0x30 ; pop r14 ; pop rsi ; pop rbp ; ret
0x00000200000441af : push rax ; add rsp, 0x30 ; pop r14 ; ret
0x00000200003a4423 : push rax ; add rsp, 0x30 ; pop r15 ; ret
0x00000200006b8cc0 : push rax ; add rsp, 0x30 ; pop rdi ; jmp rax
0x00000200000c2b2f : push rax ; add rsp, 0x30 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000002f478 : push rax ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000009a115 : push rax ; add rsp, 0x30 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000008218 : push rax ; add rsp, 0x30 ; pop rdi ; ret
0x00000200000e7bdc : push rax ; add rsp, 0x30 ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004c91f2 : push rax ; add rsp, 0x30 ; pop rsi ; ret
0x00000200004037b6 : push rax ; add rsp, 0x38 ; ret
0x000002000068fb01 : push rax ; add rsp, 0x40 ; pop r14 ; ret
0x0000020000451434 : push rax ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000006489 : push rax ; add rsp, 0x40 ; pop rdi ; ret
0x0000020000130c98 : push rax ; add rsp, 0x40 ; pop rsi ; ret
0x000002000010ab40 : push rax ; add rsp, 0x60 ; pop r15 ; pop rsi ; pop rbp ; ret
0x0000020000231c24 : push rax ; add rsp, 0x70 ; pop rdi ; ret
0x000002000008c091 : push rax ; add rsp, 0x78 ; pop rdi ; pop rbp ; ret
0x0000020000658c1c : push rax ; add rsp, 0x80 ; pop rbx ; ret
0x00000200000a0be0 : push rax ; and byte ptr [rax + 0x2b], cl ; ror dword ptr [rax - 1], 1 ; ret 0x3b48
0x00000200005f67ed : push rax ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3d80
0x00000200004b80da : push rax ; and dh, dh ; ret 0x7504
0x00000200001b83b0 : push rax ; and dh, dh ; ret 0x750f
0x00000200004a0460 : push rax ; and dh, dh ; ret 0xf04
0x0000020000421059 : push rax ; call 0x20000045310
0x00000200004249ab : push rax ; call 0x2000004578c
0x0000020000035cef : push rax ; call 0x20000091f43
0x000002000049b14a : push rax ; call 0x200000bccc4
0x00000200003d61ad : push rax ; call 0x200000c23c3
0x00000200001c573b : push rax ; call 0x200000defc9
0x00000200004c937d : push rax ; call 0x200000ede68
0x000002000051a093 : push rax ; call 0x20000140384
0x0000020000513bae : push rax ; call 0x200001403e4
0x00000200007845a7 : push rax ; call 0x20000140803
0x000002000051be07 : push rax ; call 0x20000149154
0x0000020000526af3 : push rax ; call 0x2000014f4c4
0x0000020000526af2 : push rax ; call 0x2000014f4c5
0x0000020000032af8 : push rax ; call qword ptr [rdx]
0x000002000014e436 : push rax ; call r10
0x0000020000781b51 : push rax ; call r12
0x0000020000152853 : push rax ; call rax
0x000002000017f457 : push rax ; call rbx
0x000002000014462f : push rax ; call rdx
0x00000200001c6af5 : push rax ; cmove ecx, dword ptr [rdi] ; and al, dl ; jmp 0x200001c6b16
0x000002000016e735 : push rax ; cmp al, 0xe9 ; out -0x2e, eax ; stc ; inc dword ptr [rbp - 0x75] ; ret 0x8b48
0x0000020000082c14 : push rax ; cmp dh, dh ; ret 0x7420
0x000002000012e29e : push rax ; cmp edx, dword ptr [r8 + 0x40] ; jb 0x2000012e289 ; ret
0x0000020000206240 : push rax ; cmpsb byte ptr [rsi], byte ptr [rdi] ; loope 0x2000020624b ; add rsp, 0x28 ; ret
0x0000020000621416 : push rax ; dec dword ptr [rax - 0x7d] ; ret 0x4803
0x00000200004e8d3d : push rax ; inc dword ptr [rax] ; ret
0x000002000063d77b : push rax ; inc edx ; jmp 0x2000063d75f
0x0000020000671243 : push rax ; inc edx ; jmp 0x20000671216
0x0000020000189250 : push rax ; int1 ; dec dword ptr [rax - 9] ; ret
0x0000020000086237 : push rax ; jae 0x20000086290 ; jb 0x2000008622a ; ret
0x00000200005a5bc8 : push rax ; jae 0x200005a5c17 ; jb 0x200005a5c1f ; mov ecx, edi ; call 0x200000c1e69
0x0000020000086239 : push rax ; jb 0x20000086228 ; ret
0x000002000012e2a2 : push rax ; jb 0x2000012e285 ; ret
0x00000200003e501a : push rax ; je 0x200003e5027 ; ret
0x0000020000404476 : push rax ; je 0x20000404475 ; or dword ptr [rdx], eax ; ret
0x000002000020b5e3 : push rax ; jmp 0x2000020b5ab
0x00000200003e4651 : push rax ; jmp 0x200003e4618
0x0000020000417c1c : push rax ; jmp 0x20000417c24
0x000002000042d445 : push rax ; jmp qword ptr [rbx]
0x0000020000206fda : push rax ; jmp rax
0x0000020000146041 : push rax ; jmp rcx
0x0000020000069efd : push rax ; jne 0x20000069f0e ; sti ; add rsp, 0x28 ; ret
0x00000200001cd96f : push rax ; jne 0x200001cd982 ; mov rcx, rsi ; call 0x200004c9c58
0x000002000019915b : push rax ; jo 0x20000199157 ; push rsi ; ret
0x00000200004d58f4 : push rax ; jo 0x200004d5920 ; and byte ptr [rbp - 0x1f17feb8], cl ; ret
0x000002000060564b : push rax ; jo 0x20000605677 ; and byte ptr [rbx - 0x39751735], cl ; ret 0x48ff
0x0000020000607025 : push rax ; jo 0x20000607093 ; movsxd rbp, eax ; mov dl, 0xac ; ret 0x48ff
0x00000200006089cb : push rax ; jo 0x20000608a39 ; movsxd rbp, eax ; or al, 0x93 ; ret 0x48ff
0x000002000060acd3 : push rax ; jo 0x2000060ad41 ; movsxd rbp, eax ; add al, 0x70 ; ret 0x45ff
0x000002000063b516 : push rax ; jo 0x2000063b506 ; ret 0xbf67
0x00000200003e5438 : push rax ; lahf ; ret
0x000002000060d178 : push rax ; lea ecx, dword ptr [rdx - 0x17] ; call 0x20000231ce7
0x00000200005a924d : push rax ; lea r8, qword ptr [rbp - 0x30] ; mov edx, r14d ; call rax
0x000002000060d3d7 : push rax ; lea rcx, qword ptr [rbx - 8] ; call 0x20000231018
0x0000020000217c98 : push rax ; loopne 0x20000217c62 ; ret 0x187d
0x00000200004ef6f6 : push rax ; mov bh, 0xff ; jmp 0x200004ef6c2
0x00000200000304bb : push rax ; mov byte ptr [rcx], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000051bbec : push rax ; mov byte ptr [rsp + 0x20], 1 ; call 0x20000140aa9
0x00000200000f1f34 : push rax ; mov dword ptr [rax], 4 ; ret
0x00000200005fd2bd : push rax ; mov dword ptr [rbx], ecx ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000024dc4 : push rax ; mov dword ptr [rcx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000141b93 : push rax ; mov eax, 0xcf ; jmp 0x2000014de88
0x0000020000141bd3 : push rax ; mov eax, 0xd1 ; jmp 0x2000014de88
0x0000020000141bf3 : push rax ; mov eax, 0xd2 ; jmp 0x2000014de88
0x0000020000141c13 : push rax ; mov eax, 0xd3 ; jmp 0x2000014de88
0x0000020000141c33 : push rax ; mov eax, 0xd4 ; jmp 0x2000014de88
0x0000020000141c53 : push rax ; mov eax, 0xd5 ; jmp 0x2000014de88
0x0000020000141c73 : push rax ; mov eax, 0xd6 ; jmp 0x2000014de88
0x0000020000135cf1 : push rax ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001afaa6 : push rax ; mov eax, edi ; add rsp, 0x40 ; pop rdi ; ret
0x000002000011c161 : push rax ; mov eax, r8d ; ret
0x000002000051b872 : push rax ; mov eax, r9d ; ret
0x0000020000746631 : push rax ; mov ebx, 0xec8189ff ; pop rbx ; add byte ptr [rax], al ; ret
0x0000020000465bb3 : push rax ; mov qword ptr [r8], rcx ; mov eax, r9d ; ret
0x00000200001e27c4 : push rax ; mov qword ptr [r9], rax ; ret
0x00000200004c0ce7 : push rax ; mov qword ptr [rax], rcx ; jmp 0x200004c0cb5
0x00000200000153bc : push rax ; mov qword ptr [rcx + 0x58], rax ; mov qword ptr [rcx + 0x60], rax ; ret
0x00000200001d3bf7 : push rax ; mov r8, r10 ; jmp 0x200001d3c4b
0x00000200001acf09 : push rax ; mov r9, qword ptr [rip + 0x125567] ; call r9
0x00000200001af832 : push rax ; mov rax, qword ptr [rip + 0x122c3e] ; call rax
0x000002000011bb34 : push rax ; mov rax, rdi ; add rsp, 0x40 ; pop rdi ; ret
0x000002000073bd08 : push rax ; mov rax, rdx ; jmp 0x2000073bd13
0x000002000013ff73 : push rax ; mov rbp, qword ptr [rcx + 0x18] ; mov rsp, qword ptr [rcx + 0x10] ; jmp rdx
0x00000200001e2e94 : push rax ; mov rcx, qword ptr [r10 + 0x1d8] ; call rax
0x000002000042184b : push rax ; mov rcx, rbx ; call rax
0x000002000043cab7 : push rax ; mov rcx, rdi ; call rsi
0x0000020000512fec : push rax ; movdqu xmmword ptr [rbp - 0x69], xmm0 ; call 0x200001403e9
0x00000200001bec8b : push rax ; movups xmmword ptr [r9 + 0x50], xmm1 ; ret
0x00000200001b20d4 : push rax ; or al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200004738a5 : push rax ; or byte ptr [rax - 0x75], cl ; ret
0x00000200001c396e : push rax ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x000002000003cd0d : push rax ; or byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x1e], cl ; ret
0x0000020000421dda : push rax ; or byte ptr [rax - 0x7d], cl ; ret 0xe812
0x00000200007302e2 : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000007e98e : push rax ; or byte ptr [rbp + 1], dh ; ret
0x000002000074ed0e : push rax ; or byte ptr [rcx - 0x75], al ; ret 0x349
0x000002000041684e : push rax ; or byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 4], edx ; ret
0x000002000066aaed : push rax ; or dh, dh ; ret 0x7403
0x000002000056e731 : push rax ; or dh, dh ; ret 0x7502
0x000002000056e485 : push rax ; or dh, dh ; ret 0x7520
0x00000200000064ae : push rax ; or dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000076bdb4 : push rax ; or dword ptr [rcx], eax ; add rsp, 0x38 ; ret
0x00000200005651f9 : push rax ; or eax, 0xebc00000 ; adc byte ptr [rcx - 0x75], cl ; ret
0x000002000013fae8 : push rax ; or eax, dword ptr [rax] ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005c271b : push rax ; out dx, eax ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x000002000060147b : push rax ; outsb dx, byte ptr [rsi] ; jo 0x200006014d1 ; call 0x20000231017
0x0000020000601506 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000060155c ; call 0x20000231017
0x0000020000603b32 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000603b84 ; call 0x20000231017
0x0000020000604132 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000604184 ; call 0x20000231ce7
0x00000200006042fc : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000060434e ; call 0x20000231ce7
0x0000020000604fba : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000604ff5 ; call 0x20000231ce7
0x000002000060530e : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000605360 ; call 0x20000231ce7
0x00000200006053c1 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000605413 ; call 0x20000231ce7
0x0000020000605f9c : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000605fff ; call 0x20000231017
0x00000200006061c2 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000606225 ; call 0x20000231017
0x00000200006061d4 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000606237 ; call 0x20000231ce7
0x0000020000606262 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x200006062c5 ; call 0x20000231017
0x00000200006062cb : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000060632e ; call 0x20000231017
0x00000200006062e2 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000606345 ; call 0x20000231ce7
0x0000020000606366 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x200006063c9 ; call 0x20000231017
0x000002000060e43a : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000060e496 ; call 0x20000231017
0x000002000060e44b : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000060e4a7 ; call 0x20000231017
0x000002000060e46a : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000060e4c6 ; call 0x20000231017
0x000002000060e481 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000060e4dd ; call 0x20000231017
0x000002000060e498 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000060e4f4 ; call 0x20000231017
0x000002000060e4af : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000060e50b ; call 0x20000231017
0x000002000060e70c : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000060e768 ; call 0x20000231017
0x000002000060e8c3 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000060e921 ; mov ecx, edi ; call 0x20000231ce9
0x000002000060eefd : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000060ef59 ; call 0x20000231ce7
0x000002000060f614 : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000060f670 ; call 0x20000231017
0x000002000061005b : push rax ; outsb dx, byte ptr [rsi] ; jo 0x200006100bd ; call 0x20000231017
0x00000200006101bc : push rax ; outsb dx, byte ptr [rsi] ; jo 0x2000061021e ; call 0x20000231ce7
0x000002000061024a : push rax ; outsb dx, byte ptr [rsi] ; jo 0x200006102ac ; call 0x20000231017
0x000002000061026a : push rax ; outsb dx, byte ptr [rsi] ; jo 0x200006102cc ; call 0x20000231017
0x0000020000610cbb : push rax ; outsb dx, byte ptr [rsi] ; jo 0x20000610cfa ; call 0x20000231ce7
0x000002000005fdaf : push rax ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000495d12 : push rax ; pop r13 ; pop r12 ; pop rdi ; ret
0x00000200004a792b : push rax ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000021608c : push rax ; pop r14 ; pop r13 ; pop r12 ; ret
0x000002000005ae48 : push rax ; pop r14 ; pop rdi ; pop rbp ; ret
0x00000200002049af : push rax ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200004fecc9 : push rax ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000b918a : push rax ; pop r14 ; pop rdi ; pop rsi ; ret
0x000002000043c4d1 : push rax ; pop r14 ; pop rsi ; pop rbp ; ret
0x0000020000040a64 : push rax ; pop r14 ; ret
0x00000200003abccb : push rax ; pop r15 ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x0000020000485c2c : push rax ; pop r15 ; pop r12 ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000008a2c8 : push rax ; pop r15 ; pop r13 ; pop r12 ; pop rsi ; pop rbp ; ret
0x00000200000211e4 : push rax ; pop r15 ; pop r13 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000005e8eb : push rax ; pop r15 ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001b9c21 : push rax ; pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000001b657 : push rax ; pop r15 ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x0000020000089992 : push rax ; pop r15 ; pop r14 ; pop r12 ; ret
0x000002000043187b : push rax ; pop r15 ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000e644d : push rax ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000e24b7 : push rax ; pop r15 ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000bc660 : push rax ; pop r15 ; pop r14 ; pop rdi ; ret
0x0000020000631c60 : push rax ; pop r15 ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000002741f : push rax ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200003d477c : push rax ; pop r15 ; ret
0x000002000003a9ae : push rax ; pop rbp ; ret
0x0000020000017851 : push rax ; pop rbx ; ret
0x0000020000558fc6 : push rax ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200004ef4d2 : push rax ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200000a7e8e : push rax ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200001d95fb : push rax ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000016f96 : push rax ; pop rdi ; ret
0x0000020000486c6d : push rax ; pop rsi ; add byte ptr [rax + 3], cl ; xlatb ; jmp rdx
0x0000020000499317 : push rax ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000030380 : push rax ; pop rsi ; ret
0x00000200003ef404 : push rax ; pop rsp ; ret
0x000002000062bf9f : push rax ; popfq ; jmp qword ptr [rbx]
0x00000200003b7025 : push rax ; push -0x742774b8 ; adc bh, bh ; ret 0xe2c1
0x00000200000dbd7c : push rax ; push 0xfd ; dec dword ptr [rbp - 0x75] ; ret 0x44c7
0x000002000052c8f4 : push rax ; push rax ; ret
0x00000200001b2b52 : push rax ; push rax ; test rdx, rdx ; je 0x200001b2b64 ; jmp rdx
0x00000200003fa4ac : push rax ; push rsi ; ret
0x0000020000049043 : push rax ; ret
0x000002000042fdce : push rax ; ret 0x16
0x00000200004c8d5e : push rax ; ret 0x39ff
0x000002000052a477 : push rax ; ret 0x48ff
0x0000020000492f9e : push rax ; ret 0xe9ff
0x00000200003e557c : push rax ; sahf ; ret
0x000002000051374c : push rax ; salc ; ret 0x8bff
0x000002000065a19e : push rax ; sar bh, cl ; sbb eax, eax ; and eax, 0x46 ; ret
0x00000200001fb6a3 : push rax ; sbb byte ptr [rax - 0x75], cl ; ret 0xccc3
0x000002000050df40 : push rax ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4414
0x000002000077837c : push rax ; sbb byte ptr [rbp + 0x73e990ff], ah ; ret 0xfffd
0x000002000002c260 : push rax ; sbb byte ptr [rcx + rcx*4 + 0x58], al ; sbb al, 0x41 ; mov eax, edx ; pop rbx ; ret
0x000002000057da33 : push rax ; sbb cl, ch ; ret
0x000002000051e3bb : push rax ; sbb dh, byte ptr [rbp - 0xe] ; lock inc dword ptr [rax + 0x10] ; ret
0x0000020000545dee : push rax ; sbb dh, dh ; ret 0xf02
0x00000200001c11fe : push rax ; sbb eax, 0x48000038 ; add esp, 0x28 ; ret
0x000002000075ea3e : push rax ; sbb eax, 0x8b490038 ; xchg eax, esp ; ret
0x000002000074431c : push rax ; scasd eax, dword ptr [rdi] ; ret
0x0000020000041256 : push rax ; shr eax, 0x18 ; and al, 1 ; ret
0x0000020000630244 : push rax ; sub al, 0xf6 ; ret 0x7401
0x000002000060d501 : push rax ; sub bl, ch ; add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c28
0x00000200001e3a44 : push rax ; sub byte ptr [rbp - 0x74f58740], al ; ret
0x0000020000467fc1 : push rax ; sub dh, dh ; ret 0x7501
0x00000200003b49e3 : push rax ; sub dh, dh ; ret 0xf40
0x00000200000ea3f2 : push rax ; sub dword ptr [rax], eax ; call rax
0x000002000041b27a : push rax ; test al, 0x10 ; jne 0x2000041b293 ; call 0x20000042aa8
0x00000200006c05eb : push rax ; test rax, rax ; je 0x200006c05ff ; mov rcx, rdi ; call rax
0x000002000051329c : push rax ; test rcx, rcx ; je 0x200005132b0 ; call 0x20000140389
0x00000200001b2b53 : push rax ; test rdx, rdx ; je 0x200001b2b63 ; jmp rdx
0x00000200001669a9 : push rax ; xadd qword ptr [r9 + 0x40], r8 ; ret
0x0000020000509c2c : push rax ; xchg eax, ebp ; ret 0x4cff
0x00000200004b5d08 : push rax ; xor al, 0xf7 ; ret 1
0x000002000068bb91 : push rax ; xor al, al ; ret
0x00000200006d607f : push rax ; xor dh, dh ; ret 0xf02
0x00000200001b9512 : push rax ; xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200005110db : push rax ; xor rcx, rsp ; call 0x20000133187
0x00000200003babb7 : push rbp ; adc al, 0xe8 ; ret 0xd945
0x00000200001acf0e : push rbp ; adc al, byte ptr [rax] ; call r9
0x000002000050fa54 : push rbp ; adc byte ptr [rax - 0x73], cl ; fucompi st(0) ; cdqe ; ret 0x48ff
0x000002000050443e : push rbp ; adc byte ptr [rax - 0x75], cl ; and r8b, r13b ; push rdi ; leave ; ret
0x000002000020d717 : push rbp ; adc byte ptr [rbp + 0x3b], al ; ret 0x4d73
0x000002000066aa5b : push rbp ; adc dword ptr [rcx - 0x75], ecx ; ret 0x48f0
0x000002000013c626 : push rbp ; add al, 0 ; add byte ptr [rcx - 1], al ; ret 0x4de9
0x000002000012b8a2 : push rbp ; add bh, bh ; ret 0x8341
0x0000020000164bc3 : push rbp ; add bh, bh ; ret 0x8b48
0x0000020000492103 : push rbp ; add byte ptr [rax + 0x2b], cl ; fimul dword ptr [rax - 1] ; ret
0x000002000016b64b : push rbp ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x20000047957
0x000002000060244c : push rbp ; add byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000047c5c3 : push rbp ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000140c55 : push rbp ; add byte ptr [rax], al ; add cl, ch ; and dl, dl ; add byte ptr [rax], al ; ret
0x00000200000ab569 : push rbp ; add byte ptr [rcx - 1], al ; ret 0x8944
0x00000200002172a1 : push rbp ; add byte ptr [rsi + 0xf], ah ; out dx, eax ; ret
0x00000200000aa0cf : push rbp ; add dh, dh ; ret 0xf04
0x000002000002adba : push rbp ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x448b0143], cl ; ret 0x4104
0x0000020000400571 : push rbp ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; or r8b, r13b ; ret 0xc73c
0x00000200000cd50e : push rbp ; add eax, 0xb5410000 ; add esi, esi ; ret 0xf04
0x0000020000625867 : push rbp ; add ebx, esi ; movq qword ptr [rsi], mm0 ; call 0x20000031b44
0x0000020000490700 : push rbp ; add ecx, ebp ; ret
0x0000020000100880 : push rbp ; and byte ptr [rbx - 0x74bbf7ba], cl ; ret 0xb60f
0x00000200005d20ee : push rbp ; and byte ptr [rcx - 0x75], cl ; iretd ; call 0x2000021e3ab
0x00000200003db075 : push rbp ; cmp al, ch ; mov eax, dr0 ; ret
0x000002000042318f : push rbp ; cmp byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x2a74
0x00000200001539db : push rbp ; cmp byte ptr [rax - 0x75], cl ; call rax
0x00000200005a7d5d : push rbp ; cmp byte ptr [rax - 0x7d], cl ; ret 0x4828
0x000002000022a9d3 : push rbp ; cmp byte ptr [rbp - 0x73], cl ; sbb byte ptr [r9 - 0x75], r8b ; ret 0x8b4c
0x000002000013d883 : push rbp ; cmp edi, edi ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005be442 : push rbp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; mov rcx, r10 ; call rax
0x0000020000103df7 : push rbp ; fisttp word ptr [rax + 0x3b] ; ret 0x850f
0x00000200003a84eb : push rbp ; fmul dword ptr [rax - 0x73] ; shr r8b, 1 ; ret 0xc9be
0x000002000020a2f8 : push rbp ; fsubp st(3) ; or dword ptr [rcx + 0x3b], eax ; ret 0x976
0x00000200005e6c82 : push rbp ; inc dword ptr [rbx] ; ret
0x0000020000446ab3 : push rbp ; iretd ; mov rcx, rsi ; call 0x20000074c98
0x00000200005797b4 : push rbp ; ja 0x200005797a4 ; jge 0x200005797a0 ; ret 0x8bff
0x00000200000d20cf : push rbp ; loopne 0x200000d2116 ; call rbx
0x00000200000d2190 : push rbp ; loopne 0x200000d21d7 ; call rbx
0x00000200000d228d : push rbp ; loopne 0x200000d22d4 ; call rbx
0x0000020000672059 : push rbp ; loopne 0x20000672062 ; ret 0xc13b
0x0000020000683e57 : push rbp ; mov al, 0x3b ; ret 0x6876
0x00000200005caa13 : push rbp ; mov bh, 0x48 ; lea ecx, dword ptr [rbp - 0x51] ; call 0x200001ec845
0x000002000051279d : push rbp ; mov eax, 0x41cf8b48 ; call rdi
0x000002000015284e : push rbp ; mov rcx, qword ptr [rbp + 0x50] ; call rax
0x0000020000153df0 : push rbp ; mov rcx, r11 ; call r11
0x00000200005be18f : push rbp ; mov rcx, r13 ; call r8
0x00000200006839f0 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000228c2e : push rbp ; or byte ptr [rax - 0x75], cl ; add r15b, r15b ; ret 0x8b4c
0x000002000016864d : push rbp ; or byte ptr [rdi], cl ; mov dh, 4 ; sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x0000020000682a3f : push rbp ; out -0x75, eax ; ret 0x8948
0x00000200005143c4 : push rbp ; out dx, eax ; call 0x20000140485
0x0000020000405876 : push rbp ; out dx, eax ; jmp qword ptr [rbx]
0x000002000050c146 : push rbp ; outsd dx, dword ptr [rsi] ; mov rcx, qword ptr [r15] ; call 0x20000133f78
0x00000200001997c7 : push rbp ; popfq ; hlt ; inc dword ptr [rbx] ; ret
0x0000020000424f61 : push rbp ; psubsb mm2, qword ptr [rax - 0x74003aa3] ; push rbp ; ret
0x000002000042184a : push rbp ; push rax ; mov rcx, rbx ; call rax
0x0000020000085015 : push rbp ; ret
0x000002000049b1a2 : push rbp ; ret 0x41ff
0x00000200004c1ae7 : push rbp ; ret 0x48ff
0x000002000049d2af : push rbp ; ret 0xf0ff
0x0000020000766e9f : push rbp ; ret 0xffb6
0x000002000075de97 : push rbp ; ret 0xffb7
0x0000020000784ab7 : push rbp ; ret 0xffba
0x00000200004b2fa7 : push rbp ; ret 0xffec
0x000002000060239f : push rbp ; rol byte ptr [rbx + rdi + 0x66], 1 ; adc byte ptr [rcx + rcx*2 - 1], dh ; ret 0x8349
0x00000200004866b1 : push rbp ; rol byte ptr [rcx - 0x48], 2 ; add byte ptr [rax], al ; add al, ch ; ret 0xcb9d
0x000002000010e326 : push rbp ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4942
0x000002000004e510 : push rbp ; ror byte ptr [rdi], 0xb6 ; ret 0x548
0x0000020000022207 : push rbp ; sal dword ptr [rip - 0x2fc4b800], cl ; ja 0x20000022240 ; ret
0x00000200003e9bd7 : push rbp ; salc ; dec dword ptr [rax - 0x75] ; ret
0x00000200006a89e5 : push rbp ; salc ; ret
0x00000200006d2cd5 : push rbp ; sar bh, 0xe8 ; ret
0x00000200006c3557 : push rbp ; sar rdi, 0xf ; xchg eax, esp ; ret 0xff33
0x00000200005b79bf : push rbp ; sbb byte ptr [rax + rax], dl ; ret
0x00000200003d19e0 : push rbp ; sbb byte ptr [rcx - 1], al ; ret
0x00000200004e075d : push rbp ; scasd eax, dword ptr [rdi] ; mov qword ptr [rbp - 0x51], r11 ; call rax
0x000002000060427c : push rbp ; scasd eax, dword ptr [rdi] ; mov r8b, 1 ; call 0x200004b0567
0x000002000016c140 : push rbp ; stc ; call rcx
0x00000200000fcbb5 : push rbp ; sub byte ptr [rax - 0x75], cl ; retf ; call 0x200000f8de3
0x00000200004fdfbe : push rbp ; test al, 0xe8 ; ret
0x000002000063f717 : push rbp ; wait ; or eax, dword ptr [rax] ; mov eax, 0x2d0 ; ret
0x000002000022fb58 : push rbp ; xchg dword ptr [rax + 0x33], ecx ; ret 0xd233
0x000002000061ccee : push rbp ; xor byte ptr [rcx + 0x41202444], cl ; call rdx
0x00000200003bbff5 : push rbx ; adc byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x3b], cl ; ret 0x9577
0x000002000047017a : push rbx ; adc byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax + 0x3b] ; ret 0x840f
0x0000020000641276 : push rbx ; adc byte ptr [rax - 0x75], cl ; iretd ; call r8
0x0000020000081bbb : push rbx ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200005de5c0 : push rbx ; adc byte ptr [rbp + rcx*4 + 0x45], cl ; ret
0x00000200001b0991 : push rbx ; adc cl, byte ptr [rax - 0x75] ; ret 0x2548
0x000002000044fda2 : push rbx ; adc dh, dh ; ret 0x7504
0x00000200000c3b1b : push rbx ; adc dh, dh ; ret 0xf08
0x00000200001f1079 : push rbx ; add al, byte ptr [rcx - 0xa] ; ret 0x7501
0x00000200000edb39 : push rbx ; add al, byte ptr [rcx - 0xa] ; ret 0xf01
0x000002000016fe31 : push rbx ; add bh, dl ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200004458ea : push rbx ; add byte ptr [rcx + 3], r9b ; leave ; jmp rcx
0x000002000010ff02 : push rbx ; add byte ptr [rdi], cl ; test byte ptr [rdx - 0xa000000], cl ; ret 0xf08
0x00000200004fab71 : push rbx ; add cl, byte ptr [rdi] ; mov bh, 0x4b ; add al, 0x83 ; ret 0x4128
0x00000200003c5af0 : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000020000467785 : push rbx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000020804b : push rbx ; add dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x00000200000196c6 : push rbx ; add dword ptr [rdx + rdx*8 - 0x49f0eb8c], eax ; ret 0x2b41
0x00000200004ba66c : push rbx ; add dword ptr [rsi - 0x7d], esp ; ret 0x6604
0x000002000006b14d : push rbx ; add esi, esi ; ret 0x740f
0x000002000006bb4f : push rbx ; add esi, esi ; ret 0x750f
0x00000200001f0a49 : push rbx ; and byte ptr [rax - 0x75], cl ; ret
0x000002000075c7d6 : push rbx ; and byte ptr [rbp - 0x75], cl ; add cl, byte ptr [rbp + 0x3b] ; ret 0x1a74
0x00000200000c6a40 : push rbx ; and cl, ch ; mov esp, 0xf6fffffd ; ret 0x75f0
0x00000200001d9b18 : push rbx ; and dh, dh ; ret 0x7508
0x00000200000344da : push rbx ; and dh, dh ; ret 0xf01
0x000002000059ba23 : push rbx ; and ecx, ebp ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200001976e6 : push rbx ; and esi, esi ; ret 0xf08
0x000002000002180c : push rbx ; and esi, esi ; ret 0xf10
0x0000020000070512 : push rbx ; cld ; jmp 0x20000070495
0x00000200004f96c4 : push rbx ; cmp byte ptr [rdx], bh ; ret 0x820f
0x000002000003bc1f : push rbx ; cmp dh, dh ; ret 0x7520
0x0000020000059873 : push rbx ; dec dword ptr [rax - 0x75] ; ret
0x000002000076e742 : push rbx ; fcos ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001ff53e : push rbx ; je 0x200001ff4c5 ; ret 0x100f
0x00000200001207d8 : push rbx ; jl 0x2000012076c ; js 0x2000012080f ; ret 0x8944
0x0000020000474934 : push rbx ; jl 0x2000047494a ; xchg eax, ebp ; ret 0x8445
0x0000020000183c7e : push rbx ; jnp 0x20000183c7a ; dec dword ptr [rcx - 0x75] ; leave ; call 0x200001bfea1
0x000002000001f6f9 : push rbx ; jns 0x2000001f70e ; add byte ptr [rax - 0x908dc9a], al ; ret
0x000002000056de16 : push rbx ; jo 0x2000056de04 ; ret
0x000002000056de15 : push rbx ; jo 0x2000056de05 ; ret
0x0000020000685ab0 : push rbx ; lea ecx, dword ptr fs:[rdx - 0x49] ; call 0x20000231ce7
0x0000020000685aaf : push rbx ; lea ecx, dword ptr fs:[rdx - 0x49] ; call 0x20000231ce8
0x000002000042fe81 : push rbx ; mov rax, r9 ; ret
0x00000200004e1d9d : push rbx ; movq qword ptr [rdx + r8*8], mm0 ; jmp 0x200004e1d50
0x0000020000172250 : push rbx ; movsxd rdi, edx ; dec dword ptr [rax - 0x39] ; ret 0xdfff
0x00000200001c54d8 : push rbx ; or al, ch ; ret
0x0000020000444dc6 : push rbx ; or byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200003ee827 : push rbx ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x000002000057a079 : push rbx ; or byte ptr [rax - 0x75], cl ; ret 0xe283
0x0000020000229b36 : push rbx ; or eax, dword ptr [rcx + 0x3b] ; ret 0x1075
0x00000200007498b1 : push rbx ; pop rcx ; ret
0x000002000063b515 : push rbx ; push rax ; jo 0x2000063b507 ; ret 0xbf67
0x000002000056de14 : push rbx ; push rbx ; jo 0x2000056de06 ; ret
0x0000020000685aae : push rbx ; push rbx ; lea ecx, dword ptr fs:[rdx - 0x49] ; call 0x20000231ce9
0x0000020000749db1 : push rbx ; push rsp ; ret
0x00000200003a34e1 : push rbx ; ret
0x000002000039ba88 : push rbx ; ret 0
0x0000020000183029 : push rbx ; ret 0x1f
0x000002000049b391 : push rbx ; ret 0x40ff
0x000002000060a8b9 : push rbx ; ret 0x45ff
0x000002000043807b : push rbx ; ret 0x48ff
0x000002000051b023 : push rbx ; ret 0x8bff
0x00000200006aa3d5 : push rbx ; ret 0xb9ff
0x000002000049d45f : push rbx ; ret 0xf0ff
0x00000200006b93d4 : push rbx ; ret 0xff
0x00000200007845a9 : push rbx ; ret 0xff9b
0x00000200006247b5 : push rbx ; ret 0xff9e
0x000002000058a3d1 : push rbx ; ret 0xffed
0x0000020000422fa9 : push rbx ; ret 0xfff5
0x0000020000539926 : push rbx ; ret 9
0x00000200001e3049 : push rbx ; sbb al, 0x72 ; in al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000008c31c : push rbx ; sbb byte ptr [rax + 1], cl ; push rsp ; ret
0x0000020000110f56 : push rbx ; sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200002167e1 : push rbx ; sbb byte ptr [rbx], bh ; ret 0x3073
0x000002000002ed67 : push rbx ; sbb byte ptr [rcx + 0x3b], cl ; ret 0x2677
0x0000020000767e8e : push rbx ; sbb byte ptr [rcx - 0x75], cl ; and byte ptr [r9 + 3], cl ; ret 0x3b48
0x000002000001527c : push rbx ; sub al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000000ff52 : push rbx ; sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004c8cc8 : push rbx ; sub byte ptr [rbx + rcx*4 - 0x60], al ; in al, 1 ; add byte ptr [rax], al ; call rdi
0x00000200001e21b9 : push rbx ; sub rsp, 0x20 ; call 0x200000ee3ef
0x00000200001e21b8 : push rbx ; sub rsp, 0x20 ; call 0x200000ee3f0
0x000002000017445b : push rbx ; xor byte ptr [rbx + 0x8c86], cl ; add byte ptr [rbx], bh ; ret 0x470f
0x00000200003a1c29 : push rbx ; xor byte ptr [rbx], ch ; ret 0x394c
0x0000020000061f20 : push rcx ; adc bh, bh ; ret 0xffb8
0x00000200004653a3 : push rcx ; adc byte ptr [rax - 0x75], cl ; or eax, 0xffeb405c ; call rax
0x00000200001c9c98 : push rcx ; adc byte ptr [rax], al ; mov rsi, rdx ; mov rbx, rcx ; call qword ptr [rax]
0x0000020000050362 : push rcx ; adc byte ptr [rbp + 4], dh ; mov al, r8b ; ret
0x000002000067dd09 : push rcx ; adc byte ptr [rcx + 0x39], al ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret
0x000002000009d99d : push rcx ; adc byte ptr [rcx - 0x75], cl ; ret 0x8348
0x00000200000414df : push rcx ; adc byte ptr [rcx - 0x75], cl ; ret 0xf49
0x000002000062c38e : push rcx ; adc byte ptr [rcx - 0x7d], cl ; add bl, byte ptr [rax] ; ret
0x000002000040aaa9 : push rcx ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4909
0x0000020000428906 : push rcx ; adc byte ptr [rdi], dl ; add byte ptr [rbx - 0x7bf0fc06], al ; ret 0
0x00000200001e463a : push rcx ; adc byte ptr [rsi + 4], dh ; mov qword ptr [rcx + 0x10], rdx ; ret
0x00000200003e55ff : push rcx ; adc ch, al ; mov ah, byte ptr [rbp - 0x74b70032] ; ret
0x00000200005d4a35 : push rcx ; adc dh, dh ; ret 0xf01
0x000002000040dde0 : push rcx ; add al, 0 ; add rsp, 0x28 ; ret
0x00000200000cccc8 : push rcx ; add al, 0 ; mov r8, qword ptr [rsp + 0x38] ; call rax
0x000002000007b785 : push rcx ; add al, 0x41 ; mov dword ptr [rcx], eax ; ret
0x00000200004d06bc : push rcx ; add al, 0x66 ; mov dword ptr [rcx], edx ; mov word ptr [rax], dx ; ret
0x000002000064ae05 : push rcx ; add al, 0x8b ; ret 0x8b41
0x00000200004115a5 : push rcx ; add al, 0xf7 ; ret 0xfff8
0x0000020000538b8e : push rcx ; add al, 0xff ; ret 0x533b
0x00000200000155cd : push rcx ; add al, byte ptr [rdi + rcx + 0x22] ; ret 0x4c65
0x000002000057ab3d : push rcx ; add ch, al ; sbb al, al ; ret 0x90ff
0x00000200001268fd : push rcx ; add cl, byte ptr [rbp + 0x3b] ; ret 0x2177
0x00000200005d1c37 : push rcx ; add cl, byte ptr [rdi] ; mov dh, 5 ; ret 0xf75f
0x0000020000123a27 : push rcx ; add dh, dh ; ret 0x7501
0x000002000019f73f : push rcx ; add dh, dh ; ret 0xf10
0x0000020000752759 : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000114679 : push rcx ; add dword ptr [rcx + 0x22], eax ; ret 0xf41
0x0000020000774d71 : push rcx ; add eax, 0x5c6fffd ; cmp dword ptr [rdi - 0x48], ebp ; call qword ptr [rax]
0x000002000011e80a : push rcx ; add eax, 0xc18b4800 ; ret
0x00000200001943e3 : push rcx ; add ecx, dword ptr [rax + 0x63] ; ret
0x00000200004c032a : push rcx ; add rsp, 0x20 ; pop rbx ; jmp rax
0x00000200001b8343 : push rcx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004cb93e : push rcx ; and byte ptr [rax - 0x75], cl ; retf ; call 0x200000ef378
0x00000200000fc490 : push rcx ; and byte ptr [rbx + 4], dh ; mov qword ptr [rcx + 0x20], rdx ; ret
0x000002000019f7f5 : push rcx ; and cl, ch ; pop rsi ; push 0xf8 ; jmp qword ptr [rbx]
0x0000020000117242 : push rcx ; and dh, dh ; ret 0xf01
0x0000020000042ee8 : push rcx ; and dh, dh ; ret 0xf0f
0x00000200004074c2 : push rcx ; and eax, 0xf45db32 ; scasd eax, dword ptr [rdi] ; ret 0x8b48
0x00000200001382e3 : push rcx ; call 0x1ffc39f82eb
0x000002000060e43d : push rcx ; call 0x20000231014
0x000002000060ef00 : push rcx ; call 0x20000231ce4
0x00000200000329d5 : push rcx ; call qword ptr [rdx]
0x0000020000510bab : push rcx ; cld ; ret 0x8bff
0x000002000044fb06 : push rcx ; cmp dh, dh ; ret 0x7520
0x0000020000493bc9 : push rcx ; cmp dh, dh ; ret 0xf20
0x0000020000118f63 : push rcx ; cmp dword ptr [rsi], ebx ; add bl, ch ; ret 0x3345
0x00000200003eda43 : push rcx ; imul eax, ecx ; sub eax, r8d ; ret
0x000002000018d356 : push rcx ; inc dword ptr [rbp - 0x75] ; ret
0x00000200006876b4 : push rcx ; jbe 0x200006876c3 ; add cl, 8 ; ret
0x0000020000027ef8 : push rcx ; jl 0x20000027e89 ; ret 0xb60f
0x00000200004c2da3 : push rcx ; jmp qword ptr [rbx]
0x000002000005e4c1 : push rcx ; jo 0x2000005e4b2 ; ret 0x8b44
0x000002000055d69f : push rcx ; jo 0x2000055d68c ; push rsi ; ret
0x0000020000669f77 : push rcx ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; xor byte ptr [r8 - 0x7d], cl ; ret
0x000002000060e8c6 : push rcx ; mov ecx, edi ; call 0x20000231ce6
0x00000200004c8044 : push rcx ; mov edi, 0xcb8b48ff ; call 0x200000ecdd1
0x000002000060ef87 : push rcx ; mov rcx, rax ; call 0x20000231017
0x000002000060e4c0 : push rcx ; mov rcx, rbx ; call 0x20000231017
0x000002000060ea37 : push rcx ; mov rcx, rdi ; call 0x20000231017
0x000002000060ea25 : push rcx ; mov rcx, rsi ; call 0x20000231017
0x000002000060e8e5 : push rcx ; mov rdx, rbx ; mov ecx, edi ; call 0x20000231ce9
0x00000200006c75e9 : push rcx ; or al, ch ; and dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006c7599 : push rcx ; or al, ch ; nop ; and dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003e4021 : push rcx ; or bh, dh ; ret 0xfff
0x0000020000116777 : push rcx ; or bl, ch ; cmc ; xor eax, eax ; ret
0x00000200000f9865 : push rcx ; or byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000005ad87 : push rcx ; or byte ptr [rax + rbx - 0xa], dh ; ret 0x7504
0x00000200001fa383 : push rcx ; or byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0xeb18
0x00000200000e8c50 : push rcx ; or byte ptr [rax - 0x75], cl ; ret 0x48f0
0x0000020000510df5 : push rcx ; or byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000051a46 : push rcx ; or byte ptr [rbp + rax + 0x48], dh ; lea eax, dword ptr [rdx - 0x20] ; ret
0x00000200005863fb : push rcx ; or byte ptr [rbx + 0xf481345], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000200007443a3 : push rcx ; or byte ptr [rbx], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000bff33 : push rcx ; or byte ptr [rbx], bh ; ret 0x830f
0x00000200000ad117 : push rcx ; or byte ptr [rcx + 0x31], cl ; add dword ptr [rdx - 0x77], ecx ; push rsp ; ret
0x00000200004390c2 : push rcx ; or byte ptr [rcx + 3], cl ; ror byte ptr [rax + 0x3b], cl ; ret 0x1873
0x00000200001c3837 : push rcx ; pop rdi ; sbb eax, eax ; and eax, 0x128 ; ret
0x000002000074944b : push rcx ; pop rsi ; ret
0x0000020000507bf7 : push rcx ; pop rsp ; lea rcx, qword ptr [rax + 2] ; call 0x200001356ad
0x000002000050b02b : push rcx ; push rbx ; ret
0x000002000006704f : push rcx ; push rdx ; ret
0x000002000018d32f : push rcx ; push rsi ; ret 0x741e
0x0000020000044d31 : push rcx ; push rsp ; mov eax, edx ; ret
0x000002000001092b : push rcx ; ret
0x0000020000161fff : push rcx ; ret 0x21
0x000002000041fec6 : push rcx ; ret 0x33ff
0x000002000051b194 : push rcx ; ret 0x48ff
0x000002000051b33a : push rcx ; ret 0x85ff
0x000002000051b6f6 : push rcx ; ret 0x8bff
0x0000020000147edb : push rcx ; ret 0xe
0x000002000051b207 : push rcx ; ret 0xebff
0x0000020000167ed3 : push rcx ; ret 0xffed
0x00000200004df7ab : push rcx ; ror dword ptr [rcx], 1 ; add byte ptr [rbx], bh ; ret 0x840f
0x000002000041df94 : push rcx ; sar edi, 1 ; add rsp, 0x48 ; ret
0x000002000013da4a : push rcx ; sbb byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x33], cl ; ret 0x3348
0x000002000074537c : push rcx ; sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200003bac73 : push rcx ; sbb byte ptr [rcx - 0x74bbcfa9], cl ; ret 0xf41
0x000002000000a4a3 : push rcx ; sbb byte ptr [rcx - 0x75], al ; jmp 0x2004dc32ef4
0x00000200003c5511 : push rcx ; sbb byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x000002000062c44d : push rcx ; sbb byte ptr [rcx - 0x7d], cl ; add ch, byte ptr [rax] ; ret
0x000002000012e3c4 : push rcx ; sbb eax, 0xc8a30f00 ; setb al ; ret
0x000002000005b2a8 : push rcx ; sub al, 0x3b ; ret 0x830f
0x00000200001791b0 : push rcx ; sub al, 0x3b ; ret 0xe273
0x00000200005f5eb7 : push rcx ; sub byte ptr [rax - 0x75], cl ; and r8b, bpl ; ret 0x10
0x00000200001d0642 : push rcx ; sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004c57e6 : push rcx ; sub dh, dh ; ret 0xf02
0x00000200000ea2ab : push rcx ; sub dword ptr [rax], eax ; call rax
0x000002000065aa2b : push rcx ; xchg dword ptr [rbp - 0x3b7cb701], ebp ; jo 0x2000065aa9a ; ret
0x000002000077720b : push rcx ; xor al, 0xf6 ; ret 0x7401
0x00000200003c5c37 : push rcx ; xor al, 0xf6 ; ret 0xf10
0x00000200001499eb : push rcx ; xor byte ptr [rax + 0x28c48348], dl ; ret
0x000002000002f70f : push rcx ; xor byte ptr [rbx + rdi - 0x40], al ; jne 0x2000002f6e2 ; ret
0x00000200000ea7cc : push rcx ; xor dh, dh ; push rax ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x4a8
0x00000200006d4e4e : push rcx ; xor dh, dh ; ret 0x7440
0x00000200006d53a1 : push rcx ; xor dh, dh ; ret 0xf01
0x0000020000439479 : push rdi ; adc al, 0xf6 ; ret 0xf01
0x00000200000b2f8b : push rdi ; adc byte ptr [rax - 0x75], cl ; ret
0x00000200000ab622 : push rdi ; adc byte ptr [rax - 0x75], cl ; ret 0xc148
0x0000020000456f81 : push rdi ; adc byte ptr [rax - 0x75], cl ; retf ; call 0x200000823a0
0x0000020000443d72 : push rdi ; adc byte ptr [rax - 0x75], cl ; retf ; call 0x200004a0067
0x00000200003e43a5 : push rdi ; adc byte ptr [rbx], al ; ret 0x3b41
0x0000020000053f6e : push rdi ; adc edi, edi ; ret 0x5788
0x00000200003b62a7 : push rdi ; add ah, byte ptr [rdx] ; ret 0x450f
0x00000200003eb705 : push rdi ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000051297e : push rdi ; add al, 0x76 ; sub al, 0x8b ; ret 0xff48
0x000002000078175f : push rdi ; add al, 0xe8 ; ret 0xce0f
0x0000020000199bc6 : push rdi ; add al, 0xf6 ; ret 0x7508
0x000002000064a56b : push rdi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; retf ; call 0x200001f6849
0x00000200004409a3 : push rdi ; add al, byte ptr [rcx - 0x7d] ; ret 0x4503
0x0000020000140c95 : push rdi ; add byte ptr [rax], al ; add cl, ch ; loop 0x20000140c76 ; add byte ptr [rax], al ; ret
0x00000200005767c1 : push rdi ; add byte ptr [rcx + 3], cl ; iretd ; jmp rcx
0x00000200004e910b : push rdi ; add byte ptr [rdi], cl ; test dword ptr [rbp - 0x74fff204], esi ; ret
0x0000020000512c6d : push rdi ; add ch, al ; in al, dx ; xlatb ; ret 0x8bff
0x00000200005cb7b8 : push rdi ; add dword ptr [rax + 0x63], ecx ; ret
0x0000020000142c95 : push rdi ; add dword ptr [rax], eax ; add cl, ch ; loop 0x20000142c56 ; add byte ptr [rax], al ; ret
0x000002000048aab6 : push rdi ; add eax, ebp ; ret
0x00000200004be62f : push rdi ; add esi, esi ; ret 0xf08
0x000002000006d01e : push rdi ; add esi, esi ; ret 0xf0f
0x000002000017e58a : push rdi ; and al, byte ptr [rbp - 0x7c] ; ret 0x3075
0x0000020000077495 : push rdi ; and cl, byte ptr [rbp + rcx*4 + 0x5f] ; adc byte ptr [rbp - 0x75], al ; ret 0x8b49
0x0000020000118577 : push rdi ; and cl, byte ptr [rbp - 0x73] ; pop rdi ; adc dh, dh ; ret 0xf10
0x0000020000077478 : push rdi ; and dh, dh ; ret 0xf08
0x0000020000475ab7 : push rdi ; and dword ptr [rbx + rcx*4 + 0x47], eax ; sbb al, 0x8b ; ret 0xc148
0x000002000061005e : push rdi ; call 0x20000231014
0x00000200006101bf : push rdi ; call 0x20000231ce4
0x0000020000032a39 : push rdi ; call qword ptr [rdx]
0x00000200005ffb66 : push rdi ; cmovno ecx, dword ptr [rbx + 0x2170e8cf] ; ret
0x0000020000039c59 : push rdi ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000051e21e : push rdi ; cmp byte ptr [rbx], dh ; leave ; call rax
0x000002000051e228 : push rdi ; cmp byte ptr [rcx + 1], bh ; call r8
0x00000200006719c9 : push rdi ; cmp byte ptr [rcx + 2], bh ; call rax
0x00000200006719eb : push rdi ; cmp byte ptr [rcx + 3], bh ; call rax
0x000002000003ca19 : push rdi ; cmp dh, dh ; ret 0xf01
0x00000200000da491 : push rdi ; cmp dh, dh ; ret 0xf10
0x0000020000113634 : push rdi ; idiv edi ; xor al, al ; ret
0x000002000015a3c4 : push rdi ; jmp 0x2000015a3cb
0x000002000012c88d : push rdi ; jno 0x2000012c892 ; ret 0xbf
0x00000200000d49fe : push rdi ; jo 0x200000d49fa ; ret 0xf04
0x0000020000504445 : push rdi ; leave ; ret
0x00000200003e5705 : push rdi ; lodsd eax, dword ptr [rsi] ; ret
0x00000200005f47e3 : push rdi ; loop 0x200005f47ec ; add rsp, 0x68 ; ret
0x00000200007748c3 : push rdi ; mov edx, 0x8bcbffff ; ror dword ptr [rax - 0x7d], cl ; ret 0x4802
0x0000020000610157 : push rdi ; mov edx, ebx ; lea ecx, dword ptr [rbx - 0x4f] ; call 0x20000231ce9
0x000002000066b88a : push rdi ; mov esp, 0x8b34ebff ; ret
0x000002000012b0fe : push rdi ; or bh, bh ; rol byte ptr [rbp + 0xf], 0xb7 ; ret
0x00000200004550f4 : push rdi ; or byte ptr [rax - 0x75], cl ; ret
0x000002000061cbe9 : push rdi ; or byte ptr [rax - 0x75], cl ; retf ; call 0x200003e8e8b
0x00000200006c95d0 : push rdi ; or byte ptr [rax - 0x75], cl ; retf ; mov rsi, rax ; call qword ptr [rdi]
0x0000020000019ae1 : push rdi ; or byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000020000486938 : push rdi ; or byte ptr [rbp - 0x73], cl ; inc byte ptr [r13 + 3] ; ret 0xf41
0x0000020000203e1a : push rdi ; or byte ptr [rbx + rcx*4 + 0x47], al ; adc byte ptr [rax - 0x75], cl ; ret 0x2349
0x00000200000dd388 : push rdi ; or byte ptr [rcx + 0x23], cl ; ret
0x00000200003fa2dd : push rdi ; pop rax ; ret
0x0000020000507bd3 : push rdi ; pop rsp ; call 0x200001356a9
0x00000200001dce69 : push rdi ; ret
0x0000020000475cee : push rdi ; ret 0x48ff
0x000002000060b82e : push rdi ; ret 0x4dff
0x0000020000069c2e : push rdi ; ret 0x600
0x000002000051b05a : push rdi ; ret 0x8bff
0x00000200005bc3ae : push rdi ; ret 0x90ff
0x000002000041d2c1 : push rdi ; ret 0xebff
0x00000200005966d0 : push rdi ; ret 0xfff7
0x00000200004431e9 : push rdi ; ror byte ptr [rcx - 0x75], 1 ; iretd ; call rax
0x00000200005dd511 : push rdi ; sar bh, cl ; call rax
0x00000200005c6ebc : push rdi ; sar edi, 1 ; ret
0x000002000041e525 : push rdi ; sar rdi, 1 ; add rsp, 0x60 ; pop rbx ; ret
0x00000200001a8f1f : push rdi ; sbb byte ptr [rbx + 0x207883], cl ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200000a68ca : push rdi ; sbb byte ptr [rcx + 0x23], cl ; ret
0x00000200006a804d : push rdi ; scasb al, byte ptr [rdi] ; ret 0x44ff
0x00000200001ab7b1 : push rdi ; sub byte ptr [rip - 0x3eb8f100], bl ; ret
0x00000200004ae7de : push rdi ; sub dh, dh ; ret 0x740f
0x00000200004ae1ed : push rdi ; sub dh, dh ; ret 0xf0f
0x0000020000739893 : push rdi ; xor byte ptr [rax - 0x75], cl ; add dword ptr [rbp + 3], eax ; ret 0x8948
0x00000200006bd40a : push rdi ; xor byte ptr [rax - 0x75], cl ; ret
0x000002000074e746 : push rdi ; xor byte ptr [rax - 0x7d], cl ; ret 0x4c18
0x0000020000600956 : push rdi ; xor byte ptr [rax - 0x7d], cl ; ret 0xe838
0x0000020000494921 : push rdi ; xor dh, dh ; ret 0xf10
0x000002000043adc7 : push rdi ; xor dl, byte ptr [rsi] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000042df5 : push rdi ; xor dword ptr [rax], ecx ; add byte ptr [rsi - 1], ah ; ret
0x000002000014f7cc : push rdx ; adc al, 0x2b ; ret 0xccc3
0x0000020000121fa6 : push rdx ; adc byte ptr [rax - 0x7d], cl ; jmp 0x1ffc3fe94b8
0x000002000021b9ef : push rdx ; adc dword ptr [rax], eax ; ret
0x000002000012c3b7 : push rdx ; add al, 0x83 ; ret 0x2307
0x00000200004858dc : push rdx ; add al, 0x83 ; sar edi, 0x75 ; ret
0x000002000004456d : push rdx ; add al, 0xff ; ret 0xc148
0x00000200004b5d3e : push rdx ; add byte ptr [rdi], cl ; test dword ptr [rdx - 0x9ffef3e], ebp ; ret
0x0000020000186e2d : push rdx ; add dh, cl ; dec dword ptr [rax - 0x75] ; ret
0x000002000006c27b : push rdx ; add dword ptr [rax], eax ; add bh, bh ; ret
0x0000020000157080 : push rdx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x00000200002080bb : push rdx ; add dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x38 ; ret
0x00000200001659fa : push rdx ; add eax, 0xe990fff6 ; ret
0x000002000041dc8b : push rdx ; add eax, dword ptr [rax] ; add rsp, 0x50 ; pop rbp ; ret
0x000002000068138a : push rdx ; and ebp, ebp ; inc dword ptr [rcx - 0x48] ; ret
0x00000200001c01b2 : push rdx ; call qword ptr [rax]
0x000002000017f3fc : push rdx ; call rbx
0x00000200006c2aba : push rdx ; in eax, -0x4a ; dec dword ptr [rax - 0x75] ; ret
0x000002000010b341 : push rdx ; ja 0x2000010b36c ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000626617 : push rdx ; ja 0x20000626605 ; ret 0xc0b6
0x000002000002f36d : push rdx ; je 0x2000002f2fe ; ret 0x412b
0x00000200005d7947 : push rdx ; jg 0x200005d7946 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000582c8b : push rdx ; jmp 0x1ffc7576e97
0x000002000060fd5f : push rdx ; mov qword ptr [rax + 8], rbx ; call 0x20000231018
0x000002000014f668 : push rdx ; or al, 0x2b ; ret 0xccc3
0x00000200001fd07a : push rdx ; or al, ch ; jmp qword ptr [rax]
0x00000200007625d7 : push rdx ; or byte ptr [rax - 0x3f], cl ; call 0x1ffc3996ef4
0x000002000008c4ad : push rdx ; or byte ptr [rax - 0x75], cl ; ret 0xd148
0x000002000046530f : push rdx ; or byte ptr [rbp + rcx*4 + 0x44], cl ; and al, 0x58 ; call rax
0x000002000005e4aa : push rdx ; or byte ptr [rcx + rcx*4 + 0x12], cl ; mov rax, r8 ; ret
0x00000200003eec05 : push rdx ; or byte ptr [rcx - 0x75], al ; ret 0xf44
0x000002000049657c : push rdx ; or byte ptr [rcx - 0x75], al ; sub al, 0x4c ; lea ecx, dword ptr [rdx + rax*8] ; jmp 0x20000496547
0x00000200001a8827 : push rdx ; or byte ptr [rcx - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret 0x1172
0x000002000012356c : push rdx ; or byte ptr [rcx - 0x7d], al ; sar bh, 0x75 ; xlatb ; ret
0x000002000012e76a : push rdx ; or eax, 0x8b480002 ; ret
0x00000200001bfc2a : push rdx ; pop rdi ; adc al, byte ptr [rax] ; ret
0x00000200000b373a : push rdx ; push -0x74b70002 ; ret
0x00000200000f039a : push rdx ; push -0x74bb0007 ; ret
0x0000020000067050 : push rdx ; ret
0x000002000051cc8e : push rdx ; ret 0x23
0x000002000052a1ee : push rdx ; ret 0x41ff
0x000002000052a1dd : push rdx ; ret 0x44ff
0x0000020000493bdf : push rdx ; ret 0x89ff
0x00000200004c41c2 : push rdx ; ret 0x8bff
0x000002000062693a : push rdx ; ret 0xffa9
0x0000020000161b1e : push rdx ; ret 0xffec
0x000002000068be8b : push rdx ; sbb al, 0x8b ; ret 0x25
0x00000200001d00ba : push rdx ; sbb al, 0xec ; dec dword ptr [rax - 0x7d] ; ret
0x00000200006bfef1 : push rdx ; sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x17], cl ; ret
0x00000200000c30ac : push rdx ; sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], cl ; ret
0x0000020000621871 : push rdx ; sbb byte ptr [rax - 0x7d], cl ; ret 0xeb20
0x0000020000620118 : push rdx ; sbb byte ptr [rcx - 0x77], cl ; add dword ptr [rax - 0x75], ecx ; ret 0x49f0
0x0000020000082c94 : push rdx ; sub al, 3 ; ret 0xff25
0x000002000053f36c : push rdx ; test byte ptr [rcx], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001673c1 : push rdx ; xor byte ptr [rax + 0x69], cl ; rol dword ptr [rax], 0x46 ; ret
0x00000200000414d8 : push rdx ; xor byte ptr [rbp + 0x3b], cl ; ret 0x894c
0x00000200003b6f5c : push rdx ; xor byte ptr [rbp + 3], al ; ret 0x8b44
0x00000200001acdd5 : push rsi ; adc al, byte ptr [rax] ; call r9
0x00000200001afe1e : push rsi ; adc al, byte ptr es:[rax] ; call r9
0x00000200004862d0 : push rsi ; adc byte ptr [rax - 0x73], cl ; push rbp ; ret
0x000002000022e6e1 : push rsi ; adc byte ptr [rax - 0x75], cl ; ret
0x00000200003d8433 : push rsi ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c04
0x00000200000dbcb6 : push rsi ; adc byte ptr [rcx - 0x75], cl ; ret 0x8948
0x00000200000c43a9 : push rsi ; adc edi, edi ; ret 0x5688
0x00000200005320e7 : push rsi ; add bh, bh ; ret
0x000002000060b517 : push rsi ; add bh, byte ptr [rbx] ; ret 0x1b76
0x0000020000140c75 : push rsi ; add byte ptr [rax], al ; add cl, ch ; add dl, dl ; add byte ptr [rax], al ; ret
0x000002000059e3b1 : push rsi ; add dh, dh ; ret 0xf10
0x0000020000494b40 : push rsi ; add dword ptr [rax - 0x75], ecx ; ret 0xc148
0x00000200004641d2 : push rsi ; add dx, r8w ; movzx r8d, dx ; jmp 0x20000464185
0x00000200000da5be : push rsi ; and byte ptr [rax - 0x75], cl ; ret
0x0000020000419437 : push rsi ; and byte ptr [rax - 0x7d], cl ; and al, 0xee ; add bh, bh ; ret
0x000002000011add4 : push rsi ; and dh, dh ; ret 0xf10
0x00000200000a3361 : push rsi ; and eax, dword ptr [rcx - 0x75] ; ret 0xe8c1
0x00000200004c3bd1 : push rsi ; call 0x200000eb5b4
0x00000200005f76b6 : push rsi ; cdq ; ret
0x00000200003a783e : push rsi ; cmp bl, dh ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000495a1a : push rsi ; cmp byte ptr [rax - 0x7d], cl ; ret
0x00000200001886c8 : push rsi ; cmp dh, cl ; push rsi ; ret 0x741e
0x0000020000425430 : push rsi ; cmp edx, dword ptr [rdi] ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200003e5b32 : push rsi ; cwde ; ret
0x000002000007df2f : push rsi ; dec byte ptr [rcx - 0x75] ; ret 0xf48
0x0000020000206262 : push rsi ; dec byte ptr [rdx] ; add rsp, 0x28 ; ret
0x00000200004f5778 : push rsi ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001c6f6e : push rsi ; enter -1, -0x77 ; adc byte ptr [rax - 0x7d], r9b ; ret
0x0000020000492179 : push rsi ; insd dword ptr [rdi], dx ; call 0x200000c1e65
0x000002000049300c : push rsi ; insd dword ptr [rdi], dx ; mov rcx, r12 ; call 0x200000c1e68
0x00000200004921a9 : push rsi ; insd dword ptr [rdi], dx ; mov rcx, rsi ; call 0x200000c1e68
0x00000200003b2533 : push rsi ; je 0x200003b24c4 ; ret
0x00000200004268ce : push rsi ; jmp rax
0x0000020000069bd4 : push rsi ; jo 0x20000069bd0 ; ret 0xf04
0x00000200000d0a7e : push rsi ; jo 0x200000d0a7a ; ret 0xf04
0x0000020000758a66 : push rsi ; lodsb al, byte ptr [rsi] ; xchg eax, esi ; dec dword ptr [rbp + rcx*4 + 0xd] ; pop rdi ; pop rax ; ret 0x45ff
0x00000200001b4471 : push rsi ; mov r8b, dl ; jmp 0x200001b44c1
0x0000020000510ec9 : push rsi ; or al, ch ; mov al, 0xe2 ; ret
0x000002000004e50c : push rsi ; or byte ptr [rax - 0x77], cl ; push rbp ; ror byte ptr [rdi], 0xb6 ; ret 0x548
0x00000200001d2aaf : push rsi ; or byte ptr [rax - 1], cl ; ret
0x0000020000650c74 : push rsi ; or byte ptr [rbp - 0x75], al ; add al, 0x8b ; ret 0xe083
0x0000020000422834 : push rsi ; or byte ptr [rbx - 0x914d411], cl ; ret 0xf20
0x00000200004f4966 : push rsi ; or eax, 0x8548ffd4 ; leave ; je 0x200004f4982 ; ret
0x000002000009827a : push rsi ; or eax, dword ptr [rax] ; add byte ptr [rax - 9], cl ; ret
0x0000020000405782 : push rsi ; out dx, eax ; dec dword ptr [rbx] ; ret
0x000002000040572d : push rsi ; out dx, eax ; jmp qword ptr [rbx]
0x00000200005fd23e : push rsi ; outsb dx, byte ptr [rsi] ; ret
0x00000200006a294f : push rsi ; outsb dx, byte ptr ds:[rsi] ; push rsp ; ret
0x00000200003cb1a6 : push rsi ; pop rsi ; ret
0x00000200007697be : push rsi ; pop rsp ; sar edi, -0x48 ; push rax ; ret
0x00000200004b8766 : push rsi ; pushfq ; sar bh, 0x8b ; ret
0x00000200000059c8 : push rsi ; ret
0x00000200004b4cbd : push rsi ; ret 0x10
0x0000020000544ca1 : push rsi ; ret 0x413f
0x0000020000758ca1 : push rsi ; ret 0x48ff
0x000002000018a7f5 : push rsi ; ret 0x7401
0x00000200006707e5 : push rsi ; ret 0x7403
0x00000200000aa4ac : push rsi ; ret 0x7408
0x000002000010e5e1 : push rsi ; ret 0x7410
0x000002000016055a : push rsi ; ret 0x741e
0x0000020000598520 : push rsi ; ret 0x7420
0x00000200000d9fff : push rsi ; ret 0x7501
0x00000200004482fd : push rsi ; ret 0x7503
0x000002000046d0fe : push rsi ; ret 0x750f
0x000002000062e8ee : push rsi ; ret 0x7573
0x00000200000c6a46 : push rsi ; ret 0x75f0
0x0000020000475f26 : push rsi ; ret 0x85ff
0x000002000017b792 : push rsi ; ret 0xba01
0x000002000074e969 : push rsi ; ret 0xe901
0x000002000007efc0 : push rsi ; ret 0xe908
0x00000200000922ae : push rsi ; ret 0xf01
0x00000200000a053f : push rsi ; ret 0xf02
0x0000020000041af1 : push rsi ; ret 0xf03
0x00000200000a9492 : push rsi ; ret 0xf04
0x00000200000a76c3 : push rsi ; ret 0xf07
0x00000200000569c7 : push rsi ; ret 0xf08
0x000002000059905a : push rsi ; ret 0xf0c
0x000002000049c444 : push rsi ; ret 0xf0ff
0x00000200000bdf04 : push rsi ; ret 0xf10
0x0000020000069db0 : push rsi ; ret 0xf12
0x00000200004946a1 : push rsi ; ret 0xf20
0x000002000020d4e8 : push rsi ; ret 0xf30
0x00000200006baeba : push rsi ; ret 0xffb4
0x0000020000414db6 : push rsi ; ret 0xffe1
0x0000020000756f66 : push rsi ; ret 1
0x0000020000157fbf : push rsi ; rol dword ptr [rdx], 0x74 ; or cl, byte ptr [rax - 0x7d] ; jmp qword ptr [rcx]
0x00000200005de04b : push rsi ; sbb al, 0xe8 ; ret 0xeb0d
0x00000200000959cb : push rsi ; sbb byte ptr [rax - 0x75], cl ; ret 0x2348
0x0000020000681933 : push rsi ; sub byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x00000200001dfc86 : push rsi ; sub byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200004ae30d : push rsi ; sub dh, dh ; ret 0xf0f
0x0000020000587776 : push rsi ; xchg eax, esp ; ret
0x00000200006818b4 : push rsi ; xor byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x00000200006a2324 : push rsi ; xor dword ptr [rip + 0x30dbde31], ecx ; ret 0xc556
0x00000200001acf7f : push rsp ; adc al, byte ptr [rax] ; call rax
0x000002000062d7f2 : push rsp ; add byte ptr [r13 + 3], r8b ; ret 0x8944
0x00000200001d03f4 : push rsp ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000171623 : push rsp ; add byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call rbx
0x0000020000161bbd : push rsp ; add byte ptr [rax], al ; shr cl, 0xe3 ; ret 0xffec
0x0000020000445b29 : push rsp ; add byte ptr [rcx + 3], r9b ; leave ; jmp rcx
0x00000200001fee75 : push rsp ; add dword ptr [rax], eax ; add al, ch ; ret 0xf44a
0x00000200001fbb5d : push rsp ; add eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200005962f7 : push rsp ; and al, 0x20 ; call rax
0x000002000078574d : push rsp ; and al, 0x20 ; mov al, dl ; add rsp, 0x38 ; ret
0x00000200004fcef0 : push rsp ; and al, 0x20 ; mov ecx, edi ; call rsi
0x00000200002215ed : push rsp ; and al, 0x20 ; mov edx, esi ; call r11
0x0000020000425534 : push rsp ; and al, 0x20 ; mov rbx, rcx ; call 0x200000459c9
0x00000200003b619a : push rsp ; and al, 0x20 ; mov rdx, rbx ; call r10
0x00000200002114d5 : push rsp ; and al, 0x20 ; mov rdx, rsi ; call r10
0x00000200005cb503 : push rsp ; and al, 0x24 ; mov ecx, dword ptr [rsp + 0x28] ; call 0x20000517755
0x000002000052bcfc : push rsp ; and al, 0x28 ; add rax, rdx ; jmp 0x2000052bd17
0x000002000049913c : push rsp ; and al, 0x28 ; call 0x200000bb116
0x00000200006b6d96 : push rsp ; and al, 0x28 ; lea rcx, qword ptr [rsp + 0x20] ; call r8
0x00000200001b303b : push rsp ; and al, 0x28 ; mov cl, bl ; call rax
0x000002000010c607 : push rsp ; and al, 0x28 ; xor ecx, ecx ; call rax
0x00000200004ecc16 : push rsp ; and al, 0x30 ; call 0x200001178ce
0x0000020000403cfa : push rsp ; and al, 0x30 ; call rax
0x000002000019d0c6 : push rsp ; and al, 0x30 ; mov ecx, 0xa ; call rax
0x000002000019d0a3 : push rsp ; and al, 0x30 ; mov ecx, 0xd ; call rax
0x0000020000400af0 : push rsp ; and al, 0x30 ; mov ecx, edi ; call 0x2000047cd9b
0x0000020000162ddd : push rsp ; and al, 0x30 ; mov qword ptr [rsp + 0x30], rax ; call r8
0x000002000041d651 : push rsp ; and al, 0x30 ; mov rcx, rax ; call 0x20000043d81
0x000002000049b389 : push rsp ; and al, 0x30 ; mov rcx, rbp ; call 0x200000c06f9
0x00000200004243ca : push rsp ; and al, 0x30 ; mov rcx, rbp ; call 0x20000140688
0x0000020000414e81 : push rsp ; and al, 0x38 ; call 0x2000003feb6
0x00000200001ac611 : push rsp ; and al, 0x38 ; call r8
0x00000200001b9913 : push rsp ; and al, 0x38 ; call r9
0x000002000014e430 : push rsp ; and al, 0x40 ; add rsp, 0x50 ; call r10
0x0000020000512e94 : push rsp ; and al, 0x40 ; call 0x20000140486
0x000002000052239e : push rsp ; and al, 0x40 ; dec rax ; add rax, rdx ; jmp 0x20000522343
0x00000200000a88d8 : push rsp ; and al, 0x40 ; jmp 0x200000a8360
0x0000020000066c66 : push rsp ; and al, 0x40 ; mov bl, al ; call rsi
0x00000200001ad6a9 : push rsp ; and al, 0x40 ; mov rcx, qword ptr [rsp + 0x20] ; call r9
0x00000200001ad596 : push rsp ; and al, 0x40 ; mov rcx, qword ptr [rsp + 0x20] ; call rax
0x0000020000513745 : push rsp ; and al, 0x40 ; mov rcx, r14 ; call 0x20000140da9
0x000002000063eff1 : push rsp ; and al, 0x40 ; mov rcx, rdi ; call r8
0x00000200004a80cc : push rsp ; and al, 0x44 ; mov rcx, r14 ; call 0x200003f4388
0x00000200004c1902 : push rsp ; and al, 0x44 ; mov rcx, r15 ; call 0x200000e5bad
0x00000200005126b7 : push rsp ; and al, 0x48 ; call 0x20000140486
0x00000200001ac5e9 : push rsp ; and al, 0x48 ; call r9
0x0000020000230e34 : push rsp ; and al, 0x48 ; mov dword ptr [r10], eax ; call r10
0x0000020000144628 : push rsp ; and al, 0x48 ; mov rcx, qword ptr [rsp + 0x50] ; call rdx
0x0000020000421057 : push rsp ; and al, 0x50 ; call 0x20000045312
0x00000200003e464f : push rsp ; and al, 0x50 ; jmp 0x200003e461a
0x000002000043cab5 : push rsp ; and al, 0x50 ; mov rcx, rdi ; call rsi
0x0000020000693d14 : push rsp ; and al, 0x54 ; mov r8d, edi ; mov rdx, rbp ; call rax
0x000002000052aefe : push rsp ; and al, 0x54 ; mov rcx, rsi ; call 0x2000014f189
0x0000020000669404 : push rsp ; and al, 0x58 ; call rax
0x00000200004b32fa : push rsp ; and al, 0x58 ; mov rcx, rbx ; call r15
0x00000200003f85c0 : push rsp ; and al, 0x58 ; mov rcx, rbx ; call rsi
0x00000200005962f2 : push rsp ; and al, 0x60 ; mov qword ptr [rsp + 0x20], r10 ; call rax
0x0000020000475e6c : push rsp ; and al, 0x60 ; mov rbp, rcx ; call 0x2000009db89
0x00000200003ec47f : push rsp ; and al, 0x60 ; mov rcx, qword ptr [rsp + 0x48] ; call r12
0x0000020000475e93 : push rsp ; and al, 0x60 ; mov rcx, rbx ; call 0x2000009db89
0x00000200001ab0a0 : push rsp ; and al, 0x68 ; call rax
0x000002000049b19a : push rsp ; and al, 0x68 ; mov rcx, rsi ; call 0x200000c06f9
0x00000200001fd8c1 : push rsp ; and al, 0x70 ; call r9
0x000002000047858c : push rsp ; and al, 0x70 ; mov rcx, rbp ; call rdi
0x00000200001fd90e : push rsp ; and al, 0x70 ; xor ecx, ecx ; call r9
0x00000200005a2609 : push rsp ; and al, 0x78 ; call 0x200001c46ce
0x00000200003fa37c : push rsp ; and al, 0x78 ; mov rcx, rdi ; call r12
0x0000020000138106 : push rsp ; and al, 8 ; ret
0x0000020000025e21 : push rsp ; call 0x20000025e4c
0x000002000064fa6a : push rsp ; call qword ptr [rax]
0x0000020000465049 : push rsp ; call r10
0x000002000040facc : push rsp ; clc ; add eax, dword ptr [rax] ; add rsp, 0x68 ; ret
0x00000200003e934a : push rsp ; cmp dword ptr [rsi], 0 ; add rdx, rbx ; jmp rdx
0x00000200004b8b68 : push rsp ; cwde ; sar bh, 0x8b ; ret
0x0000020000106584 : push rsp ; enter 0x4808, -0x75 ; adc byte ptr [rax - 0x7d], r9b ; ret 0x4408
0x00000200001a6fb4 : push rsp ; enter 0x4828, -0x75 ; pop rsp ; and al, 8 ; ret
0x00000200003a6833 : push rsp ; fstp dword ptr [rbx + rdi] ; ret 0x420f
0x0000020000114c86 : push rsp ; idiv edi ; add rsp, 0x38 ; ret
0x00000200004b9d5c : push rsp ; in al, dx ; dec dword ptr [rax + 0x3b] ; ret 0x2377
0x0000020000165091 : push rsp ; in eax, dx ; jmp qword ptr [rcx]
0x0000020000205ac7 : push rsp ; insd dword ptr [rdi], dx ; mov r12d, r9d ; call 0x20000231ce7
0x0000020000191128 : push rsp ; int 0
0x0000020000755f53 : push rsp ; jo 0x20000755f58 ; ret 0x8b41
0x00000200004139ba : push rsp ; loop 0x200004139dc ; add byte ptr [rcx + rcx*4 + 1], al ; xor eax, eax ; ret
0x00000200000dd4ec : push rsp ; mov ch, 0xb ; add dh, dh ; ret 0xf07
0x00000200004cadd2 : push rsp ; mov dl, r11b ; call 0x200000eebf7
0x0000020000117508 : push rsp ; mov eax, 0x7001e ; add byte ptr [rax], al ; call rdi
0x00000200001c6528 : push rsp ; mov eax, dr1 ; inc dword ptr [rbp - 0x76] ; xchg eax, edi ; ret
0x0000020000044d32 : push rsp ; mov eax, edx ; ret
0x00000200004c7de1 : push rsp ; mov edi, 0xcf8b49ff ; call 0x200000efbc1
0x0000020000693d16 : push rsp ; mov r8d, edi ; mov rdx, rbp ; call rax
0x0000020000116916 : push rsp ; mov rcx, qword ptr [rdi + 8] ; call r8
0x0000020000171b98 : push rsp ; mov rcx, qword ptr fs:[rdi + 8] ; call r8
0x000002000052af00 : push rsp ; mov rcx, rsi ; call 0x2000014f187
0x000002000014f502 : push rsp ; or bh, bh ; dec r8 ; jne 0x2000014f508 ; ret
0x000002000014f5b0 : push rsp ; or bh, bh ; dec r8 ; jne 0x2000014f5b6 ; ret
0x00000200000aafba : push rsp ; or dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x000002000011692a : push rsp ; pop rax ; mov rcx, qword ptr [rdi + 8] ; call r8
0x00000200005dd228 : push rsp ; pop rdi ; mov ch, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000171bc2 : push rsp ; push 0x84f8b48 ; call r8
0x0000020000116914 : push rsp ; push rsp ; mov rcx, qword ptr [rdi + 8] ; call r8
0x000002000005d5d4 : push rsp ; ret
0x00000200003a41dd : push rsp ; ret 0x4104
0x00000200006aabb0 : push rsp ; ret 0x44ff
0x000002000000f8e6 : push rsp ; ret 0x4518
0x000002000041f98e : push rsp ; ret 0x48ff
0x000002000060bb93 : push rsp ; ret 0x8bff
0x00000200000f286f : push rsp ; ret 0xa
0x000002000019a26a : push rsp ; ret 0xe870
0x000002000051af75 : push rsp ; ret 0xebff
0x000002000003cbf9 : push rsp ; ret 0xf08
0x0000020000574958 : push rsp ; ret 0xffdb
0x0000020000161b23 : push rsp ; ret 0xffec
0x00000200006c2c55 : push rsp ; sar edi, -0x18 ; ret
0x00000200001a1d63 : push rsp ; shl byte ptr [rcx], 0x41 ; cmp ecx, dword ptr [rax] ; jb 0x200001a1d51 ; ret
0x000002000052cb70 : push rsp ; shr ebx, -1 ; mov rcx, rsi ; call 0x200003e8dcd
0x0000020000109fad : push rsp ; sub dword ptr [rax], eax ; add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x00000200003be7ac : push rsp ; test al, 0x33 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000cb58e : push rsp ; test byte ptr [rax - 1], al ; ret 0x5489
0x00000200005a87c6 : push rsp ; xor bl, byte ptr [rax] ; call 0x20000664a39
0x000002000074e741 : pushf ; dec dword ptr [rcx - 0x75] ; push rdi ; xor byte ptr [rax - 0x7d], cl ; ret 0x4c18
0x0000020000141535 : pushfq ; add byte ptr [rax], al ; add cl, ch ; leave ; add byte ptr [rax], al ; ret
0x00000200004b60c0 : pushfq ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000191dcd : pushfq ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200003aed00 : pushfq ; add eax, 0x2b4cfffd ; ret 0x20e8
0x00000200004c6e04 : pushfq ; and al, 0 ; add dword ptr [rax], eax ; add cl, ch ; ret 0xfffe
0x0000020000500a49 : pushfq ; and al, 0 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000021c310 : pushfq ; and al, 0x38 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005459dd : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000000c192 : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret
0x0000020000200f6d : pushfq ; and al, 0x80 ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000521a74 : pushfq ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; test ch, dl ; ret
0x000002000050db46 : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x0000020000078c9a : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add cl, ch ; ret
0x000002000021bccf : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200003b5bcb : pushfq ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000017403d : pushfq ; and al, 0xb8 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000020000440a5e : pushfq ; and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret
0x0000020000430240 : pushfq ; and al, 0xd0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x41fe
0x000002000000cbfe : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000532bd : pushfq ; and al, 0xe8 ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000020000762a45 : pushfq ; dec dword ptr [rax - 0x75] ; ret
0x000002000074e742 : pushfq ; dec dword ptr [rcx - 0x75] ; push rdi ; xor byte ptr [rax - 0x7d], cl ; ret 0x4c18
0x000002000077c45f : pushfq ; dec esp ; mov rcx, r11 ; call rbx
0x000002000048597f : pushfq ; enter 0x88, 0 ; add byte ptr [rdi], cl ; test dword ptr [rdi], edx ; call qword ptr [rdx]
0x00000200001e8a84 : pushfq ; imul esi, ebx, -1 ; add rsp, 0x28 ; ret
0x000002000011f2e0 : pushfq ; inc byte ptr [rdx] ; add bl, ch ; ret
0x000002000075d3e3 : pushfq ; inc dword ptr [rbp - 0x2177f040] ; ret
0x0000020000758c08 : pushfq ; inc dword ptr [rbp - 0x75ec8740] ; ret
0x000002000076922e : pushfq ; inc dword ptr [rbx] ; ret
0x000002000076a9b5 : pushfq ; inc ebx ; xor eax, eax ; ret
0x000002000051247f : pushfq ; jle 0x20000512465 ; inc dword ptr [rax] ; ret
0x0000020000149211 : pushfq ; lea rdx, qword ptr [rip + 0x71] ; jmp rdx
0x000002000056cb24 : pushfq ; loop 0x2000056cb15 ; dec dword ptr [rbx + rcx*4 + 0x35] ; stc ; ret 0xffd6
0x00000200005f3778 : pushfq ; loopne 0x200005f3725 ; outsd dx, dword ptr [rsi] ; add byte ptr [rsp + rax - 1], dh ; ret 0x15eb
0x00000200005966bb : pushfq ; mov edx, 0x32e990ff ; ret 0xfff7
0x000002000051e233 : pushfq ; mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rcx], rax ; jmp 0x2000051e209
0x0000020000045008 : pushfq ; movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, dword ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200001acbd8 : pushfq ; pop rax ; adc al, byte ptr [rax] ; call r9
0x000002000051a9e0 : pushfq ; pop rcx ; ret 0xebff
0x00000200006b4b00 : pushfq ; pushfq ; ret 0xe8ff
0x0000020000013a1c : pushfq ; ret
0x00000200004b59c7 : pushfq ; ret 0x10
0x00000200005aa1d9 : pushfq ; ret 0x3ee9
0x00000200006b4aac : pushfq ; ret 0x48ff
0x00000200006cb113 : pushfq ; ret 0x8068
0x0000020000033c47 : pushfq ; ret 0x8341
0x000002000050e435 : pushfq ; ret 0x85ff
0x00000200006b4b01 : pushfq ; ret 0xe8ff
0x00000200001c638b : pushfq ; ret 0xf2c0
0x0000020000416b6c : pushfq ; ret 0xf6ff
0x0000020000656ee0 : pushfq ; ret 0xffad
0x00000200005e3bf8 : pushfq ; ret 0xfff5
0x00000200004b8767 : pushfq ; sar bh, 0x8b ; ret
0x000002000062736e : pushfq ; sar bh, 0xeb ; ret 0x438b
0x00000200000ab304 : pushfq ; sbb ecx, dword ptr [rsi] ; add dh, dh ; ret 0xf1e
0x0000020000475168 : pushfq ; std ; dec dword ptr [rax - 9] ; fmul dword ptr [rax - 0x75] ; ret
0x0000020000685320 : pushfq ; sti ; ret
0x00000200005a4d50 : pushfq ; stosq qword ptr [rdi], rax ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000060c46 : pushfq ; sub dword ptr [rax], eax ; ret
0x0000020000509fe0 : pushfq ; xchg eax, ecx ; ret 0x48ff
0x00000200004a10b0 : pushfq ; xchg eax, esi ; in eax, -1 ; call 0x200000c1b37
0x000002000015ac60 : pushfq ; xor esp, dword ptr [rdx] ; add bh, bh ; ret
0x00000200005139ca : rcl bl, cl ; ret 0x8bff
0x0000020000047d9c : rcl byte ptr [r10], 1 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000181e97 : rcl byte ptr [rax - 0xfc37017], 1 ; dec dword ptr [rcx + 0x3b] ; ret 0x850f
0x000002000020c265 : rcl byte ptr [rax], 0x48 ; add esp, 0x28 ; ret
0x00000200000822b3 : rcl byte ptr [rax], 0x74 ; add eax, 0x28c48348 ; ret
0x000002000015daee : rcl byte ptr [rax], 0xb9 ; ret 0
0x000002000046dfbc : rcl byte ptr [rax], 0xc3 ; xor eax, eax ; ret
0x0000020000115a9b : rcl byte ptr [rax], 0xff ; ret
0x00000200004727b7 : rcl byte ptr [rbx], 1 ; add byte ptr [rcx + rcx*4 + 0x73], al ; adc byte ptr [rax - 0x75], cl ; ret
0x000002000007b6f7 : rcl byte ptr [rcx + rax*2], 3 ; ret 0xc141
0x0000020000047d9d : rcl byte ptr [rdx], 1 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000040d9ac : rcl byte ptr [rsi - 0x35], 1 ; dec dword ptr [rax + 0x3b] ; ret
0x00000200004596e2 : rcl ch, 0x14 ; add byte ptr [rdi + rcx - 0x44], al ; ret 0x8341
0x000002000004f801 : rcl cl, 0xe8 ; bsr edx, eax ; inc dl ; jmp 0x2000004f7da
0x000002000021a0b5 : rcl cl, 0xe9 ; jne 0x2000021a0b9 ; ret
0x00000200000e9a3c : rcl cl, 0xf8 ; cmp edx, eax ; jl 0x200000e9a4f ; mov al, 1 ; ret
0x000002000049d1aa : rcl dl, cl ; in eax, -1 ; call 0x200000bd247
0x00000200005131aa : rcl dl, cl ; ret 0x45ff
0x000002000064aed4 : rcl dword ptr [rax], -0x75 ; ret 0xf41
0x0000020000206192 : rcl dword ptr [rax], -0x77 ; pop rcx ; adc byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000055c4e6 : rcl dword ptr [rax], 0x3b ; ret 0xee72
0x000002000021bea2 : rcl dword ptr [rax], 0x45 ; test edx, edx ; je 0x2000021be73 ; mov eax, r10d ; jmp 0x2000021beb9
0x0000020000036737 : rcl dword ptr [rax], 0x48 ; sub eax, 1 ; jne 0x20000036736 ; ret
0x00000200004002ac : rcl dword ptr [rax], 0x48 ; sub eax, 1 ; jne 0x200004002ab ; ret
0x000002000013318b : rcl dword ptr [rax], 0x66 ; test ecx, 0x175ffff ; ret
0x000002000046c972 : rcl dword ptr [rax], 0x75 ; add ebx, eax ; bts dword ptr [rdx], 7 ; ret
0x000002000006fc39 : rcl dword ptr [rax], 1 ; add dh, dh ; ret
0x000002000007bb16 : rcl dword ptr [rax], 1 ; ret
0x000002000016c13f : rcl dword ptr [rbp - 7], cl ; call rcx
0x0000020000061f1f : rcl dword ptr [rcx + 0x10], -1 ; ret 0xffb8
0x000002000005d7c7 : rcl dword ptr [rcx], 0 ; ret
0x00000200001b2f8f : rcl dword ptr [rcx], cl ; add bh, bh ; ret
0x000002000004774b : rcl dword ptr [rdx], 1 ; add bh, bh ; ret
0x0000020000036561 : rcl dword ptr [rdx], 1 ; add byte ptr [rcx - 0x75], al ; ret
0x00000200000477d8 : rcl dword ptr [rdx], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000778393 : rcl dword ptr [rip - 0x166f005b], 1 ; xchg eax, edx ; ret 0xfffd
0x0000020000758885 : rcl dword ptr [rsi], cl ; int1 ; dec dword ptr [rbp + rcx*4 + 0xd] ; cwde ; insb byte ptr [rdi], dx ; ret 0x66ff
0x0000020000003772 : rcl ebx, 1 ; loop 0x2000000379d ; ret 0xc23b
0x000002000053cf7a : rcr byte ptr [rax], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000202962 : rcr byte ptr [rax], 0x48 ; cmp eax, ecx ; jb 0x20000202965 ; xor eax, eax ; ret
0x0000020000475b95 : rcr byte ptr [rax], 0x83 ; cli ; add dh, byte ptr [rdx - 0x10] ; xor eax, eax ; ret
0x000002000044c969 : rcr byte ptr [rax], 0xeb ; out 0x49, al ; lea eax, dword ptr [rax + 0x18] ; ret
0x00000200001f8b0d : rcr byte ptr [rax], 0xeb ; xor byte ptr [rax - 0x7d], cl ; ret
0x0000020000404b82 : rcr byte ptr [rax], cl ; ret
0x000002000069d4e2 : rcr byte ptr [rbx + rax*2], 0xf ; mov bh, 0x44 ; sbb byte ptr [rbx + rdi], al ; ret
0x000002000019440f : rcr byte ptr [rdi - 0xd], cl ; inc dword ptr [rcx - 0x75] ; ret 0x2b4d
0x00000200004e5de0 : rcr byte ptr [rdx], 1 ; ret
0x000002000014a64e : rcr byte ptr [rsi + 0x5f], 0x5b ; pop rbp ; pop r12 ; ret
0x00000200004eed43 : rcr dh, 0xff ; test al, 3 ; sete al ; ret
0x00000200004fa271 : rcr dword ptr [rax - 0x7d], 1 ; ret 0x3960
0x00000200001a4ab0 : rcr dword ptr [rax], 0 ; ret
0x0000020000230c8d : rcr dword ptr [rbx + 0x48], cl ; add esp, 8 ; jmp r8
0x00000200005d68bc : rcr dword ptr [rbx], -0x40 ; and eax, 0xfffffffe ; inc eax ; ret
0x0000020000134760 : rcr dword ptr [rbx], -0x40 ; sbb eax, -1 ; ret
0x0000020000400d99 : rcr dword ptr [rbx], cl ; ret
0x00000200006b7d4a : rcr dword ptr [rcx + 0xb4], -1 ; ret
0x000002000049726b : rcr dword ptr [rcx], 1 ; ret 0xf7ff
0x00000200005b79ba : rcr dword ptr [rdi + 0x48], -0x77 ; add eax, 0x141855 ; ret
0x0000020000756c71 : rcr dword ptr [rdi + rdi*8 - 0x7a6dfa75], cl ; ret 0x41ff
0x000002000014c4ab : rcr dword ptr [rdi], 1 ; add byte ptr [rax], al ; nop ; ret
0x0000020000571af4 : rcr dword ptr [rip - 0x27567a], -0x17 ; ret
0x000002000058046c : rcr ebx, cl ; call 0x1ffc2834d78
0x00000200006467ad : rcr ecx, -1 ; add rsp, 0x38 ; ret
0x0000020000484e6b : rcr ecx, 1 ; ret
0x00000200004ee89e : rcr esi, 1 ; dec dword ptr [rax - 0x39] ; ret 0x1700
0x0000020000143dab : rdmsr ; and eax, 0xfffffffc ; wrmsr ; ret
0x00000200000c6c9d : rdmsr ; ret 0x3944
0x0000020000148a8c : rdmsr ; shl rdx, 0x20 ; or rax, rdx ; pop rdi ; ret
0x00000200001c977d : rdmsr ; shl rdx, 0x20 ; or rax, rdx ; ret
0x00000200006955b3 : rdpmc ; inc dword ptr [rcx - 1] ; ret
0x00000200003ca119 : rdpmc ; ret
0x0000020000114435 : rdpmc ; sal byte ptr [rbx], cl ; leave ; call rax
0x000002000049d675 : rdtsc ; ret 0x48ff
0x000002000008b558 : rdtsc ; shl rdx, 0x20 ; or rax, rdx ; ret
0x00000200004adb89 : repe cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x0000020000781def : repne stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x75] ; pop rsp ; and al, 0x40 ; jmp 0x20000781dc5
0x00000200000023c2 : ret
0x0000020000083f8d : ret 0
0x0000020000026f76 : ret 0x10
0x0000020000143c4f : ret 0x100
0x000002000005b6bf : ret 0x1000
0x00000200000fd309 : ret 0x100f
0x0000020000440345 : ret 0x101
0x00000200004c3423 : ret 0x101b
0x00000200005f767a : ret 0x1025
0x00000200001c2a57 : ret 0x102f
0x00000200001363ca : ret 0x106c
0x00000200000f1d24 : ret 0x1073
0x0000020000030ab9 : ret 0x1074
0x0000020000229b3a : ret 0x1075
0x000002000063ab55 : ret 0x1076
0x0000020000401d32 : ret 0x1077
0x00000200005256a3 : ret 0x1078
0x0000020000178ba9 : ret 0x108
0x00000200004baf66 : ret 0x1082
0x0000020000573dce : ret 0x1086
0x00000200002032ae : ret 0x109e
0x000002000004bc2e : ret 0x10a8
0x00000200001730c0 : ret 0x10b
0x0000020000417b23 : ret 0x10ba
0x0000020000486905 : ret 0x10bb
0x00000200004b6279 : ret 0x10be
0x000002000015612a : ret 0x10e8
0x0000020000020796 : ret 0x10e9
0x0000020000016e81 : ret 0x11
0x00000200000920a9 : ret 0x110
0x00000200000650b9 : ret 0x110f
0x00000200001a882e : ret 0x1172
0x00000200000596e3 : ret 0x1173
0x00000200001356a8 : ret 0x1174
0x00000200000cc7b3 : ret 0x1175
0x00000200004bae74 : ret 0x1177
0x0000020000148819 : ret 0x118
0x000002000046fb81 : ret 0x1188
0x00000200000bc359 : ret 0x11b2
0x00000200005dd74a : ret 0x11b8
0x0000020000156105 : ret 0x11ba
0x000002000021ce7d : ret 0x11e8
0x0000020000467b07 : ret 0x11e9
0x00000200001b0342 : ret 0x11fd
0x00000200000383f1 : ret 0x12
0x0000020000056855 : ret 0x121b
0x0000020000110ec8 : ret 0x124
0x00000200001adbb2 : ret 0x1248
0x00000200000425ba : ret 0x124f
0x0000020000041a58 : ret 0x1251
0x0000020000050054 : ret 0x1266
0x00000200000d9777 : ret 0x1273
0x000002000003ee4e : ret 0x1274
0x0000020000026ece : ret 0x1275
0x00000200001d8ea6 : ret 0x1276
0x0000020000482c9c : ret 0x127d
0x000002000058bdf7 : ret 0x128
0x000002000067dde3 : ret 0x128b
0x000002000048e41e : ret 0x129e
0x00000200001028ac : ret 0x12b
0x0000020000037264 : ret 0x12c8
0x0000020000036d62 : ret 0x12cb
0x00000200006bc19c : ret 0x12e8
0x0000020000021421 : ret 0x13
0x00000200006cad3a : ret 0x132
0x0000020000482248 : ret 0x1327
0x00000200004646e4 : ret 0x1372
0x000002000022eae0 : ret 0x1373
0x0000020000063519 : ret 0x1374
0x0000020000609acf : ret 0x1375
0x00000200005720bf : ret 0x1376
0x0000020000026079 : ret 0x1387
0x00000200005978c7 : ret 0x1389
0x00000200001f8fca : ret 0x138a
0x0000020000015dc8 : ret 0x138b
0x0000020000475270 : ret 0x13a9
0x0000020000470636 : ret 0x13e3
0x00000200001387f7 : ret 0x13eb
0x000002000046ee56 : ret 0x13f7
0x000002000000d5d2 : ret 0x14
0x000002000001c752 : ret 0x1403
0x00000200003f7627 : ret 0x141
0x000002000046cec4 : ret 0x1415
0x00000200005b773a : ret 0x1418
0x0000020000017eac : ret 0x143c
0x00000200000927de : ret 0x1440
0x00000200001b3fea : ret 0x1444
0x00000200004ef166 : ret 0x146
0x0000020000462ee6 : ret 0x1465
0x0000020000059693 : ret 0x1472
0x0000020000538b53 : ret 0x1473
0x000002000000b3d3 : ret 0x1474
0x0000020000461810 : ret 0x1475
0x0000020000452b2f : ret 0x1476
0x000002000077f1d3 : ret 0x147d
0x00000200006b5dfa : ret 0x147f
0x0000020000041751 : ret 0x148
0x00000200001b1a62 : ret 0x1480
0x0000020000622d4b : ret 0x148d
0x0000020000033ba9 : ret 0x149
0x000002000000fa0d : ret 0x14a9
0x0000020000232eae : ret 0x14c5
0x00000200005d262f : ret 0x14e9
0x00000200001c6afa : ret 0x14eb
0x000002000001c1d2 : ret 0x15
0x0000020000087c96 : ret 0x1539
0x000002000039aeb6 : ret 0x154b
0x00000200005ea8d0 : ret 0x1572
0x00000200000eb4f8 : ret 0x1574
0x000002000012786f : ret 0x1589
0x00000200001a36b2 : ret 0x15eb
0x00000200001b9e12 : ret 0x15f5
0x00000200000a982e : ret 0x15f8
0x00000200000e871a : ret 0x16
0x000002000043e06a : ret 0x161c
0x000002000021d252 : ret 0x161f
0x0000020000630ba3 : ret 0x163b
0x00000200001715da : ret 0x163f
0x00000200004394ca : ret 0x1647
0x0000020000438f7c : ret 0x164c
0x0000020000083b54 : ret 0x165
0x0000020000010604 : ret 0x1660
0x0000020000436a16 : ret 0x166a
0x00000200000220e1 : ret 0x1674
0x00000200001b8f54 : ret 0x1675
0x00000200004ac95a : ret 0x1677
0x00000200001bd10c : ret 0x167c
0x0000020000414e8e : ret 0x16d0
0x000002000042e686 : ret 0x16d7
0x000002000050cfe8 : ret 0x16e8
0x00000200001a3659 : ret 0x16eb
0x000002000042ab83 : ret 0x16fc
0x0000020000180150 : ret 0x17
0x00000200004ee8a3 : ret 0x1700
0x0000020000425f79 : ret 0x1730
0x00000200005dad45 : ret 0x173b
0x00000200000402c1 : ret 0x174
0x00000200004247a0 : ret 0x1741
0x00000200004212dc : ret 0x176a
0x00000200000ba24a : ret 0x176d
0x00000200000596a6 : ret 0x177
0x0000020000056dbb : ret 0x1773
0x0000020000162d27 : ret 0x1774
0x0000020000060b0d : ret 0x1775
0x0000020000155a25 : ret 0x177c
0x0000020000581142 : ret 0x177e
0x0000020000467a1d : ret 0x1789
0x0000020000746942 : ret 0x179
0x0000020000404546 : ret 0x1793
0x0000020000403b0c : ret 0x179b
0x000002000018eba6 : ret 0x17b
0x00000200003fa38e : ret 0x17e8
0x000002000018d11e : ret 0x17e9
0x00000200003e5fda : ret 0x18
0x00000200000ba23a : ret 0x180
0x000002000015c7da : ret 0x181f
0x000002000039f250 : ret 0x1824
0x000002000017837e : ret 0x1838
0x00000200003ef72d : ret 0x1867
0x00000200004390c9 : ret 0x1873
0x000002000063695e : ret 0x1875
0x00000200000e29dd : ret 0x187c
0x0000020000217c9b : ret 0x187d
0x00000200001bc2c8 : ret 0x188
0x0000020000040b59 : ret 0x188b
0x0000020000048e14 : ret 0x189
0x000002000013a9ba : ret 0x1897
0x00000200003ea3d6 : ret 0x18a2
0x00000200003e6fcf : ret 0x18b4
0x00000200003e7155 : ret 0x18b6
0x00000200004d842d : ret 0x18ba
0x00000200001f17b2 : ret 0x18ca
0x00000200005f3075 : ret 0x18eb
0x00000200003dfac7 : ret 0x18ef
0x000002000056a702 : ret 0x18f0
0x00000200001e2f4f : ret 0x19
0x000002000011390b : ret 0x190
0x000002000062da05 : ret 0x191
0x000002000019edb9 : ret 0x191d
0x00000200003d348e : ret 0x1921
0x00000200003d9b3a : ret 0x192b
0x00000200003cf3b6 : ret 0x1958
0x0000020000686255 : ret 0x1972
0x00000200003c5fa5 : ret 0x1973
0x000002000061dafe : ret 0x1974
0x00000200001f2765 : ret 0x1975
0x000002000077f1ce : ret 0x197c
0x00000200003d217a : ret 0x198b
0x00000200003c5d97 : ret 0x19b8
0x000002000055e062 : ret 0x19b9
0x00000200003c7806 : ret 0x19bd
0x0000020000084d6b : ret 0x1a
0x000002000015732a : ret 0x1a4f
0x000002000008f59a : ret 0x1a72
0x00000200003b7c12 : ret 0x1a73
0x000002000048e9e2 : ret 0x1a74
0x000002000064094d : ret 0x1a75
0x00000200003e35b2 : ret 0x1a76
0x000002000077b796 : ret 0x1a7f
0x0000020000056a27 : ret 0x1a8
0x00000200003b1693 : ret 0x1aa8
0x00000200004e836c : ret 0x1ae8
0x0000020000107a1e : ret 0x1ae9
0x00000200001a35d7 : ret 0x1aeb
0x0000020000113e0b : ret 0x1b
0x000002000049aadd : ret 0x1b0
0x00000200005f5a5c : ret 0x1b1
0x0000020000532433 : ret 0x1b2
0x00000200006c2cf5 : ret 0x1b3
0x000002000011c542 : ret 0x1b3b
0x0000020000172c4f : ret 0x1b48
0x00000200004ba796 : ret 0x1b69
0x0000020000023581 : ret 0x1b72
0x00000200000630b9 : ret 0x1b73
0x000002000018c523 : ret 0x1b74
0x0000020000403c46 : ret 0x1b75
0x000002000060b51a : ret 0x1b76
0x0000020000127d5f : ret 0x1b8
0x00000200001578f1 : ret 0x1b9
0x00000200000165be : ret 0x1ba
0x0000020000164be8 : ret 0x1bd
0x00000200006bd1c7 : ret 0x1be
0x000002000009ae14 : ret 0x1be9
0x0000020000011170 : ret 0x1bf
0x00000200006d0f56 : ret 0x1c
0x00000200000ca440 : ret 0x1c6
0x0000020000106057 : ret 0x1c7
0x00000200003fb53b : ret 0x1c72
0x000002000011415a : ret 0x1c74
0x0000020000074a61 : ret 0x1c75
0x00000200001fa0f0 : ret 0x1c77
0x0000020000113486 : ret 0x1cbe
0x00000200001c563a : ret 0x1ccc
0x000002000077a5e1 : ret 0x1ce9
0x000002000022f51e : ret 0x1ceb
0x00000200001a1df5 : ret 0x1d
0x00000200001a8b5a : ret 0x1d54
0x00000200000672b3 : ret 0x1d73
0x0000020000074546 : ret 0x1d74
0x00000200000f3d58 : ret 0x1d75
0x00000200001a7718 : ret 0x1d77
0x000002000021d29d : ret 0x1d85
0x0000020000177392 : ret 0x1db9
0x000002000013b94c : ret 0x1deb
0x00000200000eecfd : ret 0x1e
0x000002000075362a : ret 0x1e1
0x00000200000f8942 : ret 0x1e14
0x000002000011af9a : ret 0x1e17
0x000002000011698a : ret 0x1e19
0x000002000004632a : ret 0x1e6
0x0000020000536452 : ret 0x1e72
0x00000200007624b8 : ret 0x1e73
0x000002000002f6e6 : ret 0x1e74
0x00000200000596d0 : ret 0x1e77
0x00000200005248a1 : ret 0x1e8
0x00000200000e5442 : ret 0x1eac
0x000002000050d91a : ret 0x1ec2
0x000002000010ea25 : ret 0x1ee9
0x00000200000e87b9 : ret 0x1ef9
0x000002000018302a : ret 0x1f
0x000002000001821a : ret 0x1f0f
0x00000200003f5197 : ret 0x1f25
0x00000200000939ea : ret 0x1f3
0x0000020000163b79 : ret 0x1f72
0x000002000003b4d1 : ret 0x1f74
0x000002000039a26a : ret 0x1f75
0x0000020000524851 : ret 0x1f8
0x00000200007590aa : ret 0x1fa
0x00000200004daf3b : ret 0x1fe8
0x000002000018d10e : ret 0x1fe9
0x00000200001f3e01 : ret 0x1feb
0x0000020000115232 : ret 0x1ff
0x00000200000cca09 : ret 0x20
0x000002000005fabc : ret 0x200
0x00000200001b2746 : ret 0x201
0x000002000012a90b : ret 0x2025
0x00000200006bd95a : ret 0x206
0x000002000050ee85 : ret 0x2073
0x000002000007bf67 : ret 0x2074
0x0000020000054942 : ret 0x2075
0x000002000003d717 : ret 0x207d
0x0000020000231dd7 : ret 0x2080
0x000002000065777c : ret 0x209
0x000002000000a181 : ret 0x20ba
0x000002000073e309 : ret 0x20bf
0x00000200003aed06 : ret 0x20e8
0x00000200005aa1f8 : ret 0x20e9
0x0000020000162000 : ret 0x21
0x00000200000c76c7 : ret 0x210
0x00000200004e897a : ret 0x2106
0x0000020000460696 : ret 0x210a
0x00000200001775d5 : ret 0x2148
0x00000200006b96db : ret 0x2173
0x0000020000597421 : ret 0x2174
0x000002000000aa50 : ret 0x2175
0x00000200001bb2bf : ret 0x2176
0x0000020000126901 : ret 0x2177
0x00000200000c0afe : ret 0x21db
0x00000200004e1159 : ret 0x21e8
0x0000020000198059 : ret 0x21e9
0x00000200003a2c7b : ret 0x220f
0x000002000003f78f : ret 0x224
0x00000200001b105a : ret 0x2240
0x0000020000614592 : ret 0x2241
0x00000200000822ce : ret 0x2244
0x00000200000d542a : ret 0x2262
0x000002000061e6d4 : ret 0x2274
0x0000020000755ae3 : ret 0x22a
0x000002000051cc8f : ret 0x23
0x00000200001e2c6f : ret 0x230
0x000002000012c3ba : ret 0x2307
0x00000200000022c2 : ret 0x2320
0x00000200000022aa : ret 0x2323
0x000002000000206a : ret 0x2325
0x000002000002d5f5 : ret 0x2341
0x00000200004c02f0 : ret 0x2343
0x00000200001362b3 : ret 0x2344
0x000002000007a826 : ret 0x2345
0x0000020000009bb6 : ret 0x2348
0x0000020000031510 : ret 0x2349
0x0000020000009b8a : ret 0x234c
0x0000020000096bc8 : ret 0x234d
0x00000200001f6d66 : ret 0x2366
0x000002000015f935 : ret 0x2373
0x0000020000074a5a : ret 0x2374
0x00000200004eaeec : ret 0x2375
0x00000200004b9d61 : ret 0x2377
0x000002000069b93a : ret 0x23be
0x00000200000bb7be : ret 0x23f5
0x00000200006b4a8f : ret 0x23ff
0x00000200000af8c0 : ret 0x24
0x000002000047e08c : ret 0x240
0x00000200005d5371 : ret 0x2400
0x00000200004b3bca : ret 0x246e
0x0000020000135aa6 : ret 0x2475
0x0000020000083969 : ret 0x2476
0x000002000048c334 : ret 0x247d
0x00000200004af3f2 : ret 0x24a6
0x000002000020ccbe : ret 0x24b9
0x000002000064a722 : ret 0x24c
0x000002000007175d : ret 0x24e9
0x00000200000707e1 : ret 0x25
0x00000200001b0995 : ret 0x2548
0x00000200006462ad : ret 0x254f
0x0000020000681d67 : ret 0x2572
0x000002000062789a : ret 0x2574
0x00000200007518ba : ret 0x25a
0x00000200006d9c7a : ret 0x25ff
0x0000020000162d22 : ret 0x2672
0x00000200000777da : ret 0x2674
0x00000200001c87db : ret 0x2675
0x000002000002ed6b : ret 0x2677
0x000002000077f16f : ret 0x267d
0x00000200001137e2 : ret 0x26bd
0x00000200005b9678 : ret 0x26e8
0x000002000013cf09 : ret 0x2710
0x00000200001fcbc8 : ret 0x273
0x0000020000678b2e : ret 0x2772
0x00000200002330f8 : ret 0x2780
0x000002000018c710 : ret 0x27b9
0x00000200005ebc13 : ret 0x27e8
0x00000200001da361 : ret 0x27eb
0x00000200006492d1 : ret 0x2809
0x0000020000678186 : ret 0x2872
0x000002000046413c : ret 0x2873
0x00000200004875d7 : ret 0x2874
0x00000200001e3825 : ret 0x2875
0x000002000008d46d : ret 0x2877
0x0000020000164a2a : ret 0x287d
0x000002000007bb54 : ret 0x288
0x0000020000037977 : ret 0x289
0x000002000005e616 : ret 0x29
0x00000200001cf590 : ret 0x2949
0x00000200000e79c2 : ret 0x294c
0x000002000015bd4e : ret 0x2950
0x00000200000657fa : ret 0x2952
0x0000020000464142 : ret 0x2958
0x00000200004754de : ret 0x2972
0x0000020000462a5b : ret 0x2973
0x00000200004e7fc3 : ret 0x2975
0x0000020000754010 : ret 0x298
0x000002000060fdca : ret 0x2988
0x000002000005f346 : ret 0x29b9
0x00000200003ff0fd : ret 0x29e8
0x0000020000399a95 : ret 0x29e9
0x000002000019f83a : ret 0x29f3
0x00000200007465fa : ret 0x2a41
0x000002000003d551 : ret 0x2a72
0x0000020000423196 : ret 0x2a74
0x0000020000063c2c : ret 0x2a77
0x00000200001b0e09 : ret 0x2a8
0x00000200006b345a : ret 0x2ab
0x000002000001f20e : ret 0x2ada
0x0000020000013e15 : ret 0x2b
0x00000200001d40bd : ret 0x2b05
0x00000200004c8aa4 : ret 0x2b0d
0x0000020000228770 : ret 0x2b1a
0x000002000064a78b : ret 0x2b1c
0x00000200003d7ea2 : ret 0x2b25
0x00000200001f24c5 : ret 0x2b32
0x000002000020d1ab : ret 0x2b3f
0x00000200000196ce : ret 0x2b41
0x000002000002acd6 : ret 0x2b44
0x00000200000da26e : ret 0x2b45
0x0000020000010055 : ret 0x2b48
0x00000200001272cd : ret 0x2b49
0x00000200006a8d7d : ret 0x2b4b
0x00000200000043c5 : ret 0x2b4c
0x0000020000005074 : ret 0x2b4d
0x0000020000202eab : ret 0x2b57
0x000002000014f652 : ret 0x2b64
0x0000020000066fdb : ret 0x2b66
0x00000200000220d5 : ret 0x2b75
0x000002000009c4f2 : ret 0x2b8
0x00000200001c97a7 : ret 0x2b9
0x0000020000190a60 : ret 0x2ba
0x00000200001588f4 : ret 0x2bb
0x00000200000c1f69 : ret 0x2bd3
0x0000020000731ade : ret 0x2be
0x000002000016b102 : ret 0x2be9
0x000002000077d07b : ret 0x2bf
0x00000200006aacba : ret 0x2bff
0x00000200001337b7 : ret 0x2c6
0x0000020000536444 : ret 0x2c72
0x000002000002fa92 : ret 0x2c75
0x000002000003721a : ret 0x2cb9
0x0000020000139759 : ret 0x2ce9
0x0000020000424cdc : ret 0x2d
0x0000020000042e2a : ret 0x2d2
0x000002000020c4a4 : ret 0x2d72
0x00000200003bf9a5 : ret 0x2d75
0x0000020000597c76 : ret 0x2d77
0x000002000001b632 : ret 0x2da8
0x00000200001f9904 : ret 0x2deb
0x0000020000010a43 : ret 0x2e
0x000002000003dac3 : ret 0x2e00
0x000002000043c509 : ret 0x2e75
0x0000020000538228 : ret 0x2e8
0x00000200000970e9 : ret 0x2e81
0x000002000008e06a : ret 0x2e9
0x000002000013e0c8 : ret 0x2eb
0x000002000022f3ef : ret 0x2ee9
0x000002000008f656 : ret 0x2efb
0x00000200000903ba : ret 0x2efd
0x0000020000082fd2 : ret 0x2f
0x00000200005638c9 : ret 0x2f72
0x0000020000067316 : ret 0x2f73
0x00000200000052f2 : ret 0x2f75
0x00000200003eaaac : ret 0x2f77
0x00000200001f3e12 : ret 0x2f89
0x000002000019e603 : ret 0x2fe9
0x0000020000071dd1 : ret 0x30
0x0000020000143d28 : ret 0x300
0x00000200000dbce7 : ret 0x3000
0x0000020000192425 : ret 0x302
0x000002000041666a : ret 0x3024
0x0000020000016908 : ret 0x3039
0x00000200003d9089 : ret 0x304
0x000002000066cb2c : ret 0x306
0x0000020000594a0b : ret 0x3072
0x00000200002167e4 : ret 0x3073
0x000002000041a891 : ret 0x3074
0x000002000017e58e : ret 0x3075
0x0000020000030a1f : ret 0x308
0x00000200003eac59 : ret 0x30e3
0x000002000062a9fd : ret 0x30eb
0x00000200003e0990 : ret 0x30f
0x00000200001f2708 : ret 0x310
0x0000020000657868 : ret 0x3141
0x000002000009759b : ret 0x3148
0x000002000003130e : ret 0x3149
0x000002000013eb8d : ret 0x314c
0x000002000022ef76 : ret 0x3166
0x00000200000ec31d : ret 0x3174
0x00000200000cd58d : ret 0x3175
0x000002000075b844 : ret 0x319
0x00000200003cd89d : ret 0x32
0x00000200000a354d : ret 0x324
0x000002000009d9d3 : ret 0x3240
0x00000200000c6c98 : ret 0x3241
0x00000200001e620d : ret 0x3272
0x00000200001f274c : ret 0x3274
0x00000200004cd394 : ret 0x3275
0x0000020000198048 : ret 0x32e9
0x0000020000514e87 : ret 0x32ff
0x00000200001f0bc6 : ret 0x3302
0x000002000003cc17 : ret 0x3308
0x000002000012d70c : ret 0x3341
0x000002000007b74e : ret 0x3344
0x0000020000003b5f : ret 0x3345
0x00000200000a9c92 : ret 0x3348
0x00000200000a6ba5 : ret 0x3349
0x000002000007e61c : ret 0x334c
0x0000020000099b5c : ret 0x334d
0x00000200005ce6e2 : ret 0x335
0x00000200000074cb : ret 0x3364
0x00000200001f275b : ret 0x3366
0x0000020000213db8 : ret 0x3372
0x00000200000e66ef : ret 0x3373
0x000002000039c0af : ret 0x3374
0x00000200005f4a31 : ret 0x3375
0x00000200004209a0 : ret 0x33b
0x0000020000025ff6 : ret 0x33c3
0x0000020000676506 : ret 0x33eb
0x00000200003e5955 : ret 0x33ff
0x0000020000031de6 : ret 0x34
0x00000200000fb52d : ret 0x341
0x00000200001142d3 : ret 0x344
0x000002000013d1f6 : ret 0x345
0x000002000005ac27 : ret 0x3472
0x000002000007b81c : ret 0x3474
0x00000200000100d9 : ret 0x348
0x0000020000683e3e : ret 0x348d
0x0000020000053a3e : ret 0x349
0x0000020000409ddb : ret 0x34a
0x000002000006b403 : ret 0x34c
0x000002000006cbaf : ret 0x34d
0x00000200002148d5 : ret 0x3572
0x0000020000642173 : ret 0x3573
0x00000200006602d8 : ret 0x3574
0x0000020000040092 : ret 0x3575
0x00000200000b0541 : ret 0x357c
0x0000020000065dd8 : ret 0x35e9
0x00000200000d08ee : ret 0x3600
0x000002000003fbfb : ret 0x366
0x000002000003fbb4 : ret 0x3673
0x0000020000073d51 : ret 0x3674
0x000002000004a99e : ret 0x3678
0x0000020000177938 : ret 0x36e9
0x00000200006aabd1 : ret 0x372
0x00000200001c859d : ret 0x373
0x00000200001dd636 : ret 0x374
0x000002000068a070 : ret 0x375
0x00000200000e2cdc : ret 0x377
0x0000020000213fa2 : ret 0x3772
0x00000200006c7975 : ret 0x37ba
0x00000200006595af : ret 0x37c
0x000002000021ce9f : ret 0x37e8
0x00000200000a5cba : ret 0x37e9
0x00000200006d7e1c : ret 0x38
0x000002000002a6ea : ret 0x381
0x0000020000161676 : ret 0x3840
0x000002000058dd52 : ret 0x3843
0x000002000001535c : ret 0x3844
0x0000020000133491 : ret 0x3845
0x00000200002120e6 : ret 0x3848
0x00000200001beb42 : ret 0x3874
0x0000020000093b87 : ret 0x3875
0x00000200000a732f : ret 0x3876
0x00000200003c5ae0 : ret 0x388
0x00000200003cc7eb : ret 0x389
0x0000020000764296 : ret 0x38e8
0x000002000002afed : ret 0x38e9
0x00000200006305a3 : ret 0x38ff
0x00000200006a296e : ret 0x39
0x00000200006d0582 : ret 0x391
0x00000200000fee9d : ret 0x3910
0x00000200003d945d : ret 0x3941
0x00000200000197bc : ret 0x3944
0x0000020000022c23 : ret 0x3945
0x000002000002542a : ret 0x3948
0x00000200000926b8 : ret 0x3949
0x00000200000407cb : ret 0x394c
0x000002000012d1c6 : ret 0x3956
0x00000200004fa274 : ret 0x3960
0x00000200001397a4 : ret 0x3966
0x0000020000621fe1 : ret 0x3973
0x0000020000524877 : ret 0x3974
0x000002000049b184 : ret 0x3977
0x000002000020325e : ret 0x3983
0x0000020000423b4d : ret 0x39ff
0x0000020000517241 : ret 0x3a0
0x0000020000165c04 : ret 0x3a44
0x00000200005e2d5e : ret 0x3a73
0x00000200001c9511 : ret 0x3a75
0x00000200006d30ff : ret 0x3a76
0x0000020000133ad8 : ret 0x3a80
0x0000020000113870 : ret 0x3ab1
0x00000200004cadff : ret 0x3aff
0x000002000003cdc8 : ret 0x3b04
0x0000020000025caa : ret 0x3b05
0x00000200000398ee : ret 0x3b08
0x00000200005011b1 : ret 0x3b10
0x00000200001f6487 : ret 0x3b1c
0x00000200001ac87e : ret 0x3b24
0x000002000064e788 : ret 0x3b30
0x000002000001e8dc : ret 0x3b41
0x000002000013e53d : ret 0x3b44
0x0000020000016fb5 : ret 0x3b45
0x00000200000324ec : ret 0x3b48
0x0000020000012aea : ret 0x3b49
0x000002000000439a : ret 0x3b4c
0x0000020000059eef : ret 0x3b4d
0x00000200003a2ba5 : ret 0x3b4e
0x000002000003173a : ret 0x3b64
0x000002000003b1a8 : ret 0x3b66
0x00000200003fc482 : ret 0x3b73
0x00000200001f97f3 : ret 0x3b74
0x000002000073a21a : ret 0x3b76
0x00000200000971de : ret 0x3b77
0x0000020000017702 : ret 0x3b7e
0x000002000013cec1 : ret 0x3b88
0x000002000048e8aa : ret 0x3b9
0x000002000008357b : ret 0x3ba
0x000002000065285c : ret 0x3be0
0x0000020000085bdc : ret 0x3be9
0x000002000049ea2c : ret 0x3bf0
0x0000020000425514 : ret 0x3bff
0x00000200004e4c87 : ret 0x3c10
0x0000020000155815 : ret 0x3c7
0x00000200001f0a0c : ret 0x3c74
0x000002000060a7f3 : ret 0x3c75
0x000002000013934e : ret 0x3c80
0x0000020000683dc3 : ret 0x3c8d
0x00000200000380ea : ret 0x3ce4
0x000002000017790e : ret 0x3ce9
0x0000020000207f20 : ret 0x3ceb
0x000002000008f810 : ret 0x3d
0x0000020000007a6b : ret 0x3d48
0x0000020000155a72 : ret 0x3d7c
0x00000200005f67f1 : ret 0x3d80
0x000002000063c615 : ret 0x3d83
0x000002000017796c : ret 0x3de9
0x0000020000117b25 : ret 0x3e
0x0000020000108c8d : ret 0x3e00
0x00000200001bb281 : ret 0x3e77
0x0000020000025c7f : ret 0x3e8
0x000002000004f6c8 : ret 0x3eb
0x00000200004ccca4 : ret 0x3ee8
0x000002000017795f : ret 0x3ee9
0x0000020000125a5a : ret 0x3f
0x000002000008a9bc : ret 0x3f24
0x00000200003ffae2 : ret 0x3f73
0x000002000005c721 : ret 0x3f74
0x0000020000613d9c : ret 0x3f75
0x000002000022aa5c : ret 0x3f76
0x00000200004230a9 : ret 0x3f77
0x000002000043d0f5 : ret 0x3fc
0x0000020000177952 : ret 0x3fe9
0x00000200004247bc : ret 0x3ff
0x000002000062de74 : ret 0x3ffd
0x0000020000064af1 : ret 0x400
0x0000020000429f04 : ret 0x4002
0x00000200001fa712 : ret 0x4004
0x00000200001366d3 : ret 0x4008
0x0000020000423ac0 : ret 0x402
0x000002000069fdd1 : ret 0x405f
0x0000020000070b9f : ret 0x4072
0x000002000002a60c : ret 0x4075
0x0000020000788ba1 : ret 0x4078
0x00000200001526df : ret 0x40b9
0x0000020000124ada : ret 0x40c3
0x0000020000524b92 : ret 0x40c7
0x00000200001779ac : ret 0x40e9
0x00000200006a26ed : ret 0x40ed
0x0000020000008f1c : ret 0x40f6
0x000002000049b392 : ret 0x40ff
0x000002000022316c : ret 0x4101
0x00000200000f8abd : ret 0x4102
0x000002000002adc3 : ret 0x4104
0x00000200003d1fb1 : ret 0x4105
0x0000020000101d7b : ret 0x4106
0x000002000001062e : ret 0x4108
0x00000200001faa07 : ret 0x410c
0x000002000020038c : ret 0x410f
0x0000020000005607 : ret 0x4110
0x00000200001e7a32 : ret 0x4113
0x00000200003995d7 : ret 0x4114
0x00000200003bd1e5 : ret 0x4118
0x000002000022879e : ret 0x411a
0x000002000004a40f : ret 0x411f
0x0000020000215c0e : ret 0x4120
0x00000200000c940f : ret 0x4123
0x00000200006398e8 : ret 0x4125
0x00000200003e52d5 : ret 0x4128
0x000002000002f370 : ret 0x412b
0x00000200001f06bd : ret 0x4130
0x0000020000620826 : ret 0x4131
0x00000200000f18e0 : ret 0x4138
0x0000020000544ca3 : ret 0x413f
0x00000200000550fd : ret 0x4140
0x0000020000218427 : ret 0x4160
0x000002000002183b : ret 0x4166
0x00000200005fe0ee : ret 0x4172
0x00000200003c9775 : ret 0x4177
0x000002000001e7f2 : ret 0x417c
0x00000200003a683a : ret 0x4189
0x00000200006c5348 : ret 0x418b
0x0000020000133a94 : ret 0x418d
0x000002000074ca9b : ret 0x4199
0x00000200000f1828 : ret 0x41c3
0x0000020000133cec : ret 0x41c9
0x0000020000422e53 : ret 0x41d0
0x00000200001f3569 : ret 0x41e0
0x00000200000f0591 : ret 0x41e8
0x00000200004944b1 : ret 0x41e9
0x0000020000085fb7 : ret 0x41f0
0x0000020000644017 : ret 0x41f1
0x0000020000127e43 : ret 0x41f2
0x000002000016f6bd : ret 0x41fc
0x0000020000430248 : ret 0x41fe
0x0000020000420d83 : ret 0x41ff
0x0000020000010fe8 : ret 0x420f
0x00000200003f574c : ret 0x4210
0x000002000048c57e : ret 0x423b
0x00000200005a872b : ret 0x425
0x000002000042606d : ret 0x4266
0x0000020000058190 : ret 0x4289
0x000002000001637a : ret 0x428d
0x0000020000074e28 : ret 0x42e8
0x00000200001763f9 : ret 0x433a
0x00000200003a41ae : ret 0x4366
0x00000200004da5c9 : ret 0x4374
0x00000200005785c2 : ret 0x4387
0x00000200000bc534 : ret 0x4388
0x0000020000029c01 : ret 0x4389
0x000002000060e85e : ret 0x438b
0x000002000049e93d : ret 0x43ba
0x000002000005e473 : ret 0x43c
0x00000200000a9ed4 : ret 0x43c7
0x000002000066547b : ret 0x43e8
0x000002000039d8aa : ret 0x43f7
0x00000200001dce88 : ret 0x44
0x0000020000577cd6 : ret 0x4401
0x00000200001356db : ret 0x4402
0x000002000002ad77 : ret 0x4404
0x00000200000e8273 : ret 0x4406
0x000002000012fda5 : ret 0x4407
0x0000020000052c8f : ret 0x4408
0x000002000007b6fe : ret 0x4409
0x000002000001916b : ret 0x440c
0x00000200000ffaf5 : ret 0x440f
0x00000200003b7070 : ret 0x4410
0x000002000007b713 : ret 0x4413
0x000002000050df44 : ret 0x4414
0x000002000001f0cd : ret 0x4418
0x000002000013dbe9 : ret 0x441a
0x00000200001ac77c : ret 0x4424
0x00000200003c3e94 : ret 0x4428
0x0000020000028fcb : ret 0x4432
0x0000020000472b9f : ret 0x4438
0x00000200000085f0 : ret 0x4440
0x0000020000074dca : ret 0x4456
0x000002000003cbec : ret 0x4466
0x0000020000054c86 : ret 0x4470
0x000002000000a9ee : ret 0x4475
0x00000200002121e0 : ret 0x4476
0x000002000001cd4b : ret 0x4488
0x000002000000e246 : ret 0x4489
0x00000200003db8c2 : ret 0x448b
0x00000200000238fa : ret 0x44b
0x0000020000165554 : ret 0x44ba
0x0000020000117dbe : ret 0x44c3
0x00000200001844ee : ret 0x44c6
0x00000200000991e5 : ret 0x44c7
0x00000200006c472a : ret 0x44d
0x00000200001c5752 : ret 0x44e8
0x000002000000ad0e : ret 0x44f0
0x0000020000441e26 : ret 0x44f4
0x0000020000442248 : ret 0x44f8
0x0000020000424365 : ret 0x44ff
0x00000200001a0bbc : ret 0x45
0x000002000040611e : ret 0x450
0x000002000021a90b : ret 0x4502
0x00000200004409a7 : ret 0x4503
0x00000200000461c3 : ret 0x4504
0x00000200003b6fac : ret 0x4507
0x000002000000bde3 : ret 0x4508
0x000002000001b471 : ret 0x4509
0x00000200000171bd : ret 0x450f
0x0000020000203d00 : ret 0x4510
0x000002000010e7be : ret 0x4511
0x000002000069ae02 : ret 0x4512
0x000002000007b781 : ret 0x4513
0x000002000000be09 : ret 0x4518
0x000002000013dc1b : ret 0x451a
0x000002000041f1eb : ret 0x4520
0x0000020000176a73 : ret 0x4528
0x000002000017cec8 : ret 0x4540
0x000002000013dc29 : ret 0x4541
0x00000200005e0d40 : ret 0x454c
0x0000020000438f72 : ret 0x4560
0x00000200007653cd : ret 0x4564
0x00000200000986bb : ret 0x4566
0x0000020000003767 : ret 0x4574
0x00000200004c1abf : ret 0x4575
0x00000200000300d5 : ret 0x4588
0x0000020000006925 : ret 0x4589
0x00000200001041ab : ret 0x458b
0x00000200001d1c69 : ret 0x458d
0x0000020000069f6f : ret 0x45c3
0x000002000020bd39 : ret 0x45c6
0x00000200004aea4c : ret 0x45c7
0x00000200000b25b7 : ret 0x45f0
0x0000020000414e87 : ret 0x45ff
0x00000200000f1e3f : ret 0x460f
0x00000200003f9e56 : ret 0x4675
0x000002000009d9db : ret 0x4688
0x0000020000009363 : ret 0x470f
0x0000020000677867 : ret 0x472
0x00000200001bb1d3 : ret 0x473
0x00000200000e8624 : ret 0x474
0x0000020000134f58 : ret 0x475
0x00000200000790a8 : ret 0x476
0x000002000067e358 : ret 0x4766
0x0000020000648a0b : ret 0x477
0x0000020000621fd3 : ret 0x4773
0x00000200001a368e : ret 0x4777
0x00000200006b7df2 : ret 0x4779
0x00000200003d90a3 : ret 0x478
0x0000020000584dc1 : ret 0x4788
0x00000200000e2c46 : ret 0x4789
0x000002000040c288 : ret 0x478b
0x00000200000ace8f : ret 0x47c7
0x000002000018d771 : ret 0x47e9
0x00000200001b4474 : ret 0x47eb
0x00000200005381f2 : ret 0x4801
0x00000200000125f1 : ret 0x4802
0x000002000020594a : ret 0x4803
0x000002000001ebf3 : ret 0x4804
0x0000020000160f6b : ret 0x4806
0x00000200003f7ec7 : ret 0x4807
0x000002000002287d : ret 0x4808
0x000002000013dacf : ret 0x480b
0x00000200000ed201 : ret 0x480c
0x00000200007741d1 : ret 0x480d
0x000002000000f8e2 : ret 0x4810
0x000002000010d719 : ret 0x4811
0x000002000007b72d : ret 0x4813
0x000002000048cb28 : ret 0x4814
0x0000020000126e97 : ret 0x4818
0x00000200001f8dca : ret 0x481f
0x00000200001f988f : ret 0x4820
0x000002000003de52 : ret 0x4824
0x000002000040e634 : ret 0x4825
0x0000020000038256 : ret 0x4828
0x00000200003a568f : ret 0x482b
0x0000020000594e16 : ret 0x482c
0x000002000003de7d : ret 0x4830
0x000002000003de9a : ret 0x4838
0x000002000003deb7 : ret 0x4840
0x0000020000786ad6 : ret 0x4841
0x000002000019e441 : ret 0x4848
0x00000200003feb90 : ret 0x484c
0x00000200000672a4 : ret 0x4850
0x00000200001f6bb3 : ret 0x4858
0x00000200000baf63 : ret 0x4864
0x0000020000054532 : ret 0x4865
0x000002000063ddc8 : ret 0x4868
0x000002000003ded7 : ret 0x4870
0x0000020000027320 : ret 0x4874
0x0000020000126915 : ret 0x4877
0x000002000002ef87 : ret 0x4878
0x00000200001fe2ed : ret 0x4880
0x000002000008eb9b : ret 0x488b
0x00000200001a97e3 : ret 0x488d
0x000002000015aeee : ret 0x489a
0x00000200001c1949 : ret 0x48b
0x00000200000234c4 : ret 0x48c3
0x00000200003e3606 : ret 0x48cc
0x00000200001e824a : ret 0x48d
0x00000200005d9582 : ret 0x48d8
0x0000020000031b02 : ret 0x48e0
0x00000200006347b6 : ret 0x48e8
0x00000200000390d1 : ret 0x48e9
0x0000020000067a88 : ret 0x48f0
0x00000200001f7bcd : ret 0x48f3
0x00000200000db94b : ret 0x48f8
0x00000200003da684 : ret 0x48ff
0x000002000014a9b7 : ret 0x4901
0x000002000010fac9 : ret 0x4902
0x000002000010fad6 : ret 0x4903
0x00000200000f17ed : ret 0x4904
0x00000200003a420c : ret 0x4906
0x00000200001bae62 : ret 0x4907
0x0000020000020b54 : ret 0x4908
0x000002000040aaad : ret 0x4909
0x000002000040e382 : ret 0x490c
0x00000200003ed394 : ret 0x490f
0x0000020000079539 : ret 0x4910
0x000002000017f5a8 : ret 0x4913
0x0000020000024aa4 : ret 0x4918
0x00000200006574f0 : ret 0x491f
0x00000200001340a6 : ret 0x4920
0x00000200001ac9c6 : ret 0x4924
0x000002000004e2d5 : ret 0x4925
0x000002000002c594 : ret 0x4928
0x0000020000011982 : ret 0x4930
0x000002000040fe93 : ret 0x4938
0x00000200001ee590 : ret 0x4940
0x000002000010e32a : ret 0x4942
0x00000200003a38ef : ret 0x4948
0x00000200004f9463 : ret 0x4958
0x000002000078238f : ret 0x4974
0x00000200007625ae : ret 0x4975
0x0000020000597c5a : ret 0x4977
0x000002000002f0fa : ret 0x4978
0x00000200000203ca : ret 0x4980
0x0000020000492d71 : ret 0x4981
0x00000200001dba15 : ret 0x498a
0x0000020000072e54 : ret 0x49c3
0x0000020000022bb1 : ret 0x49f0
0x000002000013ce47 : ret 0x49f8
0x00000200004302ec : ret 0x49fe
0x00000200004241d6 : ret 0x49ff
0x000002000011ef27 : ret 0x4a0
0x00000200006818b8 : ret 0x4a02
0x00000200001e3719 : ret 0x4a08
0x00000200001ed633 : ret 0x4a10
0x000002000001dcfa : ret 0x4a7
0x000002000006308a : ret 0x4a74
0x00000200001615f8 : ret 0x4a75
0x0000020000436f8d : ret 0x4a77
0x00000200000ea7d4 : ret 0x4a8
0x000002000018af49 : ret 0x4a8d
0x000002000007f8e0 : ret 0x4ae8
0x00000200003f4732 : ret 0x4aff
0x00000200003a8649 : ret 0x4b02
0x000002000004609b : ret 0x4b8b
0x0000020000041d88 : ret 0x4b8d
0x000002000020743e : ret 0x4b96
0x000002000005b6ca : ret 0x4ba
0x000002000015a9f7 : ret 0x4bba
0x00000200001d3bfa : ret 0x4beb
0x000002000050326c : ret 0x4bf
0x00000200001ab41b : ret 0x4bf0
0x000002000048c9a4 : ret 0x4bff
0x00000200006449b5 : ret 0x4c01
0x000002000017c57c : ret 0x4c02
0x0000020000190be0 : ret 0x4c04
0x000002000020ffb1 : ret 0x4c07
0x0000020000015eee : ret 0x4c08
0x000002000068d855 : ret 0x4c0b
0x000002000072bb82 : ret 0x4c0d
0x00000200000b0af4 : ret 0x4c0f
0x000002000003ee90 : ret 0x4c10
0x0000020000437544 : ret 0x4c18
0x0000020000643db1 : ret 0x4c1c
0x00000200006ad7fd : ret 0x4c1f
0x0000020000428bc4 : ret 0x4c20
0x00000200000efb49 : ret 0x4c25
0x0000020000215c45 : ret 0x4c28
0x000002000003eaa5 : ret 0x4c30
0x0000020000193d43 : ret 0x4c40
0x000002000015d912 : ret 0x4c50
0x00000200000155d2 : ret 0x4c65
0x0000020000121f98 : ret 0x4c68
0x00000200001e43a1 : ret 0x4c70
0x0000020000204f30 : ret 0x4c74
0x00000200003b5501 : ret 0x4c75
0x00000200000971cd : ret 0x4c77
0x00000200001efe73 : ret 0x4c78
0x00000200001d96b8 : ret 0x4c88
0x000002000011edf9 : ret 0x4c89
0x0000020000687a27 : ret 0x4c8a
0x00000200000361ac : ret 0x4cc3
0x000002000001b6fa : ret 0x4cd
0x0000020000029114 : ret 0x4cd0
0x000002000010962e : ret 0x4ce0
0x0000020000515a3f : ret 0x4ce8
0x00000200000ee0a7 : ret 0x4ce9
0x0000020000065b02 : ret 0x4cf0
0x0000020000178f6e : ret 0x4cf8
0x00000200004247e7 : ret 0x4cff
0x0000020000190da8 : ret 0x4d0
0x0000020000033c4b : ret 0x4d02
0x000002000010fb4d : ret 0x4d03
0x0000020000218e47 : ret 0x4d04
0x00000200001f830f : ret 0x4d07
0x0000020000097b51 : ret 0x4d08
0x00000200001a6f9c : ret 0x4d10
0x0000020000696284 : ret 0x4d18
0x000002000074df02 : ret 0x4d20
0x000002000062ad7d : ret 0x4d30
0x00000200004ea863 : ret 0x4d38
0x0000020000066fe8 : ret 0x4d60
0x000002000020d71b : ret 0x4d73
0x0000020000016fc2 : ret 0x4d74
0x00000200001c9595 : ret 0x4d75
0x0000020000024b45 : ret 0x4d76
0x00000200006493d7 : ret 0x4d77
0x0000020000050bd4 : ret 0x4d89
0x000002000057aef5 : ret 0x4d8b
0x00000200003e0f68 : ret 0x4dc3
0x000002000001431a : ret 0x4de
0x0000020000647868 : ret 0x4de0
0x000002000013c62c : ret 0x4de9
0x0000020000097eda : ret 0x4df0
0x0000020000228532 : ret 0x4df8
0x0000020000498025 : ret 0x4dff
0x00000200001bf308 : ret 0x4e
0x0000020000180f46 : ret 0x4e5
0x000002000065b12b : ret 0x4e6d
0x00000200006600d0 : ret 0x4e74
0x000002000064f630 : ret 0x4eb
0x000002000003b585 : ret 0x4f02
0x000002000013ebb3 : ret 0x4f05
0x000002000003ffe9 : ret 0x4f0f
0x00000200004ff13a : ret 0x4f3
0x000002000050138f : ret 0x4f72
0x00000200001d3da0 : ret 0x4f73
0x000002000021409a : ret 0x4f8b
0x000002000002b02f : ret 0x4fe9
0x000002000009b945 : ret 0x500
0x00000200001f1c6a : ret 0x5073
0x00000200001d3bf5 : ret 0x5076
0x00000200000de21a : ret 0x5077
0x00000200001e8a7f : ret 0x508d
0x000002000010d282 : ret 0x50e9
0x00000200003fb496 : ret 0x513b
0x00000200001d73a3 : ret 0x5175
0x00000200001a362e : ret 0x5177
0x00000200000aa84e : ret 0x5189
0x00000200000203d6 : ret 0x518b
0x000002000050a039 : ret 0x518d
0x00000200001aafb8 : ret 0x521
0x00000200003a4d99 : ret 0x524
0x00000200004baa11 : ret 0x5273
0x0000020000020d68 : ret 0x5274
0x00000200005268b8 : ret 0x528b
0x0000020000132885 : ret 0x5338
0x00000200001a34c4 : ret 0x533b
0x00000200006c2ac7 : ret 0x5340
0x0000020000020302 : ret 0x536
0x000002000005c72b : ret 0x5375
0x00000200006b3c64 : ret 0x5376
0x0000020000106283 : ret 0x538
0x00000200004e5858 : ret 0x5389
0x00000200001e79ab : ret 0x538d
0x00000200004cb093 : ret 0x53b
0x000002000019ed14 : ret 0x53e9
0x00000200003c94f7 : ret 0x5474
0x000002000004e514 : ret 0x548
0x0000020000017ffe : ret 0x5489
0x0000020000632ac7 : ret 0x553b
0x000002000003db63 : ret 0x5574
0x00000200001bbd2f : ret 0x5577
0x00000200001c77ff : ret 0x5588
0x00000200000b0d12 : ret 0x5589
0x000002000008b296 : ret 0x558b
0x000002000060e5de : ret 0x558d
0x0000020000185d46 : ret 0x55c
0x00000200000df19f : ret 0x5674
0x0000020000134f92 : ret 0x5675
0x000002000006cc91 : ret 0x5688
0x000002000018c51d : ret 0x568d
0x00000200001dae1a : ret 0x56e
0x00000200006a294d : ret 0x56fa
0x00000200003a4e36 : ret 0x57
0x000002000063b664 : ret 0x570
0x0000020000089459 : ret 0x573
0x0000020000019036 : ret 0x574
0x0000020000031c01 : ret 0x575
0x0000020000586ff5 : ret 0x576
0x00000200000409f2 : ret 0x577
0x00000200000667b6 : ret 0x5774
0x00000200001333c4 : ret 0x5775
0x0000020000053f71 : ret 0x5788
0x00000200001e486a : ret 0x578b
0x00000200001c655d : ret 0x57d
0x00000200001e855e : ret 0x587
0x0000020000684bfc : ret 0x5872
0x00000200001faa3a : ret 0x5874
0x00000200005d68a8 : ret 0x588
0x000002000019f027 : ret 0x589
0x00000200004067ca : ret 0x58b
0x0000020000533c7e : ret 0x58e8
0x00000200004361e1 : ret 0x59
0x000002000010407a : ret 0x5974
0x00000200006b6ecb : ret 0x5975
0x0000020000732ee2 : ret 0x598d
0x00000200004133b5 : ret 0x59e9
0x0000020000118306 : ret 0x59f
0x000002000041a867 : ret 0x5a74
0x00000200001f3a1c : ret 0x5a8d
0x000002000012fe19 : ret 0x5aba
0x00000200006273b4 : ret 0x5ae8
0x000002000012d1c3 : ret 0x5b05
0x00000200000f3dfa : ret 0x5b6
0x000002000059456b : ret 0x5b73
0x00000200001dbd8f : ret 0x5ba
0x0000020000739c09 : ret 0x5bb
0x00000200000f45ff : ret 0x5be8
0x00000200004b4f08 : ret 0x5bfd
0x0000020000617fae : ret 0x5c03
0x0000020000508bc9 : ret 0x5c38
0x0000020000009f5c : ret 0x5c75
0x0000020000065b20 : ret 0x5c76
0x00000200004bb39b : ret 0x5c77
0x0000020000680533 : ret 0x5c89
0x00000200006a3126 : ret 0x5ccb
0x00000200005aa1bc : ret 0x5ce9
0x00000200003bafee : ret 0x5d00
0x000002000009c7c4 : ret 0x5d8d
0x0000020000217a7a : ret 0x5dc5
0x00000200001648bc : ret 0x5de9
0x000002000072c616 : ret 0x5deb
0x000002000052ef56 : ret 0x5e72
0x0000020000541a00 : ret 0x5e75
0x000002000017f21e : ret 0x5e9
0x000002000011168e : ret 0x5ea
0x000002000044cc2f : ret 0x5eb
0x00000200000216ce : ret 0x5f6
0x00000200006c4d87 : ret 0x5f7
0x000002000021e583 : ret 0x5f72
0x00000200004cbec7 : ret 0x5f77
0x000002000062c152 : ret 0x5f89
0x000002000004b18c : ret 0x5fb8
0x000002000065a506 : ret 0x5ff
0x0000020000069c30 : ret 0x600
0x00000200004cca4c : ret 0x6000
0x00000200001efa0c : ret 0x6020
0x000002000011f283 : ret 0x6072
0x0000020000417b2b : ret 0x607e
0x00000200003c4312 : ret 0x6083
0x0000020000610696 : ret 0x60a
0x000002000011a874 : ret 0x60e9
0x00000200001eda6a : ret 0x610
0x000002000022d49c : ret 0x6173
0x00000200001f97cd : ret 0x6174
0x00000200005c29fa : ret 0x61e9
0x0000020000022b9f : ret 0x624
0x0000020000594b34 : ret 0x6272
0x00000200004a7b06 : ret 0x6275
0x00000200006c294f : ret 0x62ba
0x0000020000621288 : ret 0x62e8
0x000002000020b625 : ret 0x62e9
0x0000020000038b3c : ret 0x6348
0x0000020000215efc : ret 0x6349
0x0000020000030277 : ret 0x63e8
0x0000020000678954 : ret 0x6472
0x000002000004d212 : ret 0x6474
0x00000200001c1b7f : ret 0x6483
0x00000200001099e6 : ret 0x650
0x00000200001eec08 : ret 0x6583
0x00000200005223d0 : ret 0x65e9
0x0000020000108490 : ret 0x65f
0x00000200000410ff : ret 0x65fe
0x000002000048d4c1 : ret 0x65ff
0x000002000001846c : ret 0x6602
0x00000200003a41c2 : ret 0x6604
0x000002000010b096 : ret 0x6607
0x000002000008b0b3 : ret 0x6608
0x00000200000bfaa3 : ret 0x6610
0x00000200003f363d : ret 0x6618
0x0000020000647fbd : ret 0x6620
0x0000020000583a0a : ret 0x6622
0x0000020000133879 : ret 0x6630
0x0000020000024859 : ret 0x6675
0x00000200003b4836 : ret 0x66b
0x0000020000665b9e : ret 0x66ba
0x00000200001f62b8 : ret 0x66c3
0x000002000052d785 : ret 0x66ff
0x00000200004016ad : ret 0x672
0x0000020000074fc8 : ret 0x673
0x0000020000416642 : ret 0x674
0x00000200000ec2df : ret 0x675
0x0000020000619885 : ret 0x676
0x000002000022402e : ret 0x677
0x000002000056d4d5 : ret 0x6775
0x0000020000423066 : ret 0x6777
0x00000200000fe30f : ret 0x67e8
0x0000020000448b76 : ret 0x68
0x0000020000652e49 : ret 0x6875
0x0000020000683e5a : ret 0x6876
0x0000020000462be9 : ret 0x6877
0x0000020000007ba3 : ret 0x688
0x00000200000bfb57 : ret 0x68e9
0x00000200003d59da : ret 0x691
0x0000020000666654 : ret 0x692d
0x0000020000068bda : ret 0x693
0x0000020000006fb1 : ret 0x6948
0x0000020000065070 : ret 0x694c
0x00000200001eecff : ret 0x694d
0x000002000067a68a : ret 0x6972
0x00000200006a98a9 : ret 0x6975
0x00000200001b3ffb : ret 0x6980
0x000002000041275d : ret 0x69e8
0x000002000002172f : ret 0x69e9
0x00000200006c8570 : ret 0x6a
0x00000200000188b1 : ret 0x6a73
0x000002000039ef83 : ret 0x6a7f
0x00000200006aa634 : ret 0x6a93
0x00000200005a9328 : ret 0x6ae9
0x00000200003ed2c1 : ret 0x6b44
0x00000200005d3431 : ret 0x6b45
0x000002000004e529 : ret 0x6b48
0x000002000012930a : ret 0x6b4c
0x000002000010df9c : ret 0x6b4d
0x00000200003f1ba2 : ret 0x6b75
0x000002000060e2f4 : ret 0x6ba
0x0000020000040bbd : ret 0x6be9
0x00000200002231ee : ret 0x6beb
0x000002000003c212 : ret 0x6c20
0x000002000062d359 : ret 0x6c89
0x00000200000fdf9c : ret 0x6ca
0x00000200004891fe : ret 0x6cba
0x00000200005cb16e : ret 0x6d5
0x00000200000257bd : ret 0x6d74
0x000002000007b547 : ret 0x6d76
0x00000200000e1bfa : ret 0x6d8
0x000002000062f925 : ret 0x6de8
0x00000200004e7550 : ret 0x6e72
0x0000020000524432 : ret 0x6e9
0x0000020000024737 : ret 0x6f74
0x00000200004bb4dc : ret 0x6f75
0x000002000040edbb : ret 0x6f77
0x00000200003c8d84 : ret 0x6f89
0x00000200003e9a3d : ret 0x700
0x000002000007ed16 : ret 0x7000
0x00000200000fdc42 : ret 0x7210
0x0000020000132c5c : ret 0x723
0x0000020000008b47 : ret 0x724
0x0000020000038c78 : ret 0x7274
0x00000200001d0540 : ret 0x72e8
0x0000020000195ea2 : ret 0x733
0x00000200000b8b0d : ret 0x7375
0x00000200001a35ac : ret 0x7377
0x0000020000562197 : ret 0x73e8
0x0000020000085b9b : ret 0x73e9
0x00000200006b6c92 : ret 0x73ff
0x00000200000eeb27 : ret 0x7400
0x0000020000027ca5 : ret 0x7401
0x00000200000722a1 : ret 0x7402
0x000002000003fded : ret 0x7403
0x000002000000a4bd : ret 0x7404
0x0000020000148e18 : ret 0x7406
0x0000020000134e97 : ret 0x7407
0x00000200001636bd : ret 0x7408
0x000002000006b150 : ret 0x740f
0x000002000003ccf2 : ret 0x7410
0x000002000047cbc5 : ret 0x7414
0x000002000016055c : ret 0x741e
0x000002000003fe69 : ret 0x7420
0x00000200001b9468 : ret 0x7432
0x000002000021aa8c : ret 0x7440
0x0000020000046677 : ret 0x7455
0x000002000048828c : ret 0x7470
0x0000020000170dc1 : ret 0x7489
0x00000200003e8a86 : ret 0x74e8
0x00000200005e0a77 : ret 0x74ff
0x000002000012085c : ret 0x7501
0x000002000000ac64 : ret 0x7502
0x000002000001c0f7 : ret 0x7503
0x0000020000059f73 : ret 0x7504
0x0000020000148e31 : ret 0x7506
0x000002000006cd31 : ret 0x7507
0x0000020000022b96 : ret 0x7508
0x000002000007ef5f : ret 0x750c
0x000002000006bb52 : ret 0x750f
0x00000200000328e7 : ret 0x7510
0x0000020000029ab1 : ret 0x751e
0x000002000003bc22 : ret 0x7520
0x000002000020d459 : ret 0x7530
0x00000200005d5721 : ret 0x7539
0x00000200001f4576 : ret 0x753f
0x000002000007e721 : ret 0x7540
0x00000200000b6ef2 : ret 0x7542
0x000002000062e8f0 : ret 0x7573
0x000002000064a2b5 : ret 0x75bf
0x00000200000b5b04 : ret 0x75e9
0x00000200000c6a48 : ret 0x75f0
0x0000020000407dfe : ret 0x75fe
0x00000200001cb93e : ret 0x75ff
0x0000020000642545 : ret 0x7675
0x00000200000107ea : ret 0x7677
0x00000200000eb634 : ret 0x767d
0x0000020000186b5a : ret 0x76ba
0x000002000012c2fe : ret 0x76c
0x00000200006b4934 : ret 0x76ff
0x00000200006438f4 : ret 0x7701
0x000002000061bc09 : ret 0x772
0x00000200001faeb6 : ret 0x773
0x000002000008a678 : ret 0x774
0x000002000000c980 : ret 0x775
0x00000200004e4ef2 : ret 0x777
0x00000200000247da : ret 0x7774
0x00000200001a2d55 : ret 0x778d
0x0000020000648f61 : ret 0x77c
0x00000200004d147a : ret 0x77e
0x0000020000134f3d : ret 0x77e9
0x000002000004aba2 : ret 0x7878
0x000002000039a382 : ret 0x7883
0x00000200001e324c : ret 0x789
0x0000020000149942 : ret 0x78e9
0x0000020000790d34 : ret 0x7905
0x0000020000791230 : ret 0x7916
0x00000200000704e0 : ret 0x7972
0x00000200000ef355 : ret 0x7983
0x000002000073553b : ret 0x798d
0x00000200003a7b56 : ret 0x7a
0x00000200001f3adb : ret 0x7a8d
0x000002000017c078 : ret 0x7ae9
0x0000020000524302 : ret 0x7b80
0x0000020000762ae7 : ret 0x7b8d
0x000002000060dfca : ret 0x7ba
0x0000020000106697 : ret 0x7be8
0x00000200000edb48 : ret 0x7c77
0x00000200000cee1a : ret 0x7c80
0x00000200000196d1 : ret 0x7c81
0x000002000011c749 : ret 0x7c89
0x0000020000159ad2 : ret 0x7ce9
0x00000200002179f9 : ret 0x7d
0x000002000004868a : ret 0x7d8
0x0000020000113ac6 : ret 0x7d80
0x000002000011c594 : ret 0x7d89
0x0000020000501401 : ret 0x7e72
0x00000200001d3af3 : ret 0x7e8d
0x000002000009f613 : ret 0x7e9
0x00000200004792f8 : ret 0x7ee8
0x000002000017879e : ret 0x7f1
0x00000200001cc705 : ret 0x7f24
0x0000020000439ac1 : ret 0x7fa8
0x00000200000d456d : ret 0x7ffe
0x00000200006290ca : ret 0x7fff
0x0000020000166e82 : ret 0x80
0x000002000022303a : ret 0x8001
0x00000200001a5d86 : ret 0x8018
0x00000200004279e2 : ret 0x8020
0x0000020000404166 : ret 0x8024
0x00000200001c0a39 : ret 0x8025
0x0000020000513f62 : ret 0x8028
0x000002000013878f : ret 0x8041
0x000002000040185c : ret 0x8042
0x00000200006ca961 : ret 0x8068
0x00000200000eb882 : ret 0x808b
0x00000200000365a5 : ret 0x80ba
0x000002000057af9a : ret 0x80ff
0x000002000021e0a4 : ret 0x8102
0x00000200000dbba8 : ret 0x8108
0x0000020000084c84 : ret 0x813b
0x00000200000b5b69 : ret 0x8141
0x000002000049c4b4 : ret 0x8142
0x0000020000094900 : ret 0x8148
0x0000020000004f7d : ret 0x8149
0x00000200004397c6 : ret 0x8188
0x0000020000014073 : ret 0x8189
0x00000200001c0e36 : ret 0x818a
0x000002000075c05c : ret 0x81c3
0x000002000020f84f : ret 0x81f0
0x0000020000606533 : ret 0x81fe
0x000002000003e5ca : ret 0x820
0x000002000001913a : ret 0x820f
0x000002000039b622 : ret 0x824
0x000002000044d082 : ret 0x82eb
0x0000020000232107 : ret 0x830
0x000002000012b20b : ret 0x8302
0x000002000048bacc : ret 0x8303
0x0000020000477f59 : ret 0x8304
0x000002000013dffd : ret 0x8307
0x000002000012b208 : ret 0x8308
0x0000020000415ee8 : ret 0x8309
0x0000020000176a63 : ret 0x830c
0x00000200000032a1 : ret 0x830f
0x000002000002f5ff : ret 0x8310
0x0000020000129cab : ret 0x8318
0x0000020000064fe8 : ret 0x8320
0x0000020000699096 : ret 0x8328
0x0000020000224e63 : ret 0x8331
0x000002000022edbb : ret 0x833b
0x0000020000672280 : ret 0x8340
0x000002000000a044 : ret 0x8341
0x00000200000085d2 : ret 0x8348
0x000002000001062b : ret 0x8349
0x000002000018ef99 : ret 0x834a
0x00000200000177bc : ret 0x8366
0x00000200000f12f9 : ret 0x8372
0x000002000002b3e8 : ret 0x8373
0x00000200000e0bf2 : ret 0x8386
0x000002000004c669 : ret 0x8388
0x000002000004bc59 : ret 0x8389
0x000002000010a597 : ret 0x838b
0x00000200000508a1 : ret 0x83c3
0x0000020000230d19 : ret 0x83c8
0x000002000074b4c6 : ret 0x83f0
0x000002000013d356 : ret 0x83f8
0x0000020000445b16 : ret 0x83fe
0x00000200003da735 : ret 0x83ff
0x0000020000007b51 : ret 0x840f
0x000002000074bf3c : ret 0x8440
0x00000200001d7b3c : ret 0x8444
0x00000200000700be : ret 0x8445
0x00000200006a2d05 : ret 0x8451
0x00000200000e66cf : ret 0x8488
0x00000200003cd9f4 : ret 0x8489
0x00000200001c65b1 : ret 0x848b
0x00000200006201a4 : ret 0x84c7
0x00000200003f1821 : ret 0x84ff
0x0000020000133881 : ret 0x8502
0x00000200001fa5cd : ret 0x8504
0x0000020000087493 : ret 0x850f
0x00000200004c3505 : ret 0x8541
0x00000200006b48ba : ret 0x8544
0x0000020000065bc6 : ret 0x8545
0x000002000001e5ea : ret 0x8548
0x000002000008bfa2 : ret 0x8549
0x000002000004a90b : ret 0x854d
0x000002000004fa28 : ret 0x8566
0x00000200004641df : ret 0x8573
0x000002000001e7dd : ret 0x8578
0x00000200000f31c6 : ret 0x8589
0x00000200000407ff : ret 0x85c3
0x0000020000049dca : ret 0x85d
0x00000200001122b7 : ret 0x85e9
0x000002000042180d : ret 0x85ff
0x000002000050f784 : ret 0x860
0x0000020000005b44 : ret 0x860f
0x00000200000d45e4 : ret 0x862b
0x000002000009afc8 : ret 0x8686
0x00000200000d476f : ret 0x86c6
0x0000020000005afd : ret 0x870f
0x0000020000213f73 : ret 0x873
0x0000020000003781 : ret 0x874
0x000002000051ac06 : ret 0x8748
0x000002000011c157 : ret 0x875
0x00000200005c5c23 : ret 0x877
0x0000020000003d88 : ret 0x8786
0x00000200000e9914 : ret 0x8789
0x00000200003cd78a : ret 0x879
0x00000200000f3baa : ret 0x87eb
0x000002000005c7ec : ret 0x88
0x0000020000066d0f : ret 0x8808
0x00000200003ffd54 : ret 0x8840
0x0000020000029964 : ret 0x8841
0x00000200000c96f7 : ret 0x8844
0x0000020000508bed : ret 0x885
0x000002000021205f : ret 0x8864
0x0000020000509564 : ret 0x888
0x00000200001ab930 : ret 0x888b
0x0000020000040c59 : ret 0x88b
0x00000200005cd83e : ret 0x88e8
0x0000020000514d73 : ret 0x88ff
0x000002000046011b : ret 0x8902
0x000002000022e7ee : ret 0x890d
0x00000200004601e1 : ret 0x8912
0x0000020000516212 : ret 0x8928
0x000002000002c1b9 : ret 0x8941
0x000002000002122b : ret 0x8944
0x000002000003261f : ret 0x8945
0x00000200006b5319 : ret 0x8946
0x000002000009c7ff : ret 0x8948
0x0000020000004f90 : ret 0x8949
0x000002000008afa1 : ret 0x894a
0x00000200004e4d65 : ret 0x894b
0x0000020000004c41 : ret 0x894c
0x0000020000017c1f : ret 0x894d
0x000002000003643a : ret 0x8966
0x000002000039d651 : ret 0x89f0
0x000002000001e227 : ret 0x89ff
0x00000200001f98e7 : ret 0x8a04
0x000002000077db52 : ret 0x8a2c
0x00000200004f7ef6 : ret 0x8a40
0x0000020000065b88 : ret 0x8a41
0x00000200005f3763 : ret 0x8a42
0x000002000001d418 : ret 0x8a44
0x000002000004f56b : ret 0x8a45
0x00000200005f38b2 : ret 0x8a46
0x00000200000488a9 : ret 0x8a80
0x00000200003b99f2 : ret 0x8aa3
0x000002000040102b : ret 0x8ac3
0x000002000048e3c7 : ret 0x8aff
0x000002000021dff7 : ret 0x8b02
0x00000200002150e0 : ret 0x8b04
0x0000020000019114 : ret 0x8b08
0x000002000072bb1d : ret 0x8b0d
0x0000020000200354 : ret 0x8b10
0x00000200005e2a41 : ret 0x8b18
0x000002000072d15f : ret 0x8b1a
0x000002000012c3cd : ret 0x8b20
0x0000020000639758 : ret 0x8b25
0x00000200006656f5 : ret 0x8b2a
0x000002000047340e : ret 0x8b38
0x00000200001814ca : ret 0x8b41
0x000002000003cdd7 : ret 0x8b42
0x00000200001b6510 : ret 0x8b44
0x000002000000505e : ret 0x8b45
0x0000020000122f2e : ret 0x8b48
0x0000020000008335 : ret 0x8b49
0x0000020000012705 : ret 0x8b4a
0x0000020000221e64 : ret 0x8b4b
0x000002000000bcfd : ret 0x8b4c
0x000002000000a4aa : ret 0x8b4d
0x00000200001a2872 : ret 0x8b4f
0x00000200001490a5 : ret 0x8b66
0x0000020000426349 : ret 0x8b8
0x0000020000201de6 : ret 0x8b9
0x00000200003ad1e3 : ret 0x8ba
0x000002000003f8c2 : ret 0x8bc3
0x0000020000406f4e : ret 0x8bcc
0x00000200005d540e : ret 0x8be9
0x0000020000039919 : ret 0x8beb
0x00000200004c3646 : ret 0x8bff
0x000002000005c804 : ret 0x8c
0x000002000002ad5c : ret 0x8c0f
0x0000020000090149 : ret 0x8c89
0x0000020000086890 : ret 0x8c8b
0x00000200000da8ee : ret 0x8ce8
0x00000200003cfe51 : ret 0x8ce9
0x0000020000102706 : ret 0x8cff
0x00000200001b7779 : ret 0x8d07
0x00000200000316b5 : ret 0x8d0f
0x000002000042c563 : ret 0x8d10
0x00000200005b5449 : ret 0x8d20
0x0000020000015911 : ret 0x8d41
0x0000020000003853 : ret 0x8d43
0x0000020000009e61 : ret 0x8d44
0x0000020000039950 : ret 0x8d45
0x0000020000645997 : ret 0x8d47
0x000002000016ea0d : ret 0x8d48
0x0000020000015959 : ret 0x8d49
0x00000200000092a9 : ret 0x8d4a
0x000002000007e629 : ret 0x8d4b
0x00000200000065ab : ret 0x8d4c
0x0000020000020132 : ret 0x8d4d
0x00000200000f17c2 : ret 0x8d4e
0x0000020000423d62 : ret 0x8dff
0x00000200001bfdac : ret 0x8e0f
0x0000020000526e76 : ret 0x8e8
0x00000200003a52ec : ret 0x8ee8
0x0000020000061413 : ret 0x8f0f
0x0000020000763a7a : ret 0x8f10
0x000002000022588e : ret 0x8f8b
0x0000020000003d80 : ret 0x8fe9
0x0000020000600766 : ret 0x905
0x0000020000008ccd : ret 0x9066
0x000002000042dca8 : ret 0x90ff
0x000002000012d08a : ret 0x9105
0x00000200006322b5 : ret 0x913b
0x0000020000144890 : ret 0x918b
0x000002000058b7d9 : ret 0x91e8
0x0000020000008bb9 : ret 0x91e9
0x000002000060a42d : ret 0x920f
0x000002000066725a : ret 0x927
0x0000020000063ed8 : ret 0x9277
0x0000020000457185 : ret 0x928b
0x0000020000074d74 : ret 0x92e8
0x00000200005223a6 : ret 0x92eb
0x000002000047fd7f : ret 0x930f
0x000002000013b38e : ret 0x9375
0x00000200006001ff : ret 0x938
0x000002000021c4e3 : ret 0x93e8
0x000002000075ed18 : ret 0x94
0x0000020000049512 : ret 0x940f
0x00000200001c0e98 : ret 0x9472
0x0000020000216a8e : ret 0x9475
0x00000200000418a0 : ret 0x9489
0x00000200000e2a61 : ret 0x948a
0x000002000054556c : ret 0x949
0x0000020000016677 : ret 0x94c
0x000002000078040d : ret 0x94e9
0x00000200000461e5 : ret 0x950f
0x00000200003f1c0d : ret 0x9574
0x000002000008f76f : ret 0x9577
0x00000200004f4ada : ret 0x95e
0x000002000013b7fe : ret 0x95e9
0x00000200004e4ef7 : ret 0x960f
0x00000200001e8bbe : ret 0x963b
0x000002000010b35f : ret 0x9680
0x00000200004f2bd5 : ret 0x96a
0x00000200002267d9 : ret 0x96ff
0x000002000060a422 : ret 0x970f
0x00000200000f2aea : ret 0x972
0x00000200001fcb45 : ret 0x973
0x000002000000b3de : ret 0x974
0x000002000002fe0e : ret 0x975
0x000002000020a2fe : ret 0x976
0x00000200006244f6 : ret 0x977
0x00000200000e93f4 : ret 0x97d
0x00000200000485df : ret 0x97e8
0x000002000077b39f : ret 0x97e9
0x0000020000161f2a : ret 0x98
0x00000200001f39ad : ret 0x9848
0x000002000053f026 : ret 0x985
0x00000200000fee88 : ret 0x98eb
0x000002000010ddbc : ret 0x9948
0x000002000053d4c9 : ret 0x996
0x00000200005f3ffb : ret 0x9972
0x0000020000037b73 : ret 0x9974
0x00000200001796b0 : ret 0x99ba
0x00000200005aa67f : ret 0x99e9
0x0000020000778b27 : ret 0x9a
0x000002000077bd71 : ret 0x9ab9
0x0000020000186c7b : ret 0x9aba
0x00000200001b42ba : ret 0x9b1
0x0000020000783313 : ret 0x9b72
0x000002000060e21f : ret 0x9ba
0x0000020000783fba : ret 0x9bc3
0x0000020000773f0a : ret 0x9bf9
0x00000200003e0e7c : ret 0x9c75
0x00000200001281b6 : ret 0x9c76
0x0000020000538805 : ret 0x9cc
0x00000200000da76e : ret 0x9ce8
0x000002000060e30a : ret 0x9ce9
0x0000020000166e14 : ret 0x9ceb
0x0000020000643931 : ret 0x9d74
0x0000020000742e0b : ret 0x9dc
0x000002000010ea01 : ret 0x9de9
0x0000020000535dac : ret 0x9eb
0x0000020000629dee : ret 0x9eb9
0x00000200001fbcbc : ret 0x9ee8
0x0000020000128595 : ret 0x9eeb
0x0000020000535105 : ret 0x9f1
0x000002000074e1ba : ret 0x9f21
0x0000020000038449 : ret 0x9f76
0x0000020000578308 : ret 0x9fe9
0x00000200004e6b7e : ret 0x9ff
0x0000020000012b64 : ret 0xa
0x000002000046f0e6 : ret 0xa0
0x000002000020be8a : ret 0xa00
0x000002000063f94a : ret 0xa052
0x00000200003a9e7c : ret 0xa0b9
0x0000020000532936 : ret 0xa0c
0x00000200006b54fa : ret 0xa0e1
0x00000200004641da : ret 0xa0eb
0x0000020000046dba : ret 0xa15
0x000002000077a285 : ret 0xa17c
0x00000200000f452d : ret 0xa1e8
0x000002000062d852 : ret 0xa213
0x0000020000641822 : ret 0xa26c
0x000002000065f42a : ret 0xa2bb
0x000002000017c5d9 : ret 0xa2eb
0x00000200006d965a : ret 0xa332
0x000002000063dba2 : ret 0xa335
0x00000200003ccce7 : ret 0xa348
0x000002000052c668 : ret 0xa373
0x000002000004d26f : ret 0xa375
0x00000200004001be : ret 0xa40
0x00000200006b691a : ret 0xa401
0x00000200001d9633 : ret 0xa44
0x0000020000594bf2 : ret 0xa472
0x00000200001c03fe : ret 0xa483
0x00000200005d2b8a : ret 0xa4dc
0x000002000009f776 : ret 0xa4e9
0x00000200004e1da3 : ret 0xa4eb
0x00000200001438ba : ret 0xa5
0x000002000012d165 : ret 0xa505
0x000002000060388f : ret 0xa572
0x00000200001437ba : ret 0xa6
0x00000200006115da : ret 0xa61a
0x00000200005ed0fa : ret 0xa69e
0x0000020000662bca : ret 0xa6cf
0x00000200000bfbde : ret 0xa6e9
0x00000200001436ba : ret 0xa7
0x00000200006a88c5 : ret 0xa72
0x00000200001c32ee : ret 0xa73
0x000002000003728e : ret 0xa74
0x000002000002ed12 : ret 0xa75
0x0000020000138818 : ret 0xa76
0x000002000011a893 : ret 0xa77
0x000002000039a203 : ret 0xa774
0x0000020000625fca : ret 0xa776
0x00000200000d51f6 : ret 0xa77d
0x0000020000505447 : ret 0xa7d
0x000002000017455e : ret 0xa7e9
0x00000200005742aa : ret 0xa7f
0x00000200001435ba : ret 0xa8
0x00000200001feda4 : ret 0xa808
0x000002000066728a : ret 0xa80e
0x00000200006c6efa : ret 0xa885
0x000002000065b29d : ret 0xa8ba
0x0000020000664046 : ret 0xa8c3
0x00000200004efe59 : ret 0xa8ff
0x00000200001434ba : ret 0xa9
0x00000200000b6712 : ret 0xa948
0x000002000062a36a : ret 0xa977
0x00000200006d74f7 : ret 0xa989
0x00000200004baa68 : ret 0xa9eb
0x00000200005cac16 : ret 0xa9f6
0x00000200001433ba : ret 0xaa
0x00000200006a8eba : ret 0xaa62
0x00000200005dcf7a : ret 0xaabd
0x0000020000686bae : ret 0xaad4
0x000002000056caba : ret 0xaad5
0x000002000050070e : ret 0xaaeb
0x00000200001432ba : ret 0xab
0x000002000067f1ba : ret 0xab3f
0x000002000020a023 : ret 0xab8
0x00000200001bdd05 : ret 0xaba
0x000002000077644a : ret 0xabab
0x00000200006307ce : ret 0xabcc
0x000002000058f652 : ret 0xabf5
0x00000200001431ba : ret 0xac
0x00000200006687ba : ret 0xaca9
0x000002000066d35a : ret 0xacad
0x00000200005f66ba : ret 0xacc9
0x00000200003ce2be : ret 0xace8
0x00000200001430ba : ret 0xad
0x00000200005ebc5a : ret 0xad10
0x00000200005d0962 : ret 0xad3
0x00000200005f7fca : ret 0xad4d
0x00000200005ecffa : ret 0xad53
0x00000200007617a2 : ret 0xad6f
0x000002000051fc10 : ret 0xad7
0x0000020000052e4d : ret 0xad74
0x000002000075a71a : ret 0xad75
0x000002000065a8ba : ret 0xad88
0x0000020000763c72 : ret 0xad8c
0x0000020000659cba : ret 0xad94
0x000002000066a37a : ret 0xad95
0x00000200005e546a : ret 0xadc6
0x0000020000013c6a : ret 0xade
0x0000020000142fba : ret 0xae
0x000002000066d1fa : ret 0xae22
0x000002000001e83e : ret 0xae72
0x00000200001d731c : ret 0xaeb
0x00000200006628fa : ret 0xaecb
0x0000020000501a84 : ret 0xaee8
0x000002000006e70c : ret 0xaee9
0x0000020000142eba : ret 0xaf
0x000002000008e480 : ret 0xaf0f
0x00000200006594fa : ret 0xaf5f
0x0000020000637fba : ret 0xafb1
0x00000200000115ab : ret 0xafe8
0x00000200005bc98a : ret 0xaff8
0x000002000009a319 : ret 0xb
0x00000200000f0e5c : ret 0xb0
0x00000200005b4b8a : ret 0xb076
0x000002000005ac54 : ret 0xb0c3
0x000002000040de7b : ret 0xb0ff
0x0000020000142cba : ret 0xb1
0x00000200005d728a : ret 0xb10e
0x00000200005373b2 : ret 0xb122
0x00000200000cd464 : ret 0xb141
0x000002000056aee2 : ret 0xb19e
0x000002000073ebd5 : ret 0xb1a
0x0000020000142bba : ret 0xb2
0x00000200006b3b0e : ret 0xb20a
0x000002000022d4f1 : ret 0xb272
0x000002000003dbb1 : ret 0xb274
0x000002000060b3aa : ret 0xb28b
0x0000020000470466 : ret 0xb2c3
0x00000200003bf958 : ret 0xb2e8
0x0000020000142aba : ret 0xb3
0x00000200005feb16 : ret 0xb328
0x000002000052fe06 : ret 0xb34c
0x0000020000004a3a : ret 0xb36
0x000002000058b67a : ret 0xb371
0x000002000047ca10 : ret 0xb374
0x0000020000495a57 : ret 0xb3e8
0x00000200005d5423 : ret 0xb3e9
0x00000200001429ba : ret 0xb4
0x000002000041274e : ret 0xb40
0x0000020000037caa : ret 0xb41
0x00000200001f6d24 : ret 0xb44
0x00000200005ae4f2 : ret 0xb449
0x000002000050a1d6 : ret 0xb460
0x0000020000030e01 : ret 0xb48
0x00000200006064ba : ret 0xb48c
0x0000020000037a20 : ret 0xb49
0x00000200005163cb : ret 0xb4b
0x000002000009da3c : ret 0xb4c
0x0000020000097966 : ret 0xb4d
0x00000200006b932e : ret 0xb4d5
0x00000200000100b3 : ret 0xb4eb
0x00000200005994ba : ret 0xb4ee
0x00000200006b7156 : ret 0xb4f0
0x000002000057875a : ret 0xb4f2
0x00000200001428ba : ret 0xb5
0x00000200005959ba : ret 0xb529
0x00000200004c12ee : ret 0xb53c
0x00000200001719f1 : ret 0xb540
0x00000200004c1dda : ret 0xb552
0x000002000076aa4e : ret 0xb5a3
0x00000200001be0f3 : ret 0xb5eb
0x00000200001427ba : ret 0xb6
0x0000020000017982 : ret 0xb60f
0x000002000052fd8c : ret 0xb66
0x0000020000501c22 : ret 0xb668
0x000002000055f35a : ret 0xb686
0x00000200005a7ef0 : ret 0xb6e0
0x0000020000482a51 : ret 0xb6eb
0x00000200005d395a : ret 0xb6fe
0x00000200001426ba : ret 0xb7
0x000002000002c01b : ret 0xb70f
0x00000200005cb481 : ret 0xb73
0x00000200001a3d13 : ret 0xb74
0x000002000019f90b : ret 0xb75
0x0000020000007a66 : ret 0xb76
0x00000200006ba81a : ret 0xb774
0x00000200005ef19b : ret 0xb775
0x00000200005c4776 : ret 0xb777
0x000002000056d5ba : ret 0xb7ad
0x00000200005c6b7a : ret 0xb7cd
0x00000200001747bf : ret 0xb7e8
0x00000200001425ba : ret 0xb8
0x000002000050a055 : ret 0xb802
0x000002000048e25d : ret 0xb80b
0x000002000007db90 : ret 0xb841
0x00000200000dc459 : ret 0xb848
0x00000200000413f8 : ret 0xb849
0x0000020000594bde : ret 0xb872
0x00000200004252e5 : ret 0xb876
0x00000200005b4aba : ret 0xb8b8
0x00000200005b7a7a : ret 0xb8be
0x000002000007380e : ret 0xb8c3
0x000002000008f26a : ret 0xb8c8
0x0000020000574356 : ret 0xb8cc
0x0000020000197de6 : ret 0xb8e8
0x00000200001a0000 : ret 0xb8eb
0x000002000042d89b : ret 0xb8ff
0x00000200000df636 : ret 0xb9
0x0000020000689eb2 : ret 0xb901
0x0000020000426403 : ret 0xb902
0x00000200004f9294 : ret 0xb90e
0x00000200001b82cc : ret 0xb910
0x000002000076b1ea : ret 0xb918
0x00000200001fe585 : ret 0xb91f
0x0000020000419716 : ret 0xb920
0x00000200006c54db : ret 0xb928
0x000002000074fe26 : ret 0xb930
0x000002000019bba6 : ret 0xb940
0x0000020000033b6e : ret 0xb941
0x000002000000607b : ret 0xb948
0x00000200000589a7 : ret 0xb949
0x00000200006219d4 : ret 0xb976
0x0000020000198cfc : ret 0xb98
0x00000200004766c9 : ret 0xb983
0x000002000052aafa : ret 0xb98b
0x0000020000766752 : ret 0xb9c0
0x000002000010cbb7 : ret 0xb9c3
0x00000200003e33d2 : ret 0xb9eb
0x00000200003f0b73 : ret 0xb9f4
0x00000200004c31b6 : ret 0xb9ff
0x000002000012a1a1 : ret 0xba
0x00000200001326eb : ret 0xba00
0x000002000017b794 : ret 0xba01
0x00000200004a8106 : ret 0xba02
0x0000020000159ef9 : ret 0xba04
0x000002000001723d : ret 0xba0f
0x0000020000755242 : ret 0xba2e
0x000002000013d381 : ret 0xba41
0x000002000000dc8c : ret 0xba48
0x000002000007e945 : ret 0xba49
0x0000020000755bea : ret 0xba4c
0x0000020000618aa6 : ret 0xba70
0x000002000075a5ca : ret 0xba90
0x000002000075a3da : ret 0xba92
0x000002000075a1e2 : ret 0xba95
0x00000200005966ba : ret 0xba9c
0x00000200005963ba : ret 0xba9f
0x0000020000041e84 : ret 0xbac3
0x000002000053afba : ret 0xbad3
0x000002000078027a : ret 0xbad7
0x00000200004239a7 : ret 0xbaff
0x00000200001422ba : ret 0xbb
0x000002000022def9 : ret 0xbb01
0x000002000074bbea : ret 0xbb0d
0x000002000074814a : ret 0xbb36
0x00000200001db177 : ret 0xbb41
0x00000200000b62d4 : ret 0xbb49
0x0000020000746892 : ret 0xbb4d
0x0000020000505476 : ret 0xbb72
0x0000020000742f9a : ret 0xbb76
0x000002000013f221 : ret 0xbb83
0x00000200004e43b3 : ret 0xbbbb
0x000002000050fdca : ret 0xbbcf
0x00000200005152d7 : ret 0xbbff
0x00000200001421ba : ret 0xbc
0x000002000045baf7 : ret 0xbc0f
0x000002000056f716 : ret 0xbc1c
0x0000020000032eb7 : ret 0xbc41
0x00000200002299db : ret 0xbc49
0x000002000067785e : ret 0xbc72
0x00000200000e8ca1 : ret 0xbc74
0x000002000003e540 : ret 0xbc75
0x00000200004a810f : ret 0xbc80
0x00000200001b470a : ret 0xbce8
0x00000200001420ba : ret 0xbd
0x0000020000052e0d : ret 0xbd04
0x000002000002f398 : ret 0xbd0f
0x00000200002296a3 : ret 0xbd49
0x000002000065b91a : ret 0xbd63
0x00000200000b3873 : ret 0xbd76
0x0000020000561f7a : ret 0xbd9
0x00000200004ab1b2 : ret 0xbde4
0x0000020000141fba : ret 0xbe
0x000002000018f1ff : ret 0xbe3
0x00000200003a1cbf : ret 0xbe41
0x000002000022d8cf : ret 0xbe48
0x00000200001f4599 : ret 0xbe49
0x00000200006706aa : ret 0xbe60
0x000002000001e8fd : ret 0xbe72
0x000002000048747a : ret 0xbe9b
0x00000200001f7d38 : ret 0xbeb
0x000002000066211a : ret 0xbedb
0x000002000061e3bc : ret 0xbee8
0x00000200006a9491 : ret 0xbeff
0x000002000012c890 : ret 0xbf
0x000002000045b93a : ret 0xbf31
0x00000200004dc0ca : ret 0xbf3a
0x000002000003b13a : ret 0xbf41
0x0000020000148aa3 : ret 0xbf48
0x0000020000223930 : ret 0xbf49
0x000002000063b51a : ret 0xbf67
0x0000020000134fc9 : ret 0xbf75
0x000002000052e88e : ret 0xbfa2
0x00000200004cc05a : ret 0xbfb9
0x0000020000631c4a : ret 0xbff3
0x000002000048e153 : ret 0xbfff
0x0000020000066f60 : ret 0xc
0x000002000009f860 : ret 0xc0
0x00000200000dbcf1 : ret 0xc00
0x000002000046d6d5 : ret 0xc002
0x0000020000029caa : ret 0xc003
0x0000020000667d1b : ret 0xc01b
0x000002000064aeb2 : ret 0xc024
0x000002000077b13c : ret 0xc02e
0x000002000002b0be : ret 0xc032
0x0000020000011c96 : ret 0xc033
0x00000200004e85a3 : ret 0xc03f
0x0000020000065a37 : ret 0xc041
0x0000020000493fca : ret 0xc05f
0x000002000051eafe : ret 0xc063
0x000002000049d503 : ret 0xc069
0x000002000062b11a : ret 0xc06b
0x00000200000643b8 : ret 0xc072
0x00000200003f4019 : ret 0xc076
0x000002000006fdfa : ret 0xc083
0x00000200001e767a : ret 0xc084
0x000002000002f283 : ret 0xc085
0x000002000062661a : ret 0xc0b6
0x000002000007798d : ret 0xc0eb
0x00000200004b31fa : ret 0xc0f1
0x0000020000065cfc : ret 0xc0ff
0x0000020000141cba : ret 0xc1
0x00000200005439a6 : ret 0xc102
0x0000020000051bdd : ret 0xc103
0x00000200005439de : ret 0xc107
0x00000200001d9508 : ret 0xc10a
0x00000200004a8b20 : ret 0xc10b
0x00000200002287bd : ret 0xc11a
0x000002000063d88e : ret 0xc122
0x0000020000057e84 : ret 0xc123
0x0000020000003867 : ret 0xc12b
0x000002000010f6c2 : ret 0xc133
0x000002000044022e : ret 0xc137
0x0000020000069f93 : ret 0xc13b
0x000002000007b6fb : ret 0xc141
0x000002000003bf44 : ret 0xc148
0x000002000000469b : ret 0xc149
0x000002000050528a : ret 0xc164
0x000002000010239b : ret 0xc166
0x000002000003e3a0 : ret 0xc181
0x0000020000223e3c : ret 0xc183
0x00000200004d7b82 : ret 0xc184
0x00000200004a6145 : ret 0xc18b
0x0000020000437bbe : ret 0xc19a
0x0000020000633f5a : ret 0xc1ad
0x00000200004309a2 : ret 0xc1b6
0x00000200004a029a : ret 0xc1f6
0x0000020000065d76 : ret 0xc1ff
0x0000020000141bba : ret 0xc2
0x0000020000069f47 : ret 0xc202
0x000002000063033a : ret 0xc207
0x00000200001488cc : ret 0xc223
0x00000200004998ba : ret 0xc229
0x000002000004c516 : ret 0xc22b
0x000002000051d81a : ret 0xc22f
0x0000020000078af6 : ret 0xc233
0x00000200004e853d : ret 0xc23a
0x0000020000003776 : ret 0xc23b
0x00000200006a9542 : ret 0xc26b
0x00000200002145f9 : ret 0xc272
0x00000200001c3273 : ret 0xc275
0x00000200006a8142 : ret 0xc27f
0x00000200001848ff : ret 0xc280
0x00000200005ea3e0 : ret 0xc281
0x0000020000228b1a : ret 0xc283
0x000002000046316e : ret 0xc285
0x000002000042b49a : ret 0xc287
0x00000200000ec34d : ret 0xc28a
0x0000020000095cdc : ret 0xc28b
0x00000200007551e2 : ret 0xc2a2
0x00000200006d94aa : ret 0xc2a4
0x0000020000512dba : ret 0xc2d6
0x00000200001d1c0c : ret 0xc2e8
0x000002000005e4ea : ret 0xc2eb
0x0000020000427cfa : ret 0xc2f2
0x0000020000134ea6 : ret 0xc2f6
0x0000020000026c01 : ret 0xc2ff
0x0000020000141aba : ret 0xc3
0x00000200001b94d5 : ret 0xc30b
0x000002000004978f : ret 0xc322
0x00000200004056c5 : ret 0xc323
0x00000200007743d0 : ret 0xc32a
0x000002000002c268 : ret 0xc35b
0x0000020000148a94 : ret 0xc35f
0x000002000047bfe0 : ret 0xc383
0x00000200000e9391 : ret 0xc38a
0x000002000013dbc3 : ret 0xc38b
0x000002000078225a : ret 0xc39
0x00000200006b7845 : ret 0xc3ba
0x00000200004aae8a : ret 0xc3d2
0x0000020000649087 : ret 0xc3e8
0x00000200000b164e : ret 0xc3e9
0x00000200004a91d6 : ret 0xc3ee
0x00000200000229a9 : ret 0xc3f6
0x00000200003b54ba : ret 0xc3ff
0x00000200001419ba : ret 0xc4
0x0000020000738702 : ret 0xc46b
0x00000200005e9d4a : ret 0xc472
0x0000020000132f0f : ret 0xc475
0x00000200003ceb7e : ret 0xc48a
0x000002000040995a : ret 0xc4d8
0x000002000062ce53 : ret 0xc4e9
0x00000200000361b6 : ret 0xc4eb
0x00000200001418ba : ret 0xc5
0x0000020000218119 : ret 0xc520
0x000002000021814d : ret 0xc531
0x00000200001a97b7 : ret 0xc53b
0x00000200006a232b : ret 0xc556
0x000002000020e092 : ret 0xc56
0x00000200001333f2 : ret 0xc575
0x00000200006db84f : ret 0xc577
0x00000200003e0388 : ret 0xc581
0x000002000046bdda : ret 0xc59e
0x00000200004f28ba : ret 0xc5c8
0x00000200001142bd : ret 0xc5eb
0x00000200001417ba : ret 0xc6
0x0000020000498d26 : ret 0xc601
0x000002000061a829 : ret 0xc603
0x00000200001f8cc8 : ret 0xc60f
0x00000200005cea4a : ret 0xc625
0x00000200004d09ba : ret 0xc627
0x00000200001d956f : ret 0xc62b
0x000002000016546c : ret 0xc63b
0x0000020000467ee2 : ret 0xc641
0x00000200004b05fe : ret 0xc674
0x00000200004572aa : ret 0xc686
0x000002000010d2c2 : ret 0xc68b
0x00000200003e510a : ret 0xc6c2
0x000002000066d75e : ret 0xc6ff
0x00000200001416ba : ret 0xc7
0x00000200003a961c : ret 0xc702
0x00000200000fb901 : ret 0xc703
0x00000200001b444d : ret 0xc70b
0x000002000066311a : ret 0xc721
0x00000200001cf7d3 : ret 0xc723
0x00000200006628c1 : ret 0xc728
0x00000200007332d7 : ret 0xc73
0x000002000004bbad : ret 0xc73b
0x000002000040057a : ret 0xc73c
0x000002000013e2a6 : ret 0xc74
0x00000200000e9ea4 : ret 0xc741
0x000002000006287a : ret 0xc748
0x00000200004a143c : ret 0xc74c
0x000002000017e5b2 : ret 0xc75
0x00000200004bedda : ret 0xc758
0x00000200004bb5ee : ret 0xc766
0x00000200001fdd61 : ret 0xc77
0x00000200001a1c83 : ret 0xc772
0x00000200000cdca2 : ret 0xc78
0x00000200007326f9 : ret 0xc783
0x000002000075b078 : ret 0xc7cb
0x0000020000438cb3 : ret 0xc7e8
0x00000200000c835e : ret 0xc7e9
0x00000200000eba74 : ret 0xc7f
0x00000200005be5cd : ret 0xc7f0
0x00000200006b6b1a : ret 0xc7ff
0x00000200001415ba : ret 0xc8
0x0000020000008129 : ret 0xc803
0x00000200001f5c7c : ret 0xc80b
0x00000200000cd21c : ret 0xc81
0x0000020000095efd : ret 0xc823
0x00000200000a34e4 : ret 0xc82b
0x0000020000113e73 : ret 0xc833
0x00000200001d6d85 : ret 0xc83a
0x00000200001a8f30 : ret 0xc83b
0x000002000064bc4a : ret 0xc853
0x00000200001139b3 : ret 0xc86b
0x0000020000630763 : ret 0xc88
0x00000200000328be : ret 0xc883
0x0000020000167ad3 : ret 0xc88a
0x000002000004a95c : ret 0xc88b
0x00000200005cae04 : ret 0xc8b
0x00000200004674a8 : ret 0xc8ba
0x000002000012d10f : ret 0xc8c1
0x00000200005a494a : ret 0xc8c6
0x00000200000cbcd7 : ret 0xc8d
0x000002000015a792 : ret 0xc8e8
0x000002000004f808 : ret 0xc8eb
0x0000020000631406 : ret 0xc8ff
0x00000200001414ba : ret 0xc9
0x00000200001bf92a : ret 0xc903
0x00000200006335e6 : ret 0xc91a
0x00000200006484ea : ret 0xc91b
0x00000200004bc6d9 : ret 0xc932
0x000002000001ab2b : ret 0xc933
0x0000020000639da2 : ret 0xc953
0x000002000022954f : ret 0xc983
0x00000200000ed6b4 : ret 0xc984
0x000002000003cdb7 : ret 0xc985
0x00000200003a84f2 : ret 0xc9be
0x0000020000594f1a : ret 0xc9cd
0x0000020000148dff : ret 0xc9ff
0x00000200001413ba : ret 0xca
0x000002000012d8fc : ret 0xca03
0x00000200005d3466 : ret 0xca07
0x000002000063a07d : ret 0xca17
0x000002000006c020 : ret 0xca2b
0x00000200004112e5 : ret 0xca3b
0x000002000013dc01 : ret 0xca6b
0x00000200005e2d98 : ret 0xca72
0x00000200001a29ff : ret 0xca75
0x00000200000fb53c : ret 0xca8a
0x00000200000384c3 : ret 0xca8b
0x00000200003eb350 : ret 0xca97
0x000002000012d3ee : ret 0xcac1
0x0000020000583c4a : ret 0xcad3
0x00000200000aaaf2 : ret 0xcae9
0x0000020000576e09 : ret 0xcaff
0x00000200001412ba : ret 0xcb
0x000002000057e04a : ret 0xcb2f
0x0000020000586afa : ret 0xcb63
0x00000200007543ee : ret 0xcb6d
0x0000020000665ba6 : ret 0xcb75
0x0000020000038485 : ret 0xcb83
0x000002000012166d : ret 0xcb8b
0x00000200004866ba : ret 0xcb9d
0x00000200000517e7 : ret 0xcbe8
0x00000200006c0d9e : ret 0xcbe9
0x00000200000378fb : ret 0xcc
0x00000200003bb50a : ret 0xcc3e
0x00000200005701f2 : ret 0xcc6e
0x0000020000203942 : ret 0xcc7
0x000002000067e382 : ret 0xcc72
0x0000020000088da7 : ret 0xcc75
0x000002000063b29a : ret 0xcc8a
0x00000200006b4542 : ret 0xccac
0x000002000002d548 : ret 0xccc3
0x0000020000020a40 : ret 0xcccc
0x000002000018ac50 : ret 0xcce9
0x0000020000671245 : ret 0xcceb
0x00000200003fc9fc : ret 0xccff
0x00000200001410ba : ret 0xcd
0x00000200001315c5 : ret 0xcd73
0x000002000053ae70 : ret 0xcd8b
0x000002000061841b : ret 0xcdd6
0x00000200003f481d : ret 0xcde8
0x00000200003e3034 : ret 0xcde9
0x0000020000409172 : ret 0xcdeb
0x0000020000140fba : ret 0xce
0x000002000020fa08 : ret 0xce0b
0x0000020000781762 : ret 0xce0f
0x00000200006767ec : ret 0xce3b
0x000002000061c07e : ret 0xce6d
0x0000020000625dbc : ret 0xce75
0x000002000012d4d2 : ret 0xce8b
0x000002000055cef8 : ret 0xce9
0x000002000021ecdf : ret 0xceb
0x00000200006bb4d8 : ret 0xcee8
0x000002000047ce4a : ret 0xceeb
0x0000020000140eba : ret 0xcf
0x00000200003d047e : ret 0xcf03
0x000002000012d0f1 : ret 0xcf05
0x0000020000056c4b : ret 0xcf2b
0x000002000064b1f8 : ret 0xcf3b
0x00000200006421a8 : ret 0xcf72
0x00000200003ef620 : ret 0xcf75
0x000002000074165a : ret 0xcf85
0x00000200004c472a : ret 0xcf86
0x000002000009284a : ret 0xcf8b
0x00000200003c81ba : ret 0xcfae
0x0000020000167143 : ret 0xcfe9
0x00000200003c2a6a : ret 0xcff0
0x00000200000736ce : ret 0xd
0x0000020000140dba : ret 0xd0
0x000002000010dfcc : ret 0xd03b
0x0000020000054972 : ret 0xd074
0x00000200002311cd : ret 0xd075
0x000002000004f7f9 : ret 0xd08a
0x00000200000064f7 : ret 0xd08b
0x0000020000525d4a : ret 0xd0b2
0x0000020000673a3a : ret 0xd0b7
0x000002000072b6d7 : ret 0xd0ba
0x00000200003f9aa4 : ret 0xd0f6
0x0000020000136f15 : ret 0xd0f7
0x0000020000140cba : ret 0xd1
0x0000020000471243 : ret 0xd10b
0x0000020000496789 : ret 0xd12b
0x000002000055c475 : ret 0xd13a
0x000002000066bb15 : ret 0xd141
0x0000020000088717 : ret 0xd148
0x0000020000004695 : ret 0xd149
0x000002000042a8ba : ret 0xd15a
0x00000200000bfc8d : ret 0xd16
0x00000200001cb52c : ret 0xd166
0x0000020000442449 : ret 0xd169
0x000002000052101a : ret 0xd172
0x00000200007745aa : ret 0xd189
0x000002000007bac2 : ret 0xd18a
0x00000200000208a7 : ret 0xd18b
0x0000020000140bba : ret 0xd2
0x0000020000584d4f : ret 0xd202
0x0000020000215844 : ret 0xd203
0x00000200006335d6 : ret 0xd21a
0x00000200003d00b2 : ret 0xd21d
0x000002000076341b : ret 0xd232
0x000002000002ed96 : ret 0xd233
0x000002000007adce : ret 0xd241
0x00000200005891a5 : ret 0xd272
0x00000200005db35a : ret 0xd278
0x00000200004ea867 : ret 0xd27c
0x0000020000454303 : ret 0xd284
0x000002000002531c : ret 0xd285
0x0000020000545fca : ret 0xd28b
0x000002000042f5e4 : ret 0xd2eb
0x00000200004e7f58 : ret 0xd2f6
0x000002000041206b : ret 0xd2f7
0x0000020000140aba : ret 0xd3
0x000002000008259d : ret 0xd300
0x00000200006b4a46 : ret 0xd307
0x000002000001d4ba : ret 0xd33b
0x0000020000002a5e : ret 0xd348
0x00000200001c045e : ret 0xd349
0x00000200006657a0 : ret 0xd372
0x000002000059da1a : ret 0xd375
0x000002000021cdf0 : ret 0xd38a
0x00000200001a56ff : ret 0xd38b
0x00000200000bca97 : ret 0xd3a
0x000002000059ceb2 : ret 0xd3e3
0x000002000059e540 : ret 0xd3eb
0x000002000064091a : ret 0xd3ef
0x00000200001409ba : ret 0xd4
0x000002000057c83b : ret 0xd472
0x0000020000462ab0 : ret 0xd473
0x000002000058cb2a : ret 0xd4b3
0x0000020000680516 : ret 0xd4e2
0x000002000003a3a6 : ret 0xd4e8
0x00000200001732a6 : ret 0xd4e9
0x00000200001408ba : ret 0xd5
0x00000200003f13fa : ret 0xd50d
0x00000200001737c5 : ret 0xd523
0x00000200003fc0ba : ret 0xd530
0x000002000005c829 : ret 0xd572
0x000002000069d504 : ret 0xd57c
0x00000200003b7c3e : ret 0xd59
0x0000020000621e42 : ret 0xd5d3
0x00000200003b727b : ret 0xd5eb
0x00000200001407ba : ret 0xd6
0x00000200000433a7 : ret 0xd603
0x00000200003dd61a : ret 0xd62d
0x00000200004cd14a : ret 0xd63e
0x0000020000231ef7 : ret 0xd675
0x0000020000024ba1 : ret 0xd676
0x0000020000598f61 : ret 0xd69c
0x000002000059922a : ret 0xd69f
0x000002000039ee3a : ret 0xd6b0
0x00000200004c574a : ret 0xd6b8
0x00000200001406ba : ret 0xd7
0x000002000058b3a2 : ret 0xd701
0x00000200004cd9ca : ret 0xd703
0x00000200001f633a : ret 0xd72
0x0000020000134f4b : ret 0xd74
0x000002000009242d : ret 0xd75
0x000002000069d56c : ret 0xd77c
0x00000200005e2a26 : ret 0xd78b
0x000002000060198a : ret 0xd7d8
0x000002000000e412 : ret 0xd7e9
0x00000200001405ba : ret 0xd8
0x000002000044e39b : ret 0xd803
0x000002000012d191 : ret 0xd80b
0x000002000062a57b : ret 0xd823
0x00000200003ca6e0 : ret 0xd833
0x00000200005f953a : ret 0xd85c
0x0000020000115fe1 : ret 0xd875
0x00000200003a8c16 : ret 0xd887
0x0000020000635b67 : ret 0xd88b
0x00000200006b4a94 : ret 0xd89
0x000002000058f842 : ret 0xd89b
0x00000200000a86a0 : ret 0xd8b
0x000002000058e3f6 : ret 0xd8b0
0x00000200000fd8ad : ret 0xd8f6
0x0000020000038895 : ret 0xd8f7
0x00000200001404ba : ret 0xd9
0x00000200003babba : ret 0xd945
0x00000200002151d5 : ret 0xd972
0x000002000076dcc3 : ret 0xd975
0x000002000020e510 : ret 0xd98b
0x00000200005f567a : ret 0xd9cd
0x000002000055e9ba : ret 0xd9e2
0x0000020000424f41 : ret 0xd9e8
0x000002000003d7e7 : ret 0xd9eb
0x00000200001403ba : ret 0xda
0x000002000053e9ca : ret 0xda03
0x00000200001b180c : ret 0xda3b
0x0000020000649684 : ret 0xda8b
0x00000200001dbc98 : ret 0xdab9
0x00000200006c2581 : ret 0xdaba
0x0000020000015e61 : ret 0xdaeb
0x00000200001402ba : ret 0xdb
0x0000020000213fb9 : ret 0xdb1b
0x000002000012a528 : ret 0xdb33
0x0000020000562c98 : ret 0xdb72
0x00000200005fe122 : ret 0xdb73
0x00000200003c97fe : ret 0xdb74
0x000002000005064e : ret 0xdb8
0x0000020000052c37 : ret 0xdb85
0x0000020000072fd0 : ret 0xdb9
0x00000200004230ee : ret 0xdbb
0x00000200003c462f : ret 0xdbe8
0x000002000020281f : ret 0xdbe9
0x0000020000072ec9 : ret 0xdbeb
0x00000200001401ba : ret 0xdc
0x000002000064acf7 : ret 0xdc00
0x0000020000758626 : ret 0xdc3c
0x0000020000686ef4 : ret 0xdc72
0x00000200001e180c : ret 0xdc75
0x000002000053a432 : ret 0xdc94
0x000002000065b0e7 : ret 0xdcd
0x00000200006641b6 : ret 0xdce5
0x00000200001a1073 : ret 0xdce9
0x00000200005e3f3a : ret 0xdd54
0x0000020000503d42 : ret 0xdd72
0x00000200003be2a1 : ret 0xdd74
0x000002000072b494 : ret 0xdd75
0x00000200005e2902 : ret 0xdd9c
0x0000020000602afa : ret 0xddcd
0x00000200000f3fb2 : ret 0xddeb
0x000002000060285e : ret 0xddf3
0x000002000017656c : ret 0xde72
0x00000200001f0a3c : ret 0xde75
0x0000020000002625 : ret 0xde8
0x000002000011ca88 : ret 0xde8b
0x000002000019ea5c : ret 0xdee8
0x000002000059e37a : ret 0xdeeb
0x000002000011e5da : ret 0xdf25
0x00000200001a8dfa : ret 0xdf3
0x00000200004de64e : ret 0xdf31
0x00000200001f63b1 : ret 0xdf7f
0x00000200001bd6c3 : ret 0xdfeb
0x0000020000172256 : ret 0xdfff
0x000002000009c5d9 : ret 0xe
0x00000200003c26f1 : ret 0xe0
0x00000200000a430d : ret 0xe025
0x000002000042da4a : ret 0xe035
0x00000200004f648a : ret 0xe050
0x00000200000635dd : ret 0xe072
0x000002000039a2a9 : ret 0xe075
0x000002000021b76d : ret 0xe07c
0x000002000000c9b7 : ret 0xe083
0x000002000001651b : ret 0xe0c1
0x000002000000ef02 : ret 0xe0d3
0x000002000065d6c2 : ret 0xe0e6
0x0000020000109faa : ret 0xe0e8
0x000002000044c964 : ret 0xe0eb
0x000002000065be86 : ret 0xe0f8
0x000002000001ceca : ret 0xe0ff
0x000002000073bfb1 : ret 0xe10
0x000002000013ced9 : ret 0xe100
0x00000200004aef02 : ret 0xe153
0x00000200000ff027 : ret 0xe175
0x00000200003ef89e : ret 0xe176
0x000002000021ecb9 : ret 0xe180
0x000002000002f6f7 : ret 0xe181
0x000002000000b98b : ret 0xe183
0x00000200004dceba : ret 0xe1a6
0x0000020000088adb : ret 0xe1c1
0x00000200000aad30 : ret 0xe1f
0x00000200004a3c72 : ret 0xe20d
0x00000200004a3b72 : ret 0xe20e
0x00000200001791b3 : ret 0xe273
0x000002000048ec27 : ret 0xe275
0x0000020000173941 : ret 0xe280
0x00000200001f896e : ret 0xe281
0x000002000060c5be : ret 0xe282
0x00000200001ff299 : ret 0xe283
0x00000200001ed542 : ret 0xe2b
0x000002000013edf2 : ret 0xe2c1
0x000002000017f47e : ret 0xe2d3
0x00000200000ad2bb : ret 0xe2e9
0x00000200003d49d7 : ret 0xe2eb
0x00000200001fd23a : ret 0xe300
0x00000200003a8a2e : ret 0xe32d
0x000002000049ba42 : ret 0xe346
0x00000200002335fa : ret 0xe34e
0x0000020000021cba : ret 0xe372
0x00000200000a36aa : ret 0xe383
0x00000200006d2c40 : ret 0xe3ba
0x000002000059edb7 : ret 0xe3e8
0x00000200000bb5df : ret 0xe3e9
0x00000200005b7a07 : ret 0xe472
0x00000200003b53cd : ret 0xe475
0x00000200001d0c67 : ret 0xe476
0x0000020000621412 : ret 0xe477
0x0000020000134eec : ret 0xe484
0x0000020000202dd2 : ret 0xe4b3
0x00000200000c0c68 : ret 0xe4b8
0x0000020000164dc9 : ret 0xe4b9
0x0000020000203aaa : ret 0xe4c7
0x000002000056a62b : ret 0xe4e9
0x0000020000467d8a : ret 0xe4eb
0x00000200003e024a : ret 0xe50d
0x000002000058dbae : ret 0xe558
0x000002000055c0dd : ret 0xe55a
0x000002000055cdea : ret 0xe568
0x000002000055eb43 : ret 0xe580
0x00000200005b1e5e : ret 0xe5a8
0x00000200005611e6 : ret 0xe5c7
0x00000200004a525a : ret 0xe5d9
0x00000200005621b0 : ret 0xe5fc
0x00000200000a4a20 : ret 0xe61
0x000002000056268f : ret 0xe613
0x0000020000563546 : ret 0xe640
0x000002000068f40e : ret 0xe645
0x0000020000563df0 : ret 0xe65f
0x000002000056431b : ret 0xe66e
0x000002000056ad3c : ret 0xe673
0x000002000006bc53 : ret 0xe683
0x0000020000564625 : ret 0xe684
0x0000020000466642 : ret 0xe69a
0x000002000056c2d5 : ret 0xe6ca
0x000002000056c65b : ret 0xe6ce
0x0000020000565caa : ret 0xe6df
0x0000020000565d00 : ret 0xe6e0
0x000002000018d26d : ret 0xe6e9
0x0000020000012687 : ret 0xe6eb
0x00000200001138f4 : ret 0xe6f7
0x0000020000571171 : ret 0xe70f
0x0000020000023c23 : ret 0xe72
0x0000020000572100 : ret 0xe73a
0x0000020000021a26 : ret 0xe74
0x0000020000573837 : ret 0xe749
0x000002000057368a : ret 0xe74a
0x0000020000204ff7 : ret 0xe75
0x00000200005743af : ret 0xe757
0x000002000057419f : ret 0xe758
0x000002000011e640 : ret 0xe76
0x0000020000028f05 : ret 0xe77
0x000002000059977c : ret 0xe772
0x00000200000fefaa : ret 0xe775
0x000002000057930e : ret 0xe77c
0x0000020000575c4f : ret 0xe78b
0x0000020000576f05 : ret 0xe7bb
0x00000200000a2043 : ret 0xe7e
0x000002000072d8c7 : ret 0xe7f7
0x0000020000221567 : ret 0xe8
0x0000020000403230 : ret 0xe802
0x000002000001987f : ret 0xe804
0x0000020000616f05 : ret 0xe806
0x0000020000023b7a : ret 0xe808
0x0000020000764f63 : ret 0xe80c
0x000002000043134f : ret 0xe810
0x0000020000421dde : ret 0xe812
0x00000200005af071 : ret 0xe814
0x0000020000427e4e : ret 0xe818
0x00000200005d617a : ret 0xe81a
0x00000200000f8c18 : ret 0xe820
0x00000200004f5d99 : ret 0xe823
0x0000020000595e79 : ret 0xe826
0x00000200000ef0d9 : ret 0xe828
0x000002000018a7d6 : ret 0xe82f
0x000002000060fb63 : ret 0xe830
0x000002000052dd76 : ret 0xe838
0x00000200005e4c1f : ret 0xe840
0x0000020000524f0a : ret 0xe848
0x00000200003f4bf2 : ret 0xe84c
0x00000200004cec7d : ret 0xe850
0x000002000002f091 : ret 0xe858
0x000002000019a26b : ret 0xe870
0x0000020000020d56 : ret 0xe872
0x000002000009b4b1 : ret 0xe874
0x000002000000ad44 : ret 0xe875
0x00000200001072d5 : ret 0xe883
0x00000200005c78ad : ret 0xe89
0x000002000057f71c : ret 0xe8a7
0x00000200005d9154 : ret 0xe8b8
0x00000200000d4116 : ret 0xe8c0
0x000002000000805c : ret 0xe8c1
0x0000020000673e7a : ret 0xe8cb
0x0000020000409310 : ret 0xe8d0
0x0000020000034462 : ret 0xe8d1
0x00000200005802c5 : ret 0xe8d8
0x0000020000460bb5 : ret 0xe8e0
0x00000200001054a3 : ret 0xe8eb
0x0000020000402036 : ret 0xe8ff
0x00000200000207a6 : ret 0xe9
0x000002000074e96b : ret 0xe901
0x0000020000166e91 : ret 0xe902
0x000002000013daff : ret 0xe904
0x0000020000062c66 : ret 0xe906
0x000002000006b68c : ret 0xe908
0x00000200003b75f0 : ret 0xe910
0x000002000017f63c : ret 0xe913
0x00000200005817e4 : ret 0xe918
0x000002000059b095 : ret 0xe91d
0x00000200001715b2 : ret 0xe920
0x0000020000582770 : ret 0xe93c
0x00000200005cf7a9 : ret 0xe940
0x00000200001edd6a : ret 0xe945
0x0000020000582f92 : ret 0xe954
0x0000020000145d61 : ret 0xe955
0x00000200000630d4 : ret 0xe972
0x00000200002273c5 : ret 0xe975
0x00000200001c1972 : ret 0xe97c
0x0000020000666c4c : ret 0xe981
0x00000200000ebe75 : ret 0xe983
0x000002000058854c : ret 0xe990
0x000002000063c4b2 : ret 0xe9c0
0x000002000011306d : ret 0xe9c1
0x0000020000466867 : ret 0xe9c9
0x000002000059fac9 : ret 0xe9d0
0x0000020000638048 : ret 0xe9d1
0x00000200005a05d8 : ret 0xe9e7
0x0000020000159429 : ret 0xe9e8
0x00000200005d174e : ret 0xe9f2
0x00000200005ea6ea : ret 0xe9f5
0x000002000042105d : ret 0xe9ff
0x000002000042fb42 : ret 0xea05
0x0000020000629a01 : ret 0xea3b
0x0000020000435523 : ret 0xea59
0x0000020000063599 : ret 0xea72
0x0000020000025803 : ret 0xea75
0x0000020000484258 : ret 0xea8b
0x00000200005a3a55 : ret 0xea9e
0x00000200005a3e72 : ret 0xeaaf
0x00000200001138d0 : ret 0xeac1
0x00000200001dee4a : ret 0xeace
0x0000020000496a6d : ret 0xead1
0x000002000055be06 : ret 0xeae9
0x00000200005a501f : ret 0xeaea
0x000002000042671a : ret 0xeaeb
0x00000200004eb9d2 : ret 0xeaf9
0x0000020000138e91 : ret 0xeb02
0x00000200001f991f : ret 0xeb03
0x000002000013dc63 : ret 0xeb07
0x0000020000019ae5 : ret 0xeb08
0x00000200001f4f10 : ret 0xeb0c
0x00000200005de04e : ret 0xeb0d
0x00000200001c321a : ret 0xeb10
0x00000200001f98bc : ret 0xeb14
0x0000020000074be9 : ret 0xeb18
0x00000200001f98a8 : ret 0xeb1c
0x00000200001c9abe : ret 0xeb1d
0x0000020000621875 : ret 0xeb20
0x0000020000649040 : ret 0xeb24
0x00000200004d3d49 : ret 0xeb28
0x00000200004255f8 : ret 0xeb32
0x0000020000211170 : ret 0xeb37
0x000002000063a2a4 : ret 0xeb38
0x00000200005f89ba : ret 0xeb40
0x00000200001337cb : ret 0xeb57
0x0000020000063142 : ret 0xeb72
0x00000200000b8b95 : ret 0xeb75
0x00000200002074d6 : ret 0xeb7c
0x00000200000efd94 : ret 0xeb8
0x00000200005a9055 : ret 0xeb89
0x0000020000422ea9 : ret 0xeba9
0x00000200004397bc : ret 0xebc0
0x0000020000422e8c : ret 0xebc9
0x00000200005adc72 : ret 0xebce
0x000002000015bda7 : ret 0xebcf
0x000002000015bec6 : ret 0xebd7
0x0000020000526e2b : ret 0xebd8
0x0000020000211dca : ret 0xebdd
0x00000200005ae0f9 : ret 0xebdf
0x000002000003852f : ret 0xebe0
0x00000200000890d0 : ret 0xebe9
0x00000200004443a6 : ret 0xebeb
0x000002000005d14a : ret 0xebf
0x0000020000174c4a : ret 0xebf8
0x00000200003e60c6 : ret 0xebfe
0x000002000013f073 : ret 0xebff
0x00000200001a18ea : ret 0xec02
0x0000020000513d16 : ret 0xec1b
0x00000200005afbb8 : ret 0xec52
0x000002000015df7c : ret 0xec61
0x000002000015e301 : ret 0xec6a
0x000002000015e6c6 : ret 0xec72
0x00000200001ff1ee : ret 0xec74
0x000002000013de33 : ret 0xec75
0x00000200005b15b1 : ret 0xec7d
0x00000200004b733a : ret 0xec7e
0x00000200005b1858 : ret 0xec85
0x00000200005b2f9e : ret 0xec8c
0x00000200005b319d : ret 0xec96
0x000002000068aeba : ret 0xeca6
0x0000020000160c43 : ret 0xecae
0x00000200005b3bf7 : ret 0xecb3
0x00000200001d0efa : ret 0xecdc
0x000002000001a5ee : ret 0xeceb
0x0000020000162e9a : ret 0xecf9
0x00000200005b5a0c : ret 0xed08
0x00000200004309ba : ret 0xed1a
0x0000020000430c9d : ret 0xed1b
0x000002000016325a : ret 0xed1c
0x00000200004305aa : ret 0xed22
0x00000200001f3ab6 : ret 0xed33
0x00000200005b7516 : ret 0xed48
0x000002000067d78a : ret 0xed53
0x000002000016514b : ret 0xed56
0x00000200001761ca : ret 0xed72
0x000002000075c7f7 : ret 0xed75
0x00000200001b204a : ret 0xed76
0x000002000052bd14 : ret 0xed77
0x00000200001765cd : ret 0xed94
0x00000200001772a9 : ret 0xed9d
0x0000020000147a2a : ret 0xeda7
0x00000200001671bd : ret 0xedac
0x000002000014702a : ret 0xedb1
0x00000200001e596a : ret 0xedc1
0x00000200000775a1 : ret 0xede8
0x0000020000661bf9 : ret 0xedeb
0x00000200005bab55 : ret 0xee04
0x0000020000178d5e : ret 0xee12
0x00000200005bb14a : ret 0xee47
0x000002000013582e : ret 0xee72
0x000002000008238f : ret 0xee75
0x000002000009904d : ret 0xee8
0x00000200005c2dba : ret 0xee9c
0x000002000013e009 : ret 0xeeb
0x0000020000153701 : ret 0xeeb9
0x000002000057e6df : ret 0xeed1
0x00000200005bfade : ret 0xeeea
0x0000020000014806 : ret 0xeeeb
0x00000200001d538a : ret 0xef0b
0x00000200005c0016 : ret 0xef13
0x000002000074fffe : ret 0xef20
0x00000200005c1b56 : ret 0xef38
0x000002000017db6c : ret 0xef5b
0x0000020000049f03 : ret 0xef72
0x00000200000b8a9e : ret 0xef75
0x000002000017e95a : ret 0xef99
0x00000200003dbb7e : ret 0xefbb
0x000002000065cc4b : ret 0xefeb
0x0000020000085062 : ret 0xf
0x00000200000ea1fc : ret 0xf00
0x000002000000a5a6 : ret 0xf000
0x00000200005c5a96 : ret 0xf002
0x00000200001f451c : ret 0xf003
0x000002000018044d : ret 0xf004
0x00000200000f6697 : ret 0xf00b
0x00000200000094ae : ret 0xf01
0x0000020000006e5f : ret 0xf02
0x00000200000f3bd0 : ret 0xf024
0x00000200000556f7 : ret 0xf025
0x0000020000041af3 : ret 0xf03
0x000002000048d2b8 : ret 0xf03b
0x000002000017b78b : ret 0xf04
0x000002000006a59a : ret 0xf07
0x00000200005c861c : ret 0xf071
0x0000020000135428 : ret 0xf072
0x0000020000082303 : ret 0xf074
0x0000020000224979 : ret 0xf075
0x00000200006b5e0e : ret 0xf07e
0x00000200000344e3 : ret 0xf08
0x000002000022502d : ret 0xf0c
0x00000200001676ab : ret 0xf0e
0x00000200000278d0 : ret 0xf0f
0x000002000060cef8 : ret 0xf0ff
0x000002000001a8b5 : ret 0xf10
0x000002000012d23f : ret 0xf105
0x0000020000187c5b : ret 0xf11f
0x0000020000069db2 : ret 0xf12
0x00000200001882f0 : ret 0xf12d
0x000002000018832b : ret 0xf12e
0x00000200000760a5 : ret 0xf15
0x000002000021d1ba : ret 0xf15f
0x00000200001a5012 : ret 0xf172
0x0000020000224c1f : ret 0xf175
0x0000020000519766 : ret 0xf176
0x0000020000502812 : ret 0xf18b
0x000002000018b3b8 : ret 0xf1ac
0x000002000018bfac : ret 0xf1be
0x000002000046d6bc : ret 0xf1c
0x000002000018cb48 : ret 0xf1dc
0x0000020000075bd3 : ret 0xf1e
0x00000200001572ba : ret 0xf1e1
0x000002000004a5e1 : ret 0xf1f
0x00000200000328f4 : ret 0xf20
0x00000200001655ba : ret 0xf20b
0x00000200003b49ef : ret 0xf21
0x000002000002f683 : ret 0xf21c
0x000002000057965a : ret 0xf23c
0x00000200000c6c9b : ret 0xf24
0x000002000018e734 : ret 0xf24a
0x00000200003ab442 : ret 0xf24c
0x000002000018e901 : ret 0xf24d
0x000002000066e48c : ret 0xf272
0x000002000007b845 : ret 0xf275
0x000002000019906a : ret 0xf28a
0x00000200006ba74c : ret 0xf28b
0x000002000013ceea : ret 0xf2b4
0x00000200000c6da3 : ret 0xf2c0
0x00000200001563ca : ret 0xf2ed
0x00000200000875f2 : ret 0xf30
0x00000200006171ca : ret 0xf32f
0x00000200004ee7e2 : ret 0xf338
0x000002000017954a : ret 0xf370
0x0000020000602b20 : ret 0xf38
0x000002000076702a : ret 0xf382
0x0000020000196069 : ret 0xf3a5
0x0000020000196254 : ret 0xf3af
0x0000020000768cca : ret 0xf3b7
0x0000020000116a40 : ret 0xf3f
0x00000200006d735a : ret 0xf3ff
0x0000020000021818 : ret 0xf40
0x000002000019739a : ret 0xf40e
0x0000020000025a3d : ret 0xf41
0x000002000004ad70 : ret 0xf42
0x00000200001142db : ret 0xf43
0x000002000000967f : ret 0xf44
0x00000200001fee7a : ret 0xf44a
0x0000020000074017 : ret 0xf45
0x000002000064953e : ret 0xf46
0x00000200002087fa : ret 0xf46c
0x00000200004dd3e4 : ret 0xf47
0x00000200000d9789 : ret 0xf472
0x0000020000024e83 : ret 0xf48
0x0000020000156786 : ret 0xf484
0x0000020000022b3d : ret 0xf49
0x00000200002059fa : ret 0xf49a
0x000002000008e060 : ret 0xf4c
0x00000200000a5096 : ret 0xf4d
0x00000200001733b4 : ret 0xf4e
0x000002000017f485 : ret 0xf4e9
0x00000200005cc472 : ret 0xf4ea
0x00000200005cc5d8 : ret 0xf4ec
0x0000020000757ffe : ret 0xf4ff
0x00000200005cd014 : ret 0xf510
0x000002000019c1ca : ret 0xf52b
0x00000200005cdf2b : ret 0xf53c
0x00000200005ce225 : ret 0xf543
0x000002000011912f : ret 0xf55
0x00000200005f0eba : ret 0xf568
0x00000200005d0bdb : ret 0xf5c6
0x0000020000520a3d : ret 0xf5e8
0x00000200001cfdd6 : ret 0xf5ee
0x00000200005d31fd : ret 0xf5f2
0x00000200000c7f4c : ret 0xf602
0x00000200005d4a28 : ret 0xf617
0x000002000057c58b : ret 0xf61d
0x000002000057c6d5 : ret 0xf623
0x0000020000084c9d : ret 0xf633
0x000002000018624f : ret 0xf640
0x00000200000468df : ret 0xf641
0x00000200000a24ab : ret 0xf66
0x00000200005d726a : ret 0xf679
0x0000020000052c6c : ret 0xf685
0x00000200005d856d : ret 0xf68b
0x00000200005d87f7 : ret 0xf698
0x00000200005d8c87 : ret 0xf69c
0x0000020000156984 : ret 0xf6bf
0x000002000056e8d4 : ret 0xf6cb
0x000002000058ca6a : ret 0xf6e6
0x00000200000db584 : ret 0xf6e8
0x0000020000416b6d : ret 0xf6ff
0x00000200007673d1 : ret 0xf70c
0x0000020000130f05 : ret 0xf72
0x00000200001a6cef : ret 0xf73
0x000002000058e111 : ret 0xf73b
0x00000200001fafc9 : ret 0xf74
0x0000020000043744 : ret 0xf741
0x000002000000933d : ret 0xf748
0x000002000001d040 : ret 0xf749
0x00000200002005a8 : ret 0xf75
0x00000200005d1c3c : ret 0xf75f
0x000002000069ea76 : ret 0xf766
0x00000200005362ba : ret 0xf767
0x000002000044cffa : ret 0xf77
0x00000200003a2913 : ret 0xf774
0x0000020000591ba6 : ret 0xf77a
0x000002000059230b : ret 0xf77b
0x0000020000649381 : ret 0xf799
0x00000200000b3b52 : ret 0xf7a0
0x0000020000595b06 : ret 0xf7a9
0x00000200000d1bca : ret 0xf7d3
0x00000200000ff86b : ret 0xf7e8
0x00000200004394a0 : ret 0xf7f
0x000002000047e693 : ret 0xf7f7
0x0000020000425c4e : ret 0xf7ff
0x0000020000588c90 : ret 0xf80
0x00000200006020cf : ret 0xf803
0x000002000012d20f : ret 0xf80b
0x00000200000419ae : ret 0xf824
0x0000020000776a82 : ret 0xf831
0x000002000019e70e : ret 0xf863
0x000002000001bacc : ret 0xf883
0x00000200001a235c : ret 0xf886
0x0000020000629e46 : ret 0xf8ba
0x0000020000497d3b : ret 0xf8c1
0x00000200001a6aba : ret 0xf8c6
0x000002000001849a : ret 0xf8d1
0x00000200001c30aa : ret 0xf8d4
0x00000200001a4b2d : ret 0xf8dc
0x000002000019e25a : ret 0xf8ec
0x00000200000ea0b3 : ret 0xf91
0x000002000016a9ef : ret 0xf933
0x00000200005b6985 : ret 0xf93b
0x00000200004ceaeb : ret 0xf96
0x0000020000107dfa : ret 0xf96d
0x000002000016d7ca : ret 0xf981
0x00000200001f867a : ret 0xf983
0x00000200001e251a : ret 0xf99
0x000002000016dd14 : ret 0xf992
0x000002000016df5a : ret 0xf997
0x00000200004aa10a : ret 0xf99d
0x000002000075e492 : ret 0xf9b9
0x000002000004a963 : ret 0xf9c1
0x000002000016f619 : ret 0xf9df
0x000002000018ce7a : ret 0xf9e9
0x000002000016f7b2 : ret 0xf9ed
0x000002000016fd46 : ret 0xf9ff
0x00000200004c5d7a : ret 0xfa15
0x000002000000806b : ret 0xfa2b
0x0000020000172307 : ret 0xfa65
0x00000200006c7931 : ret 0xfa80
0x000002000042528e : ret 0xfa81
0x000002000019a1bd : ret 0xfa83
0x00000200001081cd : ret 0xfa8b
0x0000020000199f7a : ret 0xfa99
0x00000200006b7949 : ret 0xfaba
0x000002000008ab82 : ret 0xfaf1
0x000002000019c5fa : ret 0xfb2e
0x000002000046d04e : ret 0xfb30
0x000002000051a7de : ret 0xfb81
0x00000200000b88c1 : ret 0xfb83
0x00000200005cee7e : ret 0xfb8b
0x00000200001c625b : ret 0xfbe8
0x000002000056e4a2 : ret 0xfbe9
0x000002000064a309 : ret 0xfbf
0x0000020000003d6d : ret 0xfc0
0x000002000040586a : ret 0xfc04
0x00000200000385b2 : ret 0xfc3
0x0000020000752852 : ret 0xfc57
0x00000200005033da : ret 0xfc5c
0x000002000017d17a : ret 0xfc67
0x00000200000e98fa : ret 0xfc81
0x000002000017a47a : ret 0xfc94
0x000002000050c40a : ret 0xfc99
0x0000020000086b2a : ret 0xfcaa
0x00000200004f405a : ret 0xfcae
0x0000020000629e60 : ret 0xfcba
0x00000200000b2602 : ret 0xfcc
0x00000200001b94fe : ret 0xfce8
0x00000200004aca72 : ret 0xfce9
0x000002000013c9c6 : ret 0xfd0
0x000002000056e9ea : ret 0xfd36
0x00000200000ebada : ret 0xfd4c
0x00000200000506fa : ret 0xfd5b
0x0000020000775fcc : ret 0xfd64
0x000002000010f5c3 : ret 0xfd83
0x000002000057299a : ret 0xfd87
0x0000020000463210 : ret 0xfd8b
0x00000200003a65a2 : ret 0xfd8e
0x00000200001131ba : ret 0xfd8f
0x00000200005744fa : ret 0xfde1
0x000002000015a75d : ret 0xfde8
0x0000020000063c19 : ret 0xfe00
0x0000020000162f7a : ret 0xfe09
0x000002000006b5ff : ret 0xfe24
0x000002000005375c : ret 0xfe25
0x000002000015d31a : ret 0xfe33
0x00000200007792a9 : ret 0xfe38
0x00000200007796be : ret 0xfe3a
0x000002000001d45a : ret 0xfe41
0x00000200006cb30a : ret 0xfe70
0x000002000077b2f3 : ret 0xfe7e
0x00000200000f1615 : ret 0xfe83
0x000002000066c333 : ret 0xfe8b
0x00000200000ab733 : ret 0xfe9
0x00000200001b6a3f : ret 0xfeb
0x0000020000577eca : ret 0xfee9
0x00000200003aa455 : ret 0xfef5
0x000002000077e178 : ret 0xfef6
0x000002000077e078 : ret 0xfef7
0x000002000010d1ef : ret 0xff
0x000002000003731d : ret 0xff0
0x00000200000cd507 : ret 0xff00
0x0000020000148e25 : ret 0xff02
0x0000020000040c67 : ret 0xff04
0x000002000021cd68 : ret 0xff08
0x00000200004e00c6 : ret 0xff09
0x00000200002104c4 : ret 0xff10
0x00000200005cef44 : ret 0xff14
0x00000200006bc68e : ret 0xff2
0x000002000015eaca : ret 0xff20
0x00000200003ae335 : ret 0xff24
0x0000020000082c97 : ret 0xff25
0x0000020000134d4d : ret 0xff3
0x0000020000207b90 : ret 0xff33
0x00000200000cceca : ret 0xff37
0x0000020000008332 : ret 0xff41
0x00000200000055f4 : ret 0xff48
0x000002000004b022 : ret 0xff49
0x000002000014e8fa : ret 0xff54
0x00000200003a8d4e : ret 0xff5f
0x00000200005b0f6b : ret 0xff60
0x0000020000087db4 : ret 0xff66
0x00000200003a2c6d : ret 0xff7f
0x0000020000040061 : ret 0xff80
0x0000020000439a62 : ret 0xff85
0x0000020000774e48 : ret 0xff89
0x0000020000776fd9 : ret 0xff8c
0x0000020000746cbb : ret 0xff95
0x00000200006ce0b8 : ret 0xff99
0x00000200006bc211 : ret 0xff9a
0x00000200006c60e8 : ret 0xff9b
0x0000020000764b41 : ret 0xff9d
0x00000200006247b6 : ret 0xff9e
0x000002000065e834 : ret 0xff9f
0x00000200001488e1 : ret 0xffa
0x000002000062586f : ret 0xffa0
0x00000200006b3989 : ret 0xffa1
0x00000200003aa8b4 : ret 0xffa3
0x00000200005ce346 : ret 0xffa4
0x00000200005f5dcf : ret 0xffa5
0x00000200005859ad : ret 0xffa8
0x000002000062693b : ret 0xffa9
0x00000200005a294d : ret 0xffaa
0x0000020000607493 : ret 0xffab
0x000002000058547c : ret 0xffac
0x00000200005e7489 : ret 0xffad
0x0000020000562831 : ret 0xffae
0x00000200006364d8 : ret 0xffaf
0x00000200006176df : ret 0xffb0
0x00000200005a5bd1 : ret 0xffb1
0x0000020000595831 : ret 0xffb2
0x00000200005f6f01 : ret 0xffb3
0x00000200005760cb : ret 0xffb4
0x0000020000560aee : ret 0xffb5
0x00000200005d3f49 : ret 0xffb6
0x00000200004d75a1 : ret 0xffb7
0x0000020000061f23 : ret 0xffb8
0x00000200001b4bc2 : ret 0xffb9
0x0000020000025fe3 : ret 0xffba
0x00000200004f6512 : ret 0xffbb
0x000002000047203c : ret 0xffbc
0x0000020000471f59 : ret 0xffbd
0x00000200005021c4 : ret 0xffbe
0x0000020000536e7e : ret 0xffbf
0x000002000042a749 : ret 0xffc1
0x000002000057a925 : ret 0xffc2
0x000002000041c34d : ret 0xffc3
0x00000200003c95a1 : ret 0xffc4
0x000002000040ad12 : ret 0xffc5
0x00000200004558c2 : ret 0xffc6
0x0000020000445c16 : ret 0xffc7
0x00000200004365a9 : ret 0xffc8
0x0000020000072274 : ret 0xffc9
0x000002000041617e : ret 0xffca
0x0000020000405bff : ret 0xffcb
0x000002000039bd30 : ret 0xffcc
0x00000200003eb736 : ret 0xffcd
0x00000200003d5879 : ret 0xffce
0x0000020000534d14 : ret 0xffcf
0x00000200005ccb7c : ret 0xffd0
0x00000200004243d2 : ret 0xffd1
0x00000200005059ee : ret 0xffd2
0x00000200004131d5 : ret 0xffd3
0x00000200004e5aca : ret 0xffd4
0x0000020000622050 : ret 0xffd5
0x00000200004caf01 : ret 0xffd6
0x00000200003b6e9e : ret 0xffd7
0x00000200006935cd : ret 0xffd8
0x0000020000494d92 : ret 0xffd9
0x00000200000d3cea : ret 0xffda
0x00000200005748c6 : ret 0xffdb
0x0000020000503e20 : ret 0xffdc
0x00000200004e3eab : ret 0xffde
0x00000200000887fa : ret 0xffdf
0x000002000042beb7 : ret 0xffe
0x0000020000431e22 : ret 0xffe0
0x0000020000414db0 : ret 0xffe1
0x00000200003a85ea : ret 0xffe2
0x0000020000208992 : ret 0xffe3
0x00000200001df928 : ret 0xffe4
0x000002000048a29e : ret 0xffe5
0x000002000020efa6 : ret 0xffe6
0x00000200000c8696 : ret 0xffe7
0x00000200001cd8a9 : ret 0xffe8
0x000002000019f9f8 : ret 0xffe9
0x0000020000157570 : ret 0xffea
0x00000200001a58ae : ret 0xffeb
0x0000020000161b1f : ret 0xffec
0x0000020000167e9e : ret 0xffed
0x00000200001677c2 : ret 0xffee
0x000002000006e9ce : ret 0xffef
0x00000200000228a9 : ret 0xfff
0x00000200001251da : ret 0xfff0
0x000002000017b73e : ret 0xfff1
0x0000020000193710 : ret 0xfff2
0x0000020000195d89 : ret 0xfff3
0x0000020000105907 : ret 0xfff4
0x00000200000946dd : ret 0xfff5
0x00000200000c7175 : ret 0xfff6
0x00000200001f4632 : ret 0xfff7
0x000002000000f406 : ret 0xfff8
0x00000200000cdced : ret 0xfff9
0x0000020000054dfd : ret 0xfffa
0x000002000001d1fb : ret 0xfffb
0x0000020000022999 : ret 0xfffc
0x000002000003a4e2 : ret 0xfffd
0x00000200000069c6 : ret 0xfffe
0x000002000002f817 : ret 0xffff
0x0000020000004226 : ret 1
0x000002000001608c : ret 2
0x0000020000020cc9 : ret 3
0x000002000007b7dd : ret 4
0x000002000000669a : ret 5
0x0000020000046500 : ret 6
0x0000020000120f21 : ret 7
0x00000200000dbbe7 : ret 8
0x0000020000029d32 : ret 9
0x0000020000018465 : retf -0x2eb8 ; jmp 0x1ffc284c5da
0x000002000004f6c3 : retf -0x3e75 ; cmovg eax, edx ; jmp 0x2000004f6d3
0x00000200001ef5d8 : retf -0x3eb8 ; call 0x1ffc2423de9
0x00000200004ed673 : retf -0x3eb8 ; call 0x1ffc2721e84
0x00000200004f9ca1 : retf -0x3eb8 ; call 0x1ffc272e4b2
0x000002000075eae7 : retf -0x3eb8 ; call 0x1ffc29932f8
0x0000020000030dfb : retf -0x3eb8 ; jmp 0x20048c59929
0x0000020000096484 : retf -0x45f1 ; jmp 0x1fff0cbefb0
0x00000200000d20cc : retf -0x72b8 ; push rbp ; loopne 0x200000d2119 ; call rbx
0x0000020000493890 : retf -0x76b3 ; jnp 0x2000049385d ; call 0x200000b9058
0x000002000042c44d : retf -0x7cb8 ; and byte ptr [rax], al ; jmp 0x2000042c41c
0x0000020000101f56 : retf -2 ; call rcx
0x00000200001858be : retf 0x1602 ; add byte ptr [rax - 0x75], cl ; clc ; jmp 0x20000091b53
0x000002000041febf : retf 0x48ff ; mov ecx, ebx ; call 0x2000004505c
0x0000020000639d2d : retf 0x48ff ; test eax, eax ; je 0x20000639d3d ; call rax
0x00000200001da35c : retf 0x575 ; mov eax, r10d ; jmp 0x200001da390
0x00000200006aa7c2 : retf 0x5c89 ; and al, 0x20 ; call qword ptr [rip - 0x3db2bd]
0x00000200006aa81a : retf 0x5c89 ; and al, 0x20 ; call qword ptr [rip - 0x3db30d]
0x0000020000460690 : retf 0x772 ; jmp 0x200004606af
0x00000200001593c4 : retf ; add al, 0xe9 ; loopne 0x200001593ff ; jmp 0x200001593d3
0x000002000049cdf1 : retf ; add rsp, 0x20 ; pop rbx ; jmp 0x200000c1b39
0x000002000007b7d5 : retf ; add rsp, 0x20 ; pop rbx ; jmp 0x200000c7a28
0x0000020000206771 : retf ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000002000069793c : retf ; add rsp, 0x28 ; jmp qword ptr [r10]
0x00000200003cc8fb : retf ; call 0x20000016acc
0x00000200001c3e6b : retf ; call 0x20000027388
0x00000200001f17a9 : retf ; call 0x2000002b80d
0x000002000041d2be : retf ; call 0x20000042aa4
0x000002000041f98b : retf ; call 0x20000044dbc
0x000002000041fec3 : retf ; call 0x20000045058
0x0000020000517030 : retf ; call 0x20000049680
0x000002000004bbdf : retf ; call 0x2000004ca09
0x000002000056282e : retf ; call 0x2000004eb23
0x00000200005629a4 : retf ; call 0x2000004ec1b
0x00000200004247b8 : retf ; call 0x20000051688
0x000002000076ac58 : retf ; call 0x20000054b48
0x000002000017bc41 : retf ; call 0x20000057869
0x00000200005a4d4e : retf ; call 0x200000597f8
0x000002000042e0fa : retf ; call 0x2000005abbc
0x000002000042dc99 : retf ; call 0x2000005c78c
0x00000200006bc20e : retf ; call 0x200000684c3
0x0000020000445e55 : retf ; call 0x20000074618
0x0000020000456f85 : retf ; call 0x2000008239c
0x00000200004757d1 : retf ; call 0x2000009a244
0x00000200004756d5 : retf ; call 0x2000009a2cc
0x00000200004756f3 : retf ; call 0x2000009a484
0x00000200003e4dd4 : retf ; call 0x2000009b3b7
0x0000020000475291 : retf ; call 0x2000009b444
0x0000020000475e98 : retf ; call 0x2000009db84
0x00000200000b0cfd : retf ; call 0x200000b1829
0x00000200004973de : retf ; call 0x200000b8094
0x000002000048e14f : retf ; call 0x200000bcd24
0x00000200004558bf : retf ; call 0x200000c1b33
0x000002000049d556 : retf ; call 0x200000c1b34
0x00000200001b3fb1 : retf ; call 0x200000c23c7
0x000002000049777e : retf ; call 0x200000c2544
0x00000200004065fc : retf ; call 0x200000c2843
0x0000020000616e65 : retf ; call 0x200000c36c8
0x0000020000516c01 : retf ; call 0x200000ccd98
0x00000200004c1c7c : retf ; call 0x200000e7994
0x00000200004c3224 : retf ; call 0x200000e9464
0x00000200004c8049 : retf ; call 0x200000ecdcc
0x00000200004c9272 : retf ; call 0x200000edda8
0x00000200004cadfb : retf ; call 0x200000eebe8
0x00000200004cb942 : retf ; call 0x200000ef374
0x00000200004ccd50 : retf ; call 0x200000f5398
0x00000200000fcbb9 : retf ; call 0x200000f8ddf
0x0000020000105c3f : retf ; call 0x20000105cc0
0x00000200004eaa41 : retf ; call 0x20000117680
0x00000200004f5ff2 : retf ; call 0x20000122924
0x000002000051301b : retf ; call 0x20000140464
0x0000020000525339 : retf ; call 0x2000014f184
0x000002000068d837 : retf ; call 0x2000014f188
0x000002000052ea6d : retf ; call 0x2000014f4c4
0x0000020000460cb5 : retf ; call 0x2000014f4c8
0x000002000058fb9a : retf ; call 0x200001bd2c0
0x0000020000185499 : retf ; call 0x200001c1723
0x00000200006b585f : retf ; call 0x200001d1b27
0x00000200005afea4 : retf ; call 0x200001dd6ec
0x00000200005c04bd : retf ; call 0x200001eca2c
0x000002000064a207 : retf ; call 0x200001f649b
0x000002000064a57e : retf ; call 0x200001f67d3
0x000002000064a504 : retf ; call 0x200001f67fb
0x000002000064a571 : retf ; call 0x200001f6843
0x000002000064a7e9 : retf ; call 0x200001f6a57
0x00000200005c4d35 : retf ; call 0x20000231013
0x0000020000601b49 : retf ; call 0x20000231014
0x000002000066c0cb : retf ; call 0x20000231017
0x000002000074f4e8 : retf ; call 0x20000231019
0x0000020000605650 : retf ; call 0x20000231ce4
0x000002000061cbed : retf ; call 0x200003e8e87
0x000002000040e440 : retf ; call 0x2000040e464
0x0000020000543b27 : retf ; call 0x2000042d720
0x000002000051de5a : retf ; call 0x2000043488c
0x0000020000468333 : retf ; call 0x2000046836c
0x00000200004a3bf7 : retf ; call 0x2000049fe03
0x0000020000443d76 : retf ; call 0x200004a0063
0x000002000044e242 : retf ; call 0x200004ba493
0x00000200005a0648 : retf ; call 0x2000063c89f
0x00000200005d21d8 : retf ; call 0x2000069e44b
0x00000200006c16a2 : retf ; call 0x200006c1c78
0x00000200006b4bc4 : retf ; call 0x200006c5ef3
0x000002000075cbf1 : retf ; call 0x20000768ee3
0x00000200001d2247 : retf ; call qword ptr [r11]
0x000002000051e6f6 : retf ; call qword ptr [rax]
0x00000200001d273d : retf ; call qword ptr [rbx]
0x00000200001a934b : retf ; call r10
0x0000020000153062 : retf ; call r11
0x0000020000134922 : retf ; call r14
0x00000200004b32ff : retf ; call r15
0x000002000013d0c4 : retf ; call r8
0x0000020000029076 : retf ; call rax
0x000002000077c464 : retf ; call rbx
0x00000200001c7018 : retf ; call rdi
0x00000200003f85c5 : retf ; call rsi
0x000002000047fe08 : retf ; cmovb r14, rdi ; jmp 0x2000047fdd8
0x0000020000406c9a : retf ; inc dword ptr [rcx - 0x75] ; or byte ptr [r11], r14b ; call rbx
0x0000020000452afd : retf ; insb byte ptr [rdi], dx ; idiv edi ; test eax, eax ; je 0x20000452af6 ; jmp 0x20000452ad3
0x00000200001c57af : retf ; jmp 0x200001c579a
0x000002000039ea0b : retf ; jmp 0x2000039e9d3
0x000002000048e151 : retf ; jmp 0x2000048e118
0x00000200003f3950 : retf ; lea edx, dword ptr [r8 + 1] ; call 0x2000001abc8
0x00000200001d23d5 : retf ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r11]
0x00000200004980b5 : retf ; lea r8d, dword ptr [rax + 1] ; call 0x200000bab48
0x000002000057b1e0 : retf ; lea r8d, dword ptr [rdx + 0x10] ; call 0x200001a6b64
0x00000200003f1819 : retf ; lea r8d, dword ptr [rdx + 1] ; call 0x2000001abc8
0x000002000060eae5 : retf ; mov dword ptr [rax + 0xc], r12d ; call 0x20000231ce8
0x00000200004d0729 : retf ; mov dword ptr [rsp + 0x20], eax ; call r10
0x000002000049e811 : retf ; mov ebp, 0xd233ffe5 ; call 0x200000c2849
0x0000020000403ef8 : retf ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000040ad0a : retf ; mov qword ptr [rsp + 0x20], rsi ; call 0x20000067014
0x000002000046c021 : retf ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x00000200001a9e15 : retf ; mov r8, qword ptr [rip + 0x1d568b] ; call r8
0x0000020000694e2b : retf ; mov r8d, edi ; mov rdx, rsi ; call rax
0x00000200006160af : retf ; mov r8d, edx ; call 0x200004e22c6
0x00000200001f547f : retf ; mov r8d, edx ; jmp 0x200001f548b
0x00000200005953a5 : retf ; mov r8d, esi ; mov rdx, rbp ; call rax
0x000002000019eca1 : retf ; mov rax, qword ptr [rip + 0x13a2f7] ; call rax
0x000002000019ec77 : retf ; mov rax, qword ptr [rip + 0x13a321] ; call rax
0x000002000019eba8 : retf ; mov rax, qword ptr [rip + 0x13a3f0] ; call rax
0x00000200001b7d9e : retf ; mov rax, qword ptr [rip + 0x1c7702] ; call rax
0x00000200001a9fd5 : retf ; mov rax, qword ptr [rip + 0x1d54cb] ; call rax
0x00000200001a9f5c : retf ; mov rax, qword ptr [rip + 0x1d5544] ; call rax
0x00000200003b2436 : retf ; mov rax, qword ptr [rip - 0xd9716] ; call rax
0x00000200001d26d5 : retf ; mov rdx, qword ptr [rax + 0x28] ; shr rdx, 0xc ; call qword ptr [rbx]
0x00000200005c43d6 : retf ; mov rdx, qword ptr [rax + 0xb8] ; call r14
0x00000200006c95d4 : retf ; mov rsi, rax ; call qword ptr [rdi]
0x00000200005ed38d : retf ; sar bh, 1 ; call 0x200000264e9
0x00000200001677bd : retf ; sbb dword ptr [rax], eax ; call 0x20000053a7d
0x00000200004c3bcd : retf ; test edx, edx ; jne 0x200004c3c30 ; call 0x200000eb5b8
0x00000200005799ed : retf ; xor edx, edx ; call 0x200001a6b62
0x000002000057aac9 : retf ; xor edx, edx ; mov rcx, r14 ; call 0x200001a6b65
0x0000020000217c93 : rol ah, 0x41 ; jle 0x20000217d0f ; push rax ; loopne 0x20000217c67 ; ret 0x187d
0x00000200006a8a84 : rol ah, 1 ; inc dword ptr [rax + rcx*4 + 0x3d] ; mov al, 0xd5 ; ret
0x00000200004b6ef5 : rol al, 0xe0 ; add al, 0x32 ; ret
0x00000200005a7b8d : rol al, 0xe0 ; add esi, dword ptr [rdx] ; ret
0x000002000045ddd1 : rol al, 0xea ; add ecx, dword ptr [rax - 0x75] ; int 0x80
0x000002000050c976 : rol bh, 0x83 ; ret 1
0x000002000064b638 : rol bl, 0x33 ; leave ; jmp rax
0x0000020000020a30 : rol bl, 0x41 ; mov eax, ecx ; ret
0x00000200006c8fee : rol bl, 0x48 ; add eax, -8 ; ret
0x000002000064b614 : rol bl, 0x48 ; jmp rax
0x000002000012441e : rol bl, 0x48 ; jmp rcx
0x000002000061ec95 : rol bl, 0x48 ; lea eax, dword ptr [rcx - 0x10] ; ret
0x0000020000123828 : rol bl, 0x48 ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x000002000067eb06 : rol bl, 0x48 ; mov eax, dword ptr [rcx + 0x220] ; ret
0x00000200000064b2 : rol bl, 0x48 ; mov eax, dword ptr [rip + 0x6f2dc5] ; ret
0x0000020000135fff : rol bl, 0x48 ; mov eax, ecx ; ret
0x000002000013341c : rol bl, 0x48 ; sbb eax, eax ; sbb rax, -1 ; ret
0x000002000007bbb8 : rol bl, 0x48 ; shr eax, 0x20 ; ret
0x00000200001334ab : rol bl, 0x49 ; mov eax, eax ; ret
0x000002000001e8e3 : rol bl, 0x49 ; mov eax, ecx ; ret
0x00000200004443a2 : rol bl, 0x4c ; add eax, edx ; jmp 0x20000444398
0x000002000044c95b : rol bl, 0x4c ; add eax, edx ; jmp 0x2000044c951
0x000002000068eb23 : rol bl, 0x4d ; mov dword ptr [rax], ecx ; xor eax, eax ; ret
0x0000020000647d49 : rol bl, 0x66 ; mov dword ptr [r10], r9d ; mov al, 1 ; ret
0x00000200000730e9 : rol bl, 0x89 ; add bh, byte ptr [rax - 0x3fffff6b] ; ret
0x0000020000021d80 : rol bl, 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x000002000002d3d0 : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000506d3f : rol bl, 0xb8 ; add eax, dword ptr [rax] ; add al, al ; ret
0x00000200005fd214 : rol bl, 0xb8 ; and al, byte ptr [rax] ; add al, al ; ret
0x00000200005fd0d0 : rol bl, 0xb8 ; and eax, dword ptr [rax] ; add al, al ; ret
0x00000200005fd220 : rol bl, 0xb8 ; cmp byte ptr [rax], al ; add al, al ; ret
0x00000200005fd1bd : rol bl, 0xb8 ; jb 0x200005fd1cb ; add al, al ; ret
0x00000200005fd143 : rol bl, 0xb8 ; jg 0x200005fd14f ; add al, al ; ret
0x00000200003d9e22 : rol bl, 0xb8 ; jns 0x200003d9e2e ; add al, al ; ret
0x000002000043eeaf : rol bl, 0xb8 ; jns 0x2000043eebb ; add al, al ; ret
0x00000200004d6a4a : rol bl, 0xb8 ; jns 0x200004d6a56 ; add al, al ; ret
0x00000200004d6aa2 : rol bl, 0xb8 ; jns 0x200004d6aae ; add al, al ; ret
0x00000200000ff7bb : rol bl, 0xb8 ; sbb eax, dword ptr [rdx] ; add al, al ; ret
0x00000200005fd137 : rol bl, 0xb8 ; test dword ptr [rcx], eax ; add al, al ; ret
0x0000020000073405 : rol bl, 0xb8 ; xor al, 0 ; add al, al ; ret
0x00000200000733ff : rol bl, 0xb8 ; xor eax, dword ptr [rax] ; add al, al ; ret
0x0000020000439b8c : rol bl, 0xc1 ; call 0x200332686a5
0x00000200001cb943 : rol bl, 0xc7 ; add eax, 0x12faa9 ; ret 0
0x000002000004136d : rol bl, 0xcc ; lock dec dword ptr [rcx] ; ret
0x00000200005460e1 : rol bl, 0xcc ; mov eax, dword ptr [rcx + 0xc] ; sub eax, dword ptr [rcx + 8] ; ret
0x000002000014f5ed : rol bl, 0xcc ; mov eax, ecx ; ret
0x000002000010de57 : rol bl, 0xd ; add byte ptr [rax], al ; add ah, bh ; ret
0x00000200001f0f10 : rol bl, 0xf6 ; ret 0x7407
0x00000200000b27e7 : rol bl, 1 ; lea rax, qword ptr [rip + 0x24a490] ; ret
0x00000200005236a4 : rol byte ptr [r13 + rcx*4 + 0x42], 0x40 ; call 0x2000014f4c9
0x00000200003dd65f : rol byte ptr [r13 + rcx*4 + 0x46], 1 ; ret 0x44c7
0x00000200005a9250 : rol byte ptr [r9 - 0x75], 1 ; salc ; call rax
0x000002000062d29a : rol byte ptr [r9], 1 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x8948
0x0000020000779e03 : rol byte ptr [rax + 0x14], 0x39 ; add al, ch ; ret
0x000002000022574e : rol byte ptr [rax + 0x48], 0x3b ; ret
0x000002000073ca18 : rol byte ptr [rax + 0x48], 0x3b ; ret 0xf472
0x00000200001c5371 : rol byte ptr [rax + 0x48], 0x83 ; ret
0x000002000022b0af : rol byte ptr [rax + 0x49], 0x3b ; ret
0x00000200007332df : rol byte ptr [rax + 0x49], 0x3b ; ret 0xf472
0x0000020000146a4c : rol byte ptr [rax + 0x75], 0xd0 ; sfence ; ret
0x00000200004cb08d : rol byte ptr [rax + 0xf], 0xb6 ; imul byte ptr [rbx] ; ret 0x53b
0x0000020000058157 : rol byte ptr [rax + rax], 0 ; ret
0x000002000065f0ec : rol byte ptr [rax + rax], 1 ; add bl, dh ; movq qword ptr [rcx], mm0 ; ret
0x0000020000730532 : rol byte ptr [rax + rax], 1 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200000f31b1 : rol byte ptr [rax + rax], 1 ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200001a500e : rol byte ptr [rax + rcx*2], 0x3b ; ret 0xf172
0x0000020000052c20 : rol byte ptr [rax + rcx*2], 0x83 ; ret 0x4508
0x0000020000164572 : rol byte ptr [rax + rcx*2], 0xff ; ret 0x8348
0x00000200001e26a9 : rol byte ptr [rax - 0x49], 1 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x000002000004f420 : rol byte ptr [rax - 0x76], 0xae ; ret
0x00000200005dc88e : rol byte ptr [rax - 0x76], 0xcd ; call rsi
0x0000020000520a37 : rol byte ptr [rax - 0x7c], cl ; test byte ptr [rdi], 0x95 ; ret 0xf5e8
0x0000020000401159 : rol byte ptr [rax], 0 ; add al, ch ; jp 0x20000401181 ; ret
0x0000020000740731 : rol byte ptr [rax], 0 ; add al, ch ; ret
0x00000200001c4cf3 : rol byte ptr [rax], 0 ; add bl, ch ; fisttp word ptr [rax - 0x7d] ; ret
0x00000200000570b7 : rol byte ptr [rax], 0 ; add byte ptr [rax + rcx*4 - 0x55], al ; ret 0
0x00000200001f9a9a : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x75], cl ; ror dword ptr [rax - 0x7d], cl ; ret
0x00000200005242a9 : rol byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005c493c : rol byte ptr [rax], 0 ; add byte ptr [rbp + 0x2b], cl ; ret 0xc149
0x00000200005770a6 : rol byte ptr [rax], 0 ; add byte ptr [rbp + 0x68890fc0], al ; ret 0xffe7
0x00000200006c5551 : rol byte ptr [rax], 0 ; add byte ptr [rbp - 0x75], cl ; loopne 0x200006c54ec ; ret
0x00000200000cbebd : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x3b], al ; ret 0x830f
0x000002000008980c : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x5d], al ; pop r12 ; pop rbx ; ret
0x00000200000b8479 : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x0000020000538e65 : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x000002000048f02e : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x5f], al ; pop r12 ; pop rsi ; ret
0x0000020000495857 : rol byte ptr [rax], 0 ; add byte ptr [rcx + 0x5f], al ; pop rsi ; pop rbx ; ret
0x000002000051601a : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x39], cl ; ret
0x0000020000111d59 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x75], cl ; cmp r8b, bpl ; ret 4
0x000002000045fd75 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000740b6b : rol byte ptr [rax], 0 ; add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x00000200000a2575 : rol byte ptr [rax], 0 ; add byte ptr [rdi + 0x5b], bl ; pop rbp ; ret
0x0000020000231f4b : rol byte ptr [rax], 0 ; add byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000048d1cc : rol byte ptr [rax], 0 ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x8b48
0x000002000006fe49 : rol byte ptr [rax], 0 ; add byte ptr [rdi + rcx - 0x49], al ; ret 0xd233
0x00000200001419b5 : rol byte ptr [rax], 0 ; add cl, ch ; ret 0xc4
0x0000020000141d9b : rol byte ptr [rax], 0 ; ret
0x00000200000733f2 : rol byte ptr [rax], 0 ; sal byte ptr [rdi + rcx - 0x75], 0xc1 ; ret
0x00000200003b63f3 : rol byte ptr [rax], 0x75 ; sub edi, edi ; ret 0xfa83
0x0000020000487c24 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; call 0x20000443ed6
0x000002000008c813 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop r14 ; pop rbp ; pop rbx ; ret
0x000002000004226e : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbp ; ret
0x0000020000143b56 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000002000039cb2b : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000011b6f7 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200002073cc : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000606420 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200001b8368 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x000002000044d07c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; sub r8, r10 ; jmp 0x2000044d00d
0x0000020000148f05 : rol byte ptr [rax], 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000109e2a : rol byte ptr [rax], cl ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x0000020000141bf5 : rol byte ptr [rax], cl ; add byte ptr [rax], al ; jmp 0x2000014de86
0x00000200000417f6 : rol byte ptr [rbp + 0x2b], 1 ; ret
0x000002000040758f : rol byte ptr [rbp + 0x2b], 1 ; rol dword ptr [rbp - 0x75], cl ; ret 0xb60f
0x00000200000f1743 : rol byte ptr [rbp + 0x33], cl ; ror byte ptr [rdi - 0x75], 0xc ; ret 0x854d
0x0000020000029d2c : rol byte ptr [rbp + 0x33], cl ; shr al, 0x1b ; ret 9
0x000002000049920d : rol byte ptr [rbp + 0x33], cl ; shr al, 0x2a ; xchg eax, esi ; ret 0x48ff
0x0000020000211d3c : rol byte ptr [rbp + 0x3b], 0xc1 ; jl 0x20000211d34 ; xor eax, eax ; ret
0x00000200001ac315 : rol byte ptr [rbp + 0x3b], 0xd9 ; seta al ; ret
0x00000200001f7d30 : rol byte ptr [rbp + 0x3b], 1 ; sal byte ptr [rdi + 5], 1 ; sub r8d, r10d ; jmp 0x200001f7d4e
0x00000200004ce99c : rol byte ptr [rbp + 0x3b], cl ; pop rax ; adc byte ptr [rax + rsi - 1], dh ; ret 0x3b41
0x00000200001f4130 : rol byte ptr [rbp + 0x3b], cl ; ret
0x0000020000531d7e : rol byte ptr [rbp + 0xf0689c0], 0x95 ; ret
0x00000200001c1297 : rol byte ptr [rbp + 0xf], 0x22 ; ret 0x8a44
0x0000020000512aec : rol byte ptr [rbp + 0xf], 0x44 ; ret
0x000002000012b101 : rol byte ptr [rbp + 0xf], 0xb7 ; ret
0x000002000018756d : rol byte ptr [rbp + 0xf], cl ; ret
0x000002000039cf67 : rol byte ptr [rbp + 0xf], cl ; rol dword ptr [rcx - 0x76], cl ; ret 0xb9c3
0x00000200000fb520 : rol byte ptr [rbp + rcx*4 + 0x1c], 1 ; or eax, dword ptr [rcx - 0x75] ; ret
0x00000200005236a5 : rol byte ptr [rbp + rcx*4 + 0x42], 0x40 ; call 0x2000014f4c8
0x000002000051d529 : rol byte ptr [rbp + rcx*4 + 0x42], cl ; cmp al, ch ; lea ebx, dword ptr [rdi] ; ret
0x000002000057325a : rol byte ptr [rbp + rcx*4 + 0x42], cl ; cmp al, ch ; pop rsp ; ret 0xffbd
0x00000200003dd660 : rol byte ptr [rbp + rcx*4 + 0x46], 1 ; ret 0x44c7
0x000002000022830e : rol byte ptr [rbp + rcx*4 + 0x59], 1 ; add dword ptr [rcx - 0x7f], ecx ; ret 0xe8
0x00000200006329fc : rol byte ptr [rbp - 0x74b28b40], cl ; ret 0xc2ff
0x000002000020d34e : rol byte ptr [rbp - 0x75], 0x44 ; ret
0x0000020000521654 : rol byte ptr [rbp - 0x75], 0xe1 ; call 0x2000014f4c7
0x000002000012d0e8 : rol byte ptr [rbp - 0x75], 1 ; fisttp word ptr [rbx + 0x3449045] ; ret 0xcf05
0x0000020000091463 : rol byte ptr [rbp - 0x75], 1 ; fisttp word ptr [rcx - 9] ; ror byte ptr [rcx - 0x75], cl ; ret 0x8b41
0x0000020000200404 : rol byte ptr [rbp - 0x75], 1 ; ret 0x8b49
0x0000020000015a1c : rol byte ptr [rbp - 0x75], 1 ; ror dword ptr [rax - 9], cl ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x000002000073a16d : rol byte ptr [rbp - 0x75], cl ; ret 0x394c
0x000002000005e465 : rol byte ptr [rbp - 0x75], cl ; ret 0x3b48
0x000002000059dd72 : rol byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x000002000040f63b : rol byte ptr [rbp - 0x75], cl ; ret 0x8d45
0x00000200002032f9 : rol byte ptr [rbp - 0x75], cl ; ret 0xbb41
0x000002000010e431 : rol byte ptr [rbp - 0x75], cl ; ret 0xf45
0x0000020000159f16 : rol byte ptr [rbp - 0x77], 1 ; sbb cl, byte ptr [rcx - 0x7d] ; ret 0x4804
0x0000020000689828 : rol byte ptr [rbp - 0x77], 8 ; ret
0x00000200003f0b6d : rol byte ptr [rbp - 0x7cfc8b40], 1 ; ret 0xb9f4
0x000002000011c4f2 : rol byte ptr [rbx + 0x137202fa], 0x8b ; ret 0xd148
0x00000200003c97eb : rol byte ptr [rbx + 0x33c302c0], 0xc0 ; ret
0x00000200001e8543 : rol byte ptr [rbx + 0x74e80fe3], 1 ; jmp rdi
0x0000020000174986 : rol byte ptr [rbx + 0x7e7201f8], 0x8b ; ret 0xc148
0x00000200003a41bd : rol byte ptr [rbx + 0xf], 1 ; mov bh, 0x44 ; ret 0x6604
0x000002000006313b : rol byte ptr [rbx + rax*4], 0xc3 ; and byte ptr [rcx + 0x3b], cl ; ret 0xeb72
0x000002000062e16b : rol byte ptr [rbx + rax*4], 0xfa ; adc byte ptr [rdx - 0xf], dh ; xor al, al ; ret
0x00000200001ab6c8 : rol byte ptr [rbx + rbp*8], 0xd5 ; mov rax, rdx ; ret
0x00000200003ed5d5 : rol byte ptr [rbx + rcx*4 + 0x44], 0x24 ; cmp byte ptr [rax + 0x2b], cl ; ret 0x8b45
0x00000200003ed521 : rol byte ptr [rbx + rcx*4 + 0x44], 0x24 ; cmp byte ptr [rax + 0x2b], cl ; ret 0xd148
0x0000020000153575 : rol byte ptr [rbx + rcx*4 + 0x45], 1 ; cmp byte ptr [rdi + rcx - 0x51], al ; ret 0x40b9
0x00000200005269df : rol byte ptr [rbx + rcx*4 - 0x3d], cl ; call 0x2000014f4c7
0x00000200006023a0 : rol byte ptr [rbx + rdi + 0x66], 1 ; adc byte ptr [rcx + rcx*2 - 1], dh ; ret 0x8349
0x0000020000116c80 : rol byte ptr [rbx - 0x3700fd20], 0xc3 ; xor eax, eax ; ret
0x00000200001d786f : rol byte ptr [rbx - 0x3df4fe20], cl ; ret
0x0000020000118c39 : rol byte ptr [rbx - 0x6df0e107], 0xc0 ; ret
0x00000200000909bb : rol byte ptr [rbx - 0x72b7c01f], 0x14 ; ret
0x000002000001e7d9 : rol byte ptr [rbx - 0x75], 0x4c ; ret 0x8578
0x000002000005c7e8 : rol byte ptr [rbx - 0x75], 0x8c ; ret 0x88
0x0000020000450e9e : rol byte ptr [rbx - 0x76bee740], 0x42 ; add al, 0xf7 ; ret
0x00000200003c016e : rol byte ptr [rbx - 0x7af0cf08], 1 ; ret
0x00000200003cc57f : rol byte ptr [rbx], 0 ; add byte ptr [rax + 3], cl ; ret 0x3b48
0x000002000006fc41 : rol byte ptr [rbx], 0 ; add byte ptr [rbx + rcx*4 + 0x45], al ; sbb dh, dh ; ret
0x0000020000683dc0 : rol byte ptr [rbx], 0x23 ; ret 0x3c8d
0x000002000044e398 : rol byte ptr [rbx], 0x23 ; ret 0xd803
0x00000200004befd6 : rol byte ptr [rbx], 0x83 ; loopne 0x200004befdd ; add eax, edx ; ret
0x00000200004befd6 : rol byte ptr [rbx], 0x83 ; loopne 0x200004befde ; add eax, edx ; ret
0x000002000062c132 : rol byte ptr [rbx], 0xd8 ; jmp 0x2000062c142
0x00000200005ff968 : rol byte ptr [rbx], 0xf ; xchg eax, ebp ; ret 0xf741
0x000002000019f01f : rol byte ptr [rcx + 0x1e00e2], 1 ; add byte ptr [rbx], dh ; ret 0x589
0x0000020000209859 : rol byte ptr [rcx + 0x22], 1 ; ret
0x000002000017f463 : rol byte ptr [rcx + 0x23], 1 ; add al, 0xb ; ret 0x8b41
0x000002000017f3ba : rol byte ptr [rcx + 0x23], 1 ; add ebx, edx ; loop 0x2000017f3d3 ; ret 0x8941
0x00000200000cb386 : rol byte ptr [rcx + 0x23], 1 ; ret
0x000002000017f478 : rol byte ptr [rcx + 0x23], cl ; adc eax, dword ptr [rcx - 0x75] ; ret 0xe2d3
0x00000200001bfbf0 : rol byte ptr [rcx + 0x38], cl ; or dword ptr [rdi], ecx ; xchg eax, esp ; ret 0xc28b
0x00000200000b88f8 : rol byte ptr [rcx + 0x3b], 1 ; ret
0x00000200002311ca : rol byte ptr [rcx + 0x3b], 1 ; ret 0xd075
0x00000200005219a4 : rol byte ptr [rcx + 0x4000e2], 1 ; add byte ptr [rbx], dh ; ret 0x589
0x00000200000ad73a : rol byte ptr [rcx + 0x400e2], 1 ; add byte ptr [rbx], dh ; ret 0x4489
0x000002000073ebe1 : rol byte ptr [rcx + 0x44], 0xb ; ret
0x000002000049cf9d : rol byte ptr [rcx + 0x5e], 0x5e ; ret
0x000002000010d1ec : rol byte ptr [rcx + 0x69], cl ; ret 0xff
0x00000200000384a5 : rol byte ptr [rcx + 0xb], 1 ; add byte ptr [rbx], bh ; ret
0x00000200001bf8ef : rol byte ptr [rcx + 0xf], 0x44 ; fsubp st(0) ; xchg dword ptr [rdx - 0x1a], edi ; jmp qword ptr [rdx]
0x00000200000455ec : rol byte ptr [rcx + 0xf], 0x45 ; ret 0x4489
0x0000020000205943 : rol byte ptr [rcx + 0xf], 0x95 ; ret 0x8341
0x00000200003e1c88 : rol byte ptr [rcx + 0xf], 0x99 ; ret
0x0000020000645bd2 : rol byte ptr [rcx + 0xf], 0xa3 ; ret
0x00000200000a24cb : rol byte ptr [rcx + 0xf], 0xb6 ; ret 0xc148
0x0000020000069f9c : rol byte ptr [rcx + 0xf], 1 ; mov dh, 0xc1 ; ret
0x0000020000065cf8 : rol byte ptr [rcx + 0xf], 1 ; stosd dword ptr [rdi], eax ; ret 0xc0ff
0x0000020000417bc3 : rol byte ptr [rcx + 0xf], cl ; xchg eax, esp ; ret 0x5be8
0x000002000019d187 : rol byte ptr [rcx + rbp*8], 0xbd ; clc ; dec dword ptr [rax - 0x75] ; ret
0x00000200000630b5 : rol byte ptr [rcx + rcx*2], 0x3b ; ret 0x1b73
0x00000200000635b2 : rol byte ptr [rcx + rcx*2], 0x3b ; ret 0x830f
0x0000020000163839 : rol byte ptr [rcx + rcx*2], 0xff ; ret 0x8348
0x00000200001c18f6 : rol byte ptr [rcx + rcx*4 + 0x5c], 0x24 ; and byte ptr [rbp + 0x2b], al ; ret 0x8b48
0x00000200005152ce : rol byte ptr [rcx + rcx*4 + 0x74], 0x24 ; pop rax ; call 0x20000140da9
0x00000200000c1a58 : rol byte ptr [rcx + rcx*4 + 0xc], 0x81 ; ret
0x0000020000198ad5 : rol byte ptr [rcx + rcx], 0 ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200000a6b9e : rol byte ptr [rcx + rcx], 0 ; add byte ptr [rcx + 0x23], cl ; ret 0x3349
0x00000200000b9b70 : rol byte ptr [rcx + rcx], 0 ; add byte ptr [rcx + rcx*4 + 0x65], al ; ret
0x0000020000631ec7 : rol byte ptr [rcx + rdi + 0x1d], cl ; popfq ; ret 0xffd4
0x000002000016680c : rol byte ptr [rcx - 0x39], 0 ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000200000f19d4 : rol byte ptr [rcx - 0x3f], 0xe8 ; add al, byte ptr [rbp + 0x23] ; ret
0x00000200001e381e : rol byte ptr [rcx - 0x3f], 0xe8 ; sbb byte ptr [rbp + 0x3b], al ; ret 0x2875
0x0000020000065a2e : rol byte ptr [rcx - 0x40], 0xe8 ; add al, 0x24 ; cmove ebp, dword ptr [rdx] ; ret 0xc041
0x0000020000092235 : rol byte ptr [rcx - 0x46], 1 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x860f
0x00000200004866b2 : rol byte ptr [rcx - 0x48], 2 ; add byte ptr [rax], al ; add al, ch ; ret 0xcb9d
0x0000020000199f74 : rol byte ptr [rcx - 0x73], 0x49 ; xor al, 0xe8 ; ret 0xfa99
0x000002000017a474 : rol byte ptr [rcx - 0x73], 0x49 ; xor al, 0xe8 ; ret 0xfc94
0x000002000067d3a9 : rol byte ptr [rcx - 0x75], 0x7c ; ret
0x00000200004a6141 : rol byte ptr [rcx - 0x75], 0xc ; ret 0xc18b
0x000002000040ed79 : rol byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x18 ; ret
0x0000020000030efb : rol byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x38 ; ret
0x0000020000124ad3 : rol byte ptr [rcx - 0x75], 0xc0 ; inc qword ptr [rdx + rax*8] ; ret
0x00000200001362bb : rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x00000200001b9340 : rol byte ptr [rcx - 0x75], 0xc1 ; add rsp, 0x28 ; ret
0x0000020000203515 : rol byte ptr [rcx - 0x75], 0xc1 ; ret
0x000002000068eff9 : rol byte ptr [rcx - 0x75], 0xc2 ; ret
0x00000200001c130b : rol byte ptr [rcx - 0x75], 0xc3 ; add rsp, 0x28 ; ret
0x00000200005de13d : rol byte ptr [rcx - 0x75], 0xd7 ; mov rcx, rdi ; call 0x2000048a441
0x0000020000062fd2 : rol byte ptr [rcx - 0x75], 1 ; or byte ptr [r8 + 0x23], cl ; ret
0x0000020000114bf2 : rol byte ptr [rcx - 0x75], 1 ; ret
0x000002000012d9bd : rol byte ptr [rcx - 0x75], 1 ; ret 0x2341
0x000002000012d4b5 : rol byte ptr [rcx - 0x75], 1 ; ret 0x344
0x0000020000020060 : rol byte ptr [rcx - 0x75], 1 ; ret 0x8348
0x000002000050fc06 : rol byte ptr [rcx - 0x75], 1 ; ret 0x8b48
0x000002000012d122 : rol byte ptr [rcx - 0x75], 1 ; ret 0xc8c1
0x00000200000e2cb3 : rol byte ptr [rcx - 0x75], 1 ; ret 0xdbeb
0x00000200004c1315 : rol byte ptr [rcx - 0x75], 1 ; ret 0xe083
0x000002000003445f : rol byte ptr [rcx - 0x75], 1 ; ret 0xe8d1
0x00000200005a9251 : rol byte ptr [rcx - 0x75], 1 ; salc ; call rax
0x00000200004a7fda : rol byte ptr [rcx - 0x75], 1 ; test dword ptr [rax + 0x3000000], ebx ; ret 0x9489
0x000002000002ce43 : rol byte ptr [rcx - 0x75], cl ; ret
0x000002000069eaa0 : rol byte ptr [rcx - 0x75], cl ; ret 0x2366
0x00000200006c0aaf : rol byte ptr [rcx - 0x75], cl ; ret 0x40c3
0x000002000019f9bd : rol byte ptr [rcx - 0x75], cl ; ret 0x4589
0x00000200000ee0a4 : rol byte ptr [rcx - 0x75], cl ; ret 0x4ce9
0x0000020000511ecc : rol byte ptr [rcx - 0x75], cl ; ret 0x8348
0x000002000046a6cc : rol byte ptr [rcx - 0x75], cl ; ret 0x894c
0x00000200000159eb : rol byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200003f92c7 : rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x000002000047e690 : rol byte ptr [rcx - 0x75], cl ; ret 0xf7f7
0x000002000019bdeb : rol byte ptr [rcx - 0x75], cl ; sal bh, 0xf1 ; ret
0x00000200001b9d81 : rol byte ptr [rcx - 0x76], 0xc0 ; ret
0x0000020000469097 : rol byte ptr [rcx - 0x76], 1 ; ret 0x8348
0x0000020000199289 : rol byte ptr [rcx - 0x76], 4 ; ret
0x000002000063c981 : rol byte ptr [rcx - 0x76], cl ; ret
0x00000200001448b2 : rol byte ptr [rcx - 0x77], 1 ; adc al, byte ptr [rcx - 0x7d] ; ret
0x0000020000769d81 : rol byte ptr [rcx - 0x77], 4 ; mov ecx, dword ptr [rax - 0x7d] ; ret 0x4908
0x0000020000212def : rol byte ptr [rcx - 0x77], 9 ; ret
0x00000200004a0ab9 : rol byte ptr [rcx - 0x78], 0 ; movzx eax, r10b ; ret
0x0000020000546285 : rol byte ptr [rcx - 0x78], 8 ; mov byte ptr [r9], al ; ret
0x00000200000fd961 : rol byte ptr [rcx - 0x7c], 1 ; ret 0x840f
0x00000200001cb99c : rol byte ptr [rcx - 0x7d], 0xf8 ; xor dh, byte ptr [rdx - 0x31] ; xor eax, eax ; ret
0x000002000013dc26 : rol byte ptr [rcx - 0x7d], 1 ; ret 0x4541
0x000002000051757e : rol byte ptr [rcx - 0x7d], 1 ; ret 0x75ff
0x00000200005d174b : rol byte ptr [rcx - 0x7d], 1 ; ret 0xe9f2
0x000002000016bd91 : rol byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x0000020000223169 : rol byte ptr [rcx - 0x80], cl ; ret 0x4101
0x00000200000bf250 : rol byte ptr [rcx - 0xa], 1 ; ret 0xf02
0x00000200005066be : rol byte ptr [rcx - 0xa], cl ; ret 0x7401
0x000002000058f35e : rol byte ptr [rcx - 0xa], cl ; ret 0xe902
0x000002000058f352 : rol byte ptr [rcx - 0xa], cl ; ret 0xe908
0x000002000058f346 : rol byte ptr [rcx - 0xa], cl ; ret 0xe910
0x000002000000af2d : rol byte ptr [rcx - 1], 1 ; ret
0x000002000050ecaf : rol byte ptr [rcx - 1], cl ; ret
0x0000020000401867 : rol byte ptr [rcx - 1], cl ; ret 0x8844
0x0000020000632c28 : rol byte ptr [rcx - 1], cl ; ror dword ptr [rax - 0x77], 0xc ; ret
0x0000020000228289 : rol byte ptr [rcx], 0 ; add byte ptr [rbx], dh ; leave ; call r10
0x00000200001a7708 : rol byte ptr [rcx], 0x75 ; sub al, 0xf ; mov bh, 0x51 ; add dh, dh ; ret 0x7501
0x0000020000201604 : rol byte ptr [rcx], 0xac ; ret
0x000002000018624b : rol byte ptr [rcx], 0xf ; xchg eax, ebp ; ret 0xf640
0x000002000062d29b : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; ret 0x8948
0x0000020000168142 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200003dffb3 : rol byte ptr [rcx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200006b0719 : rol byte ptr [rdi + 0x2da1c05], 0 ; ret
0x00000200000d2322 : rol byte ptr [rdi + rcx + 0x22], 0xc0 ; add rsp, 0x28 ; ret
0x0000020000115cc8 : rol byte ptr [rdi + rcx + 0x22], 0xc0 ; ret
0x00000200001e7ba0 : rol byte ptr [rdi + rcx + 0x22], cl ; ret 0x8d48
0x00000200001a4761 : rol byte ptr [rdi + rcx + 0x42], 1 ; ret 0x8d4a
0x00000200006767e8 : rol byte ptr [rdi + rcx + 0x42], 1 ; ret 0xce3b
0x00000200000e2caf : rol byte ptr [rdi + rcx + 0x44], 1 ; rol byte ptr [rcx - 0x75], 1 ; ret 0xdbeb
0x00000200001621b3 : rol byte ptr [rdi + rcx - 0x49], 0x44 ; ret
0x00000200001f4f0b : rol byte ptr [rdi + rcx - 0x49], 0x44 ; ret 0xeb0c
0x000002000040aaa5 : rol byte ptr [rdi + rcx - 0x49], 0x51 ; adc byte ptr [rcx - 0x7d], cl ; ret 0x4909
0x00000200005a9324 : rol byte ptr [rdi + rcx - 0x49], 1 ; ret 0x6ae9
0x00000200004641d6 : rol byte ptr [rdi + rcx - 0x49], 1 ; ret 0xa0eb
0x000002000055be02 : rol byte ptr [rdi + rcx - 0x49], 1 ; ret 0xeae9
0x0000020000083576 : rol byte ptr [rdi + rcx - 0x4a], 4 ; ret 0x3ba
0x00000200005d9b63 : rol byte ptr [rdi], 0x23 ; ret 0x8b44
0x00000200006bbbb6 : rol byte ptr [rdi], 0x75 ; jmp 0x1ff8bb4cdb2
0x0000020000663f18 : rol byte ptr [rdi], 0xa1 ; dec dword ptr [rbx - 0xcfdbbc] ; ret
0x000002000003858d : rol byte ptr [rdi], 1 ; add byte ptr [rax], al ; ret
0x000002000064a5cf : rol byte ptr [rdx + rcx*4 - 0x31], 0xe8 ; pushfq ; ret
0x00000200000d401e : rol byte ptr [rdx + rdx*8 - 0x7e75e58b], cl ; ret 0
0x0000020000546023 : rol byte ptr [rdx - 0x75], 0x44 ; or byte ptr [rax], bl ; sub eax, edx ; ret
0x00000200001332d0 : rol byte ptr [rdx - 0x75], 0x44 ; ret
0x0000020000511c38 : rol byte ptr [rdx], 0x48 ; add esp, 0x28 ; ret
0x00000200000bd3e0 : rol byte ptr [rdx], 0x48 ; lea eax, dword ptr [rcx + rax*4] ; ret
0x00000200001f64ed : rol byte ptr [rdx], 0x48 ; mov dword ptr [rcx + 0x28], eax ; mov al, 1 ; ret
0x00000200000c36ef : rol byte ptr [rdx], 0x66 ; mov dword ptr [rcx + 2], eax ; ret
0x00000200000730cb : rol byte ptr [rdx], 0x66 ; mov dword ptr [rcx + 2], eax ; xor eax, eax ; ret
0x000002000069a5a8 : rol byte ptr [rdx], 0x75 ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000022d9ba : rol byte ptr [rdx], 0x8d ; add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022d9da
0x000002000022dbfe : rol byte ptr [rdx], 0x8d ; add al, 0x40 ; lea eax, dword ptr [rdx + rax*8] ; jmp 0x2000022dc1e
0x00000200003c97ed : rol byte ptr [rdx], 0xc3 ; xor eax, eax ; ret
0x0000020000017ae3 : rol byte ptr [rdx], 0xeb ; adc ecx, dword ptr [rax - 1] ; ret
0x0000020000415d38 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000063f71c : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; ret
0x00000200004db9f3 : rol byte ptr [rip + 0x49c10348], 0x3b ; ret 0x870f
0x00000200005ca784 : rol byte ptr [rip + 0x7fe9ffd3], 1 ; ret
0x00000200001d3b75 : rol byte ptr [rip - 0x72b60ed5], 0x14 ; ret
0x0000020000565755 : rol byte ptr [rip - 0xbf0000], 1 ; ret
0x0000020000568fff : rol byte ptr [rsi], 0 ; add bh, bh ; ret
0x0000020000173f54 : rol byte ptr [rsi], 0 ; add byte ptr [rcx - 0x75], al ; ret 0xe083
0x00000200000d34aa : rol byte ptr [rsi], 0 ; add dh, bh ; mov cl, 1 ; call 0x2000002f729
0x000002000039cf8c : rol byte ptr [rsi], 0 ; add dh, dh ; ret 0x7401
0x0000020000196d99 : rol byte ptr [rsi], 0 ; add dh, dh ; ret 0x7504
0x00000200000c1a1a : rol byte ptr [rsi], 0x48 ; shl eax, 4 ; add rax, rdx ; ret
0x00000200000fd7cc : rol byte ptr [rsi], 1 ; add byte ptr [rbx], dh ; div dh ; ret
0x00000200005dde28 : rol byte ptr [rsp + rax*2], 0x39 ; cmp byte ptr [rsp + rcx - 1], dh ; ret
0x00000200001bf4e9 : rol byte ptr [rsp + rax*2], 0x3b ; ret 0xef72
0x00000200003ca6d4 : rol cl, 0xe0 ; adc dh, byte ptr [rbx] ; ret
0x00000200003b4a17 : rol cl, 0xe0 ; add esi, dword ptr [rbx] ; ret 0xe083
0x00000200005f496b : rol cl, 0xe8 ; add dh, byte ptr [rdx] ; ret 0xc141
0x000002000065b0e2 : rol cl, 1 ; jmp 0x1ffce2819fe
0x000002000007b6f5 : rol cl, 1 ; rcl byte ptr [rcx + rax*2], 3 ; ret 0xc141
0x00000200003dada2 : rol dh, cl ; and al, 0x20 ; add al, ch ; jrcxz 0x200003dada5 ; ret
0x00000200006b26b7 : rol dl, 0xff ; mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x00000200001b9d7d : rol dword ptr [r10 + rcx*4 - 0x40], 0x41 ; mov al, al ; ret
0x00000200000085ce : rol dword ptr [r9 - 0x75], 1 ; ret 0x8348
0x000002000013313c : rol dword ptr [r9 - 0x77], 0x40 ; pop rsp ; ret
0x0000020000146939 : rol dword ptr [rax + 0x48000000], 0xf ; ret
0x0000020000063078 : rol dword ptr [rax + 0x77501f9], -1 ; ret
0x00000200003c5d91 : rol dword ptr [rax + 0xb], 0 ; add bl, ch ; ret 0x19b8
0x00000200006bcfac : rol dword ptr [rax + rax], 0x48 ; test eax, eax ; je 0x200006bcfc0 ; jmp rax
0x0000020000694d77 : rol dword ptr [rax + rcx*2], 0x63 ; ret 0x5489
0x00000200006043fd : rol dword ptr [rax + rcx*2], 0x63 ; ret 0x5589
0x0000020000561795 : rol dword ptr [rax + rcx*4 - 0x79], 0x70 ; add eax, dword ptr [rax] ; add cl, ch ; ret
0x0000020000133460 : rol dword ptr [rax + rdi + 0x1a], 0x75 ; add al, 0x48 ; mov eax, ecx ; ret
0x0000020000144644 : rol dword ptr [rax - 0x76], -0x3a ; add rsp, 0x30 ; pop rsi ; ret
0x00000200001f6266 : rol dword ptr [rax], -1 ; add byte ptr [rax], al ; setbe al ; ret
0x0000020000141c9b : rol dword ptr [rax], 0 ; ret
0x00000200001673c5 : rol dword ptr [rax], 0x46 ; ret
0x00000200003a3d1f : rol dword ptr [rax], 0x58 ; add byte ptr [rax], al ; call 0x2000003fffb
0x0000020000629e93 : rol dword ptr [rax], 0x75 ; or edi, edi ; ret 0xfa83
0x0000020000141bd5 : rol dword ptr [rax], 1 ; add byte ptr [rax], al ; jmp 0x2000014de86
0x000002000009a54d : rol dword ptr [rax], 7 ; add byte ptr [rax], al ; jne 0x2000009a577 ; ret
0x0000020000141c15 : rol dword ptr [rax], cl ; add byte ptr [rax], al ; jmp 0x2000014de86
0x0000020000084d4f : rol dword ptr [rbp + 0x10], 3 ; ret
0x0000020000084c99 : rol dword ptr [rbp + 0x10], 3 ; ret 0xf633
0x000002000068bb33 : rol dword ptr [rbp + 0x23], 1 ; sal dword ptr [rdx + rcx - 0x75], 1 ; ret 0x2341
0x0000020000020a2a : rol dword ptr [rbp + 0x33037510], -0x40 ; ret
0x00000200001e318a : rol dword ptr [rbp + 0x33], 1 ; leave ; mov eax, r9d ; ret
0x00000200006bb1ef : rol dword ptr [rbp + 0x3b], -0x36 ; jb 0x200006bb1ec ; xor eax, eax ; ret
0x0000020000400dce : rol dword ptr [rbp + 0x440f41c0], -0x40 ; ret
0x000002000065b128 : rol dword ptr [rbp + 0x69], cl ; ret 0x4e6d
0x000002000047480c : rol dword ptr [rbp + 0xa4], 3 ; ret
0x000002000048b2ea : rol dword ptr [rbp + 0xf], 0x22 ; ret 0x4865
0x000002000010d2be : rol dword ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc68b
0x0000020000206541 : rol dword ptr [rbp + 4], 3 ; ret 0x2075
0x0000020000221688 : rol dword ptr [rbp + rcx*4 + 0x59], 1 ; add dword ptr [rcx - 0x7f], ecx ; ret 0xe8
0x00000200001592ab : rol dword ptr [rbp - 0x11], 0x3b ; ret
0x00000200003fea85 : rol dword ptr [rbp - 0x3f6bf036], 1 ; ret
0x000002000046982d : rol dword ptr [rbp - 0x73], 0x4d ; add dword ptr [rbx], esp ; ret 0xc23b
0x000002000008d3c9 : rol dword ptr [rbp - 0x75], 1 ; fimul word ptr [rax - 9] ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x0000020000745340 : rol dword ptr [rbp - 0x75], 1 ; ret
0x00000200000353ae : rol dword ptr [rbp - 0x75], 1 ; ror dword ptr [rax - 9], cl ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x000002000059dd46 : rol dword ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000407592 : rol dword ptr [rbp - 0x75], cl ; ret 0xb60f
0x000002000021ce7a : rol dword ptr [rbp - 0x76], cl ; ret 0x11e8
0x000002000021ce9c : rol dword ptr [rbp - 0x76], cl ; ret 0x37e8
0x0000020000212e63 : rol dword ptr [rbx + 0x18], 3 ; ret 0xc23b
0x00000200003ed554 : rol dword ptr [rbx + 0x34803e3], cl ; ret 0x8b48
0x0000020000643d3c : rol dword ptr [rbx + 0xe7208f8], -1 ; ret
0x000002000020654f : rol dword ptr [rbx + 4], 3 ; ret 0x675
0x0000020000133aa9 : rol dword ptr [rbx + rbp - 0x3f], 1 ; mov eax, r8d ; ret
0x0000020000128ceb : rol dword ptr [rbx + rbx], 1 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000020000114214 : rol dword ptr [rbx + rcx*4 + 0x4f], cl ; and byte ptr [rax + 3], cl ; ret
0x00000200006aabb6 : rol dword ptr [rbx + rcx*4 + 0xd], cl ; ret 0x4dff
0x000002000010d1e2 : rol dword ptr [rbx + rdi - 0x32], 0x72 ; ret 0x8b41
0x0000020000134482 : rol dword ptr [rbx - 0x35c40036], 0xf ; ret 0x6348
0x000002000064bdb7 : rol dword ptr [rbx - 0x73], 0xc ; or eax, dword ptr [rcx + 3] ; ret
0x00000200000418d4 : rol dword ptr [rbx - 0x74b7f020], 0x4c ; ret
0x00000200000073a7 : rol dword ptr [rbx - 0x7af0fd16], 1 ; ret 0
0x00000200001fa952 : rol dword ptr [rbx - 0xb7c01e], 1 ; ret 0xc148
0x000002000043fca7 : rol dword ptr [rbx], -0x7d ; loope 0x2000043fcb1 ; add dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200005f1a07 : rol dword ptr [rcx + 0x10], 3 ; ret
0x0000020000084c7d : rol dword ptr [rcx + 0x158], 3 ; ret 0x813b
0x00000200000e7977 : rol dword ptr [rcx + 0x18], 0x48 ; sub eax, 1 ; jle 0x200000e798a ; ret
0x00000200005f1a6a : rol dword ptr [rcx + 0x18], 3 ; ret
0x000002000053f719 : rol dword ptr [rcx + 0x1b80009], 0 ; add byte ptr [rax], al ; ret
0x00000200005f306c : rol dword ptr [rcx + 0x23], -0x29 ; shl edx, 0xc ; or r8d, edx ; jmp 0x200005f3099
0x00000200000cb377 : rol dword ptr [rcx + 0x23], cl ; ret
0x00000200003eda46 : rol dword ptr [rcx + 0x2b], -0x40 ; ret
0x0000020000167ad0 : rol dword ptr [rcx + 0x2b], 1 ; ret 0xc88a
0x00000200003ed30a : rol dword ptr [rcx + 0x33], -0x3f ; ret
0x000002000000379a : rol dword ptr [rcx + 0x3b], -0x3f ; sete al ; ret
0x00000200001a5b7d : rol dword ptr [rcx + 0x3b], 1 ; ret
0x0000020000588c47 : rol dword ptr [rcx + 0x3b], cl ; ret 0xf44
0x000002000072b64f : rol dword ptr [rcx + 0x41], -0x75 ; ret
0x0000020000042428 : rol dword ptr [rcx + 0x68], 3 ; ret
0x00000200006b7de9 : rol dword ptr [rcx + 0xa0], 0x33 ; imul byte ptr [rbx] ; ret 0x4779
0x00000200006b7cbf : rol dword ptr [rcx + 0xbc], 3 ; ret 0x8445
0x0000020000413104 : rol dword ptr [rcx + 0xc], 3 ; ret
0x0000020000649799 : rol dword ptr [rcx + 0xf], -0x49 ; leave ; movzx eax, word ptr [rax + rcx*2] ; ret
0x00000200006cab12 : rol dword ptr [rcx + 0xf], 0x28 ; xor byte ptr [r8 + 0x2b], r9b ; ret 0xd148
0x00000200001763f5 : rol dword ptr [rcx + 0xf], 0x4f ; ret 0x433a
0x00000200003ed806 : rol dword ptr [rcx + 3], -0x3f ; ret
0x00000200001fa70e : rol dword ptr [rcx + rcx*2], -0x7d ; ret 0x4004
0x00000200000f1684 : rol dword ptr [rcx + rcx*2], -0x7d ; ret 0x4408
0x000002000078205e : rol dword ptr [rcx + rcx*2], -0x7d ; ret 0x6602
0x0000020000120081 : rol dword ptr [rcx + rcx*2], 0x63 ; ret
0x0000020000113a1a : rol dword ptr [rcx + rcx*4 + 0x13], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000073a03b : rol dword ptr [rcx - 0x41], 1 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; ret
0x000002000073ee04 : rol dword ptr [rcx - 0x41], 2 ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x000002000007d088 : rol dword ptr [rcx - 0x45], 7 ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret
0x00000200005973f1 : rol dword ptr [rcx - 0x47], 4 ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x3b41
0x00000200006beafb : rol dword ptr [rcx - 0x5b], -1 ; jmp rax
0x0000020000768cad : rol dword ptr [rcx - 0x68], cl ; call rcx
0x00000200003f91e1 : rol dword ptr [rcx - 0x73], 0x40 ; inc dword ptr [rcx - 0x7b] ; ret 0x850f
0x00000200003c0b1d : rol dword ptr [rcx - 0x73], 0x42 ; adc byte ptr [rcx + 0xf], al ; ret 0x8b48
0x000002000021bea8 : rol dword ptr [rcx - 0x75], -0x3e ; jmp 0x2000021beb3
0x00000200000851f9 : rol dword ptr [rcx - 0x75], -0x3f ; add rsp, 0x28 ; ret
0x0000020000530514 : rol dword ptr [rcx - 0x75], -0x3f ; ret
0x00000200001b65fa : rol dword ptr [rcx - 0x75], -0x40 ; add rsp, 0x28 ; ret
0x00000200000efbf7 : rol dword ptr [rcx - 0x75], -0x40 ; add rsp, 0x38 ; ret
0x00000200000efbb3 : rol dword ptr [rcx - 0x75], -0x40 ; ret
0x0000020000020079 : rol dword ptr [rcx - 0x75], 1 ; ret
0x000002000040bcc4 : rol dword ptr [rcx - 0x75], 1 ; ret 0x44c3
0x00000200003edccb : rol dword ptr [rcx - 0x75], 1 ; ret 0x48c3
0x00000200000d4038 : rol dword ptr [rcx - 0x75], 1 ; ret 0x49c3
0x00000200000085cf : rol dword ptr [rcx - 0x75], 1 ; ret 0x8348
0x00000200001793bd : rol dword ptr [rcx - 0x75], 1 ; ret 0xca8b
0x00000200001a3873 : rol dword ptr [rcx - 0x75], cl ; ret 0x3b49
0x00000200001f058c : rol dword ptr [rcx - 0x76], -0x40 ; ret
0x000002000066c2ee : rol dword ptr [rcx - 0x76], 1 ; add ah, byte ptr [rdx] ; ret
0x000002000039cf6b : rol dword ptr [rcx - 0x76], cl ; ret 0xb9c3
0x0000020000488e93 : rol dword ptr [rcx - 0x77], 0x10 ; ret
0x000002000013313d : rol dword ptr [rcx - 0x77], 0x40 ; pop rsp ; ret
0x000002000013805b : rol dword ptr [rcx - 0x7f8037], 1 ; jmp qword ptr [rbx]
0x000002000012ff89 : rol dword ptr [rcx - 0x80], 1 ; ret 0x8b20
0x00000200001f0a46 : rol dword ptr [rcx - 1], cl ; push rbx ; and byte ptr [rax - 0x75], cl ; ret
0x0000020000496542 : rol dword ptr [rcx], 0x74 ; adc cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000002000005884b : rol dword ptr [rcx], 0x74 ; add eax, 0x28c48348 ; ret
0x0000020000031d17 : rol dword ptr [rcx], 0x74 ; int1 ; ret
0x00000200001ffb5c : rol dword ptr [rcx], 0x74 ; sbb cl, byte ptr [rax - 0x75] ; ret
0x00000200004c638a : rol dword ptr [rcx], 0x75 ; mov qword ptr [r9], r10 ; ret
0x000002000003ce96 : rol dword ptr [rcx], 0xf ; test dword ptr [rax], edi ; mov edx, dword ptr [rdx] ; add dh, dh ; ret
0x000002000007d215 : rol dword ptr [rcx], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001c1344 : rol dword ptr [rdi + rcx + 0x20], 1 ; ret
0x0000020000039159 : rol dword ptr [rdi + rcx + 0x22], -0x40 ; ret
0x0000020000051b31 : rol dword ptr [rdi + rcx + 0x22], cl ; ret 0xc085
0x0000020000588c43 : rol dword ptr [rdi + rcx + 0x44], 1 ; rol dword ptr [rcx + 0x3b], cl ; ret 0xf44
0x0000020000664f40 : rol dword ptr [rdi + rcx - 0x49], 1 ; ret
0x00000200003c6f20 : rol dword ptr [rdi + rcx - 0x49], cl ; ret
0x00000200000d1af1 : rol dword ptr [rdi + rcx - 0x4a], -0x80 ; ret
0x0000020000114bee : rol dword ptr [rdi + rcx - 0x4a], 1 ; rol byte ptr [rcx - 0x75], 1 ; ret
0x00000200000e4877 : rol dword ptr [rdx + 0x10], 0x48 ; add esp, 0x38 ; ret
0x0000020000005cc7 : rol dword ptr [rdx + 0x30], -0x75 ; ret
0x00000200001b9d7e : rol dword ptr [rdx + rcx*4 - 0x40], 0x41 ; mov al, al ; ret
0x00000200004f8f86 : rol dword ptr [rdx], -0x15 ; call 0x20033129147
0x00000200003d1f6a : rol dword ptr [rdx], -0x3f ; ret 0x4106
0x000002000064af1b : rol dword ptr [rdx], -0x75 ; ret 0xffb9
0x0000020000175161 : rol dword ptr [rdx], -0x78 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4904
0x00000200000b65b0 : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000013582a : rol dword ptr [rdx], 0x48 ; cmp eax, edx ; jb 0x20000135826 ; ret
0x000002000053e347 : rol dword ptr [rdx], 0x48 ; mov dword ptr [rdx + 0x28], ecx ; ret
0x000002000013ccd5 : rol dword ptr [rdx], 0x48 ; mov dword ptr [rdx], ecx ; add rsp, 0x38 ; ret
0x00000200003eec48 : rol dword ptr [rdx], 0x48 ; sub edx, 1 ; jne 0x200003eec48 ; ret
0x0000020000652864 : rol dword ptr [rdx], 0x49 ; cmp ecx, edx ; jb 0x20000652841 ; mov al, 1 ; ret
0x00000200001340e2 : rol dword ptr [rdx], 0x4d ; test eax, eax ; jne 0x200001340db ; ret
0x0000020000157fc1 : rol dword ptr [rdx], 0x74 ; or cl, byte ptr [rax - 0x7d] ; jmp qword ptr [rcx]
0x0000020000032758 : rol dword ptr [rdx], 0x74 ; xor al, byte ptr [rcx - 0xa] ; ret 0x7502
0x00000200000f3ba1 : rol dword ptr [rdx], 0xf ; test dword ptr [rbp - 0x74fff54e], esp ; ret 0x87eb
0x00000200000229a5 : rol dword ptr [rdx], 0xf ; xchg eax, ebp ; ret 0xc3f6
0x0000020000157bb8 : rol dword ptr [rip + 0x1a4baa], -0x17 ; ret
0x0000020000012ffb : rol dword ptr [rip + 0x303e17], 3 ; ret
0x00000200003be6e7 : rol dword ptr [rip + 0x33abab], 3 ; ret
0x00000200001e21f5 : rol dword ptr [rip + 0xfa385], 3 ; ret 0xc23b
0x00000200003c4a5a : rol dword ptr [rsi + 0x190], 3 ; ret 0x8b48
0x00000200003fd9b1 : rol dword ptr [rsi + 0xa4], 3 ; ret
0x00000200007628c7 : rol dword ptr [rsi - 0x74b6ffff], 1 ; ret
0x00000200002151d1 : rol dword ptr [rsp + rax*2], 0x3b ; ret 0xd972
0x000002000076674b : rol eax, 1 ; mov ecx, 0x58948ff ; ret 0xb9c0
0x0000020000541df4 : rol eax, cl ; dec dword ptr [rax - 0x75] ; ret
0x0000020000044d2d : rol ebx, -0x34 ; xchg dword ptr [rcx + 0x54], edx ; mov eax, edx ; ret
0x00000200005eceb1 : rol ebx, -0x75 ; ret 0xccc3
0x0000020000471989 : rol ebx, -0x76 ; ret 0x724
0x000002000002f542 : rol ebx, 0x48 ; mov eax, dword ptr [rcx + 0xf0] ; ret
0x00000200003e37d0 : rol ebx, 0xf ; mov esi, 0x20f083c1 ; ret
0x00000200001f24e3 : rol ecx, -0x16 ; add al, 0x6b ; ret 0x2b32
0x0000020000148ef3 : rol ecx, -0x18 ; adc byte ptr [rcx - 0xa], al ; ret
0x000002000020d6d2 : rol ecx, -0x18 ; or al, 0x23 ; ret 0xc63b
0x00000200003ca6f3 : rol ecx, -0x20 ; adc cl, byte ptr [rbx] ; ret
0x00000200001f647b : rol ecx, 1 ; cli ; add al, 0x8b ; ret 0xe8c1
0x00000200003d1f68 : rol ecx, 1 ; rol dword ptr [rdx], -0x3f ; ret 0x4106
0x000002000001993e : rol ecx, 1 ; sub r8, 1 ; jne 0x20000019938 ; ret
0x0000020000731f1d : rol edx, cl ; add ebx, -1 ; jne 0x20000731f19 ; mov rax, rdx ; jmp 0x20000731f34
0x0000020000733597 : rol edx, cl ; add ebx, -1 ; jne 0x20000733596 ; mov rax, rdx ; jmp 0x200007335ae
0x0000020000733c42 : rol edx, cl ; add ebx, -1 ; jne 0x20000733c3e ; mov rax, rdx ; jmp 0x20000733c59
0x000002000073404c : rol edx, cl ; add ebx, -1 ; jne 0x20000734048 ; mov rax, rdx ; jmp 0x20000734063
0x000002000073528e : rol edx, cl ; add ebx, -1 ; jne 0x2000073528d ; mov rax, rdx ; jmp 0x200007352a5
0x0000020000737174 : rol edx, cl ; add ebx, -1 ; jne 0x20000737173 ; mov rax, rdx ; jmp 0x2000073718b
0x00000200007374a7 : rol edx, cl ; add ebx, -1 ; jne 0x200007374a2 ; mov rax, rdx ; jmp 0x200007374be
0x000002000073e113 : rol edx, cl ; add ebx, -1 ; jne 0x2000073e10f ; mov rax, rdx ; jmp 0x2000073e12a
0x000002000073468d : rol edx, cl ; add edi, -1 ; jne 0x20000734688 ; mov rax, rdx ; jmp 0x200007346a4
0x0000020000735b53 : rol edx, cl ; add edi, -1 ; jne 0x20000735b4e ; mov rax, rdx ; jmp 0x20000735b6a
0x000002000073659d : rol edx, cl ; add edi, -1 ; jne 0x20000736598 ; mov rax, rdx ; jmp 0x200007365b4
0x0000020000739afc : rol edx, cl ; add edi, -1 ; jne 0x20000739af7 ; mov rax, rdx ; jmp 0x20000739b13
0x000002000073d92d : rol edx, cl ; add edi, -1 ; jne 0x2000073d929 ; mov rax, rdx ; jmp 0x2000073d944
0x0000020000739813 : rol edx, cl ; add edi, r12d ; jne 0x2000073980e ; mov rax, rdx ; jmp 0x2000073982a
0x00000200004f4409 : rol esp, -1 ; add rsp, 0x28 ; ret
0x00000200003e5049 : rol r11b, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000001993d : rol rcx, 1 ; sub r8, 1 ; jne 0x20000019939 ; ret
0x0000020000217c92 : rol spl, 0x41 ; jle 0x20000217d10 ; push rax ; loopne 0x20000217c68 ; ret 0x187d
0x0000020000132542 : ror ah, cl ; and al, 0 ; shr eax, 0xd ; and al, 1 ; ret
0x00000200003cd1a2 : ror ah, cl ; dec dword ptr [rax - 0x75] ; or byte ptr [r8 - 0x75], cl ; ret
0x000002000021364c : ror byte ptr [r10], 1 ; or dword ptr [rdi], ecx ; add cl, byte ptr [rax + 0x33] ; ret
0x0000020000133584 : ror byte ptr [r13 - 0x75], 1 ; ret
0x0000020000010091 : ror byte ptr [r8 + 0x2b], 1 ; ret
0x00000200005ba0ee : ror byte ptr [r8 + 0x63], 1 ; ret 0x8d48
0x000002000014694b : ror byte ptr [r8 + 0xf], 1 ; ret
0x0000020000518639 : ror byte ptr [r8 + 3], 1 ; ret 0x4466
0x000002000016cda0 : ror byte ptr [r8 - 0x75], 1 ; ret 0x8b48
0x00000200004a3bf3 : ror byte ptr [r8 - 0x75], 1 ; retf ; call 0x2000049fe07
0x00000200004af3de : ror byte ptr [r8 - 0x77], 0x44 ; and al, 0x20 ; call r10
0x0000020000629fad : ror byte ptr [r8 - 0x77], 1 ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000666f8a : ror byte ptr [r8 - 0x77], 1 ; add r15b, r15b ; ret 0x8348
0x00000200005dcaac : ror byte ptr [r8], 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x4466
0x00000200003e6a31 : ror byte ptr [r9 + 3], 1 ; ret 0x3b48
0x00000200004e78e2 : ror byte ptr [r9 - 0x73], 0x4f ; xor al, ch ; ret
0x00000200001a77f3 : ror byte ptr [r9 - 0x77], 1 ; sbb byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000018a873 : ror byte ptr [r9 - 1], 1 ; adc byte ptr [r8 + 0x2b], r9b ; ret 0x8d48
0x0000020000514ca7 : ror byte ptr [rax + 0x1e438a1d], cl ; add al, ch ; pop rbp ; ret
0x000002000013468b : ror byte ptr [rax + 0x23], 0xc1 ; ret
0x00000200001ef913 : ror byte ptr [rax + 0x23], 1 ; ret
0x00000200001cc9ec : ror byte ptr [rax + 0x23], 1 ; ret 0x2348
0x00000200000a00f9 : ror byte ptr [rax + 0x23], 1 ; ret 0x234c
0x000002000051757b : ror byte ptr [rax + 0x23], 1 ; rol byte ptr [rcx - 0x7d], 1 ; ret 0x75ff
0x00000200003f44ce : ror byte ptr [rax + 0x23], 1 ; ror byte ptr [rcx + 0x33], 1 ; ror byte ptr [rax - 0x75], 1 ; ret 0x8b48
0x0000020000096045 : ror byte ptr [rax + 0x23], cl ; ret 0x8949
0x0000020000010092 : ror byte ptr [rax + 0x2b], 1 ; ret
0x0000020000491b24 : ror byte ptr [rax + 0x2b], 1 ; ror dword ptr [rax - 1], 1 ; ret 0xf749
0x000002000013573d : ror byte ptr [rax + 0x2b], cl ; ror dword ptr [rax - 0x2f], -8 ; ret
0x00000200001dba87 : ror byte ptr [rax + 0x33], 1 ; ret 0x2349
0x00000200000d8bf6 : ror byte ptr [rax + 0x33], 1 ; ret 0x8948
0x0000020000024995 : ror byte ptr [rax + 0x39], 1 ; sete al ; ret
0x000002000008960b : ror byte ptr [rax + 0x3b], 0x41 ; sbb byte ptr [rbp - 0x10], dh ; mov al, 1 ; ret
0x0000020000488288 : ror byte ptr [rax + 0x3b], 0x4c ; ret 0x7470
0x0000020000479071 : ror byte ptr [rax + 0x3b], 0xa ; jne 0x2000047907e ; ret
0x000002000047908d : ror byte ptr [rax + 0x3b], 0xa ; jne 0x2000047909a ; ret
0x000002000067e37f : ror byte ptr [rax + 0x3b], 0xc2 ; jb 0x2000067e359 ; xor eax, eax ; ret
0x00000200001979a0 : ror byte ptr [rax + 0x3b], 0xc8 ; jne 0x20000197992 ; ret
0x0000020000068110 : ror byte ptr [rax + 0x3b], 0xca ; sete al ; ret
0x00000200000b2829 : ror byte ptr [rax + 0x3b], 0xd0 ; jbe 0x200000b283a ; xor eax, eax ; ret
0x0000020000104a07 : ror byte ptr [rax + 0x3b], 0xd1 ; seta al ; ret
0x0000020000160360 : ror byte ptr [rax + 0x3b], 1 ; ret
0x00000200004f6a7f : ror byte ptr [rax + 0x3b], cl ; pop rax ; cmp byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc28b
0x00000200000f1d21 : ror byte ptr [rax + 0x3b], cl ; ret 0x1073
0x00000200004390c6 : ror byte ptr [rax + 0x3b], cl ; ret 0x1873
0x0000020000763e19 : ror byte ptr [rax + 0x3d], 0 ; add dword ptr [rax], eax ; add byte ptr [rdx - 0x56], dh ; ret
0x000002000020e4b7 : ror byte ptr [rax + 0x4a880242], 1 ; ret
0x00000200003c342f : ror byte ptr [rax + 0x4c582444], 0x8b ; ret 0x8949
0x00000200005ba0ef : ror byte ptr [rax + 0x63], 1 ; ret 0x8d48
0x00000200000f17bf : ror byte ptr [rax + 0x63], 1 ; ret 0x8d4e
0x000002000022c42c : ror byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000002000013ced6 : ror byte ptr [rax + 0x69], 1 ; ret 0xe100
0x00000200001f4c75 : ror byte ptr [rax + 0xb], 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001f7bca : ror byte ptr [rax + 0xb], 1 ; ret 0x48f3
0x0000020000090419 : ror byte ptr [rax + 0xb], 1 ; ret 0x8348
0x00000200001b6a3c : ror byte ptr [rax + 0xb], 1 ; ret 0xfeb
0x00000200003a2ba2 : ror byte ptr [rax + 0xb], cl ; ret 0x3b4e
0x00000200000df10d : ror byte ptr [rax + 0xbe81], 0 ; ret
0x00000200003f6c81 : ror byte ptr [rax + 0xf], 0x44 ; ret 0x3b48
0x000002000064c4a7 : ror byte ptr [rax + 0xf], 0x45 ; ret 0xf4c
0x000002000007de62 : ror byte ptr [rax + 0xf], 0xaf ; ret 0x349
0x00000200000822c6 : ror byte ptr [rax + 0xf], 1 ; mov edx, 0x930f0a21 ; ret 0x2244
0x000002000014694c : ror byte ptr [rax + 0xf], 1 ; ret
0x000002000020325a : ror byte ptr [rax + 0xf], 1 ; ret 0x3983
0x00000200001ee9fa : ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; ret 0xff48
0x000002000042f5af : ror byte ptr [rax + 0xf], 1 ; scasd eax, dword ptr [rdi] ; sal dh, 1 ; ret 0x7401
0x0000020000207f1c : ror byte ptr [rax + 0xf], cl ; ret 0x3ceb
0x000002000006f480 : ror byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000200004d6a1d : ror byte ptr [rax + 0xf], cl ; ret 0x8949
0x0000020000074a76 : ror byte ptr [rax + 3], 0xc3 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000734047 : ror byte ptr [rax + 3], 1 ; dec byte ptr [rax - 0x2d] ; ret 0xc383
0x000002000051863a : ror byte ptr [rax + 3], 1 ; ret 0x4466
0x000002000010dd4e : ror byte ptr [rax + 3], cl ; ret 0x8b48
0x000002000010dcfd : ror byte ptr [rax + 3], cl ; ret 0xc148
0x00000200000660f0 : ror byte ptr [rax + 5], 0 ; add al, 0 ; add byte ptr [rax + 3], cl ; ret 0xccc3
0x00000200004a76b9 : ror byte ptr [rax + rax], 0 ; ret
0x0000020000015e8b : ror byte ptr [rax - 0x2d], 0xe8 ; and rax, r8 ; ret
0x00000200001837cb : ror byte ptr [rax - 0x2d], 1 ; ret 0x3348
0x000002000013d1f3 : ror byte ptr [rax - 0x2d], 1 ; ret 0x345
0x000002000022578c : ror byte ptr [rax - 0x2d], 1 ; ret 0x8341
0x0000020000733316 : ror byte ptr [rax - 0x2d], 1 ; ret 0xc383
0x000002000048cacd : ror byte ptr [rax - 0x2f], 0xe8 ; ret
0x00000200006a8078 : ror byte ptr [rax - 0x39], 5 ; and al, 0xae ; ret 0xff
0x00000200000c1a08 : ror byte ptr [rax - 0x3f], 0xe0 ; add al, 0x48 ; add eax, ecx ; ret
0x0000020000688bab : ror byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rcx + 0x3b] ; ret
0x000002000004d80b : ror byte ptr [rax - 0x3f], 0xe2 ; or byte ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0xc149
0x000002000012a1b0 : ror byte ptr [rax - 0x3f], 0xe8 ; add cl, byte ptr [rax + 0x3b] ; ret 0xf48
0x000002000017e5ab : ror byte ptr [rax - 0x3f], 0xe8 ; and byte ptr [rcx + 0x3b], cl ; ret 0xc75
0x00000200007628a5 : ror byte ptr [rax - 0x3f], 0xe8 ; or dword ptr [rax + 0x23], ecx ; ret
0x000002000039b403 : ror byte ptr [rax - 0x3f], 0xe9 ; and byte ptr [rdi + rcx - 0x51], cl ; ret 0xaf0f
0x0000020000181d5b : ror byte ptr [rax - 0x3f], 0xfa ; adc byte ptr [rbx], dh ; leave ; call 0x2000009e039
0x0000020000062fba : ror byte ptr [rax - 0x3f], 0xfa ; add ecx, dword ptr [rbp + 0x2b] ; ret
0x000002000012ce63 : ror byte ptr [rax - 0x3f], 0xfb ; add ecx, dword ptr [rax - 1] ; ret
0x000002000072cfe7 : ror byte ptr [rax - 0x3f], 1 ; leave ; add ecx, dword ptr [rax - 0x75] ; ret
0x000002000072d9d6 : ror byte ptr [rax - 0x3f], 1 ; leave ; add ecx, dword ptr [rcx - 0x75] ; ret
0x00000200002307de : ror byte ptr [rax - 0x3f], 1 ; leave ; add ecx, dword ptr [rcx - 0x75] ; ret 0x3348
0x0000020000425595 : ror byte ptr [rax - 0x3f], 1 ; loop 0x200004255ae ; call 0x20000045724
0x00000200003a568c : ror byte ptr [rax - 0x3f], 1 ; ret 0x482b
0x00000200000df5a8 : ror byte ptr [rax - 0x3f], cl ; call 0x1ffc2313eb9
0x000002000004a25f : ror byte ptr [rax - 0x3f], cl ; call qword ptr [rdx]
0x0000020000009336 : ror byte ptr [rax - 0x3f], cl ; jmp 0x1ffc28bdc48
0x0000020000744814 : ror byte ptr [rax - 0x3f], cl ; sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200002134b9 : ror byte ptr [rax - 0x48], 0x7f ; out 0x30, eax ; ret 0x3b88
0x0000020000482b7b : ror byte ptr [rax - 0x73], 0x14 ; ret
0x000002000039ce5f : ror byte ptr [rax - 0x73], 0x14 ; ret 0x8b48
0x0000020000074010 : ror byte ptr [rax - 0x73], 0x42 ; dec dword ptr [rcx + 0x3b] ; ret 0xf45
0x0000020000513b02 : ror byte ptr [rax - 0x73], 0x4b ; or al, ch ; je 0x20000513ac8 ; ret
0x0000020000443e71 : ror byte ptr [rax - 0x73], 0x4b ; xor byte ptr [rbx], dh ; shr al, cl ; ret
0x00000200007845a2 : ror byte ptr [rax - 0x73], 0x4c ; and al, 0x50 ; call 0x20000140808
0x00000200004cbb3e : ror byte ptr [rax - 0x73], 0x4d ; cmpsd dword ptr [rsi], dword ptr [rdi] ; xor edx, edx ; call qword ptr [rdi]
0x00000200006889f7 : ror byte ptr [rax - 0x73], 0x4d ; ret 0xd233
0x000002000051279a : ror byte ptr [rax - 0x73], 0x55 ; mov eax, 0x41cf8b48 ; call rdi
0x000002000060ccd7 : ror byte ptr [rax - 0x73], 0xd ; add dword ptr [rdi], ecx ; ret
0x00000200007855e9 : ror byte ptr [rax - 0x73], 0xd ; ret
0x00000200001e0ece : ror byte ptr [rax - 0x73], 0xd ; ret 0x11
0x000002000041093b : ror byte ptr [rax - 0x73], 0xd ; std ; ret 0xffeb
0x000002000069c6a3 : ror byte ptr [rax - 0x73], 0xd ; xchg eax, ebp ; push rdx ; ret
0x00000200004ad61c : ror byte ptr [rax - 0x73], 1 ; adc r8b, r13b ; pop rdx ; lodsd eax, dword ptr [rsi] ; ret
0x000002000048f206 : ror byte ptr [rax - 0x73], 1 ; or al, 0x89 ; lea rax, qword ptr [rax + rcx*8] ; ret
0x00000200004a9f77 : ror byte ptr [rax - 0x73], 1 ; xor al, r13b ; jmp rbx
0x0000020000445cc4 : ror byte ptr [rax - 0x73], 4 ; ret 0x8b48
0x000002000039ce5b : ror byte ptr [rax - 0x73], 4 ; ror byte ptr [rax - 0x73], 0x14 ; ret 0x8b48
0x000002000049ad76 : ror byte ptr [rax - 0x73], cl ; and al, 0x38 ; call 0x200000bc949
0x0000020000127731 : ror byte ptr [rax - 0x73], cl ; and byte ptr [r13 + rcx*4 + 5], cl ; ret
0x0000020000427d0e : ror byte ptr [rax - 0x73], cl ; and r8b, r13b ; or ch, dh ; ret 0x48ff
0x00000200000b3283 : ror byte ptr [rax - 0x73], cl ; or al, 3 ; call 0x2000014f4c7
0x000002000051e67d : ror byte ptr [rax - 0x73], cl ; shr r8b, 1 ; cmp dword ptr [rsi], ecx ; ret
0x000002000051e5b8 : ror byte ptr [rax - 0x73], cl ; shr r8b, 1 ; dec byte ptr [rsi] ; ret
0x00000200001351b7 : ror byte ptr [rax - 0x74b6eefc], 0xc3 ; ret
0x00000200000e7a57 : ror byte ptr [rax - 0x75], 0x14 ; ret 0x8b48
0x0000020000462aa4 : ror byte ptr [rax - 0x75], 0x1c ; and al, 0x48 ; add esp, 8 ; ret
0x00000200000e8db5 : ror byte ptr [rax - 0x75], 0x3c ; ret 0x8b48
0x0000020000130a4f : ror byte ptr [rax - 0x75], 0x44 ; ret
0x000002000051970f : ror byte ptr [rax - 0x75], 0x4c ; ret
0x00000200001fd077 : ror byte ptr [rax - 0x75], 0x52 ; or al, ch ; jmp qword ptr [rax]
0x00000200001539d8 : ror byte ptr [rax - 0x75], 0x55 ; cmp byte ptr [rax - 0x75], cl ; call rax
0x000002000015284b : ror byte ptr [rax - 0x75], 0x55 ; mov rcx, qword ptr [rbp + 0x50] ; call rax
0x0000020000153ded : ror byte ptr [rax - 0x75], 0x55 ; mov rcx, r11 ; call r11
0x00000200005f37a1 : ror byte ptr [rax - 0x75], 0x5c ; and al, 0x10 ; ret
0x0000020000486c59 : ror byte ptr [rax - 0x75], 0x5c ; and al, 0x28 ; pop rdi ; ret
0x000002000021e7eb : ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; mov eax, ecx ; ret
0x000002000067462c : ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; mov eax, r8d ; ret
0x0000020000010dc1 : ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x000002000002ef83 : ror byte ptr [rax - 0x75], 0x5c ; ret 0x4878
0x000002000000ab96 : ror byte ptr [rax - 0x75], 0x6c ; and al, 0x28 ; pop rdi ; ret
0x00000200003e3527 : ror byte ptr [rax - 0x75], 0x74 ; ret
0x000002000000f8de : ror byte ptr [rax - 0x75], 0x74 ; ret 0x4810
0x000002000003b4a8 : ror byte ptr [rax - 0x75], 0x7c ; and al, 0x10 ; ret
0x00000200005966ae : ror byte ptr [rax - 0x75], 0x7c ; and al, 0x70 ; jmp 0x200005128e1
0x000002000050147b : ror byte ptr [rax - 0x75], 0x7c ; and al, 8 ; ret
0x0000020000460bb1 : ror byte ptr [rax - 0x75], 0x84 ; ret 0xe8e0
0x00000200005a7f2a : ror byte ptr [rax - 0x75], 0x8c ; ret 0xb6e0
0x0000020000453167 : ror byte ptr [rax - 0x75], 0x8f ; call 0x1ffff45317a
0x00000200004c7ba1 : ror byte ptr [rax - 0x75], 0xc8 ; call 0x200000ecdeb
0x00000200004065f9 : ror byte ptr [rax - 0x75], 0xcb ; call 0x200000c2846
0x0000020000495871 : ror byte ptr [rax - 0x75], 0xcd ; call 0x200000b8ea7
0x00000200001e657c : ror byte ptr [rax - 0x75], 0xcd ; xor edx, edx ; call 0x200000c2848
0x0000020000493bd9 : ror byte ptr [rax - 0x75], 0xce ; call 0x200000b8ea7
0x000002000015d11c : ror byte ptr [rax - 0x75], 0xce ; call 0x2000020937a
0x00000200003e5fad : ror byte ptr [rax - 0x75], 0xcf ; call 0x20000013277
0x0000020000203d7d : ror byte ptr [rax - 0x75], 0xcf ; mov rdx, rbx ; call rsi
0x00000200004365a1 : ror byte ptr [rax - 0x75], 0xcf ; xor edx, edx ; call 0x200000c2848
0x000002000058f83e : ror byte ptr [rax - 0x75], 0xd ; ret 0xd89b
0x00000200004152e5 : ror byte ptr [rax - 0x75], 0xd3 ; mov rcx, rdi ; call r10
0x0000020000042995 : ror byte ptr [rax - 0x75], 0xd3 ; mov rcx, rdi ; call rsi
0x000002000016f374 : ror byte ptr [rax - 0x75], 0xd6 ; call rax
0x00000200001a9345 : ror byte ptr [rax - 0x75], 0xd7 ; mov rcx, rbx ; call r10
0x00000200003bc015 : ror byte ptr [rax - 0x75], 1 ; int 0xe8
0x000002000015c0cf : ror byte ptr [rax - 0x75], 1 ; iretd ; call 0x200000e8386
0x00000200004c1f46 : ror byte ptr [rax - 0x75], 1 ; iretd ; call 0x200000e8387
0x000002000005493b : ror byte ptr [rax - 0x75], 1 ; or byte ptr [rax + 0x3b], cl ; ret 0x2075
0x00000200004c93b7 : ror byte ptr [rax - 0x75], 1 ; push r8 ; call 0x200000ede6c
0x0000020000006e11 : ror byte ptr [rax - 0x75], 1 ; ret
0x000002000011fd4e : ror byte ptr [rax - 0x75], 1 ; ret 0x2348
0x00000200000df5a2 : ror byte ptr [rax - 0x75], 1 ; ret 0x2349
0x00000200002307f2 : ror byte ptr [rax - 0x75], 1 ; ret 0x8949
0x000002000016cda1 : ror byte ptr [rax - 0x75], 1 ; ret 0x8b48
0x000002000047c1d3 : ror byte ptr [rax - 0x75], 1 ; ret 0x8b49
0x000002000010ddb9 : ror byte ptr [rax - 0x75], 1 ; ret 0x9948
0x00000200000be31d : ror byte ptr [rax - 0x75], 1 ; ret 0xc148
0x0000020000779f04 : ror byte ptr [rax - 0x75], 1 ; ret 0xd148
0x00000200004a3bf4 : ror byte ptr [rax - 0x75], 1 ; retf ; call 0x2000049fe06
0x00000200001d273a : ror byte ptr [rax - 0x75], 1 ; retf ; call qword ptr [rbx]
0x00000200001eecf8 : ror byte ptr [rax - 0x75], 1 ; ror dword ptr [rax + 0xf], -0x51 ; ret 0x694d
0x000002000019f503 : ror byte ptr [rax - 0x75], 1 ; ror dword ptr [rax - 0x75], cl ; ret
0x000002000008bf9e : ror byte ptr [rax - 0x75], 4 ; ret 0x8549
0x00000200001a8847 : ror byte ptr [rax - 0x75], cl ; add eax, dword ptr [rbp + 0x2b] ; ret 0x8348
0x0000020000230c9b : ror byte ptr [rax - 0x75], cl ; cmp byte ptr [rax], 2 ; add byte ptr [rax], al ; jmp rax
0x000002000060b828 : ror byte ptr [rax - 0x75], cl ; enter -0x2018, 0x57 ; ret 0x4dff
0x000002000050fcdb : ror byte ptr [rax - 0x75], cl ; enter -0x2318, -9 ; ret
0x00000200005240bc : ror byte ptr [rax - 0x75], cl ; enter -0x418, -0x4d ; ret 0x48ff
0x0000020000511007 : ror byte ptr [rax - 0x75], cl ; enter -0x4f18, -0x1c ; ret
0x0000020000521b16 : ror byte ptr [rax - 0x75], cl ; enter -0x5e18, -0x27 ; ret 0x33ff
0x000002000051a716 : ror byte ptr [rax - 0x75], cl ; enter -0x5e18, 0x4d ; ret
0x000002000052b91f : ror byte ptr [rax - 0x75], cl ; enter -0x6718, 0x3b ; ret 0x4cff
0x0000020000510a22 : ror byte ptr [rax - 0x75], cl ; enter -0x6a18, -0x16 ; ret
0x0000020000529527 : ror byte ptr [rax - 0x75], cl ; enter -0x6f18, 0x5f ; ret 0x8bff
0x0000020000528e28 : ror byte ptr [rax - 0x75], cl ; enter -0x7018, 0x66 ; ret 0x48ff
0x000002000019c5f1 : ror byte ptr [rax - 0x75], cl ; enter -0x72bc, 0x42 ; sub al, ch ; ret 0xfb2e
0x000002000052e22b : ror byte ptr [rax - 0x75], cl ; enter -0x7318, 0x12 ; ret 0x8bff
0x000002000051a8a2 : ror byte ptr [rax - 0x75], cl ; enter 0x15e8, 0x4c ; ret
0x000002000052989e : ror byte ptr [rax - 0x75], cl ; enter 0x19e8, 0x5c ; ret 0x8bff
0x000002000052119d : ror byte ptr [rax - 0x75], cl ; enter 0x1ae8, -0x1d ; ret 0x40ff
0x0000020000528599 : ror byte ptr [rax - 0x75], cl ; enter 0x1ee8, 0x6f ; ret 0x8dff
0x000002000051ba95 : ror byte ptr [rax - 0x75], cl ; enter 0x22e8, 0x3a ; ret
0x0000020000510283 : ror byte ptr [rax - 0x75], cl ; enter 0x34e8, -0xe ; ret
0x0000020000524a82 : ror byte ptr [rax - 0x75], cl ; enter 0x35e8, -0x56 ; ret 0x33ff
0x000002000051667e : ror byte ptr [rax - 0x75], cl ; enter 0x39e8, -0x72 ; ret
0x0000020000521c5f : ror byte ptr [rax - 0x75], cl ; enter 0x58e8, -0x28 ; ret 0x89ff
0x000002000060aeac : ror byte ptr [rax - 0x75], cl ; enter 0x5be8, 0x61 ; ret 0x4cff
0x000002000052055a : ror byte ptr [rax - 0x75], cl ; enter 0x5de8, -0x11 ; ret 0x48ff
0x000002000052a851 : ror byte ptr [rax - 0x75], cl ; enter 0x66e8, 0x4c ; ret 0x40ff
0x000002000051c643 : ror byte ptr [rax - 0x75], cl ; enter 0x74e8, 0x2e ; ret
0x0000020000528a3c : ror byte ptr [rax - 0x75], cl ; enter 0x7be8, 0x6a ; ret 0x8bff
0x0000020000512cb0 : ror byte ptr [rax - 0x75], cl ; enter 0x7e8, -0x38 ; ret
0x00000200003f5bfe : ror byte ptr [rax - 0x75], cl ; int 0xe8
0x00000200004341df : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000056fc7
0x00000200004c0a07 : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x200000e285b
0x00000200004c2bde : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x200000e88d3
0x00000200004131cf : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x2000014f4c6
0x0000020000494dd1 : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000231016
0x00000200006037a2 : ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000231017
0x0000020000519a7d : ror byte ptr [rax - 0x75], cl ; iretd ; call r14
0x000002000011cdc9 : ror byte ptr [rax - 0x75], cl ; jmp 0x1ffc2c7dd1c
0x0000020000579654 : ror byte ptr [rax - 0x75], cl ; or r8b, r13b ; ret 0xf23c
0x00000200000f1690 : ror byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; mov al, dl ; ret
0x00000200001c4aa3 : ror byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x000002000003d792 : ror byte ptr [rax - 0x75], cl ; ret
0x0000020000003b42 : ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x000002000017f74e : ror byte ptr [rax - 0x75], cl ; ret 0x8b49
0x0000020000416699 : ror byte ptr [rax - 0x75], cl ; ret 0xba41
0x00000200004ccd4d : ror byte ptr [rax - 0x75], cl ; retf ; call 0x200000f539b
0x000002000052ea6a : ror byte ptr [rax - 0x75], cl ; retf ; call 0x2000014f4c7
0x00000200005c4d32 : ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000231016
0x000002000060357e : ror byte ptr [rax - 0x75], cl ; retf ; call 0x20000231017
0x0000020000039661 : ror byte ptr [rax - 0x75], cl ; ror dword ptr [rcx - 0x75], 1 ; ret 0xc148
0x0000020000663273 : ror byte ptr [rax - 0x75], cl ; sub r8b, bpl ; ret 0xffae
0x000002000078574b : ror byte ptr [rax - 0x75dfdbac], cl ; ret 0x8348
0x000002000064138a : ror byte ptr [rax - 0x77], 0x41 ; ret
0x00000200005e4d27 : ror byte ptr [rax - 0x77], 0x42 ; ret
0x0000020000513a34 : ror byte ptr [rax - 0x77], 0x44 ; and al, 0x20 ; call 0x20000140da9
0x00000200004af3df : ror byte ptr [rax - 0x77], 0x44 ; and al, 0x20 ; call r10
0x000002000051ead3 : ror byte ptr [rax - 0x77], 0x45 ; ret 0x8948
0x000002000060e6d2 : ror byte ptr [rax - 0x77], 0x54 ; ret
0x0000020000764b39 : ror byte ptr [rax - 0x77], 0x7c ; and al, 0x20 ; call 0x20000140da8
0x00000200003bd673 : ror byte ptr [rax - 0x77], 0x7c ; ret
0x000002000013d07e : ror byte ptr [rax - 0x77], 1 ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000002000013f805 : ror byte ptr [rax - 0x77], 1 ; add ebx, eax ; mov byte ptr [rcx], al ; ret
0x0000020000666f8b : ror byte ptr [rax - 0x77], 1 ; add r15b, r15b ; ret 0x8348
0x000002000014f5e5 : ror byte ptr [rax - 0x77], 1 ; mov eax, 0xc00000bb ; ret
0x000002000065f0f6 : ror byte ptr [rax - 0x77], 1 ; mov qword ptr [rcx + 8], rax ; ret
0x000002000002da91 : ror byte ptr [rax - 0x77], 1 ; ret
0x00000200004fda14 : ror byte ptr [rax - 0x77], 3 ; mov qword ptr [rbx + 8], rax ; jmp 0x200004fd9ea
0x00000200007378b8 : ror byte ptr [rax - 0x77], cl ; adc eax, dword ptr [rbx - 0x7cb70740] ; ret
0x0000020000117881 : ror byte ptr [rax - 0x79], 1 ; ret
0x0000020000512917 : ror byte ptr [rax - 0x7b], 0xc9 ; je 0x2000051292b ; call 0x20000140389
0x0000020000488276 : ror byte ptr [rax - 0x7b], 0xc9 ; jne 0x20000488283 ; ret
0x00000200005fc4e2 : ror byte ptr [rax - 0x7b], 0xc9 ; jne 0x200005fc4f3 ; xor eax, eax ; ret
0x0000020000636013 : ror byte ptr [rax - 0x7b], 0xd2 ; je 0x20000636021 ; call rdx
0x000002000003245c : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x20000032469 ; ret
0x000002000003be8c : ror byte ptr [rax - 0x7b], 1 ; ret 0x850f
0x00000200000f2834 : ror byte ptr [rax - 0x7b], 1 ; ror dword ptr [rdi], -0x7b ; insd dword ptr [rdi], dx ; ret 0xa
0x00000200004c0e6f : ror byte ptr [rax - 0x7b], 1 ; sal byte ptr [rsi + rbp + 0x4c], 0x8b ; ret
0x0000020000401024 : ror byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 3], 0x8a ; ret 0x8ac3
0x00000200000eeb23 : ror byte ptr [rax - 0x7d], 0x3c ; ret 0x7400
0x00000200001a87a8 : ror byte ptr [rax - 0x7d], 0x64 ; and al, 0x28 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000055c4e3 : ror byte ptr [rax - 0x7d], 0xc1 ; adc byte ptr [rbx], bh ; ret 0xee72
0x0000020000599775 : ror byte ptr [rax - 0x7d], 0xc1 ; adc byte ptr [rcx + 0x3b], al ; ret 0xe772
0x00000200005e89a9 : ror byte ptr [rax - 0x7d], 0xc1 ; add al, 0x3b ; ret 0xed72
0x0000020000135827 : ror byte ptr [rax - 0x7d], 0xc1 ; add cl, byte ptr [rax + 0x3b] ; ret 0xee72
0x00000200001ac9fa : ror byte ptr [rax - 0x7d], 0xc1 ; and al, 0x3b ; ret
0x00000200005159af : ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rax - 0x7f], cl ; ret 0x88
0x0000020000130434 : ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xe872
0x00000200005e89cd : ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xed72
0x000002000061d012 : ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xf172
0x00000200001a6f99 : ror byte ptr [rax - 0x7d], 0xc2 ; adc byte ptr [rbp + 0x3b], cl ; ret
0x00000200004ea860 : ror byte ptr [rax - 0x7d], 0xc2 ; cmp byte ptr [rbp + 0x3b], cl ; ret 0xd27c
0x00000200004c1b39 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx - 0x17], bl ; push rdi ; ret 0x48ff
0x000002000008635f : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbx ; ret
0x000002000076904f : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rcx + 0x5e], al ; ret
0x0000020000054c09 : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200000baaac : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rbp + 0x5b], bl ; ret
0x00000200000c2965 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rcx + 0x5e], al ; pop rdi ; ret
0x00000200004edf74 : ror byte ptr [rax - 0x7d], 0xc4 ; cmp byte ptr [rdi + 0x5e], bl ; pop rbx ; pop rbp ; ret
0x0000020000116524 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000011658b ; ret
0x000002000041eef4 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000041ef5b ; ret
0x00000200004943f3 : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000494441 ; pop rbp ; ret
0x00000200004eb3de : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x200004eb445 ; ret
0x0000020000557f0e : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000557f77 ; ret
0x00000200006226bb : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000622724 ; ret
0x000002000063cd4c : ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000063cdb5 ; ret
0x00000200000bb193 : ror byte ptr [rax - 0x7d], 0xc4 ; pop r12 ; pop rdi ; pop rbx ; ret
0x00000200000d8186 : ror byte ptr [rax - 0x7d], 0xc4 ; pop r13 ; pop rbx ; ret
0x0000020000556e39 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop r13 ; pop rbp ; ret
0x00000200006775fc : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop rbx ; pop rbp ; ret
0x00000200005f427a : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000002000008522d : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x00000200001b5328 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rbx ; ret
0x0000020000403e47 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000c8f1a : ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; pop rbx ; ret
0x00000200000bd890 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rdi ; ret
0x00000200004e77b8 : ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbp ; ret
0x000002000006f173 : ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbx ; ret
0x0000020000053317 : ror byte ptr [rax - 0x7d], 0xc4 ; ret
0x00000200000268b0 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200001f22e5 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rdi + 0x5b], bl ; ret
0x00000200003eff61 : ror byte ptr [rax - 0x7d], 0xc4 ; sub byte ptr [rsi + 0x5d], bl ; ret
0x0000020000012ba2 : ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200001a5f93 : ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rcx + 0x5e], al ; ret
0x00000200001dd41f : ror byte ptr [rax - 0x7d], 0xc6 ; xor byte ptr [rax - 1], cl ; ret
0x000002000067e294 : ror byte ptr [rax - 0x7d], 0xc7 ; add bh, bh ; ret 0x3b45
0x0000020000134fed : ror byte ptr [rax - 0x7d], 0xd8 ; inc ebx ; xor eax, eax ; ret
0x000002000042fe69 : ror byte ptr [rax - 0x7d], 0xe8 ; add cl, byte ptr [rcx + 0x3b] ; ret
0x00000200006bbbe0 : ror byte ptr [rax - 0x7d], 0xea ; add dword ptr [rbp - 0xf], esi ; xor eax, eax ; ret
0x0000020000226df3 : ror byte ptr [rax - 0x7d], 1 ; ret
0x00000200004266c8 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4102
0x000002000010e327 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4942
0x000002000066bae6 : ror byte ptr [rax - 0x7d], 1 ; ret 0x8902
0x00000200004f8860 : ror byte ptr [rax - 0x7d], 1 ; ret 0xe802
0x00000200004b04e9 : ror byte ptr [rax - 0x7d], 1 ; ret 0xe808
0x0000020000219188 : ror byte ptr [rax - 0x7d], cl ; ret
0x000002000043009b : ror byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000002000060d506 : ror byte ptr [rax - 0x7d], cl ; ret 0x4c28
0x00000200000fefb4 : ror byte ptr [rax - 0x7d], cl ; ret 0x4d02
0x00000200001afcef : ror byte ptr [rax - 0x7f], 0xc4 ; enter 1, 0 ; ret
0x00000200007586f0 : ror byte ptr [rax - 0x7f], 0xc4 ; mov al, 0 ; add byte ptr [rax], al ; pop rbp ; ret
0x000002000075862e : ror byte ptr [rax - 0x7f], 0xc4 ; mov al, 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000002000039928f : ror byte ptr [rax - 0x7f], 0xc4 ; or byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x00000200006201c8 : ror byte ptr [rax - 0x7f], 0xc4 ; test al, 0 ; add byte ptr [rax], al ; ret
0x0000020000116695 : ror byte ptr [rax - 0x7f], 1 ; ret
0x0000020000135422 : ror byte ptr [rax - 1], 0xc1 ; cmp rax, rdx ; jb 0x20000135424 ; ret
0x00000200000260e0 : ror byte ptr [rax - 1], 1 ; ret
0x00000200004e16cf : ror byte ptr [rax - 1], 1 ; ret 0x4466
0x00000200005d9c7e : ror byte ptr [rax - 1], 1 ; ret 0x4566
0x00000200001d1c09 : ror byte ptr [rax - 1], 1 ; ret 0xc2e8
0x00000200005d3418 : ror byte ptr [rax - 1], 1 ; ret 0xd148
0x0000020000124ad6 : ror byte ptr [rax - 1], 4 ; ret 0x40c3
0x000002000045585c : ror byte ptr [rax - 1], cl ; ret
0x0000020000038e97 : ror byte ptr [rax - 9], 0xd9 ; sbb ecx, ecx ; and eax, ecx ; ret
0x000002000015d3b6 : ror byte ptr [rax - 9], cl ; int1 ; mov rax, rdx ; ret
0x000002000012858e : ror byte ptr [rax], 0x41 ; cmp ecx, 2 ; jb 0x2000012855f ; jmp 0x2000012853d
0x000002000063451c : ror byte ptr [rax], 0x48 ; add eax, 2 ; ret
0x00000200000df3eb : ror byte ptr [rax], 0x48 ; shr eax, cl ; and eax, 1 ; ret
0x000002000012f9a7 : ror byte ptr [rax], 0x48 ; sub edx, 1 ; jne 0x2000012f996 ; ret
0x0000020000092595 : ror byte ptr [rax], 0x49 ; cmp eax, eax ; jb 0x20000092577 ; ret
0x0000020000007ce8 : ror byte ptr [rax], 0x49 ; sub ecx, 1 ; jne 0x20000007ce2 ; ret
0x00000200000f182c : ror byte ptr [rax], 0x75 ; idiv edi ; ret 0x8348
0x0000020000740515 : ror byte ptr [rax], 0x83 ; ret
0x000002000013d64e : ror byte ptr [rax], 0x83 ; ret 0x48f8
0x000002000022653a : ror byte ptr [rax], 0x83 ; ret 0x49f8
0x0000020000228af5 : ror byte ptr [rax], 0x83 ; ret 0x4df8
0x00000200000bd987 : ror byte ptr [rax], 0xc1 ; out dx, al ; add ch, bl ; ret 0x8b48
0x000002000063450e : ror byte ptr [rax], 0xc3 ; mov eax, 0x30 ; ret
0x00000200001f8b35 : ror byte ptr [rax], 0xeb ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200005dcaad : ror byte ptr [rax], 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x4466
0x00000200000defed : ror byte ptr [rax], 1 ; ret
0x0000020000500271 : ror byte ptr [rax], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000200003a3492 : ror byte ptr [rbp + 0x15ff224a], 0x9c ; ret
0x000002000007ab75 : ror byte ptr [rbp + 0x23], 1 ; ret
0x0000020000063c23 : ror byte ptr [rbp + 0x23], cl ; ret 0x8b49
0x00000200001337f3 : ror byte ptr [rbp + 0x3b], 0xc2 ; jb 0x200001337e8 ; ret
0x00000200001f7cf4 : ror byte ptr [rbp + 0x3b], 0xd3 ; jb 0x200001f7cdd ; ret
0x00000200003e0e79 : ror byte ptr [rbp + 0x3b], 1 ; ret 0x9c75
0x0000020000532e78 : ror byte ptr [rbp + 0xf], cl ; fisttp qword ptr [rcx - 1] ; ret 0x894c
0x000002000073980e : ror byte ptr [rbp + 3], 1 ; dec byte ptr [rax - 0x2d] ; ret 0x341
0x000002000073bf5d : ror byte ptr [rbp + 3], 1 ; dec byte ptr [rax - 0x2d] ; ret 0xc383
0x000002000022be8c : ror byte ptr [rbp + 3], 1 ; fimul word ptr [rax - 0x2d] ; ret 0x8341
0x0000020000735b4e : ror byte ptr [rbp + 3], 1 ; ret
0x0000020000734688 : ror byte ptr [rbp + 3], 1 ; ret 0xd348
0x0000020000223e95 : ror byte ptr [rbp + 3], cl ; ret
0x0000020000067424 : ror byte ptr [rbp + rcx*4 + 0x46], 1 ; sal dh, 1 ; ret
0x00000200001f493d : ror byte ptr [rbp + rcx*4 + 5], 0xbb ; ret
0x000002000011f935 : ror byte ptr [rbp + rcx*4 + 5], cl ; ret
0x00000200005f0eb6 : ror byte ptr [rbp + rcx*4 + 5], cl ; ret 0xf568
0x0000020000776fd3 : ror byte ptr [rbp - 0x1f17fcb6], cl ; ret 0xff8c
0x000002000004616e : ror byte ptr [rbp - 0x3eb700b2], cl ; jmp 0x20048c6ec87
0x000002000059bb18 : ror byte ptr [rbp - 0x74bbe0b5], cl ; ret
0x000002000052b21d : ror byte ptr [rbp - 0x75], 0x1c ; ret
0x0000020000193d3f : ror byte ptr [rbp - 0x75], 0x44 ; ret 0x4c40
0x0000020000133585 : ror byte ptr [rbp - 0x75], 1 ; ret
0x0000020000039916 : ror byte ptr [rbp - 0x75], 1 ; ret 0x8beb
0x000002000022cf77 : ror byte ptr [rbp - 0x75], cl ; fisttp qword ptr [rcx - 0x7d] ; ret 0x4f05
0x00000200005d584b : ror byte ptr [rbp - 0x75], cl ; ret
0x0000020000479620 : ror byte ptr [rbp - 0x77], 1 ; or cl, byte ptr [rax - 0x75] ; ret 0x8348
0x000002000046fcec : ror byte ptr [rbp - 0x7b], 0xc0 ; je 0x2000046fcfc ; call r8
0x00000200001f448d : ror byte ptr [rbp - 0x7b], 0xc0 ; jne 0x200001f4456 ; ret
0x000002000064b5f4 : ror byte ptr [rbp - 0x7b], 0xc0 ; jne 0x2000064b607 ; mov qword ptr [rdx], rax ; ret
0x00000200001ad373 : ror byte ptr [rbp - 0x7b], 0xc9 ; je 0x200001ad383 ; call r9
0x00000200000f5112 : ror byte ptr [rbp - 0x7b], 0xd2 ; jne 0x200000f5123 ; mov eax, ecx ; ret
0x00000200006cc59c : ror byte ptr [rbx + 0x200f44d1], cl ; ret
0x000002000012d084 : ror byte ptr [rbx + 0x3442404], 1 ; ret 0x9105
0x000002000012d239 : ror byte ptr [rbx + 0x3442404], 1 ; ret 0xf105
0x0000020000455858 : ror byte ptr [rbx + 0x48d233da], 0xff ; ret
0x000002000013fff9 : ror byte ptr [rbx + 0x5a300fd0], 0x58 ; pop rcx ; ret
0x000002000050e3ec : ror byte ptr [rbx + 0x77f8e8e8], cl ; ret 0x44ff
0x000002000045e91a : ror byte ptr [rbx + 0xfff85f8], 0x88 ; ret
0x000002000077f823 : ror byte ptr [rbx + rbp - 0x28], cl ; mov rax, r11 ; ret
0x0000020000525d92 : ror byte ptr [rbx + rcx*4 + 0x43], cl ; or bh, bh ; ret 0x8b48
0x00000200001dec75 : ror byte ptr [rbx + rcx*4 + 0x54], 0xc3 ; sbb byte ptr [rbx + rcx*4 + 0x4c], cl ; ret
0x00000200004e4e9e : ror byte ptr [rbx + rcx*4 - 0x37], 1 ; jne 0x200004e4eaf ; mov al, 1 ; ret
0x00000200004c1db9 : ror byte ptr [rbx + rcx*4 - 0x3f], 1 ; call 0x200000e8387
0x0000020000009b9f : ror byte ptr [rbx + rcx*4 - 0x40], 1 ; jne 0x20000009bc5 ; ret
0x00000200001d60d7 : ror byte ptr [rbx - 0x1736cc2d], 0xdf ; ret
0x00000200004b3685 : ror byte ptr [rbx - 0x3374b62f], 0xe8 ; xor dh, ch ; ret 0x48ff
0x00000200006b8217 : ror byte ptr [rbx - 0x3474b72b], 0xe8 ; ret 0xfff7
0x000002000063342a : ror byte ptr [rbx - 0x3b7cb73d], 0x20 ; pop rbx ; ret
0x0000020000542399 : ror byte ptr [rbx - 0x3b7cb73d], 0x30 ; pop rbx ; ret
0x00000200005ff9b6 : ror byte ptr [rbx - 0x3b7cb73d], 0x50 ; pop rbx ; ret
0x000002000050f126 : ror byte ptr [rbx - 0x3b7cb73d], 0x70 ; pop rbx ; ret
0x0000020000521695 : ror byte ptr [rbx - 0x40], 0xe8 ; loop 0x2000052167d ; ret 0xfff
0x000002000060c7e4 : ror byte ptr [rbx - 0x40], 0xe8 ; ret
0x000002000074dca5 : ror byte ptr [rbx - 0x49f0ba3b], 1 ; ret 0x3b44
0x00000200005c4b8d : ror byte ptr [rbx - 0x7d581733], cl ; ret
0x00000200006b52e4 : ror byte ptr [rbx - 0x7ebe7cfc], 0xc2 ; ret
0x00000200005f4911 : ror byte ptr [rbx - 0xc083f], cl ; ret 0x3b45
0x00000200000dc51f : ror byte ptr [rbx], 0 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200004be256 : ror byte ptr [rbx], cl ; add rcx, r13 ; jmp rcx
0x00000200004be213 : ror byte ptr [rbx], cl ; add rcx, rsi ; jmp rcx
0x00000200001291ef : ror byte ptr [rcx + 0x15c91], 1 ; add byte ptr [rdi], cl ; ret 0x8189
0x0000020000596941 : ror byte ptr [rcx + 0x16273035], cl ; add al, ch ; ret
0x0000020000181c4f : ror byte ptr [rcx + 0x23], 1 ; ret
0x00000200000d8bf3 : ror byte ptr [rcx + 0x23], 1 ; ror byte ptr [rax + 0x33], 1 ; ret 0x8948
0x000002000041a8b9 : ror byte ptr [rcx + 0x23], cl ; enter 0x3b49, -0x38 ; cmovne eax, edx ; ret
0x0000020000010327 : ror byte ptr [rcx + 0x23], cl ; ret 0x2b49
0x000002000008925e : ror byte ptr [rcx + 0x250f5f05], 0 ; call r8
0x0000020000088b61 : ror byte ptr [rcx + 0x25165c05], 0 ; call r8
0x000002000009c7c1 : ror byte ptr [rcx + 0x2b], 1 ; ret 0x5d8d
0x00000200003f44d1 : ror byte ptr [rcx + 0x33], 1 ; ror byte ptr [rax - 0x75], 1 ; ret 0x8b48
0x000002000013340f : ror byte ptr [rcx + 0x33], cl ; ret 0x8549
0x000002000019d59f : ror byte ptr [rcx + 0x3b], 0x3c ; sal byte ptr [rbx - 0x11], 0xff ; ret 0x8d48
0x000002000015a68a : ror byte ptr [rcx + 0x3b], 0xc ; sal byte ptr [rdx - 0xd], 0x8b ; ret 0x348
0x00000200001f86f7 : ror byte ptr [rcx + 0x3b], 0xd2 ; jb 0x200001f86d7 ; mov al, 1 ; ret
0x00000200001ff1eb : ror byte ptr [rcx + 0x3b], 1 ; ret 0xec74
0x00000200000586e4 : ror byte ptr [rcx + 0x4444247c], 0x8b ; ret
0x00000200001c1685 : ror byte ptr [rcx + 0x4520245c], 0x2b ; ret
0x000002000011aa39 : ror byte ptr [rcx + 0x48382444], 0x8b ; ret
0x0000020000636086 : ror byte ptr [rcx + 0x48c3ff02], 0x83 ; ret 0x8304
0x000002000052842a : ror byte ptr [rcx + 0x49202474], cl ; mov ecx, ebp ; call r15
0x0000020000113abd : ror byte ptr [rcx + 0x508de875], 1 ; add dword ptr [rdi], ecx ; ret 0x7d80
0x000002000002ebf3 : ror byte ptr [rcx + 0x589881], 0 ; ret
0x000002000013435f : ror byte ptr [rcx + 0xf], 0x45 ; fimul word ptr [rax - 0x75] ; ret
0x0000020000019143 : ror byte ptr [rcx + 0xf], 0xab ; ret 0x894c
0x00000200000f71e0 : ror byte ptr [rcx + 0xf], 0xaf ; ret
0x00000200007460df : ror byte ptr [rcx + 0xf], 0xaf ; ret 0x234d
0x000002000010f0a9 : ror byte ptr [rcx + 0xf], 0xbf ; add cl, byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000200007311d6 : ror byte ptr [rcx + 3], 1 ; dec byte ptr [rax - 0x2d] ; ret 0x8341
0x0000020000735f66 : ror byte ptr [rcx + 3], 1 ; dec byte ptr [rax - 0x2d] ; ret 0xc383
0x000002000022e756 : ror byte ptr [rcx + 3], 1 ; fisttp dword ptr [rax - 0x2d] ; ret 0x8341
0x000002000073d928 : ror byte ptr [rcx + 3], 1 ; fisttp qword ptr [rax - 0x2d] ; ret 0xc783
0x00000200003e6a32 : ror byte ptr [rcx + 3], 1 ; ret 0x3b48
0x000002000010ddb6 : ror byte ptr [rcx + 3], 1 ; ror byte ptr [rax - 0x75], 1 ; ret 0x9948
0x00000200003a5c5a : ror byte ptr [rcx + rax*2], 0xff ; ret 0x3b44
0x0000020000643b21 : ror byte ptr [rcx + rcx*2], 3 ; ret 0x3b4c
0x000002000067123e : ror byte ptr [rcx + rcx*4 + 0x44], 0x24 ; push rax ; inc edx ; jmp 0x2000067121b
0x0000020000597fff : ror byte ptr [rcx + rcx*4 + 0x7c], cl ; and al, 0x20 ; xor ecx, ecx ; call qword ptr [rsi]
0x00000200004018e0 : ror byte ptr [rcx - 0x14b3dbac], 1 ; or bh, bh ; ret 0x5489
0x000002000022c0c4 : ror byte ptr [rcx - 0x2d], cl ; ret 0x8349
0x0000020000546113 : ror byte ptr [rcx - 0x39], 0 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000531d80 : ror byte ptr [rcx - 0x3c6af0fa], 0x8a ; ret
0x00000200006c1da7 : ror byte ptr [rcx - 0x3e3591f3], 0xff ; ret
0x0000020000622ec7 : ror byte ptr [rcx - 0x3f], 0xe0 ; add ebp, eax ; scasd eax, dword ptr [rdi] ; ret 0xffb2
0x000002000011aa47 : ror byte ptr [rcx - 0x3f], 0xe7 ; sbb dword ptr [rcx - 0x3f], ecx ; call qword ptr [rax]
0x000002000061f0e1 : ror byte ptr [rcx - 0x3f], 0xe8 ; add al, 0xf6 ; ret 0x7403
0x00000200004317f6 : ror byte ptr [rcx - 0x3f], 0xe8 ; and byte ptr [rdi + rcx - 0x51], cl ; ret 0xc149
0x000002000019f469 : ror byte ptr [rcx - 0x3f], 1 ; call 0x1ffc2a53ca4
0x00000200001fa2e1 : ror byte ptr [rcx - 0x3f], cl ; cli ; add cl, byte ptr [rcx - 0x75] ; ret 0xc148
0x0000020000031433 : ror byte ptr [rcx - 0x3f], cl ; cli ; add ecx, dword ptr [rcx - 0x75] ; ret 0xc148
0x000002000002d627 : ror byte ptr [rcx - 0x3fccefaf], 1 ; ret
0x000002000049878c : ror byte ptr [rcx - 0x4214ffbb], 0x8b ; ret
0x000002000011549a : ror byte ptr [rcx - 0x4714efa9], 1 ; mov byte ptr [rcx + 1], dl ; ret
0x00000200004e78e3 : ror byte ptr [rcx - 0x73], 0x4f ; xor al, ch ; ret
0x00000200007486aa : ror byte ptr [rcx - 0x73], 0xc ; ret 0x8b4c
0x00000200004adb83 : ror byte ptr [rcx - 0x73], 1 ; adc al, r13b ; repe cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000200004bbf83 : ror byte ptr [rcx - 0x73], 1 ; loopne 0x200004bbf78 ; ret
0x00000200004018fc : ror byte ptr [rcx - 0x74b3dbac], 1 ; ret 0x349
0x000002000011c15e : ror byte ptr [rcx - 0x74beafbf], 0xc0 ; ret
0x00000200003f034e : ror byte ptr [rcx - 0x74cbdbbc], 1 ; ret 0x8b48
0x00000200001b54c3 : ror byte ptr [rcx - 0x75], 0x4c ; ret 0x4918
0x000002000017eb42 : ror byte ptr [rcx - 0x75], 0x8c ; ret 0x1660
0x00000200006cb11b : ror byte ptr [rcx - 0x75], 0x8c ; ret 0x8068
0x00000200001c0e32 : ror byte ptr [rcx - 0x75], 0xc ; ret 0x818a
0x00000200002065f7 : ror byte ptr [rcx - 0x75], 0xc0 ; add rsp, 0x28 ; ret
0x0000020000040f3f : ror byte ptr [rcx - 0x75], 0xc0 ; ret
0x0000020000152e1f : ror byte ptr [rcx - 0x75], 0xca ; call r10
0x0000020000697939 : ror byte ptr [rcx - 0x75], 0xcb ; add rsp, 0x28 ; jmp qword ptr [r10]
0x000002000015305f : ror byte ptr [rcx - 0x75], 0xcb ; call r11
0x0000020000498c5f : ror byte ptr [rcx - 0x75], 0xce ; xor edx, edx ; call 0x200000c2849
0x0000020000040538 : ror byte ptr [rcx - 0x75], 0xd6 ; mov rcx, r12 ; call r15
0x0000020000595007 : ror byte ptr [rcx - 0x75], 0xd6 ; mov rcx, r15 ; call rax
0x000002000044e21c : ror byte ptr [rcx - 0x75], 0xe3 ; pop rdi ; ret
0x00000200004a86b3 : ror byte ptr [rcx - 0x75], 1 ; int 0xe8
0x00000200004beed1 : ror byte ptr [rcx - 0x75], 1 ; iretd ; call 0x200000e8387
0x00000200004431ea : ror byte ptr [rcx - 0x75], 1 ; iretd ; call rax
0x0000020000496f5b : ror byte ptr [rcx - 0x75], 1 ; leave ; call 0x200000b8ea7
0x00000200004667e8 : ror byte ptr [rcx - 0x75], 1 ; or byte ptr [r9 - 0x7d], cl ; ret
0x000002000000a4d3 : ror byte ptr [rcx - 0x75], 1 ; ret
0x00000200000165bb : ror byte ptr [rcx - 0x75], 1 ; ret 0x1ba
0x000002000014a9b1 : ror byte ptr [rcx - 0x75], 1 ; ret 0x8349
0x000002000052683e : ror byte ptr [rcx - 0x75], 1 ; ret 0xf748
0x000002000002078e : ror byte ptr [rcx - 0x75], cl ; enter 0x23c, 0xf ; xchg eax, ebp ; ret 0x10e9
0x0000020000500d46 : ror byte ptr [rcx - 0x75], cl ; int 0xe8
0x000002000057ac6d : ror byte ptr [rcx - 0x75], cl ; iretd ; call 0x200001a6b63
0x00000200006071cb : ror byte ptr [rcx - 0x75], cl ; iretd ; call 0x20000231017
0x00000200006788be : ror byte ptr [rcx - 0x75], cl ; iretd ; call r11
0x000002000060885a : ror byte ptr [rcx - 0x75], cl ; leave ; call 0x20000231017
0x000002000013829f : ror byte ptr [rcx - 0x75], cl ; ret
0x0000020000091469 : ror byte ptr [rcx - 0x75], cl ; ret 0x8b41
0x00000200004ec4ed : ror byte ptr [rcx - 0x75], cl ; ret 0xf748
0x000002000077dff1 : ror byte ptr [rcx - 0x75], cl ; ret 0xf749
0x00000200001d23d2 : ror byte ptr [rcx - 0x75], cl ; retf ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r11]
0x00000200001f6a8b : ror byte ptr [rcx - 0x7699c7bf], 0x41 ; ret
0x00000200001bc7ff : ror byte ptr [rcx - 0x76b3f7bf], 1 ; ret
0x00000200000635eb : ror byte ptr [rcx - 0x77], 0x11 ; pop rdi ; ret
0x00000200000f4f0b : ror byte ptr [rcx - 0x77], 0x43 ; test byte ptr [rax - 0x75], cl ; ret 0xd348
0x000002000074050f : ror byte ptr [rcx - 0x77], 1 ; adc byte ptr [rcx - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret
0x000002000022fc68 : ror byte ptr [rcx - 0x77], 1 ; adc cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x00000200001a77f4 : ror byte ptr [rcx - 0x77], 1 ; sbb byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000001779a : ror byte ptr [rcx - 0x77], 2 ; mov eax, ecx ; ret
0x000002000003cc1a : ror byte ptr [rcx - 0x77], 9 ; ret
0x00000200000a2f88 : ror byte ptr [rcx - 0x7b], 0xc8 ; cmovne eax, edx ; ret
0x00000200000dbbe3 : ror byte ptr [rcx - 0x7d], 0x7c ; ret 8
0x00000200005a8254 : ror byte ptr [rcx - 0x7d], 0xc1 ; and byte ptr [rcx - 0x7d], cl ; ret
0x00000200006337ef : ror byte ptr [rcx - 0x7d], 0xc2 ; or byte ptr [rbp + 0x3b], al ; ret
0x000002000051d39d : ror byte ptr [rcx - 0x7d], 0xc4 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4120
0x0000020000129ad8 : ror byte ptr [rcx - 0x7d], 1 ; jmp 0x1ff8af80fea
0x000002000047e698 : ror byte ptr [rcx - 0x7d], 1 ; jmp 0x200490a71a8
0x00000200003fc487 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4102
0x0000020000225723 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4408
0x000002000015a267 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4804
0x00000200001bb28b : ror byte ptr [rcx - 0x7d], 1 ; ret 0x4907
0x000002000064acf1 : ror byte ptr [rcx - 0x7d], 1 ; ret 0x8102
0x000002000064af3d : ror byte ptr [rcx - 0x7d], 1 ; ret 0xb802
0x000002000013ebb0 : ror byte ptr [rcx - 0x7d], cl ; ret 0x4f05
0x000002000039c8b2 : ror byte ptr [rcx - 0xc1858eb], cl ; dec dword ptr [rax + 0x63] ; ret 0x8d48
0x000002000018a874 : ror byte ptr [rcx - 1], 1 ; adc byte ptr [r8 + 0x2b], r9b ; ret 0x8d48
0x000002000023047d : ror byte ptr [rcx - 1], 1 ; ret
0x00000200000a399a : ror byte ptr [rcx - 1], 1 ; ret 0x4cf0
0x00000200000f60b2 : ror byte ptr [rcx - 1], 1 ; ret 0xb60f
0x000002000008abae : ror byte ptr [rcx - 1], 1 ; ret 0xc149
0x000002000072b8cf : ror byte ptr [rcx - 1], 1 ; ret 0xd348
0x000002000016033f : ror byte ptr [rcx - 1], cl ; enter -0x72b7, 0x34 ; ret 0x8b48
0x0000020000407823 : ror byte ptr [rcx - 1], cl ; jrcxz 0x200004077e9 ; add dword ptr [rax], eax ; add al, al ; ret
0x0000020000580573 : ror byte ptr [rdi + 0x48], 0x3b ; ret 0x870f
0x00000200000085cb : ror byte ptr [rdi + rcx + 0x43], 1 ; rol dword ptr [rcx - 0x75], 1 ; ret 0x8348
0x00000200000407ae : ror byte ptr [rdi + rcx + 0x45], cl ; ret 0xf41
0x00000200000f1746 : ror byte ptr [rdi - 0x75], 0xc ; ret 0x854d
0x00000200005d5496 : ror byte ptr [rdi], 0 ; add byte ptr [rax - 1], cl ; ret 0xba0f
0x0000020000740a60 : ror byte ptr [rdi], 0x20 ; ret
0x0000020000143c6a : ror byte ptr [rdi], 0x30 ; ret
0x00000200001c977c : ror byte ptr [rdi], 0x32 ; shl rdx, 0x20 ; or rax, rdx ; ret
0x0000020000595944 : ror byte ptr [rdi], 0x44 ; ret
0x0000020000622a1d : ror byte ptr [rdi], 0x44 ; ret 0x189
0x000002000060f186 : ror byte ptr [rdi], 0x44 ; ret 0x4ba
0x000002000060e5db : ror byte ptr [rdi], 0x44 ; ret 0x558d
0x000002000060e7ed : ror byte ptr [rdi], 0x44 ; ret 0x568d
0x000002000060ecd5 : ror byte ptr [rdi], 0x44 ; ret 0x5ba
0x000002000060e2f1 : ror byte ptr [rdi], 0x44 ; ret 0x6ba
0x000002000060dfc7 : ror byte ptr [rdi], 0x44 ; ret 0x7ba
0x00000200001bdd18 : ror byte ptr [rdi], 0x44 ; ret 0x8189
0x00000200003ad1e0 : ror byte ptr [rdi], 0x44 ; ret 0x8ba
0x000002000060e21c : ror byte ptr [rdi], 0x44 ; ret 0x9ba
0x000002000060e307 : ror byte ptr [rdi], 0x44 ; ret 0x9ce9
0x00000200001bdd02 : ror byte ptr [rdi], 0x44 ; ret 0xaba
0x00000200003db8c9 : ror byte ptr [rdi], 0x44 ; ret 0xccc3
0x000002000019e547 : ror byte ptr [rdi], 0x44 ; ret 0xf44
0x00000200004f4458 : ror byte ptr [rdi], 0x44 ; ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop rbx ; ret
0x0000020000461888 : ror byte ptr [rdi], 0x45 ; ret
0x000002000044cb26 : ror byte ptr [rdi], 0x45 ; ret 0x394c
0x000002000053d654 : ror byte ptr [rdi], 0x45 ; ret 0x8a44
0x00000200003cbf6f : ror byte ptr [rdi], 0x49 ; ret
0x000002000004c82a : ror byte ptr [rdi], 0x4e ; ret 0x4589
0x000002000050d5cb : ror byte ptr [rdi], 0x82 ; fdiv qword ptr [rbx + 8] ; add bh, bh ; ret 0xfa83
0x000002000050d6ac : ror byte ptr [rdi], 0x82 ; out dx, al ; add dword ptr [rax], eax ; add bh, bh ; ret 0xfa83
0x00000200000b8200 : ror byte ptr [rdi], 0x82 ; ret
0x000002000049377c : ror byte ptr [rdi], 0x82 ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x0000020000411142 : ror byte ptr [rdi], 0x82 ; xchg eax, edi ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x000002000062f342 : ror byte ptr [rdi], 0x84 ; add al, 0 ; add byte ptr [rbx], bh ; ret
0x000002000062e05b : ror byte ptr [rdi], 0x84 ; add dword ptr [rax], 0x8b440000 ; ret
0x000002000042d4d4 : ror byte ptr [rdi], 0x84 ; add dword ptr [rax], eax ; add byte ptr [rcx - 1], al ; ret
0x00000200003cce0b : ror byte ptr [rdi], 0x84 ; and bh, byte ptr [rax + 0x19] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000012ce74 : ror byte ptr [rdi], 0x84 ; and dword ptr [rbp + 7], esp ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000414a2f : ror byte ptr [rdi], 0x84 ; call rbx
0x000002000048a533 : ror byte ptr [rdi], 0x84 ; clc ; ret
0x000002000045b045 : ror byte ptr [rdi], 0x84 ; cli ; ret
0x00000200003e84c9 : ror byte ptr [rdi], 0x84 ; fdiv qword ptr [rbx - 0x7cb7ffe8] ; ret
0x000002000012c175 : ror byte ptr [rdi], 0x84 ; fsubr qword ptr [rbp + 7] ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000684adf : ror byte ptr [rdi], 0x84 ; imul eax, dword ptr [rbx], 0 ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000047ae52 : ror byte ptr [rdi], 0x84 ; in al, dx ; jnp 0x2000047ae73 ; add dh, dh ; ret
0x000002000018924c : ror byte ptr [rdi], 0x84 ; in al, dx ; push rax ; int1 ; dec dword ptr [rax - 9] ; ret
0x000002000013ca35 : ror byte ptr [rdi], 0x84 ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax], bh ; pop rbp ; ret
0x00000200005c325e : ror byte ptr [rdi], 0x84 ; int 0x80
0x00000200003e38b2 : ror byte ptr [rdi], 0x84 ; jmp rcx
0x00000200004e5770 : ror byte ptr [rdi], 0x84 ; lar eax, word ptr [rax] ; add byte ptr [rbp + 0x3b], al ; ret 0x850f
0x0000020000513d04 : ror byte ptr [rdi], 0x84 ; leave ; sub eax, 0x8a440008 ; ret
0x000002000042d39b : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; add bh, bh ; ret 0x3b41
0x00000200000feae5 : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; ret 6
0x00000200000e2b65 : ror byte ptr [rdi], 0x84 ; mov edx, 0xe9fffffe ; ret
0x0000020000685eeb : ror byte ptr [rdi], 0x84 ; mov esi, 0xf6000000 ; ret 0x7401
0x00000200004f2925 : ror byte ptr [rdi], 0x84 ; mov esp, 0x8b00096c ; ret
0x00000200004ca70d : ror byte ptr [rdi], 0x84 ; mov esp, 0x8b000fcb ; ret
0x00000200005428fb : ror byte ptr [rdi], 0x84 ; movsd dword ptr [rdi], dword ptr [rsi] ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000048a591 : ror byte ptr [rdi], 0x84 ; nop ; ret
0x000002000077f132 : ror byte ptr [rdi], 0x84 ; or eax, 0x6b000001 ; ret
0x0000020000520860 : ror byte ptr [rdi], 0x84 ; outsd dx, dword ptr [rsi] ; int 0xa
0x00000200003bf48d : ror byte ptr [rdi], 0x84 ; pop rbp ; and eax, 0x8b44001a ; ret
0x000002000064253d : ror byte ptr [rdi], 0x84 ; pop rbx ; add dword ptr [rax], eax ; add byte ptr [rbx], bh ; ret 0x7675
0x00000200003e5fd6 : ror byte ptr [rdi], 0x84 ; pop rbx ; ret 0x18
0x0000020000176a5a : ror byte ptr [rdi], 0x84 ; pop rsp ; popfq ; in eax, dx ; dec dword ptr [rax - 0x7d] ; ret 0x830c
0x00000200001997c4 : ror byte ptr [rdi], 0x84 ; push rbp ; popfq ; hlt ; inc dword ptr [rbx] ; ret
0x0000020000085012 : ror byte ptr [rdi], 0x84 ; push rbp ; ret
0x00000200004b4cba : ror byte ptr [rdi], 0x84 ; push rsi ; ret 0x10
0x0000020000191dca : ror byte ptr [rdi], 0x84 ; pushfq ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000000cf5c : ror byte ptr [rdi], 0x84 ; ret
0x00000200000d50ee : ror byte ptr [rdi], 0x84 ; ret 0
0x00000200004baf63 : ror byte ptr [rdi], 0x84 ; ret 0x1082
0x00000200004b6276 : ror byte ptr [rdi], 0x84 ; ret 0x10be
0x0000020000056852 : ror byte ptr [rdi], 0x84 ; ret 0x121b
0x000002000003ee4b : ror byte ptr [rdi], 0x84 ; ret 0x1274
0x0000020000462ee3 : ror byte ptr [rdi], 0x84 ; ret 0x1465
0x00000200004394c7 : ror byte ptr [rdi], 0x84 ; ret 0x1647
0x0000020000438f79 : ror byte ptr [rdi], 0x84 ; ret 0x164c
0x00000200003ea3d3 : ror byte ptr [rdi], 0x84 ; ret 0x18a2
0x00000200003e7152 : ror byte ptr [rdi], 0x84 ; ret 0x18b6
0x0000020000755ae0 : ror byte ptr [rdi], 0x84 ; ret 0x22a
0x000002000011168b : ror byte ptr [rdi], 0x84 ; ret 0x5ea
0x0000020000132c59 : ror byte ptr [rdi], 0x84 ; ret 0x723
0x000002000053d4c6 : ror byte ptr [rdi], 0x84 ; ret 0x996
0x0000020000521b59 : ror byte ptr [rdi], 0x84 ; ret 0xa
0x0000020000532933 : ror byte ptr [rdi], 0x84 ; ret 0xa0c
0x000002000039c2df : ror byte ptr [rdi], 0x84 ; ret 0xbb
0x00000200001761c7 : ror byte ptr [rdi], 0x84 ; ret 0xed72
0x00000200001772a6 : ror byte ptr [rdi], 0x84 ; ret 0xed9d
0x00000200005bf939 : ror byte ptr [rdi], 0x84 ; ret 0xeeeb
0x000002000057c6d2 : ror byte ptr [rdi], 0x84 ; ret 0xf623
0x0000020000094101 : ror byte ptr [rdi], 0x84 ; ret 0xfffb
0x000002000059b815 : ror byte ptr [rdi], 0x84 ; ret 0xfffe
0x0000020000061165 : ror byte ptr [rdi], 0x84 ; ret 1
0x0000020000061199 : ror byte ptr [rdi], 0x84 ; ret 2
0x00000200004af427 : ror byte ptr [rdi], 0x84 ; sahf ; call qword ptr [rax]
0x000002000008505e : ror byte ptr [rdi], 0x84 ; stc ; ret 0xf
0x0000020000020f0f : ror byte ptr [rdi], 0x84 ; std ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000053975a : ror byte ptr [rdi], 0x84 ; std ; ret
0x0000020000672dcb : ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret 0x850f
0x000002000045b766 : ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; ret 0x14
0x000002000007435f : ror byte ptr [rdi], 0x84 ; sub bl, byte ptr [rcx - 0x74b2fff0] ; ret 0x2b4c
0x000002000058f6c4 : ror byte ptr [rdi], 0x84 ; sub dh, byte ptr [rsi - 9] ; dec dword ptr [rax - 0x75] ; ret
0x0000020000112cc9 : ror byte ptr [rdi], 0x84 ; test byte ptr [rcx], dh ; idiv edi ; jmp rax
0x0000020000498d1e : ror byte ptr [rdi], 0x84 ; xor eax, 0xf6000002 ; ret 0xc601
0x000002000042a74d : ror byte ptr [rdi], 0x85 ; call qword ptr fs:[rsi]
0x0000020000598e73 : ror byte ptr [rdi], 0x85 ; cdq ; ret
0x0000020000047747 : ror byte ptr [rdi], 0x85 ; in eax, dx ; rcl dword ptr [rdx], 1 ; add bh, bh ; ret
0x000002000049f37f : ror byte ptr [rdi], 0x85 ; in eax, dx ; ret 0x11
0x0000020000521b66 : ror byte ptr [rdi], 0x85 ; in eax, dx ; ret 0xa
0x0000020000066770 : ror byte ptr [rdi], 0x85 ; int1 ; adc qword ptr [rax], rax ; ret
0x000002000050d9ef : ror byte ptr [rdi], 0x85 ; je 0x2000050da06 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000018856e : ror byte ptr [rdi], 0x85 ; jo 0x200001885ae ; int1 ; push rsi ; ret
0x00000200007495f5 : ror byte ptr [rdi], 0x85 ; lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x000002000002484c : ror byte ptr [rdi], 0x85 ; mov al, 0x97 ; adc eax, dword ptr [rax] ; ret
0x00000200000432c5 : ror byte ptr [rdi], 0x85 ; nop ; adc al, byte ptr [r8] ; ret
0x00000200000ba416 : ror byte ptr [rdi], 0x85 ; popfq ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000752756 : ror byte ptr [rdi], 0x85 ; push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000043adc4 : ror byte ptr [rdi], 0x85 ; push rdi ; xor dl, byte ptr [rsi] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000042542d : ror byte ptr [rdi], 0x85 ; push rsi ; cmp edx, dword ptr [rdi] ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000075d7d7 : ror byte ptr [rdi], 0x85 ; push rsi ; ret
0x00000200000f286c : ror byte ptr [rdi], 0x85 ; push rsp ; ret 0xa
0x0000020000580469 : ror byte ptr [rdi], 0x85 ; rcr ebx, cl ; call 0x1ffc2834d7b
0x000002000002df0a : ror byte ptr [rdi], 0x85 ; ret
0x00000200000286a8 : ror byte ptr [rdi], 0x85 ; ret 0
0x000002000045acbb : ror byte ptr [rdi], 0x85 ; ret 0x14
0x000002000046180d : ror byte ptr [rdi], 0x85 ; ret 0x1475
0x0000020000404543 : ror byte ptr [rdi], 0x85 ; ret 0x1793
0x00000200003d9b37 : ror byte ptr [rdi], 0x85 ; ret 0x192b
0x00000200000cbcd4 : ror byte ptr [rdi], 0x85 ; ret 0xc8d
0x00000200005c8619 : ror byte ptr [rdi], 0x85 ; ret 0xf071
0x000002000067ca48 : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x0000020000687ae5 : ror byte ptr [rdi], 0x85 ; ret 2
0x00000200004b3272 : ror byte ptr [rdi], 0x85 ; ret 4
0x00000200005c850e : ror byte ptr [rdi], 0x85 ; sahf ; jb 0x200005c850a ; jmp qword ptr [rcx]
0x00000200000af7d0 : ror byte ptr [rdi], 0x85 ; sbb al, byte ptr [rax + rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3345
0x00000200004eb4e3 : ror byte ptr [rdi], 0x85 ; stosd dword ptr [rdi], eax ; ret
0x000002000044abb1 : ror byte ptr [rdi], 0x85 ; test byte ptr [rsi - 0x74b7ffeb], al ; ret
0x00000200000f6974 : ror byte ptr [rdi], 0x85 ; xchg eax, ebp ; sbb eax, 0x8b410007 ; ret 0x8348
0x00000200005d76a2 : ror byte ptr [rdi], 0x85 ; xchg eax, edi ; jp 0x200005d76a7 ; dec dword ptr [rax - 1] ; ret 0x8349
0x0000020000735054 : ror byte ptr [rdi], 0x87 ; insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x840f
0x0000020000736f38 : ror byte ptr [rdi], 0x87 ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rcx + 0x3b], cl ; ret 0x840f
0x000002000039aeae : ror byte ptr [rdi], 0x88 ; adc eax, 0xe80000c8 ; ret 0x154b
0x0000020000757362 : ror byte ptr [rdi], 0x88 ; add al, byte ptr [rax] ; add bh, bh ; ret
0x000002000049f27e : ror byte ptr [rdi], 0x88 ; cdq ; ret
0x0000020000513d1b : ror byte ptr [rdi], 0x88 ; cdq ; sub eax, 0x8a440008 ; ret
0x00000200003cb897 : ror byte ptr [rdi], 0x88 ; fmul dword ptr [rdx - 0x74b7ffe7] ; ret
0x000002000049cebb : ror byte ptr [rdi], 0x88 ; leave ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret
0x000002000051edaf : ror byte ptr [rdi], 0x88 ; mov edi, 0x83000003 ; ret
0x000002000076d593 : ror byte ptr [rdi], 0x88 ; mov esi, 0x8b00010a ; ret
0x000002000052421c : ror byte ptr [rdi], 0x88 ; outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x840f
0x00000200000eb28b : ror byte ptr [rdi], 0x88 ; pop rdi ; add al, 0xb ; add byte ptr [rcx - 0x75], al ; ret 0x8b48
0x00000200000329d2 : ror byte ptr [rdi], 0x88 ; push rcx ; call qword ptr [rdx]
0x0000020000083f92 : ror byte ptr [rdi], 0x88 ; ret
0x00000200000f2a99 : ror byte ptr [rdi], 0x88 ; ret 0
0x0000020000036d5f : ror byte ptr [rdi], 0x88 ; ret 0x12cb
0x0000020000470633 : ror byte ptr [rdi], 0x88 ; ret 0x13e3
0x000002000000fa0a : ror byte ptr [rdi], 0x88 ; ret 0x14a9
0x00000200005b18c9 : ror byte ptr [rdi], 0x88 ; ret 0x15
0x000002000043e067 : ror byte ptr [rdi], 0x88 ; ret 0x161c
0x00000200003d348b : ror byte ptr [rdi], 0x88 ; ret 0x1921
0x00000200003cf3b3 : ror byte ptr [rdi], 0x88 ; ret 0x1958
0x00000200003d2177 : ror byte ptr [rdi], 0x88 ; ret 0x198b
0x00000200004f2bd2 : ror byte ptr [rdi], 0x88 ; ret 0x96a
0x000002000055c0da : ror byte ptr [rdi], 0x88 ; ret 0xe55a
0x000002000056268c : ror byte ptr [rdi], 0x88 ; ret 0xe613
0x0000020000565ca7 : ror byte ptr [rdi], 0x88 ; ret 0xe6df
0x0000020000573687 : ror byte ptr [rdi], 0x88 ; ret 0xe74a
0x000002000015bec3 : ror byte ptr [rdi], 0x88 ; ret 0xebd7
0x000002000077e175 : ror byte ptr [rdi], 0x88 ; ret 0xfef6
0x000002000077e075 : ror byte ptr [rdi], 0x88 ; ret 0xfef7
0x00000200005db268 : ror byte ptr [rdi], 0x88 ; ret 1
0x00000200005efa07 : ror byte ptr [rdi], 0x88 ; ret 2
0x00000200005de2de : ror byte ptr [rdi], 0x88 ; ret 9
0x0000020000073fdd : ror byte ptr [rdi], 0x88 ; salc ; wait ; adc byte ptr [rax], al ; ret
0x00000200004a34f4 : ror byte ptr [rdi], 0x88 ; sbb byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x000002000075d529 : ror byte ptr [rdi], 0x88 ; stosb byte ptr [rdi], al ; ret
0x000002000075d814 : ror byte ptr [rdi], 0x88 ; xchg eax, edi ; ret
0x00000200003fcfab : ror byte ptr [rdi], 0x88 ; xchg eax, edx ; ret
0x0000020000510bb2 : ror byte ptr [rdi], 0x89 ; mov ebp, 0x8b000850 ; ret
0x0000020000171f57 : ror byte ptr [rdi], 0x89 ; ret
0x00000200005219b9 : ror byte ptr [rdi], 0x89 ; salc ; ret 0xa
0x00000200005965ac : ror byte ptr [rdi], 0x89 ; xchg eax, ecx ; ret 0xfff7
0x0000020000649cd6 : ror byte ptr [rdi], 0x8f ; ret
0x00000200003eeccd : ror byte ptr [rdi], 0x8f ; ret 0
0x0000020000643b28 : ror byte ptr [rdi], 0x93 ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x0000020000035f42 : ror byte ptr [rdi], 0x94 ; ret
0x000002000069be82 : ror byte ptr [rdi], 0x94 ; ret 0x9489
0x000002000077b39c : ror byte ptr [rdi], 0x94 ; ret 0x97e9
0x00000200001e1a6e : ror byte ptr [rdi], 0x94 ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x0000020000058a0f : ror byte ptr [rdi], 0x95 ; ret
0x0000020000451536 : ror byte ptr [rdi], 0x95 ; ret 0x6483
0x00000200001e23eb : ror byte ptr [rdi], 0x95 ; ret 0x8941
0x0000020000676536 : ror byte ptr [rdi], 0x95 ; ret 0xd03b
0x00000200003e35ff : ror byte ptr [rdi], 0x99 ; ret
0x000002000041d5fb : ror byte ptr [rdi], 0x9e ; ret
0x00000200000ff27c : ror byte ptr [rdi], 0xaf ; ret
0x0000020000053843 : ror byte ptr [rdi], 0xb6 ; leave ; mov cr8, rcx ; ret
0x0000020000414b64 : ror byte ptr [rdi], 0xb6 ; ret
0x000002000004e511 : ror byte ptr [rdi], 0xb6 ; ret 0x548
0x000002000019332a : ror byte ptr [rdi], 0xb6 ; ret 0xf44
0x00000200003ec857 : ror byte ptr [rdi], 0xb7 ; add cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x00000200003efdfd : ror byte ptr [rdi], 0xb7 ; add r9b, byte ptr [rax + 0x2b] ; ret
0x000002000003f192 : ror byte ptr [rdi], 0xb7 ; ret
0x0000020000782c2c : ror byte ptr [rdi], 0xb7 ; ret 0x894c
0x00000200001f62e3 : ror byte ptr [rdi], 0xb7 ; ret 0xe77
0x00000200004c9fd6 : ror byte ptr [rdi], 1 ; add byte ptr [rcx - 0x75], cl ; salc ; mov rcx, r13 ; call rax
0x00000200000a9b62 : ror byte ptr [rdi], 1 ; add dword ptr [rbx + 4], 0 ; add bh, bh ; ret 0x8d4c
0x000002000066a68c : ror byte ptr [rdi], 1 ; fsubr st(3) ; add al, 0xb ; fdivr st(7) ; ret
0x00000200000aee75 : ror byte ptr [rdi], 1 ; mov dh, 0x14 ; or dh, dh ; ret 0x7408
0x000002000004e530 : ror byte ptr [rdi], 1 ; mov dh, 0x45 ; ret
0x0000020000232eaa : ror byte ptr [rdi], 1 ; mov dh, 5 ; ret 0x14c5
0x0000020000486c0d : ror byte ptr [rdi], 1 ; ret 0x854d
0x00000200000bbccd : ror byte ptr [rdi], 1 ; ret 0xd08b
0x0000020000146a4f : ror byte ptr [rdi], 1 ; scasb al, byte ptr [rdi] ; clc ; ret
0x00000200000aafb7 : ror byte ptr [rdi], 1 ; test dword ptr [rcx + rcx], edx ; add dh, dh ; ret 0xf04
0x0000020000407506 : ror byte ptr [rdi], 1 ; xchg eax, ebp ; ret
0x0000020000178585 : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0x2244
0x00000200001e8ace : ror byte ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000200004922ed : ror byte ptr [rdi], 1 ; xchg esp, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x000002000013fffb : ror byte ptr [rdi], 1 ; xor byte ptr [rdx + 0x58], bl ; pop rcx ; ret
0x00000200004c9d7e : ror byte ptr [rdi], cl ; add byte ptr [rax - 0x75], cl ; salc ; mov rcx, r15 ; call rax
0x000002000002141d : ror byte ptr [rdi], cl ; test ah, dl ; ret 0x13
0x00000200004a720f : ror byte ptr [rdi], cl ; test byte ptr [rcx], bh ; jb 0x200004a722e ; add dh, dh ; ret
0x000002000015cc13 : ror byte ptr [rdi], cl ; test byte ptr [rdi - 0x160013ff], ah ; ret
0x000002000053089c : ror byte ptr [rdi], cl ; test byte ptr [rdi - 0x74fff5e9], cl ; ret 0xffb9
0x00000200000fea92 : ror byte ptr [rdi], cl ; test byte ptr [rdi], bl ; ret
0x0000020000521d4e : ror byte ptr [rdi], cl ; test byte ptr [rdx], cl ; ret 0xa
0x0000020000207142 : ror byte ptr [rdi], cl ; test cl, dh ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x0000020000050123 : ror byte ptr [rdi], cl ; test dword ptr [rbp + 0x67], eax ; adc al, byte ptr [rax] ; ret
0x00000200000500df : ror byte ptr [rdi], cl ; test dword ptr [rbp + 0x67], ecx ; adc al, byte ptr [rax] ; ret
0x000002000006a932 : ror byte ptr [rdi], cl ; test dword ptr [rbp - 0x74ffffff], edi ; ret
0x00000200004e09d8 : ror byte ptr [rdi], cl ; test dword ptr [rcx + rax - 0x75bf0000], esp ; ret
0x00000200000f83a9 : ror byte ptr [rdi], cl ; test dword ptr [rcx + rcx - 0x3fccfff9], ecx ; ret
0x000002000022f1e6 : ror byte ptr [rdi], cl ; test ebp, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000041612d : ror byte ptr [rdi], cl ; test ebx, edi ; ret
0x00000200004a7b24 : ror byte ptr [rdi], cl ; test esi, edx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x7c], al ; ret 0xe74
0x000002000051855b : ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x349
0x0000020000163367 : ror byte ptr [rdx + 9], 0xc ; ret 0x34c
0x0000020000036173 : ror byte ptr [rdx - 0x73], 4 ; adc dword ptr [rcx + 0x3b], ecx ; ret
0x00000200001e790c : ror byte ptr [rdx - 0x75], 4 ; ret 0x8b48
0x00000200005367ec : ror byte ptr [rdx - 8], 0xff ; add rsp, 0x38 ; ret
0x0000020000689645 : ror byte ptr [rdx], 0x8b ; enter -0x74bc, -8 ; call 0x200006858c9
0x000002000021364d : ror byte ptr [rdx], 1 ; or dword ptr [rdi], ecx ; add cl, byte ptr [rax + 0x33] ; ret
0x0000020000531667 : ror byte ptr [rip - 0x74b3fff6], 1 ; ret 0x8b49
0x000002000064390e : ror byte ptr [rsi + 0x39], 0x1c ; ret 0xbc74
0x00000200005cb652 : ror byte ptr [rsi - 0x46160031], cl ; ret 0xfff4
0x00000200000ad0c2 : ror byte ptr [rsi - 0x75], 0x4c ; ret
0x00000200004b6c72 : ror byte ptr [rsp + rax*2 + 0xf], 0xb6 ; ret
0x000002000019394d : ror byte ptr [rsp + rcx*2], 3 ; ret
0x00000200006207f1 : ror cl, cl ; ret 0x48ff
0x000002000018d76d : ror dword ptr [r8 + 0x2b], 1 ; ret 0x47e9
0x00000200001885f2 : ror dword ptr [r8 + 0x2b], 1 ; ret 0x50e9
0x000002000018ce76 : ror dword ptr [r8 + 0x2b], 1 ; ret 0xf9e9
0x000002000008d850 : ror dword ptr [r8 - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 1] ; ret 0xc148
0x00000200001ff2be : ror dword ptr [r9 - 0x74bee789], cl ; ret 0x8b48
0x000002000052568f : ror dword ptr [rax + 0x23], 1 ; ror dword ptr [rax + 0x2b], 1 ; ret 0xd233
0x000002000008b7ee : ror dword ptr [rax + 0x2b], 0x42 ; sbb byte ptr [rax + 3], cl ; ret
0x00000200000e0eac : ror dword ptr [rax + 0x2b], 1 ; fimul dword ptr [rax - 1] ; ret
0x000002000018d76e : ror dword ptr [rax + 0x2b], 1 ; ret 0x47e9
0x00000200001885f3 : ror dword ptr [rax + 0x2b], 1 ; ret 0x50e9
0x0000020000525692 : ror dword ptr [rax + 0x2b], 1 ; ret 0xd233
0x000002000018ce77 : ror dword ptr [rax + 0x2b], 1 ; ret 0xf9e9
0x00000200002258de : ror dword ptr [rax + 0x33], cl ; ror byte ptr [rax - 0x2d], 1 ; ret 0x8341
0x000002000008e757 : ror dword ptr [rax + 0x39], -0x54 ; ret
0x00000200000bc43a : ror dword ptr [rax + 0x39], 0x1c ; ret 0x8d4c
0x000002000009d8d4 : ror dword ptr [rax + 0x39], 0x34 ; ret 0x8d4c
0x00000200000909e1 : ror dword ptr [rax + 0x39], 0x74 ; ret
0x00000200001111f5 : ror dword ptr [rax + 0x3b], -0x30 ; jb 0x20000111208 ; mov al, r8b ; ret
0x0000020000643a94 : ror dword ptr [rax + 0x3b], -0x30 ; setae al ; ret
0x0000020000135425 : ror dword ptr [rax + 0x3b], -0x3e ; jb 0x20000135421 ; ret
0x000002000022bf25 : ror dword ptr [rax + 0x63], cl ; ret 0x8d48
0x000002000013c082 : ror dword ptr [rax + 0x6650144c], -1 ; ret
0x00000200000db948 : ror dword ptr [rax + 0x6b], cl ; ret 0x48f8
0x0000020000115cfc : ror dword ptr [rax + 0xb], -0x3f ; ret
0x000002000072bac8 : ror dword ptr [rax + 0xb], 1 ; ret 0x7c89
0x000002000022fbb4 : ror dword ptr [rax + 0xb], 1 ; ret 0x8b48
0x00000200001f7b95 : ror dword ptr [rax + 0xb], 1 ; ret 0xb941
0x0000020000168b6f : ror dword ptr [rax + 0xf], -0x4d ; ret 0x4c89
0x00000200000a91c3 : ror dword ptr [rax + 0xf], -0x51 ; ret
0x00000200001eecfb : ror dword ptr [rax + 0xf], -0x51 ; ret 0x694d
0x000002000018a18e : ror dword ptr [rax + 0xf], 0x43 ; ret 0xba48
0x0000020000431c92 : ror dword ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; sal dh, 1 ; ret 0x7401
0x00000200006d94ef : ror dword ptr [rax + 1], 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48ff
0x00000200006d945a : ror dword ptr [rax + 1], 0xd ; pop rsi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffff
0x00000200006d94a6 : ror dword ptr [rax + 1], 0xd ; ret 0xc2a4
0x0000020000230d76 : ror dword ptr [rax + 3], 1 ; ret
0x00000200003edc71 : ror dword ptr [rax + 3], 1 ; ret 0x8341
0x0000020000017c0d : ror dword ptr [rax + 3], 1 ; ret 0x8b49
0x00000200006538d6 : ror dword ptr [rax + 3], cl ; sar bh, cl ; ret
0x00000200003cbde5 : ror dword ptr [rax + 9], 0x54 ; ret
0x00000200000da38e : ror dword ptr [rax - 0x18], -0x15 ; ret
0x000002000072f825 : ror dword ptr [rax - 0x2d], 1 ; ret
0x0000020000135759 : ror dword ptr [rax - 0x2f], -8 ; dec rax ; ret
0x000002000040b48c : ror dword ptr [rax - 0x2f], -8 ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x0000020000135740 : ror dword ptr [rax - 0x2f], -8 ; ret
0x00000200001131ca : ror dword ptr [rax - 0x3b7cb7fd], 0x30 ; pop rbx ; ret
0x00000200000520dc : ror dword ptr [rax - 0x3f], -0x18 ; cmp bl, al ; xor eax, eax ; ret
0x00000200000f04ba : ror dword ptr [rax - 0x3f], -0x18 ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax], eax ; ret
0x00000200007628b7 : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rax + 0x23], ecx ; ret
0x00000200001d6799 : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rax + 0x23], ecx ; ret 0x2b48
0x0000020000005d3a : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rax + 0x23], ecx ; ret 0x2b49
0x000002000000dc85 : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rax + 0x23], ecx ; ret 0xba48
0x00000200000104c3 : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rcx + 0x23], ecx ; ret 0x2b48
0x0000020000010598 : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rcx + 0x23], ecx ; ret 0x2b49
0x000002000008beb5 : ror dword ptr [rax - 0x3f], -0x18 ; or dword ptr [rcx + 0x23], ecx ; ret 0xba49
0x00000200000f773b : ror dword ptr [rax - 0x3f], -0x1b ; and byte ptr [rcx + 0x23], cl ; ret
0x0000020000491f78 : ror dword ptr [rax - 0x3f], -0x20 ; and byte ptr [rax + 0xb], cl ; ret 0x3b48
0x0000020000042dcc : ror dword ptr [rax - 0x3f], -0x20 ; or byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200004bec25 : ror dword ptr [rax - 0x3f], -0x39 ; add ecx, dword ptr [rcx - 0x7d] ; ret 0x4808
0x000002000007675a : ror dword ptr [rax - 0x3f], 1 ; call 0x1ffc242af75
0x000002000008d851 : ror dword ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 1] ; ret 0xc148
0x00000200001c0f4d : ror dword ptr [rax - 0x73], 0x14 ; ret 0xb70f
0x00000200006774f5 : ror dword ptr [rax - 0x73], 0x15 ; ret
0x00000200001363c6 : ror dword ptr [rax - 0x73], 0xd ; ret 0x106c
0x0000020000615a17 : ror dword ptr [rax - 0x73], 0xd ; stosd dword ptr [rdi], eax ; ret
0x000002000003dac9 : ror dword ptr [rax - 0x73], 4 ; ret 0xccc3
0x000002000076685f : ror dword ptr [rax - 0x73], cl ; adc byte ptr [r9 - 0x39], cl ; ret
0x00000200000efecf : ror dword ptr [rax - 0x73], cl ; and al, 0x20 ; call 0x200000ec188
0x000002000049afc0 : ror dword ptr [rax - 0x73], cl ; and al, 0x48 ; call 0x200000bc8d9
0x000002000049af97 : ror dword ptr [rax - 0x73], cl ; and al, 0x48 ; call 0x200000bc949
0x000002000059070f : ror dword ptr [rax - 0x73], cl ; fsubr st(0) ; movsxd rcx, ebp ; ret 0x8bff
0x000002000042c44a : ror dword ptr [rax - 0x75], -0x36 ; and qword ptr [rax], 0 ; jmp 0x2000042c41f
0x0000020000171723 : ror dword ptr [rax - 0x75], -0x38 ; call rdx
0x0000020000232103 : ror dword ptr [rax - 0x75], -0x7c ; ret 0x830
0x00000200005a7eec : ror dword ptr [rax - 0x75], -0x7c ; ret 0xb6e0
0x00000200004b4519 : ror dword ptr [rax - 0x75], -0x7c ; ret 0xf2c0
0x00000200004fc3a6 : ror dword ptr [rax - 0x75], 0x14 ; ret 0x2b48
0x0000020000161672 : ror dword ptr [rax - 0x75], 0x1c ; ret 0x3840
0x000002000016168b : ror dword ptr [rax - 0x75], 0x1c ; ret 0x8148
0x00000200001bbdee : ror dword ptr [rax - 0x75], 0x5c ; and al, 8 ; mov qword ptr [r8], r11 ; ret
0x00000200000220fc : ror dword ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200006b49cb : ror dword ptr [rax - 0x75], 0x74 ; and al, 0x10 ; mov qword ptr [rdx], r11 ; ret
0x000002000006356a : ror dword ptr [rax - 0x75], 0x74 ; and al, 0x20 ; pop rdi ; ret
0x000002000002016d : ror dword ptr [rax - 0x75], 0x7c ; and al, 0x10 ; ret
0x000002000046424e : ror dword ptr [rax - 0x75], 0x7c ; and al, 0x18 ; ret
0x0000020000743fed : ror dword ptr [rax - 0x75], 0xd ; jnp 0x20000743fab ; ret
0x00000200000b27e3 : ror dword ptr [rax - 0x75], 1 ; add al, 0xd0 ; ret
0x00000200004036ab : ror dword ptr [rax - 0x75], 1 ; enter -0x7b18, 7 ; ret
0x000002000060220f : ror dword ptr [rax - 0x75], 1 ; fld1 ; clc ; ret
0x0000020000115c83 : ror dword ptr [rax - 0x75], 1 ; iretd ; call rbx
0x000002000050cfe2 : ror dword ptr [rax - 0x75], 1 ; or ecx, dword ptr [rbp + 3] ; ret 0x16e8
0x000002000004011a : ror dword ptr [rax - 0x75], 1 ; ret
0x00000200003a16f6 : ror dword ptr [rax - 0x75], 1 ; ret 0x2b48
0x00000200000234c1 : ror dword ptr [rax - 0x75], 1 ; ret 0x48c3
0x0000020000678770 : ror dword ptr [rax - 0x75], 1 ; ret 0x8b4c
0x0000020000002a29 : ror dword ptr [rax - 0x75], 1 ; ret 0xc148
0x0000020000679788 : ror dword ptr [rax - 0x75], 1 ; ret 0xc933
0x00000200000215bb : ror dword ptr [rax - 0x75], 4 ; ret 0x3b4c
0x000002000007c893 : ror dword ptr [rax - 0x75], cl ; add eax, 0x302c0d ; call rax
0x000002000007c7e5 : ror dword ptr [rax - 0x75], cl ; add eax, 0x302cbb ; call rax
0x000002000007c734 : ror dword ptr [rax - 0x75], cl ; add eax, 0x302d6c ; call rax
0x000002000007c685 : ror dword ptr [rax - 0x75], cl ; add eax, 0x302e1b ; call rax
0x000002000007c58d : ror dword ptr [rax - 0x75], cl ; add eax, 0x302f13 ; call rax
0x000002000007c53f : ror dword ptr [rax - 0x75], cl ; add eax, 0x302f61 ; call rax
0x00000200004249a6 : ror dword ptr [rax - 0x75], cl ; and al, 0x50 ; call 0x20000045791
0x00000200004fd0ae : ror dword ptr [rax - 0x75], cl ; enter 0x69e8, -0x50 ; ret
0x00000200004152e8 : ror dword ptr [rax - 0x75], cl ; iretd ; call r10
0x00000200006c0488 : ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x0000020000042998 : ror dword ptr [rax - 0x75], cl ; iretd ; call rsi
0x000002000016e807 : ror dword ptr [rax - 0x75], cl ; iretd ; mov byte ptr [rbx + 0x45], bpl ; call rsi
0x00000200000ab701 : ror dword ptr [rax - 0x75], cl ; ret
0x000002000052b240 : ror dword ptr [rax - 0x75], cl ; ret 0xccc3
0x000002000001707c : ror dword ptr [rax - 0x77], 0x19 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005301b8 : ror dword ptr [rax - 0x77], 0x42 ; and byte ptr [rax - 0x75], cl ; ret 0x8b48
0x0000020000632c2b : ror dword ptr [rax - 0x77], 0xc ; ret
0x00000200001c32e1 : ror dword ptr [rax - 0x77], 0xd ; jmp qword ptr [rbx]
0x000002000014f7c2 : ror dword ptr [rax - 0x77], 2 ; ret
0x00000200003af205 : ror dword ptr [rax - 0x77], 5 ; stosd dword ptr [rdi], eax ; ret
0x00000200003e464c : ror dword ptr [rax - 0x77], cl ; push rsp ; and al, 0x50 ; jmp 0x200003e461d
0x00000200003e464b : ror dword ptr [rax - 0x77], cl ; push rsp ; and al, 0x50 ; jmp 0x200003e461e
0x0000020000416677 : ror dword ptr [rax - 0x7d], -0x36 ; adc byte ptr [rax - 0x75], cl ; ret 0xba41
0x00000200001355a2 : ror dword ptr [rax - 0x7d], -0x3c ; pop rbp ; ret
0x00000200001f4f63 : ror dword ptr [rax - 0x7d], -0x3c ; pop rbx ; ret
0x00000200004f445b : ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop rbx ; ret
0x00000200004ef4ce : ror dword ptr [rax - 0x7d], -0x3c ; push rax ; pop rdi ; pop rbx ; pop rbp ; ret
0x000002000005c7aa : ror dword ptr [rax - 0x7d], -0x3c ; ret
0x0000020000740ad3 : ror dword ptr [rax - 0x7d], -0x3c ; xor byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x00000200000306b7 : ror dword ptr [rax - 0x7d], -0x3d ; or byte ptr [rcx - 0x7d], cl ; ret
0x0000020000015eeb : ror dword ptr [rax - 0x7d], -0x3e ; or byte ptr [rcx + rcx + 0x4c], cl ; ret
0x00000200007681fd : ror dword ptr [rax - 0x7d], -7 ; jb 0x200007681ec ; ret
0x00000200000550fa : ror dword ptr [rax - 0x7d], 1 ; ret 0x4140
0x000002000000be06 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4518
0x000002000017cec5 : ror dword ptr [rax - 0x7d], 1 ; ret 0x4540
0x000002000003dbaa : ror dword ptr [rax - 0x7d], 1 ; ret 0x4804
0x000002000066a554 : ror dword ptr [rax - 0x7d], 1 ; ret 0xb902
0x00000200001f9aa0 : ror dword ptr [rax - 0x7d], cl ; ret
0x00000200007748c9 : ror dword ptr [rax - 0x7d], cl ; ret 0x4802
0x00000200003b6683 : ror dword ptr [rax - 1], 1 ; ret
0x00000200000a0be4 : ror dword ptr [rax - 1], 1 ; ret 0x3b48
0x000002000051df36 : ror dword ptr [rax - 1], 1 ; ret 0x4566
0x0000020000453a74 : ror dword ptr [rax - 1], 1 ; ret 0xc148
0x0000020000497717 : ror dword ptr [rax - 1], 1 ; ret 0xc28b
0x0000020000491b27 : ror dword ptr [rax - 1], 1 ; ret 0xf749
0x0000020000216e1f : ror dword ptr [rax - 1], cl ; ret 0x294c
0x000002000058a616 : ror dword ptr [rax - 1], cl ; ret 0x3966
0x000002000022f807 : ror dword ptr [rax - 9], 1 ; loop 0x2000022f844 ; ret 0x8948
0x00000200006bc037 : ror dword ptr [rax - 9], 1 ; ret 0xf000
0x0000020000006863 : ror dword ptr [rax - 9], cl ; ror byte ptr [rax - 0x75], cl ; ret 0x8b41
0x0000020000414ce4 : ror dword ptr [rax], -0x18 ; jne 0x20000414cdd ; ret
0x000002000048733d : ror dword ptr [rax], -0x18 ; or al, 0x4f ; ret
0x0000020000487350 : ror dword ptr [rax], -0x18 ; stc ; ret
0x00000200006876b8 : ror dword ptr [rax], -0x3d ; mov al, 1 ; ret
0x000002000003105f : ror dword ptr [rax], -0x3d ; xor eax, eax ; ret
0x000002000046b913 : ror dword ptr [rax], -0x75 ; ret
0x00000200001cf870 : ror dword ptr [rax], -0x75 ; ret 0x3b49
0x000002000046b9a3 : ror dword ptr [rax], -0x7d ; ret 0x4904
0x000002000013ce44 : ror dword ptr [rax], -0x7d ; ret 0x49f8
0x00000200002246e7 : ror dword ptr [rax], -0x7d ; ret 0x4cf8
0x000002000022852f : ror dword ptr [rax], -0x7d ; ret 0x4df8
0x00000200000e08b5 : ror dword ptr [rax], -0x7d ; ret 0x7402
0x000002000003857c : ror dword ptr [rax], -1 ; ret 0x3b41
0x0000020000130437 : ror dword ptr [rax], 0x3b ; ret 0xe872
0x00000200005e89d0 : ror dword ptr [rax], 0x3b ; ret 0xed72
0x000002000061d015 : ror dword ptr [rax], 0x3b ; ret 0xf172
0x000002000041bc5b : ror dword ptr [rax], 0x41 ; cmp eax, eax ; jb 0x2000041bc5b ; xor al, al ; ret
0x000002000017c5d2 : ror dword ptr [rax], 0x41 ; mov ecx, eax ; inc rdx ; jmp 0x2000017c585
0x0000020000676157 : ror dword ptr [rax], 0x44 ; cmp ecx, edx ; jb 0x20000676154 ; ret
0x00000200000df713 : ror dword ptr [rax], 0x45 ; cmp edx, ebx ; jb 0x200000df703 ; xor eax, eax ; ret
0x00000200000309dd : ror dword ptr [rax], 0x48 ; sub edx, 1 ; jne 0x200000309d4 ; ret
0x0000020000512f62 : ror dword ptr [rax], 0x49 ; add ecx, ecx ; call 0x2000014f187
0x0000020000048b12 : ror dword ptr [rax], 0x49 ; cmp ecx, eax ; jb 0x20000048b0b ; ret
0x0000020000035ac8 : ror dword ptr [rax], 0x49 ; sub edx, 1 ; jne 0x20000035ab8 ; ret
0x0000020000015c1e : ror dword ptr [rax], 0x4d ; mov eax, dword ptr [rcx] ; jmp 0x20000015bee
0x00000200001c76ea : ror dword ptr [rax], 0x74 ; add eax, dword ptr [rax - 0x3d75ef36] ; ret
0x0000020000500709 : ror dword ptr [rax], 1 ; add byte ptr [rbp - 0x76], al ; ret 0xaaeb
0x00000200000361b0 : ror dword ptr [rbp + 0x2b], -0x3d ; add r8, r10 ; jmp 0x20000036183
0x00000200006c18d7 : ror dword ptr [rbp + 0x39], 0x14 ; ret
0x00000200001d3bf2 : ror dword ptr [rbp + 0x3b], -0x3e ; jbe 0x200001d3c50 ; mov r8, r10 ; jmp 0x200001d3c50
0x00000200001d3bf1 : ror dword ptr [rbp + 0x3b], -0x3e ; jbe 0x200001d3c51 ; mov r8, r10 ; jmp 0x200001d3c51
0x0000020000055a16 : ror dword ptr [rbp + 0x3b], 1 ; ret 0x820f
0x000002000044cff7 : ror dword ptr [rbp + 0x3b], 1 ; ret 0xf77
0x0000020000089427 : ror dword ptr [rbp + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x0000020000129652 : ror dword ptr [rbp + 0xfad0c], 0 ; add byte ptr [rbx], ah ; ret 0xc803
0x00000200005fc2c9 : ror dword ptr [rbp + rcx*4 + 4], 1 ; ret 0x8545
0x000002000077a23e : ror dword ptr [rbp - 0x73], 4 ; ror byte ptr [rdi], 0xb7 ; ret
0x000002000067dd2f : ror dword ptr [rbp - 0x74b2d0b8], 1 ; ret 0x8b4c
0x00000200000f12c3 : ror dword ptr [rbp - 0x75], cl ; ret 0x8b44
0x000002000005ca05 : ror dword ptr [rbp - 0x75], cl ; ret 0x8b48
0x00000200001d499e : ror dword ptr [rbp - 0x77], 0x43 ; or byte ptr [rcx - 0x7d], cl ; ret
0x00000200000e2878 : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x200000e288f ; ret
0x0000020000133b45 : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x20000133b3f ; ret
0x00000200003be3ab : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x200003be3a0 ; ret
0x00000200003be3aa : ror dword ptr [rbp - 0x7b], -0x40 ; jne 0x200003be3a1 ; ret
0x0000020000221561 : ror dword ptr [rbp - 0x7eb6fe87], 1 ; ret 0xe8
0x00000200003f7395 : ror dword ptr [rbx + 0x20bac3], 1 ; add byte ptr [rbx], ah ; ret 0xc23b
0x000002000060e8e8 : ror dword ptr [rbx + 0x33f0e8cf], cl ; ret 0x48ff
0x0000020000665d7d : ror dword ptr [rbx + 0x4804244c], 0xf ; stosd dword ptr [rdi], eax ; ret
0x00000200001497e0 : ror dword ptr [rbx + rbp - 0x3f], 0x49 ; mov eax, eax ; pop rsi ; pop rdi ; ret
0x0000020000763288 : ror dword ptr [rbx + rbp*8], -0x1e ; add rsp, 0x50 ; pop rbx ; ret
0x00000200001c555d : ror dword ptr [rbx + rcx*4 - 0x27], 0xf ; ret 0x3345
0x000002000009bbc3 : ror dword ptr [rbx + rcx*4 - 0x3e], cl ; call r14
0x00000200000596a3 : ror dword ptr [rbx + rdi - 0x3e], 1 ; ja 0x200000596b0 ; ret
0x000002000060572a : ror dword ptr [rbx - 0x3a511715], cl ; ret 0x48ff
0x0000020000557e12 : ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rbp ; ret
0x0000020000044999 : ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rdi ; ret
0x0000020000034f31 : ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x0000020000153222 : ror dword ptr [rbx - 0x3b7cb73f], 0x30 ; pop rbp ; ret
0x000002000000e69f : ror dword ptr [rbx - 0x3b7cb73f], 0x38 ; ret
0x0000020000557958 : ror dword ptr [rbx - 0x3b7cb73f], 0x40 ; pop rbp ; ret
0x0000020000017234 : ror dword ptr [rbx - 0x572f083d], 1 ; adc byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xba0f
0x000002000066553d : ror dword ptr [rbx - 0x7422143e], cl ; ret
0x000002000020e0e3 : ror dword ptr [rbx - 0x75], 0xc ; ret 0x8d48
0x00000200003fb48f : ror dword ptr [rbx - 0x77], 0x44 ; shl dword ptr [rax], -1 ; ret 0x513b
0x000002000020e0fd : ror dword ptr [rbx - 0x7d], 0x24 ; ret 0xf00
0x00000200000e9ea2 : ror dword ptr [rbx], cl ; ret 0xc741
0x00000200001dba84 : ror dword ptr [rcx + 0x2b], 1 ; ror byte ptr [rax + 0x33], 1 ; ret 0x2349
0x00000200005d3415 : ror dword ptr [rcx + 0x2b], 1 ; ror byte ptr [rax - 1], 1 ; ret 0xd148
0x000002000008f513 : ror dword ptr [rcx + 0x39], -0x44 ; ret
0x000002000022dc5d : ror dword ptr [rcx + 0x3b419c55], 1 ; ret
0x000002000022da0e : ror dword ptr [rcx + 0x3b41ac55], 1 ; ret
0x00000200001f33b0 : ror dword ptr [rcx + 0x3b], -0x3f ; sete al ; ret
0x00000200004bb35a : ror dword ptr [rcx + 0x3b], cl ; ret 0x830f
0x0000020000231505 : ror dword ptr [rcx + 0x4140244c], 0xf ; mov dh, 0x8c ; ret
0x000002000060898e : ror dword ptr [rcx + 0x49e8975d], cl ; xchg eax, ebx ; ret 0x4cff
0x00000200001376d3 : ror dword ptr [rcx + 0x63], 1 ; ret
0x00000200003b7751 : ror dword ptr [rcx + 0x63], cl ; ret 0x8d48
0x000002000077e006 : ror dword ptr [rcx + 0x69], 1 ; ret 0x9680
0x0000020000090145 : ror dword ptr [rcx + 0xf], -0x51 ; ret 0x8c89
0x000002000075e8de : ror dword ptr [rcx + 0xf], -0x5d ; ret 0x820f
0x0000020000646a4f : ror dword ptr [rcx + 3], cl ; ret
0x000002000040758c : ror dword ptr [rcx + 3], cl ; rol byte ptr [rbp + 0x2b], 1 ; rol dword ptr [rbp - 0x75], cl ; ret 0xb60f
0x00000200005ebe09 : ror dword ptr [rcx + rcx*4 + 0x4d], 1 ; inc dword ptr [rdi + rcx - 0x49] ; ret 0xb70f
0x000002000002d031 : ror dword ptr [rcx + rcx*4 + 0x6c], 0x24 ; xor byte ptr [rax + 0x3b], cl ; ret 0x8b45
0x00000200001f65c4 : ror dword ptr [rcx + rcx*4 + 0xa], 0x41 ; mov eax, eax ; ret
0x00000200001cc113 : ror dword ptr [rcx + rcx*4 + 7], 0x48 ; add esp, 0x20 ; pop rdi ; ret
0x00000200000ba5f3 : ror dword ptr [rcx + rdi + 0x34], 1 ; ret 0x8d4c
0x0000020000063b08 : ror dword ptr [rcx - 0x3f], cl ; cli ; add ecx, dword ptr [rcx - 1] ; ret 0xc149
0x00000200001ff2bf : ror dword ptr [rcx - 0x74bee789], cl ; ret 0x8b48
0x00000200001497e3 : ror dword ptr [rcx - 0x75], -0x40 ; pop rsi ; pop rdi ; ret
0x000002000013544c : ror dword ptr [rcx - 0x75], -0x40 ; ret
0x000002000001d3d0 : ror dword ptr [rcx - 0x75], 0x4c ; ret
0x000002000047953b : ror dword ptr [rcx - 0x75], 1 ; add dword ptr [rbp - 0x75], ecx ; ret
0x00000200005cacfa : ror dword ptr [rcx - 0x75], 1 ; enter -0x6e18, 0x6b ; ret 0x90ff
0x000002000013d341 : ror dword ptr [rcx - 0x75], 1 ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x00000200001f8fbc : ror dword ptr [rcx - 0x75], 1 ; ret 0x348
0x0000020000039664 : ror dword ptr [rcx - 0x75], 1 ; ret 0xc148
0x0000020000488268 : ror dword ptr [rcx - 0x75], 9 ; mov qword ptr [rdx], rcx ; ret
0x0000020000043e45 : ror dword ptr [rcx - 0x75], cl ; iretd ; call rax
0x0000020000222c1c : ror dword ptr [rcx - 0x75], cl ; or cl, byte ptr [rcx - 0x7d] ; ret 0x4908
0x0000020000139756 : ror dword ptr [rcx - 0x75], cl ; ret 0x2ce9
0x000002000012d78d : ror dword ptr [rcx - 0x76e7dbb4], 1 ; xor al, 0x8b ; ret
0x00000200001a5792 : ror dword ptr [rcx - 0x77], 1 ; adc bl, al ; and qword ptr [r8], 0 ; ret
0x00000200000aa557 : ror dword ptr [rcx - 0x7b], cl ; ret
0x00000200004e001f : ror dword ptr [rcx - 0x7d], -0x16 ; add dword ptr [rbp - 0x37], esi ; ret
0x00000200000085fe : ror dword ptr [rcx - 0x7d], -0x18 ; add dword ptr [rbp - 0x10], esi ; ret
0x000002000001993f : ror dword ptr [rcx - 0x7d], -0x18 ; add dword ptr [rbp - 0x16], esi ; ret
0x000002000062189c : ror dword ptr [rcx - 0x7d], -0x3c ; adc byte ptr [rcx - 0x7d], cl ; ret
0x00000200001cf567 : ror dword ptr [rcx - 0x7d], -0x3e ; or byte ptr [rcx - 0x77], cl ; add edi, edi ; ret 0xb848
0x00000200005fc34c : ror dword ptr [rcx - 0x7d], 1 ; ret
0x000002000064af18 : ror dword ptr [rcx - 0x7d], 1 ; rol dword ptr [rdx], -0x75 ; ret 0xffb9
0x00000200001346d9 : ror dword ptr [rcx - 1], -0x38 ; jne 0x200001346d9 ; xor rax, rax ; ret
0x0000020000149927 : ror dword ptr [rcx - 1], -0x38 ; jne 0x20000149926 ; ret
0x000002000016c81e : ror dword ptr [rcx - 1], cl ; enter -0x72b3, 0x3c ; ret
0x00000200001ea15f : ror dword ptr [rcx - 9], -0x10 ; ret
0x00000200001f0f5e : ror dword ptr [rcx], -1 ; ret 0xff41
0x00000200005399d7 : ror dword ptr [rcx], 0 ; or eax, 0xffffffff ; ret
0x00000200004df7ac : ror dword ptr [rcx], 1 ; add byte ptr [rbx], bh ; ret 0x840f
0x0000020000438dce : ror dword ptr [rdi + rcx - 0x51], 1 ; ret 0xc148
0x00000200005f396c : ror dword ptr [rdi], -0x42 ; ret 0x4466
0x0000020000128edb : ror dword ptr [rdi], -0x49 ; ret
0x000002000003b153 : ror dword ptr [rdi], -0x49 ; ret 0x4166
0x000002000003b137 : ror dword ptr [rdi], -0x49 ; ret 0xbf41
0x00000200004b6766 : ror dword ptr [rdi], -0x4a ; ret
0x0000020000087746 : ror dword ptr [rdi], -0x4a ; ret 0x8948
0x0000020000087844 : ror dword ptr [rdi], -0x4a ; ret 0xf48
0x000002000018627b : ror dword ptr [rdi], -0x6b ; ret 0xf640
0x0000020000643c8d : ror dword ptr [rdi], -0x79 ; mov esp, 0xff000000 ; ret
0x0000020000070823 : ror dword ptr [rdi], -0x79 ; xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200004084e0 : ror dword ptr [rdi], -0x79 ; xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x00000200000e4f7e : ror dword ptr [rdi], -0x7a ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x3b], cl ; ret
0x00000200000f2837 : ror dword ptr [rdi], -0x7b ; insd dword ptr [rdi], dx ; ret 0xa
0x00000200000feab1 : ror dword ptr [rdi], -0x7b ; lock add byte ptr [rax], al ; add al, ch ; ret
0x00000200001d7435 : ror dword ptr [rdi], -0x7b ; lodsd eax, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rbp + 3], cl ; ret 0x341
0x00000200003e2791 : ror dword ptr [rdi], -0x7b ; ret
0x000002000061ad50 : ror dword ptr [rdi], -0x7b ; ret 1
0x0000020000120f87 : ror dword ptr [rdi], -0x7b ; ret 7
0x000002000052eb09 : ror dword ptr [rdi], -0x7b ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x0000020000425735 : ror dword ptr [rdi], -0x7c ; ret
0x0000020000403b09 : ror dword ptr [rdi], -0x7c ; ret 0x179b
0x00000200000a2040 : ror dword ptr [rdi], -0x7c ; ret 0xe7e
0x00000200000aa4a6 : ror dword ptr [rdi], -0x7c ; sub eax, 0xf6fffffc ; ret 0x7408
0x00000200003b3cad : ror dword ptr [rdi], -0x7e ; cmp dl, byte ptr [rdx - 0x74bbffe6] ; ret
0x0000020000762b46 : ror dword ptr [rdi], -0x7e ; fild dword ptr [rsi - 0x74b7ffff] ; ret
0x00000200006244ed : ror dword ptr [rdi], -0x7e ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x977
0x0000020000085314 : ror dword ptr [rdi], 0 ; mov eax, 1 ; ret
0x00000200001826af : ror dword ptr [rdi], 0x44 ; ret 0x4488
0x000002000018337b : ror dword ptr [rdi], 0x44 ; ret 0x8941
0x000002000012fe16 : ror dword ptr [rdi], 0x47 ; ret 0x5aba
0x000002000004f6c5 : ror dword ptr [rdi], 0x4f ; ret 0x3eb
0x000002000019440c : ror dword ptr [rdi], 1 ; adc edx, 0x5f ; inc dword ptr [rcx - 0x75] ; ret 0x2b4d
0x00000200001445cc : ror dword ptr [rdi], 1 ; add edi, ecx ; mov rax, rbx ; pop rbx ; ret
0x00000200001445ac : ror dword ptr [rdi], 1 ; add edi, ecx ; pop rbx ; ret
0x000002000003c39b : ror dword ptr [rdi], 1 ; lea ebx, dword ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000049cd8c : ror dword ptr [rdi], 1 ; mov bh, 0xc2 ; ret
0x000002000004f6b5 : ror dword ptr [rdi], 1 ; mov dh, 0x8a ; ret
0x000002000008088d : ror dword ptr [rdi], 1 ; test dword ptr [rdi], eax ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200003b51ea : ror dword ptr [rdi], 1 ; test edi, ebp ; add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x0000020000404201 : ror dword ptr [rdi], 1 ; test esp, edx ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000007aaa1 : ror dword ptr [rdi], 1 ; xchg dword ptr [rdx], esp ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x2b], al ; ret 0x2b41
0x0000020000008068 : ror dword ptr [rdi], 1 ; xchg eax, ebp ; ret 0xfa2b
0x00000200000627c9 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret 0xf641
0x0000020000055ddc : ror dword ptr [rdi], 1 ; xor dword ptr [rdx + 4], 0x10 ; add byte ptr [rax - 0x75], cl ; ret 0x8d4d
0x0000020000083a52 : ror dword ptr [rdi], cl ; add dh, dh ; ret
0x00000200005aa1f5 : ror dword ptr [rdi], cl ; lahf ; ret 0x20e9
0x00000200005aa1b9 : ror dword ptr [rdi], cl ; popfq ; ret 0x5ce9
0x00000200005aa1d7 : ror dword ptr [rdi], cl ; pushfq ; ret 0x3ee9
0x00000200005aa19b : ror dword ptr [rdi], cl ; sahf ; ret 0x7ae9
0x0000020000064aa3 : ror dword ptr [rdi], cl ; test byte ptr [rbp - 0x7cb6ffef], bl ; ret 0x4104
0x00000200000d1c2b : ror dword ptr [rdi], cl ; test byte ptr [rip - 0x74ffffff], ah ; ret 0x8b45
0x0000020000017345 : ror dword ptr [rdi], cl ; test edx, ebx ; add al, byte ptr [rax] ; add dh, dh ; ret
0x0000020000471240 : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret 0xd10b
0x00000200005aa6a0 : ror dword ptr [rdi], cl ; xchg eax, ebx ; ret 0x75e9
0x00000200005aa6d8 : ror dword ptr [rdi], cl ; xchg eax, edi ; ret 0x3de9
0x0000020000467b04 : ror dword ptr [rdi], cl ; xchg eax, edx ; ret 0x11e9
0x00000200005aa67c : ror dword ptr [rdi], cl ; xchg eax, esi ; ret 0x99e9
0x0000020000467a1a : ror dword ptr [rdi], cl ; xchg eax, esp ; ret 0x1789
0x000002000002cf7e : ror dword ptr [rdx + 0x31], 4 ; ret 0xc149
0x000002000060e85a : ror dword ptr [rdx - 0x77], 0xc ; ret 0x438b
0x00000200003feadb : ror dword ptr [rdx], 1 ; sub al, byte ptr [rax] ; ret
0x00000200001bfba0 : ror dword ptr [rsi], 0x48 ; add esp, 0x28 ; ret
0x00000200003ed46e : ror eax, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003ed6f2 : ror eax, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003ed202 : ror eax, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x000002000075556b : ror ebx, 1 ; ret
0x00000200003ee027 : ror ecx, cl ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200003edd83 : ror ecx, cl ; sub r10d, r9d ; mov eax, r10d ; ret
0x00000200003edcc7 : ror ecx, cl ; xor r10d, r9d ; mov eax, r10d ; ret
0x0000020000152cf1 : ror edx, cl ; mov eax, dword ptr [rdx] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001525ba : ror edx, cl ; mov eax, dword ptr [rdx] ; add rsp, 0x30 ; pop rbp ; ret
0x00000200006d94ee : ror qword ptr [r8 + 1], 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48ff
0x00000200006d9459 : ror qword ptr [r8 + 1], 0xd ; pop rsi ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xffff
0x00000200006d94a5 : ror qword ptr [r8 + 1], 0xd ; ret 0xc2a4
0x0000020000500708 : ror qword ptr [r8], 1 ; add byte ptr [rbp - 0x76], al ; ret 0xaaeb
0x00000200003ed46d : ror r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003ed6f1 : ror r8d, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003ed201 : ror r8d, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x00000200003ee026 : ror r9d, cl ; lea eax, dword ptr [r9 + r10] ; ret
0x00000200003edd82 : ror r9d, cl ; sub r10d, r9d ; mov eax, r10d ; ret
0x00000200003edcc6 : ror r9d, cl ; xor r10d, r9d ; mov eax, r10d ; ret
0x0000020000141575 : sahf ; add byte ptr [rax], al ; add cl, ch ; add cl, cl ; add byte ptr [rax], al ; ret
0x00000200003e897a : sahf ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x74cf8a40], al ; ret
0x00000200000d3ddc : sahf ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x8d ; ret
0x00000200004af42a : sahf ; call qword ptr [rax]
0x00000200003dd69e : sahf ; call qword ptr [rsi]
0x000002000022c2f4 : sahf ; cwde ; add eax, 0x8b490000 ; ret 0x8b49
0x0000020000619304 : sahf ; dec dword ptr [rax - 0x75] ; xchg eax, esp ; ret 0x1440
0x00000200006568a3 : sahf ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000134b5e : sahf ; hlt ; sbb byte ptr [rax], al ; ret
0x000002000075d56b : sahf ; inc dword ptr [rbp + 0x7d880fdb] ; ret
0x000002000075d526 : sahf ; inc dword ptr [rbp - 0x5577f040] ; ret
0x00000200005c8511 : sahf ; jb 0x200005c8507 ; jmp qword ptr [rcx]
0x00000200005643f7 : sahf ; jne 0x200005643e6 ; dec dword ptr [rax - 0x75] ; ret
0x000002000008bb3e : sahf ; or al, byte ptr [rax] ; add dh, dh ; ret
0x000002000020de1d : sahf ; ret
0x00000200006b483a : sahf ; ret 0x1ff
0x00000200006071d1 : sahf ; ret 0x44ff
0x00000200005b8cc2 : sahf ; ret 0x48ff
0x00000200006b4933 : sahf ; ret 0x76ff
0x00000200005aa19d : sahf ; ret 0x7ae9
0x000002000052533c : sahf ; ret 0x8bff
0x0000020000581256 : sahf ; ret 0xa
0x00000200006b493c : sahf ; ret 0xb8ff
0x00000200006b49a4 : sahf ; ret 0xb9ff
0x0000020000498cc2 : sahf ; ret 0xe9ff
0x00000200006b4959 : sahf ; ret 0xebff
0x00000200006b4949 : sahf ; ret 0xffff
0x00000200004b8535 : sahf ; sar bh, 0x8b ; ret
0x000002000041b4ce : sahf ; sar bh, 0xc0 ; add rsp, 0x28 ; ret
0x0000020000411f36 : sahf ; sar bh, 0xc0 ; ret
0x00000200006a8c6e : sahf ; stc ; ret
0x00000200003d728c : sahf ; sub dword ptr [rax], eax ; call 0x20000671165
0x0000020000040d5a : sahf ; sub eax, dword ptr [rax] ; jae 0x20000040d65 ; ret
0x0000020000222a8a : sahf ; test byte ptr [rip - 0x74b70000], al ; ret
0x000002000022342a : sahf ; test byte ptr [rip - 0x74b70000], al ; ret 0x8b48
0x000002000058278e : sahf ; xlatb ; ret
0x00000200000402fb : sal al, 0x48 ; btr dword ptr [rcx], eax ; ret
0x0000020000166999 : sal al, 0x49 ; xadd dword ptr [rcx + 0x58], eax ; ret
0x0000020000166979 : sal al, 0x49 ; xadd dword ptr [rcx + 0x60], eax ; ret
0x000002000007e95c : sal al, 0x4c ; cmpxchg dword ptr [rcx], eax ; jne 0x2000007e943 ; ret
0x00000200005c35b5 : sal al, 0x83 ; ret
0x0000020000473ab2 : sal al, 0xc3 ; xor eax, eax ; ret
0x0000020000109a32 : sal al, 1 ; and dword ptr [r10], eax ; ret
0x0000020000004394 : sal al, 1 ; and dword ptr [r8], eax ; jmp 0x20000004363
0x000002000061f562 : sal al, 1 ; and dword ptr [r8], eax ; ret
0x000002000003e4f9 : sal al, 1 ; and qword ptr [r9 + 8], rax ; ret
0x000002000010549a : sal al, 1 ; inc dword ptr [rcx + 0x10] ; mov rcx, qword ptr [rcx] ; inc edx ; jmp 0x20000105497
0x0000020000053a20 : sal bh, 0xd0 ; and eax, 0xc000000d ; ret
0x000002000041c3a5 : sal bh, 0xd0 ; and eax, 0xc0000034 ; ret
0x0000020000417754 : sal bh, 0xd0 ; and eax, 0xc0000061 ; jmp 0x2000041772a
0x00000200001a484b : sal bh, 0xd8 ; inc eax ; ret
0x000002000019bdee : sal bh, 0xf1 ; ret
0x00000200001f4630 : sal bh, 1 ; ret 0xfff7
0x00000200005127f7 : sal bl, 0xf ; jg 0x2000051284a ; cwde ; call 0x200001403e9
0x00000200001f77fd : sal bl, 1 ; nop ; test al, 1 ; je 0x200001f77f3 ; xor al, al ; ret
0x0000020000588d7e : sal byte ptr [r11], 0xd2 ; call 0x20000635032
0x00000200005013fc : sal byte ptr [rax + rax*2 + 0x44], 0x3b ; ret 0x7e72
0x00000200004e2109 : sal byte ptr [rax + rax*2 + 0x4c], 0x8b ; ret
0x00000200006da2cb : sal byte ptr [rax + rbp - 0x75], cl ; xor al, 0x3b ; ret 0x2675
0x000002000074fd93 : sal byte ptr [rax + rbx + 0x48], 0x8b ; ret
0x0000020000017786 : sal byte ptr [rax + rbx + 0x48], 0x8b ; ret 0x2b49
0x00000200006b27b6 : sal byte ptr [rax + rbx + 0x4c], 0x8b ; ret
0x00000200000df665 : sal byte ptr [rax + rbx*2 + 0x48], 0x8b ; ret
0x00000200006c05b3 : sal byte ptr [rax + rbx*2 - 0x7d], 0x3d ; ret
0x000002000006c354 : sal byte ptr [rax + rcx + 0x48], 0x83 ; ret 0x4908
0x0000020000437453 : sal byte ptr [rax + rcx + 0x48], 0x8b ; enter -0x1d18, -0x65 ; ret
0x00000200006c0483 : sal byte ptr [rax + rcx + 0x48], 0x8b ; ror dword ptr [rax - 0x75], cl ; iretd ; call rax
0x0000020000043e40 : sal byte ptr [rax + rcx + 0x48], 0x8b ; ror dword ptr [rcx - 0x75], cl ; iretd ; call rax
0x000002000063ef1f : sal byte ptr [rax + rcx + 0x48], 0x8b ; sal dword ptr [rbx], cl ; leave ; call r8
0x0000020000762127 : sal byte ptr [rax + rcx + 0x48], 0xff ; ret
0x00000200006cc799 : sal byte ptr [rax + rcx + 0x48], cl ; add esp, 0x30 ; pop rbx ; jmp r10
0x000002000046b93b : sal byte ptr [rax + rcx + 0x48], cl ; mov ebx, dword ptr [rsp + 8] ; mov eax, edx ; ret
0x000002000060b512 : sal byte ptr [rax + rdi + 0x41], 0x8d ; push rsi ; add bh, byte ptr [rbx] ; ret 0x1b76
0x00000200001ac0e6 : sal byte ptr [rax + rdx + 0x39], 0x48 ; or byte ptr [rbp + rcx - 1], dh ; ret 0x8348
0x000002000074291a : sal byte ptr [rax + rdx + 0x44], 0x88 ; add edi, edi ; ret 0xff48
0x00000200001f29b5 : sal byte ptr [rax + rdx + 0x48], 0x83 ; ret 0x310
0x00000200006c0467 : sal byte ptr [rax + rdx + 0x48], 0x8b ; iretd ; call rax
0x00000200006c0353 : sal byte ptr [rax + rdx + 0x48], 0x8b ; retf ; call rax
0x00000200006b2642 : sal byte ptr [rax + rdx + 0x49], 0x3b ; ret 0xb74
0x00000200003e1006 : sal byte ptr [rax + rdx*2 + 0x44], 0x8b ; ret
0x000002000048a3dd : sal byte ptr [rax + rdx*2 + 0x66], 0xff ; ret
0x000002000019f501 : sal byte ptr [rax + rdx*8 + 0x48], 0x8b ; ror dword ptr [rax - 0x75], cl ; ret
0x00000200003e5195 : sal byte ptr [rax + rsi + 0x48], 0x8b ; ret
0x00000200001f86fc : sal byte ptr [rax - 0x3fcd3cff], cl ; ret
0x000002000061ed79 : sal byte ptr [rbp + 0x10], 0xff ; ret
0x000002000000f575 : sal byte ptr [rbp + 0x10], cl ; mov eax, 1 ; ret
0x00000200006ac794 : sal byte ptr [rbp + 0x12], 0x39 ; ret
0x00000200003be3b9 : sal byte ptr [rbp + 0x15], cl ; mov eax, 0x8000000 ; ret
0x00000200000258a6 : sal byte ptr [rbp + 0x16], 0x48 ; add esp, 0x38 ; ret
0x000002000047e8fd : sal byte ptr [rbp + 0x16], 0x8b ; ret
0x00000200001f0ee2 : sal byte ptr [rbp + 0x16], cl ; mov al, 1 ; ret
0x00000200003e7692 : sal byte ptr [rbp + 0x1a], 0x8b ; ret
0x00000200001a1632 : sal byte ptr [rbp + 0x1d], 0xff ; ret
0x0000020000069f6a : sal byte ptr [rbp + 0x21], 0xf ; mov dh, 0xc2 ; ret
0x000002000046347e : sal byte ptr [rbp + 0x24], 0x8b ; ret
0x0000020000409b75 : sal byte ptr [rbp + 0x25], 0x8b ; ret 0x8948
0x0000020000424627 : sal byte ptr [rbp + 0x2a], 0xff ; ret
0x0000020000408bc4 : sal byte ptr [rbp + 0x2f], 0xff ; ret
0x0000020000054280 : sal byte ptr [rbp + 0x2f], cl ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000022b4e : sal byte ptr [rbp + 0x30], 0x48 ; add esp, 0x48 ; ret
0x00000200003e897f : sal byte ptr [rbp + 0x30], 0x8b ; ret
0x000002000002649e : sal byte ptr [rbp + 0x31], 0x48 ; add esp, 0x28 ; ret
0x0000020000065abd : sal byte ptr [rbp + 0x31], 0xff ; ret
0x00000200004c32f6 : sal byte ptr [rbp + 0x3a], 0x8b ; ret
0x000002000004eb50 : sal byte ptr [rbp + 0x3c], 0x48 ; add esp, 0x28 ; ret
0x000002000066c204 : sal byte ptr [rbp + 0x3e], 0xff ; ret 0xc28b
0x0000020000199cda : sal byte ptr [rbp + 0x41], 0x81 ; call qword ptr [rdi]
0x000002000010001b : sal byte ptr [rbp + 0x41], 0x8b ; add byte ptr [rax - 0x7d], cl ; ret 0xf08
0x00000200001f7c38 : sal byte ptr [rbp + 0x4c], 0x8b ; ret
0x000002000069963d : sal byte ptr [rbp + 0x51], 0x81 ; call qword ptr [rdx]
0x00000200004c3bcf : sal byte ptr [rbp + 0x56], cl ; call 0x200000eb5b6
0x00000200001f2aa0 : sal byte ptr [rbp + 0x6c], 0xff ; ret
0x000002000068be87 : sal byte ptr [rbp + 0x70], 0x8b ; push rdx ; sbb al, 0x8b ; ret 0x25
0x00000200001a5d47 : sal byte ptr [rbp + 0xa], 0x48 ; mov edx, ebx ; mov rcx, rdi ; call rsi
0x000002000018636a : sal byte ptr [rbp + 0xa], 0xf6 ; ret
0x00000200006b5677 : sal byte ptr [rbp + 0xb], 0xff ; ret
0x000002000042969f : sal byte ptr [rbp + 0xb], cl ; add rsp, 0x40 ; pop rbx ; ret
0x000002000065e6bf : sal byte ptr [rbp + 0xc], 0xf ; mov bh, 0x45 ; add bh, bh ; ret
0x00000200006330a2 : sal byte ptr [rbp + 0xf], 0xf6 ; ret
0x000002000012525a : sal byte ptr [rbp + 1], 0xc3 ; jmp rax
0x0000020000082b01 : sal byte ptr [rbp + 1], 0xc3 ; mov byte ptr [r8], 0 ; ret
0x00000200000435d1 : sal byte ptr [rbp + 1], 0xc3 ; mov rax, qword ptr [rax + 0x18] ; ret
0x000002000002aab9 : sal byte ptr [rbp + 1], 0xc3 ; mov rax, qword ptr [rax] ; ret
0x000002000003245f : sal byte ptr [rbp + 1], cl ; ret
0x00000200006c85dd : sal byte ptr [rbp + 2], 1 ; xor eax, eax ; ret
0x0000020000401027 : sal byte ptr [rbp + 3], 0x8a ; ret 0x8ac3
0x000002000040713d : sal byte ptr [rbp + 3], cl ; mov al, 1 ; ret
0x00000200000f5115 : sal byte ptr [rbp + 3], cl ; mov eax, ecx ; ret
0x00000200001ea14d : sal byte ptr [rbp + 3], cl ; xor eax, eax ; ret
0x00000200000f1d39 : sal byte ptr [rbp + 4], 0x41 ; mov al, dl ; ret
0x00000200000f1a19 : sal byte ptr [rbp + 4], 0x41 ; mov eax, eax ; ret
0x000002000041e261 : sal byte ptr [rbp + 4], 0x41 ; mov eax, edx ; ret
0x000002000064b5f7 : sal byte ptr [rbp + 4], 0x48 ; mov dword ptr [rdx], eax ; ret
0x0000020000072e4f : sal byte ptr [rbp + 4], 0x48 ; mov eax, edx ; ret
0x00000200000c30f0 : sal byte ptr [rbp + 4], 0x49 ; mov eax, eax ; ret
0x00000200001a16c6 : sal byte ptr [rbp + 4], 0xff ; ret
0x00000200005f1e94 : sal byte ptr [rbp + 4], cl ; lea eax, dword ptr [rdx + 1] ; ret
0x00000200001c118d : sal byte ptr [rbp + 4], cl ; mov dword ptr [r8], eax ; ret
0x00000200000203f2 : sal byte ptr [rbp + 4], cl ; or byte ptr [rcx + 9], 4 ; ret
0x00000200003f184d : sal byte ptr [rbp + 5], 0x32 ; leave ; mov al, cl ; ret
0x000002000065a149 : sal byte ptr [rbp + 5], 0x41 ; lea eax, dword ptr [rax + 0x14] ; ret
0x0000020000022283 : sal byte ptr [rbp + 5], 0x48 ; add esp, 0x28 ; ret
0x0000020000060b18 : sal byte ptr [rbp + 5], cl ; add rsp, 0x28 ; ret
0x0000020000074f17 : sal byte ptr [rbp + 5], cl ; mov al, byte ptr [rax + rcx*2 + 1] ; ret
0x00000200001080de : sal byte ptr [rbp + 6], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000123821 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add al, al ; ret
0x000002000053d001 : sal byte ptr [rbp + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000047e7da : sal byte ptr [rbp + 6], 1 ; mov eax, 1 ; ret
0x0000020000037fa1 : sal byte ptr [rbp + 6], cl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000f0455 : sal byte ptr [rbp + 7], 0xc3 ; mov word ptr [r8], r9w ; jmp 0x200000f042b
0x00000200005fad24 : sal byte ptr [rbp + 7], 0xe8 ; mov ah, 0x6f ; ret
0x00000200005f7823 : sal byte ptr [rbp + 7], 0xe8 ; mov ch, 0xa4 ; ret
0x00000200005c3ebb : sal byte ptr [rbp + 7], 0xf ; mov bh, 0x43 ; add cl, byte ptr [rax + 3] ; ret
0x00000200000c31ed : sal byte ptr [rbp + 7], 1 ; mov al, 1 ; add rsp, 0x18 ; ret
0x0000020000503c46 : sal byte ptr [rbp + 7], cl ; mov eax, dword ptr [rax + 0x1f10] ; ret
0x00000200003beae5 : sal byte ptr [rbp + 7], cl ; mov r9b, 1 ; mov al, r9b ; ret
0x000002000049fdab : sal byte ptr [rbp + 7], cl ; xor al, al ; add rsp, 0x28 ; ret
0x0000020000419b88 : sal byte ptr [rbp + 8], 0x49 ; mov ecx, ebp ; call 0x2000004200d
0x00000200000f7385 : sal byte ptr [rbp + 8], 0x8a ; ret
0x00000200000f1993 : sal byte ptr [rbp + 8], 0x8b ; ret
0x0000020000691cdd : sal byte ptr [rbp + 8], 0xff ; ret
0x000002000067653b : sal byte ptr [rbp + 8], 1 ; xor eax, eax ; ret
0x0000020000473691 : sal byte ptr [rbp + 8], cl ; xor eax, eax ; ret
0x00000200001ea4db : sal byte ptr [rbp + 9], 0x8b ; ret
0x00000200001c6af1 : sal byte ptr [rbp + 9], 0x8d ; push rax ; cmove ecx, dword ptr [rdi] ; and al, dl ; jmp 0x200001c6b1a
0x000002000010b390 : sal byte ptr [rbp + rax + 0x33], 0xd2 ; call r8
0x000002000007e98a : sal byte ptr [rbp + rax + 0x39], 0x50 ; or byte ptr [rbp + 1], dh ; ret
0x00000200006b9f99 : sal byte ptr [rbp + rax + 0x41], 0x8a ; leave ; call rax
0x00000200001f0e87 : sal byte ptr [rbp + rax + 0x48], 0x8b ; int 0xff
0x00000200006c05ee : sal byte ptr [rbp + rax + 0x48], 0x8b ; iretd ; call rax
0x0000020000058605 : sal byte ptr [rbp + rax + 0x48], 0x8b ; ret
0x000002000046be1b : sal byte ptr [rbp + rax + 0x48], 0x8b ; retf ; call rax
0x000002000049aad6 : sal byte ptr [rbp + rax + 0x48], 0x8b ; shr bl, 1 ; ret 0x1b0
0x0000020000542039 : sal byte ptr [rbp + rax + 0x48], 0x8b ; sub bl, al ; ret
0x00000200003c2a83 : sal byte ptr [rbp + rax + 0x48], cl ; mov ecx, esi ; call rdx
0x0000020000016953 : sal byte ptr [rbp + rax + 0x4d], 0x3b ; ret
0x00000200000200ad : sal byte ptr [rbp + rax + 0x66], cl ; mov dword ptr [rcx], r11d ; ret
0x000002000021e647 : sal byte ptr [rbp + rax + 0xf], 0xaf ; ret 0xc803
0x00000200001f7c58 : sal byte ptr [rbp + rax*2 + 0x4c], 0x8b ; ret
0x0000020000765e15 : sal byte ptr [rbp + rbx*2 + 0x44], 0x8b ; ret
0x000002000012a9c4 : sal byte ptr [rbp + rcx + 0x44], 0x8b ; ret
0x00000200001d951a : sal byte ptr [rbp + rcx + 0x45], 0x8b ; ret
0x00000200006b268c : sal byte ptr [rbp + rcx + 0x49], 0x3b ; ret 0x874
0x000002000067ddef : sal byte ptr [rbp + rcx + 0x4c], 0x8b ; ret
0x000002000003b07e : sal byte ptr [rbp + rdi - 0x50], 1 ; ret
0x000002000049fdee : sal byte ptr [rbp + rdi*4 - 0x50], 1 ; add rsp, 0x28 ; ret
0x0000020000657774 : sal byte ptr [rbp + rdx + 0x41], 0x8b ; add dword ptr [rcx - 1], ecx ; ret 0x209
0x00000200000df228 : sal byte ptr [rbp + rdx + 0x48], 0x3b ; ret
0x0000020000462a56 : sal byte ptr [rbp + rdx*2 + 0x49], 0x3b ; ret 0x2973
0x00000200001f7c48 : sal byte ptr [rbp + rdx*2 + 0x4c], 0x8b ; ret
0x00000200000dc6a2 : sal byte ptr [rbp + rdx*8 + 0x48], 0x8b ; and al, 0x78 ; call rax
0x0000020000039ae1 : sal byte ptr [rbp + rsi*2 + 0x44], 0x8b ; ret
0x0000020000135681 : sal byte ptr [rbp - 0x11], 0x48 ; mov eax, ecx ; ret
0x0000020000069511 : sal byte ptr [rbp - 0x13], 0xe9 ; ret 0xfffe
0x0000020000069ffe : sal byte ptr [rbp - 0x13], cl ; ret
0x00000200000f83d7 : sal byte ptr [rbp - 0x14], 0x85 ; sal byte ptr [rbp + 1], cl ; ret
0x00000200003c9acb : sal byte ptr [rbp - 0x14], 0xeb ; ret 0x8948
0x000002000053048a : sal byte ptr [rbp - 0x15], 0x85 ; sal byte ptr [rdi + rdx - 0x75], cl ; ret
0x0000020000632d58 : sal byte ptr [rbp - 0x15], 1 ; ret
0x00000200001a686e : sal byte ptr [rbp - 0x16], cl ; ret
0x00000200003a26e8 : sal byte ptr [rbp - 0x17], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200006bfef5 : sal byte ptr [rbp - 0x17], cl ; ret
0x00000200006c2979 : sal byte ptr [rbp - 0x18], 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x000002000016df56 : sal byte ptr [rbp - 0x18], 0xe9 ; ret 0xf997
0x0000020000487b22 : sal byte ptr [rbp - 0x19], 0xe8 ; xchg eax, esi ; ret 0xfffb
0x00000200006d5f68 : sal byte ptr [rbp - 0x1a], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000745c26 : sal byte ptr [rbp - 0x1a], 1 ; xor eax, eax ; ret
0x000002000003cd11 : sal byte ptr [rbp - 0x1e], cl ; ret
0x0000020000031d2d : sal byte ptr [rbp - 0x22], 0x48 ; btr eax, 0xc ; ret
0x00000200002160e5 : sal byte ptr [rbp - 0x24], 1 ; mov eax, 1 ; ret
0x00000200001fbdd1 : sal byte ptr [rbp - 0x26], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x000002000003d4f6 : sal byte ptr [rbp - 0x28], 0x41 ; mov eax, ecx ; ret
0x00000200006b6e67 : sal byte ptr [rbp - 0x2a], 0xc3 ; mov rax, qword ptr [rcx + 8] ; ret
0x0000020000135ffb : sal byte ptr [rbp - 0x2b], 0x33 ; rol bl, 0x48 ; mov eax, ecx ; ret
0x000002000013589f : sal byte ptr [rbp - 0x2e], 0x48 ; sub eax, ecx ; sar rax, 1 ; ret
0x000002000077f821 : sal byte ptr [rbp - 0x2e], cl ; sub r11, rax ; mov rax, r11 ; ret
0x00000200001e3188 : sal byte ptr [rbp - 0x2f], 0x45 ; xor ecx, ecx ; mov eax, r9d ; ret
0x00000200001334a7 : sal byte ptr [rbp - 0x34], 0x33 ; rol bl, 0x49 ; mov eax, eax ; ret
0x000002000062bef0 : sal byte ptr [rbp - 0x35], 0x48 ; add esp, 0x38 ; ret
0x00000200003cefa6 : sal byte ptr [rbp - 0x39], cl ; mov r10b, 1 ; jmp 0x200003cef77
0x000002000013f8b6 : sal byte ptr [rbp - 0x3a], cl ; sub r9d, eax ; mov eax, r9d ; ret
0x00000200001dad85 : sal byte ptr [rbp - 0x3c], 0x49 ; mov eax, eax ; ret
0x0000020000135908 : sal byte ptr [rbp - 0x3e], 0x33 ; rol bl, 0x49 ; mov eax, eax ; ret
0x00000200003b54b8 : sal byte ptr [rbp - 0x3e], 0xff ; ret
0x000002000052d92f : sal byte ptr [rbp - 0x5a], 0x8b ; ret
0x000002000017d38c : sal byte ptr [rbp - 0xa], 0xc3 ; add esi, dword ptr [rbp + rax - 0x18] ; ret
0x00000200003be3c8 : sal byte ptr [rbp - 0xa], cl ; mov eax, 0x2000000 ; ret
0x0000020000471777 : sal byte ptr [rbp - 0xa], cl ; ret
0x000002000017e0cb : sal byte ptr [rbp - 0xb], 0xe9 ; ret
0x0000020000224b1d : sal byte ptr [rbp - 0xb], 0xf ; mov edx, 0x83491ff2 ; ret
0x000002000013f1a5 : sal byte ptr [rbp - 0xb], 0xf ; mov edx, 0xff411ff2 ; ret
0x000002000073c023 : sal byte ptr [rbp - 0xc], 0x45 ; and esi, edi ; call r12
0x00000200000234d5 : sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x0000020000146989 : sal byte ptr [rbp - 0xc], 1 ; sfence ; ret
0x00000200000c30b0 : sal byte ptr [rbp - 0xc], cl ; ret
0x0000020000134f54 : sal byte ptr [rbp - 0xd], 0x3a ; ret 0x475
0x00000200007517e1 : sal byte ptr [rbp - 0xd], 0xeb ; xchg eax, edx ; mov al, 1 ; ret
0x00000200004cc57b : sal byte ptr [rbp - 0xe], 1 ; ret
0x00000200001b471e : sal byte ptr [rbp - 0xf], 0x48 ; add esp, 0x28 ; ret
0x00000200002160c1 : sal byte ptr [rbx + 0x24], 1 ; xor eax, eax ; ret
0x00000200005ce12b : sal byte ptr [rbx + 0x44], 0x8b ; ret
0x000002000041e914 : sal byte ptr [rbx + 0x48], 3 ; ret 0x8548
0x000002000006b01d : sal byte ptr [rbx + 0xc], 0x8b ; ret 0xc2ff
0x0000020000029b8e : sal byte ptr [rbx + 0xf], 0x4c ; mov dword ptr [rdx], eax ; mov rax, rcx ; ret
0x0000020000057f73 : sal byte ptr [rbx + rax + 0x44], cl ; mov dword ptr [rdx], ecx ; xor eax, eax ; ret
0x00000200004097a1 : sal byte ptr [rbx + rax + 0x48], 0x8b ; sbb byte ptr [rax - 0x75], cl ; ret
0x00000200006bcfb1 : sal byte ptr [rbx + rax + 0x48], 0xff ; loopne 0x200006bd008 ; jmp rax
0x00000200001b2ab1 : sal byte ptr [rbx + rax + 0x48], cl ; jmp rdx
0x00000200003b63a5 : sal byte ptr [rbx + rax + 0x49], cl ; jmp rdx
0x00000200000e4541 : sal byte ptr [rbx + rax - 0x50], 1 ; ret
0x00000200001e26e3 : sal byte ptr [rbx + rax - 1], 0xc8 ; ret
0x00000200005d0e6a : sal byte ptr [rbx + rbp + 0x48], 0x83 ; ret 0x4802
0x00000200000dc65c : sal byte ptr [rbx + rbx - 0x70], 0xff ; ret
0x00000200001fdb4f : sal byte ptr [rbx + rbx - 0xa], cl ; ret 0x7502
0x00000200001c3241 : sal byte ptr [rbx + rbx*2 + 0x41], 0xff ; ret
0x00000200003fb977 : sal byte ptr [rbx + rbx*2 + 0x44], 0x3b ; ret
0x0000020000626c92 : sal byte ptr [rbx + rbx*2 + 0x49], 0x3b ; ret 0x830f
0x00000200003fb891 : sal byte ptr [rbx + rbx*8 + 0x32], 0xc0 ; ret
0x0000020000447d1b : sal byte ptr [rbx + rcx + 0x48], 0x8b ; and al, 0x40 ; call rax
0x0000020000448fa6 : sal byte ptr [rbx + rcx + 0x48], 0x8b ; and al, 0x60 ; call rax
0x00000200001e322e : sal byte ptr [rbx + rcx + 0x49], 0x8b ; ret
0x000002000000ab06 : sal byte ptr [rbx + rdi - 0x75], cl ; ret 0x8b41
0x0000020000036729 : sal byte ptr [rbx + rdx - 0x75], cl ; ret 0x8948
0x00000200003fb8fb : sal byte ptr [rbx + rdx*2 + 0x44], 0x3b ; ret
0x000002000047ff10 : sal byte ptr [rbx + rsi - 0x75], cl ; ret 0x8b4c
0x00000200000495f7 : sal byte ptr [rbx + rsi*2 + 0x48], 0x8b ; or byte ptr [r8 - 0x7d], r9b ; ret
0x000002000040b280 : sal byte ptr [rbx + rsi*4 + 0x44], 0x8b ; ret
0x000002000019d5a3 : sal byte ptr [rbx - 0x11], 0xff ; ret 0x8d48
0x0000020000121aac : sal byte ptr [rbx - 0x74b7000d], 1 ; ret
0x00000200001dd617 : sal byte ptr [rbx], 0xc0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000014f6b5 : sal byte ptr [rbx], 0xc0 ; ret
0x0000020000498e32 : sal byte ptr [rbx], 0xd2 ; call 0x200000c2846
0x0000020000047b14 : sal byte ptr [rbx], 0xd2 ; call 0x200000c5f59
0x00000200006b3984 : sal byte ptr [rbx], 0xd2 ; call 0x200000cfb95
0x00000200004a4cd1 : sal byte ptr [rbx], 0xd2 ; call 0x200000cfb96
0x00000200005f67d0 : sal byte ptr [rbx], 0xd2 ; call 0x200000cfb99
0x0000020000588d7f : sal byte ptr [rbx], 0xd2 ; call 0x20000635031
0x000002000010b30e : sal byte ptr [rbx], 0xd2 ; call r9
0x00000200001846c9 : sal byte ptr [rbx], 0xd2 ; call rax
0x00000200000b3281 : sal byte ptr [rbx], 0xd2 ; lea rcx, qword ptr [rbx + rax] ; call 0x2000014f4c9
0x00000200004265bf : sal byte ptr [rbx], 0xd2 ; mov rcx, r12 ; call 0x200000c2848
0x000002000049473c : sal byte ptr [rbx], 0xd2 ; mov rcx, r13 ; call 0x200000c2849
0x0000020000500d44 : sal byte ptr [rbx], 0xd2 ; mov rcx, r13 ; call 0x2000012f9b9
0x0000020000195d82 : sal byte ptr [rbx], 0xd2 ; xor ecx, ecx ; call 0x200000d1fa7
0x00000200004300aa : sal byte ptr [rbx], 1 ; rol bl, 0x49 ; mov eax, eax ; ret
0x00000200005f7fc6 : sal byte ptr [rbx], cl ; fucomi st(0) ; ret 0xad4d
0x0000020000195d84 : sal byte ptr [rbx], cl ; leave ; call 0x200000d1fa5
0x00000200005d8c91 : sal byte ptr [rbx], cl ; leave ; call 0x200000d3a09
0x00000200005c042d : sal byte ptr [rbx], cl ; leave ; call 0x200001eca2e
0x0000020000114437 : sal byte ptr [rbx], cl ; leave ; call rax
0x00000200004c7815 : sal byte ptr [rbx], cl ; leave ; xor r8d, r8d ; call 0x200000ec74d
0x000002000047ea2f : sal byte ptr [rcx + 0x49], 0x8b ; ret
0x0000020000576f69 : sal byte ptr [rcx + 0x4c], 0x8b ; ret
0x0000020000020110 : sal byte ptr [rcx + 0x4d], 0x8b ; ret 0x2b4c
0x00000200006703d1 : sal byte ptr [rcx + rax*2 - 0xa], cl ; ret
0x000002000066d1eb : sal byte ptr [rcx + rax*4 + 0x44], 0x8b ; ret
0x000002000021bea6 : sal byte ptr [rcx + rax*8 + 0x41], cl ; mov eax, edx ; jmp 0x2000021beb5
0x0000020000166095 : sal byte ptr [rcx + rbp + 0x41], 0x81 ; call qword ptr [rdi]
0x0000020000138e80 : sal byte ptr [rcx + rbp + 0x49], 0xff ; ret
0x000002000064fa36 : sal byte ptr [rcx + rbp + 0x4a], 0x8b ; call qword ptr [rax]
0x00000200001a13de : sal byte ptr [rcx + rbx + 0x48], 0x3b ; ret
0x000002000049192c : sal byte ptr [rcx + rbx + 0x48], 0x8b ; clc ; jmp 0x200004918fd
0x0000020000629d86 : sal byte ptr [rcx + rbx + 0x49], 0x83 ; ret 0x4502
0x0000020000098e90 : sal byte ptr [rcx + rbx - 0x75], cl ; ret 0x41f0
0x000002000039ea04 : sal byte ptr [rcx + rbx*8 - 0x15], 0xf3 ; mov rcx, rbx ; jmp 0x2000039e9da
0x00000200005b034b : sal byte ptr [rcx + rcx + 0x48], 0x3b ; ret
0x00000200004e08d3 : sal byte ptr [rcx + rcx + 0x48], 0x8b ; out dx, eax ; call rax
0x00000200006c04de : sal byte ptr [rcx + rcx + 0x48], 0x8b ; retf ; call rax
0x00000200000ff58d : sal byte ptr [rcx + rcx + 0x48], 0xc7 ; ret
0x00000200006c04f3 : sal byte ptr [rcx + rcx - 0x75], 0xd7 ; mov rcx, rbx ; call rax
0x00000200004a3c6d : sal byte ptr [rcx + rcx - 0x75], 5 ; ret 0xe20d
0x00000200004a3b6d : sal byte ptr [rcx + rcx - 0x75], 5 ; ret 0xe20e
0x00000200006dc383 : sal byte ptr [rcx + rdi + 0x41], 0x8b ; ret 0xff41
0x00000200000ada32 : sal byte ptr [rcx + rdi + 0x48], 0xff ; ret 0x8148
0x00000200005069ae : sal byte ptr [rcx + rdi*2 + 0x48], 0x8b ; ret
0x00000200004b05a7 : sal byte ptr [rcx + rdi*2 + 0x49], 0x3b ; ret
0x00000200005742ed : sal byte ptr [rcx + rdx + 0x44], 0x8b ; ret
0x00000200002063e0 : sal byte ptr [rcx + rdx + 0x44], 0x8b ; ret 0x8b49
0x00000200001356d6 : sal byte ptr [rcx + rdx + 0x48], 0x83 ; ret 0x4402
0x00000200005c37c3 : sal byte ptr [rcx + rdx + 0x49], 3 ; ret
0x000002000020e077 : sal byte ptr [rcx + rsi - 0x75], 5 ; cwde ; call qword ptr [rsi]
0x00000200004ccd10 : sal byte ptr [rcx], 1 ; ret 0x44ff
0x000002000002220d : sal byte ptr [rdi + 0x27], 1 ; ret
0x0000020000215454 : sal byte ptr [rdi + 0x2c], 3 ; ret
0x00000200000e42e8 : sal byte ptr [rdi + 0x41], 0x81 ; call qword ptr [rdi]
0x00000200000bab18 : sal byte ptr [rdi + 5], 1 ; ret
0x00000200001f7d33 : sal byte ptr [rdi + 5], 1 ; sub r8d, r10d ; jmp 0x200001f7d4b
0x00000200006b53ca : sal byte ptr [rdi + 6], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200004ec67a : sal byte ptr [rdi + rax + 0x40], 0x8a ; iretd ; call rax
0x0000020000007b9e : sal byte ptr [rdi + rax + 0x41], 0x2a ; ret 0x688
0x00000200001c5adf : sal byte ptr [rdi + rax + 0x48], 0x3b ; ret
0x00000200000dc649 : sal byte ptr [rdi + rax + 0x48], 0x8b ; and al, 0x78 ; call rax
0x00000200003e7264 : sal byte ptr [rdi + rax + 0x4c], 0x89 ; xlatb ; or bh, bh ; ret 0xc1ff
0x0000020000125c06 : sal byte ptr [rdi + rax - 0x3a], cl ; add dword ptr [rax], eax ; mov eax, r8d ; ret
0x00000200004c79b7 : sal byte ptr [rdi + rax - 0x50], 1 ; add rsp, 0x28 ; ret
0x000002000073a1c7 : sal byte ptr [rdi + rax*2 + 0x45], 0x8b ; ret 0x394c
0x000002000020b778 : sal byte ptr [rdi + rax*8 + 0x44], 0x8b ; ret
0x000002000000a17c : sal byte ptr [rdi + rbp + 0x41], 0x8b ; ret 0x20ba
0x0000020000678201 : sal byte ptr [rdi + rbp - 0x7b], cl ; fisttp dword ptr [rcx - 0x75] ; ret
0x0000020000032828 : sal byte ptr [rdi + rbp*8 - 0x15], 1 ; test al, 0xf6 ; ret 0x7401
0x000002000040a21f : sal byte ptr [rdi + rbx + 0x33], 0xc0 ; add rsp, 0x38 ; ret
0x00000200001f7dd2 : sal byte ptr [rdi + rcx + 0x41], 0x89 ; sbb dword ptr [rax - 1], ecx ; ret 0x8349
0x0000020000110b15 : sal byte ptr [rdi + rcx + 0x48], cl ; mov eax, edx ; ret
0x00000200001f7e08 : sal byte ptr [rdi + rcx + 0x49], 0xff ; ret 0x8941
0x000002000040781b : sal byte ptr [rdi + rcx + 0x4c], 0x8b ; ret 0x8b49
0x00000200000733f5 : sal byte ptr [rdi + rcx - 0x75], 0xc1 ; ret
0x000002000006a213 : sal byte ptr [rdi + rcx*2 + 0x48], 1 ; mov ebx, dword ptr [rsp + 0x10] ; ret
0x0000020000196e58 : sal byte ptr [rdi + rdi + 0x41], 0x8b ; ret 0xb941
0x0000020000499fe2 : sal byte ptr [rdi + rdi*2 + 0x44], 0x8b ; ret
0x000002000012903b : sal byte ptr [rdi + rdi*2 + 0x4c], 0x8b ; ret
0x000002000064a51b : sal byte ptr [rdi + rdi*4 + 0x48], 0x8b ; and byte ptr [rbp + 0x63], r9b ; ret 0x8b49
0x00000200001b65d9 : sal byte ptr [rdi + rdx + 0x45], 3 ; ret
0x00000200006880db : sal byte ptr [rdi + rdx + 0x48], 0x83 ; ret
0x000002000053048e : sal byte ptr [rdi + rdx - 0x75], cl ; ret
0x00000200000bab2f : sal byte ptr [rdi - 0x12], 1 ; ret
0x00000200001d0848 : sal byte ptr [rdx + 0x10], 0xff ; ret
0x00000200006796d3 : sal byte ptr [rdx + 0x2a], 0xff ; ret 0xfa83
0x00000200006786af : sal byte ptr [rdx + 0x36], 0xff ; ret 0xfa83
0x0000020000677ce4 : sal byte ptr [rdx + 0x37], 0xff ; ret 0xfa83
0x00000200001c3969 : sal byte ptr [rdx + 0x48], 0x8d ; push rax ; or byte ptr [rax - 0x75], cl ; ret 0x8d48
0x00000200000e9bf0 : sal byte ptr [rdx + 0xa], 1 ; mov al, cl ; ret
0x00000200001111f8 : sal byte ptr [rdx + 4], 1 ; mov al, r8b ; ret
0x000002000068981d : sal byte ptr [rdx + 4], cl ; mov dword ptr [r8], edx ; ret
0x00000200001a996b : sal byte ptr [rdx + rax - 0x4e], 1 ; mov al, dl ; ret
0x00000200006b7299 : sal byte ptr [rdx + rax - 0x50], 1 ; add rsp, 0x28 ; ret
0x00000200001b2a22 : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 0x28 ; ret
0x0000020000629762 : sal byte ptr [rdx + rax*2 + 0x4c], 0x8b ; ret
0x000002000060b6ae : sal byte ptr [rdx + rbp + 0x41], 0x3b ; ret 0x1b76
0x0000020000434a55 : sal byte ptr [rdx + rbx + 0x48], 0x8b ; enter 0x58e8, 0x61 ; ret 0x48ff
0x000002000000f6d3 : sal byte ptr [rdx + rbx + 0x48], 0x8b ; ret
0x00000200000f510a : sal byte ptr [rdx + rbx + 0x48], 0x8b ; ret 0x2b49
0x00000200005c3777 : sal byte ptr [rdx + rbx + 0x49], 3 ; ret
0x000002000047e7ca : sal byte ptr [rdx + rbx - 0x75], cl ; ret 0xc2ff
0x0000020000134ea1 : sal byte ptr [rdx + rcx + 0x48], 0xff ; ret 0xc2f6
0x000002000044defd : sal byte ptr [rdx + rcx + 0x48], 3 ; ret
0x00000200001c2a75 : sal byte ptr [rdx + rcx*2 + 0x48], 0x81 ; ret
0x00000200004eb285 : sal byte ptr [rdx + rdx + 0x44], 0x8b ; ret
0x000002000020641b : sal byte ptr [rdx + rdx + 0x44], 0x8b ; ret 0x8b49
0x000002000063dba8 : sal byte ptr [rdx + rdx + 0x4c], 0x8b ; ret
0x00000200003a4f60 : sal byte ptr [rdx + rsi + 0x44], 0x8b ; ret
0x000002000064f62b : sal byte ptr [rdx + rsi + 0x48], 3 ; ret 0x4eb
0x0000020000099151 : sal byte ptr [rdx + rsi*4 + 0x33], 0xc0 ; ret
0x0000020000038582 : sal byte ptr [rdx - 0x10], 1 ; ret
0x00000200001ac0f6 : sal byte ptr [rdx - 0x10], 1 ; xor eax, eax ; ret
0x00000200001f869b : sal byte ptr [rdx - 0x11], 0xb0 ; add ebx, eax ; xor al, al ; ret
0x000002000003eacb : sal byte ptr [rdx - 0x12], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000867e0 : sal byte ptr [rdx - 0x17], 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000003fb66 : sal byte ptr [rdx - 0x1a], 1 ; xor eax, eax ; ret
0x000002000044f3d4 : sal byte ptr [rdx - 0x1d], 1 ; mov dword ptr [rcx + 0x7c], r8d ; ret
0x00000200001e7aea : sal byte ptr [rdx - 0x1d], cl ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001e8df : sal byte ptr [rdx - 0x1d], cl ; xor eax, eax ; ret
0x00000200001f86fa : sal byte ptr [rdx - 0x2e], cl ; mov al, 1 ; ret
0x000002000015a68e : sal byte ptr [rdx - 0xd], 0x8b ; ret 0x348
0x00000200001f86b7 : sal byte ptr [rdx - 0xd], 1 ; mov al, 1 ; ret
0x00000200001f7e17 : sal byte ptr [rdx - 0xf], 1 ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000b282c : sal byte ptr [rsi + 3], 1 ; xor eax, eax ; ret
0x0000020000110def : sal byte ptr [rsi + rax + 0x38], cl ; and dword ptr [r13 + 1], esi ; ret
0x00000200006c85d9 : sal byte ptr [rsi + rax + 0x3a], cl ; sal byte ptr [rbp + 2], 1 ; xor eax, eax ; ret
0x00000200005712ee : sal byte ptr [rsi + rax + 0x48], cl ; mov ecx, dword ptr [rbp + 0x30] ; call rdx
0x0000020000652b86 : sal byte ptr [rsi + rax - 0x48], 1 ; xor al, 0 ; add al, al ; ret
0x000002000050ddd8 : sal byte ptr [rsi + rax - 0x75], cl ; and al, 0x28 ; mov dword ptr [rdx], ecx ; ret
0x00000200004c0e72 : sal byte ptr [rsi + rbp + 0x4c], 0x8b ; ret
0x00000200000bab2a : sal byte ptr [rsi + rbp*8 + 0x48], 0x3b ; sal byte ptr [rdi - 0x12], 1 ; ret
0x0000020000631359 : sal byte ptr [rsi + rbx*2 + 0x4d], 0x8b ; call qword ptr [rax]
0x000002000012ad1e : sal byte ptr [rsi + rcx + 0x44], 0x8b ; ret
0x00000200001f3e0d : sal byte ptr [rsi + rcx + 0x45], 0x3b ; ret 0x2f89
0x000002000040870a : sal byte ptr [rsi + rcx + 0x48], 0x63 ; ret 0x8b4c
0x000002000013f928 : sal byte ptr [rsi + rcx + 0x48], 0x83 ; ret 0x4402
0x0000020000422913 : sal byte ptr [rsi + rcx + 0x4c], 0x8b ; ret
0x0000020000577d26 : sal byte ptr [rsi + rcx - 0x75], cl ; ret
0x000002000001b62d : sal byte ptr [rsi + rcx - 0x76], 5 ; ret 0x2da8
0x000002000053569d : sal byte ptr [rsi + rdx*2 + 0x44], 0x8b ; ret
0x0000020000399e9d : sal byte ptr [rsi - 0x10], 1 ; ret
0x0000020000210002 : sal byte ptr [rsi - 0x1b], 1 ; add dword ptr [r10 + 0x14], edx ; xor eax, eax ; ret
0x0000020000438f43 : sal byte ptr [rsi - 0xe], 1 ; ret
0x00000200001a8547 : sal byte ptr [rsi - 9], cl ; ret 0xfff
0x0000020000127b03 : sal byte ptr [rsp + rax + 0x33], cl ; leave ; call rdx
0x000002000013501e : sal byte ptr [rsp + rax - 0x7c], cl ; div byte ptr [rbp - 0x75] ; xor eax, eax ; ret
0x00000200006882ca : sal byte ptr [rsp + rbx + 0x48], 0x83 ; ret
0x00000200006693ff : sal byte ptr [rsp + rbx*2 + 0x48], 0x8d ; push rsp ; and al, 0x58 ; call rax
0x000002000000d9ce : sal byte ptr [rsp + rcx + 0x3c], 2 ; je 0x2000000d9e1 ; mov eax, ecx ; ret
0x000002000022eee7 : sal byte ptr [rsp + rcx + 0x40], 0x88 ; xor byte ptr [rax + 3], cl ; ret
0x000002000057dac2 : sal byte ptr [rsp + rcx + 0x48], 0x83 ; ret 0x6608
0x000002000019e9e3 : sal byte ptr [rsp + rcx + 0x48], 0x8d ; and al, 0x30 ; call rax
0x0000020000477460 : sal byte ptr [rsp + rcx - 0x75], 0x50 ; sub dh, dh ; ret 0xf40
0x00000200005981fa : sal byte ptr [rsp + rcx - 1], 1 ; ret
0x000002000059836f : sal byte ptr [rsp + rcx*2 + 0x48], 0x83 ; ret
0x000002000068fee8 : sal byte ptr [rsp + rcx*2 - 0x75], cl ; ret 0x8d48
0x00000200000cb042 : sal byte ptr [rsp + rdi + 0x48], 3 ; ret 0x8548
0x000002000041d5a5 : sal byte ptr [rsp + rdi*4 + 0x44], 0x8b ; ret
0x000002000009b3f6 : sal byte ptr [rsp + rdx + 0x33], 0xc0 ; ret
0x0000020000688118 : sal byte ptr [rsp + rdx + 0x48], 0x83 ; ret
0x00000200001351a4 : sal byte ptr [rsp + rdx + 0x48], 0xff ; ret 0xff49
0x000002000051a50e : sal byte ptr [rsp + rdx*2 + 0x44], 0x8b ; ret
0x00000200003c1385 : sal byte ptr [rsp + rdx*4 + 0x48], 0x8b ; ret
0x00000200005cdd6b : sal byte ptr [rsp + rdx*8 + 0x48], 0x8b ; ror dword ptr [rax - 0x75], cl ; ret
0x000002000041e55d : sal byte ptr [rsp + rsi + 0x4c], 0x8b ; ret
0x000002000064aed2 : sal dh, 1 ; rcl dword ptr [rax], -0x75 ; ret 0xf41
0x0000020000067428 : sal dh, 1 ; ret
0x000002000050509c : sal dh, 1 ; ret 0x48ff
0x0000020000188655 : sal dh, 1 ; ret 0x7401
0x00000200001f4574 : sal dh, 1 ; ret 0x753f
0x000002000007a137 : sal dh, 1 ; ret 0xf01
0x000002000013b1f5 : sal dh, cl ; ret
0x000002000042c84f : sal dh, cl ; ret 0x7507
0x00000200000abdc0 : sal dh, cl ; ret 0xf01
0x000002000009c059 : sal dh, cl ; ret 0xf1e
0x00000200000d08e8 : sal dl, 0x37 ; add byte ptr [rcx - 0x7f], cl ; ret 0x3600
0x00000200004ed5ca : sal dword ptr [rax - 0x18], 0x3f ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000634a6b : sal dword ptr [rax - 0x36], 1 ; dec dword ptr [rax - 0x39] ; ret 0x3c80
0x00000200003ee148 : sal dword ptr [rax], 0 ; movdqu xmmword ptr [rdx], xmm0 ; mov eax, r10d ; ret
0x00000200003ddd93 : sal dword ptr [rbp + 0x64], -0x7f ; call qword ptr [rax]
0x00000200004848da : sal dword ptr [rbp + 3], -0x50 ; add ebx, eax ; xor al, al ; ret
0x00000200006bf1aa : sal dword ptr [rbp + 3], 1 ; xor eax, eax ; ret
0x000002000053528b : sal dword ptr [rbp + 6], 0x48 ; add esp, 0x40 ; pop rbp ; ret
0x00000200005f6fe9 : sal dword ptr [rbp + 7], -0x18 ; out dx, eax ; lodsb al, byte ptr [rsi] ; ret
0x0000020000645e57 : sal dword ptr [rbp + rax + 0x66], 0x3b ; ret 0x2875
0x000002000067e20e : sal dword ptr [rbp + rcx + 0x41], -1 ; ret
0x0000020000008412 : sal dword ptr [rbp - 0x13], 0x48 ; add esp, 0x28 ; ret
0x0000020000423d30 : sal dword ptr [rbp - 0x14], 1 ; lea eax, dword ptr [r8 + 0x48] ; ret
0x000002000011c25d : sal dword ptr [rbp - 0x2e], -0x15 ; or eax, 0xffffffff ; ret
0x000002000001e698 : sal dword ptr [rbp - 0xb], cl ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x0000020000050824 : sal dword ptr [rbx + 3], -0x50 ; add ebx, eax ; xor al, al ; ret
0x00000200005dfc0c : sal dword ptr [rbx + 3], 1 ; mov al, 1 ; ret
0x00000200002078a6 : sal dword ptr [rbx + 4], 0x44 ; mov cr0, rcx ; ret
0x000002000004b4d1 : sal dword ptr [rbx + 5], 0x48 ; add esp, 0x28 ; ret
0x00000200001f31cd : sal dword ptr [rbx + rax + 0x32], -0x40 ; ret
0x0000020000114168 : sal dword ptr [rbx + rcx + 0x48], 0x3b ; ret 0x974
0x00000200000df727 : sal dword ptr [rbx - 0x1c], 1 ; mov rax, r8 ; ret
0x00000200001f62b3 : sal dword ptr [rbx - 0xf], 0x48 ; mov eax, edx ; ret
0x00000200004131cd : sal dword ptr [rbx], -0x2e ; mov rcx, rdi ; call 0x2000014f4c8
0x00000200001d06a7 : sal dword ptr [rbx], -0x40 ; ret
0x00000200000a2f86 : sal dword ptr [rbx], -0x40 ; test rcx, r8 ; cmovne eax, edx ; ret
0x00000200003ed4f6 : sal dword ptr [rbx], 0x44 ; and al, 0x38 ; ret
0x0000020000138933 : sal dword ptr [rbx], 1 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x000002000060bae4 : sal dword ptr [rbx], 1 ; ror byte ptr [rax - 0x75], cl ; iretd ; call 0x20000231019
0x00000200000d523c : sal dword ptr [rbx], cl ; leave ; call 0x200000d1505
0x000002000063ef24 : sal dword ptr [rbx], cl ; leave ; call r8
0x00000200000a3982 : sal dword ptr [rcx + rbx - 0x75], 1 ; ret 0x41f0
0x0000020000170b33 : sal dword ptr [rcx + rcx + 0x49], 0x3b ; ret
0x00000200000384ae : sal dword ptr [rcx + rdx - 0x75], cl ; ret 0xf49
0x0000020000133aa7 : sal dword ptr [rcx + rdx*8 + 0x44], 0x2b ; rol dword ptr [rcx - 0x75], -0x40 ; ret
0x0000020000532088 : sal dword ptr [rdi + 0x14], -1 ; ret 0x8349
0x00000200006b4b71 : sal dword ptr [rdi + 0x58948ff], 1 ; lea edi, dword ptr [rax] ; ret 0x41ff
0x00000200000f11e5 : sal dword ptr [rdi + 1], 1 ; ret
0x000002000043f084 : sal dword ptr [rdi + 3], 0x4c ; mov dword ptr [rdx], eax ; mov al, 1 ; ret
0x00000200000344ba : sal dword ptr [rdi + 3], 1 ; sbb eax, eax ; ret
0x000002000065a18d : sal dword ptr [rdi + 6], -0x48 ; cmp al, 0 ; add byte ptr [rax], al ; ret
0x00000200006baf78 : sal dword ptr [rdi + 7], 0x45 ; sub ecx, edx ; mov dword ptr [r8], r9d ; ret
0x0000020000011db8 : sal dword ptr [rdi + rdx*2 + 0x48], -0x7d ; ret
0x00000200001aeca1 : sal dword ptr [rdi], cl ; adc al, byte ptr [rax] ; call rax
0x0000020000401d37 : sal dword ptr [rdx + 0xb], 0x48 ; add esp, 0x28 ; ret
0x000002000072b479 : sal dword ptr [rdx + 0xe], 0x3b ; ret 0x1773
0x0000020000114155 : sal dword ptr [rdx + rcx + 0x48], 0x3b ; ret 0x1c74
0x000002000068bb36 : sal dword ptr [rdx + rcx - 0x75], 1 ; ret 0x2341
0x000002000048cac8 : sal dword ptr [rdx - 0x15], 1 ; mov rax, r8 ; shr rax, 1 ; ret
0x0000020000042d9a : sal dword ptr [rdx - 0x16], 1 ; xor eax, eax ; ret
0x0000020000046bc5 : sal dword ptr [rdx - 0x17], 1 ; mov eax, 0x10 ; ret
0x000002000064391f : sal dword ptr [rdx - 0x19], -0x15 ; sbb byte ptr [rbp - 0x75], al ; ret
0x0000020000405ccf : sal dword ptr [rdx - 0x20], -0x75 ; ret 0x48c3
0x000002000002cd35 : sal dword ptr [rdx - 0x20], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200000df717 : sal dword ptr [rdx - 0x20], cl ; xor eax, eax ; ret
0x00000200000125f5 : sal dword ptr [rdx - 0x23], 1 ; ret
0x00000200001f7cf7 : sal dword ptr [rdx - 0x23], cl ; ret
0x000002000003b0bd : sal dword ptr [rdx], -0x40 ; ret
0x0000020000087b3d : sal dword ptr [rdx], -9 ; jmp 0x20033cb068f
0x0000020000022208 : sal dword ptr [rip - 0x2fc4b800], cl ; ja 0x2000002223f ; ret
0x00000200003e5106 : sal dword ptr [rsi + 0x32], -0x18 ; ret 0xc6c2
0x00000200001ddfa7 : sal dword ptr [rsi + 0x4d], 0x2b ; ret 0xc149
0x0000020000766eed : sal dword ptr [rsi + 0x58d48ff], 0x19 ; ret
0x0000020000090706 : sal dword ptr [rsi + 5], 1 ; add rsp, 0x38 ; ret
0x0000020000218aac : sal dword ptr [rsi + 6], 1 ; mov eax, 1 ; ret
0x0000020000613f64 : sal dword ptr [rsi + 9], 0x41 ; lea eax, dword ptr [rcx - 2] ; sub ax, dx ; jmp 0x20000613f8e
0x00000200001018f4 : sal dword ptr [rsi + rax - 0x75], cl ; ret 0x8d49
0x00000200001202a6 : sal dword ptr [rsi - 0x12], -0x7d ; sar bh, 0x75 ; int1 ; ret
0x000002000012fdf3 : sal dword ptr [rsi - 0x14], 1 ; mov dword ptr [rcx + 0x14], edx ; xor eax, eax ; ret
0x0000020000138e26 : sal dword ptr [rsp + rdx + 0x49], -1 ; ret
0x00000200005c350a : sal eax, -0x7d ; ret
0x00000200001bb9aa : sal eax, 0x48 ; mov eax, ecx ; ret
0x0000020000033bb3 : sal eax, 0x4a ; xadd dword ptr [rax + rdx], ecx ; ret
0x000002000051feeb : sal ebp, 1 ; ret 0x48ff
0x0000020000585e27 : sal ebp, cl ; dec dword ptr [rax - 0x7d] ; ret 0x4838
0x0000020000480589 : sal ebx, cl ; ret
0x00000200002098af : sal ecx, cl ; dec dword ptr [rax + 0x3b] ; ret 0xc74
0x000002000018c8cb : sal ecx, cl ; dec dword ptr [rax - 0x7f] ; ret 0
0x000002000002f815 : sal edi, 1 ; ret 0xffff
0x0000020000230d74 : sal edi, 1 ; ror dword ptr [rax + 3], 1 ; ret
0x00000200000cb384 : sal edi, cl ; rol byte ptr [rcx + 0x23], 1 ; ret
0x0000020000621809 : sal esi, 1 ; ret
0x00000200006b403d : sal esi, 5 ; pop rbx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x1ff
0x0000020000020cbb : sal esi, 5 ; ret
0x00000200003d4d6e : sal esi, cl ; ret
0x0000020000049795 : sal esi, cl ; ret 0x7502
0x00000200000a6822 : sal esi, cl ; ret 0xf1e
0x0000020000209857 : sal esi, cl ; rol byte ptr [rcx + 0x22], 1 ; ret
0x00000200005f6fe8 : sal qword ptr [r13 + 7], -0x18 ; out dx, eax ; lodsb al, byte ptr [rsi] ; ret
0x000002000049a032 : sal r14b, 1 ; ret
0x0000020000049794 : sal r14d, cl ; ret 0x7502
0x0000020000067427 : sal sil, 1 ; ret
0x0000020000182dc6 : salc ; adc al, 0 ; call 0x200000deff5
0x00000200000747b5 : salc ; add al, 0 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004fdb13 : salc ; add al, byte ptr [rax] ; add byte ptr [rbx - 0x9d7c4ac], cl ; ret 0xf20
0x00000200001b6c25 : salc ; add byte ptr [rax], al ; add byte ptr [rsp + rdx - 0x7f], dh ; call rcx
0x0000020000141c75 : salc ; add byte ptr [rax], al ; add cl, ch ; add al, dl ; add byte ptr [rax], al ; ret
0x000002000014079b : salc ; add byte ptr [rax], al ; ret
0x00000200000a9937 : salc ; add eax, dword ptr [rax] ; add byte ptr [rdi + rcx - 0x51], cl ; ret 0x8b49
0x00000200006b69a3 : salc ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000632ac4 : salc ; and bh, bh ; ret 0x553b
0x000002000039bd2d : salc ; call 0x20000067f5f
0x000002000005b7bc : salc ; call 0x200000979d3
0x00000200004c0d83 : salc ; call 0x200000e28a8
0x00000200004ed18d : salc ; call 0x20000110ae4
0x0000020000517d77 : salc ; call 0x20000143364
0x0000020000659e1b : salc ; call 0x20000206033
0x000002000060ed4e : salc ; call 0x20000231014
0x000002000060ab48 : salc ; call 0x20000231ce4
0x00000200005ae6c3 : salc ; call 0x2000045371c
0x000002000048736b : salc ; call 0x200004ba545
0x0000020000502750 : salc ; call 0x200004ee97b
0x0000020000588d1b : salc ; call 0x20000634faf
0x00000200002114da : salc ; call r10
0x00000200002215f1 : salc ; call r11
0x000002000013484d : salc ; call r14
0x000002000016f377 : salc ; call rax
0x0000020000214463 : salc ; cmovne rcx, r11 ; call rax
0x000002000056b6e8 : salc ; dec dword ptr [rax + 3] ; ret 0x8941
0x00000200005664fc : salc ; dec dword ptr [rax - 0x3f] ; cli ; or ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200003e9564 : salc ; dec dword ptr [rax - 0x75] ; ret
0x0000020000619172 : salc ; dec dword ptr [rax - 0x77] ; or eax, 0xffd665fd ; ret
0x000002000039f38b : salc ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000768066 : salc ; dec dword ptr [rax - 1] ; ret
0x00000200006b67bf : salc ; dec dword ptr [rbx + 0x78c085e8] ; sbb bh, bh ; ret
0x0000020000785602 : salc ; dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x0000020000431902 : salc ; fsub st(4), st(0) ; push qword ptr [rbx] ; idiv byte ptr [rbx] ; ret 0xb841
0x00000200003acae9 : salc ; idiv bh ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001ea15b : salc ; imul rax, rcx ; div r8 ; ret
0x000002000074fd90 : salc ; inc dword ptr [rax + rax*8 - 0x74b7e78c] ; ret
0x000002000039eedb : salc ; inc dword ptr [rbx + rcx*4 + 0xd] ; pushfq ; ret
0x0000020000619179 : salc ; inc ebx ; xor al, al ; ret
0x00000200004bc911 : salc ; jb 0x200004bc92a ; add byte ptr [rbp - 0x75], al ; ret
0x0000020000028376 : salc ; jbe 0x20000028393 ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8944
0x0000020000156481 : salc ; jmp 0x2000007e0c6
0x00000200004c28e1 : salc ; lea rcx, qword ptr [rbp - 0x20] ; call 0x200000e8b5c
0x000002000052c992 : salc ; lea rcx, qword ptr [rsp + 0x28] ; call 0x2000014f189
0x000002000063593b : salc ; loope 0x20000635945 ; add rsp, 0x50 ; pop rbp ; ret
0x00000200001e33bc : salc ; mov dword ptr [r10 + 4], r9d ; ret
0x00000200007475bb : salc ; mov eax, 0xc74808ff ; ret 0x7400
0x0000020000622e86 : salc ; mov ebp, cs ; dec dword ptr [rax + 0x3b] ; ret 0xd75
0x000002000060dae3 : salc ; mov ecx, 0x200 ; call 0x20000231ce9
0x00000200006086e9 : salc ; mov ecx, 1 ; call 0x20000231ce9
0x00000200004b4443 : salc ; mov ecx, ebx ; call rax
0x000002000001a5e8 : salc ; mov qword ptr [r8 + rdx*8], rax ; inc edx ; jmp 0x2000001a5e3
0x00000200004c2e53 : salc ; mov qword ptr [rsp + 0x20], r15 ; call 0x200000e8b5d
0x000002000060551a : salc ; mov qword ptr [rsp + 0x20], rax ; call 0x20000461758
0x00000200003e554a : salc ; mov qword ptr [rsp + 0x20], rax ; call r10
0x00000200005d016c : salc ; mov r8d, dword ptr [rbx] ; mov rcx, rbp ; call rax
0x00000200001dec9a : salc ; mov rax, rdx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000405b3e : salc ; mov rcx, qword ptr [rcx + 8] ; call rax
0x0000020000499005 : salc ; mov rcx, qword ptr [rsp + 0x60] ; call 0x200000bc369
0x00000200001dce82 : salc ; mov rcx, r12 ; call 0x200006290ca
0x000002000004053b : salc ; mov rcx, r12 ; call r15
0x00000200004c9fdb : salc ; mov rcx, r13 ; call rax
0x00000200004cc23a : salc ; mov rcx, r14 ; call 0x200000f7d4f
0x00000200004fce16 : salc ; mov rcx, r14 ; call r9
0x0000020000475ff1 : salc ; mov rcx, r15 ; call 0x2000009a2d7
0x00000200004beeb5 : salc ; mov rcx, r15 ; call 0x200000e8157
0x00000200004c363f : salc ; mov rcx, r15 ; call 0x200000e9fdb
0x00000200004c358e : salc ; mov rcx, r15 ; call 0x200000ea7fb
0x000002000052dc56 : salc ; mov rcx, r15 ; call 0x2000014f187
0x00000200005a4c10 : salc ; mov rcx, r15 ; call 0x200001cb463
0x0000020000123dce : salc ; mov rcx, r15 ; call r14
0x000002000046546e : salc ; mov rcx, r15 ; call rax
0x00000200001d202e : salc ; mov rcx, r15 ; lea r8d, dword ptr [r9 - 1] ; call qword ptr [r15]
0x00000200005be41b : salc ; mov rcx, r9 ; call rax
0x00000200005281c7 : salc ; mov rcx, rax ; call 0x2000014f187
0x00000200005ae880 : salc ; mov rcx, rax ; call 0x2000064ab0a
0x00000200006c5f91 : salc ; mov rcx, rax ; call r15
0x00000200004295c6 : salc ; mov rcx, rbp ; call 0x20000059333
0x00000200004091cc : salc ; mov rcx, rbp ; call rax
0x000002000041d2bb : salc ; mov rcx, rbx ; call 0x20000042aa7
0x00000200004973db : salc ; mov rcx, rbx ; call 0x200000b8097
0x000002000041d29b : salc ; mov rcx, rbx ; call r11
0x000002000013491f : salc ; mov rcx, rbx ; call r14
0x000002000059c7ac : salc ; mov rcx, rbx ; call rax
0x00000200004239a0 : salc ; mov rcx, rdi ; call 0x200000459c7
0x00000200004238a6 : salc ; mov rcx, rdi ; call 0x20000053853
0x000002000049801e : salc ; mov rcx, rdi ; call 0x200000ba84f
0x00000200004c0d2d : salc ; mov rcx, rdi ; call 0x200000e264f
0x00000200004c09f8 : salc ; mov rcx, rdi ; call 0x200000e285b
0x00000200004c0d73 : salc ; mov rcx, rdi ; call 0x200000e28ab
0x00000200004c00fd : salc ; mov rcx, rdi ; call 0x200000e8157
0x000002000013494f : salc ; mov rcx, rdi ; call r14
0x0000020000633ff5 : salc ; mov rcx, rdi ; call rax
0x0000020000171627 : salc ; mov rcx, rdi ; call rbx
0x0000020000498037 : salc ; mov rcx, rdi ; mov ebp, eax ; call 0x200000ba7e9
0x000002000069474a : salc ; mov rcx, rsi ; call rax
0x00000200006364d2 : salc ; push qword ptr [rbx] ; leave ; call 0x200001327ca
0x00000200006364d1 : salc ; push qword ptr [rbx] ; leave ; call 0x200001327cb
0x00000200004d30d8 : salc ; push qword ptr [rbx] ; shr al, cl ; ret
0x000002000005d7c6 : salc ; rcl dword ptr [rcx], 0 ; ret
0x0000020000009e9a : salc ; ret
0x00000200001cd976 : salc ; ret 0x2f
0x0000020000475ff6 : salc ; ret 0x48ff
0x00000200006074ff : salc ; ret 0x49ff
0x0000020000512d68 : salc ; ret 0x85ff
0x000002000051374d : salc ; ret 0x8bff
0x00000200005219bc : salc ; ret 0xa
0x00000200004e8ace : salc ; ret 0xffb9
0x0000020000655bd6 : salc ; ret 0xffca
0x0000020000185949 : salc ; ret 0xfff0
0x0000020000195856 : salc ; ret 0xfff2
0x000002000040abd6 : salc ; ret 5
0x0000020000573f17 : salc ; std ; inc dword ptr [rcx - 0x48] ; ret
0x000002000002da20 : salc ; sub al, 0 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000073fe0 : salc ; wait ; adc byte ptr [rax], al ; ret
0x0000020000498c66 : salc ; wait ; ret 0xf0ff
0x0000020000686333 : salc ; xor al, al ; ret
0x00000200001da388 : salc ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000048e29e : sar ah, 0x48 ; add esp, 0x28 ; ret
0x00000200000082b4 : sar al, 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + rcx] ; ret
0x00000200000c1a3f : sar al, 0x42 ; mov eax, dword ptr [rdx + rax*4] ; ret
0x00000200000c1a60 : sar al, 0x46 ; mov dword ptr [rdx + rax*4], ecx ; ret
0x0000020000622a68 : sar bh, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200006cb3cf : sar bh, 0x48 ; add esp, 0x28 ; ret
0x00000200004b580b : sar bh, 0x48 ; add esp, 0x38 ; ret
0x0000020000531423 : sar bh, 0x48 ; add esp, 0x58 ; ret
0x0000020000529f0a : sar bh, 0x48 ; add esp, 0x68 ; ret
0x00000200004ea4a9 : sar bh, 0x48 ; add esp, 0x70 ; pop rbx ; ret
0x000002000052f09e : sar bh, 0x48 ; add esp, 0xe8 ; ret
0x000002000047528d : sar bh, 0x48 ; mov ecx, ebx ; call 0x2000009b448
0x0000020000453aee : sar bh, 0x49 ; add edi, 0x30 ; jmp 0x20000453b13
0x0000020000225792 : sar bh, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x200002257a3
0x0000020000225a5b : sar bh, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x20000225a75
0x000002000022b22e : sar bh, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x2000022b23f
0x000002000073b99e : sar bh, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x2000073b9af
0x00000200001202aa : sar bh, 0x75 ; int1 ; ret
0x0000020000731340 : sar bh, 0x75 ; jmp 0x1ffec359e96
0x00000200006ab75a : sar bh, 0x75 ; ret
0x0000020000123570 : sar bh, 0x75 ; xlatb ; ret
0x00000200004eb4e0 : sar bh, 0x84 ; ror byte ptr [rdi], 0x85 ; stosd dword ptr [rdi], eax ; ret
0x0000020000536b29 : sar bh, 0x85 ; ror byte ptr [rdi], 0x88 ; ret 0
0x0000020000515b24 : sar bh, 0x8a ; ret
0x000002000041b53d : sar bh, 0x8b ; ret
0x000002000062cede : sar bh, 0x90 ; add rsp, 0x30 ; pop rbp ; ret
0x000002000041b4cf : sar bh, 0xc0 ; add rsp, 0x28 ; ret
0x0000020000230cc1 : sar bh, 0xc0 ; ret
0x0000020000157596 : sar bh, 0xc8 ; jmp 0x20000003850
0x00000200003ebb49 : sar bh, 0xc8 ; ret
0x00000200005462c5 : sar bh, 0xcc ; mov eax, 0x1c ; ret
0x00000200004b4045 : sar bh, 0xe8 ; mov ah, 0xe0 ; sar bh, 0x8b ; ret
0x00000200006d2cd6 : sar bh, 0xe8 ; ret
0x00000200004b3c50 : sar bh, 0xe8 ; test eax, 0x8bffc0e4 ; ret
0x000002000051cc86 : sar bh, 0xe8 ; xchg dword ptr [rdx], ebx ; add byte ptr [rax], al ; call 0x20000758eed
0x000002000045317a : sar bh, 0xeb ; ret 0x10a8
0x000002000062736f : sar bh, 0xeb ; ret 0x438b
0x0000020000775df6 : sar bh, 0xf ; scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x00000200006cafb2 : sar bh, 0xf ; xchg eax, ebp ; ret
0x0000020000491b56 : sar bh, 0xf6 ; ret
0x0000020000138110 : sar bh, 0xff ; jmp qword ptr [rcx]
0x00000200005f728d : sar bh, 1 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005ed38e : sar bh, 1 ; call 0x200000264e8
0x00000200005f74d2 : sar bh, 1 ; call 0x20000053794
0x00000200003bf2bb : sar bh, 1 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x000002000052b76d : sar bh, 1 ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005f1ed8 : sar bh, 1 ; ret
0x00000200000a0d3a : sar bh, 1 ; ret 0xc28b
0x000002000001a5ec : sar bh, 1 ; ret 0xeceb
0x000002000044e8a2 : sar bh, 1 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200005f55a5 : sar bh, cl ; add rsp, 0x28 ; ret
0x00000200005f5e0a : sar bh, cl ; add rsp, 0x40 ; pop rbx ; ret
0x000002000040684e : sar bh, cl ; add rsp, 0x70 ; pop rbx ; ret
0x000002000040994f : sar bh, cl ; add rsp, 0x70 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200004119f0 : sar bh, cl ; add rsp, 0x78 ; ret
0x000002000040b8d5 : sar bh, cl ; add rsp, 0x98 ; ret
0x000002000040ba0e : sar bh, cl ; add rsp, 0xa8 ; ret
0x000002000072b121 : sar bh, cl ; call qword ptr [rsi]
0x00000200005dd512 : sar bh, cl ; call rax
0x00000200005f55b8 : sar bh, cl ; je 0x200005f55cb ; mov eax, 0xc0000001 ; ret
0x000002000050aadf : sar bh, cl ; jmp 0x2000050aa7a
0x000002000050aade : sar bh, cl ; jmp 0x2000050aa7b
0x000002000041a920 : sar bh, cl ; mov eax, ebx ; add rsp, 0x50 ; pop rbx ; ret
0x00000200006538d9 : sar bh, cl ; ret
0x000002000065a19f : sar bh, cl ; sbb eax, eax ; and eax, 0x46 ; ret
0x00000200003b143c : sar bl, 1 ; out -1, eax ; add rsp, 0x28 ; ret
0x0000020000164a27 : sar byte ptr [r11], 1 ; ret 0x287d
0x0000020000758c0b : sar byte ptr [rax + 0x13], 0x8a ; ret
0x00000200006b67c4 : sar byte ptr [rax + 0x18], 0xff ; ret
0x00000200007589af : sar byte ptr [rax + 0x2d], 0xff ; ret
0x000002000069e000 : sar byte ptr [rax + 0x30], 0x8a ; ret
0x000002000045142b : sar byte ptr [rax + 0x34], 0x8a ; ret
0x00000200001c0335 : sar byte ptr [rax + 0x34], 0xf6 ; ret
0x000002000074a92f : sar byte ptr [rax + 0x3f], 0xff ; ret
0x00000200001a79a1 : sar byte ptr [rax + 0x48], 0x81 ; ret
0x000002000041ce3d : sar byte ptr [rax + 0x4d], 0x8b ; ret
0x00000200004c1912 : sar byte ptr [rax + 0x60], 0xf6 ; ret
0x00000200007840d9 : sar byte ptr [rax + 0x7a], 0xe8 ; lahf ; ret 0xff9b
0x00000200001e3a47 : sar byte ptr [rax + 0xa], 0x8b ; ret
0x00000200006ab68c : sar byte ptr [rax + 0xc], 0x8b ; ret
0x0000020000123ed5 : sar byte ptr [rax + 0xe], 0x4c ; sub ecx, edx ; mov qword ptr [r8], r9 ; ret
0x00000200001a4549 : sar byte ptr [rax + 0xe], 0xff ; ret
0x000002000064b189 : sar byte ptr [rax + 2], 0x8b ; ret
0x0000020000104c6c : sar byte ptr [rax + 2], 0xff ; ret
0x000002000009c955 : sar byte ptr [rax + 3], 0x2b ; ret 0xd08b
0x0000020000074144 : sar byte ptr [rax + 3], 0x41 ; mov dword ptr [rdx], ecx ; ret
0x0000020000032dc6 : sar byte ptr [rax + 5], 0x48 ; add esp, 0x28 ; ret
0x00000200001a578d : sar byte ptr [rax + 7], 0x49 ; sub edx, ecx ; mov qword ptr [r8], rdx ; ret
0x00000200007636bd : sar byte ptr [rax + 7], 0xff ; ret
0x0000020000489d1f : sar byte ptr [rax + 9], 0xff ; ret
0x0000020000074211 : sar byte ptr [rax - 0xc], 0x48 ; mov eax, edx ; ret
0x0000020000044e4d : sar byte ptr [rax - 0xf], 0x48 ; mov eax, edx ; ret
0x000002000003f8b9 : sar byte ptr [rax], 0x48 ; lea eax, dword ptr [rax + rax*4] ; lea rax, qword ptr [rdx + rax*8] ; ret
0x000002000021b769 : sar byte ptr [rax], 0x4c ; cmp eax, edx ; jl 0x2000021b757 ; ret
0x000002000000bd3b : sar byte ptr [rax], 1 ; setne al ; ret
0x000002000064981f : sar byte ptr [rbp + 0xd], 0x8b ; sbb byte ptr [r15], cl ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x000002000052ce8c : sar byte ptr [rbx + 1], cl ; call 0x2000014f4c9
0x00000200000e9a40 : sar byte ptr [rbx + rax - 0x50], 1 ; add ebx, eax ; xor al, al ; ret
0x000002000001d30c : sar byte ptr [rbx - 0x4477ffff], 0x15 ; add byte ptr [rcx], al ; ret 1
0x000002000020019f : sar byte ptr [rbx], 0x94 ; ret
0x0000020000201dee : sar byte ptr [rbx], 0xb4 ; ret
0x000002000002f702 : sar byte ptr [rbx], 0xc1 ; ja 0x2000002f70d ; ret
0x00000200001c1970 : sar byte ptr [rbx], 0xc2 ; jl 0x200001c1966 ; or eax, 0xffffffff ; ret
0x0000020000085c27 : sar byte ptr [rbx], 1 ; ret
0x0000020000164a28 : sar byte ptr [rbx], 1 ; ret 0x287d
0x00000200006b494d : sar byte ptr [rbx], 5 ; xchg eax, esp ; sahf ; ret 0x76ff
0x00000200006a296b : sar byte ptr [rbx], cl ; ret 0x39
0x00000200005f0eb2 : sar byte ptr [rcx + 0x16], 0x33 ; ror byte ptr [rbp + rcx*4 + 5], cl ; ret 0xf568
0x00000200003e74c3 : sar byte ptr [rcx + 0x1a], 0x8b ; ret
0x0000020000441861 : sar byte ptr [rcx + 0x208], 1 ; call 0x20000071479
0x000002000077d02c : sar byte ptr [rcx + 0x28e9ffb9], 1 ; ret 0xfffe
0x0000020000535f54 : sar byte ptr [rcx + 0x2a], 0x8b ; ret
0x000002000042293a : sar byte ptr [rcx + 0x58], 0xf7 ; fdivr dword ptr [rbx] ; ret
0x000002000049ab87 : sar byte ptr [rcx + 0xa], 0x48 ; mov ecx, edi ; call 0x200000c23c9
0x000002000061c5c8 : sar byte ptr [rcx + 0xa], 0xbb ; and eax, 0xe9c00002 ; ret 0
0x000002000051b6ee : sar byte ptr [rcx + 0xb], 1 ; call 0x20000140869
0x000002000040f935 : sar byte ptr [rcx + 0xd], 0x8b ; ret 0x8b48
0x00000200001142b8 : sar byte ptr [rcx + 5], 0x45 ; mov eax, edx ; jmp 0x2000011428a
0x000002000004bc9b : sar byte ptr [rcx + 5], 0x48 ; add esp, 0x58 ; ret
0x00000200001b7afc : sar byte ptr [rcx + 5], 0x48 ; and dword ptr [rcx + 0x70], 0 ; ret
0x00000200001a5959 : sar byte ptr [rcx + 5], 1 ; call 0x20000061c28
0x000002000042208a : sar byte ptr [rcx + 6], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001bef19 : sar byte ptr [rcx + 6], 0xb8 ; and al, byte ptr [rax] ; add al, al ; ret
0x000002000041e698 : sar byte ptr [rcx + 8], 0x8b ; ret
0x0000020000671fc0 : sar byte ptr [rcx - 0x64], 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x000002000073366d : sar byte ptr [rcx - 0x7ffffffc], 0x8b ; ret
0x0000020000033daf : sar byte ptr [rcx], 1 ; jae 0x20000033dbe ; xor eax, eax ; ret
0x00000200004e8977 : sar byte ptr [rcx], 5 ; ret 0x2106
0x00000200000e93ef : sar byte ptr [rdi + rdx + 0x44], 0x3b ; ret 0x97d
0x0000020000535f02 : sar byte ptr [rdi - 0x3b7cb701], cl ; push rax ; pop rbx ; ret
0x0000020000543460 : sar byte ptr [rdx + 0x294098], 0xe9 ; ret 0xfffd
0x000002000019e5bc : sar byte ptr [rdx + 1], 0xf ; ret 0xff41
0x00000200001fcf30 : sar byte ptr [rdx + 2], 0x3a ; ret 0x973
0x0000020000206d85 : sar byte ptr [rdx + 2], 0x3a ; ret 0xa73
0x00000200005eb7be : sar byte ptr [rdx + 5], 0xe8 ; ret
0x000002000000c35d : sar byte ptr [rdx + rax], 0x73 ; sbb al, 0xf6 ; ret
0x00000200006b76f2 : sar byte ptr [rdx + rax], 0xf ; xchg eax, ebp ; ret
0x0000020000622a18 : sar byte ptr [rdx - 0x3fffff18], 0xf ; ret 0x189
0x00000200005efb09 : sar byte ptr [rdx], 0xf ; ret 0x4489
0x0000020000444753 : sar byte ptr [rsi + 5], cl ; add rsp, 0x38 ; ret
0x000002000017e010 : sar byte ptr [rsi - 0x11], 1 ; inc dword ptr [rbp - 0x75] ; ret
0x000002000005eca9 : sar byte ptr [rsi - 0x14ffffd7], cl ; ret 0x8948
0x00000200005a21c4 : sar cl, 1 ; ret
0x00000200005037ac : sar cl, 1 ; ret 0x48ff
0x000002000016e739 : sar cl, cl ; inc dword ptr [rbp - 0x75] ; ret 0x8b48
0x0000020000407dfb : sar dh, 0x83 ; ret 0x75fe
0x000002000013bf28 : sar dh, 0xff ; push rsi ; ret
0x000002000004f806 : sar dh, 1 ; ret 0xc8eb
0x00000200005f55a4 : sar dil, cl ; add rsp, 0x28 ; ret
0x0000020000788c11 : sar dword ptr [rax + 0x40], 1 ; add byte ptr [rax], al ; add al, ah ; ret 0x4078
0x0000020000788c39 : sar dword ptr [rax + 0x40], 1 ; add byte ptr [rax], al ; add byte ptr [rax], ch ; ret
0x0000020000788b99 : sar dword ptr [rax + 0x40], 1 ; add byte ptr [rax], al ; add byte ptr [rax], dh ; ret 0x4078
0x00000200000177df : sar dword ptr [rax - 0x3ffffda1], cl ; ret
0x000002000044e7d5 : sar dword ptr [rax - 0x3fffff66], -0x15 ; ret
0x0000020000074714 : sar dword ptr [rax - 0x3ffffff3], 1 ; ret
0x0000020000206a00 : sar dword ptr [rbx], -0x36 ; jb 0x200002069f2 ; xor eax, eax ; ret
0x0000020000030ab7 : sar dword ptr [rbx], cl ; ret 0x1074
0x00000200001c88ca : sar dword ptr [rcx + 0x100008], -0x75 ; ret 0xf41
0x00000200005a017a : sar dword ptr [rcx + 0x81], cl ; call 0x2000043c478
0x000002000060a786 : sar dword ptr [rcx + 1], 1 ; call 0x20000231ce9
0x00000200000d5217 : sar dword ptr [rcx + 1], cl ; call 0x200000d1508
0x00000200007673e2 : sar dword ptr [rcx - 0x3b7cb701], 0x30 ; pop rbx ; ret
0x0000020000438f6c : sar dword ptr [rdi], 0 ; add byte ptr [rcx - 0x7d], al ; ret 0x4560
0x00000200000e2cd5 : sar dword ptr [rdx + 0x200], 0x3b ; ret 0x377
0x0000020000016514 : sar dword ptr [rdx + 1], 0x2b ; ret 0xe0c1
0x0000020000211d3f : sar dword ptr [rdx + rbp*8 + 0x33], -0x40 ; ret
0x000002000004f7f4 : sar dword ptr [rdx], -0x36 ; cmovg eax, edx ; mov dl, al ; mov al, dl ; ret
0x000002000053c4ab : sar dword ptr [rsi], 1 ; sar bh, 0x8b ; ret
0x000002000045102a : sar dword ptr [rsp + rdx + 0x4d], 0x3b ; ret
0x00000200001d0327 : sar eax, 0x10 ; add rax, rcx ; ret
0x0000020000129ee1 : sar eax, 0x10 ; add rsp, 0x28 ; ret
0x0000020000134b51 : sar eax, 0x10 ; and eax, 0x7fff ; ret
0x0000020000745f29 : sar eax, 0x10 ; ret
0x00000200000e9a3d : sar eax, 1 ; cmp edx, eax ; jl 0x200000e9a4e ; mov al, 1 ; ret
0x000002000013575b : sar eax, 1 ; dec rax ; ret
0x000002000040b48e : sar eax, 1 ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x0000020000135742 : sar eax, 1 ; ret
0x0000020000546298 : sar eax, 7 ; mov al, byte ptr [r8 + rax] ; ret
0x0000020000496ece : sar ebx, 0xc ; call 0x200000b9056
0x0000020000745f7d : sar ecx, 0x10 ; mov rax, rcx ; ret
0x00000200001615f5 : sar ecx, 0x33 ; ret 0x4a75
0x000002000043e2a1 : sar edi, -0x15 ; ret
0x000002000043aa03 : sar edi, -0x17 ; ret 0xfffe
0x00000200004b0180 : sar edi, -0x18 ; cmp dword ptr [rbx], ebp ; sar edi, -0x75 ; ret
0x00000200006c1b9a : sar edi, -0x18 ; pop rbx ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200006c2c56 : sar edi, -0x18 ; ret
0x00000200006c1dac : sar edi, -0x3d ; mov eax, 0xc000000d ; ret
0x00000200007697c0 : sar edi, -0x48 ; push rax ; ret
0x000002000045d8a8 : sar edi, -0x75 ; ret
0x000002000045b763 : sar edi, -0x7c ; ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; ret 0x14
0x000002000042a74a : sar edi, -0x7c ; ror byte ptr [rdi], 0x85 ; call qword ptr fs:[rsi]
0x000002000076e9fd : sar edi, -0x7d ; loopne 0x2000076ea08 ; ret
0x000002000043c4a0 : sar edi, -0x7d ; ret
0x00000200006bf59b : sar edi, -0xa ; ret 0x7410
0x000002000013318f : sar edi, -1 ; jne 0x2000013319a ; ret
0x00000200004d79f7 : sar edi, -1 ; ret
0x00000200004b6cc6 : sar edi, 0x32 ; ret
0x00000200004c042a : sar edi, 0x48 ; add esp, 0x28 ; ret
0x000002000042f776 : sar edi, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x000002000042c8f5 : sar edi, 0x48 ; add esp, 0x38 ; ret
0x000002000042ae9f : sar edi, 0x48 ; add esp, 0x48 ; ret
0x000002000051bed5 : sar edi, 0x48 ; add esp, 0x50 ; pop rbx ; ret
0x0000020000462bb8 : sar edi, 0x48 ; add esp, 0x58 ; ret
0x0000020000514f45 : sar edi, 0x48 ; add esp, 0x88 ; ret
0x000002000061741c : sar edi, 0x48 ; lea ecx, dword ptr [rbp + 0x40] ; call 0x200000c36c8
0x000002000076ecc1 : sar edi, 0x48 ; mov eax, dword ptr [rax + 0xd8] ; ret
0x000002000022b0ed : sar edi, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x2000022b0fe
0x000002000022b364 : sar edi, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x2000022b37e
0x000002000022f29f : sar edi, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x2000022f2b0
0x000002000022f518 : sar edi, 0x75 ; in eax, dx ; mov rax, rdx ; jmp 0x2000022f543
0x0000020000737c93 : sar edi, 0x75 ; out dx, al ; mov rax, rdx ; jmp 0x20000737ca4
0x00000200004858df : sar edi, 0x75 ; ret
0x00000200005306e5 : sar edi, 0xf ; mov edx, 0x8b480a2b ; ret
0x00000200006c3559 : sar edi, 0xf ; xchg eax, esp ; ret 0xff33
0x00000200005112f8 : sar edi, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003cc07f : sar edi, 1 ; add rsp, 0x28 ; ret
0x0000020000421d7f : sar edi, 1 ; add rsp, 0x40 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000041df95 : sar edi, 1 ; add rsp, 0x48 ; ret
0x000002000041ea26 : sar edi, 1 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000041e527 : sar edi, 1 ; add rsp, 0x60 ; pop rbx ; ret
0x000002000041b0f6 : sar edi, 1 ; add rsp, 0x68 ; ret
0x000002000041f11a : sar edi, 1 ; add rsp, 0xe8 ; ret
0x0000020000604aa2 : sar edi, 1 ; call rax
0x000002000039e511 : sar edi, 1 ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000210359 : sar edi, 1 ; push rax ; add rsp, 0x28 ; ret
0x00000200005c6ebd : sar edi, 1 ; ret
0x000002000061990a : sar edi, 1 ; xor eax, eax ; ret
0x00000200003fcbfa : sar edi, cl ; add rsp, 0x18 ; ret
0x0000020000400e21 : sar edi, cl ; add rsp, 0x50 ; pop rbx ; ret
0x0000020000400728 : sar edi, cl ; add rsp, 0x60 ; pop rbx ; ret
0x000002000059b5b7 : sar edi, cl ; call rax
0x0000020000596356 : sar edi, cl ; cmp al, 0 ; add byte ptr [rax], al ; ret
0x00000200004fd54e : sar edi, cl ; mov al, bl ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005dd50b : sar edi, cl ; mov rcx, qword ptr [rip - 0x2da8dc] ; call rax
0x000002000022ccce : sar edi, cl ; ret
0x0000020000181d5d : sar edx, 0x10 ; xor ecx, ecx ; call 0x2000009e037
0x0000020000058ee6 : sar esi, -1 ; dec dword ptr [rcx - 0x75] ; pop rsi ; adc dh, dh ; ret
0x000002000011eebe : sar esi, 0x33 ; ret 0xd18b
0x000002000045b762 : sar r15, -0x7c ; ror byte ptr [rdi], 0x84 ; stosd dword ptr [rdi], eax ; ret 0x14
0x0000020000604aa1 : sar r15, 1 ; call rax
0x00000200004ea4a8 : sar r15b, 0x48 ; add esp, 0x70 ; pop rbx ; ret
0x000002000062cedd : sar r15b, 0x90 ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000157595 : sar r15b, 0xc8 ; jmp 0x20000003851
0x000002000041ea25 : sar r15d, 1 ; add rsp, 0x50 ; pop rbx ; ret
0x000002000059b5b6 : sar r15d, cl ; call rax
0x0000020000546297 : sar r8, 7 ; mov al, byte ptr [r8 + rax] ; ret
0x00000200001d0326 : sar rax, 0x10 ; add rax, rcx ; ret
0x0000020000129ee0 : sar rax, 0x10 ; add rsp, 0x28 ; ret
0x0000020000745f28 : sar rax, 0x10 ; ret
0x000002000013575a : sar rax, 1 ; dec rax ; ret
0x000002000040b48d : sar rax, 1 ; lea edx, dword ptr [rax + 1] ; mov eax, edx ; ret
0x0000020000135741 : sar rax, 1 ; ret
0x0000020000496ecd : sar rbx, 0xc ; call 0x200000b9057
0x0000020000745f7c : sar rcx, 0x10 ; mov rax, rcx ; ret
0x00000200006c3558 : sar rdi, 0xf ; xchg eax, esp ; ret 0xff33
0x000002000041e526 : sar rdi, 1 ; add rsp, 0x60 ; pop rbx ; ret
0x0000020000181d5c : sar rdx, 0x10 ; xor ecx, ecx ; call 0x2000009e038
0x0000020000218148 : sbb ah, al ; jrcxz 0x2000021817e ; ret 0xc531
0x0000020000217a14 : sbb ah, al ; ret 0x7d
0x00000200005107c4 : sbb ah, bh ; ret 0x8bff
0x00000200005211a2 : sbb ah, bl ; ret 0x40ff
0x0000020000081a4e : sbb ah, ch ; str word ptr [rax - 0x75] ; sbb esi, esi ; ret
0x00000200005462c9 : sbb al, 0 ; add byte ptr [rax], al ; ret
0x00000200001bef57 : sbb al, 0 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000012f767 : sbb al, 0 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000131421 : sbb al, 0 ; add rsp, 0x48 ; ret
0x00000200001b7da4 : sbb al, 0 ; call rax
0x000002000013252f : sbb al, 0 ; mov qword ptr [rdx], rax ; ret
0x000002000010c4d8 : sbb al, 0 ; ret
0x0000020000130dc3 : sbb al, 0 ; xor eax, eax ; ret
0x0000020000610cc0 : sbb al, 0x10 ; ret 0x48ff
0x00000200004ad661 : sbb al, 0x11 ; add byte ptr [rax - 0x73], cl ; adc r8b, r13b ; ret
0x0000020000498ab0 : sbb al, 0x12 ; add byte ptr [rbp - 0x75], al ; ret
0x00000200003daffc : sbb al, 0x19 ; add byte ptr [rax - 0x75], cl ; enter 0x69e8, -0x10 ; ret
0x00000200006b6b18 : sbb al, 0x1c ; ret 0xc7ff
0x0000020000490520 : sbb al, 0x20 ; ret
0x0000020000462a8b : sbb al, 0x24 ; add rsp, 8 ; ret
0x00000200005a52c0 : sbb al, 0x24 ; call 0x200001d146d
0x000002000014a8c6 : sbb al, 0x24 ; mov eax, dword ptr [rsp] ; add rsp, 8 ; ret
0x00000200004ccfdc : sbb al, 0x25 ; ret 0x85ff
0x000002000074bf40 : sbb al, 0x33 ; ret
0x0000020000465353 : sbb al, 0x3b ; ret
0x00000200003a6835 : sbb al, 0x3b ; ret 0x420f
0x00000200002119fe : sbb al, 0x3b ; ret 0x974
0x0000020000605727 : sbb al, 0x40 ; mov edx, ebx ; mov ebp, ebx ; call 0x20000231ce9
0x00000200005a125d : sbb al, 0x41 ; call rdx
0x000002000002c265 : sbb al, 0x41 ; mov eax, edx ; pop rbx ; ret
0x00000200000ff7b4 : sbb al, 0x41 ; xor eax, eax ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200005a15f0 : sbb al, 0x45 ; xor ecx, ecx ; call r10
0x0000020000540ec0 : sbb al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200003d42b7 : sbb al, 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x00000200001ba7ed : sbb al, 0x48 ; mov ecx, dword ptr [rbx + 0x38] ; call qword ptr [rax]
0x0000020000604a9c : sbb al, 0x48 ; mov ecx, dword ptr [rip - 0x2eb69c] ; call rax
0x0000020000128810 : sbb al, 0x48 ; mov ecx, edi ; call 0x20000104afa
0x00000200001f8b00 : sbb al, 0x49 ; add eax, 0x1c ; jmp 0x200001f8b4a
0x00000200001f92bc : sbb al, 0x49 ; add eax, 0x1c ; jmp 0x200001f9306
0x00000200007329e1 : sbb al, 0x49 ; mov edx, ebp ; mov rcx, r14 ; call 0x2000013ec35
0x000002000041d658 : sbb al, 0x67 ; ret 0x8bff
0x00000200004c37d4 : sbb al, 0x70 ; ret 0xe9ff
0x00000200001e304a : sbb al, 0x72 ; in al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200002119f9 : sbb al, 0x76 ; sbb eax, 0x3b1c438b ; ret 0x974
0x000002000041b280 : sbb al, 0x78 ; ret 0xb0ff
0x00000200001b6c22 : sbb al, 0x81 ; call rsi
0x000002000067d0a6 : sbb al, 0x83 ; call qword ptr [rax]
0x00000200006b002b : sbb al, 0x84 ; ret 0xff
0x0000020000205983 : sbb al, 0x88 ; add rsp, 0x28 ; ret
0x00000200004f8f5b : sbb al, 0x89 ; and byte ptr [r8 - 0x75], cl ; ret
0x000002000014f57b : sbb al, 0x8b ; jmp r11
0x0000020000438477 : sbb al, 0x8b ; ret
0x000002000068be8c : sbb al, 0x8b ; ret 0x25
0x0000020000475abc : sbb al, 0x8b ; ret 0xc148
0x00000200005d345d : sbb al, 0x8b ; ret 0xe8c1
0x00000200004b4517 : sbb al, 0x8b ; ror dword ptr [rax - 0x75], -0x7c ; ret 0xf2c0
0x0000020000529aca : sbb al, 0x8b ; sbb byte ptr [r11], r15b ; ret
0x0000020000467d75 : sbb al, 0x8d ; add dword ptr [r9 - 0x77], eax ; add byte ptr [rcx + 0x3b], al ; ret
0x00000200006bff90 : sbb al, 0x9a ; dec dword ptr [rax - 0x75] ; ret
0x0000020000757433 : sbb al, 0xb8 ; dec dword ptr [rcx + rcx*4 + 0x35] ; ret
0x00000200006d7360 : sbb al, 0xb8 ; ret 0x89ff
0x000002000051d1d2 : sbb al, 0xc0 ; add rsp, 0x28 ; ret
0x00000200005a9c16 : sbb al, 0xc2 ; jmp 0x200005a9c1a
0x00000200006c02e9 : sbb al, 0xc3 ; bts dword ptr [r8 + 0x20], 0x1a ; ret
0x00000200004f2408 : sbb al, 0xc4 ; inc dword ptr [rbp - 0x838b40] ; ret
0x0000020000533860 : sbb al, 0xcb ; sar bh, 0x8b ; ret
0x000002000058fb9c : sbb al, 0xd7 ; ret 0x84ff
0x00000200006b071c : sbb al, 0xda ; add al, byte ptr [rax] ; ret
0x00000200003f7ad4 : sbb al, 0xe8 ; jb 0x200003f7b56 ; ret
0x00000200003f7ad3 : sbb al, 0xe8 ; jb 0x200003f7b57 ; ret
0x00000200005de04c : sbb al, 0xe8 ; ret 0xeb0d
0x00000200001f8b04 : sbb al, 0xeb ; cmp cl, byte ptr [rax - 0x7d] ; ret
0x00000200001d00bb : sbb al, 0xec ; dec dword ptr [rax - 0x7d] ; ret
0x000002000043099b : sbb al, 0xed ; inc dword ptr [rcx - 0x76] ; imul al ; ret 0xc1b6
0x00000200000cb073 : sbb al, 0xf ; mov bh, 0x46 ; add bh, bh ; ret 0x348
0x00000200005a8f2d : sbb al, 0xf ; mov edx, 0xd288e225 ; call qword ptr [rbx]
0x000002000000c361 : sbb al, 0xf6 ; ret
0x00000200005e7013 : sbb al, 0xf6 ; ret 0x7401
0x00000200004d1f0f : sbb al, 0xf9 ; dec dword ptr [rax - 0x75] ; je 0x200004d1f43 ; js 0x200004d1eac ; ret
0x000002000006c15c : sbb al, 0xff ; ret
0x000002000007fc76 : sbb al, 0xff ; ret 0x5489
0x00000200001f6425 : sbb al, 5 ; add byte ptr [rax + rax - 0x3fcc3d00], ch ; ret
0x000002000057ab40 : sbb al, al ; ret 0x90ff
0x0000020000162f77 : sbb al, bpl ; ret 0xfe09
0x000002000004de1d : sbb al, byte ptr [r9] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000475f1f : sbb al, byte ptr [r9] ; mov rcx, rdi ; call 0x2000009a489
0x00000200000af7d3 : sbb al, byte ptr [rax + rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3345
0x000002000072ba06 : sbb al, byte ptr [rax] ; add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000002000051cc8a : sbb al, byte ptr [rax] ; add al, ch ; push rdx ; ret 0x23
0x000002000005064a : sbb al, byte ptr [rax] ; add bl, ch ; ret 0xdb8
0x000002000057ef96 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7421bbf1], al ; ret
0x00000200004fe359 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7427bbf1], al ; ret
0x000002000013820e : sbb al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200005965d2 : sbb al, byte ptr [rax] ; add eax, 0xe9d88b00 ; in eax, dx ; ret 0xfff7
0x0000020000132079 : sbb al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003b1258 : sbb al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000002000012efab : sbb al, byte ptr [rax] ; add rsp, 0x40 ; pop rbp ; ret
0x000002000013223d : sbb al, byte ptr [rax] ; add rsp, 0x78 ; ret
0x00000200003b64e9 : sbb al, byte ptr [rax] ; call 0x200003b6578
0x00000200005010ca : sbb al, byte ptr [rax] ; lea rcx, qword ptr [rbp - 0x20] ; mov edi, eax ; call r15
0x00000200003b1ab9 : sbb al, byte ptr [rax] ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000014f65a : sbb al, byte ptr [rax] ; mov dword ptr [rip + 0x1aa272], eax ; ret
0x00000200003b1cec : sbb al, byte ptr [rax] ; mov rcx, rax ; call r8
0x000002000014f660 : sbb al, byte ptr [rax] ; ret
0x00000200006c0031 : sbb al, byte ptr [rbx - 0x3e74fe1f] ; ret
0x000002000051d769 : sbb al, byte ptr [rbx] ; add byte ptr [rax - 1], cl ; ret
0x000002000014dc32 : sbb al, byte ptr [rbx] ; add byte ptr [rax], al ; jmp r11
0x0000020000203d04 : sbb al, byte ptr [rcx + 0x3b] ; ret
0x000002000006b01a : sbb al, byte ptr [rcx + 0x3b] ; sal byte ptr [rbx + 0xc], 0x8b ; ret 0xc2ff
0x00000200003b54fb : sbb al, byte ptr [rcx - 0x75] ; add byte ptr [rcx - 0x7b], al ; ret 0x4c75
0x00000200000032dd : sbb al, byte ptr [rcx - 0x75] ; ret
0x00000200000803c1 : sbb al, byte ptr [rcx - 0xa] ; ret
0x000002000004de1e : sbb al, byte ptr [rcx] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ca1f3 : sbb al, byte ptr [rcx] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005e555e : sbb al, byte ptr [rcx] ; mov al, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000475f20 : sbb al, byte ptr [rcx] ; mov rcx, rdi ; call 0x2000009a488
0x00000200001bfc8f : sbb al, byte ptr [rdi + rcx + 0x20] ; ret
0x0000020000015d22 : sbb al, byte ptr [rsi] ; mov qword ptr [rax + 8], rax ; mov qword ptr [rax], rax ; ret
0x000002000012efaa : sbb al, byte ptr ds:[rax] ; add rsp, 0x40 ; pop rbp ; ret
0x000002000044c6aa : sbb al, ch ; cmp al, 0x40 ; ret 0x49ff
0x00000200005ef13b : sbb al, ch ; jmp rax
0x00000200004ac8fe : sbb al, ch ; lodsb al, byte ptr [rsi] ; in al, dx ; ret
0x000002000004675b : sbb al, ch ; paddb mm7, mm7 ; push rsi ; ret
0x0000020000598f02 : sbb al, ch ; pop rax ; add eax, 0xe990ffb5 ; xchg eax, edx ; ret
0x00000200003ee926 : sbb al, ch ; pop rsp ; ret
0x000002000064c8f7 : sbb al, ch ; ret
0x000002000003e5c8 : sbb al, ch ; ret 0x820
0x00000200005a87c8 : sbb al, ch ; ret 0xb
0x00000200004c1dd8 : sbb al, ch ; ret 0xb552
0x0000020000162f78 : sbb al, ch ; ret 0xfe09
0x0000020000012eb8 : sbb al, dh ; cmpxchg qword ptr [rcx], rdx ; jne 0x20000012ebd ; ret
0x000002000003e4a4 : sbb al, dh ; sub eax, dword ptr [rax] ; ret
0x0000020000513364 : sbb al, dl ; ret 0x85ff
0x0000020000012eb7 : sbb al, sil ; cmpxchg qword ptr [rcx], rdx ; jne 0x20000012ebe ; ret
0x000002000003ea5b : sbb bh, bh ; je 0x2000003ea53 ; mov rax, r8 ; ret
0x00000200000ff096 : sbb bh, bh ; je 0x200000ff0a7 ; and dword ptr [rdx + 0x18], 0 ; ret
0x000002000046534e : sbb bh, bh ; ret
0x000002000010dfca : sbb bh, bh ; ret 0xd03b
0x00000200006d7ba8 : sbb bh, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x000002000012c3c0 : sbb bh, byte ptr [rbx] ; ret
0x00000200004977c2 : sbb bh, byte ptr [rdx] ; out 0xff, al ; xor edx, edx ; call 0x200000c2849
0x00000200006c02cd : sbb bl, al ; bts dword ptr [r8 + 0x20], 0x19 ; ret
0x00000200006d7634 : sbb bl, al ; ret 0x48ff
0x0000020000082c1e : sbb bl, al ; xor eax, eax ; ret
0x0000020000033d97 : sbb bl, ch ; out -0x10, eax ; xadd qword ptr [r10 + 0x20], rax ; ret
0x000002000044c96a : sbb bl, ch ; out 0x49, al ; lea eax, dword ptr [rax + 0x18] ; ret
0x0000020000058deb : sbb bl, ch ; ret
0x00000200000d9bd5 : sbb bl, ch ; ret 0xcccc
0x00000200001f8b0e : sbb bl, ch ; xor byte ptr [rax - 0x7d], cl ; ret
0x000002000041284f : sbb bl, dh ; movq qword ptr [r8], mm0 ; mov eax, edx ; ret
0x0000020000058dea : sbb bl, r13b ; ret
0x0000020000119a49 : sbb byte ptr [edi + ecx + 0x22], al ; ret
0x000002000052b0d4 : sbb byte ptr [r10], dil ; ret 0x470f
0x0000020000073d4e : sbb byte ptr [r10], r15b ; ret 0x3674
0x000002000066362a : sbb byte ptr [r10], sil ; ret 0xb60f
0x000002000002ed63 : sbb byte ptr [r11 + r9*4 + 0x53], cl ; sbb byte ptr [rcx + 0x3b], cl ; ret 0x2677
0x00000200000414d4 : sbb byte ptr [r11 + rcx*4 + 0x52], cl ; xor byte ptr [rbp + 0x3b], cl ; ret 0x894c
0x00000200000d8adc : sbb byte ptr [r11 - 0x38], cl ; xor qword ptr [rcx + 0x18], r9 ; ret
0x00000200004f7eef : sbb byte ptr [r11 - 0x74bb88bb], r9b ; ret 0x8a40
0x00000200005f1a6b : sbb byte ptr [r11], al ; ret
0x0000020000212e64 : sbb byte ptr [r11], al ; ret 0xc23b
0x0000020000534b99 : sbb byte ptr [r11], dil ; ret
0x000002000022635e : sbb byte ptr [r11], r12b ; ret
0x0000020000529acc : sbb byte ptr [r11], r15b ; ret
0x00000200005c5c20 : sbb byte ptr [r11], r15b ; ret 0x877
0x000002000012e910 : sbb byte ptr [r13 + 0x3b], cl ; ret
0x000002000008960e : sbb byte ptr [r13 - 0x10], sil ; mov al, 1 ; ret
0x00000200000a68c6 : sbb byte ptr [r13 - 0x73], r9b ; push rdi ; sbb byte ptr [rcx + 0x23], cl ; ret
0x00000200002291e4 : sbb byte ptr [r13 - 0x75], al ; ret
0x0000020000531326 : sbb byte ptr [r13 - 0x75], al ; ret 0x4466
0x0000020000074a22 : sbb byte ptr [r13 - 0x75], cl ; ret
0x00000200001bf360 : sbb byte ptr [r14 + 0x3b], spl ; ret 0x830f
0x0000020000031ea5 : sbb byte ptr [r15 + r9 + 0x22], r8b ; ret
0x00000200001dd790 : sbb byte ptr [r15 + r9 + 0x22], r8b ; ret 0xb948
0x00000200000f9c0e : sbb byte ptr [r15 + rcx + 0x22], al ; ret 0x854d
0x0000020000007e16 : sbb byte ptr [r15 + rcx + 0x22], r8b ; ret
0x00000200001db809 : sbb byte ptr [r15], cl ; mov dh, 0xc2 ; mov cr8, rax ; ret
0x0000020000649823 : sbb byte ptr [r15], cl ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x00000200000d8de1 : sbb byte ptr [r8 + 0x23], cl ; ret 0x3148
0x00000200000b36b8 : sbb byte ptr [r8 + 0x23], cl ; ret 0x8348
0x00000200000dea4b : sbb byte ptr [r8 + 0x23], r9b ; ret 0x8348
0x00000200000fb655 : sbb byte ptr [r8 + 0x2b], cl ; ret 0x8348
0x0000020000232ea6 : sbb byte ptr [r8 + 0x33], cl ; ror byte ptr [rdi], 1 ; mov dh, 5 ; ret 0x14c5
0x000002000018b7bd : sbb byte ptr [r8 + 0x39], cl ; or byte ptr [r15], cl ; test bh, bl ; ret
0x000002000000577b : sbb byte ptr [r8 + 0x3b], cl ; ret 0x850f
0x0000020000146921 : sbb byte ptr [r8 + 0xf], cl ; ret
0x00000200001e34f9 : sbb byte ptr [r8 + 1], cl ; ret
0x00000200001499c8 : sbb byte ptr [r8 + 2], dil ; ret
0x00000200003da9b2 : sbb byte ptr [r8 + 3], cl ; ret
0x00000200006816e0 : sbb byte ptr [r8 + 3], cl ; ret 0x33c3
0x0000020000421ce7 : sbb byte ptr [r8 + 3], cl ; ret 0x3b48
0x00000200004c1eab : sbb byte ptr [r8 + 3], r9b ; ret
0x000002000002152b : sbb byte ptr [r8 - 0x3f], r9b ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x00000200000f9861 : sbb byte ptr [r8 - 0x75], cl ; push rcx ; or byte ptr [rax + 0x3b], cl ; ret 0xf48
0x00000200003e772d : sbb byte ptr [r8 - 0x75], cl ; ret 0x8945
0x0000020000745395 : sbb byte ptr [r8 - 0x75], cl ; ret 0x8b48
0x000002000003bf31 : sbb byte ptr [r8 - 0x75], cl ; ret 0xc148
0x000002000003904c : sbb byte ptr [r8 - 0x75], cl ; ret 0xf44
0x0000020000405b3a : sbb byte ptr [r8 - 0x75], r9b ; salc ; mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200001ac4c2 : sbb byte ptr [r8 - 0x77], cl ; adc byte ptr [rcx + r8 - 5], sil ; ret
0x00000200001d8da8 : sbb byte ptr [r8 - 0x77], cl ; and byte ptr [r13 + 0x3b], al ; ret 0x675
0x00000200000f83e4 : sbb byte ptr [r8 - 0x7b], cl ; leave ; jne 0x200000f83e6 ; ret
0x000002000000eb6a : sbb byte ptr [r8 - 0x7b], cl ; ret 0x775
0x000002000008500e : sbb byte ptr [r8 - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; push rbp ; ret
0x00000200000a160b : sbb byte ptr [r8 - 0x7b], r9b ; ret
0x00000200000e7978 : sbb byte ptr [r8 - 0x7d], cl ; call 0x1ffc30ff78a
0x00000200001def9a : sbb byte ptr [r8 - 0x7d], cl ; ret
0x000002000050fffd : sbb byte ptr [r8 - 0x7d], cl ; ret 0x4803
0x00000200000947b2 : sbb byte ptr [r8 - 0x80], al ; call qword ptr [rcx]
0x00000200003f113f : sbb byte ptr [r8], r8b ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f16af : sbb byte ptr [r8], r8b ; add rsp, 0x28 ; ret
0x00000200003f141f : sbb byte ptr [r8], r8b ; ret
0x000002000000fff6 : sbb byte ptr [r9 + 0x23], cl ; ret
0x0000020000097554 : sbb byte ptr [r9 + 0x23], cl ; ret 0x3d48
0x0000020000221a8a : sbb byte ptr [r9 + 3], r8b ; ret
0x00000200001c54d4 : sbb byte ptr [r9 - 0x73], cl ; push rbx ; or al, ch ; ret
0x000002000042b3f1 : sbb byte ptr [r9 - 0x74b7e3ba], cl ; ret
0x00000200007627c8 : sbb byte ptr [r9 - 0x75], cl ; ret 0xc148
0x000002000022a9d7 : sbb byte ptr [r9 - 0x75], r8b ; ret 0x8b4c
0x0000020000043692 : sbb byte ptr [r9 - 0x75], r9b ; add byte ptr [rax + 0x33], cl ; ret 0x3348
0x0000020000619bcb : sbb byte ptr [r9 - 1], al ; ret 0x8944
0x00000200005cf3a8 : sbb byte ptr [r9], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000d8de2 : sbb byte ptr [rax + 0x23], cl ; ret 0x3148
0x00000200000af13e : sbb byte ptr [rax + 0x23], cl ; ret 0x8348
0x00000200000fb656 : sbb byte ptr [rax + 0x2b], cl ; ret 0x8348
0x00000200000b42bc : sbb byte ptr [rax + 0x33], cl ; ret
0x0000020000232ea7 : sbb byte ptr [rax + 0x33], cl ; ror byte ptr [rdi], 1 ; mov dh, 5 ; ret 0x14c5
0x000002000018b7be : sbb byte ptr [rax + 0x39], cl ; or byte ptr [r15], cl ; test bh, bl ; ret
0x000002000022eadd : sbb byte ptr [rax + 0x3b], cl ; ret 0x1373
0x000002000000577c : sbb byte ptr [rax + 0x3b], cl ; ret 0x850f
0x0000020000009b9c : sbb byte ptr [rax + 0x3b], cl ; ror byte ptr [rbx + rcx*4 - 0x40], 1 ; jne 0x20000009bc8 ; ret
0x00000200001f4721 : sbb byte ptr [rax + 0x41002428], dh ; add eax, edx ; jmp 0x200001f4735
0x000002000013b03d : sbb byte ptr [rax + 0x41057420], ch ; or dword ptr [rax], 0xffffffff ; ret
0x000002000057df2f : sbb byte ptr [rax + 0x48000000], 0x8b ; cmp dh, dh ; ret
0x000002000064c8f0 : sbb byte ptr [rax + 0x48000000], 0x8b ; sbb al, ch ; ret
0x000002000053fa03 : sbb byte ptr [rax + 0x63], cl ; ret 0x8348
0x0000020000467d33 : sbb byte ptr [rax + 0x6b], cl ; ret
0x0000020000766bf1 : sbb byte ptr [rax + 0x7b894cff], dl ; or byte ptr [rax - 0x7d], cl ; ret
0x0000020000146922 : sbb byte ptr [rax + 0xf], cl ; ret
0x00000200000ef55d : sbb byte ptr [rax + 1], bh ; ret
0x000002000008c31d : sbb byte ptr [rax + 1], cl ; push rsp ; ret
0x00000200001e34fa : sbb byte ptr [rax + 1], cl ; ret
0x000002000019fa22 : sbb byte ptr [rax + 2], 0 ; add bl, ch ; add ecx, dword ptr [rbp - 0x75] ; ret 0x8548
0x0000020000438fdd : sbb byte ptr [rax + 2], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x10], r9 ; ret
0x00000200001499c9 : sbb byte ptr [rax + 2], bh ; ret
0x000002000008b7f2 : sbb byte ptr [rax + 3], cl ; ret
0x00000200006816e1 : sbb byte ptr [rax + 3], cl ; ret 0x33c3
0x0000020000421ce8 : sbb byte ptr [rax + 3], cl ; ret 0x3b48
0x00000200007482be : sbb byte ptr [rax + 3], cl ; ret 0x8948
0x000002000022da9e : sbb byte ptr [rax + 3], cl ; ret 0xc183
0x00000200004c1d65 : sbb byte ptr [rax + 3], r9b ; ret
0x00000200006c3aac : sbb byte ptr [rax + rax], 0x48 ; add esp, 0x30 ; pop rbx ; ret
0x000002000073abf9 : sbb byte ptr [rax + rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000222275 : sbb byte ptr [rax + rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200005b79c0 : sbb byte ptr [rax + rax], dl ; ret
0x0000020000662f05 : sbb byte ptr [rax + rbp*8 + 0x44], dh ; xchg dword ptr [rcx + 0x2c], eax ; xor eax, eax ; ret
0x00000200005c4711 : sbb byte ptr [rax - 0x2c166f01], dh ; ret
0x000002000002152c : sbb byte ptr [rax - 0x3f], cl ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000013da4b : sbb byte ptr [rax - 0x75], cl ; adc byte ptr [r8 + 0x33], cl ; ret 0x3348
0x0000020000157b73 : sbb byte ptr [rax - 0x75], cl ; adc r8b, bpl ; ret
0x00000200001acf7a : sbb byte ptr [rax - 0x75], cl ; add eax, 0x1254f6 ; call rax
0x0000020000217a25 : sbb byte ptr [rax - 0x75], cl ; and spl, al ; ret 0x7d
0x0000020000121c82 : sbb byte ptr [rax - 0x75], cl ; jl 0x20000121cb3 ; sub byte ptr [rcx + 0x5e], al ; ret
0x0000020000110f53 : sbb byte ptr [rax - 0x75], cl ; push rbx ; sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x00000200000f9862 : sbb byte ptr [rax - 0x75], cl ; push rcx ; or byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000000ce73 : sbb byte ptr [rax - 0x75], cl ; ret
0x00000200000959cc : sbb byte ptr [rax - 0x75], cl ; ret 0x2348
0x0000020000110f57 : sbb byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000017788 : sbb byte ptr [rax - 0x75], cl ; ret 0x2b49
0x00000200003e772e : sbb byte ptr [rax - 0x75], cl ; ret 0x8945
0x0000020000203b73 : sbb byte ptr [rax - 0x75], cl ; ret 0x894d
0x00000200006d98e0 : sbb byte ptr [rax - 0x75], cl ; ret 0x8b48
0x000002000003bf32 : sbb byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200001fb6a4 : sbb byte ptr [rax - 0x75], cl ; ret 0xccc3
0x000002000003904d : sbb byte ptr [rax - 0x75], cl ; ret 0xf44
0x0000020000405b3b : sbb byte ptr [rax - 0x75], cl ; salc ; mov rcx, qword ptr [rcx + 8] ; call rax
0x00000200001349a7 : sbb byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call r14
0x00000200003ef0f9 : sbb byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x3b], cl ; ret
0x00000200001ac4c3 : sbb byte ptr [rax - 0x77], cl ; adc byte ptr [rcx + r8 - 5], sil ; ret
0x00000200001d8da9 : sbb byte ptr [rax - 0x77], cl ; and byte ptr [r13 + 0x3b], al ; ret 0x675
0x000002000019ac72 : sbb byte ptr [rax - 0x77], cl ; pop rbp ; clc ; jmp 0x200000e6f4d
0x00000200000855f2 : sbb byte ptr [rax - 0x7b], cl ; dec dword ptr [rdi] ; test ebp, ebp ; ret 0xf
0x00000200001b2b17 : sbb byte ptr [rax - 0x7b], cl ; leave ; je 0x200001b2b27 ; jmp rcx
0x00000200001b2b16 : sbb byte ptr [rax - 0x7b], cl ; leave ; je 0x200001b2b28 ; jmp rcx
0x00000200000f83e5 : sbb byte ptr [rax - 0x7b], cl ; leave ; jne 0x200000f83e5 ; ret
0x00000200000a160c : sbb byte ptr [rax - 0x7b], cl ; ret
0x000002000000eb6b : sbb byte ptr [rax - 0x7b], cl ; ret 0x775
0x000002000008500f : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; push rbp ; ret
0x00000200003c2a80 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov ecx, esi ; call rdx
0x00000200006bfef2 : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x17], cl ; ret
0x00000200000edbdf : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], 0x48 ; mov eax, ecx ; ret
0x00000200000c30ad : sbb byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0xc], cl ; ret
0x00000200000a7b6c : sbb byte ptr [rax - 0x7b], r9b ; ret
0x00000200000e7979 : sbb byte ptr [rax - 0x7d], cl ; call 0x1ffc30ff789
0x000002000052050e : sbb byte ptr [rax - 0x7d], cl ; jmp 0x1ffc4467a1e
0x000002000052050d : sbb byte ptr [rax - 0x7d], cl ; jmp 0x1ffc4467a1f
0x000002000011babb : sbb byte ptr [rax - 0x7d], cl ; ret
0x000002000050df41 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4414
0x000002000050fffe : sbb byte ptr [rax - 0x7d], cl ; ret 0x4803
0x0000020000066fe5 : sbb byte ptr [rax - 0x7d], cl ; ret 0x4d60
0x00000200005d6177 : sbb byte ptr [rax - 0x7d], cl ; ret 0xe81a
0x00000200003bab75 : sbb byte ptr [rax - 0x7d], cl ; ret 0xe820
0x00000200001f98af : sbb byte ptr [rax - 0x7d], cl ; ret 0xeb18
0x0000020000621872 : sbb byte ptr [rax - 0x7d], cl ; ret 0xeb20
0x00000200000947b3 : sbb byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x000002000009cd4a : sbb byte ptr [rax - 0xa], al ; mov dword ptr [rdx], 0x8b481275 ; ret
0x000002000068389c : sbb byte ptr [rax - 1], cl ; ret
0x00000200001380ee : sbb byte ptr [rax], ah ; mov eax, 0xffff ; ret
0x00000200001362e6 : sbb byte ptr [rax], ah ; or eax, 0xffffffff ; ret
0x00000200001f3273 : sbb byte ptr [rax], al ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x000002000005fab5 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000002000043f154 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x48 ; ret
0x0000020000148e5e : sbb byte ptr [rax], al ; add byte ptr [rax], al ; lea r9, qword ptr [r9 + rdx*4] ; jmp r9
0x00000200001a3f79 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rsp + 0x20], al ; call r8
0x00000200000daf94 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200004a34f8 : sbb byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x00000200001aad41 : sbb byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003f16b0 : sbb byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200006c2b52 : sbb byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000002000014a929 : sbb byte ptr [rax], al ; add rsp, 8 ; ret
0x00000200003bb211 : sbb byte ptr [rax], al ; call 0x20000020859
0x00000200004fa067 : sbb byte ptr [rax], al ; jne 0x200004fa070 ; ret
0x00000200004fa07b : sbb byte ptr [rax], al ; jne 0x200004fa084 ; ret
0x00000200003ec997 : sbb byte ptr [rax], al ; lea rcx, qword ptr [rbp - 0x38] ; call rax
0x00000200003e1efb : sbb byte ptr [rax], al ; mov al, 1 ; ret
0x00000200001aba62 : sbb byte ptr [rax], al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000014f731 : sbb byte ptr [rax], al ; mov qword ptr [rip + 0x18cf86], rdx ; ret
0x000002000017b737 : sbb byte ptr [rax], al ; mov rdx, rdi ; call 0x200000979d7
0x0000020000134513 : sbb byte ptr [rax], al ; movzx eax, word ptr [rax + rcx*2] ; and eax, 1 ; ret
0x00000200001344b3 : sbb byte ptr [rax], al ; movzx eax, word ptr [rax + rcx*2] ; and eax, 2 ; ret
0x0000020000134493 : sbb byte ptr [rax], al ; movzx eax, word ptr [rax + rcx*2] ; and eax, 4 ; ret
0x00000200001344f3 : sbb byte ptr [rax], al ; movzx eax, word ptr [rax + rcx*2] ; and eax, 8 ; ret
0x000002000003b4f6 : sbb byte ptr [rax], al ; ret
0x0000020000409336 : sbb byte ptr [rax], al ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004c38ac : sbb byte ptr [rax], dl ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000ea7c9
0x00000200001380ed : sbb byte ptr [rax], spl ; mov eax, 0xffff ; ret
0x00000200001362e5 : sbb byte ptr [rax], spl ; or eax, 0xffffffff ; ret
0x000002000003d78f : sbb byte ptr [rbp + 0x33], al ; ror byte ptr [rax - 0x75], cl ; ret
0x0000020000778314 : sbb byte ptr [rbp + 0x38e990ff], ah ; ret
0x00000200001e3822 : sbb byte ptr [rbp + 0x3b], al ; ret 0x2875
0x000002000012e911 : sbb byte ptr [rbp + 0x3b], cl ; ret
0x00000200000f61f4 : sbb byte ptr [rbp + 0x3b], cl ; ret 0xeb75
0x000002000077837d : sbb byte ptr [rbp + 0x73e990ff], ah ; ret 0xfffd
0x00000200002291e1 : sbb byte ptr [rbp + rcx*4 + 0x4b], cl ; sbb byte ptr [rbp - 0x75], al ; ret
0x00000200005f0ee6 : sbb byte ptr [rbp + rcx*4 + 5], cl ; ret 0xf568
0x000002000008960f : sbb byte ptr [rbp - 0x10], dh ; mov al, 1 ; ret
0x0000020000018cbd : sbb byte ptr [rbp - 0x15], dh ; add rsp, 0x28 ; ret
0x0000020000018cbc : sbb byte ptr [rbp - 0x15], sil ; add rsp, 0x28 ; ret
0x00000200006618ac : sbb byte ptr [rbp - 0x3b7cb701], ch ; jo 0x20000661919 ; ret
0x00000200004b5a02 : sbb byte ptr [rbp - 0x6f77f037], al ; ret 0x10
0x00000200004b5a01 : sbb byte ptr [rbp - 0x6f77f037], r8b ; ret 0x10
0x00000200000a68c7 : sbb byte ptr [rbp - 0x73], cl ; push rdi ; sbb byte ptr [rcx + 0x23], cl ; ret
0x00000200002291e5 : sbb byte ptr [rbp - 0x75], al ; ret
0x0000020000531327 : sbb byte ptr [rbp - 0x75], al ; ret 0x4466
0x000002000022e6c6 : sbb byte ptr [rbp - 0x75], al ; ret 0x8b48
0x000002000013dc79 : sbb byte ptr [rbp - 0x75], al ; ret 0x8d49
0x000002000072b6d4 : sbb byte ptr [rbp - 0x75], al ; ret 0xd0ba
0x000002000010c414 : sbb byte ptr [rbp - 0x75], cl ; jae 0x2000010c442 ; mov rsp, r11 ; pop rbp ; ret
0x000002000010ff83 : sbb byte ptr [rbp - 0x75], cl ; jae 0x2000010ffb9 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000501590 : sbb byte ptr [rbp - 0x75], cl ; jae 0x200005015be ; mov rsp, r11 ; pop rbp ; ret
0x000002000051e4d1 : sbb byte ptr [rbp - 0x75], cl ; jae 0x2000051e4ff ; mov rsp, r11 ; pop rbp ; ret
0x0000020000742c92 : sbb byte ptr [rbp - 0x75], cl ; jae 0x20000742cc0 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000753239 : sbb byte ptr [rbp - 0x75], cl ; jae 0x20000753267 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000074a23 : sbb byte ptr [rbp - 0x75], cl ; ret
0x000002000022e6c5 : sbb byte ptr [rbp - 0x75], r8b ; ret 0x8b48
0x000002000006c351 : sbb byte ptr [rbp - 0x7b], al ; sal byte ptr [rax + rcx + 0x48], 0x83 ; ret 0x4908
0x0000020000020d4b : sbb byte ptr [rbp - 0xf48b40], al ; ret
0x000002000041b851 : sbb byte ptr [rbx + 0x1f1481], cl ; add byte ptr [rbx], bh ; ret
0x000002000041b850 : sbb byte ptr [rbx + 0x1f1481], r9b ; add byte ptr [rbx], bh ; ret
0x00000200001a8f20 : sbb byte ptr [rbx + 0x207883], cl ; add byte ptr [rbx], bh ; ret 0x820f
0x00000200000818f7 : sbb byte ptr [rbx + 0x234d0c42], cl ; ret
0x000002000040ca4b : sbb byte ptr [rbx + 0x358d48f8], cl ; ret
0x0000020000466855 : sbb byte ptr [rbx + 0x5b5e5fc7], cl ; ret
0x00000200001bd6bc : sbb byte ptr [rbx + 0xf040c79], al ; xchg eax, esp ; ret 0xdfeb
0x000002000062c2ee : sbb byte ptr [rbx + 6], dh ; mov eax, 0xc0000095 ; ret
0x00000200001dec7a : sbb byte ptr [rbx + rcx*4 + 0x4c], cl ; ret
0x00000200000414d5 : sbb byte ptr [rbx + rcx*4 + 0x52], cl ; xor byte ptr [rbp + 0x3b], cl ; ret 0x894c
0x000002000002ed64 : sbb byte ptr [rbx + rcx*4 + 0x53], cl ; sbb byte ptr [rcx + 0x3b], cl ; ret 0x2677
0x00000200003ef718 : sbb byte ptr [rbx + rcx*4 + 0x74], cl ; and al, 0x20 ; ret
0x000002000049cf3c : sbb byte ptr [rbx + rcx*4 + 0x7c], cl ; and al, 0x30 ; pop r14 ; pop rsi ; ret
0x00000200001b1512 : sbb byte ptr [rbx + rcx*4 + 0xd], cl ; pop rsi ; movlps xmm0, qword ptr [rax] ; call r9
0x000002000019799d : sbb byte ptr [rbx + rcx*4 - 0x40], cl ; cmp rcx, rax ; jne 0x20000197995 ; ret
0x000002000069d4e8 : sbb byte ptr [rbx + rdi], al ; ret
0x000002000069d4e7 : sbb byte ptr [rbx + rdi], r8b ; ret
0x0000020000491f76 : sbb byte ptr [rbx - 0x1f3eb73f], cl ; and byte ptr [rax + 0xb], cl ; ret 0x3b48
0x00000200000d8add : sbb byte ptr [rbx - 0x38], cl ; xor qword ptr [rcx + 0x18], r9 ; ret
0x000002000077b397 : sbb byte ptr [rbx - 0x3f7ab701], 0xf ; xchg eax, esp ; ret 0x97e9
0x00000200004390ad : sbb byte ptr [rbx - 0x74b2afaf], cl ; adc dword ptr [rcx - 0x75], ecx ; ret 0xc2f6
0x00000200004f7ef0 : sbb byte ptr [rbx - 0x74bb88bb], cl ; ret 0x8a40
0x0000020000609b7d : sbb byte ptr [rbx - 0x7bf0f417], al ; ret 0
0x00000200001cee06 : sbb byte ptr [rbx - 0x9bfdb94], cl ; ret
0x00000200001cee05 : sbb byte ptr [rbx - 0x9bfdb94], r9b ; ret
0x0000020000475b96 : sbb byte ptr [rbx - 0xf8dfd06], al ; xor eax, eax ; ret
0x000002000022635f : sbb byte ptr [rbx], ah ; ret
0x00000200001f5c7a : sbb byte ptr [rbx], ah ; ret 0xc80b
0x000002000016533e : sbb byte ptr [rbx], ah ; ret 0xcae9
0x000002000042b44a : sbb byte ptr [rbx], ah ; ret 0xe0c1
0x0000020000064afa : sbb byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000002000023034f : sbb byte ptr [rbx], al ; ret
0x0000020000212e65 : sbb byte ptr [rbx], al ; ret 0xc23b
0x0000020000529acd : sbb byte ptr [rbx], bh ; ret
0x00000200002167e2 : sbb byte ptr [rbx], bh ; ret 0x3073
0x00000200005c5c21 : sbb byte ptr [rbx], bh ; ret 0x877
0x00000200006a8cbd : sbb byte ptr [rbx], bl ; add byte ptr [rax - 0x75], cl ; ret 0x8d48
0x0000020000004c3f : sbb byte ptr [rbx], ch ; ret 0x894c
0x0000020000546028 : sbb byte ptr [rbx], ch ; ret 0x8bc3
0x00000200004f796e : sbb byte ptr [rbx], cl ; add byte ptr [rax], al ; add edi, edi ; ret
0x000002000075c05a : sbb byte ptr [rbx], cl ; ret 0x81c3
0x0000020000754dfc : sbb byte ptr [rbx], dh ; leave ; call rax
0x000002000042b449 : sbb byte ptr [rbx], r12b ; ret 0xe0c1
0x00000200000e2f76 : sbb byte ptr [rcx + 0x200f443a], cl ; ret
0x000002000000fff7 : sbb byte ptr [rcx + 0x23], cl ; ret
0x0000020000097555 : sbb byte ptr [rcx + 0x23], cl ; ret 0x3d48
0x00000200000d3088 : sbb byte ptr [rcx + 0x3b], al ; ret
0x00000200005720af : sbb byte ptr [rcx + 0x3b], al ; ret 0x2075
0x000002000002ed68 : sbb byte ptr [rcx + 0x3b], cl ; ret 0x2677
0x0000020000515f16 : sbb byte ptr [rcx + 0x3b], cl ; ret 0x870f
0x00000200003a4a7e : sbb byte ptr [rcx + 0x65486], cl ; add byte ptr [rcx - 0x75], al ; ret 0xe8c1
0x000002000004fb31 : sbb byte ptr [rcx + 0xb], al ; ret 0x8948
0x0000020000221a8b : sbb byte ptr [rcx + 3], al ; ret
0x00000200001b54c8 : sbb byte ptr [rcx + 3], cl ; ret 0x4810
0x000002000022e92d : sbb byte ptr [rcx + 3], cl ; ret 0xc183
0x0000020000041259 : sbb byte ptr [rcx + rax], ah ; ret
0x000002000002c261 : sbb byte ptr [rcx + rcx*4 + 0x58], al ; sbb al, 0x41 ; mov eax, edx ; pop rbx ; ret
0x0000020000034459 : sbb byte ptr [rcx + rcx*4 + 0x59], al ; and bl, ch ; rol byte ptr [rcx - 0x75], 1 ; ret 0xe8d1
0x00000200005d7264 : sbb byte ptr [rcx - 0x166f004a], dl ; ret 0xf679
0x00000200003a1f72 : sbb byte ptr [rcx - 0x3f], cl ; out dx, al ; or al, 0x8b ; ret
0x00000200003aff83 : sbb byte ptr [rcx - 0x73], al ; push rax ; add eax, ebp ; ret
0x00000200001c54d5 : sbb byte ptr [rcx - 0x73], cl ; push rbx ; or al, ch ; ret
0x000002000042b3f2 : sbb byte ptr [rcx - 0x74b7e3ba], cl ; ret
0x00000200003bac74 : sbb byte ptr [rcx - 0x74bbcfa9], cl ; ret 0xf41
0x000002000007226f : sbb byte ptr [rcx - 0x75], al ; adc bh, dh ; ret 0xffc9
0x000002000000a4a4 : sbb byte ptr [rcx - 0x75], al ; jmp 0x2004dc32ef3
0x000002000000ab72 : sbb byte ptr [rcx - 0x75], al ; ret
0x00000200001a7ccc : sbb byte ptr [rcx - 0x75], al ; ret 0x8b41
0x00000200001a77f7 : sbb byte ptr [rcx - 0x75], al ; ret 0x8b48
0x000002000022ebde : sbb byte ptr [rcx - 0x75], al ; ret 0x8b49
0x000002000022a9d8 : sbb byte ptr [rcx - 0x75], al ; ret 0x8b4c
0x0000020000043693 : sbb byte ptr [rcx - 0x75], cl ; add byte ptr [rax + 0x33], cl ; ret 0x3348
0x0000020000767e8f : sbb byte ptr [rcx - 0x75], cl ; and byte ptr [r9 + 3], cl ; ret 0x3b48
0x0000020000466d0c : sbb byte ptr [rcx - 0x75], cl ; imul esp, dword ptr [rax], 0x49 ; mov esp, ebx ; pop rdi ; ret
0x000002000000e58b : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000000e5b9 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000012e63 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000012e91 ; mov rsp, r11 ; pop rdi ; ret
0x000002000001d737 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000001d765 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000485fa : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000048628 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f00f5 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000f0123 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f0d0b : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000f0d39 ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f1aae : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000f1adc ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f357c : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000f35aa ; mov rsp, r11 ; pop rdi ; ret
0x00000200000f5383 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200000f53b1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001250e3 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000125111 ; mov rsp, r11 ; pop rdi ; ret
0x000002000012afd8 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000012b006 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001328aa : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001328d8 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ae705 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001ae73b ; mov rsp, r11 ; pop rdi ; ret
0x00000200001af219 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001af247 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b04cc : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001b04fa ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b059e : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001b05cc ; mov rsp, r11 ; pop rdi ; ret
0x00000200001b2620 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001b264e ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ba624 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001ba652 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ba6ce : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001ba6fc ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ba750 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001ba77e ; mov rsp, r11 ; pop rdi ; ret
0x00000200001bb43f : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001bb46d ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e3901 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001e392f ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e3b50 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001e3b7e ; mov rsp, r11 ; pop rdi ; ret
0x00000200001e3ea8 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001e3ed6 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001ed684 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001ed6b2 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001f31bb : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001f31e9 ; mov rsp, r11 ; pop rdi ; ret
0x00000200001f6ec8 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200001f6ef6 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003c20b2 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200003c20e0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200003e031f : sbb byte ptr [rcx - 0x75], cl ; jae 0x200003e034d ; mov rsp, r11 ; pop rdi ; ret
0x00000200003e2606 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200003e2634 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000406342 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000406370 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000419f4d : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000419f7b ; mov rsp, r11 ; pop rdi ; ret
0x0000020000451290 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004512be ; mov rsp, r11 ; pop rdi ; ret
0x0000020000454dc0 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000454df6 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000465072 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004650a0 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000466e8a : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000466eb8 ; mov rsp, r11 ; pop rdi ; ret
0x000002000047e458 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000047e486 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004d6e3c : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004d6e6a ; mov rsp, r11 ; pop rdi ; ret
0x00000200004def92 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004defc0 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e05cf : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004e05fd ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e23c7 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004e23f5 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004e5a78 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004e5aa6 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004eb505 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004eb533 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ed825 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004ed853 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ee3d3 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004ee401 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004ef2fb : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004ef329 ; mov rsp, r11 ; pop rdi ; ret
0x00000200004f152d : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004f155b ; mov rsp, r11 ; pop rdi ; ret
0x00000200004fccff : sbb byte ptr [rcx - 0x75], cl ; jae 0x200004fcd2d ; mov rsp, r11 ; pop rdi ; ret
0x0000020000502ea9 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000502ed7 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005110ec : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000051111a ; mov rsp, r11 ; pop rdi ; ret
0x000002000051f9bc : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000051f9ea ; mov rsp, r11 ; pop rdi ; ret
0x0000020000520a09 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000520a37 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000528bd0 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000528bfe ; mov rsp, r11 ; pop rdi ; ret
0x000002000053ff94 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000053ffc2 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000540478 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005404a6 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000542501 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000054252f ; mov rsp, r11 ; pop rdi ; ret
0x00000200005e0764 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005e0792 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005f0b4d : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005f0b7b ; mov rsp, r11 ; pop rdi ; ret
0x00000200005f13fd : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005f142b ; mov rsp, r11 ; pop rdi ; ret
0x00000200005fb7a4 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005fb7d2 ; mov rsp, r11 ; pop rdi ; ret
0x00000200005fdaf6 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200005fdb24 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006025fa : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000602628 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000624169 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000624197 ; mov rsp, r11 ; pop rdi ; ret
0x000002000062af18 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000062af46 ; mov rsp, r11 ; pop rdi ; ret
0x000002000062fe42 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000062fe70 ; mov rsp, r11 ; pop rdi ; ret
0x000002000063242e : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000063245c ; mov rsp, r11 ; pop rdi ; ret
0x0000020000676748 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000676776 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000694ed1 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000694eff ; mov rsp, r11 ; pop rdi ; ret
0x0000020000694f68 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000694f96 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006969b3 : sbb byte ptr [rcx - 0x75], cl ; jae 0x200006969e1 ; mov rsp, r11 ; pop rdi ; ret
0x00000200006da58c : sbb byte ptr [rcx - 0x75], cl ; jae 0x200006da5ba ; mov rsp, r11 ; pop rdi ; ret
0x0000020000754b37 : sbb byte ptr [rcx - 0x75], cl ; jae 0x20000754b65 ; mov rsp, r11 ; pop rdi ; ret
0x000002000076d1b8 : sbb byte ptr [rcx - 0x75], cl ; jae 0x2000076d1e6 ; mov rsp, r11 ; pop rdi ; ret
0x0000020000008b88 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000008bb6 ; mov rsp, r11 ; pop rbp ; ret
0x00000200000ed4fa : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200000ed528 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000111758 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000111786 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000114839 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000114867 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001a74dd : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001a750b ; mov rsp, r11 ; pop rbp ; ret
0x00000200001b1f5c : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001b1f8a ; mov rsp, r11 ; pop rbp ; ret
0x00000200001c4863 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001c4891 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001d8d6d : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001d8d9b ; mov rsp, r11 ; pop rbp ; ret
0x00000200001eb649 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001eb677 ; mov rsp, r11 ; pop rbp ; ret
0x00000200001ed4ac : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001ed4da ; mov rsp, r11 ; pop rbp ; ret
0x00000200001edb60 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001edb8e ; mov rsp, r11 ; pop rbp ; ret
0x00000200001f071e : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200001f074c ; mov rsp, r11 ; pop rbp ; ret
0x00000200002061ea : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000206218 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000209fb1 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000209fdf ; mov rsp, r11 ; pop rbp ; ret
0x000002000020b702 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000020b730 ; mov rsp, r11 ; pop rbp ; ret
0x000002000020c23a : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000020c268 ; mov rsp, r11 ; pop rbp ; ret
0x000002000021124e : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000021127c ; mov rsp, r11 ; pop rbp ; ret
0x00000200003a371f : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200003a374d ; mov rsp, r11 ; pop rbp ; ret
0x00000200003a66ae : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200003a66dc ; mov rsp, r11 ; pop rbp ; ret
0x00000200003b970b : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200003b9739 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003d5a46 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200003d5a74 ; mov rsp, r11 ; pop rbp ; ret
0x00000200003e8cbe : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200003e8cec ; mov rsp, r11 ; pop rbp ; ret
0x000002000041e9aa : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000041e9d8 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004c3f85 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004c3fb3 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004d37b9 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004d37e7 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004edaf1 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004edb1f ; mov rsp, r11 ; pop rbp ; ret
0x00000200004edd73 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004edda1 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004ede67 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004ede95 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004f70d2 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004f7100 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004fd724 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004fd752 ; mov rsp, r11 ; pop rbp ; ret
0x00000200004fe36d : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200004fe39b ; mov rsp, r11 ; pop rbp ; ret
0x00000200005038f1 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000050391f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000504959 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000504987 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000509c3b : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000509c69 ; mov rsp, r11 ; pop rbp ; ret
0x000002000050b9d8 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000050ba0e ; mov rsp, r11 ; pop rbp ; ret
0x0000020000533ca9 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000533cd7 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005dd067 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005dd095 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005f6436 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005f6464 ; mov rsp, r11 ; pop rbp ; ret
0x00000200005fec71 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200005fec9f ; mov rsp, r11 ; pop rbp ; ret
0x0000020000601c42 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000601c78 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000607bc4 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000607bf2 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000608090 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x200006080be ; mov rsp, r11 ; pop rbp ; ret
0x000002000060915b : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000609191 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006164f4 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000616522 ; mov rsp, r11 ; pop rbp ; ret
0x00000200006165fc : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000061662a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000639b36 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000639b64 ; mov rsp, r11 ; pop rbp ; ret
0x000002000064dd52 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000064dd80 ; mov rsp, r11 ; pop rbp ; ret
0x000002000065174a : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000651778 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000658b6c : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000658b9a ; mov rsp, r11 ; pop rbp ; ret
0x0000020000668ed6 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000668f04 ; mov rsp, r11 ; pop rbp ; ret
0x000002000066bf2e : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000066bf64 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000675c79 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000675ca7 ; mov rsp, r11 ; pop rbp ; ret
0x000002000067b7fe : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000067b82c ; mov rsp, r11 ; pop rbp ; ret
0x000002000067f417 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000067f44d ; mov rsp, r11 ; pop rbp ; ret
0x000002000068def9 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000068df27 ; mov rsp, r11 ; pop rbp ; ret
0x000002000069cad9 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000069cb07 ; mov rsp, r11 ; pop rbp ; ret
0x000002000074a4bb : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000074a4e9 ; mov rsp, r11 ; pop rbp ; ret
0x000002000074a967 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000074a995 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000761506 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000761534 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000762bb5 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000762be3 ; mov rsp, r11 ; pop rbp ; ret
0x000002000076c21c : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000076c24a ; mov rsp, r11 ; pop rbp ; ret
0x000002000076c603 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000076c631 ; mov rsp, r11 ; pop rbp ; ret
0x000002000077faa3 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x2000077fad1 ; mov rsp, r11 ; pop rbp ; ret
0x0000020000782b51 : sbb byte ptr [rcx - 0x75], cl ; jnp 0x20000782b87 ; mov rsp, r11 ; pop rbp ; ret
0x000002000002e294 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000002e2fd ; ret
0x00000200000df4c6 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200000df52f ; ret
0x00000200000e1754 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200000e17bd ; ret
0x00000200000f2589 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f25f2 ; ret
0x00000200001053a0 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000105409 ; ret
0x0000020000106ca1 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000106d0a ; ret
0x000002000010bdc9 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010be30 ; ret
0x0000020000110c0a : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000110c71 ; ret
0x0000020000114a86 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000114aed ; ret
0x0000020000116e89 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000116ef0 ; ret
0x000002000012a3c6 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012a42f ; ret
0x000002000013072c : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000130793 ; ret
0x00000200001ab3f1 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ab45a ; ret
0x00000200001ad3de : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ad447 ; ret
0x00000200001ae3d9 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ae442 ; ret
0x00000200001b0326 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b038f ; ret
0x00000200001ba7c1 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ba82a ; ret
0x00000200001bd0f4 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bd15b ; ret
0x00000200001d2cf9 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d2d60 ; ret
0x00000200001e0d98 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e0dff ; ret
0x00000200001e0eb4 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e0f1b ; ret
0x00000200001e3141 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e31a8 ; ret
0x00000200001f17f8 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001f185f ; ret
0x00000200001fac6b : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001facd4 ; ret
0x00000200001fad98 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fae01 ; ret
0x00000200001fae44 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200001faead ; ret
0x0000020000211446 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200002114af ; ret
0x000002000021cf87 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000021cff0 ; ret
0x000002000039d597 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039d5fe ; ret
0x00000200003ab414 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ab47d ; ret
0x00000200003b61c1 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b622a ; ret
0x00000200003cb6c0 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003cb727 ; ret
0x00000200003fea71 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200003feada ; ret
0x000002000041d950 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041d9b7 ; ret
0x000002000041d950 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041d9bb ; ret
0x00000200004425f7 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000442660 ; ret
0x000002000044d4b0 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044d519 ; ret
0x000002000045e52d : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000045e596 ; ret
0x0000020000467500 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000467569 ; ret
0x00000200004d86e3 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d874a ; ret
0x00000200004d8fcd : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d9035 ; ret
0x00000200004deb2b : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004deb94 ; ret
0x00000200004e1800 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e1869 ; ret
0x00000200004e45ca : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e4633 ; ret
0x00000200004ec992 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ec9f9 ; ret
0x00000200004f102c : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f1095 ; ret
0x00000200004f505f : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f50c6 ; ret
0x00000200004fd482 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fd4e9 ; ret
0x00000200004ff2e9 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ff350 ; ret
0x0000020000503824 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050388d ; ret
0x0000020000507b93 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000507bfc ; ret
0x000002000050d0b2 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050d11b ; ret
0x000002000051f7d1 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051f83a ; ret
0x0000020000527076 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005270df ; ret
0x000002000053a579 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053a5e0 ; ret
0x000002000053e962 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053e9c9 ; ret
0x000002000053ec4b : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053ecb2 ; ret
0x0000020000545a8e : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000545af7 ; ret
0x00000200005daaee : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005dab57 ; ret
0x00000200005f0458 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f04bf ; ret
0x000002000060bc99 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060bd02 ; ret
0x000002000061381c : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000613883 ; ret
0x000002000061397f : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006139e6 ; ret
0x000002000062efb3 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062f01a ; ret
0x00000200006381aa : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000638211 ; ret
0x00000200006384f2 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000638559 ; ret
0x000002000063932a : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000639391 ; ret
0x0000020000639412 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000639479 ; ret
0x000002000063c6e9 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063c750 ; ret
0x000002000064df46 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064dfad ; ret
0x000002000065163c : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006516a5 ; ret
0x00000200006557ef : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000655856 ; ret
0x000002000065ee4a : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065eeb1 ; ret
0x00000200006628e1 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000662948 ; ret
0x0000020000670a37 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000670aa0 ; ret
0x000002000068fa5f : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068fac6 ; ret
0x000002000069043e : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200006904a5 ; ret
0x00000200007473bb : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000747422 ; ret
0x000002000075070b : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000750772 ; ret
0x0000020000755061 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x200007550c8 ; ret
0x0000020000757c71 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000757cd8 ; ret
0x0000020000758dfa : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x20000758e61 ; ret
0x000002000075c0c6 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000075c12d ; ret
0x000002000076ecb6 : sbb byte ptr [rcx - 0x75], cl ; jrcxz 0x2000076ed1d ; ret
0x00000200000f71a1 : sbb byte ptr [rcx - 0x75], cl ; ret
0x00000200003c5512 : sbb byte ptr [rcx - 0x75], cl ; ret 0x2b48
0x00000200004c0e28 : sbb byte ptr [rcx - 0x75], cl ; ret 0x8941
0x0000020000092397 : sbb byte ptr [rcx - 0x75], cl ; ret 0x8b49
0x00000200007627c9 : sbb byte ptr [rcx - 0x75], cl ; ret 0xc148
0x000002000007226e : sbb byte ptr [rcx - 0x75], r8b ; adc bh, dh ; ret 0xffc9
0x0000020000052c9d : sbb byte ptr [rcx - 0x76], al ; ret 0x8b48
0x0000020000450ea1 : sbb byte ptr [rcx - 0x77], al ; add al, 0xf7 ; ret
0x0000020000669340 : sbb byte ptr [rcx - 0x77], cl ; adc byte ptr [rdi + r9 - 0x49], r8b ; ret 0x8b48
0x0000020000620119 : sbb byte ptr [rcx - 0x77], cl ; add dword ptr [rax - 0x75], ecx ; ret 0x49f0
0x000002000066933f : sbb byte ptr [rcx - 0x77], r9b ; adc byte ptr [rdi + r9 - 0x49], r8b ; ret 0x8b48
0x00000200001395da : sbb byte ptr [rcx - 0x78], al ; add ecx, dword ptr [rcx - 1] ; ret
0x000002000062c44e : sbb byte ptr [rcx - 0x7d], cl ; add ch, byte ptr [rax] ; ret
0x00000200001f8b0a : sbb byte ptr [rcx - 0x7d], cl ; rcr byte ptr [rax], 0xeb ; xor byte ptr [rax - 0x7d], cl ; ret
0x000002000022b3d6 : sbb byte ptr [rcx - 0x7d], cl ; ret
0x00000200001c4998 : sbb byte ptr [rcx - 0x7d], cl ; ret 0x4804
0x000002000048f180 : sbb byte ptr [rcx - 0x7f], al ; ret 0x1000
0x00000200003d19e1 : sbb byte ptr [rcx - 1], al ; ret
0x00000200005172b7 : sbb byte ptr [rcx - 1], al ; ret 0x8349
0x0000020000619bcc : sbb byte ptr [rcx - 1], al ; ret 0x8944
0x00000200005cf3a9 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000687455 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000000ef5e : sbb byte ptr [rdi + r9 + 0x22], r8b ; ret
0x0000020000007e17 : sbb byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200000f9c0f : sbb byte ptr [rdi + rcx + 0x22], al ; ret 0x854d
0x00000200001dd791 : sbb byte ptr [rdi + rcx + 0x22], al ; ret 0xb948
0x000002000044099f : sbb byte ptr [rdi + rcx - 0x49], al ; push rdi ; add al, byte ptr [rcx - 0x7d] ; ret 0x4503
0x000002000019e9d6 : sbb byte ptr [rdi - 0x74b7000b], 5 ; ret
0x00000200006cd6e8 : sbb byte ptr [rdi - 1], cl ; dec dword ptr [rax - 0x75] ; ret
0x00000200000b34cf : sbb byte ptr [rdi], bh ; jb 0x200000b34e2 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000b7066 : sbb byte ptr [rdi], bh ; jb 0x200000b7079 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000654893 : sbb byte ptr [rdi], cl ; mov dh, 0x41 ; add dword ptr [rbx], ebp ; ret 0x8b44
0x00000200001db80a : sbb byte ptr [rdi], cl ; mov dh, 0xc2 ; mov cr8, rax ; ret
0x00000200004b5a27 : sbb byte ptr [rdi], cl ; mov edx, 0x820f1ce1 ; nop ; ret 0x10
0x00000200004b5a1a : sbb byte ptr [rdi], cl ; mov edx, 0x820f1de1 ; nop ; ret 0x10
0x00000200004b5a0d : sbb byte ptr [rdi], cl ; mov edx, 0x820f1ee1 ; nop ; ret 0x10
0x000002000018ac4d : sbb byte ptr [rdi], cl ; ret 0xcce9
0x0000020000649824 : sbb byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x3b41
0x00000200000ee5c9 : sbb byte ptr [rdi], cl ; test dword ptr [rcx + rbx*8 - 0x7cb7fff6], ebp ; ret
0x00000200003c3675 : sbb byte ptr [rdi], cl ; test dword ptr [rcx - 0xa000000], ebp ; ret
0x000002000057baba : sbb byte ptr [rdi], cl ; test dword ptr [rdi - 0x7a0009fd], ecx ; ret 0x840f
0x00000200001a08b7 : sbb byte ptr [rdi], cl ; test dword ptr [rip - 0x160007a1], ecx ; ret
0x0000020000654892 : sbb byte ptr [rdi], r9b ; mov dh, 0x41 ; add dword ptr [rbx], ebp ; ret 0x8b44
0x00000200004b5a26 : sbb byte ptr [rdi], r9b ; mov edx, 0x820f1ce1 ; nop ; ret 0x10
0x00000200004b5a19 : sbb byte ptr [rdi], r9b ; mov edx, 0x820f1de1 ; nop ; ret 0x10
0x00000200004b5a0c : sbb byte ptr [rdi], r9b ; mov edx, 0x820f1ee1 ; nop ; ret 0x10
0x00000200001a08b6 : sbb byte ptr [rdi], r9b ; test dword ptr [rip - 0x160007a1], ecx ; ret
0x00000200003a6830 : sbb byte ptr [rdx + 3], al ; push rsp ; fstp dword ptr [rbx + rdi] ; ret 0x420f
0x0000020000196066 : sbb byte ptr [rdx - 0x17], dh ; ret 0xf3a5
0x0000020000516fa7 : sbb byte ptr [rdx - 0x21b994f3], cl ; call rbx
0x000002000005381f : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x0000020000073d4f : sbb byte ptr [rdx], bh ; ret 0x3674
0x000002000052b0d5 : sbb byte ptr [rdx], bh ; ret 0x470f
0x00000200005305af : sbb byte ptr [rdx], cl ; add byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x000002000066362b : sbb byte ptr [rdx], dh ; ret 0xb60f
0x00000200000bff2e : sbb byte ptr [rip + 0x518b4100], cl ; or byte ptr [rbx], bh ; ret 0x830f
0x00000200001d8f7b : sbb byte ptr [rip - 0x7cb80000], al ; ret
0x000002000042b3aa : sbb byte ptr [rsi + 0x23], ah ; ret 0x3166
0x000002000042b3a9 : sbb byte ptr [rsi + 0x23], r12b ; ret 0x3166
0x00000200001bf361 : sbb byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x0000020000530ee0 : sbb byte ptr [rsi + rdx - 0x75], dh ; ret 0xd8f7
0x000002000020348c : sbb byte ptr [rsi - 0x77], ah ; add ecx, dword ptr [rax - 0x7d] ; ret
0x00000200001257d8 : sbb byte ptr [rsi - 0x77], ah ; or eax, 0x1dd658 ; ret
0x0000020000219fc5 : sbb byte ptr [rsi - 0x7d], ah ; ret
0x00000200000596ff : sbb byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x0000020000196065 : sbb byte ptr fs:[rdx - 0x17], dh ; ret 0xf3a5
0x00000200005ae9c2 : sbb ch, ah ; inc dword ptr [rbx - 0x7cf0f008] ; ret
0x00000200001387ba : sbb ch, bl ; adc ecx, dword ptr [rcx - 1] ; ret
0x00000200004230ec : sbb ch, bl ; ret 0xdbb
0x000002000059b360 : sbb ch, byte ptr [rax] ; jmp 0x1ffffdcf56c
0x0000020000760af2 : sbb ch, byte ptr [rbx] ; ret
0x0000020000692554 : sbb ch, byte ptr [rdx + 0xfc085ff] ; xchg eax, esp ; ret
0x0000020000603bc4 : sbb cl, ah ; ret 0x33ff
0x0000020000443354 : sbb cl, ah ; ret 0x48ff
0x00000200004f6662 : sbb cl, bl ; ret
0x0000020000658923 : sbb cl, byte ptr [rax + 0x2b] ; ret 0x894c
0x00000200002213fb : sbb cl, byte ptr [rax + 0x69] ; ret 0xe100
0x00000200001f77e9 : sbb cl, byte ptr [rax - 0x73] ; add qword ptr [rax - 0x75], rcx ; ret 0x49f0
0x0000020000434a57 : sbb cl, byte ptr [rax - 0x75] ; enter 0x58e8, 0x61 ; ret 0x48ff
0x00000200004a760c : sbb cl, byte ptr [rax - 0x75] ; fiadd dword ptr [rcx - 0x75] ; ret
0x000002000049ca3f : sbb cl, byte ptr [rax - 0x75] ; or byte ptr [rcx + 0x23], cl ; ret 0x3b4c
0x000002000000f6d5 : sbb cl, byte ptr [rax - 0x75] ; ret
0x00000200000f510c : sbb cl, byte ptr [rax - 0x75] ; ret 0x2b49
0x00000200001c0f7b : sbb cl, byte ptr [rax - 0x7d] ; ret 0x4908
0x00000200006213e5 : sbb cl, byte ptr [rax - 1] ; ret
0x0000020000168652 : sbb cl, byte ptr [rax - 1] ; ret 0x3349
0x0000020000058d6f : sbb cl, byte ptr [rax - 9] ; ret
0x00000200003ae9f6 : sbb cl, byte ptr [rbp + 0xa] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001088cf : sbb cl, byte ptr [rbx + 0x9090] ; add dh, dh ; ret 0x7502
0x00000200005c3779 : sbb cl, byte ptr [rcx + 3] ; ret
0x00000200000b05f3 : sbb cl, byte ptr [rcx + 3] ; ror dword ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200005e1832 : sbb cl, byte ptr [rcx + rcx*4 + 0x7c] ; and al, 0x20 ; mov r8d, ebx ; call rax
0x0000020000033a4b : sbb cl, byte ptr [rcx - 0x75] ; ret 0x8348
0x0000020000159f19 : sbb cl, byte ptr [rcx - 0x7d] ; ret 0x4804
0x0000020000136a92 : sbb cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x0000020000188ff7 : sbb cl, byte ptr [rdi] ; xchg eax, edx ; ret 0xf640
0x000002000010a376 : sbb cl, byte ptr [rdx + 6] ; add byte ptr [rax + 1], bh ; ret
0x000002000057da34 : sbb cl, ch ; ret
0x000002000015e2ff : sbb cl, ch ; ret 0xec6a
0x0000020000160c41 : sbb cl, ch ; ret 0xecae
0x000002000019e70c : sbb cl, ch ; ret 0xf863
0x000002000005ba3b : sbb cl, ch ; ret 0xfff7
0x00000200006d9684 : sbb dh, ah ; ret
0x000002000001fda2 : sbb dh, bh ; adc al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000133463 : sbb dh, byte ptr [rbp + 4] ; mov rax, rcx ; ret
0x00000200003a026a : sbb dh, byte ptr [rbp - 0x7bf0000d] ; ret
0x000002000051e3bc : sbb dh, byte ptr [rbp - 0xe] ; lock inc dword ptr [rax + 0x10] ; ret
0x0000020000074be2 : sbb dh, byte ptr [rdx + 0x12] ; mov eax, edx ; ret
0x0000020000049887 : sbb dh, dh ; ret
0x00000200004b80e0 : sbb dh, dh ; ret 0x7402
0x000002000000ac62 : sbb dh, dh ; ret 0x7502
0x000002000005ad8a : sbb dh, dh ; ret 0x7504
0x0000020000199bdc : sbb dh, dh ; ret 0x7510
0x0000020000545def : sbb dh, dh ; ret 0xf02
0x000002000006a034 : sbb dl, 5 ; add byte ptr [rax], al ; cmp al, 2 ; je 0x2000006a047 ; ret
0x00000200003e39e4 : sbb dl, ah ; leave ; dec dword ptr [rbx + 0x79c085d8] ; ret 0x73e9
0x000002000042aacc : sbb dl, bl ; ret
0x00000200004c35c3 : sbb dl, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; iretd ; call 0x200000ea7c9
0x000002000040700a : sbb dl, byte ptr [rdi] ; ret
0x00000200003d49d3 : sbb dword ptr [eax], eax ; inc edx ; jmp 0x200003d49c0
0x000002000003ffb1 : sbb dword ptr [r9], eax ; jne 0x2000003ffc4 ; ret
0x000002000065e745 : sbb dword ptr [rax + 0x10], edx ; call 0x2000020a9d5
0x00000200001a13e0 : sbb dword ptr [rax + 0x3b], ecx ; ret
0x000002000077f1d0 : sbb dword ptr [rax + 0x3b], ecx ; ret 0x147d
0x00000200004bb379 : sbb dword ptr [rax + 0x3b], ecx ; ret 0x377
0x0000020000038446 : sbb dword ptr [rax + 0x3b], ecx ; ret 0x9f76
0x00000200000b3870 : sbb dword ptr [rax + 0x3b], ecx ; ret 0xbd76
0x0000020000166e0c : sbb dword ptr [rax + 0x8000000], 0x48 ; inc edx ; jmp 0x20000166dbb
0x00000200005c74f5 : sbb dword ptr [rax + rsi*8 - 1], eax ; mov al, 1 ; ret
0x00000200006cb6c3 : sbb dword ptr [rax - 0x3b7cb701], 0x28 ; ret
0x000002000000540a : sbb dword ptr [rax - 0x3f], ecx ; call qword ptr [rax]
0x00000200001d3142 : sbb dword ptr [rax - 0x3f], ecx ; sti ; adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000073344 : sbb dword ptr [rax - 0x73], ecx ; add eax, 0xdeb14 ; ret
0x000002000049192e : sbb dword ptr [rax - 0x75], ecx ; clc ; jmp 0x200004918fb
0x0000020000117db6 : sbb dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r10d ; ret
0x0000020000020003 : sbb dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; mov eax, r9d ; ret
0x000002000001707f : sbb dword ptr [rax - 0x75], ecx ; pop rsp ; and al, 8 ; ret
0x0000020000082d9a : sbb dword ptr [rax - 0x75], ecx ; ret
0x000002000013cecc : sbb dword ptr [rax - 0x75], ecx ; ret 0xc148
0x00000200000f8aba : sbb dword ptr [rax - 0x7d], ecx ; ret 0x4102
0x00000200000794d6 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x49f0
0x000002000009c672 : sbb dword ptr [rax - 0x7f], ecx ; ret
0x000002000007de95 : sbb dword ptr [rax - 1], ecx ; ret
0x00000200001f7dd7 : sbb dword ptr [rax - 1], ecx ; ret 0x8349
0x0000020000067002 : sbb dword ptr [rax], 0x3f000003 ; ret
0x00000200001be544 : sbb dword ptr [rax], 0x8b00002a ; ret
0x00000200001f322c : sbb dword ptr [rax], eax ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x00000200006da4bf : sbb dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 5], al ; xchg eax, edi ; ret
0x00000200003c3e4d : sbb dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000132516 : sbb dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000138005 : sbb dword ptr [rax], eax ; and al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000138010 : sbb dword ptr [rax], eax ; and dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200001677be : sbb dword ptr [rax], eax ; call 0x20000053a7c
0x00000200003d49d4 : sbb dword ptr [rax], eax ; inc edx ; jmp 0x200003d49bf
0x00000200003cbc4e : sbb dword ptr [rax], eax ; mov al, 6 ; ret
0x00000200003c3ec1 : sbb dword ptr [rax], eax ; mov eax, r10d ; add rsp, 0x28 ; ret
0x000002000014f69b : sbb dword ptr [rax], eax ; mov qword ptr [rcx + 0x5b58], rax ; ret
0x00000200003d5872 : sbb dword ptr [rax], eax ; mov rcx, rdi ; call 0x200000c1b37
0x00000200001661ed : sbb dword ptr [rax], eax ; ret
0x0000020000137c32 : sbb dword ptr [rax], eax ; sete al ; ret
0x00000200001325f1 : sbb dword ptr [rax], eax ; xor eax, eax ; ret
0x000002000012d2ee : sbb dword ptr [rbp + 0x23], eax ; ret
0x000002000017bc43 : sbb dword ptr [rbp + rbp*8 - 0x4c75bf01], edi ; ret 0
0x0000020000687653 : sbb dword ptr [rbp + rcx - 1], esi ; ret 0x8348
0x000002000039eb93 : sbb dword ptr [rbp + rsi*8 - 0x74bf8901], ebx ; ret
0x00000200001d9c8c : sbb dword ptr [rbp - 0x73], eax ; add r9b, byte ptr [r9 - 0x3f] ; call qword ptr [rax]
0x000002000046df37 : sbb dword ptr [rbp - 0x74a88725], eax ; ret
0x0000020000436323 : sbb dword ptr [rbp - 0x74b7003d], ebp ; ret
0x0000020000186278 : sbb dword ptr [rbp - 0x7c], eax ; ror dword ptr [rdi], -0x6b ; ret 0xf640
0x000002000001f04f : sbb dword ptr [rbx + 0x2b9e4205], ecx ; add byte ptr [rbx], bh ; ret
0x000002000039cf89 : sbb dword ptr [rbx + 0x6c090], ecx ; add dh, dh ; ret 0x7401
0x0000020000602a83 : sbb dword ptr [rbx + rbx + 0x60], 0xd1034c00 ; jmp r10
0x000002000064b6ca : sbb dword ptr [rbx - 0x3b7cb73d], ecx ; cmp byte ptr [rdi + 0x5b], bl ; ret
0x000002000004dbc2 : sbb dword ptr [rbx], ebp ; add byte ptr [rbp - 0x7cb7efa2], cl ; ret
0x0000020000643629 : sbb dword ptr [rbx], edi ; ret
0x00000200005ea8ce : sbb dword ptr [rbx], edi ; ret 0x1572
0x000002000012d28f : sbb dword ptr [rbx], esi ; rol byte ptr [rcx - 0x75], 1 ; ret 0xc8c1
0x00000200000533f5 : sbb dword ptr [rbx], esp ; ret 0xc22b
0x00000200006020f2 : sbb dword ptr [rcx + 0x3b], eax ; fisttp word ptr [rdi] ; ret 0x8b48
0x00000200004c843d : sbb dword ptr [rcx + 0x3b], ecx ; ret
0x00000200001f4160 : sbb dword ptr [rcx + 0x45fffffe], -0x75 ; ret
0x000002000022c429 : sbb dword ptr [rcx + 3], eax ; ror byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200001c5636 : sbb dword ptr [rcx + rdi + 0x3d], ecx ; ret 0x1ccc
0x00000200006d2eb7 : sbb dword ptr [rcx - 0x17dfdba4], ecx ; call rdi
0x00000200000a4110 : sbb dword ptr [rcx - 0x3f], ecx ; call qword ptr [rax]
0x00000200001bfa7a : sbb dword ptr [rcx - 0x75], eax ; ret 0x48c3
0x00000200001138cd : sbb dword ptr [rcx - 0x75], eax ; ret 0xeac1
0x00000200006da534 : sbb dword ptr [rcx - 0x75], eax ; ret 0xff41
0x0000020000120c84 : sbb dword ptr [rcx - 0x75], ecx ; fimul word ptr [rcx - 0x3f] ; call qword ptr [rax]
0x000002000018a727 : sbb dword ptr [rcx - 0x75], ecx ; ret
0x0000020000766892 : sbb dword ptr [rcx - 0x77], ecx ; add bh, bh ; ret 0x8349
0x000002000002c291 : sbb dword ptr [rcx - 0x7d], eax ; ret
0x0000020000629d88 : sbb dword ptr [rcx - 0x7d], ecx ; ret 0x4502
0x0000020000010d86 : sbb dword ptr [rcx - 1], eax ; ret
0x000002000018be93 : sbb dword ptr [rcx - 1], eax ; ret 0x8348
0x00000200003f4e3b : sbb dword ptr [rcx], 0x8b48ffe6 ; ret 0x48f0
0x000002000003ffb2 : sbb dword ptr [rcx], eax ; jne 0x2000003ffc3 ; ret
0x00000200000282d7 : sbb dword ptr [rdi + 0x13], esi ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005b014c : sbb dword ptr [rdi + 4], 0x940f0000 ; ret 0xe3e8
0x000002000061a895 : sbb dword ptr [rdi + rcx - 0x49], eax ; ret 0x8b48
0x000002000062fafc : sbb dword ptr [rdi - 0x4e], esi ; ret
0x000002000068c18a : sbb dword ptr [rdi], ecx ; ret 0xd233
0x00000200003dbb7a : sbb dword ptr [rdi], edx ; add bl, ch ; ret 0xefbb
0x00000200001f3328 : sbb dword ptr [rdx + 3], esi ; xor al, al ; ret
0x00000200001f328c : sbb dword ptr [rdx + 3], esi ; xor eax, eax ; ret
0x000002000057ebac : sbb dword ptr [rdx + rdx*8 - 0x49f0ea88], eax ; ret 0xf42
0x00000200005bf17b : sbb dword ptr [rdx], ebp ; ret 0x90ff
0x00000200001dd8e5 : sbb dword ptr [rdx], ebx ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200006b780b : sbb dword ptr [rip - 0x3b7cb800], eax ; ret
0x0000020000485e8a : sbb dword ptr [rip - 0x4fffed05], 1 ; ret
0x0000020000217134 : sbb dword ptr [rsi + 0xf], esp ; out dx, eax ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000002000008fb21 : sbb dword ptr [rsi + rdi*8 - 1], -1 ; inc eax ; jmp 0x2000008faf4
0x00000200006882c7 : sbb dword ptr [rsi - 0x7b], esp ; sal byte ptr [rsp + rbx + 0x48], 0x83 ; ret
0x000002000048c6a3 : sbb dword ptr [rsi], eax ; ret
0x000002000011697d : sbb dword ptr [rsi], ebx ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004d6293 : sbb dword ptr [rsp + rax*2 - 0x75], ecx ; ret 0xff3
0x00000200004d6292 : sbb dword ptr [rsp + rax*2 - 0x75], r9d ; ret 0xff3
0x00000200003d49d2 : sbb dword ptr cs:[eax], eax ; inc edx ; jmp 0x200003d49c1
0x0000020000133422 : sbb eax, -1 ; ret
0x00000200001ab23c : sbb eax, 0x14e8c100 ; and al, 1 ; ret
0x000002000014dedc : sbb eax, 0x14f ; jmp r11
0x0000020000185928 : sbb eax, 0x1602bf ; jmp 0x20000091bdf
0x0000020000118f62 : sbb eax, 0x1e3951 ; jmp 0x20000118f31
0x000002000016f025 : sbb eax, 0x222fd6 ; jmp 0x2000010b277
0x00000200001ab400 : sbb eax, 0x24ff4800 ; ret 0xcccc
0x000002000014dc31 : sbb eax, 0x31a ; jmp r11
0x000002000044a4d3 : sbb eax, 0x3410373 ; ret 0xba0f
0x0000020000647d43 : sbb eax, 0x375000b ; xor al, al ; ret
0x00000200002119fb : sbb eax, 0x3b1c438b ; ret 0x974
0x00000200001b1e57 : sbb eax, 0x41001206 ; call rcx
0x00000200001c641a : sbb eax, 0x45890038 ; fmul dword ptr [rax - 0x75] ; pushfq ; ret 0xf2c0
0x0000020000521f8f : sbb eax, 0x4800000d ; add esp, 0x38 ; ret
0x00000200001c11ff : sbb eax, 0x48000038 ; add esp, 0x28 ; ret
0x0000020000431cf1 : sbb eax, 0x480016a6 ; add esp, 0x20 ; pop rbx ; ret
0x00000200001ab692 : sbb eax, 0x48047400 ; mov eax, ecx ; ret
0x00000200006be89f : sbb eax, 0x48ffa544 ; jmp rax
0x000002000062241f : sbb eax, 0x48ffbacc ; add esp, 0x58 ; ret
0x0000020000669bef : sbb eax, 0x48ffbc74 ; add esp, 0x28 ; ret
0x00000200001abe84 : sbb eax, 0x58d4800 ; ret
0x0000020000190ca9 : sbb eax, 0x7402c1f6 ; or cl, byte ptr [rax - 0x7d] ; jmp qword ptr [rcx]
0x000002000014e112 : sbb eax, 0x79 ; sub r11, rax ; jmp r11
0x0000020000405d72 : sbb eax, 0x80828bc3 ; add byte ptr [rax], al ; add bl, ch ; ret
0x00000200000bff8f : sbb eax, 0x81ffffda ; jmp qword ptr [rdx]
0x00000200005c1418 : sbb eax, 0x8348ffd1 ; ret 0x4804
0x0000020000532b6d : sbb eax, 0x8348fff0 ; ret
0x0000020000030819 : sbb eax, 0x89490013 ; add bh, bh ; ret 0x8948
0x00000200000cdcae : sbb eax, 0x89be0f41 ; ret
0x00000200004b80d4 : sbb eax, 0x8b000000 ; push rax ; and dh, dh ; ret 0x7504
0x00000200000f6978 : sbb eax, 0x8b410007 ; ret 0x8348
0x00000200001a466b : sbb eax, 0x8b440000 ; ret
0x000002000040dafc : sbb eax, 0x8b48fff7 ; add al, 0xc1 ; ret
0x000002000075ea3f : sbb eax, 0x8b490038 ; xchg eax, esp ; ret
0x00000200001706c9 : sbb eax, 0x8b4cfffa ; ret
0x000002000067feea : sbb eax, 0x8b90ffe9 ; ret
0x0000020000414a9f : sbb eax, 0x8bffd3aa ; ret
0x00000200005e236f : sbb eax, 0x8bffed81 ; ret
0x00000200000f7f4f : sbb eax, 0x8bfff583 ; ret
0x0000020000121aa9 : sbb eax, 0xb3d0e800 ; dec dword ptr [rax - 0x75] ; ret
0x0000020000131b93 : sbb eax, 0xc0330100 ; add rsp, 0x28 ; ret
0x00000200001291a2 : sbb eax, 0xc0940f00 ; ret
0x00000200001ab7b3 : sbb eax, 0xc1470f00 ; ret
0x0000020000588c8b : sbb eax, 0xc748ffd5 ; ret 0xf80
0x000002000012e3c5 : sbb eax, 0xc8a30f00 ; setb al ; ret
0x0000020000564362 : sbb eax, 0xe67283e9 ; dec dword ptr [rax + 0x3b] ; ret 0x840f
0x000002000017d175 : sbb eax, 0xe8000001 ; ret 0xfc67
0x00000200004efe52 : sbb eax, 0xe80009b4 ; in eax, 0x76 ; ret 0xa8ff
0x00000200001dcf98 : sbb eax, 0xe8cb8b48 ; ret
0x0000020000140555 : sbb eax, 0xe9000000 ; and bl, cl ; add byte ptr [rax], al ; ret
0x000002000055e7b1 : sbb eax, 0xe990ffc8 ; ret
0x000002000043e29f : sbb eax, 0xebffc18d ; ret
0x000002000002d181 : sbb eax, 0xf61f8b48 ; ret
0x0000020000047413 : sbb eax, 0xff000000 ; ret
0x00000200003b74f4 : sbb eax, 0xff000001 ; ret
0x000002000012284e : sbb eax, 0xff477500 ; ret
0x000002000076c803 : sbb eax, 0xffb665c8 ; add rsp, 0x28 ; ret
0x00000200001277aa : sbb eax, 0xffc4eb00 ; ret 0x8348
0x000002000007ac0b : sbb eax, 0xffcab60f ; ret
0x00000200005f5377 : sbb eax, 0xffffb020 ; ret
0x00000200003a8feb : sbb eax, 0xfffffd62 ; ret
0x000002000006004f : sbb eax, dword ptr [rax] ; add bh, dh ; ret
0x00000200005219ed : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xc000000d ; ret
0x000002000075d631 : sbb eax, dword ptr [rax] ; add byte ptr [rbp + 0x23880fc0], al ; ret
0x0000020000451427 : sbb eax, dword ptr [rax] ; add byte ptr [rbp - 0x75cb8740], al ; ret
0x000002000000a879 : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0f701], al ; ret
0x0000020000116ccc : sbb eax, dword ptr [rax] ; add rcx, r8 ; mov qword ptr [rdx], rcx ; ret
0x000002000053f99f : sbb eax, dword ptr [rax] ; add rsp, 0x20 ; pop r14 ; ret
0x000002000012ff2c : sbb eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001c05ce : sbb eax, dword ptr [rax] ; mov al, dl ; ret
0x00000200004b9bde : sbb eax, dword ptr [rax] ; mov byte ptr [rax], 0 ; jmp 0x200004b9bae
0x00000200001c815c : sbb eax, dword ptr [rax] ; mov dword ptr [rcx + 0x298], edx ; ret
0x00000200001c117b : sbb eax, dword ptr [rax] ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200004ba798 : sbb eax, dword ptr [rax] ; mov rdx, rax ; jmp 0x200004ba767
0x000002000014f63c : sbb eax, dword ptr [rax] ; ret
0x00000200006438b5 : sbb eax, dword ptr [rbp - 0x75] ; ret
0x0000020000684681 : sbb eax, dword ptr [rbp - 0xe88a13] ; ret
0x00000200000f719d : sbb eax, dword ptr [rbx + rcx*4 + 4] ; sbb byte ptr [rcx - 0x75], cl ; ret
0x000002000022ee24 : sbb eax, dword ptr [rbx - 0x7cb7073e] ; ret
0x000002000073b6c9 : sbb eax, dword ptr [rbx - 0x7cb7073f] ; ret
0x000002000022e5b9 : sbb eax, dword ptr [rbx - 0x7cb70740] ; ret
0x000002000007b727 : sbb eax, dword ptr [rcx + 3] ; ret 0xc141
0x0000020000631f37 : sbb eax, dword ptr [rcx - 0x76] ; ret 0x8348
0x0000020000070dbd : sbb eax, dword ptr [rcx - 0xa] ; ret 0x7503
0x00000200001fbea4 : sbb eax, dword ptr [rcx - 1] ; ret 0x8348
0x00000200000ff7be : sbb eax, dword ptr [rdx] ; add al, al ; ret
0x00000200001c7c95 : sbb eax, dword ptr gs:[rax] ; ret
0x000002000014f63b : sbb eax, dword ptr ss:[rax] ; ret
0x00000200003c97ea : sbb eax, eax ; add eax, 2 ; ret
0x000002000016d5c6 : sbb eax, eax ; add eax, 3 ; ret
0x0000020000481972 : sbb eax, eax ; add rsp, 0x28 ; ret
0x00000200001c3839 : sbb eax, eax ; and eax, 0x128 ; ret
0x000002000065a1a1 : sbb eax, eax ; and eax, 0x46 ; ret
0x00000200003f5968 : sbb eax, eax ; and eax, 0x80000005 ; ret
0x00000200000eb530 : sbb eax, eax ; and eax, 0xc0000001 ; ret
0x0000020000506d39 : sbb eax, eax ; and eax, 0xc0000004 ; ret
0x00000200004245d3 : sbb eax, eax ; and eax, 0xc000000d ; ret
0x000002000003fe1e : sbb eax, eax ; and eax, 0xc0000022 ; ret
0x00000200001ab87e : sbb eax, eax ; and eax, 0xc0000023 ; mov dword ptr [rcx], edx ; ret
0x00000200005fc043 : sbb eax, eax ; and eax, 0xc000004b ; ret
0x000002000044da66 : sbb eax, eax ; and eax, 0xc00000a5 ; ret
0x00000200004096ba : sbb eax, eax ; and eax, 0xc00000bb ; ret
0x0000020000202da4 : sbb eax, eax ; and eax, 0xfffffffe ; inc eax ; ret
0x0000020000116c7f : sbb eax, eax ; and eax, 2 ; dec eax ; ret
0x00000200000b2dc2 : sbb eax, eax ; and eax, 2 ; ret
0x000002000013468a : sbb eax, eax ; and rax, rcx ; ret
0x00000200005de3ad : sbb eax, eax ; jmp 0x200005decaf
0x00000200001a484a : sbb eax, eax ; neg eax ; inc eax ; ret
0x0000020000053a1f : sbb eax, eax ; not eax ; and eax, 0xc000000d ; ret
0x000002000041c3a4 : sbb eax, eax ; not eax ; and eax, 0xc0000034 ; ret
0x00000200000344bd : sbb eax, eax ; ret
0x00000200001346e3 : sbb eax, eax ; sbb eax, -1 ; ret
0x000002000013341f : sbb eax, eax ; sbb rax, -1 ; ret
0x00000200001610c7 : sbb eax, ebp ; ret
0x00000200006c02db : sbb eax, ebx ; bts dword ptr [r8 + 0x20], 0x1d ; ret
0x00000200001c344b : sbb eax, esi ; cmp byte ptr [r10], al ; call r8
0x00000200005b96f1 : sbb eax, esi ; jmp 0x200005b96f9
0x0000020000410c41 : sbb ebp, dword ptr [rbp - 0x14] ; inc dword ptr [rbp + 0x2d850fff] ; call qword ptr [rsi]
0x000002000077eee2 : sbb ebp, dword ptr [rbx] ; ret 0x341
0x000002000021af85 : sbb ebp, dword ptr [rdx + 0xb] ; add byte ptr [rbx], bh ; ret 0xf72
0x000002000074f4eb : sbb ebp, dword ptr [rsi + 0x58b44ff] ; ret
0x000002000007c689 : sbb ebp, dword ptr [rsi] ; xor byte ptr [rax], al ; call rax
0x000002000052d872 : sbb ebp, eax ; or byte ptr [rcx], bl ; ret 0x48ff
0x00000200003ecbb3 : sbb ebp, eax ; xchg eax, edi ; ret
0x00000200004309aa : sbb ebp, ebp ; dec dword ptr [rax - 1] ; ret
0x00000200004ed18b : sbb ebp, ebx ; salc ; call 0x20000110ae6
0x000002000077ab9f : sbb ebp, ecx ; ret
0x00000200005d8568 : sbb ebp, esp ; call qword ptr [rax - 0x9743d17]
0x00000200005b3bf1 : sbb ebx, dword ptr [rbx - 0x53] ; call qword ptr [rax - 0x134c3d17]
0x00000200004c0d85 : sbb ebx, dword ptr [rbx] ; ret 0x33ff
0x00000200006101c1 : sbb ebx, dword ptr [rbx] ; ret 0x48ff
0x000002000052d861 : sbb ebx, dword ptr [rcx] ; ret 0x49ff
0x00000200001636c5 : sbb ebx, eax ; btr dword ptr [rcx + 8], 0x19 ; ret
0x00000200006c02d4 : sbb ebx, eax ; bts dword ptr [r8 + 0x20], 0x1b ; ret
0x00000200006d763b : sbb ebx, eax ; ret 0x48ff
0x00000200006ba008 : sbb ecx, dword ptr [rax + 0x3b] ; ret
0x000002000039a267 : sbb ecx, dword ptr [rax + 0x3b] ; ret 0x1f75
0x00000200001bb9de : sbb ecx, dword ptr [rax + 0x3b] ; ret 0xef75
0x000002000011f170 : sbb ecx, dword ptr [rax + 0x63] ; ret 0x348
0x0000020000059a6b : sbb ecx, dword ptr [rax - 0x39] ; ret 0
0x000002000041ee2e : sbb ecx, dword ptr [rax - 0x73] ; add al, 0x49 ; shl rax, 3 ; ret
0x000002000048ec21 : sbb ecx, dword ptr [rax - 0x75] ; add byte ptr [rcx + 0x3b], cl ; ret 0xe275
0x00000200000a9a20 : sbb ecx, dword ptr [rax - 0x75] ; mov dr1, word ptr [rax - 0xa000000] ; ret
0x00000200006ab80b : sbb ecx, dword ptr [rax - 0x75] ; pop rsp ; and al, 8 ; ret
0x00000200000b653b : sbb ecx, dword ptr [rax - 0x75] ; ret
0x00000200001858e6 : sbb ecx, dword ptr [rax - 0x75] ; ret 0x2b48
0x0000020000081c84 : sbb ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x000002000004acc5 : sbb ecx, dword ptr [rax - 0x7d] ; ret
0x00000200003fcb7f : sbb ecx, dword ptr [rax - 0x7d] ; shl dword ptr [rax - 0x18], 0x47 ; ret
0x000002000004aa7e : sbb ecx, dword ptr [rax - 1] ; ret
0x00000200004c1a95 : sbb ecx, dword ptr [rbp + 0x3b] ; ret 0x1675
0x00000200006cb306 : sbb ecx, dword ptr [rbp + rcx*4 + 5] ; ret 0xfe70
0x0000020000539416 : sbb ecx, dword ptr [rcx - 0x75] ; add byte ptr [r13 + rcx*4 + 0x45], r9b ; ret
0x00000200002076ae : sbb ecx, dword ptr [rcx - 0x75] ; or byte ptr [rax + 0x3b], r9b ; ret 0xeb72
0x0000020000652af0 : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x0000020000134f8a : sbb ecx, dword ptr [rdx + 0x148a4201] ; or dword ptr [rdx], edi ; ret 0x5675
0x00000200000675ea : sbb ecx, dword ptr [rsi] ; add dh, dh ; ret
0x00000200000ab305 : sbb ecx, dword ptr [rsi] ; add dh, dh ; ret 0xf1e
0x00000200003e5953 : sbb ecx, ebx ; ret 0x33ff
0x0000020000038e9b : sbb ecx, ecx ; and eax, ecx ; ret
0x00000200000d4034 : sbb ecx, ecx ; and r10d, ecx ; mov eax, r10d ; ret
0x0000020000040027 : sbb ecx, ecx ; neg ecx ; inc ecx ; mov eax, ecx ; ret
0x0000020000741113 : sbb ecx, esp ; ret
0x00000200000ef794 : sbb edi, dword ptr [rax + 8] ; ret
0x000002000019acc1 : sbb edi, dword ptr [rax - 0x166f0018] ; stc ; ret 0xfff4
0x00000200006b4d39 : sbb edi, dword ptr [rdx] ; ret 0x4cff
0x0000020000763a0d : sbb edi, ebp ; ret
0x000002000002c4ca : sbb edi, edi ; ret
0x0000020000189a67 : sbb edi, edi ; ret 0xc148
0x000002000016919a : sbb edi, esi ; clc ; dec dword ptr [rax - 0x75] ; ret
0x00000200006d2ed5 : sbb edi, esi ; dec dword ptr [rbx - 0x3fa74deb] ; jmp qword ptr [rbx]
0x00000200001c1266 : sbb edx, dword ptr [rax + rax] ; ret
0x000002000001fcc1 : sbb edx, dword ptr [rdx + rdx - 0x3b7cb800] ; pop rbx ; ret
0x0000020000639f41 : sbb edx, ecx ; dec dword ptr [rcx - 0x75] ; ret
0x00000200001e7a2c : sbb edx, edx ; and edx, 3 ; add edx, 0x13 ; call r9
0x00000200003fe33f : sbb edx, edx ; call 0x20000022125
0x000002000058e7a7 : sbb edx, esp ; call qword ptr [rdi]
0x0000020000640801 : sbb esi, dword ptr [rax] ; mov al, 0xff ; add rsp, 0x48 ; ret
0x00000200003cef98 : sbb esi, dword ptr [rbx] ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200006c06b2 : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x200006c06cd
0x00000200006c077f : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x200006c079a
0x00000200006c0833 : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x200006c084e
0x00000200006c08d6 : sbb esi, dword ptr [rdi + 6] ; movzx eax, r10b ; jmp 0x200006c08f1
0x000002000044c956 : sbb esi, dword ptr [rdx + 0x14] ; mov rax, r8 ; ret
0x000002000044439d : sbb esi, dword ptr [rdx + 0xf] ; mov rax, r8 ; ret
0x0000020000413d27 : sbb esi, dword ptr [rdx + 8] ; mov eax, edx ; ret
0x00000200004d3d77 : sbb esi, eax ; inc dword ptr [rbp - 0x74f28b40] ; ret
0x00000200005d4ca0 : sbb esi, esi ; push qword ptr [rbx] ; shr al, cl ; ret
0x00000200000467e8 : sbb esi, esi ; ret
0x00000200001fdb51 : sbb esi, esi ; ret 0x7502
0x00000200003f4e3c : sbb esi, esp ; dec dword ptr [rax - 0x75] ; ret 0x48f0
0x0000020000219f14 : sbb esi, esp ; inc dword ptr [rcx - 0x7f] ; call qword ptr [rcx]
0x000002000039fa15 : sbb esp, dword ptr [rax - 0x2b] ; dec dword ptr [rax - 0x3f] ; clc ; or al, 0xff ; ret
0x0000020000602a85 : sbb esp, dword ptr [rax] ; add r10, rcx ; jmp r10
0x000002000018c6c2 : sbb esp, ecx ; int1 ; dec dword ptr [rax - 0x7b] ; ret 0x850f
0x0000020000052ad3 : sbb esp, edx ; add eax, dword ptr [rax] ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001661ec : sbb qword ptr [rax], rax ; ret
0x0000020000082c1d : sbb r11b, al ; xor eax, eax ; ret
0x00000200000d9bd4 : sbb r11b, bpl ; ret 0xcccc
0x000002000041284e : sbb r11b, sil ; movq qword ptr [r8], mm0 ; mov eax, edx ; ret
0x0000020000218147 : sbb r12b, al ; jrcxz 0x2000021817f ; ret 0xc531
0x000002000006fc47 : sbb r14b, r14b ; ret
0x000002000046534d : sbb r15b, r15b ; ret
0x000002000010dfc9 : sbb r15b, r15b ; ret 0xd03b
0x00000200004ca1f2 : sbb r8b, byte ptr [r9] ; add rsp, 0x20 ; pop rdi ; ret
0x00000200005ef13a : sbb r8b, r13b ; jmp rax
0x00000200004ac8fd : sbb r8b, r13b ; lodsb al, byte ptr [rsi] ; in al, dx ; ret
0x00000200003ee925 : sbb r8b, r13b ; pop rsp ; ret
0x00000200004c1dd7 : sbb r8b, r13b ; ret 0xb552
0x0000020000451426 : sbb r8d, dword ptr [rax] ; add byte ptr [rbp - 0x75cb8740], al ; ret
0x0000020000160c40 : sbb r9b, bpl ; ret 0xecae
0x000002000005ba3a : sbb r9b, r13b ; ret 0xfff7
0x0000020000133421 : sbb rax, -1 ; ret
0x0000020000134689 : sbb rax, rax ; and rax, rcx ; ret
0x000002000013341e : sbb rax, rax ; sbb rax, -1 ; ret
0x00000200003fe33e : sbb rdx, rdx ; call 0x20000022126
0x00000200004d3d76 : sbb rsi, rax ; inc dword ptr [rbp - 0x74f28b40] ; ret
0x00000200003c690b : sbb sil, sil ; ret
0x0000020000217a13 : sbb spl, al ; ret 0x7d
0x00000200000b9c0e : scasb al, byte ptr [rdi] ; adc eax, dword ptr [rdx] ; add bh, bh ; ret
0x000002000022ec6e : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x870f
0x0000020000141775 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add cl, ch ; add al, bh ; add byte ptr [rax], al ; ret
0x0000020000142f9b : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x000002000055cdfb : scasb al, byte ptr [rdi] ; add byte ptr [rip - 0x74b40000], al ; ret
0x00000200000a1bdc : scasb al, byte ptr [rdi] ; add eax, 0x8b480000 ; ret 0xc148
0x00000200003fd332 : scasb al, byte ptr [rdi] ; add eax, dword ptr [rax] ; add byte ptr [rbx], dh ; fucomi st(0) ; ret
0x000002000011630e : scasb al, byte ptr [rdi] ; and ebp, esi ; dec dword ptr [rax - 0x75] ; ret
0x000002000014696c : scasb al, byte ptr [rdi] ; clc ; ret
0x00000200001469c1 : scasb al, byte ptr [rdi] ; clc ; sfence ; ret
0x00000200001469bd : scasb al, byte ptr [rdi] ; clc ; sfence ; sfence ; ret
0x0000020000732727 : scasb al, byte ptr [rdi] ; cwde ; add eax, 0x83480000 ; ret
0x00000200006761d8 : scasb al, byte ptr [rdi] ; cwde ; inc dword ptr [rbp + 0x33] ; fild dword ptr [rbp - 0x75] ; ret
0x00000200005b9ae2 : scasb al, byte ptr [rdi] ; dec dword ptr [rax + 0x2b] ; ret
0x0000020000517d95 : scasb al, byte ptr [rdi] ; fdivp st(7) ; mov edx, esi ; call 0x20000143368
0x00000200005118ee : scasb al, byte ptr [rdi] ; hlt ; ret 0x8bff
0x0000020000167528 : scasb al, byte ptr [rdi] ; in eax, dx ; dec esp ; mov eax, 3 ; ret
0x000002000074f4ec : scasb al, byte ptr [rdi] ; inc dword ptr [rbx + rcx*4 + 5] ; ret
0x0000020000495afe : scasb al, byte ptr [rdi] ; insb byte ptr [rdi], dx ; ret 0x89ff
0x000002000051b4d8 : scasb al, byte ptr [rdi] ; jmp qword ptr [rcx]
0x00000200004ef34b : scasb al, byte ptr [rdi] ; loopne 0x200004ef354 ; add rsp, 0x28 ; ret
0x000002000005e5ee : scasb al, byte ptr [rdi] ; or byte ptr [rax], al ; jmp 0x2000005e5dc
0x0000020000138105 : scasb al, byte ptr [rdi] ; push rsp ; and al, 8 ; ret
0x000002000004f423 : scasb al, byte ptr [rdi] ; ret
0x00000200004a4cd6 : scasb al, byte ptr [rdi] ; ret 0x41ff
0x00000200006a804e : scasb al, byte ptr [rdi] ; ret 0x44ff
0x0000020000606e0f : scasb al, byte ptr [rdi] ; ret 0x48ff
0x000002000049cb69 : scasb al, byte ptr [rdi] ; ret 0x4cff
0x000002000045de73 : scasb al, byte ptr [rdi] ; ret 0x84ff
0x00000200006061c8 : scasb al, byte ptr [rdi] ; ret 0x8bff
0x00000200006a807d : scasb al, byte ptr [rdi] ; ret 0xff
0x00000200004f320e : scasb al, byte ptr [rdi] ; ret 0xffc5
0x000002000010587e : scasb al, byte ptr [rdi] ; ret 0xfffb
0x00000200004b7540 : scasb al, byte ptr [rdi] ; sar bh, 0x8b ; ret
0x000002000005f906 : scasb al, byte ptr [rdi] ; sub dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x000002000010c99e : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000042bddd : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret
0x0000020000141795 : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add cl, ch ; loop 0x2000014176b ; add byte ptr [rax], al ; ret
0x0000020000142e9b : scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; ret
0x00000200004cb415 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add al, ch ; jb 0x200004cb45e ; ret 0x84ff
0x0000020000143795 : scasd eax, dword ptr [rdi] ; add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014374b ; add byte ptr [rax], al ; ret
0x000002000011701e : scasd eax, dword ptr [rdi] ; add eax, 0x48c03300 ; add esp, 0x28 ; ret
0x0000020000065a52 : scasd eax, dword ptr [rdi] ; add eax, 0xc4834800 ; pop rbx ; ret
0x000002000057951c : scasd eax, dword ptr [rdi] ; call 0x1ffc3e2e228
0x00000200005caa18 : scasd eax, dword ptr [rdi] ; call 0x200001ec840
0x00000200005d8c83 : scasd eax, dword ptr [rdi] ; call qword ptr [rax - 0x9633d17]
0x00000200004e0762 : scasd eax, dword ptr [rdi] ; call rax
0x0000020000134846 : scasd eax, dword ptr [rdi] ; cmc ; add rsi, r12 ; mov rdx, rsi ; call r14
0x00000200006b4a8d : scasd eax, dword ptr [rdi] ; cmp al, 0xc2 ; jmp qword ptr [rbx]
0x000002000018e952 : scasd eax, dword ptr [rdi] ; dec dword ptr [rax - 0x75] ; ret
0x00000200005c4a31 : scasd eax, dword ptr [rdi] ; dec dword ptr [rbx - 0x9bfdbbc] ; ret
0x00000200006d7e2c : scasd eax, dword ptr [rdi] ; fld qword ptr [rcx - 0x75] ; ret
0x0000020000689e28 : scasd eax, dword ptr [rdi] ; fsub dword ptr [rsi + 0x2b] ; pop rbp ; shl byte ptr [rsi - 0x7d], 1 ; ret
0x000002000052cb21 : scasd eax, dword ptr [rdi] ; lea r8d, dword ptr [rdx + 0x60] ; call 0x2000014f4c8
0x000002000060465d : scasd eax, dword ptr [rdi] ; leave ; ret 0xccff
0x00000200004e075e : scasd eax, dword ptr [rdi] ; mov qword ptr [rbp - 0x51], r11 ; call rax
0x000002000060427d : scasd eax, dword ptr [rdi] ; mov r8b, 1 ; call 0x200004b0566
0x0000020000426b09 : scasd eax, dword ptr [rdi] ; movdqu xmmword ptr [rbp - 1], xmm0 ; call r12
0x00000200006d94e5 : scasd eax, dword ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48ff
0x000002000000c1cd : scasd eax, dword ptr [rdi] ; or ch, byte ptr [rdi] ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200005760c3 : scasd eax, dword ptr [rdi] ; out -1, eax ; mov rcx, rdi ; call 0x200000c23c8
0x00000200001d5a1b : scasd eax, dword ptr [rdi] ; out dx, al ; dec dword ptr [rax - 0x75] ; ret
0x000002000042d899 : scasd eax, dword ptr [rdi] ; pop rdi ; ret 0xb8ff
0x0000020000758315 : scasd eax, dword ptr [rdi] ; pop rsi ; ret 0x83ff
0x00000200005b9336 : scasd eax, dword ptr [rdi] ; push rsi ; ret
0x000002000002ca55 : scasd eax, dword ptr [rdi] ; ret
0x00000200001028ab : scasd eax, dword ptr [rdi] ; ret 0x12b
0x00000200004466e7 : scasd eax, dword ptr [rdi] ; ret 0x15
0x0000020000459661 : scasd eax, dword ptr [rdi] ; ret 0x19
0x00000200007460e2 : scasd eax, dword ptr [rdi] ; ret 0x234d
0x000002000060a95d : scasd eax, dword ptr [rdi] ; ret 0x33ff
0x00000200005d913f : scasd eax, dword ptr [rdi] ; ret 0x344
0x0000020000152386 : scasd eax, dword ptr [rdi] ; ret 0x348
0x000002000007de65 : scasd eax, dword ptr [rdi] ; ret 0x349
0x0000020000649826 : scasd eax, dword ptr [rdi] ; ret 0x3b41
0x00000200001526de : scasd eax, dword ptr [rdi] ; ret 0x40b9
0x0000020000606d96 : scasd eax, dword ptr [rdi] ; ret 0x48ff
0x00000200006d7c0b : scasd eax, dword ptr [rdi] ; ret 0x4cff
0x00000200006d7c12 : scasd eax, dword ptr [rdi] ; ret 0x4dff
0x00000200006dc916 : scasd eax, dword ptr [rdi] ; ret 0x5c89
0x00000200004ec4da : scasd eax, dword ptr [rdi] ; ret 0x694c
0x00000200001eecfe : scasd eax, dword ptr [rdi] ; ret 0x694d
0x000002000007df36 : scasd eax, dword ptr [rdi] ; ret 0x8548
0x000002000015cea4 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000200006d7bff : scasd eax, dword ptr [rdi] ; ret 0x89ff
0x00000200004255bb : scasd eax, dword ptr [rdi] ; ret 0x8b41
0x000002000074625e : scasd eax, dword ptr [rdi] ; ret 0x8b45
0x00000200000ad81a : scasd eax, dword ptr [rdi] ; ret 0x8b48
0x0000020000035d9b : scasd eax, dword ptr [rdi] ; ret 0x8b49
0x000002000007df9e : scasd eax, dword ptr [rdi] ; ret 0x8b4a
0x00000200000f7117 : scasd eax, dword ptr [rdi] ; ret 0x8b4c
0x0000020000090148 : scasd eax, dword ptr [rdi] ; ret 0x8c89
0x000002000021aaf4 : scasd eax, dword ptr [rdi] ; ret 0x9948
0x000002000039b40a : scasd eax, dword ptr [rdi] ; ret 0xaf0f
0x0000020000164a31 : scasd eax, dword ptr [rdi] ; ret 0xc083
0x0000020000438dd1 : scasd eax, dword ptr [rdi] ; ret 0xc148
0x000002000004d812 : scasd eax, dword ptr [rdi] ; ret 0xc149
0x000002000010d2c1 : scasd eax, dword ptr [rdi] ; ret 0xc68b
0x000002000021e64b : scasd eax, dword ptr [rdi] ; ret 0xc803
0x000002000042ce9f : scasd eax, dword ptr [rdi] ; ret 0xc88b
0x00000200003eddfc : scasd eax, dword ptr [rdi] ; ret 0xccc3
0x0000020000152fac : scasd eax, dword ptr [rdi] ; ret 0xd348
0x00000200006d7c1e : scasd eax, dword ptr [rdi] ; ret 0xe8ff
0x0000020000114bfb : scasd eax, dword ptr [rdi] ; ret 0xf41
0x0000020000062a44 : scasd eax, dword ptr [rdi] ; ret 0xf49
0x00000200006d7bf7 : scasd eax, dword ptr [rdi] ; ret 0xff
0x00000200001ee9fd : scasd eax, dword ptr [rdi] ; ret 0xff48
0x0000020000622ecd : scasd eax, dword ptr [rdi] ; ret 0xffb2
0x0000020000105c8d : scasd eax, dword ptr [rdi] ; ret 0xfff8
0x00000200003eda45 : scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 0x2b], -0x40 ; ret
0x00000200003ed309 : scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 0x33], -0x3f ; ret
0x00000200003ed805 : scasd eax, dword ptr [rdi] ; rol dword ptr [rcx + 3], -0x3f ; ret
0x00000200001eecf7 : scasd eax, dword ptr [rdi] ; ror byte ptr [rax - 0x75], 1 ; ror dword ptr [rax + 0xf], -0x51 ; ret 0x694d
0x000002000010ddb5 : scasd eax, dword ptr [rdi] ; ror byte ptr [rcx + 3], 1 ; ror byte ptr [rax - 0x75], 1 ; ret 0x9948
0x00000200004018df : scasd eax, dword ptr [rdi] ; ror byte ptr [rcx - 0x14b3dbac], 1 ; or bh, bh ; ret 0x5489
0x00000200000aee74 : scasd eax, dword ptr [rdi] ; ror byte ptr [rdi], 1 ; mov dh, 0x14 ; or dh, dh ; ret 0x7408
0x00000200000520db : scasd eax, dword ptr [rdi] ; ror dword ptr [rax - 0x3f], -0x18 ; cmp bl, al ; xor eax, eax ; ret
0x00000200001ea15e : scasd eax, dword ptr [rdi] ; ror dword ptr [rcx - 9], -0x10 ; ret
0x00000200005f396b : scasd eax, dword ptr [rdi] ; ror dword ptr [rdi], -0x42 ; ret 0x4466
0x000002000042f5b2 : scasd eax, dword ptr [rdi] ; sal dh, 1 ; ret 0x7401
0x0000020000230d73 : scasd eax, dword ptr [rdi] ; sal edi, 1 ; ror dword ptr [rax + 3], 1 ; ret
0x000002000041b53c : scasd eax, dword ptr [rdi] ; sar bh, 0x8b ; ret
0x000002000022cccd : scasd eax, dword ptr [rdi] ; sar edi, cl ; ret
0x000002000004d275 : scasd eax, dword ptr [rdi] ; xchg dword ptr [rcx], ebp ; add byte ptr [rcx + 0x3b], cl ; ret 0xf41
0x000002000065d3ba : scasd eax, dword ptr [rdi] ; xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005caa17 : scasq rax, qword ptr [rdi] ; call 0x200001ec841
0x000002000052cb20 : scasq rax, qword ptr [rdi] ; lea r8d, dword ptr [rdx + 0x60] ; call 0x2000014f4c9
0x000002000003b547 : seta al ; ret
0x000002000069ad89 : seta cl ; mov eax, ecx ; ret
0x00000200000ec34b : seta dl ; mov al, dl ; ret
0x0000020000643b29 : setae al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000007b87a : setae al ; ret
0x00000200000156cf : setae al ; test cl, al ; sete al ; ret
0x00000200001cf191 : setb al ; add rsp, 0x28 ; ret
0x000002000021de17 : setb al ; mov eax, r8d ; ret
0x000002000041d7be : setb al ; movzx eax, al ; ret
0x00000200000037ab : setb al ; ret
0x0000020000050286 : setb cl ; test cl, cl ; sete al ; ret
0x000002000021de16 : setb r8b ; mov eax, r8d ; ret
0x00000200001f0f8b : setbe al ; add rsp, 0x28 ; ret
0x0000020000076577 : setbe al ; ret
0x00000200001bc7d4 : setbe cl ; mov eax, ecx ; ret
0x0000020000152569 : sete al ; add rsp, 0x20 ; pop rbp ; ret
0x00000200003da518 : sete al ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000137820 : sete al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000706f9 : sete al ; add rsp, 0x28 ; ret
0x00000200001a5f91 : sete al ; add rsp, 0x30 ; pop r14 ; ret
0x0000020000148988 : sete al ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000038bf1 : sete al ; add rsp, 0x38 ; ret
0x00000200001e1a6f : sete al ; add rsp, 0x40 ; pop rbp ; ret
0x00000200004a0ab7 : sete al ; mov byte ptr [r8], al ; movzx eax, r10b ; ret
0x000002000000379e : sete al ; ret
0x0000020000015e89 : sete al ; shr rax, cl ; and rax, r8 ; ret
0x000002000049d39f : sete al ; test cl, al ; je 0x2000049d353 ; jmp 0x2000049d373
0x0000020000034f2f : sete cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x00000200005ecead : sete cl ; mov eax, ecx ; ret
0x0000020000530512 : sete cl ; mov eax, r9d ; ret
0x00000200001bd6c1 : sete dl ; jmp 0x200001bd6a7
0x00000200001bfbf4 : sete dl ; mov eax, edx ; ret
0x0000020000773c56 : sete r8b ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000530511 : sete r9b ; mov eax, r9d ; ret
0x000002000042c8cf : setg al ; ret
0x00000200006b6965 : setl al ; ret
0x000002000041b4cd : setle al ; inc eax ; add rsp, 0x28 ; ret
0x0000020000411f35 : setle al ; inc eax ; ret
0x00000200001f31e3 : setle al ; ret
0x0000020000556f67 : setne al ; add rsp, 0x20 ; pop rbp ; ret
0x00000200000efc37 : setne al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000040f29e : setne al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200000529d8 : setne al ; add rsp, 0x28 ; ret
0x0000020000154e9e : setne al ; add rsp, 0x30 ; pop rbp ; ret
0x00000200005579b4 : setne al ; add rsp, 0x40 ; pop rbp ; ret
0x0000020000556eb0 : setne al ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000558c40 : setne al ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000557f0c : setne al ; add rsp, 0x70 ; pop rbp ; ret
0x0000020000676472 : setne al ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x000002000044e21a : setne al ; mov rsp, r11 ; pop rdi ; ret
0x0000020000557d78 : setne al ; pop rbp ; ret
0x0000020000008f51 : setne al ; ret
0x00000200000e9b51 : setne al ; test cl, al ; setne al ; ret
0x000002000047573c : setne bl ; call 0x2000009d696
0x0000020000130dbe : setne byte ptr [rip + 0x1cadbc] ; xor eax, eax ; ret
0x00000200000f8907 : setne byte ptr [rip + 0x20164a] ; xor eax, eax ; ret
0x000002000004e18d : setne cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x000002000000e69d : setne cl ; mov eax, ecx ; add rsp, 0x38 ; ret
0x0000020000557bac : setne cl ; mov eax, ecx ; pop rbp ; ret
0x0000020000676537 : setne dl ; cmp edx, eax ; jne 0x2000067654f ; xor eax, eax ; ret
0x000002000076830e : setns al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000002b0d3 : setns al ; add rsp, 0x28 ; ret
0x0000020000513b49 : setns al ; add rsp, 0x30 ; pop rbx ; ret
0x0000020000400da4 : setns al ; add rsp, 0x30 ; pop rdi ; ret
0x00000200003ebb47 : setns al ; dec eax ; ret
0x000002000074e2b1 : setns cl ; mov eax, ecx ; add rsp, 0x28 ; ret
0x0000020000640986 : sets al ; add rsp, 0x20 ; pop rdi ; ret
0x000002000014696b : sfence ; ret
0x00000200001469c0 : sfence ; sfence ; ret
0x0000020000230a78 : sgdt ptr [rax] ; add byte ptr [rax + 3], cl ; ret
0x0000020000505b2a : sgdt ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rbp ; ret
0x0000020000142395 : sgdt ptr [rax] ; add cl, ch ; loop 0x2000014235f ; add byte ptr [rax], al ; ret
0x0000020000230b70 : sgdt ptr [rcx] ; sidt ptr [rdx] ; ret
0x00000200001f3d05 : shl al, cl ; inc dword ptr [rcx - 0x7d] ; ret
0x000002000039c88c : shl bh, 1 ; dec dword ptr [rax + 0x63] ; ret 0x8348
0x00000200006db353 : shl byte ptr [rax + 0x7ae990ff], 1 ; ret
0x000002000003ea4e : shl byte ptr [rax], 0x4d ; cmp eax, ecx ; jbe 0x2000003ea48 ; xor eax, eax ; ret
0x000002000020305f : shl byte ptr [rax], 0xeb ; jrcxz 0x20000203068 ; ret
0x00000200004996b8 : shl byte ptr [rax], 0xf ; xchg eax, esp ; ret 0xf41
0x00000200000bc1ea : shl byte ptr [rbp + 0x24], cl ; add byte ptr [rcx + rcx*4 + 0x25], cl ; ret
0x00000200004e7fbf : shl byte ptr [rbx + rax], 0x3a ; ret 0x2975
0x000002000049d28a : shl byte ptr [rbx - 0x74fffe76], 1 ; ret 0xe8c1
0x0000020000009472 : shl byte ptr [rbx], 1 ; ret
0x0000020000412069 : shl byte ptr [rbx], 1 ; ret 0xd2f7
0x00000200000f6695 : shl byte ptr [rbx], 1 ; ret 0xf00b
0x0000020000649031 : shl byte ptr [rcx + 0x66], 0x89 ; add ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000408b61 : shl byte ptr [rcx + rax], 1 ; ret
0x00000200001a1d64 : shl byte ptr [rcx], 0x41 ; cmp ecx, dword ptr [rax] ; jb 0x200001a1d50 ; ret
0x0000020000088cbc : shl byte ptr [rdx + rcx - 0x3b7cb800], 0x78 ; ret
0x00000200000b468d : shl byte ptr [rdx], 1 ; ret 0x8388
0x0000020000195724 : shl byte ptr [rdx], 1 ; ret 0x8841
0x0000020000003601 : shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000015237b : shl byte ptr [rdx], cl ; add byte ptr [rcx - 0x77], cl ; adc dword ptr [rcx - 0x75], eax ; ret
0x0000020000417756 : shl byte ptr [rip - 0x3fffff9f], 1 ; jmp 0x20000417728
0x000002000041c3a7 : shl byte ptr [rip - 0x3fffffcc], 1 ; ret
0x000002000003fe1f : shl byte ptr [rip - 0x3fffffde], 0xc3 ; xor eax, eax ; ret
0x0000020000053a22 : shl byte ptr [rip - 0x3ffffff3], 1 ; ret
0x0000020000687650 : shl byte ptr [rsi + 0x39], cl ; sbb dword ptr [rbp + rcx - 1], esi ; ret 0x8348
0x0000020000216a6f : shl byte ptr [rsi + 0x41], 0x2b ; ret
0x00000200006456c5 : shl byte ptr [rsi + 0x41], 0x2b ; ret 0x366
0x00000200004a6724 : shl byte ptr [rsi + 0x41], 0x2b ; ret 0x4166
0x0000020000433d78 : shl byte ptr [rsi + 0x41], 0x2b ; ret 0xc748
0x00000200003c58a4 : shl byte ptr [rsi + 0x41], 0x3b ; ret
0x0000020000505472 : shl byte ptr [rsi + 0x41], 0x3b ; ret 0xbb72
0x0000020000651199 : shl byte ptr [rsi + 0x41], 0x83 ; ret
0x00000200005b5ca2 : shl byte ptr [rsi + 0x41], 0x89 ; add cl, byte ptr [rcx - 0x7d] ; ret 0x4802
0x0000020000074e20 : shl byte ptr [rsi + 0x44], 0x39 ; adc cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x42e8
0x00000200005e2d94 : shl byte ptr [rsi + 0x45], 0x3b ; ret 0xca72
0x0000020000669442 : shl byte ptr [rsi + 0x45], 0x3b ; ret 0xd972
0x0000020000669455 : shl byte ptr [rsi + 0x45], 0x3b ; ret 0xf44
0x000002000003cc0e : shl byte ptr [rsi + 0x45], 0x89 ; or byte ptr [r8 - 0x75], cl ; ret 0x3308
0x0000020000631dc9 : shl byte ptr [rsi + 0xf], 0x6f ; ret 0xf66
0x0000020000217574 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000020000217138 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x00000200002175cd : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0x4166
0x000002000002810e : shl byte ptr [rsi - 0x77], 0x4c ; ret
0x00000200000c376e : shl byte ptr [rsi - 0x77], 1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003a8fd4 : shl byte ptr [rsi - 0x77], cl ; ret 0xc2e8
0x0000020000689e2d : shl byte ptr [rsi - 0x7d], 1 ; ret
0x0000020000786ad3 : shl byte ptr [rsi - 0x7d], 1 ; ret 0x4841
0x00000200006658f5 : shl dword ptr [rax + 0x45], -0x75 ; ret 0xd08b
0x00000200000742c9 : shl dword ptr [rax - 0x18000000], -0x43 ; ret
0x00000200003fcb82 : shl dword ptr [rax - 0x18], 0x47 ; ret
0x00000200003fb493 : shl dword ptr [rax], -1 ; ret 0x513b
0x00000200003bb72a : shl dword ptr [rax], 0x48 ; cmp dword ptr [rcx], ecx ; jne 0x200003bb739 ; ret
0x00000200003bb766 : shl dword ptr [rax], 0x48 ; cmp dword ptr [rcx], ecx ; jne 0x200003bb775 ; ret
0x00000200006c3a0d : shl dword ptr [rax], 1 ; ret
0x0000020000408726 : shl dword ptr [rax], 3 ; add byte ptr [rax], al ; mov qword ptr [r9], rcx ; ret
0x000002000049be3c : shl dword ptr [rbx - 0x74fffe76], 1 ; ret 0xe8c1
0x0000020000502502 : shl dword ptr [rbx], cl ; fdiv st(6) ; ret
0x00000200001b463d : shl dword ptr [rbx], cl ; ret
0x00000200000324e8 : shl dword ptr [rbx], cl ; shr dword ptr [rbx], 1 ; ret 0x3b48
0x0000020000029916 : shl dword ptr [rcx], -0x4d ; add dword ptr [rcx + 0xf], eax ; xchg eax, ebp ; ret
0x000002000004e52c : shl dword ptr [rip + 0xfd00348], 1 ; mov dh, 0x45 ; ret
0x0000020000571bbc : shl dword ptr [rip - 0x275622], -0x75 ; ret
0x00000200004a6582 : shl dword ptr [rsi + 0x41], 0x2b ; ret
0x00000200006456c1 : shl dword ptr [rsi + 0x41], 0x2b ; shl byte ptr [rsi + 0x41], 0x2b ; ret 0x366
0x0000020000011e8e : shl dword ptr [rsi + 0x41], 0x3b ; ret
0x000002000043fc5b : shl dword ptr [rsi + 0x45], 0x23 ; ret 0x5474
0x0000020000217806 : shl dword ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret
0x0000020000216ef1 : shl dword ptr [rsi + 0xf], 1 ; insb byte ptr [rdi], dx ; ret 0x4166
0x000002000021755e : shl dword ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000002000043959d : shl dword ptr [rsi - 0x70], -0x75 ; adc dh, dh ; ret 0x7501
0x00000200001f2af2 : shl dword ptr [rsi - 0x77], 0x42 ; or byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200001f275e : shl dword ptr [rsi - 0x77], 0x43 ; or byte ptr [rsi - 0x7b], ah ; ret 0x1975
0x000002000042b446 : shl dword ptr [rsi - 0x77], 0x4e ; sbb byte ptr [rbx], ah ; ret 0xe0c1
0x000002000008e3fd : shl dword ptr [rsi], 1 ; add byte ptr [rcx - 1], al ; ret
0x000002000051cdeb : shl dword ptr [rsi], 1 ; ret
0x000002000077df0a : shl eax, 0x14 ; mov dword ptr [rip - 0x47b2ef], eax ; ret
0x000002000003cd28 : shl eax, 0x14 ; ret
0x0000020000745f25 : shl eax, 0x19 ; sar rax, 0x10 ; ret
0x00000200001f62f2 : shl eax, 0xa ; add eax, ecx ; ret
0x000002000003cd2d : shl eax, 0xa ; ret
0x00000200001b13a1 : shl eax, 0xc ; mov dword ptr [r8 + 0x28], eax ; ret
0x00000200001b2674 : shl eax, 0xc ; mov qword ptr [r9], rax ; xor eax, eax ; ret
0x0000020000045724 : shl eax, 0xc ; ret
0x000002000052516f : shl eax, 2 ; call 0x2000014f4c6
0x00000200001f0fb5 : shl eax, 2 ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x0000020000622ec9 : shl eax, 3 ; call 0x2000014f185
0x0000020000521952 : shl eax, 3 ; call 0x2000014f4c6
0x0000020000525138 : shl eax, 3 ; mov rcx, rax ; call 0x2000014f4c9
0x000002000041ee34 : shl eax, 3 ; ret
0x0000020000016a87 : shl eax, 4 ; add rax, rcx ; ret
0x00000200000c1a1d : shl eax, 4 ; add rax, rdx ; ret
0x0000020000525d3b : shl eax, 4 ; call 0x2000014f186
0x0000020000206a0b : shl eax, 5 ; add rax, r8 ; ret
0x0000020000525334 : shl eax, 5 ; mov rcx, rbx ; call 0x2000014f189
0x00000200001c1945 : shl eax, 6 ; add eax, edx ; mov eax, dword ptr [rcx + rax*4] ; ret
0x00000200003a3e72 : shl eax, cl ; add rsp, 0x28 ; ret
0x00000200001f442f : shl eax, cl ; dec eax ; lock or dword ptr [r10], eax ; ret
0x000002000003f465 : shl eax, cl ; mov qword ptr [r8], rax ; ret
0x0000020000109a2f : shl eax, cl ; not eax ; lock and dword ptr [r10], eax ; ret
0x0000020000004391 : shl eax, cl ; not eax ; lock and dword ptr [r8], eax ; jmp 0x20000004366
0x000002000076d08e : shl ecx, 0xc ; mov dword ptr [rip - 0x46a473], ecx ; ret
0x00000200005cd5c1 : shl ecx, 4 ; add rcx, r12 ; call 0x200000597f8
0x0000020000446ab9 : shl ecx, cl ; ret 0x48ff
0x00000200005a4b3c : shl edi, 0x1f ; or rdi, rax ; call 0x200001cb465
0x00000200001c0331 : shl edi, 1 ; inc dword ptr [rbp - 0x9cb8740] ; ret
0x000002000018c32f : shl edi, 9 ; sub rdi, rax ; jmp 0x200000a854b
0x000002000075c058 : shl edx, 0x18 ; or eax, edx ; ret
0x00000200001b2174 : shl edx, 0x20 ; or rax, rdx ; mov qword ptr [r8], rax ; ret
0x0000020000148a8f : shl edx, 0x20 ; or rax, rdx ; pop rdi ; ret
0x000002000008b55b : shl edx, 0x20 ; or rax, rdx ; ret
0x00000200001272c8 : shl edx, 0x20 ; or rax, rdx ; sub rax, r8 ; ret
0x0000020000425597 : shl edx, 0xc ; call 0x20000045722
0x00000200005f3070 : shl edx, 0xc ; or r8d, edx ; jmp 0x200005f3095
0x00000200001f3948 : shl edx, 6 ; add rdx, rax ; jmp 0x200001f391a
0x0000020000014802 : shl edx, 9 ; or eax, edx ; jmp 0x200000147fb
0x0000020000627cfb : shl esi, 0xc ; or rsi, r9 ; call 0x200000b3f38
0x000002000052516e : shl r8, 2 ; call 0x2000014f4c7
0x0000020000622ec8 : shl r8, 3 ; call 0x2000014f186
0x0000020000521951 : shl r8, 3 ; call 0x2000014f4c7
0x0000020000525d3a : shl r8, 4 ; call 0x2000014f187
0x000002000003cd27 : shl rax, 0x14 ; ret
0x0000020000745f24 : shl rax, 0x19 ; sar rax, 0x10 ; ret
0x000002000003cd2c : shl rax, 0xa ; ret
0x00000200001b2673 : shl rax, 0xc ; mov qword ptr [r9], rax ; xor eax, eax ; ret
0x0000020000045723 : shl rax, 0xc ; ret
0x00000200001f0fb4 : shl rax, 2 ; mov qword ptr [rdx], rax ; xor eax, eax ; ret
0x000002000041ee33 : shl rax, 3 ; ret
0x0000020000016a86 : shl rax, 4 ; add rax, rcx ; ret
0x00000200000c1a1c : shl rax, 4 ; add rax, rdx ; ret
0x0000020000206a0a : shl rax, 5 ; add rax, r8 ; ret
0x00000200003a3e71 : shl rax, cl ; add rsp, 0x28 ; ret
0x000002000003f464 : shl rax, cl ; mov qword ptr [r8], rax ; ret
0x00000200005cd5c0 : shl rcx, 4 ; add rcx, r12 ; call 0x200000597f9
0x000002000018c32e : shl rdi, 9 ; sub rdi, rax ; jmp 0x200000a854c
0x0000020000148a8e : shl rdx, 0x20 ; or rax, rdx ; pop rdi ; ret
0x000002000008b55a : shl rdx, 0x20 ; or rax, rdx ; ret
0x0000020000425596 : shl rdx, 0xc ; call 0x20000045723
0x00000200001f3947 : shl rdx, 6 ; add rdx, rax ; jmp 0x200001f391b
0x0000020000627cfa : shl rsi, 0xc ; or rsi, r9 ; call 0x200000b3f39
0x00000200005c35d4 : shr ah, 0x83 ; ret
0x0000020000029d2f : shr al, 0x1b ; ret 9
0x000002000050acbd : shr al, 0x1d ; push rdi ; ret
0x00000200006ce0b5 : shr al, 0x21 ; ret 0xff99
0x00000200004c781a : shr al, 0x24 ; ret 0x8bff
0x0000020000538a61 : shr al, 0x29 ; jno 0x20000538a27 ; dec dword ptr [rax + 0x63] ; ret
0x0000020000499210 : shr al, 0x2a ; xchg eax, esi ; ret 0x48ff
0x00000200003e7624 : shr al, 0x4e ; ret
0x0000020000593cd3 : shr al, 0x7f ; xchg eax, esi ; ret 0x33ff
0x000002000067743a : shr al, 0x80 ; ret 0xffa4
0x000002000010d415 : shr al, 0xa5 ; ret
0x0000020000572336 : shr al, 0xac ; loope 0x2000057234c ; add dh, dh ; ret
0x0000020000493894 : shr al, 0xb6 ; push rdi ; ret 0x48ff
0x000002000050ac19 : shr al, 0xc1 ; push rdi ; ret
0x000002000050ad0d : shr al, 0xcd ; pop rdx ; ret
0x0000020000035f1d : shr al, 0xcd ; ret
0x00000200005dd426 : shr al, 0xe4 ; ret 0xffaa
0x00000200003a8f9f : shr al, 0xeb ; ret
0x00000200005a4e76 : shr al, 0xf0 ; ret
0x000002000053681a : shr al, 1 ; and al, 1 ; mov byte ptr [r8], al ; xor eax, eax ; ret
0x0000020000409c3b : shr al, 1 ; call qword ptr [rdi]
0x000002000051e681 : shr al, 1 ; cmp dword ptr [rsi], ecx ; ret
0x000002000051e5bc : shr al, 1 ; dec byte ptr [rsi] ; ret
0x00000200003fa0e4 : shr al, 1 ; loop 0x200003fa147 ; ret
0x00000200001bef67 : shr al, 1 ; movhps xmm0, qword ptr [rax] ; add byte ptr [rcx - 0x75], al ; ret 0x8348
0x00000200000ec2f6 : shr al, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; adc eax, 0xb60ffff4 ; ret
0x000002000042fb92 : shr al, 1 ; or al, 0x41 ; ret 0x44ff
0x000002000039e50d : shr al, 1 ; or eax, 0x8bffd1e8 ; ret
0x00000200005a21a4 : shr al, 1 ; out dx, al ; stc ; ret
0x00000200004a8247 : shr al, 1 ; ret
0x00000200001fd018 : shr al, 1 ; ret 0x34c
0x00000200003a84f0 : shr al, 1 ; ret 0xc9be
0x00000200001b2048 : shr al, 1 ; ret 0xed76
0x00000200001df925 : shr al, 1 ; ret 0xffe4
0x00000200005a21c2 : shr al, 1 ; sar cl, 1 ; ret
0x00000200000efc90 : shr al, 1 ; sub cl, byte ptr [rax - 0x74b70009] ; ret
0x000002000004248a : shr al, 2 ; and al, 1 ; ret
0x0000020000408b5d : shr al, 2 ; not al ; and al, 1 ; ret
0x0000020000407154 : shr al, 3 ; and al, 1 ; ret
0x0000020000403bfb : shr al, 4 ; and al, 1 ; ret
0x000002000005c7c0 : shr al, 6 ; and al, 1 ; ret
0x00000200006005fb : shr al, 7 ; ret
0x00000200004a1026 : shr al, cl ; adc al, 0x18 ; ret 0x48ff
0x0000020000483a29 : shr al, cl ; adc esi, ebp ; ret
0x000002000049e816 : shr al, cl ; and al, 0x40 ; ret 0x48ff
0x00000200005427c1 : shr al, cl ; call 0x1ffc3e0279e
0x000002000049faa2 : shr al, cl ; call 0x2006649bcb9
0x0000020000008252 : shr al, cl ; clc ; and byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003fa176 : shr al, cl ; clc ; pop rdx ; ret
0x000002000051c27f : shr al, cl ; cmp esi, dword ptr [rdx] ; ret
0x000002000061062f : shr al, cl ; fisttp dword ptr [rcx] ; ret 0x39ff
0x00000200005240d6 : shr al, cl ; in al, -0x4d ; ret 0x48ff
0x0000020000483bf1 : shr al, cl ; in al, dx ; ret
0x00000200004a1655 : shr al, cl ; in eax, 0x11 ; ret 0x48ff
0x00000200005f4a0b : shr al, cl ; inc ebp ; ret
0x00000200004977c7 : shr al, cl ; jae 0x2000049777f ; ret 0xf0ff
0x000002000003ced8 : shr al, cl ; jb 0x2000003ce73 ; or byte ptr [rax], al ; jmp 0x2000003ceaa
0x00000200004991c8 : shr al, cl ; jb 0x20000499166 ; ret 0x48ff
0x00000200001bfe77 : shr al, cl ; jmp rcx
0x0000020000614f99 : shr al, cl ; jno 0x20000614f64 ; sar edi, -0x75 ; ret
0x00000200005f4591 : shr al, cl ; jns 0x200005f4563 ; ret
0x00000200001c7010 : shr al, cl ; jp 0x200001c6fa8 ; lock dec dword ptr [rax - 0x75] ; retf ; call rdi
0x00000200004915c0 : shr al, cl ; jp 0x200004915da ; ret
0x0000020000504a7b : shr al, cl ; lahf ; in eax, dx ; ret
0x000002000039bbb7 : shr al, cl ; lahf ; ret
0x00000200005ff22a : shr al, cl ; loopne 0x200005ff24f ; ret
0x00000200004a4cd3 : shr al, cl ; mov bh, 0xae ; ret 0x41ff
0x000002000042ee4b : shr al, cl ; mov bl, 0x7e ; ret
0x000002000049f484 : shr al, cl ; mov dh, 0x33 ; ret 0x48ff
0x0000020000610c54 : shr al, cl ; mov dh, 3 ; ret 0x48ff
0x0000020000072ec0 : shr al, cl ; mov dh, byte ptr [rbx] ; add dword ptr [rax], eax ; test eax, eax ; jns 0x20000072e95 ; jmp 0x20000072eb0
0x000002000014c948 : shr al, cl ; mov dl, 0x1b ; add byte ptr [rax], al ; nop ; ret
0x00000200005f67d2 : shr al, cl ; mov eax, 0xe8ffad93 ; ret
0x000002000074df4d : shr al, cl ; mov ebp, 0x8bffae30 ; ret
0x000002000062584b : shr al, cl ; mov edi, 0x8bffc0b7 ; ret
0x00000200000bf94b : shr al, cl ; mov edi, 0xeb001716 ; ret 0xcccc
0x000002000076922a : shr al, cl ; mov esp, 0x3ff9cc9 ; ret
0x0000020000419331 : shr al, cl ; mov esp, ebx ; ret
0x0000020000588d81 : shr al, cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret 0xa
0x000002000049f553 : shr al, cl ; out 0x32, eax ; ret 0x48ff
0x000002000060a99b : shr al, cl ; outsd dx, dword ptr [rsi] ; ret 0x48ff
0x000002000060a8ad : shr al, cl ; pop rbp ; ret 0x33ff
0x000002000060f4a0 : shr al, cl ; push 0x1b ; ret 0x8aff
0x0000020000514cb9 : shr al, cl ; push rcx ; ret
0x0000020000042df3 : shr al, cl ; push rdi ; xor dword ptr [rax], ecx ; add byte ptr [rsi - 1], ah ; ret
0x00000200001659f8 : shr al, cl ; push rdx ; add eax, 0xe990fff6 ; ret
0x0000020000414db4 : shr al, cl ; push rsi ; ret 0xffe1
0x00000200005f73dc : shr al, cl ; pushfq ; ret
0x00000200005e3bf6 : shr al, cl ; pushfq ; ret 0xfff5
0x00000200000e7847 : shr al, cl ; ret
0x000002000060a9a5 : shr al, cl ; ret 0x45ff
0x00000200000e1bf8 : shr al, cl ; ret 0x6d8
0x0000020000048688 : shr al, cl ; ret 0x7d8
0x0000020000049dc8 : shr al, cl ; ret 0x85d
0x0000020000662bc8 : shr al, cl ; ret 0xa6cf
0x0000020000427cf8 : shr al, cl ; ret 0xc2f2
0x00000200005cea48 : shr al, cl ; ret 0xc625
0x0000020000525d48 : shr al, cl ; ret 0xd0b2
0x00000200004cd148 : shr al, cl ; ret 0xd63e
0x0000020000211dc8 : shr al, cl ; ret 0xebdd
0x00000200005c2db8 : shr al, cl ; ret 0xee9c
0x000002000008ab80 : shr al, cl ; ret 0xfaf1
0x0000020000498c64 : shr al, cl ; salc ; wait ; ret 0xf0ff
0x000002000060a95b : shr al, cl ; scasd eax, dword ptr [rdi] ; ret 0x33ff
0x00000200003f8f75 : shr al, cl ; stc ; insb byte ptr [rdi], dx ; ret
0x000002000049f510 : shr al, cl ; sub dh, byte ptr [rbx] ; ret 0x48ff
0x0000020000484811 : shr al, cl ; sub eax, esp ; ret
0x0000020000602685 : shr al, cl ; test ebp, ecx ; ret 0x89ff
0x0000020000071dc4 : shr al, cl ; xchg byte ptr [rcx + 5], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200005fa077 : shr al, cl ; xchg eax, ebx ; outsd dx, dword ptr [rsi] ; ret
0x00000200005f7278 : shr al, cl ; xchg eax, edx ; popfq ; ret
0x000002000049daa8 : shr al, cl ; xchg eax, edx ; ret 0x4cff
0x00000200005d3f46 : shr al, cl ; xchg eax, esp ; ret 0xffb6
0x00000200004365a6 : shr al, cl ; xchg eax, esp ; ret 0xffc8
0x00000200005faed6 : shr al, cl ; xor al, 0x61 ; ret
0x0000020000485606 : shr al, cl ; xor al, 0xd2 ; ret
0x000002000020cad7 : shr al, cl ; xor eax, dword ptr [rbp + 2] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000119733 : shr bh, 1 ; dec dword ptr [rax - 0x7d] ; ret
0x00000200005dd294 : shr bl, 0 ; add rsp, 0x18 ; ret
0x00000200006d2e46 : shr bl, 0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000063d003 : shr bl, 0 ; add rsp, 0x30 ; pop rbx ; ret
0x000002000065628c : shr bl, 0 ; add rsp, 0x38 ; ret
0x000002000065634e : shr bl, 0 ; add rsp, 0x40 ; pop rbx ; ret
0x000002000064047a : shr bl, 0x13 ; mov rcx, rbx ; call qword ptr [rax]
0x00000200001ba7eb : shr bl, 0x1c ; mov rcx, qword ptr [rbx + 0x38] ; call qword ptr [rax]
0x0000020000467d85 : shr bl, 0xc ; inc r10d ; jmp 0x20000467d76
0x000002000003b0bb : shr bl, 0xc1 ; xor al, al ; ret
0x000002000076478d : shr bl, 0xca ; mov eax, 0xc0000225 ; jmp 0x20000764763
0x0000020000077988 : shr bl, 0xca ; mov rax, rdx ; jmp 0x20000077955
0x0000020000074174 : shr bl, 0xe4 ; mov eax, 0xc0000095 ; ret
0x0000020000123ee3 : shr bl, 0xe9 ; mov qword ptr [r8], r10 ; ret
0x000002000010f943 : shr bl, 0xea ; lea r8, qword ptr [rsp] ; jmp 0x2000010f917
0x000002000001267f : shr bl, 0xee ; and dword ptr [rbx + 0xc], 0 ; mov eax, edx ; jmp 0x20000012678
0x00000200004b5819 : shr bl, 0xf1 ; mov al, 1 ; add rsp, 0x38 ; ret
0x00000200000c3239 : shr bl, 0xf7 ; xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000773603 : shr bl, 0xfa ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001536d8 : shr bl, 0xfa ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000624f7e : shr bl, 1 ; mov edx, 0x8a4401b2 ; ret 0x8d48
0x0000020000501813 : shr bl, 1 ; movsd dword ptr [rdi], dword ptr [rsi] ; call rax
0x00000200001f394d : shr bl, 1 ; ret
0x000002000049aadb : shr bl, 1 ; ret 0x1b0
0x0000020000421850 : shr bl, 1 ; ret 0x48cc
0x00000200004ba79c : shr bl, 1 ; ret 0xb8e8
0x0000020000090774 : shr bl, 1 ; ret 0xc933
0x000002000049a3a1 : shr bl, 1 ; sub esi, esi ; ret
0x000002000021a0b1 : shr bl, 2 ; inc al ; shr ecx, 1 ; jne 0x2000021a0bd ; ret
0x00000200001d1be1 : shr bl, 2 ; xor al, al ; add rsp, 0x28 ; ret
0x00000200001cc17e : shr bl, 2 ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200001a6761 : shr bl, 3 ; mov r8b, 1 ; mov al, r8b ; ret
0x00000200001362b6 : shr bl, 3 ; xor r8d, r8d ; mov eax, r8d ; ret
0x00000200001b15fb : shr bl, 5 ; mov eax, 0xc000000d ; ret
0x0000020000613a11 : shr bl, 5 ; mov eax, 0xc0000056 ; ret
0x000002000011c25f : shr bl, cl ; or eax, 0xffffffff ; ret
0x0000020000120afa : shr bl, cl ; ret
0x000002000016bd8f : shr bl, cl ; rol byte ptr [rcx - 0x7d], cl ; jmp qword ptr [rax]
0x000002000058814d : shr byte ptr [r11], 1 ; ret
0x00000200001ac0f2 : shr byte ptr [rax + 0x41], 0x3b ; sal byte ptr [rdx - 0x10], 1 ; xor eax, eax ; ret
0x0000020000148a69 : shr byte ptr [rax + rax], 0 ; ret
0x000002000041f105 : shr byte ptr [rax - 0x74e58aff], cl ; ret 0x8b48
0x0000020000127371 : shr byte ptr [rax - 0x77], 0x15 ; ret
0x00000200000f2027 : shr byte ptr [rax], 0 ; ret
0x00000200000e2d2e : shr byte ptr [rax], 0x83 ; call qword ptr [rax]
0x000002000064907e : shr byte ptr [rbx], 0x94 ; and al, 0xd8 ; add byte ptr [rax], al ; add bh, bh ; ret 0xc3e8
0x0000020000133fb0 : shr byte ptr [rbx], 0xc1 ; ret
0x000002000058814e : shr byte ptr [rbx], 1 ; ret
0x0000020000527e74 : shr byte ptr [rbx], cl ; or al, 0xf7 ; jno 0x20000527e8a ; ret
0x000002000049897d : shr byte ptr [rbx], cl ; ret
0x00000200001ec7bc : shr byte ptr [rcx - 0xc], 0xff ; add rsp, 0x78 ; ret
0x0000020000557529 : shr byte ptr [rdi + rdi*8 - 0x3b7cb770], 0x20 ; pop rbp ; ret
0x00000200005807a4 : shr ch, 0xe8 ; inc dword ptr [rbp + 3] ; ret
0x00000200006db320 : shr cl, 0 ; ret 0xffff
0x000002000059b35e : shr cl, 0x1a ; sub cl, ch ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200005a9c14 : shr cl, 0x1c ; ret 0xffeb
0x000002000017b751 : shr cl, 0x1e ; ret 0xffee
0x00000200005ad39e : shr cl, 0x1f ; ret
0x00000200005a9c0a : shr cl, 0x26 ; ret 0xffeb
0x0000020000161be7 : shr cl, 0x29 ; ret
0x000002000057fb84 : shr cl, 0x2a ; ret
0x00000200005e18bc : shr cl, 0x37 ; add dword ptr [rax], eax ; add al, ch ; loope 0x200005e18a8 ; ret 0x84ff
0x000002000015bb81 : shr cl, 0x40 ; ret
0x0000020000577047 : shr cl, 0x45 ; ret 0xffe7
0x00000200005ba769 : shr cl, 0x49 ; loop 0x200005ba763 ; inc dword ptr [rcx - 0x75] ; ret 0x8d4c
0x000002000058ba9c : shr cl, 0x4a ; ret 0xfff6
0x00000200005d53a4 : shr cl, 0x4e ; xor al, 0xf6 ; inc dword ptr [rcx - 0x75] ; ret 0x3b45
0x00000200005b4501 : shr cl, 0x4f ; ret
0x000002000055d69d : shr cl, 0x51 ; jo 0x2000055d68e ; push rsi ; ret
0x00000200007781fc : shr cl, 0x54 ; ret
0x00000200005b44f7 : shr cl, 0x59 ; ret
0x00000200005840d0 : shr cl, 0x8c ; js 0x200005840c5 ; ljmp ptr [rbx] ; ret
0x000002000018c421 : shr cl, 0x8c ; ret
0x000002000056c106 : shr cl, 0x99 ; add byte ptr [rax], al ; add byte ptr [rbx], cl ; ret
0x000002000015a87f : shr cl, 0x9a ; jno 0x2000015a877 ; dec dword ptr [rcx - 0x75] ; ret
0x00000200007781b4 : shr cl, 0x9c ; ret
0x00000200006db316 : shr cl, 0xa ; ret 0xffff
0x000002000059db68 : shr cl, 0xa ; test eax, 0x8b4cffe9 ; ret
0x00000200001f07b0 : shr cl, 0xa2 ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000017e3a2 : shr cl, 0xa8 ; mov ebp, edi ; dec dword ptr [rax - 0x75] ; ret
0x0000020000778329 : shr cl, 0xa8 ; ret 0xfffd
0x00000200005afaa6 : shr cl, 0xa9 ; in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x00000200005ad368 : shr cl, 0xb ; ret 0xffeb
0x00000200002084ce : shr cl, 0xb4 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000015acb6 : shr cl, 0xb4 ; jns 0x2000015acae ; dec dword ptr [rax - 0x75] ; ret
0x00000200005c493a : shr cl, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x2b], cl ; ret 0xc149
0x000002000056d5d2 : shr cl, 0xca ; jmp rsi
0x000002000015fa73 : shr cl, 0xcc ; xchg eax, ecx ; in al, dx ; dec dword ptr [rax - 0x75] ; ret 0x854d
0x0000020000618a98 : shr cl, 0xd ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x000002000056d5c8 : shr cl, 0xd2 ; jmp rsi
0x00000200005771f4 : shr cl, 0xd6 ; ret
0x00000200001980ad : shr cl, 0xdd ; xor ah, dh ; push rsi ; ret
0x0000020000161bc0 : shr cl, 0xe3 ; ret 0xffec
0x0000020000618ab9 : shr cl, 0xec ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4108
0x000002000058babb : shr cl, 0xf2 ; ret
0x00000200005de3ae : shr cl, 0xf3 ; or byte ptr [rax], al ; add al, ch ; ret
0x0000020000162a9c : shr cl, 0xf4 ; add ch, ch ; push rsi ; ret 0x7501
0x0000020000778259 : shr cl, 0xf8 ; ret
0x00000200005871d0 : shr cl, 0xfc ; or eax, 0x8366fff6 ; ret 0x4002
0x00000200000878b8 : shr cl, 1 ; ret
0x000002000049a0bc : shr cl, 4 ; or eax, dword ptr [rax] ; add al, ch ; jns 0x2000049a052 ; ret 0x33ff
0x0000020000545fb9 : shr cl, cl ; mov dword ptr [rcx - 0x44], esp ; dec esp ; nop ; ret
0x000002000077cdf4 : shr cl, cl ; mov r8b, 0xfe ; dec dword ptr [rax - 9] ; ret
0x0000020000561b83 : shr dh, cl ; dec dword ptr [rax - 0x75] ; ret
0x0000020000119732 : shr dil, 1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000081c62 : shr dword ptr [rax + 0x48397401], -0x75 ; ret 0xb948
0x0000020000109268 : shr dword ptr [rax + 0x483f7502], -0x7f ; ret 0xfff
0x000002000005c89f : shr dword ptr [rax + 0x48407401], -0x75 ; ret
0x00000200001983ff : shr dword ptr [rax + 0x48577401], -0x75 ; ret 0xb948
0x00000200000220ce : shr dword ptr [rax + 0x493f7401], -0x7b ; ret 0x2b75
0x000002000003cf39 : shr dword ptr [rax + 0x49407401], -0x75 ; ret
0x00000200005a29f9 : shr dword ptr [rax], -0x18 ; ret
0x00000200001cb93b : shr dword ptr [rax], -0x7d ; ret 0x75ff
0x000002000001e8d9 : shr dword ptr [rax], -1 ; ret 0x3b41
0x000002000049c4ad : shr dword ptr [rax], 1 ; add dword ptr [rax], eax ; add byte ptr [rax + 3], cl ; ret 0x8142
0x0000020000631762 : shr dword ptr [rbx + 0x158d48ff], 1 ; ret
0x00000200001f6422 : shr dword ptr [rbx - 0x40], 0x1c ; add eax, 0xac00 ; ret
0x00000200003be6db : shr dword ptr [rbx - 0x76beffcd], 0x47 ; or al, 0x8b ; ret
0x0000020000137a9e : shr dword ptr [rbx], -0x3e ; ret
0x00000200003f390b : shr dword ptr [rbx], 1 ; ret
0x000002000002afd3 : shr dword ptr [rbx], 1 ; ret 0x2b41
0x00000200000324ea : shr dword ptr [rbx], 1 ; ret 0x3b48
0x00000200004996ab : shr dword ptr [rbx], 1 ; ret 0x48ff
0x0000020000648976 : shr dword ptr [rbx], cl ; xchg eax, esp ; and al, 0xb8 ; add byte ptr [rax], al ; add bh, bh ; ret 0xcbe8
0x00000200005c0b1d : shr dword ptr [rdi], 1 ; out dx, eax ; push rsi ; ret
0x000002000049f40f : shr eax, -0x15 ; ret
0x00000200004c1dbc : shr eax, -0x42 ; ret 0xebff
0x000002000003872b : shr eax, 0x11 ; and eax, 1 ; ret
0x0000020000208483 : shr eax, 0x11 ; not eax ; and eax, 1 ; ret
0x00000200001ab23e : shr eax, 0x14 ; and al, 1 ; ret
0x0000020000041257 : shr eax, 0x18 ; and al, 1 ; ret
0x00000200001e349c : shr eax, 0x18 ; ret
0x00000200000429d0 : shr eax, 0x19 ; and eax, 1 ; ret
0x000002000007bbbb : shr eax, 0x20 ; ret
0x00000200001c4fb2 : shr eax, 0x38 ; add rsp, 0x28 ; ret
0x00000200000f04bc : shr eax, 0x38 ; mov word ptr [r8], ax ; ret
0x0000020000032746 : shr eax, 0x38 ; ret
0x00000200000100ae : shr eax, 0x3f ; add rax, rdx ; jmp 0x2000001006f
0x00000200006281f9 : shr eax, 0x3f ; add rax, rdx ; ret
0x00000200001df920 : shr eax, 0x3f ; add rdx, rax ; call 0x2000002bb78
0x0000020000133776 : shr eax, 0x3f ; ret
0x00000200003f2a01 : shr eax, 0x49 ; xchg eax, edx ; ret
0x00000200005e2e30 : shr eax, 0x4a ; ret
0x000002000003185b : shr eax, 0xa ; and al, 1 ; ret
0x000002000048e249 : shr eax, 0xc ; add rcx, r12 ; call 0x200000bab49
0x00000200000dbbbf : shr eax, 0xc ; cmp qword ptr [r9 + 0x20], r8 ; je 0x200000dbbd2 ; ret
0x00000200001d2242 : shr eax, 0xc ; mov rcx, r11 ; call qword ptr [r11]
0x00000200001d7acf : shr eax, 0xc ; ret
0x0000020000132546 : shr eax, 0xd ; and al, 1 ; ret
0x00000200000385c1 : shr eax, 0xe ; ret
0x00000200006b39f1 : shr eax, 0xf ; and al, 1 ; ret
0x000002000048cc3f : shr eax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041b3f6 : shr eax, 1 ; and eax, 1 ; ret
0x000002000004f802 : shr eax, 1 ; bsr edx, eax ; inc dl ; jmp 0x2000004f7d9
0x0000020000403510 : shr eax, 1 ; mov cs, word ptr [rax] ; ret
0x000002000050b23a : shr eax, 1 ; push rcx ; ret
0x000002000048cacf : shr eax, 1 ; ret
0x000002000007dd84 : shr eax, 2 ; and eax, 1 ; ret
0x000002000001f278 : shr eax, 2 ; call qword ptr [rdx]
0x000002000010eeb9 : shr eax, 3 ; add eax, 0x48 ; ret
0x000002000001a087 : shr eax, 3 ; and eax, 1 ; ret
0x0000020000030a76 : shr eax, 3 ; and eax, 4 ; ret
0x000002000010f156 : shr eax, 3 ; ret
0x00000200000b013d : shr eax, 4 ; add rax, rdx ; ret
0x0000020000131907 : shr eax, 4 ; and eax, 1 ; ret
0x000002000003fb53 : shr eax, 5 ; and eax, 1 ; ret
0x0000020000016ce6 : shr eax, 8 ; and eax, 0xfffff ; ret
0x00000200003daee8 : shr eax, 8 ; and eax, 1 ; ret
0x000002000006f1f5 : shr eax, 9 ; and eax, 1 ; pop rcx ; ret
0x000002000001145e : shr eax, 9 ; and eax, 1 ; ret
0x0000020000014fc4 : shr eax, 9 ; and eax, 7 ; ret
0x00000200000df3ee : shr eax, cl ; and eax, 1 ; ret
0x00000200001150f9 : shr eax, cl ; and r8d, 7 ; mov eax, r8d ; ret
0x0000020000015e8d : shr eax, cl ; and rax, r8 ; ret
0x00000200004970f6 : shr eax, cl ; call 0x1ff8c49331c
0x000002000043223b : shr eax, cl ; call rbx
0x000002000060b45e : shr eax, cl ; jl 0x2000060b4ce ; ret 0x48ff
0x00000200000d62a7 : shr eax, cl ; jmp qword ptr [rsi]
0x00000200003ed79e : shr eax, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x000002000050b71f : shr eax, cl ; pop rbx ; ret
0x00000200000b3738 : shr eax, cl ; push rdx ; push -0x74b70002 ; ret
0x00000200001d6b37 : shr eax, cl ; ret
0x00000200003d7698 : shr eax, cl ; ret 2
0x00000200006cd6e6 : shr eax, cl ; sbb byte ptr [rdi - 1], cl ; dec dword ptr [rax - 0x75] ; ret
0x00000200003edf20 : shr eax, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003ed654 : shr eax, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x000002000042fc5e : shr ebp, 0x18 ; call 0x20000052fb6
0x000002000013540b : shr ebx, -0xd ; mov rax, r11 ; ret
0x000002000052cb71 : shr ebx, -1 ; mov rcx, rsi ; call 0x200003e8dcc
0x0000020000133417 : shr ebx, 0xc ; xor rax, rax ; ret
0x0000020000069f9a : shr ebx, 1 ; rol byte ptr [rcx + 0xf], 1 ; mov dh, 0xc1 ; ret
0x000002000004ba7c : shr ebx, cl ; cmp ecx, dword ptr [rcx + 0x63] ; ret
0x00000200005aa6de : shr ebx, cl ; dec dword ptr [rcx + 0x63] ; or ch, cl ; ret
0x00000200001a3c3c : shr ecx, -0x6c ; ret
0x00000200006c002f : shr ecx, 0x1a ; and ecx, 1 ; mov eax, ecx ; ret
0x000002000011fd85 : shr ecx, 0x38 ; mov eax, ecx ; add rsp, 0x28 ; ret
0x0000020000031d13 : shr ecx, 0xc ; test cl, 1 ; je 0x20000031d14 ; ret
0x0000020000079080 : shr ecx, 0xd ; and eax, ecx ; ret
0x0000020000028212 : shr ecx, 1 ; add al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000002000021a0b6 : shr ecx, 1 ; jne 0x2000021a0b8 ; ret
0x00000200006dcf28 : shr ecx, 1 ; mov dword ptr [r8], ecx ; ret
0x000002000010fae6 : shr ecx, 4 ; xor r11d, r11d ; jmp 0x2000010fab8
0x0000020000037292 : shr ecx, 9 ; and cl, 1 ; mov al, cl ; ret
0x000002000059eae8 : shr ecx, cl ; inc dword ptr [rcx - 0x75] ; ret
0x00000200001a3655 : shr edx, 0x10 ; mov eax, edx ; jmp 0x200001a3676
0x0000020000676501 : shr edx, 0x17 ; cmp r8d, edx ; jmp 0x20000676541
0x00000200001a36ad : shr edx, 0x20 ; mov rax, rdx ; jmp 0x200001a36cf
0x0000020000148aaf : shr edx, 0x20 ; wrmsr ; pop rdi ; ret
0x000002000014f62c : shr edx, 0x20 ; wrmsr ; ret
0x000002000003bf46 : shr edx, 0x20 ; xrstor ptr [rcx] ; ret
0x00000200001d26db : shr edx, 0xc ; call qword ptr [rbx]
0x00000200003aecd9 : shr edx, 0xc ; call qword ptr [rsi]
0x000002000007bec5 : shr edx, 0xc ; lea rax, qword ptr [rax + rdx*8] ; ret
0x000002000060fb5f : shr edx, 3 ; add edx, 0x30 ; call 0x20000231ce9
0x000002000049823b : shr edx, 3 ; call 0x200000bab46
0x00000200001a35d3 : shr edx, 8 ; mov eax, edx ; jmp 0x200001a35f8
0x0000020000113a36 : shr edx, cl ; test r9, r9 ; js 0x20000113a52 ; mov rax, rdx ; ret
0x000002000014f7e4 : shr esi, 1 ; ret
0x00000200000bd989 : shr esi, 2 ; jmp 0x200000bd954
0x00000200005c3532 : shr esp, -0x7d ; ret
0x000002000014f7d6 : shr esp, 1 ; ret
0x000002000042fc5d : shr r13, 0x18 ; call 0x20000052fb7
0x00000200001d2241 : shr r8, 0xc ; mov rcx, r11 ; call qword ptr [r11]
0x000002000050acbc : shr r8b, 0x1d ; push rdi ; ret
0x0000020000593cd2 : shr r8b, 0x7f ; xchg eax, esi ; ret 0x33ff
0x0000020000677439 : shr r8b, 0x80 ; ret 0xffa4
0x000002000050ac18 : shr r8b, 0xc1 ; push rdi ; ret
0x00000200003a8f9e : shr r8b, 0xeb ; ret
0x000002000051e680 : shr r8b, 1 ; cmp dword ptr [rsi], ecx ; ret
0x000002000051e5bb : shr r8b, 1 ; dec byte ptr [rsi] ; ret
0x00000200003a84ef : shr r8b, 1 ; ret 0xc9be
0x00000200003ed79d : shr r8d, cl ; lea eax, dword ptr [r8 + r9] ; ret
0x00000200003edf1f : shr r8d, cl ; sub r9d, r8d ; mov eax, r9d ; ret
0x00000200003ed653 : shr r8d, cl ; xor r9d, r8d ; mov eax, r9d ; ret
0x000002000010fae5 : shr r9, 4 ; xor r11d, r11d ; jmp 0x2000010fab9
0x00000200001a3c3b : shr r9d, -0x6c ; ret
0x000002000007bbba : shr rax, 0x20 ; ret
0x00000200001c4fb1 : shr rax, 0x38 ; add rsp, 0x28 ; ret
0x00000200000f04bb : shr rax, 0x38 ; mov word ptr [r8], ax ; ret
0x0000020000032745 : shr rax, 0x38 ; ret
0x00000200000100ad : shr rax, 0x3f ; add rax, rdx ; jmp 0x20000010070
0x00000200006281f8 : shr rax, 0x3f ; add rax, rdx ; ret
0x00000200001df91f : shr rax, 0x3f ; add rdx, rax ; call 0x2000002bb79
0x0000020000133775 : shr rax, 0x3f ; ret
0x00000200001d7ace : shr rax, 0xc ; ret
0x000002000048cc3e : shr rax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000048cace : shr rax, 1 ; ret
0x00000200000b013c : shr rax, 4 ; add rax, rdx ; ret
0x000002000001145d : shr rax, 9 ; and eax, 1 ; ret
0x00000200000df3ed : shr rax, cl ; and eax, 1 ; ret
0x0000020000015e8c : shr rax, cl ; and rax, r8 ; ret
0x0000020000031d12 : shr rcx, 0xc ; test cl, 1 ; je 0x20000031d15 ; ret
0x000002000007907f : shr rcx, 0xd ; and eax, ecx ; ret
0x0000020000037291 : shr rcx, 9 ; and cl, 1 ; mov al, cl ; ret
0x00000200001a3654 : shr rdx, 0x10 ; mov eax, edx ; jmp 0x200001a3677
0x0000020000676500 : shr rdx, 0x17 ; cmp r8d, edx ; jmp 0x20000676542
0x00000200001a36ac : shr rdx, 0x20 ; mov rax, rdx ; jmp 0x200001a36d0
0x0000020000148aae : shr rdx, 0x20 ; wrmsr ; pop rdi ; ret
0x000002000014f62b : shr rdx, 0x20 ; wrmsr ; ret
0x000002000003bf45 : shr rdx, 0x20 ; xrstor ptr [rcx] ; ret
0x00000200001d26da : shr rdx, 0xc ; call qword ptr [rbx]
0x00000200003aecd8 : shr rdx, 0xc ; call qword ptr [rsi]
0x000002000007bec4 : shr rdx, 0xc ; lea rax, qword ptr [rax + rdx*8] ; ret
0x00000200001a35d2 : shr rdx, 8 ; mov eax, edx ; jmp 0x200001a35f9
0x0000020000230b73 : sidt ptr [rdx] ; ret
0x0000020000082287 : sldt word ptr [rax - 0x80] ; call qword ptr [rcx]
0x00000200005b76ae : sldt word ptr [rax] ; add al, 0x8b ; ret 0x1ba
0x0000020000106051 : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x1c7
0x000002000017fa5b : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x348
0x00000200001d239a : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3b48
0x000002000009c932 : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x3b49
0x00000200001e08ad : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8948
0x00000200001d4eff : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8b49
0x00000200001cb7c1 : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0x8d48
0x00000200000aa145 : sldt word ptr [rax] ; add byte ptr [rax + 0x23], cl ; ret 0xba48
0x00000200000ab033 : sldt word ptr [rax] ; add byte ptr [rax + 0x2b], cl ; ret 0x8b48
0x0000020000009bb0 : sldt word ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0x2348
0x000002000001c1ed : sldt word ptr [rax] ; add byte ptr [rax - 0x3ffffffe], bh ; ret
0x000002000000e800 : sldt word ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000009b84 : sldt word ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0x234c
0x00000200000589a1 : sldt word ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xb949
0x0000020000064021 : sldt word ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000000ffb4 : sldt word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000630a7f : sldt word ptr [rax] ; add byte ptr [rbx], ah ; ret 0x4489
0x0000020000129656 : sldt word ptr [rax] ; add byte ptr [rbx], ah ; ret 0xc803
0x0000020000105d98 : sldt word ptr [rax] ; add byte ptr [rcx + 0x23], cl ; ret 0xb948
0x00000200000f70c6 : sldt word ptr [rax] ; add byte ptr [rcx + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x000002000007bce0 : sldt word ptr [rax] ; add byte ptr [rcx - 0x75], cl ; ret 0xc148
0x0000020000203ad0 : sldt word ptr [rax] ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000003ffce : sldt word ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x82 ; ret
0x0000020000140395 : sldt word ptr [rax] ; add cl, ch ; loop 0x2000014037f ; add byte ptr [rax], al ; ret
0x00000200001e9cd8 : sldt word ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001035ec : sldt word ptr [rax] ; dec dword ptr [rax - 0x75] ; ret 0x2349
0x00000200001d77cd : sldt word ptr [rax] ; mov eax, dword ptr [rcx] ; and rax, rdx ; ret
0x00000200006c418a : sldt word ptr [rax] ; mov rbx, rax ; call rdi
0x00000200000063f0 : sldt word ptr [rax] ; ret
0x00000200006db5c0 : sldt word ptr [rbx + r9*4 + 0xd] ; jle 0x200006db553 ; ret 0x4cff
0x00000200006db5bf : sldt word ptr [rbx + r9*4 + 0xd] ; jle 0x200006db554 ; ret 0x4cff
0x00000200006db5c1 : sldt word ptr [rbx + rcx*4 + 0xd] ; jle 0x200006db552 ; ret 0x4cff
0x00000200001e21f9 : sldt word ptr [rbx] ; ret 0xc23b
0x0000020000095fa8 : sldt word ptr [rcx + 0x3b] ; ret 0x840f
0x0000020000143ba2 : sldt word ptr [rcx + 0x72] ; stmxcsr dword ptr [rcx + 0x74] ; ret
0x000002000013f800 : sldt word ptr [rcx - 1] ; and al, 0xd0 ; mov qword ptr [rcx], rax ; ret
0x00000200000ef7f3 : stc ; adc dh, byte ptr [rbx + 3] ; mov al, 1 ; ret
0x000002000013fdde : stc ; add al, 0x72 ; loop 0x2000013fda4 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000000560b : stc ; add al, 0x72 ; ret
0x00000200001f4cae : stc ; add al, 0x75 ; jge 0x200001f4c46 ; je 0x200001f4cc9 ; ret 0x1a8
0x0000020000470461 : stc ; add dh, byte ptr [rdx - 0x25] ; mov al, dl ; ret
0x0000020000128592 : stc ; add dh, byte ptr [rdx - 0x3e] ; jmp 0x20000128539
0x000002000011cf2b : stc ; add dh, byte ptr [rsi + rdx - 1] ; ret
0x0000020000131a8c : stc ; add dword ptr [rax], eax ; add byte ptr [rdx], cl ; setbe al ; ret
0x0000020000463319 : stc ; add dword ptr [rbp + 0x10], esi ; lea eax, dword ptr [rcx + 4] ; ret
0x00000200001b9481 : stc ; add dword ptr [rbp + 3], esi ; xor al, al ; ret
0x0000020000216ae8 : stc ; add dword ptr [rbx + 6], esi ; mov eax, 0xc00001a2 ; ret
0x000002000022753e : stc ; add dword ptr [rdi + rax*2 - 0xa], esi ; ret
0x00000200000ef7ac : stc ; add dword ptr [rdi - 0x15], esi ; xor eax, eax ; ret
0x0000020000640661 : stc ; add dword ptr [rsi + rax - 0x48], esi ; add byte ptr [rax], al ; add al, 0 ; ret
0x000002000022720d : stc ; add dword ptr [rsi + rax*2 - 0xa], esi ; ret
0x0000020000060c8f : stc ; add eax, 0x220f4400 ; ret
0x00000200000b9530 : stc ; add eax, 0x8b443c75 ; ret 0x8b49
0x000002000010cdad : stc ; add eax, 0xf1f508d ; ret 0xb8c3
0x0000020000131ce6 : stc ; add eax, 0xf1f508d ; ret 0xe8c1
0x00000200001f63c1 : stc ; add eax, r9d ; ret
0x00000200001788d1 : stc ; add ebp, dword ptr [rbx] ; ret
0x0000020000753534 : stc ; add ecx, dword ptr [rdi] ; ret 0x8348
0x00000200000ef79c : stc ; add esi, dword ptr [rdi + 0x10] ; mov eax, 1 ; ret
0x000002000003b07a : stc ; and byte ptr [rax + rax], al ; sal byte ptr [rbp + rdi - 0x50], 1 ; ret
0x00000200001f867c : stc ; and byte ptr [rdx - 0x18], dh ; mov rax, r8 ; ret
0x0000020000423d4f : stc ; call 0x200000459c4
0x0000020000475ceb : stc ; call 0x2000009b444
0x0000020000498d17 : stc ; call 0x200000bb114
0x00000200004c271b : stc ; call 0x200000e88d0
0x0000020000606e0c : stc ; call 0x20000231ce4
0x0000020000606e0b : stc ; call 0x20000231ce5
0x000002000019d40d : stc ; call qword ptr [rbx]
0x00000200006cd117 : stc ; call qword ptr [rip + 0x3c20a]
0x000002000016c141 : stc ; call rcx
0x0000020000692af8 : stc ; call rdi
0x0000020000137a98 : stc ; cmp dh, byte ptr [rbx + 6] ; movzx eax, cx ; sub eax, edx ; ret
0x00000200001f31df : stc ; cmp ecx, 1 ; setle al ; ret
0x00000200006b3fa3 : stc ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0xa8ff
0x00000200003f141a : stc ; dec byte ptr [rdi] ; test ebp, esp ; sbb byte ptr [r8], r8b ; ret
0x000002000016cd56 : stc ; dec dword ptr [rax + 0x2b] ; ret 0x8948
0x00000200003ef1a0 : stc ; dec dword ptr [rax + 0x3b] ; ret 0x577
0x000002000016ad1e : stc ; dec dword ptr [rax + 0x63] ; ret
0x0000020000105c85 : stc ; dec dword ptr [rax - 0x73] ; and al, 0x60 ; call 0x20000091f49
0x00000200004d1f10 : stc ; dec dword ptr [rax - 0x75] ; je 0x200004d1f42 ; js 0x200004d1eab ; ret
0x000002000012bf69 : stc ; dec dword ptr [rax - 0x75] ; ret
0x0000020000169abc : stc ; dec dword ptr [rax - 0x7d] ; ret 0xe908
0x0000020000107ed3 : stc ; dec dword ptr [rax - 0x7f] ; ret
0x000002000016a96a : stc ; dec dword ptr [rcx + 3] ; ret 0xc148
0x00000200001bcf65 : stc ; dec dword ptr [rcx - 0x74b65c83] ; ret 0xf49
0x00000200001bd744 : stc ; dec dword ptr [rcx - 0x75] ; ret 0x7d89
0x000002000075d6c0 : stc ; dec dword ptr [rdi] ; test dword ptr [rax], edi ; ret
0x000002000016e64b : stc ; dec esp ; mov eax, 1 ; ret
0x00000200006b9da3 : stc ; fdivp st(7) ; dec dword ptr [rax - 0x75] ; ret
0x00000200004ea551 : stc ; fdivp st(7) ; jne 0x200005cd7a9 ; ret
0x000002000016c139 : stc ; inc dword ptr [rbp + 0x33] ; in eax, dx ; jmp 0x2000010171f
0x000002000057b76f : stc ; inc dword ptr [rbp + 0x33] ; inc dword ptr [rcx - 1] ; ret 0x8349
0x000002000016e73a : stc ; inc dword ptr [rbp - 0x75] ; ret 0x8b48
0x000002000016b26c : stc ; inc dword ptr [rcx - 0x75] ; ret
0x000002000002c1b5 : stc ; inc dword ptr [rcx - 0x75] ; ret 0x8941
0x00000200003f8f77 : stc ; insb byte ptr [rdi], dx ; ret
0x0000020000765852 : stc ; insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; mov rcx, r15 ; call 0x200000c1b39
0x00000200006429ce : stc ; jae 0x200006429dd ; movzx eax, cx ; ret
0x0000020000768200 : stc ; jb 0x200007681e9 ; ret
0x00000200000ea7ed : stc ; je 0x200000ea7e4 ; xor al, al ; ret
0x00000200003fd27b : stc ; je 0x200003fd26f ; xor al, al ; ret
0x00000200003b7154 : stc ; jge 0x200003b7177 ; add byte ptr [rbp + 0x3b], al ; ret 0x870f
0x000002000050e09e : stc ; jmp 0x2000050e019
0x000002000074859b : stc ; jmp qword ptr [rax]
0x00000200003e5043 : stc ; jmp qword ptr [rdx]
0x0000020000748577 : stc ; jmp rax
0x00000200000e453d : stc ; jo 0x200000e454d ; add al, al ; je 0x200000e4550 ; mov al, 1 ; ret
0x000002000060d04e : stc ; lea ecx, dword ptr [rdx - 0x1f] ; call 0x20000231ce7
0x00000200004cd320 : stc ; mov ebx, 0x1800000 ; call 0x200000ef529
0x00000200001497cb : stc ; mov rax, rdi ; pop rsi ; pop rdi ; ret
0x00000200001c9d53 : stc ; mov rcx, qword ptr [rcx + 8] ; mov rbx, rdx ; call qword ptr [rax]
0x0000020000416136 : stc ; or byte ptr [rdi], cl ; test ebx, edi ; ret
0x0000020000462cae : stc ; or dword ptr [rcx - 0x75], esi ; ret 0x8b48
0x00000200000ef791 : stc ; or dword ptr [rdi + 0x1b], esi ; mov eax, 8 ; ret
0x00000200005248cb : stc ; pcmpeqw mm0, qword ptr [rcx + rcx*2] ; mov eax, eax ; ret
0x0000020000041e7c : stc ; pop rbp ; add ecx, dword ptr [rcx] ; xor byte ptr [rdx + rcx - 0x75], 0xc2 ; ret
0x000002000065a13e : stc ; push qword ptr [rbp + 5] ; lea eax, dword ptr [r9 + 0xb] ; ret
0x00000200006876b3 : stc ; push rcx ; jbe 0x200006876c4 ; add cl, 8 ; ret
0x00000200004f5777 : stc ; push rsi ; dec dword ptr [rax - 0x7d] ; ret
0x000002000002318c : stc ; ret
0x00000200005037ad : stc ; ret 0x48ff
0x0000020000012b63 : stc ; ret 0xa
0x0000020000510986 : stc ; ret 0xebff
0x0000020000085061 : stc ; ret 0xf
0x00000200007664db : stc ; ret 0xffb9
0x0000020000534d13 : stc ; ret 0xffcf
0x000002000056cb2b : stc ; ret 0xffd6
0x00000200005ad3ce : stc ; ret 0xffeb
0x000002000019acc7 : stc ; ret 0xfff4
0x00000200000733f1 : stc ; rol byte ptr [rax], 0 ; sal byte ptr [rdi + rcx - 0x75], 0xc1 ; ret
0x000002000009b3f5 : stc ; sal byte ptr [rsp + rdx + 0x33], 0xc0 ; ret
0x000002000062c2ed : stc ; sbb byte ptr [rbx + 6], dh ; mov eax, 0xc0000095 ; ret
0x0000020000059a80 : stc ; std ; ja 0x20000059a8d ; mov al, 1 ; ret
0x000002000062c3a9 : stc ; sub byte ptr [rbx + 6], dh ; mov eax, 0xc0000095 ; ret
0x00000200004cb293 : stc ; xchg eax, ebp ; mov edx, 0x1d6348ff ; outsb dx, byte ptr [rsi] ; jmp rax
0x000002000072b3f4 : stc ; xor dh, byte ptr [rbx + 8] ; mov esi, r12d ; mov rax, rdx ; jmp 0x2000072b40e
0x0000020000455c12 : std ; adc al, 0 ; mov rcx, rdi ; call 0x200000c1e28
0x000002000051c2e3 : std ; adc byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200000792c3 : std ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000d4343 : std ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0x000002000002731a : std ; add al, byte ptr [rax] ; add byte ptr [rsi + 0x3b], ah ; ret 0x4874
0x0000020000020f12 : std ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000041627 : std ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fe17], al ; ret 2
0x00000200003b51ed : std ; add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x000002000068aaf1 : std ; add byte ptr [rsi + 0x3b], ah ; ret 0x830f
0x00000200000903d1 : std ; add byte ptr cs:[rbp - 0x73], cl ; pop rdx ; dec dword ptr [rcx - 0x75] ; ret
0x00000200004a0467 : std ; add dword ptr [rax], eax ; add dh, dh ; ret 0x4002
0x0000020000092019 : std ; add dword ptr [rcx - 0x75], eax ; fisttp word ptr [rdi] ; xchg eax, ebp ; ret
0x0000020000048d36 : std ; add dword ptr [rdi], ecx ; test esp, edx ; ret
0x000002000047437a : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000200006da838 : std ; add rsp, 0x28 ; ret
0x000002000014f5f7 : std ; and al, byte ptr [rax] ; mov dword ptr [rip + 0x22fc38], eax ; ret
0x000002000060a852 : std ; call 0x20000231ce4
0x000002000060a851 : std ; call 0x20000231ce5
0x00000200004ce612 : std ; call rsi
0x00000200001f0a87 : std ; cmova eax, ecx ; ret
0x0000020000170b2f : std ; dec dword ptr [rax + 0x3b] ; sal dword ptr [rcx + rcx + 0x49], 0x3b ; ret
0x000002000002c227 : std ; dec dword ptr [rax + 0x63] ; ret 0xb60f
0x000002000042408d : std ; dec dword ptr [rax - 0x75] ; ret
0x00000200001772a2 : std ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x84 ; ret 0xed9d
0x00000200004ee04e : std ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000774efb : std ; dec dword ptr [rax - 0x7d] ; ret 0x4108
0x0000020000475169 : std ; dec dword ptr [rax - 9] ; fmul dword ptr [rax - 0x75] ; ret
0x00000200000dbd7e : std ; dec dword ptr [rbp - 0x75] ; ret 0x44c7
0x00000200001731f7 : std ; dec dword ptr [rcx + 0xf] ; ret
0x00000200000d5be8 : std ; dec dword ptr [rcx - 0x75] ; sbb byte ptr [r8 - 0x7b], r9b ; ret
0x00000200003aad0b : std ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000200000df92a : std ; inc dword ptr [rax - 0x9dfddb1] ; ret
0x0000020000572ab0 : std ; inc dword ptr [rbp - 0x75] ; ret 0x8d48
0x0000020000573f18 : std ; inc dword ptr [rcx - 0x48] ; ret
0x00000200006a95d3 : std ; insb byte ptr [rdi], dx ; ret 0x66ff
0x0000020000059a81 : std ; ja 0x20000059a8c ; mov al, 1 ; ret
0x00000200005a11f6 : std ; jmp 0x1fff6df5b03
0x00000200006c39fe : std ; jmp 0x200006c3a6e
0x0000020000740d7f : std ; jrcxz 0x20000740d28 ; dec dword ptr [rax - 0x75] ; ret
0x00000200000f1904 : std ; lock dec dword ptr [rcx + 0x8c] ; ret
0x0000020000487513 : std ; lodsb al, byte ptr [rsi] ; dec dword ptr [rbx + 0x78c085d8] ; ret 0x8b48
0x0000020000512393 : std ; mov al, 0xff ; add rsp, 0x20 ; pop rdi ; ret
0x0000020000630611 : std ; mov al, 0xff ; add rsp, 0x48 ; ret
0x00000200000e8357 : std ; mov byte ptr [rbx + 0x20], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000342b3 : std ; mov byte ptr [rcx + 0x1b], al ; ret
0x000002000076ac35 : std ; mov dh, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000540671 : std ; mov edi, 0xc48348ff ; pop rax ; ret
0x0000020000202e1b : std ; pop rsp ; in al, -1 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003a24cf : std ; push qword ptr [rbx] ; ror byte ptr [rax - 0x75], cl ; ret
0x00000200000d1c1b : std ; ret
0x0000020000446685 : std ; ret 0x15
0x00000200004b2782 : std ; ret 0x48ff
0x00000200004295cc : std ; ret 0x4cff
0x0000020000492071 : std ; ret 0xe9ff
0x0000020000688257 : std ; ret 0xffaa
0x000002000041093f : std ; ret 0xffeb
0x000002000013fc5f : std ; ret 0xfffd
0x0000020000619177 : std ; salc ; inc ebx ; xor al, al ; ret
0x00000200005112f7 : std ; sar edi, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000007471f : std ; stosb byte ptr [rdi], al ; xor byte ptr [rax], al ; sete al ; ret
0x0000020000744be3 : std ; xchg eax, esp ; ret
0x000002000064937c : std ; xor byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xf799
0x0000020000485e8c : sti ; adc al, byte ptr [rax] ; mov al, 1 ; ret
0x00000200001d3145 : sti ; adc byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200000a2800 : sti ; adc byte ptr [rcx + 3], cl ; ret
0x00000200000c68b7 : sti ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x00000200000754a2 : sti ; add al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x000002000008f7a9 : sti ; add al, ch ; ret
0x00000200003fe006 : sti ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000117349 : sti ; add dh, byte ptr [rdx - 0x13] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005196f5 : sti ; add dword ptr [rax + rbp*8 - 0xa], esi ; ret
0x00000200004f09a7 : sti ; add dword ptr [rcx + rdx*2 - 1], esi ; ret
0x00000200001e22bf : sti ; add eax, 0x8a455b75 ; ret
0x00000200001c668f : sti ; add eax, 0x8b4d0b7c ; ret
0x0000020000009ca4 : sti ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200000b6932 : sti ; add ecx, dword ptr [rax - 1] ; ret
0x0000020000004919 : sti ; add ecx, dword ptr [rcx - 0x75] ; ret
0x000002000004d63d : sti ; add esi, dword ptr [rbp + rcx + 0x48] ; add esp, 0x20 ; pop rbx ; ret
0x0000020000041e54 : sti ; add rsp, 0x28 ; ret
0x00000200004f60db : sti ; and dword ptr [rbp + rcx + 0x48], esi ; add esp, 0x20 ; pop rbx ; ret
0x0000020000039b66 : sti ; cmp al, 0 ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000018e577 : sti ; cmp al, 0xf2 ; inc dword ptr [rcx + 0xf] ; mov dh, 0x85 ; ret
0x0000020000437741 : sti ; cwde ; ret
0x0000020000592898 : sti ; dec dword ptr [rax - 0x73] ; iretq ; call 0x200001bd4ed
0x000002000058c685 : sti ; dec dword ptr [rax - 0x77] ; jl 0x2000058c6b7 ; and al, ch ; ret
0x000002000020fb4e : sti ; dec dword ptr [rax - 0x7b] ; sal byte ptr [rdi + rax + 0x48], 0x3b ; ret
0x0000020000114d62 : sti ; dec dword ptr [rdx + 0xd8d48d3] ; ret
0x000002000075c6b2 : sti ; fdiv st(7), st(0) ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000074405d : sti ; idiv bh ; dec dword ptr [rcx + 0x23] ; ret 0xbf49
0x0000020000691509 : sti ; jmp 0x200006914d1
0x000002000010c332 : sti ; jmp qword ptr [rcx]
0x0000020000489cc9 : sti ; jmp qword ptr [rsi]
0x00000200005dc829 : sti ; leave ; adc dword ptr [rax], eax ; xor eax, eax ; ret
0x00000200001c9b85 : sti ; lodsb al, byte ptr [rsi] ; add bh, bh ; ret
0x00000200004c6345 : sti ; loop 0x200004c634d ; mov rax, r8 ; ret
0x0000020000760b07 : sti ; mov r13d, ebx ; jmp 0x20000760adf
0x0000020000496ecf : sti ; or al, 0xe8 ; jp 0x20000496efa ; ret 0x48ff
0x000002000015b63f : sti ; or al, 3 ; jmp 0x20000014e06
0x00000200003b143d : sti ; out -1, eax ; add rsp, 0x28 ; ret
0x000002000040b1b7 : sti ; out dx, al ; inc dword ptr [rcx] ; xor eax, eax ; ret
0x000002000004077d : sti ; ret
0x0000020000601481 : sti ; ret 0x48ff
0x000002000051087e : sti ; ret 0x85ff
0x000002000052b649 : sti ; ret 0xffda
0x000002000020efa5 : sti ; ret 0xffe6
0x000002000016b651 : sti ; ret 0xffed
0x0000020000185999 : sti ; ret 0xfff0
0x00000200001ae5e1 : sti ; ret 0xfff9
0x0000020000498aaf : sti ; sbb al, 0x12 ; add byte ptr [rbp - 0x75], al ; ret
0x000002000057ef95 : sti ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7421bbf1], al ; ret
0x00000200004fe358 : sti ; sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7427bbf1], al ; ret
0x00000200006d9671 : sti ; xchg eax, esp ; ret 0x48ff
0x0000020000086173 : sti ; xor eax, eax ; ret
0x0000020000143ba6 : stmxcsr dword ptr [rcx + 0x74] ; ret
0x00000200001ae1ca : stosb byte ptr [rdi], al ; adc al, byte ptr [rax] ; call r9
0x0000020000541fd2 : stosb byte ptr [rdi], al ; adc dword ptr [rdi - 0x3b7cb701], edi ; pop rbx ; ret
0x0000020000115dd2 : stosb byte ptr [rdi], al ; adc eax, 0xb60ffff1 ; ret
0x00000200005a36b8 : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc933
0x000002000052eb0c : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x000002000014339b : stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x000002000012f312 : stosb byte ptr [rdi], al ; add dword ptr [rdx], eax ; add dh, dh ; ret
0x0000020000017a78 : stosb byte ptr [rdi], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000051e055 : stosb byte ptr [rdi], al ; call 0x20000140384
0x000002000060d59d : stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x75] ; add ecx, dword ptr [rax + 0x3b] ; ret
0x0000020000781df0 : stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x75] ; pop rsp ; and al, 0x40 ; jmp 0x20000781dc4
0x0000020000616e69 : stosb byte ptr [rdi], al ; dec dword ptr [rax - 0x7d] ; ret
0x000002000061e5c8 : stosb byte ptr [rdi], al ; dec dword ptr [rbx - 0x3b7cb73d] ; pop rbx ; ret
0x000002000061e3e3 : stosb byte ptr [rdi], al ; dec dword ptr [rbx - 0x3b7cb73d] ; push rax ; pop rbx ; ret
0x0000020000177b1a : stosb byte ptr [rdi], al ; hlt ; dec dword ptr [rax - 0x75] ; ret
0x0000020000185494 : stosb byte ptr [rdi], al ; lock dec dword ptr [rax - 0x75] ; retf ; call 0x200001c1728
0x00000200004ecc1a : stosb byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; ret 0x48ff
0x00000200004b6144 : stosb byte ptr [rdi], al ; mov esi, 0xe8cc8b49 ; ret
0x000002000040fe9a : stosb byte ptr [rdi], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200006d94fa : stosb byte ptr [rdi], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0xffff
0x00000200003f8ef2 : stosb byte ptr [rdi], al ; outsb dx, byte ptr [rsi] ; ret
0x000002000012ff2a : stosb byte ptr [rdi], al ; pop rax ; sbb eax, dword ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000051a9d2 : stosb byte ptr [rdi], al ; pop rcx ; ret 0xebff
0x00000200001bfc42 : stosb byte ptr [rdi], al ; pop rdi ; adc al, byte ptr [rax] ; mov dword ptr [rcx], eax ; ret
0x0000020000784cd9 : stosb byte ptr [rdi], al ; push qword ptr [rbx] ; fisttp dword ptr [rax - 0x75] ; ret
0x000002000069c973 : stosb byte ptr [rdi], al ; push rsi ; ret
0x000002000012c0ba : stosb byte ptr [rdi], al ; ret
0x00000200004b5d42 : stosb byte ptr [rdi], al ; ret 0x10
0x000002000045b772 : stosb byte ptr [rdi], al ; ret 0x14
0x0000020000524a88 : stosb byte ptr [rdi], al ; ret 0x33ff
0x0000020000524a9a : stosb byte ptr [rdi], al ; ret 0x45ff
0x00000200006071f2 : stosb byte ptr [rdi], al ; ret 0x48ff
0x0000020000754808 : stosb byte ptr [rdi], al ; ret 0x8dff
0x000002000075ddfa : stosb byte ptr [rdi], al ; ret 0xffb7
0x00000200004b7925 : stosb byte ptr [rdi], al ; sar bh, 0x8b ; ret
0x00000200004ad660 : stosb byte ptr [rdi], al ; sbb al, 0x11 ; add byte ptr [rax - 0x73], cl ; adc r8b, r13b ; ret
0x00000200005f5747 : stosb byte ptr [rdi], al ; sbb byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200000d5be7 : stosb byte ptr [rdi], al ; std ; dec dword ptr [rcx - 0x75] ; sbb byte ptr [r8 - 0x7b], r9b ; ret
0x00000200003b374b : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x75] ; ret
0x00000200000217c2 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret
0x00000200003b374c : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x75] ; ret
0x00000200000217c3 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret
0x00000200003b374d : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x75] ; ret
0x00000200000217c4 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret
0x00000200003b374e : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x75] ; ret
0x00000200000217c5 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret
0x00000200003b374f : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x75] ; ret
0x00000200000217c6 : stosb byte ptr [rdi], al ; stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret
0x00000200003b3750 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rax - 0x75] ; ret
0x00000200000217c7 : stosb byte ptr [rdi], al ; sub cl, byte ptr [rcx - 0x75] ; ret
0x0000020000435284 : stosb byte ptr [rdi], al ; test al, 0x50 ; add byte ptr [r9 + 3], cl ; ret 0xe0ff
0x0000020000450ee8 : stosb byte ptr [rdi], al ; xor al, 0x15 ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000074720 : stosb byte ptr [rdi], al ; xor byte ptr [rax], al ; sete al ; ret
0x000002000013fa1c : stosb byte ptr [rdi], al ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000000f5a9 : stosb byte ptr [rdi], al ; xor eax, eax ; ret
0x0000020000130431 : stosd dword ptr [rdi], eax ; add bh, bh ; ror byte ptr [rax - 0x7d], 0xc1 ; or byte ptr [rbx], bh ; ret 0xe872
0x000002000049377f : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x00000200006244f0 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x977
0x0000020000450507 : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rbx - 0x9cfdba4], cl ; ret
0x0000020000672dce : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7c], al ; ret 0x850f
0x000002000006947d : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x8d ; ret
0x00000200006b31ca : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000010b2db : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; mov rcx, qword ptr [rcx + 8] ; call rax
0x000002000014329b : stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; ret
0x0000020000641c2b : stosd dword ptr [rdi], eax ; add dword ptr [rax], eax ; add bl, ch ; ret
0x0000020000021195 : stosd dword ptr [rdi], eax ; add dword ptr [rdx], 0 ; add byte ptr [rdi], cl ; mov dh, 0x83 ; ret
0x0000020000661b3b : stosd dword ptr [rdi], eax ; call 0x1ffc3e76445
0x000002000068f189 : stosd dword ptr [rdi], eax ; dec dword ptr [rax + 0x3b] ; ret
0x0000020000622ad3 : stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x75] ; je 0x20000622b06 ; cmp byte ptr [rax - 0x75], cl ; ret
0x0000020000671126 : stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x75] ; ret
0x00000200005a4d52 : stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000002000060611c : stosd dword ptr [rdi], eax ; dec dword ptr [rbx + 0xe493] ; add dh, dh ; ret 0x7502
0x000002000059582a : stosd dword ptr [rdi], eax ; dec dword ptr [rcx - 0x75] ; iretd ; call 0x200000c1b37
0x00000200000ed13b : stosd dword ptr [rdi], eax ; in al, dx ; or al, byte ptr [rax] ; ret
0x000002000040de79 : stosd dword ptr [rdi], eax ; in eax, dx ; ret 0xb0ff
0x000002000003af11 : stosd dword ptr [rdi], eax ; int1 ; add al, 0 ; add rsp, 0x38 ; ret
0x0000020000484a8d : stosd dword ptr [rdi], eax ; jmp rbx
0x000002000012695f : stosd dword ptr [rdi], eax ; mov eax, 0xc000000d ; ret
0x000002000013580a : stosd dword ptr [rdi], eax ; mov rdi, qword ptr [rsp + 8] ; mov rax, r9 ; ret
0x000002000047ce46 : stosd dword ptr [rdi], eax ; or byte ptr [rax - 1], cl ; ret 0xceeb
0x000002000005b1ed : stosd dword ptr [rdi], eax ; or byte ptr [rax], al ; add dh, dh ; ret
0x00000200003f9f51 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x000002000077a99a : stosd dword ptr [rdi], eax ; push qword ptr [rbx] ; fucomi st(1) ; ret
0x0000020000019160 : stosd dword ptr [rdi], eax ; ret
0x00000200000570bd : stosd dword ptr [rdi], eax ; ret 0
0x000002000045b769 : stosd dword ptr [rdi], eax ; ret 0x14
0x000002000004f44f : stosd dword ptr [rdi], eax ; ret 0x366
0x00000200005ba321 : stosd dword ptr [rdi], eax ; ret 0x48ff
0x000002000062283f : stosd dword ptr [rdi], eax ; ret 0x4cff
0x0000020000782c55 : stosd dword ptr [rdi], eax ; ret 0x8349
0x00000200005928e5 : stosd dword ptr [rdi], eax ; ret 0x85ff
0x0000020000019146 : stosd dword ptr [rdi], eax ; ret 0x894c
0x000002000004f56a : stosd dword ptr [rdi], eax ; ret 0x8a45
0x00000200003a6401 : stosd dword ptr [rdi], eax ; ret 0x8b44
0x000002000050396c : stosd dword ptr [rdi], eax ; ret 0xb841
0x0000020000065cfb : stosd dword ptr [rdi], eax ; ret 0xc0ff
0x00000200001ab6ac : stosd dword ptr [rdi], eax ; ret 0xd148
0x00000200001edef9 : stosd dword ptr [rdi], eax ; ret 0xe
0x00000200006882a9 : stosd dword ptr [rdi], eax ; ret 0xffaa
0x0000020000633211 : stosd dword ptr [rdi], eax ; ret 0xffb1
0x00000200004243d1 : stosd dword ptr [rdi], eax ; ret 0xffd1
0x00000200000570b6 : stosd dword ptr [rdi], eax ; rol byte ptr [rax], 0 ; add byte ptr [rax + rcx*4 - 0x55], al ; ret 0
0x000002000013c081 : stosd dword ptr [rdi], eax ; ror dword ptr [rax + 0x6650144c], -1 ; ret
0x000002000060e859 : stosd dword ptr [rdi], eax ; ror dword ptr [rdx - 0x77], 0xc ; ret 0x438b
0x000002000039f38a : stosd dword ptr [rdi], eax ; salc ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004b7890 : stosd dword ptr [rdi], eax ; sar bh, 0x8b ; ret
0x00000200006b31c9 : stosd dword ptr [rdi], eax ; stosd dword ptr [rdi], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200005bef51 : stosd dword ptr [rdi], eax ; test eax, 0x74c084ff ; adc edi, edi ; ret
0x0000020000758b45 : stosd dword ptr [rdi], eax ; xchg eax, esi ; dec dword ptr [rbp + rcx*4 + 0xd] ; jns 0x20000758bbd ; ret 0x45ff
0x00000200005a4d51 : stosq qword ptr [rdi], rax ; dec dword ptr [rax - 0x7d] ; ret
0x000002000077a999 : stosw word ptr [rdi], ax ; push qword ptr [rbx] ; fucomi st(1) ; ret
0x00000200002074d2 : str word ptr [rax + 0x3b] ; ret 0xeb7c
0x00000200000815ad : str word ptr [rax + 0xb] ; ret
0x000002000005511b : str word ptr [rax - 0x75] ; ret
0x0000020000092d15 : str word ptr [rax - 0x75] ; ret 0xc148
0x00000200004c9d7f : str word ptr [rax - 0x75] ; salc ; mov rcx, r15 ; call rax
0x0000020000081a50 : str word ptr [rax - 0x75] ; sbb esi, esi ; ret
0x0000020000627896 : str word ptr [rax - 0x7b] ; ret 0x2574
0x00000200004d825f : str word ptr [rax - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000200004d3d45 : str word ptr [rax - 0x7d] ; ret 0xeb28
0x000002000008ddd5 : str word ptr [rbp - 0x75] ; ret 0xb70f
0x0000020000085509 : str word ptr [rbp - 0x7b] ; dec dword ptr [rdi] ; test bh, cl ; ret
0x00000200000819de : str word ptr [rcx + 0x33] ; add ecx, dword ptr [rax + 0x23] ; ret
0x00000200000a9ba2 : str word ptr [rcx + 0xb] ; ret
0x00000200004c9fd7 : str word ptr [rcx - 0x75] ; salc ; mov rcx, r13 ; call rax
0x00000200000936d7 : str word ptr [rcx - 0x7d] ; ret
0x00000200001e7fb1 : str word ptr [rcx] ; add rsp, 0x28 ; ret
0x00000200000938f7 : str word ptr es:[rcx - 0x7d] ; ret
0x000002000008ddd4 : str word ptr fs:[rbp - 0x75] ; ret 0xb70f
0x0000020000143c42 : sub ah, byte ptr [rsi - 9] ; ret 0x200
0x00000200006b2aa0 : sub ah, dl ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000bd9b9 : sub al, 0 ; add bl, bh ; add rsp, 0x28 ; ret
0x0000020000031dfd : sub al, 0 ; add ecx, r8d ; movzx eax, word ptr [rax + rcx*2] ; ret
0x000002000002da21 : sub al, 0 ; add rsp, 0x20 ; pop r14 ; ret
0x0000020000103b64 : sub al, 0 ; dec dword ptr [rax + 0x3b] ; ret 0x840f
0x00000200000bc7c1 : sub al, 0 ; je 0x200000bc7d0 ; mov eax, dword ptr [rax + 8] ; ret
0x0000020000510910 : sub al, 0x11 ; ret
0x000002000002f4b8 : sub al, 0x13 ; add dh, dh ; ret 0x7502
0x000002000001913e : sub al, 0x14 ; add byte ptr [rcx - 0x75], al ; ror byte ptr [rcx + 0xf], 0xab ; ret 0x894c
0x00000200006b6cb0 : sub al, 0x15 ; ret 0xe9ff
0x0000020000008628 : sub al, 0x17 ; add byte ptr [rax], al ; ret
0x00000200003b6ff5 : sub al, 0x20 ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; fucomi st(3) ; ret 0x3345
0x0000020000603e28 : sub al, 0x2c ; ret
0x0000020000646752 : sub al, 0x3b ; ret 0x820f
0x000002000005b2a9 : sub al, 0x3b ; ret 0x830f
0x00000200001791b1 : sub al, 0x3b ; ret 0xe273
0x00000200005c34e0 : sub al, 0x3b ; test dword ptr [rdi + 0x72000000], ecx ; ret 0xdb33
0x000002000001527d : sub al, 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200000f73b3 : sub al, 0x48 ; mov eax, dword ptr [rdx + 8] ; mov qword ptr [rdx + 0x30], rax ; ret
0x00000200003a00b9 : sub al, 0x48 ; mov edx, dword ptr [rdx + 8] ; mov ecx, dword ptr [rsi + 0x28] ; call rax
0x00000200004c9274 : sub al, 0x4b ; ret 0x48ff
0x0000020000029b9a : sub al, 0x4c ; cmp eax, eax ; jb 0x20000029b9c ; xor eax, eax ; ret
0x0000020000029b99 : sub al, 0x4c ; cmp eax, eax ; jb 0x20000029b9d ; xor eax, eax ; ret
0x0000020000496581 : sub al, 0x4c ; lea ecx, dword ptr [rdx + rax*8] ; jmp 0x20000496542
0x0000020000496580 : sub al, 0x4c ; lea ecx, dword ptr [rdx + rax*8] ; jmp 0x20000496543
0x0000020000529150 : sub al, 0x60 ; ret 0x41ff
0x00000200005fade0 : sub al, 0x62 ; ret
0x00000200003e9478 : sub al, 0x6b ; ret
0x0000020000427dd0 : sub al, 0x6d ; ret 0xe9ff
0x00000200003c5acb : sub al, 0x88 ; or ecx, dword ptr [rax - 1] ; ret
0x000002000007ae5a : sub al, 0x8b ; inc byte ptr [rcx - 0x75] ; ret 0x2b49
0x000002000012df10 : sub al, 0x8b ; ret
0x00000200006cee7d : sub al, 0x8b ; ret 0xba0f
0x0000020000148714 : sub al, 0x8b ; ret 0xc148
0x000002000042d4f7 : sub al, 0x8b ; ret 0xf983
0x0000020000512981 : sub al, 0x8b ; ret 0xff48
0x00000200005c1da8 : sub al, 0x9a ; cmpsd dword ptr [rsi], dword ptr [rdi] ; push qword ptr [rdx] ; ret
0x00000200006a2967 : sub al, 0xb2 ; test eax, 0x2e3bd285 ; ret 0x39
0x00000200006055e0 : sub al, 0xba ; ret 0xebff
0x00000200006404a9 : sub al, 0xc3 ; lea rax, qword ptr [rcx + 0x3c] ; ret
0x000002000049d2a8 : sub al, 0xc8 ; mov rcx, rbp ; call 0x200000c2848
0x0000020000513bb0 : sub al, 0xc8 ; ret 0x85ff
0x00000200005940b1 : sub al, 0xc9 ; ret 0xffba
0x0000020000230d21 : sub al, 0xcd ; ret
0x00000200005208d2 : sub al, 0xde ; inc dword ptr [rcx] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000a9c56 : sub al, 0xe ; add bh, bh ; ret 0xc28b
0x0000020000691ed8 : sub al, 0xe2 ; ret
0x000002000058e1ac : sub al, 0xe6 ; ret 0x48ff
0x0000020000106bb9 : sub al, 0xe8 ; frstor dword ptr [rsi] ; lock inc dword ptr [rcx + 0x3b] ; ret
0x00000200006307cc : sub al, 0xe8 ; ret 0xabcc
0x00000200000f3c2d : sub al, 0xeb ; ret
0x00000200006913d8 : sub al, 0xed ; ret
0x00000200003db140 : sub al, 0xef ; ret
0x00000200001a770b : sub al, 0xf ; mov bh, 0x51 ; add dh, dh ; ret 0x7501
0x0000020000630245 : sub al, 0xf6 ; ret 0x7401
0x0000020000032190 : sub al, 0xf7 ; ret
0x00000200001bd743 : sub al, 0xf9 ; dec dword ptr [rcx - 0x75] ; ret 0x7d89
0x00000200000df929 : sub al, 0xfd ; inc dword ptr [rax - 0x9dfddb1] ; ret
0x00000200006851a0 : sub al, 0xfd ; ret
0x0000020000022fdf : sub al, 2 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000215456 : sub al, 3 ; ret
0x0000020000082c95 : sub al, 3 ; ret 0xff25
0x0000020000095fa6 : sub al, 8 ; sldt word ptr [rcx + 0x3b] ; ret 0x840f
0x000002000019c5f7 : sub al, bpl ; ret 0xfb2e
0x00000200004f320b : sub al, bpl ; scasb al, byte ptr [rdi] ; ret 0xffc5
0x000002000051b852 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005032d5 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000060f8a9 : sub al, byte ptr [rax] ; add byte ptr [rcx - 0x74bfdbbc], cl ; ret 0x2b41
0x00000200000210e4 : sub al, byte ptr [rax] ; je 0x200000210e4 ; mov rax, qword ptr [rax + 8] ; ret
0x000002000005b7b8 : sub al, byte ptr [rax] ; mov rdx, rsi ; call 0x200000979d7
0x0000020000152c61 : sub al, byte ptr [rax] ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000152a40 : sub al, byte ptr [rax] ; nop ; add rsp, 0x30 ; pop rbp ; ret
0x0000020000154e6c : sub al, byte ptr [rax] ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x00000200000577b9 : sub al, byte ptr [rax] ; ret
0x00000200007464d7 : sub al, byte ptr [rbp - 0x75] ; ret 0x8d4c
0x00000200004dd73d : sub al, byte ptr [rbx] ; add bl, ch ; ret
0x000002000060b6b0 : sub al, byte ptr [rcx + 0x3b] ; ret 0x1b76
0x000002000013b828 : sub al, byte ptr [rcx + 0xf] ; mov dh, 0x45 ; add byte ptr [rbx], bh ; ret
0x00000200001387f0 : sub al, byte ptr [rcx - 0x3a] ; add ch, byte ptr [rsi] ; inc r10 ; jmp 0x20000138814
0x0000020000186248 : sub al, byte ptr [rcx - 0xa] ; rol byte ptr [rcx], 0xf ; xchg eax, ebp ; ret 0xf640
0x000002000021e5dd : sub al, byte ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001384d2 : sub al, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200001a9bae : sub al, byte ptr [rdi] ; in al, dx ; dec esp ; add rsp, 0x28 ; ret
0x000002000046c979 : sub al, byte ptr [rdi] ; ret
0x0000020000152c60 : sub al, byte ptr cs:[rax] ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000498eb7 : sub al, ch ; jae 0x20000498e4b ; ret 0x48ff
0x00000200005118fe : sub al, ch ; jl 0x200005118f0 ; ret 0x8bff
0x00000200006d2fbb : sub al, ch ; jmp qword ptr [rcx]
0x000002000052c997 : sub al, ch ; jrcxz 0x2000052c9c6 ; ret 0x8bff
0x00000200003e6f8c : sub al, ch ; loop 0x200003e6f1e ; ret
0x0000020000510830 : sub al, ch ; mov dl, byte ptr [rdx] ; ret
0x00000200001ab4c7 : sub al, ch ; ret
0x000002000019c5f8 : sub al, ch ; ret 0xfb2e
0x0000020000663277 : sub al, ch ; ret 0xffae
0x00000200004f320c : sub al, ch ; scasb al, byte ptr [rdi] ; ret 0xffc5
0x00000200005031f5 : sub al, ch ; test edx, ecx ; ret
0x000002000013feac : sub al, cl ; ret
0x0000020000498eb6 : sub al, r13b ; jae 0x20000498e4c ; ret 0x48ff
0x0000020000613f6b : sub ax, dx ; jmp 0x20000613f87
0x000002000004c1d3 : sub ax, word ptr [rax] ; call 0x200000684c5
0x0000020000040c6e : sub bh, bh ; ret
0x0000020000429517 : sub bh, bh ; ret 0x1ae9
0x000002000001e8da : sub bh, bh ; ret 0x3b41
0x0000020000152ee9 : sub bh, bh ; ret 0x5589
0x00000200006796d5 : sub bh, bh ; ret 0xfa83
0x000002000073a262 : sub bh, byte ptr [rax + rcx*2 + 0x2b49c133] ; ret
0x00000200001ab30a : sub bh, byte ptr [rax - 0x74b6000a] ; ret
0x000002000074b2d9 : sub bh, byte ptr [rdi] ; ret
0x0000020000535b1d : sub bh, dh ; ret 0xf00
0x0000020000513674 : sub bh, dl ; ret 0x48ff
0x00000200001e24be : sub bl, 3 ; mov edx, dword ptr [rdx + 0x10] ; mov eax, edx ; ret
0x000002000001cec4 : sub bl, al ; add dword ptr [rax], eax ; add rax, rdx ; jmp rax
0x000002000006f1e4 : sub bl, al ; mov al, 0xf ; add rsp, 0x28 ; ret
0x000002000020f39e : sub bl, al ; mov eax, dword ptr [rcx + 0x4c] ; ret
0x0000020000039b6e : sub bl, al ; mov rax, qword ptr [rcx + 8] ; btr dword ptr [rax], edx ; ret
0x0000020000216901 : sub bl, al ; movzx eax, word ptr [rcx] ; ret
0x000002000054203f : sub bl, al ; ret
0x0000020000088db2 : sub bl, al ; xor al, al ; add rsp, 0x28 ; ret
0x00000200000f2282 : sub bl, al ; xor eax, eax ; add rsp, 0x28 ; ret
0x00000200006dc930 : sub bl, bl ; mov bl, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x000002000056f84e : sub bl, bpl ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200004609ba : sub bl, byte ptr [rax] ; ret
0x0000020000074362 : sub bl, byte ptr [rcx - 0x74b2fff0] ; ret 0x2b4c
0x000002000050e952 : sub bl, byte ptr [rdx] ; ret
0x000002000060d502 : sub bl, ch ; add dh, byte ptr [rbx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4c28
0x000002000056f84f : sub bl, ch ; add ecx, dword ptr [rax - 0x75] ; ret
0x00000200001d9e9d : sub bl, ch ; sub esi, esi ; ret
0x0000020000513326 : sub bl, dh ; movq qword ptr [rbp - 0x10], mm0 ; call 0x200001403e9
0x0000020000154757 : sub byte ptr [r10], r9b ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000745bb0 : sub byte ptr [r11 + 0x234803e1], al ; ret 0xc148
0x000002000051335f : sub byte ptr [r11 - 0x2fe71728], r9b ; ret 0x85ff
0x0000020000229575 : sub byte ptr [r11], r14b ; ret 0xba0f
0x0000020000453602 : sub byte ptr [r11], r15b ; ret
0x000002000002426a : sub byte ptr [r13 + 0x22], sil ; or qword ptr [rcx], 0xffffffffffffffff ; ret
0x00000200004ef3dd : sub byte ptr [r13 + 0x490f48c9], r8b ; ret
0x00000200003fb973 : sub byte ptr [r13 - 0x7b], r8b ; sal byte ptr [rbx + rbx*2 + 0x44], 0x3b ; ret
0x0000020000021560 : sub byte ptr [r13 - 0x7b], r9b ; ret 0x850f
0x0000020000180ea1 : sub byte ptr [r15 + rcx + 0x44], r8b ; ret 0x8948
0x00000200000936d5 : sub byte ptr [r15], cl ; add byte ptr [rcx - 0x7d], cl ; ret
0x000002000045ae4f : sub byte ptr [r15], cl ; test edi, edi ; ret 0x14
0x00000200005d20a3 : sub byte ptr [r15], r9b ; mov bh, 0x45 ; and ah, byte ptr [rsi + 0x23] ; ret 0xc166
0x00000200007457cd : sub byte ptr [r8 + 0x23], cl ; ret 0x3148
0x00000200000d84fc : sub byte ptr [r8 + 0x23], cl ; ret 0x3b49
0x00000200000a75fd : sub byte ptr [r8 + 0x23], cl ; ret 0xba48
0x00000200000be751 : sub byte ptr [r8 + 0x23], cl ; ret 0xc148
0x00000200000db47c : sub byte ptr [r8 + 0x23], r9b ; ret 0x3148
0x0000020000762774 : sub byte ptr [r8 + 0x33], cl ; ret 0x2348
0x000002000045ae4b : sub byte ptr [r8 + 0x39], r9b ; sub byte ptr [r15], cl ; test edi, edi ; ret 0x14
0x000002000014692b : sub byte ptr [r8 + 0xf], cl ; ret
0x00000200006bb7b6 : sub byte ptr [r8 + 3], cl ; ret 0x348
0x00000200001c3435 : sub byte ptr [r8 + 3], cl ; ret 0x349
0x000002000073f7ab : sub byte ptr [r8 + 3], r9b ; ret 0x8948
0x0000020000774e41 : sub byte ptr [r8 - 0x75], cl ; iretd ; call 0x20000011107
0x000002000002199c : sub byte ptr [r8 - 0x75], r9b ; add ecx, dword ptr [rbp + 0x23] ; ret
0x000002000059770f : sub byte ptr [r8 - 0x75], r9b ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200004ae7da : sub byte ptr [r8 - 0x75], r9b ; push rdi ; sub dh, dh ; ret 0x740f
0x00000200004ae1e9 : sub byte ptr [r8 - 0x75], r9b ; push rdi ; sub dh, dh ; ret 0xf0f
0x00000200000b4a58 : sub byte ptr [r8 - 0x75], r9b ; ret
0x0000020000179a06 : sub byte ptr [r8 - 0x75], r9b ; ret 0xc148
0x00000200000d84f8 : sub byte ptr [r8 - 0x75], r9b ; sub byte ptr [r8 + 0x23], cl ; ret 0x3b49
0x000002000051e236 : sub byte ptr [r8 - 0x77], r9b ; add ebx, ebp ; ret
0x00000200001307bc : sub byte ptr [r8 - 0x7d], r9b ; ret
0x00000200000dc452 : sub byte ptr [r8 - 0x80], al ; call qword ptr [rcx]
0x00000200005272e3 : sub byte ptr [r9 + 0x3b], cl ; ret
0x00000200000a48fe : sub byte ptr [r9 - 0x75], r9b ; ret 0xb948
0x00000200000564c6 : sub byte ptr [r9 - 0x7b], r9b ; ret
0x00000200000db47d : sub byte ptr [rax + 0x23], cl ; ret 0x3148
0x00000200000d84fd : sub byte ptr [rax + 0x23], cl ; ret 0x3b49
0x00000200000a75fe : sub byte ptr [rax + 0x23], cl ; ret 0xba48
0x00000200000be752 : sub byte ptr [rax + 0x23], cl ; ret 0xc148
0x00000200001d5f0e : sub byte ptr [rax + 0x33], cl ; ret 0x2348
0x000002000045ae4c : sub byte ptr [rax + 0x39], cl ; sub byte ptr [r15], cl ; test edi, edi ; ret 0x14
0x000002000020dd04 : sub byte ptr [rax + 0x3b], cl ; or byte ptr [r15], cl ; xchg eax, ebx ; ret
0x000002000020dd26 : sub byte ptr [rax + 0x3b], cl ; or byte ptr [r15], cl ; xchg eax, edi ; ret
0x000002000020dd15 : sub byte ptr [rax + 0x3b], cl ; or byte ptr [r15], cl ; xchg eax, edx ; ret
0x000002000020dd37 : sub byte ptr [rax + 0x3b], cl ; or byte ptr [r15], cl ; xchg eax, esi ; ret
0x00000200001a700a : sub byte ptr [rax + 0x3b], cl ; ret
0x00000200005720bc : sub byte ptr [rax + 0x3b], cl ; ret 0x1376
0x00000200001639b7 : sub byte ptr [rax + 0x6b], cl ; ret
0x00000200006344f9 : sub byte ptr [rax + 0xc], bh ; ret
0x000002000014692c : sub byte ptr [rax + 0xf], cl ; ret
0x0000020000221928 : sub byte ptr [rax + 3], cl ; ret
0x00000200003e53c8 : sub byte ptr [rax + 3], cl ; ret 0x348
0x00000200001c3436 : sub byte ptr [rax + 3], cl ; ret 0x349
0x000002000073f7ac : sub byte ptr [rax + 3], cl ; ret 0x8948
0x000002000052bcfe : sub byte ptr [rax + 3], cl ; ret 0xeeb
0x00000200003e53c7 : sub byte ptr [rax + 3], r9b ; ret 0x348
0x000002000002df04 : sub byte ptr [rax + 8], ah ; add byte ptr [rcx + 0x3b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000200001318d5 : sub byte ptr [rax + rax + 0x33c30000], 0xc0 ; ret
0x00000200001f4723 : sub byte ptr [rax + rax], ah ; add eax, r10d ; jmp 0x200001f4733
0x000002000051db84 : sub byte ptr [rax + rax], al ; add al, ch ; xor ebx, dword ptr [rcx] ; ret
0x00000200000740da : sub byte ptr [rax + rax], al ; add byte ptr [rax], al ; je 0x200000740ba ; mov al, 1 ; ret
0x00000200000740aa : sub byte ptr [rax + rax], al ; add byte ptr [rax], al ; jne 0x20000074107 ; xor al, al ; ret
0x000002000064044f : sub byte ptr [rax + rax], al ; add byte ptr [rbp - 0x7b], cl ; leave ; jne 0x2000064043a ; ret
0x0000020000630b9d : sub byte ptr [rax - 0x1000000], bh ; ret 0x163b
0x00000200004afcee : sub byte ptr [rax - 0x17dfdbbc], cl ; push rax ; ret
0x00000200003b592e : sub byte ptr [rax - 0x18], al ; stosd dword ptr [rdi], eax ; ret
0x00000200000f5b19 : sub byte ptr [rax - 0x3f], cl ; call 0x1ffc232a331
0x00000200004ac9c9 : sub byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x00000200000ef89e : sub byte ptr [rax - 0x73], cl ; add eax, 0x626aa ; ret
0x000002000076a98f : sub byte ptr [rax - 0x73], cl ; add eax, 0xff9e3b69 ; ret
0x00000200006b6d98 : sub byte ptr [rax - 0x73], cl ; and al, 0x20 ; call r8
0x00000200002032a0 : sub byte ptr [rax - 0x73], cl ; mov bh, bh ; ret
0x00000200004a0753 : sub byte ptr [rax - 0x73], cl ; ret
0x00000200005f4942 : sub byte ptr [rax - 0x74befabf], cl ; ret 0xe8c1
0x00000200001aaa0b : sub byte ptr [rax - 0x75], cl ; add byte ptr [rax + 0x3b], cl ; ret 0xec75
0x00000200001c9e3f : sub byte ptr [rax - 0x75], cl ; add eax, 0x105009 ; call qword ptr [rax]
0x000002000021347b : sub byte ptr [rax - 0x75], cl ; add eax, 0xbeff5 ; call rax
0x000002000002199d : sub byte ptr [rax - 0x75], cl ; add ecx, dword ptr [rbp + 0x23] ; ret
0x00000200005f5eb8 : sub byte ptr [rax - 0x75], cl ; and r8b, bpl ; ret 0x10
0x0000020000774e42 : sub byte ptr [rax - 0x75], cl ; iretd ; call 0x20000011106
0x00000200005e0147 : sub byte ptr [rax - 0x75], cl ; or byte ptr [r8 - 0x75], cl ; ret
0x0000020000597710 : sub byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x00000200001a6fb6 : sub byte ptr [rax - 0x75], cl ; pop rsp ; and al, 8 ; ret
0x00000200004ae7db : sub byte ptr [rax - 0x75], cl ; push rdi ; sub dh, dh ; ret 0x740f
0x00000200004ae1ea : sub byte ptr [rax - 0x75], cl ; push rdi ; sub dh, dh ; ret 0xf0f
0x000002000002374e : sub byte ptr [rax - 0x75], cl ; ret
0x00000200001fe2ea : sub byte ptr [rax - 0x75], cl ; ret 0x4880
0x000002000040369f : sub byte ptr [rax - 0x75], cl ; ret 0x8349
0x00000200000700bb : sub byte ptr [rax - 0x75], cl ; ret 0x8445
0x00000200003e8e03 : sub byte ptr [rax - 0x75], cl ; ret 0x8548
0x00000200003b1aa7 : sub byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200000e85ef : sub byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x0000020000033b6b : sub byte ptr [rax - 0x75], cl ; ret 0xb941
0x000002000000ff53 : sub byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200003fd21d : sub byte ptr [rax - 0x75], cl ; ret 0xf44
0x00000200000fcbb6 : sub byte ptr [rax - 0x75], cl ; retf ; call 0x200000f8de2
0x0000020000633ff2 : sub byte ptr [rax - 0x75], cl ; salc ; mov rcx, rdi ; call rax
0x0000020000531323 : sub byte ptr [rax - 0x75], cl ; sbb byte ptr [r13 - 0x75], al ; ret 0x4466
0x00000200000d84f9 : sub byte ptr [rax - 0x75], cl ; sub byte ptr [r8 + 0x23], cl ; ret 0x3b49
0x00000200000e68c7 : sub byte ptr [rax - 0x75], r9b ; ret
0x0000020000633ff1 : sub byte ptr [rax - 0x75], r9b ; salc ; mov rcx, rdi ; call rax
0x000002000051e237 : sub byte ptr [rax - 0x77], cl ; add ebx, ebp ; ret
0x000002000044055d : sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r10
0x000002000057e0c0 : sub byte ptr [rax - 0x77], cl ; and al, 0x20 ; call r15
0x00000200004b0521 : sub byte ptr [rax - 0x77], cl ; pop rdi ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000513aa1 : sub byte ptr [rax - 0x77], cl ; pop rsp ; and al, 0x20 ; call 0x20000140da9
0x0000020000471cad : sub byte ptr [rax - 0x7b], cl ; ret
0x00000200000adf8d : sub byte ptr [rax - 0x7b], cl ; ret 0xba48
0x00000200006c0350 : sub byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rdx + 0x48], 0x8b ; retf ; call rax
0x000002000041e25e : sub byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp + 4], 0x41 ; mov eax, edx ; ret
0x00000200004e00be : sub byte ptr [rax - 0x7d], cl ; and al, 0x20 ; add al, ch ; ret 0xff09
0x0000020000466e62 : sub byte ptr [rax - 0x7d], cl ; and al, 0x20 ; add al, ch ; ret 0xffc4
0x00000200006b72b6 : sub byte ptr [rax - 0x7d], cl ; cmp dword ptr [rax], eax ; jne 0x200006b72af ; xor al, al ; ret
0x00000200001307bd : sub byte ptr [rax - 0x7d], cl ; ret
0x0000020000215d25 : sub byte ptr [rax - 0x7d], cl ; ret 0x4120
0x0000020000215af5 : sub byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000020000438330 : sub byte ptr [rax - 0x7d], cl ; ret 0x4820
0x0000020000116b3f : sub byte ptr [rax - 0x7d], cl ; ret 0x4828
0x00000200000b6a3d : sub byte ptr [rax - 0x7d], cl ; ret 0x4908
0x000002000002c591 : sub byte ptr [rax - 0x7d], cl ; ret 0x4928
0x0000020000681934 : sub byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x0000020000643dae : sub byte ptr [rax - 0x7d], cl ; ret 0x4c1c
0x000002000000f69a : sub byte ptr [rax - 0x7f], cl ; ret
0x00000200006290c7 : sub byte ptr [rax - 0x7f], cl ; ret 0x7fff
0x00000200000f0e59 : sub byte ptr [rax - 0x7f], cl ; ret 0xb0
0x000002000041274b : sub byte ptr [rax - 0x7f], cl ; ret 0xb40
0x00000200000dc453 : sub byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x000002000052d82c : sub byte ptr [rax - 1], cl ; ret
0x0000020000218668 : sub byte ptr [rax - 1], cl ; ret 0x3b48
0x000002000052d82b : sub byte ptr [rax - 1], r9b ; ret
0x00000200000442eb : sub byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x00000200003b06d7 : sub byte ptr [rax], ah ; call qword ptr [rax]
0x00000200000ff4b8 : sub byte ptr [rax], al ; adc byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x35e9
0x00000200005f8d38 : sub byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, ecx ; ret
0x000002000065a1a8 : sub byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000200001f62d5 : sub byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xb841
0x0000020000111fce : sub byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043af79 : sub byte ptr [rax], al ; and qword ptr [rsp + 0x20], 0 ; call r10
0x00000200000f2fe5 : sub byte ptr [rax], al ; call rax
0x00000200000f0405 : sub byte ptr [rax], al ; dec eax ; ret
0x00000200003fb886 : sub byte ptr [rax], al ; je 0x200003fb894 ; mov dword ptr [rcx], edx ; mov al, 1 ; ret
0x000002000046dfb6 : sub byte ptr [rax], al ; je 0x2000046dfc7 ; add rax, 0x10 ; ret
0x0000020000044ae9 : sub byte ptr [rax], al ; mov dword ptr [rcx + 8], eax ; mov rax, rcx ; ret
0x00000200000443c0 : sub byte ptr [rax], al ; mov qword ptr [rdx], rax ; ret
0x0000020000044d45 : sub byte ptr [rax], al ; ret
0x000002000002426b : sub byte ptr [rbp + 0x22], dh ; or qword ptr [rcx], 0xffffffffffffffff ; ret
0x0000020000498e2f : sub byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call 0x200000c2849
0x0000020000642ce4 : sub byte ptr [rbp + 0x3b], cl ; ret
0x00000200004ef3de : sub byte ptr [rbp + 0x490f48c9], al ; ret
0x00000200000f0278 : sub byte ptr [rbp + 0x5b], bl ; ret
0x0000020000463014 : sub byte ptr [rbp + 0xf], cl ; ret 0x8d48
0x000002000044cb2d : sub byte ptr [rbp + 7], dh ; cmp qword ptr [rcx + 0x30], r8 ; jne 0x2000044cb46 ; ret
0x00000200003dd65c : sub byte ptr [rbp + rcx*4 + 0x4d], cl ; rol byte ptr [rbp + rcx*4 + 0x46], 1 ; ret 0x44c7
0x00000200001e3a45 : sub byte ptr [rbp - 0x74f58740], al ; ret
0x000002000003954f : sub byte ptr [rbp - 0x75], al ; inc byte ptr [rbp - 0x76] ; ret 0x8b44
0x00000200001d49a6 : sub byte ptr [rbp - 0x75], cl ; adc bh, bh ; ret
0x000002000040fac7 : sub byte ptr [rbp - 0x75], cl ; ret
0x00000200000f1347 : sub byte ptr [rbp - 0x75], cl ; ret 0x8948
0x00000200000a64d7 : sub byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x000002000009e5ff : sub byte ptr [rbp - 0x75], cl ; ret 0x8d48
0x0000020000543385 : sub byte ptr [rbp - 0x76], al ; ret
0x00000200003fb974 : sub byte ptr [rbp - 0x7b], al ; sal byte ptr [rbx + rbx*2 + 0x44], 0x3b ; ret
0x0000020000021561 : sub byte ptr [rbp - 0x7b], cl ; ret 0x850f
0x000002000074453f : sub byte ptr [rbx + 0x234803e1], al ; ret 0xc148
0x000002000074453e : sub byte ptr [rbx + 0x234803e1], r8b ; ret 0xc148
0x000002000010d36f : sub byte ptr [rbx + 0x5f282444], cl ; pop rsi ; ret
0x00000200001449f3 : sub byte ptr [rbx + 0x5f], bl ; pop r12 ; add rsp, 8 ; ret
0x0000020000740d24 : sub byte ptr [rbx + 0x8894108], cl ; ret
0x000002000062c2fa : sub byte ptr [rbx + 6], dh ; mov eax, 0xc0000004 ; ret
0x000002000062c3aa : sub byte ptr [rbx + 6], dh ; mov eax, 0xc0000095 ; ret
0x000002000020047c : sub byte ptr [rbx + r8 + 0x79], al ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000020047d : sub byte ptr [rbx + rax + 0x79], al ; or byte ptr [rax - 0x7d], cl ; ret
0x000002000013db5f : sub byte ptr [rbx + rcx*4 + 0x55], al ; ret
0x000002000066aa0c : sub byte ptr [rbx + rcx*4 - 0x3b], cl ; mov dword ptr [rsp + 0x20], r15d ; call rdi
0x00000200004c8cc9 : sub byte ptr [rbx + rcx*4 - 0x60], al ; in al, 1 ; add byte ptr [rax], al ; call rdi
0x00000200001f64a3 : sub byte ptr [rbx + rdi + 0x41], cl ; and byte ptr [rdx + 3], dh ; xor al, al ; ret
0x000002000012ec48 : sub byte ptr [rbx - 0x10], dh ; mov rsp, r11 ; pop rbp ; ret
0x0000020000211051 : sub byte ptr [rbx - 0x10], dh ; mov rsp, r11 ; pop rdi ; ret
0x00000200001cb93c : sub byte ptr [rbx - 0x168a003e], al ; xor eax, eax ; ret
0x0000020000513360 : sub byte ptr [rbx - 0x2fe71728], cl ; ret 0x85ff
0x00000200006679a4 : sub byte ptr [rbx - 0x74bbd33d], al ; ret
0x00000200000ab389 : sub byte ptr [rbx - 0x7af0f808], al ; ret 0xfffd
0x000002000067adf1 : sub byte ptr [rbx], al ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0xd], cl ; ret
0x000002000050a037 : sub byte ptr [rbx], al ; ret 0x518d
0x0000020000453603 : sub byte ptr [rbx], bh ; ret
0x00000200004c0d78 : sub byte ptr [rbx], bl ; ret 0xebff
0x00000200004b3801 : sub byte ptr [rbx], cl ; add rdx, r8 ; jmp rdx
0x000002000010c609 : sub byte ptr [rbx], dh ; leave ; call rax
0x000002000062d357 : sub byte ptr [rbx], dh ; ret 0x6c89
0x0000020000229576 : sub byte ptr [rbx], dh ; ret 0xba0f
0x000002000049920b : sub byte ptr [rbx], dh ; rol byte ptr [rbp + 0x33], cl ; shr al, 0x2a ; xchg eax, esi ; ret 0x48ff
0x00000200000a69d9 : sub byte ptr [rcx + 0x23], cl ; ret
0x0000020000034437 : sub byte ptr [rcx + 0x2b], al ; ret
0x00000200005272e4 : sub byte ptr [rcx + 0x3b], cl ; ret
0x00000200003b6198 : sub byte ptr [rcx + 0x48202454], cl ; mov edx, ebx ; call r10
0x00000200006b842a : sub byte ptr [rcx + 0x4920244c], cl ; mov ecx, ebp ; call rax
0x00000200006b9ed4 : sub byte ptr [rcx + 0x4920244c], cl ; mov ecx, esi ; call rax
0x000002000004cb86 : sub byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000026241 : sub byte ptr [rcx + 0x5e], al ; ret
0x000002000049e6d6 : sub byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rbx ; ret
0x0000020000753643 : sub byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200004b9ea5 : sub byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rbx ; ret
0x00000200000badb9 : sub byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; ret
0x0000020000026877 : sub byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x00000200004451cf : sub byte ptr [rcx + 0x5f], al ; pop rsi ; ret
0x00000200003daa2e : sub byte ptr [rcx + 0xf], al ; mov dh, 0x47 ; add dword ptr [rbx], ebp ; ret
0x00000200000dcbae : sub byte ptr [rcx + 0xfffe1], al ; add byte ptr [rax - 0x7f], cl ; ret 0xfff
0x000002000064de51 : sub byte ptr [rcx + 3], al ; ret 0x4489
0x000002000064deea : sub byte ptr [rcx + 3], al ; ret 0xca8b
0x0000020000223e39 : sub byte ptr [rcx + 3], cl ; ret 0xc183
0x000002000012f031 : sub byte ptr [rcx + 7], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003af270 : sub byte ptr [rcx + rcx*4 + 0x15], cl ; ret
0x00000200006c07bd : sub byte ptr [rcx + rcx*4 + 0x4c], al ; and al, 0x20 ; mov r9, rbx ; call rax
0x00000200004afe2a : sub byte ptr [rcx + rcx*4 + 0x6c], al ; and al, 0x20 ; call rsi
0x00000200001c6247 : sub byte ptr [rcx + rcx*4 + 1], cl ; ret
0x0000020000082c91 : sub byte ptr [rcx - 0x75], al ; push rdx ; sub al, 3 ; ret 0xff25
0x000002000012de70 : sub byte ptr [rcx - 0x75], al ; ret
0x000002000022e71a : sub byte ptr [rcx - 0x75], al ; ret 0xba41
0x00000200000026f9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000002745 ; pop rsi ; ret
0x00000200000027ef : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000002858 ; ret
0x0000020000009e44 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000009ead ; ret
0x000002000001a258 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000001a2a6 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000002076d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000207d4 ; ret
0x0000020000029713 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000002977a ; ret
0x000002000002a82f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000002a898 ; ret
0x0000020000035f67 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000035fd0 ; ret
0x0000020000038dd3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000038e3a ; ret
0x0000020000041fd9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000042040 ; ret
0x0000020000047adc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000047b28 ; pop rsi ; ret
0x0000020000055910 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000055977 ; ret
0x000002000006ed0e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000006ed77 ; ret
0x0000020000084044 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000840ab ; ret
0x000002000008a076 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000008a0df ; ret
0x00000200000e33fe : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000e3467 ; ret
0x00000200000ee8a1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000ee90a ; ret
0x00000200000efd8b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000efdf4 ; ret
0x00000200000f1dbc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f1e23 ; ret
0x00000200000f6840 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f68a7 ; ret
0x0000020000105032 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000105099 ; ret
0x0000020000107f63 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000107faf ; pop rsi ; ret
0x000002000010ff87 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000010ffee ; ret
0x00000200001121a5 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011220c ; ret
0x0000020000113dd4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000113e3d ; ret
0x0000020000117539 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001175a0 ; ret
0x0000020000117fa2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000117ff0 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000127ece : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000127f1c ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000013233d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001323a4 ; ret
0x000002000013a6cc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013a733 ; ret
0x000002000013cde1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000013ce4a ; ret
0x00000200001aafa2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ab009 ; ret
0x00000200001ac1d9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ac228 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ac3f5 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ac443 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001ae709 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ae772 ; ret
0x00000200001aeb3e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001aeba5 ; ret
0x00000200001b0cab : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b0cf7 ; pop rsi ; ret
0x00000200001b8ca7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b8cf5 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001bc579 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bc5c5 ; pop rdi ; ret
0x00000200001bcca7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001bcd0e ; ret
0x00000200001c038b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c03f4 ; ret
0x00000200001c2caa : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c2d11 ; ret
0x00000200001c5fd2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c6039 ; ret
0x00000200001c7884 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c78eb ; ret
0x00000200001c9d38 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001c9da1 ; ret
0x00000200001cb456 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001cb4bf ; ret
0x00000200001cd1ed : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001cd256 ; ret
0x00000200001cf038 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001cf0a1 ; ret
0x00000200001d690c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d6975 ; ret
0x00000200001dcd8e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001dcdf5 ; ret
0x00000200001e17cf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e1836 ; ret
0x00000200001e1a21 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e1a70 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001e1ca1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e1ced ; pop rsi ; ret
0x00000200001e377d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e37e4 ; ret
0x00000200001e479d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e4806 ; ret
0x00000200001eaa17 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001eaa63 ; pop rsi ; ret
0x00000200001eae18 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001eae7f ; ret
0x00000200001eb1da : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001eb241 ; ret
0x00000200001eb481 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001eb4cf ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001ebd07 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ebd6e ; ret
0x00000200001edf93 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001edffa ; ret
0x00000200001ee0fa : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ee148 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001ee1dc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ee243 ; ret
0x00000200001ef169 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ef1d2 ; ret
0x00000200001f15ff : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001f1666 ; ret
0x00000200001f171e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001f176a ; pop rsi ; ret
0x00000200001fe456 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fe4bd ; ret
0x0000020000205a8e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000205af5 ; ret
0x0000020000213a92 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000213ade ; pop rsi ; ret
0x0000020000214efe : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000214f65 ; ret
0x000002000021c0ce : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000021c137 ; ret
0x000002000021ea19 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000021ea82 ; ret
0x000002000039aa88 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039aaef ; ret
0x000002000039bcd1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039bd1d ; pop rsi ; ret
0x000002000039be8b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039beda ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003a65cb : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003a6634 ; ret
0x00000200003ac609 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ac670 ; ret
0x00000200003af613 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003af67a ; ret
0x00000200003b27ef : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b283e ; pop rsi ; pop r12 ; pop rdi ; ret
0x00000200003c530f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003c535e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003c8580 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003c85cf ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003ce05c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ce0a8 ; pop rsi ; ret
0x00000200003dce48 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003dceaf ; ret
0x00000200003dd214 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003dd260 ; pop rsi ; ret
0x00000200003e735e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e73c5 ; ret
0x00000200003f69d7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f6a23 ; pop rdi ; ret
0x00000200003fa69b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fa6e7 ; pop rsi ; ret
0x00000200004009ac : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000400a13 ; ret
0x0000020000405a09 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000405a70 ; ret
0x000002000040c805 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040c851 ; pop rsi ; ret
0x000002000040dfa1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040dfed ; pop rdi ; ret
0x000002000040f899 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040f902 ; ret
0x0000020000411e6d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000411ebc ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004126ee : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000412755 ; ret
0x0000020000416558 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004165a4 ; pop rsi ; ret
0x000002000041bdd4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041be3d ; ret
0x000002000041cadf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041cb46 ; ret
0x000002000041efd4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041f03b ; ret
0x0000020000424a06 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000424a52 ; pop rdi ; ret
0x000002000042a777 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042a7de ; ret
0x000002000042a98f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042a9f8 ; ret
0x00000200004383d5 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000043843e ; ret
0x0000020000443fc1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044400d ; pop rsi ; ret
0x00000200004445dd : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044462c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000044cac3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044cb0f ; pop rsi ; ret
0x000002000044e2e7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044e335 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000451810 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000451879 ; ret
0x0000020000454dc4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000454e2d ; ret
0x0000020000461609 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000461672 ; ret
0x00000200004644b3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046451a ; ret
0x000002000046670b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000466772 ; ret
0x0000020000469ac9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000469b30 ; ret
0x0000020000469b99 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000469c00 ; ret
0x0000020000472402 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047244e ; pop rsi ; ret
0x0000020000479d17 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000479d80 ; ret
0x000002000047e709 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047e758 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000047ef24 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047ef70 ; pop rsi ; ret
0x000002000049efcd : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000049f019 ; pop rsi ; ret
0x00000200004bf31a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004bf366 ; pop rdi ; ret
0x00000200004c4008 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c406f ; ret
0x00000200004cb1f6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004cb242 ; pop rdi ; ret
0x00000200004d03c6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d042d ; ret
0x00000200004d0e96 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d0eff ; ret
0x00000200004d1191 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d11f8 ; ret
0x00000200004d386e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d38d5 ; ret
0x00000200004d5b3a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d5ba1 ; ret
0x00000200004e0d1c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e0d68 ; pop rsi ; ret
0x00000200004e31b1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e321a ; ret
0x00000200004e3aca : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e3b33 ; ret
0x00000200004e5e9f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e5f06 ; ret
0x00000200004ebd62 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ebdc9 ; ret
0x00000200004ec0a4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ec10b ; ret
0x00000200004ed752 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ed79e ; pop rsi ; ret
0x00000200004f2323 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f2371 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004f31db : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f3229 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004f5b6e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f5bd5 ; ret
0x00000200004f76cd : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f7734 ; ret
0x00000200004f7c02 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f7c69 ; ret
0x00000200004f9125 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f9171 ; pop rsi ; ret
0x00000200004f9699 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f9700 ; ret
0x00000200004fcc6a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fccb6 ; pop rsi ; ret
0x00000200004fd2e4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200004fd332 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005048cf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000504936 ; ret
0x0000020000507aaf : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000507b16 ; ret
0x000002000050b9dc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050ba43 ; ret
0x000002000050e333 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050e39c ; ret
0x000002000050f306 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050f36d ; ret
0x0000020000511a35 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000511a9c ; ret
0x0000020000511aa3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000511af1 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000513c0b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000513c74 ; ret
0x000002000051477d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005147e4 ; ret
0x000002000051a01e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051a085 ; ret
0x000002000051a9c8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051aa16 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005237a0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000523807 ; ret
0x000002000052c38f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052c3f8 ; ret
0x0000020000531da7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000531e10 ; ret
0x0000020000533875 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005338dc ; ret
0x000002000053399b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000533a04 ; ret
0x0000020000533a5a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000533ac3 ; ret
0x0000020000534454 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005344bb ; ret
0x000002000053ac00 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053ac67 ; ret
0x000002000053d163 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053d1ca ; ret
0x0000020000542303 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000054236a ; ret
0x0000020000543779 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005437e0 ; ret
0x00000200005445ef : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000544656 ; ret
0x0000020000544815 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000544861 ; pop rsi ; ret
0x00000200005459ed : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000545a54 ; ret
0x0000020000545cd2 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000545d20 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005d8cc3 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005d8d2a ; ret
0x00000200005dadb4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005dae00 ; pop rdi ; ret
0x00000200005e25ec : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e2655 ; ret
0x00000200005e362b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e3692 ; ret
0x00000200005e49aa : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e49f8 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005e927c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e92e5 ; ret
0x00000200005ef8bc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005ef925 ; ret
0x00000200005f1227 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f128e ; ret
0x00000200005f3406 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f346d ; ret
0x00000200005f35ea : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f3636 ; pop rdi ; ret
0x00000200005fcf16 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fcf62 ; pop rsi ; ret
0x00000200005fd040 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fd08c ; pop rsi ; ret
0x00000200005fe492 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fe4f9 ; ret
0x00000200005fe9a7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fe9f3 ; pop rdi ; ret
0x0000020000601c46 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000601cad ; ret
0x00000200006060f7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060615e ; ret
0x000002000060915f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006091c6 ; ret
0x0000020000610392 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006103f9 ; ret
0x0000020000612e1a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000612e68 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000612fa1 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000613008 ; ret
0x0000020000613151 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006131b8 ; ret
0x00000200006144e6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061454d ; ret
0x0000020000616157 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006161be ; ret
0x0000020000622961 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006229c8 ; ret
0x000002000062355d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006235c6 ; ret
0x0000020000625681 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006256ea ; ret
0x000002000062f0e8 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062f134 ; pop rsi ; ret
0x000002000062ff45 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062ffae ; ret
0x0000020000637139 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006371a0 ; ret
0x00000200006372ed : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000637354 ; ret
0x000002000063a8fc : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063a965 ; ret
0x000002000063f426 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063f472 ; pop rdi ; ret
0x000002000064024c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006402b3 ; ret
0x000002000064a08d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064a0f4 ; ret
0x000002000064ba2e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064ba7a ; pop rsi ; ret
0x000002000065802a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000658091 ; ret
0x000002000065dfc0 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065e029 ; ret
0x000002000065f7eb : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065f852 ; ret
0x0000020000663e94 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000663efb ; ret
0x0000020000666735 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066679c ; ret
0x00000200006676d7 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000667725 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006687ca : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000668833 ; ret
0x000002000066bf32 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066bf99 ; ret
0x000002000066c115 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066c163 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000676fe6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000677032 ; pop rsi ; ret
0x000002000067ec90 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067ecf9 ; ret
0x000002000067f41b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067f482 ; ret
0x0000020000685b53 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000685b9f ; pop rsi ; ret
0x000002000068c703 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068c751 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000068cffa : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068d061 ; ret
0x000002000068f902 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068f950 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000693d76 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000693dc2 ; pop rsi ; ret
0x0000020000693e75 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000693ec1 ; pop rsi ; ret
0x0000020000693f5d : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000693fa9 ; pop rsi ; ret
0x0000020000694026 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069408d ; ret
0x00000200006940ea : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000694151 ; ret
0x000002000069c678 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069c6c4 ; pop rdi ; ret
0x00000200006b3118 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006b317f ; ret
0x00000200006b5e8b : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006b5ef4 ; ret
0x00000200006bf8db : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006bf944 ; ret
0x00000200006c1483 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c14ec ; ret
0x00000200006c1553 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c15bc ; ret
0x00000200006c3938 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006c39a1 ; ret
0x00000200006ca478 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200006ca4c4 ; pop rsi ; ret
0x00000200007463d5 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000074643c ; ret
0x000002000074ca50 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000074cab9 ; ret
0x000002000075058f : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007505f6 ; ret
0x000002000075093c : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x200007509a3 ; ret
0x0000020000752e8a : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000752ef1 ; ret
0x00000200007578bb : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000757922 ; ret
0x00000200007589d9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000758a40 ; ret
0x0000020000765e6e : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000765eba ; pop rsi ; ret
0x00000200007666f4 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000076675b ; ret
0x000002000076b287 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000076b2f0 ; ret
0x000002000076b7f6 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000076b85d ; ret
0x000002000076ca09 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000076ca70 ; ret
0x000002000076ec48 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x2000076ec94 ; pop rsp ; ret
0x0000020000780fd9 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000781040 ; ret
0x00000200007816fe : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000781765 ; ret
0x0000020000782b55 : sub byte ptr [rcx - 0x75], cl ; jrcxz 0x20000782bbc ; ret
0x00000200004ae30a : sub byte ptr [rcx - 0x75], cl ; push rsi ; sub dh, dh ; ret 0xf0f
0x0000020000109b4e : sub byte ptr [rcx - 0x75], cl ; ret
0x00000200000a48ff : sub byte ptr [rcx - 0x75], cl ; ret 0xb948
0x00000200001dfc87 : sub byte ptr [rcx - 0x75], cl ; ret 0xc148
0x00000200004ae309 : sub byte ptr [rcx - 0x75], r9b ; push rsi ; sub dh, dh ; ret 0xf0f
0x00000200000f3c29 : sub byte ptr [rcx - 0x77], al ; sub al, 0xeb ; ret
0x00000200001a3538 : sub byte ptr [rcx - 0x77], cl ; and dil, dil ; ret 0x3b41
0x00000200001a34be : sub byte ptr [rcx - 0x77], cl ; and dil, dil ; ret 0x533b
0x000002000054348f : sub byte ptr [rcx - 0x78], al ; or dword ptr [rbp - 0x76], eax ; ret
0x00000200000564c7 : sub byte ptr [rcx - 0x7b], cl ; ret
0x00000200000a4adf : sub byte ptr [rcx - 0x7b], cl ; ret 0x850f
0x00000200006816bd : sub byte ptr [rcx - 1], al ; ret 0x3b45
0x000002000013ff99 : sub byte ptr [rcx - 1], al ; ret 0x8944
0x000002000010773c : sub byte ptr [rcx], al ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005bb531 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; mov cl, 0x11 ; call rax
0x000002000050523b : sub byte ptr [rcx], al ; add byte ptr [rax], al ; pop r12 ; pop rdi ; pop rbx ; pop rbp ; ret
0x00000200001c383c : sub byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000020000740cd4 : sub byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000200004f971c : sub byte ptr [rcx], cl ; add byte ptr [rbx + rcx*4 + 0x4b], al ; xor al, 0x8b ; ret 0x6b48
0x00000200000d8e27 : sub byte ptr [rdi + 0x5b], bl ; ret
0x0000020000019d43 : sub byte ptr [rdi + 0x5e], bl ; pop rbp ; pop rbx ; ret
0x000002000010d373 : sub byte ptr [rdi + 0x5e], bl ; ret
0x000002000000878d : sub byte ptr [rdi + rcx + 0x20], al ; mov byte ptr [rbp + 0xf], 0x22 ; ret
0x00000200001e9c05 : sub byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000218663 : sub byte ptr [rdi + rcx + 0x43], cl ; sub byte ptr [rax - 1], cl ; ret 0x3b48
0x0000020000180ea2 : sub byte ptr [rdi + rcx + 0x44], al ; ret 0x8948
0x00000200001e3827 : sub byte ptr [rdi + rcx - 0x4a], al ; ret 0xc141
0x00000200003abd54 : sub byte ptr [rdi - 0x27], bh ; dec dword ptr [rax - 0x7f] ; ret
0x00000200005d6b75 : sub byte ptr [rdi - 0x30], al ; inc dword ptr [rbx - 0x2fb857f3] ; jmp qword ptr [rax]
0x000002000040dbcb : sub byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x00000200000936d6 : sub byte ptr [rdi], cl ; add byte ptr [rcx - 0x7d], cl ; ret
0x000002000020de11 : sub byte ptr [rdi], cl ; lahf ; ret
0x00000200005d20a4 : sub byte ptr [rdi], cl ; mov bh, 0x45 ; and ah, byte ptr [rsi + 0x23] ; ret 0xc166
0x00000200001fc617 : sub byte ptr [rdi], cl ; mov bh, 5 ; ret
0x000002000046c01e : sub byte ptr [rdi], cl ; mov dh, 0xcb ; mov qword ptr [rsp + 0x20], rsi ; call qword ptr [rsi]
0x000002000020ddfd : sub byte ptr [rdi], cl ; popfq ; ret
0x000002000020de07 : sub byte ptr [rdi], cl ; pushfq ; ret
0x000002000020de1b : sub byte ptr [rdi], cl ; sahf ; ret
0x000002000045ae50 : sub byte ptr [rdi], cl ; test edi, edi ; ret 0x14
0x000002000003180a : sub byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x000002000044e219 : sub byte ptr [rdi], cl ; xchg eax, ebp ; ror byte ptr [rcx - 0x75], 0xe3 ; pop rdi ; ret
0x000002000020de2f : sub byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000200000ad584 : sub byte ptr [rdi], cl ; xchg edx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200000ad583 : sub byte ptr [rdi], r9b ; xchg edx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000002000049a274 : sub byte ptr [rdx - 0x3274b601], bh ; call 0x200000c23c9
0x0000020000105f4c : sub byte ptr [rdx - 0x7cb70005], 0xc4 ; pop rbx ; ret
0x00000200005be5c7 : sub byte ptr [rdx - 0x7cbe0012], bl ; ret 0xc7f0
0x00000200006bb9c4 : sub byte ptr [rdx], al ; add byte ptr [rax + 0x3b], cl ; ret 0x1474
0x000002000004600e : sub byte ptr [rdx], al ; je 0x20000046020 ; bts qword ptr [rcx], 0xc ; ret
0x00000200004cb944 : sub byte ptr [rdx], bh ; ret 0x83ff
0x00000200004fe5d8 : sub byte ptr [rdx], bl ; add byte ptr [rcx - 0x2f], cl ; call 0x1ffc3c1a3d3
0x0000020000154758 : sub byte ptr [rdx], cl ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000485e5d : sub byte ptr [rip - 0x148c0000], dl ; mov al, 1 ; ret
0x00000200001ab7b2 : sub byte ptr [rip - 0x3eb8f100], bl ; ret
0x000002000049c1bb : sub byte ptr [rip - 0x7bf10000], dl ; ret
0x000002000019049c : sub byte ptr [rip - 0x7cb80000], al ; ret
0x0000020000419265 : sub byte ptr [rip - 0x7ffffffb], ah ; pop r14 ; ret
0x00000200000a1dc2 : sub byte ptr [rsi + 0x23], ah ; ret 0x3b66
0x0000020000645e5e : sub byte ptr [rsi + 0x3b], ah ; ret 0x575
0x00000200000b1714 : sub byte ptr [rsi + 0x5b], bl ; ret
0x00000200003eff5c : sub byte ptr [rsi + 0x5d], bl ; ret
0x00000200000d1d33 : sub byte ptr [rsi + 0xc], al ; add dh, dh ; ret
0x0000020000625172 : sub byte ptr [rsi], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000020000038737 : sub byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000002000074b5f4 : sub byte ptr [rsi], bh ; ret
0x00000200002181d0 : sub byte ptr [rsp + 0x40], bh ; mov rsp, r11 ; pop rbp ; ret
0x0000020000445b28 : sub byte ptr [rsp + rax*2], dl ; add rcx, r9 ; jmp rcx
0x00000200000bc7c0 : sub ch, byte ptr [rax + rax] ; je 0x200000bc7d1 ; mov eax, dword ptr [rax + 8] ; ret
0x0000020000686305 : sub cl, 0x30 ; mov byte ptr [rdx], cl ; mov al, 1 ; ret
0x0000020000697baf : sub cl, 0x73 ; add al, 0 ; add byte ptr [rdx], ah ; ret 0x450f
0x0000020000598851 : sub cl, 0xbb ; mov ecx, 0x8b4cffe8 ; ret
0x0000020000402812 : sub cl, 0xea ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xf000
0x00000200004b6cc5 : sub cl, al ; push qword ptr [rdx] ; ret
0x00000200004f68cc : sub cl, byte ptr [rax - 0x3f] ; cli ; add ecx, dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000073322 : sub cl, byte ptr [rax - 0x73] ; add eax, 0xdec46 ; ret
0x00000200000e83bf : sub cl, byte ptr [rax - 0x73] ; add qword ptr [r8 - 0x75], rcx ; ret
0x00000200000efc92 : sub cl, byte ptr [rax - 0x74b70009] ; ret
0x000002000021c222 : sub cl, byte ptr [rax - 0x75] ; ret
0x0000020000008f19 : sub cl, byte ptr [rax - 0x75] ; ret 0x40f6
0x0000020000643f9a : sub cl, byte ptr [rax - 0x7d] ; ret 0x4d02
0x000002000049e638 : sub cl, byte ptr [rax - 0x7d] ; ret 0xf602
0x0000020000402d1d : sub cl, byte ptr [rax] ; mov eax, r9d ; ret
0x000002000049a9b2 : sub cl, byte ptr [rax] ; out 0xff, al ; xor edx, edx ; call 0x200000c2849
0x00000200001e79a8 : sub cl, byte ptr [rbx + rcx*4 - 0x3e] ; lea edx, dword ptr [rbx + 0x1e] ; call r9
0x000002000012a0e0 : sub cl, byte ptr [rcx + 0x3b] ; ret 0x820f
0x00000200003f1686 : sub cl, byte ptr [rcx + 3] ; ret
0x00000200000217c8 : sub cl, byte ptr [rcx - 0x75] ; ret
0x0000020000583436 : sub cl, byte ptr [rcx - 0x7d] ; ret 0x4d02
0x0000020000016cae : sub cl, byte ptr [rsp + rdx] ; add rsp, 0x28 ; ret
0x000002000039f650 : sub cl, ch ; cli ; ret
0x000002000017adf1 : sub cl, ch ; in eax, dx ; test ch, dh ; dec dword ptr [rax - 0x75] ; ret
0x000002000059b361 : sub cl, ch ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200005b9a95 : sub cl, ch ; mov ch, 0xb2 ; in eax, dx ; dec dword ptr [rax + 0x2b] ; ret 0x8949
0x000002000017879c : sub cl, ch ; ret 0x7f1
0x0000020000768cab : sub cl, ch ; rol dword ptr [rcx - 0x68], cl ; call rcx
0x00000200003f383a : sub cl, ch ; xor al, 0x87 ; ret
0x00000200004f5ff4 : sub cl, cl ; ret 0x48ff
0x000002000064f800 : sub dh, al ; add byte ptr [rax], al ; ret
0x000002000064f7e2 : sub dh, al ; add byte ptr [rcx], al ; ret
0x000002000049f512 : sub dh, byte ptr [rbx] ; ret 0x48ff
0x00000200003cd9d6 : sub dh, byte ptr [rip + 0x2348ffc6] ; ret
0x000002000058f6c7 : sub dh, byte ptr [rsi - 9] ; dec dword ptr [rax - 0x75] ; ret
0x000002000003cea2 : sub dh, dh ; ret
0x00000200004ae7df : sub dh, dh ; ret 0x740f
0x000002000000ac70 : sub dh, dh ; ret 0x7501
0x000002000001c0f5 : sub dh, dh ; ret 0x7503
0x00000200000b757e : sub dh, dh ; ret 0x7504
0x0000020000006e5d : sub dh, dh ; ret 0xf02
0x000002000011f11a : sub dh, dh ; ret 0xf03
0x00000200004ae1ee : sub dh, dh ; ret 0xf0f
0x00000200004fdb1a : sub dh, dh ; ret 0xf20
0x00000200003b49e4 : sub dh, dh ; ret 0xf40
0x00000200004c6388 : sub dh, dh ; rol dword ptr [rcx], 0x75 ; mov qword ptr [r9], r10 ; ret
0x00000200004ee533 : sub dl, ah ; dec dword ptr [rax - 0x75] ; je 0x200004ee567 ; js 0x200004ee4d0 ; ret
0x000002000006f248 : sub dl, bl ; adc byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000077c4c0 : sub dl, byte ptr [rax - 0x74b70002] ; ret 0x2b49
0x0000020000490a02 : sub dl, byte ptr [rcx] ; ret
0x000002000074a273 : sub dl, byte ptr [rdi + rdi*8 - 0x64fa76b8] ; push rax ; ret
0x00000200000eaf97 : sub dword ptr [r8], r8d ; call r8
0x00000200000ead73 : sub dword ptr [r8], r8d ; call rax
0x00000200001661fd : sub dword ptr [rax + 0x3b], ecx ; ret
0x00000200005eab35 : sub dword ptr [rax + 0x63], ecx ; ret 0x694c
0x00000200004942a3 : sub dword ptr [rax + rax - 0x3f010000], 0x3b ; ret 0xed76
0x000002000051a7e4 : sub dword ptr [rax - 0x18000000], -0x2e ; ret
0x0000020000588d7b : sub dword ptr [rax - 0x73], ecx ; sal byte ptr [r11], 0xd2 ; call 0x20000635035
0x00000200000c09f7 : sub dword ptr [rax - 0x75], ecx ; or byte ptr [r8 - 0x75], cl ; ret
0x00000200006c134e : sub dword ptr [rax - 0x75], ecx ; ret
0x0000020000782ed7 : sub dword ptr [rax - 0x75], ecx ; ret 0x8348
0x00000200005bf46a : sub dword ptr [rax - 0x75], ecx ; ret 0xc933
0x00000200001b6c7c : sub dword ptr [rax - 0x75], ecx ; ret 0xffb9
0x000002000049d553 : sub dword ptr [rax - 0x75], ecx ; retf ; call 0x200000c1b37
0x00000200004d0e4b : sub dword ptr [rax - 0x7d], ecx ; ret
0x000002000010ef2b : sub dword ptr [rax - 0x7d], ecx ; ret 0x4904
0x000002000057d753 : sub dword ptr [rax - 0x7fffffec], edi ; ret
0x0000020000134f19 : sub dword ptr [rax - 1], ecx ; ret 0xe484
0x0000020000445b27 : sub dword ptr [rax], 0x49004454 ; add ecx, ecx ; jmp rcx
0x00000200004206f6 : sub dword ptr [rax], eax ; add al, ch ; xchg byte ptr [rdi], cl ; ret
0x000002000005ecab : sub dword ptr [rax], eax ; add bl, ch ; ret 0x8948
0x000002000003fcfc : sub dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0x850f
0x0000020000044d25 : sub dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000002000005e4e5 : sub dword ptr [rax], eax ; add dword ptr [rbp - 0x75], ecx ; ret 0xc2eb
0x0000020000061ea6 : sub dword ptr [rax], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005f907 : sub dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000109fae : sub dword ptr [rax], eax ; add rsp, 0x68 ; pop rdi ; pop rbx ; ret
0x00000200003d728d : sub dword ptr [rax], eax ; call 0x20000671164
0x00000200000eaf98 : sub dword ptr [rax], eax ; call r8
0x00000200000ea2ac : sub dword ptr [rax], eax ; call rax
0x00000200000262d1 : sub dword ptr [rax], eax ; jb 0x200000262e2 ; add rsp, 0x28 ; ret
0x000002000003b972 : sub dword ptr [rax], eax ; jb 0x2000003b984 ; mov al, 1 ; ret
0x0000020000032468 : sub dword ptr [rax], eax ; je 0x2000003246a ; mov rax, qword ptr [rdx + 0x40] ; ret
0x00000200000f03f5 : sub dword ptr [rax], eax ; mov eax, dword ptr [rcx + rax*4] ; ret
0x000002000005bd26 : sub dword ptr [rax], eax ; ret
0x00000200001a9180 : sub dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000007cf21 : sub dword ptr [rax], edx ; add bh, bh ; ret
0x00000200005da333 : sub dword ptr [rax], esp ; in al, -1 ; add rsp, 0x48 ; ret
0x00000200000eae66 : sub dword ptr [rax], r8d ; call rax
0x000002000002c015 : sub dword ptr [rbp + 0x13], ecx ; add byte ptr [rcx + 3], al ; ret 0xb70f
0x00000200000123b3 : sub dword ptr [rbp + 0x3b48002e], ebx ; ret 0x850f
0x000002000075d92b : sub dword ptr [rbx], ebx ; ret 0x48ff
0x000002000073deda : sub dword ptr [rcx + 3], eax ; ror dword ptr [rax + 0x63], cl ; ret 0x8d48
0x0000020000538a63 : sub dword ptr [rcx - 0x47], esi ; dec dword ptr [rax + 0x63] ; ret
0x00000200005720ab : sub dword ptr [rcx - 0x75], eax ; sbb byte ptr [rcx + 0x3b], al ; ret 0x2075
0x0000020000166097 : sub dword ptr [rcx - 0x7f], eax ; call qword ptr [rdi]
0x000002000068bbb8 : sub dword ptr [rcx - 0x80], eax ; loopne 0x2000068bbc6 ; mov al, r8b ; ret
0x00000200003aad9a : sub dword ptr [rcx - 0xa], eax ; ret 0x7401
0x000002000039f256 : sub dword ptr [rcx - 0xa], eax ; ret 0x7510
0x0000020000699cf9 : sub dword ptr [rcx - 1], eax ; ret 0x8348
0x0000020000138e82 : sub dword ptr [rcx - 1], ecx ; ret
0x00000200000dbce4 : sub dword ptr [rcx - 9], ecx ; ret 0x3000
0x00000200000156bb : sub dword ptr [rcx], ecx ; ret
0x00000200000c0d8c : sub dword ptr [rcx], esp ; add byte ptr [rbx + rcx*4 - 0x5c], cl ; ret
0x00000200004d825e : sub dword ptr [rdi], ecx ; add byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000200004583c3 : sub dword ptr [rdi], ecx ; xchg dword ptr [rcx], ecx ; out 0x14, al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x000002000064fa38 : sub dword ptr [rdx - 0x75], ecx ; call qword ptr [rax]
0x000002000051fc8b : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000049b2e3 : sub dword ptr [rdx], ebx ; ret 0x84ff
0x000002000005bd22 : sub dword ptr [rip + 0x29f4c0], eax ; ret
0x00000200000075ae : sub dword ptr [rip + 0x2f3bf4], edx ; ret
0x00000200000075a6 : sub dword ptr [rip + 0x2f3c04], edx ; ret
0x0000020000080c13 : sub dword ptr [rip + 0x48000002], -0x3f ; call qword ptr [rax]
0x00000200001ab691 : sub dword ptr [rip + 0x48047400], ebx ; mov eax, ecx ; ret
0x0000020000069be7 : sub dword ptr [rsi + 2], 0 ; add dh, dh ; ret 0xf01
0x0000020000762a43 : sub dword ptr [rsi - 0x64], eax ; dec dword ptr [rax - 0x75] ; ret
0x000002000052ce93 : sub dword ptr [rsi], esp ; ret 0x48ff
0x0000020000686088 : sub dword ptr [rsp + rdx*2 - 1], esi ; ret 0x8348
0x00000200003bec6a : sub eax, -0x80 ; add rsp, 0x28 ; ret
0x0000020000013a36 : sub eax, -0x80 ; ret
0x0000020000044b25 : sub eax, 0x10000 ; add byte ptr [rax], al ; ret
0x000002000049cd53 : sub eax, 0x20 ; ret
0x000002000041ee58 : sub eax, 0x33ccc300 ; ror byte ptr [rax - 0x77], 1 ; ret
0x000002000040f65a : sub eax, 0x341fff8 ; ret
0x0000020000521dac : sub eax, 0x37 ; jmp 0x20000521d77
0x000002000046b061 : sub eax, 0x468b0014 ; or byte ptr [rbx], ah ; ret 0xc83b
0x0000020000123b63 : sub eax, 0x4800362f ; add esp, 0x30 ; pop rbx ; ret
0x000002000041dfe4 : sub eax, 0x4801b000 ; add esp, 0x38 ; ret
0x0000020000637a4f : sub eax, 0x48ffafb7 ; add esp, 0x70 ; pop rbp ; ret
0x00000200005f728b : sub eax, 0x48ffd013 ; add esp, 0x30 ; pop rbx ; ret
0x0000020000115956 : sub eax, 0x75c08500 ; sbb byte ptr [rax - 0x75], cl ; ret
0x00000200005f5dfa : sub eax, 0x83480000 ; ret 0x3b08
0x0000020000513d08 : sub eax, 0x8a440008 ; ret
0x00000200004136ff : sub eax, 0x8b00240e ; ret
0x000002000067c30d : sub eax, 0x8b084f3b ; ret
0x000002000016a6eb : sub eax, 0x8b44fff9 ; ret 0xc933
0x000002000005bf51 : sub eax, 0x8b480004 ; ret
0x0000020000035365 : sub eax, 0x8b480008 ; ret
0x000002000077530b : sub eax, 0x8b48ff94 ; ret
0x00000200001337ba : sub eax, 0x8b4dd8f7 ; ret 0xd233
0x00000200006b066f : sub eax, 0x8bffa156 ; ret
0x00000200004b788f : sub eax, 0x8bffc0ab ; ret
0x0000020000415d1f : sub eax, 0x8bffcb02 ; ret
0x000002000044e4df : sub eax, 0x8bffde2b ; ret
0x00000200001fb81f : sub eax, 0x8bffec0a ; ret
0x000002000075f965 : sub eax, 0x8bffffff ; ret
0x00000200006869c6 : sub eax, 0x8d483f75 ; dec dword ptr [r8 - 0x7d] ; ret
0x000002000018662d : sub eax, 0xabd ; add dh, dh ; ret 0x7402
0x00000200004255b7 : sub eax, 0xaf0f4c00 ; ret 0x8b41
0x000002000052de38 : sub eax, 0xb70fffb8 ; ret
0x000002000046b04e : sub eax, 0xba0014 ; add bh, bh ; jmp qword ptr [rbx]
0x0000020000140755 : sub eax, 0xe9000000 ; and dl, bh ; add byte ptr [rax], al ; ret
0x00000200000cb89e : sub eax, 0xe9c88b48 ; ret 0xfffe
0x00000200000c306b : sub eax, 0xeb000250 ; ret 0xcccc
0x000002000009c4ff : sub eax, 0xf21002e ; test dword ptr [rcx], esi ; ret
0x000002000013fea7 : sub eax, 0xf48f2c8 ; sub al, cl ; ret
0x000002000008a56d : sub eax, 0xf6000000 ; ret
0x000002000005b7fe : sub eax, 0xf6000001 ; ret
0x000002000064ac21 : sub eax, 0xf6000001 ; ret 0xf20
0x00000200001593c8 : sub eax, 0xf641ffeb ; ret
0x00000200000aa4a9 : sub eax, 0xf6fffffc ; ret 0x7408
0x00000200004482fa : sub eax, 0xf6ffffff ; ret 0x7503
0x00000200000d4568 : sub eax, 0xf7410000 ; ret 0x7ffe
0x0000020000768065 : sub eax, 0xff48ffd6 ; ret
0x00000200000e797b : sub eax, 1 ; jle 0x200000e7986 ; ret
0x0000020000008600 : sub eax, 1 ; jne 0x200000085fa ; ret
0x0000020000019941 : sub eax, 1 ; jne 0x20000019935 ; ret
0x000002000003673a : sub eax, 1 ; jne 0x20000036733 ; ret
0x000002000010d3b9 : sub eax, 1 ; jne 0x2000010d396 ; and dword ptr [rcx + 0x10], 0xffffffef ; ret
0x000002000010fe2a : sub eax, 1 ; jne 0x2000010fe27 ; mov rax, rcx ; ret
0x0000020000120292 : sub eax, 1 ; jne 0x2000012029d ; ret
0x00000200001a34f0 : sub eax, 1 ; jne 0x200001a34e0 ; jmp 0x2000012e5a4
0x00000200001e3ba4 : sub eax, 1 ; jne 0x200001e3b9a ; ret
0x00000200004002af : sub eax, 1 ; jne 0x200004002a8 ; ret
0x0000020000478a89 : sub eax, 1 ; jne 0x20000478a82 ; ret
0x000002000075c053 : sub eax, 1 ; jne 0x2000075c04f ; shl edx, 0x18 ; or eax, edx ; ret
0x00000200001c1924 : sub eax, 1 ; jns 0x200001c191e ; or eax, 0xffffffff ; ret
0x00000200001f628c : sub eax, 1 ; jns 0x200001f6286 ; mov eax, edx ; ret
0x00000200001f628c : sub eax, 1 ; jns 0x200001f6287 ; mov eax, edx ; ret
0x000002000013c179 : sub eax, 7 ; movzx eax, r8w ; ret
0x00000200001a4545 : sub eax, dword ptr [rax] ; add byte ptr [rbp - 0xf18740], al ; ret
0x000002000001fddc : sub eax, dword ptr [rax] ; add rsp, 0x28 ; ret
0x000002000004c1d4 : sub eax, dword ptr [rax] ; call 0x200000684c4
0x0000020000040d5b : sub eax, dword ptr [rax] ; jae 0x20000040d64 ; ret
0x00000200000c18e5 : sub eax, dword ptr [rax] ; je 0x200000c18f2 ; xor al, al ; ret
0x000002000001f08c : sub eax, dword ptr [rax] ; ret
0x0000020000045721 : sub eax, dword ptr [rax] ; shl rax, 0xc ; ret
0x0000020000052c34 : sub eax, dword ptr [rbp - 0x75] ; ret 0xdb85
0x000002000022da2b : sub eax, dword ptr [rbx + 0x3b41dfc0] ; ret
0x0000020000527e75 : sub eax, dword ptr [rcx + 0xc] ; div dword ptr [rcx + 8] ; ret
0x000002000041bc37 : sub eax, dword ptr [rcx + 8] ; inc eax ; ret
0x00000200005460e7 : sub eax, dword ptr [rcx + 8] ; ret
0x00000200000461db : sub eax, dword ptr [rcx - 0x75] ; ret
0x00000200001009c7 : sub eax, dword ptr [rcx - 0x7d] ; jmp qword ptr [rax]
0x000002000001d499 : sub eax, dword ptr [rcx - 2] ; ret
0x0000020000535f7c : sub eax, dword ptr [rcx] ; add bl, ch ; ret
0x0000020000022c2e : sub eax, dword ptr [rcx] ; mov qword ptr [r10], rax ; ret
0x00000200003edced : sub eax, dword ptr [rdx + r8*4] ; sub eax, ecx ; ret
0x00000200003edcee : sub eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000200000443bc : sub eax, dword ptr [rip + 0x28f36e] ; mov qword ptr [rdx], rax ; ret
0x0000020000035101 : sub eax, eax ; call 0x20000094d49
0x00000200000b2828 : sub eax, eax ; cmp rdx, rax ; jbe 0x200000b283b ; xor eax, eax ; ret
0x00000200000b3223 : sub eax, eax ; lea rcx, qword ptr [rsi + rax] ; call 0x2000014f4c8
0x0000020000641389 : sub eax, eax ; mov qword ptr [rcx + 0x48], rax ; ret
0x0000020000082393 : sub eax, eax ; ret
0x00000200000f5111 : sub eax, eax ; test r10, r10 ; jne 0x200000f5124 ; mov eax, ecx ; ret
0x00000200000361b2 : sub eax, ebx ; add r8, r10 ; jmp 0x20000036181
0x00000200006d7611 : sub eax, ebx ; ret 0x48ff
0x00000200000efbf6 : sub eax, ecx ; mov eax, r8d ; add rsp, 0x38 ; ret
0x00000200000efbb2 : sub eax, ecx ; mov eax, r8d ; ret
0x00000200001497e2 : sub eax, ecx ; mov rax, r8 ; pop rsi ; pop rdi ; ret
0x0000020000488267 : sub eax, ecx ; mov rcx, qword ptr [r9] ; mov qword ptr [rdx], rcx ; ret
0x00000200003fc691 : sub eax, ecx ; movzx eax, r8w ; ret
0x000002000000854c : sub eax, ecx ; ret
0x0000020000135758 : sub eax, ecx ; sar rax, 1 ; dec rax ; ret
0x000002000013573f : sub eax, ecx ; sar rax, 1 ; ret
0x0000020000133773 : sub eax, ecx ; shr rax, 0x3f ; ret
0x00000200001f7d37 : sub eax, edx ; jmp 0x200001f7d47
0x000002000044d081 : sub eax, edx ; jmp 0x2000044d008
0x0000020000613f6c : sub eax, edx ; jmp 0x20000613f86
0x0000020000694339 : sub eax, edx ; jmp 0x20000694343
0x000002000075ef43 : sub eax, edx ; jne 0x2000075ef29 ; ret
0x0000020000137a9f : sub eax, edx ; ret
0x00000200003ed169 : sub eax, edx ; xor eax, dword ptr [r8 + rcx*4] ; ret
0x0000020000180d7d : sub eax, esi ; dec dword ptr [rax - 0x75] ; ret 0xb948
0x0000020000180d60 : sub eax, esi ; dec dword ptr [rax - 0x75] ; ret 0xc148
0x0000020000484813 : sub eax, esp ; ret
0x00000200003ed82a : sub eax, r8d ; ret
0x00000200003e1ef8 : sub ebp, -0xf ; sbb byte ptr [rax], al ; mov al, 1 ; ret
0x000002000075c9b1 : sub ebp, dword ptr [rdx] ; ret 0x8bff
0x0000020000416eb1 : sub ebp, dword ptr [rsi] ; add al, ch ; ret
0x0000020000425479 : sub ebx, 0xc18b48e7 ; ret
0x0000020000009e96 : sub ebx, 1 ; jne 0x20000009e76 ; ret
0x0000020000406489 : sub ebx, dword ptr [rbx] ; ret
0x000002000014e118 : sub ebx, eax ; jmp r11
0x00000200001f44cd : sub ebx, eax ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000028fe4 : sub ebx, eax ; mov eax, ebx ; add rsp, 0x40 ; pop rbx ; ret
0x000002000077f825 : sub ebx, eax ; mov rax, r11 ; ret
0x00000200003ad1be : sub ebx, edi ; lea r8, qword ptr [rbx + 0x1000] ; call rax
0x000002000067dd51 : sub ecx, 0x10 ; jns 0x2000067dd38 ; ret
0x000002000067dd8d : sub ecx, 0x10 ; jns 0x2000067dd74 ; ret
0x0000020000007ceb : sub ecx, 1 ; jne 0x20000007cdf ; ret
0x0000020000121f46 : sub ecx, 1 ; jne 0x20000121f17 ; ret
0x0000020000121fa9 : sub ecx, 1 ; jne 0x20000121f9f ; ret
0x0000020000129ada : sub ecx, 1 ; jne 0x20000129acb ; mov al, dl ; ret
0x000002000017b28f : sub ecx, 1 ; jne 0x2000017b27d ; ret
0x00000200001df463 : sub ecx, 1 ; jne 0x200001df462 ; mov rax, r10 ; ret
0x00000200001df463 : sub ecx, 1 ; jne 0x200001df463 ; mov rax, r10 ; ret
0x00000200001fbe04 : sub ecx, 1 ; jne 0x200001fbdf4 ; ret
0x00000200003f0d2b : sub ecx, 1 ; jne 0x200003f0d17 ; ret
0x00000200004632fc : sub ecx, 1 ; jne 0x2000046330d ; lea eax, dword ptr [rcx + 1] ; ret
0x0000020000463305 : sub ecx, 1 ; jne 0x20000463316 ; lea eax, dword ptr [rcx + 2] ; ret
0x0000020000467d9e : sub ecx, 1 ; jne 0x20000467db2 ; lea edx, dword ptr [rcx + 3] ; mov eax, edx ; ret
0x0000020000520510 : sub ecx, 1 ; jne 0x2000052050e ; ret
0x00000200001a5831 : sub ecx, dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x00000200001ab174 : sub ecx, dword ptr [rax - 0x75] ; add eax, 0x1272fc ; call rax
0x000002000050df3d : sub ecx, dword ptr [rax - 0x75] ; push rax ; sbb byte ptr [rax - 0x7d], cl ; ret 0x4414
0x00000200000b2b6e : sub ecx, dword ptr [rax - 0x75] ; ret
0x000002000016d96d : sub ecx, dword ptr [rax - 0x7d] ; and al, 0x20 ; add byte ptr [rbp - 0x75], cl ; ret 0xba
0x000002000009fe99 : sub ecx, dword ptr [rax - 0x7d] ; ret
0x00000200005d0e6c : sub ecx, dword ptr [rax - 0x7d] ; ret 0x4802
0x00000200004892a5 : sub ecx, dword ptr [rax - 1] ; ret
0x0000020000418441 : sub ecx, dword ptr [rbx + 7] ; add byte ptr [rbx], bh ; ret
0x00000200000220d7 : sub ecx, dword ptr [rcx + 0x23] ; ret
0x000002000062ad58 : sub ecx, dword ptr [rcx - 0x7d] ; ret 0x4928
0x0000020000622758 : sub ecx, dword ptr [rcx - 0x7d] ; ret 0x6602
0x0000020000602251 : sub ecx, dword ptr [rdi] ; mov bl, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x000002000009a2c0 : sub ecx, dword ptr [rdx + 8] ; mov qword ptr [r8 + 8], rcx ; ret
0x00000200000e2ce3 : sub ecx, eax ; cmp ecx, edx ; jbe 0x200000e2ce7 ; xor eax, eax ; ret
0x000002000014a901 : sub ecx, eax ; jmp r9
0x000002000007aa38 : sub ecx, eax ; mov eax, ecx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001340c4 : sub ecx, eax ; mov eax, r9d ; ret
0x00000200006b53f4 : sub ecx, eax ; mov qword ptr [rcx + 8], r9 ; ret
0x000002000001f41d : sub ecx, eax ; mov rax, rcx ; ret
0x00000200005320ad : sub ecx, ebx ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200003edf8c : sub ecx, ecx ; imul eax, r9d ; sub eax, r8d ; ret
0x0000020000133b22 : sub ecx, ecx ; mov eax, r9d ; ret
0x00000200006bafa8 : sub ecx, edx ; mov dword ptr [r8], ecx ; ret
0x00000200006baf7c : sub ecx, edx ; mov dword ptr [r8], r9d ; ret
0x00000200004eaff8 : sub ecx, edx ; mov eax, ecx ; ret
0x00000200003a2161 : sub ecx, edx ; mov qword ptr [r11], rcx ; ret
0x0000020000123ed9 : sub ecx, edx ; mov qword ptr [r8], r9 ; ret
0x00000200000f1e82 : sub ecx, edx ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x00000200006bafa7 : sub ecx, r10d ; mov dword ptr [r8], ecx ; ret
0x00000200005320ac : sub ecx, r11d ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200000e2ce2 : sub ecx, r8d ; cmp ecx, edx ; jbe 0x200000e2ce8 ; xor eax, eax ; ret
0x00000200005cb645 : sub edi, 1 ; jne 0x200005cb637 ; jmp 0x200005178fb
0x00000200004255b5 : sub edi, dword ptr [rbp - 0x50f0b400] ; ret 0x8b41
0x000002000013ffc1 : sub edi, dword ptr [rdx - 0x4814000e] ; ret
0x000002000049613f : sub edi, dword ptr [rip - 0x49f0ffee] ; ret
0x000002000018c333 : sub edi, eax ; jmp 0x200000a8547
0x00000200004eb061 : sub edi, eax ; or dword ptr [rax], eax ; xor al, al ; ret
0x00000200005ba9e2 : sub edi, ebp ; in eax, dx ; dec dword ptr [rbp + rcx*4 + 5] ; ret
0x00000200001497ca : sub edi, ecx ; mov rax, rdi ; pop rsi ; pop rdi ; ret
0x0000020000124f7a : sub edi, edi ; ret
0x000002000069958d : sub edi, edi ; ret 0x8349
0x00000200003b63f6 : sub edi, edi ; ret 0xfa83
0x0000020000149958 : sub edx, 0x40 ; ja 0x20000149955 ; ret
0x00000200001100ee : sub edx, 1 ; invlpg byte ptr [rcx] ; jne 0x200001100f2 ; ret
0x00000200000092c2 : sub edx, 1 ; jne 0x200000092c0 ; ret
0x00000200000309e0 : sub edx, 1 ; jne 0x200000309d1 ; ret
0x0000020000035acb : sub edx, 1 ; jne 0x20000035ab5 ; ret
0x00000200000f17f4 : sub edx, 1 ; jne 0x200000f17ea ; ret
0x0000020000105072 : sub edx, 1 ; jne 0x2000010504a ; ret
0x000002000012f9aa : sub edx, 1 ; jne 0x2000012f993 ; ret
0x000002000017bd4a : sub edx, 1 ; jne 0x2000017bd31 ; add rsp, 0x28 ; ret
0x00000200001e43f8 : sub edx, 1 ; jne 0x200001e43b5 ; mov eax, r8d ; ret
0x00000200003eec4b : sub edx, 1 ; jne 0x200003eec45 ; ret
0x00000200004894c8 : sub edx, 1 ; jne 0x200004894be ; ret
0x00000200004e0021 : sub edx, 1 ; jne 0x200004dfff4 ; ret
0x00000200004eaa3d : sub edx, 1 ; jne 0x200004eaa15 ; call 0x20000117684
0x000002000067613a : sub edx, 1 ; jne 0x2000067612b ; mov eax, r8d ; ret
0x00000200006bbbe2 : sub edx, 1 ; jne 0x200006bbbdf ; xor eax, eax ; ret
0x000002000007cc5d : sub edx, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000064ed5a : sub edx, dword ptr [rbx] ; add byte ptr [rax], al ; jmp 0x2000064ed98
0x00000200004a1021 : sub edx, dword ptr [rdi - 0x2dcc001b] ; call 0x200000c2849
0x00000200001f7d2f : sub edx, eax ; cmp r10d, r8d ; ja 0x200001f7d44 ; sub r8d, r10d ; jmp 0x200001f7d4f
0x0000020000146988 : sub edx, eax ; jne 0x20000146987 ; sfence ; ret
0x000002000020e9f7 : sub edx, eax ; mov dword ptr [rcx], edx ; ret
0x00000200004752f1 : sub edx, ebp ; call 0x20000099f95
0x00000200005f7523 : sub edx, ebp ; lodsb al, byte ptr [rsi] ; inc dword ptr [rbp - 0x74eb8b25] ; ret
0x000002000009bbc2 : sub edx, ebx ; mov r8, rdx ; call r14
0x00000200006a8d05 : sub edx, ebx ; ret
0x00000200003edd86 : sub edx, ecx ; mov eax, r10d ; ret
0x00000200001a5791 : sub edx, ecx ; mov qword ptr [r8], rdx ; ret
0x00000200003b63a0 : sub edx, esi ; dec dword ptr [rbp - 0x7b] ; sal byte ptr [rbx + rax + 0x49], cl ; jmp rdx
0x00000200004f5b53 : sub esi, edx ; ret
0x00000200001ec93b : sub esi, esi ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x00000200001d9e9f : sub esi, esi ; ret
0x00000200001e21bb : sub esp, 0x20 ; call 0x200000ee3ed
0x0000020000425483 : sub esp, 0x20 ; mov r10, rcx ; call 0x2000005168d
0x00000200004c96ef : sub esp, 0x20 ; mov rbx, rcx ; call 0x200000ee675
0x0000020000230b99 : sub esp, 0x28 ; call rax
0x0000020000493237 : sub esp, dword ptr [rbx + 0x12] ; add byte ptr [rbx - 0x8a7dbac], cl ; ret 0x600
0x000002000014f60b : sub esp, dword ptr [rbx] ; add byte ptr [rax - 0x73], cl ; add al, 0xc1 ; ret
0x0000020000782881 : sub esp, dword ptr [rcx + 0x36e8ffb7] ; ret
0x00000200000581b9 : sub esp, dword ptr [rsi + 0x41] ; add eax, eax ; mov word ptr [rdx + 0x14], ax ; ret
0x00000200006db310 : sub esp, ecx ; mov eax, 0xc000000d ; jmp 0x200006d752f
0x000002000044622f : sub esp, esp ; ret 0x8bff
0x00000200000ea75b : sub qword ptr [r8], r8 ; call rax
0x00000200000ea5db : sub qword ptr [rax], r8 ; call rax
0x000002000005bd21 : sub qword ptr [rip + 0x29f4c0], rax ; ret
0x00000200000075ad : sub qword ptr [rip + 0x2f3bf4], rdx ; ret
0x00000200000075a5 : sub qword ptr [rip + 0x2f3c04], rdx ; ret
0x0000020000035aca : sub r10, 1 ; jne 0x20000035ab6 ; ret
0x00000200000f17f3 : sub r10, 1 ; jne 0x200000f17eb ; ret
0x0000020000105071 : sub r10, 1 ; jne 0x2000010504b ; ret
0x00000200001e43f7 : sub r10, 1 ; jne 0x200001e43b6 ; mov eax, r8d ; ret
0x00000200004e0020 : sub r10, 1 ; jne 0x200004dfff5 ; ret
0x000002000064ed59 : sub r10d, dword ptr [rbx] ; add byte ptr [rax], al ; jmp 0x2000064ed99
0x00000200003edd85 : sub r10d, r9d ; mov eax, r10d ; ret
0x0000020000009e95 : sub r11, 1 ; jne 0x20000009e77 ; ret
0x000002000014e117 : sub r11, rax ; jmp r11
0x000002000077f824 : sub r11, rax ; mov rax, r11 ; ret
0x0000020000216900 : sub r11b, al ; movzx eax, word ptr [rcx] ; ret
0x00000200005cb644 : sub r15, 1 ; jne 0x200005cb638 ; jmp 0x200005178fc
0x00000200000085ff : sub r8, 1 ; jne 0x200000085fb ; ret
0x0000020000019940 : sub r8, 1 ; jne 0x20000019936 ; ret
0x00000200001e3ba3 : sub r8, 1 ; jne 0x200001e3b9b ; ret
0x0000020000478a88 : sub r8, 1 ; jne 0x20000478a83 ; ret
0x000002000044d080 : sub r8, r10 ; jmp 0x2000044d009
0x000002000075ef42 : sub r8, r10 ; jne 0x2000075ef2a ; ret
0x00000200000361b1 : sub r8, r11 ; add r8, r10 ; jmp 0x20000036182
0x00000200000efbb1 : sub r8, rcx ; mov eax, r8d ; ret
0x00000200001497e1 : sub r8, rcx ; mov rax, r8 ; pop rsi ; pop rdi ; ret
0x00000200005940b0 : sub r8b, 0xc9 ; ret 0xffba
0x00000200001ab4c6 : sub r8b, bpl ; ret
0x0000020000663276 : sub r8b, bpl ; ret 0xffae
0x00000200005118fd : sub r8b, r13b ; jl 0x200005118f1 ; ret 0x8bff
0x000002000021a5ee : sub r8b, r13b ; ret
0x00000200005031f4 : sub r8b, r13b ; test edx, ecx ; ret
0x00000200001c1923 : sub r8d, 1 ; jns 0x200001c191f ; or eax, 0xffffffff ; ret
0x00000200001f628b : sub r8d, 1 ; jns 0x200001f6287 ; mov eax, edx ; ret
0x00000200001f628b : sub r8d, 1 ; jns 0x200001f6288 ; mov eax, edx ; ret
0x000002000013c178 : sub r8d, 7 ; movzx eax, r8w ; ret
0x00000200001a4544 : sub r8d, dword ptr [rax] ; add byte ptr [rbp - 0xf18740], al ; ret
0x00000200000b3222 : sub r8d, eax ; lea rcx, qword ptr [rsi + rax] ; call 0x2000014f4c9
0x0000020000133aaa : sub r8d, ecx ; mov eax, r8d ; ret
0x00000200003fc690 : sub r8d, ecx ; movzx eax, r8w ; ret
0x00000200001f7d36 : sub r8d, r10d ; jmp 0x200001f7d48
0x0000020000007cea : sub r9, 1 ; jne 0x20000007ce0 ; ret
0x0000020000129ad9 : sub r9, 1 ; jne 0x20000129acc ; mov al, dl ; ret
0x000002000017b28e : sub r9, 1 ; jne 0x2000017b27e ; ret
0x00000200003f0d2a : sub r9, 1 ; jne 0x200003f0d18 ; ret
0x000002000014a900 : sub r9, r8 ; jmp r9
0x00000200006b53f3 : sub r9, r8 ; mov qword ptr [rcx + 8], r9 ; ret
0x0000020000123ed8 : sub r9, rdx ; mov qword ptr [r8], r9 ; ret
0x00000200001340c3 : sub r9d, eax ; mov eax, r9d ; ret
0x0000020000133b21 : sub r9d, ecx ; mov eax, r9d ; ret
0x00000200006baf7b : sub r9d, r10d ; mov dword ptr [r8], r9d ; ret
0x00000200003ed6f4 : sub r9d, r8d ; mov eax, r9d ; ret
0x0000020000013a35 : sub rax, -0x80 ; ret
0x00000200000e797a : sub rax, 1 ; jle 0x200000e7987 ; ret
0x0000020000036739 : sub rax, 1 ; jne 0x20000036734 ; ret
0x000002000010fe29 : sub rax, 1 ; jne 0x2000010fe28 ; mov rax, rcx ; ret
0x00000200004002ae : sub rax, 1 ; jne 0x200004002a9 ; ret
0x0000020000022c2d : sub rax, qword ptr [rcx] ; mov qword ptr [r10], rax ; ret
0x0000020000641388 : sub rax, r8 ; mov qword ptr [rcx + 0x48], rax ; ret
0x0000020000082392 : sub rax, r8 ; ret
0x0000020000488266 : sub rax, rcx ; mov rcx, qword ptr [r9] ; mov qword ptr [rdx], rcx ; ret
0x000002000000854b : sub rax, rcx ; ret
0x0000020000135757 : sub rax, rcx ; sar rax, 1 ; dec rax ; ret
0x000002000013573e : sub rax, rcx ; sar rax, 1 ; ret
0x0000020000133772 : sub rax, rcx ; shr rax, 0x3f ; ret
0x0000020000121f45 : sub rcx, 1 ; jne 0x20000121f18 ; ret
0x0000020000121fa8 : sub rcx, 1 ; jne 0x20000121fa0 ; ret
0x00000200001df462 : sub rcx, 1 ; jne 0x200001df463 ; mov rax, r10 ; ret
0x00000200001df462 : sub rcx, 1 ; jne 0x200001df464 ; mov rax, r10 ; ret
0x00000200001fbe03 : sub rcx, 1 ; jne 0x200001fbdf5 ; ret
0x000002000052050f : sub rcx, 1 ; jne 0x2000052050f ; ret
0x000002000009a2bf : sub rcx, qword ptr [rdx + 8] ; mov qword ptr [r8 + 8], rcx ; ret
0x000002000001f41c : sub rcx, rax ; mov rax, rcx ; ret
0x00000200003a2160 : sub rcx, rdx ; mov qword ptr [r11], rcx ; ret
0x00000200000f1e81 : sub rcx, rdx ; mov qword ptr [r8], rcx ; xor eax, eax ; ret
0x00000200001497c9 : sub rdi, r9 ; mov rax, rdi ; pop rsi ; pop rdi ; ret
0x000002000018c332 : sub rdi, rax ; jmp 0x200000a8548
0x0000020000149957 : sub rdx, 0x40 ; ja 0x20000149956 ; ret
0x0000020000149956 : sub rdx, 0x40 ; ja 0x20000149957 ; ret
0x00000200001100ed : sub rdx, 1 ; invlpg byte ptr [rcx] ; jne 0x200001100f3 ; ret
0x00000200000092c1 : sub rdx, 1 ; jne 0x200000092c1 ; ret
0x00000200000309df : sub rdx, 1 ; jne 0x200000309d2 ; ret
0x000002000012f9a9 : sub rdx, 1 ; jne 0x2000012f994 ; ret
0x00000200003eec4a : sub rdx, 1 ; jne 0x200003eec46 ; ret
0x00000200004894c7 : sub rdx, 1 ; jne 0x200004894bf ; ret
0x00000200004eaa3c : sub rdx, 1 ; jne 0x200004eaa16 ; call 0x20000117685
0x0000020000676139 : sub rdx, 1 ; jne 0x2000067612c ; mov eax, r8d ; ret
0x00000200006bbbe1 : sub rdx, 1 ; jne 0x200006bbbe0 ; xor eax, eax ; ret
0x0000020000146987 : sub rdx, r8 ; jne 0x20000146988 ; sfence ; ret
0x00000200001a5790 : sub rdx, r9 ; mov qword ptr [r8], rdx ; ret
0x00000200004752f0 : sub rdx, rbp ; call 0x20000099f96
0x000002000009bbc1 : sub rdx, rbx ; mov r8, rdx ; call r14
0x00000200001e21ba : sub rsp, 0x20 ; call 0x200000ee3ee
0x0000020000230b98 : sub rsp, 0x28 ; call rax
0x0000020000163919 : sysenter
0x0000020000603f55 : sysexit ; ret
0x0000020000483aa8 : test ah, al ; ret
0x000002000075d421 : test ah, bh ; ret
0x000002000048a68b : test ah, bh ; ret 0x12
0x00000200001352c8 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xff49
0x00000200003cb8f3 : test ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005030cc : test ah, bl ; mov bl, 8 ; add al, ch ; or ch, bh ; ret
0x0000020000541640 : test ah, ch ; inc dword ptr [rbp + 0x33] ; rol byte ptr [rcx - 0x75], cl ; ret 0x8348
0x0000020000643dc2 : test ah, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x8545
0x000002000075d4e9 : test ah, cl ; ret
0x00000200004999c3 : test ah, dh ; add dword ptr [rax], eax ; add bh, dh ; ret
0x0000020000059e79 : test ah, dl ; add al, 0 ; add dh, dh ; ret
0x00000200007611f6 : test ah, dl ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x000002000002141f : test ah, dl ; ret 0x13
0x000002000011f991 : test al, 0 ; add byte ptr [rax], al ; call rax
0x00000200000f0b60 : test al, 0 ; add byte ptr [rax], al ; mov edx, ebp ; call rax
0x00000200000f0777 : test al, 0 ; add byte ptr [rax], al ; mov edx, r15d ; call rax
0x00000200004c05bb : test al, 0 ; add byte ptr [rax], al ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x00000200000cf71c : test al, 0 ; add byte ptr [rax], al ; pop r15 ; pop r12 ; ret
0x000002000044e037 : test al, 0 ; add byte ptr [rax], al ; pop r15 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200001cae2f : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000002000065b4d5 : test al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rbx ; ret
0x0000020000052564 : test al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000506f4e : test al, 0 ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x0000020000057b1b : test al, 0 ; add byte ptr [rax], al ; ret
0x000002000012438f : test al, 0 ; add byte ptr [rax], al ; test rcx, rcx ; je 0x200001243a3 ; call rcx
0x000002000014d3d4 : test al, 0x10 ; add byte ptr [rax], al ; nop ; ret
0x00000200000822b2 : test al, 0x10 ; je 0x200000822c5 ; add rsp, 0x28 ; ret
0x000002000001a076 : test al, 0x10 ; jne 0x2000001a083 ; xor al, al ; ret
0x000002000041b27b : test al, 0x10 ; jne 0x2000041b292 ; call 0x20000042aa7
0x000002000062e128 : test al, 0x10 ; jne 0x2000062e135 ; mov al, 1 ; ret
0x000002000003b6a4 : test al, 0x11 ; add byte ptr [rbp + 0x3b], cl ; ret
0x000002000013b03e : test al, 0x20 ; je 0x2000013b04f ; or dword ptr [r8], 0xffffffff ; ret
0x0000020000485e4a : test al, 0x20 ; jne 0x20000485e57 ; xor al, al ; ret
0x000002000067f7f4 : test al, 0x24 ; jmp 0x1ffc3f38900
0x000002000060e3de : test al, 0x29 ; add byte ptr [rax], al ; test rax, rax ; je 0x2000060e3f2 ; call rax
0x00000200003be7ad : test al, 0x33 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000000e024 : test al, 0x36 ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000053c8b : test al, 0x40 ; jne 0x20000053c98 ; xor al, al ; ret
0x0000020000053c8a : test al, 0x40 ; jne 0x20000053c99 ; xor al, al ; ret
0x0000020000053c89 : test al, 0x40 ; jne 0x20000053c9a ; xor al, al ; ret
0x000002000040db3f : test al, 0x40 ; jne 0x2000040db6a ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x00000200000b6ecc : test al, 0x42 ; je 0x200000b6edf ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005be64 : test al, 0x47 ; add eax, 0x8b138b00 ; ret 0xba0f
0x000002000051da76 : test al, 0x48 ; mov ecx, dword ptr [rbp - 0x48] ; call 0x20000140388
0x0000020000525a33 : test al, 0x49 ; mov edx, edi ; lea rcx, qword ptr [rbp - 9] ; call r12
0x0000020000435285 : test al, 0x50 ; add byte ptr [r9 + 3], cl ; ret 0xe0ff
0x000002000052a3d4 : test al, 0x5f ; sar edi, -0x75 ; ret
0x00000200003e9b18 : test al, 0x62 ; ret
0x00000200007577c4 : test al, 0x7d ; ret 0xc7ff
0x000002000017e3a4 : test al, 0x8b ; out dx, eax ; dec dword ptr [rax - 0x75] ; ret
0x00000200005cb7b6 : test al, 0x8d ; push rdi ; add dword ptr [rax + 0x63], ecx ; ret
0x00000200004b9214 : test al, 0x91 ; sar bh, 0x8b ; ret
0x00000200004b9014 : test al, 0x93 ; sar bh, 0x8b ; ret
0x00000200003e54e0 : test al, 0x9e ; ret
0x00000200000400f3 : test al, 0xa ; ret 0xc4eb
0x00000200004293f4 : test al, 0xb2 ; add eax, ebp ; mov word ptr [rbx], dr0 ; ret
0x0000020000429f21 : test al, 0xb8 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200006a9dbc : test al, 0xc4 ; dec dword ptr [rax - 1] ; ret
0x0000020000600b34 : test al, 0xd0 ; ret
0x00000200000747b4 : test al, 0xd6 ; add al, 0 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005afeb8 : test al, 0xd7 ; ret 0x48ff
0x00000200004fdfbf : test al, 0xe8 ; ret
0x000002000043f6e8 : test al, 0xf ; test dword ptr [rbx], edx ; adc eax, 0x8b4c0016 ; ret
0x000002000003282c : test al, 0xf6 ; ret 0x7401
0x00000200003c7283 : test al, 0xf6 ; ret 0xf07
0x000002000076e828 : test al, 0xf8 ; inc dword ptr [rax] ; ret
0x00000200006a3642 : test al, 0xfe ; adc cl, byte ptr [rax] ; and eax, 0xbc20125c ; call qword ptr [rdx]
0x0000020000639dcc : test al, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x000002000063acbc : test al, 0xff ; add rsp, 0x28 ; ret
0x000002000063b321 : test al, 0xff ; add rsp, 0x50 ; pop rbx ; ret
0x000002000063deb5 : test al, 0xff ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200005f4785 : test al, 0xff ; nop ; add rsp, 0x20 ; pop rbp ; ret
0x00000200005f332f : test al, 0xff ; nop ; add rsp, 0x40 ; pop rbp ; ret
0x00000200006314a9 : test al, 0xff ; ret
0x0000020000642126 : test al, 0xff ; xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006419e2 : test al, 0xff ; xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000f4f3a : test al, 1 ; add byte ptr [rax], al ; ret
0x000002000004c25d : test al, 1 ; je 0x2000004c255 ; xor al, al ; ret
0x00000200001f7800 : test al, 1 ; je 0x200001f77f0 ; xor al, al ; ret
0x0000020000211cfb : test al, 1 ; je 0x20000211d0e ; xor eax, eax ; xchg dword ptr [rcx + 0x1c], eax ; ret
0x000002000006811d : test al, 1 ; jne 0x20000068126 ; ret
0x00000200000bc8c3 : test al, 1 ; jne 0x200000bc8cc ; ret
0x00000200000bc8c2 : test al, 1 ; jne 0x200000bc8cd ; ret
0x00000200000bc8c1 : test al, 1 ; jne 0x200000bc8ce ; ret
0x00000200001ab2fd : test al, 1 ; jne 0x200001ab310 ; mov eax, 0xc00000bb ; ret
0x000002000004eb8f : test al, 2 ; je 0x2000004eb38 ; jmp 0x2000004eb5d
0x00000200000f1822 : test al, 2 ; je 0x200000f1830 ; mov eax, edx ; ret
0x00000200000f1822 : test al, 2 ; je 0x200000f1831 ; mov eax, edx ; ret
0x00000200006b5859 : test al, 2 ; je 0x200006b588b ; mov rcx, rbx ; call 0x200001d1b2d
0x00000200006cb6d2 : test al, 2 ; je 0x200006cb6df ; xor eax, eax ; ret
0x000002000006a04a : test al, 2 ; jne 0x2000006a043 ; jmp 0x20000036346
0x000002000009a597 : test al, 2 ; jne 0x2000009a5b6 ; or eax, 0x18 ; ret
0x00000200000bc28c : test al, 2 ; jne 0x200000bc295 ; ret
0x00000200000bcd14 : test al, 2 ; jne 0x200000bcd21 ; xor al, al ; ret
0x0000020000022c53 : test al, 3 ; add byte ptr [rax], al ; ret
0x00000200004eed46 : test al, 3 ; sete al ; ret
0x000002000007145d : test al, 4 ; je 0x2000007145a ; jmp 0x2000017d748
0x0000020000052f9a : test al, 4 ; jne 0x20000052fa7 ; xor eax, eax ; ret
0x0000020000052f99 : test al, 4 ; jne 0x20000052fa8 ; xor eax, eax ; ret
0x0000020000052f98 : test al, 4 ; jne 0x20000052fa9 ; xor eax, eax ; ret
0x000002000012f439 : test al, 4 ; jne 0x2000012f44c ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001a598f : test al, 4 ; jne 0x200001a59a1 ; or al, 4 ; mov byte ptr [rcx + 4], al ; ret
0x00000200001ab80e : test al, 4 ; jne 0x200001ab821 ; mov eax, 0xc0000001 ; ret
0x00000200001ab82d : test al, 4 ; jne 0x200001ab840 ; mov eax, 0xc0000022 ; ret
0x00000200001aba12 : test al, 4 ; jne 0x200001aba25 ; mov eax, 0xc0000022 ; ret
0x00000200001aba42 : test al, 4 ; jne 0x200001aba55 ; mov eax, 0xc0000022 ; ret
0x00000200003ba6fe : test al, 4 ; jne 0x200003ba707 ; ret
0x00000200004f7412 : test al, 4 ; jne 0x200004f741f ; xor eax, eax ; ret
0x000002000010198f : test al, 6 ; add dh, dh ; ret
0x000002000009b403 : test al, 7 ; jne 0x2000009b402 ; mov eax, 1 ; ret
0x00000200004073e1 : test al, 8 ; je 0x200004073f1 ; or dword ptr [rcx], 4 ; xor eax, eax ; ret
0x000002000003c259 : test al, 8 ; jne 0x2000003c267 ; mov rax, rdx ; ret
0x000002000003c259 : test al, 8 ; jne 0x2000003c268 ; mov rax, rdx ; ret
0x000002000006a025 : test al, 8 ; jne 0x2000006a022 ; xor eax, eax ; ret
0x000002000003647b : test al, 8 ; jne 0x200001636c5 ; ret
0x0000020000044c75 : test al, 8 ; jne 0x20000168148 ; ret
0x000002000040749b : test al, 8 ; jne 0x20000407427 ; xor al, al ; jmp 0x2000040746d
0x0000020000401016 : test al, 8 ; jne 0x2000057b252 ; ret
0x000002000005a6bc : test al, ah ; add byte ptr [rax], al ; add byte ptr [rax - 9], cl ; ret
0x000002000048d1cb : test al, al ; add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x8b48
0x0000020000041362 : test al, al ; je 0x20000041375 ; mov eax, 1 ; ret
0x00000200000445fd : test al, al ; je 0x2000004460e ; add rsp, 0x28 ; ret
0x000002000011634b : test al, al ; je 0x20000116360 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000012914a : test al, al ; je 0x2000012915b ; add rsp, 0x28 ; ret
0x0000020000129149 : test al, al ; je 0x2000012915c ; add rsp, 0x28 ; ret
0x00000200002168e9 : test al, al ; je 0x200002168fc ; mov eax, 0xc00000bb ; ret
0x0000020000022282 : test al, al ; jne 0x20000022293 ; add rsp, 0x28 ; ret
0x00000200000258a5 : test al, al ; jne 0x200000258c7 ; add rsp, 0x38 ; ret
0x00000200001334a6 : test al, al ; jne 0x2000013347c ; xor eax, eax ; ret
0x0000020000002ad2 : test al, al ; jne 0x20000156ffa ; ret
0x000002000013315d : test al, al ; jne 0x200001a53ea ; ret
0x000002000044cfbd : test al, al ; jne 0x2000044cfd0 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004d6a34 : test al, al ; jne 0x200004d6a41 ; xor eax, eax ; ret
0x00000200004d6a8c : test al, al ; jne 0x200004d6a99 ; xor eax, eax ; ret
0x00000200004eb01f : test al, al ; jne 0x20000587729 ; ret
0x00000200006d5f67 : test al, al ; jne 0x200006d5f5a ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b7afb : test al, al ; jns 0x200001b7b0d ; and qword ptr [rcx + 0x70], 0 ; ret
0x00000200001bef18 : test al, al ; jns 0x200001bef2b ; mov eax, 0xc0000022 ; ret
0x00000200001f0e28 : test al, al ; js 0x200001f0e3b ; mov eax, 0xc00000bb ; ret
0x00000200000706f7 : test al, al ; sete al ; add rsp, 0x28 ; ret
0x00000200001b32e8 : test al, al ; setne al ; add rsp, 0x28 ; ret
0x0000020000557baa : test al, al ; setne cl ; mov eax, ecx ; pop rbp ; ret
0x00000200005b9e77 : test al, bh ; ret 0xffed
0x000002000018e93d : test al, bl ; dec dword ptr [rax - 0x75] ; ret
0x00000200004ac977 : test al, ch ; add byte ptr [rax], 0 ; add byte ptr [rcx - 1], al ; ret
0x00000200003c6457 : test al, ch ; enter 0x19, -0x7d ; ret
0x000002000050bdfa : test al, dh ; jne 0x2000050bc3e ; jmp 0x2000050bdd0
0x00000200005bf93b : test al, dl ; jmp 0x200005bf92e
0x0000020000031c00 : test al, dl ; jne 0x20000031c11 ; add rsp, 0x28 ; ret
0x00000200000c2ba4 : test ax, ax ; je 0x200000c2bb7 ; add rsp, 0x28 ; ret
0x00000200000c7a34 : test ax, ax ; je 0x200000c7a47 ; add rsp, 0x28 ; ret
0x000002000013567f : test ax, ax ; jne 0x2000013567b ; mov rax, rcx ; ret
0x000002000013569a : test ax, ax ; jne 0x20000135696 ; mov rax, rcx ; ret
0x0000020000135906 : test ax, ax ; jne 0x200001358d4 ; xor eax, eax ; ret
0x0000020000135ff9 : test ax, ax ; jne 0x20000135fda ; xor eax, eax ; ret
0x00000200004848d8 : test ax, cx ; jne 0x200004848e7 ; mov al, 1 ; ret
0x0000020000745528 : test bh, al ; add al, byte ptr [rax] ; add rsp, 0x20 ; pop rbp ; ret
0x00000200001d4b85 : test bh, al ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x25
0x000002000048a535 : test bh, al ; ret
0x0000020000610c3a : test bh, bh ; je 0x20000610c4e ; xor edx, edx ; call 0x20000231019
0x0000020000610c4f : test bh, bh ; je 0x20000610c63 ; xor edx, edx ; call 0x20000231019
0x0000020000416b64 : test bh, bh ; jne 0x20000416bd1 ; mov ecx, eax ; call 0x200000407f9
0x000002000075d49c : test bh, bh ; ret
0x000002000018b7c4 : test bh, bl ; ret
0x0000020000020f11 : test bh, ch ; add byte ptr [rax], al ; add bh, bh ; ret
0x0000020000572aaf : test bh, ch ; inc dword ptr [rbp - 0x75] ; ret 0x8d48
0x000002000053975c : test bh, ch ; ret
0x000002000008550f : test bh, cl ; ret
0x0000020000085060 : test bh, cl ; ret 0xf
0x0000020000034c13 : test bh, dh ; in eax, 0x12 ; add dh, dh ; ret
0x000002000075d445 : test bh, dh ; ret
0x000002000045b047 : test bh, dl ; ret
0x00000200006857cf : test bl, 0x40 ; jmp 0x200006857dd
0x000002000068585b : test bl, 0x40 ; jmp 0x20000685869
0x000002000076e43c : test bl, 0xff ; add rsp, 0x48 ; ret
0x00000200006857b1 : test bl, ah ; jmp 0x200006857dc
0x000002000068583d : test bl, ah ; jmp 0x20000685868
0x00000200003e84cb : test bl, ah ; mov bl, 0x18 ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000075d414 : test bl, al ; ret
0x000002000049a31f : test bl, bh ; je 0x2000049a342 ; xor ecx, ecx ; call 0x200000bc569
0x0000020000083a50 : test bl, bh ; ror dword ptr [rdi], cl ; add dh, dh ; ret
0x000002000003d730 : test bl, bl ; jne 0x2000003d769 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006857c9 : test bl, bl ; jns 0x200006857e8 ; jmp 0x200006857e0
0x0000020000685855 : test bl, bl ; jns 0x20000685891 ; jmp 0x2000068586c
0x00000200003f0b14 : test bl, ch ; add dword ptr [rax], eax ; add bh, bh ; ret
0x000002000013fc57 : test bl, ch ; jne 0x2000013fc74 ; mov rcx, r9 ; call 0x2000011bf69
0x0000020000521a88 : test bl, ch ; ret
0x000002000064402e : test bl, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret
0x00000200003e89e8 : test bl, cl ; mov dl, 0x18 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005a598c : test bl, dh ; add ch, bl ; dec dword ptr [rax - 0x75] ; iretd ; call rax
0x000002000049f367 : test bl, dh ; ret 0x11
0x0000020000621071 : test bl, dl ; add byte ptr [rax], al ; add bh, bh ; ret
0x000002000075d407 : test bl, dl ; ret
0x00000200006857b0 : test bl, r12b ; jmp 0x200006857dd
0x00000200006857af : test bl, r12b ; jmp 0x200006857de
0x00000200006857ae : test bl, r12b ; jmp 0x200006857df
0x000002000068583c : test bl, r12b ; jmp 0x20000685869
0x000002000068583b : test bl, r12b ; jmp 0x2000068586a
0x000002000068583a : test bl, r12b ; jmp 0x2000068586b
0x0000020000106987 : test bpl, 2 ; je 0x20000106976 ; jmp 0x20000106959
0x000002000049914c : test bpl, 2 ; jne 0x20000499163 ; call 0x200000bb1b9
0x000002000043b1e8 : test byte ptr [0xffffffff8b000000], ah ; ret
0x000002000019f9b9 : test byte ptr [r13 + 0x33], r8b ; rol byte ptr [rcx - 0x75], cl ; ret 0x4589
0x00000200000f4f0e : test byte ptr [r8 - 0x75], cl ; ret 0xd348
0x00000200000822f0 : test byte ptr [r8], 0x20 ; jne 0x200000822fd ; ret
0x00000200001ac09e : test byte ptr [rax + 0x12], 0 ; je 0x200001ac0af ; mov eax, ecx ; ret
0x000002000001cc13 : test byte ptr [rax + 0x1c2c0], cl ; add rax, r8 ; jmp rax
0x000002000001ce9e : test byte ptr [rax + 0x1c2f4], al ; add rax, r8 ; jmp rax
0x0000020000761297 : test byte ptr [rax + 0x2b000000], al ; ret
0x00000200004b40e8 : test byte ptr [rax + 0x330010c2], cl ; rol byte ptr [rcx - 0x75], cl ; ret
0x000002000015702d : test byte ptr [rax + 0x44ffeaba], ch ; add dword ptr [rcx + 0x40], ebx ; ret
0x00000200004594a4 : test byte ptr [rax + 0x45a1bc], bl ; add rax, r8 ; jmp rax
0x0000020000479fcc : test byte ptr [rax + 0x47a4d4], al ; add rax, r8 ; jmp rax
0x00000200003b1ce9 : test byte ptr [rax + 0x48001aa4], al ; mov ecx, eax ; call r8
0x0000020000649375 : test byte ptr [rax + 0x69000000], bh ; ret
0x000002000002d3c9 : test byte ptr [rax + 6], 8 ; jne 0x2000002d3da ; xor eax, eax ; ret
0x00000200000bfac0 : test byte ptr [rax + rax - 0x7cb80000], cl ; ret 0x4810
0x0000020000143d21 : test byte ptr [rax + rax - 0x89a0000], cl ; ret 0x300
0x000002000018a5e5 : test byte ptr [rax + rax - 0x8b80000], al ; ret
0x0000020000135327 : test byte ptr [rax + rax - 0xb80000], al ; ret 0xff49
0x00000200006967dd : test byte ptr [rax + rax - 0xbf0000], ah ; ret 0x8349
0x000002000006daef : test byte ptr [rax + rax*2], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200003b116d : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000047f86e : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000064f1a : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000041f7db : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x000002000015a35b : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x2eb
0x0000020000177974 : test byte ptr [rax + rax*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3ee9
0x00000200005243e3 : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000cbebb : test byte ptr [rax + rax*8], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], al ; ret 0x830f
0x00000200000c2cb3 : test byte ptr [rax + rax], 0x48 ; add esp, 0x40 ; pop rbx ; ret
0x00000200004ffb72 : test byte ptr [rax + rax], 0xe8 ; pop rbx ; ret
0x000002000062cc8f : test byte ptr [rax + rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001ab02a : test byte ptr [rax + rax], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret
0x000002000050969e : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret
0x000002000064298c : test byte ptr [rax + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8949
0x000002000061bc01 : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x772
0x0000020000544fec : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000583b05 : test byte ptr [rax + rbx*2], ah ; add dword ptr [rax], eax ; add byte ptr [rbp - 0x75], cl ; ret 0x8948
0x000002000048e3be : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add al, ch ; imul eax ; ret 0x8aff
0x000002000009aadf : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x0000020000625db4 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xce75
0x00000200001779a4 : test byte ptr [rax + rbx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x40e9
0x0000020000544fa6 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x000002000006710a : test byte ptr [rax + rcx*4 + 0x74], 0x24 ; xor byte ptr [rax - 0x75], cl ; iretd ; call rsi
0x0000020000625cb2 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4908
0x0000020000177984 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3fe9
0x00000200001c03f5 : test byte ptr [rax + rcx*4], ah ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x22], al ; ret 0xa483
0x00000200004acc96 : test byte ptr [rax + rcx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000095fa5 : test byte ptr [rax + rcx], ch ; sldt word ptr [rcx + 0x3b] ; ret 0x840f
0x000002000021eefb : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8948
0x0000020000017c8b : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret 0x8b49
0x0000020000454b12 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c50
0x00000200000a9ef0 : test byte ptr [rax + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0xb], cl ; ret
0x00000200000ed8ef : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x0000020000177994 : test byte ptr [rax + rdx*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3fe9
0x000002000044816b : test byte ptr [rax + rdx*4], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000544f8e : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x00000200004acc6a : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rcx]
0x00000200004a9820 : test byte ptr [rax + rdx*8], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200006732d9 : test byte ptr [rax + rdx], ah ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001fedf2 : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret
0x000002000007fd18 : test byte ptr [rax + rsi*4], ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000cfa95 : test byte ptr [rax + rsi*8], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0xf44
0x00000200007625a6 : test byte ptr [rax + rsi*8], ah ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret 0x4975
0x000002000016b44e : test byte ptr [rax - 0x39], 0x45 ; call qword ptr [rax]
0x0000020000699705 : test byte ptr [rax - 0x73], 0x15 ; ret
0x000002000068aeb6 : test byte ptr [rax - 0x73], 0x15 ; ret 0xeca6
0x0000020000781322 : test byte ptr [rax - 0x73], 0x4d ; ret 0xd233
0x00000200004309b6 : test byte ptr [rax - 0x73], 5 ; ret 0xed1a
0x0000020000530ec9 : test byte ptr [rax - 0x74fff5ee], bh ; ret 0xd8f7
0x00000200004f3b99 : test byte ptr [rax - 0x74fff69d], dh ; ret
0x000002000003246b : test byte ptr [rax - 0x75], 0x42 ; ret
0x00000200005d964c : test byte ptr [rax - 0x75], 0x47 ; or byte ptr [rcx + 0x23], cl ; ret
0x00000200000f4f0f : test byte ptr [rax - 0x75], cl ; ret 0xd348
0x0000020000764881 : test byte ptr [rax - 0x77], 0x45 ; ret 0x8b48
0x00000200000b09f4 : test byte ptr [rax - 0x78], 0xb3 ; ret
0x000002000007ed2f : test byte ptr [rax - 0xa000000], cl ; ret 0xf08
0x00000200000e6419 : test byte ptr [rax - 0xfff4bb], ch ; ret
0x0000020000544b1c : test byte ptr [rax - 0xfff6b1], bh ; ret
0x00000200000cb58f : test byte ptr [rax - 1], al ; ret 0x5489
0x00000200000822f1 : test byte ptr [rax], 0x20 ; jne 0x200000822fc ; ret
0x000002000049378e : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x870f
0x0000020000544fbe : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x000002000021c5b1 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4c
0x000002000021c499 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x8b4d
0x000002000046b41d : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x8b44
0x000002000010a693 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b44
0x000002000040190c : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret 0x4489
0x000002000069d0b6 : test byte ptr [rax], ah ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x0000020000450696 : test byte ptr [rax], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xff25
0x00000200005045e3 : test byte ptr [rax], ah ; call 0x1ffc3db45fc
0x000002000013feba : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000020000148b9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret
0x000002000013373a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000076e59a : test byte ptr [rax], al ; add dword ptr [rax], eax ; add rsp, 0x58 ; ret
0x00000200004b5969 : test byte ptr [rax], al ; ret 0x10
0x0000020000440dbe : test byte ptr [rax], bh ; inc byte ptr [rbx] ; add rcx, r12 ; jmp rcx
0x00000200005a9bf9 : test byte ptr [rax], bh ; ret 0xffeb
0x000002000011500f : test byte ptr [rax], bh ; ret 5
0x00000200001f4720 : test byte ptr [rax], bl ; mov al, 0x28 ; and al, 0 ; add eax, r10d ; jmp 0x200001f4736
0x000002000042fcf9 : test byte ptr [rax], bl ; ret
0x00000200007337f6 : test byte ptr [rax], ch ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xbc41
0x0000020000521b3d : test byte ptr [rax], ch ; ret
0x000002000007cf1f : test byte ptr [rax], ch ; sub dword ptr [rax], edx ; add bh, bh ; ret
0x000002000017d24e : test byte ptr [rax], dh ; out dx, eax ; dec dword ptr [rbp - 0x75] ; ret
0x00000200003cb827 : test byte ptr [rax], dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004965d6 : test byte ptr [rax], dl ; cmp dword ptr [rdx], edx ; add dh, dh ; ret
0x000002000019f9ba : test byte ptr [rbp + 0x33], al ; rol byte ptr [rcx - 0x75], cl ; ret 0x4589
0x0000020000176a5c : test byte ptr [rbp + rbx*4 - 0x13], bl ; dec dword ptr [rax - 0x7d] ; ret 0x830c
0x00000200005428fd : test byte ptr [rbp - 0x1000000], ah ; ret
0x0000020000464b9b : test byte ptr [rbp - 0x1000000], bl ; ret
0x0000020000099047 : test byte ptr [rbp - 0x16000002], ah ; ret 0xee8
0x000002000067d85a : test byte ptr [rbp - 0x27fcfda1], 0x8b ; ret
0x000002000066b46a : test byte ptr [rbp - 0x3c74bce4], 0x83 ; ret
0x00000200001997c6 : test byte ptr [rbp - 0x63], dl ; hlt ; inc dword ptr [rbx] ; ret
0x000002000050d721 : test byte ptr [rbp - 0x74fff78e], bh ; ret 0xe083
0x00000200004b6855 : test byte ptr [rbp - 0x74ffffff], bh ; ret
0x000002000052c96e : test byte ptr [rbp - 0x75000000], bh ; pop rdi ; adc bh, bh ; ret
0x00000200001ff7c7 : test byte ptr [rbp - 0x75000000], bl ; pop rbp ; idiv edi ; ret
0x00000200005a2a7f : test byte ptr [rbp - 0x75000000], ch ; ret 0xe8c1
0x0000020000478821 : test byte ptr [rbp - 0x75000000], dh ; ret
0x0000020000064aa5 : test byte ptr [rbp - 0x7cb6ffef], bl ; ret 0x4104
0x00000200000a39e6 : test byte ptr [rbp - 0x9fff193], al ; ret
0x00000200000aded2 : test byte ptr [rbp - 0x9fffff9], dh ; ret
0x00000200000d5c22 : test byte ptr [rbx + 0x48000c13], dl ; add esp, 0x38 ; ret
0x000002000061af76 : test byte ptr [rbx + 0x5c893059], 0x24 ; js 0x2000061af13 ; ret
0x000002000012db40 : test byte ptr [rbx + rax + 0x64], 0x24 ; and byte ptr [rcx - 0x75], al ; ret 0xc8c1
0x000002000042bc23 : test byte ptr [rbx + rcx*4 - 0x2d], 0x8b ; ret
0x0000020000406f49 : test byte ptr [rbx + rcx*4 - 0x31], 0xeb ; ret 0x8bcc
0x00000200000e7ab9 : test byte ptr [rbx - 0x2674b716], 0xf7 ; ret 0xfffc
0x00000200005223c9 : test byte ptr [rbx - 0x3700fbae], 3 ; ret 0x65e9
0x000002000060ef67 : test byte ptr [rbx - 0x73], 0x14 ; call 0x20000231ce8
0x00000200005ad446 : test byte ptr [rbx - 0x7400143a], cl ; ret
0x0000020000530868 : test byte ptr [rbx - 0x74fff5ea], bl ; ret
0x0000020000582c44 : test byte ptr [rbx - 0x7c0016ae], ch ; ret
0x000002000017b78e : test byte ptr [rbx - 0x900113d], ch ; ret 0xba01
0x0000020000070d9f : test byte ptr [rbx - 0x9ffef39], bl ; ret
0x0000020000076e4b : test byte ptr [rbx - 0xa000000], ah ; ret
0x0000020000021caf : test byte ptr [rbx - 0xffec44], ah ; ret
0x000002000005074a : test byte ptr [rbx - 0xffed9e], al ; ret
0x000002000022d8c8 : test byte ptr [rbx], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xbe48
0x00000200005d4c9e : test byte ptr [rbx], ah ; sbb esi, esi ; push qword ptr [rbx] ; shr al, cl ; ret
0x00000200004ac5ab : test byte ptr [rbx], al ; add al, 0 ; add byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x0000020000521b4a : test byte ptr [rbx], bl ; ret
0x000002000049613e : test byte ptr [rbx], ch ; cmp eax, 0xb60f0012 ; ret
0x00000200004c0fc6 : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0xa], al ; ret
0x0000020000148df1 : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7401
0x00000200004e098a : test byte ptr [rbx], dh ; ret
0x0000020000464b78 : test byte ptr [rbx], dl ; add dword ptr [rax], eax ; add bh, bh ; ret 0x8348
0x00000200004c1802 : test byte ptr [rbx], dl ; xor dword ptr [rax], edx ; add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x000002000003ffb0 : test byte ptr [rcx + 0x19], 1 ; jne 0x2000003ffc5 ; ret
0x000002000005381d : test byte ptr [rcx + 0x218], al ; ret
0x00000200000fd7ca : test byte ptr [rcx + 0x330006d0], ah ; div dh ; ret
0x0000020000055849 : test byte ptr [rcx + 0x43], 1 ; jne 0x2000005585a ; xor eax, eax ; ret
0x0000020000491bd8 : test byte ptr [rcx + 0x4911ec], bh ; add rax, rcx ; jmp rax
0x000002000019d9d8 : test byte ptr [rcx + 0x6f8db0], cl ; ret
0x00000200005243dd : test byte ptr [rcx + 0xf], al ; ret 0x8489
0x0000020000419de4 : test byte ptr [rcx + 2], 1 ; jne 0x20000419df5 ; xor eax, eax ; ret
0x0000020000042c30 : test byte ptr [rcx + rdi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x00000200003fd9a8 : test byte ptr [rcx - 0x74000002], ah ; ret
0x00000200004cf588 : test byte ptr [rcx - 0x74fffff7], dh ; ret
0x000002000052d828 : test byte ptr [rcx - 0x75], 0x46 ; sub byte ptr [rax - 1], cl ; ret
0x000002000045965c : test byte ptr [rcx - 0x75], 0xce ; call 0x200005f591a
0x0000020000683ae8 : test byte ptr [rcx - 0x75], 0xfe ; jmp 0x20000683afa
0x0000020000167ab0 : test byte ptr [rcx - 0x75], al ; ret 0xc148
0x0000020000055634 : test byte ptr [rcx - 0x9ffffff], al ; ret
0x0000020000670d82 : test byte ptr [rcx - 0xa000000], cl ; ret
0x000002000001727b : test byte ptr [rcx], 0 ; add dh, dh ; ret
0x0000020000231d39 : test byte ptr [rcx], ah ; add al, byte ptr [rax] ; add byte ptr [rcx - 0xa], al ; ret 0xf08
0x000002000011e808 : test byte ptr [rcx], ah ; push rcx ; add eax, 0xc18b4800 ; ret
0x00000200004a7211 : test byte ptr [rcx], bh ; jb 0x200004a722c ; add dh, dh ; ret
0x00000200004f796c : test byte ptr [rcx], bh ; sbb byte ptr [rbx], cl ; add byte ptr [rax], al ; add edi, edi ; ret
0x00000200003f9ab8 : test byte ptr [rcx], bl ; add dword ptr [rax], eax ; add dh, dh ; ret 0xf02
0x0000020000531fdc : test byte ptr [rcx], ch ; adc byte ptr [rdx], cl ; add byte ptr [rdi + rcx - 0x49], al ; ret
0x000002000053f36d : test byte ptr [rcx], cl ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003b7273 : test byte ptr [rcx], dh ; enter 0, 0 ; inc rdx ; jmp 0x200003b725b
0x0000020000112ccc : test byte ptr [rcx], dh ; idiv edi ; jmp rax
0x0000020000021416 : test byte ptr [rcx], dh ; ret
0x0000020000196442 : test byte ptr [rcx], dl ; ret
0x000002000017b75c : test byte ptr [rcx], dl ; ret 0xffee
0x00000200000435f6 : test byte ptr [rdi + 0x12], 0 ; xor al, al ; ret
0x0000020000043d5b : test byte ptr [rdi + 0x23], ch ; adc dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000761128 : test byte ptr [rdi + 0x2b000001], bh ; ret
0x000002000067a578 : test byte ptr [rdi + 0x49000000], dh ; mov ecx, esi ; call rax
0x0000020000166138 : test byte ptr [rdi + 0x7a], dh ; in eax, dx ; inc dword ptr [rbp + 0x3b] ; ret
0x000002000041926f : test byte ptr [rdi + rdi*8 - 1], ah ; inc dword ptr [rcx - 0x75] ; ret
0x00000200004da5f7 : test byte ptr [rdi - 0x1000000], bl ; ret 0x8349
0x000002000015cc15 : test byte ptr [rdi - 0x160013ff], ah ; ret
0x0000020000071054 : test byte ptr [rdi - 0x3b], cl ; adc byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000209548 : test byte ptr [rdi - 0x73000000], bh ; jmp qword ptr [r11]
0x000002000053089e : test byte ptr [rdi - 0x74fff5e9], cl ; ret 0xffb9
0x00000200004e7f52 : test byte ptr [rdi - 0x76000000], bl ; ret 0xd2f6
0x0000020000003833 : test byte ptr [rdi - 0x9beffeb], ah ; ret
0x00000200003c70e5 : test byte ptr [rdi - 0x9fffffc], ah ; ret
0x000002000013be98 : test byte ptr [rdi - 0xa000000], cl ; ret
0x000002000004032e : test byte ptr [rdi], 0 ; mov al, 1 ; add rsp, 0x28 ; ret
0x000002000004c666 : test byte ptr [rdi], 0x4f ; ret 0x8388
0x000002000043555e : test byte ptr [rdi], 0x84 ; cmpsd dword ptr [rsi], dword ptr [rdi] ; je 0x20000435583 ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200000d7104 : test byte ptr [rdi], 0x84 ; ret
0x00000200000ba2f8 : test byte ptr [rdi], 0x84 ; ret 0
0x0000020000414e8b : test byte ptr [rdi], 0x84 ; ret 0x16d0
0x000002000057c588 : test byte ptr [rdi], 0x84 ; ret 0xf61d
0x00000200000a25a0 : test byte ptr [rdi], 0x84 ; ret 4
0x000002000010c99b : test byte ptr [rdi], 0x84 ; scasd eax, dword ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x000002000005b7fb : test byte ptr [rdi], 0x84 ; sub eax, 0xf6000001 ; ret
0x0000020000472642 : test byte ptr [rdi], 0x85 ; call rcx
0x000002000015ea54 : test byte ptr [rdi], 0x85 ; mov dh, 0x86 ; in al, dx ; dec dword ptr [rax - 0x75] ; ret
0x000002000041e76b : test byte ptr [rdi], 0x85 ; mov eax, 0x8b001668 ; ret
0x00000200004c8329 : test byte ptr [rdi], 0x85 ; mov ebp, 0x8b000000 ; ret
0x0000020000682127 : test byte ptr [rdi], 0x85 ; or byte ptr ds:[rax], al ; add dh, dh ; ret
0x000002000059d2ad : test byte ptr [rdi], 0x85 ; pop rax ; idiv edi ; inc dword ptr [rcx - 0x7d] ; call qword ptr [rax]
0x00000200000af325 : test byte ptr [rdi], 0x85 ; ret
0x000002000045e1bc : test byte ptr [rdi], 0x85 ; ret 0
0x00000200005163c8 : test byte ptr [rdi], 0x85 ; ret 0xb4b
0x00000200000bfc8a : test byte ptr [rdi], 0x85 ; ret 0xd16
0x0000020000185946 : test byte ptr [rdi], 0x85 ; salc ; ret 0xfff0
0x000002000045b76f : test byte ptr [rdi], 0x85 ; stosb byte ptr [rdi], al ; ret 0x14
0x000002000005b1ea : test byte ptr [rdi], 0x85 ; stosd dword ptr [rdi], eax ; or byte ptr [rax], al ; add dh, dh ; ret
0x00000200000d1d30 : test byte ptr [rdi], 0x85 ; sub byte ptr [rsi + 0xc], al ; add dh, dh ; ret
0x000002000004f530 : test byte ptr [rdi], 0x95 ; ret
0x000002000009c82e : test byte ptr [rdi], 0x95 ; ret 0x8548
0x0000020000520a3a : test byte ptr [rdi], 0x95 ; ret 0xf5e8
0x00000200000b0af1 : test byte ptr [rdi], 0xb6 ; ret 0x4c0f
0x00000200001916fa : test byte ptr [rdi], 0xb6 ; ret 0xf44
0x000002000003af7e : test byte ptr [rdi], ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x0000020000407ad2 : test byte ptr [rdi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000416404 : test byte ptr [rdi], ah ; ret
0x00000200004036b0 : test byte ptr [rdi], al ; ret
0x0000020000521d48 : test byte ptr [rdi], al ; ret 0xa
0x0000020000058e04 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003c6af4 : test byte ptr [rdi], bh ; ret
0x0000020000731876 : test byte ptr [rdi], bl ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xbf41
0x00000200004859ee : test byte ptr [rdi], bl ; call qword ptr [rdx]
0x00000200000fea94 : test byte ptr [rdi], bl ; ret
0x000002000053a42a : test byte ptr [rdi], ch ; add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 5], cl ; ret 0xdc94
0x00000200004e5772 : test byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rbp + 0x3b], al ; ret 0x850f
0x000002000075d625 : test byte ptr [rdi], cl ; ret
0x00000200005ad387 : test byte ptr [rdi], dh ; ret
0x00000200003fd112 : test byte ptr [rdi], dh ; ret 0x17
0x000002000048f274 : test byte ptr [rdi], dh ; xchg eax, edx ; adc al, byte ptr [rax] ; call 0x200000bccac
0x00000200000e1a5b : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000dbf2c : test byte ptr [rdi], dl ; ret
0x000002000011503f : test byte ptr [rdi], dl ; ret 5
0x000002000001cec2 : test byte ptr [rdx + 0x1c328], cl ; add rax, rdx ; jmp rax
0x000002000076129f : test byte ptr [rdx + 0x2b000000], dl ; ret
0x0000020000435283 : test byte ptr [rdx + 0x4350a8], ch ; add rax, r10 ; jmp rax
0x00000200004941aa : test byte ptr [rdx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000044afa1 : test byte ptr [rdx + rdi*8 - 1], bh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000002a64 : test byte ptr [rdx + rsi*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0xd348
0x00000200004ceb6f : test byte ptr [rdx - 0x1000000], bh ; ret
0x00000200000e2b67 : test byte ptr [rdx - 0x16000002], bh ; ret
0x0000020000585e25 : test byte ptr [rdx - 0x2d], dh ; cmc ; dec dword ptr [rax - 0x7d] ; ret 0x4838
0x000002000041133f : test byte ptr [rdx - 0x74ffe907], bh ; adc ecx, dword ptr [rbp - 0x75] ; ret 0x8b41
0x0000020000022020 : test byte ptr [rdx - 0x74ffec47], ah ; ret
0x000002000069a171 : test byte ptr [rdx - 0x75000000], dl ; ret 0xd148
0x00000200000789cb : test byte ptr [rdx - 0xa000000], al ; ret
0x000002000010ff05 : test byte ptr [rdx - 0xa000000], cl ; ret 0xf08
0x0000020000426f4d : test byte ptr [rdx - 0xffe8db], dh ; ret
0x000002000049add9 : test byte ptr [rdx - 4], ah ; adc dword ptr [rax], eax ; mov rcx, rbp ; call rax
0x00000200003cce0d : test byte ptr [rdx], ah ; js 0x200003cce31 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000060ed88 : test byte ptr [rdx], ah ; ret 0x48ff
0x000002000011f954 : test byte ptr [rdx], al ; cmp al, 0xa6 ; and al, 0 ; ret
0x00000200005c1498 : test byte ptr [rdx], al ; ret 0x44ff
0x00000200003a6a26 : test byte ptr [rdx], bh ; add byte ptr [rax], r8b ; mov al, 1 ; ret
0x000002000074b96c : test byte ptr [rdx], bh ; ret
0x00000200003b64e8 : test byte ptr [rdx], bl ; add al, ch ; add byte ptr [rax], 0 ; add dh, dh ; ret
0x00000200005d69e5 : test byte ptr [rdx], bl ; idiv bh ; xor eax, eax ; ret
0x00000200004a00a8 : test byte ptr [rdx], bl ; ret 0xf7ff
0x000002000004aa8a : test byte ptr [rdx], ch ; add al, byte ptr [rax] ; add byte ptr [rcx - 0x7d], cl ; ret
0x000002000058f6c6 : test byte ptr [rdx], ch ; jbe 0x2000058f6c8 ; dec dword ptr [rax - 0x75] ; ret
0x00000200003b4616 : test byte ptr [rdx], cl ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x0000020000521d50 : test byte ptr [rdx], cl ; ret 0xa
0x0000020000167f8a : test byte ptr [rdx], dl ; ret 0xffed
0x000002000077f134 : test byte ptr [rip + 0x6b000001], cl ; ret
0x00000200004efe51 : test byte ptr [rip - 0x17fff64c], bl ; in eax, 0x76 ; ret 0xa8ff
0x00000200000ae22e : test byte ptr [rip - 0x2dccbb00], 0xf6 ; ret 0xf1e
0x0000020000222a8b : test byte ptr [rip - 0x74b70000], al ; ret
0x000002000022342b : test byte ptr [rip - 0x74b70000], al ; ret 0x8b48
0x0000020000735afc : test byte ptr [rip - 0x74b70000], al ; ret 0x8b49
0x000002000072c957 : test byte ptr [rip - 0x74b80000], al ; ret
0x00000200002269ce : test byte ptr [rip - 0x74b80000], al ; ret 0x8b48
0x000002000073bfb9 : test byte ptr [rip - 0x74b80000], al ; ret 0x8b4c
0x00000200000d1c2d : test byte ptr [rip - 0x74ffffff], ah ; ret 0x8b45
0x0000020000466a0e : test byte ptr [rip - 0x74ffffff], dl ; ret
0x00000200000aa4a8 : test byte ptr [rip - 0x9000004], ch ; ret 0x7408
0x0000020000498d20 : test byte ptr [rip - 0x9fffffe], dh ; ret 0xc601
0x000002000005b7fd : test byte ptr [rip - 0x9ffffff], ch ; ret
0x000002000064ac20 : test byte ptr [rip - 0x9ffffff], ch ; ret 0xf20
0x00000200005ddefb : test byte ptr [rip - 0xffffff], bh ; ret
0x000002000052c1f3 : test byte ptr [rsi + 0x48000000], bh ; mov ecx, ebx ; call rax
0x0000020000166141 : test byte ptr [rsi + 0x7a], ch ; in eax, dx ; inc dword ptr [rbp + 0x3b] ; ret 0x840f
0x0000020000040198 : test byte ptr [rsi + rbp], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret 0xd348
0x00000200003d1c91 : test byte ptr [rsi + rcx*4 - 0x74bbffe7], bl ; ret 0x894c
0x000002000049906d : test byte ptr [rsi + rdi*8 - 0x76170001], dh ; xchg eax, edx ; ret
0x000002000007065b : test byte ptr [rsi - 0x34], cl ; adc byte ptr [rax], al ; ret
0x000002000065eee0 : test byte ptr [rsi - 0x73000000], bh ; jmp qword ptr [rbx]
0x000002000044abb4 : test byte ptr [rsi - 0x74b7ffeb], al ; ret
0x00000200004129e3 : test byte ptr [rsi - 0x74ffe916], ah ; ret
0x0000020000181638 : test byte ptr [rsi - 0x9ffffff], bh ; ret
0x000002000061d7f0 : test byte ptr [rsi - 0x9ffffff], cl ; ret 0xf01
0x0000020000685eed : test byte ptr [rsi - 0xa000000], bh ; ret 0x7401
0x00000200000c88c7 : test byte ptr [rsi - 0xfff355], dh ; ret
0x00000200001240a8 : test byte ptr [rsi - 0xfff864], dh ; ret 0x8348
0x000002000062f344 : test byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rbx], bh ; ret
0x000002000073571a : test byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0x2be
0x00000200000af683 : test byte ptr [rsi], ah ; add eax, 0xb60f0000 ; ret
0x00000200003fc6ce : test byte ptr [rsi], al ; add al, byte ptr [rax] ; add dh, dh ; ret 0xf01
0x00000200000f01a7 : test byte ptr [rsi], al ; ret
0x0000020000067ca7 : test byte ptr [rsi], bl ; cmp edx, dword ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000017fd75 : test byte ptr [rsi], bl ; out -0x11, eax ; dec dword ptr [rax - 0x75] ; ret
0x000002000052449f : test byte ptr [rsi], ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x3b], al ; ret 0x840f
0x000002000022db0c : test byte ptr [rsi], ch ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret 0xba49
0x00000200000d7375 : test byte ptr [rsi], ch ; dec byte ptr [rbx] ; add bl, ch ; ret 0xcccc
0x00000200000a7e7e : test byte ptr [rsi], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x000002000075d5e8 : test byte ptr [rsi], dh ; ret
0x00000200000215b4 : test byte ptr [rsi], dl ; ret 0x13
0x000002000006d9c7 : test byte ptr [rsp + rbp*4], ah ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xc22b
0x0000020000224cbb : test byte ptr [rsp + rdi*2], ah ; add eax, 0x8b480000 ; ret
0x00000200002087f3 : test byte ptr [rsp + rdx*4], ah ; add byte ptr [rax], al ; add al, ch ; ret 0xf46c
0x0000020000106988 : test ch, 2 ; je 0x20000106975 ; jmp 0x20000106958
0x000002000049914d : test ch, 2 ; jne 0x20000499162 ; call 0x200000bb1b8
0x000002000047ae54 : test ch, ah ; jnp 0x2000047ae71 ; add dh, dh ; ret
0x000002000018924e : test ch, ah ; push rax ; int1 ; dec dword ptr [rax - 9] ; ret
0x00000200005b28f0 : test ch, ah ; push rsi ; ret 0xf02
0x000002000075d476 : test ch, ah ; ret
0x0000020000514f78 : test ch, al ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000200004b5d91 : test ch, al ; ret 0x10
0x0000020000039004 : test ch, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000017adf4 : test ch, dh ; dec dword ptr [rax - 0x75] ; ret
0x0000020000177218 : test ch, dh ; wait ; in eax, dx ; inc dword ptr [rcx - 0x75] ; ret
0x000002000009527a : test ch, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000fe9bf : test ch, dl ; ret
0x000002000046c971 : test cl, 0x10 ; jne 0x2000046c97c ; ret
0x000002000010de69 : test cl, 0x20 ; je 0x2000010de77 ; inc eax ; ret
0x0000020000039172 : test cl, 0x20 ; jne 0x20000039180 ; xor eax, eax ; ret
0x000002000010de51 : test cl, 0x3f ; je 0x2000010de5f ; inc eax ; ret
0x000002000040446b : test cl, 0xf8 ; jne 0x20000404476 ; ret
0x00000200004a029b : test cl, 0xff ; call 0x200000c2106
0x0000020000031d16 : test cl, 1 ; je 0x20000031d11 ; ret
0x000002000005884a : test cl, 1 ; je 0x2000005885d ; add rsp, 0x28 ; ret
0x000002000007bbb2 : test cl, 1 ; jne 0x2000007bbc1 ; xor eax, eax ; ret
0x00000200004c6389 : test cl, 1 ; jne 0x200004c63d7 ; mov qword ptr [r9], r10 ; ret
0x00000200004ba78e : test cl, 7 ; jne 0x200004ba7a7 ; jmp 0x200004ba7ac
0x00000200001c76e9 : test cl, 8 ; je 0x200001c76fa ; or dl, 0x10 ; mov al, dl ; ret
0x00000200004609ae : test cl, 8 ; jne 0x200004609bd ; ret
0x00000200003b00e6 : test cl, ah ; mov eax, 0xeb000000 ; sub al, 0x8b ; ret
0x00000200000328f9 : test cl, al ; je 0x2000003290c ; mov eax, 1 ; ret
0x000002000049d3a2 : test cl, al ; je 0x2000049d350 ; jmp 0x2000049d370
0x000002000000e43e : test cl, al ; mov dh, 0x14 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000156d2 : test cl, al ; sete al ; ret
0x00000200000e9b54 : test cl, al ; setne al ; ret
0x0000020000521a96 : test cl, bh ; ret
0x0000020000115e93 : test cl, bl ; mov bh, 5 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005067cc : test cl, ch ; mov ecx, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x0000020000148e11 : test cl, cl ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7406
0x00000200000b25c1 : test cl, cl ; jne 0x200000b25da ; add rsp, 0x38 ; ret
0x00000200000cdc56 : test cl, cl ; jne 0x200000cdc78 ; add rsp, 0x28 ; ret
0x000002000043eea4 : test cl, cl ; jne 0x2000043eebd ; xor eax, eax ; ret
0x000002000064f516 : test cl, cl ; jne 0x2000064f528 ; mov eax, 1 ; ret
0x000002000064f659 : test cl, cl ; jne 0x2000064f666 ; mov al, 1 ; ret
0x0000020000077487 : test cl, cl ; jo 0x200000774a1 ; add dh, dh ; ret 0x7410
0x00000200004609aa : test cl, cl ; js 0x200004609ce ; test cl, 8 ; jne 0x200004609c1 ; ret
0x0000020000050289 : test cl, cl ; sete al ; ret
0x0000020000557d76 : test cl, cl ; setne al ; pop rbp ; ret
0x0000020000513d06 : test cl, cl ; sub eax, 0x8a440008 ; ret
0x0000020000207144 : test cl, dh ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf02
0x00000200000773a7 : test cl, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000231ad4 : test cl, dl ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x1fe9
0x00000200001da35b : test cl, dl ; jne 0x200001da36a ; mov eax, r10d ; jmp 0x200001da391
0x00000200001da35a : test cl, r10b ; jne 0x200001da36b ; mov eax, r10d ; jmp 0x200001da392
0x000002000013318d : test cx, 0xffff ; jne 0x2000013319c ; ret
0x000002000020e495 : test cx, ax ; jne 0x2000020e4a6 ; mov byte ptr [rdx + 2], cl ; ret
0x00000200000bf60b : test cx, cx ; je 0x200000bf61e ; add rsp, 0x28 ; ret
0x00000200000c211d : test cx, cx ; je 0x200000c2130 ; add rsp, 0x28 ; ret
0x0000020000699856 : test dh, bh ; add dword ptr [rax], eax ; add bh, bh ; ret 0x8349
0x000002000075d430 : test dh, bh ; ret
0x0000020000120af4 : test dh, bl ; add byte ptr [rax], al ; add byte ptr [rbx], dh ; shr bl, cl ; ret
0x0000020000521b5b : test dh, bl ; ret 0xa
0x00000200000dc030 : test dh, ch ; ret 0xb
0x000002000018755e : test dh, cl ; adc ecx, esi ; inc dword ptr [rbp - 0x75] ; ret
0x000002000001727a : test dh, dh ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200000f3faf : test dh, dh ; jne 0x200000f3f78 ; jmp 0x200000f3f95
0x000002000013344d : test dh, dh ; jne 0x200001333e0 ; xor rax, rax ; ret
0x0000020000135021 : test dh, dh ; jne 0x20000134fb6 ; xor eax, eax ; ret
0x00000200001350b4 : test dh, dh ; jne 0x2000013507a ; lea rax, qword ptr [rcx + rax - 1] ; ret
0x0000020000082c16 : test dl, 0x20 ; je 0x20000082c29 ; mov rax, qword ptr [rcx + 0x18] ; ret
0x0000020000031b45 : test dl, 1 ; je 0x20000031b56 ; and qword ptr [rcx], rax ; ret
0x0000020000654f3b : test dl, 3 ; je 0x20000654f4c ; call 0x20000671163
0x00000200001f0f12 : test dl, 7 ; je 0x200001f0f21 ; xor al, al ; ret
0x00000200000bcf34 : test dl, ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000396c9 : test dl, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret 0x8d4d
0x000002000046b04c : test dl, ah ; sub eax, 0xba0014 ; add bh, bh ; jmp qword ptr [rbx]
0x00000200003e7c5c : test dl, bl ; mov ah, 0x18 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200000b8593 : test dl, ch ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000e2020 : test dl, ch ; push rax ; add dword ptr [rax], eax ; add bh, bh ; ret 0x894a
0x00000200000a9936 : test dl, dh ; add eax, dword ptr [rax] ; add byte ptr [rdi + rcx - 0x51], cl ; ret 0x8b49
0x000002000064a303 : test dl, dl ; add al, byte ptr [rax] ; add dh, dh ; ret 0xfbf
0x00000200000328c2 : test dl, dl ; cmovne eax, ecx ; ret
0x00000200000534bc : test dl, dl ; je 0x200000534b8 ; mov al, 1 ; ret
0x0000020000110dee : test dl, dl ; je 0x20000110e01 ; cmp byte ptr [rcx + 0x21], al ; jne 0x20000110e01 ; ret
0x0000020000074f16 : test dl, dl ; jne 0x20000074f27 ; mov al, byte ptr [rax + rcx*2 + 1] ; ret
0x00000200000500de : test dl, dl ; jne 0x2000017683b ; ret
0x0000020000050122 : test dl, dl ; jne 0x20000176877 ; ret
0x000002000052b0c0 : test dl, dl ; jne 0x2000052b0c9 ; ret
0x000002000041634f : test dl, dl ; ret
0x00000200000e267a : test dword ptr [r10 + 0x98], edx ; jne 0x200000e268d ; ret
0x0000020000774ef8 : test dword ptr [rax + 0x10], ebp ; std ; dec dword ptr [rax - 0x7d] ; ret 0x4108
0x0000020000731532 : test dword ptr [rax + 0x2b000005], edx ; ret
0x00000200004a7fdd : test dword ptr [rax + 0x3000000], ebx ; ret 0x9489
0x0000020000221600 : test dword ptr [rax + 0x33000001], edi ; leave ; call r9
0x00000200003f5fc3 : test dword ptr [rax + 0x33000002], ebp ; fisttp dword ptr [rax - 0x75] ; ret 0x2b49
0x000002000050cef0 : test dword ptr [rax + 0x33], 0x6287e8cc ; ret 0x48ff
0x0000020000188570 : test dword ptr [rax + 0x33], esi ; int1 ; push rsi ; ret
0x00000200004f2f5e : test dword ptr [rax + 0x3b00096c], edx ; ret 0x850f
0x00000200001028a5 : test dword ptr [rax + 0xf000000], ebp ; scasd eax, dword ptr [rdi] ; ret 0x12b
0x0000020000509f95 : test dword ptr [rax + 0xf000000], esp ; xchg eax, ebp ; ret
0x00000200000cf5da : test dword ptr [rax + 0xf000002], edi ; mov dh, 0x8b ; ret 0
0x0000020000586b5d : test dword ptr [rax + rax - 0x74b7000a], eax ; ret
0x00000200003e70eb : test dword ptr [rax + rax - 0x74b80000], eax ; ret
0x00000200003e5175 : test dword ptr [rax + rax - 0x74b80000], ecx ; ret
0x00000200000c2cf6 : test dword ptr [rax + rax], 0x28c48348 ; ret
0x000002000060e7c8 : test dword ptr [rax + rax], edx ; add byte ptr [rax], al ; call 0x20000231ce8
0x000002000003ea6d : test dword ptr [rax + rdi*2], ecx ; adc al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x000002000068ea45 : test dword ptr [rax - 0x1000000], eax ; ret
0x00000200004aca14 : test dword ptr [rax - 0x17000004], esp ; loop 0x200004aca7c ; ret 0xe9ff
0x00000200005ab8f6 : test dword ptr [rax - 0x3e], esi ; jmp 0x200005ab8fc
0x00000200000f3d9f : test dword ptr [rax - 0x4f], edx ; or al, byte ptr [rax] ; ret
0x00000200001172fb : test dword ptr [rax - 0x53], edi ; add eax, 0x8a01b300 ; ret
0x0000020000593a64 : test dword ptr [rax - 0x73], 0x8348431c ; ret
0x00000200004ce41c : test dword ptr [rax - 0x73], 0x83484b1c ; ret
0x0000020000690381 : test dword ptr [rax - 0x73], 0xff48f745 ; ret 0x8948
0x000002000009de8e : test dword ptr [rax - 0x74b7fff5], ecx ; ret
0x000002000041e76d : test dword ptr [rax - 0x74ffe998], edi ; ret
0x00000200004659e4 : test dword ptr [rax - 0x74ffebbf], esi ; ret
0x000002000050d72e : test dword ptr [rax - 0x74fff78e], esi ; ret 0xc933
0x000002000076e7b1 : test dword ptr [rax - 0x74ffff02], ebx ; ret
0x00000200004d936f : test dword ptr [rax - 0x75000000], ecx ; ret
0x000002000010e958 : test dword ptr [rax - 0x75000000], ecx ; ret 0x6b48
0x000002000004ee36 : test dword ptr [rax - 0x75], ecx ; ret
0x000002000048cf53 : test dword ptr [rax - 0x75ffed53], esp ; ret
0x00000200003ca7e9 : test dword ptr [rax - 0x9fffffb], esi ; ret
0x000002000040420c : test dword ptr [rax - 0x9ffffff], esi ; ret
0x0000020000430602 : test dword ptr [rax - 0xa000000], eax ; ret
0x0000020000077079 : test dword ptr [rax - 0xa000000], ecx ; ret
0x0000020000408776 : test dword ptr [rax - 0xa000000], esi ; ret 0xf01
0x00000200001ac8cc : test dword ptr [rax - 3], esi ; ret
0x0000020000096a0e : test dword ptr [rax], 0x3b4d0000 ; ret
0x0000020000440b95 : test dword ptr [rax], 0x8b480000 ; ret
0x00000200005f08e4 : test dword ptr [rax], 0x8b4c0000 ; ret
0x000002000010d883 : test dword ptr [rax], eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003d0cf9 : test dword ptr [rax], eax ; add eax, 0x8b410000 ; ret
0x00000200003a7954 : test dword ptr [rax], eax ; ret
0x0000020000446115 : test dword ptr [rax], eax ; ret 0x15
0x000002000019049b : test dword ptr [rax], ebp ; add eax, 0x83480000 ; ret
0x000002000018be3a : test dword ptr [rax], ebx ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000508990 : test dword ptr [rax], ecx ; add dh, dh ; ret 0xf40
0x00000200000cfc85 : test dword ptr [rax], ecx ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret 0
0x00000200005ab95e : test dword ptr [rax], ecx ; ret 0xffeb
0x00000200006882bd : test dword ptr [rax], edi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000003ce99 : test dword ptr [rax], edi ; mov edx, dword ptr [rdx] ; add dh, dh ; ret
0x000002000045abe1 : test dword ptr [rax], edi ; ret
0x00000200000d07b7 : test dword ptr [rax], edx ; add al, 0 ; add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0x0000020000020a2b : test dword ptr [rax], edx ; jne 0x20000020a38 ; xor eax, eax ; ret
0x0000020000082983 : test dword ptr [rax], esp ; pop rbx ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsi
0x00000200000938f5 : test dword ptr [rax], esp ; str word ptr es:[rcx - 0x7d] ; ret
0x00000200004ad064 : test dword ptr [rbp + 0x49001121], ebp ; lea eax, dword ptr [rax + rdx*4] ; ret
0x0000020000050125 : test dword ptr [rbp + 0x67], eax ; adc al, byte ptr [rax] ; ret
0x00000200000500e1 : test dword ptr [rbp + 0x67], ecx ; adc al, byte ptr [rax] ; ret
0x00000200000a39e7 : test dword ptr [rbp + 0xe], ebp ; add dh, dh ; ret
0x000002000014e19b : test dword ptr [rbp + 2], edx ; add byte ptr [rax], al ; call r10
0x00000200000e7985 : test dword ptr [rbp + rax + 0x41c60009], edx ; xor byte ptr [rcx], al ; ret
0x0000020000526afe : test dword ptr [rbp + rcx*4 + 0x42], 0x89b8e840 ; ret 0x48ff
0x00000200005dcdbc : test dword ptr [rbp + rcx*4 + 0x4e], 0x3d8b4801 ; ret 0x11
0x00000200005aea77 : test dword ptr [rbp - 0x74b3002e], esi ; ret 0xd233
0x00000200004e910e : test dword ptr [rbp - 0x74fff204], esi ; ret
0x00000200000f3ba4 : test dword ptr [rbp - 0x74fff54e], esp ; ret 0x87eb
0x000002000006a934 : test dword ptr [rbp - 0x74ffffff], edi ; ret
0x000002000044fd9c : test dword ptr [rbp - 0x75000000], eax ; push rbx ; adc dh, dh ; ret 0x7504
0x00000200004c832b : test dword ptr [rbp - 0x75000000], edi ; ret
0x000002000013f06d : test dword ptr [rbp - 0x7cfffffd], esp ; ret 0xebff
0x0000020000432da2 : test dword ptr [rbp - 0x7effe966], ebp ; jmp qword ptr [rbx]
0x00000200004305df : test dword ptr [rbp - 0x9ffe946], esi ; ret
0x00000200003ca3a0 : test dword ptr [rbp - 0x9fffff9], edi ; ret
0x0000020000668a1b : test dword ptr [rbp - 0x9ffffff], eax ; ret 0x7403
0x0000020000453a15 : test dword ptr [rbp - 0x9ffffff], ebx ; ret
0x000002000040877f : test dword ptr [rbp - 0xa000000], ebx ; ret 0xf02
0x0000020000487020 : test dword ptr [rbx + 0x33000000], eax ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x000002000046d0f8 : test dword ptr [rbx + 0x33001413], ebx ; push rsi ; ret 0x750f
0x0000020000452aaa : test dword ptr [rbx + 0x33001521], ebp ; fisttp dword ptr [rax - 0x75] ; ret
0x0000020000503603 : test dword ptr [rbx + 0x38], ecx ; jne 0x20000503616 ; add rsp, 0x38 ; ret
0x000002000076e898 : test dword ptr [rbx + 0x48000100], ebx ; add esp, 0x28 ; ret
0x0000020000020190 : test dword ptr [rbx + 0x480013d1], esi ; add esp, 0x28 ; ret
0x000002000006947c : test dword ptr [rbx + 0xf000000], ebp ; mov dh, 0x8d ; ret
0x0000020000437bb8 : test dword ptr [rbx - 0x17ffe9a2], ecx ; ret 0xc19a
0x00000200004e1152 : test dword ptr [rbx - 0x3fffffcc], edi ; jmp 0x200004e1123
0x00000200003d8af6 : test dword ptr [rbx - 0x74ffe6ca], esp ; ret
0x0000020000528d66 : test dword ptr [rbx - 0x74fff58f], eax ; ret
0x000002000043533d : test dword ptr [rbx - 0x75000000], edx ; ret
0x0000020000465fd4 : test dword ptr [rbx - 0x75000000], esp ; ret
0x000002000005b1f5 : test dword ptr [rbx - 0x9ffee20], ebx ; ret
0x000002000005b1ec : test dword ptr [rbx - 0x9fffff8], ebp ; ret
0x0000020000093e03 : test dword ptr [rbx - 0x9fffffa], esi ; ret
0x0000020000101996 : test dword ptr [rbx - 0xa000000], ebx ; ret
0x0000020000632b1b : test dword ptr [rbx - 0xffffff], edi ; ret 0x3b41
0x000002000045c0ff : test dword ptr [rbx], 0x8b4c0000 ; ret 0x8b49
0x00000200003f9191 : test dword ptr [rbx], ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000f02af : test dword ptr [rbx], ebx ; ret 0xa
0x0000020000413358 : test dword ptr [rbx], ecx ; add byte ptr [rax], al ; add byte ptr [rbx], ah ; ret 0x8941
0x00000200000bae9f : test dword ptr [rbx], edi ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000002000043f6ea : test dword ptr [rbx], edx ; adc eax, 0x8b4c0016 ; ret
0x00000200001fa9b3 : test dword ptr [rbx], edx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x3b], cl ; ret 0x850f
0x000002000045a9b1 : test dword ptr [rbx], edx ; ret
0x00000200006d31a6 : test dword ptr [rbx], esi ; add dword ptr [rax], eax ; add byte ptr [rcx - 9], cl ; ret 0xfff
0x0000020000115150 : test dword ptr [rbx], esi ; ret 5
0x000002000041621a : test dword ptr [rbx], esp ; ret
0x00000200003fd164 : test dword ptr [rbx], esp ; ret 0x17
0x0000020000050361 : test dword ptr [rcx + 0x10], edx ; jne 0x20000050372 ; mov al, r8b ; ret
0x00000200000936d4 : test dword ptr [rcx + 0x28], eax ; str word ptr [rcx - 0x7d] ; ret
0x0000020000216a20 : test dword ptr [rcx + 0x41000000], ecx ; mov al, bl ; ret
0x0000020000587f94 : test dword ptr [rcx + 0x45fff645], ebp ; mov dword ptr [rax + 0xc], ebx ; ret
0x0000020000102d14 : test dword ptr [rcx + 0x4800069c], ebx ; mov eax, ecx ; ret
0x00000200004790d4 : test dword ptr [rcx + 0x510], ebx ; jne 0x20000479127 ; ret
0x00000200004790d3 : test dword ptr [rcx + 0x510], r11d ; jne 0x20000479128 ; ret
0x00000200005c2fdd : test dword ptr [rcx + 0x71], ebp ; out dx, eax ; dec dword ptr [rbx + rcx*4 + 5] ; ret 0xffdb
0x0000020000069a1f : test dword ptr [rcx + rax - 0x44800000], ebx ; ret
0x00000200004e09da : test dword ptr [rcx + rax - 0x75bf0000], esp ; ret
0x00000200000bc287 : test dword ptr [rcx + rax*2 + 0x2a8000d], eax ; jne 0x200000bc29a ; ret
0x00000200000ee5cb : test dword ptr [rcx + rbx*8 - 0x7cb7fff6], ebp ; ret
0x00000200000f83ab : test dword ptr [rcx + rcx - 0x3fccfff9], ecx ; ret
0x00000200000aafb9 : test dword ptr [rcx + rcx], edx ; add dh, dh ; ret 0xf04
0x00000200000529c3 : test dword ptr [rcx + rdx*4], esp ; adc byte ptr [rax], al ; mov qword ptr [r8], rcx ; ret
0x00000200003d24f4 : test dword ptr [rcx + rsi], edi ; cmp eax, 0xcd034900 ; jmp rcx
0x0000020000082284 : test dword ptr [rcx - 0x1b], ebx ; sldt word ptr [rax - 0x80] ; call qword ptr [rcx]
0x0000020000500707 : test dword ptr [rcx - 0x2f], ecx ; or byte ptr [rax], al ; mov r8b, r10b ; jmp 0x200005006c2
0x00000200005cb5a8 : test dword ptr [rcx - 0x33000b3e], eax ; jmp 0x20000517836
0x000002000018bef4 : test dword ptr [rcx - 0x42], ecx ; int1 ; push rsi ; ret
0x00000200000776c0 : test dword ptr [rcx - 0x74000005], ebp ; ret
0x00000200000ca51d : test dword ptr [rcx - 0x74fff364], eax ; ret 0xba0f
0x000002000050957e : test dword ptr [rcx - 0x75000000], ecx ; ret
0x000002000020d71f : test dword ptr [rcx - 0x7d], 0x8b4110c7 ; ret 0xc148
0x00000200000b8ba0 : test dword ptr [rcx - 0x7d], eax ; ret
0x000002000002f4b6 : test dword ptr [rcx - 0x9ffecd4], ebp ; ret 0x7502
0x0000020000070ca4 : test dword ptr [rcx - 0x9ffef3a], eax ; ret
0x000002000011adc4 : test dword ptr [rcx - 0x9fffa87], eax ; ret
0x0000020000492f83 : test dword ptr [rcx - 0x9fffffb], esi ; ret
0x00000200003c3677 : test dword ptr [rcx - 0xa000000], ebp ; ret
0x00000200001cb385 : test dword ptr [rcx - 0xa000000], ecx ; ret 0x7401
0x00000200003a28d9 : test dword ptr [rcx - 0xffff8c], ebp ; ret 0x8348
0x00000200005fd13a : test dword ptr [rcx], eax ; add al, al ; ret
0x00000200003f29c4 : test dword ptr [rcx], eax ; je 0x200003f298c ; mov eax, 0xc0000022 ; ret
0x00000200004acd6e : test dword ptr [rcx], ebp ; add al, byte ptr [rax] ; add bh, dh ; ret 0
0x00000200000282d6 : test dword ptr [rcx], ebx ; ja 0x200000282f4 ; add byte ptr [rax - 0x75], cl ; ret
0x00000200005cb5f6 : test dword ptr [rcx], ebx ; ret
0x0000020000021566 : test dword ptr [rcx], ebx ; ret 0x13
0x0000020000113632 : test dword ptr [rcx], ecx ; push rdi ; idiv edi ; xor al, al ; ret
0x0000020000085002 : test dword ptr [rcx], edi ; ret
0x000002000016b2a2 : test dword ptr [rcx], edx ; add byte ptr [rax], al ; add al, 0x74 ; cmp byte ptr [rax - 0x75], cl ; ret
0x00000200004e6966 : test dword ptr [rcx], edx ; add dword ptr [rdx], ecx ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000501af4 : test dword ptr [rcx], edx ; ret
0x000002000004aeca : test dword ptr [rcx], esi ; add al, 0 ; add rcx, rbp ; jmp rcx
0x000002000009c504 : test dword ptr [rcx], esi ; ret
0x0000020000021583 : test dword ptr [rcx], esi ; ret 0x13
0x000002000048d111 : test dword ptr [rcx], esp ; add al, byte ptr [rax] ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x8b48
0x00000200006d7840 : test dword ptr [rdi + 0x3b], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x000002000002e768 : test dword ptr [rdi + 0x41001337], ebp ; mov al, al ; ret
0x00000200004d3d42 : test dword ptr [rdi + 0x5c], ecx ; str word ptr [rax - 0x7d] ; ret 0xeb28
0x00000200005c34e2 : test dword ptr [rdi + 0x72000000], ecx ; ret 0xdb33
0x0000020000054e71 : test dword ptr [rdi + rdi], edx ; add eax, 0xcd034800 ; jmp rcx
0x00000200000ab876 : test dword ptr [rdi + rsi*8 - 1], ecx ; push rsi ; ret
0x0000020000103426 : test dword ptr [rdi - 0x16000002], eax ; ret
0x000002000003cd5f : test dword ptr [rdi - 0x74], edx ; adc al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x0000020000569e17 : test dword ptr [rdi - 0x74bbffed], ecx ; ret
0x000002000048c1a5 : test dword ptr [rdi - 0x74ffed4a], edx ; ret
0x0000020000516274 : test dword ptr [rdi - 0x74fff4b4], esp ; ret
0x000002000057babc : test dword ptr [rdi - 0x7a0009fd], ecx ; ret 0x840f
0x00000200003b461f : test dword ptr [rdi - 0x9ffe570], ebp ; ret
0x00000200003b4647 : test dword ptr [rdi - 0x9ffe570], edx ; ret
0x000002000010199f : test dword ptr [rdi - 0x9fff957], ecx ; ret
0x000002000001dbc0 : test dword ptr [rdi - 0xc], esp ; adc eax, dword ptr [rax] ; mov rcx, rdi ; call rbx
0x00000200000aaf1b : test dword ptr [rdi], 0xe206687 ; add dh, dh ; ret
0x00000200001d9a99 : test dword ptr [rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x3f], cl ; call qword ptr [rax]
0x000002000008088f : test dword ptr [rdi], eax ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000030817 : test dword ptr [rdi], eax ; sbb eax, 0x89490013 ; add bh, bh ; ret 0x8948
0x00000200000d311a : test dword ptr [rdi], eax ; xor al, 0xc ; add byte ptr [rcx - 0x75], al ; ret
0x00000200001f8feb : test dword ptr [rdi], ebp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000001cde1 : test dword ptr [rdi], ebx ; call qword ptr [rbx]
0x0000020000683c25 : test dword ptr [rdi], ebx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000485986 : test dword ptr [rdi], edx ; call qword ptr [rdx]
0x0000020000541f29 : test dword ptr [rdi], edx ; or dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000200003cba05 : test dword ptr [rdi], esi ; mov bl, byte ptr [rcx] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000511cb4 : test dword ptr [rdi], esi ; or byte ptr [rax], r8b ; add rsp, 0x38 ; ret
0x00000200006b4f57 : test dword ptr [rdi], esi ; ret 0x4cff
0x00000200000f0288 : test dword ptr [rdi], esi ; ret 0xa
0x00000200000ae22c : test dword ptr [rdi], esi ; test byte ptr [rip - 0x2dccbb00], 0xf6 ; ret 0xf1e
0x00000200001f5fb5 : test dword ptr [rdi], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 1], cl ; ret
0x0000020000104d13 : test dword ptr [rdx + 0x48000685], edi ; add esp, 0x38 ; ret
0x0000020000529e0f : test dword ptr [rdx + 0x64], eax ; or al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200000e267b : test dword ptr [rdx + 0x98], edx ; jne 0x200000e268c ; ret
0x000002000005eefb : test dword ptr [rdx + rax], esp ; add byte ptr [rax - 0x75], cl ; ret
0x000002000007a83b : test dword ptr [rdx + rcx*2], edi ; adc byte ptr [rax], al ; mov eax, r9d ; ret
0x000002000001de9d : test dword ptr [rdx + rsi*8], edi ; adc eax, dword ptr [rax] ; add rsp, 0x38 ; ret
0x000002000009c84e : test dword ptr [rdx - 0x1000000], eax ; ret
0x0000020000497b8a : test dword ptr [rdx - 0x1000000], edx ; ret
0x00000200005ab904 : test dword ptr [rdx - 0x3e], esp ; jmp 0x200005ab90a
0x000002000041cac0 : test dword ptr [rdx - 0x74ffe983], edi ; ret
0x00000200004dee1d : test dword ptr [rdx - 0x74fff627], ecx ; ret
0x00000200004c4353 : test dword ptr [rdx - 0x74ffffff], edx ; ret
0x00000200006d9087 : test dword ptr [rdx - 0x7cffffd5], eax ; ret 0x4104
0x000002000001e221 : test dword ptr [rdx - 0x7d000000], eax ; ret 0x89ff
0x00000200004b5d41 : test dword ptr [rdx - 0x9ffef3e], ebp ; ret
0x000002000051fd97 : test dword ptr [rdx - 0xfff52a], ecx ; ret 0x3b44
0x0000020000424895 : test dword ptr [rdx], 0x8b48ffbf ; ret
0x00000200003b51f5 : test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add dh, dh ; ret 0x7402
0x000002000042269c : test dword ptr [rdx], eax ; add al, byte ptr [rax] ; add dh, dh ; ret 0x7510
0x00000200005208f3 : test dword ptr [rdx], eax ; add byte ptr [rax], al ; mov eax, 0xc000000d ; ret
0x000002000006a1c5 : test dword ptr [rdx], eax ; je 0x2000006a1d8 ; mov eax, 1 ; ret
0x0000020000016cad : test dword ptr [rdx], ebp ; adc al, 0 ; add rsp, 0x28 ; ret
0x00000200000af7d2 : test dword ptr [rdx], ebx ; add al, 0 ; add byte ptr [rax + 0x23], cl ; ret 0x3345
0x000002000007ec4e : test dword ptr [rdx], ebx ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200003c6b09 : test dword ptr [rdx], edi ; ret
0x000002000003db59 : test dword ptr [rdx], edx ; add byte ptr [rbp + 0x3b], al ; ret
0x000002000003fd03 : test dword ptr [rdx], edx ; imul edx, dword ptr [rdx], 0 ; ret
0x000002000001efef : test dword ptr [rdx], edx ; loop 0x2000001f00d ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000b56e2 : test dword ptr [rip + 0x48000d95], esp ; add esp, 0x28 ; ret
0x00000200001a08b9 : test dword ptr [rip - 0x160007a1], ecx ; ret
0x000002000046af2e : test dword ptr [rip - 0x74ffebd1], edx ; ret
0x000002000003f1f5 : test dword ptr [rip - 0x9ffed8c], edi ; ret
0x00000200004c18a3 : test dword ptr [rip - 0x9ffefcf], eax ; ret
0x000002000005ee6e : test dword ptr [rip - 0x9fffffd], edx ; ret
0x00000200003b74f3 : test dword ptr [rip - 0xffffff], ebx ; ret
0x00000200004c40d9 : test dword ptr [rsi + 0x12], esi ; adc byte ptr [rax], al ; call 0x200000ebe28
0x000002000051552b : test dword ptr [rsi + 0x1f], ecx ; or byte ptr [rax], al ; call 0x20000141ac8
0x00000200000d3ddb : test dword ptr [rsi + 0xf000001], ebx ; mov dh, 0x8d ; ret
0x0000020000496b66 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; call 0x200000b8828
0x000002000044abb3 : test dword ptr [rsi + rax*4 - 0x74b7ffeb], eax ; ret
0x0000020000102959 : test dword ptr [rsi + rbx*4 + 6], edx ; add bh, bh ; ret
0x0000020000013199 : test dword ptr [rsi + rdi*2], esp ; adc al, 0 ; add rsp, 0x28 ; ret
0x000002000003bc71 : test dword ptr [rsi - 0x67], ebp ; adc al, byte ptr [rax] ; xor eax, eax ; ret
0x00000200000af8dc : test dword ptr [rsi - 0x74b7fff3], esi ; ret 0xc148
0x00000200005172d3 : test dword ptr [rsi - 0x74fff4bf], ecx ; add al, 0x3b ; ret
0x00000200004fa47b : test dword ptr [rsi - 0x74fff6e0], eax ; ret
0x000002000076325d : test dword ptr [rsi - 0x74fffe80], edx ; ret 0x8d48
0x00000200004089ae : test dword ptr [rsi - 0x74ffffff], eax ; ret
0x000002000045072b : test dword ptr [rsi - 0x75000000], eax ; ret
0x0000020000119f43 : test dword ptr [rsi - 0x75000000], ecx ; ret
0x000002000007942b : test dword ptr [rsi - 0x9000002], esp ; ret
0x000002000001cd92 : test dword ptr [rsi], eax ; call qword ptr [rbx]
0x00000200004eb591 : test dword ptr [rsi], eax ; ret
0x00000200003d49d1 : test dword ptr [rsi], ebp ; sbb dword ptr [eax], eax ; inc edx ; jmp 0x200003d49c2
0x00000200000b0cd7 : test dword ptr [rsi], ebx ; xlatb ; or eax, 0x83be0f00 ; ret
0x00000200005cde0b : test dword ptr [rsi], edi ; cmc ; dec dword ptr [rcx - 0x7d] ; ret
0x0000020000682129 : test dword ptr [rsi], edi ; or byte ptr [rax], al ; add dh, dh ; ret
0x00000200003c6d26 : test dword ptr [rsi], edi ; ret 0x19
0x000002000050211b : test dword ptr [rsi], edi ; ret 8
0x00000200004a76e9 : test dword ptr [rsi], edx ; add eax, dword ptr [rax] ; add byte ptr [rbp - 0x75], al ; ret 0x8b48
0x00000200005ab950 : test dword ptr [rsi], edx ; ret 0xffeb
0x00000200000abbe9 : test dword ptr [rsi], esp ; adc eax, 0x2349000e ; ret 0x2349
0x00000200001c118b : test dx, dx ; jne 0x200001c119c ; mov dword ptr [r8], eax ; ret
0x000002000008455c : test eax, 0x10001 ; jne 0x2000008456f ; xor eax, eax ; ret
0x000002000040b1b6 : test eax, 0x1ffeefb ; xor eax, eax ; ret
0x0000020000478589 : test eax, 0x24548b48 ; jo 0x200004785e1 ; mov ecx, ebp ; call rdi
0x00000200006a2969 : test eax, 0x2e3bd285 ; ret 0x39
0x0000020000654d58 : test eax, 0x40001 ; je 0x20000654d6b ; mov al, 1 ; ret
0x0000020000587f95 : test eax, 0x45fff645 ; mov dword ptr [rax + 0xc], ebx ; ret
0x00000200006b3137 : test eax, 0x480000c7 ; add esp, 0x28 ; ret
0x00000200006bec93 : test eax, 0x480004b5 ; add esp, 0x58 ; ret
0x0000020000510df4 : test eax, 0x48000851 ; add esp, 0x40 ; pop rbx ; ret
0x00000200003e0ecb : test eax, 0x48000ec2 ; add esp, 0x30 ; pop rbp ; ret
0x00000200003c3e4b : test eax, 0x480019e8 ; add esp, 0x20 ; pop rbx ; ret
0x00000200006389d3 : test eax, 0x48ffafa7 ; add esp, 0x50 ; pop rbx ; ret
0x000002000051bed3 : test eax, 0x48ffc172 ; add esp, 0x50 ; pop rbx ; ret
0x00000200005121b3 : test eax, 0x48ffde82 ; add esp, 0x28 ; ret
0x0000020000135be3 : test eax, 0x48fffffd ; add esp, 0x38 ; ret
0x000002000075de18 : test eax, 0x58948ff ; xlatb ; ret 0xffb7
0x0000020000767caf : test eax, 0x5c7ff9c ; mov dl, 0xb6 ; call qword ptr [rbx]
0x00000200005bef52 : test eax, 0x74c084ff ; adc edi, edi ; ret
0x000002000055f5a4 : test eax, 0x81000002 ; ret
0x00000200000ec4b2 : test eax, 0x8a440022 ; ret
0x00000200000ed5f3 : test eax, 0x8b000000 ; ret
0x000002000067977c : test eax, 0x8b000002 ; ret 0xe083
0x000002000057d1e6 : test eax, 0x8b44ffd7 ; ret
0x000002000059db6b : test eax, 0x8b4cffe9 ; ret
0x00000200005c2713 : test eax, 0x8bffaffc ; ret
0x00000200004b3c53 : test eax, 0x8bffc0e4 ; ret
0x00000200005788af : test eax, 0x8bffea64 ; ret
0x00000200000776c1 : test eax, 0x8bfffffb ; ret
0x0000020000501811 : test eax, 0xa5ebd0ff ; call rax
0x00000200004752a7 : test eax, 0xce8b0013 ; call 0x2000009a248
0x00000200001676d3 : test eax, 0xe80019cd ; pushfq ; ret
0x00000200004a9f93 : test eax, 0xe8ffee83 ; mov ah, 0xe1 ; ret
0x00000200005966cb : test eax, 0xe990ffc9 ; push rdi ; ret 0xfff7
0x0000020000688291 : test eax, 0xf000000 ; mov bh, 0xb ; call 0x20000134561
0x00000200006b4aa7 : test eax, 0xf10d8bff ; pushfq ; ret 0x48ff
0x00000200004ea99d : test eax, 0xf48ffd4 ; ret 0x8b48
0x00000200003c3678 : test eax, 0xf6000000 ; ret
0x000002000002f4b7 : test eax, 0xf600132c ; ret 0x7502
0x00000200003a28da : test eax, 0xff000074 ; ret 0x8348
0x000002000068bb8b : test eax, 0xfffff ; jne 0x2000068bbeb ; xor al, al ; ret
0x0000020000074226 : test eax, 0xffffff ; je 0x20000074235 ; ret
0x00000200000e8078 : test eax, 0xfffffff0 ; ja 0x200000e808a ; mov al, dl ; ret
0x00000200000e8078 : test eax, 0xfffffff0 ; ja 0x200000e808b ; mov al, dl ; ret
0x0000020000228288 : test eax, eax ; add dword ptr [rax], eax ; add byte ptr [rbx], dh ; leave ; call r10
0x00000200003db8c8 : test eax, eax ; cmove eax, edx ; ret
0x0000020000400dcf : test eax, eax ; cmove eax, r8d ; ret
0x00000200000109cc : test eax, eax ; je 0x200000109e8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000026430 : test eax, eax ; je 0x20000026443 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000051bea : test eax, eax ; je 0x20000051bf6 ; ret
0x0000020000057dfd : test eax, eax ; je 0x20000057e0b ; mov dword ptr [r8], eax ; ret
0x0000020000058604 : test eax, eax ; je 0x20000058615 ; mov rax, qword ptr [rax + 0x40] ; ret
0x000002000007e989 : test eax, eax ; je 0x2000007e99b ; cmp dword ptr [rax + 8], edx ; jne 0x2000007e99c ; ret
0x0000020000112cc8 : test eax, eax ; je 0x20000085e5d ; jmp rax
0x0000020000099150 : test eax, eax ; je 0x2000009910c ; xor eax, eax ; ret
0x00000200000bcc7e : test eax, eax ; je 0x200000bcc87 ; ret
0x00000200000c2ba5 : test eax, eax ; je 0x200000c2bb6 ; add rsp, 0x28 ; ret
0x00000200000c7a35 : test eax, eax ; je 0x200000c7a46 ; add rsp, 0x28 ; ret
0x00000200000dc648 : test eax, eax ; je 0x200000dc65c ; mov rcx, qword ptr [rsp + 0x78] ; call rax
0x00000200000dc6a1 : test eax, eax ; je 0x200000dc683 ; mov rcx, qword ptr [rsp + 0x78] ; call rax
0x00000200000e4a0b : test eax, eax ; je 0x200000e4a1d ; mov rcx, qword ptr [r14 + 8] ; call rax
0x00000200000eb5c2 : test eax, eax ; je 0x200000eb5d5 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000f7c6c : test eax, eax ; je 0x200000f7c7a ; mov dword ptr [r8], r9d ; ret
0x000002000010b368 : test eax, eax ; je 0x2000010b378 ; mov dword ptr [r8], ecx ; mov eax, edx ; ret
0x000002000010b38f : test eax, eax ; je 0x2000010b39f ; xor edx, edx ; call r8
0x000002000010c4ed : test eax, eax ; je 0x2000010c4f9 ; jmp r8
0x0000020000115bc6 : test eax, eax ; je 0x20000115bcf ; ret
0x000002000011c51a : test eax, eax ; je 0x2000011c523 ; ret
0x00000200001a3fb9 : test eax, eax ; je 0x20000130fb9 ; call rax
0x0000020000131ca4 : test eax, eax ; je 0x20000131cb0 ; jmp r8
0x00000200001553c2 : test eax, eax ; je 0x200001553d5 ; mov rcx, qword ptr [rcx + 8] ; call rax
0x000002000016d462 : test eax, eax ; je 0x2000016d46c ; call rax
0x00000200001099c6 : test eax, eax ; je 0x2000016ea94 ; call rax
0x000002000019e9e2 : test eax, eax ; je 0x2000019e9fb ; lea rcx, qword ptr [rsp + 0x30] ; call rax
0x00000200001a996a : test eax, eax ; je 0x200001a9978 ; mov dl, 1 ; mov al, dl ; ret
0x00000200001ac428 : test eax, eax ; je 0x200001ac434 ; call rax
0x00000200001b2a21 : test eax, eax ; je 0x200001b2a2b ; call rax
0x00000200001b2a5d : test eax, eax ; je 0x200001b2a67 ; call rax
0x00000200001b2ad8 : test eax, eax ; je 0x200001b2ae2 ; call rax
0x00000200001b2b39 : test eax, eax ; je 0x200001b2b43 ; call rax
0x00000200001c0ce8 : test eax, eax ; je 0x200001c0d0b ; mov rax, qword ptr [rax + 8] ; call rax
0x00000200001db35f : test eax, eax ; je 0x200001db364 ; mov eax, 1 ; ret
0x00000200001e26e2 : test eax, eax ; je 0x200001e26ef ; dec eax ; ret
0x00000200001f0e86 : test eax, eax ; je 0x200001f0e96 ; mov rcx, rbp ; call rax
0x00000200002065d7 : test eax, eax ; je 0x20000206601 ; mov ecx, 2 ; call rax
0x00000200002149b7 : test eax, eax ; je 0x200002149cb ; mov rcx, r14 ; call rax
0x00000200003af91c : test eax, eax ; je 0x200003af92e ; mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x00000200003e35f8 : test eax, eax ; je 0x200003e35cb ; call rax
0x00000200003f8260 : test eax, eax ; je 0x200003f8271 ; movzx eax, word ptr [rax + 8] ; ret
0x00000200003fb890 : test eax, eax ; je 0x200003fb875 ; xor al, al ; ret
0x000002000041ebc0 : test eax, eax ; je 0x2000041ebcc ; jmp rax
0x00000200004358f8 : test eax, eax ; je 0x20000435427 ; call rax
0x0000020000443b62 : test eax, eax ; je 0x20000443b74 ; lea rdx, qword ptr [rcx - 0x30] ; call rax
0x00000200004453d6 : test eax, eax ; je 0x200004453e4 ; call rax
0x0000020000447d1a : test eax, eax ; je 0x20000447d32 ; mov rcx, qword ptr [rsp + 0x40] ; call rax
0x0000020000448fa5 : test eax, eax ; je 0x20000448fbd ; mov rcx, qword ptr [rsp + 0x60] ; call rax
0x0000020000452b01 : test eax, eax ; je 0x20000452af2 ; jmp 0x20000452acf
0x000002000045713b : test eax, eax ; je 0x2000045714c ; call rax
0x000002000046be1a : test eax, eax ; je 0x2000046be2a ; mov rcx, rbx ; call rax
0x000002000046fcee : test eax, eax ; je 0x2000046fcfa ; call r8
0x0000020000473aac : test eax, eax ; je 0x20000473abd ; add rax, -0x10 ; ret
0x000002000049192b : test eax, eax ; je 0x20000491950 ; mov rdi, rax ; jmp 0x200004918fe
0x00000200004cb230 : test eax, eax ; je 0x200004cb24d ; mov ecx, dword ptr [rcx + 8] ; call rax
0x00000200004cd47d : test eax, eax ; je 0x200004cd48e ; add rax, 0x10 ; ret
0x00000200004e08d2 : test eax, eax ; je 0x200004e08e7 ; mov rcx, qword ptr [rbp - 0x11] ; call rax
0x00000200004eb4d7 : test eax, eax ; je 0x200004eb4e1 ; call rax
0x00000200004eb8dc : test eax, eax ; je 0x200004eb8e6 ; call rax
0x00000200004ec679 : test eax, eax ; je 0x200004ec68b ; mov cl, dil ; call rax
0x00000200004ef097 : test eax, eax ; je 0x200004ef0a1 ; call rax
0x00000200004fb3fb : test eax, eax ; je 0x200004fb40e ; add rsp, 0x20 ; pop rbx ; ret
0x000002000050180e : test eax, eax ; je 0x200005017bf ; call rax
0x00000200005191c8 : test eax, eax ; je 0x200005191d8 ; mov dword ptr [r8], eax ; mov al, 1 ; ret
0x000002000053d279 : test eax, eax ; je 0x2000053d283 ; call rax
0x0000020000542038 : test eax, eax ; je 0x20000542049 ; mov rax, qword ptr [rax + 0x28] ; ret
0x00000200005bab26 : test eax, eax ; je 0x200005bab38 ; mov rcx, r12 ; call rax
0x00000200005f2e9c : test eax, eax ; je 0x200005f2ea8 ; jmp qword ptr [rax]
0x000002000060e3e3 : test eax, eax ; je 0x2000060e3ed ; call rax
0x0000020000639d30 : test eax, eax ; je 0x20000639d3a ; call rax
0x000002000063b764 : test eax, eax ; je 0x2000063b76e ; call rax
0x000002000064129b : test eax, eax ; je 0x200006412af ; mov rdx, qword ptr [rdx + 0x10] ; call r8
0x000002000064f62a : test eax, eax ; je 0x2000064f666 ; add rax, rdx ; jmp 0x2000064f63d
0x00000200006693fe : test eax, eax ; je 0x20000669467 ; lea rdx, qword ptr [rsp + 0x58] ; call rax
0x0000020000677a81 : test eax, eax ; je 0x20000677a8f ; call rax
0x0000020000679f36 : test eax, eax ; je 0x20000679f4c ; mov rcx, rax ; call r8
0x000002000067a19e : test eax, eax ; je 0x2000067a1b4 ; mov rcx, rax ; call r8
0x00000200006b9a3c : test eax, eax ; je 0x200006b9abc ; mov r8d, edi ; call rax
0x00000200006b9f98 : test eax, eax ; je 0x200006b9fa8 ; mov cl, r9b ; call rax
0x00000200006bb1f9 : test eax, eax ; je 0x200006bb1fe ; mov dword ptr [r8], r9d ; ret
0x00000200006bcfb0 : test eax, eax ; je 0x200006bcfbc ; jmp rax
0x00000200006c0352 : test eax, eax ; je 0x200006c036d ; mov rcx, rbx ; call rax
0x00000200006c03ba : test eax, eax ; je 0x200006c03c7 ; call rax
0x00000200006c0466 : test eax, eax ; je 0x200006c0481 ; mov rcx, rdi ; call rax
0x00000200006c04dd : test eax, eax ; je 0x200006c04f1 ; mov rcx, rbx ; call rax
0x00000200006c04f2 : test eax, eax ; je 0x200006c0508 ; mov edx, edi ; mov rcx, rbx ; call rax
0x00000200006c05ed : test eax, eax ; je 0x200006c05fd ; mov rcx, rdi ; call rax
0x00000200006c0605 : test eax, eax ; je 0x200006c0615 ; mov rcx, rdi ; call rax
0x00000200006c065e : test eax, eax ; je 0x200006c066e ; mov rcx, rdi ; call rax
0x00000200007450b2 : test eax, eax ; je 0x200007450fa ; add rbp, 8 ; jmp 0x20000745088
0x0000020000406f59 : test eax, eax ; jle 0x2000057e724 ; ret
0x00000200000210d8 : test eax, eax ; jne 0x200000210e5 ; xor eax, eax ; ret
0x0000020000021d7b : test eax, eax ; jne 0x20000021d8e ; xor eax, eax ; ret
0x0000020000022b4d : test eax, eax ; jne 0x20000022b89 ; add rsp, 0x48 ; ret
0x00000200000234d4 : test eax, eax ; jne 0x200000234d3 ; mov rax, rcx ; ret
0x000002000002aab8 : test eax, eax ; jne 0x2000002aac1 ; ret
0x000002000002f528 : test eax, eax ; jne 0x2000002f531 ; ret
0x0000020000031d08 : test eax, eax ; jne 0x20000031d15 ; xor eax, eax ; ret
0x0000020000031d2c : test eax, eax ; jne 0x20000031d17 ; btr rax, 0xc ; ret
0x0000020000033d85 : test eax, eax ; jne 0x20000033d9e ; ret
0x0000020000038570 : test eax, eax ; jne 0x20000038579 ; ret
0x0000020000042012 : test eax, eax ; jne 0x20000042011 ; mov rax, rcx ; ret
0x00000200000435d0 : test eax, eax ; jne 0x200000435d9 ; ret
0x0000020000050694 : test eax, eax ; jne 0x200000506a1 ; mov al, 1 ; ret
0x00000200000596ea : test eax, eax ; jne 0x200000596c6 ; xor eax, eax ; ret
0x0000020000069f69 : test eax, eax ; jne 0x20000069f94 ; movzx eax, dl ; ret
0x0000020000069f69 : test eax, eax ; jne 0x20000069f95 ; movzx eax, dl ; ret
0x00000200000711be : test eax, eax ; jne 0x200000711b0 ; ret
0x0000020000072e4e : test eax, eax ; jne 0x20000072e5c ; mov rax, rdx ; ret
0x0000020000072e4e : test eax, eax ; jne 0x20000072e5d ; mov rax, rdx ; ret
0x0000020000072e5c : test eax, eax ; jne 0x20000072e69 ; xor eax, eax ; ret
0x00000200000739c0 : test eax, eax ; jne 0x200000739bf ; mov rax, rcx ; ret
0x0000020000082b00 : test eax, eax ; jne 0x20000082b09 ; ret
0x00000200000895fe : test eax, eax ; jne 0x2000008960b ; xor al, al ; ret
0x00000200000c1941 : test eax, eax ; jne 0x200000c1937 ; xor al, al ; ret
0x00000200000e287a : test eax, eax ; jne 0x200000e288d ; ret
0x00000200000edbe1 : test eax, eax ; jne 0x200000edbe0 ; mov rax, rcx ; ret
0x00000200000f0454 : test eax, eax ; jne 0x200000f0463 ; ret
0x00000200000f1a18 : test eax, eax ; jne 0x200000f1a27 ; mov eax, r8d ; ret
0x00000200000f1d38 : test eax, eax ; jne 0x200000f1d46 ; mov al, r10b ; ret
0x00000200000f1d38 : test eax, eax ; jne 0x200000f1d47 ; mov al, r10b ; ret
0x00000200000f83d6 : test eax, eax ; jne 0x200000f83ce ; test edx, edx ; jne 0x200000f83e7 ; ret
0x00000200001080dd : test eax, eax ; jne 0x200001080f0 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000010badb : test eax, eax ; jne 0x2000010baee ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000123820 : test eax, eax ; jne 0x20000123833 ; mov eax, 0xc0000001 ; ret
0x0000020000125259 : test eax, eax ; jne 0x20000125262 ; ret
0x0000020000133b47 : test eax, eax ; jne 0x20000133b3d ; ret
0x00000200001340e5 : test eax, eax ; jne 0x200001340d8 ; ret
0x0000020000135680 : test eax, eax ; jne 0x2000013567a ; mov rax, rcx ; ret
0x000002000013569b : test eax, eax ; jne 0x20000135695 ; mov rax, rcx ; ret
0x00000200001357a1 : test eax, eax ; jne 0x200001357c3 ; xor eax, eax ; ret
0x0000020000135907 : test eax, eax ; jne 0x200001358d3 ; xor eax, eax ; ret
0x0000020000135ffa : test eax, eax ; jne 0x20000135fd9 ; xor eax, eax ; ret
0x000002000002484b : test eax, eax ; jne 0x2000015e00b ; ret
0x00000200000432c4 : test eax, eax ; jne 0x20000167c64 ; ret
0x000002000006676f : test eax, eax ; jne 0x2000017b270 ; ret
0x00000200000f3d9c : test eax, eax ; jne 0x2000019eefc ; ret
0x0000020000129563 : test eax, eax ; jne 0x200001a1d12 ; ret
0x00000200001b471d : test eax, eax ; jne 0x200001b471a ; add rsp, 0x28 ; ret
0x00000200001dad84 : test eax, eax ; jne 0x200001dad53 ; mov rax, r8 ; ret
0x00000200001db357 : test eax, eax ; jne 0x200001db33e ; xor eax, eax ; ret
0x00000200001de970 : test eax, eax ; jne 0x200001de97c ; xor eax, eax ; ret
0x00000200001f448f : test eax, eax ; jne 0x200001f4454 ; ret
0x00000200001f5050 : test eax, eax ; jne 0x200001f504f ; mov rax, rcx ; ret
0x00000200001fbdd0 : test eax, eax ; jne 0x200001fbdb7 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003a26e7 : test eax, eax ; jne 0x200003a26dd ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003bb701 : test eax, eax ; jne 0x200003bb70a ; ret
0x00000200003be3ad : test eax, eax ; jne 0x200003be39e ; ret
0x00000200003c9aca : test eax, eax ; jne 0x200003c9abf ; jmp 0x200003c9a97
0x00000200003f184c : test eax, eax ; jne 0x200003f185d ; xor cl, cl ; mov al, cl ; ret
0x0000020000401026 : test eax, eax ; jne 0x20000401032 ; mov al, dl ; ret
0x0000020000401026 : test eax, eax ; jne 0x20000401033 ; mov al, dl ; ret
0x000002000041b6d9 : test eax, eax ; jne 0x2000041b6d3 ; ret
0x000002000041e260 : test eax, eax ; jne 0x2000041e26e ; mov eax, r10d ; ret
0x000002000041e260 : test eax, eax ; jne 0x2000041e26f ; mov eax, r10d ; ret
0x0000020000438021 : test eax, eax ; jne 0x20000438017 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000047e7e3 : test eax, eax ; jne 0x2000047e7d3 ; xor eax, eax ; ret
0x0000020000487895 : test eax, eax ; jne 0x200004878a9 ; mov eax, dword ptr [rcx + 0x60] ; ret
0x0000020000487b21 : test eax, eax ; jne 0x20000487b12 ; call 0x20000443dc6
0x00000200004cc58e : test eax, eax ; jne 0x200004cc59f ; add rsp, 0x28 ; ret
0x000002000051d19a : test eax, eax ; jne 0x2000051d1ad ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005dbeb4 : test eax, eax ; jne 0x200005dbec7 ; mov eax, 0xc00000f1 ; ret
0x000002000062beef : test eax, eax ; jne 0x2000062bec6 ; add rsp, 0x38 ; ret
0x000002000063231c : test eax, eax ; jne 0x2000063232f ; mov eax, 0xc00000bb ; ret
0x0000020000633a19 : test eax, eax ; jne 0x20000633a2c ; add rsp, 0x20 ; pop rbx ; ret
0x000002000064b5f6 : test eax, eax ; jne 0x2000064b605 ; mov qword ptr [rdx], rax ; ret
0x000002000064b60c : test eax, eax ; jne 0x2000064b61f ; mov eax, 0xc00000bb ; ret
0x000002000064b630 : test eax, eax ; jne 0x2000064b643 ; mov eax, 0xc00000bb ; ret
0x000002000065a148 : test eax, eax ; jne 0x2000065a159 ; lea eax, dword ptr [r8 + 0x14] ; ret
0x000002000068bbde : test eax, eax ; jne 0x2000068bb98 ; mov al, 1 ; ret
0x000002000069792a : test eax, eax ; jne 0x2000069793b ; add rsp, 0x28 ; ret
0x00000200006b5367 : test eax, eax ; jne 0x200006b5370 ; ret
0x00000200006b6e66 : test eax, eax ; jne 0x200006b6e44 ; ret
0x00000200006bac20 : test eax, eax ; jne 0x200006bac2d ; xor eax, eax ; ret
0x00000200006c0ddf : test eax, eax ; jne 0x200006c0df2 ; mov eax, 0xc000042a ; ret
0x00000200006c0e63 : test eax, eax ; jne 0x200006c0e76 ; mov eax, 0xc000042a ; ret
0x00000200006c2978 : test eax, eax ; jne 0x200006c296d ; add rsp, 0x30 ; pop rbx ; ret
0x000002000073c022 : test eax, eax ; jne 0x2000073c022 ; and r14d, r15d ; call r12
0x000002000004bc9a : test eax, eax ; jns 0x2000004bcab ; add rsp, 0x58 ; ret
0x0000020000072ec6 : test eax, eax ; jns 0x20000072e8f ; jmp 0x20000072eaa
0x00000200001142b7 : test eax, eax ; jns 0x200001142c6 ; mov r8d, r10d ; jmp 0x2000011428b
0x00000200001356ea : test eax, eax ; jns 0x200001356f9 ; or eax, 0xffffffff ; ret
0x0000020000422089 : test eax, eax ; jns 0x2000042209c ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000032dc5 : test eax, eax ; js 0x20000032dd6 ; add rsp, 0x28 ; ret
0x0000020000044e4c : test eax, eax ; js 0x20000044e47 ; mov rax, rdx ; ret
0x0000020000044e4c : test eax, eax ; js 0x20000044e48 ; mov rax, rdx ; ret
0x0000020000074143 : test eax, eax ; js 0x20000074151 ; mov dword ptr [r10], ecx ; ret
0x0000020000074210 : test eax, eax ; js 0x2000007420e ; mov rax, rdx ; ret
0x0000020000074210 : test eax, eax ; js 0x2000007420f ; mov rax, rdx ; ret
0x0000020000086170 : test eax, eax ; js 0x20000086175 ; xor eax, eax ; ret
0x0000020000072fe8 : test eax, eax ; js 0x2000017d886 ; ret
0x0000020000073fdc : test eax, eax ; js 0x2000017dbc2 ; ret
0x000002000042453a : test eax, eax ; js 0x20000424547 ; xor eax, eax ; ret
0x000002000042544b : test eax, eax ; js 0x20000425458 ; xor eax, eax ; ret
0x00000200007840d8 : test eax, eax ; js 0x2000078415c ; call 0x20000140386
0x0000020000445f55 : test eax, eax ; ret
0x000002000021d8c5 : test eax, eax ; sete al ; add rsp, 0x28 ; ret
0x000002000042c8cd : test eax, eax ; setg al ; ret
0x00000200000529d6 : test eax, eax ; setne al ; add rsp, 0x28 ; ret
0x0000020000008f4f : test eax, eax ; setne al ; ret
0x000002000002b0d1 : test eax, eax ; setns al ; add rsp, 0x28 ; ret
0x000002000003292e : test eax, ebp ; call qword ptr [rdx]
0x000002000009811e : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000746fb9 : test eax, ebx ; call rbx
0x00000200006d761f : test eax, ebx ; ret 0x48ff
0x00000200000b65af : test eax, ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000d8287 : test eax, ecx ; je 0x200000d828c ; mov eax, 1 ; ret
0x00000200001f31cc : test eax, ecx ; je 0x200001f31d9 ; xor al, al ; ret
0x00000200000d827f : test eax, ecx ; jne 0x200000d8291 ; xor eax, eax ; ret
0x00000200004848d9 : test eax, ecx ; jne 0x200004848e6 ; mov al, 1 ; ret
0x00000200004eb486 : test eax, ecx ; ret
0x000002000007b86b : test eax, ecx ; sete al ; ret
0x00000200001a1240 : test eax, edi ; jno 0x200001a1243 ; inc dword ptr [rcx - 0x75] ; ret
0x00000200003c97fd : test eax, edx ; je 0x200003c97e5 ; mov eax, 3 ; ret
0x000002000052eb11 : test eax, edx ; jne 0x2000052ebaf ; ret
0x000002000001cbc9 : test eax, esp ; call qword ptr [rbx]
0x000002000007b86a : test eax, r9d ; sete al ; ret
0x0000020000015515 : test ebp, eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000047046 : test ebp, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x000002000007ed81 : test ebp, eax ; add byte ptr [rax], al ; add dh, dh ; ret 0xf08
0x00000200003bd9b9 : test ebp, ebp ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000047749 : test ebp, ebp ; rcl dword ptr [rdx], 1 ; add bh, bh ; ret
0x000002000049f381 : test ebp, ebp ; ret 0x11
0x0000020000521b68 : test ebp, ebp ; ret 0xa
0x00000200000855f7 : test ebp, ebp ; ret 0xf
0x0000020000598f16 : test ebp, ecx ; ret
0x0000020000602687 : test ebp, ecx ; ret 0x89ff
0x0000020000417169 : test ebp, edi ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000022f1e8 : test ebp, edx ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000598eb1 : test ebp, edx ; ret
0x000002000008a56b : test ebp, edx ; sub eax, 0xf6000000 ; ret
0x00000200005ab878 : test ebp, esi ; ret 0xffeb
0x00000200005b28ae : test ebp, esp ; inc dword ptr [rbp - 0x9e58a37] ; ret 0x7502
0x00000200003f141d : test ebp, esp ; sbb byte ptr [r8], r8b ; ret
0x0000020000053428 : test ebx, ebp ; adc r8b, byte ptr [r8] ; ret
0x00000200003f89dd : test ebx, ebx ; add byte ptr [rax], al ; add bh, bh ; ret 0xdbeb
0x00000200004e2e13 : test ebx, ebx ; add byte ptr [rax], al ; add dh, bh ; ret
0x0000020000045082 : test ebx, ebx ; jne 0x200000450ae ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000473dc : test ebx, ebx ; jne 0x200000473d7 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000005b104 : test ebx, ebx ; jne 0x2000005b0f8 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000fd0a3 : test ebx, ebx ; jne 0x200000fd0c6 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001bc691 : test ebx, ebx ; jne 0x200001bc65e ; add rsp, 0x30 ; pop rbx ; ret
0x00000200001bc7b8 : test ebx, ebx ; jne 0x200001bc78e ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001d37fd : test ebx, ebx ; jne 0x200001d37f8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000538b20 : test ebx, ebx ; jne 0x20000538afe ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000604b64 : test ebx, ebx ; jne 0x20000604b61 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003e5da8 : test ebx, ebx ; ret
0x000002000041612f : test ebx, edi ; ret
0x000002000009a047 : test ebx, esi ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x000002000051ac56 : test ebx, esi ; inc dword ptr [rax] ; add rsp, 0x28 ; ret
0x00000200004b5c0d : test ebx, esi ; or al, 0 ; add dh, dh ; ret
0x000002000013318e : test ecx, 0x175ffff ; ret
0x00000200004a01ca : test ecx, 0x1f2ee8ff ; ret 0x41ff
0x000002000009a54c : test ecx, 0x700 ; jne 0x2000009a578 ; ret
0x00000200001e5470 : test ecx, 0x8b4c1ee8 ; ret
0x00000200001f6265 : test ecx, 0xff00 ; setbe al ; ret
0x00000200000a2f8a : test ecx, eax ; cmovne eax, edx ; ret
0x000002000007e744 : test ecx, eax ; je 0x2000007e751 ; xor eax, eax ; ret
0x000002000020e496 : test ecx, eax ; jne 0x2000020e4a5 ; mov byte ptr [rdx + 2], cl ; ret
0x00000200004be254 : test ecx, eax ; ror byte ptr [rbx], cl ; add rcx, r13 ; jmp rcx
0x00000200003fd539 : test ecx, ebp ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004eb6b9 : test ecx, ebx ; ret 9
0x0000020000606e80 : test ecx, ecx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x73], al ; outsb dx, byte ptr [rsi] ; ret 0xb841
0x0000020000133139 : test ecx, ecx ; cmovne eax, ecx ; mov dword ptr [r8 + 0x5c], eax ; ret
0x00000200006c2738 : test ecx, ecx ; cmovne eax, edx ; ret
0x000002000002ccc7 : test ecx, ecx ; je 0x2000002ccd4 ; mov al, 1 ; ret
0x0000020000059379 : test ecx, ecx ; je 0x2000005937c ; mov rax, r9 ; ret
0x0000020000074766 : test ecx, ecx ; je 0x20000074767 ; mov eax, 0xc000000d ; ret
0x00000200000bf60c : test ecx, ecx ; je 0x200000bf61d ; add rsp, 0x28 ; ret
0x00000200000c211e : test ecx, ecx ; je 0x200000c212f ; add rsp, 0x28 ; ret
0x00000200000c2c49 : test ecx, ecx ; je 0x200000c2c5c ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000eef3c : test ecx, ecx ; je 0x200000eef48 ; call rcx
0x0000020000124394 : test ecx, ecx ; je 0x2000012439e ; call rcx
0x000002000016ff77 : test ecx, ecx ; je 0x2000016ff87 ; mov qword ptr [rcx], rax ; xor eax, eax ; ret
0x00000200001a8e38 : test ecx, ecx ; je 0x200001a8e48 ; mov qword ptr [r9], r10 ; xor al, al ; ret
0x00000200001a8e43 : test ecx, ecx ; je 0x200001a8e53 ; mov qword ptr [r9], r10 ; mov al, 1 ; ret
0x00000200001ad375 : test ecx, ecx ; je 0x200001ad381 ; call r9
0x00000200001b29dd : test ecx, ecx ; je 0x200001b29e7 ; call rcx
0x00000200001b2a00 : test ecx, ecx ; je 0x200001b2a0a ; call rcx
0x00000200001b2a3d : test ecx, ecx ; je 0x200001b2a49 ; jmp rcx
0x00000200001b2a8c : test ecx, ecx ; je 0x200001b2a98 ; jmp rcx
0x00000200001b2afc : test ecx, ecx ; je 0x200001b2b06 ; call rcx
0x00000200001b2b19 : test ecx, ecx ; je 0x200001b2b25 ; jmp rcx
0x00000200001bef34 : test ecx, ecx ; je 0x200001bef48 ; mov dword ptr [rcx], r10d ; ret
0x00000200001c116d : test ecx, ecx ; je 0x200001c1180 ; mov eax, 0xc0000225 ; ret
0x00000200001e222a : test ecx, ecx ; je 0x200001e2244 ; and qword ptr [rcx], rdx ; ret
0x000002000021568b : test ecx, ecx ; je 0x20000215699 ; add dword ptr [rcx], r11d ; ret
0x00000200003a13e6 : test ecx, ecx ; je 0x200003a13f0 ; call rcx
0x00000200003af3ad : test ecx, ecx ; je 0x200003af3b7 ; call rcx
0x000002000041caf3 : test ecx, ecx ; je 0x2000041cb03 ; mov rax, qword ptr [rdx + 0x38] ; ret
0x00000200004704c5 : test ecx, ecx ; je 0x20000470502 ; mov eax, r10d ; ret
0x00000200004704c5 : test ecx, ecx ; je 0x20000470503 ; mov eax, r10d ; ret
0x00000200004c1bf6 : test ecx, ecx ; je 0x200004c1c06 ; call 0x200000e7977
0x00000200004c1c47 : test ecx, ecx ; je 0x200004c1c62 ; call 0x200000e7757
0x00000200004f496b : test ecx, ecx ; je 0x200004f497d ; ret
0x000002000051096a : test ecx, ecx ; je 0x2000051097a ; call 0x20000140387
0x0000020000511257 : test ecx, ecx ; je 0x20000511267 ; call 0x20000140387
0x0000020000511265 : test ecx, ecx ; je 0x20000511275 ; call 0x20000140387
0x0000020000511e26 : test ecx, ecx ; je 0x20000511e36 ; call 0x20000140387
0x00000200005128fc : test ecx, ecx ; je 0x2000051290c ; call 0x20000140387
0x000002000051290b : test ecx, ecx ; je 0x2000051291b ; call 0x20000140387
0x0000020000512919 : test ecx, ecx ; je 0x20000512929 ; call 0x20000140387
0x000002000051329e : test ecx, ecx ; je 0x200005132ae ; call 0x20000140387
0x00000200005132ad : test ecx, ecx ; je 0x200005132bd ; call 0x20000140387
0x000002000051b1b2 : test ecx, ecx ; je 0x2000051b1c2 ; call 0x20000140387
0x000002000051de37 : test ecx, ecx ; je 0x2000051de47 ; call 0x20000140387
0x0000020000545b0b : test ecx, ecx ; je 0x20000545b1b ; mov dword ptr [r9], r8d ; mov eax, r10d ; ret
0x000002000057482b : test ecx, ecx ; je 0x200005747fe ; jmp 0x200005747f9
0x00000200006026a6 : test ecx, ecx ; je 0x200006026ce ; xor edx, edx ; call 0x20000231019
0x0000020000602bee : test ecx, ecx ; je 0x20000602c0a ; xor edx, edx ; call 0x20000231019
0x0000020000602c09 : test ecx, ecx ; je 0x20000602c25 ; xor edx, edx ; call 0x20000231019
0x0000020000602c71 : test ecx, ecx ; je 0x20000602c8d ; xor edx, edx ; call 0x20000231019
0x000002000060414c : test ecx, ecx ; je 0x20000604160 ; xor edx, edx ; call 0x20000231019
0x0000020000604314 : test ecx, ecx ; je 0x20000604324 ; call 0x20000231017
0x000002000060a8a8 : test ecx, ecx ; je 0x2000060a8bc ; xor edx, edx ; call 0x20000231019
0x000002000060a956 : test ecx, ecx ; je 0x2000060a96a ; xor edx, edx ; call 0x20000231019
0x000002000060a996 : test ecx, ecx ; je 0x2000060a9aa ; xor edx, edx ; call 0x20000231019
0x000002000060aecf : test ecx, ecx ; je 0x2000060aee3 ; xor edx, edx ; call 0x20000231019
0x000002000060cd38 : test ecx, ecx ; je 0x2000060cd54 ; xor edx, edx ; call 0x20000231019
0x000002000060ceef : test ecx, ecx ; je 0x2000060cf03 ; xor edx, edx ; call 0x20000231019
0x000002000060f49b : test ecx, ecx ; je 0x2000060f4af ; xor edx, edx ; call 0x20000231019
0x000002000061062a : test ecx, ecx ; je 0x2000061063e ; xor edx, edx ; call 0x20000231019
0x0000020000610645 : test ecx, ecx ; je 0x20000610659 ; xor edx, edx ; call 0x20000231019
0x0000020000610a9d : test ecx, ecx ; je 0x20000610ab1 ; xor edx, edx ; call 0x20000231019
0x0000020000610ab8 : test ecx, ecx ; je 0x20000610acc ; xor edx, edx ; call 0x20000231019
0x0000020000614d83 : test ecx, ecx ; je 0x20000614d96 ; xor edx, edx ; call 0x20000231018
0x0000020000749869 : test ecx, ecx ; jg 0x20000749842 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000001e67c : test ecx, ecx ; jne 0x2000001e674 ; mov eax, 0xc0000109 ; ret
0x0000020000021dca : test ecx, ecx ; jne 0x20000021dd9 ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000200000248ff : test ecx, ecx ; jne 0x200000248fb ; ret
0x000002000002ce69 : test ecx, ecx ; jne 0x2000002ce7c ; add rsp, 0x60 ; pop rbp ; ret
0x0000020000051fa2 : test ecx, ecx ; jne 0x20000051fb1 ; mov rax, r9 ; ret
0x000002000005ad7b : test ecx, ecx ; jne 0x2000005ad8a ; mov rax, r9 ; ret
0x000002000005b0e5 : test ecx, ecx ; jne 0x2000005b0ee ; ret
0x0000020000069ea1 : test ecx, ecx ; jne 0x20000069e98 ; xor al, al ; ret
0x000002000007116b : test ecx, ecx ; jne 0x2000007117a ; mov rax, rcx ; ret
0x00000200000746df : test ecx, ecx ; jne 0x200000746f2 ; mov dword ptr [rdx], r8d ; xor eax, eax ; ret
0x0000020000074f2c : test ecx, ecx ; jne 0x20000074f35 ; ret
0x0000020000089e51 : test ecx, ecx ; jne 0x20000089e5e ; mov al, 1 ; ret
0x00000200000cc791 : test ecx, ecx ; jne 0x200000cc79e ; xor eax, eax ; ret
0x00000200000ee4eb : test ecx, ecx ; jne 0x200000ee4e3 ; mov rax, rdx ; ret
0x00000200000f83e7 : test ecx, ecx ; jne 0x200000f83e3 ; ret
0x00000200001221f7 : test ecx, ecx ; jne 0x20000122194 ; ret
0x0000020000124419 : test ecx, ecx ; jne 0x20000124426 ; xor al, al ; ret
0x00000200001336ad : test ecx, ecx ; jne 0x200001336ba ; xor eax, eax ; ret
0x00000200001336e1 : test ecx, ecx ; jne 0x200001336ee ; xor eax, eax ; ret
0x000002000013425d : test ecx, ecx ; jne 0x2000013426a ; xor eax, eax ; ret
0x000002000000c966 : test ecx, ecx ; jne 0x2000015956c ; ret
0x00000200000401ee : test ecx, ecx ; jne 0x2000016686a ; ret
0x00000200001090e1 : test ecx, ecx ; jne 0x2000016e684 ; ret
0x0000020000053425 : test ecx, ecx ; jne 0x20000177a12 ; ret
0x00000200000ed137 : test ecx, ecx ; jne 0x2000019bdf2 ; ret
0x00000200001a99de : test ecx, ecx ; jne 0x200001a99c0 ; xor eax, eax ; ret
0x00000200001ab83a : test ecx, ecx ; jne 0x200001ab84d ; mov eax, 0xc000000d ; ret
0x00000200001d0665 : test ecx, ecx ; jne 0x200001d0678 ; mov eax, 1 ; ret
0x00000200001f0efc : test ecx, ecx ; jne 0x200001f0eee ; xor al, al ; ret
0x00000200001f2ea5 : test ecx, ecx ; jne 0x200001f2eb8 ; mov eax, 0xc000000d ; ret
0x00000200001f508f : test ecx, ecx ; jne 0x200001f508b ; ret
0x00000200003c4d16 : test ecx, ecx ; jne 0x200003c4d29 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200003cbb21 : test ecx, ecx ; jne 0x200003cbb34 ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003df57b : test ecx, ecx ; jne 0x200003df58c ; add rsp, 0x28 ; ret
0x00000200003e0f62 : test ecx, ecx ; jne 0x200003e0f89 ; mov eax, r10d ; ret
0x00000200003e0f62 : test ecx, ecx ; jne 0x200003e0f8a ; mov eax, r10d ; ret
0x00000200003e9719 : test ecx, ecx ; jne 0x200003e972a ; add rsp, 0x28 ; ret
0x000002000041b3c2 : test ecx, ecx ; jne 0x2000041b3d5 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000041d7de : test ecx, ecx ; jne 0x2000041d7f1 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000042a9c9 : test ecx, ecx ; jne 0x2000042a9f8 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000434892 : test ecx, ecx ; jne 0x200004348a5 ; add rsp, 0x20 ; pop rbx ; ret
0x000002000043ec1f : test ecx, ecx ; jne 0x2000043ec32 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000442845 : test ecx, ecx ; jne 0x20000442858 ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000466852 : test ecx, ecx ; jne 0x20000466877 ; mov eax, edi ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000488278 : test ecx, ecx ; jne 0x20000488281 ; ret
0x00000200004c1c63 : test ecx, ecx ; jne 0x200004c1ca7 ; add rsp, 0x20 ; pop rbx ; ret
0x00000200004ca39d : test ecx, ecx ; jne 0x200004ca3a6 ; ret
0x00000200005f16c1 : test ecx, ecx ; jne 0x200005f16d4 ; mov eax, 0xc000000d ; ret
0x00000200005fc4e4 : test ecx, ecx ; jne 0x200005fc4f1 ; xor eax, eax ; ret
0x0000020000632309 : test ecx, ecx ; jne 0x2000063231c ; mov eax, 0xc000000d ; ret
0x0000020000640454 : test ecx, ecx ; jne 0x20000640435 ; ret
0x0000020000643a29 : test ecx, ecx ; jne 0x20000643a36 ; xor al, al ; ret
0x0000020000662eec : test ecx, ecx ; jne 0x20000662eda ; mov rax, rcx ; ret
0x000002000067e324 : test ecx, ecx ; jne 0x2000067e337 ; mov eax, 0xc000000d ; ret
0x000002000067eb01 : test ecx, ecx ; jne 0x2000067eb0e ; xor eax, eax ; ret
0x000002000074fb0d : test ecx, ecx ; jne 0x2000074fb16 ; ret
0x000002000076c855 : test ecx, ecx ; jne 0x2000076c845 ; ret
0x000002000040f1f8 : test ecx, ecx ; jns 0x2000040f209 ; add rsp, 0x28 ; ret
0x0000020000113a39 : test ecx, ecx ; js 0x20000113a4f ; mov rax, rdx ; ret
0x0000020000113a39 : test ecx, ecx ; js 0x20000113a50 ; mov rax, rdx ; ret
0x000002000001bef0 : test ecx, ecx ; setne al ; ret
0x00000200003ebb45 : test ecx, ecx ; setns al ; dec eax ; ret
0x00000200005cb5bb : test ecx, edi ; ret 0xfff4
0x000002000009ccea : test ecx, edx ; add al, 0 ; add dh, dh ; ret
0x0000020000524865 : test ecx, edx ; je 0x20000524872 ; mov al, 1 ; ret
0x00000200001657e2 : test ecx, edx ; jmp 0x2000003be99
0x00000200003fea86 : test ecx, edx ; sete al ; ret
0x000002000041a61c : test ecx, edx ; setne al ; ret
0x0000020000059ed8 : test ecx, esp ; add al, 0 ; add dh, dh ; ret
0x0000020000087114 : test ecx, esp ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b4c
0x00000200006882fd : test edi, eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004eb671 : test edi, eax ; ret 9
0x00000200000d4342 : test edi, ebp ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x86 ; ret
0x00000200003b51ec : test edi, ebp ; add byte ptr [rax], al ; add dh, dh ; ret 0xf04
0x00000200004a0466 : test edi, ebp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x4002
0x00000200000c68b6 : test edi, ebx ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x00000200003fe005 : test edi, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000bca6d : test edi, edi ; je 0x200000bcae3 ; lea rdx, qword ptr [rdi + 0x10] ; call r8
0x00000200005760d5 : test edi, edi ; je 0x200005760ea ; mov rcx, rdi ; call 0x200000c23c9
0x000002000045ae52 : test edi, edi ; ret 0x14
0x000002000008e36e : test edi, edx ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret
0x0000020000177fbb : test edi, edx ; xlatb ; in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x00000200005f4b8e : test edi, esi ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x76], al ; ret
0x000002000075d6b7 : test edi, esi ; ret 1
0x00000200000ab4d2 : test edi, esp ; add al, 0 ; add byte ptr [rax - 0x75], cl ; ret
0x000002000009a317 : test edi, esp ; ret 0xb
0x00000200005b4515 : test edx, 0xe990ffc7 ; ret
0x00000200005423c4 : test edx, 0xfffffffd ; je 0x200005423d5 ; ret
0x0000020000598f2a : test edx, ebp ; ret
0x0000020000017347 : test edx, ebx ; add al, byte ptr [rax] ; add dh, dh ; ret
0x000002000058046b : test edx, ebx ; fucomi st(0) ; dec dword ptr [rax + 0x2b] ; ret 0xc148
0x00000200003ddddb : test edx, ebx ; ret
0x000002000006fc97 : test edx, ecx ; add eax, dword ptr [rax] ; add dh, dh ; ret
0x00000200005031f7 : test edx, ecx ; ret
0x00000200007628c6 : test edx, ecx ; xchg byte ptr [rcx], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000207f1b : test edx, edx ; cmovne rax, rdx ; jmp 0x20000207f64
0x00000200006a296a : test edx, edx ; cmp ebp, dword ptr [rsi] ; ret 0x39
0x00000200000200ac : test edx, edx ; je 0x200000200bd ; mov word ptr [rcx], r11w ; ret
0x0000020000057f72 : test edx, edx ; je 0x20000057f82 ; mov dword ptr [rdx], r9d ; xor eax, eax ; ret
0x00000200000f114f : test edx, edx ; je 0x200000f115d ; add eax, dword ptr [rdx + 0x68] ; ret
0x000002000010b3b7 : test edx, edx ; je 0x2000010b3c1 ; call rdx
0x0000020000110b14 : test edx, edx ; je 0x20000110b2d ; mov rax, rdx ; ret
0x0000020000110b14 : test edx, edx ; je 0x20000110b2e ; mov rax, rdx ; ret
0x000002000019ea07 : test edx, edx ; je 0x20000125282 ; call rdx
0x0000020000127b02 : test edx, edx ; je 0x20000127b10 ; xor ecx, ecx ; call rdx
0x0000020000192540 : test edx, edx ; je 0x2000019254a ; call rax
0x00000200001a7734 : test edx, edx ; je 0x200001a7746 ; mov eax, 0xc000000d ; ret
0x00000200001b2ab0 : test edx, edx ; je 0x200001b2abc ; jmp rdx
0x00000200001b2b55 : test edx, edx ; je 0x200001b2b61 ; jmp rdx
0x000002000021bea5 : test edx, edx ; je 0x2000021be70 ; mov eax, r10d ; jmp 0x2000021beb6
0x00000200003b63a4 : test edx, edx ; je 0x200003b63b0 ; jmp r10
0x00000200003c2a82 : test edx, edx ; je 0x200003c2a92 ; mov rcx, rsi ; call rdx
0x00000200004878b3 : test edx, edx ; je 0x2000048789d ; ret
0x00000200005712ed : test edx, edx ; je 0x200005712ff ; mov rcx, qword ptr [rbp + 0x30] ; call rdx
0x00000200005dbea9 : test edx, edx ; je 0x200005dbeb5 ; mov dword ptr [rdx], eax ; ret
0x0000020000636015 : test edx, edx ; je 0x2000063601f ; call rdx
0x0000020000444752 : test edx, edx ; jle 0x20000444763 ; add rsp, 0x38 ; ret
0x000002000000f574 : test edx, edx ; jne 0x2000000f591 ; mov eax, 1 ; ret
0x00000200000203f1 : test edx, edx ; jne 0x20000020401 ; or byte ptr [rcx + 9], 4 ; ret
0x000002000003245e : test edx, edx ; jne 0x20000032467 ; ret
0x00000200000342d0 : test edx, edx ; jne 0x200000342d9 ; ret
0x000002000003cd10 : test edx, edx ; jne 0x2000003ccfa ; ret
0x0000020000050397 : test edx, edx ; jne 0x200000503a0 ; ret
0x000002000005427f : test edx, edx ; jne 0x200000542bb ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000060b17 : test edx, edx ; jne 0x20000060b28 ; add rsp, 0x28 ; ret
0x0000020000062893 : test edx, edx ; jne 0x200000628a4 ; add rsp, 0x28 ; ret
0x00000200000628e3 : test edx, edx ; jne 0x200000628f4 ; add rsp, 0x28 ; ret
0x0000020000069ffd : test edx, edx ; jne 0x20000069ff2 ; ret
0x000002000007904c : test edx, edx ; jne 0x20000079055 ; ret
0x00000200000c30af : test edx, edx ; jne 0x200000c30ab ; ret
0x00000200000f5114 : test edx, edx ; jne 0x200000f5121 ; mov eax, ecx ; ret
0x00000200000f83da : test edx, edx ; jne 0x200000f83e3 ; ret
0x00000200001a686d : test edx, edx ; jne 0x200001a685f ; ret
0x00000200001c118c : test edx, edx ; jne 0x200001c119b ; mov dword ptr [r8], eax ; ret
0x00000200001ea14c : test edx, edx ; jne 0x200001ea159 ; xor eax, eax ; ret
0x00000200001f0ee1 : test edx, edx ; jne 0x200001f0f01 ; mov al, 1 ; ret
0x00000200003be3c7 : test edx, edx ; jne 0x200003be3ca ; mov eax, 0x2000000 ; ret
0x00000200003be3b8 : test edx, edx ; jne 0x200003be3da ; mov eax, 0x8000000 ; ret
0x00000200003cefa5 : test edx, edx ; jne 0x200003cef78 ; mov r10b, 1 ; jmp 0x200003cef78
0x00000200003fd265 : test edx, edx ; jne 0x200003fd26e ; ret
0x0000020000403c36 : test edx, edx ; jne 0x20000403c43 ; xor eax, eax ; ret
0x000002000040713c : test edx, edx ; jne 0x20000407149 ; mov al, 1 ; ret
0x000002000042969e : test edx, edx ; jne 0x200004296b6 ; add rsp, 0x40 ; pop rbx ; ret
0x0000020000473690 : test edx, edx ; jne 0x200004736a2 ; xor eax, eax ; ret
0x00000200004c3bce : test edx, edx ; jne 0x200004c3c2f ; call 0x200000eb5b7
0x00000200005f1e93 : test edx, edx ; jne 0x200005f1ea2 ; lea eax, dword ptr [rdx + 1] ; ret
0x00000200006bfef4 : test edx, edx ; jne 0x200006bfee5 ; ret
0x00000200005eceab : test edx, edx ; sete cl ; mov eax, ecx ; ret
0x00000200004bc910 : test edx, esi ; jb 0x200004bc92b ; add byte ptr [rbp - 0x75], al ; ret
0x000002000005d7c5 : test edx, esi ; rcl dword ptr [rcx], 0 ; ret
0x0000020000185948 : test edx, esi ; ret 0xfff0
0x00000200000feab3 : test esi, eax ; add byte ptr [rax], al ; add al, ch ; ret
0x00000200000d1290 : test esi, eax ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; mov dh, 0x85 ; ret
0x000002000059dd8d : test esi, ebp ; mov esp, 0x8b45ffe9 ; ret 0x1ba
0x0000020000158ec2 : test esi, ebp ; or eax, 0xd8bffeb ; ret
0x00000200004e3c2c : test esi, ebx ; and ecx, dword ptr [rdx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000b470d : test esi, ebx ; or al, 0 ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000501f6b : test esi, ebx ; ret 8
0x0000020000066772 : test esi, ecx ; adc qword ptr [rax], rax ; ret
0x0000020000096a0d : test esi, edi ; add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], cl ; ret
0x00000200004999b7 : test esi, edx ; add dword ptr [rax], eax ; add bh, dh ; ret
0x0000020000032805 : test esi, edx ; call qword ptr [rdx]
0x00000200004a7b26 : test esi, edx ; or al, byte ptr [rax] ; add byte ptr [rbp - 0x7c], al ; ret 0xe74
0x0000020000539693 : test esi, edx ; ret
0x00000200004b5fde : test esi, edx ; ret 0x10
0x00000200000435f5 : test esi, esi ; adc r8b, byte ptr [r8] ; xor al, al ; ret
0x000002000014603a : test esi, esi ; je 0x2000014604c ; mov rcx, qword ptr [rsi + 0x50] ; jmp rcx
0x00000200003b68df : test esi, esi ; je 0x200003b68f3 ; mov rcx, rsi ; call r14
0x000002000063615a : test esi, esi ; jne 0x20000636174 ; mov rcx, rax ; call 0x200000c23c9
0x000002000052b205 : test esp, 0x8b44ffda ; ret 0x8545
0x000002000042dddb : test esp, eax ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x0000020000005c0f : test esp, ebp ; add dword ptr [rax], eax ; add dh, dh ; ret
0x00000200000f1760 : test esp, ebp ; mov ah, 0xa ; add bh, bh ; ret 0xff49
0x00000200001009a0 : test esp, ebp ; mov bl, 6 ; add byte ptr [rcx - 0x7d], al ; jmp qword ptr [rax]
0x00000200001c8a1a : test esp, ebx ; inc dword ptr [rbx] ; ret 0x9489
0x00000200001fa9df : test esp, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x3474
0x00000200004cfcf6 : test esp, edi ; idiv edi ; jmp qword ptr [rcx]
0x00000200000c2cf4 : test esp, edi ; test dword ptr [rax + rax], 0x28c48348 ; ret
0x00000200003bd9b0 : test esp, edx ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000020000030027 : test esp, edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000020000048d39 : test esp, edx ; ret
0x00000200001cdde4 : test esp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000010198d : test esp, esi ; test al, 6 ; add dh, dh ; ret
0x0000020000114f5e : test esp, esp ; ret
0x0000020000526afd : test qword ptr [r13 + rcx*4 + 0x42], -0x764717c0 ; ret 0x48ff
0x000002000050ceef : test qword ptr [r8 + 0x33], 0x6287e8cc ; ret 0x48ff
0x0000020000050360 : test qword ptr [rcx + 0x10], rdx ; jne 0x20000050373 ; mov al, r8b ; ret
0x00000200003b63a3 : test r10, r10 ; je 0x200003b63b1 ; jmp r10
0x00000200000f5113 : test r10, r10 ; jne 0x200000f5122 ; mov eax, ecx ; ret
0x00000200000500dd : test r10b, r10b ; jne 0x2000017683c ; ret
0x0000020000050121 : test r10b, r10b ; jne 0x20000176878 ; ret
0x000002000021bea4 : test r10d, r10d ; je 0x2000021be71 ; mov eax, r10d ; jmp 0x2000021beb7
0x0000020000403c35 : test r10d, r10d ; jne 0x20000403c44 ; xor eax, eax ; ret
0x0000020000514f77 : test r13b, r8b ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000200003b68de : test r14, r14 ; je 0x200003b68f4 ; mov rcx, rsi ; call r14
0x0000020000057dfc : test r8, r8 ; je 0x20000057e0c ; mov dword ptr [r8], eax ; ret
0x00000200000f7c6b : test r8, r8 ; je 0x200000f7c7b ; mov dword ptr [r8], r9d ; ret
0x000002000010b38e : test r8, r8 ; je 0x2000010b3a0 ; xor edx, edx ; call r8
0x000002000010c4ec : test r8, r8 ; je 0x2000010c4fa ; jmp r8
0x0000020000131ca3 : test r8, r8 ; je 0x20000131cb1 ; jmp r8
0x000002000046fced : test r8, r8 ; je 0x2000046fcfb ; call r8
0x0000020000679f35 : test r8, r8 ; je 0x20000679f4d ; mov rcx, rax ; call r8
0x000002000067a19d : test r8, r8 ; je 0x2000067a1b5 ; mov rcx, rax ; call r8
0x00000200006bb1f8 : test r8, r8 ; je 0x200006bb1ff ; mov dword ptr [r8], r9d ; ret
0x0000020000022b4c : test r8, r8 ; jne 0x20000022b8a ; add rsp, 0x48 ; ret
0x0000020000072e4d : test r8, r8 ; jne 0x20000072e5d ; mov rax, rdx ; ret
0x0000020000072e4d : test r8, r8 ; jne 0x20000072e5e ; mov rax, rdx ; ret
0x0000020000072e5b : test r8, r8 ; jne 0x20000072e6a ; xor eax, eax ; ret
0x0000020000082aff : test r8, r8 ; jne 0x20000082b0a ; ret
0x00000200000e2879 : test r8, r8 ; jne 0x200000e288e ; ret
0x00000200000f0453 : test r8, r8 ; jne 0x200000f0464 ; ret
0x00000200000f1d37 : test r8, r8 ; jne 0x200000f1d47 ; mov al, r10b ; ret
0x00000200000f1d37 : test r8, r8 ; jne 0x200000f1d48 ; mov al, r10b ; ret
0x00000200000f83d5 : test r8, r8 ; jne 0x200000f83cf ; test edx, edx ; jne 0x200000f83e8 ; ret
0x0000020000133b46 : test r8, r8 ; jne 0x20000133b3e ; ret
0x00000200001340e4 : test r8, r8 ; jne 0x200001340d9 ; ret
0x00000200001357a0 : test r8, r8 ; jne 0x200001357c4 ; xor eax, eax ; ret
0x000002000006676e : test r8, r8 ; jne 0x2000017b271 ; ret
0x00000200000f3d9b : test r8, r8 ; jne 0x2000019eefd ; ret
0x0000020000129562 : test r8, r8 ; jne 0x200001a1d13 ; ret
0x00000200001dad83 : test r8, r8 ; jne 0x200001dad54 ; mov rax, r8 ; ret
0x00000200001db356 : test r8, r8 ; jne 0x200001db33f ; xor eax, eax ; ret
0x00000200001f448e : test r8, r8 ; jne 0x200001f4455 ; ret
0x00000200003be3ac : test r8, r8 ; jne 0x200003be39f ; ret
0x0000020000487894 : test r8, r8 ; jne 0x200004878aa ; mov eax, dword ptr [rcx + 0x60] ; ret
0x000002000064b5f5 : test r8, r8 ; jne 0x2000064b606 ; mov qword ptr [rdx], rax ; ret
0x000002000065a147 : test r8, r8 ; jne 0x2000065a15a ; lea eax, dword ptr [r8 + 0x14] ; ret
0x00000200000f1821 : test r8b, 2 ; je 0x200000f1831 ; mov eax, edx ; ret
0x00000200000f1821 : test r8b, 2 ; je 0x200000f1832 ; mov eax, edx ; ret
0x0000020000002ad1 : test r8b, r8b ; jne 0x20000156ffb ; ret
0x000002000013315c : test r8b, r8b ; jne 0x200001a53eb ; ret
0x00000200004d6a33 : test r8b, r8b ; jne 0x200004d6a42 ; xor eax, eax ; ret
0x00000200004d6a8b : test r8b, r8b ; jne 0x200004d6a9a ; xor eax, eax ; ret
0x00000200003fb88f : test r8d, r8d ; je 0x200003fb876 ; xor al, al ; ret
0x0000020000031d07 : test r8d, r8d ; jne 0x20000031d16 ; xor eax, eax ; ret
0x000002000003856f : test r8d, r8d ; jne 0x2000003857a ; ret
0x00000200000f1a17 : test r8d, r8d ; jne 0x200000f1a28 ; mov eax, r8d ; ret
0x00000200006bac1f : test r8d, r8d ; jne 0x200006bac2e ; xor eax, eax ; ret
0x0000020000424539 : test r8d, r8d ; js 0x20000424548 ; xor eax, eax ; ret
0x0000020000008f4e : test r8d, r8d ; setne al ; ret
0x0000020000059378 : test r9, r9 ; je 0x2000005937d ; mov rax, r9 ; ret
0x00000200001ad374 : test r9, r9 ; je 0x200001ad382 ; call r9
0x00000200000401ed : test r9, r9 ; jne 0x2000016686b ; ret
0x00000200001a99dd : test r9, r9 ; jne 0x200001a99c1 ; xor eax, eax ; ret
0x00000200003e0f61 : test r9, r9 ; jne 0x200003e0f8a ; mov eax, r10d ; ret
0x00000200003e0f61 : test r9, r9 ; jne 0x200003e0f8b ; mov eax, r10d ; ret
0x0000020000640453 : test r9, r9 ; jne 0x20000640436 ; ret
0x0000020000113a38 : test r9, r9 ; js 0x20000113a50 ; mov rax, rdx ; ret
0x0000020000113a38 : test r9, r9 ; js 0x20000113a51 ; mov rax, rdx ; ret
0x000002000043eea3 : test r9b, r9b ; jne 0x2000043eebe ; xor eax, eax ; ret
0x0000020000524864 : test r9d, r10d ; je 0x20000524873 ; mov al, 1 ; ret
0x000002000001beef : test r9d, r9d ; setne al ; ret
0x0000020000524863 : test r9w, r10w ; je 0x20000524874 ; mov al, 1 ; ret
0x00000200000e8077 : test rax, -0x10 ; ja 0x200000e808b ; mov al, dl ; ret
0x000002000052eb10 : test rax, r10 ; jne 0x2000052ebb0 ; ret
0x000002000009914f : test rax, r8 ; je 0x2000009910d ; xor eax, eax ; ret
0x0000020000115bc5 : test rax, r8 ; je 0x20000115bd0 ; ret
0x00000200000895fd : test rax, r8 ; jne 0x2000008960c ; xor al, al ; ret
0x00000200001f3315 : test rax, r9 ; sete al ; ret
0x00000200003db8c7 : test rax, rax ; cmove eax, edx ; ret
0x0000020000058603 : test rax, rax ; je 0x20000058616 ; mov rax, qword ptr [rax + 0x40] ; ret
0x00000200000bcc7d : test rax, rax ; je 0x200000bcc88 ; ret
0x00000200000e4a0a : test rax, rax ; je 0x200000e4a1e ; mov rcx, qword ptr [r14 + 8] ; call rax
0x000002000011c519 : test rax, rax ; je 0x2000011c524 ; ret
0x00000200001a3fb8 : test rax, rax ; je 0x20000130fba ; call rax
0x00000200001553c1 : test rax, rax ; je 0x200001553d6 ; mov rcx, qword ptr [rcx + 8] ; call rax
0x000002000016d461 : test rax, rax ; je 0x2000016d46d ; call rax
0x00000200001099c5 : test rax, rax ; je 0x2000016ea95 ; call rax
0x00000200001ac427 : test rax, rax ; je 0x200001ac435 ; call rax
0x00000200001b2a20 : test rax, rax ; je 0x200001b2a2c ; call rax
0x00000200001b2a5c : test rax, rax ; je 0x200001b2a68 ; call rax
0x00000200001b2ad7 : test rax, rax ; je 0x200001b2ae3 ; call rax
0x00000200001b2b38 : test rax, rax ; je 0x200001b2b44 ; call rax
0x00000200001b2b37 : test rax, rax ; je 0x200001b2b45 ; call rax
0x00000200001b2b36 : test rax, rax ; je 0x200001b2b46 ; call rax
0x00000200001c0ce7 : test rax, rax ; je 0x200001c0d0c ; mov rax, qword ptr [rax + 8] ; call rax
0x00000200001f0e85 : test rax, rax ; je 0x200001f0e97 ; mov rcx, rbp ; call rax
0x00000200001f0e84 : test rax, rax ; je 0x200001f0e98 ; mov rcx, rbp ; call rax
0x00000200002149b6 : test rax, rax ; je 0x200002149cc ; mov rcx, r14 ; call rax
0x00000200003af91b : test rax, rax ; je 0x200003af92f ; mov rcx, qword ptr [rax + 8] ; call qword ptr [rax]
0x00000200003e35f7 : test rax, rax ; je 0x200003e35cc ; call rax
0x00000200003f825f : test rax, rax ; je 0x200003f8272 ; movzx eax, word ptr [rax + 8] ; ret
0x000002000041ebbf : test rax, rax ; je 0x2000041ebcd ; jmp rax
0x00000200004358f7 : test rax, rax ; je 0x20000435428 ; call rax
0x0000020000443b61 : test rax, rax ; je 0x20000443b75 ; lea rdx, qword ptr [rcx - 0x30] ; call rax
0x00000200004453d5 : test rax, rax ; je 0x200004453e5 ; call rax
0x000002000045713a : test rax, rax ; je 0x2000045714d ; call rax
0x000002000046be19 : test rax, rax ; je 0x2000046be2b ; mov rcx, rbx ; call rax
0x0000020000473aab : test rax, rax ; je 0x20000473abe ; add rax, -0x10 ; ret
0x000002000049192a : test rax, rax ; je 0x20000491951 ; mov rdi, rax ; jmp 0x200004918ff
0x00000200004cb22f : test rax, rax ; je 0x200004cb24e ; mov ecx, dword ptr [rcx + 8] ; call rax
0x00000200004cd47c : test rax, rax ; je 0x200004cd48f ; add rax, 0x10 ; ret
0x00000200004e08d1 : test rax, rax ; je 0x200004e08e8 ; mov rcx, qword ptr [rbp - 0x11] ; call rax
0x00000200004eb4d6 : test rax, rax ; je 0x200004eb4e2 ; call rax
0x00000200004eb8db : test rax, rax ; je 0x200004eb8e7 ; call rax
0x00000200004ec678 : test rax, rax ; je 0x200004ec68c ; mov cl, dil ; call rax
0x00000200004ef096 : test rax, rax ; je 0x200004ef0a2 ; call rax
0x000002000050180d : test rax, rax ; je 0x200005017c0 ; call rax
0x000002000053d278 : test rax, rax ; je 0x2000053d284 ; call rax
0x0000020000542037 : test rax, rax ; je 0x2000054204a ; mov rax, qword ptr [rax + 0x28] ; ret
0x00000200005bab25 : test rax, rax ; je 0x200005bab39 ; mov rcx, r12 ; call rax
0x00000200005f2e9b : test rax, rax ; je 0x200005f2ea9 ; jmp qword ptr [rax]
0x000002000060e3e2 : test rax, rax ; je 0x2000060e3ee ; call rax
0x0000020000639d2f : test rax, rax ; je 0x20000639d3b ; call rax
0x000002000063b763 : test rax, rax ; je 0x2000063b76f ; call rax
0x0000020000677a80 : test rax, rax ; je 0x20000677a90 ; call rax
0x00000200006b9a3b : test rax, rax ; je 0x200006b9abd ; mov r8d, edi ; call rax
0x00000200006b9f97 : test rax, rax ; je 0x200006b9fa9 ; mov cl, r9b ; call rax
0x00000200006bcfaf : test rax, rax ; je 0x200006bcfbd ; jmp rax
0x00000200006c0351 : test rax, rax ; je 0x200006c036e ; mov rcx, rbx ; call rax
0x00000200006c03b9 : test rax, rax ; je 0x200006c03c8 ; call rax
0x00000200006c0465 : test rax, rax ; je 0x200006c0482 ; mov rcx, rdi ; call rax
0x00000200006c04dc : test rax, rax ; je 0x200006c04f2 ; mov rcx, rbx ; call rax
0x00000200006c05ec : test rax, rax ; je 0x200006c05fe ; mov rcx, rdi ; call rax
0x00000200006c0604 : test rax, rax ; je 0x200006c0616 ; mov rcx, rdi ; call rax
0x00000200006c065d : test rax, rax ; je 0x200006c066f ; mov rcx, rdi ; call rax
0x00000200006c065c : test rax, rax ; je 0x200006c0670 ; mov rcx, rdi ; call rax
0x0000020000406f58 : test rax, rax ; jle 0x2000057e725 ; ret
0x00000200000210d7 : test rax, rax ; jne 0x200000210e6 ; xor eax, eax ; ret
0x00000200000234d3 : test rax, rax ; jne 0x200000234d4 ; mov rax, rcx ; ret
0x000002000002aab7 : test rax, rax ; jne 0x2000002aac2 ; ret
0x000002000002f527 : test rax, rax ; jne 0x2000002f532 ; ret
0x0000020000042011 : test rax, rax ; jne 0x20000042012 ; mov rax, rcx ; ret
0x00000200000435cf : test rax, rax ; jne 0x200000435da ; ret
0x0000020000050693 : test rax, rax ; jne 0x200000506a2 ; mov al, 1 ; ret
0x00000200000596e9 : test rax, rax ; jne 0x200000596c7 ; xor eax, eax ; ret
0x00000200000711bd : test rax, rax ; jne 0x200000711b1 ; ret
0x00000200000739bf : test rax, rax ; jne 0x200000739c0 ; mov rax, rcx ; ret
0x00000200000edbe0 : test rax, rax ; jne 0x200000edbe1 ; mov rax, rcx ; ret
0x0000020000125258 : test rax, rax ; jne 0x20000125263 ; ret
0x000002000002484a : test rax, rax ; jne 0x2000015e00c ; ret
0x00000200000432c3 : test rax, rax ; jne 0x20000167c65 ; ret
0x00000200001b471c : test rax, rax ; jne 0x200001b471b ; add rsp, 0x28 ; ret
0x00000200001de96f : test rax, rax ; jne 0x200001de97d ; xor eax, eax ; ret
0x00000200001f504f : test rax, rax ; jne 0x200001f5050 ; mov rax, rcx ; ret
0x00000200003bb700 : test rax, rax ; jne 0x200003bb70b ; ret
0x00000200003c9ac9 : test rax, rax ; jne 0x200003c9ac0 ; jmp 0x200003c9a98
0x00000200003f184b : test rax, rax ; jne 0x200003f185e ; xor cl, cl ; mov al, cl ; ret
0x0000020000401025 : test rax, rax ; jne 0x20000401033 ; mov al, dl ; ret
0x0000020000401025 : test rax, rax ; jne 0x20000401034 ; mov al, dl ; ret
0x000002000041b6d8 : test rax, rax ; jne 0x2000041b6d4 ; ret
0x000002000041e25f : test rax, rax ; jne 0x2000041e26f ; mov eax, r10d ; ret
0x000002000041e25f : test rax, rax ; jne 0x2000041e270 ; mov eax, r10d ; ret
0x0000020000487b20 : test rax, rax ; jne 0x20000487b13 ; call 0x20000443dc7
0x00000200004cc58d : test rax, rax ; jne 0x200004cc5a0 ; add rsp, 0x28 ; ret
0x000002000062beee : test rax, rax ; jne 0x2000062bec7 ; add rsp, 0x38 ; ret
0x000002000068bbdd : test rax, rax ; jne 0x2000068bb99 ; mov al, 1 ; ret
0x00000200006b5366 : test rax, rax ; jne 0x200006b5371 ; ret
0x00000200006b6e65 : test rax, rax ; jne 0x200006b6e45 ; ret
0x000002000073c021 : test rax, rax ; jne 0x2000073c023 ; and r14d, r15d ; call r12
0x00000200000d827e : test rax, rcx ; jne 0x200000d8292 ; xor eax, eax ; ret
0x00000200000a2f89 : test rcx, r8 ; cmovne eax, edx ; ret
0x000002000007e743 : test rcx, rax ; je 0x2000007e752 ; xor eax, eax ; ret
0x000002000002ccc6 : test rcx, rcx ; je 0x2000002ccd5 ; mov al, 1 ; ret
0x00000200000eef3b : test rcx, rcx ; je 0x200000eef49 ; call rcx
0x0000020000124393 : test rcx, rcx ; je 0x2000012439f ; call rcx
0x00000200001b29dc : test rcx, rcx ; je 0x200001b29e8 ; call rcx
0x00000200001b29ff : test rcx, rcx ; je 0x200001b2a0b ; call rcx
0x00000200001b2a3c : test rcx, rcx ; je 0x200001b2a4a ; jmp rcx
0x00000200001b2a3b : test rcx, rcx ; je 0x200001b2a4b ; jmp rcx
0x00000200001b2a3a : test rcx, rcx ; je 0x200001b2a4c ; jmp rcx
0x00000200001b2a8b : test rcx, rcx ; je 0x200001b2a99 ; jmp rcx
0x00000200001b2afb : test rcx, rcx ; je 0x200001b2b07 ; call rcx
0x00000200001b2b18 : test rcx, rcx ; je 0x200001b2b26 ; jmp rcx
0x00000200001bef33 : test rcx, rcx ; je 0x200001bef49 ; mov dword ptr [rcx], r10d ; ret
0x00000200001e2229 : test rcx, rcx ; je 0x200001e2245 ; and qword ptr [rcx], rdx ; ret
0x000002000021568a : test rcx, rcx ; je 0x2000021569a ; add dword ptr [rcx], r11d ; ret
0x00000200003a13e5 : test rcx, rcx ; je 0x200003a13f1 ; call rcx
0x00000200003a13e4 : test rcx, rcx ; je 0x200003a13f2 ; call rcx
0x00000200003a13e3 : test rcx, rcx ; je 0x200003a13f3 ; call rcx
0x00000200003af3ac : test rcx, rcx ; je 0x200003af3b8 ; call rcx
0x00000200003af3ab : test rcx, rcx ; je 0x200003af3b9 ; call rcx
0x00000200003af3aa : test rcx, rcx ; je 0x200003af3ba ; call rcx
0x000002000041caf2 : test rcx, rcx ; je 0x2000041cb04 ; mov rax, qword ptr [rdx + 0x38] ; ret
0x00000200004704c4 : test rcx, rcx ; je 0x20000470503 ; mov eax, r10d ; ret
0x00000200004704c4 : test rcx, rcx ; je 0x20000470504 ; mov eax, r10d ; ret
0x00000200004c1bf5 : test rcx, rcx ; je 0x200004c1c07 ; call 0x200000e7978
0x00000200004c1c46 : test rcx, rcx ; je 0x200004c1c63 ; call 0x200000e7758
0x00000200004f496a : test rcx, rcx ; je 0x200004f497e ; ret
0x0000020000510969 : test rcx, rcx ; je 0x2000051097b ; call 0x20000140388
0x0000020000510968 : test rcx, rcx ; je 0x2000051097c ; call 0x20000140389
0x0000020000511256 : test rcx, rcx ; je 0x20000511268 ; call 0x20000140388
0x0000020000511264 : test rcx, rcx ; je 0x20000511276 ; call 0x20000140388
0x0000020000511e25 : test rcx, rcx ; je 0x20000511e37 ; call 0x20000140388
0x00000200005128fb : test rcx, rcx ; je 0x2000051290d ; call 0x20000140388
0x000002000051290a : test rcx, rcx ; je 0x2000051291c ; call 0x20000140388
0x0000020000512918 : test rcx, rcx ; je 0x2000051292a ; call 0x20000140388
0x000002000051329d : test rcx, rcx ; je 0x200005132af ; call 0x20000140388
0x00000200005132ac : test rcx, rcx ; je 0x200005132be ; call 0x20000140388
0x000002000051b1b1 : test rcx, rcx ; je 0x2000051b1c3 ; call 0x20000140388
0x000002000051de36 : test rcx, rcx ; je 0x2000051de48 ; call 0x20000140388
0x000002000057482a : test rcx, rcx ; je 0x200005747ff ; jmp 0x200005747fa
0x0000020000604313 : test rcx, rcx ; je 0x20000604325 ; call 0x20000231018
0x0000020000614d82 : test rcx, rcx ; je 0x20000614d97 ; xor edx, edx ; call 0x20000231019
0x0000020000021dc9 : test rcx, rcx ; jne 0x20000021dda ; mov eax, dword ptr [rax + 0x24] ; ret
0x00000200000248fe : test rcx, rcx ; jne 0x200000248fc ; ret
0x0000020000051fa1 : test rcx, rcx ; jne 0x20000051fb2 ; mov rax, r9 ; ret
0x000002000005ad7a : test rcx, rcx ; jne 0x2000005ad8b ; mov rax, r9 ; ret
0x000002000005b0e4 : test rcx, rcx ; jne 0x2000005b0ef ; ret
0x0000020000069ea0 : test rcx, rcx ; jne 0x20000069e99 ; xor al, al ; ret
0x000002000007116a : test rcx, rcx ; jne 0x2000007117b ; mov rax, rcx ; ret
0x0000020000074f2b : test rcx, rcx ; jne 0x20000074f36 ; ret
0x0000020000089e50 : test rcx, rcx ; jne 0x20000089e5f ; mov al, 1 ; ret
0x00000200000cc790 : test rcx, rcx ; jne 0x200000cc79f ; xor eax, eax ; ret
0x00000200000ee4ea : test rcx, rcx ; jne 0x200000ee4e4 ; mov rax, rdx ; ret
0x00000200000f83e6 : test rcx, rcx ; jne 0x200000f83e4 ; ret
0x0000020000124418 : test rcx, rcx ; jne 0x20000124427 ; xor al, al ; ret
0x00000200001336ac : test rcx, rcx ; jne 0x200001336bb ; xor eax, eax ; ret
0x00000200001336e0 : test rcx, rcx ; jne 0x200001336ef ; xor eax, eax ; ret
0x000002000013425c : test rcx, rcx ; jne 0x2000013426b ; xor eax, eax ; ret
0x00000200001090e0 : test rcx, rcx ; jne 0x2000016e685 ; ret
0x0000020000053424 : test rcx, rcx ; jne 0x20000177a13 ; ret
0x00000200001f0efb : test rcx, rcx ; jne 0x200001f0eef ; xor al, al ; ret
0x00000200001f508e : test rcx, rcx ; jne 0x200001f508c ; ret
0x00000200003df57a : test rcx, rcx ; jne 0x200003df58d ; add rsp, 0x28 ; ret
0x00000200003e9718 : test rcx, rcx ; jne 0x200003e972b ; add rsp, 0x28 ; ret
0x0000020000488277 : test rcx, rcx ; jne 0x20000488282 ; ret
0x00000200004ca39c : test rcx, rcx ; jne 0x200004ca3a7 ; ret
0x00000200005fc4e3 : test rcx, rcx ; jne 0x200005fc4f2 ; xor eax, eax ; ret
0x0000020000643a28 : test rcx, rcx ; jne 0x20000643a37 ; xor al, al ; ret
0x0000020000662eeb : test rcx, rcx ; jne 0x20000662edb ; mov rax, rcx ; ret
0x000002000067eb00 : test rcx, rcx ; jne 0x2000067eb0f ; xor eax, eax ; ret
0x000002000074fb0c : test rcx, rcx ; jne 0x2000074fb17 ; ret
0x000002000076c854 : test rcx, rcx ; jne 0x2000076c846 ; ret
0x0000020000207f1a : test rdx, rdx ; cmovne rax, rdx ; jmp 0x20000207f65
0x00000200000200ab : test rdx, rdx ; je 0x200000200be ; mov word ptr [rcx], r11w ; ret
0x00000200000f114e : test rdx, rdx ; je 0x200000f115e ; add eax, dword ptr [rdx + 0x68] ; ret
0x000002000010b3b6 : test rdx, rdx ; je 0x2000010b3c2 ; call rdx
0x0000020000110b13 : test rdx, rdx ; je 0x20000110b2e ; mov rax, rdx ; ret
0x0000020000110b13 : test rdx, rdx ; je 0x20000110b2f ; mov rax, rdx ; ret
0x000002000019ea06 : test rdx, rdx ; je 0x20000125283 ; call rdx
0x0000020000127b01 : test rdx, rdx ; je 0x20000127b11 ; xor ecx, ecx ; call rdx
0x000002000019253f : test rdx, rdx ; je 0x2000019254b ; call rax
0x00000200001b2aaf : test rdx, rdx ; je 0x200001b2abd ; jmp rdx
0x00000200001b2b54 : test rdx, rdx ; je 0x200001b2b62 ; jmp rdx
0x00000200003c2a81 : test rdx, rdx ; je 0x200003c2a93 ; mov rcx, rsi ; call rdx
0x00000200004878b2 : test rdx, rdx ; je 0x2000048789e ; ret
0x00000200005712ec : test rdx, rdx ; je 0x20000571300 ; mov rcx, qword ptr [rbp + 0x30] ; call rdx
0x00000200005dbea8 : test rdx, rdx ; je 0x200005dbeb6 ; mov dword ptr [rdx], eax ; ret
0x0000020000636014 : test rdx, rdx ; je 0x20000636020 ; call rdx
0x0000020000444751 : test rdx, rdx ; jle 0x20000444764 ; add rsp, 0x38 ; ret
0x000002000003245d : test rdx, rdx ; jne 0x20000032468 ; ret
0x00000200000342cf : test rdx, rdx ; jne 0x200000342da ; ret
0x000002000003cd0f : test rdx, rdx ; jne 0x2000003ccfb ; ret
0x0000020000050396 : test rdx, rdx ; jne 0x200000503a1 ; ret
0x0000020000060b16 : test rdx, rdx ; jne 0x20000060b29 ; add rsp, 0x28 ; ret
0x0000020000062892 : test rdx, rdx ; jne 0x200000628a5 ; add rsp, 0x28 ; ret
0x00000200000628e2 : test rdx, rdx ; jne 0x200000628f5 ; add rsp, 0x28 ; ret
0x0000020000069ffc : test rdx, rdx ; jne 0x20000069ff3 ; ret
0x00000200000c30ae : test rdx, rdx ; jne 0x200000c30ac ; ret
0x00000200001ea14b : test rdx, rdx ; jne 0x200001ea15a ; xor eax, eax ; ret
0x00000200001f0ee0 : test rdx, rdx ; jne 0x200001f0f02 ; mov al, 1 ; ret
0x00000200003cefa4 : test rdx, rdx ; jne 0x200003cef79 ; mov r10b, 1 ; jmp 0x200003cef79
0x00000200003fd264 : test rdx, rdx ; jne 0x200003fd26f ; ret
0x00000200005f1e92 : test rdx, rdx ; jne 0x200005f1ea3 ; lea eax, dword ptr [rdx + 1] ; ret
0x00000200006bfef3 : test rdx, rdx ; jne 0x200006bfee6 ; ret
0x0000020000146039 : test rsi, rsi ; je 0x2000014604d ; mov rcx, qword ptr [rsi + 0x50] ; jmp rcx
0x00000200000f3fae : test sil, sil ; jne 0x200000f3f79 ; jmp 0x200000f3f96
0x0000020000006dbb : unpckhps xmm0, xmmword ptr [rax] ; ret
0x00000200004a882f : vaddsubpd xmm12, xmm2, xmmword ptr [rbx - 0x74fffe76] ; ret 0xe8c1
0x00000200004300a8 : vaddsubps xmm6, xmm2, xmmword ptr [rbx] ; rol bl, 0x49 ; mov eax, eax ; ret
0x00000200000165b9 : vaddsubps xmm9, xmm8, xmmword ptr [rcx - 0x75] ; ret 0x1ba
0x000002000008e2ba : verr word ptr [rsi - 1] ; ret 0x3b66
0x00000200005941a1 : verw ax ; cwde ; ret
0x00000200001e2f66 : verw ax ; ret
0x00000200006146b2 : vpmaxsw ymm8, ymm0, ymmword ptr [rcx + rcx*4 + 0x45] ; ret
0x00000200003a8d4a : vpminsw ymm13, ymm1, ymm1 ; ret 0xff5f
0x000002000001764d : wait ; adc al, 0 ; mov qword ptr [r8], rax ; xor eax, eax ; ret
0x00000200000059c1 : wait ; adc al, byte ptr [rax] ; jmp 0x200000058a5
0x0000020000073fe1 : wait ; adc byte ptr [rax], al ; ret
0x0000020000230348 : wait ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; sbb byte ptr [rbx], al ; ret
0x00000200000e8a70 : wait ; add byte ptr [rax], al ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x0000020000101997 : wait ; add byte ptr [rax], al ; add dh, dh ; ret
0x000002000064adff : wait ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; push rcx ; add al, 0x8b ; ret 0x8b41
0x000002000004fbc4 : wait ; add eax, dword ptr [rax] ; add rsp, 0x48 ; ret
0x000002000047fec1 : wait ; cli ; ret
0x0000020000181e8d : wait ; cmp esi, eax ; dec dword ptr [rbx + rcx*4 + 0x44] ; and al, 0x58 ; call rax
0x00000200004c81f4 : wait ; cmp r8d, r15d ; je 0x200004c8197 ; jmp 0x200004c81c6
0x00000200006115d1 : wait ; dec dword ptr [rax - 0x73] ; mov r15b, 0xe8 ; ret 0xa61a
0x0000020000783fb3 : wait ; dec dword ptr [rax - 0x75] ; ja 0x20000783fa9 ; ret 0x9bc3
0x00000200006b7ffd : wait ; dec dword ptr [rax - 0x75] ; ret
0x000002000077b398 : wait ; dec dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0x97e9
0x0000020000661b55 : wait ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000143fa2 : wait ; fnstcw word ptr [rcx] ; ret
0x00000200001cedcd : wait ; hlt ; push rsi ; ret
0x000002000017721a : wait ; in eax, dx ; inc dword ptr [rcx - 0x75] ; ret
0x00000200006858f2 : wait ; lodsb al, byte ptr [rsi] ; dec dword ptr [rax - 0x75] ; ret
0x000002000005b1f6 : wait ; loopne 0x2000005b20f ; add dh, dh ; ret
0x00000200006b74f8 : wait ; mov bh, 0xff ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006aab14 : wait ; mov eax, 0xc48348ff ; pop rbx ; ret
0x00000200001ba0e1 : wait ; nop ; idiv edi ; add rsp, 0x58 ; ret
0x000002000063f718 : wait ; or eax, dword ptr [rax] ; mov eax, 0x2d0 ; ret
0x0000020000543b2a : wait ; out dx, al ; dec dword ptr [rax - 0x7d] ; ret
0x00000200004a91fd : wait ; out dx, al ; ret
0x000002000074a279 : wait ; push rax ; ret
0x00000200004c41c1 : wait ; push rdx ; ret 0x8bff
0x0000020000749d69 : wait ; push rsp ; ret
0x000002000043745b : wait ; ret
0x00000200006d9e34 : wait ; ret 0x40ff
0x0000020000509591 : wait ; ret 0x48ff
0x00000200006d9dc1 : wait ; ret 0x89ff
0x00000200006b4bdf : wait ; ret 0xbfff
0x0000020000498c67 : wait ; ret 0xf0ff
0x000002000075de01 : wait ; ret 0xffb7
0x0000020000613c09 : wait ; ret 0xffdc
0x000002000003a4e1 : wait ; ret 0xfffd
0x00000200004b8803 : wait ; sar bh, 0x8b ; ret
0x0000020000050649 : wait ; sbb al, byte ptr [rax] ; add bl, ch ; ret 0xdb8
0x0000020000137c31 : wait ; sbb dword ptr [rax], eax ; sete al ; ret
0x00000200001706c8 : wait ; sbb eax, 0x8b4cfffa ; ret
0x00000200003a6447 : wait ; xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; ret 0xb74
0x00000200003d7971 : wait ; xchg eax, esi ; in eax, -1 ; add rsp, 0x28 ; ret
0x00000200003b682d : wait ; xchg ebp, eax ; dec dword ptr [rax - 0x75] ; ret
0x0000020000035913 : wait ; xor al, 0 ; call rax
0x00000200006568a1 : wait ; xor al, 0x9e ; dec dword ptr [rax - 0x7d] ; ret
0x0000020000044d10 : wbinvd ; ret
0x0000020000148ab2 : wrmsr ; pop rdi ; ret
0x000002000013fffc : wrmsr ; pop rdx ; pop rax ; pop rcx ; ret
0x0000020000143c6b : wrmsr ; ret
0x00000200001a6abb : xabort -1 ; add rsp, 0x78 ; ret
0x00000200000342d7 : xadd dword ptr [rax + 0x6250], edx ; ret
0x0000020000033bb6 : xadd dword ptr [rax + rdx], ecx ; ret
0x000002000014f722 : xadd dword ptr [rcx + 0x1740], edx ; ret
0x00000200001669ac : xadd dword ptr [rcx + 0x40], eax ; ret
0x000002000003644d : xadd dword ptr [rcx + 0x4f0], edx ; ret
0x000002000016699c : xadd dword ptr [rcx + 0x58], eax ; ret
0x000002000016697c : xadd dword ptr [rcx + 0x60], eax ; ret
0x00000200004518f5 : xadd dword ptr [rcx + 0x650], edx ; ret
0x0000020000428768 : xadd dword ptr [rcx + 8], eax ; cmp eax, 1 ; je 0x2000042877b ; ret
0x00000200006b070b : xadd dword ptr [rcx], eax ; ret
0x00000200000e4876 : xadd dword ptr [rdx + 0x10], eax ; add rsp, 0x38 ; ret
0x0000020000033d9c : xadd dword ptr [rdx + 0x20], eax ; ret
0x000002000009a291 : xadd dword ptr [rip + 0x264128], eax ; ret
0x000002000041de62 : xadd dword ptr [rip - 0x1512d1], eax ; inc eax ; ret
0x0000020000033d9b : xadd qword ptr [r10 + 0x20], rax ; ret
0x00000200001669ab : xadd qword ptr [r9 + 0x40], r8 ; ret
0x000002000016699b : xadd qword ptr [r9 + 0x58], rax ; ret
0x000002000016697b : xadd qword ptr [r9 + 0x60], rax ; ret
0x00000200000342d6 : xadd qword ptr [rax + 0x6250], rdx ; ret
0x0000020000033bb5 : xadd qword ptr [rax + r10], rcx ; ret
0x000002000014f721 : xadd qword ptr [rcx + 0x1740], rdx ; ret
0x000002000003644c : xadd qword ptr [rcx + 0x4f0], rdx ; ret
0x00000200004518f4 : xadd qword ptr [rcx + 0x650], rdx ; ret
0x00000200006b070a : xadd qword ptr [rcx], rax ; ret
0x00000200000e4875 : xadd qword ptr [rdx + 0x10], rax ; add rsp, 0x38 ; ret
0x000002000009a290 : xadd qword ptr [rip + 0x264128], r8 ; ret
0x000002000015ea58 : xchg ah, ch ; dec dword ptr [rax - 0x75] ; ret
0x0000020000006db9 : xchg ah, ch ; unpckhps xmm0, xmmword ptr [rax] ; ret
0x000002000052fd85 : xchg ah, cl ; add byte ptr [rax], al ; add byte ptr [rsi + 0x23], ah ; ret 0xb66
0x00000200003f5897 : xchg ah, dl ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x000002000044841a : xchg al, ah ; add byte ptr [rax], al ; add byte ptr [rsi + 3], ah ; ret 0xb70f
0x000002000064ac17 : xchg al, ah ; add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x0000020000516019 : xchg al, al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret
0x00000200004550ef : xchg al, al ; dec dword ptr [rax - 0x75] ; push rdi ; or byte ptr [rax - 0x75], cl ; ret
0x0000020000015617 : xchg al, ch ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000057e6d7 : xchg al, ch ; inc dword ptr [rbp - 0xf98b0a] ; ret 0xeed1
0x000002000022c8d3 : xchg al, cl ; add al, 0 ; add byte ptr [rcx - 0x7f], al ; ret
0x0000020000079785 : xchg al, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0x7501
0x00000200001d4b79 : xchg al, dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; adc dh, dh ; ret 0xf01
0x000002000004189a : xchg al, dl ; add al, byte ptr [rax] ; add bh, bh ; ret 0x9489
0x0000020000018169 : xchg bh, bh ; ret 0x5489
0x000002000020cdf7 : xchg bh, bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x3a], al ; ret
0x000002000014f736 : xchg bh, cl ; sbb byte ptr [rax], al ; ret
0x00000200000384a3 : xchg bh, dh ; rol byte ptr [rcx + 0xb], 1 ; add byte ptr [rbx], bh ; ret
0x00000200006da4da : xchg bl, al ; mov esi, 0xc72583ff ; ret
0x0000020000613c02 : xchg bl, ch ; dec dword ptr [rax - 0x75] ; iretd ; call 0x200003dfeb0
0x00000200003c4a5b : xchg byte ptr [rax + 0x3000001], dl ; ret 0x8b48
0x000002000072b28a : xchg byte ptr [rax + 0x489090ff], ah ; add esp, 0x48 ; ret
0x00000200001b82c3 : xchg byte ptr [rax + 0x75000000], bl ; adc cl, byte ptr [rax - 0x7d] ; ret 0xb910
0x0000020000012574 : xchg byte ptr [rax + rax], dl ; xor eax, eax ; ret
0x000002000006c16d : xchg byte ptr [rax - 0x1000000], bl ; ret
0x000002000022222a : xchg byte ptr [rax - 0x7bfffffb], ah ; ret
0x00000200001a04cf : xchg byte ptr [rax - 8], ah ; jmp qword ptr [rbx]
0x0000020000063ed1 : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax + 0x3b], cl ; ret 0x9277
0x00000200004558b9 : xchg byte ptr [rax], al ; add byte ptr [rax], al ; mov rcx, rbx ; call 0x200000c1b39
0x000002000008f3ce : xchg byte ptr [rax], ch ; add al, byte ptr [rax] ; add byte ptr [rcx + 0x2b], cl ; fsub st(1), st(0) ; ret
0x0000020000046aa2 : xchg byte ptr [rax], dl ; add byte ptr [rax - 0x75], cl ; ret
0x000002000006729e : xchg byte ptr [rbp + 0x31], ch ; add byte ptr [rax - 0x7d], cl ; ret 0x4850
0x0000020000229d39 : xchg byte ptr [rbp + rax], bh ; add byte ptr [rcx - 0x75], cl ; ret 0x894c
0x00000200001d2456 : xchg byte ptr [rbp - 0x74000004], al ; ret
0x00000200005005f6 : xchg byte ptr [rbx], ch ; ret
0x000002000060e486 : xchg byte ptr [rbx], ch ; ret 0x4cff
0x00000200005a6bb6 : xchg byte ptr [rbx], ch ; ret 0x84ff
0x00000200004b73d3 : xchg byte ptr [rbx], cl ; add rcx, rdx ; jmp rcx
0x000002000016cd53 : xchg byte ptr [rbx], dh ; push 0xf9 ; dec dword ptr [rax + 0x2b] ; ret 0x8948
0x00000200000ecf5e : xchg byte ptr [rbx], dl ; sub dword ptr [rax], eax ; ret
0x0000020000071dc6 : xchg byte ptr [rcx + 5], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000040b0a : xchg byte ptr [rcx + rax], ah ; add cl, ch ; ret 0
0x000002000051009a : xchg byte ptr [rcx - 0x7d], cl ; ret 0x4840
0x000002000006ab83 : xchg byte ptr [rcx - 0xfffffd], dh ; ret 0x9489
0x0000020000762b4a : xchg byte ptr [rcx], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200007628c8 : xchg byte ptr [rcx], al ; add byte ptr [rcx - 0x75], cl ; ret
0x00000200001aeaee : xchg byte ptr [rcx], bh ; adc al, byte ptr [rax] ; lea ecx, dword ptr [rax + 0x7b] ; call r9
0x000002000010b3dd : xchg byte ptr [rdi + 0x1f], dh ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200001d2ab8 : xchg byte ptr [rdi + rdi*8 - 1], al ; inc dword ptr [rax - 0x80] ; call qword ptr [rcx]
0x000002000063aa9d : xchg byte ptr [rdi - 0x3b7cb701], ch ; ret
0x0000020000588237 : xchg byte ptr [rdi - 0x740009ad], bl ; ret
0x000002000076de11 : xchg byte ptr [rdi], al ; add dword ptr [rax], eax ; ret
0x00000200004206fa : xchg byte ptr [rdi], cl ; ret
0x000002000012ccb8 : xchg byte ptr [rdx + rax], ch ; add bh, bh ; ret
0x00000200004d8dab : xchg byte ptr [rdx - 0x17fffffa], dh ; ret
0x0000020000409db6 : xchg byte ptr [rdx], al ; ret
0x000002000041913f : xchg byte ptr [rdx], ch ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], al ; ret
0x000002000011763e : xchg byte ptr [rsi + 0x28], bl ; add byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200003a4a80 : xchg byte ptr [rsi + rax], dl ; add byte ptr [rcx - 0x75], al ; ret 0xe8c1
0x00000200000a280a : xchg byte ptr [rsi], ch ; add al, 0 ; add byte ptr [rcx - 0x75], cl ; ret
0x000002000017dfce : xchg byte ptr [rsp + rdi*2], ah ; out dx, eax ; inc dword ptr [rbp - 0x75] ; ret 0xb60f
0x00000200000803ad : xchg ch, ch ; add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 0xfff
0x00000200001d8903 : xchg dh, cl ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x000002000065ab0a : xchg dl, cl ; dec dword ptr [rax - 0x77] ; pop rcx ; or byte ptr [rax + 0x3b], cl ; ret
0x0000020000055c19 : xchg dword ptr [0xffffffff8b4c0012], ebx ; ret
0x00000200004e6aea : xchg dword ptr [r8 - 0x75], r9d ; ret
0x0000020000467291 : xchg dword ptr [r9 - 0x75], r9d ; xlatb ; mov rcx, rbx ; call r14
0x000002000052ee85 : xchg dword ptr [r9], r8d ; add byte ptr [rax + rax], dl ; call 0x2000014f4c9
0x00000200003eab8f : xchg dword ptr [rax + 0x18], ebp ; add dh, dh ; ret 0xf03
0x000002000022faec : xchg dword ptr [rax + 0x33000005], eax ; ret 0x8948
0x000002000022fb59 : xchg dword ptr [rax + 0x33], ecx ; ret 0xd233
0x0000020000459d13 : xchg dword ptr [rax + rbx*8 + 0x63480014], edx ; ret
0x000002000051b86f : xchg dword ptr [rax + rcx*8 + 0x50], eax ; mov eax, r9d ; ret
0x00000200000869a5 : xchg dword ptr [rax - 0x1000000], esi ; ret
0x000002000012ae36 : xchg dword ptr [rax - 0x75000000], edx ; ret
0x00000200004e6aeb : xchg dword ptr [rax - 0x75], ecx ; ret
0x000002000053888c : xchg dword ptr [rax - 0x77fff635], ebx ; or cl, byte ptr [rax - 1] ; ret 0x8445
0x000002000022fd04 : xchg dword ptr [rax - 0x7afffffa], ecx ; ret 0x774
0x0000020000596c27 : xchg dword ptr [rax - 0x7b000000], edx ; ret
0x00000200003d9083 : xchg dword ptr [rax - 0x7d000000], ecx ; ret 0x304
0x0000020000082600 : xchg dword ptr [rax - 0x7f], ecx ; ret
0x0000020000092002 : xchg dword ptr [rax - 0x9fffffe], ebp ; ret 0xf01
0x00000200001f9c67 : xchg dword ptr [rax], eax ; add byte ptr [rcx], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xf49
0x0000020000081a4d : xchg dword ptr [rax], ebx ; in al, dx ; str word ptr [rax - 0x75] ; sbb esi, esi ; ret
0x00000200005071fd : xchg dword ptr [rax], ecx ; add byte ptr [rbx - 0x74ba44b3], cl ; ret
0x0000020000115722 : xchg dword ptr [rax], esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000065aa2c : xchg dword ptr [rbp - 0x3b7cb701], ebp ; jo 0x2000065aa99 ; ret
0x00000200005419e0 : xchg dword ptr [rbx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005419df : xchg dword ptr [rbx + 8], r8d ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000404dc5 : xchg dword ptr [rbx - 0x74bbfff5], esi ; ret
0x000002000074c475 : xchg dword ptr [rbx], ebx ; ret
0x00000200003fd171 : xchg dword ptr [rbx], edi ; ret 0x17
0x00000200000260ad : xchg dword ptr [rbx], edx ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000ecf65 : xchg dword ptr [rbx], edx ; sub dword ptr [rax], eax ; ret
0x000002000040f62a : xchg dword ptr [rcx + 0x1c8], edx ; ret
0x0000020000211d01 : xchg dword ptr [rcx + 0x1c], eax ; ret
0x0000020000546202 : xchg dword ptr [rcx + 0x20], eax ; ret
0x000002000040297a : xchg dword ptr [rcx + 0x23], ecx ; ret 0x3b48
0x0000020000662f09 : xchg dword ptr [rcx + 0x2c], eax ; xor eax, eax ; ret
0x0000020000662f08 : xchg dword ptr [rcx + 0x2c], r8d ; xor eax, eax ; ret
0x0000020000064af8 : xchg dword ptr [rcx + 0x318], edx ; ret
0x0000020000223163 : xchg dword ptr [rcx + 0x33000000], ecx ; rol byte ptr [rcx - 0x80], cl ; ret 0x4101
0x0000020000044d30 : xchg dword ptr [rcx + 0x54], edx ; mov eax, edx ; ret
0x000002000007e334 : xchg dword ptr [rcx + rax + 0x634c0000], eax ; ret
0x0000020000735056 : xchg dword ptr [rcx + rax], ebp ; add byte ptr [rcx + 0x3b], cl ; ret 0x840f
0x0000020000015b0b : xchg dword ptr [rcx - 0x75], eax ; ret
0x0000020000467292 : xchg dword ptr [rcx - 0x75], ecx ; xlatb ; mov rcx, rbx ; call r14
0x00000200007465f4 : xchg dword ptr [rcx - 0x75fffd17], ebx ; ret 0x2a41
0x000002000052ee86 : xchg dword ptr [rcx], eax ; add byte ptr [rax + rax], dl ; call 0x2000014f4c8
0x0000020000042496 : xchg dword ptr [rcx], eax ; ret
0x000002000004d276 : xchg dword ptr [rcx], ebp ; add byte ptr [rcx + 0x3b], cl ; ret 0xf41
0x0000020000665132 : xchg dword ptr [rcx], ecx ; mov qword ptr [rdx], rax ; mov rax, rcx ; ret
0x00000200004583c5 : xchg dword ptr [rcx], ecx ; out 0x14, al ; add byte ptr [rax + 0x63], cl ; ret 0x8d48
0x00000200002312e1 : xchg dword ptr [rcx], edx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x75], cl ; ret
0x00000200004af175 : xchg dword ptr [rcx], esi ; ret 0xe9ff
0x0000020000053160 : xchg dword ptr [rdi + rax*2 + 0x2b490012], edi ; ret
0x000002000063a9ca : xchg dword ptr [rdi - 0x3b7cb701], ebp ; ret
0x000002000062751b : xchg dword ptr [rdi - 0x75000000], ebx ; ret
0x000002000007ddf6 : xchg dword ptr [rdi - 0x75ffefe2], eax ; and esi, dword ptr [r10] ; ret 0x724
0x000002000045c1a6 : xchg dword ptr [rdi], eax ; add eax, dword ptr [rax] ; add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x0000020000573831 : xchg dword ptr [rdi], ecx ; enter -0x6f01, -0x17 ; ret 0xe749
0x00000200000c81dc : xchg dword ptr [rdi], edx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x78], al ; stosd dword ptr [rdi], eax ; ret
0x000002000048a766 : xchg dword ptr [rdi], edx ; ret 0x12
0x00000200005767be : xchg dword ptr [rdx + 0x5e], ecx ; push rdi ; add byte ptr [rcx + 3], cl ; iretd ; jmp rcx
0x00000200003a3438 : xchg dword ptr [rdx + 8], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000061a8ac : xchg dword ptr [rdx + rax*8], ecx ; mov eax, r9d ; ret
0x00000200001bf8f5 : xchg dword ptr [rdx - 0x1a], edi ; jmp qword ptr [rdx]
0x000002000014f74a : xchg dword ptr [rdx], eax ; ret
0x000002000051cc89 : xchg dword ptr [rdx], ebx ; add byte ptr [rax], al ; call 0x20000758eea
0x000002000009c5d7 : xchg dword ptr [rdx], ebx ; ret 0xe
0x000002000007aaa3 : xchg dword ptr [rdx], esp ; add dword ptr [rax], eax ; add byte ptr [rbp + 0x2b], al ; ret 0x2b41
0x000002000004b511 : xchg dword ptr [rdx], esp ; cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x00000200001c6022 : xchg dword ptr [rip + 0x1194d8], ecx ; ret
0x00000200001ba31f : xchg dword ptr [rip + 0x15fd9f], eax ; ret
0x0000020000542431 : xchg dword ptr [rip + 0x1b6d69], ecx ; ret
0x00000200001c0bde : xchg dword ptr [rip + 0x1bd4cc], ecx ; ret
0x000002000010c4d4 : xchg dword ptr [rip + 0x1c07ae], eax ; ret
0x0000020000113232 : xchg dword ptr [rip + 0x1cc110], ecx ; ret
0x000002000016f024 : xchg dword ptr [rip + 0x222fd6], ebx ; jmp 0x2000010b278
0x00000200006b071a : xchg dword ptr [rip + 0x2da1c], eax ; ret
0x0000020000542439 : xchg dword ptr [rip - 0x22908f], ecx ; ret
0x000002000076eb2b : xchg dword ptr [rip - 0x3fccffff], eax ; ret
0x00000200003f16ad : xchg dword ptr [rsi + 0x4d], ebp ; sbb byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000035579 : xchg dword ptr [rsi + rdi*8 - 0x74b60001], esi ; ret
0x00000200005d2052 : xchg dword ptr [rsi - 0x16], ecx ; cmc ; call rcx
0x0000020000086a10 : xchg dword ptr [rsi - 0x75000000], edi ; ret 0xe8c1
0x0000020000167f64 : xchg dword ptr [rsi], ebp ; ret 0xffed
0x00000200000488a5 : xchg dword ptr [rsi], ebx ; add bl, ch ; ret 0x8a80
0x00000200006ad7fa : xchg dword ptr [rsp + rdi*8], esi ; ret 0x4c1f
0x000002000001c534 : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000014980d : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdi ; ret
0x00000200003e2bf2 : xchg eax, ebp ; add byte ptr [rax], al ; add byte ptr [rbx - 0x748fdba4], cl ; ret
0x0000020000141455 : xchg eax, ebp ; add byte ptr [rax], al ; add cl, ch ; and cl, dl ; add byte ptr [rax], al ; ret
0x0000020000689825 : xchg eax, ebp ; add byte ptr [rax], al ; rol byte ptr [rbp - 0x77], 8 ; ret
0x00000200003a7938 : xchg eax, ebp ; add byte ptr [rsi - 0x3d], al ; and ecx, dword ptr [rax + 0x3b] ; ret 0x830f
0x0000020000434ff6 : xchg eax, ebp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x47], cl ; ret
0x00000200001058ff : xchg eax, ebp ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x20000051c00
0x00000200000094b2 : xchg eax, ebp ; add dword ptr [rax], eax ; add byte ptr [rdi + rcx + 0x20], al ; ret 0x8948
0x00000200000304f7 : xchg eax, ebp ; add dword ptr [rcx], ecx ; add byte ptr [rdi + rcx + 0x22], al ; ret
0x0000020000130dbf : xchg eax, ebp ; add eax, 0x1cadbc ; xor eax, eax ; ret
0x00000200000f8908 : xchg eax, ebp ; add eax, 0x20164a ; xor eax, eax ; ret
0x00000200007308fe : xchg eax, ebp ; and byte ptr [rip + 0x33480000], al ; ret 0xd233
0x00000200001c8cf1 : xchg eax, ebp ; and dword ptr [r11], r10d ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200000e8eba : xchg eax, ebp ; and ecx, dword ptr [rbx] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003d1731 : xchg eax, ebp ; clc ; add eax, dword ptr [rax] ; add byte ptr [rcx - 1], al ; ret
0x0000020000487da7 : xchg eax, ebp ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000200006bc22c : xchg eax, ebp ; dec dword ptr [rax - 0x7d] ; ret
0x000002000016057f : xchg eax, ebp ; in al, dx ; inc dword ptr [rbp - 0x75] ; ret 0x8b41
0x0000020000160558 : xchg eax, ebp ; in al, dx ; push rsi ; ret 0x741e
0x0000020000491d27 : xchg eax, ebp ; mov al, al ; push rsi ; ret
0x00000200004cb294 : xchg eax, ebp ; mov edx, 0x1d6348ff ; outsb dx, byte ptr [rsi] ; jmp rax
0x000002000072d97b : xchg eax, ebp ; nop ; add al, byte ptr [rax] ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200001a5421 : xchg eax, ebp ; or al, byte ptr [rax] ; mov qword ptr [rcx], rax ; ret
0x00000200003d1821 : xchg eax, ebp ; or byte ptr [rax + rax], al ; add byte ptr [rcx - 1], al ; ret
0x000002000056cff3 : xchg eax, ebp ; out -0x50, eax ; call rcx
0x000002000042c8c9 : xchg eax, ebp ; out 0x16, eax ; add byte ptr [rbp - 0x3f60f040], al ; ret
0x000002000051a9e7 : xchg eax, ebp ; pop rcx ; ret 0xebff
0x00000200007302e1 : xchg eax, ebp ; push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000069c6a7 : xchg eax, ebp ; push rdx ; ret
0x000002000002991c : xchg eax, ebp ; ret
0x0000020000020795 : xchg eax, ebp ; ret 0x10e9
0x0000020000080885 : xchg eax, ebp ; ret 0x1a8
0x00000200006491d9 : xchg eax, ebp ; ret 0x2b49
0x0000020000108039 : xchg eax, ebp ; ret 0x3345
0x00000200005f67f0 : xchg eax, ebp ; ret 0x3d80
0x000002000063c614 : xchg eax, ebp ; ret 0x3d83
0x00000200004ccca3 : xchg eax, ebp ; ret 0x3ee8
0x00000200001c5751 : xchg eax, ebp ; ret 0x44e8
0x00000200006086f1 : xchg eax, ebp ; ret 0x48ff
0x0000020000509c2d : xchg eax, ebp ; ret 0x4cff
0x0000020000132884 : xchg eax, ebp ; ret 0x5338
0x00000200005c29f9 : xchg eax, ebp ; ret 0x61e9
0x0000020000451538 : xchg eax, ebp ; ret 0x6483
0x00000200004792f7 : xchg eax, ebp ; ret 0x7ee8
0x00000200001cc704 : xchg eax, ebp ; ret 0x7f24
0x000002000017b068 : xchg eax, ebp ; ret 0x8341
0x0000020000474937 : xchg eax, ebp ; ret 0x8445
0x000002000009c830 : xchg eax, ebp ; ret 0x8548
0x00000200005cd83d : xchg eax, ebp ; ret 0x88e8
0x00000200001e23ed : xchg eax, ebp ; ret 0x8941
0x00000200001b3ac0 : xchg eax, ebp ; ret 0x8948
0x0000020000065f75 : xchg eax, ebp ; ret 0x8d4c
0x000002000058b7d8 : xchg eax, ebp ; ret 0x91e8
0x00000200003de1de : xchg eax, ebp ; ret 0x97e8
0x00000200001fbcbb : xchg eax, ebp ; ret 0x9ee8
0x000002000001723c : xchg eax, ebp ; ret 0xba0f
0x00000200006c80dd : xchg eax, ebp ; ret 0xc141
0x00000200001848fe : xchg eax, ebp ; ret 0xc280
0x00000200000229a8 : xchg eax, ebp ; ret 0xc3f6
0x00000200000328bd : xchg eax, ebp ; ret 0xc883
0x000002000052199c : xchg eax, ebp ; ret 0xc933
0x00000200000517e6 : xchg eax, ebp ; ret 0xcbe8
0x0000020000607a68 : xchg eax, ebp ; ret 0xccff
0x00000200006bb4d7 : xchg eax, ebp ; ret 0xcee8
0x0000020000676538 : xchg eax, ebp ; ret 0xd03b
0x0000020000471242 : xchg eax, ebp ; ret 0xd10b
0x0000020000622d45 : xchg eax, ebp ; ret 0xe8c1
0x00000200000207a5 : xchg eax, ebp ; ret 0xe9
0x00000200003f18a2 : xchg eax, ebp ; ret 0xe9c1
0x00000200000c0e19 : xchg eax, ebp ; ret 0xf41
0x0000020000520a3c : xchg eax, ebp ; ret 0xf5e8
0x000002000018624e : xchg eax, ebp ; ret 0xf640
0x00000200003e4de4 : xchg eax, ebp ; ret 0xf641
0x0000020000117b63 : xchg eax, ebp ; ret 0xf6e8
0x00000200005ff96b : xchg eax, ebp ; ret 0xf741
0x000002000000806a : xchg eax, ebp ; ret 0xfa2b
0x00000200006b51a2 : xchg eax, ebp ; ret 0xff
0x000002000003ce26 : xchg eax, ebp ; ret 0xff41
0x000002000075de0f : xchg eax, ebp ; ret 0xffb7
0x00000200005a7b8c : xchg eax, ebp ; rol al, 0xe0 ; add esi, dword ptr [rdx] ; ret
0x00000200001f0f0f : xchg eax, ebp ; rol bl, 0xf6 ; ret 0x7407
0x0000020000730531 : xchg eax, ebp ; rol byte ptr [rax + rax], 1 ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200003ca6d3 : xchg eax, ebp ; rol cl, 0xe0 ; adc dh, byte ptr [rbx] ; ret
0x00000200003b4a16 : xchg eax, ebp ; rol cl, 0xe0 ; add esi, dword ptr [rbx] ; ret 0xe083
0x00000200000851f8 : xchg eax, ebp ; rol dword ptr [rcx - 0x75], -0x3f ; add rsp, 0x28 ; ret
0x0000020000557f0d : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x20000557f78 ; ret
0x000002000063cd4b : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; jo 0x2000063cdb6 ; ret
0x0000020000556e38 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; pop r13 ; pop rbp ; ret
0x00000200005579b5 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x0000020000556eb1 : xchg eax, ebp ; ror byte ptr [rax - 0x7d], 0xc4 ; push rax ; pop rbp ; ret
0x000002000044e21b : xchg eax, ebp ; ror byte ptr [rcx - 0x75], 0xe3 ; pop rdi ; ret
0x0000020000557e11 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rbp ; ret
0x0000020000044998 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x20 ; pop rdi ; ret
0x000002000004e18e : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x0000020000153221 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x30 ; pop rbp ; ret
0x000002000000e69e : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x38 ; ret
0x0000020000557957 : xchg eax, ebp ; ror dword ptr [rbx - 0x3b7cb73f], 0x40 ; pop rbp ; ret
0x00000200004b8e07 : xchg eax, ebp ; sar bh, 0x8b ; ret
0x0000020000596355 : xchg eax, ebp ; sar edi, cl ; cmp al, 0 ; add byte ptr [rax], al ; ret
0x00000200000f6977 : xchg eax, ebp ; sbb eax, 0x8b410007 ; ret 0x8348
0x00000200006d7bf6 : xchg eax, ebp ; scasd eax, dword ptr [rdi] ; ret 0xff
0x00000200005f1677 : xchg eax, ebp ; stc ; ret
0x000002000052de37 : xchg eax, ebp ; sub eax, 0xb70fffb8 ; ret
0x0000020000512c47 : xchg eax, ebp ; xlatb ; ret 0x8bff
0x000002000072fee3 : xchg eax, ebp ; xor byte ptr [rax + rax], al ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x000002000047fd78 : xchg eax, ebx ; adc byte ptr [rip + 0x3b480000], dl ; ret 0x930f
0x00000200003e23fa : xchg eax, ebx ; adc byte ptr [rip - 0x74bc0000], al ; ret 0xb44
0x00000200000d5c23 : xchg eax, ebx ; adc ecx, dword ptr [rax + rax] ; add rsp, 0x38 ; ret
0x0000020000608bbb : xchg eax, ebx ; add al, 0 ; ror byte ptr [rdi], 0x85 ; ret
0x0000020000070826 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200000697b1 : xchg eax, ebx ; add eax, 0xb38a4000 ; ret 0
0x00000200000dcc6b : xchg eax, ebx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000072b89c : xchg eax, ebx ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret 0x3b4c
0x0000020000521a01 : xchg eax, ebx ; fbld dword ptr [rbx] ; add byte ptr [rax - 0x3ffffe77], bh ; ret
0x00000200003ae3e9 : xchg eax, ebx ; fdivr st(7) ; add rsp, 0x48 ; ret
0x00000200005dc471 : xchg eax, ebx ; lea eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000019e27b : xchg eax, ebx ; loopne 0x2000019e284 ; add byte ptr [rax], al ; call rax
0x000002000013e697 : xchg eax, ebx ; mov byte ptr [rip - 0x74b80000], al ; ret
0x000002000073150a : xchg eax, ebx ; mov byte ptr [rip - 0x74b80000], al ; ret 0x2eb
0x00000200007381c3 : xchg eax, ebx ; mov byte ptr [rip - 0x74b80000], al ; ret 0xc148
0x000002000017afbb : xchg eax, ebx ; out dx, al ; dec dword ptr [rax - 0x75] ; ret
0x00000200005fa079 : xchg eax, ebx ; outsd dx, dword ptr [rsi] ; ret
0x0000020000748575 : xchg eax, ebx ; pop rsp ; stc ; jmp rax
0x0000020000165090 : xchg eax, ebx ; push rsp ; in eax, dx ; jmp qword ptr [rcx]
0x000002000000731f : xchg eax, ebx ; ret
0x00000200000822cd : xchg eax, ebx ; ret 0x2244
0x00000200007565bd : xchg eax, ebx ; ret 0x44ff
0x00000200006089d1 : xchg eax, ebx ; ret 0x48ff
0x0000020000608994 : xchg eax, ebx ; ret 0x4cff
0x00000200005aa6a2 : xchg eax, ebx ; ret 0x75e9
0x00000200003f1820 : xchg eax, ebx ; ret 0x84ff
0x00000200004a1164 : xchg eax, ebx ; ret 0xf41
0x0000020000643b2a : xchg eax, ebx ; ror byte ptr [rax - 0x75], 0x5c ; and al, 8 ; ret
0x00000200001ea15a : xchg eax, ebx ; salc ; imul rax, rcx ; div r8 ; ret
0x00000200004b8fe8 : xchg eax, ebx ; sar bh, 0x8b ; ret
0x00000200004a01c9 : xchg eax, ebx ; test ecx, 0x1f2ee8ff ; ret 0x41ff
0x0000020000661b54 : xchg eax, ebx ; wait ; dec dword ptr [rax - 0x7d] ; ret
0x000002000047f041 : xchg eax, ebx ; xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x0000020000146816 : xchg eax, ebx ; xor al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x00000200001cb0e9 : xchg eax, ebx ; xor dh, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x000002000003c7a7 : xchg eax, ecx ; adc al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x00000200000529c5 : xchg eax, ecx ; adc byte ptr [rax], al ; mov qword ptr [r8], rcx ; ret
0x000002000057f967 : xchg eax, ecx ; add al, 0xc ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200001588ee : xchg eax, ecx ; add al, 0xeb ; dec dword ptr [rax + 3] ; ret 0x2bb
0x00000200003cb803 : xchg eax, ecx ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000198cf5 : xchg eax, ecx ; add byte ptr [rax + rax], al ; add byte ptr [rcx - 0x7f], cl ; ret 0xb98
0x00000200004084e3 : xchg eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret 0x820f
0x000002000052d283 : xchg eax, ecx ; add dword ptr [rax], eax ; mov rcx, rbx ; call 0x2000014f189
0x00000200006b7238 : xchg eax, ecx ; add rax, r9 ; ret
0x0000020000410c57 : xchg eax, ecx ; call qword ptr [rsi]
0x0000020000779b28 : xchg eax, ecx ; cmp al, 0xfe ; dec dword ptr [rax - 0x75] ; ret
0x00000200000f8d1b : xchg eax, ecx ; cmp eax, 0x8b480020 ; ret
0x000002000040f62b : xchg eax, ecx ; enter 1, 0 ; ret
0x000002000041b556 : xchg eax, ecx ; fadd dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x000002000015fa76 : xchg eax, ecx ; in al, dx ; dec dword ptr [rax - 0x75] ; ret 0x854d
0x0000020000148e65 : xchg eax, ecx ; jmp r9
0x00000200000c1937 : xchg eax, ecx ; js 0x200000c1958 ; add byte ptr [rax], al ; jne 0x200000c194a ; mov al, 1 ; ret
0x000002000011fe7a : xchg eax, ecx ; js 0x2000011fe88 ; add byte ptr [rax], al ; ret
0x00000200003f4b01 : xchg eax, ecx ; lea rbx, qword ptr [rax - 0x10] ; jmp 0x200003f4ad1
0x0000020000125794 : xchg eax, ecx ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x0000020000125771 : xchg eax, ecx ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0x7402
0x00000200003ea79c : xchg eax, ecx ; loopne 0x200003ea7a6 ; add byte ptr [rax], al ; ret
0x00000200007332d0 : xchg eax, ecx ; mov byte ptr [rip + 0x3b4d0000], al ; ret 0xc73
0x000002000002537d : xchg eax, ecx ; mov dword ptr [rdx], eax ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000200005df137 : xchg eax, ecx ; nop ; add byte ptr [rax], al ; add dh, dh ; ret 0xf02
0x000002000041ee66 : xchg eax, ecx ; or byte ptr [rbx], cl ; add byte ptr [rax], al ; ret
0x0000020000030f13 : xchg eax, ecx ; out 0x34, al ; add byte ptr [rax - 0x75], cl ; add al, 0xc1 ; ret
0x00000200001291f1 : xchg eax, ecx ; pop rsp ; add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0x8189
0x00000200006aa631 : xchg eax, ecx ; push 0 ; ret 0x6a93
0x00000200006aa62d : xchg eax, ecx ; push 0 ; xchg eax, esi ; xchg eax, ecx ; push 0 ; ret 0x6a93
0x00000200000d0df6 : xchg eax, ecx ; ret
0x00000200004b40d6 : xchg eax, ecx ; ret 0x10
0x0000020000509fe1 : xchg eax, ecx ; ret 0x48ff
0x000002000050f2eb : xchg eax, ecx ; ret 0x4cff
0x0000020000665a4b : xchg eax, ecx ; ret 0xffbc
0x000002000061cbef : xchg eax, ecx ; ret 0xffdc
0x00000200005965af : xchg eax, ecx ; ret 0xfff7
0x0000020000740b6a : xchg eax, ecx ; rol byte ptr [rax], 0 ; add byte ptr [rcx], dh ; adc dword ptr [rax - 0x75], ecx ; ret 0x8b48
0x0000020000500270 : xchg eax, ecx ; ror byte ptr [rax], cl ; add byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x00000200004b9215 : xchg eax, ecx ; sar bh, 0x8b ; ret
0x00000200005462c4 : xchg eax, ecx ; sar bh, 0xcc ; mov eax, 0x1c ; ret
0x0000020000064af9 : xchg eax, ecx ; sbb byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000200001141d0 : xchg eax, ecx ; xor al, 4 ; add byte ptr [rax], al ; sete al ; ret
0x000002000062519b : xchg eax, ecx ; xor byte ptr [rsi], al ; add byte ptr [rax], al ; jbe 0x20000625191 ; xor eax, eax ; ret
0x000002000059c4f1 : xchg eax, edi ; adc eax, 0x8b440000 ; ret
0x0000020000024850 : xchg eax, edi ; adc eax, dword ptr [rax] ; ret
0x0000020000411145 : xchg eax, edi ; add al, byte ptr [rax] ; add bh, bh ; ret 0xfa83
0x000002000058bab8 : xchg eax, edi ; add al, byte ptr [rax] ; shr cl, 0xf2 ; ret
0x00000200000d62fa : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x0000020000407c73 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200001e2305 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbp - 0x76], al ; ret
0x00000200005066b2 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xeb03
0x0000020000141495 : xchg eax, edi ; add byte ptr [rax], al ; add cl, ch ; loop 0x2000014146e ; add byte ptr [rax], al ; ret
0x00000200005642fa : xchg eax, edi ; add byte ptr [rdi], al ; add byte ptr [rax], al ; call 0x200001c05e7
0x000002000022d7c1 : xchg eax, edi ; add byte ptr [rsi], 0 ; add byte ptr [rbp - 0x75], cl ; ret
0x0000020000143495 : xchg eax, edi ; add dword ptr [rax], eax ; add cl, ch ; loop 0x2000014344e ; add byte ptr [rax], al ; ret
0x0000020000187e5f : xchg eax, edi ; and ecx, esi ; dec dword ptr [rax - 0x75] ; ret 0x2b49
0x000002000051cc78 : xchg eax, edi ; call 0x20000140384
0x000002000052f1eb : xchg eax, edi ; call 0x20000140388
0x0000020000512c45 : xchg eax, edi ; call 0x200001403e4
0x0000020000608991 : xchg eax, edi ; call 0x20000231ce4
0x0000020000438a4b : xchg eax, edi ; call qword ptr [rax]
0x00000200000b6ee5 : xchg eax, edi ; clc ; cmc ; dec dword ptr [rax - 0x75] ; adc esi, esi ; ret 0x7401
0x00000200001733af : xchg eax, edi ; cli ; dec dword ptr [rax - 0x7d] ; ret 0xf4e
0x00000200001c3ae5 : xchg eax, edi ; cmp dh, ah ; inc dword ptr [rdi + rcx + 0x22] ; ret
0x00000200004b85b8 : xchg eax, edi ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4410
0x00000200004b8649 : xchg eax, edi ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x00000200006ba8b0 : xchg eax, edi ; dec dword ptr [rax - 0x75] ; ret
0x0000020000750555 : xchg eax, edi ; dec dword ptr [rbp + rcx*4 + 0xd] ; jp 0x20000750551 ; ret 0x45ff
0x00000200004a1022 : xchg eax, edi ; in eax, -1 ; xor edx, edx ; call 0x200000c2848
0x0000020000157865 : xchg eax, edi ; jmp 0x20000004b2d
0x000002000015b644 : xchg eax, edi ; jmp 0x2000015b64a
0x00000200005d76a5 : xchg eax, edi ; jp 0x200005d76a4 ; dec dword ptr [rax - 1] ; ret 0x8349
0x0000020000528cc4 : xchg eax, edi ; lea r8d, dword ptr [rdx + 0x50] ; call 0x2000014f4c8
0x000002000022f255 : xchg eax, edi ; mov byte ptr [rip + 0x3b4d0000], al ; ret
0x0000020000735102 : xchg eax, edi ; mov byte ptr [rip + 0x3b4d0000], al ; ret 0xc73
0x000002000022ef0a : xchg eax, edi ; mov byte ptr [rip - 0x74b80000], al ; ret 0x2eb
0x0000020000738356 : xchg eax, edi ; mov byte ptr [rip - 0x74b80000], al ; ret 0xc148
0x0000020000661bf4 : xchg eax, edi ; mov dword ptr [rsi + rdx*4], eax ; inc edx ; jmp 0x20000661bee
0x00000200006030bd : xchg eax, edi ; mov ebx, 0xc48348ff ; pop rbx ; ret
0x00000200003c9545 : xchg eax, edi ; or al, 0 ; add rsp, 0x38 ; ret
0x0000020000525dfb : xchg eax, edi ; or al, byte ptr [rax] ; xor al, al ; ret
0x000002000073dd15 : xchg eax, edi ; or byte ptr [rip + 0xb480000], al ; ret 0x8d48
0x000002000059c4c5 : xchg eax, edi ; pop rax ; adc eax, 0x8b440000 ; ret
0x0000020000189d6d : xchg eax, edi ; push -0x9ffffff ; ret 0x7501
0x000002000004d42b : xchg eax, edi ; ret
0x00000200000d3a2e : xchg eax, edi ; ret 0
0x000002000045b793 : xchg eax, edi ; ret 0x14
0x0000020000087c95 : xchg eax, edi ; ret 0x1539
0x00000200005aa6da : xchg eax, edi ; ret 0x3de9
0x00000200006da1ca : xchg eax, edi ; ret 0x40ff
0x0000020000475cf5 : xchg eax, edi ; ret 0x48ff
0x00000200004c1909 : xchg eax, edi ; ret 0x89ff
0x000002000059bba3 : xchg eax, edi ; ret 0x90ff
0x00000200000ec34c : xchg eax, edi ; ret 0xc28a
0x00000200006d93b9 : xchg eax, edi ; ret 0xe8ff
0x0000020000755a41 : xchg eax, edi ; ret 0xff
0x0000020000501fdd : xchg eax, edi ; ret 8
0x0000020000182dc5 : xchg eax, edi ; salc ; adc al, 0 ; call 0x200000deff6
0x00000200004b8c3c : xchg eax, edi ; sar bh, 0x8b ; ret
0x000002000013800f : xchg eax, edi ; sbb dword ptr [rax], eax ; and dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000200000348c9 : xchg eax, edi ; xor al, 0 ; add byte ptr [rax - 0x39], cl ; ret
0x000002000048f276 : xchg eax, edx ; adc al, byte ptr [rax] ; call 0x200000bccaa
0x00000200000f7079 : xchg eax, edx ; adc byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rbx + 0x30], eax ; jmp 0x200000f704f
0x000002000004a3af : xchg eax, edx ; add byte ptr [rax], 0 ; add byte ptr [rdi + rcx - 0x4a], al ; ret 0x8341
0x0000020000497b8b : xchg eax, edx ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200007612a0 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rbx], ch ; ret
0x00000200003a6448 : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7b], cl ; ret 0xb74
0x0000020000090c1d : xchg eax, edx ; add byte ptr [rax], al ; add byte ptr [rcx - 0x9afdbb4], cl ; ret
0x00000200004679d5 : xchg eax, edx ; add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0f116], al ; ret
0x00000200006a35c2 : xchg eax, edx ; call qword ptr [rdx]
0x00000200001ce16a : xchg eax, edx ; cmp ebp, esi ; dec dword ptr [rax - 1] ; ret
0x00000200000e267c : xchg eax, edx ; cwde ; add byte ptr [rax], al ; add byte ptr [rbp + 1], dh ; ret
0x00000200004a14dd : xchg eax, edx ; in eax, -1 ; call 0x2000004eb09
0x000002000018a7f3 : xchg eax, edx ; int1 ; push rsi ; ret 0x7401
0x0000020000546247 : xchg eax, edx ; jrcxz 0x2000054624f ; mov dword ptr [rcx + 0x1c], eax ; ret
0x0000020000694332 : xchg eax, edx ; lea r8, qword ptr [rax + rcx*4] ; mov eax, edi ; sub eax, edx ; jmp 0x2000069434a
0x00000200007517e5 : xchg eax, edx ; mov al, 1 ; ret
0x00000200003b8f4f : xchg eax, edx ; or al, 0 ; jmp 0x200003b8f1a
0x000002000006b5f9 : xchg eax, edx ; or eax, 0xb60f0011 ; ret 0xfe24
0x00000200005f727a : xchg eax, edx ; popfq ; ret
0x0000020000029aec : xchg eax, edx ; push 0x13 ; add byte ptr [rbp - 0x74b68b01], al ; ret
0x00000200000d1c83 : xchg eax, edx ; ret
0x0000020000467b06 : xchg eax, edx ; ret 0x11e9
0x0000020000021551 : xchg eax, edx ; ret 0x13
0x000002000044608e : xchg eax, edx ; ret 0x15
0x00000200000ff8a0 : xchg eax, edx ; ret 0x3345
0x0000020000755022 : xchg eax, edx ; ret 0x48ff
0x000002000049daaa : xchg eax, edx ; ret 0x4cff
0x0000020000525e85 : xchg eax, edx ; ret 0x4dff
0x000002000050ad35 : xchg eax, edx ; ret 0x85ff
0x00000200005b8985 : xchg eax, edx ; ret 0x90ff
0x00000200004beebb : xchg eax, edx ; ret 0xe9ff
0x000002000002a04c : xchg eax, edx ; ret 0xf48
0x000002000009728b : xchg eax, edx ; ret 0xf49
0x0000020000188ff9 : xchg eax, edx ; ret 0xf640
0x00000200000ff86a : xchg eax, edx ; ret 0xf7e8
0x0000020000607d42 : xchg eax, edx ; ret 0xf7ff
0x0000020000746cba : xchg eax, edx ; ret 0xff95
0x0000020000614d7a : xchg eax, edx ; ret 0xffc1
0x0000020000778399 : xchg eax, edx ; ret 0xfffd
0x0000020000501c02 : xchg eax, edx ; ret 8
0x00000200000b322a : xchg eax, edx ; ret 9
0x000002000044d07b : xchg eax, edx ; rol byte ptr [rax], 1 ; add byte ptr [rax], al ; sub r8, r10 ; jmp 0x2000044d00e
0x000002000021de18 : xchg eax, edx ; rol byte ptr [rcx - 0x75], 0xc0 ; ret
0x0000020000063077 : xchg eax, edx ; rol dword ptr [rax + 0x77501f9], -1 ; ret
0x0000020000529f09 : xchg eax, edx ; sar bh, 0x48 ; add esp, 0x68 ; ret
0x00000200004b914f : xchg eax, edx ; sar bh, 0x8b ; ret
0x000002000014f642 : xchg eax, edx ; sbb eax, dword ptr ss:[rax] ; ret
0x0000020000595829 : xchg eax, edx ; stosd dword ptr [rdi], eax ; dec dword ptr [rcx - 0x75] ; iretd ; call 0x200000c1b38
0x0000020000035912 : xchg eax, edx ; wait ; xor al, 0 ; call rax
0x00000200004beeba : xchg eax, edx ; xchg eax, edx ; ret 0xe9ff
0x000002000001f08a : xchg eax, edx ; xchg eax, esi ; sub eax, dword ptr [rax] ; ret
0x00000200000644ee : xchg eax, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x00000200000f70f6 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; ret
0x0000020000141475 : xchg eax, esi ; add byte ptr [rax], al ; add cl, ch ; add cl, dl ; add byte ptr [rax], al ; ret
0x000002000014f6e6 : xchg eax, esi ; add byte ptr [rax], al ; sal byte ptr [rbx], 0xc0 ; ret
0x00000200004921c6 : xchg eax, esi ; cld ; ret 0xe9ff
0x000002000063ab50 : xchg eax, esi ; cwde ; add byte ptr [rax + 0x3b], cl ; ret 0x1076
0x0000020000417b1a : xchg eax, esi ; cwde ; add byte ptr [rax + 0x3b], cl ; ret 0xf48
0x000002000075d925 : xchg eax, esi ; cwde ; add byte ptr [rbp + rcx*4 + 5], cl ; sub dword ptr [rbx], ebx ; ret 0x48ff
0x000002000016e63a : xchg eax, esi ; cwde ; add byte ptr [rcx + 3], cl ; xor byte ptr [rax + 0x3b], cl ; ret
0x00000200002268c3 : xchg eax, esi ; cwde ; add eax, 0x8b4d0000 ; ret
0x00000200006bfec0 : xchg eax, esi ; dec dword ptr [rax - 0x75] ; ret
0x0000020000758b46 : xchg eax, esi ; dec dword ptr [rbp + rcx*4 + 0xd] ; jns 0x20000758bbc ; ret 0x45ff
0x0000020000757619 : xchg eax, esi ; dec dword ptr [rbp + rcx*4 + 0xd] ; mov dh, 0x81 ; ret 0x45ff
0x0000020000758a68 : xchg eax, esi ; dec dword ptr [rbp + rcx*4 + 0xd] ; pop rdi ; pop rax ; ret 0x45ff
0x00000200001b9b07 : xchg eax, esi ; idiv edi ; add rsp, 0x68 ; ret
0x00000200001b9a9c : xchg eax, esi ; idiv edi ; add rsp, 0x70 ; pop rbp ; ret
0x00000200003d7972 : xchg eax, esi ; in eax, -1 ; add rsp, 0x28 ; ret
0x00000200004a10b1 : xchg eax, esi ; in eax, -1 ; call 0x200000c1b36
0x0000020000781e72 : xchg eax, esi ; inc dword ptr [rdi + rcx + 0x20] ; ret
0x0000020000661bf7 : xchg eax, esi ; inc edx ; jmp 0x20000661beb
0x00000200003f92c2 : xchg eax, esi ; jle 0x200003f92f4 ; add byte ptr [rbx], dh ; rol byte ptr [rcx - 0x75], cl ; ret 0xf741
0x00000200004c81f9 : xchg eax, esi ; jmp 0x200004c81c1
0x000002000008c845 : xchg eax, esi ; lea rcx, qword ptr [rsp + 0x40] ; call rax
0x00000200004b7626 : xchg eax, esi ; lodsd eax, dword ptr [rsi] ; sar bh, 0x8b ; ret
0x000002000022b0a0 : xchg eax, esi ; mov byte ptr [rip + 0x3b4d0000], al ; ret
0x000002000022947d : xchg eax, esi ; mov byte ptr [rip - 0x74b80000], al ; ret 0x2eb
0x00000200001b2c22 : xchg eax, esi ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000022c263 : xchg eax, esi ; or byte ptr [rip + 0xb480000], al ; ret 0x8d4c
0x0000020000210a81 : xchg eax, esi ; out -1, eax ; add rsp, 0x38 ; ret
0x00000200004756a6 : xchg eax, esi ; pop rbp ; ret 0x48ff
0x00000200006a9ee2 : xchg eax, esi ; push 0 ; add rcx, rdx ; jmp rcx
0x000002000069f6f8 : xchg eax, esi ; push 0x71 ; or cl, byte ptr [rbx] ; mov ch, 0x49 ; ret
0x00000200000cd541 : xchg eax, esi ; ret
0x0000020000593cd6 : xchg eax, esi ; ret 0x33ff
0x0000020000755b90 : xchg eax, esi ; ret 0x44ff
0x00000200004991cb : xchg eax, esi ; ret 0x48ff
0x000002000050599a : xchg eax, esi ; ret 0x4d89
0x0000020000756c64 : xchg eax, esi ; ret 0x8bff
0x00000200005aa67e : xchg eax, esi ; ret 0x99e9
0x00000200006b50e0 : xchg eax, esi ; ret 0xff
0x0000020000487b26 : xchg eax, esi ; ret 0xfffb
0x00000200004d30d6 : xchg eax, esi ; salc ; push qword ptr [rbx] ; shr al, cl ; ret
0x00000200004b8d0a : xchg eax, esi ; sar bh, 0x8b ; ret
0x000002000014f63a : xchg eax, esi ; sbb eax, dword ptr ss:[rax] ; ret
0x000002000060c6e6 : xchg eax, esi ; scasb al, byte ptr [rdi] ; ret 0x48ff
0x000002000063525a : xchg eax, esi ; stosd dword ptr [rdi], eax ; dec dword ptr [rax - 0x7d] ; ret
0x00000200001a917f : xchg eax, esi ; sub dword ptr [rax], eax ; xor eax, eax ; add rsp, 0x28 ; ret
0x000002000001f08b : xchg eax, esi ; sub eax, dword ptr [rax] ; ret
0x0000020000227c0d : xchg eax, esi ; test byte ptr [rip - 0x74b70000], al ; ret
0x000002000072c956 : xchg eax, esi ; test byte ptr [rip - 0x74b80000], al ; ret
0x00000200002269cd : xchg eax, esi ; test byte ptr [rip - 0x74b80000], al ; ret 0x8b48
0x00000200000260ac : xchg eax, esi ; xchg dword ptr [rbx], edx ; add byte ptr [rax - 0x75], cl ; ret
0x00000200006aa630 : xchg eax, esi ; xchg eax, ecx ; push 0 ; ret 0x6a93
0x000002000001fcc2 : xchg eax, esp ; adc al, byte ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200001c6025 : xchg eax, esp ; adc dword ptr [rax], eax ; ret
0x00000200000c6c55 : xchg eax, esp ; add al, byte ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x8b ; ret
0x00000200002087f5 : xchg eax, esp ; add byte ptr [rax], al ; add al, ch ; ret 0xf46c
0x00000200005b287e : xchg eax, esp ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffc
0x0000020000495dd0 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200004a7f73 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rbx - 0x7a2f083f], cl ; ret 0x870f
0x000002000047f042 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xe883
0x0000020000143435 : xchg eax, esp ; add dword ptr [rax], eax ; add cl, ch ; stosb byte ptr [rdi], al ; add byte ptr [rax], al ; ret
0x0000020000636958 : xchg eax, esp ; add eax, 0x3b48ffc0 ; ret 0x1875
0x00000200000e7986 : xchg eax, esp ; add eax, 0x41c60009 ; xor byte ptr [rcx], al ; ret
0x0000020000684099 : xchg eax, esp ; add eax, dword ptr [rax] ; add byte ptr [rdx - 0x9afdba4], cl ; ret
0x00000200003f900a : xchg eax, esp ; and al, 0x10 ; add dword ptr [rax], eax ; add byte ptr [rcx - 9], al ; ret 0xfff
0x000002000048ff75 : xchg eax, esp ; and al, 0x20 ; add dword ptr [rax], eax ; add al, ch ; add byte ptr [rdx], dh ; ret
0x000002000016683a : xchg eax, esp ; and al, 0x26 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x00000200001684b8 : xchg eax, esp ; and al, 0x44 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x000002000015707e : xchg eax, esp ; and al, 0x52 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x00000200005b2cfe : xchg eax, esp ; and al, 0x6c ; add dword ptr [rax], eax ; add bh, dh ; ret 0xfffe
0x000002000046d046 : xchg eax, esp ; and al, 0x78 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7f], cl ; ret 0xfb30
0x00000200003d0175 : xchg eax, esp ; and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret 0x9489
0x00000200000f2ce3 : xchg eax, esp ; and al, 0x82 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x894c
0x00000200006238fa : xchg eax, esp ; and al, 0x84 ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffe
0x0000020000180261 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b49
0x000002000045ca50 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0xc148
0x000002000007b222 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000002000044c65c : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rbx], bh ; ret 0x8f0f
0x00000200003e32cd : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x76], al ; ret 0x4488
0x0000020000215ef4 : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x6349
0x00000200000dbb0e : xchg eax, esp ; and al, 0x88 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200001653ca : xchg eax, esp ; and al, 0x8f ; add byte ptr [rax], al ; add byte ptr [rax - 0x2d], cl ; ret 0x8b48
0x00000200000f9c3a : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200000ed8bf : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret
0x000002000010a100 : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8348
0x0000020000076bfa : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b48
0x0000020000109fa2 : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0xe0e8
0x0000020000167bce : xchg eax, esp ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 1], al ; ret 0x8349
0x00000200005b287c : xchg eax, esp ; and al, 0x94 ; add byte ptr [rax], al ; add bh, dh ; ret 0xfffc
0x00000200001009e6 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000200003cfb35 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x00000200003994b6 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret
0x00000200001a15e7 : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000002000062d64e : xchg eax, esp ; and al, 0x98 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7502
0x0000020000490048 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add bh, dh ; ret 0x3fc
0x000002000066eb61 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4906
0x0000020000198114 : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], al ; ret 0x894c
0x00000200003b614d : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000200000cee12 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x7c80
0x000002000003de4a : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4824
0x000002000003de75 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000002000003de92 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4838
0x000002000003deaf : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4840
0x000002000003decf : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4870
0x000002000003deef : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4878
0x00000200003c6b24 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx + 0x3c], cl ; ret 0x8b44
0x0000020000208ef5 : xchg eax, esp ; and al, 0xa8 ; add byte ptr [rax], al ; add dh, dh ; ret 0x7403
0x000002000006d6b9 : xchg eax, esp ; and al, 0xac ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0xc22b
0x00000200003eef8d : xchg eax, esp ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax + 3], cl ; ret
0x0000020000493339 : xchg eax, esp ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp - 0x75], cl ; ret 0x8b49
0x0000020000497264 : xchg eax, esp ; and al, 0xb8 ; add byte ptr [rax], al ; add al, ch ; rcr dword ptr [rcx], 1 ; ret 0xf7ff
0x0000020000648978 : xchg eax, esp ; and al, 0xb8 ; add byte ptr [rax], al ; add bh, bh ; ret 0xcbe8
0x00000200005242a7 : xchg eax, esp ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000020000063372 : xchg eax, esp ; and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x00000200003f3381 : xchg eax, esp ; and al, 0xc8 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], al ; ret 0x3948
0x0000020000649080 : xchg eax, esp ; and al, 0xd8 ; add byte ptr [rax], al ; add bh, bh ; ret 0xc3e8
0x00000200004ab9d0 : xchg eax, esp ; and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret 0x2b48
0x000002000007c0b8 : xchg eax, esp ; and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rcx - 9], al ; ret 0
0x0000020000232262 : xchg eax, esp ; and al, 0xf8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xff10
0x000002000013ec64 : xchg eax, esp ; and byte ptr [rax - 1], cl ; ret 0x4c89
0x00000200003a00a0 : xchg eax, esp ; cmp dword ptr [rax], eax ; add rcx, rdx ; jmp rcx
0x0000020000437828 : xchg eax, esp ; cwde ; ret
0x000002000077530c : xchg eax, esp ; dec dword ptr [rax - 0x75] ; ret
0x000002000052b65c : xchg eax, esp ; enter -0x26, -0x18 ; pop rbx ; ret 0x48ff
0x000002000059d64e : xchg eax, esp ; jmp 0x1ffc3e52358
0x000002000075a1dc : xchg eax, esp ; mov edx, 0x1d8948ff ; ret 0xba95
0x00000200004834ba : xchg eax, esp ; or eax, dword ptr [rax] ; add byte ptr [rbx], bh ; ret
0x0000020000013d4e : xchg eax, esp ; ret
0x00000200005dcd78 : xchg eax, esp ; ret 0x11
0x00000200004ddae2 : xchg eax, esp ; ret 0x1188
0x00000200006bc19b : xchg eax, esp ; ret 0x12e8
0x00000200005978c6 : xchg eax, esp ; ret 0x1389
0x0000020000619308 : xchg eax, esp ; ret 0x1440
0x0000020000467a1c : xchg eax, esp ; ret 0x1789
0x000002000007e18e : xchg eax, esp ; ret 0x1a8
0x00000200002330f7 : xchg eax, esp ; ret 0x2780
0x00000200004e7fdd : xchg eax, esp ; ret 0x2a8
0x00000200003b9046 : xchg eax, esp ; ret 0x3345
0x000002000051855d : xchg eax, esp ; ret 0x349
0x0000020000074e27 : xchg eax, esp ; ret 0x42e8
0x0000020000525d40 : xchg eax, esp ; ret 0x48ff
0x00000200000ea7d3 : xchg eax, esp ; ret 0x4a8
0x0000020000417bc6 : xchg eax, esp ; ret 0x5be8
0x0000020000779ef3 : xchg eax, esp ; ret 0x6020
0x0000020000215efb : xchg eax, esp ; ret 0x6349
0x00000200001d7b3b : xchg eax, esp ; ret 0x8444
0x0000020000114900 : xchg eax, esp ; ret 0x8844
0x000002000042817d : xchg eax, esp ; ret 0x8948
0x000002000020ca6c : xchg eax, esp ; ret 0x8a41
0x0000020000215a52 : xchg eax, esp ; ret 0x8b41
0x0000020000642988 : xchg eax, esp ; ret 0x8b48
0x0000020000675fe0 : xchg eax, esp ; ret 0x8b49
0x000002000042ea16 : xchg eax, esp ; ret 0x8d48
0x000002000005deb3 : xchg eax, esp ; ret 0x8d49
0x00000200004355d1 : xchg eax, esp ; ret 0x8d4c
0x00000200005b877b : xchg eax, esp ; ret 0x90ff
0x0000020000074d73 : xchg eax, esp ; ret 0x92e8
0x000002000069be84 : xchg eax, esp ; ret 0x9489
0x000002000077b39e : xchg eax, esp ; ret 0x97e9
0x0000020000501a83 : xchg eax, esp ; ret 0xaee8
0x00000200001779f4 : xchg eax, esp ; ret 0xb60f
0x0000020000206b9c : xchg eax, esp ; ret 0xba0f
0x00000200004cadcd : xchg eax, esp ; ret 0xc084
0x00000200001bfbf5 : xchg eax, esp ; ret 0xc28b
0x0000020000587b1c : xchg eax, esp ; ret 0xc2ff
0x000002000058e637 : xchg eax, esp ; ret 0xc933
0x00000200001c0587 : xchg eax, esp ; ret 0xc985
0x0000020000584d4e : xchg eax, esp ; ret 0xd202
0x00000200001bd6c2 : xchg eax, esp ; ret 0xdfeb
0x00000200005b0152 : xchg eax, esp ; ret 0xe3e8
0x00000200005b1e5d : xchg eax, esp ; ret 0xe5a8
0x00000200004beed7 : xchg eax, esp ; ret 0xe9ff
0x00000200003cedca : xchg eax, esp ; ret 0xf41
0x00000200000468de : xchg eax, esp ; ret 0xf641
0x0000020000496fd7 : xchg eax, esp ; ret 0xf66
0x00000200000b2fd0 : xchg eax, esp ; ret 0xf749
0x00000200006d96cb : xchg eax, esp ; ret 0xff
0x00000200006c355c : xchg eax, esp ; ret 0xff33
0x00000200005d3f48 : xchg eax, esp ; ret 0xffb6
0x00000200004365a8 : xchg eax, esp ; ret 0xffc8
0x000002000010264e : xchg eax, esp ; rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000020000779e02 : xchg eax, esp ; rol byte ptr [rax + 0x14], 0x39 ; add al, ch ; ret
0x00000200004a0ab8 : xchg eax, esp ; rol byte ptr [rcx - 0x78], 0 ; movzx eax, r10b ; ret
0x0000020000530513 : xchg eax, esp ; rol dword ptr [rcx - 0x75], -0x3f ; ret
0x00000200004f4408 : xchg eax, esp ; rol esp, -1 ; add rsp, 0x28 ; ret
0x0000020000015e8a : xchg eax, esp ; ror byte ptr [rax - 0x2d], 0xe8 ; and rax, r8 ; ret
0x00000200001e1a70 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rbp ; ret
0x00000200001a5f92 : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; xor byte ptr [rcx + 0x5e], al ; ret
0x0000020000034f30 : xchg eax, esp ; ror dword ptr [rbx - 0x3b7cb73f], 0x28 ; ret
0x00000200004b6765 : xchg eax, esp ; ror dword ptr [rdi], -0x4a ; ret
0x00000200006b4950 : xchg eax, esp ; sahf ; ret 0x76ff
0x00000200006b4948 : xchg eax, esp ; sahf ; ret 0xffff
0x00000200006b403c : xchg eax, esp ; sal esi, 5 ; pop rbx ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret 0x1ff
0x00000200004b8ee9 : xchg eax, esp ; sar bh, 0x8b ; ret
0x0000020000074e1f : xchg eax, esp ; shl byte ptr [rsi + 0x44], 0x39 ; adc cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x42e8
0x00000200005a2200 : xchg eax, esp ; stc ; ret
0x0000020000416eb0 : xchg eax, esp ; sub ebp, dword ptr [rsi] ; add al, ch ; ret
0x00000200004e6c41 : xchg eax, r10d ; ret
0x0000020000512c44 : xchg eax, r15d ; call 0x200001403e5
0x00000200005f78c9 : xchg eax, r15d ; ret
0x000002000060b5e1 : xchg eax, r8d ; call 0x20000231ce5
0x00000200003b682e : xchg ebp, eax ; dec dword ptr [rax - 0x75] ; ret
0x00000200005045f5 : xchg ebx, ebp ; ret 0x4cff
0x00000200003eea6a : xchg ebx, ecx ; jb 0x200003eea8d ; add byte ptr [rax - 0x75], cl ; ret
0x000002000059eae7 : xchg ebx, edx ; jmp 0x1ffc3e52cf3
0x00000200003b7153 : xchg ecx, edi ; jge 0x200003b7178 ; add byte ptr [rbp + 0x3b], al ; ret 0x870f
0x00000200006a8c85 : xchg ecx, edi ; ret
0x000002000018a256 : xchg ecx, esi ; dec dword ptr [rcx - 0x75] ; ret
0x000002000019d7f7 : xchg edi, ebp ; clc ; dec dword ptr [rax - 9] ; ret
0x00000200004b0618 : xchg edi, ebp ; mov bh, 0xa ; add byte ptr [rcx - 0x7d], al ; ret 0xebe0
0x00000200000923d6 : xchg edi, ecx ; add byte ptr [rax], al ; add byte ptr [rsi - 1], ah ; ret 0x4166
0x0000020000579bd1 : xchg edi, ecx ; ret 0x48ff
0x000002000042b49b : xchg edx, eax ; dec dword ptr [rax - 0x75] ; ret
0x0000020000450f72 : xchg edx, ecx ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000200000ad586 : xchg edx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000020000446084 : xchg esi, eax ; ret 0x15
0x00000200000d1c7d : xchg esi, ebp ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, edx ; ret
0x0000020000501f79 : xchg esi, edx ; ret
0x00000200001a134c : xchg esi, esp ; add dword ptr [rax], eax ; add bl, ch ; ret
0x00000200004922ef : xchg esp, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0x2b], cl ; ret 0x3b48
0x00000200003c71e5 : xchg esp, esi ; mov esi, 0x8b480019 ; ret 0xc148
0x0000020000665131 : xchg qword ptr [r9], rcx ; mov qword ptr [rdx], rax ; mov rax, rcx ; ret
0x000002000051b86e : xchg qword ptr [rax + rcx*8 + 0x50], r8 ; mov eax, r9d ; ret
0x000002000040f629 : xchg qword ptr [rcx + 0x1c8], rdx ; ret
0x0000020000042495 : xchg qword ptr [rcx], rax ; ret
0x00000200003a3437 : xchg qword ptr [rdx + 8], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000002000061a8ab : xchg qword ptr [rdx + r8*8], rcx ; mov eax, r9d ; ret
0x00000200001c6021 : xchg qword ptr [rip + 0x1194d8], rcx ; ret
0x0000020000542430 : xchg qword ptr [rip + 0x1b6d69], rcx ; ret
0x00000200001c0bdd : xchg qword ptr [rip + 0x1bd4cc], rcx ; ret
0x000002000010c4d3 : xchg qword ptr [rip + 0x1c07ae], rax ; ret
0x0000020000542438 : xchg qword ptr [rip - 0x22908f], rcx ; ret
0x0000020000613c01 : xchg r11b, r13b ; dec dword ptr [rax - 0x75] ; iretd ; call 0x200003dfeb1
0x0000020000103fb6 : xchg r8, r13 ; ret
0x00000200003f2a03 : xchg rax, r10 ; ret
0x0000020000608993 : xchg rax, r11 ; ret 0x4cff
0x000002000051cc77 : xchg rax, r15 ; call 0x20000140385
0x000002000052f1ea : xchg rax, r15 ; call 0x20000140389
0x0000020000438a4a : xchg rax, r15 ; call qword ptr [rax]
0x0000020000528cc3 : xchg rax, r15 ; lea r8d, dword ptr [rdx + 0x50] ; call 0x2000014f4c9
0x00000200004aef6b : xchg rax, r8 ; mov qword ptr [rsp + 0x20], rax ; call r10
0x000002000018a7f2 : xchg rax, rdx ; int1 ; push rsi ; ret 0x7401
0x00000200004b8d74 : xchg rax, rsi ; sar bh, 0x8b ; ret
0x000002000013ec63 : xchg rax, rsp ; and byte ptr [rax - 1], cl ; ret 0x4c89
0x00000200004b8f74 : xchg rax, rsp ; sar bh, 0x8b ; ret
0x00000200001ae39d : xlatb ; adc al, byte ptr [rax] ; call rax
0x0000020000141c95 : xlatb ; add byte ptr [rax], al ; add cl, ch ; loop 0x20000141c66 ; add byte ptr [rax], al ; ret
0x000002000014069b : xlatb ; add byte ptr [rax], al ; ret
0x00000200001f62ef : xlatb ; add byte ptr [rax], al ; shl eax, 0xa ; add eax, ecx ; ret
0x00000200001f496a : xlatb ; and al, byte ptr [rax] ; add rsp, 0x38 ; ret
0x00000200002014d8 : xlatb ; call 0x200000478c5
0x000002000017b73b : xlatb ; call 0x200000979d3
0x0000020000475a86 : xlatb ; call 0x2000009a2d4
0x00000200004a252b : xlatb ; call 0x200000c2d14
0x00000200004c9bc0 : xlatb ; call 0x200000ee110
0x00000200005ece40 : xlatb ; call 0x2000013f9af
0x000002000051da3b : xlatb ; call 0x200001407e4
0x0000020000523b25 : xlatb ; call 0x2000014f184
0x000002000058e1aa : xlatb ; call 0x200001bc7e0
0x00000200005ccbf8 : xlatb ; call 0x200003d8e9b
0x0000020000125a57 : xlatb ; call 0x20000521d23
0x0000020000443bcc : xlatb ; call qword ptr [rax]
0x00000200000f077d : xlatb ; call rax
0x00000200006bc400 : xlatb ; call rdi
0x000002000039e3d5 : xlatb ; cmc ; inc dword ptr [rcx - 0x80] ; call qword ptr [rcx]
0x0000020000586ff1 : xlatb ; dec dword ptr [rax + 0x3b] ; ret 0x576
0x000002000058e798 : xlatb ; dec dword ptr [rax - 0x75] ; ret
0x000002000058e634 : xlatb ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc933
0x000002000049ce41 : xlatb ; in eax, -1 ; mov rcx, rdi ; call 0x200000c2849
0x0000020000177fbd : xlatb ; in eax, dx ; dec dword ptr [rax - 0x75] ; ret
0x000002000058e7a2 : xlatb ; inc dword ptr [rbx - 0x2be40ac3] ; call qword ptr [rdi]
0x00000200000b8b9e : xlatb ; jmp 0x200000b8b2b
0x000002000015eac4 : xlatb ; jmp 0x2000015eae1
0x0000020000486c73 : xlatb ; jmp rdx
0x0000020000512c6a : xlatb ; lea edx, dword ptr [r15 + 2] ; call 0x20000140468
0x0000020000512c69 : xlatb ; lea edx, dword ptr [r15 + 2] ; call 0x20000140469
0x000002000048f290 : xlatb ; lea r8, qword ptr [rsp + 0x70] ; call 0x200000bccc9
0x0000020000590410 : xlatb ; lea rcx, qword ptr [rbp - 0x28] ; call 0x200001bd484
0x0000020000525a36 : xlatb ; lea rcx, qword ptr [rbp - 9] ; call r12
0x000002000049ae0b : xlatb ; lea rcx, qword ptr [rsp + 0x38] ; call 0x200000bc8d9
0x00000200006b8fef : xlatb ; mov dword ptr [rsp + 0x20], ecx ; mov rcx, rsi ; call r12
0x00000200002059d7 : xlatb ; mov ecx, 0x200 ; call 0x20000231ce8
0x0000020000608131 : xlatb ; mov ecx, 1 ; call 0x20000231ce9
0x000002000060ea79 : xlatb ; mov ecx, ebx ; call 0x20000231ce6
0x00000200005888f8 : xlatb ; mov qword ptr [rsp + 0x28], rax ; call 0x200004d4b88
0x000002000060af8b : xlatb ; mov r14d, edi ; call 0x20000231ce7
0x00000200004cc777 : xlatb ; mov r8b, bl ; call 0x200000ef58f
0x0000020000513018 : xlatb ; mov r9d, ebx ; call 0x20000140467
0x0000020000513017 : xlatb ; mov r9d, ebx ; call 0x20000140468
0x0000020000429d71 : xlatb ; mov rbx, qword ptr [rsp + 8] ; ret
0x00000200005a1938 : xlatb ; mov rcx, qword ptr [r15 - 8] ; call qword ptr [rax]
0x00000200006bf2c4 : xlatb ; mov rcx, qword ptr [rsi + 8] ; call rax
0x00000200005a249a : xlatb ; mov rcx, qword ptr [rsp + 0x40] ; call 0x200001c51ed
0x000002000013d0c1 : xlatb ; mov rcx, r11 ; call r8
0x000002000013488a : xlatb ; mov rcx, r12 ; call r14
0x00000200006b8e6c : xlatb ; mov rcx, r12 ; mov dword ptr [rsp + 0x20], eax ; call rdi
0x00000200004c134b : xlatb ; mov rcx, r13 ; call 0x200000e4de7
0x0000020000505097 : xlatb ; mov rcx, r13 ; call 0x20000134777
0x00000200005be171 : xlatb ; mov rcx, r13 ; call rax
0x00000200004c9b1e : xlatb ; mov rcx, r14 ; call 0x200000ee19f
0x00000200005d00fb : xlatb ; mov rcx, r14 ; call rax
0x00000200006c07e1 : xlatb ; mov rcx, r14 ; mov dword ptr [rsp + 0x20], ebp ; call rax
0x0000020000475eeb : xlatb ; mov rcx, r15 ; call 0x2000009a2d7
0x00000200005d0153 : xlatb ; mov rcx, r15 ; call rax
0x000002000049932f : xlatb ; mov rcx, rax ; call 0x200000ba3f7
0x0000020000525e7f : xlatb ; mov rcx, rax ; call 0x2000014f187
0x00000200004794d7 : xlatb ; mov rcx, rbp ; call r15
0x00000200001c9923 : xlatb ; mov rcx, rbp ; call rax
0x000002000058fb97 : xlatb ; mov rcx, rbx ; call 0x200001bd2c3
0x000002000064a204 : xlatb ; mov rcx, rbx ; call 0x200001f649e
0x00000200005d21d5 : xlatb ; mov rcx, rbx ; call 0x2000069e44e
0x000002000051e6f3 : xlatb ; mov rcx, rbx ; call qword ptr [rax]
0x00000200001a9348 : xlatb ; mov rcx, rbx ; call r10
0x0000020000467295 : xlatb ; mov rcx, rbx ; call r14
0x00000200006c04f7 : xlatb ; mov rcx, rbx ; call rax
0x000002000058fa00 : xlatb ; mov rcx, rdi ; call 0x200001bd2c3
0x00000200005de140 : xlatb ; mov rcx, rdi ; call 0x2000048a43e
0x00000200004756be : xlatb ; mov rcx, rsi ; call 0x2000009a4a7
0x00000200004756dd : xlatb ; mov rcx, rsi ; call 0x2000009d697
0x00000200005d018e : xlatb ; mov rcx, rsi ; call r10
0x00000200001348ca : xlatb ; mov rcx, rsi ; call r14
0x00000200006b8d0a : xlatb ; mov rcx, rsi ; mov rbp, rax ; call rbx
0x00000200005942e6 : xlatb ; mov rdi, rsi ; call 0x200004b0566
0x00000200005942e5 : xlatb ; mov rdi, rsi ; call 0x200004b0567
0x0000020000510ba4 : xlatb ; movdqu xmmword ptr [rbp - 0x11], xmm0 ; call 0x20000140809
0x000002000067da59 : xlatb ; movzx ecx, bx ; call rax
0x0000020000523de5 : xlatb ; or al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; fmul dword ptr [rcx + 0x3b] ; ret
0x00000200003e726a : xlatb ; or bh, bh ; ret 0xc1ff
0x00000200001adbdd : xlatb ; or byte ptr fs:[rax], al ; sti ; add rsp, 0x28 ; ret
0x000002000041dbad : xlatb ; or dword ptr [rax], eax ; add rsp, 0x38 ; ret
0x00000200000b0cd9 : xlatb ; or eax, 0x83be0f00 ; ret
0x0000020000571122 : xlatb ; or eax, 0xc032ffe7 ; ret
0x0000020000492e09 : xlatb ; pop rsi ; ret 0x48ff
0x000002000007e963 : xlatb ; ret
0x00000200004c9e0d : xlatb ; ret 0x48ff
0x000002000058fb9d : xlatb ; ret 0x84ff
0x0000020000512c48 : xlatb ; ret 0x8bff
0x00000200005ce345 : xlatb ; ret 0xffa4
0x000002000075de1d : xlatb ; ret 0xffb7
0x00000200004ba28f : xlatb ; sar bh, 0x8b ; ret
0x000002000059b5cd : xlatb ; sar r15d, cl ; call rax
0x00000200001661eb : xlatb ; sbb qword ptr [rax], rax ; ret
0x00000200005f306f : xlatb ; shl edx, 0xc ; or r8d, edx ; jmp 0x200005f3096
0x000002000002c225 : xlatb ; std ; dec dword ptr [rax + 0x63] ; ret 0xb60f
0x000002000058c684 : xlatb ; sti ; dec dword ptr [rax - 0x77] ; jl 0x2000058c6b8 ; and al, ch ; ret
0x000002000051b1b0 : xlatb ; test rcx, rcx ; je 0x2000051b1c4 ; call 0x20000140389
0x0000020000207f19 : xlatb ; test rdx, rdx ; cmovne rax, rdx ; jmp 0x20000207f66
0x00000200001733ae : xlatb ; xchg eax, edi ; cli ; dec dword ptr [rax - 0x7d] ; ret 0xf4e
0x000002000001ce9f : xor ah, 0xc2 ; add dword ptr [rax], eax ; add rax, r8 ; jmp rax
0x000002000049ad01 : xor ah, ah ; call 0x200000c3085
0x000002000041075a : xor ah, al ; inc dword ptr [rbx - 0x74ffc799] ; ret
0x000002000067f96a : xor ah, byte ptr [rbx] ; jmp 0x1ffc3f38a76
0x00000200000d8311 : xor ah, byte ptr [rdx] ; add byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200001980b0 : xor ah, dh ; push rsi ; ret
0x00000200004e1154 : xor al, 0 ; add al, al ; jmp 0x200004e1121
0x0000020000073408 : xor al, 0 ; add al, al ; ret
0x00000200000348ca : xor al, 0 ; add byte ptr [rax - 0x39], cl ; ret
0x0000020000117622 : xor al, 0 ; add byte ptr [rax], al ; ret
0x0000020000035799 : xor al, 0 ; call rax
0x0000020000038a79 : xor al, 0 ; mov eax, dword ptr [rcx + rax*4] ; ret
0x0000020000030f15 : xor al, 0 ; mov rax, qword ptr [rcx + rax*8] ; ret
0x00000200004c1495 : xor al, 0x10 ; add byte ptr [rbp - 0x75], al ; ret 0xdb85
0x0000020000450fa8 : xor al, 0x15 ; add byte ptr [rbp + 0x3b], cl ; ret
0x0000020000450ee9 : xor al, 0x15 ; add byte ptr [rcx - 0xa], al ; ret
0x000002000049df38 : xor al, 0x1a ; ret 0x48ff
0x000002000074cdf0 : xor al, 0x26 ; ret
0x000002000059b444 : xor al, 0x27 ; jmp 0x1ffffdcf650
0x0000020000084cac : xor al, 0x2b ; ret
0x00000200005ca937 : xor al, 0x33 ; ror byte ptr [rcx - 0x75], cl ; ret 0xf748
0x00000200006da2d0 : xor al, 0x3b ; ret 0x2675
0x00000200004b425d : xor al, 0x41 ; mov edx, ebx ; mov rcx, rsi ; call rax
0x00000200004b443d : xor al, 0x45 ; mov eax, ebx ; mov rdx, rsi ; mov ecx, ebx ; call rax
0x00000200006da2ff : xor al, 0x48 ; add esp, 0x28 ; ret
0x00000200004e8c9e : xor al, 0x48 ; mov dword ptr [rcx + 0x38], eax ; mov qword ptr [rcx + 0x40], r10 ; ret
0x00000200004baa65 : xor al, 0x48 ; mov eax, edx ; jmp 0x200004baa17
0x0000020000610c05 : xor al, 0x48 ; mov ecx, edi ; call 0x20000231017
0x00000200003eed78 : xor al, 0x48 ; ret
0x0000020000610c17 : xor al, 0x49 ; mov ecx, ebp ; call 0x20000231017
0x000002000049cdf8 : xor al, 0x4d ; ret 0x48ff
0x0000020000758ca0 : xor al, 0x56 ; ret 0x48ff
0x00000200005faed8 : xor al, 0x61 ; ret
0x00000200006b2448 : xor al, 0x63 ; ret 0x4cff
0x0000020000756fc8 : xor al, 0x72 ; ret 0xfff
0x000002000044f3cd : xor al, 0x74 ; or al, 0xff ; ret 0x3b41
0x000002000045fa6b : xor al, 0x81 ; call qword ptr [rax]
0x00000200003e5017 : xor al, 0x81 ; cli ; push rax ; je 0x200003e502a ; ret
0x000002000052e1fa : xor al, 0x81 ; ret
0x000002000063c4f4 : xor al, 0x83 ; ret
0x00000200003f383c : xor al, 0x87 ; ret
0x0000020000170ead : xor al, 0x89 ; ret
0x000002000045142d : xor al, 0x8a ; ret
0x000002000012d794 : xor al, 0x8b ; ret
0x00000200004f9722 : xor al, 0x8b ; ret 0x6b48
0x000002000009604f : xor al, 0x8b ; ret 0x8948
0x00000200003f0352 : xor al, 0x8b ; ret 0x8b48
0x00000200006568a2 : xor al, 0x9e ; dec dword ptr [rax - 0x7d] ; ret
0x000002000004aecb : xor al, 0xa1 ; add al, 0 ; add rcx, rbp ; jmp rcx
0x00000200006d7340 : xor al, 0xb8 ; ret 0x8bff
0x00000200006d7358 : xor al, 0xb8 ; ret 0xf3ff
0x00000200000d309c : xor al, 0xc ; add byte ptr [rcx - 0x75], al ; ret
0x0000020000153358 : xor al, 0xc ; add rsp, 0x30 ; pop rbp ; ret
0x00000200005038c8 : xor al, 0xcf ; ret
0x0000020000485608 : xor al, 0xd2 ; ret
0x00000200000a936c : xor al, 0xe ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000199f78 : xor al, 0xe8 ; ret 0xfa99
0x000002000017a478 : xor al, 0xe8 ; ret 0xfc94
0x0000020000610cbe : xor al, 0xe8 ; sbb al, 0x10 ; ret 0x48ff
0x00000200000945cf : xor al, 0xe9 ; xor esi, 0xffffffff ; dec dword ptr [rax - 9] ; ret
0x0000020000510288 : xor al, 0xf2 ; ret
0x00000200001b254e : xor al, 0xf4 ; dec dword ptr [rax - 0x77] ; adc byte ptr [r8 - 0x75], cl ; ret
0x00000200005d53a7 : xor al, 0xf6 ; inc dword ptr [rcx - 0x75] ; ret 0x3b45
0x00000200000b6802 : xor al, 0xf6 ; ret
0x000002000077720c : xor al, 0xf6 ; ret 0x7401
0x000002000022dce5 : xor al, 0xf6 ; ret 0x7402
0x0000020000433dd7 : xor al, 0xf6 ; ret 0xf08
0x00000200003c5c38 : xor al, 0xf6 ; ret 0xf10
0x00000200000b5c1b : xor al, 0xf6 ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000004100e : xor al, 0xf7 ; ret
0x00000200001a6330 : xor al, 0xf7 ; ret 0x820
0x00000200004b5d09 : xor al, 0xf7 ; ret 1
0x000002000050fc88 : xor al, 0xf8 ; ret
0x00000200001bcf64 : xor al, 0xf9 ; dec dword ptr [rcx - 0x74b65c83] ; ret 0xf49
0x00000200004f10a9 : xor al, 0xfa ; add cl, byte ptr [rax + 0x3b] ; ret
0x00000200000c6573 : xor al, 0xfa ; inc dword ptr [rdi + rcx - 0x4a] ; ret
0x00000200006ad7fb : xor al, 0xfc ; ret 0x4c1f
0x0000020000064f6b : xor al, 0xff ; ret
0x00000200000929a8 : xor al, 0xff ; ret 0xf41
0x0000020000128ed9 : xor al, 0xff ; ror dword ptr [rdi], -0x49 ; ret
0x0000020000529ac7 : xor al, 1 ; pop rdi ; sbb al, 0x8b ; sbb byte ptr [r11], r15b ; ret
0x0000020000647d68 : xor al, 3 ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200001141d1 : xor al, 4 ; add byte ptr [rax], al ; sete al ; ret
0x00000200006088dc : xor al, 8 ; xor edx, edx ; call 0x20000231017
0x000002000002ccf8 : xor al, al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200001b8f7d : xor al, al ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003eff60 : xor al, al ; add rsp, 0x28 ; pop rsi ; pop rbp ; ret
0x00000200000659a0 : xor al, al ; add rsp, 0x28 ; ret
0x0000020000052ccd : xor al, al ; add rsp, 0x30 ; pop rbx ; ret
0x00000200004bb542 : xor al, al ; add rsp, 0x30 ; pop rdi ; ret
0x0000020000403e46 : xor al, al ; add rsp, 0x40 ; pop rdi ; pop rbp ; pop rbx ; ret
0x0000020000462ae4 : xor al, al ; add rsp, 8 ; ret
0x000002000019b993 : xor al, al ; and al, 1 ; xor byte ptr [rcx + 0x22], al ; ret
0x0000020000054862 : xor al, al ; jmp 0x200000547a1
0x000002000040749f : xor al, al ; jmp 0x20000407469
0x00000200005f4982 : xor al, al ; mov byte ptr [rcx + 6], al ; pop r14 ; ret
0x00000200001351b6 : xor al, al ; mov byte ptr [rcx + rdx], al ; mov rax, r11 ; ret
0x00000200005f37a0 : xor al, al ; mov rbx, qword ptr [rsp + 0x10] ; ret
0x00000200002157f8 : xor al, al ; mov rbx, qword ptr [rsp + 8] ; ret
0x000002000049cf9c : xor al, al ; pop r14 ; pop rsi ; ret
0x0000020000003789 : xor al, al ; ret
0x000002000051db95 : xor al, bpl ; and al, 0x19 ; ret
0x000002000052ad23 : xor al, bpl ; xchg eax, esi ; ret 0x48ff
0x00000200000efe86 : xor al, byte ptr [rax + rax] ; add rsp, 0x40 ; pop rbx ; ret
0x00000200005fd128 : xor al, byte ptr [rax] ; add al, al ; ret
0x00000200001b3335 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; lea ecx, dword ptr [rdx + 0x1e] ; call rax
0x000002000065a182 : xor al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000020000146817 : xor al, byte ptr [rax] ; add rsp, 0x28 ; ret
0x0000020000051696 : xor al, byte ptr [rax] ; ret
0x000002000007c8ed : xor al, byte ptr [rbp - 0x75] ; ret 0x8b48
0x0000020000143dac : xor al, byte ptr [rbx + 0x300ffce0] ; ret
0x0000020000143c64 : xor al, byte ptr [rbx + 0xb41fce0] ; ror byte ptr [rdi], 0x30 ; ret
0x000002000003275b : xor al, byte ptr [rcx - 0xa] ; ret 0x7502
0x00000200004bf4c8 : xor al, byte ptr [rdi + rcx + 0x20] ; ret
0x00000200004a1362 : xor al, byte ptr [rdx] ; add byte ptr [rax], al ; movzx edx, bl ; call 0x2000043d585
0x00000200000421ff : xor al, byte ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000200003f5b31 : xor al, byte ptr [rdx] ; add byte ptr [rax], al ; setne al ; ret
0x00000200003e0a3c : xor al, ch ; add byte ptr ds:[rax], al ; add byte ptr [rcx - 1], al ; ret
0x00000200001b07ce : xor al, ch ; add rax, qword ptr [rax] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000051db96 : xor al, ch ; and al, 0x19 ; ret
0x000002000050407c : xor al, ch ; inc dl ; ret
0x000002000060fb64 : xor al, ch ; jbe 0x2000060fb8d ; ret 0x48ff
0x000002000050d4fe : xor al, ch ; jl 0x2000050d534 ; ret
0x00000200004a9f7b : xor al, ch ; jmp rbx
0x0000020000524145 : xor al, ch ; jne 0x20000524100 ; ret 0x45ff
0x00000200003e544f : xor al, ch ; mov bl, 0x9f ; ret
0x0000020000503fce : xor al, ch ; or al, 0xc4 ; ret
0x00000200000f0398 : xor al, ch ; push rdx ; push -0x74bb0007 ; ret
0x0000020000156b47 : xor al, ch ; ret
0x000002000015bd4c : xor al, ch ; ret 0x2950
0x00000200005dcf78 : xor al, ch ; ret 0xaabd
0x0000020000505288 : xor al, ch ; ret 0xc164
0x00000200004a0298 : xor al, ch ; ret 0xc1f6
0x0000020000405868 : xor al, ch ; ret 0xfc04
0x000002000019370d : xor al, ch ; ret 0xfff2
0x00000200004ecc18 : xor al, ch ; stosb byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; ret 0x48ff
0x000002000044e4dd : xor al, ch ; sub eax, 0x8bffde2b ; ret
0x00000200004a00a6 : xor al, ch ; test byte ptr [rdx], bl ; ret 0xf7ff
0x00000200004a01c7 : xor al, ch ; xchg eax, ebx ; test ecx, 0x1f2ee8ff ; ret 0x41ff
0x000002000052ad24 : xor al, ch ; xchg eax, esi ; ret 0x48ff
0x00000200000ec68c : xor al, cl ; and al, 1 ; xor byte ptr [rdx + 0x22], al ; ret
0x000002000018b3f9 : xor al, cl ; int1 ; push rsi ; ret 0x741e
0x000002000003e48d : xor al, dh ; sub eax, dword ptr [rax] ; ret
0x00000200004a9f7a : xor al, r13b ; jmp rbx
0x00000200004a0297 : xor al, r13b ; ret 0xc1f6
0x000002000019b992 : xor al, r8b ; and al, 1 ; xor byte ptr [rcx + 0x22], al ; ret
0x00000200005f4981 : xor al, r8b ; mov byte ptr [rcx + 6], al ; pop r14 ; ret
0x000002000020fd29 : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; adc cl, byte ptr [rax + 0x2b] ; ret 0x8d49
0x000002000008f097 : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; add byte ptr [rax + 0x3b], cl ; ret
0x000002000012fefc : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; ret
0x000002000008f06f : xor bh, 0xff ; dec dword ptr [rax - 0x75] ; sbb dh, dh ; ret
0x000002000052d75d : xor bh, 0xff ; dec dword ptr [rax - 1] ; ret
0x000002000002d9ca : xor bh, 0xff ; dec dword ptr [rcx - 0x75] ; ret
0x000002000003bee5 : xor bh, 0xff ; inc dword ptr [rcx - 0x7c] ; ret
0x00000200000a2be8 : xor bh, 0xff ; inc dword ptr [rcx - 1] ; ret 0x8149
0x00000200004e8d3a : xor bh, 0xff ; push rax ; inc dword ptr [rax] ; ret
0x00000200000e83b7 : xor bh, 0xff ; push rsi ; ret
0x000002000049b8be : xor bh, bh ; call 0x200000bd245
0x000002000049aef1 : xor bh, bh ; call 0x200000c3085
0x00000200000ae765 : xor bh, bh ; ret
0x00000200004ce9a2 : xor bh, bh ; ret 0x3b41
0x00000200001e3045 : xor bh, bh ; ret 0x533b
0x000002000015251d : xor bh, bh ; ret 0x5589
0x00000200001cf848 : xor bh, bh ; ret 0xc28b
0x00000200006d5e6e : xor bh, bh ; ret 0xff48
0x00000200001b947a : xor bh, byte ptr [rbx] ; ret 0x2074
0x00000200003bd598 : xor bh, byte ptr [rbx] ; sbb al, byte ptr [rax] ; add rsp, 0x20 ; pop rbx ; ret
0x000002000017d24f : xor bh, ch ; dec dword ptr [rbp - 0x75] ; ret
0x000002000010d359 : xor bh, dh ; jmp 0x1fffad2a46c
0x00000200003da326 : xor bh, dl ; ret
0x00000200001fb173 : xor bl, 0xff ; add rsp, 0x78 ; ret
0x0000020000487eec : xor bl, bh ; ret
0x0000020000634dc3 : xor bl, bl ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005a87c7 : xor bl, byte ptr [rax] ; call 0x20000664a38
0x000002000048db3a : xor bl, byte ptr [rsi] ; ret
0x0000020000453af3 : xor bl, ch ; adc al, 0xf6 ; ret
0x0000020000017def : xor bl, ch ; fmul dword ptr [rax - 0x7d] ; ret
0x00000200000f7080 : xor bl, ch ; ret
0x00000200004ba533 : xor bl, ch ; ret 0x1b0
0x0000020000574354 : xor bl, ch ; ret 0xb8cc
0x00000200003cf4f2 : xor bl, ch ; ret 0xcccc
0x0000020000629e83 : xor byte ptr [r10 + 3], sil ; xor eax, eax ; ret
0x00000200005b3298 : xor byte ptr [r11 + rcx*4 - 0x39], r8b ; xor edx, edx ; call 0x2000014f4c9
0x00000200000c940c : xor byte ptr [r11], cl ; ret 0x4123
0x000002000049f50d : xor byte ptr [r11], r14b ; shr al, cl ; sub dh, byte ptr [rbx] ; ret 0x48ff
0x000002000049f481 : xor byte ptr [r11], sil ; shr al, cl ; mov dh, 0x33 ; ret 0x48ff
0x000002000049f550 : xor byte ptr [r11], sil ; shr al, cl ; out 0x32, eax ; ret 0x48ff
0x0000020000443e74 : xor byte ptr [r11], sil ; shr al, cl ; ret
0x00000200001c3448 : xor byte ptr [r13 + 0x1b], sil ; mov byte ptr [rbx + 0x38], 2 ; call r8
0x000002000001e153 : xor byte ptr [r13 + 3], sil ; mov al, 1 ; ret
0x000002000044cb32 : xor byte ptr [r13 + 7], sil ; ret
0x0000020000403745 : xor byte ptr [r13 - 0x76], al ; ret 0xc141
0x0000020000471d29 : xor byte ptr [r8 + 0x23], cl ; ret
0x000002000041b1f0 : xor byte ptr [r8 + 0x2b], cl ; ret
0x00000200006cab16 : xor byte ptr [r8 + 0x2b], r9b ; ret 0xd148
0x0000020000146930 : xor byte ptr [r8 + 0xf], cl ; ret
0x0000020000133580 : xor byte ptr [r8 - 0x73], r9b ; ror byte ptr [r13 - 0x75], 1 ; ret
0x000002000021dedd : xor byte ptr [r8 - 0x75], cl ; ret 0x2b48
0x00000200004a0293 : xor byte ptr [r8 - 0x75], cl ; xor al, r13b ; ret 0xc1f6
0x00000200003c1a1f : xor byte ptr [r8 - 0x75], r9b ; ret
0x000002000006950d : xor byte ptr [r8 - 0x7b], r9b ; sal byte ptr [rbp - 0x13], 0xe9 ; ret 0xfffe
0x00000200001fbe01 : xor byte ptr [r8 - 0x7d], cl ; jmp 0x1ffc4063313
0x0000020000669f7c : xor byte ptr [r8 - 0x7d], cl ; ret
0x00000200004f9290 : xor byte ptr [r8 - 0x7d], cl ; ret 0xb90e
0x0000020000756b43 : xor byte ptr [r8 - 0x7d], r9b ; ret 0x4508
0x00000200001b8352 : xor byte ptr [r8], al ; add byte ptr [rax], al ; or byte ptr [rdx + rax - 2], dh ; ret 0xf48
0x000002000065acf0 : xor byte ptr [r9 - 0x75], al ; ret 0x8341
0x00000200000e798b : xor byte ptr [r9], al ; ret
0x0000020000471d2a : xor byte ptr [rax + 0x23], cl ; ret
0x00000200001499ec : xor byte ptr [rax + 0x28c48348], dl ; ret
0x0000020000137675 : xor byte ptr [rax + 0x2b], cl ; ret
0x00000200006cab17 : xor byte ptr [rax + 0x2b], cl ; ret 0xd148
0x00000200001c33f7 : xor byte ptr [rax + 0x3b], cl ; fbstp dword ptr [rdx + rsi*2 - 0xa] ; ret
0x000002000016e640 : xor byte ptr [rax + 0x3b], cl ; ret
0x000002000002d036 : xor byte ptr [rax + 0x3b], cl ; ret 0x8b45
0x000002000012a50b : xor byte ptr [rax + 0x4800001d], cl ; add esp, 0x28 ; ret
0x000002000001bdd8 : xor byte ptr [rax + 0x63], cl ; ret
0x00000200001673c2 : xor byte ptr [rax + 0x69], cl ; rol dword ptr [rax], 0x46 ; ret
0x00000200006c0f60 : xor byte ptr [rax + 0xb], cl ; ret 0xf48
0x0000020000146931 : xor byte ptr [rax + 0xf], cl ; ret
0x000002000022eeec : xor byte ptr [rax + 3], cl ; ret
0x0000020000050bd1 : xor byte ptr [rax + 3], cl ; ret 0x4d89
0x00000200001f0aba : xor byte ptr [rax + rax], al ; add bl, al ; xor eax, eax ; ret
0x000002000072fee4 : xor byte ptr [rax + rax], al ; add byte ptr [rax + 0x33], cl ; ret 0xd233
0x00000200003beb5b : xor byte ptr [rax + rax], al ; add byte ptr [rax + 0x3b], cl ; ret
0x00000200001283ff : xor byte ptr [rax + rax], al ; add byte ptr [rcx - 0x7c], al ; ret
0x000002000017bc52 : xor byte ptr [rax + rcx*4 - 0x55], al ; ret 0
0x000002000039c768 : xor byte ptr [rax - 0x39], cl ; ret 0xd300
0x000002000039c767 : xor byte ptr [rax - 0x39], r9b ; ret 0xd300
0x0000020000640802 : xor byte ptr [rax - 0x3b7cb701], dh ; ret
0x00000200000778d9 : xor byte ptr [rax - 0x3f], cl ; call 0x1ffc22ac0f1
0x00000200000f5b28 : xor byte ptr [rax - 0x3f], cl ; call 0x1ffc232a340
0x00000200004acf65 : xor byte ptr [rax - 0x3f], cl ; call qword ptr [rax]
0x000002000076ccf0 : xor byte ptr [rax - 0x4a], ah ; jmp qword ptr [rax]
0x0000020000781b4c : xor byte ptr [rax - 0x73], cl ; and al, 0x50 ; call r12
0x0000020000004c3b : xor byte ptr [rax - 0x73], cl ; pop rdi ; sbb byte ptr [rbx], ch ; ret 0x894c
0x0000020000133581 : xor byte ptr [rax - 0x73], cl ; ror byte ptr [r13 - 0x75], 1 ; ret
0x00000200000e3b68 : xor byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000020000739894 : xor byte ptr [rax - 0x75], cl ; add dword ptr [rbp + 3], eax ; ret 0x8948
0x000002000041d653 : xor byte ptr [rax - 0x75], cl ; enter 0x1ce8, 0x67 ; ret 0x8bff
0x00000200006050af : xor byte ptr [rax - 0x75], cl ; iretd ; call 0x20000231017
0x000002000006710f : xor byte ptr [rax - 0x75], cl ; iretd ; call rsi
0x00000200004c9379 : xor byte ptr [rax - 0x75], cl ; push r8 ; call 0x200000ede6c
0x00000200003c1a20 : xor byte ptr [rax - 0x75], cl ; ret
0x000002000021dede : xor byte ptr [rax - 0x75], cl ; ret 0x2b48
0x0000020000067a85 : xor byte ptr [rax - 0x75], cl ; ret 0x48f0
0x00000200001fb5b4 : xor byte ptr [rax - 0x75], cl ; ret 0x8348
0x000002000040976c : xor byte ptr [rax - 0x75], cl ; ret 0x8948
0x00000200001af62d : xor byte ptr [rax - 0x75], cl ; ret 0x8b48
0x00000200001c7cbc : xor byte ptr [rax - 0x75], cl ; ret 0xc148
0x00000200004a9f74 : xor byte ptr [rax - 0x75], cl ; ror byte ptr [rax - 0x73], 1 ; xor al, r13b ; jmp rbx
0x00000200004a0294 : xor byte ptr [rax - 0x75], cl ; xor al, r13b ; ret 0xc1f6
0x0000020000162ddf : xor byte ptr [rax - 0x77], cl ; and al, 0x30 ; call r8
0x000002000076a13d : xor byte ptr [rax - 0x77], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000200005e2519 : xor byte ptr [rax - 0x77], cl ; or r14b, r14b ; ret
0x00000200001b9910 : xor byte ptr [rax - 0x77], cl ; push rsp ; and al, 0x38 ; call r9
0x000002000012e90d : xor byte ptr [rax - 0x77], cl ; sbb byte ptr [r13 + 0x3b], cl ; ret
0x00000200001bef32 : xor byte ptr [rax - 0x7b], cl ; leave ; je 0x200001bef4a ; mov dword ptr [rcx], r10d ; ret
0x00000200004c1c45 : xor byte ptr [rax - 0x7b], cl ; leave ; je 0x200004c1c64 ; call 0x200000e7759
0x00000200000ee4e9 : xor byte ptr [rax - 0x7b], cl ; leave ; jne 0x200000ee4e5 ; mov rax, rdx ; ret
0x000002000006950e : xor byte ptr [rax - 0x7b], cl ; sal byte ptr [rbp - 0x13], 0xe9 ; ret 0xfffe
0x00000200001a13db : xor byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rbx + 0x48], 0x3b ; ret
0x00000200006c04db : xor byte ptr [rax - 0x7b], cl ; sal byte ptr [rcx + rcx + 0x48], 0x8b ; retf ; call rax
0x0000020000112d95 : xor byte ptr [rax - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret
0x00000200006b7302 : xor byte ptr [rax - 0x7d], cl ; cmp byte ptr [rax], al ; jne 0x200006b72fc ; xor al, al ; ret
0x00000200001fbe02 : xor byte ptr [rax - 0x7d], cl ; jmp 0x1ffc4063312
0x0000020000004cc4 : xor byte ptr [rax - 0x7d], cl ; ret
0x0000020000756b44 : xor byte ptr [rax - 0x7d], cl ; ret 0x4508
0x00000200001fa9cb : xor byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000200005bbe24 : xor byte ptr [rax - 0x7d], cl ; ret 0x4818
0x0000020000194220 : xor byte ptr [rax - 0x7d], cl ; ret 0x4904
0x00000200006818b5 : xor byte ptr [rax - 0x7d], cl ; ret 0x4a02
0x000002000074e747 : xor byte ptr [rax - 0x7d], cl ; ret 0x4c18
0x0000020000743d69 : xor byte ptr [rax - 0x7d], cl ; ret 0x4cf8
0x000002000074deff : xor byte ptr [rax - 0x7d], cl ; ret 0x4d20
0x00000200004f9291 : xor byte ptr [rax - 0x7d], cl ; ret 0xb90e
0x0000020000600957 : xor byte ptr [rax - 0x7d], cl ; ret 0xe838
0x0000020000511c35 : xor byte ptr [rax - 0x7d], cl ; rol byte ptr [rdx], 0x48 ; add esp, 0x28 ; ret
0x0000020000030a1c : xor byte ptr [rax - 0x7f], cl ; ret 0x308
0x000002000039e4ea : xor byte ptr [rax - 0x7f], cl ; ret 0xfff
0x000002000005aa59 : xor byte ptr [rax - 0x80], al ; call qword ptr [rcx]
0x00000200001dd423 : xor byte ptr [rax - 1], cl ; ret
0x000002000067f257 : xor byte ptr [rax - 1], cl ; ret 0x8948
0x00000200001f0ab9 : xor byte ptr [rax], 4 ; add byte ptr [rax], al ; ret
0x000002000002f88b : xor byte ptr [rax], 6 ; add byte ptr [rax], al ; ret
0x00000200003cb936 : xor byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; ret
0x0000020000020888 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x38 ; ret
0x00000200001b8353 : xor byte ptr [rax], al ; add byte ptr [rax], al ; or byte ptr [rdx + rax - 2], dh ; ret 0xf48
0x00000200000df6dc : xor byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000002000009a482 : xor byte ptr [rax], al ; add byte ptr [rax], cl ; add byte ptr [rbp + 3], dh ; xor eax, eax ; ret
0x000002000064937d : xor byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0xf799
0x0000020000416656 : xor byte ptr [rax], al ; add byte ptr [rcx + 0x3b], cl ; ret 0xb74
0x000002000069dda3 : xor byte ptr [rax], al ; add byte ptr [rsi + 0x23], ah ; ret
0x000002000002f797 : xor byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000002000007c545 : xor byte ptr [rax], al ; call rax
0x00000200005dbec2 : xor byte ptr [rax], al ; je 0x200005dbed5 ; mov eax, 0xc00000f4 ; ret
0x0000020000573dc6 : xor byte ptr [rax], al ; jmp 0x200003e8d35
0x00000200003ee149 : xor byte ptr [rax], al ; movdqu xmmword ptr [rdx], xmm0 ; mov eax, r10d ; ret
0x00000200003bb044 : xor byte ptr [rax], al ; ret
0x0000020000074721 : xor byte ptr [rax], al ; sete al ; ret
0x0000020000123f38 : xor byte ptr [rax], al ; xor eax, eax ; ret
0x0000020000580d99 : xor byte ptr [rax], cl ; jmp 0x200021b04a4
0x000002000005be42 : xor byte ptr [rbp + 0x13], 0x48 ; add esp, 0x20 ; pop rbx ; ret
0x00000200000b8be3 : xor byte ptr [rbp + 0x1a], 0x8b ; ret
0x00000200001c3449 : xor byte ptr [rbp + 0x1b], dh ; mov byte ptr [rbx + 0x38], 2 ; call r8
0x00000200000eb220 : xor byte ptr [rbp + 0x23], al ; ret
0x00000200004a1650 : xor byte ptr [rbp + 0x33], al ; sal byte ptr [rbx], 0xd2 ; call 0x200000c2849
0x000002000020d759 : xor byte ptr [rbp + 0x3b], al ; ret 0x1073
0x0000020000104077 : xor byte ptr [rbp + 0x3b], al ; ret 0x5974
0x00000200000414d9 : xor byte ptr [rbp + 0x3b], cl ; ret 0x894c
0x0000020000044e4b : xor byte ptr [rbp + 0x48f178c0], al ; mov eax, edx ; ret
0x000002000007420f : xor byte ptr [rbp + 0x48f478c0], al ; mov eax, edx ; ret
0x0000020000046b56 : xor byte ptr [rbp + 0xb], 0x83 ; call qword ptr [rax]
0x00000200006dc913 : xor byte ptr [rbp + 0xf], al ; scasd eax, dword ptr [rdi] ; ret 0x5c89
0x00000200003b6f5d : xor byte ptr [rbp + 3], al ; ret 0x8b44
0x000002000001e154 : xor byte ptr [rbp + 3], dh ; mov al, 1 ; ret
0x00000200005017b8 : xor byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000002000044cb33 : xor byte ptr [rbp + 7], dh ; ret
0x000002000075edcc : xor byte ptr [rbp + rcx*4 + 0x25], cl ; insb byte ptr [rdi], dx ; ret
0x00000200001eea85 : xor byte ptr [rbp - 0x142a8a25], al ; add bh, bh ; ret
0x00000200006cee79 : xor byte ptr [rbp - 0x74d3862e], al ; ret 0xba0f
0x00000200006da2c9 : xor byte ptr [rbp - 0x74d78b2e], al ; xor al, 0x3b ; ret 0x2675
0x0000020000421157 : xor byte ptr [rbp - 0x75], al ; ret 0x8b49
0x000002000072c596 : xor byte ptr [rbp - 0x75], al ; ret 0xb941
0x00000200003afcdc : xor byte ptr [rbp - 0x75], cl ; add byte ptr [rbp + 0x3b], cl ; ret
0x00000200003fb7dd : xor byte ptr [rbp - 0x75], cl ; fmul dword ptr [rax - 0x75] ; ret 0x8b45
0x0000020000017833 : xor byte ptr [rbp - 0x75], cl ; ret
0x0000020000403746 : xor byte ptr [rbp - 0x76], al ; ret 0xc141
0x00000200005013f9 : xor byte ptr [rbp - 0x7b], al ; sal byte ptr [rax + rax*2 + 0x44], 0x3b ; ret 0x7e72
0x00000200005201c6 : xor byte ptr [rbx + 0x1b2e8f8], cl ; ret 0x8bff
0x000002000072c748 : xor byte ptr [rbx + 0x2b402444], cl ; ret
0x000002000078424a : xor byte ptr [rbx + 0x3480843], cl ; ret
0x0000020000784249 : xor byte ptr [rbx + 0x3480843], r9b ; ret
0x00000200006cc7a7 : xor byte ptr [rbx + 0x49], bl ; jmp rax
0x00000200006cc79f : xor byte ptr [rbx + 0x49], bl ; jmp rdx
0x000002000017445c : xor byte ptr [rbx + 0x8c86], cl ; add byte ptr [rbx], bh ; ret 0x470f
0x00000200005f8426 : xor byte ptr [rbx + rax - 0x7d], dh ; ret
0x0000020000584662 : xor byte ptr [rbx + rbx*8 - 0x7cb7fb8b], al ; ret 0xe810
0x00000200006a95cf : xor byte ptr [rbx + rcx*4 + 5], al ; std ; insb byte ptr [rdi], dx ; ret 0x66ff
0x00000200005b3299 : xor byte ptr [rbx + rcx*4 - 0x39], al ; xor edx, edx ; call 0x2000014f4c8
0x000002000002f710 : xor byte ptr [rbx + rdi - 0x40], al ; jne 0x2000002f6e1 ; ret
0x0000020000609bbf : xor byte ptr [rbx - 0x14b77230], cl ; call 0x20000231ce9
0x00000200004ecc14 : xor byte ptr [rbx - 0x17cfdbac], cl ; stosb byte ptr [rdi], al ; lodsb al, byte ptr [rsi] ; ret 0x48ff
0x00000200003a66fa : xor byte ptr [rbx - 0x9bbdbbc], cl ; ret 0x7510
0x000002000022edb9 : xor byte ptr [rbx], al ; ret 0x833b
0x0000020000181da8 : xor byte ptr [rbx], bh ; lock dec dword ptr [rax - 0x7f] ; ret 0xfff
0x000002000065be95 : xor byte ptr [rbx], bh ; ret 0x830f
0x000002000009a6fe : xor byte ptr [rbx], bh ; ret 0x840f
0x0000020000486c0b : xor byte ptr [rbx], bh ; ror byte ptr [rdi], 1 ; ret 0x854d
0x00000200003a1c2a : xor byte ptr [rbx], ch ; ret 0x394c
0x00000200000c940d : xor byte ptr [rbx], cl ; ret 0x4123
0x000002000011dd22 : xor byte ptr [rbx], dh ; dec dword ptr [rax - 0x75] ; fincstp ; ret 0xfffc
0x0000020000212ded : xor byte ptr [rbx], dh ; rol byte ptr [rcx - 0x77], 9 ; ret
0x0000020000512cae : xor byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; enter 0x7e8, -0x38 ; ret
0x0000020000663271 : xor byte ptr [rbx], dh ; ror byte ptr [rax - 0x75], cl ; sub r8b, bpl ; ret 0xffae
0x000002000049f482 : xor byte ptr [rbx], dh ; shr al, cl ; mov dh, 0x33 ; ret 0x48ff
0x000002000041932f : xor byte ptr [rbx], dh ; shr al, cl ; mov esp, ebx ; ret
0x000002000049f551 : xor byte ptr [rbx], dh ; shr al, cl ; out 0x32, eax ; ret 0x48ff
0x0000020000443e75 : xor byte ptr [rbx], dh ; shr al, cl ; ret
0x000002000049f50e : xor byte ptr [rbx], dh ; shr al, cl ; sub dh, byte ptr [rbx] ; ret 0x48ff
0x00000200000e7ab7 : xor byte ptr [rbx], dh ; test byte ptr [rbx - 0x2674b716], 0xf7 ; ret 0xfffc
0x000002000022edb8 : xor byte ptr [rbx], r8b ; ret 0x833b
0x0000020000212dec : xor byte ptr [rbx], sil ; rol byte ptr [rcx - 0x77], 9 ; ret
0x000002000061a677 : xor byte ptr [rcx + 0x1b801], cl ; add byte ptr [rax], al ; ret
0x00000200001a5cd9 : xor byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x000002000019b997 : xor byte ptr [rcx + 0x22], al ; ret
0x000002000019b6c5 : xor byte ptr [rcx + 0x23], al ; ret
0x00000200001bf9fc : xor byte ptr [rcx + 0x2b], al ; ret
0x0000020000521d72 : xor byte ptr [rcx + 0x3b], al ; ret 0x1073
0x00000200001f6778 : xor byte ptr [rcx + 0x3b], cl ; ret
0x000002000061ccef : xor byte ptr [rcx + 0x41202444], cl ; call rdx
0x00000200000d0f6e : xor byte ptr [rcx + 0x5c], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x000002000013f6d0 : xor byte ptr [rcx + 0x5d], al ; ret
0x00000200000f833d : xor byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000e71ba : xor byte ptr [rcx + 0x5e], al ; pop r12 ; pop rdi ; ret
0x0000020000065d95 : xor byte ptr [rcx + 0x5e], al ; pop r12 ; ret
0x000002000009d5c5 : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000003883b : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200007832c8 : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop r12 ; ret
0x0000020000446f1c : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200006ba263 : xor byte ptr [rcx + 0x5e], al ; pop r13 ; pop rdi ; ret
0x00000200000b3dfe : xor byte ptr [rcx + 0x5e], al ; pop rbp ; pop rbx ; ret
0x0000020000012ba6 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbp ; ret
0x00000200004ba6cf : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rbx ; ret
0x00000200003a00d9 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rcx ; ret
0x00000200000b2998 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x00000200003cd1e1 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; pop rbx ; pop rbp ; ret
0x000002000001aa63 : xor byte ptr [rcx + 0x5e], al ; pop rdi ; pop rsi ; ret
0x000002000046055b : xor byte ptr [rcx + 0x5e], al ; pop rsi ; pop rbp ; ret
0x000002000049cf41 : xor byte ptr [rcx + 0x5e], al ; pop rsi ; ret
0x000002000000ddfd : xor byte ptr [rcx + 0x5e], al ; ret
0x00000200000c8c97 : xor byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; pop rsi ; pop rbx ; ret
0x0000020000124320 : xor byte ptr [rcx + 0x5f], al ; pop r12 ; pop rdi ; ret
0x0000020000205015 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rbp ; ret
0x000002000000292d : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; pop rdi ; pop rsi ; ret
0x00000200000129b0 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r12 ; ret
0x00000200000a937f : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; pop rdi ; pop rsi ; ret
0x00000200000517c0 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop r13 ; ret
0x00000200000e6fd6 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x00000200001bf97b : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rcx ; ret
0x000002000005abae : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rbp ; pop rbx ; ret
0x000002000001b001 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbp ; ret
0x00000200000f3b37 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; pop rsi ; pop rbx ; ret
0x000002000000da32 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; pop rdi ; ret
0x000002000003b188 : xor byte ptr [rcx + 0x5f], al ; pop r14 ; ret
0x0000020000026153 : xor byte ptr [rcx + 0x5f], al ; pop rdi ; pop rbp ; ret
0x0000020000085b3f : xor byte ptr [rcx + 0x5f], al ; pop rdi ; pop rsi ; pop rbp ; pop rbx ; ret
0x0000020000445319 : xor byte ptr [rcx + 0x5f], al ; pop rsi ; pop rbx ; ret
0x0000020000068026 : xor byte ptr [rcx + 0x5f], al ; ret
0x000002000019d0c8 : xor byte ptr [rcx + 0xa], bh ; call rax
0x000002000019d0a5 : xor byte ptr [rcx + 0xd], bh ; call rax
0x00000200001faa02 : xor byte ptr [rcx + 0xf], al ; mov bh, 0x44 ; ret 0x410c
0x00000200005e4d24 : xor byte ptr [rcx + 3], cl ; ror byte ptr [rax - 0x77], 0x42 ; ret
0x000002000010f1c9 : xor byte ptr [rcx + rcx*4 + 0x10], cl ; ret
0x000002000005e4be : xor byte ptr [rcx + rcx*4 + 0x51], cl ; jo 0x2000005e4b5 ; ret 0x8b44
0x000002000005e4bd : xor byte ptr [rcx + rcx*4 + 0x51], cl ; jo 0x2000005e4b6 ; ret 0x8b44
0x000002000006f39c : xor byte ptr [rcx + rcx*4 + 0xf], cl ; add rsp, 0x20 ; pop rdi ; ret
0x00000200003c3e8f : xor byte ptr [rcx + rdi + 0x48], 0x83 ; ret 0x4428
0x00000200001ae6b5 : xor byte ptr [rcx - 0x48], al ; and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x2000014a8e9
0x000002000077d5cf : xor byte ptr [rcx - 0x4b], dl ; call qword ptr [rax]
0x00000200004f9fc3 : xor byte ptr [rcx - 0x73], al ; push rax ; add eax, ebp ; ret
0x000002000061af79 : xor byte ptr [rcx - 0x7487dba4], cl ; ret
0x000002000059c61c : xor byte ptr [rcx - 0x74b7004e], bl ; ret
0x00000200003e2d14 : xor byte ptr [rcx - 0x75], al ; ret 0x4489
0x000002000065acf1 : xor byte ptr [rcx - 0x75], al ; ret 0x8341
0x0000020000007220 : xor byte ptr [rcx - 0x75], al ; ret 0x8b48
0x0000020000002e60 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000002eaf ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000000d73c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000000d78b ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200000125bc : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000001260b ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000001edea : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000001ee38 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000025485 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000254d4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000272e6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000027334 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000034902 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000034950 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000038953 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000389a1 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000003d4bb : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000003d50a ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000003d59d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000003d5eb ; pop rdi ; pop rdi ; pop rsi ; ret
0x000002000003f0d6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000003f125 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000003fced : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000003fd3c ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000004d84d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000004d89b ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000004e070 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000004e0be ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000007a93d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000007a98b ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200000dc7f3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000dc841 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200000efe11 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000efe5f ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200000f74e3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f7532 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000f885a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000f88a9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200000fcab5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200000fcb04 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000102616 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000102665 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000111401 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000111450 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000011190f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011195d ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011315b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001131a9 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000113b1e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000113b6c ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000113c42 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000113c90 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000011da1e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000011da6c ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000012729c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001272eb ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000012f2e0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000012f32f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001325b4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000132602 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001ab99e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ab9ed ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ac08c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ac0db ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ace3f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ace8e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ad6db : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ad72a ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001add66 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001addb5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ae9b2 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001aea00 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001b4407 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001b4456 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001ccce9 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ccd37 ; pop rdi ; pop rdi ; pop rsi ; ret
0x00000200001d045a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d04a8 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001d5610 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d565f ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001d8034 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001d8082 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001e04db : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e052a ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001e23c1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e240f ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001e415a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e41a9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200001e483f : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001e488d ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200001eb576 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001eb5c4 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001ec043 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ec091 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001ec65b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ec6a9 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001ede43 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001ede91 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200001f03f7 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001f0446 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200001fe356 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200001fe3a4 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200002066d3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000206722 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000206f5e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000206fad ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000020c0ed : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000020c13c ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000210df6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000210e45 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000039d417 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039d466 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000039d6e5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039d734 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000039d878 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039d8c6 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000039e6f7 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000039e745 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003abb0c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003abb5a ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003ace44 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ace93 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003add73 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003addc2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003aebbe : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003aec0d ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003af7dd : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003af82c ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003b2b21 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b2b70 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003b6781 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b67cf ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200003b939e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003b93ec ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003c815d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003c81ac ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003cde13 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003cde61 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200003e63e3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003e6432 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200003ef2e3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003ef332 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003f0a15 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f0a64 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200003f63b6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003f6404 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200003fd12c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200003fd17b ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004039c3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000403a12 ; pop rdi ; pop r14 ; pop rsi ; ret
0x0000020000404bbf : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000404c0d ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000040ad50 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000040ad9f ; pop rsi ; pop r12 ; pop rdi ; ret
0x0000020000413128 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000413176 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000414ec4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000414f13 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000415e20 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000415e6f ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000417c73 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000417cc1 ; pop rdi ; pop rdi ; pop rbp ; ret
0x000002000041c851 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041c89f ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000041d48c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000041d4db ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004237e4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000423833 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000042a3cb : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042a41a ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000042e534 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000042e583 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000044d5ff : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000044d64d ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004607f8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000460847 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000463496 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004634e5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000464541 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000464590 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000465173 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004651c2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000465d01 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000465d4f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004694c8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000469517 ; pop rdi ; pop r13 ; pop rbp ; ret
0x000002000046e354 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000046e3a3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000047561d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000047566b ; pop rdi ; pop rdi ; pop rsi ; ret
0x0000020000486f99 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000486fe8 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004c307c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c30cb ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004c41d6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c4224 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c759d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c75eb ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004c8e49 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004c8e97 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004d020c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d025b ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004d0666 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d06b5 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004d083b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d088a ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004d0b50 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d0b9f ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004d1b43 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d1b92 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004d2f01 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d2f4f ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004d7fdf : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004d802e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004e39c2 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e3a11 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004e75b8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e7606 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200004e8fba : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004e9009 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004ec764 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ec7b3 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004ecf04 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ecf53 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200004eeef3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004eef41 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004ef61c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004ef66a ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200004f15e3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f1632 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004f39a6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f39f5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200004f9faa : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200004f9ff9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005030e2 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000503130 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005040c5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000504114 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000504bcf : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000504c1e ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000508335 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000508384 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000050c367 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050c3b5 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000050eefc : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050ef4b ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000050f498 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000050f4e7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000516854 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005168a2 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000051bc61 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051bcb0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000051cd09 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000051cd58 ; pop rdi ; pop r12 ; pop rbp ; ret
0x000002000052c2ac : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052c2fb ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000052c628 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052c677 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000052cdd6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052ce25 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000052ee68 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000052eeb7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000533432 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000533481 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005337aa : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005337f8 ; pop rbp ; pop rdi ; pop rbp ; ret
0x00000200005376d1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053771f ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000053b7b1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053b800 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000053d769 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053d7b7 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000053dfd3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000053e022 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005405b3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000540602 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000543a89 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000543ad7 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005d3c98 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005d3ce7 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005dda37 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005dda86 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005e0a0e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e0a5d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005e568a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e56d8 ; pop rsi ; pop rdi ; pop rsi ; ret
0x00000200005e5ba0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005e5bee ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200005f003e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f008d ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005f95cf : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f961e ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200005f9aa1 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005f9af0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200005fe2c5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200005fe313 ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006013aa : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006013f9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000601756 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006017a5 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000606281 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006062d0 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000606385 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006063d4 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000608ca4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000608cf3 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000060f1d8 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060f227 ; pop rsi ; pop r12 ; pop rbp ; ret
0x000002000060faf6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000060fb45 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000061165d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006116ac ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000061238c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006123db ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000619277 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006192c5 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000061bff4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061c043 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000061fdfe : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000061fe4c ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000062ac90 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062acdf ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000062d3b3 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000062d401 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000630224 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000630272 ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000063044a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000630499 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000063c5af : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000063c5fd ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000641aa0 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000641aee ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000064711b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064716a ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000064d0eb : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064d139 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000064dc65 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000064dcb3 ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000653c44 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000653c93 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000065451a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000654569 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000065a132 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065a181 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000065b065 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065b0b3 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000065b5d9 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065b628 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000065ff36 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000065ff85 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000662a2e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000662a7c ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006640ce : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066411c ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200006674eb : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000066753a ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000066817d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006681cc ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000066836d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006683bc ; pop rsi ; pop r12 ; pop rbp ; ret
0x0000020000669f49 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000669f98 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000067223e : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067228d ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006730b5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000673104 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000677eaa : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000677ef9 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000067bd7a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067bdc9 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000067d881 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000067d8cf ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000068ce44 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000068ce93 ; pop rsi ; pop r12 ; pop rbp ; ret
0x0000020000694233 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000694282 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200006944fd : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069454c ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000695650 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069569f ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000695846 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000695895 ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000698c8b : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000698cda ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000069aeee : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069af3d ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000069c7db : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000069c82a ; pop rdi ; pop r14 ; pop rdi ; ret
0x00000200006a8108 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200006a8157 ; pop rdi ; pop r14 ; pop rdi ; ret
0x000002000074df6a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000074dfb9 ; pop rsi ; pop r12 ; pop rdi ; ret
0x000002000074f6a5 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000074f6f4 ; pop rdi ; pop r14 ; pop rbp ; ret
0x00000200007515af : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007515fd ; pop rsi ; pop rdi ; pop rbp ; ret
0x0000020000756e51 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000756ea0 ; pop rdi ; pop r14 ; pop rbp ; ret
0x0000020000759399 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007593e7 ; pop rdi ; pop rdi ; pop rbp ; ret
0x0000020000759d53 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000759da2 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000075ec3d : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000075ec8b ; pop rsi ; pop rdi ; pop rsi ; ret
0x000002000075f98a : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000075f9d8 ; pop rsi ; pop rdi ; pop rsi ; ret
0x0000020000766cd2 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000766d21 ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000076e7d6 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000076e824 ; pop rsp ; pop rdi ; pop rbp ; ret
0x000002000076e9ee : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000076ea3d ; pop rdi ; pop r14 ; pop rbp ; ret
0x000002000076eb9c : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x2000076ebea ; pop rsi ; pop rdi ; pop rbp ; ret
0x00000200007805ad : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x200007805fc ; pop rdi ; pop r14 ; pop rdi ; ret
0x0000020000784fe4 : xor byte ptr [rcx - 0x75], cl ; jrcxz 0x20000785032 ; pop rsi ; pop rdi ; pop rbp ; ret
0x000002000051b5cd : xor byte ptr [rcx - 0x75], cl ; ret 0x348
0x00000200003c6f1d : xor byte ptr [rcx - 0x75], cl ; rol dword ptr [rdi + rcx - 0x49], cl ; ret
0x00000200001c2ac6 : xor byte ptr [rcx - 0x76], al ; ret
0x00000200003a49ad : xor byte ptr [rcx - 0x76], al ; ret 0xf41
0x00000200001d8900 : xor byte ptr [rcx - 0x76], al ; xchg dh, cl ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x00000200001337d1 : xor byte ptr [rcx - 0x78], al ; adc cl, byte ptr [rcx - 1] ; ret 0xc085
0x00000200000a1d93 : xor byte ptr [rcx - 0x7d], al ; call qword ptr [rax]
0x00000200001f06be : xor byte ptr [rcx - 0x7d], al ; ret
0x000002000013f31e : xor byte ptr [rcx - 0x7d], cl ; ret
0x000002000064e835 : xor byte ptr [rcx - 0x7d], cl ; ret 0x4404
0x000002000052e395 : xor byte ptr [rcx - 0x7d], cl ; ret 0x4904
0x0000020000011b6f : xor byte ptr [rcx - 0x7d], cl ; ret 0x4930
0x000002000068eb3f : xor byte ptr [rcx - 0xa], al ; ret
0x00000200003a280e : xor byte ptr [rcx - 1], al ; ret
0x0000020000762805 : xor byte ptr [rcx - 9], cl ; ret 0x1ff
0x000002000011eedc : xor byte ptr [rcx], ah ; adc dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x0000020000626ea8 : xor byte ptr [rcx], ah ; add byte ptr [rax], al ; xor rcx, rsp ; call 0x20000133189
0x00000200001a828d : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000200001f26d1 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000200003e7e14 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rdi ; pop rsi ; pop rbp ; ret
0x000002000043e91c : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rsi ; pop rbx ; pop rbp ; ret
0x00000200000e798c : xor byte ptr [rcx], al ; ret
0x00000200006b8cc4 : xor byte ptr [rdi + 0x48], bl ; jmp rax
0x00000200000c2b33 : xor byte ptr [rdi + 0x5d], bl ; pop rbx ; ret
0x00000200000127ef : xor byte ptr [rdi + 0x5e], bl ; pop rbp ; ret
0x000002000005757e : xor byte ptr [rdi + 0x5e], bl ; pop rbx ; ret
0x0000020000205414 : xor byte ptr [rdi + rax - 1], dh ; ret
0x00000200006cc561 : xor byte ptr [rdi + rcx + 0x20], al ; ret
0x00000200000ebd75 : xor byte ptr [rdi + rcx + 0x22], al ; ret
0x00000200001c0efa : xor byte ptr [rdi + rcx - 0x49], al ; ret 0x8b49
0x000002000049af90 : xor byte ptr [rdi + rcx - 0x4a], al ; ret
0x0000020000414dac : xor byte ptr [rdi - 0x17], bl ; pop rbp ; ret 0xffe1
0x00000200006c5027 : xor byte ptr [rdi - 0x17], bl ; ret 0xfffc
0x000002000040c4af : xor byte ptr [rdi - 0x3d], bl ; or dword ptr [rbx], esi ; jmp 0x2000040c47f
0x00000200006d7148 : xor byte ptr [rdi - 0x5d], dl ; dec dword ptr [rax + 0x2b] ; ret
0x00000200000a2591 : xor byte ptr [rdi], bl ; or al, byte ptr [rax] ; add rdx, r11 ; jmp rdx
0x000002000020ccd1 : xor byte ptr [rdi], cl ; ret 0x8b41
0x0000020000209546 : xor byte ptr [rdi], cl ; test byte ptr [rdi - 0x73000000], bh ; jmp qword ptr [r11]
0x000002000011503d : xor byte ptr [rdi], cl ; test byte ptr [rdi], dl ; ret 5
0x000002000065eede : xor byte ptr [rdi], cl ; test byte ptr [rsi - 0x73000000], bh ; jmp qword ptr [rbx]
0x0000020000668a19 : xor byte ptr [rdi], cl ; test dword ptr [rbp - 0x9ffffff], eax ; ret 0x7403
0x00000200004c4351 : xor byte ptr [rdi], cl ; test dword ptr [rdx - 0x74ffffff], edx ; ret
0x0000020000420cb6 : xor byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000200000ec690 : xor byte ptr [rdx + 0x22], al ; ret
0x000002000013fffd : xor byte ptr [rdx + 0x58], bl ; pop rcx ; ret
0x0000020000629e84 : xor byte ptr [rdx + 3], dh ; xor eax, eax ; ret
0x000002000064b0bf : xor byte ptr [rdx + rcx - 0x48], dh ; add eax, 0xe9800000 ; ret 0
0x0000020000041e80 : xor byte ptr [rdx + rcx - 0x75], 0xc2 ; ret
0x00000200000421fe : xor byte ptr [rdx], 2 ; add byte ptr [rax], al ; ret
0x00000200005bc8eb : xor byte ptr [rdx], al ; add byte ptr [rax], al ; mov cl, 0x10 ; call rax
0x0000020000744c27 : xor byte ptr [rdx], al ; add byte ptr [rax], al ; pop rdi ; ret
0x0000020000152a3f : xor byte ptr [rdx], ch ; add byte ptr [rax + 0x30c48348], dl ; pop rbp ; ret
0x000002000049cf9b : xor byte ptr [rdx], dh ; rol byte ptr [rcx + 0x5e], 0x5e ; ret
0x0000020000159368 : xor byte ptr [rip - 0x166f0011], bh ; ret
0x00000200001277a9 : xor byte ptr [rip - 0x3b1500], bl ; ret 0x8348
0x000002000002413e : xor byte ptr [rsi + 0x3b490013], bl ; ret
0x000002000002d49c : xor byte ptr [rsi + 0x5d], bl ; pop rbx ; ret
0x0000020000530129 : xor byte ptr [rsi + 0xb], ah ; ret 0x4166
0x0000020000011ca4 : xor byte ptr [rsi + rbp + 0x440f4800], ah ; ret 0x8d48
0x000002000052c945 : xor byte ptr [rsi - 0x77], ah ; and al, 0x38 ; call 0x200003e8c08
0x000002000062519c : xor byte ptr [rsi], al ; add byte ptr [rax], al ; jbe 0x20000625190 ; xor eax, eax ; ret
0x00000200006556fb : xor byte ptr [rsi], al ; add byte ptr [rax], al ; pop rdi ; ret
0x000002000002f88c : xor byte ptr [rsi], al ; add byte ptr [rax], al ; ret
0x000002000052ee8c : xor byte ptr [rsi], al ; ret 0xfff
0x000002000007c68a : xor byte ptr cs:[rax], al ; call rax
0x00000200000ffd93 : xor byte ptr gs:[rcx + 0x5f], al ; pop r14 ; pop rbp ; ret
0x00000200003dc27f : xor ch, al ; pop rdi ; in al, dx ; ret
0x00000200003e5108 : xor ch, al ; ret 0xc6c2
0x000002000014f60a : xor ch, byte ptr [rbx] ; and eax, dword ptr [rax] ; lea rax, qword ptr [rcx + rax*8] ; ret
0x000002000044acfa : xor ch, byte ptr [rsi - 0x39] ; dec dword ptr [rax - 0x75] ; ret
0x00000200001281b3 : xor cl, byte ptr [rax + 0x3b] ; ret 0x9c76
0x000002000064f62d : xor cl, byte ptr [rax + 3] ; ret 0x4eb
0x0000020000148a8d : xor cl, byte ptr [rax - 0x3f] ; loop 0x20000148ab9 ; or rax, rdx ; pop rdi ; ret
0x0000020000148a8d : xor cl, byte ptr [rax - 0x3f] ; loop 0x20000148abb ; or rax, rdx ; pop rdi ; ret
0x00000200001c977e : xor cl, byte ptr [rax - 0x3f] ; loop 0x200001c97aa ; or rax, rdx ; ret
0x00000200001c977e : xor cl, byte ptr [rax - 0x3f] ; loop 0x200001c97ab ; or rax, rdx ; ret
0x00000200005272e0 : xor cl, byte ptr [rax - 0x73] ; sub byte ptr [r9 + 0x3b], cl ; ret
0x0000020000189416 : xor cl, byte ptr [rax - 0x75] ; ret 0x8348
0x000002000013525e : xor cl, byte ptr [rax - 1] ; ret 0xff49
0x000002000073194a : xor cl, byte ptr [rbx - 0x74b6dbb5] ; ret
0x00000200000e7d56 : xor cl, byte ptr [rbx] ; add dh, dh ; ret 0xf02
0x00000200001367c1 : xor cl, byte ptr [rcx - 0x7d] ; ret 0x4c08
0x00000200001fa644 : xor cl, byte ptr [rcx - 1] ; ret 0x8b44
0x00000200001fa5dd : xor cl, byte ptr [rcx - 1] ; ret 0xb70f
0x00000200006b471a : xor cl, byte ptr [rdx - 0x57] ; dec dword ptr [rax - 9] ; fisttp dword ptr [rax - 0x75] ; ret
0x0000020000177b8b : xor cl, ch ; cmc ; ret
0x00000200001f92b3 : xor cl, ch ; cwde ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000002000018ee19 : xor cl, ch ; ret
0x00000200004610a1 : xor cl, ch ; ret 0xfffe
0x0000020000161c9e : xor cl, ch ; xchg eax, esi ; ret
0x00000200003f1850 : xor cl, cl ; mov al, cl ; ret
0x00000200006304a3 : xor cl, cl ; mov al, r9b ; ret
0x000002000040684c : xor cl, cl ; sar bh, cl ; add rsp, 0x70 ; pop rbx ; ret
0x00000200006a8054 : xor cl, dl ; ret 0xe8ff
0x00000200001cb0ea : xor dh, 0xff ; add rsp, 0x60 ; pop rbx ; ret
0x00000200000acfba : xor dh, 0xff ; dec dword ptr [rax + 0x3b] ; ret
0x0000020000747814 : xor dh, 0xff ; dec dword ptr [rbp + 0x23] ; ret
0x00000200000b62ce : xor dh, 0xff ; dec dword ptr [rcx + 0x23] ; ret 0xbb49
0x00000200000acc6a : xor dh, 0xff ; dec dword ptr [rcx + 0x3b] ; ret
0x00000200000ace65 : xor dh, 0xff ; dec dword ptr [rcx + 0x3b] ; ret 0x830f
0x00000200005cdf26 : xor dh, al ; call qword ptr [rax - 0xac33d17]
0x0000020000087b3e : xor dh, bh ; jmp 0x20033cb068e
0x00000200006d5445 : xor dh, bh ; xor eax, eax ; add rsp, 0x48 ; ret
0x000002000072b3f5 : xor dh, byte ptr [rbx + 8] ; mov esi, r12d ; mov rax, rdx ; jmp 0x2000072b40d
0x00000200001cb9a0 : xor dh, byte ptr [rdx - 0x31] ; xor eax, eax ; ret
0x0000020000768186 : xor dh, byte ptr [rdx] ; ret
0x0000020000448fca : xor dh, byte ptr [rsi + 0x34cffec] ; ret 0xff41
0x00000200004b368c : xor dh, ch ; ret 0x48ff
0x00000200000ea7cd : xor dh, dh ; push rax ; add cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x4a8
0x0000020000067484 : xor dh, dh ; ret
0x0000020000623d88 : xor dh, dh ; ret 0x7403
0x00000200006d4e4f : xor dh, dh ; ret 0x7440
0x00000200000dbc47 : xor dh, dh ; ret 0x7502
0x00000200004074d5 : xor dh, dh ; ret 0x7508
0x00000200006d53a2 : xor dh, dh ; ret 0xf01
0x00000200006d6080 : xor dh, dh ; ret 0xf02
0x000002000010b427 : xor dh, dh ; ret 0xf10
0x000002000011cdc7 : xor dh, dh ; ror byte ptr [rax - 0x75], cl ; jmp 0x1ffc2c7dd1e
0x0000020000210892 : xor dh, dh ; shl byte ptr [rdx], 1 ; ret 0x8d48
0x000002000049b8bd : xor dil, dil ; call 0x200000bd246
0x000002000020b093 : xor dl, 0xff ; add rsp, 0x58 ; ret
0x00000200003e3e42 : xor dl, ah ; dec dword ptr [rax - 0x75] ; ret
0x00000200005a9c02 : xor dl, al ; jmp 0x200005a9c06
0x0000020000139e33 : xor dl, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; fmul dword ptr [r8 - 0x75] ; ret
0x000002000043adc8 : xor dl, byte ptr [rsi] ; add byte ptr [rax - 0x75], cl ; ret
0x000002000063593a : xor dl, dh ; loope 0x20000635946 ; add rsp, 0x50 ; pop rbp ; ret
0x0000020000631e81 : xor dl, dl ; mov al, dl ; ret
0x00000200000f168f : xor dl, dl ; mov rbx, qword ptr [rsp + 8] ; mov al, dl ; ret
0x000002000010b541 : xor dword ptr [r14], eax ; add dh, dh ; ret
0x00000200006254a9 : xor dword ptr [rax + 0x33], ecx ; ret
0x00000200003991ef : xor dword ptr [rax + 0x33], ecx ; ret 0x3348
0x0000020000180a6a : xor dword ptr [rax + 0x33], ecx ; ret 0xf4d
0x0000020000434072 : xor dword ptr [rax + 0x48000005], 0xffffff81 ; ret
0x000002000063f2aa : xor dword ptr [rax + 0x78ff85ff], ebp ; xor dword ptr [rax - 1], ecx ; ret
0x000002000006a39d : xor dword ptr [rax + 1], 0x1240000 ; ret
0x000002000008b559 : xor dword ptr [rax - 0x3f], ecx ; loop 0x2000008b586 ; or rax, rdx ; ret
0x000002000044264c : xor dword ptr [rax - 0x75], ecx ; ret 0xc2f6
0x000002000046db5e : xor dword ptr [rax - 0x7d], ecx ; call qword ptr [rax]
0x00000200000081ed : xor dword ptr [rax - 0x7d], ecx ; ret
0x000002000005f5b0 : xor dword ptr [rax - 0x7f], ecx ; ret
0x000002000063f2b0 : xor dword ptr [rax - 1], ecx ; ret
0x000002000013537e : xor dword ptr [rax - 1], ecx ; ret 0xff49
0x0000020000067f7d : xor dword ptr [rax], eax ; ret
0x0000020000559273 : xor dword ptr [rax], ecx ; add byte ptr [rax + 0x20c48348], dl ; pop rbp ; ret
0x0000020000042df6 : xor dword ptr [rax], ecx ; add byte ptr [rsi - 1], ah ; ret
0x00000200004c1804 : xor dword ptr [rax], edx ; add byte ptr [rcx + 0x3b], cl ; ret 0x820f
0x00000200004c18a5 : xor dword ptr [rax], edx ; add dh, dh ; ret
0x000002000019f833 : xor dword ptr [rbp + 0xb], 0xe8cc8b49 ; ret 0x29f3
0x000002000002ae0e : xor dword ptr [rbp - 0x74bb00bd], ecx ; ret 0x4404
0x000002000022dc80 : xor dword ptr [rbx + 0x3b41dfc0], eax ; ret
0x0000020000680d18 : xor dword ptr [rbx + 0x418d48f2], ecx ; add dword ptr [rax + 3], ecx ; ret 0x3b4c
0x000002000020d3cd : xor dword ptr [rbx + 0x45000003], 0x3b ; ret 0xa75
0x00000200004361dc : xor dword ptr [rbx + rax*2], ecx ; pop rdx ; ret 0x59
0x0000020000418ce4 : xor dword ptr [rbx + rcx*4 + 0x43], eax ; or al, 0xe8 ; mov dh, 0xaf ; ret
0x0000020000008dfe : xor dword ptr [rbx], 0x48000002 ; add esp, 0x28 ; ret
0x0000020000009bbb : xor dword ptr [rcx + 0x18], eax ; ret
0x00000200000d8ae2 : xor dword ptr [rcx + 0x18], ecx ; ret
0x000002000007dd1c : xor dword ptr [rcx + 0x44fffffd], 0xffffff8b ; ret
0x000002000001803b : xor dword ptr [rcx + 2], 0 ; add bh, bh ; ret 0x5489
0x00000200001f8988 : xor dword ptr [rdi + 0x4c000003], 0xffffff8b ; ret
0x0000020000750554 : xor dword ptr [rdi + 0xd8d4cff], edx ; jp 0x20000750552 ; ret 0x45ff
0x0000020000128169 : xor dword ptr [rdi - 0x74b3fff9], ecx ; ret
0x0000020000501f69 : xor dword ptr [rdi], ecx ; test esi, ebx ; ret 8
0x00000200007551c5 : xor dword ptr [rdx + 0x35894cff], edi ; xor eax, ebx ; ret
0x00000200000b29ef : xor dword ptr [rdx + 0x78], 0x1000 ; ret
0x0000020000055dde : xor dword ptr [rdx + 4], 0x10 ; add byte ptr [rax - 0x75], cl ; ret 0x8d4d
0x00000200001ab3ff : xor dword ptr [rip + 0x24ff4800], ebx ; ret 0xcccc
0x00000200006a2325 : xor dword ptr [rip + 0x30dbde31], ecx ; ret 0xc556
0x000002000042c129 : xor dword ptr [rip + 0xf0016ec], 0xffffffb7 ; ret 0x3966
0x00000200003d24f6 : xor dword ptr [rip - 0x32fcb700], edi ; jmp rcx
0x000002000018a565 : xor dword ptr [rsi + 0x3b4dfff1], ecx ; ret
0x00000200005771db : xor dword ptr [rsi + rcx], esi ; nop ; jmp 0x200003f34c8
0x000002000010b542 : xor dword ptr [rsi], eax ; add dh, dh ; ret
0x00000200001ab3fe : xor dword ptr cs:[rip + 0x24ff4800], ebx ; ret 0xcccc
0x00000200003e37d5 : xor eax, 0x20 ; ret
0x00000200003cd9d7 : xor eax, 0x2348ffc6 ; ret
0x00000200003b61b2 : xor eax, 0x245c8d4c ; jo 0x200003b614b ; ret
0x0000020000784cd7 : xor eax, 0x33ffaac3 ; fisttp dword ptr [rax - 0x75] ; ret
0x00000200000ec318 : xor eax, 0x3b78418b ; ret 0x3174
0x0000020000582f37 : xor eax, 0x3bfff0a0 ; ret
0x00000200004ca387 : xor eax, 0x48ffbf80 ; add esp, 0x20 ; pop rbx ; ret
0x00000200003a2c47 : xor eax, 0x48ffd905 ; add esp, 0x20 ; pop rcx ; ret
0x00000200003af19f : xor eax, 0x48fff2c4 ; add esp, 0x20 ; pop rbx ; ret
0x0000020000044d05 : xor eax, 0x5d ; xor eax, eax ; ret
0x000002000007bb60 : xor eax, 0x8000ba ; add byte ptr [rsi - 0x7b], ah ; ret 0x1f74
0x00000200001c3e6e : xor eax, 0x8348ffe6 ; ret
0x00000200006cf62a : xor eax, 0x8b4c0000 ; ret
0x0000020000659137 : xor eax, 0x8bff9f71 ; ret
0x000002000052a647 : xor eax, 0x8bffc15d ; ret
0x000002000057cb97 : xor eax, 0x8bfff636 ; ret
0x00000200000437fa : xor eax, 0xbc2a27db ; mov dword ptr [r10], eax ; call r10
0x000002000021df9f : xor eax, 0xc03302eb ; add rsp, 0x28 ; ret
0x0000020000022209 : xor eax, 0xd03b4800 ; ja 0x2000002223e ; ret
0x000002000076428e : xor eax, 0xe445c7cf ; add esi, edi ; ret 0x38e8
0x0000020000542cb4 : xor eax, 0xe8ffd982 ; ret
0x0000020000140855 : xor eax, 0xe9000000 ; and dl, dh ; add byte ptr [rax], al ; ret
0x000002000055cde5 : xor eax, 0xe990ffc8 ; ret 0xe568
0x00000200004ad6c7 : xor eax, 0xe9ffba14 ; ret 0xfffc
0x00000200000f7db3 : xor eax, 0xeb001ff8 ; ret
0x0000020000498d21 : xor eax, 0xf6000002 ; ret 0xc601
0x0000020000615d7a : xor eax, 0xfc00000 ; ret
0x000002000077d02b : xor eax, 0xffb9b9d0 ; jmp 0x20000769264
0x000002000052b65b : xor eax, 0xffdac894 ; call 0x2000014f4c8
0x00000200005735c3 : xor eax, 0xffffe76e ; ret
0x00000200003ed16b : xor eax, dword ptr [r8 + rcx*4] ; ret
0x00000200003ed16c : xor eax, dword ptr [rax + rcx*4] ; ret
0x00000200004d443b : xor eax, dword ptr [rax] ; add al, al ; add rsp, 0x28 ; ret
0x0000020000073402 : xor eax, dword ptr [rax] ; add al, al ; ret
0x000002000004500a : xor eax, dword ptr [rax] ; add rsp, 0x40 ; pop rbx ; ret
0x000002000004472b : xor eax, dword ptr [rax] ; call rax
0x0000020000051be5 : xor eax, dword ptr [rax] ; mov eax, dword ptr [rcx + rax*4] ; test eax, eax ; je 0x20000051bfb ; ret
0x0000020000043d6f : xor eax, dword ptr [rax] ; mov rax, qword ptr [rcx + rax*8] ; ret
0x0000020000044a43 : xor eax, dword ptr [rax] ; ret
0x000002000020cad9 : xor eax, dword ptr [rbp + 2] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000200003dc940 : xor eax, dword ptr [rbp - 0x74c78725] ; ret
0x00000200006b02e8 : xor eax, dword ptr [rbp - 0xd08a40] ; ret
0x0000020000632af3 : xor eax, dword ptr [rcx - 0x47] ; mov ebx, 0x8baabbaa ; ret 0x6948
0x00000200004704c8 : xor eax, dword ptr [rcx - 0x75] ; ret 0x83c3
0x0000020000008dff : xor eax, dword ptr [rdx] ; add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x0000020000199f9d : xor eax, dword ptr [rip - 0x74bc0000] ; ret
0x00000200003ed4f7 : xor eax, dword ptr [rsp + 0x38] ; ret
0x0000020000405d23 : xor eax, eax ; add rsp, 0x18 ; ret
0x000002000076904e : xor eax, eax ; add rsp, 0x20 ; pop r14 ; ret
0x000002000001111f : xor eax, eax ; add rsp, 0x20 ; pop rbp ; ret
0x0000020000018cf3 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000020000054c08 : xor eax, eax ; add rsp, 0x20 ; pop rdi ; pop rsi ; pop rbx ; ret
0x00000200000eec29 : xor eax, eax ; add rsp, 0x20 ; pop rdi ; ret
0x00000200001f22e4 : xor eax, eax ; add rsp, 0x28 ; pop rdi ; pop rbx ; ret
0x000002000000827c : xor eax, eax ; add rsp, 0x28 ; ret
0x0000020000038e53 : xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x00000200000896f5 : xor eax, eax ; add rsp, 0x30 ; pop rdi ; ret
0x000002000076c48d : xor eax, eax ; add rsp, 0x30 ; pop rsi ; ret
0x00000200000c2964 : xor eax, eax ; add rsp, 0x38 ; pop r14 ; pop rdi ; ret
0x00000200000baaab : xor eax, eax ; add rsp, 0x38 ; pop rbp ; pop rbx ; ret
0x0000020000042141 : xor eax, eax ; add rsp, 0x38 ; ret
0x000002000008522c : xor eax, eax ; add rsp, 0x40 ; pop rbp ; ret
0x00000200001b958d : xor eax, eax ; add rsp, 0x40 ; pop rbx ; ret
0x00000200000bd88f : xor eax, eax ; add rsp, 0x40 ; pop rdi ; ret
0x00000200000d8185 : xor eax, eax ; add rsp, 0x48 ; pop r13 ; pop rbx ; ret
0x00000200000c8f19 : xor eax, eax ; add rsp, 0x48 ; pop rdi ; pop rbx ; ret
0x00000200001b7974 : xor eax, eax ; add rsp, 0x48 ; ret
0x00000200004e77b7 : xor eax, eax ; add rsp, 0x50 ; pop rbp ; ret
0x000002000006f172 : xor eax, eax ; add rsp, 0x50 ; pop rbx ; ret
0x00000200006775fb : xor eax, eax ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000200005f4279 : xor eax, eax ; add rsp, 0x58 ; ret
0x00000200003ce79e : xor eax, eax ; add rsp, 0x60 ; pop rbx ; ret
0x00000200004943f2 : xor eax, eax ; add rsp, 0x70 ; pop r13 ; ret
0x0000020000116523 : xor eax, eax ; add rsp, 0x70 ; pop rbx ; ret
0x00000200005dd425 : xor eax, eax ; call 0x20000089714
0x000002000049920f : xor eax, eax ; call 0x200000c2845
0x0000020000029d2e : xor eax, eax ; call 0x200000c5f54
0x00000200004c7819 : xor eax, eax ; call 0x200000ec749
0x000002000051287a : xor eax, eax ; call 0x20000140da5
0x00000200003e13f0 : xor eax, eax ; call 0x200004c7af1
0x0000020000073978 : xor eax, eax ; cmp dword ptr [rcx + 0x2c], eax ; sete al ; ret
0x0000020000118c38 : xor eax, eax ; cmp ecx, 0x1e ; setb al ; ret
0x00000200001a9c3c : xor eax, eax ; cmp qword ptr [rcx], r8 ; jne 0x200001a9c4f ; xor eax, eax ; ret
0x0000020000024994 : xor eax, eax ; cmp qword ptr [rcx], rax ; sete al ; ret
0x00000200001f7cf3 : xor eax, eax ; cmp r10, r11 ; jb 0x200001f7cde ; ret
0x00000200001ac314 : xor eax, eax ; cmp r11d, r9d ; seta al ; ret
0x000002000013e7d3 : xor eax, eax ; cmp r8, rcx ; seta al ; ret
0x00000200007677dc : xor eax, eax ; cmp r8b, cl ; seta al ; ret
0x00000200001eed3e : xor eax, eax ; cmp r8d, ecx ; setb al ; ret
0x0000020000202d96 : xor eax, eax ; cmp r8d, ecx ; setne al ; ret
0x000002000067dd93 : xor eax, eax ; cmp r8w, r9w ; seta al ; ret
0x000002000067dd57 : xor eax, eax ; cmp r8w, r9w ; setb al ; ret
0x0000020000479070 : xor eax, eax ; cmp rcx, qword ptr [rdx] ; jne 0x2000047907f ; ret
0x000002000047908c : xor eax, eax ; cmp rcx, qword ptr [rdx] ; jne 0x2000047909b ; ret
0x000002000006810f : xor eax, eax ; cmp rcx, rdx ; sete al ; ret
0x00000200001f86f6 : xor eax, eax ; cmp rdx, r10 ; jb 0x200001f86d8 ; mov al, 1 ; ret
0x0000020000104a06 : xor eax, eax ; cmp rdx, rcx ; seta al ; ret
0x0000020000230cc0 : xor eax, eax ; inc eax ; ret
0x000002000005a781 : xor eax, eax ; jmp 0x2000005a74b
0x000002000017b750 : xor eax, eax ; jmp 0x20000067979
0x000002000008029f : xor eax, eax ; jmp 0x20000080268
0x00000200001980ac : xor eax, eax ; jmp 0x200000db198
0x00000200000e167a : xor eax, eax ; jmp 0x200000e1554
0x00000200003c6d15 : xor eax, eax ; jmp 0x200003c6cde
0x00000200004ae733 : xor eax, eax ; jmp 0x200004ae41b
0x0000020000527a59 : xor eax, eax ; jmp 0x20000527a23
0x00000200004cbb3d : xor eax, eax ; lea rcx, qword ptr [rbp - 0x59] ; xor edx, edx ; call qword ptr [rdi]
0x000002000007e95b : xor eax, eax ; lock cmpxchg qword ptr [rcx], r8 ; jne 0x2000007e944 ; ret
0x000002000014f6d2 : xor eax, eax ; mov byte ptr [rcx + 0x58], 1 ; ret
0x0000020000044ccb : xor eax, eax ; mov byte ptr [rcx + 0x5df8], 0 ; ret
0x000002000056064e : xor eax, eax ; mov cl, 0x1b ; call rax
0x00000200005dc88d : xor eax, eax ; mov cl, bpl ; call rsi
0x00000200006c0e9f : xor eax, eax ; mov dword ptr [r8 + rcx*4], edx ; ret
0x0000020000212dee : xor eax, eax ; mov dword ptr [r9], ecx ; ret
0x00000200001f6a8a : xor eax, eax ; mov dword ptr [rcx + 0x38], eax ; mov word ptr [rcx + 0x48], ax ; ret
0x000002000011c15d : xor eax, eax ; mov dword ptr [rcx + 0x50], eax ; mov eax, r8d ; ret
0x00000200004e8d20 : xor eax, eax ; mov dword ptr [rcx], 0x4c706345 ; ret
0x00000200000c0788 : xor eax, eax ; mov dword ptr [rcx], eax ; or dword ptr [rcx], 0xffffffff ; ret
0x000002000014f5c0 : xor eax, eax ; mov dword ptr [rdx], eax ; or dword ptr [rdx], 0xffffffff ; ret
0x00000200000ff7b6 : xor eax, eax ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200006c1da6 : xor eax, eax ; mov dword ptr [rip - 0x3e3592], ecx ; ret
0x000002000062954f : xor eax, eax ; mov dword ptr [rsp], eax ; add rsp, 0x18 ; ret
0x0000020000124ad2 : xor eax, eax ; mov eax, r8d ; inc qword ptr [rdx + rax*8] ; ret
0x00000200001362ba : xor eax, eax ; mov eax, r8d ; ret
0x000002000013fff8 : xor eax, eax ; mov edx, eax ; wrmsr ; pop rdx ; pop rax ; pop rcx ; ret
0x0000020000086c6b : xor eax, eax ; mov qword ptr [r8 + 8], rcx ; ret
0x0000020000546112 : xor eax, eax ; mov qword ptr [r8], 1 ; ret
0x000002000003cc19 : xor eax, eax ; mov qword ptr [r9], rcx ; ret
0x00000200000635ea : xor eax, eax ; mov qword ptr [r9], rdx ; pop rdi ; ret
0x000002000065f0f5 : xor eax, eax ; mov qword ptr [rcx], rax ; mov qword ptr [rcx + 8], rax ; ret
0x000002000041ee5c : xor eax, eax ; mov qword ptr [rcx], rax ; ret
0x00000200000bd212 : xor eax, eax ; mov qword ptr [rdx + 0x10], rcx ; ret
0x0000020000764b38 : xor eax, eax ; mov qword ptr [rsp + 0x20], rdi ; call 0x20000140da9
0x000002000000ab95 : xor eax, eax ; mov rbp, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x0000020000486c58 : xor eax, eax ; mov rbx, qword ptr [rsp + 0x28] ; pop rdi ; ret
0x000002000002bf80 : xor eax, eax ; mov rbx, qword ptr [rsp + 8] ; ret
0x0000020000453166 : xor eax, eax ; mov rcx, qword ptr [rdi + 0x2e8] ; call rax
0x0000020000152e1e : xor eax, eax ; mov rcx, r10 ; call r10
0x000002000015305e : xor eax, eax ; mov rcx, r11 ; call r11
0x0000020000495870 : xor eax, eax ; mov rcx, rbp ; call 0x200000b8ea8
0x00000200001e657b : xor eax, eax ; mov rcx, rbp ; xor edx, edx ; call 0x200000c2849
0x00000200004065f8 : xor eax, eax ; mov rcx, rbx ; call 0x200000c2847
0x0000020000203d7c : xor eax, eax ; mov rcx, rdi ; mov rdx, rbx ; call rsi
0x00000200004365a0 : xor eax, eax ; mov rcx, rdi ; xor edx, edx ; call 0x200000c2849
0x0000020000493bd8 : xor eax, eax ; mov rcx, rsi ; call 0x200000b8ea8
0x000002000050147a : xor eax, eax ; mov rdi, qword ptr [rsp + 8] ; ret
0x0000020000040537 : xor eax, eax ; mov rdx, r14 ; mov rcx, r12 ; call r15
0x0000020000595006 : xor eax, eax ; mov rdx, r14 ; mov rcx, r15 ; call rax
0x0000020000042994 : xor eax, eax ; mov rdx, rbx ; mov rcx, rdi ; call rsi
0x000002000016f373 : xor eax, eax ; mov rdx, rsi ; call rax
0x000002000015db07 : xor eax, eax ; movups xmmword ptr [rdx], xmm0 ; ret
0x00000200003e9340 : xor eax, eax ; pop rbx ; ret
0x000002000014a64d : xor eax, eax ; pop rsi ; pop rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000200000064b1 : xor eax, eax ; ret
0x0000020000557d74 : xor eax, eax ; test cl, cl ; setne al ; pop rbp ; ret
0x00000200003ebb43 : xor eax, eax ; test ecx, ecx ; setns al ; dec eax ; ret
0x000002000046fceb : xor eax, eax ; test r8, r8 ; je 0x2000046fcfd ; call r8
0x00000200001f448c : xor eax, eax ; test r8, r8 ; jne 0x200001f4457 ; ret
0x00000200000a2f87 : xor eax, eax ; test rcx, r8 ; cmovne eax, edx ; ret
0x0000020000488275 : xor eax, eax ; test rcx, rcx ; jne 0x20000488284 ; ret
0x00000200005fc4e1 : xor eax, eax ; test rcx, rcx ; jne 0x200005fc4f4 ; xor eax, eax ; ret
0x000002000003245b : xor eax, eax ; test rdx, rdx ; jne 0x2000003246a ; ret
0x0000020000211cff : xor eax, eax ; xchg dword ptr [rcx + 0x1c], eax ; ret
0x0000020000546200 : xor eax, eax ; xchg dword ptr [rcx + 0x20], eax ; ret
0x000002000014f748 : xor eax, eax ; xchg dword ptr [rdx], eax ; ret
0x00000200006b0718 : xor eax, eax ; xchg dword ptr [rip + 0x2da1c], eax ; ret
0x0000020000117880 : xor eax, eax ; xchg qword ptr [rcx], rax ; ret
0x0000020000498e31 : xor eax, eax ; xor edx, edx ; call 0x200000c2847
0x00000200006b3983 : xor eax, eax ; xor edx, edx ; call 0x200000cfb96
0x00000200004a4cd0 : xor eax, eax ; xor edx, edx ; call 0x200000cfb97
0x000002000010b30d : xor eax, eax ; xor edx, edx ; call r9
0x00000200001846c8 : xor eax, eax ; xor edx, edx ; call rax
0x00000200004265be : xor eax, eax ; xor edx, edx ; mov rcx, r12 ; call 0x200000c2849
0x0000020000195d81 : xor eax, eax ; xor edx, edx ; xor ecx, ecx ; call 0x200000d1fa8
0x00000200003dc2b0 : xor eax, ebp ; cmp ch, ah ; ret
0x000002000012594b : xor eax, ebx ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x00000200007551cb : xor eax, ebx ; ret
0x00000200003b7274 : xor eax, ecx ; add byte ptr [rax], al ; add byte ptr [rax - 1], cl ; ret 0xd5eb
0x00000200004e1de0 : xor eax, ecx ; dec dword ptr [rax - 0x7f] ; ret
0x0000020000171722 : xor eax, ecx ; mov rcx, rax ; call rdx
0x00000200003ed30c : xor eax, ecx ; ret
0x00000200003ed4f5 : xor eax, ecx ; xor eax, dword ptr [rsp + 0x38] ; ret
0x0000020000009bb5 : xor eax, edx ; and rax, rcx ; xor qword ptr [r9 + 0x18], rax ; ret
0x000002000013da51 : xor eax, edx ; xor rcx, rdx ; jmp rax
0x00000200000ff7b5 : xor eax, r8d ; mov dword ptr [rdx], eax ; xor eax, eax ; ret
0x00000200003ed30b : xor eax, r9d ; ret
0x000002000001f24a : xor ebp, dword ptr [rbx] ; ret
0x000002000016cd54 : xor ebp, dword ptr [rdx - 7] ; dec dword ptr [rax + 0x2b] ; ret 0x8948
0x0000020000472039 : xor ebp, eax ; int1 ; ret 0xffbc
0x00000200001638b8 : xor ebp, ebp ; dec dword ptr [rax - 0x75] ; ret
0x000002000016c13c : xor ebp, ebp ; jmp 0x2000010171c
0x000002000040c4b3 : xor ebp, ebx ; ret
0x000002000051db89 : xor ebx, dword ptr [rcx] ; ret
0x00000200005ba31b : xor ebx, eax ; mov r8, rbx ; call 0x200001de4d8
0x0000020000685858 : xor ebx, ebp ; or dh, dh ; ret
0x00000200004ccf64 : xor ebx, ebx ; call 0x200000ef4b1
0x0000020000616c40 : xor ebx, ebx ; call 0x20000231016
0x00000200000efd91 : xor ebx, ebx ; jmp 0x200000efd5a
0x000002000010faea : xor ebx, ebx ; jmp 0x2000010fab4
0x00000200003b6ffa : xor ebx, ebx ; jmp 0x200003b6fc3
0x00000200005110f6 : xor ebx, ebx ; jmp 0x200005110c0
0x00000200004f0a48 : xor ebx, ebx ; mov al, bl ; add rsp, 0x20 ; pop rbx ; ret
0x00000200005f5d40 : xor ebx, ebx ; mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x00000200006802e5 : xor ebx, ebx ; mov eax, ebx ; add rsp, 0x30 ; pop rbx ; ret
0x00000200003dd9e0 : xor ebx, ebx ; mov qword ptr [rbp - 0x48], rbx ; call r14
0x000002000051b18c : xor ebx, ebx ; mov rcx, qword ptr [rbp - 0x31] ; call 0x20000140389
0x00000200003e35f5 : xor ebx, ebx ; test rax, rax ; je 0x200003e35ce ; call rax
0x0000020000030e39 : xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x000002000011fd4b : xor ecx, dword ptr [rax + 0x2b] ; ror byte ptr [rax - 0x75], 1 ; ret 0x2348
0x00000200001af1dd : xor ecx, dword ptr [rax - 0x75] ; add eax, 0x123293 ; call rax
0x000002000017759b : xor ecx, dword ptr [rax - 0x75] ; and byte ptr [r13 - 0x75], r9b ; ret
0x00000200003bec3c : xor ecx, dword ptr [rax - 0x75] ; je 0x200003bec6d ; cmp byte ptr [rax - 0x75], cl ; ret
0x000002000016374e : xor ecx, dword ptr [rax - 0x75] ; ret
0x00000200001359f6 : xor ecx, dword ptr [rax - 0x7d] ; ret
0x0000020000616f02 : xor ecx, dword ptr [rax - 0x7d] ; ret 0xe806
0x00000200001fb558 : xor ecx, dword ptr [rax - 0x7d] ; ret 0xff0
0x0000020000010601 : xor ecx, dword ptr [rcx - 0x7f] ; ret 0x1660
0x00000200004f8929 : xor ecx, dword ptr [rcx] ; add byte ptr [rcx + 3], cl ; ret
0x00000200003ed205 : xor ecx, eax ; mov eax, r9d ; ret
0x000002000041e9cc : xor ecx, ecx ; call 0x20000045859
0x00000200004252b6 : xor ecx, ecx ; call 0x2000004585a
0x0000020000424360 : xor ecx, ecx ; call 0x20000050275
0x00000200001ddfc9 : xor ecx, ecx ; call 0x20000091d19
0x0000020000181d60 : xor ecx, ecx ; call 0x2000009e034
0x000002000049a323 : xor ecx, ecx ; call 0x200000bc565
0x00000200000d523d : xor ecx, ecx ; call 0x200000d1504
0x0000020000195d85 : xor ecx, ecx ; call 0x200000d1fa4
0x00000200005d8c92 : xor ecx, ecx ; call 0x200000d3a08
0x000002000039f386 : xor ecx, ecx ; call 0x20000109f09
0x00000200006364d4 : xor ecx, ecx ; call 0x200001327c8
0x00000200001adc0b : xor ecx, ecx ; call 0x200001adb49
0x00000200005c042e : xor ecx, ecx ; call 0x200001eca2d
0x0000020000595295 : xor ecx, ecx ; call 0x200003b14a4
0x000002000016f049 : xor ecx, ecx ; call qword ptr [rax]
0x00000200006aa3d0 : xor ecx, ecx ; call qword ptr [rip - 0x3dac50]
0x0000020000598005 : xor ecx, ecx ; call qword ptr [rsi]
0x000002000022828d : xor ecx, ecx ; call r10
0x00000200000ebc79 : xor ecx, ecx ; call r14
0x000002000063ef25 : xor ecx, ecx ; call r8
0x00000200001fd911 : xor ecx, ecx ; call r9
0x000002000010c60a : xor ecx, ecx ; call rax
0x0000020000127b06 : xor ecx, ecx ; call rdx
0x000002000041c349 : xor ecx, ecx ; jmp 0x20000058614
0x000002000064b63a : xor ecx, ecx ; jmp rax
0x00000200005a1259 : xor ecx, ecx ; lea ecx, dword ptr [rax + 0x1c] ; call r10
0x00000200001fdd84 : xor ecx, ecx ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200001b6e99 : xor ecx, ecx ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x00000200001e318c : xor ecx, ecx ; mov eax, r9d ; ret
0x000002000016f042 : xor ecx, ecx ; mov edx, 0xffc6c6c6 ; xor ecx, ecx ; call qword ptr [rax]
0x000002000013e93b : xor ecx, ecx ; mov qword ptr [rsp + 0x70], rax ; call r11
0x000002000049a2af : xor ecx, ecx ; mov r15d, eax ; call 0x200000bc568
0x00000200006574af : xor ecx, ecx ; mov rax, rcx ; ret
0x000002000022e3a5 : xor ecx, ecx ; mov rax, rdx ; jmp 0x2000022e3b2
0x000002000022e3a4 : xor ecx, ecx ; mov rax, rdx ; jmp 0x2000022e3b3
0x00000200004c0d7f : xor ecx, ecx ; mov rdx, r14 ; call 0x200000e28ac
0x00000200006b5364 : xor ecx, ecx ; test rax, rax ; jne 0x200006b5373 ; ret
0x00000200004c7816 : xor ecx, ecx ; xor r8d, r8d ; call 0x200000ec74c
0x0000020000152e1b : xor ecx, ecx ; xor r8d, r8d ; mov rcx, r10 ; call r10
0x000002000015305b : xor ecx, ecx ; xor r8d, r8d ; mov rcx, r11 ; call r11
0x00000200006b3980 : xor ecx, ecx ; xor r8d, r8d ; xor edx, edx ; call 0x200000cfb99
0x00000200004880eb : xor ecx, edi ; ret
0x000002000013da54 : xor ecx, edx ; jmp rax
0x0000020000016e7d : xor ecx, esp ; call 0x20000133184
0x000002000050353e : xor ecx, esp ; call 0x20000133185
0x00000200001fdd83 : xor ecx, r9d ; mov dword ptr [r8], ecx ; xor eax, eax ; ret
0x00000200006d944a : xor edi, dword ptr [rdi + 0x58b48ff] ; or al, 0xa5 ; ret 0x48ff
0x00000200006d94df : xor edi, dword ptr [rdi + 0x58b48ff] ; scasd eax, dword ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48ff
0x00000200006a8dd0 : xor edi, eax ; ret
0x00000200003aad0a : xor edi, ebp ; dec dword ptr [rdi] ; xchg eax, ebp ; ret
0x000002000011bafd : xor edi, edi ; call 0x200000628b9
0x000002000010c32d : xor edi, edi ; call 0x200000c36c6
0x00000200004ee411 : xor edi, edi ; call 0x20000117eb9
0x000002000002bb66 : xor edi, edi ; jmp 0x2000002bb30
0x00000200005ca76c : xor edi, edi ; jmp 0x200004d69cf
0x00000200001a5935 : xor edi, edi ; lea ecx, dword ptr [rdi + 5] ; call 0x20000061bb7
0x0000020000065abf : xor edi, edi ; ret
0x00000200001f4597 : xor edi, edi ; ret 0xbe49
0x000002000020afc2 : xor edx, 0xc48348ff ; push rax ; pop rbx ; ret
0x000002000020ade5 : xor edx, 0xffffffff ; add rsp, 0x60 ; pop rbx ; ret
0x000002000020ae62 : xor edx, 0xffffffff ; add rsp, 0x68 ; ret
0x0000020000740c83 : xor edx, dword ptr [rdx] ; mov dword ptr [r10], ecx ; mov rcx, r10 ; jmp rcx
0x0000020000450fd5 : xor edx, dword ptr [rip + 0x428b4100] ; adc al, 0x2b ; ret 0x341
0x00000200006da089 : xor edx, dword ptr [rsi + 0x58bff9e] ; movsd dword ptr [rdi], dword ptr [rsi] ; cwde ; ret 0x44ff
0x000002000007bb38 : xor edx, eax ; mov dword ptr [rcx + 0x6c0], edx ; ret
0x00000200000d93a1 : xor edx, eax ; mov qword ptr [rcx + 0x18], rdx ; ret
0x0000020000064af6 : xor edx, eax ; xchg dword ptr [rcx + 0x318], edx ; ret
0x0000020000513149 : xor edx, ebx ; ret 0x85ff
0x00000200003edcca : xor edx, ecx ; mov eax, r10d ; ret
0x0000020000539d1a : xor edx, edx ; add rcx, rax ; call 0x200000c5f57
0x000002000043ef32 : xor edx, edx ; and qword ptr [rsp + 0x20], 0 ; call r11
0x0000020000008251 : xor edx, edx ; call 0x2000000a359
0x00000200004247e2 : xor edx, edx ; call 0x20000045781
0x00000200000fad87 : xor edx, edx ; call 0x20000056fc4
0x00000200001d890d : xor edx, edx ; call 0x20000064b24
0x000002000039bd3a : xor edx, edx ; call 0x20000067f60
0x000002000049faa1 : xor edx, edx ; call 0x200000c0795
0x00000200001e6580 : xor edx, edx ; call 0x200000c2844
0x00000200004977c6 : xor edx, edx ; call 0x200000c2845
0x00000200004991c6 : xor edx, edx ; call 0x200000c2846
0x000002000003ceb2 : xor edx, edx ; call 0x200000c5f58
0x0000020000071dc3 : xor edx, edx ; call 0x200000c5f59
0x0000020000673976 : xor edx, edx ; call 0x200000cfb94
0x00000200004a4cd2 : xor edx, edx ; call 0x200000cfb95
0x00000200005f67d1 : xor edx, edx ; call 0x200000cfb98
0x0000020000423491 : xor edx, edx ; call 0x200000cfb99
0x00000200000c5521 : xor edx, edx ; call 0x200000d17b4
0x00000200004c91ba : xor edx, edx ; call 0x200000ed5a5
0x00000200005d3f45 : xor edx, edx ; call 0x200001401e4
0x00000200005b329d : xor edx, edx ; call 0x2000014f4c4
0x00000200005240d5 : xor edx, edx ; call 0x2000014f4c5
0x00000200005799ee : xor edx, edx ; call 0x200001a6b61
0x0000020000414db3 : xor edx, edx ; call 0x20000231014
0x00000200006010a1 : xor edx, edx ; call 0x20000231015
0x0000020000602683 : xor edx, edx ; call 0x20000231016
0x0000020000602682 : xor edx, edx ; call 0x20000231017
0x00000200004bd4dd : xor edx, edx ; call 0x20000231018
0x0000020000047397 : xor edx, edx ; call 0x20000231019
0x00000200005e3bf5 : xor edx, edx ; call 0x2000053fe9c
0x0000020000588d80 : xor edx, edx ; call 0x20000635030
0x00000200004cbb43 : xor edx, edx ; call qword ptr [rdi]
0x000002000015f94a : xor edx, edx ; call r10
0x000002000010b393 : xor edx, edx ; call r8
0x000002000010b30f : xor edx, edx ; call r9
0x00000200001846ca : xor edx, edx ; call rax
0x000002000015d3b5 : xor edx, edx ; div rcx ; mov rax, rdx ; ret
0x0000020000120af9 : xor edx, edx ; jmp 0x20000120ac3
0x000002000077cdf3 : xor edx, edx ; jmp 0x20000767e48
0x0000020000776fd2 : xor edx, edx ; lea ecx, dword ptr [rdx + 3] ; call 0x200000432c3
0x0000020000573259 : xor edx, edx ; lea r8d, dword ptr [rdx + 0x38] ; call 0x2000014f4c8
0x0000020000427d0d : xor edx, edx ; lea rcx, qword ptr [rbp + 0x20] ; call 0x20000057229
0x000002000060748b : xor edx, edx ; lea rcx, qword ptr [rbp - 0x60] ; call 0x200000c36c8
0x00000200000b3282 : xor edx, edx ; lea rcx, qword ptr [rbx + rax] ; call 0x2000014f4c8
0x00000200006c0aae : xor edx, edx ; mov eax, r10d ; ret
0x000002000019bdea : xor edx, edx ; mov eax, r8d ; div ecx ; ret
0x000002000050e3eb : xor edx, edx ; mov ebp, eax ; call 0x20000135bf3
0x0000020000597ffe : xor edx, edx ; mov qword ptr [rsp + 0x20], r15 ; xor ecx, ecx ; call qword ptr [rsi]
0x00000200005269de : xor edx, edx ; mov r8d, ebx ; call 0x2000014f4c8
0x0000020000230c9a : xor edx, edx ; mov rax, qword ptr [rax + 0x238] ; jmp rax
0x000002000056d634 : xor edx, edx ; mov rcx, qword ptr [rbp + 0x68] ; call r14
0x0000020000663272 : xor edx, edx ; mov rcx, qword ptr [rbx + 0x28] ; call 0x2000014f4c8
0x000002000060aebf : xor edx, edx ; mov rcx, r10 ; call 0x20000231018
0x00000200004265c0 : xor edx, edx ; mov rcx, r12 ; call 0x200000c2847
0x000002000060a9cb : xor edx, edx ; mov rcx, r12 ; call 0x20000231018
0x000002000049473d : xor edx, edx ; mov rcx, r13 ; call 0x200000c2848
0x0000020000500d45 : xor edx, edx ; mov rcx, r13 ; call 0x2000012f9b8
0x0000020000609c21 : xor edx, edx ; mov rcx, r13 ; call 0x20000231018
0x00000200005cfc8c : xor edx, edx ; mov rcx, r13 ; call r15
0x000002000057a91e : xor edx, edx ; mov rcx, r14 ; call 0x200001a6b63
0x0000020000579ac4 : xor edx, edx ; mov rcx, r14 ; call 0x200001a6b64
0x0000020000084d64 : xor edx, edx ; mov rcx, r14 ; call 0x20000231017
0x0000020000608a04 : xor edx, edx ; mov rcx, r14 ; call 0x20000231018
0x000002000057ac6c : xor edx, edx ; mov rcx, r15 ; call 0x200001a6b64
0x00000200006071ca : xor edx, edx ; mov rcx, r15 ; call 0x20000231018
0x0000020000608859 : xor edx, edx ; mov rcx, r9 ; call 0x20000231018
0x00000200006531c3 : xor edx, edx ; mov rcx, rax ; call 0x2000014f4c7
0x0000020000520559 : xor edx, edx ; mov rcx, rax ; call 0x2000014f4c8
0x0000020000494d8b : xor edx, edx ; mov rcx, rax ; call 0x20000231017
0x000002000060aeab : xor edx, edx ; mov rcx, rax ; call 0x20000231018
0x00000200004ccd4c : xor edx, edx ; mov rcx, rbx ; call 0x200000f539c
0x000002000052ea69 : xor edx, edx ; mov rcx, rbx ; call 0x2000014f4c8
0x00000200005c4d31 : xor edx, edx ; mov rcx, rbx ; call 0x20000231017
0x000002000060357d : xor edx, edx ; mov rcx, rbx ; call 0x20000231018
0x00000200004341de : xor edx, edx ; mov rcx, rdi ; call 0x20000056fc8
0x00000200004c0a06 : xor edx, edx ; mov rcx, rdi ; call 0x200000e285c
0x00000200004c2bdd : xor edx, edx ; mov rcx, rdi ; call 0x200000e88d4
0x00000200004131ce : xor edx, edx ; mov rcx, rdi ; call 0x2000014f4c7
0x0000020000494dd0 : xor edx, edx ; mov rcx, rdi ; call 0x20000231017
0x00000200006037a1 : xor edx, edx ; mov rcx, rdi ; call 0x20000231018
0x0000020000519a7c : xor edx, edx ; mov rcx, rdi ; call r14
0x000002000053fb99 : xor edx, edx ; mov rcx, rsi ; call 0x200000bd3e5
0x000002000063320b : xor edx, edx ; mov rcx, rsi ; call 0x2000014f4c7
0x000002000052ada2 : xor edx, edx ; mov rcx, rsi ; call 0x2000014f4c8
0x0000020000614d74 : xor edx, edx ; mov rcx, rsi ; call 0x20000231017
0x000002000060108d : xor edx, edx ; mov rcx, rsi ; call 0x20000231018
0x00000200005e1801 : xor edx, edx ; mov rcx, rsi ; call 0x2000047dacf
0x0000020000527e73 : xor edx, edx ; sub eax, dword ptr [rcx + 0xc] ; div dword ptr [rcx + 8] ; ret
0x0000020000401023 : xor edx, edx ; test rax, rax ; jne 0x20000401035 ; mov al, dl ; ret
0x0000020000401023 : xor edx, edx ; test rax, rax ; jne 0x20000401036 ; mov al, dl ; ret
0x0000020000195d83 : xor edx, edx ; xor ecx, ecx ; call 0x200000d1fa6
0x00000200005c042c : xor edx, edx ; xor ecx, ecx ; call 0x200001eca2f
0x0000020000114436 : xor edx, edx ; xor ecx, ecx ; call rax
0x000002000049920c : xor edx, edx ; xor r8d, r8d ; call 0x200000c2848
0x0000020000029d2b : xor edx, edx ; xor r8d, r8d ; call 0x200000c5f57
0x000002000007bb37 : xor edx, r8d ; mov dword ptr [rcx + 0x6c0], edx ; ret
0x00000200000945d1 : xor esi, 0xffffffff ; dec dword ptr [rax - 9] ; ret
0x000002000003c0b9 : xor esi, dword ptr [rax + rax] ; call rax
0x0000020000518557 : xor esi, dword ptr [rbp + rax - 0x7c] ; ror byte ptr [rdi], cl ; xchg eax, esp ; ret 0x349
0x0000020000030e37 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x000002000011fd49 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x2b] ; ror byte ptr [rax - 0x75], 1 ; ret 0x2348
0x00000200001ef5b9 : xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x75] ; ret
0x00000200001f4595 : xor esi, dword ptr [rbx] ; xor edi, edi ; ret 0xbe49
0x0000020000030e35 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x00000200001ef5b7 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x75] ; ret
0x00000200001f4593 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor edi, edi ; ret 0xbe49
0x0000020000030e33 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax + 0x23] ; ret 0x2348
0x00000200001ef5b5 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor ecx, dword ptr [rax - 0x75] ; ret
0x00000200001f4591 : xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor esi, dword ptr [rbx] ; xor edi, edi ; ret 0xbe49
0x0000020000188572 : xor esi, ecx ; push rsi ; ret
0x000002000018d235 : xor esi, edx ; dec dword ptr [rcx - 0x75] ; sbb byte ptr [r8 - 0x7b], r9b ; ret
0x000002000042ac37 : xor esi, esi ; call 0x2000004e19d
0x00000200006773f3 : xor esi, esi ; call 0x200000c36c4
0x000002000016508d : xor esi, esi ; jmp 0x2000003a52d
0x0000020000489de7 : xor esi, esi ; jmp 0x20000489db0
0x00000200006880b5 : xor esi, esi ; jmp 0x200006880cb
0x000002000068846a : xor esi, esi ; jmp 0x20000688480
0x0000020000683ae7 : xor esi, esi ; mov edi, r14d ; jmp 0x20000683afb
0x000002000064ed5f : xor esi, esi ; ret
0x00000200004458e8 : xor esp, 0x49004453 ; add ecx, ecx ; jmp rcx
0x0000020000097b4b : xor esp, 0x8349000e ; ret 0x4d08
0x000002000056294c : xor esp, dword ptr [rcx] ; out 0xff, al ; mov rcx, rbp ; call 0x2000004ec21
0x000002000015ac61 : xor esp, dword ptr [rdx] ; add bh, bh ; ret
0x000002000073ab6f : xor esp, esp ; mov rax, rdx ; jmp 0x2000073ab7c
0x000002000019f832 : xor qword ptr [r13 + 0xb], 0xffffffffe8cc8b49 ; ret 0x29f3
0x0000020000009bba : xor qword ptr [r9 + 0x18], rax ; ret
0x00000200000d8ae1 : xor qword ptr [rcx + 0x18], r9 ; ret
0x00000200006c0aad : xor r10d, r10d ; mov eax, r10d ; ret
0x00000200003edcc9 : xor r10d, r9d ; mov eax, r10d ; ret
0x00000200000f707f : xor r11b, bpl ; ret
0x000002000010fae9 : xor r11d, r11d ; jmp 0x2000010fab5
0x000002000049ad00 : xor r12b, r12b ; call 0x200000c3086
0x000002000073ab6e : xor r12d, r12d ; mov rax, rdx ; jmp 0x2000073ab7d
0x000002000016c13b : xor r13d, r13d ; jmp 0x2000010171d
0x00000200006880b4 : xor r14d, r14d ; jmp 0x200006880cc
0x0000020000688469 : xor r14d, r14d ; jmp 0x20000688481
0x00000200001e3044 : xor r15b, dil ; ret 0x533b
0x000002000049aef0 : xor r15b, r15b ; call 0x200000c3086
0x00000200006d94de : xor r15d, dword ptr [rdi + 0x58b48ff] ; scasd eax, dword ptr [rdi] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x48ff
0x00000200001f7cf2 : xor r8, rax ; cmp r10, r11 ; jb 0x200001f7cdf ; ret
0x0000020000405867 : xor r8b, bpl ; ret 0xfc04
0x000002000019370c : xor r8b, bpl ; ret 0xfff2
0x00000200004a00a5 : xor r8b, bpl ; test byte ptr [rdx], bl ; ret 0xf7ff
0x00000200003e544e : xor r8b, r13b ; mov bl, 0x9f ; ret
0x00000200004e78e6 : xor r8b, r13b ; ret
0x0000020000505287 : xor r8b, r13b ; ret 0xc164
0x00000200000740b0 : xor r8b, r8b ; ret
0x00000200005dd424 : xor r8d, r8d ; call 0x20000089715
0x000002000049920e : xor r8d, r8d ; call 0x200000c2846
0x0000020000029d2d : xor r8d, r8d ; call 0x200000c5f55
0x00000200004c7818 : xor r8d, r8d ; call 0x200000ec74a
0x0000020000512879 : xor r8d, r8d ; call 0x20000140da6
0x0000020000527a58 : xor r8d, r8d ; jmp 0x20000527a24
0x00000200004cbb3c : xor r8d, r8d ; lea rcx, qword ptr [rbp - 0x59] ; xor edx, edx ; call qword ptr [rdi]
0x000002000056064d : xor r8d, r8d ; mov cl, 0x1b ; call rax
0x00000200005dc88c : xor r8d, r8d ; mov cl, bpl ; call rsi
0x000002000011c15c : xor r8d, r8d ; mov dword ptr [rcx + 0x50], eax ; mov eax, r8d ; ret
0x0000020000124ad1 : xor r8d, r8d ; mov eax, r8d ; inc qword ptr [rdx + rax*8] ; ret
0x00000200001362b9 : xor r8d, r8d ; mov eax, r8d ; ret
0x0000020000152e1d : xor r8d, r8d ; mov rcx, r10 ; call r10
0x000002000015305d : xor r8d, r8d ; mov rcx, r11 ; call r11
0x000002000049586f : xor r8d, r8d ; mov rcx, rbp ; call 0x200000b8ea9
0x00000200004065f7 : xor r8d, r8d ; mov rcx, rbx ; call 0x200000c2848
0x0000020000203d7b : xor r8d, r8d ; mov rcx, rdi ; mov rdx, rbx ; call rsi
0x0000020000493bd7 : xor r8d, r8d ; mov rcx, rsi ; call 0x200000b8ea9
0x0000020000595005 : xor r8d, r8d ; mov rdx, r14 ; mov rcx, r15 ; call rax
0x0000020000042993 : xor r8d, r8d ; mov rdx, rbx ; mov rcx, rdi ; call rsi
0x000002000016f372 : xor r8d, r8d ; mov rdx, rsi ; call rax
0x00000200001f448b : xor r8d, r8d ; test r8, r8 ; jne 0x200001f4458 ; ret
0x0000020000488274 : xor r8d, r8d ; test rcx, rcx ; jne 0x20000488285 ; ret
0x0000020000498e30 : xor r8d, r8d ; xor edx, edx ; call 0x200000c2848
0x00000200006b3982 : xor r8d, r8d ; xor edx, edx ; call 0x200000cfb97
0x00000200004a4ccf : xor r8d, r8d ; xor edx, edx ; call 0x200000cfb98
0x000002000010b30c : xor r8d, r8d ; xor edx, edx ; call r9
0x00000200001846c7 : xor r8d, r8d ; xor edx, edx ; call rax
0x0000020000195d80 : xor r8d, r8d ; xor edx, edx ; xor ecx, ecx ; call 0x200000d1fa9
0x00000200006304a2 : xor r9b, r9b ; mov al, r9b ; ret
0x00000200003ed204 : xor r9d, r8d ; mov eax, r9d ; ret
0x00000200005a15f1 : xor r9d, r9d ; call r10
0x000002000041c348 : xor r9d, r9d ; jmp 0x20000058615
0x00000200005a1258 : xor r9d, r9d ; lea ecx, dword ptr [rax + 0x1c] ; call r10
0x00000200001b6e98 : xor r9d, r9d ; mov dword ptr [rdx], r9d ; xor al, al ; ret
0x00000200001e318b : xor r9d, r9d ; mov eax, r9d ; ret
0x00000200004c0d7e : xor r9d, r9d ; mov rdx, r14 ; call 0x200000e28ad
0x00000200006b5363 : xor r9d, r9d ; test rax, rax ; jne 0x200006b5374 ; ret
0x0000020000171721 : xor rax, r9 ; mov rcx, rax ; call rdx
0x000002000013341a : xor rax, rax ; ret
0x000002000013da50 : xor rax, rdx ; xor rcx, rdx ; jmp rax
0x00000200005ba31a : xor rbx, rax ; mov r8, rbx ; call 0x200001de4d9
0x000002000013da53 : xor rcx, rdx ; jmp rax
0x0000020000016e7c : xor rcx, rsp ; call 0x20000133185
0x00000200003b6e98 : xor rcx, rsp ; call 0x20000133186
0x00000200003b6e97 : xor rcx, rsp ; call 0x20000133187
0x00000200005037a6 : xor rcx, rsp ; call 0x20000133188
0x000002000020b02e : xor rdx, 0xffffffffc48348ff ; push rax ; pop rbx ; ret
0x0000020000740c82 : xor rdx, qword ptr [r10] ; mov dword ptr [r10], ecx ; mov rcx, r10 ; jmp rcx
0x00000200000d93a0 : xor rdx, r8 ; mov qword ptr [rcx + 0x18], rdx ; ret
0x00000200005240ea : xor rdx, rdx ; call 0x2000014f4c6
0x000002000003bf3a : xrstor ptr [rcx] ; mov dword ptr [rcx + 0x18], r8d ; ret
0x000002000003bf49 : xrstor ptr [rcx] ; ret

Unique gadgets found: 57664
